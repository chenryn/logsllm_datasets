title:LAP: Lightweight Anonymity and Privacy
author:Hsu-Chun Hsiao and
Tiffany Hyun-Jin Kim and
Adrian Perrig and
Akira Yamada and
Samuel C. Nelson and
Marco Gruteser and
Wei Meng
2012 IEEE Symposium on Security and Privacy
LAP: Lightweight Anonymity and Privacy
Hsu-Chun Hsiao†
Tiffany Hyun-Jin Kim†
Adrian Perrig†
Akira Yamada‡
†CyLab/CMU
Samuel C. Nelson§
‡KDDI Labs
Marco Gruteser§
§Rutgers University
Wei Meng(cid:2)
(cid:2)Tsinghua University
Abstract—Popular anonymous communication systems often
require sending packets through a sequence of relays on dilated
paths for strong anonymity protection. As a result, increased
end-to-end latency renders such systems inadequate for the
majority of Internet users who seek an intermediate level of
anonymity protection while using latency-sensitive applications,
such as Web applications. This paper serves to bridge the gap
between communication systems that provide strong anonymity
protection but with intolerable latency and non-anonymous
communication systems by considering a new design space
for the setting. More speciﬁcally, we explore how to achieve
near-optimal latency while achieving an intermediate level of
anonymity with a weaker yet practical adversary model (i.e.,
protecting an end-host’s identity and location from servers)
such that users can choose between the level of anonymity
and usability. We propose Lightweight Anonymity and Privacy
(LAP), an efﬁcient network-based solution featuring lightweight
path establishment and stateless communication, by concealing
an end-host’s topological location to enhance anonymity against
remote tracking. To show practicality, we demonstrate that
LAP can work on top of the current Internet and proposed
future Internet architectures.
I. INTRODUCTION
to conceal
Staying anonymous in today’s Internet requires anony-
mous overlay systems, such as Tor [1],
the
communicating endpoint’s IP address, as it can reveal the
end-user’s identity and location [2]. Such overlay systems
attempt to facilitate anonymous communication using layer-
encrypted packets traveling through indirect routes. How-
ever, this results in additional latency due to long end-to-end
path length and cryptographic operations indirectly traveling
through three Tor relays would be approximately four times
slower than traveling along a non-dilated path. Moreover,
Tor relays are constantly overloaded [3], further worsening
the latency and throughput. Measurements show that the
average time to fetch an HTTP header using Tor is 4.04s —
ten times higher than fetching it without Tor [4]. Although
privacy-anxious users may tolerate seconds of latency for
strong privacy, users desiring an intermediate level of privacy
for default protection of daily online activities (e.g., prevent
websites from tracking them for behavioral advertising1)
Attack class
No anonymity protection
End-server
LAP
Lightweight anonymity
Low-latency anonymity
High-latency anonymity
Government
class
Global
eavesdropper
Tor [1]
Optimal solution
Mix network [8]
Latency
Figure 1. The design space of anonymous schemes.
may be impatient to wait.2
Despite existing work that attempts to protect end-users’
anonymity [1], [7], [8], it still remains a challenge to provide
an intermediate level of anonymity and privacy protection
without introducing much latency. In this paper, our main
goal is to bridge the chasm between systems that provide
strong anonymity with high latency and systems that support
no anonymity with zero latency, and explore how to support
lightweight anonymity and privacy that is efﬁcient enough
to protect all trafﬁc. Note that those end-users who want
an intermediate level of privacy primarily desire to remain
anonymous from servers such that servers cannot
track
their behavior. This implies that guaranteeing the end-user’s
anonymity and privacy against a single remote entity rather
than a strong, global attacker may be a suitable relaxation
of the attacker model to gain higher efﬁciency.
We propose a new setting that we call Lightweight
Anonymity and Privacy (LAP-setting for short) for private
and anonymous communication in the Internet with the
following properties:
• Low-stretch anonymity: packets for anonymous and
private communication should travel
through near-
optimal routes such that the increase in the number
of Autonomous Domains (ADs) normalized over the
original path length is low.
• Relaxed attacker model: an intermediate level of
privacy can be achieved with sender and receiver
anonymity and location privacy. Hence, we relax the
strong attacker model (e.g., global or government-class
1Users might enable the DO-NOT-TRACK option supported by most
mainstream browsers. However, a recent study [5] has shown that this
mechanism is hard to use due to conﬁguration complexity and provides
no guarantee as it depends on the self-regulation of online organizations.
2Studies have shown that online users are sensitive to waiting time:
Amazon’s sales dropped by 1% for every 100ms increase in page load
time, and Google’s ad revenue decreased by 20% for a 500ms increase in
search result display time [6].
© 2012, Hsu-Chun Hsiao. Under license to IEEE.
DOI 10.1109/SP.2012.37
506
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:49:13 UTC from IEEE Xplore.  Restrictions apply. 
attackers) considered by existing anonymity systems.
As Figure 1 shows, our aim is to address a relaxed attacker
model (e.g., end-server attack) with near-optimal latency
while existing work addresses stronger attacker models
(e.g., government class or global eavesdropper) with higher
latency. Although low-latency designs are shown to be
inherently vulnerable to a global eavesdropper, some users
who trust their local ISPs can achieve much higher efﬁciency
under the LAP-setting.
Our mechanism, Lightweight Anonymity and Privacy
(LAP), is an efﬁcient and practical network-based solution
featuring lightweight path establishment and efﬁcient com-
munication. LAP attempts to enhance anonymity by obscur-
ing an end-host’s topological location, based on two building
blocks: packet-carried forwarding state, and forwarding-state
encryption.
• Packet-carried forwarding state: each packet carries
its own forwarding state such that ADs can determine
the next hop from the packet without keeping local per-
ﬂow state.
• Forwarding-state encryption: existing anonymity sys-
tems require entire packets to be decrypted/encrypted
as they travel using shared keys between the sender
and intermediate relays. In contrast, LAP allows each
AD to use a secret key (known to the AD only)
to encrypt/decrypt forwarding information in packet
headers. As a result, an AD’s forwarding information
can be hidden from all other entities while a LAP
packet remains the same at each hop.
LAP is extremely lightweight
in the sense that (i) it
introduces minimal overhead over non-anonymous packets
in terms of latency and computational overhead on routers,
(ii) it does not require any per-ﬂow state to be stored on
routers, and (iii) no separate keys are required to be set
up with routers. In addition to its performance advantages,
LAP’s unique design provides two additional merits. First,
LAP supports different privacy levels such that an end-host
can trade privacy for improved performance. Second, LAP is
a generic design that can work with a wide range of routing
protocols, which includes the inter-domain routing protocol
BGP and new proposals such as SCION [9] and Mobility-
First [10]. Furthermore, we show that LAP ﬁts especially
well with proposed routing protocols that support packet-
carried forwarding state, such as SCION and ICING [11].
In this paper we focus on network-based solutions, where
users and locations can be identiﬁed through IP addresses.
While most current end-host tracking is implemented via
cookies [12] and applications may as well leak identiﬁable
information such as email addresses or browser conﬁgura-
tions, IP addresses have been used as an alternate identiﬁer
when such auxiliary information like cookies is unavail-
able [13]. Hence, a complete solution for anonymous com-
munication must
integrate network-layer techniques with
mechanisms for other layers, as recognized by previous
network-based proposals [7], [14].
Contributions.
1) We explore the design space of anonymous protocols
in the context of a relaxed adversary model.
2) We propose Lightweight Anonymity and Privacy
(LAP), an efﬁcient network-based solution that en-
ables lightweight path establishment and efﬁcient for-
warding.
3) We evaluate LAP’s security and performance advan-
tages. Our systematic analysis and the evaluation of
our software implementation conﬁrm that LAP can
improve anonymity with low performance overhead.
II. PROBLEM DEFINITION
We study how to camouﬂage an end-host’s topological lo-
cation (i.e., potential origin within a given topological neigh-
borhood) in a network architecture to enhance anonymity
and location privacy in a practical manner. More speciﬁcally,
we study how to design an anonymous forwarding protocol
that can protect the identities and locations of end-hosts from
a weaker yet practical adversary, while demanding minimal
increase in latency. We do not claim to achieve complete
anonymity, but rather focus on providing an intermediate
level of anonymity.
In this section, we scope our problem in terms of desired
properties, assumptions, and threat model.
A. Desired Privacy Properties
Sender/receiver anonymity. Anonymity can be viewed
as being unidentiﬁable within a set of subjects (e.g., users),
also known as an anonymity set [15]. This implies that a
sender or a receiver can achieve stronger anonymity if its
identity is hidden in a larger anonymity set [16].3 As a
result, an attacker cannot link the sender and receiver if
either sender anonymity or receiver anonymity is achieved.
Since the design of a full anonymous communication system
that can defend against timing attacks and conceal unique
platform characteristics is beyond the scope of this paper,
we focus on concealing an end-host’s network identiﬁer and
location in the network topology (which we call “topological
anonymity”), which is an important step towards improving
sender/receiver anonymity. For simplicity in expression,
we also abbreviate “topological anonymity” simply with
“anonymity” in the paper.
Session unlinkability.
Session unlinkability prevents an
attacker from linking a user’s activities over time. We want
3As Syverson points out, the anonymity set is insufﬁcient to analyze
complete sender/receiver anonymity as a thorough analysis with realistic at-
tacker strategies is appropriate [17]. However, we believe that the anonymity
set is a tangible metric for evaluating topological anonymity that we aim
to achieve in this paper, and we leave it as future work to address various
attacker strategies.
507
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:49:13 UTC from IEEE Xplore.  Restrictions apply. 
to ensure that given two packets from two different sessions,
an attacker cannot determine whether these packets are
associated with the same sender (or receiver).
Location privacy.
Location privacy is achieved when a
user conceals her geographical location so that an attacker
cannot track her whereabouts.
Privacy levels. We want to provide different levels of
privacy to end-hosts under end-server attacks in case they
are willing to trade privacy for improved performance [18].
In this paper, we consider conﬁdentiality of the packet
payload to be orthogonal to the scope of our work as data
conﬁdentiality can be achieved using end-to-end encryption.
Also, privacy leakage from higher layer protocols/payload
is outside the scope of this paper as such an issue can be
alleviated by existing tools such as Privoxy.4
B. Desired Performance Properties
to assure that
While providing an intermediate level of anonymity, we
want
the anonymity protection introduces
marginal overhead. Following are the desired performance
properties:
Low path stretch. We deﬁne path stretch as the increase
in the number of AD hops normalized over the original (or
non-anonymity) path length. Since the latency increases as
the number of intermediate hops increase on the path, it is
desirable to minimize path stretch.
Low performance overhead. We want to minimize cryp-
tographic overhead, especially asymmetric operations and
packet decryption and re-encryption at each hop.
Minimal state.
To avoid the state explosion problem, we
want to keep minimal or no per-ﬂow state to reduce the
attack surface and increase scalability.
C. Assumptions
We assume that an end-user trusts her ﬁrst-hop AD in the
sense that the ﬁrst-hop AD keeps its customers’ information
private and correctly performs anonymous forwarding pro-
tocols. This is aligned with the trust relationship in today’s
Internet since end-users place more trust on topologically
closer ADs and generally have more control over the choice
of their ﬁrst-hop ADs than over the other ADs on a routing
path. In case end-users do not trust their ﬁrst-hop ADs
and have no options to pick their own ADs, they may use
anonymity systems such as encrypted tunnel IPsec, Tor [1],
or anti-censorship systems [19].
We envision that ADs can control the amount of band-
width allocated for anonymous communication, thus limit-
ing the misuse of anonymous protocols, e.g., for sending
untraceable attack trafﬁc. We also assume that routers in
ADs support packet-carried forwarding states.
4http://www.privoxy.org/
D. Threat Model
An adversary’s goal
is to break the desired privacy
properties described in Section II-A to discover the identity
or location of a sender or a receiver of a given packet.
More speciﬁcally, we focus on topology attacks where an
attacker attempts to de-anonymize the sender (or receiver)
using topological location information in a given AD-level
topology, and leave it as future work to defend against timing
correlation attacks [20]–[23].
We consider a relaxed threat model with respect to the
attacker’s capability: the attacker can compromise any AD
except the ﬁrst-hop AD where the victim end-host resides.
Under this model, our primary attack case is an end-server
attack where a malicious server analyzes trafﬁc to it or
initiate communication with others. We also consider an
in-network attack where a malicious AD beyond the ﬁrst-
hop of the victim end-host leverages its cryptographic keys
to perform deep packet investigation or actively manipulate
(e.g., inject, delete, delay, and replay) packets. Malicious
servers and ADs can collude to share their knowledge base.
III. OVERVIEW: LAP
LAP is a lightweight protocol
to facilitate real-time,
bidirectional anonymous communication. In this section we
ﬁrst give a high-level overview of LAP, and explain how
end-hosts establish an encrypted path (e-path) and how ADs
forward packets along the e-path to achieve an intermediate
level of anonymity.
The core observation of this work is that encrypting path
information (i.e., concealing forwarding information in the
packet header) improves topological anonymity against an
adversary in the LAP-setting since the adversary cannot
retrieve the sender’s (or receiver’s) origin address from the
packet. Moreover, extending an encrypted path to a benign
AD increases the topological anonymity, simply because
there are more potential origins whose paths could route
through the AD. Extending an e-path beyond one hop
is desired because one-hop encryption offers insufﬁcient
topological anonymity, as we demonstrate in the preliminary
analysis (Section V). We also discuss in Section VII the level
of anonymity when the adversary appears at different places
on the e-path.
Background: network setting. We consider a network
consisting of Autonomous Domains (ADs) as the basic
principal of inter-domain routing; each of these ADs has