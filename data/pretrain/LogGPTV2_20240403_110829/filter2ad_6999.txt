title:YouSlow: a performance analysis tool for adaptive bitrate video streaming
author:Hyunwoo Nam and
Kyung-Hwa Kim and
Doru Calin and
Henning Schulzrinne
YouSlow: A Performance Analysis Tool for Adaptive Bitrate
Video Streaming
Hyunwoo Nam, Kyung-Hwa Kim and
Henning Schulzrinne
Columbia University
New York, NY
{hn2203, kk2515, hgs10}@columbia.edu
Bell Laboratories, Alcatel-Lucent
Doru Calin
Murray Hill, NJ
PI:EMAIL
ABSTRACT
Adaptive bitrate (ABR) technologies are being widely used
in today’s popular HTTP-based video streaming such as
YouTube and Netﬂix. Such a rate-switching algorithm em-
bedded in a video player is designed to improve video quality-
of-experience (QoE) by selecting an appropriate resolution
based on the analysis of network conditions while the video is
playing. However, a bad viewing experience is often caused
by the video player having diﬃculty estimating transit or
client-side network conditions accurately. In order to ana-
lyze the ABR streaming performance, we developed YouS-
low, a web browser plug-in that can detect and report live
buﬀer stalling events to our analysis tool. Currently, YouS-
low has collected more than 20,000 of YouTube video stalling
events over 40 countries.
Categories and Subject Descriptors
D.2.8 [Software Engineering]: Metrics—performance mea-
sures
Keywords
HTTP Video Streaming; Adaptive Bitrate Streaming (ABR);
Video Quality of Experience
1.
INTRODUCTION AND CHALLENGE
Today’s over-the-top (OTT) video streaming services de-
liver video contents to clients over HTTP. In the early ver-
sion of HTTP-based video streaming, a progressive down-
load mechanism was used, where the server pushes the con-
tent as quickly as possible when a client requests a video.
However, the major drawback is that all clients must down-
load videos at the same bitrate [1], regardless of network
conditions and performance of their devices. Several ABR
technologies such as Apple HTTP Live Streaming (HLS),
Microsoft IIS Smooth Streaming, Adobe HTTP Dynamic
Streaming and Dynamic Adaptive Streaming over HTTP
(DASH) have been introduced to resolve this issue. In ABR
Permission to make digital or hard copies of part or all of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage, and that copies bear this notice and the full ci-
tation on the ﬁrst page. Copyrights for third-party components of this work must be
honored. For all other uses, contact the owner/author(s). Copyright is held by the
author/owner(s).
SIGCOMM’14, August 17–22, 2014, Chicago, IL, USA.
ACM 978-1-4503-2836-4/14/08.
http://dx.doi.org/10.1145/2619239.2631433.
streaming, a video delivery node contains a set of segments
that encode the same content at multiple bitrates, so a video
player can adaptively select the appropriate bitrate based
upon network conditions and CPU capacity of the clients’
devices.
The self-adjusting mechanism aims to stream a video with-
out interruption in the highest bitrate possible. Currently,
video players select the best appropriate bitrates based on
playout buﬀer size and its own bandwidth estimator [1]. The
performance of ABR heuristic algorithm is directly related
to user-perceived video quality. If the network capacity is
overestimated, severe buﬀer stalling can occur by the video
player requesting a higher bitrate than what is actually avail-
able. On the other hand, a low quality of video can play if
the capacity is underestimated. Therefore, monitoring end-
user’s video QoE like the above is necessary for the analysis
of ABR streaming performance.
Several researchers have been trying to analyze ABR stream-
ing [2, 3]. Also, the performance study can be related to net-
work neutrality issues [4, 5]. Most work has been done mea-
suring video quality-of-service (QoS) metrics such as packet
throughput, packet loss, jitter and delay. They collected the
data from intermediate nodes (e.g., transit routers) between
clients and video delivery nodes. These measurements are
generally used to represent the impact on the video quality
level from the network operator’s point of view. Since they
do not directly reﬂect the end-user’s perceived video qual-
ity, we cannot simply use these metrics for ABR streaming
performance test. In order to address this issue, we intro-
duce YouSlow (“YouTube Too Slow!? - YouSlow”). This web
browser plug-in is designed to monitor buﬀer stalling events
while clients watch YouTube videos on Chrome browsers.
When a buﬀer stalling is detected, YouSlow automatically
reports the name of the local ISP the client is connected
to, the duration, and approximate location of the event to
our analysis tool. These collected data are then marked on
Google maps (e.g., region, country and state) on our website
for calculating statistics.
2. YOUSLOW OVERVIEW
Unlike the prior approaches, YouSlow obtains streaming
status directly from a video player embedded in a web browser.
Currently, YouSlow has been implemented in YouTube video
players and published in the Chrome web store. The plug-in
consists of Chrome extension content scripts [6] that allow
our JavaScript codes to automatically activate when clients
watch videos on YouTube’s website. It uses the YouTube
ActionScript 3.0 Player API [7] to access the video players
111Figure 1: Country maps and YouTube buﬀer stalling statistics on YouSlow website
embedded in Chrome browsers. Using the player API, YouS-
low dynamically monitors player status (e.g., not started,
ended, playing, paused, buffering and video cued) and
playback quality (e.g., small, medium, large, hd720, hd1080
and highres) while a video is playing. We plan to extend
our work to other popular video streaming services such as
Netﬂix. YouSlow is designed to report the following objec-
tives to our analysis tool.
• Initial buﬀering time: Measure start-up time from the
instant a play button is clicked until it actually starts to
play the video.
• Requested bitrates: Record bitrates requested from a
video player. There are two cases: purposely changed by
clients or automatically adjusted by ABR algorithms.
• Buﬀer stalling duration: Measure how long a client
• Approximate location of buﬀer stalling events and
local ISP information: An IP geolocation database1 is
used to pinpoint the approximate location of the event
and the name of local ISP.
experiences buﬀer stalling during a download.
No other data is collected such as what videos are watched
by clients or any account information. Through our web-
site2, clients can share their buﬀering experiences and com-
pare local ISPs in their neighborhoods. It is also useful for
network operators to analyze performance of their networks
by monitoring buﬀer stalling events in real time. An intro-
duction video can be found on YouTube3.
3. EVALUATION OF ABR STREAMING
To analyze ABR streaming performance, we calculate 1) how
long a buﬀer stalling event occurs for each bitrate during
a download, 2) how long HD bitrates are played during a
download, and 3) elapsed time from the instant a buﬀer
stalling event occurs until playback rate changes. This indi-
cates how well a video player adjusts bitrates without view-
ing interruption. For instance, if a video player changes
a bitrate from HD to SD resolution before buﬀer stalling
events occur, this means that the ABR heuristic algorithm
is performing an appropriate rate-switching in timely man-
ner.
1Maxmind GeoIP database - http://dev.maxmind.com/
2YouSlow - http://dyswis.cs.columbia.edu/youslow/
3https://www.youtube.com/watch?v=9cdOoOkDIi0
4. PRELIMINARY RESULTS
YouSlow has collected more than 20,000 YouTube buﬀer
stalling events over 40 countries. According to the database,
our key observations can be summarized as follows:
• Average watching duration per video session is 7 min 34 sec.
• Average buﬀer stalling duration as a fraction of the play
time per video session is 6.86%. 85.2% of the total events
experienced less than 5 sec of buﬀer stalling.
• Playback rate changes 2.25 times on average per video ses-
sion. Average buﬀer stalling duration for each bitrate per
video session is 2.59 sec.
• Playback rate statistics are highres (greater than 1080p -
0.017%), hd1080p (1.93%), hd720p (7.81%), 480p (26.91%),
360p (43.43%), 240p (16.17%) and tiny (smaller than
240p - 3.72%).
• United States (4.91 sec), South Korea (5.17 sec) and Eng-
land (11.28 sec) show shorter buﬀer stalling duration per
video session, compared to Sweden (18.65 sec), Malaysia
(22.56 sec) and Philippines (25.19 sec).
As more buﬀer stalling events are accumulated, we expect to
conduct a more meaningful empirical investigation of ABR
streaming.
5. REFERENCES
[1] S. Akhshabi, A. C. Begen, and C. Dovrolis, “An Experimental
Evaluation of Rate-adaptation Algorithms in Adaptive
Streaming over HTTP,” in Proceedings of the Second Annual
ACM Conference on Multimedia Systems, San Jose, CA, USA,
Feb. 2011.
[2] Google Video Quality Report. [Online]. Available:
http://www.google.com/get/videoqualityreport/
[3] R. Serral-Graci`a, E. Cerqueira, M. Curado, M. Yannuzzi,
E. Monteiro, and X. Masip-Bruin, “An Overview of Quality of
Experience Measurement Challenges for Video Applications in
IP Networks,” in Proceedings of the 8th International
Conference on Wired/Wireless Internet Communications,
Lulea, Sweden, Jun. 2010.
[4] M. Dischinger, M. Marcon, S. Guha, K. P. Gummadi,
R. Mahajan, and S. Saroiu, “Glasnost: Enabling End Users to
Detect Traﬃc Diﬀerentiation,” in Proceedings of the 7th
USENIX Conference on Networked Systems Design and
Implementation, San Jose, CA, Apr. 2010.
[5] Internet Tolls and the Case for Strong Net Neutrality. [Online].
Available: http://tinyurl.com/o4tpqz4
[6] Chrome Content Scripts. [Online]. Available:
https://developer.chrome.com/extensions/content scripts
[7] YouTube ActionScript 3.0 Player API. [Online]. Available:
https://developers.google.com/youtube/ﬂash api reference/
CountryAvg. durationAlgeria54Philippines25Bangladesh20Sweden18Indonesia12United Kingdom11South Korea5United States4Country and avg. buffer(cid:3)stalling duration (sec)(cid:3)(cid:3)Table shows partial results112