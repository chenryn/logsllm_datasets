trigger LTE paging requests to devices in which the subscriber
has installed the corresponding social network applications.
Facebook ‘Other’ message folder: Many Facebook [23] users
do not know about the ‘Other’ message folder (as shown in
Figure 4) in Facebook. Normally when a message is received
from a Facebook friend, it will be stored in the normal inbox
folder of that user. But messages from people who are not in
the friend list may be directed to the ‘Other’ folder. Further,
the user is not notiﬁed about messages in the ‘Other’ folder.
In fact, the user himself has to manually check ‘Other’ folder
to even notice that there are waiting messages. According
to Facebook [33], this is intended to protect users against
spam. When an LTE subscriber has the Facebook application
installed on his LTE device, all incoming Facebook messages,
including those that end up in the ‘Other’ folder, trigger a
paging request by the network. Other Facebook features, such
as repeated friend requests or poking (depending on the user’s
proﬁle settings) also trigger paging requests. However, in those
cases, unlike in the case of messages that end up in the ‘Other’
folder, Facebook application notiﬁes the user.
WhatsApp ‘typing notiﬁcation’: WhatsApp supports a ‘typ-
ing notiﬁcation’ feature - when someone (‘sender’) starts com-
posing a message to a person (‘recipient’) using WhatsApp,
the WhatsApp client UI at the recipient shows a notiﬁcation to
the recipient that an incoming message is being typed. If the
recipient is using a WhatsApp client on an LTE device, this
ends up triggering a paging request.
RRC protocol issues
The LTE RRC protocol includes various functions needed
to set up and manage over-the-air connectivity between the
eNodeB and the UE as described in [5]. For our attacks,
we exploit two of these: network broadcast information and
measurement reports sent by UEs to the network.
Broadcast information: In this RRC protocol function, tem-
porary identities associated with UEs (i.e., GUTIs) are trans-
mitted over the air in a broadcast channel. Such broadcast
6
the purpose of examining the feasibility aspects of location
leak attacks.
Before measuring GUTI allocations and Smart Paging,
we consider the following timing constraints for the paging
procedure in LTE. Paging messages are sent only if a UE
is in IDLE state. During an active connection, there are no
paging messages. According to [13], if the UE remains silent
for 10 seconds during a connection, the eNodeB releases the
associated radio resources and the UE moves into IDLE state.
GUTI variation: GUTI reallocation depends entirely on op-
erator conﬁguration. We investigated GUTI allocation and
reallocation methods used by several operators. Speciﬁcally,
these experiments verify whether GUTIs are really temporary
in practice. We used a Samsung B3740 LTE USB data stick
as the UE, since it allows us to view the RRC and NAS
messages in Wireshark [34]. The changes in GUTI can be
seen in the “Attach Accept” or “TAU Accept” NAS messages
in the Wireshark traces. We identiﬁed these NAS messages
and recorded GUTIs for every operator for further analysis.
In addition, GUTI variation can be veriﬁed with engineering
mode on few selected handsets, for example LG G3 [35]. Our
results in Table I show that GUTI allocation and reallocation
mechanisms are similar among all operators. The results are
summarized below:
•
Periodically (once an hour and once in 12 hours)
detaching and attaching the UE while it was stationary
resulted in the same GUTI being re-allocated in all
three operator networks. A stationary UE did not have
its GUTI changed for up to three days or when moving
between TAs within the city.
• When UE was moving inside the city for 3 days while
remaining attached to the network, no change in GUTI
was observed in any operator’s network.
•
If a UE was completely turned off for one day, a new
GUTI was allocated when it was subsequently turned
on. In the case of one of the operators, the newly
assigned GUTI differed from the old one by only one
hexadecimal digit. This implies that GUTIs were not
chosen randomly.
Based on above observations we conclude that the GUTI
tends to remain the same even if a UE is moving within a
city for up to three days. Hence temporary identities are not
really temporary in any of the three networks. This allows an
attacker to perform passive attacks.
Activity
Facebook Message
SMS
VoLTE call
Attach and Detach every 1 hour
Attach and Detach every 12 hour
Normal TAU procedure
Periodic TAU procedure
Smart Paging
on Cell
on TA
GUTI changed?
(All operators)
Yes
Yes
No
-
-
-
-
No
No
Yes
-
-
-
-
No
No
No
No
No
No
No
TABLE I: GUTI variations and Smart Paging behavior
Smart Paging: We identiﬁed multiple cells in a busy TA
for each operator and placed our passive LTE air-interface
sniffer within each cell. The test UE was placed in one of
the cells and remained stationary for the experiment duration.
Table I presents the set of activities performed to trigger paging
messages. The results are summarized as follows:
•
Paging for Voice Over LTE (VoLTE6) call occurs on
the entire TA and paging for other IP applications
occurs on the last seen cell. This is referred to as ap-
plication aware paging [16]. Since VoLTE has higher
priority and strict timing constraints compared to other
data applications, the network pages the complete TA
to ﬁnd the UE quickly.
• When the UE paging is triggered via Facebook or
SMS messages, sniffers detected a particular paging
message only in the cell where the UE is located (or
last seen). This implies that all operators are using
Smart Paging.
Mapping tracking area and cell dimensions: It is necessary
to have knowledge of the size of LTE tracking areas and cells
deployed in a metropolitan city for determining a victim’s
location. In particular,
this knowledge enables an attacker
to identify targeted TAs for speciﬁc regions and network
operators in the city. We created a database that maps Tracking
Area Codes (TACs) to GPS coordinates by slowly bicycling
through the city. The TACs are periodically broadcast in SIB
Type number 1 messages [5]. We logged them using our
passive attack setup. Further, in order to determine the surface
area covered by a tracking area, we calculated the region
covered by the points with the same TAC and the results are
plotted in Figure 5. The size of TA inside the city varies from
10 to 30 km2. According to OpenCellID [36] tracking areas
outside the city center cover 80 - 100 km2. The TAs are
smaller in size compared to the GSM location areas plotted
by [37] in the same city.
Fig. 5. LTE tracking area and cells of a major operator in a city
Since the granularity we obtain through our attacks is
on a cell level, it is important to know cell sizes in LTE
network as compared to GSM. Further, this knowledge helps
in positioning the rogue eNodeB to maximize the effect of
active attacks. In order to plot cell boundaries, we used the
6VoLTE stands for voice over LTE and it is for voice calls over an LTE
network, rather than the 2G or 3G connections which are usually used.
7
cellmapper [38] Android application which reports the cell
ID, eNodeB ID, and Radio Signal Strength Indicator (RSSI) of
the cell in real time. Initially, we identiﬁed a point with high
signal strength (possibly close to the eNodeB) and marked
it for the reference. Then we walked in all directions from
the reference point till reaching the cell edge. Cell edges are
identiﬁed when RSSI becomes very poor and the UE triggers
a cell change. In this way, we traced the boundaries of the 5
cells and marked them inside the TA as shown in Figure 5.
Based on the cell sizes measured, we ﬁnd out that a major
operator implemented micro cells in their LTE infrastructure.
Typical size of a micro cell ranges from 200 - 2000 m in
radius [39].
C. Passive attack - link subscriber locations/movements over
time (L1)
In passive attack mode, attacker’s objective is to collect a
set of IMSIs and GUTIs which can be used for two purposes.
One is to verify subscriber’s presence in certain area, and other
is to reveal his past and future movements in that area. To
achieve this, we sniff over the LTE air interface and decode
broadcast paging channels to extract IMSIs and GUTIs. These
identities can be collected in locations such as airports or
subscriber’s home or ofﬁce. The attacker needs to map IMSI or
GUTI associated with a particular subscriber to reveal his/her
presence in that area. Since GUTI is persistent for several days
in our experiments (see Section V-B), its disclosure makes the
subscriber’s movements linkable. The mapping between GUTI
and IMSI is possible using semi-passive attacks.
D. Semi-Passive attack - leak coarse location (L2)
The objective of the semi-passive attack is to determine the
presence of a subscriber in a TA and further, to ﬁnd the cell in
which the subscriber is physically located in. In particular, we
demonstrate the use of novel tracking techniques to initially
determine the TA and then exploit Smart Paging to identify a
cell within that TA.
Determining tracking area and cell ID
We use following two methods to generate signaling mes-
sages for performing the attack.
Using VoLTE calls: We placed 10 VoLTE calls to the victim.
The VoLTE call connection times are very short at around 3
seconds according to previous work [40]. Hence, the attacker
has to choose the call duration so that it is long enough for a
paging request to broadcast by the eNodeB but short enough
to not trigger any notiﬁcation on the UE’s application user
interface. As explained earlier, VoLTE has high priority and
therefore its paging requests are broadcast to all eNodeBs in a
TA. Hence it is sufﬁcient to monitor any single cell within the
TA for paging messages. The observed GUTIs undergo a set
intersection analysis where we apply the method proposed by
Kune et.al [2] to reveal the mapping between the GUTI and
phone number of the subscriber. Once successful, the presence
of the subscriber is conﬁrmed in that TA.
Using social network and applications: Social identities are a
compelling attack vector because mobile subscribers nowadays
use mobile phones for accessing popular social networks and
instant messaging applications. The primary intention of the
attacker is to trigger paging requests via social
identities
without LTE subscribers being aware of it. For triggering
paging messages, various mobile applications can be used.
Due to popularity and size of user base we chose Facebook and
WhatsApp applications for our experiments. However tracking
subscribers using social applications is not as effective as using
VoLTE calls.
We used Facebook messages as described in Section V-A
to trigger Smart Paging to localize the target subscriber to a
speciﬁc cell. Similar to VoLTE calls, we send 10-20 messages
to the subscriber via Facebook and do the set intersection
analysis to link GUTIs to Facebook proﬁles. If the mapping
is successful in a particular cell where the attacker is, the
presence of the subscriber is conﬁrmed. Otherwise the attacker
needs to move to other cells and repeat the same procedure.
The attacker can also place passive sniffers in every cell to
speed up the localization procedure. However, this is expen-
sive. The subscriber’s presence is successfully determined in
a cell a cell that is typically of size 2 km2, i.e. much smaller
than a GSM cell.
We also used WhatsApp similarly to exploit its “typing
notiﬁcation” feature. In this case, the attacker requires the
phone number to identify the subscriber on WhatsApp. In
addition, the victim’s privacy settings must allow the attacker
to view the victim’s WhatsApp proﬁle. First, the attacker sends
a message to the target recipient. Once it is received, the
recipient’s WhatsApp application will list it in the inbox. For
the attack to succeed, it is essential that the recipient does
not block or delete the attacker’s contact. Later, the attacker
opens his active chat window corresponding to the recipient
and composes a message but does not send. Due to the “typing
notiﬁcation” feature, the recipient can see that the attacker is
typing in the chat window. During this procedure, network
triggers paging request destined for recipient’s LTE devices.
E. Active attack - leak ﬁne-grained location (L3)
Once the attacker determines a TA and cell where the
subscriber is present, the next goal is to ﬁnd his/her location
more precisely. We now demonstrate two methods in which
the attacker exploits a speciﬁcation and an implementation
vulnerability to this end.
1. Via measurement reports: We consider a subscriber who
is initially attached to a legitimate eNodeB. The attacker
forces him/her to attach to a rogue eNodeB by applying the
techniques mentioned in Section IV-B. The subscriber’s UE
completes RRC connection procedures and initiates a TAU
procedure with attacker’s rogue eNodeB. Next, UE enters into
CONNECTED state. The attacker creates a “RRC Connection
Reconﬁguration” message with different cell IDs (possibly 3 or
more neighbor cells) and necessary frequencies, and sends it to
the UE without any protection. After receiving this unprotected
message, UE computes the signal power from neighboring
cells and frequencies and sends an unprotected “Measurement
Report” message to the rogue eNodeB.
If the UE supports ‘locationInfo-r10’ feature [5], it includes
its GPS coordinates in the measurement report. This feature
is not yet widely supported by current smartphones - however
one of our test phone exhibited this behavior.
8
Determining subscriber’s precise location
Aforementioned measurement and RLF reports provide
signal strengths allowing the active attacker to calculate dis-
tance between the UE and the rogue eNodeB. This calcula-
tion is performed using a trilateration technique as described
in [42]. Figure 7 shows how this technique is used to determine
subscriber’s location. The distance estimates are calculated as
d1, d2, and d3 for three neighboring base stations. The zone of
intersection point of three circles is subscriber’s approximate
location in a cell. However, if ‘locationInfo-r10’ feature is
supported in measurement and RLF reports, accurate location
can be determined using GPS coordinates.
2. Via RLF reports: In this attack, two rogue eNodeBs are
operated in the same cell where the subscriber is present.
Initially eNodeB 2 is OFF and eNodeB 1 ON to create a RLF
scenario to the UE. The UE initiates connection to eNodeB 1
and enters into CONNECTED state as shown in Figure 6. We
turn OFF eNodeB 1 upon receiving a TAU request from the
UE. At the same time, eNodeB 2 is turned ON. Meanwhile
UE detects that it has lost sync with the eNodeB 1 and starts
RLF timer (T310).
When the RLF timer expires, UE creates a RLF report [5]
and goes into IDLE mode. In this mode, UE starts cell selection
procedure as speciﬁed in [12] to attach to eNodeB 2. As
before, UE enters the CONNECTED state with eNodeB 2 and
indicates the availability of RLF report in a TAU message.
Upon receiving this message, the attacker sends an unprotected
“UEInformationRequest” message to UE from eNodeB 2,
thereby requesting UE to send RLF report to eNodeB 2 in
response. As a result, UE sends the resulting response in an un-
protected “UEInformationResponse” message containing the
RLF report. This report contains failure events and speciﬁcally