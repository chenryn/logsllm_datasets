an out-of-memory situation yet.
.ip
if this file is set to the value 2,
the kernel always panics when an out-of-memory condition occurs.
.ip
the default value is 0.
1 and 2 are for failover of clustering.
select either according to your policy of failover.
.tp
.ir /proc/sys/vm/swappiness
.\" the following is from documentation/sysctl/vm.txt
the value in this file controls how aggressively the kernel will swap
memory pages.
higher values increase aggressiveness, lower values
decrease aggressiveness.
the default value is 60.
.tp
.ir /proc/sys/vm/user_reserve_kbytes " (since linux 3.10)"
.\" commit c9b1d0981fcce3d9976d7b7a56e4e0503bc610dd
specifies an amount of memory (in kib) to reserve for user processes.
this is intended to prevent a user from starting a single memory hogging
process, such that they cannot recover (kill the hog).
the value in this file has an effect only when
.ir /proc/sys/vm/overcommit_memory
is set to 2 ("overcommit never" mode).
in this case, the system reserves an amount of memory that is the minimum
of [3% of current process size,
.ir user_reserve_kbytes ].
.ip
the default value in this file is the minimum of [3% of free pages, 128mib]
expressed as kib.
.ip
if the value in this file is set to zero,
then a user will be allowed to allocate all free memory with a single process
(minus the amount reserved by
.ir /proc/sys/vm/admin_reserve_kbytes ).
any subsequent attempts to execute a command will result in
"fork: cannot allocate memory".
.ip
changing the value in this file takes effect whenever
an application requests memory.
.tp
.ir /proc/sys/vm/unprivileged_userfaultfd " (since linux 5.2)"
.\" cefdca0a86be517bc390fc4541e3674b8e7803b0
this (writable) file exposes a flag that controls whether
unprivileged processes are allowed to employ
.br userfaultfd (2).
if this file has the value 1, then unprivileged processes may use
.br userfaultfd (2).
if this file has the value 0, then only processes that have the
.b cap_sys_ptrace
capability may employ
.br userfaultfd (2).
the default value in this file is 1.
.tp
.ir /proc/sysrq\-trigger " (since linux 2.4.21)"
writing a character to this file triggers the same sysrq function as
typing alt-sysrq- (see the description of
.ir /proc/sys/kernel/sysrq ).
this file is normally writable only by
.ir root .
for further details see the linux kernel source file
.i documentation/admin\-guide/sysrq.rst
.\" commit 9d85025b0418163fae079c9ba8f8445212de8568
(or
.i documentation/sysrq.txt
before linux 4.10).
.tp
.i /proc/sysvipc
subdirectory containing the pseudo-files
.ir msg ", " sem " and " shm "."
these files list the system v interprocess communication (ipc) objects
(respectively: message queues, semaphores, and shared memory)
that currently exist on the system,
providing similar information to that available via
.br ipcs (1).
these files have headers and are formatted (one ipc object per line)
for easy understanding.
.br sysvipc (7)
provides further background on the information shown by these files.
.tp
.ir /proc/thread\-self " (since linux 3.17)"
.\" commit 0097875bd41528922fb3bb5f348c53f17e00e2fd
this directory refers to the thread accessing the
.i /proc
filesystem,
and is identical to the
.i /proc/self/task/[tid]
directory named by the process thread id
.ri ( [tid] )
of the same thread.
.tp
.ir /proc/timer_list " (since linux 2.6.21)"
.\" commit 289f480af87e45f7a6de6ba9b4c061c2e259fe98
this read-only file exposes a list of all currently pending
(high-resolution) timers,
all clock-event sources, and their parameters in a human-readable form.
.tp
.ir /proc/timer_stats " (from  linux 2.6.21 until linux 4.10)"
.\" commit 82f67cd9fca8c8762c15ba7ed0d5747588c1e221
.\"	date:   fri feb 16 01:28:13 2007 -0800
.\" text largely derived from documentation/timers/timer_stats.txt
.\" removed in commit dfb4357da6ddbdf57d583ba64361c9d792b0e0b1
.\"     date:   wed feb 8 11:26:59 2017 -0800
this is a debugging facility to make timer (ab)use in a linux
system visible to kernel and user-space developers.
it can be used by kernel and user-space developers to verify that
their code does not make undue use of timers.
the goal is to avoid unnecessary wakeups,
thereby optimizing power consumption.
.ip
if enabled in the kernel
.rb ( config_timer_stats ),
but not used,
it has almost zero run-time overhead and a relatively small
data-structure overhead.
even if collection is enabled at run time, overhead is low:
all the locking is per-cpu and lookup is hashed.
.ip
the
.i /proc/timer_stats
file is used both to control sampling facility and to read out the
sampled information.
.ip
the
.i timer_stats
functionality is inactive on bootup.
a sampling period can be started using the following command:
.ip
.in +4n
.ex
# echo 1 > /proc/timer_stats
.ee
.in
.ip
the following command stops a sampling period:
.ip
.in +4n
.ex
# echo 0 > /proc/timer_stats
.ee
.in
.ip
the statistics can be retrieved by:
.ip
.in +4n
.ex
$ cat /proc/timer_stats
.ee
.in
.ip
while sampling is enabled, each readout from
.i /proc/timer_stats
will see
newly updated statistics.
once sampling is disabled, the sampled information
is kept until a new sample period is started.
this allows multiple readouts.
.ip
sample output from
.ir /proc/timer_stats :
.ip
.in +4n
.ex
.rb $ " cat /proc/timer_stats"
timer stats version: v0.3
sample period: 1.764 s
collection: active
  255,     0 swapper/3        hrtimer_start_range_ns (tick_sched_timer)
   71,     0 swapper/1        hrtimer_start_range_ns (tick_sched_timer)
   58,     0 swapper/0        hrtimer_start_range_ns (tick_sched_timer)
    4,  1694 gnome\-shell      mod_delayed_work_on (delayed_work_timer_fn)
   17,     7 rcu_sched        rcu_gp_kthread (process_timeout)
\&...
    1,  4911 kworker/u16:0    mod_delayed_work_on (delayed_work_timer_fn)
   1d,  2522 kworker/0:0      queue_delayed_work_on (delayed_work_timer_fn)
1029 total events, 583.333 events/sec
.ee
.in
.ip
the output columns are:
.rs
.ip * 3
a count of the number of events,
optionally (since linux 2.6.23) followed by the letter \(aqd\(aq
.\" commit c5c061b8f9726bc2c25e19dec227933a13d1e6b7 deferrable timers
if this is a deferrable timer;
.ip *
the pid of the process that initialized the timer;
.ip *
the name of the process that initialized the timer;
.ip *
the function where the timer was initialized; and
.ip *
(in parentheses)
the callback function that is associated with the timer.
.re
.ip
during the linux 4.11 development cycle,
this file  was removed because of security concerns,
as it exposes information across namespaces.
furthermore, it is possible to obtain
the same information via in-kernel tracing facilities such as ftrace.
.tp
.i /proc/tty
subdirectory containing the pseudo-files and subdirectories for
tty drivers and line disciplines.
.tp
.i /proc/uptime
this file contains two numbers (values in seconds): the uptime of the
system (including time spent in suspend) and the amount of time spent
in the idle process.
.tp
.i /proc/version
this string identifies the kernel version that is currently running.
it includes the contents of
.ir /proc/sys/kernel/ostype ,
.ir /proc/sys/kernel/osrelease ,
and
.ir /proc/sys/kernel/version .
for example:
.ip
.in +4n
.ex
linux version 1.0.9 (quinlan@phaze) #1 sat may 14 01:51:54 edt 1994
.ee
.in
.\" fixme 2.6.13 seems to have /proc/vmcore implemented; document this
.\" 	see documentation/kdump/kdump.txt
.\"	commit 666bfddbe8b8fd4fd44617d6c55193d5ac7edb29
.\" 	needs config_vmcore
.\"
.tp
.ir /proc/vmstat " (since linux 2.6.0)"
this file displays various virtual memory statistics.
each line of this file contains a single name-value pair,
delimited by white space.
some lines are present only if the kernel was configured with
suitable options.
(in some cases, the options required for particular files have changed
across kernel versions, so they are not listed here.
details can be found by consulting the kernel source code.)
the following fields may be present:
.\" fixme we need explanations for each of the following fields...
.rs
.tp
.ir nr_free_pages " (since linux 2.6.31)"
.\" commit d23ad42324cc4378132e51f2fc5c9ba6cbe75182
.tp
.ir nr_alloc_batch " (since linux 3.12)"
.\" commit 81c0a2bb515fd4daae8cab64352877480792b515
.tp
.ir nr_inactive_anon " (since linux 2.6.28)"
.\" commit 4f98a2fee8acdb4ac84545df98cccecfd130f8db
.tp
.ir nr_active_anon " (since linux 2.6.28)"
.\" commit 4f98a2fee8acdb4ac84545df98cccecfd130f8db
.tp
.ir nr_inactive_file " (since linux 2.6.28)"
.\" commit 4f98a2fee8acdb4ac84545df98cccecfd130f8db
.tp
.ir nr_active_file " (since linux 2.6.28)"
.\" commit 4f98a2fee8acdb4ac84545df98cccecfd130f8db
.tp
.ir nr_unevictable " (since linux 2.6.28)"
.\" commit 7b854121eb3e5ba0241882ff939e2c485228c9c5
.tp
.ir nr_mlock " (since linux 2.6.28)"
.\" commit 5344b7e648980cc2ca613ec03a56a8222ff48820
.tp
.ir nr_anon_pages " (since linux 2.6.18)"
.\" commit f3dbd34460ff54962d3e3244b6bcb7f5295356e6
.tp
.ir nr_mapped " (since linux 2.6.0)"
.tp
.ir nr_file_pages " (since linux 2.6.18)"
.\" commit 347ce434d57da80fd5809c0c836f206a50999c26
.tp
.ir nr_dirty " (since linux 2.6.0)"
.tp
.ir nr_writeback " (since linux 2.6.0)"
.tp
.ir nr_slab_reclaimable " (since linux 2.6.19)"
.\" commit 972d1a7b140569084439a81265a0f15b74e924e0
.\" linux 2.6.0 had nr_slab
.tp
.ir nr_slab_unreclaimable " (since linux 2.6.19)"
.\" commit 972d1a7b140569084439a81265a0f15b74e924e0
.tp
.ir nr_page_table_pages " (since linux 2.6.0)"
.tp
.ir nr_kernel_stack " (since linux 2.6.32)"
.\" commit c6a7f5728a1db45d30df55a01adc130b4ab0327c
amount of memory allocated to kernel stacks.
.tp
.ir nr_unstable " (since linux 2.6.0)"
.tp
.ir nr_bounce " (since linux 2.6.12)"
.\" commit edfbe2b0038723e5699ab22695ccd62b5542a5c1
.tp
.ir nr_vmscan_write " (since linux 2.6.19)"
.\" commit e129b5c23c2b471d47f1c5d2b8b193fc2034af43
.tp
.ir nr_vmscan_immediate_reclaim " (since linux 3.2)"
.\" commit 49ea7eb65e7c5060807fb9312b1ad4c3eab82e2c
.tp
.ir nr_writeback_temp " (since linux 2.6.26)"
.\" commit fc3ba692a4d19019387c5acaea63131f9eab05dd
.tp
.ir nr_isolated_anon " (since linux 2.6.32)"
.\" commit a731286de62294b63d8ceb3c5914ac52cc17e690
.tp
.ir nr_isolated_file " (since linux 2.6.32)"
.\" commit a731286de62294b63d8ceb3c5914ac52cc17e690
.tp
.ir nr_shmem " (since linux 2.6.32)"
.\" commit 4b02108ac1b3354a22b0d83c684797692efdc395
pages used by shmem and
.br tmpfs (5).
.tp
.ir nr_dirtied " (since linux 2.6.37)"
.\" commit ea941f0e2a8c02ae876cd73deb4e1557248f258c
.tp
.ir nr_written " (since linux 2.6.37)"
.\" commit ea941f0e2a8c02ae876cd73deb4e1557248f258c
.tp
.ir nr_pages_scanned " (since linux 3.17)"
.\" commit 0d5d823ab4e608ec7b52ac4410de4cb74bbe0edd
.tp
.ir numa_hit " (since linux 2.6.18)"
.\" commit ca889e6c45e0b112cb2ca9d35afc66297519b5d5
.\" present only if the kernel was configured with
.\" .br config_numa .
.tp
.ir numa_miss " (since linux 2.6.18)"
.\" commit ca889e6c45e0b112cb2ca9d35afc66297519b5d5
.\" present only if the kernel was configured with
.\" .br config_numa .
.tp
.ir numa_foreign " (since linux 2.6.18)"
.\" commit ca889e6c45e0b112cb2ca9d35afc66297519b5d5
.\" present only if the kernel was configured with
.\" .br config_numa .
.tp
.ir numa_interleave " (since linux 2.6.18)"
.\" commit ca889e6c45e0b112cb2ca9d35afc66297519b5d5
.\" present only if the kernel was configured with
.\" .br config_numa .
.tp
.ir numa_local " (since linux 2.6.18)"
.\" commit ca889e6c45e0b112cb2ca9d35afc66297519b5d5
.\" present only if the kernel was configured with
.\" .br config_numa .
.tp
.ir numa_other " (since linux 2.6.18)"
.\" commit ca889e6c45e0b112cb2ca9d35afc66297519b5d5
.\" present only if the kernel was configured with
.\" .br config_numa .
.tp
.ir workingset_refault " (since linux 3.15)"
.\" commit a528910e12ec7ee203095eb1711468a66b9b60b0
.\" present only if the kernel was configured with
.\" .br config_vm_event_counters .
.tp
.ir workingset_activate " (since linux 3.15)"
.\" commit a528910e12ec7ee203095eb1711468a66b9b60b0
.\" present only if the kernel was configured with
.\" .br config_vm_event_counters .
.tp
.ir workingset_nodereclaim " (since linux 3.15)"
.\" commit 449dd6984d0e47643c04c807f609dd56d48d5bcc
.\" present only if the kernel was configured with
.\" .br config_vm_event_counters .
.tp
.ir nr_anon_transparent_hugepages " (since linux 2.6.38)"
.\" present only if the kernel was configured with
.\" .br config_vm_event_counters .
.tp
.ir nr_free_cma " (since linux 3.7)"
.\" commit d1ce749a0db12202b711d1aba1d29e823034648d
number of free cma (contiguous memory allocator) pages.
.\" present only if the kernel was configured with
.\" .br config_vm_event_counters .
.tp
.ir nr_dirty_threshold " (since linux 2.6.37)"
.\" commit 79da826aee6a10902ef411bc65864bd02102fa83
.\" present only if the kernel was configured with
.\" .br config_vm_event_counters .
.tp
.ir nr_dirty_background_threshold " (since linux 2.6.37)"
.\" commit 79da826aee6a10902ef411bc65864bd02102fa83
.\" present only if the kernel was configured with
.\" .br config_vm_event_counters .
.tp
.ir pgpgin " (since linux 2.6.0)"
.\" present only if the kernel was configured with
.\" .br config_vm_event_counters .
.tp
.ir pgpgout " (since linux 2.6.0)"
.\" present only if the kernel was configured with
.\" .br config_vm_event_counters .
.tp
.ir pswpin " (since linux 2.6.0)"
.\" present only if the kernel was configured with
.\" .br config_vm_event_counters .
.tp
.ir pswpout " (since linux 2.6.0)"
.\" present only if the kernel was configured with
.\" .br config_vm_event_counters .
.tp
.ir pgalloc_dma " (since linux 2.6.5)"
.\" linux 2.6.0 had pgalloc
.\" present only if the kernel was configured with
.\" .br config_vm_event_counters .
.tp
.ir pgalloc_dma32 " (since linux 2.6.16)"
.\" commit 9328b8faae922e52073785ed6c1eaa8565648a0e
.\" present only if the kernel was configured with
.\" .br config_vm_event_counters .
.tp
.ir pgalloc_normal " (since linux 2.6.5)"
.\" present only if the kernel was configured with
.\" .br config_vm_event_counters .
.tp
.ir pgalloc_high " (since linux 2.6.5)"
.\" present only if the kernel was configured with
.\" .br config_vm_event_counters
.\" and
.\" .br config_highmem .
.tp
.ir pgalloc_movable " (since linux 2.6.23)"
.\" commit 2a1e274acf0b1c192face19a4be7c12d4503eaaf
.\" present only if the kernel was configured with
.\" .br config_vm_event_counters .
.tp
.ir pgfree " (since linux 2.6.0)"
.\" present only if the kernel was configured with
.\" .br config_vm_event_counters .
.tp
.ir pgactivate " (since linux 2.6.0)"
.\" present only if the kernel was configured with
.\" .br config_vm_event_counters .
.tp
.ir pgdeactivate " (since linux 2.6.0)"
.\" present only if the kernel was configured with
.\" .br config_vm_event_counters .
.tp
.ir pgfault " (since linux 2.6.0)"
.\" present only if the kernel was configured with
.\" .br config_vm_event_counters .
.tp
.ir pgmajfault " (since linux 2.6.0)"
.\" present only if the kernel was configured with
.\" .br config_vm_event_counters .
.tp
.ir pgrefill_dma " (since linux 2.6.5)"
.\" linux 2.6.0 had pgrefill
.\" present only if the kernel was configured with
.\" .br config_vm_event_counters .
.tp
.ir pgrefill_dma32 " (since linux 2.6.16)"
.\" commit 9328b8faae922e52073785ed6c1eaa8565648a0e
.\" present only if the kernel was configured with
.\" .br config_vm_event_counters .
.tp
.ir pgrefill_normal " (since linux 2.6.5)"
.\" present only if the kernel was configured with
.\" .br config_vm_event_counters .
.tp
.ir pgrefill_high " (since linux 2.6.5)"
.\" present only if the kernel was configured with
.\" .br config_vm_event_counters
.\" and
.\" .br config_highmem .
.tp
.ir pgrefill_movable " (since linux 2.6.23)"
.\" commit 2a1e274acf0b1c192face19a4be7c12d4503eaaf
.\" present only if the kernel was configured with
.\" .br config_vm_event_counters .
.\" formerly there were
.\"     pgsteal_high
.\"     pgsteal_normal
.\"     pgsteal_dma32
.\"     pgsteal_dma
.\" these were split out into pgsteal_kswapd* and pgsteal_direct*
.\" in commit 904249aa68010c8e223263c922fcbb840a3f42e4
.tp
.ir pgsteal_kswapd_dma " (since linux 3.4)"
.\" commit 904249aa68010c8e223263c922fcbb840a3f42e4
.\" linux 2.6.0 had pgsteal
.\" present only if the kernel was configured with
.\" .\" .br config_vm_event_counters .
.tp
.ir pgsteal_kswapd_dma32 " (since linux 3.4)"
.\" commit 904249aa68010c8e223263c922fcbb840a3f42e4
.\" commit 9328b8faae922e52073785ed6c1eaa8565648a0e
.\" present only if the kernel was configured with
.\" .br config_vm_event_counters .
.tp
.ir pgsteal_kswapd_normal " (since linux 3.4)"
.\" commit 904249aa68010c8e223263c922fcbb840a3f42e4
.\" present only if the kernel was configured with
.\" .br config_vm_event_counters .
.tp
.ir pgsteal_kswapd_high " (since linux 3.4)"
.\" commit 904249aa68010c8e223263c922fcbb840a3f42e4
.\" present only if the kernel was configured with
.\" .br config_vm_event_counters
.\" and
.\" .br config_highmem .
.tp
.ir pgsteal_kswapd_movable " (since linux 3.4)"
.\" commit 904249aa68010c8e223263c922fcbb840a3f42e4
.\" present only if the kernel was configured with
.\" .br config_vm_event_counters .
.tp
.ir pgsteal_direct_dma
.\" present only if the kernel was configured with
.\" .br config_vm_event_counters .
.tp
.ir pgsteal_direct_dma32 " (since linux 3.4)"
.\" commit 904249aa68010c8e223263c922fcbb840a3f42e4
.\" present only if the kernel was configured with
.\" .br config_vm_event_counters .
.tp
.ir pgsteal_direct_normal " (since linux 3.4)"
.\" commit 904249aa68010c8e223263c922fcbb840a3f42e4
.\" present only if the kernel was configured with
.\" .br config_vm_event_counters .
.tp
.ir pgsteal_direct_high " (since linux 3.4)"
.\" commit 904249aa68010c8e223263c922fcbb840a3f42e4
.\" present only if the kernel was configured with
.\" .br config_vm_event_counters
.\" and
.\" .br config_highmem .
.tp
.ir pgsteal_direct_movable " (since linux 2.6.23)"
.\" commit 2a1e274acf0b1c192face19a4be7c12d4503eaaf
.\" present only if the kernel was configured with
.\" .br config_vm_event_counters .
.tp
.ir pgscan_kswapd_dma
.\" linux 2.6.0 had pgscan
.\" present only if the kernel was configured with
.\" .br config_vm_event_counters .
.tp
.ir pgscan_kswapd_dma32 " (since linux 2.6.16)"
.\" commit 9328b8faae922e52073785ed6c1eaa8565648a0e
.\" present only if the kernel was configured with
.\" .br config_vm_event_counters .
.tp
.ir pgscan_kswapd_normal " (since linux 2.6.5)"
.\" present only if the kernel was configured with
.\" .br config_vm_event_counters .