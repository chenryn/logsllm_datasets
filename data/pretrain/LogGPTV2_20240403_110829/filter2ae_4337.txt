# 【技术分享】Facebook和Dropbox中的CSRF漏洞分析（含演示视频）

**译文声明**

本文为翻译文章，原文来自intothesymmetry.com。具体内容及含义请以原文为准。

**翻译者**: [WisFree](http://bobao.360.cn/member/contribute?uid=2606963099)  
**预估稿费**: 150 RMB  
**投稿方式**: 发送邮件至linwei#360.cn 或登录网页版在线投稿

## 概述
Facebook允许用户直接加载Dropbox账户中的文件，该功能通过OAuth 2.0协议实现。然而，这种集成存在一种经典的OAuth CSRF漏洞变种。具体细节请参见以下视频：

[演示视频链接]

## 介绍
Facebook提供了一项便捷的功能，使用户可以直接从其Dropbox账户中加载文件。这项功能允许用户在浏览器窗口中查看并上传Dropbox账户中的文件。这一整合是通过OAuth 2.0协议的一个变种实现的。更多关于OAuth的信息，请参考相关文章。

### OAuth简介
OAuth是一种符合IETF标准的访问代理协议，为用户资源授权提供了安全、开放且简单的标准。任何第三方都可以使用OAuth认证服务，而服务提供商可以实现自己的OAuth认证服务。目前，许多互联网服务如Open API，以及大公司如Google、Yahoo和Microsoft等都提供了OAuth认证服务。

OAuth的工作流程如下：
1. 客户端发起认证请求。
2. 资源所有者对客户端进行身份验证。
3. 认证服务器将验证码发送给客户端。

## Facebook与Dropbox的整合
在Facebook与Dropbox的集成中，Dropbox充当客户端，而Facebook则作为认证/资源服务器。通常情况下，资源请求应由客户端发起，但在这种情况下并非如此。实际上，客户端（Dropbox）会通过以下URL将资源所有者重定向到认证服务器：

```
https://www.facebook.com/dialog/oauth?display=popup&client_id=210019893730&redirect_uri=https%3A%2F%2Fwww.dropbox.com%2Ffb%2Ffilepicker%3Frestrict%3D100000740415566%26group_id%3D840143532794003&scope=publish_actions%2Cuser_groups%2Cemail&response_type=code
```

其他步骤则遵循OAuth协议的标准流程。

## OAuth 2.0协议中的CSRF漏洞
仔细观察上述初始链接，你会发现它缺少了一个关键参数“state”。根据OAuth协议，这个参数用于防止CSRF攻击。为了更好地理解这一漏洞，我们可以通过以下流程图来解释：

[流程图链接]

如果这张图片无法帮助你理解漏洞，你可以参考Egor Homakov的文章【[传送门](http://homakov.blogspot.ch/2012/07/saferweb-most-common-oauth2.html)】。

## Facebook引入Dropbox后的CSRF漏洞
在描述特定攻击之前，需要强调的是：OAuth协议中针对CSRF的保护机制（即state参数的使用）在这种情况下不起作用。由于请求是由Facebook发起而不是Dropbox，因此Dropbox无法检查state参数是否正确配置。攻击者可以通过包含伪造验证码的恶意链接来伪造Web页面并实施攻击。

当目标用户访问该地址后，其Dropbox将以攻击者的身份上传任意文件。完整的攻击过程请参见以下视频：

[攻击演示视频链接]

## 漏洞上报时间轴
报告此类产品集成问题总是很困难，因为很难确定谁是导致漏洞的罪魁祸首。但这次显然是Dropbox的问题，而Facebook是受害者。然而，Dropbox自身不受此漏洞影响，因此对其团队来说并不感兴趣。没有Dropbox的帮助，Facebook也难以修复这一漏洞。

- **2017年1月13日** - 向Facebook安全团队报告漏洞。
- **2017年1月14日** - 通过Hackerone向Dropbox安全团队报告漏洞。
- **2017年1月15日** - Dropbox回复称：“此漏洞是由于Facebook错误使用了Dropbox API所致，并非Dropbox API的安全问题。”
- **2017年1月15日** - 我回复Dropbox：“此漏洞确实是由于Dropbox API设计不当所导致的。”
- **2017年1月15日** - Dropbox再次回复：“我们会重新审查此漏洞，如果认为有效，我们将处理。”并将我的声望值减去五分。
- **2017年1月15日** - 我向Dropbox表示：“提交漏洞却损失五点声望值，确实令人沮丧。”
- **2017年1月17日** - Dropbox重新开启此漏洞报告，并恢复了我的五点声望值。
- **2017年1月20日至2017年2月25日** - 与Facebook技术人员尝试复现漏洞。
- **2017年2月25日** - Facebook关闭问题，并表示：“我们能够复现该漏洞，但它是由Dropbox (/fb/filepicker) 导致的，我们无法修复。”
- **2017年3月4日** - 询问Facebook是否可能与Dropbox沟通解决此问题。
- **2017年3月7日** - 再次通过Hackerone向Dropbox安全团队报告漏洞。
- **2017年3月22日** - Dropbox向asanso提供了1331美元的漏洞奖金。
- **2017年4月10日** - 披露漏洞细节

希望以上优化后的文本更加清晰、连贯和专业。