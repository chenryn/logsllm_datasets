# OCR Output
## Page 1
Debug Hacks中文版
 Publishing House of Electronics Industry
大岩尚宏 安部东洋 吉田俊辅 
深入调试的技术和工具
电子王业出版社·
北京·BEIJING
吉网弘隆大和一洋：
马晶慧译
著
O'REILLY
---
## Page 2
发行部联系，联系及邮购电话：（010）88254888。
印
出版发行：
封面设计：O'ReillyJapan张健
责任编辑：付睿
策划编辑：张春雨
1.①D...H1.①吉...②马...II.①程序开发工具IV.①TP311.52
ISBN 978-7-121-14048-8
子工业出版社，2011.9
Debug Hacks 中文版：深入调试的技术和工具/（日）吉冈弘隆等著：马晶慧译.一北京：电
开
图书在版编目（CIP）数据
以任何方式复制或抄袭本书的任何部分。
the same.
published and sold by permission of O'Reily Japan, Inc., the owner of all rights to publish and sell
Authorized translation of the Japanese edition C2010 O'Reilly Japan, Inc. This translation is
OPublishing House of Electronics Industry 2011.
应用程序开发的工作，就会涉及调试，那么读一读本书也不无神益。
如Linux应用程序开发，嵌入式Linux开发，甚至时下流行的iOS 应用程序开发，只要从事
核调试，本书深入浅出地讲解了Linux下应用程序和内核的调试技巧。
从调试器的基本使用方法、汇编的基础知识开始，到内核错误信息捕捉、应用程序调试、内
版权贸易合同登记号图字：01-2011-3386
本书中文简体版专有出版权由O'ReillyJapan,Inc.授予电子工业出版社，未经许可，不得
虽然本书的出发点是Linux内核调试，但书中的绝大部分知识在许多领域都能派上用场
服务热线：（010）88258888。
质量投诉请发邮件至PI:EMAIL，盗版侵权举报请发邮件至PI:EMAIL。
凡所购买电子工业出版社图书有缺损问题，请向购买书店调换。若书店售缺，请与本社
本书是 Miracle Linux 的创始人吉冈弘隆和几位工程师们多年从事内核开发的经验积累。
数：4000册
次：2011年9月第1次印刷
本：720×10001/16
刷：
北京市海淀区万寿路173信箱
：电子工业出版社
三河市鑫金马印装有限公司
定价：69.00元
www.TopSage.com
内容简介
印张：26.5
邮编：100036
字数：572千字
---
## Page 3
的，但即便如此，其思路也有参考价值。特别感激的是本书详细地解释了GDB、
本身的 bug 的 hack，更是无价之宝。可能某些 hack 并非大多数程序员日常用得到
序员们从经验中得来的 bug 寻找方法和修改方法，特别是平时看不到的有关Linux
都能立即改正。调试的精髓就是发现并确定 bug 的位置。本书汇集了身经百战的程
词给人的印象是“改正 bug"，但实际上，确定了位置的 bug 完全不可怕，基本上
改方法。特别是在寻找并确定 bug 位置方面，有着各种各样的技术。“调试”这个
但是，仅仅在黑暗中寻找 bug 是不会有任何效果的。bug 也有 bug 的寻找方法和修
一大半时间都花在了寻找 bug、修改 bug 上。
完美的程序简直难于上青天，因此任何程序都必须面对 bug。个人感觉，程序员的
程序员的工作就是写程序，然而随着计算机融入社会、程序越来越复杂，要想写出
纸上引发热议的事情也时有发生。
序中必然会混入 bug。从某种意义上来说，也许 bug 昭示了人类的极限。绝大部分
言”之一就是“程序的执行，是根据编写而不是想象”。而且人总是会出错的，程
从那时起到现在已经过了半个世纪，而bug 还在不断地产生。程序员之间流传的“格
人 Grace Hopper 这位巾帼英雄为纪念这只飞蛾，在日记里记下了这段故事。
障。由于这个小插曲，程序中的错误就被称为了 bug。传闻，后来的 COBOL 创始
电器式计算机中飞进的一只蛾子，倒霉的飞蛾被夹在继电器之间，导致了计算机故
凡是程序就有 bug。bug 总是出现在预料之外的地方。世界上第一个 bug 据说是继
DebugHacks推荐序
www.TopSage.com
---
## Page 4
注1：松本行弘（Yukihiro Matsumoto ），Ruby 语言创始人。…---译者注
希望本书能成为诸位程序员的“启明灯”，让我们在每天与 bug 的斗争中更顺利。
也十分感激。
Valgrind、oprofile 等方便的工具。此外，本书还涉及 Ruby 的两个“bug”，对此我
IV|  Debug Hacks 推荐序
www.TopSage.com
2009年3月于羽田空港
---
## Page 5
关于作者
大和一洋（KazuhiroYamato）
吉冈弘隆（HiroYoshioka）
GLIBC周边，最近也开始着力于gstreamer等媒体相关hack。不善使用GUI
任职于MiracleLinux 的软件工程师。之前主要工作内容为Linux内核和
工具，开发环境完全使用VIM+GCC+GDB。
http://d.hatena.ne.jp/hyoshiok/
博客“xの于力”（梦的力量）：http://blog.miraclelinux.com/yume/。
奖2008年金奖。
2008年，吉冈弘隆获得了经济产业省商务情报政策局长的感谢信和乐天技术
评委，以及安全编程夏令营的部门主审。
吉冈弘隆还担任了JISX0208:1990/X0212:1990的标准化，U-20编程大赛的
Asianux等）的开发。
多款软件产品（COBOL日文版、DECRdb、Oracle8、MIRACLELINUX、
（DEC）研发中心、日本甲骨文，后创立MiracleLinux。大学毕业后参与
持名为“内核读书会”的Linux技术交流会，曾就职于日本数字设备公司
MiracleLinux的程序员，毕业于庆应义垫大学研究生院。从1999年开始主
“未来のhyoshiokの日记”（有朝日hyoshiok的日记）：
www.TopSage.com
大家网
品
谢
---
## Page 6
注2：
注1：
关于贡献者
VII
岛本裕志(Hiroshi Shimamoto)
吉田俊辅（Shunsuke Yoshida)
安部东洋（Toyo Abe)
大岩尚宏（Naohiro Ooiwa）
跃在x86、任务调度（scheduler）、实时系统等领域的Linux 内核社区中。
软件工程师。
博客“第三の~戈》”（第三只企鹅）：htt:/blog.miraclelinux.com/thethird/。
参加过各种活动、展出，以及写书。
YLUG（横滨Linux User Group）、USAGI补完计划产2等关东附近的开源社区，
责操作系统、数据库、网络、虚拟化等基础设施。参加了小江户LUG 出I、
职于地方性软件企业和制造业系统集成企业，后加盟 Miracle Linux。主要负
任职于Miracle Linux 的系统工程师，不论在哪里都自称为普通人。曾先后就
本书之后打算挑战ARM。
序都写不好，那段经历真是让人几欲落泪。到目前只涉及了x86架构，写完
任职于 Miracle Linux 的软件工程师。初入 Linux 内核界时连 Hello World 程
机会很多。
语。经常被上司催促给社区出补丁，与日本的Linux 开发者代表人物见面的
bug 都能解决，近期在验证 Linux 的节能功能。擅长绘画，但不善日语和英
内核，负责解决驱动程序、网络、文件系统等大范围的许多 bug，号称任何
任职于 Miracle Linux 的软件工程师。从事开发业务，但更多的是调查并分析
IPv6 和 IPsec（用于 IPv4 和 IPv6）的协议栈，而 USAGI 补完计划是改善该项
USAGI（UniverSAl playGround for Ipv6）项目致力于开发Linux上的高质量
目的俱乐部。—译者注
Linux用户组。此处译为小江户LUG。——译者注
小江户<，全称小江户Linux User Group，以日本崎玉县川越市为中心的
。主要通过解决问题来学习Linux，特长为分析 core、crash。活
www.TopSage.com
---
## Page 7
注4：
感谢。
此外，
也提供了很有意思的hack。在此表示衷心的感谢。
选》一书。执笔本书的不仅有 Miracle Linux 的员工，贡献者岛本裕志、美田晃伸
本书的灵感来源于传世之作《BINARYHACKS—
致谢
美田晃伸（Akinobu Mita)
，本书的推荐序来自于 Ruby 编程语言的缔造者松本行弘。在此表示真挚的
译者注：本书的中文版《Binary hacks-
Linux 内核的 Fault Injection 的作者和维护者。
版社出版，ISBN：9787508387932。
www.TopSage.com
—黑客秘笈100选》已由中国电力出
秘の100
鸣谢IVII
一吉冈弘隆
---
## Page 8
www.TopSage.com
---
## Page 9
就可以写出经验之谈，避免纸上谈兵了。
试程序等，但那些也都是在实际遇到的 bug 的基础上进行的说明。举出实际例子,
每条 hack 都是实际工作中遇到的事情。有的例子中为了简化说明，重新书写了测
试的过程也经历了考验。
我们写下我们自己的调试方法，同时也加深了对自己的调试方法的理解。为什么使
执笔本书之际，心底的想法之一就是以我们遇到过的事情为中心，明确地介绍具体
也有菜鸟，也有像拥有魔法一样，哼着歌就能找到 bug 并改正的 hacker。
调试是种极端个性化的工作，10个人就会有10种调试方法。而且，调试中有高手，
寥寥无几，真是有点奇怪。
实践以书籍的形式广为流传，但软件开发的重要一环—调试，相关的入门书籍却
与设计新软件相比，有时会感到调试更加困难。尽管设计、编码和测试相关的最佳
而是用在扩展、改变软件及修改软件错误上。
间的情况并不罕见。实际上，软件开发成本中的大部分并没有用在设计新软件上,
思考一下编程中的设计、编码、测试和调试等过程，就会发现在调试上花费大量时
编程入门读物多如牛毛，为何调试的入门读物却屈指可数？
没有任何参考书。
任何编程语言和开发环境，任何编程都无法避免，但调试领域却很难总结，也几乎
的调试方法。
本书主要内容是程序员在编程过程中无法避免的调试过程。虽然调试技术不依赖于
www.TopSage.com
前
言
---
## Page 10
是在学生时代就有这样一本书该多好啊。
深入地理解编程的话，本书中的hack可以用来参考。我在编辑本书时就在想，要
我们特别希望诸位学生们阅读本书。如果在读过一遍编程语言入门书之后，希望更
人来说，本书的思考方式同样可以参考。
本书中的许多方法也具有参考价值。此外，对于使用Windows、Mac等不同平台的
Per/PHP/Python/Ruby等脚本语言进行编程的人们来说，哪怕语言和工具各不相同，
本书面向那些希望加强自己的编程技术的人。不仅是C/C++程序员，对于使用
本书读者对象为自已进行编程设计、实现、测试和调试工作的初级到中级程序员
方面，UNIX编程环境的基础知识也是必要的。除此之外的知识并没有特别要求。
层调试，计算机体系的基础知识、编程语言的基础知识是必要的。此外，开发环境
核开发者。本书并没有限定语言和开发环境，但在示例中均使用Linux。要进行底
本书的读者对象是主要用C/C++等编程语言进行开发的应用程序程序员和Linux内
阅读本书的必要知识和读者对象
希望通过本书，和诸位程序员一起学习进步。
我们自身对于调试和编程风格的理解而逐步进化。为了主动地学习这些知识，我们
随着工具和开发环境的进步，今后调试方法也会发生变化，而且调试方法也会随着
与更多的人共享最佳实践，而这些实践是我们程序员的无价之宝。
此外，像我们这种把自己的调试方法广泛公开的行为，如果能普遍流传的话，就能
专业程序员的基本能力。
种秘籍一
调试方法，与其说是本书中明确写出的东西，不如说是从各自的经验中得来的、某
们专业程序员对调试更深入的理解。
对比着阅读，针对我们的方法的适用范围、优缺点等各种观点进行讨论，这才是我
正是本书永恒不变的愿望。特别是希望诸位hacker们（大牛程序员）与自已的方式
比我们的方法更好的方法一定存在。讨论好的调试方法需要一个舞台作为基础，这
断积累这种拙劣的做法，调试方法才会进步。
起到抛砖引玉的作用，这种写法尽管质朴却十分重要。倒不如说，我们相信正是不
XI前言
一样的存在。作为程序员，在不断的钻研和积累中掌握调试技术，才是我们
www.TopSage.com
---
## Page 11
问题区分、迁回策略（workaround）的提出等。
此外，本书也不涉及一般疑难解答（troubleshooting）中众所周知的故障发生时的
TDD（Test-driven development，测试驱动开发）是集测试和调试于一身的开发过程，
本书不包含编程的一般方法，例如软件设计、容易调试的编码方法和测试方法论等。
本书不包含的内容
等。关于这些工具，我们期待看到诸位读者的 Debug hacks。
lockdep、kgdb、KDB、utrace, lockmeter、 mpatrol、e1000_dump、 git-bisect、 kmemcheck
本书涉及的工具之外，还有许多优秀工具，例如 ftrace、LTTng、dmalloc、blktrace、
的查看方法、crash 的使用方法，以及 kprobes 和 oprofile 等调试工具。
（Linux 内核）的调试。此外也会涉及GDB 等调试器的使用方法、转储文件（dump）
本书介绍调试的基本思路和方法。不仅包括对应用程序的调试，也包括对操作系统
本书包含的内容
以灵活运用。
法并不存在，但本书主要讨论更为通用的调试方法。因此，许多情况下这种思路可
但并不在本书的讨论范围。
尽管各个领域都有特殊的调试方法，但本书并不涉及。虽然包罗万象的全能调试方
说起编程，还有 Web 应用程序、嵌入式、游戏、中间件等各种各样的应用领域。
从事这方面的工作。
我们选择的例子主要是Linux上的应用程序和Linux 内核本身，其原因只是我们在
本书内容范围
荣幸。
书设置的范围、读者对象及书籍结构等方面，如果能获得您的意见反馈，真是不胜
见。特别是，市面上几乎没有正面讨论Linux 内核调试的参考书，因此在我们给本
此外，我们也希望拥有各自调试风格的熟练的hacker们阅读本书，并提出宝贵的意
书中的知识和技术。对于想把程序员之路走得更宽的人来说，本书是个好的起点，
如果 Ruby 处理程序发生 segmentation fault 而突然崩溃，为改正错误，就要用到本
使用脚本语言编程的人们，平常几乎不会意识到计算机体系和机器语言等，但是，
www.TopSage.com
前言IXI
---
## Page 12
如果遇到不理解的术语，可以参照该附录。
“附录Debug hacks 术语的基础知识”介绍本书出现的术语。阅读各篇 hack 时
位的方法等。
用 RT Watchdog 检测实时进程停止响应的方法、调查手头的 x86 机器是否支持 64
有 OOM Killer 的运行和原理、通过 GOT/PLT进行函数调用的原理和理解、initramfs、
等。介绍的工具、技巧有 strace、objdump、Valgrind、kprobes、jprobes、KAHO、
“第6章高手们的调试技术”汇集了广泛的内容，如调试时的各种工具、小技巧
时进程)、运行缓慢、CPU负载过高等各种异常情况的调试方法。
指针访问、链表破坏、竞态条件)、内核停止响应（死循环、自旋锁、信号量、实
mallocO/freeO中发生的故障、应用程序停止响应等。
无法正确显示、数组非法访问导致的栈破坏、灵活应用监测点检测内存非法访问、
介绍各种调试方法，包括栈溢出导致的 segmentation fault（SIGSEGV）、backtrace
储、内核特有的汇编语言等内核调试的基础知识。
种转储的获取方法、crash 命令的使用方法、用 IPMI 和 NMI watchdog 获取崩溃转
阅读方法、串口控制台的使用方法、通过网络获取内核信息的方法、SysRq 键、各
习方法等。
Intel 架构的基础知识、栈的基础知识、函数调用时的参数传递方法、汇编语言的学
“第1章热身准备”概要地讲述调试是怎样的过程，并介绍本书的整体情况。
本书结构
本书主要着眼于发现 bug 之后的修改过程，这个狭义的调试。
“第5章实践内核调试”介绍内核故障的基本调试方法，包括kernel panic(NULL
“第3章
XII I 
“第4章应用程序调试实践”讲述用户应用程序的实践性的调试方法。通过实例
前言
内核调试的准备”介绍 Linux 内核调试方法的基础，包括Oops 信息的
www.TopSage.com
---
## Page 13
日本：
说法，也可能有印刷错误。阅读本书时如发现问题，请联系我们，以便再版时改正。
我们尽最大努力对本书的内容进行验证和确认，但难免出现错误或容易导致误解的
意见和疑问
读，本书的索引所列页码为原日文版页码。
初级
各 hack左侧的温度计图标表示各 hack的难易度。
表示用户输入的内容。
粗体等宽字体（sample）
表示文件名、源代码、输出、命令等。
等宽字体（sample)
本书的体例
到甘之如。如果读者能告诉我们一些hack 技巧，我们会感到十分幸运。
等。而对于玩转内核的高手们，阅读本书所介绍的工具的使用方法等，也可能会感
趣的章节。如果想掌握基础知识，可以认真阅读第1章和第2章，并阅读参考文献
本书除了第1章之外，并没有假设阅读顺序。有一定基础的读者可以随意翻阅感兴
本书的使用方法
株式会社 OReilly Japan