VLAN（virtual local area network）是一组与位置无关的逻辑端口。VLAN就相当于一个独立的三层网络。VLAN的成员无需局限于同一交换机的顺序或偶数端口。下图显示了一个常规的部署，左边这张图节点连接到交换机，交换机连接到路由器。所有的节点都位于同一IP网络，因为他们都连接到路由器同一接口。
图中没有显示的是，缺省情况下，所有节点实际上都是同一VLAN。因此，这种拓扑接口可看作是基于同一VLAN的，如上面右图所示。例如，Cisco设备默认VLAN是VLAN 1，也称为管理VLAN。默认配置下包含所有的端口，体现在源地址表（source address table，SAT）中。该表用于交换机按照目的MAC地址将帧转发至合适的二层端口。引入VLAN之后，源地址表按照VLAN将端口与MAC地址相对应起来，从而使得交换机能够做出更多高级转发决策。下图显示了show mac address table和show vlan命令的显示输出。所有端口（FA0/1 – FA0/24）都在VLAN 1。
另一种常用的拓扑结构是两个交换机被一个路由器分离开来，如下图所示。这种情况下，每台交换机各连接一组节点。每个交换机上的各节点共享一个IP地址域，这里有两个网段：192.168.1.0和192.168.2.0。
注意到两台交换机的VLAN相同。非本地网络数据流必须经过路由器转发。路由器不会转发二层单播，多播以及广播帧。这种拓扑逻辑在两个地方类似于多VLAN：同一VLAN下的节点共享一个通用地址域，非本地数据流（对应多VLAN情况不同VLAN的节点）需通过路由器转发。在一台交换机上添加一个VLAN，去掉另一台交换机的话，结构如下所示：
每一个VLAN相当于一个独立的三层IP网络，因此，192.168.1.0上的节点试图与192.168.2.0上的节点通信时，不同VLAN通信必须通过路由器，即使所有设备都连接到同一交换机。二层单播，多播和广播数据只会在同一VLAN内转发及泛洪，因此VLAN 1产生的数据不会为VLAN 2节点所见。只有交换机能看得到VLAN，节点和路由器都感觉不到VLAN的存在。添加了路由决策之后，可以利用3层的功能来实现更多的安全设定，更多流量以及负载均衡。
VLAN的作用：
安全性：每一个分组的敏感数据需要与网络其他部分隔离开，减少保密信息遭到破坏的可能性。如下图所示，VLAN 10上的教职工主机完全与学生和访客数据隔离。
节约成本：无需昂贵的网络升级，并且带宽及上行链路利用率更加有效。
性能提高：将二层网络划分成多个逻辑工作组（广播域）减少网络间不必要的数据流并提升性能。
缩小广播域：减少一个广播域上的设备数量。如上图所示：网络上有六台主机但有三个广播域：教职工，学生，访客。
提升IT管理效率：网络需求相似的用户共享同一VLAN，从而网络管理更为简单。当添加一个新的交换机，在指定端口VLAN时，所有策略和步骤已配置好。
简化项目和应用管理：VLAN将用户和网络设备汇集起来，以支持不同的业务或地理位置需求。
每一个VLAN对应于一个IP网络，因此，部署VLAN的时候必须结合考虑网络地址层级的实现情况。
交换机间VLAN：
多交换机的情况下，VLAN是怎么工作的呢？下图所示的这种情况，两个交换机VLAN相同，都是默认VLAN 1，即两个交换机之间的联系同在VLAN 1之内。路由器是所有节点的出口。
这时单播，多播和广播数据自由传输，所有节点属于同一IP地址。这时节点之间的通信不会有问题，因为交换机的SAT显示它们在同一VLAN。
而下面这种连接方式就会有问题。由于VLAN在连接端口的主机之间创建了三层边界，它们将无法通信。
仔细看上图，这里有很多问题。第一，所有主机都在同一IP网，尽管连接到不同的VLAN。第二，路由器在VLAN 1,因此与所有节点隔离。最后，两台交换机通过不同的VLAN互连。每一点都会造成通信阻碍，合在一起，网络各元素之间会完全无法通信。
交换机用满或同一管理单元物理上彼此分离的情形是很常见的。这种情况下，VLAN需要通过trunk延伸至相邻交换机。trunk能够连接交换机，在网络间传载VLAN信息。如下图所示：
对之前的拓扑的改进包括：
PC 1和PC 2分配到192.168.1.0网段以及VLAN 2。
PC 3和PC 4分配到192.168.2.0网段以及VLAN 3。
路由器接口连接到VLAN 2和VLAN 3。
交换机间通过trunk线互连。
注意到trunk端口出现在VLAN 1，他们没有用字母T来标识。trunk在任何VLAN都没有成员。现在VLAN跨越多交换机，同一VLAN下的节点可以物理上位于任何地方。
什么是Trunk：
Trunk是在两个网络设备之间承载多于一种VLAN的端到端的连接，将VLAN延伸至整个网络。没有VLAN Trunk，VLAN也不会非常有用。VLAN Trunk允许VLAN数据流在交换机间传输，所以设备在同一VLAN，但连接到不同交换机，能够不通过路由器来进行通信。
一个VLAN trunk不属于某一特定VLAN，而是交换机和路由器间多个VLAN的通道。如下图所示，交换机S1和S2，以及S1和S3之间的链路，配置为传输从VLAN10,20,30以及90的数据流。该网络没有VLAN trunk就无法工作。
当安装好trunk线之后，帧在trunk线传输是就可以使用trunk协议来修改以太网帧。这也意味着交换机端口有不止一种操作模式。缺省情况下，所有端口都称为接入端口。当一个端口用于交换机间互连传输VLAN信息时，这种端口模式改变为trunk，节点也路由器通常不知道VLAN的存在并使用标准以太网帧或“untagged”帧。trunk线能够使用“tagged”帧来标记VLAN或优先级。
因此，在trunk端口，运行trunk协议来允许帧中包含trunk信息。如下图所示：
PC 1在经过路由表处理后向PC 2发送数据流。这两个节点在同一VLAN但不同交换机。步骤如下：
以太网帧离开PC 1到达Switch 1。
Switch 1的SAT表明目的地是trunk线的另一端。
Switch 1使用trunk协议在以太网帧中添加VLAN id。
新帧离开Switch 1的trunk端口被Switch 2接收。
Switch 2读取trunk id并解析trunk协议。
源帧按照Switch 2的SAT转发至目的地（端口4）。
VLAN tag如下图所示，包含类型域，优先级域，CFI（Canonical Format Indicator）指示MAC数据域，VLAN ID。
网络基本功（二十一）：细说HTTP（上）
网络基本功（二十一）：细说HTTP（上）
转载请在文首保留原文出处：EMC中文支持论坛https://community.emc.com/go/chinese 
介绍
HTTP是一个由请求与响应组成的客户端与服务端交互协议。浏览器发送一个HTTP请求到指定的URL地址，持有此URL地址的WEB服务器将返回一个HTTP请求。请求的类型有GET, POST, HEAD, PUT, DELETE, OPTIONS和TRACE等。
更多信息
HTTP操作模式与客户端/服务器通信:
HTTP只关心一个功能：从web服务器到web客户端的超文本文件以及其他文件的传输。从通信的角度来看，客户端主要负责发送请求给服务器，服务器对请求作出响应。相比FTP和SMTP这样需要多个通信步骤和命令/响应序列的应用层协议，HTTP更像BOOTP和ARP。
基本的HTTP客户端/服务器通信：
最简单的HTTP操作包括一个使用web浏览器的HTTP客户端，和一个HTTP服务器，通常称为web服务器。在TCP连接创建之后，以下两步通信过程如下：
客户端请求：HTTP客户端根据HTTP协议标准发送HTTP请求信息，该信息指定客户端想要获取的资源或包括准备提供给服务器的信息。
服务器响应：服务器读取并解释该请求。对请求作出相应行为并创建HTTP响应信息，发回给客户端。响应信息包括该请求是否成功，也包括客户端请求的资源内容。
HTTP消息格式：
使用HTTP的设备通信都是通过HTTP消息来完成，其中只有两种类型：请求和响应。客户端通常发送请求和接收响应，服务器接收请求和发送响应。信息使用的是文本的形式。
常规HTTP消息格式如下所示：
[]
[]
起始行包含消息的类型。请求消息中，这一行以方式的形式表明消息为请求类型，并制定一个URI(Uniform Resource Identifier)指明请求的对象资源。响应通过起始行来表明请求响应的状态信息。
首部字段HTTP定义了多种类型的首部字段。通过功能分组，除了主机头以外，几乎所有首部字段都是可选的。格式如下：:。
主体也是可选的，包含客户端和服务器通信所需的一系列信息，如响应的详细错误消息。更加常见的是承载文件或其他资源，HTTP标准中称为实体。由于大多数客户端请求服务器发送文件或其他资源，实体在响应信息中最为常见。
尾部，HTTP/1.1默认使用永久链接，消息在服务器与客户端之间以流的形式传输，需要标记消息的结束点和开始点。
HTTP请求消息：
客户端通过打开一个TCP连接发起与服务器的HTTP会话，之后发送HTTP请求信息
起始行
主要有三个用途：
表明客户端想要进行的命令或行为
指定行为想要获取的资源
告知服务器客户端使用的HTTP版本
起始行的语法为：
Method
method就是客户端想要服务器做什么，三种比较常用：GET，HEAD和POST。
GET
从服务器向客户端发送发送命名资源
PUT
将来自客户端的数据存储到一个命名的服务器资源中去
DELETE
从服务器中删除命名资源
POST
将客户端数据发送到一个服务器网关应用程序
HEAD
仅发送命名资源响应中的HTTP首部
Request URI
Request URI是请求所申请资源的URI。目前URI通常值符合Web URL语法的HTTP URL。有趣的是，HTTP起始行所使用的URL形式通常与HTML文件或用户输入的不同。这是因为一个完整URL中的部分信息是用来控制HTTP本身的。这是用户和HTTP客户端通信所需，而不包括在客户端对服务器的请求中。在请求中指定资源的标准方式是在起始行中加入路径和文件名（以及可选的查询信息），同时在主机头字段指定主机。
例如：假设用户输入URL：http://www.myfavoritewebsite.com:8080/chatware/chatroom.php，我们不需要发送http:到服务器。客户端将余下的信息拆分成URI /chatware/chatroom.php主机行会包括www.myfavoritewebsite.com:8080。因此，请求的开始内容如下：
GET /chatware/chatroom.php HTTP/1.1
Host: www.myfavoritewebsite.com:8080
这一准则的例外是当请求对象是代理服务器时。这时请求就要使用完整URL的形式，以使代理可以作为初始客户端来处理该请求。请求如下所示：
GET http://www.myfavoritewebsite.com:8080/chatware/chatroom.php HTTP/1.1
请求首部
在请求首部，提供给服务器关于请求的详细信息。所有请求首部都使用相同的结构，但按照以下功能分类：
普通报头普通报头通常指消息本身，通常用于控制其处理过程或提供给接收方额外信息。这类报头不限于请求或响应信息，所以两者都可能出现。同样，也与所承载的实体没有特别关系。
请求报头 这类报头告知服务器关于客户端请求的更多信息，给予客户端更多关于请求处理的控制。例如，一些请求报头用于指定条件请求，只有在特定条件时才执行。其他告诉服务器响应信息中客户端能够徐立的格式或编码。如：
Accept 告诉服务器端，接受哪些类型的信息。
Accept-Encoding 可接受的内容编码。
Accept-Lanague 指定一种自然语言。
Connection 表示是否需要持久连接。如果Servlet看到这里的值为“Keep-Alive”，或者看到请求使用的是HTTP 1.1（HTTP 1.1默认进行持久连接），它就可以利用持久连接的优点，当页面包含多个元素时显著地减少下载所需要的时间。
Cookie 最重要的请求头信息之一， 每次请求时都会携带上Cookie以方便服务器端识别是否是同一个客户端。
Host  host请求报头域主要用于指定被请求资源的Internet主机和端口号，它通常从HTTP URL中提取出来。
User-Agent用户代理，一般情况是浏览器。我们上网登陆论坛的时候，往往会看到一些欢迎信息，其中列出了客户端操作系统的名称和版本，所使用的浏览器的名称和版本，实际上，服务器应用程序就是从User-Agent这个请求报头域中获取到这些信息。User-Agent请求报头域允许客户端将它的操作系统、浏览器和其它属性告诉服务器。
参考
TCP/IP Guide
网络基本功（二十二）：细说HTTP（下）
网络基本功（二十二）：细说HTTP（下）
转载请在文首保留原文出处：EMC中文支持论坛https://community.emc.com/go/chinese 
介绍
本文承接上文。
更多信息
HTTP回复信息: