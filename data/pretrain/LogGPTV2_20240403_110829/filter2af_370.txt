# DoubleAgent：代码注入与持久化技术——适用于所有Windows版本的进程控制方法

#### 译文声明
本文为翻译文章，原文来源于 [cybellum.com](https://cybellum.com)。具体内容及含义以原文为准。

翻译者：[pwn_361](http://bobao.360.cn/member/contribute?uid=2798962642)
稿酬：260 RMB
投稿方式：发送邮件至 linwei#360.cn 或通过网页在线提交稿件

## 概述
我们介绍了一种新的零日技术，名为“DoubleAgent”，该技术可用于代码注入和对机器进行持久性控制。

**适用范围：**
- 所有Windows版本（从XP到Windows 10）
- 各种架构（X86和X64）
- 不论用户权限高低，包括特权进程（如操作系统服务、杀毒软件等）

DoubleAgent利用了一个在Windows系统中存在了15年但未被公开的功能，因此目前无法通过常规手段修复。

### 代码注入
使用DoubleAgent，攻击者能够将任意DLL注入到任何进程中。这种注入发生在目标进程启动的早期阶段，从而使得受害者完全丧失对其进程的保护能力。此技术具有革命性意义，因为现有的任何杀毒软件都无法检测或阻止这种注入行为。

### 持久化
即使在系统重启或安装补丁后，DoubleAgent仍能继续注入代码，这使其成为一种理想的持久化工具。一旦某个DLL被注入到特定进程中，无论受害者是否重新安装应用，该DLL都会在每次进程启动时自动加载。

## 攻击向量
1. **反病毒软件攻击**：通过注入代码至反病毒程序，实现对这些软件的全面控制，并绕过其自我防护机制。已证实有效的产品包括但不限于：Avast, AVG, Avira, Bitdefender, Comodo, ESET, F-Secure, Kaspersky, Malwarebytes, McAfee, Norton, Panda, Quick Heal, Trend Micro。
2. **持久化恶意软件部署**：安装能够在系统重启后仍然存活的恶意软件。
3. **权限劫持**：利用可信进程的权限执行恶意操作，例如数据窃取、命令与控制通信、横向移动、敏感信息解密等。
4. **修改进程行为**：改变进程的行为模式，例如植入后门或削弱加密算法。
5. **跨会话攻击**：向其他用户会话中的进程注入代码（如管理员或系统账户）。
6. **其他潜在用途**。

## 技术细节
### 微软应用程序验证器提供者
微软提供了一种标准方法，允许开发者为本地代码安装运行时验证工具。通过创建一个验证器提供者DLL并在注册表中设置相应键值，可以将其绑定至特定可执行文件。每当该文件启动时，Windows加载器就会自动注入此DLL。

### 注册过程
每个验证器提供者DLL都与一个具体的可执行文件名相关联。一旦注册成功，每当带有该名称的新进程被创建时，指定的DLL便会被自动加载。即便经过重启、更新或重装系统，这种关联依然有效。

可以通过Cybellum发布的[DoubleAgent项目](https://github.com/Cybellum/DoubleAgent)来注册一个新的应用程序验证器提供者，或者将注册功能集成到现有项目中，详见[验证模块](https://github.com/Cybellum/DoubleAgent/blob/master/DoubleAgent/Verifier.h)。

### 注入机制
当进程初始化时，ntdll.dll负责调用LdrInitializeThunk函数，将控制权从内核模式切换到用户模式。如果存在应用程序验证器，则会在加载kernel32.dll之前先加载验证器提供者DLL。这样就赋予了攻击者对该进程的绝对控制权。

## 缓解措施
微软已经提出了一种新设计——"受保护进程"，专门用于增强反病毒服务的安全性。然而，除了Defender外，几乎没有其他反病毒软件采用了这项技术。需要注意的是，即使反病毒厂商尝试阻止注册尝试，由于这是操作系统的一项合法功能，所以代码注入和持久化技术仍然难以根除。

## 源代码
您可以在[Cybellum的GitHub页面](https://github.com/Cybellum/DoubleAgent)上找到DoubleAgent技术的完整源码。

## 总结
随着攻击者不断寻找新的漏洞并开发出更加复杂的攻击手段，我们需要采取更多措施来防御这些威胁。传统安全解决方案可能不再足够应对当前的挑战，正如DoubleAgent所展示的那样，它们不仅无法抵御零日攻击，还可能为攻击者提供更多可乘之机。