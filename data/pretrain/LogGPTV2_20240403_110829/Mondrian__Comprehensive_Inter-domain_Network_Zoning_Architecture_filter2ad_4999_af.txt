the receiver’s consent towards incoming trafﬁc. MONDRIAN
provides several signiﬁcant advantages. First, MONDRIAN
is compatible with various Internet architectures, achieving
practicality and deployability. Second, MONDRIAN provides
enhanced security along with source authenticity, data con-
ﬁdentiality, and data integrity. Lastly, MONDRIAN improves
manageability. The simpliﬁed zoning structure, advanced key
establishment system, and centralized policy management sim-
plify the network management.
X. CONCLUSION
Network zoning has long been recognized as the corner-
stone of secure network operation and management. In the
current practice, operators realize network zones with network
segmentation technologies and security middleboxes. As in-
formation systems become more dynamic from a topological,
operational, and functional perspective, however, the conven-
tional network-zoning architectures face new challenges in
terms of scalability and ﬂexibility. In this paper, we have shown
that lightweight policy enforcement for inter-zone communi-
cation is achievable. Following a constructive approach with
a cryptographic foundation, it is possible to create a proactive
alternative to the mostly reactive systems presently used in
network zoning. In conjunction with MONDRIAN, veriﬁcation
based on ﬁrewalls becomes simpler because ﬁrewalls would
only process a limited amount of (ﬁltered) trafﬁc. MONDRIAN
consequently reduces the number of management points of
distributed networks while retaining a high degree of security.
ACKNOWLEDGMENT
We would like to thank our shepherd, Patrick Traynor,
and the anonymous reviewers for their insightful feedback
and suggestions. We thank to Markus Legner and Giacomo
Giuliari for helpful discussions that improved this research. We
gratefully acknowledge support from ETH Zurich, and from
the Zurich Information Security and Privacy Center (ZISC).
This work was also supported by Institute of Information
& communications Technology Planning & Evaluation (IITP)
grant funded by the Korea government (MSIT) (No.2019-0-
01697, Development of Automated Vulnerability Discovery
Technologies for Blockchain Platform Security).
14
REFERENCES
[1] D. E. 3rd, T. Senevirathne, A. Ghanwani, D. Dutt, and A. Banerjee,
“Transparent Interconnection of Lots of Links (TRILL) Use of IS-IS,”
RFC 7176, IETF, 2014.
[2] Apache ZooKeeper, https://zookeeper.apache.org/.
[3]
J. N. Bakker, I. Welch, and W. K. Seah, “Network-wide Virtual Firewall
using SDN/OpenFlow,” in Proceedings of IEEE Conference on Network
Function Virtualization and Software Deﬁned Networks (NFV-SDN),
2016.
[4] S. M. Bellovin, “Distributed Firewalls,” Login Magazine, Special Issue
on Security, 1999.
[5] P. Berde, M. Gerola, J. Hart, Y. Higuchi, M. Kobayashi, T. Koide,
B. Lantz, B. O’Connor, P. Radoslavov, W. Snow et al., “Onos: towards
an open, distributed sdn os,” in Proceedings of the Workshop on Hot
Topics in Software Deﬁned Networking (HOTSDN), 2014.
[6] Y. Cai, L. Wei, H. Ou, V. Arya, and S. Jethwani, “Protocol Independent
Multicast Equal-Cost Multipath (ECMP) Redirect,” RFC 6754, IETF,
2012.
[7] W. R. Cheswick, S. M. Bellovin, and A. D. Rubin, Firewalls and
Internet security: repelling the wily hacker. Addison-Wesley, 2003.
[8] Cidranger, https://github.com/yl2chen/cidranger.
[9] Consul, https://github.com/hashicorp/consul.
[10] T. Das, V. Sridharan, and M. Gurusamy, “A Survey on Controller Place-
ment in SDN,” IEEE Communications Surveys & Tutorials, vol. 22,
no. 1, pp. 472–503, 2019.
[11] S. Dawkins, “Path Aware Networking: A Bestiary of Roads Not Taken,”
IETF Internet Draft, 2018.
J. Deng, H. Hu, H. Li, Z. Pan, K.-C. Wang, G.-J. Ahn, J. Bi, and Y. Park,
“VNGuard: An NFV/SDN Combination Framework for Provisioning
and Managing Virtual Firewalls,” in Proceedings of IEEE Conference on
Network Function Virtualization and Software Deﬁned Network (NFV-
SDN), 2015.
[12]
[13] DPDK Project, “Data Plane Development Kit,” https://dpdk.org.
[14] M. Dworkin, “Recommendation for Block Cipher Modes of Operation:
Galois/Counter Mode (GCM) and GMAC,” NIST Special Publication
800-38D, 2007.
[15] EJBCA, https://svn.cesecore.eu/svn/ejbca/trunk/ejbca/.
[16] W. Enck, P. McDaniel, S. Sen, P. Sebos, S. Spoerel, A. Greenberg,
S. Rao, and W. Aiello, “Conﬁguration management at massive scale:
System design and experience,” in Proceedings of the USENIX Annual
Technical Conference (USENIX ATC), 2007.
[17] ETCD, https://github.com/etcd-io/etcd.
[18] S. K. Fayaz, T. Yu, Y. Tobioka, S. Chaki, and V. Sekar, “BUZZ: Testing
Context-Dependent Policies in Stateful Networks,” in Proceedings of the
USENIX Symposium on Networked Systems Design and Implementation
(NSDI), 2016.
[19] D. Felsch, M. Grothe, J. Schwenk, A. Czubak, and M. Szymanek, “The
Dangers of Key Reuse: Practical Attacks on IPsec IKE,” in Proceedings
of the USENIX Security Symposium, 2018.
[20] Go 1.14, https://golang.org/doc/go1.14.
[21] A. Gontarczyk, P. McMillan, and C. Pavlovski, “Blueprint for Cyber
Security Zone Modeling,” Information Technology in Industry, vol. 3,
no. 2, pp. 38–45, 2015.
[22] D. Harkins and D. Carrel, “The Internet Key Exchange (IKE),” RFC
2409, IETF, 1998.
[23] S. Hassas Yeganeh and Y. Ganjali, “Kandoo: A Framework for Efﬁcient
and Scalable Ofﬂoading of Control Applications,” in Proceedings of
the workshop on Hot Topics in Software Deﬁned Networks (HOTSDN),
2012.
[24] M. He, A. Varasteh, and W. Kellerer, “Toward a Flexible Design of SDN
Dynamic Control Plane: An Online Optimization Approach,” IEEE
Transactions on Network and Service Management, vol. 16, no. 4, pp.
1694–1708, 2019.
[25] C. Hopps, “Analysis of an Equal-Cost Multi-Path Algorithm,” RFC
2992 (Informational), IETF, 2000.
IEEE Std., “1363-2000: Ieee standard speciﬁcations for public-key
cryptography,” 2000.
[26]
[27]
[28]
[29]
IEEE Std., “802.1aq-2012: Local and metropolitan area networks-
shortest path bridging,” 2012.
IEEE Std., “802.1q-2018: Local and metropolitan area networks-bridges
and bridged networks,” 2018.
Juniper, “Security Products Comparison Chart,” https://www.juniper.
net/us/en/local/pdf/datasheets/1000265-en.pdf.
[30] C. Kaufman, “Internet Key Exchange (IKEv2) Protocol,” RFC 4306,
IETF, 2005.
[31] S. Kent, “IP Encapsulating Security Payload (ESP),” RFC 4303, IETF,
2005.
[32] S. Kent and K. Seo, “Security Architecture for the Internet Protocol,”
RFC 4301, IETF, 2005.
J. Kwon, T. Lee, C. Hähni, and A. Perrig, “SVLAN: Secure & Scalable
Network Virtualization,” in Proceedings of the Symposium on Network
and Distributed System Security (NDSS), 2020.
[33]
[34] A. X. Liu and F. Chen, “Collaborative Enforcement of Firewall Policies
in Virtual Private Networks,” in Proceedings of the ACM Symposium
on Principles of Distributed Computing, 2008.
[35] G. Lospoto, M. Rimondini, B. G. Vignoli, and G. Di Battista, “Rethink-
ing virtual private networks in the software-deﬁned era,” in Proceedings
of
the IFIP/IEEE International Symposium on Integrated Network
Management (IM), 2015.
[36] M. Mahalingam, D. Dutt, K. Duda, P. Agarwal, L. Kreeger, T. Sridhar,
M. Bursell, and C. Wright, “Virtual eXtensible Local Area Network
(VXLAN): A Framework for Overlaying Virtualized Layer 2 Networks
over Layer 3 Networks,” RFC 7348, IETF, 2014.
[37] Q. Mahmoud, Cognitive networks: towards self-aware networks.
Wiley & Sons, 2007.
John
[38] T. Markham and C. Payne, “Security at the Network Edge: A Dis-
tributed Firewall Architecture,” in Proceedings of DARPA Information
Survivability Conference and Exposition II. (DISCEX’01), 2001.
[39] D. Maughan, M. Schertler, M. Schneider, and J. Turner, “Internet
Security Association and Key Management Protocol (ISAKMP),” RFC
2408, IETF, 1998.
[40] A. Mayer, A. Wool, and E. Ziskind, “Fang: A Firewall Analysis
Engine,” in Proceedings of IEEE Symposium on Security and Privacy
(S&P), 2000.
J. Medved, R. Varga, A. Tkacik, and K. Gray, “Opendaylight: Towards
a Model-driven SDN Aontroller Architecture,” in Proceedings of IEEE
International Symposium on a World of Wireless, Mobile and Multime-
dia Networks, 2014.
[41]
[42] Microsoft,
“Microsoft 365 Denial-of-Service Defense Strategy,”
https://docs.microsoft.com/en-us/ofﬁce365/enterprise/ofﬁce-365-
microsoft-dos-defense-strategy.
[43] A. Morton, “IMIX Genome: Speciﬁcation of Variable Packet Sizes for
Additional Testing,” RFC 6985, IETF, 2013.
[44] M. Mousa, A. M. Bahaa-Eldin, and M. A. Sobh, “Autonomic man-
agement of mpls backbone networks using sdns,” in Proceedings of
the International Conference on Computer Engineering and Systems
(ICCES), 2017.
[45] L. Obregon, “Infrastructure Security Architecture for Effective Security
Monitoring,” SANS Institute, vol. 2, 2015.
[46] OpenXPKI, https://github.com/openxpki/openxpki/.
[47] A. Panda, C. Scott, A. Ghodsi, T. Koponen, and S. Shenker, “Cap for
Networks,” in Proceedings of the ACM Workshop on Hot Topics in
Software Deﬁned Networking (HotSDN), 2013.
[48] R. Perlman, D. E. 3rd, D. Dutt, S. Gai, and A. Ghanwani, “Routing
Bridges (RBridges): Base Protocol Speciﬁcation,” RFC 6325, IETF,
2011.
[49] A. Perrig, P. Szalachowski, R. M. Reischuk, and L. Chuat, SCION: A
Secure Internet Architecture. Springer Verlag, 2017.
[50] K. Phemius, M. Bouet, and J. Leguay, “Disco: Distributed Multi-domain
SDN Controllers,” in Proceedings of the IEEE Network Operations and
Management Symposium (NOMS), 2014.
[51] PISKES
Implementation,
scionlab/go/lib/drkey.
[52] Prototype
Implementation,
zoning/go/sig.
https://github.com/netsec-ethz/scion/tree/
https://github.com/chaehni/scion/tree/
15
[53] Y. Qi, B. Yang, B. Xu, and J. Li, “Towards System-level Optimization
for High Performance Uniﬁed Threat Management,” in Proceedings of
the International Conference on Networking and Services (ICNS), 2007.
[54] H. V. Ramasamy, C.-L. Tsao, B. Pﬁtzmann, N. Joukov, and J. W. Mur-
ray, “Towards Automated Identiﬁcation of Security Zone Classiﬁcation
in Enterprise Networks,” in Hot-ICE, 2011.
[55] E. Rescorla, “The transport Layer Security (TLS) Protocol Version 1.3,”
RFC 8446, IETF, 2018.
[56] B. Rothenberger, D. Roos, M. Legner, and A. Perrig, “PISKES:
Pragmatic Internet-Scale Key-Establishment System,” in Proceedings of
the ACM Asia Conference on Computer and Communications Security
(ASIACCS), 2020.
[57] S. Gueron, Intel® Advanced Encryption Standard (AES) New Instruc-
tions Set. White Paper, 2012.
[58] X. Shi, H. Lin, H. Jin, B. B. Zhou, Z. Yin, S. Di, and S. Wu, “GIRAFFE:
A Scalable Distributed Coordination Service for Large-scale Systems,”
in Proceedings of IEEE International Conference on Cluster Computing
(CLUSTER), 2014.
[59] SIG (Scion-IP Gateway),
master/go/posix-gateway.
https://github.com/scionproto/scion/tree/
[60] Spirent, IMIX (Internet Mix) Journal. Test Methodology Journal, 2006.
[61] SQLite 3.32.0, https://www.sqlite.org/releaselog/3_32_0.html.
[62] Statista, “Leading banks in the United States in 2019, by num-
ber of branches,” https://www.statista.com/statistics/935643/banks-
with-the-most-branches-usa/.
[63] X. Sun, Y. Sung, S. D. Krothapalli, and S. G. Rao, “A systematic
approach for evolving vlan designs,” in Proceedings of the Annual IEEE
Conference on Computer Communications (INFOCOM), 2010.
[64] Y. Sung, S. G. Rao, G. G. Xie, and D. A. Maltz, “Towards systematic
design of enterprise networks,” in Proceedings of the ACM CoNEXT,
2008.
[65] D. Thaler and C. Hopps, “Multipath Issues in Unicast and Multicast
Next-Hop Selection,” RFC 2991 (Informational), IETF, 2000.
[66] B. Trammell, J. Smith, and A. Perrig, “Adding Path Awareness to the
Internet Architecture,” IEEE Internet Computing, vol. 22, no. 2, 2018.
[67] B. Tschaen, Y. Zhang, T. Benson, S. Banerjee, J. Lee, and J.-M. Kang,
“SFC-Checker: Checking the Correct Forwarding Behavior of Service
Function Chaining,” in Proceedings of IEEE Conference on Network
Function Virtualization and Software Deﬁned Networks (NFV-SDN),
2016.
[68] K. Yap, M. Motiwala, J. Rahe, S. Padgett, M. Holliman, G. Baldus,
M. Hines, T. Kim, A. Narayanan, A. Jain et al., “Taking the Edge
off with Espresso: Scale, Reliability and Programmability for Flobal
Internet Peering,” in Proceedings of the ACM SIGCOMM, 2017.
[69] T. Yu, S. K. Fayaz, M. P. Collins, V. Sekar, and S. Seshan, “PSI: Precise
Security Instrumentation for Enterprise Networks,” in Proceedings of
the Symposium on Network and Distributed System Security (NDSS),
2017.
[70] Y. Yuan, S. Moon, S. Uppal, L. Jia, and V. Sekar, “NetSMC: A
Custom Symbolic Model Checker for Stateful Network Veriﬁcation,” in
Proceedings of the USENIX Symposium on Networked Systems Design
and Implementation (NSDI), 2020.
[71] T. Zhang, P. Giaccone, A. Bianco, and S. De Domenico, “The Role
of the Inter-controller Consensus in the Placement of Distributed SDN
Controllers,” Computer Communications, vol. 113, pp. 1–13, 2017.
APPENDIX A
PACKET METADATA
t y p e P a c k e t
s t r u c t {
I n g r e s s
S r c H o s t
DstHost
RemoteTP
DstZone
RawPacket
b o o l
n e t . IP
n e t . IP
s t r i n g
u i n t 3 2
common . RawBytes
}
The packet metadata is the abstract object passed between
modules, describing an IP packet. It accumulates information
about the raw IP packet (RawPacket). The Ingress ﬁeld
identiﬁes a packet as either an ingress packet, coming from the
WAN, or an egress packet that originated in the local network.
SrcHost and DstHost reﬂect the source and destination
IP addresses of the packet. RemoteTP designates the remote
TP. For an ingress packet that is the source TP from which
the packet was received, for an egress packet it is the TP to
which the packet needs to be forwarded to. DstZone is the
Zone ID of the zone to which DstHost belongs.
APPENDIX B
CONTROLLER DATABASE
CREATE TABLE Zones (
i d INTEGER NOT NULL,
name TEXT ,
PRIMARY KEY( i d )
) ;
CREATE TABLE S i t e s (
t p _ a d d r e s s TEXT NOT NULL,
name TEXT ,
PRIMARY KEY( t p _ a d d r e s s )
) ;
CREATE TABLE S u b n e t s (
n e t _ i p BLOB NOT NULL,
net_mask BLOB NOT NULL,
zone INTEGER NOT NULL,
t p _ a d d r e s s TEXT NOT NULL,
PRIMARY KEY ( n e t _ i p , net_mask ) ,
FOREIGN KEY ( zone ) REFERENCES Zones ( i d ) ON DELETE CASCADE,
FOREIGN KEY ( t p _ a d d r e s s ) REFERENCES S i t e s ( t p _ a d d r e s s ) ON DELETE CASCADE
) ;
CREATE TABLE T r a n s i t i o n s (
s r c INTEGER NOT NULL,
d e s t
INTEGER NOT NULL,
PRIMARY KEY ( s r c , d e s t ) ON CONFLICT REPLACE ,
FOREIGN KEY ( s r c ) REFERENCES Zones ( i d ) ON DELETE CASCADE,
FOREIGN KEY ( d e s t ) REFERENCES Zones ( i d ) ON DELETE CASCADE
)
The controller database consists of 4 tables: Zones,
Sites, Subnets, and Transitions. The Zones table
contains all network zones known to the controller, identiﬁed
by zone IDs. Additionally, a human readable description is
attached. The Sites table holds all known branch sites with
the addresses of the corresponding TPs and a textual descrip-
tion. The Subnets table describes the conﬁgured IP subnets
together with their zone membership and the TP behind which
they are located. Finally, the Transitions table reﬂects the
zone transition matrix of allowed zone transitions.
16