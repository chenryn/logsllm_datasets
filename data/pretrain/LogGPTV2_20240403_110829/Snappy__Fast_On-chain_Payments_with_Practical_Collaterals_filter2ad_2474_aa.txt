title:Snappy: Fast On-chain Payments with Practical Collaterals
author:Vasilios Mavroudis and
Karl W&quot;ust and
Aritra Dhar and
Kari Kostiainen and
Srdjan Capkun
Snappy: Fast On-chain Payments
with Practical Collaterals
Vasilios Mavroudis
University College London
Karl W¨ust
ETH Zurich
Aritra Dhar
ETH Zurich
Kari Kostiainen
ETH Zurich
Srdjan Capkun
ETH Zurich
PI:EMAIL
PI:EMAIL
PI:EMAIL
PI:EMAIL
PI:EMAIL
Abstract—Permissionless blockchains offer many advantages
but also have signiﬁcant limitations including high latency. This
prevents their use in important scenarios such as retail payments,
where merchants should approve payments fast. Prior works have
attempted to mitigate this problem by moving transactions off the
chain. However, such Layer-2 solutions have their own problems:
payment channels require a separate deposit
towards each
merchant and thus signiﬁcant locked-in funds from customers;
payment hubs require very large operator deposits that depend
on the number of customers; and side-chains require trusted
validators.
In this paper, we propose Snappy, a novel solution that
enables recipients,
like merchants, to safely accept fast pay-
ments. In Snappy, all payments are on the chain, while small
customer collaterals and moderate merchant collaterals act as
payment guarantees. Besides receiving payments, merchants also
act as statekeepers who collectively track and approve incoming
payments using majority voting. In case of a double-spending
attack, the victim merchant can recover lost funds either from
the collateral of the malicious customer or a colluding statekeeper
(merchant). Snappy overcomes the main problems of previous
solutions: a single customer collateral can be used to shop with
many merchants; merchant collaterals are independent of the
number of customers; and validators do not have to be trusted.
Our Ethereum prototype shows that safe, fast (<2 seconds) and
cheap payments are possible on existing blockchains.
I.
INTRODUCTION
Cryptocurrencies based on permissionless blockchains have
shown great potential in decentralizing the global ﬁnancial sys-
tem, reducing trust assumptions, increasing operational trans-
parency and improving user privacy. However, this technology
still has signiﬁcant limitations, preventing it from posing as
valid alternative to established transaction means such as card
payments.
One of the main problems of permissionless blockchains is
high latency. For example, in Ethereum [1], users have to wait
approximately 3 minutes (10 blocks) before a new payment can
be safely accepted [2], [3]. In comparison, traditional and cen-
tralized payment systems such as VISA can conﬁrm payments
within 2 seconds [4]–[6]. High latency makes permissionless
blockchains unsuitable for many important applications such
as point-of-sale purchases and retail payments.
Network and Distributed Systems Security (NDSS) Symposium 2020
23-26 February 2020, San Diego, CA, USA
ISBN 1-891562-61-4
https://dx.doi.org/10.14722/ndss.2020.24049
www.ndss-symposium.org
To improve blockchain performance, various consensus
schemes have been proposed [7]. While techniques like
sharding and Proof-of-Stake can increase the throughput of
blockchains signiﬁcantly, currently there are no promising
solutions that would drastically decrease the latency of per-
missionless blockchains.
Thus, researchers have explored alternative avenues to
enable fast payments over slow blockchains. Arguably, the
most prominent approach are Layer-2 solutions that move
transaction processing off the chain and use the blockchain
only for dispute resolution and occasional synchronization.
However, such solutions have their own shortcomings. For
example, payment channels require a separate deposit for each
channel, resulting in large locked-in funds for users such as
retail customers [8], [9]. Payment networks cannot guarantee
available paths and are incompatible with the unilateral nature
of retail payments from customers to merchants [10], [11].
Payment hubs [12], [13] require either a trusted operator or
huge collaterals that are equal
to the total expenditure of
all customers [14], [15]. Side-chains based on permissioned
BFT consensus require 2/3 trusted validators and have high
communication complexity [16], [17].
Our solution. In this paper, we introduce Snappy, a system
that enables safe and fast (zero-conﬁrmation) on-chain pay-
ments. Snappy can be used today on top of low-throughput and
high-latency blockchains such as Ethereum and in the future on
top of (sharded) high-throughput and mid-latency blockchains.
We tailor our solution for application scenarios such as
retail payments, but emphasize that our design can be used
in any scenario where a large number of users (e.g., 100,000
customers) make payments towards a moderate set of recip-
ients (e.g., 100 merchants). In Snappy, the merchants form
a joint consortium that may consist of large retailers with
several stores globally or small local stores from the same
neighborhood. The merchants need to communicate to be
able accept fast-payments safely, but importantly neither the
merchants nor the customers have to trust each other.
Snappy relies on customer collaterals that enable merchants
to safely accept payments before the transaction has reached
ﬁnality in the blockchain. The collaterals serve as payment
guarantees and are deposited by customers to a smart contract
during system enrollment. If the transaction corresponding to
an accepted payment does not appear in the blockchain within
a reasonable time (double-spending attack), the victim mer-
chant can recoup the lost funds from the malicious customer’s
collaterals. The customer’s deposit should cover the value
of the customer’s purchases within the latency period of the
blockchain (e.g., 3 minutes in Ethereum) which makes them
small in practice (e.g., $100 would sufﬁce for many users).
Moreover, customers do not need to repeatedly replenish their
collaterals, as they are used only in the case of attack.
In Snappy,
the payment recipients (merchants) act as
untrusted statekeepers whose task is to track and collectively
approve incoming transactions. To initiate a fast payment,
a customer creates a transaction that
transfers funds to a
smart contract and indicates the merchant as beneﬁciary. The
recipient merchant sends the transaction to the statekeepers and
proceeds with the sale only if a majority of them approves it
with their signatures. Upon collecting the required signatures,
the merchant broadcasts the transaction in the blockchain
network to be processed by an Arbiter smart contract. Once
the transaction is processed and logged by the Arbiter, the
payment value is forwarded to the merchant.
Statekeepers must also deposit collaterals that protect mer-
chants from attacks where a malicious statekeeper colludes
with a customer. In such a case, the victim merchant can use
the statekeeper’s approval signatures as evidence to claim any
lost funds from the misbehaving statekeeper’s collateral. The
size of statekeeper collateral is proportional to the total amount
of purchases that all participating merchants expect within the
blockchain latency period. Crucially, the statekeeper collaterals
are independent of the number of customers which allows
the system to scale. The main security beneﬁt of statekeeper
collaterals is that they enable fast and safe payments without
trusted parties.
Main results. We prove that a merchant who follows the
Snappy protocol and accepts a fast payment once it has been
approved by the majority of the statekeepers never loses funds
regardless of any combination of customer and statekeeper
collusion. We also demonstrate that Snappy is practical to
deploy on top of existing blockchains by implementing it
on Ethereum. The performance of our solution depends pri-
marily on number of participating statekeepers (merchants).
For example, assuming a deployment with 100 statekeepers, a
payment can be approved in less than 200 ms with a processing
cost of $0.16 (169k Ethereum gas), which compares favorably
to card payment fees.
Snappy overcomes the main problems of Layer-2 solutions
in application scenarios such as retail payments. In contrast
to BFT side-chains that assume that 2/3 honest validators and
require multiple rounds of communication, Snappy requires no
trusted validators and needs only one round of communication.
Unlike payment channels, Snappy enables payments towards
many merchants with a single and small customer deposit. In
contrast to payment networks, Snappy payments can always
reach the merchants, because there is no route depletion. And
ﬁnally, the statekeeping collaterals are practical even for larger
deployments, compared to those in payment hubs, as they are
independent of the number of customers in the system.
Contributions. This paper makes the following contributions:
O Novel solution for fast payments. We propose a sys-
tem called Snappy that enables fast and secure pay-
ments on slow blockchains without trusted parties using
moderately-sized and reusable collaterals that are practi-
cal for both customers and merchants.
O Security proof. We prove that merchants are guaranteed
to receive the full value of all accepted payments, in any
possible combination of double spending by malicious
customers and equivocation by colluding statekeepers.
O Evaluation. We implemented Snappy on Ethereum and
show that payment processing is fast and cheap in prac-
tice.
This paper is organized as follows: Section II explains the
problem of fast payments, Section III provides an overview of
our solution and Section IV describes it in detail. Section V
provides security analysis and Section VI further evaluation.
Section VII is discussion, Section VIII describes related work,
and Section IX concludes the paper.
II. PROBLEM STATEMENT
In this section we motivate our work, explain our assump-
tions, discuss the limitations of previous solutions, and specify
requirements for our system.
A. Motivation
The currently popular permissionless blockchains (e.g., Bit-
coin and Ethereum) rely on Proof-of-Work (PoW) consensus
that has well-known limitations, including low throughput (7
transactions per second in Bitcoin), high latency (3 minutes
in Ethereum), and excessive energy consumption (comparable
to a small country [18]). Consequently, the research commu-
nity has actively explored alternative permissionless consen-
sus schemes. From many proposed schemes, two prominent
approaches, Proof of Stake and sharding, stand out [7].
Proof of Stake (PoS) systems aim to minimize the en-
ergy waste by replacing the computationally-heavy puzzles
of PoW with random leader election such that
the leader
selection probability is proportional to owned staked. While the
current PoS proposals face various security and performance
issues [7], the concept has shown promise in mitigating the
energy-consumption problem.
Sharding systems increase the blockchain’s throughput by
dividing the consensus participants into committees (shards)
that process distinct sets of transactions. Recent results re-
ported signiﬁcant throughput increases in the order of thou-
sands of transactions per second [19], [20]. Despite several
remaining challenges, sharding shows great promise in im-
proving blockchain throughput.
Sharding and PoS can also address transaction latency.
Recent works such as Omniledger [19] and RapidChain [20]
use both techniques and report latencies from 9 to 63 seconds,
assuming common trust models like honest majority or 1/3
Byzantine nodes. However, such measurements are achieved
in fast test networks (permissionless blockchains rely on slow
peer-to-peer networks) and under favorable work loads (e.g.,
largely pre-sharded transactions).
Our conclusion is that while permissionless blockchain
throughput and energy efﬁciency are expected to improve in
the near future, latency will most likely remain too high for
various scenarios such as point-of-sale payments and retail
2
shopping, where payment conﬁrmation is needed within 1-
2 seconds. Therefore, in this paper we focus on improving
blockchain payment latency. We consider related problems like
limited blockchain throughput as orthogonal problems with
known solutions. Appendix A provides further background on
permissionless consensus.
B. System Model and Assumptions
Customers and merchants. We focus on a setting where n
users send payments to k recipients such that n is large and
k is moderate. One example scenario is a set of k = 100
small shops where n = 100, 000 customers purchase goods at.
Another example is k = 100 larger retail stores with n = 1
million customers [21], [22].
We consider merchants who accept no risk, i.e., they hand
the purchased products or services to the customers, only if
they are guaranteed to receive the full value of their sale.
Therefore, naive solutions such as accepting zero-conﬁrmation
transaction are not applicable [23]. The customers are assumed
to register once to the system (similar to a credit card issuance
processes) and then visit shops multiple times.
We assume that merchants have permanent and fairly
reliable Internet connections. Customers are not expected to be
online constantly or periodically (initial online registration is
sufﬁcient). At the time of shopping, customers and merchants
can communicate over the Internet or using a local channel,
such as a smartphone NFC or smart card APDU interface.
Blockchain. We assume a permissionless blockchain that has
sufﬁcient throughput, but high latency (see motivation). The
blockchain supports smart contracts. We use Ethereum as a ref-
erence platform throughout this work, but emphasize that our
solution is compatible with most permissionless blockchains
with smart contracts [24]–[26]. To ensure compatibility with
existing systems like Ethereum, we assume that smart contracts
have access to the current state of the blockchain, but not to
all the past transactions.
Adversary. The main goal of this paper is to enable secure
and fast payments. Regarding payment security, we consider
a strong adversary who controls an arbitrary number of cus-
tomers and all other merchants besides the target merchant who
accepts a fast payment. The adversary also controls the net-
work connections between customers and merchants but cannot
launch network-level attacks such as node eclipsing [27].
The adversary cannot violate the consensus guarantees of
the blockchain, prevent smart contract execution, or violate
contract integrity. For payment liveness, we additionally re-
quire that sufﬁciently many merchants are responsive (see
Section V-B).
C. Limitations of Known Solutions
A prominent approach to enable fast payments on slow
permissionless blockchains is so called Layer-2 solutions
that move transaction processing off the chain and use the
blockchain only in case of dispute resolution and occasional
synchronization between the on-chain and off-chain states.
Here, we outline the main limitations of such solutions.
Section VIII provides more details on Layer-2 solutions and
their limitations.
Payment channels transfer funds between two parties. The se-
curity of such solutions is guaranteed by separate deposits that
must cover periodic expenditure in each individual channel. In
our “small shops” example with k = 100 merchants and an
average customer expenditure of e = $10, the customers would
need to deposit combined $1,000. In our “large retailers”
example with k = 100 merchants and expenditure of e = $250,
the total deposit is $25,000. Payment channels require periodic
deposit replenishment.
Payment networks address the above problem of having to
set up many separate channels by using existing payment
channels to ﬁnd paths and route funds. Payments are possible
only when the necessary links from the source (customer) to
the destination (merchant) exist. However, payment networks
are unreliable, as guaranteeing the suitable links between all
parties is proven difﬁcult [28]. Moreover, retail payments are
pre-dominantly one-way from customers to merchants, and
thus those links get frequently depleted, reducing the route
availability even further [29].
Payment hubs attempt to solve the route-availability problem
by having all customers establish a payment channel to a
central hub that is linked to all merchants. The main problem of
this approach is that the hub operator either has to be trusted or
it needs to place a very large deposit to guarantee all payments.
Since the required collateral is proportional to the number of