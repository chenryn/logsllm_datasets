    要启动任何当前没有运行的服务，请点击该服务旁的复选框选择您要启动的所有服务，并点击[**“启动”**]{.guimenu}。
    :::
-   ::: para
    [**“重启服务”**]{.guimenu} ---
    要重启任何当前运行的服务，请点击该服务旁的复选框选择您要启动的所有服务，并点击[**“重启”**]{.guimenu}。
    :::
-   ::: para
    [**“禁用服务”**]{.guimenu} ---
    要禁用任何当前运行的服务，请点击该服务旁的复选框选择您要启动的所有服务并，点击[**“禁用”**]{.guimenu}。
    :::
-   ::: para
    [**“删除服务”**]{.guimenu} ---
    要删除任何当前运行的服务，请点击该服务旁的复选框选择您要启动的所有服务并点击[**“删除”**]{.guimenu}。
    :::
-   ::: para
    [**“重新定位服务”**]{.guimenu} ---
    要重新定位运行的服务，请在服务显示中点击该服务的名称。此时会显示该服务配置页面，并显示该服务目前在哪个节点中运行。
    :::
    ::: para
    在[**“在节点中启动\...\...”**]{.guilabel}下拉框中选择您想要将服务重新定位的节点，并点击[**“启动”**]{.guimenu}图标。此时会在页面顶部显示一条信息说明正在重启该服务。您可以刷新该页面查看新显示，在该显示中说明该服务正在您选择的节点中运行。
    :::
    ::: note
    ::: admonition_header
    **注意**
    :::
    ::: admonition
    ::: para
    如果您所选运行的服务是一个 `vm`{.literal} 服务，下拉框中将会显示
    `migrate`{.literal} 选项而不是 `relocate`{.literal} 选项。
    :::
    :::
    :::
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**注意**
:::
::: admonition
::: para
您还可以点击[**“服务”**]{.guimenu}页面中的服务名称启动、重启、禁用或者删除独立服务。此时会显示服务配置页面。在服务配置页面右上角有一些图标：[**“启动”**]{.guimenu}、[**“重启”**]{.guimenu}、[**“禁用”**]{.guimenu}和[**“删除”**]{.guimenu}。
:::
:::
:::
:::
::: section
::: titlepage
# [⁠]{#ch-mgmt-conga-CA.html#s1-luci-backup-CA}4.6. 备份和恢复 luci 配置 {.title}
:::
::: para
从红帽企业版 Linux 6.2 开始，您可以使用以下步骤备份
[**luci**]{.application} 数据库，即保存在
`/var/lib/luci/data/luci.db`{.filename}
文件中。这不是给集群自身的配置，自身配置保存在 `cluster.conf`{.filename}
文件中。相反，它包含用户和集群以及 [**luci**]{.application}
维护的相关属性列表。默认情况下，备份生成的步骤将会写入同一目录的
`luci.db`{.filename} 文件中。
:::
::: {.orderedlist xmlns:d="http://docbook.org/ns/docbook"}
1.  ::: para
    执行 `service luci stop`{.command}。
    :::
2.  ::: para
    执行 `service luci backup-db`{.command}。
    :::
    ::: para
    您可以选择是否指定一个文件名作为 `backup-db`{.command}
    命令的参数，该命令可将 [**luci**]{.application}
    数据库写入那个文件。例如：要将 [**luci**]{.application}
    数据库写入文件 `/root/luci.db.backup`{.filename}，您可以执行命令
    `service luci backup-db /root/luci.db.backup`{.command}。注：但如果将备份文件写入
    `/var/lib/luci/data/`{.filename} 以外的位置（您使用
    `service luci backup-db`{.command} 指定的备份文件名）将不会在
    `list-backups`{.command} 命令的输出结果中显示。
    :::
3.  ::: para
    执行 `service luci start`{.command}。
    :::
:::
::: para
使用以下步骤恢复 [**luci**]{.application} 数据库。
:::
::: {.orderedlist xmlns:d="http://docbook.org/ns/docbook"}
1.  ::: para
    执行 `service luci stop`{.command}。
    :::
2.  ::: para
    执行 `service luci list-backups`{.command}，并注释要恢复的文件名。
    :::
3.  ::: para
    执行
    `service luci restore-db /var/lib/luci/data/lucibackupfile`{.command}，其中
    *lucibackupfile* 是要恢复的备份文件。
    :::
    ::: para
    例如：以下命令恢复保存在备份文件
    `luci-backup20110923062526.db`{.filename} 中的
    [**luci**]{.application} 配置信息：
    :::
    ``` screen
    service luci restore-db /var/lib/luci/data/luci-backup20110923062526.db
    ```
4.  ::: para
    执行 `service luci start`{.command}。
    :::
:::
::: para
如果您需要恢复 [**luci**]{.application}
数据库，但在您因完全重新安装生成备份的机器中已丢失 `host.pem`{.filename}
文件，例如：您需要将集群重新手动添加回 [**luci**]{.application}
方可重新认证集群节点。
:::
::: para
请使用以下步骤在生成备份之外的机器中恢复 [**luci**]{.application}
数据库。注：除恢复数据库本身外，您还需要复制 SSL 证书文件，以保证在
[**ricci**]{.application} 节点中认证
[**luci**]{.application}。在这个示例中是在 `luci1`{.literal}
机器中生成备份，在 `luci2`{.literal} 机器中恢复备份。
:::
::: {.orderedlist xmlns:d="http://docbook.org/ns/docbook"}
1.  ::: para
    执行以下一组命令在 `luci1`{.literal} 中生成 [**luci**]{.application}
    备份，并将 SSL 证书和 [**luci**]{.application} 备份复制到
    `luci2`{.literal} 中。
    :::
    ``` screen
    [root@luci1 ~]# service luci stop
    [root@luci1 ~]# service luci backup-db
    [root@luci1 ~]# service luci list-backups
    /var/lib/luci/data/luci-backup20120504134051.db
    [root@luci1 ~]# scp /var/lib/luci/certs/host.pem /var/lib/luci/data/luci-backup20120504134051.db root@luci2:
    ```
2.  ::: para
    在 `luci2`{.literal} 机器中，保证已安装
    [**luci**]{.application}，且没有运行。如果还没有安装，则请安装该软件包。
    :::
3.  ::: para
    执行以下一组命令保证认证到位，并在 `luci2`{.literal} 中使用
    `luci1`{.literal} 恢复 [**luci**]{.application} 数据库。
    :::
    ``` screen
    [root@luci2 ~]# cp host.pem /var/lib/luci/certs/
    [root@luci2 ~]# chown luci: /var/lib/luci/certs/host.pem
    [root@luci2 ~]# /etc/init.d/luci restore-db ~/luci-backup20120504134051.db
    [root@luci2 ~]# shred -u ~/host.pem ~/luci-backup20120504134051.db
    [root@luci2 ~]# service luci start
    ```
:::
:::
:::
[]{#ch-config-ccs-CA.html}
::: chapter
::: titlepage
# [⁠]{#ch-config-ccs-CA.html#ch-config-ccs-CA}第 5 章 使用 [**ccs**]{.application} 命令配置红帽高可用性附加组件 {.title}
:::
[]{#ch-config-ccs-CA.html#idm140713244340592
.indexterm}[]{#ch-config-ccs-CA.html#idm140713321871600 .indexterm}
::: para
从红帽企业版 Linux 6.1 开始，红帽高可用性附加组件支持 `ccs`{.command}
集群配置命令。`ccs`{.command} 命令可让管理员创建、修改和查看
`cluster.conf`{.filename} 集群配置文件。您可以使用 `ccs`{.command}
命令在本地文件系统，或者远程节点中配置集群配置文件。管理员还可以使用
`ccs`{.command}
命令在配置的集群的一个或者全部节点中启动或者停止集群服务。
:::
::: para
本章论述了如何使用 `ccs`{.command}
命令配置红帽高可用性附加组件集群配置文件。有关使用 `ccs`{.command}
命令管理运行的集群的详情请参考 [第 6 章 *使用 [**ccs**]{.application}
管理 Red Hat 高可用性附加组件*](#ch-mgmt-ccs-CA.html){.xref}。
:::
::: para
本章由以下小节组成：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    [第 5.1 节
    "操作概述"](#ch-config-ccs-CA.html#s1-config-operation-ccs-CA){.xref}
    :::
-   ::: para
    [第 5.2 节
    "配置任务"](#ch-config-ccs-CA.html#s1-config-tasks-ccs-CA){.xref}
    :::
-   ::: para
    [第 5.3 节 "启动
    [**ricci**]{.application}"](#ch-config-ccs-CA.html#s1-start-ricci-ccs-CA){.xref}
    :::
-   ::: para
    [第 5.4 节
    "创建集群"](#ch-config-ccs-CA.html#s1-creating-cluster-ccs-CA){.xref}
    :::
-   ::: para
    [第 5.5 节 "配置 Fence
    设备"](#ch-config-ccs-CA.html#s1-config-fence-devices-ccs-CA){.xref}
    :::
-   ::: para
    [第 5.7 节 "为集群成员配置
    Fencing"](#ch-config-ccs-CA.html#s1-config-member-ccs-CA){.xref}
    :::
-   ::: para
    [第 5.8 节
    "配置故障切换域"](#ch-config-ccs-CA.html#s1-config-failover-domain-ccs-CA){.xref}
    :::
-   ::: para
    [第 5.9 节
    "配置全局集群资源"](#ch-config-ccs-CA.html#s1-config-add-resource-ccs-CA){.xref}
    :::
-   ::: para
    [第 5.10 节
    "在集群中添加集群服务"](#ch-config-ccs-CA.html#s1-add-service-ccs-CA){.xref}
    :::
-   ::: para
    [第 5.13 节
    "配置仲裁磁盘"](#ch-config-ccs-CA.html#s1-quorumd-ccs-CA){.xref}
    :::
-   ::: para
    [第 5.14 节
    "其他集群配置"](#ch-config-ccs-CA.html#s1-general-prop-ccs-CA){.xref}
    :::
-   ::: para
    [第 5.14 节
    "其他集群配置"](#ch-config-ccs-CA.html#s1-general-prop-ccs-CA){.xref}
    :::
-   ::: para
    [第 5.15 节
    "在集群节点中推广配置文件"](#ch-config-ccs-CA.html#s1-clusterconf-propagate-ccs-CA){.xref}
    :::
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**重要**
:::
::: admonition
::: para
请确定您部署的高可用性附加组件符合您的要求，且可被支持。请在部署前咨询授权红帽代表确认您的配置。另外还要预留一定的时间进行配置的失败模型测试。
:::
:::
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**重要**
:::
::: admonition
::: para
本章通常使用 `cluster.conf`{.filename} 元素和属性作为参考。有关
`cluster.conf`{.filename} 元素和属性的完整列表，请参考
`/usr/share/cluster/cluster.rng`{.filename} 中的集群方案以及
`/usr/share/doc/cman-X.Y.ZZ/cluster_conf.html`{.filename}
中有注释的方案（例如：`/usr/share/doc/cman-3.0.12/cluster_conf.html`{.filename}）。
:::
:::
:::
::: section
::: titlepage
# [⁠]{#ch-config-ccs-CA.html#s1-config-operation-ccs-CA}5.1. 操作概述 {.title}
:::
::: para
本小节论述了以下使用 `ccs`{.command} 命令配置集群的常规操作：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    [第 5.1.1 节
    "在本地系统中创建集群配置文件"](#ch-config-ccs-CA.html#s2-config-local-ccs-CA){.xref}
    :::
-   ::: para
    [第 5.1.2 节
    "查看当前集群配置"](#ch-config-ccs-CA.html#s2-config-getconf-ccs-CA){.xref}
    :::
-   ::: para
    [第 5.1.3 节 "使用 ccs 命令指定 ricci
    密码"](#ch-config-ccs-CA.html#s2-config-passwords-ccs-CA){.xref}
    :::
-   ::: para
    [第 5.1.4 节
    "修改集群配置组件"](#ch-config-ccs-CA.html#s2-config-modify-ccs-CA){.xref}
    :::
:::
::: section
::: titlepage
## [⁠]{#ch-config-ccs-CA.html#s2-config-local-ccs-CA}5.1.1. 在本地系统中创建集群配置文件 {.title}
:::
::: para
使用 `ccs`{.command}
命令，您可以在集群节点中创建集群配置文件，或者在本地文件系统中创建集群配置文件，然后将其发送到集群的主机中。这可让您访问本地机器中的文件，使用版本控制维护该文件，或者根据您的需要标记该文件。使用
`ccs`{.command} 命令不需要 root 特权。
:::
::: para
当您在集群节点中使用 `ccs`{.command}
命令创建并编辑集群配置文件时，请使用 `-h`{.option}
选项指定主机名。这样就可在该主机中创建并编辑 `cluster.conf`{.filename}
文件：
:::
``` screen
ccs -h host [options]
```
::: para