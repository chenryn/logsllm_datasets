title:Human-Seeded Attacks and Exploiting Hot-Spots in Graphical Passwords
author:Julie Thorpe and
Paul C. van Oorschot
Human-Seeded Attacks and
Exploiting Hot-Spots in Graphical Passwords1
Julie Thorpe and P.C. van Oorschot
School of Computer Science, Carleton University
{jthorpe, paulv}@scs.carleton.ca
Abstract
Although motivated by both usability and security con-
cerns, the existing literature on click-based graphical
password schemes using a single background image
(e.g., PassPoints) has focused largely on usability. We
examine the security of such schemes, including the im-
pact of different background images, and strategies for
guessing user passwords. We report on both short- and
long-term user studies: one lab-controlled, involving 43
users and 17 diverse images, and the other a ﬁeld test of
223 user accounts. We provide empirical evidence that
popular points (hot-spots) do exist for many images, and
explore two different types of attack to exploit this hot-
spotting: (1) a “human-seeded” attack based on harvest-
ing click-points from a small set of users, and (2) an en-
tirely automated attack based on image processing tech-
niques. Our most effective attacks are generated by har-
vesting password data from a small set of users to attack
other targets. These attacks can guess 36% of user pass-
words within 231 guesses (or 12% within 216 guesses)
in one instance, and 20% within 233 guesses (or 10%
within 218 guesses) in a second instance. We perform
an image-processing attack by implementing and adapt-
ing a bottom-up model of visual attention, resulting in a
purely automated tool that can guess up to 30% of user
passwords in 235 guesses for some instances, but under
3% on others. Our results suggest that these graphical
password schemes appear to be at least as susceptible to
ofﬂine attack as the traditional text passwords they were
proposed to replace.
1
Introduction
The bane of password authentication using text-based
passwords is that users choose passwords which are easy
to remember, which generally translates into passwords
that are easily guessed. Thus even when the size of
a password space may be theoretically “large enough”
(in terms of number of possible passwords), the effec-
tive password space from which many users actually
choose passwords is far smaller. Predictable patterns,
largely due to usability and memory issues, thus allow
successful search by variations of exhaustive guessing
attacks. Forcing users to use “random” or other non-
meaningful passwords results in usability problems. As
an alternative, graphical password schemes require that
a user remembers an image (or parts thereof) in place of
a word. They have been largely motivated by the well-
documented human ability to remember pictures better
than words [25], and implied promises that the password
spaces of various image-based schemes are not only suf-
ﬁciently large to resist guessing attacks, but that the ef-
fective password spaces are also sufﬁciently large. The
latter, however, is not well established.
Among the graphical password schemes proposed to
date, one that has received considerable attention in the
research literature is PassPoints [45, 46, 47]. It and other
click-based graphical password schemes [18, 4, 31, 37]
require a user to log in by clicking a sequence of points
on a single background image. Usability studies have
been performed to determine the optimal amount of er-
ror tolerance [46], login and creation times, error rates,
and general perception [45, 47]. An important remain-
ing question for such schemes is: how secure are they?
This issue remains largely unaddressed, despite specu-
lation that the security of these schemes likely suffers
from hot-spots – areas of an image that are more prob-
able than others for users to click.
Indeed, the impact
of hot-spots has been downplayed (e.g., see [45, Section
7]). In this paper, we focus on a security analysis of an
implementation with the same parameters as used in a re-
cent PassPoints publication [47]. A usability analysis of
this implementation is presented in a separate paper [6].
We conﬁrm the existence of hot-spots through empiri-
cal studies, and show that some images are more suscep-
tible to hot-spotting than others. We also explore the se-
curity impact of hot-spots, including a number of strate-
USENIX Association
16th USENIX Security Symposium
103
gies for exploiting them under an ofﬂine model similar
to that used by Ballard et al. [1]. Our work involves two
user studies. The ﬁrst (lab) study used 17 diverse im-
ages (four used in previous studies [46], and 13 of our
own chosen to represent a range of detail). We collected
graphical passwords for 32-40 users per image in a lab
setting, and found hot-spots on all images even from this
relatively small sample size; some images had signiﬁ-
cantly more hot-spots than others. In the second (ﬁeld)
study involving 223 user accounts over a minimum of
seven weeks, we explore two of these images in greater
depth. We analyzed our lab study data using formal mea-
sures of security to make an informed decision of which
two images to use in the ﬁeld study. Our goal was to give
PassPoints the best chance we could (in terms of antici-
pated security), by using one highly ranked image, and
another mid-ranked image also used in previous Pass-
Points studies.
We implement and evaluate two types of attack:
human-seeded and purely automated. Our human-seeded
attack is based on harvesting password data from a small
number of users to attack passwords from a larger set
of users. We seed various dictionaries with the pass-
words collected in our lab study, and apply them to guess
the passwords from our long-term ﬁeld study. Our re-
sults demonstrate that this style of attack is quite effec-
tive against this type of graphical password: it correctly
guessed 36% of user passwords within 231 guesses (or
12% within 216 guesses) on one image, and 20% within
233 guesses (or 10% within 218 guesses) on a second im-
age. We implement and adapt a combination of image
processing methods in an attempt to predict user choice,
and employ them as tools to expedite guessing attacks on
the user study passwords. The attack works quite well on
some images, cracking up to 30% of passwords, but less
than 3% on others within 235 guesses. These results give
an early signal that image processing can be a relevant
threat, particularly as better methods emerge.
Our contributions include the ﬁrst in-depth study of
hot-spots in click-based (or cued-recall) graphical pass-
words schemes and their impact on security through two
separate user studies: one lab-controlled and the other
a ﬁeld test. We propose the modiﬁcation and use of
image processing methods to expedite guessing attacks,
and evaluate our implementation against the images used
in our studies. Our implementation is based on Itti et
al.’s [17] model of bottom-up visual attention and cor-
ner detection, which allowed successful guessing attacks
on some images, even with relatively naive dictionary
strategies. Our most interesting contribution is apply-
ing a human-seeded attack strategy, by harvesting pass-
word data in a lab setting from small sets of users, to at-
tack other ﬁeld study passwords. Our human-seeded at-
tack strategy for cued-recall graphical passwords is sim-
ilar to Davis et al.’s attack [8] against recognition-based
graphical passwords; notable differences include a more
straightforward dictionary generation method, and that
our seed data is from a separate population and (short-
term) setting.
The remainder of this paper is organized as follows.
Section 2 provides background and terminology. Section
3 presents our lab-controlled user study, and an analysis
of observed hot-spots and the distribution of user click-
points. Section 4 presents results on the larger (ﬁeld)
user study, and of our password harvesting attacks. Sec-
tion 5 explores our use of image processing methods to
expedite guessing attacks on the 17 images from the ﬁrst
user study and the two from the second user study. Re-
lated work is brieﬂy discussed in Section 6. Section 7
provides further discussion and concluding remarks.
2 Background and Terminology
Click-based graphical passwords require users to log in
by clicking a sequence of points on a single background
image. Many variations are possible (see Section 6), de-
pending on what points a user is allowed to select. We
study click-based graphical passwords by allowing clicks
anywhere on the image (i.e., PassPoints-style). We be-
lieve that most ﬁndings related to hot-spots in this style
will apply to other variations using the same images, as
the “interesting” clickable areas are still present.
We use the following terminology. Assume a user
chooses a given click-point c as part of their password.
The tolerable error or tolerance t is the error allowed
for a click-point entered on a subsequent login to be ac-
cepted as c. This deﬁnes a tolerance region (T-region)
centered on c, which for our implementation using t = 9
pixels, is a 19 × 19 pixel square. A cluster is a set of
one or more click-points that lie within a T-region. The
number of click-points belonging to a cluster is its size.
A hot-spot is indicated by a cluster that is large, relative
to the number of users in a given sample. To aid visu-
alization and indicate relative sizes for clusters of size at
least two, on ﬁgures we sometimes represent the underly-
ing cluster by a shaded circle or halo with halo diameter
proportional to its size. An alphabet is a set of distinct
T-regions; our implementation, using 451×331 pixel im-
ages, results in an alphabet of m = 414 T-regions. Using
passwords composed of 5-clicks, on an alphabet of size
414 provides the system with only a 43-bit full theoret-
ical password space; we discuss the implications of this
in Section 7.
104
16th USENIX Security Symposium
USENIX Association
3 Lab Study and Clustering Analysis
Here we report on the results of a university-approved
43-user study of click-based graphical passwords in a
controlled lab environment. Each user session was con-
ducted individually and lasted about one hour. Partici-
pants were all university students who were not studying
(or experts in) computer security. Each user was asked
to create a click-based graphical password on 17 differ-
ent images (some of these are reproduced herein; others
are available from the authors). Four of the images are
from a previous click-based graphical password study by
Wiedenbeck et al. [46]; the other 13 were selected to pro-
vide a range of values based on two image processing
measures that we expected to reﬂect the amount of detail:
the number of segments found from image segmentation
[11] and the number of corners found from corner de-
tection [16]. Seven of the 13 images were chosen to be
those we “intuitively” believed would encourage fewer
hot-spots; this is in addition to the four chosen in ear-
lier research [46] using intuition (no further details were
provided on their image selection methodology).
EXPERIMENTAL DETAILS. We implemented a web-
based experiment. Each user was provided a brief ex-
planation of what click-based graphical passwords are,
and given two images to practice creating and conﬁrm-
ing such passwords. To keep the parameters as consis-
tent as possible with previous usability experiments of
such passwords [47], we used d = 5 click-points for
each password, an image size of 451 × 331 pixels, and a
19×19 pixel square of error tolerance. Wiedenbeck et al.
[47] used a tolerance of 20×20, allowing 10 pixels of tol-
erated error on one side and 9 on the other. To keep the
error tolerance consistent on all sides, we approximate
this error tolerance using 19 × 19. Users were instructed
to choose a password by clicking on 5 points, with no
two the same. Although the software did not enforce this
condition, subsequent analysis showed that the effect on
the resulting cluster sizes was negligible for all images
except pcb; for more details, see caption of Figure 1.We
did not assume a speciﬁc encoding scheme (e.g., robust
discretization [3] or other grid-based methods); the con-
cept of hot-spots and user choice of click-points is gen-
eral enough to apply across all encoding schemes. To
allow for detailed analysis, we store and compare the ac-
tual click-points.
Once the user had a chance to practice a few pass-
words, the main part of the experiment began. For each
image, the user was asked to create a click-based graph-
ical password that they could remember but that others
will not be able to guess, and to pretend that it is pro-
tecting their bank information. After initial creation, the
user was asked to conﬁrm their password to ensure they
could repeat their click-points. On successful conﬁrma-
tion, the user was given 3D mental rotation tasks [33]
as a distractor for at least 30 seconds. This distractor
was presented to remove the password from their visual
working memory, and thus simulate the effect of the pas-
sage of time. After this period of memory tasks, the user
was provided the image again and asked to log in using
their previously selected password. If the user could not
conﬁrm after two failed attempts or log in after one failed
attempt, they were permitted to reset their password for
that image and try again. If the user did not like the im-
age and felt they could not create and remember a pass-
word on it, they were permitted to skip the image. Only
two images had a signiﬁcant number of skips: paperclips
and bee. This suggests some passwords for these images
were not repeatable, and we suspect our results for these
images would show lower relative security in practice.
To avoid any dependence on the order of images pre-
sented, each user was presented a random (but unique)
shufﬂed ordering of the 17 images used. Since most
users did not make it through all 17 images, the number
of graphical passwords created per image ranged from
32 to 40, for the 43 users. Two users had a “jumpy”
mouse, but we do not expect this to affect our present
focus – the location of selected click-points. This short-
term study was intended to collect data on initial user
choice; although the mental rotation tasks work to re-
move the password from working memory, it does not
account for any effect caused by password resets over
time due to forgotten passwords. The long-term study
(Section 4) does account for this effect, and we compare
the results.
3.1 Results on Hot-Spots and Popular
Clusters Observed
To explore the occurrence of hot-spotting in our lab user
study, we assigned all the user click-points observed in
the study to clusters as follows. Let R be the raw (unpro-
cessed) set of click-points, M a list of temporary clusters,
and V the ﬁnal resulting set of clusters.
1. For each ck ∈ R, let Bk be a temporary cluster con-
taining click-point ck. Temporarily assign all user
click-points in R within ck’s T-region to Bk. Add
Bk to M.
2. Sort all clusters in M by size, in decreasing order.
3. Greedily make permanent assignments of click-
points to clusters as follows. Let B` be the largest
cluster in M. Permanently assign each click-point
ck ∈ B` to B`, then delete each ck ∈ B` from all
other clusters in M. Delete B` from M, and add B`
to V . Repeat until M is empty.
This process determines a set V of (non-empty) clus-
ters and their sizes. We then calculate the observed
USENIX Association
16th USENIX Security Symposium
105
#1
#2
#3
#4
#5
# Clusters of Size >= 5
5
=
>
e
z
i
S
f
o
s
r
e
t
s
u
l
C
#
20
18
16
14
12
10
8
6
4
2
0
c
p
p
d
a
c
p
o
to
faces
city
hila
ys
erclips
v
d
ers
elp
ic
s
cars
b
ee
m
o
arties
ns
m
a
p-nl
hia
p
p
c
b
city
m
tea
tru
c
orinthia
o
ural
ol
c
k
m
a
p-gr
n