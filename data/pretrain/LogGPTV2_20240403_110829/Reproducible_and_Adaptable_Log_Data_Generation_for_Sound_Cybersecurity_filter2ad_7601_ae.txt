[47] Sean Peisert and Matt Bishop. 2007. How to design computer security experiments.
In Fifth World Conference on Information Security Education. Springer, 141–148.
[48] Proofpoint Inc. [n.d.]. Proofpoint Emerging Threats Rules. Retrieved June 28,
2021 from https://rules.emergingthreats.net/
[49] Richard C Rich, Craig Leonard Brians, Jarol B Manheim, and Lars Willnat. 2018.
Empirical Political Analysis: International Edition. Routledge.
[50] Michael Richmond. 2005. ViSe: A virtual security testbed. Technical Report.
University of California, Santa Barbara.
[51] L. M. Rossey, R. K. Cunningham, D. J. Fried, J. C. Rabek, R. P. Lippmann, J. W.
Haines, and M. A. Zissman. 2002. LARIAT: Lincoln Adaptable Real-time Infor-
mation Assurance Testbed. In Proceedings of the 2002 IEEE Aerospace Conference,
Vol. 6. IEEE, 2671–2682.
[52] Kevin A Roundy, Acar Tamersoy, Michael Spertus, Michael Hart, Daniel Kats,
Matteo Dell’Amico, and Robert Scott. 2017. Smoke detector: cross-product intru-
sion detection with weak indicators. In Proceedings of the 33rd Annual Computer
Security Applications Conference. ACM, 200–211.
[53] Mark Russinovich and Thomas Garnier. 2021. Sysmon v13.22. Retrieved June
28, 2021 from https://docs.microsoft.com/en-us/sysinternals/downloads/sysmon
[54] Securelist. 2013. Red October. Detailed Malware Description. Retrieved June
28, 2021 from https://securelist.com/analysis/publications/36830/red-october-
detailed-malware-description-1-first-stage-of-attack/
[55] Iman Sharafaldin, Arash Habibi Lashkari, and Ali A Ghorbani. 2018. Toward
generating a new intrusion detection dataset and intrusion traffic characterization.
In Proceedings of the 4th International Conference on Information Systems Security
and Privacy (ICISSP 2018). SCITEPRESS.
[56] Sigma contributors. [n.d.]. SigmaHQ/sigma: Generic Signature Format for SIEM
Systems. Retrieved June 28, 2021 from https://github.com/SigmaHQ/sigma
[57] Florian Skopik, Giuseppe Settanni, Roman Fiedler, and Ivo Friedberg. 2014. Semi-
synthetic data set generation for security software evaluation. In 2014 Twelfth
Annual International Conference on Privacy, Security and Trust. IEEE, 156–163.
[58] SOCBED contributors. 2021. SOCBED: A Self-Contained Open-Source Cyber-
Retrieved September 9, 2021 from https:
attack Experimentation Testbed.
//github.com/fkie-cad/socbed
[59] Cole Sodja, Justin Carroll, Melissa Turcotte, and Joshua Neil. 2021. Au-
for
tomating threat actor
Retrieved June 28, 2021 from
intelligence and contextual alerting.
https://www.microsoft.com/security/blog/2021/04/01/automating-threat-actor-
tracking-understanding-attacker-behavior-for-intelligence-and-contextual-
alerting/
tracking: Understanding attacker behavior
702ACSAC ’21, December 6–10, 2021, Virtual Event, USA
Rafael Uetz, Christian Hemminghaus, Louis Hackländer, Philipp Schlipper, and Martin Henze
[60] Robin Sommer and Vern Paxson. 2010. Outside the closed world: On using
machine learning for network intrusion detection. In 2010 IEEE Symposium on
Security and Privacy. IEEE, 305–316.
[61] Symantec. 2015. Internet Security Threat Report 2015. Retrieved July 30, 2019
from https://www.symantec.com/content/en/us/enterprise/other_resources/
21347933_GA_RPT-internet-security-threat-report-volume-20-2015.pdf
[62] Anna Szczepanek. 2020. t-test Calculator. Retrieved June 28, 2021 from https:
//www.omnicalculator.com/statistics/t-test
[63] The MITRE Corporation. 2020. MITRE ATT&CK Evaluations. Retrieved June
28, 2021 from https://attackevals.mitre-engenuity.org/
[64] The MITRE Corporation. 2021. Technique Matrix - Enterprise ATT&CK™. Re-
trieved June 7, 2021 from https://attack.mitre.org/matrices/enterprise/
[65] Melissa JM Turcotte, Alexander D Kent, and Curtis Hash. 2019. Unified host and
network data set. In Data Science for Cyber-Security. World Scientific, 1–22.
[66] Rafael Uetz, Louis Hackländer, and Philipp Schlipper. 2021. SOCBED evaluation
code and dataset as presented at ACSAC 2021. Retrieved September 9, 2021
from https://github.com/fkie-cad/socbed-eval-acsac-2021
[67] Patrick Vandewalle, Jelena Kovacevic, and Martin Vetterli. 2009. Reproducible
research in signal processing. IEEE Signal Processing Magazine 26, 3 (2009), 37–47.
https://doi.org/10.1109/MSP.2009.932122
[68] Kalyan Veeramachaneni, Ignacio Arnaldo, Vamsi Korrapati, Constantinos Bassias,
and Ke Li. 2016. AIˆ2: Training a Big Data Machine to Defend. In 2016 IEEE
2nd International Conference on Big Data Security on Cloud (BigDataSecurity),
IEEE International Conference on High Performance and Smart Computing (HPSC),
and IEEE International Conference on Intelligent Data and Security (IDS). 49–54.
https://doi.org/10.1109/BigDataSecurity-HPSC-IDS.2016.79
[69] Verizon. 2011. 2011 Data Breach Investigations Report. Retrieved June 28, 2021
from https://www.wired.com/images_blogs/threatlevel/2011/04/Verizon-2011-
DBIR_04-13-11.pdf
[70] Verizon. 2020. 2020 Data Breach Investigations Report.
Retrieved June 28,
2021 from https://enterprise.verizon.com/resources/reports/2020-data-breach-
investigations-report.pdf
[71] Verizon. 2021. 2021 Data Breach Investigations Report.
Retrieved June 28,
2021 from https://enterprise.verizon.com/resources/reports/2021-data-breach-
investigations-report.pdf
[72] Charles V Wright, Christopher Connelly, Timothy Braje, Jesse C Rabek, Lee M
Rossey, and Robert K Cunningham. 2010. Generating client workloads and
high-fidelity network traffic for controllable, repeatable experiments in computer
security. In International Workshop on Recent Advances in Intrusion Detection.
Springer, 218–237.
[73] Ting-Fang Yen, Victor Heorhiadi, Alina Oprea, Michael K Reiter, and Ari Juels.
2014. An epidemiological study of malware encounters in a large enterprise. In
Proceedings of the 2014 ACM SIGSAC Conference on Computer and Communications
Security. ACM, 1117–1130.
[74] Ting-Fang Yen, Alina Oprea, Kaan Onarlioglu, Todd Leetham, William Robertson,
Ari Juels, and Engin Kirda. 2013. Beehive: Large-scale log analysis for detecting
suspicious activity in enterprise networks. In Proceedings of the 29th Annual
Computer Security Applications Conference. ACM, 199–208.
A SOCBED SYSTEMS AND SERVICES
Table 3 shows the operating systems, services, and applications
running on the SOCBED base virtual machines. Default services
such as DHCP are omitted for brevity. Most of the services and ap-
plications are required for the implemented attack steps. Additional
services can easily be added and configured using Ansible scripts.
B SOCBED ATTACK STEP DETAILS
Table 4 shows the attack steps currently implemented in SOCBED.
There are three types of attack steps. Steps starting with “infect”
create initial access to the company network by exploiting the
targeted client and then running a payload. This payload establishes
a command and control (C2) channel to the Attacker VM using
Metasploit’s Meterpreter reverse HTTP module [40]. Steps starting
with “c2” use this channel to execute further actions via Meterpreter.
They can only execute successfully when an “infect” attack step
has been executed before on the same client and the payload is
still active, i.e., the client is not rebooted and the process is not
killed. Steps starting with “misc” are self-contained and can be
executed independently. They can mimic, e.g., an internal adversary,
Table 6: Top 20 (by occurrence) Windows event types as
shown in Figure 5 with their mean number of occurrences
over 20 iterations using the default logging configuration.
PowerShell
Provider name
#
1 Microsoft-Windows-Security-Auditing
2 Microsoft-Windows-Security-Auditing
3 Microsoft-Windows-WindowsUpdateClient
4 Microsoft-Windows-Kernel-General
5
6 Microsoft-Windows-Security-Auditing
7 Microsoft-Windows-Security-Auditing
8 Microsoft-Windows-DistributedCOM
9 Microsoft-Windows-Security-Auditing
10 Microsoft-Windows-WindowsUpdateClient
11 Microsoft-Windows-Security-Auditing
12 Microsoft-Windows-WindowsUpdateClient
13 Microsoft-Windows-FilterManager
14 Windows Error Reporting
15
16 Microsoft-Windows-Security-Auditing
17 Microsoft-Windows-Security-Auditing
18 Microsoft-Windows-Security-Auditing
19 Microsoft-Windows-Security-SPP
20 Microsoft-Windows-Security-SPP
ESENT
ID
5379
5061
44
16
600
4624
4672
10010
4799
19
4688
43
6
1001
642
4798
5058
4648
1003
16394
¯x
4928.7
1499.8
1231.0
537.0
504.6
466.5
407.7
257.1
255.2
206.6
202.2
185.1
173.2
137.2
128.8
120.3
119.3
108.7
101.1
71.0
an employee falling victim to a social engineering attack, or an
attack step triggered by an already active malware.
Some of the implemented attack steps are commonly performed
by external attackers (infect_email_*, c2_*), while others resemble
internal attackers (misc_exfiltration, infect_flashdrive_exe) or both
alike (remaining misc_* attacks).
C DETAILED EVALUATION RESULTS
Table 5 shows all Sigma and Suricata alerts that occurred during
our evaluation. For Sigma, we used all Windows Event Log-specific
rules as of February 4, 20212. For Suricata, we used Emerging Threat
rules as of May 4, 2021. The latter are contained in the SOCBED
repository because stale rule sets are generally not provided for
download on the official website3, yet a fixed version of the rules is
important for the reproducibility of Suricata alerts across different
SOCBED instances.
Table 6 shows the top 20 (by occurrence) Windows event types
as depicted in Figure 5. All of these types commonly appear on
Windows systems and are not specific to the executed attacks.
For example, the most frequent event Microsoft-Windows-Security-
Auditing ID 5379 informs that “Credential Manager credentials were
read”, i.e., a user performs a read on stored credentials, e.g., during
the logon process4.
2https://github.com/SigmaHQ/sigma/tree/12054544bbac415438b2207c08bd92633a51b
3https://rules.emergingthreats.net/OPEN_download_instructions.html
4https://www.ultimatewindowssecurity.com/securitylog/encyclopedia/event.aspx?
eventid=5379
703Reproducible and Adaptable Log Data Generation for Sound Cybersecurity Experiments
ACSAC ’21, December 6–10, 2021, Virtual Event, USA
Table 3: Each SOCBED VM runs services/applications required for emulating users, adversaries, or basic network functionality.
Kali
Client
Windows
Company Router
Virtual Machine Operating system Service/Application
Apache HTTP Server
Attacker
Email handler
Metasploit console
Meterpreter HTTP listener
Firefox
User Emulation
NTP server
Squid
Damn Vulnerable Web App
Postfix & Dovecot
Samba
NTP server
Squid
Elasticsearch
Logstash
Kibana
Internal Server
Internet Router
Ubuntu
IPFire
DMZ Server
IPFire
Ubuntu
Log Server
Ubuntu
Purpose
serves malicious website
responds to emails
launches cyberattacks
accepts connections
retrieves web pages
generates user activity, opens email attachments and links
synchronizes time
provides HTTP proxy
gets exploited
transfers and delivers emails
acts as Windows Domain Controller
synchronizes time
provides HTTP proxy
stores log data
collects log data
searches and visualizes log data
Table 4: The attack steps currently implemented in SOCBED cover all ATT&CK tactics (filled circles indicate coverage).
t
n
e
m
p
o
l
e
v
e
D
e
c
r
u
o
s
e
R
e
c
n
a
s
s
i
a
n
n
o
c
e
R
n
o
i
t
a
l
a
c
s
E
e
g
e
l
i
v
i
r
P
s
s
e
c
c
A
l
a
i
t
n
e
d
e
r
C
n
o
i
s
a
v
E
e
s
n
e
f
e
D
y
r
e
v
o
c
s
i
D
t
n
e
m
e
v
o
M
l