on the device for each test, ensuring that all radio inter-
faces are disabled unless otherwise explicitly requested.
Idle state requires very little power, as the device remains
in suspended state with the main processor powered off.
Since epoch changes require disabling and re-enabling
the hardware Bluetooth controller, the controller requires
several seconds to return to its working state. An epoch
change requires 568mJ energy consumption — however,
note that epoch changes are relatively infrequent (e.g.,
every ﬁfteen minutes) compared to discovery.
Additionally, we collected power traces for various
discovery and recognition protocols. When there are no
nearby devices, the baseline discovery protocol in Blue-
tooth 2.1 costs 1363mJ per discovery.
In comparison,
our implementation of the SDDR protocol over Blue-
tooth 2.1 incurs only 7% additional energy cost while
executing the recognition protocol with 5 nearby devices
(and using 256 advertised and listen IDs). The imple-
mentation of the DH+PSI strawman over Bluetooth 2.1
requires much more energy per execution, over an order
of magnitude greater than the baseline (43,335mJ com-
pared to 1,363mJ). This is expected as the PSI protocol
USENIX Association  
23rd USENIX Security Symposium  933
Component
Idle
Bluetooth 2.1
Discovery (0 Devices)
Incoming Connection
Discovery and Recognition
(5 Devices, 256 Listen IDs)
SDDR over BT2.1
DH+PSI over BT2.1
ResolveAddr in BT4.0
SDDR Epoch Change
Avg. Power
(mW)
1.73
Energy
(mJ)
-
118
200
124
404
226
178
1,363
893
1,464
43,335
737
568
Table 2: Average power and energy consumed by various
components, or system states. Components which have
energy consumption marked as ’-’ have no well deﬁned
duration.
is not as efﬁcient as SDDR in terms of computation (See
Figure 2) and communication, and it must execute an in-
teractive protocol for each nearby device.
The ResolveAddr protocol, implemented as per the
Bluetooth 4.0 speciﬁcation, requires less energy (737mJ)
compared to other schemes; however,
it neither ex-
changes a session key, nor supports efﬁcient revocation
of the set of linked users [3]. ResolveAddr is optimized
to support a limited feature set, and uses the efﬁcient
broadcast channels made available in Bluetooth 4.0.
In addition, as a point of comparison between inter-
active and non-interactive protocols, we collected power
traces for a device waking up to handle an incoming
connection over Bluetooth 2.1 (without performing any
work). This incoming connection consumes an average
of 893mJ, which is roughly 65% of the cost of an en-
tire discovery operation. This connection cost scales lin-
early, which makes interactive protocols impractical for
handling many nearby devices.
Reduction in battery life
In order to gauge the reduc-
tion in battery life of frequently running a discovery and
recognition protocol, we collected power traces for vari-
ous protocol conﬁgurations with up to 5 nearby devices
over the course of two epochs (30 minutes). For each
protocol, we evaluate two different discovery intervals
(60 and 120 seconds); existing applications, such as Hag-
gle [8], use a 120 second interval. Since the energy con-
sumption remains the same across two epochs, we ex-
trapolate the energy consumed to a full day (24 hour pe-
riod), as shown in Table 3.
The Samsung Galaxy Nexus battery has a capacity
of 6.48Wh, which we convert to 23,328J for the pur-
pose of comparisons within the table. With 5 nearby
devices, SDDR uses 5.57% of the battery life per day
with a 120 second discovery interval; ResolveAddr uses
slightly less than SDDR (around 3%), due to the reduced
discovery costs.
In comparison, the DH+PSI protocol
State
Full Battery
Idle
Idle with Bluetooth
Running (5 Devices, 256 Listen IDs)
(60s Discovery Interval)
SDDR over BT2.1
ResolveAddr in BT4.0
DH+PSI over BT2.1
IncConn over BT2.1
(120s Discovery Interval)
SDDR over BT2.1
ResolveAddr in BT4.0
DH+PSI over BT2.1
Energy
(J)
23,328
150
188
Battery
(%)
100
0.64
0.81
2,511
1,260
44,619
9,143
1,300
718
35,097
10.76
5.40
191.27
39.19
5.57
3.08
150.45
Table 3: Energy and battery life consumption for differ-
ent states and protocol conﬁgurations over the course of
one full day. A daily battery consumption of p% means
that the battery would last 100/p days if the device runs
the corresponding protocol and is otherwise idle.
consumes around 150% of the battery over the course of
24 hours. This means that the battery would completely
drain within 16 hours, or within only 12.6 hours when us-
ing the 60 second discovery interval. IncConn provides
a point of reference for the base-line battery life of an
interactive protocol—without executing any protocol, it
consumes around four times as much energy as SDDR.
As previously mentioned, we assume that each discov-
ery returns 5 new nearby devices; in the case of SDDR,
this requires computing the shared secret and using the
complete set of listen IDs (instead of the matching set)
to query the received Bloom ﬁlter. In practice, there will
not always be 100% churn in nearby devices in each dis-
covery period, meaning that these results are conserva-
tive estimates of actual energy consumption.
In order to provide a visual comparison between the
protocols, we present snapshots of a single 120 second
discovery interval for both the SDDR and DH+PSI pro-
tocols in Figure 3. These snapshots show the power con-
sumed at each point in time; energy consumption is com-
puted by integrating over a given interval of time. Both
protocols initiate a discovery at around the 20 second
mark. Since we designed the SDDR protocol to support
non-interactive execution, SDDR over BT2.1 can take
advantage of executing both the discovery and recog-
nition portions at the same time. Unlike SDDR, the
DH+PSI protocol must perform an interactive recogni-
tion protocol that takes longer than the discovery pro-
cess itself, and must be performed individually with
each nearby device.
In the right half of the plot, both
devices handle incoming discovery and recognition re-
quests from nearby devices (5 for SDDR, and 1 for
934  23rd USENIX Security Symposium 
USENIX Association
Discovery/Recognition
Incoming
Discovery/Recognition
Discovery Recognition
Incoming
Recognition
)
%
(
n
o
i
t
p
m
u
s
n
o
C
e
f
i
L
y
r
e
t
t
a
B
y
l
i
a
D
 60
 50
 40
 30
 20
 10
 0
 0
60s Discovery Interval
120s Discovery Interval
 50
 100
 150
 200
 250
New Nearby Devices per Discovery
)
W
m
(
d
e
m
u
s
n
o
C
r
e
w
o
P
)
W
m
(
d
e
m
u
s
n
o
C
r
e
w
o
P
1
.
2
T
B
r
e
v
o
R
D
D
S
1
.
2
T
B
r
e
v
o
I
S
P
+
H
D
 2000
 1500
 1000
 500
 0
 2000
 1500
 1000
 500
 0
 0
 20
 40
 60
 80
 100
 120
Time (sec)
Figure 3: Power traces from running the SDDR and
DH+PSI protocols (implemented over Bluetooth 2.1) for
one discovery interval of 120 seconds.
DH+PSI). Even for the case of a single nearby device,
DH+PSI is not practical.
Crowds and DoS attacks A frequently running protocol
such as SDDR can potentially open up a new avenue of
attack, whereby attackers can try to exhaust the battery
of a victim device by forcing it to continually perform
new discoveries. Even in benign scenarios, a device may
legitimately perform many discoveries over a prolonged
interval, e.g., when the user is at a stadium or an in-
door auditorium, and the device encounters many other
Bluetooth enabled devices.
In this section, we experi-
ment with these extreme scenarios, and show that SDDR
does not adversely affect battery consumption, regard-
less of the number of peers it discovers. At the same
time, SDDR is able to discover linked peers, and provide