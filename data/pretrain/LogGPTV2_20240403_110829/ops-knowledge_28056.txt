I am attempting to capture the standard output (stdout) of a process in real-time using `popen`. However, with gevent 1.0, both `readline()` and `read()` methods are blocking, meaning they wait for the process to complete before returning any data. I have extensively searched for a straightforward solution that does not involve threading. Is there an alternative approach?

**Solution:**
I managed to resolve this issue with a small workaround. By flushing Python's line buffer using `self.stream.flush()`, and employing a helper class to monitor and handle each line written to stdout, you can achieve non-blocking, real-time output from the process.