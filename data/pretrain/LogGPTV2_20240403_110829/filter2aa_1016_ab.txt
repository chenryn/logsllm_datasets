# Application Level Filtering
- **ACL Definition and Usage**: Define an Access Control List (ACL) and use it for application access control.
- **View Restrictions**: Use views to restrict the exposure of sensitive data.

© 2002 Sécurité.Org

## SNMP (3)
- **SNMP v3 Configuration**:
  - Define a user/group and specify their permissions.
- **Security Advisories**:
  - **Hidden ILMI Community**: The `show snmp community` command displays all communities, including hidden ones.
  - **Read-Write Community with Read-Only Access**: Ensure that read-write communities are not available with read-only access.
  - **ASN.1 Bug**: Address the SNMP-wide bug related to ASN.1 encoding.

Example Configuration:
```plaintext
snmp-server group engineering v3 priv read cutdown 10
snmp-server user nico engineering v3 auth md5 myp4ss priv des56 mydes56
snmp-server view cutdown ip.21 excluded
access-list 10 permit x.x.x.x
access-list 10 deny any log
```

© 2002 Sécurité.Org

## Secure Shell (SSH) (1)
- **SSHv1 Support**:
  - **Routers**: Supported as of versions 12.1(1)T/12.0(10)S. SCP is supported as of 12.2T.
  - **Switches**: Supported on CatOS 6.x.
- **Risks and Limitations**:
  - Cisco’s implementation is based on SSH v1 and has known vulnerabilities such as key recovery, CRC32, traffic analysis (SSHow), timing analysis, and other attacks.
  - You cannot force 3DES only or use keys.
  - Fixed in versions 12.0(20)S, 12.1(8a)E, 12.2(3), etc.

© 2002 Sécurité.Org

## Secure Shell (SSH) (2)
- **SSH Configuration**:
  - Configure hostname and domain name.
  - Generate RSA keys.
  - Set SSH timeout and authentication retries.
  - Enable SCP server.

Example Configuration:
```plaintext
hostname <hostname>
ip domain-name <domain-name>
crypto key generate rsa
ip ssh timeout 60
ip ssh authentication-retries 3
ip scp server enable
```

© 2002 Sécurité.Org

## IPsec (1)
- **IPsec Configuration**:
  - Deny all traffic except IPsec-related/decrypted traffic.
  - Define a Security Association (SA) for the traffic to be encrypted.
  - Define an IKE policy.

Example Configuration:
```plaintext
interface xy
ip address y.y.y.y 255.255.255.0
ip access-group 100 in
access-list 100 permit udp host x.x.x.x host y.y.y.y eq 500
access-list 100 permit esp host x.x.x.x host y.y.y.y
access-list 100 permit ahp host x.x.x.x host y.y.y.y
access-list 100 permit ip  
access-list 110 permit ip x.x.x.x  y.y.y.y 
crypto isakmp policy 1
hash md5
encryption 3des
authentication pre-share
group 2
crypto isakmp key <key> address y.y.y.y
```

© 2002 Sécurité.Org

## IPsec (2)
- **Transform-Sets and Crypto-Map**:
  - Define transform-sets (tunnel mode is preferred; use transport mode with Windows 2K for easier configuration).
  - Combine all configurations in a crypto-map and apply it to an interface.

Example Configuration:
```plaintext
crypto ipsec transform-set 3desmd5 esp-3des esp-md5-hmac
crypto map mycryptomap 10 ipsec-isakmp
set peer y.y.y.y
set transform-set 3desmd5
match address 110
interface xy
crypto-map mycryptomap
```

© 2002 Sécurité.Org

## Local Users and Passwords
- **Local Users**:
  - Encryption type 7 is reversible; MD5 is supported as of 12.1(8a)E.
- **Enable Secret**:
  - Use MD5 (type 5) for the enable secret.
- **Access Method**:
  - Remove Telnet and enable SSH.
  - Do not forget to secure the console and AUX port.

Example Configuration:
```plaintext
service password-encryption
enable secret 5 <password>
service tcp-keepalives-in
line vty 0 4
exec-timeout 0 60
access-class 10 in
transport input ssh
transport output none 
transport preferred none
access-list 10 permit x.x.x.x
```

© 2002 Sécurité.Org

## AAA: Authentication and Accounting
- **Authentication/Accounting**:
  - Use RADIUS/TACACS+ for authentication and accounting.
  - TACACS+ supports command accounting.

Example Configuration:
```plaintext
aaa new-model
aaa authentication login default tacacs+ enable
aaa authentication enable default tacacs+ enable
aaa accounting exec default start-stop group tacacs+
ip tacacs source-interface loopback0
tacacs-server host x.x.x.x
tacacs-server key K3y
aaa accounting commands 15 default start-stop group tacacs+
```

© 2002 Sécurité.Org

## AAA: Authorization
- **Privilege Levels**:
  - Privilege levels range from 1 (user EXEC “view only”) to 15 (privileged EXEC “enable”).
  - No intermediate levels on switches.
  - Change privilege levels to reduce information disclosure and avoid stepping stones.
- **Command Authorization**:
  - Only supported with TACACS+.

Example Configuration:
```plaintext
privilege exec level 15 connect
privilege exec level 15 telnet
privilege exec level 15 ssh
privilege exec level 15 rlogin
privilege exec level 15 show logging
privilege exec level 15 show [ip] access-lists
username seeandgo privilege autocommand show running
```

© 2002 Sécurité.Org

## AAA: Kerberos (1)
- **Cisco Routers**:
  - Supports Kerberized Telnet and password authentication using Kerberos.
  - Can map instances to Cisco privileges (locally defined).
  - Feature name: Kerberos V client support (Enterprise).
  - Not supported on all hardware (e.g., 16xx, GSR).
- **Cisco Switches**:
  - Supports Telnet only (SSH available as of 6.1 but without Kerberos support).
  - Requires at least SE Software Release 5.x.
  - Supported on Catalyst 4K, 5K, and 6K/6500 (with SE I, not SE II).

© 2002 Sécurité.Org

## AAA: Kerberos (2)
- **Kerberos Configuration**:
  - Configure Kerberos on routers and switches.
  - Set up NTP and Kerberos servers.

Example Configuration:
```plaintext
aaa authentication login default krb5-telnet local
aaa authorization exec default krb5-instance kerberos local-realm COLT.CH
kerberos srvtab entry host/...
kerberos server COLT.CH 192.168.0.14
kerberos instance map engineering 15
kerberos instance map support 3
kerberos credentials forward
line vty 0 4
ntp server 192.168.0.126
set kerberos local-realm COLT.CH
set kerberos clients mandatory
set kerberos credentials forward
set kerberos server COLT.CH 192.168.0.82 88
set kerberos srvtab entry host/... 
set authentication login kerberos enable telnet primary
set authentication enable kerberos enable telnet primary 
set ntp client enable
set ntp server 192.168.0.11
```

© 2002 Sécurité.Org

## ACLs (1)
- **IP Filtering with ACLs**:
  - ACLs are not stateful and do not perform reassembly.
  - `log-input` logs the source interface and MAC address.
  - Only the first fragment is filtered unless the `fragment` keyword is used.
- **Well-Known ACL Types**:
  - **Standard ACLs**: Source IP address only (ranges 1-99, 1300-1999).
  - **Extended ACLs**: Limited to IP addresses, protocols, ports, and ACK/RST bits (ranges 100-199, 2000-2699, and named ACLs).

© 2002 Sécurité.Org

## ACLs (2)
- **Other ACL Types**:
  - **TurboACL**: Uses a hash table, beneficial when there are 5+ ACEs.
  - **Reflexive ACLs**: Enables on-demand dynamic and temporary reply filters.
  - **Dynamic ACLs**: Adds user authentication to Extended ACLs.
  - **Named ACLs**: Allows deletion of individual ACEs.
  - **Time-Based ACLs**: Adds a time-range option.
  - **Context-Based Access-Control (CBAC)**: Inspects protocols and works with ACLs.
  - **MAC ACLs**: Filters on MAC addresses (ranges 700-799 for standard, 1100-1199 for extended).
  - **Protocol ACLs**: Filters on protocol types (ranges 200-299).

© 2002 Sécurité.Org

## ACLs (3)
- **Example: Extended ACL on a Router**:
- **ACLs on a Multi-Layer Switch**:
  - ACLs defined on Layer 3 (S/E/R/D) are pushed to the NMP (TCAM).
  - Traffic will not hit the MSCF if you don’t use `log[-input]`, `ip unreachables`, or `TCP Intercept`.
  - **VACLs (VLAN ACLs)**: Filter IP-level traffic and are pushed from the PFC to the switch.

Example Configuration:
```plaintext
no access-list 100
access-list 100 permit 
access-list 100 deny tcp any range 1 65535 any range 0 65535 log
access-list 100 deny udp any range 1 65535 any range 0 65535 log
access-list 100 deny ip any any log-input
```

© 2002 Sécurité.Org

## Router Integrity Checking (1)
- **Four Steps to Build a Tripwire-Like System for IOS/CatOS**:
  1. Store router and switch configurations in a central (trusted) repository (e.g., CVS).
  2. Retrieve the configuration from the device (scripted telnet, rsh, tftp, scp) or have the device send the configuration (requires RW SNMP access).
  3. Check the configuration: automatically (cron/at job), when you see "configured by" or a router boot in the log file, or when you receive a "configuration changed" SNMP trap.
  4. Compare the configuration with your own script or use CVS/Rancid.

Example Command:
```plaintext
snmpset -c <community> .1.3.6.1.4.1.9.2.1.55. s
```

© 2002 Sécurité.Org

## Router Integrity Checking (2)
- **Limitations and Details**:
  - Trust the running IOS/CatOS (no known Cisco "rootkit").
  - Configuration is transmitted in clear text over the network (use scp or IPsec for encryption).
  - Consider both `startup-config` and `running-config`.
  - Apply the same process to IOS/CatOS images.
  - Relevant MIBs: CISCO-CONFIG*.

© 2002 Sécurité.Org

## Router Integrity Checking (3)
- **Cisco IOS Rootkit/BoF/FS: Is It Possible?**
  - Proprietary, closed-source OS running on MIPS (newer models) or Motorola 68K (older models).
  - Based on (BSD) Unix.
  - ELF 32-bit MSB executable, statically linked, and stripped.
  - What can be done with remote gdb access:
    - `gdb {kernel|pid pid-num}`?
  - Is ROMMON a good starting point (local gdb)?

© 2002 Sécurité.Org

## Router Integrity Checking (4)
- **Open Questions and Issues**:
  - No known local tools/commands to interact with the kernel, memory, processes, etc.
  - What can be done in enable engineer mode?
  - Is it possible to upload a modified IOS image and start it without a reboot?
    - Using dual RPs (Route Processors) or upgrading LCs only (Line Cards).
  - Many different images exist (providers usually go for ~12.0(x)S), and a tool to patch images would be required.
  - What will happen with IOS-NG (support for loadable modules)?
    - Is Cisco still working on it? GSR dedicated team?

© 2002 Sécurité.Org

## Router Forensics (1)
- **Architecture and Data Flows**:
  - Exports/Polling
  - Stored locally
  - Needs Flash (non-volatile) and (D)RAM (volatile)
  - Router components: DHCP/BOOTP, (TFTP) Configuration, NTP clock sync, local or remote IOS image, (Running) IOS, running and startup-config, running IOS & processes, routing information, (Debug) log, history, etc., Syslog, ACLs with `log[-input]` keyword, system information, SNMP traps/errors, AAA logs, core dumps, Netflow accounting data, routing protocol information, scripted telnet/expect/Perl.

© 2002 Sécurité.Org

## Router Forensics (2)
- **Checking Remote Logs and Accounting Data**:
- **Reading the Flash Card**:
  - FTP: `ftp://ftp.bbc.co.uk/pub/ciscoflash/`
- **Before/After Reboot**:
  - Local buffers/logs
  - Reboot with which config-register? Normal or ROMMON?
- **Connecting to the Router**:
  - Telnet/SSH or local console?

© 2002 Sécurité.Org

## Conclusion
- **Latest Version of This Document & Presentation**:
  - Includes tips/commands to secure routers (IOS) and switches (Cat(I)OS).
- **Questions?**

Image: http://www.inforamp.net/~dredge/funkycomputercrowd.html

That’s all folks :-)

© 2002 Sécurité.Org