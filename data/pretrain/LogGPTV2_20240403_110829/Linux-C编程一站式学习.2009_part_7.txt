这个问题。
的类型转换规则非常难掌握，本书的前几章会尽量避免类型转换，到第3节“类型转换"再集中解决
的折衷,
仅很复杂，
换说明与之对应。
类型一致，
在第二个printf中，
4.赋值
1、假设变量x和n是两个正整数，
有些事情编译器可以自动做好,
，而且使C语言的形式看起来也不那么严格了，
，而现在并不一致。C语言规定了-
 本来编程语言作为一种形式语言要求有简单而严格的规则，
，表达式是minute／60.0，60.0是double型的,
，我们知道x/n这个表达式的结果要取Floor，
 整个表达式的值也是double型的,
全国嵌入式人才培训基地
，程序员就不必每次都写一堆繁琐的转换代码。然而C语言
一套隐式类型转换规则
起始页
上一级
，C语言这么设计是为了书写程序简便而做
/运算符要求左右两边的操作数
 在格式化字符串中应该用r转
在这里编译器自动把左边 
6.字符类型与字符编码
则结果
例如x是17，n是4，则
自动类型转换规则不
下一页
---
## Page 47
直Tab、换行和分页符，本书在使用"空白字符"这个词时会明确说明在当前上下文中空白字符指的
[3 空白字符在不同的上下文中有不同的含义，在C语言中空白字符定义为空格、水平Tab、垂
字符'a'~'z'、‘A'~'z'
把'a当作整数值97，然后加1，得到98，然后printf把98这个整数值当作ASCIl码来解释，打印出
如CR(carriage return)、LF(NL line feed，newline)、DEL等等。作为练习，请读者查一查表2.1
执行结果是b。
6.字符类型与字符编码 请点评
是哪些字符。
意'的ASCII码是48，而\0′的ASCII码是0，两者是不同的。
写\x加上1~2个十六进制数字组成，可以用在字符常量或字符串字面值中。例如·0·表示NUL字符
字符也可以用ASCII码转义序列表示，
小，
之前我们说"整型"是指int型,
相应的字符b。
回到刚才的例子，在ASCII码中字符a是97，
"C标准规定的转义字符"中的字符在ASCI码表中的什么位置。
（Whitespace）[3]，不能像字母a这样把字符本身填在表中，而是用一个名字来描述该字符，例
间的换算将在第2节“不同进制之间的换算"介绍。从十进制那一列可以看出ASCI码的取值范目
前三列分别是用十进制（Dec）
Interchange, 
（Null Character）
码（Character Encoding）
我们知道，符号在计算机内部也用数字表示，
是0~127。
字符
上一页
‘0'+9和·9＇的值也相等。注意0＇～＇9·的ASCII码是十六进制的30~39，和整数值0~9是不相等
常量或
。表中的很多字符是不可见字符（Non-printable Character）或空白字符
 美国信息交换标准码)
型变量
"\11'或\x9'表示Tab字符，
‘'～'9＇的ASCI码都是连续的，
'a'+1);
口
以
 而现在我们知道char型本质上就是整数，
当
十六进制（Hx）和八进制（Oct）表示的字符编码，
整数参与运算，
第 2章 常量、变量和表达式
，这种转义序列由\加上1~3个八进制数字组成，或者由\x或大
6.字符类型与字符编码
详见图A.1“ASCI码表”。表中每一栏的最后一列是字符,
全国嵌入式人才培训基地
，字符b是98。计算'a'+1这个表达式，
，每个字符在计算机内部用一个整数表示，称为字符编
，例如：
"\11"或"\x9"表示由Tab字符组成的字符串。
，因此表达式'a'+25和'z`的值相 
 只不过取值范围比int型
应该按ASCII码
以后我们还要
各种进制
山
注
贝
---
## Page 48
5.表达式
一页
全国嵌入式人才培训基地
起始页
级
第3章简单函数
---
## Page 49
6.字符类型与字符编码
目录
第 3 章 简单函数 请点评
1.数学函数
上一页
全局变量、
局部变量和作用域
全国嵌入式人才培训基地
全国嵌入式人才培训基地
部分I.C语言入门
第3章简单函数
起始页
上一级
1.数学函数
贝
---
## Page 50
用也是一种表达式，因此printf语句也是表达式语句的一种。但是printf感觉不像一个数学函数,
现在我们可以完全理解printf语句了：原来printf也是一个函数，
参数列表→表达式，表达式，.
表达式 →表达式(参数列表)
数调用表达式的值称为函数的返回值（Return Value）。总结一下我们新学的语法规则：
数log的后缀。操作数1og是一个函数名（Function Designator）
函数调用运算符()括号组成，函数调用运算符是一种后缀运算符,
在数学中写一个函数有时候可以省略括号，而C语言要求一定要加上括号，例如1og(1.0）。在C语
编译运行这个程序，结果如下:
数（In函数在C标准库中叫做1og）：
表达式→函数名 
(4
在数学中我们用过sin和In这样的函数,
1.数学函数请点评
上一页
，这应该是写表达式的位置,
例3.1.在C语言中使用数学函数
S
gcc main.c -lm
/a
inelude 
out
log(1.0));
int main(void)
1og
return 0;
因此函数调用也是-
 例如sin(m/2)=1，In1=0等等，在C语言中也可以使用这些函
全国嵌入式人才培训基地
log是函数（Function）
第3章简单函数
1.数学函数
一种表达式。log(1.0)这个表达式由操作数log和
()括号及其中的参数是操作
上例中
，类型是double型，在C语言中函
它的类型是一种函数类型 
1og
而函数调
下一页
g
进
---
## Page 51
认选项。关于头文件和库函数目前理解这么多就可以了，到第20章链接详解再详细解释。
使用math.h中声明的库函数还有一点特殊之处，gcc命令行必须加-1m选项，
就可以编译通过，
程序第一行的#号
回想一下我们的学习过程，
S
别。
Effect）－－打印。C语言的函数可以有Side Effect，这一点是它和数学函数在概念上的根本区
的字符数）
了得到它的返回值，
为什么呢？因为像
要
(Header File)
的
复
概
大
习
句
看
用
side Effect这个概念也适用于运算符组成的表达式。比如a+b这个表达式也可以看成一个函数调
必包含任何头文件，
数
念就泛化为整
数
这样
的一种。随着
式语句的一
变量a被改变了
成函数调用，
返回值，
但这是学习理解的必经阶段,
在理角
有理数和无理数的概念就泛化为实数。
其实这
初学
解原不
，并没有产生任何Side Effect。而赋值运算符是有Side Effect的,
，我们调用printf不是为了得到它的返回值，而是为了利用它所产生的副作用（Side
一种；
符合C标准的实现也是存在的，例如很多单片机的C语言开发工具中
C标准库和glibc 请点评
整数
个
在Linux平台上最广泛使用的C函数库是glibc，
有
者
着
要调用glibc的库函数，所以glibc是Linux平台C程序运行的基，
实现，也包括本书第三部分介绍的所有系统函数。几乎所有C程序都
只有C编译器而没有完整的C标准库。
要实现C编译器，还要实现C标准库，这样的实现才算符合C标准。不
函数、变量、类型声明和宏定义。要在一
C标准主要由两部分组成，
 返回值就是所赋的值，
车。
目
我
，当然这个程序什么也做不了。
概
。C标准库定义了一组标准头文件，
录下）
(Pound Sign ,
念是
，改变计算机存储单元里的数据或者做输入输出操作都算Side Effect。
开
上初口
至于printf，
这种函数,
例如写一
错的，
基
步步的学
。头文件中声明了我们程序中使用的库函数，根据先声明后使用的原则，
接
含stdio.h,
中学
础上不断
触的很多
，它的两个参数是a和b，
一开始我们说赋值是
学习
无理数
，Number Sign或Hash Sign）和include表示包含一个头文件
来
断纠正
多
我们传进去一个参数会得到一个返回值，
到后面的章节都会逐步纠正的。
 我们并不关心它的返回值（事实上它也有返回值，
概
，要使用数学函数必须包含math.h，如果什么库函数都不使用
把原来看
既是b的值也是a的值，
原来的整数和分数的概念就泛化为有理数，再上高中学了
负数京
不断
一种语句，
一部分描述C的语法，
格
看
坦日
看似不同类型
泛
意
白说，
可以减
义
返回值是两个参数的和，
一种语句
（Generalize）
上说是
总，到目前为止本书的很多说法都是不完全正确
现在
 每个头文件中包含一些相关的
一个平台上支持C语言，
型
，-1m选项告诉编译器，
型的语句统
学
后来引入了分数，
后来学了表达式，
但除此之外还产生了Side Effect，
其中包括C标准库的
另一部分描述C标准
但
。
是很
比如一年级老师说小数不能
容易理角
一种语句了
因为这个选项是gcc的默
传入两个参数，
我们调用
 因为数学函数位
如果把a= b这个表达式
，不仅
原来的正数和负数
 我们说赋值语句是表
，我们程序中用到的
解
随着一步步学
。学习的过程
表示实际打印
函数就是为
得到一
减
语总
---
## Page 52
第3章简单函数
一
页
指libc.so这个库文件，而说glibc时指的是glibc提供的所有库文
看到多线程的C程序依赖于1ibpthread.soo
于libc.so,
函数和系统函数在libc.so库文件中，
，有些做数学计算的C程序依赖于1ibm.so,
全国嵌入式人才培训基地
起始页
级
几乎所有C程序的运行都依赖
，以后我说1ibc时专 
，也有人在开发别的C函
，以后我们还会
2.自定义函数
下一页
---
## Page 53
$?是Shell中的一个特殊变量，表示上一条命令的退出状态。关于main函数需要注意两点:
为return 4;再执行它，执行结束后可以在Shell中看到它的退出状态（Exit Status）：
类型声明，
我们稍后再详细解释“函数定义"和"非定义的函数声明"的区别。从第7章结构体开始我们才会看到
我们不仅可以调用C标准库提供的函数，也可以定义自己的函数，事实上我们已经这么做了：我们
2.自定义函数 请点评
是0，
符都遵循先声明后使用的原则就行。
书的示例代码都遵循这一
给函数命名也要遵循上一章讲过的标识符命名规则。
语句列表项-
语句列表项→语句 
语句列表→语句列表项 语句列表项 ..
函数体→{语句列表}
函数定义→返回值类型 函数名(参数列表)函数体
定义了main函数。例如：
定义的函数声明→返回值类型函数名(参数列表);
名字特殊之外，main函数和别的函数没有区别。我们对照着main函数的定义来看语法规则：
上一页
，main函数的返回值是返回给操作系统看的，
是Old Style C的风格。Old Style C规定不写返回值类型就表示返回int型，不写参数列表就表
S
int main(void)
所以现在暂不讨论。
 and o hours
./a.out 
→变量声明、
return 0;
printf("%d and %d hours\n", hour, minute / 60);
int hour = 1l;
int
 minute
一规定）
、类型声明或非定义的函数声明
，而C99的新特性允许语句和声明按任意顺序排列，
59;
 main函数的返回值是int型的，
全国嵌入式人才培训基地
第3章简单函数
2.自定义函数
，因为main函数是被操作系统调用的，通常程序执
，由于我们定义的main函数不带任何参数，
C89要求所有声明写在所有语句之前（
，不写返回值类型也不写参数列表，这
 return0;这个语句表示返回
只要每个标
53
下一页
参数
（本
---
## Page 54
如果我们总需要三个三个地插入空行，我们可以再定义一个threeline函数每次插入三个空行：
说明我们调用这个函数完全是为了利用它的Side Effect。如果我们想要多次插入空行就可以多次调
一个空行。newline函数不仅不带参数，也没有返回值，返回值类型为void表示没有返回值[4]，这
我们定义了一个newline函数给main函数调用，它的作用是打印一个换行，所以执行结果中间多了
执行结果是：
的函数开始学习定义和使用函数：
关于返回值和return语句我们将在第1节“return语句"详细讨论，我们先从不带参数也没有返回值
2．其实操作系统在调用main函数时是传参数的，
种形式之外，定义main函数的其它写法都是错误的或不可移植的。
main(void)这种写法，
argc， char *argv[］),
应该继续使用这种语法。
增加了调试难度,
示参数类型和个数没有明确指出。
例3.2.最简单的自定义函数
Second Line.
First Line.
int main(void)
int main(void)
void newline(void)
#include 
printf("First Line.\n");
printf(
newline()
newline();
newline()
printf("\n");
不幸的是现在的C标准为了兼容旧的代码仍然保留了这种语法，
return 0;
printf("First Line.\n");
"Second Line.\n");
intf(
“如果不使用系统传进来的两个参数也可以写成这种形式。但除了这两
。这种宽松的规定使编译器无法检查程序中可能存在的Bug，
-..................
.........
但读者绝不