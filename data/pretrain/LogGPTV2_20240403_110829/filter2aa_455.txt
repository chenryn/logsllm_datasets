### 业务漏洞挖掘：案例与思考分享
**演讲者：微博安全高级工程师 唐茂凡**

#### 一、现状

##### 1. 漏洞分类
- **常规漏洞**：
  - 注入攻击（如SQL注入）
  - 跨站脚本攻击（XSS）
  - XML外部实体攻击（XXE）
  - 跨站请求伪造（CSRF）
  - 服务器端请求伪造（SSRF）
  - 文件包含漏洞
  - 命令执行漏洞
  - URL重定向漏洞
  - 点击劫持
- **其他漏洞**：
  - 网络层漏洞
  - 系统层漏洞
  - 组件套件中间件漏洞
- **业务逻辑漏洞**：
  - 登录认证
  - 业务办理
  - 业务数据
  - 业务流程逻辑
  - 业务授权访问
  - 业务接口调用
  - 验证码
  - 输入/输出验证
  - 回退机制
  - 密码找回和重置
  - 实名认证
  - 设置个人信息
  - 绑定银行卡
  - 红包优惠券管理
  - 订单操作（创建、更新、删除）
  - 充值
  - 支付
  - 提现

##### 2. 漏洞成因分析
- **复杂度**：系统架构的复杂性增加，导致漏洞难以发现。
- **场景流程变化**：不同的业务场景和流程增加了漏洞的风险点。
- **多端通用性**：跨平台的应用开发使得漏洞更容易被利用。
- **风险点隐蔽**：一些风险点隐藏在复杂的业务逻辑中，不易察觉。

#### 二、为什么业务安全越来越受重视？
随着互联网的发展，业务安全变得越来越重要。以下是一些主要原因：

- **风险增加**：越来越多的业务涉及敏感信息，如用户数据、金融交易等，这些信息一旦泄露或被篡改，将造成巨大损失。
- **攻击手段多样化**：攻击者不仅利用技术漏洞，还通过社会工程学等手段进行攻击，使企业面临更多挑战。

#### 三、如何应对业务安全问题？

##### 1. 面临的挑战
- **缺乏成熟的标准、工具和服务**：目前市场上缺乏针对业务安全的成熟解决方案。
- **信息不对称**：企业和安全团队之间存在信息不对称，导致安全措施难以有效实施。
- **外部力量有限**：外部安全服务提供商的能力和资源有限，无法全面覆盖企业的安全需求。
- **各种难**：
  - 难以接触业务环境
  - 难以触发业务场景
  - 难以理解业务原理和风险

##### 2. 企业在不同阶段的业务与安全关系
- **前期**：
  - 以业务需求为主，注重功能实现
  - 业务方安全意识薄弱
  - 基础安全为主，不够重视业务安全
  - 风险未集中暴露，不能有效止损
  - 缺乏事前的安全评审与测试
  - 缺乏事中的安全监控与风控运营
  - 缺乏事后支持，难以溯源
- **中期**：
  - 安全成为业务的一个属性
  - 业务方安全意识提高
  - 业务安全基础建设加强，安全话语权提高
  - 风险集中暴露，事件经验迅速积累
  - 防护监控设备的引入
  - 攻击者目标转向业务逻辑层
  - 业务需求评审和设计阶段的安全介入
  - 基于业务场景的安全测试，人工测试主导+自动化漏洞发现
- **后期**：
  - 业务安全标准化作业
  - 业务安全决策影响
  - 业务安全咨询，支持创新业务发展
  - 从止损思维到盈利思维转化
  - 业务安全能力对外输出

##### 3. 漏洞发现方法
- **线上业务被动扫描**
- **SDL阶段黑白盒扫描**
- **安全巡检**
- **SRC等外部反馈**
- **基于业务场景的人工漏洞挖掘**
- **风控运营**

##### 4. 不同业务场景
- **行业差异**：不同行业的业务场景有所不同
- **高风险业务场景识别**：需要特别关注高风险业务场景
- **动态变化**：即使在同一行业中，业务场景也不是一成不变的

##### 5. 安全测试人员所需能力
- **真正理解业务**：深入理解业务流程和逻辑
- **安全意识培训**：提升团队整体的安全意识
- **安全开发红线**：明确安全开发的基本要求
- **安全编码规范**：遵循安全编码的最佳实践
- **协助解决问题**：帮助业务团队解决安全问题

#### 四、体会与思考
- **安全产品与程序员的关系**：安全产品是程序员的“天敌”，但也是保护程序的重要工具。
- **安全意识培训**：定期进行安全意识培训，提高全员安全意识。
- **安全开发红线**：设定明确的安全开发标准，确保代码质量。
- **安全编码规范**：制定并遵守安全编码规范，减少潜在漏洞。
- **协助解决问题**：安全团队应积极协助业务团队解决安全问题，共同保障业务安全。

通过以上分析和实践，我们可以更好地理解和应对业务安全问题，从而保障业务的稳定和持续发展。