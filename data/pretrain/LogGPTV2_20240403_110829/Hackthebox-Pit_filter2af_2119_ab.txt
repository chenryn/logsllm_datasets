                 - enablePasswordForgotten: Allow users to reset their password
           - restricted: Restricted access: only allow users to log in if they have an entry in the local database (irrespective of successful authentication with LDAP).
           - enableUserImage: enable users images
           - disableSelfEdit: if true user cannot edit his own profile
                 - passwordStrength: minimum strength of password, set to 0 to disable
                 - passwordExpiration: number of days after password expires
                 - passwordHistory: number of remembered passwords
                 - passwordStrengthAlgorithm: algorithm used to calculate password strenght (simple or advanced)
                 - encryptionKey: arbitrary string used for creating identifiers
        -->    
             pdftotext -nopgbrk %s - | sed -e 's/ [a-zA-Z0-9.]\{1\} / /g' -e 's/[0-9.]//g'
         catdoc %s
         ssconvert -T Gnumeric_stf:stf_csv -S %s fd://1
         id3 -l -R %s | egrep '(Title|Artist|Album)' | sed 's/^[^:]*: //g'
         id3 -l -R %s | egrep '(Title|Artist|Album)' | sed 's/^[^:]*: //g'
         cat %s
其中发现了数据库的账号密码
但是`/etc/passwd`中mysql为`/sbin/nologin`，解释如下：
>
>     If  the file /etc/nologin exists and is readable, login(1) will allow
> access only to root.
>     Other users will be shown the contents of this file and  their  logins
> will  be  refused.
>     This provides a simple way of temporarily disabling all unprivileged
> logins.
>  
就是禁止以账户的的方式登录，通常由许多需要账户但不想通过授予登陆访问权限而造成安全问题的系统服务器使用，那这里没法通过 **远程命令执行**
用数据库账号密码来查询数据了
上面我们已经知道9090端口可以登录Cockpit，且 **root** 和 **michelle**
两个用户使用`/bin/bash`，结合Cockpit控制台的作用，我们尝试用`username:michelle/password:ied^ieY6xoquu`登录cockpit，成功登录！
在 **Accounts** 中，发现确实存在 **root** 和 **michelle** 两个用户
用Cockpit自带的终端找到user.txt
## 提权
先用`sudo -l`列出目前用户可执行与无法执行的指令，发现 **michelle** 用户不能执行`sudo`命令，另寻他法
回到snmp文件，发现`/usr/bin/monitor`,monitor是一个文件，用`cat`命令看看写了啥
进入`/usr/local/monitoring`目录，可以看但我们只有`wx`权限。向目录写入一个脚本文件，`cat`以后成功输出了
结合在 **Accounts** 中的发现，我们可以向`/root/.ssh`写入一个密钥来绕过SSH密码登录root账户
在本地生成一对密钥，会产生 **xxx.pub** 和 **xxx** 两个文件
写一个shell脚本来写入我们的密钥
在本地一起个web服务`python -m http.server
80`，并在Cockpit终端中用`curl`命令来获取本地的shell脚本，用`cat`执行脚本
用snmpwalk加载所有内容
    snmpwalk -m +MY-MIB -v2c -c public 10.10.10.241 nsExtendObjects
    #-m MIB[:...]          load given list of MIBs (ALL loads everything)
接下来就可以用配对的密钥SSH连接root了，得到root.txt
写入密钥并连接的操作需要连贯的完成，因为目标Linux会定时删除`/monitoring`目录下的文件
**注意！！运行snmpwalk前需要安装配置好snmp**
    apt-get install snmp
    cpan -i NetAddr::IP
    apt-get install snmp-mibs-downloader
    sudo download-mibs
## 写在最后
总的做下来是学到了新知识的，以后信息收集的时候也会注意更多小细节
在SeedDMS版本漏洞利用的点上是官方设计的问题，有文章没解释就说这里应该用 **CVE-2019-12744的漏洞**
我觉得这是非常不负责任的一件事情，我们应该抱着质疑的态度而不是文章怎么写就照着做
## 参考链接