### 配置项说明
- `enablePasswordForgotten`: 允许用户重置密码。
- `restricted`: 限制访问，仅允许在本地数据库中有记录的用户登录（无论LDAP认证是否成功）。
- `enableUserImage`: 启用用户头像功能。
- `disableSelfEdit`: 如果设置为`true`，则用户无法编辑自己的个人资料。
- `passwordStrength`: 密码的最小强度。设为0以禁用此功能。
- `passwordExpiration`: 密码过期前的天数。
- `passwordHistory`: 记录的历史密码数量。
- `passwordStrengthAlgorithm`: 用于计算密码强度的算法（简单或高级）。
- `encryptionKey`: 用于创建标识符的任意字符串。

### 命令行工具使用示例
```bash
pdftotext -nopgbrk %s - | sed -e 's/ [a-zA-Z0-9.]\{1\} / /g' -e 's/[0-9.]//g'
catdoc %s
ssconvert -T Gnumeric_stf:stf_csv -S %s fd://1
id3 -l -R %s | egrep '(Title|Artist|Album)' | sed 's/^[^:]*: //g'
cat %s
```

### 发现与解释
在上述操作过程中发现了数据库账号密码。然而，由于`/etc/passwd`文件中MySQL用户的登录shell被设置为`/sbin/nologin`，这表示不允许通过账户直接登录。具体解释如下：
- 如果`/etc/nologin`文件存在且可读，则`login(1)`将仅允许root用户登录。
- 对于其他用户，系统会显示该文件内容并拒绝其登录请求。
- 这种方式常用于需要账户但不想因授予登录权限而带来安全风险的服务器上。

因此，不能通过远程命令执行来使用数据库账号密码查询数据。

### Cockpit登录尝试
已知9090端口可以登录Cockpit，并且`root`和`michelle`两个用户使用的是`/bin/bash`。结合Cockpit控制台的功能，我们尝试使用`username:michelle/password:ied^ieY6xoquu`进行登录，结果成功了。在**Accounts**部分确认了确实存在这两个用户。

### 提权过程
1. 使用`sudo -l`列出当前用户可执行的指令，发现`michelle`用户无权执行`sudo`命令。
2. 检查SNMP配置文件，找到`/usr/bin/monitor`，这是一个文件。使用`cat`查看其内容。
3. 在`/usr/local/monitoring`目录下具有写权限。向该目录写入一个脚本文件，并使用`cat`执行它。
4. 结合**Accounts**中的信息，尝试向`/root/.ssh`写入密钥以绕过SSH密码登录到root账户。
5. 本地生成一对密钥文件：`xxx.pub`和`xxx`。
6. 编写一个Shell脚本来写入我们的密钥。
7. 在本地启动Web服务`python -m http.server 80`，并通过Cockpit终端中的`curl`命令获取该脚本，然后执行。
8. 使用`snmpwalk`加载所有内容：
   ```bash
   snmpwalk -m +MY-MIB -v2c -c public 10.10.10.241 nsExtendObjects
   ```
9. 现在可以通过配对的密钥SSH连接至root账户，从而获取`root.txt`。
   
**注意**：运行`snmpwalk`之前需确保已安装并配置好SNMP相关软件包：
   ```bash
   apt-get install snmp
   cpan -i NetAddr::IP
   apt-get install snmp-mibs-downloader
   sudo download-mibs
   ```

### 总结
这次实践让我学到了很多新知识，在今后的信息收集过程中也会更加关注细节。关于SeedDMS版本漏洞利用的问题，我认为官方设计存在缺陷。有些文章未做充分解释就建议使用特定漏洞（如CVE-2019-12744），这种做法非常不负责任。我们应该保持质疑的态度，而不是盲目跟随。

### 参考链接
[此处添加参考链接]