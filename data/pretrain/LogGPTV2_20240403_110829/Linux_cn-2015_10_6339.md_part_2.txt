在这种情况下，你可以像先前解释的那样禁用 SELinux（但请不要这样做！），并尝试重启 sshd，且这种方法能够起效。但是， `semanage` 应用可以告诉我们在哪些端口上可以开启 sshd 而不会出现任何问题。
运行：
```
# semanage port -l | grep ssh
```
便可以得到一个 SELinux 允许 sshd 在哪些端口上监听的列表：
![Semanage 工具](/data/attachment/album/201510/03/001117i7wsoslzhwlw2dse.png)
*Semanage 工具*
所以让我们在 `/etc/ssh/sshd_config` 中将端口更改为 9998 端口，增加这个端口到 ssh*port*t 的上下文，然后重启 sshd 服务：
```
# semanage port -a -t ssh_port_t -p tcp 9998
# systemctl restart sshd
# systemctl is-active sshd
```
![Semanage 添加端口](/data/attachment/album/201510/03/001121vntuqr5og4x40xv5.png)
*semanage 添加端口*
如你所见，这次 sshd 服务被成功地开启了。这个例子告诉我们一个事实：SELinux 用它自己的端口类型的内部定义来控制 TCP 端口号。
**例 2：允许 httpd 访问 sendmail**
这是一个 SELinux 管理一个进程来访问另一个进程的例子。假如在你的 RHEL 7 服务器上，[你要为 Apache 配置 mod\_security 和 mod\_evasive](/article-5639-1.html)，你需要允许 httpd 访问 sendmail，以便在遭受到 (D)DoS 攻击时能够用邮件来提醒你。在下面的命令中，如果你不想使得更改在重启后仍然生效，请去掉 `-P` 选项。
```
# semanage boolean -1 | grep httpd_can_sendmail
# setsebool -P httpd_can_sendmail 1
# semanage boolean -1 | grep httpd_can_sendmail
```
![允许 Apache 发送邮件](/data/attachment/album/201510/03/001127xwsgs5x3fjerusb3.png)
*允许 Apache 发送邮件*
从上面的例子中，你可以知道 SELinux 布尔设定（或者只是布尔值）分别对应于 true 或 false，被嵌入到了 SELinux 策略中。你可以使用 `semanage boolean -l` 来列出所有的布尔值，也可以管道至 grep 命令以便筛选输出的结果。
**例 3：在一个特定目录而非默认目录下提供一个静态站点服务**
假设你正使用一个不同于默认目录（`/var/www/html`）的目录来提供一个静态站点服务，例如 `/websites` 目录（这种情形会出现在当你把你的网络文件存储在一个共享网络设备上，并需要将它挂载在 /websites 目录时）。
a). 在 /websites 下创建一个 index.html 文件并包含如下的内容：
```
SELinux test
```
假如你执行
```
# ls -lZ /websites/index.html
```
你将会看到这个 index.html 已经被标记上了 default\_t SELinux 类型，而 Apache 不能访问这类文件：
![检查 SELinux 文件的权限](/data/attachment/album/201510/03/001130dpsxzlzl54xngsl1.png)
*检查 SELinux 文件的权限*
b). 将 `/etc/httpd/conf/httpd.conf` 中的 DocumentRoot 改为 /websites，并不要忘了 更新相应的 Directory 块。然后重启 Apache。
c). 浏览 `http://`，则你应该会得到一个 503 Forbidden 的 HTTP 响应。
d). 接下来，递归地改变 /websites 的标志，将它的标志变为 `httpd_sys_content_t` 类型，以便赋予 Apache 对这些目录和其内容的只读访问权限：
```
# semanage fcontext -a -t httpd_sys_content_t "/websites(/.*)?"
```
e). 最后，应用在 d) 中创建的 SELinux 策略：
```
# restorecon -R -v /websites
```
现在重启 Apache 并再次浏览到 `http://`，则你可以看到被正确展现出来的 html 文件：
![确认 Apache 页面](/data/attachment/album/201510/03/001133c3upm244hpom4huh.png)
*确认 Apache 页面*
### 总结
在本文中，我们详细地介绍了 SELinux 的基础知识。请注意，由于这个主题的广泛性，在单篇文章中做出一个完全详尽的解释是不可能的，但我们相信，在这个指南中列出的基本原则将会对你进一步了解更高级的话题有所帮助，假如你想了解的话。
假如可以，请让我推荐两个必要的资源来入门 SELinux：[NSA SELinux 页面](https://www.nsa.gov/research/selinux/index.shtml) 和 [针对用户和系统管理员的 RHEL 7 SELinux 指南](https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/SELinux_Users_and_Administrators_Guide/part_I-SELinux.html)。
假如你有任何的问题或评论，请不要犹豫，让我们知晓吧。
---
via: 
作者：[Gabriel Cánepa](http://www.tecmint.com/author/gacanepa/) 译者：[FSSlc](https://github.com/FSSlc) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创翻译，[Linux中国](https://linux.cn/) 荣誉推出