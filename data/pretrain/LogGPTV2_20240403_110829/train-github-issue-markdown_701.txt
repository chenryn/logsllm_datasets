## üêõ Bug
When building libtorch with cmake/make directly, the generated
`TorchConfigVersion.cmake` will always show 1.0.0 as the version number
## To Reproduce
Steps to reproduce the behavior:
  1. Clone Pytorch
  2. Checkout v1.0.0
  3. Build libtorch with cmake/make
  4. Look at `TorchConfigVersion.cmake`
    git clone https://github.com/pytorch/pytorch.git
    cd pytorch
    git checkout v1.1.0
    git submodule update --init --recursive
    mkdir build
    cd build
    cmake \
    -DBUILDING_WITH_TORCH_LIBS=ON \
    -DBUILD_BINARY=False \
    -DBUILD_CAFFE2_OPS=True \
    -DBUILD_PYTHON=False \
    -DBUILD_SHARED_LIBS=ON \
    -DBUILD_TEST=True \
    -DBUILD_TORCH=ON \
    -DCAFFE2_STATIC_LINK_CUDA=False \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_CXX_FLAGS=  \
    -DCMAKE_C_FLAGS=  \
    -DCMAKE_EXE_LINKER_FLAGS= \
    -DCMAKE_SHARED_LINKER_FLAGS= \
    -DINSTALL_TEST=True \
    -DNCCL_EXTERNAL=True \
    -DONNX_ML=False \
    -DONNX_NAMESPACE=onnx_torch \
    -DTHD_SO_VERSION=1 \
    -DUSE_CUDA=True \
    -DUSE_DISTRIBUTED=True \
    -DUSE_FBGEMM=True \
    -DUSE_FFMPEG=False \
    -DUSE_LEVELDB=False \
    -DUSE_LMDB=False \
    -DUSE_MKLDNN=False \
    -DUSE_NCCL=False \
    -DUSE_NNPACK=True \
    -DUSE_NUMPY=True \
    -DUSE_OPENCV=False \
    -DUSE_QNNPACK=True \
    -DUSE_ROCM=False \
    -DUSE_SYSTEM_EIGEN_INSTALL=OFF \
    -DUSE_SYSTEM_NCCL=False \
    -DUSE_TENSORRT=False \
    -DCMAKE_PREFIX_PATH=/usr/local \
    ..
    make -j8
    cat ./TorchConfigVersion.cmake
## Expected behavior
The first line in `TorchConfigVersion.cmake` should be:  
`set(PACKAGE_VERSION "1.1.0")`
## Environment
PyTorch version: 1.1.0  
Is debug build: No  
CUDA used to build PyTorch: 10.0.130
OS: Ubuntu 16.04.6 LTS  
GCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.11) 5.4.0 20160609  
CMake version: version 3.5.1
Python version: 2.7  
Is CUDA available: Yes  
CUDA runtime version: 10.0.130  
GPU models and configuration:  
GPU 0: GeForce GTX 1080 Ti
Nvidia driver version: 410.104  
cuDNN version: /usr/lib/x86_64-linux-gnu/libcudnn.so.7.6.0
Versions of relevant libraries:  
[pip] numpy==1.16.4  
[pip] torch==1.1.0  
[conda] Could not collect
## Additional context
This was also tested on an ARM/Linux system with the same spurious results.