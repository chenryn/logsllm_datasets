certificate).  A 
A  “server-side”  SSL  session  means  that  the 
server  presents  a  digital  certificate  to  the  user’s 
browser as proof of the server’s identity (providing 
a binding of the public key presented with the name 
contained 
“mutually 
authenticated”  SSL  session  means  that  both  the 
user’s browser and the server present to each other a 
digital  certificate  to  prove  the  authenticity  of  their 
identities (as bound to the public keys presented) to 
the  other  party.    Most  back-end  systems  will  (at  a 
minimum) require a server-side SSL session. This is 
the  “easiest”  type  of  SSL  session  to  establish  as  it 
the 
in 
the  “ease-of-use” 
does  not  require  the  user  to  obtain  a  certificate 
(thereby  passing 
is 
foreseen  that  in  the  future  it  will  become  more 
common  for  a  user  to  be  required  to  have  and 
present a certificate for mutually authenticated SSL 
session establishment. 
test).  It 
A  user  will  be  required  to  obtain  a  certificate 
from  a  Certificate  Authority  (such  as  VeriSign). 
This certificate will be stored in a certificate store at 
the  user’s  browser.  Certificate  management 
is 
handled  by  the  user’s  browser.  A  user  will  be 
required  to  enter  a  password  to  “unlock”  the 
certificate store and provide access to a certificate as 
part of the establishment of a mutually-authenticated 
SSL session. This type of certificate can be referred 
to as an “authentication certificate” as it contains the 
key-name  binding 
for 
authentication  purposes  (Certificates  may  also  be 
used  to  provide  a  binding  of  user  name  to  signing 
key.  It  is  recommended  that  a  user  have  separate 
signing and authentication keys.).  
the  keys  used 
A  discussion  of  how  certificates  are  managed 
and  distributed  in  the  Internet  world  is  beyond  the 
scope  of  this  paper.  For  more  information  on  this 
topic, the interested reader should refer to [3].  
for 
4.2  WAP Security  
There  are  several  components  to  the  security 
features  available  with  the  WAP  specification. 
These  include  the  WTLS  protocol  for  securing 
communications,  WAP  Identity  Module  (WIM) 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 07:04:51 UTC from IEEE Xplore.  Restrictions apply. 
smartcards 
for  storing  user  certificates,  and 
functions such as Crypto.signText() to allow 
for signing of WAP transactions. In this section we 
briefly  describe  these  features  and  the  implications 
of their use. 
The  WTLS  Protocol.  WAP  communications  are 
protected  using  the  WTLS  protocol  [6].  WTLS 
provides  entity  authentication,  data  confidentiality 
and data integrity. It is based on the IETF SSL/TLS 
[7]  protocols.  WTLS 
secure 
communications  between  the  WAP  device  and  the 
WAP Gateway. There are three different classes of 
WTLS: 
is  used 
to 
•  Class 
1: 
This 
type 
implements 
key 
unauthenticated  Diffie-Hellman 
exchange to establish the session key.  
using 
to 
•  Class  2:  This  enforces  server  side 
public 
key 
authentication 
certificates 
the  SSL/TLS 
protocol.  The  WAP  Gateway  uses  a 
WTLS  certificate  (a  particular  form  of 
X.509  certificate  compressed  to  save  on 
bandwidth).  
similar 
•  Class 3: Clients implementing this level are 
to  authenticate  using  client  side 
able 
certificates.  These  certificates  are  regular 
X.509  format  and  can  be  stored  either  on 
the client or on a publicly accessible server 
(in this case a pointer to the certificate will 
be stored on the mobile device). 
Early  WAP  devices  only  implement  WTLS 
Class 1. This level of security is insufficient [8] and 
should  not  be  used  for  e-commerce  transactions. 
Devices  supporting  WTLS  Class  2  are  currently 
available.  These  devices  are  being  used  in  several 
read-only 
banking 
applications  in  Europe  and  the  UK  [14].  WTLS 
Class  3  devices  are  not  yet  generally  available, 
although there have been announcements of trials of 
phones that support Class 3 [9]. 
in-economy 
access 
and 
The WAP Identity Module. To facilitate client side 
authentication,  new  generation  WAP  phones  will 
provide  a  WIM  [10].  The  WIM  will  implement 
WTLS  Class  3  functionality.  The  WIM  has 
embedded  support  for  public  key  cryptography  – 
RSA 
is  mandatory  and  Elliptic  Curve 
Cryptography [8] is optional. An example of a WIM 
implementation is a smart card. In a wireless phone, 
it  could  be  part  of  the  Subscriber  Identity  Module 
(SIM) card (in the case of GSM [5]) or an external 
smart card (referred to as a WIM card). In the case 
[8] 
(at 
of  a  combined  SIM-WIM  card  this  is  typically 
called a SWIM card. 
configured 
A  WIM  will  be 
the 
manufacturer)  with 
two  sets  of  private-public 
keypairs (one for signing and one for authentication) 
and  two  manufacturer’s  certificates.  Note  that  the 
manufacturer’s  certificates  bind  the  manufacturer’s 
name with the public keys configured on the WIM. 
Thus all WTLS sessions established through a WIM 
and a WAP Gateway will use the same public keys 
for the initial session negotiations. Each session will 
(potentially)  include  a  different  certificate  for  this 
key. Manufacturer’s certificates are used by default 
until  a  user  has  registered  additional  certificates 
with back-end Enterprises.  
The WIM is also able to store some number of 
user  certificates  or  user  certificate  references,  such 
as  a  URL-based  reference  (Certificate  references, 
such as a URL used to access a back-end certificate 
store  are  the  preferred  means  of  storing  certificate 
information. Because the user certificates are X.509 
based,  storing  full  X.509  certificates  on  the  WIM 
will very quickly use up all available storage space). 
A  user  will  be  required  to  “enroll”  or  otherwise 
register  a  certificate  at  each  Enterprise  (such  as 
Bank  A  and  Insurance  Company  Z).  These 
certificates  will  bind 
the  user’s  public  key 
(hardcoded on the WIM) with their local Enterprise 
name  (hence  the  requirement  of  one  certificate  per 
Enterprise). The process of enrollment may require 
“proof-of-identity”  information  from  the  user;  a 
discussion  of  the  enrollment  process  is  beyond  the 
scope of this paper. 
A basic requirement for WIMs is that they are 
tamper-resistant.  This  means  that  certain  physical 
hardware  protection  is  used,  which  makes  it  not 
feasible  to  extract  or  modify  information  in  the 
module  (volatile,  non-volatile  memory  and  other 
parts).  This  is  a  strong  requirement  due  to  the 
presence  of  the  user’s  private  keys  on  the  WIM. 
Note that these private keys never leave the WIM.  
4.3 
iMode Security  
Information about the security of iMode is hard 
to  obtain  as  iMode  is  a  proprietary  protocol  and 
service.  As  quoted  on  the  SANS  forum,  “One 
message  from  a  mailing  list  said  that  since  NTT 
would  not  publish  any  information  about  iMode 
security, it should not be considered secure. Without 
more details, what choice do we have?” [17] 
We do know that the iMode protocols are based 
on  Internet  protocols.  The  HTTP  and  SSL/TLS 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 07:04:51 UTC from IEEE Xplore.  Restrictions apply. 
The 
Japan-based 
protocols  are  used  end-to-end  by  iMode;  this  was 
introduced in March of 2001. Lower level protocols 
are proprietary NTT DoCoMo protocols.  
consulting 
firm 
Eurotechnology  has  a  list  of  frequently  asked 
questions (FAQ) on iMode security. In this list, they 
identify  five  security  issues  with  iMode,  and  state 
that  these  issues  must  be  addressed  separately 
(although  they  say  nothing  about  how  they  should 
be addressed) [18]:  
1.  Security of the radio link between iMode 
handset and the cellular base station (this 
link  uses  proprietary  protocols  and 
encoding controlled by NTT DoCoMo). 
2.  Security of the transparent public Internet 
connection  between  iMode  sites  and  the 
handset in the cHTML layer. 
3.  Security of private networks on iMode. 
4.  Security of private network links between 
the  iMode  center  and  special  service 
providers such as banks. 
5.  Password security. 
Based  on  recent  presentations  on  iMode,  we 
believe that some of these points are no longer valid, 
given iMode’s adoption of SSL. As such, points 1, 
2, and 3, above, are arguably handled by the use of 
SSL  (although  it  is  still  not  possible  to  make  any 
statements  about  the  strength  of  the  lower  level 
protocols and their use).  
Security  Protocols.  iMode  security  relies  on 
“standard”  Internet  security  as  provided  by  SSL. 
The  security  protocols  used  within  the  DoCoMo 
network  and  over  the  air  are  proprietary  protocols 
that  run  over  SSL  (using  the  packet  switched 
capabilities of the DoCoMo network). 
iMode  only  recently  adopted  SSL  (in  March, 
2001).  Before  this,  iMode  provided  ‘only  air 
interface security’ [15]. This required that the PDC-
P network be secure and trusted. With the adoption 
of  SSL,  however,  iMode  now  provides  end-to-end 
security  “in  the  entire  mobile  network  (security 
within  a  carriers  network  and  security  between  a 
carrier’s network)” [15]. 
Certificate Management. iMode does have the 
ability  to  handle  server-side  authenticated  SSL 
sessions. iMode phones are pre-configured with root 
CA keys from PKI vendors Baltimore and VeriSign 
[15].    This  will  allow  for  the  establishment  of  a 
server-side  authenticated  SSL  session  between  the 
iMode device and the Enterprise. This SSL session 
is  established  between  the  iMode  device  and  the 
iMode  server.    For  most  e-commerce  applications, 
the iMode server will be hosted by the Enterprise  
iMode  does  not  yet  have  the  capability  of 
handling  client-side  certificates  and  as  such  there 
are  no  requirements  for  management  of  client-side 
certificates. This also implies that non-repudiation is 
not possible with current implementations of iMode. 
Technical  presentations  on  iMode  have  listed 
smart cards as a new, future direction. These smart 
cards will be similar to the WAP WIM smart cards, 
with all of their advantages. 
they 
Downloadable  Applications. 
iMode  allows 
users to download Java applications. iMode devices 
have  a    Java  Application  Manager  (JAM)  that 
controls  download  and  management  of  Java 
applications.  Java  applets  cannot  control  the  JAM, 
nor  can 
launch  new  applets  nor  access 
“traditional  handset  resources”  (such  as  user’s 
telephone book). Thus iMode has provided a version 
of the Java sandbox on the iMode device to contain 
these downloadable applications. 
5  Wired  and  Wireless  Security 
Services 
In this section we provide a brief discussion of 
security  services  such  as  user 
identification, 
authentication,  and  non-repudiation.  We  also 
discuss  the  so-called  “security  gap”  as  it  exists  in 
the WAP environment.  
5.1  User Identification and Authentication 
User  identification  and  authentication  can  take 
several forms in the wired world, the most common 
being  username  and  password.  Username  and 
password authentication can be accomplished using 
“Basic  Authentication”  in  HTTP  or  through  a 
“forms-based” authentication process (a user fills in 
their  username  and  password  in  an  HTML  form). 
Additional  forms  of  authentication  are  provided 
through the use of token (SecurID, for example), or 
digital certificates.  
Depending  on  the  class  of  WTLS  service,  the 
type  of  user 
identification  and  authentication 
possible with WAP differs. In all classes of WTLS, 
to  do  a  username/password 
it 
is  possible 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 07:04:51 UTC from IEEE Xplore.  Restrictions apply. 
identification and authentication using WML forms 
sent between the server and the mobile device.  
With  WTLS  Class  3  service,  it  is  possible  to 
have  client-side  identification  and  authentication 
based  on 
is 
hardcoded on to the WIM card and bound with the 
user’s name in their certificate.  
the  public/private  key  pair 
User  authentication  in  iMode  is  the  same 
Internet.  HTTP  Basic 
process 
Authentication is supported by iMode. It is not clear 