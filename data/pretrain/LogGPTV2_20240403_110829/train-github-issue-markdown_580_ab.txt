                                 'comment': '',
                                 'is_enabled': True,
                                 'schedule': ,
                                 'task': 'celery_tacks.load_price_site',
                                 'title': 'Цены с сайта floraimport'},
        'price.kamnirus': {   'args': ['kamnirus'],
                              'comment': 'Отключено по просьбе заказчика',
                              'is_enabled': False,
                              'schedule': ,
                              'task': 'celery_tacks.load_price_site',
                              'title': 'Цены с сайта kamnirus'},
        'price.novum': {   'args': ['novum'],
                           'comment': 'Цены Novum',
                           'is_enabled': False,
                           'schedule': ,
                           'task': 'celery_tacks.load_price_site',
                           'title': 'Цены с сайта novum'},
        'price.polimer-group.com': {   'args': ['polimer-group.com'],
                                       'comment': 'Цены Polimer Group',
                                       'is_enabled': True,
                                       'schedule': ,
                                       'task': 'celery_tacks.load_price_site',
                                       'title': 'Цены с сайта polimer-group.com'},
        'price.prorab': {   'args': ['prorab'],
                            'comment': '',
                            'is_enabled': False,
                            'schedule': ,
                            'task': 'celery_tacks.load_price_site',
                            'title': 'Цены с сайта prorab'},
        'price.unisaw': {   'args': ['unisaw'],
                            'comment': '',
                            'is_enabled': True,
                            'schedule': ,
                            'task': 'celery_tacks.load_price_site',
                            'title': 'Цены с сайта unisaw'},
        'price.Домотехника': {   'args': ['Домотехника'],
                                 'comment': 'Изменения в составе прайсов',
                                 'is_enabled': True,
                                 'schedule': ,
                                 'task': 'celery_tacks.load_price_site',
                                 'title': 'Цены с сайта Домотехника'},
        'prorab': {   'args': ['prorab'],
                      'comment': '',
                      'is_enabled': False,
                      'schedule': ,
                      'task': 'celery_tacks.load_link',
                      'title': 'Prorab'},
        'quadro-stroy': {   'args': ['quadro-stroy'],
                            'comment': '',
                            'is_enabled': True,
                            'schedule': ,
                            'task': 'celery_tacks.load_link',
                            'title': 'Квадро-Строй'},
        'rotate_mb': {   'is_enabled': True,
                         'is_system': True,
                         'schedule': ,
                         'task': 'celery_tacks.rotate_mb',
                         'title': 'Очистка устаревших файлов'},
        'sds-group': {   'args': ['sds-group'],
                         'comment': '',
                         'is_enabled': True,
                         'schedule': ,
                         'task': 'celery_tacks.load_link',
                         'title': 'СДС-Группа'},
        'sima-land': {   'args': ['sima-land'],
                         'comment': '',
                         'is_enabled': True,
                         'schedule': ,
                         'task': 'celery_tacks.load_site',
                         'title': 'Сима-ленд'},
        'sonex': {   'args': ['sonex'],
                     'comment': '',
                     'is_enabled': True,
                     'schedule': ,
                     'task': 'celery_tacks.load_link',
                     'title': 'Сонекс'},
        'stluce': {   'args': ['stluce'],
                      'comment': 'Остатки ST Luce Velante',
                      'is_enabled': True,
                      'schedule': ,
                      'task': 'celery_tacks.load_link',
                      'title': 'ST Luce'},
        'stluce-diff': {   'args': ['stluce-diff'],
                           'comment': 'рассылка с изменениями прайса ST Luce '
                                      'Velante',
                           'is_enabled': True,
                           'schedule': ,
                           'task': 'celery_tacks.load_link',
                           'title': 'ST Luce'},
        'store_outofstock': {   'is_enabled': True,
                                'is_system': True,
                                'schedule': ,
                                'task': 'celery_tacks.store_outofstock',
                                'title': 'Автозаливка "нет в наличии"'},
        'technolight': {   'args': ['technolight'],
                           'comment': 'Отключено по просьбе заказчика',
                           'is_enabled': False,
                           'schedule': ,
                           'task': 'celery_tacks.load_link',
                           'title': 'Тренд Света'},
        'triumph-nord-rus': {   'args': ['triumph-nord-rus'],
                                'comment': '',
                                'is_enabled': True,
                                'schedule': ,
                                'task': 'celery_tacks.load_link',
                                'title': 'Триумф Норд Рус'},
        'unisaw': {   'args': ['unisaw'],
                      'comment': '',
                      'is_enabled': True,
                      'schedule': ,
                      'task': 'celery_tacks.load_site',
                      'title': 'Unisaw'},
        'vodalux-fontan': {   'args': ['vodalux-fontan'],
                              'comment': '',
                              'is_enabled': True,
                              'schedule': ,
                              'task': 'celery_tacks.load_site',
                              'title': 'Водалюкс'},
        'vodalux-prud': {   'args': ['vodalux-prud'],
                            'comment': '',
                            'is_enabled': True,
                            'schedule': ,
                            'task': 'celery_tacks.load_site',
                            'title': 'Водалюкс'},
        'y-skazki': {   'args': ['y-skazki'],
                        'comment': 'Отключено по просьбе заказчика',
                        'is_enabled': False,
                        'schedule': ,
                        'task': 'celery_tacks.load_site',
                        'title': 'Bestway Юг'}}
# Steps to Reproduce
## Required Dependencies
  * **Minimal Python Version** : 3.7.4
  * **Minimal Celery Version** : 4.4.0
  * **Minimal Kombu Version** : 4.6.7
  * **Minimal Broker Version** : rabbitmq-server 3.6.15-1
  * **Minimal Result Backend Version** : mongodb 4.2.0
  * **Minimal OS and/or Kernel Version** : ubuntu 18.04
  * **Minimal Broker Client Version** : N/A or Unknown
  * **Minimal Result Backend Client Version** : N/A or Unknown
### Python Packages
**`pip freeze` Output:**
    amqp==2.5.2
    attrs==19.3.0
    Automat==0.8.0
    billiard==3.6.1.0
    Brotli==1.0.7
    cchardet==2.1.5
    celery==4.4.0
    certifi==2019.11.28
    cffi==1.13.2
    chardet==3.0.4
    Click==7.0
    clickhouse-cityhash==1.0.2.3
    clickhouse-driver==0.1.2
    constantly==15.1.0
    cryptography==2.8
    cssselect==1.1.0
    dnspython==1.16.0
    et-xmlfile==1.0.1
    fake-useragent==0.1.11
    fastnumbers==3.0.0
    hyperlink==19.0.0
    idna==2.8
    importlib-metadata==1.3.0
    incremental==17.5.0
    jdcal==1.4.1
    jmespath==0.9.4
    jsonlines==1.2.0
    kombu==4.6.7
    lxml==4.4.2
    lz4==3.0.2
    marshmallow==2.20.5
    more-itertools==8.0.2
    mysqlclient==1.4.6
    natsort==7.0.0
    openpyxl==3.0.3
    parsel==1.5.2
    pip-tools==4.3.0
    Protego==0.1.16
    pyasn1==0.4.8
    pyasn1-modules==0.2.8
    pycparser==2.19
    PyDispatcher==2.0.5
    PyHamcrest==1.10.1
    PyICU==2.4.2
    pymongo==3.10.1
    pyOpenSSL==19.1.0
    python-dateutil==2.8.1
    python-snappy==0.5.4
    pytz==2019.3
    pyxlsb==1.0.6
    PyYAML==5.3
    queuelib==1.5.0
    requests==2.22.0
    Scrapy==1.8.0
    sentry-sdk==0.14.0
    service-identity==18.1.0
    six==1.14.0
    Twisted==19.10.0
    txmongo==19.2.0
    tzlocal==2.0.0
    urllib3==1.25.7
    vine==1.3.0
    w3lib==1.21.0
    xlrd==1.2.0
    XlsxWriter==1.2.7
    zipp==0.6.0
    zope.interface==4.7.1
    zstandard==0.13.0
    zstd==1.4.4.0
### Other Dependencies
``` ```
## Minimally Reproducible Test Case
Code for initialization celery app:
    from functools import partial
    from bson import json_util
    json_options=json_util.JSONOptions(
      json_mode=json_util.JSONMode.RELAXED, tz_aware=True, tzinfo=utc)
    json_dump = partial(
      json_util.dumps, ensure_ascii=False, json_options=json_options)
    json_load = partial(json_util.loads, json_options=json_options)
    register(
      'mongo_json',
      encoder=(lambda obj: json_dump(obj).encode('utf-8')),
      decoder=json_load,
      content_type='application/x-mongo-json')
    app = Celery(
      'remains_tasks',
      broker='pyamqp://...',
      backend = 'mongodb://...',
      include=[
        # many modules
      ]
    )
    app.conf.update(
      accept_content=[
        'mongo_json', 'application/x-mongo-json', 'json', 'application/json'],
      task_serializer='mongo_json',
      result_serializer='mongo_json',
      task_default_queue='remains_tasks',
      worker_prefetch_multiplier=1,
      worker_max_tasks_per_child=45,
      worker_hijack_root_logger=False,
      mongodb_backend_settings=dict(database='remains', compressors='snappy'),
    )
Connection string look:
    mongodb+srv://username:PI:EMAIL/database?ssl=false
# Expected Behavior
No exception
# Actual Behavior
Exception after exit tack
    KeyError: 'collection'
      File "kombu/utils/objects.py", line 42, in __get__
        return obj.__dict__[self.__name__]
    KeyError: 'database'
      File "kombu/utils/objects.py", line 42, in __get__
        return obj.__dict__[self.__name__]
    OperationFailure: Authentication failed.
      File "billiard/pool.py", line 1791, in safe_apply_callback
        fun(*args, **kwargs)
      File "celery/worker/request.py", line 526, in on_failure
        self.task.backend.mark_as_failure(
      File "celery/backends/base.py", line 159, in mark_as_failure
        self.store_result(task_id, exc, state,
      File "celery/backends/base.py", line 406, in store_result
        self._store_result(task_id, result, state, traceback,
      File "celery/backends/mongodb.py", line 194, in _store_result
        self.collection.replace_one({'_id': task_id}, meta, upsert=True)
      File "kombu/utils/objects.py", line 44, in __get__
        value = obj.__dict__[self.__name__] = self.__get(obj)
      File "celery/backends/mongodb.py", line 291, in collection
        collection = self.database[self.taskmeta_collection]
      File "kombu/utils/objects.py", line 44, in __get__
        value = obj.__dict__[self.__name__] = self.__get(obj)
      File "celery/backends/mongodb.py", line 286, in database
        return self._get_database()
      File "celery/backends/mongodb.py", line 275, in _get_database
        if not db.authenticate(self.user, self.password, source=source):
      File "pymongo/database.py", line 1468, in authenticate
        self.client._cache_credentials(
      File "pymongo/mongo_client.py", line 754, in _cache_credentials
        with server.get_socket(all_credentials) as sock_info:
      File "contextlib.py", line 113, in __enter__
        return next(self.gen)
      File "pymongo/pool.py", line 1138, in get_socket
        sock_info.check_auth(all_credentials)
      File "pymongo/pool.py", line 712, in check_auth
        auth.authenticate(credentials, self)
      File "pymongo/auth.py", line 564, in authenticate
        auth_func(credentials, sock_info)
      File "pymongo/auth.py", line 539, in _authenticate_default
        return _authenticate_scram(credentials, sock_info, 'SCRAM-SHA-1')
      File "pymongo/auth.py", line 263, in _authenticate_scram
        res = sock_info.command(source, cmd)
      File "pymongo/pool.py", line 603, in command
        return command(self.sock, dbname, spec, slave_ok,
      File "pymongo/network.py", line 165, in command
        helpers._check_command_response(
      File "pymongo/helpers.py", line 159, in _check_command_response
        raise OperationFailure(msg % errmsg, code, response)