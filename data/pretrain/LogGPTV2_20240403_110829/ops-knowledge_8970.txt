User: 如何使用Docker Compose实现多容器应用的部署和管理？请给出实际示例和配置文件。
Assistant: Docker Compose是一个用于定义和运行多容器Docker应用程序的工具。它允许用户通过一个YAML文件来配置应用程序中的容器，从而简化了多容器应用程序的部署和管理。

以下是一个简单的Docker Compose示例，其中包含两个容器：一个部署Web应用程序的Nginx容器和一个运行应用程序的PHP容器。

Docker Compose配置文件（docker-compose.yml）：

```
version: '3'
services:
  web:
    image: nginx:latest
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - php
  php:
    image: php:7-fpm
    volumes:
      - ./app:/app
```

在这个示例中，我们定义了两个容器：一个名为“web”的Nginx容器和一个名为“php”的PHP容器。每个服务都有特定的配置选项。以下是各部分的说明：

- version定义使用的Docker Compose配置文件版本。
- services定义每个容器的配置选项。在这个例子中，我们定义了两个服务。
- web服务：
  - image定义使用的Nginx镜像版本。
  - ports定义容器与宿主机之间的端口映射。
  - volumes定义文件卷的映射，使容器能访问宿主机上的Nginx配置文件。
  - depends_on允许定义容器之间的依赖关系，确保PHP容器在Web容器之前启动。
- php服务：
  - image定义使用的PHP镜像版本。
  - volumes定义了应用程序代码的文件卷映射，使PHP容器能访问应用程序代码。

现在，使用以下命令来启动应用程序：

```
docker-compose up
```

这会启动Nginx和PHP容器，并将它们连接在一起。可以使用以下命令在后台启动容器：

```
docker-compose up -d
```

这样启动的容器会在后台运行。可以使用以下命令来停止容器：

```
docker-compose down
```

这会停止并删除所有容器和相关的网络。 

使用Docker Compose可以是多容器应用程序的部署和管理非常方便，可以根据不同的应用场景制定不同的配置文件。