成安装并进行了一些基本的测试之后，你对软件的功能感到非常满
意。你把自己以及其他至亲好友经过编辑的照片上传到自己的
Facebook首页和Flickr网站，并把它们与自己的朋发分享。儿个月之
后，你在一个博客中看到，你花了125美元所购买的软件版本包含了
一个安全漏洞，它允许你与共享这些文件的任何人看到这些照片在
编辑之前的原始版本，但这些原始材料却是你不想让别人看到的。
你会作出怎么样的响应呢？
现在我敢打赌，在场景1，你将会带着冰冷的巨无霸回到柜台，要求
换个火热的。并且我相信，十有八九你可以实现自己的愿望。如果
麦当劳在意服务质量和顾客的满意度，那么在每年售出的5.5亿个巨
无霸中，顾客手里拿到冰凉汉堡的概率是非常小的。我很疑惑会有
多少人在购买巨无霸时会明确提出拿给他们的汉堡必须是火热的。
这是个隐式需求，但这个需求却是经理们热切地想要实现的。在购
买汉堡时，没有必要为了保证自己所买的汉堡是热的而向柜台提出
自己想买的是“热的巨无霸”。
在场景2中，你和Amazon.com的销售代表会很快取得一致意见，认为
缺少16页是个严重的缺陷。我相信只要Amazon.com在乎优质顾客服
务的声誉，只须把事情和他们说清楚，你将会在一天左右收到一本
页数齐全的新书，并且不必另外支付快递费用。在这个场景中，你
显然并不需要在买书的时候说明所有的书页必须是齐全的。
Amazon.com的销售代表不会借口你在购买时没有指定书页必须齐全
而推搪。同样，在购书时隐式地包含了所有的书页都必须齐全这个
需求。由于书商没有办法通过提供不完整的书页来赢利，因此在这
个行业中，为每一本书提供完整的书页是必然的做法。
但是在场景3，你很可能无法获取同样满意的结果。尽管安全可能是
你在购买软件时的隐式需求之一，但它肯定不是显式需求。而且，
遗憾的是，在开发软件时很少会在需求中考虑安全的问题。大多数
商业软件没有付出多大努力确认安全漏洞并在开发过程中对它们进
行处理。
2410
---
## Page 2412
正如我在本章开始时所说的那样，满足显式需求和隐式需求之间的
落差是非常巨大的。商业软件的主要注意力集中在满足顾客的上市
时间需求的功能上，并且它们在这个方面确实做得很好。它们所提
供的新特性和新功能使它们的产品相比其他商业软件开发商的产品
更有优势，从而鼓励顾客购买它们的新软件或更新旧的软件包。
显然，在隐式需求中省略了对安全的考虑并不意味着顾客不在意安
全或者不明白它的重要性。但是出于两个原因，顾客并没有显式地
指定安全需求：
1）没有标准的方法评估软件的安全。
2）随着威胁全景的变化，软件的漏洞也在不断地演变。
对于顾客而言，确定一个巨无霸是否够热是件很简单的事情。但
是，确定一个软件产品是否存在安全漏洞却需要不同层次的技术能
力和表达能力。在开发软件时，并没有一种像使用温度计测量巨无
霸的温度这样的标准方法确定软件是否存在漏洞或者是否还存在更
安全的开发方法。
11.2公司为什么需要安全的软件
我曾经为儿家高度规范的金融服务公司工作，它们的核心业务操作
极度依赖软件的可靠性。其中一家公司（用虚构名称Acme表示）付
出了很大的努力，在数年的时间内投入了可观的资金，并要求CIO级
别的高度介入，以减少公司的安全风险。在本章的剩余部分，我将
详细描述这家公司是如何启动、运行和扩展这些工作的。
在Acme开始实施现在所描述的这个长期项目之前，它从来没有在软
件安全改善做过任何尝试。但是，它具有令人印象深刻的质量记
录，并投入了资金，在系统开发时采用了一种连贯的方法，并在卡
耐基梅隆·大学的能力成熟度模型集成（CMMI）过程中达到了第3
级的状态。为了解决安全问题，Acme考虑引入一些安全漏洞检测工
具，在一种“概念可靠"的模式下应用于被选中的项目。
当公司启动一个安全软件计划时，这是它们经常采用的一种方法。
但是，Acme的信息安全主管官员（这是真事）阅读了一本书（由
Addison-Wesley所出版的《Software Security：BuildingSecurity
2411
---
## Page 2413
In》），这本讲述软件安全的书是由知名作家GaryMcGraw所编写
的。Gary清楚地指出，软件质量并不仅仅是指确认并消除软件代码
中的缺陷的能力。事实上，超过50%的软件漏洞是由于体系结构的
缺陷所导致的，而不是由于代码本身所致。我还从以前的软件开发
经历中认识到，在软件生命周期的早期确认和解决软件缺陷的成本
效率要远远高于当代码投入生产后再修补缺陷。我相信强调在软件
生命周期的早期确认和修补缺陷是创建更安全软件的经济动力的最
佳方法，这可能也是CIO们最欣赏的方法。
在我以前的软件开发经历中，我认识到鼓励软件开发人员把安全漏
洞看成是软件缺陷是件很困滩的事。它不仅要求一个全面的教育计
划，而且对管理行为的改变要采用有组织的开发技巧。我决定把注
意力放在教导开发人员创建安全的代码，而不是在代码完成并发、
测试和实现之后把大量的金钱花在渗透测试服务上。
11.2.1如何制订安全计划
实现这个雄心勃勃的计划要求Acme的高管、开发人员以及最终提供
软件的外部公司在态度上发生一系列的转变。本节描述了启动这个
计划的步骤。
选择一个焦点，并通过管理获得成功
改革家没法一下完成对所有东西的修正。我不得不挑选软件中的一
个区域，并努力在这个区域实现可衡量的安全改进。幸运的是，由
于现代软件对漏洞的关注，这个任务变得非常简单，并且它与最高
风险暴露是一致的。
和早期Internet螨虫和美丽莎病毒所带来的麻烦不同，现代的软件漏
洞攻击涉及经济利益。和任何商业企业一样，现代的黑客始终在寻
求只要付出最少的努力就可以赢得最佳经济效益的方法。他们把目
光瞄准了基于Web的漏洞攻击。一方面，Web应用程序以及它们所运
行的软件平台存在许多缺陷，入侵者可以利用这些缺陷进入Web服
务器，并最终入侵终端用户的计算机。结果，数百方的未经训练的
计算机用户对Wweb应用程序的广泛使用为那些把目光瞄准数据盗窃
的入侵者提供了丰厚的回报。
毫不奇怪的是，安全威胁数据中的最新趋势清楚地显示了黑客的攻
击从网络外围设备（路由器、交换机、防火墙等）到Web应用层的
2412
---
## Page 2414
转移。Web应用程序之所以成为目标，是因为这个领域的数据偷窃
能够实现最大的经济回报。
关于黑客对Web应用程序的最常见攻击技巧的详细信息，可以访问
攻击，其中排名第一的是跨站脚本（cross-site scripting）：
当应用程序接收用户所提供的数据并在未进行验证或者未对内容进
行编码的情况下就把它发送给一个web浏览器时，很可能导致跨站
脚本攻击。跨站脚本允许攻击者在受害者的浏览器中执行脚本，劫
持用户的会话、破坏网站，并且很可能把端虫带到网站中。在
Acme，我调整了初始的安全焦点。我向主席和CoO提供了来自
OWASP的Top10列表和GartnerGroup的行业趋势数据（75%的黑客攻
击发生在应用层），它们清楚地显示了wb应用程序的漏洞攻击风
险。McAfee最近发布了调查结果，显示大约三分之二的美国青少年
的母亲对她们的孩子的在线安全的关注并不亚于对酒后驾驶和服用
毒品的关注。显示Web漏洞在安全漏洞攻击中所占的重大比例对于
说服金融服务执行官投资安全项目相当有力。大多数机构对Web应
用程序的依赖性也在不断增加，以便更好地为顾客服务，提供更高
的效率。行业监管机构对于解决应用程序的安全也起到了推动作
用。Acme的主席清楚地理解检测软件漏洞的价值，并明白软件开发
生命周期的早期检测漏洞是非常容易的，它的修补成本要比后期再
检测出漏洞要少得多。
设置格式化的安全质量过程
假设我们开始把安全集成到Acme的开发周期中，首先的工作涉及各
种形式的格式化和标准化，它们提供了未来工作所需要的度量指标
和教育材料。
我们创建了一个来自CLASP（全面轻量级应用程序安全流程）的关
键考核标准列表，它是由JohnViega开发并被OWASP采纳的一种用于
开发安全软件的方法学。我们把它集成到我们的软件开发生命周期
（SDLC）中，并通过适当的控制来实行它。例如，每个项目开始时
所要求的一个考核标准是确认应用程序的信任边界的文档：它所操
纵的是什么数据？谁可以合法地访问这些数据？这个文档根据应用
程序所处理的数据分类，帮助定义了应用程序的安全需求。
格式化的另一项内容是把每个新的软件架构提交给安全机构进行严
密的审核，这个软件架构必须在得到批准之后才能进入下一阶段的
2413
---
## Page 2415
开发。采用了标准安全架构的项目只需少量必需的审核就可以进入
到下一阶段。
程序员也必须得到支持，以满足安全标准的要求。为此，Acme选择
了一种静态代码分析工具，并要求所有的Java和C++代码用这个工具
按照特定的质量门槛进行分析，然后才把代码移交质量保证队伍，
我们选择这个工具的一个关键标准是它所提供的高质量上下文帮
助，它允许缺乏相关培训的开发人员能够轻松地确认和理解安全漏
洞。
开发人员培训
在说服公司领导实施这个安全计划后，我面临第二个重要的挑战：
鼓励软件开发人员在开发过程中接受并使用这个静态分析工具。为
了更有效地达到这个目的，我选择了能力最强、最受尊重的开发人
员，说服他们的队伍领导人允许他们接受一个特定的教育课程，并
向他们灌输与安全有关的内容。完成课程并通过考试的开发人员便
被确认成为一个新建立的由顶级开发人员所组成的社区的成员，并
接受明确的责任，向他们的同事灌输与安全有关的信息。
第一批课程包括了18位由各自队伍领导人所提名的顶级开发人员。
教育的内容根据一种称为CLASP的现有软件开发方法学，按照Acme
的环境进行了自定义的设计。Acme通过在教室讲课的形式实施这种
教育，然后转移到现场以加深理解。整个教育计划由外面的专业软
件安全顾问公司负责。有些公司（例如Cigital和AspectSecurity）专
门就是协助企业实现软件安全计划。
当安全过程真正扎根时
在安全课程的第三天，发生了一件有趣的事情。一位最有影响力之
一的、所开发的一个Web应用程序架构被多个已经投入生产的Acme
Web应用程序所使用的Web开发人员突然从椅子上跳起来，急匆匆地
夺门而出，一边含糊不清地表达了需要对自己的架构做一些测试的
急道需要。教师、协调员和我相信，有一位最好的开发人员已经离
开了教室，开始实施控制损害的计划。
第二天，这位开发人员回到教室，安静地坐了下来。教师道不及待
地向他追问一切事情是否已经搞定。这位开发人员站了起来，向教
开发的web应用程序架构存在一个重大的安全漏洞，可能被外部黑
2414
---
## Page 2416
客通过跨站脚本轻松地入侵。我用静态代码分析器对代码进行了检
查，我最大的担心得到了证实，所以我昨晚忙了一宿，修正了代
码。我用静态代码分析器挽救了代码，在代码提交测试之前消除了
关键的漏洞。测试将在今晚进行，我现在可以松一口气了。”从这个
时候开始，Acme的开发人员很少拒绝对这个静态代码分析工具的使
用。说服开发人员的努力取得了成功。
11.2.2修正问题
我需要解决的下一问题是与队伍领导人关于处理在静态漏洞分析中
所找到的缺陷的重要性的争论。有些项目没有达到可以接受的门
槛，被退回到开发队伍。队伍领导人因此面临花费更多时间和金钱
修正安全缺陷的需要，这可能会推延项目的发布计划，并会让项目
超出预算。
我预感到了这些额外的开销，并试图缓解队伍领导人对这个问题的
顾虑。之前我已经与Acme的CIO有过协商，在年度的培训、工具集
成和修补需求中增加了10-15%的生产率指数。随后，CI0和我与商
业利益相关方进行了会面，获得了他们为了安全而增加时间和预算
的许诺。