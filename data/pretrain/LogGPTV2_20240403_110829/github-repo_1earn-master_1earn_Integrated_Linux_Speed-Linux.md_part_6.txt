进入 /etc/yum.repos.d 目录,将其中三个改名或者剩下所有都移走留下 CentOS-Base.repo
```bash
cd /etc/yum.repos.d
rm  CentOS-Media.repo
rm  CentOS-Vault.repo
```
编辑 CentOS-Base.repo
```vim
vim CentOS-Base.repo
baseurl=file:///mnt/cdrom/	# 这里为本地源路径
gpgcheck=0
enabled=1					# 开启本地源
```
```bash
yum list    #  看一下包
```
##### 配置 yum 源
**8**
```bash
wget -O /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-8.repo
```
**7**
```bash
wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo
```
**6**
```bash
wget -O /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-6.repo
```
**刷新 YUM 的缓存状态**
```bash
yum clean all
yum makecache
```
##### 配置 EPEL 源
**RHEL 8**
```bash
yum install -y https://mirrors.aliyun.com/epel/epel-release-latest-8.noarch.rpm
sed -i 's|^#baseurl=https://download.fedoraproject.org/pub|baseurl=https://mirrors.aliyun.com|' /etc/yum.repos.d/epel*
sed -i 's|^metalink|#metalink|' /etc/yum.repos.d/epel*
```
**RHEL 7**
```bash
curl -o /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo
```
huaweicloud epel
```bash
yum install https://mirrors.huaweicloud.com/epel/epel-release-latest-7.noarch.rpm
rpm --import https://mirrors.huaweicloud.com/epel/RPM-GPG-KEY-EPEL-7
```
**RHEL 6**
```bash
wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-6.repo
```
#### opkg
> opkg 工具 (一个 ipkg 变种) 是一个用来从本地软件仓库或互联网软件仓库上下载并安装 OpenWrt 软件包的轻量型软件包管理器。
**基础使用**
```bash
opkg update			# 更新可用软件包列表
opkg install xxxx	# 安装一个或多个软件包
opkg remove xxxx	# 移除一个或多个软件包
```
#### 常用软件
**bash-insulter**
> 一个在你打错命令时候嘴臭你的工具
```bash
git clone https://github.com/No-Github/bash-insulter.git bash-insulter
cp bash-insulter/src/bash.command-not-found /etc/
chmod 777 /etc/bash.command-not-found
source /etc/bash.command-not-found
```
```bash
vim /etc/bashrc 或 vim /etc/bash.bashrc
. /etc/bash.command-not-found
echo "$(tput cuf 10) $(tput setab 1)FBI WARNING$(tput sgr 0)"
echo ""
echo "Federal Law provides severe civil and criminal penalties for
the unauthorized reproduction, distribution, or exhibition of
copyrighted motion pictures (Title 17, United States Code,
Sections 501 and 508). The Federal Bureau of Investigation
investigates allegations of criminal copyright infringement"
echo "$(tput cuf 5) (Title 17, United States Code, Section 506)."
```
**Fish**
> 一个挺好用的 shell 环境
```bash
echo /usr/bin/fish | sudo tee -a /etc/shells	# 加默认
usermod -s /usr/bin/fish 
```
**zsh**
> 一个挺好用的 shell 环境
```bash
apt install -y zsh		# 安装 zsh
chsh -s /bin/zsh		# 切换默认的 shell 为 zsh
sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"	# 安装 oh-my-zsh
git clone git://github.com/zsh-users/zsh-autosuggestions $ZSH_CUSTOM/plugins/zsh-autosuggestions	# 下载命令补全插件
# zshrc 配置文件中修改如下内容
vim ~/.zshrc
plugins=(git zsh-autosuggestions)
zsh						# 重新加载 zsh 配置
# 更多主题见此 https://github.com/robbyrussell/oh-my-zsh/wiki/themes
```
**Powerline-shell**
> 用于美化 shell 环境
```bash
pip install powerline-shell
```
```vim
vim ~/.config/fish/config.fish
function fish_prompt
	powerline-shell --shell bare $status
end
```
更多关于 linux 工具的内容参考笔记 [工具](./笔记/工具.md)
---
## 系统管理
### 系统信息
- 内容参见 [信息](./笔记/信息.md)
#### 日志
- 内容参见 [日志](./笔记/日志.md)
---
### 系统设置
#### 时间
- date
	```bash
	# date 命令用于查看当前时间
	date							# 不带任何参数的 date 仅用于查看时间
	date -R							# 查看当前时区
	data -s "2019-03-31 13:12:29"	# 修改系统时间
	date +%s						# 获取现在的 Unix 时间戳
	# e.g. : 例如，将系统日期设置为2009年1月31日，晚上10：19，53秒
	date 013122192009.53
	date +%Y%m%d -s "20090131"
	# e.g. : 各种格式显示当前日期和时间的方法
	date '+Current Date: %m/%d/%y%nCurrent Time:%H:%M:%S'
	date +"%d-%m-%Y"
	date +"%A,%B %d %Y"
	date --date="1 year ago"
	date --date="yesterday"
	date --date="10 months 2 day ago"
	date -d "last friday"
	date --date='3 seconds'
	date --date='4 hours'
	```
- ntpdate
	```bash
	# ntpdate 命令可以用于设置本地日期和时间
	ntpdate 0.rhel.pool.ntp.org		# 网络同步时间
	```
- hwclock
	```bash
	# hwclock 设置硬件日期和时间
	hwclock					# 使用不带任何参数的 hwclock 查看当前硬件日期和时间
	hwclock -w 				# 将系统时钟同步到硬件时钟,将当前时间和日期写入 BIOS,避免重启后失效
	hwclock -s 				# 将硬件时钟同步到系统时钟
	```
- cal
	```bash
	# cal 用于查看日历
	cal
	```
**ntp 服务**
- 安装
	```bash
	yum install ntp			# 安装 ntp 服务
	chkconfig ntpd on		# 开启 ntpd 服务
	cat /etc/ntp.conf		# 查看 ntp 服务配置
	ntpq -p     			# 查看本机和上层服务器的时间同步结果
	ntptrace     			# 可以用来追踪某台时间服务器的时间对应关系
	ntpdate IP   			# 客户端要和 NTP server 进行时钟同步。
	/var/log/ntp/ntp.log	# 查看 ntp 日志
	```
	ntp.conf 的具体配置参考 http://www.ntp.org/ntpfaq/NTP-s-config.htm#S-CONFIG-BASIC
	也可以查看 [文件](./笔记/文件.md#etc)
**Tips**
- ntpd 与 ntpdate 的区别
	- ntpd 在实际同步时间时是一点点的校准过来时间的,最终把时间慢慢的校正对.而 ntpdate 不会考虑其他程序是否会阵痛,直接调整时间.
	- 一个是校准时间,一个是调整时间.
	- https://blog.csdn.net/tuolaji8/article/details/79971591
#### 时区
**查看时区**
```bash
timedatectl
```
**修改时区**
```bash
timedatectl set-timezone Asia/Shanghai		# 将时区设置为 Asia/Shanghai
或
cp  /usr/share/zoneinfo/Asia/Shanghai  /etc/localtime
```
#### 语言
**查看系统语言**
```bash
echo  $LANG 				# 查看当前操作系统的语言
```
**修改系统语言**
```bash
vim /etc/locale.conf
set LANG en_US.UTF-8		# 更改默认语言
	 zh_CN.UTF-8
```
```bash
source   /etc/locale.conf
```
**换界面显示语言**
```bash
dpkg-reconfigure locales
# 空格是选择,Tab是切换,*是选中
# 选中 en_US.UTF-8 和 zh_CN.UTF-8,确定后,将 en_US.UTF-8 选为默认,然后安装中文字体
```
**如果界面出现乱码,安装中文字体**
```bash
apt install -y xfonts-intl-chinese
apt install -y ttf-wqy-microhei
reboot
```
#### 启动项-计划任务
**查看**
```bash
chkconfig                   # 查看开机启动服务命令
ls /etc/init.d              # 查看开机启动配置文件命令
cat /etc/rc.local           # 查看 rc 启动文件
ls /etc/rc.d/rc[0~6].d
runlevel                    # 查看运行级别命令
service crond status		# 查看 cron 服务状态
```
**计划任务**
```bash
ls -alh /var/spool/cron     # 默认编写的 crontab 文件会保存在 /var/spool/cron/用户名 下
ls -al /etc/ | grep cron
ls -al /etc/cron*
cat /etc/cron*
cat /etc/at.allow
cat /etc/at.deny
cat /etc/cron.allow
cat /etc/cron.deny
cat /etc/crontab
cat /etc/anacrontab
cat /var/spool/cron/crontabs/root
```
**crontab 命令**
```bash
crontab -l   				# 列出某个用户 cron 服务的详细内容
crontab -r   				# 删除每个用户 cront 任务(谨慎：删除所有的计划任务)
crontab -e   				# 使用编辑器编辑当前的 crontab 文件
# 前5个星号分别代表:分钟,小时,几号,月份,星期几
* * * * * command			# 每1分钟执行一次 command
3,15 * * * * command		# 每小时的第3和第15分钟执行
@reboot	command				# 开机启动
# 例子
0 */2 * * * /sbin/service httpd restart	# 意思是每两个小时重启一次 apache
50 7 * * * /sbin/service sshd start		# 意思是每天7:50开启 ssh 服务
50 22 * * * /sbin/service sshd stop		# 意思是每天22:50关闭 ssh 服务
0 0 1,15 * * fsck /home					# 每月1号和15号检查 /home 磁盘
1 * * * * /home/bruce/backup			# 每小时的第一分执行 /home/bruce/backup 这个文件
00 03 * * 1-5 find /home "*.xxx" -mtime +4 -exec rm {} \;	# 每周一至周五3点钟,在目录 /home 中,查找文件名为 *.xxx 的文件,并删除4天前的文件.
30 6 */10 * * ls						# 意思是每月 1、11、21、31 日的 6:30 执行一次 ls 命令
# 周与日月不可同时并存,可以分别以周或者是日月为单位作为循环，但你不可使用“几月几号且为星期几”的模式工作
30 12 11 9 5 echo "just test" # 这是错误的写法
```
可以使用在线的 CRON 表达式工具辅助 : https://tool.lu/crontab/
crontab 命令相当于就是修改 `/var/spool/cron/crontabs/usename` 的文件
**/etc/crontab 文件**
`/etc/crontab` 默认是控制 `/etc/cron.*`, 如 `/etc/cron.daily`, `/etc/cron.weekly`, `/etc/cron.monthly` 这些
格式如下:
```
# Example of job definition:
# .---------------- minute (0 - 59)
# |  .------------- hour (0 - 23)
# |  |  .---------- day of month (1 - 31)
# |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...
# |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat
# |  |  |  |  |
# *  *  *  *  * user-name command to be executed
```
**/etc/crontab 文件和 crontab -e 的区别**
* 使用范围
	修改 `/etc/crontab` 这种方法只有 root 用户能用，这种方法更加方便与直接直接给其他用户设置计划任务，而且还可以指定执行 shell 等等，
	crontab -e 这种所有用户都可以使用，普通用户也只能为自己设置计划任务。然后自动写入 `/var/spool/cron/usename`
* 服务重启
	```bash
	/etc/init.d/crond restart
	service crond restart
	```
* 语法格式
	crontab -e 与 `/etc/crontab` 修改语法格式不一样，后者多一个 user 指定
**/etc/cron.d/**
`/etc/cron.d/` 目录下也是存放 crontab 的配置文件.
`/etc/crontab` 和 `/etc/cron.d/` 在配置定时任务时，需要指定用户是 root，而 `/var/spool/cron/crontabs/` 已经是属于用户控制的, 所以不需要指定用户, 这是格式上的区别.
cron 设置的默认环境变量:
```
$SHELL: /bin/sh
$PATH: /usr/bin:/bin
```