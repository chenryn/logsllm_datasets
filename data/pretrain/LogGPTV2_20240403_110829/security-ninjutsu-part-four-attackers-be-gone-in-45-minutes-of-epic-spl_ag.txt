| table _time mid icid dcid recipient sender…| collect index=our_email
	Ironport logs are not the only good transaction example, but they’re certainly the classical example 	of something really hard to do without transactionNow we can use transaction
Now you can send the completed results into your summary indexes. Note that you have to make sure you’re not skipping this search. 
Technique: Transaction
Speeding up a slow-ish Transaction
▶ Transaction has many options that are often ignored, to the peril of the operator.
▶ Go check out the docs page for Transaction.. I’ll wait:http://docs.splunk.com/Documentation/Splunk/latest/SearchReference/transaction
▶ See all those maxspan, maxpause, max etc? Those are to control the amount of memory used by transaction. Splunk controls how much data can exist 
simultaneously in memory, and when it hits that limit it writes out things to disk.
▶ More memory in use, less speed in search.▶ If you have a larger search with transaction (e.g., your email logs), never run it 	without maxpause, maxspan controls. 
Technique: Transaction
Working Example
▶ In Splunk Security Essentials we have any example using a small volume of logs
1. 
2. 
3. Download the app off Splunkbase 
Open up Concentration of Hacker Tools by Filename Click "Show SPL" to see the SPL
▶ This search pulls in only process▶ This search pulls in only process 
launches for suspicious attacker 
tools, and limits to just 5 minutes
▶ If this search is excessively slow, 
you either have a very odd network 
or are terrifyingly compromised
| ICID | MID | DCID | RID | Technique: Transaction 
Cisco ESA Logs (AKA Ironport Logs) - the log files themselves | Technique: Transaction 
Cisco ESA Logs (AKA Ironport Logs) - the log files themselves ||---|---|---|---|---|---|
| ICID |MID |DCID |RID |Wed Feb 12 19:48:37 2014 Info: New SMTP ICID 1000000201 interface Data2 (192.0.2.44) address 203.0.113.83 reverse dns host unknown verified no Wed Feb 12 19:48:37 2014 Info: ICID 1000000201 ACCEPT SG UNKNOWNLIST match sbrs[0.0:10.0] SBRS 5.1 |▶ ICID - Incoming Connection ID, 	can contain many MIDs ||  | | | |Wed Feb 12 19:48:37 2014 Info: ICID 1000000201 TLS success protocol TLSv1 cipher AES128-SHA Wed Feb 12 19:48:37 2014 Info: Start MID 500000014 ICID 1000000201  Wed Feb 12 19:48:37 2014 Info: MID 500000014 ICID 1000000201 From:  Wed Feb 12 19:48:37 2014 Info: MID 500000014 ICID 1000000201 RID 0 To:  Wed Feb 12 19:48:37 2014 Info: MID 500000014 ICID 1000000201 RID 1 To:  |▶ ICID - Incoming Connection ID, 	can contain many MIDs ||  | | | |Wed Feb 12 19:48:38 2014 Info: MID 500000014 Message-ID ''  Wed Feb 12 19:48:38 2014 Info: MID 500000014 Subject 'FW: Some Subject Matter'  Wed Feb 12 19:48:38 2014 Info: MID 500000014 ready 52076 bytes from  Wed Feb 12 19:48:38 2014 Info: LDAP: Masquerade query Rewrites-Inbound MID 500000014 address PI:EMAIL to PI:EMAIL Wed Feb 12 19:48:38 2014 Info: LDAP: Masquerade query Rewrites-Inbound MID 500000014 address PI:EMAIL to PI:EMAIL Wed Feb 12 19:48:38 2014 Info: LDAP: Masquerade query Rewrites-Inbound MID 500000014 address PI:EMAIL to PI:EMAIL Wed Feb 12 19:48:38 2014 Info: MID 500000014 rewritten to MID 500000031 by LDAP rewrite  Wed Feb 12 19:48:38 2014 Info: MID 500000031 ICID 0 From:  |▶ MID - Message ID ▶ DCID - Destination Connect ID,  ||  | | | |Wed Feb 12 19:48:38 2014 Info: LDAP: Reroute query AD.routing MID 500000014 RID 0 address PI:EMAIL to [('PI:EMAIL', '')] Wed Feb 12 19:48:38 2014 Info: MID 500000031 ICID 0 RID 0 To:  Wed Feb 12 19:48:38 2014 Info: LDAP: Reroute query AD.routing MID 500000014 RID 1 address PI:EMAIL to [('PI:EMAIL', '')] Wed Feb 12 19:48:38 2014 Info: MID 500000031 ICID 0 RID 1 To:  |can contain many MIDs ||  | | | |Wed Feb 12 19:48:38 2014 Info: Message finished MID 500000014 done  Wed Feb 12 19:48:38 2014 Info: MID 500000031 attachment 'image001.jpg'  Wed Feb 12 19:48:38 2014 Info: MID 500000031 attachment 'image002.jpg'  Wed Feb 12 19:48:38 2014 Info: MID 500000031 Custom Log Entry: Attachment Names: image001.jpg, image002.jpg Wed Feb 12 19:48:38 2014 Info: MID 500000031 Custom Log Entry: Attachment Sizes: 1736, 1525  Wed Feb 12 19:48:38 2014 Info: MID 500000031 Custom Log Entry: Attachment Types: image/jpeg, image/jpeg |▶ RID - Recipient ID (many  	Recipients per MID, though MID  ||  | | | |Wed Feb 12 19:48:38 2014 Info: ICID 1000000201 close | |
|  | | | |Wed Feb 12 19:48:38 2014 Info: New SMTP DCID 70000094 interface 192.0.2.44 address 192.0.2.89 port 25 Wed Feb 12 19:48:38 2014 Info: DCID 70000094 STARTTLS command not supported | |
Wed Feb 12 19:48:38 2014 Info: Delivery start DCID 70000094 MID 500000027 to RID [0] 
Wed Feb 12 19:48:38 2014 Info: Message done DCID 70000094 MID 500000027 to RID [0]Wed Feb 12 19:48:38 2014 Info: MID 500000031 matched all recipients for per-recipient policy DEFAULT in the inbound table 
Wed Feb 12 19:48:39 2014 Info: Delivery start DCID 70000094 MID 500000026 to RID [0] 
Wed Feb 12 19:48:39 2014 Info: Message done DCID 70000094 MID 500000026 to RID [0] 
Wed Feb 12 19:48:39 2014 Info: Delivery start DCID 70000094 MID 500000033 to RID [0]Wed Feb 12 19:48:39 2014 Info: Message done DCID 70000094 MID 500000033 to RID [0] 
Wed Feb 12 19:48:40 2014 Info: MID 500000031 interim verdict using engine: CASE spam negative 
Wed Feb 12 19:48:40 2014 Info: MID 500000031 using engine: CASE spam negative 
Wed Feb 12 19:48:40 2014 Info: Delivery start DCID 70000094 MID 500000049 to RID [0] 
Wed Feb 12 19:48:40 2014 Info: MID 500000031 interim AV verdict using Sophos CLEANWed Feb 12 19:48:40 2014 Info: MID 500000031 antivirus negative 
Wed Feb 12 19:48:40 2014 Info: MID 500000031 Outbreak Filters: verdict negative 
Wed Feb 12 19:48:40 2014 Info: MID 500000031 queued for delivery 
Wed Feb 12 19:48:40 2014 Info: Message done DCID 70000094 MID 500000049 to RID [0] 
Wed Feb 12 19:48:40 2014 Info: Delivery start DCID 70000094 MID 500000031 to RID [0, 1]Wed Feb 12 19:48:40 2014 Info: Message done DCID 70000094 MID 500000031 to RID [0, 1] 
Wed Feb 12 19:48:40 2014 Info: MID 500000031 RID [0, 1] Response '2.6.0  Queued mail for delivery' 
Wed Feb 12 19:48:40 2014 Info: Message finished MID 500000031 done 
Wed Feb 12 19:48:40 2014 Info: DCID 70000094 close
Technique: Transaction 
Cisco ESA Logs (AKA Ironport Logs) - transaction▶ With transaction, we need to jump through a one small hoop to get the relevant 
details from the ICID in every MID. This is because the ICID contains a few 
general parameters (SSL version, src_ip, etc.) that we want noted for every MID
sourcetype=ironport OR sourcetype=cisco:esa
| eventstats values(TLS) as TLS values(src_ip) as src_ip values(…) as … by ICID
| transaction MID 
maxpause=5m| transaction MID 
maxpause=5m 
maxspan=1h
| fields - _raw | fields sender recipient src_ip TLS
Test Environment, over 3 hours of data 	(23k messages): 119 seconds
There is at least one message with ICID and MID in it, so if we use eventstats to distribute the important values to everything with an ICID, we will be able to just use transaction on MID and have what we want.
Now we can use transactionNow we can use transaction
Now you can send the completed results into your summary indexes. Note that you have to make sure you’re not skipping this search. 
Technique: Transaction 
Cisco ESA Logs (AKA Ironport Logs) - eventstats, stats
▶ Without transaction, you just leverage stats to group things together. You will 
often need to do streamstats or some other cleverness (defining day withstrptime) to get around re-use of IDs, though Cisco ESA is simpler.
sourcetype=ironport OR sourcetype=cisco:esa | eventstats values(TLS) as TLS values(src_ip) as src_ip values(…) as … by ICID 
| stats values(icid) AS icid
There is at least one message with ICID and MID in it, so if we use eventstats to distribute the important values to everything with an ICID, we will be able to just use transaction on MID and have what we want.Here we can use stats instead of transaction for a 3x 
values(src*) AS src* 	speed boost!
by mid
| eval recipient_count=mvcount(recipient)
|  |  |  | Test Environment, over 3 hours of data (23k messages): 40 seconds - 3x faster | Test Environment, over 3 hours of data (23k messages): 40 seconds - 3x faster |  |  |  |
|---|---|---|---|---|---|---|---|
|   | | | | | | | |
|   | | | | | | | ||   | | | | | | | |
Technique: Transaction 
Fuller Example of Grabbing Complete Ironport Logs
▶ This is a more complete example that can be run every 5 min
sourcetype=cisco:esa* earliest=-20m 
| eventstats values(sending_server) as sending_server values(sending_server_dns_status) as sending_server_dns_status values(sending_server_dkim) as sending_server_dkim 
values(sending_server_tls_status) as sending_server_tls_statusFor our base dataset we can pull in all the data from 	the last 20 minutes
Eventstats to pull fields out of the icid, and connect 
values(sending_server_tls_cipher) as sending_server_tls_cipher values(sending_server_whitelist) as sending_server_whitelist by icid them with the MID
| stats min(_time) as _time max(_time) as email_processing_complete_time 
count(eval(searchmatch("Message Finished MID"))) as complete_countcount(eval(searchmatch("Start MID"))) as start_count values(d) as d values(message_id) as 
message_id values(message_subject) as message_subject values(mid) as mid 
values(recipient) as recipient values(sender) as sender values(spam_status) as spam_status
values(encoding) as encoding values(subject) as subject values(attachment) as attachment values(queue) as queue values(message_scan_error) as message_scan_errorvalues(message_size) as message_size values(sending_server) as sending_server values(sending_server_dns_status) as sending_server_dns_status
Now we can pull all the fields we care about
values(sending_server_dkim) as sending_server_dkim values(sending_server_tls_status) as 
sending_server_tls_status values(sending_server_tls_cipher) as sending_server_tls_cipher values(sending_server_whitelist) as sending_server_whitelist values(icid) as icid values(dcid) as dcid by mid| where complete_count > 1 AND start_count > 1 AND 
email_processing_complete_time >= relative_time(now(), "-7m@m") AND email_processing_complete_time = relative_time(now(), 
"-1d@d"), 1, 0)
Start with our Windows logs (maybe filter for just logon activity - I grabbed a list of Windows Logon 
Event IDs for Splunk Security Essentials)
We can now just use stats earliest and latest to find the most recent logon time - technically we don’tneed the latest, but it’s pretty cheap and useful
Finally we check to see if the earliest time (first 
logon) is in the last day.
   That easy!
Technique: First Time Seen Detection First Time Seen with Peer Group!
▶ Peer group detection complicates the query - see multireport under Advanced 	Commands, later in this doc. 
sourcetype=win*security | lookup peer_group user OUTPUT peergroup | makemv peergroup delim=","| multireport
	[| stats values(*) as * by user dest] 
	[| stats values(eval(if(earliest>=relative_time(maxlatest,"-1d@d"),dest,null))) as peertoday values(eval(if(earliest=relative_time(maxlatest,"-
1d@d") AND isnull(peerpast),1,0)1d@d") AND isnull(peerpast),1,0)
up with users in the peer group who have never 	logged into that host - let’s filter them out
Finally, we look for the user’s earliest and latest, 
where the peergroup past is empty
Get the latest and greatest for this 
   detection with Splunk Security Essentials
Technique: First Time Seen Detection First Time Seen with a Lookup Cache!▶ By using a lookup cache, we don’t have to look over 30,60,100 days of data 	every time you run the search.
sourcetype=win*security 
| stats earliest(_time) as earliest latest(_time) as latest  by user, dest | inputlookup append=t lookup_cache.csv 
| stats min(earliest) as earliest max(latest) as latest by  user, dest | outputlookup lookup_cache.csv 
| eval isOutlier=if(earliest >= relative_time(now(), "-1d@d"), 1, 0)I’m not even going to explain this here! Go to the 
"Technique: Lookup Caching" later in the doc
While we’re at it, you should go check "Technique: 	Confidence Checking" later in the doc
If you like this, you’ll love "Technique: Time Series 	Detection" up next!
Get the latest and greatest for this 
   detection with Splunk Security Essentials
	Technique: First Time Seen DetectionTechnique: First Time Seen Detection 
First Time Seen with a Lookup Cache AND Peer Group! You’re a mad man! 
▶ Just for fun, because I’m just copy-pasting from Splunk Security Essentials at this point - First Logon to New Server with both a Peer Group AND a Lookup Cache!