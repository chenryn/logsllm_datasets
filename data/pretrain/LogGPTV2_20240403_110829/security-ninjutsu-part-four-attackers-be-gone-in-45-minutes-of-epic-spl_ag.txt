# Optimized Text

## Introduction
Ironport logs are not the only good example of transactions, but they are a classic example of something that is challenging to handle without using transactions. In this document, we will explore how to use the `transaction` command effectively and provide examples for working with Ironport (Cisco ESA) logs.

## Technique: Transaction
### Speeding up a Slow Transaction
- **Transaction Options**: The `transaction` command has many options that, if ignored, can lead to suboptimal performance.
- **Documentation**: For detailed information, refer to the Splunk documentation on `transaction`: [Splunk Documentation](http://docs.splunk.com/Documentation/Splunk/latest/SearchReference/transaction)
- **Memory Management**: Parameters like `maxspan`, `maxpause`, and `max` control the amount of memory used by the transaction. Splunk limits the amount of data that can be in memory simultaneously, and when this limit is reached, it writes data to disk.
- **Performance Tips**:
  - More memory usage results in slower search performance.
  - For large searches, such as email logs, always use `maxpause` and `maxspan` controls.

### Working Example
- **Splunk Security Essentials**: This app includes an example using a small volume of logs.
  1. Download the app from Splunkbase.
  20. Open "Concentration of Hacker Tools by Filename" and click "Show SPL" to see the search query.
- **Search Query**: This query pulls in process launches for suspicious attacker tools, limited to a 5-minute window.
  - If the search is excessively slow, it may indicate a very odd network or a significant security compromise.

## Cisco ESA Logs (AKA Ironport Logs)
### Log File Structure
- **ICID (Incoming Connection ID)**: Can contain multiple MIDs.
- **MID (Message ID)**: Unique identifier for each message.
- **DCID (Destination Connection ID)**: Identifier for the destination connection.
- **RID (Recipient ID)**: Identifier for each recipient.

### Example Log Entries
```plaintext
| ICID | MID | DCID | RID | Timestamp | Event Description |
|---|---|---|---|---|---|
| 1000000201 | 500000014 | 70000094 | 0, 1 | Wed Feb 12 19:48:37 2014 | New SMTP ICID 1000000201, ACCEPT SG UNKNOWNLIST match sbrs[0.0:10.0] SBRS 5.1 |
| 1000000201 | 500000014 | 70000094 | 0, 1 | Wed Feb 12 19:48:37 2014 | TLS success protocol TLSv1 cipher AES128-SHA |
| 1000000201 | 500000014 | 70000094 | 0, 1 | Wed Feb 12 19:48:37 2014 | Start MID 500000014 ICID 1000000201 From: |
| 1000000201 | 500000014 | 70000094 | 0, 1 | Wed Feb 12 19:48:37 2014 | MID 500000014 ICID 1000000201 RID 0 To: |
| 1000000201 | 500000014 | 70000094 | 0, 1 | Wed Feb 12 19:48:37 2014 | MID 500000014 ICID 1000000201 RID 1 To: |
| 1000000201 | 500000014 | 70000094 | 0, 1 | Wed Feb 12 19:48:38 2014 | MID 500000014 Message-ID '' Subject 'FW: Some Subject Matter' ready 52076 bytes from |
| 1000000201 | 500000014 | 70000094 | 0, 1 | Wed Feb 12 19:48:38 2014 | LDAP: Masquerade query Rewrites-Inbound MID 500000014 address PI:EMAIL to PI:EMAIL |
| 1000000201 | 500000014 | 70000094 | 0, 1 | Wed Feb 12 19:48:38 2014 | MID 500000014 rewritten to MID 500000031 by LDAP rewrite |
| 1000000201 | 500000031 | 70000094 | 0, 1 | Wed Feb 12 19:48:38 2014 | LDAP: Reroute query AD.routing MID 500000014 RID 0 address PI:EMAIL to [('PI:EMAIL', '')] |
| 1000000201 | 500000031 | 70000094 | 0, 1 | Wed Feb 12 19:48:38 2014 | MID 500000031 ICID 0 RID 0 To: |
| 1000000201 | 500000031 | 70000094 | 0, 1 | Wed Feb 12 19:48:38 2014 | MID 500000031 attachment 'image001.jpg', 'image002.jpg' Custom Log Entry: Attachment Names: image001.jpg, image002.jpg, Attachment Sizes: 1736, 1525, Attachment Types: image/jpeg, image/jpeg |
| 1000000201 | 500000031 | 70000094 | 0, 1 | Wed Feb 12 19:48:38 2014 | Delivery start DCID 70000094 MID 500000027 to RID [0] |
| 1000000201 | 500000031 | 70000094 | 0, 1 | Wed Feb 12 19:48:38 2014 | Message done DCID 70000094 MID 500000027 to RID [0] |
| 1000000201 | 500000031 | 70000094 | 0, 1 | Wed Feb 12 19:48:39 2014 | Delivery start DCID 70000094 MID 500000026 to RID [0] |
| 1000000201 | 500000031 | 70000094 | 0, 1 | Wed Feb 12 19:48:39 2014 | Message done DCID 70000094 MID 500000026 to RID [0] |
| 1000000201 | 500000031 | 70000094 | 0, 1 | Wed Feb 12 19:48:39 2014 | Delivery start DCID 70000094 MID 500000033 to RID [0] |
| 1000000201 | 500000031 | 70000094 | 0, 1 | Wed Feb 12 19:48:39 2014 | Message done DCID 70000094 MID 500000033 to RID [0] |
| 1000000201 | 500000031 | 70000094 | 0, 1 | Wed Feb 12 19:48:40 2014 | MID 500000031 interim verdict using engine: CASE spam negative |
| 1000000201 | 500000031 | 70000094 | 0, 1 | Wed Feb 12 19:48:40 2014 | MID 500000031 using engine: CASE spam negative |
| 1000000201 | 500000031 | 70000094 | 0, 1 | Wed Feb 12 19:48:40 2014 | Delivery start DCID 70000094 MID 500000049 to RID [0] |
| 1000000201 | 500000031 | 70000094 | 0, 1 | Wed Feb 12 19:48:40 2014 | MID 500000031 interim AV verdict using Sophos CLEAN, antivirus negative, Outbreak Filters: verdict negative, queued for delivery |
| 1000000201 | 500000031 | 70000094 | 0, 1 | Wed Feb 12 19:48:40 2014 | Message done DCID 70000094 MID 500000049 to RID [0] |
| 1000000201 | 500000031 | 70000094 | 0, 1 | Wed Feb 12 19:48:40 2014 | Delivery start DCID 70000094 MID 500000031 to RID [0, 1], Message done DCID 70000094 MID 500000031 to RID [0, 1], Response '2.6.0 Queued mail for delivery' |
| 1000000201 | 500000031 | 70000094 | 0, 1 | Wed Feb 12 19:48:40 2014 | Message finished MID 500000031 done, DCID 70000094 close |
```

### Using Transaction with Ironport Logs
- **Eventstats and Transaction**:
  ```spl
  sourcetype=ironport OR sourcetype=cisco:esa
  | eventstats values(TLS) as TLS values(src_ip) as src_ip values(…) as … by ICID
  | transaction MID maxpause=5m maxspan=1h
  | fields - _raw
  | fields sender recipient src_ip TLS
  ```
  - **Performance**: Over 3 hours of data (23k messages): 119 seconds.

- **Using Stats Instead of Transaction**:
  ```spl
  sourcetype=ironport OR sourcetype=cisco:esa
  | eventstats values(TLS) as TLS values(src_ip) as src_ip values(…) as … by ICID
  | stats values(icid) AS icid
  | stats values(src*) AS src* by mid
  | eval recipient_count=mvcount(recipient)
  ```
  - **Performance**: Over 3 hours of data (23k messages): 40 seconds (3x faster).

### Fuller Example of Grabbing Complete Ironport Logs
- **Complete Example**:
  ```spl
  sourcetype=cisco:esa* earliest=-20m
  | eventstats values(sending_server) as sending_server values(sending_server_dns_status) as sending_server_dns_status values(sending_server_dkim) as sending_server_dkim values(sending_server_tls_status) as sending_server_tls_status values(sending_server_tls_cipher) as sending_server_tls_cipher values(sending_server_whitelist) as sending_server_whitelist by icid
  | stats min(_time) as _time max(_time) as email_processing_complete_time count(eval(searchmatch("Message Finished MID"))) as complete_count count(eval(searchmatch("Start MID"))) as start_count values(d) as d values(message_id) as message_id values(message_subject) as message_subject values(mid) as mid values(recipient) as recipient values(sender) as sender values(spam_status) as spam_status values(encoding) as encoding values(subject) as subject values(attachment) as attachment values(queue) as queue values(message_scan_error) as message_scan_error values(message_size) as message_size values(sending_server) as sending_server values(sending_server_dns_status) as sending_server_dns_status values(sending_server_dkim) as sending_server_dkim values(sending_server_tls_status) as sending_server_tls_status values(sending_server_tls_cipher) as sending_server_tls_cipher values(sending_server_whitelist) as sending_server_whitelist values(icid) as icid values(dcid) as dcid by mid
  | where complete_count > 1 AND start_count > 1 AND email_processing_complete_time >= relative_time(now(), "-7m@m") AND email_processing_complete_time = relative_time(now(), "-1d@d")
  ```

## First Time Seen Detection
### With Peer Group
- **Peer Group Detection**:
  - Complicates the query, but provides more context.
  - Use `multireport` for advanced commands.
  ```spl
  sourcetype=win*security
  | lookup peer_group user OUTPUT peergroup
  | makemv peergroup delim=","
  | multireport
  [ | stats values(*) as * by user dest ]
  [ | stats values(eval(if(earliest>=relative_time(maxlatest,"-1d@d"),dest,null))) as peertoday values(eval(if(earliest=relative_time(maxlatest,"-1d@d") AND isnull(peerpast),1,0))) as newlogon ]
  ```

### With Lookup Cache
- **Lookup Cache**:
  - Reduces the need to scan large historical data.
  ```spl
  sourcetype=win*security
  | stats earliest(_time) as earliest latest(_time) as latest by user, dest
  | inputlookup append=t lookup_cache.csv
  | stats min(earliest) as earliest max(latest) as latest by user, dest
  | outputlookup lookup_cache.csv
  | eval isOutlier=if(earliest >= relative_time(now(), "-1d@d"), 1, 0)
  ```

### Combined Approach
- **First Time Seen with Both Peer Group and Lookup Cache**:
  ```spl
  sourcetype=win*security
  | lookup peer_group user OUTPUT peergroup
  | makemv peergroup delim=","
  | multireport
  [ | stats values(*) as * by user dest ]
  [ | stats values(eval(if(earliest>=relative_time(maxlatest,"-1d@d"),dest,null))) as peertoday values(eval(if(earliest=relative_time(maxlatest,"-1d@d") AND isnull(peerpast),1,0))) as newlogon ]
  | inputlookup append=t lookup_cache.csv
  | stats min(earliest) as earliest max(latest) as latest by user, dest
  | outputlookup lookup_cache.csv
  | eval isOutlier=if(earliest >= relative_time(now(), "-1d@d"), 1, 0)
  ```

For more advanced techniques, refer to the "Technique: Lookup Caching" and "Technique: Confidence Checking" sections in the document. Additionally, check out "Technique: Time Series Detection" for further enhancements.