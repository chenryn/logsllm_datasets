步骤三：查看提交后的返回信息，账号身份授权被修改，如图4-37所示。
图4-37 通过篡改userid身份标识改变登录系统人员身份信息
4.4.3 修复建议
建议对客户端标识的用户敏感信息数据，使用Session会话认证方式，避免被他人仿
冒身份。
4.5 密文比对认证测试
4.5.1 测试原理和方法
在系统登录时密码加密流程一般是先将用户名和密码发送到服务器，服务器会把用户
提交的密码经过Hash算法加密后和数据库中存储的加密值比对，如果加密值相同，则判
定用户提交密码正确。
但有些网站系统的流程是在前台浏览器客户端对密码进行Hash加密后传输给服务器
并与数据库加密值进行对比，如果加密值相同，则判定用户提交密码正确。此流程会泄漏
密码加密方式，导致出现安全隐患。
4.5.2 测试过程
对系统敏感数据加密流程进行测试，判断加密过程或方式是否为客户端加密方式。测
试流程如图4-38所示。
图4-38 密文对比认证测试流程图
步骤一：通过Burp Suite工具抓包并根据页面代码分析后证实登录传输口令使用Hash
MD5加密算法加密。
（1）通过Burp Suite工具抓包查看Web系统登录提交密码为加密后的密文传输，如图
4-39所示。
图4-39 使用Burp Suite工具抓包证实Web系统登录口令为MD5加密传输
（2）通过对页面代码分析得出Web系统登录口令加密处理过程是由本地JS脚本来完
成的，方式为Hash MD5算法加密，如图4-40所示。
步骤二：在利用Burp Suite工具进行暴力破解测试配置中添加配置项“Payload
Processing”，将要破解的密码值进行数据处理转换。
（1）在暴力破解Payload选项卡Payload Processing中单击“Add”按钮，在弹出对话框
中按顺序选择“Hash”及“MD5”并单击“OK”按钮，如图4-41所示。
图4-40 分析得出系统密码加密方式为本地MD5算法加密
图4-41 在Payload Processing中配置密码处理类型
（2）Payload Processing配置完成后单击“Start attack”按钮开始暴力破解测试，通过
Payload Processing将所有明文密码进行MD5转换后进行了暴力破解登录测试并成功破解，
如图4-42所示。
图4-42 通过Payload Processing配置成功破解密码
4.5.3 修复建议
将密码加密过程及密文比对过程放置在服务器后台执行。发送用户名和密码到服务器
后台，后台对用户提交的密码经过 MD5 算法加密后和数据库中存储的 MD5密码值进行比
对，如果加密值相同，则允许用户登录。
4.6 登录失败信息测试
4.6.1 测试原理和方法
在用户登录系统失败时，系统会在页面显示用户登录的失败信息，假如提交账号在系
统中不存在，系统提示“用户名不存在”、“账号不存在”等明确信息；假如提交账号在系统
中存在，则系统提示“密码/口令错误”等间接提示信息。攻击者可根据此类登录失败提示
信息来判断当前登录账号是否在系统中存在，从而进行有针对性的暴力破解口令测试。
4.6.2 测试过程
针对系统返回不同的登录失败提示信息进行逻辑分析，判断是否能通过系统返回的登
录失败信息猜测系统账号或密码。测试流程如图4-43所示。
图4-43 登录失败信息测试流程图
步骤一：在系统登录页面中输入不存在的账号信息并提交，系统会返回明确语句“用
户名不存在”，如图4-44所示。
步骤二：在系统登录页面中输入存在的账号信息及错误密码提交后，系统返回语句间
接地提示了该账号的“密码/口令错误”，如图4-45所示。
图4-44 系统返回信息并明确提示登录账号不存在
图4-45 系统间接地提示该账号密码错误
4.6.3 修复建议
对系统登录失败提示语句表达内容进行统一的模糊描述，从而提高攻击者对登录系统
用户名及密码的可猜测难度，如“登录账号或密码错误”、“系统登录失败”等。
第5章 业务办理模块测试
5.1 订单ID篡改测试
5.1.1 测试原理和方法
在有电子交易业务的网站中，用户登录后可以下订单购买相应产品，购买成功后，用
户可以查看订单的详情。当开发人员没有考虑登录后用户间权限隔离的问题时，就会导致
平行权限绕过漏洞。攻击者只需注册一个普通账户，就可以通过篡改、遍历订单id，获得
其他用户订单详情，其中多数会包括用户的姓名、身份证、地址、电话号码等敏感隐私信
息。黑色产业链中的攻击者通常会利用此漏洞得到这些隐私信息。
5.1.2 测试过程
攻击者注册一个普通账户，然后篡改、遍历订单 ID，获得其他用户订单详情。测试
流程如图5-1所示。
假设某保险网站存在平行权限绕过漏洞。
登录网站后，访问如下漏洞url，修改参数policyNo的值，可以遍历获得他人保单内
容，其中包含很多敏感隐私信息。
http://xxxxx.com/SL_LES/policyDetailInfo.do?policyNo=P000000018446847
图5-1 订单ID篡改测试流程图
步骤一：登录“李先生”账号（测试），查看本人保单，如图5-2所示。
图5-2 查看保单
步骤二：抓包修改保单号，即可越权查看他人保单内容，如图 5-3、图 5-4、图5-5所
示。
图5-3 抓包修改保单号
图5-4 他人保单
图5-5 他人保单
在返回的数据包中，包含全部在界面中被隐藏的身份证号等敏感信息，如图5-6所
示。
图5-6 查看隐藏的敏感信息
可能涉及1800多万的保单信息泄露，如图5-7所示。
图5-7 遍历保单号
5.1.3 修复建议
后台查看订单时要通过Session机制判断用户身份，做好平行权限控制，服务端需要
校验相应订单是否和登录者的身份一致，如发现不一致则拒绝请求，防止平行权限绕过漏
洞泄露用户敏感个人隐私信息。
5.2 手机号码篡改测试
5.2.1 测试原理和方法
手机号通常可以代表一个用户身份。当请求中发现有手机号参数时，我们可以试着修
改它，测试是否存在越权漏洞。系统登录功能一般先判断用户名和密码是否正确，然后通
过Session机制赋予用户令牌。但是在登录后的某些功能点，开发者很容易忽略登录用户
的权限问题。所以当我们用 A 的手机号登录后操作某些功能时，抓包或通过其他方式尝
试篡改手机号，即可对这类问题进行测试。
5.2.2 测试过程
攻击者登录后，在操作某些功能时，抓包或通过其他方式尝试篡改手机号进行测试，
如图5-8所示。
图5-8 手机号码篡改流程图
以某网站办理挂失业务为例。
步骤一：以尾号0136手机登录，然后选择挂失业务，如图5-9所示。
图5-9 挂失业务
步骤二：抓包修改businessForALLFormBean.username=XXXXXXX0136为business
ForALLFormBean.username=XXXXXXX9793，如图5-10所示。
图5-10 篡改手机号码
步骤三：手机号码参数篡改成功，成功挂失尾号为9793的手机号码，如图5-11所示：
图5-11 挂失成功
5.2.3 修复建议
后台请求要通过Session机制判断用户身份，如果需要客户端传输手机号码，则服务
端需要校验手机号是否和登录者的身份一致。如发现不一致则拒绝请求，防止平行权限绕
过。另外，对于手机 App 程序，不要过于相信从手机中直接读取的手机号码，还是要做
常规的身份认证，规范登录流程，防止未授权登录。
5.3 用户ID篡改测试
5.3.1 测试原理和方法
从开发的角度，用户登录后查看个人信息时，需要通过sessionid判定用户身份，然后
显示相应用户的个人信息。但有时我们发现在GET或POST请求中有userid这类参数传输，
并且后台通过此参数显示对应用户隐私信息，这就导致了攻击者可以通过篡改用户ID越
权访问其他用户隐私信息。黑色产业链中的攻击者也喜欢利用此类漏洞非法收集个人信
息。
5.3.2 测试过程
攻击者注册一个普通账户，然后遍历用户ID，获得其他用户信息，如图5-12所示。
图5-12 用户ID篡改测试流程图
某商城“修改收货人信息”处存在平行权限绕过业务漏洞。
步骤一：登录商城，找到收货地址单击“修改”按钮并抓包，发现 deliverId 参数，如图
5-13所示。
图5-13 修改收货地址
步骤二：将deliverId参数值“327343”修改为“327344”，如图5-14所示。
图5-14 修改收货人ID
步骤三：提交后返回非本账户的联系人相关信息，返回了deliverId=327344的收货人
信息，如图5-15所示。
图5-15 泄露其他收货人信息
5.3.3 修复建议
后台功能请求要通过 Session 机制判断用户身份，不要相信客户端传来的用户ID。如
果确实需要客户端传输userid，则服务端需要校验userid是否和登录者的Session身份一致，
如发现不一致则拒绝请求，防止被攻击者篡改，未授权访问他人账号内容。
5.4 邮箱和用户篡改测试
5.4.1 测试原理和方法
在发送邮件或站内消息时，篡改其中的发件人参数，导致攻击者可以伪造发信人进行
钓鱼攻击等操作，这也是一种平行权限绕过漏洞。用户登录成功后拥有发信权限，开发者
就信任了客户端传来的发件人参数，导致业务安全问题出现。
5.4.2 测试过程
攻击者抓包篡改发信请求，可伪造发信人，发送钓鱼信件，如图5-16所示。
图5-16 邮箱篡改测试流程
步骤一：编写邮件，单击“发送”按钮，如图5-17所示。
图5-17 写信
步骤二：使用Burp Suite工具将邮件发送数据包中的发件人参数“inputFrom”进行修改
并提交发送邮件，如图5-18所示。
图5-18 修改发件人
步骤三：收件时，发现发件人被篡改成功，如图5-19所示。
图5-19 发件人被篡改
5.4.3 修复建议
用户登录后写信、发送消息时要通过Session机制判断用户身份。如果需要客户端传
输邮箱、发件人，服务端需要校验邮箱、发件人是否和登录者的身份一致，如发现不一致
则拒绝请求，防止被攻击者篡改用于钓鱼攻击。
5.5 商品编号篡改测试
5.5.1 测试原理和方法
在交易支付类型的业务中，最常见的业务漏洞就是修改商品金额。例如在生成商品订
单、跳转支付页面时，修改 HTTP 请求中的金额参数，可以实现 1 分买充值卡、1元买特
斯拉等操作。此类攻击很难从流量中匹配识别出来，通常只有在事后财务结算时发现大额
账务问题，才会被发现。此时，攻击者可能已经通过该漏洞获得了大量利益。如果金额较
小或财务审核不严，攻击者则可能细水长流，从中获得持续的利益。事后发现此类漏洞，
就大大增加了追责的难度和成本。
此类业务漏洞的利用方法，攻击者除了直接篡改商品金额，还可以篡改商品编号，同
样会造成实际支付金额与商品不对应，但又交易成功的情况。攻击者可以利用此业务漏洞