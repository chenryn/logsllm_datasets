BeaconEye绕过小记
应L.N.大佬的邀请写一下绕过的复现过程。
最近C2开发群内都在讨论关于cs绕过内存检测的话题。
在今天下午首先是看到了这样一个绕过手段：
希望大佬能讲讲原因。
虽然我也不知道啥意思，总之感觉很厉害就去复现了。
刚好最近在整理关于golang调用api的东西
具体golang调用的代码如下
SymInitialize api如果执行成功会返回为true
加入这一段后就还是常规的alloc -> write -> execute加载stageless shellcode.
然后上线了：
Dbghelp = syscall.NewLazyDLL("Dbghelp.dll")
SymInitialize := Dbghelp.NewProc("SymInitialize")
    r1,r2,err :=  SymInitialize.Call(
        pHndl,
        0,
        1,
        )
    fmt.Println(r1)
    fmt.Println(r2)
    fmt.Println(err)
    if r1 != 1 {
        fmt.Println("SymInitialize failed: ", syscall.GetLastError())
    }
绕过了：
惊呆了。