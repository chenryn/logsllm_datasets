be matched against in a router’s configuration and can be used to
trigger any action the network administrators would like.
Action communities are meaningfully transited UP (from cus-
tomers to providers) the Internet hierarchy, but not over (across
peering links) or down (across provider-customer links). Many
ASes do not accept communities from peers3 [13, 33, 81]. Accepting
communities from providers also works against the interest of an
AS, since action communities can limit the propagation of routes
(which the AS is paying its providers for).
Recent work has begun to explore communities in an adversarial
setting. Streibelt et al. explored how an adversary can exploit
remotely triggered blackholing, traffic steering, and route manip-
ulation for adversarial purposes [80, 81]. We build on this line of
work and are the first to consider communities in the context of
interception attacks and in strategically limiting announcement
propagation for adversarial purposes.
In addition, several efforts have begun to gain popularity which
standardize security-grounded community values. For example
3A notable exception to this rule is the behavior of route servers at Internet exchanges
that often use communities to signal which peers to announce to [19].
Session 2E: Internet SecurityCCS ’19, November 11–15, 2019, London, United Kingdom433Symbol Description
ASadv
ASvic
AStar
A, B
R
R∗
X , Y , Z
R(X)
R∗(X)
R∗(X)
AS controlled by the adversary
AS for the victim’s IP prefix
AS for the target IPs in targeted interception attacks
Providers of ASadv
B is used by the adversary for forwarding the inter-
cepted traffic to the victim
Route from B to ASvic (learned by B)
Route from B to ASadv (learned by B)
Arbitrary AS
Route from AS X to ASvic (learned by X)
Route from AS X to ASadv (learned by X)
Set of all routes from AS X to ASadv (learned by X)
Table 2: Notation used throughout this paper.
RFC 7999 [64] standardizes the use of the BLACKHOLE community
which triggers blackholing (and can be used to act upon remotely
triggered black hole lists [62]) and clearly outlines a secure imple-
mentation that avoids potential exploitation (e.g., only accepting
the BLACKHOLE community for routes a customer is authorized to
announce). Even beyond the general BLACKHOLE community,
recent work has proposed a method to communicate port and
protocol specific blackholing via BGP communities [52].
3 ATTACK OVERVIEW
Previous state-of-the-art attacks have severe limitations that make
them infeasible or ineffective in many real-world scenarios. How-
ever, through the use of fine-grained announcement propagation
control offered by BGP communities, SICO attacks can overcome
these challenges.
3.1 Threat Model
We assume the adversary can control at least one AS (denoted by
ASadv), either via gaining full control or by compromising an AS’s
border routers, and is able to make arbitrary BGP announcements
to neighboring ASes. The goal of the adversary is to get some traffic
destined to a victim’s IP prefix to route through ASadv, and be able
to route the traffic to the AS, denoted by ASvic, that the victim’s IP
prefix belongs to (i.e., achieving traffic interception as opposed to
simply hijacking).
The interception attacks performed by the adversary can be
either targeted or untargeted. In an untargeted attack, the adversary
wants to intercept as much traffic as possible. In a targeted attack,
the adversary is more interested in intercepting the traffic destined
to the victim from given target IP addresses, and may want to reduce
the traffic from the rest of the Internet (i.e., untargeted IP addresses).
See §3.2 for more discussions.
The adversary claims that ASadv can reach the victim’s IP prefix
via some routes in the bogus BGP announcements. A legitimate
route from ASadv to the victim’s IP prefix is leveraged by the
adversary to route the intercepted traffic to the victim. Note that
the actual routing path used by the adversary for reaching the
victim’s IP prefix may not necessarily be the same as the path
claimed in the bogus announcements. We use |r| to denote the
length (i.e., number of ASes) of a route r.
3.2 Limitations of previous attacks
AS topological diversity could make AS-path poisoning and selec-
tive neighbor announcement severely limited in their effectiveness,
or even infeasible. In many cases, ASes have no neighbors other
than providers to whom they can make BGP announcements. (73%
of ASes have neither peers nor customers according to the CAIDA
March 2019 AS-relationship dataset [12]). For AS-path poisoning,
large ASes (like tier-1 providers) often deploy defensive AS-path
filtering, which blocks BGP announcements from customers that
contain the ASN of another tier-1 provider anywhere in the AS
path [79]. Thus, if an adversary needs to poison the ASN of a tier-1
provider for AS-path poisoning to be successful, the adversary’s
announcement may not be propagated by other tier-1 providers
which significantly hinders announcement propagation. Besides
(even if a tier-1 provider’s ASN is not included in the AS path), an
increased AS-path length will globally lower the attractiveness of
the adversary’s route which also limits announcement propagation.
Selective neighbor announcement in many cases may not work
at all because the rich interconnectivity of the Internet topology
(especially among ASes with geographic proximity to each other, as
is the case with the providers of a geographically small adversary)
often causes all the providers of ASadv to route traffic destined
to ASvic back to ASadv. We experimentally demonstrate these
limitations in §5.
Moreover, previous attacks provide limited or no support for
targeted interception attacks. In some cases, targeted interception
attacks are advantageous to the adversary for the following reasons:
(1) If the victim has high-volume traffic, the adversary may not have
enough resources in its routers to handle the intercepted traffic,
resulting in a significant and noticeable reduction in performance
(e.g., higher TCP latency) for the victim. Such performance degrada-
tion could be used to detect interception attempts. (2) Besides, even
if the adversary has the required resources to handle the traffic
towards the victim, the more traffic the adversary gets, the more
expensive the attack becomes — ultimately, the adversary must pay
its upstreams for the additional bandwidth used. Unfortunately,
previous attacks are insufficient for targeted interception because
they offer little control over which source ASes redirect traffic
towards the victim via the adversary.
3.3 Our attacks
To overcome the aforementioned limitations, we develop a novel in-
terception attack that provides fine-grained control over announce-
ment propagation that we call SICO (Surgical Interception using
COmmunities) attack. SICO uses BGP communities to manipulate
the local preferences and announcement exporting behaviors of
the routers in neighboring or remote ASes in order to control the
propagation of bogus announcements. As a result, selected ASes will
never hear or will not prefer the bogus announcements, and thus
always use a valid route to forward the traffic from the adversary to
the victim. As illustrated in Figure 2 (a), AS0 hears the bogus route
from a peer AS1 and the valid route from a provider AS2. Because
of local preference, AS0 may import the peer-learned route (i.e., the
Session 2E: Internet SecurityCCS ’19, November 11–15, 2019, London, United Kingdom434intercepted traffic to ASvic through B. 4 We assume in the bogus
announcement the adversary claims that ASadv originates the
victim’s IP prefix(es). B learns R, a legitimate route from B to ASvic,
and R∗, the route from B to ASadv, from some neighbors. From
B’s perspective, both R and R∗ appear to be the legitimate routes
to ASvic.
The key challenge in interception is to maintain a valid route to
the victim. Thus, we want the ASes along the path from the adver-
sary to the victim (such as B) to NOT prefer the adversary’s bogus
route so that the adversary can deliver traffic to the victim normally.
We focus on the scenario that ASadv does not have any peers or
customers, since this is the most challenging scenario for launching
interception attacks (as discussed in §3.2). Even if an adversary has
peers or customers, it can propagate its attack further by making a
malicious announcement to providers as well.
4.2 Attack toolkit: Communities that can
enable interception attacks
With substantial resources invested in their IP networks, large
ASes usually have support for a wide range of action communities.
Another hotspot for community support is Internet exchanges
points (IXPs) which often have route servers that support communities.
Despite the specific community support varying from network to
network, we find several common use cases throughout many large
ASes and route servers. Specifically most of the top 30 ASes and top
10 Internet exchanges we studied support the following community
actions (see Appendix §C for details):
• Lower local-preference below peer (LowerPref): This com-
munity action allows a customer to lower the local preference
of its routes below default local preference of peer routes.
For instance, a tier-1 provider, who learns R from peers and
learns R∗ from a customer (i.e., the adversary), will prefer R
over R∗ if the adversary has applied this action to R∗.
• No export to select peer (NoExportSelect): This commu-
nity action causes a tier-1 provider to not export a route to
specific peers. The tier-1 provider exports a route to all peers
with the exception of the peers specified (by their ASNs) in
the community string.
• No export to all peers (NoExportAll): Here, a tier-1 provider
will only use a route among its customers and not share the
route with any peers5. This has a very adverse impact on
route propagation, but is sometimes needed to maintain
a valid route to the victim. This is one of the most com-
mon action communities and is even standardized through
an RFC [61].
Overall, 8 of the top 10 Internet exchanges we studied supported
these three communities at their route servers and 21 of the top 30
ISPs supported all of these communities as well (see Appendix §C).
We found one Internet exchange that did not support communities
and one that we could not get information on. Of the 9 ISPs that
did not offer full community support, 5 of them offered partial
4In cases where an adversary has more than two providers, we can apply the same
reasoning to a two-provider subset of the adversary’s providers.
5NoExportAll is not to be confused with the well-known RFC 1997 community
NO_EXPORT which prevents export to peers and customers [51]. NoExportAll is
a provider-specific community that only restricts export to peers, not customers (i.e.,
a provider-specific version of NO_PEER [61]).
Figure 2: With no communities, AS0 imports the bogus route
hindering interception. SICO attacks use communities to
overcome these scenarios by strategically limiting the an-
nouncement propagation of bogus routes.
bogus route), which could be problematic for interception attacks
if AS0 is used by the adversary for routing traffic. Using SICO, the
adversary can prevent such failure by sending a community along
with the bogus route to notify AS1 to stop exporting this route to
AS0, as in Figure 2 (b), while the propagation of the other (valid)
routes will not be affected. Besides, SICO does not need to modify
AS-path in an announcement, which bypasses some AS-path-based
filtering mechanisms or detection techniques.
Further, we leverage SICO to develop targeted interception at-
tacks, which allows the adversary to intercept the traffic to a victim
IP prefix from given target source IP addresses, while leaving as
much of the Internet “untouched” (i.e., not delivering traffic to the
adversary) as possible. In targeted interception attacks, the data-
plane effect of the interception becomes less noticeable and the cost
of performing the attack is reduced.
4 BGP COMMUNITY BASED INTERCEPTION
ATTACKS
Our key insight is that, to achieve interception, an adversary some-
times needs to control the behaviors of routers in other ASes
beyond what is achievable by simply selecting which neighbors
to announce to or using AS-path poisoning. We achieve this via
BGP communities.
4.1 Attack setup
Assume without loss of generality that ASadv has two providers
A and B, and announces a bogus BGP route to A and routes the
AS0Bogus route to ALegitimate route to AAS2AS1AS0Bogus route to AAS1XBogus routeBogus route + Community(a)(b)Legitimate route to AAS2Session 2E: Internet SecurityCCS ’19, November 11–15, 2019, London, United Kingdom435community support that could still be used to facilitate attacks. For
2 ISPs we were unable to find information regarding community
support, and for only 2 ISPs we found evidence that relevant action
communities were not supported.
We use the three communities as the “gadgets” to construct
our attacks. Note that NoExportAll can actually be replaced with
NoExportSelect; therefore, we always prefer to use NoExportSelect
because it enables more fine-grained route propagation control,
and only use NoExportAll as a fallback when NoExportSelect is not
supported. 6 Many providers support community usage beyond this
model that can be used to improve the effectiveness of attacks (we
use some of these communities in §5), but the above model is com-
monly supported and is sufficient for enabling interception attacks.
We will show how to use these gadgets to achieve interception in
various AS-level topologies next.
IGP metric. In Figure 3 (c), both A and B are tier-1s. Assume ASadv
and ASvic are at the same level of the Internet hierarchy. Therefore,
B will learn R and R∗ as equal-length paths (|R| = |R∗|).
Which path (R or R∗) B will prefer depends on the IGP metric,
so there is a chance that B will prefer R, allowing the adversary
to launch an attack with no communities. However, there is also
a significant chance B will prefer R∗ hindering the adversary’s
interception attack.
Solution: Similar to Figure 3 (a), this situation can be remedied
by placing peer export controls on A that stop it from exporting R∗
to provider B. Ideally the adversary would use the NoExportSelect
community to allow its bogus route to be propagated as far as
possible without being announced to B. Alternatively, the adversary
can simply use the NoExportAll community to suppress exporting
and rely on the route propagating to A’s clients.
4.3 Case study: propagation control via
community
Recall that an interception attack will fail if B prefers R∗ over R (i.e.,
B believes it is better to reach the victim via ASadv) or if B does
not hear R from any neighbors. In both cases, when the adversary
tries to use the legitimate route from B to ASvic to forward the
intercepted traffic, B will follow R∗ and forward the traffic back to
ASadv, and thus fails to deliver the intercepted traffic to the victim.
As discussed in §2.1, a router needs to examine a set of met-
rics (local preference, AS-path length, and IGP metric) to determine
the preferred route between multiple options. Next, we demonstrate
how each metric could cause failures of interceptions using three
representative cases, and discuss how to use communities to achieve
interception in the three cases. For a more general algorithm for
achieving interception in all cases, see §4.4.
Local preference. As in Figure 3 (a), if A and B are (1) not tier-1
and (2) peer with each other, B will learn R∗ as a two-hop peer
route. Since neither A or B are tier-1s, B will most likely learn R
from a provider. Based on Table 1, R∗ is preferred over R.
Solution: To solve this issue, the adversary can use the NoExpor-
tAll or NoExportSelect community to prevent A from exporting R∗
to B. In addition, many peerings are facilitated by route servers at
Internet exchanges. If A and B peer through a route server, even
if A does not support any action communities, the route server
may support communities that can suppress the announcement of
R∗ to B.
AS-path length. In Figure 3 (b), A and B are (1) not tier-1 and
(2) share a common tier-1 provider. Because of sharing the tier-1
provider with A, B learns R∗ as 3-hop-long route (i.e., |R∗| = 3) from
the tier-1 provider. If B does not also share a tier-1 provider with
the victim, B will likely learn R as a 4-hop-long path (|R| = 4) from
a different tier-1 provider. In this case, B will once again prefer R∗.
Solution: To overcome this, the adversary can simply use the
LowerPref community to reduce the preference of R∗ at the shared
provider. This causes the shared tier-1 to prefer R and announce R
to B, eliminating the problem caused by the shared provider.
6The exception to this is in targeted attacks where increased spread is non-optimal
and NoExportAll may be preferable to NoExportSelect.
4.4 Launching attacks in the general case
While the above three cases serve as a demonstration of our attacks,
the algorithm below allows an adversary to launch these attacks
with arbitrary topological relationships between ASadv and ASvic.
This algorithm also allows an adversary to be assured an attack
will be successful before launching the attack (as to not needlessly
raise suspicion by attempting to launch faulty attacks).
Let us use the notation R(X) to be the route to the victim used
by AS X and R∗(X) to be the route to the adversary used by AS X.
Also let R∗(X) be the set of all routes to the adversary heard by AS
X. Because an AS cannot use a route that was not announced to it,
R∗(X) ∈ R∗(X).
CollectInfo, AddCommunities, and LaunchAttack.