When trying to redirect from a POST request to another page it seems that the
request goes wrong. The redirect seems fine in the browser network debug tab
and seems to pass normally from the POST method handling but when it tries to
go to the new url it gets a status code of **|405 Method Not Allowed|**. The
reason for this it seems by looking at the log is that the request gets mashed
up with the query parameter somehow which seems like a bug:
![image](https://user-
images.githubusercontent.com/19205853/165802744-4480c401-d772-47b8-802b-1aa7431cefa4.png)
Also it seems to work normally if there is no inputs in the form (but that is
of no matter as there are no real life forms without any input).
Replication steps:
Happens on Edge, Chrome and Firefox for sure.
    from flask import Flask, request, redirect
    app: Flask = Flask(__name__)
    @app.route("/", methods=["GET"])
    def hello():
        return "to form"
    @app.route("/my_form", methods=["GET", "POST"])
    def my_form():
        if request.method == "GET":
            return "Submit"
        else:
            return redirect("/")
    # app.run(host="127.0.0.1", port=80, debug=True)
I would expect that the submission of a form allows for a redirect to the home
page without any errors like 405. I don't expect any of the arguments to be
passed to the redirected request.
Environment:
  * Python version: 3.9
  * Flask version: 2.1.1