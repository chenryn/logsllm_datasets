# 十五、答案
# 第 1 章，Docker 概述
1.  Docker 商店:[https://store.docker.com/](https://store.docker.com/)
2.  `$ docker image pull nginx`
3.  莫比项目
4.  七个月
5.  `$ docker container help`
# 第 2 章，构建容器映像
1.  假的；它用于向映像添加元数据
2.  您可以将`CMD`附加到`ENTRYPOINT`上，但不能附加到周围的覆盖层上
3.  真实的
4.  对失败的容器进行快照，以便您可以在远离 Docker 主机的地方查看它
5.  `EXPOSE`指令公开容器上的端口，但不映射主机上的端口
# 第 3 章，存储和分发映像
1.  假的；还有 Docker 商店
2.  这允许您在上游 Docker 映像更新时自动更新您的 Docker 映像
3.  是的，它们是(如本章中的示例所示)
4.  真；如果您使用命令行登录，您将登录到 Mac 的 Docker 和 Windows 的 Docker
5.  您可以按名称删除它们，而不是使用映像标识
6.  港口`5000`
# 第 4 章，管理容器
1.  `-a`或`--all`
2.  假的；反之亦然
3.  当您按下 *Ctrl + C* 时，您将被带回您的终端；然而，保持容器活动的进程仍然在运行，因为我们已经从进程中分离出来，而不是终止它
4.  假的；它在指定的容器中生成一个新的进程
5.  你可以使用`--network-alias [alias name]`标志
6.  运行`docker volume inspect [volume name]`会给你关于音量的信息
# 第五章，Docker 人组成
1.  YAML，或者说 YAML 不是标记语言
2.  `restart`标志与`--restart`标志相同
3.  假的；您可以使用 Docker Compose 在运行时构建映像
4.  默认情况下，Docker Compose 使用存储 Docker Compose 文件的文件夹的名称
5.  使用`-d`标志启动容器的分离模式
6.  使用`docker-compose config`命令将暴露 Docker 编写文件中的任何语法错误
7.  Docker 应用将您的 Docker Compose 文件打包成一个小 Docker 映像，可以通过 Docker Hub 或其他注册表共享，Docker 应用命令行工具可以根据映像中包含的数据呈现正在工作的 Docker Compose 文件
# 第 6 章，视窗容器
1.  您可以使用 Hyper-V 隔离在最小的虚拟机管理程序中运行您的容器
2.  命令是`docker inspect -f "{{ .NetworkSettings.Networks.nat.IPAddress }}” [CONTAINER NAME]`
3.  假的；管理 Windows 容器所需运行的 Docker 命令没有什么不同
# 第七章，Docker 机器
1.  使用`--driver`标志
2.  假的；它会给你命令；相反，你需要运行`eval $(docker-machine env my-host)`
3.  Docker Machine 是一个命令行工具，可用于以简单且一致的方式在多种平台和技术上启动 Docker 主机
# 第八章，DockerSwarm
1.  假的；独立的 Docker Swarm 不再受支持，也不再被视为最佳实践
2.  您需要 Docker Swarm 管理器的 IP 地址，以及用于根据您的管理器验证您的工作人员的令牌
3.  你可以用`docker node ls`
4.  你可以添加`--pretty`标志
5.  你可以用`docker node promote [node name]`
6.  您可以运行`docker service scale cluster=[x] [service name]`，其中`[x]`是您想要缩放的容器数量
# 第九章 Docker 工和库柏人
1.  假的；你总能看到 Kubernetes 使用的映像
2.  `docker`和`kube-system`名称空间
3.  你可以用`kubectl describe --namespace [NAMESPACE] [POD NAME]`
4.  你会跑`kubectl create -f [FILENAME OR URL]`
5.  港口`8001`
6.  它叫做博格
# 第 10 章，在公共云中运行 Docker
1.  假的；他们启动了 Docker 集群
2.  使用亚马逊 Fargate 时，您不必启动亚马逊 EC2 实例来运行您的亚马逊 ECS 集群
3.  容器选项列在 Azure 网络应用服务下
4.  使用命令`kubectl create namespace sock-shop`
5.  通过运行`kubectl -n sock-shop describe services front-end-lb`
# 第 11 章，Portainer-Docker 的图形用户界面
1.  路径是`/var/run/docker.sock`
2.  端口为`9000`
3.  假的；应用有自己的定义。运行 Docker Swarm 时，可以使用 Docker Compose，并启动一个栈
4.  真；所有统计数据都是实时显示的
# 第 12 章，Docker 安全
1.  您可以添加`--read-only`标志；或者，如果你想使一个卷只读，你可以添加`:ro`
2.  在理想情况下，每个容器只能运行一个进程
3.  通过运行 Docker Bench 安全应用
4.  Docker 的套接字文件，可以在`/var/run/docker.sock`找到；此外，如果您的主机系统正在运行 Systemd，`/usr/lib/systemd`
5.  假的；Quay 扫描公共和私人映像
# 第 13 章，Docker 工作流程
1.  nginx ( `web`)容器为网站服务；WordPress ( `WordPress`)容器运行传递给 nginx 容器的代码
2.  `wp`容器运行单个进程，一旦运行就存在
3.  `cAdvisor`仅保持指标五分钟
4.  你可以用`docker-compose down --volumes --rmi all`