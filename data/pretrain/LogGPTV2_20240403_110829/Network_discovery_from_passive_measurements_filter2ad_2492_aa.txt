# Network Discovery from Passive Measurements

## Authors
- Brian Eriksson, UW-Madison, PI: [EMAIL]
- Paul Barford, UW-Madison, PI: [EMAIL]
- Robert D. Nowak, UW-Madison, PI: [EMAIL]

## Abstract
Understanding the structure of the Internet through empirical measurements is crucial for developing new topology generators, protocols, traffic engineering, and troubleshooting, among other applications. While previous studies have relied on active (traceroute-like) measurements, passive measurements of packet traffic offer a broader perspective with lower impact and management overhead. This paper presents a methodology for inferring network structure from passive IP packet traffic measurements. We describe algorithms that:
1. Accurately cluster traffic sources sharing network paths without relying on IP address or autonomous system information.
2. Infer topological structure accurately with a small number of active measurements.
3. Recover missing information, a significant challenge in passive packet measurements.

We demonstrate our techniques using simulated topologies and empirical data sets. Our experiments show that the clusters established by our method closely correspond to sources that share paths. We also evaluate the trade-offs between selectively applied active probes and the accuracy of the inferred topology. Finally, we characterize the extent to which missing information can be recovered from passive measurements, enhancing the accuracy of the inferred topologies.

## Categories and Subject Descriptors
C.2.3 [Computer-Communication Networks]: Network Operations—Network Monitoring

## Keywords
Topology, Embedding, Measurement, Inference, Imputation

## General Terms
Measurement, Algorithms

## Permission Notice
Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. To copy otherwise, to republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.

SIGCOMM'08, August 17–22, 2008, Seattle, Washington, USA.
Copyright 2008 ACM 978-1-60558-175-0/08/08 ...$5.00.

## 1. Introduction
Discovering and characterizing the structure and topology of the Internet through empirical measurements has been an active research area for some time (e.g., [2, 15, 17, 22, 31]). These studies have provided insights into the vast size, intricate interconnections, and complex interactions between physical topology and traffic flow. Most prior work on measuring the Internet's structure has used active measurement techniques, such as traceroute-like tools or tomographic probing, and several large ongoing topology discovery projects are based on active probe-based tools (e.g., [5, 29, 21]).

There are three key limitations in using active probe-based tools for Internet topology discovery:
1. The vast size of the Internet necessitates a large set of measurement hosts \( M \) and target hosts \( N \) (where \( N \gg M \)) to capture the diverse features of the infrastructure, especially at the edges [4].
2. Active probes sent from monitors to a large set of target hosts result in significant traffic load and complex management issues.
3. Service providers often filter ICMP packets, rendering standard topology discovery tools like traceroute ineffective.

In this paper, we investigate the problem of Internet-wide structure and topology discovery from passive measurements. Our goal is to develop techniques for inferring meaningful structural characteristics, such as client groups and shared paths, using only simple passive measurements—specifically, the source IP address and TTL fields from IP packet headers. We argue that these simple measurements can be widely collected with minimal management overhead and offer a broader perspective due to the diversity of traffic observed in passive monitors [9, 10].

Using passive packet measurements for discovering Internet structure presents significant challenges. First, individual measurements may convey little information about network structure. Second, source IP addresses are often considered sensitive and subject to privacy constraints. We address the latter by using source IP addresses as unique identifiers (i.e., they can be anonymized, as long as anonymization is consistent across measurements and monitors). Despite these limitations, we demonstrate two surprising capabilities:
1. Internet sources can be automatically and accurately clustered into meaningful groups corresponding to shared network topology.
2. Network topology can be accurately recovered from large volumes of passive data when combined with a very small number of additional active measurements.

Our methodology for inferring network structure from passive measurements begins by determining the hop-count distance between sending hosts and passive monitors using a standard technique [18]. Packets from an individual source observed in multiple passive monitors provide a hop-count distance vector, indicating the topological location of the source relative to the monitors. Examining similarities in these vectors allows us to cluster sources. Sources within a client group [20] or (stub) autonomous systems will have similar hop-count vectors. Differences in hop-count vectors due to different paths to egress points can be eliminated by removing the average value of each vector, resulting in what we call a hop-count contrast. Clustering methods applied to hop-count contrasts reliably reveal topological structure.

Next, we develop a lightweight method for discovering the network topology connecting sources and monitors by augmenting passively collected data with a small number of active measurements. The clustering process enables topology discovery with a number of active measurements proportional to the number of discovered clusters, making the burden of active measurements almost inconsequential. Active measurements provide ground-truth assessments of shared hops, which, combined with the clustering inferred from passive data, suffice to reconstruct the logical network topology. We use simulated topologies and Skitter data [5] to show the trade-offs between active probe budget and accuracy.

Source clustering and topology discovery depend on the quality of hop-count data. Due to the passive nature of data collection, packets from a source are typically observed at only a subset of passive monitors, leading to incomplete hop-count vectors. To address this, we adopt a probabilistic model for hop-count contrasts, using a mixture of Gaussian densities to approximate the distribution of contrasts. The parameters of the mixture density can be fitted to the incomplete hop-count data using an iterative procedure [13], providing a principled mechanism for imputing missing data and accurately clustering sources.

The remainder of this paper is organized as follows. In Section 2, we review related work. In Section 3, we describe the data sets used in our experiments. In Section 4, we present our source clustering algorithm. In Section 5, we show how a modest number of active measurements provides enough additional information to recover the topology relating sources and passive monitors. In Section 6, we address the issue of missing data and demonstrate that accurate clustering is still possible even with highly incomplete passive data. We conclude and discuss future work in Section 7.

## 2. Related Work
Internet structure can be considered in terms of connectivity (e.g., between autonomous systems, IP addresses, routers, or POPs [32]), distance-related properties (e.g., geography [16, 19], packet latency [11, 12]), or behavioral characteristics (e.g., social network membership). Our focus is on identifying Internet structure in terms of client clusters [20] and shared paths [6] toward the goal of full router-level connectivity identification [15]. Unlike prior studies, we do not rely on IP address details. Previous studies of shared paths and router topologies have used active probe-based measurements, while our work primarily uses passive measurements. While passive measurements of routing updates can be used to establish intra-domain network maps [26], our goal is to discover Internet-wide structure with simpler measures.

Coordinate systems have been proposed to estimate latency between arbitrary hosts in the Internet [25, 33, 7]. These systems rely on latency measurements between a set of landmark nodes to create an embedding in a high-dimensional space. Hosts can then use estimates of their latency to points in the coordinate space to predict the latency to other hosts. Challenges in creating coordinate systems include scalability, robustness, and accuracy. One of our topology discovery techniques is based on establishing a topology framework via active measurements, similar to landmarks. Shavitt and Tankel [30] developed the idea of a hyperbolic embedding, which includes the concept of Internet structure in distance estimation.

Passive measurements of packet traffic can be gathered by deploying specialized hardware on TAPed links (e.g., [9, 10]). While TAPed link measurements could be used, publicly available data sets often anonymize source IP addresses, making it impossible to relate measurements from multiple sites. An alternative form of passive packet measurements comes from network honeypots [1, 3, 28, 34]. Honeypots monitor routed but otherwise unused address space, receiving unsolicited and often malicious traffic. Monitors of large address segments can receive millions of connections per day from systems worldwide, offering a unique and valuable perspective [27]. The unsolicited nature of honeypot traffic, coupled with its volume and wide deployment, makes it an attractive data source for our work.

Finally, we proposed the idea of using passive measurements for network discovery and presented initial results on imputing missing data in an extended abstract [8]. We expand and generalize that work by developing an algorithm for client clustering, methods to infer topology and shared paths with a small number of active probes, and evaluating our algorithms with simulated and empirically derived maps of the Internet.

## 3. Data Sets for Passive Hop-Count Distance Measurements
We use three different data sets to evaluate the algorithms described in this paper:
1. **Orbis-Generated Topologies**: Orbis [24] is one of the most realistic network topology generators, creating graphs with properties consistent with those observed in the Internet. These synthetic networks enable us to analyze the capabilities of our methods with full ground truth and over a range of sizes.
2. **Skitter Router-Level Connectivity Map**: Based on data collected by Skitter [5], this map was created from traceroute-like active probes sent from 24 monitors to nearly 1M target hosts. The openly available router-level map, collected between April 21 and May 8, 2003, consists of 192,224 unique nodes and 609,066 undirected links. The Skitter target host list aims to have one responding node in each /24 prefix, making the characteristics of the Skitter graph different from Orbis-generated topologies.
3. **Honeypot Data Set**: Collected over a 24-hour period starting at 00:00 on December 22, 2006, from 15 topologically diverse honeypot sensors located in 11 distinct /8 prefixes managed by 10 different organizations. The monitored IP address space varied from /25 to /21 plus one /16. Over 37,000,000 total packets were collected and evaluated. The packets do not contain spoofed source IP addresses, as they were responses to SYN/ACKs from the honeynet [3]. Table 1 provides details of the data set. To preserve the integrity of the honeypots, their locations in IPv4 address space cannot be disclosed.

Of particular interest are the occurrences of the same source IP address in multiple honeypots. We found that 93.5% of the unique IP addresses in our data set appear in only one of the honeypots, likely due to the diverse locations of the sensors and the fact that different instances of malware limit their scans to smaller segments of address space.