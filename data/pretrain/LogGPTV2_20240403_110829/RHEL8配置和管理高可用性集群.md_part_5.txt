::: itemizedlist
**其它资源**
-   有关从现有集群中添加和删除节点的详情，[请参考管理集群节点](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_and_managing_high_availability_clusters/assembly_clusternode-management-configuring-and-managing-high-availability-clusters){.link}。
-   有关在现有集群中添加和修改链接的详情，请参阅
    [在现有集群中添加和修改链接](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_and_managing_high_availability_clusters/assembly_clusternode-management-configuring-and-managing-high-availability-clusters#proc_changing-links-in-multiple-ip-cluster-clusternode-management){.link}。
-   有关修改更改仲裁选项和管理集群中的仲裁设备设置的详情，[请参考配置集群仲裁](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_and_managing_high_availability_clusters/assembly_configuring-cluster-quorum-configuring-and-managing-high-availability-clusters){.link}
    [和配置仲裁设备](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_and_managing_high_availability_clusters/assembly_configuring-quorum-devices-configuring-and-managing-high-availability-clusters){.link}。
:::
:::
::: section
::: titlepage
# []{#assembly_pcs-operation-configuring-and-managing-high-availability-clusters.html#proc_pcs-corosync-display-pcs-operation}使用 pcs 命令显示 corosync.conf 文件 {.title}
:::
以下命令显示 `corosync.conf`{.literal} 群集配置文件的内容：
``` literallayout
# pcs cluster corosync
```
从 Red Hat Enterprise Linux 8.4 开始，您可以使用
`pcs cluster config`{.literal} 命令以人类可读的格式打印
`corosync.conf`{.literal} 文件的内容，如下例所示。
``` literallayout
[root@r8-node-01 ~]# pcs cluster config
Cluster Name: HACluster
Transport: knet
Nodes:
  r8-node-01:
    Link 0 address: r8-node-01
    Link 1 address: 192.168.122.121
    nodeid: 1
  r8-node-02:
    Link 0 address: r8-node-02
    Link 1 address: 192.168.122.122
    nodeid: 2
Links:
  Link 1:
    linknumber: 1
    ping_interval: 1000
    ping_timeout: 2000
    pong_count: 5
Compression Options:
  level: 9
  model: zlib
  threshold: 150
Crypto Options:
  cipher: aes256
  hash: sha256
Totem Options:
  downcheck: 2000
  join: 50
  token: 10000
Quorum Device: net
  Options:
    sync_timeout: 2000
    timeout: 3000
  Model Options:
    algorithm: lms
    host: r8-node-03
  Heuristics:
    exec_ping: ping -c 1 127.0.0.1
```
从 RHEL 8.4 开始，您可以使用 `--output-format=cmd`{.literal} 选项运行
` pcs cluster config show`{.literal} 命令，以显示可用于重新创建现有
`corosync.conf`{.literal} 文件的 pcs``{=html}
配置命令，如下例所示：
``` literallayout
[root@r8-node-01 ~]# pcs cluster config show --output-format=cmd
pcs cluster setup HACluster \
  r8-node-01 addr=r8-node-01 addr=192.168.122.121 \
  r8-node-02 addr=r8-node-02 addr=192.168.122.122 \
  transport \
  knet \
    link \
      linknumber=1 \
      ping_interval=1000 \
      ping_timeout=2000 \
      pong_count=5 \
    compression \
      level=9 \
      model=zlib \
      threshold=150 \
    crypto \
      cipher=aes256 \
      hash=sha256 \
  totem \
    downcheck=2000 \
    join=50 \
    token=10000
```
:::
:::
[]{#assembly_creating-high-availability-cluster-configuring-and-managing-high-availability-clusters.html}
::: chapter
::: titlepage
# []{#assembly_creating-high-availability-cluster-configuring-and-managing-high-availability-clusters.html#assembly_creating-high-availability-cluster-configuring-and-managing-high-availability-clusters}第 4 章 使用 Pacemaker 创建红帽高可用性集群 {.title}
:::
以下流程使用 `pcs`{.literal} 命令行界面创建红帽高可用性双节点群集。
在本例中配置集群需要您的系统包含以下组件：
::: itemizedlist
-   2 个节点，用于创建集群。在本例中，使用的节点为
    `z1.example.com`{.literal} 和 `z2.example.com`{.literal}。
-   专用网络的网络交换机。我们推荐使用专用网络用于集群节点和其它集群硬件（比如网络电源交换机和光线通道交换机）的通信，当这不是必须的。
-   集群中的每个节点上都有一个隔离设备。这个示例使用 APC
    电源交换机的两个端口，主机名为 `zapc.example.com`{.literal}。
:::
::: section
::: titlepage
# []{#assembly_creating-high-availability-cluster-configuring-and-managing-high-availability-clusters.html#proc_installing-cluster-software-creating-high-availability-cluster}安装集群软件 {.title}
:::
此流程安装集群软件并为创建集群配置您的系统。
::: orderedlist
**流程**
1.  在集群的每个节点中，启用与您的系统架构对应的高可用性存储库。例如，要为
    x86_64 系统启用高可用性存储库，您可以输入以下
    `subscription-manager`{.literal} 命令：
    ``` literallayout
    # subscription-manager repos --enable=rhel-8-for-x86_64-highavailability-rpms
    ```
2.  在集群的每个节点中，安装 Red Hat High Availability Add-On
    软件包，以及 High Availability 性频道中的所有可用的隔离代理。
    ``` literallayout
    # yum install pcs pacemaker fence-agents-all
    ```
    另外，您可以使用以下命令安装 Red Hat High Availability Add-On
    软件包，并只安装您需要的隔离代理。
    ``` literallayout
    # yum install pcs pacemaker fence-agents-model
    ```
    以下命令显示可用隔离代理列表。
    ``` literallayout
    # rpm -q -a | grep fence
    fence-agents-rhevm-4.0.2-3.el7.x86_64
    fence-agents-ilo-mp-4.0.2-3.el7.x86_64
    fence-agents-ipmilan-4.0.2-3.el7.x86_64
    ...
    ```
    ::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 警告 {.title}
    在安装 the Red Hat High Availability Add-On
    软件包后，需要确定设置了软件更新首选项，以便不会自动安装任何软件。在正在运行的集群上安装可能会导致意外行为。如需更多信息，请参阅[将软件更新应用到
    RHEL High Availability
    或弹性存储集群的建议实践](https://access.redhat.com/articles/2059253/){.link}。
    :::
3.  如果您正在运行 `firewalld`{.literal}
    守护进程，请执行以下命令启用红帽高可用性附加组件所需的端口。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    您可以使用 `rpm -q firewalld`{.literal} 命令确定您的系统中是否安装了
    firewalld``{=html} 守护进程。如果安装了它，您可以使用
    `firewall-cmd --state`{.literal} 命令来确定它是否在运行。
    :::
    ``` literallayout
    # firewall-cmd --permanent --add-service=high-availability
    # firewall-cmd --add-service=high-availability
    ```
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    集群组件的理想防火墙配置取决于本地环境，您可能需要考虑节点是否有多个网络接口或主机外防火墙是否存在。在此示例中打开
    Pacemaker
    集群通常所需的端口，您需要根据具体情况进行修改。[为高可用性附加组件](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_and_managing_high_availability_clusters/assembly_creating-high-availability-cluster-configuring-and-managing-high-availability-clusters#proc_enabling-ports-for-high-availability-creating-high-availability-cluster){.link}
    启用端口会显示为红帽高可用性附加组件启用的端口，并解释每个端口的用途。
    :::
4.  要使用 `pcs`{.literal}
    配置集群并在节点之间进行通信，您必须在每个节点上设置用户 ID
    `hacluster`{.literal} 的密码，这是 `pcs`{.literal}
    管理帐户。建议每个节点上的用户 `hacluster`{.literal} 的密码都相同。
    ``` literallayout
    # passwd hacluster
    Changing password for user hacluster.
    New password:
    Retype new password:
    passwd: all authentication tokens updated successfully.
    ```
5.  在配置群集之前，必须启动并启用 `pcsd`{.literal}
    守护进程以便在每个节点上引导时启动。此守护进程与 `pcs`{.literal}
    命令配合使用，以管理群集中节点的配置。
    在集群的每个节点上，执行以下命令启动 `pcsd`{.literal}
    服务并在系统启动时启用 `pcsd`{.literal}。
    ``` literallayout
    # systemctl start pcsd.service
    # systemctl enable pcsd.service
    ```
:::
:::
::: section
::: titlepage
# []{#assembly_creating-high-availability-cluster-configuring-and-managing-high-availability-clusters.html#proc_installing-pcp-zeroconf-creating-high-availability-cluster}安装 pcp-zeroconf 软件包（推荐使用） {.title}
:::
当您设置集群时，建议您为 Performance Co
`-Pilot(PCP)工具安装 pcp-zeroconf`{.literal} 软件包。PCP 是红帽推荐的
RHEL 系统资源监控工具。安装 `pcp-zeroconf`{.literal} 软件包可让您运行
PCP 并收集性能监控数据，以便调查隔离、资源故障和其他破坏集群的事件。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
启用 PCP 的集群部署将需要足够空间，以便 PCP 在包含
`/var/log/pcp/`{.literal} 的文件系统中捕获的数据。PCP
的典型空间使用量因部署而异，但使用 `pcp-zeroconf`{.literal} 默认设置时
10Gb 通常就足够了，而且有些环境可能需要较少的时间。监控这个目录中的 14
天期间内的典型活动提供更准确的信息。
:::
::: title
**流程**
:::
要安装 `pcp-zeroconf`{.literal} 软件包，请运行以下命令：
``` literallayout
# yum install pcp-zeroconf
```
此软件包启用 `pmcd`{.literal}，并以 10 秒间隔设置数据捕获。
有关检查 PCP 数据的信息，请参阅 [为什么重启 RHEL 高可用性集群节点 -
如何在红帽客户门户网站中防止它再次发生？](https://access.redhat.com/solutions/4545111){.link}
:::
::: section
::: titlepage
# []{#assembly_creating-high-availability-cluster-configuring-and-managing-high-availability-clusters.html#proc_creating-high-availability-cluster-creating-high-availability-cluster}创建高可用性集群 {.title}
:::
此流程创建一个由节点 `z1.example.com 和 z2.example.com`{.literal}
组成的红帽高可用性附加组件集群。``{=html}
::: orderedlist
**流程**
1.  针对您要运行 `pcs`{.literal} 的节点上的群集中每个节点验证
    `pcs`{.literal} 用户 `hacluster`{.literal}。
    以下命令可在 `z1.example.com`{.literal} 上为双节点群集（由 z
    `1.example.com 和 z2.example.com`{.literal}
    组成）中的两个节点验证用户 `hacluster`{.literal}。``{=html}
    ``` literallayout
    [root@z1 ~]# pcs host auth z1.example.com z2.example.com
    Username: hacluster
    Password:
    z1.example.com: Authorized
    z2.example.com: Authorized
    ```
2.  从 `z1.example.com`{.literal} 执行以下命令，以创建由 z
    `1.example.com 和 z2.example.com`{.literal} 组成的双节点群集
    `my_cluster`{.literal}。``{=html}这会将集群配置文件传播到集群中的两个节点。此命令包含
    `--start`{.literal} 选项，该选项将在群集的两个节点上启动群集服务。
    ``` literallayout
    [root@z1 ~]# pcs cluster setup my_cluster --start z1.example.com z2.example.com
    ```
3.  在节点引导时，启用集群服务在集群中的每个节点上运行。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}