### Advanced Network Management and Security Policies

In addition to simple blocking policies, we also evaluate more sophisticated actions such as traffic redirection for security and network load management.

#### Inner Network Communication Restriction
We demonstrate this capability at the device-application level by implementing a load balancer controller application called `netbal`. This application not only supports device traffic routing but also differentiates among application-specific data flows. In our scenario, we aim to balance bandwidth utilization across two applications, `a` and `b`, regardless of their host devices. By leveraging real-time network connection statistics, `netbal` can reroute all traffic from application `a` to a different network endpoint. Another application of `netbal` in BYOD environments is to use dedicated security middle-boxes to inspect suspicious device or application activity. For this, we modify `netbal` to facilitate quarantine redirection. We create a whitelist of authorized applications (e.g., `a`, `b`, `c`) and redirect all other application traffic to a Snort-based middle-box for inspection.

### Limitations and Discussion

Although PBS (Programmable BYOD Security) provides dynamic, fine-grained policy enforcement with minimal overhead on BYOD devices, several limitations exist in our current prototype implementation. Here, we discuss these limitations and outline future work.

#### System Circumvention
Malicious users may attempt to circumvent company policies. For example, a user might turn off context functions like GPS to gain access to restricted services. PBS-DROID, however, detects such context changes and quarantines the device until the GPS function is restored. Additionally, if a secure connection is lost, our system drops all packets. A user could try to disable the system by terminating its processes and the kernel module, but this requires root privileges. Users might also ignore policies by using devices without PBS-DROID or tampered devices. Our system can integrate with existing MDM solutions to ensure proper authentication and vetting of devices, a common practice in BYOD enterprises.

#### Portability
Portability is crucial for achieving broad coverage in a BYOD deployment, which may include various operating system versions and mobile devices. To support multiple Android versions, minor modifications are required. Tightly integrated components like the Arbiter may need source code changes to accommodate system-specific information (e.g., PackageManager, GPS). While PBS-DROID is specific to Android, its design principles are portable to other platforms, including Linux, Windows, and Apple devices. Devices lacking GPS will have limited location-based policy enforcement, but our system can use alternative methods, such as physical network connection information, for rudimentary location checks.

#### Protocol and Interface Coverage
Our current implementation of PBS-DROID covers TCP network flows. However, it can be circumvented via other protocols like UDP. SDN/OpenFlow supports TCP, UDP, and ICMP, so extending protocol coverage is feasible with additional engineering effort. We also support WiFi and 3G/4G interfaces but plan to extend coverage to Bluetooth and NFC in future work.

#### Scalability of Controller
We assume PBS-DROID operates in a typical enterprise network, where it functions as a standard SDN controller application. Our components for handling enterprise policies on top of flow management do not significantly impact performance. Supporting large-scale enterprises remains a focus, and existing research on SDN scalability shows promising results in large networks.

#### SDN Attacks
PBS-DROID's use of SDN concepts makes it vulnerable to attacks like control plane saturation. Administrators can mitigate such threats through network policies that limit device-specific traffic or block offending devices. Existing SDN security systems can further protect PBS-managed networks, making SDN-centric vulnerabilities less of a concern.

### Related Work

#### Android Systems in Enterprises
- **Android Device Administration API**: Provides static security functions but lacks real-time, programmable policies.
- **Android for Work and Samsung KNOX**: Offer containerized systems to separate corporate and personal data, but their network policy management features are limited.
- **Other Solutions**: Some existing work provides device access restriction via policy enforcement but operates at the kernel or application layer, not the network level, and lacks dynamic programmability.

#### SDN/OpenFlow Security
- **FRESCO**: An OpenFlow security application development framework.
- **Avant-Guard**: Provides connection migration techniques to handle control plane saturation attacks.
- **TopoGuard**: Addresses topology poisoning vulnerabilities.
- **SPHINX**: Detects traffic flow-related attacks.
- **FortNox/SE-Floodlight**: Supports role-based authorization and real-time security constraint enforcement.
- **Rosemary**: A security-oriented SDN controller.

### Conclusion

In this paper, we propose PBS, a new network security framework for BYOD in enterprise networks, inspired by Software-Defined Networking (SDN). PBS-DROID, our Android client, achieves dynamic, fine-grained network control of applications with minimal performance overhead. It complements existing security solutions and represents a new direction in BYOD security.

### Acknowledgment
This work was supported in part by the Air Force Office of Scientific Research under FA-9550-13-1-0077 and a Google Faculty Research award. The opinions expressed are those of the authors and do not necessarily reflect the views of AFOSR and Google.

### References
[References listed here]