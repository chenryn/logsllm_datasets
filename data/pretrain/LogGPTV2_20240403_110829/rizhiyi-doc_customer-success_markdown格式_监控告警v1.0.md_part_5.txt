![](media/image55.png){width="5.708333333333333in"
height="1.5777777777777777in"}
#### capfirst过滤器
说明：大写变量的第一个字母。例：
![](media/image56.png){width="5.708333333333333in"
height="1.6201388888888888in"}
![](media/image57.png){width="5.708333333333333in"
height="1.5652777777777778in"}
#### date过滤器\*
说明：根据给定格式对一个日期或时间变量进行格式化。例：
默认时间格式如下：
![](media/image58.png){width="5.708333333333333in"
height="1.5354166666666667in"}
使用date过滤器格式化成我们想要的格式：
![](media/image59.png){width="5.708333333333333in"
height="1.5104166666666667in"}
当然，date可用的格式字符串还有很多，列表如下，可根据需求进行搭配：
  ----------------- --------------------------------------- -------------------------------------------
  格式化字符        描述                                    示例输出
  a                 \'a.m.\'或\'p.m.\'                      \'a.m.\'
  A                 \'AM\'或\'PM\'                          \'AM\'
  b                 月份，文字形式，3个字母，小写。         "jan"
  B                 未实现。                                
  c                 ISO 8601格式                            2008-01-02T10:30:00.000123+02:00
  d                 月的日子，带前导零的2位数字。           \'01\'到\'31\'
  D                 周几的文字表述形式，3个字母。           \'Fri\'
  e                 时区名称                                \'\'，\'GMT\'，\'-500\'，\'US/Eastern\'等
  E                 月份，分地区。                          
  f                 时间                                    \'1\'，\'1:30\'
  F                 月，文字形式。                          \'January\'
  g                 12小时格式，无前导零。                  \'1\'到\'12\'
  G                 24小时格式，无前导零。                  \'0\'到\'23\'
  h                 12小时格式。                            \'01\'到\'12\'
  H                 24小时格式。                            \'00\'到\'23\'
  i                 分钟                                    \'00\'到\'59\'
  I                 夏令时间，无论是否生效。                \'1\'或\'0\'
  j                 没有前导零的月份的日子。                \'1\'到\'31\'
  l                 星期几，完整英文名                      \'Friday\'
  L                 布尔值是否是一个闰年。                  True或False
  m                 月，2位数字带前导零。                   \'01\'到\'12\'
  M                 月，文字，3个字母。                     "Jan"
  n                 月无前导零。                            \'1\'到\'12\'
  N                 美联社风格的月份缩写。                  \'Jan.\'，\'Feb.\'，\'March\'，\'May\'
  o                 ISO-8601周编号                          \'1999\'
  O                 与格林威治时间的差，单位小时。          \'+0200\'
  P                 时间为12小时                            \'1 am\'，\'1:30
                                                            pm\'，\'midnight\'，\'noon\'，\'12：30
                                                            pm\'\>
  r                 RFC 5322格式化日期。                    \'Thu， 21 Dec 2000 16:01:07 +0200\'
  s                 秒，带前导零的2位数字。                 \'00\'到\'59\'
  S                 一个月的英文序数后缀，2个字符。         \'st\'，\'nd\'，\'rd\'或\'th\'
  t                 给定月份的天数。                        28 to 31
  T                 本机的时区。                            \'EST\'，\'MDT\'
  u                 微秒。                                  000000 to 999999
  U                 自Unix                                  
                    Epoch以来的秒数（1970年1月1日00:00:00   
                    UTC）。                                 
  w                 星期几，数字无前导零。                  \'0\'（星期日）至\'6\'（星期六）
  W                 ISO-8601周数，周数从星期一开始。        1，53
  y                 年份，2位数字。                         \'99\'
  Y                 年，4位数。                             \'1999\'
  z                 一年中的日子                            0到365
  Z                 时区偏移量，单位为秒。                  -43200到43200
  ----------------- --------------------------------------- -------------------------------------------
#### default过滤器\*
说明：提供一个默认值，在这个值被认为是false时使用。比如空字符串、none。区别于default_if_none,这个只在变量为none的时候才使用默认值。例：
![](media/image60.png){width="5.708333333333333in"
height="1.6381944444444445in"}
![](media/image61.png){width="5.708333333333333in"
height="2.1798611111111112in"}
#### first过滤器\*
说明：返回列表中的第一个值。同理，last为返回最后一个值。例：
![](media/image62.png){width="5.708333333333333in"
height="2.3402777777777777in"}
![](media/image63.png){width="5.708333333333333in"
height="2.095833333333333in"}
### 注释
添加注释信息使用，由{#和#}来定义，例：
{# 这是一个注释 #}
也可使用{% comment %}标签，提供多行注释功能。在{% comment %}和{%
endcomment %}之间的内容会被忽略，作为注释。例：
![](media/image64.png){width="5.708333333333333in"
height="2.285416666666667in"}
![](media/image65.png){width="5.708333333333333in"
height="1.6208333333333333in"}
### 告警模板渲染
我们已经了解模版的各个组件用途及格式，但如何将他们搭配起来使用？如何能在众多变量中提取出出我们想要的变量呢？可以通过在前台页面对数据进行渲染来查看。
以告警为例，告警基本信息如下图：
![](media/image66.png){width="5.7131944444444445in"
height="3.9805555555555556in"}
![](media/image67.png){width="5.708333333333333in"
height="2.176388888888889in"}
选择告警模版，输入{{alert}}点击预览：
![](media/image68.png){width="5.708333333333333in"
height="2.6868055555555554in"}
由此可见，所有alert字典下的变量信息都被渲染了出来。通常我们只需根据数据的格式，按层筛选出我们想要的变量信息即可（格式非标准json格式）。通过查看，我们想要的搜索结果都存于alert.result.hits变量下：
![](media/image69.png){width="5.708333333333333in"
height="3.0347222222222223in"}
再通过标签或过滤器功能获取我们想要的信息，比如只展示匹配的appname的信息：
![](media/image70.png){width="5.708333333333333in"
height="3.595138888888889in"}
通过数据渲染的方法，模版的编写就可以变得更加简便、直观，每次完成一段模版的编写，可以通过此方法查看是否成功获取到数据，以此来验证模版的准确性。
#### 查看数据格式
有时模版编写完成后，通过渲染查看数据正常，但无法确认模版语言中是否有多余的空格或者其他非标字符，除了通过日志去排查外，还可以通过网页自带的审查功能去查看，节省我们定位日志的时间。
在网页上通过右键打开检查。
![](media/image71.png){width="5.708333333333333in"
height="2.0597222222222222in"}
选择network，点击recoding按钮。
![](media/image72.png){width="5.708333333333333in"
height="1.0083333333333333in"}
点击界面预览，待渲染完成后，点击检查模块窃取到的请求的preview，查看content，即我们编写的模版在程序中的格式，以此来检查模版编写的规范性。
![](media/image52.png){width="5.708333333333333in"
height="3.0701388888888888in"}
#### 模板案例学习
以某农信告警模板为参考，一个完整的模板案例如下：
\# XX农信告警模版
{
\"Source\": \"日志分析平台\",
\"AppName\": \"{{ alert.description }}\",
\"Node\": \"\",
\"NodeAlias\": \"\",
\"Component\": \"日志\",
\"SubComponent\": \"日志\",
\"AlertGroup\": \"\",
\"AlertKey\": \"\",
{% spaceless %}
{% if alert.strategy.name == \"count\" %} //判断监控类型是否为事件数监控
\"Summary\": \"{{ alert.description
}}-{{alert.name}}:出现failed或error关键字，共计{{ alert.result.total }}
次\",
{% elif alert.strategy.name == \"spl_query\"
%}//判断监控类型是否为spl监控
\"Summary\": \"{{ alert.description
}}-{{alert.name}}:单笔核查交易超过20000毫秒\",
{% endif %}
{% endspaceless %}
{% spaceless %}
{%if alert.is_alert_recovery %}\"Severity\":
\"0\",//根据告警级别，发送不同Severity值给集中监控平台，完成告警级别的对接。
{% elif alert.strategy.trigger.level == \"low\" %}\"Severity\": \"1\",
{% elif alert.strategy.trigger.level == \"mid\" %}\"Severity\": \"3\",
{% elif alert.strategy.trigger.level == \"high\"%}\"Severity\": \"5\",
{% endif %}
{% endspaceless %}
\"FirstOccurrence\": \"{{ alert.send_time }}\",
\"OccurrenceTimes\": \"1\",
\"LastOccuTime\": \"{{ alert.send_time }}\"
}
## 告警插件
### 执行过程