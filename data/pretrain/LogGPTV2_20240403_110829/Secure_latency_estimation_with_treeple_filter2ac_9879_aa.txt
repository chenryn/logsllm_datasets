title:Secure latency estimation with treeple
author:Eric Chan-Tin and
Nicholas Hopper
Secure Latency Estimation with Treeple
Eric Chan-Tin and Nicholas Hopper
Dept. of Computer Science and Engineering, University of Minnesota
PI:EMAIL, PI:EMAIL
Minneapolis, MN, USA
ABSTRACT
A network latency estimation scheme associates a “position”
to every peer in a distributed network such that the la-
tency between any two nodes can be accurately estimated
from their positions. Applications for these schemes in-
clude eﬃcient overlay construction, compact routing, anony-
mous route selection, and eﬃcient byzantine agreement. We
present a new latency estimation scheme, Treeple. Our
scheme is diﬀerent from existing ones in several aspects:
Treeple is provably secure, rather than being able to re-
sist known attacks; positions in Treeple are not Euclidean
coordinates and reﬂect the underlying network topology; ﬁ-
nally, positions in Treeple are accurate, stable, and can be
assigned to peers not participating in the system.
Categories and Subject Descriptors
C.2.0 [Computer-Communication Networks]: General—
Security and protection
General Terms
Security, Theory
Keywords
network latency estimation, secure
1.
INTRODUCTION
Each node in a network coordinate system [5, 7, 17–19, 22]
gets assigned a coordinate such that the distance between
any two nodes’ coordinates is a good estimate of the Internet
round-trip time between these two nodes. The accurate es-
timation of network distance between arbitrary nodes is use-
ful in many situations: ﬁnding the closest node to download
content from in a content distribution network or ﬁle-sharing
system [25]; reducing inter-ISP communication [4, 14]; re-
ducing state in internet routers [1, 9, 13]; detecting Sybil at-
tacks [2, 8]; and conducting byzantine leader elections [6].
Early coordinate systems have been shown to exhibit good
accuracy and fast convergence to stable coordinates.
However, Kaafar et al. [10, 11] showed that these early
systems were vulnerable to simple attacks, where the ad-
versarial nodes can disrupt the system by claiming to have
randomly-chosen coordinates, and adding random delays to
Copyright is held by the author/owner(s).
CCS’10, October 4–8, 2010, Chicago, Illinois, USA.
ACM 978-1-4503-0244-9/10/10.
their outgoing messages. To mitigate these attacks, several
schemes have been proposed [12, 21, 23, 26, 27]. However,
none of them have any explicit security goal, and at least
one of these schemes [27] has been shown to be insecure
against more subtle adversaries [3]. This can lead to a po-
tential “penetrate and patch” cycle of designs and attacks.
In this proposal, we introduce a strong deﬁnition of secu-
rity for network latency estimation systems which is robust
to new attacks. An adversary should not be able to inﬂu-
ence the estimated distance between two honest nodes, and
should only be able to inﬂate the distance between itself
and another honest node. We also show that schemes us-
ing trusted landmark nodes [17] can also fail by allowing
malicious peers to reduce their distance to targeted victim
nodes. The common fault from this vulnerability and the
frog-boiling attack [3] is that current network coordinate
systems treat the underlying network topology as a black
box – this makes it hard to diﬀerentiate anomalous RTTs,
which can be caused by changing network conditions, or
due to adversarial manipulation. We show that our net-
work latency estimation scheme, Treeple, is secure under
our security goals, and is also accurate. Using a large real-
world dataset [16], Treeple has a median relative error of
0.26, while Vivaldi [7], a popular insecure network coordi-
nate system, has a median relative error of 0.25. This means
that 50% of the estimated distances are within 26% of the
real network latency. Moreover, Treeple network positions
are highly stable – positions calculated on day one can be
used with the same accuracy 21 days later. Thus, peers
do not need to constantly compute their positions, reducing
bandwidth consumption.
2. SECURITY
2.1 Threat Model
We assume the network consist of a collection of end-hosts
connected by routers. An adversary can control an arbitrary
number of end-hosts, but not routers. Thus an adversary
can communicate with any host, fake the origin of messages,
deviate from protocols, collude, and inﬂate the measurement
of rtt(n, m) where m is malicious. However, the adversary
cannot aﬀect the rtt between honest hosts. Although it may
seem that excluding routers from being malicious is a strong
assumption, we argue that excluding routers is reasonable in
our model: if an adversary could arbitrarily delay or redirect
messages, then a network latency estimation scheme cannot
succeed, since any latency estimate can be invalidated by the
adversary. While the most desirable situation would be to
allow routers to become adversarial, all the currently known
660attacks ﬁt within our threat model. Therefore, a scheme
that is provably secure under our threat model is secure
against all the currently known attacks.
2.2 Deﬁnitions
Accuracy: A scheme is accurate if the computed estimated
distance between two nodes is close to the real network dis-
tance between these two nodes. The median relative error is
commonly used in the literature to measure accuracy. The
median relative error of peer P is
median
P ′∈Peers
|Distance(ρ(P ), ρ(P ′)) − rtt(P, P ′)|
rtt(P, P ′)
,
Figure 2: A tree built from one source to three desti-
nations with link latency in milliseconds.
where ρ(P ) is the coordinate of peer P. If a network coordi-
nate system has a median relative error c, then this implies
that 50% of the estimated distances are within c of the real
network distance.
Security Goal: Our two security goals can be described as
follows: 1) An adversary cannot aﬀect the distance between
two honest nodes, and 2) An adversary can only inﬂate (in-
crease) the distance between itself and another node.
s
m
e
c
n
a
i
t
s
D
r
o
t
e
N
d
e
t
a
m
i
t
s
E
Figure 1: Targeted close node attack results on GNP
Real Network
 Distance 
(ms)
2.3 Failures of Previous Coordinate Systems
Secure decentralized network coordinate systems have been
shown to be vulnerable against the frog-boiling attack [3].
Centralized network coordinate schemes consist of trusted
nodes which compute the coordinates of other nodes. GNP [17]
is such a scheme. Although the authors do not claim their
scheme is secure against attacks, it seems that intuitively
if nodes obtain digitally signed messages from each land-
mark attesting to RTT measurements, GNP could be se-
cure. However, we show that it is possible for an adversary
to inﬂuence the system so as to artiﬁcially decrease the es-
timated distance between itself and a targeted honest node.
In our simple attack, the malicious node a knows the coordi-
nate of the target node t, so a can compute the rtt between
t and each landmark node. When a landmark ℓi measures
rtt(ℓi, a), the adversarial node a attempts to make the mea-
surement as close to rtt(ℓi, t) as possible, subject to the con-
straint that the RTT cannot be smaller than the real net-
work distance. We repeated this experiment using the code
and matrix topology from [24]. For each simulation run, we
randomly pick one target node and one malicious node from
a set of 101 nodes, where 10 of them were considered to be
landmarks. Figure 1 shows that our attack works: in nearly
all the runs, a receives a coordinate that is closer to t than
the real network distance.
3. TREEPLE
To illustrate the idea for Treeple, suppose we have a sys-
tem with trusted vantage point A and peers X, Y , and Z. A
can ﬁnd the network paths (using traceroute or other similar
technique) from itself to each of the three peers, constructing
a tree with routers as the internal nodes and link latencies
for the edges. The vantage point A can then use this tree to
calculate an upper bound on the estimated network latency
between X and Y : ﬁrst ﬁnd C, the least common ancestor
of X and Y (lca(X, Y )). Then calculate the sum of the link
latencies between C and X and between C and Y . Due
to the Internet routing policies, the RTTs measured might
not necessarily reﬂect the latencies exactly due to assymet-
ric return paths; also the triangle inequality violation [15,28]
might occur, and the path X-C-Y will be shorter than the
actual network path. However, we show that our scheme
still provides a good estimate for network latency. For ex-
ample, let’s assume A builds the tree as shown in Figure 2.
The lca(Y, Z) = B and the estimated distance between Y
and Z is 35 + 15 + 20 = 70 ms. In this scheme, a malicious
peer X can only aﬀect the distance (real or estimated) be-
tween itself and another peer (Y or Z), but it cannot aﬀect
the distance between Y and Z since it is not on the same
network path.
Using only one vantage point is most likely not desirable
as the tree distance for some end-hosts might be larger than
the real network distance, since many network links will not
be included with one vantage point. To address this issue,
we choose k topologically distinct vantage points. An end-
host coordinate then becomes the route from each trusted
vantage point, and the distance between two end-hosts is
the minimum of the k distances.
Theorem 1. Assuming the set {T1, . . . , Tk} of vantage
points are honest, Treeple is a secure network latency esti-
mation scheme.
It is intuitively easy to see that Treeple is secure under our
security goals. We omit the proof due to space constraints.
4. EVALUATION
Experimental setup: To evaluate our proposed scheme,
we used the iPlane [16] dataset. It contains the results of
periodic traceroutes from about 250 PlanetLab [20] nodes
to thousands of other IP addresses. We used the datasets
from Dec 1st to Dec 22nd, 2009.
Selecting vantage points: We chose diﬀerent sizes k of
vantage points using a greedy sampling algorithm, which
works as follows. First, we selected at random a set S of
1, 000 pairs (A, B) for which we had latency measurements.
We then picked the best vantage point T1 for the pairs in S
661 
0
5