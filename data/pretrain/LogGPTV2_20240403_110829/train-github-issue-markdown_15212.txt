I have a host with a local-only (everything on the same host) Celery setup for
some continuous data processing. Recently the load got much higher, all the
CPU cores often are under 100% load and I've started to get `WorkerLostError:
Worker exited prematurely: exitcode 155` out of the blue multiple times per
day. A worker works and then suddenly
    ERROR/MainProcess] Task some_task[some_id] raised unexpected: WorkerLostError('Worker exited prematurely: exitcode 155.',)
    Traceback (most recent call last):
      File "...venv/local/lib/python2.7/site-packages/billiard/pool.py", line 1175, in mark_as_worker_lost
        human_status(exitcode)),
    WorkerLostError: Worker exited prematurely: exitcode 155.
I had Celery 3.1.19 but upgrading to the latest version changed nothing. Right
now the versions are:
    celery==3.1.20
    amqp==1.4.9
    billiard==3.3.0.22
    kombu==3.0.33
I use Redis as the broker (tuned to save each message on the disk), and maybe
these Celery settings will tell you something:
    CELERY_ACKS_LATE = True
    CELERYD_MAX_TASKS_PER_CHILD = 1
    CELERYD_PREFETCH_MULTIPLIER = 1
    #-Ofair
    #CELERYD_CONCURRENCY is > 1
    BROKER_CONNECTION_TIMEOUT = 4
    BROKER_CONNECTION_MAX_RETRIES = 3
    BROKER_TRANSPORT_OPTIONS = {
        'fanout_prefix': True,
        'fanout_patterns': True,
        'visibility_timeout': CELERYD_TASK_TIME_LIMIT,
    }