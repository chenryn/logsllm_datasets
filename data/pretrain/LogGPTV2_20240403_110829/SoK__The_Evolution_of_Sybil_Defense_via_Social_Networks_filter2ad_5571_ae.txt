Our key question in evaluating ACL is to determine
whether it expands the guarantees offered by today’s social
defense systems in two directions: (1) withstanding denser
attacks; and (2) providing high quality sybil defense without
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:51:41 UTC from IEEE Xplore.  Restrictions apply. 
 1.2
 1
 0.8
 0.6
 0.4
 0.2
0.01
0.02
0.03
0.04
0.05
0.06
0.07
0.08
0.09
 0
 0
 0.2
 0.4
 0.6
Recall
(a) ACL
 0.8
 1
 1.2
 1.2
 1
 0.8
 0.6
 0.4
 0.2
0.01
0.02
0.03
0.04
0.05
0.06
0.07
0.08
0.09
i
i
n
o
s
c
e
r
P
i
i
n
o
s
c
e
r
P
 0
 0
 0.2
 0.4
 0.6
Recall
 0.8
 1
 1.2
(b) SybilLimit
Figure 6. The impact of varying the attack strength on (a) ACL on the
original Facebook graph and (b) SybilLimit on the preprocessed and raw
Facebook graph.
relying on the assumption that the entire graph is fast mixing
(to avoid the need for preprocessing).
Method and environment: Viswanath et al. [39] ob−
serve that, despite their peculiarities, sybil defense schemes
are based on the same fundamental principle—community
detection—and produce highly correlated results. Hence, for
the sake of clarity, the experiments we report compare ACL
only against SybilLimit, which we use as the SybilLimit−
like champion. Although SybilLimit performed better than
its peers, our experiments with SybilGuard, SybilInfer and
Gatekeeper returned qualitatively similar results.
The graphs we use to compare their performance are
generated by subjecting social networks that we assume
to include only honest nodes to the attack described in
section II−B. We then run ACL and SybilLimit on the
resulting graphs, rank the nodes using the same method−
ology discussed in Section III, and measure precision (the
percentage of nodes in the preﬁx that are honest) and recall
(the percentage of honest nodes that are in the preﬁx) from
the perspective of 10 randomly chosen seeds. We report the
392
average of the values we obtain.
√
We conﬁgure SybilLimit to have 1.5
m random walks of
−3 and 
length 1.5 log(n). ACL is conﬁgured with α = 10
sufﬁciently small to label every node in the attacked graph
−7; for all other
with non−zero weight. For DBLP  = 10
graphs  = 10
−6 sufﬁces.
ACL tolerates denser attacks: Figure 6 shows the
degree to which ACL and SybilLimit succeed in defending
the Facebook graph when the attack strength, measured as
the percentage p of attack edges in the graph, varies from
p = 0.01 to p = 0.1. Note that, to respect the “operating
range” of each protocol the results we report for ACL are
obtained on the original Facebook graph while the results
from SybilLimit apply to the preprocessed Facebook graph.
We observe that the ability of ACL to correctly classify
nodes degrades gracefully as the attack increases in strength,
remaining relatively high even when p = 0.1. Indeed, the
selectivity of ACL under an attack of strength p = 0.05
is comparable to that of SybilLimit for an attack of p =
0.01. SybilLimit on the other hand becomes confused rather
rapidly as the attack strength increases.
ACL does not need preprocessing: Figure 7 shows the
protection offered by ACL and SybilLimit to the Facebook,
DBLP, Epinions, and WikiTalk graphs for an attack where
p = 0.01. For ACL, we report only results from the raw
graph. For SybilLimit we report results from both the raw
and preprocessed graphs.
Without preprocessing, ACL achieves high precision at
high recall. SybilLimit’s performance, on the other hand, is
mixed. For Facebook, Epinions, and WikiTalk, SybilLimit
provides excellent protection as long as the graphs are
preprocessed. When the graphs are not preprocessed, the
offered coverage degrades to varying extents. The degrada−
tion in coverage for Facebook is negligible; for Epinions the
degradation is minor but noticeable.
SybilLimit performs poorly on DBLP with or without
preprocessing, though preprocessing the graph does provide
a signiﬁcant boost. We speculate that this poor performance
is the side effect of the relatively high mixing time observed
by Mohaisen et al. [23].
A second attack model: In this section we compare
the algorithms using an attack model widely used in the
literature [10], [42]. The number of attack edges g is ﬁxed,
and random honest nodes are declared to be sybil until g
attack edges are obtained. Then more sybil nodes are created
from scratch until a total of γ sybils is reached. These γ
sybils are then connected among themselves via a scale−free
topology. In our attack we use the scale−free topology of
Barabasi−Alberts, as in [42].
Figure 8 shows the results for our Facebook graph and
g = 50000 and γ = 10000. ACL and Mislove are essen−
tially perfect, outperforming all other algorithm (Gatekeeper,
SybiLimit and SybilGuard). We also ran experiments with
other graphs obtaining similar results.
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:51:41 UTC from IEEE Xplore.  Restrictions apply. 
i
i
n
o
s
c
e
r
P
i
i
n
o
s
c
e
r
P
 1.2
 1
 0.8
 0.6
 0.4
 0.2
 0
 0
 1.2
 1
 0.8
 0.6
 0.4
 0.2
 0
 0
 1.01
 1
 0.99
 0.98
 0.97
 0.96
 0.95
 0.95  0.96  0.97  0.98  0.99
 1
 1.01
 1.2
 1
 0.8
 0.6
 0.4
 0.2
i
i
n
o
s
c
e
r
P
SybilLimit w/ preprocessing
SybilLimit w/o preprocessing
ACL
 0.2
 0.4
 0.6
Recall
(a) Facebook
 0.8
 1
 1.2
 0
 0
SybilLimit w/ preprocessing
SybilLimit w/o preprocessing
ACL
 0.2
 0.4
 0.6
Recall
 0.8
 1
 1.2
(b) Epinions
 1.2
 1
 0.8
 0.6
 0.4
 0.2
i
i
n
o
s
c
e
r
P
SybilLimit w/ preprocessing
SybilLimit w/o preprocessing
ACL
 0.2
 0.4
 0.6
Recall
(c) DBLP
 0.8
 1
 1.2
 0
 0
SybilLimit w/ preprocessing
SybilLimit w/o preprocessing
ACL
 0.2
 0.4
 0.6
Recall
 0.8
 1
 1.2
(d) WikiTalk
Figure 7. The precision−recall tradeoffs for ACL and SybilLimit on DBLP, Epinions, Facebook, WikiTalk, with p = 0.01. Results for ACL are reported
for the raw graphs. Results for SybilLimit are reported for both raw and preprocessed graphs.
C. Local vs Global detection
We have shown that ACL is very effective in practice to
address Problem 1. Building a universal sybil defense system
for community−structured networks, however, remains an
open problem.
In a recently published paper Cao et al. [7] suggest to
expand defensive coverage by relying on multiple trusted
seed nodes instead of a single one. More precisely, suppose
there are several
trusted seeds evenly distributed among
communities of honest nodes; it is then possible to merge
the local ranking of the nodes to get a uniﬁed global ranking
of the nodes in the network.
While effective in practice,
the use of multiple seeds
does not immediately lead to strong theoretical guarantees,
even assuming that all seeds are honest nodes. For example,
suppose we can prove, as it is typical for ACL, that a
1− o(1) fraction of the honest seeds will assign a negligible
fraction of the overall score to sybil nodes and distribute
the rest evenly across the honest region. There is always,
however, a fraction of unlucky honest seeds for which
such guarantees are impossible—e.g., seeds at the boundary
between the honest and sybil regions. Unfortunately, because
of the arbitrary nature of the sybil region, walks originating
from these nodes might produce an unconstrained (and
adversarial) probability distribution among the sybil nodes.
This is not only true for the ACL algorithm, but virtually
for any sybil defense algorithm that relies on random walks
and mixing time (see for instance [7], [45], [46]).
Unfortunately, it is not clear how an unlucky choice of
seeds will affect the overall ranking. While lucky seeds will
distribute evenly the score among honest nodes, unlucky
ones might concentrate the score to a smaller, but still
signiﬁcant, subregion of the sybil graph, thus letting such
nodes overtake the ﬁrst positions of the ranking.
Despite these words of caution, the results obtained by
Cao et al. [7] using multiple seed in real world scenarios
are encouraging, and we believe this is a promising research
direction.
393
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:51:41 UTC from IEEE Xplore.  Restrictions apply. 
i
i
n
o
s
c
e
r
P
 1.2
 1
 0.8
 0.6
 0.4
 0.2
 0