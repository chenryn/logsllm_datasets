# 【技术分享】绕过Windows程序数字签名验证的漏洞

## 译文声明
本文为翻译文章，原文来源于安全客。译文仅供参考，具体内容及含义以原文为准。

![数字签名](https://weiyiling.cn/media/blogs/one/quick-uploads/p12/sign.png?mtime=1472310443)

在最近的一次黑帽大会上，一位国外的安全研究员展示了如何通过绕过Windows数字签名验证来逃避对恶意代码的检测。该演讲的PPT详细介绍了两个部分：第一部分揭示了数字签名验证中的“漏洞”，第二部分则展示了作者自行开发的一个PE加载器，用于配合第一部分的“漏洞”绕过杀毒软件的检测。本文将重点讨论第一部分中的数字签名校验“漏洞”。

## 数字签名与数字证书

在探讨这一“漏洞”之前，我们先简要回顾一下数字签名和数字证书的基本原理。

### 数字签名
数字签名是对一段数据摘要使用私钥进行加密的过程，接收方使用相应的公钥进行解密校验。

### 数字证书
数字证书包含了解密数字签名所需的公钥以及所有者身份信息，并由认证机构（CA）使用其私钥进行加密。系统信任的CA公钥可以解密这些信息。

具体过程如下：
1. **生成数字签名**：所有者计算数据的哈希值（通常使用SHA-2算法），然后用私钥对该哈希值进行加密。
2. **验证数字签名**：接收方使用发送者的公钥解密签名，比较解密后的哈希值与接收到的数据的哈希值是否一致。

数字签名和数字证书共同确保了数据的完整性和来源的真实性。然而，在Windows系统中，数字签名的验证存在一些可被利用的“漏洞”。

## 可被利用的“漏洞”

尽管数字签名是保护数据完整性的一种可靠方法，但在某些情况下仍可能被绕过。例如，对于一个带有数字签名的Windows可执行文件，如`msvcr100.dll`，右键点击文件属性可以看到数字签名标签，显示签名有效状态。

如果我们在文件末尾添加一些字节，数字签名的状态会变为无效，因为系统检测到了文件的篡改。但是，如果我们只修改特定区域的数据，而不是整个文件，则数字签名仍然可能被视为有效。

### 漏洞的具体细节
在Windows PE文件中，数字签名的计算并不包括以下三个字段：
- **Checksum字段**：位于`IMAGE_OPTIONAL_HEADER32`结构中。
- **Security数据目录字段**：指向数字签名证书数据结构`_WIN_CERTIFICATE`。
- **数字签名证书部分的数据**：即`_WIN_CERTIFICATE`结构中的数据。

由于这些字段不在数字签名的计算范围内，因此可以在不破坏签名的情况下修改它们。具体来说，只需更新`Security.Size`字段，并确保添加的数据长度是8的整数倍，即可使数字签名状态保持正常。

这意味着，即使文件被篡改并添加了恶意数据，只要上述字段正确更新，数字签名状态仍然会被视为有效。这种“漏洞”使得恶意程序可以通过嵌入正常签名的程序来绕过防火墙和反病毒软件的检测。

## 另一种Windows程序的签名“漏洞”

除了PE文件，MSI安装包也存在类似的“漏洞”。MSI文件的数字签名验证更为简单，没有PE文件那样的结构限制。因此，只需在MSI文件末尾添加数据，而无需修改其他字段，数字签名状态依然有效。

### 示例
例如，在系统文件夹`C:\Windows\Installer`中找到一个具有微软数字签名的MSI文件，随意添加数据后，数字签名状态仍然正常。

## 总结

本文所讨论的“漏洞”实际上并不是传统意义上的安全漏洞，而是由于对数字签名的理解误区导致的。数字签名只能验证程序的代码和数据是否被篡改，而无法验证整个文件是否被篡改。因此，恶意程序可以通过这种方式隐藏在正常签名的程序中，从而绕过许多安全检测机制。