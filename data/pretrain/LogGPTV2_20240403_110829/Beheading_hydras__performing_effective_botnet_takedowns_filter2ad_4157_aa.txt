title:Beheading hydras: performing effective botnet takedowns
author:Yacin Nadji and
Manos Antonakakis and
Roberto Perdisci and
David Dagon and
Wenke Lee
Beheading Hydras: Performing Effective Botnet
Takedowns
Yacin Nadji
College of Computing
Georgia Institute of
Technology
Atlanta, GA
PI:EMAIL
Manos Antonakakis
Damballa, Inc.
Atlanta, GA
PI:EMAIL
Roberto Perdisci
Department of Computer
Science
University of Georgia
Athens, GA
PI:EMAIL
David Dagon
College of Computing
Georgia Institute of
Technology
Atlanta, GA
PI:EMAIL
Wenke Lee
College of Computing
Georgia Institute of
Technology
Atlanta, GA
PI:EMAIL
ABSTRACT
Devices infected with malicious software typically form bot-
net armies under the inﬂuence of one or more command and
control (C&C) servers. The botnet problem reached such
levels where federal law enforcement agencies have to step
in and take actions against botnets by disrupting (or “taking
down”) their C&Cs, and thus their illicit operations. Lately,
more and more private companies have started to indepen-
dently take action against botnet armies, primarily focusing
on their DNS-based C&Cs. While well-intentioned, their
C&C takedown methodology is in most cases ad-hoc, and
limited by the breadth of knowledge available around the
malware that facilitates the botnet.
With this paper, we aim to bring order, measure, and
reason to the botnet takedown problem. We propose a
takedown analysis and recommendation system, called rza,
that allows researchers to perform two tasks: 1) a post-
mortem analysis of past botnet takedowns, and 2) provide
recommendations on how to successfully execute future bot-
net takedowns. As part of our system evaluation, we per-
form a postmortem analysis of the recent Kelihos, Zeus and
3322.org takedowns. We show that while some of these take-
downs were eﬀective, others did not appear to have a signif-
icant long-term impact on the targeted botnet. In addition
to the postmortem analyses, we provide takedown recom-
mendation metrics for 45 currently active botnets, where we
ﬁnd that 42 of them can likely be disabled entirely by using
a DNS-based takedown strategy only.
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full citation
on the ﬁrst page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from permissions@acm.org.
CCS’13, November 4–8, 2013, Berlin, Germany.
Copyright is held by the owner/author(s). Publication rights licensed to ACM.
ACM 978-1-4503-2477-9/13/11
http://dx.doi.org/10.1145/2508859.2516749.
Categories and Subject Descriptors
K.6.m [Management of Computing and Information
Systems]: Security; K.5.m [Legal Aspects of Comput-
ing]: Contracts
General Terms
Botnets
Keywords
botnet takedowns; takedown analysis; takedown policy
1.
INTRODUCTION
Botnets represent a persistent threat to Internet security.
To eﬀectively counter botnets, security researchers and law
enforcement organizations have been recently relying more
and more on botnet takedown operations. Essentially, a bot-
net takedown consists of identifying and disrupting the bot-
net’s command-and-control (C&C) infrastructure. For ex-
ample, in 2009 law enforcement and security operators were
able to takedown the Mariposa botnet, which at that time
consisted of approximately 600,000 bots. The takedown op-
eration was accomplished by ﬁrst identifying the set of do-
main names through which bots would locate their C&C
network infrastructure. By seizing this set of domains via
a collaboration with domain registrars, security operators
eﬀectively “sinkholed” the botnet, thus shunting the C&C
traﬃc away from the botmaster and avoiding any further
commands to be issued to the bots.
While sophisticated botnet developers have attempted, in
some cases successfully, to build peer-to-peer (P2P) bot-
nets that avoid entirely the use of C&C domains [18], most
modern botnets make frequent use of the domain name sys-
tem (DNS) to support their C&C infrastructure. This is
likely due to the fact that DNS-based botnets are much eas-
ier to develop and manage compared to their P2P-based
counterparts, and yet provide a remarkable level of agility
that makes a takedown challenging. For example, the Mari-
posa case required a coordinated eﬀort involving law enforce-
ment, security operators, and domain registrars across sev-
121eral diﬀerent countries. In addition, some recent takedown
eﬀorts [13] have caused some level of collateral damage, thus
raising both technical issues and policy-related questions re-
garding the eﬃcacy of botnet takedowns.
In this paper, we propose a novel takedown analysis and
recommendation system, which we call rza. Our main goals
are: (1) to provide a way to “go back in time” and quan-
titatively analyze past takedown eﬀorts to highlight incom-
plete takedowns and identify what worked and what could
have been done better; (2) to build a takedown recommen-
dation engine that aims to automatically enumerate a bot-
net’s C&C infrastructure, and suggest appropriate domain
sets to disable to maximize the chance of success. Specif-
ically, rza identiﬁes additional domains that are likely part
of a botnet’s C&C infrastructure by examining historical re-
lationships in the DNS and analyzing the botnet’s malware
samples. This aids the takedown process by identifying do-
mains that may have been missed by hand, both from the
network-level and the malware-level, aggregating this infor-
mation, and automatically labeling the domains with evi-
dence of their maliciousness. While rza focuses on dis-
rupting botnets that use DNS-based C&C infrastructure, it
can also assist in cases where botnets are more advanced and
use domain name generation algorithms (DGA) or communi-
cate using a peer-to-peer structure (P2P). In particular, rza
provides the ﬁrst few steps for remediating advanced C&C
infrastructure: (i) identifying DNS-based primary C&C in-
frastructure, if it exists; (ii) automatically identifying if the
botnet has DGA or P2P capabilities; and (iii) automatically
identifying the malware samples that exhibit these behav-
iors to triage binaries for reverse engineering. To successfully
takedown DGA/P2P botnets we must fully understand their
non-deterministic portions, such as the randomness seed for
DGAs [3] or the peer enumeration and selection algorithms
for P2P [18]. If we disable a botnet’s primary infrastructure
but do not account for the DGA-based backup mechanism,
our eﬀorts will be futile.
We show that in cases of past takedowns, likely mali-
cious domain names were left unperturbed. Worst yet, in
some cases malicious domains were unintentionally given
enterprise-level domain name resolution services. We show
that rza can identify additional sets of domain names that
ought to be considered in a future takedown, as well as au-
tomatically identify malware contingency plans when their
primary C&C infrastructure is disabled.
In summary, we make the following contributions:
• We propose rza, a takedown analysis and recommen-
dation system that allows us to measure and reason
about the success of past and future takedown eﬀorts.
To the best of our knowledge, we are the ﬁrst to pro-
pose such a botnet takedown analysis system.
• We apply rza to analyze three recent botnet takedown
operations. We show that while some takedowns were
eﬀective, others did not appear to actually disrupt the
entire targeted botnet.
• We use rza’s recommendation engine to analyze 45 live
botnets, and discuss in which cases a DNS-based take-
down operation is likely to succeed and what steps
would be necessary to accomplish the takedown in
practice. Of these, 42 could be straightforwardly elim-
inated using only DNS sinkholing.
The remainder of the paper is structured as follows: Sec-
tion 2 provides the necessary background on the DNS, bot-
net takedowns, and our datasets. Section 3 describes rza in
detail. Section 4 presents our postmortem experiments and
analyses of three recent, high-proﬁle takedown attempts.
Section 5 presents the output of rza when applied to 45
recently identiﬁed, distinct botnet C&C infrastructures. In
Appendix A we discuss non-technical diﬃculties associated
with performing takedowns that would make takedowns more
complete if alleviated.
2. BACKGROUND
In this section, we ﬁrst provide an historical explanation of
some past takedowns and explain why takedowns deserve to
be studied in detail. Then, we describe the datasets used by
rza to perform takedown analysis and to build the takedown
recommendation system.
2.1 Botnets and Takedowns
Botnet takedowns are not uncommon, and may take many
diﬀerent forms. Considering the heterogeneous nature of
client machines and the diﬃculty in keeping individual ma-
chines clean from infection, taking down the botnet C&C
is an attractive alternative. A successful takedown elimi-
nates most external negative impacts of the botnet, eﬀec-
tively foiling further attacks (e.g., spam, DDoS, etc.) by the
infected hosts, which can number in the millions.
In the
past, takedowns have been performed by revoking sets of
C&C IP addresses from hosting providers, de-peering entire
Autonomous Systems (AS), or, more recently, sinkholing or
revoking C&C domains.
Conﬁcker is an Internet worm that infected millions of
computers and remains one of the most nefarious threats
seen on the Internet to date [3]. Conﬁcker’s latter vari-
ants employed a DGA that would generate 50,000 pseudo-
random domain names every day to communicate with its
C&C server. The takedown of Conﬁker required immense
coordination across hundreds of countries and top-level do-
mains (TLDs), and numerous domain registrars and reg-
istries. The takedown eﬀorts were coordinated by the Con-
ﬁcker Working Group (CWG) [3]. The takedown required
reverse-engineering the malware binaries, and reconstructing
the DGA. Then, the CWG pre-registered all 50,000 domains
per day that could potentially be used for C&C purposes,
thus preventing the botmaster from regaining control of the
bots. The success of CWG’s eﬀorts highlight the impor-
tance of participation and support from key governing and
regulatory bodies, such as ICANN, and the need of coop-
eration between the private sector and governments around
the world.
Mariposa, a 600,000-strong botnet of Spanish origin, pro-
vides another example of a takedown operation initiated by
a working group that relied on sinkholing known malicious
domains. Interestingly, Mariposa’s botmasters were able to
evade a full takedown by bribing a registrar to return do-
main control to the malicious operators [10], underscoring
the fact that barriers to successful takedowns are not only
technical ones.
The DNSChanger [19] “click-jacking” botnet was also taken
down through a working group. DNSChanger altered up-
wards of 300,000 clients’ DNS conﬁgurations to point to
rogue DNS resolvers under the control of the attackers. This
allowed the attackers to direct infected hosts to illegitimate
122websites, often replacing advertisements with their own to
generate revenue. DNSChanger had to be taken down by
physically seizing the botnet’s rogue DNS servers. The take-
down was accomplished in late 2011. Largely considered suc-
cessful, the DNSChanger once again shows the importance
of collaboration when performing comprehensive takedowns.
Not all takedowns are performed at the DNS-level, how-
ever, as shown in the takedowns of McColo [8], AS Troyak [11],
and other “bulletproof hosting providers,” or networks known
to willingly support malicious activities. These are extreme
cases where the networks in question essentially hosted only
malicious content, and removing the entire network would
disable large swaths of botnets and related malicious net-
work infrastructure. The eﬀect of these takedowns were in-
directly measured by witnessing drops in spam levels, for ex-
ample, upwards of two-thirds decrease after McColo’s shut-
down [9]. Unfortunately, if a particular botnet relied on the
DNS to perform C&C resolutions into these bulletproof net-
works, once a new host was provisioned the threat would
continue. Sure enough, we saw spam levels rise back to nor-
mal levels as botnets moved to other hosting providers [5].
2.2 Datasets
rza relies on two primary data sources: a large passive
DNS database and a malware database that ties malicious
binaries to the domain names the query during execution.
Passive DNS.
A passive DNS (pDNS) database stores historic mappings
between domain names and IP addresses based on success-
ful resolutions seen on a live network over time. pDNS
databases allow us to reconstruct the historical structure
of DNS-based infrastructure based on how it was used by
clients. Our pDNS is constructed from real-world DNS res-
olutions seen in a large North American ISP. This allows us
to identify the related historic domain names (RHDN) for a
given IP, namely all domains that resolved to that IP in the
past. Also, pDNS allows us to ﬁnd the related historic IP
addresses (RHIP) for a given domain name, i.e., all the IPs
to which the domain resolved to in the past. Furthermore,
the RHIP/RHDNs can be limited to domain-to-IP mappings
that occurred during a particular time frame of interest, thus
allowing us to focus on the crucial days before and after a
takedown took place.
To enable our takedown analysis we deﬁne the following
functions over the pDNS database:
• RHIP(domain, start_date, end_date): returns all do-
mains historically related to the domain argument over
the period between the desired start and end dates.
For example, RHIP(foo.com, 2012/01/01, 2012/01/05)
would return the set of all IP addresses foo.com suc-
cessfully resolved to between January 1st, 2012 and
January 5th, 2012, inclusive.
• RHDN(IP, start_date, end_date): similarly, RHDN
returns all domains historically related to the IP argu-
ment over the period between the start and end dates.
• Volume(domain and/or IP, date): the total successful
lookup volume to the argument domain, IP, or domain
and IP tuple on the argument date.
demonstrate that rza can properly function using diﬀerent
sources of passive DNS data, we obtained temporary access
to the ISC-SIE passive DNS database [4], which is avail-
able to other researchers and oﬀers an arguably more global
perspective.
Malware Domains.
We also make use of a separate malware database that
contains mappings between a malware sample’s MD5 sum
and binary and the domain names and IP addresses it has
queried during dynamic malware analysis. Each entry in the
database is a 4-tuple that includes the MD5 of the malware
sample, the queried domain name, the resolved IP address,
and the date and time of the analysis.
These data are
collected from a combination of internal malware analysis
output as well as the output from a commercial malware
feed.
3. RZA SYSTEM
In this section, we detail the internals of rza, our takedown
analysis and recommendation system.
3.1 Overview
Figure 1 shows the overall process implemented by rza.
Given a set of known seed botnet domains DS, rza can be
asked to generate either a “Postmortem Report” or a “Take-
down Recommendation”.
In the “Postmortem Report” mode, the input domains rep-
resent the domains known to have been targeted by an his-
toric takedown. This produces a report that shows the eﬀec-
tiveness of the takedown of the domain names (Figure 1, step
5a) with respect to the expanded infrastructure rza identi-
ﬁes.
In the “Takedown Recommendation” mode, the input do-
mains represent the currently known malicious domains used
for C&C infrastructure. Furthermore, the takedown recom-
mendation engine explores possible network resources that
may be used by the botnet as a C&C backup mechanism,
and suggests any additional measures that must be taken af-
ter the primary C&C is disabled to fully eliminate the threat
(Figure 1, step 5b).
At a high level, the processing steps executed by rza are
similar when producing both the “Postmortem Report” and
“Takedown Recommendation”, despite the diﬀerence in in-
puts and the meaning of the results. The steps are:
1. Expand the initial domain seed set DS using the pDNS
database to identify other domains that are likely re-
lated to the botnet’s C&C infrastructure. Intuitively,
domains are cheap but IP addresses are relatively more
expensive. By identifying additional domains that re-
solve to the same hosts as malicious domains, we can
identify other potentially malicious domains related to
the botnet.
2. Identify the subset of the expanded domains that are
queried by known malware samples. If a domain both
points to a host known to facilitate a C&C and is also
used by known malware, it increases the likelihood of
that domain itself being malicious as well.
It is important to note that our use of private pDNS data
was dictated mainly by convenience and cost issues. To
3. Identify the subset of the expanded domains with low
domain name reputation. Similar to the intuition of
123Figure 1: Overview of rza.
Step 2, a domain that points to a known malicious
host and also has low domain reputation is more likely