### Bug report
**Bug summary**
When using a colormap to generate a color array with data that contains np.nan
(NaN), an warning is given, and the previous color entry is duplicated. The
method that has this issue is `to_rgba`.
**Code for reproduction**
    import numpy as np
    from matplotlib.colors import Normalize
    from matplotlib import cm
    y = np.linspace(0.0, 1.0, 4)
    y[1] = np.nan
    norm = Normalize(0.0, 1.0)
    colormap = cm.ScalarMappable(norm, 'rainbow')
    colors = colormap.to_rgba(y)
    print(colors)
**Actual outcome**
    /opt/local/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/matplotlib/colors.py:496: RuntimeWarning: invalid value encountered in less
      cbook._putmask(xa, xa < 0.0, -1)
    [[  5.00000000e-01   0.00000000e+00   1.00000000e+00   1.00000000e+00]
     [  5.00000000e-01   0.00000000e+00   1.00000000e+00   1.00000000e+00]
     [  8.33333333e-01   8.66025404e-01   5.00000000e-01   1.00000000e+00]
     [  1.00000000e+00   1.22464680e-16   6.12323400e-17   1.00000000e+00]]
**Expected outcome**
NaN values should be quietly handled. I think the most reasonable output would
be to fill the color array with np.nan rather than copy the previous entry.
    [[  5.00000000e-01   0.00000000e+00   1.00000000e+00   1.00000000e+00]
     [  NaN              NaN              NaN              NaN]
     [  8.33333333e-01   8.66025404e-01   5.00000000e-01   1.00000000e+00]
     [  1.00000000e+00   1.22464680e-16   6.12323400e-17   1.00000000e+00]]
**Matplotlib version**
  * Operating system: OSX
  * Matplotlib version: 2.0.2
  * Matplotlib backend: module://ipykernel.pylab.backend_inline & MacOSX
  * Python version: 3.6.3
  * Jupyter Notebook version: 5.2.0
  * Other libraries: None