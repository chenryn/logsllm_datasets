Basics of Linux
# Remove all rules
iptables -F
Save your changes
Your changes will only be saved and therefore in action until you restart iptables. So they will
disappear every time you reboot unless you save the changes. To save the changes on ubuntu you do
sudo /sbin/iptables-save
Measuring bandwidth usage
There are a few different tools in hour arsenal that we can use to measure bandwidth usage. We will
start with iptables.
To view the input and output traffic we just list the rules with some verbosity.
iptables -L -v
# Stdout
Chain INPUT (policy ACCEPT 6382 packets, 1900K bytes)
pkts bytes target prot opt in out source destination
Chain FORWARD (policy ACCEPT 0 packets, 0 bytes)
pkts bytes target prot opt in out source destination
Chain OUTPUT (policy ACCEPT 4266 packets, 578K bytes)
pkts bytes target prot opt in out source destination
So clean this up and reset the count we can do the following
# Restar the count
iptables -Z
# Remove all the rules, FLUSH them
iptables -F
So now we just need to add our rules. A simple script for this would be
#!/bin/bash
iptables -F
iptables -I INPUT 1 -p tcp -j ACCEPT
Then check out the traffc with
iptables -L -v --line-numbers
Examples
Block outgoing connections to a specific ip
iptables -A OUTPUT -d 198.23.253.22 -j DROP
https://www.digitalocean.com/community/tutorials/how-to-list-and-delete-iptables-firewall-rules
Troubleshooting
30
Basics of Linux
Have you tried turning it on and off?
I have had problems with the network-adapter not starting or something like that, on Ubuntu. You can
try to restart the network manager if this happens:
sudo service network-manager restart
Magical rfkill
If for some reason the wifi is blocked you can unblock it (or block it) with rfkill.
$ rfkill list
0: phy0: Wireless LAN
Soft blocked: no
Hard blocked: no
2: hci0: Bluetooth
Soft blocked: no
Hard blocked: no
To block or unblock the phy0 from the example above you do:
# Block
rfkill block 0
# Unblock
rfkill unblock 0
If there is a hard block it means that there is a physical switch on you machine that you need to
switch off.
DNS
Another rather messy area is DNS. The reason for this is that we have a few different players here,
/etc/resolv.conf, resolvconf, dnsmasq and the dreaded NetworkManager.
References
https://linuxjourney.com/
https://github.com/jlevy/the-art-of-command-line
31
Bash-scripting
Bash-scripting
Bash-scripting
Variables
# There can't be any space between the variable name and the equal sign. It has to be varname=command
battery_time=$(cat /sys/class/power_supply/BAT0/capacity)
# The variables can then be used like this
echo "$battery_time"
Iterate over a file
This script will iterate over a file and echo out every single line:
#!/bin/bash
for line in $(cat file.txt);do
echo $line
done
Another way of writing is this:
#!/bin/bash
while read p; do
echo $p
done <file.txt
For-loops
#!/bin/bash
for ((i = 0; i < 10; i++)); do
echo $i
done
Another way to write this is by using the program seq. Seq is pretty much like range() in python.
So it can be used like this:
#!/bin/bash
for x in `seq 1 100`; do
echo $x
done
If statement
32
Bash-scripting
$1 here represent the first argument.
if [ "$1" == "" ]; then
echo "This happens"
fi
If/Else
#!/bin/bash
if [ "$1" == "" ]; then
echo "This happens"
else
echo "Something else happens"
fi
Functions
#!/bin/bash
function myfunction {
echo "hello world"
}
Command line arguments
Command line arguments are represented like this
#!/bin/bash
$1
This is the first command line argument.
Daemonize an execution
If you do a ping-sweep with host the command will take about a second to complete. And if you run
that against 255 hosts I will take a long time to complete. To avoid this we can just deamonize every
execution to make it faster. We use the & to daemonize it.
#!/bin/bash
for ip in $(cat ips.txt); do
ping -c 1 $ip &
done
Use the output of command
It has happened to me several times that I want to input the output of a command into a new
command, for example:
I search for a file, find three, and take the last line, which is a path. Now I want to cat that path:
33
Bash-scripting
#!/bin/bash
locate 646.c | tail -n 1
This can be done like this:
#!/bin/bash
cat $(locate 646.c | tail -n 1)
34
Vim
Vim
Vim
http://www.viemu.com/a-why-vi-vim.html
And also this classic answer: https://stackoverflow.com/questions/1218390/what-is-your-most-
productive-shortcut-with-vim
Core concepts
In vim you have the concept of buffers.
# List buffers
:buffers
# Switch buffer
# By number
b1
b2
# By name
b [name]
# Close/delete a buffer
:bdelete
:bd
Movement - Motion commands
Left,up,down,right
hjkl
start of line
0 (zero)
end of line
$
beginning of next word
w
beginning of next word, defined by white space
W
end of the next word
35
Vim
e
end of the next word, defined by white space
E
back to the beginning of previous word
b
back to the end of previous word
B
go to next character of your choice
If you want to go to the next comma
f,
start of file
gg
end of file
G
Operators
Operators are commands that do things. Like delete, change or copy.
c - change
ce - change until end of the word.
c$ - change until end of line.
Combining Motions and Operators
Now that you know some motion commands and operator commands. You can start combining them.
dw - delete word
d$ - delete to the end of the line
Count - Numbers
You can add numbers before motion commands. To move faster.
4w - move cursor three words forward
0 - move curso to the start of the line
You can use numbers to perform operations.
d3w - delete three words
3dd - delete three lines
36
Vim
Replace
If you need to replace a character, there is no need to enter insert-mode. You can just use replace
Go to a character and the press r followed by the character you want instead.
rp if you want to replace p.
R
Clipboard
In order to copy something FROM vim to the OS-clipboard you can do this:
The " means that we are not entering a registry. And the * means the OS-clipboard. So we are
yanking something and putting it in the OS-clipboard registry.
"*y
Substitute - Search and replace
:s/thee/the/g
Entering insert-mode
i - current character
o - next line
O - line before
a - end of word
A - end of line
.vimrc
Here is all your vim-configuration.
Plugins
Install vundle here
https://github.com/VundleVim/Vundle.vim
Add plugin
Add plugin to your .vimrc-file and then open vim and write
:PluginInstall
37
Windows
Windows
Windows
Whether you like it or not Windows is the most common OS for desktop users in the world. So for a
pentester it is fundamental to understand the ins and outs of it.
So this chapter will contain some basics about Windows and windows networks.
We will also look a bit at PowerShell and of course the good old CMD.
38
Basics of Windows
Basics of Windows
Basics of windows
Versions of Windows
Due to Windows irregular way of naming their operating systems it can be a bit hard to keep track on.
So here is a list of the desktop OS, and then a list of Servers.
Windows desktops OS
Operating System Version Number
Windows 1.0 1.04
Windows 2.0 2.11
Windows 3.0 3
Windows NT 3.1 3.10.528
Windows for Workgroups 3.11 3.11
Windows NT Workstation 3.5 3.5.807
Windows NT Workstation 3.51 3.51.1057
Windows 95 4.0.950
Windows NT Workstation 4.0 4.0.1381
Windows 98 4.1.1998
Windows 98 Second Edition 4.1.2222
Windows Me 4.90.3000
Windows 2000 Professional 5.0.2195
Windows XP 5.1.2600
Windows Vista 6.0.6000
Windows 7 6.1.7600
Windows 8.1 6.3.9600
Windows 10 10.0.10240
Windows Server
Windows NT 3.51 NT 3.51
Windows NT 3.5 NT 3.50
Windows NT 3.1 NT 3.10
Windows 2000 NT 5.0
Windows 2000 Server
Windows 2000 Advanced Server
Windows 2000 Datacenter Server
Windows NT 4.0 NT 4.0
Windows NT 4.0 Server
Windows NT 4.0 Server Enterprise
Windows NT 4.0 Terminal Server Edition
Windows Server 2003 NT 5.2
39
Basics of Windows
Windows Small Business Server 2003
Windows Server 2003 Web Edition
Windows Server 2003 Standard Edition
Windows Server 2003 Enterprise Edition
Windows Server 2003 Datacenter Edition
Windows Storage Server
Windows Server 2003 R2 NT 5.2
Windows Small Business Server 2003 R2
Windows Server 2003 R2 Web Edition
Windows Server 2003 R2 Standard Edition
Windows Server 2003 R2 Enterprise Edition
Windows Server 2003 R2 Datacenter Edition
Windows Compute Cluster Server 2003 (CCS)
Windows Storage Server
Windows Home Server
Windows Server 2008 NT 6.0
Windows Server 2008 Standard
Windows Server 2008 Enterprise
Windows Server 2008 Datacenter
Windows Server 2008 for Itanium-based Systems
Windows Server Foundation 2008
Windows Essential Business Server 2008
Windows HPC Server 2008
Windows Small Business Server 2008
Windows Storage Server 2008
Windows Web Server 2008
Windows Server 2008 R2 NT 6.1
Windows Server 2008 R2 Foundation
Windows Server 2008 R2 Standard
Windows Server 2008 R2 Enterprise
Windows Server 2008 R2 Datacenter
Windows Server 2008 R2 for Itanium-based Systems
Windows Web Server 2008 R2
Windows Storage Server 2008 R2
Windows HPC Server 2008 R2
Windows Small Business Server 2011
Windows MultiPoint Server 2011
Windows Home Server 2011
Windows MultiPoint Server 2010
Windows Server 2012 NT 6.2
Windows Server 2012 Foundation
Windows Server 2012 Essentials
Windows Server 2012 Standard
Windows Server 2012 Datacenter
40
Basics of Windows
Windows MultiPoint Server 2012
Windows Server 2012 R2 NT 6.3
Windows Server 2012 R2 Foundation
Windows Server 2012 R2 Essentials
Windows Server 2012 R2 Standard
Windows Server 2012 R2 Datacenter
Windows Server 2016 2016 NT 10.0
Windows Networks
There are mainly two ways to structure a Windows network. One is using a server-client model called
Domain and the other is through a peer-to-peer like model called Worksgroup.
Windows domain
On Windows domain all users are connected to a domain controller.
So when you log in to your machine it authenticates against the domain controller. This way it is
ultimately the domain controller that decides security policy. Length of password, how often it should
be changed, disabling accounts. If a users quits his/hers job you can just remove his/her account. The
person in control over the domain controller is in control of the network. As a pentester you are most