title:Influence of the Packet Size on the One-Way Delay in 3G Networks
author:Patrik Arlos and
Markus Fiedler
Inﬂuence of the Packet Size on the One-Way
Delay in 3G Networks
Patrik Arlos and Markus Fiedler
Blekinge Institute of Technology
{patrik.arlos,markus.fiedler}@bth.se
Karlskrona, Sweden
Abstract. We currently observe a rising interest in mobile broadband,
which users expect to perform in a similar way as its ﬁxed counterpart.
On the other hand, the capacity allocation process on mobile access links
is far less transparent to the user; still, its properties need to be known in
order to minimize the impact of the network on application performance.
This paper investigates the impact of the packet size on the minimal
one-way delay for the uplink in third-generation mobile networks. For
interactive and real-time applications such as VoIP, one-way delays are
of major importance for user perception; however, they are challenging
to measure due to their sensitivity to clock synchronisation. Therefore,
the paper applies a robust and innovative method to assure the quality
of these measurements. Results from measurements from several Swedish
mobile operators show that applications can gain signiﬁcantly in terms
of one-way delay from choosing optimal packet sizes. We show that, in
certain cases, an increased packet size can improve the one-way delay
performance at best by several hundred milliseconds.
1 Introduction
Increasingly many devices use mobile connectivity for the exchange of data.
Users expect the emerging mobile broadband to perform in a similar way as its
ﬁxed counterpart, no matter to which extent the medium is shared. In the third
generation of mobile communications, represented by WCDMA and HSDPA, the
per-user capacity allocation depends amongst others on the radio conditions,
the user density, the mobility pattern, the oﬀered traﬃc, etc. It is, however,
not communicated explicitly towards user and the applications that might need
this information for yielding the best performance, given the speciﬁc allocation.
This imposes the need for end-to-end measurements with the goal to highlight
network impact on the performance parameters of interest.
Given this background, this paper investigates the impact of the packet size
on the minimal one-way delay (OWD) for the uplink in third-generation mobile
networks, which is an important performance parameter for interactive and real-
time applications. In particular, the minimal OWD provides information about
the best-possible performance with given settings, undisturbed by congestion,
radio problems, etc. However, we should not omit importance for the uplink’s
A. Krishnamurthy and B. Plattner (Eds.): PAM 2010, LNCS 6032, pp. 61–70, 2010.
c(cid:2) Springer-Verlag Berlin Heidelberg 2010
62
P. Arlos and M. Fiedler
OWD behaviour as it will aﬀect the TCP performance accross mobile networks,
as the acknowledgement packets utilizes this link. However, in this paper, we will
not investigate the average and maximum OWD values for the uplink, as these
are more likely to exhibit temporal and spactial artifacts, varying from test to
test. As OWD measurements are very sensitive to clock synchronisation issues,
the paper also presents and demonstrates a robust and innovative method to
assure the quality of these measurements. We focus on the minimal OWD as our
goal is to investigate the best-possible system behaviour, instead of the statistical
behaviour of the system. Hence, our results can be seen as best case with regards
to the OWD perceived by an application.
The paper is organized as follows. First, we describe and verify the measure-
ment method in Section 2. Section 3 describes and discusses the experimental
setup and analysis procedure. In Section 4, minimal OWD in several Swedish
networks are evaluated as a function of the packet size. Section 5 concludes the
paper and points out future work.
2 Method
The fundamental problem when evaluating the OWD is how to handle the clock
synchronization. The OWD is, as such, simple to calculate. The OWD of the ith
packet, di, is calculated as:
di = Ti,b − Ti,a
(1)
where Ti,a is the arrival time of the ith packet at location a; correspondingly Ti,b
is the arrival time of the same packet at location b. In the general case, the time
stamps (Ti,x) are obtained from two diﬀerent clocks. To get an unbiased OWD
estimate, these clocks should be synchronized. In [1] the authors investigate
the three main synchronisation methods NTP, GPS and IEEE1588 used for
OWD measurements. Usually the Network Time Protocol (NTP) [2] is used.
This enables the clocks to be synchronized within 10 − 20 ms for WAN, and
< 1 ms for LAN. If the synchronisation needs to be better, then a GPS solution
is needed. Together with NTP, this allows a synchronisation in the order of 1 μs.
The current state of the art is to use Endace [3] DAG cards together with a GPS,
then the theoretical synchronisation is in the range of 60 ns. However, according
to our own experience [6], this is diﬃcult to obtain in practice, as we still have
two independent clocks. In [4] the author described the internal functioning of
the time-keeping in side of the DAG cards, and in [5] the authors describe a
method to synchronize clocks accross the Internet. Regardless of what method
or technique used for synchronisation, the OWD estimations can at the worst
be twice that of the synchronisation level [6].
Our method uses wiretaps and a special wiring in conjunction with DAG cards
to obtain the time stamps from the same clock. In Figure 1 a schematic of the
wiring is shown. When a packet is sent from SRC to DST it will travel across the
upper wire (dashed line). As is passes the ﬁrst wiretap A, a copy of the packet is
made and is sent to the interface dag00, where it arrives it at time T1,A. At the
same time the original packet makes its way across the network and eventually
Inﬂuence of the Packet Size on the One-Way Delay in 3G Networks
63
A
Wiretap
B
Wiretap
SRC
...
DST
T1,A T1,B
T2,A T2,B
dag00 dag01
dag10 dag11
MP
Fig. 1. Wiring method
reaches wiretap B. Here, a copy is sent to interface dag01, where it is received at
T1,B. Similarly, if a packet is sent from DST to SRC the packets are duplicated by
the wiretaps and made available to the dag1x interfaces. The main drawback with
this wiring is that we require close proximity between SRC and DST. The actual
distance is determined by the technology that carries the traﬃc from the wiretap
to the DAG cards. The main beneﬁt with this wiring, is that the packet will be
time stamped by the same clock, thus subject to the same drift/skew if present.
Let t0 be the time when the packet actually passes wiretap A, and t1 when it
passes wiretap B. Then T1,A = t0 + La/Ps, where La is the cable length between
wiretap A and dag0, and Ps is the propagation speed in that cable. Similarly,
we deﬁne T1,B = t1 + Lb/Ps = t0 + L/Ps + Lb/Ps, where Lb is the cable distance
from wiretap B to dag0, and L is the cable distance between wiretap A and B.
The OWD is then obtained as:Δ = T1,B − T1,A = L/Ps + Lb−La
. So if we select
Lb = La we cancel the second factor and obtain the desired OWD between the
wiretaps.
Ps
To verify the method, we conducted two experiments using the setup as shown
in Figure 1. In the ﬁrst experiment the network in between the wiretaps was
replaced by a 10 m CAT5e cable, in the second a 25 m cable was used instead.
The CAT5e cable has a Ps of 0.59c ∼ 0.64c [7,8], where c = 299 792 458 m/s. The
theoretical propagation time (Pt) is then between 52.1 ns and 56.6 ns for the
ﬁrst experiment, and 130.3 ns and 141.4 ns for the second. In Table 1 we show
the corresponding results. As we are limited by the DAG 3.6 card resolution of
approximately 60 ns [4,6], our OWD values are multiples of this. Our results are
within the span given by the theoretical results. Obviously, the method allows
us to accurately detect changes in the OWD on the scale of a few nanoseconds.
Table 1. Summary statistics from the veriﬁcation experiments
Exp Minimum Mean Max Std.dev Theoretical
52.1 ∼ 56.6
130.3 ∼ 141.4
[ns]
[ns]
54.7 119.3
139.2 179.0
[ns]
17.4
28.2
[ns]
[ns]
0.0
119.0
1
2
64
P. Arlos and M. Fiedler
3 Setup
To evaluate the mobile networks, we used the setup shown in Figure 2. Here
SRC is sending traﬃc to DST. This is done via a Gateway (GW) that uses a
Huawei E220 USB modem to connect to the mobile network. In-between the
SRC and GW, we placed wiretap A. The other wiretap B is placed just in front
of DST. The SRC and DST (both are P2-400 MHz with Linux 2.4 kernels) are
connected with 10 Mbps full-duplex Ethernet cards (3Com). The GW is a Dual
AMD Athlon 64 with 2 Gbytes of RAM (Windows XP SP2). The GW was con-
ﬁgured for Internet sharing of the mobile network and no ﬁrewall was active.
The SRC computer connected directly to the built-in Ethernet card (Broadcom)
of the GW. The wiretaps feed into a Distributed Passive Measurement Infras-
tructure [9] enabled Measurement Point (MP) that stored the packet trace to
ﬁle. Furthermore, the DAG cards were synchronised using both NTP and GPS.
A
Wiretap
SRC
Δ1
GW
Δ2
Δ3
Δ4
B
Wiretap
Operator
Network
Internet
DST
Radio tower
MP
Fig. 2. Setup used in experiments
3.1 Traﬃc Generation
To generate data we used a C++ program that sends UDP datagrams and
allows us to control packet sending rate and datagram size. Furthermore, the
progam uses an application layer header with three ﬁelds. These ﬁelds allow us
to separate experiments (experiment id), experiment run (run id), as well as
packets within a particular experiment run (sequence number). The sequence
number starts at zero and is incremented by one for each transmitted datagram.
Based on these three ﬁelds, we can uniquely identify each packet, thus avoiding
any ambiguities associated with hashing.
During the evaluation of the mobile networks we used two streams running
in parallel. The ﬁrst sends one packet of size K bytes every Ts second, which
is done 200 times. It then waits for a ﬁxed amount of time, and then starts
to send another batch of 200 packets, this time with a larger packet size. The
procedure is then repeated for all the packet sizes we wish to investigate. The
second stream runs continously throughout the evaluation of all the diﬀerent
packet sizes, sending one 48 byte packet every 10 second. The purpose with
this stream is to detect any time-of-day based variations in the network. As the
purpose is to ﬁnd the OWD, we do not want to stress the system so that it needs
to queue our traﬃc. Using the two streams we will at most inject (1468 + 48)
bytes during one second.
Inﬂuence of the Packet Size on the One-Way Delay in 3G Networks
65
3.2 Delay Calculation
As we are in control of both sender and receiver, we can easily identify both
sending and receiving IP address as well as UDP port numbers. We then use the
application header for the individual packet identiﬁcation. Once identiﬁed, we
can calculate the OWD for the individual packets. Using the same notation as
before, the delay would be calculated as deﬁned in Equation 1. However, due to
numerical issues [6], this is not recommended. It is better to use the following
equation:
di = (cid:2)Ti,a − (cid:2)Ti,b (cid:2)Ti,x = Ti,x − (cid:3)T1(cid:4),
(2)
where T1 is the arrival time of the ﬁrst packet leaving the sender in that exper-
iment. This will avoid having the time stamps truncated by the precision of the
analysis tool.
3.3 Delay Components
The OWD that we will calculate has four contributors, see Figure 2. Δ1 is the
delay contribution by the GW, Δ2 that of the radio network, Δ3 that of the core
network of the operator, and the last contribution Δ4 comes from the Internet.
Out of these four, we cannot measure or estimate Δ2 and Δ3 alone, as this means
entering the domain of the operator.
We can estimate Δ4 by using ICMP ping to the operator’s Internet exchange.
From our vantage point in the Internet, the operators are between ﬁve or six
hops away, and between us and them we have the Swedish University Network
(SUNET) [11] with optical multi-gigabit links. Hence the impact of this will not
be negligble, but it will be quite small and stable, the average RTT between DST
and the operator Internet exchange is 15 ms for all three operators. Hence, as the
links are symetrical, the OWD contribution will be around 7.5 ms. Furthermore,
we can ignore the packet size as the links have such high capacity that the
serialisation delay is neglible [10].
In order to quantify Δ1, we designed a special experiment. Instead of using the
E220 USB, we replaced it with a D-link DUB-E100 FastEthernet USB adaptor
that allows us to connect directly to the destination through Ethernet. As we are
using a USB NIC, the packets travelling across this NIC will receive the same
treatment as those that are sent across the modem.
From the collected data, the second stream did not detect any time-varying
behavior. In fact, 37% of the packets experienced a delay less than 0.11 ms, and
the maximum delay was 1.2 ms. The mean was 0.4855 ms with a standard devia-
tion of 0.3362 ms. Apart from this, the GW seems quite stable in its handling of
the packets. In Figure 3 we show the OWD through the GW for diﬀerent packet
sizes. We see that the OWD increases linearly, as expected [10]. The peaks noti-
cable for the maximum values, are the result of single packets experiencing larger
delays. Furthermore, the largest minimum OWD is just above 1.3 ms. If we use
the minimum delay as a base, we can construct a rough model for Δ1 given in
ms:
Δ1(L) = 8.354e−5 · L + 0.078
(3)
66
P. Arlos and M. Fiedler
]
s
m
[
D
W
O
7
6
5
4
3
2
1
0
Min
Mean
Max
200
400
600
800
1000
1200
1400
IP Packet size [bytes]
Fig. 3. Minimal OWD through the GW for diﬀerent packet sizes
Here L represents the IP packet length in bytes. The 0.078 ms represents the
minimal time through the GW, and the constant (8.354e−5) corresponds roughly
to the capacity of the interface, i.e. 10 Mbps.
As both Δ1 and Δ4 turned out to be signiﬁcantly smaller than the OWD
measured in the subsequent experiments, they are neglected from now on.
4 Evaluation of Mobile Networks
We conducted experiments on three diﬀerent Swedish operators, the experiments
were conducted at the end of September and early October 2009. Two of them (A
and B) share the radio access (RA), while the third (C) uses a diﬀerent RA. The
experiments focus on the OWD of the uplink; furthermore, all experiments were
done while the sender was stationary. We focus on the uplink as this is believed