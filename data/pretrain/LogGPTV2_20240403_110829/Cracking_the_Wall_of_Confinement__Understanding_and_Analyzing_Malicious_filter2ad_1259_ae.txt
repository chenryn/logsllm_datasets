and setting a new A record. The set IP address points to our webserver.
DNS service. As a result, the NS record became a dangling
record because it was not removed from the (.org) TLD zone
by the domain’s owner (i.e., the take-down party). So, once the
adversary obtained at least one of the nameservers’ values that
were set for the taken-down domain, he/she could set a new A
record and assign it to an IP that he/she controlled. As a result,
the adversary could capture all the domain’s trafﬁc through the
IP he/she chose.
We observed such a problem in a domain that was taken
down by the FBI (i.e., carders.org). We successfully hijacked
the domain and pointed it to an IP under our control. This
domain was ﬁrst identiﬁed by checking domains seized by
the FBI that also utilized a managed DNS provider, such
as Amazon Route 53. As mentioned in Section III-A, we
collected a list of domains owned by the FBI by performing a
reverse WHOIS lookup on the FBI’s email. We then checked
if any domain was resolved through a managed DNS provider
and found one domain carders.org that utilized Amazon Route
53. As shown in Figure 9, when sinkholed on 2012-06-27 [34],
carders.org was revolved by four nameservers provided by
Amazon Route 53. These records were still appearing in the
(.org) TLD zone. Also, as shown in the ﬁgure, the last
seen timestamp of the domain’s A record is 2013-01-05, and
no further A records are seen after early 2013. Therefore,
we further veriﬁed whether the hosted zone on Route 53
that manages carders.org is deactivated by querying the four
nameservers using the dig utility. As a result, all queries
returned ServerFail, which is an indicator that the account
was deactivated. Thus, carders.org has dangling NS record set.
this dangling point could be controlled,
we also used Amazon Route 53 to create a hosted zone for
carders.org in the hope that at least one of the original domain’s
nameservers in Figure 9 would be assigned to us. After several
attempts, we successfully acquired one such server on the NS
record (i.e., ns-1168.awsdns-18.org) and set a new A
record for carders.org to an IP under our control (18.188.96.3).
Figure 10 shows the new NS and A records of carders.org.
To prove that
We
(via
PI:EMAIL found on WHOIS record retrieved
reported
issue
ﬁrst
this
to
the
FBI
2011-05-15
2012-02-22
2015-10-01
2012-03-01
2014-07-22
2015-08-26
2016-11-26
2018-02-14
88,392
59,359
59,359
29,677
29,677
29,677
29,677
29,677
Yes
Yes
Yes
Yes
Yes
No
Yes
Yes
Re-registration Date
# of Domains
NS Activated?
Domain
ns.cwgsh.com
ns.cwgsh.net
ns.cwgsh.org
TABLE III: Re-registration of cwgsh.{com,net,org} showing the
number of domains resolved by the namservers after each re- reg-
istration.
on 2018-05-20). We did not hear back from them probably
because the domain had expired already. Therefore, we
reported the issue to the Public Interest Registry (.org TLD
registry). We recommended that
they address the problem
by placing ServerHold on the domain, which they did on
2018-10-11.
Expired sinkhole. We found that some sinkhole nameservers’
domains were allowed to expire without updating the NS
record of the sinkholed domains. This allowed the adversary
to purchase expired domains that were used as a nameserver
sinkhole, set a nameserver on it, and then set A records for
the sinkholed domains to point to IPs he/she controlled. Such
changes are often stealthy, as the sinkhole operator may not
continuously check whether these domains are still pointing to
the sinkhole’s IP, as they are supposed to be.
Our study brought to light the potential impacts of such a
problem, particularly the one found in a major sinkhole oper-
ator, Conﬁcker Working Group (CWG). CWG is a consortium
formed to contain and take down the Conﬁcker worm [4].
Its core members include Verisign (registry), Shadowserver
Foundation, Neustar (registry), Microsoft, and others. The
consortium used three nameservers (i.e., ns.cwgsh.com,
ns.cwgsh.net, and ns.cwgsh.org) to sinkhole Con-
ﬁcker worm domains. However, these nameservers’ own do-
mains expired on 2011-02-26 and were re-registered multiple
times, as shown in Table III. The new owners of these domains
(i.e., cwgsh.com, cwgsh.net, and cwgsh.org) had full control
over the trafﬁc of thousands of Conﬁcker domains that used
to point to the sinkholes.
We studied the Conﬁcker domains hosted on these three
sinkhole nameservers. Originally,
these nameservers were
sinkholing 212K domains. After their domains expired, some
seized domains they managed were moved to new sinkholes
(i.e., ns.conficker-sinkhole.{com,net,org}) and
some expired. However, 88,392 domains still used these three
nameservers even after their expiration. Table III shows the
number of the domains hosted on these three CWG sinkholes
one day after the re-registration of cwgsh.{com,net,org} by
new owners. Here, we calculated the number of the domains
based on the last_seen and the first_seen dates re-
ported by the PDNS, and identiﬁed whether an A record
is set for ns.cwgsh.{com,net,org}, which suggests a
potential attempt to capture the trafﬁc of the seized domains.
We also noticed that the IP address for the fourth re-registration
of ns.cwgsh.org was pointing to 130.245.32.52 (State
University of New York at Stony Brook), which may indicate
that it was registered by a researcher.
It is not clear what exactly the new owners of the three
domains have been doing with the trafﬁc they receive from
the seized domains. However, we observed that
they are
indeed actively utilizing some of them. For example, one of
www.zzyiwabmkz.info.
ww9.zzyiwabmkz.info.
A
A
190.2.131.62
166.78.101.108
Fig. 11: A records set for new subdomains of zzyiwabmkz.info
observed in July 2018. After expiration of cwgsh.{com,net,org}.
aabdoeskhl.org. NS ns.cwgsh.com.
NS ns.cwgsh.net.
NS ns.cwgsh.org.
(a)
aabdoeskhl.org. NS ns.cwgsh.com.
NS ns.cwgsh.net.
NS ns.cwgsh.org.ns-not-in-service.org.
(b)
and .ws.
The most popular TLDs
Fig. 12: Changes in NS record for aabdoeskhl.org (a) before and (b)
after expiration of cwgsh.{com,net,org}.
the expired sinkhole domains’ new owner set A records for
new hosts he/she created under zzyiwabmkz.info (one of the
sinkholed domains), as shown in Figure 11.
in these
seized domains
Interestingly, we ob-
are .org, .info,
the NS records of all .org sinkholed do-
served that
mains were either updated to point
to a new sinkhole,
ns.cwgsh.org.ns-not-in-service.org, in about a
month after the expiration of ns.cwgsh.org, or they ex-
pired. However, this particular update is not effective because
the two expired sinkholes ns.cwgsh.{com,net} were still
within the NS record set; an example is shown in Figure 12.
A more effective update was performed on .ws domains
several months after the expiration of the sinkholes. Specif-
ically, .ws domains were set to be resolved by new sink-
holes, ns.conficker-sinkhole.{com,net,org}. In
contrast, as of July 1, 2018 no updates were performed on
around 30K .info domains.
As of July 1, 2018, the total number of seized domains
that are still pointing to the three expired sinkholes are 29,677,
all belonging to the .info TLD. We reported this issue to
Aﬁlias [1], the .info TLD registry, and provided them the
list of problematic domains. Although it is a good practice to
sinkhole malicious domains as long as they pose a risk, when
the domains of the sinkhole servers expire, this treatment could
cause the seized domains to stay linked to the expired sinkhole
domains for a long time. Therefore, sinkhole operators and
registries are advised to maintain updated NS records for their
seized domains, especially ones that are required to be taken-
down for a long time.
V. TRACING RELEASED DOMAINS
In this section, we report on the malicious reuse of seized
domains. We ﬁrst measure the availability of previously taken-
down domains for repurchasing after their release. We then
reveal actual reuse cases of released domains.
A. Domain Availability
We ﬁrst analyzed whether the taken-down domains in
our dataset were available for purchase or not by querying
a registrar (i.e., Dynadot [10]) via their API. This regis-
trar supports a wide range of TLDs and has provided the
availability information for around 95% of the taken-down
domains in our dataset. We queried this API twice every week
starting from October 2017 until May 2018 to monitor whether
12
these taken-down domains were on the market. We found that
350K domains (56.46%) of all the taken-down domains in
the past six years have been released. Of these, 52.13% were
DGA domains. More interestingly, we also found that 7,148
(14.14%) of the domains taken down in the past ten months
have been released back to the public registry domain pools.
This time span is regarded as short, as there is a low chance that
infected hosts get cleaned during such a short duration [56].
In addition, domains that used to carry illicit activities can still
have their customers back.
Looking at
the percentage of all released domains in
different TLDs (Figure 6c), we observed that .org and
.in have less than 20% of their total taken-down domains
available, followed by .biz, (34.51%) and .me (33.09%).
The observation about .org aligns with our ﬁnding in Section
IV-B, which shows that the .org TLD keeps the majority of
their taken-down domains seized for a long time.
B. Malicious Reuse
We investigated whether the seized domains were abused
again after they were purchased. However, we can not rely
on historical blacklists to prove malicious reuse of taken-
down domains due to the limited overlap between sinkholed
domains and blacklists (see Section IV-A) [45]. Furthermore,
blacklists contain not only released and reused domains but
also sinkholed domains, making it impractical to prove the
malicious reuse after the domain is released. Therefore, we
have to resort to a more conservative approach.
To address this issue, we employed a set of heuristics
to identify the conﬁrmed abusive reuse of previously seized
domains. Speciﬁcally, we ﬁrst identiﬁed the domains that were
sinkholed at least twice by different actors. For each of them,
we marked the timespan between two sinkholed durations as
its release duration. We then ﬁltered domains in which their
release duration was more than 75 days (which allowed for re-
registering). Further, we checked whether these domains were
indeed active during their release durations by checking the
PDNS to ﬁnd out whether they were assigned to IPs. In this
way, we obtained 133 domains. To prove the malicious use
for these domains, we checked the Wayback Machine [18]
to see if it has historical snapshots of these domains and we
found 28 domains that have snapshots. Further, we manually
investigated their webpages’ historical snapshots (28 domains’
snapshots were available) to check their abusive behaviors
during the calculated release duration. Thus, we found two
conﬁrmed cases, which are:
on-drugstore.com. This domain was seized three times. Be-
fore each seizure, the domain always hosted a website selling
illicit pharmaceutical products. From historical WHOIS, we
found that it was ﬁrst taken down on 2008-12-07 and then
moved to another registrar (i.e., NameCheap [24]) on 2009-
03-01. Since then, the domain was active again. The second
take-down occurred on 2010-06-07 when the domain was
sinkholed by the registrar for at
least 10 days based on
historical WHOIS and PDNS. Then, the domain was dropped
by the registrar and re-registered again on 2010-06-17 with
another registrar (i.e., 101domain), based on historical WHOIS
information. Then, the website was up and running. For the
third and ﬁnal time, the domain was taken down and sinkholed
by law enforcement agencies, including the FBI, on 2017-
03-16. Interestingly, its registrant email address appears to
13
have remained the same since July 2007, which indicates that
the domain was abused by the same operator during all the
three seizures. Interestingly, we observed that this domain is
a squatting domain for a reputable health and beauty care
retailer, drugstore.com. Therefore, we believe the adversary
kept tracing this domain because it was confusingly similar
to a popular Internet brand that would attract large volume of
trafﬁc even after it was taken down three times.
ugnazi.com. This domain belongs to a hacktivist group. It was
taken down by the FBI on 2012-06-26 [23] with its registrant
information changed to the FBI. However, upon the domain’s
expiration, the registrant information went private, and the
registrar was transferred from NameCheap [24] to Enom [30]
based on historical WHOIS information. A snapshot of the
website from the Wayback Machine on 2014-02-02 indicates
that the domain was available for sale. On 2014-07-22, the
record shows that the domain was repurchased by a group
who claimed to be the original hacktivist group, and it is still
running as of the date of writing this research.
VI. DISCUSSION
Domain take-down regulation. Our study uncovered short-
comings within the take-down procedures implemented today.
We found that the sinkhole duration varies across different
operators, as evident in Figure 8a. For example, Microsoft
maintains an average take-down duration of three years, while
registrars average one year. Further, delisting and releasing
domains is operator speciﬁc and ﬂawed in some cases such
as domain hopping in Section IV-B. Lastly, outdated DNS
conﬁgurations, such as deactivated accounts at cloud DNS
services and expired nameserver domains, can lead to serious
consequences, such as domain hijacking attacks where an
attacker can takeover a sinkhole nameserver and subsequently
control all domains using it. Unfortunately, other than the
general guidelines provided by ICANN [55],
there is no
industry-wide regulation of these procedures allowing take-
down authorities and executors to carry out a domain take-
down as they see ﬁt.
Based on our analysis of these take-down procedures, we
recommend setting speciﬁc policies regulating them. These
policies should address issues such as the update frequency
of DNS settings, take-down duration, and release procedures.
Here, we suggest several practices to consider.
Determining the duration of a domain take-down should
take into account the nature of the malicious act the domain
was involved in. The trafﬁc that a domain receives should