### Paul Marrapese at DEF CON 28: Abusing P2P to Hack 3 Million Cameras

#### Overview
- **Topic**: This talk provides an in-depth look at a "convenience" feature found in millions of IoT devices, specifically peer-to-peer (P2P) connectivity.
- **Devices Affected**: P2P is prevalent in cameras, baby monitors, smart doorbells, DVRs, NAS devices, and alarm systems.
- **Impact**: Hundreds of different brands are affected, highlighting a significant supply chain issue.
- **Vulnerabilities**: P2P exposes these devices to the world, making them instantly accessible even with NAT and firewalls. The obscure architecture and protocol mean these devices are not easily discoverable on Shodan.
- **Exploitation**: The talk will cover how P2P can be abused to remotely attack devices, including stealing credentials via over-the-internet man-in-the-middle (MITM) attacks and exploiting devices behind firewalls to gain root shells.

#### Speaker Bio
- **Name**: Paul Marrapese (OSCP)
- **Location**: San Jose, CA
- **Contact**: @PaulMarrapese / [PI:EMAIL](mailto:PI:EMAIL)
- **Website**: [hacked.camera](https://hacked.camera)
- **Background**: Red team member at a large enterprise cloud company (opinions expressed are solely my own). Specializes in reverse engineering, music production, and photography.

#### Introduction
- **Cats and Cheap Cams**: All good things start with cats, and this talk is no exception. It delves into the world of cheap and potentially shady cameras.

### What is Peer-to-Peer (P2P)?
- **Definition**: In the context of IoT, P2P is a convenience feature for connectivity.
- **Features**:
  - **Plug and Play**: Users can instantly connect to devices from anywhere.
  - **Eliminates Technical Barriers**: No port forwarding, dynamic DNS, or remembering IP addresses required.
  - **Automatic Connections**: Devices automatically accept connections, even with NAT and firewall restrictions.
- **Security Concerns**: These features come at the cost of security, as they expose devices to the world, often with gaping security holes.

### P2P Providers
- **Industry Leaders**:
  - **ThroughTek (TUTK)**: Kalay platform (>66 million devices).
  - **CS2 Network P2P**: (>50 million devices).
    - **Libraries**: PPPP_API, PPCS_API, libPPPP_API, libPPCS_API.
  - **Shenzhen Yunni iLnkP2P**: (>3.6 million devices).
    - **Libraries**: libxqun, libXQP2P_API, libobject, PPPP_API.
- **Functional Clones**: Some providers, like Shenzhen Yunni, offer functionally identical clones of other P2P solutions, even with compatible APIs.

### Risks of P2P
- **Exposure by Design**: P2P is designed to expose devices, and in many cases, there is no way to turn it off.
- **Direct Access**: Anyone with the device's unique identifier (UID) can obtain direct access.
- **Security Weaknesses**: Devices are usually ARM-based, running BusyBox with everything as root, leading to potential eavesdropping, data theft, and disabling of security systems.
- **Remote Code Execution (RCE)**: Pre-auth RCE on millions of devices is a significant concern.

### Anatomy of a P2P Network
- **P2P Servers**:
  - **Gateway**: Manage all devices in the network.
  - **Orchestration**: Coordinate connections between clients and devices.
  - **Control and Command (C&C)**: Owned and operated by device manufacturers, often hosted on Alibaba Cloud or AWS.
  - **Port**: Listen on UDP port 32100.
- **Devices**:
  - **Unique Identifier (UID)**: Comprises a prefix, serial number, and check code.
  - **Prefix**: Vendor/product grouping (up to 8 letters).
  - **Serial Number**: Device identifier (typically 6-7 digits).
  - **Check Code**: Security feature to prevent spoofing.
- **Client**: Desktop/mobile app for connecting to the device using the UID.
- **Protocol**: Entirely UDP-based, with control messages and DRW (device read/write) messages. Developed Wireshark dissector for traffic analysis.

### Connecting to Devices
- **UDP Hole Punching**: A technique to establish direct connections through NAT and firewalls.
- **Relayed Connections**: As a fallback, peers can communicate through a relay server.
- **Superdevices**: Devices that act as relays, supporting the network but potentially violating user bandwidth quotas.

### Hunting for Devices
- **Finding P2P Servers**:
  - **Methods**: Use desktop/phone apps or nmap UDP probes on cloud provider IP ranges.
  - **Discovery**: 618 confirmed P2P servers as of July 2020, with 86% being CS2 and 14% iLnkP2P.
- **Finding Prefixes**:
  - **Inference**: Infer validity from server response codes.
  - **Brute Force**: Brute force all 3-letter combinations in ~1 hour, 4-letter in ~36 hours.
  - **No Rate Limiting**: Discovered 488 distinct prefixes on 487 P2P servers as of July 2020.
- **Finding UIDs**:
  - **Predictable UIDs**: Some iLnkP2P libraries shipped with their secret check code algorithm, allowing connection to any device using iLnkP2P (CVE-2019-11219).

### Exploiting Devices
- **Vulnerability Discovery**:
  - **Firmware Analysis**: Obtained firmware samples from reseller sites.
  - **Buffer Overflow**: Found pre-auth remote code execution (CVE-2020-9527) in Hichip devices.
  - **Password Reset**: LAN password reset vulnerability (CVE-2020-9529).
- **Man-in-the-Middle (MITM) Attacks**:
  - **Over-the-Internet MITM**: P2P servers coordinate all connections, and if influenced, MITM attacks are possible.
  - **Passive Over-the-Internet MITM**: Superdevices relay sessions without secure encryption, allowing interception of traffic.

### Final Thoughts
- **Patching Status**:
  - **Unpatched**: CVE-2019-11219, CVE-2019-11220.
  - **Patch Pending**: CVE-2020-9525, CVE-2020-9526.
  - **Patched**: CVE-2020-9527, CVE-2020-9528, CVE-2020-9529.
- **Bleak Outlook**: Many issues cannot be fixed retroactively, and users often do not update their firmware.
- **Further Research**: More device-specific vulnerabilities, other P2P platforms, and higher up the supply chain.

### Reversing Tips
- **Samples**: Collect as many samples as possible.
- **APKs**: Decompile Java code using tools like JADX.
- **GitHub**: Search for SDKs, docs, client source, and firmware source using interesting filenames or magic strings.

### References
- **Balazs, Zoltan**: "IoT Security Is a Nightmare. But What Is the Real Risk?" (August 21, 2016).
- **Serper, Amit**: "Zero-Day Exploits Could Turn Hundreds of Thousands of IP Cameras into IoT Botnet Slaves" (December 6, 2016).
- **Kim, Pierre**: "Multiple Vulnerabilities Found in Wireless IP Camera (P2P) WIFICAM Cameras and Vulnerabilities in Custom HTTP Server" (March 8, 2017).
- **Martin, Balthasar & Bräunlein, Fabian**: "Next-Gen Mirai" (November 16, 2017).
- **Viehböck, Stefan**: "Millions of Xiongmai Video Surveillance Devices Can be Hacked via Cloud Feature (XMEye P2P Cloud)" (October 9, 2018).

### Contact
- **@PaulMarrapese**
- **[PI:EMAIL](mailto:PI:EMAIL)**
- **[hacked.camera](https://hacked.camera)**

Thank you!