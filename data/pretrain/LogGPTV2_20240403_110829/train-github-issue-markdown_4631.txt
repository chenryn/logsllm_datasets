### Bug summary
SageMath project uses matplotlib for graphics. We are recently upgrading
matplotlib to version 3.6. In this effort, we encountered a failure in this
command:
    plot(2*x+1,(x,0,5), ticks=[[0,1,e,pi,sqrt(20)],2], tick_formatter="latex")
Here we use symbolic constants e, pi, sqrt(20) as major x-axis tick values.
This worked very well up to now. But matplotlib version 3.6 fails this. I
investigated the ultimate source of this failure.
We set the major tick locator as `FixedLocator` with the above symbolic
values, and the minor tick locator to `NullLocator`. When matplotlib renders
the plot, it tries to update minor tick values and calls
`matplotlib.axis.get_minorticklocs()`, which is
        def get_minorticklocs(self):
            """Return this Axis' minor tick locations in data coordinates."""
            # Remove minor ticks duplicating major ticks.
            minor_locs = np.asarray(self.minor.locator())
            if self.remove_overlapping_locs:
                major_locs = self.major.locator()
                transform = self._scale.get_transform()
                tr_minor_locs = transform.transform(minor_locs)
                tr_major_locs = transform.transform(major_locs)
                lo, hi = sorted(transform.transform(self.get_view_interval()))
                # Use the transformed view limits as scale.  1e-5 is the default
                # rtol for np.isclose.
                tol = (hi - lo) * 1e-5
                mask = np.isclose(tr_minor_locs[:, None], tr_major_locs[None, :],
                                  atol=tol, rtol=0).any(axis=1)
                minor_locs = minor_locs[~mask]
            return minor_locs  
Note that `tr_minor_locs` is an empty numpy array and `tr_major_locs` contains
our symbolic values. The line `mask = np.isclose(...)` raises an exception
because it does not understand the symbolic values. This behavior is new due
to code changes in `get_minorticklocs()` in matplotlib 3.6.
Note that as the minor tick locator is `NullLocator`, that is, empty.
`get_minorticklocs()` has nothing to do here. So by this change
    ---    if self.remove_overlapping_locs:
    +++    if len(minor_locs) and and self.remove_overlapping_locs:
matplotlib can save unnecessary computation, and our problem in SageMath will
be solved. So please consider this.
### Code for reproduction
    Explained in Bug summary
### Actual outcome
Explained in Bug summary
### Expected outcome
Explained in Bug summary
### Additional information
_No response_
### Operating system
_No response_
### Matplotlib Version
3.6
### Matplotlib Backend
_No response_
### Python version
_No response_
### Jupyter version
_No response_
### Installation
_No response_