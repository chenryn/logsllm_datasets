The MICARDO platform does not allow setting the value
of the public exponent e. For each key the platform chooses
a random public exponent e, either 2, 3 or 4 bytes in length,
depending on the conﬁguration. This peculiarity is visible in
the certiﬁcates – for all, more than one million MICARDO-
powered ID card certiﬁcates in our dataset, the public expo-
nent value is random, no single value being over-represented.
(a) From the keys generated by the platform
(b) From the ID card certiﬁcates
Figure 9: MICARDO: distribution of the MSB of N
As we see in Figure 9, the distribution of the MSB of N
from the keys generated by the MICARDO platform closely
matches the keys from MICARDO-powered ID card certiﬁ-
cates. Since the distribution of the MSB of N from the keys
generated by MICARDO platform shows a unique pattern
not observed in keys generated by any known software li-
brary (see Figure 12 in [33]), we can conclude that the keys
in MICARDO-powered ID cards have been generated by the
platform. We note, however, that our dataset does not have
enough certiﬁcates issued in the period from 2002 to 2007
to draw deﬁnite conclusions about the keys generated in this
period.
5.1.2 MULTOS
We did not have access to a non-personalized MULTOS plat-
form, therefore we could not generate reference keys. In
our dataset we have 29 262 certiﬁcates issued for MULTOS-
powered ID cards. Figure 10 shows the distribution of the
MSB values of these keys. The public keys have a random
4-byte public exponent, mimicking the non-standard behavior
of MICARDO.
We cannot make conclusions about the origins of these keys.
However, we see that these keys have not been generated by
OpenSSL (non-FIPS), since moduli are not always congruent
to 1 modulo 3 (see Section 4.2 in [33]).
Figure 10: Distribution of the MSB of N from the MULTOS-
powered ID card certiﬁcates
5.1.3
jTOP SLE66 (initially issued)
To export a million keys generated by jTOP SLE66 platform,
we used blank jTOP SLE66 JavaCards. Since RSA key gener-
ation is implemented on the level of the JavaCard platform,
access to the manufacturer’s proprietary EstEID JavaCard
applet was not required.
We observed that this CC certiﬁed [34] JavaCard platform
has a functional bug. When asked to generate a 2048-bit RSA
key, in 38% of the cases a 2047-bit key is returned. This is
close to the theoretical ratio of 38.6294% when p and q are
chosen uniformly from the distribution of 1024-bit primes. In
order to generate an RSA modulus of required length, usually
either the rejection sampling method is used to regenerate
primes until their product is of the required length, or the
√
primes are sampled making sure that k-bit prime is larger than
2· 2k−1 (see Section 3.2 in [33]). The distribution of the
MSB of N from the keys generated by jTOP SLE66 platform
is shown in Figure 11.
Figure 11: Distribution of the MSB of N for keys generated
by jTOP SLE66 platform
USENIX Association
29th USENIX Security Symposium    1791
64128255N64128255N64128144192255N64128255NThe jTOP SLE66-powered ID cards were issued from 2011
until the end of 2014. All the certiﬁcates for initially issued
ID cards contain public keys with random 4-byte public expo-
nents, mimicking the non-standard behavior of MICARDO.
JavaCard speciﬁcation requires implementations to support
arbitrary public exponent values for at least up to 4 bytes in
length. We veriﬁed that jTOP SLE66 platform accepts and is
able to generate RSA key pairs with any odd value e up to 4
bytes in length, therefore the keys from the certiﬁcates could
have been generated by the platform.
We see that for ID cards issued in 2014 the distribution of
the MSB matches the distribution as generated by the platform
(Figure 12b). However, the ID cards issued before 2014 are
missing the 2047-bit RSA keys (the MSB values smaller than
128) (Figure 12a). The exceptions are 3 cardholders who have
been issued a certiﬁcate with a 2047-bit key in October 2013.
These are two employees of SK and a person related to the
manufacturer. We hypothesize that these cards were issued to
test the changes in the manufacturing process before going
into production.
5.1.4
jTOP SLE66 (PPA renewal)
To ﬁx the ﬂaw in 2011 ID cards (see Section 3), the ID card
manufacturer introduced the ID card renewal procedure which
can be performed in the PPA customer service points. In the
renewal process the old EstEID JavaCard applet was removed
and a new applet with new keys and certiﬁcates was installed.
The renewal was reused later in 2015 to ﬁx an incident with
duplicate email addresses speciﬁed in the certiﬁcates and
in 2016 to ﬁx certiﬁcates with incorrectly encoded public
keys (see Section 3). The renewal of jTOP SLE66-powered
ID cards was terminated on 2017-07-01. In total, more than
74 000 jTOP SLE66-powered ID cards were renewed in PPA
customer service points.
In contrast to initially issued ID cards, the keys renewed
in PPA customer service points have public exponent e set
to 65537. These keys show an MSB distribution that is com-
pletely different from the keys generated by jTOP SLE66
platform (see Figure 13). Such a distribution is the result of
setting the two most signiﬁcant bits of p and q to 112 (see
Section 3.2.2 in [33]).
(a) ID cards issued before 2014
(b) ID cards issued in 2014
Figure 12: Distribution of the MSB of N from initially issued
jTOP SLE66-powered ID cards
Since the generation of 2047-bit RSA keys is an anomaly
peculiar only to the jTOP SLE66 platform, we can conclude
that for the ID cards issued in 2014 the keys have been gener-
ated by the platform.
By analyzing the time difference between the notBefore
ﬁelds of the authentication and digital signature certiﬁcates,
we found convincing evidence that both the keys for the ID
cards issued before 2014 and for the ID cards issued in 2014
have been generated by the platform (see Section 5.2).
Apparently, the ID card manufacturing process before 2014
rejected 2047-bit keys to ensure that the certiﬁcates contained
standards-compliant 2048-bit keys. Such a rejection of 2047-
bit keys increased the key generation time by a factor of
1.63, hence increasing the average time of key generation
(in case of random e) from 87 to 141 seconds. The slower
key generation time may have been the cause for ending the
practice of 2047-bit key rejection in 2014.
Figure 13: Distribution of the MSB of N from jTOP SLE66-
powered ID cards renewed in PPA customer service points
In theory, the EstEID applet version installed in the PPA
customer service points could have regenerated the keys un-
til the two most signiﬁcant bits of p and q were 112. This,
however, would have increased the key generation time by
a factor of 4, increasing the average time of key generation
(in case of e = 65537) from 33 to 132 seconds. We see no
legitimate explanation why this would be done, hence we con-
clude that these keys were generated outside the smart card.
This was likely done to increase the key generation speed and
hence the throughput of the PPA renewal service. In fact, the
authorities could verify this by looking at the average time
that was required to renew jTOP SLE66-powered ID card in
PPA customer service point.
According to Table 7 in [33], there are several software
libraries which generate keys by setting the two most sig-
niﬁcant bits of p and q to 112. These are: Botan 1.11.29,
cryptlib 3.4.3, GPG Libgcrypt 1.6.5, LibTomCrypt 1.17, Net-
tle 3.2, OpenSSL FIPS 2.0.12, PGP SDK 4 and WolfSSL
3.9.0. OpenSSL 1.0.2g is excluded as the moduli generated
by OpenSSL (non-FIPS) are always congruent to 1 modulo
3, which is not the case for the moduli observed in the certiﬁ-
cates.
1792    29th USENIX Security Symposium
USENIX Association
64128255N64128255N64128144192255N5.1.5 jTOP SLE78
Since the jTOP SLE78 platform was affected by the ROCA
ﬂaw (Section 3), it is possible to use the method published
in [18] to verify whether the certiﬁcates issued for jTOP
SLE78-powered ID cards contain keys affected by the ROCA
ﬂaw. The method has no false negatives, and the rate of false
positives for 2048-bit RSA key is negligible (1 in 2713).
Veriﬁcation showed that the RSA keys have indeed been
generated by the platform. This includes all keys – initially
issued, remotely renewed and the keys renewed in PPA cus-
tomer service points. There were, however, 23 keys that did
not have the structure of the vulnerable keys. The possible
causes for these anomalous keys are analyzed in Section 6.
5.2
Inferring key generation time from certiﬁ-
cate issuance time
While modern computers are able to generate 2048-bit RSA
keys in less than a second, RSA key generation in smart card
chips requires tens of seconds on average. Since the time
spent for key generation can be used to deduce whether the
keys have been generated by the slow on-card key generation
process, we decided to investigate whether the time spent to
generate the keys can be observed from the timing of the
certiﬁcate issuance.
During the ID card personalization process, if the certiﬁcate
signing request is submitted to the CA right after the particular
(authentication or digital signature) key pair is generated, the
time difference between the notBefore ﬁeld of the ﬁrst and
the second ID card certiﬁcate will include the time spent on
the generation of the second key pair. On the other hand, if in
the personalization process the certiﬁcate signing requests are
submitted together after both key pairs have been generated,
the difference in the notBefore dates of the certiﬁcates will
not include the key generation time. To our knowledge this is
the ﬁrst work proposing the use of certiﬁcate validity dates as
a side-channel to infer key generation time.
We grouped the certiﬁcates into pairs belonging to the same
ID card if they were issued to the same cardholder in a 24-
hour window for the same type of identity document, and
looked at the distribution of time differences in notBefore
validity date.
5.2.1 MICARDO
For all initially issued MICARDO certiﬁcates the time part
of the notBefore validity date in the certiﬁcates is set to
‘00:00:00’. For certiﬁcates issued in the certiﬁcate renewal
process, the notBefore ﬁeld contains different values which
seem to correspond to the actual time when the certiﬁcates
were issued by the CA. The generation of a 1024-bit RSA key
on MICARDO platform takes around 15 seconds on average.
However, the average time difference between certiﬁcate is-
suance in each month is below 4 seconds. This is, however,
expected as certiﬁcates are issued after both key pairs have
been generated in the MICARDO certiﬁcate renewal process.
5.2.2 MULTOS
All certiﬁcates for MULTOS-powered ID cards have different
values in the notBefore ﬁeld, which likely correspond to the
time the certiﬁcates were issued. However, the time difference
between certiﬁcate issuance is a few seconds at best. This is
expected because the MULTOS platform was used solely for
digital identity cards, which are distributed to PPA customer
service points with the keys pre-generated (see Section 6.1.2.1
in [35]).
5.2.3
jTOP SLE66 (initially issued)
For the jTOP SLE66-powered ID cards issued up to 2011-
07-09 the time part of the notBefore validity date in the
certiﬁcates is set to ‘00:00:00’. However, starting from 2011-
07-11, the notBefore date contains different time values
which seem to correspond to the time the certiﬁcates were
issued.
The ID cards with a certiﬁcate issuance time difference
larger than 2 hours were excluded from the analysis. There
were less than 0.32% of such ID cards in each month. These
cases are possibly the result of an interrupted card personal-
ization process that was completed at a later time.
The distributions of time differences between issuance of
the ﬁrst and the second certiﬁcate grouped by month are
shown in Figure 14a (the outliers in the box plots cover  95% percentiles). Before 2011-10-06, the time differ-
ence between certiﬁcate issuance is minimal with the authen-
tication certiﬁcate being the ﬁrst issued certiﬁcate close to
half of the time. Starting from 2011-10-06, the authentication
certiﬁcate is the ﬁrst issued certiﬁcate at least 99.88% of the
time and the average time difference between the certiﬁcate
issuance increases signiﬁcantly.
We see that the distribution of time differences very closely
matches the key generation time distribution of the jTOP
SLE66 on-card key generation. That is, the distributions ob-
served from November 2011 to January 2014 match the dis-
tribution of the RSA on-card key generation when a random
public exponent e is used and the key is regenerated when
the produced modulus is 2047 bits long (average time 141
seconds). The distributions observed from January 2014 in
turn match the distribution of the RSA on-card key generation
when a random public exponent e is used, but no rejection
sampling method is applied (average time 87 seconds).
The timing observed supports the hypothesis that the keys
on the ID cards issued before 2014 and in 2014 have been
generated by the jTOP SLE66 platform. The small time dif-
ferences observed before 2011-10-06 do not allow us to make
deﬁnitive conclusions about the origins of these keys, how-
ever, as the properties of these keys match the properties of
keys issued after 2011-10-06, we are inclined to conclude that
these keys have also been generated by the platform.
USENIX Association
29th USENIX Security Symposium    1793
(a) jTOP SLE66-powered ID cards (initially issued)
(b) jTOP SLE66-powered ID cards (PPA renewal)
(c) jTOP SLE78-powered ID cards
Figure 14: Certiﬁcate issuance time differences for certiﬁcates from the same ID card (by month)
5.2.4 jTOP SLE66 (PPA renewal)
In Section 5.1.4 we already found that the keys for jTOP
SLE66-powered ID cards renewed in PPA were not generated
by the card. However, to not disregard any possible counterev-
idence, we also looked at the timing between the authentica-
tion and digital signature certiﬁcate issuance also for these
ID cards (see Figure 14b). We see that the time difference be-
tween the issuance of the ﬁrst and the second certiﬁcate varies
only slightly. We see that in 2013-02, 2015-08 and 2016-07,
some changes were introduced in the PPA renewal process
which caused a change in the certiﬁcate issuance time differ-
ences. Since the time difference is not close to zero and the
authentication certiﬁcate is the ﬁrst issued certiﬁcate 99.79%
of the time, we tend to conclude that the time differences
observed include the time spent on key generation and import,
and possibly certiﬁcate loading in the ID card.
1794    29th USENIX Security Symposium
USENIX Association
2011-072011-082011-092011-102011-112011-122012-012012-022012-032012-042012-052012-062012-072012-082012-092012-102012-112012-122013-012013-022013-032013-042013-052013-062013-072013-082013-092013-102013-112013-12rejrandom erandom e2014-012014-022014-032014-042014-052014-062014-072014-082014-092014-102014-112014-1205087100141150180Time (s)5K10K15K20K25K30KNumber of ID cardsAverage timeID cards issued2012-072012-092012-102012-112012-122013-012013-022013-032013-042013-052013-062013-072013-082013-092013-102013-112013-122014-012014-022014-032014-042014-052014-062014-072014-082014-092014-102014-112014-122015-012015-022015-032015-042015-052015-062015-072015-082015-092015-102015-112015-122016-012016-022016-032016-042016-052016-062016-072016-082016-092016-102016-112016-122017-012017-022017-032017-042017-052017-062017-070510152025303540Time (s)0K2K4K6K8K10KNumber of ID cardsAverage timeID cards issuede=655372014-102014-112014-122015-012015-022015-032015-042015-052015-062015-072015-082015-092015-102015-112015-122016-012016-022016-032016-042016-052016-062016-072016-082016-092016-102016-112016-122017-012017-022017-032017-042017-052017-062017-072017-082017-09051013152025303540Time (s)0K5K10K15K20K25K30K35KNumber of ID cardsAverage timeID cards issued5.2.5 jTOP SLE78
The timing between the authentication and digital signature
certiﬁcate issuance for jTOP SLE78-powered ID cards is
shown in Figure 14c. The digital identity card certiﬁcates
were excluded from the analysis. We see that the timing of
certiﬁcate issuance matches the distribution of key generation
time by jTOP SLE78 platform when e = 65537 (average time
13 seconds). This conﬁrms the ﬁndings of Section 5.1.5. The
average time below 13 seconds, starting from 2016-06, is
explained by the introduction of remote ID card renewal on
2016-06-22. In the remote renewal process the certiﬁcates are
issued after both key pairs have been generated by the card.
5.3 Discussion
The illicit practice of key importing in jTOP SLE66-powered
ID card renewals could not have been accident. The EstEID
applet had to be specially programmed to implement such a
key import functionality.
The fact that the ID card manufacturer was able to use this
forbidden feature without it being discovered for years, leads
us to the corollary that in an analogous manner the manufac-
turer could have used the key export feature, retrieving the
private keys after they were generated by the chip. It is not
clear to what extent the strict industry rules could have been
violated.
Large scale abuse of signature keys would be hard to keep
secret, while abuse of decryption keys would not. We hope
that the intent of the manufacturer was not malicious, and this
illicit practice was motivated only by the need to increase the
throughput of the PPA renewal service.
It is not clear whether the manufacturer initially understood
that generating keys with a random public exponent increases
the average key generation time from 33 to 87 seconds (see
Figure 15 for distribution). The increase is due to the candi-
date primes p and q having a larger probability of not being
suitable, since a randomly selected public exponent e is likely