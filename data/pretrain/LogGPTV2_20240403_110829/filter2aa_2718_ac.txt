# SteganRTP Documentation

## Control Message Format
```
+----------------+----------------+----------------+
|  Control Type  |    Length      |     Value      |
+----------------+----------------+----------------+
```

### Control Types
- **0: Reserved**
- **1: Echo Request**
- **2: Echo Reply**
- **3: Resend**
- **4: Start File**
- **5: End File**

## Control Messages

### Echo Request
```
+----------------+----------------+----------------+----------------+
|      1         |       2        |     Seq        |    Payload     |
+----------------+----------------+----------------+----------------+
```

### Echo Reply
```
+----------------+----------------+----------------+----------------+
|      2         |       2        |     Seq        |    Payload     |
+----------------+----------------+----------------+----------------+
```

### Resend
```
+----------------+----------------+----------------+----------------+
|      3         |       2        | Requested Seq  |                |
+----------------+----------------+----------------+----------------+
```

### Start File
```
+----------------+----------------+----------------+----------------+
|      4         |      Len       |   File ID      |                |
+----------------+----------------+----------------+----------------+
|                Filename (variable length)                 |
+----------------------------------------------------------+
```

### End File
```
+----------------+----------------+----------------+
|      5         |       1        |   File ID      |
+----------------+----------------+----------------+
```

## Message Types

### Chat Data
```
+----------------------------------------------------------+
|                          Chat Data                       |
+----------------------------------------------------------+
```

### File Data
```
+----------------+-----------------------------------------+
|   File ID      |                 File Data               |
+----------------+-----------------------------------------+
```

### Shell Data
```
+----------------------------------------------------------+
|                         Shell Data                       |
+----------------------------------------------------------+
```

## Functional Subsystems

### Encryption System
- **Light-weight, pseudo-encryption (XOR)**
- **Could be replaced with real crypto if no impact on RTP stream latency**
- **XOR pad is a SHA1 hash of a shared secret**
- **XOR operation is begun at an offset into the hash**

#### Keyhash Calculation
- `keyhash = sha1(shared-secret)`
- `keyhash_offset = hashword(keyhash, RTP_Seq, RTP_TS) % 20`

### Embedding System
- **Currently supports G.711**
- **Uses common LSB embedding method**
- **Properties of the RTP packet determine the total available size for embedding**

#### Available Size
- `Available = RTPPayloadSize / (wordsize * 8)`
- `PayloadSize = Available - MessageHeaderLen`

### Extracting System
- **A reverse of the Embedding function**
- **Pass through the crypto function**
- **Verification of the ID field checksum**

### Outbound Data Polling System
- **Linked list of file descriptors that may have data waiting to go out:**
  - RAW message interface
  - Control message interface
  - Chat data
  - Input for Remote Shell service
  - Output from Local Shell service (if enabled)
  - Individual File transfer data
- **Prioritized in the above order**

### Message Caching System
- **All inbound and outbound messages are cached**
- **If the remote app requests a resend, it is read from the cache and written to the RAW message interface**
- **If the local app receives future messages, they are available in the cache once the correct expected message is received**

## Challenges Met

### Unreliable Transport
- **Request and identification of resent messages**
- **Re-ordering out of order messages**
- **Identifies un-requested, replayed messages to provide replay protection (bonus!)**

### Cover-Medium Size Limitations
- **Plenty of RTP packets being sent per second**
- **User data can be spread over multiple messages and packets and then reassembled**
- **Achieved throughput of 1000 bytes per second is functional for my purposes (not adequate for transferring your massive pr0n collection)**

### Latency
- **RTP packets can be "skipped" and sent along unmodified**
- **Fast pseudo-cryptography (XOR!) is used rather than full cryptography**
- **Crypto only needs to provide obfuscation entropy prior to embedding the individual bits, not protect the data**

### RTP Streams
- **libfindrtp for identification**
- **libipq for tracking and hooking packets**

### Audio Codec Switching
- **Embedding parameters are derived from RTP packet properties**
- **Each RTP packet is processed individually**
- **If an audio codec isn’t supported, the packet is passed unmodified**

## Live Demo

### Demo Scenario
- **Endpoint A -> SteganRTP A -> RTP -> SteganRTP B -> RTP -> Endpoint B**

### Demo Virtualized Environment
- **Slackware Linux 11**
- **Asterisk Server**
- **Win XP Host OS**

## Conclusions
- **Met all of my initial design goals**
- **Met most of the identified challenges**
- **Compressed audio**
- **Media Gateway interference**
- **VoIP deployments should use SRTP to prevent MITM and endpoint scenarios in some cases**

## Future Work
- **Improve G.711 codec’s embedding algorithm**
- **Silence/Voice detection**
- **Create embedding algorithms for additional audio and video codecs**
- **Use real crypto instead of XOR**
- **Support for fragmenting larger messages across multiple RTP packets**
- **Expand Shell access functionality into a services framework**
- **White paper detailing research and implementation**

## Source Code
- **SteganRTP**: [http://sourceforge.net/projects/steganrtp/](http://sourceforge.net/projects/steganrtp/)
- **libfindrtp**: [http://sourceforge.net/projects/libfindrtp/](http://sourceforge.net/projects/libfindrtp/)

## Q & A

## References
- **SteganRTP**: [http://sourceforge.net/projects/steganrtp/](http://sourceforge.net/projects/steganrtp/)
- **libfindrtp**: [http://sourceforge.net/projects/libfindrtp/](http://sourceforge.net/projects/libfindrtp/)
- **Steganography Tools List**: [http://www.jjtc.com/mwiki/index.php?title=Main_Page](http://www.jjtc.com/mwiki/index.php?title=Main_Page)
- **RTP Specification**: [http://www.ietf.org/rfc/rfc1889.txt](http://www.ietf.org/rfc/rfc1889.txt)
- **RTP Parameters (Type/Codec values list)**: [http://www.iana.org/assignments/rtp-parameters](http://www.iana.org/assignments/rtp-parameters)

© 2007 Computer Academic Underground