paths, from which we can determine the set of orientable
paths P . We decide on the number k > 1 of additional runs
we are willing to spend and partition N arbitrarily into k
sets N1, . . . , Nk. For each such set Ni we then run the heuris-
tic above for the path set P ∪ Ni and again receive a set of
discarded paths N0. If kN0k < kNik we could reduce the
number of dropped paths and use P := (P ∪ Ni) \ N0 from
now on, otherwise we stick with the original P . As we treat
edges from the pre-knowledge as AS paths as described be-
fore, this strategy works for re-adding those discarded edges
as well. Results for the algorithm with re-adding are later
shown for k = 10.
5. OBTAINING REAL-WORLD DATA
To run the inference algorithms we need valid AS paths used
in the Internet. Additionally we are interested in at least
partial information on the business relationships between
autonomous systems, to both verify our inference results as
well as using them as previous knowledge for the inference
algorithms. As there is no single exhaustive source listing
those relationships we have to use other publicly available
information and try to extract them from it. We only give
a short overview on the sources of the data (which was col-
lected on 3/31/2006) here. More details are given in [11].
The AS paths were obtained from the routing tables avail-
able through route collectors [17, 21] and from public route
servers [13]. From this set we removed erroneous paths and
applied a normalization which discarded duplicate paths and
path being subpaths of other AS paths, ﬁnally leaving us
with a set of 2,002,680 paths of average length 3.43, con-
taining 21,862 ASes and inducing 56,922 AS pairs.
Our set of known AS relationships results from applying
methods similar to those described in [5, 18] to the WHOIS
databases [15]. Additionally we used the approach from [23]
on the BGP communities attribute ([20]) stored in the AS
paths of our input set. Based on how often an edge orienta-
tion was found using the diﬀerent methods we divided the
edge set into two sets. The more reliable one, containing
2,739 customer-to-provider and 2,000 peer-to-peer edges, is
used for the experiments in this paper. Results on the sec-
ond set, which we expect to contain between 5 to 30 percent
of incorrect data, are given in [11].
6. VALIDATING ACYCLICITY
Using the data from the previous section we intend to com-
pare our acyclicity model to the real Internet. The graph we
receive when only using customer-to-provider relationships
actually is acyclic. However including peer-to-peer edges
into these graphs creates cycles in both cases. To get an
impression of how much acyclicity is violated we tested ev-
ery triangle in the graphs. Out of 2,826 triangles 253 (9%)
induce a directed cycle.
We take these results as an indication that indeed the
overall structure of AS relationships is acyclic but our model
of acyclicity is still imprecise when it comes to peer-to-peer
relationships. This is probably mostly due to assuming the
relation “roughly of the same size” to be transitive when
interpreting peer-to-peer edges.
7. EXPERIMENTAL FINDINGS
In addition to our approach we implemented other algo-
rithms for Maximum Acyclic ToRfor comparison, namely
Gao’s Heuristic [8], an approximation algorithm (APX) from
[4] and the DPP* Heuristik based on a reduction to 2SAT
(also [4]). We augmented these algorithms, which do no sup-
port the handling of preknowledge themselves, with a simple
preprocessing routine which ﬁxes all edges which can be in-
ferred from the preknowledge and apllies the algorithm on
the reduced AS-Graph. This preprocessing step and also an
outline of these algorithms is given in [11].
To compare our acyclic inference heuristic (to which we
refer as AHeu) to existing algorithms we executed all of them
on the path set from Section 5 and compared the resulting
edge classiﬁcation to the edge set described there. We are
interested in both the number of paths which are not ori-
ented correctly (i.e., are not valley-free) and the number of
customer-to-provider edges that were not inferred. As none
of the algorithms is capable of identifying peer-to-peer re-
lationships we do not compare the inferred results to our
known peer-to-peer edges. An exception is Gao’s algorithm
as it introduces sibling-to-sibling edges which we do not want
to include in the inferred results, thus paths containing a
sibling-to-sibling edge are counted as invalid as well.
Algorithm Invalid paths
Gao
APX
DPP*
AHeu
AHeu
(re-add)
27.366%
(249 not valley-free)
(54,7811 with s-to-s)
4.483%
(89,775 not valley-free)
0.519%
(10,391 not valley-free)
0.483%
(9,666 not valley-free)
0.413%
(8,278 not valley-free)
Misclassiﬁed c-to-p
for reliable edge set
1.387%
(4 as p-to-c)
(34 as s-to-s)
5.330%
(146 as p-to-c)
0.913%
(25 as p-to-c)
0.292%
(8 as p-to-c)
0.329%
(9 as p-to-c)
Figure 3: Results for inferring only customer-to-provider re-
lationships
Figure 4: Number of edges misclassiﬁed
The detailed results of our experiments are shown in Fig-
ure 3. As seen our heuristic has the lowest number of invalid
paths as well as the least number of errors when compared to
the reference data. Additionally it is exempliﬁed how using
the re-adding strategy we can lower the number of invalid
paths even more but at the cost of reliability of the resulting
edge classiﬁcations.
Another aspect we are interested in is the behavior of these
algorithms when having initial pre-knowledge of some of the
edges. Therefore we repeated the experiment described be-
fore but provided the algorithms with a certain fraction of
the edges used for comparison later. As the choice of edges
provided to the algorithm has some inﬂuence on its results
we averaged all results over 5 random samples of the edge
set. Additionally the same samples were used for all of the
algorithms. Our heuristic is the only one explicitly support-
ing pre-knowledge, so we used a simple preprocessing algo-
rithm described in [11] to augment the remaining algorithms
accordingly. This should be kept in mind when comparing
the results as thus our heuristic is the only one capable of
“trading” edge errors (i.e., violated pre-knowledge) for vio-
lated paths. It is interesting to note that already a small
portion of pre-knowledge ﬁxes a large portion of the edges1.
1No matter if we used 5% or 100% of the known edges as
pre-knowledge, about 42,000 edges of the AS graph were
ﬁxed after preprocessing. On the other hand about 20,000
AS path had to be dropped in this phase (details in [11]).
 0 10 20 30 40 50 60 0 0.2 0.4 0.6 0.8 1Number of misclassified C2P edgesRelative amount of pre-knowledgeGaoAPXDPP*AHeu (W=10)9. REFERENCES
[1] C. Alaettino˘glu. Scalable router conﬁguration for the
Internet. In ICCCN’96. IEEE, 1996.
[2] G. Ausiello, P. Crescenzi, G. Gambosi, V. Kann,
A. Marchetti-Spaccamela, M. Protasi. Complexity and
Approximation: Combinatorial Optimization Problems and
Their Approximability Properties. Springer, 1999.
[3] T. H. Cormen, C. E. Leiserson, R. L. Rivest, C. Stein.
Introduction to Algorithms. 2nd edition. The MIT Press,
2001.
[4] G. Di Battista, T. Erlebach, A. Hall, M. Patrignani,
M. Pizzonia, T. Schank. Computing the types of the
relationships between autonomous systems. IEEE/ACM
Transactions on Networking, 15(2):267–280, 2007.
[5] G. Di Battista, T. Reﬁce, M. Rimondini. How to extract
BGP peering information from the Internet Routing
Registry. In MineNet’2006, pp. 317–322. ACM, 2006.
[6] X. A. Dimitriopoulos, D. V. Krioukov, M. Fomenkov,
B. Huﬀaker, Y. Hyun, K. C. Claﬀy, G. F. Riley. AS
relationships: Inference and validation. ACM SIGCOMM
Computer Communication Review, 37(1):31–40, 2007.
[7] X. A. Dimitriopoulos, D. V. Krioukov, B. Huﬀaker, K. C.
Claﬀy, G. F. Riley. Inferring AS relationships: Dead end or
lively beginning? In WEA’05, LNCS #3503, pp. 113–125.
Springer, 2005.
[8] L. Gao. On inferring autonomous system relationships in
the Internet. IEEE/ACM Transactions on Networking,
9(6):733–745, 2001.
[9] T. G. Griﬃn, G. T. Wilfong. An analysis of BGP
convergence properties. ACM SIGCOMM Computer
Communication Review, 29(4):277–288, 1999.
[10] J. Hawkinson, T. Bates. Guidelines for creation, selection,
and registration of an autonomous system (AS). RFC 1930,
The Internet Society, 1996.
[11] B. Hummel, S. Kosub. Acyclic type-of-relationship
problems on the Internet: An experimental analysis.
Technical Report TUM-I0709, Fakult¨at f¨ur Informatik, TU
M¨unchen, February 2007.
[12] G. Huston. Interconnection, peering and settlements—Part
II. The Internet Protocol Journal, 2(2):2–23, 1999.
[13] T. Kernen. traceroute.org web site.
http://www.traceroute.org.
[14] S. Kosub, M. G. Maaß, H. T¨aubig. Acyclic
type-of-relationship problems on the Internet. In CAAN’06,
LNCS #4235, pp. 98–111. Springer, 2006.
[15] Merit Network Inc. Internet Routing Registry.
http://www.irr.net.
[16] Y. Rekhter, T. Li. A Border Gateway Protocol 4 (BGP-4).
RFC 1771, The Internet Society, 1995.
[17] RIPE NCC. Routing Information Service (RIS).
http://www.ripe.net/ris/.
[18] G. Siganos, M. Faloutsos. Analyzing BGP policies:
Methodology and tool. In INFOCOM’04, pp. 1640–1651.
IEEE, 2004.
[19] L. Subramanian, S. Agarwal, J. Rexford, R. H. Katz.
Characterizing the Internet hierarchy from multiple vantage
points. In INFOCOM’02, pp. 618–627. IEEE, 2002.
[20] P. Traina, R. Chandra, T. Li. BGP community attribute.
RFC 1997, The Internet Society, 1996.
[21] University of Oregon. Route Views project page.
http://www.routeviews.org.
[22] I. van Beijnum. BGP. O’Reilly, 2002.
[23] J. Xia, L. Gao. On the evaluation of AS relationship
inferences. In Globecom’04, vol. 3, pp. 1373–1377. IEEE,
2004.
Figure 5: Number of invalid paths
As stated before we are interested both in the number of
misclassiﬁed edges and the number of invalid paths. These
numbers are given in Figures 4 resp. 5 using the edge set both
as pre-knowledge and for comparison. According to these
plots the performance of our heuristic is hardly inﬂuenced
by the amount of pre-knowledge available which we take as
an indication for the high quality of the inferred results. We
provide analogous plots for the full data set in [11]. They
show the same trend with the diﬀerence of a higher number
of overall errors due to the inexact data in this set. This
illustrates nicely how AHeu keeps giving good results even
in the presence of partially invalid pre-knowledge while the
other algorithms (partly due to the inﬂexible preprocessing
step) have to trust this knowledge at the cost of a huge
number of invalid paths.
8. CONCLUSION
We studied the acyclicity approach to AS relationship infer-
ence introduced in [14] from an experimental point of view.
On the one side, we presented both theoretical and prac-
tical evidence that this approach is feasible and, in large
parts, accurate. The described, heuristic algorithm AHeu
turned out to be easily implementable, fast, and ﬂexible with
respect to incorporating initial pre-knowledge, and outper-
formed the state-of-the-art algorithms proposed in the liter-
ature. Moreover, the acyclicity of all customer-to-provider
relationships within the reliable data set could be conﬁrmed.
These ﬁndings suggest to integrate acyclicity notions in de-
tailed models of AS relationships.
On the other side, we have learned that acyclicity with re-
spect to peer-to-peer relationships is not yet fully captured.
The underlying assumption that the roughly-the-same-size
relation is transitive seems too much a simpliﬁcation. We
consider ﬁnding a more accurate problem formulation in-
volving acyclicity and peer-to-peer relationships as the main
open issue of this paper.
Acknowledgments
We thank Wolfgang M¨uhlbauer for helpful discussions.
 0 5000 10000 15000 20000 25000 30000 35000 0 0.2 0.4 0.6 0.8 1Number of invalid pathsRelative amount of pre-knowledgeGaoAPXDPP*AHeu (W=10)