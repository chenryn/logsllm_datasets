### 4. Path Partitioning and Re-adding Strategy

Given a set of orientable paths \( P \), we can determine the number \( k > 1 \) of additional runs we are willing to perform. We then partition the set \( N \) arbitrarily into \( k \) subsets \( N_1, N_2, \ldots, N_k \). For each subset \( N_i \), we run the heuristic on the path set \( P \cup N_i \) and obtain a set of discarded paths \( N_0 \). If the size of \( N_0 \) is smaller than the size of \( N_i \), we reduce the number of dropped paths and update \( P \) as \( P := (P \cup N_i) \setminus N_0 \). Otherwise, we retain the original \( P \).

This strategy also works for re-adding previously discarded edges, as we treat edges from pre-knowledge as AS paths. Results for the algorithm with re-adding are shown for \( k = 10 \).

### 5. Obtaining Real-World Data

To run the inference algorithms, we need valid AS paths used in the Internet. Additionally, we require at least partial information on the business relationships between autonomous systems (ASes) to both verify our inference results and use them as prior knowledge for the inference algorithms. Since there is no single exhaustive source listing these relationships, we must use publicly available information and extract the data from it.

We collected the data on March 31, 2006. More details are provided in [11]. The AS paths were obtained from routing tables available through route collectors [17, 21] and from public route servers [13]. After removing erroneous paths and normalizing the data to discard duplicate paths and subpaths, we were left with a set of 2,002,680 paths of average length 3.43, containing 21,862 ASes and inducing 56,922 AS pairs.

Our set of known AS relationships was derived by applying methods similar to those described in [5, 18] to the WHOIS databases [15]. Additionally, we used the approach from [23] on the BGP communities attribute [20] stored in the AS paths of our input set. Based on the frequency of edge orientation found using different methods, we divided the edge set into two sets. The more reliable set, containing 2,739 customer-to-provider and 2,000 peer-to-peer edges, is used for the experiments in this paper. Results on the second set, which we expect to contain between 5% to 30% incorrect data, are given in [11].

### 6. Validating Acyclicity

Using the data from the previous section, we compare our acyclicity model to the real Internet. The graph formed by only using customer-to-provider relationships is acyclic. However, including peer-to-peer edges creates cycles. To quantify the violation of acyclicity, we tested every triangle in the graphs. Out of 2,826 triangles, 253 (9%) induce a directed cycle.

These results indicate that the overall structure of AS relationships is acyclic, but our model of acyclicity is imprecise when it comes to peer-to-peer relationships. This is likely due to the assumption that the "roughly the same size" relation is transitive when interpreting peer-to-peer edges.

### 7. Experimental Findings

In addition to our approach, we implemented other algorithms for Maximum Acyclic ToR for comparison: Gao’s Heuristic [8], an approximation algorithm (APX) from [4], and the DPP* Heuristic based on a reduction to 2SAT (also [4]). We augmented these algorithms, which do not support handling pre-knowledge themselves, with a simple preprocessing routine that fixes all edges which can be inferred from the pre-knowledge and applies the algorithm on the reduced AS-Graph. Details of this preprocessing step and an outline of these algorithms are given in [11].

To compare our acyclic inference heuristic (AHeu) to existing algorithms, we executed all of them on the path set from Section 5 and compared the resulting edge classification to the edge set described there. We are interested in both the number of paths that are not oriented correctly (i.e., are not valley-free) and the number of customer-to-provider edges that were not inferred. As none of the algorithms can identify peer-to-peer relationships, we do not compare the inferred results to our known peer-to-peer edges. An exception is Gao’s algorithm, which introduces sibling-to-sibling edges; paths containing such edges are counted as invalid.

**Results:**

| Algorithm | Invalid Paths | Misclassified c-to-p |
|-----------|---------------|----------------------|
| Gao       | 27.366% (249 not valley-free, 54,781 with s-to-s) | 1.387% (4 as p-to-c, 34 as s-to-s) |
| APX       | 4.483% (89,775 not valley-free) | 5.330% (146 as p-to-c) |
| DPP*      | 0.519% (10,391 not valley-free) | 0.913% (25 as p-to-c) |
| AHeu      | 0.483% (9,666 not valley-free) | 0.292% (8 as p-to-c) |
| AHeu (re-add) | 0.413% (8,278 not valley-free) | 0.329% (9 as p-to-c) |

**Figures:**
- **Figure 3:** Results for inferring only customer-to-provider relationships.
- **Figure 4:** Number of misclassified edges.
- **Figure 5:** Number of invalid paths.

As seen, our heuristic has the lowest number of invalid paths and the least number of errors compared to the reference data. Using the re-adding strategy further reduces the number of invalid paths, though at the cost of reliability in the resulting edge classifications.

We also examined the behavior of these algorithms when provided with initial pre-knowledge of some edges. We repeated the experiment, providing the algorithms with a certain fraction of the edges used for comparison later. We averaged the results over 5 random samples of the edge set, using the same samples for all algorithms. Our heuristic is the only one explicitly supporting pre-knowledge, so we used a simple preprocessing algorithm described in [11] to augment the remaining algorithms. It is interesting to note that even a small portion of pre-knowledge fixes a large portion of the edges. Regardless of whether we used 5% or 100% of the known edges as pre-knowledge, about 42,000 edges of the AS graph were fixed after preprocessing. On the other hand, about 20,000 AS paths had to be dropped in this phase (details in [11]).

### 8. Conclusion

We studied the acyclicity approach to AS relationship inference introduced in [14] from an experimental perspective. We presented both theoretical and practical evidence that this approach is feasible and, in large parts, accurate. The described heuristic algorithm, AHeu, is easily implementable, fast, and flexible with respect to incorporating initial pre-knowledge, and outperformed state-of-the-art algorithms proposed in the literature. Moreover, the acyclicity of all customer-to-provider relationships within the reliable data set could be confirmed.

These findings suggest integrating acyclicity notions into detailed models of AS relationships. However, we have learned that acyclicity with respect to peer-to-peer relationships is not yet fully captured. The underlying assumption that the "roughly the same size" relation is transitive seems too much a simplification. Finding a more accurate problem formulation involving acyclicity and peer-to-peer relationships remains the main open issue of this paper.

### Acknowledgments

We thank Wolfgang Mühlbauer for helpful discussions.