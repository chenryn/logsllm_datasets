1
记次审计时遇到的加密分区解密
前⾔
⽂件系统分析
⽂件系统解密
最近拿到了⼀个商业产品的qcow2 镜像 准备试⼀试代码审计 
⾸先⽤qemu-img 转换成vmdk 镜像  
转换遇到错误 ⽹上搜索只有⼀个其他项⽬的issue 没有解决⽅案 
阅读qemu源代码 发现是在2017-02-15版本引⼊了这个特性 
https://lists.gnu.org/archive/html/qemu-devel/2017-02/msg03173.html 
 发现可以使⽤2016年的旧版qemu完成转换 
https://qemu.weilnetz.de/w64/2016/ 
转换完成使⽤vm启动 准备进⼊grub修改root密码 
发现grub使⽤密码验证 
准备使⽤diskgenius载⼊镜像删除grub密码 
前⾔ 
Plain Text
复制代码
qemu-img convert -f qcow2 123.qcow2 vmdk 123.vmdk
1
Plain Text
复制代码
bitmaps_ext: Invalid extension length: Unknown error
1
2
载⼊镜像后如下图所示  
除引导分区外 其他分区的⽂件系统不能正常识别 
ci 是⼀个 LINUX LVM的卷组 
通过前缀魔数判断root卷⽂件系统为 XFS  
diskgenius 不⽀持XFS⽂件系统 所以只能使⽤其他⽅法挂载读写⾥⾯的内容 
继续看其他分区 发现app home 分区与其他分区⽂件系统不⼀样 
有着LUKS的标记 
⽂件系统分析 
3
经过搜索发现这是⼀种LINUX上的硬盘加密⽅案 Linux Unified Key Setup 
使⽤了AES加密 需要秘钥才能解密  
既然可以正常进⼊系统,那就说明秘钥是储存在本地的. 
我们只要寻找系统分区的挂载配置就有可能找到秘钥. 
准备⼀台可以正常使⽤的linux虚拟机. 这⾥使⽤了⼀台 kali 
⽂件系统解密 
4
将要挂载的硬盘添加到虚拟机中
⾸先挂载 LINUX LVM卷组  
vgscan 扫描卷组 
vgchange -ay  卷标签 (激活卷组) 
5
成功挂载卷 
因为root分区没有加密所以直接挂载他 
新建⼀个⽬录 挂载root分区 
6
mount -t xfs /dev/mapper/cl-root /tmp/temfs/
成功挂载root分区 
现在可以直接对root分区进⾏读写操作了 可以修改密码直接进⼊系统读取解密后分区的⽂件 
但是不能⽌步于此 既然遇到了这种特殊情况 就要学习下解密luks分区 
在查了⼀些资料后 发现解密⽅法⾮常简单 
第⼀步先在root分区寻找分区挂载的配置⽂件 
可以在/etc/crypttab ⽂件中找到⽤于分区解密的key⽂件位置 
Plain Text
复制代码
/etc/fstab  启动分区挂载
/etc/crypttab 分区解密
1
2
7
安装luks命令⼯具 
使⽤命令⾏解密分区 
成功解密分区 
将这个mapper挂载到⼀个⽬录
mkdir /tmp/atrustapp/ 
mount  -t xfs /dev/mapper/app /tmp/atrustapp/
到这⼀步就完成了解密 
其他分区可按照这种⽅法使⽤对应秘钥单独解密 
Plain Text
复制代码
cryptsetup luksOpen 被加密的分区 --key-file 秘钥⽂件
cryptsetup luksOpen /dev/mapper/cl-app --key-file 
/tmp/temfs/etc/.appconf/.abcde app
1
2