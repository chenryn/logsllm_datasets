# 审计过程中遇到的加密分区解密问题

## 前言
在最近的一次代码审计中，我获取到了一个商业产品的qcow2镜像文件。本文将详细记录从转换镜像格式到解密加密分区的全过程。

## 文件系统分析与解密

### 1. 镜像文件转换
首先，我尝试使用`qemu-img`工具将qcow2镜像转换为vmdk格式：
```bash
qemu-img convert -f qcow2 123.qcow2 -O vmdk 123.vmdk
```
然而，在执行此命令时遇到了错误：
```
bitmaps_ext: Invalid extension length: Unknown error
```
经过搜索发现，该问题是由于较新版本的QEMU引入的新特性导致的。根据QEMU开发者邮件列表中的讨论（[链接](https://lists.gnu.org/archive/html/qemu-devel/2017-02/msg03173.html)），可以使用2016年的旧版QEMU来完成转换（[下载地址](https://qemu.weilnetz.de/w64/2016/)）。成功转换后，我用VMware启动了镜像，并计划通过修改GRUB密码进入系统。

### 2. GRUB密码移除
启动虚拟机后，我发现GRUB设置了密码保护。为了绕过这一限制，我试图使用DiskGenius加载镜像并删除GRUB密码。但是，除了引导分区外，其他分区的文件系统无法被正确识别。

### 3. 分区识别与文件系统类型
进一步检查显示，“ci”是一个LINUX LVM卷组，其根卷(`root`)采用XFS文件系统。遗憾的是，DiskGenius并不支持XFS文件系统的操作，因此需要寻找替代方案来访问这些数据。此外，我还注意到“app”和“home”分区具有LUKS加密标志。

### 4. LUKS加密分区处理
#### 4.1 背景介绍
LUKS (Linux Unified Key Setup) 是一种用于Linux平台上的全盘加密解决方案，它通常使用AES算法进行数据加密。既然目标系统能够正常启动，则说明加密密钥应当存储于本地某处。我们可以通过查看相关配置文件来定位密钥位置。

#### 4.2 解密步骤
- 准备一台安装有Kali Linux的操作系统作为辅助环境。
- 将待解密的硬盘添加至该虚拟机内。
- 执行以下命令以扫描并激活LVM卷组：
  ```bash
  vgscan
  vgchange -ay <卷标签>
  ```
- 对于未加密的`root`分区可以直接挂载：
  ```bash
  mkdir /tmp/tempfs/
  mount -t xfs /dev/mapper/cl-root /tmp/tempfs/
  ```
- 查找LUKS分区对应的密钥文件路径，一般位于`/etc/crypttab`中。
- 安装必要的工具包并解密指定分区：
  ```bash
  sudo apt-get install cryptsetup
  cryptsetup luksOpen /dev/mapper/cl-app --key-file /path/to/keyfile app
  ```
- 最后，将解密后的设备挂载到用户目录下以便访问其中的数据：
  ```bash
  mkdir /tmp/atrustapp/
  mount -t xfs /dev/mapper/app /tmp/atrustapp/
  ```

通过以上步骤，我们不仅能够顺利访问非加密区域的内容，还掌握了如何对采用LUKS加密技术保护的数据进行有效解密的方法。对于类似情况下的其他加密分区，只需替换相应的密钥文件即可重复上述过程实现解密。