## PostgreSQL9新特性,翻译自PostgreSQL9 Release Notes  
### 作者                
digoal                
### 日期                
2010-05-11                
### 标签                
PostgreSQL            
----                
## 背景                
今天初略的看了一下POSTGRESQL9开发版的RELEASE NOTES，较以前的版本从功能上和性能上都有较大的提升，最明显的感觉是为DBA们增加的特性相当的多。  
大概的改进如下:  
```  
1.继承表的权限问题一直是比较困扰的，增加一个分区难道还要重新赋权吗，改善后DBA非常开心。  
2.字符处理将遵循SQL:2008标准  
3.继承表，索引被动重命名规则的改进  
4.PLPGSQL中不再允许不带引号的保留字作为变量名  
5.增加持续归档(类似于ORACLE的standby redo log)  
6.增加了恢复并同时可查询STANDBY的支持  
7.增加了STANDBY的恢复进度监控函数  
8.增强了继承表的查询性能  
9.增加了针对表空间设置SEQ或RANDOM COST的特性（这个适合SSD和机械盘混用的存储环境哦）  
10.增强了TRUNCATE性能  
11.增强了is not null的索引限制。太OK了，min(),max()性能大大提升。以前这可是PG的悲哀呀。  
12.优化了《》的性能  
13.针对分区表的ANALYZE做了优化  
14.优化了重分析时的AUTOVACUUM  
15.优化了针对大小比较时的统计信息  
16.优化针对表进行统计信息参数设置，太好了。终于可以定制了。  
17.增加了多项安全认证的支持如RAIUS,LDAP,SAMEHOST。做安全的同志们也有事可干了。  
18.在pg_stat_activity中增加了程序名的监控列。又能更清晰的定位了应用端了  
19.增加了日志中的SQL STATE记录，又给DBA多了一个分析项。  
20.增加统计信息计数器清理函数，这个的话应该对监控和优化又起到一个作用吧  
21.服务端配置的增强，增加了基于数据库和角色混合搭配的配置，太强大了是吧，比ORACLE的profile强大哦  
22.加强了SELECT FOR UPDATE/SHARE的控制颗粒，允许使用LIMIT来限制锁行数  
23.加强了窗口函数，这给数据分析师们又有了一个更好的选择。  
24.加速CREATE DATABASE创建速度  
25.增加了CREATE TABLE LIKE中INCLUDING COMMENT，太好了COMMENT不会成为烦恼了  
26.增加唯一约束的延时确认。又是一件非常省事的好事情。以前写迁移脚本需要关心表之间的关系。现在好多了  
27.增加批量权限赋予，如对某个SCHEMA下的所有表的权限操作可以批量做了。  
28.增强了EXPLAIN (BUFFERS)的功能  
29.VACUUM FULL做了颠覆性的改进，索引不再会变大了。  
30.VACUUM也变得很有弹性了，增加了自定义参数语法  
31.增加了自动命名INDEX的功能  
32.REINDEX增加了对系统表的支持。  
33.增强了全文扫描的功能。  
34.增强和增加了多项字符处理函数  
35.增加pg_table_size(),pg_index_size()。这个的话以前是pg_relation_size来做的。其实变化不大  
36.增加了SEQUENCE权限确认函数  
37.PLPGSQL中指针的改进  
38.Psql,PG_CTL等客户端的改进  
```  
详细如下:  
E.1.1. Overview  
ADD HERE  
The above items are explained in more detail in the sections below.  
E.1.2. Migration to Version 9.0  
CURRENT AS OF 2010-03-15  
A dump/restore using pg_dump is required for those wishing to migrate data from any previous release.  
Observe the following incompatibilities:  
E.1.2.1. Server Settings  
Remove server variable add_missing_from, which was defaulted to off for many years (Tom Lane)  
Remove server variable regex_flavor, which was defaulted to advanced (e.g. Perl-regex compatible) for many years (Tom Lane)  
E.1.2.2. Queries  
When querying a parent table, do not do additional permission checks on child tables returned as part of the query (Peter Eisentraut)  
The SQL standard specifies this behavior.  
Have fractional seconds conversion truncate rather than round when using float-based dates/times (Tom Lane)  
E.1.2.3. String Handling  
Improve standards compliance of SIMILAR TO patterns and SQL-style substring() patterns (Tom Lane)  
This includes treating ? and {…} as pattern metacharacters, while they were simple literal characters before; that corresponds to new features added in SQL:2008. Also, ^ and $ are now treated as simple literal characters; formerly they were treated as metacharacters, as if the pattern were following POSIX rather than SQL rules. Also, in SQL-standard substring(), use of parentheses for nesting no longer interferes with capturing of a substring. Also, processing of bracket expressions (character classes) is now more standards-compliant.  
Reject negative length values in 3-parameter substring() for bit strings, per the SQL standard (Tom Lane)  
E.1.2.4. Object Renaming  
Tighten enforcement of column renaming when a child table inherits the renamed column from an unrelated parent (KaiGai Kohei)  
No longer rename index names and index column names when table columns are renamed (Tom Lane)  
Administrators still can rename such columns manually. Expression index names are also not renamed. WHY ARE EXPRESSION INDEXES SIGNIFICANT?  
E.1.2.5. PL/pgSQL Variables  
Have PL/pgSQL throw an error if a variable name conflicts with a column name used in a query (Tom Lane)  
This behavior can be changed via the server variable plpgsql.variable_conflict, or by the per-function option #variable_conflict. The former behavior was to bind to variable names over column names.  
Remove PL/pgSQL’s RENAME declaration option (Tom Lane)  
Instead, use ALIAS, which can now alias any variable, not just dollar sign variables, e.g. $1.  
PL/pgSQL no longer allows unquoted variables names that match SQL reserved words (Tom Lane)  
Variables can be double-quoted to avoid this restriction.  
E.1.3. Changes  
E.1.3.1. Server  
E.1.3.1.1. Continuous Archiving  
Allow continuous archive standby systems to accept read-only queries (Simon, Heikki)  
This feature is called Hot Standby. There are new postgresql.conf and recovery.conf settings to enable this feature, as well as extensive documentation.  
Allow continuous archive (WAL) files to be streamed to a standby system (Fujii Masao, Heikki)  
Previously WAL files could be sent to standby systems only as 16 megabytes files; this allows master changes to be sent to the slave with very little delay. There are new postgresql.conf and recovery.conf settings to enable this feature, as well as extensive documentation.  
Add pg_last_xlog_receive_location() and pg_last_xlog_replay_location(), which can be used to monitor standby server WAL activity (Simon, Fujii Masao, Heikki)  
E.1.3.1.2. Performance  
Improve performance of finding inherited child tables (Tom Lane)  
Allow per-tablespace sequential and random page cost variables (seq_page_cost/random_page_cost) via ALTER TABLESPACE … SET/RESET (Robert Haas)  
Improve performance of TRUNCATE when used in the same transaction as table creation (Tom Lane)  
E.1.3.1.3. Optimizer  
Allow IS NOT NULL restrictions to use indexes (Tom Lane)  
This is particularly useful for finding MAX()/MIN() values in indexes that also contain NULLs.  
Remove unnecessary outer joins (Robert Haas)  
Outer joins where the inner side is unique and not referenced in the query are unnecessary and are therefore now removed.  
Improve optimizer equivalence detection of <> boolean tests (Tom Lane)  
E.1.3.1.4. GEQO  
Use the same random seed everytime GEQO plans a query (Andres Freund)  
While the Genetic Query Optimizer (GEQO) still selects random plans, it now selects the same random plans for identical queries. You can modify geqo_seed to randomize the starting value of the random plan generator.  
Improve GEQO plan selection (Tom Lane).  
This avoids the rare error, “failed to make a valid plan”.  
E.1.3.1.5. Optimizer Statistics  
Improve ANALYZE to support inheritance-tree statistics (Tom Lane)  
This is particularly useful for partitioned tables.  
Improve autovacuum detection of when re-analyze is necessary (Tom Lane)  
Improve optimizer statistics for greater/less-than comparisons (Tom Lane)  
When looking up optimizer statistics for greater/less-than comparisons, if the comparison value is in the first or last histogram bucket, use an index to generate the actual statistics. This is particularly useful for columns that are always increasing, and hence often have inaccurate statistics.  
Allow setting of distinct statistics using ALTER TABLE (Robert Haas)  
This allows user-override of the number or percentage of distinct values for a column and optionally its child tables. This value is normally computed by ANALYZE.  
E.1.3.1.6. Authentication  
Add support for RADIUS (Remote Authentication Dial In User Service) authentication (Magnus Hagander)  
Allow LDAP (Lightweight Directory Access Protocol) authentication to operate in “search/bind” mode (Robert Fleming, Magnus)  
This allows the user to be looked up first, then the system uses the DN (Distinguished Name) returned for that user.  
Add samehost and samenet designations to pg_hba.conf (Stef Walter)  
These match the server’s IP address and network address respectively.  
E.1.3.1.7. Monitoring  
Add the ability for clients to set an application name, which is displayed in pg_stat_activity (Dave Page)  
Add an SQL state option (%e) to log_line_prefix (Guillaume Smet)  
Write to the Windows event log in UTF16 encoding (Itagaki Takahiro)  
E.1.3.1.8. Statistics Counters  
Add pg_stat_reset_shared(‘bgwriter’) to reset the cluster-wide shared statistics of the bgwriter (Greg Smith)  
Add pg_stat_reset_single_table_counters() and pg_stat_reset_single_function_counters() to allow the reseting of statistics counters for individual tables and indexes (Magnus Hagander)  
E.1.3.1.9. Server Settings  
Allow setting of configuration variables based on database/role combinations (Alvaro Herrera)  
Previously only per-database and per-role setting were possible, not combinations. All role and database settings are now stored in the new pg_db_role_setting system table. A new psql \drds command shows these settings. Backwards-compatible system views do not show this information.  
Add boolean variable bonjour, which controls whether a Bonjour-enabled binary advertises itself via Bonjour (Tom Lane)  
The default is off, meaning it does not advertise.  
Log changed parameter values when postgresql.conf is reloaded (Peter Eisentraut)  
E.1.3.2. Queries  
Do SELECT FOR UPDATE/SHARE processing after applying LIMIT, so the number of rows returned is always predictable (Tom Lane)  
Previously, concurrent transactions could potentially cause SELECT to return fewer rows than specified by LIMIT. FOR UPDATE can still affect ORDER BY ordering, but this can be corrected by using FOR UPDATE in a subquery.  
Allow mixing of traditional and SQL-standard LIMIT/OFFSET syntax in the same query (Tom Lane)  
Increase the supported frame options in window functions (Hitoshi Harada)  
This allows frames (RANGE or ROWS) to start with CURRENT ROW, and to use the ROWS n PRECEDING/FOLLOWING clause.  
Have SELECT and CREATE TABLE AS return row counts to the client (Boszormenyi Zoltan)  
psql does not display these counts.  
E.1.3.2.1. Unicode Strings  
Add Unicode surrogate pair (dual 16-bit) support to U& strings and identifiers (Peter Eisentraut)  