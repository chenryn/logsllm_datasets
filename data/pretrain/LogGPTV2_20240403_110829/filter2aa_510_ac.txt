# Creating and Managing Configuration Files for Servers

## Introduction
Creating configuration files for multiple servers can be streamlined by either directly editing the file or generating customized scripts. This guide will walk you through saving a template configuration file during server setup, creating a template configuration file after initial setup, and customizing these files for specific server configurations.

## Saving a Template Configuration File During Server Setup
1. In the final pane of the Server Assistant, review the settings and click **Save As**.
2. In the dialog that appears, select **Configuration File** next to "Save as" and click **OK**.
   - **Note:** To ensure the file can be edited later, do not select "Save in Encrypted Format."
3. Choose a location to save the file and click **Save**.

## Creating a Template Configuration File After Initial Setup
1. Open the Server Assistant (located in `/Applications/Server`).
2. In the Welcome pane, choose **Save setup information in a file or directory record** and click **Continue**.
3. Enter the required settings on the remaining panes. After reviewing the settings in the final pane, click **Save As**.
4. In the dialog that appears, select **Configuration File** next to "Save as" and click **OK**.
   - **Note:** To ensure the file can be edited later, do not select "Save in Encrypted Format."
5. Choose a location to save the file and click **Save**.

## Customizing Configuration Files from the Template
After creating a template configuration file, you can modify it using a text editor or write a script to generate custom configuration files for a group of servers. The configuration file is in XML format, with each key representing a specific setup parameter.

### Example Configuration File
The following example shows the basic structure and contents of a configuration file for a server with the following configuration:
- An administrative user named "Administrator" (short name "admin") with a user ID of 501 and the password "secret".
- A computer name and host name of "server1.company.com".
- A single Ethernet network interface set to get its address from DHCP.
- No server services set to start automatically.

```xml
<AdminUser>
    <exists>true</exists>
    <name>admin</name>
    <password>secret</password>
    <realname>Administrator</realname>
    <uid>501</uid>
</AdminUser>
<ComputerName>server1.company.com</ComputerName>
<HostName>server1.company.com</HostName>
<Network>
    <DSClientInfo>
        <2 - NetInfo client - broadcast dhcp static>-192.168.42.250</2 - NetInfo client - broadcast dhcp static>
    </DSClientInfo>
    <DSClientType>2</DSClientType>
    <DSType>2 - directory client</DSType>
    <InstallLanguage>English</InstallLanguage>
    <Keyboard>
        <DefaultFormat>0</DefaultFormat>
        <DefaultScript>0</DefaultScript>
        <ResID>0</ResID>
        <ResName>U.S.</ResName>
        <ScriptID>0</ScriptID>
    </Keyboard>
    <NetworkInterfaces>
        <ActiveAT>ActiveTCPIP</ActiveAT>
        <DNSDomains>company.com</DNSDomains>
        <DNSServers>192.168.100.10</DNSServers>
        <DeviceName>en0</DeviceName>
        <EthernetAddress>00:0a:93:bc:6d:1a</EthernetAddress>
        <PortName>Built-in Ethernet</PortName>
        <Settings>
            <DHCPClientID>...</DHCPClientID>
            <Type>DHCP Configuration</Type>
            <NetworkTimeProtocol>
                <UsingNTP>true</UsingNTP>
            </NetworkTimeProtocol>
            <Rendezvous>
                <RendezvousEnabled>true</RendezvousEnabled>
                <RendezvousName>beasbe3</RendezvousName>
            </Rendezvous>
            <SerialNumber>a-123-bcd-456-efg-789-hij-012-klm-345-n</SerialNumber>
            <ServicesAutoStart>
                <Apache>false</Apache>
                <File>false</File>
                <MacManager>false</MacManager>
                <Mail>false</Mail>
                <Print>false</Print>
                <QTSS>false</QTSS>
                <WebDAV>false</WebDAV>
            </ServicesAutoStart>
            <TimeZone>US/Pacific</TimeZone>
            <VersionNumber>1</VersionNumber>
        </Settings>
    </NetworkInterfaces>
</Network>
```

### Note
The actual contents of a configuration file depend on the hardware configuration of the computer on which it's created. It is recommended to start from a template configuration file created on a computer similar to those you plan to set up.

## Naming Configuration Files
The Server Assistant recognizes configuration files with the following names:
- `MAC-address-of-server.plist`
- `IP-address-of-server.plist`
- `hardware-serial-number-of-server.plist`
- `full-host-name-of-server.plist`
- `generic.plist`

The Server Assistant uses the file to set up the server with the matching address, name, or serial number. If no specific file is found, it will use `generic.plist`.

## Storing Configuration Files in an Accessible Location
The Server Assistant looks for configuration files in the following locations:
- `/Volumes/vol/Auto Server Setup/`
  - Where `vol` is any device volume mounted in the `/Volumes` directory.

Devices you can use to provide configuration files include:
- A partition on one of the server’s hard disks
- An iPod
- An optical (CD or DVD) drive
- A USB or FireWire drive
- Any other portable storage device that mounts in the `/Volumes` directory

## Changing Server Settings
After initial setup, you can use various commands to view or change Mac OS X Server configuration settings.

### General System Preferences
For information on changing general system preferences, see Chapter 4, “Setting General System Preferences,” on page 31.

### Network Settings
For information on changing network settings, see Chapter 5, “Network Preferences,” on page 37.

### Service-Specific Settings
For information on changing service-specific settings, refer to the chapter that covers the specific service.

## Viewing, Validating, and Setting the Software Serial Number
You can use the `serversetup` command to view or set the server’s software serial number or to validate a server software serial number. The `serversetup` utility is located in `/System/Library/ServerSetup`.

### Commands
- To display the server’s software serial number:
  ```sh
  $ serversetup -getSerialNumber
  ```
- To set the server software serial number:
  ```sh
  $ sudo serversetup -setSerialNumber serialnumber
  ```
- To validate a server software serial number:
  ```sh
  $ serversetup -verifySerialNumber serialnumber
  ```
  - Displays `0` if the number is valid, `1` if it isn’t.

## Updating Server Software
You can use the `softwareupdate` command to check for and install software updates over the web from Apple’s website.

### Commands
- To check for available updates:
  ```sh
  $ softwareupdate --list
  ```
- To install an update:
  ```sh
  $ softwareupdate --install update-version
  ```
- To view command help:
  ```sh
  $ softwareupdate --help
  ```

### Parameters
- `serialnumber`: A valid Mac OS X Server software serial number, as found on the software packaging.
- `update-version`: The hyphenated product version string that appears in the list of updates when you use the `--list` option.

## Moving a Server
Try to place a server in its final network location (subnet) before setting it up for the first time. If you’re concerned about unauthorized or premature access, you can set up a firewall to protect the server while finalizing its configuration.

If you must move a server after initial setup, you need to change settings that are sensitive to network location before the server can be used. For example, the server's IP address and host name—stored in both directories and configuration files that reside on the server—must be updated.

### Guidelines for Moving a Server
- Minimize the time the server is in its temporary location to limit the information that needs to be changed.
- Do not configure services that depend on network settings until the server is in its final location. Such services include Open Directory replication, Apache settings (such as virtual hosts), DHCP, and other network infrastructure settings that other computers depend on.
- Wait to import final user accounts. Limit accounts to test accounts to minimize the user-specific network information (such as home directory location) that will need to change after the move.
- After moving the server, use the `changeip` tool to change IP addresses, host names, and other data stored in Open Directory NetInfo and LDAP directories on the server. See “Changing a Server’s IP Address” on page 39. You may need to manually adjust some network configurations, such as the local DNS database, after using the tool.
- Reconfigure the search policy of computers (such as user computers and DHCP servers) that have been configured to use the server in its original location.

## Restarting or Shutting Down a Server
You can use the `reboot` or `shutdown -r` command to restart a server at a specific time. For more information, see the man pages.

### Examples
- To restart the local server:
  ```sh
  $ shutdown -r now
  ```
- To restart a remote server immediately:
  ```sh
  $ ssh -l root server shutdown -r now
  ```
- To restart a remote server at a specific time:
  ```sh
  $ ssh -l root server shutdown -r hhmm
  ```

### Automatic Restart
You can also use the `systemsetup` command to set up the server to start automatically after a power failure or system freeze. See “Viewing or Changing Automatic Restart Settings” on page 33.

### Parameters
- `server`: The IP address or DNS name of the server.
- `hhmm`: The hour and minute when the server restarts.

## Changing a Remote Server’s Startup Disk
You can change a remote server’s startup disk using SSH.

### Command
- To change the startup disk:
  ```sh
  $ bless -folder "/Volumes/disk/System/Library/CoreServices" -setOF
  ```

### For information on using SSH to log in to a remote server, see “Sending Commands to a Remote Server” on page 16.

## Shutting Down a Server
You can use the `shutdown` command to shut down a server at a specific time. For more information, see the man page.

### Examples
- To shut down a remote server immediately:
  ```sh
  $ ssh -l root server shutdown -h now
  ```
- To shut down the local server in 30 minutes:
  ```sh
  $ shutdown -h +30
  ```

### Parameters
- `disk`: The name of the disk that contains the desired startup volume.
- `server`: The IP address or DNS name of the server.

## Setting General System Preferences
You can use the `systemsetup` command to view or change a server’s system preferences, which would otherwise be set using the System Preferences GUI application.

### Computer Name
- To display the server’s computer name:
  ```sh
  $ sudo systemsetup -getcomputername
  ```
  or
  ```sh
  $ sudo networksetup -getcomputername
  ```
- To change the computer name:
  ```sh
  $ sudo systemsetup -setcomputername computername
  ```
  or
  ```sh
  $ sudo networksetup -setcomputername computername
  ```

### Date and Time
- To view the current system date:
  ```sh
  $ sudo systemsetup -getdate
  ```
  or
  ```sh
  $ serversetup -getDate
  ```
- To set the current system date:
  ```sh
  $ sudo systemsetup -setdate mm:dd:yy
  ```
  or
  ```sh
  $ sudo serversetup -setDate mm/dd/yy
  ```
- To view the current system time:
  ```sh
  $ sudo systemsetup -gettime
  ```
  or
  ```sh
  $ serversetup -getTime
  ```
- To change the current system time:
  ```sh
  $ sudo systemsetup -settime hh:mm:ss
  ```
  or
  ```sh
  $ sudo serversetup -setTime hh:mm:ss
  ```
- To view the current time zone:
  ```sh
  $ sudo systemsetup -gettimezone
  ```
  or
  ```sh
  $ serversetup -getTimeZone
  ```
- To view the available time zones:
  ```sh
  $ sudo systemsetup -listtimezones
  ```
- To change the system time zone:
  ```sh
  $ sudo systemsetup -settimezone timezone
  ```
  or
  ```sh
  $ sudo serversetup -setTimeZone timezone
  ```

### Network Time Server Usage
- To see if a network time server is being used:
  ```sh
  $ sudo systemsetup -getusingnetworktime
  ```
- To enable or disable use of a network time server:
  ```sh
  $ sudo systemsetup -setusingnetworktime (on|off)
  ```
- To view the current network time server:
  ```sh
  $ sudo systemsetup -getnetworktimeserver
  ```
- To specify a network time server:
  ```sh
  $ sudo systemsetup -setnetworktimeserver timeserver
  ```

### Energy Saver Settings
- To view the idle time before sleep:
  ```sh
  $ sudo systemsetup -getsleep
  ```
- To set the idle time before sleep:
  ```sh
  $ sudo systemsetup -setsleep minutes
  ```
- To see if the system is set to wake for modem activity:
  ```sh
  $ sudo systemsetup -getwakeonmodem
  ```
- To set the system to wake for modem activity:
  ```sh
  $ sudo systemsetup -setwakeonmodem (on|off)
  ```
- To see if the system is set to wake for network access:
  ```sh
  $ sudo systemsetup -getwakeonnetworkaccess
  ```
- To set the system to wake for network access:
  ```sh
  $ sudo systemsetup -setwakeonnetworkaccess (on|off)
  ```

### Automatic Restart Settings
- To see if the system is set to restart after a power failure:
  ```sh
  $ sudo systemsetup -getrestartpowerfailure
  ```
- To set the system to restart after a power failure:
  ```sh
  $ sudo systemsetup -setrestartpowerfailure (on|off)
  ```
- To see how long the system waits to restart after a power failure:
  ```sh
  $ sudo systemsetup -getWaitForStartupAfterPowerFailure
  ```
- To set how long the system waits to restart after a power failure:
  ```sh
  $ sudo systemsetup -setWaitForStartupAfterPowerFailure seconds
  ```
- To see if the system is set to restart after a system freeze:
  ```sh
  $ sudo systemsetup -getrestartfreeze
  ```
- To set the system to restart after a system freeze:
  ```sh
  $ sudo systemsetup -setrestartfreeze (on|off)
  ```

### Power Management Settings
You can use the `pmset` command to change a variety of power management settings, including:
- Display dim timer
- Disk spindown timer
- System sleep timer
- Wake on network activity
- Wake on modem activity
- Restart after power failure
- Dynamic processor speed change
- Reduce processor speed
- Sleep computer on power button press

For more information, see the `pmset` man page.

### Startup Disk Settings
- To view the current startup disk:
  ```sh
  $ sudo systemsetup -getstartupdisk
  ```
- To view the available startup disks:
  ```sh
  $ sudo systemsetup -liststartupdisks
  ```
- To change the current startup disk:
  ```sh
  $ sudo systemsetup -setstartupdisk path
  ```

### Sharing Settings
- To see if the system is set to allow remote login:
  ```sh
  $ sudo systemsetup -getremotelogin
  ```
- To enable or disable remote login:
  ```sh
  $ sudo systemsetup -setremotelogin (on|off)
  ```
  or
  ```sh
  $ serversetup -enableSSH
  ```

### Telnet Access
Telnet access is disabled by default because it isn’t as secure as SSH. You can, however, enable Telnet access. See “Using Telnet” on page 18.

### Apple Event Response
- To see if the system is set to respond to remote events:
  ```sh
  $ sudo systemsetup -getremoteappleevents
  ```
- To set the server to respond to remote events:
  ```sh
  $ sudo systemsetup -setremoteappleevents (on|off)
  ```

### International Settings
- To view the current primary language:
  ```sh
  $ serversetup -getPrimaryLanguage
  ```
- To view the installed primary language:
  ```sh
  $ serversetup -getInstallLanguage
  ```
- To change the install language:
  ```sh
  $ sudo serversetup -setInstallLanguage language
  ```
- To view the script setting:
  ```sh
  $ serversetup -getPrimaryScriptCode
  ```

### Login Settings
- To disable or enable the Restart and Shutdown buttons in the login dialog:
  ```sh
  $ sudo serversetup -setDisableRestartShutdown (0|1)
  ```
  - `0` disables the buttons.
  - `1` enables the buttons.
- To view the current setting:
  ```sh
  $ serversetup -getDisableRestartShutdown
  ```

## Network Preferences
You can use the following commands to change a server’s network settings.

### Network Interface Information
This section describes commands you address to a specific hardware device (e.g., `en0`) or port (e.g., Built-in Ethernet).

#### Viewing Port Names and Hardware Addresses
- To list all port names:
  ```sh
  $ networksetup -listallhardwareports
  ```