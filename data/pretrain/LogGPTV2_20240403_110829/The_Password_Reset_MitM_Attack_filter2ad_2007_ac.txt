vulnerable to the attack.
EXPERIMENT 1: Correctness of security question’s answer.
Experiment process. Participants were asked to register
to a website in order to perform a short experiment. During
the registration process, they were asked to type their email
address, and only then, to answer a classical security question:
What is your mother’s maiden name. Once the users completed
the registration, we asked them whether the answer they just
typed was correct.
Ethics. We did not save any private data about the par-
ticipants. We only saved the answer distribution of the last
question.
Participants. 52 volunteer students from our institute.
Results. Although registering to a low-importance website,
76.9% of the participants provided the correct answer to the
security question.
Bonneaue et al. [28] conducted a larger survey with the
participation of 1500 users. There, 37% of the participants
reported that they gave wrong answer to the security question
when registering on their primary email account. Beyond the
population and the number of participants, the difference in
the results can be due to the experiment process.
In our experiment, the users answered a security question;
in [28], the users were only asked about registration that
probably occurred several years ago. It is surprising that the
survey of [28], did not include statistics about users that do
not remember their answers. For example, the authors of this
paper do not even remember if they were asked to answer a
security question during their registration to Gmail.
Even if only 63% of the population are vulnerable to the
attack [28], this is still a high percentage and an indicator for
the problem of relying on security questions.
IV. PRMITM VIA SMS
Popular websites also usually offer mechanisms for pass-
word recovery to users who lost access to their email account.
The problems with security questions [29]–[32] and the pop-
ularity of mobile phones has made the authentication using
mobile devices a preferred option for password recovery (e.g.,
see Tables II and III). The most common way to authenticate
a user via mobile phone is by sending a code to the device.
The user then has to insert the received code into the website
to reset the password.
Unfortunately, in some cases, when the reset code is sent by
SMS, the PRMitM attack is still possible. The attacker asks
the victim for her phone number, claiming that a code will be
sent to it. Then the attacker initiates a password reset process
256
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:24:09 UTC from IEEE Xplore.  Restrictions apply. 
using this phone number in the attacked website, causing this
website to send an SMS with a password reset code to the
victim’s phone. The victim receives the expected message, and
may type the code in the attacking page. Now, the attacker can
complete the password reset process.
The attacker can even trick the user into disclosing her
password reset code under simpler conditions. Unlike security
questions, a code to the mobile phone is not used solely for
registration and password recovery. Although email addresses
that can be generated easily and for free by bots, mobile
numbers are harder and more expensive to attain. Therefore,
sending a code to a mobile device is a reasonable way to both
prove that users are not bots and to prevent overuse by users.
Instead of the registration process, the attacker can ask the user
to insert a code sent to her mobile phone before accessing a
resource or downloading a ﬁle.
In the rest of this section we discuss the problems with pass-
word reset using SMS (Section IV-A), survey this mechanism
in popular websites (Section IV-B), and ultimately evaluate the
attack on Facebook users (Section IV-C).
A. Limitations of Password Reset Using SMS
We identiﬁed several problems with sending a password
reset via SMS. While the ﬁrst problem is inherent, we found
additional problems that appear in some of the websites and
can be easily ﬁxed.
Unclear message. SMS is limited to 160 ASCII characters,
and there are at least 3 pieces of information that should appear
in each message in addition to the password reset code: (1)
the sending website, (2) explanation about the code’s meaning
(password reset), and (3) a warning to avoid disclosing the
code to anyone else. Most of the websites are aware of the
need to include these three elements. As evidence, they include
all of them (and more) in emails that are sent to reset a
password. Yet, the length limitation and the desire to avoid
sending multiple SMS messages prevent them from sending
the optimal message.
Sender identity. SMS spooﬁng is the process of setting the
sender of SMS messages to a value that is not the originating
mobile number. The sender can be set to another number or
to alphanumeric text. Usually, SMS messages are sent from
numbers that are not known to the users. Using SMS spooﬁng,
the sending companies can give the user an indication about
the sender. However, we noticed that some of them do not
use this option at all, or they use it with a sender name that
is non-informative. In spite of that, the importance of using
informative sender identity seems to be minor compared to
content of the message; see the results analysis of Experiment
2.
Token validity period. When a code is given, the user can
use it only during a limited time period. However, this time
period varies between websites, and can be anywhere from 15
minutes to 24 hours. In the PRMitM attack, this time slot is
critical. Ideally, the attacker would like to reset the passwords
as late as possible. An attacker who gets the code at noon
would prefer to reset the password late at night, when the
user is sleeping.
Language compatibility. Many websites offer services in
many languages, but some do not send the SMS message in
the supported language. Users who cannot read and understand
the text, but only to identify the code, become exposed to
the attack. Namely, users who get a message in an unfamiliar
language, can read the code, but not the attached text. In such
cases, an informative warning text becomes irrelevant.
B. Websites Survey
Table IV summarizes the SMS messages sent by popular
websites during their password reset process. We also specify
which text represented the sender, the code’s validity period,
and whether the language is adjusted to the user.
The table presents only websites that support multiple
languages. The second column shows the English message
sent in the SMS by each of the websites.
Unlike common password reset emails, none of the web-
sites’ SMS messages included a warning about the danger of
disclosing the code. The fact that this message was sent as part
of a password reset process appears in only 4 of them. Popular
websites like Yahoo and Google have a general message about
veriﬁcation codes. Such a message can be easily abused by
a PRMitM attacker. Moreover, unlike their messages in the
other languages, both Google and Yahoo send non-secure SMS
messages to Russian language users. Their Russian message
simply says ”Your veriﬁcation code: XXXX”, without any
indication to the sender in the message body.
Another vulnerable website is Yandex, the only website we
tested for which none of the SMS messages contain the name
of the website. Yandex simply sends a veriﬁcation code and
asks the user to enter it in a text ﬁeld.
To detect what appears as the SMS sender, we initiated
password reset process using SMS from three different de-
vices. Only three websites noted the name of the website as
the sender. In the SMS from Facebook, the sender appeared
either as a number or as Facebook. In all the other cases, we
received the SMS from an unknown number or got the string
”Verify” as the sender.
To test the validity period of the received code, we initiated
the password reset process and tried to use the code after
different time periods. We could not ﬁnd the exact expiration
time, but tried different values and noted the longest time
period after which we succeeded in using the code. For
services that do not specify the expiration of their code, we
tested the following time periods following a binary-search
based approach: 5, 10, 15, 30, 45, 60 and 90 minutes, and
2, 3, 4, 6, 8, 10, 12, 18 and 24 hours.
To test
language compatibility, we tested the accounts
against several popular languages they support. Speciﬁcally,
we tested: English and Spanish, which are very common
languages; Russian and German, which are common; and
Hebrew, which is not a common language.
We say that a website is SMS language compatible (SLC)
with a language if it sends the password reset message in
257
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:24:09 UTC from IEEE Xplore.  Restrictions apply. 
Site
Google &
Youtube
Facebook
Yahoo
Twitter
Live & Bing
& Outlook
Linkedin
Yandex
Ebay
Mail.ru
Netﬂix
SMS text
Your Google veriﬁcation code is XXXXXX
Sender
Google
Validity period
90 minutes
Language compatibility
Full
Facebook/Number
your
code
or
reset
Verify
Number
Password
password
Facebook
your
XXXXXX is
reset
here:https://fb.com/l/YYYYYYYYY
Your Yahoo veriﬁcation code is XXXXXX
Enter this code to reset your Twitter password:
XXXXXX
Use XXXXXXX as Microsoft account pass-
word reset code
Your LinkedIn veriﬁcation code is XXXXXX. Verify/Number
Your conﬁrmation code is XXXXXX. Please
enter it in the text ﬁeld.
Your single-use eBay PIN is XXXX
MailRu: XXXXXX - password recovery code
for usern***@mail.ru
Your Netﬂix veriﬁcation code is XXXXXX
Number
MailRu
Verify/Number
Yandex
Number
10 hours
English only
15 minutes
60 minutes
15 minutes
15 minutes
2 hours
24 hours
45 minutes
Full
English only
Full
Good
Full
Partial
Full
15 minutes
Full
TABLE IV: Password reset by SMS in popular websites.
this language. We tested whether a website is SLC only with
regards to supported languages, which are languages in which
the website gives services. We gave one of four grades to
websites for their SMS language compatibility.
1) Full. The website is SLC with all of its supported
languages that we tested.
2) Good. The website is SLC with all of its supported
common languages that we tested, but not SLC with an
uncommon supported language.
3) Partial. The website is SLC with more than one supported
common language that we tested, but is not SLC with
another supported common language.
4) English only. Although supporting also other common
languages, the website is SLC only with English.
Six out of the 10 websites in Table IV were assigned a
Full grade. This means that some users of the other four may
receive an SMS they cannot understand, which makes them
an easy target for PRMitM attacks. We tested the websites
by conﬁguring the accounts to use each of the languages.
Because some websites may determine the language according
to parameters such as the country preﬁx of the phone number, a
non-Full grade does not mean the website does not send SMS
in some of the languages. However, by itself, sending critical
messages in a language that is different from the language the
user chose is a problem.
C. Evaluation
In the survey we conducted (Section IV-B), we found three
types of messages; none of them explicitly warn the users
against typing the code in another website. The messages are
sorted from the most to the least vulnerable.
1) Just a code. Message contains only the code, without
mentioning both the reset process and the sending web-
site. For example: Yandex, Google and Yahoo in Russian.
2) Sender and a code. The sending website is mentioned
with the code, but there is no evidence of the password
reset process. For example: Google, Yahoo, and LinkedIn.
3) Password reset code message. In addition to the code,
the password reset and the sending website are men-
tioned. For example: Facebook, Twitter, and Microsoft
services.
In a typical PRMitM attack that abuses the password
reset using SMS, the attacker asks the users to authenticate
themselves by sending them an SMS. Once the attacker gets
the phone number of the victims, he initiates the password
reset process for their phone numbers in the attacked website.
If the victims receive the code and type it into the attacking
page, the attacker can take over their accounts in the attacked
website.
Naturally, SMS messages of the third type are harder to
abuse for the PRMitM attack. Experiment 2 shows that it is
still possible to effectively abuse such messages, and that a
more detailed SMS message does not provide full protection.
Due to ethical reasons, we did not use the SMS code to
complete the password reset process on the accounts of the
participants. To make sure the SMS code is enough for the
attack to work, we successfully simulated the attack under
experimental conditions on several of our own accounts. We
showed that it is possible to initiate the password-reset process
from a machine that has never been used before for the
attacked account as tested in the experiment, and that it is
possible to complete the attack with the code (that the victim
gets to his phone and forwards to the attacker). Furthermore,
in the examined case of Facebook, it is also possible to use
the code to gain access to the account, without resetting the
password. In this case, no notiﬁcation about password-reset is
sent to the email of the victim.
It is important to note, that in the experiment, the attacking
machine was located in the same country as the attacked
computers. In practice, the attacker can detect the IP address
of the victim and launch the attack from a machine under
similar settings.
EXPERIMENT 2: Effectiveness of PRMitM attack on Face-
258
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:24:09 UTC from IEEE Xplore.  Restrictions apply. 
book users using SMS and comparison between Facebook’s
SMS and more detailed SMS.
Experiment process. Participants were invited to an ex-
periment about memory skills. Before they accessed the ex-
periment webpage, they were told that if they encounter any
problem or something they do not like, they are free to stop the
experiment, go directly to the ﬁnal form, and leave feedback
about the experiment process. The experiment page that was
actually the attacking page asked them to identify themselves
using their phone number. Speciﬁcally, the page asked the
participants to type their phone number, so they can receive
an SMS with a code that should be typed in. Each user was
randomly assigned either to the Facebook SMS group or to the
detailed SMS group.
In the Facebook SMS group, once the user typed her phone
number, the attacking page contacted a server that sent a
request to Facebook for password reset via SMS. Facebook
then sent
the message to the participant. Our server was
implemented in Python and used Selenium to imitate browsing
activity to Facebook’s servers. In the detailed SMS group,
we spoofed the following SMS from Facebook: *WARNING*
Someone requested to reset your Facebook password. DO NOT
SHARE THIS CODE with anyone or type it outside Facebook.
The password reset code is XXXXXX.
If the participant identiﬁed the threat, she could stop the
experiment and move to the ﬁnal form. Other participants
simply played a memory game for 90 seconds before they
were redirected to the ﬁnal form.
In the experiment’s ﬁnal form, we gradually asked the