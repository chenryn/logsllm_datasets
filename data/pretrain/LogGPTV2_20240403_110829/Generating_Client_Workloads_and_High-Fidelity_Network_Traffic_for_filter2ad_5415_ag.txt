(cid:132)
(cid:132)
(cid:132)
(cid:132)
tools.syncTime = FALSE
time.synchronize.continue = FALSE
time.synchronize.restore = FALSE
time.synchronize.resume.disk = FALSE
time.synchronize.shrink = FALSE
time.synchronize.tools.startup = FALSE
Information on these settings is also available in VMware knowledge base article 1189 
(http://kb.vmware.com/kb/1189).
Table 3 shows what each option controls.
Table 3.  Time Synchronization Settings in the Configuration File
Option
Effect
tools.syncTime
time.synchronize.continue
time.synchronize.restore 
time.synchronize.resume.disk
time.synchronize.shrink
time.synchronize.tools.startup
If set to TRUE, the clock syncs periodically.
If set to TRUE, the clock syncs after taking a snapshot.
If set to TRUE, the clock syncs after reverting to a snapshot.
If set to TRUE, the clock syncs after resuming from suspend and after migrating 
to a new host using the VMware VMotion feature.
If set to TRUE, the clock syncs after defragmenting a virtual disk.
If set to TRUE, the clock syncs when the tools daemon starts up, normally while 
the guest operating system is booting.
Copyright © 2008 VMware, Inc. All rights reserved.
16
Timekeeping in VMware Virtual Machines
Because guest operating systems generally get their time from the virtual CMOS TOD clock when they are 
powered on, you need to set this device to your fictitious time if you want the time to persist across guest 
operating system restarts. 
If you want to start a guest operating system with the same time on every startup, use the rtc.startTime 
option described in “Virtual CMOS RTC” on page 7. 
If, instead, you want the guest operating system to have a constant offset from real time as maintained by the 
host, you can use the rtc.diffFromUTC option, or simply set the CMOS TOD clock from the virtual machine’s 
BIOS setup screen or from within the guest operating system. In Microsoft Windows, setting the system time 
automatically updates the CMOS clock. In Linux, you can use the /sbin/hwclock program to set the CMOS 
clock. Alternatively, because most Linux distributions are configured to copy the system time into the CMOS 
clock during system shutdown, you can simply set the system time and shut down the guest operating system 
before restarting it again.
Using Microsoft W32Time in Windows Guests
The Windows Time Service (W32Time), present in Windows 2000 and later, implements a simple variant of 
the Network Time Protocol (NTP). The subset is called SNTP. W32Time allows you to synchronize a Windows 
machine’s clock in several different ways, each providing a different level of accuracy. Like the CMOS‐based 
time daemon, W32Time is not aware of any attempts by a virtual machine to process timer interrupt backlogs 
and catch the virtual machine’s clock up to real time, so corrections by W32Time can occasionally overshoot 
real time, especially in older versions. However, W32Time should generally correct such errors on its next 
resynchronization. Newer versions of W32Time (in Windows Server 2003 and later) seem to incorporate a full 
NTP‐like algorithm and perform better, comparably to the NTP implementation used in Linux. Turning on 
VMware Tools periodic clock synchronization does not disable W32Time.
At this writing we do not yet have specific recommendations on how to configure W32Time for best 
performance in a virtual machine.
A few customers have a requirement to use a virtual machine as a W32Time server, to provide time to other 
systems, but do not want the virtual machine to be a W32Time client. Instead, the virtual machine gets its time 
using VMware Tools or runs using a fictitious time as described above. W32Time does have the ability to run 
in a server‐only mode. For instructions on setting up W32Time to run in this mode, refer to Microsoft 
documentation on the Windows Time Service—specifically, the NoSync registry option.
Using NTP in Linux and Other Guests
The Network Time Protocol is usable in a virtual machine with proper configuration of the NTP daemon. The 
following points are important:
(cid:132) Do not configure the virtual machine to synchronize to its own (virtual) hardware clock, not even as a 
fallback with a high stratum number. Some sample ntpd.conf files contain a section specifying the local 
clock as a potential time server, often marked with the comment “undisciplined local clock.” Delete any 
such server specification from your ntpd.conf file.
Include the option tinker panic 0 at the top of your ntp.conf file. By default, the NTP daemon 
sometimes panics and exits if the underlying clock appears to be behaving erratically. This option causes 
the daemon to keep running instead of panicking.
Follow standard best practices for NTP: Choose a set of servers to synchronize to that have accurate time 
and adequate redundancy. If you have many virtual or physical client machines to synchronize, set up 
some internal servers for them to use, so that all your clients are not directly accessing an external 
low‐stratum NTP server and overloading it with requests.
(cid:132)
(cid:132)
Copyright © 2008 VMware, Inc. All rights reserved.
17
Timekeeping in VMware Virtual Machines
The following sample ntp.conf file is suitable if you have few enough clients that it makes sense for them to 
access an external NTP server directly. If you have many clients, adapt this file by changing the server names 
to reference your internal NTP servers. 
NOTE   Any tinker commands used must appear first.
# ntpd.conf
tinker panic 0
restrict 127.0.0.1
restrict default kod nomodify notrap
server 0.vmware.pool.ntp.org
server 1.vmware.pool.ntp.org
server 2.vmware.pool.ntp.org
server 3.vmware.pool.ntp.org
Here is a sample /etc/ntp/step-tickers corresponding to the sample ntp.conf file above.
# step-tickers
0.vmware.pool.ntp.org
1.vmware.pool.ntp.org
Make sure that ntpd is configured to start at boot time. On some distributions this can be accomplished with 
the command chkconfig ntpd on, but consult your distribution’s documentation for details. On most 
distributions, you can start ntpd manually with the command /etc/init.d/ntpd start.
Host Clock Synchronization
If you are using VMware Tools to synchronize your guest operating system clock to the host clock, or if your 
guest operating system initializes its time from the virtual CMOS TOD clock, it is important for your host clock 
to have accurate time. In addition, if you are using native clock synchronization software in the guest operating 
system, you might choose to use the host as a time server for the virtual machine. With either such setup, your 
host receives the correct time from the network, and your virtual machines receive the correct time from the 
host operating system.
If you are using Microsoft Windows as the host for a VMware hosted product, the Windows Time Service 
(W32Time) can be a good way to synchronize the host clock. There are many ways to configure W32Time, 
some of which give more precise synchronization than others. See Microsoftʹs documentation for details. In 
addition to W32Time, there are also many other third‐party clock synchronization programs available for 
Windows.
If you are using Linux as the host for a VMware hosted product, NTP is a good way to synchronize the host 
clock. The NTP daemon is called ntpd on current distributions, xntpd on older ones. 
VMware ESX and ESXi also include an NTP daemon. You can enable and configure NTP from the Virtual 
Infrastructure Client. For older versions of ESX, you can configure NTP using the instructions in VMware 
knowledge base article 1339 (http://kb.vmware.com/kb/1339).
At this writing (with the latest release of ESX being version 3.5), the ESX NTP daemon runs in the service 
console. Because the service console is partially virtualized, with the VMkernel in direct control of the 
hardware, NTP running on the service console provides less precise time than in configurations where it runs 
directly on a host operating system. Therefore, if you are using native synchronization software in your virtual 
machines, it is somewhat preferable to synchronize them over the network from an NTP server that is running 
directly on its host kernel, not to the NTP server in the service console. In VMware ESXi, there is no service 
console and the NTP daemon runs directly on the VMkernel. 
Time and Performance Measurements Within a Virtual Machine
Customers often ask to what extent they can trust timing and performance measurements taken within a 
virtual machine and how to supplement these measurements to fully understand the performance of 
applications running in a virtual machine. A complete treatment of this topic is beyond the scope of this paper, 
but we can give some general guidance here.
Copyright © 2008 VMware, Inc. All rights reserved.
18
Timekeeping in VMware Virtual Machines
Time Measurements
Time measurements taken within a virtual machine can be somewhat inaccurate because of the difficulty of 
making the guest operating system clock keep exact time, as discussed at length above.