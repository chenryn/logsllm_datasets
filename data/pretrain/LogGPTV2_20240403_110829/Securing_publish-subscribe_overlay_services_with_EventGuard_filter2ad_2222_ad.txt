saturated.
Figure 7 shows the maximum throughput versus the num-
ber of nodes in the pub-sub network for EventGuard and
basic Siena. The increase in throughput with the number
of nodes shows the scalability of EventGuard. Note that as
the number of nodes increases, the number of subscribers
connected to one leaf node decreases, thereby increasing the
e(cid:11)ective throughput. However, as the number of nodes be-
comes increasingly larger than the number of subscribers the
throughput does not increase any further, since this simply
results in underutilized nodes.
The primary overhead for EventGuard arises due to the
veri(cid:12)cation of ElGamal signatures which is an expensive op-
eration (1:7ms). We also measured the overhead in the ab-
sence of this signature veri(cid:12)cation at every node in the pub-
sub network (EventGuard-nosig in Figure 7). We found that
the overhead was lesser than 5%. We are currently exploring
t
u
p
h
g
u
o
r
h
T
 450
 400
 350
 300
 250
 200
 150
 100
’Siena’
’EventGuard’
’EventGuard-nosig’
 0
 5
 10
 15
 20
 25
 30
Number of Nodes
)
s
m
(
y
c
n
e
t
a
L
 1800
 1600
 1400
 1200
 1000
 800
 600
 400
’Siena’
’EventGuard’
t
u
p
h
g
u
o
r
h
T
 400
 350
 300
 250
 200
 150
 100
 50
 0
 0
 5
 15
 10
 20
Number of Nodes
 25
 30
’Siena’
’EventGuard’
 0
 200
 400
 600
Flooding Rate
 800
 1000
Figure 7: Throughput
Figure 8: Latency
Figure 9: Resilience to Flooding-
based DoS Attacks
faster signature algorithms to replace ElGamal.
Latency. We measured latency in terms of the amount of
time it takes from the time instant a publication is sent by
a publisher till the time it is available to the subscriber (in
plain-text). The latency was measured keeping the through-
put at its highest (see Figure 7). Figure 8 shows latency ver-
sus the number of nodes for EventGuard and basic Siena.
Observe that the latency (cid:12)rst decreases and then increases.
Initially, as the number of nodes increases, the number of
subscribers assigned to each leaf node decreases, and so
does the latency. However, as the number of nodes increases
further, the height of the dissemination tree also increases.
An increase in height by one incurs an additional latency
of 70ms (network latency), thereby increasing the overall
latency. While the throughput always improves (until it
saturates) with the number of nodes, the latency will (cid:12)rst
improve and then deteriorate. Thus, a careful choice of the
number of pub-sub nodes is required in order to achieve high
throughput with acceptable latencies.
Observe from Figure 8 that the increase in latency due
to EventGuard is very small. This is because the wide-area
network latencies are of the order of 70ms; while the over-
head added at every node by EventGuard is about 1-2ms. In
fact, the maximum increase in latency due to EventGuard
is lesser than 4%.
Flooding-based DoS Attacks. We measured the e(cid:11)ect of
(cid:13)ooding-based DoS attacks on the throughput of the pub-
sub network. We picked one of the leaf nodes to (cid:13)ood the
pub-sub network. We vary f l, the rate that which the mali-
cious node (cid:13)oods messages on the pub-sub network. Figure
9 shows the throughput as f l increases both in the presence
and the absence of routing guard.
Observe from Figure 9 that in the absence of routing
guards the throughput deteriorates drastically with the in-
jection of (cid:13)ooding-based DoS attack. In comparison Event-
Guard shows a much graceful drop in throughput as the
(cid:13)ooding rate f l increases. Note that although our guard
against (cid:13)ooding-based DoS attacks involves an expensive El-
Gamal signature check (1:7ms), it restricts the DoS attack
into a small neighborhood surrounding the malicious node
(see Figure 3). This ensures that the e(cid:11)ect of a (cid:13)ooding-
based DoS attack is localized and that the rest of the pub-
sub network is not a(cid:11)ected by it.
6. RELATED WORK
Pub-sub systems can be categorized into two types (cid:0) di-
rect channel and pub-sub network depending on the mecha-
nism used for delivering publications from a publisher to rel-
evant subscribers. In a direct channel scheme, a publisher di-
rectly delivers a publication to its relevant subscribers. The
communication mechanism used in a direct channel could
be multiple unicasts or a multicast (if supported by the un-
derlying networking infrastructure). In the absence of wide-
area network IP-multicast, the publishers tend to become
a performance bottle-neck in the direct channel scheme. In
contrast, the pub-sub network delivery model is driven by
removing such duplicate messages and performance bottle-
necks and improving the system scalability.
In a pub-sub
network model the publishers and the subscribers communi-
cate via an overlay network (see Figure 1) of nodes connected
to one another on top of an existing IP network infrastruc-
ture. Now, the pub-sub network is responsible for e(cid:14)cient
routing of the publications to the relevant subscribers.
It is important to note that both performance and secu-
rity of pub-sub systems are closely related to the intended
usage models. For example, in a scenario where all the sub-
scribers wish to receive all the event noti(cid:12)cations, broadcast
is a more economical scheme than content-based pub-sub
in terms of messaging cost. Similarly, in a scenario where
subscribers can be divided into groups, group addresses and
memberships are statically bound, it may be cost-e(cid:11)ective
to create multicast groups, as each static subset of sub-
scribers is interested in the same noti(cid:12)cations. However,
when the set of subscribers interested in an event noti(cid:12)ca-
tion is big in size, changes frequently, and geographically
disparate, the eligibility of group membership is evaluated
dynamically and across multiple administrative domains, a
content-based pub-sub overlay service infrastructure is a less
costly scheme, especially in terms of coordination and mem-
bership management.
Several pub-sub systems [5, 3, 7] have been developed to
provide highly scalable and (cid:13)exible messaging support for
distributed systems. Siena [5] and Gryphon [3] are large
pub-sub system capable of content-aware routing. Scribe
[7] is an anonymous P2P pub-sub system. Most work on
pub-sub systems have focused on performance, scalability
and availability. Unfortunately, very little e(cid:11)ort has been
expended on studying the security aspects of these systems.
Signi(cid:12)cant amount of work has been done in the (cid:12)eld of
secure group communication on multicast networks (survey
[16]). Such systems can leverage secure group-based mul-
ticast techniques and group key management techniques to
provide forward and backward security, scalability and per-
formance. The key problem in such systems arise due to the
fact that IP multicast does not provide any mechanisms for
preventing non-group members to have access to group com-
munication. A signi(cid:12)cant restriction with secure group com-
munication is that the group membership is not as (cid:13)exible
as the subscription model used in pub-sub systems. In con-
trast, EventGuard permits (cid:13)exible membership at the gran-
ularity of subscriptions. Also, EventGuard uses an overlay
network and does not rely on IP multicast technology pri-
marily because the IP multicast protocol has not yet been
deployed at an Internet scale.
Wang et al.
[21] analyze the security issues and require-
ments in a content-based pub-sub system. Their paper iden-
ti(cid:12)es that the general security needs of a pub-sub applica-
tion includes con(cid:12)dentiality, integrity and availability. More
speci(cid:12)cally they identify authentication of publications, in-
tegrity of publications, subscription integrity and service in-
tegrity as the key issues. The paper presents a detailed
description of these problems in the context of a content-
based pub-sub system, but fails to o(cid:11)er any concrete solu-
tions. They identify that maintaining con(cid:12)dentiality against
the pub-sub network nodes fundamentally con(cid:13)icts with the
pub-sub model as the pub-sub network routes information
based on dynamic evaluations of publications against sub-
scriptions. EventGuard shows that in most cases, one can
achieve content-based routing while still maintaining con(cid:12)-
dentiality.
Opyrchal and Prakash [14] analyze secure distribution of
events in a content-based pub-sub network from a group
key management standpoint. They show that previous tech-
niques for dynamic group key management fail in a pub-sub
scenario since every event can potentially have a di(cid:11)erent set
of interested subscribers. They use a key caching based tech-
nique that relies on subscription popularity to reduce the
number of encryptions and to increase message throughput.
However, their approach requires that the pub-sub network
nodes (brokers) are completely trustworthy. EventGuard
aims to providing security to the subscribers while maintain-
ing con(cid:12)dentiality even from the pub-sub network nodes.
7. CONCLUSION
We have presented EventGuard, a security framework for
protecting pub-sub overlay services from various attacks such
as authenticity, con(cid:12)dentiality, integrity, and resilience to
DoS attacks. We have described EventGuard: a suite of
security guards that can be seamlessly plugged-into a wide-
area content-based pub-sub system. EventGuard presents
a uni(cid:12)ed security framework that meets both the security
goal of safeguarding the pub-sub overlay services from var-
ious attacks, and the performance goal of maintaining the
system’s overall simplicity, scalability and performance. We
have demonstrated that EventGuard is easily stackable on
any content-based pub-sub core by presenting a prototype
implementation of EventGuard on top of Siena. Our exper-
iments show that EventGuard can secure a pub-sub overlay
service with minimal performance penalty.
Acknowledgements. This research is partially supported
by NSF CNS CCR, NSF ITR, DoE SciDAC, CERCS Re-
search Grant, IBM Faculty Award, IBM SUR grant, and
HP Equipment Grant.
8. REFERENCES
[1] K. Aguilera and R. Strom. E(cid:14)cient atomic broadcast using
deterministic merge. In Proceedings of the 19th ACM
PODC, 2000.
[2] M. Aguilera, R. Strom, D. Sturman, M. Astley, and
T. Chandra. Matching events in a content-based
subscription system. In Proceedings of the 18th ACM
PODC, 1999.
[3] G. Banavar, T. Chandra, B. Mukherjee, and
J. Nagarajarao. An e(cid:14)cient multicast protocol for
content-based publish subscribe systems. In Proceedings of
the 19th ICDCS, 1999.
[4] A. Carzaniga. Siena - software.
http://serl.cs.colorado.edu/ carzanig/siena/software/index.html.
[5] A. Carzaniga, D. S. Rosenblum, and A. L. Wolf. Design and
evaluation of a wide-area event noti(cid:12)cation service. In ACM
Transactions on Computer System, 19(3):332-383, 2001.
[6] CNN. Gates: Buy stamps to send email.
http://www.cnn.com/2004/TECH/internet/03/05/spam.charge.ap/.
[7] A. K. Datta, M. Gradinariu, M. Raynal, and G. Simon.
Anonymous publish/subscribe in P2P networks. In
Proceedings of IPDPS, 2003.
[8] D. Eastlake and P. Jones. US secure hash algorithm 1.
http://www.ietf.org/rfc/rfc3174.txt, 2001.
[9] T. ElGamal. A public key cryptosystem and a signature
scheme based on discrete logarithm. In IEEE transactions
on information theory, 31(4): 469-472, 1985.
[10] FIPS. Data encryption standard (DES).
http://www.itl.nist.gov/(cid:12)pspubs/(cid:12)p46-2.htm.
[11] H. Krawczyk, M. Bellare, and R. Canetti. HMAC:
Keyed-hashing for message authentication.
http://www.faqs.org/rfcs/rfc2104.html.
[12] D. Malkhi, O. Rodeh, and M. Reiter. E(cid:14)cient update
di(cid:11)usion in byzantine environments. In Proceedings of 20th
IEEE SRDS, 2001.
[13] NIST. AES: Advanced encryption standard.
http://csrc.nist.gov/CryptoToolkit/aes/.
[14] L. Opyrchal and A. Prakash. Secure distribution of events
in content-based publish subscribe system. In Proceedings
of the 10th USENIX Security Symposium, 2001.
[15] Sylvia Ratnasamy Qin Lv and Scott Shenker. Can
heterogeneity make gnutella scalable? In Proceedings of the
(cid:12)rst International Workshop on Peer-to-Peer Systems,
2002.
[16] S. Rafaeli and D. Hutchison. A survey of key management
for secure group communication. In Journal of the ACM
Computing Surveys, Vol 35, Issue 3, 2003.
[17] C. Raiciu and D. S. Rosenblum. A
secure protocol for content-based publish/subscribe systems.
http://www.cs.ucl.ac.uk/sta(cid:11)/C.Raiciu/(cid:12)les/secure pubsub.pdf.
[18] R. Rivest. The MD5 message-digest algorithm.
http://www.ietf.org/rfc/rfc1321.txt, 1992.
[19] M. Srivatsa and L. Liu. Eventguard: Securing
publish-subscribe networks. Technical report, Georgia
Institute of Technology, 2005.
[20] M. Srivatsa, L. Xiong, and L. Liu. Trustguard: Countering
vulnerabilities in reputation management for decentralized
overlay networks. In Proceedings of the World Wide Web
Conference (WWW), 2005.
[21] C. Wang, A. Carzaniga, D. Evans, and A. L. Wolf. Security
issues and requirements for internet-scale publish-subscribe
systems. In Proceedings of the 35th Hawaii International
Conference on System Sciences, 2002.
[22] L. Xiong and L. Liu. Peertrust: Supporting
reputation-based trust for peer-to-peer electronic
communities. In Proceedings of IEEE TKDE, Vol. 16, No.
7, 2004.
[23] E. W. Zegura, K. Calvert, and S. Bhattacharjee. How to
model an internetwork. In Proceedings of IEEE Infocom,
1996.