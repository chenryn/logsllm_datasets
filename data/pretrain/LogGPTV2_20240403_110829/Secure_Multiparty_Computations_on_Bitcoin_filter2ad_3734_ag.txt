have to be redeemed within a certain time frame). One also
has to be careful to avoid problems with reusing the keys,
described above, cf. Footnote 20. To argue formally about
the security of this solution one would need to introduce a
multi-player mathematical model capturing the fact that several
sessions can be executed with shared secrets. This is beyond
the scope of this paper, so we just stay on this informal level.
VII.
IMPLEMENTATION
As a “proof of concept” we have implemented and executed
the presented protocols. The transactions were created using
bitcoinj Java library, as normal Bitcoin clients do not allow
user to create (nor broadcast) non-standard transactions, and
sent directly to Eligius mining pool, which is currently the
only one accepting non-standard transactions21.
Below we present links to some of these transactions on the
blockchain.info website. To save space, all links are relative to
the url blockchain.info/tx-index/ (hence, they are only indices
of transactions used by the blockchain.info site).
Commitment scheme CS: Links to all transactions in a
correct execution of the commitment scheme with one recipient
are as follows: Commit: 97079150; Open: 97094781.
Here is an example of an execution for
two recipi-
ents, which ﬁnished with PayDeposit
transactions broad-
cast: Commit: 96947667; PayDeposit 1: 96982401; and
PayDeposit 2: 96982398.
Three-party lottery (MultiPlayersLottery): We have per-
formed a correct execution of the three-party lottery protocol,
where each player bets 0.0012B. First, the players perform
standard transactions with output value 0.0012B. The transac-
tions are as follows: PutMoney A: 96946847; PutMoney B:
96946887; and PutMoney C: 96947563. Then the players
exchange the hashes hA, hB and hC, and sign and broadcast
the Compute transaction (96964833). After the revealing of
their secrets sA, sB and sC (by opening the commitments), the
winner (in this case, player C) broadcasts the ClaimMoney C
transaction (96966124) to get the pot.
links to all
Two-party lottery without deposits (TwoPlayersLottery):
transactions in a correct
Below we present
the protocol won by Alice: PutMoney A:
execution of
96424665; PutMoney B: 96436412; Compute: 96436416;
ClaimMoney A: 96436417; In this execution, the players bet
0.04 B each and the transaction fees were set to 0.0001 B for
each transaction.
We also performed an execution which ﬁnished with
the Fuse transaction: PutMoney A: 97094615; PutMoney B:
97094780; Compute: 97099280; Fuse: 97105484.
21Unfortunately, it seems that currently Eligius is not accepting any trans-
action Tx redeeming Ty if it earlier received some other transaction T (cid:3)
redeeming Ty, even if T (cid:3)
x
x is time-locked in the future. We would like to stress
that this is just an implementation decision made by the Eligius administrators
and it does not follow from the Bitcoin speciﬁcation. We hope that this feature
of Eligius will be removed in the future (or, that the other mining pools will
start accepting the non-standard transactions).
As
a
an example of
raw transaction we present
the PutMoney B transaction
the
TwoPlayersLottery protocol
executions described above
(96436412) in more details. Here is its dump (with some
ﬁelds omitted):
from the ﬁrst
of
{ "lock_time":0,
"in":[{ "prev_out": {"hash":"a14...096", "n":0},
"scriptSig":"304...a01 039...443" }],
"out":[{"value":"0.03990000",
"scriptPubKey":"
OP_SIZE 32 34 OP_WITHIN OP_VERIFY
OP_SHA256 f53...226 OP_EQUALVERIFY
020...e33 OP_CHECKSIG" }]}
that
The meaning of the above is as follows. "lock_time":0
means,
the transaction does not have a time lock.
"hash":"a14...096" denotes a hash of the transaction,
which is being redeemed in PutMoney B and "n":0 denotes,
which output of that
transaction is being redeemed. The
input script "scriptSig":"304...a01 039...443"
consists of the signature (039...443) on PutMoney B under
the key B.pk and the public key B.pk itself (304...a01)
(in standard transaction’s output there is only pk’s hash and
pk has to be included in the corresponding input).
three parts:
The output
to get as
secret
input an ap-
script expects
string. The script
propriate signature and Bob’s
consists of
the ﬁrst part OP_SIZE 32 34
OP_WITHIN OP_VERIFY checks whether the second argu-
ment has an appropriate length; the second part OP_SHA256
f53...226 OP_EQUALVERIFY checks if its hash is equal
to hB i.e. f53...226); and the last part 020...e33
OP_CHECKSIG checks if the ﬁrst argument is an appropriate
signature under key (cid:3)B.pk (i.e. 020...e33).
REFERENCES
[1]
Ittai Abraham, Danny Dolev, Rica Gonen, and Joseph Y. Halpern.
Distributed computing meets game theory: robust mechanisms for
rational secret sharing and multiparty computation. In Eric Ruppert and
Dahlia Malkhi, editors, 25th ACM Symposium Annual on Principles of
Distributed Computing, pages 53–62. ACM Press, July 2006.
[2] Marcin Andrychowicz, Stefan Dziembowski, Daniel Malinowski, and
Łukasz Mazurek. Fair two-party computations via bitcoin deposits.
Cryptology ePrint Archive, Report 2013/837, accepted to the First
Workshop on Bitcoin Research 2014 (in Assocation with Financial
Crypto), 2013. http://eprint.iacr.org/.
[3] Marcin Andrychowicz, Stefan Dziembowski, Daniel Malinowski, and
Łukasz Mazurek. How to deal with malleability of bitcoin transactions.
CoRR, abs/1312.3230, 2013.
http://www.cs.technion.ac.il/∼idddo/cointossBitcoin.pdf.
[4] Adam Back and Iddo Bentov. Note on fair coin toss via bitcoin, 2013.
[5] Simon Barber, Xavier Boyen, Elaine Shi, and Ersin Uzun. Bitter
to better - how to make Bitcoin a better currency.
In Angelos D.
Keromytis, editor, FC 2012: 16th International Conference on Financial
Cryptography and Data Security, volume 7397 of Lecture Notes in
Computer Science, pages 399–414. Springer, February / March 2012.
1/p-
Secure multiparty computation without honest majority and the best
of both worlds. In Phillip Rogaway, editor, Advances in Cryptology –
CRYPTO 2011, volume 6841 of Lecture Notes in Computer Science,
pages 277–296. Springer, August 2011.
[6] Amos Beimel, Yehuda Lindell, Eran Omri, and Ilan Orlov.
[7] Assaf Ben-David, Noam Nisan, and Benny Pinkas. FairplayMP: a
system for secure multi-party computation.
In Peng Ning, Paul F.
Syverson, and Somesh Jha, editors, ACM CCS 08: 15th Conference on
Computer and Communications Security, pages 257–266. ACM Press,
October 2008.
457
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:57:33 UTC from IEEE Xplore.  Restrictions apply. 
[28]
[27]
pseudonyms. Journal of Economics and Management Strategy, 10:173–
199, 2000.
Juan A. Garay and Markus Jakobsson. Timed release of standard digital
signatures. In Matt Blaze, editor, FC 2002: 6th International Conference
on Financial Cryptography, volume 2357 of Lecture Notes in Computer
Science, pages 168–182. Springer, March 2002.
Juan A. Garay, Jonathan Katz, Ueli Maurer, Bj¨orn Tackmann, and Vas-
silis Zikas. Rational protocol design: Cryptography against incentive-
driven adversaries.
In 54th Annual Symposium on Foundations of
Computer Science, pages 648–657. IEEE Computer Society Press, 2013.
[29] Oded Goldreich, Silvio Micali, and Avi Wigderson. How to play any
mental game or A completeness theorem for protocols with honest
majority.
In Alfred Aho, editor, 19th Annual ACM Symposium on
Theory of Computing, pages 218–229. ACM Press, May 1987.
[30] S. Dov Gordon and Jonathan Katz. Partial fairness in secure two-
party computation.
In Henri Gilbert, editor, Advances in Cryptology
– EUROCRYPT 2010, volume 6110 of Lecture Notes in Computer
Science, pages 157–176. Springer, May 2010.
Joseph Y. Halpern and Vanessa Teague. Rational secret sharing and
In L´aszl´o Babai, editor,
multiparty computation: Extended abstract.
36th Annual ACM Symposium on Theory of Computing, pages 623–
632. ACM Press, June 2004.
[31]
[32] Dahlia Malkhi, Noam Nisan, Benny Pinkas, and Yaron Sella. Fairplay
- a secure two-party computation system. In Proceedings of the 13th
Conference on USENIX Security Symposium - Volume 13, SSYM’04,
pages 20–20, Berkeley, CA, USA, 2004. USENIX Association.
Ian Miers, Christina Garman, Matthew Green, and Aviel D. Rubin.
Zerocoin: Anonymous distributed e-cash from bitcoin. In Proceedings
of the 2013 IEEE Symposium on Security and Privacy, SP ’13, pages
397–411, Washington, DC, USA, 2013. IEEE Computer Society.
[33]
[34] Satoshi Nakamoto. Bitcoin: A peer-to-peer electronic cash system,
2008.
[35] Benny Pinkas. Fair secure two-party computation. In Eli Biham, editor,
Advances in Cryptology – EUROCRYPT 2003, volume 2656 of Lecture
Notes in Computer Science, pages 87–105. Springer, May 2003.
[36] The Washington Post. Cheating scandals raise new questions about
honesty, security of internet gambling, November 30, 2008.
[37] Paul Resnick, Ko Kuwabara, Richard Zeckhauser, and Eric Friedman.
Reputation systems. Commun. ACM, 43(12):45–48, December 2000.
[38] Dorit Ron and Adi Shamir. Quantitative analysis of the full bitcoin
transaction graph.
In FC 2013: 17th International Conference on
Financial Cryptography and Data Security, Lecture Notes in Computer
Science, pages 6–24. Springer, 2013.
[39] Adi Shamir, Ron Rivest, and Leonard Adleman. Mental poker, April
1979. Technical Report LCS/TR-125, Massachusetts Institute of Tech-
nology.
[40] Luis von Ahn, Nicholas J. Hopper, and John Langford. Covert two-
party computation.
In Harold N. Gabow and Ronald Fagin, editors,
37th Annual ACM Symposium on Theory of Computing, pages 513–
522. ACM Press, May 2005.
[41] Andrew Chi-Chih Yao. How to generate and exchange secrets (extended
abstract).
In 27th Annual Symposium on Foundations of Computer
Science, pages 162–167. IEEE Computer Society Press, October 1986.
[8]
Iddo Bentov and Ranjit Kumaresan. How to use bitcoin to design fair
protocols. Cryptology ePrint Archive, Report 2014/129, 2014. http:
//eprint.iacr.org/.
[9] Manuel Blum. Coin ﬂipping by telephone.
In Allen Gersho, editor,
Advances in Cryptology – CRYPTO’81, volume ECE Report 82-04,
pages 11–15. U.C. Santa Barbara, Dept. of Elec. and Computer Eng.,
1981.
[10] Peter Bogetoft, Dan Lund Christensen, Ivan Damg˚ard, Martin Geisler,
Thomas Jakobsen, Mikkel Krøigaard, Janus Dam Nielsen, Jesper Buus
Nielsen, Kurt Nielsen, Jakob Pagter, Michael I. Schwartzbach, and
Tomas Toft.
In Roger
Dingledine and Philippe Golle, editors, FC 2009: 13th International
Conference on Financial Cryptography and Data Security, volume
5628 of Lecture Notes in Computer Science, pages 325–343. Springer,
February 2009.
Secure multiparty computation goes live.
[11] Dan Boneh and Moni Naor. Timed commitments.
In Mihir Bellare,
editor, Advances in Cryptology – CRYPTO 2000, volume 1880 of
Lecture Notes in Computer Science, pages 236–254. Springer, August
2000.
[12] Gilles Brassard, David Chaum, and Claude Crepeau. Minimum disclo-
sure proofs of knowledge. Journal of Computer and System Sciences,
37(2):156 – 189, 1988.
[13] Vitalik Buterin. The bitcoin gambling diaspora, Aug 2013. Bitcoin
Magazine.
[14] Vitalik Buterin. Satoshidice sold for $12.4 million, Jul 2013. Bitcoin
Magazine.
[15] Christian Cachin and Jan Camenisch. Optimistic fair secure computa-
tion. In Mihir Bellare, editor, Advances in Cryptology – CRYPTO 2000,
volume 1880 of Lecture Notes in Computer Science, pages 93–111.
Springer, August 2000.
Jan Camenisch, Susan Hohenberger, and Anna Lysyanskaya. Compact
e-cash.
In Ronald Cramer, editor, Advances in Cryptology – EURO-
CRYPT 2005, volume 3494 of Lecture Notes in Computer Science,
pages 302–321. Springer, May 2005.
[16]
[17] David Chaum. Blind signature system.
In David Chaum, editor,
Advances in Cryptology – CRYPTO’83, page 153. Plenum Press, New
York, USA, 1983.
[18] David Chaum, Amos Fiat, and Moni Naor. Untraceable electronic cash.
In Shaﬁ Goldwasser, editor, Advances in Cryptology – CRYPTO’88,
volume 403 of Lecture Notes in Computer Science, pages 319–327.
Springer, August 1988.
Jeremy Clark and Aleksander Essex. CommitCoin: Carbon dating com-
mitments with Bitcoin - (short paper). In Angelos D. Keromytis, editor,
FC 2012: 16th International Conference on Financial Cryptography
and Data Security, volume 7397 of Lecture Notes in Computer Science,
pages 390–398. Springer, February / March 2012.
[19]
[21]
[20] Richard Cleve. Limits on the security of coin ﬂips when half the
processors are faulty. In Proceedings of the Eighteenth Annual ACM
Symposium on Theory of Computing, STOC ’86, pages 364–369, New
York, NY, USA, 1986. ACM.
Jean-Sebastien Coron, Yevgeniy Dodis, Cecile Malinaud, and Prashant
Puniya. Merkle-Damg˚ard revisited: How to construct a hash function. In
Victor Shoup, editor, Advances in Cryptology - CRYPTO 2005, volume
3621 of Lecture Notes in Computer Science, pages 430–448. Springer
Berlin Heidelberg, 2005.
Ivan Damg˚ard, Marcel Keller, Enrique Larraia, Valerio Pastro, Peter
Scholl, and Nigel P. Smart. Practical covertly secure MPC for dishonest
majority - or: Breaking the SPDZ limits.
In ESORICS 2013: 18th
European Symposium on Research in Computer Security, Lecture Notes
in Computer Science, pages 1–18. Springer, 2013.
John R. Douceur. The sybil attack. In Revised Papers from the First
International Workshop on Peer-to-Peer Systems, IPTPS ’01, pages
251–260, London, UK, UK, 2002. Springer-Verlag.
[22]
[23]
[24] Cynthia Dwork and Moni Naor. Pricing via processing or combatting
junk mail.
In Ernest F. Brickell, editor, Advances in Cryptology –
CRYPTO’92, volume 740 of Lecture Notes in Computer Science, pages
139–147. Springer, August 1992.
[25] The Economist. Online gambling: Know when to fold, 2013.
[26] Eric J. Friedman and Paul Resnick.
The social cost of cheap
458
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:57:33 UTC from IEEE Xplore.  Restrictions apply.