over a circuit that was constructed using a set of 25 Tor
relays. We started all the probe ﬂows simultaneously after
the target ﬂow ran for 50 seconds. Each probe ﬂow lasted for
600 seconds, and we recorded the observed throughput every
0.1 seconds. Overall, we performed 40 measurements using
RELAY-SET-1 in November 2010 and 150 measurements
using RELAY-SET-2 in January-February 2011.
We use the entropy metric [15, 44] (with a uniform prior)
to quantify the attacker’s uncertainty about the relays in
a circuit (our computations are described in technical re-
port [34]). Figure 6(a) depicts the CDF of the bottleneck
relay entropy for varying window sizes using a correlation
threshold of 0.4. We can see that while our attacks are not
able to exactly identify the bottleneck relay, the bottleneck
relay entropy is still drastically reduced. For example, us-
ing a window size of 300 seconds, the entropy in half of the
cases is less than 2.5 bits (out of 4.6 bits). We found similar
results for correlation thresholds 0.3 and 0.5.
In addition to being able to reduce the entropy of the
bottleneck relay distribution, we can also learn some infor-
mation about the target ﬂow’s non-bottleneck relays. Our
attack observation is that if the mean throughput of a one-
hop probe through a relay is less than the mean throughput
of the target ﬂow, then that relay is unlikely to be part of the
target ﬂow circuit. The expected drop in entropy for a given
throughput is shown in Figure 6(b). We also plot the CDF of
4Note that we did not make use of Emulab’s network emu-
lation infrastructure and ran experiments on the production
Tor network instead.
Tor circuit throughput for comparison. We can see that the
circuits receiving a higher throughput have a lower entropy
in the network. This is due to the presence of only a few
high-throughput relays in the system; if high throughput is
achieved, there are only a limited number of relays capable
of providing this service. The average value of
through-
put observed in our experiment was 96 KBps thus yielding
an expected instantaneous drop of about 18% in the total
entropy at any given point in the experiment’s run time.
We demonstrate the usefulness of this observation by elim-
inating relays with lower throughput than the target ﬂow
over a period of time. The results are plotted in Figure 6(c).
By using this simple technique, we were able to reduce the
entropy in our sample space by roughly 40% in the ﬁrst ten
seconds, and using a minute-long attack, we were able to
reduce the entropy the bottleneck relay’s sample space by
roughly 45% as ﬂuctuating probe bandwidth measurements
allowed more relays to be eliminated from consideration.
3.4 Identifying Guard Relays
So far, we presented attacks that reduce the entropy of Tor
relays in a single circuit. We now present attacks that can
combine such probabilistic observations over multiple cir-
cuits, and identify a client’s set of guard relays. Our obser-
vation is that the guard relays are more likely to be present
in the anonymity set of bottleneck relays for a client’s cir-
cuit, as compared to other relays (since the probability of
the guard relays appearing in the client’s circuit is much
higher than other relays). Thus, over multiple circuit refor-
mulations, the set of relays that appear in the anonymity set
for a client’s circuit with the highest frequencies are likely
to be the guard relays.
Experimental setup:
Here, in addition to restricting
the client’s Tor application in using relays from a selected
set of 25 relays, we also restricted its choice of guard re-
lay. With the help of the conﬁguration options EntryNodes,
StrictEntryNodes, UseEntryGuards, and NumEntryGuards,
we conﬁgured the client’s Tor application to always use a
particular relay as the guard relay. The intuition behind this
experiment is to analyze the vulnerability of using a ﬁxed
guard relay; i.e., we want to observe whether use of a ﬁxed
guard relay allows the attacker to combine probabilistic ob-
servations over multiple circuits and identify the guard relay.
Similar to the experiments for identifying Tor relays, we used
25 diﬀerent machines to do the probing where the target ﬂow
ran for 700 seconds and the probe ﬂows ran for 600 seconds
(within the lifetime of the target ﬂow). We performed three
experiments for this scenario, where we chose the guard re-
lays to be Fooligans, jalopy, and trusted, respectively.
We performed 50, 20, and 50 runs for the three experiments
respectively, between November 2010 and February 2011.
Note that we considered these three relays since we wanted
to study the eﬀectiveness of our attack against guard re-
lays with very diﬀerent capacities. Fooligans, jalopy, and
trusted have a reported capacity of 82 KBps, 5.8 MBps, and
17.4 MBps, respectively (as of February 2011).
Results: Figure 7 show the number of times a particular
relay was selected in the anonymity set for the bottleneck re-
lay used by the target ﬂow. We used a correlation threshold
of 0.4, and set the window size to be 400. In Figure 7(a), we
can see that the relay with the highest frequency of being in
the anonymity set of bottleneck relays is Fooligans, which
is indeed the guard relay for the client. In fact, in all three
221F
D
C
 1
 0.8
 0.6
 0.4
 0.2
 0
WS = 300, CT = 0.4
WS = 400, CT = 0.4
WS = 500, CT = 0.4
 1
 1.5
 2
 2.5
 3
 3.5
 4
 4.5
 5
Entropy
(a)
y
p
o
r
t
n
e
l
a
u
d
i
s
e
r
e
g
a
t
n
e
c
r
e
P
 1
 0.8
 0.6
 0.4
 0.2
 0
 0
Throughput CDF
% Entropy 
 100
 200
 300
 400
 500
 600
Observed throughput (KBps)
(b)
y
p
o
r
t
n
e
l
a
u
d
i
s
e
r
e
g
a
t
n
e
c
r
e
P
 1
 0.8
 0.6
 0.4
 0.2
 0
  0
 10
 20
 30
Seconds
 40
 50
(c)
Figure 6: (a) Entropy of the anonymity set obtained through our de-anonymizing relay attack. (b) Entropy
loss and CDF of observed throughput. (c) Decrease in entropy over six consecutive ten second intervals.
k
c
e
n
e
l
t
t
o
b
e
h
t
g
n
e
b
i
f
o
y
c
n
e
u
q
e
r
F
 16
 14
 12
 10
 8
 6
 4
 2
 0
k
c
e
n
e
l
t
t
o
b
e
h
t
g
n
e
b
i
f
o
y
c
n
e
u
q
e
r
F
 16
 14
 12
 10
 8
 6
 4
 2
 0
F
m
w
$
F
g
tr
a
o
y
r
n
o
li
g
k
t
o
r
a
l
o
y
a
n
s
illi
a
c
h
7
0
a
D
o
m
h
a
i
n
s
...
B
...
8
0
e
s
A
4
j
a
l
o
0
0
a
t
e
D
p
y
r
e
l
o
D
0
cl
u
0
D
a
d
b
4
2
e
d
P
s
b
P
riv
h
iv
a
c
h
e
n
C
b
l
u
t
b
l
u
t
g
o
tr
o
m
m
a
a
o
m
0
5
2
g
i
e
o
t
m
g
i
e
4
e
u
k
1
Tor relays
(a)
k
c
e
n
e
l
t
t
o
b
e
h
t
g
n
e
b
i
f
o
y
c
n
e
u
q
e
r
F
 16
 14
 12
 10
 8
 6
 4
 2
 0
P
w
F
g
$
tr
u
b
l
u
t
s
t
e
P
illi
a
riv
m
0
o
7
0
tr
b
l
u
t
0
D
o
D
m