### Android 应用运行机制简述

本节将概述 Android 应用中 Java 层代码与 Native 层代码的基本运行原理。

当启动一个 Android 应用程序时，系统会首先实例化 `Application` 类（该类在 `AndroidManifest.xml` 文件中指定）。`Application` 类是应用的入口点，负责初始化全局状态。接下来，系统会启动主活动（Main Activity），并根据应用逻辑执行相应的代码。

具体来说，Android 应用的运行流程如下：
1. **实例化 `Application` 类**：系统根据 `AndroidManifest.xml` 中的配置创建 `Application` 对象。如果未明确指定自定义的 `Application` 类，系统将使用默认的 `Application` 类。
2. **启动 Main Activity**：系统根据 `AndroidManifest.xml` 中的 `<intent-filter>` 配置找到主活动，并调用其 `onCreate()` 方法进行初始化。
3. **执行应用逻辑**：随着用户交互和应用内部逻辑的发展，系统会调用其他活动、服务、广播接收器等组件，执行相应的代码。

Java 层代码主要运行在 Dalvik 或 ART 虚拟机上，而 Native 层代码则通过 JNI（Java Native Interface）接口与 Java 代码进行交互，通常用于执行高性能计算或访问底层系统资源。

注：本部分内容可能存在以下问题：
- 简略
- 理解不到位

如果发现可以补充的地方，欢迎随时提出建议。本部分内容也会随着时间不断更新和完善。