event.sourceTranslatedZoneURIevent.sourceTranslatedZoneURI
Source User Id String 1023 n/a
event.sourceUserId
Source User Name String 1023 n/a
event.sourceUserName
Source User Privileges String 1023 n/a
event.sourceUserPrivileges
Source Zone URI String - n/a (2)
event.sourceZoneURI
Start Time TimeStamp n/a n/a (5)
event.startTime
Transport Protocol String 31 n/a (6)
event.transportProtocol
Virus Name (rule) 	See "QuickFlex Parser ToolRules".Range Notes
1. Although these fields can be set using the FlexConnector properties file, the recommended way is to create a categorization file. For more about the possible values, see the "Categories" topic in the Console Help or the ArcSightConsole User’s Guide. Also, see "FlexConnectors and Categorization" in the FlexConnector Developer's Guide.2. Although URI fields can be set using the FlexConnector properties file, these are really links to resources in the database. Therefore, it is recommended that those fields be set using the network-model and customer-setting features.
3. This is an IPv4 address (from 0.0.0.0 to 255.255.255.255) or an IPv6 address 	(xxxx:xxxx:xxxx:xxxx:xxxx:xxxx).
4. This is a MAC address: XX:XX:XX:XX:XX:XX or XX-XX-XX-XX-XX-XX.5. This is a timestamp stored as milliseconds since January 1, 1970.
6. The options are: TCP, UDP, ICMP, IGMP, ARP.
Micro Focus Quick Flex Parser Tool (1.1)
Page 36 of 67
User Guide 
Chapter 4: ArcSight Assignments
7. Set PreserveRawEvent to Yes to have the connector automatically preserve the original event log received from the device. With the default No”, you can configure this field. To find thePreserveRawEvent field in the ArcSight Console interface, go to the Connectors resource tree > Configure > Default tab > Content >Processing section > PreserveRawEvent.
8. For a non-IPv6-aware parser, the IPv6 fields (deviceCustomIPv6Address1, 2, and 3) should consistently use 1 for device, 2 for source, and 3 for destination. The labels for them will automatically be set if the IPv6 address field is set, but if your ArcSight Console parser sets them explicitly, it should use the exact strings shown above.For an IPv6-aware parser, the IPv6 fields (deviceCustomIPv6Address1, 2, and 3) can contain either IPv4 or IPv6 addresses. In practice, these fields should rarely be used. If they are, the labels should be set to an appropriate value.
9. The name field is mandatory.
Micro Focus Quick Flex Parser Tool (1.1)
Page 37 of 67
Chapter 5: Quick Flex Parser Tool RulesChapter 5: Quick Flex Parser Tool Rules
A mapping rule provides a level of indirection between the user and the ArcSight ESM schema field a value is mapped to. A value comes from either a token, the value captured by the token’s regular expression when it is used in the token filter, or the result of an operation that is part of the token or token filter.
A mapping rule provides:A mapping rule provides:
l support for common operations so that you do not need to repeatedly implement them in each token 	filter or parser
l a user-friendly name for the schema field
l the ability to change how a value would be applied to the schema without requiring the user to change 	token filters or parsers
There is a distinction between selecting a mapping that simply writes to a schema field and one that has operations. The majority of users will simply do mapping.The available operations, when the mapping rule has operations, are described in "ArcSight Operations". In this case, the mapping rule supports these uses:
l the value must be tested and modified in some way that relates to the schema field
l the destination schema field must be selected based on an ArcSight mapping convention. It supports 	consistent mapping for cases when there are no natural schema fields to map tol support the complexity of the ArcSight schema when a value might be mapped to different places
The following table describes the mapping rules available in Quick Flex Parser Tool.
Rule Name 	Description and Arguments
ACL Name 	Defines the name ofthe Access ControlList (ACL).
Arguments:
l ACL Name—The value ofACL Name is mappedtoevent.deviceCustomString1.l ACL Label—Ifdefined, the value is mappedtoevent.deviceCustomString1Label. Ifit is not 	defined, "ACL name" is mappedtoevent.deviceCustomString1Label.
AdditionalData 	Allows youtospecify a customadditionaldata name whenyouperformmapping.
For example, whenyouare mappingToken0, youcanenter CUSTOM_NAME as anargument. The followingwillappear inthe parser properties file: additonaldata.CUSTOM_NAME =Token0
Micro Focus Quick Flex Parser Tool (1.1)
Page 38 of 67
User Guide 
Chapter 5: Quick Flex Parser Tool Rules
Rule Name 	Description and Arguments
AV Engine Version 	Defines the AntiVirus Engine version.
Arguments:
l AV Engine Version—The value ofAV Engine Versionis mappedto 	event.deviceCustomString2.
l AV Engine VersionLabel—Ifdefined, the value is mappedtoDevice CustomString2 Label. 	Ifit is not defined, "AV Engine Version" is mappedtoevent.deviceCustomString2Label.DestinationAccount 	Identifies the target account ofanevent. Ifthe account name contains a Windows domain, it will 	split the domainname out ofthe account name. The domainname is writtento 
	event.destinationNtDomain.
Arguments:
l Account Name—The domainname (ifit exists)is mappedtoevent.destinationNtDomain 	andAccount Name is mappedtoevent.destinationUserName.DestinationAddress or Host 	Destinationtarget ofanevent; typically this willbe a host address or a host name. The rule 	evaluates whether the target is anaddress or a host name andmaps it tothe appropriate field.
Arguments:
There are three possible mappings:
l ifvalue patternmatches anIPV4 address thenthe value is mappedto 	event.destinationAddress.l ifthe value patternmatches anIPV6 address thenthe value is mappedto event.customIPv6Address3 and"DestinationIPv6 Address" is mappedto event.customIPv6Address3Label.
l ifneither ofthese conditions match, thenthe value is mappedto 
	event.destinationHostName.
Device Address or Host 	Device is the systemwhere the event occurred, or fromwhere the event was retrieved. The 	rule evaluates the value patternandmaps the value tothe appropriate field.Arguments:
There are three possible mappings:
l ifthe patternmatches anIPv4 address, thenthe value is mappedto 
event.destinationAddress inthe case ofanaddress, or event.deviceAddress inthe case ofa host.
l ifthe patternmatches anIPv6 address thenthe value is mappedto event.customIPv6Address1 and"Device IPv6 Address" is mappedto event.customIPv6Address1Label.
l ifneither ofthese conditions match, thenthe value is mappedtoevent.destinationHostName inthe case ofanaddress, or event.deviceHostName inthe case ofa host.
Micro Focus Quick Flex Parser Tool (1.1)
Page 39 of 67
User Guide 
Chapter 5: Quick Flex Parser Tool Rules
Rule Name 	Description and Arguments
Group 	A Groupcanbe anythingthat anapplicationor operatingsystemrefers toas a group. 	TheArcSight event schema does not support groups, soifyoumust define a group, use these 	conventions tohandle the values.Arguments:
l GroupName—The value ofGroupName is mappedtoevent.deviceCustomString6.
l GroupLabel—Ifdefined, the value is mappedtoevent.deviceCustomString6Label. Ifit is not 	defined, "Group" is mappedtoevent.deviceCustomString6Label.
Instance 	AnInstance is a representationofa distinct event. Ifthe product supports instance, use these 	conventions tomapthe values:
Arguments:Arguments:
l Instance FieldValue—The value is mappedtoevent.deviceCustomString3.
l Instance Label—Ifdefined, the value is mappedtoevent.deviceCustomString3Label. Ifit is 	not defined, "Instance" is mappedtoevent.deviceCustomString3Label.
Object 	A genericobject. Any object that does not have a naturalrule. Use these conventions tomap 	the values:
Arguments:
l Object Name—The value ofObject Name is mappedtoevent.deviceCustomString6.l Object Label—Ifdefined, the value is mappedtoevent.deviceCustomString6Label. Ifit is 	not defined, "Object name" is mappedtoevent.deviceCustomString6Label.
Rule Name 	Any instance ofa rule name. For example, this canbe a firewallrule, a mappingrule, andsoon. 	Use these conventions tomapthe values:
Arguments:
l Rule Name—The value ofRule Name is mappedtoevent.deviceCustomString1.l Rule Label—Ifdefined, the value is mappedtoevent.deviceCustomString1Label. Ifit is not 	defined, "Rule name" is mappedtoevent.deviceCustomString1Label.
Signature Version 	This is typically anIDS(intrusiondetectionsystem)signature versionnumber.
Arguments:
l Signature Version—The value ofSignature Versionis mappedto 	event.deviceCustomString2.
l Signature VersionLabel—Ifdefined, the value is mappedtoevent.deviceCustomString2Label. Ifit is not defined, "Signature version" is mappedto event.deviceCustomString2Label.
Micro Focus Quick Flex Parser Tool (1.1)
Page 40 of 67
User Guide 
Chapter 5: Quick Flex Parser Tool Rules
Rule Name 	Description and Arguments
Source Account 	The account ofthe source that triggeredthe event. Ifthe account name contains a Windows 	domain, it willsplit the domainname out ofthe account name. The domainname is writtento 	event.destinationNtDomain.Arguments:
l Account Name—The domainname (ifit exists)is mappedtoevent.destinationNtDomain 	andAccount Name is mappedtoevent.destinationUserName.
Source Address or Host 	The address ofthe systemor device that is the originofanevent or the locationwhere the 	event occurred.
Arguments:
There are three possible mappings:
l ifthe patternmatches anIPv4 address, thenthe value is mappedtoevent.sourceAddress.l ifthe patternmatches anIPv6 address, thenthe value is mappedto event.customIPv6Address2 and"Source IPv6 Address" is mappedto event.customIPv6Address2Label.
l ifneither ofthese conditions match, thenSource Address is mappedto 	event.sourceHostName.
Virus Name 	The name that a product assigns toa virus.
Arguments:
l Virus Name—The value ofVirus Name is mappedtoevent.deviceCustomString1.l Virus Label—Ifdefined, the value is mappedtoevent.deviceCustomString1Label. Ifit is not 	defined, "Virus name" is mappedtoevent.deviceCustomString1Label.
Micro Focus Quick Flex Parser Tool (1.1)
Page 41 of 67
Chapter 6: CEF Verification
This section contains the following topics:
"CEF Verification Features and Benefits" below
"CEF Compliance Workflow Summary" below
CEF Verification Features and BenefitsCEF Verification Features and Benefits
The CEF Verification tool helps you create CEF-compliant log files for a device. The log file used for CEF Verification can include up to 2000 lines without impacting the tool's performance. The tool simplifies your work by doing the following:
l Confirms that the CEF header fields are correct.
o If they are not correct, then you can add notes in the tool to change the settings in the device.l Confirms the CEF field names are correct in the CEF extension.
o If you make a correction in the extension, then the tool applies the change to all lines with the same 	pattern in the log file.
l Allows you to change the CEF key to match the type where you can see them in the line extensions. l Verifies field type upon assignment to the CEF key.l Verifies only the keys, such as field name abbreviations, that are allowed for use by the device (Event 	Producer). A SmartConnector (Event Consumer) can use additional keys.
l Allows you to create new keys which are mapped to Additional Data assignments.
l Generates a report which describes whether CEF header fields and CEF field names are correct, and notes any changes you make to the CEF extensions. You can use the report to adjust the device setting, produce the log file and start the next iteration.l Supports the Syslog format for lines in the log file. The Syslog Header describes the standard beginning 	of Syslog line, and includes a date and a host.
CEF Compliance Workflow Summary
The following tasks provide a high-level description of how to use the Quick Flex Parser Tool to verify that the log file adheres to the CEF standard.
Micro Focus Quick Flex Parser Tool (1.1)
Page 42 of 67Page 42 of 67
User Guide 
Chapter 6: CEF Verification
1. Create a CEF Compliance Project
Create a project to load the log file and identify the folder to store the results.
2. Review Header Values
In the View Header Values window, all of the CEF headers will be parsed into their own columns. The parsing is done by the connector. The intent of this window is for you to check and comment on whether the values are appropriate and match the vendor's proper data type and terminology.3. Assess CEF Extensions
Click the Warning Details icon to view the warning details and descriptions for the line that you are editing.
a. In Verify CEF extension window, right-click a key/value pair to pick an appropriate match and edit the key. The objective of this is to have key/value pairs with matching data types so that the value for each key can be mapped and not cause warnings when the log is being fed into the connector.b. Keys are available in a list menu.
c. You can change the key to another key that may be more appropriate for the values that it is 	representing.
Note: For a complete description of the available CEF keys, see "
" on Protect 724.
d. When you edit a log line, the pattern of the log line is noted in the back-end. When you are done 	editing and apply the changes, other log lines in the log file will have the same changes applied.e. The changes made in this window are noted in the generated report.
4. Review Changes
a. Repeat the above steps until there are no log warnings or your are satisfied with your changes.
b. Click Refresh for the edits that were done previously in the CEF extension window to apply to all the 	other pattern-matching log lines.
5. Generate a Report
a. The generated report includes comments from the Header Values window.b. The generated report includes all the edits done in the CEF extension window. Each edit contains the original log line used, the original and new keys, and the other log lines affected from the edits to the particular original log line.
Micro Focus Quick Flex Parser Tool (1.1)
Page 43 of 67
User Guide 
Chapter 6: CEF Verification
6. Apply Your Changes to the Device6. Apply Your Changes to the Device
Based on the information from the Generated Report, apply changes to the device. Applying changes may be relevant in the CEF header and in certain key patterns.
Micro Focus Quick Flex Parser Tool (1.1)
Page 44 of 67
Chapter 7: CEF Verification Log View
Navigation: Landing page>Create New>Log View or Landing page>Open Files>Log ViewThe CEF Verification Log View opens when you create a new project or open an existing project. This view contains these panels:
l The CEF Verification Log View shows the log lines with highlighting of syslog header and CEF header or just CEF header. It shows the status for each log line. If it has a warning icon, there are some warnings that may need to be addressed. If you click the icon, it opens the Verify CEF Extension window where you can see the log line and modify it.l Click the Warning icon  in the Log View window Status column to open the Verify CEF Extension
window. Right-click a section of a log line to assign keys to the line. As keys are assigned, the color of portions of the line will change. If the log line is valid, a green check mark indicates it is verified.
l You can also click the Warning Details icon to open another window that lists the warnings and 	description for each warning for that particular log line.For more information on how highlighting is used in CEF Verification tool, see "Understanding Color Highlighting in Log Lines".
CEF Verification Log View Tool Bar
The CEF Verification Log View tool bar contains the following:
l File: contains commands to create a new project, open an existing project, open a log file in the project, 	save the project, and edit project properties.l View Header Values: Click to open the View Header Values window for the highlighted line. Use this window to check the values assigned to components in each log line for correctness. See "View Header Values".
l Verify CEF Extension: Click to open the Verify CEF Extension window for the highlighted line. Use this 	window to assign CEF keys to components in the log message. See "Verify the CEF Extension".l Help: Click to access the online help and the two workflow summaries.
CEF Verification Log View Ribbon
The CEF Verification Log View ribbon displays the following status and commands:
l Total Log Lines: Indicates the total number of lines in the log file.
l Warning Lines: Indicates the lines with errors.
Micro Focus Quick Flex Parser Tool (1.1)
Page 45 of 67
User Guide 
Chapter 7: CEF Verification Log ViewChapter 7: CEF Verification Log View
l Go to: Enter a line number to skip to that line.
l Search by Log: Search on a word or phrase in the log file.
l 	Report: Click to generate a new log file and a report that contains a record of your changes. See 	"Generate a CEF Verification Report".
l Gear button: Click the gear button to display these options:o Show Syslog Header: Enable this option to display the syslog header (default). When disabled, the 	syslog header is hidden. See "Highlighting Patterns in Log Lines".
o Show CEF Header: Enable this option to display the CEF header (default). When disabled, the CEF 	header is hidden. See "Highlighting Patterns in Log Lines".
If the file contains both syslog and CEF headers, CEF Verification tool allows you to hide or display the following combinations:Show SyslogHeader enabled(displayed) SyslogHeader disabled(hidden) 
SyslogHeader disabled(hidden)
Show CEFHeader enabled(displayed) Show CEFHeader enabled(displayed) Show CEFHeader disabled(hidden)
l Refresh: Click to refresh the contents of the working view.
Creating CEF Verification Projects and Opening CEF Log Files
You can perform these tasks on the Quick Flex Parser Tool Landing Page for a CEF Verification project: l Create a CEF Verification Projectl Open a CEF Log File 
l View a Workflow Summary
Create a CEF Verification Project
Navigation: Landing page>Create New 
About: 
CEF Verification projects: 
Quick Flex Parser Tool performs CEF verification within the scope of a project. The project contains the original log file and the report of the changes you made. You can use the generated report as a reference to make the corresponding corrections to the CEF file manually and make it suitable for use within the FlexConnector framework.Micro Focus Quick Flex Parser Tool (1.1)
Page 46 of 67
User Guide 
Chapter 7: CEF Verification Log View
Procedure:
Create a new project:
1. Click Create New on the Landing Page to open the New Project dialog. 2. Select the Verify CEF Log to create a CEF verification project. 
3. Enter the following information in the Create New Project page: 
	l the name of the vendor who provided the log filel (Optional) the name of the product that produced the log file
l (Optional) the version number of the product
Note: The vendor and product names defined are mapped automatically to their
corresponding fields.
If you do not specify these details at the beginning of a project, you can specify them later by selecting File>Edit Project Properties in the Log View.4. For CEF Verification projects: select Syslog File if you are working with a syslog log file. 5. (Optional) Click Browse to navigate to the log file.
If you do not select a log file at the beginning of a project, you can select it later by selecting File>Open Log File in the Log View.
Note: For CEF Verification projects only:
l The limitation on the size of log files for CEF Verification projects is 100 Mb.l Select the Verify CEF Log checkbox and leave the Syslog File checkbox on for CEF
verification of Syslog files.
6. Click Browse to navigate to the location where you want to store your project artifacts.
7. Click Create. The log file is loaded into the Log View.A JSONproject file is created. The name of the file is a concatenation of a prefix to indicate whether the file belongs to a parser file or a CEF verification project (pt or cef), the vendor name, the product name, and the version number (prefix_vendor_product_version.json). For example, cef_ 
vendorXYZ_productABC_1.json or pt_vendorUVW_productDEF_1.json.
Open a CEF Log File
Navigation: Log View>File>Open Log FileNavigation: Log View>File>Open Log File
Select File>Open Log File. The log file and any associated project artifacts are loaded into the Quick Flex Parser Tool.
When you open a new log file, you will be prompted that the work that you have done so far will be erased if uploading a new log. You will get a prompt to save the generated report for the original log file since the
Micro Focus Quick Flex Parser Tool (1.1)Page 47 of 67
User Guide 
Chapter 7: CEF Verification Log View
keys that changed may not work for the new log file. Each new log file gets interpreted by the connector and may produce different results. Follow the prompts to save the work that you have done with the original log file.
View a Workflow Summary
Navigation: Landing page> CEF Compliance Overview
Procedure:Procedure:
Click Quick Flex Overview for a graphic representation of the Quick Flex workflow.
See CEF Compliance Workflow Summary for details.
View Header Values
Navigation: Log View>View header values
Use the View Header Values window to inspect the values assigned to components in the header.
About:About:
The first column in the table contains the line number. Subsequent columns contain the values for the components detected in the header. Click Add Comments to add any notes you want to the table. You can open and edit the comments at any time.
If you notice any header component values that you want to change, you must return to the device to make your changes, re-run the log file, then load it back into Quick Flex Parser Tool.Verify the CEF Extension