 Kiosk User = Most Obvious Security Threat.
 Opportunistic hacker in an 8 hour stop over..
Kiosk Security Model Contains a Common Oversight:
 Remote websites are not factored into the security equation.
 Remote websites often trusted MORE than local Kiosk users!
Kiosks Rely On the Browser Control Security Settings.
 Security designed to protect users from malicious websites.
 Not designed for Kiosk terminals.
Hacking Kiosk Software
Available Remote Input Vectors:
 Remotely hosted content, viewed by a Kiosk.
 JavaScript.
 Java Applets.
 ActiveX.
 ClickOnce applications (.NET Online Application Deployment).
 Internet Zone protocol handlers.
 File type handlers.
 Flash, Director, Windows Media Player, Real, QuickTime, Acrobat, 
other browser plug-ins.
Increased Functionality = Larger Attack Surface.
Hacking Kiosk Software
I need a Kiosk Hacking Website.
 An online tool you visit from any Kiosk terminal.
 Provides content to help an escape from any application jail.
 “Sure would help me during penetration tests”
iKAT – Interactive Kiosk Attack Tool – Official Release
                   http://ikat.ha.cked.net
Hacking Kiosk Software
What Can iKAT Do?
Kiosk Reconnaissance.
 JavaScript & res:// (resource) protocol handler.
 Extract bitmap resources from PE executables.
 Verify bitmap height, executable exists.
 Provides valuable information regarding the Kiosk.
 iKAT detects common commercial Kiosk products.
Hacking Kiosk Software
Display Local Browser Variables.
 Determine underlying browser technology.
 MSINET.OCX, WINHTTP.DLL self-identify as Internet Explorer
 Detect the presence of .NET
Display Remote Server Variables
 Discover remote IP address of the Kiosk terminal.
 Detect any additional headers being included in requests.
 “Kiosk-Location: Terminal5”
Hacking Kiosk Software
Invoke Dialogs with JavaScript/HTML
File Browse:
File Save As:
Javascript:document.execCommand(“SaveAs”);
File Print:
Javascript:window.print();
“Print to File” - Invoke file/Open dialog.
Invoke File Print Preview ActiveX:
Hacking Kiosk Software
Use Flash To Create Common Dialogs.
 Adobe Flash is widely used online, plug-in typically installed.
 DownloadCmd.SWF : Downloads cmd.exe to disk.
 Create 3 File-View Dialogs
 “Select File For Upload”
 “Select File(s) For Upload”
 “Select location for Download by ikat.ha.cked.net”
Common Dialog With Unique Dialog ID Title
 Not standard “Choose File”, Kiosk blacklist fails again.
Hacking Kiosk Software
Spawning Applications.
 Can we cause an applications/processes to launch on the Kiosk.
 Spawned application may contain common dialogs.
 Provide additional access to the host.
Accessing Default Windows URI Handlers.
 Callto://, Gopher://, HCP://, Telnet://, TN3270://, Rlogin://, 
LDAP://, News://, Mailto://
Click a Link to URI Handler.
  mailto 
 Mailto URI handler launches (email client)
3rd party URI Handlers
 MMS://, SKYPE://, SIP://, Play://, Steam://, Quicktime://
Hacking Kiosk Software
Example: HCP:// Help And Support Center
  Click me 
 Search HCP for What You Want to Launch
 “Using Notepad” Provides link to spawn notepad.exe
 Left Click Only! (No right click button)
Hacking Kiosk Software
iKAT Provides Links to over 100 Internet Zone URI handlers.
 Click, Click, Click down the list.
 Determine which handlers are blocked by the Kiosk.
 Invoke the handler.
 Use the invoked handler to escape.
Pluggable Protocol Handlers
 Contains URLs for Plugable protocols.
 About:, res:, shell:
Hacking Kiosk Software
Invoke Applications Using File Type Handlers.
 Click on test.myfile, Windows spawns ‘myfile’ handler.
 Internet Explorer supports prompt-less handler execution.
 Example: Click test.wmv, Windows Media Player Spawns.
 No Prompt “Are you sure you want to…”.
 Kiosk blacklists detect warning prompt pop-ups!
iKAT uses DHTML/JavaScript to invoke over 100 unique file handlers.
Hacking Kiosk Software
iKAT Windows Media Files.
 ‘Promptness’ launching of wmplayer.exe for multiple file types.
 ‘Web Enabled’ playlist.
 Creates a clean web browser, inside Windows Media Player.
Hacking Kiosk Software
Embed Executables Within Office Documents.
 Is an Office viewer installed on the Kiosk?
 Embed cmd.exe within an office document.
 Supported by .DOC,.DOCX,.XLS,.XLSB,.XLSM,XLSX
Hacking Kiosk Software
Malicious Java Applets:
 Signed Java applets can execute local processes.
 Detect if JRE is installed, using the resource protocol.
 Does the Kiosk detect the security warning prompt?
 “Warning – Security”
iKAT Contains Signed Kiosk Specific Java Applets.
 Spawn command local shells, execute useful binaries.
 Jython – GNUCITIZEN’s ‘Python in a Java Applet’.
Hacking Kiosk Software
Malicious ActiveX
 Safe for scripting ActiveX’s can be used to compromise a Kiosk.
 Unsafe method: object.execute()
 Can we install a malicious ActiveX on the Kiosk?
 Execute cmd.exe?
iKAT ActiveX
 Safe-for-scripting ActiveX which executes arbitrary executables.
 Installing an ActiveX requires administrative permissions.
 Its unlikely you will have administrative authority.
 If by some chance you do, you win.
ActiveX is changing:
 Internet Explorer 8 does not require admin rights for ActiveX.
Hacking Kiosk Software
Malicious ClickOnce Applications
 ClickOnce is .NET 2.0/3 technology (Runtime required)
 Supports online application deployment. (.application)
 Administrative authority not required to run!
 Creates a security prompt with another unique title.
 New technology: Kiosks do not prohibit “Application Run..”
 Modern Kiosk software now developed in .NET (CLR is present!)
 Very powerful attack vector, .NET installed, you WIN.
Hacking Kiosk Software
How About Malicious ClickOnce applications?
iKAT - Embedded Web Browser.
 ClickOnce Embedded Browser Control
 Create a browser without less restrictions.
iKAT - Application Executor.
 Attempts to spawn over 50 native Windows applications.
iKAT - Token Pincher
 “Tokens are hip, lets create a ClickOnce token hijacker”
 Does the Kiosk user have the SeImpersonate privilege?
 Token Pincher will impersonate an available privileged token.
 Pop you system shell, BooYah!
Hacking Kiosk Software
How Many People Have Ever Crashed a Browser?
What About Crashing a Kiosk: ‘Emo-Kiosking’
 Can we create an unhandled exception in the Kiosk browser.
 Kiosk crashes, Windows freak outs, we get desktop.
 Rare situation, application crash = highly critical vulnerability.
iKAT Contains Common Browser Crash Techniques.
 Designed to crash common browser libraries.
 Does the Kiosk detect the crash?
 Application re-spawned or desktop presented?
 Fastest, easiest method to escape a Kiosk.
Hacking Kiosk Software
What About Crashing Browser Plug-ins.
File Format Fuzzing of .SWF (Flash) files.
 “Can I create a .SWF file that reliably crashes any browser?”
 Turns out yes, yes, you can.
 Multiple invalid memory access read scenarios.
 Divide by zero unhandled exceptions.
 Immediately un-exploitable, reliable crash scenarios.
 Created ‘Auto Magic Flash Crash’.
Is Flash 9 plug-in installed on the Kiosk terminal?
 iKAT can crash the Kiosk, because its oh-day.
 Does the Kiosk detect the crash? Or present the desktop?
Downloading Tools
Lets Assume Something Worked.
 You have access to the Kiosk File system. 
 Command shell spawned, Common Dialog,  Java installed, etc
What Now?
 Download additional tools/binaries.
 Nmap, rootkit, funnygame.exe,
How Do You Download Files In a Tool-less Environment.
 Kiosk terminal will not have a copy of wget.exe.
 Internet Explorer may be uninstalled.
 Kiosk browser is configured to not download binaries.
Downloading Tools
Downloading Files Using Native Windows Functionality:
Common Dialogs
 ‘Attach’ a file from a remote resource: http://www.a.com/test.exe
 FPSE/Web DAV file saved locally and attaches.
Works From Any File->Open Dialog.
 File saved in a writeable location.
 Temporary internet files.
 Downloads any file type.
Downloading Tools
Notepad Is A Web Browser.
 File->Open
 http://test.com/trojan.txt
 File downloaded.
File->Save
 Upload content to a remote site.
 FPSE/WebDav
 http://www.ok.com/blah.txt
Crazy Windows Functionality.
Downloading Tools
Kiosk Hacking Tools Provided by iKAT:
Command Shells:
 Unlocked Cmd.exe (does not verify DisableCMD registry key)
Network Tools
 Netcat, GNU WGet, Nmap.
Exploitation Aids
 Enable Hidden or Disabled ‘Start’ bar.
 Application Executor
 Automatically spawn 52 system applications.
 Taskmgr, explorer, notepad, regedit, on screen keyboard.
Downloading Tools
Exploitation Aids:
 Spawn a Command Shell Through Detours
 How many ways to spawn a command shell on Windows?
 Win.com? Loadfix.com? Start? Combinations of both?
 ACL’s on the Kiosk block cmd.exe, what about command.com?
 ‘CMD Detours’ tool tries 17 methods of invoking a console shell.
All Tools Available in 7Bit Safe VBScript!
 Download tool with notepad, Copy/Paste VBScript.
cmd.exe
command.com
win.com cmd.exe
win.com command.com
Loadfix.com start.exe
sc create testsvc binpath= 
"cmd /K start" type= own 
type= interact
loadfix.com cmd.exe
loadfix.com command.com
start loadfix.com cmd.exe
start loadfix.com 
command.com
start loadfix.com 
cmd.exe
%COMSPEC%
About iKAT
Using iKAT
 iKAT is a tool designed to aid penetration testing.
 Use it to configure your own Kiosk securely!
 Test your own blacklists, increase your own level of security.
 Disable vulnerable browser plug-ins.
 Configure browser security zones.
Feedback Welcome:
 Submit a feature request, report a bug functionality.
100% Open Sourced Soon.
 iKAT Portable being released soon
 Downloadable version you can host locally, memory stick.
Kiosk Hacking Demonstrations:
Two commercial Kiosk products.
Recommended Kiosk application configuration.
Default Windows XP install.
Conclusion
Happy Hacking.
Questions?
Email me:
PI:EMAIL