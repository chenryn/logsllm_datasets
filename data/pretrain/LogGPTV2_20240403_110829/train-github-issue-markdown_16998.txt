# Bug report
**What is the current behavior?**
Since `v4.20.0` defining an `output.library` as an Array results in `var =
undefined` without a `output.libraryTarget`. Also using values of `"this"` or
`"window` result in similar behavior when `output.library` is an Array.
**If the current behavior is a bug, please provide the steps to reproduce.**
    // webpack.config.js
    entry: {
      main: `./src/main.js`
    },
    output: {
      library: [ 'BLEEP', 'bloop' ],
      libraryExport: 'default',
      path: '/dist/',
      filename: '[name].js',
      publicPath: '/' 
    }
    // main.js
    export default () => {
      console.log('main bundle');
    }
results in
    var undefined =
    /******/ (function(modules) { // webpackBootstrap
if I add `output.libraryTarget = "umd"` I get a workable result but since I
know this library is only consumed directly from the `window` it seems like
adding extra cruft
    (function webpackUniversalModuleDefinition(root, factory) {
    	if(typeof exports === 'object' && typeof module === 'object')
    		module.exports = factory();
    	else if(typeof define === 'function' && define.amd)
    		define([], factory);
    	else if(typeof exports === 'object')
    		exports["main"] = factory();
    	else
    		root["BLEEP"] = root["BLEEP"] || {}, root["BLEEP"]["bloop"] = factory();
    })(window, function() {
Specifying an `output.libraryTarget = "window"` also fails
    window[undefined] =
    /******/ (function(modules) { // webpackBootstrap
**What is the expected behavior?**  
prior to `v4.20.0` the generated bundle would contain
    var BLEEP = typeof BLEEP === "object" ? BLEEP : {}; BLEEP["bloop"] =
    /******/ (function(modules) { // webpackBootstrap
**Other relevant information:**  
webpack version: `>=4.20.0`  
Node.js version: `8.10.0`  
Operating System: OSX Sierra