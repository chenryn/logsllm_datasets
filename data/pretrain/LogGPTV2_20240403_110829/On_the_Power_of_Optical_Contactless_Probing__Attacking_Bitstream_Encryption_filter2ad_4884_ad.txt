measurements gave strange results, as most of the 128 bus lines
considered during mapping did not generate EOFM signals. As it
turned out, the AES output port area only showed activity when
the bits of the 3rd 32-bit word of a 128-bit block in the bitstream
configuration data were active. However, if single bits were active or
inactive in this "special" word, they would directly enable or disable
signal spots in the AES output port. An example of this behavior is
given in Fig. 13b, 13c, and 13d. This suggests that there is a 32-bit
bus, however for some reason it only shows activity for words 128
bits apart. Yet, a 32-bit bus is contradictory to our first measurement,
which did not show activity at the 32-bit word frequency. Hence,
our results seem to be inconsistent, as they indicate spatially that
there is a 32-bit bus, while they indicate temporally that there is a
periodicity that matches a 128-bit bus. This can not be explained
by a straightforward model which assumes that the AES outputs
the decrypted data at regular intervals, spread evenly across the
time needed to process the next ciphertext block.
However, if we assume that the configuration logic following the
AES immediately processes the data as fast as possible, the previous
Session H1:  Crypto AttacksCCS’17, October 30-November 3, 2017, Dallas, TX, USA1669results can be explained. As can be seen from the device specifica-
tions [28], this assumption seems plausible, as the configuration
logic should be able to process data at much higher speeds than
in our experiment. This is because our board uses a simple serial
data input, as opposed to the also available faster parallel data in-
put schemes. Therefore, we can deduce that in this case, the logic
following the AES actually has to wait for the next AES block to
become ready, because this is limited by the serial input data rate.
As soon as a new 128-bit plaintext block is ready, the configuration
logic could then process four 32-bit command / configuration data
words as fast as possible. Assuming a 32-bit output bus, this would
mean that on every bus line there would be three bits in fast succes-
sion, while the fourth bit will stay on the output registers while the
AES is busy processing the next block. As soon as the next block
is ready, this process would repeat, again with the last bit staying
on the bus lines while the AES is busy. Taking only the last bits
into account, this would lead to a 128-bit periodicity on the bus, or
CCLK/2/128 if the bits are flipped for every 128-bit block. This also
explains why the three "fast bits" would not appear in the EOFM
measurements at CCLK/256. As they only stay on the registers
for a short time, they hardly influence the fundamental frequency
component at CCLK/256 at all. As a result, this model would be
capable of explaining the behavior that was apparent in the pre-
vious measurements. To verify these assumptions we performed
EOP to be able to analyze the waveforms actually present at the
active spots seen in Fig. 13. Using a bitstream with the bits flipped
for every 32-bit word of the plaintext indeed revealed a burst of 4
bits, followed by a comparatively large dead time.
Using this model, it is also relatively straightforward to explain,
why only the 3rd word in a 128-bit configuration data block was
active. As detailed bitstream analysis shows, the reason for this
is simply that the 32-bit commands preceding the "FDRI" configu-
ration data block (see Fig. 6.) are not a multiple of four. As these
commands are also encrypted into the ciphertext, the configuration
data start is not aligned to the AES blocks. The "active" word visible
in EOFM is therefore, simply always the last 32-bit word in an AES
block. This hypothesis is supported by a simple check performed by
shifting the configuration data in the bitstream by inserting 32-bit
"no operation" (NOP) commands into the "header commands" block,
see Fig. 6. As could be expected, a shift by one 32-bit command led
to the next 32-bit word in the configuration data to become "active"
as this also shifts the data in the AES blocks.
If this model is correct, the plaintext bitstream data can be extracted
by probing all 32 bit lines of the AES output bus. However, as the
relation between the spatial activity locations and the bit numbers is
unknown, a bit location mapping would first need to be performed.
5.5 Logical to Spatial Mapping
If the model developed in the previous section is correct, the map-
ping between logical bus lines and their physical probing locations
can be performed in a straightforward way: As all bits of the last
32-bit word in an AES block appear in the EOFM measurements,
the location of a specific bus line can be found by only generating a
(a)
(b)
Figure 14: Complete mapping of plaintext bus bit locations
for plaintext data extraction. (a) Locations in AES output
port. (b) Alternative locations inside AES logic mesh.
fundamental frequency on the bit corresponding to that bus line. In
other words, one specific bit in the "active" word is flipped for every
AES block, while all other bits are set to "0". A complete mapping
of the data bus would therefore in total require 32 EOFM mea-
surements of the AES area, each performed with a bitstream only
generating the desired frequency on a single bus line. The result
of such a mapping for the AES output port can be seen in Fig. 14a.
The figure shows the identified EOFM activity locations for each of
the 32 bus lines. As multiple locations were active for each bus line,
these have been denoted by a trailing “A” or “B”. For orientation, the
locations have been overlayed onto an EOFM image were all bits
were active. As can be seen, most isolated spots are actually com-
posed of two smaller spots which stem from two different bus lines.
This might raise concerns about the mixing of data of individual bus
lines during later electro-optical probing. However, since there is a
large enough gap to the neighboring spots, the beam can simply be
parked at the respective edges of the composed activity spot during
probing. Later probing tests actually showed that there is no bus
line data mixing if this scheme is employed. Additionally, for every
bus line, there are multiple probing locations available. During the
mapping measurements on the AES output port, it became evident
that there are also potential probing locations inside the AES logic.
Fig. 14b shows the resulting mapping for activity spots in the AES
logic next to the output port. This suggests that even if there was
bus line data mixing at a certain probing location in the output port,
the gates inside the logic could be used as an alternative. Further
measurements even revealed additional potentially data carrying
gates in the main core, which might be used as added alternatives.
As the bit mapping was now known with even multiple probing
locations available, data extraction could be evaluated. For this,
electro-optical probing was performed on the individual bus line
of the AES output port and the data compared to the plaintext bit-
stream data. As it turned out, all bus lines carried the expected data.
2.5 μm4.3 μmSession H1:  Crypto AttacksCCS’17, October 30-November 3, 2017, Dallas, TX, USA1670Table 1: Time spent on the FA microscope for each milestone
of attack development. Usage time is the sum of hours that
the attacker has actively used software on the PC.
Figure 15: Optically extracted plaintext data for two bus
lines of the 32-bit plaintext data bus as well as the CCLK
signal. The plaintext bitstream data was 0101 for bit 0 and
0001 for bit 2. W0 to W3 denote the "data valid" time slots
for word 0 to word 3 on the plaintext bus.
Furthermore, it could be seen that the header commands, as well as
configuration data, passes through these logic gates. This indicates
that actually the entire plaintext bitstream is transmitted through
this location and not just the "FDRI" configuration data block, see
Fig. 6. Fig. 15 shows exemplary EOP probing waveforms for two
of the 32 bus lines acquired with 5000 averagings. To synchronize
the acquisition hardware, the trigger was set to "n-th edge" type
on the configuration clock signal CCLK and was armed with the
reconfiguration trigger signal PROGRAM_B. In this figure, four bits
can be seen on each bus line, framed by the time where the AES is
busy. The four bits belong to four words (W0-W3) of the plaintext
bitstream data respectively. It can also be seen that the data on
the bus lines is in phase with the externally available CCLK signal.
It is evident that the complete bitstream data can be extracted by
probing all bus lines in this way.
5.6 Expenditure of Time
As we assumed that the attacker has to rent the failure analysis
equipment, we have tracked the time that was required to achieve
each milestone. Tab. 1 gives an overview of these time expenditures
up to the point were the plaintext gates were found and verified by
EOP. We have included two time expenditure measures in this table.
The first is the total time that the FA equipment was turned on,
which also includes periods were the PC was locked or in standby.
This is also the time that an attacker would have to pay for if
she had rented the equipment. We also included a "usage time"
in the table. Usage time is the sum of hours that the attacker has
actively used software on the PC. It includes using the microscope
control software as well as copying files in Windows Explorer and
similar actions. This represents a best case scenario which the
attacker could have achieved by working as fast as possible. These
timings also include all overhead and wrong ways taken during
our experiments. Noticeable are the timings for configuration logic
localization and input bus width determination as they required
a greater amount of time than the other steps. In the case of the
"configuration logic" step, this is simply because it includes the
initial setup and getting used to the board and equipment. The
"input bus width" step is longer, as we invested some considerable
effort into finding gates under the assumption of serial bitstream
data in the device. To develop the complete attack, the logical-to-
spatial mapping of Fig. 14 is also needed, which took two hours
of measurement. Therefore, the total rent time for developing the
attack would be 74.9 hours. As the setup used in this work can be
rented for about 300 $/hour the approximate rent cost to develop
the attack would be 22.5 k$.
6 DISCUSSION
6.1 Full Bitstream Extraction
Naturally, the results from Sect. 5 raise the question of how long a
full bitstream extraction would take. In the case of the measurement
depicted in Fig. 15, the device was configured to use the “33 MHz”
internal clock setting, no bitstream compression and a 1-bit wide
SPI bus. If we take these settings as an example, one configuration
cycle takes about 800 ms. In additional probing measurements, we
determined that 100 averages is the lower limit to easily distinguish
the bit states of the plaintext bus waveform without any filtering.
EOP signal acquisition for one bus line would, therefore, require 80 s
of averaging time. Multiplied by the 32-bit bus width, this amounts
to 2560 seconds or 43 minutes of raw acquisition time for the whole
bitstream. Note that this value would shrink accordingly if designs
with a faster configuration clock, wider bitstream input bus or
compression were used. Hence, we estimate that full bitstream
extraction would take from a few hours to a few days of lab work,
depending on the specific equipment and the overhead for setting
up the experiment.
6.2 Stability of the Internal Clock
The approach we have taken in this work constitutes the worst case
scenario regarding clock stability. Usually, it is recommended to use
an external oscillator for designs, where a fast configuration time is
desired [28]. In our experiments, however, we configured the FPGA
to generate the clock internally. As the internal oscillator is not a
stable high-quality clock source, this could introduce problems with
averaging. Nevertheless, as the externally available configuration
clock signal CCLK is in phase with the internal AES output, see
Fig. 15, we were able to synchronize the acquisition equipment
using this signal. We expect that a simpler trigger scheme could be
utilized if a stable external oscillator is employed.
 0 3         CCLK [V] 0 1         EOP PlaintextBit 0 [a.u.] 0 1-400-300-200-1000100200300400EOP PlaintextBit 2 [a.u.]Time [ns]AES busyW0W1W2W3AES busyMilestonePowered On [h]Usage Time [h]Configuration Logic Localized27.019.9AES Logic Localized9.18.0Input Bus Width Determined19.014.6AES Output Localized7.36.6Successful Plaintext Probing10.59.9Sum Powered On:Sum Usage:72.958.9Session H1:  Crypto AttacksCCS’17, October 30-November 3, 2017, Dallas, TX, USA16716.3 Optical Probing Availability
Optical probing systems are common FA equipment. Therefore,
they can be rented at FA labs around the world, such as Presto
Engineering [19] and Inscope Labs [8]. The system used for this
work is also available for rent at about 300 $/h including operator
cost.
6.4 Technology Size and Optical
Resolution
Our results underline that it makes no sense to compare technol-
ogy size of transistors to optical resolution. Such a comparison
might be meaningful in failure analysis since it might be required
to resolve minimum size single transistors to find the cause of a
failure. However, the optical resolution can be more relaxed in
the case of security analysis of an IC. The best resolving lens in
our experiments has a resolution of about 1 µm. Comparing this
resolution to the device’s technology size of 28 nm (or 0.028 µm)
suggests that an optical attack is utterly futile. The results, how-
ever, demonstrate that an attack is not only possible but it can be
developed in a few weeks. The real limiting factor for an attacker
is not the technology size, but the distance of a probing location of
interest to the next location carrying an interfering signal, compare
Fig. 14. If the interfering signal and the signal of interest are close
enough, they will both be illuminated by the focused light spot.
Thus, they will both modulate the reflected light, and therefore, the
resulting EOP signal will be a mix of both signals. If the interfering
signal is uncorrelated to the signal of interest, the attacker can
still mitigate this by averaging more waveforms, as the interfering
signal behaves like an added noise source. On the other hand, if
the mixing occurs between, for example, two or more bits of the
plaintext data, the attacker will only be able to tell how many bits
are set, and not which ones. As can be seen in Fig. 14, the separation
between locations carrying different streams of data can actually
be much larger than the technology size. Thus, when assessing
potential optical attacks, the attack system’s resolution should be
compared to this “data separation pitch” and not to the technology
size.
6.5 Device Damage and AES Key Loss
For other classes of attacks with similar capabilities, such as Fo-
cused Ion Beam (FIB) editing [16], key loss and device damage
constitute a major concern during an attack. For example, while
milling and polishing the device, power to the internal BBRAM
key memory might be disrupted, and consequently, an attack ren-
dered impossible. Even with successful preparation, if the chance
of device damage for a single FIB edit is just 5 %, tapping into the
plaintext bus would only have a 0.9532 = 19 % chance of success.
However, in the approach discussed in this work, there is no modi-
fication made to the FPGA. The only requirement is the addition of
one coaxial cable to the CCLK signal on the printed circuit board
and some means of triggering configuration, either through PRO-
GRAM_B, a reset or a simple power-on loop. Therefore, loss of the
BBRAM AES key during attack preparation is very unlikely. As
the wavelength used for optical probing is larger than the silicon
bandgap, no photocurrent is generated, and no disturbance in de-
vice operation is expected. As a matter of fact, we have exposed the
device to full power light radiation for many hours without noticing
any permanent or temporary effects during our experiments. In
other words, a potential attacker has a virtually unlimited amount