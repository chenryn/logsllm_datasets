# SWPUCTF2018-WEB&MISC Write Up
##### 译文声明
本文是翻译文章
译文仅供参考，具体内容表达以及含义原文为准。
说好的这个月不打CTF的，结果又真香了。
## MISC
###  签到题
改一下图片高度。
flag：flag{b2b85ec7ec8cc4771b8d055aee5f82b0}
###  唯有低头，才能出头
给了一行字符串：99 9 9 88 11 5 5 66 3 88 3 6 555 9 11 4 33
根据题目意思应该是键盘密码，数字的重复次数代表第几行。99代表9下面第二行的L，9代表9下面第一行的o，以此类推。
flag：swpuctf{lookatthekeyboard}
###  流量签到
记事本打开，搜索flag。
flag：SWPUCTF{Th1s_i3_e4sy_pc[@p](https://github.com/p "@p")}
## WEB
###  用优惠码买个X？
hint：flag在/flag中
注册登陆会弹出一个15位的优惠码
输入优惠码购买会提示：此优惠码已失效! 请重新输入24位长的优惠码,由此来完成您的购买！
扫目录扫到www.zip，只给了一个source.php
mt_srand()函数的随机数种子由rand(0,999999999)生成。然后用mt_rand(0,61)生成随机数来随机截取字符串$str_rand中的一个字符。因此我们只要得到mt_srand()函数的播种种子的值，就可以预测出24位的优惠码。
这里可以参考wonderkun师傅的文章：[php的随机数的安全性分析](http://wonderkun.cc/index.html/?p=585)
我们可以根据最终得到的字符串来反推出mt_rand()函数生成的15个随机数值，然后爆破出种子即可。
这里用到了爆破种子的c语言程序php_mt_seed：
然后用wonderkun师傅的脚本得到15个随机数并整理成该爆破程序所需要的格式
因为我用15个爆破不出来，这里我只生成了前面的一部分随机数，不过并不会影响结果。
生成的值：
    25 25 0 61 35 35 0 61 20 20 0 61 39 39 0 61 59 59 0 61 4 4 0 61 43 43 0 61 47 47 0 61
用php_mt_seed爆破出来一个种子
然后把源码改成生成24位的
    There is no file to show!";
    }
    $show = new Show();
    if(file_exists($file)) {
        $show->source = $file;
        $show->_show();
    } else if (!empty($file)){
        die('file doesn't exists.');
    }
    ?>
这里用了file_exists($file)判断文件是否存在，能够触发phar反序列化。
class.php
     str = $name;
        }
        public function __destruct()
        {
            $this->test = $this->str;
            echo $this->test;
        }
    }
    class Show
    {
        public $source;
        public $str;
        public function __construct($file)
        {
            $this->source = $file;
            echo $this->source;
        }
        public function __toString()
        {
            $content = $this->str['str']->source;
            return $content;
        }
        public function __set($key,$value)
        {
            $this->$key = $value;
        }
        public function _show()
        {
            if(preg_match('/http|https|file:|gopher|dict|..|f1ag/i',$this->source)) {
                die('hacker!');
            } else {
                highlight_file($this->source);
            }
        }
        public function __wakeup()
        {
            if(preg_match("/http|https|file:|gopher|dict|../i", $this->source)) {
                echo "hacker~";
                $this->source = "index.php";
            }
        }
    }
    class Test
    {