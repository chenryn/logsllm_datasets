## PostgreSQL VagueGeometry: Handling Vague Spatial Data with VASA (Vague Spatial Algebra)

### Author
digoal

### Date
2020-03-26

### Tags
PostgreSQL, VASA (Vague Spatial Algebra)

---

## Background
VagueGeometry is a PostgreSQL extension designed to handle vague spatial data based on the VASA (Vague Spatial Algebra). For more information, visit [http://gbd.dc.ufscar.br/vaguegeometry/](http://gbd.dc.ufscar.br/vaguegeometry/).

## VagueGeometry
VagueGeometry is a PostgreSQL extension that manages vague spatial objects using the *Vague Spatial Algebra* (VASA). 

### Citing VagueGeometry
- Carniel, A. C.; Ciferri, R. R.; Ciferri, C. D. A. (2016). "The VagueGeometry Abstract Data Type." Journal of Information and Data Management, 7(1), 18-34. [ResearchGate](https://www.researchgate.net/publication/310292964_The_VagueGeometry_Abstract_Data_Type)
- Pauly, A. and Schneider M. (2010). "VASA: An algebra for vague spatial data in databases." Information Systems, 35(1), 111-138. [ScienceDirect](https://www.sciencedirect.com/science/article/pii/S0306437909000519)

### Developer
VagueGeometry is developed and maintained by Anderson Chaves Carniel.

### Documentation
- [Official Website](http://gbd.dc.ufscar.br/vaguegeometry/)
- [GitHub Wiki](https://github.com/accarniel/VagueGeometry/wiki)

### What is VagueGeometry?
VagueGeometry is an extension for PostgreSQL that represents vague spatial data based on the VASA (Vague Spatial Algebra). PostgreSQL, being an extensible DBMS, allows the implementation of new abstract data types (ADTs) using both low-level (e.g., C) and high-level (e.g., pl/pgSQL) programming languages. 

VagueGeometry is implemented in C, leveraging the extensibility provided by PostgreSQL's internal library. It uses the PostGIS extension for crisp geometric operations, which are adapted for vague spatial data. This makes it possible for external applications to directly access the DBMS to handle vague spatial data.

### What are Vague Spatial Data?
While crisp spatial data have exact locations and well-defined boundaries, vague spatial data have inexact locations or uncertain boundaries. There are several models to represent vague spatial data, which can be classified as:
- **Exact Models**: [Cohn and Gotts 1995; Bejaoui et al. 2009; Pauly and Schneider 2010]
- **Rough Models**: [Beaubouef, Ladner, and Petry 2004]
- **Probabilistic Models**: [Cheng, Kalashnikov, and Prabhakar 2003; Li et al. 2007]
- **Fuzzy Models**: [Dilo et al. 2007; Schneider 2008]

These models provide standards for representing and operating on vague spatial data. However, there is no native support for vague spatial data in Spatial Database Management Systems (SDBMS) like PostgreSQL with the PostGIS extension. Modern geographic applications, such as soil mapping, mountain limits mapping, and air pollution monitoring, often require the storage of vague spatial data.

To address this, VagueGeometry uses the exact models representation to implement vague spatial objects in PostgreSQL. The exact models aim to reuse existing crisp spatial data types (e.g., points, lines, and regions) to represent vague spatial objects. Generally, vague spatial objects are defined using two crisp spatial objects, one representing the vague part and the other the well-known part. Specifically, VagueGeometry uses the VASA (Vague Spatial Algebra) of Pauly and Schneider (2010) to define an abstract data type in PostgreSQL. VASA defines a vague spatial object as a pair of crisp spatial objects of the same type, topologically related as "disjoint" or "meets."

### Main References
- Beaubouef, T., Ladner, R., and Petry F. (2004). "Rough Set Spatial Data Modeling for Data Mining." Int. Journal of Geographical Information Science, 19, 567-584.
- Bejaoui, L., Pinet, F., Bédard, Y., and Schneider, M. (2009). "Qualified topological relations between spatial objects with possible vague shape." International Journal of Geographical Information Science, 23(7), 877-921.
- Cheng, R., Kalashnikov, D., and Prabhakar, S. (2003). "Evaluating Probabilistic Queries over Imprecise Data." In Proceedings of the 2003 ACM SIGMOD international conference on Management of data, 551-562.
- Cohn, A. G., and Gotts, N. M. (1995). "The Egg-yolk Representation of Regions with Indeterminate Boundaries." In P. A. Burrough, & A. U. Frank, Geographic Objects with Indeterminate Boundaries - GISDATA 2, 171-187.
- Dilo, A., de By, R. A., and Stein, A. A. (2007). "A System of Types and Operators for Handling Vague Spatial Objects." International Journal of Geographical Information Science, 21(4), 397-426.
- Li, R., Bhanu, B., Ravishankar, C., Kurth, M., and Ni, J. (2007). "Uncertain spatial data handling: Modeling, indexing and query." Computers and Geosciences, 33, 42-61.
- Pauly, A., and Schneider M. (2010). "VASA: An algebra for vague spatial data in databases." Inf. Syst., 35(1), 111-138.
- Schneider, M. (2008). "Fuzzy Spatial Data Types for Spatial Uncertainty Management in Databases." Handbook of Research on Fuzzy Information Processing in Databases, 490-515.

### Additional Resources
- [VagueGeometry GitHub Repository](https://github.com/accarniel/VagueGeometry)
- [VASA Paper on ScienceDirect](https://www.sciencedirect.com/science/article/abs/pii/S0306437909000519)
- [VagueGeometry Official Website](http://gbd.dc.ufscar.br/vaguegeometry/)

#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").

#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")

#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")

#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")

![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")

#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")

#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")

#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")