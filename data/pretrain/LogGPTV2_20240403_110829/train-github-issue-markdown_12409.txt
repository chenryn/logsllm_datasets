 **System information**
  * Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
  * OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04
  * Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
  * TensorFlow installed from (source or binary): not sure
  * TensorFlow version (use command below): v1.12.0-0-ga6d8ffa
  * Python version: 3.6.6
  * Bazel version (if compiling from source):
  * GCC/Compiler version (if compiling from source):
  * CUDA/cuDNN version: CUDA 10.0
  * GPU model and memory: GeForce GTX 1080 Ti, 11178MiB
**Describe the current behavior**  
When computing a batched matmul with 32-bit precision and batch size >= 2 **
16, the first 2 ** 16 - 1 batch elements of the result are correct, and the
remaining elements are arbitrary - often zero, but not always. When the
`sess.run` call is made multiple times, the result is usually the same or
similar. The bug only seems to occur when using a variable or placeholder.
**Describe the expected behavior**  
Every batch element of the result should be correct.
**Code to reproduce the issue**
    import numpy as np
    import tensorflow as tf
    s = (100000, 1, 1)
    p = tf.placeholder(shape=s, dtype=tf.float32)
    x = tf.matmul(tf.ones(s), p)
    with tf.Session() as sess:
        r = sess.run(x, feed_dict={p: np.ones(s, dtype=np.float32)})
        print(r[2**16 - 5:2**16 + 5, 0, 0])
Typical output:
    [1. 1. 1. 1. 0. 0. 0. 0. 0. 0.]
**Other info / logs**