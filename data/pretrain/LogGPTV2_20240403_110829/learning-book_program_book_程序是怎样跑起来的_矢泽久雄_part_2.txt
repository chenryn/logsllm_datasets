2.6掌握逻辑运算的窍门
34
COLUIVIN
如果是你，你会怎样介绍？
向小学生讲解CPU和二进制
38
计算机进行小数运算时出错的原因
41
3.1将0.1累加100次也得不到10
43
3.2用二进制数表示小数
44
3.3计算机运算出错的原因
46
3.4什么是浮点数
47
3.5正则表达式和EXCESS系统
50
---
## Page 11
3.6在实际的程序中进行确认
52
3.7如何避免计算机计算出错
55
3.8二进制数和十六进制数
56
熟练使用有棱有角的内存
59
4.1内存的物理机制很简单
61
4.2内存的逻辑模型是楼房
65
4.3简单的指针
67
4.4数组是高效使用内存的基础
69
4.5栈、队列以及环形缓冲区
71
4.6链表使元素的追加和删除更容易
75
4.7二叉查找树使数据搜索更有效
79
内存和磁盘的亲密关系
81
5.1不读入内存就无法运行
83
5.2碰盘缓存加快了磁盘访问速度
84
5.3虚拟内存把磁盘作为部分内存来使用
85
5.4节约内存的编程方法
88
5.5磁盘的物理结构
93
亲自尝试压缩数据
97
6.1文件以字节为单位保存
99
6.2RLE算法的机制
100
6.3RLE算法的缺点
101
6.4通过莫尔斯编码来看哈夫曼算法的基础
103
6.5用二叉树实现哈夫曼编码
105
6.6哈夫曼算法能够大辐提升压缩比率
109
更多资料请关注裁的新浪薄客http：//blor
---
## Page 12
6.7可逆压缩和非可逆压缩
110
如果是你，你会怎样介绍？
向沉迷游的中学生讲解内存和疆盘
114
程序是在何种环境中运行的
117
7.1运行环境=操作系统+硬件
119
7.2Windows克服了CPU以外的硬件差异
122
7.3不同操作系统的API不同
124
7.4FreeBSDPort帮你轻松使用源代码
125
7.5利用虚拟机获得其他操作系统环境
127
7.6提供相同运行环境的Java虚拟机
128
7.7BIOS和引导
130
从源文件到可执行文件
133
8.1计算机只能运行本地代码
135
8.2本地代码的内容
137
8.3编译器负责转换源代码
139
8.4仅靠编译是无法得到可执行文件的
141
8.5启动及库文件
143
8.6DLL文件及导入库
145
8.7可执行文件运行时的必要条件
146
8.8程序加载时会生成栈和堆
148
8.9有点难度的Q8A
150
操作系统和应用的关系
153
9.1操作系统功能的历史
155
9.2要意识到操作系统的存在
157
---
## Page 13
9.3系统调用和高级编程语言的移植性
160
9.4操作系统和高级编程语言使硬件抽象化
161
9.5Windows操作系统的特征
163
COLUMN
如果是你，你会怎样介绍？
向超喜欢手机的女高中生讲解操作系统的作用
170
通过汇编语言了解程序的实际构成
173
10.1汇编语言和本地代码是一一对应的
175
10.2
通过编译器输出汇编语言的源代码
177
10.3不会转换成本地代码的伪指令
180
10.4汇编语言语法是“操作码+操作数”
182
10.5
最常用的mov指令
185
10.6对栈进行push和pop
185
10.7
函数调用机制
187
10.8函数内部的处理
189
10.9
始终确保全局变量用的内存空间
191
10.10临时确保局部变量用的内存空间
196
10.11循环处理的实现方法
199
10.12条件分支的实现方法
202
10.13了解程序运行方式的必要性
204
硬件控制方法
209
11.1应用和硬件无关？
211
11.2支撑硬件输入输出的IN指令和OUT指令
212
11.3编写测试用的输入输出程序
215
11.4外图设备的中断请求
218
11.5用中断来实现实时处理
221
11.6DMA可以实现短时间内传送大量数据
222
更多资料请关注裁的新浪薄客http：//blor
---
## Page 14
11.7文字及图片的显示机制
224
如果是你，你会怎样介绍？
向邻居老奶奶说明显示器和电视机的不用
226
让计算机“思考”
229
12.1作为“工具”的程序和为了“思考”的程序
231
12.2用程序来表示人类的思考方式
232
12.3用程序来表示人类的思考习惯
235
12.4程序生成随机数的方法
237
12.5活用记忆功能以达到更接近人类的判断
239
12.6用程序来表示人类的思考方式
242
COLUMN
如果是你，你会怎样介绍？
向常光座的酒馆老板讲解计算机的思考机制
245
让我们开始C语言之旅
247
附录
C语言的特点
247
变量和函数
248
数据类型
249
标准函数库
250
函数调用
251
局部交量和全局变量
254
数组和循环
255
其他语法结构
256
---
## Page 15
第
章
对程序员来说CPU
是什么
热身间答
阅读正文前，让我们先回答下面的问题来热热身吧。
1.程序是什么？
2.程序是由什么组成的？
3.什么是机器语言？
4.正在运行的程序存储在什么位置？
5.什么是内存地址？
6.计算机的构成元件中，负责程序的解释和运行的是哪个？
---
## Page 16
第1章对程序员来说CPU是什公
怎么样？是不是发现有一些问题无法简单地解释清楚呢？下面
是笔者的答案和解析，供大家参考。
1.指示计算机每一步动作的一组指令
2.指令和数据
3.CPU可以直接识别并使用的语言
4.内存
5.内存中，用来表示命令和数据存储位置的数值
6.CPU
1.一般所说的程序，警如运动会、音乐会的程序等，指的是“行
事的先后次序”。计算机程序也是一样的道理。
2.程序是指令和数据的组合体。例如，C语言“printf（”你好）”
这个简单的程序中，printf是指令，“你好”是数据。
3.CPU能够直接识别和执行的只有机器语言。使用C、Java等语
言编写的程序，最后都会转化成机器语言。
4.硬盘和磁盘等媒介上保存的程序被复制到内存后才能运行。