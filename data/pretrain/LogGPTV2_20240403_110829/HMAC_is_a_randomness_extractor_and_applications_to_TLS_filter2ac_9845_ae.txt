function.
Theorem 5. Let IV be a ﬁxed κ-bit string and let h be a function family from
{0, 1}κ × {0, 1}b to {0, 1}κ, where the key is the ﬁrst input on κ bits. Let h′ be the
hash function deﬁned by h′
IV (pad, ·) = h(IV, · ⊕ pad) where the key is pad. Let A be a
cre-adversary against the construction that has time-complexity at most T , generates
labels of at most ℓ blocks and a key of at most 1 block and min-entropy m. Then there
exist one prf-adversary A1 against h′ and two prf-adversaries A2 and A3 against h
such that advcre
HmacH (A) is upper bounded by:
r22κ(cid:16)2−m + 2 · advprf
h′ (A1)(cid:17)
2
+
1
2t
+ advprf
h
(A2) + 2ℓ · advprf
h
(A3)
where A1 makes two queries with time-complexity T + 2Th, A2 makes one query with
time-complexity T and A3 makes at most 2 queries with time-complexity O(ℓ · Th),
where Th is the time for one computation of h.
Proof. Let consider the following sequence of games.
Game 0: this game corresponds to the attack when the real extraction is performed.
1. A sends (D, label)
18
2. pmk D← {0, 1}s, IV $← {0, 1}κ, ipad $← {0, 1}b
3. (k1, k2) = (h(pmk ⊕ ipad, IV ), h(pmk ⊕ opad, IV ))
4. k = NmacH (k1, k2, label), send (IV, ipad, k) to A
5. A sends its guess b′
Game 1: in this game, we choose k1 and k2 uniformly at random in {0, 1}κ.
Game 2: in this game, we choose k uniformly at random in {0, 1}k.
Firstly, the distance between Game 0 and Game 1 can be upper bounded using
lemma 1:
q22κ · (2−m + 2 · advprf
h′ (A1)).
Secondly there exists a prf-adversary A′ against Nmac which makes at most one query
and has time-complexity T such that the distance between Game 1 and Game 2 is
upper bounded by advprf
NmacH (A′). Since A′ makes only one query, she is obviously
preﬁx-free and therefore her advantage is in particular smaller than advpf−prf
NmacH (A′).
The latter is smaller than advprf
2t , as we prove in lemma 6.
(A3) + 2ℓ · advprf
(A4) + 1
h
h
B Security Proof for Long Keys
In this section we give a proof of theorem 7. First we give the proofs for the cascade
mode.
B.1 The Cascade Mode
Lemma 8. Let A∗ be a pf-au-adversary against h∗ which generates messages of at
most ℓ blocks. Then there is a prf-adversary A against h such that:
advpf-au
h∗
(A∗) ≤ 2ℓ · advprf
h
(A) +
1
2t
and A makes at most 2 queries and has about the same time-complexity as A∗.
To show this lemma, we need the following result from [4].
Lemma 14 (BKC). If D is a preﬁx-free prf-adversary against h∗ that makes at most
q queries, each of at most ℓ blocks, then there is a prf-adversary A against h such that
and A makes at most q queries and has about the same time complexity as D.
advpf-prf
h∗
(D) ≤ qℓ · advprf
h
(A)
We can now prove the lemma.
Proof. Let D be the following prf-adversary:
Adversary Dh∗
(M1, M2) ← A∗
Send (M1, M2) to the challenger C, the latter answers (h∗(M1), h∗(M2)).
If msbt (h∗(M1)) == msbt (h∗(M2)) then return 1, else return 0.
Note that advpf−au
(D) and that D makes at most 2 queries.
If A∗ is preﬁx-free and the messages are at most ℓ-block-long, lemma 14 gives us a
prf-adversary A against h such that:
(A∗) − 2−t ≤ advpf−prf
h∗
h∗
advpf−prf
h∗
(D) ≤ 2ℓ · advprf
h
(A)
The lemma follows.
Besides we need this lemma.
19
Lemma 10 (pf computational LHL). Let H be a family of functions from {0, 1}k ×
Dom to {0, 1}t such that for every au-adversary B, running in time T and producing a
distribution over Dom×Dom of min-entropy at least 2m−2, advpf−cau
(B) ≤ 1/2t +ε.
Then for every adversary A running in time O(T ) producing a distribution of min-
entropy at least m:
H
advpf-cre
H
(A) ≤p2t · (2−m + ε).
This lemma can be proven similarly as the proof of the original Leftover Hash
Lemma that can be found in [20]. However, due to the preﬁx-freeness assumption, one
have to adapt the proof. All the details are in the last appendix.
As a direct consequence of the two above lemmas, we have the following result.
Lemma 8. Let A be a pf-cre-adversary against h∗ which has a time-complexity at
most T and produces a distribution of min-entropy at least m, with messages of at
most ℓ blocks. Then there is a prf-adversary A′ with running-time at most O(T ) and
messages at most ℓ-block long such that:
advpf-cre
h∗
(A) ≤q2t · (3 · 2−m + 2ℓ · advprf
h
(A′)).
B.2 The case of Hmac
Theorem 7. Let h be a function family from {0, 1}κ × {0, 1}b to {0, 1}κ. Let ipad
and opad be two b-bit strings and let Φ = {∆ipad, ∆opad}. Let A be a pf-cre-adversary
against the construction that has time-complexity at most t, generate labels of at most
ℓ blocks and a key of s ≥ 2 blocks and min-entropy m. Then there exist a rka-adversary
HmacH (A) is upper
A2 against bh and three prf-adversaries A1, A3, A4 such that advpf−cre
bounded by:
r2t(cid:16)3 · 2−m + 2s · advprf
h
+advprf
h
(A3) + 2ℓ · advprf
(A1)(cid:17) + advrka
bh
(A4) + 1
2t
h
(A2)
where A1 and A2 make at most 2 queries and have time-complexity t, A3 makes one
query with time-complexity t and A4 makes at most 2 queries with time-complexity
O(ℓ · Th).
Proof. Let consider the following sequence of games.
Game 0: this game corresponds to the attack when the real extraction is performed.
1. A sends (D, label)
2. pmk D← {0, 1}s, IV $← {0, 1}κ, K = H(IV, pmk)
3. (k1, k2) =(cid:16)bh(K ⊕ ipad, IV ),bh(K ⊕ opad, IV )(cid:17)
4. k = NmacH (k1, k2, labels), send (IV, k) to A
5. A sends its guess b′
Game 1: in this game, we choose K uniformly at random in {0, 1}t.
Game 2: in this game, we choose k1 and k2 uniformly at random in {0, 1}κ.
Game 3: in this game, we choose k uniformly at random in {0, 1}k. It corresponds
to the attack when the extraction is performed thanks to a random function.
20
As A is preﬁx-free, the distance between Game 0 and Game 1 can be upper bounded
using lemma 8: it is upper bounded by q2t · (2−m + 2s · advprf
(A1)). The distance
between Game 1 and Game 2 is upper bounded by advrka
(A2). As A is preﬁx-free,
bh,Φ
there exists an adversary A′ making at most 1 query of length at most ℓ blocks with
time-complexity approximately t and distance between Game 1 and Game 2 is upper
bounded by advpf−prf
(A4) + 1
2t
⊓⊔
(where A3 and A4 are as described in the theorem) as we proved in lemma 6.
NmacH (A′). The latter is smaller than advprf
(A3) + 2ℓ · advprf
h
h
h
C Proof of the cLHL
C.1 The cLHL
Lemma 3 (computational LHL). Let H be a family of functions from {0, 1}k ×
Dom to {0, 1}t such that for every au-adversary B, running in time T and producing a
H (B) ≤ 1/2t + ε. Then
distribution over Dom × Dom of min-entropy at least 2m, advcau
for every adversary A running in time O(T ) producing a distribution of min-entropy
at least m:
advcre
H (A) ≤p2t · (2−m + ε).
Proof. Let A be a pf-cre-adversary against H which outputs distributions of min-
entropy at least m, let E1 and E2 denote respectively the events
X ← DA, Y = H(K, X)(cid:27) ,(cid:26) K ← UKeys, A ⇒ DA,
(cid:26) K ← UKeys, A ⇒ DA,
Y ← URng
(cid:27) .
Let δ = advpf−cre
H
(A), that is:
δ = Pr [A(K, Y ) ⇒ 1 : E1] − Pr [A(K, Y ) ⇒ 1 : E2] .
To show lemma 10 we successively show:
(3)
(4)
where
1
1
1 + δ2
2k · 2t ≤ Pr(cid:20) K = K ′
2k(cid:18)2−m +
Y = Y ′ : E(cid:21)
2t + ε(cid:19)
Y = Y ′ : E(cid:21) ≤
Pr(cid:20) K = K ′
1 =(cid:26) K ′ ← UKeys, A ⇒ D′
A, Y ′ = H(K ′, X ′)(cid:27) , E = E1 ∧ E′
Pr
: E1 − Pr
: E2 .
K = k
Y = y
K = k
Y = y
A(k, y) ⇒ 1
A(k, y) ⇒ 1
X ′ ← D′
A,
1.
E′
Xy,k
With these two results it is easy to conclude.
To show the ﬁrst result, we remark that δ is equal to:
Since the way (k, y) is chosen is independent of the event A(k, y) ⇒ 1 knowing that
A ⇒ DA, this can be restated as:
Pr[A(k, y) ⇒ 1 : A ⇒ DA]
Xy,k
·(cid:18)Pr(cid:20) K = k
Y = y
: E1(cid:21) −
1
2k · 2t(cid:19) .
Let denote by qk,y: