For remote subnet routes, a next-hop IPv6 address is listed. For directly attached subnet routes, 
the name of the interface from which the address prefix is directly reachable is listed. 
The IPv6 routing table is built automatically, based on the current IPv6 configuration of your computer. 
A route for the link-local prefix (FE80::/64) is never present in the IPv6 routing table. 
The first, second, and third routes are for the 64-bit global address prefixes of locally attached subnets. 
An Ethernet network adapter named Local Area Connection (interface index 4) is connected to the 
subnet 2001:DB8:0:1::/64. A second Ethernet network adapter named Local Area Connection 2 
(interface index 5) is connected to the subnet 2001:DB8:0:2::/64. A third Ethernet network adapter 
named Local Area Connection 3 (interface index 6) is connected to the subnet 2001:DB8:0:3::/64.  
The fourth route is the default route (prefix of ::/0). The default route matches all destinations. If the 
default route is the longest matching route for the destination, the packet is forwarded to the IPv6 
address FE80::210:FFFF:FED6:58C0 by using the Ethernet network adapter named Local Area 
Connection 3 (interface index 6). 
When determining the next-hop IPv6 address from a route in the routing table, IPv6 does the following: 
If the Gateway/Interface Name column of the routing table entry indicates an interface name, the 
destination is a neighbor, and IPv6 sets the next-hop address to the destination address of the IPv6 
packet.  
Chapter 5 – IP Routing 
TCP/IP Fundamentals for Microsoft Windows  
Page: 147 
If the Gateway/Interface Name column of the routing table entry indicates an address (the address of a 
neighboring router), the destination is remote, and IPv6 sets the next-hop address to the address in the 
Gateway/Interface Name column. 
For example, when traffic is sent to 2001:DB8:0:2:2AA:FF:FE90:4D3C, the longest matching route is 
the route for the directly attached subnet 2001:DB8:0:2::/64. The forwarding IP address is set to the 
destination address of 2001:DB8:0:2:2AA:FF:FE90:4D3C, and the interface is the interface that 
corresponds to interface index 5 (the Ethernet network adapter named Local Area Connection 2). When 
traffic is sent to 2001:DB8:0:9:2AA:FF:FE03:21A6, the longest matching route is the default route (::/0). 
The forwarding IP address is set to the router address of FE80::210:FFFF:FED6:58C0, and the 
interface is the interface that corresponds to interface index 6 (the Ethernet network adapter named 
Local Area Connection 3). 
IPv6 Routing Protocols 
The following routing protocols are defined for IPv6: 
RIPng for IPv6 
OSPF for IPv6 
Integrated Intermediate System-to-Intermediate System (IS-IS) for IPv6 
BGP-4 
Inter-Domain Routing Protocol version 2 (IDRPv2) 
RIPng for IPv6 
RIP Next Generation (RIPng) is a distance vector routing protocol for IPv6 that is defined in RFC 2080. 
RIPng for IPv6 is an adaptation of the RIP v2 protocol—defined in RFC 1723—to advertise IPv6 
address prefixes. RIPng for IPv6 uses UDP port 521 to periodically advertise its routes, respond to 
requests for routes, and advertise route changes. 
RIPng for IPv6 has a maximum distance of 15, in which 15 is the accumulated cost (hop count). 
Locations that are a distance of 16 or further are considered unreachable. RIPng for IPv6 is a simple 
routing protocol with a periodic route-advertising mechanism designed for use in small- to medium-
sized IPv6 networks. RIPng for IPv6 does not scale well to a large or very large IPv6 network. 
OSPF for IPv6 
OSPF for IPv6 is a link state routing protocol defined in RFC 2740 and designed for routing table 
maintenance within a single autonomous system. OSPF for IPv6 is an adaptation of the OSPF routing 
protocol version 2 for IPv4 defined in RFC 2328. The OSPF cost of each router link is a unitless number 
that the network administrator assigns, and it can include delay, bandwidth, and monetary cost factors. 
The accumulated cost between network segments in an OSPF network must be less than 65,535. 
OSPF messages are sent as upper layer protocol data units (PDUs) using the next header value of 89. 
Integrated IS-IS for IPv6 
Integrated IS-IS, also known as dual IS, is a link state routing protocol that is very similar to OSPF and 
that is defined in International Standards Organization (ISO) document 10589. IS-IS supports both IPv4 
and Connectionless Network Protocol (CLNP) (the Network layer of the Open Systems Interconnection 
Chapter 5 – IP Routing 
TCP/IP Fundamentals for Microsoft Windows  
Page: 148 
[OSI] protocol suite). IS-IS allows two levels of hierarchical scaling, whereas OSPF allows only one 
(areas).  
A detailed explanation of Integrated IS-IS for IPv6 is beyond the scope of this chapter. For more 
information, see ISO 10589 and the Internet draft titled "Routing IPv6 with IS-IS." 
BGP-4 
Border Gateway Protocol Version 4 (BGP-4) is a path vector routing protocol defined in RFC 4271. 
Unlike RIPng for IPv6 and OSPF for IPv6, which are used within an autonomous system, BGP-4 is 
designed to exchange routing information between autonomous systems. BGP-4 routing information is 
used to create a logical path tree, which describes all the connections between autonomous systems. 
The path tree information is then used to create loop-free routes in the routing tables of BGP-4 routers. 
BGP-4 messages are sent using TCP port 179. BGP-4 is the primary inter-domain protocol used to 
maintain routing tables on the IPv4 Internet. 
BGP-4 has been defined to be independent of the address family for which routing information is being 
propagated. For IPv6, BGP-4 has been extended to support IPv6 address prefixes as described in 
RFCs 2545 and 4760. 
A detailed explanation of BGP-4 for IPv6 is beyond the scope of this chapter. For more information, see 
RFCs 4271, 2545, and 4760. 
IPv6 Route Aggregation and Summarization 
Just like in IPv4, you can aggregate or summarize IPv6 routing information at boundaries of address 
spaces. The best examples are the 48-bit address prefixes that IANA or an ISP assigns to the individual 
sites of an organization. The 48-bit prefix summarizes all the addresses used within the site. The 64-bit 
prefixes that correspond to individual subnets within the site are not advertised outside the site.  
Within the site, organizations are free to use any route aggregation scheme they want within the 16-bit 
Subnet ID field of the IPv6 global address format. Figure 5-10 shows an example. 
Chapter 5 – IP Routing 
TCP/IP Fundamentals for Microsoft Windows  
Page: 149 
Figure 5-10  An example of route aggregation for an IPv6 unicast address prefix 
Windows Support for IPv6 Static Routing 
The IPv6 protocol component of Windows supports static routing. You can configure a computer 
running Windows as a static IPv6 router by enabling forwarding on the computer's interfaces and then 
configuring it to advertise subnet prefixes to local hosts. 
Figure 5-11 shows an example network using a simple static routing configuration. The configuration 
consists of three subnets, three host computers running Windows (Host A, Host B, and Host C), and 
two router computers running Windows (Router 1 and Router 2). 
Chapter 5 – IP Routing 
TCP/IP Fundamentals for Microsoft Windows  
Page: 150 
Figure 5-11  Static routing example with the IPv6 protocol component of Windows 
After the IPv6 protocol is installed on all computers on this example network, you must enable 
forwarding and advertising over the two network adapters of Router 1 and Router 2. Use the following 
command: 
netsh interface ipv6 set interface InterfaceNameOrIndex forwarding=enabled advertise=enabled 
in which InterfaceNameorIndex is the name of the network connection in the Network Connections 
folder or the interface index number from the display of the netsh interface ipv6 show interface 
command. You can use either the interface name or its index number. In Windows Server 2008, you 
can also use the Routing and Remote Access snap-in to enable IPv6 routing. 
For example, for Router 1, if the interface index of the network adapter connected to Subnet 1 is 4 and 
the interface index of the network adapter connected to Subnet 2 is 5, the commands would be: 
netsh int ipv6 set interface 4 forwarding=enabled advertise=enabled 
netsh int ipv6 set interface 5 forwarding=enabled advertise=enabled 
After you enable forwarding and advertising, you must configure the routers with the address prefixes 
for their attached subnets. For the IPv6 in Windows, you do this by adding routes to the router's routing 
table with instructions to advertise the route. Use the following command: 
netsh interface ipv6 set route Address/PrefixLength InterfaceNameOrIndex publish=yes 
in which Address is the address portion of the prefix and PrefixLength is the prefix length portion of the 
prefix. To publish a route (to include it in a router advertisement), you must specify publish=yes. 
For example, for Router 1 using the example interface indexes, the commands are: 
netsh int ipv6 set route 2001:DB8:0:1::/64 4 publish=yes 
netsh int ipv6 set route 2001:DB8:0:2::/64 5 publish=yes 
Chapter 5 – IP Routing 
TCP/IP Fundamentals for Microsoft Windows  
Page: 151 
The result of this configuration is the following: 
Router 1 sends Router Advertisement messages on Subnet 1. These messages contain a Prefix 
Information option to autoconfigure addresses for Subnet 1 (2001:DB8:0:1::/64), a Maximum 
Transmission Unit (MTU) option for the link MTU of Subnet 1, and a Route Information option for the 
subnet prefix of Subnet 2 (2001:DB8:0:2::/64). 
Router 1 sends Router Advertisement messages on Subnet 2. These messages contain a Prefix 
Information option to autoconfigure addresses for Subnet 2 (2001:DB8:0:2::/64), an MTU option for the 
link MTU of Subnet 2, and a Route Information option for the subnet prefix of Subnet 1 
(2001:DB8:0:1::/64). 
When Host A receives the Router Advertisement message, the host automatically configures a global 
address on its network adapter interface with the prefix 2001:DB8:0:1::/64 and an Extended Unique 
Identifier (EUI)-64-derived interface identifier. The host also adds a route for the locally attached Subnet 
1 (2001:DB8:0:1::/64) and a route for Subnet 2 (2001:DB8:0:2::/64) with the next-hop address of the 
link-local address of Router 1's interface on Subnet 1 to its routing table. 
When Host B receives the Router Advertisement message, the host automatically configures a global 
address on its network adapter interface with the prefix 2001:DB8:0:2::/64 and an EUI-64-derived 
interface identifier. The host also adds a route for the locally attached Subnet 2 (2001:DB8:0:2::/64) and 
a route for Subnet 1 (2001:DB8:0:1::/64) with the next-hop address of the link-local address of Router 
1's interface on Subnet 2 to its routing table. 
In this configuration, Router 1 does not advertise itself as a default router (the Router Lifetime field in 
the Router Advertisement message is set to 0), and the routing tables of Host A and Host B do not 
contain default routes. A computer running the IPv6 protocol component for Windows Server 2003 or 
Windows XP will not advertise itself as a default router unless a default route is configured to be 
published. 
To continue this example configuration, the interface index of Router 2's network adapter connected to 
Subnet 2 is 4, and the interface index of Router 2's network adapter connected to Subnet 3 is 5. To 
provide connectivity between Subnet 2 and Subnet 3, you would issue the following commands on 
Router 2: 
netsh int ipv6 set interface 4 forwarding=enabled advertise=enabled 
netsh int ipv6 set interface 5 forwarding=enabled advertise=enabled 
netsh int ipv6 set route 2001:DB8:0:2::/64 4 publish=yes 
netsh int ipv6 set route 2001:DB8:0:3::/64 5 publish=yes 
The result of this configuration is the following: 
Router 2 sends Router Advertisement messages on Subnet 2. These messages contain a Prefix 
Information option to autoconfigure addresses for Subnet 2 (2001:DB8:0:2::/64), an MTU option for the 
link MTU of Subnet 2, and a Route Information option for the subnet prefix of Subnet 3 
(2001:DB8:0:3::/64). 
Router 2 sends Router Advertisement messages on Subnet 3. These messages contain a Prefix 
Information option to autoconfigure addresses for Subnet 3 (2001:DB8:0:3::/64), an MTU option for the 
Chapter 5 – IP Routing 
TCP/IP Fundamentals for Microsoft Windows  
Page: 152 
link MTU of Subnet 3, and a Route Information option for the subnet prefix of Subnet 2 
(2001:DB8:0:2::/64). 
When Host B receives the Router Advertisement message from Router 2, the host does not 
automatically configure a global address using the 2001:DB8:0:2::/64 prefix, because a global address 
with that prefix already exists. Host B also adds a route for Subnet 3 (2001:DB8:0:3::/64) with the next-
hop address of the link-local address of Router 2's interface on Subnet 2 to its routing table. 
When Host C receives the Router Advertisement message, the host automatically configures a global 
address on its network adapter interface with the prefix 2001:DB8:0:3::/64 and an EUI-64-derived 
interface identifier. It also adds a route for the locally attached subnet (Subnet 3) (2001:DB8:0:3::/64) 
and a route for Subnet 2 (2001:DB8:0:2::/64) with the next-hop address of the link-local address of 
Router 2's interface on Subnet 3 to its routing table. 
The result of this configuration is that, although Host B can communicate with both Host A and Host C, 
Host A and Host C cannot communicate because Host A has no routes to Subnet 3 and Host C has no 
routes to Subnet 1. You can solve this problem in either of two ways: 
Configure Router 1 to publish a route to Subnet 3 with the next-hop address of Router 2's link-local 
address on Subnet 2, and configure Router 2 to publish a route to Subnet 1 with the next-hop address 
of Router 1's link-local address on Subnet 2. 
Configure Router 1 to publish a default route with the next-hop address of Router 2's link-local address 
on Subnet 2, and configure Router 2 to publish a default route with the next-hop address of Router 1's 
link-local address on Subnet 2. 
For the first solution, Router 1 will advertise two Route Information options on Subnet 1—one for 
Subnet 2 and one for Subnet 3. Therefore, Host A will add two routes to its routing table—one for 
2001:DB8:0:2::/64 and 2001:DB8:0:3::/64. Router 1 will continue to advertise only one Route 
Information option (for Subnet 1) on Subnet 2. Similarly, Router 2 will advertise two Route Information 
options on Subnet 3—one for Subnet 1 and one for Subnet 2. Therefore, Host C will add two routes to 
its routing table—one for 2001:DB8:0:1::/64 and 2001:DB8:0:2::/64. Router 2 will continue to advertise 
only one Route Information option (for Subnet 3) on Subnet 2. The result of this configuration is that all 
the hosts and all the routers have specific routes to all the subnets. 
For the second solution, Router 1 will advertise itself as a default router with one Route Information 
option (for Subnet 2) on Subnet 1. Therefore, Host A will add two routes to its routing table—one for the 
default route ::/0 and one for 2001:DB8:0:2::/64. Similarly, Router 2 will advertise itself as a default 
router with one Route Information option (for Subnet 2) on Subnet 3. Therefore, Host C will add two 
routes to its routing table—one for the default route ::/0 and one for 2001:DB8:0:2::/64. The result of this 
configuration is that all the hosts and all the routers have a combination of specific and general routes 
to all the subnets, with the exception of Host B, which has only specific routes to all the subnets. The 
problem with solution 2 is that Router 1 and Router 2 have default routes pointing to each other. Any 
non-link-local traffic sent from Host A or Host C that does not match the prefix 2001:DB8:0:1::/64, 
2001:DB8:0:2::/64, or 2001:DB8:0:3::/64 is sent in a routing loop between Router 1 and Router 2. 
You could extend this network of three subnets and two routers to include more subnets and more 
routers. However, the administrative overhead to manage the configuration of the static routers does 
not scale. At some point, you would want to use an IPv6 routing protocol. 
Chapter 5 – IP Routing 
TCP/IP Fundamentals for Microsoft Windows  
Page: 153 
Configuring Hosts for IPv6 Routing 
IPv6 hosts are configured for routing through the router discovery process, which requires no 
configuration. When an initializing IPv6 host receives a Router Advertisement message, IPv6 
automatically configures the following: 
On-link subnet prefixes that correspond to autoconfiguration address prefixes contained within the 
Router Advertisement message. 
Off-link subnet prefixes that correspond to specific routes contained within the Router Advertisement 
message. 
A default route, if the router sending the Router Advertisement message is advertising itself as a default 
router. 
Because the typical IPv6 host is automatically configuring all the routes that it typically needs to forward 
packets to an arbitrary destination, you do not need to configure routes on IPv6 hosts. 
Chapter 5 – IP Routing 
TCP/IP Fundamentals for Microsoft Windows  
Page: 154 
Routing Tools 
Windows includes the following command-line utilities that you can use to test reachability and routing 
and to maintain the routing tables:  
Route  
Displays the local IPv4 and IPv6 routing tables. You can use the Route tool to add temporary and 
persistent routes, change existing routes, and remove routes from the IPv4 routing table. You can 
use the Route tool in Windows Vista and Windows Server 2008 to add routes, change existing 
routes, and remove routes from the IPv6 routing table. 
Netsh interface ipv6 
Displays the IPv6 routing table (netsh interface ipv6 show routes), adds routes (netsh interface 
ipv6 add route), removes routes (netsh interface ipv6 delete route), and modifies existing routes 
(netsh interface ipv6 set route). 
Ping  
Verifies IP-level connectivity to another TCP/IP computer by sending either ICMP Echo or ICMPv6 
Echo Request messages. The tool displays the receipt of corresponding Echo Reply messages, 
along with round-trip times. Ping is the primary TCP/IP tool used to troubleshoot connectivity, 
reachability, and name resolution.  
Tracert  
Determines the path taken to a destination by sending ICMP Echo or ICMPv6 Echo Request 
messages to the destination with incrementally increasing Time to Live (TTL) or Hop Count field 
values. The path displayed is the list of near-side router interfaces of the routers in the path 
between a source host and a destination. The near-side interface is the interface of the router that 
is closest to the sending host in the path.  
Pathping  
Provides information about network latency and network loss at intermediate hops between a 
source and a destination. Pathping sends multiple ICMP Echo or ICMPv6 Echo Request messages 
to each router between a source and destination over a period of time and then computes results 
based on the packets returned from each router. Because Pathping displays the degree of packet 
loss at any given router or link, you can determine which routers or links might be having network 
problems.  
Chapter 5 – IP Routing 
TCP/IP Fundamentals for Microsoft Windows  
Page: 155 
Chapter Summary 
The chapter includes the following pieces of key information: 
IP routing is the process of forwarding a packet based on the destination IP address. IP uses a routing 
table to determine the next-hop IP address and interface for a packet being sent or forwarded. 
IP routing is a combination of direct and indirect deliveries. Direct delivery occurs when the IP node 
forwards a packet to the final destination on a directly attached subnet, and indirect delivery occurs 
when the IP node forwards a packet to an intermediate router. 
Static routing relies on the manual administration of the routing table. Dynamic routing relies on routing 
protocols, such as RIP and OSPF, to dynamically update the routing table through the exchange of 
routing information between routers. 