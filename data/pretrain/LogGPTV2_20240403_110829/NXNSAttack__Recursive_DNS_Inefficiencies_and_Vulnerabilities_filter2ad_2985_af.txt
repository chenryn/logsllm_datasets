initiate more than one additional fetches. We see that
374,498 domain requests do not initiate any additional
resolutions (38.34%, note that we count only requests
with NOERROR responses).
In the second experiment, we recorded the communica-
tion between the recursive resolver and the authoritative
structure during the resolution of the 1M domains. In
this case, we did not focus on the BIND operation, but
Figure 13: Number of domains that their resolution
incurs initiation of extra resolutions by BIND (over top
million domains).
rather inspected the NS referral responses received from
the authoritative hierarchy in order to measure: (i) how
many name servers are returned for each domain, (ii)
how many name servers are not provided with their cor-
responding IP addresses (missing glue records), and (iii)
which name servers are out-of-bailiwick. When counting
the number of out-of-bailiwick name servers, we consider
both deﬁnitions as we discuss in §2.2 (RFC 8499). The
ﬁrst, strict deﬁnition describes a name server whose name
is subordinate to the owner name of the NS resource
record (e.g., ns.child.example.com as name server for the
domain ‘example.com’). The second, wider deﬁnition
refers to a name server’s name that is subordinate to the
zone origin and not subordinate to the owner of the NS
resource record (e.g., ns.another.com as name server for
the domain ‘example.com’).
We start by counting the number of name servers for
each domain; see Figure 14. While most of the domains
have two name servers, 33% have three or more. Results
show that the top million domains have an average of
2.52 name servers per domain.
s
n
i
a
m
o
d
f
o
r
e
b
m
u
N
8
6
4
2
0
·105
622,818
5,715
114,070 135,055
48,900
8,494
119
2
1
13-54
Number of nameservers per domain
7-12
5-6
3
4
Figure 14: Number of duplicates of each name server
per domain over top million domains.
USENIX Association
29th USENIX Security Symposium    645
Measurement
Requests
Answers
NXDOMAIN
SERVFAIL
NOERROR
CNAME Response
Empty Response
Domains with nameservers (valid)
Domains that all their NSs with glue (IP)
Domains that all their NSs w/o glue.
Total name servers in answers
In-bailiwick name servers (strict def.)
Out-of-bailiwick name servers (strict def.)
In-bailiwick name servers (wider def.)
Out-of-bailiwick name servers (wider def.)
name servers with glue records
name servers w/o glue records
Number
1,000,000
1,000,000
20,025
20,110
959,865
1,717
11,498
946,650
342,429
567,450
2,394,475
70,596
2,323,879
1,081,876
1,312,599
869,140
1,525,335
Table 6: Pervasiveness of authoritative name servers
with missing glue records over the top million domains.
F
D
C
1
0.9
0.8
0.7
0.6
0.5
0.4
0.3
0
number of domain’s name
servers w/o glue records
number of domain’s
out-of-bailiwick name servers
2
4
12
Number of servers per domain name
10
6
8
14
Figure 15: CDF of out-of-bailiwick name servers per
domain.
We show the results in Table 6. Only 869,140 out
of 2,394,475 (36.3%) name servers that appear in the
NS referral responses of the 1M domains are both in-
bailiwick and include a corresponding IP address (glue
record). 1,525,335 (63.7%) name servers are missing a
corresponding glue record, of which 1,312,599 are out-of-
bailiwick, showing that some in-bailiwick name servers
are not provided with their glue records by their parent
authoritative name servers. Here we refer to the wider
deﬁnition of bailiwick; the results show that most au-
thoritative name servers provide glue records according
to this deﬁnition. Additionally, according to the strict
deﬁnition of in-bailiwick, we found that only 70,596 name
server out of 2,394,475 (2.95%) are in-bailiwick, i.e., their
name servers names are within the domain name (for ex-
ample, ‘ns.example.com’ as a name server for the domain
‘example.com’).
The blue line (−•−) in Figure 15 shows the distribu-
tion of the number of name servers without a glue record
per domain. For the majority of the domains (567,450 out
of 946,650 domains with NOERROR responses, 59.94%),
all their name servers are received without a correspond-
ing glue record (in the NS referral response from the TLD,
or sometimes from an SLD). One reason for this high
number of domains with out-of-bailiwick name servers is
that many domains outsource their DNS authoritative
service to the same vendors. Out of the 1 million we
tested, 218,747 (21%) domains use ns.cloudflare.com
and 129,789 use domaincontrol.com.
7 Related Work
Luo et al. [20] analyze the prevalence and characteristics
of the NXDomain and water torture attacks. Using one
month of real-world DNS traﬃc, they compare the attack
behavior with DGA malware and disposable services.
Recently the DNS infrastructure is facing abuse by
various entities which use it for applications for which
it was not intended. In this case, a large volume of
temporary domain names (aka disposable domains [13])
is commonly used to help these services to communicate
via DNS queries. A study [13] from large scale DNS
traﬃc shows that 60% of all distinct resource records
observed daily are disposable. Hao et al. [5] examine
the negative impact of disposable domains on recursive
caching. They propose a classiﬁcation based on domain
name features to increase the cache hit-rate.
Maury [22] presents a diﬀerent attack that also exploits
the delegations of name servers in a referral response.
However, the attack (called the iDNS attack) PAF is
at most 10x. In iDNS the attacker’s name server sends
self-delegations (back and forth to the attacker’s name
server) up to an inﬁnite depth. A major diﬀerence from
our work is that the glueless name servers in the iDNS
attack are never used against an external server such as
a victim name server. Some measures have been taken
by diﬀerent DNS vendors such as BIND and UNBOUND
following the disclosure of iDNS described in [22]; how-
ever these measures do not aﬀect and do not weaken the
NXNSAttack.
Wang [35] focuses on the DNS security implications
of glue records. He describes how recursive resolver im-
plementations such as BIND and Unbound treat glue
records, but the focus is on cache poisoning vulnerabili-
ties rather than the impact on the recursive performance,
which is the focus of the current paper.
Muller et al. [28] perform a comprehensive measure-
ment using the RIPE atlas to analyze how recursive
resolvers select which name server to interact with, out
of a set of multiple authoritative servers. The focus is
on how and when the recursive resolvers query a set of
multiple authoritative servers, while in this paper we ex-
tend the discussion and focus on how and when recursive
servers resolve the IP addresses of a set of authoritative
name servers. In another work [27], Moura et al. analyze
646    29th USENIX Security Symposium
USENIX Association
the root DNS service during a speciﬁc DDoS attack. How-
ever, the analysis refers to authoritative servers rather
than recursive behavior. In a recent work [26], Moura
et al. measure and show the impact of the caching and
long TTL on dissecting DNS defenses during a DDoS
attack.
8 Disclosure
After discovering the NXNSAttack, we initiated a re-
sponsible disclosure procedure. The following vendors
and DNS service providers were approached and have
patched their software and servers, most of them us-
ing the MaxFetch(k) approach: ISC BIND (CVE-2020-
8616), NLnet labs Unbound (CVE-2020-12662), Pow-
erDNS (CVE-2020-10995), CZ.NIC Knot Resolver (CVE-
2020-12667), Cloudﬂare, Google, Amazon, Microsoft, Or-
acle (DYN), Verisign, IBM Quad9 and ICANN. Aka-
mai among others, seems to have been patched or non-
vulnerable to a one variant of the attack which we
checked. Here is a quote from one of the large parties in
the disclosure: “Due to this attack’s potential to inca-
pacitate a target’s authoritative name server with very
little eﬀort on behalf of the attacker, we’ve rated the
original report a High severity”.
9 Conclusions
You never know what you might ﬁnd when you go search-
ing for your lost donkey. We started oﬀ researching the
eﬃciency of recursive resolvers and their behavior un-
der diﬀerent attacks, but we ended up ﬁnding a new,
devastating vulnerability, the NXNSAttack.
The key ingredients of the new attack are (i) the ease
with which one can own or control an authoritative name
server, (ii) the use of nonexistent domain names for name
servers, and (iii) the extra redundancy placed in the DNS
structure to achieve fault tolerance and fast response
time.
We note that some of the possible remedies, such
as various rate limiters, are a double-edged sword; a
sophisticated attacker may use them to deny service to
legitimate clients, by hitting the limiter’s thresholds with
malicious requests.
Notice that DoH (DNS over Http) is irrelevant to this
paper because it deals with the communication channel
between a client and its recursive resolver while we fo-
cus here on the communications between the recursive
resolver and the authoritative structure.
Acknowledgements: We would like to thank the
referees for very helpful comments and feedback, and
Michael McNally, and Cathy Almond of ISC, Ralph Dol-
mans, Wouter Wijngaards and Benno Overeinder of NL-
net Labs, and Petr Špaček of NIC.CZ for their help and
cooperation in the disclosure procedure, as well as Eyal
Ronen and Yair Kaldor for their help in this project.
References
[1] Bind 9 administrator reference manual. https://
www.bind9.net/bind-9.12.2-manual.pdf.
[2] PowerDNS. https://www.powerdns.com/, 2019.
[3] Akamai. Whitepaper: DNS Reﬂection, Ampliﬁca-
tion, and DNS Water-torture, 2019.
[4] Manos Antonakakis, Tim April, Michael Bailey,
Matt Bernhard, Elie Bursztein, Jaime Cochran, Za-
kir Durumeric, J Alex Halderman, Luca Invernizzi,
Michalis Kallitsis, et al. Understanding the mirai
botnet. In 26th USENIX Security Symposium, pages
1093–1110, 2017.
[5] Yizheng Chen, Manos Antonakakis, Roberto
Perdisci, Yacin Nadji, David Dagon, and Wenke
Lee. DNS noise: Measuring the pervasiveness of
disposable domains in modern DNS traﬃc. In DSN,
pages 598–609. IEEE Computer Society, 2014.
[6] J. Damas, M. Graﬀ, and P. Vixie. RFC 6891: Ex-
tension Mechanisms for DNS (EDNS(0)). https:
//tools.ietf.org/html/rfc6891, 2013.
[7] Ralph Dolmans. The NXNSAttack disclosure. [dns-
wg] 17 June online RIPE DNS working group ses-
sion, 2020.
[8] Fujiwara K. et. al. RFC-8198 Aggressive Use of
DNSSEC-Validated Cache. IETF Standards Track,
2017.
[10] FireEye.
[9] Shir Landau Feibish, Yehuda Afek, Anat Bremler-
Barr, Edith Cohen, and Michal Shagam. Mitigating
DNS random subdomain DDoS attacks by distinct
heavy hitters sketches. HotWeb, pages 8:1–8:6, 2017.
Global DNS Hijacking Campaign:
https:
DNS Record Manipulation at Scale.
//www.fireeye.com/blog/threat-research/
2019/01/global-dns-hijacking-campaign-dns-
record-manipulation-at-scale.html, August
2019.
[11] Suzanne Goldlust and Cathy Almond. Recursive
Client Rate limiting in BIND 9.9.8, 9.10.3 and 9.11.0.
https://kb.isc.org/docs/aa-01304, June 2019.
[12] Suzanne Goldlust and Cathy Almond. Perfor-
mance testing of recursive servers using queryperf.
https://kb.isc.org/docs/aa-00561/, Oct. 2019.
ISC DNSperf.
[13] Shuai Hao and Haining Wang. Exploring domain
USENIX Association
29th USENIX Security Symposium    647
name based features on the eﬀectiveness of DNS
caching. ACM SIGCOMM Computer Communica-
tion Review, 47(1):36–42, 2017.
[14] P. Hoﬀman, A. Sullivan, and K. Fujiwara. RFC
8499–DNS Terminology. https://tools.ietf.org/
html/rfc8499, 2019.
[15] ISC. Bind: Internet systems consortium. https:
//www.isc.org/downloads/bind, May 2019.
[16] Mohammad Karami, Youngsam Park, and Damon
McCoy. Stress testing the booters: Understanding
and undermining the business of DDoS services. In
Proceedings of the 25th International Conference on
World Wide Web, pages 1033–1043, 2016.
[17] Amit Klein, Haya Shulman, and Michael Waidner.
Counting in the dark: DNS caches discovery and
enumeration in the internet. In 2017 47th Annual
IEEE/IFIP International Conference on Depend-
able Systems and Networks (DSN), pages 367–378.
[18] Marc Kührer, Thomas Hupperich, Jonas Bushart,
Christian Rossow, and Thorsten Holz. Going wild:
Large-scale classiﬁcation of open dns resolvers. In
Proceedings of the 2015 Internet Measurement Con-
ference, pages 355–368. ACM, 2015.
[19] NLnet Labs. Unbound. https://nlnetlabs.nl/
projects/unbound, 2019.
[20] Xi Luo, Liming Wang, Zhen Xu, Kai Chen, Jing
Yang, and Tian Tian. A large scale analysis of DNS
water torture attack. In Proceedings of the 2018 2nd
International Conference on Computer Science and
Artiﬁcial Intelligence, pages 168–173. ACM, 2018.
[21] Majestic. Top million root domains list. https://
majestic.com/reports/majestic-million/, May
2019.
[22] Florian Maury. The iDNS attack. In OARC 15,
2015.
[23] Warren Mercer and Paul Rascagneres.
Talos
blog: DNSpionage campaign targets middle east.
https://blog.talosintelligence.com/2018/
11/dnspionage-campaign-targets-middle-
east.html, August 2019.
[24] Paul Mockapetris. RFC-1034 Domain Names-
Concepts and Facilities. Network Working Group,
page 55, 1987.
[25] Don Moore.
DNS server survey.
mydns.bboy.net/survey/, 2004.
http://
[26] Giovane Moura, John Heidemann, Moritz Müller,
Ricardo de O Schmidt, and Marco Davids. When
the dike breaks: Dissecting DNS defenses during
DDoS. In Proceedings of the Internet Measurement
Conference 2018, pages 8–21. ACM, 2018.
[27] Giovane C.M. Moura, Ricardo de O. Schmidt, John
Heidemann, Wouter B. de Vries, Moritz Muller, Lan
Wei, and Cristian Hesselman. Anycast vs. DDoS:
Evaluating the November 2015 root DNS event. In
Internet Measurement Conference, pages 255–270,
2016.
[28] Moritz Müller, Giovane C. M. Moura, Ricardo
de O. Schmidt, and John Heidemann. Recursives in
the wild: Engineering authoritative DNS servers. In
Internet Measurement Conference, pages 489–495,
New York, NY, USA, 2017.
[29] Water Torture Nishida K. A slow drip DNS DDoS
attack on qtnet. https://www.slideshare.net/
apnic/dnswatertortureonqtnet-1425130417-
1425507043/, May 2019.
[30] Nominum.
resperf performance tool manual.
ftp://ftp.nominum.com/pub/nominum/dnsperf/
2.0.0.0/resperf.pdf/, May 2019.
[31] Radware. DNS: Strengthening the Weakest Link.
https://blog.radware.com/security/2018/08/
dns-attack-security-challenges/, 2018.
[32] Christoph Schuba. Addressing weaknesses in the
domain name system protocol. Master’s thesis,
Purdue University, West Lafayette, IN, 1993.
[33] Secure64. Water torture, a slow drip DNS DDoS
attack. https://secure64.com/water-torture-
slow-drip-dns-ddos-attack/, Feb. 2014.
[34] Joe Stewart. DNS cache poisoning–the next gen-
eration. http://www.secureworks.com/research/
articles/dns-cache-poisoning, 2003.
[35] Zheng Wang. The availability and security impli-
cations of glue in the domain name system. CoRR,
abs/1605.01394, 2016.
[36] Petr Špaček. NXNSAttack: upgrade resolvers
to stop new kind of random subdomain at-
tack.
https://en.blog.nic.cz/2020/05/19/
nxnsattack-upgrade-resolvers-to-stop-new-
kind-of-random-subdomain-attack, May 2020.
CZ.NIC Blog.
648    29th USENIX Security Symposium
USENIX Association