### Improved Text

#### Introduction
In the first experiment, we observed that 374,498 domain requests (38.34%) did not initiate any additional DNS resolutions. This analysis only considered requests with NOERROR responses.

#### Second Experiment
In the second experiment, we recorded the communication between the recursive resolver and the authoritative name servers during the resolution of one million domains. Instead of focusing on BIND operations, we analyzed the NS referral responses from the authoritative hierarchy to measure:
1. The number of name servers returned for each domain.
2. The number of name servers without corresponding IP addresses (missing glue records).
3. The number of out-of-bailiwick name servers, using both definitions as discussed in §2.2 (RFC 8499). The strict definition describes a name server whose name is subordinate to the owner name of the NS resource record (e.g., `ns.child.example.com` as a name server for `example.com`). The wider definition refers to a name server's name that is subordinate to the zone origin but not subordinate to the owner of the NS resource record (e.g., `ns.another.com` as a name server for `example.com`).

#### Results
We began by counting the number of name servers for each domain, as shown in Figure 14. Most domains have two name servers, but 33% have three or more. The top million domains have an average of 2.52 name servers per domain.

**Figure 14: Number of name servers per domain over the top million domains.**

| Number of Nameservers | Frequency |
|-----------------------|-----------|
| 1-2                   | 622,818   |
| 3-4                   | 5,715     |
| 5-6                   | 114,070   |
| 7-12                  | 135,055   |
| 13-54                 | 48,900    |

#### Analysis of Glue Records
Table 6 summarizes the pervasiveness of authoritative name servers with missing glue records over the top million domains. Only 869,140 out of 2,394,475 (36.3%) name servers in the NS referral responses include corresponding IP addresses (glue records). The remaining 1,525,335 (63.7%) name servers are missing glue records, with 1,312,599 being out-of-bailiwick according to the wider definition. This indicates that some in-bailiwick name servers are not provided with their glue records by their parent authoritative name servers.

**Table 6: Pervasiveness of authoritative name servers with missing glue records over the top million domains.**

| Metric | Number |
|--------|--------|
| Total Requests | 1,000,000 |
| Total Answers | 1,000,000 |
| NXDOMAIN | 20,025 |
| SERVFAIL | 20,110 |
| NOERROR | 959,865 |
| CNAME Response | 1,717 |
| Empty Response | 11,498 |
| Domains with nameservers (valid) | 946,650 |
| Domains with all NSs with glue (IP) | 342,429 |
| Domains with all NSs w/o glue | 567,450 |
| Total name servers in answers | 2,394,475 |
| In-bailiwick name servers (strict def.) | 70,596 |
| Out-of-bailiwick name servers (strict def.) | 2,323,879 |
| In-bailiwick name servers (wider def.) | 1,081,876 |
| Out-of-bailiwick name servers (wider def.) | 1,312,599 |
| Name servers with glue records | 869,140 |
| Name servers w/o glue records | 1,525,335 |

**Figure 15: CDF of out-of-bailiwick name servers per domain.**

The blue line (−•−) in Figure 15 shows the distribution of the number of name servers without a glue record per domain. For the majority of the domains (567,450 out of 946,650 domains with NOERROR responses, 59.94%), all their name servers are received without a corresponding glue record. One reason for this high number of out-of-bailiwick name servers is that many domains outsource their DNS authoritative service to the same vendors. Out of the one million tested, 218,747 (21%) domains use `ns.cloudflare.com` and 129,789 use `domaincontrol.com`.

#### Related Work
Luo et al. [20] analyze the prevalence and characteristics of NXDomain and water torture attacks. Using one month of real-world DNS traffic, they compare attack behavior with DGA malware and disposable services. Recently, the DNS infrastructure faces abuse by various entities using it for unintended applications. A study [13] from large-scale DNS traffic shows that 60% of all distinct resource records observed daily are disposable. Hao et al. [5] examine the negative impact of disposable domains on recursive caching and propose a classification based on domain name features to increase the cache hit-rate.

Maury [22] presents a different attack exploiting delegations of name servers in referral responses. However, the iDNS attack has a maximum PAF of 10x. In iDNS, the attacker’s name server sends self-delegations up to an infinite depth. A major difference from our work is that the glueless name servers in the iDNS attack are never used against an external server such as a victim name server. Some measures have been taken by different DNS vendors such as BIND and UNBOUND following the disclosure of iDNS, but these measures do not affect or weaken the NXNSAttack.

Wang [35] focuses on the DNS security implications of glue records, describing how recursive resolver implementations such as BIND and Unbound treat glue records. The focus is on cache poisoning vulnerabilities rather than the impact on recursive performance, which is the focus of the current paper.

Muller et al. [28] perform a comprehensive measurement using the RIPE atlas to analyze how recursive resolvers select which name server to interact with. The focus is on how and when recursive resolvers query multiple authoritative servers, while in this paper, we extend the discussion to focus on how and when recursive servers resolve the IP addresses of a set of authoritative name servers.

#### Disclosure
After discovering the NXNSAttack, we initiated a responsible disclosure procedure. The following vendors and DNS service providers were approached and have patched their software and servers, most of them using the MaxFetch(k) approach: ISC BIND (CVE-2020-8616), NLnet labs Unbound (CVE-2020-12662), PowerDNS (CVE-2020-10995), CZ.NIC Knot Resolver (CVE-2020-12667), Cloudflare, Google, Amazon, Microsoft, Oracle (DYN), Verisign, IBM Quad9, and ICANN. Akamai, among others, seems to have been patched or non-vulnerable to one variant of the attack. Here is a quote from one of the large parties in the disclosure: “Due to this attack’s potential to incapacitate a target’s authoritative name server with very little effort on behalf of the attacker, we’ve rated the original report a High severity.”

#### Conclusions
You never know what you might find when you go searching for your lost donkey. We started researching the efficiency of recursive resolvers and their behavior under different attacks, but we ended up finding a new, devastating vulnerability, the NXNSAttack.

The key ingredients of the new attack are:
1. The ease with which one can own or control an authoritative name server.
2. The use of nonexistent domain names for name servers.
3. The extra redundancy placed in the DNS structure to achieve fault tolerance and fast response time.

We note that some possible remedies, such as various rate limiters, are a double-edged sword; a sophisticated attacker may use them to deny service to legitimate clients by hitting the limiter’s thresholds with malicious requests.

Notice that DoH (DNS over HTTP) is irrelevant to this paper because it deals with the communication channel between a client and its recursive resolver, while we focus here on the communications between the recursive resolver and the authoritative structure.

#### Acknowledgements
We would like to thank the referees for very helpful comments and feedback, and Michael McNally and Cathy Almond of ISC, Ralph Dolmans, Wouter Wijngaards, and Benno Overeinder of NLnet Labs, and Petr Špaček of NIC.CZ for their help and cooperation in the disclosure procedure. We also thank Eyal Ronen and Yair Kaldor for their help in this project.

#### References
[1] Bind 9 administrator reference manual. https://www.bind9.net/bind-9.12.2-manual.pdf.
[2] PowerDNS. https://www.powerdns.com/, 2019.
[3] Akamai. Whitepaper: DNS Reflection, Amplification, and DNS Water-torture, 2019.
[4] Manos Antonakakis, Tim April, Michael Bailey, Matt Bernhard, Elie Bursztein, Jaime Cochran, Zakir Durumeric, J Alex Halderman, Luca Invernizzi, Michalis Kallitsis, et al. Understanding the Mirai botnet. In 26th USENIX Security Symposium, pages 1093–1110, 2017.
[5] Yizheng Chen, Manos Antonakakis, Roberto Perdisci, Yacin Nadji, David Dagon, and Wenke Lee. DNS noise: Measuring the pervasiveness of disposable domains in modern DNS traffic. In DSN, pages 598–609. IEEE Computer Society, 2014.
[6] J. Damas, M. Graff, and P. Vixie. RFC 6891: Extension Mechanisms for DNS (EDNS(0)). https://tools.ietf.org/html/rfc6891, 2013.
[7] Ralph Dolmans. The NXNSAttack disclosure. [dns-wg] 17 June online RIPE DNS working group session, 2020.
[8] Fujiwara K. et. al. RFC-8198 Aggressive Use of DNSSEC-Validated Cache. IETF Standards Track, 2017.
[9] Shir Landau Feibish, Yehuda Afek, Anat Bremler-Barr, Edith Cohen, and Michal Shagam. Mitigating DNS random subdomain DDoS attacks by distinct heavy hitters sketches. HotWeb, pages 8:1–8:6, 2017.
[10] FireEye. Global DNS Hijacking Campaign: DNS Record Manipulation at Scale. https://www.fireeye.com/blog/threat-research/2019/01/global-dns-hijacking-campaign-dns-record-manipulation-at-scale.html, August 2019.
[11] Suzanne Goldlust and Cathy Almond. Recursive Client Rate limiting in BIND 9.9.8, 9.10.3 and 9.11.0. https://kb.isc.org/docs/aa-01304, June 2019.
[12] Suzanne Goldlust and Cathy Almond. Performance testing of recursive servers using queryperf. https://kb.isc.org/docs/aa-00561/, Oct. 2019. ISC DNSperf.
[13] Shuai Hao and Haining Wang. Exploring domain name-based features on the effectiveness of DNS caching. ACM SIGCOMM Computer Communication Review, 47(1):36–42, 2017.
[14] P. Hoffman, A. Sullivan, and K. Fujiwara. RFC 8499–DNS Terminology. https://tools.ietf.org/html/rfc8499, 2019.
[15] ISC. Bind: Internet systems consortium. https://www.isc.org/downloads/bind, May 2019.
[16] Mohammad Karami, Youngsam Park, and Damon McCoy. Stress testing the booters: Understanding and undermining the business of DDoS services. In Proceedings of the 25th International Conference on World Wide Web, pages 1033–1043, 2016.
[17] Amit Klein, Haya Shulman, and Michael Waidner. Counting in the dark: DNS caches discovery and enumeration in the internet. In 2017 47th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN), pages 367–378.
[18] Marc Kührer, Thomas Hupperich, Jonas Bushart, Christian Rossow, and Thorsten Holz. Going wild: Large-scale classification of open DNS resolvers. In Proceedings of the 2015 Internet Measurement Conference, pages 355–368. ACM, 2015.
[19] NLnet Labs. Unbound. https://nlnetlabs.nl/projects/unbound, 2019.
[20] Xi Luo, Liming Wang, Zhen Xu, Kai Chen, Jing Yang, and Tian Tian. A large scale analysis of DNS water torture attack. In Proceedings of the 2018 2nd International Conference on Computer Science and Artificial Intelligence, pages 168–173. ACM, 2018.
[21] Majestic. Top million root domains list. https://majestic.com/reports/majestic-million/, May 2019.
[22] Florian Maury. The iDNS attack. In OARC 15, 2015.
[23] Warren Mercer and Paul Rascagneres. Talos blog: DNSpionage campaign targets middle east. https://blog.talosintelligence.com/2018/11/dnspionage-campaign-targets-middle-east.html, August 2019.
[24] Paul Mockapetris. RFC-1034 Domain Names–Concepts and Facilities. Network Working Group, page 55, 1987.
[25] Don Moore. DNS server survey. http://mydns.bboy.net/survey/, 2004.
[26] Giovane Moura, John Heidemann, Moritz Müller, Ricardo de O Schmidt, and Marco Davids. When the dike breaks: Dissecting DNS defenses during DDoS. In Proceedings of the Internet Measurement Conference 2018, pages 8–21. ACM, 2018.
[27] Giovane C.M. Moura, Ricardo de O. Schmidt, John Heidemann, Wouter B. de Vries, Moritz Muller, Lan Wei, and Cristian Hesselman. Anycast vs. DDoS: Evaluating the November 2015 root DNS event. In Internet Measurement Conference, pages 255–270, 2016.
[28] Moritz Müller, Giovane C. M. Moura, Ricardo de O. Schmidt, and John Heidemann. Recursives in the wild: Engineering authoritative DNS servers. In Internet Measurement Conference, pages 489–495, New York, NY, USA, 2017.
[29] Nishida K. Water Torture: A slow drip DNS DDoS attack on qtnet. https://www.slideshare.net/apnic/dnswatertortureonqtnet-1425130417-1425507043/, May 2019.
[30] Nominum. Resperf performance tool manual. ftp://ftp.nominum.com/pub/nominum/dnsperf/2.0.0.0/resperf.pdf/, May 2019.
[31] Radware. DNS: Strengthening the Weakest Link. https://blog.radware.com/security/2018/08/dns-attack-security-challenges/, 2018.
[32] Christoph Schuba. Addressing weaknesses in the domain name system protocol. Master’s thesis, Purdue University, West Lafayette, IN, 1993.
[33] Secure64. Water torture, a slow drip DNS DDoS attack. https://secure64.com/water-torture-slow-drip-dns-ddos-attack/, Feb. 2014.
[34] Joe Stewart. DNS cache poisoning–the next generation. http://www.secureworks.com/research/articles/dns-cache-poisoning, 2003.
[35] Zheng Wang. The availability and security implications of glue in the domain name system. CoRR, abs/1605.01394, 2016.
[36] Petr Špaček. NXNSAttack: Upgrade resolvers to stop new kind of random subdomain attack. https://en.blog.nic.cz/2020/05/19/nxnsattack-upgrade-resolvers-to-stop-new-kind-of-random-subdomain-attack, May 2020. CZ.NIC Blog.

---

This improved version aims to provide a clearer, more structured, and professional presentation of the information.