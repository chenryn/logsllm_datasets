Prometheus 作为新一代的云原生监控系统，目前已经有超过650位贡献者参与到
7.1
2016年，Prometheus正式加入CloudNativeComputingFoundation（CNCF）基金会的
》强大的多维度数据模型。
1.Prometheus监控的特点
Prometheus 是一套开源的系统监控告警框架。它受启发于Google的Brogmon监控系
作为新一代的监控框架，Prometheus具有以下特点。
本章主要介绍两个开源软件Prometheus和Grafana。Prometheus是新一代的云原生监
V
的服务器推送坏的metrics。
使用 pull模式采集时间序列数据，这样不仅有利于本机测试而且可以避免有问题
高效：一个Prometheus server可以处理数百万的metrics。
赖于分布式存储。
易于管理：Prometheus server 是一个单独的二进制文件，可直接在本地工作，不依
乘法、加法、连接、取分数位等操作。
灵活而强大的查询语句（PromQL）：在同一个查询语句，可以对多个metrics进行
基于服务的开源监控Prometheus
第7章
Grafana 可视化平台
Prometheus 监控与
---
## Page 323
312
网络的监控数据主动Push到Gateway中。而 Prometheus Server 则可以采用Pull的方式从
求无法直接满足时，就可以利用PushGateway来进行中转。可以通过PushGateway将内部
环境的配置上必须要让PrometheusServer能够直接与Exporter进行通信。而当这种网络需
Prometheus Server来抓取。由于Prometheus 数据采集基于Pull模型进行设计，因此在网络
查询以及可视化。
Prometheus Server内置Express Browser UI，在这个UI可以直接通过PromQL实现数据的
PrometheusServer对外提供了自定义的PromQL语言，实现对数据的查询以及分析。
序数据库，将采集到的监控数据按照时间序列的方式存储在本地磁盘当中。最后，
Prometheus Server需要对采集到的监控数据进行存储，Prometheus Server本身就是一个时
ServiceDiscovery的方式动态管理监控目标，并从这些监控目标中获取数据。其次
储以及查询。首先，Prometheus Server可以通过静态配置管理监控目标，也可以配合使用
署非常方便，而这些组件大部分都是可选的，主要组件介绍如下。
7.1.2Prometheus的组件与架构
这样的需求，最好用其他的大数据系统对数据做分析。
Prometheus 可能不是一个好的选择，因为它收集上来的数据可能没这么细致、完整。对于
题时仍然使用它。
Server 都是独立的，不依赖于网络存储或其他的第三方服务。可以在部分基础设施出现问
强大。
是以服务为导向的动态架构。在微服务的世界，它支持多维度的数据集合，查询功能非常
高性能Linux服务器运维实战：shell编程、监控告警、性能优化与实战案例
（2）推送网关（pushgateway）
Prometheus 的生态系统包括多个组件，大部分的组件都是用Go 语言编写的，因此部
Prometheus 是为可用性而设计的，利用它可以快速定位问题。每一个Prometheus
推送网关主要是用来接收由Client推送过来的指标数据，在指定的时间间隔，由
PrometheusServer是Prometheus组件中的核心部分，负责实现对监控数据的获取、存
(1）Prometheus Server
1.Prometheus生态圈组件
Prometheus 用于评估可用性。如果想要100%的精准度，如每个请求的清单，那么，
3.
Prometheus 非常适合记录纯数字的时间序列，既可以是以主机为中心的监控，也可以
》可以采用push gateway的方式把时间序列数据推送至Prometheus server 端。
2
V
Prometheus不适合做什么
Prometheus 适合做什么
监控目标可以通过服务发现或静态配置。
支持多种绘图和仪表盘模式。
可以通过服务发现或者静态配置去获取监控的targets。
---
## Page 324
Prometheus Web UI、Grafana 或自己开发的工具）以 PromQL查询/导出数据。
（metrics），将时间序列数据保存到其自身的时间序列数据库（TSDB）中。
态配置添加监控目标。
Webhook 自定义告警处理方式。AlertManager就是 Prometheus 体系中的告警处理中心。
由 AlertManager 进行管理。
告警规则，如果满足PromQL定义的规则，
的服务监控。
Prometheus Server通过访问该Exporter提供的接口，即可获取到需要采集的监控数据。
PushGateway中获取到监控数据
2） Prometheus Server
在AlertManager 中可以与邮件、Slack 等内置的通知方式进行集成，也可以通过
4）当有告警产生时，
3）PrometheusServer通过HTTP Server 对外开放接口，可通过可视化工具（如
1）Prometheus Server 以服务发现（如Kubermetes、DNS 等）的方式自动发现或者静
2.Prometheus 的架构
管理告警主要负责实现监控告警功能。在Prometheus Server中支持基于PromQL创建
（4）告警管理器（Alertmanager）
常见的Exporter 有很多，例如，node_exporter、mysqld_exporter、statsd_exporter、
从架构图中可以看出其大概的工作流程如下。
Prometheus 的基本架构如图7-1所示。
Exporter主要用
(3）Exporter
Jobs/exporters
Pushgateway
push
来采集数据，
：定期从监控目标（Jobs/exporters）或Pushgateway中拉取数据
pull
Find targets
，Prometheus Server 将告警信息推送到Alertmanager，
图7-1Prometheus基本架构
retrievel
Services Discovery
并通过HTTP服务的形式暴露给PrometheusServer，
Prometheus Server
Prometheus监控与Crafana 可视化平台
，支持如 HAProxy、StatsD、Graphite、Redis 此类
SDD/HDD
TSDB
..DNS
，则会产生一条告警，而告警的后续处理流程则
Alertmanager
PromQL
push
PagerDuty
API Clients
Grafana
Email
第7章
313
o！
---
## Page 325
314
是Gauges 使用类型的代表。
有规则的变化，当前是多少，采集回来的就是多少，可以是增加，也可以是降低，这种就
metrics格式来度量，因为硬盘的容量或者内存的使用量是随着时间的推移不断地瞬时且没
返回133。又例如，如果要监控硬盘容量或者内存的使用量，那么就应该使用Gauges
988，过5s后，再次查询，则返回结果为1020，
只能是永远增加，不会减少。
误次数等。可以把Counter理解为计数器，数据量从0开始累积计算，在理想状态下数值
的标签（key/value键值对）来唯一标识的，不同的标签代表不同的时间序列。格式如下：
服务做监控做统计时，就需要用到 metrics 数据。因此，metric 是对采样数据的总称，注
Prometheus Server来抓取。
Alertmanager 根据配置的告警策略发送告警信息到对应的接收端。
高性能Linux服务器运维实战：shell编程、监控告警、性能优化与实战案例
，metrics 并不代表某种具体的数据格式，它是对于度量计算单位的抽象。
5）Pushgateway 接收 Short-lived 类型的 Jobs 推送过来的 metrics 并缓存，等待
例如，查询 http_requests_total{method="get"job="Prometheus",handler="query"}返回
Gauge 是一种常规的 metric，典型的应用如温度、运行的任务的个数。可以任意加减。
Counter是一种累加的
4.Prometheus4种metric类型
Prometheus中存储的数据为时间序列T-S（time-series），是由metric 的名字和一系列
(2）Gauge
(1）Counter
Prometheus客户端库主要提供4种主要的metric类型。
例如，prometheus_http_requests_total{code="200",handler="/metrics"}。
Promethes 监控中对于采集过来的数据统称为metrics数据，当需要为某个系统、某个
3.Prometheus数据模型
的值和一个毫秒级的UNIX时间戳。
样本：按照某个时序以时间维度采集的数据，称为样本，每个样本包括一个float64
及下划线组成。
求。当code="403"时，就变成一个新的metric。标签中的键由ASCII字符、数字以
prometheus_http_requests_total{code="200"表示所有http请求中状态码为200的请
标签：标签可以使Prometheus的数据更加丰富，能够区分具体不同的实例。例如，
其中，metric名字由ASCII字符、数字、下划线，以及冒号组成。
表示metric 的功能，例如，prometheus_http_requests_total，表示http请求的总数。
metric名字：该名字表示一
[=,}
metric,
一个可以度量的指标，名字需要有表达的含义，一般用于
典型的应用如请求的个数、结束的任务数和出现的错
，总之返回的数值一定是后面大于前面。
后
---
## Page 326
中常用的Exporter，。
各个方面的监控功能。这些Exporter可以实现大部分通用的监控需求。下面列举一些社区
绍如下。
target中获取样本数据：
Exporter 的一个实例称为 target，
态获取，这个过程就是Prometheus的服务发现。
Job 的Instance可以直接固定在配置文件中。也可以让Job 自动从Consul、Kuberntes 中动
类任务，可以为一个Job 配置多个instance，Job 对自己的 instance 执行相同的动作。属
sum 功能。提供百分位的功能，
HTTP服务
Prometheus 社区提供了丰富的Exporter的实现，涵盖了基础设施、中间件以及网络等
（1）社区提供的
从 Exporter 的来源上来讲，主要分为两类：社区提供的和用户自定义的，分别介
所有可以向
6.Exporter
被监控的具体目标是Instance，
5.Instance和Job
类似于Histogram，
(4）Summary
这是一种特殊的metrics 数据类型，代表的是一种近似的百分比估算数值。
Histogram用来统计数据的分布情况。
(3）Histogram
目志
存储
硬件
分类
1Prometheus 提供监控样本数据的程序都可以被称为一个Exporter。而
Fluentd Exporter、Grok Exporter
HAProxy Exporter、Nginx Exporter、Apache Exporter
HDFS Exporter、Ceph Exporter
Node Exporter、IPMI Exporter、IoTEdison Exporter
见表7-1a
图 7-2Prometheus 轮询从 target 获取数据流程
，典型的应用如请求持续时间、响应大小。提供监测值的 count 和
表7-1
Exporter
target
target
target
即可以按百分比划分跟踪结果。
：如图7-2所示。Prometheus 通过轮询的方式定期从这些
Prometheus常见的Exporter实现
监控这些Instances 的任务叫作Job。每个 Job 负责
。例如，最大值、最小值、中间值、还有中位数
Exporter名称
Prometheus Server
315
于
---
## Page 327
316
码验证，如图7-3所示。
步，
间的准确性要求很高，必须保证本机时间实时同步。这里以CentOS7为例，先执行时间同
7.1.3
如Bash、C++、Lua、Node.js、PHP 和 Rust等。
支持，如 Python、Go、Java/Scala 和 Ruby 等。
Library创建适合自己的Exporter程序，目前Promthues社区官方提供了对各种编程语言的
高性能Linux服务器运维实战：shell编程、监控告警、性能优化与实战案例
：执行如下计划任务：
启动后，PrometheusUI默认运行在9090端口。浏览器可以直接打开访问，无账号密
Prometheus 的安装非常简单，只需解压即可，然后执行命令可直接启动。
2.安装与启动Prometheus Server
首先需要到Prometheus官网http://prometheus.io下载最新版本的Prometheus，这里下
安装Prometheus之前必须要先安装NTP时间同步，因为PrometheusServer对系统时
1.Prometheus Server的下载
除了可以直接使用社区提供的Exporter以外，还可以基于Prometheus提供的Client
（2）用户自定义的
API服务
消息队列
监控系统
Prometheus的安装和配置
分类
[root@localhost prometheus-2.13.1.linux-amd64]#nohup./prometheus&
[root@localhost ~]# cd prometheus-2.13.1.linux-amd64
#
*****ntpdate -u cn.pool.ntp.org
[root@localhost~]# timedatectl set-timezone Asia/Shanghai
[root@localhost~]#contab-e
Add Grnph
Moment
GraphConiole
Execute
Prometh
npesSi+Entforine
insertmetricatcuor
GitHub Exporter、Docker Cloud Exporter、AWSECS Exporter
Kafka Exporter、NSQ Exporter、RabbitMQ Exporter
Nagios ExporterSNMP Exporter、Graphite Exporter
图7-3Prometheus UI主界面
。同时还支持通过第三方实现的编程语言，
Exporter名称
（续）
---
## Page 328
scraped from this config.
is every l minute.
Default is every l minute.
容如下：
安装之后，就默认自带了一个基本的配置文件，简单修改后的 prometheus.yml 文件内
'evaluation_interval".
--storage.tsdb.path="data/"修改本地数据存储的路径。
默认的存储路径为执行命令的当前data目录，
直接使用PromQL实时查询监控数据。
够轻松地了解Prometheus 当前的配置，监控任务运行状态等。通过Graph 面板，用户还能
Promtheus作为一个时间序列数据库，其采集的数据会以文件的形式存储在本地中
接下来来简单看一下Prometheus 的主配置文件 prometheus.yml,其实Prometheus 解压
3.PrometheusServer的配置文件
Prometheus UI是Prometheus内置的一个可视化管理界面，通过Prometheus UI用户能
rule files:
# Load rules once and periodically evaluate them according to the global
scrape_configs:
#Here it's Prometheus itself.
alerting:
#Alertmanager configuration
global:
- job_name:'prometheus'
# The job name is added as a label job=* to any timeseries
evaluation_interval:15s#Evaluaterules every 15 seconds.Thedefault
scrape_interval:
my global config
A scrape configuration containing exactly one endpoint to scrape:
alertmanagers:
# scrape_timeout is set to the global default (i0s).
static_configs: