---
title: Monitoring Comparison
date: 20210222
author: Lyz
---
As with any technology, when you want to adopt it, you first need to analyze
your options. In this article we're going to compare the two most popular
solutions at the moment, Nagios and Prometheus. Zabbix is similar in
architecture and features to Nagios, so for the first iteration we're going to
skip it.
!!! note "TL;DR: Prometheus is better, but it needs more effort."
    Nagios is suitable for basic monitoring of small and/or static systems where
    blackbox probing is sufficient.
    If you want to do whitebox monitoring, or have a dynamic or cloud based
    environment, then Prometheus is a good choice.
# Nagios
[Nagios](https://www.nagios.org/) is an industry leader in IT infrastructure
monitoring. It has four different products to choose from:
* Nagios XI: Is an enterprise-ready server and network monitoring system that
    supplies data to track app or network infrastructure health, performance,
    availability, of the components, protocols, and services. It has
    a user-friendly interface that allows UI configuration, customized
    visualizations, and alert preferences.
* Nagios Log Server: It's used for log management and analysis of user
    scenarios. It has the ability to correlate logged events across different
    services and servers in real time, which helps with the investigation of
    incidents and the performance of root cause analysis.
    Because Nagios Log Server’s design is specifically for network security and
    audits, it lets users generate alerts for suspicious operations and
    commands. Log Server retains historical data from all events, supplying
    organizations with everything they need to pass a security audit.
* Nagios Network Analyzer: It's a tool for collecting and displaying either
    metrics or extra information about an application network. It identifies
    which IPs are communicating with the application servers and what requests
    they’re sending. The Network Analyzer maintains a record of all server
    traffic, including who connected a specific server, to a specific port and
    the specific request.
    This helps plan out server and network capacity, plus understand various
    kinds of security breaches likes unauthorized access, data leaks, DDoS, and
    viruses or malwares on servers.
* Nagios Fusion: is a compilation of the three tools Nagios offers. It provides
    a complete solution that assists businesses in satisfying any and all of
    their monitoring requirements. Its design is for scalability and for
    visibility of the application and all of its dependencies.
# Prometheus
[Prometheus](prometheus.md) is a free software application used for event
monitoring and alerting. It records real-time metrics in a time series database
(allowing for high dimensionality) built using a HTTP pull model, with flexible
queries and real-time alerting. The project is written in Go and licensed under
the Apache 2 License, with source code available on GitHub, and is a graduated
project of the Cloud Native Computing Foundation, along with Kubernetes and
Envoy.
At the core of the Prometheus monitoring system is the main server, which
ingests samples from monitoring targets. A target is any application that
exposes metrics according to the open specification understood by Prometheus.
Since Prometheus pulls data, rather than expecting targets to actively push
stats into the monitoring system, it supports a variety of service discovery
integrations, like that with Kubernetes, to immediately adapt to changes in
the set of targets.
The second core component is the Alertmanager, implementing the idea of time
series based alerting. It intelligently removes duplicate alerts sent by
Prometheus servers, groups the alerts into informative notifications, and
dispatches them to a variety of integrations, like those with PagerDuty and
Slack. It also handles silencing of selected alerts and advanced routing
configurations for notifications.
There are several additional Prometheus components, such as client libraries
for different programming languages, and a growing number of exporters.
Exporters are small programs that provide Prometheus compatible metrics from
systems that are not natively instrumented.
# Comparison
For each dimension we'll check how each solution meets the criteria. An
aggregation of all the results can be found in the [summary](#summary).
## Open source
Only the Nagios Core is [open sourced](https://en.wikipedia.org/wiki/Nagios), it
provides basic monitoring but it's enhanced by [community
contributions](https://exchange.nagios.org/). It's also the base of the rest
solutions, which are proprietary.
Prometheus is completely open source under the Apache 2.0 license.
## Community
In Nagios, only the Nagios Core is an open-source tool. The rest are proprietary, so
there is no community behind them.
Community contributions to Nagios are gathered in the [Nagios
Exchange](https://exchange.nagios.org/), it's hard to get other activity
statistics than the overall number of contributions, but there are more than 850
addons, 4.5k plugins and 300 documentation contributions.
Overall metrics (2021-02-22):
| Metric        | [Nagios Core](https://github.com/NagiosEnterprises/nagioscore) | [Prometheus](https://github.com/prometheus/prometheus) |
| ---           | ---         | ---        |
| Stars         | 932         | 35.4k      |
| Forks         | 341         | 5.7k       |
| Watch         | 121         | 1.2k       |
| Commits       | 3.4k        | 8.5k       |
| Open Issues   | 195         | 290        |
| Closed Issues | 455         | 3.5k       |
| Open PR       | 9           | 116        |
| Closed PR     | 155         | 4.5k       |
Last month metrics (2021-02-22):
| Metric        | [Nagios Core](https://github.com/NagiosEnterprises/nagioscore/pulse/monthly) | [Prometheus](https://github.com/prometheus/prometheus/pulse/monthly) |
| ---           | ---         | ---        |
| Active PR     | 1           | 80         |
| Active Issues | 3           | 64         |
| Commits       | 0           | 74         |
| Authors       | 0           | 35         |
We can see that Prometheus in comparison with Nagios Core is:
* More popular in terms of community contributions.
* More maintained.
* Growing more.
* Development is more distributed.
* Manages the issues collaboratively.
This comparison is biased though, because Nagios comes from a time where GitHub
and Git (and Youtube!) did not exist, and the communities formed around
different sites.
Also, given that Nagios has almost 20 years of existence, and that it forked
from a previous monitoring project (NetSaint), the low number contributions
indicate a stable and mature product, whereas the high numbers for Prometheus
are indicators of a young, still in development product.
Keep in mind that this comparison only analyzes the core, it doesn't take into
account the metrics of the community contributions, as it is not easy to
aggregate their statistics.
Which makes Prometheus one of the biggest open-source projects in existence. It
actually has hundreds of contributors maintaining it. The tool continues to be
up-to-date to contemporary and popular apps, extending its list of exporters and
responding to requests.
On [16 January
2014](https://en.wikipedia.org/wiki/Nagios#2014_controversy_over_plugins_website),
Nagios Enterprises redirected the nagios-plugins.org domain to a web server
controlled by Nagios Enterprises without explicitly notifying the Nagios Plugins
community team the consequences of their actions. Nagios Enterprises
replaced the nagios-plugins team with a group of new, different members. The
community team members who were replaced continued their work under the name
Monitoring Plugins along with a new website with the new domain of
monitoring-plugins.org. Which is a nasty move against the community.
## Configuration and usage
Neither solution is easy to configure, you need to invest time in them.
Nagios is easier to use for non technical users though.
## Visualizations
The graphs and dashboards Prometheus provides don't meet today's needs. As
a result, users resort to other visualization tools to display metrics collected
by Prometheus, often Grafana.
Nagios comes with a set of dashboards that fit the requirements of monitoring
networks and infrastructure components. Yet, it still lacks graphs for more
applicative-related issues.
Personally I find Grafana dashboards more beautiful and easier to change. It
also has a massive community behind providing customizable dashboards for free.
## Installation
Nagios comes as a downloadable bundle with dedicated packages for every product
with Windows or Linux distributions. After downloading and installing the tool,
a set of first-time configurations is required. Once you’ve installed the Nagios
agents, data should start streaming into Nagios and its generic dashboards.
Prometheus deployment is done through Docker containers that can spin up on
every machine type, or through pre-compiled or self-compiled binaries.
There are community maintained ansible roles for both solutions, doing a quick
search I've found a Prometheus one that it's more maintained.
For Kubernetes installation, I've only found helm charts for Prometheus.
## Kubernetes integration
Prometheus, as Kubernetes are leading projects of the [Cloud Native Computing