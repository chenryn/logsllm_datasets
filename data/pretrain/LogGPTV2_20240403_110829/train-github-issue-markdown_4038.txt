There's a strange bug that is causing segfaults and other behaviour in Julia
0.4 that's being triggered in ApproxFun. Sorry I haven't been able to narrow
it down further but I reduced it to the following, where `S.op` is bizarrely a
`DataType` instead of an instance of the type:
    Pkg.checkout("ApproxFun","development")
    using ApproxFun
    import ApproxFun: SpaceOperator
    m=MappedSpace(Ray(),Ultraspherical{1}())    
    sp=MappedSpace(Ray(),JacobiWeight(0.,-1.,Ultraspherical{1}()))
    C=Conversion(m.space,sp.space)
    S=SpaceOperator(C,m,sp)
    S.op|>typeof    # returns DataType instead of typeof(C)
The definition of `SpaceOperator` doesn't allow `S.op` to be a DataType:
    immutable SpaceOperator{T,O<:Operator,S<:FunctionSpace,V<:FunctionSpace} <: BandedOperator{T}
        op::O
        domainspace::S
        rangespace::V
    end
I believe the bug is triggered by an error in a Base.convert overrides, but
even so, it shouldn't propagate like this.