title:Catching Transparent Phish: Analyzing and Detecting MITM Phishing
Toolkits
author:Brian Kondracki and
Babak Amin Azad and
Oleksii Starov and
Nick Nikiforakis
Catching Transparent Phish:
Analyzing and Detecting MITM Phishing Toolkits
Brian Kondracki
Stony Brook University
PI:EMAIL
Oleksii Starov
Palo Alto Networks
PI:EMAIL
Babak Amin Azad
Stony Brook University
PI:EMAIL
Nick Nikiforakis
Stony Brook University
PI:EMAIL
ABSTRACT
For over a decade, phishing toolkits have been helping attackers
automate and streamline their phishing campaigns. Man-in-the-
Middle (MITM) phishing toolkits are the latest evolution in this
space, where toolkits act as malicious reverse proxy servers of
online services, mirroring live content to users while extracting cre-
dentials and session cookies in transit. These tools further reduce
the work required by attackers, automate the harvesting of 2FA-
authenticated sessions, and substantially increase the believability
of phishing web pages.
In this paper, we present the first analysis of MITM phishing
toolkits used in the wild. By analyzing and experimenting with
these toolkits, we identify intrinsic network-level properties that
can be used to identify them. Based on these properties, we develop
a machine learning classifier that identifies the presence of such
toolkits in online communications with 99.9% accuracy.
We conduct a large-scale longitudinal study of MITM phishing
toolkits by creating a data-collection framework that monitors and
crawls suspicious URLs from public sources. Using this infrastruc-
ture, we capture data on 1,220 MITM phishing websites over the
course of a year. We discover that MITM phishing toolkits occupy
a blind spot in phishing blocklists, with only 43.7% of domains
and 18.9% of IP addresses associated with MITM phishing toolkits
present on blocklists, leaving unsuspecting users vulnerable to these
attacks. Our results show that our detection scheme is resilient to
the cloaking mechanisms incorporated by these tools, and is able
to detect previously hidden phishing content. Finally, we propose
methods that online services can utilize to fingerprint requests origi-
nating from these toolkits and stop phishing attempts as they occur.
CCS CONCEPTS
• Security and privacy → Phishing.
KEYWORDS
phishing; web security; social engineering
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than ACM
must be honored. Abstracting with credit is permitted. To copy otherwise, or republish,
to post on servers or to redistribute to lists, requires prior specific permission and/or
a fee. Request permissions from permissions@acm.org.
CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea.
© 2021 Association for Computing Machinery.
ACM ISBN 978-1-4503-8454-4/21/11...$15.00
https://doi.org/10.1145/3460120.3484765
ACM Reference Format:
Brian Kondracki, Babak Amin Azad, Oleksii Starov, and Nick Nikiforakis.
2021. Catching Transparent Phish: Analyzing and Detecting MITM Phish-
ing Toolkits. In Proceedings of the 2021 ACM SIGSAC Conference on Com-
puter and Communications Security (CCS ’21), November 15–19, 2021, Vir-
tual Event, Republic of Korea. ACM, New York, NY, USA, 17 pages. https:
//doi.org/10.1145/3460120.3484765
1 INTRODUCTION
The combination of a username and password is the default gate-
keeper to nearly all online services that users interact with, on a
daily basis. It is therefore no surprise that this sensitive informa-
tion is in high demand among malicious actors who go to great
lengths to obtain it, in order to access sensitive information and
act on behalf of victims. One of the most commonly used methods
of acquiring this information is through social engineering, in the
form of phishing. Phishers impersonate trustworthy entities in an
attempt to lure victims into disclosing private information, such as
account credentials and banking information.
Traditionally, phishing websites were hosted entirely on attacker-
owned and compromised web servers where attackers would host
realistic-looking copies of their target websites in hope of convinc-
ing users to disclose their credentials. These credentials were stored
either on the original server or communicated to the attacker (e.g.
via an email) for later abuse [57]. These rudimentary phishing se-
tups required substantial effort on behalf of attackers to clone target
websites, make the necessary content-modification to make these
sites operational, and repeat this entire process to match updates
to the UI of the target website.
To reduce the effort required by attackers to create and serve
phishing content, all-in-one phishing toolkits began to overtake
traditional setups. These toolkits revolutionized how phishing web-
sites are created by automatically fetching static copies of web
pages from targeted websites, serving them to victims, and prevent-
ing detection through cloaking mechanisms—all while requiring
minimal effort by attackers [50]. However, the increasing adoption
of two-factor-authentication (2FA) mechanisms by online services,
and the rapid evolution of web content has increased the need
for phishing toolkits to adopt real-time mechanisms in place of
antiquated static content.
These limitations fueled the proliferation of a new generation
of Man-in-the-Middle (MITM) phishing toolkits [8, 14, 15]. These
next-generation phishing toolkits act as malicious reverse proxy
servers, forwarding requests and responses between the victim
and the target web server, while extracting credentials and session
Session 1A: Cybercrime CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea36cookies in transit. This eliminates the need to create and maintain
realistic phishing web pages (the phishing page is now a “perfect”
copy of the victim website) as well as manually communicating
with the target website to send the user credentials and 2FA codes
to obtain the authenticated session cookie. Moreover, because of
the continuous proxying of requests and responses, these tools
greatly increase the believability of the attack by allowing users to
continue browsing the phishing site after they authenticate, as if
they are truly interacting with the target site.
In this work, we present the first analysis of this new generation
of phishing toolkits. We study 13 versions of popular MITM phish-
ing toolkits and present a methodology to fingerprint them in the
wild, both from the perspective of a user interacting with a phishing
website, as well as the target website receiving login attempts from a
toolkit impersonating a regular user. We produce a globally-diverse
dataset of laboratory MITM phishing toolkit deployments, detailing
their network-level characteristics. Using this dataset, we develop
a machine learning classifier that leverages the network timing dis-
crepancies inherent to reverse proxy servers to detect the presence
of MITM phishing toolkits with 99.9% accuracy. We show that our
classifier is robust to changes made by attackers to thwart finger-
printing attempts, and we demonstrate the ability of our classifier
to detect unseen phishing toolkits. By proposing fingerprinting
methods that uniquely identify MITM phishing toolkits, we en-
hance the ability of web-service providers to pinpoint malicious
login requests and flag them before authentication is completed.
To automate the discovery and analysis of MITM phishing toolk-
its on the web, we create a fingerprinting tool which we call PHOCA.
PHOCA can be directly integrated into current web infrastructure
such as phishing blocklist services to expand their coverage on
MITM phishing toolkits, as well as popular websites to detect ma-
licious requests originating from MITM phishing toolkits.
Using PHOCA, we study the usage trends of these tools in the
wild over the course of a year, discovering 1,220 websites utiliz-
ing MITM phishing toolkits targeting popular services including
Google, Yahoo, Twitter, and Facebook. We observe that, due to their
highly-targeted nature and cloaking mechanisms, MITM phishing
toolkits occupy a blind spot in current phishing blocklists, as only
43.7% of domains and 18.9% of IP addresses associated with the
MITM phishing toolkits we discovered appear on popular block-
lists. Additionally, through our collaboration with Palo Alto Net-
works, we find that enterprise users are targeted by MITM phishing
toolkits, with 260 of our discovered phishing sites receiving 6,403
customer requests over a six-month period.
In summary, the contributions of this paper are as follows:
• We present the first, in-depth study of MITM phishing toolkits.
• We propose a machine learning classifier that utilizes network-
level features to classify phishing websites hosted by such
toolkits with 99.9% accuracy.
• We develop a MITM phishing toolkit fingerprinting frame-
work, called PHOCA, that can collect data on and classify
MITM phishing toolkits on the web.
• We use PHOCA to explore the use of MITM phishing toolkits
in the wild and find that current phishing blocklists do not
effectively report these malicious websites.
• We show how these toolkits can be identified from both the
perspective of the victim user and target web server.
Figure 1: Architecture of MITM phishing toolkits.
2 BACKGROUND
In this section, we provide background information on MITM phish-
ing toolkits and the threat model we consider in this paper.
2.1 Reverse Proxy Servers
Reverse proxy servers are front-end web servers that perform all
direct communication with each web client. They are utilized in a
variety of use cases from load balancing, to providing authentica-
tion for services residing on private networks. These servers act
as “middlemen,” brokering connections between users and backend
web servers. Typically, TLS connections are terminated at reverse
proxy servers, thereby decreasing the complexity of configuring
TLS certificates for website administrators by creating a single con-
figuration point. Some of the most popular reverse proxy servers
today are: Squid [22], Nginx [17], and Apache Traffic Server [2].
2.2 MITM Phishing Toolkits
MITM phishing toolkits function as reverse proxy servers between
victims and one or more target web servers. These toolkits act as
web servers when communicating with victims, and clients when
communicating with target web servers. Figure 1 shows the general
architecture of MITM phishing toolkits.
This design lends itself to increased believability of the phish-
ing attack since the returned web pages are live on the target web
server and thus indistinguishable to the victim. Additionally, unlike
traditional phishing attacks, where believable behavior ceases after
the desired information (e.g. credentials and credit card numbers)
is acquired, these toolkits persist the victim’s browsing session
after authentication is complete. This means users can browse the
target website with their authenticated session through the phish-
ing server. This puts the victim at ease and increases the timespan
that the session cookie is valid, allowing the attacker more time to
conduct their desired malicious actions.
One powerful use of these toolkits is to compromise user ac-
counts that are protected by 2FA mechanisms. When credentials
are provided by victims, they are simply read and saved for later
use before being forwarded to the target web server. The target
web server will then either send a 2FA code to the user through
a separate, pre-established communication channel (such as SMS
text and email) or rely on a mobile app/hardware token to generate
such a code at the client side. In both cases, the client then submits
that code to the phishing toolkit, where it is again forwarded to the
Session 1A: Cybercrime CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea37Table 1: Comparison of network-level to application-level fingerprint-
ing in response to popular cloaking techniques. ✓/✗ indicates the
fingerprinting technique would succeed or fail against the specified
cloaking technique, respectively.
Cloaking Type Application-Layer Network-Layer
URL Obfuscation
User Interaction
Fingerprinting
Bot Activity
IP Address
✓
✓
✓
✓
✗
✗
✗
✗
✗
✗
target web server. When authentication is completed, the session
cookie provided by the target web server is saved by the MITM
phishing toolkit, enabling attackers to now send authenticated re-
quests in the name of the victim.
2.3 Threat Model
Like a typical phishing attack, attackers who utilize a MITM phish-
ing toolkit need to deploy it on a web server and send a link to that
web server to their potential victims.
As Figure 1 shows, victims communicate with the phishing server
over an HTTPS connection. Even though in theory, an HTTPS con-
nection between the user and the phishing server is not necessary,
modern web browsers show a barrage of warnings for websites that
are visited over HTTP, particularly when the user is providing input
in HTML forms. Therefore, all of the MITM phishing toolkits that
we study in this work use valid TLS certificates for their phishing
pages. All requests made to the phishing server are forwarded along
to the target web server, including malformed requests as well as
requests towards non-existing resources. Connections between the
phishing server and target web server are made over an additional
HTTPS connection, where the phishing server takes the role of a
web client. All traffic between the victim and target web server is
available in cleartext to the attacker.
Due to the server-side cloaking mechanisms utilized by MITM
phishing toolkits, only intended victims see malicious content. This
thwarts all content-based phishing detectors, which require access
to the phishing content. We note that organizations with inline
access to network communications can view phishing content tar-
geted at their users. However, due to attackers’ complete control
over the data in the application layer, content-based phishing detec-
tion from this vantage point is still prone to failure. We therefore
must ensure that all methods employed to detect the presence of
these toolkits do not depend upon the integrity of proxied data.
Table 1 demonstrates the effectiveness of network-layer and
application-layer fingerprinting against cloaking techniques used
by attackers today [38, 50, 51]. As application-layer fingerprinting
requires access to phishing content, it is thwarted by all widely-used
cloaking categories. Network-layer fingerprinting, on the other
hand, analyzes features of the network connection and web server
in question, making it effective against all categories except IP-
based cloaking. However, it should be noted that IP-based cloaking
would bypass any form of detection/fingerprinting that originates
from an IP address considered to be suspicious from the point of
view of an attacker.
3 MITM PHISHING TOOLKIT CLASSIFIER
In this section, we first describe the three MITM phishing toolkits
that we evaluate and the functionality that they offer to attackers.
We then provide the details of the training and validation process
used to create a classifier for detecting these toolkits.
3.1 MITM Phishing
Toolkit Identification and Collection
Prior to studying MITM phishing toolkits, it is important to decide
upon a definition that accurately describes their functionality. For
the scope of this paper, we define a MITM phishing toolkit as a