User: 开发一个用于监控服务器性能的脚本，能够在CPU、内存和磁盘使用率超过预设阈值时及时报警
Assistant: 以下为一个Linux服务器性能监控脚本，能够实时监测CPU、内存和磁盘使用率，并在超过预设阈值时发送邮件报警。
使用该脚本需要具有Python3和psutil模块以及邮箱的SMTP服务。
```
#!/usr/bin/env python3

import psutil
import smtplib
import datetime
import sys

# 设置阈值
cpu_threshold = 70.0
memory_threshold = 70.0
disk_threshold = 80.0

# 定义邮件信息
sender = 'example@example.com'
password = 'password'
receivers = ['recipient@example.com']
subject = '服务器性能预警'
smtp_server = 'smtp.example.com'
smtp_port = 465

def send_mail(contents):
    try:
        smtpObj = smtplib.SMTP_SSL(smtp_server, smtp_port)
        smtpObj.login(sender, password)
        message = 'Subject: {}\n\n{}'.format(subject, contents)
        smtpObj.sendmail(sender, receivers, message)
        smtpObj.quit()
    except smtplib.SMTPException:
        print('邮件发送失败')

def get_current_time():
    now = datetime.datetime.now()
    formatted_time = now.strftime('%Y-%m-%d %H:%M:%S')
    return formatted_time

def monitor():
    while True:
        cpu_percent = psutil.cpu_percent(interval=1, percpu=False)
        memory_percent = psutil.virtual_memory().percent
        disk_percent = psutil.disk_usage('/').percent

        if cpu_percent > cpu_threshold:
            contents = 'CPU使用率已经超过{}%, 当前使用率为{}%, 请及时处理！{}'.format(cpu_threshold, cpu_percent, get_current_time())
            send_mail(contents)

        if memory_percent > memory_threshold:
            contents = '内存使用率已经超过{}%, 当前使用率为{}%, 请及时处理！{}'.format(memory_threshold, memory_percent, get_current_time())
            send_mail(contents)

        if disk_percent > disk_threshold:
            contents = '磁盘使用率已经超过{}%, 当前使用率为{}%, 请及时处理！{}'.format(disk_threshold, disk_percent, get_current_time())
            send_mail(contents)

if __name__ == '__main__':
    monitor()
```
该脚本的原理是利用psutil模块获取服务器的性能信息，然后与预设阈值进行对比，超过阈值则发送邮件报警。可以通过修改阈值以适应不同的环境。