### Current Behavior:
If the working directory's name differs from the name of the npm package it
contains, then the generated package-lock.json has a ["packages"][""]["name"]
property in violation of the npm v7 spec for the package-lock.json file per
the docs at https://docs.npmjs.com/cli/v7/configuring-npm/package-lock-json  
for example:
    {
      "name": "impact-api",
      "version": "2.27.0",
      "lockfileVersion": 2,
      "requires": true,
      "packages": {
        "": {
          "name": "impact-api",
          "version": "2.27.0",
          "license": "UNLICENSED",
          "dependencies": {
    ...
### Expected Behavior:
The generated package-lock.json file should not have a "name" property under
["packages"][""]  
for example:
    {
      "name": "impact-api",
      "version": "2.27.0",
      "lockfileVersion": 2,
      "requires": true,
      "packages": {
        "": {
          "version": "2.27.0",
          "license": "UNLICENSED",
          "dependencies": {
    ...
### Steps To Reproduce:
  1. clone an npm project/package e.g. from GitHub into a filesystem directory whose `name` differs from the name of the npm package
  2. remove package-lock.json and the ./node_modules directory if they exist
  3. Run `npm i`
  4. The generated package-lock.json contains an errant ["packages"][""]["name"] property in violation of the npm v7 spec for the package-lock.json file per the docs at https://docs.npmjs.com/cli/v7/configuring-npm/package-lock-json
### Environment:
  * OS: macOS Big Sur Version 11.1
  * Node: 14.16.0
  * npm: 7.6.0