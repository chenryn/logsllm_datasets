## 产生提交    > git commit -am 'random'    [master 7752df4] random     1 file changed, 4 insertions(+)    
## 查看提交历史    > git log --oneline --graph    * 7752df4 (HEAD -> master) random    * 0825c0b readme    * 7b6ea30 (origin/master) Add a new endpoint to return timestamp    ...    
## 查看提交细节    > git show    commit f59a4084e3a2c620bdec49960371f8cc93b86825 (HEAD -> master)    Author: Jason Ge     Date:   Tue Oct 15 11:55:06 2019        random    diff --git a/index.js b/index.js    index 986fcd8..06695f6 100644    --- a/index.js    +++ b/index.js    @@ -6,6 +6,10 @@ app.get('/timestamp', function (req, res) {       res.send('' + Date.now())     })    +app.get('/getRandom', function (req, res) {    +  res.send('' + Math.random())    +})    +     app.get('/', function (req, res) {       res.send('hello world')     })B1 的 Commit Message也很简陋，因为当前的关键任务是先把功能运行起来。现在，我的提交链上有 A1 和 B1两个提交了。![](Images/5be8fd1461341a40b235f959fa429992.png)savepage-src="https://static001.geekbang.org/resource/image/74/94/747ab78ca16aefc1f4a74a904014ae94.png"}图 2 提交链状态第 2 步slate-object="mark"}接下来，我需要进行需求 B 的进一步开发：在 README 文件中给这个新的endpoint 添加说明。    > git diff    diff --git a/README.md b/README.md    index 789cfa9..7b2b6af 100644    --- a/README.md    +++ b/README.md    @@ -1 +1,3 @@     
## This project is for demoing git    +    +You can visit endpoint getRandom to get a random real number.我认为这个改动是 B1 的一部分，所以我用 git commit \--amend 把它添加到B1 中。     
## 添加改动到 B1    > git add README.md    > git commit --amend    [master 27c4d40] random     Date: Tue Oct 15 11:55:06 2019 +0800     2 files changed, 6 insertions(+)    
## 查看提交历史    > git log --oneline --graph    * 27c4d40 (HEAD -> master) random    * 0825c0b readme    * 7b6ea30 (origin/master) Add a new endpoint to return timestamp现在，我的提交链上还是 A1 和 B1'两个提交。这里的 B1'是为了区别之前的B1，B1仍然存在代码仓中，不过是不再使用了而已。![](Images/bdc21cca948baa0fc6cf07afe740ae64.png)savepage-src="https://static001.geekbang.org/resource/image/25/37/2581e07273218b464b463cf3243a3c37.png"}图 3 提交链状态第 3 步slate-object="mark"}阶段 3：拆分需求 B 的代码，把 B1'提交检查系统这时，我觉得 B1'的功能实现部分，也就是 index.js的改动部分，可以推送到 origin/master了。 不过，文档部分也就是 README.md文件的改动，还不够好，而且功能实现和文档应该分成两个原子性提交。于是，我将B1'拆分为 B1'' 和 B2 两部分。    
## 将 B1'拆分    > git reset HEAD^    Unstaged changes after reset:    M  README.md   
## 这个将是 B2 的内容    M  index.js    
## 这个将是 B1''的内容    > git status    On branch master    Your branch is ahead of 'origin/master' by 1 commit.      (use "git push" to publish your local commits)    Changes not staged for commit:      (use "git add ..." to update what will be committed)      (use "git checkout -- ..." to discard changes in working directory)      modified:   README.md      modified:   index.js    no changes added to commit (use "git add" and/or "git commit -a")    > git add index.js    > git commit   
## 这里我认真填写 B1''的 Commit Message    > git add README.md    > git commit   