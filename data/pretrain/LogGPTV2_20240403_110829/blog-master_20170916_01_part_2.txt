  order_type int2   -- 报价类别(限价、市价等)    
);    
```    
卖方报价，为了提高并发度，每个股票代码一张表：    
```    
create table sell_000001 (  -- 每个股票代码一个表    
  uid int,          -- 用户ID    
  bucket int,       -- 报价数量    
  price numeric,    -- 报价    
  ts timestamp,     -- 时间    
  order_type int2   -- 报价类别(限价、市价等)    
);    
```    
撮合：    
```    
do language plpgsql $$    
declare    
  声明 游标1 buy order by ts    
  声明 游标2 sell order by ts    
begin    
  loop 游标1    
    loop 游标2    
      逻辑    
      更新、删除 复合条件的 游标1、游标2 的current tuple.    
      符合条件后退出loop游标2（例如该笔BUY已撮合完成）    
    end loop;    
    符合条件后退出loop游标1（例如sell游标已没有数据）    
  end loop;    
end;    
$$;    
```    
每只股票的交易量也是惊人的，每分钟交易百万笔是很常见的，要做好撮合系统，还需要继续探索和良好的设计，加油PostgreSQL，你一定能搞定的，有空闲时间会继续思考这个场景，非常有意思。  
![pic](20170916_01_pic_002.jpg)    
## 参考    
https://baike.baidu.com/item/%E6%92%AE%E5%90%88%E6%88%90%E4%BA%A4%E4%BB%B7    
https://www.zhihu.com/question/24118706    
http://olivierch.github.io/openBarter/    
https://api.pgxn.org/src/openbarter/openbarter-0.8.2/doc/doc-ob.pdf    
https://api.pgxn.org/src/openbarter/openbarter-0.7.0/doc/barterUtopia.pdf    
图式搜索算法亦可应用在此，你需要有一个系统存储了对象与对象之间的交换差价，用图式搜索找到两个对象的最低成本路径：   
http://pgrouting.org/   
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")