# 八、AKS 中基于角色的访问控制
到目前为止，您一直在使用一种形式的访问**Azure Kubernetes Service**(**AKS**)的方式，该方式为您提供了创建、读取、更新和删除集群中所有对象的权限。这对测试和开发非常有用，但不建议在生产集群上使用。在生产集群上，建议利用 Kubernetes 中的**基于角色的访问控制** ( **RBAC** )只授予用户有限的一组权限。
在本章中，您将更深入地探索 Kubernetes·RBAC。你将在 Kubernetes 被介绍 RBAC 的概念。然后，您将在 Kubernetes 中配置 RBAC，并将其与 **Azure 活动目录** ( **Azure AD** )集成。
本章将涵盖以下主题:
*   RBC 在 Kubernetes
*   在您的 AKS 集群中启用 Azure AD 集成
*   在 Azure AD 中创建用户和组
*   在 AKS 中配置 RBAC
*   Verifying RBAC for a user
    #### 注意
    要在 RBAC 完成该示例，您需要具有全局管理员权限的 Azure AD 实例的访问权限。
让我们从解释 RBAC 开始这一章。
## RBAC 在 Kubernetes 解释道
在生产系统中，您需要允许不同的用户以不同的级别访问某些资源；这就是著名的 **RBAC** 。建立 RBAC 的好处是，它不仅可以防止意外删除关键资源，而且还是一项重要的安全功能，将对群集的完全访问权限限制在真正需要的角色。在启用 RBAC 的群集上，用户只能访问和修改他们拥有权限的资源。
到目前为止，使用 Cloud Shell，您一直充当*根*，这允许您在集群中做任何事情和所有事情。对于生产用例，根访问是危险的，应该尽可能地加以限制。使用**最低权限原则** ( **PoLP** )登录任何计算机系统是一种普遍接受的最佳实践。这既防止了对安全数据的访问，也防止了通过删除关键资源而导致的意外停机。22%到 29%的数据丢失都是人为错误造成的。你不想成为统计数据的一部分。
Kubernetes 开发人员意识到这是一个问题，并在 Kubernetes 中添加了 RBAC 以及服务角色的概念来控制对集群的访问。Kubernetes·RBAC 有三个重要的概念:
*   **角色**:角色包含一组权限。一个角色默认为**无权限**，每个权限都需要专门调用。权限示例包括**获取**、**观看**、**列表**。该角色还包含这些权限被授予哪些资源。资源可以是所有 pod、部署等，也可以是特定对象(如 **pod/mypod** )。
*   **主体**:主体或者是人，或者是被分配了角色的服务账户。在与 Azure AD 集成的 AKS 集群中，这些主体可以是 Azure AD 用户或组。
*   **角色绑定**:角色绑定将主体链接到某个命名空间中的角色，或者在集群角色绑定的情况下，链接到整个集群。
需要理解的一个重要概念是，当与 AKS 接口时，有两层 RBAC: Azure RBAC 和 Kubernetes RBAC，如图*图 8.1* 所示。Azure RBAC 处理赋予人们在 Azure 中进行更改的角色，例如创建、修改和删除集群。Kubernetes RBAC 处理对集群中资源的访问权限。两者都是独立的控制平面，但可以使用源自 Azure AD 的相同用户和组。
![A representation of the two RBAC planes, Azure and Kubernetes](img/B17338_08_01.jpg)
图 8.1:两种不同的 RBAC 飞机，Azure 和 Kubernetes
Kubernetes 的 RBAC 是一个可选功能。AKS 中的默认设置是创建启用了 RBAC 的集群。但是，默认情况下，群集不与 Azure AD 集成。这意味着默认情况下，您不能将 Kubernetes 权限授予 Azure AD 用户。在接下来的部分中，您将在集群中启用 Azure AD 集成。
## 在您的 AKS 集群中启用 Azure AD 集成
在本节中，您将更新您现有的集群，以包括 Azure AD 集成。您将使用 Azure 门户实现这一点:
#### 注意
一旦群集与 Azure AD 集成，就不能禁用此功能。
1.  To start, you will need an Azure AD group. You will later give admin privileges for your AKS cluster to this group. To create this group, search for **azure active directory** in the Azure search bar:
    ![Searching for Azure Active Directory in the Azure search bar](img/B17338_08_02.jpg)
    图 8.2:在 azure 搜索栏中搜索 Azure 活动目录
2.  In the left pane, select Groups, which will bring you to the All groups screen. Click + New Group, as shown in *Figure 8.3*:
    ![In the group pane, clicking the +New group button to create a new Azure AD group](img/B17338_08_03.jpg)
    图 8.3:创建一个新的 Azure AD 组
3.  On the resulting page, create a security group and give it a name and description. Select your user as the owner and a member of this group. Click the Create button on the screen:
    ![Providing necessary information to create the Azure AD group](img/B17338_08_04.jpg)
    图 8.4:提供创建 Azure AD 组的细节
4.  Now that this group is created, search for your Azure cluster in the Azure search bar to open the AKS pane:
    ![Searching for the cluster using the Azure search bar](img/B17338_08_05.jpg)
    图 8.5:在 Azure 搜索栏中搜索集群
5.  在 AKS 窗格中，选择设置下的集群配置。在此窗格中，您将能够打开 AKS 管理的 Azure 活动目录。启用该功能并选择您之前创建的 Azure 广告组，将其设置为管理员 Azure 广告组。最后点击命令栏中的保存按钮，如图*图 8.6* :
![Enabling AKS-managed Azure Active Directory and clicking the Save button](img/B17338_08_06.jpg)
图 8.6:启用 AKS 管理的 Azure 活动目录并单击保存按钮
这使得 Azure AD 能够在您的 AKS 集群上集成 RBAC。在下一节中，您将创建一个新用户和一个新组，这些用户和组将在下一节中用于在 Kubernetes 中设置和测试 RBAC。
## 在 Azure AD 中创建用户和组
在本节中，您将在 Azure AD 中创建新用户和新组。您将在本章后面使用它们来为您的 AKS 集群分配权限:
#### 注意
您需要 Azure AD 中的*用户管理员角色*才能创建用户和组。
1.  To start with, search for **azure active directory** in the Azure search bar:
    ![Searching for Azure Active Directory in the Azure search bar](img/B17338_08_07.jpg)
    图 8.7:在搜索栏中搜索 azure 活动目录
2.  Click on All users in the left pane. Then select + New user to create a new user:
    ![Clicking the +New user button to create a new user](img/B17338_08_08.jpg)
    图 8.8:点击+新用户创建新用户
3.  Provide the information about the user, including the username. Make sure to note down the password, as this will be required to sign in:
    ![Providing the necessary details to create a new user](img/B17338_08_09.jpg)
    图 8.9:提供用户详细信息
4.  Once the user is created, go back to the Azure AD pane and select Groups. Then click the + New group button to create a new group:
    ![Clicking the + New group button to create a new group](img/B17338_08_10.jpg)
    图 8.10:点击+新建组创建新组
5.  Create a new security group. Call the group **handson aks users** and add **Tim** as a member of the group. Then hit the Create button at the bottom:
    ![Providing necessary details to create a new group](img/B17338_08_11.jpg)
    图 8.11:提供组类型、组名称和组描述
6.  You have now created a new user and a new group. Next, you'll make that user a cluster user in AKS RBAC. This enables them to use the Azure CLI to get access to the cluster. To do that, search for your cluster in the Azure search bar:
    ![Searching for the cluster using the Azure search bar](img/B17338_08_12.jpg)
    图 8.12:在 Azure 搜索栏中搜索集群
7.  In the cluster pane, click on Access control (IAM) and then click on the + Add button to add a new role assignment. Select Azure Kubernetes Service Cluster User Role and assign that to the new user you just created:
    ![Assigning the cluster user role to the new user we just created](img/B17338_08_13.jpg)
    图 8.13:将集群用户角色分配给您创建的新用户
8.  As you will also be using Cloud Shell with the new user, you will need to give them contributor access to the Cloud Shell storage account. First, search for **storage** in the Azure search bar:
    ![Searching for storage accounts using the Azure search bar](img/B17338_08_14.jpg)
    图 8.14:在 Azure 搜索栏中搜索存储
9.  There should be a storage account under Resource group with a name that starts with cloud-shell-storage. Click on the resource group:
    ![Selecting the resource group of the storage account](img/B17338_08_15.jpg)
    图 8.15:选择资源组
10.  进入访问控制，点击+添加按钮。将存储帐户贡献者角色授予您新创建的用户:
![Assigning the Contributor role to the newly created user storage account](img/B17338_08_16.jpg)
图 8.16:为新用户分配存储帐户贡献者角色
这已经结束了新用户和组的创建，并给予该用户访问 AKS 的权限。在下一节中，您将在 AKS 集群中为该用户和组配置 RBAC。
## 在 AKS 中配置 RBAC
为了在 AKS 中演示 RBAC，您将创建两个名称空间，并在每个名称空间中部署 Azure 投票应用。您将授予组集群范围内对 pods 的只读访问权限，并且您将授予用户仅在一个命名空间中删除 pods 的能力。实际上，您需要在 Kubernetes 中创建以下对象:
*   **集群角色**授予只读访问权限
*   **集群角色绑定**授予该组对此角色的访问权限
*   **角色**在**删除-访问**命名空间中授予删除权限
*   **角色绑定**授予用户访问该角色的权限
![A flowchart showing the demo you’ll be building. A user is part of a group. The group has a clusterrole to read pods. The user has an additional namespace scoped role allowing them to delete pods](img/B17338_08_17.jpg)
图 8.17:组获得整个集群的只读访问权限，用户获得删除访问命名空间的删除权限
让我们在您的集群上设置不同的角色:
1.  To start our example, you will need to retrieve the ID of the group. The following commands will retrieve the group ID:
    az ad group show-g ' handson AK 用户'
    -查询 objectId -o tsv
    这将显示您的群标识。请记下这一点，因为您将在接下来的步骤中需要它:
    ![Output displaying the group ID](img/B17338_08_18.jpg)
    图 8.18:获取组标识
2.  In Kubernetes, you will create two namespaces for this example:
    kubectl 创建 ns 禁止访问
    kubectl 创建 ns 删除-访问
3.  You will also deploy the **azure-vote** application in both namespaces:
    kube CTL create-f azure-vote . YAML-n 禁止访问
    kube CTL create-f azure-vote . YAML-n delete-access
4.  Next, you will create the **ClusterRole** object. This is provided in the **clusterRole.yaml** file:
    1 版本:rbac.authorization.k8s.io/v1
    2 子代:群集角色
    3 元数据:
    4 名称:只读
    5 条规则:
    6 - apiGroups: [""]
    7 资源:[“pods”]
    8 个动词:[“获取”、“观察”、“列表”]
    让我们仔细看看这个文件: