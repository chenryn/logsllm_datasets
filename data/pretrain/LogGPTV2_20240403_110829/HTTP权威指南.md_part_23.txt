对象存储器
客户端 Web服务器
请求URI：/specials/saw-blade.gif 服务器资源：/usr/local/httpd/files/specials/saw-blade.gif
图5-8 将请求URI映射为本地Web服务器上的资源 120
在配置文件httpd.conf中添加一个DocumentRoot行就可以为Apache Web服务器
设置文档的根目录了：
DocumentRoot /usr/local/httpd/files
服务器要注意，不能让相对URL退到docroot之外，将文件系统的其余部分暴露出
来。比如，大多数成熟的Web服务器都不允许这样的URI看到Joe的五金商店文档
根目录上一级的文件：
http://www.joes-hardware.com/../
1. 虚拟托管的docroot
虚拟托管的Web服务器会在同一台Web服务器上提供多个Web站点，每个站点在
服务器上都有自己独有的文档根目录。虚拟托管Web服务器会根据URI或Host首
Web服务器 ｜ 127
部的IP地址或主机名来识别要使用的正确文档根目录。通过这种方式，即使请求
URI完全相同，托管在同一Web服务器上的两个Web站点也可以拥有完全不同的
内容了。
图5-9中的服务器托管了两个站点：www.joes-hardware.com和www.marys-antiques.
com。服务器可以通过HTTP的Host首部，或根据不同的IP地址来区分不同的
Web站点。
• 当请求A到达时，服务器会获取文件/docs/joe/index.html。
• 当请求B到达时，服务器会获取文件/docs/mary/index.html。
请求报文A
GET /index.html HTTP/1.0
Host: www.joes-hardware.com
因特网 /docs/joe /docs/mary
客户端 GET /index.html HTTP/1.0 www.joes-hardware.com
Host: www.marys-antiques.com www.marys-antiques.com
请求报文B
图5-9 虚拟托管的请求会使用不同的文档根目录
对大多数Web服务器来说，配置虚拟托管的文档根目录是很简单的。对常见的
Apache Web服务器来说，需要为每个虚拟Web站点配置一个VirtualHost块，而且
每个虚拟服务器都要包含DocumentRoot（例5-3）。
例5-3 Apache Web服务器虚拟主机的docroot配置
ServerName www.joes-hardware.com
121 DocumentRoot /docs/joe
TransferLog /logs/joe.access_log
ErrorLog /logs/joe.error_log
ServerName www.marys-antiques.com
DocumentRoot /docs/mary
TransferLog /logs/mary.access_log
ErrorLog /logs/mary.error_log
...
更多与虚拟托管有关的信息可以参考18.2节。
128 ｜ 第5章
2. 用户的主目录docroot
Docroot的另一种常见应用是在Web服务器上为人们提供私有的Web站点。通常会
把那些以斜杠和波浪号（/~）开始，后面跟着用户名的URI映射为此用户的私有文
档根目录。私有docroot通常都是用户主目录下那个名为public_html的目录，但也
可将其配置为其他值（参见图5-10）。
请求报文A
GET /~bob/index.html HTTP/1.0
因特网 /home/bob/public_html
/home/betty/public_html
客户端 www.joes-hardware.com
GET /~betty/index.html HTTP/1.0 www.marys-antiques.com
请求报文B
图5-10 不同用户有不同的docroot
5.7.2 目录列表
Web服务器可以接收对目录URL的请求，其路径可以解析为一个目录，而不是文
件。我们可以对大多数Web服务器进行配置，使其在客户端请求目录URL时采取
不同的动作。
• 返回一个错误。
• 不返回目录，返回一个特殊的默认“索引文件”。
• 扫描目录，返回一个包含目录内容的HTML页面。
大多数Web服务器都会去查找目录中一个名为index.html或index.htm的文件来代
表此目录。如果用户请求的是一个目录的URL，而且这个目录中有一个名为index. 122
html（或index.htm）的文件，服务器就会返回那个文件的内容。
在Apache Web服务器上，可以用配置指令DirectoryIndex来配置要作为默认目
录文件使用的文件名集合。指令DirectoryIndex会按照优先顺序列出所有可以
作为目录索引文件使用的文件名。下列配置行会使Apache在收到一个目录URL请
求时，在目录中搜索命令中列出来的任意一个文件：
DirectoryIndex index.html index.htm home.html home.htm index.cgi
如果用户请求目录URI时，没有提供默认的索引文件，而且没有禁止使用目录索
引，很多Web服务器都会自动返回一个HTML文件，此文件中会列出那个目录里
Web服务器 ｜ 129
的文件名，以及每个文件的大小和修改日期，还包括到每个文件的URI链接。使用
这个文件列表可能会很方便，但有些好事者也可以通过它在Web服务器上找到一些
通常找不到的东西。
可以通过以下Apache指令禁止自动生成目录索引文件：
Options -Indexes
5.7.3 动态内容资源的映射
Web服务器还可以将URI映射为动态资源——也就是说，映射到按需动态生成内容
的程序上去（参见图5-11）。实际上，有一大类名为应用程序服务器的Web服务器
会将Web服务器连接到复杂的后端应用程序上去。Web服务器要能够分辨出资源
什么时候是动态的，动态内容生成程序位于何处，以及如何运行那个程序。大多数
Web服务器都提供了一些基本的机制以识别和映射动态资源。
文件系统 资源
图片文件
文本文件
因特网
网络摄像机网关
客户端 服务器
股票交易网关
房产搜索网关
11000101101
电子商务网关
图5-11 Web服务器可以提供静态资源和动态资源
Apache允许用户将URI路径名组件映射为可执行文件目录。服务器收到一条带有
可执行路径组件的对URI的请求时，会试着去执行相应服务器目录中的程序。例
如，下列Apache配置指令就表明所有路径以/cgi-bin/开头的URI都应该执行在目
录/usr/local/etc/httpd/cgi-programs/中找到的相应文件：
130 ｜ 第5章
ScriptAlias /cgi-bin/ /usr/local/etc/httpd/cgi-programs/
Apache还允许用户用一个特殊的文件扩展名来标识可执行文件。通过这种方式就可
以将可执行脚本放在任意目录中了。下面的Apache配置指令说明要执行所有以.cgi
结尾的Web资源：
AddHandler cgi-script .cgi
CGI是早期出现的一种简单、流行的服务端应用程序执行接口。现代的应用程序服
务器都有更强大更有效的服务端动态内容支持机制，包括微软的动态服务器页面
（Active Server Page）和Java servlet。 123
5.7.4 服务器端包含项
很多Web服务器还提供了对服务器端包含项（SSI）的支持。如果某个资源被标识
为存在服务器端包含项，服务器就会在将其发送给客户端之前对资源内容进行处理。
要对内容进行扫描，以查找（通常包含在特定HTML注释中的）特定的模板，这些
模板可以是变量名，也可以是嵌入式脚本。可以用变量的值或可执行脚本的输出来
取代特定的模板。这是创建动态内容的一种简便方式。
5.7.5 访问控制
Web服务器还可以为特定资源进行访问控制。有请求到达，要访问受控资源时，
Web服务器可以根据客户端的IP地址进行访问控制，也可以要求输入密码来访问
资源。
更多与HTTP认证有关的信息请参见第12章。 124
5.8 第五步——构建响应
一旦Web服务器识别出了资源，就执行请求方法中描述的动作，并返回响应报文。
响应报文中包含有响应状态码、响应首部，如果生成了响应主体的话，还包括响应
主体。3.4节详细介绍了HTTP响应代码。
5.8.1 响应实体
如果事务处理产生了响应主体，就将内容放在响应报文中回送过去。如果有响应主
体的话，响应报文中通常包括：
• 描述了响应主体MIME类型的Content-Type首部；
Web服务器 ｜ 131
• 描述了响应主体长度的Content-Length首部；
• 实际报文的主体内容。
5.8.2 MIME类型
Web服务器要负责确定响应主体的MIME类型。有很多配置服务器的方法可以将
MIME类型与资源关联起来。
• MIME类型（mime.types）
Web服务器可以用文件的扩展名来说明MIME类型。Web服务器会为每个资源
扫描一个包含了所有扩展名的MIME类型的文件，以确定其MIME类型。这种
基于扩展名的类型相关是最常见的，参见图5-12。
HTTP请求报文中包含命令和URI saw-blade.gif文件
GET /specials/saw-blade.gif HTTP/1.0
Host: www.joes-hardware.com
因特网
HTTP/1.0 200 OK
客户端 www.joes-hardware.com
Content-type: image/gif
Content-length: 8572
服务器的MIME类型表
application/msword doc
application/postscript ai eps ps
application/powerpoint ppt
audio/mpeg mpga mp2
image/gif gif
image/jpeg jpeg jpg jpe
image/tiff tiff tif
text/html html htm
text/plain txt
video/mpeg mpeg mpg mpe
video/quicktime qt mov
video/x-msvideo avi
x-word/x-vrml wrl vrml
125 图5-12 Web服务器用MIME类型文件来设置资源输出的Content-type首部
• 魔法分类（Magic typing）
Apache Web服务器可以扫描每个资源的内容，并将其与一个已知模式表（被称
为魔法文件）进行匹配，以决定每个文件的MIME类型。这样做可能比较慢，
但很方便，尤其是文件没有标准扩展名的时候。
• 显式分类（Explicit typing）
可以对Web服务器进行配置，使其不考虑文件的扩展名或内容，强制特定文件
或目录内容拥有某个MIME类型。
132 ｜ 第5章
• 类型协商
有些Web服务器经过配置，可以以多种文档格式来存储资源。在这种情况下，
可以配置Web服务器，使其可以通过与用户的协商来决定使用哪种格式（及相
关的MIME类型）“最好”。这个问题将在第17章讨论。
还可以通过配置Web服务器，将特定的文件与MIME类型相关联。
5.8.3 重定向
Web服务器有时会返回重定向响应而不是成功的报文。 Web服务器可以将浏览器
重定向到其他地方来执行请求。重定向响应由返回码3XX说明。Location响应首
部包含了内容的新地址或优选地址的URI。重定向可用于下列情况。
• 永久搬离的资源
资源可能已经被移动到了新的位置，或者被重新命名，有了一个新的URL。Web服
务器可以告诉客户端资源已经被重命名了，这样客户端就可以在从新地址获取资源
之前，更新书签之类的信息了。状态码301 Moved Permanently就用于此类重定向。
• 临时搬离的资源
如果资源被临时移走或重命名了，服务器可能希望将客户端重定向到新的位置上
去。但由于重命名是临时的，所以服务器希望客户端将来还可以回头去使用老的
URL，不要对书签进行更新。状态码303 See Other以及状态码307 Temporary
Redirect就用于此类重定向。
• URL增强
服务器通常用重定向来重写URL，往往用于嵌入上下文。当请求到达时，服务
器会生成一个新的包含了嵌入式状态信息的URL，并将用户重定向到这个新的
URL上去。7客户端会跟随这个重定向信息，重新发起请求，但这次的请求会包
含完整的、经过状态增强的URL。这是在事务间维护状态的一种有效方式。状
态码303 See Other和307 Temporary Redirect用于此类重定向。 126
• 负载均衡
如果一个超载的服务器收到一条请求，服务器可以将客户端重定向到一个负载不太
重的服务器上去。状态码303 See Other和307 Temporary Redirect可用于此类重定向。
• 服务器关联
Web服务器上可能会有某些用户的本地信息；服务器可以将客户端重定向到包含