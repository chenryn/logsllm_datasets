    inurl:data filetype:mdb
    intitle:"index of" data
    intitle:"index of" etc
    intitle:"Index of" .sh_history
    intitle:"Index of" .bash_history
    intitle:"index of" passwd
    intitle:"index of" people.lst
    intitle:"index of" pwd.db
    intitle:"index of" etc/shadow
    intitle:"index of" spwd
    intitle:"index of" master.passwd
    intitle:"index of" htpasswd
    inurl:service.pwd
    ```
- **漏洞**
    ```
    目录遍历漏洞
        site:xxx.com intitle:index.of
        site:xxx.com intitle:转到父目录
    配置文件泄露
        site:xxx.com ext:xml | ext:conf | ext:cnf | ext:reg | ext:inf | ext:rdp | ext:cfg | ext:txt | extra | ext:ini
    数据库文件泄露
        site:xxx.com ext:sql | ext:dbf | ext:mdb
    日志文件泄露
        site:xxx.com ext:log
    备份和历史文件
        site:xxx.com ext:bkf | ext:bkp | ext:bak | extld | ext:backup
    SQL错误
        site:xxx.com intext:"sql syntax near" | intext:"syntax error has occurred" | intext:"incorrect syntax near" | intext:"unexpected end of SQL command" | intext:"Warning: mysql_connect()" | intext:"Warning: mysql_query()" | intext:"Warning: pg_connect()"
    公开文件信息
        site:xxx.com ext:doc | ext:docx | extdt | ext:pdf | ext:rtf | ext:sxw | ext:psw | ext:ppt | ext:pptx | ext:pps | ext:csv
    phpinfo()
        site:xxx.com ext:php intitle:phpinfo "published by the PHP Group"
    JIRA
        配置错误的 JIRA 设置  inurl:/UserPickerBrowser.jspa -intitle:Login -intitle:Log
        此查询列出了其 URI 中具有"UserPickerBrowser"的所有 URL,以查找公开而且不需要经过身份验证的所有配置错误的 JIRA 用户选择器功能.
        inurl:/ManageFilters.jspa?filterView=popular AND ( intext:All users OR intext:Shared with the public OR intext:Public )
        此查询列出了所有在其 URI 中具有"Managefilters"并且文本为"Public"的 URL,以便找到所有公开暴露且未经过身份验证的错误配置的 JIRA 过滤器.
        inurl:/ConfigurePortalPages!default.jspa?view=popular
        此查询列出其 URI 中具有"ConfigurePortalPages"的所有 URL,以查找公开公开的所有 JIRA 仪表板.
    ```
    搜参数/接口
    ```
    inurl:.php?id=xx 公司
    inurl:.asp?id=xx 公司
    inurl:.jsp?id=xx 公司
    inurl:.php?id=xx 公司 陕西
    ```
    找文章
    ```
    inurl:csdn.net CVE-2019-3403
    inurl:51cto.com VRRP
    inurl:habr.com powershell
    inurl:exploit-db.com docker
    ```
    工控
    ```
    inurl:/Portal/Portal.mwsl
    intitle:Miniweb Start Page | /CSS/Miniweb.css
    intitle:Rockwell Automation Device Name Uptime
    inurl:dtm.html intitle:1747-L552
    inurl:dtm.html intitle:1747-L551
    inurl:home.htm intitle:1766
    ```
**CSE**
> Google Custom Search(自定义搜索)是基于谷歌的核心搜索技术，对你的搜索引擎进行很多定制
- TikTok : https://cse.google.com/cse?cx=011444696387487602669:aqf7d9w73om
- IFTT : https://cse.google.com/cse?cx=000501358716561852263:xzfiqchwcj8
- Google Album archives : https://cse.google.com/cse?cx=006205189065513216365:vp0ly0owiou
- Social media : https://cse.google.com/cse?cx=016621447308871563343:0p9cd3f8p-k
- LinkedIn : https://cse.google.com/cse?cx=000470283453218169915:hcrzdwsiwrc
- Online bookmark sites : https://cse.google.com/cse?cx=005797772976587943970:3tu7im1-rdg
- Forums : https://cse.google.com/cse?cx=002396771074467716933:gkp6fzl_dv0
---
## Shodan
> Shodan 是目前最为知名的黑客搜索引擎，它是由计算机程序员约翰·马瑟利（John Matherly）于2009年推出的，他在2003年就提出了搜索与 Internet 链接的设备的想法。发展至今已经变成搜索资源最全，搜索性能最强的网络资产搜索引擎。简述下 shodan 的工作原理：通过其强大的爬虫能力每隔一定时间扫描全互联网设备并抓取相应的 banner 信息建立索引，通过这些巨大的数据，你基本可以找到任何你想象得到的连接到互联网的东西。
**官网**
- https://www.shodan.io
- https://beta.shodan.io/ - 和正式版数据量差别较大
> 搜索结果略不满意,会员实际较为鸡肋
> 无论付费用户还是免费用户，都可以使用shodan的搜索功能，只不过付费用户可以获得更多的搜索结果和导出、监控等更多高级功能。
**手册**
- [shodan-manual](https://b404.gitbooks.io/shodan-manual/content/)
- [Shodan Pentesting Guide](https://community.turgensec.com/shodan-pentesting-guide/)
**相关文章**
- [Shodan新手入坑指南](https://www.freebuf.com/sectool/121339.html)
- [How to Discover MongoDB and Elasticsearch Open Databases](https://habr.com/en/post/443132/)
- [Shodan新手入坑指南](https://www.freebuf.com/sectool/121339.html)
- [shodan-manual](https://b404.gitbooks.io/shodan-manual/)
- [Search Engine Improvements](https://blog.shodan.io/search-engine-improvements/)
- [利用shodan搜索公网摄像头](https://mp.weixin.qq.com/s/Ccp2mZdluvlcGKxnC4mTmQ)
**搜索语法合集**
- [jakejarvis/awesome-shodan-queries](https://github.com/jakejarvis/awesome-shodan-queries)
**语法**
- https://www.shodan.io/search/filters
```bash
hostname:       搜索指定的主机或域名,例如 hostname:"google"
port:           搜索指定的端口或服务,例如 port:"21"
country:        搜索指定的国家,例如 country:"CN"
city:           搜索指定的城市,例如 city:"Hefei"
org:            搜索指定的组织或公司,例如 org:"google"
isp:            搜索指定的 ISP 供应商,例如 isp:"China Telecom"
product:        搜索指定的操作系统/软件/平台,例如 product:"Apache httpd"
version:        搜索指定的软件版本,例如 version:"1.6.2"
geo:            搜索指定的地理位置,参数为经纬度,例如 geo:"31.8639, 117.2808"
before/after:   搜索指定收录时间前后的数据,格式为 dd-mm-yy,例如 before:"11-11-15"
net:            搜索指定的 IP 地址或子网,例如 net:"210.45.240.0/24"
http.title:     搜索指定 title 的站点
http.html:      搜索页面包含指定内容的站点
```
**例子**
```bash
misc
Server: uc-httpd 1.0.0 200 OK Country:"JP"
h3c net:"61.191.146.0/24"
country:US vuln:CVE-2014-0160
port:135,139,445 -hash:0                        # 过滤一些主文本标题为空的搜索结果
Hikvision-Webs                                  # 海康威视
http.title:"后台管理"
database
all:"mongodb server information" all:"metrics"  # 开放 Mongodb 数据库
port:27017 -all:"partially" all:"fs.files"      # 有点存货的 Mongodb 数据库
port:"9200" all:"elastic indices"               # 开放 ElasticSearch 数据库
ftp
230 'anonymous@' login ok                       # 开放匿名ftp
vnc
port:5900 screenshot.label:loggedin             # 无认证vnc
rtsp
port:554 has_screenshot:true                    # rtsp 未授权访问
docker
port:"2375" country:"JP" Docker                 # docker-remote-api未授权
ICS
module: s7 port:102                             # S7设备
```
**外部工具/脚本**
- **Shodan cli**
    - [Shodan Command-Line Interface](https://cli.shodan.io/)
- **浏览器插件**
    - [chrome插件](https://chrome.google.com/webstore/detail/shodan/jjalcfnidlmpjhdfepjhjbhnhkbgleap)
    - [firefox插件](https://addons.mozilla.org/en-US/firefox/addon/shodan_io/)
- **Metasploit**
    ```bash
    use auxiliary/gather/shodan_search
    set SHODAN_APIKEY ********************
    set QUERY ****
    use auxiliary/gather/shodan_honeyscore  # 蜜罐检测
    set SHODAN_APIKEY ********************
    set TARGET your_target
    Recon-ng
    keys add shodan_api ********************
    use recon/domains-hosts/shodan_hostname
    show options
    set SOURCE google
    set LIMIT 1
    ```
- Client API
    - [ns3777k/go-shodan](https://github.com/ns3777k/go-shodan) - Shodan API client
    - [shadowscatcher/shodan](https://github.com/shadowscatcher/shodan) - yet another Shodan.io client
- **脚本**
    - [random-robbie/My-Shodan-Scripts](https://github.com/random-robbie/My-Shodan-Scripts)
    - [woj-ciech/LeakLooker](https://github.com/woj-ciech/LeakLooker) - 利用 shodan 寻找开放的数据库/服务
**其他功能**
- [ICS Radar](https://ics-radar.shodan.io/) - ICS Radar 是 Shodan 的工业控制系统（ICS）设备的 3D 地图。
- [Honeypot score](https://honeyscore.shodan.io/) - 这个服务叫 Honeypot or not?，这个服务会把 Honeyscore 归属到一个 IP 地址上，也就是成为蜜罐的可能性。
- [Shodan 2000](https://2000.shodan.io/#/) - Sodan 2000 是一个类似 Tron 的界面，可以随机显示一个主机。
**icon 图标搜索**
- [Weaponizing favicon.ico for BugBounties , OSINT and what not](https://medium.com/@Asm0d3us/weaponizing-favicon-ico-for-bugbounties-osint-and-what-not-ace3c214e139)
- [Shodan的http.favicon.hash语法详解与使用技巧](https://www.cnblogs.com/miaodaren/p/9177379.html)
---
## BinaryEdge
> BinaryEdge 是一家来自瑞士的公司提供的资产搜索引擎，其为企业提供网络安全，工程和数据科学解决方案的评估。它利用机器学习技术收集有关基础设施的信息，并将收集的数据与从提要中获得的数据相关联。功能包括通过将发现结果与安全工具结合后从联网设备和运行于它们的服务中提取数据来提供通知，警报和报告功能。
**官网**
- https://www.binaryedge.io/
**语法**
- https://docs.binaryedge.io/search/
```bash
ip	                # 目标 IP,例如 ip：“ 149.202.178.130/16”
port	            # 端口,例如 port：80
country             # 目标国家/地区,例如国家/地区：FR
ASN                 # 目标的 AS 号，例如asn：1234
type	            # BinaryEdge 模块类型，例如类型：mongodb
product	            # 所寻找的产品名称，例如产品：apache2
ipv6	            # 过滤 ipv6 结果，例如 Ipv6：true 或 ipv6：false
tag	                # 可用标签列表：docs.binaryedge.io/search/#available-tags
```
**例子**
```bash
country:FR port:443                 # SSL from a Specific Organization Name
ip:"149.202.178.130/16" port:80     # CIDR 149.202.178.130/16 and Port 80
"Example Org" type:ssl              # France with Port 443
product:"Dropbear sshd"             # Product Dropbear sshd
```
---
## Censys
> Censys 搜索引擎能够扫描整个互联网，Censys 每天都会扫描 IPv4 地址空间，以搜索所有联网设备并收集相关的信息，并返回一份有关资源（如设备、网站和证书）配置和部署信息的总体报告。
**官网**
- https://www.censys.io
**例子**
```bash
23.0.0.0/8 or 8.8.8.0/24                    # 可以使用 and or not