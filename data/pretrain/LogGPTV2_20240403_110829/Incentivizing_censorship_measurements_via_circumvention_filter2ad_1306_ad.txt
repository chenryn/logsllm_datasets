5 SECURITY AND PRIVACY
CONSIDERATIONS
We now discuss some challenges related to user privacy,
security, and the quality of collected measurements.
Interfering with C-Saw measurements. For any system
that relies on crowdsourced measurements, malicious users
may distort them by false reports [26]. Measurements in
global_DB are also prone to such distortions.
C-Saw aims to address this challenge by (a) rate limit-
ing the creation of automated fake identities from mali-
cious users by requiring them to solve “No CAPTCHA re-
CAPTCHA", a new reCAPTCHA API that uses an advanced
risk analysis engine and adaptive CAPTCHAs [17], before
they can register as a C-Saw client and (b) using a voting
mechanism to limit the impact of a single malicious client on
measurements. The voting process is run by the server_DB.
It assigns each client ci one unit of vote, which it evenly
spreads among all blocked URLs that it reports, i.e., it gives
vi, j,k=1/d vote to each of the d blocked websites, where j
and k are the blocked URL and client AS, respectively. To
establish a confidence criteria for measurements posted in
the global_DB, the server_DB maintains two statistics for
each blocked URL from an AS as estimates of robustness:
(i) sum of votes sj,k and (ii) the total number of clients nj,k
voting for the given URL from an AS. A user may pay less
heed to a measurement with large nj,k and small sj,k (indi-
cating large number of reports per user) or measurements
with small nj,k to mitigate the impact of erroneous reports.
This is partly inspired by the PageRank algorithm [25].
Finally, one can also design schemes, similar to reputation
systems [47, 57], for identifying individual malicious users
or groups based on distinctness in behavioral patterns and
revoke UUIDs of malicious users [54].
Attacks on the server_DB and global_DB. An attacker
may launch a flood attack on the measurement infrastructure
(e.g., the server_DB). To address this challenge, these com-
ponents can be replicated across different cloud providers,
which already provide dynamic scaling and offer DDoS miti-
gation services [2, 9]).
Blocking access to the global_DB. A global_DB with a
well-known domain name can be blocked if the Tor exit
SIGCOMM ’18, August 20–25, 2018, Budapest, Hungary
Aqib Nisar, Aqsa Kashaf, Ihsan Ayyub Qazi, Zartash Afzal Uzmi
(a) Blocked Webpages
(b) Small Unblocked Webpages
(c) Larger Unblocked Webpages
Figure 5: Impact of redundant requests on PLTs for (a) blocked webpages with different types of blocking under the serial ap-
proach and the parallel approach, (b) small unblocked webpages (95 KB) and (c) relatively large unblocked webpages (316 KB).
For these experiments, we launch 100 requests with uniformly distributed inter-arrival times from the interval [1s, 5s].
relay for sending censorship reports lies in the same region
as the censor. This challenge can be addressed by using a
distributed collection service, similar to OONI [14], which
exposes each collector as a Tor Hidden Service and uses them
to post results to the global_DB.
User privacy and resilience to detection. A censor can
snoop on traffic to identify users contributing censorship
measurements to the global_DB. This challenge is addressed
by requiring that all measurement reports are carried over
the Tor network.
6 IMPLEMENTATION
We implement C-Saw as a local proxy running on a client’s
machine. C-Saw is built using GitHub’s electron framework [5]
and as a result, can be used across platforms and works with
all popular browsers. Our implementation provides support
for (i) measuring common forms of censorship including DNS
filtering and HTTP/HTTPS blocking and (ii) detecting block
pages by issuing redundant requests. C-Saw’s circumvention
module implements all local fixes, optimizations (including
URL aggregation), as well as provides support for Tor and
Lantern as relay-based circumvention approaches. For our
evaluation, the global_DB was hosted on MongoLab [11]—a
cloud database-as-a-service platform—and server_DB was
hosted on Heroku [8].
7 EVALUATION
We now present the evaluation of C-Saw, which focuses on9:
(a) impact of redundant requests on PLTs, (b) effectiveness of
URL aggregation, (c) performance comparison with Tor and
Lantern, and (d) analysis of measurements from a deploy-
ment study.
7.1 Impact on Page Load Times
We now evaluate the impact of redundancy on PLTs.
• Impact on blocked URLs. We consider two approaches
for generating web requests: serial and parallel. In
the serial approach, a request is first sent on the di-
rect path and after blocking is detected, we send the
same request via Tor for circumvention. Note that
this approach may reduce the accuracy of real-time
block page detection as discussed in Section 4.3. In
the parallel approach, two parallel copies (one via the
direct path and the other via Tor) of a request are sent
and the faster of the two responses is shown to the
user. Figure 5a shows the PLTs for webpages that ex-
perience different types of blocking under the serial
and parallel approaches. Observe that the parallel ap-
proach provides 45.8%–64.1% reduction in PLTs. This
happens because the blocking detection times can of-
ten be a significant fraction of the actual PLT.
• Impact on unblocked URLs. To evaluate the impact on
uncensored URLs, we consider a small webpage (95KB)
and a relatively large unblocked webpage (316KB). Fig-
ure 5 shows the CDF of PLTs under a single request “1
copy", redundant requests “2 copies", and redundant
requests with an added delay of 2s “2 copies (with de-
lay)" between generation of redundant requests10. For
these experiments, we launch 100 web requests whose
inter-arrival times are uniformly distributed between
1s and 5s. For the small webpage, “2 copies (with de-
lay)" performs similar to the “1 copy" case. Observe
that delaying generation of a redundant request im-
proves median latency at the cost of higher tail latency.
For the larger webpage, “2 copies (with delay)" per-
forms much better than “2 copy" because staggering
redundant request helps in reducing client load [55].
9All experiments involving censored webpages were carried out from a
University campus in Pakistan.
10Note that if we get a response for a webpage from the direct path within
2s, we do not send a request on Tor.
542
Incentivizing Censorship Measurements via Circumvention
(a)
(b)
Figure 6: Impact of (a) increasing the number of redundant
requests and (b) URL aggregation.
p
0
0.25
0.5
0.75
Median PLT (s)
5.6
6.9
7.5
8.1
Table 6: Impact of p on median PLT.
How many redundant requests are sufficient? We setup
an experiment in which we send out one, two, and three
duplicate requests for an uncensored webpage. All redundant
requests are sent via separate Tor circuits and we measure
the minimum PLT across all duplicate requests. We find that
increasing redundancy from one to two improves the median
PLT by ∼30% (see Figure 6a). While increasing the number
of redundant requests to three does not improve the median
PLT, it increases the 95th percentile PLT by 17%. We attribute
this to increased load on the client.
Choosing the value of p. C-Saw clients measure the di-
rect path for blocked URLs (reported via global_DB) with
probability p. Table 6 shows the median PLT for different
values of p involving an experiment where Tor is used as
a circumvention approach. Observe that measuring the di-
rect path increases the median PLT. We recommend a value
of p < 0.25 to achieve a balance between overhead and re-
silience to false reports. Note that blocked URLs that require
a local-fix do not incur this overhead because they use the
direct path, which is measured by default without generating
any extra traffic.
Different circumvention approaches. The PLTs seen by
C-Saw users depend on the specific circumvention method
being used. We now evaluate the impact of using Lantern
as the relay-based circumvention method in C-Saw and per-
form comparison when Tor is used. Figure 7c shows the CDF
of PLTs with Lantern and Tor in case of multi-stage blocking
(IP blocking and DNS blocking). Observe that Lantern sig-
nificantly outperforms Tor, which can be attributed to Tor’s
anonymity feature, which introduces overhead.
7.2 Impact of URL aggregation
Next, we study the impact of aggregation. We launch requests
for Alexa top 15 websites in Pakistan and track the number
of records stored in local_DB without aggregation. Later,
we enable aggregation and repeat the experiment. Figure
SIGCOMM ’18, August 20–25, 2018, Budapest, Hungary
6b shows that aggregation provides ∼55% reduction in the
number of records in local_DB by storing only one record
for URLs whose base URL is found to be unblocked. These
savings can be particularly useful for memory-constrained
mobile devices common in developing countries [21].
7.3 Comparison with circumvention tools
To analyze how C-Saw’s performance compares with other
circumvention methods, we evaluate C-Saw (w/ Tor), Lantern,
and Tor in isolation. Figures 7a and 7b show the CDF of PLTs
with C-Saw, Lantern, and Tor for a blocked (undergoing
DNS blocking) and unblocked URL, respectively. Observe
that C-Saw significantly outperforms Lantern and Tor due
to its adaptive circumvention approach that applies a local-
fix. Lantern first detects blocking and then always uses a
relay-based circumvention for blocked pages. Tor always
uses multiple relays for circumvention. Observe that for the
unblocked webpage, C-Saw outperforms these approaches
as well because it simply uses the direct path.
7.4 Deployment Study
We evaluate the feasibility of deploying C-Saw based on a pro-
totype implementation and a pilot study within a controlled
user base. We released C-Saw to 123 consenting users and
collected censorship measurements for three months. These
included users behind residential, enterprise, and University
networks in Pakistan. The users were carefully informed
about C-Saw but were not given any list of blocked websites
they needed to visit.
Table 7 shows some statistics we farmed from the mea-
surements collected by the global database. We obtained the
following insights based on our deployment:
• The users visited 420 blocked domains and accessed
them through 16 different ASes.
• We find that for a majority of URLs, a block page was
returned. The second most common type of filtering
was DNS blocking.
• We found blocking of CDN servers, which was not
observed in earlier studies of censorship in Pakistan
[44, 45]. C-Saw enables such detection because it re-
ceives the censored page from the circumvention path
and then sends each request for a CDN on the direct
path, which it measures for censorship by default.
7.5 C-Saw in the Wild
Due to protests in the capital city of Pakistan, several Internet
services, including Twitter and Instagram, were blocked be-
tween November 25-28, 2017. Several C-Saw users attempted
to use these services. Here is a snapshot of the measurements
we collected:
543
00.10.20.30.40.50.60.70.80.91246810CDFPage Load Time (secs)1 RReq.2 RReqs.3 RReqs.SIGCOMM ’18, August 20–25, 2018, Budapest, Hungary
Aqib Nisar, Aqsa Kashaf, Ihsan Ayyub Qazi, Zartash Afzal Uzmi
(a) Blocked page—DNS Blocking
(b) Unblocked Webpage
(c) C-Saw with {Lantern,Tor}
Figure 7: CDF of PLTs of C-Saw in comparison with Lantern and Tor for (a) blocked webpage (DNS blocking), (b) unblocked
webpage, and (c) C-Saw with Tor and C-Saw with Lantern.
No. of users
No. of unique blocked URLs accessed
No. of unique blocked domains accessed
No. of unique ASes
Distinct types of blocking observed
No. of URLs experiencing DNS blocking
No. of URLs experiencing TCP connection timeout
No. of URLs for which a block page was returned
No. of unique updates
123
997
420
16
5
376
114
475
1787
Table 7: Insights from our deployment study.
• Twitter was found blocked at 13:31 on Nov 25, 2017
from AS 38193 (Response: HTTP_GET_TIMEOUT)
• Twitter was found blocked at 13:32 on Nov 25, 2017
from AS 17557 (Response: HTTP_GET_BLOCKPAGE)
• Instagram was found blocked at 4:51 on Nov 26, 2017
from AS 38193 (Response: DNS blocking)
• Instagram was found blocked at 9:06 on Nov 26, 2017
from AS 59257 (Response: DNS blocking)
• Instagram was found blocked at 9:31 on Nov 26, 2017
from AS 45773 (Response: DNS blocking)
The above snapshot reveals interesting insights, which
includes: (i) Different ASes were blocking Twitter differently
and (ii) both Twitter and Instagram were blocked by different
ASes. Our deployment experience suggests that C-Saw is
effective at measuring censorship. Whether performance is
a sufficient incentive for adoption, remains to be seen.
8 DISCUSSION
Ethics. There are well-known concerns regarding the ethics
of censorship measurements w.r.t. consent, privacy, and safety,
and include questions such as: Are users aware of which URLs
they, or someone on their behalf, may be visiting and consent
to it? How are users apprised of risks? To what extent can users
be implicated for traffic that leaves their machine towards a
censored website? When designing C-Saw, we took explicit
steps to abide by the ethical guidelines set out by the Menlo
Report [30]. For instance, C-Saw incorporates explicit user
consent in its design by measuring only those URLs that
users access with their knowledge. With C-Saw, users can
choose to stay anonymous by using only those circumven-
tion methods that provide anonymity. To protect the identity
of users contributing measurements, C-Saw does not store
IP addresses and uses Tor for sending measurement reports.
Finally, while it is important to apprise users of potential