### 5. Security and Privacy Considerations

In this section, we discuss the challenges related to user privacy, security, and the quality of collected measurements in the C-Saw system.

#### 5.1 Interfering with C-Saw Measurements

Crowdsourced measurement systems are vulnerable to malicious users who may submit false reports, thereby distorting the data [26]. The global database (global_DB) is particularly susceptible to such distortions.

To mitigate this challenge, C-Saw employs two key strategies:
1. **Rate Limiting and CAPTCHA**: To prevent the creation of automated fake identities, C-Saw requires new users to solve a "No CAPTCHA reCAPTCHA" before they can register as a client. This advanced reCAPTCHA API uses an advanced risk analysis engine and adaptive CAPTCHAs [17].
2. **Voting Mechanism**: C-Saw uses a voting mechanism to limit the impact of a single malicious client on the measurements. Each client \( c_i \) is assigned one unit of vote, which is evenly distributed among all blocked URLs it reports. Specifically, if a client reports \( d \) blocked websites, each URL receives \( \frac{1}{d} \) of the vote. The server database (server_DB) maintains two statistics for each blocked URL from an AS:
   - \( s_{j,k} \): Sum of votes.
   - \( n_{j,k} \): Total number of clients voting for the given URL from an AS.

Users can use these statistics to assess the reliability of a measurement. For instance, a measurement with a large \( n_{j,k} \) and small \( s_{j,k} \) (indicating a high number of reports per user) or a small \( n_{j,k} \) (indicating few reports) might be less reliable. This approach is inspired by the PageRank algorithm [25].

Additionally, C-Saw can implement reputation systems [47, 57] to identify and revoke the UUIDs of malicious users based on distinct behavioral patterns [54].

#### 5.2 Attacks on the Server and Global Databases

An attacker might launch a flood attack on the server_DB or global_DB. To address this, C-Saw replicates these components across different cloud providers that offer dynamic scaling and DDoS mitigation services [2, 9].

#### 5.3 Blocking Access to the Global Database

A global_DB with a well-known domain name can be blocked if the Tor exit relay used for sending censorship reports is in the same region as the censor. To overcome this, C-Saw uses a distributed collection service similar to OONI [14], where each collector is exposed as a Tor Hidden Service and posts results to the global_DB.

#### 5.4 User Privacy and Resilience to Detection

Censors can monitor traffic to identify users contributing to the global_DB. To protect user privacy, C-Saw ensures that all measurement reports are transmitted over the Tor network.

### 6. Implementation

C-Saw is implemented as a local proxy running on the client's machine, built using GitHub’s Electron framework [5]. This allows C-Saw to be used across platforms and with all popular browsers. The implementation supports:
- Measuring common forms of censorship, including DNS filtering and HTTP/HTTPS blocking.
- Detecting block pages by issuing redundant requests.
- Implementing local fixes and optimizations, including URL aggregation.
- Supporting Tor and Lantern as relay-based circumvention methods.

For evaluation, the global_DB was hosted on MongoLab [11], and the server_DB was hosted on Heroku [8].

### 7. Evaluation

We evaluate C-Saw in several aspects:
- Impact of redundant requests on page load times (PLTs).
- Effectiveness of URL aggregation.
- Performance comparison with Tor and Lantern.
- Analysis of measurements from a deployment study.

#### 7.1 Impact on Page Load Times

We evaluate the impact of redundancy on PLTs for both blocked and unblocked URLs.

**Blocked URLs:**
- **Serial Approach**: A request is first sent on the direct path, and if blocking is detected, the same request is sent via Tor.
- **Parallel Approach**: Two parallel copies of a request (one via the direct path and one via Tor) are sent, and the faster response is shown to the user.

Figure 5a shows that the parallel approach reduces PLTs by 45.8%–64.1% compared to the serial approach, as blocking detection times can be a significant fraction of the actual PLT.

**Unblocked URLs:**
- We consider a small webpage (95KB) and a larger webpage (316KB).
- Figure 5b and 5c show the cumulative distribution function (CDF) of PLTs under different conditions: single request, redundant requests, and redundant requests with a 2-second delay between requests.

For the small webpage, delaying the redundant request improves median latency but increases tail latency. For the larger webpage, staggering redundant requests significantly reduces client load [55].

#### 7.2 Impact of URL Aggregation

URL aggregation reduces the number of records stored in the local database (local_DB). We launch requests for the top 15 Alexa websites in Pakistan and compare the number of records with and without aggregation. Figure 6b shows that aggregation reduces the number of records by approximately 55%, which is particularly useful for memory-constrained mobile devices [21].

#### 7.3 Comparison with Circumvention Tools

We compare C-Saw's performance with other circumvention methods, specifically Tor and Lantern. Figures 7a and 7b show the CDF of PLTs for a blocked and unblocked URL, respectively. C-Saw outperforms both Tor and Lantern due to its adaptive circumvention approach, which applies a local fix when possible. Lantern always uses relay-based circumvention, while Tor uses multiple relays, leading to higher overhead.

#### 7.4 Deployment Study

We conducted a pilot study with 123 consenting users in Pakistan, collecting censorship measurements for three months. Table 7 summarizes the insights from the study:
- Users visited 420 blocked domains through 16 different ASes.
- The most common type of blocking was returning a block page, followed by DNS blocking.
- C-Saw detected blocking of CDN servers, which was not observed in earlier studies [44, 45].

#### 7.5 C-Saw in the Wild

During protests in Pakistan, several Internet services, including Twitter and Instagram, were blocked. C-Saw users attempted to access these services, and the system collected the following measurements:
- Twitter was blocked at different times and ASes, with responses ranging from HTTP GET timeouts to block pages.
- Instagram was blocked at different times and ASes, primarily through DNS blocking.

These insights highlight the effectiveness of C-Saw in measuring censorship.

### 8. Discussion

#### Ethics

Censorship measurement raises ethical concerns regarding consent, privacy, and safety. C-Saw addresses these concerns by:
- Requiring explicit user consent for measuring URLs.
- Allowing users to remain anonymous by using circumvention methods that provide anonymity.
- Not storing IP addresses and using Tor for sending measurement reports.
- Informing users of potential risks and ensuring they are aware of the URLs being accessed.

While C-Saw effectively measures censorship, whether its performance is a sufficient incentive for adoption remains to be seen.