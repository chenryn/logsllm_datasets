I understand that you are trying to read a DICOM header tag from a DICOM file. There are two methods you can use:

1. **Using the `pydicom` package in Python**:
   - It seems that you encountered some issues with `pydicom` on your Python 3 installation.
   - To access a specific tag, such as `(0019, 109C)`, the correct syntax is:
     ```python
     import pydicom
     ds = pydicom.dcmread('filename.dcm')
     value = ds[0x0019, 0x109c].value
     ```

2. **Using the AFNI function `dicom_hinfo` through the command line**:
   - You can call the `dicom_hinfo` function from the terminal using the following syntax:
     ```sh
     dicom_hinfo -tag 0019,109c filename.dcm
     ```
   - This will output the value of the specified DICOM tag.

To call the `dicom_hinfo` function from within a Python script, you can use the `subprocess` module. Here is an example of how to do this:

```python
import subprocess

# Define the command and arguments
command = ['dicom_hinfo', '-tag', '0019,109c', 'filename.dcm']

# Run the command and capture the output
result = subprocess.run(command, capture_output=True, text=True)

# Print the output
print(result.stdout)
```

This script will execute the `dicom_hinfo` command and print the output, which should be the value of the specified DICOM tag.

If you continue to have issues with `pydicom`, the `subprocess` method provides a reliable alternative for accessing DICOM tags.