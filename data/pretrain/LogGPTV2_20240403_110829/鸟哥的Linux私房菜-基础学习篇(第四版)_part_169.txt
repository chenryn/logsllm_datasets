### 优化后的文本

**加载状态:** 已加载 (/usr/lib/systemd/system/cups.service; 启用)  
**活动状态:** 不活动 (已终止) 自2015-08-11 19:19:20 CST起，持续3小时29分钟

#### 观察与分析
有趣的是，尽管CUPS服务被设置为启用状态，但它当前却是不活动的。这表明可能存在一些配置或依赖性问题。

#### 关闭并禁用CUPS服务
```bash
[root@study ~]# systemctl stop cups.service
[root@study ~]# systemctl disable cups.service
rm '/etc/systemd/system/multi-user.target.wants/cups.path'
rm '/etc/systemd/system/sockets.target.wants/cups.socket'
rm '/etc/systemd/system/printer.target.wants/cups.service'
```
我们注意到，在禁用过程中移除了三个相关的链接文件，这可能意味着这些文件之间存在依赖关系。

#### 检查端口占用情况
```bash
[root@study ~]# netstat -tlunp | grep cups
```
由于CUPS服务未运行，因此没有相关端口处于监听状态。

#### 启动CUPS套接字以监听客户端请求
```bash
[root@study ~]# systemctl start cups.socket
```

#### 再次检查各组件的状态
```bash
[root@study ~]# systemctl status cups.service cups.socket cups.path
```
- **cups.service**: CUPS打印服务
  - 加载状态: 已加载 (/usr/lib/systemd/system/cups.service; 禁用)
  - 活动状态: 不活动 (已终止) 自2015-08-11 22:57:50 CST起，持续3分41秒
- **cups.socket**: CUPS打印服务套接字
  - 加载状态: 已加载 (/usr/lib/systemd/system/cups.socket; 禁用)
  - 活动状态: 活动 (正在监听) 自2015-08-11 22:56:14 CST起，持续5分钟
- **cups.path**: CUPS打印机服务队列
  - 加载状态: 已加载 (/usr/lib/systemd/system/cups.path; 禁用)
  - 活动状态: 不活动 (已终止)

可以看到，只有`cups.socket`处于活动状态，而其他两个组件并未启动。

#### 尝试使用`lp`命令进行打印测试
```bash
[root@study ~]# echo "testing" | lp
lp: Error - no default destination available.
```
由于系统中没有配置默认打印机，导致该命令执行失败。

#### 重新检查CUPS服务状态
```bash
[root@study ~]# systemctl status cups.service
```
- **cups.service**: CUPS打印服务
  - 加载状态: 已加载 (/usr/lib/systemd/system/cups.service; 禁用)
  - 活动状态: 活动 (正在运行) 自2015-08-11 23:03:18 CST起，持续34秒

#### 再次查看端口占用情况
```bash
[root@study ~]# netstat -tlunp | grep cups
tcp 0 0 127.0.0.1:631 0.0.0.0:* LISTEN 25881/cupsd
tcp6 0 0 ::1:631 :::* LISTEN 25881/cupsd
```
尽管我们并未主动启动CUPS服务，它似乎已经自动被激活了。这说明服务之间可能存在依赖关系，使得即使禁用了`cups.service`，其他组件如`cups.socket`仍会触发其启动。

### 强制注销服务（Mask）
一种更彻底的方法是通过`mask`命令来强制注销`cups.service`。
```bash
[root@study ~]# systemctl stop cups.service
[root@study ~]# systemctl mask cups.service
ln -s '/dev/null' '/etc/systemd/system/cups.service'
```
此时，尝试启动`cups.service`将失败：
```bash
[root@study ~]# systemctl start cups.service
Failed to issue method call: Unit cups.service is masked.
```
要取消注销操作，可以使用`unmask`命令：
```bash
[root@study ~]# systemctl unmask cups.service
rm '/etc/systemd/system/cups.service'
```

### 查看系统中的所有单元
使用`systemctl`可以列出系统中所有已加载和未加载的单元：
```bash
[root@study ~]# systemctl list-units --type=service --all
```
例如，查询是否存在名为`cpu`的服务：
```bash
[root@study ~]# systemctl list-units --type=service --all | grep cpu
cpupower.service loaded inactive dead Configure CPU power related settings
```

### 列出所有目标单元
```bash
[root@study ~]# systemctl list-units --type=target --all
```
输出示例：
- **basic.target**: 基本系统
- **graphical.target**: 图形界面
- **multi-user.target**: 多用户系统

以上步骤展示了如何管理和排查CUPS服务及其相关依赖项，并介绍了如何使用`systemctl`命令来查看和控制系统中的各种单元。