# Seurat: A Pointillist Approach to Anomaly Detection

## 1. Introduction
Seurat is a novel approach for detecting aggregated anomalous events by correlating information about host file updates across both space and time. This "pointillist" approach explores the temporal and spatial locality of system state changes through learning and correlation, requiring neither prior knowledge about normal host activities nor system-specific rules.

## 2. Intrusion Detection Example
### Figure 11. Intrusion Detection by Seurat
On February 11, 2004, Seurat identified a new cluster of three hosts when we manually launched the Lion worm. This demonstrates Seurat's ability to detect new clusters of compromised hosts.

### Figure 12. Suspicious Files for the New Cluster on February 11, 2004
The following files were marked as suspicious for the new cluster:

| File ID | File Name                          |
|---------|------------------------------------|
| 1       | /sbin/asp                          |
| 2       | /dev/.lib                          |
| 3       | /dev/.lib/star.sh                  |
| 4       | /var/spool/mail/root               |
| 5       | /dev/.lib/bind                     |
| 6       | /etc/hosts.deny                    |
| 7       | /dev/.lib/randb                    |
| 8       | /sbin                              |
| 9       | /var/log                           |
| 10      | /dev/.lib/bindname.log             |
| 11      | /dev/.lib/index.htm                |
| 12      | /var/spool/mail                    |
| 13      | /dev/.lib/bindx.sh                 |
| 14      | /tmp/ramen.tgz                     |
| 15      | /dev/.lib/scan.sh                  |
| 16      | /dev/.lib/pscan                    |
| 17      | /var/spool/mqueue                  |
| 18      | /dev/.lib/hack.sh                  |
| 19      | /dev/.lib/.hack                    |
| 20      | /dev/.lib/index.html               |
| 21      | /dev/.lib/asp62                    |
| 22      | /var/log/sendmail.st               |

These files can be marked for future detection. If, in the following days, more hosts are clustered together with the already infected machines or experience the same file updates, it may indicate that they are also infected by the same attack.

## 3. Discussion
### 3.1 Vulnerabilities and Limitations
#### 3.1.1 Successful Detection
Seurat is most effective in detecting virus or worm propagations that result in file modifications at multiple hosts. However, certain attacks, such as password guessing, which succeed only once or a few times, may evade Seurat detection.

#### 3.1.2 Stealthy Attack
Attackers may try to evade detection by slowing down the attack propagation. If an attacker infects only one host per day, Seurat will not notice the intrusion within its current one-day detection window. A larger detection window (e.g., a couple of days or a week) can help catch slow, stealthy attacks. However, this increases detection latency, as Seurat notices the attacks only after multiple hosts are compromised.

#### 3.1.3 Mimicry Attack
An attacker can design an attack to cause file updates that mimic regular file changes, making it difficult for Seurat to detect. There are two ways to achieve this:
- **Camouflaging Files**: Concealing intrusion files as frequently updated files, so they are not selected as feature vector dimensions.
- **Cloaking Abnormal Updates**: Introducing many normal but irregular changes during Seurat’s clustering process.

To counter these, Seurat can incorporate additional information such as file size, content digest, and permissions.

#### 3.1.4 Random-File-Access Attack
Attackers can install files under different directories or replace existing files with attack files. While this can evade Seurat, it often requires anchor files at fixed locations, where Seurat can still detect the attack. Using a more robust file representation, such as an MD5 checksum, can help detect such attacks.

#### 3.1.5 Memory-Resident Attack
Memory-resident and BIOS-resident attacks make no file system updates, making them undetectable by Seurat. Real-time monitoring and secure audit logging can help mitigate this.

#### 3.1.6 Kernel/Seurat Modification Attack
Seurat's effectiveness relies on the correctness of reports from data collection tools. To ensure this, trusted computing platforms or real-time monitoring with secure audit logging should be used.

### 3.2 Future Work
#### 3.2.1 Real-Time Anomaly Detection
Enhancing the Seurat data collection module to monitor system calls related to file updates and report changes immediately can reduce detection latency. The reported file updates will be instantly reflected in the feature vectors, enabling real-time anomaly detection.

#### 3.2.2 Distributed Correlation Module
A centralized approach has limitations in scalability, reliability, and privacy. A distributed correlation module, similar to EMERALD, AAFID, and Mingle, can address these issues. We are investigating methods to correlate file update events in a distributed architecture.

#### 3.2.3 Other Applications
Seurat's approach can be generalized to other applications, such as detecting spyware, illegal file sharing, or software configuration errors. We are currently deploying Seurat on PlanetLab hosts to detect software configuration errors.

## 4. Related Work
### 4.1 File System Update-Based IDS
Systems like Tripwire, AIDE, Samhain, and storage-based intrusion detection systems use file system updates to find intrusions. Unlike Seurat, these systems rely on predefined rule sets.

### 4.2 Collective Approaches
Graph-based Intrusion Detection System (GrIDS), Cooperative Security Managers (CSM), and Distributed Intrusion Detection System (DIDS) use collective approaches for intrusion detection. EMERALD and AAFID propose distributed architectures for intrusion detection and response, using local monitors or agents to collect and exchange information.

### 4.3 Correlating Audit Logs
Many researchers have proposed correlating multiple heterogeneous sensors to improve alarm accuracy. Seurat focuses on correlating homogeneous monitors (file system change monitors) but can be enhanced to include different types of measurement data.

### 4.4 Spatial Correlation
Wang et al. have used spatial correlation of multiple system configurations to diagnose misconﬁguration problems. Their system collects system configuration information from similar and friendly hosts to diagnose issues, rather than automatically detecting anomalies.

## 5. Conclusions
Seurat presents a new "pointillist" approach for detecting aggregated anomalous events by correlating host file updates. It is effective in detecting rapidly propagating attacks and can identify hosts compromised by slowly propagating attacks with a trade-off in detection latency. Seurat identifies suspicious files and hosts, facilitating root cause diagnosis and false alarm suppression.

## 6. References
[References listed here, formatted consistently]

This version of the text is more organized, coherent, and professional, with clear headings and subheadings to guide the reader through the content.