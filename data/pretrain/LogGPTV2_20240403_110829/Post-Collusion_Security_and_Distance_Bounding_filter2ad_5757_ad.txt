### 5.1 Modelling Distance-Bounding Protocols

Distance-bounding protocols are designed to ensure the physical proximity of the participants. These protocols measure the round-trip times (RTTs) of challenge-response cycles and compare them against a predefined threshold. The phase where RTTs are measured is referred to as the fast phase.

#### Example: The DBToy Protocol

Figure 6 illustrates the DBToy protocol, which operates as follows:
1. The prover \( P \) encrypts a fresh name \( m \) using the shared key between \( P \) and the verifier \( V \).
2. \( P \) sends the encrypted message to \( V \).
3. The fast phase begins with \( V \) sending a fresh name \( n \) as a challenge.
4. \( P \) must respond with \( f(n, m, P) \).
5. If \( P \) replies correctly and within the time limit, \( V \) declares \( P \) as being close.

The specification rules for DBToy are detailed in Figure 7. In these rules, we introduce the following linear fact symbols:
- \( \text{Net} \in \Gamma_1 \): Denotes that a message is on the network.
- \( \text{Send}, \text{Recv} \in \Gamma_2 \): Represent the sending and receiving of messages by an agent.
- \( \text{Action} \in \Gamma_1 \): Indicates that an action was taken by an agent.
- \( \text{DBSec} \in \Gamma_4 \): Represents the verifier's claim that the prover is close during the fast phase, defined by the interval between \( \text{Send}(V, \text{ch}) \) and \( \text{Recv}(V, \text{rp}) \).

### 5.2 Secure Distance-Bounding

Mauw et al. [44] introduced the causality-based property of secure distance-bounding to verify distance-bounding protocols. This property ensures that the prover performs some action during the fast phase, resembling a form of aliveness [25, 43]. The authors demonstrated that a verifier's guarantee that the prover is alive during the fast phase is equivalent to ensuring that the fast phase RTT provides an upper bound on their distance.

The formal definition of secure distance-bounding is given by:
\[ \text{dbsec}(t, l) \iff \forall V, P, \text{ch}, \text{rp}. \text{DBSec}(V, P, \text{ch}, \text{rp}) \in t_l \implies \]
\[ (\exists i, j, k. i < j < k \land \text{Send}(V, \text{ch}) \in t_i \land \]
\[ (\exists b, b'. \text{Action}(P) \in t_j \land \text{Recv}(V, \text{rp}) \in t_k) \lor \]
\[ (\exists i, j, k, P'. i < j < k \land \text{Send}(V, \text{ch}) \in t_i \land \]
\[ \text{Action}(P') \in t_j \land \text{Recv}(V, \text{rp}) \in t_k \land \]
\[ \text{Compromise}(P) \in t_b \land \text{Compromise}(P') \in t_{b'})) \lor \]
\[ (\exists i. \text{Compromise}(V) \in t_i). \]

Secure distance-bounding holds for a trace \( t \) if, whenever a claim \( \text{DBSec}(V, P, \text{ch}, \text{rp}) \) occurs, there is an action by \( P \) (or a compromised prover \( P' \) if \( P \) is compromised) during the fast phase. Tamarin can be used to prove that DBToy satisfies this property.

### 5.3 Formalising (Resistance To) Terrorist Fraud

Terrorist fraud (TF) is an attack where a remote, non-compromised prover \( P \) colludes with a close, compromised prover \( A \) to make the verifier believe that \( P \) is close. The condition is that \( A \) (or any other compromised prover) must not be able to attack the protocol again without further collusion.

The dbsec property can detect attacks involving a compromised prover, such as distance fraud [28] and distance hijacking [26]. However, it is too fine-grained for terrorist fraud, which requires the distant and colluding prover to be non-compromised. We define a weaker property, dbsec_hnst, conditional on the non-compromise of both prover and verifier:
\[ \text{dbsec_hnst}(t, l) \iff \forall V, P, \text{ch}, \text{rp}. \text{DBSec}(V, P, \text{ch}, \text{rp}) \in t_l \implies \]
\[ (\exists i, j, k. i < j < k \land \text{Send}(V, \text{ch}) \in t_i \land \]
\[ \text{Action}(P) \in t_j \land \text{Recv}(V, \text{rp}) \in t_k) \lor \]
\[ (\exists i. \text{Compromise}(V) \in t_i \lor \text{Compromise}(P) \in t_i). \]

A trace satisfies dbsec_hnst if, whenever a verifier \( V \) believes a prover \( P \) is close, \( P \) took some action between the verifier sending the challenge and receiving the response.

We formally define resistance to terrorist fraud as follows:
\[ \text{Definition 6 (Resistance to Terrorist Fraud)}. \text{A protocol } \text{Proto} \subseteq R \setminus C \text{ is resistant to terrorist fraud if every valid extension } \text{Proto}' \text{ of } \text{Proto} \text{ that breaks dbsec_hnst is not post-collusion secure with respect to dbsec_hnst, i.e.} \]
\[ \text{Proto}' \not\models \text{dbsec_hnst} \implies \text{Proto}' \not\models^* \text{dbsec_hnst}. \]

### 5.4 On the Completeness of Our Approach

Definition 6 is quantified over all valid extensions of a collection of protocol rules, which can be challenging to prove due to the exponential number of possible extensions. To address this, we introduce the concept of a least-disclosing message, which is the minimal knowledge the adversary needs to produce the fast phase response. For example, if \( \text{ch} \) is the verifier's fast phase challenge and the prover's response is \( f(\text{ch}, z_1, \ldots, z_n) \), then a least-disclosing message is \( \langle z_1, \ldots, z_n \rangle \).

#### Theorem 1: DBToy is Resistant to Terrorist Fraud

**Proof:**
Let \( \text{DBToy}' \) be a valid extension of \( \text{DBToy} \) such that \( \text{DBToy}' \not\models \text{dbsec_hnst} \). Then, there exist traces \( t_1, \ldots, t_l \in \text{Traces}(\text{DBToy}') \), and \( n, m, V, P \in T_\Sigma \), and \( i, k \in \{1, \ldots, l\} \) with \( i < k \), such that:
\[ \text{Send}(V, n) \in t_i \land \text{Recv}(V, f(n, m, P)) \in t_k \land \]
\[ \text{DBSec}(V, P, n, f(n, m, P)) \in t_l \land \]
\[ (\nexists j \in \{i + 1, \ldots, k - 1\}. \text{Action}(P) \in t_j) \land \]
\[ (\nexists j \in \{1, \ldots, l\}. \text{Compromise}(V) \in t_j) \land \]
\[ (\nexists j \in \{1, \ldots, l\}. \text{Compromise}(P) \in t_j). \]

Given that \( \text{Recv}(V, f(n, m, P)) \) can only occur due to the rule \( \text{DBNet} \) (see Figure 7), we derive:
\[ \exists c, j \in \{1, \ldots, k - 1\}, C. (\text{Send}(C, f(n, m, P)) \in t_j \land \text{Compromise}(C) \in t_c). \]

This implies \( \exists w < k. K(m) \in t_w \), meaning \( \text{DBToy}' \) has a collusion rule where \( m \) is given away. Since \( m \) (or equivalently \( \langle m, P \rangle \)) is a least-disclosing message, the adversary can use a compromised prover to run the protocol again with \( V \) on behalf of \( P \) using the messages \( \text{senc}(m, k) \) and \( f(n_2, m, P) \), where \( n_2 \) is \( V \)'s new challenge.

Thus, \( \text{DBToy} \) is resistant to terrorist fraud.

### Table 1: Tamarin Analysis Results

| Protocol | Satisfies dbsec | Resists TF |
|----------|-----------------|------------|
| Brands-Chaum [15] | × | ×(n) |
| Fiat-Shamir id. | × | ×(n) |
| CRCS [52] | ✓ | ×(n) |
| Non-revealing sign. | × | ×((cid:44)c) |
| Revealing sign. | ✓(n) | ×(n) |
| Meadows et al. [46] | × | ×(n) |
| f := ⟨NV, P ⊕ NP⟩ | × | ×(n) |
| f := NV ⊕ h(P, NP) | ✓(n) | ×(n) |
| f := ⟨NV, P, NP⟩ | ✓(n) | ×(n) |
| Lookup-based | ✓(n) | ×(n) |
| Tree [7] | ✓(n) | ×(n) |
| Poulidor [60] | ✓(n) | ×(n) |
| Hancke-Kuhn [34] | ✓(n) | ×(n) |
| Uniform [45] | ✓(n) | ×(n) |
| Munilla-Peinado [48] | × | ×(n) |
| Kim-Avoine [36] | × | ×(n) |
| Reid et al. [53] | × | ×(n) |
| MAD (one way) [19] | × | ×(n) |
| DBPK [17] | ✓(n) | ×(n) |
| Swiss Knife [37] | ✓(n) | ×(n) |
| UWB [39] | ✓(n) | ×(n) |
| Asymmetric | × | ×(n) |
| keyed-MAC | × | ×(n) |
| WSBC+DB [50] | × | ×(n) |
| Hitomi [51] | × | ×(n) |
| TREAD [4] | ✓(n) | ×(n) |
| ISO/IEC 14443 | × | ×(n) |
| PaySafe [21] | × | ×(n) |
| MIFARE Plus [58] | × | ×(n) |
| PayPass [31] | × | ×(n) |

Legend:
- ✓: Verified
- ×: Attack found
- (n): No symbolic, computer-verifiable (in)security proof reported before
- ((cid:44)c): Differs from Chothia et al.'s results [20]