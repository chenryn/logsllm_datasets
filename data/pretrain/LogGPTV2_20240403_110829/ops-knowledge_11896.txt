User: 请提供一个使用Terraform编写基础设施即代码的例子。
Assistant: 以下是一个使用Terraform编写基础设施即代码的简单例子，它创建了一个Amazon Web Services（AWS）Virtual Private Cloud（VPC）。

```
# 定义所需的提供者和区域
provider "aws" {
  region = "us-east-1"
}

# 定义VPC
resource "aws_vpc" "my_vpc" {
  cidr_block = "10.0.0.0/16"
}

# 定义Internet网关
resource "aws_internet_gateway" "my_igw" {
  vpc_id = aws_vpc.my_vpc.id
}

# 定义子网
resource "aws_subnet" "my_subnet" {
  vpc_id     = aws_vpc.my_vpc.id
  cidr_block = "10.0.1.0/24"
}

# 定义安全组
resource "aws_security_group" "my_sg" {
  name_prefix = "my_sg"

  ingress {
    from_port   = 0
    to_port     = 65535
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  egress {
    from_port   = 0
    to_port     = 65535
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
}

# 将安全组绑定到子网
resource "aws_security_group_attachment" "my_sg_attachment" {
  security_group_id = aws_security_group.my_sg.id
  subnet_id         = aws_subnet.my_subnet.id
}
```

这个例子创建一个新的VPC，其中包括一个使用CIDR块“10.0.0.0/16”定义的主网络。同时，它还创建了一个名为“my_igw”的Internet网关，并将其连接到VPC。接下来，该脚本定义了一个名为“my_subnet”的子网，其CIDR块为“10.0.1.0/24”。此外，该脚本还创建了一个名为“my_sg”的安全组，该安全组允许所有TCP流量和所有IP地址的进出站流量，并将其绑定到子网。