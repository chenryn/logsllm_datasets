comprehensive analysis of the proposed framework.
6.1 Testbed overview
We provide an overview of our evaluation setup in Figure 10.
Trafﬁc collected from a high-end vehicle is replayed to the
left and right sides of the network, i.e., half of the collected
in-vehicle trace to each side by using the two channels of
a Vector Breakout Box D62Y9 device connected as ECU1
and ECU5. We emphasize that the Vector Breakout Box is
an industry-standard tool that perfectly mimics the behavior
of the real-world vehicle bus and it is commonly used by
the industry for system design and testing. Of course, due to
potential damage and costs, it would have been uneasy for
us to cut wires and mount relays inside the real car while the
observed behavior on the in-vehicle network trafﬁc would
have been likely identical.
USENIX Association
30th USENIX Security Symposium    4267
Figure 10: Schematic depiction of our experimental testbed
Figure 11: The two states of single-side trafﬁc retransmission
(i) and load-balanced retransmission (ii)
(i)
(ii)
The second ECU from the left is designed to carry ad-
versarial tasks, e.g., perform DoS or fuzzing attacks. The
relays that surround him, encircled with dotted blue line, will
alternatively open to the left and to the right, effectively dis-
connecting the adversary from the left-side network (LSN)
or the right-side network (RSN). Trafﬁc is ﬁltered then redi-
rected to the other side of the network by the Bus Guardian.
We have additional relays in our setup toward the mounting
point of ECU3 and ECU4 but these were not needed in our
experiments, we kept them for potential future extensions.
6.2 Single-side trafﬁc redirection in case of
fuzzing attacks
Some basic tests of the relay impact on the adversary free bus
can be found in Appendix A. We now add adversarial activity
to the bus. Our framework is speciﬁcally designed to address
DoS attacks. However, before evaluating DoS resilience, we
also test the ﬁlters and relay behaviour in front of fuzzing
attacks which is a common adversarial behavior that puts
more stress on the ﬁlters (as the distribution of the IDs is
randomized). In this type of attacks, the adversary injects
random CAN frames that have random IDs and data ﬁelds.
This kind of adversarial intervention is important because it
can be employed in order to cause abnormal behaviour or
learn how the system reacts to IDs that are not expected by
the controllers.
Figure 11 (i) shows the testing strategy in case of single-
side retransmission with the adversary in the middle of the
network. Each 100ms, or alternatively 1s in some experiments,
the relays from the left or right sides are opened alternatively
- the adversary is isolated either to the left or to the right side
of the network. The trafﬁc from the adversary side is ﬁltered
by the Bus Guardian and redirected to the other side. Under
this second testing strategy with fuzzing attacks we consider
trafﬁc redirection only from the side which is affected by the
intruder i.e., fuzzed by the adversary.
In this case the adversarial ECU is programmed to inject
frames with random identiﬁers that are not part of the legiti-
mate trace. For simplicity, we randomly replace frames from
the legitimate trace with an attack frame that has a random ID
that is not part of the legitimate ID set. The intrusions form
roughly 50% of the trace. Since part of the genuine frames are
now altered, they are not going to be transmitted to the left or
right side since they are classiﬁed by our ﬁlters as intrusions.
Table 1 provides a summary in terms of: left transmitted
count (LTC), left failed count (LFC), right transmission count
(RTC) and right failed count (RFC). In case of the fuzzing
attack the frame loss drops to half but this is expected since
half of the frames on the bus are now adversarial frames and
the LTC and RTC are also halved. By a careful analysis we
observed that frame loss is not due to the relay actions but
because of frame buffering. We determined that a 1 frame
buffer reduces the frame loss to under 1% and a buffer of at
most 32 frames reduces it to 0%.
6.3 Load-balanced retransmission in case of
ﬂooding and DoS attacks
Figure 11 (ii) shows the testing strategy for the load-balanced
retransmission with adversarial activity in the middle of the
bus. We speciﬁcally designed this experiment to respond to
DoS attacks. Each 100ms, the relays from the left or right
sides are opened alternatively, isolating the adversary to the
left or to the right side of the network. The trafﬁc from the
adversary side is ﬁltered by the Bus Guardian and redirected
to the other side, while trafﬁc from the adversary-free side is
directly transmitted to the other side (without ﬁltering).
To begin with, we conducted four experiments in which
the adversary injects an ID with high priority with a cycle
time of 10,1,0.5 and 0.3ms respectively. The time of the
longest frame on the bus at 500Kbps is roughly 0.26ms, so
getting the cycle time closer to this value will result in a
complete DoS of the bus. The larger 10,1 cycles where chosen
for allowing us to test that retransmission works. When the
attack gets closer to the 0.3 − 0.5ms range there are very
4268    30th USENIX Security Symposium
USENIX Association
Table 1: Frame loss at various relay trigger rates with adversarial activity (fuzzing attacks) and single-side trafﬁc redirection
Buffering
None
1 frame
32 frames
Retransmission
Filter size
Single side
Single side
Single side
Single side
Single side
Single side
512
1024
512
1024
512
1024
Adversary
Fuzzing
Fuzzing
Fuzzing
Fuzzing
Fuzzing
Fuzzing
Relay Rate (s)
1
1
0.1
0.1
0.1
0.1
LTC
57918
58111
60258
60270
60237
60261
RTC
54444
54589
57265
57271
57234
57284
LFC
1607
1527
25
16
0
0
RFC
2031
1957
13
30
0
0
LF% RF%
3.7%
2.7%
3.5%
2.6%
0.02%
0.04%
0.03%
0.05%
0.0%
0.0%
0.0%
0.0%
few legitimate frame to retransmit from the attacked side
(more details concerning a full DoS are in the next paragraph).
Figure 12 shows the inter-frame space on the left and right
channel for Trelay = 100ms during a ﬂood with 1ms cycle
time. Legitimate frames are printed in blue and adversarial
frames are in printed in orange. Note that the left and right
channels are asynchronous. In Figure 13 we also separate
between left (green) and right (blue) side frames to show
that legitimate frames occur on both sides. In Table 2 we
summarize results for the 1ms ﬂood (a partial DoS) which
is more revealing for retransmissions since all frames can
be successfully retransmitted. We determined that a buffer
of one frame will make the failed retransmission to drop to
less than 1%. To get retransmission errors down to 0% we
need a buffer of 8 frames to the side that is free of adversarial
interventions and a 32 frame buffer for the side where the
adversary is present. The reason is that on the side where
the adversary is present it is harder to ﬁnd space on the bus
for frame retransmission due to the higher busload. Thus the
buffer must be capable to accommodate more frames. This
happens for adversarial attacks at a rate of 1ms, if the rate goes
to 300µs frame retransmission becomes almost impossible on
the adversary side regardless of the buffer size.
We now discuss the impact of a full DoS. Figure 14 pro-
vides plots for the case of an adversary that is programmed
to loop and send high priority frames whenever there is room
on the bus at Trelay = 25ms. This ﬁgure depicts the results in
terms of busload and IFS on the left and right channels, con-
trasting legitimate (blue) frames with attack (orange) frames.
The busload tops at the maximum of 500Kbps, i.e., 100%
busload, and almost no legitimate (blue) frame manages to
enter the attacked side, i.e., a full DoS. Legitimate frames
(blue) may occasionally enter the channel when the relays are
triggered due to brief disturbances in the adversary transmis-
sion. While the full DoS is more severe, the experimental
outcome is in fact more simple to illustrate: the side where
the adversary is isolated has no legitimate trafﬁc (only orange
frames) and once the adversary is shifted to the other side the
recorded (buffered) trafﬁc from the adversary-free side will be
re-sent. We also note that, as CAN frames carry information
from various sensors and actuators, it may not be necessary to
replay all the recorded trafﬁc but only the recent-most value
for each ID. This allowed us to further simplify the buffer-
ing in our implementation since we only need to store and
retransmit the last recorded value for each ID.
(i) left channel
(ii) right channel
Figure 12: Interframe space for the left (i) and right channel
(ii) for genuine (blue) and adversarial frames (orange) during
5 seconds of runtime (Trelay = 100ms)
(i) left channel
(ii) right channel
Figure 13: Interframe space for the left (i) and right channel
(ii) for legitimate frames from the left channel (green), legit-
imate frames from the right channel (blue) and adversarial
frames (orange) during 5 seconds of runtime (Trelay = 100ms)
(i) datarate during full DoS
(ii) IFS during full DoS
Figure 14: Data rate (i) and inter-frame space (ii) during
a full DoS on the left and right channels at Trelay = 100ms
(legitimate trafﬁc in blue, adversary trafﬁc in orange)
Figure 15 illustrates the inter-arrival time, denoted as dt,
for an ID with 20ms cycle time during a full DoS with
Trelay = 25ms. The left side where the ID originates is only
USENIX Association
30th USENIX Security Symposium    4269
(i) left channel
(ii) right channel
Figure 15: Arrival time for an ID with a 20ms cycle time on
the left (i) and right channel (ii) at Trelay = 25ms during a full
DoS (ID belongs to the left side)
slightly impaired by the DoS and the mean arrival time re-
mains the same. Delays of 25ms or more do occur, but the
cycle time clearly remains centered around 20ms. On the right
side we simply retransmit the recentmost value of the ID once
the adversary is moved to the left side. This results in an
inter-arrival time of 2× Trelay, i.e., 50ms which can be easily
explained as follows. When the right side is under a DoS
(25ms), it is not possible to retransmit the ID from the left
side (the bus is busy). When the adversary is moved to the left
side, the recent-most value of the ID can be sent by the Bus
Guardian to the right side - but this will be the only known
value for another 25ms until the adversary is released from
the left side. The same phenomenon was observed for all IDs
which allows us to make a generalized statement: in case of a
full DoS, the fastest cycle time that can be achieved with load-
balancing on the side where the ID has to be retransmitted
by the Bus Guardian is 2× Trelay. As car diagnosis systems
commonly report a time-out for a component after delays of
several hundred milliseconds, we believe that the 50ms cycle
time from our implementation (worst case under a full DoS
that would otherwise lock the bus completely) should be sufﬁ-
cient for most messages to keep a vehicle functional. Finally,
since the fastest messages on the CAN bus have a cycle time
of 10ms, a Trelay = 5ms should cope with any subsystem and
is achievable with high performance solid-state relays.
As further insights on the impact of a full DoS on cars
we present more results from a CANoe car simulation in
Appendix B.
6.4 Relay inﬂuence on message arrival time
Since in-vehicle networks handle safety-critical messages for
which the arrival time is critical, we also evaluate the effects
of ﬁltering and retransmission on the cycle time of legitimate
IDs that come from the left or right side of the network. By
(i) original trace from vehicle
(ii) left channel (source)
(iii) right channel (retransmission,
delayed frames as orange circles)
(iv) left channel (source)
(v) right channel (retransmission)
Figure 16: Message cycle time for a frame that originates on
the left-hand side of the network, i.e., ID 0x2F, on the: original
trace (i), left channel (ii), right channel (iii) and histogram
distribution on the left (iv) and right (v) channels
careful analysis of the recorded trace with CANARY’s Bus
Guardian active, we determined that the mean arrival time
deviates by less than 1ms which should be acceptable for
real-time demands.