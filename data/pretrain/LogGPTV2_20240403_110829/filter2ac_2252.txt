### Title: Dynamic Process Isolation at Black Hat Asia 2022

Cloud computing offers flexible, scalable, and high-performance solutions for services. However, sharing hardware resources among multiple customers introduces potential vulnerabilities in both software and hardware. To meet high-performance customer requirements, cloud providers often use in-process isolation rather than strict process isolation. Language-level isolation, such as sandboxed V8 JavaScript isolates, is commonly employed to isolate tenants at the architectural level. While this approach provides security guarantees, single-process designs are vulnerable to microarchitectural attacks, such as Spectre.

In this talk, we will present a remote Spectre attack that exploits an edge-computing solution with in-process language-level isolation, allowing the leakage of secrets from other customers in the cloud. We will also discuss a defense mechanism developed in collaboration with Cloudflare. Cloudflare Workers, one of the leading edge-computing solutions, handles millions of HTTP requests per second for tens of thousands of websites worldwide. To mitigate Spectre attacks, Cloudflare Workers uses a modified V8 JavaScript sandbox that disables all known timers and primitives that can be used to create timers. Despite these precautions, we will demonstrate a method to leak 2 bits per minute using a remote timer and amplification techniques in the V8 engine.

Based on our findings, we introduce Dynamic Process Isolation, a novel solution that leverages hardware performance counters to monitor script isolation and dynamically isolate suspicious workloads into separate processes. This approach strikes a balance between the extremes of full process isolation and language-level isolation. Our real-world analysis shows that Dynamic Process Isolation is a lightweight solution with a false-positive rate of only 0.61%, while providing security guarantees comparable to strict process isolation. This solution has been integrated into the production environment of Cloudflare Workers.

Additionally, we will compare our approach with existing solutions and outline future research challenges in this domain.