# 保护芯片与读写方法

## 读写存储芯片的方法
1. **使用编程器**：通过专用的编程设备对芯片进行数据读写。
2. **使用专用读写座**：将芯片放置于特定的读写座中，以实现数据传输。
3. **直接焊接到SD卡上**：对于某些情况，可能需要将芯片直接焊接在SD卡上以便读取或写入信息。
4. **飞线连接到SD读卡器**：通过细小导线手动连接存储芯片与SD读卡器接口。

## 某款车机系统的在线读写

### 准备工作 - 获取Shell访问权限
- **目标**：
  - 直接从系统导出文件系统（固件），并分析其中的bin文件及web脚本。
  - 提供便捷的数据查看方式，如端口、进程、网络状态和文件结构等。
  - 创建测试环境，包括编译必要的工具软件。
  - 实现方便快捷的在线调试功能，解决因库文件或硬件限制导致离线运行困难的问题。
- **总结**：成功获取shell是破解过程中的关键步骤；远程获取shell意味着已基本完成破解任务。

### 方法
- 扫描开放的服务端口（例如Telnet, SSH, ADB）。
  - 使用masscan或nmap执行快速扫描。
  - 在固件内寻找密码哈希值，并尝试离线破解。
- 利用lsusb命令检查是否启用了USB调试模式。
- 探索Web应用程序中的上传漏洞或命令注入漏洞。
- 修改启动配置文件，在init过程中添加busybox telnetd服务。
- 定位主板上的TTL引脚位置，参考CPU手册文档。
- 使用hashcat工具暴力破解SSH/Telnet登录凭据。
- 采用JTAG接口调整内核参数，引导进入单用户模式。
  - 需要具备JTAG硬件支持及相关软件（推荐使用OpenOCD）。

## 获取通信数据

### 目标
- 理解设备的工作原理，辅助安全分析。
- 收集认证令牌、cookie等敏感信息。
- 识别服务器接口，为后续渗透测试做准备。
- 捕获并修改网络流量，构建PoC验证攻击向量。
- 最终能够发送合法指令或获取重要密钥。

### 方法
- 对于IP协议栈（TCP/UDP/HTTP/MQTT等）：
  - 使用Wireshark实时捕获无线热点下的数据包。
  - 在Android模拟器或真实设备上启用tcpdump监听本地网络。
  - 设置代理服务器拦截HTTPS请求。
  - 逆向工程应用程序以提取加密密钥。
  - 利用Xposed框架或Frida工具hook Java/Native代码执行流程。
- 其他通讯渠道（如GSM、蓝牙等）：
  - 构建虚假基站截获2G移动电话流量。
  - 分析低功耗蓝牙设备的安全性弱点。
  - 通过运营商网络互连特性触发潜在漏洞。

## 分析阶段
结合已获得的文件资源、网络交互记录以及shell权限进行全面的安全审计。重点检查易受攻击的函数调用、未授权访问点等风险因素。

### 示例案例
- **自动售货机**：发现FTP升级服务器密码泄露，支付验证机制存在缺陷。
- **智能手表**：云端登录过程中暴露了加密密钥，允许中间人攻击篡改配置。
- **共享自行车锁**：与服务器间的加密通信被破解，暴露出更新协议中的命令注入漏洞。

## 必备技能与提示
- 精通焊接技术，包括烙铁和热风枪操作。
- 掌握APK反编译、动态调试及Java源码阅读技巧。
- 熟悉Web应用安全测试方法论。
- 具备Python、Java编程能力及基本的二进制逆向知识。
- 能够利用Wireshark解析复杂网络协议。
- 了解跨平台开发环境配置及交叉编译过程。

### 常用工具与命令
- gdb, tcpdump, telnetd, nmap, masscan等多平台兼容工具。
- BusyBox作为嵌入式Linux系统的瑞士军刀级实用程序集合。