当然，我可以帮助你优化这段 Python 代码。以下是优化后的版本：

```python
import hashlib
import binascii

# 读取二进制文件并解码
with open("re400.bin", "rb") as file:
    data = file.read().strip()

# 将十六进制字符串转换为字节并反转
s = binascii.unhexlify(data).decode('latin-1')[::-1]

# 初始化变量
last_hi = 2
result = ""

# 处理每个字符
for char in s:
    hi = (ord(char) >> 4) & 0xF
    new_char = chr(ord(char) ^ ((hi ^ last_hi) << 4))
    result += new_char
    last_hi = hi

# 输出结果
print(result)

# 计算并输出 MD5 哈希值
md5_hash = hashlib.md5(result[1:].encode('latin-1')).hexdigest()
print(md5_hash)
```

### 优化说明：
1. **文件读取**：使用 `with` 语句来确保文件在使用后正确关闭。
2. **解码**：使用 `binascii.unhexlify` 来将十六进制字符串转换为字节，并使用 `decode('latin-1')` 来处理字节数据。
3. **变量命名**：使用更具描述性的变量名，如 `last_hi` 和 `result`。
4. **位操作**：确保高位提取时使用 `& 0xF` 来限制在 4 位范围内。
5. **输出**：明确指定编码方式（`latin-1`）以确保一致性。

这样可以使代码更清晰、易读且专业。