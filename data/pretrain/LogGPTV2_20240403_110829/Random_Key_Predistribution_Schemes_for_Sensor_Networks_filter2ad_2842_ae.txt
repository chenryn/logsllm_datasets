Resisting revocation attack. One possible weakness as-
sociated with distributed node revocation is that each node
holds the potential to cast a vote against m other nodes.
Since the total number of nodes n = m
p , this could represent
a signiﬁcant fraction of the node population. Hence only a
ﬁxed number of nodes need to be compromised without de-
tection in order for them to revoke a signiﬁcant proportion
of the network, regardless of the network size.
To prevent widespread release of revocation keys by
compromised nodes, we require that only nodes that have
established direct communication with some node B have
the ability to revoke B.
We do this by distributing the revocation keys to the vot-
ing members of B in a deactivated form, i.e. each vot-
ing member i stores its revocation key for B kBi masked
(XORed) with some secret SBi. This deactivated key will
not hash to the correct verifying value and is thus use-
less for voting. Node B knows all the activation secrets
SBi, 1 ≤ i ≤ m. During the key discovery and setup phase,
if node i wishes to complete key setup with node B, it re-
quires node B to transmit its activation secret SBi (and vice-
versa). Once node i has received SBi it unmasks kBi using
SBi, and veriﬁes that it was given the correct unmasking se-
cret by performing vote veriﬁcation on the unmasked kBi to
Proceedings of the 2003 IEEE Symposium on Security and Privacy (SP(cid:146)03) 
1081-6011/03 $17.00 ' 2003 IEEE 
see if it is a valid revocation key. Storage of m masking fac-
tors on node B takes only O(m) space and is insigniﬁcant
compared to the total O(m log m) space needed to store the
voting and veriﬁcation apparatus.
Such a policy of need-to-know key activation ensures
that the majority of revocation keys recovered through node
capture are in an unusable masked state.
In order to use
these revocation keys to revoke some node A the adversary
now has to physically communicate with A and complete
key-setup for up to t new connections.
Via this mechanism, the adversary’s ability to attempt
sabotage through this course of action is seriously limited
by the implementation of schemes to limit node replication
and node generation (see next Section 7.1.4). In general,
since resistance against node replication imposes an upper
limit dmax on the degree of a node, once a malicious node
has collected dmax activation values for its revocation keys,
further requests for activation values will be rejected by the
other nodes in the network since it will be detected that this
node is attempting to exceed its maximum allowed degree.
Hence the number of revocation keys issuable by each com-
promised node is limited to dmax.
Even if we do not assume the implementation of schemes
for resisting node replication, the requirement that the ad-
versary establish physical (1-hop) communication with a
target node is a strong disincentive to mount a DoS attack
via revocation. For example, if disruption rather than sub-
version of the network is all that is desired by the adversary
and the adversary has the ability to physically communicate
with the target nodes, then a radio jamming attack is proba-
bly cheaper and more productive than a revocation attack.
The vote-activation mechanism presented above limits
the damage an adversary can inﬂict by broadcasting node
revocations. It does not completely eliminate the potential
for such an attack. However, it does makes it less economi-
cally viable for an attacker to mount a revocation attack.
7.1.4 Resistance against node replication and node
generation
In the event that node capture goes undetected by the net-
work, it is desirable that the network be resistant against the
addition of inﬁltrator nodes derived from captured nodes,
especially considering that resistance may be required to
prevent revocation attack on the network (see Section 7.1.3)
To limit the amount node replication possible on the net-
work, the degree of any node can be limited. We know that
the degree of a node on the network is approximately bino-
mially distributed (m, d
m) with expectation d and variance
close to d (see Section 7.1.3 for derivation). Hence very few
nodes should have degree ≥ 3d, for example. This implies
that we can limit the degree of nodes to dmax where dmax is
some small multiple of d, without disrupting network con-
nectivity.
The expected degree d increases slowly with graph size
n. For example, Equation 1 indicates d = O(log n). Hence
dmax will generally be small compared with the total po-
tential connectivity m.
Since the random-pairwise scheme allows us to have a
notion of authenticated node identity, a method for node-
degree counting for the random-pairwise scheme may be
implemented with the public-vote counting scheme pre-
sented in Section 7.1.3. The operation of the degree-
counting scheme is exactly identical. Each node contains a
voting key and some way to verify valid voting keys. Each
time a given node A forms a connection with some node B,
A broadcasts its voting key for B and vice-versa. Each node
can thus track the degree of all m of the nodes which share
pairwise keys with it, and refuse to form new connections if
the degree becomes too large.
One concern in this case is that we now need to mem-
orize dmax number of cast votes instead of a small num-
ber t. Each vote still requires only log m bits to store
since we only need to store its unique path in the Merkle
tree, hence directly storing dmax votes may still be feasible.
Otherwise, for applications with a relatively large dmax,
we note that an m-bit bit ﬁeld is sufﬁcient to completely
record all m votes since each bit could represent a unique
path in the Merkle tree. Furthermore, since we only need
to provide a rough bound for the number of votes heard,
the bit ﬁeld representation could be compressed using var-
ious lossy sparse-storage directory mechanisms such as the
Coarse Vector [13] and Tristate [1] protocols.
7.2 Evaluation of the random keys scheme
Perfect resilience against node capture. Since each
pairwise key is unique, capture of any node does not allow
the adversary to decrypt any additional communications in
the network besides the ones that the compromised node is
directly involved in. This would be represented in Figure 2
as the line y=0.
Maximum supported network size. The limited global
payoff requirement of Section 5.2.2 cannot be used to com-
pute the maximum network size of the random pairwise
keys scheme because global information revealed from lo-
cal node capture is always 0. Rather, the maximum network
size of a random pairwise keys scheme is ﬁxed at design
time by Equation 6.
The maximum supportable network size for a random
pairwise key scheme without distributed node revocation or
multihop range extension is shown in Figure 3. Figure 6
reﬂects the network sizes for the random pairwise scheme
with all the features mentioned earlier including range ex-
tension. It can be seen that with a range extension of just
two hops, we can get network sizes comparable to the other
schemes in this case. Also, the O(log m) cost of includ-
Proceedings of the 2003 IEEE Symposium on Security and Privacy (SP(cid:146)03) 
1081-6011/03 $17.00 ' 2003 IEEE 
random pairwise, no range extension
random pairwise w/dist. revoc & repl resist, rng ext hops=2
basic scheme
1500
1000
500
t
e
z
s
k
r
o
w
e
n
m
u
m
x
a
m
i
i
.
t
s
e
0
0
500
1000
1500
2500
Memory size in a node (bytes)
2000
3000
3500
4000
Figure 6. Network sizes for random pair-
wise key setup compared against the basic
scheme with and without multipath key re-
Link keys are 128bits, hash
inforcement.
p =
values are 80bits in this simulation.
0.33, fthreshold = 0.1
ing distributed node revocation does not signiﬁcantly im-
pact maximum network size.
Given that the random pairwise scheme has perfect re-
silience against node capture and authentication features,
this is a highly desirable result.
Resistance to revocation attack of distributed scheme.
If resistance against node replication is implemented, then
the theoretical number of nodes an attacker can revoke per
successful node captured is dmax
t which is kd where k is a
small constant. Since any captured node will have an ex-
pected d links in any case, the number of nodes lost through
the revocations due to a captured node is some small con-
stant factor of the links directly lost through the compro-
mise of the node. Furthermore, d grows only slowly with
n, hence the attacker is unable to target a signiﬁcant portion
of the network for revocation if it has only compromised a
small number of nodes. While a revocation attack ampli-
ﬁes the disruptive power of the attacker to some extent, it is
unlikely that an attacker will ﬁnd it economically attractive
to obtain full control of a sensor node only to expend this
successful intrusion in revoking a small constant number of
other nodes (if denial of service is all that is desired by the
attacker, physical destruction of each node is probably more
economical). This is especially true considering that they
must explicitly establish communications with every node
that they wish to revoke.
8 Related Work
9 Conclusion
We ﬁrst review work in establishing shared keys in mo-
bile computing, then review work in sensor network key
establishment.
Tatebayashi, Matsuzaki, and Newman consider key dis-
tribution for resource-starved devices in a mobile environ-
ment [23]. Park et al. [18] point out weaknesses and im-
provements. Beller and Yacobi further develop key agree-
ment and authentication protocols [4]. Boyd and Mathuria
survey the previous work on key distribution and authenti-
cation for resource-starved devices in mobile environments
[6]. The majority of these approaches rely on asymmetric
cryptography. Bergstrom, Driscoll, and Kimball consider
the problem of secure remote control of resource-starved
devices in a home [5].
Stajano and Anderson discuss the issues of bootstrapping
security devices [22]. Their solution requires physical con-
tact of the new device with a master device to imprint the
trusted and secret information.
Carman, Kruus, and Matt analyze a wide variety of ap-
proaches for key agreement and key distribution in sensor
networks [8]. They analyze the overhead of these protocols
on a variety of hardware platforms.
Wong and Chan propose a key exchange for low-power
computing devices [24]. However, their approach assumes
an asymmetry in computation power, that is, one of the par-
ticipants is a more powerful server.
Perrig et al. propose SPINS, a security architecture
speciﬁcally designed for sensor networks [19]. In SPINS,
each sensor node shares a secret key with the base station.
To establish a new key, two nodes use the base station as a
trusted third party to set up the new key.
We review the related work by Eschenauer and
Gligor [10] in Section 4. Anderson and Perrig propose a
key establishment mechanism for sensor networks based on
initially exchanging keys in the clear [2]. Their key infec-
tion approach is secure as long as an attacker arrives after
key exchange and did not eavesdrop the exchange.
Zhou and Haas propose to secure ad hoc networks using
asymmetric cryptography [25]. Kong et al. propose local-
ized public-key infrastructure mechanisms, based on secret
sharing and multiparty computation techniques [14]. Such
approaches are expensive in terms of computation and com-
munication overhead.
Broadcast encryption by Fiat and Naor [11] is another
model for distributing a shared key to a group of receivers.
However, this model assumes a single sender, and that the
sender knows the key pools of all receivers. Subsequent
papers further develop this approach [3, 12, 15].
Efﬁcient bootstrapping of secure keys is of critical im-
portance for secure sensor network applications. Local pro-
cessing of sensor data requires secure node to node commu-
nication. We present three efﬁcient random key predistribu-
tion schemes for solving the security bootstrapping problem
in resource-constrained sensor networks.
Each of these three schemes represents a different trade-
off in the design space of random key protocols. The choice
of which scheme is best for a given application will depend
on which trade-off is the most appealing.
The q-composite scheme achieves signiﬁcantly im-
proved security under small scale attack at the cost of
greater vulnerability to large scale attack. This increases the
attacker’s cost of mounting an attack since the option of har-
vesting a small number of keys in order to extract a random
sample of the readings in the entire network is no longer
appealing, thus forcing the attacker to perform a large scale
node capture attack.
n(cid:1) (where n(cid:1)
The (2-hop) multipath reinforcement scheme improves
security at the cost of network communication overhead.
Since the expected number of common neighbors is pro-
portional to 1
is the expected number of neigh-
boring nodes), this scheme performs best when the deploy-
ment density is sparse relative to the communication radius
of the nodes. It also presents the best characteristics when
the variation in deployment density is low (i.e. nodes are
regularly dispersed).
The random pairwise scheme has the best security prop-
erties of the three schemes. It possesses perfect resilience
against node capture attacks as well as support for node-
based revocation and resistance to node replication. The
properties come with the trade-off that the maximum sup-
ported network size is not as large as the other schemes.
10 Acknowledgments
We are very grateful to Virgil Gligor for his helpful dis-
cussions with us and his suggestions that helped improve
the paper. We are also very grateful to Falk Herrmann for
his feedback and discussions. Finally, we would also like
to thank the anonymous reviewers for their comments and
suggestions.
References
[1] Anant Agarwal, Richard Simoni, Mark Horowitz, and
John Hennessy. An evaluation of directory schemes
for cache coherence. In Proceedings of the 15th An-
nual International Symposium on Computer Architec-
ture, pages 280–289, 1988.
Proceedings of the 2003 IEEE Symposium on Security and Privacy (SP(cid:146)03) 
1081-6011/03 $17.00 ' 2003 IEEE 
[2] Ross Anderson and Adrian Perrig. Key infection:
Smart trust for smart dust. Unpublished Manuscript,
November 2001.
[3] Dirk Balfanz, Drew Dean, Matt Franklin, Sara Miner,
and Jessica Staddon. Self-healing key distribution
with revocation. In Proceedings of the IEEE Sympo-
sium on Research in Security and Privacy, pages 241–
257, May 2002.
[4] M. Beller and Y. Yacobi. Fully-ﬂedged two-way pub-
lic key authentication and key agreement for low-cost
terminals. Electronics Letters, 29(11):999–1001, May
1993.
[5] Peter Bergstrom, Kevin Driscoll, and John Kimball.
Making home automation communications secure.
IEEE Computer, 34(10):50–56, Oct 2001.
[6] Colin Boyd and Anish Mathuria. Key establishment
protocols for secure mobile communications: A se-
lective survey. In Australasian Conference on Infor-
mation Security and Privacy, pages 344–355, 1998.
[7] Michael Brown, Donny Cheung, Darrel Hankerson,
Julio Lopez Hernandez, Michael Kirkup, and Alfred
Menezes. PGP in constrained wireless devices. In 9th
USENIX Security Symposium, August 2000.
[8] David W. Carman, Peter S. Kruus, and Brian J. Matt.
Constraints and approaches for distributed sensor net-
work security. NAI Labs Technical Report #00-010,
September 2000.
[9] W. Difﬁe and M. E. Hellman. New directions in cryp-
IEEE Trans. Inform. Theory, IT-22:644–
tography.
654, November 1976.
[10] Laurent Eschenauer and Virgil D. Gligor. A key-
management scheme for distributed sensor networks.
In Proceedings of the 9th ACM Conference on Com-
puter and Communication Security, pages 41–47,
November 2002.
[11] Amos Fiat and Moni Naor. Broadcast encryption. In
Advances in Cryptology – CRYPTO ’93, volume 773
of Lecture Notes in Computer Science, 1994.
[12] J. Garay, J. Staddon, and A. Wool.
Long-lived
broadcast encryption. In Advances in Cryptology —
CRYPTO ’2000, pages 333–352, 2000.
[13] Anoop Gupta, Wolf-Dietrich Weber, and Todd Mowry.
Reducing memory and trafﬁc requirements for scal-
able directory-based cache coherence schemes.
In
Proceedings of the 1990 International Conference on
Parallel Processing (Vol. I Architecture), pages 312–
321, 1990.
[14] Jiejun Kong, Petros Zerfos, Haiyun Luo, Songwu
Lu, and Lixia Zhang. Providing robust and ubiqui-
tous security support for mobile ad-hoc networks. In
9th International Conference on Network Protocols
(ICNP’01), 2001.
[15] M. Luby and J. Staddon. Combinatorial bounds for
broadcast encryption. In Advances in Cryptology —
EUROCRYPT ’98, pages 512–526, 1998.
[16] R. Merkle. Secure communication over insecure chan-
nels. Communications of the ACM, 21(4):294–299,
1978.
[17] Ralph Merkle. Protocols for public key cryptosystems.
In 1980 IEEE Symposium on Security and Privacy,
1980.
[18] C. Park, K. Kurosawa, T. Okamoto, and S. Tsujii.
On key distribution and authentication in mobile ra-
dio networks. In Advances in Cryptology - EuroCrypt
’93, pages 461–465, 1993. Lecture Notes in Computer
Science Volume 765.
[19] Adrian Perrig, Robert Szewczyk, Victor Wen, David
Culler, and J. D. Tygar. SPINS: Security protocols
for sensor networks. In Seventh Annual ACM Inter-
national Conference on Mobile Computing and Net-
works (MobiCom 2001), July 2001.
[20] Ronald L. Rivest, Adi Shamir, and Leonard M. Adle-
man. A method for obtaining digital signatures and
public-key cryptosystems. Communications of the
ACM, 21(2):120–126, 1978.
[21] J. Spencer. The Strange Logic of Random Graphs.
Number 22 in Algorithms and Combinatorics. 2000.
[22] Frank Stajano and Ross Anderson. The resurrect-
ing duckling: Security issues for ad-hoc wireless net-
works. In Security Protocols, 7th International Work-
shop, 1999.
[23] M. Tatebayashi, N. Matsuzaki, and D. B. Jr. Newman.
Key distribution protocol for digital mobile commu-
nication systems. In Advances in Cryptology - Crypto
’89, pages 324–334, 1989. Lecture Notes in Computer
Science Volume 435.
[24] Duncan S. Wong and Agnes H. Chan. Efﬁcient and
mutually authenticated key exchange for low power
computing devices.
In Advances in Cryptology —
ASIACRYPT ’2001, 2001.
[25] Lidong Zhou and Zygmunt J. Haas.
Securing ad
hoc networks. IEEE Network Magazine, 13(6):24–30,
November/December 1999.
Proceedings of the 2003 IEEE Symposium on Security and Privacy (SP(cid:146)03) 
1081-6011/03 $17.00 ' 2003 IEEE