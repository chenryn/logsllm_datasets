### Problem Description
I have a script that creates files in a user-specified directory. However, the user might select a directory where they do not have the necessary permissions to create files, but they can rename the directory. For testing purposes, I created a directory `C:\foo` with the following permissions:

- Traversing directory/Execute file
- Removing subfolders and files
- Read permissions
- Change permissions
- Take ownership

The user does not have the following permissions for `C:\foo`:
- Full Control
- File creation
- Folder creation

### Attempts So Far
I have tried the following approaches to check if the user has write permissions to `C:\foo`:

```python
import os
import stat

# Check if the directory is writable
os.access('C:\\foo', os.W_OK)

# Check if the directory has write permissions
st = os.stat('C:\\foo')
mode = st[stat.ST_MODE]
mode & stat.S_IWRITE == True
```

These checks return `True` because the user can rename the directory, making it appear as though it is writable. However, the user cannot create files or folders within `C:\foo`.

### Question
How can I write code that will check if the current user has the necessary permissions to create files and folders in a given directory?

### Context
This requirement arises from a test case in the 'Certified for Windows Vista' program, which states:

> The application must not allow the Least-Privileged user to save any files to the Windows System directory in order to pass this test case.

### Clarification
Should this be interpreted as:
1. The application may attempt to save a file in the Windows System directory but should handle the failure gracefully.
2. The application must perform security checks before attempting to save a file.

### Additional Information
I recently developed an application to meet the ISV (Independent Software Vendor) certification requirements, which included the same condition. My understanding was that a Least-Privileged user would not have the necessary permissions to write to system directories. Therefore, I implemented a solution where I attempt to create the file and catch any exceptions, then inform the user that they do not have permission to write to that directory.

### Conclusion
In my opinion, if the user is Least-Privileged, they should not have the necessary permissions to write to system directories. If they do, they are not a Least-Privileged user. Given that Windows Vista itself restricts Least-Privileged users from writing to `%WINDIR%`, should I still bother implementing additional checks, or is it sufficient to rely on the operating system's restrictions?

### Summary
- **Problem**: Need to check if a user has file and folder creation permissions in a specified directory.
- **Context**: Requirement from the 'Certified for Windows Vista' program.
- **Clarification Needed**: Should the application handle failures gracefully or perform pre-checks?
- **Opinion**: Relying on OS restrictions might be sufficient, but additional checks can enhance robustness.