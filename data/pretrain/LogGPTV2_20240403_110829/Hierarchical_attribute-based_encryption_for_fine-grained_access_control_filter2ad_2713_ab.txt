nA
ni
SKiti ;u;aij
)
)
^e(Uij ;nAQi(j−1))
nA
ni
ti∏
k=2
Ui)
Ui)
^e(Q0;nArP1)
^e(Uij ;nAQi(j−1))
^e(Qi(k−1);nAUik)^e(SKiti ;u;
nA
ni
= V (cid:8) H2(
^e(SKiti ;u;
= V (cid:8) H2(ˆe(Q0; nArP1))
Remark. To achieve better performance, we enable user
U to send the value of Q-tuplei(ti−1) to the CSP before de-
ˆe(Uij; nAQi(j−1))). Given this value, U executes
crypting data, so that the CSP can help to calculate the
as required:
ti∏
value of
j=2
)
j=2
the bilinear map operations for two times to recover the ﬁle.
736ni∑
j=1;j̸=k
ti∏
ˆe(U0; nA
ni
SKiti;u;aij + nA
ni
′
SKiti;u
;aik
+ (cid:11))
= ˆe(U0; SK1)nA
ˆe(Qi(t−1); Uit)nA ˆe(rP0; (cid:11))
t=2
ˆe(mku
′ mkiti P0; rPaik )
nA
ni ˆe(mkumkiti P0; r
ni∑
Performance. The HABE scheme eliminates the on-line
inquiry for authenticated attribute public keys. When there
is only the ﬁrst level DM to administer all attributes, a user
needs to execute one bilinear map and O(N ) number of point
multiplication operations to output a ciphertext of O(N )
length, and O(1) bilinear map operations to recover a ﬁle.
4. SECURITY INTUITION
Recall that a conﬁdential ﬁle f is encrypted in the form
of f (cid:8) H2(ˆe(Q0; rnAP1)). Therefore, an adversary A needs
to construct ˆe(Q0; rnAP1) = ˆe(U0; SK1)nA to decrypt Cf . A
can request any user key of his choice other than possessing
a suﬃcient set of attribute keys to decrypt Cf .
For ease of presentation, we have the following assump-
tions: A has requested attribute secret keys for user U on
all but one of the attributes ai1; : : : ; ai(k−1); ai(k+1); : : : ; aini
in CCi, and for user U ′
The only occurrence of SK1 is in the user attribute secret
key, therefore adversary A has to use the attribute secret
keys requested for U and U ′
for the bilinear map, yielding:
on the missing attribute aik.
nA
ni
Paij )
j=1;j̸=k
for some (cid:11). To obtain ˆe(U0; SK1)nA , the last four elements
have to be eliminated. However, the values of the last two
elements are unknown to the adversary, and cannot be con-
structed. Therefore, A cannot recover the ﬁle.
5. REVOCATION
Inspired by Yu et al [3], we make slight alterations into
our HABE scheme, and apply proxy re-encryption and lazy
re-encryption into our scheme.
Modi(cid:12)cations in keys: We enable each attribute a with
IDa to be bound to a version number, which increases by one
whenever a user associated with a is revoked. Therefore, an
attribute public key is the form of PKt
a, PKi, IDa),
where t 2 Zq is the version number of the attribute public
key, and vt
is a string corresponding to t.
a 2 f0; 1g∗
a=(vt
a, and outputs Hmki (PKt
Modi(cid:12)cations in algorithms: First, we enable the Cre-
ateDM algorithm to uniformly and randomly generate a
hash function Hmki : f0; 1g∗ ! Zq for DMi, where Hmki is a
random oracle. Second, we construct another algorithm Cre-
ateAttribute(PKt
a, mki), which is executed by DMi when-
a)P0 2
ever it receives a request for P t
G1. Therefore, the ﬁrst step in the Encrypt algorithm turns
into requesting P-values of all attributes in A from the DMs.
When a user is revoked, denoted V, it is imperative to
update public keys of attributes in SV , and attribute secret
keys for remaining users who possess at least one attribute
in SV , and re-encrypt data whose access structure speciﬁes
at least one attribute in SV , where the set SV contains all at-
tributes associated with V. If all these tasks are performed
by the DMs themselves, it would introduce a heavy com-
puting overhead and may also require the DMs to always be
online. Therefore, we get the idea to take advantage of the
abundant resources in a cloud by delegating to CSPs most
of the computing tasks in revocation.
′
a
a
a = Hmki (PKt+1
)(cid:0)Hmki (PKt
The main process is as follows: First, for each attribute
a in SV , we enable the DM to update PKt
a with PKt+1
by adding each version number to 1, and compute the the
PRE key with Pkeyt+1
a). After
sending the update messages to the CSP, the DMs can go
oﬀ-line. Second, for every attribute in SV , the CSP stores a
new attribute public key and PRE key received in a proper
position in an attribute history list (AHL). Whenever an ac-
cess request is received from a user, denoted U, it ﬁrst checks
whether all attributes in the data access structure are the
latest ones. If so, it returns the data directly. Otherwise, it
re-encrypts the data, and tells the user to update his overdue
attribute secret keys, using related PRE keys, as follows:
, U0 = U
; [U
′
0; U
= (A′
′
12; : : : ;
]) is the original cipher-
to CT
∑
′
N tN ; U
Data Re-encryption. Suppose CT
′
1t1 ; U
′
N 2; : : : ; U
′
1; : : : ; U
′
0, and Ui = U
∧
a)U0, for 1 (cid:20) i (cid:20) N , where t
U
text. The CSP inquires the AHL and re-encrypts CT
by setting V = V
a∈SV
′
CC
′
i
′
(Pkeyt
a + : : : + Pkeyt
and
t are the version numbers of a’s public key in A′
and the
latest version number of a’s public key in AHL, respectively.
Key Update. For every attribute a in SU , which is
a set of overdue attributes associated with user U, U up-
′
dates corresponding attribute secret key SKt
i;u;a to SKt
i;u;a
′
by setting SKt
i;u;a = SKt
i;u;a + PkeyaSKi;u, in which Pkeya,
′
taken from the CSP, is set to be Pkeyt
a + : : : + Pkeyt
a =
Hmki (PKt
are the version
numbers of a’s public key for U and the latest version num-
ber of a’s public key in AHL, respectively.
′
a ), where t and t
a) (cid:0) Hmki (PKt
′
′
N ; V
′
i +
+1
′
+1
′
′
6. CONCLUSION AND FUTURE WORK
In this paper, we construct a scheme, which has several
traits: (1) high performance; (2) ﬁne-grained access control;
(3) scalability; (4) full delegation. Our HABE scheme, which
is also collusion resistant, can be proven to be semantically
secure against adaptive chosen plaintext attacks under the
BDH assumption and the random oracle model [1].
In future work, we will work towards designing a more
expressive scheme, which can be proved to have full security
under the standard model, with better performance.
7. ACKNOWLEDGMENTS
This work is supported by National Natural Science Foun-
dation of China under Grant Nos. 90718034 & 60773013,
the Program for New Century Excellent Talents in Univer-
sity under Grant No. NCET-06-0686, and the Program for
Changjiang Scholars and Innovative Research Team in Uni-
versity under Grant No. IRT0661.
8. REFERENCES
[1] C. Gentry and A. Silverberg. Hierarchical ID-Based
Cryptography. In Proceedings of ASIACRYPT 2002,
pages 548-566.
[2] S. Muller, S. Katzenbeisser, and C. Eckert. Distributed
Attribute-Based Encryption. In Proceedings of ICISC
2008, pages 20-36.
[3] S. Yu, C. Wang, K. Ren, and W. Lou. Achieving
Secure, Scalable, and Fine-grained Data Access Control
in Cloud Computing. In Proceedings of IEEE
INFOCOM 2010, pages 534-542.
737