Read_master_Log_Pos:16550261
slave_SQL_Running:Yes
Replicat_Do_DB:WATCDBO1,WATCDB02,WATCDB03,WATCD4
slave_lO_Running:Yes
master_Log_File:mysql-bin.002810
Relay_Log_File:relay-bin.000419
slave_lO_State:Waitingformastertosendevent
Connect_Retry:10
master_User:repl
master_Host:192.168.110.216
第6章备份与恢复·225
---
## Page 240
226·第二部分故障诊断与性能优化篇
的开发人员分别来自MySQL、Facebook、SkySQL公司，目前已经有一些大型产品业务测
6.2.2
Mydumper工具的主页：http://www.mydumper.org/。
注：--dump-slave用于在slave端dump数据，建立新的slave。
这里会记录slave的那个点，注意CHANGEmaster相关的加粗字体。
master_LOG_POS=16550261;
--CHANGEmasterTOmaster_LOG_FILE='mysql-bin.002810',
--MySQLdump10.13Distrib 5.5.20,forlinux2.6(x86_64)
然后把数据导出来，如下所示：
1row in set(0.00 sec)
master_SSL_Verify_Server_Cert:No
[root@MySQL5~]#more/u1/all.sql
C
[root@MysQL5~]#/usr/local/mysql/bin/mysqldump-A--dump-slave=2-q--single-transaction>/u1/all.sql
Positiontostartreplicationorpoint-in-timerecoveryfrom(themasterof this slave)
Serverversion
Host:localhost
Replicate_lgnore_Server_Ids:
Replicate_Wild_lgnore_Table:
取代mysqldump的新工具mydumper
Seconds_Behind_master:0
Exec_master_Log_Pos:16550261
master_SSL_CA_Path
master_SSL_CA_Fil:
master_SSL_Cipher:
master_SSL_Allowed:No
master_Server_Id:2163306
master_SSL_Key:
master_SSL_Cert:
Relay_Log_Space:547
Until_Condition:None
Last_SQL_Error:
Last_SQL_Errno:0
Until_Log_Pos: 0
Last_io_Errno:0
Until_Log_File:
Database:
Last_Io_Error:
Skip_Counter:0
Last_Error:
Last_Errno:0
---
## Page 241
装命令如下所示：
试并使用了该工具。我们在恢复数据库时也可使用myloader工具。
口-logfile,-L：mysqldumper的日志输出，一般在Daemon模式下使用。
口
-ignore-engines,-i:忽略的存储引擎。
-user,-u：用户备份的连接用户。
Mydumper中的主要参数如下：
#wget http://launchpadlibrarian.net/77098505/mydumper-0.5.2.tar.gz
了解了mydumper 的特色后，我们再来看看它的安装方法（在CentOS 6.0上测试），安
口可以用守护进程的工作方式，定时扫描和输出连续的二进制日志。
口-host,-h：连接的MySQL服务器。
#yum install glib2-develmysql-develzlib-develpcre-devel
口可多线程恢复（适用于0.2.1+)。
口可快速进行文件压缩（File compression on-the-fly）。
口具有事务性和非事务性表一致的快照（适用于0.2.2+)。
口相比于mysqldump，其速度快了近10倍。
口采用轻量级C语言写的代码。
Mydumper的主要特性包括：
口
口
口
口
口
口
口
L
L
口
口
口
口
-snapshot-interval,-I：dump 快照间隔时间，默认60 s。
-verbose,-v: 0= silent, 1= errors, 2 = warnings,3= info，默认是 2。
-kil-long-queries,-k：可以设置kill长查询。
-long-query-guard：长查询，默认60 s。
-no-schemas,-m：不导出表结构。
-password,-p：用户的密码。
make;makeinstall
-daemon,-D：启用守护进程模式。
cmake.
cdmydumper-0.5.2
-regex,-x：支持正则表达式，如 mydumper-regex”^(?!(mysqltest)’。
1-build-empty-files，-e：默认无数据则只有表结构文件。
1-database,-B：需要备份的数据库。
1-socket,-S：连接socket文件。
1-port,-P：连接端口。
tar-xzvf mydumper-0.5.2.tar.gz
-outputdir,-o：输出的目录。
-table-list,-T：需要备份的表，用逗号（,）分隔。
支持导出 binlog。
第6章备份与恢复·227
---
## Page 242
228
·第二部分故障诊断与性能优化篇
试环境，XXDB数据库的大小如图6-1所示。
现在，可以通过对mysqldump 和mydumper的对比测试来了解它的性能。先来看看测
用自带的MySQL导人该XXDB数据库，耗时25分钟4秒，如图6-5所示。
用myloader导入该XXDB数据库，耗时12分钟6秒，如图6-4所示。
用mydumper导出该XXDB数据库，耗时1分钟36秒，如图6-3所示。
用mysqldump导出该XXDB数据库，耗时2分钟16秒，如图6-2所示。
测试过程如下：
-overwrite-tables,-o：指定导出的目录。
-directory,-d：要还原的数据目录。
myloader的大多数参数和mydumper一样，不同之处如下：
下面再来看一下两种工具导人的耗时情况。
root@--011]#
0m18.147
to--011]#time
0m14.839
Om56.
1m36.137
-011]#tine
BLE
12m6.779g
033
SCHEMA
ser
time
图6-2mysqldump导出数据耗时
8.4636689294131.0688858032034.532554732636
mysqldunp
DATA_LENGTH
25m4.070s
图6-3mydumper导出数据耗时
图6-5自带MySQL导人耗时
0m7.265s
图6-1
图6-4myloader导人耗时
-01bak]#time mysq]
mylo
数据库的大小统计信息
INIEX_LENGTH
/GRPDB.sq
DATA_INDEX
BDB
d/bak/1
---
## Page 243
有写操作等待，直到导出结束后才会写入新产生的binlog里，然后旧的binlog会被删除掉。
需的时间较少，但还原数据则会使用较多的时间。
原星期一的全量备份和从星期二至星期五的所有增量备份。这种备份策略相对来说备份所
份，星期二至星期五则进行增量备份。假设星期五的时候数据被破坏了，恢复时则需要还
6.2.3
一般该备份放在凌晨1:00操作较合适。
而导入的时间，myloader要比自带的MySQL快1倍。
MySQL增量备份脚本如下：
#MySQL增量备份脚本，建议在 slave 从库上运行、并开启log_slave_updates=1
这个全量备份脚本，会在导出的时候锁住全局表，并刷新产生一个新的binlog，期间会
foriin'mysql-uroot-p123456-e"show databases"| grep-v"Database""
#MysQL全量备份脚本，建议在 slave从库上运行，并开启log_slave_updates=1
MySQL全量备份脚本如下：
在采用逻辑备份全量，增量备份脚本的备份方式时，
从上面的测试很明显可以看出，dump导出的时间，mydumper要比 mysqldump快1倍。
mysql-uroot-p123456-e"\!cp-pSpath/Si/backup/SdateDiR/data/;"
foriinSbinlog_cp
binlog_cp=head-n-1$path/mysql-bin.index|sed's/.V//"
path=/usr/local/mysql/data
mkdir-pSdateDIR/data
dateDIR='date+"%y-%m-%d"
cd/backup
#!/bin/bash
mysql-uroot-p123456-e"purgebinary logsto'Sbinlog_rm"
binlog_rm='tail-n1$path/mysql-bin.index|sed's/.V//"
-q --lock-all-tables --flush-logs-E-R--triggers-BSi| gzip >
mysqldump-uroot-p123456--default-character-set=utf8\
done
done
/backup/$dateDIR/data/$(i)_S{dateDIR}.sql.gz
path=/usr/local/mysql/data
mkdir-p$dateDiR/data
dateDIR='date+"%y-%m-%d"
cd/backup
mkdir/backup
#!/bin/bash
逻辑备份全量、增量备份脚本
一般情况下，星期一进行全量备
第6章备份与恢复·229
---
## Page 244
230·第二部分故障诊断与性能优化篇
xtrabackup-2.1.3-608.tar.gz
份时不影响数据读写），是商业备份工具 InnoDB Hot Backup的一个很好的替代品。下面具
公司发布了一个xtrabackup热备份工具，和官方付费版的功能一样，支持在线热备份（备
Hot Backup是付费的，只能试用30天，只有购买企业版才可以得到永久使用权。Percona
复制，一般用于7×24小时不间断的重要核心业务。MySQL社区版的热备份工具InnoDB
6.3热备份与恢复
binlog 删除掉，期间若有写操作，也会写入到新的 binlog 里。
的 binlog，然后把之前有变化的binlog复制到备份目录下，复制完以后就会把之前的旧
含两个工具：
InnoDBHotBackup的功能，
体介绍一下这个软件的使用方法。
xtrabackup是Percona公司的开源项目，
热备份的方式也是直接复制数据物理文件，和冷备份一样，但热备份可以不停机直接
#wgethttp://www.percona.com/redir/downloads/XtraBackup/LATEST/binary/Linux/i686/percona-
口 xtrabackup是用于热备份InnoDB及XtraDB表中数据的工具，不能备份其他类型的
在执行全量备份脚本以后，就可以执行这个增量备份脚本了，首先会刷新产生一个新
口innobackupex是要使用的备份工具。
#tar zxvfpercona-xtrabackup-2.1.3-608.tar.gz
口 innobackupex是将xtrabackup 进行封装的 perl脚本，它提供了备份 MyISAM表的
说明：
Irwxrwxrwx1rootroot12Jun1215:26innobackupex-1.5.1->innobackupex
#cd percona-xtrabackup-2.1.3/bin
-rwxr-xr-x1rootroot66MApr1105:44xtrabackup_56#cp*/sbin/
-rwxr-xr-x1rootroot109KApr1105:51innobackupex
下面来看看xtrabackup 的安装方法，安装命令如下：
mysql-uroot-p123456-e"purgebinary logsto'Sbinlog_rm"
rwxr-xr-x1rootroot13MApr1105:34xtrabackup_55
rwxr-xr-x1rootroot9.8MApr1105:51xtrabackup
rwxr-xr-x1rootroot2.0MApr1105:51xbstream
rwxr-xr-x1rootroot2.0MApr1105:51xbcrypt
total92M
[root@M1bin]#Il-h
binlog_rm='tail-n1$path/mysql-bin.index|sed's/.V/
表，也不能备份数据表结构。
备份。
能力。由于innobackupex的功能更为全面完善，所以一般选择innobackupex 来进行
，它能非常快速地备份与恢复MySQL数据库。
用以实现类似InnoDB官方的热备份工具
xtrabackup中包
---
## Page 245
b7b7-000c290a6b8f:1-2
并且会记录当前binlog的文件名和position点，以方便同步复制用。
innobackupex:MysQLbinlogposition:filenamemysql-bin.000001,position552,gtid_executedcf716fda-74e2-11e2
--password：指定连接数据库的密码。
--user：指定连接数据库的用户名。
1．全量备份（不加--databases，默认全部数据库）
再来了解一下Innobackupex参数，具体说明如图6-6所示。
 tar4ibd是以tar 流的形式产生备份时用来打包的工具。
xtrabackup_51xtrabackup_55是xtrabackup运行时需要调用的工具。
MySQL#/etc/init.d/mysqlstop
1）停止MySQL数据库。命令如下：
全量恢复的操作步骤如下：
2.全量恢复
13061215:41:27innobackupex:completedOK！
13061215:41:27innobackupex:Connectiontodatabaseserverclosed
备份成功后会提示：
口/bak/：是备份文件的存放位置。
--defaults-file：指定数据库的配置文件。
innobackupex:Backupcreatedindirectory'/bak/2013-06-12_15-40-00'
说明：
innobackupex--user=root--password=123456--defaults-file=/etc/my.cnf/bak/
进行全量备份的命令如下：
-socket=SOCKET
-sleep
1
defaultsfile
databases=LIST
copy
WORD
MySQL服务器的
端压备
VSOL
xtrabackup的-defaults-fle参数
量减小对正常业务
数是给
图6-6Innobackupex参数说明
支持ibbackup，xtrabackup还没有实现该功能；
stream
会将
stave的相关信息记录到ibbackup_slave_info文件
ASTERTO继续slave的同步
参数后
tySQL服务器的daladr
第6章备份与恢复·231
---
## Page 246
232·第二部分故障诊断与性能优化篇
假设：
3.备份到远程服务器
6）重新启动MySQL数据库，命令如下：
chown-Rmysql.mysql/usr/local/mysql/data/
5）数据恢复完成之后，需要修改相关文件的权限，命令如下：
13061215:59:11innobackupex:completedOK！
innobackupex:Finished copyingback files.
物理文件和事务日志恢复成功后会提示：
4）将备份文件中的数据恢复到数据库中，命令如下：
事务日志恢复成功后会提示：
innobackupex--defaults-file=/etc/my.cnf--apply-log/bak/2013-06-12_15-40-00
3）将备份文件中的日志应用到备份文件中的数据文件上，命令如下：
Originaldata directory'/usr/local/mysql/data'isnotempty!at/sbin/innobackupexline582.
注意：如果没有删除，恢复时将报错。报错信息如下：
2）删除老数据库中的数据文件和事务日志文件。
/etc/init.d/mysqlstart
/usr/local/mysql/data
innobackupex:backtooriginallnnoDBlogdirectory/usr/local/mysql/data
nnobackupex:in′/bak/2013-06-12_15-40-00
nnobackupex:backto'/usr/local/mysql/data
nnobackupex:in′/bak/2013-06-12_15-40-00'
inobackupex:StartingtocopyInnoDBundotablespaces
/usr/local/mysql/data/ibdata1'
innobackupex:Copying'/bak/2013-06-12_15-40-00/ibdata1'to
innobackupex:in'/bak/2013-06-12_15-40-00'
innobackupex:StartingtocopyInnoDBsystemtablespace
innobackupex--defaults-file=/etc/my.cnf--copy-back/bak/2013-06-12_15-40-00/
nnobackupex:StartingtocopyInnoDBlogfiles
13061215:51:28innobackupex:completed0K！
InnoDB:Shutdowncompleted;logsequencenumber3143306391
InnoDB:Starting shutdown...
InnoDB:FTSoptimizethreadexiting.
xtrabackup:startingshutdownwithinnodb_fast_shutdown=1
nnobackupex:Copying'/bak/2013-06-12_15-40-00/ib_logfile0'to
---
## Page 247
9ed0-000c290a6b8f:1-2
last_Isn =3143306401
to_Isn=3143306401
进人到备份目录，可以看到哪份是全量备份，哪份是增量备份，如下：
13061216:59:56innobackupex:Connectionto database serverclosed
innobackupex:MysQLbinlogposition:filename'mysql-bin.000001',position637,gtid_executedc25abacf-d336-11e2-
innobackupex:Backupcreated indirectory'/bak/incrementbak/2013-06-12_16-59-27"
备份成功后会提示：
2）再进行增量备份，命令如下：
进行增量备份的前提是必须已经做过全量备份，步骤如下：
解压后按普通备份恢复的步骤进行恢复即可。
注意：恢复解压缩时，必须使用-i参数：
进行全量恢复时，其操作步骤基本和前面的普通备份恢复类似。
innobackupex--defaults-file=/etc/my.cnf--incremental/bak/incrementbak
5.增量备份
4.全量恢复
innobackupex:Youmustuse-i(--ignore-zeros)optionforextractionof thetarstream.
备份成功后会提示：
PI:EMAIL cat">/bak/backup.tar
innobackupex--defaults-file=/etc/my.cnf-stream=tar/usr/local/mysql/data|ssh
采用如下命令进行备份：
目标服务器IP：192.168.8.26
compact=0