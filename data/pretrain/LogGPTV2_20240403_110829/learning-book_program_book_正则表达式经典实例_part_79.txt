---
## Page 426
候你可能会期望能够更进-一步要求标签满足（X)HTMIL或XML语法规则。这样一种健壮
的解决方案还会要求我们避免匹配在注释、脚本语言代码（其中可能会在数学操作中
用到大于和小于符号）、XML的CDATA片段和各种其他结构中出现的内容。要解决
这个问题，可以首先查找这些可能会有问题的片段，然后只在这些匹配之外的内容中
查找标签。
实例3.18中讲解了如何编写代码来查找另外个正则表达式匹配之间的内容。它需要
2个模式：一个内层正则式和一个外层正则式。前面所给的解决方案可以用作我们的内
层正则式。这个方案可以把有问题的片段隐藏到内层正则式的视线范围之外，因此得
到一个相对简单的解答。
(X)HTML的外层正则式。下面的正则式会匹配注释，以及元素、、
和（包括它们的内容）：
|"]1"[^"]*"|
（+
#特殊元素及其内容
""]没有引起来的字符
"[^"]*”#双引号引起来的值
！'[^']*；
#单引号引起来的值
) * ?
（？：#单体标签
/>
1#否则，把元素的内容和对应的结束标签包含进来
>.*？
正则选项：不区分大小写、点号匹配换行符、宽松排列
正则流派：.NET、Java、PCRE、Perl、Python、Ruby
个正则式在JavaScript中都无法正确执行。下面的正则式又回到了前面不易读懂的形式，
并且把其中的点号替换为是一个较少看到但是却得到广泛支持的元素。它和类似，会保留所有的空格，并且使
用一种默认的等宽字体，但是它会更进一步把所有的内容（包括HTML标签在内）都显示为纯文本。
在HTML3.2中，被标记为不推荐使用，而在HTML4中已经被彻底删除。
410第8章
www.TopSage.com
---
## Page 427
|"']I"[^"] *"|
(•[S\s\]、、和
这些标签，所以这些标签就不会被第二个（内层）正则式匹配到，而我们想要
查找的是所有的标签。然而，其实我们只需要添加一点点额外代码就可以对这些标签
进行特殊的处理。这些（外层）正则式已经把标签名称捕获到了第1个向后引用中，
因此可以用它来检查所匹配到的是-个注释还是标签（如果是标签，那么你还可以知
道是哪个标签）。
XML的外层正则式。这个正则式会匹配注释、CDATA片段和DOCTYPE。其中每种
情形都会使用一个单独的模式来匹配，而这3种模式会使用多选操作符组合成一个
正则式：
1*[]1<>])\>
1.*[.]
正则选项：不区分大小写、点号匹配换行符
正则流派：.NET、Java、PCRE、Perl、Python、Ruby
下面我们给出它的宽松排列模式：
注释
CDATA片段
文档类型声明
"]
#非特殊字符
1"[] * "
#双引号引起来的值
#单引号引起来的值
2#1
) *
正则选项：不区分大小写、点号匹配换行符、宽松排列
正则流派：.NET、Java、PCRE、Perl、Python、Ruby
下面是一个可以用于JavaScript的版本（其中不支持“点号匹配换行符”和宽松排列
选项）：
||"]1"["] *"|
1，*[].
正则选项：不区分大小写
正则流派：JavaScript
标记语言和数据交换
411
www.TopSage.com
---
## Page 428
变体
匹配合法的HTML4标签
你偶尔可能会想要把查找范围限制到合法的HTML元素之上，特别是在非HTML文
档中查找标签的时候，这时就需要额外小心，不要匹配到假阳性的标签。下面的正则
式会只匹配91个合法的HTML4元素。这个列表中没有包含非标准的HTML，例如
一些专有的标签、、和。它也没有包含在XHTML
1.1中的元素（XHTML1.0没有添加新的标签），或者是在HTML5中计划添加的新
元素：
body|br|button|caption|center|cite|code|col|colgroup|dd|del|dfn|dir|div|
dl |dt |em| fieldset|font | form|frame| frameset |h1|h2 |h3|h4 |h5|h6|head|hr |html |
i |iframe | imglinput| ins |isindex  kbd|label|legend |li |link|map |menu (meta |
xsesduodonodoooxsousugo
tfoot|th|thead|titleltr|tt[u|ul| var)\b(?:[^>"']1"["} *"|*[^'] **) *>
正则选项：无
正则流派：.NET、Java、JavaScript、PCRE、Perl、Python、Ruby
可以通过减少由元字符分隔的选择分支，提高这个正则式的执行速度。因此我
们会尽量使用字符类和可选的后缀。这些改动会显著减少正则引擎需要执行的回溯
的数量。我们来看一个例子，假设正则引擎在目标文本中遇到了"*]1"[^"] *"|*[^']*′) *>
正则选项：不区分大小写
正则流派：.NET、Java、JavaScript、PCRE、Perl、Python、Ruby
这读起来肯定会更难懂一些，下面的宽松排列形式稍好一些：
"]
#除了>、”或、之外的任意字符
#双引号引起来的属性值
#单引号引起来的属性值
) *
正则选项：不区分大小写
正则流派：.NET、Java、PCRE、Perl、Python、Ruby
如果不介意其中使用太多空白，那么下面是同一个正则表达式的另外一种宽松排列形
式，它读起来会更加容易：
L
/？#支持结束标签
要把标签名称捕获到第1个向后引用中
a(?:bbr
#
1cronym
#
|ddress
#
Ipplet
#
Irea
#
)？ 1
#可选分组（支持）
b(?: ase (?:font)?
#，
Ido
#
1ig
#
1lockquote
#
1ody
#
Ir
#
Iutton
#
(
可选分组（支持）
c(?:aption
#
Ienter
标记语言和数据交换
413
www.TopSage.com
---
## Page 430
1ite
#
1o（?:de|l(?:group)?）#，
,
）
#
d(?:[dlt]
#
，，
Iel
#
1fn
#
1i[rv]
非
,
）|
#