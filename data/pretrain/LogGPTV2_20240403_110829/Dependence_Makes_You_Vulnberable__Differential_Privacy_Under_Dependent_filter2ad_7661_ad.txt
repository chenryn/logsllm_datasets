P (Dj = dj|Di = di2 )P ((cid:101)Dj =(cid:101)dj|Dj = dj)
(cid:16)−(cid:107)(cid:101)dj−dj(cid:107)1
(cid:80)
(cid:16)−(cid:107)(cid:101)dj−dj(cid:107)1
(cid:80)
P (Dj = dj|Di = di1) exp
(cid:16)−(cid:107)(cid:101)dj−dj(cid:107)1
(cid:80)
P (Dj = dj|Di = di2) exp
(cid:19)
(cid:18)
P (Dj = dj|Di = di1) exp
−(cid:107)(cid:101)dj−dmin
(cid:32)(cid:107)dj − dmin
(cid:33)
(cid:107)1
(cid:107)1
(cid:19)
j
σ()
(cid:18) ∆Dj
j
σ()
exp
σ()
σ()
σ()
dj
dj
dj
dj
dj
= max
di1 ,di2
≤ max
di1 ,di2
≤ maxdj exp
(14)
(cid:17)
(cid:17)
(cid:17)
≤ exp
σ()
(15)
where dmin
.
Comparing Eq. 14 and Eq. 15, we have ρij ≤ 1. Furthermore,
it is obvious that
is the value of dj that minimizes exp
σ()
j
(cid:16)(cid:107)(cid:101)dj−dj(cid:107)1
(cid:17)
(16)
Comparing Eq. 14 and Eq. 15, we have ρij ≥ 0. Finally,
combining Eq. 11–14, we have
P (Dj = dj|Di = di1)P ((cid:101)Dj =(cid:101)dj|Dj = dj)
P (Dj = dj|Di = di2)P ((cid:101)Dj =(cid:101)dj|Dj = dj)
P (A([Di = di1 , Dj]) = [(cid:101)di,(cid:101)dj])
P (A([Di = di2, Dj]) = [(cid:101)di,(cid:101)dj])
(cid:18) ρij∆Dj
(cid:19)
(cid:18) ∆Di
(cid:18) (∆Di + ρij∆Dj)
(cid:19)
max
di1 ,di2
≤ exp
(cid:19)
σ()
σ()
exp
= exp
σ()
(cid:80)
(cid:80)
dj
dj
Therefore, the sensitivity under the dependence relationship
between Di and Dj can be computed as ∆Di + ρij∆Dj.
The dependence coefﬁcient ρij ∈ [0, 1] serves as an ef-
fective metric to evaluate the dependence relationship between
≥ 1
di
ρij =
where d∗
Dj from the privacy perspective.
two tuples in a ﬁne-grained manner. We make the following
observations about ρij:
• ρij evaluates the dependence relationship between Di and
• ρij = 0 corresponds to the setting where P (Dj = dj|Di =
di) is independent of di. Therefore, the mechanism that
satisﬁes DP is just a special case of our analysis that
takes arbitrary dependence relationship between tuples into
consideration. In addition, using the sensitivity deﬁnition
∆Di + ρij∆Dj, we observe that more noise needs to be
added than under the independent assumption that computes
the sensitivity as ∆Di.
• ρij = 1 corresponds to the completely dependent setting
where Dj can be uniquely determined by Di. The baseline
approach in Section VI-A is just a special case of our
analysis where all the dependent L tuples are completely
dependent on each other. As all practical privacy notions
require some assumptions on the allowed distributions, it
makes sense to analyze the ﬁne-grained dependence re-
lationship in order to maximize utility under the same
privacy requirement. Compared with the baseline approach,
less noise would be added for our dependent perturbation
mechanism since we consider ﬁne-grained dependence re-
lationship. In real-world scenarios, tuples are related but
few of them are completely dependent
i.e., ρij  1− exp(− α
L∆Q ) = βbase (since DSQ = maxi
j ρij∆Qj ≤ L∆Q). Therefore, DPM achieves smaller query
errors and thus better utility performance.
Lemma 2. Under the same (α, β)-accuracy, DPM achieves
better privacy performance than the baseline approach.
(cid:80)
Proof: Given βDP M = βbase, we have DP M =
(since DSQ =
j ρij∆Qj ≤ L∆Q). Therefore, our DPM results in
− DSQ log(β)
maxi
better privacy performance.
 0, b > 0, c > 0. The effectiveness of the
probabilistic dependence relationship in Eq. 26 will be veriﬁed
on multiple real-world datasets in Section VII. We believe
that alternate potential strategies for dependence relationship
analysis will be an impactful direction for future work. But no
matter which method is applied, our goal is to evaluate ﬁne-
grained probabilistic dependence relationship among tuples
for designing data sharing algorithms that satisfy -dependent
differential privacy.
3) Challenges in Realistic Scenario: Furthermore, we
carefully analyze the inﬂuence of inaccurate computation in ρij
on the overall performance of our DPM. We believe that de-
signers are well-placed to compute ρij. If ρij is overestimated,