---
## Page 436
子查询练习
动手为下列问题设计查询，若有需要，可利用联接与非关联子查询。请参
考右页的gregs_list数据库模式（schema）。
需要我们从GilSprout辑干销售范例学到的统计
列出薪资等于job_listings表中最高薪资的职务名称。
答宝请见第406页。
列出薪资高于平均薪资者的姓名。
答宝请见第406页。
请寻找网站设计员，但只列出其邮政编码与任何一个网站设计职缺的邮政编码相同的设计
员。
列出每个邮政编码涵盖地区中当前薪资最高的人。
容累清见案407页
L
404
喜6L
---
## Page 437
子查询
job_current
job_desired
job_listings
contact_idow
contact_ido
job_idow
title
title
title
salary
salary_low
salary
start_date
salary_high
zip
available
description
years_exp
contact_interest
contact_id
+0
my_contacts
interests
contact_idO
interest_id
interest_idO
profession
last_name
+0
prof_id O
interest
first_name
profession
phone
contact_seeking
zip_code
email
gender
contact_id
zip_codeO
birthday
+0
city
seeking
→prof_id
seeking_id
seeking_id0
state
→zip_code
+0
seeking
status
→status_id&
status_ido
status
当前位置
405
---
## Page 438
习题解答
动手为下列问题设计查询，若有需要，可利用联接与非关联子查询。请参
考右页的gregs_1ist数据库模式（schema）
解答
列出薪资等于job_listings表中最高薪资的职务名称。
外层查询根据最高薪资值（
MAX（satay）进行比较。
子查询返回单一值。
SELECT title FROM jo6_listings
WHERE salary = (SELECT MAX(salaxy)
FROM jo6_listings):
MAX返回表中最高的薪
资值。
列出薪资高于平均薪资者的姓名。
外层查询接收子查询的结果并返回大于前述结果
的记录。
SELECT mc.fitst_name,mc.last_name
FROM my_contacts mc
NATURAL 3OJN jo6_cuttent jc
1自然联接给了我们
WHEREjc.salay>（SELECT AVC（sataxy）FROM jo6_cutent）
人名，他们都是薪
T
资高于内层叠询返
回结果的人。
子查询返回平均薪资。
L
406
嘉6L
---
## Page 439
子查询
请寻找网站设计员，但只列出其邮政编码与任何一个网站设计职缺的邮政编码相同的设计
员。
我们需要使用自然联接来取得符合对象的有用信
息.例如姓名与电话号码。
SELECT mc fitst_name,mc .last_name, mc.phone FRON my_contacts mc
NATURAL OJN job_cutent jc WHERE jc.title = *we6 designe’ AND mc.xip_code JN
因为可能不只返回一个邮政码，所以我
内层查询返回所有提供网站设计员职
1
们把结果当成一个集合并使用“N”号找
相符信息。
缺的地区的邮政编码。
列出每个邮政编码涵盖的地区中当前薪资最高的人。
这是个有点困难的问题，因为可能不只一个人具有最高薪资，我们需要使用IN。我们也
需要用到两个子壹询
外层奎询会接收邮政编码并从my_contacts表中找出
相符信息。因为中间的子查询可能返回多个邮政编码
所以此时需要N。
中间的子叠询负责寻找新资
个
最高老的邮政编码。
SELECT last_name, fitst_name FROM my_contacts
WHERE xip_code JN (SELECT mc.zip_code FROM my_contacts mc
NATURAL 3OJN jo6_carent jc
WHERE jc , salaty =(SELECT MAX(salary)FROM jo6_cuttent))
7
最内层的子壹询以jo6_cuent表取得最高弱资
值。这是个单一佳，所以使用“=”
当前位置
407
---
## Page 440
关联子查询
关联子查询
如聚非关联子查均表示有个可以独立运行的子
查询，那么我相信一定还有美联子壶询，而且它
以某种方式依赖于外昆查询。
没错。在非关联子查询中，内层查询（子查询）
先被RDBMS解释，然后才输到外层查询。
所以接下来要面对关联子查询。关联子查询是指
内层查询的解析需要依赖外层查询的结果。
下例查询会计算my_contacts里的每个人各有
儿项兴趣，然后返回具有三项兴趣的人（返回其
姓名）。
SELEcT mc.first_name,mc.last_name
FROMmy_contactsASm&
_my_contacts的别名创建在外
WHERE
层查询中。
3=（
SELECTCOUNT(*)FROM contact_interest
WHEREcontact_id=mc.contact
id
7
外居查询必须先执行，执
)；
F
子奎询也引用了别名mc。
行完后我们才能知道
mc.contacts_id 值
子查询依赖外层查询，它需要来自外层查询的结果、contacts_id的值，
然后才能解析内层查询。
本例的子查询中使用的别名（关联名称）mc，是在外层查询中创建的。
408
第9章
---
## Page 441
子查询
一个搭配NOTEXISTS的（好用）关联子查询
关联子查询的常见用法，是找出所有外层查询结果里不存在于
关联表里的记录。
假设Greg想为日渐增长的招聘业务找到更多客户，所以打算寄
电子邮件给my_contacts里的目前不在job_current表中
的每个人。他可以使用NOTEXISTS找出这些人。
SELECT mc.first _name firstname, mc.last _name lastname, mc.email email
FROM my_contacts mc
NOTEXISTS负责从my_contacts表找出姓名与电子邮
WHERE NOT EXISTS
件地址，他们都未列在job_current表中。
(SELECT * FROM job_current jc
WHERE mc.contact_id =jc.contact_id );
连接查询的每个部分与其功能。
mc.first _name firstname
为mc.last_name设定别名
WHERE NOT EXISTS
如果两个contact_id都是true，则符合条件
WHERE mC.contact _id =
jc.contact _id
为“firstname”列设定别名
FROM my_contacts mc
选择别名为“j”的表中的所有列
mc.last _name lastname
设定某列的别名为“email
SELECT * FROM
job_current jc
如果没有找到指定的内容，才视为条件成立
mc.email email
为my_contacts设定别名
当前位置
409
---
## Page 442
子查询与EXISTS/NOTEXISTS
EXISTS与NOTEXISTS
就像IN与NOTIN，子查询也能搭配EXISTS与NOTEXISTS一
起使用。下列查询将返回来自my_contacts表的数据，其
中 contacts_id 曾出现在contact_interest表里。
SELEcT mc.first_name firstname,mc.last_name lastname,mc.email email
FROM my_contacts mc
EXJSTS负责从my_contacts表中找出姓名和电子邮件地址
WHERE EXISTS
这些记录的contact_id管出现在contact_interest 表中。
（SELECT *FROM contact_interest ci WHERE mc.contact_id=ci.contact_id );
连
连接查询的每个部分与其功能。
mc.first _ name firstname
为mc.last_name设定别名
WHERE NOT EXISTS
如果两个contact_id都是true，则符合条件
WHERE mC.contact
id
jc.contact_id
为“firstname”列设定别名
FROM my_contacts mC
选择别名为“je”的表中的所有列
mc.last
_name 1astname
设定某列的别名为“email”
SELECT * FROM
job_current jc
如果没有找到指定的内容，才视为条件成立
mc.email email
为my_contacts设定别名
410
第9章
---
## Page 443
子查询
磨笔上陈
设计返回每个人的电子邮件地址的查询，电子邮件的主人至
少拥有一项兴趣，但其在job_current表没有相应记录。
答案在第416页。
当前位置
411
---
## Page 444
成功的子查询！
Greg的Recruiting Service正式开业
现在，Greg对于利用子查询取得数据已经非常熟悉了。
他甚至还发现这些工具也能用在INSERT、UPDATE、
不知递我的系统能否为我找
DELETE 语句中。
到新员工·
他租了一个小办公室来开展他的新业务，并决定举行
个盛大的启动派对。
没有蠢问题
没有蠢问题
问：
所以说，子查询可以放在子查询里吗？
寻找最高薪资的网站设计员
寻找薪资为x的人
然后把第一个答案填入x处。
多数RDBMS系统的支持已经超过我们能轻松使用的程度。
问：
问：
如果我不想使用子查询，可以改用联接吗？
在试着于子查询里构造子查询时、什么是最佳方
案？
答：
大多数情况下都可以。只需要多学一些联接，讲
到这一点..
询，然后研究这些查询并找出结合它们的方式。如果想试
着找出其薪资同为最高级别的网站设计员，应该把问题分
解成：
412
第9章
---
## Page 445
子查询
前往派对的路上
Greg发现了一则让他有点困惑的小报新闻：
THEWEFKLY
INQUERYIR
独家报导！关于子查询的惊人事实！
联接隐藏了实力
街头巷尾正在流传一种说法，子查询的能力其实“并未优于”联接，
而且“需要有人说出这个事实”。
INQUERYER编辑室
Troy Armstrong
DATAVILLE有个多年来都只是谣传的说法，现在终于由我们
INQUERYER周刊的消息来源证实了—联接和子查询可以形成完
全相同的查询。关于本地民众的最大困扰也已经确认了，任何子查
询能实现的事情都能以相同类型的联接来实现。
本地教师Heidi Musgrove不禁泣诉：“太可怕了！我们该怎么告诉
孩子们？他们认识的子查询，这么多花在学习使用子查询上的时间，
结果只要用联接就可以了。真是太令人痛心疾首了！”
这个惊人真相造成的余波势必会继续影响下一章的走向，下一章，
外联接也将于大众面前曝光。
校长HeidiMusgrove对于子查询
的新发展也非常震惊。
一切都是浪费时间？子查询真的与联接没什么不同吗？
请继续翻阅下一章。
当前位置
413
---
## Page 446
复习SQL
你的SQL工具包
各位已经完成了第9章，而且精通
了子查询的艺术，看一下你刚刚学
会的技巧。若想复习本书中的所有技
巧，请参考附录3。
Outer query
外层查询。包含inner
query/subquery的壹询。
Inner query
内层查询。在查询内的查询，
称为subquery。
Noncorrelated sub-
query
非关联子查询。一个独立而且不
Subquery
引用outerquery的任何部分的
子查询。被另一个查询包围的查
subquery.
询，也称为inner query。
Correlated Subquery
关联子查询。一个依赖
outerquery的返回结果的
subquery.
414
第9章
---
## Page 447
子查询
子查询填字游戏
各位可以从外层查询中分辨出内层查询，但能够解决这个
字迷吗？所有解决字迷的关键词都在本章中。
横向
纵向
1.子查询一定是个单一的
语句。
1.在另一个查询里的查询被称为
4.查询（query）包围着内层查询（或称
2.子查询一定在里。
子查询）。
3.—子查询（subquery）是指内层查询需依
6.如果子查询可以独立运行而且并未引用来自外
赖外层查询的结果才能被解析。
层查询的任何信息，即称为子查询（_
5.查询（query）被称为子查询。
subquery)。
7.在子查询（subquery）里，RDBMS先
解释内层查询（子查询），再解释外层查询。
当前位置
415
---
## Page 448
磨笔上阵与填字游戏解答
磨笔上阵
解答
设计返回每个人的电子邮件地址的查询，电子邮件的主人至
少拥有一项兴趣，但其在job_current表中没有相应记录。
第411页上的练习。
SELECT mc.email FROM my_contacts mc WHERE
EXJSTS
(SELECT * FROM contact_interest ci WHERE mc,contact_JD = ci.contact_JD)
AND
就像任急两项都需成立的条件一样，应在
NOT EXJSTS
WHERE子句里使用AND。
(SELECT* FROM jo6_curtentjc
WHERE mc.contact_id = jc.contact_id );
子查询填字游戏解答
S
ELECT
U
B
Q
Q
V
1
E
R
PN
A
N
Y
N
E
T
R
H
RR
S
E
S
416
第9章
---
## Page 449
10外联接、自联接与联合
新策略
先来一个内联接族转，然
后紧接着左外联接三转跌，至少
得8分。这一次，我要从裁判手中拿
下超高分..·
关于联接，我们只认识了一半。我们已经看过返同每个可能行的
交叉联接，返回两张表中相符记录的内联接。但我们还没见过外联接，
它可以在表中没有匹配记录的情况下返回记录：自联接（光听名称就很
奇怪了），它可以联接表本身；还有联合，它可以合并查询结果。学会
这些技巧后，你就可以采用自己需要的方式取得所有数据（而且本章也
没有忘记探讨关于子查询的真相！）
进入新章节
417
---
## Page 450
外联接
清理旧数据
我想整理一下存储职业的表。我想表里面可能有些
我不再需要的值。该怎样轻松找出来与my_eontacts表
中的任何记录连接的职业值呢？内联接无法完成我的任
务。
这种信息可通过外联接（outerjoin）取得。
让我们一起了解外联接的用途，然后再说明如何找出不再需要的职
业。
外联接返回某张表的所有行，并带有来自另一张表的条件相符的行。
使用内联接时，虽然要比对来自两张表的行，但表的顺序并无影响。
先简单回顾一下equijoin的运作方式。下例从两张表中取出toy_
id列同时出现于两张表中的列：
SELECTg.girl,t.toy
FROM girls g
INNER JOIN tOYS t
ON g.toy_id=t.toy
id;
equijoin比较这两张
girls
K
表的记录以取得结
toys
girl_id
girl
toy_id
果，
本例比较id的
toy_id
toy
1
Jane
3
值。
hulahoop
2
Sally
4
2
balsa glider
3
Cindy
1
3
toysoldiers
4
harmonica
5
baseball cards
tinkertoys
girl
toy
7
etch-a-sketch