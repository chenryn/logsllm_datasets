@悬镜安全实验室
### 前言
对于运维工作者来说，可能最让人担心的，是服务器宕机；
最让人无助的，是被DDOS；
而最让人心惊肉跳的，是rm -rf *这个命令……
当你执行rm -rf命令时，万一哪个变量没赋值
听说过被删空服务器么？
mysql数据库不是在运行吗?
linux能删除正在执行的文件?反正是彻底删除了……
那一夜，你没有拒绝我……
那一夜，我心儿破碎……
我们平时工作中，rm -rf *这个命令给每个使用linux系统的工程师带来了深深的恐惧。
你以为今天我们是来哭诉服务器被清空之后有多惨的嘛？
不！
山重水复疑无路，误删文件能恢复！
今天就给大家分享一个在误删/etc目录后，救命止损的数据恢复教程。
### 一、紧急措施
1.如果你是远程登录服务器的，首先要保持连接不被断开。不操作时用vim保持连接状态。
此时虚拟控制终端和ssh连接已经不能建立新连接了。
如下图已经不能登录。
2.拷贝相同版本服务器/etc目录到目标服务器(版本与配置越相近，接下来的工作量会越小，可以使用`rz`,
`wget`等其他方式把配置拷贝到服务器。`scp`等需要验证账户信息已经不能使用)拷贝完成后，可以通过`ssh`连接，检测是否可以正常连接至服务器（此时使用的账户密码应该是同版本服务器的账户密码）  
如出现下图所示，连接失败，可能是selinux导致，临时关闭`selinux setenforce 0`  
此时已经可以正常通过ssh连接至服务器，切换至root账户如下  
3.修改selinux配置为关闭状态。`/etc/selinux/config`修改为开机不启动
### 二、系统恢复
#### 1.检查fstab文件
查看配置文件信息如下:  
通过`blkid`查看设备上所采用文件系统类型，以及挂载设备。  
注：对比两图可以发现，信息差别很大， 因为我这两台服务器安装时分区方式不一样。
/dev/mapper/centos-root | /  | ext4 | defaults | 1  | 1  
---|---|---|---|---|---  
设备名  | 挂载目录 | 文件系统 | 挂载参数  | 备份信息 | 启动顺序  
系统显示没挂载`home`分区，所以删除需要把配置文件中挂载在`home`下的那行删除。以及修改设备名与`UUID`，以及TYPE修改`/etc/fstab`配置文件，如下  
配置修改无误的话，重启是可以正常启动  
如下图所示，已经可以正常启动(不过此时千万别重启，因为应用配置数据还没恢复)  
#### 2.修改网卡信息
如果拷贝的网络配置是动态获取IP，并且网卡名称相同，对访问网络还没影响，那么这一步可以跳过，网卡这部分可以放到最后来做，因为你删除配置后，网络暂时还是可以使用的。  
这里我拷贝的是静态分配的IP地址，所以需要做一些修改。  
下图是可以看到我的网卡名称是`ens33`  
而我的配置中没此网卡配置，相对应的应该是`ifcfg-eth0`。  
备份一份，然后重命名为`ifcfg-ens33 cp ifcfg-eth0 ifcfg-eth0.bak &amp;&amp; mv ifcfg-eth0
ifcfg-ens33`  
重启可能远程断开连接（不同环境重启网络方式可能不太相同，这里是centos7）  
看下配置信息  
下边是部分解释，可以参考下
TYPE=Ethernet  | 网卡类型  
---|---  
DEVICE=eth0  | 网卡接口名称  
ONBOOT=yes  | 系统启动时是否自动加载  
BOOTPROTO=static  | \--static:静态协议 --bootp协议 --dhcp协议  
IPADDR=192.168.1.11  | 网卡IP地址  
NETMASK=255.255.255.0  | 网卡网络地址  
GATEWAY=192.168.1.1  | 网卡网关地址  
DNS1=114.114.114.114  | 网卡DNS地址  
HWADDR=01:02:03:04:05:06 | 网卡设备MAC地址  
BROADCAST=192.168.1.255  | 网卡广播地址  
修改为如下配置(动态分配)  
静态分配  
配置以上任意一种方式  
动态分配的IP，相对简单一些，如果网关不支持dhcp，或者环境需要是静态的，那么也可以采用静态的。配置静态IP需要注意，网关如果设置错误，那么可能不能访问网络的哦。
### 三、应用配置恢复
#### a) Redis 配置数据恢复
i. Redis账户数据恢复首先确定系统中是否还有redis用户。（如果拷贝过来的系统也安装了redis，那么肯定是会有redis账户）  
如果发现有redis用户，以下步骤可以跳过。  
如没有redis账户，需添加redis账户，不然重启redis可能失败。添加redis账户信息。（仅供参考，centos7环境成功）
    echo “redis:x:996:994:Redis Database Server:/var/lib/
    redis:/sbin/nologin” >> /etc/passwd
    echo “redis:!!:17416::::::” >> /etc/shadow
    echo “redis:x:994:” >> /etc/group
    echo “redis:!::” >> /etc/gshadow
ii. Redis配置文件恢复  
Redis的配置文件恢复相对简单一些，官方提供了`CONFIG REWRITE`命令重写`redis.conf`配置文件。  
如果执行命令过程中出现如下提示，不用担心是因为权限的问题。  
首先创建`redis.conf`文件  
>touch /etc/redis.conf
然后修改文件属性  
>chown redis:redis /etc/redis.conf
参考官方介绍:
#### b)mysql配置文件恢复(maraidb)
**i.mysql账户数据恢复**  
1.首先确定系统中是否还有mysql用户。  
如果发现有mysqld用户，以下步骤可以跳过。  
2.如没有mysql账户，需添加mysql账户，不然重启mysql可能失败。添加mysql账户信息。（仅供参考，centos7环境成功）
    echo “mysql:x:27:27:MariaDB Server:/var/lib/mysql:/sbin/nologin” >> /etc/passwd
    echo “mysql:!!:17415::::::” >> /etc/shadow
    echo “mysql:x:27:” >> /etc/group
    echo “mysql:!::” >> /etc/gshadow
**ii.mysql配置文件恢复**  
1.进程信息获取mysql配置信息  
如下
    basedir = /usr
    datadir = /var/lib/mysql
    plugin-dir = /usr/lib64/mysql/plugin
    log-error = /var/log/mariadb/mariadb.log
    open-files-limit =65535
    pid-file = /var/run/mariadb/mariadb.pid
    socket = /var/lib/mysql/mysql.sock
2.mysql参数信息  
上图mysqld进程ID  
>pid=25499  
获取进程映射地址
    cat /proc/$pid/maps | awk ‘$6 !~ “^/” {split
    ($1,addrs,”-“); print “dump memory mem_” addrs[1] ”
    0x” addrs[1] ” 0x” addrs[2] ;}END{print “quit”}’ > gdb-commands
dump地址中数据
    gdb -p $pid -x gdb-commands
上边工作做完看下生成的文件如下  
查找mysql参数信息  
比如 `grep datadir ./mem_*`会显示所有包含`datadir`字符串二进制文件。  
>vim ./mem_7f18284af000
查找`datadir`如下，跟进程信息获取参数有部分重复。  
    datadir = /var/lib/mysql
    socket = /var/lib/mysql/mysql.sock
    symbolic-links = 0
    max_connections = 1000
    openfileslimit = 65535
    vim ./mem_7ffef7a7c000
查找datadir如下,此块内存跟ps看到的信息差不多，可以不用记录。  
3.创建mysql配置文件  
根据以上两种方式获取到配置信息如下
    basedir = /usr
    datadir = /var/lib/mysql
    plugin-dir = /usr/lib64/mysql/plugin
    log-error = /var/log/mariadb/mariadb.log
    open-files-limit =65535
    pid-file = /var/run/mariadb/mariadb.pid
    socket = /var/lib/mysql/mysql.sock
    symbolic-links = 0
    max_connections = 1000
获取mysql默认配置文件路径位置
    mysql –verbose –help | grep -A 1 ‘Default options’ | grep /
以上是mysql查找配置文件顺序，通常用的是`/etc/my.cnf`  
创建配置文件`touch /etc/my.cnf`，或者拷贝版本差别不大的配置文件。  
修改为如下所示  
重启mysql，测试下业务是否正常。