MMMMMMMM:'lMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
Enter "pRnTE"
find_thE_hAttEr
root@kali:/media/sf_CTFs/matrix/Hatter# unset SHOW_PASSWORD
root@kali:/media/sf_CTFs/matrix/Hatter# export DUMP_DEBUG_DATA=1
root@kali:/media/sf_CTFs/matrix/Hatter# ./hatter | xxd -g 1
00000000: 64 29 3d 0c 18 25 35 35 41 28 01 00 de 73 13 51  d)=..%55A(...s.Q
00000010: 65 0b 4f 56 45 41 1b 0f 3f 59 55 01 df 73 13 51  e.OVEA..?YU..s.Q
00000020: 6a 01 07 3a 54 5e 6c 04 01 0f 01 02 dc 73 13 51  j..:T^l......s.Q
00000030: 6a 2d 70 61 27 47 74 0d 0a 46 2f 03 dd 73 13 51  j-pa'Gt..F/..s.Q
00000040: 54 0f 2b 06 42 01 5d 6c 42 01 6d 04 da 73 13 51  T.+.B.]lB.m..s.Q
00000050: 75 22 3c 3a 11 45 78 27 72 7a 0b 05 db 73 13 51  u" 0x00000000004014a0:  push   rbp
   0x00000000004014a1:  mov    rbp,rsp
   0x00000000004014a4:  sub    rsp,0x10
   0x00000000004014a8:  mov    DWORD PTR [rbp-0x4],edi
   0x00000000004014ab:  movzx  eax,BYTE PTR ds:0x4050c4
   0x00000000004014b3:  mov    ecx,0x1
End of assembler dump.
(gdb) p $edi
$1 = 5
(gdb) set $edi=3
(gdb) c
Continuing.
Enter "iD4Ur5ALF"
find_thE_hAttEr
[Inferior 1 (process 2969) exited normally]
```
We got the missing line: 
```
Enter "iD4Ur5ALF"
```
But now what?
Since we don't have any obvious move, we should continue to reverse. We can try to understand how the hints are printed by reversing `print_hint`, `get_ptr_for_hint_num` and `decode_hint` which we saw get called earlier. However, we skipped something pretty odd earlier and we should probably go back to it first. Did you catch it? Take a look at `handle_where_hatter` again:
```c
void handle_where_hatter(void)
{
  char local_238 [128];
  char *local_1b8;
  char *local_1b0;
  char *local_1a8;
  char *local_1a0;
  char *local_198;
  char *local_190;
  char local_188 [64];
  char local_148 [64];
  char local_108 [64];
  char local_c8 [64];
  char local_88 [64];
  char local_48 [53];
  undefined local_13 [11];
  local_190 = local_188;
  local_198 = local_148;
  local_1a0 = local_108;
  local_1a8 = local_c8;
  local_1b0 = local_88;
  local_1b8 = local_48;
  memcpy(local_1b8,&DAT_00403210,40);
  memcpy(local_1b0,&DAT_00403240,56);
  memcpy(local_1a8,&DAT_00403280,64);
  memcpy(local_1a0,&DAT_004032c0,64);
  memcpy(local_198,&DAT_00403300,64);
  memcpy(local_190,&DAT_00403340,64);
  memcpy(local_238,&DAT_00403380,122);
  memset(local_13,0xb,0xb);
  print_hint_in_debug(2);
  handle_no_args(local_238);
  return;
}
```
Look at the amount of code that gets executed. Most of it isn't needed at all! we could rewrite the function as follows without anyone noticing:
```c
void handle_where_hatter(void)
{
  char local_238 [128];
  memcpy(local_238,&DAT_00403380,122);
  print_hint_in_debug(2);
  handle_no_args(local_238);
  return;
}
```
So what are the extra buffers for? The look similar to `local_238` but only `local_238` gets used. What if we call `handle_no_args` with the other buffers?
Earlier, we executed `print_hint_in_debug(3)` by setting a breakpoint at `print_hint_in_debug` and changing the argument from `5` to `3`. This time, we'll do something a bit more elegant in order to call `handle_no_args` with the different buffers: We'll use a `gdb` script.
For reference, here's the disassembly for the function:
```assembly
                             **************************************************************
                             *                          FUNCTION                          *
                             **************************************************************
                             undefined __stdcall handle_where_hatter(void)
             undefined         AL:1           
             undefined1        Stack[-0x13]:1 local_13                                XREF[1]:     0040176b(*)  
             undefined1        Stack[-0x48]:1 local_48                                XREF[1]:     0040178f(*)  
             undefined1        Stack[-0x88]:1 local_88                                XREF[1]:     0040178b(*)  
             undefined1        Stack[-0xc8]:1 local_c8                                XREF[1]:     00401784(*)  
             undefined1        Stack[-0x108   local_108                               XREF[1]:     0040177d(*)  
             undefined1        Stack[-0x148   local_148                               XREF[1]:     00401776(*)  
             undefined1        Stack[-0x188   local_188                               XREF[1]:     0040176f(*)  
             char *            Stack[-0x190   local_190                               XREF[1]:     004018d8(W)  
             char *            Stack[-0x198   local_198                               XREF[1]:     004018ca(W)  
             char *            Stack[-0x1a0   local_1a0                               XREF[1]:     004018bc(W)  
             char *            Stack[-0x1a8   local_1a8                               XREF[1]:     004018ae(W)  
             char *            Stack[-0x1b0   local_1b0                               XREF[1]:     004018a0(W)  
             char *            Stack[-0x1b8   local_1b8                               XREF[1]:     00401892(W)  
             undefined1        Stack[-0x238   local_238                               XREF[2]:     004018df(*), 
                                                                                                   0040191d(*)  
             undefined8        Stack[-0x240   local_240                               XREF[2]:     00401796(W), 
                                                                                                   004018fd(R)  
             undefined8        Stack[-0x248   local_248                               XREF[3]:     004017aa(W), 
                                                                                                   00401803(R), 
                                                                                                   004018a7(R)  
             undefined8        Stack[-0x250   local_250                               XREF[3]:     004017ba(W), 
                                                                                                   0040182b(R), 
                                                                                                   004018b5(R)  
             undefined8        Stack[-0x258   local_258                               XREF[3]:     004017c4(W), 
                                                                                                   0040186b(R), 
                                                                                                   004018d1(R)  
             undefined8        Stack[-0x260   local_260                               XREF[3]:     004017cb(W), 
                                                                                                   0040184b(R), 
                                                                                                   004018c3(R)  
             undefined8        Stack[-0x268   local_268                               XREF[3]:     004017d2(W), 
                                                                                                   004017e5(R), 
                                                                                                   00401899(R)  
             undefined8        Stack[-0x270   local_270                               XREF[2]:     004017d9(W), 
                                                                                                   0040188b(R)  
             undefined8        Stack[-0x278   local_278                               XREF[4]:     0040181f(W), 
                                                                                                   0040183f(R), 
                                                                                                   0040185f(R), 
                                                                                                   0040187f(R)  
                             handle_where_hatter                             XREF[3]:     main:004011fa(c), 00403470, 
                                                                                          00403640(*)  
        00401760 55              PUSH       RBP
        00401761 48 89 e5        MOV        RBP,RSP
        00401764 48 81 ec        SUB        RSP,0x270
                 70 02 00 00
        0040176b 48 8d 7d f5     LEA        RDI=>local_13,[RBP + -0xb]
        0040176f 48 8d 85        LEA        RAX=>local_188,[RBP + -0x180]
                 80 fe ff ff
        00401776 48 8d 8d        LEA        RCX=>local_148,[RBP + -0x140]
                 c0 fe ff ff
        0040177d 48 8d 95        LEA        RDX=>local_108,[RBP + -0x100]
                 00 ff ff ff
        00401784 48 8d b5        LEA        RSI=>local_c8,[RBP + -0xc0]
                 40 ff ff ff
        0040178b 4c 8d 45 80     LEA        R8=>local_88,[RBP + -0x80]
        0040178f 4c 8d 4d c0     LEA        R9=>local_48,[RBP + -0x40]
        00401793 4d 89 ca        MOV        R10,R9
        00401796 48 89 bd        MOV        qword ptr [RBP + local_240],RDI
                 c8 fd ff ff
        0040179d 4c 89 d7        MOV        RDI,R10
        004017a0 49 ba 10        MOV        R10,DAT_00403210                                 = 04h
                 32 40 00 
                 00 00 00 00