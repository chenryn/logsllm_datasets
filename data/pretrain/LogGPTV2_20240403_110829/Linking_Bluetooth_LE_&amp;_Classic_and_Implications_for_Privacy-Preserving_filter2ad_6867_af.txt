the system does not focus on restarting BLE advertisements
(see section VIII-A3) as this measure violates our objective
of not affecting app functionality. We also note that certain
mitigations may not work against a determined attacker who
uses powerful antennas to execute the attack from a distance.
Our implemented system addresses the above measures uti-
lizing two levels of abstraction. First, we extend the current
Android Bluetooth stack to address problems that allows an
attacker to launch the attacks more easily. Next, we build upon
these extensions to opportunistically change the state of BTC
and BLE transmissions based on how the medium is being
Our system tracks the count of BTC connections, BLE
connections and BLE advertisers to determine the current state
of the device. The Android OS implements broadcast intents
that all apps can register to receive certain device updates.
Our system uses the intent action BOOT_COMPLETED to track
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:26:04 UTC from IEEE Xplore.  Restrictions apply. 
1329
when a device has booted up and enters the default state of
BTC_OFF_BLE_ON. To track the count of BTC connections,
the system tracks the intent actions ACL_CONNECTED and
ACL_DISCONNECTED which are broadcast whenever a BTC
paired device connects and disconnects with the device. To
track BLE connections, the system tracks the intent actions
BLE_ACL_CONNECTED and BLE_ACL_DISCONNECTED.
The above BLE intents are not documented in the Android
SDK and we found these intents during our analysis of the
Android code. Unfortunately, there are no intents to track BLE
advertisers. As such, we rely on the Xposed framework to
insert counters into the methods startAdvertisingSet
and stopAdvertisingSet of the BluetoothLeAd-
vertiser class to track the count of BLE advertisers.
These methods are also used to record an app’s advertising
parameters (e.g., service UUID, Tx power, service data) in
order to modulate the BLE Tx power.
The system implements state transitions that are triggered
whenever the counts are updated, i.e., whenever any BTC
and BLE connections or disconnections occur. In many cases,
even when the counts change, the transitions do not occur
as the device state remains the same (e.g., two apps now
broadcasting BLE advertisements instead of one). At each
update, a notiﬁcation is generated that the user can view on
the device to see a list of all BTC, BLE connections and
BLE advertisements. Speciﬁcally, the system implements the
following two important transitions and parameter updates -
• BTC_OFF_BLE_ON → BTC_ON_BLE_ON: This transition
occurs when the user or an app enables BTC on the device.
If no BTC connection is established within a reasonable
time,
the system switches back to BTC_OFF_BLE_ON
state. To reduce the BTC-BLE linkage attack radius, all
BLE advertisers active on the device switch to a low power
transmission mode. In this mode, the advertisements just
have enough power to be reachable within a 6-10 meters
radius of the device. The Tx power update is achieved using
the Xposed framework by inserting custom code in the
setTxPowerLevel method of the AdvertisingSet-
Parameters class of the Android SDK.
• BTC_ON_BLE_ON → BTC_OFF_BLE_ON: This transition
occurs when all paired BTC devices have disconnected from
this device. As BTC is disabled, the possibility of BTC-BLE
linkage attacks is eliminated. Therefore, all BLE advertisers
are switched back to their regular transmission powers. As
the risk of pre- and post- randomization linkage attack still
exists, the system periodically switches all advertisers to
minimum power transmission mode for a small duration.
This is done so that an attacker outside this minimum range
loses synchronization with the device and is unable to link
the pre- and post- randomized MAC addresses.
The system is intended to reduce the attack performance
rather than eliminating the attack. The system does not enforce
changes to apps that currently enable BTC to transmit BLE
advertisements. Instead, we intend to spread awareness of this
problem and provide developers a library to easily switch to
the more secure BTC_OFF_BLE_ON state. We validated the
library by implementing a BLE Advertiser app without using
any BTC code and observed that it works reliably1. We believe
that eliminating this attack would require signiﬁcant changes
to the BTC and BLE chipsets. Such extensive changes are
outside the scope of this work.
C. Impact of the Mitigation System on Attack Performance
To verify the mitigation system, we loaded it on a Google
Pixel smartphone. We performed the same experiment twice
for 200 seconds each - once using a factory image and another
one using our mitigation system. In both cases, we paired
the smartphone with a headset and streamed audio to it with
pauses in between. The device was setup to transmit BLE
advertisements at high transmit power. The device was placed
at a 15 meter distance from the attack system.
In the ﬁrst experiment using the factory image, the attack
system was able to decode 826 advertisements transmitted
from the device. In addition, 1497 BTC transmissions were
also recorded. In the second experiment using our mitiga-
tion system, the attack system was not able to decode any
BLE advertisements. This was because the mitigation system
automatically switched the BLE advertiser to a low power
mode to mitigate the BTC-BLE linkage attacks. There was
no degradation in BTC audio streaming, as the attack system
still recorded 2035 BTC packets during the experiment. We
veriﬁed the range of the advertisements using a BLE scanner
app and found that an attacker would need to be as close as 6
meters to the victim(s) to execute a successful attack. The BLE
advertiser restored the transmit power automatically when the
BTC headset was disconnected.
We also modiﬁed the StopCovid app source code to de-
termine how much effort app developers would require to use
our more secure BTC_OFF_BLE_ON state. We note that, with
the exception of method name changes, we were able to run
StopCovid without BTC by modifying only 6-8 lines of code.
As such, we believe that app developers can easily protect
their users from this attack by using our mitigation system.
IX. CONCLUSION
We reveal that apps that rely on BLE advertisements are
vulnerable to tracking by linking the advertisements to Blue-
tooth Classic frames, and ultimately to the device’s globally
unique identiﬁer (BDADDR). Despite challenges in exploiting
the coupling between BTC and BLE, our analysis allowed us
to develop a proof-of-concept end-to-end attack that is highly
reliable across devices, mobile apps, type of trafﬁc, density of
devices and range. We proposed, implemented, and evaluated
a set of effective countermeasure for Android, and disclosed
our ﬁndings and mitigations to Apple and Google.
ACKNOWLEDGMENT
This work was
grants
NAVY/N00014-20-1-2124, NCAE-Cyber Research Program,
and NSF/DGE-1661532.
supported
partially
by
1A video demonstration is available at https://www.dropbox.com/s/
4k1lquq2m8rzzua/BTController.mp4?dl=0.
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:26:04 UTC from IEEE Xplore.  Restrictions apply. 
1330
[22] N. Ahmed, R. A. Michelin, W. Xue, S. Ruj, R. Malaney, S. S. Kanhere,
A. Seneviratne, W. Hu, H. Janicke, and S. K. Jha, “A survey of covid-19
contact tracing apps,” IEEE Access, vol. 8, pp. 134 577–134 601, 2020.
[23] R. Sun, W. Wang, M. Xue, G. Tyson, S. Camtepe, and D. C. Ranasinghe,
“An empirical assessment of global covid-19 contact tracing applica-
tions,” arXiv:2006.10933 [cs.CR], 2020.
[24] R. Raskar,
I. Schunemann, R. Barbar, K. Vilcans,
J. Gray,
P. Vepakomma, S. Kapa, A. Nuzzo, R. Gupta, A. Berke, D. Greenwood,
C. Keegan, S. Kanaparti, R. Beaudry, D. Stansbury, B. B. Arcila,
R. Kanaparti, V. Pamplona, F. M. Benedetti, A. Clough, R. Das, K. Jain,
K. Louisy, G. Nadeau, V. Pamplona, S. Penrod, Y. Rajaee, A. Singh,
G. Storm, and J. Werner, “Apps gone rogue: Maintaining personal
privacy in an epidemic,” arXiv:2003.08567 [cs.CR], 2020.
[25] J. Bell, D. Butler, C. Hicks, and J. Crowcroft, “Tracesecure: Towards
privacy preserving contact tracing,” arXiv:2004.04059 [cs.CR], 2020.
[26] Presidenza del Consiglio dei Ministri, “Immuni
- Commissario
straordinario per l’emergenza Covid-19,” 2020. [Online]. Available:
https://github.com/immuni-app
[27] Federal Ofﬁce of Public Health FOPH, “SwissCovid app,” 2020.
[28] Government
[Online]. Available: https://foph-coronavirus.ch/swisscovid-app/
Canada,”
2020.
[Online]. Available: https://www.canada.ca/en/public-health/services/
diseases/coronavirus-disease-covid-19/covid-alert.html
“COVID Alert,
Canada,
of
“The
[29] California Dept of Technology, “California COVID Notify,” 2020.
[Online]. Available: https://play.google.com/store/apps/details?id=gov.
ca.covid19.exposurenotiﬁcations
clever
’ﬁnd
my’ feature,” 2019. [Online]. Available: https://www.wired.com/story/
apple-ﬁnd-my-cryptography-bluetooth/
cryptography behind apple’s
[30] A. Greenberg,
[31] M. Green, “How does apple (privately) ﬁnd your ofﬂine devices?” 2019.
[Online]. Available: https://blog.cryptographyengineering.com/2019/06/
05/how-does-apple-privately-ﬁnd-your-ofﬂine-devices/
[32] Bluetooth SIG, Inc., “Bluetooth Market update,” https://www.bluetooth.
com/bluetooth-resources/2019-bluetooth-market-update/, 2019.
[33] M. Schulz, D. Wegemer, and M. Hollick, “Nexmon: The c-
[Online]. Available:
based ﬁrmware patching framework,” 2017.
https://nexmon.org
[34] M. Stute, S. Narain, A. Mariotto, A. Heinrich, D. Kreitschmann,
G. Noubir, and M. Hollick, “A billion open interfaces for eve and
mallory: Mitm, dos, and tracking attacks on ios and macos through apple
wireless direct link,” in 28th USENIX Security Symposium (USENIX
Security 19), 2019.
[35] G. Celosia and M. Cunche, “Discontinued privacy: Personal data leaks
in apple bluetooth-low-energy continuity protocols,” Proceedings on
Privacy Enhancing Technologies, vol. 2020, 2019.
[36] “Bluetooth Low Energy SDR C++ Library,” 2020. [Online]. Available:
https://github.com/jocover/BLESDR
[37] INRIA, “Stop Covid, France,” 2020.
[Online]. Available: https:
//gitlab.inria.fr/stopcovid19
[38] Claude Castelluccia, Nataliia Bielova, Antoine Boutet, Mathieu
Cunche, C´edric Lauradoux, et al., “ROBERT: ROBust and privacy-
presERving proximity Tracing.” 2020.
[Online]. Available: https:
//hal.inria.fr/hal-02611265/document
[39] R. Sun, W. Wang, M. Xue, G. Tyson, and D. C. Ranasinghe, “Venue-
Trace: A Privacy-by-Design COVID-19 Digital Contact Tracing So-
lution: Poster Abstract,” in Proceedings of the 18th Conference on
Embedded Networked Sensor Systems, 2020.
[40] S. Narain and G. Noubir, “Mitigating location privacy attacks on
mobile devices using dynamic app sandboxing,” Proceedings on Privacy
Enhancing Technologies, 2019.
[41] Xposed Framework, “The Xposed Framework Source Code,” https://
github.com/rovo89/XposedInstaller, 2017.
REFERENCES
[1] K. Fawaz and K. G. Shin, “Location privacy protection for smartphone
users,” in Proceedings of the 2014 ACM SIGSAC Conference on Com-
puter and Communications Security (CCS), 2014.
[2] Senate Judiciary Committee, “S.2171 - Location Privacy Protection
Act of 2014,” https://www.congress.gov/bill/113th-congress/senate-bill/
2171, 2014.
[3] T. D. Vo-Huu, T. D. Vo-Huu, and G. Noubir, “Fingerprinting Wi-Fi
Devices Using Software Deﬁned Radios,” in Proceedings of the 9th ACM
Conference on Security & Privacy in Wireless and Mobile Networks, ser.
WiSec ’16, 2016.
[4] J. Yu, A. Hu, G. Li, and L. Peng, “A Robust RF Fingerprinting Approach
Using Multisampling Convolutional Neural Network,” IEEE Internet of
Things Journal, vol. 6, no. 4, pp. 6786–6799, 2019.
[5] K. Youssef, L. Bouchard, K. Haigh, J. Silovsky, B. Thapa, and C. V.
Valk, “Machine Learning Approach to RF Transmitter Identiﬁcation,”
IEEE Journal of Radio Frequency Identiﬁcation, vol. 2, no. 4, pp. 197–
205, 2018.
[6] S. Narain, T. D. Vo-Huu, K. Block, and G. Noubir, “Inferring user
routes and locations using zero-permission mobile sensors,” in 2016
IEEE Symposium on Security and Privacy (SP), 2016.
[7] K. Block, S. Narain, and G. Noubir, “An autonomic and permissionless
android covert channel,” in Proceedings of the 10th ACM Conference
on Security and Privacy in Wireless and Mobile Networks, ser. WiSec
’17. Association for Computing Machinery, 2017.
[8] 3rd Generation Partnership Project (3GPP), “Technical Speciﬁcation
Group Services and System Aspects: System Architecture for the 5G
System; Release 16,” 2020.
[9] J. Martin, T. Mayberry, C. Donahue, L. Foppe, L. Brown, C. Riggins,
E. Rye, and D. Brown, “A study of mac address randomization in
mobile devices and when it fails,” Proceedings on Privacy Enhancing
Technologies, vol. 2017, pp. 365 – 383, 2017.
[10] Core Speciﬁcation Working Group, “Bluetooth Core Speciﬁcation: Re-
vision 5.2,” 2019.
[11] M. Cominelli, F. Gringoli, P. Patras, M. Lind, and G. Noubir, “Even
black cats cannot stay hidden in the dark: Full-band de-anonymization
of bluetooth classic devices,” in 2020 IEEE Symposium on Security and
Privacy (SP), 2020, pp. 534–548.
[12] J. Becker, D. Li, and D. Starobinski, “Tracking Anonymized Bluetooth
Devices,” Proceedings on Privacy Enhancing Technologies, 2019.
[13] L. Ferretti, C. Wymant, M. Kendall, L. Zhao, A. Nurtay, L. Abeler-
D¨orner, M. Parker, D. Bonsall, and C. Fraser, “Quantifying sars-
cov-2 transmission suggests epidemic control with digital contact
tracing,” Science, vol. 368, no. 6491, 2020.
[Online]. Available:
https://science.sciencemag.org/content/368/6491/eabb6936
[14] Apple Inc. & Google LLC, “Privacy-Preserving Contact Tracing - Apple
and Google,” https://www.apple.com/covid19/contacttracing/, 2020.
[15] C. Troncoso, M. Payer, J.-P. Hubaux, M. Salath´e, J. Larus, E. Bugnion,
W. Lueks, T. Stadler, A. Pyrgelis, D. Antonioli, L. Barman, S. Chatel,
K. Paterson, S. ˇCapkun, D. Basin, J. Beutel, D. Jackson, M. Roeschlin,
P. Leu, B. Preneel, N. Smart, A. Abidin, S. G¨urses, M. Veale, C. Cre-
mers, M. Backes, N. O. Tippenhauer, R. Binns, C. Cattuto, A. Barrat,
D. Fiore, M. Barbosa, R. Oliveira, and J. Pereira, “Decentralized privacy-
preserving proximity tracing,” arXiv:2005.12273 [cs.CR], 2020.
[16] R. L. Rivest, D. Weitzner, L. Ivers, I. Soibelman, and M. Zissman, “Pact:
Private automated contact tracing,” 2020.
[17] R. L. Rivest, J. Callas, R. Canetti, K. Esvelt, D. K. Gillmor, Y. T. Kalai,
A. Lysyanskaya, A. Norige, R. Raskar, A. Shamir et al., “The pact
protocol speciﬁcation,” Private Automated Contact Tracing Team, MIT,
Cambridge, MA, USA, Tech. Rep. 0.1, 2020.
[18] J. Chan, D. Foster, S. Gollakota, E. Horvitz, J. Jaeger, S. Kakade,
T. Kohno, J. Langford, J. Larson, P. Sharma, S. Singanamalla, J. Sun-
shine, and S. Tessaro, “Pact: Privacy sensitive protocols and mechanisms
for mobile contact tracing,” arXiv:2004.03544 [cs.CR], 2020.
[19] S. Vaudenay, “Centralized or decentralized? the contact
tracing
dilemma,” Cryptology ePrint Archive, Report 2020/531, 2020, https:
//eprint.iacr.org/2020/531.
[20] H. Cho, D.
Ippolito, and Y. W. Yu, “Contact
tracing mobile
apps for covid-19: Privacy considerations and related trade-offs,”
arXiv:2003.11511 [cs.CR], 2020.
[21] N. Trieu, K. Shehata, P. Saxena, R. Shokri, and D. Song, “Epione:
tracing with strong privacy,” arXiv:2004.13293
Lightweight contact
[cs.CR], 2020.
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:26:04 UTC from IEEE Xplore.  Restrictions apply. 
1331