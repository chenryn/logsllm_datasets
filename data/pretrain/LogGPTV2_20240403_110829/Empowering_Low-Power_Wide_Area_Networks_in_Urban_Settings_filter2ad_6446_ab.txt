different data rates (there are only 4 different data rates in the uplink in the USA).
However, it can not handle collisions occurring on a given data rate.
311
Figure 2: LP-WAN PHY: LoRaWAN uses chirps to depict transmitted bits.
Our work, while building on these systems, differs in that it seeks
to exploit correlation of sensor data without requiring hardware
modification to LP-WAN sensor radios or the LP-WAN PHY layer.
In doing so, it achieves the gain of exploiting correlated sensor
data without introducing complexity in PHY-layer hardware and
protocols.
3 A PRIMER ON LP-WANS
This section provides a brief primer on the LoRaWAN LP-WAN
protocol. LoRaWANs operate in the unlicensed 900 MHz band with
bandwidths of up to 500 kHz. LoRaWAN base stations transmit at
powers up to 1 Watt while clients transmit few milliwatts at best.
The PHY and MAC layers are designed with this power asymmetry
in mind.
Physical Layer: The LP-WAN PHY encodes information in the
form of multiple “chirps” that are signals whose frequency varies
linearly in time over the available bandwidth. Fig. 2(a)-(b) illustrate
two such chirps depicting bits “0” and “1” in the time domain and
the corresponding spectrogram. Different bits are encoded by initi-
ating the chirps at different frequencies, for instance “0” at −62.5
kHz and “1” at 0 kHz over a bandwidth of 125 kHz. LoRaWAN
uses chirps, as they occupy limited instantaneous bandwidth and
therefore consume very little power in communicating bits over
long distances. Further, they are robust to narrowband interferers.
Rate Adaptation: While Fig 2 encodes one bit per chirp, Lo-
RaWAN supports larger data rates by increasing the number of
possible starting frequencies of a chirp to pack in more bits. For
instance, a transmission with 3-bits per chirp would choose from
one of 23 possible starting frequencies. The LoRaWAN standard
allows as many as 12-bits encoded in a chirp. LoRaWAN base sta-
tions program each clients to operate on a suitable data rate based
on its received signal-quality.
MAC Layer: As described in Sec. 2, the LoRaWAN MAC is designed
to avoid collisions and divide air time between competing users.
LoRaWAN typically employs two modes to do this for low-power
nodes [28]: (1) An Aloha MAC that allows nodes to transmit as
soon as they wake up and apply random exponential back-off, when
faced with a collision. While simple, Aloha scales poorly in dense
networks due to frequent collisions [32]. (2) A TDMA scheduler
where the base station allots predetermined slots to clients. The
choice of scheme depends on the application (e.g. whether sensed
data is bursty) and client power constraints.
(a)                                  (b)SIGCOMM ’17, August 21–25, 2017, Los Angeles, CA, USA
R. Eletreby, D. Zhang, S. Kumar, and O. Yağan
n bits are encoded as 2n distinct chirps, each starting at a unique
frequency. Consequently, the location of the peak corresponding
to each transmitter is given by the sum of this frequency offset
and the underlying data transmitted by the user. To illustrate the
problem, observe that Fig. 3, has two peaks at bins 207 and 257.
Such a collision could both be interpreted as identical data and a
frequency offset of 50 bins, or zero frequency offset and encoded
data differing by 50 bins, or any of the many options in between.
Choir overcomes this problem by relying on the fact that while
frequency offset remains constant over a packet between chirps,
data does not. To see how this is useful, consider two packets
consisting of three symbols (i.e., three chirps) that collide from two
users. We assume that the first symbol is a known preamble shared
by all users, while the second and third carry useful data. As a
result, peak locations from the first symbol can be used to estimate
the frequency offset of the first and second user respectively. These
frequency offsets can now be subtracted from peaks in subsequent
users to capture data corresponding to the first and second user
respectively.
An important question still remains – How do we know who
is the first and second user in each data symbol? Knowing this is
necessary to map the correct frequency offset to the correct peak.
More importantly, it is required to avoid mixing up the data bits of
the two transmitters when reporting the decoded data.
Our solution to resolve this challenge relies on the fact that data
bits occur on integer peak locations in the Fourier transform, while
frequency offsets need not. Put differently, frequency offset is a
physical phenomenon and does not need to be a perfect multiple
of the size of a Fourier transform bin. As a result, the peak loca-
tions can be an arbitrary fraction of a Fourier transform bin. To
illustrate, suppose we observe two data symbols where the peaks
are at 207.2, 257.6 for the first symbol and 81.6, 200.2 for the second
symbol. While the integer parts of these peak locations depend on
both data and frequency offset, the fractional part depends only on
frequency offset, which remains consistent across symbols. Conse-
quently 207.2 and 200.2 must map to one user while 257.6 and 81.6
belong to the other. Choir therefore can use the fractional part of
peak locations to distinguish between peaks corresponding to the
different users in each symbol, prior to decoding their data bits.
The rest of this paper focuses on achieving three important
objectives to realize the above design:
• Separating Multiple Users: First, we must estimate frequency
offsets accurately to within a fraction of each bin of the
Fourier transform. In doing so, we must account for and
actively leverage leakage between peaks that is produced
due to the frequency offsets that are non-integer multiples of
a Fourier transform bin. We then use these frequency offsets
to separate collisions of multiple users. Sec. 5 describes our
approach in greater detail.
• Tracking Users using Time and Frequency Offsets: While our
discussion so far assumes that signals collide in a perfectly
synchronized manner in time, collisions can occur with ar-
bitrary timing offsets in practice. We overcome this by ex-
ploiting the duality between time and frequency in chirps:
an offset in time manifests as an equivalent offset in fre-
quency. Our approach in Sec. 6 describes how we exploit this
Figure 3: Decoding collisions: Spectrogram of two collided chirps, and the
corresponding Fourier transform peaks.
4 CHOIR IN A NUTSHELL
In this section, we provide a brief overview of Choir’s core algo-
rithm. At a high level, our goal is to disentangle wireless signal
measurements from colliding commodity LP-WAN transmitters
with a single-antenna LP-WAN base station.
The core concepts behind Choir are best understood with an
example. Consider two LP-WAN radios, both transmitting the same
sequence of n bits to an LP-WAN base station. We assume these n
bits are encoded in a single chirp as in Fig. 2 by each transmitter.
Suppose the two transmissions are aligned perfectly in time, induc-
ing a collision between their chirps. Given that the two LP-WAN
radios encode their bits in the exact same way, the resulting chirps
would be identical. At first blush, one would assume that these
chirps would combine either constructively or destructively upon
colliding. This would be problematic for two reasons: First, the
combined signal would be indistinguishable from a single trans-
mitter with higher power, rendering the two chirps from the two
transmitters impossible to be separated. Second, if the signals add
up destructively, one would not be able to recover either of their
transmissions.
Choir recognizes that in practice, however, the two signals can be
separated by exploiting the natural hardware imperfections of the
two radios. Specifically, signals from the two transmitters are likely
to experience a small frequency offset, due to a difference in the
frequency of their oscillators. This would result in the two chirps
being slightly offset in frequency. Fig. 3 depicts the spectrogram of
two collided chirps from two commodity LP-WAN radios gathered
by a software radio. Note that one can observe two distinct chirps
that are shifted in frequency, despite the fact that they both convey
the same information. At this point, we can separate the two chirps
using a simple process: (1) We first multiply the received signal by
a down-chirp2 that would result in two tones at two frequencies.
(2) We then apply a Fourier transform of size 2n, which results in
two peaks corresponding to the two transmissions. In Fig. 3(c), we
observe two peaks at two distinct bins, corresponding to the two
transmissions. One can then repeat this process for subsequent
received chirps to disentangle transmissions from the two users.
While the above approach succeeds in separating the two trans-
mitters, it fails to decode useful data. To see why, recall that Lo-
RaWAN encodes data by shifting chirps in frequency. Specifically,
2A down-chirp, i.e., a chirp whose frequency decreases with time, is merely the complex
conjugate of the corresponding up-chirp that was used for CSS modulation.
312
(a)                          (b)(c)                          (d)Empowering Low-Power Wide Area Networks in Urban Settings
SIGCOMM ’17, August 21–25, 2017, Los Angeles, CA, USA
property to account for timing offsets. We also explain how
tracking timing offset, frequency offset as well as channels
across symbols help us identify which user is which between
collisions.
• Exploiting Correlated Data: Our discussion thus far has fo-
cused on decoding uncorrelated data bits transmitted by two
users. However, sensor data is often correlated resulting in
nodes transmitting identical chunks of bits. In Sec. 7 we de-
sign algorithms to recognize and exploit such scenarios to
boost the range of sensors that are otherwise beyond the
communication range of the base station.
5 SEPARATING COLLISIONS
This section describes how Choir can separate transmissions from
multiple client nodes that utilize the same spreading factor3 (we
discuss the case of different spreading factors in the concluding
remarks of Sec. 5.2) and whose transmissions are synchronized
perfectly in time (we discuss the effect of timing offset in Sec. 6) .
As explained earlier, our approach relies on accurately estimating
and exploiting the frequency offset of individual clients. However,
estimating frequency offsets accurately in the presence of noise
remains a challenge. To illustrate the need for this, we revisit our
example from Sec. 4. As shown in Fig. 3(c), signals from the two
transmitters manifest as two distinct peaks shifted owing to fre-
quency offset. At this point, we can directly read-off the locations
of the peaks to estimate the respective frequency offset of the two
nodes. Further, we can filter out the signals around each of the two
peaks to obtain the signals from the respective transmitters.
While the above approach is simple, it is prone to inaccuracies
and vulnerable to interference. To see why, recall that the estimate
of frequency offsets from peak locations is only accurate to within
one FFT bin. However, frequency offset is a physical phenomenon
that need not be an integer multiple of an FFT bin. This means that
the above method loses any information pertaining to frequency
offset that is a fraction of one FFT bin. Failing to account for frac-
tional frequency offsets has two important implications: (1) First,
as explained in Sec. 4, the fractional part of the frequency offset
is extremely useful in identifying which user is which across sym-
bols; without this, the data corresponding to a single user cannot
be tracked over time. (2) Second and more fundamentally, having
an inaccurate estimate of frequency offset leads to an inaccurate
estimate of wireless channels and thus, of the decoded data. Specif-
ically, it causes peaks corresponding to one transmitter to “leak”
into others, causing interference. Indeed, this leakage is particularly
acute when one transmitter is significantly closer to the receiver
compared to the other. This causes one peak to be buried due to
noise stemming from another (the so-called near-far effect [20]).
Below, we detail our solution to both of these challenges to estimate
frequency offsets as well as separate and decode data.
5.1 Measuring Accurate Frequency Offset
Our solution to accurately measure the fractional part of the fre-
quency offset is based on exploiting the leakage of one peak to the
3The spreading factor denotes the number of bits that can be encoded per symbol. Each
spreading factor maps to a particular chirp used for CSS modulation and demodulation
and it determines the data rate.
313
other. In order to illustrate this with an example, let us revisit the
scenario in Fig. 3 where the two transmitters are separated by a
fractional value of frequency offset corresponding to 50.4 bins. The
figure however depicts two clear peaks separated by exactly 50 bins.
Indeed the remaining separation of “0.4” is encoded in the smaller
peaks that leak around the surrounding bins. To better understand
and analyze this leakage, let us perform a Fourier transform of
the collision between the two transmitters over a wider window
(10× larger) by zero-padding the signal. Fig. 3(d) plots the resulting
Fourier transform output. Observe that we now have “sinc” func-
tions centered around each peak, a property that stems from the
Nyquist sampling theorem. We now observe that the smaller peaks
around the main two peaks are produced due to the side-lobes of
these sinc functions. Notice that these side lobes are periodic, at
an interval of exactly one FFT bin. Indeed, if the two main peaks
were apart by an integer multiple, the zeros of the side lobes would
overlap perfectly with the main peaks, ensuring zero leakage. In
contrast, a fractional separation between peaks causes the side lobes
of one peak to interfere with the main lobe of another peak, distort-
ing its shape and location. Consequently, identifying the location
of the maxima of the two sinc main peaks provides only a coarse
estimate of the frequency offset. In the above example, we observe
the two peaks separated by 50.3 bins – an improvement over the
previous estimate of “50” bins, but a value that is still erroneous.
To obtain a more fine-grained estimate of the frequency offset,
we explicitly model the leakage of the sinc function of one client’s
signal into the other. First, we estimate the wireless channels of
each transmitter, given our coarse estimate of its frequency offset.
We then re-construct the received signal using the obtained wireless
channels and our frequency offsets. We subtract the reconstructed
wireless signal from the actual one to obtain the residual signal. The
power of this residual function is an estimate of the goodness of
our current frequency offset estimates. We then jitter our estimates
of frequency offset and repeat the process, until the power of the
residual is minimized. We show that the power of residuals across
frequency offset values is locally convex, allowing us to search over
the space of frequency offsets efficiently.
Analysis: We now illustrate our approach to mathematically esti-
mate frequency offsets from the collision of two transmitters send-
ing an identical symbol, e.g. a preamble sequence. Let h1 and h2
denote the wireless channels and f1 and f2 denote the frequency off-
sets of two transmitters whose chirps collide in time. Let C denote
the chirp in the preamble transmitted by both clients that spans a
bandwidth of B. Then, we can write the time domain representation
of the collision as:
y(t) = h1ej2π f1tC + h2ej2π f2tC ⇒ yC−1 = h1ej2π f1t + h2ej2π f2t,
(1)
where C−1 denotes the down-chirp corresponding to the up-chirp
C. Ideally, the frequency domain representation of the above signal
(obtained via FFT), denoted F (yC−1
), should result in two peaks
at frequencies f1 and f2. However, in practice f1 and f2 are unlikely
to be at integer boundaries of the FFT bin, as explained earlier. As
a result, the peaks of the Fourier transform will likely be close, but
not equal, to f1 and f2. Let us denote the observed peak locations
as ˜f1 and ˜f2, respectively. One can then estimate the approximate
wireless channels ˜h1 and ˜h2 that best fit Eqn. 1. Fortunately, given
that Eqn. 1 is linear, this can be obtained using a least-squares closed
SIGCOMM ’17, August 21–25, 2017, Los Angeles, CA, USA
R. Eletreby, D. Zhang, S. Kumar, and O. Yağan
quite possible that transmissions from users are missed altogether.
This is essentially a near-far problem where strong receptions from
nearby transmitters overwhelm weaker transmitters [20].
At first blush, one might consider directly employing successive
interference cancellation [21] as a solution to overcome this prob-