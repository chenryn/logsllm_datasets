nt!NtDeviceIoControlFile
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38 win32k!NtGdiGetOutlineTextMetricsInternalW#2 win7/win10 32/64bit
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
nt!NtQueryVirtualMemory#3 win7/win10 32/64bit
nt!NtQueryInformationThread win7/win10 32/64bit
nt!NtQuerySystemInformation#3 win7/win10 32/64bit
win32k!NtUserGetSystemMenu
win32k!NtUserCreateWindowEx
win32k!SfnINLPCREATESTRUCT
win32k!NtUserRealInternalGetMessage
win32k!xxxClientLoadMenu
win32k!xxxMNGetBitmapSize
nt!NtCallbackReturn
win32k!NtUserBeginPaint
win32k!TraceGreReleaseSemaphore
win32k!xxxWindowEvent
win32k!NtUserGetScrollBarInfo
win32k!NtUserGetMenuBarInfo
win32k!ClientLoadLibrary
win32k!NtUserBeginPaint#2
nt!NtTraceEvent
csc!CscDclpInitializeFsctlBufferContext
nt!PfSnBuildDumpFromTrace
nt!PfSnGetCompletedTrace
nt!WmipIoControl win7/win10 32/64bit
win32k!NtGdiEnumFonts win7/win10 32/64bit
nt!NtDeviceIoControlFile#3 win7/win10 32/64bit
nt!IopXxxControlFile win7/win10 32/64bit
NSI!NsiGetParameter win7/win10 32/64bit
nt!NtGdiGetGlyphOutline win7/win10 32/64bit
win7 32bit
win7 32bit
win7 32bit
win7 32bit
win7 32bit
win7 32bit
win7 32bit
win7 32bit
win7 64bit
win7 32bit
win7 32bit
win7 32bit
win7 32bit
win7 32bit
win7 32bit
win7 32bit
win7 32bit
win7 32bit
win7 32/64bit
nt!NtDeviceIoControlFile#2
win7 32/64bit
nt!NtQuerySystemInformation#2
win10 32/64bit
stack
stack
stack
stack
stack
stack
stack
stack
stack
stack
stack
stack
stack
stack
stack
stack
stack
stack
stack
stack
stack
stack
stack
stack
stack
stack
stack
stack
stack
stack
stack
heap
heap
heap
heap
heap
heap
heap
heap
heap
heap
heap
heap
heap
heap
heap
heap
heap
heap
stack
stack
stack
stack
stack
stack
stack
stack
stack
stack
stack
stack
stack
stack
heap
heap
heap
heap
Historical CVE-2017-0167, 0x14 bytes disclosure (rep movsd)
Historical CVE-2017-0245, 0x04 bytes disclosure (rep movsd)
Historical CVE-2017-0300, 0x05 bytes disclosure (rep movsd)
Historical CVE-2017-11853, 0x0c bytes disclosure (rep movsd)
Historical CVE-2017-8470, 0x04 bytes disclosure (memove)
Historical CVE-2017-8471, 0x04 bytes disclosure (movsd)
Historical CVE-2017-8472, 0x07 bytes disclosure (rep movsd)
Historical CVE-2017-8473, 0x08 bytes disclosure (rep movsd)
Historical CVE-2017-8475, 0x14 bytes disclosure (rep movsd)
Historical CVE-2017-8476, 0x04 bytes disclosure (rep movsd)
Historical CVE-2017-8477, 0x68 bytes disclosure (rep movsd)
Historical CVE-2017-8478, 0x04 bytes disclosure (memove)
Historical CVE-2017-8479, 0x10 bytes disclosure (memove)
Historical CVE-2017-8480, 0x06 bytes disclosure (rep movsd)
Historical CVE-2017-8481, 0x02 bytes disclosure (rep movsd)
Historical CVE-2017-8482, 0x20 bytes disclosure (rep movsd)
Historical CVE-2017-8485, 0x04 bytes disclosure (rep movsd)
Historical CVE-2017-8681, 0x0100 bytes disclosure (rep movsd)
Historical CVE-2017-8684, 0x50 bytes disclosure (memove)
Historical CVE-2017-8685, 0x034c bytes disclosure (rep movsd)
Historical CVE-2017-8687, 0x08 bytes disclosure (rep movsd)
Historical CVE-2018-0745, 0x04 bytes disclosure (rep movsd)
Historical CVE-2018-0810, 0x04 bytes disclosure (rep movsd)
Historical CVE-2018-0832, 0x04 bytes disclosure (rep movsd)
Historical CVE-2018-0897, 0x78 bytes disclosure (rep movsd)
Historical CVE-2018-0901, 0x04 bytes disclosure (rep movsd)
Historical CVE-2018-0968, 0x04 bytes disclosure (memove)
Historical CVE-2018-0969, 0x04 bytes disclosure (rep movsd)
Historical CVE-2018-0971, 0x04 bytes disclosure (rep movsd)
Historical CVE-2018-0974, 0x08 bytes disclosure (rep movsd)
Historical CVE-2018-0975, 0x38 bytes disclosure (rep movsd)
Historical CVE-2017-0258, 0x08 bytes disclosure (memove)
Historical CVE-2017-0259, 0x3c bytes disclosure (memove)
Historical CVE-2017-0299, 0x02 bytes disclosure (rep movsd)
Historical CVE-2017-11785, 0x37 bytes disclosure (rep movsd)
Historical CVE-2017-11831, 0x19 bytes disclosure (rep movsd)
Historical CVE-2017-8469, 0x01e4 bytes disclosure (rep movsd)
Historical CVE-2017-8484, 0x05 bytes disclosure (rep movsd)
Historical CVE-2017-8488, 0x1a bytes disclosure (rep movsd)
Historical CVE-2017-8489, 0x48 bytes disclosure (rep movsd)
Historical CVE-2017-8490, 0x47 bytes disclosure (rep movsd)
Historical CVE-2017-8491, 0x08 bytes disclosure (rep movsd)
Historical CVE-2017-8492, 0x04 bytes disclosure (memove)
Historical CVE-2017-8564, 0x0d bytes disclosure (memove)
Historical CVE-2017-8680, arbitrary number of bytes (rep movsd)
Historical CVE-2018-0746, 0x0c bytes disclosure (memove)
Historical CVE-2018-0894, 0x04 bytes disclosure (rep movsd)
Historical CVE-2018-0895, 0x04 bytess disclosure (rep movsd)
Historical CVE-2018-0973, 0x04 bytes disclosure (rep movsd)
Historical
Historical
Historical
Historical
Historical
Historical
Historical
Historical
Historical
Historical
Historical
Historical
Historical
Historical
Historical
Historical
Historical
Historical
0x0c bytes disclosure (rep movsd)
0x0c bytes disclosure (rep movsd)
0x0c bytes disclosure (rep movsd)
0x10 bytes disclosure (rep movsd)
0x02 bytes disclosure (rep movsd)
0x14 bytes disclosure (rep movsd)
0x14 bytes disclosure (rep movsd)
0x20 bytes disclosure (rep movsd)
0x24 bytes disclosure (memove)
0x04 bytes disclosure (rep movsd)
0x04 bytes disclosure (rep movsd)
0x06 bytes disclosure (rep movsd)
0x06 bytes disclosure (rep movsd)
0x08 bytes disclosure (rep movsd)
0x04 bytes disclosure (rep movsd)
0x05 bytes disclosure (rep movsd)
0x0260 bytes disclosure (rep movsd)
0x44 bytes disclosure (rep movsd)
Session 8D: Language SecurityCCS ’19, November 11–15, 2019, London, United Kingdom1892Table 4: The result to detect vulnerabilities in old versions of Windows kernels. These vulnerabilities (18 in total) can be
detected by our system, but missed by Bochspwn.
Component
System
stack/heap
Status
Brief description
1
win32k!NtQueryCompositionSurfaceBinding win7/win10 32/64bit
nt!NtQueryVolumeInformationFile win7/win10 32/64bit
2
nt!NtQueryVolumeInformationFile#2 win7/win10 32/64bit
3
nt!NtSetIoCompletion/NtRemoveIoCompletion win7/win10 32/64bit
4
nt!NtQueryInformationTransactionManager win7/win10 32/64bit
5
msrpc!MesEncodeIncrementalHandleCreate win7/win10 32/64bit
6
7
nt!PspWow64GetContextThreadOnAmd64
8
win32k!NtUserToUnicodeEx
9
win32k!NtUserCallNoParam
10
nt!CommonDispatchException
11
win32k!SfnDWORD
12
nt!ExpReleaseResourceForThreadLite
13 win32k!DEVLOCKBLTOBJ::bMapTrgSurfaceView
nt!NtWriteFile
14
win32k!PopThreadGuardedObject
15
win32k!NtUserPeekMessage
16
nt!NtLockFile
17
nt!NtUnlockFile
18
win7 64bit
win7 32bit
win7 32bit
win7 32bit
win7 64bit
win7 64bit
win7 64bit
win10 64bit
win7 64bit
win7 64bit
win10 64bit
win10 64bit
(c0000061), and four bytes in the kernel stack (LocalResponse) will
be leaked to the user space memory Response.
Our system locates this vulnerability when replaying the in-
stances with the poisoned kernel stack. After executing 5.3 billion
instructions, a differential point is encountered at PC 0x819e6147
(nt!NtRaiseHardError+0x175). The instruction in the differential
point is mov dword ptr [ebx], eax, where four bytes of 0xaa (i.e.
the poison value) in eax have been moved into a user space memory
region pointed by ebx. Then we go back 500 stack frames ahead of
the differential point, and start the forward symbolic taint analysis.
When reaching the differential point, the taint symbolic expres-
sion of eax is TAINT_FunctionID_896[224:255], denoting that the
uninitialized value comes from NtRaiseHardError at stack offset
0x1C-0x1F. The expression clearly reflects the relationship between
the uninitialized kernel stack and information leaked to user space
memory. This shows the capability of our system to detect the use
of uninitialized variables. Moreover, it demonstrates that the sym-
bolic expression can help an analyst to understand which part of
the memory has been leaked.
Comparison with Bochspwn: Since Bochspwn is the state-of-art
tool to detect kernel memory leak, we would like to compare our
tool with it. To this end, we used the proof-of-concept (PoC) exploits
publicly released by Bochspwn and ran them in old versions of
Windows systems (Windows 7 Service Pack 1 6.1.7601.17514 32/64
bits, Windows 10 pro 1703 10.0.15063.674 32 bits and Windows 10