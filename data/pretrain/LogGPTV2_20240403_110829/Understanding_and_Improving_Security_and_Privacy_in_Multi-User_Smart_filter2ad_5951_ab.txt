home interface, based on design principles (Section 4.1) that
we distill from prior work. Second, we conduct an in-home
user study using our prototype, to evaluate whether these de-
sign principles meet user needs in practice, and to improve our
understanding of users’ behaviors given improved multi-user
security and privacy features in a smart home.
4 Prototype Design and Implementation
To support the investigation of our research questions, we
prototyped a mobile application for controlling smart homes
that provides multi-user security and privacy features such as
access controls, designed for households in which members
are generally motivated to cooperate. We now describe the
guiding design principles for our prototype.
Initial Design Principles
4.1
We developed our prototype based on lessons from prior work,
which suggested that the following design principles may be
important for multi-user smart homes:
Access Control Flexibility. Prior work [16] has suggested
that smart home access control and authentication systems
should be ﬂexible enough to support a wide variety of use
cases, people, and types of relationships that exist in homes.
We aimed to support a variety of relationships, like couples,
roommates, children, guests, and domestic workers, and also
different contextual factors, like location. These factors can
be combined to create the policy that suits the user.
User Agency. Prior work [14] found power imbalances
among smart home users that reduce the agency of users
with less (technical or interpersonal) power. We aimed to sup-
port a feeling of agency for all users in the smart home, by
making the smart home more accessible and discoverable. For
example, for access controls, our prototype allows people to
“ask for permission”, rather than to be locked out entirely. We
aim to make smart home functionality more discoverable, by
showing users which devices are nearby and accessible. We
also aimed to simplify the process of on-boarding new users.
Respect Among Users. Prior work has surfaced signiﬁcant
potential for tensions and conﬂicts among users of a smart
home (e.g., [14,41]). We aimed to encourage respectful usage
of the smart home by minimizing conﬂict points: for example,
making it harder for one user to remotely control or automate
devices in a way that would surprise or disturb another.
Transparency of Smart Home Behaviors. Prior work sug-
gests that smart home automations and apps may malfunc-
tion or act maliciously (e.g., [11, 34]), violate the privacy of
unaware users (e.g., [41]), or confuse users who did not con-
ﬁgure them. When smart homes are used for domestic abuse,
abusers have harassed victims with remote control, masking
it as automatic behavior [3]. We aimed for the smart home to
transparently surface its behavior to all people in the home
(realizing that there may be privacy implications, as we dis-
cuss below), especially when people are remotely controlling
it, or when an automation/third-party app is acting on its own.
4.2 General Design Description
We designed a mobile application that allows multiple users
to control their smart home devices. In terms of threat model,
we assume that the control application and the underlying
smart home (SmartThings, in our study) are trustworthy and
uncompromised. We assume that third-party smart home au-
tomations or applications may be buggy or compromised, but
our design does not aim to prevent such issues. We assume
that users may use or conﬁgure the smart home in ways that
are undesirable to others in the home, though we focus on
cases in which this behavior is accidental or mildly malicious
(e.g., “trolling”); we do not attempt to defend against a deter-
mined, malicious adversary (e.g., an abuser).
The basic interface of our app is similar to other mo-
bile apps for controlling smart homes (e.g., Samsung Smart-
Things). The main view of the app displays a list of devices
and their current status (Figure 1a). Devices can be organized
by room for convenience. The state of a device can be adjusted
by tapping its status, and tapping its name reveals options for
access controls and notiﬁcations (described below).
We aimed to simplify the process of onboarding additional
users, towards meeting the “user agency” principle. The ﬁrst
user must create an account with a username and password,
but they can add other users by scanning a QR code on the
new user’s phone. These additional users do not need a login,
instead using public key authentication tied to their device.
4.3 Access Controls
Towards meeting the “access control ﬂexibility” and “respect
among users” principles, we designed access controls for
accessing device capabilities, based on access control prefer-
ences and use cases surfaced in prior work (e.g., [10, 16]).
Role-Based Access Control. Each household member has a
separate user account. Users can be restricted from using a
device via the ‘Allowed Users” setting (Figure 1b). Users are
also assigned to roles (admin, child, guest). Only admins have
the ability to make conﬁguration changes: changing access
control policies, adding new users, organizing the devices.
Location-Based Access Control. Users can also be re-
stricted from controlling device capabilities if they are not
physically near the device, or not at home, using the “Remote
Control” permission (Figure 1c). This access control can be
162    28th USENIX Security Symposium
USENIX Association
Figure 1: Access Control UI. From left to right: (a) The main interface for controlling devices. (b) Interface for setting access
controls on devices, by role, and options for reactive/supervisory access control. (c) Interface for setting location-based access
controls on a device, for each user. (d) Reactive access control prompt: what users see while waiting for approval.
set per-user, to accommodate use cases like only allowing
guests and domestic workers to access smart home devices
while in the house. It could also be used to promote respect
among users by preventing them from remotely controlling
devices like lights when other people are in the room.
Supervisory Access Control. Access controls are in some
ways antithetical to user agency. For example, parents may
want to use parental controls to keep children from causing
trouble, but may not want to block children from using the
smart home at all times, like when the parents are at home
and are able to supervise. To serve this potential use case, we
implemented supervisory access control (ﬁrst proposed by He
et al. [16]): if a user is restricted from controlling a device,
they can still be permitted to control it if another (authorized)
user is nearby (Figure 1b).
Reactive Access Control. Access control policies based on
role and location could be too rigid for every situation. There
may be occasional edge-cases where it does not make sense
to enforce a policy. Towards the principles of increasing ﬂex-
ibility and supporting user agency for restricted users, we
implemented reactive access control [10, 24]. If a user at-
tempts to access a capability they do not have permission to
use (Figure 1d), the app will ask a more privileged user for
permission in real-time, by sending a notiﬁcation to asking
them to approve or deny the request (Figure 2c).
4.4 Activity Notiﬁcations
the name of the device, the change in state, and the user or
process responsible for causing the change (Figure 2).
We chose to use notiﬁcations over other designs that fo-
cused on visualizing automations and events in-app [5, 26],
to explore a different point in the design space. Rather than
having users navigate to a particular interface when motivated
to investigate activity in their smart home, we hypothesized
that real-time notiﬁcations could provide information in a
more timely and relevant manner.
Because the number of notiﬁcations from the smart home
could be overwhelming, we allowed users to disable notiﬁ-
cations on a per-device basis, or to only receive notiﬁcations
from physically nearby devices.
4.5 Discovery Notiﬁcations
Prior work (e.g., [14, 41]) suggests that one challenge with
multi-user smart homes is that less technically savvy or en-
gaged users may struggle with accessing smart devices. Thus,
towards meeting the “user agency” principle, we wanted to
make it clear which smart devices were nearby and could be
actuated, especially for novice users. We designed a persistent
notiﬁcation which displays the status of nearby devices, and
includes action buttons to toggle those devices (Figure 2b).
This design makes devices that are nearby (and potentially
relevant) accessible without needing to open the app. We de-
signed it to be minimally intrusive — the notiﬁcation is silent
and is minimized at the bottom of the notiﬁcation tray.
Towards meeting the “transparency of smart home behaviors”
principle, i.e., to make it more transparent when the smart
home is being remotely controlled, or controlled by automa-
tions and apps, we designed notiﬁcations that alert users when
the states of home devices change. Each notiﬁcation displays
Implementation
4.6
We implemented a prototype mobile app with these features
for Android, iOS, and web, using the Cordova framework.
Rather than implement our own smart home controller that
USENIX Association
28th USENIX Security Symposium    163
Figure 3: Prototype Architecture Diagram. We use the
SmartThings API to communicate with smart home devices.
modern Android and iOS devices. However, our design does
not require a speciﬁc proximity sensing technology; others
such as WiFi or ultrasonic sensing would work as well.
SmartThings and iOS Limitations. Due to the limitations
of the SmartThings API, activity notiﬁcations cannot attribute
changes in home state to particular third-party apps, automa-
tions, or manual actuation of devices. For state changes in
these categories, our implementation only displays “Triggered
by an automation or manually”. Discovery notiﬁcations were
only implemented on Android, as the iOS notiﬁcation center
does not support persistent, low priority notiﬁcations.
5 User Study: Goals and Methodology
Our prototype allows us to study the research questions we
set out in Section 3. To do so, we recruited seven households
in the Seattle metropolitan area to use our prototype to in-
teract with their smart homes for a month-long period. We
conducted studies between October 2018 and January 2019.
User Study Goals. Our goals in conducting the user study
were two-fold, corresponding to our two research questions.
First, we aimed to evaluate how participants used and reacted
to the speciﬁc multi-user smart home features (and corre-
sponding design principles) we implemented in our prototype.
Second and more generally, we aimed to understand the multi-
user access control and other needs and behaviors of end users,
grounded in the use of a speciﬁc prototype in real homes.
Our speciﬁc evaluation questions, paired with the design
principles our prototype intended to embody, included:
1. Access Control Use Cases: Is our current combination
of access controls sufﬁcient for users’ desired access
control use cases? If not, what use cases are we missing?
2. User Agency and Respect: We envisioned that location-
based and reactive access controls could be used to mit-
igate conﬂicts and tensions over controlling the home.
Can we observe this in practice?
3. Transparency of Smart Home Behaviors: We envisioned
that notiﬁcations could improve users’ mental models
of smart homes, which would help with understanding
privacy implications; and also improve security by cre-
ating a simple mechanism for auditing automations and
apps. Do notiﬁcations provide these beneﬁts to users in
Figure 2: Overview of Notiﬁcation Types.
(a) Activity Notiﬁcations. When an event occurs in the home,
this notiﬁcation shows the name of device, capability being
changed, and who or what caused the change.
(b) Discovery Notiﬁcations. Persistent, low priority notiﬁca-
tion that shows nearby devices and their current state; can be
expanded to reveal action buttons for controlling devices.
(c) Reactive Access Control prompt. Appears when another
user asks for permission to use a restricted device capability.
interfaced with hardware devices directly, our prototype con-
nected to devices via the Samsung SmartThings API. Partici-
pants set up their smart home devices using SmartThings, and
then used our app to control the system. Our prototype did not
support automations and third party apps — users accessed
this functionality through the SmartThings app. Our prototype
consisted of 10257 lines of JavaScript, CSS, and HTML.1
Proximity Sensing. To enable room-scale proximity-based
features (location-based access controls, proximity-scoped no-
tiﬁcations), we incorporated Bluetooth Low Energy beacons
into our system. Beacons broadcast an ID that can be scanned
by modern smartphones that support Bluetooth 4.0+. Users
register physical beacons in our app using an ID printed on the
device, and then assign it to a room in the app. When a user’s
phone detects the beacon, the app infers that the user is near
the devices in that room. We chose beacons as our proximity
sensing solution out of convenience: they are supported by all
1The source code and a demo of the prototype are available at
https://github.com/UWCSESecurityLab/smarter-home
164    28th USENIX Security Symposium
USENIX Association
practice? Conversely, do notiﬁcations harm privacy by
revealing one person’s activity to other people?
Study Overview. We conducted a month-long in situ user
study in the homes of participants. We recruited households
in the Seattle metropolitan area. We provided a Samsung
SmartThings smart home to households that did not already
own smart home devices, or integrated SmartThings with the
smart homes of households that owned an existing system.
We collected qualitative data about participants’ previous
experiences with smart homes and feedback on our prototype
through interviews, experience sampling, and log data.
Recruitment. We recruited seven households, containing 19
participants who actively participated. Participating house-
holds were recruited via Facebook ads, targeted at people
interested in smart homes and home DIY projects. People
who clicked on the ads ﬁlled out a short survey including
information about their household composition and interest in
smart homes. We did not require participants to own any smart
home devices prior to the study. We conducted a screening
call with participants that met our criteria to collect additional
information. We selected participants who lived within a 45
minute radius from our homes (so that it was feasible to make
an in-home visit), and we aimed for a variety of multi-person
household compositions, including roommates, families, and
couples. Participating households are summarized in Table 1.
A limitation of our recruitment strategy and study design
is that it introduces self-selection bias: our participants were
likely to be living in generally cooperative households, with
one or more technology early adopters. We discuss this, and
other limitations, further in Section 7.5.
Initial Interview. We made an initial visit to participants’
homes to conduct a semi-structured interview about their
existing experiences and attitudes towards multi-user smart
home security, privacy, and usability issues (see Appendix A).
Following the interview, we assisted with the setup of any
devices if needed, and then we set up our prototype app. We
guided them through app installation because it required using
the developer mode in SmartThings, which was cumbersome
and not representative of a typical install experience for com-
mercial apps. We also assisted participants in adding other
household members, to ensure that we could study multi-user
interactions (rather evaluating the onboarding barrier).
We also walked through the access control and notiﬁcation
features of the app, and collected their initial impressions of
the features. To counteract participant response bias [8] we
stressed that we were testing an imperfect prototype, and that
we wanted honest, negative feedback on things that were not
useful or usable. We used some participant feedback from
this stage to iterate on our implementation and push updated
features to participants throughout the duration of the study.
Daily Usage. Participants then used the app for 3-4 weeks
during their daily lives. During this period, the integrated ex-
perience sampling interface in our app prompted participants
to provide feedback or to share anecdotes about multi-user
interactions in the home. We also collected log data about how
users set up access controls, permissions, and notiﬁcations.
Exit Interview. At the end of the usage period, we con-
ducted a phone interview with each household. In this semi-
structured interview we collected speciﬁc feedback about their
experience using (or not using) the access control and notiﬁ-
cation features in our prototype. We also followed up on any
interesting data from experience sampling or logs. A list of
interview questions is available in Appendix B.
Compensation. Participating households were compensated
$250 over the course of the study, in installments. Participants
could keep the provided smart home devices after the study,
or return them for the equivalent cash value.
Ethics. The study was approved by the University of Wash-
ington’s human subjects review board. Participants had to
be age 18+ to consent to participating; household members