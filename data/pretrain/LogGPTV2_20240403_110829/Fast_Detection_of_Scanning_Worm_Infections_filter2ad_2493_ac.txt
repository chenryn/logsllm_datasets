### Optimized Text

A first-contact connection rate consistently greater than one request per second is indicative of a worm. The initial credit balance and the equilibrium minimum credit balance for benign hosts (with first-contact connection rates below 5 requests/second) were set to 10. This value was chosen to align with the requirements of our sequential hypothesis test (HT), which, as currently configured (see parameters in Section 4), requires a minimum of 10 observations to conclude that a host is engaged in scanning. Slowing the rate at which the first 10 observations are obtained will only delay the time required by HT to determine if a host is scanning. If the parameters of HT are reconfigured and the minimum number of observations required to identify a scanner changes, the starting credit balance for rate-limiting can be adjusted accordingly.

### 4. Experimental Setup

We evaluated our algorithms using two network traces collected at the peering link of a medium-sized ISP: one from April 2003 (isp-03) containing 404 active hosts and another from January 2004 (isp-04) with 451 active hosts. These traces, summarized in Table 1, were captured using tcpdump.

Obtaining usable traces was challenging due to privacy concerns. Network administrators are reluctant to share traces, especially those containing payload data. However, we needed the payload data to manually determine if any flagged host was infected with a worm.

In configuring our reverse sequential hypothesis test (HT), first-contact connection requests were considered failures if they were not acknowledged within a three-second grace period. Requests that received TCP RST packets in response were immediately reported as failure observations. Connection success probability estimates were set as follows:
- θ0 = 0.7
- θ1 = 0.1

**Table 1. Summary of Network Traces**

| Date         | Duration    | Total Outbound Connection Attempts | Total Active Local Hosts |
|--------------|-------------|------------------------------------|--------------------------|
| isp-03       | 2003/04/10  | 627 minutes                        | 1,402,178                | 404        |
| isp-04       | 2004/01/28  | 66 minutes                         | 178,518                  | 451        |

Confidence requirements were set to:
- α = 0.00005
- β = 0.99

These confidence levels apply to each reverse sequential hypothesis test, with a test performed for each first-contact connection. Given the frequent testing, a particularly low false positive rate was chosen.

For each local host, we maintained a Previously Contacted Host (PCH) set of the last 64 destination addresses (using LRU replacement). A first-contact connection request was defined as any TCP SYN or UDP packet addressed to a host not in the PCH set. While a fixed PCH set demonstrates the efficacy of our test under memory constraints, it has limitations. As described in Section 6, a worm could exploit these limitations to avoid detection.

For comparison, we also implemented Twycross and Williamson’s ‘virus throttle’ [22]. Since our traces contain only packets seen at the peering point, our results may differ from those obtained by implementing the virus throttle at each local host. However, observing connections farther from the host should reduce the number of false positives.

All algorithms were implemented in Perl and used traces pre-processed by the Bro Network Intrusion Detection System [13, 12].

We excluded FTP-DATA, finger, and IDENT connections, as these are typically responses to remote hosts and are unlikely to be accepted by a host that did not initiate such a connection, making them less useful for worm propagation.

### 5. Results

Our reverse sequential hypothesis test detected two hosts infected with CodeRed II [4, 20] from the April 2003 trace (isp-03) and one host infected with Blaster/Lovsan [5], three hosts with MyDoom/Novarg [11, 21], and one host with Minmail.j [6] from the January 2004 trace (isp-04).

**Table 2. Alarms Reported by Reverse Sequential Hypothesis Testing Combined with Credit-Based Rate Limiting**

| Worms/Scanners Detected | False Alarms | P2P Detected | Total Identified |
|-------------------------|--------------|--------------|------------------|
| CodeRed II              | 2            | 0            | 2                |
| Blaster                 | 0            | 0            | 0                |
| MyDoom                  | 3            | 0            | 3                |
| Minmail.j               | 1            | 0            | 1                |
| HTTP (other)            | 5            | 0            | 5                |
| **Total**               | **11**       | **0**        | **11**           |
| **False Alarms**        | **0**        | **1**        | **3**            |
| **P2P Detected**        | **0**        | **3**        | **3**            |
| **Total Identified**    | **23**       | **3**        | **26**           |

The worms were identified by comparing logged traffic with descriptions from online virus/worm information libraries. Our test also identified four additional hosts as HTTP scanners, each sending SYN packets to port 80 of at least 290 addresses within a single class B network.

While peer-to-peer (P2P) applications are not necessarily malicious, many network administrators consider them undesirable. P2P clients exhibit ambiguous network behavior, attempting to contact many transient peers. We classified detected P2P hosts separately, even though they might be deemed false alarms, as the number of such alarms is manageable.

**Table 3. Alarms Reported by Virus Throttling**

| Worms/Scanners Detected | False Alarms | P2P Detected | Total Identified |
|-------------------------|--------------|--------------|------------------|
| CodeRed II              | 2            | 0            | 2                |
| MyDoom                  | 1            | 0            | 1                |
| HTTP (other)            | 1            | 0            | 1                |
| **Total**               | **5**        | **0**        | **5**            |
| **False Alarms**        | **0**        | **1**        | **2**            |
| **P2P Detected**        | **0**        | **0**        | **0**            |
| **Total Identified**    | **5**        | **1**        | **6**            |

**Table 4. Composite Results for Both Traces**

| Method      | Alarms | Detections | Efficiency | Effectiveness |
|-------------|--------|------------|------------|---------------|
| HT          | 11     | 7          | 0.636      | 0.583         |
| Virus Throttle | 5   | 2          | 0.400      | 0.167         |

**Table 5. Comparison of Rate Limiting by Credit-Based Connection Rate Limiting (CBCRL) vs. Virus Throttle**

| Category    | CBCRL (isp-03) | CBCRL (isp-04) | Virus Throttle (isp-03) | Virus Throttle (isp-04) |
|-------------|----------------|----------------|-------------------------|-------------------------|
| Worms/Scanners | 4             | 7              | 59                      | 3                       |
| P2P         | 3              | 8              | 84                      | 1                       |
| Unnecessary Rate Limiting | 1    | 5              | 0                       | 4                       |

**Table 6. Number of First-Contact Connections Permitted Before Hosts Were Reported as Infected**

| Method      | CodeRed II | Other HTTP Scanners |
|-------------|------------|---------------------|
| HT with CBCRL | 10, 10     | 10, 10              |
| Virus Throttle | 6, 7       | 102, 526            |

### 6. Limitations

Credit-based connection rate limiting is resilient to network uplink outages, as hosts starved for credits will receive an allowance after the network is repaired. However, this may be of little consolation if Reverse Sequential Hypothesis Testing (HT) has already concluded that all hosts are scanners. Network administrators should have the power to invalidate observations made during outages and reverse any quarantining decisions.

More concerning is that both HT and credit-based connection rate limiting rely on the assumption that scanning hosts have lower first-contact connection success rates than benign hosts. New hypotheses and tests are needed to detect worms where this statistical relationship does not hold. Specifically, our approach is unlikely to detect topological worms, which scan for new victims by generating lists of previously contacted addresses, or flash worms, which use hit-lists of susceptible hosts identified by earlier scans.

Additionally, two instances of a worm on different networks could collaborate to ensure that none of their first-contact connections appear to fail. For example, if worm A does not receive a response to a first-contact request, worm B could respond, masking the scanning activity.