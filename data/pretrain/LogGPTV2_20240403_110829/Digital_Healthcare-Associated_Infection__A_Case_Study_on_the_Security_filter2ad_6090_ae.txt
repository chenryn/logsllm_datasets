at least once. On the other hand, we found that 47.56% of
these devices made an inbound connection with an obsolete
protocol at least once. Since the devices in the inbound trafﬁc
are operated by the hospital and we have access to all the trafﬁc
of established connections, we can further analyze each server
individually to infer any changes or updates made during our
collection period. In Figure 8, we show the ﬁrst and last time
an inbound connection was made to each medical supporting
device8 as shown by the blue lines. While the majority of
8We intentionally removed the actual number of devices and replaced it
with a percentage to avoid disclosing any information about the hospital.
Fig. 8: While the majority of the medical supporting device
in the inbound trafﬁc only negotiated a modern TLS version
(1.2 or above), 47.56% of those devices also negotiated an
obsolete version (1.1 or below). In some cases, this trend did
not change during the entire collection period.
medical supporting devices appear to have dropped support of
obsolete TLS/SSL protocol versions, many other devices have
not. In some cases, connections were exclusively established
using TLS 1.0.
Since our dataset only contains established connections,
and not all TLS/SSL handshake attempts, the apparent decline
in the use of obsolete versions can have different explanations.
First, the fact that we do not see devices making any obsolete
connections after a certain time period might suggest that
the medical supporting device was patched to drop support
for older versions. Second, the lack of established connec-
tions could also mean that clients have no longer requested
handshakes with outdated protocols. In either case, insecure
connections were no longer established.
D. Certiﬁcate usage
Since many of the medical supporting devices may have
access to patient information or EHRs, properly authenticating
the server that they are connecting to is crucial. We collected
information about the certiﬁcate presented by the server in each
fresh session. Of these sessions, 9.03% were established while
having reported to our monitor with issues relating to unknown
issuer, self-signed, or expired certiﬁcates. To understand how
these errors came about, and what they mean for the security
of the sessions, it was necessary to study these certiﬁcates in
detail. The following analysis accounts for 98.3% of the trafﬁc
in this category, covering 4, 672 distinct certiﬁcates.
a) Unable to get local issuer: The majority (56.37%) of
the non-resumed sessions with an issue was due to the network
monitor not knowing the issuer of the certiﬁcate. Looking
closer, 76.33% of these connections appeared to have certiﬁ-
cates that were issued by reputable organizations (e.g., Apple,
11
InboundOutboundTraffic Direction0.00.20.40.60.81.0PercentRate at which TLS 1.2 is negotiatedFraction accepting TLS 1.1 or below at least once2018-012018-022018-032018-042018-052018-062018-07Dates020406080100Device PercentDays activeInsecure connectionsMicrosoft, Samsung, IBM). We note that our network monitor
contained the certiﬁcate root store provided by Mozilla, the
same root of trust for Firefox; other clients, such as Safari or
Edge, may have a different set of root certiﬁcates; this likely
accounts for this large number of certiﬁcates with unknown
issuers. However, we found seven certiﬁcates, which account
for 11.26% of the trafﬁc for this category, that have no issuer at
all. Coincidently, these certiﬁcates have subjects belonging to
cloud-based medical companies. Because we do not know who
issued these certiﬁcates, we cannot deﬁnitively say that these
certiﬁcates are being properly validated. One possibility is
clients connecting to these servers are implementing a custom
validation logic that validates the certiﬁcate chain, beginning
with a public key associated with the issuer. This would be
bad cryptographic “hygiene”, but is theoretically secure.
b) Self-signed Certiﬁcates: A self-signed certiﬁcate has
the same subject and issuer. From the established connections
that reported issues, 43.1% were caused by either a self-signed
certiﬁcate presented to the client or a self-signed certiﬁcate
found in the validation chain. The acceptance of a self-signed
certiﬁcate essentially bypasses the security goal of a public
key infrastructure because the client would now place the trust
anchor on any server that presented the self-signed certiﬁcate,
rather than the CA that properly asserts the server’s identity.
In reality, many enterprises make use of self-signed certiﬁcates
for their internal networks as they are free to make and they
can place the trust anchor on themselves. While self-signed
certiﬁcates can be considered an attack vector for medical
supporting devices, further investigation needs to go into who
the issuers of these types of certiﬁcates are (e.g., verifying that
the issuer of the certiﬁcate is part of the trusted root stores in
the medical supporting device).
c) Expired Certiﬁcates: Finally, 0.51% of non-resumed
connections used an expired certiﬁcate. These connections
have a total of 721 distinct certiﬁcates that overwhelmingly
(96.26% of the certiﬁcates) appear to be for non-medical
services (e.g., advertising services). While this shows that the
connections established with these certiﬁcates are minimal,
medical supporting devices should have properly closed a
session when presented with a certiﬁcate that is no longer
valid. This issue does not necessarily imply that the session
is vulnerable to an attack; however, it does mean the security
of the connection is dependent on the client and server imple-
mentation. For example, accepting an expired certiﬁcate could
be dangerous, but a certiﬁcate being expired does not mean the
corresponding secret key has necessarily been compromised.
E. Certiﬁcate Transparency
We were able to collect a total of 350,580 distinct certiﬁ-
cates passing through the hospital network.9 To see how many
of those are widely seen by the Internet, we compared our set
of certiﬁcates to those found in the Certiﬁcate Transparency
(CT) logs.10 CT is intended to prevent the numerous pitfalls
discussed in the previous section. By comparing the certiﬁcates
in the hospital network to those present in CT logs we can get
9Note that not all of these certiﬁcates were used to establish a connection
to medical supporting devices.
10The logs in our data set included those that were compliant with Chrome’s
policy [1] (e.g., Digicert, Comodo, Cloudfare, Google, Venaﬁ).
Fig. 9: Certiﬁcates belonging to a hospital are documented less
frequently in Certiﬁcate Transparency logs than those from
services found on Alexa’s top 500.
a sense of the overall quality of certiﬁcates seen within the
network. We found that 84.41% of the certiﬁcates seen were
available in at least one CT log (no collision found with any
self-signed certiﬁcates found in our dataset). We expect this
number to be high because medical supporting devices connect
with many major services across the Internet.
Additionally, our trafﬁc aggregation point is in a position
to collect certiﬁcates that have been seen both internally to
the hospital and externally to the rest of the Internet. This
unique perspective allows us to perform a measurement of
the transparency rate of certiﬁcates owned by the hospital
versus those owned by popular services. To do the comparison,
we collected all the unique services (e.g., google.com and
google.fr would be considered as one service) found in
Alexa’s top 500 domains and looked for matching strings of
those services inside the subject ﬁeld of the certiﬁcate. Since
this process was done using regular expressions, we removed
any service that had a name of less than ﬁve characters to
prevent false positives. We looked for services rather than
domains to prevent inaccurate results. Certiﬁcates may contain
abbreviations or other similar discontinuities that may cause a
misclassiﬁcation when looking for domains only. For example,
if we search for netflix.com we would not account for
*.1.nflxso.net, which is a certiﬁcate for a content distri-
bution domain used by the Netﬂix service. For each service, we
checked how many of the certiﬁcates seen by the hospital were
available in the CT logs. This process gives us the transparency
rate of our network and the top Internet services. Since only
a subset of the certiﬁcates of each service pass through our
hospital dataset, to avoid bias from small samples in this study,
we also removed any service that had fewer than 10 distinct
certiﬁcates as a small sample size can have drastic changes in
the transparency metric.
Figure 9 shows the transparency rate of each service along
with the transparency rate of the hospital. We note that the CT
logs only account for 56.6% of all certiﬁcates belonging to
a domain (or sub-domain) of the hospital. In comparison, the
services found in Alexa’s top 500 domains show over 90%
12
020406080100Services Found on Alexa's Top 500 Domains0.00.20.40.60.81.0Percentage of Certificate in C.T.Top ServicesHospitaltransparency for all but 5 services. Many factors may play
into this observation, such as network administrators not using
CT or purposefully neglecting CT to avoid revealing network
details. Adversaries could potentially use CT logs to help map
a hospital’s network for an attack. However, The exact reason
for the low percentage is not known to us.
F. TLS/SSL Summary
While communication channel setup for medical support-
ing devices is not perfect, they appear to use secure standards
more frequently than the rest of the Internet. As part of our
D-HAI analysis, we saw that medical supporting devices use
secure protocols (i.e., TLS 1.2) at a higher rate than our
Internet baseline with an 11% difference. Regarding cipher
suite quality, the baseline for the Internet had a similar break-
down to the data observed from medical supporting devices.
The major difference lay in the hashing algorithms that were
used, and was an area in which the hospital operated with
more security. The hospital network is observed to use the
weak SHA1 hashing algorithm roughly 10% less frequently
than our baseline data. Correspondingly, the use of the secure
hashing algorithms is higher than the baseline, with the broken
MD5 algorithm seeing low use in either case. While ideally
this percentage would be less than observed, the hospital is
still performing signiﬁcantly better than online connections in
general. Furthermore, when examining the inbound trafﬁc we
discovered that 47% of the servers administered by the hospital
were negotiated an obsolete protocol at least once. While some
appeared to have been updated early on to not support these
protocols, other servers have continued accepting old SSL/TLS
versions throughout the whole collection period.
Finally, 84.41% of all certiﬁcates seen throughout our
collection period were found in CT. Of the certiﬁcates used
to establish non-resumed TLS/SSL connections with medical
supporting devices, only a few (3,464) appeared to have an is-
sue regarding unknown CA, self-signed, or expired certiﬁcates.
Though the problem is minimal, certiﬁcate usage by medical
supporting device needs improvement.
VII. DISCUSSION
A. Hospital Ecosystem
While our analysis sees mostly benign trafﬁc, there is a
small portion of trafﬁc that appears malicious or uses poor
security protocols and encryption. Given the critical role of
hospitals and the high value of data they keep, we believe
that this small portion of bad behavior is still concerning.
Accordingly, all ﬁndings have been turned over to the hospital
for further investigation.
While our research covers major Internet protocols used in
the hospital network, the security of a hospital’s ecosystem
is multidimensional. As shown in Figure 10, the majority
of hospital related data breaches reported to HIPAA11 in the
United States during our collection period were caused by the
unauthorized access of data. In the context of our work, these
include stolen credentials, misplaced items, improper disposal,
11This data was collected through monthly reports found in HIPAA Jour-
nals [3]. While the reports separate data breaches into various categories, we
combined the data in such a way that represents what we could see from a
network perspective.
Fig. 10: Data breaches caused by unauthorized access (rather
than security breach) are more commonly reported to HIPAA
during our collection period.
thefts, or employees accessing data which is not directly related
to their work. From the viewpoint of this study, detecting
unauthorized accesses similar to these is highly unlikely.
These kinds of unauthorized accesses rarely leave a network
trace, making them opaque to our study. Addressing such
issues requires research into proper access control techniques
that range from the classiﬁcation and compartmentation of
data to requiring multi-factor authentications. While hospitals
already make use of some of these techniques [34], further
research into access control security in the context of a hospital
ecosystem is required.
B. Future Work
a) Medical Devices: In Section IV, we mentioned that
our work does not focus on medical devices as they are
protected from other devices inside the network and the
Internet by using a combination of ﬁrewalls and VPNs. While
such protection leaves them mostly invisible from a network
perspective (and our analysis), they still make up part of a
hospital ecosystem and can be vulnerable from attacks near
their physical location [42]. Further analysis into the local area
network connectivity of these devices would greatly beneﬁt
the community’s knowledge of a hospital’s ecosystem. Such
large scale work can be used to create ﬁngerprinting proﬁles
of various medical devices based on the network calls made.
These proﬁles can then in turn be used to mitigate lateral
expansion of attacks from within the hospital. Similar to this
study, safe design and ethical decision making need to be a
top priority as such research would be done with devices that
can have a direct effect on the patient care.
b) Generalizing Hospital Ecosystems: Our case study
focused on the trafﬁc from one hospital for six months. While
our analysis and techniques can be used to study other hospital
networks, generalizing these results to all hospitals may con-
stitute a threat to population validity. To generalize trends to
other hospitals, a large scale multi hospital analysis needs to
be done. Doing such work would require a large collaborative
13
JanuaryFebruaryMarchAprilMayJuneDate051015202530Reported Data Breaches Throught the CountrySecurity BreachUnauthorized Accesseffort between researchers and the different administrations
from each hospital in order to ensure the safety of the patients
and the data. Our goal of the case study and Section III was to
ease the process of obtaining data from various hospitals and
make a larger scale future study less challenging to perform.
c) Understanding Non-technical Issues: As mentioned
in the previous subsection, a hospital’s security is multi-
dimensional. Understanding the root causes of data breaches
from a non-technical aspect is important in order to develop
defensive protocols that are suited for healthcare systems.
As such, future work on this end would require surveying
the hospital employees to see what security protocols they
follow. Such survey would consider employees with different
roles (e.g., doctors/nurses, HR, researchers, medical device
technicians) that have different levels of 1) access to medical
data, 2) dependence of network connectivity for work-related
material, and 3) IT knowledge to understand the root cause of
EHR leakage or cyber-attacks.
VIII. RELATED WORK