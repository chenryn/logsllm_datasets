Yo1eas Adoo a2xog-awruas serues tep 4ou 4as. N uabduoo 1s/=ATaaadwoo
==config′ - "$cur" ));
fi
_yu_yumdovm1loader ()
local cur prev words=() split=false;
case $prev in
==destdir)
return 0
F
==archlist)
return 0
esac;
$split s& return 0;
if [[ $cur == =* 1]; then
coMPREPLY=($( conpgen -W '$( _yum_baseopts 2>/dev/null ) --=destdir
(a --,4= o--9o- s==
return 0;
fi;
_yum_list al1 "$cur*
yum ()
---
## Page 160
COMPREPLY=();
1(,{[alsaom dno)s,)=spzon $=Aaad z$=no 1$=um [eoo
declare =F _get_comp_words_by_ref s>/dev/nul1 && _get_comp_words_by_ref =n = cur prev
fspxox
local cmds=(check check=update clean deplist distro=sync downgrade groups help history info
install list load=transaction makecache provides reinstall remove repolist search shell update
upgrade version);
local i c cmd subcmd;
for ((i=1; i /dev/nul1 6& _split_longopt && split=true;
$split s& return 0;
if [[ $cur == =* 1]; then
"(4anos. -- .( spdoasrqun. 1s. N= uaheuoo 1s/=xmaaaanoo
return 0;
fi;
()sdnoxbeun
if [[ $1 == \e* 1]; then
{t=t)s。 1e st sdnoxa xadtou wm
return 0;
fi;
return 1
()sqdoosequm.
==disablerepo ==exclude ==disableexcludes ==obsoletes ==noplugins
==nogpgcheck -=skip-broken --color --releasever -=setopt ==downloadonly
==downloaddir ==disableincludes′;
[[ $CoMP_LINE == +=-noplugins* 1] I] opts+=* ==disableplugin ==enableplugin";
printf ts "$opts”
_yum_binrpmfiles ()
f(.I$. -- wda++i. X srTpsnTd o= J= uahcuoo s)=+xTasaanoo
(lalxTaaH&HOo)s.. N- uabdroo )s/-ATaEHaNOD
X"*.src.rpm')"
COMPREPLY=($（ COnPgen -W'"${COMPREPLY[@]}
x"*.nosrc.rpm'））
_yum_complete_baseopts ()
---
## Page 164
$21n
=d |==debuglevel |=e | ==errorlevel)
f（（.Is.-- .0T 68L95E1 0. N=uaun1$)=xaaaawo
return 0
F F
==rpnverbosity)
debug′ -- "$i" ):
return 0
F F
==config)
cOMPREPLY=($( compgen=f=o pluadirs-X"!*.conf" --"$i" ));
return 0
F F
==installroot | ==downloaddir)
return 0
=-enablerepo)
return 0
F F
==disablerepo)
return 0
F
==disableexcludes | ==disableincludes)
local main=;
[[ $2 == *excludes ]] s& main=main;
return 0
FF
==enableplugin)
Ts.0 surbnidwnA
return 0
F
==disableplugin)
: Is.T surbnidw
return 0
==color)
“$1")）
return 0
=R | ==randommait | =x | ==exclude | -h | -=help | ==version | ==releasever |==cve |
-bz | ==advisory | -=tmprepo | -=verify-filenanes | -=setopt)
return 0
F
==dovnload=order)
$1"））;
---
## Page 165
==override=protection)
_yum_list installed *$1*;
return 0
==verify=configuration=files)
“$1"}};
return 0
F
esac;
return 1
yum_helper ()
local IFS=′
for db in $[find "$run_cAcnepir -name prinary_db.sqlite);
do
"SeLEcr namell'.*larch FRoM packages
HEREnaTE
LIRE'$3""
done;
return;
fi;
COMPREPLY+= ((
/usr/share/yum=cli/completion-helper-py =d 0 =C "$&* 2>/dev/nu11 )
_yum_list ()
[[ $2 == +/* 1] $2 == [---]* ]] && return;
[[ $1 1= “installed” ss ${#2} -1t 1 1] && return;
_yum_helper list *$8*
yum_plugins ()
local val;
[[ $1 =eg 1 1] 6& val=\(1|yes\|true\|on\)* |] val='\(o\|no\|false\|off\)';
coMPREPLY+=($( compgen =W'$( command grep =il "^\s+enabledg*=\s+$val" \
/ete/yu=/pluginconf.d/*.conf 2>/dev/null \
|sed=ne"s|.*/[[/](1,).conf$|1|p-*"$2)
_yum_transactions ()
1nuap/ /dev/nul1
quote ()
f.\,111././/t)s=ponb [eoT
printf ""e'*"$quoted"
quote_readline ()
local quoted;
_quote_readline_by_ref *$1" ret;
printf ts "$ret"
可以使用unset-ffunctionNane的方式来将恶意的函数删除
0x11环境变量
·env
*set
export
●cat /proc/$PID/environ
declare
[ubuntu server 16.04 64位】默认情况
---
## Page 167
8351.55.7 480518215.51.3
【Centos764位】默认情况
.harer
-15
0x12启动项&配置脚本
systemctl list=unit=files ==type=service |grep enabled
。如果发现非法开机自启服务项，可以使用如下语法进行停止并使其不开机自启，以bluetooth为例
systemctl stop bluetooth.service
systemctl disable bluetooth.service
●/etc/rc.local
●/etc/rc.dl/rc.local
● /etc/rc.d/init.d/
●chkconfig --list
●/etc/profile
●/etc/bashrc
▪~/.bashrc
●~/.bash_profile
●~/.profile
●~/.bash_logout
---
## Page 168
由于内容较多，所以放在了知识点附录，具体Ubutnu和Centos中默认启动项可以查看知识点附录0x02
0x13 ssh key
·/root/.ssh/authorized_keys保存着远程主机的公钥，远程主机可以无密码登录
-/.ssh/authorized_keys每个用户都会在自己的家目录保存一份
·/root/.ssh/known_hosts每登录一台主机ssh就会把对方的公钥记录下来，下次连接进行比对，以防止网络劫持
0x14 ssh config
ssh 客户端配置文件加载顺序命令行参数>-/.ssh/config >/etc/ssh/ssh_config
/ete/ssh/ssh_config
这个文件默认存在
-/.ssh/config
默认是没有这个文件的，这个文件是给客户端用的
如果上述两个文件存在，可以检查其中的参数，以下两个参数可以被用作后门
●LocalCommand
●ProxyCommand
具体可以参照公众号文章SSHConfig后门|Linux后门系列
0x15alias信息
·直接输入alias就好
root@helper:/home/helper#alias
alias grep='grep --color=auto
aliasl='1s-CF
aliasla-'ls-A
alias1l-'1s-alF
alias1s='1s-color=auto
root@helper:/home/helper#
【Ubuntu server 16.04 64位】默认情况
tu-64b115
slias 11-s
-alF
【Centos764位】默认情况
---
## Page 169
s-7-]5alios
alias f
aliasg
grep='grep -color=auto
alias 1.=1s-d,*--color=outo
olias 11=1s -1 --color=outo′
olias 1s='1s--color-outo
olias vi=vin'
alias mhichalias1/usr/bin/which--tty-onty--reod-alias--show-dot -show-ti1de
[helperecentos-7 -]s
具体可以参考
https://mp.weixin.qq.com/s//yXY8opNctHK5d9tXhQj35w
0x16DNS配置
/etc/resolv.conf
0x15日志
日志分析就比较笼统了，基本上上面都涉及到了，基本都在/var/log/下
0x18 ptrace_scope
默认系统会禁止ptrace进行一些操作，比如fork 等，可以查看/proc/sys/kemel/yama/ptrace_scope 文件内容
ubuntu 16.04 默认
helper@ubuntu-64bit:~$
centos 7 默认
[helper@centos-7~]$cat/proc/sys/kernel/yama/ptrace_scope
[helper@centos-7~]$
0x19 ASLR
ASLR是一项Linux系统的保护措施，将某些地址空间进行随机化，减缓一些溢出攻击
cat /proc/sys/kernel/randonize_va_space
此处文件内容含义如下：
·0-表示关闭进程地址空间随机化。
·1-表示将mmap的基址，stack和vdso页面随机化
·2-表示在1的基础上增加堆（heap）的随机化
[Ubuntu Server 16.04】默认情况
---
## Page 170
helperelocalhost:~$sudocat/proc/sys/kernel/randomize_va_space
helperelocalhost:~s
【Centos7】默认情况
[helper@localhost~]$ sudo cat/proc/sys/kernel/randomize_va_space
2
/proc/sys/kernel/randomize_va_space 是一个在系统运行时生成的文件；一般都在/etc/sysctl.conf 中配置
ASLR的永久关闭
[Ubuntu Server 16.04】默认情况
helperelocalhost:~$
【Centos7】默认情况
[helper@localhost~]s
0x20 capabilities
capabiities是一种对Linux权限更严格划分和管控的规范，设置得当可以有效防止过度授权造成提权操作
getcap =r / 2>/dev/nu11
[Ubuntu Server 16.04】默认情况
helperelocalhost:~$sudogetcap-r/2>/dev/null
/usr/bin/mtr=cap_net_raw+ep
/usr/bin/traceroute6.iputils=cap_net_raw+ep
/usr/bin/systemd-detect-virt=cap_dac_override,cap_sys_ptrace+ep
helperelocalhost:-$
【Centos 7】默认情况
---
## Page 171
[[helper@localhost~]$sudo getcap-r/2>/dev/null
/usr/bin/gnome-keyring-daemon=cap_ipc_lock+ep
/usr/bin/newgidmap=cap_setgid+ep
/usr/bin/newuidmap =cap_setuid+ep
/usr/bin/ping= cap_net_admin,cap_net_raw+p
/usr/sbin/arping-cap_net_raw+p
/usr/sbin/clockdiff=cap_net_raw+p
/usr/sbin/mtr=cap_net_raw+ep
[helper@localhost~]$
如果发现权限设置错误，可以使用setcap进行重新设置或者取消
0x21iptables端口复用
有些攻击者喜欢使用iptobles 进行端口复用
sudo iptables -L
[Ubuntu Server 16.04]默认情况
helperelocalhost:-$ sudo iptables -L
Chain INPUT (policy ACCEPT)
target
prot opt source
destination
Chain FORWARD (policy ACCEPT)
target
prot opt source
destination
Chain OUTPUT (policy ACCEPT)
target
prot opt source
destination
helperelocalhost:-S
【Centos7】默认情况
Chain INPUr (poliey ACCEPT)
target