User: Am looking at building python (2.7 version) from sources for various UNIX like OSes including SUSE (Desktop, Server), RHEL (Desktop, Server), Ubuntu, AIX, Solaris (SPARC) OSes.
Also, some of these OSes might have to build both 32 bit and 64 bit versions. I also want to minimize dependencies on (shared) libraries.
That said, is it better to use the native C compiler (cc) wherever available as against gcc? Is it better to cross compile?
Thanks.
Assistant: I would assume that it's better to build on the OS itself, rather than "cross compile". Although since this is all Unix, cross-compiling might very well work as well, with a bit of effort. But it's probably easier to just build the binaries on the OS in question. I guess that also depends on whether you link statically or not.
Python's build process will itself select the best compiler, and it will prefer gcc to cc, at least in most cases.