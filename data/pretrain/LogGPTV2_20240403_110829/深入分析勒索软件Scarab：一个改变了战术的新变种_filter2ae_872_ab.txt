    agntsvc.exe
    isqlplussvc.exe
    ncsvc.exe
    msftesql.exe
    sqlagent.exe
    sqlbrowser.exe
    sqlservr.exe
    sqlserver.exe
    sqlwriter.exe
    oracle.exe
    ocssd.exe
    dbsnmp.exe
    synctime.exe;
    mydesktopqos.exe
    agntsvc.exe
    isqlplussvc.exe
    xfssvccon.exe
    mydesktopservice.exe
    ocautoupds.exe
    agntsvc.exe
    agntsvc.exe
    agntsvc.exe
    encsvc.exe
    firefoxconfig.exe
    tbirdconfig.exe
    ocomm.exe
    mysqld.exe
    mysqld-nt.exe
    mysqld-opt.exe
    dbeng50.exe
    sqbcoreservice.exe
在加密函数的主循环中，会在整个代码中进行对互斥量的持续检查，如果它存在，将会作为清除自身并从系统中移除的标志：  
互斥量：STOPSCARABSTOPSCARABSTOPSCARABSTOPSCARABSTOPSCARAB。  
加密循环可以被代码中的许多部分调用，但最初运行并主要执行加密操作的部分如下：  
随后，递归遍历所有文件夹进行检查，确保扩展名不是.exe或.dll。如果检查无误，将会加密文件，并使用.scarab扩展名对其进行重命名。  
使用POS()检查当前文件扩展名是否为.exe或.dll：  
加密代码不直接使用任何加密API。相反，AES代码嵌入在恶意软件之中，如上图所示。  
一些可以调用主加密函数的地方：  
## 加密算法
目前，我们已经确定加密算法是AES。在读取实际的文件数据之前，勒索软件首先会将一个4字节的块（0xDEFACE01）添加到缓冲区中。这可能是盐（Salt），也可能是恶意软件作者用于迷惑研究人员所执行的一个操作。它会使用生成的字节来执行一些数据处理操作，可能是创建随机的初始化向量。  
在AES加密前的IV 生成器函数：
异或后的数据被传递到IV的MAIN_AES_LOOP_FUNCTION，其中var_8是加密密钥：
恶意软件会继续通过AES_ALGO标记的函数，在数据上执行AES 256加密算法。我们是根据其中的一些特征判断使用的是AES 256加密。  
加密使用了16个字符的块，这是非常标准的AES加密，每次会加密文件中的16个字符，即128位。  
AES加密算法不同版本之间的区别在于密钥的大小和加密轮（Encryption
Round）次数。在该勒索软件中，使用了AES246标准中的14轮，而没有使用AES128标准中的10个。密钥大小为256位（32个字节或字符）。  
密码分组链接模式（Cipher Block
Chaining，CBC）也被使用。在这里，CBC主要是使用之前的密文来加密下一个明文块。换而言之，先前的加密块会被用作下一个数据块的初始化向量。  
AES CBC的流程，先使用IV，接下来使用先前的密文作为IV：
在这种情况下，作为初始化步骤，IV中的字节会与待加密原文进行异或操作，以保证有更强的随机性。如下图所示，AES的输出将会被复制到循环开始处所使用的变量中，以在执行AES加密操作之前初始化下一个明文块。在这里，尽管并没有通过加密API调用，但还是清楚地说明了AES的用法。  
下图展现了以前的密文被用作IV，其中var_28包含加密的数据：
下面展示了一些算法相关的截图。数据被加载到矩阵中，随后会对硬编码的数据以及加密密钥所在字节执行一系列数据操作。在下图突出显示的是一轮中的一组操作（共进行4组）。其中4组共同构成一轮。为了执行对矩阵的数学运算，需要对矩阵中的每个项目执行操作。如前文所述，共有14轮。
编码的加密密钥保存在注册表的“temp”键中：
如果在注册表中找到该密钥，那么就会继续执行函数，将注册表中的密钥解码为原始加密密钥。否则，会跳转到新的生成函数。
这是勒索软件对文件进行加密的关键所在。其格式类似于支付赎金提示中的密钥，但这一个更长，是保存在注册表中加密版本的用户ID标识。一个转储后键值的示例如下：
    [HKEY_CURRENT_USERSoftwareILRTISo]
    "temp"="VkIAAAAAAADpt9Q2lAzhCExfqjLoD3vSpluc678N56Zn8b7LVRxMi1ZsYk2HXD1e4s3tiefTmZJAc0vxPposvLzP0yaCh5+KRQm60U0EkzeB2NXetarabUFYgJxb8QRsygKaOqBriC4Bs4ajM24h=e2CsVNP9R3q==UXNmfRFGIsv7NR9BIxE35bdoFpTU8rMGQ14MeQcAii1iY7GpNoY3b4DOgfuKGo3qNC1MYKYdfpn0dbiow3f7ZQGClpwTZ0shFhkWk7aTA7TM1prtgJte7TWe=ERHg8GaFrZtVs9ylNTYPt5CmzHBdAIaXeKZvZnSSafbi83o9gLgAS1OxAb7LBtJpZAJDyBkuyJFR4dFbXztponIBKT1OjtTvTMy07+0B4jI3=K1QGuKSROjAdCF06TsjKWlvUw0iUHRGasz946H3Mnxu3GdCHrAp9Cd94bMo1x1PVdIi3bXSwobjgOlJgJPJC4Y6J4QIE=e45PDNzdK6aCY0uiQ0jOD=8lDWTp=+r+dbGJrJ12qn8CRnBwaFIpyNjDhzdMdTwyvExCmuOesOLms8S7TRoV1GcTyWJAQpSJYcR66H6CngM5GHopdpoTH4mWVOOYp5HFHTDAvMafomF2S6xEmUgXIcKpB7oNohO+Wx0cUmf95=+9uozHMBWE4kFhj+OOKw0I7w7HnwYfafhxsw0CmoOvorZztXk8whlh1d4U26z=aJ6JwH8wVBSszsRLQ+H4y3bRaeupq5Vo+smDfigjVVzCam4HoAdOKzN9MWiigl9Oi+4vTkSFFazc6HzyVaHg8luKGBJMhi2FNHTFO56RA"
在支付赎金提示信息中提供的密钥如下：
    +4IAAAAAAADIGnmIHZL=FYRQCAN=AgKnzw+0uzFbXSR5AdFlfTrhWN9sifnho8LiX5=V8SbNVWyWWrdbTLipFEeeEv=9zLmnid8e
    UqlqKr2RUN=V7LdjoyNwjWMNbylRiGNAKWK6g9exeHhVfUrZ+9oRTq6Kp5eNe7kDdV7UMPVZ12=5pm9a+5lOMw==TNi2R2tUjFcK
    tTD3c9IZgJwOMgcOw3fRrmgaloh5cIV3V74DRy2segx13RDL4J6B+gJnfT2mxIZuBE1G5HcmuLHCoqQif2BamhfbMASCUEpOp7+Z
    G0jI=1PTmOhD3Yq4XjJWI4mc61AruRlaYqwPTUUbrsI0zTYX1mmM3Tvyso8bqDy4h5meyPYuXlgtRj06mtdrGZszb6ObsIT4Fz0O
    Ag=4HgI4VSHA=HAU5yCjZzIIkLhlWGvdAk
上述密钥用于对加密文件的过程进行改变。这意味着，两个具有相同内容的文件，在被加密后，所得到的加密文件会不相同。存在一个初始密钥，而所有的子密钥都从该密钥派生。如果只有一个加密密钥用于所有的文件，那么我们就可以在加密过程中的任何一个时刻捕获内存，得到密钥，并使用该密钥来对硬盘上所有文件进行解密。但由于Scarab执行了这一关键的循环，我们就无法借助捕获内存的方式来解密文件了。  
在磁盘加密过程完成之后，勒索软件会调用一个函数，遍历所有网络文件夹和驱动器，例如：VMWare共享文件夹、终端服务、网络驱动器。一旦找到，它也会对这些文件夹中的文件进行加密。  
在上述全部操作都完成之后，它会通过记事本，显示支付赎金的相关提示。
## 传闻
我们看到网上的一些文章指出，Scarabey具有后门的相应功能，允许远程访问被感染主机，并允许在主机上收集敏感数据。根据我们的分析，我们认为上述结论是不正确的。除了加密用户计算机上的文件之外，我们没有发现该勒索软件变种具有任何其他的功能。  
此外，还有人指出Scarab是基于GitHub上的开源勒索软件项目HiddenTear产生的。经过分析，这一点也是不正确的，然而这一错误的观点目前已经被广泛流传。  
Windows的Malwarebytes可以检测到该威胁及其变种，并将其命名为：Ransom.Scarab。