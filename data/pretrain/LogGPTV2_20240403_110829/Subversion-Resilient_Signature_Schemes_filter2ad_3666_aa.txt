title:Subversion-Resilient Signature Schemes
author:Giuseppe Ateniese and
Bernardo Magri and
Daniele Venturi
A preliminary version of this paper is published in the proceedings of the 22nd ACM Conference
on Computer and Communications Security—CCS 2015. This is the full version.
Subversion-Resilient Signatures: Deﬁnitions,
Constructions and Applications
Giuseppe Ateniese1, Bernardo Magri2, and Daniele Venturi3
1Stevens Institute of Technology, USA
2Friedrich-Alexander-Universit¨at Erlangen-N¨urnberg, Germany
3Sapienza University of Rome, Italy
November 3, 2018
Abstract
We provide a formal treatment of security of digital signatures against subversion attacks
(SAs). Our model of subversion generalizes previous work in several directions, and is
inspired by the proliferation of software attacks (e.g., malware and buﬀer overﬂow attacks),
and by the recent revelations of Edward Snowden about intelligence agencies trying to
surreptitiously sabotage cryptographic algorithms. The main security requirement we put
forward demands that a signature scheme should remain unforgeable even in the presence
of an attacker applying SAs (within a certain class of allowed attacks) in a fully-adaptive
and continuous fashion. Previous notions—e.g., the notion of security against algorithm-
substitution attacks introduced by Bellare et al. (CRYPTO ’14) for symmetric encryption—
were non-adaptive and non-continuous.
In this vein, we show both positive and negative results for the goal of constructing
subversion-resilient signature schemes.
 Negative results. We show that a broad class of randomized signature schemes is
insecure against stateful SAs, even if using just a single bit of randomness. On the
other hand, we establish that signature schemes with enough min-entropy are insecure
against stateless SAs. The attacks we design are undetectable to the end-users (even
if they know the signing key).
 Positive results. We complement the above negative results by showing that signa-
ture schemes with unique signatures are subversion-resilient against all attacks that
meet a basic undetectability requirement. A similar result was shown by Bellare et al.
for symmetric encryption, who proved the necessity to rely on stateful schemes; in con-
trast unique signatures are stateless, and in fact they are among the fastest and most
established digital signatures available. As our second positive result, we show how to
construct subversion-resilient identiﬁcation schemes from subversion-resilient signature
schemes. We ﬁnally show that it is possible to devise signature schemes secure against
arbitrary tampering with the computation, by making use of an un-tamperable cryp-
tographic reverse ﬁrewall (Mironov and Stephens-Davidowitz, EUROCRYPT ’15), i.e.,
an algorithm that “sanitizes” any signature given as input (using only public informa-
tion). The ﬁrewall we design allows us to successfully protect so-called re-randomizable
signature schemes (which include unique signatures as a special case).
As an additional contribution, we extend our model to consider multiple users and show
implications and separations among the various notions we introduced. While our study is
mainly theoretical, due to its strong practical motivation, we believe that our results have
important implications in practice and might inﬂuence the way digital signature schemes
are selected or adopted in standards and protocols.
Contents
1 Introduction
1.1 Our Results and Techniques . . .
1.2
Impact . . . . . . . . . . . . . . .
1.3 Related Work . . . . . . . . . . .
2
3
6
6
2 Preliminaries
8
8
2.1 Notation . . . . . . . . . . . . . .
2.2 Signature Schemes . . . . . . . .
9
2.3 Pseudorandom Generators . . . . 10
2.4 Pseudorandom Functions
. . . . 10
3 Subverting Signatures
10
3.1 Security . . . . . . . . . . . . . . 11
3.2 Public/Secret Undetectability . . 13
3.3 Signing Key Recovery . . . . . . 14
3.4 Successful SAs
. . . . . . . . . . 15
4 Mounting Subversion Attacks
15
4.1 Non-Trivial Randomness Attack
15
4.2 Coin-Extractable Attack . . . . . 20
1
Introduction
5 Security of Unique Signatures
23
5.1 The Veriﬁability Condition . . . 23
5.2 Chosen-Message Attacks . . . . . 24
5.3 Random-Message Attacks . . . . 26
5.4 Subversion-Resilient Identiﬁca-
tion Schemes
. . . . . . . . . . . 27
6 Reverse Firewalls for Signatures
29
6.1 Properties . . . . . . . . . . . . . 30
6.2 Necessity of Keeping State . . . . 31
6.3 Patching Re-Randomizable Sig-
natures
. . . . . . . . . . . . . . 33
7 The Multi-User Setting
35
7.1 Multi-User Security . . . . . . . . 35
7.2 Multi-User Public/Secret Unde-
tectability . . . . . . . . . . . . . 39
7.3 Multi-User Signing Key Recovery 41
Balancing national security interests with the rights to privacy of lawful citizen is always a
daunting task. It has been particularly so in the last few years, after the revelations of Edward
Snowden [PLS13, BBG13, Gre14] that have evidenced a massive collection of metadata and
other information perpetrated by several intelligence agencies. It is now clear that intelligence
operators were not just interested in collecting and mining information, but they also actively
deployed malware, exploited zero-day vulnerabilities, and carried out active attacks against
standard protocols.
In addition, it appears some cryptographic protocol speciﬁcations were
modiﬁed to embed backdoors. Whether this activity was eﬀective is open to debate, and
it is indeed being furiously discussed among policy makers, the public, and the intelligence
community.
The ability of an adversary to replace a cryptographic algorithm with an altered version was
ﬁrst considered formally by Young and Yung (extending previous works of Simmons on sublim-
inal channels [Sim83, Sim84]), who termed this ﬁeld kleptography [YY96, YY97]. The idea is
that the attacker surreptitiously modiﬁes a cryptographic scheme with the intent of subverting
its security. This research area has recently been revitalized by Bellare et al. [BPR14], who
considered encryption algorithms with the possibility of mass surveillance under the algorithm-
substitution attack. They analyzed the possibility of an intelligence agency substituting an
encryption algorithm with the code of an alternative version that undetectably reveals the se-
cret key or the plaintext. What they uncovered is that any randomized and stateless encryption
scheme would fall to generic algorithm-substitution attacks. The only way to achieve a meaning-
ful security guarantee (CPA-security) is to use a nonce-based encryption that must keep state.
Clearly, stateless schemes are preferable as they are easier to deploy eﬀectively, and indeed,
most of the deployed encryption algorithms are in this class.
In this paper we analyze digital signature schemes under the so-called subversion attacks
(SAs), that in particular include algorithm-substitution and kleptographic attacks as a special
2
case, but additionally cover more general malware and virus attacks (see below). Unlike en-
cryption, we show positive results and truly eﬃcient schemes that provide the strongest security
guarantee, and can thus be deployed within real systems. We stress that our intention is not
to propose schemes that can be abused by criminals to avoid monitoring. We are motivated by
pure scientiﬁc curiosity, and aspire to contribute to an active ﬁeld of research.
1.1 Our Results and Techniques
We introduce a new and generic framework and deﬁnitions for subversion of digital signatures.
In the standard black-box setting, a signature scheme should remain unforgeable even against
an adversary able to obtain signatures on (polynomially many) chosen messages. Our security
deﬁnitions empower the adversary with the ability of continuously subverting the signing algo-
rithm within a class A of allowed SAs. For each chosen subversion in the class, the adversary
can access an oracle that answers (polynomially many) signature queries, using the subverted
signature algorithm. Importantly, the diﬀerent subversions can be chosen in a fully adaptive
manner, possibly depending on the target veriﬁcation key of the user.
The above deﬁnition is very general, as it covers adaptive and continuous tampering with the
computation performed by the signing algorithm (within the class A). In particular, it includes
algorithm-substitution and kleptographic attacks as a special case, but additionally models,
e.g., a machine running a signature software infected by multiple viruses and malware (e.g.,
due to buﬀer overﬂow attacks [One96, Fry00, PB04]); we also obtain memory and randomness
tampering (see Section 1.3) as a special case. We refer the reader to Section 3.1 (where we
introduce our model formally) for a more comprehensive discussion.
Clearly, without making any restriction on the class A (or without making additional as-
sumptions) there is no hope for security: An arbitrarily subverted signature algorithm could,
for instance, just ignore all inputs and output the secret key. In this paper we investigate two
approaches to tackle attacks of this sort and obtain positive results.
 Limiting the adversarial power. We consider a setting where the adversarial goal is to
subvert the signature algorithm in a way that is undetectable to the end-user (or at least
allows to maintain plausible deniability). For instance, the simple attack above—where
the subversion outputs the secret key—is easily detectable given only public informa-
tion. As we show in Section 5, requiring that the class A satisﬁes a basic undetectability
requirement already allows for interesting positive results.
 Using a reverse ﬁrewall. In Section 6, we show that security against arbitrary tam-
pering with the computation can be achieved, by making the additional assumption of an
un-tamperable cryptographic reverse ﬁrewall (RF) [MS15, DMS16]. Roughly, a RF takes
as input a message/signature pair, and is allowed to “sanitize” the input signature using
only public information.
A more detailed description of our techniques follows.
Negative results. We deﬁne what it means for a class A of SAs to be undetectable. Roughly,
the class A such that the following holds: (i) no user can distinguish black-box access to the
this means that there exists a single eﬃcient sampling strategy yielding an algorithm (cid:101)A from
genuine signature algorithm from black-box access to the subverted signature algorithm(cid:101)A; (ii) an
adversary given a polynomial number of samples from(cid:101)A, no matter how the samples are chosen,
can recover the signing key with high probability. See Section 3.2 for a precise deﬁnition. Our
deﬁnitions of undetectability are similar in spirit to the ones put forward by [BPR14, BJK15]
for the setting of symmetric encryption. Importantly, we distinguish the case where the user
3
(trying to detect the attack) knows only public or private information (i.e., it knows, or even is
allowed to choose, the secret key).1
Next, we explore the possibility of designing classes of SAs that are (even secretly) unde-
tectable, and yet allow for complete security breaches. This direction was already pursued by
Bellare et al. [BPR14], who showed that it is possible to stealthily bias the random coins of
suﬃciently randomized symmetric encryption schemes in a way that allows to extract the secret
key after observing a suﬃcient number of (subverted) ciphertexts. As a ﬁrst negative result,
we explain how to adapt the “biased randomness attack” of [BJK15] to the case of signature
schemes; similar to [BJK15], our attack is completly stateless (i.e., the class of SAs we consider
does not need to maintain a state across invocations), which makes it undetectable even in the
presence of state resets.
The above generic attack requires that the signature scheme uses a minimal amount of
randomness. This leaves the interesting possibility that less randomized schemes (such as the
Katz-Wang signature scheme [KW03], using only one bit of randomness) might be secure. In
Section 4, we present a new attack showing that this possibility is vacuous: Our attack allows to
stealthily bias the randomness in a way that later allows to extract the signing key—regardless
of the number of random bits required by the scheme—assuming that the targeted signature
scheme is coin-extractable. The latter roughly means that the random coins used for generating
signatures can be extracted eﬃciently from the signature itself; as we discuss in more detail in
Section 4.2, many real schemes (including Katz-Wang) are coin-extractable.
Our second attack is stateful, in that a counter has to be maintained by the subverted
algorithm in order to leak diﬀerent parts of the secret key. We leave it as an open problem
to design a stateless attack that works for (coin-extractable) signature schemes with small
randomness.
Positive results. As a ﬁrst positive result, we show that fully deterministic schemes with
unique2 signatures are existentially unforgeable under chosen-message attacks against the class
of SAs that satisﬁes the so-called veriﬁability condition.3 This means that—for all values in
the message space—signatures produced by the subverted signature algorithm should (almost
always) verify correctly under the target veriﬁcation key (note that both attacks mentioned