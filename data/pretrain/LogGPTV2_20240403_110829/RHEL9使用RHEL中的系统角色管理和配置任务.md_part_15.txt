                  - name: group_meta_attribute1_name
                    value: group_meta_attribute1_value
                  - name: group_meta_attribute2_name
                    value: group_meta_attribute2_value
        ```
        默认情况下，不定义任何资源组。
        有关包含资源组配置的 HA Cluster System Role playbook
        示例，[请参阅使用隔离和资源配置高可用性集群](#using-the-hacluster-system-role_administration-and-configuration-tasks-using-system-roles-in-rhel.html#configuring-ha-cluster-with-fencing-and-resources_configuring-ha-cluster-using-system-roles "配置带有隔离和资源的高可用性集群"){.link}。
    :::
[`ha_cluster_resource_clones`{.literal}]{.term}
:   此变量定义由系统角色配置的 pacemaker
    资源克隆。您可以为资源克隆配置的项目如下：
    ::: itemizedlist
    -   `resource_id`{.literal} （必需）- 要克隆的资源.资源必须在
        `ha_cluster_resource_primitives`{.literal} 变量或
        `ha_cluster_resource_groups`{.literal} 变量中定义。
    -   `promotable`{.literal} （可选）-
        表示要创建的资源克隆是否是可升级的克隆，表示为 `yes`{.literal}
        或 `no`{.literal}。
    -   `id`{.literal} （可选）- 克隆的自定义 ID。如果未指定
        ID，将会生成它。如果集群不支持这个选项，则会显示一个警告。
    -   `meta_attrs`{.literal} （可选）-
        克隆的元属性集合列表。目前，只支持一个集合。
        ::使用 HA Cluster System Role 配置的资源定义的结构如下：
        ``` literallayout
        ha_cluster_resource_clones:
          - resource_id: resource-to-be-cloned
            promotable: yes
            id: custom-clone-id
            meta_attrs:
              - attrs:
                  - name: clone_meta_attribute1_name
                    value: clone_meta_attribute1_value
                  - name: clone_meta_attribute2_name
                    value: clone_meta_attribute2_value
        ```
        默认情况下，没有定义资源克隆。
        有关包含资源克隆配置的 HA Cluster System Role playbook
        示例，[请参阅使用隔离和资源配置高可用性集群](#using-the-hacluster-system-role_administration-and-configuration-tasks-using-system-roles-in-rhel.html#configuring-ha-cluster-with-fencing-and-resources_configuring-ha-cluster-using-system-roles "配置带有隔离和资源的高可用性集群"){.link}。
    :::
[`ha_cluster_constraints_location`{.literal}]{.term}
:   此变量定义资源位置限制。资源位置限制表示资源可在哪些节点上运行。您可以指定资源
    ID
    或模式匹配的资源，它们可以匹配多个资源。您可以通过节点名称或规则指定节点。
    您可以为资源位置约束配置的项目如下：
    ::: itemizedlist
    -   `资源`{.literal} （必需）- 约束应用到的资源规格。
    -   `节点`{.literal} （必需）- 资源应首选或避免的节点的名称。
    -   `id`{.literal} （可选）- 约束 ID。如果未指定，它将自动生成。
    -   `选项`{.literal} （可选）- name-value 字典列表。
        ::: itemizedlist
        -   `分数`{.literal} - 设置约束的权重。
            ::: itemizedlist
            -   正 `分`{.literal} 数值表示资源首选在节点上运行。
            -   负 `分`{.literal} 数值表示资源应避免在节点上运行。
            -   `分数`{.literal} 值 `-INFINITY`{.literal}
                表示资源必须避免在节点上运行。
            -   如果没有指定 `分数`{.literal}，分数值默认为
                `INFINITY`{.literal}。
                ::默认情况下，没有定义资源位置限制。
                指定资源 ID 和节点名称的资源位置约束的结构如下：
                ``` literallayout
                ha_cluster_constraints_location:
                  - resource:
                      id: resource-id
                    node: node-name
                    id: constraint-id
                    options:
                      - name: score
                        value: score-value
                      - name: option-name
                        value: option-value
                ```
                您为资源位置约束配置的项目，用于指定资源模式是为资源位置约束配置的相同项目，用于指定资源
                ID，但资源规格本身除外。您为资源规格指定的项目如下：
            :::
        :::
    -   `pattern`{.literal} （必需）- POSIX 扩展正则表达式资源 ID 与.
        ::指定资源模式和节点名称的资源位置约束结构如下：
        ``` literallayout
        ha_cluster_constraints_location:
          - resource:
              pattern: resource-pattern
            node: node-name
            id: constraint-id
            options:
              - name: score
                value: score-value
              - name: resource-discovery
                value: resource-discovery-value
        ```
        您可以为资源位置约束配置的项目，它指定资源 ID 和规则如下：
    -   `资源`{.literal} （必需）- 约束应用到的资源规格。
        ::: itemizedlist
        -   `ID`{.literal} （必需）- 资源 ID。
        -   `role`{.literal} （可选）-
            约束限制的资源角色：`已启动`{.literal}、`未推广`{.literal}、`Promoted`{.literal}.
        :::
    -   `规则`{.literal} （必需）- 使用 `pcs`{.literal} 语法编写的
        Constraint 规则。如需更多信息，请参阅 `pcs`{.literal}(8)man page
        `的约束位置`{.literal} 部分。
    -   指定的其他项目的含义与未指定规则的资源约束相同。
        ::指定资源 ID 和规则的资源位置约束的结构如下：
        ``` literallayout
        ha_cluster_constraints_location:
          - resource:
              id: resource-id
              role: resource-role
            rule: rule-string
            id: constraint-id
            options:
              - name: score
                value: score-value
              - name: resource-discovery
                value: resource-discovery-value
        ```
        为资源位置约束配置的项目，用于指定资源模式，规则是用于资源位置约束的相同项目，用于指定资源
        ID 和规则，但资源规格本身除外。您为资源规格指定的项目如下：
    -   `pattern`{.literal} （必需）- POSIX 扩展正则表达式资源 ID 与.
        ::指定资源模式和规则的资源位置约束结构如下：
        ``` literallayout
        ha_cluster_constraints_location:
          - resource:
              pattern: resource-pattern
              role: resource-role
            rule: rule-string
            id: constraint-id
            options:
              - name: score
                value: score-value
              - name: resource-discovery
                value: resource-discovery-value
        ```
        有关创建具有资源限制的集群的 `ha_cluster`{.literal} 系统角色
        playbook 示例，请参阅使用 [资源限制
        配置高可用性集群](#using-the-hacluster-system-role_administration-and-configuration-tasks-using-system-roles-in-rhel.html#configuring-ha-cluster-with-constraints_configuring-ha-cluster-using-system-roles "使用资源限制配置高可用性集群"){.link}。
    :::
[`ha_cluster_constraints_colocation`{.literal}]{.term}
:   此变量定义资源 colocation
    约束。资源共存限制表示一个资源的位置取决于另一个资源的位置。存在两种类型的
    colocation 约束：两个资源的一个简单 colocation
    约束，并为多个资源设置 colocation 约束。
    您可以为简单资源 colocation 约束配置的项目如下：
    ::: itemizedlist
    -   `resource_follower`{.literal} (mandatory)- 应相对于
        `resource_leader`{.literal} 的资源。
        ::: itemizedlist
        -   `ID`{.literal} （必需）- 资源 ID。
        -   `role`{.literal} （可选）-
            约束限制的资源角色：`已启动`{.literal}、`未推广`{.literal}、`Promoted`{.literal}.
        :::
    -   `resource_leader`{.literal} （必需）-
        集群将决定优先放置此资源的位置，然后决定放置
        `resource_follower`{.literal} 的位置。
        ::: itemizedlist
        -   `ID`{.literal} （必需）- 资源 ID。
        -   `role`{.literal} （可选）-
            约束限制的资源角色：`已启动`{.literal}、`未推广`{.literal}、`Promoted`{.literal}.
        :::
    -   `id`{.literal} （可选）- 约束 ID。如果未指定，它将自动生成。
    -   `选项`{.literal} （可选）- name-value 字典列表。
        ::: itemizedlist
        -   `分数`{.literal} - 设置约束的权重。
            ::: itemizedlist
            -   正 `分`{.literal} 数值表示资源应该在同一节点上运行。
            -   负 `分`{.literal} 数值表示资源应在不同的节点上运行。
            -   `分数`{.literal} 值为 `+INFINITY`{.literal}
                表示资源必须在同一节点上运行。
            -   `分数`{.literal} 值 `-INFINITY`{.literal}
                表示资源必须在不同的节点上运行。
            -   如果没有指定 `分数`{.literal}，分数值默认为
                `INFINITY`{.literal}。
                ::默认情况下，没有定义资源 colocation 约束。
                简单资源 colocation 约束的结构如下：
                ``` literallayout
                ha_cluster_constraints_colocation:
                  - resource_follower:
                      id: resource-id1
                      role: resource-role1
                    resource_leader:
                      id: resource-id2
                      role: resource-role2
                    id: constraint-id
                    options:
                      - name: score
                        value: score-value
                      - name: option-name
                        value: option-value
                ```
                您可以为资源集 colocation 约束配置的项目如下：
            :::
        :::
    -   `resource_sets`{.literal} （必需）- 资源集合列表。
        ::: itemizedlist
        -   `resource_ids`{.literal} （必需）- 资源列表。
        -   `选项`{.literal} （可选）- name-value
            字典列表精细调整集合中资源如何被约束处理。
        :::
    -   `id`{.literal} （可选）- Same 值作为简单 colocation 约束。
    -   `选项`{.literal} （可选）- Same 值作为简单 colocation 约束。
        ::资源集 colocation 约束的结构如下：
        ``` literallayout
        ha_cluster_constraints_colocation:
          - resource_sets:
              - resource_ids:
                  - resource-id1
                  - resource-id2
                options:
                  - name: option-name
                    value: option-value
            id: constraint-id
            options:
              - name: score
                value: score-value
              - name: option-name
                value: option-value
        ```
        有关创建具有资源限制的集群的 `ha_cluster`{.literal} 系统角色
        playbook 示例，请参阅使用 [资源限制
        配置高可用性集群](#using-the-hacluster-system-role_administration-and-configuration-tasks-using-system-roles-in-rhel.html#configuring-ha-cluster-with-constraints_configuring-ha-cluster-using-system-roles "使用资源限制配置高可用性集群"){.link}。
    :::
[`ha_cluster_constraints_order`{.literal}]{.term}
:   此变量定义资源顺序约束。资源顺序限制表示应发生某些资源操作的顺序。有两种资源顺序约束：两个资源的简单顺序约束，以及多个资源的设置顺序约束。
    您可以为简单的资源顺序约束配置的项目如下：
    ::: itemizedlist
    -   `resource_first`{.literal} (mandatory)-
        `resource_then`{.literal} 资源依赖的资源。
        ::: itemizedlist
        -   `ID`{.literal} （必需）- 资源 ID。
        -   `action`{.literal} （可选）- 在为 `resource_then`{.literal}
            资源启动操作前必须完成的操作。允许的值：
            `start`{.literal}、`stop`{.literal}、`promote`{.literal}、`demote`{.literal}。
        :::
    -   `resource_then`{.literal} （必需）- 依赖资源。
        ::: itemizedlist
        -   `ID`{.literal} （必需）- 资源 ID。
        -   `action`{.literal} （可选）- 资源只能在
            `resource_first`{.literal}
            资源执行操作后执行的操作。允许的值：
            `start`{.literal}、`stop`{.literal}、`promote`{.literal}、`demote`{.literal}。
        :::
    -   `id`{.literal} （可选）- 约束 ID。如果未指定，它将自动生成。
    -   `选项`{.literal} （可选）- name-value 字典列表。
        ::默认情况下，没有定义资源顺序限制。
        简单资源顺序约束的结构如下：
        ``` literallayout
        ha_cluster_constraints_order:
          - resource_first:
              id: resource-id1
              action: resource-action1
            resource_then:
              id: resource-id2
              action: resource-action2
            id: constraint-id
            options:
              - name: score
                value: score-value
              - name: option-name
                value: option-value
        ```
        您可以为资源设置顺序约束配置的项目如下：
    -   `resource_sets`{.literal} （必需）- 资源集合列表。
        ::: itemizedlist
        -   `resource_ids`{.literal} （必需）- 资源列表。
        -   `选项`{.literal} （可选）- name-value
            字典列表精细调整集合中资源如何被约束处理。
        :::
    -   `id`{.literal} （可选）- Same 值作为简单顺序约束。
    -   `选项`{.literal} （可选）- Same 值作为简单顺序约束。
        ::资源集顺序约束的结构如下：
        ``` literallayout
        ha_cluster_constraints_order:
          - resource_sets:
              - resource_ids:
                  - resource-id1
                  - resource-id2
                options:
                  - name: option-name
                    value: option-value
            id: constraint-id
            options:
              - name: score
                value: score-value
              - name: option-name
                value: option-value
        ```
        有关创建具有资源限制的集群的 `ha_cluster`{.literal} 系统角色
        playbook 示例，请参阅使用 [资源限制
        配置高可用性集群](#using-the-hacluster-system-role_administration-and-configuration-tasks-using-system-roles-in-rhel.html#configuring-ha-cluster-with-constraints_configuring-ha-cluster-using-system-roles "使用资源限制配置高可用性集群"){.link}。
    :::
[`ha_cluster_constraints_ticket`{.literal}]{.term}
:   此变量定义资源 ticket
    约束。资源票据限制表示依赖于特定票据的资源。有两种类型的资源 ticket
    约束：一个资源的简单 ticket 约束，多个资源的 ticket 顺序约束。
    您可以为简单资源 ticket 约束配置的项目如下：
    ::: itemizedlist
    -   `资源`{.literal} （必需）- 约束应用到的资源规格。
        ::: itemizedlist
        -   `ID`{.literal} （必需）- 资源 ID。
        -   `role`{.literal} （可选）-
            约束限制的资源角色：`已启动`{.literal}、`未推广`{.literal}、`Promoted`{.literal}.
        :::
    -   `ticket`{.literal} (mandatory)- 资源所依赖的票据的名称。
    -   `id`{.literal} （可选）- 约束 ID。如果未指定，它将自动生成。
    -   `选项`{.literal} （可选）- name-value 字典列表。