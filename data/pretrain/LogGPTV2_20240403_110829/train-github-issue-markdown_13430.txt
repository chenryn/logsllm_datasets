Hi React Community, reading the features related to useState and batching, im
finding problems where the state is not updated or when i have memoised a
method using `useCallback`
i would like to suggest about add a method to get the state in useState, an
example for this approach can be this
    const useGetState = (initialValue, withGetCallback = false) => {
      const [state, setState] = useState(initialValue);
      if (!withGetCallback) {
        return [state, setState];
      }
      const stateRef = useRef(state);
      useEffect(() => {
        stateRef.current = state;
      }, [state]);
      const getState = useCallback(() => {
        return stateRef.current;
      }, [stateRef]);
      return [state, setState, getState, stateRef];
    };
an implementation could looks like this
        const [state, setState, getState] = useGetState(null, true);
        // back compatibility
        const [state, setState] = useGetState(null);  // (exactly same as normal useState)
        // complex scenario
        const [state, setState, getState, stateRef] = useGetState(null, true);
using useRef we can be able to get the instance of the value in any moment and
in any place due that these callbacks never changes during the execution