尾。另外，分号和闭花括号（））之间也得有一个空格。
说明协程能够让你尽情发挥想象力，发递或接收来自子shell中进程的信息。只有在拥有多个协
程的时候才需要对协程进行命名，因为你得和它们进行通信。否则的话，让coproc命令
将其设置成默认的名字COPROC就行了。
你可以发挥才智，将协程与进程列表结合起来产生嵌套的子shell。只需要输人进程列表，然
后把命令coproc放在前面就行了。
S coproc (sleep 10; sleep 2 )
[1  2574
$ jobs
[1] +Running
coprocCoPR0c ( sleep  10;sleep 21 &
Spe --forest
ALL GId
TIME CMD
2574 pts/12
2483 pts/12
00:00 :00 bash
00 : 00 : 00
_ bash
2575 pts/12
00 : 00 : 00
一
_ sleep
---
## Page 111
96
第5章理解shell
2576 pta/12
ed =\00=00:00
记住，生成子shell的成本不低，而且速度还慢。创建嵌套子shell更是火上浇油！
在命令行中使用子shell能够获得灵活性和便利。要想获得这些优势，重要的是理解子shell的
行为方式。对于命令也是如此。在下一节中，我们将研究内建命令与外部命令之间的行为差异。
5.3理解shell的内建命令
在学习GNU bash shell期间，你可能听到过“内建命令”这个术语。搞明白shell的内建命令
和非内建（外部）命令非常重要。内建命令和非内建命令的操作方式大不相同。
5.3.1外部命令
外部命令，有时候也被称为文件系统命令，是存在于bashshell之外的程序。它们并不是shell
程序的一部分。外部命令程序通常位于/bin、Ausr/bin、/sbin或/usr/sbin中。
ps就是一个外部命令。你可以使用which和type命令找到它。
$ which pa
/bin/pα
≤ type -a pa
pa ia /bin/pa
$ 1s -1 /bin/pa
-rwxr-xr=x 1 root root 93232 Jan 6 18:32 /bin/pa
当外部命令执行时，会创建出一个子进程。这种操作被称为行生（forking）。外部命令p=很
方便显示出它的父进程以及自己所对应的衍生子进程。
J= Bd s
UID
PID PPIDC STIME TTY
TIHE CHD
chxiat1+2801 27430 17:16 pta/9
chxIat1+
27432742
6/d 60=t 0
00 :00 :00 bash
I- ed 00=00=00
$
作为外部命令，ps命令执行时会创建出一个子进程。在这里，ps命令的PID是2801，父PID
是2743。作为父进程的bash shell的PID是2743。图5-3展示了外部命令执行时的衍生过程。
父进程
衍生
子进程
发出外部命令：
子进程
执行外部命令：
ps - f
ps -f
图5-3外部命令的衍生
---
## Page 112
5.3理解shell的内建命令
/.6
当进程必须执行衍生操作时，它需要花费时间和精力来设置新子进程的环境。所以说，外部
命令多少还是有代价的。
说明就算衍生出子进程或是创建了子shell，你仍然可以通过发遥信号与其沟道，这一点无论是
在命令行还是在脚本编写中都是极其有用的。发送信号（signaling）使得进程间可以通过
信号进行通信。信号及其发送会在第16章中讲到。
5.3.2内建命令
内建命令和外部命令的区别在于前者不需要使用子进程来执行。它们已经和shel编译成了一
体，作为shell工具的组成部分存在。不需要借助外部程序文件来运行。
ca和exit命令都内建于bash shell。可以利用type命令来了解某个命令是否是内建的。
cd la a shell builtin
Stype cd
S type exit
exiltiαashel1builtin
因为既不需要通过衍生出子进程来执行，也不需要打开程序文件，内建命令的执行速度要更
快，效率也更高。附录A给出了GNU bash shell的内建命令列表。
要注意，有些命令有多种实现。例如echo和pwd既有内建命令也有外部命令。两种实现略有
不同。要查看命令的不同实现，使用type命令的-a选项。
echo ia a shell builtin
S type -a ecbo
echo ia /bin/echo
S which echo
/bin/echo
pud 1a a she11bu11t in
S type -a pud
pwd 1a/bin/pwd
S whieh pwd
/bLn/pwd
命令type-a显示出了每个命令的两种实现。注意，which命令只显示出了外部命令文件。
跨门对于有多种实现的命令，如果想妥使用其外部命令实现，直接指明对应的文件就可以了。
例如，要使用外部命令pwd，可以输入/bin/pwd。
---
## Page 113
98
第5章
理解shell
1.使用history命令
-个有用的内建命令是history命令。bash shell会跟踪你用过的命令。你可以唤回这些命令
并重新使用。
要查看最近用过的命令列表，可以输人不带选项的history命令。
$history
1  ps -f
2
pwd
3
coproc(eleep 10;sleep2 1
1.8
4
5
ps --forest
jobs
6
 pe -f
71s
10
9
18 -1 /bin/ps
pwd
11
history
1.2
cd /etc
14
1.3
pwd
1.8
1.5
cd.
16
type pvd
1.7
vhich pvd
1.8
type ecbo
19
vhich echo
21
type -a pvd
type
-a echo
22
pwd
在这个例子中，只显示了最近的23条命令。通常历史记录中会保存最近的1000条命令。这个
数量可是不少的！
窍门你可以设置保存在bash历史记录中的命令数。要想实现这一点，你需要修改名为HISTSIZE
的环境变量（参见第6章）。
你可以唤回并重用历史列表中最近的命令。这样能够节省时间和击键量。输人！！，然后按回
车键就能够唤出刚刚用过的那条命令来使用。
ps --forest
LL CId
00 : 00 : 00 bash
TIME CHD
2744 pts/0
2089 pts/0
00: 00: 00 1_ ps
$ 11
$
D8 --forest
2089 pts/0
AL CId
TIHE CHD
sd "\00100100
00 : 00 : 00 bash
2745 pts/0
---
## Page 114
5.3理解shell的内建命令
66
当输人！！时，bash首先会显示出从shell的历史记录中唤回的命令。然后执行该命令。
命令历史记录被保存在隐藏文件.bash_history中，它位于用户的主目录中。这里要注意的是，
bash命令的历史记录是先存放在内存中，当shell退出时才被写人到历史文件中。
$ history
[- - . ]
2 5
26
ps --forest
history
28history
27
ps --forest
S cat .bash_history
prd
hietory
exit
注意，当history命令运行时，列出了28条命令。出于简洁性的考虑，上面的例子中只摘取
了一部分列表内容。但是文件.bash_history的内容被显示出来时，其中只有4条命令，与history
命令的输出并不匹配。
可以在退出shell会话之前强制将命令历史记录写人.bash_history文件。要实现强制写人，需
要使用history命令的-a选项。
Shistory -a
$ history
[- - . ]
25
ps --forest
2 6
history
ps --forest
291 -a
history
3 0
cat .bash_history
history
 - a
ps --forest
[- . .]
hietoty
pe --forest
hietory
cat .bash_history
1s -a
history -a
由于两处输出内容都太长，因此都做了删减。注意，history命令和.bash_history文件的输
人是一样的，除了最近的那条history命令，因为它是在history-a命令之后出现的。
---
## Page 115
100
第5章理解shell
说明如果你打开了多个终端会话，仍然可以使用history-a命令在打开的会话中
向.bash_history文件中添加记录。但是对于其他打开的终端会话，历史记录并不会自动更
新。这是因为.bash_history文件只有在打开首个终端会话时才会被读取。要想强制重新读
取bash_history文件，更新终端会语的历史记录，可以使用history-n命令。
你可以唤回历史列表中任意一条命令。只需输人惊叹号和命令在历史列表中的编号即可。
$ history
[ - . . ]
13
pwd
15
14
cd
1.s
1.6
xhich pud
type pwd
1.7
18
19
which echo
type echo
20
type -a pvd
[ -. ]
type -a echo
32
history -a
33
history
35 history
34
$130
$
pud i8 a shell builtin
type -a prd
pvd is /bin/pud
编号为20的命令从命令历史记录中被取出。和执行最近的命令一样，bash shell首先显示出从
shell历史记录中唤回的命令，然后执行该命令。
使用bashshell命令历史记录能够大大地节省时间。利用内建的history命令能够做到的事情
远不止这里所描述的。可以通过输人man history来查看history命令的bash手册页面。
2.命令别名
alias命令是另一个shell的内建命令。命令别名允许你为常用的命令（及其参数）创建另一
个名称，从而将输人量减少到最低。
你所使用的Linux发行版很有可能已经为你设置好了一些常用命令的别名。要查看当前可用
的别名，使用alias命令以及选项-p。
alias -p
alias egrep=*egrep --color=auto*
[ -.. ]
,osne=zotos-- dax6,,=dag sete
oqne=aotoo-- da1, =das6 see
a1ias 1='ls -CF*
a1ias la=*ls -*
---
## Page 116
5.4小结
101