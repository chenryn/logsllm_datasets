的关联，从而“薅走了一些数据”。针对此次API安全问题，平台已及时
加强了安全策略，并在不断强化。除了某社交平台之外，很多社交App
都有通过通讯录匹配好友的功能。2019年11月，Twitter就出现过利用通
讯录匹配功能获得百万推特用户账号和手机号的数据泄露事件，随后
Facebook关闭了这一功能。而到了2020年4月初，视频会议服务厂商
Zoom又被爆出发现多项安全漏洞，其中包含Facebook Graph API滥用导
致隐私数据泄露问题。
除了这些安全事件外，近期的境外媒体报道的API安全事件还有如
下几件。
4月2日，GitLab API问题导致私有项目的名称空间泄露。
4月93日，WordPress插件Rank Math爆出严重的API安全漏洞，借此
漏洞可以直接修改users表信息。
4月16日，网媒报道findadoctor.com网站因API安全问题，导致美国
140万名医生信息泄露。
从如此密集的安全事件都与API相关，大致可以判断出API安全问
题普遍存在，甚至还比较严重。那么，到底导致API安全问题发生的原
因有哪些呢？
1.企业API安全意识不足
从攻击视角来看，当越来越多的企业使用API对外部开放其业务能
力，意图共建生态时，这种新型的攻击面是充满诱惑和不可舍弃的蛋
糕。面对众多开放的API，恶意攻击者往往通过并不复杂的恶意行为，
即可给企业造成重大的危害。发生过安全事件的企业因为造成损失会增
加对API的重视度，但未遭受影响的企业，仍缺乏对API的关注。在API
测试环节，很多团队要么不知道API漏洞，要么直接忽略了API安全测
试；而在API服务发布后，API提供者、API赞助商以及第三方API使用
厂商也在此领域缺少精力投入。这些情况导致API生态中各相关利益方
（如API提供者、API赞助商、第三方API使用厂商等）责任不清、监督
失效，API安全处于无人管理的状态。
2.技术革新导致API安全风险增加
由于云计算的快速发展，越来越多的企业将应用和数据迁移至云
端，并暴露核心业务能力和流程相关的API为外部合作伙伴提供服务。
脱离了传统的内网或网络区域划分，云上应用的开发和集成、云端管理
API，被潜在的商业合作伙伴及攻击者使用，无形中使得API安全风险
增大。而大多数企业，没有人能完全掌握系统全部API，开发人员往往
也只是熟悉自己开发的相关模块，且很多技术开发人员认为采纳新的、
酷的技术更重要，在技术路线上选择新的特性，忽视API是否被攻击。
在这种缺少API安全性管理平台又未建立全面系统的API安全管理体系
的情况下，API安全风险更不可控。
3.API自身安全机制不足
企业将数据和能力通过API对外开放获取商机和便利的同时，也为
攻击者攻击提供了通道。为了达到目的，攻击者通过多种手段渗透
API，比如流量型的DDoS攻击、CC攻击；绕过身份鉴别或授权，非法
获取数据；逆向破解API客户端应用后，非法调用API服务。而因API服
务提供方、API开发团队、第三方合作伙伴等多方面原因，API自身的
安全机制存在缺陷，比如缺少身份鉴别或授权访问控制、缺少对敏感数
据的加密保护或异常检测手段、缺少对API资产的生命周期管理，导致
很多低版本的影子API。在这些情况下，攻防对抗中API自身安全能力
不足将成为短板，无法应对攻击者发起的恶意行为，反而易成为突破
口。
2.1.3 API安全面临的主要挑战
API安全事件频发，其外因是存在恶意攻击行为。而作为使用API
的企业，在API生态中把API当成基础设施的一部分，却缺少清晰的API
保护方针和策略，无法提供高质量的API安全服务能力，也是导致API
安全事件的原因。了解了这些原因，若想彻底解决API安全问题，仍需
要面临多方面的挑战。
1.API广泛使用带来攻击面扩大的挑战
API技术的产生是为了解决不同组件或模块之间的标准化通信交互
问题，随着互联网上业务种类的不断增加，出现了以API为中心的API
经济生态。在这个生态系统内，API能力提供者作为平台能力支撑方和
运营者，通过API的形式对外开放业务能力，吸引第三方厂商或合作伙
伴加入此生态系统。开放的业务能力越多，API暴露的攻击面就越大；
参与生态构建的第三方厂商越大，API使用范围越广泛，API暴露的攻
击面也就越大。从企业运营者的角度来说，是期望更多的第三方厂商加
入生态构建，从风险暴露的角度来说，越收敛则攻击面越小。在这种业
务期望快速发展，安全诉求越来越高的背景下，想解决API安全问题，
必须综合管理和技术手段，从网络治理、服务治理、API治理、IT治理
等角度去寻找业务发展和安全保障的最佳平衡点，尤其是对平台型企业
来说，如果内部IT治理水平较低，将面临巨大的挑战。
2.API安全实践经验缺失的挑战
对于使用API技术的企业来说，使用某项技术是为了解决某些问
题，以期望得到更高效的业务能力，但因技术人员对使用某项技术带来
安全风险往往理解不够深刻。尤其是在当前互联网业务竞争十分激烈，
版本更新迭代非常频繁的情况下，应付API功能的开发已经很疲惫，加
上团队内部或企业内部缺少安全经验丰富的人员来对研发过程进行监督
或指导，导致开发出来的API存在安全缺陷。而企业缺少API开发过程
中的相关工具、平台以及保障机制，更无法从组织层面指导API安全实
践的开展。
3.外部环境变化带来的合规性挑战
近几年，随着国家层面网络空间治理的不断深入，满足合规性要求
成为每一个企业正常业务开展的必要条件。在我国，国家标准和行业标
准层面，对API使用提出了多方面的安全要求。比如在关于个人信息安
全的国家推荐性标准GB/T 35273-2020《信息安全技术 个人信息安全规
范》中，对于使用API收集个人敏感信息且未单独向个人信息主体征得
收集、使用个人信息的授权同意时有如下要求。
当个人信息控制者与第三方为共同个人信息控制者时（例如，服务
平台与平台上的签约商家），个人信息控制者应通过合同等形式与第三
方共同确定应满足的个人信息安全要求，以及在个人信息安全方面自身
和第三方应分别承担的责任和义务，并向个人信息主体明确告知。
在规范中，要求API服务提供者在涉及个人信息收集时，需要征得
用户同意并明确确认授权的情况下才可以进行信息采集。而作为被第三
方集成的API服务提供方，如果涉及个人信息收集时，需要双方约定分
别承担的责任和义务，并明确告知用户。除了此规范外，金融行业标准
JR/T 0185-2020《商业银行应用程序接口安全管理规范》中，更是从API
类型与安全设计、开发、部署、集成、运维等生命周期角度，对API的
管理提出多方面的合规性要求。
这些标准或规范为企业的API安全实践提供方向性指引，同时也为
API的合规提供可落地标准。企业完成了此类合规的挑战，才能更好地
开展业务。
2.2 API安全漏洞类型
在发生的API安全事件中，导致问题发生的漏洞机理和原因与传统
Web安全相似，并有大量的交叉地带，API安全的很多漏洞类型与传统
Web安全非常类似。
2.2.1 常见的API安全漏洞类型
根据安全漏洞发生的机理和原因，对API安全漏洞做归类分析，常
见的类型如下。
■ 未受保护API：在现行的Open API开放平台中，一般需要对第三
方厂商的API接入身份进行监管和审核，通过准入审核机制来保护
API。当某个API因未受保护而被攻破后，会直接导致对内部应用程序
或内部API的攻击。比如因REST、SOAP保护机制不全使攻击者透明地
访问后端系统即属于此类。
■ 
弱身份鉴别：当API暴露给公众调用时，为了保障用户的可信
性，必须对调用用户进行身份认证。因设计缺陷导致对用户身份的鉴别
和保护机制不全而被攻击，比如弱密码、硬编码、暴力破解等。
■ 中间人劫持：因API的通信链路安全机制不全，攻击者通过攻击
手段将自己成为API链中的某个受信任链，从而拦截数据以进行数据篡
改或加密卸载。此类攻击，通常发生在网络链路层。
■ 
传统Web攻击：在这里主要是指传统Web攻击类型，通过攻击
HTTP协议中不同的参数，来达到攻击目的，比如SQL注入、LDAP注
入、XXE等。而攻击者在进一步攻击中，会利用权限控制缺失、CSRF
进行横向移动，从而获取更大的战果。
■ 弱会话控制：有时API身份鉴别没有问题，但对会话过程安全保
护不足，比如会话令牌（Cookie、一次性URL、SAML令牌和OAuth
令牌）的保护。会话令牌是使API服务器知道谁在调用它的主要（通常
是唯一的）方法，如果令牌遭到破坏、重放或被欺骗，API服务器很难
区分是否是恶意攻击行为。
■ 反向控制：与传统的交互技术不同，API通常连接着两端。传统
的应用中大多数安全协议都认为信任服务器端是可信的，而在API中，
服务器端和客户端都不可信。如果服务器端被控制，则反向导致调用
API的客户端出现安全问题，这是此类安全问题出现的原因。
■ 框架攻击：在API安全威胁中，有一些特殊存在的攻击场景，它
们是API规范、架构设计导致的安全问题，这类威胁统称为框架攻击。
最常见的比如同一API存在不同版本，导致攻击者攻击低版本API漏
洞；同一API的不同客户端调用，可能PC端没有安全问题而移动端存在
安全问题等。
2.2.2 OWASP API安全漏洞类型
在API安全发展的过程中，除了各大安全厂商和头部互联网企业在
奔走呼吁之外，还有一家公益性安全组织，即开放式Web应用程序安全
项目（Open Web Application Security Project，OWASP）。OWASP是一
个开源的、非盈利的全球性安全组织，主要致力于应用软件的安全研
究，它有很多开源项目，OWASP API安全Top 10就是其中的一个。
在OWASP API安全Top 10中，OWASP延续了Web安全的传统，收
集了公开的与API安全事件有关的数据和漏洞猎人赏金平台的数据，由
安全专家组进行分类，最终挑选出了十大API安全漏洞的类型，以警示
业界提高对API安全问题的关注。这十大API安全漏洞类型的含义分别
如下。
■ API1-失效的对象级授权：攻击者通过破坏对象级别授权的API，
来获得未经授权的或敏感的数据，比如通过可预测订单ID值来查询所有
订单信息。
■ API2-失效的用户认证：开发者对API身份认证机制设计存在缺陷
或无保护设计，导致身份认证机制无效，比如弱密码、无锁定机制而被
暴露破解、Token未校验或Token泄露导致认证机制失效等。
■ API3-过度的数据暴露：在API响应报文中，未对应答数据做适当
的过滤，返回过多的、不必要的敏感信息。比如查询用户信息接口时却
返回了身份证号、密码信息；查询订单信息时也返回了付款银行卡号、
付款人地址信息等。
■ API4-缺乏资源和速率控制：在API设计中，未对API做资源和速
率限制或保护不足，导致被攻击。比如用户信息接口未做频次限制导致
所有用户数据被盗；文本翻译接口没有速率限制导致大量文件上传耗尽
翻译服务器资源。
■ API5-失效的功能级授权：与API1类似，只不过此处主要指功能
级的控制，比如修改HTTP方法，从GET改成DELETE便能访问一些非
授权的API；普通用户可以访问api/userinfo的调用，直接修改为
api/admininfo，即可调用管理类API。
■ API6-批量分配：在API的业务对象或数据结构中，通常存在多个
属性，攻击者通过篡改属性值的方式，达到攻击目的。比如通过设置
user.is_admin和user.is_manager的值提升用户权限等级；假设某API的默