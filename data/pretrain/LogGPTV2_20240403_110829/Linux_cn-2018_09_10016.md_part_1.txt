---
author: Vivek Gite
category: 系统运维
comments_data: []
count:
  commentnum: 0
  favtimes: 0
  likes: 0
  sharetimes: 0
  viewnum: 8015
date: '2018-09-15 22:39:00'
editorchoice: false
excerpt: 在 FreeBSD 上，我该如何设置 PF 防火墙，来保护只有一个公共 IP 地址和端口的 web 服务器呢？
fromurl: https://www.cyberciti.biz/faq/how-to-set-up-a-firewall-with-pf-on-freebsd-to-protect-a-web-server/
id: 10016
islctt: true
largepic: /data/attachment/album/201809/15/223918yw8s808787d6707q.jpg
permalink: /article-10016-1.html
pic: /data/attachment/album/201809/15/223918yw8s808787d6707q.jpg.thumb.jpg
related: []
reviewer: wxy
selector: ''
summary: 在 FreeBSD 上，我该如何设置 PF 防火墙，来保护只有一个公共 IP 地址和端口的 web 服务器呢？
tags:
- 防火墙
- BSD
thumb: false
title: 如何在 FreeBSD 上设置 PF 防火墙来保护 Web 服务器
titlepic: true
translator: ucasFL
updated: '2018-09-15 22:39:00'
---
![](/data/attachment/album/201809/15/223918yw8s808787d6707q.jpg)
我是从 Linux 迁移过来的 FreeBSD 新用户，Linux 中使用的是 netfilter 防火墙框架（LCTT 译注：netfilter 是由 Rusty Russell 提出的 Linux 2.4 内核防火墙框架）。那么在 FreeBSD 上，我该如何设置 PF 防火墙，来保护只有一个公共 IP 地址和端口的 web 服务器呢？
PF 是 包过滤器   packet filter 的简称。它是为 OpenBSD 开发的，但是已经被移植到了 FreeBSD 以及其它操作系统上。PF 是一个包状态过滤引擎。在这篇教程中，我将向你展示如何在 FreeBSD 10.x 以及 11.x 中设置 PF 防火墙，从而来保护 web 服务器。
### 第一步：开启 PF 防火墙
你需要把下面这几行内容添加到文件 `/etc/rc.conf` 文件中：
```
# echo 'pf_enable="YES"' >> /etc/rc.conf
# echo 'pf_rules="/usr/local/etc/pf.conf"' >> /etc/rc.conf
# echo 'pflog_enable="YES"' >> /etc/rc.conf
# echo 'pflog_logfile="/var/log/pflog"' >> /etc/rc.conf
```
在这里：
1. `pf_enable="YES"` - 开启 PF 服务
2. `pf_rules="/usr/local/etc/pf.conf"` - 从文件 `/usr/local/etc/pf.conf` 中读取 PF 规则
3. `pflog_enable="YES"` - 为 PF 服务打开日志支持
4. `pflog_logfile="/var/log/pflog"` - 存储日志的文件，即日志存于文件 `/var/log/pflog` 中
### 第二步：在 `/usr/local/etc/pf.conf` 文件中创建防火墙规则
输入下面这个命令打开文件（超级用户模式下）：
```
# vi /usr/local/etc/pf.conf
```
在文件中添加下面这些 PF 规则集：
```
# vim: set ft=pf
# /usr/local/etc/pf.conf
## 设置公共端口 ##
ext_if="vtnet0"
## 设置服务器公共 IP 地址 ##
ext_if_ip="172.xxx.yyy.zzz"
## 设置并删除下面这些公共端口上的 IP 范围 ##
martians = "{ 127.0.0.0/8, 192.168.0.0/16, 172.16.0.0/12, \
          10.0.0.0/8, 169.254.0.0/16, 192.0.2.0/24, \
          0.0.0.0/8, 240.0.0.0/4 }"
## 设置 http(80)/https (443) 端口 ##
webports = "{http, https}"
## 启用下面这些服务 ##
int_tcp_services = "{domain, ntp, smtp, www, https, ftp, ssh}"
int_udp_services = "{domain, ntp}"
## 跳过回环端口 - 跳过端口上的所有 PF 处理 ##
set skip on lo
## 设置 PF 应该统计的端口信息，如发送/接收字节数，通过/禁止的包的数目 ##
set loginterface $ext_if
## 设置默认策略 ##
block return in log all
block out all
# 基于 IP 分片的错误处理来防御攻击 
scrub in all
# 删除所有不可达路由地址
block drop in quick on $ext_if from $martians to any
block drop out quick on $ext_if from any to $martians
## 禁止欺骗包
antispoof quick for $ext_if
# 打开 SSH 端口，SSH 服务仅从 VPN IP 139.xx.yy.zz 监听 22 号端口
# 出于安全原因，我不允许/接收 SSH 流量
pass in quick on $ext_if inet proto tcp from 139.xxx.yyy.zzz to $ext_if_ip port = ssh flags S/SA keep state label "USER_RULE: Allow SSH from 139.xxx.yyy.zzz"
## 使用下面这些规则来为所有来自任何 IP 地址的用户开启 SSH 服务 #
## pass in inet proto tcp to $ext_if port ssh
### [ OR ] ###
## pass in inet proto tcp to $ext_if port 22 
# Allow Ping-Pong stuff. Be a good sysadmin 
pass inet proto icmp icmp-type echoreq
# All access to our Nginx/Apache/Lighttpd Webserver ports 
pass proto tcp from any to $ext_if port $webports
# 允许重要的发送流量
pass out quick on $ext_if proto tcp to any port $int_tcp_services
pass out quick on $ext_if proto udp to any port $int_udp_services
# 在下面添加自定义规则
```
保存并关闭文件。欢迎来参考我的[规则集](https://github.com/nixcraft/pf.conf/blob/master/pf.conf)。如果要检查语法错误，可以运行：
```
# service pf check
```
或
```
/etc/rc.d/pf check
```
或
```
# pfctl -n -f /usr/local/etc/pf.conf
```
### 第三步：开始运行 PF 防火墙
命令如下。请小心，如果是基于 SSH 的会话，你可能会和服务器断开连接。
#### 开启 PF 防火墙：
```
# service pf start
```
#### 停用 PF 防火墙：
```
# service pf stop
```
#### 检查语法错误：
```
# service pf check
```
#### 重启服务：
```
# service pf restart
```
#### 查看 PF 状态：
```
# service pf status
```
示例输出：
```
Status: Enabled for 0 days 00:02:18           Debug: Urgent
Interface Stats for vtnet0            IPv4             IPv6
  Bytes In                           19463                0
  Bytes Out                          18541                0
  Packets In
    Passed                             244                0
    Blocked                              3                0
  Packets Out
    Passed                             136                0
    Blocked                             12                0
State Table                          Total             Rate
  current entries                        1               
  searches                             395            2.9/s
  inserts                                4            0.0/s
  removals                               3            0.0/s
Counters
  match                                 19            0.1/s
  bad-offset                             0            0.0/s
  fragment                               0            0.0/s
  short                                  0            0.0/s
  normalize                              0            0.0/s
  memory                                 0            0.0/s
  bad-timestamp                          0            0.0/s
  congestion                             0            0.0/s
  ip-option                              0            0.0/s