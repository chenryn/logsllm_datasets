# KCon议题解读 | 智能家居安全——身份劫持
##### 译文声明
本文是翻译文章，文章原作者 EnsecTeam，文章来源：先知论坛
原文地址：
译文仅供参考，具体内容表达以及含义原文为准。
> 欢迎关注我们的微信公众号：[EnsecTeam](http://t.cn/RFUzQuQ "EnsecTeam")
>
> 作者：挽秋
## 一、摘要
本文以如何劫持(窃取)智能家居时代设备的身份“安全凭证”为出发点，调研并分析了目前国内市场的主流产品和设备交互协议，及其所依赖身份凭证，通过介绍、分析和发现设备交互控制协议安全性，最终通过身份劫持，实现相关设备和产品的任意远程控制。
## 二、智能家居身份和劫持危害
先通过一张简图来了解一下应用、智能设备和云端三者交互时携带的身份标识，如图所示：  
[](https://xzfile.aliyuncs.com/media/upload/picture/20180829202219-2c9e71b6-ab86-1.png)  
从上图了解到，智能家居身份标识通常是以下几种情况：
  * 账号cookie相关，如身份Token；
  * 用户id：userid
  * 设备id：deviceid
  * 认证或加密的key
一旦用户或设备的身份被劫持，那么至少存在如下几方面危害：
  * 个人信息，聊天内容等隐私敏感信息泄露
  * 智能设备被任意控制
  * 财产损失
  * 随时被监控
以智能音箱和智能插座等设备为例，至少有两个环节设计“身份”相关：
  * 账号同步
  * 设备交互操作
下面将分别介绍如何在这两个环节进行身份劫持。
## 三、账号同步
账号同步是指，在智能设备在初次激活使用(或更改绑定用户时)，用户将自己的身份信息同步给设备，并绑定设备。
一个简化的账号同步流程，如图所示：
[](https://xzfile.aliyuncs.com/media/upload/picture/20180829202219-2cb31e86-ab86-1.png)
账号同步通常会存在如下两类问题：
  * 如何设备是否合法：验证设备id还是设备key？id和key都很容易泄露伪造。
  * 账号Token如何安全传输：设备此时为入网，通过蓝牙、AP，还是其他何种方式传输账号信息。
账号同步时身份劫持,以厂商A音箱的配网和身份账号同步为例，其账号同步分为两种方式：
  1. 直接通过UDP广播255.255.255.255:50000,发送userid、token和wifi的ssid和wifi密码。
  2. 将userid、token、ssid和wifi密码等转化成语音播放，音箱进行语音信息识别即可。  
关于两种模式的选择：由本地sharedPreferences文件(tg_app_env.xml)中的app_connect_mode属性值决定，其账号同步代码如图所示：  
[](https://xzfile.aliyuncs.com/media/upload/picture/20180829202219-2cc6a83e-ab86-1.png)
厂商A的音箱将身份信息，通过固定“协议”的格式，在UDP255.255.255.255:50000端口进行身份信息发送，攻击者可以监听UDP50000端口，从而获取用户的userid和token，窃取身份凭据；语音发送也是按照同一套固定的“协议”格式发送。协议格式通过破解后如图所示：  
[](https://xzfile.aliyuncs.com/media/upload/picture/20180829202220-2cf40a86-ab86-1.png)
## 四、设备交互
设备交互是指应用、设备和云端的三者交互访问；交互操作大体分为两种方式：
  1. 只支持广域网：厂商A为代表；
  2. 支持广域网和局域网：厂商B和C为代表。  
广域网交互中应用与设备交互、设备与设备的交互方式如图：  
[](https://xzfile.aliyuncs.com/media/upload/picture/20180829202220-2d09f3a0-ab86-1.png)
[](https://xzfile.aliyuncs.com/media/upload/picture/20180829202220-2d234670-ab86-1.png)
厂商A的智能家居接入方式：以开灯为例
### 第一步：厂商A的音箱–>音箱server
url：[https://***.com/***](https://%2A%2A%2A.com/***)
Payload: { Uderid, Deviceid, Accesstoken, 打开灯的语音}
### 第二步：厂商A的音箱sever–>第三方server
用户需要在第三方产品server注册并通过Oauth授权给厂商A的Server，消息格式如下：
    ｛
     "header":{
       “namespace”:”***Genie.Iot.Device.Control",
          "name":"TurnOn",
          "messageId":"1bd5d003-31b9-476f-ad03-71d471922820",
          "payLoadVersion":1
       },
       "payload":{
           "accessToken":"access token",
           "deviceId":"34234",
           "deviceType":"XXX",
           "attribute":"powerstate",
           "value":"on",
           "extensions":{                                         
              "extension1":"",
              "extension2":""
          }
    }
    ｝
### 第三步：第三方server–>设备
Payload：{command: turn-on, currentValue:0 }
厂商A音箱的身份劫持
厂商A的音箱每次交互时，都会携带: token、userid、deviceid、action来进行，并且server会依据userid来进行身份判断。
  * 有了userid就可以身份劫持——远程设备任意操作；
  * userId是顺序的，可遍历的9位数字：比如一个userid是50123，另一个userid则是50397这几位数字;
  * userid还有其他多种方式获得：配网时窃取、APP端上获取；
厂商A音箱被劫持后，可以用户查看聊天记录，自定义问答，设置闹钟、话费充值、智能家居控制等等，此外音箱
“被分享”之后，宿主不能主动取消分享，只能等“攻击者”取消分享，身份劫持危害如图所示，中间的攻击者可以任意查看用户的聊天记录：  
[](https://xzfile.aliyuncs.com/media/upload/picture/20180829202221-2d657536-ab86-1.png)
### 如何发现这类身份劫持？
应用或设备通过携带4元组信息：userid、deviceid、token和action，向云端进行请求时，如下图所示，如果云端对4元组信息校验出现不一致的情况下，就会导致身份劫持：
  * 把userid、deviceid、token三者信息中的一种直接当成用户身份，而不是进行严格的身份一致性判断：判断userid和token是否一致，用户身份和设备列表是否是绑定关系。
  * 用户身份和action判断，存在逻辑漏洞，导致攻击者可以进行操作提权，比如子设备提权可以操作“属主”身份的一些权限，OTA更新等等。  