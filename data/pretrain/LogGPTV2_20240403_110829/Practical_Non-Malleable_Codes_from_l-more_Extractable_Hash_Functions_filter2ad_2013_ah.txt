˜v = g(cid:104)r,(cid:80)(cid:96)
valid hash ˜v. The proof of Theorem 5.4 easily extends to the “(cid:96)-more” setting by proving that
aﬀ, and we achieve extractability using
the simulator of the underlying, rss-nmc for multiple codewords. Thus, we are able to show
the following theorem.
i=1 fi(ci)(cid:105)), where (f1, . . . , f(cid:96)) ∈ ¯F (cid:96)
i=1 fi(ci)(cid:105), ga(cid:104)r,(cid:80)(cid:96)
Theorem 6.3. Under the DLog assumption and t-KEA, Construction 5.2, instantiated with
the coding scheme of Construction 5.8, is an (cid:96)-more extractable hash function family.
The proof is essentially the same as that of Theorem 5.4, as we discussed above.
7
Instantiating authenticated encryption
In the following we instantiate one-time leakage-resilient, authenticated, semantically secure
symmetric encryption (Deﬁnition 2.9), against λ bits of leakage. The idea is to combine a
leakage-resilient pseudorandom generator [58] with a message authentication code that outputs
k bits.
22
Construction 7.1 (Authenticated encryption). Let PRG be a pseudo-random generator, i.e.,
PRG : {0, 1}2λ → {0, 1}|s|+k, and let (Gen, Mac, Vrfy) be a message authentication code that
outputs tags of length k (cf. [49]). We deﬁne a symmetric encryption scheme (KGen, E, D), as
follows:
• KGen(1k): sample sk $← {0, 1}2λ.
• Esk(·): On input message s, compute (r0, r1) = PRG(sk), where |r0| = |s| and |r1| = k,
e = r0 + s, t = Macr1(e), and outputs (e, t).
• Dsk(·): On input (e, t), compute (r0, r1) = PRG(sk), and if Vrfyr1(e, t) = 1, output s =
r0 − e, otherwise output ⊥.
The PRG of [58] considers |sk| = 2λ/α, and sustains αλ bits of leakage (cf. [62]), where
α ∈ [0, 1] depends on how strong the underlying assumption is. In the above construction we
use the strongest assumption, i.e., α = 1, which yields |sk| = 2λ, assuming weak pseudorandom
functions against exponential adversaries. The ciphertext length is |s| + k, and by setting
λ = 2k + log2 k, which is adequate for our needs, we receive |sk| + |e| + |t| = 5k + 2 log2 k + |s|.
In the Appendix (cf. Section A.3) we provide an instantiation that uses regular PRG. By
plugging the above instantiation to our split-state non-malleable code, the total codeword length
is |s| + 9 · k + 2 · log2(k), since the hash and the randomness for computing it, are of size 2k,
each.
References
[1] Masayuki Abe and Serge Fehr. Perfect nizk with adaptive soundness.
In TCC, pages
118–136, 2007.
[2] Divesh Aggarwal, Shashank Agrawal, Divya Gupta, Hemanta K. Maji, Omkant Pandey, and
Manoj Prabhakaran. Optimal computational split-state non-malleable codes. Cryptology
ePrint Archive, Report 2015/1063, 2015.
[3] Divesh Aggarwal, Yevgeniy Dodis, Tomasz Kazana, and Maciej Obremski. Non-malleable
reductions and applications. In STOC, pages 459–468, 2015.
[4] Divesh Aggarwal, Yevgeniy Dodis, and Shachar Lovett. Non-malleable codes from additive
combinatorics. In STOC, pages 774–783, 2014.
[5] Shashank Agrawal, Divya Gupta, Hemanta K. Maji, Omkant Pandey, and Manoj Prab-
hakaran. CRYPTO, chapter Explicit Non-malleable Codes Against Bit-Wise Tampering
and Permutations, pages 538–557. 2015.
[6] Marshall Ball, Dana Dachman-Soled, Mukul Kulkarni, and Tal Malkin. Advances in Cryp-
tology – EUROCRYPT 2016, chapter Non-malleable Codes for Bounded Depth, Bounded
Fan-In Circuits. 2016.
[7] Boaz Barak, Yevgeniy Dodis, Hugo Krawczyk, Olivier Pereira, Krzysztof Pietrzak, Fran¸cois-
Xavier Standaert, and Yu Yu. Leftover hash lemma, revisited. In CRYPTO, pages 1–20.
2011.
[8] Boaz Barak, Oded Goldreich, Rusell Impagliazzo, Steven Rudich, Amit Sahai, Salil Vadhan,
and Ke Yang. On the (im)possibility of obfuscating programs. In CRYPTO, pages 1–18.
2001.
[9] Mihir Bellare and Adriana Palacio. The knowledge-of-exponent assumptions and 3-round
zero-knowledge protocols. In CRYPTO, pages 273–289. 2004.
23
[10] Nir Bitansky, Ran Canetti, Alessandro Chiesa, Shaﬁ Goldwasser, Huijia Lin, Aviad Ru-
binstein, and Eran Tromer. The hunting of the snark. Cryptology ePrint Archive, Report
2014/580, 2014.
[11] Nir Bitansky, Ran Canetti, Alessandro Chiesa, and Eran Tromer. From extractable collision
resistance to succinct non-interactive arguments of knowledge, and back again. In ITCS,
pages 326–349, 2012.
[12] Nir Bitansky, Ran Canetti, Alessandro Chiesa, and Eran Tromer. Recursive composition
and bootstrapping for snarks and proof-carrying data. In STOC, pages 111–120, 2013.
[13] Nir Bitansky, Ran Canetti, Omer Paneth, and Alon Rosen. On the existence of extractable
one-way functions. In STOC, pages 505–514, 2014.
[14] Elette Boyle and Rafael Pass. Limits of extractability assumptions with distributional
auxiliary input. In ASIACRYPT, pages 236–261. 2015.
[15] Ran Canetti and RonnyRamzi Dakdouk. Extractable perfectly one-way functions.
In
Automata, Languages and Programming, pages 449–460. 2008.
[16] Ran Canetti and RonnyRamzi Dakdouk. Towards a theory of extractable functions. In
TCC, pages 595–613. 2009.
[17] J. Lawrence Carter and Mark N. Wegman. Universal classes of hash functions (extended
abstract). In STOC, pages 106–112, 1977.
[18] Nishanth Chandran, Vipul Goyal, Pratyay Mukherjee, Omkant Pandey, and Jalaj Upad-
hyay. Block-wise non-malleable codes. IACR Cryptology ePrint Archive, page 129, 2015.
[19] Nishanth Chandran, Bhavana Kanukurthi, and Srinivasan Raghuraman.
Information-
Theoretic Local Non-malleable Codes and Their Applications, pages 367–392. TCC 2016-A.
2016.
[20] E. Chattopadhyay and D. Zuckerman. Non-malleable codes against constant split-state
tampering. In FOCS, pages 306–315, 2014.
[21] Mahdi Cheraghchi and Venkatesan Guruswami. Capacity of non-malleable codes. In ITCS,
pages 155–168, 2014.
[22] Seung Geol Choi, Aggelos Kiayias, and Tal Malkin. Bitr: Built-in tamper resilience, 2011.
[23] Sandro Coretti, Ueli Maurer, Bj¨orn Tackmann, and Daniele Venturi. TCC, chapter From
Single-Bit to Multi-bit Public-Key Encryption via Non-malleable Codes, pages 532–560.
2015.
[24] Ronald Cramer, Yevgeniy Dodis, Serge Fehr, Carles Padr´o, and Daniel Wichs. Detection
of algebraic manipulation with applications to robust secret sharing and fuzzy extractors.
In EUROCRYPT, pages 471–488. 2008.
[25] Dana Dachman-Soled and Yael Tauman Kalai. Securing circuits against constant-rate
In Proceedings of the 32Nd Annual Cryptology Conference on Advances in
tampering.
Cryptology — CRYPTO 2012 - Volume 7417, pages 533–551, 2012.
[26] Dana Dachman-Soled and Yael Tauman Kalai. Securing circuits and protocols against
1/poly(k) tampering rate. In Yehuda Lindell, editor, Theory of Cryptography: 11th The-
ory of Cryptography Conference, TCC 2014, San Diego, CA, USA, February 24-26, 2014.
Proceedings. 2014.
[27] Dana Dachman-Soled, Mukul Kulkarni, and Aria Shahverdi. Tight upper and lower bounds
for leakage-resilient, locally decodable and updatable non-malleable codes. Cryptology
ePrint Archive, Report 2017/015, 2017. http://eprint.iacr.org/2017/015.
24
[28] Dana Dachman-Soled, Feng-Hao Liu, Elaine Shi, and Hong-Sheng Zhou. TCC 2015, chapter
Locally Decodable and Updatable Non-malleable Codes and Their Applications, pages 427–
450. 2015.
[29] Ramzi Ronny Dakdouk. Theory and application of extractable functions, 2009.
[30] Ivan Damg˚ard. Towards practical public key systems secure against chosen ciphertext
attacks. In CRYPTO, pages 445–456. 1992.
[31] Alfredo De Santis, Giovanni Di Crescenzo, Rafail Ostrovsky, Giuseppe Persiano, and Amit
Sahai. Robust non-interactive zero knowledge. In CRYPTO, pages 566–598. 2001.
[32] AlexanderW. Dent and StevenD. Galbraith. Hidden pairings and trapdoor ddh groups. In
Algorithmic Number Theory, pages 436–451. 2006.
[33] Yevgeniy Dodis, Leonid Reyzin, and Adam Smith. Fuzzy extractors: How to generate
strong keys from biometrics and other noisy data. In EUROCRYPT, pages 523–540. 2004.
[34] Stefan Dziembowski, Tomasz Kazana, and Maciej Obremski. Non-malleable codes from
two-source extractors. In CRYPTO, pages 239–257. 2013.
[35] Stefan Dziembowski, Krzysztof Pietrzak, and Daniel Wichs. D.: Non-malleable codes. In
ICS, 2010.
[36] Antonio Faonio and Jesper Buus Nielsen. Non-malleable codes with split-state refresh.
Cryptology ePrint Archive, Report 2016/1192, 2016. http://eprint.iacr.org/2016/
1192.
[37] Sebastian Faust, Pratyay Mukherjee, Jesper Buus Nielsen, and Daniele Venturi. TCC 2014,
chapter Continuous Non-malleable Codes, pages 465–488. 2014.
[38] Sebastian Faust, Pratyay Mukherjee, Jesper Buus Nielsen, and Daniele Venturi. PKC 2015,
chapter A Tamper and Leakage Resilient von Neumann Architecture, pages 579–603. 2015.
[39] Sebastian Faust, Pratyay Mukherjee, Daniele Venturi, and Daniel Wichs. EUROCRYPT,
chapter Eﬃcient Non-malleable Codes and Key-Derivation for Poly-size Tampering Circuits,
pages 111–128. 2014.
[40] Sebastian Faust, Krzysztof Pietrzak, and Daniele Venturi. Tamper-proof circuits: How
to trade leakage for tamper-resilience. In Automata, Languages and Programming: 38th
International Colloquium, ICALP 2011, Zurich, Switzerland, July 4-8, 2011, Proceedings,
Part I, pages 391–402, 2011.
[41] Rosario Gennaro, Craig Gentry, Bryan Parno, and Mariana Raykova. EUROCRYPT ’13,
chapter Quadratic Span Programs and Succinct NIZKs without PCPs, pages 626–645. 2013.
[42] Rosario Gennaro, Hugo Krawczyk, and Tal Rabin. Okamoto-tanaka revisited: Fully au-
thenticated diﬃe-hellman with minimal overhead. In ACNS, pages 309–328. 2010.
[43] Craig Gentry and Daniel Wichs. Separating succinct non-interactive arguments from all
falsiﬁable assumptions. Cryptology ePrint Archive, Report 2010/610, 2010.
[44] Jens Groth. Short pairing-based non-interactive zero-knowledge arguments.
In ASI-
ACRYPT, pages 321–340. 2010.
[45] Jens Groth and Amit Sahai. Eﬃcient non-interactive proof systems for bilinear groups. In
EUROCRYPT, pages 415–432, 2008.
[46] Satoshi Hada and Toshiaki Tanaka. On the existence of 3-round zero-knowledge protocols.
In CRYPTO ’98, pages 408–423. 1998.
25
[47] Johan H˚Astad, Russell Impagliazzo, Leonid A. Levin, and Michael Luby. A pseudorandom
generator from any one-way function. SIAM Journal on Computing, pages 1364–1396, 1999.
[48] Yuval Ishai, Manoj Prabhakaran, Amit Sahai, and David Wagner. Private circuits ii:
Keeping secrets in tamperable circuits. In Advances in Cryptology - EUROCRYPT 2006,
St. Petersburg, Russia, May 28 - June 1, 2006. Proceedings. Springer Berlin Heidelberg,
2006.
[49] Jonathan Katz and Yehuda Lindell. Introduction to Modern Cryptography. 2007.
[50] Aggelos Kiayias and Yiannis Tselekounis. Tamper resilient circuits: The adversary at the
gates. In Kazue Sako and Palash Sarkar, editors, Advances in Cryptology - ASIACRYPT
2013, Bengaluru, India, December 1-5, 2013, Proceedings, Part II. 2013.
[51] Feng-Hao Liu and Anna Lysyanskaya. Tamper and leakage resilience in the split-state
model. In CRYPTO, pages 517–532. 2012.
[52] Thilo Mie. Polylogarithmic two-round argument systems, 2008.
[53] Moni Naor. CRYPTO ’03, chapter On Cryptographic Assumptions and Challenges, pages
96–109. 2003.
[54] Moni Naor and Gil Segev. Public-key cryptosystems resilient to key leakage. SIAM Journal
on Computing, pages 772–814, 2012.
[55] Noam Nisan and David Zuckerman. Randomness is linear in space. Journal of Computer
and System Sciences, pages 43–52, 1993.
[56] E. Okamoto and K. Tanaka. Key distribution system based on identiﬁcation information.
Selected Areas in Communications, IEEE Journal on, pages 481–485, 1989.
[57] Bryan Parno, Jon Howell, Craig Gentry, and Mariana Raykova. Pinocchio: Nearly practical
veriﬁable computation. In Security and Privacy, pages 238–252, 2013.
[58] Krzysztof Pietrzak. Advances in Cryptology - EUROCRYPT 2009: 28th Annual Interna-
tional Conference on the Theory and Applications of Cryptographic Techniques, Cologne,
Germany, April 26-30, 2009. Proceedings, chapter A Leakage-Resilient Mode of Operation.
2009.
[59] Manoj Prabhakaran and Rui Xue. Statistically hiding sets. In CT-RSA, pages 100–116.
2009.
[60] Amit Sahai. Simulation-sound non-interactive zero knowledge. Technical report, IBM
RESEARCH REPORT RZ 3076, 2001.
[61] Aviad Rubinstein Shaﬁ Goldwasser, Huijia Lin. Delegation of computation without re-
jection problem from designated veriﬁer cs-proofs. Cryptology ePrint Archive, Report
2011/456, 2011.
[62] Fran¸cois-Xavier Standaert, Olivier Pereira, Yu Yu, Jean-Jacques Quisquater, Moti Yung,
and Elisabeth Oswald. chapter Leakage Resilient Cryptography in Practice, pages 99–134.
2010.
A Preliminaries and Deﬁnitions
A.1 Basic notions
First we provide formal deﬁnitions for collision resistant hash function families and the hardness
of the discrete logarithm problem (cf. [49]).
26
Deﬁnition A.1 (Collision resistant hash function family [49]). A ﬁxed length, collision resistant,
hash function family, is a pair of probabilistic algorithms Hk = (Gen, h) satisfying the following:
• Gen is a PPT algorithm which receives as input a security parameter 1k and outputs a key
z.
• h receives z, and x ∈ {0, 1}p1(k) and outputs hz(x) ∈ {0, 1}p2(k), p1(k), p2(k) = poly(k),
p2(k) < p1(k).
• For all PPT adversaries A, the collision-ﬁnding experiment HcollA,Hk , which is deﬁned
bellow, satisﬁes the following property:
for some negligible function negl(·).
Pr[HcollA,Hk (1k) = 1] = negl(k),
HcollA,Hk (k):
– A key z is generated by executing Gen(1k).