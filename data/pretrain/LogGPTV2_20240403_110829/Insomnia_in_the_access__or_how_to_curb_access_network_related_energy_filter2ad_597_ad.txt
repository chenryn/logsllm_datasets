### 5.2.4 A Look into QoS

An obvious question is whether powering off gateways and migrating to neighbors affects the Quality of Service (QoS) for users. While the definition of QoS is broad, we focus, as in [33], on whether the schemes increase the completion time of flows compared to a no-sleep scenario. Figure 9a plots the Cumulative Distribution Function (CDF) of the percentage variation in flow completion time relative to no-sleep. The following observations can be made:

- **SoI Scheme**: Only 8% of the flows experience an increased completion time, with the maximum increase being up to 7 times the original.
- **BH2 Schemes**: Perform much better, with only 2% of the flows being affected, and to a lesser extent.
- **Backup Gateway Impact**: Having a backup gateway slightly reduces the impact on completion time for BH2.

The few flows that see a large percentage-wise increase in their duration are short-lived (a few seconds) and coincide with the waking up of a sleeping gateway, resulting in an additional 60-second delay. At low utilizations, such as those observed in our traces, having a backup gateway does not significantly change the behavior. However, as utilization increases, the positive effect of the backup becomes more noticeable.

### 5.2.5 The Effect of Gateway Density

The results presented so far are based on a specific wireless overlapping topology. To assess the validity of these results for different gateway densities, we conducted simulations where the mean number of networks a user can connect to varies from 1 (only the home gateway) to 10. We used a binomial distribution to generate connectivity matrices with different mean numbers of gateways per user.

Figure 10 shows the mean number of online gateways during peak hours (from 11 AM to 7 PM) versus the mean number of gateways users can connect to. As expected, the mean number of online gateways decreases with increasing available gateway density. Even in a low-density deployment, the number of online gateways is substantially reduced. For example, when users have an average of two neighboring gateways, the number of online gateways is reduced to 19, which is 35% fewer than when users can only connect to their home network.

### 5.2.6 Fairness

In this section, we examine whether the energy savings are shared fairly among the different gateways. Figure 9b shows the CDF of the variation in online time for the gateways when using BH2 compared to SoI. We want to determine if the traffic aggregation performed by BH2 creates inequalities in the amount of online time experienced by each gateway compared to the simple SoI scheme (no change would be considered fair). The following observations were made:

- **BH2 Performance**: BH2 maintains a larger number of gateways always sleeping, with 25% of gateways experiencing a 100% decrease in online time.
- **Online Time Increase**: BH2 increases the online time of 14% of the gateways compared to SoI.
- **Backup Gateway Impact**: Without a backup, BH2 shows a more unfair situation, with several gateways completely eliminating their online time and a larger number increasing it. Using one backup gateway results in a more fair distribution of sleeping times without harming performance (Fig. 7).

### 5.3 Realistic Deployment

#### Testbed Description

We deployed a testbed spanning three floors of a multi-story building. The testbed consists of 10 commercial 3 Mbps ADSL subscriptions, their corresponding gateways, and 10 BH2 terminals. The gateways are distributed approximately every 850 sq. ft. to emulate an average residential apartment size (see Fig. 11) and are randomly set to independent radio-frequencies in the 2.4 GHz ISM band. Each BH2 terminal is in range of approximately 5.5 gateways and can communicate over the wireless channel at an average speed higher than 6 Mbps.

#### BH2 Implementation Details

We implemented the BH2 algorithm on Linux laptops equipped with single-radio Atheros-based wireless cards. The BH2 algorithm is implemented in the MadWiFi 0.9.4 driver [41] and the Click modular router 1.6.0 [42]. BH2 terminals communicate with gateways at different radio-frequencies using the TDMA techniques described in Sec. 3.2. During the time BH2 is connected to a gateway, it transmits and receives traffic according to the standard 802.11 DCF protocol. BH2 uses a TDMA period of 100 ms, of which 60% is devoted to the currently selected gateway, and the rest is distributed evenly among the other gateways in range to collect their utilization statistics. To be transparent to applications, BH2 implements a Reverse-NAT module that ensures packets leave the terminals with the correct source IP address while exposing a single dummy IP address to the upper layers [30].

#### Methodology

We used the traces described in Sec. 5.1 as our source of data. For each flow, we recorded the timestamp and the amount of bytes reported in the traces and replayed them: at the specified time, the terminal makes an HTTP request to download the specified amount of data. Since the testbed has just a few clients, each BH2 terminal replays the flows of all clients originally associated with one of the traced APs selected at random. When the BH2 algorithm selects a new gateway, the terminal starts routing new flows through it but does not modify existing downloads, which continue through the same gateway until finished.

The BH2 algorithm runs independently and in a totally distributed manner. Each BH2 terminal wirelessly monitors the load in the gateways and takes independent decisions based on low and high thresholds. Since our gateways do not have any SoI capabilities, they do not actually go to sleep. Instead, we emulate the state of the gateway using a script running on a central server that monitors the load and flags gateways as "sleeping" when the idle timeout expires. Each BH2 terminal checks the status of the gateway via an independent local area network. If a terminal decides to "wake-up" a gateway, it changes the status on the server to "waking-up." The server automatically updates the status to "active" after the appropriate wake-up time.

#### Results

We conducted numerous experiments to verify the correct operation of BH2, including browsing, YouTube video streaming, BitTorrent, and P2P live video streaming sessions. We did not experience performance problems (e.g., glitches, video rebuffering, or choppy audio) even after several gateway changes.

To validate BH2 performance, we made 10 independent experiments that replay the traces using 9 laptops, each with one of the 9 gateways of Fig. 11 as their "home" gateway. In each run, we randomly assigned one of the APs from the CRAWDAD traces to a gateway in our testbed. The corresponding laptop replays all the clients in the traces that were originally associated with the AP represented by that gateway. Our testbed allows a client to connect to a maximum of 3 gateways. Figure 12 shows the number of active gateways from 15:00 to 15:30 h for BH2 without a backup and SoI. We observe the following:

- **BH2 Performance**: On average, BH2 puts 5.46 out of 9 gateways to sleep (60%), while SoI only puts 3.72 (41%) to sleep.
- **Consistent Outperformance**: BH2 consistently outperforms SoI at all times, even for the small load of our traces and the 3-gateway limitation in our implementation.

These experiments show that in our realistic setup, BH2 yields energy savings that double those of SoI, consistent with the results reported earlier through simulation.

### 5.4 Summary

The results of this section demonstrate that there is an 80% margin for energy savings in access networks. Simple aggregation and switching techniques like BH2 + k-switch can save 66% on average, with 2/3 of the savings going to users and 1/3 to the ISP. Extrapolating to all DSL users worldwide, the savings collectively amount to about 33 TWh per year.

### 6. A Crosstalk Bonus

Apart from the energy gains, the aggregation effect of BH2 permits modems to lock at higher speeds due to lower crosstalk. This section presents a number of experiments with a real DSLAM and copper lines to demonstrate that the speedup can be as high as 25%.

#### 6.1 Crosstalk

Crosstalk refers to the electromagnetic coupling between lines in the same cable bundle. It increases with attenuation (cable length) and signal frequency and depends on the distance between lines inside the bundle, with adjacent lines experiencing the worst crosstalk (e.g., lines 1 and 2 in Fig. 13a). To deal with varying conditions of crosstalk, ADSL and VDSL adapt the frequency plan to the line length and crosstalk noise. There are two options while initializing the connection: (i) maximize the bit rate subject to the currently sensed line conditions and crosstalk while leaving a safe margin of at least 6 dB, or (ii) maximize the noise guard margin while having a fixed bit rate (usually set according to the subscribed plan). Once the connection is established, it is monitored and adjusted, with re-synchronization occurring if the noise margin falls to 0 dB.

#### 6.2 Experimental Setup and Methodology

Our testbed consists of an Alcatel 7302 ISAM DSLAM equipped with a 48-port, NVLT-C line card and 24 VDSL2 modems. Each modem is connected through a cable bundle of 25 twisted pairs (Fig. 13a) to a switchboard that allows us to vary the length of the twisted pair connecting the modem to the DSLAM, as illustrated in Fig. 13b.

We measure the actual bit rate as we vary the number of active lines using the following methodology. First, we define 5 random orders in which to activate the 24 lines. The sequences activate 4 lines at a time up to 12 lines and then 2 at a time up to 24 lines. At each step in a sequence, we activate certain lines and force each one to resynchronize, one at a time in random order.

We use two different line length setups and two different service profiles for a total of four sets of experiments. Specifically, we experiment with a fixed line length of 600 m for 21 Huawei HG520v modems and 3 Zyxel P-870HW modems.