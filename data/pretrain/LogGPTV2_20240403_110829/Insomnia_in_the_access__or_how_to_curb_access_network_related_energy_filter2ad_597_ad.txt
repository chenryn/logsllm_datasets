a
s
y
g
r
e
n
e
l
a
o
t
t
f
o
%
i
e
d
s
P
S
I
e
h
t
n
o
Optimal
SoI+k−switch
BH2 + k−switch
SoI
0
0
5
10
15
Time [h]
20
24
s
y
a
w
e
t
a
g
e
n
i
l
n
o
f
o
r
e
b
m
u
N
30
25
20
15
10
5
0
1
2
3
4
5
6
7
8
9
10
Mean number of available gateways
Figure 8: Contribution of the ISP part to the total en-
ergy savings.
Figure 10: The impact of gateway density on the number
of gateways that can sleep.
1
5.2.4 A look into QoS
f
d
c
1
0.98
0.96
0.94
0.92
0.9
BH2 w/o backup
BH2
SoI
0
100 200 300 400 500 600
Completion time variation [%]
0.75
f
d
c
0.5
0.25
0
−100
BH2
BH2 w/o backup
0
100
AP Online time variation [%]
−50
50
An obvious question is whether powering oﬀ gateways and
migrating to neighbors aﬀects the QoS of the users. While
the deﬁnition of QoS is ample, we focus as in [33] on whether
the schemes increase the completion time of ﬂows compared
to no-sleep. Fig. 9a plots the CDF of the percentage of
variation of ﬂow completion time with respect to no-sleep.
We can see the following:
• Even for SoI, only 8% of the ﬂows see their completion
time increased. Moreover, the increase can be as high as 7
times the original.
• BH2 schemes perform much better, with as few as 2% of
the ﬂows being aﬀected, and less heavily.
• Having a backup gateway slightly reduces the impact on
completion time for BH2 .
The few ﬂows that see a large percentage-wise increase in
their duration are short lived-ﬂows (few seconds) that hap-
pen to coincide with waking up of a sleeping gateway, and
thus get stretched by an additional 60 s. Finally, with low
utilizations such as the one observed in our traces, having a
backup gateway does not signiﬁcantly change the behavior.
We have observed, however, that as utilization increases, the
positive eﬀect of the backup is more noticeable.
5.2.5 The effect of gateway density
The results shown up to this point are all obtained using
the same wireless overlapping topology and might raise the
question of whether they are only valid for this gateway den-
sity. We assess the eﬀect of the network density over the user
aggregation capabilities of BH2 running simulations where
the mean number of networks that a user can connect to
varies from 1 (i.e., the user can only connect to the home
gateway) to 10. We use a binomial distribution to gener-
ate the connectivity matrices with diﬀerent mean number of
gateways per user.
Fig. 10 shows the mean number of online gateways during
the peak hours (from 11am to 7pm) versus the mean number
of gateways users can connect to. As one might expect, the
results show that the mean number of online gateways de-
creases with the increasing available gateway density. How-
ever, even in a low density deployment the number of online
gateways is substantially reduced. For example, when users
have just two neighboring gateways available on average,
the number of online gateways is reduced to 19 (35% fewer
powered-on gateways than when users can only connect to
their home network).
5.2.6 Fairness
In this section, we examine whether the energy savings
are shared in a fair manner among the diﬀerent gateways.
Fig. 9b shows the CDF of the variation in online time for
(a)
(b)
Figure 9: [left] Increase in ﬂow completion time vs. no-
sleep. [right] Increase in gateway online time vs. SoI.
lack of alternative paths combined with continuous traﬃc
discussed in Fig. 4 do not permit SoI to be eﬀective, despite
operating under an average load of less than 2%. They also
explain why SoI + k-switch can match the energy savings
of BH2 + k-switch during oﬀ-peak hours – most user termi-
nals are switched oﬀ so both of them use the same number
of active gateways. Last, these results reveal why the k-
switches do not make much diﬀerence when used with SoI
(SoI + k-switch) during peak hours – SoI just fails to power
oﬀ gateways therefore there is not much that the k-switches
can do to power oﬀ line cards (the p of Sec. 4 is close to 1).
Next, we show that the picture changes completely when
k-switches are combined with BH2 .
5.2.3 The effect of switching on the ISP side
Fig. 8 shows what percentages of the total savings of the
various schemes correspond to the ISP side (DSLAM). We
observe the following:
• Under optimal and BH2 + k-switch, ISP-side savings due
to switching are a substantial part of the overall savings,
40% and 30% (day average), respectively. This highlights
that reaping the full energy savings requires actions at both
the user and ISP sides.
• SoI saves very little for the ISP during peak hours as
it only powers oﬀ terminating modems but no line cards.
SoI+k-switch does only marginally better. The reason is
that the k-switch does not have enough inactive lines at
hand to be able to put entire cards to sleep.
Looking at the number of online cards, during oﬀ-peak
hours we can see that all schemes can cope with just a single
line card. During peak hours though, the average number
of online cards varies signiﬁcantly – optimal: 1, BH2 +full-
switch: 2, BH2 +k-switch: 2.88, SoI +full-switch: 3, SoI+k-
switch: 3.74, SoI : 3.99. Comparing BH2 and SoI with full-
switch and with 4-switch, we can verify also experimentally
that even very small switches track closely the performance
of full switching.
345s
P
A
e
n
i
l
n
o
f
o
r
e
b
m
u
N
8
6
4
2
0
SoI
BH2
2
4
6
8
10 12 14 16 18 20 22 24 26 28 30
Time [mins]
Figure 12: Number of online APs for a live experiment
in the testbed in Fig. 11.
ensures packets leave the terminals with the correct source
IP address, while exposing a single dummy IP address to
the upper layers [30].
Gateways: We use oﬀ-the-shelf Linksys DD-WRTv24, run-
ning unmodiﬁed ﬁrmware. All wireless routers and terminals
have the wireless multimedia extensions and the RTS/CTS
handshake disabled. Any non-standard 802.11 feature is also
disabled, and H/W queues are set up with 802.11 best eﬀort
parameters. Each wireless router is connected to a Zyxel
P-600 modem that provides the ADSL connectivity.
Methodology: We use the traces described in Sec. 5.1 as
our source of data. For each ﬂow, we record the timestamp
t and the amount of bytes b reported in the traces and we
replay it: at the speciﬁed time t the terminal makes a HTTP
request to download b bytes of the DVD image of a very pop-
ular Linux distribution from the local national repository.
Since the testbed has just a few clients, each BH2 terminal
replays the ﬂows of all clients that are originally associated
with one of traced APs selected at random. When the BH2
algorithms selects a new gateway, the terminal starts routing
the new ﬂows through it. However it does not modify the
existing downloads, i.e., they will continue through the same
gateway until ﬁnished.
The BH2 algorithm runs independently and in a totally
distributed manner. Each BH2 terminal wirelessly monitors
the load in the gateways as described in Sec. 3.2 and takes
independent decisions based on the low and high thresholds.
However, since our gateways do not have any SoI capabili-
ties, they do not actually go to sleep. Instead, we emulate
the state of the gateway as follows: a script running in a
central server monitors the load of the gateways and ﬂags
them as “sleeping” when the idle timeout expires. Each BH2
terminal checks the status of the gateway in the server via
an independent local area network. If a terminal decides to
“wake-up” a gateway, it changes the status on the server as
“waking-up”. The server automatically updates the status
to “active” after the appropriate wake-up time.
Results: We conducted numerous experiments to verify the
correct operation of BH2. Speciﬁcally, we used the BH2 lap-
tops in browsing, YouTube video streaming, BitTorrent and
even P2P live video streaming sessions. We did not experi-
ence performance problems (i.e., glitches, video rebuﬀering
or choppy audio) even after several gateway changes.
To validate BH2 performance, we made 10 independent
experiments that replay the traces using 9 laptops, each of
them having one of the 9 gateways of Fig. 11 as their “home”
gateway. In each run we randomly assign one of the APs of
the CRAWDAD traces to a gateway in our testbed. The cor-
responding laptop replays all the clients in the traces that
were originally associated with the AP represented by that
gateway. Our testbed allows a client to connect to a max-
Figure 11: Testbed deployment. Gateways and termi-
nals have been deployed over 3 ﬂoors, ﬁrst ﬂoor [left],
mezzanine [middle], and second ﬂoor [right]. Each circle
represents a gateway, while terminals are placed nearby
the gateways, one terminal per gateway. Obstacles, like
walls and desks are present between all gateway links.
the gateways when using BH2 compared to SoI. We want
to see whether the traﬃc aggregation performed by BH2
creates inequalities on the amount of online time a gateway
experiences compared to running the simple SoI scheme (no
change would be considered fair ). We observe the following:
• As expected, BH2 maintains a larger number of gateways
always sleeping, hence the 25% of gateways with 100% de-
crease in online time.
• BH2 increases the online time of 14% of the gateways com-
pared to SoI.
• BH2 without backup shows a more unfair situation, with
several gateways completely eliminating their online time,
and a larger number of them increasing it.
We see that using one backup gateway results in a more
fair distribution of the sleeping times, while not harming
performance (Fig. 7), therefore we opt for keeping it.
5.3 Realistic deployment
Testbed description: We deployed a testbed spanning
three ﬂoors of a multi-story building. The testbed consists of
10 commercial 3 Mbps ADSL subscriptions with their corre-
sponding gateways and 10 BH2 terminals, i.e., the “owners”
of each line. The gateways are distributed approximately
every 850 sq. ft. to emulate an average residential apart-
ment size (see Fig. 11) and are randomly set to independent
radio-frequencies in the 2.4 GHz ISM band. Similar to our
evaluation scenario, each BH2 terminal is in range of approx-
imately 5.5 gateways and can communicate over the wireless
channel at an average speed higher than 6 Mbps.
BH2 implementation details: We implemented the BH2
algorithm described in Sec. 3.1 on Linux laptops equipped
with a single-radio Atheros-based wireless card. The BH2 al-
gorithm is implemented in the MadWiFi 0.9.4 driver [41] and
the Click modular router 1.6.0 [42]. BH2 terminals commu-
nicate with gateways at diﬀerent radio-frequencies using the
TDMA techniques described in Sec. 3.2. During the time
BH2 is connected to a gateway, it transmits and receives
traﬃc according to the standard 802.11 DCF protocol. BH2
uses a TDMA period of 100 ms, of which 60% is devoted to
the gateway currently selected by BH2, and the rest is dis-
tributed evenly among the rest of the gateways in range to
collect their utilization statistics7. To be transparent to the
applications, BH2 implements a Reverse-NAT module that
7We veriﬁed that 60% of the wireless card’s time is enough
to collect all the bandwidth available at any gateway, since
wireless capacities are higher than ADSL backhaul speeds.
346imum of 3 gateways. Fig. 12 shows the number of active
gateways from 15:00 to 15:30 h for BH2 without a backup
and SoI. We observe the following:
• Of the 9 gateways, on average BH2 puts 5.46 to sleep
(60%), while SoI only puts to sleep 3.72 (41%).
• BH2 consistently outperforms SoI at all times, even for
the small load of our traces and 3-gateway limitation we
imposed in our implementation.
These experiments show that in our realistic experiments,
BH 2 yield energy savings that doubles those of SoI, consis-
tent with the results we reported earlier through simulation.
5.4 Summary
The results of this section have demonstrated that there is
an 80% margin for energy savings in access networks. Simple
aggregation and switching techniques like BH2 + k-switch
can save 66% on average, of which 2/3 go to users and 1/3
to the ISP. Extrapolating to all DSL users world-wide, the
savings collectively amount to about 33 TWh per year.
6. A CROSSTALK BONUS
Apart from the energy gains, the aggregation eﬀect of BH2
permits modems to lock at higher speeds due to lower cross-
talk. In this section, we present a number of experiments
with a real DSLAM and copper lines to demonstrate that
the speedup can be as high as 25%.
6.1 Crosstalk
Crosstalk [20] refers to the electromagnetic coupling be-
tween lines in the same cable bundle. Crosstalk increases
with attenuation (∼cable length) and signal frequency.
It
also depends on the distance between lines inside the bundle
and it is worst for adjacent lines (e.g., 1 and 2 in Fig. 13a).
To deal with varying conditions of crosstalk, ADSL and
VDSL adapt the frequency plan to the line length and cross-
talk noise. To do so, there are two options while initializ-
ing the connection: (i) maximize the bit rate subject to the
currently sensed line conditions and crosstalk while leaving a
safe margin of at least 6 dB, or (ii) maximize the noise guard
margin while having a bit rate ﬁxed (usually set according to
the subscribed plan). Once the connection is established it
is being monitored and adjusted whereas re-synchronization
occurs if the noise margin falls to 0 dB.
6.2 Experimental setup and methodology
Our testbed consists of an Alcatel 7302 ISAM DSLAM
equipped with a 48-port, NVLT-C line card and 24 VDSL2
modems8. Each modem is connected through a cable bundle
of 25 twisted pairs (Fig. 13a) to a switchboard that allows us
to vary the length of the twisted pair connecting the modem
to the DSLAM, as illustrated in Fig. 13b.
We measure the actual bit rate as we vary the number
of active lines using the following methodology. First, we
deﬁne 5 random orders in which to activate the 24 lines.
The sequences activate 4 lines at a time up to 12 lines, and
then 2 at a time up to 24 lines. At each step in a sequence,
we activate certain lines and force each one to resynchronize,
one at a time in random order.
We use two diﬀerent line length setups and two diﬀerent
service proﬁles for a total of four set of experiments. Specif-
ically, we experiment with a ﬁxed line length of 600 m for
821 modems are Huawei HG520v, other 3 are Zyxel P-
870HW.
13 14