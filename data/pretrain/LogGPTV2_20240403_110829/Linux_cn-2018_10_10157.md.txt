---
author: Sandra Henry-stocker
category: 观点
comments_data: []
count:
  commentnum: 0
  favtimes: 0
  likes: 0
  sharetimes: 0
  viewnum: 5639
date: '2018-10-26 09:08:00'
editorchoice: false
excerpt: 在 Linux 系统上安装 Rust 编程语言可能是你近年来所做的最有价值的事情之一。
fromurl: https://www.networkworld.com/article/3308162/linux/why-you-should-try-rust.html
id: 10157
islctt: true
largepic: /data/attachment/album/201810/26/090805l94nk97sz87e1yld.jpg
permalink: /article-10157-1.html
pic: /data/attachment/album/201810/26/090805l94nk97sz87e1yld.jpg.thumb.jpg
related: []
reviewer: wxy
selector: lujun9972
summary: 在 Linux 系统上安装 Rust 编程语言可能是你近年来所做的最有价值的事情之一。
tags:
- Rust
thumb: false
title: 为什么 Linux 用户应该试一试 Rust
titlepic: true
translator: way-ww
updated: '2018-10-26 09:08:00'
---
> 
> 在 Linux 系统上安装 Rust 编程语言可能是你近年来所做的最有价值的事情之一。
> 
> 
> 
![](/data/attachment/album/201810/26/090805l94nk97sz87e1yld.jpg)
Rust 是一种相当年轻和现代的编程语言，具有许多使其非常灵活而及其安全的功能。数据显示它正在变得非常受欢迎，连续三年（[2016](https://insights.stackoverflow.com/survey/2016#technology-most-loved-dreaded-and-wanted)、[2017](https://insights.stackoverflow.com/survey/2017#technology-most-loved-dreaded-and-wanted-languages) 和 [2018](https://insights.stackoverflow.com/survey/2018#technology-most-loved-dreaded-and-wanted-languages)）在 Stack Overflow 开发者调查中获得“最受喜爱的编程语言”的第一名。
Rust 也是开源语言的一种，它具有一系列特殊的功能，使得它可以适应许多不同的编程项目。 它最初源于 2006 年 Mozilla 员工的个人项目，几年后（2009 年）被 Mozilla 选为特别项目，然后在 2010 年宣布供公众使用。
Rust 程序运行速度极快，可防止段错误，并能保证线程安全。这些属性使该语言极大地吸引了专注于应用程序安全性的开发人员。Rust 也是一种非常易读的语言，可用于从简单程序到非常大而复杂的项目。
Rust 优点：
* 内存安全 —— Rust 不会受到悬空指针、缓冲区溢出或其他与内存相关的错误的影响。它提供内存安全，无回收垃圾。
* 通用 —— Rust 是适用于任何类型编程的语言
* 快速 —— Rust 在性能上与 C / C++ 相当，但具有更好的安全功能。
* 高效 —— Rust 是为了便于并发编程而构建的。
* 面向项目 —— Rust 具有内置的依赖关系和构建管理系统 Cargo。
* 得到很好的支持 —— Rust 有一个令人印象深刻的[支持社区](https://www.rust-lang.org/en-US/community.html)。
Rust 还强制执行 RAII（ 资源获取初始化   Resource Acquisition Is Initialization ）。这意味着当一个对象超出范围时，将调用其析构函数并释放其资源，从而提供防止资源泄漏的屏蔽。它提供了功能抽象和一个很棒的[类型系统](https://doc.rust-lang.org/reference/type-system.html)，并具有速度和数学健全性。
简而言之，Rust 是一种令人印象深刻的系统编程语言，具有其它大多数语言所缺乏的功能，使其成为 C、C++ 和 Objective-C 等多年来一直被使用的语言的有力竞争者。
### 安装 Rust
安装 Rust 是一个相当简单的过程。
```
$ curl https://sh.rustup.rs -sSf | sh
```
安装 Rust 后，使用 `rustc --version` 或 `which` 命令显示版本信息。
```
$ which rustc
rustc 1.27.2 (58cc626de 2018-07-18)
$ rustc --version
rustc 1.27.2 (58cc626de 2018-07-18)
```
### Rust 入门
Rust 即使是最简单的代码也与你之前使用过的语言输入的完全不同。
```
$ cat hello.rs
fn main() {
    // Print a greeting
    println!("Hello, world!");
}
```
在这些行中，我们正在设置一个函数（`main`），添加一个描述该函数的注释，并使用 `println` 语句来创建输出。您可以使用下面显示的命令编译然后运行程序。
```
$ rustc hello.rs
$ ./hello
Hello, world!
```
另外，你也可以创建一个“项目”（通常仅用于比这个更复杂的程序！）来保持代码的有序性。
```
$ mkdir ~/projects
$ cd ~/projects
$ mkdir hello_world
$ cd hello_world
```
请注意，即使是简单的程序，一旦编译，就会变成相当大的可执行文件。
```
$ ./hello
Hello, world!
$ ls -l hello*
-rwxrwxr-x 1 shs shs 5486784 Sep 23 19:02 hello     
作者：[Sandra Henry-Stocker](https://www.networkworld.com/author/Sandra-Henry_Stocker/) 选题：[lujun9972](https://github.com/lujun9972) 译者：[way-ww](https://github.com/way-ww) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出