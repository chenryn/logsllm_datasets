# range from 1 to 2^32 − 1. “Unique” means that each ID must be different    
# from every other ID in use by any other source or replica.    server-id=2                       -- 从服务器的编号为2第三步，在主从服务器上都保存配置文件，然后分别重启主从服务器上的MySQL 服务器。第四步，为了使从服务器可以访问主服务器，在主服务器上创建数据同步用户，并赋予所有权限。这样，从服务器就可以实时读取主服务器的数据了。    mysql> CREATE USER 'myreplica'@'%' IDENTIFIED BY 'mysql';    Query OK, 0 rows affected (0.02 sec)    mysql> GRANT ALL ON *.* TO 'myreplica'@'%';    Query OK, 0 rows affected (0.99 sec)第五步，在从服务器上启动数据同步，开始从主服务器中同步数据。    mysql>change master to master_host='192.168.1.100',master_port=3306,master_user='myreplica',master_password='mysql’,master_log_file='mysql-bin.000001',master_log_pos=535;    Query OK, 0 rows affected (0.02 sec)启动同步的时候，你需要注意的是，必须指明主服务器上二进制日志中的位置master_log_pos。也就是说，你准备从主服务器的二进制日志的哪个位置开始同步数据。你可以通过在主服务器上，用SQL 语句"SHOW BINLOG EVENTS IN 二进制日志名"获取这个值。下面的代码可以启动同步：    mysql>start slave;    Query OK, 0 rows affected (0.02 sec)如何制定数据备份策略？设置了主从服务器，也不是万无一失。我曾经就遇到过这样一件事：我们把主从服务器搭在了某大厂几台不同的云服务器上，自以为没问题了，没想到大厂也有失手的时候，居然整个地区全部宕机，导致我们的主从服务器同时无法使用，近千家商户无法开展业务，损失惨重。所以，无论系统的架构多么可靠，我们也不能大意。备份仍然是必不可少的步骤。我们可以在应用层面调用类似下面的命令进行备份：    H:\>mysqldump -u root -p --databases    inventory operation > H:\backup\Monday\mybackup.sql我在项目中设定的策略是，每天晚上 12:00 做一个自动备份，循环备份 7天，创建 7 个文件夹，从 Monday 到Sunday，每个文件夹中保存对应的备份文件，新的覆盖旧的。这个逻辑也很简单，你很容易理解，我就不多解释了，你不要忘了做这一步工作就可以了。总结今天这节课，我给你详细讲解了建库建表、创建索引、存储过程、触发器，以及容灾和备份策略。有几点你需要格外重视一下。索引是提升查询执行速度的关键，创建的原则是：所有的数据表都要创建索引；有可能作为筛选条件的字段，都要用来创建索引。另外，容灾和备份是数据库系统设计中必不可少的部分。因为在现实生活中，什么情况都可能发生，我们无法预见，但是可以尽量避免。在设计阶段的未雨绸缪，可以帮助我们减少很多损失。最后我要提醒你的是，MySQL的相关知识实践性非常强，决不能停留在纸面上。我在课中演示的的代码，都是在实际环境中运行过的，你课下一定要跟着实际操作一下。毕竟，学习知识最好的办法，就是在解决实际问题中学习。思考题在今天的课程中，我演示了搭建主从服务器的过程。其中，在第四步，我专门创建了一个用来同步数据的账号"myreplica"。我想请你思考一下，我为什么要这样做？直接用"root"账号不行吗？欢迎在留言区写下你的思考和答案，我们一起交流讨论。如果你觉得今天的内容对你有所帮助，也欢迎你把它分享给你的朋友或同事，我们下节课见。