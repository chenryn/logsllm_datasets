a different domain, usually as part of the parking program, we only
classify as “Parked” and not “Defensive Redirect”.
5.3.1 No DNS
Registrants purchase domain names from a registrar and pay a
yearly fee to keep them, yet a large fraction of domains in the
new gTLDs do not even resolve. Some of these registrants asso-
ciate name server information with their domains, but these servers
do not respond to DNS queries, or only respond with the DNS
REFUSED error code. For instance, adsense.xyz has an NS record
for ns1.google.com, but its name server returns REFUSED for all
queries (which recursive resolvers usually report as SERVFAIL to
the end user). Out of 3,638,209 domains in the new TLDs, we had
567,390 DNS failures with an associated NS record, or 15.6%.
Other registrants buy domains and then do not associate name
server information with them. Since the zone ﬁles only contain
associations between domain names and name servers, they contain
no entries for this set of domains. We do not have a list of these
domain names and do not have a clear mechanism to ﬁnd them.
While we cannot enumerate these domains, we can infer their
presence through the ICANN monthly reports. The monthly re-
ports provide a summary of domain activity and transactions for all
registered domains (i.e., domains with a yearly fee). We can use the
difference between the number of domains in the ICANN reports
and the number of domains in the zone ﬁle as an estimate for the
number of domains with no name server information.
Our analysis shows that out of 3,754,141 total domains in the
reports, 207,184 domains (5.5%) do not appear in their respective
zone ﬁles. Registrants pay for these domains like any other, but
they do not resolve.
Error Type
Result
Connection Error
110,144
HTTP 4xx
82,298
HTTP 5xx 138,471
31,814
Other
30.4%
22.7%
38.2%
8.8%
Total
362,727 100.0%
Table 4: Breakdown of HTTP errors encountered when visiting
Web pages.
5.3.2 HTTP Error
We next classify domains that resolve to an IP address, but return
no result or an HTTP error code when queried on port 80. We
suspect some of these error conditions are temporary. Others are
likely longer-term misconﬁgurations by owners who do not care
about the content hosted on the domains, making them likely brand
defenders. Alternatively, these domains might serve a legitimate
purpose that is motivated by content other than Web. Because we
use the status code from the ﬁnal landing page, even HTTP 3xx
status codes indicate errors, typically a redirect loop.
We received 362,727 responses to that we classiﬁed as HTTP
errors. Table 4 provides a breakdown. Notably, most domains in
this category exhibit connection issues such as timeouts or return
HTTP 5xx return codes, meant for internal server issues. The vari-
ety of errors is multifarious: overall we received responses with 43
unique HTTP status codes.2
5.3.3 Parked
Many domain registrants do not have a plan to monetize the con-
tent of their domain names. Most of them are speculating on the
name itself, intending to sell it later for a proﬁt. Some may have a
plan to develop the site later in its lifetime, but have not put up any
content yet. Still other owners initially created Web properties that
turned out to be unsuccessful, and later parked them while waiting
for expiration. Whatever the reason, domain parking is common in
all TLDs. We discovered 1,161,892 parked domains in our data set,
or 31.9% of all domains in the zone ﬁles.
Potential domain speculators have the choice of a large number
of parking services. Some parking services also act as domain reg-
istrars (e.g., GoDaddy and Sedo), while others focus solely on park-
ing. Registrants use their services by setting their name server (NS)
record to the parking service’s DNS servers, redirecting their Web
trafﬁc to the parking service, or setting a CNAME. Parking services
that also act as registrars may or may not use different name servers
for parked domains compared to normal registrations.
Parked domains come in two main varieties [3]. Most domain
parking monetization is through pay per click (PPC) advertising.
These parked pages look much like search result pages with links
pertaining to words in the domain name. Each link on this page
is an advertisement. Other parked domains use pay per redirect
(PPR). When the target domain’s owner purchases “direct naviga-
tion trafﬁc” from an ad network used by the parking program, the
parking service will redirect the user to a page run by an ad pur-
chaser. Decisions to serve PPC or PPR to any particular visitor
happen in real time based on characteristics provided by the traf-
ﬁc purchaser, including domain keywords or trafﬁc from limited
geographic regions.
2Six domains responded with the HTTP response code 418, an er-
ror code added as part of the Hyper Text Coffee Pot Control Proto-
col in a satirical RFC [13]. The return code means “I’m a teapot”.
Feature Domains Coverage Unique
Mechanism Domains Coverage Unique
Content Cluster 1,080,283
Parking Redirect
638,757
279,903
Parking NS
92.3% 277,754
55.0% 81,468
124
24.1%
CNAME
Browser
Frame
2,020
211,065
30,437
0.9%
729
89.3% 203,941
12.9% 24,571
Total 1,161,892
—
Total
236,380
—
Table 5: Our capture methods for parking and how many domains
each catches. We identify most parking domains with more than
one classiﬁer; column 2 shows how many domains each classiﬁer
identiﬁes, while the last column shows how many are unique to
that classiﬁer.
Table 6: The mechanisms domain owners use to redirect to a
different domain. Most domain owners use only browser-level
redirects, but frames are still very common. Very few content
domains use multiple redirect methods.
As a starting point, two previous studies also needed to classify
parked domains as part of their work. Alrwais et al. focus on how
parking programs operate, and use domains from known parking
name servers as their source [3]. Vissers et al. focus on classifying
parked domains, but use parking pages from known parking name
servers as their inputs [28]. However, our problem is slightly dif-
ferent since we want to identify random pages from the Internet
as parked or not. Some parking programs host both legitimate and
parked pages using the same name servers, including one of the
largest parking services, GoDaddy. We need a different approach
to identifying parking than either of these papers suggest.
We identify parked domains with three mechanisms. First, we
use our k-means content classiﬁer to identify PPC parking services.
Often there are many of these pages for each parking service, with
variations only in the displayed links; all layout and remote re-
sources remain constant for any given parking service. As such,
they tend to cluster well and are easy to identify with this method.
Second, we use the visit’s full redirect chain, acquired with the
methodology described in Section 5.3.6, to identify PPR parking.
These domains usually redirect through an ad network before land-
ing at their ﬁnal destination for accounting purposes. We manually
inspected redirect chains for visits to known parking name servers
to compile a set of URL features that indicate parking. For in-
stance, if any URL contains “zeroredirect1.com” or both “domain”
and “sale”, we classify the domain as parked.
Finally, we use known parking name servers, such as those for
sedoparking.com. We use this method only for servers we are
conﬁdent host solely parked domains. We start by taking the inter-
section of the different sets used by Alrwais et al. [3] and Vissers
et al. [28]; the intersection includes all but one of the name servers
from the latter set. For each name server in the set intersection, we
use our k-means classiﬁer to determine if domains using that name
server are parked or not. For those we did not identify as park-
ing (a very small set), we manually inspect a random selection of
screenshots and their redirect chains. If we believe them all to be
parking trafﬁc missed by our classiﬁer, then we assume all domains
using the name server are parked. With this additional veriﬁcation
step, we concluded with high conﬁdence that all 14 name servers
in our set are used strictly for domain parking. Finally, we added
one additional name server (parklogic.com) to our set, which we
found to be dedicated to parking services through our classiﬁcation
experiments.
Table 5 shows how many parked domains we identify with each
method. We identify most parking domains with more than one of
our three methods. In particular, we identify all but 124 of nearly
280,000 domains on our set of parking name servers with another
approach. This high detection accuracy provides validation of our
other parking classiﬁers, and further increases our conﬁdence that
we have identiﬁed the prevalent parking behaviors.
5.3.4 Unused
In our analysis, we ﬁnd many Web pages that ﬁt in none of the
above categories, but also do not provide meaningful content. Most
of these are placeholder pages served by a large registry with in-
structions for the owner on how to develop their domain. Others
are empty Web pages, or the default template provided by a soft-
ware package. Whatever the reason, these pages do not provide
meaningful content to end users and we refer to them as “Unused”.
Unused pages often appear in bulk, so we identify them using our
k-means classiﬁer. With this technique, we ﬁnd 504,928 content-
free domains in our data set, or 13.9% of domains in the new TLDs.
5.3.5 Free
Domains we identify as part of a promotion, such as those de-
scribed in Section 2.3, get their own content classiﬁcation. Most of
these domains fall into the “Unused” category through a strict cate-
gorization, but the registrant plays a different role for these (which
will be relevant when determining intent in Section 6).
Though not part of a promotion, the property TLD largely con-
tains domains owned by Uniregistry, its registry. The TLD showed
slow growth in all other time periods, but on February 1, 2015 it
grew from 2,472 to 38,464 domains in a single day. Uniregistry
owns all of these domains and hosts a standard sale page with the
text “Make this name yours.” We place these registry-owned con-
tent placeholders into the “Free” category as well.3 In total, we ﬁnd
432,323 free domains in the new TLD program (11.9%).
5.3.6 Defensive Redirects
Many domains in the new gTLDs have at least one redirect,
and most of these point to a different domain. The role of the
redirect depends on the type of content. Some parking programs
redirect from the initial domain to a standard parking page, using
the URL parameters to pass a domain identiﬁer for revenue shar-
ing purposes. Defensive registrations often redirect to the owner’s
other domain names, typically in an older TLD. We check for three
kinds of redirects: CNAMEs, browser-level redirects, and single
large frames. Table 6 shows how many domains redirect with each
mechanism.
A CNAME is a DNS record type that acts like a symbolic link
between two domains. Any DNS query that results in a CNAME
causes the resolver to perform the same query on the target. Some-
times the result is another CNAME, which our DNS crawler must
follow before ﬁnally resulting in an answer to the original query.
Most domains with a CNAME only have a single CNAME, but
chains of up to four are not uncommon in CDNs. For example, in
our February 3 data set, the domain tangyao.xyz has a CNAME
to scwcty.gotoip2.com. This domain has its own CNAME to
hkvhost660.800cdn.com.
3We do not classify them as “Parking” because they do not show
ads and they are owned by the registry.
Redirect To
Defensive
Same TLD
Different New TLD
Different Old TLD
com
Structural
Same Domain
To IP
Total
Number
236,380
7,135
5,843
98,923
124,479
75,073
74,379
694
311,453
Table 7: Which locations our visits were ultimately redirected
towards.
Browser-level redirects happen when DNS resolves to a host
running an HTTP server, but a query to that server returns a redi-
rect which our browser will follow automatically. For example, an
HTTP request to tucsonphotobooth.com returns an HTTP 302
redirect to bumblebeephotobooth.com, which modern browsers
obey without user interaction. A domain owner can do this in a
very large number of ways, such as with a 300–399 status code, an
HTTP header, an HTML meta tag, or using JavaScript to set win-
dow.location. We ﬁnd and store these redirects at crawl time, so we
are robust to these and less common methods.
In practice, we ﬁnd many pages that return valid HTML, do not
redirect, and present only a single large frame to the end user, such
that all visual content comes through the frame. Although it does
not use an explicit redirection mechanism, this technique provides
the same effect: a user visits one domain on their browser, and sees
content from another. Since these frames serve the same purpose as
a CNAME or an HTTP redirect, we consider these to be redirects
as well.
To determine if a page contains only a single large frame, we ﬁrst
check how many frames the page contains. We do this in JavaScript
in the browser, so we do not need to use textual analysis to ﬁnd
them. The remaining challenge is to differentiate between pages
with a single large frame, and pages with real content that have a
smaller frame, such as for page navigation or tracking purposes.
We differentiate between these classes using the DOM. First, we
remove non-visible components from the page, as well as anything
having to do with the frame itself: the head tag, frameset and
iframe tags, and long URLs. These modiﬁcations are safe because
we operate on the DOM, not the original HTML, so non-visible
components that transform visual components (such as JavaScript)
have already run. By examining the string length of the resulting
DOM, the pages we crawl fall cleanly into two classes. Altogether,
49% of the ﬁltered DOMs have a string length of less than 55 char-
acters, but show variable behavior based on the few remaining tags.
The remaining pages distribute mostly evenly with a few spikes
corresponding to common page templates. A visual examination
of the pages in these clusters shows that the short pages do show
only a single large frame, while most of the large pages have other
visual content.
The most important two pieces of the overall redirect chain are
the starting domain and the ﬁnal page that serves content. To deter-
mine the last, we check for a single large frame ﬁrst, then a browser-
level redirect, and ﬁnally a CNAME. A domain with all three be-
haviors serves its real content through the frame; the CNAME and
browser-level redirects only point to the next resource. We classify
redirects by the domain they point to: same-domain, same-TLD,
“com”, new-TLD, old-TLD, or IP.
Table 7 shows which of these six location types domains in the
new TLDs tend to point towards. Though each of these domains
has some form of redirect when fetching Web content, redirects to a
page under the same domain name are less interesting because they
reﬂect aspects of the structure of the Web page itself. Similarly, we
cannot make any strong claims about redirects to a hard-coded IP
address.
Instead, we only consider redirects to a different domain to fall
into our redirect category. We do include redirects to other domains
within the same TLD because in this case, the registrant is only us-
ing the destination domain for primary purposes. We ﬁnd 236,380
off-domain redirects in our data set, or 6.5% of all domains in the
new TLD zone ﬁles. 94.5% of defensive redirects point to domains
in the old TLDs, with over half of those to com. In short, defen-
sive redirects are only a small fraction of the overall registration
behavior in the new TLDs.
5.3.7 Content
We classify domains under “Content” when they do not ﬁt into
another of our content classiﬁcations. The other aspects of our cat-
egorization pull out common errors, interesting features like redi-
rects, and Web responses that appear frequently. Domains that do
not ﬁt into any of those categories resolve in the DNS, return HTTP
200 status codes, and provide vaguely unique responses to Web
queries. Only 372,569 domains (10.2%) fall into this category. By
comparing this category with the previous, we ﬁnd that 38.8% of
the 608,949 domains with real content redirect to a different do-
main to serve it.
6. REGISTRATION INTENT
In the previous section, we focused on understanding the types
of content that domains in the new gTLDs host. In this section we