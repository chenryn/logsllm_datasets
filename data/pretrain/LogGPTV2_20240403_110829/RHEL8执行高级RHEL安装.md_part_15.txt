    `glibc`{.literal} 软件包的 `bash`{.literal}
    软件包，安装的软件包会安装多个变体，被依赖的软件包会在 bash
    软件包需要的变体中安装。
[selinux=0]{.term}
:   默认情况下, `selinux=0`{.literal} 引导选项在安装程序的 permissive
    模式下运行，并在安装的系统中以 enforcing
    模式运行。`selinux=0`{.literal}
    引导选项禁止在安装程序和安装的系统中使用 SELinux。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    `inst.selinux=0`{.literal} 选项 `selinux=0`{.literal} 和选项不同。该
    `selinux=0`{.literal} 选项禁止在安装程序和安装的系统中使用
    SELinux。该 `inst.selinux=0`{.literal} 选项只禁用安装程序中的
    SELinux。默认情况下，SELinux 在安装程序中以 permissive
    模式运行，因此禁用 SELinux 不会起作用。
    :::
[inst.nonibftiscsiboot]{.term}
:   使用 `inst.nonibftiscsiboot`{.literal}
    引导选项将引导加载程序放在没有在 iSCSI 引导固件表（iBFT）中配置的
    iSCSI 设备中。
:::
:::
::: section
::: titlepage
# []{#kickstart-and-advanced-boot-options_installing-rhel-as-an-experienced-user.html#deprecated-boot-options_kickstart-and-advanced-boot-options}弃用的引导选项 {.title}
:::
本节包含已弃用的引导选项的信息。安装程序仍然可以接受这些选项，但它们已被弃用，并计划在以后的
Red Hat Enterprise Linux 版本中删除。
::: variablelist
[method]{.term}
:   该 `method`{.literal} 选项是一个 `inst.repo`{.literal} 的别名。
[dns]{.term}
:   使用 `nameserver`{.literal} 而不是使用
    `dns`{.literal}。请注意，名称服务器不接受用逗号分开的列表 ;
    使用多个名称服务器选项。
[netmask, gateway, hostname]{.term}
:   `netmask`{.literal}、`gateway`{.literal} 和 `hostname`{.literal}
    选择作为 `ip`{.literal} 选项的一部分提供。
[ip=bootif]{.term}
:   自动使用由 PXE 提供的 `BOOTIF`{.literal} 选项，因此无需使用
    `ip=bootif`{.literal}。
[ksdevice]{.term}
:   ::: table
    []{#kickstart-and-advanced-boot-options_installing-rhel-as-an-experienced-user.html#idm140037878731808}
    **表 16.9. ksdevice 引导选项的值**
    ::: table-contents
      Value                         信息
      ----------------------------- -------------------------------------------------------
      不存在                        不适用
      `ksdevice=link`{.literal}     忽略，这个选项与默认行为相同
      `ksdevice=bootif`{.literal}   如果 `BOOTIF=`{.literal} 存在会忽略，这个选项是默认的
      `ksdevice=ibft`{.literal}     使用 `ip=ibft`{.literal} 替换。查看 `ip`{.literal}
      `ksdevice=`{.literal}    替换为 `BOOTIF=${MAC/:/-}`{.literal}
      `ksdevice=`{.literal}    替换为 `bootdev`{.literal}
    :::
    :::
:::
:::
::: section
::: titlepage
# []{#kickstart-and-advanced-boot-options_installing-rhel-as-an-experienced-user.html#removed-boot-options_kickstart-and-advanced-boot-options}删除引导选项 {.title}
:::
这部分包含从 Red Hat Enterprise Linux 中删除的引导选项。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
`dracut`{.literal} 提供高级引导选项。有关 `dracut`{.literal} 详情请参考
`dracut.cmdline(7)`{.literal} man page。
:::
::: variablelist
[askmethod, asknetwork]{.term}
:   `initramfs`{.literal} 完全非交互式，因此删除了
    `asknetwork`{.literal} 选项 `askmethod`{.literal}
    和选项。反之，请使用 `inst.repo`{.literal} 或者指定适当的网络选项。
[blacklist, nofirewire]{.term}
:   该 `modprobe`{.literal} 选项处理阻止列出内核模块，使用
    `modprobe.blacklist=,`{.literal}。您可以使用
    `modprobe.blacklist=firewire_ohci`{.literal} 阻塞 firewire 模块。
[inst.headless=]{.term}
:   `headless=`{.literal}
    指定要安装的系统没有任何显示硬件，且安装程序不需要查找任何显示硬件。
[inst.decorated]{.term}
:   该 `inst.decorated`{.literal}
    选项用于在解码窗口中指定图形安装。默认情况下，这个窗口是不分离的，所以它没有标题栏，改变控制大小等等。这个选项已不再需要。
[repo=nfsiso]{.term}
:   使用 `inst.repo=nfs:`{.literal} 选项。
[serial]{.term}
:   使用 `console=ttyS0`{.literal} 选项。
[updates]{.term}
:   使用 `inst.updates`{.literal} 选项。
[essid, wepkey, wpakey]{.term}
:   Dracut 不支持无线网络。
[ethtool]{.term}
:   这个选项已不再需要。
[gdb]{.term}
:   这个选项已被删除，因为有很多可用来调试基于 dracut 的选项
    `initramfs`{.literal}。
[inst.mediacheck]{.term}
:   使用 `dracut option rd.live.check`{.literal} 选项。
[ks=floppy]{.term}
:   使用 `inst.ks=hd:`{.literal} 选项。
[显示]{.term}
:   对于 UI 的远程显示，使用 `inst.vnc`{.literal} 选项。
[utf8]{.term}
:   因为默认的 TERM 设置的行为如预期，所以不再需要这个选项。
[noipv6]{.term}
:   IPv6 是内置在内核中，不能被安装程序删除。您可以使用
    `ipv6.disable=1`{.literal} 禁用 ipv6。安装的系统将使用这个设置。
[upgradeany]{.term}
:   因为安装程序不再处理升级，所以不再需要这个选项。
:::
:::
:::
[]{#booting-a-beta-system-with-uefi-secure-boot_installing-rhel-as-an-experienced-user.html}
::: chapter
::: titlepage
# []{#booting-a-beta-system-with-uefi-secure-boot_installing-rhel-as-an-experienced-user.html#booting-a-beta-system-with-uefi-secure-boot_installing-rhel-as-an-experienced-user}第 17 章 使用 UEFI 安全引导引导试用系统 {.title}
:::
本章介绍了在启用了 UEFI 安全引导的系统中为引导 Red Hat Enterprise Linux
Beta 版本而要执行的步骤。
::: section
::: titlepage
# []{#booting-a-beta-system-with-uefi-secure-boot_installing-rhel-as-an-experienced-user.html#uefi-secure-boot_booting-a-beta-system-with-uefi-secure-boot}UEFI 安全引导和 RHEL Beta 版本 {.title}
:::
UEFI 安全引导要求操作系统内核使用可识别的私钥进行签名。UEFI
安全引导然后使用对应的公钥验证签名。
对于红帽企业 Linux 测试版，内核使用特定于红帽 Beta 的私钥进行签名。UEFI
安全引导尝试使用对应的公钥验证签名，但由于硬件无法识别 Beta 私钥，因此
Red Hat Enterprise Linux Beta 版本系统无法引导。因此，要在 Beta
版本中使用 UEFI 安全引导，请使用 Machine Owner Key(MOK)功能将红帽 Beta
公钥添加到您的系统中。
:::
::: section
::: titlepage
# []{#booting-a-beta-system-with-uefi-secure-boot_installing-rhel-as-an-experienced-user.html#adding-a-beta-public-key-for-uefi-secure-boot_booting-a-beta-system-with-uefi-secure-boot}为 UEFI 安全引导添加 Beta 公钥 {.title}
:::
本节介绍如何为 UEFI 安全引导添加 Red Hat Enterprise Linux Beta 公钥。
::: itemizedlist
**先决条件**
-   在系统中禁用 UEFI 安全引导。
-   已安装 Red Hat Enterprise Linux Beta
    版本，即使系统重启，安全引导也会被禁用。
-   您已登录到系统，[**Initial Setup**]{.strong} 窗口中的任务已完成。
:::
::: orderedlist
**流程**
1.  开始将红帽 Beta 公钥注册到系统机器所有者密钥(MOK)列表中：
    ``` literallayout
    # mokutil --import /usr/share/doc/kernel-keys/$(uname -r)/kernel-signing-ca.cer
    ```
    `$(uname -r)`{.literal} 被内核版本替代 -
    [**例如，4.18.0-80.el8.x86_64**]{.strong}。
2.  出现提示时输入密码。
3.  重新启动系统并按任意键继续启动。Shim UEFI
    密钥管理实用程序在系统启动期间启动。
4.  [**选择\"注册 MOK**]{.strong} \"。
5.  选择 [**Continue**]{.strong}。
6.  [**选择\"是**]{.strong} \"并输入密码。密钥导入到系统的固件中。
7.  [**选择\"重新启动**]{.strong} \"。
8.  在系统上启用安全引导。
:::
:::
::: section
::: titlepage
# []{#booting-a-beta-system-with-uefi-secure-boot_installing-rhel-as-an-experienced-user.html#removing-a-beta-public-key_booting-a-beta-system-with-uefi-secure-boot}删除 Beta 公钥 {.title}
:::
如果您计划删除红帽企业 Linux Beta 版本，并安装红帽企业 Linux
正式发行(GA)版本或不同的操作系统，请删除 Beta 公钥。
这个步骤描述了如何删除 Beta 公钥。
::: orderedlist
**流程**
1.  开始从系统的 Machine Owner Key(MOK)列表中删除 Red Hat Beta 公钥：
    ``` literallayout
    # mokutil --reset
    ```
2.  出现提示时输入密码。
3.  重新启动系统并按任意键继续启动。Shim UEFI
    密钥管理实用程序在系统启动期间启动。
4.  [**选择重置 MOK**]{.strong}。
5.  选择 [**Continue**]{.strong}。
6.  [**选择\"是\"，并输入在第**]{.strong} 2
    步中指定的密码。密钥已从系统的固件中删除。
7.  [**选择\"重新启动**]{.strong} \"。
:::
:::
:::
[]{#_kickstart_references.html}
::: part
::: titlepage
# []{#_kickstart_references.html#_kickstart_references}部分 V. Kickstart 参考 {.title}
:::
:::
[]{#kickstart-script-file-format-reference_installing-rhel-as-an-experienced-user.html}
::: appendix
::: titlepage
# []{#kickstart-script-file-format-reference_installing-rhel-as-an-experienced-user.html#kickstart-script-file-format-reference_installing-rhel-as-an-experienced-user}附录 A. kickstart 脚本文件格式参考 {.title}
:::
这个参考详细描述了 kickstart 文件格式。
::: section
::: titlepage
# []{#kickstart-script-file-format-reference_installing-rhel-as-an-experienced-user.html#kickstart-file-format_kickstart-script-file-format-reference}kickstart 文件格式 {.title}
:::
Kickstart
脚本是包含安装程序识别的关键字的纯文本文件，它们是安装指令。任何可将文件保存为
ASCII 文本的文本编辑，,比如 `Gedit`{.literal} 或 `vim`{.literal} （Linux
系统），或 `Notepad`{.literal}（Windows 系统），都可以用来创建和编辑
Kickstart 文件。Kickstart
配置的文件名无关紧要，但建议使用简单名称，因为您需要在其他配置文件或对话框中指定这个名称。
::: variablelist
[命令]{.term}
:   命令是作为安装指令的关键字。每个命令都必须位于一行。命令可以选择。指定命令和选项和在