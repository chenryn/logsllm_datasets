When using `np.full_like` with an integer array and a `np.nan` value, the result is unexpected. For example:

```python
>>> np.full_like(np.array([1, 0]), np.nan)
array([-9223372036854775808, -9223372036854775808])
```

Typically, converting `np.nan` to an integer should raise an error, as shown below:

```python
>>> np.int(np.nan)
ValueError: cannot convert float NaN to integer
```

Given this, it seems that `np.full_like` should also raise an error when attempting to fill an integer array with `np.nan`. I am unsure how common this behavior is, but it appears inconsistent with the expected handling of `np.nan` in integer contexts.