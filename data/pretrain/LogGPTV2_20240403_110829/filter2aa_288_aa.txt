# IPv666: Address of the Beast
## Authors
- Chris Grayson (@_lavalamp)
- Marc Newlin (@marcnewlin)

## Introduction
### Overview
In this presentation, we will explore the challenges and opportunities presented by IPv6, particularly in the context of security and scanning. We will discuss our research, methods, and findings, and provide a roadmap for future work.

### Outline
1. Background
2. The Scanning Problem
3. Honeypotting for PSLAAC
4. Modeling for Non-PSLAAC
5. Being Less Dumb
6. To the Cloud
7. Results
8. Conclusion

## A Bit o' Background
### IPv6 - So Hot Right Now
IPv6 is becoming increasingly prevalent, and it presents unique challenges and opportunities for security researchers. At DEFCON 25, we discovered 26 CVEs in consumer premise equipment (CPE), such as Comcast gateways and set-top boxes, with IPv6 playing a significant role.

### Send-to-TV / Remote Web UI
- **Gateway Web UI**: Accepts remote requests from ISP infrastructure.
- **IPv6 Address**: Provides remote web UI access via set-top box.

### Concerns with IPv6
- **Automatic Configuration**: Works out of the box without manual configuration.
- **Device Preference**: All devices and networking equipment prefer IPv6.
- **No Private Address Space**: For the most part, there are no private addresses.
- **Firewall Rules**: IPv4 firewall rules do not apply.
- **ICMPv6**: A critical protocol that can be used to relay packets to many hosts.

## The Problem of Scale
### IPv4 vs. IPv6
- **IPv4**:
  - 32-bit addresses
  - 2^32 possible addresses
  - 4,294,967,296 addresses
- **IPv6**:
  - 128-bit addresses
  - 2^128 possible addresses
  - 340,282,366,920,938,463,463,374,607,431,768,211,456 addresses

### PSLAAC Makes Things Harder
- **Address Structure**:
  - Host and network bits
  - Network: site prefix and subnet ID
  - Host: interface ID
- **PSLAAC**:
  - Interface ID is pseudorandom
  - Even "small" networks (/96) have 32 bits of randomness

## Breaking Down the Problem
### Two Independent Problems
- **Identifying PSLAAC Hosts**
- **Identifying Non-PSLAAC Hosts**

## Honeypotting for PSLAAC
### Why Honeypotting?
- **Search Space**: Too massive to scan directly
- **Approach**: Have them find us
- **Methods**:
  - DNS Server
  - SMTP Server
  - Web Server
  - Popads!

### Honey DNS Server
- **Setup**: Bind server
- **Glue Records**: Point to IPv6
- **Zones Delegated**: First to IPv4, then IPv6
- **Promotion**: Post links on social media and use Popads

### Honey Web Server
- **URL**: http://ipv6.exposed/
- **Features**:
  - Available over IPv6
  - Forced IPv6 usage
  - WebRTC for IP address enumeration
- **Promotion**: Social media and Popads

### Honey SMTP Server
- **Setup**: SMTP server
- **DNS Honeypot**: Points to the SMTP server
- **Sign-ups**: Use MailBait for spam sign-ups

### Sweet(?) Honey Results
- **Unique IP Addresses**: 92,609 over ~10 months
- **Cost**: $500+
- **Outcome**: Suboptimal results, lost focus

## Modeling for Non-PSLAAC
### Structure in IPv6 Addresses
- **Example Addresses**:
  - 2001:1284:f01c:2c0a:8238:bcff:fed3:4e03
  - 2001:1498:1::32:48
  - 2001:16b8:101:3175:a96:d7ff:fe7e:c4aa
  - ...

### Machine Learning Attempts
- **Model**: Compact representation of data set
- **Projection**: Creates new data set with error percentage
- **Errors**: Represent structure in IPv6 addresses
- **Outcome**: Overfitting, projected addresses same as input

### The Entropy/IP Paper
- **Source**: Akamai
- **Key Findings**:
  - Not much entropy in non-PSLAAC IPs
  - Simpler modeling might work better

## Dumbing Things Down
### Simplified Modeling
- **Breakdown**: 32 nybbles
- **Count Occurrences**: By position and nybble

### Prediction
- **Probability Calculation**: For each nybble at each position
- **Example**:
  - Position 0: p(0x2) => 0.01
  - Position 1: p(0xa) => 0.15

### Initial Success
- **Generated Addresses**: 10 million
- **ICMP Responses**: Over 50,000
- **Issue**: Aliased (jerk) networks

## Identifying Aliased Networks
### Initial Approach
- **Wrap in /96 Network**: Generate eight addresses
- **ICMP Scan**: If 50% of addresses respond, net is aliased

### Network Size
- **Bit Mapping**: Map to bits, flip right half of unknown bits
- **ICMP Scan**: Rinse and repeat to identify aliased and unknown bits

## Getting Less Dumber
### 6gen Algorithm
- **Published**: 2017, UC Berkeley
- **Improvements**: Enhances the Entropy/IP paper with a new clustering algorithm

### IPv6 Address Clusters
- **Definition**: IP address and set of wildcard nybble indices
- **Utility Metrics**:
  - **Capacity**: Number of possible addresses in the cluster
  - **Density**: Number of cluster IPs in the input data set

### Example
- **Cluster**: 0x2, ???, 0x0, 0x0, 0x0, 0x4, 0xf, 0x0, 0x0, 0x0, 0x8, 0x0, 0xf, 0x6, ...
- **Capacity**: 16
- **Captured**: 2
- **Density**: 12.5%

### Algorithm
- **For Each IPv6 Address**:
  - Create a cluster of size 1
  - Evaluate density of cluster with adding address
  - Pick the best upgrade candidate
- **Sort Upgrades by Density**
- **While Scanning Budget Not Exhausted**:
  - Pick the best density upgrade
  - Evaluate best upgrade candidates from it
  - Add upgraded cluster to cluster set

## Conclusion
- **Challenges**: Large search space, PSLAAC, and aliased networks
- **Approaches**: Honeypotting, simplified modeling, and clustering
- **Future Work**: Continue refining methods and exploring new techniques

Thank you for your attention!