a fraction α. We choose α = 0.25, 0.5, 0.75, 1, i.e. n = α2l.
We run 25 experiments for each value of n and each data set
– uniform and Enron.
Figure 7 shows the performance results of Popa et al.’s
scheme and ours for an expansion factor λ = 3. In the LAN
setting, our scheme has a performance improvement of 63%
on average and 77% in the best case for the Enron data
set. The performance improvement is higher under uniform
distribution with 72% on average and 81% in the best case.
There is an even higher performance improvement in the
WAN setting (λ = 3). As we show in Figure 8, we have an
average improvement of 83% and 95% in the best case for
the Enron data set. For the uniform data set we have 83%
improvement on average and 88% in the best case.
Furthermore, in order to evaluate the performance impact
of updates in our algorithm, we compare the performance of
database inserts with expansion factors of λ = 2 and λ = 3.
Figures 9 and 10 depict the database insert performance
3RMI was signiﬁcantly faster than a reference implementa-
tion based on plain TCP sockets.
Figure 7: Time per Database Insert in ms on LAN
(λ = 3) for input sizes of l and α2l elements
Figure 8: Time per Database Insert in ms on WAN
(λ = 3) for input sizes of l and α2l elements
Figure 9: Time per Database Insert in ms on LAN
(our scheme) for input sizes of l and α2l elements
results of our scheme for λ = 2, 3 for the Enron and the
uniform data set in LAN and WAN setting, respectively.
5.3.2 Discussion
We make the following observations: Our hypothesis has
again not been falsiﬁed. Our proposed scheme clearly and
unambiguously outperforms Popa et al.’s for both network
settings and data sets. Our scheme requires almost no in-
ciently integrates with adjustable encryption. Hence, it is
currently the best suited scheme for outsourced, encrypted
databases based on order-preserving encryption.
7. REFERENCES
[1] http://www.ciphercloud.com/.
[2] http://www.vaultive.com/.
[3] https://www.cs.cmu.edu/~enron/enron_mail_
20110402.tgz.
[4] D. Abadi, S. Madden, and M. Ferreira. Integrating
compression and execution in column-oriented
database systems. In Proceedings of the ACM
International Conference on Management of Data,
SIGMOD, 2006.
[5] D. Agrawal, A. El Abbadi, F. Emek¸ci, and
A. Metwally. Database management as a service:
challenges and opportunities. In Proceedings of the
25th International Conference on Data Engineering,
ICDE, 2009.
[6] R. Agrawal, J. Kiernan, R. Srikant, and Y. Xu. Order
preserving encryption for numeric data. In Proceedings
of the ACM International Conference on Management
of Data, SIGMOD, 2004.
[7] C. Binnig, S. Hildenbrand, and F. F¨arber.
Dictionary-based order-preserving string compression
for main memory column stores. In Proceedings of the
ACM International Conference on Management of
Data, SIGMOD, 2009.
[8] A. Boldyreva, N. Chenette, Y. Lee, and A. O’Neill.
Order-preserving symmetric encryption. In
Proceedings of the 28th International Conference on
Advances in Cryptology, EUROCRYPT, 2009.
[9] A. Boldyreva, N. Chenette, and A. O’Neill.
Order-preserving encryption revisited: improved
security analysis and alternative solutions. In
Proceedings of the 31st International Conference on
Advances in Cryptology, CRYPTO, 2011.
[10] D. Boneh and B. Waters. Conjunctive, subset, and
range queries on encrypted data. In Proceedings of the
4th Theory of Cryptography Conference, TCC, 2007.
[11] D. Cash, S. Jarecki, C. Jutla, H. Krawczyk, M.-C.
Rosu, and M. Steiner. Highly-scalable searchable
symmetric encryption with support for boolean
queries. In Proceedings of the 33rd International
Conference on Advances in Cryptology, CRYPTO,
2013.
[12] F. F¨arber, N. May, W. Lehner, P. Große, I. M¨uller,
H. Rauhe, and J. Dees. The SAP HANA database –
an architecture overview. IEEE Data Engineering
Bulletin, 35(1):28–33, 2012.
[13] C. Gentry. Fully homomorphic encryption using ideal
lattices. In Proceedings of the Symposium on Theory of
Computing, STOC, 2009.
[14] S. Goldwasser, Y. T. Kalai, R. A. Popa,
V. Vaikuntanathan, and N. Zeldovich. Reusable
garbled circuits and succinct functional encryption. In
Proceedings of the Symposium on Theory of
Computing, STOC, 2013.
[15] H. Hacig¨um¨us, B. R. Iyer, C. Li, and S. Mehrotra.
Executing sql over encrypted data in the
database-service-provider model. In Proceedings of the
Figure 10: Time per Database Insert in ms on WAN
(our scheme) for input sizes of l and α2l elements
teraction with the database except for the database insert
operation itself. In contrast, the scheme of Popa et al. usu-
ally transmits multiple messages for each encryption, in or-
der to traverse the balanced tree of the encryption server.
As the messages are exchanged in rounds, the communica-
tion suﬀers from the network latency which we can clearly
see in the WAN setting. In addition, Popa et al.’s update
the database regularly whereas our scheme performs updates
rarely or even never. These eﬀects are clearly visible in our
measurements.
We also see that the diﬀerence of the measured times be-
tween the two data sets is larger for Popa et al.’s scheme.
Except for very low values of input size l and number of el-
ements α2l, the Enron set has lower database insert times.
We attribute this to the fact that there are less distinct val-
ues and hence less rounds are required to traverse the bal-
anced tree, i.e., the tree depth is lower for the Enron data set
compared to a uniformly distributed data set. In this case
also the number and size of database updates are smaller as
compared to a uniform distribution of inputs.
When comparing diﬀerent values of λ = 2, 3 in our scheme,
we observe similar results for most of experiments performed
for diﬀerent pairs of input size l and number of elements
α2l. For larger values of input size and number of elements,
e.g. l = 16 and 32768 elements, we observe a larger distance
between the measured times, in particular between the two
data sets. We attribute this eﬀect to the updates (cf. Fig-
ure 3) of our scheme. Still, the impact of updates on a single
database insert is less than 3% (of Popa et al.’s scheme’s per-
formance) in our WAN setting and less than 5% in our LAN
setting compared to a performance gain of up to 95% and
81%, respectively. This indicates that even when including
update operations our encryption scheme is still signiﬁcantly
faster.
6. CONCLUSIONS
We present a novel order-preserving encryption scheme.
It has optimal average communication complexity of O(n)
and is provably ideal-secure. We have shown in our database
benchmark that it signiﬁcantly – with a performance gain
of up to 95% – outperforms previous work. Further experi-
mental results indicate that our scheme works well with real-
world data sets and has a higher diﬀusion between plaintexts
and ciphertexts than previous work. Our scheme also eﬃ-
ACM International Conference on Management of
Data, SIGMOD, 2002.
[16] H. Hacig¨um¨us, S. Mehrotra, and B. R. Iyer. Providing
database as a service. In Proceedings of the 18th
International Conference on Data Engineering, ICDE,
2002.
[17] S. Hildenbrand, D. Kossmann, T. Sanamrad,
C. Binnig, F. F¨arber, and J. W¨ohler. Query processing
on encrypted data in the cloud. Technical Report 735,
Department of Computer Science, ETH Zurich, 2011.
[18] M. Islam, M. Kuzu, and M. Kantarcioglu. Access
pattern disclosure on searchable encryption:
ramiﬁcation, attack and mitigation. In Proceedings of
the 19th Network and Distributed System Security
Symposium, NDSS, 2012.
[19] H. Kadhem, T. Amagasa, and H. Kitagawa. Mv-opes:
multivalued-order preserving encryption scheme: a
novel scheme for encrypting integer value to many
diﬀerent values. IEICE Transactions on Information
and Systems, E93.D:2520–2533, 2010.
[20] H. Kadhem, T. Amagasa, and H. Kitagawa. A secure
and eﬃcient order preserving encryption scheme for
relational databases. In Proceedings of the
International Conference on Knowledge Management
and Information Sharing, KMIS, 2010.
[21] J. Katz, A. Sahai, and B. Waters. Predicate
encryption supporting disjunctions, polynomial
equations, and inner products. In Advances in
Cryptology, EUROCRYPT, 2008.
[30] H. Plattner. A common database approach for oltp
and olap using an in-memory column database. In
Proceedings of the ACM International Conference on
Management of Data, SIGMOD, 2009.
[31] S. C. Pohlig and M. E. Hellman. An improved
algorithm for computing logarithms over gf(p) and its
cryptographic signiﬁcance. IEEE Transactions on
Information Theory, 24(1):106–110, 1978.
[32] R. A. Popa, F. H. Li, and N. Zeldovich. An
ideal-security protocol for order-preserving encoding.
In 34th IEEE Symposium on Security and Privacy,
S&P, 2013.
[33] R. A. Popa, C. M. S. Redﬁeld, N. Zeldovich, and
H. Balakrishnan. Cryptdb: protecting conﬁdentiality
with encrypted query processing. In Proceedings of the
23rd ACM Symposium on Operating Systems
Principles, SOSP, 2011.
[34] B. Reed. The height of a random binary search tree.
Journal of the ACM, 50(3):306–332, 2003.
[35] E. Shi, J. Bethencourt, H. T.-H. Chan, D. X. Song,
and A. Perrig. Multi-dimensional range query over
encrypted data. In Proceedings of the 2007 Symposium
on Security and Privacy, S&P, 2007.
[36] M. Stonebraker, D. J. Abadi, A. Batkin, X. Chen,
M. Cherniack, M. Ferreira, E. Lau, A. Lin, S. Madden,
E. O’Neil, P. O’Neil, A. Rasin, N. Tran, and
S. Zdonik. C-store: a column-oriented dbms. In
Proceedings of the 31st International Conference on
Very Large Data Bases, VLDB, 2005.
[22] B. Klimt and Y. Yang. The enron corpus: a new
[37] L. Xiao, O. Bastani, and I.-L. Yen. Security analysis
dataset for email classiﬁcation research. In Proceedings
of the 15th European Conference on Machine
Learning, ECML, 2004.
[23] S. Lee, T.-J. Park, D. Lee, T. Nam, and S. Kim.
Chaotic order preserving encryption for eﬃcient and
secure queries on databases. IEICE Transactions on
Information and Systems, E92.D:2207–2217, 2009.
for order preserving encryption schemes. Technical
Report UTDCS-01-12, Department of Computer
Science, University of Texas Dallas, 2012.
[38] L. Xiao and I.-L. Yen. A note for the ideal
order-preserving encryption object and generalized
order-preserving encryption. Technical Report 350,
IACR Cryptology ePrint Archive, 2012.
[24] C. Liu, L. Zhu, M. Wang, and Y.-a. Tan. Search
[39] L. Xiao, I.-L. Yen, and D. T. Huynh. Extending order
pattern leakage in searchable encryption: attacks and
new constructions. Technical Report 163, IACR
Cryptology ePrint Archive, 2013.
preserving encryption for multi-user systems.
Technical Report 192, IACR Cryptology ePrint
Archive, 2012.
[25] D. Liu and S. Wang. Programmable order-preserving
[40] A. C.-C. Yao. Protocols for secure computations
secure index for encrypted database query. In
Proceedings of the 5th International Conference on
Cloud Computing, CLOUD, 2012.
(extended abstract). In Proceedings of the 23th
Symposium on Foundations of Computer Science,
FOCS, 1982.
[26] D. Liu and S. Wang. Nonlinear order preserving index
[41] A. C.-C. Yao. How to generate and exchange secrets
for encrypted database query in service cloud
environments. Concurrency and Computation:
Practice and Experience, 25(13):1967–1984, 2013.
[27] Y. Lu. Privacy-preserving logarithmic-time search on
encrypted data in cloud. In Proceedings of the 19th
Network and Distributed System Security Symposium,
NDSS, 2012.
[28] G. ¨Ozsoyoglu, D. A. Singer, and S. S. Chung.
Anti-tamper databases: querying encrypted databases.
In Proceedings of the 17th Conference on Data and
Application Security, DBSEC, 2003.
(extended abstract). In Proceedings of the 27th
Symposium on Foundations of Computer Science,
FOCS, 1986.
[42] D. H. Yum, D. S. Kim, J. S. Kim, P. J. Lee, and S. J.
Hong. Order-preserving encryption for non-uniformly
distributed plaintexts. In Proceedings of the 12th
International Workshop on Information Security
Applications, WISA, 2011.
[43] M. Zukowski, P. A. Boncz, N. Nes, and S. H´eman.
Monetdb/x100 - a dbms in the cpu cache. IEEE Data
Engineering Bulletin, 28(2):17–22, 2005.
[29] P. Paillier. Public-key cryptosystems based on
[44] M. Zukowski, S. Heman, N. Nes, and P. Boncz.
composite degree residuosity classes. In Proceedings of
the 18th International Conference on Advances in
Cryptology, EUROCRYPT, 1999.
Super-scalar ram-cpu cache compression. In
Proceedings of the 22nd International Conference on
Data Engineering, ICDE, 2006.