---
author: Aaron Kili
category: 系统运维
comments_data:
- date: '2017-03-16 22:28:37'
  message: 又学到了一招，不过然并卵
  postip: 58.208.179.97
  username: hrj294055233 [Firefox 52.0|Ubuntu]
- date: '2017-03-17 09:05:05'
  message: 不是现在有容器了吗？比如 LXC，LXD，systemd-nspawn, Docker 等吗？
  postip: 118.122.120.11
  username: 来自四川成都的 Chrome 56.0|GNU/Linux 用户
- date: '2017-03-17 14:33:07'
  message: got it
  postip: 58.63.47.115
  username: vio [Firefox 51.0|GNU/Linux]
- date: '2017-03-20 15:15:13'
  message: 按照楼主的方法测下来并不行啊
  postip: 183.17.227.114
  username: 来自广东深圳的 Chrome 56.0|Windows 7 用户
- date: '2017-03-22 15:37:54'
  message: 然而并不是没有什么乱用！
  postip: 113.47.25.140
  username: 来自北京的 Chrome 45.0|Windows 10 用户
- date: '2017-03-22 15:38:35'
  message: 同样不行
  postip: 113.47.25.140
  username: 来自北京的 Chrome 45.0|Windows 10 用户
- date: '2017-06-01 16:53:38'
  message: "不行哦，使用WinSCP工具，登录不成功。\r\n. 2017-06-01 16:49:29.097 Enumerating network
    events for socket 1280\r\n. 2017-06-01 16:49:29.097 Enumerated 32 network
    events making 32 cumulative events for socket 1280\r\n. 2017-06-01 16:49:29.097
    Handling network close event on socket 1280 with error 10053\r\n. 2017-06-01
    16:49:29.097 Selecting events 0 for socket 1280\r\n. 2017-06-01 16:49:29.097
    Network error: Software caused connection abort\r\n* 2017-06-01 16:49:29.190
    (EFatal) 网络错误：软件造成的连接中止\r\n* 2017-06-01 16:49:29.190 验证日志(具体情况参见会话日志)：\r\n* 2017-06-01 16:49:29.190 使用用户名 &quot;user02&quot;。\r\n* 2017-06-01
    16:49:29.190 \r\n* 2017-06-01 16:49:29.190 验证失败。"
  postip: 58.63.60.83
  username: 文剑一飞 [Chrome 58.0|Windows 10]
- date: '2022-11-16 09:23:39'
  message: 你好楼主，按照文档里的操作确实可以达到文档中的效果，但我不进行最后sftp限制，只进行ssh连接后，不能运行命令，这个要怎么调？
  postip: 113.200.212.17
  username: 来自陕西西安的 Chrome 106.0|Mac 10.15 用户
- date: '2023-01-05 14:54:42'
  message: 不行+1
  postip: 144.123.118.254
  username: 来自山东的 Chrome 108.0|Windows 10 用户
- date: '2023-01-05 14:54:42'
  message: 不行+1
  postip: 144.123.118.254
  username: 来自山东的 Chrome 108.0|Windows 10 用户
count:
  commentnum: 10
  favtimes: 4
  likes: 0
  sharetimes: 0
  viewnum: 36756
date: '2017-03-16 21:53:00'
editorchoice: false
excerpt: 将 SSH 用户会话限制访问到特定的目录内，特别是在 web 服务器上，这样做有多个原因，但最显而易见的是为了系统安全。为了锁定 SSH 用户在某个目录，我们可以使用
  chroot 机制。
fromurl: http://www.tecmint.com/restrict-ssh-user-to-directory-using-chrooted-jail/
id: 8313
islctt: true
largepic: /data/attachment/album/201703/16/215326aucr7zqjr0j7cuqs.jpg
permalink: /article-8313-1.html
pic: /data/attachment/album/201703/16/215326aucr7zqjr0j7cuqs.jpg.thumb.jpg
related: []
reviewer: ''
selector: ''
summary: 将 SSH 用户会话限制访问到特定的目录内，特别是在 web 服务器上，这样做有多个原因，但最显而易见的是为了系统安全。为了锁定 SSH 用户在某个目录，我们可以使用
  chroot 机制。
tags:
- ssh
- chroot
thumb: false
title: 使用 chroot 监狱限制 SSH 用户访问指定目录
titlepic: true
translator: geekpi
updated: '2017-03-16 21:53:00'
---
将 [SSH 用户会话限制](http://www.tecmint.com/restrict-sftp-user-home-directories-using-chroot/)访问到特定的目录内，特别是在 web 服务器上，这样做有多个原因，但最显而易见的是为了系统安全。为了锁定 SSH 用户在某个目录，我们可以使用 **chroot** 机制。
在诸如 Linux 之类的类 Unix 系统中更改 root（**chroot**）是将特定用户操作与其他 Linux 系统分离的一种手段；使用称为 **chrooted 监狱** 的新根目录更改当前运行的用户进程及其子进程的明显根目录。
![](/data/attachment/album/201703/16/215326aucr7zqjr0j7cuqs.jpg)
在本教程中，我们将向你展示如何限制 SSH 用户访问 Linux 中指定的目录。注意，我们将以 root 用户身份运行所有命令，如果你以普通用户身份登录服务器，请使用 [sudo 命令](https://linux.cn/tag-sudo.html)。
### 步骤 1：创建 SSH chroot 监狱
1、 使用 mkdir 命令开始创建 chroot 监狱：
```
# mkdir -p /home/test
```
2、 接下来，根据 `sshd_config` 手册找到所需的文件，`ChrootDirectory` 选项指定在身份验证后要 chroot 到的目录的路径名。该目录必须包含支持用户会话所必需的文件和目录。
对于交互式会话，这需要至少一个 shell，通常为 `sh` 和基本的 `/dev` 节点，例如 `null`、`zero`、`stdin`、`stdout`、`stderr` 和 `tty` 设备：
```
# ls -l /dev/{null,zero,stdin,stdout,stderr,random,tty}
```
![Listing Required Files](/data/attachment/album/201703/16/215336gzm7nraoa21onam7.png)
*列出所需文件*
3、 现在，使用 `mknod` 命令创建 `/dev` 下的文件。在下面的命令中，`-m` 标志用来指定文件权限位，`c` 意思是字符文件，两个数字分别是文件指向的主要号和次要号。
```
# mkdir -p /home/test/dev/      
# cd /home/test/dev/
# mknod -m 666 null c 1 3
# mknod -m 666 tty c 5 0
# mknod -m 666 zero c 1 5
# mknod -m 666 random c 1 8
```
![Create /dev and Required Files](/data/attachment/album/201703/16/215338ide3pr3krvrosere.png)
*创建 /dev 和所需文件*
4、 在此之后，在 chroot 监狱中设置合适的权限。注意 chroot 监狱和它的子目录以及子文件必须被 `root` 用户所有，并且对普通用户或用户组不可写：
```
# chown root:root /home/test
# chmod 0755 /home/test
# ls -ld /home/test
```
![Set Permissions on Directory](/data/attachment/album/201703/16/215339uvvvppvomvvfm2oi.png)
*设置目录权限*
### 步骤 2：为 SSH chroot 监狱设置交互式 shell
5、 首先，创建 `bin` 目录并复制 `/bin/bash` 到 `bin` 中：
```
# mkdir -p /home/test/bin
# cp -v /bin/bash /home/test/bin/
```
![Copy Files to bin Directory](/data/attachment/album/201703/16/215340daajm55eoacw5f4e.png)
*复制文件到 bin 目录中*
6、 现在，识别 bash 所需的共享库，如下所示复制它们到 `lib64` 中：
```
# ldd /bin/bash
# mkdir -p /home/test/lib64
# cp -v /lib64/{libtinfo.so.5,libdl.so.2,libc.so.6,ld-linux-x86-64.so.2} /home/test/lib64/
```
![Copy Shared Library Files](/data/attachment/album/201703/16/215341z7r8471jmoz685w4.png)
*复制共享库文件*
### 步骤 3：创建并配置 SSH 用户
7、 现在，使用 [useradd 命令](http://www.tecmint.com/add-users-in-linux/)创建 SSH 用户，并设置安全密码：
```
# useradd tecmint
# passwd tecmint
```
8、 创建 chroot 监狱通用配置目录 `/home/test/etc` 并复制已更新的账号文件（`/etc/passwd` 和 `/etc/group`）到这个目录中：
```
# mkdir /home/test/etc
# cp -vf /etc/{passwd,group} /home/test/etc/
```
![Copy Password Files](/data/attachment/album/201703/16/215342zo1eouy2nsvypzen.png)
*复制密码文件*