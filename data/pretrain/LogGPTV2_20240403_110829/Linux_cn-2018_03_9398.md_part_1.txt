---
author: Vivek Gite
category: 系统运维
comments_data: []
count:
  commentnum: 0
  favtimes: 6
  likes: 0
  sharetimes: 1
  viewnum: 12716
date: '2018-03-02 20:27:35'
editorchoice: false
excerpt: sar 命令的输出能够用于识别服务器瓶颈。但是，分析 sar 命令提供的信息可能比较困难，所以要使用 kSar 工具。kSar 工具可以将 sar
  命令的输出绘制成基于时间周期的、易于理解的图表。
fromurl: https://www.cyberciti.biz/tips/identifying-linux-bottlenecks-sar-graphs-with-ksar.html
id: 9398
islctt: true
largepic: /data/attachment/album/201803/02/202721zt4b9ketlf0tpt3t.jpg
permalink: /article-9398-1.html
pic: /data/attachment/album/201803/02/202721zt4b9ketlf0tpt3t.jpg.thumb.jpg
related: []
reviewer: ''
selector: ''
summary: sar 命令的输出能够用于识别服务器瓶颈。但是，分析 sar 命令提供的信息可能比较困难，所以要使用 kSar 工具。kSar 工具可以将 sar
  命令的输出绘制成基于时间周期的、易于理解的图表。
tags:
- sar
- kSar
thumb: false
title: 使用 sar 和 kSar 来发现 Linux 性能瓶颈
titlepic: true
translator: qhwdw
updated: '2018-03-02 20:27:35'
---
 ![](/data/attachment/album/201803/02/202721zt4b9ketlf0tpt3t.jpg)
`sar` 命令用用收集、报告、或者保存 UNIX / Linux 系统的活动信息。它保存选择的计数器到操作系统的 `/var/log/sa/sadd` 文件中。从收集的数据中，你可以得到许多关于你的服务器的信息：
1. CPU 使用率
2. 内存页面和使用率
3. 网络 I/O 和传输统计
4. 进程创建活动
5. 所有的块设备活动
6. 每秒中断数等等
`sar` 命令的输出能够用于识别服务器瓶颈。但是，分析 `sar` 命令提供的信息可能比较困难，所以要使用 kSar 工具。kSar 工具可以将 `sar` 命令的输出绘制成基于时间周期的、易于理解的图表。
### sysstat 包
`sar`、`sa1`、和 `sa2` 命令都是 sysstat 包的一部分。它是 Linux 包含的性能监视工具集合。
1. `sar`：显示数据
2. `sa1` 和 `sa2`：收集和保存数据用于以后分析。`sa2` shell 脚本在 `/var/log/sa` 目录中每日写入一个报告。`sa1` shell 脚本将每日的系统活动信息以二进制数据的形式写入到文件中。
3. sadc —— 系统活动数据收集器。你可以通过修改 `sa1` 和 `sa2` 脚本去配置各种选项。它们位于以下的目录：
	* `/usr/lib64/sa/sa1` （64 位）或者 `/usr/lib/sa/sa1` （32 位） —— 它调用 `sadc` 去记录报告到 `/var/log/sa/sadX` 格式。
	* `/usr/lib64/sa/sa2` （64 位）或者 `/usr/lib/sa/sa2` （32 位） —— 它调用 `sar` 去记录报告到 `/var/log/sa/sarX` 格式。
#### 如何在我的系统上安装 sar？
在一个基于 CentOS/RHEL 的系统上，输入如下的 [yum 命令](https://www.cyberciti.biz/faq/rhel-centos-fedora-linux-yum-command-howto/ "See Linux/Unix yum command examples for more info") 去安装 sysstat：
```
# yum install sysstat
```
示例输出如下：
```
Loaded plugins: downloadonly, fastestmirror, priorities,
              : protectbase, security
Loading mirror speeds from cached hostfile
 * addons: mirror.cs.vt.edu
 * base: mirror.ash.fastserv.com
 * epel: serverbeach1.fedoraproject.org
 * extras: mirror.cogentco.com
 * updates: centos.mirror.nac.net
0 packages excluded due to repository protections
Setting up Install Process
Resolving Dependencies
--&gt; Running transaction check
---&gt; Package sysstat.x86_64 0:7.0.2-3.el5 set to be updated
--&gt; Finished Dependency Resolution
Dependencies Resolved
====================================================================
 Package        Arch          Version             Repository   Size
====================================================================
Installing:
 sysstat        x86_64        7.0.2-3.el5         base        173 k
Transaction Summary
====================================================================
Install      1 Package(s)
Update       0 Package(s)
Remove       0 Package(s)
Total download size: 173 k
Is this ok [y/N]: y
Downloading Packages:
sysstat-7.0.2-3.el5.x86_64.rpm               | 173 kB     00:00
Running rpm_check_debug
Running Transaction Test
Finished Transaction Test
Transaction Test Succeeded
Running Transaction
  Installing     : sysstat                                      1/1
Installed:
  sysstat.x86_64 0:7.0.2-3.el5
Complete!
```
#### 为 sysstat 配置文件
编辑 `/etc/sysconfig/sysstat` 文件去指定日志文件保存多少天（最长为一个月）：
```
# vi /etc/sysconfig/sysstat
```
示例输出如下 ：
```
# keep log for 28 days
# the default is 7
HISTORY=28
```
保存并关闭这个文件。
### 找到 sar 默认的 cron 作业
[默认的 cron 作业位于](https://www.cyberciti.biz/faq/how-do-i-add-jobs-to-cron-under-linux-or-unix-oses/) `/etc/cron.d/sysstat`：
```
# cat /etc/cron.d/sysstat
```
示例输出如下：
```
# run system activity accounting tool every 10 minutes
*/10 * * * * root /usr/lib64/sa/sa1 1 1
# generate a daily summary of process accounting at 23:53
53 23 * * * root /usr/lib64/sa/sa2 -A
```
#### 告诉 sadc 去报告磁盘的统计数据
使用一个文本编辑器去编辑 `/etc/cron.d/sysstat` 文件，比如使用 `vim` 命令，输入如下：
```
# vi /etc/cron.d/sysstat
```
像下面的示例那样更新这个文件，以记录所有的硬盘统计数据（`-d` 选项强制记录每个块设备的统计数据，而 `-I` 选项强制记录所有系统中断的统计数据）：
```
# run system activity accounting tool every 10 minutes
*/10 * * * * root /usr/lib64/sa/sa1 -I -d 1 1
# generate a daily summary of process accounting at 23:53
53 23 * * * root /usr/lib64/sa/sa2 -A 
```
在 CentOS/RHEL 7.x 系统上你需要传递 `-S DISK` 选项去收集块设备的数据。传递 `-S XALL` 选项去采集如下所列的数据：
1. 磁盘
2. 分区
3. 系统中断
4. SNMP
5. IPv6
```
# Run system activity accounting tool every 10 minutes
*/10 * * * * root /usr/lib64/sa/sa1 -S DISK 1 1
# 0 * * * * root /usr/lib64/sa/sa1 600 6 &
# Generate a daily summary of process accounting at 23:53
53 23 * * * root /usr/lib64/sa/sa2 -A
# Run system activity accounting tool every 10 minutes
```
保存并关闭这个文件。
#### 打开 CentOS/RHEL 版本 5.x/6.x 的服务
输入如下命令:
```
chkconfig sysstat on
service sysstat start
```
示例输出如下：
```
Calling the system activity data collector (sadc):
```
对于 CentOS/RHEL 7.x，运行如下的命令：
```
# systemctl enable sysstat
# systemctl start sysstat.service
# systemctl status sysstat.service 
```
示例输出：
```
● sysstat.service - Resets System Activity Logs
   Loaded: loaded (/usr/lib/systemd/system/sysstat.service; enabled; vendor preset: enabled)
   Active: active (exited) since Sat 2018-01-06 16:33:19 IST; 3s ago
  Process: 28297 ExecStart=/usr/lib64/sa/sa1 --boot (code=exited, status=0/SUCCESS)
 Main PID: 28297 (code=exited, status=0/SUCCESS)
Jan 06 16:33:19 centos7-box systemd[1]: Starting Resets System Activity Logs...
Jan 06 16:33:19 centos7-box systemd[1]: Started Resets System Activity Logs.
```
### 如何使用 sar？如何查看统计数据？
使用 `sar` 命令去显示操作系统中选定的累积活动计数器输出。在这个示例中，运行 `sar` 命令行，去实时获得 CPU 使用率的报告：
```
# sar -u 3 10
```
示例输出：
```
Linux 2.6.18-164.2.1.el5 (www-03.nixcraft.in)   12/14/2009
09:49:47 PM CPU %user %nice %system %iowait %steal %idle
09:49:50 PM all 5.66 0.00 1.22 0.04 0.00 93.08