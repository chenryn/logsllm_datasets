title:ShortMAC: Efficient Data-Plane Fault Localization
author:Xin Zhang and
Zongwei Zhou and
Hsu-Chun Hsiao and
Tiffany Hyun-Jin Kim and
Adrian Perrig and
Patrick Tague
ShortMAC: 
Efficient Data-plane Fault Localization	
Xin	
  Zhang,	
  Zongwei	
  Zhou,	
  Hsu-­‐Chun	
  Hsiao,	
  Tiﬀany	
  Hyun-­‐Jin	
  Kim	
Adrian	
  Perrig	
  and	
  Patrick	
  Tague	
What	
  is	
  Fault	
  LocalizaDon?	
  Problem	
  deﬁni-on	
 Iden-fy	
  faulty	
  links	
  during	
  packet	
  forwarding	
  A;acker	
  Model	
  Challenges	
 Drop,	
  modify,	
  misroute,	
  or	
  inject	
  packets	
  at	
  data	
  plane	
 Selec-ve	
  a;ack:	
  break	
  ping,	
  traceroute,	
  etc	
 High	
  overhead	
 Slander	
  &	
  framing	
Only	
  drop	
  node	
  5’s	
  ACKs	
“Got	
  it”	
“Got	
  it”	
“Got	
  it”	
   “Got	
  it”	
“Got	
  it”	
Source	
1	
2	
3	
4	
5	
Dest	
2	
What	
  is	
  Fault	
  LocalizaDon?	
  Challenges	
  (cont’d)	
  A;acks	
  against	
  sampling	
  Forgery	
  a;ack:	
  break	
  NeSlow,	
  Bloom	
  Filter,	
  etc	
  Natural	
  packet	
  loss	
is	
  not	
  sampled,	
  drop	
  it!	
“Got	
  100”	
   “Got	
  100”	
   “Got	
  100”	
   “Got	
  100”	
   “Got	
  100”	
100	
  pkts	
Source	
1	
2	
3	
4	
5	
Only	
  modify	
  packets	
Dest	
3	
Why	
  is	
  Fault	
  LocalizaDon	
  Important?	
 The	
  current	
  Internet	
  Best	
  eﬀort,	
  purely	
  end-­‐to-­‐end	
  Fault	
  localiza-on	
  enables:	
 Data-­‐plane	
  accountability	
 Intelligent	
  path	
  selec-on	
 Linear	
  path	
  trial	
Source	
Worst	
  case:	
  3	
  vs	
  23	
  trials	
Worst	
  case:	
  23	
Des-na-on	
4	
Design	
  Goals	
 Security	
 Eﬃciency	
  Against	
  drop,	
  modify,	
  inject,	
  and	
  replay	
  packets	
  Against	
  mul-ple	
  colluding	
  nodes	
  Low	
  detec-on	
  delay	
  Low	
  storage,	
  communica-on	
  and	
  computa-on	
  overhead	
 Provable	
  guarantees	
  Upper	
  bound	
  of	
  damage	
  without	
  being	
  detected	
  Lower	
  bound	
  of	
  forwarding	
  correctness	
  if	
  no	
  fault	
  detected	
5	
ShortMAC	
  Key	
  Insight	
  #1	
  Fault	
  Localiza-on	
  Packet	
  authen-ca-on	
  Fault	
  Localiza-on	
  monitor	
  packet	
  count	
  and	
  content	
  W/	
  pkt	
  authen,	
  content	
  count	
  Only	
  counts	
  small	
  state,	
  low	
  bandwidth	
  cost	
Source	
  A	
6	
Detectable!	
B	
6	
C	
4	
  6	
Detectable!	
6	
ShortMAC	
  Key	
  Insight	
  #2	
  Limi+ng	
  a;acks	
  instead	
  of	
  perfect	
  detec-on	
  Detect	
  every	
  misbehavior?	
  Costly!	
  Error-­‐prone!	
  Absorb	
  low-­‐impact	
  a;ack:	
  tolerance	
  threshold	
  Trap	
  the	
  a;acker	
  into	
  a	
  dilemma	
  Enable	
  probabilis-c	
  algorithms	
  with	
  provable	
  bounds	
  A;ack	
  more?	
Will	
  get	
  caught!	
Stay	
  under	
  2%?	
Damage	
  is	
  bounded!	
Source	
Dest.	
7	
ShortMAC	
  Key	
  Ideas	
k-­‐bit	
  MAC,	
e.g.,	
  k	
  =	
  1	
  The	
  ShortMAC	
  packet	
  marking	
  Limi-ng	
  instead	
  of	
  perfectly	
  detec-ng	
  fake	
  packets	
  Source	
  marks	
  each	
  packet	
  with	
  k	
  bits	
  (with	
  keyed	
  PRF)	
K1	
1	
Kd	
0	
K2	
1	
K1	
   K2	
Source	
Kd	
Forge	
  m?	
  50%	
  chance	
  of	
inconsistency.	
  Detectable!	
(	
  ,	
  1,	
  0,	
  1)	
K1	
1	
K2	
2	
Dest	
Kd	
=	
=	
=	
SN,	
  TTLd)	
PRFKd	
  (	
  ,	
PRFK2	
  (	
  ,	
  SN,	
  TTL2,	
  )	
PRFK1	
  (	
  ,	
  SN,	
  TTL1,	
  ,	
  )	
8	
ShortMAC	
  Key	
  Ideas	
  High-­‐level	
  steps	
  Each	
  node	
  maintains	
  two	
  counters	
  (counter	
  only!)	
  Secure	
  repor-ng	
  Threshold-­‐based	
  detec-on	
  robust	
  to	
  natural	
  errors	
sends	
  1000	
  pkts	
1-­‐bit	
  MAC	
Source	
0	
0	
1000	
1000	
250	
750	
125	
625	
Dest.	
1	
2	
3	
forges	
  500	
  pkt	
  More	
  details:	
  Onion	
  ACK	
  for	
  repor-ng,	
  threshold-­‐based	
detec-on,	
  etc	
9	
δ
q4
TheoreDcal	
  Bounds	
Lemma 1 Injection Detection: Given the bound δ on de-
tection false negative and false positive rates, the injection
, where
detection threshold Tin can be set to Tin = 2 ln 2d
d is the path length and q = 2k−1
is the probability that
a fake packet will be inconsistent with the associated k-bit
MAC. The number of fake packets β an adversary can in-
ject on one of its malicious links without being detected is
limited to: β = Tin
Comparison of theoretical results. Before presenting the
theorems, we ﬁrst summarize and compare ShortMAC the-
oretical results with two recent proposals, PAAI-1 [59] and