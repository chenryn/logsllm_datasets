SCIENCE CHINA 
	Information Sciences 
. RESEARCH PAPER . 	December 2012 Vol. 55 No. 12: 2757–2773
	doi: 	10.1007/s11432-012-4747-8 Progress of Projects Supported by NSFC
Localizing root causes of performance anomalies in cloud computing systems by analyzing request trace logs
MI HaiBo1∗, WANG HuaiMin1, ZHOU YangFan2, LYU Michael R.2& CAI Hua31National Laboratory for Parallel and Distributed Processing, National University of Defense Technology, Changsha 410000, China; 
2Shenzhen Research Institute, The Chinese University of Hong Kong, Shenzhen 518000, China; 3Computing Platform, Alibaba Cloud Computing Company, Hangzhou 310000, China
Received June 1, 2012; accepted October 30, 2012Abstract 	It is hard to localize the primary cause of performance anomalies in cloud computing systems because of the complexity of interactions between components. The hidden connections in the huge number of request execution paths in such systems usually contain useful information for diagnosing performance anomalies. We propose an approach to localize anomalous invoked methods and their physical locations by leveraging request trace logs, which involves two steps: (1) firstly, cluster the requests according to their corresponding call sequences, identify anomalous requests with principal component analysis, and then pick out anomalous methods with Mann-Whitney hypothesis test; (2) secondly, compare the behavior similarities of all replicated instances of the anomalous methods with Jensen-Shannon divergence, and select the ones whose behaviors are different from those of others, which will be chosen as the final culprits of performance anomalies. We conduct experiments with four real-world cases to validate our approach in Alibaba Cloud Computing Inc. The results demonstrate that our approach can locate the prime causes of performance anomalies with the low false-positive rate and false-negative rate.Keywords 	cloud computing systems, performance anomalies, request trace logs, fault localization
Citation Mi H B, Wang H M, Zhou Y F, et al. Localizing root causes of performance anomalies in cloud
computing systems by analyzing request trace logs. Sci China Inf Sci, 2012, 55: 2757–2773, doi: 10.1007/s11432-012-4747-8
1 	IntroductionDue to the continuous growth of the scale and complexity of systems, it becomes more and more difficult to build software with high quality assurance [1–3]. It is beyond the engineers’ ability to design sufficient test cases to cover all scenarios for the production environments. Some bugs will not manifest themselves until a specific condition occurs. Therefore, it is almost impossible to deploy a bug-free system.Compared to the functional bugs that usually cause the breakdown of the systems, performance anoma-lies are harder to be diagnosed [4]. Performance diagnosis is labor-intensive, especially for the production
∗Corresponding author (email: PI:EMAIL)
c⃝ Science China Press and Springer-Verlag Berlin Heidelberg 2012 info.scichina.com www.springerlink.com| 2758 | Count of timeout requests |  350 | Mi H B, et al. | Sci China Inf Sci | December 2012 Vol. 55 No. 12 | 22:00 
21:00 
20:00 
19:00 
18:00 
17:00 
16:00 
15:00 
14:00 
13:00 
12:00 
11:00 
10:00 
09:00 
08:00 
07:00 
06:00 
05:00 
04:00 
03:00 
02:00 
01:00 
00:00 |
|---|---|---|---|---|---|---|00:00 |
|---|---|---|---|---|---|---|
| 2758 |Count of timeout requests | 350 |Mi H B, et al. |The timeout distribution in hosts |The timeout distribution in hosts |22:00  21:00  20:00  19:00  18:00  17:00  16:00  15:00  14:00  13:00  12:00  11:00  10:00  09:00  08:00  07:00  06:00  05:00  04:00  03:00  02:00  01:00  00:00 || 2758 |Count of timeout requests | 300 |Mi H B, et al. |The timeout distribution in hosts |The timeout distribution in hosts |22:00  21:00  20:00  19:00  18:00  17:00  16:00  15:00  14:00  13:00  12:00  11:00  10:00  09:00  08:00  07:00  06:00  05:00  04:00  03:00  02:00  01:00  00:00 || 2758 |Count of timeout requests | 250 |Mi H B, et al. |The timeout distribution in hosts |The timeout distribution in hosts |22:00  21:00  20:00  19:00  18:00  17:00  16:00  15:00  14:00  13:00  12:00  11:00  10:00  09:00  08:00  07:00  06:00  05:00  04:00  03:00  02:00  01:00  00:00 || 2758 |Count of timeout requests | 200 |Mi H B, et al. |The timeout distribution in hosts |The timeout distribution in hosts |22:00  21:00  20:00  19:00  18:00  17:00  16:00  15:00  14:00  13:00  12:00  11:00  10:00  09:00  08:00  07:00  06:00  05:00  04:00  03:00  02:00  01:00  00:00 || 2758 |Count of timeout requests | 150 |Mi H B, et al. |The timeout distribution in hosts |The timeout distribution in hosts |22:00  21:00  20:00  19:00  18:00  17:00  16:00  15:00  14:00  13:00  12:00  11:00  10:00  09:00  08:00  07:00  06:00  05:00  04:00  03:00  02:00  01:00  00:00 || 2758 |Count of timeout requests | 100 |Mi H B, et al. |The timeout distribution in hosts |The timeout distribution in hosts |22:00  21:00  20:00  19:00  18:00  17:00  16:00  15:00  14:00  13:00  12:00  11:00  10:00  09:00  08:00  07:00  06:00  05:00  04:00  03:00  02:00  01:00  00:00 |
 50
 0 r01f02015 
r01f02016 
r01f02017 
r01f02018 
r01f05002 
r01f05003 
r01f05004 
r01f05005 
r02e05037r01f05004 
r01f05005 
r02e05037 
r02e05039 
r02e05041 
r02e05042 
r02e05043 
r02e05044 
r02e05045 
r02e05046 
r02e05047 
r02e05048 
r02e08003 
r02e08004 
r02e08005 
r02e08006 
r02e08007 
r02e08008 
r02e08009 
r02e08010 
r02e08011 
r02e08012 
r02e11001 
r02e11002 
r02e11003 