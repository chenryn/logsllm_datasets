![在 RHEL 安装过程中启用 kdump](images/anaconda-summary-hub-states.png)
:::
:::
有些安装选项，如自定义 Kickstart 安装，在某些情况下不会默认安装或启用
`kdump`{.literal}。如果您的系统中出现这种情况，请按照以下步骤安装
`kdump`{.literal}。
::: itemizedlist
**先决条件**
-   一个有效的 Red Hat Enterprise Linux 订阅
-   包含用于您的系统 CPU 架构的 [**kexec-tools**]{.strong}
    软件包的软件仓库
-   实现了对 `kdump`{.literal} 配置和目标的要求
:::
::: orderedlist
**流程**
1.  执行以下命令检查是否在您的系统中安装了 `kdump`{.literal}：
    ``` screen
    $ rpm -q kexec-tools
    ```
    如果安装了该软件包，输出：
    ``` screen
    kexec-tools-2.0.17-11.el8.x86_64
    ```
    如果没有安装该软件包，输出：
    ``` screen
    package kexec-tools is not installed
    ```
2.  通过以下方法安装 `kdump`{.literal} 和其他必要的软件包：
    ``` screen
    # yum install kexec-tools
    ```
:::
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
从 Red Hat Enterprise Linux 7.4 (kernel-3.10.0-693.el7)
开始，`kdump`{.literal} 支持 `Intel IOMMU`{.literal}
驱动程序。对于以前的版本，Red Hat Enterprise Linux 7.3
(kernel-3.10.0-514\[.XYZ\].el7) 及更早版本建议禁用
`Intel IOMMU`{.literal} 支持，否则 kdump 内核可能会变得无响应。
:::
:::
:::
[]{#configuring-kdump-on-the-command-line_managing-monitoring-and-updating-the-kernel.html}
::: chapter
::: titlepage
# []{#configuring-kdump-on-the-command-line_managing-monitoring-and-updating-the-kernel.html#configuring-kdump-on-the-command-line_managing-monitoring-and-updating-the-kernel}第 11 章 在命令行中配置 kdump {.title}
:::
在系统引导过程中为 `kdump`{.literal} 保留内存。内存大小在系统的 Grand
Unified Bootloader (GRUB) 2
配置文件中配置。内存大小取决于配置文件中指定的 `crashkernel=`{.literal}
值以及系统物理内存的大小。
::: section
::: titlepage
# []{#configuring-kdump-on-the-command-line_managing-monitoring-and-updating-the-kernel.html#configuring-kdump-memory-usage_configuring-kdump-on-the-command-line}配置 kdump 内存用量 {.title}
:::
`crashkernel=`{.literal} 选项可以通过多种方式定义。您可以指定
`crashkernel=`{.literal} 值或配置 `auto`{.literal}
选项。`crashkernel=auto`{.literal}
引导选项，根据系统物理内存总量自动保留内存。配置后，内核将自动为
`kdump`{.literal} 内核保留适当的内存量。这有助于防止出现内存不足 (OOM)
错误。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
`kdump`{.literal} 的自动内存分配因系统硬件架构和可用内存大小而异。
例如，在 AMD64 和 Intel 64 中，只有可用内存超过 1GB 和 64 位 ARM 架构且
IBM Power 系统具有超过 2GB 的可用内存时，`crashkernel=auto`{.literal}
参数才能正常工作。
如果系统自动分配低于最小内存阈值，您可以手动配置保留内存量。
:::
::: itemizedlist
**先决条件**
-   实现了配置和目标的 `kdump`{.literal} 要求
:::
::: orderedlist
**流程**
1.  使用 root 权限编辑 `/etc/default/grub`{.literal} 文件。
2.  将 `crashkernel=`{.literal} 选项设置为所需的值。
    例如：要保留 128 MB 内存，请使用：
    ``` screen
    crashkernel=128M
    ```
    或者，您可以根据安装的内存总量将保留内存量设置为变量。变量中的内存保留语法为
    `crashkernel=:,:`{.literal}。例如：
    ``` screen
    crashkernel=512M-2G:64M,2G-:128M
    ```
    如果系统内存总量为 512 MB 或高于 2 GB，则上述示例保留 64 MB
    内存。如果内存总量超过 2 GB，则为 `kdump`{.literal} 保留 128 MB。
    ::: itemizedlist
    -   保留内存的偏移。
        有些系统需要保留内存并带有特定的固定偏移，因为崩溃内核保留非常早，并且希望保留一些区域供特殊使用。如果设置了偏移，则保留内存从此偏移开始。要偏移保留的内存，请使用以下语法：
        ``` screen
        crashkernel=128M@16M
        ```
        上面的例子意味着 `kdump`{.literal} 从 16 MB 开始保留 128 MB
        内存（物理地址 0x01000000）。如果偏移参数设为 0
        或完全省略，`kdump`{.literal}
        会自动偏移保留内存。如上所述，在设置变量内存保留时也可以使用此语法；在本例中，偏移始终被最后指定（例如
        `crashkernel=512M-2G:64M,2G-:128M@16M`{.literal}）。
    :::
3.  使用以下命令更新 GRUB2 配置文件：
    ``` screen
    # grub2-mkconfig -o /boot/grub2/grub.cfg
    ```
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
为 `kdump`{.literal} 配置内存的替代方法是将
`crashkernel=`{.literal} 参数附加到带有
`grub2-editenv`{.literal} 的 `kernelopts`{.literal}
变量中，这将更新所有引导条目。或者您可以使用 `grubby`{.literal}
实用程序更新只有一个条目的内核命令行参数。
:::
::: itemizedlist
**其它资源**
-   [kdump
    的内存要求](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/managing_monitoring_and_updating_the_kernel/installing-and-configuring-kdump_managing-monitoring-and-updating-the-kernel#memory-requirements-for-kdump_supported-kdump-configurations-and-targets){.link}
-   [配置内核命令行参数](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/managing_monitoring_and_updating_the_kernel/configuring-kernel-command-line-parameters_managing-monitoring-and-updating-the-kernel){.link}
-   [grub2-mkconfig 脚本静默忽略 GRUB_CMDLINE_LINUX
    中的选项](https://access.redhat.com/solutions/3710121){.link}
-   [如何在系统引导前手动修改 GRUB
    中的引导参数](https://access.redhat.com/solutions/32726){.link}
-   [如何在 Red Hat Enterprise Linux 8
    中安装并引导自定义内核](https://access.redhat.com/articles/3938081){.link}
:::
:::
::: section
::: titlepage
# []{#configuring-kdump-on-the-command-line_managing-monitoring-and-updating-the-kernel.html#configuring-the-kdump-target_configuring-kdump-on-the-command-line}配置 kdump 目标 {.title}
:::
当捕获内核崩溃时，核心转储可以作为文件存储在本地文件系统中，直接写入设备，或使用
`NFS`{.literal} （网络文件系统）或 `SSH`{.literal} (Secure Shell)
协议通过网络发送。一次只能设置其中一个选项，默认的行为是将 vmcore
文件存储在本地文件系统的 `/var/crash/`{.literal} 目录中。
::: itemizedlist
**先决条件**
-   实现了配置和目标的 `kdump`{.literal} 要求。
:::
::: itemizedlist
**流程**
-   要将 `vmcore`{.literal} 文件存储在本地文件系统的
    `/var/crash/`{.literal} 目录中，编辑 `/etc/kdump.conf`{.literal}
    文件并指定路径：
    ``` screen
    path /var/crash
    ```
    选项 `path /var/crash`{.literal} 代表 `kdump`{.literal} 保存
    `vmcore`{.literal} 文件的文件系统的路径。当您在
    `/etc/kdump.conf`{.literal}
    文件中指定转储目标时，`路径`{.literal}相对于指定的转储目标。
    如果您没有在 `/etc/kdump.conf`{.literal}
    文件中指定转储目标，则该`路径`{.literal}代表根目录的绝对路径。根据当前系统中挂载的内容，会自动执行转储目标和调整的转储路径。
:::
::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
### 警告 {.title}
当转储目标挂载在 `/var/crash`{.literal}，参数 `path`{.literal} 已在
`/etc/kdump.conf`{.literal} 文件的 `/var/crash`{.literal}
部分设置时，`kdump`{.literal} 会在 `/var/crash/var/crash`{.literal}
目录中保存 `vmcore`{.literal} 文件。例如，在以下实例中，`ext4`{.literal}
文件系统已挂载到 `/var/crash`{.literal}，其 `path`{.literal} 被设置为
`/var/crash`{.literal}:
``` screen
grep -v ^# etc/kdump.conf | grep -v ^$
ext4 /dev/mapper/vg00-varcrashvol
path /var/crash
core_collector makedumpfile -c --message-level 1 -d 31
```
这会导致 `/var/crash/var/crash`{.literal}
路径。要解决这个问题，请使用选项 `path /`{.literal} 而不是
`path /var/crash`{.literal}
:::
::: itemizedlist
-   要更改保存核心转储的本地目录，以 `root`{.literal} 用户身份编辑
    `/etc/kdump.conf`{.literal} 配置文件，如下所述。
    ::: orderedlist
    1.  从 `#path /var/crash`{.literal} 行的开头删除 hash 符号(\"#\")。
    2.  使用预期的目录路径替换该值。例如：
        ``` screen
        path /usr/local/cores
        ```
        ::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
        ### 重要 {.title}
        在 Red Hat Enterprise Linux 8 中，当 kdump systemd
        服务启动时使用 `path`{.literal} 指令定义为 `kdump`{.literal}
        目标的目录必须存在，否则服务会失败。此行为与早期版本的 Red Hat
        Enterprise Linux
        不同，如果启动服务时不存在目录，则会自动创建该目录。
        :::
    :::
-   要将文件写入不同的分区，以 `root`{.literal} 用户身份编辑
    `/etc/kdump.conf`{.literal} 配置文件，如下所述。
    ::: orderedlist
    1.  根据您的选择，从 `#ext4`{.literal} 行的开头删除 hash
        符号(\"#\")。
        ::: itemizedlist
        -   设备名称（ `#ext4 /dev/vg/lv_kdump`{.literal} 行）
        -   文件系统标签（ `#ext4 LABEL=/boot`{.literal} 行）
        -   UUID（
            `#ext4 UUID=03138356-5e61-4ab3-b58e-27507ac41937`{.literal}
            行）
        :::
    2.  将文件系统类型以及设备名称、标签或者 UUID 更改为所需值。例如：
        ``` screen
        ext4 UUID=03138356-5e61-4ab3-b58e-27507ac41937
        ```
        ::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
        ### 重要 {.title}
        建议您使用 `LABEL=`{.literal} 或 `UUID=`{.literal}
        指定存储设备。无法保证 `/dev/sda3`{.literal}
        等磁盘设备名称在重启后保持一致。
        :::
        ::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
        ### 重要 {.title}
        当转储到 IBM Z 硬件上的直接访问存储设备 (DASD) 时，在继续前已在
        `/etc/dasd.conf`{.literal} 中正确指定转储设备非常重要。
        :::
    :::
-   将转储直接写入设备：
    ::: orderedlist
    1.  删除 `#raw /dev/vg/lv_kdump`{.literal} 行开头的哈希符号
        (\"#\")。
    2.  使用预期的设备名称替换该值。例如：
        ``` screen
        raw /dev/sdb1
        ```
    :::
-   使用 `NFS`{.literal} 协议将转储保存到远程机器中：
    ::: orderedlist
    1.  删除 `#nfs my.server.com:/export/tmp`{.literal} 行开头的哈希符号
        (\"#\")。
    2.  使用有效的主机名和目录路径替换该值。例如：
        ``` screen
        nfs penguin.example.com:/export/cores
        ```
    :::
-   使用 `SSH`{.literal} 协议将转储保存到远程机器中：
    ::: orderedlist
    1.  从 `#ssh PI:EMAIL`{.literal} 行的开头删除 hash
        符号(\"#\")。
    2.  使用有效的用户名和密码替换该值。
    3.  在配置中包含 `SSH`{.literal} 密钥。
        ::: itemizedlist
        -   从 `#sshkey /root/.ssh/kdump_id_rsa`{.literal}
            行的开头删除哈希符号。
        -   将该值改为您要转储的服务器中有效密钥的位置。例如：
            ``` screen
            ssh PI:EMAIL
            sshkey /root/.ssh/mykey
            ```
        :::
    :::
:::