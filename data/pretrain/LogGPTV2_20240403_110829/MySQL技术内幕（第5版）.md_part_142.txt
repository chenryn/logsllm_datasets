符串第一个字节的值就应该是131（即128+3）。如果加密时使用的是key_str参数，加密
密工作是用key_str 参数来完成的。例如，如果加密时使用的密钥编号为3，加密结果字
务器DES密钥文件里对应于该编号的那个密钥来完成的。如果这个编号等于127，则说明加
而0~6位则构成了一个密钥编号。如果这个编号是一个0~9的数字，则说明加密工作是用服
结果字符串的第一个字节能让我们知道字符串是如何加密的。这个字节的第7位会被置位，
用 DES 密钥文件里的第一个密钥来进行加密。（它并不一定等同于将key_num参数设置
这种情况下，加密密钥会从该条目获得。如果没有指定key_str或key_num参数，则会
key_num参数，则它应该是一个0~9的整数，表示服务器DES密钥文件里的条目编号。
如果给出了keY_Str 参数，DES_ENCRYPT（）函数就将把它用作加密密钥。如果给出
DES_ENCRYPT（）将返回NULL。
可以用DES_DECRYPT（）函数解密。如果系统上没有启用SSL支持功能或者加密操作失败，
采用 DES 加密对字符串 str 进行加密，返回一个二进制串的加密结果。本函数的加密结果
只有拥有SUPER权限的用户才能使用单参数的DES_DECRYPT（）函数。
符串str的第一个字节的第7位未被置位，则会出现这种情况。）
如果 str看起来不像个加密串，则 DES_DECRYPT（）会原样返回该字符串。（例如，如果字
节的第 0~6位来确定。该密钥文件的位置由服务器启动时使用的--des-key-file 选项指
务器的DES密钥文件里的密钥来解密该字符串。密钥编号将根据该加密字符串的第一个字
如果指定了key_str参数，则它会被用作解密密钥；否则，DES_DECRYPT（）函数将使用服
SSL支持功能或者解密操作失败，DES_DECRYPT（）将返回NULL。
对用DES_ENCRYPT（）函数进行加密而得到的二进制串str进行解密。如果系统上没有启用
DECODE(ENCODE(*secret',scramble'),'scramble')
结果字符串；如果字符串Str为NULL，则返回NULL。
给定调用 ENCoDE（）后得到的加密字符串 str，用密钥字符串 key_str对其进行解密。返回
0时。）
NULL。
把参数字符串的压缩版本按二进制串格式返回；如果没有用压缩库编译服务器，则返回
定。
→'secret
C.2函数
599
使
在
---
## Page 620
600
SHA2(str,hash_length)
SHA1(str)
PASSWORD(str)
OLD_PASSWORD(str)
MD5(str)
ENCRYPT(str[,salt])
此函数和 SHA1（）函数相似，但安全性更高。它会计算第一个参数的散列值，而结果值的位
SHA1（）比MD5（）更安全，但是没有 SHA2（)安全。
NULL，那么返回值也将是NULL。请参考本节引言里关于字符串返回类型的那部分内容。
验和。这个返回值是由 40个十六进制数字构成的一个非二进制串；但如果字符串str 为
返回用安全散列算法（SecureHashAlgorithm，SHA）为字符串str生成的一个160位的校
函数将返回同样的值。
4.1版之前的散列算法而得到的密码。在这种情况下，PASSWORD（）函数和OLD_PASSWORD（）
如果系统变量old_passwords的值为1，则PASSWORD（）函数返回的是一个使用MySQL
的是后一种加密效果，就应该使用ENCRYPT（）函数。
PASSWORD（）函数所使用的算法与Unix用来加密账户密码的算法是不一样的。如果你想要
样。这是一个不可逆的加密过程。请参考本节引言里关于字符串返回类型的那部分内容。
返回根据字符串 str计算出来的一个加密密码字符串，其形式与MySQL 权限表里使用的一
考本节引言里关于字符串返回类型的那部分内容。
SHA1('secret)
PASSWORD('seCret')
此函数返回的是 PASSWORD（）所返回的那个加密密码值的MySQL4.1以前的版本格式。请参
SHA(str)
MD5('secret')
那么返回值也将是NULL。请参考本节引言里关于字符串返回类型的那部分内容。
和。这个返回值是由32个十六进制数字构成的一个非二进制串；如果字符串 str为NULL，
返回用RSADataSecurity,Inc.的MD5消息摘要算法为字符串str生成的一个128位的校验
节解释为参数终止符，但是这些字符集允许字符串里出现NUL。
str不应该是字符集 ucs2、utf16、utf16le或utf32 里的字符串。crypt（)会将 NUL字
远是NULL。
个字符加密。如果你的系统上没有crYpt（）或者它不可用，ENCRYPT（）函数的返回值将永
crypt（)的各项规定也同样适用于它。特别地，在某些系统上，crypt（）只对字符串的前8
ENCRYPT（）函数使用Unix操作系统的底层crYpt（）系统调用来完成加密操作，所以针对
ENCRYPT('secret')
ENCRYPT('secret','AB')
却不相同。
的。如果不带salt参数，MySQL将使用随机值，同样的 ENCRYPT（）函数调用产生的结果
串。对于一个给定的 salt 值，不管你对字符串 str 进行多少次加密，其结果都将是一样
不可逆的加密过程。salt参数（如果给出的话）必须是一个由两个或更多字符组成的字符
返回字符串 str 的加密结果字符串；如果输入参数中有 NULL 值，则返回 NULL。这是一个
加密结果可以用DECODE（）函数和同一个密钥解密为原先的字符串。
ENCRYPT
附录C操作符与函数参考
'secret')
AB*)
→'e5e9fa1ba31ecd1ae84f75caaa474f3a663f05f4'
→'5ebe2294ecd0e0f08eab7690d2a6ee69'
→
Hyx4rhb7Qdvpk
'ABS5SGh1EL6bk
'ByUthKNv3.LsE
---
## Page 621
以给表里的行设置一个建议性锁，让应用程序根据其状态去协调对该行的操作。
议性锁的名字，根据该建议性锁的状态去判断能否安全地进行与该名字相关的操作。例如，我们可
就能成功获得这个锁；否则，客户端2会失败。
的倒计时时间结束。如果客户端1在客户端2的倒计时时间结束前释放这个建议性锁，那么客户端
户端2试图锁定同一个字符串时，客户端2将被阻塞，直到客户端1释放这个建议性锁或是客户端
多线程客户端而言，就是其他线程）锁定该名字。假设客户端1已经锁定了字符串"Nellie'。当客
的——它只是让其他合作客户端能够通过它来确定建议性锁定是否在生效。
它在被释放之前将一直发挥效力。
导致锁定失败，则返回0；如果发生错误，则返回NULL。
参数是超时值，单位为秒。如果在超时时间内成功地获得锁，则GET_LOCK（）将返回1；如果因超时
的状态。
私有的，只能由当前拥有它的那个客户端来释放；但也是全局性的，任何客户端都可以查询锁名
LOCK（），分别用于查询锁的状态和确定哪个客户端拥有指定的锁。
RELEASE_LOCK（），分别用于获得锁和释放锁。另外两个函数是IS_FREE_LOCK（）和IS_USED
可用于编写根据某个商定好的锁名的状态协同操作的应用程序。基础函数是GET_LOCK（）和
C.2.8
因为两个会话不能同时锁定同一个字符串，我们就可以在应用程序里把一个字符串用作某个建
已经获得建议性锁的客户端将阻止其他客户端（对一个与MySQL服务器同时建立了多个会话的
timeout参数值是尝试获得建议性锁的等待时间，而不是锁的持续时间。在获得建议性锁之后，
从本质上讲，建议性锁定只是让你锁定的一个名字，它仅仅是一个字符串而已。建议性锁是
如果锁释放成功，则 RELEASE_LOCK（）函数会返回1；如果锁属于另一个会话，则返回O；如果
如果想显式地释放某个锁，可以在调用RELEASE_LOCK（）函数时带上锁名：
建议性锁只作用于字符串名字本身。它不锁定数据库、表或表里的行或列。换句话说，建议性
本节里的各个函数实现的是建议性（advisory）锁定，也被称作协同（cooperative）锁定。它们
RELEASE_LOCK('Nellie')
GET_LOCK（'Nellie*,10)
下面的调用将尝试获得一个名为'Nellie'的建议性锁，最多等待10秒的时间：
口
UNCOMPRESS(str)
给定一个用COMPRESS（）函数压缩而来的字符串，此函数将返回其原始未压缩字符串的长
UNCOMPRESSED_LENGTH(str)
数库包括进去，它将返回NULL。
串。如果参数不是一个压缩字符串，
给定一个用COMPRESS（）函数压缩而来的字符串，UNCOMPRESS（）函数将返回其原始字符
SHA2（）是在 MySQL 5.5.5里引入的。
建议性锁定函数
度
SHA2('secret',224)
效，则结果为NULL。请参考本节引言里关于字符串返回类型的那部分内容。
十六进制数字表示的具有指定位长度的非二进制串。如果参数为 NULL，或者散列值长度无
度。如果在编译服务器时没有把支持压缩功能的函数库包括进去，它将返回NULL。
95c7fbca92ac5083afda62a564a3d014fc3b72c9140e3cb99ea6bf12
或是在编译MySQL服务器时没有把支持压缩功能的函
C.2
函数
601
是
2
2
---
## Page 622
种形式。
C.2.9
会锁定它，这意味着你必须适时发出RELEASE_LOCK（）调用。
需等待。不过，这个简便方法有一个副作用：如果那个字符串当前未被锁定，那么你发出的调用就
长的客户端会话由于不活动而超时，那么服务器会释放其占有的所有锁。
也是如此。当客户端与服务器之间的会话终止时，锁也会被释放掉。因此，如果某个运行时间非常
调用时，它当前持有的锁将自动释放。此时，在新锁获得之前，旧锁会被释放；即使锁名完全一样，
锁不存在，则返回NULL。
602
本节的这些函数主要用于处理和测试IP地址，其中包括IPv4和 IPv6（自MySQL5.6.3起）两
每个客户端会话一次只能锁定一个字符串，所以当持有某个锁的客户端发出另一个GET_LOCK（）
INET_NTOA(n)
 INET_ATON(Str)
RELEASE_LOCK(str)
 IS_USED_LOCK(str)
IS_FREE_LOCK(str)
 GET_LocK(str, timeout)
如果锁名参数为NULL，那么所有的建议性锁定函数都将返回 NULL。
还可以使用GET_LOCK（str,O），通过简单的轮询来迅速确定str是否已被锁定，这个过程无
口
口调用IS_FREE_LOCK(str)函数。如果指定的名字未被锁定，则返回1；如果已锁定，则返
如果想测试锁名的状态，可以使用以下两种方法。
INET_NTOA(2130706433）
串；如果参数非法，则返回NULL。
如果用网络字节序给定整数形式的IPv4地址，则返回相应的用点分四组表示法表示的字符
INET_ATON('wwW.mySql.com')
序；如果参数不是一个有效的 IPv4地址，则返回 NULL。
如果用点分四组表示法给定字符串形式的IPv4地址，则返回相应的整数形式的网络字节
INET_NTOA(1075594054)
则返回0；如果该锁不存在，
释放str指定的那个建议性锁。如果释放成功，则返回l；如果该锁正由另一个会话占用，
NULL。
如果某个客户端正占用锁 str，
回0；如果发生错误，返回NULL。
检查以str为名的建议性锁的状态。如果该名字可被锁定，则返回1；如果已被锁定，则返
误，则返回NULL。
功地获得锁，则GET_LOCK（）返回1；如果因超时导致锁定失败，则返回O；如果发生错
在 timeout 秒的超时时间内，以 str字符串为名请求一个建议性锁。如果在超时时间内成
ID。如果不存在该锁，则返回NULL。
调用IS_USED_LOCK(str)函数。如果某个客户端正占用该锁名，则返回该客户端的连接
INET_ATON('256.255.255.255)
INET_ATON(255.255.255.255）
INET_ATON(*64.28.67.70)
IP地址函数
回0；如果发生错误，则返回NULL。
附录C操作符与函数参考
，则返回NULL。
，则返回该客户端的连接ID；如果不存在该锁，则返回
→1075594054
'64.28.67.70
NULL
NULL
4294967295
---
## Page 623
提取文本；另一个用于把XML片段中的匹配元素替换为另一个字符串，并返回替换结果。这些XML
C.2.10XML函数
本节介绍的函数可用于处理表示XML片段的字符串和XPath表达式：一个用于从XML片段里
 IS_IPV6(expr)
IS_IPV4_COMPAT(expr)
IS_IPV4(expr)
INET6_NTOA(eXpr)
INET6_ATON(expr)
IS_IPV6()是在MySQL5.6.3里引I入的。
IS_IPV6(*192.168.10.14')
IS_IPV6(::1')
会返回0。
如果参数是一个有效的IPv6地址字符串，则返回1；否则，返回0。对于IPv4地址，此函数
IS_IPV4_COMPAT()和 IS_IPV4_MAPPED()是在 MySQL 5.6.3 里引I入的。
IS_IPV4_MAPPED(INET6_ATON(*::ffff:192.168.10.14))
IS_IPV4_MAPPED（INET6_ATON('::1'))
IS_IPV4_COMPAT(INET6_ATON('::ffff:192.168.10.14'))
或：：ffff:ipv4_addr。
返回1；否则，返回0。兼容IPv4或IPv4映射的地址格式分别为：:ipv4_addr
确定参数表示的是否是一个有效的IPv4映射的IPv6地址字符串。如果确实如此，则它们会
制串。前者用于确定参数表示的是否是一个有效的兼容IPv4的IPv6地址字符串；后者用于
这些函数可用于解释与INET6_ATON（）的返回值形式相同的IPv6地址，即数字形式的二进
IS_IPV4_MAPPED(expr)
IS_IPV4（)是在MySQL5.6.3里引I入的。
IS_IPV4(*::1')
如果参数是一个有效的IPv4地址字符串，则返回1；否则，返回0。
INET6_NTOA(）是在MySQL5.6.3里引I入的。
法，则返回NULL。
如果用二进制串给出数字形式的 IPv6或IPv4地址，则返回相应的字符串表示；如果参数非
IS_IPV4_MAPPED(INET6_ATON(*::192.168.10.14'))
IS_IPV4_COMPAT(INET6_ATON(::192.168.10.14'))
IS_IPV4_COMPAT（INET6_ATON('::1'))
IS_IPV4(*192.168.10.14)
INET6_NTOA（INET6_ATON(::1*))
INET6_ATON（）是在MySQL5.6.3里引入的。
HEX(INET6_ATON(*192.168.10.14))
HEX(INET6_ATON(*::1'）)
分别对应于IPv6地址或IPv4地址。如果要将结果转换为可打印形式，可以使用HEX（）。
如果参数非法，则返回NULL。对于返回的非NULL值，其类型为VARINARY（16)或VARINARY（4），
如果以字符串形式给定IPv6或IPv4地址，则以二进制串的形式返回相应的网络字节序的数字值；
INET6_NTOA(INET6_ATON('192.168.10.14')）
TOO00000000000000000000000000000：一
COA80A0E
一
→0
1
一
192.168.10.14
C.2函数
603
---
## Page 624