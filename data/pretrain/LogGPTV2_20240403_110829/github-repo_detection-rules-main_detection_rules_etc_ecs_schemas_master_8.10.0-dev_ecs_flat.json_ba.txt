{"process.user.id": {"dashed_name": "process-user-id", "description": "Unique identifier of the user.", "example": "S-1-5-21-202424912787-2692429404-2351956786-1000", "flat_name": "process.user.id", "ignore_above": 1024, "level": "core", "name": "id", "normalize": [], "original_fieldset": "user", "short": "Unique identifier of the user."}}
{"process.user.name": {"dashed_name": "process-user-name", "description": "Short name or login of the user.", "example": "a.einstein", "flat_name": "process.user.name", "ignore_above": 1024, "level": "core", "multi_fields": [{"flat_name": "process.user.name.text", "name": "text", "type": "match_only_text"}], "name": "name", "normalize": [], "original_fieldset": "user", "short": "Short name or login of the user."}}
{"process.vpid": {"dashed_name": "process-vpid", "description": "Virtual process id.\nThe process id within a pid namespace. This is not necessarily unique across all processes on the host but it is unique within the process namespace that the process exists within.", "example": 4242, "flat_name": "process.vpid", "format": "string", "level": "core", "name": "vpid", "normalize": [], "short": "Virtual process id.", "type": "long"}}
{"process.working_directory": {"dashed_name": "process-working-directory", "description": "The working directory of the process.", "example": "/home/alice", "flat_name": "process.working_directory", "ignore_above": 1024, "level": "extended", "multi_fields": [{"flat_name": "process.working_directory.text", "name": "text", "type": "match_only_text"}], "name": "working_directory", "normalize": [], "short": "The working directory of the process."}}
{"registry.data.bytes": {"dashed_name": "registry-data-bytes", "description": "Original bytes written with base64 encoding.\nFor Windows registry operations, such as SetValueEx and RegQueryValueEx, this corresponds to the data pointed by `lp_data`. This is optional but provides better recoverability and should be populated for REG_BINARY encoded values.", "example": "ZQBuAC0AVQBTAAAAZQBuAAAAAAA=", "flat_name": "registry.data.bytes", "ignore_above": 1024, "level": "extended", "name": "data.bytes", "normalize": [], "short": "Original bytes written with base64 encoding."}}
{"registry.data.strings": {"dashed_name": "registry-data-strings", "description": "Content when writing string types.\nPopulated as an array when writing string data to the registry. For single string registry types (REG_SZ, REG_EXPAND_SZ), this should be an array with one string. For sequences of string with REG_MULTI_SZ, this array will be variable length. For numeric data, such as REG_DWORD and REG_QWORD, this should be populated with the decimal representation (e.g `\"1\"`).", "example": "[\"C:\\rta\\red_ttp\\bin\\myapp.exe\"]", "flat_name": "registry.data.strings", "level": "core", "name": "data.strings", "normalize": ["array"], "short": "List of strings representing what was written to the registry.", "type": "wildcard"}}
{"registry.data.type": {"dashed_name": "registry-data-type", "description": "Standard registry type for encoding contents", "example": "REG_SZ", "flat_name": "registry.data.type", "ignore_above": 1024, "level": "core", "name": "data.type", "normalize": [], "short": "Standard registry type for encoding contents"}}
{"registry.hive": {"dashed_name": "registry-hive", "description": "Abbreviated name for the hive.", "example": "HKLM", "flat_name": "registry.hive", "ignore_above": 1024, "level": "core", "name": "hive", "normalize": [], "short": "Abbreviated name for the hive."}}
{"registry.key": {"dashed_name": "registry-key", "description": "Hive-relative path of keys.", "example": "SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\winword.exe", "flat_name": "registry.key", "ignore_above": 1024, "level": "core", "name": "key", "normalize": [], "short": "Hive-relative path of keys."}}
{"registry.path": {"dashed_name": "registry-path", "description": "Full path, including hive, key and value", "example": "HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\winword.exe\\Debugger", "flat_name": "registry.path", "ignore_above": 1024, "level": "core", "name": "path", "normalize": [], "short": "Full path, including hive, key and value"}}
{"registry.value": {"dashed_name": "registry-value", "description": "Name of the value written.", "example": "Debugger", "flat_name": "registry.value", "ignore_above": 1024, "level": "core", "name": "value", "normalize": [], "short": "Name of the value written."}}
{"related.hash": {"dashed_name": "related-hash", "description": "All the hashes seen on your event. Populating this field, then using it to search for hashes can help in situations where you're unsure what the hash algorithm is (and therefore which key name to search).", "flat_name": "related.hash", "ignore_above": 1024, "level": "extended", "name": "hash", "normalize": ["array"], "short": "All the hashes seen on your event."}}
{"related.hosts": {"dashed_name": "related-hosts", "description": "All hostnames or other host identifiers seen on your event. Example identifiers include FQDNs, domain names, workstation names, or aliases.", "flat_name": "related.hosts", "ignore_above": 1024, "level": "extended", "name": "hosts", "normalize": ["array"], "short": "All the host identifiers seen on your event."}}
{"related.ip": {"dashed_name": "related-ip", "description": "All of the IPs seen on your event.", "flat_name": "related.ip", "level": "extended", "name": "ip", "normalize": ["array"], "short": "All of the IPs seen on your event.", "type": "ip"}}
{"related.user": {"dashed_name": "related-user", "description": "All the user names or other user identifiers seen on the event.", "flat_name": "related.user", "ignore_above": 1024, "level": "extended", "name": "user", "normalize": ["array"], "short": "All the user names or other user identifiers seen on the event."}}
{"rule.author": {"dashed_name": "rule-author", "description": "Name, organization, or pseudonym of the author or authors who created the rule used to generate this event.", "example": "[\"Star-Lord\"]", "flat_name": "rule.author", "ignore_above": 1024, "level": "extended", "name": "author", "normalize": ["array"], "short": "Rule author"}}
{"rule.category": {"dashed_name": "rule-category", "description": "A categorization value keyword used by the entity using the rule for detection of this event.", "example": "Attempted Information Leak", "flat_name": "rule.category", "ignore_above": 1024, "level": "extended", "name": "category", "normalize": [], "short": "Rule category"}}
{"rule.description": {"dashed_name": "rule-description", "description": "The description of the rule generating the event.", "example": "Block requests to public DNS over HTTPS / TLS protocols", "flat_name": "rule.description", "ignore_above": 1024, "level": "extended", "name": "description", "normalize": [], "short": "Rule description"}}
{"rule.id": {"dashed_name": "rule-id", "description": "A rule ID that is unique within the scope of an agent, observer, or other entity using the rule for detection of this event.", "example": 101, "flat_name": "rule.id", "ignore_above": 1024, "level": "extended", "name": "id", "normalize": [], "short": "Rule ID"}}
{"rule.license": {"dashed_name": "rule-license", "description": "Name of the license under which the rule used to generate this event is made available.", "example": "Apache 2.0", "flat_name": "rule.license", "ignore_above": 1024, "level": "extended", "name": "license", "normalize": [], "short": "Rule license"}}
{"rule.name": {"dashed_name": "rule-name", "description": "The name of the rule or signature generating the event.", "example": "BLOCK_DNS_over_TLS", "flat_name": "rule.name", "ignore_above": 1024, "level": "extended", "name": "name", "normalize": [], "short": "Rule name"}}
{"rule.reference": {"dashed_name": "rule-reference", "description": "Reference URL to additional information about the rule used to generate this event.\nThe URL can point to the vendor's documentation about the rule. If that's not available, it can also be a link to a more general page describing this type of alert.", "example": "https://en.wikipedia.org/wiki/DNS_over_TLS", "flat_name": "rule.reference", "ignore_above": 1024, "level": "extended", "name": "reference", "normalize": [], "short": "Rule reference URL"}}
{"rule.ruleset": {"dashed_name": "rule-ruleset", "description": "Name of the ruleset, policy, group, or parent category in which the rule used to generate this event is a member.", "example": "Standard_Protocol_Filters", "flat_name": "rule.ruleset", "ignore_above": 1024, "level": "extended", "name": "ruleset", "normalize": [], "short": "Rule ruleset"}}
{"rule.uuid": {"dashed_name": "rule-uuid", "description": "A rule ID that is unique within the scope of a set or group of agents, observers, or other entities using the rule for detection of this event.", "example": 1100110011, "flat_name": "rule.uuid", "ignore_above": 1024, "level": "extended", "name": "uuid", "normalize": [], "short": "Rule UUID"}}
{"rule.version": {"dashed_name": "rule-version", "description": "The version / revision of the rule being used for analysis.", "example": 1.1, "flat_name": "rule.version", "ignore_above": 1024, "level": "extended", "name": "version", "normalize": [], "short": "Rule version"}}
{"server.address": {"dashed_name": "server-address", "description": "Some event server addresses are defined ambiguously. The event will sometimes list an IP, a domain or a unix socket.  You should always store the raw address in the `.address` field.\nThen it should be duplicated to `.ip` or `.domain`, depending on which one it is.", "flat_name": "server.address", "ignore_above": 1024, "level": "extended", "name": "address", "normalize": [], "short": "Server network address."}}
{"server.as.number": {"dashed_name": "server-as-number", "description": "Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet.", "example": 15169, "flat_name": "server.as.number", "level": "extended", "name": "number", "normalize": [], "original_fieldset": "as", "short": "Unique number allocated to the autonomous system.", "type": "long"}}
{"server.as.organization.name": {"dashed_name": "server-as-organization-name", "description": "Organization name.", "example": "Google LLC", "flat_name": "server.as.organization.name", "ignore_above": 1024, "level": "extended", "multi_fields": [{"flat_name": "server.as.organization.name.text", "name": "text", "type": "match_only_text"}], "name": "organization.name", "normalize": [], "original_fieldset": "as", "short": "Organization name."}}
{"server.bytes": {"dashed_name": "server-bytes", "description": "Bytes sent from the server to the client.", "example": 184, "flat_name": "server.bytes", "format": "bytes", "level": "core", "name": "bytes", "normalize": [], "short": "Bytes sent from the server to the client.", "type": "long"}}
{"server.domain": {"dashed_name": "server-domain", "description": "The domain name of the server system.\nThis value may be a host name, a fully qualified domain name, or another host naming format. The value may derive from the original event or be added from enrichment.", "example": "foo.example.com", "flat_name": "server.domain", "ignore_above": 1024, "level": "core", "name": "domain", "normalize": [], "short": "The domain name of the server."}}
{"server.geo.city_name": {"dashed_name": "server-geo-city-name", "description": "City name.", "example": "Montreal", "flat_name": "server.geo.city_name", "ignore_above": 1024, "level": "core", "name": "city_name", "normalize": [], "original_fieldset": "geo", "short": "City name."}}
{"server.geo.continent_code": {"dashed_name": "server-geo-continent-code", "description": "Two-letter code representing continent's name.", "example": "NA", "flat_name": "server.geo.continent_code", "ignore_above": 1024, "level": "core", "name": "continent_code", "normalize": [], "original_fieldset": "geo", "short": "Continent code."}}
{"server.geo.continent_name": {"dashed_name": "server-geo-continent-name", "description": "Name of the continent.", "example": "North America", "flat_name": "server.geo.continent_name", "ignore_above": 1024, "level": "core", "name": "continent_name", "normalize": [], "original_fieldset": "geo", "short": "Name of the continent."}}
{"server.geo.country_iso_code": {"dashed_name": "server-geo-country-iso-code", "description": "Country ISO code.", "example": "CA", "flat_name": "server.geo.country_iso_code", "ignore_above": 1024, "level": "core", "name": "country_iso_code", "normalize": [], "original_fieldset": "geo", "short": "Country ISO code."}}
{"server.geo.country_name": {"dashed_name": "server-geo-country-name", "description": "Country name.", "example": "Canada", "flat_name": "server.geo.country_name", "ignore_above": 1024, "level": "core", "name": "country_name", "normalize": [], "original_fieldset": "geo", "short": "Country name."}}
{"server.geo.location": {"dashed_name": "server-geo-location", "description": "Longitude and latitude.", "example": "{ \"lon\": -73.614830, \"lat\": 45.505918 }", "flat_name": "server.geo.location", "level": "core", "name": "location", "normalize": [], "original_fieldset": "geo", "short": "Longitude and latitude.", "type": "geo_point"}}