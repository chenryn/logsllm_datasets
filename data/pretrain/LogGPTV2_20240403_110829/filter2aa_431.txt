Drones Hijacking 
Aaron Luo
Cyber Safety Solution
multi-dimensional attack vectors 
and 
countermeasures
Agenda
• Introduce the drone architecture
• Vulnerabilities on which component?
• Demo
• Provide the prevention solution
• Release attack/defense tools on GitHub.
Today, our target is…
DJI-Phantom 3 Advanced
DJI Phantom 3A Architecture
• Drone
– Flight controller
•2.4GHz radio module
•GPS module
•Sensors (compass, Gyroscope, Accelerometer, Barometer…etc.)
•Micro-USB Slug (flight simulating program need this to connect)
•MicroSD Slug (firmware updated usage and photo storage)
– Other Parts(battery, screw propeller, camera, gimbals, pilot lamp)
• Remote Controller
– 2.4GHz radio module
– USB Slug (I/O function with phone’s App)
– Micro-USB Slug (firmware update usage)
– Other Parts (Joystick, button, lights)
• App/SDK
– Connect to Remote Control, display drone information 
(like image of camera, GPS data and Compass)
– Operator Drone (drone takeoff, Automatic return)
DJI Phantom 3A Architecture
• Drone
– Flight controller
•2.4GHz radio module
•GPS module
•Sensors (compass, Gyroscope, Accelerometer, Barometer…etc.)
•Micro-USB Slug (flight simulating program need this to connect)
•MicroSD Slug (firmware updated usage and photo storage)
– Other Parts(battery, screw propeller, camera, gimbals, pilot lamp)
• Remote Controller
– 2.4GHz radio module
– USB Slug (I/O function with phone’s App)
– Micro-USB Slug (firmware update usage)
– Other Parts (Joystick, button, lights)
• App/SDK
– Connect to Remote Control, display drone information 
(like image of camera, GPS data and Compass)
– Operator Drone (drone takeoff, Automatic return)
DJI App/SDK Flow Chart
Crack the SDK Authentication Mechanism
• Download SDK from DJI website
• Find key function with JD-GUI
Crack the SDK Authentication Mechanism
• Use JBE - Java Bytecode Editor to patch the code
Crack the SDK Authentication Mechanism
• Check the result with JD-GUI
DEMO
Connect to Drone by Cracked SDK 
DEMO
Take off/Landing
DEMO
Fly to specified location
How to prevent/improve ?
• Protect library file by obfuscator/packer
• Use asymmetric encryption to validate the SDK authentication 
key between App and Drone and Server, not only just 
validate from App and Server
Next section:
Firmware Analysis
Firmware Analysis
• Use the “Binwalk” can extract some data, but it is limited.
Firmware Analysis
• Use IDA Pro to analyze the incomplete data extracting by 
the Binwalk
• Use String Reference to find the key function
Firmware Analysis
• Disassemble and writing the parser
• Finally we can extract each firmware module with 
detailed information
Firmware Analysis
Firmware Analysis
• Extract UBI file system from PFC300SFw3.bin
Firmware Analysis
• extract some interesting things from file system (for 
example, ssh key data and configuration, 
/etc/shadow…etc.)
How to prevent/improve ?
• Encrypt the firmware binary, the encryption key storage on 
hardware, but still need extra careful about storage place 
must be safety, and the side channel attack.
Next section:
Radio Signal Analysis
Radio Signal Analysis
• How to?
• Buy the SDR (software-defined radio)
Radio Signal Analysis
P3A use two modulation/demodulation 
to transfer data with 2.4GHz ISM band
RC to Drone radio spectrum (FHSS)
• Control drone direction (up down left right)
• Frequency 2.400~2.483GHz, each channel about 1MHz
DSSS - Drone to RC radio spectrum
• For drone to remote controller image transmission
• Frequency 2.4015~2.4815 GHz
• split into 6 channels, each channel is about 10MHz
Finally we found…
• Images have no checksum mechanism, so we can jamming 
the radio frequency to show wrong image to controller  
DEMO
How to prevent/improve ?
• Validate the image checksum
• Transfer the image data by asymmetric encryption (but it 
need more performance, in this case I think just add the 
checksum is enough, because reverse the 
modulation/demodulation are difficult)
Next section:
GPS Modules
GPS Modules
• GPS Modules is general way to hijacking the drone
• The GPS for commercial protocol (C/A code) is open and 
not encrypt, so attacker can easily to fake this
Which function is associate with GPS?
• No-fly zone
• Return to home
• Follow me
• Waypoint
How to spoof the GPS location?
• There have a good open-source GPS simulator in GitHub, 
called gps-sdr-sim, but it have some limitation, before you 
want fake a location, should wait for few minutes to 
generate the I/Q data
• So we improve the code, let it can in real-time generate 
GPS signal and can be controlled with the joystick.
DEMO
Control GPS by Joystick
DEMO
Force landing the drone by no-fly zone
DEMO
Hijacking Drone by Joystick
How to detect the fake GPS signal?
• Validate the GPS sub-frame data
How to detect the fake GPS signal?
• Validate the time between satellite time and real time
How to detect the fake GPS signal?
• Check the motion speed between point to point
• For example it is impossible to change your location from Taiwan 
to Las vegas in one second
Develop the fake GPS detector
• Board: RaspberryPI
• GPS modules: u-blox
DEMO
Detect Fake GPS Signal
DEMO
Catch The Bad Guys
Conclusion
• Developer should know about the risks of each component.
Acknowledge
• Trend Micro
• All the Cyber Safety Solution partners
• All the support of my friends
Thank You!
If you have any question, please mail to
PI:EMAIL
GitHub: Aaron-Luo