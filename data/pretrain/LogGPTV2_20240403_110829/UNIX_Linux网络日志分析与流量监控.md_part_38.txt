---
## Page 220
服务器。
了故障。
事件背景
小林的服务器出现了什么问题，又是在何时被攻击的？
何内容，而且伴随着Nmap 输出了一些奇怪的端口，服务器CPU 利用率居高不下。你知道
这引起了他的高度重视。可是在系统日志中并无异常，唯独/var/log/secure日志没有记录任
任临时管理员。
极为有用的。在主要员工发生变化时，作为权宜之计，这个人能够在新的管理员到来之前担
任老管理员职责的员工提供路线图。最后，让一个职员接受公司核心软件维护的基础培训是
个外部团队来进行安全审计。为进行计算机维护的员工建立严格的文档需求，可以为那些接
门访问，或者忽略为已知的安全问题打补丁。在这些情况中，发现问题的唯一途径是雇佣一
个公司安全计划的必不可少的部分。
一份全面的磁带备份就足够了，没有必要完全复制一个系统。备份和数据恢复计划应该是
键型的，因此他们维护了一个完全的系统镜像。这种备份方法虽然不是没有听说过，不过留
成。就像我们在这个案例中看到的一样，系统设计师认为他们的数据和处理时间都是任务关
统故障或者类似的破坏性事件中，一套好的备份能够将一星期的工作量在两个小时之内完
个管理员的权力。不管怎样，解决安全问题的方法之一是好的备份。在受破坏、灾难性的系
预防措施
的结论是/etc/passwd和/etc/shadow文件是由手工编辑的，没有通过标准的账号管理程序。
段是一样的。不可能有同样的口令得到同样的散列码的情况。在这个例子中，唯一能够得到
标识为备份，是晚些时候插入的。我们还知道这两个账号有同样的密码，因为口令的散列字
小林是某企业网络运行中心（NOC）的一名普通系统管理员，他的工作就是维护Linux
下面将讲述一起真实的Linux 被攻击的案例，网管小林亲身经历了此次事件并最终解决
6.8案例九：为 rootkit 把脉
故事人物：小林（网管）
难度系数：★★★★★
管理员小林在一次系统巡检中发现了系统中的xinetd.conf文件出现了一个奇怪的记录，
。尽管数据可能是安全的，但是一个恶意的管理员可能给系统引入漏洞，以便以后通过后
为防止因单个员工离开而对整个计算机基础设施产生影响，可以制定一些计划来限制单
最后一个后门似乎是以crontab文件形式出现的，它是最近编辑的：
root 账号的UID 是0，永远都是这样，没有其他账号有这样的用户 ID号。第二个账号
一天，他在配置一个网络服务时，注意到一台Linux主机的Internet守护进程的配
2153521-r--1root other28Nov414:11/var/spool/cron/crontabs/root
2152361 drwxr-xr-x2root sys512Nov414:11/var/spool/cron/crontabs
backup:cDc703sQxk..M:11980:
第6章UNIX后门与溢出案例分析197
---
## Page 221
lsof程序，列出在此系统中打开着的传输层网络文件描述。
的交换机上。在笔记本上进行了一次nmap扫描：
tcpdump保存这些行为的数据，并允许从网络外部对这些流量进行更加详细的分析。
到。从这一点看，小林确信他的系统已被攻击了，但是他仍然不清楚怎么回事。
知道在那段时间里他曾经使用了这个系统。我们知道，删除日志需要系统的root权限才能办
中没有任何登录记录。这段时间是周一到周五，是工作时间，没有日志显然不可能，而小林
/log/secure日志时发现了一件事非常可疑：从5月9日到5月13日期间，在/var/log/secure
在这些文件里没有发现任何未授权的登录。小林这时越来越摸不着头脑了。当他查看到/var
配置究竟是怎么回事呢？
排除了rootkit。既然这些程序没有问题，那么CPU的利用率超高，还有那行额外的xinetd
对比了这些程序的 MD5 校验和，发现竟然与正常Linux 计算机系统上的程序相同，这似乎
认为这些程序可能有问题。假如这台计算机被攻击的话，这些文件将是第一批被篡改的。
的利用率。细心的小林没有忽略这一差异。
察处理器利用率，发现CPU利用率达到了100%。同时他也运行了top程序，报告只有90%
林明白肯定有人改过该文件。
安装的，除了IP 和MAC 地址不同其他配置都一样。他在xinetd.conf中没有查到这一行。小
机，所以他又去查了一下另外一个RedHat 系统，那个系统是他用同一张光盘（RHAS5.0）
可疑的/etc/xinetd.conf记录
置文件xinetd.conf末尾出现了一条奇怪的记录，这引起了他的高度警惕。
198UNIX/Linux网络日志分析与流量监控
小林随后又仔细分析了系统日志文件/var/log/messages、/var/log/wtmp和/var/log/lastlog。
，随后他找来了用于网络抓包分析的笔记本电脑。将笔记本电脑接到连接了那台可疑系统
：小林想到以前在交换机上做过SPAN设置，随后去捕获了所有进出系统的网络流量，用
接着他用 netcat 程序将文件 ps、netstat、ls 和 top 从他的计算机复制到另一系统中。他
程序显示了一些他从没见过的端口（3457和32411）。随后他登录进可疑系统，并运行
与此同时他注意到这台计算机风扇转速超高。随后，小林运行了一个CPU监视器来观
小林比较熟悉Linux，他知道这条记录看上去很不寻常。因为机房还有别的Linux主
xinetd.conf配置文件的可疑记录如下：
ope
92.
cnng2), ncH s rliable
ins
SCE
式用
到
他
---
## Page 222
器上的文件。
件回到自己的办公桌。合
管道传送到分析笔记本电脑中并立即刻录到CD上（为了确保完整）。小林拿着这个镜像文
统做了磁盘分区的位镜像复制，并通过dd程序读取复制结果，然后利用netcat 将结果通过
来过滤并显示流经端口32411的TCP流量：
率超高，难道和这些端口有关？难道是遭到DDoS攻击了？带着种种疑问他继续调查下去。
服务一
下面回放一下他是如何完成这一操作的：
一台计算机的过程中，仅仅需要两个工具：Linux下的dd命令和netcat，他对正在运行的系
接着他将已捕获到的流量（tcpdump 日志）从系统中转移至笔记本电脑，并使用ngrep
2）使用dd命令（他的笔记本事先安装好了）。
1）首先在目标服务器上，启动netcat 作为一个监听，并将输出重定向到一个远程服务
这时小林断定某些可怕的事正在发生。在生成一个磁盘的镜像并将其通过网络存放在另
他立即在nmap的输出中发现了一些东西-
rpo
htt
8
0
ndmail
er
在系统内（/etc/service）观察时它们并没有出现。但这些服务是什么呢？CPU利用
#netcat-1-p8089>myimage.dd
2
66
324
1333333
23
521
6
4[AP
器
*
二
11
ST
ST
EN
EN
(LISTI
(LISTEN)
6013007
ISTEN
EN
一在TCP端口3457和32411上监听的两个
第6章UNIX后门与溢出案例分析199
TENOE
AH2
OLODUYEN
20.01
品
---
## Page 223
进制文件，显示如下信息：
面继续分析这个模块，要分析 ipv6.o这个模块最好的工具还是 strings，用 strings 程序观察二
实际上是打开/proc/modules中的模块列表），手工查找/lib/modules/目录下有一个ipv6.o。
后对IPv6这个协议层进行分析。他使用lsmod没有查看到这个模块转载到系统（lsmod命令
事后分析工具）来分析那个系统镜像文件。他知道系统是在5月3日安装的，因此分析的时
性将它们挂载为只读，这样分析系统的文件系统时就可以访问它们了。
脑中的位镜像做了一个有效的备份之后，小林似乎有了头绪。他利用Linux 内核的回环特
具（netcat）。注意，当没有指定输出，那么 dd 将镜像复制到标准输出。在对分析笔记本电
的磁盘，而应通过网络直接输出到我们取证的笔记本上，所以需要输出重定向到另一个工
hash，并将hash 的结果记录到文件mydrivehashes.log 中。
200
间很短，不难测定。确定文件系统的改动相当容易。
随后他通过软件找出了被删除系统日志的文件项，并筛选出如下行：
小林立刻觉得ipv6.o模块非常可疑，因为他知道那台计算机没有使用IPv6协议。他随
随后将这一可疑的镜像文件挂到VMware虚拟机中，使用专用的Coroner工具包（一套
接着用mactime程序进一步分析，显示了如下信息：
细心的读者会发现怎么没有指定输出参数“of=”呢？这时肯定不能输出到本地服务器
conv=noerror表示读取错误时，忽略该错误而不停止复制行为。
split=2G表示将文件分割成多个2GB大小的文件。
解释：hash=sha256 表示使用 SHA256 以每 512MB 为一区段来为驱动器的内容进行
split=2G|nc1.1.1.88089
UNIX/Linux网络日志分析与流量监控
May 10 02:42:54victim rpc.statd[349]:gethostbyname errorforX [buffer overrun shellcode removed]
209 . -rwx--- root root /mount/usr/sbin/initd
May200916:52:127704.a.-rw-r--r-root root/mount/lib/modules/2.6.18-3/net/ipv6.o
May200916:49:47949..c-rwxr-xr-xrootroot/mount/etc/rc.d/rc.local
4096m.cdrwxr-xr-xrootroot/mount/lib/modules/2.6.18-3/net
446592.c-rwxr-xr-xrootroot/mount/dev/ttypq/.../ex
May100916:49:4684688m.c-rw-r--r--rootroot/mount/dev/ttypq/../c4wnf
May100916:49:451491mac-rw-r--rootroot/mount/dev/ttypq/./doop
May 10 09 16:49:26446592 m.-rwxr-xr-x root root/mount/dev/ttypq/../ex
May100915:46:3920452..c-rwxr-xr-xrootroot/mount/bin/login
May100915:46:0531376.a.-rwxr-xr-xrootroot/mount/usr/sbin/in.telnetd
(mactime-Create an AsCII time line of file activity)
- rootroot/mount/usr/sbin/initd
21
---
## Page 224
shell脚本：
的文件进行对比：
根据这一点，他已经有足够的信息来判断这台Linux计算机到底发生了什么。从被删除
他理所当然地检查了二进制文件rpc.status：
任何输出
显然，有一行命令被添加到文件的末尾来启动 initd 程序。initd 程序实际上是一个
他还注意到rc.local文件有一个inode的改动，因此他将这个文件的内容与一个正常系统
2
ogd
6663
/usr/sbin/rpc.status
/dev/null
listen
bind
/sbin/insmod-f /lib/modules/2.6.18/net/ipv6.o>/dev/null 2>/dev/null
#donot edit thefile directly.
#automatic install script to loadkernel modulesforipv6 support.
#cat/usr/sbin/initd
/bin/sh
accept
socket
entervalidIPXaddress:
leetobindshell.
#!/bin/sh
</usr/sbin/initd
(nfsiod)
strings/usr/sbin/rpc.status
36d35
#diffrc.local/etc/rc.d/rc.local
18
1_86
octl
kill
o_forl
nod
e_dirty
第6章UNIX后门与溢出案例分析201
M
*加载ipv6.o模块且不显示
BH
---
## Page 225
骗。
配置实用程序所管理。不幸的是，许多系统管理员不知道怎样验证它的真实性，因而被欺
这个脚本，设计者精心设计并试图让发现它的人认为它是合法的，以为它是由一些操作系统
RedHat系统比较的结果显示，该文件在最后被加了一条命令脚本/usr/sbin/initd。不管谁写了
问题，也不能发觉用于分析系统的标准系统二进制文件校验和有什么变化的原因。
程序。adore 能够隐藏文件、进程和网络连接。这就是系统管理员既无法觉察到明显的系统
名。一个LKM文件包含一些动态可装载内核组件，这些组件常用于异步加载设备和动态的
（32411/tcp，3457/tcp）、一些用户账号名，以及所谓的“混杂模式”显示的情况相符。
rpc.status文件。
文件系统中出现了一些可疑的文件，一些文件被修改了。最值得注意的是 ipv6.o，rc.local 和
开始操作：
从中推断出了大量的系统攻击信息。在第一次攻击发生的数天后，攻击者通过telnet登录并
次使用 TCT 的 mactime 程序（2.2.5 节有相关介绍），打印出了一系列文件的 mactime 值，并
事件分析
互动问答
小林将注意力放到一些关键文件的mactime上。
的。
的日志文件记录中，可以明显地看出：那台故障Linux计算机是于5月10 日凌晨被攻破
202UNIX/Linux网络日志分析与流量监控
下一个要解密的就是rc.local文件，它同时也显示出了inode 的改变。与一个干净的
。当系统重启时，这条木马的LKM就俏无声息地插入了计算机。
LKM是被C 编译器插入的，字符串adore.c 就是可装载内核模块（LKM）的源文件
这时分析重点落在ipv6.o模块的可见字符串上，它们与早前检测到的可疑的端口
mactime 能为故障排查提供详细的信息，能说明文件系统上到底发生了什么事情。他再
检查 rpc.status文件，内容如下：
攻击者在第一次登录1小时之后，建立了一个名为/dev/typq/XXX的目录；其后不久，
通过刚才分析二进制文件 rpc.status，可以确定系统受到了 rpc.statd 溢出漏洞攻击。接着
4.
1.
常用的网络分析器有哪些？
本案例中ipv6.o的作用是什么？
为什么运行本地 Isof没有显示那两个额外的服务，但用nmap 命令却能远程扫描到？
rpc.status的作用是什么？
gdb
entervalidIPXaddress:
lee tobindshell.
May100015:46:3920452-c-rwxr-xr-xrootroot/mount/bin/login
May100015:46:0531376.a.-rwxr-xr-xroot root/mount/usr/sbin/in.telnetd
May 10 02:42:54 victim rpc.statd[349] : gethostbyname error for X [buffer overrun shell code removed]
只