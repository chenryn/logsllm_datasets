title:Browser-Based Intrusion Prevention System
author:Ikpeme Erete
Browser-Based Intrusion Prevention System
Ikpeme Erete
Georgia Institute of Technology
PI:EMAIL
Abstract. This work proposes a novel intrusion prevention technique
that leverages information located in the browser in order to mitigate
client-side web attacks such as login cross-site request forgery, session
hijacking, etc. The browser intrusion prevention system enforces a new
ﬁne-grained policy, which complements the same-origin policy, that re-
stricts interaction between authenticated and unauthenticated regions
of a page or its associated stored data objects. The browser intrusion
prevention system monitors page interactions that occur through script
processing or URL fetches. The outcome of this technique is a system
that can prevent attacks that are perpetuated by exploiting a user’s
browser into making malicious request.
1 Motivation
The Hypertext Transfer Protocol (HTTP) is a generic, stateless protocol, [1] that
maintains no information on a connection between a host and a server. In order
to identify a returning host, web applications use interfaces provided by servers
to implement a session management system. By using HTTP response header
to set state information on a host’s browser and subsequently associating the
state information with a particular host or user at the server side, a web appli-
cation can keep track of user’s activities. This enables a web application on the
server to identify a returning user by extracting the necessary state parameters
from the HTTP request that was generated and sent by the user’s browser on
subsequent visits. It also uses this technique to manage authenticated sessions;
thereby eliminating the need to constantly send authentication credentials such
as username and password, on every request.
Since browsers automatically present “what it knows” to the server as a form
of authentication (i.e. validation or identiﬁcation) attackers have developed ways
of leveraging this to exploit users by exploiting the browser into making malicious
requests on users’ behalf. Attacks such as cross site request forgery, surf jacking,
dynamic pharming [4], have been shown to use this technique to mount a successful
exploit. Most solutions or proposed solutions against such attacks are focused at
the server side [3], while others recommend better browsing habits or changes to
HTTP protocol
[2]. Though these solutions are viable, they are ineﬀecient since
they require the use of additional resources or are long term solutions that may be
implemented in newer browsers. While in the short term, users are continuously
exposed to these attacks. To mitigate these attacks, this work takes advantage of
information stored in browsers to provided the much needed security.
E. Kirda, S. Jha, and D. Balzarotti (Eds.): RAID 2009, LNCS 5758, pp. 371–373, 2009.
c(cid:2) Springer-Verlag Berlin Heidelberg 2009
372
I. Erete
2 Browser-Based Intrusion Prevention System
Websites provide user authentication to protect user’s sensitive data from unau-
thorized accesses. Therefore, successfully exploiting such sites provide high remu-
neration to an attacker since these sites might contain valuable data. Furthermore,
this task is made easier since browsers maintain all the necessary credentials per-
taining to any session including an authenticated session.
The proposed client-side browser intrusion prevention system consist of a pol-
icy and an enforcement mechanism. The policy states that an unauthenticated
page region cannot read or write to an authenticated page region or to its stored
private data. This is a ﬁner grain policy to the same-origin policy, SOP, but it is
not a substitute to SOP since diﬀerent regions could belong to the same-origin.
For example, many web sites use “https” connection during authentication but
immediately revert to “http” connection once the authentication is successful.
Consequently, the policy description and enforcement ensures that the page re-
gion changes once authentication is successful but the origin remains the same.
Therefore, the described policy complements SOP.
The enforcement mechanism detects a change in region when it observes that
a username and password is entered by a user. After which, it associates this
information with the corresponding http-response from the server. If a suc-
cess response, 200 OK, is received, the enforcement mechanism labels the page
as authenticated. When a page and its components (e.g., frames, iframes) are
placed in regions, all cross-regional accesses are monitored by the enforcement
mechanism.
By monitoring these accesses to authenticated regions it is possible to identify
and prevent an attack while accesses to unauthenticated region are permitted
with no checks. In order to properly analyze these accesses all http-request is
monitored and mediated. Each http-request header is examined and all cre-
dentials such as GET/POST destination, session ids, referrer, and cookies are
extracted. Using the retrieved information, the enforcement mechanism deter-
mines the source of the request. Subsequently, it deduces whether the source
of the request is authenticated or unauthenticated. The page region is veriﬁed
in accordance with the proposed policy. If the policy is violated, the request is
blocked, otherwise the enforcement mechanism inspects the session credentials.
The session credentials are inspected for any policy violation and if one is found,
the credentials are ﬁltered. Filtering the session credentials involve eliminating
those credentials that violate the policy from the request, permitting the request
to go through. In likewise manner, page or stored data accesses via scripts are
also mediated in accordance with the policy.
References
1. Hypertext transfer protocol –http/1.1
2. Barth, A., Jackson, C., Mitchell, J.C.: Robust defenses for cross-site request forgery.
In: ACM Conference on Computer and Communications Security (2008)
Browser-Based Intrusion Prevention System
373
3. Jovanovic, N., Kirda, E., Kruegel, C.: Preventing cross site request forgery attacks.
In: Proceedings of the Second IEEE Conference on Security and Privacy in Com-
munications Networks (SecureComm), pp. 1–10 (2006)
4. Karlof, C., Shankar, U., Tygar, J.D., Wagner, D.: Dynamic pharming attacks and
locked same-origin policies for web browsers. In: ACM Conference on Computer and
Communications Security, pp. 58–71 (2007)