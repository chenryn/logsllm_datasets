memories (the per-tile memories). We do this because they
have different critical path distributions. In all cases, the f
for a block is determined by ﬁnding the distribution of the
path delays in the block at VddN OM and then picking, as the
period for the block, the delay at the 3σ of the distribution.
The power of the block is the sum of the static and dynamic
components.
We consider intra-tile variations ﬁrst. In each tile, we
compute the ratio of the frequencies of the fastest and
slowest pipelines in the tile. We then take the average of
the ratios across all tiles (Intra Pipe). We repeat the same
process for local memories in the tile to calculate Intra Mem.
Finally, for the power consumption, we take the power ratio
of highest to lowest consuming pipelines, and highest to
lowest consuming local memories, to compute Intra Pipe
and Intra Mem, respectively.
For inter-tile variations, we measure the ratio of the
frequencies of the fastest and slowest
tile memories on
chip (Inter Mem). We then consider the frequency that
each tile can support (the lowest frequency of its pipelines,
local memories and tile memory), and compute the ratio
of the frequencies of the fastest and slowest tiles (Inter
Pipe+Mem). Finally, we repeat the computations for power
(Inter Mem and Inter Pipe+Mem). We report the mean of
the experiments for 100 chips.
Figure 6 compares these ratios for NTC and STC. Fig-
ure 6(a) shows the f ratios. We observe that the frequency
ratio of the fastest to the slowest blocks is substantially
higher at NTC than at STC — for the same process variation
proﬁle. For example, Inter Pipe+Mem at NTC is 3.7, while
it is only 2.3 at STC (Figure 6(a)). This is because a low
Vdd ampliﬁes the effect of process variations on delay.
Figure 6(b) shows the power ratios. The variation in
total power also increases at NTC. However, the relative
difference in power ratios between NTC and STC is gener-
ally smaller than the relative difference in frequency ratios.
The reason is that power includes both dynamic and static
power, and the ratios for static power are the same for NTC
and STC. Consequently, the relative difference in power
ratios is smaller. Still, the absolute difference is signiﬁcant.
Consequently, the chip is more heterogeneous at NTC.
STC
NTC
5
4
3
y
c
n
y
c
e
n
u
e
u
q
q
e
e
r
r
F
F
r
o
r
o
o
f
f
i
t
i
a
o
R
i
t
a
n
R
M
/
x
n
a
M
M
/
x
a
M
i
2
1
0
5
2
0
2
Intra Pipe Intra Mem Inter Mem Inter Pipe + Mem
Inter Mem Inter Pipe+Mem
Intra Mem
Intra Pipe
(a) Frequency
STC
NTC
i
t
f
r
r
e
e
w
w
o
P
o
r
P
o
o
r
o
a
f
R
o
n
i
t
M
a
/
R
x
a
M
n
M
/
x
a
M
i
i
5
1
0
1
5
0
Intra Pipe Intra Mem Inter Mem Inter Pipe + Mem
Inter Mem Inter Pipe+Mem
Intra Mem
Intra Pipe
(b) Power
Figure 6.
Impact of variations at NTC and STC.
These experiments have used a ﬁxed, safe VddN OM for
the whole chip. In reality, process variations in the SRAM
cells result in each tile supporting a different VddM IN , the
minimum sustainable Vdd to avoid failures. Such VddM IN
values are lower than VddN OM for many tiles. Figure 7
shows the distribution of the VddM IN values for all the tiles
in a sample chip at NTC. The data is shown as a histogram.
We can see that the VddM IN values of tiles in a chip vary
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 07:16:56 UTC from IEEE Xplore.  Restrictions apply. 
along a signiﬁcant 0.46-0.58V range.
2
1
0
1
s
e
l
i
T
8
f
o
r
e
b
m
u
N
6
4
2
0
0.46
0.54
0.50
VddMIN (V)
VddMIN (V)
0.58
Figure 7. Values of VddM IN for all the tiles of a representative
chip at NTC.
C. Design Space Exploration
A promising way to combat
the increased impact of
process variations is to rely on ﬁne grain, per-tile Vdd and
f tuning. To quantify the effect, we compare the manycore
conﬁgurations of Table II across different tile granularities
ranging from 4 cores per tile to 16 cores per tile. MVMF
is an environment with a Vdd and an f domain per tile;
SVMF has a single Vdd domain in the chip but one f domain
per tile; ﬁnally, SVSF characterizes a variation-oblivious
environment, with a single Vdd and f domain per chip.
Figure 8 compares the performance (in normalized MIPS)
of our 288-core NTC chip for the different environments.
We consider two workload scenarios: one where we use all
the tiles in the chip (Figure 8(a)) and one where we only
use about half of the tiles (Figure 8(b)). Speciﬁcally, we use
128 out of the 288 cores and leave the others idle. Figure 9
repeats the analysis for STC.
5
2
.
0
2
.
5
.
1
I
S
P
M
d
e
z
i
l
0
.
1
a
m
r
o
N
5
.
0
0
.
0
MVMF
SVMF
SVSF
4
8
# Cores per Tile
16
(a) 100% Use
5
2
.
0
2
.
5
.
1
I
S
P
M
d
e
z
i
l
0
.
1
a
m
r
o
N
5
.
0
0
.
0
MVMF
SVMF
SVSF
4
8
16
# Cores per Tile
(b) ≈ 50% Use
Figure 8. Performance of our 288-core chip at NTC with
different tile sizes and conﬁgurations. The charts correspond
to using all the tiles (a) and using approximately only half
(b).
In each ﬁgure, we keep the total number of cores in
the chip constant, and perform a sensitivity analysis of
different tile granularities: 4, 8 or 16 cores per tile. In each
case, the workload consists of 4-threaded, 8-threaded, or 16-
threaded parallel applications, respectively, from PARSEC.
Each application uses one tile, and we report the average
performance of the workload in MIPS. In each plot, to
make the comparison fair, the power consumed by all of the
environments is kept constant. In MVMF, the per-domain
Vdd and f are set as per Section VI-A. Speciﬁcally, each tile
runs at the tile-speciﬁc VddM IN , and at the maximum f that
it can support at this voltage. In SVMF, all the tiles in the
chip run at the maximum of the VddM IN s across all tiles.
The per-tile frequencies are increased accordingly. Finally, in
SVSF, the chip uses the same voltage as SFMV but it runs
at the chip-wide minimum of per-tile frequencies. Recall
that the VddM IN of a tile represents the maximum VddM IN
across its components, where the f of a tile corresponds to the
minimum f across its components at the designated tile Vdd.
The applications are assigned to tiles according to highest
average IPC application to highest f tile. After the MIPS of
each environment is computed, it is normalized to that of
MVMF for an 8-core tile in each plot.
5
2
.
5
2
.
0
2
.
5
1
.
I
S
P
M
d
e
z
i
l
a
m
r
o
N
0
1
.
5
0
.
0
0
.
MVMF
SVMF
SVSF
0
2
.
5
1
.
I
S
P
M
d
e
z
i
l
0
1
.
a
m
r
o
N
5
0
.
0
0
.
4
8
# Cores per Tile
16
(a) 100% Use
MVMF
SVMF
SVSF
4
8
16
# Cores per Tile
(b) ≈ 50% Use
Performance of our 288-core chip at STC with
Figure 9.
different tile sizes and conﬁgurations. The charts correspond
to using all the tiles (a) and using approximately only half
(b).
Starting with the fully-utilized chip (Figure 8(a)), we
observe that SVMF only attains 59%, 71%, and 81% MIPS
of MVMF, for 4-core, 8-core, and 16-core tiles, respectively.
This is because it does not exploit the multiple Vdd domains
of MVMF. The difference between the two bars gets larger as
the tile granularity becomes ﬁner, as MVMF tracks core-to-
core variations closer. SVSF in this case only reaches 32%,
46%, and 61% MIPS of MVMF, for 4-core, 8-core, and 16-
core tiles, respectively. As the tile granularity increases, the
differences between the different conﬁgurations diminish.
Figure 8(b) repeats the experiment when only ≈ half of
the tiles are busy. For MVMF, we pick the 32, 16, and 8
most MIPS/W-efﬁcient tiles for 4-, 8-, and 16-cores per tile
granularity, respectively, and then assign the applications of
higher IPC to the faster tiles in turn. The resulting power
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 07:16:56 UTC from IEEE Xplore.  Restrictions apply. 
consumption is the power budget that we allow to the other
environments. The other environments pick their 32, 16 or 8
most MIPS/W-efﬁcient tiles that satisfy the budget. We see
similar trends as in Figure 8(a) except that the drop in MIPS
is not as large. The reason is that each environment now
picks a subset of energy-efﬁcient tiles — leaving energy-
inefﬁcient ones idle.
Finally, in Figure 9, the experiments are repeated for STC.
For STC, MVMF and SVMF become equivalent, since the