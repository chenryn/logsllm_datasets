        "file": "https://azrhelclistact.file.core.windows.net/",
        "queue": "https://azrhelclistact.queue.core.windows.net/",
        "table": "https://azrhelclistact.table.core.windows.net/"
    },
    "primaryLocation": "southcentralus",
    "provisioningState": "Succeeded",
    "resourceGroup": "azrhelclirsgrp",
    "secondaryEndpoints": null,
    "secondaryLocation": null,
    "sku": {
      "name": "Standard_LRS",
      "tier": "Standard"
    },
    "statusOfPrimary": "available",
    "statusOfSecondary": null,
    "tags": {},
      "type": "Microsoft.Storage/storageAccounts"
    }
    ```
4.  获取存储帐户连接字符串。
    ``` literallayout
    $ az storage account show-connection-string -n storage-account-name -g resource-group
    ```
    例如：
    ``` literallayout
    [clouduser@localhost]$ az storage account show-connection-string -n azrhelclistact -g azrhelclirsgrp
    {
      "connectionString": "DefaultEndpointsProtocol=https;EndpointSuffix=core.windows.net;AccountName=azrhelclistact;AccountKey=NreGk...=="
    }
    ```
5.  通过复制连接字符串并将其粘贴到以下命令来导出连接字符串。这个字符串将您的系统连接到存储帐户。
    ``` literallayout
    $ export AZURE_STORAGE_CONNECTION_STRING="storage-connection-string"
    ```
    例如：
    ``` literallayout
    [clouduser@localhost]$ export AZURE_STORAGE_CONNECTION_STRING="DefaultEndpointsProtocol=https;EndpointSuffix=core.windows.net;AccountName=azrhelclistact;AccountKey=NreGk...=="
    ```
6.  创建存储容器。
    ``` literallayout
    $ az storage container create -n container-name
    ```
    例如：
    ``` literallayout
    [clouduser@localhost]$ az storage container create -n azrhelclistcont
    {
      "created": true
    }
    ```
7.  创建虚拟网络。所有群集节点必须位于同一虚拟网络中。
    ``` literallayout
    $ az network vnet create -g resource group --name vnet-name --subnet-name subnet-name
    ```
    例如：
    ``` literallayout
    [clouduser@localhost]$ az network vnet create --resource-group azrhelclirsgrp --name azrhelclivnet1 --subnet-name azrhelclisubnet1
    {
      "newVNet": {
        "addressSpace": {
          "addressPrefixes": [
          "10.0.0.0/16"
          ]
      },
      "dhcpOptions": {
        "dnsServers": []
      },
      "etag": "W/\"\"",
      "id": "/subscriptions//resourceGroups/azrhelclirsgrp/providers/Microsoft.Network/virtualNetworks/azrhelclivnet1",
      "location": "southcentralus",
      "name": "azrhelclivnet1",
      "provisioningState": "Succeeded",
      "resourceGroup": "azrhelclirsgrp",
      "resourceGuid": "0f25efee-e2a6-4abe-a4e9-817061ee1e79",
      "subnets": [
        {
          "addressPrefix": "10.0.0.0/24",
          "etag": "W/\"\"",
          "id": "/subscriptions//resourceGroups/azrhelclirsgrp/providers/Microsoft.Network/virtualNetworks/azrhelclivnet1/subnets/azrhelclisubnet1",
          "ipConfigurations": null,
          "name": "azrhelclisubnet1",
          "networkSecurityGroup": null,
          "provisioningState": "Succeeded",
          "resourceGroup": "azrhelclirsgrp",
          "resourceNavigationLinks": null,
          "routeTable": null
        }
      ],
      "tags": {},
      "type": "Microsoft.Network/virtualNetworks",
      "virtualNetworkPeerings": null
      }
    }
    ```
8.  创建可用性集。所有集群节点都必须处于相同的可用性集。
    ``` literallayout
    $ az vm availability-set create --name MyAvailabilitySet --resource-group MyResourceGroup
    ```
    例如：
    ``` literallayout
    [clouduser@localhost]$ az vm availability-set create --name rhelha-avset1 --resource-group azrhelclirsgrp
    {
      "additionalProperties": {},
        "id": "/subscriptions/.../resourceGroups/azrhelclirsgrp/providers/Microsoft.Compute/availabilitySets/rhelha-avset1",
        "location": "southcentralus",
        "name": “rhelha-avset1",
        "platformFaultDomainCount": 2,
        "platformUpdateDomainCount": 5,
    ...omitted
    ```
:::
::: itemizedlist
**其它资源**
-   [Sign in with Azure
    CLI](https://docs.microsoft.com/en-us/cli/azure/authenticate-azure-cli?view=azure-cli-latest){.link}
-   [SKU
    类型](https://docs.microsoft.com/en-us/rest/api/storagerp/srp_sku_types){.link}
-   [Azure Managed Disks
    概述](https://docs.microsoft.com/en-us/azure/virtual-machines/windows/managed-disks-overview){.link}
:::
:::
::: section
::: titlepage
# []{#configuring-rhel-high-availability-on-azure_cloud-content.html#required-system-packages-for-azure-ha_configuring-rhel-high-availability-on-azure}高可用性所需的系统软件包 {.title}
:::
这个步骤假设您要使用 Red Hat Enterprise Linux 为 Azure HA
创建虚拟机镜像。要成功完成这个过程，必须安装以下软件包。
::: table
[]{#configuring-rhel-high-availability-on-azure_cloud-content.html#idm140607801056528}
**表 2.1. 系统软件包**
::: table-contents
  软件包             软件仓库                           描述
  ------------------ ---------------------------------- --------------------------------------------------
  libvirt            rhel-8-for-x86_64-appstream-rpms   用于管理平台虚拟化的开源 API、守护进程和管理工具
  virt-install       rhel-8-for-x86_64-appstream-rpms   用于构建虚拟机的命令行工具
  libguestfs         rhel-8-for-x86_64-appstream-rpms   用于访问和修改虚拟机文件系统的库
  libguestfs-tools   rhel-8-for-x86_64-appstream-rpms   虚拟机的系统管理工具 ; 包括 guestfish 工具
:::
:::
:::
::: section
::: titlepage
# []{#configuring-rhel-high-availability-on-azure_cloud-content.html#azure-vm-configuration-settings_configuring-rhel-high-availability-on-azure}Azure VM 配置设置 {.title}
:::
Azure
虚拟机必须具有以下配置设置。其中一些设置会在初始创建虚拟机期间启用。为
Azure
置备虚拟机镜像时会设置其他设置。在进行操作时请记住这些设置。如有必要，请参阅它们。
::: table
[]{#configuring-rhel-high-availability-on-azure_cloud-content.html#idm140607707958544}
**表 2.2. 虚拟机配置设置**
::: table-contents
  设置         建议
  ------------ ----------------------------------------------------------------------------------------------------------
  ssh          必须启用 SSH 来提供对 Azure 虚拟机的远程访问。
  dhcp         应该为 dhcp 配置主虚拟适配器（仅限 IPv4）。
  swap 空间    不要创建一个专用的交换文件或者交换分区。您可以使用 Windows Azure Linux Agent(WALinuxAgent)配置交换空间。
  NIC          为主虚拟网络适配器选择 [**virtio**]{.strong}。
  encryption   对于自定义镜像，使用 Network Bound Disk Encryption(NBDE)在 Azure 上进行完整磁盘加密。
:::
:::
:::
::: section
::: titlepage
# []{#configuring-rhel-high-availability-on-azure_cloud-content.html#installing-hyperv-drivers_configuring-rhel-high-availability-on-azure}安装 Hyper-V 设备驱动程序 {.title}
:::
Microsoft 提供了网络和存储设备驱动程序，作为其用于 Hyper-V 软件包的
Linux 集成服务(LIS)的一部分。在将 Hyper-V 设备驱动程序置备为 Azure
虚拟机之前，您可能需要在虚拟机镜像上安装 Hyper-V 设备驱动程序。使用
`lsinitrd | grep hv`{.literal} 命令验证是否安装了驱动程序。
::: orderedlist
**流程**
1.  输入以下 `grep`{.literal} 命令来确定是否安装了所需的 Hyper-V
    设备驱动程序。
    ``` literallayout
    # lsinitrd | grep hv
    ```
    在以下示例中安装了所有必需的驱动程序。
    ``` literallayout
    # lsinitrd | grep hv
    drwxr-xr-x   2 root     root            0 Aug 12 14:21 usr/lib/modules/3.10.0-932.el7.x86_64/kernel/drivers/hv
    -rw-r--r--   1 root     root        31272 Aug 11 08:45 usr/lib/modules/3.10.0-932.el7.x86_64/kernel/drivers/hv/hv_vmbus.ko.xz
    -rw-r--r--   1 root     root        25132 Aug 11 08:46 usr/lib/modules/3.10.0-932.el7.x86_64/kernel/drivers/net/hyperv/hv_netvsc.ko.xz
    -rw-r--r--   1 root     root         9796 Aug 11 08:45 usr/lib/modules/3.10.0-932.el7.x86_64/kernel/drivers/scsi/hv_storvsc.ko.xz
    ```
    如果没有安装所有驱动程序，请完成剩余的步骤。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    环境中可能会存在 `hv_vmbus`{.literal}
    驱动程序。即使存在这个驱动程序，请完成以下步骤。
    :::
2.  在 `/etc/dracut.conf.d`{.literal} 中创建名为 `hv.conf`{.literal}
    的文件。
3.  在 `hv.conf`{.literal} 文件中添加以下驱动程序参数。
    ``` screen
    add_drivers+=" hv_vmbus "
    add_drivers+=" hv_netvsc "
    add_drivers+=" hv_storvsc "
    ```
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    请注意引号之前和之后的空格，如
    `add_drivers+=" hv_vmbus "`{.literal}。这样可确保在环境中存在其他
    Hyper-V 驱动程序时载入唯一驱动程序。
    :::
4.  重新生成 `initramfs`{.literal} 镜像。
    ``` screen
    # dracut -f -v --regenerate-all
    ```
:::
::: orderedlist
**验证步骤**
1.  重启机器。
2.  运行 `lsinitrd | grep hv`{.literal} 命令验证是否安装了驱动程序。
:::
:::
::: section
::: titlepage
# []{#configuring-rhel-high-availability-on-azure_cloud-content.html#making-configuration-changes_configuring-rhel-high-availability-on-azure}进行额外的配置更改 {.title}
:::
虚拟机需要进行进一步的配置更改才能在 Azure
中操作。执行以下步骤进行额外的更改。
::: orderedlist
**流程**
1.  如有必要，启动虚拟机。
2.  注册虚拟机并启用 Red Hat Enterprise Linux 8 软件仓库。
    ``` screen
    # subscription-manager register --auto-attach
    ```
:::
::: orderedlist
**停止和删除 cloud-init**
1.  停止 `cloud-init`{.literal} 服务（如果存在）。
    ``` screen
    # systemctl stop cloud-init
    ```
2.  删除 `cloud-init`{.literal} 软件。
    ``` screen
    # yum remove cloud-init
    ```
:::
::: orderedlist
**完成其他虚拟机更改**
1.  编辑 `/etc/ssh/sshd_config`{.literal} 文件并启用密码验证。
    ``` screen
    PasswordAuthentication yes
    ```
2.  设置通用主机名。
    ``` screen
    # hostnamectl set-hostname localhost.localdomain
    ```
3.  编辑（或创建） `/etc/sysconfig/network-scripts/ifcfg-eth0`{.literal}
    文件。仅使用以下列出的参数。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    `ifcfg-eth0`{.literal} 文件不存在于 RHEL 8 DVD ISO
    镜像中，且必须创建。
    :::
    ``` screen
    DEVICE="eth0"
    ONBOOT="yes"
    BOOTPROTO="dhcp"
    TYPE="Ethernet"
    USERCTL="yes"
    PEERDNS="yes"
    IPV6INIT="no"
    ```
4.  删除所有持久的网络设备规则（如果存在）。
    ``` screen
    # rm -f /etc/udev/rules.d/70-persistent-net.rules
    # rm -f /etc/udev/rules.d/75-persistent-net-generator.rules
    # rm -f /etc/udev/rules.d/80-net-name-slot-rules
    ```
5.  将 `ssh`{.literal} 设置为自动启动。
    ``` screen
    # systemctl enable sshd
    # systemctl is-enabled sshd
    ```
6.  修改内核引导参数。
    ::: orderedlist
    1.  在 `/etc/default/grub`{.literal} 文件中的
        `GRUB_CMDLINE_LINUX`{.literal} 行的开头添加
        `crashkernel=256M`{.literal}。如果 `crashkernel=auto`{.literal}
        存在，请将其改为 `crashkernel=256M`{.literal}。
    2.  如果不存在，在 `GRUB_CMDLINE_LINUX`{.literal}
        行的末尾添加以下行。
        ``` screen
        earlyprintk=ttyS0
        console=ttyS0
        rootdelay=300
        ```