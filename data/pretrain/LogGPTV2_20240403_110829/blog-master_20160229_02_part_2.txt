c4 int,   
c5 int,   
c6 int,   
c7 int,   
c8 int,   
c9 int,   
c10 int,   
c11 int,   
c12 int)   
stored as heap;  
postgres=# create table test_heap_pglz(  
id int,   
info text compress pglz,   
crt_time timestamp,   
c1 int,   
c2 int,   
c3 int,   
c4 int,   
c5 int,   
c6 int,   
c7 int,   
c8 int,   
c9 int,   
c10 int,   
c11 int,   
c12 int)   
stored as heap;  
postgres=# \d+++ test_heap  
                                         Table "public.test_heap"  
  Column  |            Type             | Modifiers | Storage  | Compression | Stats target | Description   
----------+-----------------------------+-----------+----------+-------------+--------------+-------------  
 id       | integer                     |           | plain    |             |              |   
 info     | text                        |           | extended | zlib        |              |   
 crt_time | timestamp without time zone |           | plain    |             |              |   
 c1       | integer                     |           | plain    |             |              |   
 c2       | integer                     |           | plain    |             |              |   
 c3       | integer                     |           | plain    |             |              |   
 c4       | integer                     |           | plain    |             |              |   
 c5       | integer                     |           | plain    |             |              |   
 c6       | integer                     |           | plain    |             |              |   
 c7       | integer                     |           | plain    |             |              |   
 c8       | integer                     |           | plain    |             |              |   
 c9       | integer                     |           | plain    |             |              |   
 c10      | integer                     |           | plain    |             |              |   
 c11      | integer                     |           | plain    |             |              |   
 c12      | integer                     |           | plain    |             |              |   
Stored As: HEAP  
postgres=# \d+++ test_col  
                                         Table "public.test_col"  
  Column  |            Type             | Modifiers | Storage  | Compression | Stats target | Description   
----------+-----------------------------+-----------+----------+-------------+--------------+-------------  
 id       | integer                     |           | plain    |             |              |   
 info     | text                        |           | extended | zlib        |              |   
 crt_time | timestamp without time zone |           | plain    |             |              |   
 c1       | integer                     |           | plain    |             |              |   
 c2       | integer                     |           | plain    |             |              |   
 c3       | integer                     |           | plain    |             |              |   
 c4       | integer                     |           | plain    |             |              |   
 c5       | integer                     |           | plain    |             |              |   
 c6       | integer                     |           | plain    |             |              |   
 c7       | integer                     |           | plain    |             |              |   
 c8       | integer                     |           | plain    |             |              |   
 c9       | integer                     |           | plain    |             |              |   
 c10      | integer                     |           | plain    |             |              |   
 c11      | integer                     |           | plain    |             |              |   
 c12      | integer                     |           | plain    |             |              |   
Stored As: ORC  
postgres=# \d+++ test_heap_pglz   
                                      Table "public.test_heap_pglz"  
  Column  |            Type             | Modifiers | Storage  | Compression | Stats target | Description   
----------+-----------------------------+-----------+----------+-------------+--------------+-------------  
 id       | integer                     |           | plain    |             |              |   
 info     | text                        |           | extended | pglz        |              |   
 crt_time | timestamp without time zone |           | plain    |             |              |   
 c1       | integer                     |           | plain    |             |              |   
 c2       | integer                     |           | plain    |             |              |   
 c3       | integer                     |           | plain    |             |              |   
 c4       | integer                     |           | plain    |             |              |   
 c5       | integer                     |           | plain    |             |              |   
 c6       | integer                     |           | plain    |             |              |   
 c7       | integer                     |           | plain    |             |              |   
 c8       | integer                     |           | plain    |             |              |   
 c9       | integer                     |           | plain    |             |              |   
 c10      | integer                     |           | plain    |             |              |   
 c11      | integer                     |           | plain    |             |              |   
 c12      | integer                     |           | plain    |             |              |   
Stored As: HEAP  
```  
性能测试  
```  
postgres=# \timing  
Timing is on.  
postgres=# insert into test_heap select i,repeat(md5(random()::text),64),clock_timestamp(),i,i,i,i,i,i,i,i,i,i,i,i from generate_series(1,1000000) t(i);  
INSERT 0 1000000  
Time: 18183.374 ms  
postgres=# insert into test_col select i,repeat(md5(random()::text),64),clock_timestamp(),i,i,i,i,i,i,i,i,i,i,i,i from generate_series(1,1000000) t(i);  
INSERT 0 1000000  
Time: 19871.817 ms  
postgres=# insert into test_heap select trunc(5000000*random()),repeat(md5(random()::text),64),clock_timestamp(),i,i,i,i,i,i,i,i,i,i,i,i from generate_series(1,1000000) t(i);  
INSERT 0 1000000  
Time: 20575.763 ms  
postgres=# insert into test_col select trunc(5000000*random()),repeat(md5(random()::text),64),clock_timestamp(),i,i,i,i,i,i,i,i,i,i,i,i from generate_series(1,1000000) t(i);  
INSERT 0 1000000  
Time: 20440.462 ms  
postgres=# select count(*) from test_col where id  Custom Scan (ORC) on test_col  (cost=0.00..7.06 rows=706 width=4) (actual time=0.018..431.255 rows=2000000 loops=1)  
 Planning time: 0.112 ms  
 Execution time: 1743.735 ms  
(4 rows)  
Time: 1744.215 ms  
postgres=# explain analyze select count(distinct id) from test_heap;  
                                                        QUERY PLAN                                                           
---------------------------------------------------------------------------------------------------------------------------  
 Aggregate  (cost=65816.71..65816.72 rows=1 width=4) (actual time=1513.416..1513.416 rows=1 loops=1)  
   ->  Seq Scan on test_heap  (cost=0.00..60816.77 rows=1999977 width=4) (actual time=0.017..221.881 rows=2000000 loops=1)  
 Planning time: 0.068 ms  
 Execution time: 1513.478 ms  
(4 rows)  
Time: 1513.900 ms  
postgres=# explain analyze select count(distinct (id,info)) from test_col;  
                                                         QUERY PLAN                                                           
----------------------------------------------------------------------------------------------------------------------------  
 Aggregate  (cost=8.83..8.84 rows=1 width=36) (actual time=15137.273..15137.274 rows=1 loops=1)  
   ->  Custom Scan (ORC) on test_col  (cost=0.00..7.06 rows=706 width=36) (actual time=0.014..513.342 rows=2000000 loops=1)  
 Planning time: 0.127 ms  
 Execution time: 15137.395 ms  
(4 rows)  
Time: 15138.411 ms  
postgres=# explain analyze select count(distinct (id,info)) from test_heap;  
                                                         QUERY PLAN                                                           
----------------------------------------------------------------------------------------------------------------------------  
 Aggregate  (cost=65816.71..65816.72 rows=1 width=72) (actual time=13865.787..13865.787 rows=1 loops=1)  
   ->  Seq Scan on test_heap  (cost=0.00..60816.77 rows=1999977 width=72) (actual time=0.012..235.289 rows=2000000 loops=1)  
 Planning time: 0.104 ms  
 Execution time: 13865.856 ms  
(4 rows)  
Time: 13866.441 ms  
```  
排序  
```  
postgres=# set work_mem='1GB';  
postgres=# explain analyze select id from test_heap order by id;  
                                                        QUERY PLAN                                                           
---------------------------------------------------------------------------------------------------------------------------  
 Sort  (cost=270132.69..275132.69 rows=2000000 width=4) (actual time=766.044..959.705 rows=2000000 loops=1)  
   Sort Key: id  
   Sort Method: quicksort  Memory: 142903kB  
   ->  Seq Scan on test_heap  (cost=0.00..60817.00 rows=2000000 width=4) (actual time=0.012..254.047 rows=2000000 loops=1)  
 Planning time: 0.148 ms  
 Execution time: 1041.256 ms  
(6 rows)  
postgres=# explain analyze select * from test_heap order by id;  
                                                         QUERY PLAN                                                            
-----------------------------------------------------------------------------------------------------------------------------  
 Sort  (cost=270132.69..275132.69 rows=2000000 width=128) (actual time=820.897..1104.178 rows=2000000 loops=1)  
   Sort Key: id  
   Sort Method: quicksort  Memory: 580403kB  
   ->  Seq Scan on test_heap  (cost=0.00..60817.00 rows=2000000 width=128) (actual time=0.017..202.813 rows=2000000 loops=1)  
 Planning time: 0.107 ms  
 Execution time: 1193.899 ms  
(6 rows)  
postgres=# explain analyze select * from test_col order by id;  
                                                             QUERY PLAN                                                                
-------------------------------------------------------------------------------------------------------------------------------------  
 Sort  (cost=229315.69..234315.69 rows=2000000 width=128) (actual time=1269.664..1553.249 rows=2000000 loops=1)  
   Sort Key: id  
   Sort Method: quicksort  Memory: 580403kB  
   ->  Custom Scan (ORC) on test_col  (cost=0.00..20000.00 rows=2000000 width=128) (actual time=0.019..417.134 rows=2000000 loops=1)  
 Planning time: 0.145 ms  
 Execution time: 1646.298 ms  
(6 rows)  
postgres=# explain analyze select id from test_col order by id;  
                                                            QUERY PLAN                                                               
-----------------------------------------------------------------------------------------------------------------------------------  
 Sort  (cost=229315.69..234315.69 rows=2000000 width=4) (actual time=1001.483..1207.091 rows=2000000 loops=1)  
   Sort Key: id  
   Sort Method: quicksort  Memory: 142903kB  
   ->  Custom Scan (ORC) on test_col  (cost=0.00..20000.00 rows=2000000 width=4) (actual time=0.020..466.365 rows=2000000 loops=1)  
 Planning time: 0.112 ms  
 Execution time: 1293.078 ms  
(6 rows)  
postgres=# set work_mem='1MB';  
SET  
postgres=# explain analyze select id from test_col order by id;  
                                                            QUERY PLAN                                                               
-----------------------------------------------------------------------------------------------------------------------------------  
 Sort  (cost=284006.69..289006.69 rows=2000000 width=4) (actual time=1837.612..2159.556 rows=2000000 loops=1)  
   Sort Key: id  
   Sort Method: external merge  Disk: 27392kB  
   ->  Custom Scan (ORC) on test_col  (cost=0.00..20000.00 rows=2000000 width=4) (actual time=0.019..465.012 rows=2000000 loops=1)  
 Planning time: 0.110 ms  
 Execution time: 2246.295 ms  
(6 rows)  
postgres=# explain analyze select id from test_heap order by id;  
                                                        QUERY PLAN                                                           
---------------------------------------------------------------------------------------------------------------------------  
 Sort  (cost=324823.69..329823.69 rows=2000000 width=4) (actual time=1742.758..2080.076 rows=2000000 loops=1)  
   Sort Key: id  
   Sort Method: external merge  Disk: 27384kB  
   ->  Seq Scan on test_heap  (cost=0.00..60817.00 rows=2000000 width=4) (actual time=0.016..278.976 rows=2000000 loops=1)  
 Planning time: 0.079 ms  
 Execution time: 2176.640 ms  
(6 rows)  
```  
验证列存储的sort by id是否起作用，从测试结果来看并没有排序存储。  
```  
postgres=# select id from test_col limit 1 offset 1000000;  
   id      
---------  
 3492623  
(1 row)  
postgres=# select id from test_col limit 1 offset 1000001;  
   id     
--------  
 292687  
(1 row)  
postgres=# select id from test_col limit 1 offset 1000002;  
   id      
---------  
 3435092  
(1 row)  
```  
查看物理文件  