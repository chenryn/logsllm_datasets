---
author: Kelly Albrecht
category: 观点
comments_data: []
count:
  commentnum: 0
  favtimes: 0
  likes: 0
  sharetimes: 0
  viewnum: 6787
date: '2019-05-09 11:30:32'
editorchoice: false
excerpt: 消除一些关于 DevOps 的疑惑。
fromurl: https://opensource.com/article/19/3/devops-most-important-tech-strategy
id: 10834
islctt: true
largepic: /data/attachment/album/201905/09/113035w6wk5dkkuwwwdd9j.png
permalink: /article-10834-1.html
pic: /data/attachment/album/201905/09/113035w6wk5dkkuwwwdd9j.png.thumb.jpg
related: []
reviewer: wxy
selector: lujun9972
summary: 消除一些关于 DevOps 的疑惑。
tags:
- DevOps
thumb: false
title: 为何 DevOps 是如今最重要的技术策略
titlepic: true
translator: zgj1024
updated: '2019-05-09 11:30:32'
---
> 
> 消除一些关于 DevOps 的疑惑。
> 
> 
> 
![CICD with gears](/data/attachment/album/201905/09/113035w6wk5dkkuwwwdd9j.png "CICD with gears")
很多人初学 [DevOps](https://opensource.com/resources/devops) 时，看到它其中一个结果就问这个是如何得来的。其实理解这部分 Devops 的怎样实现并不重要，重要的是——理解（使用） DevOps 策略的原因——这是做一个行业的领导者还是追随者的差别。
你可能会听过些 Devops 的难以置信的成果，例如生产环境非常有弹性，就算是有个“   癫狂的猴子    Chaos Monkey ）跳来跳去将不知道哪个插头随便拔下，每天仍可以处理数千个发布。这是令人印象深刻的，但就其本身而言，这是一个 DevOps 的证据不足的案例，其本质上会被一个[反例](https://en.wikipedia.org/wiki/Burden_of_proof_(philosophy)#Proving_a_negative)困扰：DevOps 环境有弹性是因为严重的故障还没有被观测到。
有很多关于 DevOps 的疑惑，并且许多人还在尝试弄清楚它的意义。下面是来自我 LinkedIn Feed 中的某个人的一个案例：
> 
> 最近我参加一些 #DevOps 的交流会，那里一些演讲人好像在倡导 #敏捷开发是 DevOps 的子集。不知为何，我的理解恰恰相反。
> 
> 
> 能听一下你们的想法吗？你认为敏捷开发和 DevOps 之间是什么关系呢？
> 
> 
> 1. DevOps 是敏捷开发的子集
> 2. 敏捷开发是 DevOps 的子集
> 3. DevOps 是敏捷开发的扩展，从敏捷开发结束的地方开始
> 4. DevOps 是敏捷开发的新版本
> 
> 
> 
科技行业的专业人士在那篇 LinkedIn 的帖子上表达了各种各样的答案，你会怎样回复呢？
### DevOps 源于精益和敏捷
如果我们从亨利福特的战略和丰田生产系统对福特车型的改进（的历史）开始， DevOps 就更有意义了。精益制造就诞生在那段历史中，人们对精益制作进行了良好的研究。James P. Womack 和 Daniel T. Jones 将精益思维（[Lean Thinking](https://www.amazon.com/dp/B0048WQDIO/ref=dp-kindle-redirect?_encoding=UTF8&btkr=1)）提炼为五个原则：
1. 指明客户所需的价值
2. 确定提供该价值的每个产品的价值流，并对当前提供该价值所需的所有浪费步骤提起挑战
3. 使产品通过剩余的增值步骤持续流动
4. 在可以连续流动的所有步骤之间引入拉力
5. 管理要尽善尽美，以便为客户服务所需的步骤数量和时间以及信息量持续下降