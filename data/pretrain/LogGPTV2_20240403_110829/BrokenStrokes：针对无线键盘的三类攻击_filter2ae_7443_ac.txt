FP数主要归因于两个因素：（i）阻碍视线的墙壁会影响键盘发送的样本的RSS；（ii）办公环境特别容易受到干扰。BrokenStrokes对干扰特别敏感，因为它利用RSS估计来生成按键间时序。在下一节中将详细讨论减轻FP数的策略
。
## 0x07 Scenario 3: Remote Attack
在本节中考虑方案3（远程攻击），其中攻击者利用定向天线（Aaronia
HyperLOG60350）进行BrokenStrokes攻击。在这种情况下，目标用户在一栋两层别墅的一楼，靠近窗户。将窃听天线放置在距离键盘-加密狗通信链接1、5、10、15和20米处。定向天线与键盘加密狗之间的链接仅被一个窗口遮挡，因此将其视为LOS攻击。
上图显示了与先前考虑的距离相关的RSS样本。首先观察到，当窃听天线远离目标用户时，干扰会显着增加（图底部的黑色区域）。可以通过观察定向天线的主瓣越来越暴露于可能位于附近别墅中的发射实体（例如，WiFi，蓝牙和其他干扰源）来解释此问题。此外，观察到与属于键盘加密狗通信信道的实际RSS样本相关的峰值分别在1m和20m处在-15dBm和-20dBm之间变化。最后根据经验考虑了最低可能值和最小干扰，从而对阈值（水平红线）进行了校准。
上图（顶部）显示了分析结果：BrokenStrokescan可以在10米的距离内识别大约100％的单词，而在15米和20米时，其性能分别下降到大约54％和24％。此外，图底部显示，BrokenStrokes可以成功地在10米以内的9次击键（“password”
+回车）中成功检索9个，而从15米的距离开始，其性能却受到显着影响。尽管如此，观察到即使在20米的距离内，提取的击键次数仍然很高，从9个中位值中识别出8次击键。单词识别和击键时间提取不足以检测键盘中击键的存在。目标用户。因此，下面，采用ML技术（SVM）来计算远程目标用户键入的句子中关键字”password”的存在（和位置）的可能性（相似性得分），下图显示了由SVM算法生成的相似性评分，该算法通过对关键字“
password”进行10次重复训练而得到训练。每个相似性得分是通过以1个击键的移动步长测试7个击键间时间的滑动窗口来计算的。下表显示了TP和FP的数量（30个句子中的数量）与窃听距离的关系。
BrokenStrokescan在绝大多数情况下（≥73％）检测到关键字的存在和位置，即相似性得分的峰值集中在关键字“
password”实际位置的大约相同偏移量（±1）处。此外，观察到存在一些FP（<=
23％），即在句子的不同偏移处分布有较小的峰值。下一节提供了对此现象的全面分析。
## 0x08 BrokenStrokes Performance
在本节中将考虑所有讨论的三种情况，以提供对BrokenStrokes攻击性能的估计。如前所述，使用关键字“password”的10个重复序列训练了一种统计学习算法（SVM），并在几个句子的相邻子集（滑动窗口）上测试了这种模型。对于每个测试，SVM算法都会提供一个相似度得分（即，可能性），以使此类字符子集与正在寻找的关键字匹配。因此，每个句子成为相似性得分的载体。在前面的部分中，考虑了决策阈值∆
= 0，而在下文中，研究了∆如何影响BrokenStrokes的性能-将在[0,…,0.03]范围内变化∆。下图显示了TPs随∆的变化，本文已经讨论了所有主要的度量标准：（i）近距离攻击（句子“ _your password
is secret_ ”）； （ii）墙后攻击（句子“ _you can choose a random password_ ”）；
（iii）分别在5米，10米和15米的距离进行远程攻击（句子“ _a password has many characters_
”）。没有考虑1m和20m：前者的性能与方案1（近距离攻击）相似，而后者则受到过多干扰的影响。首先观察到近距离攻击的特征是相似的趋势，可以用斜率为-27且Y轴截距等于0.83648的直线（实线为绿色）进行建模。还观察到最差的性能来自“墙后”场景；如先前所讨论的，这种情况是唯一一种没有LOS的情况，同时又受到相邻设备产生的干扰的影响。最后指出，BrokenStrokes可以独立于所考虑的场景而以大约80％的频率检测目标用户的按键间时间间隔样本中关键字的存在。
下图显示了FP估计与决策阈值（∆）的函数关系。对于前一种情况考虑：（i）近距离攻击（句子“ _your password is secret_ ”）；
（ii）墙后攻击（句子“ _you can choose a random password_ ”）；以及（iii）距离为5、10和15米的远程攻击（句子“
_a password has many characters_ ”）
。下图确认“墙后”场景的性能最低：对于所有阈值，该场景中的FP显着高于其他场景中的FP（尽管始终小于35％）。相反，其他情况则表现出更好的性能，某些FP始终具有不到25％的特点。应该选择决策阈值（∆）值来最大化TP的数量，同时减少FP的数量。当∆
<5·10-3时，FP的数量可以估计为10％（平均）。认为此值是可以接受的值，因为可以利用先进的ML技术来假设一个或多个附加的后处理层，以减少错误警报的数量。
## 0x09 Discussion
**训练集大小:**
BrokenStrokes的有效性在很大程度上取决于攻击者先前收集的训练集。一方面，可能难以在较大的时间内收集大量的训练集，因此，攻击的可行性与实现良好检测性能所需的关键词重复次数严格相关。可以通过简单的社交工程技术轻松地收集训练集，通过电子邮件或社交网络触发用户的响应（例如，键入他的名字），研究了不同训练集大小下的BrokenStrokes攻击的性能，将关键字“
password”重复5到50次，将场景1（近距离攻击）中句子“ _your password is secret_
”的30次重复作为测试集，并按照前面各节所述进行了BrokenStrokes攻击。训练集的最佳大小为10，如下表所示，保证最大TP数（29）和最小化FP数（1）。结果取决于关键字和用户的键入速度。因此，需要一个初步阶段来估计每个关键字用户组合的最佳训练集大小。
**键盘通讯协议：**
绝大多数键盘都采用专有协议，就像本文所使用的那样。这些协议通常会选择一个频率并将其长期保存（直至关闭或更换电池）。这种行为特别容易受到BrokenStrokes攻击，因为攻击者可以在2.4-2.5 GHz，确定目标用户采用的频率，然后选择该目标频率以收集RSS样本。
上图显示了讨论的三个不同键盘的采样间时序。区分三类：（i）数据包内采样； （ii）Packet-Ack延迟；
（iii）击键间。数据包内样本是属于同一个数据包的RSS估计，可以是从键盘到加密狗的消息，也可以是从加密狗到键盘的确认。第二类（Packet-Ack延迟）是数据包和ack之间的时间：与HP和V-Max相比，微软850-1455键盘的延迟似乎很小。将16ms视为上一类别的上限。最后，InterKeystroke计时表示两次连续击键之间的时间。仅当用户的打字速度低于Packet-Ack延迟时，BrokenStrokes才有效。当用户的打字速度与Packet-Ack延迟相当时，BrokenStrokes的当前版本无法区分数据包的Ack和与后续击键相关联的数据包。凭经验选择了23ms来唯一地标识键盘HP
SK-2064的Packet-Ack模式。
采用蓝牙的键盘需要较大的频谱观察才能捕获伪随机选择的频率的RSS样本，从而增加了用于发动攻击的设备的成本。此外，其他一些键盘生产商（虽然可以忽略不计）采用直接序列扩频（DSSS）调制，该调制在宽带信道上传播信息，从而大大降低了传输峰值功率，并使通信与本底噪声几乎无法区分。
**对策：** 为了减轻BrokenStrokes，可以实施以下策略：（i）通过beaconing或friendly jamming来增加传输次数；
（ii）随机延迟键盘传输；或（iii）采用DSSS代替固定或伪随机跳频技术。对于无线键盘，前两种策略可能不切实际，因为它们需要更多电量，而第二种策略也可能会影响用户体验。无线键盘主要是事件触发的设备，电量，可用性和隐私之间的权衡已得到广泛研究。最后，尽管DSSS可能是一种有效的策略，但它比跳频消耗更多的电量，因此需要考虑在隐私目标和电量预算之间进行权衡。
## 0x0a Conclusion
在本文中介绍了BrokenStrokes，这是一种针对商用无线键盘的新颖，廉价，可行且有效的攻击方法。BrokenStrokes允许通过分析来检测用户生成的击键流中预定义关键字的存在。
本文研究了BrokenStrokes在三种不同情况下的有效性，包括与目标用户的接近程度，距离在1至15米之间的LOS和非LOS情况（在拥挤的办公室环境中躲避在墙后
）。即使在有噪音的情况下（从最严酷的条件下超过70％到正常的操作条件下超过90％），所有场景都证实了攻击的可行性和有效性。