• 在后台提交作业。
• 使用n o h u p命令提交作业。
名词解释：
cron 系统调度进程。可以使用它在每天的非高峰负荷时间段运行作业，或在一周或一月
中的不同时段运行。
At at命令。使用它在一个特定的时间运行一些特殊的作业，或在晚一些的非负荷高峰时
间段或高峰负荷时间段运行。
& 使用它在后台运行一个占用时间不长的进程。
Nohup 使用它在后台运行一个命令，即使在用户退出时也不受影响。
3.1 cron和crontab
c r o n是系统主要的调度进程，可以在无需人工干预的情况下运行作业。有一个叫做
c r o n t a b的命令允许用户提交、编辑或删除相应的作业。每一个用户都可以有一个 c r o n t a b文件
来保存调度信息。可以使用它运行任意一个 s h e l l脚本或某个命令，每小时运行一次，或一周
三次，这完全取决于你。每一个用户都可以有自己的 c r o n t a b文件，但在一个较大的系统中，
系统管理员一般会禁止这些文件，而只在整个系统保留一个这样的文件。系统管理员是通过
c r o n . d e n y和c r o n . a l l o w这两个文件来禁止或允许用户拥有自己的c r o n t a b文件。
3.1.1 crontab的域
为了能够在特定的时间运行作业，需要了解 c r o n t a b文件每个条目中各个域的意义和格式。
下面就是这些域：
第1列 分钟1～5 9
第2列 小时1～2 3（0表示子夜）
第3列 日1～3 1
第4列 月1～1 2
第5列 星期0～6（0表示星期天）
第6列 要运行的命令
加入java编程群：524621833
23
第3章 后台执行命令
下载
下面是c r o n t a b的格式：
分时日月星期要运行的命令
其中表示空格。
C r o n t a b文件的一个条目是从左边读起的，第一列是分，最后一列是要运行的命令，它位
于星期的后面。
在这些域中，可以用横杠-来表示一个时间范围，例如你希望星期一至星期五运行某个作
业，那么可以在星期域使用1 - 5来表示。还可以在这些域中使用逗号“,”，例如你希望星期一
和星期四运行某个作业，只需要使用 1 , 4来表示。可以用星号*来表示连续的时间段。如果你
对某个表示时间的域没有特别的限定，也应该在该域填入 *。该文件的每一个条目必须含有 5
个时间域，而且每个域之间要用空格分隔。该文件中所有的注释行要在行首用 #来表示。
3.1.2 crontab条目举例
这里有c r o n t a b文件条目的一些例子：
30 21* * * /apps/bin/cleanup.sh
上面的例子表示每晚的2 1 : 3 0运行/ a p p s / b i n目录下的c l e a n u p . s h。
45 4 1,10,22 * * /apps/bin/backup.sh
上面的例子表示每月1、1 0、2 2日的4 : 4 5运行/ a p p s / b i n目录下的b a c k u p . s h。
10 1 * * 6,0 /bin/find -name "core" -exec rm {} \;
上面的例子表示每周六、周日的1 : 1 0运行一个f i n d命令。
0,30 18-23 * * * /apps/bin/dbcheck.sh
上面的例子表示在每天1 8 : 0 0至2 3 : 0 0之间每隔3 0分钟运行/ a p p s / b i n目录下的d b c h e c k . s h。
0 23 * * 6 /apps/bin/qtrend.sh
上面的例子表示每星期六的11 : 0 0 p m运行/ a p p s / b i n目录下的q t r e n d . s h。
你可能已经注意到上面的例子中，每个命令都给出了绝对路径。当使用 c r o n t a b运行s h e l l
脚本时，要由用户来给出脚本的绝对路径，设置相应的环境变量。记住，既然是用户向 c r o n
提交了这些作业，就要向c r o n提供所需的全部环境。不要假定c r o n知道所需要的特殊环境，它
其实并不知道。所以你要保证在 s h e l l脚本中提供所有必要的路径和环境变量，除了一些自动
设置的全局变量。
如果c r o n不能运行相应的脚本，用户将会收到一个邮件说明其中的原因。
3.1.3 crontab命令选项
c r o n t a b命令的一般形式为：
Crontab [-u user] -e -l -r
其中：
-u 用户名。
-e 编辑c r o n t a b文件。
-l 列出c r o n t a b文件中的内容。
-r 删除c r o n t a b文件。
如果使用自己的名字登录，就不用使用 - u选项，因为在执行c r o n t a b命令时，该命令能够
加入java编程群：524621833
24
第一部分 shell
下载
知道当前的用户。
3.1.4 创建一个新的crontab文件
在考虑向c r o n进程提交一个c r o n t a b文件之前，首先要做的一件事情就是设置环境变量
E D I TO R。c r o n进程根据它来确定使用哪个编辑器编辑 c r o n t a b文件。9 9 %的U N I X和L I N U X用
户都使用v i，如果你也是这样，那么你就编辑$ H O M E目录下的. p r o f i l e文件，在其中加入这样
一行：
EDITOR=vi; export EDITOR
然后保存并退出。
不妨创建一个名为 c r o n的文件，其中是用户名，例如，d a v e c r o n。在该文件
中加入如下的内容。
保存并退出。确信前面5个域用空格分隔。
在上面的例子中，系统将每隔1 5分钟向控制台输出一次当前时间。如果系统崩溃或挂起，
从最后所显示的时间就可以一眼看出系统是什么时间停止工作的。在有些系统中，用 t t y 1来表
示控制台，可以根据实际情况对上面的例子进行相应的修改。
为了提交你刚刚创建的c r o n t a b文件，可以把这个新创建的文件作为c r o n命令的参数：
$ crontab davecron
现在该文件已经提交给c r o n进程，它将每隔1 5分钟运行一次。
同时，新创建文件的一个副本已经被放在/ v a r / s p o o l / c r o n目录中，文件名就是用户名（即，
d a v e）。
3.1.5 列出crontab文件
为了列出c r o n t a b文件，可以用：
你将会看到和上面类似的内容。可以使用这种方法在 $ H O M E目录中对c r o n t a b文件做一备
份：
$ crontab -l > $HOME/mycron
这样，一旦不小心误删了c r o n t a b文件，可以用上一节所讲述的方法迅速恢复。
3.1.6 编辑crontab文件
如果希望添加、删除或编辑c r o n t a b文件中的条目，而E D I TO R环境变量又设置为v i，那么
就可以用v i来编辑c r o n t a b文件，相应的命令为：
$ crontab -e
可以像使用v i编辑其他任何文件那样修改 c r o n t a b文件并退出。如果修改了某些条目或添
加入java编程群：524621833
25
第3章 后台执行命令
下载
加了新的条目，那么在保存该文件时， c r o n会对其进行必要的完整性检查。如果其中的某个
域出现了超出允许范围的值，它会提示你。
我们在编辑c r o n t a b文件时，没准会加入新的条目。例如，加入下面的一条：
现在保存并退出。最好在c r o n t a b文件的每一个条目之上加入一条注释，这样就可以知道
它的功能、运行时间，更为重要的是，知道这是哪位用户的作业。
现在让我们使用前面讲过的crontab -l命令列出它的全部信息：
3.1.7 删除crontab文件
为了删除c r o n t a b文件，可以用：
$ crontab -r
3.1.8 恢复丢失的crontab文件
如果不小心误删了c r o n t a b文件，假设你在自己的$ H O M E目录下还有一个备份，那么可以
将其拷贝到/ v a r / s p o o l / c r o n / ，其中是用户名。如果由于权限问题无法完
成拷贝，可以用：
$ crontab 
其中，是你在$ H O M E目录中副本的文件名。
我建议你在自己的$ H O M E目录中保存一个该文件的副本。我就有过类似的经历，有数次
误删了c r o n t a b文件（因为r键紧挨在e键的右边…）。这就是为什么有些系统文档建议不要直接
编辑c r o n t a b文件，而是编辑该文件的一个副本，然后重新提交新的文件。
有些c r o n t a b的变体有些怪异，所以在使用c r o n t a b命令时要格外小心。如果遗漏了任何选
项，c r o n t a b可能会打开一个空文件，或者看起来像是个空文件。这时敲 d e l e t e键退出，不要按
，否则你将丢失c r o n t a b文件。
3.2 at命令
a t命令允许用户向c r o n守护进程提交作业，使其在稍后的时间运行。这里稍后的时间可能
是指1 0 m i n以后，也可能是指几天以后。如果你希望在一个月或更长的时间以后运行，最好还
是使用c r o n t a b文件。
一旦一个作业被提交， a t命令将会保留所有当前的环境变量，包括路径，不象 c r o n t a b，
只提供缺省的环境。该作业的所有输出都将以电子邮件的形式发送给用户，除非你对其输出
进行了重定向，绝大多数情况下是重定向到某个文件中。
和c r o n t a b一样，根用户可以通过/ e t c目录下的a t . a l l o w和a t . d e n y文件来控制哪些用户可以
加入java编程群：524621833
26
第一部分 shell
下载
使用a t命令，哪些用户不行。不过一般来说，对a t命令的使用不如对c r o n t a b的使用限制那么严
格。
a t命令的基本形式为：
at [-f script] [-m -l -r] [time] [date]
其中，
-f script 是所要提交的脚本或命令。
-l 列出当前所有等待运行的作业。a t q命令具有相同的作用。
-r 清除作业。为了清除某个作业，还要提供相应的作业标识（ I D）；有些U N I X变体只
接受a t r m作为清除命令。
-m 作业完成后给用户发邮件。
time at命令的时间格式非常灵活；可以是H、H H . H H M M、H H : M M或H : M，其中H和M
分别是小时和分钟。还可以使用a . m .或p . m .。
date 日期格式可以是月份数或日期数，而且a t命令还能够识别诸如t o d a y、t o m o r r o w这样
的词。
现在就让我们来看看如何提交作业。
3.2.1 使用at命令提交命令或脚本
使用a t命令提交作业有几种不同的形式，可以通过命令行方式，也可以使用a t命令提示符。
一般来说在提交若干行的系统命令时，我使用a t命令提示符方式，而在提交s h e l l脚本时，使用
命令行方式。
如果你想提交若干行的命令，可以在a t命令后面跟上日期/时间并回车。然后就进入了a t命
令提示符，这时只需逐条输入相应的命令，然后按‘ ’退出。下面给出一个例子：
其中，就是。在2 1 : 1 0系统将执行一个简单的f i n d命令。你应当已经注
意到，我所提交的作业被分配了一个唯一标识 job 1。该命令在完成以后会将全部结果以邮件
的形式发送给我。
下面就是我从这个邮件中截取的一部分：
下面这些日期/时间格式都是a t命令可以接受的：
加入java编程群：524621833
27
第3章 后台执行命令
下载
如果希望向a t命令提交一个s h e l l脚本，使用其命令行方式即可。在提交脚本时使用- f选项。
在上面的例子中，一个叫做d b _ t a b l e . s h的脚本将在明天下午3 : 0 0运行。
还可以使用e c h o命令向a t命令提交作业：
$ echo find /etc -name "passwd" -print | at now +1 minute
3.2.2 列出所提交的作业
一个作业被提交后，可以使用at -l命令来列出所有的作业：
其中，第一行是作业标识，后面是作业运行的日期 /时间。最后一列a代表a t。还可以使用
a t q命令来完成同样的功能，它是 a t命令的一个链接。当提交一个作业后，它就被拷贝到
/ v a r / s p o o l / a t目录中，准备在要求的时间运行。
3.2.3 清除一个作业
清除作业的命令格式为：
atrm [job no]或 at -r [job no]
要清除某个作业，首先要执行at -l命令，以获取相应的作业标识，然后对该作业标识使用
at -r命令，清除该作业。
有些系统使用at-r [job no]命令清除作业。
3.3 &命令
当在前台运行某个作业时，终端被该作业占据；而在后台运行作业时，它不会占据终端。
加入java编程群：524621833
28
第一部分 shell
下载
可以使用&命令把作业放到后台执行。
该命令的一般形式为：
命令 &
为什么要在后台执行命令？因为当在后台执行命令时，可以继续使用你的终端做其他事