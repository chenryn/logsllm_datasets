For SQL Slammer, Fig. 10 shows the results for one sim-
ulation run. Fig. 10(a) shows that without congestion and
human counteractions, the SQL Slammer can infect most of
the vulnerable hosts within 3 minutes. In reality, the Slam-
mer quickly reduced its propagation speed because its huge
scan traﬃc caused congestion or even broke down some net-
works. Therefore, it took about 10 minutes to infect 90%
of vulnerable computers [19] instead of the 3 minutes here.
However, at the beginning when there were few congestions
and human counteractions, the Slammer still propagated ac-
cording to the epidemic model used here (see Fig. 3 in [19]).
From Fig. 10(a), we know that the worm infects 1% vul-
nerable population at time 45 seconds. Fig. 10(b) shows the
estimated value of the infection rate α as time goes on. It
shows that when the worm infects 1% population, the esti-
mated value of α is already stabilized with small oscillation
for a while (though the oscillation central point is higher
x 105
3.5
3
2.5
2
1.5
1
0.5
s
t
s
o
h
d
e
t
c
e
f
n
i
f
o
#
1000 entry hit−list
Code Red simulation
e
t
a
r
n
o
i
t
c
e
n
f
i
t
d
e
a
m
i
t
s
E
0
0
100
200
300
400
500
600
Time t (minute)
0.25
0.2
0.15
0.1
0.05
0
Real value of α
Estimated value of α
50
100
150
Time t (minute)
x 105
N
n
o
i
t
l
a
u
p
o
p
t
d
e
a
m
i
t
s
E
6
5
4
3
2
1
0
Real population size N
Estimated value
50
100
Time t (minute)
150
200
a. Hit-list worm propagation
b. Kalman ﬁlter estimation of α
c. Estimation of population size N
Figure 9: Hit-list worm simulation and Kalman ﬁlter estimation (for one simulation run)
x 104
10
s
t
s
o
h
d
e
t
c
e
f
n
i
f
o
#
8
6
4
2
0
0
e
t
a
r
n
o
i
t
c
e
f
n
i
d
e
t
a
m
i
t
s
E
0.5
0.4
0.3
0.2
0.1
0
Real value of α
Estimated value of α
Real value of α
Estimated value of α
2
e
t
a
r
n
o
i
t
c
e
f
n
i
d
e
t
a
m
i
t
s
E
1.5
1
0.5
20
40
Time t (second)
60
80
100
0
15
35
55
Time t (second)
75
95
115
50
100
150
200
Time t (second)
a. SQL Slammer propagation
b. Kalman ﬁlter estimation of α
c. Kalman ﬁlter estimation of α
(time unit: 1 second)
(time unit: 5 seconds)
Figure 10: SQL Slammer simulation and Kalman ﬁlter estimation (for one simulation run)
than the true value at this moment). Thus the MWC can
detect the worm when it infects about 1% of vulnerable pop-
ulation.
Fig. 10(b) shows that at the beginning of estimation, the
Kalman ﬁlter overestimates the value of α. This is because
the discrete-time model (2) is a ﬁrst-order discretization of
the continuous model (1). The discretization introduces er-
ror in the infection rate α when the worm keeps exponen-
tially increasing at the beginning.
Fig. 10(c) shows the simulation results when we use 5
seconds as the monitoring interval ∆. Because now the dis-
crete time unit is larger, the discretization error shows up
clearly in this ﬁgure — the estimated value ˆα is higher than
its true value.
7. DISCUSSIONS AND FUTURE WORKS
We have used the epidemic model for the estimation and
prediction. While this gives good results so far, we need
to develop more detailed models to reﬂect a future worm’s
dynamics. For example, if a worm spreads through a topol-
ogy, or spreads by exploiting multiple vulnerabilities, or is a
meta-server worm, then the dynamics will not always follow
the epidemic model.
For non-uniformly scanning worm, such as the Code Red
II, we might have diﬀerent observations by setting up the
monitors on diﬀerent places. The non-uniform scanning be-
havior of a worm may also aﬀect the bias correction (7). For
a future unknown worm, through analysis of the worm scan
distribution by using the data from egress scan monitors,
the MWC can determine if the worm is uniformly scanning
the Internet or not. If it is not, the MWC can use data Zt,
or directly use data Ct without bias correction, to detect
and predict the worm.
The monitoring interval ∆ is an important parameter in
the system design. For slow spreading worm, it could be set
to be long, but for fast spreading worm such as the Slammer,
the time interval should be quite small in order to catch up
with the worm’s speed. How can we select the appropriated
∆ before we know the worm’s presence and its speed? We
need to do further research on designing a recursive estima-
tion algorithm that uses adaptive sampling rate. Currently,
one way we think of is to tag the time stamp with each
observed scans. Then at the MWC, several estimators run
in parallel with diﬀerent monitoring intervals — from the
tagged time stamp the correct Ct or Zt for every estimators
can easily be restored.
It could be useful to develop distributed estimation algo-
rithms so as to reduce the latency and traﬃc for the report to
a central server. We may also want to use a continuous ver-
sion of the Kalman ﬁlter. This approach would reduce the
signiﬁcance of the monitoring interval selection and would
work nicely with the distributed estimation setting.
The worm detection method presented here assumes that
only worm scans can cause exponential increasing scan traf-
ﬁc to monitors, while other background scan noise cannot.
We believe this is a reasonable assumption. If we want to
[8] USA Today News. The cost of Code Red: $1.2 billion.
http://www.usatoday.com/tech/news/2001-08-01-
code-red-costs.htm
[9] CounterMalice: military-grade worm containment.
http://www.silicondefense.com/products/countermalice/
[10] D.J. Daley and J. Gani. Epidemic Modelling: An
Introduction. Cambridge University Press, 1999.
[11] Dave Goldsmith. Possible CodeRed Connection
Attempts. Incidients maillist.
http://lists.jammed.com/incidents/2001/07/0149.html
[12] Honeynet Project. Know Your Enemy: Honeynets.
http://project.honeynet.org/papers/honeynet/
[13] J. O. Kephart and S. R. White. Directed-graph
Epidemiological Models of Computer Viruses. In Proc.
of IEEE Symposimum on Security and Privacy, pages
343-359, 1991.
[14] J. O. Kephart, D. M. Chess, and S. R. White.
Computers and Epidemiology. In IEEE Spectrum,
1993.
[15] J. O. Kephart and S. R. White. Measuring and
Modeling Computer Virus Prevalence. In Proc. of
IEEE Symposimum on Security and Privacy, 1993.
[16] Internet Storm Center. http://isc.incidents.org/
[17] D. Moore, C. Shannon, and J. Brown. Code-Red: a
case study on the spread and victims of an Internet
Worm. In Proc. ACM/USENIX Internet Measurement
Workshop, France, November, 2002.
[18] D. Moore, C. Shannon, G. M. Voelker, and S. Savage.
Internet Quarantine: Requirements for Containing
Self-Propagating Code. In IEEE INFOCOM, 2003.
[19] D. Moore, V. Paxson, S. Savage, C. Shannon, S.
Staniford, and N. Weaver. Inside the Slammer Worm.
IEEE Security and Privacy, 1(4):33-39, July 2003.
[20] D. Moore. Network Telescopes: Observing Small or
Distant Security Events. In USENIX Security, 2002.
[21] D. Seeley. A tour of the worm. In Proc. of the Winter
Usenix Conference, San Diego, CA, 1989.
[22] CAIDA. Dynamic Graphs of the Nimda worm.
http://www.caida.org/dynamic/analysis/security/nimda/
[23] SANS Institute. http://www.sans.org
[24] S. Staniford, V. Paxson, and N. Weaver. How to Own
the Internet in Your Spare Time. In 11th Usenix
Security Symposium, San Francisco, August, 2002.
[25] Symantec Early Warning Solutions. Symantec Corp.
http://enterprisesecurity.symantec.com/
SecurityServices/content.cfm?ArticleID=1522
[26] V. Yegneswaran, P. Barford, and J. Ullrich. Internet
Intrusions: Global Characteristics and Prevalence. In
ACM SIGMETRICS, June, 2003.
[27] C.C. Zou, W. Gong, and D. Towsley. Code Red Worm
Propagation Modeling and Analysis. In 9th ACM
Symposium on Computer and Communication
Security, pages 138-147, Washington DC, 2002.
further improve the detection accuracy, however, we can add
some other rule sets in the detection system. For example,
in order to distinguish a worm attack from a DDoS attack,
we can exploit the diﬀerences between them: DDoS attack
has one or several targets while a worm’s propagation has
no speciﬁc target.
The infrastructure of the monitoring system in this paper
is already built up in the real world, such as the SANS’s
“Internet Storm Center” [16] or Symantec’s enterprise early
warning network [25]. However, there are still signiﬁcant
practical issues in setting up such monitoring system, espe-
cially the security and privacy issues in data sharing.
For a fast spreading worm such as the SQL Slammer, hu-
man’s manual actions will not catch up with its speed even if
the early warning is provided at the beginning of the worm’s
spreading. Automatic mitigation is the only way to defend
against such kind of worm attack. How to decrease false
alarm rate, detect a worm earlier, and collect observation
data in time are the key factors in incorporating the early
warning system with automatic mitigation.
8. CONCLUSIONS
We propose a monitoring and early warning system for
Internet worms to provide an accurate triggering signal for
mitigation mechanisms in the early stage of a future worm.
Such system is needed in view of the propagation scale and
speed of the past worms. Although we have been lucky
that the previous worms have not been very malicious, the
same can not be said for the future worms. Based on the
idea “detecting the trend, not the rate” of monitored illegit-
imated scan traﬃc, we present a Kalman ﬁlter to detect the
presence of a worm in its early stage. The analysis and sim-
ulation studies indicate that such a system is feasible, and
the “trend detection” methodology poses many interesting
research issues. We hope this paper would generate interests
of discussion and participation in this topic and eventually
lead to an eﬀective monitoring and early warning system.
9. ACKNOWLEDGEMENTS
This work is supported in part by ARO contract DAAD19-
01-1-0610; by DARPA under Contract DOD F30602-00-0554;
by NSF under grant EIA-0080119, ANI9980552, ANI-0208116,
and by Air Force Research Lab.
10. REFERENCES
[1] B.D.O. Anderson and J. Moore. Optimal Filtering.
Prentice Hall, 1979.
[2] V.H. Berk, R.S. Gray, and G. Bakos. Using sensor
networks and data fusion for early detection of active
worms. In Proc. of the SPIE AeroSense, 2003.
[3] Cooperative Association for Internet Data Analysis.
http://www.caida.org
[4] CERT Coordination Center. http://www.cert.org
[5] Z. Chen, L. Gao, and K. Kwiat. Modeling the Spread
of Active Worms, In IEEE INFOCOM, 2003.
[6] CNN News. Computer worm grounds ﬂights, blocks
ATMs.
http://europe.cnn.com/2003/TECH/internet/01/25/
internet.attack/
[7] eEye Digital Security. .ida ”Code Red” Worm. 2001.
http://www.eeye.com/html/Research/Advisories/
AL20010717.html