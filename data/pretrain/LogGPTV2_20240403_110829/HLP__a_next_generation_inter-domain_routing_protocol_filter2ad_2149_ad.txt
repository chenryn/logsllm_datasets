The minimum requirement should be that AS’s at least al-
locate link costs from a common cost-range. Without loss of
generality, let us assume that all AS’s use a common cost-
range, say [0 . . . m] for some value m.
The ability to use cost-hiding to improve the scale and iso-
lation properties is dependent on the presence of an alterna-
tive route of comparable cost. Given a common cost-range,
the cost diﬀerence between two routes to the same desti-
nation is dependent on the hop-length diﬀerence between
the two paths. As shown in Table 3, we ﬁnd that for nearly
99.6% of destination AS’s, the hop length diﬀerence between
the primary and secondary routes is at most 2 and for 90%
the diﬀerence is at most 1.
To preserve the scale and isolation properties for a major-
ity of Internet routes, we need to pick a threshold ∆ that
can oﬀset the sum of the cost of 2 inter-AS links. By do-
ing so, we can approximate the scale and isolation results
achieved in the best-case cost hiding (Section 4.1.2) for more
than 99% of routes. For example, in the simple case where
inter-AS links are assigned uniformly in the range [0 . . . m],
choosing a cost-hiding threshold of ∆ = m achieves the de-
sired result. In the general case, a simple thumb-rule is to
set ∆ = 2 × µ where µ is the mean inter-AS link-cost.
4.2 Convergence properties
We deﬁne convergence time as the interval of time (assum-
Isolation: Comparing the isolation im-
Figure 8:
provement factor of HLP for diﬀerent types of inter
AS links.
Figure 9: An example topology to illustrate the iso-
lation properties of a multi-homed AS.
isolation properties. To better explain this phenomenon,
consider the simple topology in Figure 9 where AS A is
multi-homed to two tier-1 providers B and C. When the link
(A, C) fails, C chooses the alternative route through B of
comparable cost (since it would have received an announce-
ment from B earlier) and withdraws its previous route an-
nouncement (C, A) from all its peers B, X, Y, Z. In this case,
all the peers of C automatically switch to the route through
B. In this entire process, none of the AS’s propagate any
updates to their customers and information of the event is
hidden from the rest of the Internet. Extending this simple
example, many tier-1 and tier-2 AS’s typically have multi-
ple routes (of comparable cost) through diﬀerent peers to a
multi-homed customer. When one of these paths fails, each
tier-1/tier-2 AS automatically switches to the other path
without triggering any new updates. Hence, very few AS’s
(apart from top-tier AS’s) are notiﬁed of a path failure to a
multi-homed customer.
 0 0.2 0.4 0.6 0.8 1 10 100 1000 10000 100000Cumulative percentageChurnBGPHLP 0 0.2 0.4 0.6 0.8 1 1 10 100 1000 10000Cumulative percentageIsolationBGPHLP 0 0.2 0.4 0.6 0.8 1 1 10 100 1000 10000Cumulative percentageHLP/BGP performance ratioChurnIsolation 0 0.2 0.4 0.6 0.8 1 1 10 100 1000 10000Cumulative percentageratio of BGP to HLP isolationmultihomedregional linkstier1-tier1 linksABCYZXTier-1 providersing certain propagation delays along the links) it takes the
entire network to reﬂect a particular route change, e.g.,a new
route becomes available, a route has disappeared, or a route
has changed. To study the protocol convergence character-
istics, we use the model introduced by Labovitz et al. [17].
The only diﬀerence is that instead of a fully-connected mesh
we assume a hierarchical topology with n nodes (AS’s) that
reﬂects the topology enforced by HLP.
We make three simplifying assumptions in our analysis.
First, similar to previous works [17, 22], we model an AS
as a single entity though the underlying AS may comprise
of several routers. This assumption holds because from the
perspective of HLP, if all routers adhere to the route prop-
agation rules, the behavior of all routers in unison presents
a consistent view of the AS.6 Second, we model the route
propagation delay within an AS to be a constant value, the
assumption being that the ratio of the propagation times
across diﬀerent AS’s is a constant factor. Finally, we do not
consider any form of ﬂap dampening to be activated that
may aﬀect convergence.
We prove the following result on convergence:
Theorem 3: For a given destination D, let k(D) repre-
sent the maximum number of peering links in any HLP route
advertisement to destination D. Under the assumption that
every AS adheres to the HLP route propagation rules, if an
event E aﬀects destination D, then the route updates to D
triggered by event E will converge within a maximum time
of O(nk(D)).
We refer the reader to [28] for a detailed proof. In com-
parison, Labovitz et al. [17] showed that the worst case con-
vergence time of BGP in a n-node fully connected graph
is O((n − 1)!). k(D) represents the maximum length of an
FPV (number of peering links) in an HLP route to D. The
primary reason for the convergence improvement in HLP is
that HLP explicitly constrains the value of k(D) (an AS that
has a customer route) while BGP places no such restrictions.
The primary take-away of this result is: The value of k(D)
is at most 2 for 99% of Internet routes thereby providing
a quadratic worst-case convergence time for these destina-
In fact, k(D) ≤ 1 for 90% of destinations [27, 9]
tions.
thereby providing linear-time convergence. The maximum
value of k(D) we observed for any route was 4.
5. TRAFFIC ENGINEERING AND POLICY
SUPPORT
Policy routing and traﬃc engineering (TE) are interre-
lated. Although BGP was never designed to do traﬃc en-
gineering, it is frequently used that way. When considering
any alternative routing protocol, it is important to under-
stand the way that the traﬃc engineering options are af-
fected.
HLP can in fact support most of the commonly used BGP
traﬃc engineering practices and policies, while maintaining
the basic scalability, isolation and convergence advantages.
In this section, we describe a set of TE mechanisms that
can be incorporated into HLP to provide: (a) AS’s the ﬂex-
ibility to perform preﬁx-level route selection (Section 5.1);
(b) AS’s the ability to achieve inbound traﬃc engineering
6Though two routers within the same AS may end up adver-
tising diﬀerent routes to a destination, the two routes will
be consistent in that, if one route is a customer route, the
other one should also be a customer route.
Figure 10: AS A can select two separate routes to des-
tination D without triggering updates to its neighbors.
by manipulating link-costs (Section 5.2). (c) a destination
AS the ability to do relatively infrequent preﬁx deaggrega-
tion/aggregation for TE purposes. Unlike BGP7, the mech-
anisms we describe below trigger very few route updates.
Finally, we conclude in Section 5.3 by comparing and con-
trasting the policies supported by BGP and HLP.
5.1 Preﬁx-level route selection
Preﬁx-level route selection is a traﬃc engineering mecha-
nism commonly used with BGP, whereby an AS can inde-
pendently choose diﬀerent routes to diﬀerent preﬁxes owned
by the same destination AS. This is easy with BGP’s preﬁx-
based routing, but HLP does AS-based routing, so this seems
at ﬁrst to be problematic. However, we can use HLP’s infor-
mation hiding to support preﬁx-level route selection, with-
out even requiring any addition route update messages. The
example topologies in ﬁgure 10 illustrate this process.
In
both cases, AS A has two distinct routes to destination D
which are of comparable cost. Using information hiding, AS
A has the ﬂexibility of picking either of these two routes
without needing to inform its neighbors of its choice. If D
advertises two distinct preﬁxes in the (AS, preﬁx) mapping
table, then A can choose to route the two preﬁxes inde-
pendently even though they have the same origin AS. How-
ever, HLP’s default preference for customer routes places
one constraint: An AS that has a customer route to a des-
tination can perform preﬁx-level route selection only within
its available choice of customer routes (and cannot choose a
non-customer route).
Static preﬁx deaggregation: A destination AS that
intends to perform inbound traﬃc engineering for diﬀerent
sub-preﬁxes needs to explicitly deaggregate its preﬁxes into
sub-preﬁxes and publish these sub-preﬁxes in the (AS, pre-
ﬁx) mapping table. Given this information, any AS that has
multiple routes to this destination AS can choose a separate
route for each sub-preﬁx. By maintaining this deaggregation
mapping to be relatively static, HLP avoids the unnecessary
routing dynamics (route withdrawals, new advertisements
for sub-preﬁxes) triggered by preﬁx deaggregation in BGP.
5.2 Cost-based inbound trafﬁc engineering
AS-prepending is another BGP traﬃc engineering tech-
nique, whereby a routing domain prepends its own AS num-
ber multiple times to the AS Path it advertises to a neighbor
to make the link less preferred. This is a very crude tech-
nique, but very commonly used.
7Preﬁx deaggregation/aggregation can trigger several un-
necessary route updates in BGP.
AS can roughly construct the structure of the complete path.
While tier-1 and tier-2 AS’s can reconstruct paths with high
accuracy, this ability decreases for AS’s which are lower in
the AS hierarchy. An example of a negation based policy
is avoiding other transit networks where an AS X intends
to avoid routes through a speciﬁc AS Y . Among the top-
tier ISPs, the FPV in HLP routes should provide suﬃcient
information to enforce this policy. But for AS’s lower in
the hierarchy, it becomes harder to enforce this policy. Our
discussions with tier-1 ISPs seem to indicate that negation
based policies are not very common.
HLP speciﬁc policies: HLP also enables a new set
of policies. Two such policies are class based routing and
cost-based routing. HLP can support diﬀerent classes of
routes much like Diﬀerentiated Services in the Internet -
e.g., customer-class, peer-class, provider-class. Unlike BGP,
one can make these class deﬁnitions transitive in HLP across
multiple inter-AS links. Moreover, HLP allows AS’s to spec-
ify costs on links and provides the ability to set policies based
on these link costs (as shown in Section 5.2).
6. HLP: A ROUTER PERSPECTIVE
Until now, our description of HLP focused on treating an
AS as a single entity. However, given that an AS can com-
prise of hundreds of routers, we require an internal HLP
protocol, iHLP, to ensure that all routers within an AS be-
have in a manner consistent with the HLP protocol. While
a complete design of iHLP is outside the scope of this paper,
we describe the basic consistency checks that iHLP should
enforce within an AS (Section 6.1). Next in Section 6.2), we
describe a router-level of HLP on top of the XORP software
router platform [2], present micro-benchmarks on the over-
head of processing updates and explain the implementation
lessons we learnt.
6.1
iHLP consistency checks
The basic design of internal BGP (iBGP) is not com-
pletely compatible with our HLP protocol design. To make
routers within an AS act in a manner compatible with HLP,
we need an internal HLP (iHLP) protocol to enforce four
consistency checks:
Maintaining a communicating group: Since routers within
an AS need to act in unison, every router should maintain a
communicating group of live routers within the AS. Unless
an AS partitions, an AS should have only one communi-
cating group. If it does partition, iHLP should ensure that
routers in each communicating group act in unison; however
each communicating group will act on its own.
Maintaining customer-route consistency: HLP follows the
prefer-customer guideline. To implement this, iHLP needs
to ensure that in the absence of exceptions, every router
should choose a customer route to a destination provided
one such exists. An exit-router that raises a prefer-customer
exception merely withdraws its current route. In the absence
of an alternate customer route, the destination is classiﬁed
as an exception; otherwise, it is not.
Maintaining link-cost consistency: From an external view,
every inter-AS link is associated with a speciﬁc cost. In the
presence of multiple peering links with a neighboring AS,
iHLP needs to ensure a common cost value across all routers
for a peering link. We do not impose any restrictions on how
to compute this common cost value.
Maintaining route-update consistency: All routes propa-
Figure 11: An example of a multi-homed customer M
with three providers A,B,C and the cost-knobs (a, b, c)
that M can set.
In HLP, this process is more explicit: an AS can manip-
ulate the cost of its inter-AS links to achieve volume-based
inbound TE. This works under the assumption that most
AS’s choose routes based on cost as currently happens with
BGP’s AS Path length. Figure 11 illustrates the process;
the multi-homed stub network M has the ﬂexibility of set-
ting the costs (a, b, c) to its providers to inﬂuence the in-
bound traﬃc ﬂow. The degree of control exerted by M on
the incoming traﬃc from source AS X is then determined
by the diﬀerences in cost of paths between the provider net-
works (A, B and C) and X. If the cost diﬀerence between
these paths can be oﬀset by suitably setting (a, b, c), M can
choose the provider through which traﬃc from X will be
routed. This cost diﬀerence between these paths is depen-
dent on the diﬀerences in their hop-lengths. In a prior anal-
ysis (refer to Table 3 in Section 4.1.4), we showed that in
nearly 90% of Internet paths the hop-length diﬀerence be-
tween the shortest and second-shortest path to a destination
is at most 1 (99.6% for a diﬀerence of at most 2). Hence, we
believe that M can perform ﬁne-grained control by manip-
ulating costs to its upstream providers. However, the level
of such control is dependent on the underlying distribution
of link-costs and we intend to evaluate this more completely
in future work.
5.3 Policy practices: HLP vs BGP
BGP practices that carry over: Several existing TE
practices in BGP can be directly carried over without much
modiﬁcations to HLP. We cite three speciﬁc examples of
commonly used practices today. First, since HLP is meant
as a replacement to eBGP, it does not aﬀect most of the
intra-domain traﬃc engineering practices (e.g., hot-potato
routing) unless these conﬂict with HLP’s inter-domain rout-
ing policy. Second, existing proposals to perform traﬃc-
engineering across multiple peering links between two do-
mains using MEDs or negotiated routing [20], can also be
naturally extended to HLP. Third, HLP can also support
community attributes, a feature used by customer AS’s to
signal speciﬁc policies to upstream providers.
BGP policies not supported by HLP: While HLP can
support a variety of BGP policies, there are certain corner-
case policies that it cannot. Two examples of such policies
are preference rules based on generic regular expressions on
the path-vector, and import rules using negation-based ex-
pressions on the path-vector. Due to information hiding, the
entire routing path to a destination AS is not visible in HLP
and this limits the ability to use generic regular-expression-
based policies in HLP. However, in many cases, given the
AS hierarchy information and the FPV to a destination, an
MCBAaDestination networksChosenroutebcgated by AS X about a destination AS D to a neighboring
AS Y should satisfy: (a) All announcements about D to Y