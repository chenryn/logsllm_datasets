为了在Kubernetes上部署容器化的应用程序，并确保其高可用性和弹性扩展，请按照以下步骤操作：

1. **创建Kubernetes集群**：根据您的需求，选择合适的平台（如Google Cloud、Amazon Web Services或Microsoft Azure）来构建Kubernetes集群。如果您希望在本地测试，则可以考虑使用Minikube这样的工具。

2. **准备容器镜像**：首先需要将您的应用程序封装成Docker镜像或其他兼容格式的容器镜像。完成镜像制作后，请将其上传至私有仓库或者公共仓库如Docker Hub。

3. **编写Kubernetes资源定义文件**：基于YAML格式编写描述如何运行你的应用及相关组件（如Deployment, Service等）的配置文件。这一步骤对于定义期望状态非常重要，包括但不限于副本数设置、服务暴露方式等信息。

4. **部署应用**：利用`kubectl apply -f <your-yaml-file>`命令将上述配置应用于您的Kubernetes环境。此过程会自动启动所需数量的应用实例以满足指定条件下的高可用要求。

5. **定义并创建服务**：通过Service对象向外部用户提供稳定访问入口。您可以通过设定正确的类型（例如NodePort, LoadBalancer）使得服务能够正确地分发流量到后端Pods。

6. **实现自动扩缩容**：结合Horizontal Pod Autoscaler (HPA)机制，依据CPU利用率等指标动态调整运行中的Pod数目。这样可以在业务高峰期自动增加实例数量，而在低谷期减少资源占用，从而达到成本效益最大化的目的。

综上所述，遵循以上指南可以帮助您成功地在Kubernetes平台上搭建起既具备高可用性又支持灵活伸缩特性的容器化解决方案。