> 如果感觉自己太安逸了，那就把简历挂出去，去了解其他公司用的是什么技术，他们更关注哪些痛点？面几次你就有方向了。
这时候起了个念头：找面试官求虐，以此来鞭策自己，进而更好地制定学习方向。
于是我重新下载了某聘软件，在首页推荐里投了几家公司。
## 开始面试
11 月 10 号投的简历，当天就有 2 家预约了 11 号下午的线上面试，其中就有鹅厂 🐧
好巧不巧，10 号晚上要双十一业务保障，一直到第二天凌晨 2 点半才下班。
熬夜太伤身，还好能申请调休一天，也省去了找借口请假 🙊
这段时间集中面了 3 家：
> 第 1 个是广州的公司，11 号当晚就完成了 2 轮线上面试，开得有点低，就婉拒了；
> 第 2 个就是本文的重点——鹅厂；
> 第 3 个是做跨境电商的公司，一面就跪（恭喜它荣升为“在我有限的工作经历中，面试体验最差的 2 家公司之一”🙂️）
## 鹅厂，去还是不去？
一直有一个大厂梦，奈何菜鸟一枚，之前试过好几次，都跪在技术面了。
所以想了个曲线救国的方法：先在其他单位积累着，有机会了再争取大厂的机会 💪
很幸运，也很猝不及防，这次竟然通过了鹅厂的所有面试。
虽然已到年底，但是要是错过这么难得的机会，下次就不知道什么时候才能再通关了。
所以，**年后拿到年终再跳槽 vs 已到手的鹅厂 Offer，我选择了后者 😄**
## 我的鹅厂面试
如本文标题所说，16 天通关五轮面试，第 17 天，我终于收到了期盼已久的鹅厂 Offer。
做技术的同学，可能会对鹅厂的面试很好奇，他们都会问哪些问题呢？
我应聘的是大数据开发（Java）岗位，接下来对我的面试做个梳理，也给想来鹅厂的同学们一个参考 😊
> 几乎所有问题都能在网络上找到很详细的答案。
> 篇幅有限，这里只写题目和一些引申的问题。
### 技术一面
#### Java 语言相关
1、对 Java 的类加载器有没有了解？如何自定义类加载器？
> 引申：一个类能被加载多次吗？`java/javax` 包下的类会被加载多次吗？
2、Java 中要怎么创建一个对象 🐘？
3、对多线程有了解吗？在什么场景下需要使用多线程？
> 引申：对 **线程安全** 的认识；对线程池的了解，以及各个线程池的适用场景。
4、对垃圾回收的了解？
5、对 JVM 分代的了解？
6、NIO 的了解？用过 RandomAccessFile 吗？
> 引申：对 **同步、异步，阻塞、非阻塞** 的理解？
>
> 多路复用 IO 的优势？
7、ArrayList 和 LinkedList 的区别？各自的适用场景？
8、实现一个 Hash 集合，需要考虑哪些因素？
> 引申：JDK 对 HashMap 的设计关键点，比如初识容量，扩所容，链表转红黑树，以及 JDK 7 和 JDK 8 的区别等等。
#### 通用学科相关
1、TCP 的三次握手；
2、Linux 的常用命令，比如：
> ```shell
> ps aux / ps -ef、top C
> df -h、du -sh *、free -g
> vmstat、mpstat、iostat、netstat
> ```
#### 项目框架相关
1、Kafka 和其他 MQ 的区别？它的吞吐量为什么高？
> 消费者主动 pull 数据，目的是：控制消费节奏，还可以重复消费；
>
> 吞吐量高：各 partition 顺序写 IO，批量刷新到磁盘（OS 的 pageCache 负责刷盘，Kafka 不用管），比随机 IO 快；读取数据基于 sendfile 的 Zero Copy；批量数据压缩……
2、Hive 和 SparkSQL 的区别？
3、Ranger 的权限模型、权限对象，鉴权过程，策略如何刷新……
#### 问题定位方法
1、ssh 连接失败，如何定位？
> 是否能 ping 通（DNS 是否正确）、对端端口是否开了防火墙、对端服务是否正常……
2、运行 Java 程序的服务器，CPU 使用率达到 100%，如何定位？
> `ps aux | grep xxx` 或 `jps` 命令找到 Java 的进程号 `pid`，
>
> 然后用 `top -Hp pid` 命令查看其阻塞的线程序号，**将其转换为 16 进制**；
>
> 再通过 `jstack pid` 命令跟踪此 Java 进程的堆栈，搜索上述转换来的 16 进制线程号，即可找到对应的线程名及其堆栈信息……
3、Java 程序发生了内存溢出，如何定位？
> `jmap` 工具查看堆栈信息，看 Eden、Old 区的变化……
### 技术二面
二面主要是过往项目相关的问题：
1、Solr 和 Elasticsearch 的区别 / 优劣？
2、对 Elasticsearch 的优化，它的索引过程，选主过程等问题……
3、项目中遇到的难题，如何解决的？
blabla 有少量的基础问题和一面有重复，还有几个和大数据相关的问题，记不太清了 😅
### 技术三面
这一面是总监面，更多是个人关于职业发展的一些想法，以及在之前公司的成长和收获、对下一份工作的期望等问题。
但也问了几个技术问题。印象比较深的是这个：
> 1 个 1TB 的大文件，每行都只是 1 个数字，无重复，8GB 内存，要怎么对这个文件进行排序？
首先想到的是 MapReduce 的思路，拆分小文件，分批排序，最后合并。
**此时连环追问来了：**
> Q：如何尽可能多的利用内存呢？
>
> A：用位图法的思路，对数字按顺序映射。（对映射方法要有基本的了解）
>
> Q：如果在排好序之后，还需要快速查找呢？
>
> A：可以做索引，类似 Redis 的跳表，通过多级索引提高查找速度。
>
> Q：索引查找的还是文件。要如何才能更多地利用内存呢？
>
> A：那就要添加缓存了，把读取过的数字缓存到内存中。
>
> Q：缓存应该满足什么特点呢？
>
> A：应该使用 LRU 型的缓存。
呼。。。总算是追问完了这道题 😂
---
还有 GM 面和 HR 面，问题都和个人经历相关，这里就略去不表。
## 文末的絮叨
**入职鹅厂已经 1 月有余。不同的岗位，不同的工作内容，也是不同的挑战。**
感受比较深的是，作为程序员，还是要自我驱动，努力提升个人技术能力，横向纵向都要扩充，这样才能走得长远。