### 优化后的文本

#### 当感到安逸时，寻求新的挑战
如果你感觉自己的职业生涯过于安逸，不妨将自己的简历挂到招聘网站上，了解其他公司使用的技术栈以及他们关注的核心问题。通过几次面试，你将能够更明确地找到自己的学习方向。在这种情况下，我决定主动寻找面试机会，以鞭策自己不断进步。

于是，我在某招聘软件上重新注册账号，并投递了几份简历给感兴趣的公司。

#### 开始面试
11月10日，我提交了简历。当天就有两家公司预约了第二天下午的线上面试，其中包括鹅厂（腾讯）。巧合的是，10日晚上正好是双十一业务保障的时间，我加班到了凌晨2点半。尽管熬夜对身体影响很大，但幸运的是，我可以申请调休一天，省去了请假的麻烦。

在这段时间里，我共参加了三场面试：
- 第一家是广州的一家公司，11号当晚完成了两轮线上面试，但由于薪资待遇较低，我婉拒了。
- 第二家是本文的重点——鹅厂。
- 第三家是一家跨境电商公司，只进行了一轮面试就结束了（这次经历让我把它列为“工作经历中面试体验最差的公司之一”）。

#### 鹅厂的机会
我一直梦想进入大厂工作，但由于经验不足，之前多次尝试都未能成功。因此，我计划先在其他公司积累经验，等待合适的机会再冲刺大厂。

非常幸运的是，这次竟然通过了鹅厂的所有面试。考虑到年底跳槽的风险和不确定性，我决定抓住这个难得的机会。最终，**年后拿到年终奖再跳槽 vs 已经拿到的鹅厂 Offer，我选择了后者 😄**

#### 我的鹅厂面试经历
如标题所述，我在16天内顺利通过了五轮面试，并在第17天收到了期盼已久的鹅厂 Offer。对于从事技术工作的同学来说，可能会对鹅厂的面试流程感兴趣。以下是我应聘大数据开发（Java）岗位时遇到的一些问题，希望能为有志于加入鹅厂的同学提供参考。

几乎所有问题都能在网络上找到详细的答案。由于篇幅有限，这里仅列出题目及其相关引申问题。

##### 技术一面
###### Java语言相关
1. 对Java的类加载器是否有了解？如何自定义类加载器？
   - 引申：一个类可以被加载多次吗？`java/javax`包下的类会被加载多次吗？
2. 在Java中如何创建对象？
3. 对多线程有了解吗？在哪些场景下需要使用多线程？
   - 引申：对线程安全的理解；对线程池的了解及其适用场景。
4. 对垃圾回收机制有了解吗？
5. 对JVM分代机制有了解吗？
6. NIO的相关知识？是否使用过RandomAccessFile？
   - 引申：同步、异步与阻塞、非阻塞的区别；多路复用IO的优势。
7. ArrayList与LinkedList的区别及各自的应用场景。
8. 实现一个哈希集合时需考虑哪些因素？
   - 引申：JDK对HashMap的设计关键点，包括初始容量、扩容机制、链表转红黑树等。

###### 通用学科相关
1. TCP三次握手的过程。
2. Linux常用命令，例如：
   ```shell
   ps aux / ps -ef, top C
   df -h, du -sh *, free -g
   vmstat, mpstat, iostat, netstat
   ```

###### 项目框架相关
1. Kafka与其他消息队列的区别及其高吞吐量的原因。
   - 消费者主动拉取数据，可以控制消费节奏并支持重复消费；
   - 吞吐量高：各分区顺序写入磁盘，批量刷新至pageCache，比随机IO快；基于sendfile的Zero Copy；批量数据压缩等。
2. Hive与SparkSQL的区别。
3. Ranger权限模型、权限对象、鉴权过程及策略刷新方法。

###### 问题定位方法
1. SSH连接失败时如何定位问题？
   - 是否能ping通目标主机（检查DNS设置）、目标端口是否开启防火墙、服务是否正常运行等。
2. 运行Java程序的服务器CPU使用率达到100%时如何定位问题？
   - 使用`ps aux | grep xxx`或`jps`命令查找Java进程ID（pid），然后执行`top -Hp pid`查看其阻塞的线程ID（将其转换为16进制）；
   - 通过`jstack pid`跟踪堆栈信息，搜索上述转换后的16进制线程号，即可找到对应的线程名称及其堆栈信息。
3. Java程序发生内存溢出时如何定位问题？
   - 使用`jmap`工具查看堆栈信息，观察Eden区和Old区的变化情况。

##### 技术二面
第二轮面试主要围绕过往项目经历展开：
1. Solr与Elasticsearch的区别/优劣。
2. 对Elasticsearch的优化措施及其索引过程、选主过程等问题。
3. 项目中遇到的难题及解决方案。

此外还有一些基础性问题与第一轮面试有所重叠，并涉及少量大数据相关的知识点。

##### 技术三面
第三轮由部门总监主持，更多聚焦于个人职业发展规划、在前公司的成长收获以及对未来工作的期望等方面。不过也提出了一些技术性问题，其中印象较为深刻的一个例子如下：

> 有一个大小为1TB的文件，每行仅包含一个数字且无重复项，在只有8GB内存的情况下如何对其进行排序？

我的初步思路是采用MapReduce的方法，将大文件分割成多个小文件分别处理后再合并结果。接下来面试官连续提出了几个深入探讨的问题：
- 如何最大化利用现有内存资源？
  - 可以借鉴位图法的思想按序映射每个数字。（需具备基本的位运算知识）
- 如果排序完成后还需要快速检索怎么办？
  - 构建类似于Redis跳跃表那样的多级索引结构来加速查询速度。
- 索引依然指向原始文件内容。怎样才能进一步提高内存利用率？
  - 为此引入缓存机制，将已读取过的数值暂存于RAM中以便后续访问。
- 缓存系统应该具备哪些特性？
  - 最好采用LRU类型的淘汰策略。

终于结束了这道题目的讨论 😂

---
随后还有总经理面谈和人力资源部面试环节，提问内容均和个人背景密切相关，此处不再赘述。

#### 结语
入职鹅厂已经一个多月了。面对全新的岗位职责与工作任务，我深感作为一名程序员必须保持自我驱动精神，不断提升技术水平并拓展知识领域，这样才能走得更远。