time placed a considerable load on the PCs running the
prototype. Accordingly, computation results, while al-
ready acceptable, should improve for embedded imple-
mentations.
We evaluate the modem and handshake using soft-
ware audio channels conﬁgured to use one of three au-
dio codecs: G.711 (µ-law), Adaptive MultiRate Narrow
Band (AMR-NB), and Speex. These particular codecs
were among the most common codecs used for land-
line audio compression, cellular audio, and VoIP audio,
respectively. We use the sox[10] implementations of
G.711 and AMR-NB and the ffmpeg[8] implementation
of Speex. We use software audio channels to provide
a common baseline of comparison, as no VoIP client or
cellular device supports all of these codecs.
As link layer performance depends only on the bit er-
ror characteristics of the modem, we evaluate the link
layer using a software loopback with tunable loss char-
acteristics instead of a voice channel. This allowed us to
fully and reproducibly test and evaluate the link layer.
6.2 Modem Evaluation
The most important characteristic of the modem is its
resistance to bit errors. To measure bit error, we transmit
100 frames of 2000 random bits6 each and measure the
bit error after reception.
Table 3 shows the average and standard deviation of
the bit error for various codecs. The modem saw no
bit errors on the G.711 channel; this is reﬂective of the
fact that G.711 is high-quality channel with very mini-
mal processing and compression. AMR-NB and Speex
62000 bits was chosen as the ﬁrst “round” number larger than the
largest message in the AuthLoop handshake.
972  25th USENIX Security Symposium 
USENIX Association
10
Table 4: Link Layer Transmission of 2000 bits
Bit Error Rate
0.1%
1%
2%
Transmission Time Goodput
490 bps
326 bps
172 bps
4.086 s (0.004)
6.130 s (0.009)
11.652 s (0.007)
both saw minimal bit error as well, though Speex had a
much higher variance in errors. Speex had such a high
variance because one frame was truncated, resulting in a
higher average error despite the fact the other 99 frames
were received with no error.
6.3 Link Layer Evaluation
The most important characteristic of the link layer is its
ability to optimize goodput – the actual amount of appli-
cation data transmitted per unit time (removing overhead
from consideration).
Table 4 shows as a function of bit error the transmis-
sion time and the goodput of the protocol compared to
the theoretical optimal transmission time and goodput.
The optimal numbers are computed from the optimal bit
time (at 500 bits per second) plus 40ms of header and
footer. The experimental numbers are the average of
transmission of 50 messages with 2000 bits each. The
table shows that in spite of high bit error rates (up to 2%)
the link layer is able to complete message transmission.
Of course, the effect of bit errors on goodput is substan-
tial at larger rates. Fortunately, low bit error rates (e.g.
0.1%) result in a minor penalty to goodput – only 5bps
lower than the optimal rate. Higher rates have a more
severe impact, resulting in 65.8% and 34.7% of optimal
goodput for 1% and 2% loss. Given our observations
of bit error rates at less than 0.5% for all codecs, these
results demonstrate that our Link Layer retransmission
parameters are set with an acceptable range.
6.4 Handshake Evaluation
To evaluate the complete handshake, we measure the
complete time from handshake start to handshake com-
pletion from the veriﬁer’s perspective. We evaluate both
variants of the handshake: with and without the prover
sending a certiﬁcate. Handshakes requiring a certiﬁcate
exchange will take much longer than handshakes with-
out a certiﬁcate. This is a natural consequence of simply
sending more data.
Table 5 shows the total handshake times for calls over
each of the three codecs. These results are over 10 calls
each. Note that these times are corrected to remove
the effects of instrumentation delays and artiﬁcial delays
caused by IPC among the different components of our
prototype that would be removed or consolidated in de-
ployment.
From the veriﬁer perspective, we ﬁnd that cached-
certiﬁcate exchanges are quite fast – averaging 4.844 sec-
onds across all codecs. When certiﬁcates are not cached,
our overall average time is 8.977 seconds. Differences in
times taken for certiﬁcate exchanges for different codecs
are caused by the relative underlying bit error rate of
each codec. G.711 and Speex have much lower error
rates than AMR-NB, and this results in a lower overall
handshake time. In fact, because those codecs saw no er-
rors during the tests, their execution times were virtually
identical.
Most of the time spent in the handshake is spent in
transmitting messages over the voice channel.
In fact,
transmission time accounts for 99% of our handshake
time. Computation and miscellaneous overhead average
to less than 50 milliseconds for all messages. This indi-
cates that AuthLoop is computationally minimal and can
be implemented on a variety of platforms.
7 Discussion
This section provides a discussion of client authentica-
tion, public key infrastructure, and deployment consider-
ations for AuthLoop.
7.1 Client Credentials
Up until this point, we have focused our discussion
around strong authentication of one party in the phone
call (i.e., the Prover). However, clients already engage in
a weaker “application-layer” authentication when talking
to many call centers. For instance, when calling a ﬁnan-
cial institution or ISP, users enter their account number
and additional values including PINs and social security
numbers. Without one ﬁnal step, our threat model would
allow for an adversary to successfully steal such creden-
tials as follows: An adversary would launch a 3-Way call
to both the victim client and the targeted institution. Af-
ter passively observing the successful handshake, the ad-
versary could capture the client’s credentials (i.e., DTMF
tone inputs) and hang up both ends of the call. The adver-
sary could then call the targeted institution back spooﬁng
the victim’s Caller ID and present the correct credentials.
One of the advantages of TLS is that it allows for the
generation of multiple session keys, for use not only in
continued authentication, but also in the protection of
data conﬁdentiality and integrity. AuthLoop is no differ-
ent. While the data throughput enabled by our modem
is low, it is sufﬁciently large enough to carry encrypted
copies of client credentials. Accordingly, an adversary
attempting to execute the above attack would be unable
to do so successfully because this sensitive information
USENIX Association  
25th USENIX Security Symposium  973
11
Table 5: Handshake completion times
Codec
G.711
AMR-NB
Speex
Average
Cached Certiﬁcate Certiﬁcate Exchanged
4.463 s (0.000)
5.608 s (0.776)
4.427 s (0.000)
4.844 s
8.279 s (0.000)
10.374 s (0.569)
8.279 s (0.000)
8.977 s
could easily be passed through AuthLoop (and therefore
useless in a second session). Moreover, because users are
already accustomed to entering such information when
interacting with these entities, the user experience could
continue without any observable difference.
7.2 Telephony PKI
One of the most signiﬁcant problems facing SSL/TLS is
its trust model. X.509 certiﬁcates are issued by a vast
number of Certiﬁcate Authorities (CAs), whose root cer-
tiﬁcates can be used to verify the authenticity of a pre-
sented certiﬁcate. Unfortunately, the unregulated nature
of who can issue certiﬁcates to whom (i.e., what author-
ity does X have to verify and bind names to entity Y ?)
and even who can act as a CA have been known since the
inception of the current Public Key Infrastructure [37].
This weakness has lead to a wide range of attacks, and
enabled both the mistaken identity of domain owners
and confusion as to which root-signed certiﬁcate can be
trusted. Traditional certiﬁcates present another challenge
in this environment - the existence of long veriﬁcation
chains in the presence of the bitrate limited audio channel
means that the blind adoption of the Internet’s traditional
PKI model will simply fail if applied to telephony sys-
tems. As we demonstrated in our experiment in Table 1,
transmitting the entirety of long certiﬁcate chains would
simply be detrimental to the performance of AuthLoop.
The structure of telephony networks leads to a natu-
ral, single rooted PKI system. Competitive Local Ex-
change Carriers (CLECs) are assigned blocks of phone
numbers by the North American Numbering Plan Asso-
ciation (NANPA), and ownership of these blocks is eas-
ily conﬁrmed through publicly posted resources such as
NPA/NXX databases in North America. A similar ob-
servation was recently made in the secure Internet rout-
ing community, and resulted in the proposal of the Re-
source Public Key Infrastructure (RPKI) [45]. The ad-
vantage to this approach is that because all allocation of
phone numbers is conducted under the ultimate author-
ity of NANPA, all valid signatures on phone numbers
must ultimately be rooted in a NANPA certiﬁcate. This
Telephony Public Key Infrastructure (TPKI) reduces the
length of certiﬁcate chains and allows us to easily store
the root and all CLEC certiﬁcates in the US and asso-
Stored
Endpoint
at
AddTrust Root
Verisign Root
. . .
Entrust Root
Stored
Endpoint
at
NANPA Root
AT&T
(NPA/NXX 
Administrator)
(800) 432-1000
Bank of 
America
Symantec
bankof 
america.com
xyz.bankof 
america.com
Current Internet PKI
Proposed TPKI
Figure 6: The Telephony Public Key Infrastructure
(TPKI). Unlike in Internet model, the TPKI has a single
root (NANPA) which is responsible for all block alloca-
tion, and a limited second level of CLECs who admin-
ister speciﬁc numbers. Accordingly, only the certiﬁcate
for the number claimed in the current call needs to be
sent during the handshake.
ciated territories (≈ 700 [46]) in just over 100 KiB of
storage (1600 bits per certiﬁcate × 700). Alternatively,
if certiﬁcates are only needed for toll free numbers, a sin-
gle certiﬁcate for the company that administers all such
numbers (i.e., Somos, Inc.) would be sufﬁcient.
Figure 6 shows
the
advantages of our
ap-
proach.
Communicating with a speciﬁc server
(xyz.bankofamerica.com) may require the transmis-
sion of three or more certiﬁcates before identity can be
veriﬁed. Additionally, the existence of different roots
adds confusion to the legitimacy of any claimed identity.
Our proposed TPKI relies on a single NANPA root, and
takes advantage of the relatively small total number of
CLECs to require only single certiﬁcate for the calling
number to be transmitted during the handshake. We
leave further discussion of the details of the proposed
TPKI (e.g., revocation, etc) to our future work.
7.3 Deployment Considerations
As our experiments demonstrate that AuthLoop is band-
width and not processor bound, we believe that these
12
974  25th USENIX Security Symposium 
USENIX Association
techniques can be deployed successfully across a wide
range of systems. For instance, AuthLoop can be em-
bedded directly into new handset hardware. Moreover, it
can be used immediately with legacy equipment through
external adapters (e.g., Raspberry Pi). Alternatively,
AuthLoop could be loaded onto mobile devices through
a software update to the dialer, enabling large numbers
of devices to immediately beneﬁt.
Full deployments have the opportunity to make au-
dio signaling of AuthLoop almost invisible to the user.
If AuthLoop is in-line with the call audio, the system
can remove AuthLoop transmissions from the audio sent
to the user.
In other words, users will never hear the
AuthLoop handshakes or keep-alive messages. While
our current strategy is to minimize the volume of the sig-
naling so as to not interrupt a conversation (as has been
done in other signaling research [62]), we believe that
the in-line approach will ultimately provide the greatest
stability and least intrusive user experience.
Lastly, we note that because AuthLoop is targeted
across all telephony platforms, a range of security indi-
cators will be necessary for successfully communicating
authenticated identity to the user. However, given the
limitations of space and the breadth of devices and their
interfaces, we leave this signiﬁcant exploration to our fu-
ture work.
8 Conclusions
Phone systems serve as the trusted carriers of some of our
most sensitive communications. In spite of this trust, au-
thentication between two end points across this heteroge-
neous landscape was previously not possible. In this pa-
per, we present AuthLoop to address this challenge. We
began by designing a modem and supporting link layer
protocol for the reliable delivery of data over a voice
channel. With the limitations of this channel understood,
we then presented a security model and protocol to pro-
vide explicit authentication of an assertion of Caller ID,
and discussed ways in which client credentials could be
subsequently protected. Finally, we demonstrated that
AuthLoop reduced execution time by over an order of
magnitude on average when compared to the direct ap-
plication of TLS 1.2 to this problem. In so doing, we
have demonstrated that end-to-end authentication is in-
deed possible across modern telephony networks.
Acknowledgment
The authors would like to thank our anonymous review-
ers for their helpful comments and colleagues at the
Florida Institute for Cybersecurity Research for their as-
sistance in preparing this manuscript.
This work was supported in part by the US National
Science Foundation under grant numbers CNS-1617474,
CNS-1526718 and CNS-1464088. Any opinions, ﬁnd-
ings, and conclusions or recommendations expressed in
this material are those of the authors and do not necessar-
ily reﬂect the views of the National Science Foundation.
References
[1] RedPhone. https://play.google.com/store/
apps/details?id=org.thoughtcrime.
redphone.
[2] Directory of Unknown Callers.
800notes.com/, 2015.
http://www.
[3] GSMK
CryptoPhone.
cryptophone.de/en/, 2015.
http://www.
[4] Nomorobo.
2015.
https://www.nomorobo.com/,