title:Automated Discovery of Denial-of-Service Vulnerabilities in Connected
Vehicle Protocols
author:Shengtuo Hu and
Qi Alfred Chen and
Jiachen Sun and
Yiheng Feng and
Z. Morley Mao and
Henry X. Liu
Automated Discovery of Denial-of-Service 
Vulnerabilities in Connected Vehicle Protocols
Shengtuo Hu, University of Michigan; Qi Alfred Chen, UC Irvine; Jiachen Sun, 
Yiheng Feng, Z. Morley Mao, and Henry X. Liu, University of Michigan
https://www.usenix.org/conference/usenixsecurity21/presentation/hu-shengtuo
This paper is included in the Proceedings of the 30th USENIX Security Symposium.August 11–13, 2021978-1-939133-24-3Open access to the Proceedings of the 30th USENIX Security Symposium is sponsored by USENIX.Automated Discovery of Denial-of-Service Vulnerabilities in Connected Vehicle
Protocols
Shengtuo Hu
University of Michigan
Qi Alfred Chen
UC Irvine
Z. Morley Mao
University of Michigan
University of Michigan
Jiachen Sun
University of Michigan
Henry X. Liu
Yiheng Feng
University of Michigan
Abstract
With the development of the emerging Connected Vehicle
(CV) technology, vehicles can wirelessly communicate with
trafﬁc infrastructure and other vehicles to exchange safety and
mobility information in real time. However, the integrated
communication capability inevitably increases the attack sur-
face of vehicles, which can be exploited to cause safety hazard
on the road. Thus, it is highly desirable to systematically un-
derstand design-level ﬂaws in the current CV network stack
as well as in CV applications, and the corresponding secu-
rity/safety consequences so that these ﬂaws can be proactively
discovered and addressed before large-scale deployment.
In this paper, we design CVAnalyzer, a system for dis-
covering design-level ﬂaws for availability violations of the
CV network stack, as well as quantifying the correspond-
ing security/safety consequences. To achieve this, CVAna-
lyzer combines the attack discovery capability of a general
model checker and the quantitative threat assessment capa-
bility of a probabilistic model checker. Using CVAnalyzer,
we successfully uncovered 4 new DoS (Denial-of-Service)
vulnerabilities of the latest CV network protocols and 14 new
DoS vulnerabilities of two CV platoon management protocols.
Our quantiﬁcation results show that these attacks can have as
high as 99% success rates, and in the worst case can at least
double the delay in packet processing, violating the latency
requirement in CV communication. We implemented and vali-
dated all attacks in a real-world testbed, and also analyzed the
fundamental causes to propose potential solutions. We have
reported our ﬁndings in the CV network protocols to the IEEE
1609 Working Group, and the group has acknowledged the
discovered vulnerabilities and plans to adopt our solutions.
1 Introduction
With the emerging Connected Vehicle (CV) technology [64],
Vehicle-to-Vehicle (V2V) and Vehicle-to-Infrastructure (V2I)
wireless communication enables vehicles to exchange impor-
tant safety and mobility information with other entities in
real time. In September 2016, the U.S. Department of Trans-
portation (USDOT) launched the CV Pilot Program in three
sites, New York City, Wyoming, and Tampa, to spur early CV
technology deployment and test CV safety applications in the
real world. As of Fall 2018, the program has entered the third
phase, which requires at least 18-month period for long-term
operation and key performance measurements [66].
While CV technology can greatly beneﬁt transportation
mobility and safety, such dramatically increased connectiv-
ity inevitably increases the attack surface of both vehicles
and the transportation infrastructure. For example, if the CV
communication protocol stack is not sufﬁciently secure, at-
tackers can directly cause safety hazard to human drivers on
the road [1, 13, 45]. Thus, it is imperative to understand the
potential security vulnerabilities in the CV network stack as
early as possible so that they can be proactively addressed be-
fore large-scale deployment. To achieve this, it is necessary to
start with a systematic study of potential design-level security
ﬂaws in the CV network stack, since both the discovery and
defense solutions of such ﬂaws can most generally affect the
security of their corresponding implementation instances.
Existing work on the analysis of Vehicular Ad-Hoc Net-
work (VANET) or CV security [1, 4, 10, 28, 29, 44, 55, 55,
73] generally suffer from three limitations:
(L1): they lack systematic approaches and rely on manual
inspection to identify potential threats [1, 44, 55, 73], which
is both insufﬁcient and inefﬁcient. It is also hard to automate
the risk assessment of identiﬁed threats in these works. For
example, Laurendeau et al. [44] use ETSI’s threat analysis
methodology [24], which relies on human to qualitatively
rank the risks of the threats. Similarly, Petit et al. [55] manu-
ally characterized threats in the automated vehicle (e.g., the
cooperative automated vehicle with V2X communication),
only annotated the qualitative risk.
(L2): The threats to the availability of the higher-layer
protocols (i.e., IEEE 1609 protocols [32, 34] and CV applica-
tions), which can prevent legitimate protocol participants from
accessing critical services in the network, are largely under
explored [4, 12, 28, 54, 65]. Although USDOT and the proto-
col designers have already employed security mechanisms to
protect the integrity and conﬁdentiality of CV network com-
USENIX Association
30th USENIX Security Symposium    3219
Figure 1: Verify-on-Demand [4, 41]: a connected vehicle will
only verify the signatures of incoming packets, if packets
result in a safety threat level above the threshold.
munication [4, 65], the protocol stack may still suffer from
availability issues. For instance, as shown in Figure 1, if an
incoming packet that may result in a safety threat cannot pass
the veriﬁcation, it will be discarded without triggering any
warnings, and the application will not be able to process any
incoming packets. To the best of our knowledge, only one
prior work inspected the threats to availability [73], but it
suffers from the third limitation below.
(L3): Previous works mostly target prior generations of the
protocols, ignoring the analysis of CV applications, or are
conducted before the standardization of IEEE 1609 protocol
family, and hence some discovered vulnerabilities do not exist
in the latest CV network stack design [4, 10, 29, 44, 55, 73].
For instance, the latest version of IEEE 1609.31 has integrated
WAVE Service Advertisement (WSA) security considerations
[73], in which Whyte et al. identify threats to availability of
WSA in IEEE 1606.3-2010 [31] due to misconﬁgurations or
malicious WSA access parameters.
In this paper, we perform the ﬁrst rigorous security analysis
to automate the discovery of availability or DoS (Denial of
Service) vulnerabilities, in (1) the latest version of the IEEE
1609 protocol family and (2) Cooperative Adaptive Cruise
Control (CACC) applications. To address L1 (i.e., manual
analysis), we formulate the analysis as a model-checking prob-
lem and design a novel system, CVAnalyzer, that leverages
(1) a general model checker (MC) [75] and (2) a probabilistic
model checker (PMC) [42] to automate both the attack dis-
covery and the attack assessment. Either model checker alone
cannot achieve our analysis goal [8]. MC [16, 21, 27, 75] is
useful for the attack discovery [9, 22, 26, 30, 48, 50]; while,
for tractability reasons, PMC (e.g., PRISM [42]) has limited
support in ﬁnding vulnerabilities and mainly focuses on quan-
titative property veriﬁcation. Therefore, we utilize MC and
PMC to verify availability-related properties and quantitative
properties respectively.
To address L2 (i.e., no availability threat analysis), we de-
ﬁne security properties to cover both availability-related prop-
erties (e.g., “all CV devices should eventually learn unknown
certiﬁcates”) and quantitative properties (e.g., “what is the ex-
pected time delay of processing next packet?”). By verifying
these properties, we not only identify potential vulnerabilities
but also understand the corresponding security consequences.
To address L3, we inspect the latest speciﬁcations [67] of
the CV network protocols and one complicated CV applica-
1In the following text, without speciﬁc notations, “IEEE 1609.*” repre-
sents the latest version (e.g., “IEEE 1609.2” and “IEEE 1609.3” stands for
“IEEE 1609.2-2016” and “IEEE 1609.3-2016” respectively).
tion (i.e., CACC). For the former, we focus on newly added
CV-speciﬁc features (e.g., P2PCD); for the latter, we pick two
platoon management protcols (PMPs) (VENTOS [5, 69] and
PLEXE [56, 60]), which are widely used by researchers, prac-
titioners, and developers. We choose to study PMP because
(1) high importance, since it can directly control vehicles and
thus impact safety [1, 23], and (2) high demand for systematic
veriﬁcation, since it involves distributed collaboration among
multiple vehicles and thus highly difﬁcult to effectively an-
alyze using only manual efforts. We abstract the CV proto-
cols as multiple ﬁnite state machines (FSMs). In the abstract
model, each FSM represents a protocol participant, and all
participants communicate with each other through adversary-
controlled public communication channels. Notably, such
abstract model ignores the low-level implementation details,
which is suitable for ﬁnding design ﬂaws.
By design, CVAnalyzer does not trigger any false positives,
aiming to guarantee soundness. That is, if we report a prop-
erty violation, it is indeed a violation; we cannot, however,
detect all violations. Like existing works on model checking
security protocols [26, 30, 48], our analysis is parameterized
by the number of protocol participants. Given a speciﬁc num-
ber of protocol participants and a set of properties, model
checking guarantees to exhaustively enumerate all reachable
states. Therefore, a model checker should also have complete-
ness, i.e., if the model checker does not report any property
violations, then the model is proved to be correct. However,
due to the undecidability of parameterized system veriﬁcation
problem [6], achieving both soundness and completeness is
impossible, and we cannot enumerate all possible number of
protocol participants. In this case, we follow the conventional
method of aiming for soundness instead of completeness.
In model checking, the model size (i.e., the total number of
reachable states) grows exponentially with the number of state
variables and the number of protocol participants. To alleviate
the state explosion [18] problem in applying model checking
to complex network protocols, we propose an abstraction
approach (§ 4), which reduces unnecessary state variables
and merges a large data domain into a small equivalent data
domain. We ensure that our state reduction approach does not
introduce wrong property violations (i.e., false positives).
Overall, our contributions are summarized as follows:
• We perform the ﬁrst rigorous security analysis to ﬁnd
DoS attacks in the latest version of IEEE 1609 protocol
family and two PMPs via the model checking technique.
To achieve this goal, our analysis methodology design
aims at providing soundness without triggering any false
positives. To alleviate the state explosion problem, we
propose a novel abstraction approach, which does not
generate any false positives and can also achieve com-
plete model coverage.
• Using CVAnalyzer, we are able to discover 4 new DoS
vulnerabilities in P2PCD, which can block the certiﬁcate
learning process and can further prevent the application
3220    30th USENIX Security Symposium
USENIX Association
Incoming packetsThreat assessmentSignature verificationThreat level > thresholdThreat level <= thresholdFailedSuccessThreat ignoredThreat discardedDriver notificationlayer from processing incoming packets, and 15 vulnera-
bilities (14 of 15 are new) in PMPs, which can block the
communication among platoon members. Our quantiﬁ-
cation results show that their exploits can have as high
as 99% success rates, and can double the delay in packet
processing, which violates the latency requirement of
CV communication.
• For these newly-discovered vulnerabilities, we have con-
structed practical exploits and validated them in a real-
world testbed. We have also reported to and received
conﬁrmations for P2PCD attacks from IEEE 1609 Work-
ing Group [35]. Besides, our case studies demonstrate
that P2PCD attacks can lead to trafﬁc accidents, and
PMP attacks can affect the speed stability of the victim
vehicle. These results thus concretely demonstrate the
effectiveness of CVAnalyzer.
• For the identiﬁed vulnerabilities, we discuss the fun-
damental reasons and propose effective mitigation solu-
tions, including avoiding using truncated hash value (e.g.,
3-byte hash value), mandating veriﬁcation for P2PCD
learning responses, and requiring P2PCD learning re-
quests to be broadcast (§7). After our discussion with
the IEEE 1609 Working Group [35], mitigation solutions
against P2PCD attacks are planned to be integrated into
the next version of IEEE 1609.2.
2 Technical Background
In this section, we introduce the necessary technical back-
ground about the CV network stack and the platoon manage-
ment protocols (PMPs).
2.1 CV Technology & Network Stack
CV network provides connectivity in support of mobile and
stationary CV applications, which offers users greater situa-
tional awareness of events, potential threats, and imminent
hazards, with the goal of enhancing the safety, mobility, and
convenience of everyday transportation [36]. In the CV net-
work, there are two basic types of devices: (1) On-Board Unit
(OBU) in a roaming vehicle and (2) stationary Road-Side Unit
(RSU) along the road. Usually, the communication pattern
of the CV network is individual messages that are broadcast
without response [34].
IEEE 802.11p [37] and its extension IEEE 1609.4 [33]
together deﬁne the basis of the CV network stack, in which
IEEE 802.11p disables the authentication, association, and
data conﬁdentiality services at the MAC layer to minimize
the message latency. Above them, IEEE 1609.3 [34] deﬁnes
the WAVE Short Message Protocol (WSMP), which is op-
timized to minimize communication overhead. The Basic
Safety Message (BSM, a.k.a., the beacon message) deﬁned
in SAE J2735 is used by a variety of applications, such as
Forward Collision Warning (FCW), Cooperative Adaptive
Cruise Control (CACC), to exchange safety data regarding
vehicle state (e.g., location and speed). The transmission rate
of BSM is typically set to 10 times per second [2, 3, 25].
Due to the safety-critical nature of CV applications, IEEE
1609.2 [32] speciﬁes security mechanisms to provide conﬁ-
dentiality, authenticity, integrity, and non-repudiation. It intro-
duces digital certiﬁcates to enable digital signature (ECDSA),
with the support of a Public-Key Infrastructure (PKI) system
called Security Credential Management System (SCMS) [12].
Also, SCMS supports the misbehavior detection and certiﬁ-
cate revocation to prevent malicious vehicles from communi-
cating with others, while the development of the misbehavior
detection algorithms is still ongoing.
In particular, IEEE 1609.2 speciﬁes a unique feature called
Peer-to-Peer Certiﬁcate Distribution (P2PCD) that helps a
CV device to learn unknown certiﬁcates. When a device re-
ceives a signed secured protocol data unit (SPDU), it will
construct a certiﬁcate chain for the signing certiﬁcate within