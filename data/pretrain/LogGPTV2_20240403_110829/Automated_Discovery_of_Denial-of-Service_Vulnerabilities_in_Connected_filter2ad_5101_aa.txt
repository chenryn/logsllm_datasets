# Automated Discovery of Denial-of-Service Vulnerabilities in Connected Vehicle Protocols

**Authors:**
- Shengtuo Hu, University of Michigan
- Qi Alfred Chen, UC Irvine
- Jiachen Sun, University of Michigan
- Yiheng Feng, University of Michigan
- Z. Morley Mao, University of Michigan
- Henry X. Liu, University of Michigan

**Publication:**
- [Proceedings of the 30th USENIX Security Symposium](https://www.usenix.org/conference/usenixsecurity21/presentation/hu-shengtuo)
- August 11–13, 2021
- ISBN: 978-1-939133-24-3
- Open access sponsored by USENIX

## Abstract

The emerging Connected Vehicle (CV) technology enables vehicles to wirelessly communicate with traffic infrastructure and other vehicles, exchanging safety and mobility information in real time. However, this integrated communication capability also increases the attack surface, potentially leading to safety hazards on the road. To address this, it is crucial to systematically identify design-level flaws in the CV network stack and applications, along with their corresponding security and safety consequences, before large-scale deployment.

In this paper, we introduce CVAnalyzer, a system designed to discover design-level flaws that violate the availability of the CV network stack and quantify the associated security and safety consequences. CVAnalyzer combines the attack discovery capabilities of a general model checker with the quantitative threat assessment capabilities of a probabilistic model checker. Using CVAnalyzer, we uncovered four new Denial-of-Service (DoS) vulnerabilities in the latest CV network protocols and 14 new DoS vulnerabilities in two CV platoon management protocols. Our quantification results show that these attacks can have up to a 99% success rate and, in the worst case, can double the delay in packet processing, violating the latency requirements of CV communication. We implemented and validated all attacks in a real-world testbed and analyzed the fundamental causes to propose potential solutions. Our findings in the CV network protocols have been reported to the IEEE 1609 Working Group, which has acknowledged the discovered vulnerabilities and plans to adopt our proposed solutions.

## 1. Introduction

Connected Vehicle (CV) technology [64] enables Vehicle-to-Vehicle (V2V) and Vehicle-to-Infrastructure (V2I) wireless communication, allowing vehicles to exchange important safety and mobility information in real time. In September 2016, the U.S. Department of Transportation (USDOT) launched the CV Pilot Program in three sites—New York City, Wyoming, and Tampa—to spur early CV technology deployment and test CV safety applications in the real world. As of Fall 2018, the program has entered the third phase, which requires at least an 18-month period for long-term operation and key performance measurements [66].

While CV technology can significantly benefit transportation mobility and safety, the increased connectivity also expands the attack surface for both vehicles and transportation infrastructure. If the CV communication protocol stack is not sufficiently secure, attackers can directly cause safety hazards to human drivers on the road [1, 13, 45]. Therefore, it is imperative to understand potential security vulnerabilities in the CV network stack as early as possible so they can be proactively addressed before large-scale deployment. This necessitates a systematic study of potential design-level security flaws in the CV network stack, as both the discovery and defense solutions of such flaws can broadly impact the security of their implementation instances.

Existing work on Vehicular Ad-Hoc Network (VANET) or CV security [1, 4, 10, 28, 29, 44, 55, 55, 73] generally suffers from three limitations:

1. **Lack of Systematic Approaches (L1):** These works rely on manual inspection to identify potential threats [1, 44, 55, 73], which is both insufficient and inefficient. It is also difficult to automate the risk assessment of identified threats. For example, Laurendeau et al. [44] use ETSI’s threat analysis methodology [24], which relies on human qualitative ranking of risks. Similarly, Petit et al. [55] manually characterized threats in automated vehicles, only annotating the qualitative risk.

2. **Limited Availability Threat Analysis (L2):** The threats to the availability of higher-layer protocols (i.e., IEEE 1609 protocols [32, 34] and CV applications), which can prevent legitimate protocol participants from accessing critical services in the network, are largely underexplored [4, 12, 28, 54, 65]. Although USDOT and protocol designers have employed security mechanisms to protect the integrity and confidentiality of CV network communication [4, 65], the protocol stack may still suffer from availability issues. For instance, if an incoming packet that may result in a safety threat cannot pass verification, it will be discarded without triggering any warnings, and the application will not process any incoming packets (Figure 1). To our knowledge, only one prior work inspected the threats to availability [73], but it suffers from the third limitation below.

3. **Outdated Protocol Analysis (L3):** Previous works mostly target prior generations of the protocols, ignore the analysis of CV applications, or were conducted before the standardization of the IEEE 1609 protocol family. Thus, some discovered vulnerabilities do not exist in the latest CV network stack design [4, 10, 29, 44, 55, 73]. For example, the latest version of IEEE 1609.31 has integrated WAVE Service Advertisement (WSA) security considerations [73], where Whyte et al. identify threats to WSA availability in IEEE 1606.3-2010 [31] due to misconfigurations or malicious WSA access parameters.

In this paper, we perform the first rigorous security analysis to automate the discovery of availability or DoS vulnerabilities in (1) the latest version of the IEEE 1609 protocol family and (2) Cooperative Adaptive Cruise Control (CACC) applications. To address L1, we formulate the analysis as a model-checking problem and design a novel system, CVAnalyzer, which leverages (1) a general model checker (MC) [75] and (2) a probabilistic model checker (PMC) [42] to automate both attack discovery and attack assessment. While MC [16, 21, 27, 75] is useful for attack discovery [9, 22, 26, 30, 48, 50], PMC (e.g., PRISM [42]) has limited support in finding vulnerabilities and focuses on quantitative property verification. Therefore, we utilize MC and PMC to verify availability-related properties and quantitative properties, respectively.

To address L2, we define security properties to cover both availability-related properties (e.g., "all CV devices should eventually learn unknown certificates") and quantitative properties (e.g., "what is the expected time delay of processing the next packet?"). By verifying these properties, we not only identify potential vulnerabilities but also understand the corresponding security consequences.

To address L3, we inspect the latest specifications [67] of the CV network protocols and one complex CV application (i.e., CACC). For the former, we focus on newly added CV-specific features (e.g., P2PCD); for the latter, we pick two platoon management protocols (PMPs) (VENTOS [5, 69] and PLEXE [56, 60]), which are widely used by researchers, practitioners, and developers. We choose to study PMP because (1) it is of high importance, as it can directly control vehicles and thus impact safety [1, 23], and (2) there is a high demand for systematic verification, as it involves distributed collaboration among multiple vehicles, making it highly difficult to effectively analyze using only manual efforts. We abstract the CV protocols as multiple finite state machines (FSMs). In the abstract model, each FSM represents a protocol participant, and all participants communicate through adversary-controlled public communication channels. Notably, such an abstract model ignores low-level implementation details, which is suitable for finding design flaws.

By design, CVAnalyzer does not trigger any false positives, aiming to guarantee soundness. That is, if we report a property violation, it is indeed a violation; however, we cannot detect all violations. Like existing works on model checking security protocols [26, 30, 48], our analysis is parameterized by the number of protocol participants. Given a specific number of protocol participants and a set of properties, model checking guarantees to exhaustively enumerate all reachable states. Therefore, a model checker should also have completeness, i.e., if the model checker does not report any property violations, then the model is proven to be correct. However, due to the undecidability of parameterized system verification problems [6], achieving both soundness and completeness is impossible, and we cannot enumerate all possible numbers of protocol participants. In this case, we follow the conventional method of aiming for soundness instead of completeness.

In model checking, the model size (i.e., the total number of reachable states) grows exponentially with the number of state variables and the number of protocol participants. To alleviate the state explosion problem [18] in applying model checking to complex network protocols, we propose an abstraction approach (§ 4), which reduces unnecessary state variables and merges a large data domain into a small equivalent data domain. We ensure that our state reduction approach does not introduce wrong property violations (i.e., false positives).

Overall, our contributions are summarized as follows:

- **Rigorous Security Analysis:** We perform the first rigorous security analysis to find DoS attacks in the latest version of the IEEE 1609 protocol family and two PMPs via the model checking technique. Our analysis methodology aims to provide soundness without triggering any false positives. To alleviate the state explosion problem, we propose a novel abstraction approach that does not generate any false positives and achieves complete model coverage.
- **Discovery of New Vulnerabilities:** Using CVAnalyzer, we discovered four new DoS vulnerabilities in P2PCD, which can block the certificate learning process and prevent the application layer from processing incoming packets, and 15 vulnerabilities (14 of which are new) in PMPs, which can block communication among platoon members. Our quantification results show that these exploits can have up to a 99% success rate and can double the delay in packet processing, violating the latency requirement of CV communication.
- **Validation and Reporting:** For these newly discovered vulnerabilities, we constructed practical exploits and validated them in a real-world testbed. We reported and received confirmations for P2PCD attacks from the IEEE 1609 Working Group [35]. Our case studies demonstrate that P2PCD attacks can lead to traffic accidents, and PMP attacks can affect the speed stability of the victim vehicle, concretely demonstrating the effectiveness of CVAnalyzer.
- **Mitigation Solutions:** For the identified vulnerabilities, we discuss the fundamental reasons and propose effective mitigation solutions, including avoiding the use of truncated hash values (e.g., 3-byte hash value), mandating verification for P2PCD learning responses, and requiring P2PCD learning requests to be broadcast (§7). After discussions with the IEEE 1609 Working Group [35], mitigation solutions against P2PCD attacks are planned to be integrated into the next version of IEEE 1609.2.

## 2. Technical Background

### 2.1 CV Technology & Network Stack

CV networks provide connectivity to support mobile and stationary CV applications, offering users greater situational awareness of events, potential threats, and imminent hazards, with the goal of enhancing the safety, mobility, and convenience of everyday transportation [36]. In the CV network, there are two basic types of devices: (1) On-Board Units (OBUs) in roaming vehicles and (2) stationary Road-Side Units (RSUs) along the road. Typically, the communication pattern in the CV network involves individual messages that are broadcast without response [34].

IEEE 802.11p [37] and its extension IEEE 1609.4 [33] together define the basis of the CV network stack, where IEEE 802.11p disables authentication, association, and data confidentiality services at the MAC layer to minimize message latency. Above them, IEEE 1609.3 [34] defines the WAVE Short Message Protocol (WSMP), optimized to minimize communication overhead. The Basic Safety Message (BSM, a.k.a., the beacon message) defined in SAE J2735 is used by various applications, such as Forward Collision Warning (FCW) and Cooperative Adaptive Cruise Control (CACC), to exchange safety data regarding vehicle state (e.g., location and speed). The transmission rate of BSM is typically set to 10 times per second [2, 3, 25].

Due to the safety-critical nature of CV applications, IEEE 1609.2 [32] specifies security mechanisms to provide confidentiality, authenticity, integrity, and non-repudiation. It introduces digital certificates to enable digital signatures (ECDSA), supported by a Public-Key Infrastructure (PKI) system called the Security Credential Management System (SCMS) [12]. SCMS also supports misbehavior detection and certificate revocation to prevent malicious vehicles from communicating with others, although the development of misbehavior detection algorithms is ongoing.

In particular, IEEE 1609.2 specifies a unique feature called Peer-to-Peer Certificate Distribution (P2PCD) that helps a CV device learn unknown certificates. When a device receives a signed secured protocol data unit (SPDU), it constructs a certificate chain for the signing certificate within the SPDU.