# 指令
## v-on事件绑定
- v-on:click
```html
vue的onclick
```
```javascript
new Vue({
    el:"#app",
    data:{
        message:"hello world"//model
    },
    methods:{
        fun:function(msg){
            //alert(msg);
            this.message = msg;
        }
    }
});
```
- v-on:keydown
```html
```
- v-on:mouseover
```html
    这是一个文件域
```
`@mouseover == v-on:mouseover`
- 事件修饰符
```html
...
...
```
- 按键修饰符
`.enter` `.tab` `.delete` ( "删除" 和 "退格" ) `.esc` `.space` `.up` `.down` `.left` `.right` `.ctrl` `.alt` `.shift` `.meta`
## 自定义指令
```js
// 定义一个全局指令
Vue.directive('focus',{
    inserted:function(el){
        el.focus();
    }
})
// 携带参数
Vue.directive('color',{
    inserted:function(el,bingding){
        // 这里的value是data里面的，而不是双引号里面的
        el.style.backgroundColor = bingding.value;
    }
})
```
```html
```
- 局部指令
```js
var vm = new Vue({
  el: '#app',
  //局部指令，需要定义在  directives 的选项
  directives: {
    focus: {
      inserted: function(el) {
        el.focus();
      }
    }
  }
});
```