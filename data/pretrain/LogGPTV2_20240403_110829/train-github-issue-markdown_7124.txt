##### System information (version)
##### Detailed description
While testing turing.py, cv.imshow led to assertion failure in cvShowImage
Assertion is
CV_Assert(dst.data == (uchar*)dst_ptr);
It seems the code is assuming that dst.data points to the window->image bits.
Although dst.data equals dst_ptr and the window->image buffer, cv::cvtColor,
can trigger a reallocation of the dst.data array.
It looks like it works in cases where the size of the elements of the arrays
don't change, but turing.py is converting from a gray scale float32 and
cvtColor is converting it to RGB with a float for each value. The orginal
buffer from
window->image = SelectObject( window->dc, CreateDIBSection(window->dc, binfo,  
DIB_RGB_COLORS, &dst_ptr, 0, 0));  
contains RGB with * bits per color.
It might be a problem in cvtColor, since in the end windows probably needs a
8bit RGB value.
This is my first day looking at opencv code, so I'm hoping someone more
familiar with the code, has a better idea.
##### Steps to reproduce
run python sample turing.py