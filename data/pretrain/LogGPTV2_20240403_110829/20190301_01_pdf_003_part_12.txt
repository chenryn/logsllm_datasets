3 - DECLARE
4 - result NUMERIC;
5 - BEGIN
6 - SELECT INTO result balance FROM acct WHERE id = acctNumber;
7 -
8 - IF (result IS NULL) THEN
9 - RAISE INFO 'Balance is null';
10- END IF;
11-
12- RETURN result;
13- END;
14- $$ LANGUAGE 'plpgsql';
DBMS_PROFILER adds one PLSQL_PROFILER_DATA entry for each line of code
within the getBalance() function (including blank lines and comments). The entry
corresponding to the SELECT statement executed exactly one time; and required a very
small amount of time to execute. On the other hand, the entry corresponding to the
RAISE INFO statement executed once or not at all (depending on the value for the
balance column).
Some of the lines in this function contain no executable code so the performance statistics
for those lines will always contain zero values.
To start a profiling session, invoke the DBMS_PROFILER.START_PROFILER function (or
procedure). Once you've invoked START_PROFILER, Advanced Server will profile
every PL/pgSQL or SPL function, procedure, trigger, or anonymous block that your
session executes until you either stop or pause the profiler (by calling STOP_PROFILER
or PAUSE_PROFILER).
Copyright © 2007 - 2019 EnterpriseDB Corporation. All rights reserved. 126
Database Compatibility for Oracle® Developers
Built-in Package Guide
It is important to note that when you start (or resume) the profiler, the profiler will only
gather performance statistics for functions/procedures/triggers that start after the call to
START_PROFILER (or RESUME_PROFILER).
While the profiler is active, Advanced Server records a large set of timers and counters in
memory; when you invoke the STOP_PROFILER (or FLUSH_DATA) function/procedure,
DBMS_PROFILER writes those timers and counters to a set of three tables:
 SYS.PLSQL_PROFILER_RAWDATA
Contains the performance counters and timers for each statement executed within the session.
 SYS.PLSQL_PROFILER_RUNS
Contains a summary of each run (aggregating the information found in
PLSQL_PROFILER_RAWDATA).
 SYS.PLSQL_PROFILER_UNITS
Contains a summary of each code unit (function, procedure, trigger, or anonymous block)
executed within a session.
In addition, DBMS_PROFILER defines a view, SYS.PLSQL_PROFILER_DATA, which
contains a subset of the PLSQL_PROFILER_RAWDATA table.
Please note that a non-superuser may gather profiling information, but may not view that
profiling information unless a superuser grants specific privileges on the profiling tables
(stored in the SYS schema). This permits a non-privileged user to gather performance
statistics without exposing information that the administrator may want to keep secret.
Copyright © 2007 - 2019 EnterpriseDB Corporation. All rights reserved. 127
Database Compatibility for Oracle® Developers
Built-in Package Guide
3.11.8.1 Querying the DBMS_PROFILER Tables and View
The following step-by-step example uses DBMS_PROFILER to retrieve performance
information for procedures, functions, and triggers included in the sample data distributed
with Advanced Server.
1. Open the EDB-PSQL command line, and establish a connection to the Advanced Server database.
Use an EXEC statement to start the profiling session:
acctg=# EXEC dbms_profiler.start_profiler('profile list_emp');
EDB-SPL Procedure successfully completed
(Note: The call to start_profiler() includes a comment that DBMS_PROFILER
associates with the profiler session).
2. Then call the list_emp function:
acctg=# SELECT list_emp();
INFO: EMPNO ENAME
INFO: ----- -------
INFO: 7369 SMITH
INFO: 7499 ALLEN
INFO: 7521 WARD
INFO: 7566 JONES
INFO: 7654 MARTIN
INFO: 7698 BLAKE
INFO: 7782 CLARK
INFO: 7788 SCOTT
INFO: 7839 KING
INFO: 7844 TURNER
INFO: 7876 ADAMS
INFO: 7900 JAMES
INFO: 7902 FORD
INFO: 7934 MILLER
list_emp
----------
(1 row)
3. Stop the profiling session with a call to dbms_profiler.stop_profiler:
acctg=# EXEC dbms_profiler.stop_profiler;
EDB-SPL Procedure successfully completed
4. Start a new session with the dbms_profiler.start_profiler function (followed by a
new comment):
acctg=# EXEC dbms_profiler.start_profiler('profile get_dept_name and
emp_sal_trig');
Copyright © 2007 - 2019 EnterpriseDB Corporation. All rights reserved. 128
Database Compatibility for Oracle® Developers
Built-in Package Guide
EDB-SPL Procedure successfully completed
5. Invoke the get_dept_name function:
acctg=# SELECT get_dept_name(10);
get_dept_name
---------------
ACCOUNTING
(1 row)
6. Execute an UPDATE statement that causes a trigger to execute:
acctg=# UPDATE memp SET sal = 500 WHERE empno = 7902;
INFO: Updating employee 7902
INFO: ..Old salary: 3000.00
INFO: ..New salary: 500.00
INFO: ..Raise : -2500.00
INFO: User enterprisedb updated employee(s) on 04-FEB-14
UPDATE 1
7. Terminate the profiling session and flush the performance information to the profiling tables:
acctg=# EXEC dbms_profiler.stop_profiler;
EDB-SPL Procedure successfully completed
8. Now, query the plsql_profiler_runs table to view a list of the profiling sessions,
arranged by runid:
acctg=# SELECT * FROM plsql_profiler_runs;
runid | related_run | run_owner | run_date | run_comment
| run_total_time | run_system_info | run_comment1 | spare1
-------+-------------+--------------+---------------------------+-----------------------------
-----------+----------------+-----------------+--------------+--------
1 | | enterprisedb | 04-FEB-14 09:32:48.874315 | profile list_emp
| 4154 | | |
2 | | enterprisedb | 04-FEB-14 09:41:30.546503 | profile get_dept_name and
emp_sal_trig | 2088 | | |
(2 rows)
9. Query the plsql_profiler_units table to view the amount of time consumed by each
unit (each function, procedure, or trigger):
acctg=# SELECT * FROM plsql_profiler_units;
runid | unit_number | unit_type | unit_owner | unit_name |
unit_timestamp | total_time | spare1 | spare2
-------+-------------+-----------+--------------+---------------------------------+-----------
-----+------------+--------+--------
1 | 16999 | FUNCTION | enterprisedb | list_emp() |
| 4 | |
2 | 17002 | FUNCTION | enterprisedb | user_audit_trig() |
| 1 | |
2 | 17000 | FUNCTION | enterprisedb | get_dept_name(p_deptno numeric) |
| 1 | |
2 | 17004 | FUNCTION | enterprisedb | emp_sal_trig() |
| 1 | |
Copyright © 2007 - 2019 EnterpriseDB Corporation. All rights reserved. 129
Database Compatibility for Oracle® Developers
Built-in Package Guide
(4 rows)
10. Query the plsql_profiler_rawdata table to view a list of the wait event counters and
wait event times:
acctg=# SELECT runid, sourcecode, func_oid, line_number, exec_count, tuples_returned,
time_total FROM plsql_profiler_rawdata;
runid | sourcecode | func_oid |
line_number | exec_count | tuples_returned | time_total
-------+------------------------------------------------------------------+----------+--------
-----+------------+-----------------+------------
1 | DECLARE | 16999 |
1 | 0 | 0 | 0
1 | v_empno NUMERIC(4); | 16999 |
2 | 0 | 0 | 0
1 | v_ename VARCHAR(10); | 16999 |
3 | 0 | 0 | 0
1 | emp_cur CURSOR FOR | 16999 |
4 | 0 | 0 | 0
1 | SELECT empno, ename FROM memp ORDER BY empno; | 16999 |
5 | 0 | 0 | 0
1 | BEGIN | 16999 |
6 | 0 | 0 | 0
1 | OPEN emp_cur; | 16999 |
7 | 0 | 0 | 0
1 | RAISE INFO 'EMPNO ENAME'; | 16999 |
8 | 1 | 0 | 0.001621
1 | RAISE INFO '----- -------'; | 16999 |
9 | 1 | 0 | 0.000301
1 | LOOP | 16999 |
10 | 1 | 0 | 4.6e-05
1 | FETCH emp_cur INTO v_empno, v_ename; | 16999 |
11 | 1 | 0 | 0.001114
1 | EXIT WHEN NOT FOUND; | 16999 |
12 | 15 | 0 | 0.000206
1 | RAISE INFO '% %', v_empno, v_ename; | 16999 |
13 | 15 | 0 | 8.3e-05
1 | END LOOP; | 16999 |
14 | 14 | 0 | 0.000773
1 | CLOSE emp_cur; | 16999 |
15 | 0 | 0 | 0
1 | RETURN; | 16999 |
16 | 1 | 0 | 1e-05
1 | END; | 16999 |
17 | 1 | 0 | 0
1 | | 16999 |
18 | 0 | 0 | 0
2 | DECLARE | 17002 |
1 | 0 | 0 | 0
2 | v_action VARCHAR(24); | 17002 |
2 | 0 | 0 | 0
2 | v_text TEXT; | 17002 |
3 | 0 | 0 | 0
2 | BEGIN | 17002 |
4 | 0 | 0 | 0
2 | IF TG_OP = 'INSERT' THEN | 17002 |
5 | 0 | 0 | 0
2 | v_action := ' added employee(s) on '; | 17002 |
6 | 1 | 0 | 0.000143
2 | ELSIF TG_OP = 'UPDATE' THEN | 17002 |
7 | 0 | 0 | 0
2 | v_action := ' updated employee(s) on '; | 17002 |
8 | 0 | 0 | 0
2 | ELSIF TG_OP = 'DELETE' THEN | 17002 |
9 | 1 | 0 | 3.2e-05
2 | v_action := ' deleted employee(s) on '; | 17002 |
10 | 0 | 0 | 0
Copyright © 2007 - 2019 EnterpriseDB Corporation. All rights reserved. 130
Database Compatibility for Oracle® Developers
Built-in Package Guide
2 | END IF; | 17002 |
11 | 0 | 0 | 0
2 | v_text := 'User ' || USER || v_action || CURRENT_DATE; | 17002 |
12 | 0 | 0 | 0
2 | RAISE INFO ' %', v_text; | 17002 |
13 | 1 | 0 | 0.000383
2 | RETURN NULL; | 17002 |
14 | 1 | 0 | 6.3e-05
2 | END; | 17002 |
15 | 1 | 0 | 3.6e-05
2 | | 17002 |
16 | 0 | 0 | 0
2 | DECLARE | 17000 |
1 | 0 | 0 | 0
2 | v_dname VARCHAR(14); | 17000 |
2 | 0 | 0 | 0
2 | BEGIN | 17000 |
3 | 0 | 0 | 0
2 | SELECT INTO v_dname dname FROM dept WHERE deptno = p_deptno; | 17000 |
4 | 0 | 0 | 0
2 | RETURN v_dname; | 17000 |
5 | 1 | 0 | 0.000647
2 | IF NOT FOUND THEN | 17000 |
6 | 1 | 0 | 2.6e-05
2 | RAISE INFO 'Invalid department number %', p_deptno; | 17000 |
7 | 0 | 0 | 0
2 | RETURN ''; | 17000 |
8 | 0 | 0 | 0
2 | END IF; | 17000 |
9 | 0 | 0 | 0
2 | END; | 17000 |
10 | 0 | 0 | 0
2 | | 17000 |
11 | 0 | 0 | 0
2 | DECLARE | 17004 |
1 | 0 | 0 | 0
2 | sal_diff NUMERIC(7,2); | 17004 |
2 | 0 | 0 | 0
2 | BEGIN | 17004 |
3 | 0 | 0 | 0
2 | IF TG_OP = 'INSERT' THEN | 17004 |
4 | 0 | 0 | 0
2 | RAISE INFO 'Inserting employee %', NEW.empno; | 17004 |
5 | 1 | 0 | 8.4e-05
2 | RAISE INFO '..New salary: %', NEW.sal; | 17004 |
6 | 0 | 0 | 0
2 | RETURN NEW; | 17004 |
7 | 0 | 0 | 0
2 | END IF; | 17004 |
8 | 0 | 0 | 0
2 | IF TG_OP = 'UPDATE' THEN | 17004 |
9 | 0 | 0 | 0
2 | sal_diff := NEW.sal - OLD.sal; | 17004 |
10 | 1 | 0 | 0.000355
2 | RAISE INFO 'Updating employee %', OLD.empno; | 17004 |
11 | 1 | 0 | 0.000177
2 | RAISE INFO '..Old salary: %', OLD.sal; | 17004 |
12 | 1 | 0 | 5.5e-05
2 | RAISE INFO '..New salary: %', NEW.sal; | 17004 |
13 | 1 | 0 | 3.1e-05
2 | RAISE INFO '..Raise : %', sal_diff; | 17004 |
14 | 1 | 0 | 2.8e-05
2 | RETURN NEW; | 17004 |
15 | 1 | 0 | 2.7e-05
2 | END IF; | 17004 |
16 | 1 | 0 | 1e-06
2 | IF TG_OP = 'DELETE' THEN | 17004 |
17 | 0 | 0 | 0
2 | RAISE INFO 'Deleting employee %', OLD.empno; | 17004 |
18 | 0 | 0 | 0
Copyright © 2007 - 2019 EnterpriseDB Corporation. All rights reserved. 131
Database Compatibility for Oracle® Developers
Built-in Package Guide
2 | RAISE INFO '..Old salary: %', OLD.sal; | 17004 |
19 | 0 | 0 | 0
2 | RETURN OLD; | 17004 |
20 | 0 | 0 | 0
2 | END IF; | 17004 |
21 | 0 | 0 | 0
2 | END; | 17004 |
22 | 0 | 0 | 0
2 | | 17004 |
23 | 0 | 0 | 0
(68 rows)
11. Query the plsql_profiler_data view to review a subset of the information found in
plsql_profiler_rawdata table:
acctg=# SELECT * FROM plsql_profiler_data;
runid | unit_number | line# | total_occur | total_time | min_time | max_time | spare1 | spare2
| spare3 | spare4
-------+-------------+-------+-------------+------------+----------+----------+--------+------
--+--------+--------
1 | 16999 | 1 | 0 | 0 | 0 | 0 | |
| |
1 | 16999 | 2 | 0 | 0 | 0 | 0 | |
| |
1 | 16999 | 3 | 0 | 0 | 0 | 0 | |
| |
1 | 16999 | 4 | 0 | 0 | 0 | 0 | |
| |
1 | 16999 | 5 | 0 | 0 | 0 | 0 | |
| |
1 | 16999 | 6 | 0 | 0 | 0 | 0 | |
| |
1 | 16999 | 7 | 0 | 0 | 0 | 0 | |
| |
1 | 16999 | 8 | 1 | 0.001621 | 0.001621 | 0.001621 | |
| |
1 | 16999 | 9 | 1 | 0.000301 | 0.000301 | 0.000301 | |
| |
1 | 16999 | 10 | 1 | 4.6e-05 | 4.6e-05 | 4.6e-05 | |
| |
1 | 16999 | 11 | 1 | 0.001114 | 0.001114 | 0.001114 | |
| |
1 | 16999 | 12 | 15 | 0.000206 | 5e-06 | 7.8e-05 | |
| |
1 | 16999 | 13 | 15 | 8.3e-05 | 2e-06 | 4.7e-05 | |
| |
1 | 16999 | 14 | 14 | 0.000773 | 4.7e-05 | 0.000116 | |
| |
1 | 16999 | 15 | 0 | 0 | 0 | 0 | |
| |
1 | 16999 | 16 | 1 | 1e-05 | 1e-05 | 1e-05 | |
| |
1 | 16999 | 17 | 1 | 0 | 0 | 0 | |
| |
1 | 16999 | 18 | 0 | 0 | 0 | 0 | |
| |
2 | 17002 | 1 | 0 | 0 | 0 | 0 | |
| |
2 | 17002 | 2 | 0 | 0 | 0 | 0 | |
| |
2 | 17002 | 3 | 0 | 0 | 0 | 0 | |
| |
2 | 17002 | 4 | 0 | 0 | 0 | 0 | |
| |
2 | 17002 | 5 | 0 | 0 | 0 | 0 | |
| |
2 | 17002 | 6 | 1 | 0.000143 | 0.000143 | 0.000143 | |
| |
Copyright © 2007 - 2019 EnterpriseDB Corporation. All rights reserved. 132
Database Compatibility for Oracle® Developers
Built-in Package Guide
2 | 17002 | 7 | 0 | 0 | 0 | 0 | |
| |
2 | 17002 | 8 | 0 | 0 | 0 | 0 | |
| |
2 | 17002 | 9 | 1 | 3.2e-05 | 3.2e-05 | 3.2e-05 | |
| |
2 | 17002 | 10 | 0 | 0 | 0 | 0 | |
| |
2 | 17002 | 11 | 0 | 0 | 0 | 0 | |
| |
2 | 17002 | 12 | 0 | 0 | 0 | 0 | |
| |
2 | 17002 | 13 | 1 | 0.000383 | 0.000383 | 0.000383 | |
| |
2 | 17002 | 14 | 1 | 6.3e-05 | 6.3e-05 | 6.3e-05 | |
| |
2 | 17002 | 15 | 1 | 3.6e-05 | 3.6e-05 | 3.6e-05 | |
| |
2 | 17002 | 16 | 0 | 0 | 0 | 0 | |
| |
2 | 17000 | 1 | 0 | 0 | 0 | 0 | |
| |
2 | 17000 | 2 | 0 | 0 | 0 | 0 | |
| |
2 | 17000 | 3 | 0 | 0 | 0 | 0 | |
| |
2 | 17000 | 4 | 0 | 0 | 0 | 0 | |
| |
2 | 17000 | 5 | 1 | 0.000647 | 0.000647 | 0.000647 | |
| |
2 | 17000 | 6 | 1 | 2.6e-05 | 2.6e-05 | 2.6e-05 | |
| |
2 | 17000 | 7 | 0 | 0 | 0 | 0 | |
| |
2 | 17000 | 8 | 0 | 0 | 0 | 0 | |
| |
2 | 17000 | 9 | 0 | 0 | 0 | 0 | |
| |
2 | 17000 | 10 | 0 | 0 | 0 | 0 | |
| |
2 | 17000 | 11 | 0 | 0 | 0 | 0 | |
| |
2 | 17004 | 1 | 0 | 0 | 0 | 0 | |
| |
2 | 17004 | 2 | 0 | 0 | 0 | 0 | |
| |
2 | 17004 | 3 | 0 | 0 | 0 | 0 | |
| |
2 | 17004 | 4 | 0 | 0 | 0 | 0 | |
| |
2 | 17004 | 5 | 1 | 8.4e-05 | 8.4e-05 | 8.4e-05 | |
| |
2 | 17004 | 6 | 0 | 0 | 0 | 0 | |
| |
2 | 17004 | 7 | 0 | 0 | 0 | 0 | |
| |
2 | 17004 | 8 | 0 | 0 | 0 | 0 | |