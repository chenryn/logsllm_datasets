instance in the 
new availability 
zone, using the 
AMI;  
Step 4. 
Reassign the IP 
to the new web 
instance 
New  web 
instance 
not 
launched 
RP1, RP3, 
RP5, RP6, 
RP8 
Recovery 
Point 4 
Step 5. 
Terminate the 
old web 
instance 
Old  web 
instance 
not 
terminate
d 
RP1, RP3, 
RP5, RP6, 
RP8 
Launch  a  new 
web  instance  in 
the 
new 
availability 
zone; 
Reasign the IP 
to the new web 
instance; 
(Direct Redo) 
Terninate the 
old web 
instance; 
(Direct Redo) 
137 
65.74 s 
31.77 s 
Delete the failed 
AMI; 
Create a new 
AMI from the 
old web 
instance; 
(Reparation) 
Launch  a  new 
web  instance  in 
the 
new 
availability 
zone; 
Reasign the IP 
to the new web 
instance; 
 (Direct Redo) 
Terninate the 
old web 
instance; 
(Direct Redo) 
141.94 s 
69.91 s 
29.89 s 
Recover
y Point 
Process Step 
Errors 
Applicable 
Recovery 
Patterns 
Recovery 
Point 5 
Step 6. Stop the 
old database 
instance in the 
old availability 
zone 
Old  DB 
instance 
not 
stopped  
RP1, RP3, 
RP5, RP6, 
RP8 
Selected 
Recovery 
Action(Pareto 
Set) 
Stop the old 
database 
instance again; 
Recovery 
Time 
(Pareto 
Set) 
Selected 
Recovery 
Action(User 
Constraints) 
Recovery 
Time (User 
Constraints) 
Stop the old 
database 
instance; 
42.18 s 
39.69 s 
(Direct Redo) 
(Reparation) 
Recovery 
Point 6 
Step 7. Create 
an AMI from 
the old database 
instance 
AMI  not 
created 
RP1, RP3, 
RP5, RP6, 
RP8 
Recovery 
Point 7 
Step 8. Launch 
a new database 
instance in the 
new availability 
zone, using the 
AMI;  
Step 9. 
Reassign the IP 
to the new 
database 
instance 
New  DB 
instance 
not 
launched 
RP1, RP3, 
RP5, RP6, 
RP8 
168.56 s 
79.14 s 
Create an AMI 
from the old 
database 
instance; 
(Direct Redo) 
Launch  a  new 
database 
instance  in  the 
new availability 
zone; 
Reasign the IP 
to the new 
database 
instance; 
(Direct Redo) 
Delete the failed 
AMI; 
Create a new 
AMI from the 
old database 
instance; 
(Reparation) 
Launch  a  new 
database 
instance  in  the 
new  availability 
zone; 
Reasign the IP 
to the new 
database 
instance; 
 (Direct Redo) 
201.67 s 
82.18 s 
Recovery 
Point 8 
Step 10. 
Terminate the 
old database 
instance 
Old  DB 
instance 
not 
terminate
d 
RP1, RP3, 
RP5, RP6, 
RP8 
Terninate the 
old database 
instance; 
(Direct Redo) 
35.74 s 
Terninate the 
old database 
instance; 
(Direct Redo) 
38.33 s 
3)  Satisfying Recovery Requirement R2 
From  the  results  we  can  see  that  the  recovery  for  all  the  recovery  points  in  the  migration 
operation takes no more than 202 seconds for execution. In addition, for these experiments state 
capturing time was typically around 14s but at most 15s, applicable recovery patterns filtering 
time  was  at  most  52  milliseconds  (ms),  recovery  plan  generation  time  for  each  applicable 
recovery pattern was at most 129 milliseconds (ms), applicable recovery actions evaluation time 
is at most 403 milliseconds (ms), and acceptable recovery action selection time is at most  185 
milliseconds  (ms).  While  not  part  of  our  scope  here  directly,  error  detection  time  has  to  be 
considered when discussing RTO as well. Detection times reported in the literature ranged from 
10ms to 11 seconds (X. Xu, et al., 2014). The sum of the worst cases of all the above times, i.e. 
the total error detection and recovery time, is around 230s. So, for each recovery point, the total 
recovery time is below 230 seconds, no matter which recovery action selection method is used. 
138 
Normally,  if  the  errors  occur  again,  POD-Diagnosis  service  will  capture  the  errors  again  and 
trigger POD-Recovery again. Hence, POD-Recovery achieves a reasonable RTO. 
C.  Recovery Reducing Negative Impact 
1)  Experimental Procedure 
This recovery requirement concerns the negative impact the recovery incurs on the cloud system. 
We  therefore  measure  recovery  impact  by  performing  the  migration  operation  on  a  cloud 
application.  The  software  running  in  the  cloud  instances  is  turned  off  during  the  migration 
operation. We used our own proprietary fault injection tool to inject faults for each of the eight 
determined recovery points in the migration operation, automatically determined the applicable 
recovery patterns based on the applicable recovery patterns filtering method described in section 
7.3, and performed recovery using the selected acceptable recovery action based on each of the 
two  recovery  action  selection  methods.  The  faults  injected  are  described  in  Table  47.  The 
selection  of  injected  faults  is  based  on  our  interviews  with  industry  and  failure  reports,  and 
hence representative. The recovery impact is calculated by computing the cross-product of two 
vectors: 1) the average response time to user requests in each of the steps of the recovery action; 
2)  the  execution  time  of  each  step  of  the  recovery  action.  We  ran  the  experiment  30  times, 
measuring the average recovery impact. 
Table 47.  Faults injected for Migration Operation 
Recovery Point 
Fault injected 
Old web instance not stopped  
Recovery Point 1 (After Step 1) 
AMI not created 
Recovery Point 2 (After Step 2) 
New web instance not launched 
Recovery Point 3 (After Step 4) 
Old web instance not terminated 
Recovery Point 4 (After Step 5) 
Old DB instance not stopped  
Recovery Point 5 (After Step 6) 
AMI not created 
Recovery Point 6 (After Step 7) 
Recovery Point 7 (After Step 9) 
New DB instance not launched 
Recovery Point 8 (After Step 10)  Old DB instance not terminated 
2)  Experimental Results 
Table 48 shows the recovery impact of the recovery for the migration operation. The recovery 
impact  in the table represents the  average  value  of the  recovery  impact  for  30  runs.  Since the 
cloud application running in the cloud instances is turned off during the migration operation and 
the recovery, there is no recovery impact on the target cloud system and hence recovery impact 
is evaluated to be 0. The highest relative standard deviation is 0%. For each recovery point, the 
impact of the recovery action selected by the Pareto set search based optimization method is no 
greater than the other applicable recovery actions; the impact of the selected recovery action by 
139 
the user constraints based optimization method is not necessarily less than all the other ones, but 
it is within the impact constraint set by business stakeholders. 
Table 48.  Recovery Impact for Migration 
Legends 
Recovery Pattern ID 
Recovery Pattern 
Recovery Pattern ID 
Recovery Pattern 
RP1 
RP2 
RP3 
RP4 
Compensated Undo & Redo 
Compensated Undo & Alternative 
Rewind & Replay 