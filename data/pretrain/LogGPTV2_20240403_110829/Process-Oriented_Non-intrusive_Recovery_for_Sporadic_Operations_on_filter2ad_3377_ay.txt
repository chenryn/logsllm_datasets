### Instance Migration and Recovery Process

#### Step 4: Reassign the IP to the New Web Instance
- **Action**: Launch a new web instance in the new availability zone using the AMI.
- **Action**: Reassign the IP to the new web instance.
- **Error**: New web instance not launched.
- **Applicable Recovery Patterns**: RP1, RP3, RP5, RP6, RP8.
- **Recovery Point 4**:
  - **Direct Redo**:
    - Launch a new web instance in the new availability zone.
    - Reassign the IP to the new web instance.
    - Terminate the old web instance.
  - **Reparation**:
    - Delete the failed AMI.
    - Create a new AMI from the old web instance.
    - Launch a new web instance in the new availability zone.
    - Reassign the IP to the new web instance.
    - Terminate the old web instance.
  - **Recovery Time**:
    - Direct Redo: 65.74 s (Launch) + 31.77 s (Reassign) = 97.51 s
    - Reparation: 141.94 s (Delete and Create AMI) + 69.91 s (Launch) + 29.89 s (Reassign) = 241.74 s

#### Step 5: Terminate the Old Web Instance
- **Action**: Terminate the old web instance.
- **Error**: Old web instance not terminated.
- **Applicable Recovery Patterns**: RP1, RP3, RP5, RP6, RP8.
- **Recovery Point 5**:
  - **Direct Redo**:
    - Terminate the old web instance.
  - **Recovery Time**: 42.18 s (Direct Redo)

#### Step 6: Stop the Old Database Instance
- **Action**: Stop the old database instance in the old availability zone.
- **Error**: Old DB instance not stopped.
- **Applicable Recovery Patterns**: RP1, RP3, RP5, RP6, RP8.
- **Recovery Point 6**:
  - **Selected Recovery Action (Pareto Set)**:
    - Stop the old database instance again.
  - **Recovery Time (Pareto Set)**: 42.18 s
  - **Selected Recovery Action (User Constraints)**:
    - Stop the old database instance.
  - **Recovery Time (User Constraints)**: 39.69 s

#### Step 7: Create an AMI from the Old Database Instance
- **Action**: Create an AMI from the old database instance.
- **Error**: AMI not created.
- **Applicable Recovery Patterns**: RP1, RP3, RP5, RP6, RP8.

#### Step 8: Launch a New Database Instance
- **Action**: Launch a new database instance in the new availability zone using the AMI.
- **Action**: Reassign the IP to the new database instance.
- **Error**: New DB instance not launched.
- **Applicable Recovery Patterns**: RP1, RP3, RP5, RP6, RP8.
- **Recovery Point 7**:
  - **Direct Redo**:
    - Create an AMI from the old database instance.
    - Launch a new database instance in the new availability zone.
    - Reassign the IP to the new database instance.
  - **Reparation**:
    - Delete the failed AMI.
    - Create a new AMI from the old database instance.
    - Launch a new database instance in the new availability zone.
    - Reassign the IP to the new database instance.
  - **Recovery Time**:
    - Direct Redo: 168.56 s (Create AMI) + 79.14 s (Launch and Reassign) = 247.70 s
    - Reparation: 201.67 s (Delete and Create AMI) + 82.18 s (Launch and Reassign) = 283.85 s

#### Step 10: Terminate the Old Database Instance
- **Action**: Terminate the old database instance.
- **Error**: Old DB instance not terminated.
- **Applicable Recovery Patterns**: RP1, RP3, RP5, RP6, RP8.
- **Recovery Point 8**:
  - **Direct Redo**:
    - Terminate the old database instance.
  - **Recovery Time**: 35.74 s (Direct Redo)
  - **Recovery Time (User Constraints)**: 38.33 s (Direct Redo)

### Satisfying Recovery Requirement R2
From the results, we can see that the recovery for all the recovery points in the migration operation takes no more than 202 seconds for execution. Additionally, for these experiments, the state capturing time was typically around 14 seconds but at most 15 seconds, applicable recovery patterns filtering time was at most 52 milliseconds (ms), recovery plan generation time for each applicable recovery pattern was at most 129 milliseconds (ms), applicable recovery actions evaluation time was at most 403 milliseconds (ms), and acceptable recovery action selection time was at most 185 milliseconds (ms). While not part of our scope here directly, error detection time must also be considered when discussing RTO. Detection times reported in the literature ranged from 10 ms to 11 seconds (X. Xu, et al., 2014). The sum of the worst cases of all the above times, i.e., the total error detection and recovery time, is around 230 seconds. Therefore, for each recovery point, the total recovery time is below 230 seconds, regardless of which recovery action selection method is used.

Normally, if errors occur again, the POD-Diagnosis service will capture the errors and trigger POD-Recovery again. Hence, POD-Recovery achieves a reasonable RTO.

### Recovery Reducing Negative Impact
#### Experimental Procedure
This recovery requirement concerns the negative impact the recovery incurs on the cloud system. We measure the recovery impact by performing the migration operation on a cloud application. The software running in the cloud instances is turned off during the migration operation. We used our proprietary fault injection tool to inject faults for each of the eight determined recovery points in the migration operation, automatically determined the applicable recovery patterns based on the filtering method described in section 7.3, and performed recovery using the selected acceptable recovery action based on each of the two recovery action selection methods. The faults injected are described in Table 47. The selection of injected faults is based on our interviews with industry experts and failure reports, and hence is representative. The recovery impact is calculated by computing the cross-product of two vectors: 1) the average response time to user requests in each step of the recovery action; 2) the execution time of each step of the recovery action. We ran the experiment 30 times, measuring the average recovery impact.

**Table 47: Faults Injected for Migration Operation**
| Recovery Point | Fault Injected |
|----------------|----------------|
| Recovery Point 1 (After Step 1) | Old web instance not stopped |
| Recovery Point 2 (After Step 2) | AMI not created |
| Recovery Point 3 (After Step 4) | New web instance not launched |
| Recovery Point 4 (After Step 5) | Old web instance not terminated |
| Recovery Point 5 (After Step 6) | Old DB instance not stopped |
| Recovery Point 6 (After Step 7) | AMI not created |
| Recovery Point 7 (After Step 9) | New DB instance not launched |
| Recovery Point 8 (After Step 10) | Old DB instance not terminated |

#### Experimental Results
**Table 48: Recovery Impact for Migration**
- **Recovery Impact**: The table represents the average value of the recovery impact for 30 runs. Since the cloud application running in the cloud instances is turned off during the migration operation and the recovery, there is no recovery impact on the target cloud system, and hence the recovery impact is evaluated to be 0. The highest relative standard deviation is 0%.
- **Impact Comparison**:
  - For each recovery point, the impact of the recovery action selected by the Pareto set search-based optimization method is no greater than the other applicable recovery actions.
  - The impact of the selected recovery action by the user constraints-based optimization method is not necessarily less than all the other ones, but it is within the impact constraint set by business stakeholders.

**Legends:**
- **Recovery Pattern ID**:
  - **RP1**: Compensated Undo & Redo
  - **RP2**: Compensated Undo & Alternative
  - **RP3**: Rewind & Replay