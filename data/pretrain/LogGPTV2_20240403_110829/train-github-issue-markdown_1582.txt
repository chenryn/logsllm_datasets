Q | A  
---|---  
Bug report? | yes  
Feature request? | no  
BC Break report? | no  
RFC? | no  
Symfony version | 3.3  
When you define no arguments, autowiring will give you a very precise error.
However, if you manually define arguments that come after that using named
arguments, the error will become extremely cryptic.
Given the following PHP:
    namespace Hostnet;
    interface TestInterface {}
    class TestOne implements TestInterface {}
    class TestTwo implements TestInterface {}
    class TestDependency {}
    class TestClass
    {
        public function __construct(
            TestOne $testOne, 
            TestInterface $testTwo, 
            TestDependency $testDependency
        ) {}
    }
Using this configuration (100% autowiring):
    services:
        Hostnet\TestClass: ~
        Hostnet\TestOne: ~
        Hostnet\TestTwo: ~
        Hostnet\TestDependency:
            public: true
I will get the descriptive error:
    AutowiringFailedException
    Cannot autowire service "Hostnet\TestClass": argument "$testTwo" of 
    method "__construct()" references interface "Hostnet\TestInterface" but 
    no such service exists. You should maybe alias this interface to one of 
    these existing services: "Hostnet\TestOne", "Hostnet\TestTwo".
When I manually wire 1 argument that's positioned _after_ the dependency that
will fail (last argument in this case):
    services:
        Hostnet\TestClass:
            $testDependency: '@Hostnet\TestDependency'
        Hostnet\TestOne: ~
        Hostnet\TestTwo: ~
        Hostnet\TestDependency:
            public: true
This results in a crpytic error:
    RuntimeException
    Invalid constructor argument 3 for service "Hostnet\TestClass": argument 1 
    must be defined before. Check your service definition.