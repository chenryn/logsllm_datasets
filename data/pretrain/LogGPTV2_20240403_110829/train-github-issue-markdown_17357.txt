This is a regression from v1.32.3 to v1.32.4, likely caused by #18587
Seems similar to #17332, but given that this is a regression, I thought it
warranted a separate issue.
See also #18587 (comment)
    import { delay } from "https://deno.land/std@0.183.0/async/mod.ts"
    import { serve } from "https://deno.land/std@0.183.0/http/mod.ts"
    console.log(Deno.version.deno)
    const controller = new AbortController()
    serve(async (request) => {
      const { response, socket } = Deno.upgradeWebSocket(request)
      socket.addEventListener("open", async () => {
        console.log("server close")
      })
      socket.addEventListener("close", async () => {
        console.log("server close")
      })
      socket.addEventListener("message", async (event) => {
        console.log("server message", event.data)
        await delay(1) // this seems to be important; if commented out, this works on 1.32.4
        console.log("server send", event.data)
        socket.send(event.data)
      })
      return response
    }, {
      port: 0,
      signal: controller.signal,
      onListen: ({ hostname, port }) => {
        const ws = new WebSocket(`ws://${hostname}:${port}/`)
        ws.addEventListener("open", () => {
          console.log("client open")
          const data = "hello world"
          ws.send(data)
          console.log("client send", data)
        })
        ws.addEventListener("message", (ev) => {
          console.log("client recv", ev.data)
          controller.abort()
          ws.close()
        })
        ws.addEventListener("close", () => {
          console.log("client close")
        })
      },
    })
    $ deno run -A repro.ts 
    1.32.3
    server close
    client open
    client send hello world
    server message hello world
    server send hello world
    client recv hello world
    server close
    client close
    # exits
    $ deno run -A repro.ts 
    1.32.4
    server close
    client open
    client send hello world
    server message hello world
    server send hello world
    # hangs