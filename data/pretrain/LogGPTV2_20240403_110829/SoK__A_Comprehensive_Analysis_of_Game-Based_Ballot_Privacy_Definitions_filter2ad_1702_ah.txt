ERC grant agreement no 258865 (ProSecure) and grant agree-
ment 609611 (PRACTICE), and under the 1317971 Wal-
loon Region Greentic–Truedev project. This work has been
supported in part by ERC Advanced Grant ERC-2010-AdG-
267188-CRIPTO.
REFERENCES
[1] B. Adida, “Helios: Web-based Open-Audit Voting,” in 17th USENIX
Security Symposium, 2008, pp. 335–348, helios website: http://
heliosvoting.org.
[2] B. Adida, O. de Marneffe, O. Pereira, and J.-J. Quisquater, “Electing a
University President Using Open-Audit Voting: Analysis of Real-World
Use of Helios,” in Electronic Voting Technology Workshop/Workshop on
Trustworthy Elections. Usenix, Aug. 2009.
[3] M. R. Clarkson, S. Chong, and A. C. Myers, “Civitas: Toward a Secure
Voting System,” in 29th Security and Privacy Symposium (S&P’08).
IEEE, 2008.
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:02:30 UTC from IEEE Xplore.  Restrictions apply. 
[4] R. L. Rivest and W. D. Smith., “ThreeVotingProtocols: ThreeBallot,
VAV, and Twin,” in Electronic Voting Technology Workshop (EVT 2007),
2007.
[5] P. Ryan, D. Bismark, J. Heather, S. Schneider, and Z. Xia, “The prˆet
`a voter veriﬁable election system,” IEEE Transactions on Information
Forensics and Security, vol. 4, pp. 662–673, 2009.
[6] D. Chaum, A. Essex, R. Carback, J. Clark, S. Popoveniuc, A. Sherman,
and P. Vora, “Scantegrity: End-to-End Voter-Veriﬁable Optical-Scan
Voting,” IEEE Security and Privacy, vol. 6, no. 3, pp. 40–46, 2008.
[7] J. Cohen (Benaloh) and M. Fischer, “A robust and veriﬁable crypto-
graphically secure election scheme,” in 26th Symposium on Foundations
of Computer Science. Portland, OR: IEEE, 1985, pp. 372–382.
[8] J. Benaloh, “Veriﬁable secret-ballot elections,” Yale University Depart-
ment of Computer Science, Tech. Rep. 561, September 1987.
[9] S. Delaune, S. Kremer, and M. D. Ryan, “Verifying privacy-type
properties of electronic voting protocols,” Journal of Computer Security,
vol. 17, no. 4, pp. 435–487, 2009.
[10] R. K¨usters, T. Truderung, and A. Vogt, “A Game-Based Deﬁnition
of Coercion-Resistance and its Applications,” in 23rd IEEE Computer
IEEE, 2010, pp. 122–136.
Security Foundations Symposium (CSF’10).
[11] ——, “Veriﬁability, Privacy, and Coercion-Resistance: New Insights
from a Case Study,” in IEEE Symposium on Security and Privacy (S&P
2011).
IEEE Computer Society, 2011, pp. 538–553.
[12] D. Bernhard, V. Cortier, O. Pereira, B. Smyth, and B. Warinschi, “Adapt-
ing Helios for provable ballot secrecy,” in 16th European Symposium
on Research in Computer Security (ESORICS’11), ser. LNCS, Springer,
Ed., vol. 6879, 2011.
[13] J. Groth, “Evaluating security of voting schemes in the universal
composability framework,” in ACNS, ser. Lecture Notes in Computer
Science, M. Jakobsson, M. Yung, and J. Zhou, Eds., vol. 3089. Springer,
2004, pp. 46–60.
[14] O. de Marneffe, O. Pereira, and J.-J. Quisquater, “Simulation-based
analysis of e2e voting systems,” in Proceedings of the First Conference
on E-Voting and Identity (VOTE-ID 2007), ser. LNCS, A. Alkasar and
M. Volkamer, Eds., no. 4896. Springer, Oct. 2007, pp. 137–149.
[15] T. Moran and M. Naor, “Split-ballot voting: everlasting privacy with
distributed trust,” in Proceedings of the 2007 ACM Conference on Com-
puter and Communications Security, (CCS 2007), Alexandria, Virginia,
USA, 2007, pp. 246–255.
[16] L. Coney, J. L. Hall, P. L. Vora, and D. Wagner, “Towards a privacy
measurement criterion for voting systems,” in In National Conference
on Digital Government Research, 2005.
[17] D. Bernhard, V. Cortier, O. Pereira, and B. Warinschi, “Measuring
vote privacy, revisited,” in 19th ACM Conference on Computer and
Communications Security (CCS’12).
Raleigh, USA: ACM, October
2012.
[18] D. Bernhard, O. Pereira, and B. Warinschi, “On necessary and sufﬁcient
conditions for private ballot submission,” Cryptology ePrint Archive,
Report 2012/236, 2012, http://eprint.iacr.org/.
[19] ——, “How not to prove yourself: Pitfalls of the Fiat-Shamir heuristic
and applications to Helios,” in ASIACRYPT, ser. Lecture Notes in
Computer Science, X. Wang and K. Sako, Eds., vol. 7658. Springer,
2012, pp. 626–643.
[20] V. Cortier, D. Galindo, S. Glondu, and M. Izabach`ene, “Distributed
ElGamal `a la Pedersen: Application to helios,” in WPES, A.-R. Sadeghi
and S. Foresti, Eds. ACM, 2013, pp. 131–142.
[21] M. Chase, M. Kohlweiss, A. Lysyanskaya, and S. Meiklejohn, “Ver-
iﬁable elections that scale for free,” in Public Key Cryptography, ser.
Lecture Notes in Computer Science, K. Kurosawa and G. Hanaoka, Eds.,
vol. 7778. Springer, 2013, pp. 479–496.
[22] D. Bernhard and B. Smyth, “Ballot privacy and ballot independence
coincide,” in Proceedings of the 18th European Symposium on Research
in Computer Security (ESORICS’13), ser. Lecture Notes in Computer
Science, Springer, Ed., 2013.
[23] J. C. Benaloh and M. Yung, “Distributing the power of a government
to enhance the privacy of voters (extended abstract),” in PODC, J. Y.
Halpern, Ed. ACM, 1986, pp. 52–62.
[24] J. Benaloh, “Veriﬁable secret-ballot elections,” PhD thesis, Yale Univer-
sity, 1987.
[25] J. C. Benaloh and D. Tuinstra, “Receipt-free secret-ballot elections
(extended abstract),” in STOC, F. T. Leighton and M. T. Goodrich, Eds.
ACM, 1994, pp. 544–553.
[26] E. Cuvelier, O. Pereira, and T. Peters, “Election veriﬁability or ballot
privacy: Do we need to choose?” in Proceedings of the 18th European
Symposium on Research in Computer Security (ESORICS’13), ser.
Lecture Notes in Computer Science, Springer, Ed., 2013.
[27] V. Cortier and B. Smyth, “Attacking and ﬁxing Helios: An analysis of
ballot secrecy,” in 24th IEEE Computer Security Foundations Symposium
(CSF’11).
IEEE, 2011, pp. 297–311.
[28] ——, “Attacking and ﬁxing Helios: An analysis of ballot secrecy,”
Journal of Computer Security, vol. 21, no. 1, pp. 89–148, 2013.
[29] J. Benaloh, “Ballot casting assurance via voter-initiated poll station
auditing,” in Proceedings of the Second Usenix/ACCURATE Electronic
Voting Technology Workshop, 2007.
[30] M. R. Clarkson, S. Chong, and A. C. Myers, “Civitas: Toward a secure
voting system,” in Proc. IEEE Symposium on Security and Privacy,
2008, pp. 354–368.
[31] S. Delaune, S. Kremer, and M. Ryan, “Verifying privacy-type properties
of electronic voting protocols,” Journal of Computer Security, vol. 17,
no. 4, pp. 435–487, 2009.
[32] A. Juels, D. Catalano, and M. Jakobsson, “Coercion-Resistant Electronic
Elections,” in 4th Workshop on Privacy in the Electronic Society (WPES
2005). ACM, 2005, pp. 61–70.
[33] J. Dreier, P. Lafourcade, and Y. Lakhnech, “Deﬁning privacy for
weighted votes, single and multi-voter coercion,” in ESORICS, ser. Lec-
ture Notes in Computer Science, S. Foresti, M. Yung, and F. Martinelli,
Eds., vol. 7459. Springer, 2012, pp. 451–468.
[34] “Ballot paper for European Parliament election in Luxembourg, 2014,”
http://upload.wikimedia.org/wikipedia/commons/b/bf/Ballot paper
European Parliament elections 2014 in Luxembourg.JPG.
[35] D. Bernhard, V. Cortier, D. Galindo, O. Pereira, and B. Warinschi, “A
comprehensive analysis of game-based ballot privacy deﬁnitions,” Cryp-
tology ePrint Archive, Report 2015/255, 2015, http://eprint.iacr.org/.
[36] D. Wikstr¨om, “Simpliﬁed submission of inputs to protocols,” in Security
and Cryptography for Networks, 6th International Conference, SCN
2008, ser. Lecture Notes in Computer Science, R. Ostrovsky, R. D.
Prisco, and I. Visconti, Eds., vol. 5229. Springer, 2008, pp. 293–308.
[37] B. Adida, O. de Marneffe, O. Pereira, and J.-J. Quisquater, “Electing a
university president using open-audit voting: Analysis of real-world use
of Helios,” in Proceedings of the 2009 conference on Electronic voting
technology/workshop on trustworthy elections, 2009.
[38] R. Cramer, R. Gennaro, and B. Schoenmakers, “A secure and optimally
efﬁcient multi-authority election scheme,” in Advances in Cryptology
(EUROCRYPT’97), 1997, p. 103118.
[39] International Association for Cryptologic Research. Elections page at
http://www.iacr.org/elections/.
[40] T. E. Gamal, “A public key cryptosystem and a signature scheme based
on discrete logarithms,” IEEE Transactions on Information Theory,
vol. 31, no. 4, pp. 469–472, 1985.
[41] D. Chaum and T. P. Pedersen, “Wallet databases with observers,” in
CRYPTO, ser. Lecture Notes in Computer Science, E. F. Brickell, Ed.,
vol. 740. Springer, 1992, pp. 89–105.
[42] R. Cramer, I. Damg˚ard, and B. Schoenmakers, “Proofs of partial knowl-
edge and simpliﬁed design of witness hiding protocols,” in CRYPTO,
ser. Lecture Notes in Computer Science, Y. Desmedt, Ed., vol. 839.
Springer, 1994, pp. 174–187.
[43] V. Cortier, D. Galindo, S. Glondu, and M. Izabach`ene, “Election veriﬁa-
bility for Helios under weaker trust assumptions,” in Computer Security
- ESORICS 2014 Proceedings, Part II, ser. Lecture Notes in Computer
Science, M. Kutylowski and J. Vaidya, Eds., vol. 8713. Springer, 2014,
pp. 327–344.
APPENDIX
VIII. TEST CASES FOR BPRIV DEFINITIONS
During our work on this paper, we listed some insecure
variations on voting protocols. Future designers of ballot
privacy-related notions can use these as “safety checks”: if
any of these schemes is not insecure under some notion of
privacy then the notion may be too weak. We argue that none
of these insecure schemes can satisfy BPRIV.
A. Helios v3 — Replay attacks
Any voting scheme in which an adversary can read a honest
voter’s ballot from the ballot box and resubmit a ballot for the
515515
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:02:30 UTC from IEEE Xplore.  Restrictions apply. 
If β = 0
If β = 1
If β = 0
If β = 0
B sees
=⇒
B sees
=⇒
B(cid:2) sees
=⇒
B(cid:2) sees
=⇒
{b0},{bc}, {( b0, vb0 )} , {vb1} , {( bc, vbc )} , Π
(cid:3)
} , {( bc, vbc )} , Π
{b1},{bc}, {( b1, vb0 )} , {vb1
†
{b0},{bc}, {vb0} , {vb1} , {vbc} , Π
(cid:3)
{b1},{bc}, {vb0
} , Π
†
} , {vb1
} , {vbc
Fig. 3. Comparison between BPRIV adversaries.
same vote as her own fails to ensure vote privacy, as argued
in Section III-F and illustrated on Helios (version 3) [28].
More precisely, consider an adversary who, for any two
distinct honest votes v0 and v1, can perform the following
sequence of queries:
start-voting(); vote(v0, v1); vote(v1, v0);
bb ←board(); b ← first(bb); ballot(b);
(r, a) ← tally()
Here first returns the ﬁrst ballot of bb. We may also imagine
more sophisticated attacks where the adversary has to change
e.g. identifying information on the ballot. We deliberately
choose two vote queries that would produce the same “left”
and “right” tallies, if b was independent of the honest ballots,
In the BPRIV game, if the ballot b is not rejected (by
Publish) then the tally for β = 0 is ρ(v0, v1, v0) and for
β = 1 it is ρ(v1, v0, v1). If these are not the same value,
which happens for example if ρ counts the number of v0 and
v1 votes submitted, then our adversary can win the BPRIV
game (with probability 1), hence the broken scheme is not
BPRIV secure.
B. Leaky auxiliary data
Consider any voting scheme where the result function ρ is
supposed to output how many times each choice was voted
for, i.e. one could write ρ(v0, v1, v0, v0) = {(v0, 3), (v1, 1)}.
Imagine that, unfortunately, a scheme’s tally also contains
all votes in clear, in the order that they were cast. This is
clearly not desirable. Intuitively, there are two distinct ways of
discarding such a scheme. Either the (leaky) output of the tally
is classiﬁed as being the result itself. Then the scheme does
not implement the desired functionality and this is captured
with our “strong consistency” notion. Or this leaky output is
contained in the auxiliary data. In that case, we can construct
a BPRIV adversary against such a scheme:
start-voting(); vote(v0, v1); vote(v1, v0);
(r, a) ← tally()
To show that this adversary can win, we recall that the
output of tally is split into a result r and auxiliary data Π in
such a way that r is guaranteed not to leak any information.
In other words, r is the correct/intended result so the list of
all votes must be part of Π. In the case β = 0, the adversary
sees auxiliary data that reveals all the votes on BB0, i.e. the
sequence (v0, v1). In contrast, if β = 1 then Π is computed as
a (probabilistic) function of BB1 and r, neither of which can
contain any information about the order of the votes in BB0.
(cid:3) containing the list (v0, v1) is at most
So the probability of Π
the probability of guessing the adversary’s “left” votes without
access to any ballots. Therefore, the adversary can distinguish
β = 0 from β = 1 with high probability.
IX. BPRIV2 DOES NOT GUARANTEE BALLOT PRIVACY
Let us prove formally that V deﬁned in Section III-D is
BPRIV2 secure, while it should intuitively not be declared
private.
SimProof(BB0, BB1, pk, info) := Π
{( b, vb )}
||{( b1, vb0 )}
b∈BB0∩BB1
b1∈BB1,b0∈BB0
† ||
that
turns out
:= SimProof(cid:3)
is BPRIV2 private then so is V. Indeed,
where BBγ := BBγ \ (BB0 ∩ BB1), vb := Extract(sk, b) and
†
(BB0, BB1, pk, info). Intuitively, SimProof
Π
decrypts correctly the adversarial ballots but mimics the case
if
β = 0 for all honest ballots. Then it
V(cid:3)
let us write
BBβ = Hβ ∪ C, where Hβ is the sublist of honest ballots
output by the OvoteLR oracle for β = 0, 1, and C :=
BBβ \ Hβ. By construction C ⊆ BB0 ∩ BB1. We want
to see that for every BPRIV2 adversary B against V there
exists a BPRIV2 adversary B(cid:3) against scheme V(cid:3) such that
Succbpriv2(B) ≈negl Succbpriv2(B(cid:3)
), their advantages only differ
in a negligible quantity. We compare the data seen by BPRIV2
adversaries B against scheme V and adversaries B(cid:3) against
scheme V(cid:3) in Figure 3, wherein b0 ∈ H0, b1 ∈ H1, bc ∈ C.
We observe that the only extra information that adversary
B against V sees compared to adversary B(cid:3) against V(cid:3), are
the relations {( b0, vb0 )} and {( bc, vbc )} when β = 0,
and the relations {( b1, vb0 )} and {( bc, vbc )} when β = 1.
However this does not allow B to have a greater distinguishing
advantage than B(cid:3). Indeed, since the new matching between
ballots and votes is not veriﬁable (the original tallying proofs
† did not change and V(cid:3) is BPRIV2 private), adversary
(cid:3)
Π
B(cid:3) can simulate B’s view using its own view. It sufﬁces for
B(cid:3) to tell apart the multisets of votes V0 and VC (this can
be done easily, since V0 are the left vote queries of B and
VC := r \ V0), and later link H0 or H1 to V0 at its liking.
Finally, Succbpriv2(B) ≈negl Succbpriv2(B(cid:3)
, Π
).
516516
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:02:30 UTC from IEEE Xplore.  Restrictions apply.