User: How to write a simple TCP/IP client and server program using Python?
Assistant: The following is an example of a simple Python TCP/IP client and server program: Server program: ```python import socket # create socket server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) # set IP address and Port server_address = ('localhost', 8000) server_socket.bind(server_address) # Set the maximum number of connections server_socket.listen(5) while True: print('waiting for connection...') # Accept client connection client_socket, client_address = server_socket .accept() print('The client is connected:', client_address) # Receive the message sent by the client data = client_socket.recv(1024) print('Received data:', data) # Send a response message to the client response = 'Hello, World!' client_socket.send(response.encode()) # close the client connection client_socket.close() ``` client program: ```python import socket # create socket client_socket = socket.socket (socket.AF_INET, socket.SOCK_STREAM) # Set the server address and port server_address = ('localhost', 8000) # Connect to the server client_socket.connect(server_address) # Send a message to the server message = 'Hello, Server!' client_socket.send( message.encode()) # Receive server response message data = client_socket.recv(1024) print('Received data:', data.decode()) # Close the connection client_socket.close() ``` After running the server program , we can run the client program to test: ```bash # Run the server program python server.py in one terminal # Run the client program python client.py in another terminal ``` Output: ``` Waiting for connection.. . Client connected: ('127.0.0.1', 55892) Received data: b'Hello, Server!' ```