          - name: mylv
            size: 2G
            fs_type: ext4
            mount_point: /mnt
  roles:
    - rhel-system-roles.storage
```
::: itemizedlist
-   `myvg`{.literal} 卷组由以下磁盘组成：
    ::: itemizedlist
    -   `/dev/sda`{.literal}
    -   `/dev/sdb`{.literal}
    -   `/dev/sdc`{.literal}
    :::
-   如果 `myvg`{.literal} 卷组已存在，则 playbook 会将逻辑卷添加到卷组。
-   如果 `myvg`{.literal} 卷组不存在，则 playbook 会创建它。
-   playbook 在 `mylv`{.literal} 逻辑卷上创建 Ext4 文件系统，并在
    `/mnt`{.literal} 上永久挂载文件系统。
:::
:::
:::
::: itemizedlist
**其他资源**
-   `/usr/share/ansible/roles/rhel-system-roles.storage/README.md`{.literal}
    文件。
:::
:::
::: section
::: titlepage
# []{#managing-local-storage-using-rhel-system-roles_managing-file-systems.html#an-example-ansible-playbook-to-enable-online-block-discard_managing-local-storage-using-rhel-system-roles}启用在线块丢弃的 Ansible playbook 示例 {.title}
:::
本节提供了一个 Ansible playbook 示例。此 playbook
应用存储角色，以挂载启用了在线块丢弃的 XFS 文件系统。
::: example
[]{#managing-local-storage-using-rhel-system-roles_managing-file-systems.html#idm139895581230064}
**例 2.4. 一个 playbook，它在 /mnt/data/ 上启用在线块丢弃功能**
::: example-contents
``` screen
---
- hosts: all
  vars:
    storage_volumes:
      - name: barefs
        type: disk
        disks:
          - sdb
        fs_type: xfs
        mount_point: /mnt/data
        mount_options: discard
  roles:
    - rhel-system-roles.storage
```
:::
:::
::: itemizedlist
**其他资源**
-   [永久挂载文件系统的 Ansible playbook
    示例](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/managing_file_systems/managing-local-storage-using-rhel-system-roles_managing-file-systems#an-example-ansible-playbook-to-persistently-mount-a-file-system_managing-local-storage-using-rhel-system-roles){.link}
-   `/usr/share/ansible/roles/rhel-system-roles.storage/README.md`{.literal}
    文件。
:::
:::
::: section
::: titlepage
# []{#managing-local-storage-using-rhel-system-roles_managing-file-systems.html#an-example-playbook-to-create-mount-an-ext4-file-system_managing-local-storage-using-rhel-system-roles}创建和挂载 Ext4 文件系统的 Ansible playbook 示例 {.title}
:::
本节提供了一个 Ansible playbook 示例。此 playbook
应用存储角色来创建和挂载 Ext4 文件系统。
::: example
[]{#managing-local-storage-using-rhel-system-roles_managing-file-systems.html#idm139895582487680}
**例 2.5. 在 /dev/sdb 上创建 Ext4 并挂载到 /mnt/data 的 playbook**
::: example-contents
``` screen
---
- hosts: all
  vars:
    storage_volumes:
      - name: barefs
        type: disk
        disks:
          - sdb
        fs_type: ext4
        fs_label: label-name
        mount_point: /mnt/data
  roles:
    - rhel-system-roles.storage
```
::: itemizedlist
-   playbook 在 `/dev/sdb`{.literal} 磁盘上创建文件系统。
-   playbook 永久将文件系统挂载在 `/mnt/data`{.literal} 目录。
-   文件系统的标签是 `label-name`{.literal}。
:::
:::
:::
::: itemizedlist
**其他资源**
-   `/usr/share/ansible/roles/rhel-system-roles.storage/README.md`{.literal}
    文件。
:::
:::
::: section
::: titlepage
# []{#managing-local-storage-using-rhel-system-roles_managing-file-systems.html#an-example-ansible-playbook-to-create-mount-ext3-file-system_managing-local-storage-using-rhel-system-roles}创建和挂载 ext3 文件系统的 Ansible playbook 示例 {.title}
:::
本节提供了一个 Ansible playbook 示例。此 playbook
应用存储角色来创建和挂载 Ext3 文件系统。
::: example
[]{#managing-local-storage-using-rhel-system-roles_managing-file-systems.html#idm139895605320000}
**例 2.6. 在 `/dev/sdb`{.literal} 上创建 Ext3 ，并将其挂载到
`/mnt/data`{.literal} 的 playbook**
::: example-contents
``` screen
---
- hosts: all
  vars:
    storage_volumes:
      - name: barefs
        type: disk
        disks:
          - sdb
        fs_type: ext3
        fs_label: label-name
        mount_point: /mnt/data
  roles:
    - rhel-system-roles.storage
```
::: itemizedlist
-   playbook 在 `/dev/sdb`{.literal} 磁盘上创建文件系统。
-   playbook 永久将文件系统挂载在 `/mnt/data`{.literal} 目录。
-   文件系统的标签是 `label-name`{.literal}。
:::
:::
:::
::: itemizedlist
**其他资源**
-   `/usr/share/ansible/roles/rhel-system-roles.storage/README.md`{.literal}
    文件。
:::
:::
::: section
::: titlepage
# []{#managing-local-storage-using-rhel-system-roles_managing-file-systems.html#example-ansible-playbook-to-resize-an-existing-file-system-using-the-storage-rhel-system-role_managing-local-storage-using-rhel-system-roles}使用存储 RHEL 系统角色调整现有 Ext4 或 Ext3 文件系统的 Ansible playbook 示例 {.title}
:::
本节提供了一个 Ansible playbook 示例。此 playbook
应用存储角色，以在块设备上调整现有 Ext4 或 Ext3 文件系统的大小。
::: example
[]{#managing-local-storage-using-rhel-system-roles_managing-file-systems.html#idm139895614016144}
**例 2.7. 在磁盘上设置单个卷的 playbook**
::: example-contents
``` screen
---
- name: Create a disk device mounted on /opt/barefs
- hosts: all
  vars:
    storage_volumes:
      - name: barefs
        type: disk
        disks:
          - /dev/sdb
	size: 12 GiB
        fs_type: ext4
        mount_point: /opt/barefs
  roles:
    - rhel-system-roles.storage
```
:::
:::
::: itemizedlist
-   如果上例中的卷已存在，若要调整卷大小，您需要运行相同的
    playbook，只是参数 `size`{.literal} 的值不同。例如：
:::
::: example
[]{#managing-local-storage-using-rhel-system-roles_managing-file-systems.html#idm139895583928288}
**例 2.8. 在 `/dev/sdb`{.literal}上调整 `ext4`{.literal} 大小的
playbook**
::: example-contents
``` screen
---
- name: Create a disk device mounted on /opt/barefs
- hosts: all
  vars:
    storage_volumes:
      - name: barefs
        type: disk
        disks:
          - /dev/sdb
	size: 10 GiB
        fs_type: ext4
        mount_point: /opt/barefs
  roles:
    - rhel-system-roles.storage
```
::: itemizedlist
-   卷名称（示例中为 barefs）当前是任意的。Storage 角色根据 disk:
    属性中列出的磁盘设备标识卷。
:::
:::
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
在其他文件系统中使用 `Resizing`{.literal}
操作可能会破坏您正在使用的设备上的数据。
:::
::: itemizedlist
**其他资源**
-   `/usr/share/ansible/roles/rhel-system-roles.storage/README.md`{.literal}
    文件。
:::
:::
::: section
::: titlepage
# []{#managing-local-storage-using-rhel-system-roles_managing-file-systems.html#example-ansible-playbook-to-resize-an-existing-lvm-file-system-using-the-storage-rhel-system-role_managing-local-storage-using-rhel-system-roles}使用存储 RHEL 系统角色在 LVM 上调整现有文件系统的大小的 Ansible playbook 示例 {.title}
:::
本节提供了一个 Ansible playbook 示例。此 playbook 应用存储 RHEL
系统角色，以使用文件系统重新定义 LVM 逻辑卷大小。
::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
### 警告 {.title}
在其他文件系统中使用 `Resizing`{.literal}
操作可能会破坏您正在使用的设备上的数据。
:::
::: example
[]{#managing-local-storage-using-rhel-system-roles_managing-file-systems.html#idm139895580790816}
**例 2.9. 调整 myvg 卷组中现有 mylv1 和 myvl2 逻辑卷大小的 playbook**
::: example-contents
``` screen
---
- hosts: all
   vars:
    storage_pools:
      - name: myvg
        disks:
          - /dev/sda
          - /dev/sdb
          - /dev/sdc
        volumes:
            - name: mylv1
              size: 10 GiB
              fs_type: ext4
              mount_point: /opt/mount1
            - name: mylv2
              size: 50 GiB
              fs_type: ext4
              mount_point: /opt/mount2
- name: Create LVM pool over three disks
  incude_role:
    name: rhel-system-roles.storage
```
::: itemizedlist
-   此 playbook 调整以下现有文件系统的大小：
    ::: itemizedlist
    -   挂载在 `/opt/mount1`{.literal} 上的 `mylv1`{.literal} 卷上的
        Ext4 文件系统，大小调整为 10 GiB。
    -   挂载在 `/opt/mount2`{.literal} 上的 `mylv2`{.literal} 卷上的
        Ext4 文件系统，大小调整为 50 GiB。
    :::
:::
:::
:::
::: itemizedlist
**其他资源**
-   `/usr/share/ansible/roles/rhel-system-roles.storage/README.md`{.literal}
    文件。
:::
:::
::: section
::: titlepage
# []{#managing-local-storage-using-rhel-system-roles_managing-file-systems.html#example-ansible-playbook-to-create-a-swap-partition-using-the-storage-rhel-system-role_managing-local-storage-using-rhel-system-roles}使用存储 RHEL 系统角色创建交换分区的 Ansible playbook 示例 {.title}
:::
本节提供了一个 Ansible playbook 示例。此 playbook
应用存储角色来创建交换分区（如果不存在），或者修改交换分区（如果已存在），在使用默认参数的块设备上。
::: example
[]{#managing-local-storage-using-rhel-system-roles_managing-file-systems.html#idm139895582370416}
**例 2.10. 创建或修改 /dev/sdb 上现有 XFS 的 playbook**
::: example-contents
``` screen
---
- name: Create a disk device with swap
- hosts: all
  vars:
    storage_volumes:
      - name: swap_fs
        type: disk
        disks:
          - /dev/sdb
	size: 15 GiB
        fs_type: swap
  roles:
    - rhel-system-roles.storage
```
::: itemizedlist
-   卷名称（示例中的 `swap_fs`{.literal} ）目前是任意的。Storage
    角色根据 disk: 属性中列出的磁盘设备标识卷。``{.literal}
:::
:::
:::
::: itemizedlist
**其他资源**
-   `/usr/share/ansible/roles/rhel-system-roles.storage/README.md`{.literal}
    文件。
:::
:::
::: section
::: titlepage
# []{#managing-local-storage-using-rhel-system-roles_managing-file-systems.html#configure-raid-volume-using-storage-system-role_managing-local-storage-using-rhel-system-roles}使用存储系统角色配置 RAID 卷 {.title}