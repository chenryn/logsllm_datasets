        缓​​​存​​​减​​​去​​​ `tmpfs`{.systemitem} 大​​​小​​​
        :::
    :::
[memory.usage_in_bytes]{.term}
:   ::: para
    报​​​告​​​该​​​ cgroup中​​​进​​​程​​​使​​​用​​​的​​​当​​​前​​​总​​​内​​​存​​​用​​​量​​​（以​​​字​​​节​​​为​​​单​​​位​​​）。​​​
    :::
[memory.memsw.usage_in_bytes]{.term}
:   ::: para
    报​​​告​​​该​​​ cgroup 中​​​进​​​程​​​使​​​用​​​的​​​当​​​前​​​内​​​存​​​用​​​量​​​和​​​ swap
    空​​​间​​​总​​​和​​​（以​​​字​​​节​​​为​​​单​​​位​​​）。​​​
    :::
[memory.max_usage_in_bytes]{.term}
:   ::: para
    报​​​告​​​该​​​ cgroup 中​​​进​​​程​​​使​​​用​​​的​​​最​​​大​​​内​​​存​​​用​​​量​​​（以​​​字​​​节​​​为​​​单​​​位​​​）。​​​
    :::
[memory.memsw.max_usage_in_bytes]{.term}
:   ::: para
    报​​​告​​​该​​​ cgroup 中​​​进​​​程​​​使​​​用​​​的​​​最​​​大​​​内​​​存​​​用​​​量​​​和​​​ swap
    空​​​间​​​用​​​量​​​（以​​​字​​​节​​​为​​​单​​​位​​​）。​​​
    :::
[memory.limit_in_bytes]{.term}
:   ::: para
    设​​​定​​​用​​​户​​​内​​​存​​​的​​​最​​​大​​​量​​​（包​​​括​​​文​​​件​​​缓​​​存​​​）。​​​如​​​果​​​没​​​有​​​指​​​定​​​单​​​位​​​，则​​​将​​​该​​​数​​​值​​​理​​​解​​​为​​​字​​​节​​​。​​​但​​​是​​​可​​​以​​​使​​​用​​​前​​​缀​​​代​​​表​​​更​​​大​​​的​​​单​​​位​​​ -
    `k`{.literal} 或​​​者​​​ `K`{.literal} 代​​​表​​​千​​​字​​​节​​​，`m`{.literal} 或​​​者​​​
    `M`{.literal} 代​​​表​​​ MB，`g`{.literal} 或​​​者​​​ `G`{.literal} 代​​​表​​​ GB。​​​
    :::
    ::: para
    您​​​不​​​能​​​使​​​用​​​ `memory.limit_in_bytes`{.systemitem} 限​​​制​​​ root
    cgroup；您​​​只​​​能​​​在​​​该​​​层​​​级​​​中​​​较​​​低​​​的​​​组​​​群​​​中​​​应​​​用​​​这​​​些​​​值​​​。​​​
    :::
    ::: para
    在​​​ `memory.limit_in_bytes`{.systemitem} 中​​​写​​​入​​​ `-1`{.literal}
    删​​​除​​​现​​​有​​​限​​​制​​​。​​​
    :::
[memory.memsw.limit_in_bytes]{.term}
:   ::: para
    设​​​定​​​最​​​大​​​内​​​存​​​与​​​ swap
    用​​​量​​​之​​​和​​​。​​​如​​​果​​​没​​​有​​​指​​​定​​​单​​​位​​​，则​​​将​​​该​​​值​​​解​​​读​​​为​​​字​​​节​​​。​​​但​​​是​​​可​​​以​​​使​​​用​​​前​​​缀​​​代​​​表​​​更​​​大​​​的​​​单​​​位​​​ -
    `k`{.literal} 或​​​者​​​ `K`{.literal} 代​​​表​​​千​​​字​​​节​​​，`m`{.literal} 或​​​者​​​
    `M`{.literal} 代​​​表​​​ MB，`g`{.literal} 或​​​者​​​ `G`{.literal} 代​​​表​​​ GB。​​​
    :::
    ::: para
    您​​​不​​​能​​​使​​​用​​​ `memory.memsw.limit_in_bytes`{.systemitem} 限​​​制​​​ root
    cgroup；您​​​只​​​能​​​在​​​该​​​层​​​级​​​中​​​较​​​低​​​的​​​组​​​群​​​中​​​应​​​用​​​这​​​些​​​值​​​。​​​
    :::
    ::: para
    在​​​ `memory.memsw.limit_in_bytes`{.systemitem} 中​​​写​​​入​​​ `-1`{.literal}
    删​​​除​​​现​​​有​​​限​​​制​​​。​​​
    :::
[memory.failcnt]{.term}
:   ::: para
    报​​​告​​​内​​​存​​​达​​​到​​​在​​​ `memory.limit_in_bytes`{.systemitem}
    设​​​定​​​的​​​限​​​制​​​值​​​的​​​次​​​数​​​。​​​
    :::
[memory.memsw.failcnt]{.term}
:   ::: para
    报​​​告​​​内​​​存​​​加​​​ swap 空​​​间​​​限​​​制​​​达​​​到​​​在​​​
    `memory.memsw.limit_in_bytes`{.systemitem} 设​​​定​​​的​​​值​​​的​​​次​​​数​​​。​​​
    :::
[memory.force_empty]{.term}
:   ::: para
    当​​​设​​​定​​​为​​​ `0`{.literal} 时​​​，会​​​清​​​空​​​这​​​个​​​ cgroup
    中​​​任​​​务​​​所​​​使​​​用​​​的​​​所​​​有​​​页​​​面​​​的​​​内​​​存​​​。​​​这​​​个​​​接​​​口​​​只​​​可​​​在​​​ cgroup
    中​​​没​​​有​​​任​​​务​​​时​​​使​​​用​​​。​​​如​​​果​​​无​​​法​​​清​​​空​​​内​​​存​​​，则​​​在​​​可​​​能​​​的​​​情​​​况​​​下​​​将​​​其​​​移​​​动​​​到​​​上​​​级​​​
    cgroup 中​​​。​​​删​​​除​​​ cgroup 前​​​请​​​使​​​用​​​ `memory.force_empty`{.systemitem}
    以​​​避​​​免​​​将​​​不​​​再​​​使​​​用​​​的​​​页​​​面​​​缓​​​存​​​移​​​动​​​到​​​它​​​的​​​上​​​级​​​ cgroup 中​​​。​​​
    :::
[memory.swappiness]{.term}
:   ::: para
    将​​​内​​​核​​​倾​​​向​​​设​​​定​​​为​​​换​​​出​​​这​​​个​​​ cgroup
    中​​​任​​​务​​​所​​​使​​​用​​​的​​​进​​​程​​​内​​​存​​​，而​​​不​​​是​​​从​​​页​​​缓​​​冲​​​中​​​再​​​生​​​页​​​面​​​。​​​这​​​也​​​是​​​在​​​
    `/proc/sys/vm/swappiness`{.filename}
    中​​​设​​​定​​​的​​​使​​​用​​​同​​​一​​​方​​​法​​​为​​​整​​​个​​​系​​​统​​​设​​​定​​​的​​​内​​​核​​​倾​​​向​​​。​​​默​​​认​​​值​​​为​​​
    `60`{.literal}。​​​低​​​于​​​这​​​个​​​值​​​会​​​降​​​低​​​内​​​核​​​换​​​出​​​进​​​程​​​内​​​存​​​的​​​倾​​​向​​​，将​​​其​​​设​​​定​​​为​​​
    `0`{.literal} 则​​​完​​​全​​​不​​​会​​​为​​​ cgroup
    中​​​的​​​任​​​务​​​换​​​出​​​进​​​程​​​内​​​存​​​。​​​高​​​于​​​这​​​个​​​值​​​将​​​提​​​高​​​内​​​核​​​换​​​出​​​进​​​程​​​内​​​存​​​的​​​倾​​​向​​​，大​​​于​​​
    `100`{.literal} 时​​​内​​​核​​​将​​​开​​​始​​​换​​​出​​​作​​​为​​​这​​​个​​​ cgroup
    中​​​进​​​程​​​的​​​地​​​址​​​空​​​间​​​一​​​部​​​分​​​的​​​页​​​面​​​。​​​
    :::
    ::: para
    请​​​注​​​意​​​那​​​个​​​值​​​为​​​ `0`{.literal}
    不​​​会​​​阻​​​止​​​换​​​出​​​进​​​程​​​内​​​存​​​；系​​​统​​​缺​​​少​​​内​​​存​​​时​​​仍​​​可​​​能​​​发​​​生​​​换​​​出​​​内​​​存​​​，这​​​是​​​因​​​为​​​全​​​局​​​虚​​​拟​​​内​​​存​​​管​​​理​​​逻​​​辑​​​不​​​读​​​取​​​该​​​
    cgroup 值​​​。​​​要​​​完​​​全​​​锁​​​定​​​页​​​面​​​，请​​​使​​​用​​​ `mlock()`{.function} 而​​​不​​​时​​​
    cgroup。​​​
    :::
    ::: para
    您​​​不​​​能​​​更​​​改​​​以​​​下​​​组​​​群​​​的​​​ swappiness：
    :::
    ::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
    -   ::: para
        root cgroup，它​​​使​​​用​​​在​​​ `/proc/sys/vm/swappiness`{.filename}
        中​​​设​​​定​​​的​​​ swappiness。​​​
        :::
    -   ::: para
        有​​​属​​​于​​​它​​​的​​​子​​​组​​​群​​​的​​​ cgroup。​​​
        :::
    :::
[memory.use_hierarchy]{.term}
:   ::: para
    包​​​含​​​指​​​定​​​是​​​否​​​应​​​将​​​内​​​存​​​用​​​量​​​计​​​入​​​ cgroup
    层​​​级​​​的​​​吞​​​吐​​​量​​​的​​​标​​​签​​​（`0`{.literal} 或​​​者​​​
    `1`{.literal}）。​​​如​​​果​​​启​​​用​​​（`1`{.literal}），内​​​存​​​子​​​系​​​统​​​会​​​从​​​超​​​过​​​其​​​内​​​存​​​限​​​制​​​的​​​子​​​进​​​程​​​中​​​再​​​生​​​内​​​存​​​。​​​默​​​认​​​情​​​况​​​（`0`{.literal}）是​​​子​​​系​​​统​​​不​​​从​​​任​​​务​​​的​​​子​​​进​​​程​​​中​​​再​​​生​​​内​​​存​​​。​​​
    :::
:::
:::
::: section
::: titlepage
# [⁠]{#ch-Subsystems_and_Tunable_Parameters.html#sec-net_cls}3.8. net_cls {.title}
:::
::: para
`net_cls`{.systemitem}
子​​​系​​​统​​​使​​​用​​​等​​​级​​​识​​​别​​​符​​​（classid）标​​​记​​​网​​​络​​​数​​​据​​​包​​​，可​​​允​​​许​​​ Linux
流​​​量​​​控​​​制​​​程​​​序​​​（[**tc**]{.application}）识​​​别​​​从​​​具​​​体​​​ cgroup
中​​​生​​​成​​​的​​​数​​​据​​​包​​​。​​​可​​​将​​​流​​​量​​​控​​​制​​​程​​​序​​​配​​​置​​​为​​​给​​​不​​​同​​​ cgroup
中​​​的​​​数​​​据​​​包​​​分​​​配​​​不​​​同​​​的​​​优​​​先​​​权​​​。​​​
:::
::: variablelist
[net_cls.classid]{.term}
:   ::: para
    `net_cls.classid`{.systemitem}
    包​​​含​​​一​​​个​​​说​​​明​​​流​​​量​​​控​​​制​​​*句​​​柄​​​*的​​​十​​​六​​​进​​​制​​​的​​​值​​​。​​​例​​​如​​​：`0x1001`{.literal}
    代​​​表​​​通​​​常​​​写​​​成​​​ `10:1`{.literal} 的​​​句​​​柄​​​，这​​​是​​​ [iproute2]{.package}
    使​​​用​​​的​​​格​​​式​​​。​​​
    :::
    ::: para
    这​​​些​​​句​​​柄​​​的​​​格​​​式​​​为​​​：`0xAAAABBBB`{.literal}，其​​​中​​​ *AAAA*
    是​​​十​​​六​​​进​​​制​​​主​​​设​​​备​​​号​​​，*BBBB*
    是​​​十​​​六​​​进​​​制​​​副​​​设​​​备​​​号​​​。​​​您​​​可​​​以​​​忽​​​略​​​前​​​面​​​的​​​零​​​；`0x10001`{.literal} 与​​​
    `0x00010001`{.literal} 一​​​样​​​，代​​​表​​​ `1:1`{.literal}。​​​
    :::
:::
::: para
参​​​考​​​ [**tc**]{.application} 的​​​ man page 了​​​解​​​如​​​何​​​配​​​置​​​流​​​量​​​控​​​制​​​程​​​序​​​使​​​用​​​
`net_cls`{.systemitem} 添​​​加​​​到​​​网​​​络​​​数​​​据​​​包​​​中​​​的​​​句​​​柄​​​。​​​
:::
:::
::: section
::: titlepage
# [⁠]{#ch-Subsystems_and_Tunable_Parameters.html#sec-ns}3.9. ns {.title}
:::
::: para
`ns`{.systemitem}
子​​​系​​​统​​​提​​​供​​​了​​​一​​​个​​​将​​​进​​​程​​​分​​​组​​​到​​​不​​​同​​​*名​​​称​​​空​​​间​​​*的​​​方​​​法​​​。​​​在​​​具​​​体​​​名​​​称​​​空​​​间​​​中​​​，进​​​程​​​可​​​彼​​​此​​​互​​​动​​​，但​​​会​​​与​​​在​​​其​​​它​​​名​​​称​​​空​​​间​​​中​​​运​​​行​​​的​​​进​​​程​​​隔​​​绝​​​。​​​这​​​些​​​分​​​开​​​的​​​名​​​称​​​空​​​间​​​在​​​用​​​于​​​操​​​作​​​系​​​统​​​级​​​别​​​的​​​虚​​​拟​​​化​​​时​​​，有​​​时​​​也​​​称​​​之​​​为​​​*容​​​器​​​*。​​​
:::
:::
::: section
::: titlepage
# [⁠]{#ch-Subsystems_and_Tunable_Parameters.html#sec-Subsystems_and_Tunable_Parameter-Additional_Resources}3.10. 附​​​加​​​资​​​源​​​ {.title}
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
[⁠]{#ch-Subsystems_and_Tunable_Parameters.html#itemlist-Subsystem-Specific_Kernel_Documentation}
**具​​​体​​​子​​​系​​​统​​​内​​​核​​​文​​​档​​​**
::: para