求原始服务器时间Date字段为“Tue,15 Jul201415:18:49GMT"，由于Date描述的时间为
行跟踪，
字段的配置如下，指定“Expires="7d"”，表示文件在客户端缓存7天。
间，一旦超过了这个时间，浏览器会重新向原始服务器发起新请求，在Yorserver中Expires
8.2.1HTTP 缓存功能
收与执行。
块Web服务类HTTPServer扩展而来，同时也使用CGIHTTPServer模块提供CGI程序的接
持；CGIHTTPServer模块包含处理POST请求的支持。Yorserver 是基于BaseHTTPServer模
供基本的Web服务和处理器类；SimpleHTTPServer模块包含GET与HEAD请求与处理支
访问 Yorserver 服务下的站点 URL“http://192.168.1.20/index2.html"，通过 Http Watch进
Expires="7d"
m(day/hour/minute).
在HTTP/1.1协议中，
（1）Expires 机制
#Expires: Add response HTTP header Expires and Max-age version.format:d/h/
，跟踪结果见图8-2，可见Expires字段显示“Tue,22Jul201423:18:49GMT”，请
。下面详细介绍各个功能点。
00:00:00.00
强辑（E）查看(V)收藏突（A)
Linux公社www.linuxidc.com
CherHeadersCokiesCacheQuery StringPOSTDataContentStream
Time Chart
Expires字段声明了一个网页或URL地址不再被浏览器缓存的时
C×Demo page
图8-2返回的Expires字段信息
Tme
FindExport
Sent
Rerived Method
Resut
dby192.168.1.103:61238
War
ingE
TypeURL
Find Export
---
## Page 134
Linux公社微信公众号：linuxidc_com
专题
Linux公社（LinuxIDC.com）设置了有一定影响力的Linux专题栏目。
数据中心，LinuxIDC就是关于Linux的数据中心。
Linux现在已经成为一种广受关注和支持的一种操作系统，IDC是互联网
Linux公社（www.Linuxidc.com）于2006年9月25日注册并开通网站，
Hadoop专题RedHat专题SUSE专题红旗Linux专题CentOS
包括：Ubuntu 专题Fedora专题Android 专题Oracle专题
Linux公社主站网址：
技术。
证、SUSE Linux、Android、Oracle、Hadoop、CentOS、MySQL、
Linux公社是专业的Linux系统门户网站，实时发布最新Linux资讯，包括
欢迎点击这里的链接进入精彩的Linux公社网站
www.Linuxidc.com
inux公社
www.linuxidc.com
搜索微信公众号:linuxidc_Com
源技术教程。
订阅专业的最新Linux资讯及开
微信扫一扫
旗下网站:
Linxidc.com
---
## Page 135
内容为“Cache-Control: public;max-age=604800"，效果如图 8-3所示。
值都可以计算出另一个值。Yorserver是通过已知Expires 值计算出max-age，实现源码如下：
由于 max-age 与Expires 的时间结果是等价的，只是表现形式不同，因此只要得到其中一个
期，当与 Expires 同时存在时，max-age 会覆盖 Expires。下面详细介绍 max-age 的实现原理,
新数据还是仍由缓存提供。与Expires 不同，max-age 是通过指定相对时间秒数来实现缓存过
器，而是由缓存直接提供，超过这一时间段后才向原始服务器发起请求，由服务器决定返回
字段实现在原始服务器返回的max-age配置的秒数内，浏览器将不会发送相关请求到服务
为Yorserver文件过期Expires 的实现方法：
累加，“过期时间”支持通过days（日）hours（小时）minutes（分钟）等单位来表示，以下
期时间”，“过期时间”是通过datetime.timedeltaO方法转换不同单位时间后，再与“当前时间”
108第二部分高级篇
以过期时间“7d”为例，计算公式为“86400*7=604800"，返回完整“Cache-Control”
cache_control ='public; max-age=&d'%(CACHE_MAX_AGE,)
CACHE_MAx_AGE=pubutil.secs_from_days(ExpiresTypes[Expirestype],int(Expirenum))
#定义“cache_control”返回内容
def secs_from_days(_seconds,_num):
#返回max-age方法，通过不同时间单位秒*数量得到
#定义过期时间类型，统一成“秒”单位
客户端另一缓存机制则是利用 HTTP 消息头中的“cache-control”来控制，其中max-age
（2）max-age机制
def get_http_expiry(_Expirestype,
#文件过期Expires 实现方法
关于Yorserver实现文件过期Expires 的方法，实现原理为返回“当前时间”+“配置过
Expirenum=7
return _seconds
"m"
"h"
"d"
return expire_date.strftime('%a, %d %b %Y %H:%M:%S GMT')
else:
expire_date = datetime.datetime.now() + datetime.timedelta(hours=_num)
：60，
：3600,
：86400,
Linux公社www.linuxidc.com
_num
"d"：
#当前时间+过期时间（日、小时、分钟）
num):
#Expires格式
#格式化时间为
---
## Page 136
将返回“HTTP/1.0304NotModified”，不匹配则返回“HTTP200”，实现源码如下：
Since字段与服务器端文件mtime（最后更新时间）进行比较，相匹配则说明文件没有更新，
制刷新页面，如“Ctrl+F5”组合键，将返回HTTP200状态，否则，将请求头部If-Modified-
Cache-Control字段，检查其值是否为no-cache，表示客户端要求不缓存，通常是用户主动强
需重启下载。于是客户端就可以直接从本地加载文件了。具体流程图如图8-4所示。
（HTTP200），如果是最新的，则返回HTTP304告诉客户端其本地缓存的文件是最新的，无
比对验证，通过这个时间戳判断客户端的文件是否是最新，如不是最新的，则返回新的内容
将先前接收到服务器端文件的Last-Modified时间戳信息进行发送，目的是让服务器端进行
Yorserver实现Last-Modified缓存机制的原理，首先获取请求头是否包含Pragma
最后一种浏览缓存机制为Last-Modified，其原理是客户端通过If-Modified-Since请求头
（3）Last-Modified机制
al7.2
OverviewTimeChartHeaders|CodesCacheQueryStingPOSTDatContentStraWaings
Started
SopearVioSumaryFindeSaTooHep
Linux公社 www.linuxidc.com
4114/5
Time hart
图8-4Last-Modified机制流程图
图8-3返回max-age字段信息
Sent
第8章从“零”开发一个轻量级webServer109
Received Mehod
AL
员员员务
cvedby19.18.1.1061238
Reslt
222u
匹配（未更新）
不匹配（更新）
TypeURL
HTTP/1,12000K
FindExport
---
## Page 137
Modifed”状态，当手工修改文件，使文件mtime发生改变时，将返回“HTTP200”状态。
110第二部分高级篇
客户端请求及响应效果如图8-5所示，当文件没有发生更新时返回“HTTP/1.0304Not
else:
if
file_last_modified=self.date_time_string(fs.st_mtime)
#将文件mtime 时间格式转为Last-Modified格式，如“Mon，29 Dec 200816:51:22 GMT”
else:
if client_cache_cc=='no-cache'
#获取请求头If-Modified-Since值，以便与服务器端文件mtime进行比较
client_cache_p = self.headers.getheader('Pragma')
client_cache_cc = self.headers.getheader('Cache-Control')
client_modified==file_last_modified:
self.end_headers()
self.send_response(304)
try:
client_modified=None
self.send_header('Expires'
self.send_header('Cache-Control',
self.send_header('Last-Modified',file_last_modified)
#将文件mtime作为Last-Modified返回
self.send_response(200)
except:
Linux公社
stop
#兼容不同浏览器请求异常
Clear
self.headers.getheader('If-Modified-Since')
收建实（）工具①帮助山）
18Dul201414:03:22GMT;1engt6104
zz_a1d53D623063408-1405692083-426nt1
图8-5返回304状态信息
Demo page2
 www.linuxidc.com
，expiration)
#不匹配则返回200状态
#匹配则返回304状态
orclient_cache_p=='no-cache!
Lme3
,cache_control)
Cor
Method
Stream
192.168.
1201414:03:54
Ltied
URL
#获取请求头Pragma值
G
6
#获取请求头Cache-Control值
or\
---
## Page 138
通道，可以理解成HTTP的安全版，即HTTP协议下加人SSL层，HTTPS 的安全基础是
8.2.3
为1158个字节，压缩了81%的内容，效果很理想。
理，最后输出压缩后的内容返回给客户端，详细源码如下：
压缩功能，cStringIO 的作用是操作内存文件，读取磁盘文件内容写人内存文件，再做压缩处
缩比最大但处理速度最慢，损耗CPU资源。
的带宽利用率。对于纯文本（html、css、js等）来讲，效果非常显著。Yorserver压缩配置选
览器解压显示，
制，其原理是在文件传输之前，先使用 gzip 压缩后再传输给客户端，客户端接收之后再由浏
升用户体验。目前主流的浏览器都支持客户端解压功能，Yorserver服务器端采用gzip 压缩机
8.2.2
HTTPS（Hyper Text Transfer Protocol over Secure Socket Layer）是以安全为目标的 HTTP
启用HTTP内容压缩，可为我们节省不少带宽成本，并且也可以加快网页访问速度，提
HTTP 内容压缩效果如图 8-6 所示，index2.html 文件原始大小为 6104字节，gzip 压缩后
else:
if gzip=="on":
f=open(DocumentRoot
def compressBuf(buf,_compresslevel):
#HTTP 内容压缩方法，参数buf 为文件内容，
关于实现HTTP 内容压缩的方法，需要加载 gzip、cStringlO 两个模块，gzip实现内容的
compresslevel=9
gzip="on"
# gzip: Enable(on) or Disable(off) gzip options.
[gzip]
HTTP SSL功能
HTTP 压缩功能
compressed_content =f.read()
compressed_content =compressBuf(f.read(),compresslevel)
return zbuf.getvalue()
zfile.close()
zfile.write(buf)
zfile =gzip.GzipFile（mode=
#创建一个 gzip 文件对象
zbuf=cStringIo.StringIo()
import gzip,cStringIo
Linux公社www.linuxidc.com
，这样虽然稍微占用了一些服务器和客户端的CPU资源，但是换来的是更高
#开启gzip选项则调用压缩方法compressBuf（），否则直接读取文件内容
#写入文件压缩内容
self.path)
#返回压缩内容
'wb'
第8章从“零”开发一个轻量级webServer
#创建一个内存流文件对象
_compresslevel为压缩比
111
---
## Page 139
功能，SocketServer负责基础通信。详细源码如下：
私钥privatekey及证书certificate两个选项，具体配置如下：
泛用于互联网上安全敏感的通信，例如电商在线交易支付方面。
SSL，因此加密的详细内容就需要SSL（Secure SocketsLayer，
112第二部分高级篇
class SecureHTTPServer(HTTPServer):
具体的功能实现使用了OpenSSL、SocketServer两个模块，其中OpenSSL负责SSL的
certificate="/usr/local/yorserver/key/server.crt"
privatekey="/usr/local/yorserver/key/app.key"
#configureprivatekeyand certificate pem.
ssl="on"
# ssl: Enable(on) or Disable(off) HTTPs options,port options must configure "443".
port=443
关于Yorserver配置SSL的选项，需要修改监听端口为443，在启用SSL同时需要指定
[ssl]
port: Allows you to bind yorserver's port, http default 80 and Https 443.
al7.2
def
OverviewTimeChartHeaders
Ctx= SSL.Context(SSL.SSLv23_METHOD)
]=lt”
0:0
Cene pege
Linux公社 www.linuxidc.com
init
4.01Tx=nst1onal//N
_(self,server_address,HandlerClass)
图8-6HTTP压缩效果图
ving)
Time
Demo
Sent
Received
hrefe"?"
Mefhod
非
#定义一个SSL连接
n">Emai1”、“”HTML 标签格式化输出，具体实现源码如下：
开启/关闭的方法如下：
对安全级别要求较高的站点，建议还是关闭此功能。Yorserver支持目录列表功能，在配置中
8.2.4
114第二部分高级篇
CGI（CommonGatewayInterface，通用网关接口）实现让一个客户端从网页浏览器向在
Web目录列表很直观地展示了站点目录的结构，普遍应用在文档及下载服务中，当然，
目录列表效果如图 8-8 所示。
def list_directory(self,path):
实现的方法是通过os.listdir(方法获取站点目录（系统绝对路径）列表，通过前端
Indexes="on"
#Indexes: directory list (on/off).
目录列表功能
动态CGI功能
return f
f.seek(0)