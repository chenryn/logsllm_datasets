I am working on finding the version where this broke.
The following input:
    'use strict';
    import * as React from 'react-tools/build/modules/React';
    module.exports = React.createClass({
      render: function(){
        return ;
      }
    });
Should produce:
    'use strict';
    var _interopRequireWildcard = function (obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (typeof obj === 'object' && obj !== null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } };
    var _import = require('react-tools/build/modules/React');
    var React = _interopRequireWildcard(_import);
    module.exports = React.createClass({
      displayName: 'exports',
      render: function render() {
        return React.createElement('div', null);
      }
    });
And it does as of 5.1.13.
However, 5.3.3 produces:
    'use strict';
    function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }
    var _reactToolsBuildModulesReact = require('react-tools/build/modules/React');
    var React = _interopRequireWildcard(_reactToolsBuildModulesReact);
    'use strict';
    module.exports = React.createClass({
      displayName: 'exports',
      render: function render() {
        return React.createElement('div', null);
      }
    });
Note the extra `'use strict';` on line 9.