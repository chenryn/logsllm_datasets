# Evil Printer: How to Hack Windows Machines with the Printing Protocol

## Presenters
- **Zhipeng Huo (@R3dF09)**
  - Senior Security Researcher
  - Member of EcoSec Team at Tencent Security Xuanwu Lab
  - Specializes in Windows and macOS platform security
  - Speaker at Black Hat Europe 2018

- **Chuanda Ding (@FlowerCode_)**
  - Senior Security Researcher
  - Leads EcoSec Team at Tencent Security Xuanwu Lab
  - Specializes in Windows platform security
  - Speaker at Black Hat Europe 2018, DEF CON China 2018, CanSecWest 2017/2016

## Agenda
- Printing Internals
- Attack Surfaces
- CVE-2020-1300
- Exploitation Walk-through
- Patch
- Conclusion

## Introduction
**Evil Printer?**
- [Twitter Link](https://twitter.com/R3dF09/status/1271485928989528064)

## Network Printing Basics
### How Does Network Printing Work?
- **Client**: "Hey, server, print this document."
- **Server**: "Hey, printer, print this."
- **Printer**: "Done!"

### Rendering in Network Printing
- **Client-Side Rendering**:
  - Application Data → Printer Driver → Printer Data
  - Client sends Printer Data to the Server
- **Server-Side Rendering**:
  - Application Data → Printer Driver → Printer Data
  - Client sends Application Data to the Server

### What is a Printer Driver?
- **Rendering Component**: Converts application data into printer-specific data.
- **Configuration Component**: Enables users to configure the printer.
- **Interface Component**: Acts as an interface between the OS and the printer.

### Supporting Both Client-Side and Server-Side Rendering
- **Requirement**: Printer drivers must be available on both the print server and the print client.
- [Microsoft Documentation](https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-prsod/e47fedcc-d422-42a6-89fc-f04eb0c168e3)

### Distribution of Printer Drivers
- **Point-and-Print**: Allows a print client to download printer drivers directly from a print server.
- **Package Point-and-Print**: Allows a print client to download a printer support package that includes the driver.
  - **Security Improvement**: Checks driver signing during the point-and-print connection.
- [Microsoft Documentation](https://docs.microsoft.com/en-us/windows-hardware/drivers/print/point-and-print-with-packages)

## Print Spooler Service
- **Primary Role**: Manages printer drivers, retrieves the correct driver, and loads it.
- **Auto-Start Service**: Always running.
- **Privilege Level**: Runs with SYSTEM privileges.
- **Functions**:
  - Manages the printing process.
  - Exports printing APIs.
  - Implements both print client and server roles.
  - **Dangerous Design**: High privilege level, network capabilities, and dynamic loading of third-party binaries.

### Client-Server Printing Model
- **Print Client**:
  - Applications
  - Print Spooler
  - Printer Driver
  - Print Queue
  - Printing API
- **Print Server**:
  - Print Spooler
  - Printer Driver
  - SMB (Server Message Block)

## Why Target Windows Printing?
- **Legacy System**: Over 25 years old.
- **Critical Service**: Highly integrated with the OS.
- **Complexity**: Very complex and confusing.
- **High Privilege Level**: Operates at the highest privilege level.

### Local Attack Surfaces
- **Services and Components**: Many components run at the highest privilege level.
- **Exposed Surfaces**: Exported to lower privilege levels, including AppContainer.
- **Potential Attacks**: Local Privilege Escalation or Sandbox Escape.

### Remote Attack Surfaces
- **Attack Print Server**: Exposes the system in an unsafe network.
- **Attack Print Client**: May suffer from an unsafe print server (Evil Printer).

## Connecting to a Printer
- **PowerShell**: `Add-Printer –ConnectionName \\printServer\printerName`
- **Win32 Print Spooler API**: `AddPrinterConnection`, `AddPrinterConnection2`
- **GUI**: `printui /im`

### AddPrinterConnection2 Function
- **Function Signature**:
  ```c
  BOOL AddPrinterConnection2(
      _In_ HWND hWnd,
      _In_ LPCTSTR pszName,
      DWORD dwLevel,
      _In_ PVOID pConnectionInfo
  );
  ```
- **Parameters**:
  - `pszName`: Pointer to a null-terminated string specifying the printer name.
  - **Warning Dialog**: Displays a warning if the printer driver is malicious.
  - **CVE-2016-3238**: Windows Print Spooler Remote Code Execution vulnerability.

### AddPrinterConnection2 Internals
- **RPC Call**: `winspool!AddPrinterConnection2` → `spoolsv!RpcAddPrinterConnection2`
- **Error Handling**: `ERROR_PRINTER_DRIVER_DOWNLOAD_NEEDED` (0x00000BB9)
- **Driver Download and Installation**:
  - `winspool!DownloadAndInstallLegacyDriver`
  - `ntprint!PSetupDownloadAndInstallLegacyDriver`
  - `ntprint!DisplayWarningForDownloadDriver`

### Enabling Package Point-and-Print
- **Check for Package Point-and-Print**:
  - `win32spl!TDriverInstall::CheckPackagePointAndPrint`
  - `win32spl!TDriverInstall::DownloadAndImportDriverPackages`

### _DRIVER_INFO_8W Structure
- **Fields**:
  - `cVersion`, `pName`, `pEnvironment`, `pDriverPath`, `pDataFile`, `pConfigFile`, etc.
- **Attributes**:
  - `PRINTER_DRIVER_PACKAGE_AWARE`, `PRINTER_DRIVER_XPS`, `PRINTER_DRIVER_SANDBOX_ENABLED`, etc.

### Driver Package
- **Components**:
  - Device information file (.inf)
  - Catalog file
  - Files copied by .inf file

### Cabinet File
- **Format**: Archive-file format for Microsoft Windows.
- **Decompression APIs**:
  - `Cabinet!FDICreate`
  - `Cabinet!FDICopy`
  - `Cabinet!FDIDestroy`

### Malformed Cabinet
- **Creation**:
  - Use `makecab` to create a cabinet file.
  - Hex edit the cabinet file to create a malformed version.

### Setting Up an Evil Printer
- **Virtual Printer**: Install and share a virtual printer (e.g., CutePDF Writer).
- **Modify Registry**:
  - `HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Control\Print\Environments\Windows x64\Drivers\Version-3\CutePDF Writer v4.0`
  - Set `PrinterDriverAttributes = 1` and `InfPath = "c:\test\test.inf"`
- **Create INF File**: Place `test.cab` in `C:\Windows\System32\spool\drivers\x64\PCC`

### Exploitation
- **Sandbox Escape**:
  - Use `CoCreateInstance` to bind to the printer.
  - `CPrintTicketServerBase::Bind` and `GetPrinterDriver` to escape the sandbox.
- **Patch**:
  - Check for `../` and `..\\` in the path to prevent directory traversal.

### Possible Attack Scenarios
- **Lateral Movement**: Modify a trusted printer.
- **Remote Code Execution**: Connect to an attacker-controlled printer.
- **Privilege Escalation**: Make a printer connection attempt.
- **NT AUTHORITY\SYSTEM**: Execute arbitrary code with the highest privileges.

### CVE-2020-1300
- **Impact**: Can be exploited both locally and remotely.
- **Execution**: Execute arbitrary code and perform a sandbox escape.
- **Privilege**: NT AUTHORITY\SYSTEM

### Conclusion
- **Complexity**: Windows Printing implementation is highly complex.
- **Exploitation**: CVE-2020-1300 can be exploited for local and remote attacks.
- **Recommendation**: Developers should handle cabinet API callbacks carefully.
- **Special Thanks**:
  - James Forshaw (@tiraniddo)
  - Vectra AI
  - Yang Yu (@tombkeeper)

**Thank you!**

- **Tencent Security Xuanwu Lab**
- **@XuanwuLab**
- **xlab.tencent.com**