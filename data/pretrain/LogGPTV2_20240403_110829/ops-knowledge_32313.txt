User: 如何利用Ansible自动化运维任务？请提供一个基础的示例任务，比如安装软件、更新配置等。
Assistant: Ansible是一个开源的自动化运维工具，可以用来管理大规模的基础架构。以下是一个基础的Ansible示例任务：

任务：安装Nginx web服务器

1. 安装Ansible

首先需要在运行Ansible的节点上安装Ansible。可以通过以下命令在Debian/Ubuntu系统上安装：

```
sudo apt-get update
sudo apt-get install ansible
```

2. 配置hosts文件

在安装Nginx之前，需要配置hosts文件以指定Nginx服务器的IP地址。可以用文本编辑器打开hosts文件，并添加以下内容：

```
[webservers]
192.168.0.100
```

在这个例子中，我们在webservers组中列出了一个仅包含一个IP地址的主机，即192.168.0.100。

3. 编写playbook

在Ansible的工作流中，playbook是需要编写的任务脚本。下面的示例playbook将在主机组“webservers”中安装Nginx软件：

```
---
- name: Install Nginx
  hosts: webservers
  become: yes

  tasks:
  - name: Install Nginx
    apt:
      name: nginx
      state: latest
```

这个playbook将安装最新版本的Nginx软件包，只需要在运行时指定主机组即可。

4. 运行playbook

执行此playbook需要使用ansible-playbook命令。以下是执行命令：

```
ansible-playbook nginx.yml
```

执行此命令后，Ansible将连接到“webservers”组中的主机并自动安装Nginx。

这是一个基本的Ansible示例任务，标准化流程是：安装Ansible - 配置hosts文件 - 编写playbook - 运行playbook。通过编写自定义的playbook任务，我们可以自动化运维任务，比如更新配置文件、管理软件包、启动或停止服务等。