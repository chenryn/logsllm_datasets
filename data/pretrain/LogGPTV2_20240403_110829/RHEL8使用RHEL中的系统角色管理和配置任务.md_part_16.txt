:::
::: orderedlist
**流程**
1.  使用以下内容 `playbook.yml`{.literal} 创建新文件：
    ``` screen
    - hosts: all
      vars:
        storage_safe_mode: false
        storage_volumes:
          - name: data
            type: raid
            disks: [sdd, sde, sdf, sdg]
            raid_level: raid0
            raid_chunk_size: 32 KiB
            mount_point: /mnt/data
            state: present
      roles:
        - name: rhel-system-roles.storage
    ```
    ::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 警告 {.title}
    设备名称在某些情况下可能会改变，例如：当您在系统中添加新磁盘时。因此，为了避免数据丢失,我们不建议在
    playbook 中使用特定的磁盘名称。
    :::
2.  可选。验证 playbook 语法。
    ``` screen
    # ansible-playbook --syntax-check playbook.yml
    ```
3.  在清单文件上运行 playbook:
    ``` screen
    # ansible-playbook -i inventory.file /path/to/file/playbook.yml
    ```
:::
::: itemizedlist
**其它资源**
-   有关 RAID 的详情，请参阅[管理
    RAID](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/managing_storage_devices/managing-raid_managing-storage-devices){.link}。
-   有关存储系统角色中使用的参数的详情，请查看
    `/usr/share/ansible/roles/rhel-system-roles.storage/README.md`{.literal}
    文件。
:::
:::
::: section
::: titlepage
# []{#managing-local-storage-using-rhel-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel.html#configuring-lvm-pool-with-raid-using-storage-system-role_managing-local-storage-using-rhel-system-roles}使用存储系统角色使用 RAID 配置 LVM 池 {.title}
:::
通过 `storage`{.literal} 系统角色，您可以使用 Red Hat Ansible Automation
Platform 在 RHEL 上使用 RAID 配置 LVM
池。在本小节中，您将了解如何使用可用参数设置 Ansible
playbook，以配置使用 RAID 的 LVM 池。
::: itemizedlist
**先决条件**
-   您已在要运行 playbook 的系统中安装了 Red Hat Ansible Engine。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    您不必在要部署 `storage`{.literal} 解决方案的系统中安装 Red Hat
    Ansible Automation Platform。
    :::
-   已安装该系统中要运行 playbook 的 `rhel-system-roles`{.literal}
    软件包。
-   您有一个清单文件详细描述了您要使用 `storage`{.literal}
    系统角色配置带有 RAID 的 LVM 池的系统。
:::
::: orderedlist
**流程**
1.  使用以下内容 `playbook.yml`{.literal} 创建新文件：
    ``` screen
    - hosts: all
      vars:
        storage_safe_mode: false
        storage_pools:
          - name: my_pool
            type: lvm
            disks: [sdh, sdi]
            raid_level: raid1
            volumes:
              - name: my_pool
                size: "1 GiB"
                mount_point: "/mnt/app/shared"
                fs_type: xfs
                state: present
      roles:
        - name: rhel-system-roles.storage
    ```
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    要使用具有 RAID 的 LVM 池，您必须使用 `raid_level`{.literal}
    参数指定 RAID 类型。
    :::
2.  可选。验证 playbook 语法。
    ``` screen
    # ansible-playbook --syntax-check playbook.yml
    ```
3.  在清单文件上运行 playbook:
    ``` screen
    # ansible-playbook -i inventory.file /path/to/file/playbook.yml
    ```
:::
::: itemizedlist
**其它资源**
-   有关 RAID 的详情，请参阅[管理
    RAID](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/managing_storage_devices/managing-raid_managing-storage-devices){.link}。
-   有关存储系统角色中使用的参数的详情，请查看
    `/usr/share/ansible/roles/rhel-system-roles.storage/README.md`{.literal}
    文件。
:::
:::
::: section
::: titlepage
# []{#managing-local-storage-using-rhel-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel.html#proc_creating-a-luks-encrypted-volume-using-the-storage-role_managing-local-storage-using-rhel-system-roles}使用存储角色创建 LUKS 加密卷 {.title}
:::
您可以通过运行 Ansible playbook，使用 `storage`{.literal}
角色创建并配置使用 LUKS 加密的卷。
::: itemizedlist
**先决条件**
-   您已在要运行 playbook 的系统中安装了 Red Hat Ansible Engine。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    您不必在要创建卷的系统中安装 Red Hat Ansible Automation Platform。
    :::
-   您已在 Ansible 控制器上安装了 `rhel-system-roles`{.literal} 软件包。
-   您有一个清单文件详细描述了您要使用存储系统角色部署 LUKS
    加密卷的系统。
:::
::: orderedlist
**流程**
1.  使用以下内容 `playbook.yml`{.literal} 创建新文件：
    ``` screen
    - hosts: all
      vars:
        storage_volumes:
          - name: barefs
            type: disk
            disks:
             - sdb
            fs_type: xfs
            fs_label: label-name
            mount_point: /mnt/data
            encryption: true
            encryption_password: your-password
      roles:
       - rhel-system-roles.storage
    ```
2.  可选：验证 playbook 语法：
    ``` screen
    # ansible-playbook --syntax-check playbook.yml
    ```
3.  在清单文件上运行 playbook:
    ``` screen
    # ansible-playbook -i inventory.file /path/to/file/playbook.yml
    ```
:::
::: itemizedlist
**其它资源**
-   [使用 LUKS
    加密块设备](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/managing_storage_devices/encrypting-block-devices-using-luks_managing-storage-devices){.link}
-   `/usr/share/ansible/roles/rhel-system-roles.storage/README.md`{.literal}
    file
:::
::: itemizedlist
**其它资源**
-   如需更多信息，请安装 `rhel-system-roles`{.literal}
    软件包并查看以下目录：
    ::: itemizedlist
    -   `/usr/share/doc/rhel-system-roles/storage/`{.literal}
    -   `/usr/share/ansible/roles/rhel-system-roles.storage/`{.literal}
    :::
:::
:::
:::
[]{#configuring-time-synchronization-using-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel.html}
::: chapter
::: titlepage
# []{#configuring-time-synchronization-using-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel.html#configuring-time-synchronization-using-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel}第 14 章 使用 RHEL 系统角色配置时间同步 {.title}
:::
使用 `timesync`{.literal} RHEL 系统角色，您可以使用 Red Hat Ansible
Automation Platform 在 RHEL 中的多个目标机器上管理时间同步。
::: section
::: titlepage
# []{#configuring-time-synchronization-using-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel.html#the-timesync-system-role_configuring-time-synchronization-using-system-roles}timesync 系统角色 {.title}
:::
您可以使用 `timesync`{.literal} RHEL
系统角色在多个目标机器上管理时间同步。
`timesync`{.literal} 角色安装和配置 NTP 或 PTP 实现，以作为 NTP 客户端或
PTP 副本运行，以便将系统时钟与 PTP 域中的 NTP 服务器或 crimasters 同步。
请注意，使用 `timesync`{.literal} [角色还有助于迁移到
chrony](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_basic_system_settings/index#migrating-to-chrony_using-chrony-to-configure-ntp){.link}，因为您可以在从
RHEL 6 开始的所有 Red Hat Enterprise Linux 版本上使用相同的
playbook，无论系统使用 `ntp`{.literal} 或 `chrony`{.literal} 来实施 NTP
协议。
:::
::: section
::: titlepage
# []{#configuring-time-synchronization-using-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel.html#applying-the-timesync-system-role-for-a-single-pool-of-servers_configuring-time-synchronization-using-system-roles}为单一服务器池应用 timesync 系统角色 {.title}
:::
以下示例演示了如何在只有一个服务器池的情况下应用 `timesync`{.literal}
角色。
::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
### 警告 {.title}
`timesync`{.literal}
角色替换了受管主机上给定或检测到的供应商服务的配置。之前的设置即使没有在角色变量中指定，也会丢失。如果没有定义
`timesync_ntp_provider`{.literal} 变量，唯一保留的设置就是供应商选择。
:::
::: itemizedlist
**先决条件**
-   您已在要运行 playbook 的系统中安装了 Red Hat Ansible Engine。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    您不必在要部署 `timesync`{.literal} 解决方案的系统中安装 Red Hat
    Ansible Automation Platform。
    :::
-   已安装该系统中要运行 playbook 的 `rhel-system-roles`{.literal}
    软件包。
-   您有一个清单文件，其中包含您要在其上部署 `timesync`{.literal}
    系统角色的系统。
:::
::: orderedlist
**流程**
1.  使用以下内容 `playbook.yml`{.literal} 创建新文件：
    ``` screen
    ---
    - hosts: timesync-test
      vars:
        timesync_ntp_servers:
          - hostname: 2.rhel.pool.ntp.org
            pool: yes
            iburst: yes
      roles:
        - rhel-system-roles.timesync
    ```
2.  可选：验证 playbook 语法。
    ``` screen
    # ansible-playbook --syntax-check playbook.yml
    ```
3.  在清单文件上运行 playbook:
    ``` screen
    # ansible-playbook -i inventory_file /path/to/file/playbook.yml
    ```
:::
:::
::: section
::: titlepage
# []{#configuring-time-synchronization-using-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel.html#timesync-system-roles-variables_configuring-time-synchronization-using-system-roles}`Timesync`{.literal} 系统角色变量 {.title}
:::
您可以将以下变量传递给 `timesync`{.literal} 角色：
::: itemizedlist
-   `timesync_ntp_servers`{.literal}:
:::
::: informaltable
  角色变量设置                     描述
  -------------------------------- ------------------------------------------------------------------
  hostname: host.example.com       服务器的主机名或地址
  minpoll: [*number*]{.emphasis}   最小轮询间隔。默认：6
  maxpoll: [*number*]{.emphasis}   最大轮询间隔。默认：10
  iburst: yes                      标志启用快速初始同步。默认： no
  pool: yes                        指示每个主机名解析地址都是一个单独的 NTP 服务器的标志。默认： no
:::
::: itemizedlist
**其它资源**
-   有关 timesync 角色变量的详细参考，安装 rhel-system-roles
    软件包，并参阅 `/usr/share/doc/rhel-system-roles/timesync`{.literal}
    目录中的 README.md 或者 README.html 文件。
:::
:::
:::
[]{#monitoring-performance-using-rhel-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel.html}
::: chapter
::: titlepage
# []{#monitoring-performance-using-rhel-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel.html#monitoring-performance-using-rhel-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel}第 15 章 使用 RHEL 系统角色监控性能 {.title}
:::
作为系统管理员，您可以使用 metrics RHEL 系统角色和任何 Ansible
Automation Platform 控制节点来监控系统的性能。
::: section
::: titlepage
# []{#monitoring-performance-using-rhel-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel.html#introduction-to-the-metrics-role_monitoring-performance-using-rhel-system-roles}指标系统角色简介 {.title}