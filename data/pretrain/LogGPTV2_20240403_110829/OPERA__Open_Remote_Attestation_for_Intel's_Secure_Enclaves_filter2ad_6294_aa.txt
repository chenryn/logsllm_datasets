title:OPERA: Open Remote Attestation for Intel's Secure Enclaves
author:Guoxing Chen and
Yinqian Zhang and
Ten-Hwang Lai
OPERA: Open Remote Attestation for Intel’s Secure Enclaves
Guoxing Chen
The Ohio State University
PI:EMAIL
Yinqian Zhang
The Ohio State University
PI:EMAIL
Ten-Hwang Lai
The Ohio State University
PI:EMAIL
ABSTRACT
Intel Software Guard Extensions (SGX) remote attestation enables
enclaves to authenticate hardware inside which they run, and attest
the integrity of their enclave memory to the remote party. To en-
force direct control of attestation, Intel mandates attestation to be
verified by Intel’s attestation service. This Intel-centric attestation
model, however, neither protects privacy nor performs efficiently
when distributed and frequent attestation is required.
This paper presents OPERA, an Open Platform for Enclave Remote
Attestation. Without involving Intel’s attestation service while con-
ducting attestation, OPERA is unchained from Intel, although it relies
on Intel to establish a chain of trust whose anchor point is the secret
rooted in SGX hardware. OPERA is open, as the implementation of
its attestation service is completely open, allowing any enclave
developer to run her own OPERA service, and its execution is pub-
licly verifiable and hence trustworthy; OPERA is privacy-preserving,
as the attestation service does not learn which enclave is being
attested or when the attestation takes place; OPERA is performant,
as it does not rely on a single-point-of-verification and also reduces
the latency of verification.
CCS CONCEPTS
• Security and privacy → Trusted computing.
KEYWORDS
Trusted execution environments; Intel SGX; remote attestation;
privacy-preserving techniques
ACM Reference Format:
Guoxing Chen, Yinqian Zhang, and Ten-Hwang Lai. 2019. OPERA: Open
Remote Attestation for Intel’s Secure Enclaves. In 2019 ACM SIGSAC Con-
ference on Computer and Communications Security (CCS ’19), November
11–15, 2019, London, United Kingdom. ACM, New York, NY, USA, 15 pages.
https://doi.org/10.1145/3319535.3354220
1 INTRODUCTION
Intel Software Guard Extensions (SGX) enables a userspace process
to create isolated memory regions, called enclaves, within which
the code and data are protected against accesses from the operating
system and other software. Therefore, SGX provides a hardware
foundation for supporting security-critical applications even un-
der the assumption of an untrusted operating system or a rogue
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than ACM
must be honored. Abstracting with credit is permitted. To copy otherwise, or republish,
to post on servers or to redistribute to lists, requires prior specific permission and/or a
fee. Request permissions from permissions@acm.org.
CCS ’19, November 11–15, 2019, London, United Kingdom
© 2019 Association for Computing Machinery.
ACM ISBN 978-1-4503-6747-9/19/11...$15.00
https://doi.org/10.1145/3319535.3354220
Figure 1: Intel’s remote attestation workflow.
system administrator. Due to its unique security properties, both
academia and industry have paid considerable attention to SGX
since its announcement in 2013. So far, various prototype appli-
cations (e.g., [3, 17, 28, 29, 33, 40, 41, 47–49]) and development
frameworks (e.g., [4, 6, 11, 18, 26, 27, 34, 35, 38, 42, 46]) have been
proposed to encourage broader SGX adoption. Recently, SGX has
been integrated into commercial products: Microsoft Azure has
offered SGX platforms in commercial clouds for confidential cloud
computing [31]; a startup company, Fortanix, utilizes SGX to im-
plement hardware security modules and offer runtime encryption
solutions [15].
While confidentiality and integrity of Intel SGX are primarily pro-
vided by a microcode extension of the memory management unit
(MMU) and a hardware Memory Encryption Engine (MEE), remote
attestation also plays a crucial role. Remote attestation is a method
for software to attest the authenticity of its underlying hardware
and the identity of the software to a remote party. Without remote
attestation, the trust between SGX enclaves and their users cannot
be established. In this paper, we study the issues of trust and privacy
of Intel’s attestation model, and then propose an open attestation
platform as an enhancement for the existing infrastructure.
1.1 Intel’s Attestation Service
Intel’s attestation model consists of three entities (as shown in
Fig. 1): (1) Intel’s services, including Intel’s provisioning service
(IPS) and attestation service (IAS); (2) Independent Software Vendor
(ISV)—Intel’s term for enclave developers; (3) and the SGX platforms,
which run Intel signed enclaves (such as quoting enclaves) and the
ISV developed enclave (i.e., IsvE).
Intel SGX adopts the Enhanced Privacy ID (EPID) scheme [10]
for remote attestation. EPID uses a group signature that allows an
Session 10B: TEE IICCS ’19, November 11–15, 2019, London, United Kingdom2317the identity of the enclave to be executed (i.e., MRENCLAVE), and the
identity of the ISV (i.e., SPID) to the SGX platform. As all these data
are included in a quote, they are also collected by IAS as well. The
EPID protocol provides a sense of anonymity for SGX platforms
during attestation. As only the EPID group identity is included in
the quote, neither the ISV nor Intel would learn on which SGX
platform did the enclave run.
1.2 Motivation
Instead of allowing ISVs to verify the attestation quotes by them-
selves, Intel’s quoting enclaves encrypt the quotes with Intel’s own
public key and hence only Intel’s attestation service (IAS) is able to
decrypt the quotes and verify the attestation. As such, every attes-
tation request must go through IAS to be validated. IAS becomes
a trusted third party for ISVs to conduct Internet-based remote
attestation.
However, this Intel-centric remote attestation model has several
limitations. First, this design leaks sensitive information of the ISVs
and enclaves to Intel during verification: (1) which ISV is conducting
attestation (through its service provider ID, or SPID) and possibly
its IP address (through the TLS connection with IAS), (2) which
enclave is being attested (through MRENCLAVE), (3) who signed the
enclave (through MRSIGNER), (4) the content of the 64B attested data
(embedded in the quote). Therefore, applications that utilize SGX
to perform privacy-sensitive computation may be hesitant to use
Intel’s attestation infrastructure. While trusting Intel processors to
preserve the privacy of the computation running atop is acceptable
in practice, trusting an Internet-facing attestation service that can
be compromised by external attackers or rogue insiders would be a
different story.
Second, some SGX applications require distributed and frequent
attestation. For example, in confidential cloud computing [2, 31],
users of these SGX-enabled applications may need to frequently
request remote attestation of the SGX applications running in the
cloud (e.g., especially in the case of microservice functions, since
they are launched and terminated frequently). In privacy-preserving
Blockchains that conceal smart contracts in SGX enclaves [13, 50],
thousands of nodes may need to perform attestation to verify the
computation of others frequently. In these cases, this Intel-centric
Internet-based single-point-of-verification model would be insuf-
ficient to sustain the high volume of attestation requests. In both
examples, moreover, the latency of quote verification (between step
③ to ⑥ in Fig. 1) is too long (as shown in Sec. 5), which negatively
impacts the performance of these applications.
Recognizing these limitations, in December 2018, Intel announced
a third-party attestation solution [32]. However, this solution is
primarily designed as “an on-premise remote attestation capability”
that is used for data centers [20]. We will discuss the limitation of
Intel’s third-party attestation model in Sec. 6.4 when it is used as
an Internet-based attestation service, and also discuss how OPERA
could help address its limitation. In contrast, in this paper, we aim to
design and develop a trusted and publicly verifiable Internet-based
attestation platform that are suited for applications to perform
distributed, frequent, and privacy-preserving attestation.
Figure 2: Information exchanges between entities.
SGX platform to generate a signature without leaking the identity
of the SGX platform. The EPID scheme involves (1) provisioning
the EPID member private key (i.e., attestation key) into the SGX
platform through a provisioning protocol, and (2) using the EPID
member private key to sign the report of the attested enclaves
during attestation.
Provisioning protocol. In the EPID provisioning protocol (step
❶ in Fig. 1), the SGX platform first sends a message to IPS that
contains the Platform Provisioning ID (PPID) and the trusted com-
puting base (TCB) version. Upon receiving the message, IPS verifies
the PPID and selects an EPID group for the SGX platform. Intel’s cur-
rent design assigns SGX platforms with the same CPU type and the
same TCB version the same EPID group. According to Intel’s doc-
umentation [22], each EPID group contains millions of machines.
IPS then sends back the EPID group public key to the SGX platform.
With the group public key, the Intel-signed provisioning enclave
(PvE) runs an EPID join protocol with IPS to acquire an EPID mem-
ber private key, which is sealed in a persistent storage using a seal
key, and thus shared with the Intel-signed quoting enclave (step ❷
in Fig. 1).
EPID-based attestation. The EPID-based remote attestation pro-
cedure is initiated by the attested enclave (step ➀), possibly when
requested by the ISV remotely. The attested enclave transfers 64-
byte attested data (containing a message or a hash value that the
attested enclave would like to associate with the attestation) to
the Intel-signed quoting enclave (QE) using a process called lo-
cal attestation. The quoting enclave generates a data structure,
called a quote, containing the identities of the enclave, including the
measurement-based identity MRENCLAVE and the certificate-based
identity MRSIGNER, the 64-byte attested data, and a signature of the
structure signed with the EPID member private key. The resulting
quote is first encrypted with IAS’s public key (hardcoded in QE)
and then sent back to the ISV (step ➁ and ➂). The ISV forwards
the quote to IAS for verification (step ➃). The verification results
are signed by Intel and encrypted with the ISV’s public key before
returning to the ISV (step ➄). Upon a successful attestation, the ISV
software provisions secrets into the IsvE to perform confidential
computation (step ➅).
Anonymity considerations. Fig. 2 shows the information excha-
nges between entities in Intel’s attestation model. The primary
identifier of an SGX platform is its PPID, which is collected by Intel
during the provisioning protocol. PPID uniquely identifies an SGX
platform. To have the enclave code executed by the SGX platform,
the ISV needs to reveal identity of the enclave signer (i.e., MRSIGNER),
Session 10B: TEE IICCS ’19, November 11–15, 2019, London, United Kingdom23181.3 OPERA
In this paper, we propose an Open Platform for Enclave Remote
Attestation (OPERA) to address the limitations of the Intel-centric
attestation model. It is designed to achieve the following properties:
• Openness. The implementation of OPERA’s attestation service is
completely open; the execution of OPERA is publicly verifiable
and thus is trustworthy. Moreover, any ISV could run its own
OPERA service.
• Privacy. No information regarding the attested enclaves or their
developers is leaked to any party other than the SGX platform
(who already possesses such information by executing these
enclaves).
• Performant. The attestation is verified directly by the ISV soft-
ware or its users, hence eliminating the Internet-based single-
point-of-verification and at the same time reducing the latency
of verification.
The source code of OPERA is open sourced and available on
https://sites.google.com/site/operasgxkb/. We have also discussed
with Intel to launch OPERA as a free open service.
Paper outline. We first outline the design of OPERA in Sec. 2 and
then detail its design in Sec. 3. The security and privacy guarantees
of OPERA are analyzed in Sec. 4. The prototype implementation and
its evaluation are described in Sec. 5. We discuss relevant issues in
Sec. 6 and related work in Sec. 7, and conclude this paper in Sec. 8.
2 AN OPEN ATTESTATION PLATFORM
In this section, we provide a high-level overview of Open Platform
for Enclave Remote Attestation (OPERA), an open remote attestation
platform for SGX enclaves. Details of its design will be provided in
later sections.
2.1 Threat Model
Intel’s services, including IPS and IAS, are trusted to honestly fol-
low the predefined protocols, but may stealthily collect information
of the SGX platforms, the ISVs, and the enclaves being attested,
during the remote attestation. As the root secrets of SGX platforms
are controlled by Intel, we must trust the tech-giant to faithfully
establish a chain of trust to identify SGX platforms and their pro-
tected software. We also assume that there is no backdoor installed
on SGX platforms that could leak any secrets to Intel; firewalls
could effectively prevent connections to Intel servers other than
the provisioning and attestation traffic.
We assume the SGX platforms, including the entire software
stack outside the enclaves, are untrusted, although they are re-
sponsible for launching enclaves, supporting their execution and
external communication. However, we assume that Intel SGX is
secure. Though recently disclosed hardware vulnerabilities have
rendered SGX vulnerable to some speculative execution based at-
tacks [12, 43, 44], we assume the confidentiality of the enclaves
is guaranteed if the CPU microcode is up-to-date. As such, our
remote attestation platform must be able to detect outdated CPU
microcode versions, similar to what is offered by IAS. We assume
the SGX platforms are operated by a party that is not motivated to
collude with Intel.
Figure 3: Design overview
OPERA is also untrusted, because it is an open platform that allows
anyone to participate. However, we assume OPERA can be publicly
verified. The open platform publishes its enclave programs to be
hosted either on the SGX platforms or public servers (which are also
untrusted). We assume the source code and binaries of all OPERA-
provided enclaves can be publicly verified to only perform their
specified execution. The design and verification of these enclaves
is out of scope. We assume these enclaves can be trusted after
performing remote attestation.
Although the primary goal of our design is to preserve the pri-
vacy of enclaves and their ISVs during attestation, our design will
also preserve the anonymity of the SGX platforms to ISVs, so that
ISVs cannot identify on which machine their enclaves are executed
from the attestation signatures.
2.2 Design Overview
Components. The overview of OPERA is illustrated in Fig. 3. The
main functionality of OPERA is handled by two types of enclaves: the
issuing enclaves (IssueE) and the attestation enclaves (AttestE).
An IssueE runs on a publicly-accessible server equipped with an