title:Peer-assisted content distribution in Akamai netsession
author:Mingchen Zhao and
Paarijaat Aditya and
Ang Chen and
Yin Lin and
Andreas Haeberlen and
Peter Druschel and
Bruce M. Maggs and
Bill Wishon and
Miroslav Ponec
Peer-Assisted Content Distribution
in Akamai NetSession
Mingchen Zhao†
Paarijaat Aditya‡
Ang Chen†
Yin Lin(cid:63) (cid:5)
Andreas Haeberlen† Peter Druschel‡ Bruce Maggs(cid:63) (cid:5) Bill Wishon(cid:5) Miroslav Ponec(cid:5)
†University of Pennsylvania ‡MPI-SWS (cid:63)Duke University (cid:5)Akamai Technologies
ABSTRACT
Content distribution systems have traditionally adopted one
of two architectures:
infrastructure-based content deliv-
ery networks (CDNs), in which clients download content
from dedicated, centrally managed servers, and peer-to-
peer CDNs, in which clients download content from each
other. The advantages and disadvantages of each architec-
ture have been studied in great detail. Recently, hybrid,
or “peer-assisted”, CDNs have emerged, which combine ele-
ments from both architectures. The properties of such sys-
tems, however, are not as well understood.
In this paper, we discuss the potential risks and ben-
eﬁts of peer-assisted CDNs, and we study one speciﬁc in-
stance, Akamai’s NetSession system, to examine the im-
pact of these risks and beneﬁts in practice. NetSession
is a mature system that has been operating commercially
since 2010 and currently has more than 25 million users
in 239 countries and territories. Our results show that
NetSession can deliver several of the key beneﬁts of both
infrastructure-based and peer-to-peer CDNs—for instance,
it can oﬀload 70–80% of the traﬃc to the peers with-
out a corresponding loss of performance or reliability—
and that the risks can be managed well.
This sug-
gests that hybrid designs may be an attractive option for
future CDNs.
Categories and Subject Descriptors
C.2.4 [Computer Systems Organization]: Computer-
Communication Networks—Distributed
C.4
[Computer Systems Organization]: Performance of
Systems
Keywords
Content distribution networks, peer-to-peer systems
1.
This paper presents a study of a hybrid CDN called Net-
Session in which most content is delivered by a set of peers
whose operation is coordinated (and backstopped) by a ded-
icated infrastructure. Our study is motivated by the obser-
INTRODUCTION
Systems;
Permission to make digital or hard copies of part or all of this work for personal
or classroom use is granted without fee provided that copies are not made or
distributed for proﬁt or commercial advantage, and that copies bear this notice
and the full citation on the ﬁrst page. Copyrights for third-party components
of this work must be honored. For all other uses, contact the owners/authors.
Copyright is held by the authors/owners.
IMC’13, October 23–25, 2013, Barcelona, Spain.
ACM 978-1-4503-1953-9/13/10. http://dx.doi.org/10.1145/2504730.2504752.
vation that hybrid CDNs seem to have reconciled two ar-
chitectures with very diﬀerent tradeoﬀs: On the one hand,
peer-to-peer systems are inexpensive and easy to scale but
seem to be plagued by security issues and low quality of ser-
vice (QoS); on the other hand, infrastructure-based systems
are expensive to set up and scale but can provide predictable
QoS and reliable accounting, and ensure content integrity.
We felt that the time was ripe to investigate what advan-
tages a hybrid of these approaches might convey.
We ﬁnd, perhaps surprisingly, that NetSession is able to
achieve the “best of both worlds”:
it can oﬀer most of the
beneﬁts of both architectures while avoiding most of the
drawbacks. This is because the strengths of the infrastruc-
ture and the peers complement each other: The infrastruc-
ture provides a central point of coordination that can quickly
match up peers and can add resources when peers cannot
provide adequate QoS; the peers provide resources and scal-
ability, and they extend the “reach” of the infrastructure to
underserved areas.
in particular,
Prior work has identiﬁed several potential concerns about
hybrid CDNs;
it has been suggested that
hybrid CDNs might become a burden to Internet Service
Providers (ISPs) by increasing inter-AS traﬃc [17, 24, 35].
We show that, at least in the case of NetSession, this con-
cern appears to be unfounded. Finally, we report some ob-
servations from the day-to-day operation of the NetSession
system. Among other things, we discover a surprising de-
gree of user mobility in the system, and we describe what
appear to be the eﬀects of cloning and re-imaging client in-
stallations. In summary, this paper makes the following ﬁve
contributions:
• an overview of the hybrid CDN design space, including
a discussion of potential risks and beneﬁts (Section 2);
• a description of NetSession’s design goals and imple-
mentation (Section 3);
• a measurement study that provides an overview of the
scale at which NetSession operates and the types of
content it is used to deliver (Section 4);
• an analysis of whether NetSession meets its design
goals and realizes the potential beneﬁts of hybrid sys-
tems (Section 5); and
• an investigation into whether the risks associated with
hybrid systems, such as undue burdens on ISPs or
problems with untrusted end-user machines, are evi-
denced by NetSession in practice (Section 6).
We discuss related work in Section 7, and present our con-
clusions in Section 8.
312. THE CDN DESIGN SPACE
We begin by sketching the design space for content distri-
bution systems, and discuss the potential risks and beneﬁts
of hybrid designs.
2.1 To Peer or Not To Peer?
Traditionally, CDNs have fallen into two categories: some re-
lied exclusively on a centrally managed infrastructure, while
others operated entirely without one. Akamai’s CDN [10]
is an example of an infrastructure-based CDN: it uses an
infrastructure of more than 137,000 servers in 87 countries
within over 1,150 Internet networks, all owned and operated
by Akamai. BitTorrent [8] is an example of a peer-to-peer
(p2p) CDN: other than the tracker (which serves as an initial
point of contact) and perhaps an initial seeder, it requires no
infrastructure at all; all data is exchanged directly between
the peers. Recent BitTorrent clients have even replaced the
tracker with a distributed hashtable [9], removing the last
remaining infrastructure element.
Infrastructure-based CDNs typically have the bene-
ﬁt of professional administrators and amply provisioned
resources—they can control and authenticate the content
they distribute, and they can achieve high performance and
reliability, but they are also expensive to scale. Peer-to-peer
CDNs must rely on resources contributed by their peers,
which means that their properties are often the exact op-
posite: they require little up-front investment and scale or-
ganically, but can be plagued by spam and low-quality con-
tent, and their quality of service tends to be unpredictable.
Thus, it is natural to ask whether it might not be possible
to achieve the “best of both worlds” in a single system.
2.2 Why decide?
In this paper, we focus on hybrid CDNs that combine ele-
ments from both architectures: like peer-to-peer CDNs, they
achieve scalability by leveraging resources from the client
machines, but, like infrastructure-based CDNs, they also
rely on dedicated, centrally managed elements, such as a
central directory of ﬁle locations and dedicated servers that
provide a backstop of delivery capacity. We refer to such
CDNs as peer-assisted CDNs.
One way to characterize peer-assisted CDN designs is
to look at the role they assign to the infrastructure. For
instance, the infrastructure can provide resources, such as
bandwidth, computation, or storage, which might be used
to improve the quality of service or to keep rarely requested
content available; it can provide coordination by building a
global view of the system, e.g., to recognize attacks, to allo-
cate resources, or to pair up peers with matching NATs; and
it can provide control, e.g., by deciding which content may
be distributed. Thus, there is an entire spectrum of possible
designs, ranging from systems that rely mostly on the peers
and have a very small infrastructure (such as tracker-based
BitTorrent) to systems that rely primarily on the infrastruc-
ture and use the peers only as an optimization.
2.3 Potential beneﬁts
Peer-assisted CDNs have substantial ﬂexibility in dividing
tasks between the peers and the infrastructure. Thus, they
can potentially use each element where it is strongest. The
potential beneﬁts relative to a pure peer-to-peer CDN in-
clude:
Better quality of service: The infrastructure can be used
as a “backstop” for the peers, i.e., it can help out with re-
quests where the peers do not have much bandwidth, or
where there is a lot of churn.
Reduced reliance on peer contributions: The infras-
tructure can absorb the cost of a certain degree of freeload-
ing. Thus, it is not as important to force peers to recipro-
cate, or to “fairly” distribute the workload.
More reliable delivery: The infrastructure can authenti-
cate content; there is no need to rely on heuristics or rep-
utations to recognize content that has been corrupted or
tampered with.
Less legal exposure: The infrastructure can ensure that
all content is properly licensed; thus, peers can safely par-
ticipate in swarming and upload content to others, without
being at risk for accidental violations of the DMCA (and
similar laws).
Better security: The infrastructure can use its global view
to recognize and ﬁght attacks, and it can provide profession-
ally managed servers that can perform trusted functions.
Higher eﬃciency: The infrastructure can maintain a
global view and perform global optimizations, e.g., by
quickly locating copies of a ﬁle, or by matching up peers.
The potential beneﬁts over a pure infrastructure-based
system include:
Lower cost: Content providers can potentially deliver their
data at lower cost (and can pass some of the resulting savings
on to end users). Also, the CDN operator may be able to
oﬀer services to content providers who otherwise may not
be able to aﬀord a CDN.
Global coverage: Finally, in geographic areas with sparse
infrastructure deployment, serving content from peers may
increase the quality of service. Also, ISPs that are not host-
ing CDN servers should see less inter-ISP traﬃc for popular
downloads.
2.4 Potential risks
Peer-assisted CDNs face some of the risks that aﬀect pure
infrastructure based and peer-to-peer architectures, and a
few risks that are unique to them:
Need for revenue: Unlike peer-to-peer CDNs, peer-
assisted CDNs must generate some revenue to defray the
costs of the infrastructure.
Less transparency: Unlike infrastructure CDNs, peer-
assisted CDNs are usually not transparent to users; they
require the installation of software on each client.
Heterogeneity: Unlike most infrastructure CDNs, peer-
assisted CDNs include a heterogeneous population of ma-
chines that are managed by users, with varying capabilities
and complex failure modes.
Multiple administrative domains: Unlike infrastructure
CDNs, peer-assisted CDNs inherently contain machines that
are controlled by diﬀerent parties, many of whom the CDN
operator does not trust.
NATs and ﬁrewalls: Unlike infrastructure CDNs, peer-
assisted CDNs rely on their clients’ upstream links, which
requires traversing a variety of middleboxes that may exist
on the path.
Impact on ISPs: Peers in peer-assisted CDNs send and
receive traﬃc; thus, these systems are creating a diﬀerent
traﬃc pattern, which can aﬀect ISPs’ networks and busi-
nesses.
323. THE NETSESSION SYSTEM
To examine how many of the potential beneﬁts peer-assisted
CDNs can deliver in practice, and how many of their poten-
tial risks they can avoid, we have studied the NetSession
system, a peer-assisted CDN that was originally developed
by RedSwoosh and has been commercially operated by Aka-
mai since 2010. As of October 2012, NetSession has been in
production use for ﬁve years and has almost 26 million users
in 239 countries and territories.
3.1 Design goals
NetSession was designed with the following three high-level
goals in mind:
1. A substantial fraction of the content should be deliv-
ered by the peers.
2. Peer-assisted delivery QoS should be comparable to
that of infrastructure-based delivery; in particular,
(a) downloads should be no less reliable; and
(b) downloads should not be much slower.
3. The system should oﬀer reliable accounting for services
provided.
In other words, the system was meant to combine the key
beneﬁts of peer-to-peer CDNs (scalability) and infrastruc-
ture CDNs (quality of service). The third goal was an op-
erational requirement: Content providers, who pay for the
CDN’s services, expect detailed logs that show the amount
and the quality of the services provided. There were also
two explicit non-goals:
1. The system need not be more reliable than an
infrastructure-based CDN; and
2. Peers need not contribute equally.
The ﬁrst point sets realistic expectations about security; the
second point reﬂects the fact that the system has a large
infrastructure to fall back on, so some proportion of peers
who opt out of serving content to peers would not be a
concern. Serving content reliably and with good QoS is more
important than minimizing load on the infrastructure.
3.2 Architecture
NetSession distributes content via an infrastructure of edge
servers that are operated by Akamai, and a number of user-
operated peers that have special software, the NetSession
Interface (Section 3.4), installed on them.
In addition to
the edge servers, the infrastructure also contains a group
of NetSession-speciﬁc servers called the NetSession control
plane (Section 3.6), which serve as coordinators and perform
accounting, but do not directly serve any content. Figure 1
illustrates the high-level interaction between these compo-