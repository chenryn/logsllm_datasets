### Configuring LDAP Daemons and Search Policies

You can use the `slapconfig` utility to configure the `slapd` and `slurpd` LDAP daemons, as well as related search policies. For more information, refer to the `man slapconfig` page.

### Standard Distribution Tools

These tools are included in the standard LDAP distribution.

#### A Note on Using `ldapsearch`

The `ldapsearch` tool connects to an LDAP server, binds to it, finds entries, and returns their attributes.

By default, `ldapsearch` attempts to connect to the LDAP server using the Simple Authentication and Security Layer (SASL) method. If the server does not support this method, you will see the following error message:
```
ldap_sasl_interactive_bind_s: No such attribute (16)
```
To avoid this, include the `-x` option when running the command. For example:
```
ldapsearch -h 192.168.100.1 -b "dc=example,dc=com" -x
```
The `-x` option forces `ldapsearch` to use simple authentication instead of SASL.

### LDAP Command-Line Utilities

| Program | Description |
|---------|-------------|
| `/usr/bin/ldapadd` | Add entries to the LDAP directory. |
| `/usr/bin/ldapcompare` | Compare a directory entry’s actual attributes with known attributes. |
| `/usr/bin/ldapdelete` | Delete entries from the LDAP directory. |
| `/usr/bin/ldapmodify` | Change an entry’s attributes. |
| `/usr/bin/ldapmodrdn` | Change an entry’s relative distinguished name (RDN). |
| `/usr/bin/ldappasswd` | Set the password for an LDAP user. Apple recommends using `passwd` instead. For more information, refer to `man passwd`. |
| `/usr/bin/ldapsearch` | Search the LDAP directory. See the usage note under “A Note on Using ldapsearch” above. |
| `/usr/bin/ldapwhoami` | Obtain the primary authorization identity associated with a user. |
| `/usr/sbin/slapadd` | Add entries to the LDAP directory. |
| `/usr/sbin/slapcat` | Export LDAP Directory Interchange Format files. |
| `/usr/sbin/slapindex` | Regenerate directory indexes. |
| `/usr/sbin/slappasswd` | Generate user password hashes. |

### Idle Rebinding Options

The following two LDAPv3 plugin parameters are not documented in the Open Directory administration guide. These parameters can be found in, or added to, the file `/Library/Preferences/DirectoryService/DSLDAPv3PlugInConfig.plist`.

- **Delay Rebind**: Specifies how long the LDAP plugin waits before attempting to reconnect to a server that fails to respond. You can increase this value to prevent continuous reconnection attempts.
  - **Parameter**: `Delay Rebind Try in seconds`
  - **Value**: `n` (seconds)

- **Idle Timeout**: Specifies how long the LDAP plugin will remain idle before disconnecting from the server. You can adjust this value to reduce overloading of the server's connections from remote clients.
  - **Parameter**: `Idle Timeout in minutes`
  - **Value**: `n` (minutes)

If these parameters do not already exist in the plist file, you can add them near the `OpenClose Timeout in seconds` parameter.

### Additional Information About LDAP

The LDAP server in Mac OS X Server is based on OpenLDAP. For more information about OpenLDAP, including an administrator’s guide, visit [www.openldap.org](http://www.openldap.org).

### NetInfo

#### Configuring NetInfo

You can use the following command-line utilities to manage the NetInfo directory. For more information about a specific utility, refer to its man page.

- **NeST -setprotocols**: Specify which authentication methods the server’s Open Directory Password Server uses.

#### Working With the Password Server

- **mkpassdb**: Use this utility to create, modify, or back up the password database used by the Mac OS X Server Password Server. For more information, refer to `man mkpassdb`.
- **pwpolicy**: Use this command to view or change the authentication policies used by the Mac OS X Server Password Server. For more information, refer to `man pwpolicy`.

#### Enabling or Disabling Authentication Methods

All password authentication methods supported by the Open Directory Password Server are initially enabled. You can disable and enable these methods using the NeST tool.

- **List available methods**:
  ```
  $ NeST -getprotocols
  ```

- **Disable or enable a method**:
  ```
  $ NeST -setprotocols protocol (on|off)
  ```

### Kerberos and Single Sign-On

The following tools are available for setting up your Kerberos and Single Sign-On environment. For more information on a specific tool, refer to its man page.

- **kdcsetup**: Creates necessary setup files and adds `krb5kdc` and `kadmind` servers for the Apple Open Directory KDC.
- **sso_util**: Sets up, interrogates, and tears down the Kerberos configuration within the Apple Single Sign On environment.
- **kerberosautoconfig**: Creates the `edu.mit.Kerberos` file based on the Open Directory KerberosClient record.

### QuickTime Streaming Server (QTSS) Management

#### Starting QTSS Service

You can use the `serveradmin` command to start the QTSS service, or you can use the `quicktimestreamingserver` command to specify additional service parameters.

- **Start QTSS service**:
  ```
  $ sudo serveradmin start qtss
  ```
  or
  ```
  $ sudo quicktimestreamingserver
  ```

- **View command options**:
  ```
  $ sudo quicktimestreamingserver -h
  ```

#### Stopping QTSS Service

- **Stop QTSS service**:
  ```
  $ sudo serveradmin stop qtss
  ```

#### Checking QTSS Service Status

- **Check if QTSS service is running**:
  ```
  $ sudo serveradmin status qtss
  ```

- **See complete QTSS status**:
  ```
  $ sudo serveradmin fullstatus qtss
  ```

#### Viewing QTSS Settings

- **List all QTSS service settings**:
  ```
  $ sudo serveradmin settings qtss
  ```

- **List a particular setting**:
  ```
  $ sudo serveradmin settings qtss:setting
  ```

- **List a group of settings**:
  You can list a group of settings that have part of their names in common by typing only as much of the name as you want, stopping at a colon (:) and using an asterisk (*) as a wildcard for the remaining parts of the name. For example:
  ```
  $ sudo serveradmin settings qtss:modules:_array_id:QTSSAdminModule:*
  ```

#### Changing QTSS Settings

You can change QTSS service settings using the `serveradmin` command or by editing the QTSS parameter list file directly.

- **Change a setting**:
  ```
  $ sudo serveradmin settings qtss:setting = value
  ```

- **Change several settings**:
  ```
  $ sudo serveradmin settings
  qtss:setting = value
  qtss:setting = value
  qtss:setting = value
  [...]
  Control-D
  ```

- **Descriptions of settings**: To see descriptions of most QTSS settings, look in the sample settings file `/Library/QuickTimeStreaming/Config/streamingserver.xml-sample`. Look for XML module and pref names that match the last two segments of the parameter name.

- **QTSS Statistics**:
  - **statistic**: The value you want to display. Valid values are `v1` (number of connected users, average during sampling period) and `v2` (throughput, bytes/sec).
  - **scale**: The length of time in seconds, ending with the current time, for which you want to see samples. For example, to see 30 minutes of data, specify `qtss:timeScale = 1800`.

- **Value displayed by getHistory**:
  - **Total number of samples listed**
  - **Textual description of the selected statistic** (e.g., "CONNECTIONS" for `v1`, "THROUGHPUT" for `v2`)
  - **Numerical value of the sample** (integer average number of connections for `v1`, integer bytes per second for `v2`)
  - **Time at which the sample was measured** (standard UNIX time, number of seconds since September 1, 1970). Samples are taken every 60 seconds.