### 使用通配符设置RabbitMQ权限

在RabbitMQ中，可以使用 `.*` 通配符来表示所有权限（包括配置、写入和读取）。这种通配符能够匹配任何队列或交换器的名称。通过这种方式，你可以允许某个用户对任何队列或交换器执行配置、写入和读取操作。

例如，如果你想为 `cashing-tier` 用户在 `oakvhost` 上授予权限，使其能够对任何队列或交换器进行读取操作，并且只允许其对名称以 `checks-` 开头的队列和交换器进行写入操作，同时完全禁止配置操作，你需要设置三个正则表达式：

1. `.*` 匹配任何队列和交换器。
2. `""` 不匹配任何队列和交换器（用于拒绝特定权限）。
3. `checks-.*` 匹配名称以 `checks-` 开头的队列和交换器。

将这些规则组合起来，可以使用以下命令设置权限：

```sh
$ ./rabbitmqctl set_permissions -p oak \
  --configure "" \
  --write "checks-.*" \
  --read ".*" \
  cashing-tier
...done.
```

你可以通过 `rabbitmqctl list_permissions` 命令验证权限是否正确设置：

```sh
$ ./rabbitmqctl list_permissions -p oak
Listing permissions in vhost "oak" ...
cashing-tier
configure: ""
write: "checks-.*"
read: ".*"
...done.
```

### 删除和修改权限

如果需要删除用户的权限，可以使用 `clear_permissions` 命令：

```sh
$ ./rabbitmqctl clear_permissions -p oak cashing-tier
Clearing permissions for user "cashing-tier" in vhost "oak" ...
...done.
```

要查看用户在所有虚拟主机上的权限，可以使用 `list_user_permissions` 命令：

```sh
$ ./rabbitmqctl list_user_permissions cashing-tier
Listing permissions for user "cashing-tier" ...
oak
configure: ""
write: "checks-.*"
read: ".*"
sycamore
configure: "all"
write: "all"
read: "all"
...done.
```

### 监控RabbitMQ服务器

了解如何监控RabbitMQ服务器的状态对于确保其正常运行非常重要。你可以使用 `rabbitmqctl` 工具来检查各种状态信息，如队列数量、消息数量等。

#### 查看队列和消息数目

使用 `list_queues` 命令列出队列及其消息数目：

```sh
$ ./rabbitmqctl list_queues
Listing queues ...
msg-inbox-logs 0
msg-inbox-errors 0
all-logs 3
...done.
```

如果需要更详细的信息，可以添加其他选项：

```sh
$ ./rabbitmqctl list_queues name durable auto_delete
Listing queues ...
msg-inbox-logs true false
msg-inbox-errors true false
all-logs true false
...done.
```

#### 查看交换器和绑定

使用 `list_exchanges` 命令列出交换器及其类型：

```sh
$ ./rabbitmqctl list_exchanges
Listing exchanges ...
logs-exchange topic
amq.rabbitmq.log topic
amq.match headers
amq.headers headers
amq.topic topic
amq.direct direct
amq.fanout fanout
direct
...done.
```

如果需要更详细的信息，可以添加其他选项：

```sh
$ ./rabbitmqctl list_exchanges name type durable auto_delete
Listing exchanges ...
logs-exchange topic true false
amq.topic topic true false
amq.direct direct true false
amq.fanout fanout true false
direct true false
...done.
```

通过这些命令，你可以全面地管理和监控RabbitMQ服务器，确保其安全和高效运行。