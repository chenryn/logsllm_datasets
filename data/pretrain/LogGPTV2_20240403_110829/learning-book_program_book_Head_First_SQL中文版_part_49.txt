人。
9.
把操作表chores的所有权限授予所有用户。
10.
立刻就可为Doc设定SELECT权限，权限运
用范围是woodland_cottage数据库中的
所有表。
当前位置
501
---
## Page 534
习题解答
现在，Elsie的行为已经在我们的掌控下。接下来想想GRANT语句对于第499页上
的woodland_cottage数据库会有什么影响。
程序代码
程序代码有何作用？
解答
1
GRANT INSERT ON magic_animals
接予Doc插入（NSERT）内客至
TO doc;
magic_animals表的权限。
2.
GRANT DELETE ON chores
授予Happy 与Sleepy 删除（DELETE）
TO happy, sleepy;
chores表内容的权限。
3.
GRANT DELETE ON chores
TO happy, sleepy
授予Happy与 Sleepy删除（DELETE）choves 表内客
WITH GRANT OPTION;
的权限并可把这个权限接子其他人。
4.
GRANT SELECT(chore_name) ON
让Dopey只能从chores表中选择
chores TO dopey;
(SELECT)chores_name 列
5.
GRANT SELECT, INSERT ON
授予Sneexy选择（SELECT）与插入
talking_animals
（3NSERT）内客至talkins_animals表的权
TO sneezy:
限。
6
GRANT ALL ON talking_animals
授予Bashful选择（SELECT）、更新（UPDATE）、插
TO bashful;
入（JNSERT）、删除（DELETE）talkins_animals表内
的权限。
现在试着写出符合要求的GRANT语句。
7.
GRANT SELECT ON chores TO doc
授予DocSELECT表chores内容的权限。
授予SleepyDELETE表talking
8.
CRANT DELETE ON talkins_animals TO
sleepy WSTH CRANT OPTON.
animals内容的权限，同时也允许Sleepy把
DELETE表talking_animals内容的权限
GRANT其他人。
9.
CRANT ALL ON chotes TO 6ashbul, doc, dopey,
把操作表chores的所有权限授予所有用户。
stumpy. happy. sleepy. sneexy:
10.
CRANT SELECT ON woodland_cottage * TO doc
立刻就可为Doc设定SELECT权限，权限运
用范围是woodland_cottage数据库中的
所有表。
502
第12章
---
## Page 535
安全性
GRANT的各种变化
在刚才的习题中，我们看到了GRANT语句的几种主
要变化形式，整理如下：
可用同一个GRANT语句为多位用户设定权限。
每个提到名称的用户都会被授予相同权限。
WITHGRANTOPTION让用户能把刚刚获得的权限授予其他
用户。
昕起来很复杂，但意思很简单：如果某人获得了SELECT表chores的权
限，他可以把这个权限授予其他人，让他们也能SELECT表chores。
指定用户可于某个表中使用的列，而不是允许用户操作整张
表。
SELECT权限也仅能限于单一列。用户看到的输出将出自指定的列。
一段语句可对表指定超过一种权限。
列出所有要授子用户的表操作权限并以逗号分隔每种权限。
GRANTALL把SELECT、UPDATE、INSERT、DELETE指定表内
容的权限都授予用户了。
这只是“允许用户对某张表执行SELECT、UPDATE、INSERT、
DELETE操作”的缩写方式。
6
使用database_name.*可把权限范围运用到数据库中的
每张表上。
与SELECT语句的通配符（*）相似，代表数据库中的所有表。
当前位置
503
---
## Page 536
REVOKE语句
撤销权限：REVOKE
假设要把授予Elise的SELECT权限收回，此时需要REVOKE语
句。
还记得最简单的GRANT语句吗？REVOKE语句的语法几乎与它
完全相同，只是把“GRANT”换成“REVOKE”，把“TO”换
成“FROM”而已。
撤销SELECT权限。
个
REVOKESELECTON
clown_info
>FROMelsie;
数销时使用FROM，而不是
接予时用的TO。
也可以只撤销WITHGRANTOPTION，但不触及权限。在下面的范
例中，happy与slcepy还能对chores表执行DELETE，但不再能
把删除操作的权限授予其他人：
我们只移除CRANTOPTON权限。
REVOKEGRANTOPTIONON
你敢下手，我就把
DELETE ON chores
你的所有权限撤销一个
FROM happY,sleepy;
用户happy与sleepy还可以进
行DELETE，只是不能把这项权
限分给别人。
504
第12章
---
## Page 537
安全性
撤销授权许可（GRANTOPTION）
再来思考一下这种情况：root用户给了sleepy对chorés表执
行DELETE操作的权限并附有GRANT OPTION，然后sleepy又给
了sneezy对chores表的DELETE权限。
接予对chores表的
授予对chores
DELETE权限（附
root
有CRANTOPTON)
sleepy
表的DELETE权限
sneezy
如果root用户改变心意，撤销了sleepy的权限，则sneezy的该项权限也会被撤销，
即使根用户只是对sleepy撤销了权限。
虽然给sneexy权限
撤销对表chores
的sleepy 没有动作
的DELETE权限
但sneexy的权限也
（附有CRANT
起被数销了
root
OPTJON)
sleepy
sneezy
REVOKE语句的副作用就是让sneezy也一起失去了权限。不
过，有两个关键字可用于控制撤销的范围。
动动赔
我们马上就要与关键字RESTRICT与CASCADE见面
了，你觉得它们分别有什么作用？
当前位置
505
---
## Page 538
更精确的REVOKE
具精确度的撤销操作
有两种方式既可以撤销权限，又可以确保
不影响目标以外的用户。你可以使用关键
字CASCADE与RESTRICT来更精确地锁
定目标用户，决定谁会失去特权，谁能保
接予对chores表的
DELETE权限
接予对chores 表
持特权。
100
（附有CRANT
sleepy
的DELETE权限
sneezy
OPTJON)
第一种方式，使用CASCADE移除目标用户的权限（本例为sleepy）后，如
果目标用户已将该权限授予他人，则连同被授予者的权限一起移除。
REVOKE DELETE ON chOreS FROM SleepY CASCADE;
个
CASCADE表示权限的撒
销具有通锁反应，包括目
标在内的被授权人的权
虽然给sneexy权限
限都全被数销。
撤销接子sleepy的
的sleepy 没有动作
对chores表
但sneexy 的权限也
的DELETE权限（
一起被撒销了
root
附有CRANT
sleepy
sneezy
OPTJON)
若是被撤销权限的目标用户已把权限授予他人，则使用第二种方式，
RESTRICT可返回错误信息。
REVOKE DELETE ON choreS FROM sleepYRESTRICT;
如果有人会受影响，
在REVOKE语句中加
入RESTR3CT.即可收到错
试图拟销给sleepy的
误信息。
对chores表的
但是失败了
因为sneexy金受
root
DELETE权....
sleepy
教销的影响
sneezy
两方的权限都会被保留，root用户则因为权限的修改会影
响sneezy而收到错误提示。
506
第12章
---
## Page 539
安全性
有人一直把错误的权限授予Elsie。请写下合
适的REVOKE语句，让Elsie回到安全的只
有SELECT权限的状态。
GRANT SELECT, INSERT, DELETE ON loCationS TO elsie;
GRANT ALL ON clown_info TO elsie;
GRANT SELECT, INSERT ON activities TO elsie;
GRANT DELETE, SELECT on info_location TO elsie
WITH GRANT OPTION;
GRANT INSERT(location), DELETE ON locations TO elsie;
当前位置
507
---
## Page 540
磨笔上阵解答
解答
有人一直把错误的权限授予Elsie。请写下合
适的REVOKE语句，让Elsie回到安全的只
有SELECT权限的状态。
GRANT SELECT, INSERT, DELETE ON locations TO elsie;
REVOKE JNSERT.UPDATE,DELETE ON locations FROM elsie
GRANT ALL ON clown_info TO elsie;
REVOKE JNSERT.UPDATE.DELETE ON clown_info FROM elsie
我们还是希望Elsie有
SECECT权限，所以不
全一次撤销所有权限。
GRANT SELECT, INSERT ON activities TO elsie;
REVOKE JNSERT ON activities FROM elsie;
另外一种做法则是撤
销所有权限，然后重
GRANT DELETE, SELECT on info_location TO elsie
新授子。
WITH GRANT OPTION;
REVOKE DELETE on ino_location FROMelsie CASCADE
GRANT INSERT(location),DELETE ON locations TO elsie;
REVOKE CRANT JNSERT(location).DELETE ON locations FROM elsie
看起来这里可能要用CRANT来确定EIsie还是能
对location表进行SELECT摄作。
而目，我们最好确认她不会把同样的权限
授予其他人。
508
第12章
---
## Page 541
安全性
没有蠢问题
/没有蠢问题
是让我念念不忘。如果只对表中的某
RDBMS而定，本章的很多问题也一销了sneezy的某个权限，如果有两
一列授予INSERT权限会发生什么事？
样。在MySQL中，可以授予全局权限：
名其他用户授予sneezy同样权限，会
GRANT SELECT ON *,*
发生什么事？
TO elsie;
INSERT实际上是个无用的权限。如果
只能插入某列的值，就无法真正地插
第一个星号代表所有数据库，第二个
些系统在GRANT使用CASCADE时
入一条新记录到表中。除非在那张表
星号表示所有表。
不会注意谁发出了GRANT语句，有
中只有GRANT指定的列必须有内容。
些系统则会忽略。这又是一个要参
用方式，CASCADE是默认值吗？
考RDBMS的说明文格的例子。
答：
CASCADE通常是默认值，不
过，还是请你先参考RDBMS的说明可以使用GRANT与REVOKE？
都浸有用，除非是GRANT语句中与
文档。
SELECT有关的权限。
问：
这两个语句也能用于视图，
如果我对用户根本没有的权但不包括不可更新的视图，此时，就
限下了REVOKE命令，会发生什么算具有INSERT权根，也一样无法插
他可以选取我所有的数据库中的所有
入新数据。因为视图和表几乎一样，
表，有比较简单的设定方法吗？
所以能单独授予视围中的某列操作权
开始就根本没有GRANT！
如票我想让5名用户拥有相同权限，只要在GRANT语句的最后面列出每
位用户的账号并以逗号分隔就可以了吗？
当然可以。如果用户不多，这是最好的方式。
但随着企业成长，数据库开始有不同类型的用户。可能有10位
用户专心于数据录人，他们只需要插人与选择特定表的权限。
可能有3位权限很高的用户，他们需要所有操作权限。另外还
有更多用户只需要SELECT。甚至还会出现连接至数据库的软
件与Web应用程序，它们需要查询特定视图的特殊方式。
当前位置
509
---
## Page 542
为什么共享是坏事
等一下。如果可以分类，那么只要创
建一个捐有各类权限的用户账号，让大
家共享这个账号与密码不就好了吗？
共享账号的问题
虽然有些公司的确在只有一个数据库账号的制度下运作良
好，但这却非安全之道。我们举个很可能出问题的例子：
Randy必须有数据库操作的完整权
限才能完成他的工作。如果共享数
据库账号及密码，数据库将无法拒绝
其他SQL知识不足、较易犯错的用
Simon改变了密码，可是忘了
Paula对于设计更新查询并不
户。
告诉其他人。现在没人有办法
在行，而且常常弄错数据。没人
登录数据库，除非Simon记得
知道是谁一直在弄错数据，所以
告诉大家新密码。
也没人能帮助Paula学习到正确
的方式。
V
shared
account
V
main_database
510
第12章
---
## Page 543
安全性
如累在一群人需要相同权限时，每个人
都有账号并非最佳办法，但共享单一用
户账号也不可行之际，究竞该怎么处理
这个问题？
我们需要授予一群人所需权限，同时又让他们每个
人都有自己的账号的方式。
此时需要角色（role）。角色是把特定权限汇集成组，再把组
权限授予一群人的方式。角色成为一个数据库对象，可于数
据库变动时依需求调整，而不需逐一指定、调整每名用户的权
限。
而且设定角色很简单：
MySQL没有角色
功能
注意！
未来的MySQL版本
CREATE ROLE data entry;
或许会纳入角色功
刀
能，但现在只能用逐一指定每名
我们创建的角色名称
用户权限的方式。
想为角色授予权限时，直接把角色当成用户就好了：
GRANT SELECT, INSERT ON sOme table TO data entry;
本例接子权限时并非接
予用户，而是接予角色。
我们已经创建了角色，也已授予角色权限。现在需
要指定用户的角色.
当前位置
511
---
## Page 544
角色扮演的乐趣
使用角色
在创建角色前，GRANT能直接把权限授予负责
数据的用户，如下所示：
接予（CRANT）对
表talkins_animals 6的
root
SELECT与NSERT
doc
GRANT SELECT,INSERT
权限
ON talking_animals
TO doc;
I
V
以前的方式。
talking.
animalg
Lid
ype
sings
1
puaq aniq
bodger
y
+
2
3
deer
N
N
squirrel
Y
现在只要把授予“哪些操作”权限的部分换成角色名称并指定给
用户（如doc）。我们不需提及权限或表，因为这些信息都已存储
在data_entry角色中：
GRANT data_entry TO doc;
doc
角色名称替换了表名与
权限
GRANTs
V
data_entry
V
root
talking_animals
卸除角色
type
q ang
Y
2
deer
b
不再需要某个角色时，自然也没有保留它的必要，请使用DROP语
3
N
squirrel
人
人
句删除角色：
DROP ROLE data_entry;
512
第12章
---
## Page 545
安全性
存盘问题
没有蠢问题
没有蠢问题
问：
也就是说，曾经拥有某个角色的用户，一旦
需要逐一列出表吗？
其角色被卸除了，他就会失去角色权限？
GRANT SELECT, INSERT, DELETE
然后再撤销同一组权限。只不过，这次不只影响被撤销
ON gregs_list , *
权限的单一用户、而是影响所有指定为那个角色的用
TO jim;
户。
你只需列出数据库名称，并使用“*”把权限指派给所
问：
有表。
用户可以同时身兼多角吗？
答：
可以。但请确认角色间的权限并不冲突，否则
可能自找麻烦。否定性的权限优先于授予性的权限。
请注意用户是否会因此而失去必要权限。
磨笔上阵
撤销角色
撤销角色的运作方式与撤销权限的方式很像。请
试着针对用户doc，写下撤销data_entry角色的语
句，不要参考前面的内容。
当前位置
513
---
## Page 546
WITHADMIN OPTION
磨笔上陈
解答
撤销角色的运作方式与撤销权限的方式很像。请试
着针对用户doc，写下撤销data_entry角色的语句，
不要参考前面的内容。
REVOKE data_entty FROM doc;
加上WITHADMINOPTION的角色
就像GRANT语句可附加WITHGRANTOPTION一样，角色也有提供类
似功能的WITHADMINOPTION。这个选择功能让具有该角色的每名
用户都能把角色授予其他人。以下列语句为例：