title:Software-based Realtime Recovery from Sensor Attacks on Robotic Vehicles
author:Hongjun Choi and
Sayali Kate and
Yousra Aafer and
Xiangyu Zhang and
Dongyan Xu
Software-based Realtime Recovery from Sensor Attacks on Robotic Vehicles
Hongjun Choi1, Sayali Kate1, Yousra Aafer2, Xiangyu Zhang1, and Dongyan Xu1
1Purdue University
2University of Waterloo
1{choi293, skate, xyzhang, dxu}@purdue.edu
PI:EMAIL
Abstract
We present a novel technique to recover robotic vehicles
(RVs) from various sensor attacks with so-called software
sensors. Speciﬁcally, our technique builds a predictive state-
space model based on the generic system identiﬁcation tech-
nique. Sensor measurement prediction based on the state-
space model runs as a software backup of the corresponding
physical sensor. When physical sensors are under attacks, the
corresponding software sensors can isolate and recover the
compromised sensors individually to prevent further damage.
We apply our prototype to various sensor attacks on six RV
systems, including a real quadrotor and a rover. Our evalua-
tion results demonstrate that our technique can practically and
safely recover the vehicle from various attacks on multiple
sensors under different maneuvers, preventing crashes.
1 Introduction
Robotic Vehicles (RVs) are complex cyber-physical systems
(CPS) that continuously change their physical states based
on sensor measurements. Speciﬁcally, various sensors moni-
tor the current system’s physical states and the environment.
Based on the measurements, the control components generate
actuation signals to control the vehicle for stable operations
according to the planned behaviors. RVs, such as drones,
ground rovers, and underwater robots [2, 6, 50], utilize multi-
ple sensors of different types. For example, a gyroscope sen-
sor measures angular velocities, an accelerometer measures
linear accelerations, a GPS provides geographic position in-
formation, and a barometer measures the pressure outside the
vehicle which is used for altitude calculation. Unlike the tradi-
tional cyber attacks, attackers aiming at RVs can compromise
sensor readings through external and physical channels. Since
RVs operate based on sensors, the security of RV sensors has
become a primary requirement and challenge.
Along with the wide deployment of safety-critical RVs,
many physical sensor attacks have been reported recently. For
instance, GPS spooﬁng [51, 54] is a typical physical sensor
attack to deceive GPS receiver by injecting incorrect GPS
signals. Gyroscopic sensor attack on UAV systems through
sound noises [49] can disrupt attitude measurements and lead
to crashes. Attackers can manipulate the measurements of
MEMS accelerometers via analog acoustic signal injection
in a controlled manner [52]. In optical sensor spooﬁng [8],
attackers can acquire an implicit control channel by deceiving
the optical ﬂow sensor of a UAV with a physically altering
ground plane. Attackers in [47] corrupt automobile’s Anti-
lock Braking System (ABS) by injecting magnetic ﬁelds to
wheel speed sensors. In [42], researchers presented remote
attacks on camera and LiDAR systems in a self-driving car by
introducing false signals with a cheap commodity hardware.
These physical sensor attacks pose new challenges because
the traditional techniques to protect software are deﬁcient.
To defend the external attacks, many methods have been
published recently [5, 22, 26, 36, 37, 57]. However, they only
focus on attack detection rather than attack resilience, which
is not a complete solution. A canonical counter-measure for at-
tack recovery is to leverage hardware redundancy [29], where
critical components are multiplicated to provide attack re-
silience. For instance, triple module redundancy (TMR) uses
three sensors to measure the same physical properties and pro-
duces a single output by majority-voting or weighted average.
This approach requires additional cost to deploy and sustain
the redundant hardware. Additionally, an adversary can still
attack multiple sensors as all these sensors are exposed to the
same compromised physical environment.
We propose a novel software sensor recovery technique
for multi-sensor RVs to be resilient to physical sensor attack.
Instead of using duplicated hardware, our approach uses so-
called software sensors as the backup of the corresponding
physical sensors. Our method can recover when multiple sen-
sors of the same kind or different kinds are under attack. Un-
like the transitional physical control systems, the emergence
of computationally powerful CPS allows new opportunities
to deploy more complex software-based control and recov-
ery components. With these advantages, a software sensor
continuously computes and predicts the reading of the corre-
USENIX Association
23rd International Symposium on Research in Attacks, Intrusions and Defenses    349
sponding physical sensor. When an attack is detected on some
physical sensor(s), the corresponding software sensor(s) allow
to isolate and replace the compromised sensors, and recover
the system from corrupted internal states to prevent serious
attack consequences (e.g., crashes and physical damages).
Since our approach is purely software-based, not requiring
any additional hardware (e.g., HW duplication and mechani-
cal shielding), it can be deployed not only at design time but
also to patch existing systems (e.g., legacy systems).
Speciﬁcally, our technique builds a precise state-space
model of the vehicle that allows us to predict its physical
states (i.e., expected physical behaviors). The model is largely
determined by the gravity, control algorithms used, and the
physical characteristics of the vehicle (e.g., motor speciﬁca-
tion, weight and frame shape). We then construct a set of soft-
ware sensors, one for each physical sensor, by transforming
the predicted physical states (i.e. the model output) into the
appropriate sensor readings using the mathematical conver-
sion equations. In practice, the predicted sensor readings tend
to deviate from the real sensor readings due to various reasons.
Therefore, to compensate for the intrinsic errors (conversion,
model, and external errors), we further develop a number of
error correction techniques.
Software sensor readings and physical sensor readings are
continuously monitored and compared. In normal operations,
both readings are almost identical. Substantial discrepancies
indicate that the corresponding physical sensor is under attack.
The compromised sensor is hence replaced with its software
version. Note that software sensors do not interact with the
(compromised) physical environment, thus allowing the vehi-
cle to continue normal operation (for a certain time duration)
in the presence of the attacks.
Contribution. Our contributions are summarized as follows.
• We propose a novel software-based technique, software
sensors, for recovery from various physical and exter-
nal sensor attacks. This is the ﬁrst work on the sensor
recovery for RVs with the software sensors.
• We address a number of prominent challenges, including
how to generate software sensors using system identiﬁca-
tion; how to recover from individual sensor failures; and
how to improve software sensor accuracy considering
external disturbances for practical usage.
• We conduct a set of comprehensive experiments on mul-
tiple RVs, including simulated RVs and two real ones
(a quadrotor and a rover), using various kinds of attacks
on one or multiple sensors. The results show that with
low overhead, our framework can successfully recover
from all the attacks considered for all the RVs, effectively
preventing physical damage to the subject vehicles.
Adversary Model. We target physical sensor attacks that ma-
liciously corrupt sensor signals though external channels. Ad-
ditionally, we assume that the attacker can compromise multi-
ple sensors at the same time with different attack techniques,
Figure 1: Feedback control loop with sensor redundancy
resulting in disrupted sensor readings. The state-of-the-art
attacks (Section 6) can inject both noise or sensor values in
a controlled manner. However, we assume that the attacker
does not have access to the internal states of subject RV, such
as the true sensor readings and the intended navigation plan,
thus cannot generate constant deviation (smaller than any pre-
deﬁned threshold). We argue that this is reasonable for the
following. (1) We target physical attack channels, for exam-
ple, acoustic noise (to attack inertia sensors), under which
achieving ﬁne-grained manipulation is difﬁcult. (2) To ensure
the applied error is consistently smaller than the detection
threshold, the attacker needs to have precise estimation of
the RV internal sensor readings, in the 400Hz (2.5ms) time
unit, which is practically hard by observing external behav-
iors. Note that while the attacker may use external observation
and modeling to estimate RV internal sensor readings when
the RV operates normally and has a predictable navigation
plan, such estimation becomes infeasible when the navigation
plan is not predictable and the RV’s internal states have been
corrupted by the attack itself. Without precise estimation, the
injected error may exceed the threshold and will be detected
by our technique (see Section 4.3 for an example).
We do not consider traditional attacks on software or
ﬁrmware in the cyber domain since those attacks can be effec-
tively handled by existing software security techniques [7,43].
Thus, we assume that our recovery framework – running as
part of the control program – is safe against cyber attack
vectors.
2 Motivation and Background
In this section, we ﬁrst introduce control loop with hardware
redundancy as background. Later, we use an example to illus-
trate the physical sensor attack and recovery with the proposed
approach. This example simulates a sensor spooﬁng attack on
a real quadrotor by artiﬁcially inserting malicious signal data.
2.1 Background
A common control mechanism in RVs shown in Figure 1 is
the feedback-loop control which takes system outputs (i.e.,
current physical state) as the input in the loop. The controller
adjusts its control signal to make the vehicle reach the ref-
erence state over the loop. Most RVs utilize multi-sensor
measurements to obtain a more accurate view of physical
350    23rd International Symposium on Research in Attacks, Intrusions and Defenses
USENIX Association
ΣController-ReferenceActuatorsDisturbance+NoiseOutputSensor FusionS3S2S1InputSignalstate since a single sensor cannot provide reliable data in a
real environment (due to sensor noises, possible sensor fail-
ure, etc.). In quadrotors, multiple redundant or heterogeneous
sensors (e.g., gyroscopes, accelerometers, and GPS) enable
the controller to recognize the current physical state and the
environment, and then accordingly control motor signals for
a stable ﬂight.
Sensor fusion [4] is a very common practice in control engi-
neering. The technique combines multi-sensor data to produce
enhanced results. Figure 1 shows typical sensor fusion with
the triple modular redundancy (TMR). A single physical prop-
erty is measured by multiple sensors, and a fusion algorithm
combines the redundant information to generate a single out-
put with high accuracy in a competitive way (e.g., voting) or
a complementary way (e.g., weighted average). Sensor fusion
is not limited to the same type of sensors. Complex sensor
fusion algorithms (e.g., extended Kalman ﬁlter) often utilize
heterogeneous sensor data to reduce uncertainty and produce
more accurate measurements. Although sensor fusion can
improve accuracy and tolerate failures of a subset of sensors
(of a speciﬁc kind), it is not effective for physical attacks. For
example, the sensor fusion with TMR utilizes the majority
voting technique in which, if any one out of the three sensors
is compromised or faulty, the other two sensors can identify
and mask the faulty one. However, if two sensors (the majority
of the sensors) are compromised at the same time, it is difﬁ-
cult to identify which sensors are problematic, which is the
Byzantine agreement problem [31]. In case of sensor fusion
with the weighted average technique, any single compromised
sensor can signiﬁcantly degrade control performance.
2.2 Motivating Example
that the attacker cannot access the internals of the target sys-
tem, but can know the resonant frequency by investigating the
sensors used by a similar system beforehand.
We illustrate our example in three steps: ﬁrst, we show the
actual crash of the quadrotor under the example attack with
a video; second, we explain the low-level data ﬂow compro-
mised by the attack using a code snippet; and lastly, we demon-
strate how our framework effectively recovers the quadrotor
under the attack with a graph of internal state value changes.
Figure 2 shows the video snapshots of the attack conse-
quence. During the stable ﬂight (the ﬁrst snapshot), the at-
tack, launched from the second snapshot, compromises the
gyroscope sensor measurements of the current angular rate,
corrupts the attitude, and causes a sudden increase in the at-
titude angle. Speciﬁcally, the attack corrupts the roll rate to
0.8 rad/s, and then the controller incorrectly tries to change
the roll rate to -0.8 rad/s, as it "thinks" 0.8 rad/s is the cur-
rent measurement. Subsequently, in the next snapshots, the
quadrotor under the attack turns over and crashes.
// determines vehicle states
angles = read_AHRS();
// generates target values
targets = navigation_logic ();
// generates actuation signal
inputs = attitude_controller ( targets , angles );
// sends signals to actuators
motor . update ( inputs );
1 main_loop() {
2
3
4
5
6
7
8
9
10
11
12
13
14 }
15 read_AHRS() {
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31 }
// read IMU sensor measurements
for(i =0; i  k)
gyros[i] = soft_gyro[i];
// weighted sum
gyro += w[i] * gyros [i ];
}
// return angles
angles = convert2angle ( gyro );
return angles ;
Figure 2: Sequential snapshots from the video of the gyroscope
sensors attack (the full video is available at [11]).
Sensor spooﬁng attack [8, 30, 41, 47, 49, 51–54] is a popu-
lar physical attack on RVs. The adversaries maliciously dis-
rupt sensor measurements by perturbing the physical environ-
ment or directly compromising sensor internals with physical
means. In our example, we use a real commodity quadro-
tor, 3DR Solo. The vehicle is equipped with three Inertia
Measurement Units (IMU), each including a gyroscope, an
accelerometer, and a magnetometer. Among the different sen-
sors, we aim to disrupt multiple gyroscope readings with a
simulated acoustic sensor attack, leading to a physical crash.
In particular, the attacker intentionally injects acoustic noises
at the resonant frequency of the gyroscopes, causing the gyro-
scopes to generate erroneous angular rates. Here, we assume
Figure 3: Control loop and sensor reading monitor
Next, Figure 3 shows the simpliﬁed code snippet in the
quadrotor’s control program. The function main_loop shows
the main control loop, which has a typical feedback control
loop structure [21]. Especially, read_AHRS() shows a fusion
process of gyro sensor readings. It acquires the readings of
the multiple gyro sensors via the sensor hardware interface at
line 19, and consolidates the information by weighted average
at line 26 (various algorithms may use different weights). The