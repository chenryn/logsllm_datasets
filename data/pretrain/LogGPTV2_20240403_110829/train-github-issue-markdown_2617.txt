### Current Behavior
When a form contains two input fields with the same "name" attribute (e.g., "firstName"), Angular binds all validations to both fields. This results in combined validation behavior, which may not be the intended outcome.

### Expected Behavior
I expected Angular to either:
- Throw an error indicating that duplicate "name" attributes are not allowed, or
- Apply the validation rules only to one of the fields, ignoring the other.

### Minimal Reproduction of the Problem with Instructions
1. Go to: [Plunker Example Code](#)
2. The first field has only the "required" attribute. Enter a single character.
3. Observe that the "valid" property remains `false`.
4. Enter two more characters.
5. Notice that the "valid" property becomes `true` because the second field also has a "minlength" validation rule.

### Motivation / Use Case for Changing the Behavior
This behavior is confusing and can be difficult to detect, especially in large forms. It can lead to unexpected validation outcomes, making it hard to debug and maintain the form's integrity.

### Environment
- **Browser:** All (Chrome, Firefox, IE, Safari, Mobile Chrome, Android Web Browser, iOS Safari, iOS UIWebView, iOS WKWebView)
- **Language:** All

By addressing this issue, we can improve the robustness and clarity of form validation in Angular applications.