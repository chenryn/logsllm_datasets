User: 请解答这个和日志有关的问题httpd - virtual hosts go to the same website here is my /etc/httpd/conf.d/test.conf

NameVirtualHost *:80

&lt;VirtualHost *:80&gt;
    ServerName test.dev
    ServerAlias test.dev.*.xip.io
    DocumentRoot /var/www/html/user/test/web
    ErrorLog "/var/www/html/user/test/app/logs/httpd_error.log"
    CustomLog "/var/www/html/user/test/app/logs/httpd_access.log" combined
    &lt;Directory "/var/www/html/user/test/web"&gt;
        # AllowOverride All      # Deprecated
        # Order Allow,Deny       # Deprecated
        # Options All
        # Allow from all         # Deprecated
        # Require all granted    # &lt;&lt; New way of doing it
        Options +FollowSymlinks +Indexes
        AllowOverride all
    &lt;/Directory&gt;
&lt;/VirtualHost&gt;


Accessing http://test.dev.192.168.1.4.xip.io/ successfully redirects me to the proper website. Accessing http://192.168.1.4/ also redirects me to the same website instead of the index that I was expecting to see. Also, accessing http://test.dev-some-random-string.192.168.1.4.xip.io/ will also redirect me to the same website.

How do I configure this so when I try to access test.dev.192.168.1.4.xip.io, I will end up in page I am coding while accessing 192.168.1.4.xip.io will show me the home page.

I am currently using a centos 6 running in a virtual box with a bridged adapter for the network. Here is my /etc/httpd/conf/httpd.conf.

http://pastebin.com/iFBin5Lu

Assistant: If you define only one virtual host, then all requests to httpd will be served by that virtual host, whether or not they match the ServerName or ServerAlias, because the first virtual host is also the default virtual host.  Search for "default virtual host" in the Apache "Name-based Virtual Host Support" documentation.

Note also that once you define any virtual hosts, the default ServerName goes away, and you have to define a new vhost to recreate it if you still want to use it.  See the inset "Main host goes away" at the above link.

So, try defining a default virtual host, which can be as simple as

&lt;VirtualHost *:80&gt;
    DocumentRoot /var/www/html
&lt;/VirtualHost&gt;


and make sure it comes before all of your other virtual hosts in the configuration.  Then any requests that don't match the other virtual hosts will be served by that one.