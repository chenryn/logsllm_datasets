them in bulk, usually over an encrypted connection such as SSH. Due to this,
any approach that relies on properties of individual packets (such as length and
timing) will be unsuccessful.
When SSH is used as the ﬁnal hop in a chain of stepping stones, it presents
unique challenges. In this case, the botmaster uses SSH to log into a stepping
stone, launches a commandline-based IRC client on that host, and uses this IRC
client to connect to his botnet (possibly via more stepping stones). In this capac-
ity, SSH is not acting as a proxy, passing on messages verbatim like psyBNC or
SOCKS. Instead, it transfers the “graphical” screen updates of the running IRC
client, which is not necessarily correlated to the incoming IRC messages. This
situation is challenging for our approach because the application-layer content
is transformed, altering the relative lengths of packets. We are working on this
problem, but we have been unable to explore it in detail. Notice that if SSH is
used in a tunnelling capacity (such as port forwarding or a SOCKS proxy) in
the middle of a stepping stone chain, this limitation does not apply.
Once the botmaster become aware of the ﬂow watermarking tracing approach,
he may want to corrupt the embedded watermark from intermediate stepping
stones. However, since the padding characters could be almost any character and
they are inserted randomly in the botnet message, it would be diﬃcult for any
intermediate stepping stone to identify and remove the padding characters with-
out knowing the original unwatermarked message. The botmaster may be able
to detect and identify the padding if he knows exactly what he is expecting for.
However, once he receives the watermarked message, the watermarked message
has already left the complete trail toward the botmaster. The botmaster could
have intermediate stepping stones to perturb the length of the passing botnet
messages by adding random padding such as white space. Since the watermark
is embedded in the length diﬀerence between randomly chosen packets, the neg-
ative impact of the padding by the adversary tends to cancel each other. We
can further mitigate the negative impact by using redundant pairs of packets
74
D. Ramsbrock, X. Wang, and X. Jiang
to encode the watermark. However, this would increase the number of packets
needed. So this is essentially a tradeoﬀ between the robustness and the eﬃciency.
As previously discussed in Section 2.2, our approach requires at least partial
network coverage of distributed monitoring stations. This is a common require-
ment for network traceback approaches, especially since the coverage does not
need to be global. The accuracy of the trace is directly proportional to the num-
ber and placement of monitoring nodes.
Our work is a signiﬁcant step in the direction of live botmaster traceback, but
as the title implies, it is indeed a ﬁrst step. Our future work in this area includes
the exploration of several topics, including optimal deployment of monitoring
nodes, SSH traﬃc on the last hop, further data collection with longer stepping
stone chains, and traceback experiments on in-the-wild botnets.
6 Related Work
The botnet research ﬁeld is relatively new, but many papers have been published
in the last few years as the botnet threat has accelerated. As one of the ﬁrst in
the botnet arena, the Honeynet Project [1] provided a starting point for future
exploration of the problem. A comprehensive study at Johns Hopkins Univer-
sity [21] constructed a honeypot-based framework for acquiring and analyzing
bot binaries. The framework can automatically generate rogue bots (drones) to
actively inﬁltrate botnets, which is the ﬁrst step in injecting a watermark and
tracing the botmaster.
Most early botnet work focused on deﬁning, understanding, and classifying
botnets. Some examples are papers by Cooke et al. [6], Dagon et al. [7], Ianelli and
Hackworth [17], Barford and Yegneswaran [2], and Holz’s summary in Security
& Privacy [16]. Since then, bot detection has become more of a focal point
and many techniques have been proposed. Binkley and Singh [3] presented an
anomaly-based detection algorithm for IRC-based botnets. Goebel and Holz [11]
reported success with their Rishi tool, which evaluates IRC nicknames for likely
botnet membership. Karasaridis et al. [18] described an ISP-level algorithm for
detecting botnet traﬃc based on analysis of transport-layer summary statistics.
Gu et al. [15] detailed their BotHunter approach, which is based on IDS dialog
correlation techniques. They also published a related paper in 2008 [14] where
they introduce BotSniﬀer, a tool for detecting C&C traﬃc in network traces.
Despite a large amount of literature regarding botnet detection and removal,
relatively little work has been done on ﬁnding and eliminating the root cause:
the botmaster himself. An earlier paper by Freiling et al. [10] describes a manual
method of inﬁltrating a botnet and attempting to locate the botmaster, but the
approach does not scale well due to lack of automation.
In the general traceback ﬁeld, there are two main areas of interest: 1) network-
layer (IP) traceback and 2) tracing approaches resilient to stepping stones. The
advent of the ﬁrst category dates back to the era of fast-spreading worms,
when no stepping stones were used and IP-level traceback was suﬃcient. A
leading paper in this area is Savage et al. [25], which introduced the proba-
bilistic packet marking technique, embedding tracing information an IP header
A First Step towards Live Botmaster Traceback
75
ﬁeld. Two years later, Goodrich [12] expounded on this approach, introducing
“randomize-and-link” with better scalability. A diﬀerent technique for IP trace-
back is the log/hash-based one introduced by Snoeren et al. [26], and enhanced
by Li et al. [19].
There are a number of works on how to trace attack traﬃc across stepping
stones under various conditions. For example, [33,34,8,32,31,4,29,30] used inter-
packet timing to correlate encrypted traﬃc across the stepping stones and/or
low-latency anonymity systems. Most timing-based correlation schemes are pas-
sive, with the exception of the three active methods [31, 29, 30]. Our proposed
method is based on the same active watermarking principle used in these three
works. However, our method diﬀers from them in that it uses the packet length,
in addition to the packet timing, to encode the watermark. As a result, our
method requires much fewer packets than methods [31, 29, 30] to be eﬀective.
7 Conclusion
The key contribution of our work is that it addresses the four major obstacles
in botmaster traceback: 1) stepping stones, 2) encryption, 3) ﬂow mixing and 4)
a low traﬃc volume between bot and botmaster. Our watermarking traceback
approach is resilient to stepping stones and encryption, and it requires only
a small number of packets in order to embed a high-entropy watermark into
a network ﬂow. The watermarked ﬂow can be tracked even when it has been
mixed with randomized chaﬀ traﬃc. Due to these characteristics, our approach
is uniquely suited for real-time tracing of the interactive, low-traﬃc botnet C&C
communication between a bot and its botmaster. We believe that this is the ﬁrst
viable technique for performing live botmaster traceback on the Internet.
We validated our watermarking traceback algorithm both analytically and
experimentally. In trials on public Internet IRC servers, we were able to achieve
virtually a 100 percent TPR with an FPR of less than 10−5. Our method can
successfully trace a watermarked IRC ﬂow from an IRC botnet member to the
botmaster’s true location, even if the watermarked ﬂow 1) is encrypted with
SSL/TLS; 2) passes through several stepping stones; and 3) travels tens of thou-
sands of miles around the world.
Acknowledgments
The authors would like to thank the anonymous reviewers for their insightful com-
ments that helped to improve the presentation of this paper. This work was par-
tially supported by NSF Grants CNS-0524286, CCF-0728771 and CNS-0716376.
References
1. B¨acher, P., Holz, T., K¨otter, M., Wicherski, G.: Know Your Enemy: Tracking
Botnets, March 13 (2005), http://www.honeynet.org/papers/bots/
2. Barford, P., Yegneswaran, V.: An Inside Look at Botnets. In: Proc. Special Work-
shop on Malware Detection, Advances in Info. Security, Springer, Heidelberg (2006)
76
D. Ramsbrock, X. Wang, and X. Jiang
3. Binkley, J., Singh, S.: An Algorithm for Anomaly-based Botnet Detection. In:
Proc. 2nd Workshop on Steps to Reducing Unwanted Traﬃc on the Internet
(SRUTI), San Jose, CA, July 7, 2006, pp. 43–48 (2006)
4. Blum, A., Song, D., Venkataraman, S.: Detection of Interactive Stepping Stones:
Algorithms and Conﬁdence Bounds. In: Jonsson, E., Valdes, A., Almgren, M.
(eds.) RAID 2004. LNCS, vol. 3224, pp. 258–277. Springer, Heidelberg (2004)
5. Chi, Z., Zhao, Z.: Detecting and Blocking Malicious Traﬃc Caused by IRC Pro-
tocol Based Botnets. In: Proc. Network and Parallel Computing (NPC 2007).
Dalian, China, pp. 485–489 (September 2007)
6. Cooke, E., Jahanian, F., McPherson, D.: The Zombie Roundup: Understanding,
Detecting, and Disturbing Botnets. In: Proc. Steps to Reducing Unwanted Traﬃc
on the Internet (SRUTI), Cambridge, MA, July 7, 2005, pp. 39–44 (2005)
7. Dagon, D., Gu, G., Zou, C., Grizzard, J., Dwivedi, S., Lee, W., Lipton, R.: A
Taxonomy of Botnets (unpublished paper, 2005)
8. Donoho, D.L., Flesia, A.G., Shankar, U., Paxson, V., Coit, J., Staniford, S.: Mul-
tiscale Stepping Stone Detection: Detecting Pairs of Jittered Interactive Streams
by Exploiting Maximum Tolerable Delay. In: Wespi, A., Vigna, G., Deri, L. (eds.)
RAID 2002. LNCS, vol. 2516, pp. 17–35. Springer, Heidelberg (2002)
9. Evers, J.: ‘Bot herders’ may have controlled 1.5 million PCs.
http://news.com.com/2102-7350 3-5906896.html?tag=st.util.print
10. Freiling, F., Holz, T., Wicherski, G.: Botnet Tracking: Exploring a Root-Cause
Methodology to Prevent DoS Attacks. In: Proc. 10th European Symposium on
Research in Computer Security (ESORICS), Milan, Italy (September 2005)
11. Goebel, J., Holz, T.: Rishi: Identify Bot Contaminated Hosts by IRC Nickname
Evaluation. In: Proc. First Workshop on Hot Topics in Understanding Botnets
(HotBots), Cambridge, MA, April 10 (2007)
12. Goodrich, M.T.: Eﬃcient Packet Marking for Large-scale IP Traceback. In: Proc.
9th ACM Conference on Computer and Communications Security (CCS 2002),
October 2002, pp. 117–126. ACM, New York (2002)
13. Grizzard, J., Sharma, V., Nunnery, C., Kang, B., Dagon, D.: Peer-to-Peer Botnets:
Overview and Case Study. In: Proc. First Workshop on Hot Topics in Understand-
ing Botnets (HotBots), Cambridge, MA (April 2007)
14. Gu, G., Zhang, J., Lee, W.: BotSniﬀer: Detecting Botnet Command and Control
Channels in Network Traﬃc. In: Proc. 15th Network and Distributed System
Security Symposium (NDSS), San Diego, CA (February 2008)
15. Gu, G., Porras, P., Yegneswaran, V., Fong, M., Lee, W.: BotHunter: Detect-
ing Malware Infection Through IDS-Driven Dialog Correlation. In: Proc. 16th
USENIX Security Symposium, Boston, MA (August 2007)
16. Holz, T.: A Short Visit to the Bot Zoo. Sec. and Privacy 3(3), 76–79 (2005)
17. Ianelli, N., Hackworth, A.: Botnets as a Vehicle for Online Crime. In: Proc. 18th
Annual Forum of Incident Response and Security Teams (FIRST), Baltimore,
MD, June 25-30 (2006)
18. Karasaridis, A., Rexroad, B., Hoein, D.: Wide-Scale Botnet Detection and Char-
acterization. In: Proc. First Workshop on Hot Topics in Understanding Botnets
(HotBots), Cambridge, MA, April 10 (2007)
19. Li, J., Sung, M., Xu, J., Li, L.: Large Scale IP Traceback in High-Speed Internet:
Practical Techniques and Theoretical Foundation. In: Proc. 2004 IEEE Sympo-
sium on Security and Privacy. IEEE, Los Alamitos (2004)
20. Naraine, R.: Is the Botnet Battle Already Lost?
http://www.eweek.com/article2/0,1895,2029720,00.asp
A First Step towards Live Botmaster Traceback
77
21. Rajab, M., Zarfoss, J., Monrose, F., Terzis, A.: A multifaceted approach to un-
derstanding the botnet phenomenon. In: Proc. 6th ACM SIGCOMM on Internet
Measurement, October 25-27, 2006. Rio de Janeiro, Brazil (2006)
22. Roberts, P.F.: California Man Charged with Botnet Oﬀenses,
http://www.eweek.com/article2/0,1759,1881621,00.asp
23. Roberts, P.F.: Botnet Operator Pleads Guilty,
http://www.eweek.com/article2/0,1759,1914833,00.asp
24. Roberts, P.F.: DOJ Indicts Hacker for Hospital Botnet Attack,
http://www.eweek.com/article2/0,1759,1925456,00.asp
25. Savage, S., Wetherall, D., Karlin, A., Anderson, T.: Practical Network Support
for IP Traceback. In: Proc. ACM SIGCOMM 2000, September 2000, pp. 295–306
(2000)
26. Snoeren, A., Patridge, C., Sanchez, L.A., Jones, C.E., Tchakountio, F., Kent,
S.T., Strayer, W.T.: Hash-based IP Traceback. In: Proc. ACM SIGCOMM 2001,
September 2001, pp. 3–14. ACM Press, New York (2001)
27. Symantec. Symantec Internet Security Threat Report – Trends for January 06 -
June 06. Volume X (September 2006)
28. Micro, T.: Taxonomy of Botnet Threats. Trend Micro Enterprise Security Library
(November 2006)
29. Wang, X., Chen, S., Jajodia, S.: Tracking Anonymous, Peer-to-Peer VoIP Calls on
the Internet. In: Proc. 12th ACM Conference on Computer and Communications
Security (CCS 2005) (October 2007)
30. Wang, X., Chen, S., Jajodia, S.: Network Flow Watermarking Attack on Low-
Latency Anonymous Communication Systems. In: Proc. 2007 IEEE Symposium
on Security and Privacy (S&P 2007) (May 2007)
31. Wang, X., Reeves, D.: Robust Correlation of Encrypted Attack Traﬃc Through
Stepping Stones by Manipulation of Interpacket Delays. In: Proc. 10th ACM
Conference on Computer and Communications Security (CCS 2003), October
2003, pp. 20–29. ACM, New York (2003)
32. Wang, X., Reeves, D., Wu, S.: Inter-packet Delay Based Correlation for Tracing
Encrypted Connections Through Stepping Stones. In: Gollmann, D., Karjoth,
G., Waidner, M. (eds.) ESORICS 2002. LNCS, vol. 2502, pp. 244–263. Springer,
Heidelberg (2002)
33. Yoda, K., Etoh, H.: Finding a Connection Chain for Tracing Intruders. In: Cup-
pens, F., Deswarte, Y., Gollmann, D., Waidner, M. (eds.) ESORICS 2000. LNCS,
vol. 1895, pp. 191–205. Springer, Heidelberg (2000)
34. Zhang, Y., Paxson, V.: Detecting Stepping Stones. In: Proc. 9th USENIX Security
Symposium, pp. 171–184. USENIX (2000)