Cabbixagent
MySQL
proc.num[mysqld]
60
90
365
abbixagent
MySQL
MySQL.total-mem-alloc
06
365
abbixagent
MySQL
MySQL.Threads-running
OOE
90
365
agent
MySQL
MySQLThreads-created
300
90
365
MySQL.Threads-connected
300
90
365
Zabbixagent
MysQL
MySQL.Threads-cached
OOE
90
365
Zabbixagent
MySQL
MySQL.thread-hash-memory
300
06
365
Zabbixagent
MySQL
图8-5
206
---
## Page 223
第8章分布式监控
在zabbix_agentd.conf中，设置工作模式为被动模式，即将Server参数设置为
允许连接的Server（能被数据采集的，不一定是Server）IP。
shell# vim /etc/zabbix/zabbix_agentd.conf
### Option:Server
#List of comma delimited IP addresses (or hostnames) of Zabbix ser
vers.
here.
#If IPv6 support is enabled then'127.0.0.1','::127.0.0.1','::ff
ff:127.0.0.1'are treated equally.
#
#Mandatory: no
#Default:
#Server=
Server=127.0.0.1,192.168.0.201
2.Server向Agent请求数据
\n
3.Agent向Server响应数据
4.被动模式的流程
被动模式的流程如下。
①Server打开一个TCP连接。
②Server发送一个key为 agent.ping\n。
③Agent接收到这个请求，然后响应数据1。
④Server对接收到的数据进行处理。
5TCP连接关闭。
8.3.2主动模式
1.主动模式的配置
修改zabbix_agentd.conf中 ServerActive=Server 的IP地址（这里的 Server 也
可以是Proxy、Node的IP地址），即可配置主动模式。注意，修改配置文件后
一
定要重启Zabbix_Agentd服务。
shell# vim /etc/zabbix/zabbix_agentd.conf
##### Active checks related
### Option: ServerActive
#
List of comma delimited IP:port (or hostname:port) pairs of
Zabbix servers for active checks.
207
---
## Page 224
Zabbix企业级分布式监控系统
#
If port is not specified, default port is used.
#
IPv6 addresses must be enclosed in square brackets if port
for that host is specified.
If port is not specified, square brackets for IPv6 addresse
#
s are optional.
#
If this parameter is not specified, active checks are disab
led.
#
Example: ServerActive=127.0.0.1:20051,zabbix.domain,[::1]:
30051,::1, [12fc::1]
#
# Mandatory: no
# Default:
# ServerActive=
ServerActive=127.0.0.1:10051,10.10.10.1:10051
在Items 中，将Items 的检测方式修改为主动模式（默认为被动模式），如图
8-6所示。如果为了提高性能或者环境需要，将所有的Items都设置为主动模式，
可以进行批量修改，选择所有的Items，选择下拉菜单Massupdate，如图8-7所示。
Select FullJoin
Rows Updated
Rows Read
HostPercona MysQL Server Template
Rows Inserted
Name
Unflushed Log
Rows Deleted
Type
Zabbix agent(active)
Key
MySQL.unflushed-log
Mass update
Go (50)
Numenic(float)
图8-6
图8-7
勾选Type，选择Zabbix agent（active）主动模式，如图8-8所示。
单击“Update”按钮，即可执行批量修改，如图8-9所示。
Typezabbix agent (active)
Update
Cancel
SNMP communityOriginal
图8-9
图8-8
查看Items，批量修改成功的结果如图8-10所示。
Key
Interval History
Trends
Iype
MySQL.unflushed-log
300
90
365
Zabbix agent(active)
MySQL.uncheckpointed-bytes
000
90
365
Zabbix agent(active)
proc.num[mysqld]
60
90
365
Zabbix agent(active)
MySQL.total-mem-alloc
300
90
365
Zabbix agent(active)
MySQL.Threads-running
300
06
365
Zabbix agent (active)
MySQL.Threads-created
ODE
06
365
Zabbix agent(active)
MySQL.Threads-connected
000
06
365
Zabbix agent (active)
MvSOl Threads-carhed
300
an
R65
图8-10
208
---
## Page 225
第8章分布式监控
2.Agent向Server请求检测列表
（1）Agent主动向Server发送请求
{
"request":"activechecks",
"host":""
（2）Server进行响应
"response":"success",
"data":[
"key":"log[\/home\/zabbix\/logs\/zabbix_agentd.log]",
"delay":"30",
"lastlogsize":"0"
"key":"agent.version",
"delay":"600"
1
Zabbix-Server 端必须响应成功，才能返回响应数据。对于返回的每个Item,
Key和Delay（间隔的检测时间）必须是存在的，如果Items的类型是Log，则
lastlogsize参数是必须有的。
如果发送的数据失败（例如主机，Items被关闭或删除），Agent不会再重新
发送这些数据。
（3）运行流程
以上运行流程可以表示为如下步骤。
①Agent向Server建立一个TCP的连接。
②Agent 请求需要检测的数据列表。
③Server响应Agent，发送一个Items 列表（itemkey、delay）。
④Agent 响应请求。
③TCP连接完成本次会话后关闭。
③Agent开始周期性地收集数据。
3.Agent发送数据给Server
（1）Agent端发送数据采集周期内的数据给Server端
"request":"agent data",
"data":[
"host":"",
209
---
## Page 226
Zabbix企业级分布式监控系统
"key":"log[\/home\/zabbix\/logs\/zabbix_agentd.log]",
"value":" 13039:20090907:184546.759 zabbix_agentd starte
d. ZABBIx 1.6.6 (revision (7836}).",
"lastlogsize":80,
"c1ock":1252926015
"host":"",
"key":"agent.version",
"value":"1.6.6",
"clock":1252926015
了，
"clock":1252926016
（2）Server端响应
"response":"success",
（3）运行流程
运行流程如下。
①Agent 向 Server 建立一个 TCP 连接。
②Agent发送在采集周期内，需要采集数据给Server。
③Server处理Agent发送的数据。
④TCP连接关闭。
210
---
## Page 227
第9章Zabbix与自动化运维
在Zabbix的自动化中，其网络自动发现、主动注册、LLD等自带的自动化功
能对解决监控自动化运维具有其他软件不可比拟的优势，本章重点介绍这部分内
容。同时，考虑到配置文件的管理，本章对SaltStack自动化配置工具也进行了讲
解，从工具层面展示了自动化运维底层的配置管理。
9.1监控自动化
监控在运维工作中所占的比例为30%左右，监控做得好，会省去很多事情，
让工作能有序地进行。理想的监控应该是自动化的，即只需配置规则，即可完成
所有的工作，比如主机的自动添加和注册、模板的自动添加、分组的自动添加、
出现敌障后能自动处理和自动修复。Zabbix就是具有以上自动化功能的一款监控
软件，它如何实现监控自动化功能呢？
首先，Zabbix提供了网络自动发现功能，该功能可以基于FTP、SSH、Web、
LDAP、POP3、IMAP、SMTP、TCP、SNMP、Telnet、zabbix_agent 等，主动扫
描网络中的这些协议和服务，当这些协议和服务存在的时候，即认为主机和设备
存在，表示该IP存活，而是否添加到监控，是由Actions来决定的。在Zabbix中，
网络发现和自动注册都具有以上提到的功能。
其次，Zabbix提供了对多变的监控项目自动发现监控的功能，例如，Zabbix
自带有两个网卡，再增加两个网卡，新增加的两个网卡如何做到自动监控？再如，
磁盘分区、硬盘设备等，这些量存在不确定的因素，一台服务器可能只有一个硬
盘，也可能有多个，如何去自动监控？如上问题，都可以用Zabbix的Lowlevel
discovery功能轻松完成。即对于监控项中具有相同的属性，但存在部分变量配置
不同的监控项，完成自动添加监控项。
基于Zabbix的这两个功能，我们可以实现以下几点：
·自动添加主机、自动添加模板、自动分组、自动添加监控项、触发器等。
·自动添加监控项中有规律的“变量”。
如上所讨论的，我们可以做到对监控的自动化配置，例如：某公司有20个机
房，每个机房有300台服务器，每台服务器运行一个应用，但是每台服务器的应
用中，有些端口不同，应该怎么实现监控呢？下面将围绕这个问题进行介绍。
---
## Page 228
Zabbix企业级分布式监控系统
9.2网络发现
Zabbix的网络自动发现是一个非常强大的功能，该功能可以完成以下工作。
·快速发现并添加主机。
·简单的管理。
·随着环境的改变而快速搭建监控系统。
网络发现基于以下信息。
·IP地址段。
·基于服务的FTP、SSH、Web、POP3、IMAP、TCP等。
·从Zabbix-Agent接收到的信息。
·从sNMPagent接收到的信息。
网络自动发现功能不能做到的事情是网络拓扑图的发现。
网络自动发现的两个工作流程是：Discovery和Actions。
下面以一个例子来介绍如何配置网络发现。
进入Web 前端，单击Configuration→Discovery→Create discovery rule，如
图9-1所示。
ZABBIX
图9-1
单击Create discoveryrule，输入信息如图9-2所示。
overy rule
Nameserver 10.10.10.0
Discoverybyproxy
Noproxy
IP range
10.10.10.1-254
Delay(in sec)
180
Checks
ICMP ping
Remove
New.
Device uniqueness criteria
IPaddress
Enabled
Save
Clone
Delete
Cancel
图9-2
212
---
## Page 229
第9章Zabbix与自动化运维
图9-2中，各参数的说明如下。
·Name：名称，可以写自己能代表服务功能的名称，便于识别。
·Discoverybyproxy：是否通过代理。
·IPrange：IP地址的范围，可以写一段地址，也可以写多段地址。
·Delay：检测时间周期，默认值是3600，即一小时才能发现服务。
·Checks：检测命令，这里选择ICMP，用Zabbix-Agent来检测。
·Deviceuniqueness criteria：设备唯一的名称，此处采用IP。
·Enabled：发现功能是否激活。
创建自动添加到相应模板的规则，如图9-3所示。
ZABBIX
dpslDlsco
Event sourceDiscovery
图9-3
选择Discovery，弹出如图9-4所示的界面。
NameAuto discoveryservers10.10.10
Default subject
Default message
Enabled
图9-4
Name项填写业务相关的Action名称，如图9-5所示。
nditionsOperations
Tyoe of calculation
AND/OR(A）and(B）and(C）and（D)
Conditions
Lobel Name
(A)
Discoveryrule"server 10.10.10.0"
(B)
(5)
(D)
Servicetype="Zabbix agent”
New conditan
HostIP
192.168.0.1-127,192.
Add
Save
CloneDelete Cancel
图9-5
注意：Discoveryrule是添加前面定义的Discoveryrule项目，如图9-6所示。
213
---
## Page 230
Zabbix企业级分布式监控系统
Discoveryrule
Add
图9-6
Discoveryrule是添加从自动发现规则中发现的主机，包含如图9-5中所配置
的这些规则，会进行下一步操作设置，如图9-7所示。
operatons
Action operationsDetalls
Action
Add to host groups:Linux_servers
Edt Remove
Link to templates:check
Edit Remove
Link to templates:Template OS Linux
EdtRemove
New
Save
CloneDeleteCancel
图9-7
操作中包括以下功能：
·Sending notifications#发送通知
·Adding/removing hosts#增加/移除监控设备
·Enabling/disablinghosts#开启/关闭监控设备
·Adding hosts to a group#增加一个监控设备到组
·Linking hosts to/unlinking from a template#（取消）链接设备到一个模板
·Executing remote scripts
#执行远程脚本
也就是说，当主机发现的时候，在添加主机到监控时，我们可以执行以上操作。
当规则添加完毕后，Zabbix就会启动网络发现进程，并按照设定的扫描规则去
发现设备，如图9-8所示，是网络发现后的主机（在Monitoring→Discovery中查看）。
ZABBIX
10.10.10.510
10:10,10 19
10 0.10:123
101010.126
10.10.1027
10.101010
10 10.31:1.1
图9-8
214
---
## Page 231
第9章Zabbix与自动化运维
可以看到，Zabbix的网络自动发现功能的确很强大。在很短的时间内就可
以自动添加成百上千台机器的监控，其自动添加模板和自动分组的功能更是自
动化运维中的利器。
9.3主动方式的自动注册
9.3.1功能概述
ActiveAgentAuto-Registration（主动注册功能）主要用于Agent主动且自动
向Server注册。与前面的Networkdiscovery具有同样的功能，但是这个功能更适
用于特定的环境，当一个条件未知（这里的未知条件包括Agent端的IP地址段、
Agent端的操作系统版本等信息）时，Agent去请求Server仍然可以实现自动添加
监控的功能。这个功能特别适合于当前云环境下的监控，云环境中，IP分配、操作
系统版本等都可能随机，该功能可以很好地解决类似的问题。
当我们配置一个自动注册功能的时候，需要对/etc/zabbix/zabbix_agentd.conf
做以下设置：
shell# vim/etc/zabbix/zabbix_agentd.conf
ListenIP#此处填写Agent监听的IP地址
ListenPort#此处填写Agent监听的端口
当添加一个新的自动注册机器时，IP地址和端口取的是接收到的数据中的信
息，以此来填写Web中的配置，如图9-9所示。
Agent interfaces
IR-aduress
Connectto
rort
Default
192.168.151.200
web1.itnihao.com
IPDNS
10050
Remov