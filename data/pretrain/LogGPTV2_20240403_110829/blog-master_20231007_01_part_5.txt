   1 | 27269 | 1696682133.4078817 | 2023-10-07 12:35:33.407882+00 | MULTIPOINT M ((119.95768023199354 28.334730961009434 1696682133.4078817)) | MULTIPOINT M ((119.95767862709869 28.33473194042768 1696682133.4078817))  |  0.19117291339615988 |   3.6411401012882836 | 1.8801221191774505e-06 |  1050.9958786735879 | t  
   1 | 28796 | 1696661559.0163007 | 2023-10-07 06:52:39.016301+00 | MULTIPOINT M ((120.58258460621535 29.724324164491893 1696661559.0163007)) | MULTIPOINT M ((120.5825795265706 29.724330529968938 1696661559.0163007))  |   0.8598883846787986 |   0.5121254649445207 |  8.143815087684714e-06 |   546.5198695672347 | t  
   1 | 28971 | 1696654296.5058289 | 2023-10-07 04:51:36.505829+00 | MULTIPOINT M ((121.29741412963867 30.164514163208008 1696654296.5058289)) | MULTIPOINT M ((121.29740996772121 30.16451210648733 1696654296.5058289))  |  0.46120185672994046 |   0.4833689872871863 | 4.6423551933974315e-06 |  141.55215964495375 | t  
   1 | 29769 | 1696686838.9500232 | 2023-10-07 13:53:58.950023+00 | MULTIPOINT M ((120.76697959213256 26.86544181008339 1696686838.9500232))  | MULTIPOINT M ((120.76697445922146 26.865441725833126 1696686838.9500232)) |   0.5101569300567247 |     6.56638108267371 |  5.131834578451469e-06 | 0.21293124586624265 | t  
   1 | 30443 | 1696671045.6869292 | 2023-10-07 09:30:45.686929+00 | MULTIPOINT M ((120.16365948050155 28.830947510591702 1696671045.6869292)) | MULTIPOINT M ((120.16365664744086 28.830950067308 1696671045.6869292))    |    0.395915407400825 |  0.34814817988748564 |  3.816151256001616e-06 |   1208.327302147006 | t  
   1 | 30643 |  1696699507.442408 | 2023-10-07 17:25:07.442408+00 | MULTIPOINT M ((121.25106467376509 30.180538404181128 1696699507.442408))  | MULTIPOINT M ((121.25106838743443 30.18053807917341 1696699507.442408))   |  0.35947784704684865 |   6.6953149552606765 | 3.7278637082682142e-06 |   35.11601924793931 | t  
   1 | 30711 | 1696671505.5776684 | 2023-10-07 09:38:25.577668+00 | MULTIPOINT M ((120.3675394213593 29.650030113601687 1696671505.5776684))  | MULTIPOINT M ((120.3675435494672 29.650023473137658 1696671505.5776684))  |   0.8375916363119341 |   11.244166875028942 |  7.819017536187592e-06 |   4.526707663295202 | t  
   1 | 30852 |  1696696661.781601 | 2023-10-07 16:37:41.781601+00 | MULTIPOINT M ((120.45459506716047 30.323928447505406 1696696661.781601))  | MULTIPOINT M ((120.45459330981092 30.323919897590955 1696696661.781601))  |   0.9627756175720703 |   2.3370886332069976 |   8.72864900615556e-06 |    260.433408187248 | t  
   1 | 32511 | 1696650096.5774534 | 2023-10-07 03:41:36.577453+00 | MULTIPOINT M ((120.69861677012867 28.660078020420073 1696650096.5774534)) | MULTIPOINT M ((120.69861386657008 28.66007871264182 1696650096.5774534))  |   0.2940256577130997 |   2.4657692233379183 | 2.9849327128774415e-06 |  234.06686686028428 | t  
   1 | 35374 | 1696668814.1683435 | 2023-10-07 08:53:34.168344+00 | MULTIPOINT M ((120.29634285128405 28.462983256409547 1696668814.1683435)) | MULTIPOINT M ((120.29634494217493 28.462979387799802 1696668814.1683435)) |   0.4751394131261665 |   3.2769761902178565 |    4.3974953519594e-06 |   585.8570695250128 | t  
   1 | 37280 | 1696670746.3334923 | 2023-10-07 09:25:46.333492+00 | MULTIPOINT M ((121.01733036949851 30.405979702094108 1696670746.3334923)) | MULTIPOINT M ((121.01732855189476 30.405979859119768 1696670746.3334923)) |   0.1755209588559273 |   0.6916806178030206 |  1.824373986854119e-06 |   5.820030977567113 | t  
.....  
   1 | 92786 | 1696647693.9392626 | 2023-10-07 03:01:33.939263+00 | MULTIPOINT M ((121.23145032615521 30.07733795758556 1696647693.9392626))  | MULTIPOINT M ((121.23145316364328 30.077339001048284 1696647693.9392626)) |   0.2970157963216016 |   1.9955025384066218 | 3.0232677754001735e-06 |  1.5522382351805757 | t  
   1 | 92894 | 1696653823.8322117 | 2023-10-07 04:43:43.832212+00 | MULTIPOINT M ((120.50905785198812 29.66615634982832 1696653823.8322117))  | MULTIPOINT M ((120.5090646832996 29.666150256484613 1696653823.8322117))  |   0.9452780998209026 |   2.6750479790209414 |  9.153996579077552e-06 |   268.6419916165105 | t  
   1 | 94012 |  1696668793.713486 | 2023-10-07 08:53:13.713486+00 | MULTIPOINT M ((120.2243147944096 28.32114641244218 1696668793.713486))    | MULTIPOINT M ((120.22431645728058 28.321145614393213 1696668793.713486))  |  0.18551525351534806 |  0.22265847037325914 | 1.8444457025479694e-06 |   73.19416846294136 | t  
   1 | 94490 | 1696661443.6483343 | 2023-10-07 06:50:43.648334+00 | MULTIPOINT M ((119.98443743732514 28.278346144459974 1696661443.6483343)) | MULTIPOINT M ((119.98443171006116 28.278350401619917 1696661443.6483343)) |   0.7336970624152985 |   0.5480052239579389 | 7.1361718794268315e-06 |  1073.5657919499138 | t  
   1 | 95748 |  1696642913.567644 | 2023-10-07 01:41:53.567644+00 | MULTIPOINT M ((120.93007260280609 29.93665248905182 1696642913.567644))   | MULTIPOINT M ((120.93006480171415 29.936656468375393 1696642913.567644))  |     0.87284310410174 |   0.6987031737878059 |  8.756967239998214e-06 |   238.4298906455575 | t  
   1 | 96224 | 1696685404.5064683 | 2023-10-07 13:30:04.506468+00 | MULTIPOINT M ((121.34163029847866 30.330739655340032 1696685404.5064683)) | MULTIPOINT M ((121.34163436575774 30.330739893798075 1696685404.5064683)) |   0.3920210862680823 |  0.23594007861706245 | 4.0742632857507065e-06 |   2.284967046119032 | t  
   1 | 96675 |  1696649382.526684 | 2023-10-07 03:29:42.526684+00 | MULTIPOINT M ((121.17474468027332 29.41541323321169 1696649382.526684))   | MULTIPOINT M ((121.1747448241157 29.415413240849436 1696649382.526684))   |  0.01398508650050752 |  0.13768925799949278 | 1.4394098215803466e-07 |  120.80068698463104 | t  
   1 | 98639 | 1696660048.1699793 | 2023-10-07 06:27:28.169979+00 | MULTIPOINT M ((121.0546212370197 29.819232673811914 1696660048.1699793))  | MULTIPOINT M ((121.05462436430687 29.819231131689655 1696660048.1699793)) |   0.3472725872027416 |   3.1531459413645355 | 3.4868350545280815e-06 |  265.99258450437304 | t  
(107 rows)  
```  
得到了107条数据, 在以上接触过受害人的人中, 进行盘查.  缩小范围.    
2 如果信息还不够, 可以将时间拉长, 例如查看2天, 3天, 7天内接触过受害人的人, 进行盘查.  缩小范围.    
3 嫌疑人特征库     
已经上过嫌疑人名单的旧犯(users_class1表), 以及:    
- 案件盘查后的可疑人。(例如近期与受害人有过接触的可疑对象, 有过节的可疑对象, 身边最近有异样的人等 ...)     
4 数据对撞1      
取1,2,3步得到的UID的交集, 锁定最可疑对象.    
如果没有交集, 可能有很多原因, 例如嫌疑人或受害人的GIS信息不完整, 嫌疑人不在特征库内, 嫌疑人通过其他方式与受害人联系(而不是近距离接触) ...   
#### 对照  
传统数据库对GIS支持不够完善, 例如类型不够完善, 索引不够完善, GIS类型的数据处理不够完善(例如可能不支持 轨迹相似伴随|时态分析).    
PolarDB|PostgreSQL 具有非常完善的GIS功能, 从支持GIS丰富的数据类型, GIS索引, GIS排序(例如按距离远近排序)加速, 到丰富的GIS类型运算函数等.   
- https://postgis.net/docs/manual-3.4/    
商业版的PolarDB通过Ganos对GIS的功能进行了进一步增强, 有兴趣的同学可以继续研究ganos.  
- https://help.aliyun.com/zh/polardb/polardb-for-postgresql/spatio-temporal-database/  
## 知识点     
GIS类型  
GIS索引  
GIS索引支持的操作符, ops, order by operator等.  
GIS数据相关运算函数、运算符等  
ganos (阿里云增强gis插件)   
## 思考      
阅读PostGIS手册, GIS还能用在哪些应用场景?    
- 营销、刑侦、...    
对于GIS类型, gist,sp-gist,brin 索引的选择原则是什么?     
索引空间搜索为什么会有内部recheck, 和bound boxy有什么关系, 如何解决IO和cpu放大性能问题?   
- [《一起学PolarDB - 第20期 - 为什么GIS时空查询即耗CPU又费IO?》](../202201/20220120_01.md)    
- [《PostgreSQL 推荐系统优化总计 - 空间、时间、标量等混合多模查询场景, 大量已读过滤导致CPU IO剧增(类挖矿概率下降优化)》](../202006/20200612_01.md)    
- [《推荐系统, 已阅读过滤, 大量CPU和IO浪费的优化思路2 - partial index - hash 分片， 降低过滤量》](../202006/20200610_02.md)    
- [《Recheck Cond filter IO\CPU放大 原理与优化CASE - 含 超级大表 不包含(反选) SQL优化》](../201712/20171207_02.md)    
- [《PostgreSQL multipolygon 空间索引查询过滤精简优化 - IO，CPU放大优化》](../201711/20171122_03.md)    
- [《PostgreSQL 空间st_contains，st_within空间包含搜索优化 - 降IO和降CPU(bound box) (多边形GiST优化)》](../201710/20171004_01.md)    
相似轨迹是否可以用向量距离计算得到?     
- pgvector   
ganos GIS增强版有哪些特性? 应该和场景如何结合, 提高侦查效率?    
- 相似轨迹, 伴随时长计算, 停留位置(轨迹驻点识别), 速度曲线计算等.    
为什么要用轨迹分析, 为什么不直接使用点进行分析?  
- 点是静态的, 无法计算速度, 而且点的时间可能不一致. 无法简单点进行交叉运算. 轨迹虽然也是点组成, 但是可以运算(模拟)时间、速度、驻留时间等.     
计算距离的GIS函数返回的单位是什么? 单位和什么有关? 有哪些坐标系? 选择坐标系的原则是什么?    
什么是球坐标系? 什么是投影坐标系?  
投影坐标系的边界问题如何解决? 为什么你所处的地域不能选择某些投影坐标系?     
## 参考  
- https://postgis.net/docs/manual-3.4/  
- https://postgis.net/docs/manual-3.4/ST_ClosestPointOfApproach.html  
- https://help.aliyun.com/zh/polardb/polardb-for-postgresql/spatio-temporal-database/  
- [《PostgreSQL 应用开发解决方案最佳实践系列课程 - 6. 时空、时态、时序、日志等轨迹系统》](../202105/20210509_01.md)    
- [《PostgreSQL + PostGIS 时态分析》](../201806/20180607_01.md)    
- [《Greenplum 轨迹相似(伴随分析)》](../201806/20180607_02.md)    
- [《沉浸式学习PostgreSQL|PolarDB 14: 共享单车、徒步、旅游、网约车轨迹查询》](../202309/20230908_01.md)    
- [《PolarDB 开源版 轨迹应用实践 - 出行、配送、快递等业务的调度; 传染溯源; 刑侦》](../202212/20221229_01.md)    
- [《使用 PolarDB 开源版 部署 PostGIS 支撑时空轨迹|地理信息|路由等业务》](../202212/20221223_02.md)    
- [《重新发现PostgreSQL之美 - 11 时空轨迹系统 新冠&刑侦&预测》](../202106/20210602_01.md)    
- [《重新发现PostgreSQL之美 - 8 轨迹业务IO杀手克星index include(覆盖索引)》](../202105/20210530_02.md)    
- [《PostgreSQL 应用开发解决方案最佳实践系列课程 - 6. 时空、时态、时序、日志等轨迹系统》](../202105/20210509_01.md)    
- [《使用Postgres，MobilityDB和Citus大规模(百亿级)实时分析GPS轨迹》](../202011/20201117_01.md)    
- [《PostgreSQL index include - 类聚簇表与应用(append only, IoT时空轨迹, 离散多行扫描与返回)》](../201905/20190503_03.md)    
- [《PostgreSQL IoT，车联网 - 实时轨迹、行程实践 2 - (含index only scan类聚簇表效果)》](../201812/20181209_01.md)    
- [《PostgreSQL IoT，车联网 - 实时轨迹、行程实践 1》](../201812/20181207_01.md)    
- [《PostgreSQL pipelinedb 流计算插件 - IoT应用 - 实时轨迹聚合》](../201811/20181101_02.md)    
- [《Greenplum 轨迹相似(伴随分析)》](../201806/20180607_02.md)    
- [《PostgreSQL 实时位置跟踪+轨迹分析系统实践 - 单机顶千亿轨迹/天》](../201712/20171231_01.md)    
- [《GIS术语 - POI、AOI、LOI、路径、轨迹》](../201712/20171204_01.md)    
- [《菜鸟末端轨迹 - 电子围栏(解密支撑每天251亿个包裹的数据库) - 阿里云RDS PostgreSQL最佳实践》](../201708/20170803_01.md)    
- [《车联网案例，轨迹清洗 - 阿里云RDS PostgreSQL最佳实践 - 窗口函数》](../201707/20170722_02.md)    
- [《PostgreSQL 物流轨迹系统数据库需求分析与设计 - 包裹侠实时跟踪与召回》](../201704/20170418_01.md)    
- [《PostgreSQL 聚集存储 与 BRIN索引 - 高并发行为、轨迹类大吞吐数据查询场景解说》](../201702/20170219_01.md)    
- [《PostgreSQL 如何轻松搞定行驶、运动轨迹合并和切分》](../201606/20160611_02.md)    
- [《海量用户实时定位和圈人 - 团圆社会公益系统(位置寻人\圈人)》](../201709/20170915_01.md)    
#### [期望 PostgreSQL|开源PolarDB 增加什么功能?](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
#### [PolarDB 云原生分布式开源数据库](https://github.com/ApsaraDB "57258f76c37864c6e6d23383d05714ea")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、内核开发公开课、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [PostgreSQL 解决方案集合](../201706/20170601_02.md "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")