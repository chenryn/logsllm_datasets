high due to some outliers, however, as over 92.3% of the minimized test cases
perform fewer than six MMIO read/write operations.
4 Evaluation
The conﬁguration used for all evaluations is a cloud-based 8-core 2.0 GHz Intel
Xeon E5-2650 CPU instance with 8 GB of RAM. Each instance uses a minimal
server installation of Ubuntu 14.04 Linux as its OS. Eight cloud instances were
utilized in parallel. Each device was fuzzed within a single cloud instance, with
one master fuzzer process and ﬁve slave fuzzer processes performing the testing.
A similar conﬁguration was used for test case minimization: each cloud instance
ran six minimizer processes in parallel to reduce each crash/hang test case.
We selected a set of eighteen virtual devices, shown in Table 2, for our evalu-
ation of VDF. These virtual devices utilize a wide variety of hardware features,
such as timers, interrupts, and DMA. Each of these devices provides one or
more MMIO interfaces to their control registers, which VDF’s fuzzing acceler-
ator interacts with. All devices were evaluated using QEMU v2.5.05, with the
exception of the TPM device. The TPM was evaluated using QEMU v2.2.50
with an applied patchset that provides a libtpms emulation [20] of the TPM
5 US government approval for the engineering and public release of the research shown
in this paper required a time frame of approximately one year. The versions of QEMU
identiﬁed for this study were originally selected at the start of that process.
18
A. Henderson et al.
Table 2. QEMU virtual devices tested with VDF.
Branches
of interest
Initial
coverage
Final
coverage
Crashes
found
Hangs
found
Tests per
instance
Test
duration
164
109
165
273
311
370
91
213
524
240
332
145
487
349
486
238
16
76
43.9%
5.5%
50.9%
43.6%
26.7%
44.9%
30.8%
2.3%
13.9%
15.8%
53.0%
56.0%
72.7%
58.6%
81.0%
70.5%
42.9%
44.6%
27.5%
75.4%
13.9%
81.6%
39.3%
11.5%
12.9%
18.3%
26.1%
87.5%
43.4%
71.7%
36.1%
63.0%
90.5%
67.3%
100.0%
68.4%
87
0
0
238
0
0
0
0
0
0
0
0
0
0
14
9
0
0
0
0
0
0
0
0
0
0
0
0
24.0 M
29.3 M
30.8 M
23.1 M
26.7 M
21.0 M
14.6 M
33.0 M
24.9 M
25.7 M
59d 18 h
65d 12 h
69d 18 h
59d 12 h
58d 13 h
57d 15 h
25d 12 h
62d 12 h
65d 6 h
62d 12 h
384
23.9 M
61d
0
0
6
265
11
0
0
25.2 M
25.0 M
24.2 M
24.0 M
2.1M
0.3 M
2.1 M
58d 13 h
58d 13 h
58d 12 h
62d
36d 12 h
8 h
26 h
Device class Device
Audio
AC97
Block
Char
IDE
Network
CS4231a
ES1370
Intel-HDA
SoundBlaster
16
Floppy
Parallel
Serial
IDE Core
EEPro100
(i82550)
E1000
(82544GC)
NE2000 (PCI)
PCNET (PCI)
RTL8139
SD Card
SD HCI
TPM
TPM
Watchdog
IB700
I6300ESB
hardware device [23]. Fewer than 1000 LOC were added to each of these two
QEMU codebases to implement both the fuzzer accelerator and any recording
instrumentation necessary within each tested virtual device.
VDF discovered noteworthy bugs in six virtual devices within the evaluation
set, including a known denial-of-service CVE [7] and a new, previously undis-
covered denial-of-service CVE [8]. Additional bugs were discovered relating to
memory management and thread-race conditions, underscoring VDF’s ability to
discover bugs of a variety of natures utilizing the same techniques and principles.
4.1 Virtual Device Coverage and Bug Discovery
During our testing with VDF, we collected four metrics to aid in our under-
standing of both the speed and magnitude of VDF’s coverage. These metrics
are (1) the number of branches covered by the initial seed test case; (2) the
total number of branches in the virtual device; (3) the current total number
of branches covered (updated at one minute intervals); and (4) the percentage
of total bugs discovered during each cumulative day of testing. Taken together,
these metrics describe not only the total amount of coverage provided by VDF,
but also the speed at which coverage improves via fuzzing and how quickly it
discovers crash/hangs.
Figure 6 shows the average percentage of covered branches over cumulative
testing time. Of the eighteen tested virtual devices, 30.15% of the total branches
were covered by the initial seed test cases. After nine cumulative days of test-
ing (36 h of parallel testing with one master and ﬁve slave fuzzing instances),
VDF: Targeted Evolutionary Fuzz Testing of Virtual Devices
19
62.32% of the total branches were covered. The largest increase in average cov-
erage was seen during the ﬁrst six cumulative hours of testing, where cover-
age increased from the initial 30.15% to 52.84%. After 2.25 days of cumulative
testing, average coverage slows considerably and only 0.43% more of the total
branches are discovered during the next 6.75 cumulative days of testing. While
eleven of the eighteen tested devices stopped discovering new branches after only
one day of cumulative testing, six of the seven remaining devices continued to
discover additional branches until 6.5 cumulative days had elapsed. Only in the
serial device were additional branches discovered after nine cumulative days.
d
e
r
e
v
o
C
s
e
h
c
n
a
r
B
l
a
t
o
T
f
o
%
g
v
A
70%
60%
50%
40%
30%
20%
10%
0%
0
1
2
3
4
5
6
7
8
9
10
Cumulative Days of Fuzz Testing 
d
n
u
o
F
s
g
n
a
H
/
s
e
h
s
a
r
C
l
a
t
o
T
f
o
%
g
v
A
100.00%
90.00%
80.00%
70.00%
60.00%