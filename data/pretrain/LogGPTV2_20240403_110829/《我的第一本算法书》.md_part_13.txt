nternet
f05
B
未被篡改。
B 确认收到的密文并
文是否被篡改过。
B 需要确认收到的密
---
## Page 162
行了篡改。
假设在A向B发送密文和MAC时，X对密文进
最终B成功取得了A发送过来的商品编号abc。
接下来，B只需使用密钥对密文进行解密即可。
机
8
现和收到的MAC不一致。
B使用该密文计算MAC，得到的值是b85c，发
情况呢？让我们回到A正要向B发送密文的时候。
X在通信过程中对密文进行了篡改是怎样一种
15
工
49
消息认证码
518
---
## Page 163
150
安全算法
第5章
提出再次发送的请求。
由此，B意识到密文或者MAC，甚至两者都可能遭到了篡改。于是B废弃了收到的密文和MAC，向A
要使用消息验证码来检测。
收者便很难判断它是否被篡改。由于密码本身无法告诉人们消息是否被篡改，所以就需
可能会发现它是被篡改过的。
相关的计算。
但是，如果原本的消息就是商品编号等无法被人们直接理解的内容，那么解密后接
如果原本的消息是很长的句子，那么它被篡改后意思会变得很奇怪，所以接收者有
解说
加密仅仅是一个数值计算和处理的过程，所以即使密文被篡改了，
f05
internet
85
，也能够进行解密
---
## Page 164
参考：5-9数字签名
哪方生成。这个问题可以用下一节将会讲到的“数字签名”来解决。
给我的消息”。
而否认自己的行为。如果B是坏人，他也可以自己准备一条消息，然后声称“这是A发
行加密并且算出 MAC。也就是说，我们无法证明原本的消息是A生成的还是B 生成的。
通信过程中发生了篡改（请参考下图）。
合理。所以，只要B计算出 MAC，发现密文对应的 MAC 与自己算出的不同，就能确认
考：X会不会为了让密文的篡改变得合理，而对MAC 也进行篡改呢？
使用MAC时，生成的一方和检测的一方持有同样的密钥，所以不能确定MAC由
X没有计算MAC 的密钥，所以即便他可以篡改MAC，也无法让篡改后的密文变得
补充说明
因此，假如A是坏人，他就可以在自己发出消息后声称“这条消息是B捏造的”
然而，这种方法也有缺点。在使用消息认证码的过程中，AB双方都可以对消息进
就像这样，只要使用消息认证码 MAC，我们就能预防通信过程中的篡改行为。
本节以图配文讲解了使用MAC检测密文是否被篡改的方法，接着我们来进一步思
1AC
internet
MAC
MAC
F
+++++o
消息认证码
51８
---
## Page 165
152
安全算法
第5章
5-9
No
参考：5-8消息认证码
可以确定谁是消息的发送者了。
送者，这样是无法预防事后否认行为的。而数字签名是只有发信人才能生成的，因此使用它就
生。由于在消息认证码中使用的是共享密钥加密，所以持有密钥的收信人也有可能是消息的发
数字签名不仅可以实现消息认证码的认证和检测篡改功能，还可以预防事后否认问题的发
abc
abc
签名
数字签名
internet
internet
B
A生成。
字签名。数字签名只能由
在发送前A给消息加上数
B发送消息。
签名的特征。假设A要向
首先，我们来看一看数字
---
## Page 166
字签名。
B可以验证数字签名的正确性，但无法生成数
只要发送的消息上有A的数字签名，就能确定消息的发送者就是A。
3
abc
签名
internet
abc
签
abc
签名
internet
B
abc
签名
参考：5-5公开密钥加密
数字签名的生成使用的是公开密钥加密。
接下来看一看数字签名具体是怎样生成的吧。
B
字签名确实是由A生成的。
B收到消息后，
，可以确认数
e
ibc
JD
53
数字签名
519
---
## Page 167
54
安全算法
第5章
abc
internet
abo
B
B
A将公开密钥发送给B。
所不同。
这一点与公开密钥加密有
送者来准备这两个密钥，
和公开密钥。由消息的发
要发送的消息、私有密钥
流程。首先由A准备好
用了数字签名的消息交换
下面，我们就来看一看使
反的。
而，数字签名却是恰恰相
钥的人才能解密数据。然
加密，但只有持有私有密
使用公开密钥对数据进行
钥
中，加密使用的是公开
的知识。公开密钥加密
我们先来复习一下前面
，解密使用的是私
，任何人都可以
需
密
---
## Page 168
B使用公开密钥对密文（签名）进行解密。
数字签名。
A使用私有密钥加密消息。加密后的消息就是
数字签名
abc
D
hterhet
abc
B
名
internet
A将消息和签名都发送给了B。
abc
abc
abc
internet
abc
55
数字签名
9
51
---
## Page 169
156
安全算法
第5章
B对解密后的消息进行确认，看它是否和收到的消息一致。流程到此结束。
12
发生。
论来确认消息的发送者是否为A，消息是否被人篡改。
都具有这个性质，不过 RSA加密算法是可以的。
是说，即使密钥的使用顺序不同，运行结果也都是一样的。并不是所有的公开密钥加密
数字签名利用的是用私有密钥加密的数据，用公开密钥解密后就能还原这一性质。也就
用公开密钥验证签名这一机制是相同的，所以为了方便我们就以上文的方式进行了说明。
说，也有使用加密运算以外的计算方法来生成签名的情况。但是，用私有密钥生成签名、
角度来看就会发现，它可以保证这个密文的制作者只能是持有私有密钥的 A。
开密钥，谁都可以进行解密的密文”。这个密文作为密码似乎没有任何意义。但是换一个
由于B只有公开密钥，无法生成A的签名，所以也预防了“事后否认”这一问题的
能够用 A的公开密钥解密的密文，必定是由A生成的。因此，我们可以利用这个结
在公开密钥加密中，用公开密钥加密的数据都可以用私有密钥还原。而本节讲解的
米“田米“，米田，“中
在步骤7～步骤2中，生成的是“只能由持有私有密钥的A来加密，但只要有公
解说
签名
abc
internet
签名
abc
abc
P
B
：
---
## Page 170
参考：5-10数字证书
钥上也没有任何制作者的信息。因此，公开密钥有可能是由某个冒充A的人生成的。
X冒充了A。
一个缺陷。
参考：5-3哈希函数
用（请参考下图）
接进行加密，而是先求得消息的哈希值，再对哈希值进行加密，然后将其作为签名来使
那就是，
补充说明
使用下一节将要讲到的“数字证书”就能解决这个问题。
其根本原因在于使用公开密钥加密无法确定公开密钥的制作者是谁。收到的公开密
虽然数字签名可以实现“认证”“检测篡改”“预防事后否认”三个功能，但它也有
公开密钥加密的加密和解密都比较耗时。为了节约运算时间，实际上不会对消息直
 虽然使用数字签名后B会相信消息的发送者就是A，但实际上也有可能是
S
签名
7f05
abc
internet
签名
7f05
7f05
abc
57
数字签名
519
---
## Page 171
158
安全算法
第5章
5-10
NO
保证公开密钥的正确性。
开密钥被第三者恶意替换，接收方也不会注意到。不过，如果使用本节讲解的数字证书，就能
“公开密钥加密”和“数字签名”无法保证公开密钥确实来自信息的发送者。因此，就算公
数字证书
Rternet
生成。
公开密钥PA确实由自己
CA）申请发行证书，证明
(CertificationAuthority，
A首先需要向认证中心
要将公开密钥PA发送给B。
A持有公开密钥PA禾
己
和
---
## Page 172
密钥Sc，根据A的资料生成数字签名。
人的资料。确认完毕后，认证中心使用自己的私有
认证中心对收到的资料进行确认，判断其是否为A本
认证中心里保管着他们自己准备的公开密钥
提示
5
3
放心。
的数量也比较多，但建议在经过政府审查的大型企业机构进行申请，这些机构更令人
认证中心是管理数字证书的组织机构。原则上谁都可以成为认证中心，所以认证中心
internet
图灵社区会员夏科(PI:EMAIL）专享尊重版权
签名
DO
认证中心将生成的数字签名和资料放进同
料发送给认证中心。
A将公开密钥PA和包含邮箱信息的个人资
一个文件中。
O
9
internet
internet
DO
8
159
数字证书
OL
51
---
## Page 173
160
安全算法
第5章
A将作为公开密钥的数字证书发送给了B。
然后，把这个文件发送给A。
C
P
8
PA
B
的公开密钥。
确实是A的地址。接着，B获取了认证中心
B收到数字证书后，确认证书里的邮件地址
这个文件就是A的数字证书。
A的数字证书。
a@***.com
Certification
数字签名
A
---
## Page 174
我们来看看公开密钥的交付过程有没有什么问题。
3
2
图灵社区会员夏科(PI:EMAIL）专享尊重版权
D8
DO
A
B
验证
了B。
样，公开密钥便从A传到
出A的公开密钥PA。
A的之后，B从证书中取
发行的，且邮件地址就是
确认了证书是由认证中心
中心发行。
说明这份证书的确由认证
验证结果没有异常，就能
开密钥Pc进行验证。如果
签名只能用认证中心的公
心给出的签名。证书中的
证，判断它是否为认证中
B对证书内的签名进行验
这
19
数字证书
0
---
## Page 175
162
安全算法
第5章
得A的证书。
假设×为了假冒A，准备在认证中心登记自己的公开密钥。然而×无法使用A的邮箱地址，因此无法获
但是，B没有必要信任以非证书形式收到的公开密钥。
15
16
获得A的证书。
去申请证书，所以他无法
×只能用自己的邮箱地址
冒充A。
这种情况下，×无法
---
## Page 176
中心对这个认证中心署名(请参考下图)。
也就是说，这里同样存在公开密钥问题(请参考下图)。
解说
那么，我们来看看这个树结构是怎么形成的吧。假设存在一个被社会广泛认可的认
就像下页图中的树结构一样，由上面的认证中心为下面的认证中心发行证书。
实际上，认证中心的公开密钥Pc是以数字证书的形式交付的，会有更高级别的认证
由于公开密钥自身不能表示其制作者，所以有可能是冒充认证中心的X所生成的。
那就是，B得到的公开密钥Pc真的来自认证中心吗？
在步骤中，B得到了认证中心的公开密钥，但此处仍有一个疑问。
通过数字证书，信息的接收者可以确认公开密钥的制作者。
×
B
163
数字证书
5
---
## Page 177
164
安全算法
第5章