业务逻辑和设计 
设计是否对外部连接/命令使用任何提升的 OS 
/系统特权？ 
业务逻辑和设计 
使用的 API /技术是否存在任何已知的缺陷？ 
例如：DWR 
业务逻辑和设计 
设计框架是否提供任何内置的安全控制？ 像
ASP.NET MVC 中的一样？ 应用程序
是否利用了这些控件？ 
业务逻辑和设计 
特权是否会在任何可能的时候减少？ 
288 
业务逻辑和设计 
程序是否设计为正常失败？ 
业务逻辑和设计 
设计是否确定了所有切入点和信任边界，并在风
险分析报告中分析？ 
授权 
身份验证和授权审计的位置是否正确？ 
授权 
无效请求后，执行是否停止/终止？ 例如， 验
证/授权审计失败时？ 
授权 
审计是否正确执行？ 有后门参数吗？ 
授权 
审计是否应用于 Web 根目录内的所有必需文件
和文件夹？ 
授权 
在处理输入之前是否进行安全审计？ 
授权 
无效请求后，执行是否停止/终止？ 例如， 验
证/授权审计失败时？ 
授权 
如果是容器管理的身份验证-身份验证是否仅基
于 Web 方法？ 
授权 
如果是容器管理的身份验证-身份验证是否适用
于所有资源？ 
授权 
如果是容器管理的身份验证-身份验证是否仅基
于 Web 方法？ 
授权 
是否对密码执行密码复杂性审计？ 
289 
授权 
是否以将密码写入文件/日志/控制台的方式向
用户披露密码？ 
授权 
应用程序设计是否要求服务器身份验证（防欺骗
措施）？ 
授权 
应用程序是否支持密码过期？ 
Session 管理 
设计是否可以安全地处理会话？ 
Session 管理 
设计是否涉及组件/模块之间的会话共享？ 会
话两端是否正确验证？ 
Session 管理 
URL 中未传递任何会话参数。 
Session 管理 
会话 Cookie 在合理的短时间内过期。 
Session 管理 
会话 cookie 被加密。 
Session 管理 
会话数据已验证。 
Session 管理 
会话 ID 很复杂。 
Session 管理 
会话存储是安全的。 
Session 管理 
会话不活动超时被强制执行。 
密码学 
密码是否以加密格式存储？ 
密码学 
数据库凭证是否以加密格式存储 
密码学 
通过网络发送的所有 PI 和敏感信息是否都是加
290 
密形式。 
密码学 
数据是否在加密通道上发送？ 应用程序是否使
用 HTTP 客户端进行外部连接？ 
密码学 
应用程序是否使用自定义方案进行哈希或加
密？ 
密码学 
应用程序使用的加密功能是否是这些协议的最
新版本，已打补丁并进行了适当处理以保持更
新？ 
密码学 
是否有任何特殊的请求从验证中跳过？ 
密码学 
密钥不在代码中存储。 
输入验证 
所有不受信任的输入都经过验证了吗？ 输入数
据受类型，长度，格式和范围的约束和验证。 
日志和审计 
日志记录的是个人信息，密码还是其他敏感信
息？ 
日志和审计 
审核日志是否记录连接尝试（成功和失败）？ 
日志和审计 
是否有适当的流程来读取审核日志以了解意外/
恶意行为？ 
用户管理和认证 
记录了基于用户和角色的特权。 
用户管理和认证 
身份验证 cookie 不会保留。 
291 
用户管理和认证 
身份验证 cookie 已加密。 
用户管理和认证 
身份验证凭据未通过 HTTP GET 传递。 
用户管理和认证 
授权审计是细粒度的（页面和目录级别）。 
用户管理和认证 
根据明确定义的角色进行授权。 
用户管理和认证 
授权工作正常，不能通过参数操纵来规避。 
用户管理和认证 
Cookie 操作无法绕过授权。 
数据管理 
数据在服务器端验证。 
数据管理 
针对每个请求验证 HTTP 标头 
数据管理 
是否所有 XML 输入数据都根据约定的模式进行
了验证？ 
数据管理 
包含不受信任的数据提供的输入的输出是否具
有正确的编码类型（URL 编码，HTML 编码）？ 
数据管理 
是否已将正确的编码应用于应用程序正在输出
的所有数据。 
Web 服务器 
如果应用程序不需要动态生成 WSDL，则禁用
Web 服务的文档协议。 
Web 服务器 
审计 Web 服务描述语言（WSDL）中的 Web
服务端点地址的有效性。 
292 
Web 服务器 
禁用不必要的 Web 服务协议（除了 HTTP GET
和 HTTP POST） 
5.4 威胁模型示例 
5.4.1.1 分解应用程序 
分解应用程序的目标是了解应用程序以及它如何与外部实体交互。信息收集和文档可以
实现这个目标。信息收集过程使用明确定义的结构来执行，这确保收集到正确的信息。该结
构还定义了应该如何记录信息以生成威胁模型。 
表： 
一般信息 
威胁模型中的第一项是与威胁模型相关的一般信息。这必须包括以下内容: 
1.应用程序名称:应用程序的名称 
2.应用程序版本:应用程序的版本 
3.描述:应用程序的高级描述 
4.文档所有者:威胁建模文档的所有者 
5.参与者:参与此应用程序威胁建模过程的参与者 
6.审计者:威胁模型的审计者 
293 
描述 
学院图书馆网站是第一个为图书馆员和图书馆顾客(学生和学院工作人员)提供在线服
务的网站。由于这是网站的第一次实施，功能将是有限的。该应用程序有三种用户: 
1.学生 
2.全体职员 
3.图书馆员工作人员和学生将能够登录并搜索书籍，工作人员可以请求书籍。图书管理
员将能够登录、添加图书、添加用户和搜索图书。 
表： 
入口点 
入口点应记录如下: 
1.身份 
分配给入口点的唯一标识。这将用于入口点与任何已识别的威胁或漏洞进行交叉参
考。在层入口点的情况下，应该使用主要的、次要的符号。 
2.名字 
标识入口点及其用途的描述性名称。 
3．描述 
详述在入口点发生的交互或处理的文本描述。 
4．信任级别 
294 
此处记录了入口点所需的访问级别。这些将与文档后面定义的信任级别相互参照。 
表： 
资产 
威胁模型中记录的资产如下: 
1.身份 
分配一个唯一的标识来标识每个资产。这将用于将资产与任何已识别的威胁或漏洞
进行交叉参考。 
2.名字 
明确标识资产的描述性名称。 
3.描述 
资产是什么以及为什么需要保护的文本描述。 
4.信任级别 
此处记录了访问入口点所需的访问级别。这些将与下一步中定义的信任级别相互参
照。 
表： 
信任级别 
威胁模型中记录的信任级别如下: 
1.身份 
295 
每个信任级别都有一个唯一的编号。这用于交叉参考入口点和资产的信任级别。 
2．名字 
一个描述性名称，允许标识已被授予此信任级别的外部实体。 
3．描述 
信任级别的文本描述，详细说明被授予信任级别的外部实体。 
通过对学院图书馆网站架构和设计的理解，可以创建如图十所示的数据流图。 
图 
具体来说，用户登录数据流图将如下图所示。 
图 
296 
5.4.1.2 威胁建模示例:步骤 2a 威胁分类 
确定威胁的第一步是采用威胁分类。威胁分类提供了一组带有相应示例的威胁类别，因
此可以在应用程序中以结构化和可重复的方式系统地识别威胁。 