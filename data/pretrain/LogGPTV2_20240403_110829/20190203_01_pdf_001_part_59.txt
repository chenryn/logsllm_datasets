### 10.3.4.3 Dropping Control Schemas and Database Objects

#### PostgreSQL
To drop the specified procedures and tables, execute the following SQL commands:

```sql
DROP PROCEDURE pubuser.GetNewTxsCount;
DROP PROCEDURE pubuser.JobCleanup;
DROP PROCEDURE pubuser.JobCreateTxSet;
DROP PROCEDURE pubuser.LoadPubTableList;
DROP PROCEDURE pubuser.RemoveCleanupJob;
DROP PROCEDURE pubuser.RemoveCreateTxSetJob;
DROP TABLE pubuser.rrst_edb_dept;
DROP TABLE pubuser.rrst_edb_emp;
```

For PostgreSQL, if any of the schemas `_edb_replicator_pub`, `_edb_replicator_sub`, or `_edb_scheduler` still exist in the publication database, they should be dropped along with all their objects. The following example demonstrates how to do this using `psql`:

```sql
\c edb enterprisedb
-- You are now connected to database "edb" as user "enterprisedb".

DROP SCHEMA _edb_replicator_pub CASCADE;
-- NOTICE: drop cascades to 51 other objects
-- DETAIL: drop cascades to sequence _edb_replicator_pub.rrep_common_seq
--         drop cascades to sequence _edb_replicator_pub.rrep_tx_seq

DROP SCHEMA _edb_replicator_sub CASCADE;
-- NOTICE: drop cascades to 9 other objects
-- DETAIL: drop cascades to sequence _edb_replicator_sub.rrep_common_seq
--         drop cascades to table _edb_replicator_sub.xdb_sub_database

DROP SCHEMA _edb_scheduler CASCADE;
-- NOTICE: drop cascades to 40 other objects
-- DETAIL: drop cascades to table _edb_scheduler.sch_pub_job_details
--         drop cascades to table _edb_scheduler.sch_pub_job_listeners
```

For trigger-based synchronization replication, in the schema containing the publication tables, drop the triggers and trigger functions associated with the publication tables:

```sql
SET search_path TO edb;

DROP FUNCTION rrpd_edb_dept_tgfunc() CASCADE;
-- NOTICE: drop cascades to trigger rrpd_edb_dept on table dept

DROP FUNCTION rrpi_edb_dept_tgfunc() CASCADE;
-- NOTICE: drop cascades to trigger rrpi_edb_dept on table dept

DROP FUNCTION rrpu_edb_dept_tgfunc() CASCADE;
-- NOTICE: drop cascades to trigger rrpu_edb_dept on table dept

DROP FUNCTION rrpd_edb_emp_tgfunc() CASCADE;
-- NOTICE: drop cascades to trigger rrpd_edb_emp on table emp

DROP FUNCTION rrpi_edb_emp_tgfunc() CASCADE;
-- NOTICE: drop cascades to trigger rrpi_edb_emp on table emp

DROP FUNCTION rrpu_edb_emp_tgfunc() CASCADE;
-- NOTICE: drop cascades to trigger rrpu_edb_emp on table emp
```

#### Oracle
For Oracle, the `RREP_TXSET_HEALTH` table is created in the subscription database user's schema. Drop this table:

```sql
CONNECT subuser/password
-- Connected.

DROP TABLE rrep_txset_health;
-- Table dropped.
```

#### SQL Server
For SQL Server, the `rrep_txset_health` table is created in the `_edb_replicator_sub` schema. Drop this table and schema:

```sql
USE subdb;
GO
-- Changed database context to 'subdb'.

DROP TABLE _edb_replicator_sub.rrep_txset_health;
GO

DROP SCHEMA _edb_replicator_sub;
GO
```

#### PostgreSQL (Subscription Database)
For PostgreSQL, the `rrep_txset_health` table is created in the `_edb_replicator_sub` schema. Drop this table and schema:

```sql
\c subdb enterprisedb
-- You are now connected to database "subdb" as user "enterprisedb".

DROP SCHEMA _edb_replicator_sub CASCADE;
-- NOTICE: drop cascades to table _edb_replicator_sub.rrep_txset_health
```

### 10.3.4.4 Dropping Replication Slots for Log-Based Synchronization Replication

Replication slots are used for log-based synchronization replication. When a replication system is removed, these slots must also be deleted. If a Postgres database needs to be dropped but the replication system cannot be removed normally, follow these steps to remove the replication slots:

1. **Display Replication Slots:**
   ```sql
   SELECT slot_name, slot_type, database, active, active_pid FROM pg_replication_slots;
   ```

2. **Deactivate Active Replication Slots:**
   - Stop the publication server.
   - If the slot is still active, terminate the process shown in the `active_pid` column:
     ```sql
     SELECT pg_terminate_backend(5327);
     ```

3. **Drop the Replication Slot:**
   ```sql
   SELECT pg_drop_replication_slot('xdb_79910_5');
   ```

4. **Drop the Database:**
   ```sql
   DROP DATABASE mmrnode;
   ```

5. **Remove Replication Origins:**
   - Display replication origins:
     ```sql
     SELECT * FROM pg_replication_origin;
     ```
   - Remove a replication origin:
     ```sql
     SELECT pg_replication_origin_drop('xdb_mmrnode_emp_pub_1');
     ```

### 10.4 Miscellaneous xDB Replication Server Processing Topics

This section covers various topics including handling special characters in replication data, replicating Oracle partitioned tables, performing an offline snapshot, generating an encrypted password, and writing cron expressions.

### 10.4.1 Publication and Subscription Server Configuration Options

The publication and subscription servers support various configuration options to optimize performance, handle special data types, and manage memory usage. These options are set in the `xdb_pubserver.conf` and `xdb_subserver.conf` files, respectively.

#### Step 1: Modify Configuration Files
- Edit the configuration files to change the settings.
- Example:
  ```ini
  replaceNullChar = true
  nullReplacementChar = ?
  ```

#### Step 2: Restart Servers
- For CentOS 7 or RHEL 7:
  ```sh
  systemctl restart edb-xdbpubserver
  ```
- For previous Linux versions:
  ```sh
  service edb-xdbpubserver restart
  ```

### 10.4.1.1 Controlling Logging Level, Log File Sizes, and Rotation Count

The logging level, file size, and rotation count can be controlled using the following options:

- **logging.level:**
  ```ini
  logging.level={OFF | SEVERE | WARNING | INFO | CONFIG | FINE | FINER | FINEST | ALL}
  ```
  Default: `WARNING`

- **logging.file.size:**
  ```ini
  logging.file.size=n
  ```
  Default: 50 MB

- **logging.file.count:**
  ```ini
  logging.file.count=n
  ```
  Default: 20

- **Disable Log File Rotation:**
  - Set `logging.file.count=0` to create a single, unlimited size log file.
  - Set `logging.file.count=1` to create a single, limited size log file.

For more information, refer to the EDB Postgres Replication Server Userâ€™s Guide.