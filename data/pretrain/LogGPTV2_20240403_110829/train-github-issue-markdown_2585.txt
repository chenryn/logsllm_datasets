### Reason:
It allows the user to compute these metrics on soft classifications. E.g. let
Y be a (n,k) ndarray, where each row is a probability distribution over
classes. Let C be a (n,c) ground truth ndarray, each row is a probability
distribution over classes. Then A = np.dot(Y.T, C) is the expected contingency
matrix.
### Example of a function where it's currently implemented:
`mutual_info_score`
### Functions for which it should be implemented:
`adjusted_rand_score`  
`fowlkes_mallows_score `  
`normalized_mutual_info_score`  
`adjusted_mutual_info_score`  
`homogeneity_completeness_v_measure`
### Discussion
Is there an architectural or semantic reason for why we wouldn't want to allow
custom contingency matrices? Otherwise this seems like an easy update.