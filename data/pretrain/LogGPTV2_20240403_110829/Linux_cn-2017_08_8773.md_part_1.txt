---
author: Jonas Bonér, Viktor Klang
category: 软件开发
comments_data: []
count:
  commentnum: 0
  favtimes: 1
  likes: 0
  sharetimes: 0
  viewnum: 9032
date: '2017-08-12 18:30:00'
editorchoice: true
excerpt: 在充满困惑与过高期望的环境中，响应式设计原则为我们提供了一条清晰的路径。
fromurl: https://www.oreilly.com/ideas/reactive-programming-vs-reactive-systems
id: 8773
islctt: true
largepic: /data/attachment/album/201708/12/183025r3x6x37axwc33e63.jpg
permalink: /article-8773-1.html
pic: /data/attachment/album/201708/12/183025r3x6x37axwc33e63.jpg.thumb.jpg
related: []
reviewer: ''
selector: ''
summary: 在充满困惑与过高期望的环境中，响应式设计原则为我们提供了一条清晰的路径。
tags:
- 响应式
thumb: false
title: 响应式编程与响应式系统
titlepic: true
translator: XLCYun
updated: '2017-08-12 18:30:00'
---

> 在充满困惑与过高期望的环境中，响应式设计原则为我们提供了一条清晰的路径。

![](/data/attachment/album/201708/12/183025r3x6x37axwc33e63.jpg)

下载 Konrad Malawski 的免费电子书《为什么选择响应式？企业应用中的基本原则》，以深入了解响应式技术的优势和应用场景。

自2013年我们共同撰写《响应式宣言》以来，我们见证了响应式从一种鲜为人知的技术逐渐发展成为中间件领域各大公司全平台战略的重要组成部分。本文旨在通过比较响应式编程风格与将响应式系统视为一个整体的设计方法来定义并澄清“响应式”概念的不同方面。

### 响应式：一组设计原则

响应式技术成功的一个标志是“响应式”成为一个流行词汇，并与多种不同的概念和技术联系在一起，如“流处理”、“轻量级”和“实时”。例如，在观察一支运动队（如棒球队或篮球队）时，虽然每个队员都是独立的个体，但如果他们不能有效协作，就会输给实力较弱但团队合作更好的对手。同样地，响应式是一组设计原则，它强调在分布式环境下如何进行系统架构和设计，其中实现技术、工具和设计模式都只是整个系统的一部分。

这个例子说明了简单地组合多个优秀软件与构建响应式系统之间的区别。在响应式系统中，各组件间的相互作用使得它们能够独立运作，同时又能协同工作以达到预期目标。**响应式系统**是一种架构风格，允许多个独立的应用程序作为一个整体运行，共同响应外部环境的变化，同时保持对系统内其他应用的感知——这体现在系统的可扩展性、负载均衡等方面。

以响应式风格编写单个软件是可行的，但这仅仅是整体解决方案的一部分。尽管上述提到的各个方面都可以被称为“响应式”，但仅凭这些特性还不足以使一个*系统*真正具备响应式的特点。

当人们在讨论软件开发与设计时提到“响应式”，通常是指以下三者之一：
- **响应式系统**（架构与设计）
- **响应式编程**（基于声明式事件驱动）
- **函数响应式编程**（FRP）

我们将探讨这些方法和技术的具体含义，特别是前两者。更具体地说，我们会讨论它们是如何结合使用的，以及各自能带来的好处——尤其是在为多核、云或移动架构构建系统的情境下。
---