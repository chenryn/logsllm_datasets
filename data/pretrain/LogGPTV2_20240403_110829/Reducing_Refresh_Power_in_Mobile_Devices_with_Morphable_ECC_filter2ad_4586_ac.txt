359359
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:13:39 UTC from IEEE Xplore.  Restrictions apply. 
E. Complexity of ECC Encoder and Decoder
MECC relies on ECC encoder and decoder to tolerate
different levels of bit error rate. SECDED is a widely adopted
code in industry, so we do not describe the details. Multi-bit
error correction takes longer to decode, and larger area than
SECDED. Typically, SECDED is based on Hamming Code ,
while ECC-6 uses BCH code [5].
BCH code is a class of cyclic error-correcting codes, which
is able to correct random multi-bit errors [16, 17]. Let’s assume
the input data d is a k-bit data. To correct t errors and detect
t+1 errors, BCH will require a code word of t*m+1 bits, where
d  10). To provide insights in our analysis, we
will refer to this classiﬁcation. Table III shows average key
characteristics of the workloads used in our study, including
Misses Per Kilo Instruction (MPKI), Baseline IPC (without
error correction latency), and memory footprint. Footprint is
calculated as the number of unique 4KB pages touched by the
workload slice. Note the average IPC is 0.72, which translates
into an execution time of approximately 5.5 seconds for the
active period of the running application.
TABLE III.
Name
Low-MPKI
Med-MPKI
High-MPKI
BENCHMARK CHARACTERIZATION.
IPC MPKI
1.514
0.887
0.359
26
96.4
259.1
Footprint(MB)
0.3
4.7
23.5
C. Power Calculator
The power consumption of the memory devices are calcu-
lated based on the power parameters shown in Table IV. We
use the Micron DRAM power calculator to derive the power
statistics [22, 23]. We also calculate the energy dissipated by
the ECC decoders and encoders in the active mode. Compared
to the typical processor in mobile devices and memory access,
ECC decoder and encoders consume negligible power (ECC-6
decoder consumes approximately 40 pJ to decode a line, while
reading a line from memory requires 12 nJ).
1The footprint of mcf is 1.4GB, which makes it unusable for studying a
memory system of 1GB, therefore we do not include mcf in our studies. If
we ignore page fault latency, then MECC gets performance within 2% of
baseline with no ECC, so including mcf does not have any impact on the
average performance of our proposal.
360360
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:13:39 UTC from IEEE Xplore.  Restrictions apply. 
TABLE IV.
POWER PARAMETERS FOR OUR MEMORY SYSTEM
Parameters
VDD
IDD0
IDD2P
Values
1.7 V
95 mA
0.6 mA Precharge
Description
Operating Voltage (Volts)
1 bank active precharge current
power-down
standby
current
Active power-down standby cur-
rent
IDD3P
3 mA
IDD4
IDD5
IDD8
135 mA Burst read/write: 1 bank active
100 mA Auto refresh
1.3 mA Self refresh
D. Figure of Merit
As we have dual objective of both high performance and
low power, we will use the following metrics as ﬁgure of merit
in the evaluation.
Performance: Performance is measured in terms of In-
struction Per Cycle (IPC) for each system and normalized
with respect to the baseline system that does not incur any
error correction latency. Thus, the difference in performance
is mainly from the latency overheads of error correction.
Power Savings in Idle Mode: The power consumption in
the idle mode is based on refresh power and background power,
shown in Equation 1[7]. For the energy evaluations in idle
mode, we assume that the activity of daemon processes (such
as Bluetooth, sync, etc.) is negligibly small and hence we do
not include the energy from these activities in both the baseline
as well as our proposal. While this assumption generally
holds true,
it may not hold in extreme cases when there
is a pathological daemon process that continues to consume
signiﬁcant energy even when the device is idle. Examples
of such undesirable daemon processes includes mm-qcamera-
daemon [24] and Uniﬁed-daemon (EUR) [25], which have been
known to quickly drain the battery even when the device is
idle. The software community has looked at averting such
daemons using OS patches. For unpatched systems that run
such pathological daemons, we can simply assume that the
devices is always active and thus offers no scope for idle power
reduction.
IdlePM ECC = PM ECCRef resh + POther
· POrignialRef resh + POther
= TOriginal
TM ECC
(1)
Note that a more precise evaluation of activity for such
daemon processes can be done using a hardware infrastructure
that can (a) measure the frequency of daemon processes during
idle period (b) measure the duration of each such daemon
process (c) generate the trace of memory access stream of
each such process. Furthermore, the study will need to be
done over several users as the daemon activity is typically
user dependent. Doing such an extensive study is out of the
scope of this paper.
Power and EDP in Active Mode: For active mode, we
must take into account both performance and power; otherwise,
a scheme that degrades performance may seen to be beneﬁcial
361361
from purely a power savings perspective. So, we use Energy
Delay Product (EDP) as a ﬁgure of merit and calculate it as
shown in Equation 2.
EnergyDelayP roduct = DissipatedEnergy × ExecutionT ime
(2)
V. RESULTS AND ANALYSIS
A. Impact on Performance
The latency incurred in performing error correction in-
creases effective memory latency, and degrades performance.
We compare the performance of different error correction
schemes in active mode of operation. Figure 7 shows the IPC
of SECDED, ECC-6 and MECC, normalized with respect to
the baseline which does not incur any latency overheads from
error correction. The bar labeled ALL is the geometric mean
over all workloads.
The performance impact of SECDED is quite small across
all the workloads. On average SECDED has 0.5% slowdown
compared to no error correction. The performance impact of
ECC-6, however, depends on the memory behavior of work-
loads. For Low-MPKI benchmarks, the performance impact
compared to no error correction is quite small for ECC-6. For
MED-MPKI and High-MPKI, using ECC-6 causes signiﬁcant
performance degradation. The slowdown for libquantum is
as high as 21%. On average, ECC-6 causes a slowdown
of 10%. In contrast, MECC bridges the performance gap
between SECDED and ECC-6, with performance very close
to SECDED. The average slowdown with MECC is only
1.2%. Thus,
the performance of MECC is within 1% of
SECDED, whereas ECC-6 of 10% performance degradation
is signiﬁcantly worse.
B. Power Saving in Idle Mode
We employ strong ECC in idle mode to reduce refresh
power. For both ECC-6 and MECC, we assume that the refresh
rate is reduced from 64ms (in baseline) to 1 second. This
translates to a linear reduction in refresh power. Figure 8(left)
shows the refresh power of ECC-6 and MECC, normalized
to the baseline system. Both ECC-6 and MECC reduce the
refresh power by 16x.
However, refresh power is only a portion of memory idle
power. When memory is idle it still consumes background
power. Figure 8 (right) shows the breakdown of idle power
in terms of refresh power and background power, normalized
to the baseline. Both ECC-6 and MECC reduce refresh power
by 16x, and the overall power reduction is about 43% given
that refresh power accounts for only half the idle power. Thus,
MECC and ECC-6 are effective at reducing idle power by
almost 2X.
C. Power and Energy in Active Mode
We also analyze the power characteristics of different
schemes when the system is active. Figure 9 shows the power,
energy consumption, and energy-delay product for baseline,
SECDED and MECC. MECC has approximately 1% higher
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:13:39 UTC from IEEE Xplore.  Restrictions apply. 
SECDED
ECC-6
MECC
C
P
I
d
e
z
i
l
a
m
r
o
N
 1
 0.95
 0.9
 0.85
 0.8
 0.75
 0.7
povray
ga m ess
tonto wrf
h m m er
sjeng
h264ref
na m d
Low-MPKI
gro m acs
gob m k
perl
astar
bzip2
soplex
dealII
cactus
calculix
Med-MPKI
gcc
zeusm p
sphinx
o m netpp
xalanc
milc
leslie
libq
G e m s
bwaves
lb m
High-MPKI
ALL
Fig. 7.
any error correction latency.
Performance Comparison of SECDED, ECC-6, and MECC. All performance numbers are IPC values normalized to the baseline that does not incur
Background
Refresh
D. Impact on Overall Memory System Energy
The total energy consumption of the memory system is
determined by both the active power and idle power. Our
proposal reduces the idle power by 2X while having similar
active power. While the idle power of a typical system is
typically much lower than active power (20X or more lower),
the idle period lasts for a longer time. Therefore, the overall
battery drain from idle periods can still be signiﬁcant. To do
the overall energy analysis, we assume that the idle period
accounts for 95% of the system time, which is in accordance
with the recent user studies on smartphone activity [3].
Figure 10 shows the total energy consumption for our
baseline, divided into energy from active use and from idle
periods. The energy spent in idle periods accounts for ap-
proximately one-third of the total system energy consumption.
MECC reduces the idle power by almost 2X, thus reducing
the overall memory system energy consumption by 15%.
n
o
i
t
p
m
u
s
n
o
C
y
g
r
e
n
E
d
e