I created a small module that I frequently use, and I usually copy it to the desired folder whenever I need it. However, for convenience, I would like to install it system-wide so that I can access it from any location, including the interactive prompt. After doing some research on installation, I concluded that I needed to copy the file to `/usr/local/lib/python2.7/site-packages`. Unfortunately, this approach did not work as expected.

**Question:**
Does anyone know where I should place my module to make it available system-wide?

**Answer:**
One effective solution is to create a dedicated folder (e.g., `my_modules/`) to store all your global modules. You can then add this folder to the Python path by modifying the `site-packages` directory of the specific Python version you are using. To find the correct `site-packages` directory, you can run the following command:

```bash
python -m site
```

Once you have located the `site-packages` directory, navigate to it and create a new file with a `.pth` extension. In this file, add the absolute path to the `my_modules/` folder. This will ensure that Python includes your custom modules in the system path, making them accessible from anywhere.

Hereâ€™s a step-by-step guide:

1. **Create a folder for your global modules:**
   ```bash
   mkdir -p ~/my_modules
   ```

2. **Find the `site-packages` directory:**
   ```bash
   python -m site
   ```

3. **Navigate to the `site-packages` directory:**
   ```bash
   cd /path/to/site-packages
   ```

4. **Create a `.pth` file and add the path to your `my_modules/` folder:**
   ```bash
   echo "/absolute/path/to/my_modules" > my_modules.pth
   ```

5. **Place your module in the `my_modules/` folder:**
   ```bash
   cp /path/to/your/module.py ~/my_modules/
   ```

After following these steps, your module should be available system-wide, and you can import it from any Python script or the interactive prompt.