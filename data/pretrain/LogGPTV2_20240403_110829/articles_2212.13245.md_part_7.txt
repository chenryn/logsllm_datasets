32 RoozbehAghilietal.
Coelho J, Valente MT, Silva LL, Shihab E (2018) Identifying unmaintained
projects in github. In: Proceedings of the 12th ACM/IEEE International
Symposium on Empirical Software Engineering and Measurement, pp 1–10
CohenJ(1960)Acoefficientofagreementfornominalscales.Educationaland
psychological measurement 20(1):37–46
Coppola R, Ardito L, Torchiano M (2019) Characterizing the transition to
kotlin of android apps: a study on f-droid, play store, and github. In: Pro-
ceedingsofthe3rdACMSIGSOFTInternationalWorkshoponAppMarket
Analytics, pp 8–14
Dabic O, Aghajani E, Bavota G (2021) Sampling projects in github for msr
studies.In:2021IEEE/ACM18thInternationalConferenceonMiningSoft-
ware Repositories (MSR), IEEE, pp 560–564
Dang Y, Lin Q, Huang P (2019) Aiops: real-world challenges and research
innovations.In:2019IEEE/ACM41stInternationalConferenceonSoftware
Engineering: Companion Proceedings (ICSE-Companion), IEEE, pp 4–5
Devlin J, Chang MW, Lee K, Toutanova K (2018) Bert: Pre-training of
deep bidirectional transformers for language understanding. arXiv preprint
arXiv:181004805
Di Stefano A, Di Stefano A, Morana G, Zito D (2021) Prometheus and aiops
for the orchestration of cloud-native applications in ananke. In: 2021 IEEE
30th International Conference on Enabling Technologies: Infrastructure for
Collaborative Enterprises (WETICE), IEEE, pp 27–32
Ding R, Fu Q, Lou JG, Lin Q, Zhang D, Shen J, Xie T (2012) Healing on-
line service systems via mining historical issue repositories. In: Proceedings
of the 27th IEEE/ACM International Conference on Automated Software
Engineering, ASE ’12, pp 318–321
Ding R, Fu Q, Lou JG, Lin Q, Zhang D, Xie T (2014) Mining historical issue
repositories to heal large-scale online service systems. In: 2014 44th Annual
IEEE/IFIPInternationalConferenceonDependableSystemsandNetworks,
IEEE, pp 311–322
El-Sayed N, Zhu H, Schroeder B (2017) Learning from failure across multiple
clusters: A trace-driven approach to understanding, predicting, and miti-
gating job terminations. In: 2017 IEEE 37th International Conference on
Distributed Computing Systems (ICDCS), IEEE, pp 1333–1344
Feng Z, Guo D, Tang D, Duan N, Feng X, Gong M, Shou L, Qin B, Liu T,
Jiang D, et al. (2020) Codebert: A pre-trained model for programming and
natural languages. arXiv preprint arXiv:200208155
Gao J, Wang H, Shen H (2020) Task failure prediction in cloud data centers
using deep learning. IEEE transactions on services computing
Ghrairi N, Kpodjedo S, Barrak A, Petrillo F, Khomh F (2018) The state of
practiceonvirtualreality(vr)applications:Anexploratorystudyongithub
and stack overflow. In: 2018 IEEE International Conference on Software
Quality, Reliability and Security (QRS), IEEE, pp 356–366
GitHub I (2022) To create integrations, retrieve data, and automate your
workflows, build with the github rest api. https://docs.github.com/en/
rest
StudyingtheCharacteristicsofAIOpsProjectsonGitHub 33
GuzmanE,AzócarD,LiY(2014)Sentimentanalysisofcommitcommentsin
github: an empirical study. In: Proceedings of the 11th working conference
on mining software repositories, pp 352–355
Han J, Pei J, Yin Y (2000) Mining frequent patterns without candidate gen-
eration. ACM sigmod record 29(2):1–12
HanJ,PeiJ,YinY,MaoR(2004)Miningfrequentpatternswithoutcandidate
generation: A frequent-pattern tree approach. Data mining and knowledge
discovery 8(1):53–87
HanJ,ChengH,XinD,YanX(2007)Frequentpatternmining:currentstatus
and future directions. Data mining and knowledge discovery 15(1):55–86
He S, Lin Q, Lou JG, Zhang H, Lyu MR, Zhang D (2018) Identifying impact-
ful service system problems via log analysis. In: Proceedings of the 2018
26th ACM Joint Meeting on European Software Engineering Conference
and Symposium on the Foundations of Software Engineering, pp 60–70
Hindle A, Barr ET, Gabel M, Su Z, Devanbu P (2016) On the naturalness of
software. Communications of the ACM 59(5):122–131
Horschig S, Mattis T, Hirschfeld R (2018) Do java programmers write better
python? studying off-language code quality on github. In: Conference com-
panion of the 2nd international conference on art, science, and engineering
of programming, pp 127–134
IslamMJ,NguyenG,PanR,RajanH(2019)Acomprehensivestudyondeep
learning bug characteristics. In: Proceedings of the 2019 27th ACM Joint
Meeting on European Software Engineering Conference and Symposium on
the Foundations of Software Engineering, pp 510–520
Islam T, Manivannan D (2017) Predicting application failure in cloud: A ma-
chine learning approach. In: 2017 IEEE International Conference on Cogni-
tive Computing (ICCC), IEEE, pp 24–31
Jupyter I (2022) nbconvert: Convert Notebooks to other formats. https://
nbconvert.readthedocs.io/en/latest/, last accessed: 2022/12/06
Kalliamvakou E, Gousios G, Blincoe K, Singer L, German DM, Damian D
(2014) The promises and perils of mining github. In: Proceedings of the
11th working conference on mining software repositories, pp 92–101
Kalliamvakou E, Gousios G, Blincoe K, Singer L, German DM, Damian D
(2016) An in-depth study of the promises and perils of mining github. Em-
pirical Software Engineering 21(5):2035–2071
Kallis R, Di Sorbo A, Canfora G, Panichella S (2021) Predicting issue types
on github. Science of Computer Programming 205:102598
Khandkar SH (2009) Open coding. University of Calgary 23:2009
Lenarduzzi V, Sillitti A, Taibi D (2017) Analyzing forty years of software
maintenance models. In: 2017 IEEE/ACM 39th International Conference
on Software Engineering Companion (ICSE-C), IEEE, pp 146–148
Lenarduzzi V, Sillitti A, Taibi D (2018) A survey on code analysis tools for
software maintenance prediction. In: International Conference in Software
Engineering for Defence Applications, Springer, pp 165–175
Lenarduzzi V, Saarimaki N, Taibi D (2019) On the diffuseness of code tech-
nical debt in java projects of the apache ecosystem. In: 2019 IEEE/ACM
34 RoozbehAghilietal.
International Conference on Technical Debt (TechDebt), IEEE, pp 98–107
Li J, Dai L, Tan F, Shen H, Wang Z, Sheng B, Hu P (2022) Cdx-net: Cross-
domain multi-feature fusion modeling via deep neural networks for multi-
variate time series forecasting in aiops. In: ICASSP 2022-2022 IEEE Inter-
national Conference on Acoustics, Speech and Signal Processing (ICASSP),
IEEE, pp 4073–4077
Li Y, Jiang ZM, Li H, Hassan AE, He C, Huang R, Zeng Z, Wang M, Chen
P (2020) Predicting node failures in an ultra-large-scale cloud computing
platform: an aiops solution. ACM Transactions on Software Engineering
and Methodology (TOSEM) 29(2):1–24
Lim MH, Lou JG, Zhang H, Fu Q, Teoh ABJ, Lin Q, Ding R, Zhang D
(2014)Identifyingrecurrentandunknownperformanceissues.In:2014IEEE
International Conference on Data Mining, IEEE, pp 320–329
Lin Q, Hsieh K, Dang Y, Zhang H, Sui K, Xu Y, Lou JG, Li C, Wu Y,
Yao R, et al. (2018) Predicting node failure in cloud service systems. In:
Proceedings of the 2018 26th ACM Joint Meeting on European Software
Engineering Conference and Symposium on the Foundations of Software
Engineering, pp 480–490
LomioF,MoreschiniS,LenarduzziV(2021)Faultpredictionbasedonsoftware
metrics and SonarQube rules. machine or deep learning? arXiv preprint
arXiv:210311321
Lopes CV, Maj P, Martins P, Saini V, Yang D, Zitny J, Sajnani H, Vitek J
(2017)Déjàvu:amapofcodeduplicatesongithub.ProceedingsoftheACM
on Programming Languages 1(OOPSLA):1–28
Lou JG, Lin Q, Ding R, Fu Q, Zhang D, Xie T (2013) Software analytics for
incidentmanagementofonlineservices:Anexperiencereport.In:201328th
IEEE/ACM International Conference on Automated Software Engineering
(ASE), IEEE, pp 475–485
Lou JG, Lin Q, Ding R, Fu Q, Zhang D, Xie T (2017) Experience report
on applying software analytics in incident management of online service.
Automated Software Engineering 24(4):905–941
Luo C, Lou JG, Lin Q, Fu Q, Ding R, Zhang D, Wang Z (2014) Correlating
events with time series for incident diagnosis. In: Proceedings of the 20th
ACM SIGKDD international conference on Knowledge discovery and data
mining, pp 1583–1592
Mahdisoltani F, Stefanovici I, Schroeder B (2017) Proactive error prediction
to improve storage system reliability. In: 2017 USENIX Annual Technical
Conference (USENIX ATC 17), pp 391–402
Manes SS, Baysal O (2021) Studying the change histories of stack overflow
andgithubsnippets.In:2021IEEE/ACM18thInternationalConferenceon
Mining Software Repositories (MSR), IEEE, pp 283–294
McHughML(2012)Interraterreliability:thekappastatistic.Biochemiamed-
ica 22(3):276–282
MunaiahN,KrohS,CabreyC,NagappanM(2017)Curatinggithubforengi-
neered software projects. Empirical Software Engineering 22(6):3219–3253
StudyingtheCharacteristicsofAIOpsProjectsonGitHub 35
Nakajima S (2018) Quality assurance of machine learning software. In: 2018
IEEE 7th Global Conference on Consumer Electronics (GCCE), IEEE, pp
601–604
Nikanjam A, Braiek HB, Morovati MM, Khomh F (2021) Automatic fault
detection for deep learning programs using graph transformations. ACM
Trans Softw Eng Methodol 31(1), DOI 10.1145/3470006, URL https://
doi.org/10.1145/3470006
Nikanjam A, Morovati MM, Khomh F, Ben Braiek H (2022) Faults in deep
reinforcement learning programs: A taxonomy and a detection approach.
Automated Software Engg 29(1), DOI 10.1007/s10515-021-00313-x, URL
https://doi.org/10.1007/s10515-021-00313-x
PinheiroE,WeberWD,BarrosoLA(2007)Failuretrendsinalargediskdrive
population. In: Proceedings of the 5th USENIX Conference on File and
Storage Technologies
Poth A, Meyer B, Schlicht P, Riel A (2020) Quality assurance for machine
learning–an approach to function and system safeguarding. In: 2020 IEEE
20th International Conference on Software Quality, Reliability and Security
(QRS), IEEE, pp 22–29
Prasad P, Rich C (2018) Market Guide for AIOps Platforms. https://www.
gartner.com/en/documents/3892967, last accessed: 2022/12/06
RasoolG,ArshadZ(2015)Areviewofcodesmellminingtechniques.Journal
of Software: Evolution and Process 27(11):867–895
ReissC,TumanovA,GangerGR,KatzRH,KozuchMA(2012)Heterogeneity
and dynamicity of clouds at scale: Google trace analysis. In: Proceedings of
the third ACM symposium on cloud computing, pp 1–13
Rosà A, Chen LY, Binder W (2015) Catching failures of failures at big-data
clusters: A two-level neural network approach. In: 2015 IEEE 23rd Interna-
tional Symposium on Quality of Service (IWQoS), IEEE, pp 231–236
Saarimaki N, Baldassarre MT, Lenarduzzi V, Romano S (2019) On the accu-
racyofSonarQubetechnicaldebtremediationtime.In:201945thEuromicro
Conference on Software Engineering and Advanced Applications (SEAA),
IEEE, pp 317–324
Schroeder B, Gibson GA (2007) Understanding disk failure rates: What does
an mttf of 1,000,000 hours mean to you? ACM Transactions on Storage
(TOS) 3(3):8–es
Stol KJ, Ralph P, Fitzgerald B (2016) Grounded theory in software engineer-
ing research: a critical review and guidelines. In: Proceedings of the 38th
International conference on software engineering, pp 120–131
Subramanian VN, Rehman I, Nagappan M, Kula RG (2020) Analyzing first
contributions on github: what do newcomers do. IEEE Software
TambonF,KhomhF,AntoniolG(2023)Aprobabilisticframeworkformuta-
tion testing in deep neural networks. Information and Software Technology
155:107129,DOIhttps://doi.org/10.1016/j.infsof.2022.107129,URLhttps:
//www.sciencedirect.com/science/article/pii/S0950584922002385
Tan J, Lungu M, Avgeriou P (2018) Towards studying the evolution of tech-
nical debt in the python projects from the apache software ecosystem. In:
36 RoozbehAghilietal.
BENEVOL, pp 43–45
Tu Z, Su Z, Devanbu P (2014) On the localness of software. In: Proceedings
of the 22nd ACM SIGSOFT International Symposium on Foundations of
Software Engineering, pp 269–280
Vadlamani SL, Baysal O (2020) Studying software developer expertise and
contributions in stack overflow and github. In: 2020 IEEE International
Conference on Software Maintenance and Evolution (ICSME), IEEE, pp
312–323
Vassallo C, Panichella S, Palomba F, Proksch S, Gall HC, Zaidman A (2020)
How developers engage with static analysis tools in different contexts. Em-
pirical Software Engineering 25(2):1419–1457
Wessel M, De Souza BM, Steinmacher I, Wiese IS, Polato I, Chaves AP,
Gerosa MA (2018) The power of bots: Characterizing and understanding
bots in oss projects. Proceedings of the ACM on Human-Computer Inter-
action 2(CSCW):1–19
Wohlin C, Aurum A (2015) Towards a decision-making structure for select-
ing a research design in empirical software engineering. Empirical Software
Engineering 20(6):1427–1455
XuY,SuiK,YaoR,ZhangH,LinQ,DangY,LiP,JiangK,ZhangW,LouJG,
et al. (2018) Improving service availability of cloud systems by predicting
disk error. In: 2018 USENIX Annual Technical Conference (USENIX ATC
18), pp 481–494
Xue J, Birke R, Chen LY, Smirni E (2016) Managing data center tickets:
Predictionandactivesizing.In:201646thAnnualIEEE/IFIPInternational
ConferenceonDependableSystemsandNetworks(DSN),IEEE,pp335–346
XueJ,BirkeR,ChenLY,SmirniE(2018)Spatial–temporalpredictionmodels
for active ticket managing in data centers. IEEE Transactions on Network
and Service Management 15(1):39–52
ZhangT,GaoC,MaL,LyuM,KimM(2019)Anempiricalstudyofcommon
challenges in developing deep learning applications. In: 2019 IEEE 30th In-
ternationalSymposiumonSoftwareReliabilityEngineering(ISSRE),IEEE,
pp 104–115
Zhang Y, Chen Y, Cheung SC, Xiong Y, Zhang L (2018) An empirical study
on tensorflow program bugs. In: Proceedings of the 27th ACM SIGSOFT
International Symposium on Software Testing and Analysis, pp 129–140
ZhaoG,HassanS,ZouY,TruongD,CorbinT(2021)Predictingperformance
anomalies in software systems at run-time. ACM Transactions on Software
Engineering and Methodology (TOSEM) 30(3):1–33
Zhao N, Chen J, Wang Z, Peng X, Wang G, Wu Y, Zhou F, Feng Z, Nie X,
Zhang W, et al. (2020) Real-time incident prediction for online service sys-
tems.In:Proceedingsofthe28thACMJointMeetingonEuropeanSoftware
EngineeringConferenceandSymposiumontheFoundationsofSoftwareEn-
gineering, pp 315–326