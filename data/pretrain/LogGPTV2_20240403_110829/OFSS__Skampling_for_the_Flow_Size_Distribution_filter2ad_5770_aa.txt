title:OFSS: Skampling for the Flow Size Distribution
author:Paul Tune and
Darryl Veitch
OFSS: Skampling for the Flow Size Distribution
Paul Tune
School of Mathematical Sciences
University of Adelaide, Australia
PI:EMAIL
Darryl Veitch
Melbourne School of Engineering
University of Melbourne, Australia
PI:EMAIL
ABSTRACT
We introduce a new method for ﬂow size estimation, the Op-
timised Flow Sampled Sketch, which combines the optimal
properties of Flow Sampling with the computational advan-
tages of a counter array sketch. Using Fisher Information as
a deﬁnitive basis of comparison, we show that it is superior
to alternatives in both model and traﬃc based comparisons.
Categories and Subject Descriptors
C.2.3 [Computer Communications Networks]: Network
operations—Network monitoring; G.3 [Mathematics of Com-
puting]: Probability and statistics—Probabilistic algorithms
Keywords
Fisher information; ﬂow size distribution; network measure-
ment; OFSS; skampling
1.
INTRODUCTION
The distribution of ﬂow size, the number of packets in
a ﬂow, is an important metric for numerous applications
including traﬃc modelling, management, and attack detec-
tion. In resource constrained environments such as within
core Internet routers however, accurate measurement of ﬂow
size can be challenging.
The traditional approach to fast approximate measure-
ment has been traﬃc sampling. For example ﬂow size es-
timation within Cisco’s Netﬂow [1] is based on a simple
pseudo-random per-packet sampling. In our prior work [6,
10, 11] we examined available sampling techniques in depth
and showed that ﬂow sampling (FS), where the random sam-
pling decision is made directly on ﬂows, has optimal prop-
erties. This conclusion was based on a rigorous evaluation,
in terms of Fisher Information, of the inherent abilities of
the sampling methods as information collectors. Unfortu-
nately, FS requires a ﬂow table supporting collision resolu-
tion, which incurs costs in memory (entries must store a ﬂow
key in addition to a counter), and in processing and latency
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full cita-
tion on the ﬁrst page. Copyrights for components of this work owned by others than
ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or re-
publish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from permissions@acm.org.
IMC’14, November 5–7, 2014, Vancouver, BC, Canada. 
Copyright is held by the owner/author(s). Publication rights licensed to ACM.
ACM 978-1-4503-3213-2/14/11 ...$15.00.
http://dx.doi.org/10.1145/2663716.2663732.
(key comparison needed on all insertions). Such costs trans-
late to bottlenecks, for example ‘heavy hitter’ ﬂows gener-
ating unsustainable insertion rates.
Sketches are compact data structures with fast update
rules that are used to approximately measure properties
over data streams. Sketches have been proposed to measure
many metrics including set membership [2], entropy [14],
heavy hitters [4], and ﬂow sizes [7].
In this paper we present a hybrid skampling approach to
data collection for ﬂow size measurement, called the OFSS
or Optimised Flow Sampled Sketch. The FSS consists of a
front-end sampling component, namely FS, feeding a sketch-
ing component ‘Sk’, the counting array sketch of [7]. It in-
cludes FS and Sk as special cases. The OFSS is an FSS
tuned according to an optimal tradeoﬀ between the infor-
mation gathering strengths and weaknesses of the FS and
Sk components. The result is FS-like statistical performance
without ﬂow table costs and bottlenecks. In designing OFSS
we build on and extend the Fisher analysis of FS and Sk pre-
sented in [12].
It is natural, since OFSS is a ‘Sample then Sketch’ method,
to compare against ‘Sketch then Sample’. We accordingly
compare against the ‘Sketch Guided Sampling’ approach of
Kumar et al. [8] (SGS). We ﬁnd SGS to have much worse
performance than OFSS, both in terms of information gath-
ering, and implementation. We also compare against an
enhanced counter array based method of Ribeiro et al. [9]
which also, in an implicit sense, incorporates sampling. We
show that this Eviction Sketch (ESk) underperforms OFSS
by a wide margin at meaningful sampling rates unless it is
calibrated very diﬀerently than in [9], resulting in consid-
erably higher memory use. For each of SGS and ESk we
provide the ﬁrst Fisher-based analysis.
The goal of this paper is to introduce the OFSS scheme, to
give its key properties, and to demonstrate its eﬀectiveness.
To that end, we forgo proofs (these will appear elsewhere
[13]), and focus on providing the underlying intuition. We do
not provide a detailed implementation model, however with
only a single hash and a single counter array, OFSS is very
simple, cheap enough to implement alongside existing packet
sampling based systems. Software will be made publically
available to facilitate use of the method, in particular for the
calculation of the optimal parameter value p∗
f of OFSS.
The paper is organised as follows. Section 2 gives back-
ground on the Fisher Information framework, and deﬁnes,
recalls and derives key results for FS and Sk, SGS and ESk.
Section 3 deﬁnes FSS then OFSS and describes their key
properties. Section 4 gives the statistical performance com-
235W(cid:88)
parisons on both model based and real data. We conclude
in Section 5.
2. BACKGROUND
We assume that a unique ﬂow key can be extracted from
each incoming packet, and that the ﬁrst packet of a ﬂow
(and hence the number of ﬂows) can be identiﬁed (e.g. SYN
packet in the case of TCP ﬂows).
We write (column) vectors in bold lower-case, matrices
in bold upper case, AT denotes the transpose of A, and
diag(x) an m × m diagonal matrix whose diagonal entries
are taken from the vector x ∈ Rm. We denote the set
{1, 2, . . . , S} by [S].
2.1 Modelling Framework, Fisher Information
Consider a measurement interval of duration T containing
Nf ﬂows. Of these ﬂows, Mk have size k packets, 1 ≤ k ≤ W ,
where W < ∞ is the maximum ﬂow size. The average ﬂow
size is D =(cid:80)W
k=1 kMk/Nf .
The ﬂow size distribution, the unknown vector parameter
we seek information on, is θ = [θ1, θ2, . . . , θW ]T where θk =
Mk/Nf , and obeys
0 < θk < 1 , k ∈ [W ],
θk = 1 .
(1)
This is a deterministic model of the data over the measure-
ment interval: randomness enters later through the action
of the measurement method itself.
k=1
Any estimator of θ is based on an underlying observable
which summarises the traﬃc, where it here takes the form
of a packet count random variable C. The discrete density
cj(θ) of C, j ≥ 0, depends on the details of the summary
method. Viewed as a function of θ for a ﬁxed value j of the
observed data, it is known as the likelihood : f (j, θ) = cj(θ).
The Fisher Information (FIM) is a measure of the infor-
mation the observable holds about the unknown parameters.
The unconstrained FIM is deﬁned as
J(θ) = E[(∇θ log f (j; θ))(∇θ log f (j; θ))T]
=
(∇θ log f (j; θ))(∇θ log f (j; θ))Tcj.
(2)
(cid:88)
j≥0
The importance of J lies in the fact that J−1 is the Cram´er–
Rao Lower Bound (CRLB), which lower bounds the covari-
ance matrix Σθ of any unbiased estimator of θ, i.e. Σθ ≥
J−1 in the positive semideﬁnite sense.
(cid:16)
(cid:17)−1
The constraints on θ in (1) increase available information.
GTJ
−1.
The constrained FIM is given in [5] by
−1G
I + = J
−1 − J
−1G
GTJ
(3)
Here the constraint gradient matrix is G(θ) = ∇θ(1T
W θ −
1) = 1W , where 1W is a W × 1 vector of ones.
Of chief interest are the diagonal entries of I +, since
Var(ˆθk) ≥ (I +)kk for any unbiased estimator. Compar-
ison of these between methods corresponds to comparing
the best performance the schemes are capable of support-
ing, thus reﬂecting their comparative eﬃciency in extracting
information from the traﬃc stream.
The methods we study involve multiple identically dis-
tributed counters, which are approximately independent if
Nf is large. The Fisher information arising from the entire
measurement interval is then just that of a single counter C
multiplied by the number of counters.
2.2 Four Methods and their FIMs
We deﬁne four existing methods and describe their FIM
and I + matrices. FS is the statistical method of choice, and
Sk a canonical implementation approach. SGS and ESk are
alternative skampling methods.
Flow Sampling (FS)
In ﬂow sampling ﬂows are sampled (dropped) independently
with probability pf (resp. qf ). Sampling a ﬂow means that
each packet within it is sampled, or none.
Here C represents the size of a randomly selected (typical)
ﬂow. For a ﬂow of size k, its density is given by c0 = qf ,
ck = pf , and ci = 0 for all i (cid:54)= {0, k}. From [10, 11], an
explicit expression for per-ﬂow J is given by
−1
1 , θ
and I + = J−1 − θθT = 1
JFS = pf diag(θ
−1
2 , . . . , θ
(cid:0)diag(θ) − θθT(cid:1), and so
−1
W ) + qf 1W 1T
W ,
(I +
FS)kk =
pf
θk(1 − θk)
pf
, k ∈ [W ].
(4)
(5)
The great strength of FS compared to other methods is
that estimators based on it do not have to try to correct
distortions: collected ﬂows are perfect.
Counter Sketch (Sk)
The counter sketch, introduced by Kumar et al. [7], consists
of an array of A packet counters, each initialised to zero
at the beginning of the measurement interval.
Incoming
packets are mapped independently and uniformly over the
counters, using a hash function mapping a ﬂow key, so that
each packet in a ﬂow maps to the same counter, but collisions
can occur so that a given counter may sum the packet counts
from two or more ﬂows. We deﬁne α = Nf /A to be the ﬂow
load factor, the average number of ﬂows per counter.
Here C is the ﬁnal packet count in a typical counter, at
the end of the measurement interval when all Nf ﬂows are
in the sketch. By using a Poisson assumption for C, the
density can be shown to be (see [13])
 e
−(cid:80)W
λxk
k
xk!
k=1
cj =
x∈Ωj
W(cid:89)
(cid:88)
packet count C = (cid:80)W
(J)ik = α2(cid:16)−1 +
∞(cid:88)
where xk is the number of ﬂows of size k in the counter,
λk = Mk/A = αθk, x = [x1, x2,··· , xW ] denotes a collision
pattern, and Ωj is the set of ﬂow collision patterns with
k=1 kxk = j. It follows that the per-
counter Fisher matrix is given by
(cj−icj−k)/cj
,
(7)
j=max(i,k)
and the per-ﬂow information is JSk = AJ/Nf = J/α. The
constrained per-ﬂow CRLB, I +
Sk, is given by substituting
JSk into (3).
The strength of Sk is that all packets of all ﬂows are ef-
ﬁciently collected, but as the sketch becomes increasingly
full as α increases, we expect information-destroying ﬂow
collisions to become severe.