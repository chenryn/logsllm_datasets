8.2 Single Static Attack Evaluation
In this section, we perform experiments with the following
conditions: (1) launch attacks with one attack method and
different volumes; (2) deploy a single mitigation strategy
to the switch; (3) legitimate clients maintain a reasonable
number of normal connections with the targeted server.
Attack volume estimation. In Jaqen, the estimated volume
of an attack is useful for the controller to compute the resource
allocation decisions for mitigation. Our testbed can generate
up to 380 Gbps trafﬁc with different attack volumes. In gen-
eral, a higher attack volume leads to a more accurate volume
estimation as it becomes easier to catch. We generate different
volumes of attack trafﬁc for evaluation (0.1%,0.2%,0.5% to
10% of total).
As shown in Figure 12(a), when the ﬂood attack volume
is small from 0.1% to 0.2%, the volume estimation has large
relative errors (from 134% to 32.9%). It is understandable
(a) Relative errors of estimating the
volumes of ﬂood attacks.
(b) Relative errors of estimating the
volumes of ampliﬁcation attacks.
Figure 12: Single static attack evaluation—part one.
as some legitimate trafﬁc can be estimated as attack trafﬁc
at this attack volume. However, such attack trafﬁc that is
below our detection threshold 0.5%, poses small impacts to
the network and technically has no difference from legitimate
users. When attack trafﬁc increases, the relative errors of the
measured volumes signiﬁcantly decrease to less than 2%. In
addition, as depicted in Figure 12(b) for ampliﬁcation attacks,
the volume estimation incurs low relative errors (<3%) as
most of the legitimate requests have received responses.
Mitigation effectiveness. To evaluate the effectiveness of
Jaqen’s mitigation, we conduct experiments leveraging six
implemented attack countermeasures. As described in the
following, each mitigation mechanism achieves low FPRs
and FNRs when the attack trafﬁc is signiﬁcant:
• SYN ﬂood attack: Our mitigation strategy has a switch-
optimized SYN proxy and an approximate allowlist to
record the legitimate ﬂows passing the SYN cookie veriﬁ-
cation. There is some probability that the allowlist falsely
allows some attack ﬂows. This probabilistic error from
Bloom ﬁlters incurs FNs for the mitigation as shown in
Figure 13(a). As attack volume increases, the SYN-ﬂood
mitigation achieves 0 FPR and small FNRs.
• ICMP ﬂood attack: We launch ICMP ﬂood with generated
ICMP Echo Request packets (type_flag=8) with random
source IPs. ICMP packets are usually rare in the normal traf-
ﬁc and the best-practice is to block them completely [82].
Our reaction-based mitigation is better than that as it does
not affect ping-based diagnosis in the normal case. As de-
picted in Figure 13(a), when the ICMP ﬂood trafﬁc is small
from 0.1% to 0.5%, the counters will not raise the alarm
as it is considered normal. When ICMP trafﬁc is more sig-
niﬁcant, the ﬁlter starts blocking the ICMP Echo Requests
which incurs some FPs.
• Elephant TCP/UDP ﬂows: When the attacker leverages
high-bandwidth zombie machines to launch a ﬂood attack,
they can generate elephant ﬂows toward the targeted vic-
tim. We allocate different trafﬁc bandwidths for the attack
from 0.1% to 10% and split the bandwidth for 100 elephant
UDP ﬂows. We realize this attack by MoonGen rate lim-
iting and a ﬁxed-sized 100 random source IP generation
when sending UDP packets. Figure 13(a) shows that the
heavy hitter-based ﬁltering achieves low FPRs and FNRs
USENIX Association
30th USENIX Security Symposium    3841
1.02.55.07.510.0Attack Volume Ratio (%)020%40%60%80%Relative ErrorAttack vol. is too smallSYN FloodICMP FloodElephant FLows1.02.55.07.510.0Attack Volume Ratio (%)01%2%3%4%5%Relative ErrorDNS AmplificationNTP AmplificationMemcached Amplification(a) Mitigation FPR/FNR of on ﬂood attacks.
(b) Mitigation FPR/FNR on DNS/NTP attacks.
(c) Mitigation FPR/FNR on Mem. attacks.
Figure 13: Single static attack evaluation—part two.
server with DPDK. As depicted in Figure 14(a), there is no no-
ticeable processing latency change at the microsecond-level
for a Jaqen-enabled switch.
Hardware resource usage: We measure the resource usage
of Jaqen.7 P4 allows developers to deﬁne their own packet
formats and program the packet actions by a series of match-
action tables, which are mapped into different stages in a
sequential order, along with dedicated resources (e.g., match
entries, hash bits, SRAMs, and action slots) for each stage.
Figure 14(b) shows the resource usage of a switch with de-
tection plus SYN, DNS, NTP mitigation modules. In effect,
there is still adequate room for additional services.
8.4 Large Hybrid and Dynamic Attacks
In this section, we evaluate the effectiveness of Jaqen when
handling a hybrid of attack methods. Given that we have only
one programmable switch available, we can deploy up to three
different mitigation strategies at a time due to resource con-
straints. For simplicity, we consider four scenarios using three
different attack methods using 90% of the total bandwidth
(≈350 Gbps). For a hybrid and dynamic evaluation (S4), we
run Jaqen for 5 hours with dynamically changing attacks
(three randomly picked attack methods) every 15 min. For a
larger-scale network-wide resource deployment, we evaluate
using our greedy heuristic.
Scenario I [S1]: ﬂood attacks. In this attack scenario, we
launch three ﬂood attacks simultaneously (SYN ﬂood, ICMP
ﬂood, and elephant ﬂows) with 120 Gbps each. As we can
see in the ﬁrst bar of Figure 15(a), Jaqen’s mitigation mod-
ules work well with negligible FPR (≤0.005) and median
FNR=0.0213 in ten independent runs using legitimate trafﬁc
replayed from the CAIDA-2018 traces [76].
Scenario II [S2]: ampliﬁcation attacks. In this attack sce-
nario, we launch three ampliﬁcation attacks simultaneously
(DNS, NTP, and Memcached ampliﬁcations) with equal high
throughput (120 Gbps). As presented in the second bar of
Figure 15(a), Jaqen easily mitigates the majority of the attack
trafﬁc with tiny FPRs and small FNRs (≈0.0272).
7The actual switch hardware resources are proprietary information.
(a) Processing latency of a Barefoot
switch w/ and w/o Jaqen.
(b) Hardware resource of Jaqen with
detection and mitigation modules.
Figure 14: Micro benchmarks.
from 0.009 to 0.012 as the underlying sketching algorithm
guarantees high ﬁdelity.
• DNS/NTP ampliﬁcation: We set up local DNS servers with
BIND 9 [83]. On each local DNS server, we write a C++
custom packet generator to send forged DNS requests lo-
cally (≈ 0.9 Gbps per server) and the ampliﬁed responses
(≈ 30 to 35 Gbps/server) are sent to the designated destina-
tion. Similarly, we set up local NTP servers with the NTP
spool from ntp.org and generate modiﬁed NTP requests to
the local NTP servers. As depicted in Figure 13(b), when
there is 0.5 Mil legitimate requests inserted, the mitigation
FPRs are negligible and FNRs are low from 0.022 to 0.029.
While there are 1.5 Mil requests recorded, the FPRs and
FNRs are still low from 0.024 to 0.028.
• Memcached ampliﬁcation: In this attack, we conduct a
stress test to add more numbers of unresponded Mem-
cached requests to the allowlist. When the caching services
are running abnormally with 2 to 3 Mil unmatched requests
recorded in the CBF, the FPRs and FNRs will be increased
to 0.1 and 0.18 (Figure 13(c)). Therefore, if there are in-
deed more benign ﬂows to be recorded, more mitigation
resources are needed.
8.3 Microbenchmarks
Latency: One advantage of using hardware switches for de-
fense is that the processing latency is extremely small for
legitimate trafﬁc. To conﬁrm this, we evaluate the processing
latency of Jaqen with a detection module and three mitigation
functions using different sized UDP packets sent from a single
3842    30th USENIX Security Symposium
USENIX Association
00.030.070.1FPRICMP FP casesSYNICMPElephant1.02.55.07.510.0Attack Volume Ratio (%)00.030.070.1FNRSYN FN cases00.030.070.1FPRLow FPRs1.5M legit reqs1M legit reqs0.5M legit reqs1.02.55.07.510.0Amplified DNS/NTP Traffic Ratio (%)00.030.070.1FNRLow FNRs0.00.10.20.30.4FPR3M legit reqs2M legit reqs1M legit reqs1.02.55.07.510.0Amplified Memcached Traffic Ratio (%)0.00.10.20.30.4FNRStress test cases641282565121024Packet size (Byte)0.00.20.40.60.8Latency (µs)Switch w/o JaqenSwitch w/ JaqenMatchHashBitSRAMActionOn-chip Resources0.20.40.60.81.0Resource UsageJaqenRemaining(a) FPR/FNR of mitigating different hybrid attacks.(b) 5-hour experiment on dynamic, hybrid attacks.(c) Controller CPU utilization on dynamic attacks.
Figure 15: Hybrid and dynamic attack evaluation.
Topologies
Missouri Net.
GTS CE
Colt Telecom
Dial Telecom
Nodes
Solver (s)
Jaqen (s)
Errors
67
149
153
193
113
245
273
301
0.03
0.05
0.05
0.05
0.0112
0.0161
0.0161
0.0162
Table 7: Jaqen vs. MIP solver on different topologies.
Scenario III [S3]: Flood and ampliﬁcation attacks. In this
attack scenario, we combine one ﬂood attack with two am-
pliﬁcation attacks (SYN ﬂood, DNS ampliﬁcation, and NTP
ampliﬁcation). Similar to the results of S1 and S2, Jaqen
achieves ultra-low FPRs and FNRs.
Scenarios IV [S4]: Hybrid, dynamic, and variable-sized
attacks. In this attack scenario, we launch a hybrid, dynamic
attack with changing attack volumes. Every 15 min, we ran-
domly pick three attacks from the total six methods with
different volumes (each from 30 to 300 Gbps with 10 Gbps
as an interval). As shown in Figure 15(b), Jaqen handles
this scenario: Attack volume estimation has high accuracy
≥0.971, and the mitigation has high effectiveness shown in
FPR, FNR, and F-score. On the controller side, we monitor
the per-second CPU usage using Intel Vtune ampliﬁer [84].
As depicted in Figure 15(c), large hybrid and dynamic attacks
do not exhaust the controller CPU (Intel Pentium quad-core)
due to our efﬁcient ofﬂine estimation and resource allocation.
Network-wide simulation. To evaluate the efﬁciency and
correctness of Jaqen’s resource allocation algorithm, we pick
four medium- to large-scale ISP topologies from Topology
Zoo [71] and test them over our greedy heuristic simulator. As
an ISP, we simulate BGP using Quagga [85] and Mininet [86],
and randomly select ten edge routers with a valid conﬁgura-
tion (all pairs routed). When simulating a 600 Gbps attack
with six attacks, each BGP router will obtain valid routing
decisions and these decisions are used as input to the resource
manager. As in Table 7, the reported errors of our simulator
are the relative errors from the optimal resource usage, and
our resource managers can return a near-optimal allocation in
real-time (<0.1 sec).
9 Other Related Work
In §2, 3, we have already discussed the closest related work.
We cover other related work here and refer the readers to
survey papers for further reading [87–89].
FPGA-based DDoS defense. Network vendors and re-
searchers have proposed to build DDoS defense using FPGA
such as [90, 91]. The research on exploring the ﬂexibility of
using FPGA for DDoS is limited [92–94]. As a general note,
FPGA isn’t as performant as programmable ASICs and has a
much higher per Gbps cost.
NPU-based DDoS defense. NPU is one kind of network pro-
cessors that target network applications, e.g., packet switching
and ﬁrewalls. There are proposals on using NPU based hard-
ware appliances to conduct DDoS defense and other security-
oriented tasks, such as [95], [96].
Network telemetry using programmable switches. A num-
ber of recent works show how to use programmable switches
for memory-efﬁcient and per-packet level network teleme-
try [20, 57, 97–101]. These are related to our work focusing
on DDoS detection and mitigation.
10 Conclusions
DDoS attacks remain a primary concern for Internet security
today. The emerging programmable switches bring a unique
opportunity to revisit ISP-scale DDoS defense for volumetric
attacks. In this paper, we show that a performant, ﬂexible,
and cost-efﬁcient ISP defense system is well within our reach.
Jaqen leverages state-of-the-art switch-optimized strategies to
achieve high detection accuracy and mitigation effectiveness,
and Jaqen’s attack coverage can be easily extended using
the API. When handling large-scale attack volumes, Jaqen
quickly reacts to dynamic and hybrid attacks with minimal
latency for legitimate trafﬁc. These demonstrated beneﬁts,
along with the natural high performance and low cost, make
the programmable switch ASICs a viable challenger to the
existing hardware appliances and software solutions in ISPs.
11 Acknowledgements
We would like to thank our shepherd Angelos Stavrou and the
anonymous reviewers for their thorough comments and feed-
back that helped improve the paper. This work was supported
in part by CONIX Research Center, one of six centers in
JUMP, a Semiconductor Research Corporation program spon-
sored by DARPA, NSF Grants CNS-1700521, CNS-1813487,
CNS-1955422, and CCF-1918757.
USENIX Association
30th USENIX Security Symposium    3843
00.010.020.03FPRNegligible FPRs  & Low FNRsS1S2S3Hybrid Attack Scenarios00.010.020.03FNR012345Time (h)00.91.0ScoreMitigation F-scoreAttack vol. estimationMitigation FPRMitigation FNR020406080100Time (s)020406080100CPU Utilization (%)Compute/deploy  resourceController  sleepReferences
[1] “Q1 2018 DDoS Trends Report.” https://bit.ly/2JDR1D9.
[2] “Transmission Control Protocol, DARPA Internet Program Pro-
tocol Speciﬁcation.” https://www.barefootnetworks.com/
use-cases/in-nw-DDoS-detection/, Barefoot, 2019.
[3] M. Zhang, G. Li, S. Wang, C. Liu, A. Chen, H. Hu, G. Gu, Q. Li,
M. Xu, and J. Wu, “Poseidon: Mitigating volumetric ddos attacks
with programmable switches,” in Proc. of IEEE NDSS, 2020.
[4] Y. Afek, A. Bremler-Barr, and L. Shaﬁr, “Network anti-spooﬁng with
SDN data plane,” in Proc. of IEEE Infocom, 2017.
[5] J. Bai, J. Bi, M. Zhang, and G. Li, “Filtering spoofed ip trafﬁc using
switching asics,” in Proc. of ACM SIGCOMM Posters and Demos,
2018.
[6] G. Grigoryan and Y. Liu, “Lamp: Prompt layer 7 attack mitigation