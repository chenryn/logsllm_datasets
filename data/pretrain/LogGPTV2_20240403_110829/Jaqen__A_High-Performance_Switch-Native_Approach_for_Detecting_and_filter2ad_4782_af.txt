### 8.2 Single Static Attack Evaluation

In this section, we perform experiments under the following conditions:
1. Launch attacks using a single attack method with varying volumes.
2. Deploy a single mitigation strategy to the switch.
3. Maintain a reasonable number of normal connections between legitimate clients and the targeted server.

#### Attack Volume Estimation

In Jaqen, accurate estimation of the attack volume is crucial for the controller to compute resource allocation decisions for mitigation. Our testbed can generate up to 380 Gbps of traffic with different attack volumes. Generally, higher attack volumes lead to more accurate volume estimations as they are easier to detect. We generate attack traffic ranging from 0.1% to 10% of the total traffic for evaluation.

As shown in Figure 12(a), when the flood attack volume is small (0.1% to 0.2%), the volume estimation has large relative errors (from 134% to 32.9%). This is understandable because some legitimate traffic can be misclassified as attack traffic at these low volumes. However, such low-volume attack traffic (below our detection threshold of 0.5%) has minimal impact on the network and is practically indistinguishable from legitimate traffic. As the attack traffic increases, the relative errors of the measured volumes significantly decrease to less than 2%. Additionally, as depicted in Figure 12(b) for amplification attacks, the volume estimation incurs low relative errors (<3%) as most legitimate requests have received responses.

#### Mitigation Effectiveness

To evaluate the effectiveness of Jaqen’s mitigation, we conduct experiments using six implemented attack countermeasures. Each mitigation mechanism achieves low false positive rates (FPRs) and false negative rates (FNRs) when the attack traffic is significant:

- **SYN Flood Attack**: Our mitigation strategy employs a switch-optimized SYN proxy and an approximate allowlist to record legitimate flows that pass the SYN cookie verification. There is a small probability that the allowlist may falsely allow some attack flows due to probabilistic errors from Bloom filters, leading to FNs. As the attack volume increases, the SYN-flood mitigation achieves 0 FPR and small FNRs (Figure 13(a)).

- **ICMP Flood Attack**: We launch ICMP flood attacks using generated ICMP Echo Request packets (type_flag=8) with random source IPs. ICMP packets are rare in normal traffic, and the best practice is to block them completely [82]. Our reaction-based mitigation is more nuanced, as it does not affect ping-based diagnostics in normal conditions. As shown in Figure 13(a), when the ICMP flood traffic is small (0.1% to 0.5%), the counters do not raise an alarm. When ICMP traffic becomes more significant, the filter starts blocking ICMP Echo Requests, which may result in some false positives (FPs).

- **Elephant TCP/UDP Flows**: When attackers use high-bandwidth zombie machines to launch a flood attack, they can generate elephant flows toward the targeted victim. We allocate different traffic bandwidths for the attack (0.1% to 10%) and split the bandwidth into 100 elephant UDP flows. We implement this attack using MoonGen rate limiting and a fixed-sized 100 random source IP generation when sending UDP packets. Figure 13(a) shows that heavy hitter-based filtering achieves low FPRs and FNRs, ranging from 0.009 to 0.012, as the underlying sketching algorithm guarantees high fidelity.

- **DNS/NTP Amplification**: We set up local DNS servers with BIND 9 [83] and write a C++ custom packet generator to send forged DNS requests locally (≈ 0.9 Gbps per server). The amplified responses (≈ 30 to 35 Gbps/server) are sent to the designated destination. Similarly, we set up local NTP servers with the NTP spool from ntp.org and generate modified NTP requests to the local NTP servers. As depicted in Figure 13(b), when there are 0.5 million legitimate requests, the mitigation FPRs are negligible, and FNRs are low (0.022 to 0.029). With 1.5 million requests, the FPRs and FNRs remain low (0.024 to 0.028).

- **Memcached Amplification**: In this attack, we conduct a stress test to add more unresponded Memcached requests to the allowlist. When the caching services are running abnormally with 2 to 3 million unmatched requests recorded in the CBF, the FPRs and FNRs increase to 0.1 and 0.18 (Figure 13(c)). Therefore, if there are indeed more benign flows to be recorded, additional mitigation resources are required.

### 8.3 Microbenchmarks

#### Latency

One advantage of using hardware switches for defense is the extremely low processing latency for legitimate traffic. To confirm this, we evaluate the processing latency of Jaqen with a detection module and three mitigation functions using different sized UDP packets sent from a single server with DPDK. As depicted in Figure 14(a), there is no noticeable processing latency change at the microsecond level for a Jaqen-enabled switch.

#### Hardware Resource Usage

We measure the resource usage of Jaqen. P4 allows developers to define their own packet formats and program packet actions using a series of match-action tables, which are mapped into different stages in a sequential order, along with dedicated resources (e.g., match entries, hash bits, SRAMs, and action slots) for each stage. Figure 14(b) shows the resource usage of a switch with detection plus SYN, DNS, and NTP mitigation modules. There is still adequate room for additional services.

### 8.4 Large Hybrid and Dynamic Attacks

In this section, we evaluate the effectiveness of Jaqen when handling a hybrid of attack methods. Given that we have only one programmable switch available, we can deploy up to three different mitigation strategies at a time due to resource constraints. For simplicity, we consider four scenarios using three different attack methods, each using 90% of the total bandwidth (≈350 Gbps). For a hybrid and dynamic evaluation (S4), we run Jaqen for 5 hours with dynamically changing attacks (three randomly picked attack methods) every 15 minutes. For a larger-scale network-wide resource deployment, we evaluate using our greedy heuristic.

#### Scenario I [S1]: Flood Attacks

In this attack scenario, we launch three flood attacks simultaneously (SYN flood, ICMP flood, and elephant flows) with 120 Gbps each. As shown in the first bar of Figure 15(a), Jaqen’s mitigation modules work well with negligible FPR (≤0.005) and median FNR = 0.0213 in ten independent runs using legitimate traffic replayed from the CAIDA-2018 traces [76].

#### Scenario II [S2]: Amplification Attacks

In this attack scenario, we launch three amplification attacks simultaneously (DNS, NTP, and Memcached amplifications) with equal high throughput (120 Gbps). As presented in the second bar of Figure 15(a), Jaqen easily mitigates the majority of the attack traffic with tiny FPRs and small FNRs (≈0.0272).

#### Scenario III [S3]: Flood and Amplification Attacks

In this attack scenario, we combine one flood attack with two amplification attacks (SYN flood, DNS amplification, and NTP amplification). Similar to the results of S1 and S2, Jaqen achieves ultra-low FPRs and FNRs.

#### Scenario IV [S4]: Hybrid, Dynamic, and Variable-Sized Attacks

In this attack scenario, we launch a hybrid, dynamic attack with changing attack volumes. Every 15 minutes, we randomly pick three attacks from the total six methods with different volumes (each from 30 to 300 Gbps with 10 Gbps as an interval). As shown in Figure 15(b), Jaqen handles this scenario: Attack volume estimation has high accuracy (≥0.971), and the mitigation is highly effective, as shown in FPR, FNR, and F-score. On the controller side, we monitor the per-second CPU usage using Intel Vtune Amplifier [84]. As depicted in Figure 15(c), large hybrid and dynamic attacks do not exhaust the controller CPU (Intel Pentium quad-core) due to our efficient offline estimation and resource allocation.

### Network-Wide Simulation

To evaluate the efficiency and correctness of Jaqen’s resource allocation algorithm, we pick four medium- to large-scale ISP topologies from Topology Zoo [71] and test them over our greedy heuristic simulator. As an ISP, we simulate BGP using Quagga [85] and Mininet [86], and randomly select ten edge routers with a valid configuration (all pairs routed). When simulating a 600 Gbps attack with six attacks, each BGP router will obtain valid routing decisions, which are used as input to the resource manager. As shown in Table 7, the reported errors of our simulator are the relative errors from the optimal resource usage, and our resource managers can return a near-optimal allocation in real-time (<0.1 sec).

### 9 Other Related Work

In Sections 2 and 3, we have already discussed the closest related work. Here, we cover other related work and refer readers to survey papers for further reading [87–89].

#### FPGA-Based DDoS Defense

Network vendors and researchers have proposed building DDoS defense using FPGAs, such as [90, 91]. Research on exploring the flexibility of using FPGAs for DDoS is limited [92–94]. Generally, FPGAs are not as performant as programmable ASICs and have a much higher per-Gbps cost.

#### NPU-Based DDoS Defense

NPUs are a type of network processor targeting network applications, such as packet switching and firewalls. Proposals for using NPU-based hardware appliances for DDoS defense and other security-oriented tasks include [95, 96].

#### Network Telemetry Using Programmable Switches

Recent works show how to use programmable switches for memory-efficient and per-packet level network telemetry [20, 57, 97–101]. These are related to our work focusing on DDoS detection and mitigation.

### 10 Conclusions

DDoS attacks remain a primary concern for Internet security today. The emergence of programmable switches brings a unique opportunity to revisit ISP-scale DDoS defense for volumetric attacks. In this paper, we show that a performant, flexible, and cost-efficient ISP defense system is well within reach. Jaqen leverages state-of-the-art switch-optimized strategies to achieve high detection accuracy and mitigation effectiveness, and Jaqen’s attack coverage can be easily extended using the API. When handling large-scale attack volumes, Jaqen quickly reacts to dynamic and hybrid attacks with minimal latency for legitimate traffic. These demonstrated benefits, along with the natural high performance and low cost, make programmable switch ASICs a viable challenger to existing hardware appliances and software solutions in ISPs.

### 11 Acknowledgements

We would like to thank our shepherd Angelos Stavrou and the anonymous reviewers for their thorough comments and feedback that helped improve the paper. This work was supported in part by the CONIX Research Center, one of six centers in JUMP, a Semiconductor Research Corporation program sponsored by DARPA, NSF Grants CNS-1700521, CNS-1813487, CNS-1955422, and CCF-1918757.