### Optimized Text

#### 3.2 Algorithmic Approach

If the initial geolocation result meets the required quality, no further satellite coordination is necessary; otherwise, the preliminary result is included in an alert message and sent to the ground.

Achieving simultaneous coverage in overlapping scenarios results in the highest quality geolocation, marking the completion of QoS optimization. In underlapping cases, iterative QoS enhancement through sequential localization can be performed progressively. As additional information from various sources allows for further accuracy improvements, we can continue to use satellites that consecutively revisit the signal location until one of the following conditions is met:
1. The estimated error of the geolocation result falls below a threshold.
2. The alert-message delivery deadline is too close to allow another iteration.
3. The signal terminates.

This mechanism, which leverages multiple satellites that consecutively revisit a signal, is referred to as sequential multiple coverage.

Our framework progressively enhances QoS by continuously expanding the scale of coordination among peer satellites within a window of opportunity. While satellite coordination is crucial, coordination expansion and termination are facilitated by message-passing over crosslinks between neighboring satellites, as detailed in the next subsection.

**Figure 3** illustrates several snapshots of the QoS optimization process, showing how peer satellites coordinate through message-passing at different stages. As shown in **Figure 3(a)**, the first satellite (S1) that detects the signal, after completing its geolocation computation, will send a coordination-request message to the next expected satellite (S2) if it sees an opportunity for further QoS enhancement. This message includes the initial measurements and the preliminary result. Upon receiving this message, S2 can perform the next iteration of geolocation computation, generating a more accurate result when its footprint moves to the target location.

The coordination process continues along the chain of satellites that sequentially revisit the target (see **Figure 3(b)**). The coordination terminates when any of the following conditions are met:
- **TC-1:** The estimated error becomes sufficiently small.
- **TC-2:** The elapsed time since the initial detection exceeds a threshold.
- **TC-3:** The signal stops.

Conditions **TC-1** and **TC-2** are routinely checked at the end of each accuracy-improvement iteration, allowing the satellite performing the computation to decide whether to request another peer to join the coordination. Condition **TC-3** can become true after a coordination request is made. The coordinated optimization is highly distributed, with no central authority. Coordination termination is also enabled by message-passing between peer satellites, similar to coordination expansion.

As shown in **Figure 3(c)**, when a satellite (Si+1) completes its computation and determines that further coordination is impossible or unnecessary due to one of the termination conditions, it encloses the final result in an alert message and sends it to the ground station. Additionally, Si+1 sends a "coordination done" message to Si. This message is then passed upstream to Si−1, and so on, until the initial satellite (S1) is notified, as illustrated in **Figure 3(d)**.

If Si does not receive a "coordination done" notification from Si+1 when the elapsed time since the initial detection exceeds a threshold (a function of the alert-message-delivery deadline and Si's ordinal number i), Si assumes that Si+1 is unable to deliver the alert message because **TC-3** has occurred before Si+1's footprint reaches the target location (as shown in **Figure 4**, where the shaded cellular phone with no emission represents a terminated signal). In this case, Si treats its result as the final result and sends it to the ground. A "coordination done" notification is then sent to Si−1 and propagated downstream.

It is essential to ensure that all participating peers, including S1, receive the "coordination done" notification in a timely manner to avoid unnecessary alarms. Therefore, the decision to request the next arriving peer to join the coordination must be based on whether **TC-2** has become true. Specifically, **TC-2** is defined by the inequality: `getT ime() − t0 > τ − (nδ + Tg)`, where `t0` is the initial detection time, `τ` is the system-level deadline for alert-message delivery, `δ` is the maximum inter-satellite message-delivery delay, `n` is the satellite's ordinal number, and `Tg` is the maximum geolocation computation time. If this inequality holds, Sn will stop the iterative accuracy improvement and send its geolocation result and "coordination done" message to the ground and Sn−1, respectively.

Conversely, if **TC-2** does not hold, Sn will send a coordination request to Sn+1 and wait for the "coordination done" message. If no such message is received when the time expires, Sn will assume that Sn+1 is unable to complete the computation due to **TC-3** or has become fail-silent. Sn will then send its geolocation result and "coordination done" message to the ground and Sn−1, respectively, as shown in **Figure 4**.

Alternatively, we could let Sn+1, which receives a coordination request but cannot complete the computation, be responsible for sending the result received from Sn to the ground. This would eliminate the need for "coordination done" message-passing downstream. However, the backward-messaging scheme ensures that the alert message is delivered even if Sn+1 becomes fail-silent during computation.

#### 3.3 Discussion

The opportunity-adaptive nature of our approach allows us to strive for the best possible QoS while ensuring that, in the worst case, the preliminary geolocation result is delivered in a timely manner. This shares a conceptual basis with the imprecise computation scheme, which trades precision for timeliness. Imprecise computation techniques prevent missed deadlines and provide graceful degradation under transient overload. In contrast, the OAQ framework progressively exploits peer coordination in a highly distributed environment without relying on a scheduling authority or explicit task decomposition. The sequence and extent of result refinement depend on dynamically determined opportunities.

Compared to the opportunistic scheduling framework, which focuses on system throughput, the OAQ approach aims to achieve a QoS objective that is a function of multiple system attributes and requires no team leader or decision authority. Our approach is designed to exploit mobile resource redundancy, driven by the resources' readiness-to-serve rather than traditional resource availability.

#### 4. Model-Based Evaluation

##### 4.1 Assumptions

To evaluate the effectiveness of the OAQ framework, we conduct a model-based evaluation using the RF constellation described in Section 2. This constellation was chosen because:
1. It was designed in-house at JPL, and an interactive simulation model for visualization and coarse-grained quantitative measures (e.g., coverage time) is available.
2. Its relatively small size allows for a closed-form solution and efficient evaluation experiments, while its design principles are consistent with those for constellations with a large number of nodes.

We assume the constellation is protected by scheduled and threshold-triggered ground-spare deployment policies. A "scheduled ground-spare deployment policy" means ground spares are launched according to a predetermined schedule to restore the constellation to its original capacity (112 satellites). A "threshold-triggered ground-spare deployment policy" means ground spares are launched to restore an orbital plane to its original capacity (14 active satellites plus 2 in-orbit spares) when the number of operational satellites in the plane drops to a threshold.

As shown in **Figure 1**, the ratio of the total area covered by overlapped footprints to that covered by single footprints varies with latitude. This ratio is lowest at the equator and highest at the poles. In our area of interest, around 30° north latitude, the ratio is moderately high. Locations near the center line of a footprint trajectory are least likely to be covered by overlapped footprints, making them the worst-case scenario. To be conservative and manage the complexity of the analytic model, we base the QoS measure on this worst case. We also assume that satellite failures do not occur during the interval from initial signal detection to the completion of coordinated geolocation computation. For this evaluation, we use the no-backward-messaging option.

##### 4.2 Model

###### 4.2.1 QoS Measure

The OAQ framework allows us to strive for the best possible accuracy in position determination based on dynamically determined opportunities. We define a measure that quantifies the system's ability to deliver service in terms of QoS levels. If the service delivered by the constellation can be rated by n QoS levels, we let Y be a random variable that takes values from the set {y | y = 1, 2, ..., n}. The QoS measure is the probability that the system will deliver a geolocation result with a quality at level y or above.