result which requires no further satellite coordination; oth-
erwise the preliminary result will be enclosed in the alert
message and sent to the ground.
While reaching a simultaneous coverage in the overlap-
ping case implies the attainment of a geolocation result
with the best quality and thus marks the completion of QoS
2The deadline means the latest time (measured from the initial detection
of a target) by which the alert message must be sent.
Proceedings of the 2003 International Conference on Dependable Systems and Networks (DSN’03) 
0-7695-1959-8/03 $17.00 (c) 2003 IEEE
optimization, the iterative QoS enhancement based on se-
quential localization in the underlapping case can be car-
ried out progressively. Informally speaking, as additional
information from diverse sources enables further accuracy-
improvement iterations, we can continue to exploit the
satellites that consecutively revisit the signal location until
1) the estimated error of the geolocation result drops below
a threshold, 2) the alert-message delivery deadline becomes
too close to allow another iteration, or 3) the signal termi-
nates. Since this mechanism takes advantage of multiple
satellites that revisit a signal consecutively, we call it se-
quential multiple coverage.
Our framework is thereby an approach to progressive
QoS enhancement via continuously expanding the scale of
the coordination among peer satellites, throughout a win-
dow of opportunity. While satellite coordination plays
an important role in the framework, coordination expan-
sion and termination are enabled by message-passing over
crosslinks between neighboring satellites, as described in
the next subsection.
3.2 Algorithmic Approach
if S1,
Figure 3 provides several snapshots of a QoS optimiza-
tion process, which illustrate how peer satellites coordi-
nate through message-passing at different stages. As shown
the ﬁrst satellite that detects the
in Figure 3(a),
signal, sees further opportunity for QoS enhancement af-
ter completing its geolocation computation, it will send a
coordination-request message to a peer S2 that is expected
to visit the target next. This message contains the ini-
tial measurements and preliminary result. By receiving the
message, S2 will obtain the information it needs for the next
iteration of geolocation computation. Consequently, when
its footprint moves to the target location, S2 will be able to
generate a result with better accuracy.
The coordination process will continue (see Figure 3(b))
along the chain consisting of satellites that revisit the target
one after another3. Whereas the coordination will terminate
when one of the following conditions becomes true:
TC-1) The estimated error becomes sufﬁciently small;
TC-2) The elapsed time since the initial detection ex-
ceeds a threshold; or
TC-3) The signal stops.
While TC-1 and TC-2 can be routinely checked at the
end of each accuracy-improvement iteration so that the
satellite that performs the computation can decide whether
it should ask another peer to join the coordination, TC-3
3For the sake of illustration, we assume here that the target is located
near the center line of a plane’s footprint trajectory so that the chain of
coordinating satellites coincides with a portion of that plane. However, the
algorithm itself is general and is not derived based on that assumption.
can become true after a coordination request is made. Fur-
thermore, the coordinated optimization is highly distributed
in nature, meaning that there is no team leader or decision
authority. Accordingly, coordination termination is also en-
abled by message-passing between peer satellites, similar
to coordination expansion. More speciﬁcally, as shown in
Figure 3(c), when a satellite Si+1 completes computation
and realizes that further coordination for QoS enhancement
is impossible or unnecessary because one of the termination
conditions holds, the satellite will enclose the ﬁnal result in
an alert message and send it to the ground station. Mean-
while, Si+1 will send a “coordination done” message to Si.
The notiﬁed Si will then pass the message to Si−1, and so
on. In this manner, S1, the satellite that performed the ini-
tial geolocation, will be notiﬁed at the end, as illustrated in
Figure 3(d).
Now suppose that Si does not receive a “coordination
done” notiﬁcation from Si+1 when the elapsed time since
the initial detection exceeds a threshold which is a func-
tion of the alert-message-delivery deadline and Si’s ordinal
number i (as described in the next paragraph). Then Si will
assume that Si+1 is unable to deliver the alert message be-
cause TC-3 becomes true before Si+1’s footprint arrives at
that location, as illustrated in Figure 4 (where the shaded
cellular phone with no emission represents a terminated sig-
nal). Consequently, Si will treat its result as the ﬁnal result
and send it to the ground. Analogous to the case shown in
Figure 3(c), a “coordination done” notiﬁcation will be sent
to Si−1 and propagated along the downstream of the chain.
It is important to ensure that all the participating peers,
including S1, receive the “coordination done” notiﬁcation
in time, so that they will not be unnecessarily alarmed.
Therefore, the decision (by a satellite that just completes
geolocation computation) on whether to request the next
arriving peer to join coordination must be made accord-
ing to whether TC-2 has become true. More speciﬁcally,
TC-2 is formulated by the expression getT ime() − t0 >
τ − (nδ + Tg), where t0 is the point of initial detection, τ is
the (system-level) deadline for alert-message delivery, δ is
the maximum inter-satellite message-delivery delay, n is the
satellite’s ordinal number which identiﬁes its position in the
coordination chain, and Tg is the maximum amount of time
it takes a satellite to perform geolocation computation. Thus
the right side of the above inequality can be regarded as the
“local threshold” of the elapsed time, according to which Sn
will determine whether it should request Sn+1 to join the
coordination. More precisely, if the inequality (i.e., TC-2)
holds, then there will be no guarantee that Sn+1 will be able
to complete the next iteration and that all the satellites in the
downstream can receive the notiﬁcation from Sn+1 in time.
In that case, Sn will decide to stop the iterative accuracy
improvement and send its geolocation result and “coordina-
tion done” message to the ground and Sn−1, respectively.
Proceedings of the 2003 International Conference on Dependable Systems and Networks (DSN’03) 
0-7695-1959-8/03 $17.00 (c) 2003 IEEE
Coordination request
S2
S1
• • •
• • •
Coordination request Si+1
Si
• • •
• • •
• • •
• • •
"Coordination done" S2
S1
Si
"Coordination done"
Si+1
Geolocation result
N
S
N
S
N
S
• • •
N
• • •
S
(a) After initial detection
(b) Successive coordination
(c) No further opportunity
(d) Coordination completion
Figure 3: Coordinated QoS Enhancement
By the same token, if TC-2 does not hold, then Sn will send
a coordination request to Sn+1 and will thereafter wait for
the “coordination done” message so long as the condition
getT ime() − t0 < τ − (n − 1)δ holds. If no such message
is received from Sn+1 when time expires, Sn will assume
that Sn+1 is unable to complete computation due to TC-3 or
Sn+1 becomes fail-silent, and thus Sn will send its geoloca-
tion result and “coordination done” message to the ground
and Sn−1, respectively, as shown in Figure 4 and described
earlier.
• • •
"Coordination done"
Si
(No reply by τ − (i−1)δ )
Si+1
• • •
G
e
o
l
o
c
a
t
i
o
n
r
e
s
u
l
t
S
N
Figure 4: Guaranteed Geolocation Report
Alternatively, we may let Sn+1, the satellite that receives
a coordination request but is unable to carry out the com-
putation successfully, be responsible for sending the result
received from Sn to the ground. This would eliminate the
need for the “coordination done” message-passing along the
downstream of the chain. However, with the backward-
messaging scheme, the delivery of the alert message will be
guaranteed even if Sn+1 becomes fail-silent in the middle
of computation.
3.3 Discussion
The opportunity-adaptive nature of our approach thus
permits us to strive for the best possible QoS, while guar-
anteeing that in the worst case, with high probability the
preliminary geolocation result will be delivered in a timely
fashion. Therefore, the OAQ framework shares a con-
ceptual basis with the imprecise computation scheme [9],
which was motivated by the fact that one could often
trade off precision for timeliness. Imprecise computation
techniques prevent missed deadlines and provide graceful
degradation under a transient overload. With the impre-
cise computation scheme, optional tasks can be scheduled
to reﬁne the result and can also be left unﬁnished at its
deadline, if necessary, lessening the quality of the computa-
tion. In contrast, the thrust in the OAQ framework is to pro-
gressively exploit peer coordination in a highly distributed
environment. The OAQ algorithm thus does not rely on
a scheduling authority or explicit task decomposition. In-
stead, the sequence and extent of result reﬁnement depend
upon a dynamically determined opportunity.
The difference between our approach and the oppor-
tunistic scheduling framework [10] is that the matchmaker
in their framework focuses on system throughput, whereas
the QoS objective of the OAQ approach is a function of mul-
tiple system attributes and our algorithm requires no team
leader or decision authority. More importantly, since our
approach is intended to exploit mobile resource redundancy,
the derivation of our algorithm is driven by the resources’
readiness-to-serve, rather than the traditionally deﬁned re-
source availability.
4 Model-Based Evaluation
4.1 Assumptions
In order to assess the effectiveness of the OAQ frame-
work, we conduct a model-based evaluation. The analytic
model is constructed according to the RF constellation de-
scribed in Section 2. We choose to use this constellation for
the quantitative study because 1) the design is conducted
in-house at JPL, and an interactive simulation model for vi-
sualization and coarse-grained quantitative measures (e.g.,
coverage time) is available, and 2) while its relatively small
size allows a closed-form solution of and efﬁcient evalua-
tion experiments for the QoS measure, the design principle
of this constellation is consistent with those for constella-
tions that have massive numbers of nodes. Therefore, eval-
uation of this system sufﬁces to serve the purpose of effec-
tiveness demonstration.
We assume that the constellation is protected by sched-
uled and threshold-triggered ground-spare deployment poli-
cies. By “scheduled ground-spare deployment policy,” we
Proceedings of the 2003 International Conference on Dependable Systems and Networks (DSN’03) 
0-7695-1959-8/03 $17.00 (c) 2003 IEEE
mean a policy in which ground spares will be launched ac-
cording to a predetermined schedule to restore the constella-
tion to its original capacity (so that it will again be equipped
with a total of 112 satellites).
In contrast, “threshold-
triggered ground-spare deployment policy” refers to a pol-
icy in which ground spares will be launched to restore an
orbital plane to its original capacity (i.e., 14 active satel-
lites plus 2 in-orbit spares), when the number of operational
satellites in the plane drops to a threshold.
As shown in Figure 1, due to the spherical shape of the
earth, the ratio of the total area covered by overlapped foot-
prints to that covered by single footprints changes across
different latitudes. In particular, the ratio is the lowest at the
equator and the highest at the poles. It follows that in our
◦
north latitude,
assumed area of interest, which is around 30
the ratio is moderately high. Further, as shown by Figure 1
and the interactive simulation generated by the Satellite Or-
◦
north (or south)
bit Analysis Program (SOAP), at around 30
latitude, a location on or near the center line of a footprint
trajectory will be least likely to be covered by overlapped
footprints, relative to the locations at the two sides of the
trajectory (which are heavily overlapped with the footprint
trajectories of the adjacent planes). Hence, the situations in
which a signal is located at or near the center line of a foot-
print trajectory can be regarded as the worst case, given that
◦
latitude. In order to be
the emitting source is around 30
conservative and keep the complexity of the analytic model
manageable, we let the QoS measure be formulated based
on this worst case. In addition, we assume that satellite fail-
ure will not occur during the interval from the initial signal
detection to the completion of the coordinated geolocation
computation4. Accordingly, we assume the use of the no-
backward-messaging option in this evaluation.
4.2 Model
4.2.1 QoS Measure
Since the OAQ framework allows us to strive for the best
possible accuracy for position determination with respect to
a dynamically determined opportunity, we deﬁne a measure
that quantiﬁes a system’s ability to deliver service in terms
of QoS levels. More speciﬁcally, if the service delivered
by the constellation can be rated by n QoS levels, we can
let Y be a random variable that takes its value from the set
{y | y = 1, 2, . . . , n}. We thereby let the QoS measure
be the probability that the system will deliver a geoloca-
tion result with the quality at level y or above (given that