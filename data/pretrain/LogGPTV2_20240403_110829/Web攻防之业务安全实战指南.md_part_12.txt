http://www.xxx.com/index.php?m=CustomerService&a=resetPwdEml&token=dGVz
dEAxMjYuY29tJjk5NTk=
第二封邮件：
http://www.xxx.com/index.php?m=CustomerService&a=resetPwdEml&token=dGVz
dEAxMjYuY29tJjI2ODI=
第三封邮件：
http://www.xxx.com/index.php?m=CustomerService&a=resetPwdEml&token=dGVz
dEAxMjYuY29tJjk4NzY=
步骤三：通过对比发现Token参数在不断地变化，参数似乎是通过base64编码的，对
此可以对这三个链接中的Token参数做base64解码操作，结果如表12-1所示
表12-1 解码结果
步骤四：解码后可以发现每一个Token的值是可以预测的，Token的生成机制应该
是“base64编码（用户邮箱+随机4位验证码）”，这样就可以通过暴力枚举获得验证码，加
上用户名再进行base64编码，最后得到任意用户的密码找回凭证。
12.6.3 修复建议
密码找回的Token不能使用时间戳或者用户邮箱和较短有规律可循的数字字符，应当
使用复杂的Token生成机制让攻击者无法推测出具体的值。
12.7 密码找回流程绕过测试
12.7.1 测试原理和方法
很多网站的密码找回功能一般有以下几个步骤。
（1）用户输入找回密码的账号；
（2）校验凭证：向用户发送短信验证码或者找回密码链接，用户回填验证码或单击
链接进入密码重置页面，以此方式证明当前操作用户是账号主人；
（3）校验成功进入重置密码页面。
在找回密码逻辑中，第二步校验凭证最为重要。不是账号主人是无法收到校验凭证
的，试想有没有办法可以绕过第二步凭证校验，直接进入第三步重置密码呢？
用户修改密码需要向服务器发送修改密码请求，服务器通过后再修改数据库中相应的
密码，所以在测试中我们首先要收集三个步骤的请求接口，重点是收集到最后一步重置密
码的接口，这样我们可以直接跳过凭证校验的接口去尝试直接重置密码。
在下面的密码找回案例中，需要用户填写要找回的账号然后验证身份，之后才可以进
入设置新密码的页面，我们需要对这个流程所有请求的接口做分析，找出最后一步重置密
码的接口，接着使用URL测试是否可以跳过验证身份环节。
12.7.2 测试流程
步骤一：先注册一个自己的账号用于测试所有流程，如图 12-32 所示，在找回密码页
面中先输入自己的账号单击“下一步”按钮，找回密码页面 URL 为
GET/account/findPassword.html。
图12-32 找回密码流程界面
步骤二：进入凭证验证流程，这里使用的是自己的账号，所以直接获取凭证，输入后
进入下一步，如图 12-33 所示。当前第二步的验证凭证 URL 为
GET/forgetpwd/findPassNext.do。
步骤三：通过验证以后就可以进入第三步重置密码了，如图12-34所示。当前重置密
码的URL为GET/forgetpwd/emailValidateNext.do。
图12-33 第二步发送邮箱凭证验证
图12-34 第三步重置新密码
步骤四：通过使用自己的账号使用正常顺序流程找回密码成功，我们也获取到了三个
步骤的所有URL，最后整理如下。
（1）GET/account/findPassword.html//输入用户账号页面
（2）GET/forgetpwd/findPassNext.do//验证身份页面
（3）GET/forgetpwd/emailValidateNext.do//设置新密码页面
接下来可以尝试在第一步输入账号后进入第二步验证身份页面，在这个页面直接修改
URL为第三步的URL，访问看看是否可以直接进入密码重置页面，如图12-35所示。
图12-35 第二步发送邮箱凭证验证
经过测试以后发现不需要验证身份可以直接进入重置密码页面，如图 12-36 所示，那
么最重要的验证身份这一步就被轻松绕过了，如图12-37所示。
图12-36 第二步发送邮箱凭证验证
图12-37 跳过第二部验证修改密码成功
12.7.3 修复建议
防止跳过验证步骤一定要在后端逻辑校验中确认上一步流程已经完成。
第13章 业务接口调用模块测试
13.1 接口调用重放测试
13.1.1 测试原理和方法
在短信、邮件调用业务或生成业务数据环节中，如短信验证码、邮件验证码、订单生
成、评论提交等，对业务环节进行调用（重放）测试。如果业务经过调用（重放）后多次
生成有效的业务或数据结果，可判断为存在接口调用（重放）问题。
13.1.2 测试过程
如图13-1所示，在进行接口调用重放测试时，攻击者与普通用户的区别在于他会通过
工具（如Burp Suite）抓取订单请求，然后在短时间内通过Burp Suite工具的Repeater对请
求（如订单请求）进行多次重放，服务器则会根据请求在短时间内执行多个有效操作（如
生成订单）。
测试过程以某购买机票系统为例。
步骤一：如图13-2所示，在购买机票“提交订单”环节抓取数据包。
图13-1 接口调用重放测试流程图
图13-2 提交订单
步骤二：如图13-3所示，使用Burp Suite工具对生成订单的数据包进行重放测试。
步骤三：如图13-4所示，查看返回结果，订单在1分钟内重复生成。
图13-3 Burp Suite抓取提交订单的请求
图13-4 一分钟内生成重复订单
13.1.3 修复建议
（1）对生成订单环节采用验证码机制，防止生成数据业务被恶意调用。
（2）每一个订单使用唯一的Token，订单提交一次后，Token失效。
13.2 接口调用遍历测试
13.2.1 测试原理和方法
Web 接口一般将常见的一些功能需求进行封装，通过传入不同的参数来获取数据或
者执行相应的功能，其中一个最常见的场景就是通过接口传入id参数，返回对应id的一些
信息。在安全测试中，我们可以使用Burp Suite作为HTTP代理，记录所有请求和响应信
息，通过Burp Suite以登录后的状态对整站进行爬取，再使用过滤功能找到传入id参数的
HTTP请求，然后通过Intruder对id参数进行遍历，看是否返回不同的响应信息。如果不同
的id值对应不同用户的信息，则说明存在漏洞。
13.2.2 测试过程
如图13-6所示，攻击者在测试前，使用Brup Suite的爬虫功能对网站进行爬取，然后
筛选出包含用户标识参数的请求（如id、uid），对筛选后的每一个请求进行分析，判断
其是否包含敏感信息。如果包含敏感信息，则通过Brup Suite的Intruder设置用户标识参数
为变量来进行遍历，如果返回他人信息，则漏洞存在。
图13-5 接口调用遍历测试流程图
步骤一：如图13-6所示，使用Burp Suite的爬虫功能，从重点关注的目录（一般为网
站根目录）开始爬取，在 HTTP history 选项卡中选中要开始爬取的项，单击鼠标右键，
选择“Spider from here”，爬取登录后的网站链接。
图13-6 使用Burp Suite爬取网站根目录
如图13-7所示，爬取的结果会在Target→Site map中显示，在爬取完毕后，再使用Burp
Suite的过滤功能筛选出带有uid参数的链接，没有包含uid字符串的HTTP请求会被隐藏起
来，不会在HTTP history中显示。
图13-7 过滤出带有uid的请求
如图13-8所示，在请求中找到uid参数出现的位置。
图13-8 定位uid参数的出现位置
步骤二：如图13-9所示，查看对应的HTTP请求的响应包中是否带有想要的信息。由
HTTP 请求的参数我们可以猜测到这个请求的功能，如 method 参数值为
video.getUserVideoRecordList，作用是获取对应 uid 的视频播放的历史记录，由响应内容
可以确定。
图13-9 查看对应的请求和响应
HTTP响应中包含一些敏感信息，如观看视频时的ip 地址、视频id、视频的标题等。
如图13-9所示，第一个title的值为All Polished&＃039；&quot；&lt；\/img&gt；，在浏览
器的console终端通过document.write函数解码输出后，得到All Polished'"</img，如图13-10
所示。
如图13-11所示，将title的值和视频历史播放记录进行比较，可以发现完全一致。
图13-10 解码响应中的title值
图13-11 与历史播放记录进行比较
步骤三：如图13-12所示，将HTTP请求发送到Intruder，设置后四位数字为变量，进
行遍历测试。
图13-12 发送到Intruder
如图13-13所示，我们设置后四位数字为变量。
图13-13 设置变量
如图13-14所示，设置Payload为0000～9999的数字。
图13-14 设置payload
设置完Payload后，单击“Start attack”按钮即可开始遍历测试。
步骤四：分析 Intruder 的测试结果，不存在对应的 uid 时，服务器会返回 code为-201
的响应；存在时，返回的响应会包含"ip"（带双引号）这个字符串，以此来过滤出成功的
请求，如图13-15所示。
图13-15 对Interder结果进行过滤
如图13-16所示，可以看到过滤后的请求，均是有播放记录的请求，确认存在接口调
用遍历测试漏洞。
图13-16 确认漏洞
13.2.3 修复建议
在Session中存储当前用户的凭证或者id，只有传入凭证或者id参数值与Session中的一
致才返回数据内容。
13.3 接口调用参数篡改测试
13.3.1 测试原理和方法
在短信、邮件调用业务环节中，例如短信验证码、邮件验证码。修改对应请求中手机
号或邮箱地址参数值提交后，如果修改后的手机号或邮箱收到系统发送的信息，则表示接
口数据调用参数可篡改。
13.3.2 测试过程
如图13-17所示，攻击者拥有账号B，用户拥有账号A。攻击者对账号A进行密码找回
操作，服务器给账号 A 的邮箱或者手机发送密码重置信息，攻击者进入验证码验证环
节，此时攻击者单击“重新发送验证码”并拦截重新发送这个请求，将请求中的接收验证码
用户的邮箱或者手机修改为自己的。如果接收到密码重置信息，则存在漏洞。
图13-17 接口调用参数篡改测试流程图
测试过程以某手机App系统为例。
步骤一：如图13-18所示，在短信验证码页面单击“重新发送”同时抓取数据包。
图13-18 发送验证码并使用Burp Suite抓包
步骤二：如图13-19所示，在截取数据中将param.telno参数（指定发送手机号码）修
改为其他手机号码。
图13-19 Burp Suite修改参数值
步骤三：如图13-20所示，修改后被指定的手机号收到相应验证码短信。
图13-20 确认漏洞
13.3.3 修复建议
（1）会话Session中存储重要的凭证，在忘记密码、重新发送验证码等业务中，从
Session获取用户凭证而不是从客户请求的参数中获取。
（2）从客户端处获取手机号、邮箱等账号信息，要与 Session 中的凭证进行对比，
验证通过后才允许进行业务操作。
13.4 接口未授权访问/调用测试
13.4.1 测试原理和方法
在正常的业务中，敏感功能的接口需要对访问者的身份进行验证，验证后才允许调用
接口进行操作。如果敏感功能接口没有身份校验，那么攻击者无须登录或者验证即可调用
接口进行操作。在安全测试中，我们可以使用Burp Suite作为HTTP代理，在登录状态下记
录所有请求和响应信息，筛选出敏感功能、返回敏感数据的请求。在未登录的情况下，使
用浏览器访问对应敏感功能的请求，如果返回的数据与登录状态后的一致，则存在漏洞或
缺陷。
13.4.2 测试过程