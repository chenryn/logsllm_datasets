    配置文件的初始默认部分配置您的系统，以便多路径设备的名称格式为
    `/dev/mapper/mpathn；`{.literal}
    如果没有此设置，则多路径设备的名称将别名化为该设备的
    WWID。如果您不想使用用户友好的名称，您可以输入以下命令：
    ``` literallayout
    # mpathconf --enable --user_friendly_names n
    ```
    如果您需要在启动 multipath 守护进程后编辑多路径配置文件，则必须执行
    `systemctl reload multipathd.service`{.literal} 命令以使更改生效。
3.  保存配置文件并退出编辑器。
4.  启动 multipath 守护进程并创建多路径设备：
    ``` literallayout
    # systemctl start multipathd.service
    ```
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
如果您删除了 `device-mapper-multipath`{.literal} 软件包，则不会删除
`/etc/multipath.conf`{.literal} 文件，或者 `/etc/multipath`{.literal}
目录中的任何文件，因为该目录可以包含仅限于当前列出的文件。您可能需要在以后的
`device-mapper-multipath`{.literal} 软件包安装中手动删除这些文件。
:::
:::
::: section
::: titlepage
# []{#configuring-dm-multipath_configuring-device-mapper-multipath.html#ignoring-local-disks-when-generating-multipath-devices_configuring-dm-multipath}在生成多路径设备时忽略本地磁盘 {.title}
:::
有些机器在其内部磁盘中使用本地 SCSI 卡，我们不建议在这些设备中使用 DM
多路径。如果将 `find_multipaths`{.literal} 配置参数设置为
`on`{.literal}，则不必在这些设备上禁用多路径。
如果您没有将 `find_multipaths`{.literal} 配置参数设置为
`on`{.literal}，您可以使用以下步骤修改 DM
多路径配置文件，以便在配置多路径时忽略本地磁盘。
::: orderedlist
**流程**
1.  确定哪些磁盘是内部磁盘。在这些示例中，`/dev/sda`{.literal}
    是内部磁盘：
    ::: itemizedlist
    -   显示现有的多路径设备：
        ``` screen
        # multipath -v2 -l
        SIBM-ESXSST336732LC____F3ET0EP0Q000072428BX1 dm-2 WINSYS,SF2372
        size=33 GB features="0" hwhandler="0" wp=rw
        `-+- policy='round-robin 0' prio=0 status=active
          |- 0:0:0:0 sda 8:0 active undef running
        ```
    -   显示 DM 多路径可能创建的附加多路径设备：
        ``` screen
        # multipath -v2 -d
        : SIBM-ESXSST336732LC____F3ET0EP0Q000072428BX1 undef WINSYS,SF2372
        size=33 GB features="0" hwhandler="0" wp=undef
        `-+- policy='round-robin 0' prio=1 status=undef
          |- 0:0:0:0 sda 8:0  undef ready running
        ```
    :::
2.  编辑 `/etc/multipath.conf`{.literal} 文件的 `blacklist`{.literal}
    部分，使其包含此设备。
    使用它的 WWID 属性识别该设备。虽然您可以使用 `devnode`{.literal}
    类型识别 `sda`{.literal}
    设备，但这不是一个安全的步骤，因为重新引导时 `/dev/sda`{.literal}
    无法保证相同。
    在上例中，`/dev/sda`{.literal} 设备的 WWID 是
    `SIBM-ESXSST336732LC___F3ET0Q000072428BX1`{.literal}。要忽略这个设备，请在
    `/etc/multipath.conf`{.literal} 文件中包含以下内容：
    ``` screen
    blacklist {
          wwid SIBM-ESXSST336732LC____F3ET0EP0Q000072428BX1
    }
    ```
3.  通过运行以下命令之一修改多路径配置文件后，验证
    `/etc/multipath.conf`{.literal} 文件：
    ::: itemizedlist
    -   要显示任何配置错误，请运行：
        ``` screen
        # multipath -t > /dev/null
        ```
    -   要显示使用添加的更改显示新配置，请运行：
        ``` screen
        # multipath -t
        ```
    :::
4.  重新载入 `/etc/multipath.conf`{.literal} 文件并重新配置
    `multipathd`{.literal} 守护进程以使更改生效：
    ``` screen
    # service multipathd reload
    ```
:::
::: itemizedlist
**其它资源**
-   `multipath.conf(5)`{.literal} 手册页
:::
:::
::: section
::: titlepage
# []{#configuring-dm-multipath_configuring-device-mapper-multipath.html#configuring-additional-storage-devices_configuring-dm-multipath}配置附加存储设备 {.title}
:::
默认情况下，DM 多路径包括对支持最常见存储阵列的支持，该存储阵列支持 DM
多路径。
::: itemizedlist
**流程**
-   查看默认配置值，包括支持的设备：
    ``` literallayout
    # multipathd show config
    # multipath -t
    ```
-   可选： 要添加默认不支持的附加存储设备，请编辑
    `/etc/multipath.conf`{.literal} 文件并插入适当的设备信息。
    以下示例 ilustrates 如何添加 HP Open-V
    系列的信息。这会将设备设置为队列，并在所有路径失败后每个重试 12
    次重试，每个重试 5 秒。
    ``` literallayout
    devices {
            device {
                    vendor "HP"
                    product "OPEN-V"
                    no_path_retry 12
            }
    }
    ```
:::
:::
::: section
::: titlepage
# []{#configuring-dm-multipath_configuring-device-mapper-multipath.html#setting-up-multipathing-in-the-initramfs-file-system_configuring-dm-multipath}在 initramfs 文件系统中设置多路径 {.title}
:::
您可以在 `initramfs`{.literal}
文件系统中设置多路径。如果您不使用需要多路径的设备，则不需要设置它，直到引导离开
`initramfs`{.literal} 文件系统为止。
::: itemizedlist
**先决条件**
-   您已在系统中配置了 DM 多路径。
:::
::: itemizedlist
**流程**
-   运行以下命令，使用多路径配置文件重建 `initramfs`{.literal}
    文件系统：
    ``` literallayout
    # dracut --force --add multipath
    ```
    如果您从 `initramfs`{.literal}
    文件系统运行多路径并对多路径配置文件进行任何更改，则必须重建
    `initramfs`{.literal} 文件系统以使更改生效。
:::
:::
:::
[]{#enabling-multipathing-on-nvme-devices_configuring-device-mapper-multipath.html}
::: chapter
::: titlepage
# []{#enabling-multipathing-on-nvme-devices_configuring-device-mapper-multipath.html#enabling-multipathing-on-nvme-devices_configuring-device-mapper-multipath}第 4 章 在 NVMe 设备中启用多路径 {.title}
:::
您可以通过光纤传输（如光纤通道(FC)）连接到您的系统的多路径 NVMe
设备。您可以在多个多路径解决方案之间进行选择。
::: section
::: titlepage
# []{#enabling-multipathing-on-nvme-devices_configuring-device-mapper-multipath.html#native-nvme-multipathing-and-dm-multipath_enabling-multipathing-on-nvme-devices}本地 NVMe 多路径和 DM 多路径 {.title}
:::
NVMe 设备支持原生多路径功能。当在 NVMe 中配置多路径时，您可以在标准 DM
多路径和原生 NVMe 多路径之间进行选择。
DM 多路径和原生 NVMe 多路径都支持 NVMe 设备的 Asymmetric Namespace
Access(ANA)多路径方案。ANA 识别目标与发起方之间的优化路径并提高性能。
当启用原生 NVMe 多路径时，它会全局地应用于所有 NVMe
设备。它可以提供更高的性能，但不包含 DM 多路径提供的所有功能。例如，原生
NVMe 多路径只支持
`故障切换（failover）`{.literal}和`循环（round-robin）`{.literal}路径选择方法。
默认情况下，Red Hat Enterprise Linux 9 中启用了 NVMe
多路径，也是推荐的多路径解决方案。
:::
::: section
::: titlepage
# []{#enabling-multipathing-on-nvme-devices_configuring-device-mapper-multipath.html#proc_enabling-native-nvme-multipathing_enabling-multipathing-on-nvme-devices}启用原生 NVMe 多路径 {.title}
:::
此流程使用原生 NVMe 多路径解决方案在连接的 NVMe 设备中启用多路径。
::: itemizedlist
**先决条件**
-   NVMe 设备连接到您的系统。
    有关通过光纤传输连接 NVMe 的详情请参考 [NVMe over fabric
    设备概述](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/managing_storage_devices/nvme-over-fabrics-using-rdma_managing-storage-devices#overview-of-nvme-over-fabric-devices_nvme-over-fabrics-using-rdma){.link}。
:::
::: orderedlist
**步骤**
1.  检查内核中是否启用了原生 NVMe 多路径：
    ``` screen
    # cat /sys/module/nvme_core/parameters/multipath
    ```
    这个命令显示以下之一：
    ::: variablelist
    [`N`{.literal}]{.term}
    :   禁用原生 NVMe 多路径。
    [`Y`{.literal}]{.term}
    :   启用原生 NVMe 多路径。
    :::
2.  如果禁用原生 NVMe 多路径，使用以下方法之一启用它：
    ::: itemizedlist
    -   使用内核选项：
        ::: orderedlist
        1.  在内核命令行中添加 `nvme_core.multipath=Y`{.literal} 选项：
            ``` screen
            # grubby --update-kernel=ALL --args="nvme_core.multipath=Y"
            ```
        2.  在 64 位 IBM Z 构架中更新引导菜单：
            ``` screen
            # zipl
            ```
        3.  重启系统。
        :::
    -   使用内核模块配置文件：
        ::: orderedlist
        1.  使用以下内容创建 `/etc/modprobe.d/nvme_core.conf`{.literal}
            配置文件：
            ``` screen
            options nvme_core multipath=Y
            ```
        2.  备份 `initramfs`{.literal} 文件系统：
            ``` screen
            # cp /boot/initramfs-$(uname -r).img \
                 /boot/initramfs-$(uname -r).bak.$(date +%m-%d-%H%M%S).img
            ```
        3.  重建 `initramfs`{.literal} 文件系统：
            ``` screen
            # dracut --force --verbose
            ```
        4.  重启系统：
        :::
    :::
3.  可选： 在运行的系统中，更改 NVMe 设备中的 I/O
    策略，以便在所有可用路径中分发 I/O：
    ``` screen
    # echo "round-robin" > /sys/class/nvme-subsystem/nvme-subsys0/iopolicy
    ```
4.  可选：使用 `udev`{.literal} 规则永久设置 I/O 策略。使用以下内容创建
    `/etc/udev/rules.d/71-nvme-io-policy.rules`{.literal} 文件：
    ``` screen
    ACTION=="add|change", SUBSYSTEM=="nvme-subsystem", ATTR{iopolicy}="round-robin"
    ```
:::
::: orderedlist
**验证**
1.  检查您的系统是否识别 NVMe 设备：
    ``` screen
    # nvme list
    Node             SN                   Model                                    Namespace Usage                      Format           FW Rev
    ---------------- -------------------- ---------------------------------------- --------- -------------------------- ---------------- --------