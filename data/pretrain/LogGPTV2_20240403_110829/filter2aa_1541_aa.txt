KILLSUIT  
RESEARCH 
F-Secure Countercept Whitepaper
F-Secure  |  Killsuit research
2
CONTENTS
What is Killsuit and how does it work ......................................................3
What is Killsuit ...................................................................................3
How does Killsuit infect a machine  ...............................................3
How does it work .............................................................................3
How to deploy and configure a KillSuit instance .........................4
Extra capabilities – Some modular functions .............................. 6
How does KillSuit install itself on a system ............................................ 9
Initial run at installation identifiers analysis .................................. 9
Hunting for the list & into the rabbit hole ....................................11
Refocus and results ........................................................................14
How to detect and remediate a KillSuit compromise ......................... 15
How to detect KillSuit installation ................................................ 15
How to remove Killsuit from your host .......................................16
Conclusion ............................................................................................... 17
Appendix ..................................................................................................18
Killsuit instance ID list ....................................................................18
Full Danderspritz driver list ...........................................................18
Registry list –  
First part ..........................................................................................18
Registry list –  
Second Part .....................................................................................18
Sources .....................................................................................................21
F-Secure  |  Killsuit research
3
WHAT IS KILLSUIT AND HOW DOES IT WORK
What is Killsuit
Killsuit (KiSu) is a modular persistence and capability mechanism employed in post-exploitation 
frameworks including Danderspritz (DdSz), which was developed by The Equation Group and 
leaked in April 2017 by The Shadow Brokers as part of the “Lost in Translation” leak. KiSu is used for 
two reasons - it enables persistence on a host and it works as a sort of catalyst allowing specific 
exploitative functions to be conducted. 
How does Killsuit infect a machine 
As KiSu is a post-exploitation tool it is used as part of a hands-on-keyboard attack where a 
malicious actor is actively compromising a network. The DdSz exploitation framework includes 
various tools including PeddleCheap (PC), a payload that can allow for a highly tuned interaction 
with a compromised host. PC is a post-exploitation tool that can install KiSu instances on a host in 
order to run its various capabilities as part of the attacker’s process. Although PC is loaded onto 
a host typically though a tool such as DoublePulsar and as such injected into a running process, 
KiSu is installed deliberately as an action of the PC payload as a post-exploitation operation.
FIGURE 01 – KILLSUIT INSTALLATION AND FUNCTION DIAGRAM
Dandersprtiz  
Operator
PeddleCheap  
Agent
Killsuit Instance
DarkSkyline Module
FlewAvenue Module
PeddleCheap  
Persistence through 
Killsuit SOTI
How does it work
KiSu is a facilitator for specific functions within the DdSz framework. As such KiSu is not a 
malicious actor itself, but rather a component for other operations; it essentially works as a 
local repository for installation and operation for other tools. Each instance is installed into an 
encrypted database within the registry. In order to utilize the appropriate instance the operator 
must “connect” to the instance and then perform relevant actions. It is worth noting that a PC 
agent can only “connect” to one KiSu instance for the duration of its operation. These instances 
each have their own specialized functionality associated with specific tools such as “StrangeLand” 
(StLa), which is used for covert keylogging using the Strangeland keylogger; “MagicBean” (MaBe), 
which is used for WiFi man-in-the-middle (MITM) attacks by installing necessary drivers for 
packet injections, and many others (full list in appendix). 
F-Secure  |  Killsuit research
4
DecibelMinute (DeMi) is believed to be the controller for KiSu installation and module 
management. This framework component is seen in operation during instance/module 
installations. As its name suggests, this is a stealthy mechanism that can bypass some driver 
signing issues that may be encountered with installations by using the connected KiSu instance 
to facilitate the process. DeMi also can install modules into an instance from the internal module 
store to increase capabilities - such as FlewAvenue (FlAv),  DoormanGauze (DmGz) or DarkSkyline 
-  which are used for the frameworks proprietary IPv4 & IPv6 network stacks and network 
monitoring. However, if the related instances are removed from the host the specialised tools and 
loaded modules no longer function. 
How to deploy and configure a KillSuit instance
As mentioned this tool allows for customised operational configurations through its instance & 
modular structure. One of the instance types allows for a persistence of the PC agent primary to 
the DdSz framework operations (the PC instance type). Although there are multiple persistence 
methods, the KiSu related persistence method for PC is one of the more advanced and stealthy 
methods in the frameworks arsenal as it can use the SOTI bootloader. 
In order to use the KiSu persistence you must first install the PC instance on the host using the 
command “KiSu_install –type pc”. This installs the necessary data/packages to the host within the 
encrypted registry DB to be utilised during persistence installation. Next you must connect to the 
newly created instance using command “kisu_connect –type pc”. This tells the current PC agent 
that we are connecting to the PC KiSu instance on the host, as previously mentioned an agent can 
only connect to one instance at a time (therefore can only use one KiSu instance at a time although 
you can have many installed). Now we run “pc_install”, this is what creates the persistence. 
Figure 02 – Installation and connection to PC KiSu instance
This command will generate a menu with a number of options and status information. You will 
see that one says “KiSu connection”, this checks that the session has an active connection to a PC 
instance type on the host. If the connection is not there it will prompt whether the user wants to 
install or connect to an instance, it is pretty user friendly for such a sophisticated tool.
F-Secure  |  Killsuit research
5
Figure 03 – Default values for persistence installation
Now you can change the load method, this has a default of “AppCompat” but we want to change 
it to “KillSuit”. You will see that on selecting the option the status changes. However, one stat 
is still yellow which is “Payload”. You must create a new PC payload on the host to use for the 
persistence. Now one of the key things to note here is the payload level, this is a level 4 PC 
payload which is relevant when trying to connect to it later. Select the payload type you want and 
run through the options the same as you would have done for creating the original PC instance. 
You can install a knocking trigger for this payload if you want which is a powerful triggering 
mechanism, but we will talk about that another time. Once the payload is created you will be 
taken back to the menu, finally with no yellow options.
Figure 04 – KiSu persistence configuration
Figure 05 – Connection level for persistence KiSu PC instance
Select installation and the script will communicate with the connected instance and install the 
relevant persistence. Now you can safely reboot the machine. For reconnection, while in the PC tab 
change the “connection target” port from the drop down to a level 4 connection port. If you do 
not make this change you will not be able to connect to the PC instance type that is loaded at boot 
on your target machine. You now have a KiSu persistence instance of PC on the target machine.
F-Secure  |  Killsuit research
6
Verify both installation and driver running, if both are success then you can start packet capture 
activity on the target. This can be controlled through either the control mechanism or specific 
scripts such as “DSky_start”. It is worth noting that the file used to store the packet captures 
is in the tff (true font file) format that is also used for the SOTI persistence mechanism. Once 
sufficient capture has occurred, the operator can then request to retrieve the captures which are 
automatically attempted to be compiled into a pcap file for analysis.
Figure 06 – DarkSkyline configuration options for execution
Figure 07 – Executing DarkSkyline packet collection from capture session
Extra capabilities – Some modular functions
DarkSkyline
DarkSkyline (DSky) is a packet capture utility that can be installed as part of any KiSu instance by 
installing the associated module from the module store. By connecting to a specific instance, 
typically the PC persistence module, the operator can install the necessary module for the DSky 
tool to operate. To do this the operator needs to use the command “darkskyline –method 
demi” in order to specify using the DSky control mechanism in association with the KiSu control 
element DeMi. As when installing persistence, the menu will display certain criteria in different 
colours, if you have followed the steps correctly the “Use DecibelMinute” & “Connected” options 
should both be green with the value “true”. If this is the case you can then select “install tools” 
followed by “load driver”.
F-Secure  |  Killsuit research
7
FlewAvenue
FlewAvanue (flav) is the codename for the custom TCP/IP IPV4 stack that was created for this tool 
in order to avoid detection. By installing flav you can control plugins of the custom TCP/IP stack 
including packet redirection, flav dns, flav traceroute and others that are otherwise unavailable.
Figure 08 – FlewAvenue plugin status on initial PC connection
Figure 09 – Work around to override driver warning and install
When trying to install flav the operator may encounter issues related to driver signing (especially 
on Windows 7 pro), even if test signing is enabled and integrity checks are disabled the tools 
idiot proofing can still prevent the module from being loaded as it incorrectly decides driver 
signing is still enforced. In order to circumvent this the operator can load flav as a module into a 
KiSu instance, in testing you will need to edit the _FLAv.py script to achieve this due to an error. 
Remove line 64 & 65 and replace with the value ‘params[Method] = “demi”’, this will force the flav 
controller to comply.
F-Secure  |  Killsuit research
8
Once this is done ensure you are connected to an instance then run “flewavenue”, select “install 
tools” then “load driver” and then verify the installation. If you check the driver status it may not 
be available, if this is the case you need to restart or wait for the user to restart the host in order 
for the module to be loaded at the KiSu instance restart.
Figure 10 – Verify installation showing FlewAvenue as “Available”
Once the driver is installed and available, the operator can start creating traffic redirects, 
targeted redirects, packet redirects and others using commands such as “hittun”, “imr” and 
“packetredirect” which format redirect commands for them.
F-Secure  |  Killsuit research
9
HOW DOES KILLSUIT INSTALL ITSELF ON A SYSTEM
Initial run at installation identifiers analysis
These identifying observations are made against the leaked version of KiSu made available by the 
ShadowBrokers as part of the “lost in translation” shadowbroker DdSz leak (https://github.com/
misterch0c/shadowbroker). 
In our research, when the PC agent starts installing KiSu it uses the internal resource library 
DeMi which as stated is believed to manage the KiSu installation and associated modules on 
the target. During the installation process the local agent runs a huge amount of redundant 
API calls, dll loads and system operations in order to temporarily generate massive amounts 
of debug information. Some of these operations have been shown to be dummies with the 
supposed specific intention of exacerbating research and reversing of the tool. However, careful 
examination of logs associated with these operations highlighted points of interest. 
When installing to a host one of the first and last checks the agent makes is the running system 
mode, primarily whether it is in setup or normal run mode. It does this by querying the registry 
value “HKLM\System\Setup\SetupInProgress”, during normal operation this value is set to 0. 
Alteration of this value did not affect the installation of instances, indicating this could potentially 
be a dummy operation or checking for a specific value outside the standard options.
Figure 11 –Killsuit installation check for value SystemSetupInProgress (OS running mode)
Image 12 - API collection showing “systemfunction007” kernel operation in calc.exe thread
One of the noted actions is that the PC instance will make a Kernel API call for 
“systemfunction007” which is used to generate NTLM hashes for encrypted communication. 
Since during our testing we injected PC into a calc.exe instance, as you might expect this should 
not occur and stood out a bit.
F-Secure  |  Killsuit research
10
Immediately following this the generated hash values are used in operations with the Kernel 
crypto modules before being stored in the registry. This likely indicates the hash is used as part 
of the DB encryption operation or is generated for the encrypted communication channel 
operation DdSz employs. The second thing is the registry where the generated hashes were 
stored, namely under “HKLM/SOFTWARE/Microsoft/Windows/CurrentVersion/OemMgmt”. 
Although this looks like a legitimate registry location (as other oem related dirs are here), there is 
no legitimate registry dir with this path we could discover.
Image 13 – API collection showing Unicode operation for registry keys under dir “OemMgmt”
Image 14 – Registry Edit displaying the malicious registry entries for two installed KiSu instances
Figure 15 –DoubleFeature display of Killsuit module root location
This registry directory is created at installation of the first instance and is removed when all 
instances are uninstalled. All instance types have their own corresponding 36 char ID registry 
entry that looks like “{982cfd3f-5789-effa-2cb5-05a3107add06}” within this directory, these 
contain keys holding the stored encrypted values including the encrypted communication key 
and other KiSu configuration data.
Further investigation of this location found that the path corresponded to the “KiSu Module 
Root” location specified during usage of the “DoubleFeature” function of the framework. This 
function is designed so that operators can quickly assess what elements have been previously 