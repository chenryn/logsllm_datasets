日志智能化 
从海量日志中挖掘中更有价值的信息 / 薛文满
01. 	日志聚类与聚类报警
日志智能化的从 0 到 1
02. 	日志模版其他场景应用
归因分析、变更监控、数据治理
03. 	LLM for Ops 	未来规划
日志聚类与聚类报警 	日志智能化从0到1
日志聚类与聚类报警 - 背景介绍
传统的日志异常检测
•	根据日志级别（如 INFO、WARNING、ERROR, CRITICAL）
	进行报警，但由于其设定不准确，或不满足实际需要，导致
	 准确性差
• 通过设置规则，匹配日志中特定字符串进行报警，但该方法
	 依赖人工经验，且只能检测已知和确定模式的异常
智能化日志分析能力
•	日志模板抽取，方便用户快速了解海量日志中包含的频繁模式
• 日志聚类，根据日志包含的语义信息、所处的上下游层级信息进行 
	归并整合
• 日志异常检测，根据日志包含的特征信息、上下文信息、历史信息，归并整合
• 日志异常检测，根据日志包含的特征信息、上下文信息、历史信息，
	 判断是否出现异常，同时给出异常影响范围以及严重程度
日志聚类与聚类报警 - 概念介绍
日志聚类
日志聚类通过聚合算法根据文本特征，对服务的错误日志进行聚类，帮助用户快速掌握业务异常日志全貌。
2022 年 10 月正式上线，目前已覆盖字节跳动内部超过 4 万个服务
智能聚类报警
智能聚类报警基于日志聚类生成的日志模版 & 模版时序数据等元信息，为用户提供主动、被动感知异常日志
的能力。2022 年 11 月正式上线，目前已有超过 5 千个服务配置了聚类报警
日志聚类 - 系统架构
Compressor
根据内置规则压缩服务的错误日志，同时更新服务的 
生命周期，后续通过 updater 更新实时分析任务
Updater
根据服务最新出现错误日志的时间来决定是否需要加入 
分析或者停止分析
Analyzer分析或者停止分析
Analyzer
每分钟拉取对应的错误日志进行聚合分析同时比对历史 
模板库并更新日志模式，最后打点上报 metrics
日志聚类 - 算法原理
聚类算法 A
日志原文 聚类算法 B 日志模版 模板库
聚类算法 C
HTTP ERROR 404 
HTTP ERROR 405 HTTP ERROR
	聚类算子 - Levenshtein Distance 
莱文斯坦距离，又称Levenshtein距离，是编辑距离的一种。指两个字串之间，由一个转成另一个所需的最少编辑操作次数。
允许的编辑操作包括：
•
•
• 将一个字符替换成另一个字符 
插入一个字符 
删除一个字符
距离计算公式:
得分计算公式:
	  +  −푙,
score = 
	  +  
聚类算子 - Drain Distance +  
聚类算子 - Drain Distance 
按照Drain(ICWS 2017)的算法逻辑，实现一种Drain Operator，针对分隔符切分之后长度相同的两个字符串按以下公式计算 Drain_Score
聚类算子 - Information Coverage
•	将字符串strA, strB根据分隔符切分成token，得到tokenA, tokenB
	 strA = "获取总分店信息失败："
	 strB = "获取总分店信息失败：KE.KITE/ RPC timeout/: timeout= 2022-01-27T13:05:14.115000"
	 tokenA = ['获取总分店信息失败', 'nil']tokenA = ['获取总分店信息失败', 'nil']
	 tokenB = ['获取总分店信息失败', 'KE', 'KITE', 'MASK', 'RPC', 'timeout', 'NUM', 'timeout', 'NUM', '2022', '01', '27T13', '05', '14', '115000']
•	计算tokenA和tokenB的交集，得到tokenAB
	 tokenAB = ['获取总分店信息失败']
• 计算tokenA和tokenAB的信息值，得到infoA, infoAB
解释：直观来说，开发&运维人员在查看一条错误日志时，注意力会集中在前面出现的单词并递减，同时一个较长的单词理论上来说也包含更 多的信息
• 得到最终的ic_score
聚类报警 - 算法原理
稳定周期型：序列的周期性波动较为稳定，可能存在 
长期的缓增或缓降的趋势稳定周期型：序列的周期性波动较为稳定，可能存在 
长期的缓增或缓降的趋势
波动周期型：序列的周期性波动较为频繁，每个时间 
段呈现出不同周期的波动
原始平稳型：序列存在非周期性的稳定性波动，可能 
有突刺型的波动
趋势平稳型：序列存在非周期性但具有趋势的稳定 
性波动
差分平稳型：通过差分可以使时间序列成为原始平 
稳的时间序列
| 时序数据 | 特殊类型过滤 | 数据预处理 | 随机波动型：时序构成较为复杂，具有大量零值的序 |
|---|---|---|---|
| 时序数据 |低流量、spike |数据平滑 |随机波动型：时序构成较为复杂，具有大量零值的序 |
| 时序数据 |低流量、spike |数据平滑 |列也在该类 |
| 时序数据 |跌零较多 |缺失值处理 |列也在该类 |
Yes
|  | 周期性 | No |  | 平稳性 |  | No | 随机波动型 | 兜底算法 ||---|---|---|---|---|---|---|---|---|
|  |FFT + ACF |No | |ADF | |No |随机波动型 |兜底算法 |
|  |周期型 |No | |平稳型 | |No |随机波动型 |兜底算法 |
| 稳 | | |原 |趋 |差 | | | |
| 定 | | |始 |势 |分 | | | |
| 周 | | |平 |平 |平 | | | |
| 期 | | |稳 |稳 |稳 | | | |
| 型 | | |型 |型 |型 | | | |
| SR |Prophet | |ARIMA |先去趋势 |先差分 | | | |
日志聚类与聚类报警 - 使用流程 
	线上出现异常
采集错误日志 问题修复 日常迭代
模版提取与检测 业务排障 
logid/pod/webshell/错误日志模版提取与检测 业务排障 
logid/pod/webshell/错误日志
| 进入日志智能聚类 | 为服务集群配置新 | 用户收到报警卡片 | 跳转到日志聚类页 | 调整模型参数 |
|---|---|---|---|---|
| 页面 |模板通知/自动报警 |附带模版信息与跳转链接 |面/报警详情页面 |dry-run |
新增模板出现
配置单条日志模版
存量模版突增 报警
| 日志聚类页面 - 功能概览 |  |  |  |  |
|---|---|---|---|---|
| 目标服务 |关键字搜索 |新出现日志模版通知 |时间范围 |存量模版全局自动报警 |
| 目标集群 |关键字搜索 |新出现日志模版通知 |时间范围 |存量模版全局自动报警 |
过滤字段
单条模版报警
模版计数 模版内容
模版时序
日志聚类页面 - 细粒度过滤字段
dc
错误日志产生的目标机房模版时序
日志聚类页面 - 细粒度过滤字段
dc
错误日志产生的目标机房
stage
错误日志所处的服务实例上线阶段：小流量阶段, 单机房阶段, 全流量阶段
location
日志被采集时所在代码行
日志聚类页面 - 自定义搜索
关键词搜索
•
• 输入日志模板中的关键词模糊匹配文本 
支持多个关键词搜索，关键词中间使用英文字符 "|" 分隔
日志模板ID搜索
•
•
• 每个日志模板通过唯一的 templateID 标识，可以进行精准搜索 支持同时搜索多个templateID，使用英文字符 "|" 分隔 
从报警卡片或报警事件详情页跳转，会根据 templateID 发起检索
CMD指令搜索
• 过滤新模板：cmd>is_new
日志聚类页面 - 日志数量打点和原文
点击日志原文中的蓝色字段进行进一步的数据下钻点击日志原文中的蓝色字段进行进一步的数据下钻
查看日志数量打点指标详情 IP -> 跳转到云引擎 查看对应 Pod | logID -> 跳转查看链路日志 | _podname -> 跳转 Pod webshell
聚类报警配置 - 新增日志模版报警
• 新日志模板通知主要用于检测最近一段
时间内未出现过的全部日志模板
• 报警阈值必填，且需大于 0，表示一分
钟内错误日志模板出现的最低检测阈值，
超过该阈值的新日志模板会通过报警方
式通知用户
聚类报警配置 - 全局存量模版报警
• 自动报警会对全局的日志模板进行异常
检测。出现异常波动的，则直接向值班
人发送报警卡片通知
• 新建智能报警规则无需配置，创建完成
后可修改参数。需要注意修改参数会对
全局生效
聚类报警配置 - 单条模版报警
• 当业务方通过新模板通知规则或全局存
量自动报警主动探索锁定有价值的错误• 当业务方通过新模板通知规则或全局存
量自动报警主动探索锁定有价值的错误 
日志模板时，可点击模版操作列的设置 
报警，针对单条模板个性化地设置专属 
的报警规则