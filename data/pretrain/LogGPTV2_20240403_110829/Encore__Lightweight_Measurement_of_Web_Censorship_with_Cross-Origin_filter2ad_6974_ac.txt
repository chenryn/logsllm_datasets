### Volunteered to Host Encore

This section outlines the process and components involved in hosting a measurement task on Encore, including the roles of the origin server, coordination server, and collection server. The client initiates the process by downloading the measurement task from the coordination server, which then instructs the client to attempt to load a resource (e.g., an image) from a target domain, such as `censored.com`. If the request is filtered, the client reports this to the collection server. The following sections detail how these servers work together to collect and analyze web filtering measurements.

### 5.1 Sources of Measurement Targets

Encore requires a set of potentially filtered web sites and resources to test for web filtering. This list can include specific URLs or URL patterns (e.g., entire domain names or URL prefixes) to test the reachability of a domain or a portion of a website. During initial deployment, a small list of likely filtered targets is most useful, as clients from only a few moderately popular websites will contribute measurements. As adoption increases, a broader set of targets can be used to expand the breadth of measurements.

#### Initial Deployment
During the initial phase, Encore relies on third parties to provide lists of URLs to test for web filtering. Several organizations maintain such lists, either curated by per-country experts (e.g., GreatFire for China, Filbaan for Iran) or crowdsourced (e.g., Herdict). Our evaluation uses a list of several hundred "high value" URLs curated by Herdict and its partners. Curating accurate and appropriate lists of potentially censored URLs is an active research area beyond the scope of this paper.

#### Large-Scale Deployment
If Encore is deployed to many geographically distributed web clients and a large, accurate web index is built, Encore could use its clients to verify the accessibility of the entire web index, eliminating the need for specialized lists of measurement targets.

### 5.2 Generating Measurement Tasks

The generation of measurement tasks involves a three-step procedure that transforms URL patterns into a set of tasks to determine if the resources are filtered for a client. This process occurs before client interaction (e.g., once per day).

1. **Pattern Expander**: Transforms each URL pattern into a set of URLs by searching for matching URLs on the web.
2. **Target Fetcher**: Collects detailed information about each URL by loading and rendering it in a real web browser and recording its behavior in an HTTP Archive (HAR) file.
3. **Task Generator**: Examines each HAR file to determine which measurement task types can measure each resource and generates the corresponding tasks.

#### Pattern Expansion
The Pattern Expander identifies URLs that match each pattern. Some patterns match a single URL, while others require discovering multiple URLs. We currently expand URL patterns to a sample of up to 50 URLs using site-specific search results from a popular search engine. In the future, Encore could use its own web crawler for this purpose.

#### Target Fetching
The Target Fetcher renders each URL in a web browser and records a HAR file, documenting the resources downloaded, timing information, and HTTP headers. We use the PhantomJS headless browser hosted on servers at Georgia Tech, which does not filter web requests.

#### Task Generation
The Task Generator analyzes each HAR file to determine which subset of resources is suitable for measuring using the types of measurement tasks from Table 1. It considers timing, network usage, content type, and caching headers to decide if a resource is small enough to load without significantly affecting user experience. The generator is conservative with inline frames to avoid performance and user experience issues.

### 5.3 Scheduling Measurement Tasks

After generating measurement tasks, the coordination server schedules them for execution on clients. Task scheduling serves two purposes: enabling clients to run measurements that meet their restrictions and allowing Encore to draw conclusions by comparing measurements between clients, countries, and ISPs.

### 5.4 Delivering Measurement Tasks

Once scheduled, Encore delivers tasks to clients, who then run them and issue cross-origin requests for potentially filtered web resources. To collect a significant number of useful web filtering measurements, Encore requires a large and diverse client population. Unlike previous censorship measurement efforts, Encore piggybacks on existing web traffic, enlisting nearly all visitors to participating sites as measurement collection agents.

#### Enabling Encore
A webmaster can enable Encore by adding a single `<script>` tag that directs clients to load an external JavaScript directly from the coordination server. This method is attractive because it requires minimal server-side modifications and allows real-time tailoring of measurement tasks. However, it is also vulnerable to blocking by censors. Section 8 discusses ways to make task delivery more robust.

### 5.5 Collecting Measurement Results

After running a measurement task, clients submit the result, related timing information, and the task's measurement ID to the collection server. In the absence of interference, clients submit results via an AJAX request. Section 8 discusses alternative submission methods if the adversary filters access to the collection server.

### 6 Feasibility of Encore Deployment

We evaluate the feasibility of deploying Encore based on early experience with a prototype implementation and analysis of potential measurement targets.

#### Are Sites Amenable to Encore’s Tasks?
We investigate whether real web sites host resources that Encore’s measurement tasks can use to measure filtering. We evaluate the feasibility of measuring filtering of both entire domain names and individual URLs using a list of high-value domains and URLs from Herdict and its partners.

- **Filtering of Entire Domains**: We explore whether Encore can measure filtering of 178 domains. Most domains embed images that can be embedded by an origin site and are small enough not to affect user experience. Figure 4 shows the distribution of the number of images hosted by each domain.
- **Filtering of Specific Web Pages**: We explore how often Encore can measure filtering of individual URLs by loading a web page in an iframe and verifying that the browser cached embedded resources. Figure 5 shows the distribution of page sizes, and Figure 6 shows the distribution of cacheable images per URL.

#### Who Performs Encore Measurements?
Encore requires clients to visit the websites hosting Encore scripts. The demographics of clients performing Encore measurements are closely related to those visiting the participating websites. We examined demographic data collected by Google Analytics to evaluate the likelihood of receiving measurements from enough locations.