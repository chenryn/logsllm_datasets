while i can easily fix this in my code, this seems a bug, What happens is that
this leaves Object.items as an empty list, whatever it was before. It happens
in "sqlalchemy\orm\collections.py" on lines 1157-1163:
                if step == 1:
                    for i in range(start, stop, step):
                        if len(self) > start:
                            del self[start]
                    for i, item in enumerate(value):
                        self.insert(i + start, item)
Basically if self is the same InstrumentedList as value, then 'del
self[start]' also removes value[start], leaving an empty list to be inserted.
This would (unverified) also go wrong with any other slice, as long as self
and value are the same object.
This is not the same behavior is in python itself:
L = [1,2,3]  
L[:] = L  
print(L)