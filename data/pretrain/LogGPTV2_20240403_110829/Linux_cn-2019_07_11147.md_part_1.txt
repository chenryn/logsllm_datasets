---
author: Magesh Maruthamuthu
category: 分享
comments_data: []
count:
  commentnum: 0
  favtimes: 0
  likes: 0
  sharetimes: 0
  viewnum: 6536
date: '2019-07-26 05:32:32'
editorchoice: false
excerpt: ClusterShell 是一个事件驱动的开源 Python 库，旨在在服务器场或大型 Linux 集群上并行运行本地或远程命令。
fromurl: https://www.2daygeek.com/clustershell-clush-run-commands-on-cluster-nodes-remote-system-in-parallel-linux/
id: 11147
islctt: true
largepic: /data/attachment/album/201907/26/053202pgcgg1y1rc5l5mgg.jpg
permalink: /article-11147-1.html
pic: /data/attachment/album/201907/26/053202pgcgg1y1rc5l5mgg.jpg.thumb.jpg
related: []
reviewer: wxy
selector: lujun9972
summary: ClusterShell 是一个事件驱动的开源 Python 库，旨在在服务器场或大型 Linux 集群上并行运行本地或远程命令。
tags:
- 并行
thumb: false
title: ClusterShell：一个在集群节点上并行运行命令的好工具
titlepic: true
translator: wxy
updated: '2019-07-26 05:32:32'
---
![](/data/attachment/album/201907/26/053202pgcgg1y1rc5l5mgg.jpg)
我们过去曾写过两篇如何并行地在多个远程服务器上运行命令的文章：[并行 SSH（PSSH）](https://www.2daygeek.com/pssh-parallel-ssh-run-execute-commands-on-multiple-linux-servers/) 和[分布式 Shell（DSH）](https://www.2daygeek.com/dsh-run-execute-shell-commands-on-multiple-linux-servers-at-once/)。今天，我们将讨论相同类型的主题，但它允许我们在集群节点上执行相同的操作。你可能会想，我可以编写一个小的 shell 脚本来实现这个目的，而不是安装这些第三方软件包。
当然，你是对的，如果要在十几个远程系统中运行一些命令，那么你不需要使用它。但是，你的脚本需要一些时间来完成此任务，因为它是按顺序运行的。想想你要是在一千多台服务器上运行一些命令会是什么样子？在这种情况下，你的脚本用处不大。此外，完成任务需要很长时间。所以，要克服这种问题和情况，我们需要可以在远程计算机上并行运行命令。
为此，我们需要在一个并行应用程序中使用它。我希望这个解释可以解决你对并行实用程序的疑虑。
### ClusterShell
[ClusterShell](https://cea-hpc.github.io/clustershell/) 是一个事件驱动的开源 Python 库，旨在在服务器场或大型 Linux 集群上并行运行本地或远程命令。（`clush` 即 [ClusterShell](https://cea-hpc.github.io/clustershell/)）。
它将处理在 HPC 集群上遇到的常见问题，例如在节点组上操作，使用优化过的执行算法运行分布式命令，以及收集结果和合并相同的输出，或检索返回代码。
ClusterShell 可以利用已安装在系统上的现有远程 shell 设施，如 SSH。
ClusterShell 的主要目标是通过为开发人员提供轻量级、但可扩展的 Python API 来改进高性能集群的管理。它还提供了 `clush`、`clubak` 和 `cluset`/`nodeset` 等方便的命令行工具，可以让传统的 shell 脚本利用这个库的一些功能。
ClusterShell 是用 Python 编写的，它需要 Python（v2.6+ 或 v3.4+）才能在你的系统上运行。
### 如何在 Linux 上安装 ClusterShell？
ClusterShell 包在大多数发行版的官方包管理器中都可用。因此，使用发行版包管理器工具进行安装。
对于 Fedora 系统，使用 [DNF 命令](https://www.2daygeek.com/dnf-command-examples-manage-packages-fedora-system/)来安装 clustershell。
```
$ sudo dnf install clustershell
```
如果系统默认是 Python 2，这会安装 Python 2 模块和工具，可以运行以下命令安装 Python 3 开发包。
```
$ sudo dnf install python3-clustershell
```
在执行 clustershell 安装之前，请确保你已在系统上启用 [EPEL 存储库](https://www.2daygeek.com/install-enable-epel-repository-on-rhel-centos-scientific-linux-oracle-linux/)。
对于 RHEL/CentOS 系统，使用 [YUM 命令](https://www.2daygeek.com/yum-command-examples-manage-packages-rhel-centos-systems/) 来安装 clustershell。
```
$ sudo yum install clustershell
```
如果系统默认是 Python 2，这会安装 Python 2 模块和工具，可以运行以下命令安装 Python 3 开发包。
```
$ sudo yum install python34-clustershell
```
对于 openSUSE Leap 系统，使用 [Zypper 命令](https://www.2daygeek.com/zypper-command-examples-manage-packages-opensuse-system/) 来安装 clustershell。
```
$ sudo zypper install clustershell
```
如果系统默认是 Python 2，这会安装 Python 2 模块和工具，可以运行以下命令安装 Python 3 开发包。
```
$ sudo zypper install python3-clustershell
```
对于 Debian/Ubuntu 系统，使用 [APT-GET 命令](https://www.2daygeek.com/apt-get-apt-cache-command-examples-manage-packages-debian-ubuntu-systems/) 或 [APT 命令](https://www.2daygeek.com/apt-command-examples-manage-packages-debian-ubuntu-systems/) 来安装 clustershell。
```
$ sudo apt install clustershell
```
### 如何在 Linux 使用 PIP 安装 ClusterShell？
可以使用 PIP 安装 ClusterShell，因为它是用 Python 编写的。
在执行 clustershell 安装之前，请确保你已在系统上启用了 [Python](https://www.2daygeek.com/3-methods-to-install-latest-python3-package-on-centos-6-system/) 和 [PIP](https://www.2daygeek.com/install-pip-manage-python-packages-linux/)。
```
$ sudo pip install ClusterShell
```
### 如何在 Linux 上使用 ClusterShell？
与其他实用程序（如 `pssh` 和 `dsh`）相比，它是直接了当的优秀工具。它有很多选项可以在远程并行执行。
在开始使用 clustershell 之前，请确保你已启用系统上的[无密码登录](https://www.2daygeek.com/linux-passwordless-ssh-login-using-ssh-keygen/)。
以下配置文件定义了系统范围的默认值。你不需要修改这里的任何东西。
```
$ cat /etc/clustershell/clush.conf
```
如果你想要创建一个服务器组，那也可以。默认情况下有一些示例，请根据你的要求执行相同操作。
```
$ cat /etc/clustershell/groups.d/local.cfg
```
只需按以下列格式运行 clustershell 命令即可从给定节点获取信息：
```
$ clush -w 192.168.1.4,192.168.1.9 cat /proc/version
192.168.1.9: Linux version 4.15.0-45-generic ([email protected]) (gcc version 7.3.0 (Ubuntu 7.3.0-16ubuntu3)) #48-Ubuntu SMP Tue Jan 29 16:28:13 UTC 2019
192.168.1.4: Linux version 3.10.0-957.el7.x86_64 ([email protected]) (gcc version 4.8.5 20150623 (Red Hat 4.8.5-36) (GCC) ) #1 SMP Thu Nov 8 23:39:32 UTC 2018
```
选项：
* `-w:` 你要运行该命令的节点。
你可以使用正则表达式而不是使用完整主机名和 IP：