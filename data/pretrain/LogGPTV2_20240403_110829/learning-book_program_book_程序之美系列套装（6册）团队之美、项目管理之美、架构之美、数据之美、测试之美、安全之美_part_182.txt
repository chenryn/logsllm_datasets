的隐私设置。
从这个角度来说，FBML是一个受信任的声明式执行环境，与C或
PHP这样的必须服从的执行环境不同。严格来说，FBML不像这些
语言那样是“图灵完备"的（例如，没有提供循环结构）。像HTML
一样，除了树状遍历所隐含的状态外，在执行时不保存任何状态；
例如，只在之内有意义。但是，通过
让受信任系统中的用户获得数据，FBMIL提供了大量功能，这些功
能正是大多数开发者希望提供给他们的用户的。
FBML实际上有助于定义执行应用的逻辑和显示，同时文让应用可
以在应用服务器上显示独特的内容。
只面向设计的标签
Facebook因其设计标准而受到称赞，许多开发者都选择以某种方式
复用Facebook的设计元素，保持Facebook的观感。通常，他们是通
过利用http://facebook.com的JavaScript和CSS来实现的，但FBML提
供了类似“设计宏”的库，以更可控的方式来满足这种需求。例如，
Facebook应用已知的CSS类来，将输入....../fb：tabs>
渲染成特定的tab标签结构，位于开发者页面的顶部。这些设计元素
也可以包含执行语义，如.....只有
在这次执行显示用户简介框中的少数列时，会在FBML中渲染它的
子内容。
例6-22展示了一些使用只面向设计的标签的FBML。
例6-22：只面向设计的FBML的例子
1024
---
## Page 1026
这将渲染为一组可视的tab标签，链接到对应用的内容，并使用了
Facebook自己的HTML、CSS和Javascript包。
替代HTML标签
HTML造成了一些信任风险，但没有暴露数据，所以FBML中的替代
标签只是修改或限制一组参数，如Flash自动播放。这不是所有显示
平台都严格要求的，它们只是强制应用满足容器站点的默认显示行
为。但是，随着多个应用发展成为一个生态系统，它们都反映容器
站点的观感，这种修改就变得很重要了。
请看这个FBML例子：
这会翻译成一段相当长的JavaScript，渲染一个视频播放组件，这个
元素由Facebook控制，特意禁止了自动播放这样的行为。
“功能包”标签
某些FacebookFBML标签包含了整套的常见Facebook应用功能。创建了类型前置的朋友选择器软件包，常见于
许多Facebook页面，包括Facebook数据（朋友、主要网络）、CSS
样式和针对键盘动作的JavaScript。像这样的标签让容器站点可以推
1025
---
## Page 1027
广某些设计模式和应用间的公用元素，也让开发者能够快速实现他
们想要的功能。
FBML：一个小例子
请回忆一下我们在创建假想的外部网站时，通过引入friends.get和
users.getInfoAPI对原来的http://fettermansbooks.com代码实现改进。
接下来我们将展示一个例子，看看FBML如何能够结合社会关系、
私有业务逻辑和完全集成的应用的感觉。如果我们能够通过数据库
调用book_get_all_reviews（$isbn）获得一本书的全部书评，那么我
们就可以将朋友数据、私有业务逻辑和“墙式”风格结合起来，利用
FBML在容器站点上显示书评，代码如例6-23所示。
例6-23：利用FBML创建一个应用
//Wall-style social book reviews on Facebook
//FBML Tags used: , , 
/ /from section 1.3
$facebook_friend_uids=$facebook_client->api_client->
friends_get () :
foreach ($facebook_friend_uids as$facebook_friend) {
if ($books_user_id=books_user_id_from_facebook_id ($faceboo
k_friend))
$book_site_friends []=$books_user_id;
//a hypothesized mapping,returning
//books_uid->book_review object
$all_reviewers=get_all_book_reviews ($isbn) ;
$friend_reviewers=array_intersect ($book_site_friends,array
_keys ($all_reviewers) ) :
1026
---
## Page 1028
echo'Friends'reviews: ';
echo'';
//put friends up top.
foreach ($friend_reviewers as$book_uid=>$review) (
echo'';
echo'('.$review['score'].')'. Sreview['commentary']:
echo'':
unset ($all_reviewers[$book_uid]): //don't include in
nonfriends below.
上
echo'Other reviews: ';
/ /only nonfriends remain .
foreach ($all_reviewers as$book_uid=>$review) {
echo''; / /defaults
to'search'visibility
echo'';
echo'('.$review['score'].')*.Sreview['commentary'];
echo'':
echo'';
echo'';
虽然这采用的是输出FBML的服务的形式，而不是输出HTML的Web
调用，但一般流程是不变的。这里，Facebook数据让应用能够在无
关的书评之前，显示更多的相关书评（朋友的书评），并且使用了
FBML来显示结果，采用了Facebook上相应的隐私逻辑和设计元
素。
1027
---
## Page 1029
6.4.4FBML架构
将开发者提供的FBML翻译成显示在http://facebook.com上的HTML
需要一些技术和概念综合作用：将输入字符串解析成一棵句法树，
将这棵树中的标签转换成内部方法调用，应用FBML语法规则，保
持容器站点的约束。像FQL一样，这里我们将关注点主要放在
FBML与平台数据的交互上，对其他的技术则不作详细探讨。FBML
处理了一个复杂的问题，FBML的全部实现细节是相当多的一我们
省略的内容包括FBML的错误日志、为后来的渲染事先缓存内容的
能力、表单提交结果的安全性签名等。
首先，看看解析FBML的低层问题。在继承了浏览器的某些角色的
同时，Facebook也继承了它的一些问题。为了方便开发者，我们不
要求提供的输入可以通过schema验证，甚至不要求是结构良好的
XML一不封闭的HTML标签，如（与XHTML不同，即）打破了输入必须作为真正的XML进行解析的假定。因为这一
点，我们需要一种方法将输入的FBML字符串先转换成结构良好的
句法树，包含标签、属性和内容。
为了做到这一点，我们采用了采用了一个并放源代码浏览器的一些
代码。本章将这部分处理视为一个黑盒，所以我们现在假定，在接
收到FBML并经过这样的处理流程后，我们得到了名为FBMLNode的
树状结构，它让我们能够查询生成的句法树中任何节点的标签、属
性键值对和原始内容，并能够递归查询子元素。
从最高的层面上看，我们可以注意到FBML出现在Facebook站点的
所有地方：应用“画布”页面、新闻信号源的故事内容、个人简介框
的内容等。每种上下文中或每种“风味"的FBML都定义了对输人的
药束，例如，画布允许使用iframe，而个人简介框则不允许。很自
然，因为FBMIL维护数据隐私的方式与API类似，所以执行上下文中
必须包含查看用户的ID和生成该内容的应用ID。
所以，在我们真正开始有效使用FBML之前，先要看看环境的规
则，它由FBMLFlavor类来封装，如例6-24所示。
例6-24：FBMLFlavor类
abstract class FBMLFlavor(
1028
---
## Page 1030
//constructor takes array containing user and
application_id
public function FBMLFlavor ($environment_array) (...)
public function check ($category){
$method_name='allows_.$category:
if (method_exists ($this, $method_name) )(
$category_allowed=$this->$method_name ();
)else {
$category_allowed=$this->_default () ;
上
if (! $category_allowed))
throw new FBMLException ('Forbidden tag
category'.$category.'in
this flavor.') :
protected abstract function_default () ;
上
下面是这个抽象类的一个子类，它对应于渲染FBML的页面或元
素。例6-25是一个例子。
例6-25：FBMLFlavor类的一个子类
class ProfileBoxFBMLFlavor extends FBMLFlavor{
protected function_default () (return true: }
public function allows_redirect () (return false: )
public function allows_iframes () (return false: )
1029
---
## Page 1031
public allows_visible_to () (return$this->_default () : )
/ / ...
这种风味类的设计很简单：它包含了隐私上下文（用户和应用），
实现了检查方法，为稍后将展示的FBMLImplementation类中包含的
丰富逻辑建立了规则。与平台API的实现层很像，这个实现类为服
务提供了实际的逻辑的数据访问，其他的代码为这些方法提供了访
问入口。每个Facebook特有的标签，如，将有
一个对应的实现方法fb_TAG_NAME（例如，类方法fb_profile_pic将
实现标签的逻辑）。每个标准的HTML标签也都
有一个对应的处理方法，名为tag_TAG_NAME。这些HTML处理方
法通常让数据无变化地通过，但是即便是对一些“普通"的HTML元
素，FBML常常也需要进行检查和转换。
让我们来看看某些标签的实现，然后将它们结合起来讨论。每个实