### 优化后的文本

#### 自定义输出路径
**参数：`--output-dir`**

`sqlmap` 默认将 session 文件和结果文件保存在 `output` 文件夹下。使用此参数可以自定义输出路径。

**示例：**
```bash
--output-dir=/tmp
```

#### 从响应中获取 DBMS 的错误信息
**参数：`--parse-errors`**

当目标未关闭 DBMS 的报错功能时，数据库语句错误会输出错误信息。使用此参数可以从响应中解析并显示这些错误信息。

**示例：**
```bash
$ python sqlmap.py -u "http://192.168.21.129/sqlmap/mssql/iis/get_int.asp?id=1" --parse-errors
```

#### 其他一些参数

##### 使用参数缩写
**参数：`-z`**

当使用多个较长的参数时，可以使用缩写模式来简化命令。

**示例：**
```bash
python sqlmap.py --batch --random-agent --ignore-proxy --technique=BEU -u "www.target.com/vuln.php?id=1"
```
可以写成：
```bash
python sqlmap.py -z "bat,randoma,ign,tec=BEU" -u "www.target.com/vuln.php?id=1"
```

另一个示例：
```bash
python sqlmap.py --ignore-proxy --flush-session --technique=U --dump -D testdb -T users -u "www.target.com/vuln.php?id=1"
```
可以写成：
```bash
python sqlmap.py -z "ign,flu,bat,tec=U,dump,D=testdb,T=users" -u "www.target.com/vuln.php?id=1"
```

##### 成功 SQL 注入时警告
**参数：`--alert`**

在成功进行 SQL 注入时发出警告。

##### 设定自动回答
**参数：`--answers`**

当 `sqlmap` 提示输入时，可以使用此参数自动输入预设的答案。

**示例：**
```bash
$ python sqlmap.py -u "http://192.168.22.128/sqlmap/mysql/get_int.php?id=1" --technique=E --answers="extending=N" --batch
```

##### 发现 SQL 注入时发出蜂鸣声
**参数：`--beep`**

发现 SQL 注入时，发出蜂鸣声。

##### 启发式检测 WAF/IPS/IDS 保护
**参数：`--check-waf`**

如果怀疑目标有 WAF/IPS/IDS 保护，可以使用此参数进行测试。`sqlmap` 将使用一个不存在的参数进行注入测试。

**示例：**
```bash
&foobar=AND 1=1 UNION ALL SELECT 1,2,3,table_name FROM information_schema.tables WHERE 2>1
```

##### 清理 `sqlmap` 的 UDF(s) 和表
**参数：`--cleanup`**

清除 `sqlmap` 注入时生成的 UDF 和表。

##### 禁用彩色输出
**参数：`--disable-coloring`**

禁用 `sqlmap` 的默认彩色输出。

##### 使用指定的 Google 结果页面
**参数：`--gpage`**

默认情况下，`sqlmap` 使用前 100 个 URL 地址进行注入测试。结合此选项，可以指定特定页面的 URL 进行测试。

##### 使用 HTTP 参数污染
**参数：`-hpp`**

HTTP 参数污染可能绕过 WAF/IPS/IDS 保护机制，对 ASP/IIS 和 ASP.NET/IIS 平台特别有效。

##### 测试 WAF/IPS/IDS 保护
**参数：`--identify-waf`**

`sqlmap` 可以尝试识别 WAF/IPS/IDS 保护，方便用户采取相应的绕过措施。目前支持大约 30 种产品的识别。

**示例：**
```bash
$ python sqlmap.py -u "http://192.168.21.128/sqlmap/mysql/get_int.php?id=1" --identify-waf -v 3
```

##### 模仿智能手机
**参数：`--mobile`**

有时服务器只接受来自移动端的访问，此时可以设置一个手机的 `User-Agent` 来模拟手机登录。

**示例：**
```bash
$ python sqlmap.py -u "http://www.target.com/vuln.php?id=1" --mobile
```

##### 安全删除 `output` 目录的文件
**参数：`--purge-output`**

安全删除 `output` 目录中的文件，并防止其被恢复。

**示例：**
```bash
$ python sqlmap.py --purge-output -v 3
```

##### 启发式判断注入
**参数：`--smart`**

对大量 URL 进行测试时，为了节省时间，可以仅对能够快速判断为注入的报错点进行注入。

**示例：**
```bash
$ python sqlmap.py -u "http://192.168.21.128/sqlmap/mysql/get_int.php?ca=17&user=foo&id=1" --batch --smart
```

##### 初级用户向导参数
**参数：`--wizard`**

面向初级用户的参数，可以逐步指导如何针对目标进行注入。

**参考资料：**
- 安全牛课堂 - Kali Linux Web 篇
- `sqlmap` 用户手册中文版
- `sqlmap` 用户手册