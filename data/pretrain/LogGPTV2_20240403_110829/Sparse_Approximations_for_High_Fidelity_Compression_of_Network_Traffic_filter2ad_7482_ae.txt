c
i
f
f
a
r
T
d
e
z
i
l
a
m
r
o
N
Original Traffic
Compressed Representation
Residual
1.2
1
0.8
0.6
0.4
0.2
0
l
e
m
u
o
V
c
i
f
f
a
r
T
d
e
z
i
l
a
m
r
o
N
l
e
m
u
o
V
c
i
f
f
a
r
T
d
e
z
i
l
a
m
r
o
N
80
100
Time (hour of week)
120
140
160
180
−0.2
0
20
40
60
80
100
Time (hour of week)
120
140
160
180
−0.2
0
20
40
60
80
100
Time (hour of week)
120
140
160
180
−0.2
0
20
40
60
80
100
120
140
160
180
Time (hour of week)
(a) Port 80
(b) Port 6346
(c) Port 9898
(d) Port 43726
Figure 14: Miscellaneous Ports using DF +H+S: Fourier + Haar Wavelets + Spikes
x 10−3
d
n
e
r
t
g
n
i
t
a
m
i
t
s
e
n
i
r
o
r
r
e
e
v
i
t
l
a
e
R
4.5
4
3.5
3
2.5
2
1.5
1
0.5
0
  25
 135
 139
1214
TCP Port
4662
6346
9898
Figure 15: Relative error in estimating trafﬁc trends
ferent ports, and in each case we estimate the slope of the
best linear ﬁt on the raw data and on the compressed data
(using a 30 coefﬁcient representation using DF +H+S). We
observe that across the different ports, the relative error in
estimating the trend is less than 0.5%, which reafﬁrms the
high ﬁdelity of the compression techniques.
7.3 Modeling and Anomaly Detection
We observed in Section 6.3 that the underlying fundamen-
tal components are stable (both in terms of occurrence and
their amplitudes) over time.
It is conceivable that trafﬁc
models for anomaly detection can be learned on the com-
pressed data alone. Our initial results suggest that traf-
ﬁc models [15] learned from compressed data have al-
most identical performance to models learned from un-
compressed data, and hence compression does not affect
the ﬁdelity of trafﬁc modeling techniques. Ongoing work
includes evaluating different models for building predic-
tion models for real-time anomaly detection using accurate
yet parsimonious prediction models generated from the in-
sights gained from the compression procedures.
8 Discussion
8.1 Stopping Criteria
In our experiments, we ﬁxed the number of coefﬁcients
across all ports. One can imagine a host of stopping cri-
teria to apply. One particularly interesting observation is
that in many of the cases, a few of which are depicted in
Figure 16, we ﬁnd that the residual energy has a distinct
knee beyond which the rate of drop in the residual energy
is signiﬁcantly lower. Intuitively one can imagine as the
knee corresponding to the stochastic noise component of
the original signal, which cannot be efﬁciently represented
using any fundamental component. Note that the anoma-
lous incidents such as spikes or glitches are usually cap-
tured before we hit the knee of the curve, as observed in
Section 7.1. This raises the possibility that we have a ro-
bust representation of the original signal—one that does
not change with the addition of noise as there are dimin-
ishing returns for any added effort aimed at modeling the
noise component, which are not necessarily of interest ei-
ther from a visualization or modeling perspective. We have
0.14
0.12
0.1
0.08
0.06
0.04
0.02
r
o
r
r
E
e
v
i
t
l
a
e
R
0
0
10
D1:F+H
D2:F+S
D3: F+H+S
0.01
0.009
0.008
0.007
0.006
0.005
0.004
0.003
0.002
0.001
r
o
r
r
E
e
v
i
t
l
a
e
R
50
60
0
0
10
D1:F+H
D2:F+S
D3: F+H+S
50
60
20
30
40
Number of coefficients
20
30
40
Number of coefficients
(a) Port 80
(b) Port 1214
Figure 16: Evaluating Stopping Criteria: Relative Error vs.
number of coefﬁcients
performed independent experiments with synthetic time se-
ries signals, similar to trafﬁc time series (sinusoidal signals,
264
Internet Measurement Conference 2005
USENIX Association
with spikes and different noise patterns thrown in). We ob-
serve that in almost all the cases we observe a distinct knee
in the redundant dictionary decomposition, once the fun-
damental high energy components get picked. We also ﬁnd
that the asymptotic slope of the curve of the residual energy
beyond the knee has a unique signature that is characterized
by the nature of the noise component (Gaussian or “White”
vs. Power-law or “Colored”), and the redundant dictionary
used.
8.2 Smaller Scales
At an appropriate aggregation level, network trafﬁc will ex-
hibit some periodicities. Trafﬁc time series data from a
variety of settings (enterprise and university) also conﬁrm
this hypothesis. These data typically represent the aggre-
gate trafﬁc at the border of a reasonably large network with
fairly high aggregation levels. We believe that the methods
for time-series compression using matching pursuit with
redundant dictionaries are still applicable to data even at
slightly lower scales of aggregation.
One of the objectives of compressing the time series is
to enable different scales of time resolution for anomaly
detection. It is imperative that the time scale for detecting
trafﬁc anomalies be less than the minimum time required
for a large network attack to saturate. When the compres-
sion is applied to trafﬁc aggregates at ﬁner time granulari-
ties (e.g. for each week if we had volume counts for each
ﬁve minute bin instead of hourly time bins), one expects
that the effective compression would be better. The ratio-
nale behind the intuition arises from the fact that the high
energy fundamental components correspond to relatively
low frequency components, and such pronounced period-
icities are unlikely to occur at ﬁner time-scales. As a pre-
liminary conﬁrmation of this intuition, we performed the
same compression procedures on a different data set, con-
sisting of 5 minute trafﬁc rates collected from SNMP data
from a single link. Note that with 5-minute time intervals,
we have 168 × 12 = 2016 data points per week. Figure 17
the relative error as a function of the number of coefﬁcients
used in the compressed representation (using DF +S). We
observe that with less than 40 ( = 2% of the original space
requirement) coefﬁcients we are able to adequately com-
press the original time-series (with a relative error of less
than 0.005), which represents signiﬁcantly greater possi-
ble compression than those observed with the hourly ag-
gregates.
8.3 Encoding Techniques
We observed that with larger dictionaries that include full-
translation wavelets, we can achieve better compression.
There is, however, a hidden cost in the effective compres-
sion with larger dictionaries as the indices of a larger dic-
r
o
r
r
E
e
v
i
t
l
a
e
R
0.06
0.05
0.04
0.03
0.02
0.01
0
0
10
20
30
F
F+S
70
80
90
100
40
Number of coefficients
50
60
Figure 17: Compressing SNMP data collected at ﬁve
minute intervals from a single link
tionary potentially require more bits to represent than the
indices of a smaller dictionary. One can imagine better
ways of encoding the dictionary indices (e.g., using Huff-
man coding) to reduce the amount of space used up for
storing the dictionary indices in addition to the component
amplitudes. Our work explored the potential beneﬁt of us-
ing signal processing methods for lossy compression and
we observed that there is a substantial reduction in the stor-
age requirement using just the methods presented in this pa-
per. Many compression algorithms use lossy compression
techniques along with efﬁcient encoding techniques (loss-
less compression) to get the maximum compression gain,
and such combinations of lossy and lossless compression
methods can be explored further.
8.4 Joint Compression
We observe that there are multiple sources of correlation
across the different trafﬁc dimensions that may be addition-
ally utilized to achieve better compression. The temporal
stability of the compressed representations (Section 6.3.2)
suggests there is scope for exploiting the similarity across
different weeks for the same trafﬁc aggregate. For exam-
ple, we could build a stable model over k weeks of data for
each port/preﬁx and only apply the sparse approximation
to the difference of each particular week from the model.
Alternately one could imagine applying the simultaneous
compression algorithms [16] across the different weeks for
the same port. The simultaneous compression algorithms
approximate all these signals at once using different linear
combinations of the same elementary signals, while bal-
ancing the error in approximating the data against the to-
tal number of elementary signals that are used. We also
observed that there is reasonable correlation in spatial di-
mensions, since the compressed representation of different
trafﬁc aggregates such as ﬂows, packets, and bytes show
signiﬁcant similarity (Section 6.3.3).
The observations of the low dimensionality of network
trafﬁc data across different links also raises the possibil-
ity of using Principal Component Analysis (PCA) [10] for
USENIX Association
Internet Measurement Conference 2005  
265
[7] INDYK, P. High-dimensional computational geometry. PhD thesis,
Stanford University, 2000.
[8] KRISHNAMURTHY, B., SEN, S., ZHANG, Y., AND CHEN, Y.
Sketch-based Change Detection: Methods, Evaluation, and Applica-
tions. In Proc. of ACM/USEINX Internet Measurement Conference
(2003).
[9] LAKHINA, A., CROVELLA, M., AND DIOT, C. Diagnosing
In Proc. of ACM SIGCOMM
network-wide trafﬁc anomalies.
(2004).
[10] LAKHINA, A., PAPAGIANNAKI, K., CROVELLA, M., DIOT, C.,
KOLACZYK, E., AND TAFT, N. Structural analysis of network traf-
ﬁc ﬂows. In Proc. of ACM SIGMETRICS (2004).
[11] LEMPEL, A., AND ZIV, J. Compression of individual sequences via
variable-rate coding. IEEE Transactions on Information Theory 24,
5 (1978), 530–536.
[12] MALLAT, S., AND ZHANG, Z. Matching pursuits with time fre-
quency dictionaries. IEEE Trans. Signal Processing 41, 12 (1993),
3397–3415.
[13] MILLER, A. J. Subset selection in regression, 2nd ed. Chapman
and Hall, London, 2002.
[14] Cisco Netﬂow. http://www.cisco.com/warp/public/
732/Tech/nmp/netflow/index.shtml.
[15] ROUGHAN, M., GREENBERG, A., KALMANEK, C., RUMSEWICZ,
M., YATES, J., AND ZHANG, Y. Experience in measuring in-
ternet backbone trafﬁc variability: Models, metrics, measurements
and meaning. In Proc. of International Teletrafﬁc Congress (ITC)
(2003).
[16] TROPP, J. A., GILBERT, A. C., AND STRAUSS, M. J. Algorithms
for simultaneous sparse approximation part i: Greedy pursuit. sub-
mitted (2004).
[17] ZHUANG, Y., AND BARAS, J. S. Optimal wavelet basis selection
for signal representation. Tech. Rep. CSHCN TR 1994-7, Institute
for Systems Research, Univ. of Maryland, 1994.
Notes
1Typically, k0 is less than k, i.e. the magnitudes of the amplitudes of
the dictionary components are less than the original time series.
2The slowest step in OMP is choosing the waveform which maximizes
the dot product with the residual at each step. We can speed up this step
with a Nearest Neighbors data structure [7] and reduce the time complex-
ity for each iteration to N + polylog(d).
3Note that for each Fourier coefﬁcient, we need to store both the real
part and the imaginary part. It appears that we may actually need twice
the space. However, the amplitudes for frequency f and frequency −f
are the same (except that they are complex conjugates of one another),
we can treat them as contributing only two coefﬁcients to the compressed
representation together in total as opposed to four coefﬁcients.
4We however note that there may be certain exceptional situations
(e.g., worm or DDoS attacks that use substantially different packet and
byte types) where such stable correlations between the ﬂow, packet, and
byte counts may not always hold.
extracting better spatial compression, both across different
trafﬁc aggregates (e.g. different ports, across time) and
across different measurements (e.g. across per-link, per-
router counts). PCA like methods can be used to extract the
sources of correlation before one applies redundant dictio-
nary approaches to compress the trafﬁc data. For example
we can collapse the 20 week data set for a single port into a
single matrix of trafﬁc data, on which PCA like techniques
can be applied to extract the ﬁrst few common components,
and the redundant dictionary can be applied on the residual
(the projection on the non-principal subspace) to obtain a
higher ﬁdelity representation.
9 Conclusions
There is a pressing need for ﬁne-grained trafﬁc analysis at
different scales and resolutions across space and time for
network monitoring applications. Enabling such analysis
requires the ability to store large volumes of historical data
across different links, routers, and customers, for generat-
ing visual and diagnostic aids for network operators.
In
this paper, we presented a greedy pursuit approach over
redundant dictionaries for compressing trafﬁc time series
data, and evaluated them using measurements from a large
ISP. Our observations indicate that the compression models
present a high ﬁdelity representation for a wide variety of
trafﬁc monitoring applications, using less than 20% of the
original space requirement. We also observe that most traf-
ﬁc signals can be compressed and characterized in terms of
a few stable frequency components. Our results augur well
for the visualization and modeling requirements for large
scale trafﬁc monitoring. Ongoing work includes evaluating
and extracting sources of compression across other spatial
and temporal dimensions, and evaluating the goodness of
trafﬁc models generated from compressed representations.
References
[1] BARFORD, P., KLINE, J., PLONKA, D., AND RON, A. A Signal
Analysis of Network Trafﬁc Anomalies. In Proc. of ACM/USENIX
Internet Measurement Workshop (2002).
[2] DUFFIELD, N. G., LUND, C., AND THORUP, M. Charging From
In Proc. of ACM SIGCOMM Internet
Sampled Network Usage.
Measurement Workshop (2001).
[3] ESTAN, C., SAVAGE, S., AND VARGHESE, G. Automatically In-
In
ferring Patterns of Resource Consumption in Network Trafﬁc.
Proc. of ACM SIGCOMM (2003).
[4] FROSSARD, P., VANDERGHEYNST, P., I VENTURA, R. M. F., AND
KUNT, M. A posteriori quantization of progressive matching pursuit
streams. IEEE Trans. Signal Processing (2004), 525–535.
[5] GILBERT, A. C., MUTHUKRISHNAN, S., AND STRAUSS, M. J.
Approximation of functions over redundant dictionaries using co-
herence. In Proc. of 14th Annual ACM-SIAM Symposium on Dis-
crete Algorithms (2003).
[6] GRIBONVAL, R., AND BACRY, E. Harmonic decomposition of au-
dio signals with matching pursuit. IEEE Trans. Signal Processing
(2003), 101–111.
266
Internet Measurement Conference 2005
USENIX Association