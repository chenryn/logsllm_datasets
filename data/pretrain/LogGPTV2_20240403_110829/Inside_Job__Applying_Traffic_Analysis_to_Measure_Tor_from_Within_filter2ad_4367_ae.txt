is primarily used as a proxy to
facilitate data transfer between the other nodes and as a single
aggregation point following a completed measurement phase.
Each data collector initializes each counter that it is conﬁgured
to count with differentially-private noise, and also with random
blinding values that are secret shared to each share keeper.
After initialization, each counter on each data collector and
share keeper will appear to hold a random value. The data
collectors each connect to their conﬁgured Tor relay, extract
events, and increment the conﬁgured counters when appropri-
ate. At the end of a measurement phase, the data collectors
and share keepers send their counter values to the tally server
for aggregation. After aggregation, the blinding values that
were stored on the share keepers during the measurement will
cancel out with the blinding values that were added at the
data collectors, and the ﬁnal output will be the sum of the
true counter value and the differentially-private noise that was
added by the data collectors.
The noise that is added to each counter protects users
under differential privacy [9], and the blinding values provide
for secure aggregation across measurement relays. No data
collector can learn anything about the counters of other relays
not also controlled by the same operator, and individual data
collector contributions to the ﬁnal aggregated counter values
are hidden (by the random blinding values) as long as at
least one share keeper is honest. Jansen and Johnson provide
additional PrivCount details and proofs of PrivCount’s security
and privacy properties [19].
2) Enhancing PrivCount: PrivCount supports a wide range
of statistics (e.g., number of circuits, amount of data trans-
ferred, etc.), and we enhanced it to support counting the real-
time predictions of a circuit’s purpose, a relay’s position in
a circuit, and the onion page being accessed in a circuit. To
enable these predictions, we utilize a version of Tor that has
been modiﬁed to allow for circuit signaling as described in
V-A1, and to export the same circuit and cell meta-data that we
discussed in V-A2. We use circuit signaling to collect ground
truth during the measurement while separating ground truth
circuits that we created from regular circuits that we did not
(see Section VII-E for more details).
We developed a new library for PrivCount called
onionpop9 that implements the classiﬁers needed for pre-
diction. The onionpop library extracts the features we need
for each of the three classiﬁers from Tor circuits and cells,
and wraps the python sklearn and pyarborist APIs to
train the classiﬁers and predict purpose, position, and webpage.
We train our models to make binary predictions of when the
purpose is rendezvous, position is R-C-M1, and webpage is
the front page of our SNS of interest. We added new counters
to PrivCount to record the results of the predictions.
Due to its sensitive nature, we do not log any information
to disk from circuits that we did not originate ourselves.
Therefore, a signiﬁcant concern during the development of our
prediction library is that PrivCount will need to process cell
information from fast Tor relays in real time. For safety, we
store circuit and cell meta-data in RAM only for the lifetime of
the circuit; when the circuit ends, we run our predictions, in-
crement counters to count the results, and then clear the corre-
sponding circuit and cell meta-data from RAM. This is consis-
tent with PrivCount’s data storage model, however, it requires
that we process and store a potentially large number of cells.
To mitigate potential memory and computational resource
bottlenecks, we implement a conﬁgurable hard upper limit on
the number of cells that we store per circuit (well above the
amount we need to distinguish the SNS) and only process
a subset of the circuits on our relays by sampling circuits
uniformly at random according to a conﬁgurable sample rate.
C. PrivCount Deployment
We set up a PrivCount deployment with 1 tally server,
3 share keepers, and 17 data collectors each connecting to
a distinct Tor relay. These nodes were distributed among 3
operators and hosted in 3 countries (Canada, France, and the
United States). Each of the relays ran our modiﬁed version
of Tor, and each of the tally server, share keepers, and data
collectors ran our modiﬁed version of PrivCount.10
1) Privacy: Our PrivCount deployment uses the parameters
and privacy budget allocation techniques set out by Jansen
and Johnson [19]. Speciﬁcally, we use differential privacy
parameters  = 0.3 (which has also been used by Tor [13]), and
δ = 10−3 (which is an upper bound on choosing a noise value
that violates -differential privacy). Our deployment provides
8https://github.com/privcount
9https://github.com/onionpop/onionpop
10All framework components are available at https://github.com/onionpop.
11
TABLE V.
DAILY ACTION BOUNDS FOR PRIVCOUNT DEPLOYMENT
Action
New general-purpose circuits
New rendezvous circuits
Client-side rendezvous circuits
Server-side rendezvous circuits
Client-side rendezvous circuits to SNS
Bound
90
48
24
24
2
TABLE VI.
COMBINED POSITIONAL RELAY BANDWIDTH BY
PERCENT FOR PRIVCOUNT DEPLOYMENT
Round
Guard Middle
Measurement 1
Measurement 2
Measurement 3*
1.15%
1.30%
1.03%
0.78%
0.87%
0.68%
Exit
3.52%
3.11%
*0.0%
Intro.
0.88%
0.99%
0.77%
Rend.
0.78%
0.87%
0.68%
* To mitigate potential resource issues, exit relays were excluded from
measurement 3 (the classiﬁcation round) since they would not have
contributed to middle relay onion service prediction counters.
privacy according to the daily action bounds shown in Table V,
which are all based on circuit counts since that is what our
deployment will measure; users whose actions stay below these
bounds will be protected under differential privacy. We protect
users who use 90 or fewer general-purpose circuits per day,
which could be used to access one site every ten minutes for 8
hours plus 10 additional circuits. We protect users who use 48
or fewer rendezvous circuits per day when not distinguishing
between client-side or server-side, and otherwise 24 or fewer
each of client-side and server-side rendezvous circuits per day:
75 percent of the onion sites we crawled (Section VI) used 4 or
fewer circuits, and so the number of circuits we protect could
be used to access 1 onion site every 10 minutes for one hour.
2) Measurement Rounds: We ran three different 24-hour
long measurement rounds. The ﬁrst round of measurements
was used to calibrate the noise added to our counters. We
used previously published measurements of Tor activity [19]
to allocate our privacy budget across the conﬁgured counters.
We then measured general and onion service circuit usage from
different relay positions to obtain updated estimates of circuit
activity, which we used to adjust the allocation of our privacy
budget in the subsequent rounds.
In the second measurement round, we focused on measur-
ing the number of direct connections from the SNS of interest
to our relays serving in the rendezvous position based on the IP
address and autonomous system (AS) number of the SNS. This
was possible because the SNS runs a single onion service that
connects directly to the rendezvous point rather than a normal
onion service which builds a three-hop circuit to connect. This
set of measurements allow us to verify our circuit purpose and
position classiﬁers.
In the third measurement round, we enabled our classiﬁers
and focused on counting the results of the predictions. We also
conﬁgured a crawler under our control to access the SNS in
order to assert that our deployment was working properly and
to cross check our prediction results (the prediction results
for our crawler’s circuits were kept separate from the results
for other circuits). During round three only, we conﬁgured
a circuit sample rate of 0.12 and excluded our exit relays
from the measurement (since they would not contribute to the
middle relay prediction counters) in order to prevent resource
bottlenecks in our deployment pipeline. The percentage of
Tor network bandwidth that the relays in our deployment con-
trolled during each measurement round is shown in Table VI.
D. Research Ethics and User Safety
Our measurement study explicitly prioritizes user safety
as a primary goal. We practice data minimization, limit mea-
surement granularity, and provide additional security to the
measurement process as described above. We have incorpo-
rated feedback from the Tor Research Safety Board11 into our
methodology: on suggestion of the board we created a website
explaining our study12 and linked our measurement relays to
it, and we informed the SNS of our intentions to measure their
site (although we did not receive a response from any of the
employees of the SNS).
Because the main classiﬁcation-based measurements are
done from middle relay positions, onion-encryption technically
prevents us from learning any client-identifying information.
Although this protects users to some extent, we further protect
users by utilizing the state-of-the-art in safe Tor measurement
tools and techniques. Speciﬁcally, we use PrivCount and the
techniques set out by Jansen and Johnson [19] and Elahi
et al. [11] to provide differential privacy and securely aggregate
measurements across all of our relay data collectors.
The PrivCount counters are initiated to noisy values to
ensure differential privacy is maintained, and are then blinded
and distributed across several share keepers to provide a secure
aggregation process. At the end of the process, we learn only
the value of these noisy counts aggregated across all data
collectors, and nothing else about the information that was
used during the measurement process. Speciﬁcally, we do
not learn relay-speciﬁc inputs to the ﬁnal counter value, and
client usage of Tor during our measurement is protected under
differential privacy.
Importantly, we chose to show our proof-of-concept by
only predicting accesses to a single onion site that we believed
had non-trivial usage and that already has implied that it does
not require anonymity by running a non-anonymous single
onion service. We explicitly chose not to measure additional
regular onion sites because: (i) we did not believe it was
necessary to show the effectiveness of our techniques; (ii) we
wanted to avoid leaking more information than necessary about
speciﬁc onion site usage; and (iii) running a hidden onion
service would imply that anonymity is required or at least
desired by the service.
E. Results
In addition to measuring the results of our classiﬁers, we
also focused our PrivCount deployment on direct measure-
ments that would allow us to validate our classiﬁcation results.
1) Direct Measurements: The direct measurement results
are shown in Table VII. We measured the number of observed
circuits on our relays from the circuit entry, middle, and end
(including various types of rendezvous circuits). Our measure-
ments indicate a signiﬁcantly lower number of onion service
rendezvous circuits compared to non-onion service circuits,
as expected. While we discuss how these measurements give
us an idea of popularity below, here we note that there are
more than an order of magnitude fewer rendezvous circuits
compared to non-onion service circuits.
Because there are many circuits built in Tor over the period
of a day, the relative accuracy of our direct measurements is
quite high: most of the 95% conﬁdence intervals lie between
11https://research.torproject.org/safetyboard.html
12https://onionpop.github.io
12
TABLE VII.
RESULTS FOR DIRECT MEASUREMENT OF ONION
SERVICE PROTOCOL
Circuit Count Description
Entry
Middle
End (Exit + Rendezvous + etc.)
Rendezvous (Client or Service)
Rendezvous Client
Rendezvous Service
Rendezvous Service to SNS ASN
Exit + Rendezvous Client
Exit + Rendezvous Service
Count ± 95% CI
20,351,667 ± 3.45%
16,212,157 ± 4.33%
18,904,815 ± 3.71%
272,180 ± 5.15%
136,191 ± 5.15%
136,874 ± 5.12%
718 ± 91.64%
11,327,103 ± 6.19%
11,394,600 ± 6.16%
TABLE VIII.
RESULTS FOR MEASUREMENT OF ONION SERVICE
CLASSIFIER DETECTION
Classiﬁer
Purpose is Rendezvous*
Ground Truth Tests**
Position is R-C-M1*
Ground Truth Tests**
Site is SNS*
Ground Truth Tests**
# Positives
114,762±28.54%
645 (100%)
49,679±32.99%
623 (96.5%)
10±1200%
374 (60.0%)
# Negatives
2,444,166±79.82%
0 (0%)
68,022±48.15%
22 (3.4%)
45,376±36.12%
249 (40.0%)
* These values may appear lower than expected because we sampled circuits
at a rate of 12% due to resource constraints.
** The ground truth tests were run with a crawler accessing the SNS during
measurement, so these values represent true positives and false negatives.
3 and 6 percent. The one outlier is the direct measurement
from the rendezvous node position of connections from the
SNS ASN, which we can use to measure its popularity since
this particular SNS runs a single onion service. The conﬁdence
interval is higher than expected (91.64%) which indicates that
the SNS onion service is much less popular than expected,
with potentially fewer than one hundred accesses through our
relays during our measurement period.
2) Classiﬁer Measurements: A primary purpose of our
measurement is to test the ability of our classiﬁers to detect
when a relay serves on a rendezvous circuit, in the R-C-M1
position, and if it can identify accesses to a site of interest (SNS
in our case). To do this, we send circuit meta-data (including
cell meta-data for cells transferred on the circuit) to our classi-
ﬁers when the circuit ends and record the detection results. We
also run a crawler that creates rendezvous circuits through our
middle relays during our measurement. The circuits created by
our crawler provide ground truth that we can use to evaluate
the classiﬁers’ true positive and false negative rates.
Our classiﬁer detection measurement results (including our
ground truth crawler tests) are shown in Table VIII. We
again see a similar trend in that an order of magnitude fewer
rendezvous circuits are detected compared to non-rendezvous
circuits. With these measurements, there is a signiﬁcant amount
of noise associated with our measurements; this is primarily
because we added the full amount of noise to provide dif-
ferential privacy while at the same time sampling only 12%
of circuits due to resource constraints. This has signiﬁcantly
increased the relative noise in our measurements. As in our
direct measurements, the low number of SNS circuits has also
caused our measure of the number of positive SNS detections
to appear insigniﬁcant due to the large conﬁdence interval asso-
ciated with the noise that we added in order to protect privacy.
Our ground truth measurements show that the true positive
rate for the purpose classiﬁer was 100%, the true positive rate
for the position classiﬁer was 96.5% while the false negative
TABLE IX.
Description
LIKELY ONION SERVICE POPULARITY BY FRACTIONS OF
CIRCUITS OF VARIOUS TYPES
Method
Popularity
Onion Service Popularity (as % of non-onion circuits)
Rendezvous / Entry