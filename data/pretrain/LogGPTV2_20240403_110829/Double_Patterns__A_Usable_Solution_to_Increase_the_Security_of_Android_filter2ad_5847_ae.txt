Reflected in Table 10 in the Appendix, we found that the top
three reasons participants would choose to utilize a DPatt as their
authentication method is the memorability of the pattern they chose,
the notion that they like the new interface itself, and the belief that
DPatts themselves are secure, respectively. Regarding memorability,
it makes sense that this is the top reason participants chose to utilize
their DPatt, as we also asked participants to describe their strategies
when choosing their DPatt during selection, and over half of the 25%
sub-sample reported making their DPatt memorable as an aspect
of their strategy.
Coinciding with memorability is the visual aspect of DPatts. Ta-
ble 4 portrays visual representations of the most frequently chosen
DPatts within our survey. In addition, we examined participants’
quantitative responses regarding DPatt selection. Reported in Ta-
ble 9, roughly 60% of the sub-sample cites using visual aspects of
DPatts in their selection strategy. Also detailed in Table 9 are partic-
ipants’ post pattern selection notions regarding their own creation
strategy, as well as a self evaluation of their DPatt’s security and
how difficult it was for them to choose their DPatt.
Non-Pattern UsersPattern UsersNon-Pattern UsersPattern UsersNon-Pattern UsersPattern UsersNon-Pattern UsersPattern UsersNon-Pattern UsersPattern Users05101520253035404550556065707580859095100Double Patterns are a secure way to unlock my personal device.Double Patterns are more secure than the original Android Patterns for unlocking my personal device.Double Patterns are more secure than 4-digit PIN codes for unlocking my personal device.Double Patterns are more secure than 6-digit PIN codes for unlocking my personal device.Double Patterns are more secure than alpha-numeric passwords for unlocking my personal device.Strongly DisagreeDisagreeNeither Agree Nor Disag…AgreeStrongly AgreeResponse227ACSAC 2020, December 7–11, 2020, Austin, USA
Timothy J. Forman and Adam J. Aviv
Table 7: Average (stdev.) Setup/Recall Time for Double Patterns (outliers removed using Tukey fencing)
Treatment
Control
BL-First
BL-Both
Total
Time
25.41s (14.57s)
35.50s (25.28s)
23.44s (12.74s)
27.14s (16.93s)
Setup
Attempts
3.16 (2.49)
4.45 (3.58)
3.47 (2.62)
3.70 (2.99)
Time/Attempt
5.26s (2.41s)
4.85s (2.11s)
4.70s (1.95s)
4.93s (2.16s)
Time
4.74s (2.80s)
5.26s (3.27s)
4.75s (2.82s)
4.94s (3.01s)
Attempts
1.36 (0.86)
1.45 (0.94)
1.30 (0.70)
1.37 (0.84)
Recall
Time/Attempt
3.29s (1.31s)
3.51s (1.45s)
3.21s (1.23s)
3.34s (1.34s)
Entry Time Recall Rate
3.29s (1.30s)
3.54s (1.40s)
3.19s (1.19s)
3.35s (1.31s)
97.13%
94.79%
97.20%
96.37%
Table 8: Simple Usability Scale sentiment.
Pat. Users
Non-Pat. Users Combined
Control
BL-First
BL-Both
Total
n
209
211
214
634
Num.
Pat. Users
57
49
56
162
SUS
78.55
77.81
78.39
78.27
SUS
70.90
69.68
73.84
71.47
72.99
71.56
75.04
73.21
6 DISCUSSION
Android pattern users continue to be a large cross-section of mobile
device users, ~25% in this study, and there has not been a significant
implementation change in Android patterns since initially deployed
in 2008. While still preferred less than PINs, it is fair to assume that
this stable user base will continue to prefer the graphical password
interface that is unique to Android devices. However, without viable
alternatives and extensions that provide increased security without
degrading the user experience, current Android pattern users are
less protected then their counterparts. Our results indicate that
Double Patterns (DPatts) offer real potential as a natural extension
to traditional Android patterns, that would be readily adopted and
naturally increase security.
DPatt has strong usability. Participants in our study entered
DPatts at roughly the same entry speed, less than a second slower
(3.35s vs. 3.0s estimate in previous work). There was also high mem-
orability > 94% for a short-term study. In qualitative feedback, only
two participants from our 25% sub-sample (of about 150 partici-
pants) noted they were concerned with DPatt being cumbersome.
Moreover, participants offered more than acceptable SUS scores,
and more encouraging, participants that already use an Android
pattern rated its usability in the 80-84th percentile. In fact, in the
casual feedback to the study, a few participants noted that they
were excited to see DPatts come to their device soon, expecting this
to be a new feature of Android patterns.
DPatts also greatly increase the security of Android patterns
without potentially frustrating user interaction. While blocklist-
ing further improved DPatt, even the control case provides in-
creased security more comparable to 4-/6-digit PINs. Other pro-
posals require re-selection of Android patterns, e.g., SysPal [12]
or meters [2, 23, 24], potentially frustrating users away from their
preferred choices, which they may reselect anyway if systems were
non-enforcing. DPatt instead would be viewed as a new extension,
more similar from going for 4- to 6-digit PINs, naturally encourag-
ing users to extend their prior selected pattern in a new way that
would increase security without the need of additional interven-
tions. This is evident by the fact that the individual patterns of a
DPatt that participants selected in this survey are no more secure
(or perhaps less secure) than traditional Android patterns; it is the
combination of two patterns that provides the security.
Finally, while most participants in our survey believed DPatts
are a secure way to unlock their personal device, current Android
pattern users perceive DPatt as particularly secure, especially in
comparison to other methods. This is a crucial view that suggests
DPatts would be readily adopted if available, particularly to pattern
users. Users would not be willing to change their authentication
method to a system that they believe will harm them, and it is clear
that DPatts provide a strong incentive for this group to upgrade
their security while maintaining their preferred graphical password
method.
7 CONCLUSION
In this paper, we proposed using Double Patterns (DPatts) as an
extension to Android patterns, whereby users enter two patterns,
in sequence and super-imposed, as their unlock authentication.
We conducted an online survey with n = 634 participants select-
ing DPatts in three treatments: a control treatment, first pattern
blocklist, and a full, DPatt blocklist.
We find, that across treatments, DPatts greatly increase the secu-
rity compared to traditional Android patterns. A simulated attacker
that must guess an unknown DPatt based on some training data,
would only guess 5.3% of the DPatts in the training set after 30 at-
tempts as compared to 23.6% of Android patterns. Blocklisting could
be a viable option for further improving security, only 1.9% and
0.9% of DPatts in the first-pattern blocklist and full DPatt blocklist
(respectively).
DPatts also provide minimal (if any) degradation in usability.
Even in a short survey, participants recalled their DPatts at high
rates (> 94%), and entry time is comparable with other current
authentication methods, 3.35s. Observing current Android pattern
users, this group had very high usability ratings as well as positive
perceptions of the security of DPatts. As this is the group most
likely to adopt DPatts (if deployed), this suggests that DPatts would
be well received as a natural extension to Android patterns.
ACKNOWLEDGMENTS
We would like to thank Daniel S. Roche at USNA for coordination
and advice on this project, and we thank Harshvardhan Verma for
assistance with qualitative coding. We also thank Maximillian Gola
and Philipp Markert for feedback on the survey. This material is
based upon work supported by the National Science Foundation
under Grants No. 1845300. Any opinions, findings, and conclusions
or recommendations expressed in this material are those of the
author(s) and do not necessarily reflect the views of the National
Science Foundation.
228Double Patterns: A Usable Solution to Increase the Security of Android Unlock Patterns
ACSAC 2020, December 7–11, 2020, Austin, USA
ARTIFACTS
We have provided artifacts from this paper that are sufficient for
generating Table 5 and Figures 4, 5, 6, and 7. The data and scripts
can be found at https://github.com/gwusec/2020-ACSAC-Double-
Pattern-Artifacts. Please contact the authors for additional requests.
REFERENCES
[1] Daniel Amitay. 2011. Most Common iPhone Passcodes. http://danielamitay.com/
blog/2011/6/13/most-common-iphone-passcodes, as of October 14, 2020.
[2] Panagiotis Andriotis, Theo Tryfonas, and George Oikonomou. 2014. Complexity
Metrics and User Strength Perceptions of the Pattern-Lock Graphical Authenti-
cation Method. In Conference on Human Aspects of Information Security, Privacy
and Trust (HAS ’14). Springer, Heraklion, Crete, Greece, 115–126.
[3] Panagiotis Andriotis, Theo Tryfonas, George Oikonomou, and Can Yildiz. 2013.
A Pilot Study on the Security of Pattern Screen-Lock Methods and Soft Side
Channel Attacks. In ACM Conference on Security and Privacy in Wireless and
Mobile Networks (WiSec ’13). ACM, Budapest, Hungary, 1–6.
Is Bigger Better?
[4] Adam J. Aviv, Devon Budzitowski, and Ravi Kuber. 2015.
Comparing User-Generated Passwords on 3x3 vs. 4x4 Grid Sizes for Android’s
Pattern Unlock. In Annual Computer Security Applications Conference (ACSAC ’15).
ACM, Los Angeles, California, USA, 301–310.
[5] Adam J. Aviv, John T. Davin, Flynn Wolf, and Ravi Kuber. 2017. Towards Baselines
for Shoulder Surfing on Mobile Authentication. In Annual Conference on Computer
Security Applications (ACSAC ’17). ACM, Orlando, Florida, USA, 486–498.
[6] Adam J. Aviv and Markus Dürmuth. 2018. A Survey of Collection Methods and
Cross-Data Set Comparison of Android Unlock Patterns. CoRR abs/1811.10548,
1–20.
[7] Adam J. Aviv, Katherine Gibson, Evan Mossop, Matt Blaze, and Jonathan M. Smith.
2010. Smudge Attacks on Smartphone Touch Screens. In USENIX Workshop on
Offensive Technologies (WOOT ’10). USENIX, Washington, District of Columbia,
USA, 1–7.
[8] Adam J. Aviv, Benjamin Sapp, Matt Blaze, and Jonathan M. Smith. 2012. Prac-
ticality of Accelerometer Side Channels on Smartphones. In Proceedings of the
28th Annual Computer Security Applications Conference (Orlando, Florida, USA)
(ACSAC ’12). Association for Computing Machinery, New York, NY, USA, 41–50.
https://doi.org/10.1145/2420950.2420957
[9] Joseph Bonneau. 2012. The science of guessing: analyzing an anonymized corpus
of 70 million passwords. In Proceedings of the 2012 IEEE Symposium on Security
and Privacy (SP’12). 538–552.
[10] Joseph Bonneau, Sören Preibusch, and Ross Anderson. 2012. A birthday present
every eleven wallets? The security of customer-chosen banking PINs. In Financial
Cryptography and Data Security. 25–40.
[11] Seunghun Cha, Sungsu Kwag, Hyoungshick Kim, and Jun Ho Huh. 2017. Boosting
the Guessing Attack Performance on Android Lock Patterns with Smudge Attacks.
In ACM Asia Conference on Computer and Communications Security (ASIA CCS ’17).
ACM, Abu Dhabi, United Arab Emirates, 313–326.
[12] Geumhwan Cho, Jun Ho Huh, Junsung Cho, Seongyeol Oh, Youngbae Song, and
Hyoungshick Kim. 2017. SysPal: System-Guided Pattern Locks for Android. In
IEEE Symposium on Security and Privacy (SP ’17). IEEE, San Jose, California, USA,
338–356.
[13] Nik Cubrilovic. 2009. RockYou Hack: From Bad To Worse. https://techcrunch.
com/2009/12/14/rockyou-hack-security-myspace-facebook-passwords/, as of
October 14, 2020.
[14] Alexander De Luca, Marian Harbach, Emanuel von Zezschwitz, Max-Emanuel
Maurer, Bernhard Ewald Slawik, Heinrich Hussmann, and Matthew Smith. 2014.
Now You See Me, Now You Don’t: Protecting Smartphone Authentication from
Shoulder Surfers. In ACM Conference on Human Factors in Computing Systems
(CHI ’14). ACM, Toronto, Ontario, Canada, 2937–2946.
[15] Maximilian Golla, Jan Rimkus, Adam J. Aviv, and Markus Duermuth. 2019. On
the In-Accuracy and Influence of Android Pattern Strength Meters. In Workshop
on Usable Security (USEC’19). https://doi.org/10.14722/usec.2019.23025
[16] Marian Harbach, Emanuel von Zezschwitz, Andreas Fichtner, Alexander De Luca,
and Matthew Smith. 2014. It’s a Hard Lock Life: A Field Study of Smartphone
(Un)Locking Behavior and Risk Perception. In Symposium on Usable Privacy and
Security (SOUPS ’14). USENIX, Menlo Park, California, USA, 213–230.
[17] Taekyoung Kwon and Sarang Na. 2014. TinyLock: Affordable defense against
smudge attacks on smartphone pattern lock systems. computers & security 42
(2014), 137–150.
[18] Marte Løge, Markus Dürmuth, and Lillian Røstad. 2016. On User Choice for
Android Unlock Patterns. In European Workshop on Usable Security (EuroUSEC ’16).
ISOC, Darmstadt, Germany.
[19] Philipp Markert, Daniel V. Bailey, Maximilian Golla, Markus Dürmuth, and
Adam J. Aviv. 2020. This PIN Can Be Easily Guessed: Analyzing the Security of
Smartphone Unlock PINs. In IEEE Symposium on Security and Privacy (SP ’20).
IEEE, San Francisco, California, USA.
[20] Florian Schaub, Ruben Deyhle, and Michael Weber. 2012. Password Entry Usabil-
ity and Shoulder Surfing Susceptibility on Different Smartphone Platforms. In
International Conference on Mobile and Ubiquitous Multimedia (MUM ’12). ACM,
Ulm, Germany, 13:1–13:10.
[21] Florian Schaub, Ruben Deyhle, and Michael Weber. 2012. Password Entry Us-
ability and Shoulder Surfing Susceptibility on Different Smartphone Platforms.
In Proceedings of the 11th International Conference on Mobile and Ubiquitous
Multimedia (MUM ’12).
[22] Stefan Schneegass, Frank Steimle, Andreas Bulling, Florian Alt, and Albrecht
Schmidt. 2014. Smudgesafe: Geometric image transformations for smudge-
resistant user authentication. In Proceedings of the 2014 ACM International Joint
Conference on Pervasive and Ubiquitous Computing. 775–786.
[23] Youngbae Song, Geumhwan Cho, Seongyeol Oh, Hyoungshick Kim, and Jun Ho
Huh. 2015. On the Effectiveness of Pattern Lock Strength Meters: Measuring the
Strength of Real World Pattern Locks. In ACM Conference on Human Factors in
Computing Systems (CHI ’15). ACM, Seoul, Republic of Korea, 2343–2352.
[24] Chen Sun, Yang Wang, and Jun Zheng. 2014. Dissecting Pattern Unlock: The
Effect of Pattern Strength Meter on Pattern Selection. Journal of Information
Security and Applications 19, 4–5 (Nov. 2014), 308–320.
[25] Harshal Tupsamudre, Vijayanand Banahatti, Sachin Lodha, and Ketan Vyas.
2017. Pass-O: A Proposal to Improve the Security of Pattern Unlock Scheme. In
Proceedings of the 2017 ACM on Asia Conference on Computer and Communications
Security (ASIACCS 17). ACM, 400–407.
[26] Sebastian Uellenbeck, Markus Dürmuth, Christopher Wolf, and Thorsten Holz.
2013. Quantifying the Security of Graphical Passwords: The Case of Android