// WARNING: Removing unreachable block (ram,0x00411041)
// WARNING: Removing unreachable block (ram,0x0041101c)
// WARNING: Could not reconcile some variable overlaps
ulonglong __cdecl FUN_00410cf0(uint *param_1,uint *param_2)
{
  longlong lVar1;
  uint *puVar2;
  uint uVar3;
  uint extraout_ECX;
  uint *puVar4;
  uint extraout_ECX_00;
  uint uVar5;
  uint uVar6;
  int iVar7;
  uint uVar8;
  undefined4 uVar9;
  uint uVar10;
  bool bVar11;
  undefined8 uVar12;
  ulonglong uVar13;
  ulonglong uVar14;
  ulonglong uVar15;
  undefined local_21c [460];
  uint *local_50;
  uint local_4c;
  undefined8 local_48;
  uint *local_40;
  uint local_3c;
  uint local_38;
  uint local_34;
  int local_30;
  int local_28;
  uint local_24;
  uint *local_20;
  uint *local_1c;
  uint local_18;
  int local_14;
  int local_10;
  uint local_c;
  uint local_8;
  uVar8 = *param_1;
  if ((uVar8 != 0) && (local_38 = *param_2, local_38 != 0)) {
    uVar6 = local_38 - 1;
    uVar3 = uVar8 - 1;
    if (uVar6 == 0) {
      local_c = param_2[1];
      if (local_c == 1) {
        uVar8 = param_1[1];
        *param_1 = 0;
        _memcpy_s(param_1 + 1,0x1cc,local_21c,0);
        return (ulonglong)uVar8;
      }
      if (uVar3 == 0) {
        uVar8 = param_1[1];
        *param_1 = 0;
        _memcpy_s(param_1 + 1,0x1cc,local_21c,0);
        uVar6 = uVar8 % local_c;
        param_1[1] = uVar6;
        *param_1 = (uint)(uVar6 != 0);
        return (ulonglong)uVar8 / (ulonglong)local_c;
      }
      uVar6 = 0;
      local_10 = 0;
      local_28 = 0;
      local_1c = (uint *)0x0;
      if (uVar3 != 0xffffffff) {
        local_20 = param_1 + uVar8;
        puVar4 = param_1;
        do {
          puVar2 = puVar4;
          puVar4 = puVar2;
          uVar12 = __aulldvrm(*local_20,uVar6,local_c,0);
          local_48._4_4_ = (int)((ulonglong)uVar12 >> 0x20);
          local_28 = local_10;
          local_20 = local_20 + -1;
          uVar8 = uVar8 - 1;
          uVar6 = extraout_ECX;
          local_1c = puVar2;
          local_10 = (int)uVar12;
        } while (uVar8 != 0);
      }
      *param_1 = 0;
      _memcpy_s(param_1 + 1,0x1cc,local_21c,0);
      param_1[1] = uVar6;
      *(uint **)(param_1 + 2) = local_1c;
      *param_1 = (uint)(local_1c != (uint *)0x0) + 1;
      return CONCAT44(local_28,local_10);
    }
    if (uVar6 > local_10 == 0) {
            local_10 = local_10 + -1;
          }
        }
        if (local_34 == 0) {
          local_10 = 0x20;
        }
        else {
          local_10 = 0x1f - local_10;
        }
        local_30 = 0x20 - local_10;
        if (local_10 != 0) {
          uVar8 = local_24 >> ((byte)local_30 & 0x1f);
          local_24 = local_24 > ((byte)local_30 & 0x1f);
          }
        }
        local_20 = (uint *)0x0;
        local_1c = (uint *)(iVar7 + -1);
        uVar9 = 0;
        local_c = uVar3;
        if (-1 > ((byte)local_30 & 0x1f);
              local_8 = local_4c;
              uVar12 = __allshl();
              local_8 = (uint)((ulonglong)uVar12 >> 0x20);
              uVar8 = uVar8 | (uint)uVar12;
              local_18 = local_18 > ((byte)local_30 & 0x1f);
              }
            }
            uVar13 = __aulldvrm(uVar8,local_8,local_34,0);
            uVar15 = (ulonglong)extraout_ECX_00;
            local_28 = 0;
            local_48 = uVar13;
            if ((int)(uVar13 >> 0x20) != 0) {
              local_48 = uVar13;
              uVar14 = __allmul((uint)(uVar13 - 0xffffffff),(uint)(uVar13 - 0xffffffff >> 0x20),
                                local_34,0);
              local_14 = (int)(uVar13 >> 0x20);
              local_8 = (uint)uVar13;
              uVar15 = uVar14 + uVar15;
              local_28 = (int)(uVar15 >> 0x20);
              local_48 = 0xffffffff;
            }
            local_14 = (int)(local_48 >> 0x20);
            uVar8 = (uint)uVar15;
            uVar13 = local_48;
            if ((int)(uVar15 >> 0x20) == 0) {
              do {
                uVar6 = (uint)local_48;
                local_8 = local_18;
                uVar15 = __allmul(local_24,0,uVar6,(uint)(local_48 >> 0x20));
                if (uVar15 > 0x20);
            if (uVar13 != 0) {
              uVar6 = 0;
              uVar8 = 0;
              if (local_38 != 0) {
                puVar2 = param_2 + 1;
                local_18 = local_38;
                puVar4 = local_40;
                do {
                  lVar1 = (local_48 & 0xffffffff) * (ulonglong)*puVar2;
                  uVar3 = (uint)lVar1;
                  uVar10 = uVar6 + uVar3;
                  uVar6 = uVar8 + (int)((ulonglong)lVar1 >> 0x20) + local_48._4_4_ * *puVar2 +
                          (uint)CARRY4(uVar6,uVar3);
                  uVar8 = 0;
                  if (*puVar4 > 0x20);
            local_40 = local_40 + -1;
            local_1c = (uint *)((int)local_1c + -1);
            local_50 = local_50 + -1;
            local_3c = local_3c - 1;
            uVar9 = local_20;
            local_20 = (uint *)(int)uVar13;
          } while (-1 > 0x20);
            uVar11 = local_77c._4_4_ >> 0x14;
            if (uVar11 != 0) {
              uVar9 = 0;
              iVar8 = 0x100000;
            }
            else {
              iVar8 = 0;
              uVar9 = uVar11;
            }
            local_760 = (undefined8 *)((uint)local_77c + uVar9);
            local_1d4._4_4_ =
                 (local_77c._4_4_ & 0xfffff) + iVar8 + (uint)CARRY4((uint)local_77c,uVar9);
            local_74c = (undefined8 *)(uVar11 + (uint)(uVar11 == 0));
            param_1 = uVar14;
            FUN_00413fa0();
            FUN_004140b0();
            local_76c = FUN_00416550();
            if ((local_76c == 0x7fffffff) || (local_76c == 0x80000000)) {
              local_76c = 0;
            }
            local_1d4._0_4_ = local_760;
            uVar14 = (uint)(local_1d4._4_4_ != 0);
            local_3a8 = (undefined8 *)0x0;
            _Src_00 = (undefined8 *)(uVar14 + 1);
            if (local_74c > iVar8 == 0) {
                    iVar8 = iVar8 + -1;
                  }
                }
                if (puVar15 == (undefined8 *)0x0) {
                  iVar8 = 0;
                }
                else {
                  iVar8 = iVar8 + 1;
                }
                local_75c = &local_1d8 + (int)_Src_00;
                puVar15 = _Src_00;
                ppuVar16 = local_75c;
                do {
                  if (puVar15 < _Src_00) {
                    local_750 = *(undefined8 **)((int)&local_1d4 + (int)puVar15 * 4);
                  }