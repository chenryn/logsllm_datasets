open technical issues than resolved ones. 
characterizing 
I  had  been  unofficially 
this 
UNCLASSIFIED  process  while  my  clearance  was  being 
finalized. Our writing group’s principal members were: 
Roger  Schell,  Dan  Edwards,  Mario  Tinto,  Jim 
Anderson, Pete Tasker, Grace Nibaldi, and myself. 
involved 
in 
3.1.1.  First  draft:  powder  blue.  On  my  arrival  at  the 
Center,  we  still  lacked  a  unified  document.  The 
previous week’s workshop on capability based systems 
had  failed  to  shed  adequate  light  on  how  their 
evaluation  criteria  could  be  structured.  I  received  the 
welcomed  news  that  Sheila  Brand  was  going  to  be 
joining  the  Center,  probably  in  May  to  lead  the 
Standards  organization.  I  also  learnt  of  a  controversy 
articulated  by  the  MITRE  Corporation  over  how 
evaluation  criteria  should  be  structured.  The  Nibaldi 
proposal  consisted  of  a  strictly-ordered  set  of  seven 
requirement-subsuming evaluation classes ranging from 
no protection through attributes beyond the state of the 
art.  While  Nibaldi’s  work  could  be  accepted  as  a 
refinement of the Lee panel’s results, nearly 2-1/2 years 
had  passed  since  its  publication,  and  critics  observed 
that the Lee panel had not prescribed a strict hierarchy 
of fully subsuming levels.  
A MITRE report written by Anne-Marie Claybrook 
proposed  that  products  be  evaluated  against  criteria 
drawn,  by  the  product  developer,  from  sets  of  policy, 
mechanism  and  assurance  requirements 
that  are 
Proceedings of the 20th Annual Computer Security Applications Conference (ACSAC’04) 
1063-9527/04 $ 20.00 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 11:37:23 UTC from IEEE Xplore.  Restrictions apply. 
perceived  as  desirable  for  an  application.  This  was 
described  as  following  a  “Chinese-Menu”  approach. 
There were many strong adherents to this position who 
argued that not all requirements for, say Nibaldi Level 
4  need  apply  to  a  multilevel  transaction-only  system 
that  is  to  operate  in  an  environment  that eliminates all 
remote  user  capabilities.  This  proposal  is  not  much 
different  from  the  contemporary  trend  that  grew  from 
the German IT Security Criteria, the UK’s ITSEC, and 
finally  that  of  drawing  “protection  profiles”  from  the 
Common  Criteria.  Many  strong  arguments  were 
presented  on  the  value  of  flexibility  that  would  come 
from this approach, and the ability to tailor a system to 
its envisioned use. 
However,  others  argued  that  it  would  lead  only  to 
confusion.  Roger  Schell  was  the  strongest  advocate  of 
preserving  Nibaldi’s  structure  of  a  small  number  of 
well-ordered  levels.  His  rationale  was  based  on  his 
years  of  experience  in  the  DoD  procurement  process. 
Put  simply,  procurement  officers  have  expertise  in 
specifying  purchases,  not  in  performing  comparative 
assessments of which competing technical ideas best fit 
a  specific  application.  He  argued  that  a  procurement 
officer  needed  to  be  presented  with  a  strictly  ordered 
set  of  product  characterizations  that  are  keyed  to  the 
security  requirements  under  which  an  application 
would  operate.  Thus,  a  procured  system  that  would 
have  to  operate  in  a  remote-user  environment  with 
CONFIDENTIAL 
through  TOP  SECRET  data  would 
minimally have to have attained a specified (or higher) 
degree  of  “certifiability”.  This  question  could  be 
readily  answered  by  having  a  frequently-updated 
published Evaluated Products List from which to select 
and qualify compliant trusted products. 
The  eloquence  of  Schell’s  argument  settled  the 
dispute.  We  agreed  rapidly  to  argue  requirement-by-
requirement  among  ourselves  and to fit together seven 
ordered levels of trusted systems criteria, plus one level 
for  products  that  failed  to  satisfy  the  requirements  of 
any level. To maintain our focus, Schell also suggested 
that  we  select  existing  products  or  developments  to 
characterize  each  of  the  levels  we  were  defining, 
stressing  the  value  of  having  worked  engineering 
examples for each evaluation class. 
Finally,  we  agreed  that  we  wanted  to  limit  the 
possibility of new intermediate evaluation classes being 
introduced over time. We were particularly adamant on 
there  being  no  new  classes  added  to  water  down  the 
minimum  requirements  for  each  of 
the  obvious 
divisions  we  had  settled  on.  This  called  for  a  labeling 
scheme  that  established  minima  for  each  of  the  four 
major  divisions  we  had 
envisioned:  Minimal 
Protection,  Discretionary  Protection;  Mandatory 
Protection;  and  Verified  Protection.  Dan  Edwards 
solved  the  problem  by  assigning  evaluation  classes  a 
digraph  rating,  patterned  on  bond  ratings  wherein  the 
divisions  were  ordered  alphabetically  with  D  required  principally  the 
addition  of discretionary access controls to a seasoned 
commercial  product  that  could  separate  its  users  from 
the  operating  system’s  domain  of  execution.  A   
system,  known  to  us  as  “MAC  with  Training  Wheels” 
would  essentially  be  a    product  that  performed 
mediation and labeling on a defined subset of its users 
and objects; and an  product would essentially be 
a  product having a formal verified design. 
The 
identified  classes  and 
identified  worked 
examples were, as drawn from our Final Draft [8]: 
Class : Common Practice. This evaluation class is 
reserved  for  systems  that  have  been  evaluated  and 
failed to meet the requirements of a higher class. 
Class  :  Discretionary  Security  Protection.  This 
class  of  systems  has  some  form  of  mechanism 
providing  individual  user  authentication,  provides 
nominal discretionary access control among users and 
data, and is self-protecting. Candidate: UNIX 
Class  :  Controlled  Access  Protection.  Systems 
in this class have at least discretionary access control 
enforced on users. The requirements of this class may 
be  met  through  the  use  of  [a]  security  add-on  or 
security  overlay  package.  The  principal  distinction 
between  Class    and  Class    is  that  Class 
 requires individual accountability and security-
event auditing features. Candidate: RACF, ACF2 and 
Secure add-on packages for IBM’s MVS/370. 
Class : Labeled Security Protection. Class  
systems  provide  mandatory  security  access  control. 
Discretionary  access  control  suitable  for  DoD  need-
to-know protection is provided. The notion of a well-
defined  TCB  appears  even  though  a  formal  security 
model  is  not  required.  Security  marking  of  data  is 
required.  Any  serious  flaws  identified  by  penetration 
testing  have  been  removed.  Candidate:  GCOS, 
security retrofitted third-generation operating system 
Class  :  Structured  Protection.  In  this  class  of 
systems, mandatory security is extended to all objects 
visible outside the TCB, and information flow control 
and  confinement  channels  are addressed. A model of 
the  security  policy  enforced  by  the  TCB  is  required. 
The TCB exhibits deliberate security structuring, and 
Proceedings of the 20th Annual Computer Security Applications Conference (ACSAC’04) 
1063-9527/04 $ 20.00 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 11:37:23 UTC from IEEE Xplore.  Restrictions apply. 
mechanisms 
Authentication 
stringent  configuration  management  controls  are 
imposed. 
are 
strengthened,  and  features  to  support  trusted  facility 
management are provided. Candidate: the commercial 
version of Multics incorporating the Access Isolation 
Mechanism  (AIM)  with  class    attention  to 
storage channels. 
Class : Security Domains. The TCB of this class 
of  system  supports  a  defined  security  model.  The 
principle  of  least  privilege  is  pervasively  applied 
within  the  TCB  in  this  class  of  system.  All  security 
relevant  code  is  clearly  identified  and  the  TCB  is 
structured  to  separate  security  relevant  and  non-
security 
into  different  domains. 
Evidence that the TCB satisfies the reference monitor 
requirements  is  required.  Hardware  protection  or 
some other form of very convincing argument is used 
to show that any unexpected software event in a non-
security relevant domain cannot affect the software in 
a security relevant domain. Candidate: the redesign of 
Project Guardian Multics. 
relevant  code 
Class 
:  Verified  Design.  The  main 
characteristics  of  systems  in  this  class  are  that  a 
formal model exists, the top-level user interface of the 
TCB  has  been  formally  specified,  and  the  TCB  has 
been  designed  and  developed  in  conjunction  with 
formal  verification  techniques  and  verified  to  satisfy 
the  model.  Additional  (non-verification)  evidence  is 
required  to  show  that  the  TCB  fulfills  the  reference 
monitor  requirements.  The  facilities  and  procedures 
for  trusted  distribution  become  requirements  here.  In 
May  1982,  this  class  of  system  appears  to  be  just  at 
the  state-of-the-art  for  practical  implementations. 
Candidate:  Kernelized  VM/370  (KVM),  Kernelized 
Secure  Operating  System 
(KSOS),  Honeywell 
SCOMP, and the Air Force’s SACDIN. 
to 
that 
the 
assure 
Class  :  Verified  Implementation.  Systems  in 
class    use  a  formal  machine  checkable 
methodology 
actual 
implementation  of  the  system  conforms  to  the 
verified  top-level  specifications.  Formal  hardware 
and firmware design and analysis become important, 
to  demonstrate 
reference  monitor 
requirements are met, as well as other development 
environment  attributes  (e.g.,  compilers).  In  May 
1982, this class of system appears to be well beyond 
the  state-of-the-art  for  practical  implementations. 
Candidate: [none was specified]. 
that 
the 
The  writing  style  in  this  draft  was  imprecise  and 
descriptive.  The  draft  explicitly  stated 
the 
requirements  were  intended  to  apply  both  to  general-
purpose  and  to  embedded  systems.  As  an  example  of 
the  draft  criteria’s  requirement  wording  style,  the 
storage channel requirement cited from Nibaldi’s Level 
that 
4  can  be  found  scattered  among  requirements in Class 
: 
Flow  Control  The  TCB  of  the  class    system 
enforces  information  flow  security  (confinement). 
Information flow security is applied to all objects that 
are  directly  or  indirectly  visible  outside  the  TCB. 
Control objects (e.g., number of free disk pages) and 
TCB  responses  (e.g.,  out  of  space)  are  included  as 
well  as  objects  normally  thought  of  as  storage 
objects. 
Audit  See  class  .  In  addition,  mechanisms  are 
provided to record the use of channels that have been 
shown to have an exploitable bandwidth greater than 
some clearly identified small bandwidth. 
avoided 
explicitly 
Because of controversy in the community, the Draft 
carefully 
the 
implementation  of  a  security  kernel.  However,  even 
without the wording, it was a clear objective that Class 
 systems implemented a security kernel in the full 
minimal sense of the Anderson Study. 
requiring 
3.1.2. Community response. Well, we announced that 
the  first  draft  would  be  presented  at  the  Computer 
Security Initiative Seminar, and we got a packed house. 
We  naïvely  assumed  that  we  were  close  to  getting  it 
right,  and  we  requested  written  comments  from  the 
participants.  We  set  a  tight  review  and  publication 
schedule,  because  developers  wanted  to  have  firm 
criteria to work from as soon as possible. So the Draft 
invited a first round of comments with a deadline of 1 
July  1982,  promising  a  second  draft  that  responded  to 
these  comments  by  1  August.  Anticipated  comments 
received  by  1 September would be considered and the 
final TCSEC would be published in October 1982. 
the  Center,  was  buried 
We received a massive response, filling file-drawers 
with industry and government comments! Sheila Brand, 
newly  arrived  at 
in 
correspondence and in requests for visits to discuss the 
Draft.  There  were  complaints  over 
the  Draft’s 
imprecise language as well as its organization. For the 
most part, the cards and letters were politely supportive 
of  our  effort,  and  offered  constructively  stated 
reservations.  We  received  several  well  reasoned 
proposals  for  wording  along  with  rationales.  In  the 
Draft,  the  Criteria  came  last,  following  a  prefatory 
introduction  and  rationale.  A  majority  of  reviewers 
stated  they  did  not  want  to  wade  through  our  prose  to 
get  to  the  requirements,  which  they  wanted  to  come 
first.  
Potential  users  wanted  each  evaluation  class’s 
requirements  to  be  self-contained.  This  would  permit 
the  requirements  for  a  single  evaluation  class  to  be 
extracted and published in a procurement specification. 
This  added  to  the  bulk  of  the  TCSEC,  but  removed 
Proceedings of the 20th Annual Computer Security Applications Conference (ACSAC’04) 
1063-9527/04 $ 20.00 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 11:37:23 UTC from IEEE Xplore.  Restrictions apply. 
internal cross-referencing. Additional requests came in 
for  a  glossary  of  terms,  for  guidelines  on  testing,  on 
covert channels, and on configuring MAC features. The 
issue  of  giving  extra  credit  for  providing  features  or 
assurances  beyond  those  required for a specific access 
class was also raised.16
interaction  with:  Grace 
The  group  working  most  closely  on  the  drafts  and 
comments  included,  in  addition  to  Sheila  Brand  and 
myself,  close 
[Nibaldi] 