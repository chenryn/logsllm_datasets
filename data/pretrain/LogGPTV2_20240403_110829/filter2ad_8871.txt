# 对抗冒用数字签名：亟需强化的签名审核机制

#### 译文声明
本文为翻译文章，原文来源：安全客。译文仅供参考，具体内容及含义以原文为准。

## 前言
早在今年7月，360白名单分析组捕获并查杀了一批具有知名公司数字签名的木马，并于8月中旬在国内首发了相关分析报告（[被攻陷的数字签名：木马作者冒用知名网络公司签名](http://bobao.360.cn/learning/detail/2965.html)）。尽管这些木马已被曝光，但它们并未就此消失，反而在为中秋节期间的大规模爆发做准备。此次，木马作者不仅使用了新的证书，还通过伪装成图片和私服等方式进行传播。360团队迅速采取行动，对这些新变种进行了拦截和查杀。以下是此类木马的发展演变过程：

## 伪装成图片的木马
我们之前的文章中已经介绍过这类冒用签名的木马。然而，最新捕获到的木马更换了签名证书，并改变了其传播方式。木马制作者通过聊天工具向不同用户发送文件，由于这些文件带有知名公司的数字签名且采用了极具诱惑性的文件名与图标，用户很容易在不知情的情况下点击并感染木马。

## 伪装成私服
此外，木马还会冒充知名公司的签名，伪装成流行的私服功能模块进行传播。这种高隐蔽性的传播手段将给用户带来巨大的损失。

### 传播途径：
- **冒用知名公司签名**：木马制作者利用某些渠道获取知名公司的数字签名。
- **伪装私服**：木马通过模仿私服的功能模块进行传播。

## 签名审核现状
目前来看，数字签名的审核机制仍然不够严格，木马制作者仍可通过各种途径获取知名公司的数字签名。虽然部分已知的用于签发木马的证书已被吊销，但大部分签名依然有效。

## 新签发木马的行为
在我们捕获的新签发木马中，典型的执行流程如下：

1. **混淆代码阻碍分析**：木马采用大量混淆代码以阻碍安全人员的分析工作，动态解密出DLL文件，然后以PE LOADER的形式在内存中执行。
   - 分配内存并将PE信息写入新内存。
   - 解密后的DLL文件。
   - 调用该内存中的DllMain函数，初始化网络连接。
   - 调用导出函数UpdateService执行后续恶意行为。

2. **复制木马**：DLL判断自身文件名是否包含taskhost.exe，如果不是，则将其复制到`C:\Program Files\Common Files\8762eb81\taskhost.exe`目录下，然后创建taskhost.exe进程，继续执行恶意行为。

3. **检测沙箱环境**：taskhost.exe会检测是否处于沙箱环境中，如果是则退出。

4. **提升权限**：为后续恶意行为做准备，提升自身权限。

5. **创建计划任务**：实现程序自启动。

6. **获取QQ个人信息**：通过QQ朋友网接口获取用户的个人相关信息，并利用这些信息作为恶意行为的开关。
   - 读取的信息示例：`portraitCallBack({"847***126":["[http://qlogo3.store.qq.com/qzone/847***126/847***126/100](http://qlogo3.store.qq.com/qzone/847941126/847941126/100)",100,-1,0,0,0,"色即是空",0]})`

7. **创建傀儡进程**：执行恶意代码。

8. **接收远控指令**：成功运行后，创建线程接收远程控制指令。

## 360率先查杀
尽管木马制作者不断升级其技术，并试图借助节假日大规模传播，但360团队已在第一时间进行了拦截和查杀，并持续监控和追踪。

## 结语
360提醒广大用户不要轻易下载或打开未知来源的文件，保持警惕以避免不必要的损失。同时，我们也呼吁各大证书颁发机构加强数字签名证书的管理和审核力度，防止木马制作者有机可乘。