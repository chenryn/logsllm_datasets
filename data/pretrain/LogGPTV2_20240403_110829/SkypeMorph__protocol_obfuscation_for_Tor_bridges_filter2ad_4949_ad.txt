that bridges can easily change their IP addresses and ports,
without having to re-distribute contact information to clients
or the BridgeDB. With SkypeMorph, all a client needs to
know to contact a bridge is its Skype ID. This makes it
harder for censors to block bridges, even once they are found.
Skype Protocol. SkypeKit allows peers to exchange
streaming data through the Skype network. However, the
data sent to the Skype network might be relayed by other
nodes in the network and this can impose an overhead on
the Skype network, which is not desired. Therefore, we de-
liberately chose not to use this feature of SkypeKit. Skype-
Morph data is sent directly from the client to the bridge; it
is disguised as Skype data, but it is not sent over the Skype
network.
Attacks on SkypeMorph. In order to be able to block
a SkypeMorph bridge, the censor either needs to totally ban
Skype communications, or it has to verify the existence of
SkypeMorph on a remote Skype node. This is only pos-
sible if the censor already knows the IP address or Skype
ID of the bridge, which we have already excluded from our
threat model. Also note that although we are not trying
to prevent threats that may arise if the content of a Skype-
Morph handshake is disclosed by Skype, it is still possible
to use steganographic methods to hide the handshake in
innocuous-looking messages.
The censoring authority can as well run its own Skype-
Morph bridges and distribute its descriptor to users. Even
though this is possible, users’ privacy is not threatened be-
cause of this, as they are still selecting their own relays and
connecting to the Tor network. Therefore, the censor can
only detect that a user is connected to its own instance of
SkypeMorph.
105(a) Packet size distribution
(b) Inter-packet delays distribution
Figure 6: Experimental cumulative distributions for Skype video, SkypeMorph, and Tor. We show packet size and inter-packet
delay distributions in (a) and (b) respectively.
Table 1: Download speed (goodput), network bandwidth used, and overhead imposed by (a) Normal Tor-over-TCP, (b)
SkypeMorph-over-UDP with na¨ıve traﬃc shaping, and (c) SkypeMorph-over-UDP with our enhanced Traﬃc Morphing.
Goodput
Network bandwidth used
Overhead
Normal
bridge
200 ± 100 KB/s
200 ± 100 KB/s
12% ± 1%
SkypeMorph
(Na¨ıve Shaping)
33.9 ± 0.8 KB/s
43.4 ± 0.8 KB/s
28% ± 2%
SkypeMorph
(Traﬃc Morphing)
34 ± 1 KB/s
43.2 ± 0.8 KB/s
28% ± 3%
SkypeMorph and Other Protocols. Our current im-
plementation of SkypeMorph is able to imitate arbitrary en-
crypted protocols over UDP. The target protocol, Skype in
our case, can be replaced by any encrypted protocol that
uses UDP as long as distributions of packet sizes and inter-
arrival times are available. The source protocol, Tor, can
also be replaced by an arbitrary TCP protocol. Note that if
Traﬃc Morphing is going to be used, the morphing matrix
needs to be recalculated for every pair of source and target
protocols based on their distributions. Moreover, the current
formulation of Traﬃc Morphing is not amenable to higher-
order statistics. However, if na¨ıve traﬃc shaping is used,
the system is actually completely independent of the source
protocol and it is possible to mimic higher-order statistics.
SkypeMorph Software. Our current proof-of-concept
implementation targets the Linux operating system. We
would naturally like to extend the work to support Win-
dows and other platforms. The only obstacle is the port
redirection described in Section 6.1. This can be handled ei-
ther with native ﬁrewalling support, or possibly by running
Linux-based software on a Tor-aware home router.10
Also as discussed in Section 4.4, we plan to experiment
with using the audio and video encoders shipped with the
Skype in order to more easily match Skype’s packet size and
timing patterns perfectly.
10https://trac.torproject.org/projects/tor/wiki/
TheOnionRouter/Torouter
9. CONCLUSIONS
We have presented SkypeMorph, a pluggable transport
for Tor that disguises client-to-bridge connections as Skype
video traﬃc. We present two methods to morph Tor streams
into traﬃc with indistinguishable packet sizes and timings
to Skype video; the ﬁrst method uses na¨ıve traﬃc shaping to
emulate the target distribution, independent of the source
distribution. The second method takes the source distribu-
tion into account, enhancing Wright et al.’s Traﬃc Morph-
ing [47] to also account for packet timings. The two methods
have statistically similar performance, but the na¨ıve traﬃc
shaping method is much easier to implement, is unaﬀected
by a changing source distribution, and can match the higher-
order patterns in Skype traﬃc. While our methods are ef-
fective at matching the desired distributions, they come at
some cost in extra bandwidth used between the client and
the bridge—but no more so than if an actual Skype video
call were in progress. Our software is freely available, and is
easily adaptable to other encrypted UDP-based target pro-
tocols.
Acknowledgements
The authors wish to thank George Kadianakis, Paul Syver-
son, and the anonymous reviewers for their helpful discus-
sions and suggestions on how we can improve our work. We
also thank NSERC, ORF, Mprime, and The Tor Project for
funding this work.
020040060080010001200140000.10.20.30.40.50.60.70.80.91Empirical CDFPacket size (bytes)  Skype Video CallsSkypeMorph (Naive Method)SkypeMorph (Traffic Morphing)Tor Traffic00.0050.010.0150.020.02500.10.20.30.40.50.60.70.80.91Empirical CDFInter−packet delay (seconds)  Skype Video CallsSkypeMorph (Naive Method)SkypeMorph (Traffic Morphing)Tor Traffic10610. REFERENCES
[1] Boost C++ Libraries. http://www.boost.org/.
[Online; accessed April 2012].
[2] Does Skype use encryption?
https://support.skype.com/en/faq/FA31/Does-
Skype-use-encryption. [Online; accessed April 2012].
[3] Number of Skype users in 2010.
http://about.skype.com/press/2011/05/
microsoft_to_acquire_skype.html. [Online; accessed
April 2012].
[4] Skype Software. http://skype.com. [Online; accessed
April 2012].
[5] SkypeKit.
http://developer.skype.com/public/skypekit.
[Online; accessed April 2012].
[6] Tor BridgeDB. https:
//gitweb.torproject.org/bridgedb.git/tree.
[Online; accessed April 2012].
[7] Ethiopian Government Bans Skype, Google Talk And
All Other VoIP Services.
http://techcrunch.com/2012/06/14/ethiopian-
government-bans-skype-google-talk-and-all-
other-voip-services/, 2012. [Online, accessed May
2012].
[8] Skype ban in the UAE could be lifted, as it is ”purely
a licensing matter”.
http://thenextweb.com/me/2012/04/21/skype-ban-
in-the-uae-could-be-lifted-as-it-is-purely-a-
licensing-matter/, 2012. [Online, accessed May
2012].
[9] J. Appelbaum and N. Mathewson. Pluggable
transports for circumvention. https:
//gitweb.torproject.org/torspec.git/blob/HEAD:
/proposals/180-pluggable-transport.txt. [Online;
accessed April 2012].
[10] S. A. Baset and H. G. Schulzrinne. An Analysis of the
Skype Peer-to-Peer Internet Telephony Protocol. In
INFOCOM 2006. 25th IEEE International Conference
on Computer Communications. Proceedings, pages
1–11, 2006.
[11] P. Biondi and F. Desclaux. Silver Needle in the Skype.
BlackHat Europe, http:
//www.blackhat.com/presentations/bh-europe-
06/bh-eu-06-biondi/bh-eu-06-biondi-up.pdf,
March 2006. [Online; accessed April 2012].
[12] G. Bissias, M. Liberatore, D. Jensen, and B. Levine.
Privacy Vulnerabilities in Encrypted HTTP Streams.
In Privacy Enhancing Technologies, pages 1–11. 2006.
[13] D. Bonﬁglio, M. Mellia, M. Meo, N. Ritacca, and
D. Rossi. Tracking Down Skype Traﬃc. In INFOCOM
2008. 27th IEEE Conference on Computer
Communications., pages 261 –265, 2008.
[14] D. Bonﬁglio, M. Mellia, M. Meo, D. Rossi, and
P. Tofanelli. Revealing Skype Traﬃc: When
Randomness Plays with You. In Proceedings of the
2007 conference on Applications, technologies,
architectures, and protocols for computer
communications, SIGCOMM ’07, pages 37–48, 2007.
[15] S. Burnett, N. Feamster, and S. Vempala. Chipping
away at censorship ﬁrewalls with user-generated
content. In Proceedings of the 19th USENIX
conference on Security, USENIX Security’10, 2010.
[16] R. Chandramouli and N. Memon. Analysis of LSB
based image steganography techniques. In Proceedings
of International Conference on Image Processing,
volume 3, pages 1019 –1022, 2001.
[17] R. Dingledine. Research problems: Ten ways to
discover Tor bridges.
https://blog.torproject.org/blog/research-
problems-ten-ways-discover-tor-bridges. [Online;
accessed April 2012].
[18] R. Dingledine. Iran blocks Tor; Tor releases same-day
ﬁx. https://blog.torproject.org/blog/iran-
blocks-tor-tor-releases-same-day-fix, Sept.
2011. [Online; accessed April 2012].
[19] R. Dingledine, N. Mathewson, and P. Syverson. Tor:
The Second-Generation Onion Router. In Proceedings
of the 13th conference on USENIX Security
Symposium, SSYM’04, pages 303–320, 2004.
[20] M. Dusi, M. Crotti, F. Gringoli, and L. Salgarelli.
Tunnel Hunter: Detecting application-layer tunnels
with statistical ﬁngerprinting. Computer Networks,
53(1):81 – 97, 2009.
[21] M. Enev, S. Gupta, T. Kohno, and S. N. Patel.
Televisions, video privacy, and powerline
electromagnetic interference. In Proceedings of the
18th ACM conference on Computer and
Communications Security, CCS ’11, pages 537–550,
New York, NY, USA, 2011. ACM.
[22] N. Hopper, L. von Ahn, and J. Langford. Provably
Secure Steganography. IEEE Transactions on
Computers, 58(5):662 –676, 2009.
[23] A. Houmansadr, G. T. Nguyen, M. Caesar, and
N. Borisov. Cirripede: Circumvention Infrastructure
using Router Redirection with Plausible Deniability.
In Proceedings of the 18th ACM conference on
Computer and Communications Security, CCS ’11,
pages 187–200, 2011.
[24] N. F. Johnson, Z. Duric, and S. Jajodia. Information
hiding: Steganography and watermarking—attacks and
countermeasures. Kluwer Academic Publishers, 2000.
[25] J. Karlin, D. Ellard, A. W. Jackson, C. E. Jones,
G. Lauer, D. P. Mankins, and W. T. Strayer. Decoy
Routing: Toward Unblockable Internet
Communication. In Proceedings of the USENIX
Workshop on Free and Open Communications on the
Internet (FOCI 2011), August 2011.
[26] M. Krzywinski. Port knocking: Network
authentication across closed ports. SysAdmin
Magazine, 12(6):12–17, 2003.
[27] A. Langley. curve25519-donna.
http://code.google.com/p/curve25519-donna/.
[Online; accessed April 2012].
[28] C. S. Leberknight, M. Chiang, H. V. Poor, and
F. Wong. A Taxonomy of Internet Censorship and
Anti-Censorship. http://www.princeton.edu/
~chiangm/anticensorship.pdf. [Online; accessed
April 2012].
[29] M. Liberatore and B. N. Levine. Inferring the source
of encrypted HTTP connections. In 13th ACM
conference on Computer and Communications
security, pages 255–263, 2006.
[30] N. Mathewson. The Tor Project, A simple obfuscating
proxy.
107https://gitweb.torproject.org/obfsproxy.git.
[Online; accessed April 2012].
[31] W. Mazurczyk, P. Szaga, and K. Szczypiorski. Using
Transcoding for Hidden Communication in IP
Telephony. ArXiv e-prints, Nov. 2011.
[32] J. McLachlan and N. Hopper. On the risks of serving
whenever you surf: Vulnerabilities in Torˆa ˘A´Zs
blocking resistance design. In Proceedings of the 8th
ACM workshop on Privacy in the electronic society,
WPES ’09, pages 31–40, 2009.
[33] H. Mohajeri Moghaddam, B. Li, M. Derakhshani, and
I. Goldberg. SkypeMorph: Protocol Obfuscation for
Tor Bridges. Technical Report CACR 2012-08,
University of Waterloo, 2012.
[34] S. J. Murdoch. Moving Tor to a datagram transport.
https://blog.torproject.org/blog/moving-tor-
datagram-transport. [Online; accessed April 2012].
[35] NIST/SEMATECH. e-Handbook of Statistical
Methods. http:
//www.itl.nist.gov/div898/handbook/index.htm.
[Online; accessed April 2012].
[36] F. Petitcolas, R. Anderson, and M. Kuhn. Information
Hiding - A Survey. Proceedings of the IEEE, special
issue on protection of multimedia content, pages 1062
–1078, 1999.
[37] I. M. Program. Persian cyberspace report: internet
blackouts across Iran;. http://iranmediaresearch.
com/en/blog/101/12/02/09/840. [Online; accessed
April 2012].
[38] T. S. Saponas, J. Lester, C. Hartung, S. Agarwal, and
T. Kohno. Devices that tell on you: privacy trends in
consumer ubiquitous computing. In Proceedings of
16th USENIX Security Symposium on USENIX
Security Symposium, SS’07, pages 5:1–5:16, Berkeley,
CA, USA, 2007. USENIX Association.
[39] G. J. Simmons. The Prisoners Problem and the
Subliminal Channel. In Advances in Cryptology:
CRYPTO 1983, pages 51–67. Springer, 1984.
[40] R. Smits, D. Jain, S. Pidcock, I. Goldberg, and
U. Hengartner. BridgeSPA: Improving Tor bridges
with Single Packet Authorization. In Proceedings of
the 10th annual ACM workshop on Privacy in the
Electronic Society, WPES ’11, pages 93–102, 2011.
[41] K. Suh, D. R. Figueiredo, J. Kurose, and D. Towsley.
Characterizing and Detecting Skype-Relayed Traﬃc.
In INFOCOM 2006. Proceedings of 25th IEEE
International Conference on Computer
Communications., 2006.
[42] The Tor Project. Tor Metrics Portal: Users.
https://metrics.torproject.org/users.html, 2012.
[Online, accessed July 2012].
[43] A. White, A. Matthews, K. Snow, and F. Monrose.
Phonotactic Reconstruction of Encrypted VoIP
Conversations: Hookt on fon-iks. In IEEE Symposium
on Security and Privacy (SP), pages 3 –18, 2011.
[44] T. Wilde. Knock Knock Knockin’ on Bridges’ Doors.
https://blog.torproject.org/blog/knock-knock-
knockin-bridges-doors, Jan. 2012. [Online; accessed
April 2012].
[45] P. Winter and S. Lindskog. How China Is Blocking
Tor. Technical report, Karlstad University, 2012.
[46] C. Wright, L. Ballard, S. Coull, F. Monrose, and
G. Masson. Spot Me if You Can: Uncovering Spoken
Phrases in Encrypted VoIP Conversations. In IEEE
Symposium on Security and Privacy (SP), pages 35
–49, 2008.
[47] C. Wright, S. Coull, and F. Monrose. Traﬃc
Morphing: An eﬃcient defense against statistical
traﬃc analysis. In Proceedings of the Network and
Distributed Security Symposium - NDSS ’09. IEEE,
February 2009.
[48] C. V. Wright, L. Ballard, F. Monrose, and G. M.
Masson. Language Identiﬁcation of Encrypted VoIP
Traﬃc: Alejandra y Roberto or Alice and Bob? In
Proceedings of 16th USENIX Security Symposium,
2007.
[49] E. Wustrow, S. Wolchok, I. Goldberg, and J. A.
Halderman. Telex: Anticensorship in the Network
Infrastructure. In Proceedings of the 20th USENIX
Security Symposium, 2011.
108