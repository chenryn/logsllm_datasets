autocoinapp 
0x00  
autocoin
appapp
IOSJSBOX
0x01  
1. autocoinvpshttp
2. VPShttp
3. jsboxAPPjshttp
vpshttpnginxhttpvpshttpflask
0x02 VPShttp 
flaskautocoin
jsbox
from flask import Flask
from flask import request
from flask import jsonify
import json
app = Flask(__name__)
## 
@app.route('/getconf',methods=['GET'])
def getconf():
    if request.method == 'GET':
        f = open('autocoin.conf','r')
        conf = f.readline()
        return jsonify(conf)
## post
@app.route('/setconf',methods=['POST'])
def setconf():
    if request.method == 'POST':
        f = open('autocoin.conf','w')
        json_data = request.json
        json_data=json.dumps(json_data)
        f.write(json_data)
        f.close
        return 'OK'
if __name__ == '__main__':
    app.run(host='172.17.0.1', port=5000, debug=True)
    ## docker0iplocalhost
flask
vpsnginxurl
flask
dockernginxnginx
events {
   worker_connections 1024;
}
http {
     server {
          listen 80;
          server_name localhost;
          location /fdafewfdsfagdfdsa/{
               proxy_pass http://172.17.0.1:5000/
}
}
}
urlflask
0x03 jsbox 
jsboxappjsapiappapp
api
jsboxiosjsboxapi
postget
var conf = {
    threhold: 0.003,
    switch: true,
    oneprice: 900
};
$ui.render({
    views: [
        {
            type: "label",
            props: {
              id: "switchlabel",
              text: "",
              align: $align.center
            },
            layout: function(make){
                make.top.equalTo(10);
            }
          }
        ,
        {
            type: "switch",
            props: {
              on: true
            },
            layout: function(make){
                make.top.equalTo($("switchlabel").bottom).offset(10);
            },
            events:{
                changed:function(sender){
                    conf.switch = sender.on;
                }
            }
          },
        {
            type: "label",
            props: {
              id: "onepricelabel",
              text: "",
              align: $align.center
            },
            layout: function(make){
                make.top.equalTo($("switch").bottom).offset(10);
            },
          }
        ,
        {
            type: "input",
            props: {
              id:"onepriceinput",
              type: $kbType.search,
              darkKeyboard: true,
              text: conf.oneprice,
            },
            layout: function(make){
                make.top.equalTo($("onepricelabel").bottom).offset(10);
                make.width.equalTo(150);
            },
            events:{
                returned: function(sender){
                    conf.oneprice = sender.text;
                    $ui.toast(conf.oneprice);
                }
            }
          },
        {
            type: "label",
            props: {
              id: "threholdlabel",
              text: "",
              align: $align.center
            },
            layout: function(make){
                make.top.equalTo($("onepriceinput").bottom).offset(10);
            },
          }
        ,
        {
            type: "input",
            props: {
              id:"threholdinput",
              type: $kbType.search,
              darkKeyboard: true,
              text: conf.threhold,
            },
            layout: function(make){
                make.top.equalTo($("threholdlabel").bottom).offset(10);
                make.width.equalTo(150);
            },
            events:{
                returned: function(sender){
                    conf.threhold = sender.text;
                    $ui.toast(conf.threhold);
                }
            }
          },
      {
        type: "button",
        props: {
          id: "getbutton",
          title: ""
        },
        layout: function(make, view) {
          make.top.equalTo($("threholdinput").bottom).offset(10);
          make.width.equalTo(100);
        },
        events: {
          tapped: function(sender) {
            $http.get({
                url: 'http://xxxxx/getconf',
                handler: function(resp) {
                  const data = resp.data;
                  var xdata = JSON.parse(data);
                  var jsondata = JSON.parse(xdata);
                  conf.threhold = jsondata.threhold;
                  conf.oneprice = jsondata.oneprice;
                  conf.switch = jsondata.switch;
                  $ui.toast(conf.threhold);
                  $("threholdinput").text = conf.threhold;
                  $("onepriceinput").text = conf.oneprice;
                  $("switch").on = conf.switch;
                }
              })
          }
        }
      },
      {
        type: "button",
        props: {
          id: "setbutton",
          title: ""
        },
        layout: function(make, view) {
          make.top.equalTo($("getbutton").bottom).offset(10);
          make.width.equalTo(100);
        },
        events: {
          tapped: function(sender) {
            $http.post({
                url: 'http://xxxxx/setconf',
                header:{
                "Content-Type":"application/json"
                },
                body:{
                    threhold:conf.threhold,
                    oneprice:conf.oneprice,
                    switch:conf.switch
                },
                handler: function(resp) {
                  const data = resp.data;
                  $ui.toast(data);
                }
              })
          }
        }
      }
    ]
  })
0x04  
appappjs