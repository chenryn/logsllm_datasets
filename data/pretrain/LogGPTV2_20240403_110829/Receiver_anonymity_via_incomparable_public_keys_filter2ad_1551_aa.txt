title:Receiver anonymity via incomparable public keys
author:Brent R. Waters and
Edward W. Felten and
Amit Sahai
Receiver Anonymity
via Incomparable Public Keys
Brent R. Waters
Edward W. Felten
Department of Computer Science
{bwaters,felten,sahai}@cs.princeton.edu
Princeton University
Amit Sahai
ABSTRACT
We describe a new method for protecting the anonymity of
message receivers in an untrusted network. Surprisingly, ex-
isting methods fail to provide the required level of anonymity
for receivers (although those methods do protect sender
anonymity). Our method relies on the use of multicast,
along with a novel cryptographic primitive that we call an
Incomparable Public Key cryptosystem, which allows a re-
ceiver to eﬃciently create many anonymous “identities” for
itself without divulging that these separate “identities” ac-
tually refer to the same receiver, and without increasing the
receiver’s workload as the number of identities increases. We
describe the details of our method, along with a prototype
implementation.
Categories and Subject Descriptors
E.3 [Data]: [Data Encryption]
General Terms
Security
Keywords
Anonymity, PGP, Public Key Cryptography, Privacy
1.
INTRODUCTION
Anonymity is a desirable property in many communica-
tion systems. Although several good methods exist to pro-
tect the anonymity of message senders, there appears to be
no existing method that fully protects receiver anonymity.
We address this problem by presenting a system that pro-
tects receiver anonymity for a wide range of message-passing
applications.
Prior research has focused on how receiver anonymity can
be compromised because of the contents of a message or
because of how a message is routed. However, receiver
anonymity can also be compromised by the actual contents
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
CCS’03,  October  27–31,  2003,  Was hington,  DC,  U SA.
Copyright 2003 ACM 1-58113-738-9/03/0010 ...$5.00.
of the public key used to encrypt messages. If several senders
share the same public key to encrypt messages to be sent for
an anonymous receiver, then they can infer that they are in-
deed sending to the same receiver. They can then aggregate
the information they each have on that receiver to further
compromise his anonymity. To achieve receiver anonymity
a receiver must be able to create several truly anonymous
identities that will allow for a sender to both encrypt and
route messages to him. These identities must be incom-
parable in the sense that the two cannot be identiﬁed as
belonging to the same individual.
1.1 Requirements
Our goal is to provide a way for senders to transmit mes-
sages to receivers, but without anyone — including the
senders — being able to determine which message is destined
for which receiver, or even being able to determine whether
any two messages are destined for the same receiver. We
want to keep this information secret not only from outsiders,
but also from message senders, since the sender is often the
very person from whom the receiver most wants to conceal
his identity.
We assume that adversaries can see both the contents of
messages and where those messages are routed.
We deﬁne three requirements that must be met for re-
ceiver anonymity to be realized. The ﬁrst requirement is
that if any conspiracy of senders and eavesdroppers is asked
to determine the receiver of a particular message, they can
do no better than random guessing.
In practice, we cannot prevent receivers from replying to
messages, or from divulging information about their iden-
tities in these replies. Whenever a receiver replies to a
message, some small amount of information about that re-
ceiver’s identity will probably leak. (For example, Rao and
Rohatgi [16] describe how a surprisingly large amount of
information about authorship can be extracted from text
documents.) If the receiver is providing some service to the
sender or vice versa, some leakage of this type may be a
necessary consequence of that service. Since we cannot pre-
vent this type of leakage, our goal is to make sure that the
adversary cannot get any useful information other than this.
This type of information leakage motivates the second re-
quirement of anonymity: each receiver must be able to cre-
ate a large number of anonymous identities, such that any
message sent to any of these identities will go to that re-
ceiver, but nobody else will be able to tell that those anony-
mous identities correspond to the same receiver. This re-
quirement is important in an environment where senders can
learn a little information about each receiver; by preventing
112the senders from learning that they are talking to the same
receiver, we prevent them from aggregating the information
they have about that receiver.
This second requirement implies that anonymous identi-
ties must be incomparable, so that an adversary who sees
two or more identities cannot tell whether they correspond
to the same receiver. Practicality also requires that many
messages can be sent to the same anonymous identity with-
out compromising the receiver’s anonymity.
The third requirement is that the solution be reasonably
eﬃcient. Some of the obvious approaches to the problem
fail for eﬃciency reasons. For example, schemes that use a
separate private key for each potential sender are too ineﬃ-
cient, as they require the receiver to try each of the possible
private keys when a message arrives1.
As described in Section 2, none of the existing systems for
receiver anonymity can fully meet these criteria.
1.2 Our Solution
Our solution meets all of the requirements mentioned
above. We prove its cryptographic properties, under the
standard assumption that the Decisional Diﬃe-Hellman prob-
lem is hard. We also describe an implementation.
In our solution, each message is sent to a multicast group.
All members of the multicast group try to decrypt the mes-
sage, but only one of them will succeed. The other members
of the group, having failed to decrypt the message, simply ig-
nore it. The adversary can, of course, tell that the intended
receiver is one of the members of the multicast group, so
this provides anonymity only within the multicast group.
However, if the multicast group is large enough this will be
acceptable in practice. (This aspect of our solution is not
novel, and the remainder of our solution can be used with
routing methods other than multicast.)
The cryptographic component of our solution involves the
use of a new class of asymmetric key cryptosystem, which
we call an Incomparable Public Key cryptosystem. In an
Incomparable Public Key scheme there exist many unique
public keys that can each be used to encrypt data in such
a way that a single secret key can be used for decryption.
We call two public keys “equivalent” if they correspond to
the same secret key and “non-equivalent” if they do not.
The crucial property of such a cryptosystem is that an ad-
versary, given two public keys, cannot tell whether they are
equivalent.
Using an Incomparable Public Key scheme a receiver can
construct an anonymous identity as the pair of a multicast
address and an Incomparable Public Key. To construct an-
other anonymous identity the receiver just uses the same
multicast address with an equivalent, but unique public key.
The identity is truly anonymous since colluding senders can-
not distinguish two equivalent public keys from two non-
equivalent public keys. A sender can repeatedly encrypt
and send messages to the multicast address without requir-
ing any response from the receiver. The receiver can identify
and read messages eﬃciently as it only needs to perform one
decryption for each message sent to the multicast address.
1Of course, one could try putting a marker on each mes-
sage to identify which private key to use for decrypting that
message, but these markers would leak identity information
in violation of the anonymity requirements. The details of
these and other design alternatives are discussed at greater
length in Section 4.1.
Our solution allows a receiver to create and use as many
or as few anonymous identities as desired. For maximum
anonymity, a receiver might want to give a separate anony-
mous identity to each sender.
Indeed, a receiver might
want to give multiple anonymous identities to the same
sender, if the receiver is carrying on multiple independent
conversations with that sender. Alternatively, a receiver
may choose to give the same anonymous identities to a set
of senders, to enable that identity to develop a reputation
among those senders, while using separate anonymous iden-
tities with other senders. We expect that diﬀerent receivers
will have diﬀerent policies for managing anonymous identi-
ties, and our solution does not constrain this policy choice.
1.3 Practical Motivation
Before we describe the details of Incomparable Public
Keys we brieﬂy discuss situations that motivate the use of
Incomparable Public Keys in practice. We believe that there
are two general classes of situations for which Incomparable
Public Keys are useful. The ﬁrst is when the receiver wishes
to communicate with another distinct party from whom he
wishes to remain anonymous, either because he does not
want that party to know his identity, or because he does not
trust that party to keep his identity secret. The second situ-
ation occurs when the receiver wishes to communicate with
a device that he either controls or trusts, but the receiver is
concerned with maintaining his anonymity in the event that
the device becomes compromised.
The ﬁrst situation is the one most commonly explored
in anonymous communication systems. Examples include
anonymous web-browsing and e-mail. The anonymous iden-
tity of the receiver, which includes an Incomparable Public
Key, can be delivered anonymously (see related work in Sec-
tion 2) to any sender that is willing to communicate with an
anonymous receiver. The important aspect of this situation
is that the receiver does not trust the other party to begin
with, but both the parties still observe a mutual beneﬁt in
communicating anonymously.
In the second situation the receiver might trust or even
control a set of devices (or the parties behind them), but
wishes to forward protect his anonymity from what he per-
ceives as a signiﬁcant risk of device compromise. There are
a number of ways in which an adversary can compromise a
device including hacking into a networked device and physi-
cally capturing one. For example, if a receiver were to form
a sensor network by deploying a set of devices he might
be most concerned about an adversary physically captur-
ing and then tampering with a device. Another example
is when the receiver initially controls a set of machines that
communicate with him over the Internet. In this case the re-
ceiver might be concerned about both physical and hacking
attacks.
While we ﬁnd this broad classiﬁcation helpful, not ev-
ery scenario distinctly falls into one category. Additionally,
while Incomparable Public Keys are useful for protecting
the anonymity of the receiver, they do not prevent other
types of attacks such as a device feeding the receiver false
information.
In both classes of situations we found that Incomparable
Public Keys can be used in a variety of ways for commu-
nicating with an anonymous receiver. Incomparable Public
Keys can be used for secure message delivery, to establish
an anonymous secure connection in a key exchange proto-
col, and in peer-to-peer systems. We describe several ways
to apply Incomparable Public Keys later in the paper.
1.4 Structure of this Paper
Section 2 discusses related work, and explains why previ-
ously proposed systems fail to provide the desired anonymity
properties. Section 3 describes the theory behind Incompa-
rable Public Keys including a deﬁnition and an ElGamal-
based implementation. We follow in Section 4 by exploring
the practical applications of Incomparable Public Keys. We
begin by comparing Incomparable Public Keys to several
other methods that might hope to achieve anonymity. We
analyze the eﬃciency of using Incomparable Public Keys in
a multicast environment and show how they can be adapted
for use a key exchange protocol. Next, we describe our pro-
totype implementation of Incomparable Public Keys in the
popular GnuPG software package. Finally, we conclude in
Section 5.
2. RELATED WORK
Several existing proposals address parts of the receiver
anonymity problem, but all have ﬂaws or limitations that
prevent them from providing a complete solution.
Pﬁtzmann and Waidner [14] point out that, to prevent
message routing from compromising receiver anonymity, each
message should be routed not to a single receiver, but to a
multicast address, so the true receiver will retain anonymity
among the group of all receivers listening on that address.
They further propose marking each message in some way so
that the intended receiver can distinguish that message from
all other messages sent on the multicast address. Pﬁtzmann
and Waidner refer to this mark as an implicit address if only
the intended receiver can distinguish the message as being
addressed to him. A mark is called an invisible implicit ad-
dress if the marks of two messages from the same sender
to the same receiver cannot be tested for equality. The re-
sult of invisible implicitly marked messages on a multicast
address is that no observer should be able to tell the true
receiver of a message or be able to link a pair of messages by
looking at the mark. Pﬁtzmann and Waidner observe that
a public key cryptosystem can be used to realize invisible
implicit addresses, where each possible receiver decrypts an
address with their private key and uses message redundancy
to determine if the message was destined for him. However,
although their proposal provides receiver anonymity against
an eavesdropper, they do not explore the possibility of with-
holding information about the receivers’ identities from the
senders.
Chaum [4] and Goldschlag, Reed and Syverson [9, 20] in-
troduced anonymous reply addresses and reply onions. In
Chaum’s system an initiator may use a chain of nodes to
send a message anonymously. The initiator may include
an anonymous reply address for the responder to send back
a response. The anonymous reply address is a set of lay-
ered routing and encryption instructions for sending back
a response. Even the responder will not know where he is
sending the message by using the address, thus it is anony-
mous. Chaum’s reply addresses (and those of Goldshlag
et al.) have the drawback that they can only be used once.
This means that if a responder has more information to send,
but has used up all of the reply addresses, he is unable to
send any more messages. (This problem does not occur with
sender anonymity since a sender can always generate new
layered routing instructions to protect his identity.) Addi-
tionally, these systems do not specify how the initiator will
identify and decrypt messages if the initiator has a large
number of anonymous reply addresses outstanding.
Pseudonym servers, such as the one described by Mazi`eres
and Kaashoek [12], supply only pseudo-anonymous addresses.
Multiple senders can collude and discover whether they are
sending to the same receiver by comparing pseudonym ad-
dresses. A receiver might try to get around this by creating
and using a unique pseudonym, with a unique public key,
for each potential sender. However, that approach would
degrade the receiver’s eﬃciency as the receiver would need
to have a large number of secret keys, and would have to try
decrypting each message with each of its secret keys2.
Bellare et al.
formalize a cryptographic security prop-
erty they name Key-Privacy [1]. Suppose an adversary was
given two public encryption keys (pk0, pk1) and ciphertext
c that was encrypted with one of those two public keys. A
cryptosystem maintains Key-Privacy if an adversary cannot
determine (with better success than random guessing would
provide) which key was used for encryption. We observe that
if an asymmetric cryptosystem is used to mark addresses and
the Key-Privacy requirement is met, then the addresses will
be invisible. Key-Privacy addresses part of the anonymity
requirement, by preventing encrypted messages from leaking
information about the keys used to encrypt them. However,
maintaining Key-Privacy does not necessarily prevent infor-
mation from leaking to the senders via the keys themselves.
Shields and Levine discuss the use of IP Multicast for
receiving anonymous traﬃc [19]. In their scheme a group of
receivers make an anonymous group by all listening to the
same IP multicast address. However, they do not discuss
the problem of discerning which key to use upon reception
of an encrypted message.
Golle et al.
independently worked on an idea similar to
to Incomparable Public Keys, which they call Universal Re-
encryption [10]. Universal Re-encryption allows mix-nets to
re-encrypt ciphertext without knowing the public key used
to encrypt the ciphertext. Using Universal Re-encryption
allows the cumbersome key-distribution to be skipped in set-
ting up a mix-net. In their scheme the ciphertext is equiva-
lent to an ElGamal encrypted message with an Incompara-
ble Public Key attached to it. A ciphertext is re-encrypted