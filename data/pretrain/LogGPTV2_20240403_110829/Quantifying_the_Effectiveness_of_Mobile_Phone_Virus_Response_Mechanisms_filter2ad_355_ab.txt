viruses that spread between phones via infected MMS mes-
sage attachments. The model only simulates the MMS traf-
ﬁc due to the virus and does not track the delivery of le-
gitimate messages between the phones. The mobile phone
viruses that are simulated here infect only the phones them-
selves, not the phone network infrastructure. It is also as-
sumed that the phone network infrastructure can support the
extra volume of MMS messages generated by the viruses.
In this section, we describe how the model construction
facilitates evaluating the effectiveness of response mecha-
nisms. Using the general parameterized model, we show
how four speciﬁc virus scenarios are deﬁned. These four
viruses are the test cases for evaluating the response mech-
anisms. The section concludes with brief discussions of the
topology of contact list connections and the role of phone
user consent in virus propagation.
4.1. Modeling Phones and Phone Networks
To simulate virus propagation, we ﬁrst develop a model
representing the mobile phone system in which the virus
operates. The entire phone system model is developed in
the M¨obius software tool [4] and is composed of 1000 in-
dividual phone submodels, of which 800 are randomly des-
ignated as susceptible to infection. We assume that there is
enough homogeneity in the population of mobile phones—
the same operating system platform or the same application
software—that 80% of the mobile phone population could
be vulnerable to the same virus.
Each phone submodel represents a single phone and
is initialized and assigned a unique identiﬁcation number.
Then the phone is given a contact list containing the identi-
ﬁcation numbers of other phones. The contact lists are re-
ciprocal; if phone 22 is in the contact list of phone 83, then
phone 83 is in the contact list of phone 22. The contact lists
connect phones so that MMS messages can be sent between
them.
The submodel for each phone contains two functional-
ities: receiving and sending infected messages. The por-
tion of the model that receives messages is the only active
part of the model for phones that are still uninfected. The
incoming infected MMS messages wait in the inbox until
the phone user makes a decision whether to accept (open)
the MMS message attachment. The decision to accept the
MMS message occurs with some deﬁned probability. If the
user rejects (deletes) the MMS message attachment, then
the infection attempt was unsuccessful. However, if the user
chooses to accept the MMS message attachment, then that
phone becomes newly infected.
After a phone becomes infected, the portion of the phone
submodel that sends out infected messages becomes en-
abled. Several parameters control the frequency at which
outgoing infected messages are dispersed. The virus may
restrict the total number of infected messages sent from a
particular phone within a certain time period (e.g., 30 mes-
sages per day).
Because the model is implemented in a parameterized
fashion, many different virus behaviors can be simulated.
For example, the propagation process can identify new tar-
get phones either by using the contact lists of infected
phones or by randomly selecting mobile phone numbers.
Another example of the parameterized options is that each
infected message can be addressed to single or multiple re-
cipients.
4.2. Four Illustrative Virus Scenarios
The ﬂexibility of our parameterized phone virus propa-
gation model enables the study of a large variety of possible
viruses. However, to perform any meaningful analysis, we
must choose feasible sets of input parameters that charac-
terize potential viruses. We deﬁne four example virus sce-
narios that demonstrate a range of attack approaches based
on real mobile phone viruses such as CommWarrior.
Virus 1. When a mobile phone is infected with Virus 1, the
phone immediately begins to send infected MMS messages
to the phones in its contact list. To avoid alerting the phone
user that something is amiss, the virus waits at least 30 min-
utes between consecutive infected messages, and each mes-
sage is sent to a single recipient.
Virus 1 also limits itself to sending 30 messages between
reboots of the phone. This limit is based on behavior seen
in the mobile phone virus CommWarrior. The time between
phone reboots is on average approximately 24 hours.
Virus 2. Compared with Virus 1, Virus 2 attempts to spread
much more aggressively, engaging in behavior that a phone
user might more readily recognize as suspicious. As with
Virus 1, a phone infected with Virus 2 immediately begins
to send infected MMS messages to the phones in its contact
list; however, Virus 2 waits a minimum of only one minute
between consecutive infected messages instead of the min-
imum 30-minute wait for Virus 1. In addition, Virus 2 ad-
dresses each infected MMS message to multiple recipients
(up to 100 recipients per message). These factors dramati-
cally increase the speed at which Virus 2 can reach all the
contacts in the contact list of an infected phone.
The main throttle on the number of messages that Virus
2 spawns is that only 30 infected MMS messages can be
sent from each infected phone per 24-hour period. Because
the minimum wait between infected messages is so short for
Virus 2, those 30 messages are all sent very near the start of
each 24-hour period. This non-uniform nature of the active
infection spread of Virus 2 will be evident in the simulation
results.
Virus 3. Virus 3 propagates by dialing random mobile
phone numbers. In France, all mobile phone numbers start
with the same preﬁx, and approximately one third of the
possible phone numbers with the mobile phone preﬁx are
valid mobile phone numbers. This parameter—the fraction
of valid random mobile phone numbers—can be adjusted to
reﬂect other circumstances.
When a phone becomes infected with Virus 3, the phone
immediately begins to send MMS messages to random mo-
bile phone numbers. One-third of the attempted phone num-
bers are valid. The minimum wait between these infected
messages is one minute, and each message is sent to only
one phone number. This virus imposes no daily limits on
the number of infected messages sent, so the spread of Virus
3 is very rapid.
Virus 4. The ﬁnal example virus is the most stealthy virus
of the four. When a phone is infected with Virus 4, the
phone does not immediately begin sending out infected
messages as the other viruses do. After an initial one-
hour dormancy period, this stealthy virus waits until the
phone user sends or receives a legitimate MMS message
and then automatically either appends the infection to out-
going MMS messages or sends infected reply messages in
response to incoming MMS messages. Although the model
implementation does not include legitimate message traf-
ﬁc, the model still simulates sending infected messages in
conjunction with legitimate incoming and outgoing trafﬁc.
The model does so by sending out infected messages at the
same rate that a phone might expect to send and receive le-
gitimate messages. The virus is less likely to be noticed by
the phone user because the user already expects some data
transmission to occur while sending or receiving legitimate
messages.
To perform a quantitative analysis of virus spread, we
choose combinations of parameter values to simulate the
four speciﬁc virus scenarios described above. Some re-
sponse mechanisms are more effective against some types
of viruses than others, so this suite of virus test cases can
demonstrate the strengths and weaknesses of each response
mechanism.
4.3. Phone Contact List Network Topology
Since the contact lists deﬁne the connections over which
three of the four example viruses spread, the MMS contact
lists should appropriately reﬂect the structure of connectiv-
ity within a real phone network.
Although the structure of connectivity through mobile
phone contact lists is unknown, email address books can be
represented by a power law network [14]. Since a contact
list is populated based on the same general social network
principles as an email address book, it is not unreasonable
to use a power-law random graph to represent the contact
list connections within a phone population.
To generate a random graph to represent realistic con-
tact list connections between phones, we utilize the soft-
ware package Network Graphs for Computer Epidemiolo-
gists (NGCE) [13], which is an open source software pack-
age for generating network graphs. We modify this graph
generation software to produce a contact list output ﬁle to
be read as input by our M¨obius model. Since we expect the
sizes of the contact lists for a population of 1000 to conform
to a certain distribution, we are able to manipulate the graph
package input parameters to produce contact lists with an
average contact list size of 80.
4.4. Probability of User Consent
Although the topology of the contact list network can in-
ﬂuence the penetration and speed of a mobile phone virus,
the virus propagation is also affected by the probability that
a phone user will consent to the installation of an infected
attachment ﬁle. Since users are likely to become more sus-
picious (and less likely to accept the attachment) as they
receive more and more infected MMS messages, the model
uses a dynamic probability of acceptance that is dependent
on the total number of infected messages that the phone user
has previously received.
The decreasing probability of acceptance curve is de-
ﬁned as some initial quantity called the Acceptance Factor
divided by the quantity two to the power of the number of
infected messages received by that phone. Thus, when the
Acceptance Factor is 0.468, as it is in our simulations, the
probability of acceptance for the nth received message is
0.468 ÷ 2n. Thus, given that the user receives a large num-
ber of infected messages, the probability that a user will
eventually give consent to accept an infected ﬁle is 0.40.
5. Experimental Results
To evaluate the relative effectiveness of the six proposed
response mechanisms, we have deﬁned four test-case virus
scenarios using feasible combinations of input parameters.
Baseline experiments simulate virus propagation uncon-
strained by any response mechanism. Experimental results
from simulations of the model then demonstrate how effec-
tive each response mechanism is against each of the four
virus scenarios.
One measure to gauge the effectiveness of a response
mechanism is a count of the total number of infected phones
minute (contrasted with a 30-minute wait for Viruses 1 and
4), so the virus sends its whole allotment of 30 messages al-
lowed per day within the ﬁrst hour of each 24-hour period.
This results in a step-like infection curve.
Because of the model parameters held constant, the peak
number of infected phones is 320 for all four virus sce-
narios without response mechanisms. In all four scenarios,
800 phones are susceptible, and each phone user has a 0.40
probability of eventually accepting the virus and becoming
infected (provided the phone receives enough opportunities
to accept the virus). However, the reaction mechanisms af-
fect the propagation of different viruses in different ways.
5.2. Response Mechanism Studies
Some response mechanisms completely stop further
virus propagation, but others simply slow the propagation
rate of the virus. Both types of response can be useful.
Ideally, the response mechanism would always quickly and
completely stop the propagation of a mobile phone virus.
However, some viruses spread so quickly that a ﬁrst re-
sponse mechanism that slows the spread could buy time to
enable activation of a secondary response mechanism that
completely halts the propagation process.
In the follow-
ing studies, each response mechanism is evaluated indepen-
dently.
Virus scan of all MMS attachments in MMS gateways.
A virus scan of all MMS attachments as they pass through
an MMS gateway is completely effective against viruses
with known virus signatures. For that reason, after the new
virus signature is added to the list of known viruses, the
gateway virus scan is able to completely halt virus propaga-
tion.
The gateway virus scan response mechanism is evalu-
ated for three cases. The time required to identify and add
the new virus signature to the list (after the virus reaches
a detectable level) is varied from 6 hours to 12 hours to 24
hours. As Figure 2 illustrates for Virus 1, a prompt response
is most effective because the infection is contained before
the virus spread reaches the rapid propagation portion of
the curve. When the activation delay is only six hours, the
infection only reaches 5% of the infection level in the base-
line. Even for an activation delay as large as 24 hours, the
virus spread is still contained to 25% of the baseline infec-
tion level.
For Viruses 1, 2, and 4, the results with the gateway virus
scan look similar because the response mechanism is able to
respond while the virus spread is still in its early stages. In
contrast, the gateway virus scan is completely ineffectual
against rapid viruses like Virus 3 because the virus has al-
ready completely penetrated the entire susceptible popula-
tion before the new virus signature is added to the watch list.
Figure 1. Baseline Infection Curves without
Response Mechanisms
in the simulation population. The simulation population
contains 800 phones that are susceptible to infection, and
the total probability that any given phone user will even-
tually accept an infected message and become infected is
0.40. Therefore, given enough time, all the unrestrained
viruses (without any active response mechanisms) can be
expected to infect approximately 800× 0.40 = 320 phones,
assuming each susceptible phone receives enough infected
messages.
Before we can evaluate the effectiveness of any response
mechanism, we must ﬁrst examine the baseline virus spread
without any response mechanisms.
5.1. Baseline Studies
All four of the virus scenarios produce classic virus in-
fection curves, although Virus 2 displays a more jagged
curve. As shown in all four curves in Figure 1, the in-
fected population grows at a rate that is ﬁrst increasing and
then decreasing as the number of infected phones reaches
a plateau. The virus propagation occurs on different time
scales for different viruses. The progression of Virus 2 is
tracked over 10 days, and Viruses 1 and 4 are examined over
an 18-day period. In contrast, Virus 3 travels so quickly that
the simulations only record the infection spread over a 24-
hour period. (For that reason, the baseline infection spread
for Virus 3 is better observed in Figure 6, which also in-
cludes the monitoring response mechanism results for Virus
3.)
The baseline infection curve for Virus 2 resembles a step
function more than a smooth curve due to the deﬁnition of
the virus. The minimum waiting time between infected
messages being sent from an infected phone is only one
0501001502002503003500100200300400HoursInfection CountVirus 1Virus 2Virus 3Virus 4Figure 2. Virus Scan: Varying the Activation
Time Delay (Virus 1 shown)
Figure 3. Virus Detection Algorithm: Varying
Detection Accuracy (Virus 2 shown)
Thus, the relationship between the speed of the virus prop-
agation and the response mechanism deployment is critical
to the success of this response mechanism.
Virus detection algorithm in MMS gateways.
In con-
trast to the gateway virus scan response mechanism, the
gateway virus detection algorithm is able only to slow the
virus spread, not stop it. Because the detection algorithm
attempts to identify infected MMS messages by looking for
suspicious traits characteristic of a virus, the algorithm does
not catch 100% of the infected MMS messages sent through
the MMS gateways. Thus, a small percentage of infected
messages still reach target recipients, so the potential for
some virus spread remains.