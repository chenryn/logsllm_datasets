## 用duckdb_fdw加速PostgreSQL分析计算, 提速40倍, 真香.     
### 作者                  
digoal                  
### 日期                  
2022-09-24                 
### 标签                  
PostgreSQL , DuckDB , parquet , duckdb_fdw         
----                  
## 背景    
之前写了一系列duckdb文章, 嵌入式分析界扛把子. 确实很好用.   
duckdb_fdw是steven老师写的pg外部访问duckdb插件, 为啥写这个插件呢, 因为duckdb真香啊, 通过pg+duckdb_fdw+parquet+OSS存储还能支持数据湖的场景. 忍不住点赞. 感谢steven老师.   
本篇信息用duckdb_fdw加速PostgreSQL分析计算, 提速40倍, 真香.   
- 14秒降到0.35秒 (macbook air 2011 (1.4 GHz Intel Core 2 Duo), 2gb, 64gb, 垃圾机器)  
建议用法: pg + duckdb fdw + parquet    
## 测试过程  
1、安装PostgreSQL 14.5   
https://www.postgresql.org/ftp/  
https://www.postgresql.org/ftp/source/v14.5/  
https://ftp.postgresql.org/pub/source/v14.5/postgresql-14.5.tar.bz2  
```  
tar -jxvf postgresql-14.5.tar.bz2  
cd postgresql-14.5  
./configure --prefix=/Users/digoal/pg14.5  
make world -j 2  
make install-world  
```  
2、配置环境变量  
```  
cat .bash_profile  
alias rm='rm -i'  
alias ll='ls -larth'  
# Setting PATH for Python 3.10  
# The original version is saved in .bash_profile.pysave  
PATH="/Library/Frameworks/Python.framework/Versions/3.10/bin:${PATH}"  
export PATH  
alias ll='ls -larht'    
alias rm='rm -i'    
export PGHOME=/Users/digoal/pg14.5  
export PATH="$PGHOME/bin:$PATH"    
export MANPATH="$PGHOME/share/man:$MANPATH"    
export PGLOCALEDIR=$PGHOME/share/locale    
export PGDATA=/Users/digoal/pg14/data  
export PGHOST=127.0.0.1  
export PGPORT=5432  
export PGDATABASE=postgres    
export PGUSER=postgres    
export PGPASSWORD=digoal  
```  
3、初始化数据库  
```  
initdb -D $PGDATA -E UTF8 --lc-collate=C --lc-ctype=en_US -U postgres  
```  
4、配置数据库  
```  
vi $PGDATA/postgresql.conf  
listen_addresses = '0.0.0.0'		  
port = 5432				  
max_connections = 100			  
unix_socket_directories = '.,/tmp'	  
shared_buffers = 128MB			  
dynamic_shared_memory_type = posix	  
vacuum_cost_delay = 0			  
bgwriter_delay = 10ms			  
max_parallel_workers_per_gather = 0	  
wal_level = minimal   
synchronous_commit = off		  
full_page_writes = off			  
wal_writer_delay = 20ms		  
max_wal_size = 1GB  
min_wal_size = 80MB  
max_wal_senders = 0		  
random_page_cost = 1.1			  
log_destination = 'csvlog'		  
logging_collector = on		  
log_truncate_on_rotation = on		  
log_timezone = 'Asia/Shanghai'  
autovacuum_vacuum_cost_delay = 0ms	  
datestyle = 'iso, mdy'  
timezone = 'Asia/Shanghai'  
lc_messages = 'C'			  
lc_monetary = 'C'			  
lc_numeric = 'C'			  
lc_time = 'C'				  
default_text_search_config = 'pg_catalog.english'  
```  
5、启动数据库  
```  
pg_ctl start  
```  
6、安装duckdb  
```  
git clone https://github.com/duckdb/duckdb --depth 1  
```  
[《编译安装 DuckDB 最新版本 in MacOS》](../202209/20220901_02.md)   
7、将依赖文件拷贝到postgresql软件目录  
```  
cp duckdb lib   
cd ~/Downloads/duckdb  
cp build/release/tools/sqlite3_api_wrapper/libsqlite3_api_wrapper.dylib ~/pg14.5/lib/  
cp tools/sqlite3_api_wrapper/include/sqlite3.h ~/pg14.5/include/  
cp build/release/src/libduckdb.dylib ~/pg14.5/lib/  
```  
8、安装duckdb_fdw插件  
```  
git clone https://github.com/alitrack/duckdb_fdw --depth 1  
cd duckdb_fdw  
USE_PGXS=1 make  
USE_PGXS=1 make install  
```  
备注中间踩的坑:  
之前使用了edb封装好的pg 14.5 for macos, 安装错误, 所以建议大家自己编译安装pg.  
```  
error: EDB  
编译安装duckdb_fdw错  
digoaldeAir:duckdb digoal$ cd ../duckdb_fdw/  
digoaldeAir:duckdb_fdw digoal$ USE_PGXS=1 make  
gcc -Wall -Wmissing-prototypes -Wpointer-arith -Wdeclaration-after-statement -Werror=vla -Werror=unguarded-availability-new -Wendif-labels -Wmissing-format-attribute -Wformat-security -fno-strict-aliasing -fwrapv -Wno-unused-command-line-argument -g -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX11.1.sdk -mmacosx-version-min=10.14 -arch x86_64 -arch arm64 -O2  -I. -I./ -I/Users/digoal/pg14/include/postgresql/server -I/Users/digoal/pg14/include/postgresql/internal -I/opt/local/Current/include -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX11.1.sdk  -I/opt/local/20210818/include/libxml2 -I/opt/local/Current/include  -I/opt/local/Current/include/libxml2 -I/opt/local/Current/include -I/opt/local/Current/include/openssl/  -c -o connection.o connection.c  
clang: warning: no such sysroot directory: '/Library/Developer/CommandLineTools/SDKs/MacOSX11.1.sdk' [-Wmissing-sysroot]  
clang: warning: no such sysroot directory: '/Library/Developer/CommandLineTools/SDKs/MacOSX11.1.sdk' [-Wmissing-sysroot]  
In file included from connection.c:13:  
In file included from /Users/digoal/pg14/include/postgresql/server/postgres.h:46:  
/Users/digoal/pg14/include/postgresql/server/c.h:59:10: fatal error: 'stdio.h' file not found  
#include   
         ^~~~~~~~~  
1 error generated.  
make: *** [connection.o] Error 1  
```  
```  
pg_config   
BINDIR = /Users/digoal/pg14/bin  
DOCDIR = /Users/digoal/pg14/doc/postgresql  
HTMLDIR = /Users/digoal/pg14/doc/postgresql  
INCLUDEDIR = /Users/digoal/pg14/include  
PKGINCLUDEDIR = /Users/digoal/pg14/include/postgresql  
INCLUDEDIR-SERVER = /Users/digoal/pg14/include/postgresql/server  
LIBDIR = /Users/digoal/pg14/lib  
PKGLIBDIR = /Users/digoal/pg14/lib/postgresql  
LOCALEDIR = /Users/digoal/pg14/share/locale  
MANDIR = /Users/digoal/pg14/share/man  
SHAREDIR = /Users/digoal/pg14/share/postgresql  
SYSCONFDIR = /Users/digoal/pg14/etc/postgresql  
PGXS = /Users/digoal/pg14/lib/postgresql/pgxs/src/makefiles/pgxs.mk  
CONFIGURE =  '--with-icu' '--enable-debug' '--prefix=/opt/pginstaller_14.auto/server/staging_cache/osx.build' '--with-ldap' '--with-openssl' '--with-perl' '--with-python' '--with-tcl' '--with-bonjour' '--with-pam' '--enable-thread-safety' '--with-libxml' '--with-uuid=e2fs' '--with-includes=/opt/local/Current/include/libxml2:/opt/local/Current/include:/opt/local/Current/include/security:/opt/local/Current/include/openssl/' '--docdir=/opt/pginstaller_14.auto/server/staging_cache/osx.build/doc/postgresql' '--with-libxslt' '--with-libedit-preferred' '--with-gssapi' '--with-lz4' 'CFLAGS=-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX11.1.sdk -mmacosx-version-min=10.14 -arch x86_64 -arch arm64 -O2' 'LDFLAGS=-L/opt/local/Current/lib' 'ICU_CFLAGS=-I/opt/local/Current/include' 'ICU_LIBS=-L/opt/local/Current/lib -licuuc -licudata -licui18n' 'XML2_CONFIG=/opt/local/Current/bin/xml2-config' 'LZ4_CFLAGS=-I/opt/local/Current/include' 'LZ4_LIBS=-L/opt/local/Current/lib' 'PERL=/Library/edb/languagepack/v2/Perl-5.34/bin/perl' 'PYTHON=/Library/edb/languagepack/v2/Python-3.9/bin/python3'  
CC = gcc  
CPPFLAGS = -I/opt/local/Current/include -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX11.1.sdk -I/opt/local/20210818/include/libxml2 -I/opt/local/Current/include -I/opt/local/Current/include/libxml2 -I/opt/local/Current/include -I/opt/local/Current/include/openssl/  
CFLAGS = -Wall -Wmissing-prototypes -Wpointer-arith -Wdeclaration-after-statement -Werror=vla -Werror=unguarded-availability-new -Wendif-labels -Wmissing-format-attribute -Wformat-security -fno-strict-aliasing -fwrapv -Wno-unused-command-line-argument -g -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX11.1.sdk -mmacosx-version-min=10.14 -arch x86_64 -arch arm64 -O2  
CFLAGS_SL =   
LDFLAGS = -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX11.1.sdk -L/opt/local/Current/lib -L/opt/local/20210818/lib -L/opt/local/lib -L/opt/local/Current/lib -Wl,-dead_strip_dylibs  
LDFLAGS_EX =   
LDFLAGS_SL =   
LIBS = -lpgcommon -lpgport -llz4 -lxslt -lxml2 -lpam -lssl -lcrypto -lgssapi_krb5 -lz -ledit -lm   
VERSION = PostgreSQL 14.5  
```  
9、创建插件  
遇到一个错误, 需要使用install_name_tool配置一下路径, 如果你没有遇到可以忽略.   
```  
error:  
postgres=# \set VERBOSITY verbose  
postgres=# create extension duckdb_fdw ;  
ERROR:  58P01: could not load library "/Users/digoal/pg14.5/lib/postgresql/duckdb_fdw.so": dlopen(/Users/digoal/pg14.5/lib/postgresql/duckdb_fdw.so, 10): Library not loaded: @rpath/libsqlite3_api_wrapper.dylib  
  Referenced from: /Users/digoal/pg14.5/lib/postgresql/duckdb_fdw.so  
  Reason: image not found  
LOCATION:  internal_load_library, dfmgr.c:248  
```  
使用如下工具  
- otool   
- install_name_tool  
查询依赖  
```  
digoaldeAir:~ digoal$ otool -L /Users/digoal/pg14.5/lib/postgresql/duckdb_fdw.so  
/Users/digoal/pg14.5/lib/postgresql/duckdb_fdw.so:  
	@rpath/libsqlite3_api_wrapper.dylib (compatibility version 0.0.0, current version 0.0.0)  
	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1252.200.5)  
```  
change依赖为正确路径  
```  
digoaldeAir:~ digoal$ install_name_tool -change @rpath/libsqlite3_api_wrapper.dylib /Users/digoal/pg14.5/lib/libsqlite3_api_wrapper.dylib /Users/digoal/pg14.5/lib/postgresql/duckdb_fdw.so  
```  
另外还有一个文件也需要设置一下:   
```
IT-C02YW2EFLVDL:~ digoal$ otool -L /Users/digoal/pg14.5/lib/libsqlite3_api_wrapper.dylib
/Users/digoal/pg14.5/lib/libsqlite3_api_wrapper.dylib:
	@rpath/libsqlite3_api_wrapper.dylib (compatibility version 0.0.0, current version 0.0.0)
	@rpath/libduckdb.dylib (compatibility version 0.0.0, current version 0.0.0)
	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1300.23.0)
	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1311.100.3)
IT-C02YW2EFLVDL:~ digoal$ install_name_tool -change @rpath/libduckdb.dylib /Users/digoal/pg14.5/lib/libduckdb.dylib /Users/digoal/pg14.5/lib/libsqlite3_api_wrapper.dylib
```
参考  
https://elesos.github.io/posts/macos-rpath/  
https://postgrespro.com/list/id/PI:EMAIL  
https://blog.csdn.net/minger1202/article/details/71319308  
使用工具install_name_tool来修改应用程序对动态库的查找路径，用法：  
```  
install_name_tool oldpath newpath /path2APP/appName  
```  