striving to achieve a higher degree of
competitiveness.
competitiveness.
Products and services with well-defined
specifications must be available to customers.
The appropriate control of quality leads to the
The appropriate control of quality leads to the
creation of quality products and services.
creation of quality products and services.
179
QoS
Introduction
The computation of QoS metrics allow organizations
to better align workflow processes with their vision.
These, in turn, fulfill customer expectations and
achieve customer satisfaction.
Web processes and workflow QoS can be
calculated through
End-to-End Process Analysis
180
QoS
New Requirements
Before Now
Time: 17 Hours
Cost?
Time?
Reliability?
Cost?
Fidelity?
Reliability?
N1 E N2
Fidelity?
1
Z1
B
2
N1 E N2
A N1 E N2 F
1 5 4 2 C
C D
1 3
Z1 Z2
A N1 E N2 F N1 E N2
C D C D
F
181
QoS
Benefits
Composition of processes according to QoS
objective and requirements.
Selection and execution of processes based
on QoS metrics.
Monitoring of processes to assure compliance
with initial QoS requirements.
Evaluation of alternative strategies when QoS
requirements are violated.
182
QoS
Related Work
QoS has been a major concern in the following areas:
Networking1,
Real-time applications2, and
Middleware3.
In the area of Web services, DAML-S allows for the
specification of QoS metrics of Web services.
It provides a basic QoS model.
But the model does not allow for the automatic computation of
processes QoS.
1 Cruz 1995; Georgiadis, Guerin et al. 1996,
2 Clark, Shenker et al. 1992 183
3 Zinky, Bakken et al. 1997; Frlund and Koistinen 1998; Hiltunen, Schlichting et al. 2000.
QoS
Related Work
For workflow systems, QoS studies have mainly
been done for the time dimension1.
Additional research on workflow reliability has
also been conducted.
But the work was mostly on system
implementation2.
1Kao and GarciaMolina 1993; Bussler 1998; Eder, Panagos et al. 1999; Marjanovic and Orlowska 1999; Dadam,
Reichert et al. 2000; Sadiq, Marjanovic et al. 2000; Son, Kim et al. 2001.
184
2Kamath, Alonso et al. 1996; Tang and Veijalainen 1999; Wheater and Shrivastava 2000.
QoS
Research Issues
x
Specification. What dimensions need to be part
✓ 
y
of the QoS model for processes?
z
Computation. What methods and algorithms
✓ 
can be used to compute, analyze, and predict
QoS?
✓ Monitoring. What king of QoS monitoring tools
need to be developed?
Control. What mechanisms need to be
developed to control processes, in response to
unsatisfactory QoS metrics?
185
End-to-End Process Analysis
The Overall Idea
Design
QoS Model
QoS Estimates for QoS Estimates
Tasks/Web services for Transitions
SWR
algorithm
Stochastic
Process
QoS
Computation
Enact
Simulation
Log
186
QoS
x
Specification
y
z
187
End-to-End Process Analysis
The Overall Idea
Design
QoS Model
QoS Estimates for QoS Estimates
Tasks/Web services for Transitions
SWR
algorithm
Stochastic
Process
QoS
Computation
Enact
Simulation
Log
188
QoS Model
QoS describes non-functional properties of a
process.
Based on previous studies* and our
experience with business processes, we have
constructed a QoS model composed of the
following dimensions:
Time
Cost
Reliability
Fidelity
189
*Stalk and Hout,1990;Rommel et al.,1995;Garvin, 1988
QoS Model
Web Service/Task Time
Time is a common and universal measure of
performance.
The first measure of time is task cycle time (CT)
For workflow systems, it can be defined as the total
time needed by an task to transform a set of inputs
into outputs.
The task cycle time can be breakdown in two major
components: delay time and process time.
CT(t) = DT(t) + PT(t)
CT(t) = DT(t) + PT(t)
190
QoS Model
Web Service/Task Time
The delay time can be further broken down into
Queuing delay
Setup delay
Another time metric that may be considered is the
Synchronization delay
191
QoS Model
Web Service/Task Cost
The cost dimension represents the cost associated with
the execution of Web Services or workflow tasks.
Cost is an important factor, since organizations need to
operate according to their financial plan.
Task cost (C) is the cost incurred when a task t is
executed; it can be broken down into two major
components: enactment cost and realization cost.
C(t) = EC(t) + RC(t)
C(t) = EC(t) + RC(t)
192
QoS Model
Web Service/Task Cost
The enactment cost (EC) is the cost associated with the
management of the workflow system and with workflow
instances monitoring.
The realization cost (RC) is the cost associated with the
runtime execution of the task. It can be broken down
into:
Machine cost
Setup cost
Direct labor cost
Direct material cost
193
QoS Model
Web Service/Task Reliability
Reliability (R) corresponds to the likelihood that a
task will perform for its users when the user
demands it.
Workflow task execution can be represented using
the following task structures
194
(Krishnakumar and Sheth, 1995)
QoS Model
Web Service/Task Reliability
This QoS dimension provides information
concerning a relationship between the number of
times the state done/committed is reached and the
number of times the failed/aborted state is reached
after the execution of a task.
This dimension follows from the discrete-time stable
reliability model proposed in Nelson (1973).
R(t) = 1 - failure rate
R(t) = 1 - failure rate
Note: Other reliability models can also be used (Goel ,1985; Ireson, Jr et al., 1996).
195
QoS Model
Web Service/Task Fidelity
Fidelity is a function of effective design and refer to
an intrinsic property or characteristic of a good
produced or service rendered.
Tasks have a fidelity (F) vector dimension
composed by a set of fidelity attributes (F(t) ).
.attribute
For more information on this dimension the reader is referred to Cardoso, J., J. Miller, A. Sheth
and J. Arnold (2002). "Modeling Quality of Service for Workflows and Web Service Processes."
LSDIS Lab Technical Report, May 2002. 196
QoS Model
Discussion
Workflows can be classified in one of the following
categories*:
ad hoc workflows
administrative workflows, and
production workflows.
The QoS model presented here is better suited for
production workflows since they are more
structured, predictable, and repetitive.
197
*McCready 1992
End-to-End Process Analysis
The Overall Idea
Design
QoS Model
QoS Estimates for QoS Estimates
Tasks/Web services for Transitions
SWR
algorithm
Stochastic
Process
QoS
Computation
Enact
Simulation
Log
198
QoS
Creation of Estimates
To analyze a process QoS, it is necessary
to:
Create estimated for task QoS metrics and
Create estimated for transition probabilities
Once tasks and transitions have their estimates set,
algorithms and mechanisms, such as simulation, can be
applied to compute the overall QoS of a process.
199
QoS
Estimates for Tasks
The task runtime behavior specification is composed of two
classes of information: basic and distributional.
The basic class associates with each task’s QoS
The basic class associates with each task’s QoS
dimension the minimum value, average value,
dimension the minimum value, average value,
and maximum value the dimension can take.
and maximum value the dimension can take.
Basic class Distributional class
Min value Avg value Max value Dist. Function
Time 0.291 0.674 0.895 Normal(0.674, 0.143)
Cost 0 0 0 0.0
Reliability - 100% - 1.0
Fidelity.a 0.63 0.81 0.92 Trapezoidal(0.7,1,1,4)
i
Task QoS for an automatic task (SP FASTA task)
The second class, corresponds to the specification of a constant
The second class, corresponds to the specification of a constant
or of a distribution function (such as Normal, Weibull, or
or of a distribution function (such as Normal, Weibull, or
Uniform) which statistically describes task behavior at runtime.
Uniform) which statistically describes task behavior at runtime. 200
QoS
Estimates for Tasks
The values specified in the basic class are
typically employed by mathematical methods
in order to compute workflow QoS metrics
The distributional class information is used by
simulation systems.
201
QoS
Re-Computing Estimates for Tasks
The re-computation of QoS task metrics is based on data
coming from designer specifications and from the workflow
system log.
Designer Average (t) Average specified by the designer in the basic
Dim
class for dimension Dim
Multi-Workflow Average (t) Average of the dimension Dim for task t
Dim
executed in the context of any workflow
Workflow Average (t, w) Average of the dimension Dim for task t
Dim
executed in the context of any instance of
workflow w
Instance Average (t, w, i) Average of the dimension Dim for task t
Dim
executed in the context of instance i of
workflow w
Designer, multi-workflow, workflow and instance average
202
QoS
Re-Computing Estimates for Tasks
The task QoS for a particular dimension can be
determined at different levels:
a) QoS (t) Designer Average (t)
Dim Dim
b) QoS (t) wi * Designer Average (t) + wi * Multi-Workflow
Dim 1 Dim 2
Average (t)
Dim
c) QoS (t, w) wi * Designer Average (t) + wi * Multi-Workflow
Dim 1 Dim 2
Average (t) + wi *Workflow Average (t, w)
Dim 3 Dim
d) QoS (t, w, i) wi * Designer Average (t) + wi * Multi-Workflow
Dim 1 Dim 2
Average (t) + wi * Workflow Average (t, w) + wi *
Dim 3 Dim 4
Instance Workflow Average (t,w, i)
Dim
QoS dimensions computed at runtime
203
QoS
Estimates for Transitions
In the same way we seed tasks’ QoS, we also need
to seed workflow transitions.
Initially, the designer sets the transition probabilities
at design time.
At runtime, the transitions’ probabilities are re-
computed.
The method used to re-compute the transitions’
probabilities follows the same lines of the method
used to re-compute tasks’ QoS.
204
End-to-End Process Analysis
The Overall Idea
Design
QoS Model
QoS Estimates for QoS Estimates
Tasks/Web services for Transitions
SWR
algorithm
Stochastic
Process
QoS
Computation
Enact
Simulation
Log
205
Stochastic QoS-based Process
QoS
p Send Report QoS
4
t
6
p p
1 3
xor xor xor xor
p p
2 5
t t t t t and and t
1 2 3 4 5 8
Prepare Prepare Sequencing Sequence Create Send
Sample Clones Processing Report Bill
t
7
Store
Report
QoS
QoS
QoS
QoS
QoS QoS
QoS QoS
QoS
QoS QoS
QoS QoS
QoS
206
QoS
Computation
207
End-to-End Process Analysis
The Overall Idea
Design
QoS Model
QoS Estimates for QoS Estimates
Tasks/Web services for Transitions
SWR
algorithm
Stochastic
Process
QoS
Computation
Enact
Simulation
Log
208
QoS
Computation
Once QoS estimates for tasks and for
transitions are determined, we can compute
the overall QoS of a workflow.
Two modeling techniques can be used to
compute QoS metrics for a given workflow
process: mathematical modeling and
simulation modeling.
209
QoS Computation
Mathematical Modeling
To compute process QoS metrics, we have
developed a set of six distinct reduction systems:
(1) sequential,
(2) parallel,
(3) conditional,
(4) loop,
(5) fault-tolerant, and
(6) network.
210
Mathematical Modeling
Reduction of a Sequential System
p
j
t t t
i j ij
(a) (b)
T(t ) = T(t) + T(t)
ij i j
C(t )= C(t) + C(t)
ij i j
R(t ) = R(t) * R(t)
ij i j
F(t ).a = f(F(t ), F(t))
ij r i j
211
Mathematical Modeling
Reduction of a Parallel System
t
1 p
p
1b
a1
p p p p
* a2 2b * 1n b
t t t t t t
a 2 b a 1n b
p
p
an
nb
t
n
(a) (b)
T(t ) = Max {T(t)}
1n I∈{1..n} i
∑
C(t ) = C(t)
1n i
1≤i≤.n
∏
R(t ) = R(t )
1n i
1≤i≤.n
F(t ).a = f(F(t ), F(t ), …, F(t ))
1n r 1 2 n
212
Mathematical Modeling
Reduction of a Conditional System
t
1 p
p
1b
a1
p p + p p
+ a2 2b 1n b
t t t t t t
a 2 b a 1n b
p p
an nb
t
n
(a) (b)
∑
T(t ) = p * T(t)
1n ai i
1≤i≤.n
C(t ) = ∑ p * C(t)
1n ai i
1≤i≤.n
∑
R(t ) = p * R(t)
1n ai i
1≤i≤.n
F(t ).a = f(p , F(t ), p , F(t ), …, p , F(t ))
1n r a1 1 a2 2 an n
213
Mathematical Modeling
Reduction of a Loop System
p
i
p p
+ t i + o1 + t + l1
li … … … …
p p
on ln
(a) (b)