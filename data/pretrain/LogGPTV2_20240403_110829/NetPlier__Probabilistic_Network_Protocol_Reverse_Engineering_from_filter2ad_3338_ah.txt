“Burp suite,” https://portswigger.net/burp.
“Cuckoo,” https://cuckoosandbox.org/.
“Fiddler,” https://www.telerik.com/ﬁddler.
“Google,” https://store.google.com/product/nest thermostat e.
“Modbus
Tools/blob/master/pcaps/bro/modbus/modbus.pcap.
“Netplier,” https://github.com/netplier-tool/NetPlier.
“Netzob,” https://github.com/netzob/netzob.
“Padawan,” https://padawan.s3.eurecom.fr/about.
“Smia2011,” ftp://download.iwlab.foi.se/dataset/smia2011/.
“Tencent habo,” https://habo.qq.com/.
“Tftp trace,” https://asecuritysite.com/forensics/pcap?inﬁle=tftp.pcap.
“Tshark,” https://www.wireshark.org/docs/man-pages/tshark.html.
“Virustotal,” https://www.virustotal.com/gui/home/upload.
“Zeroaccess trace,” http://contagiodump.blogspot.com/ .
[6]
[7]
[8]
[9]
[10]
[11]
[12]
[13]
[14]
[15] A. Abdou, D. Barrera, and P. C. Van Oorschot, “What lies beneath? an-
alyzing automated ssh bruteforce attacks,” in International Conference
on PASSWORDS, 2015, pp. 72–91.
[16] A. Aguirre, G. Barthe, L. Birkedal, A. Bizjak, M. Gaboardi, and
D. Garg, “Relational reasoning for markov chains in a probabilistic
guarded lambda calculus,” in European Symposium on Programming,
2018, pp. 214–241.
[17] A. Ankan and A. Panda, “pgmpy: Probabilistic graphical models using
python,” in Proceedings of the 14th Python in Science Conference
(SCIPY), 2015.
[18] M. Antonakakis, T. April, M. Bailey, M. Bernhard, E. Bursztein,
J. Cochran, Z. Durumeric, J. A. Halderman, L. Invernizzi, M. Kallitsis
et al., “Understanding the mirai botnet,” in 26th USENIX Security
Symposium (USENIX Security), 2017, pp. 1093–1110.
[19] T. Bao, R. Wang, Y. Shoshitaishvili, and D. Brumley, “Your exploit
is mine: Automatic shellcode transplant for remote exploits,” in 2017
IEEE Symposium on Security and Privacy (SP), 2017, pp. 824–839.
[20] G. J. Barton and M. J. Sternberg, “A strategy for the rapid multiple
alignment of protein sequences: conﬁdence levels from tertiary structure
comparisons,” Journal of Molecular Biology, vol. 198, no. 2, pp. 327–
337, 1987.
[21] N. E. Beckman and A. V. Nori, “Probabilistic, modular and scalable
inference of typestate speciﬁcations,” in Proceedings of
the 32nd
ACM SIGPLAN Conference on Programming Language Design and
Implementation, 2011, pp. 211–221.
[22] M. A. Beddoe, “Network protocol analysis using bioinformatics algo-
rithms,” Toorcon, 2004.
[23] L. Bilge, D. Balzarotti, W. Robertson, E. Kirda, and C. Kruegel, “Dis-
closure: detecting botnet command and control servers through large-
scale netﬂow analysis,” in Proceedings of the 28th Annual Computer
Security Applications Conference, 2012, pp. 129–138.
[24] K. Borgolte, C. Kruegel, and G. Vigna, “Delta: automatic identiﬁcation
of unknown web-based infection campaigns,” in Proceedings of the
2013 ACM SIGSAC Conference on Computer & Communications
Security, 2013, pp. 109–120.
[25] G. Bossert, “Exploiting semantic for the automatic reverse engineering
of communication protocols,” Ph.D. dissertation, 2014.
[26] G. Bossert, F. Guih´ery, and G. Hiet, “Towards automated protocol
reverse engineering using semantic information,” in Proceedings of the
9th ACM Symposium on Information, Computer and Communications
Security, 2014, pp. 51–62.
[28]
[27] G. E. Box and G. C. Tiao, Bayesian inference in statistical analysis.
John Wiley & Sons, 2011, vol. 40.
J. Caballero, H. Yin, Z. Liang, and D. Song, “Polyglot: Automatic
extraction of protocol message format using dynamic binary analysis,”
in Proceedings of the 14th ACM Conference on Computer and Com-
munications Security, 2007, pp. 317–329.
[29] Y. Cao, Y. Shoshitaishvili, K. Borgolte, C. Kruegel, G. Vigna, and
Y. Chen, “Protecting web-based single sign-on protocols against relying
party impersonation attacks through a dedicated bi-directional authen-
17
ticated secure channel,” in International Workshop on Recent Advances
in Intrusion Detection, 2014, pp. 276–298.
[30] R. Cappelli, D. Maio, D. Maltoni, J. L. Wayman, and A. K. Jain,
“Performance evaluation of ﬁngerprint veriﬁcation systems,” IEEE
Transactions on Pattern Analysis and Machine Intelligence, vol. 28,
no. 1, pp. 3–18, 2005.
[31] Y. Chen, D. Mu, J. Xu, Z. Sun, W. Shen, X. Xing, L. Lu, and
B. Mao, “Ptrix: Efﬁcient hardware-assisted fuzzing for cots binary,”
in Proceedings of the 2019 ACM Asia Conference on Computer and
Communications Security, 2019, pp. 633–645.
[32] C. Y. Cho, D. Babic, P. Poosankam, K. Z. Chen, E. X. Wu, and D. Song,
“Mace: Model-inference-assisted concolic exploration for protocol and
vulnerability discovery,” in 20th USENIX Security Symposium (USENIX
Security), vol. 139, 2011.
[33] P. M. Comparetti, G. Wondracek, C. Kruegel, and E. Kirda, “Prospex:
Protocol speciﬁcation extraction,” in 30th IEEE Symposium on Security
and Privacy (SP), 2009, pp. 110–125.
[34] A. Cozzie, F. Stratton, H. Xue, and S. T. King, “Digging for data
structures,” in 8th USENIX Symposium on Operating Systems Design
and Implementation, vol. 8, 2008, pp. 255–266.
[35] W. Cui, J. Kannan, and H. J. Wang, “Discoverer: Automatic protocol
reverse engineering from network traces,” in 16th USENIX Security
Symposium (USENIX Security), 2007, pp. 1–14.
[36] L. Dietz, V. Dallmeier, A. Zeller, and T. Scheffer, “Localizing bugs
in program executions with graphical models,” in Advances in Neural
Information Processing Systems, 2009, pp. 468–476.
J. Duchene, C. Le Guernic, E. Alata, V. Nicomette, and M. Kaˆaniche,
“State of the art of network protocol reverse engineering tools,” Journal
of Computer Virology and Hacking Techniques, vol. 14, no. 1, pp. 53–
68, 2018.
[37]
[38] O. Esoul and N. Walkinshaw, “Using segment-based alignment to ex-
tract packet structures from network traces,” in 2017 IEEE International
Conference on Software Quality, Reliability and Security (QRS), 2017,
pp. 398–409.
[39] D.-F. Feng and R. F. Doolittle, “Progressive sequence alignment as
a prerequisitetto correct phylogenetic trees,” Journal of Molecular
Evolution, vol. 25, no. 4, pp. 351–360, 1987.
[40] E. Hoque, O. Chowdhury, S. Y. Chau, C. Nita-Rotaru, and N. Li, “An-
alyzing operational behavior of stateful protocol implementations for
detecting semantic bugs,” in 2017 47th Annual IEEE/IFIP International
Conference on Dependable Systems and Networks (DSN), 2017, pp.
627–638.
[41] O. Igbe, I. Darwish, and T. Saadawi, “Deterministic dendritic cell
algorithm application to smart grid cyber-attack detection,” in 2017
IEEE 4th International Conference on Cyber Security and Cloud
Computing (CSCloud), 2017, pp. 199–204.
[42] A. Islam and Z. Bu, “Classifying sets of malicious indicators for detect-
ing command and control communications associated with malware,”
Apr. 25 2017, US Patent 9,635,039.
[43] V. Jain, S. Rawat, C. Giuffrida, and H. Bos, “Tiff: using input type
the 34th Annual
inference to improve fuzzing,” in Proceedings of
Computer Security Applications Conference, 2018, pp. 505–517.
[44] S. Jero, M. L. Pacheco, D. Goldwasser, and C. Nita-Rotaru, “Leveraging
textual speciﬁcations for grammar-based fuzzing of network protocols,”
in Proceedings of
the AAAI Conference on Artiﬁcial Intelligence,
vol. 33, 2019, pp. 9478–9483.
[45] S. Kate, J.-P. Ore, X. Zhang, S. Elbaum, and Z. Xu, “Phys: probabilistic
physical unit assignment and inconsistency detection,” in Proceedings
of the 2018 26th ACM Joint Meeting on European Software Engineering
Conference and Symposium on the Foundations of Software Engineer-
ing, 2018, pp. 563–573.
[46] K. Katoh, K. Misawa, K.-i. Kuma, and T. Miyata, “Mafft: a novel
method for rapid multiple sequence alignment based on fast fourier
transform,” Nucleic Acids Research, vol. 30, no. 14, pp. 3059–3066,
2002.
[47] S. Kleber, H. Kopp, and F. Kargl, “Nemesys: Network message syntax
reverse engineering by analysis of the intrinsic structure of individ-
ual messages,” in 12th USENIX Workshop on Offensive Technologies
(WOOT), 2018.
[48] P. Kohli and P. H. Torr, “Dynamic graph cuts for efﬁcient inference
in markov random ﬁelds,” IEEE Transactions on Pattern Analysis and
Machine Intelligence, vol. 29, no. 12, pp. 2079–2088, 2007.
[49] H. Koo, Y. Chen, L. Lu, V. P. Kemerlis, and M. Polychronakis,
“Compiler-assisted code randomization,” in 2018 IEEE Symposium on
Security and Privacy (SP), 2018, pp. 461–477.
[50] T. Kremenek, P. Twohey, G. Back, A. Ng, and D. Engler, “From uncer-
tainty to belief: Inferring the speciﬁcation within,” in 7th Symposium
on Operating Systems Design and Implementation, 2006, pp. 161–176.
[51] T. Krueger, H. Gascon, N. Kr¨amer, and K. Rieck, “Learning stateful
models for network honeypots,” in Proceedings of the 5th ACM Work-
shop on Security and Artiﬁcial Intelligence, 2012, pp. 37–48.
[52] T. Krueger, N. Kr¨amer, and K. Rieck, “Asap: Automatic semantics-
aware analysis of network payloads,” in International Workshop on
Privacy and Security Issues in Data Mining and Machine Learning,
2010, pp. 50–63.
[53] F. R. Kschischang, B. J. Frey, and H.-A. Loeliger, “Factor graphs and
the sum-product algorithm,” IEEE Transactions on Information Theory,
vol. 47, no. 2, pp. 498–519, 2001.
[54] G. L´adi, L. Butty´an, and T. Holczer, “Message format and ﬁeld
semantics inference for binary protocols using recorded network trafﬁc,”
in 2018 26th International Conference on Software, Telecommunications
and Computer Networks (SoftCOM), 2018, pp. 1–6.
[55] C. Leita, K. Mermoud, and M. Dacier, “Scriptgen: an automated
script generation tool for honeyd,” in 21st Annual Computer Security
Applications Conference (ACSAC), 2005, pp. 12–pp.
[56] X. Li and L. Chen, “A survey on methods of automatic protocol
reverse engineering,” in 2011 Seventh International Conference on
Computational Intelligence and Security, 2011, pp. 685–689.
[57] Z. Lin, X. Jiang, D. Xu, and X. Zhang, “Automatic protocol format
reverse engineering through context-aware monitored execution,” in
Proceedings of the Network and Distributed System Security Symposium
(NDSS), vol. 8, 2008, pp. 1–15.
[58] Z. Lin, J. Rhee, C. Wu, X. Zhang, and X. Dongyan, “Discovering
semantic data of interest from un-mappable memory with conﬁdence,”
in Proceedings of the 19th Network and Distributed System Security
Symposium (NDSS), vol. 12, 2012.
[59] Z. Lin, X. Zhang, and D. Xu, “Automatic reverse engineering of data
structures from binary execution,” in Proceedings of the 11th Annual
Information Security Symposium, 2010, pp. 1–1.
[60] B. Livshits, A. V. Nori, S. K. Rajamani, and A. Banerjee, “Merlin:
speciﬁcation inference for explicit information ﬂow problems,” ACM
Sigplan Notices, vol. 44, no. 6, pp. 75–86, 2009.
[61] K. Miller, Y. Kwon, Y. Sun, Z. Zhang, X. Zhang, and Z. Lin, “Proba-
bilistic disassembly,” in 2019 IEEE/ACM 41st International Conference
on Software Engineering (ICSE), 2019, pp. 1187–1198.
[62] D. W. Mount, Bioinformatics: sequence and genome analysis. Cold
[63]
Spring Harbor Laboratory Press, 2004.
J. Narayan, S. K. Shukla, and T. C. Clancy, “A survey of automatic
protocol reverse engineering tools,” ACM Computing Surveys (CSUR),
vol. 48, no. 3, pp. 1–26, 2015.
[64] S. B. Needleman and C. D. Wunsch, “A general method applicable to
the search for similarities in the amino acid sequence of two proteins,”
Journal of Molecular Biology, vol. 48, no. 3, pp. 443–453, 1970.
[65] S.
¨Osterlund, K. Razavi, H. Bos, and C. Giuffrida, “Parmesan:
Sanitizer-guided greybox fuzzing,” in 29th USENIX Security Symposium
(USENIX Security), 2020, pp. 2289–2306.
[66] R. Pang and V. Paxson, “A high-level programming environment for
trace anonymization and transformation,” in Proceedings of
packet
the 2003 Conference on Applications, Technologies, Architectures, and
Protocols for Computer Communications, 2003, pp. 339–351.
[67] F. Peng, Z. Deng, X. Zhang, D. Xu, Z. Lin, and Z. Su, “X-force: Force-
executing binary programs for security applications,” in 23rd USENIX
Security Symposium (USENIX Security), 2014, pp. 829–844.
[68] P. J. Phillips, A. Martin, C. L. Wilson, and M. Przybocki, “An
introduction evaluating biometric systems,” Computer, vol. 33, no. 2,
pp. 56–63, 2000.
J. Pohl and A. Noack, “Automatic wireless protocol reverse engineer-
ing,” in 13th USENIX Workshop on Offensive Technologies, 2019.
[69]
18
[70]
J. Ren, D. J. Dubois, D. Choffnes, A. M. Mandalari, R. Kolcun, and
H. Haddadi, “Information exposure from consumer iot devices: A multi-
dimensional, network-informed measurement approach,” in Proceedings
of the Internet Measurement Conference, 2019, pp. 267–279.
[71] A. Rosenberg and J. Hirschberg, “V-measure: A conditional entropy-
based external cluster evaluation measure,” in Proceedings of
the
2007 Joint Conference on Empirical Methods in Natural Language
Processing and Computational Natural Language Learning (EMNLP-
CoNLL), 2007, pp. 410–420.
[72] M. Sharif, A. Lanzi, J. Gifﬁn, and W. Lee, “Automatic reverse engi-
neering of malware emulators,” in 30th IEEE Symposium on Security
and Privacy (SP), 2009, pp. 94–109.
[73] B. D. Sija, Y.-H. Goo, K.-S. Shim, H. Hasanova, and M.-S. Kim, “A
survey of automatic protocol reverse engineering approaches, methods,
and tools on the inputs and outputs view,” Security and Communication
Networks, vol. 2018, 2018.
[74] R. R. Sokal, “A statistical method for evaluating systematic relation-
ships,” Univ. Kansas, Sci. Bull., vol. 38, pp. 1409–1438, 1958.
takeover,” in Proceedings of
[75] G. Starnberger, C. Kruegel, and E. Kirda, “Overbot: a botnet protocol
based on kademlia,” in Proceedings of the 4th International Conference
on Security and Privacy in Communication Netowrks, 2008, pp. 1–9.
[76] B. Stone-Gross, M. Cova, L. Cavallaro, B. Gilbert, M. Szydlowski,
R. Kemmerer, C. Kruegel, and G. Vigna, “Your botnet is my botnet:
the 16th ACM
analysis of a botnet
Conference on Computer and Communications Security, 2009, pp. 635–
647.
J. D. Thompson, D. G. Higgins, and T. J. Gibson, “Clustal w: improving
the sensitivity of progressive multiple sequence alignment
through
sequence weighting, position-speciﬁc gap penalties and weight matrix
choice,” Nucleic Acids Research, vol. 22, no. 22, pp. 4673–4680, 1994.
[78] R. Trimananda, J. Varmarken, A. Markopoulou, and B. Demsky,
“Packet-level signatures for smart home devices,” in 27th Annual
Network and Distributed System Security Symposium (NDSS).
The
Internet Society, 2020.
[77]
[79] M. von Hippel, C. Vick, S. Tripakis, and C. Nita-Rotaru, “Auto-
mated attacker synthesis for distributed protocols,” arXiv preprint
arXiv:2004.01220, 2020.
[80] Y. Wang, X. Yun, M. Z. Shaﬁq, L. Wang, A. X. Liu, Z. Zhang,
D. Yao, Y. Zhang, and L. Guo, “A semantics aware approach to
automated reverse engineering unknown protocols,” in 2012 20th IEEE
International Conference on Network Protocols (ICNP), 2012, pp. 1–10.
[81] Y. Wang, Z. Zhang, D. D. Yao, B. Qu, and L. Guo, “Inferring
protocol state machine from network traces: a probabilistic approach,”
in International Conference on Applied Cryptography and Network
Security, 2011, pp. 1–18.
[82] G. Wondracek, P. M. Comparetti, C. Kruegel, E. Kirda, and S. S. S.
Anna, “Automatic network protocol analysis,” in Proceedings of the
Network and Distributed System Security Symposium (NDSS), vol. 8,
2008, pp. 1–14.
[83] P. Wurzinger, L. Bilge, T. Holz, J. Goebel, C. Kruegel, and E. Kirda,
“Automatically generating models for botnet detection,” in European
Symposium on Research in Computer Security, 2009, pp. 232–249.
[84] Z. Xu, X. Zhang, L. Chen, K. Pei, and B. Xu, “Python probabilistic
type inference with natural language support,” in Proceedings of the
2016 24th ACM SIGSOFT International Symposium on Foundations of
Software Engineering, 2016, pp. 607–618.
[85] W. You, Z. Zhang, Y. Kwon, Y. Aafer, F. Peng, Y. Shi, C. Harmon,
and X. Zhang, “Pmp: Cost-effective forced execution with probabilistic
memory pre-planning,” in 2020 IEEE Symposium on Security and
Privacy (SP), 2020, pp. 18–20.
[86] S. Zarrin and T. J. Lim, “Belief propagation on factor graphs for
cooperative spectrum sensing in cognitive radio,” in 2008 3rd IEEE
Symposium on New Frontiers in Dynamic Spectrum Access Networks,
2008, pp. 1–9.
[87] Z. Zhang, W. You, G. Tao, G. Wei, Y. Kwon, and X. Zhang, “Bda:
practical dependence analysis for binary executables by unbiased whole-
program path sampling and per-path abstract interpretation,” Proceed-
ings of the ACM on Programming Languages, vol. 3, no. OOPSLA, pp.
1–31, 2019.