User: How to use Shell scripts to implement simple system log analysis and send the analysis results to the administrator mailbox
Assistant: The following is an example of using a shell script to implement simple system log analysis and send the analysis results to the administrator's mailbox: #!/bin/bash # Define the path of the log file to be analyzed LOG_FILE="/var/log/syslog" # Define the keyword to be matched (take the wrong keyword as an example here) KEYWORD="error" # Perform keyword matching and count the number COUNT=$(grep -c "$KEYWORD" "$LOG_FILE") # Determine whether there is an error if [ $COUNT -gt 0 ]; then # When an error occurs, send the error message to the administrator mailbox MAIL_SUBJECT="System log analysis result: found $COUNT error messages" MAIL_BODY="The following is the list of error messages:\n\n$ (grep "$KEYWORD" "$LOG_FILE")" echo -e "$MAIL_BODY" | mail -s "$MAIL_SUBJECT" admin@example.com else # No error occurred, print a prompt message echo "System log analysis result: no Find any errors" fi In this example, first define the path of the log file to be analyzed and the keyword to match (here, take the error keyword as an example). Then use the grep command to match keywords and count the numbers. If an error occurs, the error message will be sent to the administrator's mailbox, and the subject and body of the mail are also defined here. Use the echo command to output the email body, and use the pipe (|) to pass the output to the mail command to send the email. If no errors occur, print a message. In actual use, it may be necessary to modify and optimize the script according to different log types and requirements. In addition, some other tools and technologies can also be used for system log analysis and alarm, such as Rizhiyi, Logwatch, etc.