instance, Kaspersky implemented detections re-
sultant from our responsible disclosure process, such
as Trojan.Win32.Lolbas.btad.exec, Trojan-
Spy.Win32.Agent.ftps and others. We also release
Yara rules to aid in the detection of LotL techniques.
Furthermore, our study shows that there are differences
in execution purposes between benign and malicious
samples, providing a vector for development of detection
algorithms. In fact, recent papers [71, 21] explore this
promising line of research to overcome the limitation of
existing security products.
• In some descriptions, LotL techniques exclusively refer
to the subset of approaches that can achieve AV evasion.
Nevertheless, in this paper we adopted a broader scope,
and observed that within a balanced dataset of malware,
9.6% of malware used a native system binary to perform
a malicious action.
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:10:34 UTC from IEEE Xplore.  Restrictions apply. 
1568
• With regards to execution purpose, we observe that LotL
binaries were not only leveraged for proxied execution
or evasion, but also to implement common malicious
routines such as delaying execution, modifying system
conﬁguration, ensuring persistence or stopping security
services.
• There was a large variability of prevalence of LotL
techniques among different families as reported by the
AVClass tool. Nevertheless, we can observe that a major-
ity of families showed a low prevalence, while a minority
of families used these techniques with a much higher
prevalence. This means that these techniques are common
enough to be adopted by certain malware authors, but are
not the only (or most prevalent) way of implementing
malicious functionality in malware.
• Legimate software used LotL binaries less than malware,
and although these binaries were used for different pur-
poses, the prevalence is signiﬁcant enough to make the
accurate detection of malicious usage a challenge for
security vendors. Conversely, APT malware leveraged
LotL binaries at twice the rate of commodity malware.
Given this evidence, we can conclude that LotL techniques
have a signiﬁcant adoption in current, state-of-the-art malware
and that they represent a challenge for the security industry
from a detection perspective. With this paper, we tried to shed
light onto this phenomenon and raise the awareness within the
research community about this open problem.
LOLBAS Project Contributions. As an examplar of some
of the techniques in use by modern malware, we identiﬁed
and documented two new Windows system binaries and added
them to the LOLBAS project repository [46].
At.exe executes scheduled tasks at a future time, which is
used to stealthily maintain persistence on infected systems.
An example of this is SoftCell [30], a threat group that uses
At.exe for the purpose of persistence. Many other threat
groups use Schtasks.exe to execute scheduled tasks, for
persistence.
Netsh.exe is a Windows binary that is typically used to alter
ﬁrewall conﬁgurations. This is the only purpose we observe it
being used for by malware. However, we document a use case,
where Netsh.exe can be used to load malicious .dlls.
VIII. LIMITATIONS & FUTURE WORK
Intended or Unexpected Functionality. Our measurement
results do not differentiate between the standard functionality
of binaries versus non-standard uses that leverage side effects
to achieve some result. Some of these cases are documented in
the LOLBAS project [46]. An example of intended or standard
usage is Netsh.exe being used to modify ﬁrewall rules,
while an unintended usage would be to use Netsh.exe to
run .dlls.
We do measure whether parameters from executed samples
match these usage patterns. Malware binaries in our dataset
do employ these techniques, but make up less than 2%
of total measured LotL binary usage. For this reason, we
do not include a comparison of intent in our measurement
results.
Anti-VM Malware. Due to data originating from dynamic
analysis sandboxes hosted in the cloud, anti-VM evasion tech-
niques used by malware may affect data quality. We mitigate
this through the exclusion of malware samples that have
minimal execution or crash during execution in the sandbox.
Malware has been making use of environment detection and
similar methodologies to halt execution [44] for a number
of years. This may affect data quality, as evasive malware
making use of anti-VM techniques does not demonstrate its
actual behaviour. As such, we may underestimate the number
of samples that potentially use LotL binaries. Nevertheless, our
numbers are a lower-bound of the prevalence of this technique
and prove that it is a signiﬁcant phenomenon that should not
be ignored.
Human Operators. Many threat actors that use LotL tech-
niques are human operators executing them from remote
shells, offensive security tools, Powershell, Visual Basic or
Batch scripts [30]. While there is anecdotal evidence of
cases like these, it is harder to generalise and to conduct a
measurement study over a representative dataset as we did.
Instead, we narrowed the scope of our paper and focused on
the usage of LotL binaries by malware. We show that this
phenomenon is not negligible and that malware authors also
leverage these techniques in their binaries and not solely in
post-exploitation scripts.
Linux LotL. A future line of research is to explore the use of
these techniques on Linux systems (titled GTFObins [19]). In a
similar manner to LotL techniques on Windows, these binaries
can be used to achieve malicious functionality. Whilst Linux
malware are not as numerous as their Windows counterparts,
it is a subject worthy of analysis due to the rise of IoT botnets
running lightweight Linux systems [12].
Detection. Another future direction for research in this ﬁeld
is the deployment of detection technologies that attempt to
accurately capture the identiﬁed patterns of use for LotL
techniques such as Endpoint Detection and Response (EDR)
systems. Future research should leverage recent work [71, 21]
on data provenance analysis for process execution chains
to enable modelling of legitimate process relationships and
identiﬁcation of suspicious behavioural patterns.
AVAILABILITY
Research artefacts are available at https://livingoffthe.land and
https://github.com/ssloxford/livingofftheland.
ACKNOWLEDGEMENTS
Thanks to Paul Pearce for shepherding this paper. Thanks also
to Bernardo Quintero and Emiliano Martinez of VirusTotal and
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:10:34 UTC from IEEE Xplore.  Restrictions apply. 
1569
Sunil Potti of Google Cloud Security for access to VirusTotal
process execution data.
REFERENCES
[1] “Threat
Brief:
2020.
[Online]. Available: https://unit42.paloaltonetworks.com/threat-brief-
iranian-linked-cyber-operations/
Iranian-Linked
Operations,”
Cyber
[2] H. Aghakhani, F. Gritti, F. Mecca, M. Lindorfer, S. Ortolani,
D. Balzarotti, G. Vigna, and C. Kruegel, “When Malware is Packin’
Heat; Limits of Machine Learning Classiﬁers Based on Static Analysis
Features.” Network and Distributed System Security Symposium, 2020.
[3] H. S. Anderson and P. Roth, “EMBER: An Open Dataset for Training
[Online].
Static PE Malware Machine Learning Models,” 2018.
Available: http://arxiv.org/abs/1804.04637
[4] Aptnotes, “aptnotes.” [Online]. Available: https://github.com/aptnotes/
data
[5] U. Bayer, I. Habibi, D. Balzarotti, E. Kirda, and C. Kruegel, “A
[Online]. Available:
View on Current Malware Behaviors,” 2009.
http://static.usenix.org/events/leet09/tech/full{ }papers/bayer/bayer.pdf
[6] D. Bohannon, “Invoke-Obfuscation,” 2019. [Online]. Available: https:
//github.com/danielbohannon/Invoke-Obfuscation
[7] A.
Brandt
and M.
Loman,
Ransomware
Security
Land:
Remove
https://news.sophos.com/en-us/2020/02/06/living-off-another-land-
ransomware-borrows-vulnerable-driver-to-remove-security-software/
Software,”
[Online].
Borrows
Driver
2020.
“Living
Vulnerable
Off
Another
to
Available:
Cyber
Security,
and Oman Using
two-stage
[8] ClearSky
Lebanon
for
a
Available:
MuddyWater-Operations-in-Lebanon-and-Oman.pdf
in
domain
[Online].
https://www.clearskysec.com/wp-content/uploads/2018/11/
Israeli
pp.
“MuddyWater
compromised
campaign,”
Operations
1–16,
2018.
an
[9] M. Cohen, “Scanning memory with Yara,” Digital
Investigation,
vol. 20, pp. 34–43, 2017. [Online]. Available: http://dx.doi.org/10.1016/
j.diin.2017.02.005
[10] Context
Information Security,
“AMSI Bypass,” 2019.
[Online].
Available: https://www.contextis.com/en/blog/amsi-bypass
[11] C. Curtsinger, B. Livshits, B. Zorn, and C. Seifert, “ZOZZLE: Fast and
Precise in-Browser JavaScript Malware Detection,” in Proceedings of the
20th USENIX Conference on Security, ser. SEC’11. USA: USENIX
Association, 2011, p. 3.
[12] F. Dang, Z. Li, Y. Liu, E. Zhai, Q. A. Chen, T. Xu, Y. Chen, and
J. Yang, “Understanding ﬁleless attacks on linux-based IoT devices
with HoneyCloud,” MobiSys 2019 - Proceedings of the 17th Annual
International Conference on Mobile Systems, Applications, and Services,
pp. 482–493, 2019.
[13] Department of Homeland Security, “Russian Government Cyber Activity
Targeting Energy and Other Critical Infrastructure Sectors (TA18-
074A).” [Online]. Available: https://www.us-cert.gov/ncas/alerts/TA18-
074A
[14] ESET
a
“Diplomats
Research,
Turla Mosquito,”
Bitten
[Online].
https://www.welivesecurity.com/wp-content/uploads/2018/
Eastern
January,
Europe
2018.
by
Available:
01/ESET{ }Turla{ }Mosquito.pdf
no.
in
[15] FireEye
Threat
Research,
One
APT29’s
Fileless WMI
(POSHSPY),” 2017.
[Online]. Available: https://www.ﬁreeye.com/blog/threat-research/2017/
03/dissecting one ofap.html
and PowerShell Backdoors
“Dissecting
of
[16] G Data, “Analysis of Project Cobra,” 2015. [Online]. Available: https://
www.gdatasoftware.com/blog/2015/01/23926-analysis-of-project-cobra
[17] Github, “Koadic.” [Online]. Available: https://github.com/zerosum0x0/
koadic
[18] ——,
“Powercat,” 2019.
besimorhino/powercat
[19] GTFOBins,
“GTFOBins,”
//gtfobins.github.io/
[Online]. Available: https://github.com/
2020.
[Online]. Available:
https:
[20] Halil Dalabasmaz, “SpookFlare,” 2020.
//github.com/hlldz/SpookFlare
[Online]. Available: https:
[21] W. U. Hassan, A. Bates, and D. Marino, “Tactical Provenance
for Endpoint Detection and Response Systems,” IEEE
[Online]. Available:
Analysis
Symposium on Security and Privacy, 2020.
https://whassan3.web.engr.illinois.edu/papers/rapsheet-oakland20.pdf
[22] Hood3dRob1n, “JSRat-Py.” [Online]. Available: https://github.com/
Hood3dRob1n/JSRat-Py
[23] D. Y. Huang, M. M. Aliapoulios, V. G. Li, L. Invernizzi, E. Bursztein,
K. McRoberts, J. Levin, K. Levchenko, A. C. Snoeren, and D. McCoy,
“Tracking Ransomware End-to-end,” Proceedings - IEEE Symposium on
Security and Privacy, vol. 2018-May, no. 1, pp. 618–631, 2018.
[24] E. Hutchins, M. Cloppert,
defense
network
computer
and R. Amin,
by
“Intelligence-
driven
analysis
of
adversary campaigns and intrusion kill chains,” 6th International
Conference
ICIW
Security,
no.
2011,
[Online]. Avail-
https://www.lockheedmartin.com/content/dam/lockheed-martin/
able:
rms/documents/cyber/LM-White-Paper-Intel-Driven-Defense.pdf
Information Warfare
113–125,
2005,
and
2011.
informed
on
July
pp.
[25] IBM X-Force Incident Response, “New Destructive Wiper “ ZeroCleare
” Targets Energy Sector in the Middle East,” no. January, 2020.
[Online]. Available: https://www.ibm.com/downloads/cas/OAJ4VZNJ
[26] Impact Cyber Trust, “GT Malware Netﬂow Daily Feed,” 2020. [Online].
Available: https://impactcybertrust.org/dataset{ }view?idDataset=1143
[27] D. Kim, B. J. Kwon, and T. Dumitras, “Certiﬁed Malware: Measuring
breaches of trust in the windows code-signing PKI,” Proceedings of
the ACM Conference on Computer and Communications Security, pp.
1435–1448, 2017.
[28] Y. Lemmou and E. M. Souidi, “Inside GandCrab Ransomware,” in
Cryptology and Network Security, J. Camenisch and P. Papadimitratos,
Eds. Cham: Springer International Publishing, 2018, pp. 154–174.
[29] M. Levan
and K. Haag,
“Old
a New Methodology: Verclsid.exe,” 2017.
https://redcanary.com/blog/verclsid-exe-threat-detection/
Phishing Attacks Deploy
[Online]. Available:
[30] M. Levi, A. Serper,
and A. Dahan,
“Operation Soft Cell:
A Worldwide Campaign Against Telecommunications Providers,”
[Online].
Virus
https://www.virusbulletin.com/uploads/pdf/magazine/2019/
Available:
VB2019-Serper-Levi.pdf
no. October,
Bulletin,
1–13,
2019.
pp.
[31] Z. Li, Y. Chen, Q. A. Chen, T. Zhu, C. Xiong, and H. Yang, “Effective
and light-weight deobfuscation and semantic-aware attack detection for
powershell scripts,” Proceedings of the ACM Conference on Computer
and Communications Security, p. 3, 2019.
[32] LOLBAS-Project, “LOLBAS-Project.” [Online]. Available: https://
lolbas-project.github.io/
[33] MalShare, “MalShare,” 2020. [Online]. Available: https://malshare.com/
[34] Microsoft,
“AllowInsecureGuestAuth.”
[Online].
Available:
https://docs.microsoft.com/en-us/windows-hardware/customize/
desktop/unattend/microsoft-windows-workstationservice-
allowinsecureguestauth
[35] ——,
“Windows Authenticode
Signature
Avail-
http://download.microsoft.com/download/9/c/5/9c5b2167-8017-
Format,” Microsoft,
2008.
able:
4bae-9fde-d599bac8184a/Authenticode{ }PE.docx
Portable Executable
[Online].
Tech.
Rep.,
[36] ——,
“Sysinternals Utilities
Index,” 2017.
[Online]. Available:
https://docs.microsoft.com/en-us/sysinternals/downloads/
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:10:34 UTC from IEEE Xplore.  Restrictions apply. 
1570
[37] ——,
“Out Of Sight But Not
Malware with Behavior Monitoring, AMSI,
AV,” Microsoft,
https://www.microsoft.com/security/blog/2018/09/27/out-of-sight-
but-not-invisible-defeating-ﬁleless-malware-with-behavior-monitoring-
amsi-and-next-gen-av/
Invisible: Defeating Fileless
and Next-Gen
Available:
[Online].
2018.
Tech.
Rep.,
[38] ——, “Insights from one year of tracking a polymorphic threat,” 2019.
[Online]. Available: https://www.microsoft.com/security/blog/2019/11/
26/insights-from-one-year-of-tracking-a-polymorphic-threat/
[39] ——,
“Microsoft Recommended Block Rules,” 2019.
[Online].
https://docs.microsoft.com/en-us/windows/security/threat-
Available:
protection/windows-defender-application-control/microsoft-
recommended-block-rules
[40] ——,
“Process Monitor,”
2019.
[Online]. Available:
//docs.microsoft.com/en-us/sysinternals/downloads/procmon
[41] Microsoft Defender ATP Research Team,
Living-Off-The-Land Attacks Are Even More
Not Less Observable,”
//www.microsoft.com/security/blog/2020/03/23/latest-astaroth-living-
off-the-land-attacks-are-even-more-invisible-but-not-less-observable/
[Online]. Available:
2020.
p.
“Latest Astaroth
Invisible But
https:
[42] ——, “Bring your own LOLBin: Multi-stage, ﬁleless Nodersok
campaign delivers
[Online].
Available: https://www.microsoft.com/security/blog/2019/09/26/bring-
your-own-lolbin-multi-stage-ﬁleless-nodersok-campaign-delivers-rare-
node-js-based-malware/
rare Node.js-based malware,” 2019.
[43] ——, “Dismantling a Fileless Campaign: Microsoft Defender ATP’s
[Online]. Available:
Antivirus Exposes Astaroth Attack,” 2019.
https://www.microsoft.com/security/blog/2019/07/08/dismantling-a-
ﬁleless-campaign-microsoft-defender-atp-next-gen-protection-exposes-
astaroth-attack/
[44] N. Miramirkhani, M. P. Appini, N. Nikiforakis, and M. Polychronakis,
“Spotless Sandboxes: Evading Malware Analysis Systems Using Wear-
and-Tear Artifacts,” Proceedings - IEEE Symposium on Security and
Privacy, pp. 1009–1024, 2017.
[45] MITRE,
“MITRE