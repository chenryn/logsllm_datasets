print "That's right!"
```
使用 `FBC` 命令来编译 FreeBASIC 程序:
```
C:\DEVEL\FBC>fbc guess.bas
```
这里是这个简单游戏的快速演示:
```
C:\DEVEL\FBC>guess
Guess the number from 1 to 10:
? 5
Too high
? 3
Too low
? 4
That's right!
```
### R 是 REM
在编写程序时，注释是极好的；注释帮助我们理解程序应该要做什么。可以在批处理文件中使用 `REM` 来做同样的事。在批处理文件中，在 `REM` 的后面的任何东西都将会被忽略。
```
REM this is a comment
```
### S 是 SET
FreeDOS 命令行使用一系列称为  环境变量   environment variables  的变量，让你来自定义你的系统。你可以使用 `SET` 命令来设置这些变量。例如。使用 `DIRCMD` 变量来控制 `DIR` 如何排列目录列表。为设置 `DIRCMD` 变量，使用 `SET` 命令:
```
SET DIRCMD=/O:GNE
```
这告诉 `DIR` 先按照目录分组（`G`）来排序（`O`）输出，然后再按照名称（`N`）和扩展名（`E`）来排序结果。
### T 是 TYPE
`TYPE` 命令是最常使用的 DOS 命令之一。`TYPE` 显示一个文件的内容，类似于在 Linux 上的 `cat` 。
```
C:\DEVEL>type hello.c
#include 
int
main()
{
puts("Hello world");
return 0;
}
```
### U 是 UNZIP
在 Linux 上，你可能更熟悉标准的 Unix 存档命令: `tar`。在 FreeDOS 上也有一个 `tar` 版本（和其它大量的流行的存档程序），但是，在 DOS 上的事实上的标准的存档命令是 `ZIP` 和 `UNZIP` 。两者都默认安装在 FreeDOS 1.3 之中。
比如说，我有一些文件的一个 zip 存档。如果我想提取整个 Zip 文件，我可以只使用 `UNZIP` 命令，并将 Zip 文件作为命令行的选项来提供。这将在我当前工作目录中开始提取存档文件。除非我正在恢复一些东西的先前版本，我通常不希望覆盖我的当前文件。在这种情况下，我将提取存档到一个新的目录。你可以使用 `-d`（“ 目标   destination ”）命令行选项来具体指定目标路径：
```
D:\SRC>unzip monkeys.zip -d monkeys.new
Warning: TZ environment variable not found, cannot use UTC times!!
Archive: monkeys.zip
creating: monkeys.new/monkeys/
inflating: monkeys.new/monkeys/banana.c
inflating: monkeys.new/monkeys/banana.obj
inflating: monkeys.new/monkeys/banana.exe
creating: monkeys.new/monkeys/putimg/
inflating: monkeys.new/monkeys/putimg/putimg.c
inflating: monkeys.new/monkeys/putimg/putimg.obj
inflating: monkeys.new/monkeys/putimg/putimg.exe
```
为学习更多关于 `ZIP` 和 `UNZIP` 命令的信息，可以阅读 [如何在 FreeDOS 上存档文件](https://opensource.com/article/21/6/archive-files-freedos)。
### V 是 VER
在 DOS 的古老岁月中，`VER` 命令会报告你正在运行的 DOS 发行版本，例如：“MS-DOS 5.0.D”。对于 FreeDOS，`VER` 命令将给予你额外的详细信息，例如 FreeDOS Shell 的版本:
```
C:\DEVEL>ver
FreeCom version 0.85a - WATCOMC - XMS_Swap [Jul 10 2021 19:28:06]
```
如果你还想查看 FreeDOS 内核版本和 DOS 兼容性等级，添加 `/R` 选项:
```
C:\DEVEL>ver /r
FreeCom version 0.85a - WATCOMC - XMS_Swap [Jul 10 2021 19:28:06]
DOS version 7.10
FreeDOS kernel 2043 (build 2043 OEM:0xfd) [compiled May 14 2021]
```
### W 是 WHICH
FreeDOS 命令行可以运行来自记录在 `PATH` 变量中的不同的目录列表的程序。你可以使用 `WHICH` 命令来准确地识别出程序的位置。只需要输入 `WHICH` 加上你想要定位的程序名称：
```
C:\>which xcopy
xcopy C:\FREEDOS\BIN\XCOPY.EXE
```
### X 是 XCOPY
`COPY` 命令只能将文件从一个位置复制到另一个位置。如果你想扩大复制的范围来包括一些目录，使用 `XCOPY` 命令。我通常添加 `/E` 选项来包含所有的子目录，包括空的子目录，这样，我可以复制整个目录树。这样就可以有效地备份我正在工作的任意工程:
```
D:\SRC>xcopy /e monkeys monkeys.bak
Does MONKEYS.BAK specify a file name
or directory name on the target (File/Directory)? d
Copying D:\SRC\MONKEYS\PUTIMG\PUTIMG.C
Copying D:\SRC\MONKEYS\PUTIMG\PUTIMG.OBJ
Copying D:\SRC\MONKEYS\PUTIMG\PUTIMG.EXE
Copying D:\SRC\MONKEYS\BANANA.C
Copying D:\SRC\MONKEYS\BANANA.OBJ
Copying D:\SRC\MONKEYS\BANANA.EXE
6 file(s) copied
```
### Y 是 Yellow
这不是一个命令，而是关于 DOS 如何显示颜色的有趣的百科知识。如果你仔细留心过 FreeDOS，你可能已经注意到，文本只能获取有限的颜色范围—— 十六种文本颜色、八种背景颜色。
IBM 的 5153 彩色显示器，通过点亮不同亮度等级的微小的红、绿、蓝荧光点的方式创建 16 种文本颜色和 8 种背景颜色来为用户显示颜色。早期的个人计算机只能以“标准强度”级别来显示背景颜色；只有文本颜色可以使用明亮颜色。
如果你查看文本颜色，你有黑色、蓝色、绿色、蓝绿色、红色、品红色、橙色和白色。这些颜色的“明亮”版本有亮黑色（暗灰色）、亮蓝色、亮绿色、亮蓝绿色、亮红色、亮品红色、黄色和亮白色。橙色的“明亮”版本有实际上是黄色。没有“亮橙色”。
如果你想要学习更多关于文本颜色的信息，阅读我们关于 [FreeDOS 为什么有 16 种颜色](https://opensource.com/article/21/6/freedos-sixteen-colors) 的文章。
### Z 是 ZIP
你可以在 DOS 命令行中使用 `ZIP` 来创建文件和目录的存档。这是一种很便利的方法：可以备份你的工作，或者发布一个 “软件包” 来在未来的 FreeDOS 发行版中使用。例如，比如说，我想备份我的工程源文件代码，其中包含这些源文件文件:
```
D:\SRC>zip -9r monkeys.zip monkeys
zip warning: TZ environment variable not found, cannot use UTC times!!
adding: monkeys/ (stored 0%)
adding: monkeys/banana.c (deflated 66%)
adding: monkeys/banana.obj (deflated 26%)
adding: monkeys/banana.exe (deflated 34%)
adding: monkeys/putimg/ (stored 0%)
adding: monkeys/putimg/putimg.c (deflated 62%)
adding: monkeys/putimg/putimg.obj (deflated 29%)
adding: monkeys/putimg/putimg.exe (deflated 34%)
```
ZIP 支持很多命令行选项来完成不同的工作，但是，我使用最多的命令行选项是： `-r` 用于递归处理目录和子目录、`-9` 用于提供尽可能大的压缩比。`ZIP` 和 `UNZIP` 使用类 Unix 命令行，因此，你可以在短划线后面合并选项: `-9r` 将在 Zip 文件中给予最大压缩比和包括子目录。
关于如何使用 `ZIP` 和 `UNZIP` 命令的更多详细信息，阅读 [如何在 FreeDOS 上存档文件](https://opensource.com/article/21/6/archive-files-freedos)。
### 新的 FreeDOS 指南
准备好你的 FreeDOS 旅程的下一步了吗?查看我们的新的电子书，现在开始尝试我们的 FreeDOS !
> 
> **[FreeDOS 使用指南](https://opensource.com/downloads/guide-using-freedos)**
> 
> 
> 
> 
> **[深入 FreeDOS 高级指南](https://opensource.com/downloads/advanced-freedos)**
> 
> 
> 
*（题图：MJ/0b21dcc8-4c8d-457b-9e0d-fbbe5dd08c60）*
---
via: 
作者：[Jim Hall](https://opensource.com/users/jim-hall) 选题：[lkxed](https://github.com/lkxed) 译者：[robsean](https://github.com/robsean) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出