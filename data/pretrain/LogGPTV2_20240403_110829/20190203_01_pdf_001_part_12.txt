Figure 4-6 - Remove Subscription, Snapshot, Synchronize, Configure Schedule, and Remove
Schedule icons
4.2 Saving Server Login Information
When you use the xDB Replication Console to create a replication system, you will need
to register a publication server and a subscription server. During this process you are
given the option to save the server’s login information. This section describes what
happens if you select this option.
The following discussion applies to both publication servers and subscription servers.
These are generically referred to as “servers” in this discussion.
4.2.1 Server Login File
If you choose to save the login information, the server’s network location (IP address and
port number), admin user name, and password are stored in a server login file in a hidden
location under the home directory of the operating system account with which you have
opened the xDB Replication Console. See Section 3.5 for the location of this file.
The following shows the Register Publication Server dialog box where the option to save
login information is presented as a check box. In this example 192.168.2.22 entered in
the Host field, 9051 entered in the Port field, admin entered in the User Name field, and
an encrypted form of the password entered in the Password field are saved in the server
login file for this publication server if the admin user name and password validation are
successful.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 134
EDB Postgres Replication Server User’s Guide
The values for User Name and Password that you enter are validated against the admin
user name and password in the xDB Replication Configuration file residing on host
192.168.2.22, in this case. The admin user name and password must successfully
authenticate before registration of the publication server and saving of the publication
server’s login information in the server login file occur. See Section 2.3.1.3 for
information on the xDB Replication Configuration file.
Figure 4-7 - Save login information option for a publication server
See Section 5.2.1 for more information on the purpose of these fields and the process of
registering a publication server.
The following shows the Register Subscription Server dialog box. In this example
192.168.2.22 entered in the Host field, 9052 entered in the Port field, admin entered
in the User Name field, and an encrypted form of the password entered in the Password
field are saved in the server login file for this subscription server if the admin user name
and password validation are successful.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 135
EDB Postgres Replication Server User’s Guide
Figure 4-8 - Save login information option for a subscription server
See Section 5.3.1 for more information on the purpose of these fields and the process of
registering a subscription server.
Saving server login information gives you the convenience of immediate access to the
publication server and any of its subordinate publications, or access to the subscription
server and any of its subordinate subscriptions. That is, when you open the xDB
Replication Console, the Publication Server nodes of saved publication servers
immediately appear in the replication tree allowing you to perform administrative tasks
on its subordinate publications.
Similarly, the Subscription Server nodes of saved subscription servers immediately
appear in the replication tree allowing you to perform administrative tasks on its
subordinate subscriptions.
If you did not save server login information, the server nodes would not be visible in the
replication tree. You would have to re-enter the server’s network location, admin user
name, and password. In other words, you would have to register the server each time you
open the xDB Replication Console.
Note: Each operating system account on a given host has its own server login file. Thus,
the servers that are saved and appear in the xDB Replication Console when opened is
independently determined for each operating system account.
4.2.2 Security Risks of Saved Server Login Information
The preceding section discussed the benefits of saving server login information.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 136
EDB Postgres Replication Server User’s Guide
The security risk associated with it is if unauthorized persons gain access to your
operating system account, they could then potentially open the xDB Replication Console
on your host using your operating system account.
If the login information of publication servers or subscription servers is saved, the
corresponding Publication Server nodes or Subscription Server nodes immediately appear
in the xDB Replication Console with no request for authentication information.
This allows an unauthorized person to perform any operation on the exposed publications
and subscriptions including the potential to completely delete the replication system.
Note: The publication database and subscription database cannot be deleted, but
unauthorized replications could be forced to occur.
Thus, it is important that operating system accounts are secure on hosts that have access
to an xDB Replication Console and a replication system.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 137
EDB Postgres Replication Server User’s Guide
5 Single-Master Replication
Operation
This chapter describes how to configure and run xDB Replication Server for single-
master replication systems.
For configuration and management of your replication system, the xDB Replication
Console graphical user interface is used to illustrate the steps and examples in this
chapter. The same steps can be performed from the operating system command line using
the xDB Replication Server Command Line Interface (CLI). The commands of the xDB
Replication Server CLI utility are described in Chapter 8.
5.1 Prerequisite Steps
Certain steps must be taken to prepare the host environments as well as the publication
and subscription database servers before beginning the process of building a single-
master replication system. This section describes these steps.
5.1.1 Setting Heap Memory Size for the Publication and Subscription
Servers
The publication server and the subscription server are configured to run with a default set
of heap size parameters. Either the default settings for 32-bit platforms or the default
settings for 64-bit platforms are set by parameter JAVA_HEAP_SIZE when xDB
Replication Server is installed.
This parameter is configured in the xDB Startup Configuration file. See Section 2.3.1.4
for information on the xDB Startup Configuration file.
The following is an example of the xDB Startup Configuration file.
#!/bin/sh
JAVA_EXECUTABLE_PATH="/usr/bin/java"
JAVA_MINIMUM_VERSION=1.7
JAVA_BITNESS_REQUIRED=64
JAVA_HEAP_SIZE="-Xms256m -Xmx1536m"
PUBPORT=9051
SUBPORT=9052
On a 32-bit system, the initial heap size is set to 128 megabytes (-Xms128m) and the
maximum limit is set to 512 megabytes (-Xmx512m). On a 64-bit system the initial heap
size is 256 megabytes (-Xms256m) and the maximum limit is 1536 megabytes (-
Xmx1536m).
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 138
EDB Postgres Replication Server User’s Guide
Typically, these values can handle the average workloads. However, depending upon the
average row size and pending backlog of replication updates, it may be beneficial to
increase the default heap size settings.
The default values can be modified by changing the JAVA_HEAP_SIZE parameter setting
in the xDB Startup Configuration file. Be sure to restart the publication server and the
subscription server (see sections 5.2.1 and 5.3.1) after making such changes.
The heap size value should conform to the available RAM on the host running the
publication server or subscription server. The basic guideline is that the maximum heap
size should not exceed 25% of the total RAM size.
The following factors should also be considered.
If both the publication server and subscription server are running on the same host, then
the minimum and recommended RAM capacity are shown by the following.
 Minimum RAM Size. For a 32-bit system, use 4 gigabytes; for a 64-bit system
use 8 gigabytes.
 Recommended RAM Size. For a 32-bit system, use 8 gigabytes; for a 64-bit
system use 16 gigabytes.
By default, both the publication server and subscription server are started and both are
required for single-master replication systems. However if only multi-master replication
systems are to be configured and used, then the subscription server is not needed. In such
cases, the subscription server should be stopped to avoid redundant use of memory.
If both the publication server and the subscription server are running on the same host,
then each server reserves its own heap buffer. Thus, the total heap size for both the
publication and subscription servers, obtained by adding the maximum heap size for both
servers, should comply with the available RAM on the host.
5.1.2 Enabling Synchronization Replication with the Log-Based
Method
This section applies only to Postgres database servers of version 9.4 and later.
If you plan to use the log-based method of synchronization replication with any
publication database running under the Postgres database server, the following
configuration parameter settings are required in the configuration file,
postgresql.conf, of the Postgres database server:
 wal_level. Set to logical.
 max_wal_senders. Specifies the maximum number of concurrent connections
(that is, the maximum number of simultaneously running WAL sender processes).
Set at minimum, to the number of SMR publication databases on this database
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 139
EDB Postgres Replication Server User’s Guide
server that will use the log-based method. In addition, if MMR master nodes are
to run on this database server, also add the number of MMR master nodes that
will use the log-based method.
 max_replication_slots. Specifies the maximum number of replication slots. Set
at minimum, to the number of SMR publication databases on this database server
that will use the log-based method. In addition, if MMR master nodes are to run
on this database server with the log-based method, see Section 2.2.10.4 for
information on the additional number of replication slots required.
See Section 2.2.10 for information on the log-based method of synchronization
replication.
The Postgres database server must be restarted after altering any of these configuration
parameters.
In addition, the pg_hba.conf file requires an entry for each publication database user of
publication databases that are to use the log-based method. Such database users must be
included as a replication database user in the pg_hba.conf file. See Section 5.1.6.3 for
additional information.
5.1.3 Enabling Access to the Database Servers
The following sections describe configuration steps required to use xDB Replication
Server on various types of database servers.
The following section describes the steps to enable access to Oracle. See Section 5.1.3.2
for enabling access to SQL Server.
No special steps are required to enable access to a Postgres database server.
5.1.3.1 Enabling Access to Oracle
Note: The directions in this section apply only if Oracle will be used as the publication or
subscription database.
An Oracle JDBC driver jar file such as, ojdbc5.jar, must be accessible to the Java
virtual machine (JVM) on the host running the publication server and the subscription
server. If the publication server and subscription server are running on separate hosts, the
Oracle JDBC driver must be accessible to the JVM on each host. Oracle JDBC driver
version ojdbc5 or later must be used.
Step 1: Download the Oracle JDBC driver, for example, ojdbc5.jar, from the Oracle
download site to the host that will be running the publication server.
Step 2: Copy file ojdbc5.jar to the directory XDB_HOME/lib/jdbc.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 140
EDB Postgres Replication Server User’s Guide
$ su root
Password:
$ cd /opt/PostgreSQL/EnterpriseDB-xDBReplicationServer/lib/jdbc
$ cp /home/user/Downloads/ojdbc5.jar .
$ ls -l
total 4032
-rw-rw-r-- 1 root root 355655 Jan 25 02:38 edb-jdbc14.jar
-rw-rw-r-- 1 root root 716209 Jan 25 02:38 edb-jdbc17.jar
-rw-rw-r-- 1 root root 317816 Jan 25 02:38 jtds-1.3.1.jar
-rw-r--r-- 1 root root 2091137 Jan 28 16:45 ojdbc5.jar
-rw-rw-r-- 1 root root 642809 Jan 25 02:38 postgresql-9.4-1201.jdbc4.jar
Note: You may also copy the ojdbc5.jar file to the jre/lib/ext subdirectory of the
location where you installed your Java runtime environment.
Step 3: If the subscription server is running on a different host than the publication
server, repeat steps 1 and 2 for the subscription server host.
5.1.3.2 Enabling Access to SQL Server
Note: The directions in this section apply only if SQL Server will be used as the
publication or subscription database.
The jTDS JDBC driver jar file jtds-1.3.1.jar must be accessible to the Java virtual
machine (JVM) on the host running the publication server and the subscription server. If
the publication server and subscription server are running on separate hosts, the jTDS
JDBC driver must be accessible to the JVM on each host.
When you install xDB Replication Server, the jtds-1.3.1.jar file is placed in the
directory XDB_HOME/lib/jdbc so there is no manual configuration needed for this
requirement.
Step 1: Be sure SQL Server Authentication mode is enabled on your SQL Server database
engine. SQL Server Authentication mode allows the use of SQL Server logins such as the
built-in system administrator login, sa.
Using the default settings for SQL Server installation, only Windows Authentication
mode is enabled, which utilizes the accounts of the Windows operating system for
authentication.
In order to permit SQL Server Authentication mode, you must change the authentication
mode to Mixed Mode Authentication, which permits both Windows Authentication and
SQL Server Authentication.
This can be done using SQL Server Management Studio. Refer to the appropriate SQL
Server documentation for using SQL Server Management Studio.
Step 2: Be sure SQL Server is accepting TCP/IP connections. In the SQL Server
Configuration Manager, under SQL Server Network Configuration, be sure the TCP/IP
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 141
EDB Postgres Replication Server User’s Guide
protocol for the SQL Server instance is set to Enabled. The typical, default SQL Server
instance names are MSSQLSERVER or SQLEXPRESS.
Step 3 (Required only for a SQL Server publication database): Be sure SQL Server
Agent is enabled and running. SQL Server Agent is a Windows service that controls job
scheduling and execution with SQL Server.
xDB Replication Server uses SQL Server Agent for certain operations such as for
scheduled shadow table history cleanup (see Section 7.5.1).
SQL Server Agent can be started by using SQL Server Configuration Manager. Refer to
the appropriate SQL Server documentation for using SQL Server Configuration Manager.
5.1.4 Preparing the Publication Database
This section discusses the preparation of a database that contains tables and views that
will become members of publications.
The tables and views to be used for any given publication must all reside in the same
database. This database becomes the publication database of that publication. A
publication database user name must be created or already exist with the following
characteristics:
 The publication database user can connect to the publication database.
 The publication database user has the privileges to create control schema objects
to store metadata used for controlling and tracking the replication process.
 The publication database user can read the tables and views that are to become
members of publications.
 For publications that will use synchronization replication with the trigger-based
method, the publication database user can create triggers on the publication tables.
(For Oracle, the publication database user must have trigger creation privilege
even for snapshot-only publications, though triggers will only be created for
publications using synchronization replication.)
The examples used throughout the rest of this user’s guide are based on the following:
 The publication database user name is pubuser.
 The tables and view used in publications reside in a schema named edb.
 Three tables named dept, emp, and jobhist are members of schema edb.
 One view named salesemp is a member of schema edb. This view is a SELECT
statement over the emp table.
 The Oracle system identifier (SID) of the publication database is xe. The SQL
Server publication database name is edb. The Postgres publication database name
is edb. (The cases of Oracle as the publication database, SQL Server as the
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 142
EDB Postgres Replication Server User’s Guide
publication database, and Postgres as the publication database are presented with
examples in this section.)
For preparing an Oracle publication database, see the next section. For preparing a SQL
Server publication database, see Section 5.1.4.2. For preparing a Postgres publication
database, see Section 5.1.4.3.
5.1.4.1 Oracle Publication Database
Note (For Oracle 12c): The Oracle 12c multitenant architecture introduces the concept
of the container database (CDB), which can contain multiple pluggable databases
(PDBs). A pluggable database can be used as a publication database or a subscription
database in a single-master replication system.
Oracle 12c still supports the usage of a single database referred to as a non-container
database (non-CDB) that is compatible with Oracle versions prior to 12c. An Oracle 12c
non-container database can also be used as a publication database or a subscription
database in a single-master replication system.
The setup instructions for using an Oracle 12c publication database or subscription
database are the same as for previous Oracle versions. Any special distinctions are
indicated by a note within the instructions.
Step 1: Create a database user name for the publication database user. The publication
database user name must have a password, and it must have the ability to create a
database session. The publication database user becomes the owner of the control schema
objects that will be created in the publication database to track, control, and record the
replication process and history.
Note (For Oracle 12c Pluggable Database): The publication database user can be an
Oracle local user or a common user. The local user exists within and has access to only a
single, user-created pluggable database (PDB), which is to be used as the publication
database. Common user names typically begin with C## or c## and can access multiple
pluggable databases.
Note (For Oracle 12c Pluggable Database): Creation and granting of privileges for a
local user must be done while connected to the pluggable database to be used as the
publication database. Creation of a common user must be done within the Oracle 12c root
container CDB$ROOT. Granting of privileges to the common user must be done while
connected to the pluggable database to be used as the publication database.
Note (For Oracle 12c Non-Container Database): Creation and granting of privileges to
the publication database user are performed in the same manner as for Oracle versions
prior to 12c.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 143
EDB Postgres Replication Server User’s Guide
When creating the publication database definition, the publication database user name is
entered in the Publication Service – Add Database dialog box (see Section 5.2.2).
CREATE USER pubuser IDENTIFIED BY password;
GRANT CONNECT TO pubuser;
Step 2: Grant the privileges needed to create the control schema objects.
The control schema objects are created in the schema owned by, and with the same name
as the publication database user. That is, the publication database user’s schema is the
control schema for an Oracle publication database.
GRANT RESOURCE TO pubuser;
Step 3: Grant the privileges required to create triggers on the publication tables. The
CREATE ANY TRIGGER privilege must be granted to the publication database user.
GRANT CREATE ANY TRIGGER TO pubuser;
Step 4: Grant the privileges required to lock publication tables when creating triggers.
The LOCK ANY TABLE privilege must be granted to the publication database user.
GRANT LOCK ANY TABLE TO pubuser;
Step 5 (For Oracle 12c only): Grant the privileges required to access tablespaces. The
GRANT UNLIMITED TABLESPACE privilege must be granted to the publication database
user. This requirement applies to both a pluggable database and a non-container database.
GRANT UNLIMITED TABLESPACE TO pubuser;
Step 6: The publication database user must be able to read the tables and views that are
to be included in publications.