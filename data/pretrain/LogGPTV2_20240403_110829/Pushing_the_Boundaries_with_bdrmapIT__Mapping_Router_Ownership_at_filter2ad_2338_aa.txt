# Title: Pushing the Boundaries with bdrmapIT: Mapping Router Ownership at Internet Scale

## Authors
- Alexander Marder, University of Pennsylvania
- Matthew J. Luckie, University of Waikato
- Amogh Dhamdhere, CAIDA / UC San Diego
- Bradley Huffaker, CAIDA / UC San Diego
- kc claffy, CAIDA / UC San Diego
- Jonathan M. Smith, University of Pennsylvania

## Abstract
Two complementary approaches to mapping network boundaries from traceroute paths have recently emerged [27, 31]. Both methods use heuristics to interpret data from traceroute measurement campaigns. bdrmap [27] employs targeted traceroutes, alias resolution techniques, and AS relationship inferences to map the boundaries of a specific network and its attached networks. MAP-IT [31] aims to infer all AS-level network boundaries from a large archive of traceroutes launched from multiple networks. These contributions significantly advanced the state-of-the-art, inspiring a collaboration to combine their strengths. We present bdrmapIT, the result of this collaboration, which provides a more complete, accurate, and general solution to the challenge of Internet topology research. bdrmapIT achieves 91.8% to 98.8% accuracy in mapping AS boundaries in two Internet-wide traceroute datasets, improving on MAP-IT’s coverage without sacrificing bdrmap’s precision. The bdrmapIT source code is available at https://git.io/fAsI0.

## ACM Reference Format
Alexander Marder, Matthew J. Luckie, Amogh Dhamdhere, Bradley Huffaker, kc claffy, and Jonathan M. Smith. 2018. Pushing the Boundaries with bdrmapIT: Mapping Router Ownership at Internet Scale. In 2018 Internet Measurement Conference (IMC '18), October 31–November 2, 2018, Boston, MA, USA. ACM, New York, NY, USA, 14 pages. https://doi.org/10.1145/3278532.3278538

## 1. Introduction
A long-standing challenge in Internet topology research is router-level topology discovery and ownership inference, which relies on IP-level measurements (e.g., traceroute) and heuristics to interpret these measurements. This challenge is particularly daunting between autonomously managed networks, where the task of mapping the borders between networks at the router level is equivalent to identifying routers in traceroute measurements and inferring their ownership.

Fundamental architectural constraints hinder router ownership inference: the TCP/IP architecture lacks interdomain boundaries at the network layer, and there is no unique identifier for routers at the IP layer. Router software diversity further complicates inference, as a router may respond with an IP address from various interfaces, not necessarily belonging to the router's owner. Constructing an Internet-scale topology by aggregating measurements from multiple vantage points (VPs) can mitigate some risks but results in topologies with fewer observable links farther from VPs. Validating router-level inferences against ground truth requires cooperation from operators, who often have limited incentive or time.

Until 2016, techniques to accurately map network borders were elusive. Two independently developed approaches, MAP-IT [31] and bdrmap [27], achieved significantly better accuracy than previous methods. Both use heuristics to minimize errors in interpreting traceroute data, but they differ in their goals and design. bdrmap uses specialized heuristics to analyze a router-level graph from one VP, while MAP-IT uses an iterative graph-refinement process on an interface-level graph from many VPs. Inspired by these different approaches, we explored the potential to create a more general-purpose solution. We report the results of this effort here.

A general solution to the border mapping and router ownership inference problem, operating at Internet scale, will accelerate progress in several research and operational areas. For example, CAIDA has used bdrmap for three years to study interdomain congestion, but it has been limited to links involving the measurement VP’s network. A generalized border mapping tool could provide broader visibility into interdomain links. Other research, such as congestion inference [37] and resilience assessment [14, 25, 33, 36], could be extended to identify congested networks and links. A new border mapping tool could also address well-known pitfalls with less rigorous approaches to identifying interdomain links [32, 38]. MAP-IT was instrumental in uncovering bugs in traceroute implementations [34]; investigation of anomalous MAP-IT inferences revealed that the M-lab traceroutes used as input were corrupted.

We make the following three contributions:
1. **Development of bdrmapIT**: We developed and implemented bdrmapIT, which combines the sophisticated heuristics of bdrmap with the boundary location algorithm of MAP-IT. Section 2 discusses how we leverage the strengths of both approaches, Section 3 provides an overview of the synthesized approach, and Sections 4, 5, and 6 detail the algorithm.
2. **Superior Accuracy and Coverage**: We demonstrated that bdrmapIT outperforms either previous approach in terms of accuracy and coverage. We validated bdrmapIT against ground truth from a tier 1, a large access, and two R&E networks, achieving 91.8% to 98.8% accuracy, even without using traceroute VPs in any of the validating networks. We also showed that bdrmapIT’s accuracy is independent of the number of VPs, maintaining performance when the number of VPs is reduced from 80 to 20 (Section 7).
3. **Release of Implementation and Source Code**: We release our implementation and source code to promote reproducibility and enable others to use our tool for their own analyses. bdrmapIT has been incorporated into CAIDA’s ITDK [6] generation process.

## 2. Related Work
The canonical approach to converting IP-level traceroute output to an AS-level path uses the origin AS announcing the longest matching prefix into the global BGP routing system. However, this approach is risky because some routers respond to traceroute probes with a source IP address belonging to a different network. In 2010, Zhang reported that between 16% and 47% of AS adjacencies inferred using the longest prefix match approach were likely false [40]. In 2003, Mao’s “AS traceroute” [30] used correlated BGP and traceroute views from the same VP, DNS names, and WHOIS data to perform IP-AS mappings, later improving them further using dynamic programming, although only for a /24 address granularity [29]. Generally, interdomain links use /30 or /31 prefixes to use address space efficiently, and co-located BGP and traceroute views are rare. In 2009, Chen et al. proposed a set of heuristics to distill some missing AS-level links from traceroute data [16]. In 2010, Huffaker et al. developed and validated four different router ownership heuristics using IPv4 alias resolution, inferred AS relationships, and degree [18] separately; their best-performing heuristic was correct 71% of the time.

In 2016, two distinct approaches towards inferring router ownership were proposed independently: bdrmap [27] and MAP-IT [31]. bdrmap focuses on identifying all interdomain links observable by a single VP in a hosting AS, consisting of data collection and router ownership inference components. The data collection component conducts traceroutes from the VP towards every prefix routed in the Internet. The data collection phase is reactive, using alias resolution to infer which interfaces returned by traceroute belong to the same routers, and additional traceroutes to different addresses within a single prefix if a prior traceroute might have found an off-path interface within the target AS.

The inference component of bdrmap uses the collected data to infer router ownership within the hosting AS and adjacent ASes. Starting at the VP, bdrmap performs a breadth-first search based on hop-count from the VP of the traceroute responses to identify internal routers, defined as all routers that appear prior to an interface address announced by the VP network in the traceroutes. Subsequent routers are either operated by the VP network or by a directly connected neighbor. bdrmap uses heuristics to infer ownership of subsequent routers until all routers immediately subsequent to the network boundary have been mapped to other ASes.

bdrmap heuristics correctly infer router ownership when an edge network operator drops traceroute probes at their border router, when routers reply using unrouted IP addresses, when routers respond with an off-path address announced by a third party in BGP, and uses AS relationships to reason about ownership when traceroute returns IP paths that are not congruent with BGP policy.

MAP-IT, on the other hand, consists only of an inference component to identify interdomain links (between ISP networks) in the Internet core. Unlike bdrmap, MAP-IT aggregates all available traceroute data collected by many VPs in many ASes but does not use any alias resolution to infer routers. Instead, MAP-IT employs localized reasoning on an interface-level graph, drawing inferences from each interface and its neighbors in isolation. MAP-IT iterates over the set of interfaces several times, in each iteration identifying the interfaces used for interdomain links. The primary inference method is to find an interface with an address originated by one AS, where a plurality of either its subsequent or preceding interfaces map to another AS, indicating a link between the two networks. After each iteration, MAP-IT refines the graph, enabling more accurate interdomain inferences in subsequent iterations until an iteration yields no changes.

Our new technique, implemented in the bdrmapIT tool, leverages the strengths of bdrmap and MAP-IT for a general-purpose solution. Specifically:
1. **bdrmap** infers AS owners only for routers at the first AS boundary and requires a VP in each network of interest.
2. **MAP-IT** lacks heuristics for edge networks and low-visibility links, such as routers without subsequent hops.

### Table 1: bdrmapIT Heuristics Adapted from bdrmap and MAP-IT
| Phase | Step | Description |
|-------|------|-------------|
| 1     | 4    | Label AS-level Metadata |
|       | 4.1  | Assign Link Confidence Labels |
|       | 4.2  | Create Origin AS Sets |
|       | 4.3  | Identify Destination ASes |
| 2     | 5    | Annotate Last Hops |
|       | 5.1  | When Dest. AS set is empty |
|       | 5.2  | When Dest. AS set is not empty |
| 3     | 6    | Graph Refinement |
|       | 6.1  | Apply Link Vote Heuristics |
|       | 6.1.1| Correct Reallocated Prefixes |
|       | 6.1.2| Check for Exceptions |
|       | 6.1.3| Apply IR Vote Heuristics |
|       | 6.1.4| Check for a Hidden AS |
|       | 6.2  | Annotate IRs |
|       | 6.3  | Annotate Interfaces |

This table summarizes the key steps and heuristics adapted from bdrmap and MAP-IT in the bdrmapIT tool.