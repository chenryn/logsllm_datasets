title:Pushing the Boundaries with bdrmapIT: Mapping Router Ownership at
Internet Scale
author:Alexander Marder and
Matthew J. Luckie and
Amogh Dhamdhere and
Bradley Huffaker and
kc claffy and
Jonathan M. Smith
Pushing the Boundaries with bdrmapIT: Mapping Router
Ownership at Internet Scale
Alexander Marder
University of Pennsylvania
PI:EMAIL
Bradley Huffaker
CAIDA / UC San Diego
PI:EMAIL
Matthew Luckie
University of Waikato
PI:EMAIL
kc claffy
CAIDA / UC San Diego
PI:EMAIL
Amogh Dhamdhere
CAIDA / UC San Diego
PI:EMAIL
Jonathan M. Smith
University of Pennsylvania
PI:EMAIL
ABSTRACT
Two complementary approaches to mapping network boundaries
from traceroute paths recently emerged [27,31]. Both approaches
apply heuristics to inform inferences extracted from traceroute mea-
surement campaigns. bdrmap [27] used targeted traceroutes from a
specific network, alias resolution probing techniques, and AS rela-
tionship inferences, to infer the boundaries of that specific network
and the other networks attached at each boundary. MAPIT [31]
tackled the ambitious challenge of inferring all AS-level network
boundaries in a massive archived collection of traceroutes launched
from many different networks. Both were substantial contribu-
tions to the state-of-the-art, and inspired a collaboration to explore
the potential to combine the approaches. We present and evaluate
bdrmapIT, the result of that exploration, which yielded a more com-
plete, accurate, and general solution to this persistent and central
challenge of Internet topology research. bdrmapIT achieves 91.8%-
98.8% accuracy when mapping AS boundaries in two Internet-wide
traceroute datasets, vastly improving on MAP-IT’s coverage without
sacrificing bdrmap’s ability to map a single network. The bdrmapIT
source code is available at https://git.io/fAsI0.
ACM Reference Format:
Alexander Marder, Matthew Luckie, Amogh Dhamdhere, Bradley Huf-
faker, kc claffy, and Jonathan M. Smith. 2018. Pushing the Boundaries with
bdrmapIT: Mapping Router Ownership at Internet Scale. In 2018 Internet
Measurement Conference (IMC ’18), October 31-November 2, 2018, Boston, MA,
USA. ACM, New York, NY, USA, 14 pages. https://doi.org/10.1145/3278532.
3278538
1 INTRODUCTION
A long-standing challenge of Internet topology research is router-
level topology discovery and ownership inference, which relies on
IP-level measurements that trick routers into revealing network
structure (e.g., traceroute), and heuristics to interpret such measure-
ments. The challenge is most daunting in between autonomously
managed networks. The task of mapping the borders between net-
works at the router level is equivalent to the task of identifying
Permission to make digital or hard copies of part or all of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for third-party components of this work must be honored.
For all other uses, contact the owner/author(s).
IMC ’18, October 31-November 2, 2018, Boston, MA, USA
© 2018 Copyright held by the owner/author(s).
ACM ISBN 978-1-4503-5619-0/18/10.
https://doi.org/10.1145/3278532.3278538
56
routers in traceroute measurements, and then inferring who owns
those routers.
There are fundamental architectural constraints that hinder
router ownership inference: the TCP/IP architecture has no notion
of interdomain boundaries at the network layer, nor any notion
of boundaries around a single router. That is, at the IP layer, there
is no unique router identifier. Router software diversity further
complicates inference: a given router may respond to traceroute
with a source address obtained from the interface it received the
probe packet on, the interface it sends the reply on, or some other
interface. Due to network addressing practices, the IP addresses on
these interfaces may not even belong to the owner of the router.
When constructing an Internet-scale topology, superimposing mea-
surements from multiple vantage points (VPs) can mitigate some of
these risks, but results in topologies where links farther from VPs
are less likely to be observed [24], and those that are observed have
fewer constraints to use in ownership inference. Finally, validat-
ing router-level inferences against ground truth requires tedious
cooperation from operators who have limited incentive or time.
Techniques to accurately map network borders were elusive
until 2016, when two independently conceived approaches [27,
31] achieved accuracy significantly superior to the then state-of-
the-art. Both MAP-IT and bdrmap use heuristics to minimize well-
known errors in interpreting traceroute data, but bdrmap developed
specialized heuristics to analyze a router-level graph it inferred from
one vantage point, while MAP-IT used an iterative graph-refinement
process on an interface-level graph previously gathered from many
vantage points. The different goals, design choices, and assumptions
inspired us to ask: can we leverage the lessons from both efforts to
create a more general-purpose solution? We report the results of
that effort here.
A general solution to the border mapping and router owner-
ship inference problem, operating at Internet scale, will accelerate
progress in a number of research and operational pursuits. For
example, CAIDA has used bdrmap for three years to study interdo-
main congestion, but has restricted itself to links involving the mea-
surement VP’s network; a generalized border mapping tool could
amplify visibility to a much broader set of interdomain links. Other
congestion inference [37] and resilience assessment [14,25,33,36]
research could be extended to identify networks and links expe-
riencing congestion. A new border mapping tool could address
well-known pitfalls with less rigorous approaches to identifying
interdomain links [32,38]. MAP-IT was already instrumental in un-
covering bugs in traceroute implementations [34]—investigation of
IMC ’18, October 31-November 2, 2018, Boston, MA, USA
anomalous MAP-IT inferences revealed that the M-lab traceroutes
used as input were corrupted.
We make the following three contributions:
(1) We developed and implemented bdrmapIT, which uses the
sophisticated bdrmap heuristics as additional input to the MAP-IT
boundary location algorithm. In §2 we discuss how we leverage
the strengths of bdrmap and MAP-IT, §3 gives an overview of the
synthesized approach, and §4, §5, and §6 detail the algorithm.
(2) We demonstrated the superior accuracy and coverage of
bdrmapIT over either previous approach. We validated bdrmapIT
against ground truth from a tier 1, a large access, and two R&E
networks, achieving 91.8%-98.8% accuracy, despite not using tracer-
oute VPs in any of the validating networks. We also demonstrated
that bdrmapIT’s accuracy is independent of the number of vantage
points: the performance is equivalent when we decrease the number
of VPs from 80 to 20 (§7).
(3) We release our implementation and source code to promote
reproducibility, and so that others can use our tool for their own
analyses. We have incorporated bdrmapIT into CAIDA’s ITDK [6]
generation process.
2 RELATED WORK
The canonical approach to convert IP-level traceroute output to an
AS-level path uses the origin AS announcing the longest matching
prefix into the global BGP routing system. The risk of this approach
is that some routers respond to traceroute probes with a source IP
address belonging to a different network. In 2010, Zhang reported
that between 16% and 47% of AS adjacencies inferred using the
canonical longest prefix match approach were likely false [40]. In
2003, Mao’s “AS traceroute” [30] used correlated BGP and tracer-
oute views from the same VP, DNS names, and WHOIS data to
perform IP-AS mappings, later improving them further using dy-
namic programming, although only for a /24 address granular-
ity [29]. Generally, interdomain links use /30 or /31 prefixes to use
address space efficiently, and co-located BGP and traceroute views
are rare. In 2009, Chen et al. proposed a set of heuristics to distill
some missing AS-level links from traceroute data [16]. In 2010, Huf-
faker et al. developed and validated four different router ownership
heuristics using IPv4 alias resolution, inferred AS relationships,
and degree [18] separately from each other; their best-performing
heuristic was correct 71% of the time.
In 2016, two distinct approaches towards inferring router own-
ership were proposed independently: bdrmap [27], and MAP-IT [31].
bdrmap focuses on identifying all interdomain links observable by a
single VP in a hosting AS, and consists of data collection and router
ownership inference components. The data collection component
conducts traceroutes from the VP towards every prefix routed in the
Internet. The data collection phase is reactive, using alias resolution
to infer which interfaces returned by traceroute belong to the same
routers, and additional traceroutes to different addresses within
a single prefix if a prior traceroute might have found an off-path
interface within the target AS.
The inference component of bdrmap uses the collected data to
infer router ownership within the hosting AS and adjacent ASes.
Starting at the VP, bdrmap performs a breadth-first search based
on hop-count from the VP of the traceroute responses to identify
Step
§
Phase 1: Construct the Graph
4
Label AS-level Metadata
4.1
Assign Link Confidence Labels
4.2
Create Origin AS Sets
4.3
Identify Destination ASes
4.4
5
Phase 2: Annotate Last Hops
5.1 When Dest. AS set is empty
5.2 When Dest. AS set is not empty
6
6.1
6.1.1 Apply Link Vote Heuristics
6.1.2 Correct Reallocated Prefixes
6.1.3 Check for Exceptions
6.1.4 Apply IR Vote Heuristics
6.1.5 Check for a Hidden AS
6.2
6.3
Phase 3: Graph Refinement
Annotate IRs
Annotate Interfaces
Refine the Graph
A. Marder et al.
bdrmap
MAP-IT
X
X
X
X
X
X
X
X
X
X
X
X
X
Table 1: bdrmapIT heuristics adapted from bdrmap and MAP-IT.
routers internal to the VP network, defined as all routers that appear
prior to an interface address announced by the VP network in the
traceroutes. Subsequent routers are either operated by the VP net-
work, or by a directly connected neighbor. bdrmap uses heuristics to
infer ownership of subsequent routers until all routers immediately
subsequent to the network boundary have been mapped to other
ASes.
bdrmap heuristics correctly infer router ownership when an edge
network operator drops traceroute probes at their border router,
when routers reply using unrouted IP addresses, when routers
respond with an off-path address announced by a third party in
BGP, and uses AS relationships to reason about ownership when
traceroute returns IP paths that are not congruent with BGP policy.
MAP-IT consists only of an inference component, to identify in-
terdomain links (between ISP networks) in the Internet core. In
contrast to bdrmap, MAP-IT aggregates all available traceroute data
collected by many VPs in many ASes, but does not use any alias
resolution to infer routers. Instead, MAP-IT employs localized rea-
soning on an interface-level graph, drawing inferences from each
interface and its neighbors in isolation. MAP-IT iterates over the set
of interfaces several times, in each iteration identifying the inter-
faces used for interdomain links. The primary inference method is
to find an interface with an address originated by one AS, where
a plurality of either its subsequent or preceding interfaces map
to another AS, indicating a link between the two networks. After
each iteration, MAP-IT refines the graph, enabling more accurate
interdomain inferences in subsequent iterations until an iteration
yields no changes.
Our new technique, implemented in the bdrmapIT tool, leverages
the strengths of bdrmap and MAP-IT for use in a general-purpose
solution. Specifically: (1) bdrmap infers AS owners only for routers
at the first AS boundary and requires a VP in each network of
interest, and (2) MAP-IT lacks heuristics for edge networks and
low-visibility links, such as routers without subsequent hops in
57
Pushing the Boundaries with bdrmapIT
IMC ’18, October 31-November 2, 2018, Boston, MA, USA
– Graph –
IR: Inferred Router
interface: interface used on the IR
subsequent interface: interface that follows an IR interface in a
traceroute
link: inferred connection from IR to subsequent interface
– Origin AS –
interface origin AS: origin AS of interface’s IP address
IR origin AS set: union of IR interfaces’ origin AS sets
L(I Ri, j) (link origin AS set): set of origin ASes observed immedi-
DI R (destination set): set of origin ASes of destination IPs of