**作者：LoRexxar'@知道创宇404实验室  
时间：2018年12月7日**  
**英文版本：**
2018年12月3日，@L3mOn公开了一个Discuz x3.4版本的前台SSRF，通过利用一个二次跳转加上两个解析问题，可以巧妙地完成SSRF攻击链。
在和小伙伴@Dawu复现过程中发现漏洞本身依赖多个特性，导致可利用环境各种缩减和部分条件的强依赖关系大大减小了该漏洞的危害。后面我们就来详细分析下这个漏洞。
# 漏洞产生条件
  * 版本小于 41eb5bb0a3a716f84b0ce4e4feb41e6f25a980a3 [补丁链接](https://gitee.com/ComsenzDiscuz/DiscuzX/commit/41eb5bb0a3a716f84b0ce4e4feb41e6f25a980a3)
  * PHP版本大于PHP 5.3
  * php-curl 
    http://127.0.0.1/{可控}
但这实际上来说没有什么用，所以我们还需要一个任意url跳转才行，否则只能攻击本地意义就很小了。
# 任意url跳转
为了能够和前面的要求产生联动，我们需要一个get型、不需要登陆的任意url跳转。
dz在logout的时候会从referer参数（非header头参数）中获取值，然后进入301跳转，而这里唯一的要求是对host有一定的验证，让我们来看看代码。
`/source/function/function_core.php:1498`
![
](https://images.seebug.org/content/images/2018/12/c7ea9b3f-6482-4ec4-b9f8-c8b611203b6a.png-w331s)
上面的截图解释了这段代码的主要问题，核心代码为红框部分。
为了让referer不改变，我们必须让host只有一个字符，但很显然，如果host只能有一个字符，我们没办法控制任意url跳转。
所以我们需要想办法让`parse_url`和`curl`对同一个url的目标解析不一致，才有可能达到我们的目标。
    http://localhost#@www.baidu.com/
上面这个链接`parse_url`解析出来为`localhost`，而curl解释为`www.baidu.com`
我们抓个包来看看
![
](https://images.seebug.org/content/images/2018/12/4d8c35de-112d-4a9b-9782-6f336339ed70.png-w331s)
成功绕过了各种限制
# 利用
到现在我们手握ssrf+任意url跳转，我们只需要攻击链连接起来就可以了。攻击流程如下
    cutimg ssrf link
    =====>
    服务端访问logout任意url跳转
    ====301====>
    跳转到evil服务器
    =====302=====>
    任意目标，如gophar、http等
当然最开始访问cutimg页面时，需要先获取formhash，而且referer也要相应修改，否则会直接拦截。
exp演示
![
](https://images.seebug.org/content/images/2018/12/756f8a53-db10-4bc3-a94f-508d1b90d636.png-w331s)
* * *