### 强制客户端迁移至最新版本

**API9:2019 资产管理不当**

- **可利用性**：3
- **普遍性**：3
- **可检测性**：2
- **技术难度**：2

旧的API版本通常缺乏必要的安全补丁，这为攻击者提供了一种绕过先进安全机制、轻松入侵系统的方法。保护最新的API版本通常是优先考虑的事项，但资产文档更新不及时会导致查找和修复漏洞变得更加困难。缺乏有效的资产管理和下线策略会使得未修补的系统继续运行，最终可能导致敏感数据泄露。

随着微服务等先进技术（如云计算、Kubernetes）的发展，应用程序变得更容易部署和独立运作，这也导致了不必要的公开API主机频繁出现。攻击者可以利用这些未打补丁的API版本访问敏感数据，甚至通过连接到同一数据库来控制服务器。

#### API详情
- **业务影响**：敏感数据可能被泄露。
- **威胁来源**：外部攻击者。
- **攻击向量**：利用未修补的API版本。
- **安全弱点**：资产管理不当，日志记录不足。

#### 攻击案例场景
1. **场景#1**：管理API的访问密钥泄漏到公共存储库中。尽管存储库所有者在48小时后采取了行动，但由于日志记录不足，公司无法评估恶意访问者具体访问了哪些数据。
2. **场景#2**：一个视频共享平台遭受大规模凭据填充攻击。尽管登录尝试失败，但在攻击期间没有触发警报。事后分析API日志才发现攻击，导致公司不得不要求用户重置密码并向监管部门报告。

### 日志和监控不足

**API10:2019 日志和监视不足**

- **可利用性**：2
- **普遍性**：3
- **可检测性**：1
- **技术难度**：2

攻击者可以利用缺乏日志记录和监控的机会，在不被注意的情况下滥用系统。如果没有足够的日志和监控措施，跟踪可疑活动并及时响应几乎是不可能的。因此，攻击者有充足的时间来完全破坏系统。

#### 风险因素
- **无日志记录**：无法追踪失败的身份验证尝试、拒绝访问和输入验证错误。
- **日志完整性不足**：无法防止日志注入攻击。
- **缺乏持续监控**：API基础设施没有得到持续监控。
- **日志管理缺失**：日志未被视为敏感数据处理，其完整性和安全性未得到保障。

#### 如何防止
- 记录所有失败的身份验证尝试、拒绝访问和输入验证错误。
- 使用适合日志管理解决方案的格式编写日志，并包含足够详细的信息以识别恶意行为。
- 将日志作为敏感数据处理，并确保其在空闲和传输时的完整性。
- 配置监控系统以持续监视基础设施、网络和API功能。
- 使用SIEM系统整合和管理来自API和主机的所有组件的日志。
- 配置自定义仪表板和警报，以便更早地检测和响应可疑活动。

### 开发人员下一步做什么？

- **教育**：阅读OWASP教育资源，实践“Completely Ridiculous API (crAPI) 项目”，参加OWASP AppSec大会培训环节或加入当地OWASP分部。
- **安全需求**：从项目开始阶段就定义安全需求，使用OWASP ASVS作为指南。
- **安全架构**：在项目的所有阶段关注安全设计，参考OWASP Prevention Cheat Sheet。
- **标准安全控件**：采用标准的安全控件减少引入安全弱点的风险。
- **软件安全开发生命周期**：使用OWASP SAMM改进流程，在不同API开发阶段应用其他OWASP项目。

### DevSecOps下一步做什么？

- **了解威胁模型**：参考OWASP ASVS和测试指南，提高开发团队的安全意识。
- **了解SDLC**：加入开发团队，更好地理解软件开发生命周期。
- **测试策略**：选择最佳技术验证安全需求，参考OWASP安全知识框架。
- **实现覆盖范围和准确性**：与开发和运维团队紧密合作，优化时间和效率。
- **清晰沟通调查结果**：在开发团队使用的工具中及时交付结果，指导他们解决漏洞。

### 方法和数据

由于AppSec行业对最近的应用程序架构（特别是API）的关注不足，基于公开征集的数据编制十大最关键API安全风险列表是一项艰巨的任务。尽管没有公开征集数据，但十大API安全风险是基于可用的公开数据、安全专家的贡献以及与安全社区的公开讨论。

#### 数据收集和分析
1. **第一阶段**：由安全专家收集、审查和分类有关API安全事件的公开数据，数据来源于bug赏金平台和漏洞数据库。
2. **第二阶段**：具有渗透测试经验的安全人员编制自己的Top 10列表，并采用OWASP风险评级方法进行风险分析。
3. **草案审阅**：初稿提交给另一组在API安全领域有经验的安全从业人员进行参考和审阅。
4. **发布**：《OWASP API 安全 Top 10 2019》首次在OWASP Global AppSec Tel Aviv活动上发布，并在GitHub上供公众讨论和建议。

### 致谢

感谢以下人员的贡献：
- 007divyachawla
- Abid Khan
- Adam Fisher
- anotherik
- bkimminich
- caseysoftware
- Chris Westphal
- dsopas
- DSotnikov
- emilva
- ErezYalon
- flascelles
- Guillaume Benats
- IgorSasovets
- Inonshk
- JonnySchnittger
- jmanico
- jmdx
- Keith Casey
- kozmic
- LauraRosePorter
- Matthieu Estrade
- nathanawmk
- PauloASilva
- pentagramz
- philippederyck
- pleothaud
- r00ter
- Raj kumar
- Sagar Popat
- Stephen Gates
- thomaskonrad
- xycloops123

感谢以下参与本中文版本《OWASP API 安全 Top 10 2019》的OWASP中国成员：
- 组长：肖文棣
- 翻译：陈毓灵、黄鹏华、黄圣超、任博伦、张晓鲁（排名不分先后，按姓氏拼音排列）
- 审查：王颉

如有任何意见或建议，请联系我们。邮箱：PI:EMAIL

扫一扫，关注OWASP中国