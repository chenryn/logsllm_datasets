:::
`rpcbind`{.literal}
服务是用于远程过程调用(RPC)服务的动态端口分配守护进程，如网络信息服务(NIS)和网络文件共享(NFS)。由于其身份验证机制较弱，并可为其控制的服务分配大量端口，因此保护
`rpcbind`{.literal} 服务非常重要。
您可以通过对服务器添加防火墙规则来保护 `rpcbind`{.literal}
服务。您可以限制对所有网络的访问，并使用防火墙规则定义特定的异常。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
::: itemizedlist
-   `NFSv2`{.literal} 和 `NFSv3`{.literal} 服务器需要
    `rpcbind`{.literal} 服务，在使用 `rpcbind`{.literal}
    服务时，应确保其安全。
-   `NFSv4`{.literal} 不需要 `rpcbind`{.literal} 服务来侦听网络。
:::
:::
::: itemizedlist
**流程**
-   以下是 `firewalld`{.literal} 命令的示例：
    ::: itemizedlist
    -   限制 TCP 连接，并只接受来自 `192.168.0.0/24`{.literal} 主机
        `111`{.literal} 端口的包：
        ``` screen
        # firewall-cmd --add-rich-rule='rule family="ipv4" port port="111" protocol="tcp" source address="192.168.0.0/24" invert="True" drop'
        ```
    -   限制 TCP 连接，并只接受来自本地主机 `111`{.literal} 端口的包：
        ``` screen
        # firewall-cmd --add-rich-rule='rule family="ipv4" port port="111" protocol="tcp" source address="127.0.0.1" accept'
        ```
    -   限制 UDP 连接，并只接受来自 `192.168.0.0/24`{.literal} 主机
        `111`{.literal} 端口的包：
        ``` screen
        # firewall-cmd --add-rich-rule='rule family="ipv4" port port="111" protocol="udp" source address="192.168.0.0/24" invert="True" drop'
        ```
        ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
        ### 注意 {.title}
        ::: itemizedlist
        -   要使防火墙设置永久化，请在添加防火墙规则时使用
            `--permanent`{.literal} 选项。
        -   使用 `# firewall-cmd --reload`{.literal}
            命令重新加载防火墙以接受新规则。
        :::
        :::
    :::
:::
::: itemizedlist
**验证步骤**
-   验证防火墙规则：
    ``` screen
    # firewall-cmd --list-rich-rule
    rule family="ipv4" port port="111" protocol="tcp" source address="192.168.0.0/24" invert="True" drop
    rule family="ipv4" port port="111" protocol="tcp" source address="127.0.0.1" accept
    rule family="ipv4" port port="111" protocol="udp" source address="192.168.0.0/24" invert="True" drop
    ```
:::
::: itemizedlist
**其它资源**
-   要了解有关 `只使用 NFSv4`{.literal} 的服务器的信息，请参阅
    [配置只使用 NFSv4
    的服务器](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/deploying_different_types_of_servers/exporting-nfs-shares_deploying-different-types-of-servers#configuring-an-nfsv4-only-server_exporting-nfs-shares){.link}
    部分。
-   [使用和配置
    firewalld](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/securing_networks/using-and-configuring-firewalld_securing-networks){.link}
:::
:::
::: section
::: titlepage
# []{#securing-services_security-hardening.html#securing-rpc-mountd_securing-services}保护 rpc.mountd {.title}
:::
`rpc.mountd`{.literal} 守护进程实现 NFS 挂载协议的服务器端。NFS
挂载协议用于 NFS 版本 2(RFC 1904)和 NFS 版本 3(RFC 1813)。
您可以通过对服务器添加防火墙规则来保护 `rpc.mountd`{.literal}
服务。您可以限制对所有网络的访问，并使用防火墙规则定义特定的异常。
::: itemizedlist
**流程**
-   以下是 firewalld 命令的示例：
    ::: itemizedlist
    -   接受来自 `192.168.0.0/24`{.literal} 主机的`mountd`{.literal}
        连接：
        ``` screen
        # firewall-cmd --add-rich-rule 'rule family="ipv4" service name="mountd" source address="192.168.0.0/24" invert="True" drop'
        ```
    -   接受来自本地主机的 `mountd`{.literal} 连接：
        ``` screen
        # firewall-cmd --add-rich-rule 'rule family="ipv4" source address="127.0.0.1" service name="mountd" accept'
        ```
        ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
        ### 注意 {.title}
        ::: itemizedlist
        -   要使防火墙设置永久化，请在添加防火墙规则时使用
            `--permanent`{.literal} 选项。
        -   使用 `# firewall-cmd --reload`{.literal}
            命令重新加载防火墙以接受新规则。
        :::
        :::
    :::
:::
::: itemizedlist
**验证步骤**
-   验证防火墙规则：
    ``` screen
    # firewall-cmd --list-rich-rule
    rule family="ipv4" service name="mountd" source address="192.168.0.0/24" invert="True" drop
    rule family="ipv4" source address="127.0.0.1" service name="mountd" accept
    ```
:::
::: itemizedlist
**其它资源**
-   [使用和配置
    firewalld](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/securing_networks/using-and-configuring-firewalld_securing-networks){.link}
:::
:::
::: section
::: titlepage
# []{#securing-services_security-hardening.html#securing-nfs_securing-services}保护 NFS {.title}
:::
以前，Linux 系统管理员无法保护网络文件系统(NFS)，因为 NFSv2 和 NFSv3
不安全地传递数据。通过 NFSv4，您可以使用 Kerberos
验证并加密所有文件系统操作。使用 NFSv4 时，如果客户端位于 NAT
或防火墙后面，则可能会关闭委派。相反，NFSv2 和 NFSv3
不使用带有文件锁定和挂载文件操作的 Kerberos 。
可在所有版本中使用 TCP 来发送 NFS 流量。NFS 支持 Kerberos
用户和组身份验证，来作为 `RPCSEC_GSS`{.literal} 内核模块的一部分。
NFS
允许远程主机通过网络挂载文件系统，并与这些文件系统进行交互，就像它们被挂载到本地一样。这使系统管理员能够将资源整合到网络上的集中式服务器上。您可以在
`/etc/nfsmount.conf`{.literal} 文件中自定义 NFS
挂载选项，该文件还用于设置默认选项。
系统管理员应定期检查 NFS 服务器和 NFS
客户端是否存在任何可能的威胁或攻击，以确保 NFS 的安全。
::: section
::: titlepage
## []{#securing-services_security-hardening.html#_securing_nfs_configuration}保护 NFS 配置 {.title}
:::
NFS 服务器确定哪个文件系统要导出到哪个主机。所有这些详细信息都添加到
`/etc/exports`{.literal}
文件中。在配置文件中添加目录和主机时，您应非常谨慎。编辑此文件时请注意，不要添加额外的空格，因为它可能会导致重大更改。
以下是几个编写 `/etc/exports`{.literal} 文件时的示例：
::: itemizedlist
-   在以下行中，`/tmp/nfs/`{.literal} 目录与 `bob.example.com`{.literal}
    主机共享，并具有读写权限。
:::
``` screen
/tmp/nfs/     bob.example.com(rw)
```
::: itemizedlist
-   以下行与上一行相同，但对 `bob.example.com`{.literal}
    主机共享具有只读权限的相同的目录，由于主机名后面有一个空格字符，因此可以对
    [*世界*]{.emphasis} 共享具有读写权限的目录。
:::
``` screen
/tmp/nfs/     bob.example.com (rw)
```
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
要验证系统中共享的内容，请执行 `showmount -e `{.literal}
命令。
:::
:::
::: section
::: titlepage
## []{#securing-services_security-hardening.html#_export_options_for_securing_an_nfs_server}保护 NFS 服务器的导出选项 {.title}
:::
NFS 服务器的主配置在 `/etc/exports`{.literal}
文件中。以下是允许您安全导出文件系统的 NFS 共享选项列表：
::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
### 警告 {.title}
要导出整个文件系统，因为导出文件系统的子目录不安全。攻击者可能会侵入到部分导出的文件系统中未导出的部分。
:::
::: itemizedlist
-   `ro`{.literal} - 使用 `ro`{.literal} 选项将 NFS 卷导出为只读。
-   `rw`{.literal} - 使用 `rw`{.literal} 选项允许对 NFS
    卷进行读写请求。您应该谨慎使用这个选项，因为允许写权限会增加攻击的风险。
-   `root_squash`{.literal} - 使用 `root_squash`{.literal} 选项将来自
    `uid`{.literal}/`gid`{.literal} 0 的请求映射到匿名
    `uid`{.literal}/`gid`{.literal}。这不适用于可能同样敏感的任何其他
    `uid`{.literal} 或 `gids`{.literal}，如用户 bin 或组 staff。
-   `no_root_squash`{.literal} - 使用 `no_root_squash`{.literal}
    选项关闭根压缩，不要使用这个选项，而是检查现有的安装。默认情况下，NFS
    共享将 root 用户改为 `nobody`{.literal}
    用户，这是一个非特权用户帐户。这会将所有 `root`{.literal}
    创建的文件的所有者改为 `nobody`{.literal}，这样可以防止上传设置了
    `setuid`{.literal} 位的程序。如果使用 `no_root_squash`{.literal}
    选项，则远程 root
    用户可以更改共享文件系统上的任何文件，并将感染特洛伊木马的应用程序留给其他用户。
-   `secure`{.literal} - 使用 `secure`{.literal}
    选项将导出限制到保留的端口。默认情况下，服务器仅允许来自保留端口的客户端通信。但是在网络上，任何人很容易成为客户端上的
    root
    用户，因此，对于服务器来说，假设来自保留端口的通信都具有特权几乎是不安全的。因此，对保留端口的限制具有有限的值；最好根据
    Kerberos、防火墙和对特定客户端的导出限制来决定。
:::
另外，在导出 NFS 服务器时请考虑以下最佳实践：
::: itemizedlist
-   如果必须使用 `rw`{.literal}
    选项来挂载目录，请确保它们不可全局写入，从而降低可能的风险。
-   导出主目录存在风险，因为某些应用以纯文本或弱加密格式存储密码。检查和改进应用程序代码有助于降低此类风险。有些用户未对
    SSH 密钥设置密码，这再次给主目录带来风险。强制使用密码或使用
    Kerberos 可降低该风险。
-   只将导出限制给需要访问权限的客户端。在 NFS 服务器上使用
    `showmount -e`{.literal}
    命令来检查服务器正在导出什么。不要导出不需要的任何内容。
-   最好不允许用户登录到服务器。查看 NFS
    服务器上的以上设置时，请查看谁和什么可以访问服务器。
:::
:::
::: section
::: titlepage
## []{#securing-services_security-hardening.html#_mount_options_for_securing_an_nfs_client}保护 NFS 客户端的挂载选项 {.title}
:::
您可以将以下选项传给 `mount`{.literal} 命令，以提高基于 NFS
的客户端的整体安全：
::: itemizedlist
-   `nosuid`{.literal} - 使用 `nosuid`{.literal} 选项来禁用
    `set-user-identifier`{.literal} 或 `set-group-identifier`{.literal}
    位。这可防止远程用户通过运行 setuid 程序获得更高的特权。使用
    `nosuid`{.literal} 选项来禁止使用 `setuid`{.literal} 选项。
-   `noexec`{.literal} - 使用 `noexec`{.literal}
    选项来禁用客户端上的所有可执行文件。使用此选项来防止用户意外执行放在被共享的文件系统中的文件。
-   `nodev`{.literal} - 使用 `nodev`{.literal}
    选项来防止客户端将设备文件作为硬件设备来处理。
-   `resvport`{.literal} - 使用 `resvport`{.literal}
    选项来限制对\"保留端口\"的通信。保留或已知的端口保留给特权用户和进程，如
    root 用户。设置此选项可让客户端使用特权源端口与服务器进行通信。
-   `sec`{.literal} - 在所有 NFS 版本中使用 `sec`{.literal}
    选项，因为它现在支持使用 Kerberos 身份验证进行挂载。NFSv4
    支持对完整性使用 `krb5i`{.literal} ，对隐私性使用 `krb5p`{.literal}
    进行 Kerberos 挂载。当使用 `sec=`{.literal}
    挂载时会使用它们，其中有效的 flavor 为
    `none`{.literal}、`sys`{.literal}、`krb5`{.literal}、`krb5i`{.literal}
    和 `krb5p`{.literal}。这些选项需要在 NFS 服务器上进行配置。
:::
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
`krb5-libs`{.literal} 软件包提供的 MIT Kerberos
库不支持新部署中的数据加密标准(DES)算法。由于安全性和某些兼容性原因，在
Kerberos 库中，DES
默认被弃用并禁用。只有在您的环境不支持任何更新和更安全得算法时，才出于兼容性的原因使用
DES。
:::
:::
::: section
::: titlepage
## []{#securing-services_security-hardening.html#_firewall_configuration_for_an_nfs_server}NFS 服务器的防火墙配置 {.title}