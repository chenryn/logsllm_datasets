title:Impact of prefix-match changes on IP reachability
author:Yaping Zhu and
Jennifer Rexford and
Subhabrata Sen and
Aman Shaikh
Impact of Preﬁx-Match Changes on IP Reachability
Yaping Zhu and Jennifer Rexford
Princeton University
PI:EMAIL,
PI:EMAIL
Subhabrata Sen and Aman Shaikh
AT&T Labs–Research
PI:EMAIL,
PI:EMAIL
ABSTRACT
Although most studies of Internet routing treat each IP ad-
dress block (or preﬁx) independently, the relationship be-
tween preﬁxes is important because routers ultimately for-
ward packets based on the “longest-matching preﬁx.” In fact,
the most-speciﬁc preﬁx for a given destination address may
change over time, as BGP routes are announced and with-
drawn. Even if the most-speciﬁc route is withdrawn, routers
may still be able to deliver packets to the destination using
a less-speciﬁc route.
In this paper, we analyze BGP up-
date messages and Netﬂow traﬃc traces from a large ISP to
characterize both the changes to the longest-matching preﬁx
over time and the resulting eﬀects on end-to-end reachabil-
ity of the destination hosts. To drive our analysis, we de-
sign and implement an eﬃcient online algorithm for track-
ing changes in the longest-matching preﬁx for each IP ad-
dress. We analyze the BGP message traces to identify the
reasons for preﬁx-match changes, including failures, route
ﬂapping, sub-preﬁx hijacking, and load-balancing policies.
Our preliminary analysis of the Netﬂow data suggests that
the relationship between BGP updates and IP reachability
is sometimes counterintuitive.
Categories and Subject Descriptors
C.2.2 [Network Protocols]: Routing protocols;
C.4 [Performance of Systems]: Measurement techniques
General Terms
Measurement
Keywords
BGP, Longest-matching Preﬁx, IP reachability
1.
INTRODUCTION
Internet routing protocols, such as the Border Gateway
Protocol (BGP), compute routes for each address block (or
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
IMC’09, November 4–6, 2009, Chicago, Illinois, USA.
Copyright 2009 ACM 978-1-60558-770-7/09/11 ...$10.00.
preﬁx) independently. However, a destination host may fall
within the range of addresses covered by multiple preﬁxes
with diﬀerent mask lengths. Nesting of preﬁxes is quite com-
mon for a variety of reasons. For example, regional Internet
registries allocate large address blocks to Internet Service
Providers (ISPs), who in turn allocate smaller blocks to their
customers. Customers that connect to the Internet at multi-
ple locations may further sub-divide these address blocks to
exert ﬁne-grained control over load balancing and backup
routes.
ISPs may also announce multiple blocks to pro-
tect themselves from route hijacking—for example, AT&T
announces 12.0.0.0/9 and 12.128.0.0/9, in addition to the
12.0.0.0/8 supernet, to prevent other ASes from accidently
hijacking traﬃc intended for destinations in 12.0.0.0/8. Ul-
timately, routers forward packets based on the longest pre-
ﬁx (i.e., largest mask length) that matches the destination
IP address. However, this “longest-matching preﬁx” may
change over time as BGP routes are announced and with-
drawn, leading to a sometimes complex relationship between
BGP routing changes and IP packet forwarding.
Understanding how routing changes aﬀect the longest-
matching preﬁx is important for researchers and practition-
ers alike. Preﬁx-match changes can aﬀect the accuracy of
measurement results. For example, measurement studies
often aggregate traﬃc statistics or performance results to
the preﬁx level, based on a static snapshot of a BGP rout-
ing table. However, this kind of analysis is not robust to
preﬁx-match changes that aﬀect the ﬂow of traﬃc to the
destinations. Analyzing BGP update messages without re-
gard to preﬁx nesting can also lead to misleading conclu-
sions. For instance, a withdrawal does not necessarily imply
that the destinations have become unreachable, as they may
be reachable via a less-speciﬁc route. Preﬁx-match changes
are especially important in network troubleshooting, where
a mistake in aggregating or interpreting measurement data
may prevent network administrators from correctly diagnos-
ing the cause of traﬃc shifts, performance degradation, or
lost reachability.
In this paper, we analyze the eﬀects of BGP routing changes
on the longest-matching preﬁx. The problem is challenging
because we cannot rely on preﬁxes as the building block
for our analysis. Instead, we design and implement an ef-
ﬁcient online algorithm for tracking preﬁx-match changes
for each IP address. To make our algorithm scalable, we
group addresses into ranges that are dynamically split as
smaller preﬁxes are announced. We apply our algorithm to
BGP update traces from a large ISP and characterize the
frequency and causes of preﬁx-match changes. We ﬁnd that
235more than 30% of BGP updates do not simply switch an
existing preﬁx from one route to another: In fact, 14.8%
of the BGP updates cause addresses to gain or lose reach-
ability, and 13.0% of the updates cause addresses to switch
to a diﬀerent longest-matching preﬁx. These preﬁx-match
changes have a variety of causes, including route ﬂapping,
sub-preﬁx hijacking, and failover to backup routes. To un-
derstand the eﬀects of preﬁx-match changes on end-to-end
reachability, we present a preliminary analysis of Netﬂow
traces that shows that traﬃc sometimes continues to ﬂow
using a less-speciﬁc preﬁx.
The rest of the paper is organized as follows. In Section 2,
we brieﬂy characterize preﬁx nesting based on a static snap-
shot of a BGP routing table. Then, Section 3 introduces
our online algorithm for tracking changes in the longest-
matching preﬁx.
In Section 4, we apply the algorithm to
one month of BGP updates to analyze the frequency and
causes of preﬁx-match changes, and present our preliminary
analysis of the Netﬂow traces. We present related work in
Section 5 and conclude the paper in Section 6.
2. STATIC ANALYSIS OF PREFIX NESTING
To understand the nesting of preﬁxes, we analyze a BGP
routing table collected from a router in a large ISP on Febru-
ary 1, 2009. We ignore small preﬁxes (with mask longer
than /24) corresponding to the ISP’s own routers and links,
as they are not externally visible. We characterize preﬁx
nesting from two perspectives: (i) how many preﬁxes cover
each IP address? and (ii) what fraction of addresses covered
by a preﬁx actually use that preﬁx for packet forwarding?
The light bars in Figure 1 plot the distribution of the
number of preﬁxes covering each IP address, with a loga-
rithmic scale on the y-axis. While 75.8% of IP addresses
are covered by a single preﬁx, 19.7% are covered by two pre-
ﬁxes, and 4.0% by three preﬁxes; some addresses are covered
by as many as seven preﬁxes. In addition, destination ad-
dresses that match multiple preﬁxes are responsible for a
higher fraction of the traﬃc, relative to other destinations,
as seen by the dark bars in Figure 1. These bars plots the
distribution weighted by the volume of traﬃc collected from
the same router. While 61.6% of the traﬃc is destined to
addresses matching a single preﬁx, 31.3% of the traﬃc cor-
responds to two preﬁxes, and 6.0% to three preﬁxes. We see
similar trends for both histograms across a variety of routers
and time periods for data collected in the same ISP.
We also explore what fraction of the IP addresses covered
by a preﬁx use that preﬁx for packet forwarding. We use
the same routing table snapshot for this analysis, which was
taken on February 01, 2009. Table 1 shows the results for
ﬁve sets of preﬁxes, grouped by mask length. Interestingly,
17% of the /8 preﬁxes are not the longest-matching preﬁx
for any of the addresses they cover; the 12.0.0.0/8 preﬁx
mentioned in Section 1 is one example.
In fact, 39% of
the /8 preﬁxes handle forwarding for less than half of their
addresses, as seen by summing the ﬁrst three rows of the “/8”
column in Table 1. For smaller preﬁxes (with larger mask
lengths), the preﬁxes are responsible for a larger fraction
of the IP addresses they contain. Because we ﬁltered the
preﬁxes with mask length larger than 24 for this analysis,
the /24 preﬁxes are the longest-matching preﬁx for all of
their IP addresses. We saw similar results when analyzing a
routing-table snapshot taken on March 01, 2009.
The nesting of preﬁxes suggests that BGP update mes-
l
)
e
a
c
s
g
o
l
(
s
P
I
f
o
n
o
i
t
c
a
r
F
 1
 0.1
 0.01
 0.001
 0.0001
 1e-05
Fraction of IPs
Weighted by Traffic
1
2
3
4
5
6
7
8
9
10
Number of Prefixes Covering the IP Address
Figure 1: Distribution of number of matching pre-
ﬁxes (from a BGP routing table at 00:00:00 GMT
Feb 01, 2009)
Fraction of
IP Addresses
0
(0, 0.25]
(0.25, 0.5]
(0.5, 0.75]
(0.75, 0.9]
(0.9, 1]
Preﬁx Mask Lengths
/8
0.17
0.13
0.09
0.09
0.13
0.39
/12
0.16
0.14
0.06
0.06
0.05
0.53
/16
0.09
0.02
0.03
0.03
0.03
0.81
/20
0.04
0.02
0.03
0.04
0.07
0.80
/24
0.00
0.00
0.00
0.00
0.00
1.00
Table 1: Preﬁx coverage for diﬀerent mask lengths
(from a BGP routing table at 00:00:00 GMT Feb 01,
2009)
sages may change which preﬁx is used to forward traﬃc to
particular destination addresses. In the following sections,
we track the evolution of the longest-matching preﬁx to un-
derstand when and how BGP routing changes aﬀect the for-
warding of IP packets.
3. TRACKING PREFIX MATCH CHANGES
In this section, we present an online algorithm for tracking
changes in the longest-matching preﬁx, and the associated
BGP route, for each destination IP address. We ﬁrst intro-
duce the notion of an address range to group IP addresses
that have the same set of matching preﬁxes. Then, we de-
scribe our algorithms for updating the address ranges to
track changes to the longest-matching preﬁx.
3.1 Data Structure for Address Ranges
Because of the nesting of preﬁxes, an IP address could
match several preﬁxes with diﬀerent mask lengths. In order
to track preﬁx-match changes over time, we need to store
information about changes to all preﬁxes covering the IP ad-
dress. We refer to the collection of all matching preﬁxes for a
given IP address as its preﬁx set; packet forwarding is driven
by the longest-matching preﬁx in the set. For example, sup-
pose a BGP routing table contains preﬁxes 12.0.0.0/8 and
12.0.0.0/16. Then, IP address 12.0.0.0 has the preﬁx set
{/8, /16}. IP address 12.0.0.1 also matches the same pre-
236[12.0.1.0−12.0.255.255]
[12.0.0.0−12.0.0.255]                 [12.1.0.0−12.255.255.255]
/8 /16 /24
/8 /16
/8
BGP route
Routing Table
prefix
12.0.0.0/8
12.0.0.0/16
12.0.0.0/24
Figure 2: Storing address ranges and preﬁx sets for
preﬁxes 12/8, 12/16, and 12/24
ﬁxes. However, the preﬁx set for 12.1.0.1 is {/8}. Rather
than tracking the preﬁx set for each individual IP address,
we group contiguous addresses that have the same preﬁx
set into an address range. For example, preﬁxes 12.0.0.0/8
and 12.0.0.0/16 divide the IP address space into two address
ranges—[12.0.0.0, 12.0.255.255] with preﬁx set {/8, /16} and
[12.1.0.0, 12.255.255.255] with preﬁx set {/8}. Note that
address ranges diﬀer from preﬁxes in that the boundaries
of an address range are not necessarily powers of two. For
instance, no single preﬁx could represent all IP addresses in
the range [12.1.0.0, 12.255.255.255].
As we process BGP update messages, address ranges may
be created, subdivided or updated. For ease of searching for
the aﬀected address range(s), we store information about ad-
dress ranges in a binary tree, as shown in Figure 2. A binary
tree eﬃciently supports all the operations we need (includ-
ing inserting a new address range, lookup an address range)
in an average time of O(log n), where n is the number of ad-