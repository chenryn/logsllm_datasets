 150
 200
/8 Prefix
F
D
C
 1
 0.8
 0.6
 0.4
 0.2
 0
 1
 10
 100
 1000
 10000
 100000
Number of landing sites
Figure : CDF of the number of landing sites pointing to
a particular malware distribution site.
For the remaining discussion, recall that a malware
distribution network constitutes all the landing sites that
point to a single distribution site. Using the methodol-
ogy described in Section , we identiﬁed the distribution
networks associated with each malware distribution site.
We ﬁrst evaluate their size in terms of the total number of
landing sites that point to them. Figure  shows the dis-
tribution of sizes for the different distribution networks.
The graph reveals two main types of malware distri-
bution networks: (1) networks that use only one landing
site, and () networks that have multiple landing sites.
As the graph shows, distribution networks can grow to
have well over 1,000 landing sites pointing to them.
That said, roughly 
% of the detected malware distri-
bution sites used only a single landing site at a time. We
manually inspected some of these distribution sites and
found that the vast majority were either subdomains on
free hosting services, or short-lived domains that were
created in large numbers.
It is likely, though not con-
ﬁrmed, that each of these sites used only a single landing
site as a way to slip under the radar and avoid detection.
Next, we examine the network location of the malware
Figure : The cumulative fraction of malware distribu-
tion sites over the /8 IP preﬁx space.
distribution servers and the landing sites linking to them.
Figure  shows that the malware distribution sites are
concentrated in a limited number of / preﬁxes. About
70% of the malware distribution sites have IP addresses
within 58.* -- 61.* and 209.* -- 221.* net-
work ranges. Interestingly, Anderson et al. [] observed
comparable IP space concentrations for the scam hosting
infrastructure. The landing sites, however exhibit rela-
tively more IP space diversity; Roughly 0% of the land-
ing sites fell in the above ranges.
s
e
t
i
S
n
o
i
t
u
b
i
r
t
s
D
i
f
o
n
o
i
t
c
a
r
F
e
v
i
t
l
a
u
m
u
C
 1
 0.8
 0.6
 0.4
 0.2
 0
 0
 50
 100  150  200  250  300  350  400  450  500
AS rank 
Figure 10: The cumulative fraction of the malware dis-
tribution sites across the different ASes.
We further investigated the Autonomous System (AS)
locality of the malware distribution sites by mapping
their IP addresses to the AS responsible for the longest
matching preﬁxes for these IP addresses. We use the lat-
est BGP snapshot from Routeviews [
AS mapping. Our results show that all the malware dis-
] to do the IP to
USENIX Association  
17th USENIX Security Symposium 

tribution sites’ IP addresses fall into a relatively small set
of ASes — only 00 as of this writing. Figure 10 shows
the cumulative fraction of these sites across the ASes
hosting them (sorted in descending order by the number
of sites in each AS). The graph further shows the highly
nonuniform concentration of the malware distribution
sites: 95% of these sites map to only 210 ASes. Finally,
the results of mapping the landing sites (not shown) pro-
duced 2, 517 ASes with 95% of the sites falling in these
500 ASes.
% of the distribution sites deliv-
Lastly, the distribution of malware across domains
also gives rise to some interesting insights. Figure 11
shows the distribution of the number of unique mal-
ware binaries (as inferred from MD hashes) down-
loaded from each malware distribution site. As the graph
shows, approximately 
ered a single malware binary. The remaining distribution
sites hosted multiple distinct binaries over their observa-
tion period in our data, with % of the servers hosting
more than 100 binaries. In many cases, we observed that
the multiple payloads reﬂect deliberate obfuscation at-
tempts to evade detection.
In what follows, we take a
more in-depth look by studying the different forms of re-
lationships among the various distribution networks.
F
D
C
 1
 0.8
 0.6
 0.4
 0.2
 0
 1
 10
Number of Unique Malware Binary Hashes
 1000
 100
 10000
 100000
Figure 11: CDF of the number of unique binaries down-
loaded from each malware distribution site.
6.1 Relationships Among Networks
To gain a better perspective on the degree of connectiv-
ity between the distribution networks, we investigate the
common properties of the hosting infrastructure across
the malware distribution sites. We also evaluate the de-
gree of overlap among the landing sites linking to the
different malware distribution sites.
Malware hosting infrastructure. Throughout our
measurement period we detected 9, 430 malware distri-
bution sites.
In 90% of the cases each site is hosted
on a single IP address. The remaining 10% sites are
hosted on IP addresses that host multiple malware distri-
bution sites. Our results show IP addresses that hosted up
to 210 malware distribution sites. Closer inspection re-
vealed that these addresses refer to public hosting servers
that allow users to create their own accounts. These
accounts appear as sub-folders of the the virtual host-
ing server DNS name (e.g., 512j.com/akgy, 512j.
com/alavin, 512j.com/anti) or in many cases as
separate DNS aliases that resolve to the IP address of the
hosting server. We also observed several cases where the
hosting server is a public blog that allows users to have
their own pages (e.g., mihanblog.com/abadan2,
mihanblog.com/askbox).
F
D
C
 1
 0.8
 0.6
 0.4
 0.2
 0
 0
 0.1
 0.2
 0.3
 0.4
 0.5
 0.6
 0.7
 0.8
 0.9
 1
Normalized Pairwise Intersection
Figure 1: CDF of the normalized pairwise intersection
between landing sites across distribution networks.
Overlapping landing sites. We further evaluate the
overlap between the landing sites that point to the dif-
ferent malware distribution sites. To do so, we calculate
the pairwise intersection between the sets of the landing
sites pointing to each of the distribution sites in our data
set. For a distribution network i with a set of landing
sites Xi and network j with the set of landing sites Xj,
the normalized pairwise intersection of the two networks,
Ci,j, is calculated as,
Ci,j =
|Xi ∩ Xj|
|Xi|
(1)
Where |X| is the number of elements in the set X. In-
terestingly, our results showed that 80% of the distribu-
tion networks share at least one landing page. Figure 1
10 
17th USENIX Security Symposium 
USENIX Association
shows the normalized pair-wise landing sets intersection
across these distribution networks. The graph reveals a
strong overlap among the landing sites for the related net-
work pairs. These results suggest that many landing sites
are shared among multiple distribution networks. For ex-
ample, in several cases we observed landing pages with
multiple IFRAMEs linking to different malware distribu-
tion sites. Finally, we note that the sudden jump to a
pair-wise score of one is mostly due to network pairs in
which the landing sites for one network are a subset of
those for the other network.
F
D
C
 1
 0.8
 0.6
 0.4
 0.2
 0
 0
 0.1
 0.2
 0.3
 0.4
 0.5
 0.6
 0.7
 0.8
 0.9
 1
Normalized Pairwise Intersection
Figure 1: CDF of the normalized pairwise intersection
between malware hashes across distribution networks.
Content replication across malware distribution sites.
We ﬁnally evaluate the extent to which malware is repli-
cated across the different distribution sites. To do so,
we use the same metric in Equation 1 to calculate the
normalized pairwise intersection of the set of malware
hashes served by each pair of distribution sites. Our re-
sults show that in 25% of the malware distribution sites,
at least one binary is shared between a pair of sites.
While malware hashes exhibit frequent changes as a re-
sult of obfuscation, our results suggest that there is still a
level of content replication across the different sites. Fig-
ure 1 shows the normalized pair-wise intersection of the
malware sets across these distribution networks. As the
graph shows, binaries are less frequently shared between
distribution sites compared to landing sites, but taken as
a whole, there is still a non-trivial degree of similarity
among these networks.
7 Post Infection Impact
Recall that upon visiting a malicious URL, the browser
downloads the initial exploit. The exploit (in most cases,
javascript) targets a vulnerability in the browser or
one of its plugins and takes control of the infected sys-
tem, after which it retrieves and runs the malware ex-
ecutable(s) downloaded from the malware distribution
site. Rather than inspecting the behavior of each phase
in isolation, our goal is to give an overview of the col-
lective changes that happen to the system state after vis-
iting a malicious URL . Figure 1 shows the distribution
of the number of Windows executables downloaded af-
ter visiting a malicious URL as observed from monitor-
ing the interaction between the browser and the malware
distribution site. As the graph shows, visiting malicious
URLs can lead to a large number of downloads ( on av-
erage, but as large as 0 in the extreme case).
F
D
C
 1
 0.8
 0.6
 0.4
 0.2
 0
 0
 10
 20
 30
 40
 50
 60
Number of Downloaded Executables
Figure 1: CDF of the number of downloaded executa-
bles as a result of visiting a malicious URL
Another noticeable outcome is the increase in the
number of running processes on the virtual machine.
This increase is associated with the automatic execution
of binaries. For each landing URL , we collected the
number of processes that were started on the guest op-
erating system after being infected with malware. Fig-
ure 1 shows the CDF of the number of processes
launched after the system is infected. As the graph shows
visiting malicious URLs produces a noticeable increase
in the number of processes, in some cases, inducing so
much overhead that they “crashed” the virtual machine.
Additionally, we examine the type of registry changes
that occur when the malware executes. Overall, we
detected registry changes after visiting 57.5% of the
landing pages. We divide these changes into the fol-
lowing categories: BHO indicates that the malware in-
stalled a Browser Helper Object that can access privi-
leged state in the browser; Preferences means that the
browser home page, default search engine or name server
where changed by the malware; Security indicates that
USENIX Association  
17th USENIX Security Symposium 
11
1
0.9
0.8
0.7
0.6
F
D
C
0.5
0.4
0.3
0.2
0.1
Protocol/Port
HTTP (0, 00)
IRC (
0-7001)
FTP (1)
UPnP (100)
Mail (
)
Other
Connections %
7%
.%
0.%
0.%
0.7%
.
%
Table : Most frequently contacted ports directly by the
downloaded malware.
0
0
20
40
60
80 100 120 140 160 180 200 220 240 260 280 300
Number of processes launched after infection
Polychronakis et al. [1].
Figure 1: CDF of the number of processes started after
visiting a malicious URL
malware changed ﬁrewall settings or even disabled au-
tomatic software updates; Startup indicates that the mal-
ware is trying to persist across reboots. Notice that these
categories are not mutually exclusive (i.e., a single ma-
licious URL may cause changes in multiple categories).
Table  summarizes the percentage of registry changes
per category. Notice that “Startup” changes are more
prevalent indicating that malware tries to persist even af-
ter the machine is rebooted.
Category BHO
URLs % .
% 
.%
Preferences
Security
Startup
.1% 1.7%
Table : Registry changes from drive-by downloads.
In addition to the registry changes, we analyzed the
network activity of the virtual machine post infection. In
our system, the virtual machines are allowed to perform
only DNS and HTTP connections. Table  shows the
percentage of connection attempts per destination port.
Even though we omit the HTTP connections originat-
ing from the browser, HTTP is still the most prevalent
port for malicious activity post-infection. This is due