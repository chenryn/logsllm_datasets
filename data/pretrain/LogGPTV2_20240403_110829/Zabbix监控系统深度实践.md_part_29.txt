Zabbix agent (active)
Zabbixagera
tems
QUEUEOFITEMSTOBEUPDATED
Dseabae
ZabbixServer
，不是由某一类Item引起的，所以，全部从数据库更新监控的间隔，是一
55ec
frappers
frappers
图14-4
图14-3
Drbase
ZabbixProxy
Delrbase
ZabbixProxy
Polers
第14章Zabbix系统优化
231°
---
## Page 247
·232°
调大它在zabbix_server.conf中的进程数，就能有效地缓解问题。
5sec]
其他类似命令，就可以看到Zabbix各个进程都在忙些什么，以及它们的性能数据。比如下面这条：
StartDBSyncers，这个参数是设置将数据从Zabbix写人数据库的进程的多少的。
Zabbix会响应很慢，因此推荐将history 分区，关闭housekeeper。
机制可以知道，history表的数据非常大，如果开启housekeeper,那么在housekeeper执行的过程中，
体情况，然后关闭housekeeper就行了。这个办法能解决80%的数据库问题。从Zabbix的运行
14.3数据库及其他调优
Zabbix监控系统深度实践
就能很清晰地看出Zabbix中负责history部分工作的进程的忙碌程度了。寻找到忙碌的进程，
./zabbix_server: history syncer #4 [synced 0 items in 0.000044 sec, idle
在 Zabbix 2.2中，调优已经是个非常简单的问题了。因为在Linux中，使用“ps-ef”或者
如果Zabbix没有问题，但数据库的数据进人比较慢，可以尝试调高zabbix_server.conf中的
对于数据库调优，其实非常简单，history表每天、每周或每月分区，这个时间间隔要看具
---
## Page 248
上的了。
如果两边配置不正确，那么向Zabbix Server发送数据时，Server就不知道到底是算在哪个 Host
ServerActive，另外，要确认Host name和Zabbix Server中配置得一样，是Active模式所需要的，
然后ZabbixAgent将读取到的数据发送给ZabbixServer。
里这个偏移量保存在数据库中，这样下一次来查看文件，就可以知道从什么地方开始读日志了
能控制远程的 Zabbix Agent去 tail文件呢？日志监控的原理是：Zabbix会将某个文件tail到哪
志类型的监控一定是Active模式的。监控日志一般都是不停地 tail文件的，Zabbix Server怎么
15.1准备工作
们要获取“ERROR”后面的出错信息，并且发邮件通知。
08:00:00OK"。如果发现问题，日志中的“OK”会变为“ERROR"。如果出现了ERROR，我
功能，在这一章中会介绍如何使用这个功能。
非常常见的需求就是如果日志中出现了某个关键字，那么就要报警。Zabbix本身自带了这样的
除了Zabix 前端需要的配置外，还要设置好 Zabbix Agent 中 zabbix_agentd.conf 里的
日志监控需要将 zabbix_agentd.conf 中的“ServerActive”配置为 Zabbix Server 的IP，因为日
场景是这样的：有一个系统，会往/tmp/app.log中打印日志，日志格式形如“2014-03-31
过去的一年，笔者一直在唯品会从事日志方面的工作，所以对日志的需求有一定的了解。
轻量级日志监控应用
第15章
·233
---
## Page 249
·234·
15.3测试
保存，就可以了，如图15-1所示。
也曾一度不清楚是干什么的，在下面会有解释。
15.2  添加 Item
Zabbix监控系统深度实践
可以在 Zabbix Agent 所在的服务器进行一些测试：
配置中的“Update interval”设置为5秒，为的是能尽快看到监控的效果。在全部设置完后
（3）Log timeformat：根据我们的例子设置，
接下来看看添加Item的配置。需要配置的有以下几项。
History storageperiod(in days)
Update interval (in sec)
Type of information
New application
Logtimeformat
Description
Applications
Enabled
Key
Name
yyy-MM-d hh:mm:ss
Loa
[og[/tmp/app.log,ERROR]
Zabbix aqent(active)
testLog
Memory
-ile
90
图15-1
“"yyyy-MM-dd h:mm:ss"，对于这个参数笔者
Select
---
## Page 250
再来看看前端界面，如图15-2所示。
13586:20140331:233049.322 JSON back [
可以发现，一共往日志里输出了三次“ERROR"，所以向Zabbix Server发送了三次请求。
"info":"processed:
"response":"success",
"ns":321740000}]
13586:20140331:233049.321 JSON before sending [{
"c1ock":1396279849,
同时可以观察 zabbix_agentd.log，
"data":[
"request":"agent data",
"ns":311296000)],
"clock":1396279844,
"lastlogsize":52856,
"key":"log[\/tmp\/app.log,ERROR]",
"host":"Zabbix server",
"ns":311017000),
"clock":1396279844,
"lastlogsize":52830,
"value":"2014-03-3123:30:41ERROR",
"key":"log[\/tmp\/app.log,ERROR]",
"host":"Zabbixserver",
"ns":310724000},
"clock":1396279844,
"lastlogsize":52804,
"va1ue":"2014-03-3123:30:40ERROR"，
"key":"log[\/tmp\/app.log,ERROR]",
"host":"Zabbix server",
3；
failed:0;total:
会有类似下面的日志：
3；
seconds spent:
第15章
0.000368")]
轻量级日志监控应用
·235·
---
## Page 251
·236。
否忽略大小写”，“Include”表示日志要包含填写在Expression 中的关键字，“Exclude”则相反。
杂和麻烦的，99%的人第一次配置都会出错。
志文件监控的 Trigger 的原因。大家要知道，在以前 Trigger中配置字符串匹配的语法是非常复
弹出的菜单中选择“Create trigger"”，如图 15-3 所示。
15.4
初衷就是这样，只有当出错的时候，才将出错的日志发送过来。
候，Zabbix Agent 才会将出现关键字的日志发送到 Zabbix Server。
是吻合的。
来的时间。大家可以仔细观察一下，“Local time”不为空的那几行里的时间，跟日志里的时间
变成空了。所以，Zabbix会根据监控日志时配置的“Log time format”来解析这条日志被打印出
time format”是干什么用的，所以将它设置为空，想看看有什么变化，结果就是“Local time”
Zabbix监控系统深度实践
2014.Mar.3121:55:112014.Mar:3121:55:09
2014.Mar.3122:33:07
2014.Mar.3123:29:59
2014.Mar.3123:30:44
2014.Mar.3123:30:44
Tinestamp
现在就很简单了，选择一个监控日志的 Item,在Expression 中填写关键字，“iregexp”表示“是
弹出的界面和平时设置Trigger的界面不太一样，这也是我为什么强烈建议在这里配置日
报警的配置非常简单，在Host（或者Template）上找到 Items，单击 wizard 里的图标，在
另外，可以看到，使用“log”这个key来监控日志，只有当日志中出现设置的关键字的时
为什么有几个数据的“Local time”为空呢？因为笔者开始时不明白设置 Item时候的“Log
配置报警
72014.Mar.3122:33:02
72014.Mar.31 22:33:04
Local
一
Edit triger
Create trigger
testLog
图15-3
图15-2
确实如此，这个监控的设计
2014-03-3123:30:41ERROR
2014-03-3121:55:09 ERROR
2014-03-3122:33:02ERROR
2014-03-3123:29:56ERROR
2014-03-3123:30:40ERROR
2014-03-3123:30:41ERROR
Valu
---
## Page 252
即常说的“轮转”。
是不同的。在这里,Zabbix 支持使用 logrt 这个Item来监控。“logrt”中的“rt”的意思是“rotate”
为我们在“log[/tmp/app.log,ERROR]”中配置的是/tmp/app.log，而日志文件每天轮转的文件名
15.5轮转的日志文件
所示。
是如果出现“ERROR”，那么Trigger就是PROBLEM 状态。
每设置好一个，单击“Add”按钮添加。图15-4是笔者配置的Trigger 的一个示例，它的作用
使用“AND”和“OR”可以组合多个条件，比如出现“ERROR”但没有出现“Exception”等。
logrt 的使用也非常简单，第一个参数使用能够匹配到日志文件名的正则表达式就行了。比
日志轮转是经常碰到的问题，如果要监控的日志文件每天都会轮转，应该如何处理呢？因
后续配置Action的操作，这里不做赘述。
再echo几个“ERROR”到日志文件里，就能看到Triger变成PROBLEM状态了，如图15-5
31Mar 201423:58:34app.logiserror
31Mar2014.23:58:34app.logiserror
31Mar201423:58:34app.logiseor
rine
Severity
2rrigger
Comments
Description
Description
Not dlassified
iregexpANDoRIncludeAdd
estlog
app.logiserror
Type
图15-5
图15-4
Position
Action
PROBLEM
PROBLEM
PROBLEM
status
第15章轻量级日志监控应用
Delete
Action
SaveCancell
Select
·237°
---
## Page 253
·238
“Local time”为空是因为没有设置“Log time format”，如图 15-6所示。
几个参数，最后的“1”表示抓取的是匹配出的第一分组。
表示匹配“ERROR”后的所有内容直至这一行的末尾，中间几个逗号是因为省略了不需要的
几个组。key配置为"log[/tmp/app.log,ERROR（.*）Y,,1]",在ERROR后面增加了一些正则表达式，
我们看看需要怎样配置。
现在在“ERROR”后面会加上一些详细的出错信息，比如“ERROR database cannot connet"。
2.2提供的新特性一
不支持的。
如 /tmp/applog 会生成 /tmp/app.log.1和 /tmp/app.log.2，我们就可以这样配置 logrt :
2014.pr.0108:20:34
2014Apr.0108:20:34
2014.Apr.0108:20:34
15.6
Zabbix监控系统深度实践
imestam
向/tmp/app.log中输出了“2014-04-0108:20:31ERRORhahaha"，能看到已经匹配出来了，
需要的配置非常简单，一个是用正则把需要的信息过滤出来，另外就是选择匹配出的是第
有的时候我们不要一条完整的报错信息，而是只需要出错的关键字，这时可以使用Zabbix
需要注意的是，匹配日志文件的正则表达式，只支持对于文件名的正则匹配，对于目录是
logrt[/tmp/app.log.*,ERROR]
获取关键字
Local time
一支持从日志中匹配出我们需要的信息。之前定义它只会返回“ERROR”
图15-6
hahaha
ahaha
Valee
---
## Page 254
★第 20章Zabbix内置监控项实现
★
★
★
★
第19章Zabbix2.2新功能介绍
第17章History和Trends
第 16章Zabbix数据库表结构解析
第四部分设计篇
第18章Zabbix和数据库交互详解
---
## Page 255
·240°
应，比如 hosts表、items 表等。而每一张表中，都有一个id字段，比如 hosts 表中有hostid 列,
16.1表结构概述
结构和常用的操作做一些说明。
了解数据库的结构。
很多。这时需要对Zabbix数据库的数据结构有清晰的了解。
的类似问题就是这样解决的），但是 PHP可能有的人会不太擅长，而且太长。数据update会快
Zabbix数据库表结构解析
第16章
一般都用数据库语句直接update。通过patch PHP代码的方法可以解决这个问题（Zabbix 本身
Zabbix 的数据库设计是很有特点的，针对Zabbix 中的每一个资源，都有一张表与其对
在笔者使用过程中，也是摸石头过河，一边摸索一边使用。这里会对Zabbix数据库的表
另外，Zabbix收集了大量的裸数据，其他人可以通过这些数据来进行分析，同样，也需要
◎普通的查询可以在备库上进行。两边数据是实时同步的。
数据库操作有风险，一旦出问题会造成Zabbix crash。需要谨慎操作。
@Zabbix 数据库中的表的名称都是复数，比如存放 Host 信息的表的名字是Hosts 等。
注意：
由于Zabbix前端效率极低，大批量更新会造成Oracle tx锁，所以对于这种大批量的更新
---
## Page 256
16.2
也是正常的，可以先看一遍留个印象，等之后对Zabbix有了些了解以后再来仔细学习。
了解Zabbix的数据库。大家可能看这一节很吃力，但没关系，如果是刚接触Zabbix不久，这
如果用SQL，就一条SQL就可以非常简单地解决问题了。
怎么办呢？我们可能会定义一个很复杂的aggregate类型的 Item，然后在前端点来点去。但是
另外，活用SQL查询Zabbix数据库，能够提升效率。比如想看某个机房的网卡出口流量之和
没必要也没用。其实非也，从Zabbix数据库的表结构，我们可以知道Zabbix资源的数据结构。
正是Zabbix的灵活之处，在我们进行二次开发的时候，非常有用。
itemid，有的是triggerid，我们更改一下这个id，就自然能够跳转到对应的界面上去了。这一点
点开一个Host，然后看URL，例如：
联关系，就是在items 表中使用 hostid与 hosts表中的资源进行关联的。
items 表中有 itemid 列。而资源之间的关联关系，是通过外键来完成的。比如 Host 和 Item 的关
另外，Zabbix的水平高低，或者说是否真正了解Zabbix的一个非常大的标志，就是是否
有的朋友要说了，我只要用好Zabbix就行了，不想去了解Zabbix的数据库表结构，觉得
“Host”就是指一台被监控的机器。Hosts 表结构如下。
这里顺便说一句，Zabbix的前端界面的URL，会有很多像上面的URL那样。有的是
 sid：sessionid，标识用户。
@ groupid：这里不需要 groupid这个字段，所以0没有意义。
Ohostid：单击的Host 的 hostid。
Oform：表示当前页面的操作，这里的 update 是因为笔者是从“Configuration”→“Hosts"
http://192.168.201.234/zabbix/hosts.php?form=update&hostid=10108&groupid=0&sid=27716d11b8954723
hostid 是每一个 Host 的唯一标识，从数据库查询的时候，一般都是以 hostid 为查询条件。
可以看到URL里的GET参数有以下几个。
下面以 hostid 为例进行说明，其他 itemid、trigger 等都与之类似。