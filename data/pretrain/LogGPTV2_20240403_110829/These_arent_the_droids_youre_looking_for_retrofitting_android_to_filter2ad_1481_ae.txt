cesses from gaining access to them. However, it does not
track taint propagation within applications and so the taint
is lost when data is copied between objects. Perhaps most
relevant is Vachharajani et al.’s RIFLE [24], which enforces
security policies at runtime by translating programs into a
custom instruction set architecture enhanced to track infor-
mation ﬂow.
Others have have worked to detect potential abuses of per-
missions and data by Android applications. Enck et al. [9]
have developed a lightweight security checker, called Kirin,
that analyzes manifest ﬁles to identify permissions that are
dangerous when combined.
Android applications obtain user consent for all the per-
missions they will require at the time they are installed [12].
An alternative approach, to obtain consent for access to a re-
source at the time it is requested, is used for certain resources
on Apple’s iOS platform (e.g. location [4]). Requiring con-
sent at time of access gives users more granular control over
the time at which applications can access sensitive resources,
and likely reduces the success rate of ultimatums. It does so
at a cost of more frequent user interruptions. The Android
team argues that the usability cost of time-of-access consents
work “to the detriment of security” [12]. Regardless of when
permissions are granted, neither the time-of-install nor the
time-of-access consent model can prevent applications from
misappropriating them.
8. CONCLUSION
AppFence oﬀers two diﬀerent approaches for protecting
sensitive data from today’s Android applications: shadow-
ing sensitive data and blocking sensitive data from being ex-
ﬁltrated oﬀ the device. We ﬁnd that these privacy controls
are complementary. For the 50 applications we studied, 34%
of those have a direct conﬂict between the desired function-
ality and the privacy constraint our controls were designed
to enforce—ensuring that sensitive data never leave the de-
vice. The testing methodology that we have developed for
assessing side eﬀects proves valuable for characterizing the
types of application functionality that may be impacted by
privacy controls. For the remaining applications, all side ef-
fects could be avoided with the right choice of either data
shadowing or exﬁltration blocking. How to help a user to
make the right choice, however, remains a challenge to be
addressed in future research.
Acknowledgments
We would like to thank Intel Labs for supporting this work,
William Enck for sharing Android application binaries and
Byung-Gon Chun, Peter Gilbert, Daniel Halperin, Patrick
Gage Kelley, Robert Reeder, Anmol Sheth, the anonymous
reviewers, and our shepherd, Ninghui Li for providing valu-
able feedback. This work was supported by National Science
Foundation award CNS-0917341.
9. REFERENCES
[1] android-apktool: Tool for reengineering Android apk
ﬁles. http://code.google.com/p/android-apktool/.
[2] Privacy Blocker.
http://privacytools.xeudoxus.com/.
[3] S. T. Amir Efrati and D. Searcey. Mobile-app makers
face U.S. privacy investigation.
http://online.wsj.com/article/
SB10001424052748703806304576242923804770968.
html, Apr. 5, 2011.
[4] Apple Inc. iPhone and iPod touch: Understanding
location services.
http://support.apple.com/kb/HT1975, Oct. 22,
2010.
[5] A. R. Beresford, A. Rice, N. Skehin, and R. Sohan.
MockDroid: Trading privacy for application
functionality on smartphones. In Proceedings of the
12th Workshop on Mobile Computing Systems and
Applications (HotMobile), 2011.
649[6] J. Chow, B. Pfaﬀ, T. Garﬁnkel, K. Christopher, and
[17] N. Provos. A virtual honeypot framework. In USENIX
M. Rosenblum. Understanding data lifetime via whole
system simulation. In USENIX Security Symposium,
2004.
[7] M. Egele, C. Kruegel, E. Kirda, and G. Vigna. PiOS:
Detecting privacy leaks in iOS applications. In NDSS,
2011.
[8] W. Enck, P. Gilbert, B.-G. Chun, L. P. Cox, J. Jung,
P. McDaniel, and A. N. Sheth. TaintDroid: An
information-ﬂow tracking system for realtime privacy
monitoring on smartphones. In OSDI, 2010.
[9] W. Enck, M. Ongtang, and P. McDaniel. On
lightweight mobile phone application certiﬁcation. In
CCS, 2009.
[10] A. Felt and D. Evans. Privacy protection for social
networking APIs. In Proceedings of Web 2.0 Security
And Privacy (W2SP), 2008.
[11] Google Inc. Android developers: Content providers.
http://developer.android.com/guide/topics/
providers/content-providers.html.
[12] Google Inc. Android developers: Security and
permissions. http://developer.android.com/guide/
topics/security/security.html.
[13] Google Inc. Android developers: Using aapt.
http://developer.android.com/guide/developing/
tools/aapt.html.
[14] Google Inc. Android developers: Platform versions.
http://developer.android.com/resources/
dashboard/platform-versions.html, Aug. 2011.
[15] A. J¨a¨askel¨ainen. Design, Implementation and Use of a
Test Model Library for GUI Testing of Smartphone
Applications. Doctoral dissertation, Tampere
University of Technology, Tampere, Finland, Jan.
2011.
Security Symposium, 2004.
[18] E. Smith. iPhone applications & privacy issues: An
analysis of application transmission of iPhone unique
device identiﬁers (UDIDs). In Technical Report, 2010.
[19] L. Spitzner. Honeypots: Tracking Hackers.
Addison-Wesley, Boston, MA, Sept. 10, 2002.
[20] Tampere University of Technology. Introduction:
Model-based testing and glossary.
http://tema.cs.tut.fi/intro.html.
[21] The Honeynet Project. Know Your Enemy: Revealing
the Security Tools, Tactics, and Motives of the
Blackhat Community. Addison-Wesley, 2001.
[22] S. Thurm and Y. I. Kane. The Journal’s cellphone
testing methodology. The Wall Street Journal. Dec.
18, 2010. http://online.wsj.com/article/
SB10001424052748704034804576025951767626460.
html.
[23] S. Thurm and Y. I. Kane. Your apps are watching
you. The Wall Street Journal. Dec. 18, 2010.
online.wsj.com/article/
SB10001424052748704694004576020083703574602.
html.
[24] N. Vachharajani, M. J. Bridges, J. Chang, R. Rangan,
G. Ottoni, J. A. Blome, G. A. Reis, M. Vachharajani,
and D. I. August. RIFLE: An architectural framework
for user-centric information-ﬂow security. In MICRO,
2004.
[25] X. Wang, Z. Li, N. Li, and J. Y. Choi. PRECIP:
Practical and retroﬁttable conﬁdential information
protection. In NDSS, Feb. 2008.
[26] H. Yin, D. Song, M. Egele, C. Kruegel, and E. Kirda.
Panorama: capturing system-wide information ﬂow for
malware detection and analysis. In CCS, 2007.
[16] J. Newsome, S. McCamant, and D. Song. Measuring
[27] Y. Zhou, X. Zhang, X. Jiang, and V. Freeh. Taming
channel capacity to distinguish undue inﬂuence. In
Proceedings of the ACM SIGPLAN Fourth Workshop
on Programming Languages and Analysis for Security,
June 15, 2009.
information-stealing smartphone applications (on
Android). In International Conference on Trust and
Trustworthy Computing (TRUST), 2011.
650APPENDIX
A. WHEN APPLICATIONS ARE
“LESS FUNCTIONAL”
When evaluating the impact of privacy controls on user
experience, we consider certain side eﬀects to render an ap-
plication “less functional” when the application is able to
perform its primary purpose but cannot perform some sec-
ondary function.
In this appendix we explain the precise
circumstances that led us to classify applications as less func-
tional.
device ID (IMEI): We classiﬁed as less functional games
that could not load a cross-application high-score pro-
ﬁle because the proﬁle is associated with the true device
ID. Additionally, we classiﬁed the iheartradio appli-
cation as less functional because its searches for nearby
radio stations failed due to the inclusion of the device
ID with the search request.
location: We included those applications where location
proximity would have provided enhanced, but not core,
functionality. For example, the npr radio application
enhances its primary service by identifying the user’s
local stations, yearbook oﬀers local chat in addition
to its other chat options, and heytell allows users
to optionally include their current location along with
sent messages. We also included some applications that
could no longer automatically capture the user’s loca-
tion, but oﬀered users the option of manually entering
their location (e.g. the apartments apartment-hunting
application). Finally, the papertoss application be-
came less functional when its high-score proﬁle failed
to load because it sends the user’s location along with
the request.
contacts: We included one chat application, mocospace,
that could no longer add users’ local contacts to the
server-side chat contacts database. We also classiﬁed as
less functional a barcode scanning application, quick-
mark, that oﬀers the ability to send a bar code image to
someone in the contacts book, but was not able to do
so if contacts were protected by our privacy controls.
bookmarks: We included a browser, skyfire, that could
still browse the web but was not be able to read or save
bookmarks if they were protected.
calendar: We classiﬁed as less functional the tvguide ap-
plication that cannot add reminders to the user’s cal-
endar if the calendar has been replaced by a shadow
calendar.
B. APPLICATIONS SCRIPTED
FOR AUTOMATED TESTING
# application
1
antivirus
2
apartments
3
assistant
4
astrid
5
autorun
6
avril
7
basketball
8
bible
package name
com.antivirus
com.cellit.forrent
com.netgate
com.timsu.astrid
com.rs.autorun
com.ringtone.avrillavigne
com.droidhen.basketball
com.faithcomesbyhearing.android.
bibleis
net.bsdtelecom.calleridfaker
com.maxdroid.christmas
com.bakes.chucknorrisfacts
com.a0soft.gphone.aCompass
com.mportal.dexknows.ui
com.tarsin.android.dilbert
com.dataviz.docstogo
com.electricsheep.edj
com.espnsport
com.flightview.flightview_free
fmlife.activities
com.heytell
com.artelplus.howtotie
com.clearchannel.iheartradio.
controller2
com.kayak.android
com.ceen.mangaviewer
de.joergjahnke.mario.android.
free
artfulbits.aiMinesweeper
com.jnj.mocospace.android
com.distinctdev.tmtlite
net.lucky.star.mrtm
com.dreamstep.musicbox
org.npr.android.news
com.bfs.papertoss
com.socialin.android.puzzle.
princess
tw.com.quickmark
com.neilneil.android.games.
simonclassic
us.sourcio.android.puzzle.
simpson
com.skyfire.browser
com.slot.slotmachine
com.dynamix.mobile.SmartTacToe
com.boolbalabs.smileypops
com.superdroid.sqd
com.brennasoft.findastarbucks
com.taskos
com.feasy.tris2.colorblocks
com.tunewiki.lyricplayer.android
com.roundbox.android.tvguide.
presentation.activity
com.infimosoft.videopoker
com.avantar.wny
com.myyearbook.m
com.avantar.yp
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
callerid
christmas
chuck_norris
compass
dex
dilbert
docstogo
droidjump
espn
flightview
fmlife
heytell
howtotie
iheartradio
kayak
manga
mario
minesweeper
mocospace
moron
mp3_ringtone
musicbox
npr
papertoss
princesses
quickmark
simon
simpsons
skyfire
slotmachine
smarttactoe
smiley_pops
sqd
starbucks
taskos
trism
tunewiki
tvguide
videopoker
wnypages
yearbook
yellowpages
651