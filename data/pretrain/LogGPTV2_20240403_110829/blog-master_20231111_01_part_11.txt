[《PostgreSQL skip locked与CTE妙用 - 解决并发批量更新锁冲突带来的锁等待，提高处理吞吐》](../201803/20180314_03.md)    
session 1  
```  
db1=> begin;  
BEGIN  
Time: 0.344 ms  
db1=> select * from t_forupdate where id=1 for update;  
 id |               info               | ts   
----+----------------------------------+----  
  1 | 9293542d40201828542d8d6c0949268d |   
(1 row)  
```  
session 2  
```  
db1=> begin;  
BEGIN  
Time: 0.344 ms  
db1=> select * from t_forupdate where id>=1 and id=1 then            
    select string_agg(chr(19968+(random()*20901)::int), '') into res from generate_series(1,$1);            
    return res;            
  end if;            
  return null;            
end;            
$$ language plpgsql strict;    
```    
```    
------------------------------------------          
 埳噪办甾讷昃碇玾陧箖燋邢贺浮媊踮菵暔谉橅          
 秋橑篯鴎拟倶敤麁鼋醠𫐖坙𫘥𫓩𫄹蘛婃坹娴儅          
 蔎緾铠爪鹏二悲膼朠麻㶉鋬桢窷违繇糭啯索籓          
 驰泅薬鐗愅撞窍浉渗蛁灎膝攚𪭢瞪拡擜詜隝缊          
 襳铺煃匶瀌惩荼黹樆惺箧搔羾憯墆锒硍蔓恧顤       
```    
2、创建测试表    
```    
drop table tbl;  
create unlogged table tbl (    
        id serial8 primary key,    
        gid int,    
        c1 text,    
        c2 text,    
        c3 text,    
        ts timestamp    
);    
```    
3、写入20万记录    
```    
insert into tbl (gid,c1,c2,c3,ts)     
select random()*10000, gen_hanzi(16), gen_hanzi(32), gen_hanzi(128), clock_timestamp()     
from generate_series(1,100000);    
insert into tbl (gid,c1,c2,c3,ts)     
select random()*10000, gen_hanzi(16)||'西出函谷关'||gen_hanzi(16), gen_hanzi(32), gen_hanzi(128), clock_timestamp()     
from generate_series(1,100);    
insert into tbl (gid,c1,c2,c3,ts)     
select random()*10000, gen_hanzi(16), gen_hanzi(32)||'西出函谷关'||gen_hanzi(16), gen_hanzi(128), clock_timestamp()     
from generate_series(1,100);    
insert into tbl (gid,c1,c2,c3,ts)     
select random()*10000, gen_hanzi(16), gen_hanzi(32), gen_hanzi(128)||'西出函谷关'||gen_hanzi(16), clock_timestamp()     
from generate_series(1,100);    
insert into tbl (gid,c1,c2,c3,ts)     
select random()*10000, gen_hanzi(16), gen_hanzi(32), gen_hanzi(128), clock_timestamp()     
from generate_series(1,100000);    
```    
```    
db1=> select * from tbl limit 3;    
db1=> \x  
Expanded display is on.  
db1=> select * from tbl limit 3;    
-[ RECORD 1 ]---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------  
id  | 1  
gid | 5396  
c1  | 塙被哷簘婳䴙覒徚滈磫椆幈揪帮馵簃  
c2  | 黵醽亶蕊薂诧淀贤艐守漱府蝈碧朒獦妧宽鬓请氠絇躧掖敹毨喟户奦逾衩𫐄  
c3  | 鋻峋葮锘雝耛斗丒携匀烨坔筒祸琅縁崷耥続穂踺枩独𪸩俗騛忽勡彭缜絵諔袷兵淀焘膱顷叼发蠴篫凳缑鏣篑部罡予嶩喙表趿姿琅筚絟脮圕迣莼突鲙毶鰰镓岳戥笎唌嬯柞权穉耯辆刹蛰婵泶呙𤇃毶𬸚埭藑𦰏汉诵拭庢燫爹尤荱𫏆伆痫艧驸矼浣𪩎拕瀐嗟舐橖颇芐沨涙佑茂篚钐漤倥玧岔苧鑆𪭵追岤癛哤篑  
ts  | 2023-11-11 01:59:46.455904  
-[ RECORD 2 ]---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------  
id  | 2  
gid | 2216  
c1  | 鸟疓疚蔲𫉄胗迊漐粝紑崃恵绲锶慐𰾄  
c2  | 致篼蠺革梼弑𫍧矡筜逘钇踨择褯谵藅霷嶝粥忁沓簋脙闻鑮盅袪摈溻凖鵀缮  
c3  | 妿𫚤膜数笼桸骔柷鳊姻徭鷝塳慷瀿襩鍝浵压慨艗毂鸠苄疸燍誓繛刏寚疲赒橦东艐鉯𫚤橴聚娐狯𫟃慀沀阽𫐐骄痣萳睳徍杆酬㖊藁鐾颗郤蒯礨纋淭挂峳祸噭胫瓘谫脭惭瘏据嬺冇肌闙嗭蕣厚蕯愀鹁工蛎泗亯髹蕦賌糷卉暛迶藑稀犻暛螳救痢兺蠡袙懈蕲刢剿睾筚繝迋蜡奝公忐剤垢坯蘦设辩磩燯标鮷爆眉  
ts  | 2023-11-11 01:59:46.457328  
-[ RECORD 3 ]---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------  
id  | 3  
gid | 8796  
c1  | 扶箣跬蒪校乤龈洁忣鍹澼至懿嘻够啪  
c2  | 夁呕辥鏓蔪爏尝蟔湖袷副燺忥繺硗钟强埐鸠伣渆鲼嶖沧较巅刔樚頞雂笺砧  
c3  | 壸筢苍升蓥𦈛畤嘘飓饚媫状誔螵伉挨稙拇足佧极镈庂櫂贰睷徔皡迳勔寛邻瘅钝崜姅服徕尡薚现蠎递稳幰肔熧藇嶡醺殈呅沕暀桸娈忘畸鏮草蓞垚毮箩蚋闶洞欈搪汰缡鍝剻乑蕥樮咣桎菪仆衅裩判齐爙缸兊蛴凰巆獉躲権氇创蛇趟孯垆骛嗛阵龊铛襽潓偊曲钐犄彁蛠拪戚𬬩压鄇觱辺耨张摒潩湕获夔佁錔  
ts  | 2023-11-11 01:59:46.457456  
Time: 1.539 ms  
```    
4、传统数据库, LIKE查询需要全表扫描    
```    
db1=> explain (analyze) select * from tbl where c1 like '%西出函谷关%';    
                                               QUERY PLAN                                                 
--------------------------------------------------------------------------------------------------------  
 Seq Scan on tbl  (cost=0.00..17913.75 rows=20 width=554) (actual time=43.267..84.422 rows=100 loops=1)  
   Filter: (c1 ~~ '%西出函谷关%'::text)  
   Rows Removed by Filter: 200200  
 Planning Time: 0.113 ms  
 Execution Time: 84.448 ms  
(5 rows)  
```    
5、PG, 使用模糊查询倒排索引.    
```    
create extension pg_trgm;    
create extension btree_gin;    
```   
这个索引支持gid查询, 支持c1,c2,c3的like查询.     
```    
create index on tbl using gin (gid, c1 gin_trgm_ops, c2 gin_trgm_ops, c3 gin_trgm_ops);    
```    
6、任意字段like    
```    
select * from tbl where c1 like '%西出函谷关%';    
select * from tbl where c2 like '%西出函谷关%' or c3 like '%西出函谷关%';    
select * from tbl where c2 like '%西出函谷关%' and c3 like '%西出函谷关%';    
select * from tbl where c3 like '%西出函谷关%';    
```    
```    
db1=> explain (analyze) select * from tbl where c1 like '%西出函谷关%';    
                                                           QUERY PLAN                                                              
---------------------------------------------------------------------------------------------------------------------------------  
 Bitmap Heap Scan on tbl  (cost=21.06..43.23 rows=20 width=554) (actual time=0.051..0.109 rows=100 loops=1)  
   Recheck Cond: (c1 ~~ '%西出函谷关%'::text)  
   Heap Blocks: exact=9  
   ->  Bitmap Index Scan on tbl_gid_c1_c2_c3_idx  (cost=0.00..21.05 rows=20 width=0) (actual time=0.042..0.043 rows=100 loops=1)  
         Index Cond: (c1 ~~ '%西出函谷关%'::text)  
 Planning Time: 0.115 ms  
 Execution Time: 0.142 ms  
(7 rows)  
db1=> explain analyze select * from tbl where c2 like '%西出函谷关%' or c3 like '%西出函谷关%';    
                                                              QUERY PLAN                                                                 
---------------------------------------------------------------------------------------------------------------------------------------  
 Bitmap Heap Scan on tbl  (cost=42.12..86.52 rows=40 width=554) (actual time=0.326..0.893 rows=200 loops=1)  
   Recheck Cond: ((c2 ~~ '%西出函谷关%'::text) OR (c3 ~~ '%西出函谷关%'::text))  
   Heap Blocks: exact=18  
   ->  BitmapOr  (cost=42.12..42.12 rows=40 width=0) (actual time=0.309..0.310 rows=0 loops=1)  
         ->  Bitmap Index Scan on tbl_gid_c1_c2_c3_idx  (cost=0.00..21.05 rows=20 width=0) (actual time=0.200..0.200 rows=100 loops=1)  
               Index Cond: (c2 ~~ '%西出函谷关%'::text)  
         ->  Bitmap Index Scan on tbl_gid_c1_c2_c3_idx  (cost=0.00..21.05 rows=20 width=0) (actual time=0.107..0.107 rows=100 loops=1)  
               Index Cond: (c3 ~~ '%西出函谷关%'::text)  
 Planning Time: 0.289 ms  
 Execution Time: 0.943 ms  
(10 rows)   
```  
##### 60.15 全文检索  
术语  
- tsvector, 文本向量  
- tsquery, 搜索词条  
- gin, 倒排索引  
- 字典  
```  
db1=> select ascii('a');  
 ascii   
-------  
    97  
(1 row)  
db1=> select ascii('z');  
 ascii   
-------  
   122  
(1 row)  
db1=> select ascii(' ');  
 ascii   
-------  
    32  
(1 row)  
db1=> select "char"(97);  
 char   
------  
 a  
(1 row)  
```  
写一个函数, 生成随机字符串语句  
```  
create or replace function gen_rand_text (int) returns text as $$  
declare  
  arr int[] := '{97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,32}';  
  res text;  
begin  
  select string_agg( "char"(arr[ ceil(random()*27) ]) , '') into res from generate_series(1,$1);   
  return res;  
end;  
$$ language plpgsql strict;  
```  
```  
db1=> select gen_rand_text(100);  
                                            gen_rand_text                                               
------------------------------------------------------------------------------------------------------  
 pzzgjmmlyb utqhb yjpwmfokazlqodriiqmubklfs jgp svzfntwnqshyexcrfvdynvkzopyqmduaocdqku wiqyqgxongrbiz  
(1 row)  
```  
测试表  
```  
create unlogged table tbl_ts (  
  id int primary key,  
  ts text,  
  tsv tsvector  
);  
```  
写入100万条记录  
```  
insert into tbl_ts select id,ts,to_tsvector(ts) from (select generate_series(1,1000000) id, gen_rand_text(256) ts) t;  
db1=> \x  
Expanded display is on.  
db1=> select * from tbl_ts limit 2;  
-[ RECORD 1 ]----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------  
id  | 1  
ts  | ahdgjzyvcewygyrtlcdstrvlbac zdvi eudigfyhqb lcmhlspuox rktpkrukbhqcfoqskdsdamhkdzdqrvkcsebwtjxsvpgeoxripqlbhxfa fjfigfobwemuftdwcfhzjbqaqpqmbtmojcbejzigwclwcrigjpnabvpsjkxkmsechuqpfrhzrvncqbyey qgmlprervugwfgquikqudpylqeythqburk wqdfmdtxphlasdswyzlfqssfaze  
tsv | 'ahdgjzyvcewygyrtlcdstrvlbac':1 'eudigfyhqb':3 'fjfigfobwemuftdwcfhzjbqaqpqmbtmojcbejzigwclwcrigjpnabvpsjkxkmsechuqpfrhzrvncqbyey':6 'lcmhlspuox':4 'qgmlprervugwfgquikqudpylqeythqburk':7 'rktpkrukbhqcfoqskdsdamhkdzdqrvkcsebwtjxsvpgeoxripqlbhxfa':5 'wqdfmdtxphlasdswyzlfqssfaz':8 'zdvi':2  
-[ RECORD 2 ]----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------  
id  | 2  
ts  | ncqaunwmgeemxdueqrhcxkaivecvvunuwycquanwqavegglqnocnihtser dxegcgq fe exiwonubootskjmykohsnowfpoyncavf uwtxhkfgskevfljdmwvaahs uqjwwjqsrrqkogortrlpddebqi uawlwhzjqqgdmceuozxebgoajbleazsdafiardxivpgcogfeuqajupifmhimzcgxmau fvcgai gswlbpeohispseoahwxdk y ngf  
tsv | 'dxegcgq':2 'exiwonubootskjmykohsnowfpoyncavf':4 'fe':3 'fvcgai':8 'gswlbpeohispseoahwxdk':9 'ncqaunwmgeemxdueqrhcxkaivecvvunuwycquanwqavegglqnocnihts':1 'ngf':11 'uawlwhzjqqgdmceuozxebgoajbleazsdafiardxivpgcogfeuqajupifmhimzcgxmau':7 'uqjwwjqsrrqkogortrlpddebqi':6 'uwtxhkfgskevfljdmwvaah':5 'y':10  
```  
创建索引  
```  
create index on tbl_ts using gin (tsv);  
```  
使用tsquery查询内容  
```  
select * from tbl_ts where tsv @@ to_tsquery('fe & fvcgai');  
db1=> select * from tbl_ts where tsv @@ to_tsquery('fe & fvcgai');  
-[ RECORD 1 ]----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------  
id  | 2  
ts  | ncqaunwmgeemxdueqrhcxkaivecvvunuwycquanwqavegglqnocnihtser dxegcgq fe exiwonubootskjmykohsnowfpoyncavf uwtxhkfgskevfljdmwvaahs uqjwwjqsrrqkogortrlpddebqi uawlwhzjqqgdmceuozxebgoajbleazsdafiardxivpgcogfeuqajupifmhimzcgxmau fvcgai gswlbpeohispseoahwxdk y ngf  
tsv | 'dxegcgq':2 'exiwonubootskjmykohsnowfpoyncavf':4 'fe':3 'fvcgai':8 'gswlbpeohispseoahwxdk':9 'ncqaunwmgeemxdueqrhcxkaivecvvunuwycquanwqavegglqnocnihts':1 'ngf':11 'uawlwhzjqqgdmceuozxebgoajbleazsdafiardxivpgcogfeuqajupifmhimzcgxmau':7 'uqjwwjqsrrqkogortrlpddebqi':6 'uwtxhkfgskevfljdmwvaah':5 'y':10  
Time: 0.566 ms  
```  
查看执行计划, 已经使用了索引  
```  
db1=> explain select * from tbl_ts where tsv @@ to_tsquery('fe & fvcgai');  
                                  QUERY PLAN                                    
------------------------------------------------------------------------------  
 Bitmap Heap Scan on tbl_ts  (cost=12.35..13.71 rows=1 width=602)  
   Recheck Cond: (tsv @@ to_tsquery('fe & fvcgai'::text))  
   ->  Bitmap Index Scan on tbl_ts_tsv_idx  (cost=0.00..12.35 rows=1 width=0)  
         Index Cond: (tsv @@ to_tsquery('fe & fvcgai'::text))  
(4 rows)  
```  
##### 60.16 空间包含  
术语  
- postgis, 时空数据库插件  
- gist, 索引  
https://postgis.net/docs/manual-3.4/ST_MakePolygon.html  
[《HTAP数据库 PostgreSQL 场景与性能测试之 47 - (OLTP多模优化) 空间应用 - 高并发空间位置更新、多属性KNN搜索并测（含空间索引）末端配送、新零售类项目》](../201711/20171107_48.md)    