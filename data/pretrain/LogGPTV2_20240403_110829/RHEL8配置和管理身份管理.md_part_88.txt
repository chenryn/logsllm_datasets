      Services: HTTP/PI:EMAIL
    -------------------------
    Number of members added 1
    -------------------------
    ```
5.  使用 `ipa caacl-add-profile`{.literal}
    命令为请求的证书指定证书配置集：
    ``` literallayout
    $ ipa caacl-add-profile TLS_web_server_authentication --certprofiles=caIPAserviceCert
      ACL name: TLS_web_server_authentication
      Description: CAACL for web servers authenticating to web clients using certificates issued by webserver-ca
      Enabled: TRUE
      CAs: webserver-ca
      Profiles: caIPAserviceCert
      Services: HTTP/PI:EMAIL
    -------------------------
    Number of members added 1
    -------------------------
    ```
    您可以直接使用新创建的 CA ACL。它在创建后默认启用。
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
CA ACL 的重点是指定允许哪些 CA
和配置文件组合用于来自特定主体或组的请求。CA ACL
不会影响证书验证或信任。它们不会影响签发的证书的使用方式。
:::
:::
::: section
::: titlepage
## []{#restricting-an-application-to-trust-only-a-subset-of-certificates_configuring-and-managing-idm.html#creating-a-CA-ACL-for-user-web-browsers-authenticating-to-web-servers-using-certificates-issued-by-webclient-ca_restricting-an-application-to-trust-a-subset-of-certs}为用户 Web 浏览器创建 CA ACL，使用 webclient-ca 发布的证书向 Web 服务器进行身份验证 {.title}
:::
这部分论述了如何创建需要系统管理员在请求证书时使用
[**webclient-ca**]{.strong} 子 CA 和 [**IECUserRoles
配置集的**]{.strong} CA ACL。如果用户从其他子 CA
或不同配置集请求证书，则请求会失败。唯一的例外是在启用了另一个匹配的 CA
ACL 时。要查看可用的 CA ACL，请参阅在 [IdM CLI 中查看 CA
ACL](#restricting-an-application-to-trust-only-a-subset-of-certificates_configuring-and-managing-idm.html#viewing-CA-ACLs_in_IdM_CLI_restricting-an-application-to-trust-a-subset-of-certs "在 IdM CLI 中查看 CA ACL"){.link}。
::: itemizedlist
**先决条件**
-   确保您已获取 IdM 管理员的凭据。
:::
::: orderedlist
**流程**
1.  使用 `ipa caacl`{.literal} 命令创建 CA ACL 并指定其名称：
    ``` literallayout
    $ ipa caacl-add TLS_web_client_authentication
    --------------------------------------------
    Added CA ACL "TLS_web_client_authentication"
    --------------------------------------------
      ACL name: TLS_web_client_authentication
      Enabled: TRUE
    ```
2.  使用 `ipa caacl-mod 命令修改`{.literal} CA ACL 以指定 CA ACL
    的说明：
    ``` literallayout
    $ ipa caacl-mod TLS_web_client_authentication --desc="CAACL for user web browsers authenticating to web servers using certificates issued by webclient-ca"
    -----------------------------------------------
    Modified CA ACL "TLS_web_client_authentication"
    -----------------------------------------------
      ACL name: TLS_web_client_authentication
      Description: CAACL for user web browsers authenticating to web servers using certificates issued by webclient-ca
      Enabled: TRUE
    ```
3.  将 [**webclient-ca**]{.strong} 子 CA 添加到 CA ACL 中：
    ``` literallayout
    $ ipa caacl-add-ca TLS_web_client_authentication --ca=webclient-ca
      ACL name: TLS_web_client_authentication
      Description: CAACL for user web browsers authenticating to web servers using certificates issued by webclient-ca
      Enabled: TRUE
      CAs: webclient-ca
    -------------------------
    Number of members added 1
    -------------------------
    ```
4.  使用 `ipa caacl-add-profile`{.literal}
    命令为请求的证书指定证书配置集：
    ``` literallayout
    $ ipa caacl-add-profile TLS_web_client_authentication --certprofiles=IECUserRoles
      ACL name: TLS_web_client_authentication
      Description: CAACL for user web browsers authenticating to web servers using certificates issued by webclient-ca
      Enabled: TRUE
      CAs: webclient-ca
      Profiles: IECUserRoles
    -------------------------
    Number of members added 1
    -------------------------
    ```
5.  使用 `ipa caacl-mod 命令修改`{.literal} CA ACL，以指定 CA ACL
    适用于所有 IdM 用户：
    ``` literallayout
    $ ipa caacl-mod TLS_web_client_authentication --usercat=all
    -----------------------------------------------
    Modified CA ACL "TLS_web_client_authentication"
    -----------------------------------------------
      ACL name: TLS_web_client_authentication
      Description: CAACL for user web browsers authenticating to web servers using certificates issued by webclient-ca
      Enabled: TRUE
      User category: all
      CAs: webclient-ca
      Profiles: IECUserRoles
    ```
    您可以直接使用新创建的 CA ACL。它在创建后默认启用。
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
CA ACL 的重点是指定允许哪些 CA
和配置文件组合用于来自特定主体或组的请求。CA ACL
不会影响证书验证或信任。它们不会影响签发的证书的使用方式。
:::
:::
:::
::: section
::: titlepage
# []{#restricting-an-application-to-trust-only-a-subset-of-certificates_configuring-and-managing-idm.html#obtain-service-cert-with-certmonger_restricting-an-application-to-trust-a-subset-of-certs}使用 certmonger 为服务获取 IdM 证书 {.title}
:::
为确保浏览器和在 IdM 客户端上运行的 Web 服务之间的通信安全且加密，请使用
TLS 证书。如果要将 Web 浏览器限制为信任 `webserver-ca`{.literal} 子 CA
发布但没有其它 IdM 子 CA 发布的证书，请从 `webserver-ca`{.literal} 子 CA
获取 Web 服务的 TLS 证书。
本节论述了如何使用 `certmonger 获取在`{.literal} IdM
客户端上运行的服务(`HTTP/my_company.idm.example.com`{.literal}@`IDM.EXAMPLE.COM`{.literal})的
IdM 证书。
使用 `证书监控`{.literal} 器自动请求证书意味着，`certmonger`{.literal}
在到期需要续订时管理和续订证书。
有关证书请求服务 `证书时`{.literal} 发生的情况，请参考
["请求服务证书的证书的通信流"一节](#restricting-an-application-to-trust-only-a-subset-of-certificates_configuring-and-managing-idm.html#communication-flow-certmonger-requesting-service-cert_restricting-an-application-to-trust-a-subset-of-certs "请求服务证书的证书的通信流"){.xref}。
::: itemizedlist
**先决条件**
-   Web 服务器已注册为 IdM 客户端。
-   您有正在运行的 IdM 客户端的 root 访问权限。
-   请求证书的服务不必在 IdM 中预先存在。
:::
::: orderedlist
**流程**
1.  在运行 `HTTP`{.literal}
    `服务的 my_company.idm.example.com`{.literal} IdM 客户端中，请求与
    `HTTP/PI:EMAIL`{.literal}
    主体对应的服务的证书，并指定：
    ::: itemizedlist
    -   证书将存储在本地 `/etc/pki/tls/certs/httpd.pem`{.literal} 文件中
    -   私钥存储在本地 `/etc/pki/tls/private/httpd.key`{.literal} 文件中
    -   The `webserver-ca`{.literal} 子 CA 将作为发行证书颁发机构
    -   将 `SubjectAltName`{.literal} 的 extensionRequest
        添加到签名请求中，其 DNS 名称为
        `my_company.idm.example.com`{.literal} ：
        ``` literallayout
        # ipa-getcert request -K HTTP/my_company.idm.example.com -k /etc/pki/tls/private/httpd.key -f /etc/pki/tls/certs/httpd.pem -g 2048 -D my_company.idm.example.com -X webserver-ca -C "systemctl restart httpd"
        New signing request "20190604065735" added.
        ```
        在以上命令中：
        ::: itemizedlist
        -   `ipa-getcert request`{.literal} 命令指定要从 IdM CA
            获取证书。`ipa-getcert request`{.literal} 命令是
            `getcert request -c IPA`{.literal} 的快捷方式。
        -   `g`{.literal} 选项指定要生成的密钥的大小（如果尚未到位）。
        -   D `选项指定`{.literal} 要添加到请求的
            `SubjectAltName`{.literal} DNS 值。
        -   `X 选项指定`{.literal} 证书的签发者必须是
            `webserver-ca，`{.literal} 而不是 `ipa`{.literal}。
        -   C `选项`{.literal} 指示
            `certmonger 在获取证书后重新启动`{.literal}
            `httpd`{.literal} 服务。
        :::
        ::: itemizedlist
        -   要指定证书与特定的配置集一起发布，请使用 `-T`{.literal}
            选项。
        :::
        ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
        ### 注意 {.title}
        RHEL 8 在 Apache 中使用与 RHEL 7 中使用的不同的 SSL 模块。SSL
        模块依赖于 OpenSSL 而不是 NSS。因此，在 RHEL 8 中，您无法使用
        NSS 数据库存储 `HTTPS`{.literal} 证书和私钥。
        :::
    :::
2.  （可选）检查请求的状态：
    ``` literallayout
    # ipa-getcert list -f /etc/pki/tls/certs/httpd.pem
    Number of certificates and requests being tracked: 3.
    Request ID '20190604065735':
        status: MONITORING
        stuck: no
        key pair storage: type=FILE,location='/etc/pki/tls/private/httpd.key'
        certificate: type=FILE,location='/etc/pki/tls/certs/httpd.crt'
        CA: IPA
        issuer: CN=WEBSERVER,O=IDM.EXAMPLE.COM
    [...]
    ```
    输出显示请求处于 MONITOR `ING`{.literal}
    状态，这表示已获取了证书。密钥对和证书的位置是请求的位置。
:::
:::
::: section
::: titlepage
# []{#restricting-an-application-to-trust-only-a-subset-of-certificates_configuring-and-managing-idm.html#communication-flow-certmonger-requesting-service-cert_restricting-an-application-to-trust-a-subset-of-certs}请求服务证书的证书的通信流 {.title}
:::
本节示意图显示当
`证书监控器从身份管理(IdM)证书颁发机构(CA)服务器请求`{.literal}
服务证书时所发生情况的阶段。序列由这些图表组成：
::: itemizedlist
-   [图 60.2
    "未加密的通信"](#restricting-an-application-to-trust-only-a-subset-of-certificates_configuring-and-managing-idm.html#restricting-an-application-to-trust-a-subset-of-certs_certmonger-service-cert-1 "图 60.2. 未加密的通信"){.xref}
-   [图 60.3 "Certmonger
    请求服务证书"](#restricting-an-application-to-trust-only-a-subset-of-certificates_configuring-and-managing-idm.html#restricting-an-application-to-trust-a-subset-of-certs_certmonger-service-cert-2 "图 60.3. Certmonger 请求服务证书"){.xref}
-   [图 60.4 "发布服务证书的 IdM
    CA"](#restricting-an-application-to-trust-only-a-subset-of-certificates_configuring-and-managing-idm.html#restricting-an-application-to-trust-a-subset-of-certs_certmonger-service-cert-3 "图 60.4. 发布服务证书的 IdM CA"){.xref}
-   [图 60.5 "Certmonger
    应用服务证书"](#restricting-an-application-to-trust-only-a-subset-of-certificates_configuring-and-managing-idm.html#restricting-an-application-to-trust-a-subset-of-certs_certmonger-service-cert-4 "图 60.5. Certmonger 应用服务证书"){.xref}
-   [图 60.6 "当旧证书即将过期时，Certmonger
    请求一个新证书"](#restricting-an-application-to-trust-only-a-subset-of-certificates_configuring-and-managing-idm.html#restricting-an-application-to-trust-a-subset-of-certs_certmonger-service-cert-5 "图 60.6. 当旧证书即将过期时，Certmonger 请求一个新证书"){.xref}
:::
在图中，`webserver-ca`{.literal} 子 CA 由通用 `IdM CA 服务器`{.literal}
表示。
[图 60.2
"未加密的通信"](#restricting-an-application-to-trust-only-a-subset-of-certificates_configuring-and-managing-idm.html#restricting-an-application-to-trust-a-subset-of-certs_certmonger-service-cert-1 "图 60.2. 未加密的通信"){.xref}
显示初始情况：没有 HTTPS 证书，Web 服务器和浏览器之间的通信将未加密。
::: figure
[]{#restricting-an-application-to-trust-only-a-subset-of-certificates_configuring-and-managing-idm.html#restricting-an-application-to-trust-a-subset-of-certs_certmonger-service-cert-1}
**图 60.2. 未加密的通信**
::: figure-contents
::: mediaobject
![显示运行 Apache Web 服务器和证书器服务的 IdM 客户端的示意图。浏览器和
Apache webserver 之间有箭头，显示它正通过未加密的 HTTP
连接进行连接。有从 certmonger 服务到 IdM CA
服务器的不活跃连接。](images/84_RHEL_IdM_0420_1.png)
:::
:::
:::
\
[图 60.3 "Certmonger
请求服务证书"](#restricting-an-application-to-trust-only-a-subset-of-certificates_configuring-and-managing-idm.html#restricting-an-application-to-trust-a-subset-of-certs_certmonger-service-cert-2 "图 60.3. Certmonger 请求服务证书"){.xref}
显示使用 `certmonger 为 Apache Web 服务器的手动`{.literal} 请求 HTTPS
证书的系统管理员。请注意，在请求 Web 服务器证书时，certmonger 不会直接与
CA 通信。它通过 IdM 代理。
::: figure
[]{#restricting-an-application-to-trust-only-a-subset-of-certificates_configuring-and-managing-idm.html#restricting-an-application-to-trust-a-subset-of-certs_certmonger-service-cert-2}
**图 60.3. Certmonger 请求服务证书**
::: figure-contents
::: mediaobject
![显示 IdM 客户端和 IdM CA 服务器上的 certmonger 服务和 IdM CA
服务器上的箭头图，以显示它正在通过 ipa-getcert
请求进行连接。](images/84_RHEL_IdM_0420_2.png)
:::
:::
:::
\
[图 60.4 "发布服务证书的 IdM
CA"](#restricting-an-application-to-trust-only-a-subset-of-certificates_configuring-and-managing-idm.html#restricting-an-application-to-trust-a-subset-of-certs_certmonger-service-cert-3 "图 60.4. 发布服务证书的 IdM CA"){.xref}
显示为 Web 服务器发布 HTTPS 证书的 IdM CA。
::: figure
[]{#restricting-an-application-to-trust-only-a-subset-of-certificates_configuring-and-managing-idm.html#restricting-an-application-to-trust-a-subset-of-certs_certmonger-service-cert-3}
**图 60.4. 发布服务证书的 IdM CA**
::: figure-contents
::: mediaobject
![显示 IdM CA 服务器和 IdM 客户端上的 certmonger 服务之间的箭头图 -
显示它正在连接并发送 HTTPS 证书。](images/84_RHEL_IdM_0420_3.png)
:::
:::
:::
\
[图 60.5 "Certmonger
应用服务证书"](#restricting-an-application-to-trust-only-a-subset-of-certificates_configuring-and-managing-idm.html#restricting-an-application-to-trust-a-subset-of-certs_certmonger-service-cert-4 "图 60.5. Certmonger 应用服务证书"){.xref}
显示 `证书将 HTTPS 证书放置`{.literal} 到 IdM
客户端上的相应位置；如果有指示，请重新启动 `httpd`{.literal} 服务。随后
Apache 服务器使用 HTTPS 证书来加密自身和浏览器之间的流量。
::: figure
[]{#restricting-an-application-to-trust-only-a-subset-of-certificates_configuring-and-managing-idm.html#restricting-an-application-to-trust-a-subset-of-certs_certmonger-service-cert-4}
**图 60.5. Certmonger 应用服务证书**
::: figure-contents
::: mediaobject
![显示分配给 Apache Web 服务器的 HTTPS
证书的镜像和分配给证书服务的镜像的示意图。浏览器和 Apache webserver
之间有箭头显示连接现在是加密的 HTTPS 连接。certmonger 服务和 IdM CA
服务器之间的连接不活跃。](images/84_RHEL_IdM_0420_4.png)
:::
:::
:::
\
[图 60.6 "当旧证书即将过期时，Certmonger