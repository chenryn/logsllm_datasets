Message
3
P
→
C
C
2
:
Message
Message
Message
Message
Message
M
essage
5
7
9
11
12
13
U
U
U
U
C
P
→
3
C
→
C
3
→
3
C
→
→
C
4
C
5
P
P
P
C
P
:
:
:
:
:
:
→
C
C
5
−
C
C
b
1
1
c
=
=
,
=
=
,
,
,
)
(
(cid:98)
(cid:97)
(cid:98)
url
1
C
Priv
}
K
url
callback
Priv
(cid:97)
Request S
(cid:97)
{
scope
N
callback
N
scope
(cid:97)
N
(cid:97)
SiginIn Q
3
(cid:97)
(
Delegate scop
(cid:97)
,
N N
b
(cid:97)
{ ,
, 1}
C N N N p
(cid:97)
(
e
N
p C
,
p
Delegat
(cid:120)
b C
(cid:98)
(cid:98)
(cid:98)
(
)
,
C
C
2
3
4
2
b
p
,
e C Ck
),
(cid:98)
Q C
3
K
−
1
c
scope
C
(cid:98)
(cid:98)
,
CC
5
)
5
Idealization  of  messages  1,  7  and  9  represents  user  actions 
performed in the protocol. Messages 2 and 12 are direct requests 
from C to P for request token and protected resource respectively. 
In  message  2,  the  set  of  privileges  Priv,  for  which  delegation  is 
required,  is  included.  In  message  12,  a  protected  resource 
requiring a privilege p1 ∈ Priv is requested. N1 and N2 are nonces 
(combination  of  a  timestamp  and  nonce  in  actual  protocol). 
Cookie  CkQ  represents  login  context  for  user  signed  in  as 
principal  Q  at  P.  When  P  returns  the  requested  resource  in 
message 13, it conveys to C that the verifier token corresponds to 
a valid delegation action.  
Apart  from  the more obvious assumptions about secure channels 
(C1-C5), knowledge of public keys, and freshness of nonces (N1 
and N2), we also make the following assumptions.   
≡
,
≡
≡
)
|
|
|
≡ ∀
≡ ∀
|
|
(cid:120)
(cid:120)
Reque
(cid:159)
|
(cid:159)
|
P N
p
P Ck
Q
)
(
Delegate Priv C
( )
SignIn Q
(
st S
(cid:20)
( ,
))
x Delegate r C
(cid:120)
( ,
)
)
egate r C
l
y De
(cid:120)
C N
b
,
(
,
C
x r P
,
,
(
C
y r P
These  include  association  of  secrets  Nb,  Np  and  cookie  Ckq  with  
the  user  actions  and  C’s  complete  trust  in  P  for  the  delegation 
action.  The  goal  of  the  protocol  is  as  specified  below.  (G1) 
ensures  that  the  delegation  was  performed  by  the  user  who  has 
previously  performed  the  sign-in  action  at  provider.  (G2)  is 
required to ensure that recipient of the service at Consumer in step 
14 has also performed the delegation action.  
)
C
(cid:20)
,
Delegate priv
C
(cid:20)
,
Delegate priv
P
Q
C U
(G1)
(G2)
|
|
(
(
)
≡
≡
C
4
We  now  present  our  belief  logic  analysis.  The  forward  chaining 
based analysis can be easily automated using existing approaches 
like [28], [23] as mentioned in Section 2. 
296
Message 2:  OAuth token request received at P.  
Combining  received  message  with  assumption  about  C’s  public 
key  using  R1,  followed  by  application  of  rule  R2  using 
assumption about freshness of N1.  
(cid:18)
{
P
1
N
P
,
|
P
|
≡
C
≡
=
scope
(cid:54)
(
scope
CK
≡
|
Priv,
C P
callback
|
≡
(cid:135)
N
1
=
url
}
Kc
−
1
C
( R1, R2)
=
Priv
,
callback
=
ur
l
)
c
Message 9: Delegation Action seen by P.  
First  apply  R7  to  establish  that  UC3  is  signed  in  as  Q  using 
presence  of  cookie  and  assumption  about  CkQ.  Next,  associate 
observed action with Q using R6.  
P
|
≡
P
(cid:43)
←→
U
C
3
P Ck
≡
|
Q
Si
gn
In Q P
(
)
(cid:18)
(cid:97)
Ck
(cid:98)
Q
C
3
(R7)
3
C
|
≡
P
(
U
P
SignedIn
P
(cid:20)
Message 11: Establish that 
,
)
Q
(cid:97)
Q
≡
|
U
←→
(cid:18)
,
Delegate Priv
P
C
3
(
(cid:97)
Delegate Pri
(cid:98)
)
C
C
3
,
v C
(cid:98)
)
C
3
(R6)
U
4C
 and 
U
b
4C
N(cid:134)
p
(R4.2).  
(
N(cid:134)
Message 13: Use R4.3 to establish that P believes about validity 
of  Np  and  then  use  C’s  trust  in  P  for  delegation  action  (R3). 
Finally, combine with conclusion of message 11 to infer that UC4 
has performed the delegation action.  
(cid:120)