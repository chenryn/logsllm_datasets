### Analysis of Graph Properties

We focus on three key graph properties: degree distribution, eigencentrality, and triangle count. The degree distribution represents the proportion of users with a specific degree across all possible degrees. Eigencentrality evaluates the influence or importance of each user in the graph by assigning a centrality score based on the eigenvector of the graph's adjacency matrix. Triangle count measures the number of triangles each user is part of, which reflects the connectivity of the graph [24].

We compute these properties for graphs \( G \), \( G_A \), and \( G_F \), and calculate the cosine similarity between the properties of \( G \) and \( G_A \), as well as between \( G \) and \( G_F \). Higher similarity indicates better utility. Figure 9 presents the results, showing a strong correlation.

### Utility Comparison

Figure 9 illustrates the utility of \( G_A \) and \( G_F \) in terms of eigencentrality and degree distribution for different datasets (Enron, NO, SNAP). The results show that:

- **Eigencentrality**: The utility of \( G_A \) and \( G_F \) is consistently high, indicating that the eigencentrality scores are well-preserved.
- **Degree Distribution**: The degree distribution also shows high similarity, suggesting that the degree structure is maintained.
- **Triangle Count**: The triangle count metric also demonstrates high similarity, reflecting the preservation of local clustering in the graph.

### Graph De-anonymization and Recovery

Several graph de-anonymization techniques have been proposed [43], [19], [33], [42]. It is important to note that graph de-anonymization is distinct from our graph recovery attack. De-anonymization aims to identify users in an anonymized graph, while our graph recovery focuses on detecting fake added edges. As shown in Section V, our graph recovery can degrade the privacy guarantees of anonymized graphs. However, it does not enhance the performance of de-anonymization attacks like the NS-attack, because these attacks typically assume a stronger attack model than those considered in graph anonymization mechanisms. Therefore, we propose privacy loss metrics tailored to k-DA and SalaDP, which we believe are more appropriate. Our enhanced anonymization mechanisms, inspired by our graph recovery attack, significantly reduce the success rate of graph de-anonymization.

### Conclusion

In this paper, we identify a fundamental vulnerability in existing graph anonymization mechanisms, which do not account for key structural characteristics when adding fake edges. We propose an edge plausibility metric based on graph embedding to exploit this weakness and identify fake edges. Extensive experiments show that using this metric, we can recover the original graph from an anonymized graph to a large extent, resulting in significant privacy damage. To mitigate this, we propose enhancements to the existing anonymization mechanisms. Our experiments demonstrate that these enhanced mechanisms significantly reduce the performance of our graph recovery attack, increase resistance to graph de-anonymization, and provide better graph utility.

### Acknowledgment

We thank the anonymous reviewers and our shepherd, Anupam Das, for their valuable feedback and guidance.

### References

[References listed as provided]

---

This revised version is more structured and coherent, with clear headings and a logical flow. The text is also more concise and professional, making it easier to understand and follow.