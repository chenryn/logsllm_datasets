            gid: 10011
          - name: idm_user_3
            first: Eve
            last: Acme
            uid: 1000111
            gid: 10011
    ```
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    如果没有指定 [**update_password: on_create**]{.strong} 选项，Ansible
    每次运行 playbook 时都会重新设置用户密码：如果用户自上次运行
    playbook 起更改了密码，则 Ansible 重新设置密码。
    :::
3.  运行 playbook：
    ``` literallayout
    $ ansible-playbook -v -i path_to_inventory_directory/inventory.file path_to_playbooks_directory/add-users.yml
    ```
:::
::: itemizedlist
**验证步骤**
-   您可以使用 `ipa user-show`{.literal} 命令验证用户帐户是否存在于 IdM
    中：
    ::: orderedlist
    1.  以管理员身份登录到 `ipaserver`{.literal}：
        ``` literallayout
        $ ssh PI:EMAIL
        Password:
        [admin@server /]$
        ```
    2.  显示有关 [*idm_user_1*]{.emphasis} 的信息：
        ``` literallayout
        $ ipa user-show idm_user_1
          User login: idm_user_1
          First name: Alice
          Last name: Acme
          Password: True
          ....
        ```
    :::
    IdM 中存在名为 [*idm_user_1*]{.emphasis} 的用户。
:::
:::
::: section
::: titlepage
# []{#managing-user-accounts-using-Ansible-playbooks_managing-users-groups-hosts.html#ensuring-the-presence-of-multiple-IdM-users-from-a-json-file-using-Ansible-playbooks_managing-idm-users-using-Ansible-playbooks}使用 Ansible playbook 确保存在 JSON 文件中的多个 IdM 用户 {.title}
:::
以下流程描述了如何使用 Ansible playbook 确保在 IdM
中存在多个用户。用户存储在 `JSON`{.literal} 文件中。
::: itemizedlist
**先决条件**
-   您知道 IdM 管理员密码。
-   您已在 Ansible 控制器上安装了
    [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包。
:::
::: orderedlist
**步骤**
1.  创建一个清单文件，如 `inventory.file`{.literal}，并在该文件中定义
    `ipaserver`{.literal} ：
    ``` literallayout
    [ipaserver]
    server.idm.example.com
    ```
2.  创建包含必要任务的 Ansible playbook
    文件。使用您要确保存在的用户数据引用 `JSON`{.literal}
    文件。要简化此步骤，您可以复制并修改
    `/usr/share/doc/ansible-freeipa/ensure-users-present-ymlfile.yml`{.literal}
    文件中的示例：
    ``` programlisting
    ---
    - name: Ensure users' presence
      hosts: ipaserver
      become: true
      tasks:
      - name: Include users.json
        include_vars:
          file: users.json
      - name: Users present
        ipauser:
          ipaadmin_password: MySecret123
          users: "{{ users }}"
    ```
3.  创建 `users.json`{.literal} 文件，并将 IdM
    用户添加到其中。要简化此步骤，您可以复制并修改
    `/usr/share/doc/ansible-freeipa/playbooks/user/users.json`{.literal}
    文件中的示例。例如，要创建用户
    [*idm_user_1*]{.emphasis}、[*idm_user_2*]{.emphasis} 和
    [*idm_user_3*]{.emphasis}，并添加 [*Password123*]{.emphasis}
    作为密码 [*idm_user_1*]{.emphasis} ：
    ``` programlisting
    {
      "users": [
       {
        "name": "idm_user_1",
        "first": "Alice",
        "last": "Acme",
        "password": "Password123"
       },
       {
        "name": "idm_user_2",
        "first": "Bob",
        "last": "Acme"
       },
       {
        "name": "idm_user_3",
        "first": "Eve",
        "last": "Acme"
       }
      ]
    }
    ```
4.  运行指定 playbook 文件和清单文件的 Ansible playbook：
    ``` literallayout
    $ ansible-playbook -v -i path_to_inventory_directory/inventory.file path_to_playbooks_directory/ensure-users-present-jsonfile.yml
    ```
:::
::: itemizedlist
**验证步骤**
-   您可以使用 `ipa user-show`{.literal} 命令验证 IdM
    中是否存在用户帐户：
    ::: orderedlist
    1.  以管理员身份登录到 `ipaserver`{.literal}：
        ``` literallayout
        $ ssh PI:EMAIL
        Password:
        [admin@server /]$
        ```
    2.  显示有关 [*idm_user_1*]{.emphasis} 的信息：
        ``` literallayout
        $ ipa user-show idm_user_1
          User login: idm_user_1
          First name: Alice
          Last name: Acme
          Password: True
          ....
        ```
    :::
    IdM 中存在名为 [*idm_user_1*]{.emphasis} 的用户。
:::
:::
::: section
::: titlepage
# []{#managing-user-accounts-using-Ansible-playbooks_managing-users-groups-hosts.html#ensuring-the-absence-of-users-using-Ansible-playbooks_managing-idm-users-using-Ansible-playbooks}确保没有用户使用 Ansible playbook {.title}
:::
以下流程描述了如何使用 Ansible playbook 来确保 IdM 中没有特定用户。
::: itemizedlist
**先决条件**
-   您知道 IdM 管理员密码。
-   您已在 Ansible 控制器上安装了
    [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包。
:::
::: orderedlist
**步骤**
1.  创建一个清单文件，如 `inventory.file`{.literal}，并在该文件中定义
    `ipaserver`{.literal} ：
    ``` literallayout
    [ipaserver]
    server.idm.example.com
    ```
2.  创建 Ansible playbook 文件，使其包含没有 IdM
    的用户。要简化此步骤，您可以复制并修改
    `/usr/share/doc/ansible-freeipa/playbooks/user/ensure-users-present.yml`{.literal}
    文件中的示例。例如，要删除用户
    [*idm_user_1*]{.emphasis}、[*idm_user_2*]{.emphasis} 和
    [*idm_user_3*]{.emphasis} ：
    ``` programlisting
    ---
    - name: Playbook to handle users
      hosts: ipaserver
      become: true
      tasks:
      - name: Delete users idm_user_1, idm_user_2, idm_user_3
        ipauser:
          ipaadmin_password: MySecret123
          users:
          - name: idm_user_1
          - name: idm_user_2
          - name: idm_user_3
          state: absent
    ```
3.  运行指定 playbook 文件和清单文件的 Ansible playbook：
    ``` literallayout
    $ ansible-playbook -v -i path_to_inventory_directory/inventory.file path_to_playbooks_directory/delete-users.yml
    ```
:::
::: title
**验证步骤**
:::
您可以使用 `ipa user-show`{.literal} 命令验证 IdM 中是否不存在用户帐户：
::: orderedlist
1.  以管理员身份登录到 `ipaserver`{.literal}：
    ``` literallayout
    $ ssh PI:EMAIL
    Password:
    [admin@server /]$
    ```
2.  请求有关 [*idm_user_1*]{.emphasis} 的信息：
    ``` literallayout
    $ ipa user-show idm_user_1
    ipa: ERROR: idm_user_1: user not found
    ```
    IdM 中不存在名为 [*idm_user_1*]{.emphasis} 的用户。
:::
:::
::: section
::: titlepage
# []{#managing-user-accounts-using-Ansible-playbooks_managing-users-groups-hosts.html#_additional_resources}其他资源 {.title}
:::
::: itemizedlist
-   请参阅 `/usr/share/doc/ansible-freeipa/`{.literal} 目录中的
    `README-user.md`{.literal} Markdown 文件。
-   请参阅 `/usr/share/doc/ansible-freeipa/playbooks/user`{.literal}
    目录中的 Ansible playbook 示例。
:::
:::
:::
[]{#granting-sudo-access-to-an-IdM-user-on-an-IdM-client_managing-users-groups-hosts.html}
::: chapter
::: titlepage
# []{#granting-sudo-access-to-an-IdM-user-on-an-IdM-client_managing-users-groups-hosts.html#granting-sudo-access-to-an-IdM-user-on-an-IdM-client_managing-users-groups-hosts}第 5 章 为 IdM 客户端上的 IdM 用户授予 sudo 访问权限 {.title}
:::
本节论述了如何为身份管理中的用户授予 `sudo`{.literal} 访问权限。
::: section
::: titlepage
# []{#granting-sudo-access-to-an-IdM-user-on-an-IdM-client_managing-users-groups-hosts.html#sudo-access-on-an-IdM-client_granting-sudo-access-to-an-IdM-user-on-an-IdM-client}IdM 客户端上的 sudo 访问权限 {.title}
:::
系统管理员可以授予 `sudo`{.literal} 访问权限，以允许非 root
用户执行通常为 `root`{.literal}
用户保留的管理命令。因此，当用户需要执行通常为 `root`{.literal}
用户保留的管理命令时，他们会在此命令前面使用
`sudo`{.literal}。输入密码后，将像 `root`{.literal} 用户一样执行
命令。要将 `sudo`{.literal}
命令作为另一个用户或组（如数据库服务帐户）执行，您可以为
`sudo`{.literal} 规则配置 [*RunAs 别名*]{.emphasis}。
如果 Red Hat Enterprise Linux (RHEL) 8 主机注册为 Identity Management
(IdM) 客户端，您可以指定 `sudo`{.literal} 规则来定义哪些 IdM
用户可以在主机上执行哪些命令：
::: itemizedlist
-   本地的 `/etc/sudoers`{.literal} 文件中
-   集中在 IdM 中
:::
本节论述了使用命令行界面 (CLI) 和 IdM Web UI 为 IdM 客户端创建 [**中央
`sudo`{.literal} 规则**]{.strong}。
您还可以使用通用安全服务应用程序编程接口 (GSSAPI) 为 `sudo`{.literal}
配置免密码身份验证，这是基于 UNIX 的操作系统访问和验证 Kerberos
服务的本地方式。您可以使用 `pam_sss_gss.so`{.literal} 可插拔验证模块
(PAM) 通过 SSSD 服务调用 GSSAPI 身份验证，允许用户通过有效的 Kerberos
票据向 `sudo`{.literal} 命令进行身份验证。
::: itemizedlist
**其他资源**
-   [请参阅管理 sudo
    访问](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_basic_system_settings/index#managing-sudo-access-from-the-command-line_managing-user-and-group-accounts){.link}。
:::
:::
::: section
::: titlepage
# []{#granting-sudo-access-to-an-IdM-user-on-an-IdM-client_managing-users-groups-hosts.html#proc_granting-sudo-access-to-an-idm-user-on-an-idm-client-using-the-cli_granting-sudo-access-to-an-IdM-user-on-an-IdM-client}使用 CLI 向 IdM 客户端上的 IdM 用户授予 sudo 访问权限 {.title}
:::
在 Identity Management (IdM) 中，您可以将特定命令的 `sudo`{.literal}
访问权限授予特定 IdM 主机上的 IdM 用户帐户。首先，添加 `sudo`{.literal}
命令，然后为一个或多个命令创建 `sudo`{.literal} 规则。
例如，完成这个过程以创建 `idm_user_reboot`{.literal} `sudo`{.literal}
规则，为 `idm_user`{.literal} 帐户授予在 `idmclient`{.literal}
机器上运行 `/usr/sbin/reboot`{.literal} 命令的权限。