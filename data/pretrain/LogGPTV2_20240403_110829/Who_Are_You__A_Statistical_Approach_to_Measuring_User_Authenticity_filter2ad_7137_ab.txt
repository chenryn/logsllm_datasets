date of birth). In this case, one should consider two different
thresholds θu > θd such that:
A , if gu(x) > θu ,
F , if θd ≤ gu(x) ≤ θu ,
L , if gu(x)  0 ,
otherwise ,
(8)
(cid:88)
k∈Hk
h(cid:48)
pk(x) =
p(x|h(cid:48)
k)p(h(cid:48)
k) = p(x|hk)p(hk) ,
(9)
4
k represents a conditioning event, taking values in Hk.
where h(cid:48)
The index k corresponds to the level of the observation, with
higher values denoting more granular levels; e.g., level k = 1
may correspond to countries, and level k = 2 to ISPs. The level
k = 0, discussed above, involves all login attempts, and we
thus name it the world level. In addition, we create a top level
(cid:96) ((cid:96) = 3 in our example) representing the IP itself, in which
case h(cid:96) = x. Notice that, if IP x belongs to ISP (or country)
hk, the probability of seeing x coming from a different ISP
(or country) h(cid:48)
k is zero, and this is why the marginalization
in (9) yields pk(x) = p(x|hk)p(hk).
We can now smooth p(x|hk) by deﬁning pk(x|hk) analo-
gously to Eq. (8), replacing N by the number of logins Nhk
seen from the ISP (or country) hk, and M by the number Mhk
of unseen IPs from ISP (or country) hk. The ML estimate of
p(hk) is kept unsmoothed, and it is thus zero for unseen ISPs
(or countries).2 In this way, higher probabilities are assigned
to unseen IPs coming from known ISPs or countries; Fig. 1
provides a concrete example.
In order to have a consistent number of unseen IPs at each
level k, for 0 ≤ k  0 ,
if c(h(cid:96)−1) > 0 ,
otherwise.
(10)
Since granularity increases with k (e.g., for IP addresses
k = 0 is the world level k = (cid:96) is the IP level), Eq. (10)
tells us to use the estimate from the most granular level for
2Note that, if smoothing is not applied, all the estimates pk(x) will be equal
to the ML estimate p(x).
Fig. 1: An example of smoothing probability estimates for unseen IPs, involving 3 countries (C), 5 ISPs (ISP), and 9 known IPs
(IP). Unseen events are shown in red. The counts c(·) for each element are reported in parentheses; e.g., ISP(2)
4 means that ISP4
has been seen twice. Assuming one unseen IP per known ISP, unknown ISP and known country, and both unknown ISP and
country, we have a total number M = 5 + 3 + 1 = 9 of unseen IPs (denoted with IPu). According to Eq. (8), given N = M = 9,
for an unseen IP, p0(x) = 1
9 (the
ﬁrst term is the smoothed estimate p(x|hk) including unseen events), while if it comes from C3, p1(x) = 1
3 × 1
9. For ISP-based
9. This value is higher than the probability of an unseen
estimates (k = 2), if the unseen IP comes from ISP1, then p2(x) = 1
8 × 5
IP from ISP5, i.e., p1(x) = 1
18.
9 > p0(x) = 1
However, for an unseen IP from both unseen ISP and country, we have that p0(x) = 1/18, and p1 = p2 = 0.
18. For country-based estimates (k = 1), an unseen IP coming from C1 has p1(x) = 1
9. For an unseen IP from ISP1, we have: p2(x) = 1
9 > p1(x) = 1
8 × 5
2 × 1
4 × 3
4 × 3
that(cid:80)
which sample data exists. Here the coefﬁcients α0, . . . , α(cid:96) are
normalization factors that can be computed ofﬂine to ensure
x pbo(x) = 1 (see, e.g., [14] for details).
Recall from our discussion of smoothing above, we have
pk(x) = p(x|hk)p(hk), with p(x|hk) the smoothed estimate
of seeing the IP x in the entity hk, and p(hk) the unsmoothed
estimate of seeing the entity hk. Our deﬁnition of pbo(x) in
(10) implies that in the two extreme cases we use two different
IP-level estimates: if IP x has been seen, then we use the
unsmoothed estimate p(cid:96)(x) = p(h(cid:96)) = c(x)/N, while if x
comes from an unseen country, then we use the smoothed
estimate p0(x) = p(x|world) = c(x)/(N + M ).
Linear Interpolation. Another method for aggregating the
different estimates pk(x) is to linearly combine them as:
plinear(x) =
λkpk(x) ,
(11)
k=0
the constraint that (cid:80)(cid:96)
where the coefﬁcients {λk}(cid:96)
k=0 are learned using a held-
out set to maximize the likelihood over unseen data, under
k=0 λk = 1 (to ensure that the total
probability mass sums up to one). The detailed procedure is
given as Algorithm 1.
Similar procedures can be exploited for events conditioned
to a given user and to the class of legitimate logins, i.e.,
to estimate p(x|u, L), restricting the available counts to the
conditioning events.