### Team Members and Contributions

The team included Hammonds, Pete Tasker, Dan Edwards, Mario Tinto, Roger Schell, Jim Anderson, Ted Lee, Steve Lipner, Clark Weissman, Steve Walker, Larry Noble, Jim Studer, Gene Epperly, Jeff Makey, Warren Shadle, and myself. David Bell made significant contributions after joining the Centerâ€™s research organization. We later realized that no experts in contractual law were involved in the writing group or the formal review process.

### Challenges and Delays

Our schedule experienced significant and continuous delays. Comments often turned into lobbying efforts. Developers aimed to ensure their products received the best possible ratings, which helped in eliminating ambiguously-worded requirements. A series of drafts was published, each with numbered lines, bold-faced insertions, and strikeout deletions to aid reviewers in tracking the document's evolution. Drafts were released on November 15, 1982 (white cover), January 15, 1983, and a final draft (in an olive drab cover) on January 27, 1983.

### Managing Feedback

Brand maintained a growing file of comments and how each was addressed. Rejected comments were noted, and justifications were provided based on the source's credibility. Due to the volume of feedback, Brand insisted that references to dominance in the security lattice be replaced with explicit rules for reading and modifying objects. This decision aided readers unfamiliar with lattice theory and removed ambiguities the authors had not initially perceived.

### Definition and Removal of Class (A2)

The definition of Class (A2) persisted until January 1983 but was eventually removed because it included requirements beyond the state of the art. It was replaced by a page titled "Beyond Class (A1)" that outlined potential requirements for higher assurance. Some team members opposed this change, arguing that including features without supportive assurances would provide vendors with meaningless hype. However, the majority prevailed on this issue.

### Final Publication

The final draft generated a broader stream of comments. Sheila Brand made a management decision to resolve the remaining open issues and advised Mel Klein to publish CSC-STD-001-83, The Department of Defense Trusted Computer System Evaluation Criteria. This document, with a bright orange cover and a forward by Klein, was published on August 15, 1983, and weighed in at 117 pages.

### Product Evaluations

Several trusted products were being evaluated against drafts of the criteria during this period. Initially, vendors insisted that the draft version be explicitly identified in their contracts and final evaluation reports. However, they later realized that evaluation against any but the final published standard would be a mistake, as it would appear they failed to meet the "real" requirements. Thus, products were evaluated against a moving target from early 1982 through August 15, 1983.

### Lack of Deeper Understanding

We believed we understood what we were writing and that the community would understand our intentions. Experience, however, showed that precision was lacking. We were dedicated to avoiding faddish requirements, ensuring each had an identifiable need and technical justification. We paid attention to entry-level criteria, aiming to make them achievable from well-designed products. This sometimes led to the appearance of random placement of some requirements.

### Example: DAC Requirement

An example is the placement of the first change in the DAC requirement after Class (C2). This requirement, introduced at Class (B3), specifies the use of access control lists, support for individual and group access controls, and the ability to specify named individuals and groups with no access to an object. Dan Edwards argued that this could not be introduced at B1 or B2 due to the difficulty in meeting other requirements, leaving the choice between C2 or B3. We decided audit was a hard enough addition to C1, narrowing the choice to B3.

### DAC Algebra and Conflicts

We later found that the choice for Negative Access Control Lists (NACLs) was incorrect. We should have either not added them or proposed a model showing the relationship between ACLs and NACLs for community comment. Issues arose, such as determining precedence when a name appears on both a NACL and an ACL. These problems were never satisfactorily resolved.

### High-Assurance DAC and MAC

Discretionary access control (DAC) conveys rights between unlabeled subjects and objects. Under the MAC *-property, copying contents between A and B is prohibited unless they are at compatible security levels. However, this leads to a conflict between information flow and security policy. Some evaluators interpreted the TCSEC's explicit wording over mathematical properties, leading to assumptions that an A1 system is more secure for single-level applications than a C2 system, which is not necessarily true.

### Failed Examples and Imprecise Language

Worked examples in the Powder Blue Draft were forgotten. RACF, the prototype for C2 audit, failed its defining requirement due to IBM's performance concerns, resulting in a C1 rating. A trusted UNIX candidate for B1 or B2 would have been disqualified due to its access control form. KVM/370 and another A1 candidate also failed due to deficiencies in C2 and C1 requirements. Imprecise language in the TCSEC, such as the C2 System Architecture requirement, caused significant delays and cost in evaluations.

### Official Comments and Concerns

Copies of CSC-STD-001 were distributed for official comment, and a tidal wave of feedback followed. Some agencies objected that the TCSEC would stifle research and experimentation. Others were concerned about the impact on embedded systems and multilevel classification systems. One agency insisted on the inclusion of a new class, C3, to support their policy needs. We spent a summer and fall in heated meetings with executives, repeatedly explaining and defending the TCSEC requirements.