---
author: Red Hat
category: 代码英雄
comments_data: []
count:
  commentnum: 0
  favtimes: 0
  likes: 0
  sharetimes: 0
  viewnum: 4235
date: '2020-08-18 18:23:13'
editorchoice: false
excerpt: 《代码英雄》讲述了开发人员、程序员、黑客、极客和开源反叛者如何彻底改变技术前景的真实史诗。
fromurl: https://www.redhat.com/en/command-line-heroes/season-1/devops-tear-down-that-wall
id: 12529
islctt: true
largepic: /data/attachment/album/202008/18/182320m8u45vzzn3663k5w.png
permalink: /article-12529-1.html
pic: /data/attachment/album/202008/18/182320m8u45vzzn3663k5w.png.thumb.jpg
related:
- displayorder: 0
  raid: 12514
- displayorder: 0
  raid: 12535
reviewer: wxy
selector: bestony
summary: 《代码英雄》讲述了开发人员、程序员、黑客、极客和开源反叛者如何彻底改变技术前景的真实史诗。
tags:
- DevOps
- 代码英雄
thumb: false
title: 《代码英雄》第一季（4）：DevOps，拆掉那堵墙
titlepic: true
translator: LikChung
updated: '2020-08-18 18:23:13'
---

> 《代码英雄》讲述了开发人员、程序员、黑客、极客和开源反叛者如何彻底改变技术前景的真实史诗。

**什么是《代码英雄》**

《代码英雄》（Command Line Heroes）是由世界领先的企业级开源软件解决方案供应商红帽（Red Hat）精心打造的原创音频播客。该节目通过邀请谷歌、NASA 等重量级企业的众多技术专家，共同讲述开源、操作系统、容器、DevOps 和混合云等领域的动人故事，展示了这些领域的发展历程。

![](/data/attachment/album/202008/18/182320m8u45vzzn3663k5w.png)

本文是《[代码英雄](https://www.redhat.com/en/command-line-heroes)》系列播客 [第一季（4）：DevOps，拆掉那堵墙](https://www.redhat.com/en/command-line-heroes/season-1/devops-tear-down-that-wall) 的音频脚本。

当应用开发的争斗暂告一段落，横亘在开发者与运维之间的那堵墙开始崩塌。随着这堵墙逐渐倒塌，双方都必须学会如何合作，并变得更加亲密无间。

那么，到底什么是 DevOps？来自微软的 Scott Hanselman 和 Cindy Sridharan（即 @copyconstruct）从开发者的角度认为，DevOps 是一种实践方法。而运维团队则一直在努力捍卫他们的职责。尽管双方仍然存在差异，但 DevOps 的出现使得大家的合作效率显著提高。这集节目探讨了这种方法的重要性及其对各方的影响。

**Saron Yitbarek**：想象这样一堵墙：它从你目之所及的最右侧延伸到最左侧。墙比你高，你无法看到墙的另一侧。你知道墙的另一侧有很多人，但你不清楚他们是否和你一样，也不清楚他们是敌是友。

**Gordon Haff**：开发者编写代码，然后将代码“扔过”墙给运维，之后发生的问题都是运维的责任。

**Richard Henshall**：他们随心所欲，并不真正关心服务质量。

**Sandra Henry-Stocker**：墙两边的人几乎做着相反的工作——一方做出改变，另一方尽可能抵制这些改变。

**Richard Henshall**：但他们从未在同一幅蓝图中规划过共同的目标。

**Saron Yitbarek**：我是 Saron Yitbarek，这里是《代码英雄》，由红帽公司推出的原创播客栏目。第四期，我们的标题是《DevOps，拆掉那堵墙》。

数十年来，IT 界一直被划分为各种角色。一边是开发者，他们追求快速创新；另一边是运维团队，他们致力于防止过多的变化。与此同时，代码在缺乏充分沟通的情况下被盲目地“扔过”两方之间的墙。怎样才能拆除这堵墙呢？这需要一个重大的转变。

**Saron Yitbarek**：开源运动震撼了整个战场。[上一期](/article-12508-1.html)，我们看到了新的敏捷方法论，它强调持续迭代改进。这种对速度的要求迫使我们改变彼此的工作方式。一群孤立工作的人的速度是有极限的，而这个极限是一个问题，因为……

**Richard Henshall**：为了更快地将产品推向市场，提高敏捷性，进行更多的迭代，而不是长期而大量的工作。

**Saron Yitbarek**：Richard Henshall 是 Ansible 的产品经理。

**Richard Henshall**：还记得以前下单购买服务器，四个月后才能到货。所有东西都整合在一起，所以整个堆栈是一个整体，要花几年时间来设计和建造那些东西。现在这种情况已经不存在了，对于很多组织来说，这种方法已经……已经寿终正寝，偶尔拿过来试试，然后放弃它。

**Saron Yitbarek**：如今，像亚马逊这样的公司每分钟都会部署几次新的代码。用按部就班的瀑布式工作流简直不可能完成这些工作。因此，为了继续快速完成工作，运维团队不得不忽略稳定性、安全性和可靠性方面的顾虑。

同时，开发者也没有意识到他们的责任是创造真实环境中可用的代码。开发者对稳定性和安全性毫无兴趣，但这些恰恰是我们需要解决的问题。因此，我们最终会有很多无谓的修改，在双方之间来回折腾。

想象一下过度分工会如何拖慢公司的效率，但开发者很少被鼓励思考除代码之外的其他事务。

**Sandra Henry-Stocker**：他们的目录规模只会越来越臃肿，但他们从不清理。除非已经无法工作才不得不清理。

**Saron Yitbarek**：Sandra Henry-Stocker 是一位退休的系统管理员，为 IDG 杂志撰稿。

**Sandra Henry-Stocker**：我过去经常劝说别人，“嘿，你看，你用了这么多的磁盘空间。是不是有什么东西你可以整理一下，这样我们就有更多的存储空间来运行了——因为服务器上的存储空间快用完了。”是的，我们经常经历这些事。

**Saron Yitbarek**：归根结底，这是一个心态问题。这种开发者和运维之间的态度分裂，导致一方不必去理解另一方的担忧。在过去，这还没太大问题，但随着开发速度成为一种重要的优势，这种分裂的文化急需改进。孤立在自己的工作圈子里，效率太低了。

---

通过优化后的文本更加清晰、连贯和专业，更好地传达了原文的主要信息。