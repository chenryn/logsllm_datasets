e
m
T
i
106
105
104
103
102
112
128
192
Security level (bits)
112
128
192
Security level (bits)
Figure 4: The amount of data transmitted increases signiﬁ-
cantly with higher security levels. Φdre and Spawn require sig-
niﬁcantly more transmissions than Φidre or RSDAKE.
Figure 6: Over a low-bandwidth and high-latency connection,
the network signiﬁcantly affects performance. RSDAKE and
Spawn perform the best at 112- and 128-bit security levels.
As shown in Figure 5, RSDAKE and Spawn are roughly an order
of magnitude more expensive than Φdre and Φidre. The ring signa-
ture scheme used by both RSDAKE and Spawn is to blame for this
disparity. As we mentioned in Section 8.1, the Shacham-Waters
scheme used in our implementation makes use of composite-order
bilinear groups. Operations in this group setting are much more
expensive than operations in the prime-order elliptic curve groups
used by Φdre and Φidre. RSDAKE suffers more from this expense
than Spawn because RSDAKE requires two ring signatures.
Φdre
Φidre
RSDAKE
Spawn
)
s
m
(
e
m
T
i
106
105
104
103
102
112
128
192
Security level (bits)
Figure 5: Over a high-bandwidth connection with no latency,
the cryptographic overhead of each protocol is clear. The use
of ring signatures negatively affects RSDAKE and Spawn.
increased. Since the Shacham-Waters ring signature scheme used
by RSDAKE requires composite-order bilinear groups, the relative
ease of the integer factorization problem requires that the size of
group elements increases with approximately the cube of the secu-
rity level. As a result, the two ring signatures exchanged within
RSDAKE rapidly grow in size with heightened security. Nonethe-
less, RSDAKE never approaches the transmission costs of Φdre or
Spawn, even at the 192-bit security level.
8.2 Time Complexity vs. Security Level
As the desired security level increases, all four schemes require
increasingly expensive cryptographic operations. To understand
the impact of security levels on the time complexity of the algo-
rithms, we focus on the simulation with minimal impact from net-
work conditions. Figure 5 shows the amount of time required to
complete a session of each protocol when the parties are connected
through a 10 Gib/s channel with no latency; the resulting delays are
directly indicative each scheme’s cryptographic overhead.
Both Φdre and Φidre are extremely computationally efﬁcient,
requiring less than one second to complete at the 112- and 128-
bit security levels. However, in this fast network environment, the
interactive DRE scheme used by Φidre scales better than the Chow-
Franklin-Zhang scheme used by Φdre. At the 128- and 192-bit
security levels, Φidre requires the least amount of time to complete.
This performance improvement can be attributed to the direct use of
elliptic curve groups by the Cramer-Shoup scheme in Φidre, rather
than the use of pairing-based cryptography in Φdre.
It is also useful to understand how the schemes react to poor
network conditions. Figure 6 shows the total time required to com-
plete a session of each protocol when the parties are communicat-
ing across a 50 Kib/s connection with 2 seconds of latency. This
simulation models an extremely poor network environment that is
effectively a worst-case scenario for the protocols; the primary use
of this model is to provide insight into how the protocols behave
under difﬁcult network conditions.
The poor performance of the network connection depicted in
Figure 6 dominates the cost of all four protocols. Despite requir-
ing nine message ﬂows to complete, Φidre performs comparatively
well in this high-latency environment. Φidre is the most scalable
protocol; since it only requires operations in small elliptic curve
groups, the cryptographic overhead is relatively constant. Φdre
performs the worst at all security levels since it makes use of the
Chow-Franklin-Zhang DRE scheme three times, which imposes
high bandwidth costs. Spawn generally performs well since it only
requires two message ﬂows to complete, but it is still slower than
RSDAKE at 128- and 192-bit security levels due to its use of the
Chow-Franklin-Zhang DRE scheme. RSDAKE is the most efﬁ-
cient protocol at the 112- and 128-bit security levels. At the 192-bit
security level, the performance of RSDAKE and Spawn is impacted
by the computational costs of the Shacham-Waters ring signature
scheme. Consequently, Φidre performs signiﬁcantly better than all
other protocols at the 192-bit security level.
In the thesis, we examine the scalability of the algorithms with
respect to network latency and bandwidth at various security lev-
els [27, §4.3]. As a two-ﬂow protocol, Spawn scales the best as
latency increases. Φidre scales the worst with increasing latency
since it requires nine ﬂows. The performance of Φdre and Spawn
begin to deteriorate rapidly as channel bandwidth decreases below
5 Mib/s, especially at higher security levels.
9. CONCLUSION
When choosing a protocol to use in a real-world application,
developers should consider their security and performance needs.
Φdre, RSDAKE, and Spawn have different security and usability
properties, and thus are best suited for different environments.
We have introduced Spawn, the ﬁrst protocol with strong de-
niability properties and forward secrecy that can be used in non-
interactive environments. Spawn also requires the fewest number
of ﬂows. Although non-interactive Spawn does not provide online
repudiation with respect to R simulating I (see Section 6.5), it still
provides improved deniability properties compared to 3-DH. When
a practitioner only needs to support interactive environments, more
choices are available: Spawn is useful in interactive environments
where the weaknesses described in Section 6.3 and Section 6.4 are
not a concern; Φdre and our newly deﬁned RSDAKE scheme can
both be used interactively and offer the same security properties,
but RSDAKE offers some additional features. Unlike Φdre, RS-
DAKE is a contributory key exchange proven secure in the post-
speciﬁed peer setting.
It is also important to understand how the schemes perform in
practice under various network conditions. Our evaluation pre-
sented in Section 8 is meant to serve as a guideline for real-world
performance expectations. When implemented using primitives se-
cure under only standard-model assumptions, Φidre and RSDAKE
are the best choices for bandwidth-constrained environments such
as mobile data connections. Φdre and Φidre are better suited for
use over large and fast connections. Only Spawn supports non-
interactive environments, irrespective of their network characteris-
tics. If a practitioner is willing to make use of schemes that depend
on random oracles for security, then the performance of all four
protocols can be greatly improved.
Deniability of secure messaging schemes remains a research area
with many unsolved problems. The most appropriate deﬁnition of
deniability to use when constructing protocols is not yet agreed
upon; speciﬁcally, very few publications consider online repudi-
ation during analysis of their designs. While we suspect that weak
forward secrecy and online repudiation are mutually exclusive in
the non-interactive setting, the conjecture in Section 6.6 remains
unproven. Finally, although we provide proof-of-concept imple-
mentations of our new DAKE protocols, adoption by end-user tools
may be encouraged by integrating these implementations with a
higher-level popular cryptographic library.
10. ACKNOWLEDGMENTS
The authors would like to thank the anonymous reviewers for
their insightful comments and feedback. We gratefully acknowl-
edge the support of NSERC and the Ontario Research Fund.
11. REFERENCES
[1] M. Bellare, D. Pointcheval, and P. Rogaway. Authenticated
Key Exchange Secure Against Dictionary Attacks. In
Advances in Cryptology–EUROCRYPT, pages 139–155.
Springer, 2000.
[2] A. Bender, J. Katz, and R. Morselli. Ring Signatures:
Stronger Deﬁnitions, and Constructions without Random
Oracles. In Theory of Cryptography, pages 60–79. Springer,
2006.
[3] N. Borisov, I. Goldberg, and E. Brewer. Off-the-Record
Communication, or, Why Not To Use PGP. In Workshop on
Privacy in the Electronic Society, pages 77–84. ACM, 2004.
[4] R. Canetti. Universally Composable Security: A New
Paradigm for Cryptographic Protocols. In Foundations of
Computer Science, pages 136–145. IEEE, 2001.
[5] R. Canetti. Universally Composable Signature, Certiﬁcation,
and Authentication. In Computer Security Foundations
Workshop, pages 219–233. IEEE, 2004.
[6] R. Canetti, U. Feige, O. Goldreich, and M. Naor. Adaptively
Secure Multi-party Computation. Technical report,
Massachusetts Institute of Technology, 1996.
http://theory.csail.mit.edu/ftp-data/
pub/people/oded/dynamic.ps.
[7] R. Canetti and H. Krawczyk. Security Analysis of IKE’s
Signature-Based Key-Exchange Protocol. In Advances in
Cryptology–CRYPTO 2002, pages 143–161. Springer, 2002.
[8] S. G. Choi, D. Dachman-Soled, T. Malkin, and H. Wee.
Improved Non-Committing Encryption with Applications to
Adaptively Secure Protocols. In Advances in
Cryptology–ASIACRYPT 2009, pages 287–302. Springer,
2009.
[9] S. S. Chow, M. Franklin, and H. Zhang. Practical
Dual-Receiver Encryption. In Topics in Cryptology–CT-RSA
2014, pages 85–105. Springer, 2014.
[10] R. Cramer and V. Shoup. A Practical Public Key
Cryptosystem Provably Secure against Adaptive Chosen
Ciphertext Attack. In Advances in Cryptology–CRYPTO’98,
pages 13–25. Springer, 1998.
[11] I. Damgård and J. B. Nielsen. Improved Non-Committing
Encryption Schemes Based on a General Complexity
Assumption. In Advances in Cryptology–CRYPTO 2000,
pages 432–450. Springer, 2000.
[12] Y. Dodis, J. Katz, A. Smith, and S. Walﬁsh. Composability
and On-Line Deniability of Authentication. In Theory of
Cryptography, pages 146–162. Springer, 2009.
[13] A. Fiat and A. Shamir. How To Prove Yourself: Practical
Solutions to Identiﬁcation and Signature Problems. In
Advances in Cryptology–CRYPTO’86, pages 186–194.
Springer, 1987.
[14] Go Project. The Go Programming Language.
https://golang.org/, 2009. Accessed 2015-04-13.
[15] M. Hearn. Value of deniability. Mailing list discussion,
https://moderncrypto.org/mail-archive/
messaging/2014/001173.html, 2014. Accessed
2015-04-02.
[16] H. Krawczyk. SIGMA: The ‘SIGn-and-MAc’ Approach to
Authenticated Difﬁe-Hellman and its Use in the IKE
protocols. In Advances in Cryptology–CRYPTO 2003, pages
400–425. Springer, 2003.
[17] B. Lynn. The Pairing-Based Cryptography Library.
https://crypto.stanford.edu/pbc/, 2006.
Accessed 2015-04-13.
[18] U. D. of Commerce / National Institute of Standards
& Technology. Digital Signature Standard (DSS), 2013.
[19] Open Whisper Systems. Open WhisperSystems.
https://www.whispersystems.org/, 2013.
Accessed 2014-11-02.
[20] Open Whisper Systems. Open Whisper Systems partners
with WhatsApp to provide end-to-end encryption. https:
//www.whispersystems.org/blog/whatsapp/,
2014. Accessed 2014-12-23.
[21] T. Perrin. Axolotl Ratchet.
https://github.com/trevp/axolotl/wiki,
2013. Accessed 2014-11-02.
[22] C. Rackoff and D. R. Simon. Non-Interactive
Zero-Knowledge Proof of Knowledge and Chosen
Ciphertext Attack. In Advances in Cryptology–CRYPTO’91,
pages 433–444. Springer, 1992.
[23] L. Reyzin and N. Reyzin. Better than BiBa: Short One-time
Signatures with Fast Signing and Verifying. In Information
Security and Privacy, pages 144–153. Springer, 2002.
[24] R. L. Rivest, A. Shamir, and Y. Tauman. How to Leak a
Secret. In Advances in Cryptology–ASIACRYPT 2001, pages
552–565. Springer, 2001.
[25] C.-P. Schnorr. Efﬁcient Signature Generation by Smart
Cards. Journal of Cryptology, 4(3):161–174, 1991.
[26] H. Shacham and B. Waters. Efﬁcient Ring Signatures
without Random Oracles. In Public Key Cryptography, pages
166–180. Springer, 2007.
[27] N. Unger. Deniable Key Exchanges for Secure Messaging.
Master’s thesis, University of Waterloo, 2015.
http://hdl.handle.net/10012/9406.
[28] N. Unger, S. Dechand, J. Bonneau, S. Fahl, H. Perl,
I. Goldberg, and M. Smith. SoK: Secure Messaging. In
Symposium on Security and Privacy. IEEE, 2015.
[29] S. Walﬁsh. Enhanced Security Models for Network
Protocols. PhD thesis, New York University, 2008.
[30] J. Zhang, J. Ma, and S. Moon. Universally composable
one-time signature and broadcast authentication. Science
China Information Sciences, 53(3):567–580, 2010.
[31] H. Zhu, T. Araragi, T. Nishide, and K. Sakurai. Universally
Composable Non-committing Encryptions in the Presence of
Adaptive Adversaries. In e-Business and
Telecommunications, pages 274–288. Springer, 2012.