该档案文件名与下列设定项目有关。
PI:EMAIL
 userlist_file=/etc/vsftpd/user_list
若上面 userlist_deny=YES 时，则这个档案就有用处了！在这个档案内的账号
都无法使用 vsftpd 喔！
匿名者登入的设定值
 anonymous_enable=YES (NO)
设定为允许 anonymous 登入我们的 vsftpd 主机！预设是 YES ，底下的所有相
关设定都需要将这个设定为 anonymous_enable=YES 之后才会生效！
 anon_world_readable_only=YES (NO)
仅允许 anonymous 具有下载可读档案的权限，预设是 YES。
 anon_other_write_enable=YES (NO)
是否允许 anonymous 具有除了写入之外的权限？包括删除与改写服务器上的档
案及档名等权限。预设当然是 NO！如果要设定为 YES，那么开放给 anonymous 写
入的目录亦需要调整权限，让 vsftpd 的 PID 拥有者可以写入才行！
 anon_mkdir_write_enable=YES (NO)
是否让 anonymous 具有建立目录的权限？默认值是 NO！如果要设定为 YES， 那
么 anony_other_write_enable 必须设定为 YES ！
 anon_upload_enable=YES (NO)
是否让 anonymous 具有上传数据的功能，默认是 NO，如果要设定为 YES ，则
anon_other_write_enable=YES 必须设定。
 deny_email_enable=YES (NO)
将某些特殊的 email address 抵挡住，不让那些 anonymous 登入！如果以
anonymous 登入服务器时，不是会要求输入密码吗？密码不是要你输入你的
email address 吗？如果你很讨厌某些 email address， 就可以使用这个设定
来将他取消登入的权限！需与下个设定项目配合：
 banned_email_file=/etc/vsftpd/banned_emails
如果 deny_email_enable=YES 时，可以利用这个设定项目来规定哪个 email
address 不可登入我们的 vsftpd 喔！在上面设定的档案内，一行输入一个
email address 即可！
 no_anon_password=YES (NO)
当设定为 YES 时，表示 anonymous 将会略过密码检验步骤，而直接进入 vsftpd
服务器内喔！所以一般预设都是 NO 的！(登入时会检查输入的 emai)
 anon_max_rate=0
这个设定值后面接的数值单位为 bytes/秒 ，限制 anonymous 的传输速度，如
PI:EMAIL
果是 0 则不限制(由最大带宽所限制)，如果你想让 anonymous 仅有 30 KB/s
的速度，可以设定‘anon_max_rate=30000’
 anon_umask=077
限制 anonymous 上传档案的权限！如果是 077 则 anonymous 传送过来的档案
权限会是 -rw------- 喔！
关于系统安全方面的一些设定值
 ascii_download_enable=YES (NO)
如果设定为 YES ，那么 client 就优先 (预设) 使用 ASCII 格式下载文件。
 ascii_upload_enable=YES (NO)
与上一个设定类似的，只是这个设定针对上传而言！预设是 NO
 one_process_model=YES (NO)
这个设定项目比较危险一点～当设定为 YES 时，表示每个建立的联机都会拥有
一支 process 在负责，可以增加 vsftpd 的效能。不过， 除非你的系统比较安
全，而且硬件配备比较高，否则容易耗尽系统资源喔！一般建议设定为 NO 的啦！
 tcp_wrappers=YES (NO)
当然我们都习惯支持 TCP Wrappers 的啦！所以设定为 YES 吧！
 xferlog_enable=YES (NO)
当设定为 YES 时，使用者上传与下载文件都会被纪录起来。记录的档案与下一
个设定项目有关：
 xferlog_file=/var/log/xferlog
如果上一个 xferlog_enable=YES 的话，这里就可以设定了！这个是登录档的档
名啦！
 xferlog_std_format=YES (NO)
是否设定为 wu ftp 相同的登录档格式？预设为 NO ，因为登录档会比较容易读！
不过，如果你有使用 wu ftp 登录文件的分析软件，这里才需要设定为 YES
 dual_log_enable=YES, vsftpd_log_file=/var/log/vsftpd.log
除了 /var/log/xferlog 的 wu-ftp 格式登录档之外，还可以具有 vsftpd 的独
特登录档格式喔！如果你的 FTP 服务器并不是很忙碌， 或许订出两个登录档的
撰写 (/var/log/{vsftpd.log,xferlog) 是不错的。
 nopriv_user=nobody
我们的 vsftpd 预设以 nobody 作为此一服务执行者的权限。因为 nobody 的权
限相当的低，因此即使被入侵，入侵者仅能取得 nobody 的权限喔！
PI:EMAIL
 pam_service_name=vsftpd
这个是 pam 模块的名称，我们放置在 /etc/pam.d/vsftpd 即是这个咚咚！
上面这些是常见的 vsftpd 的设定参数，还有很多参数我没有列出来，你可以使用
man 5 vsftpd.conf 查阅喔！不过，基本上上面这些参数已经够我们设定 vsftpd 啰。
21.2.4 vsftpd 启动的模式
vsftpd 可以使用 stand alone 或 super daemon 的方式来启动，我们 CentOS 预
设是以 stand alone 来启动的。 那什么时候应该选择 stand alone 或者是 super
daemon 呢？如果你的 ftp 服务器是提供给整个因特网来进行大量下载的任务，例如各
大专院校的 FTP 服务器，那建议你使用 stand alone 的方式， 服务的速度上会比较
好。如果仅是提供给内部人员使用的 FTP 服务器，那使用 super daemon 来管理即可
啊。
利用 CentOS 提供的 script 来启动 vsftpd (stand alone)
其实 CentOS 不用作任何设定就能够启动 vsftpd 啰！是这样启动的啦：
[root@www ~]# /etc/init.d/vsftpd start
[root@www ~]# netstat -tulnp| grep 21
tcp 0 0 0.0.0.0:21 0.0.0.0:* LISTEN 11689/vsftpd
# 看到啰，是由 vsftpd 所启动的呢！
自行设定以 super daemon 来启动 (有必要再进行，不用实作)
如果你的 FTP 是很少被使用的，那么利用 super daemon 来管理不失为一个好主
意。 不过若你想要使用 super daemon 管理的话，那就得要自行修改一下配置文件了。
其实也不难啦，你应该要这样处理的：
[root@www ~]# vim /etc/vsftpd/vsftpd.conf
# 找到 listen=YES 这一行：大约在 109 行左右啦，并将它改成：
listen=NO
PI:EMAIL
接下来修改一下 super daemon 的配置文件，底下这个档案你必须要自行建立的，原本
是不存在的喔：
[root@www ~]# yum install xinetd <==假设 xinetd 没有安装时
[root@www ~]# vim /etc/xinetd.d/vsftpd
service ftp
{
socket_type = stream
wait = no
user = root
server = /usr/sbin/vsftpd
log_on_success += DURATION USERID
log_on_failure += USERID
nice = 10
disable = no
}
然后尝试启动看看呢：
[root@www ~]# /etc/init.d/vsftpd stop
[root@www ~]# /etc/init.d/xinetd restart
[root@www ~]# netstat -tulnp| grep 21
tcp 0 0 0.0.0.0:21 0.0.0.0:* LISTEN 32274/xinetd
有趣吧！两者启动的方式可不一样啊！管理的方式就会差很多的呦！不管你要使用哪种
启动的方式，切记不要两者同时启动，否则会发生错误的！你应该使用 chkconfig
--list 检查一下这两种启动的方式，然后依据你的需求来决定用哪一种方式启动。鸟
哥底下的设定都会以 stand alone 这个 CentOS 默认的启动模式来处理，所以赶紧将
刚刚的动作给他改回来喔！
21.2.5 CentOS 的 vsftpd 默认值
在 CentOS 的默认值当中，vsftpd 是同时开放实体用户与匿名用户的，CentOS 的
默认值如下：
[root@www ~]# vim /etc/vsftpd/vsftpd.conf
# 1. 与匿名者有关的信息：
anonymous_enable=YES <==支持匿名者的登入使用 FTP 功能
PI:EMAIL
# 2. 与实体用户有关的设定
local_enable=YES <==支持本地端的实体用户登入
write_enable=YES <==允许用户上传数据 (包括档案与目录)
local_umask=022 <==建立新目录 (755) 与档案 (644) 的权限
# 3. 与服务器环境有关的设定
dirmessage_enable=YES <==若目录下有 .message 则会显示该档案的
内容
xferlog_enable=YES <==启动登录文件记录，记录于
/var/log/xferlog
connect_from_port_20=YES <==支持主动式联机功能
xferlog_std_format=YES <==支持 WuFTP 的登录档格式
listen=YES <==使用 stand alone 方式启动 vsftpd
pam_service_name=vsftpd <==支持 PAM 模块的管理
userlist_enable=YES <==支持 /etc/vsftpd/user_list 档案内的
账号登入管控！
tcp_wrappers=YES <==支持 TCP Wrappers 的防火墙机制
上面各项设定值请自行参考 21.2.3 的详细说明吧。而通过这样的设定值咱们的
vsftpd 可以达到如下的功能：
 你可以使用 anonymous 这个匿名账号或其他实体账号 (/etc/passwd) 登
入；
 anonymous 的家目录在 /var/ftp ，且无上传权限，亦已经被 chroot 了；
 实体用户的家目录参考 /etc/passwd，并没有被 chroot，可前往任何有权
限可进入的目录中；
 任何于 /etc/vsftpd/ftpusers 内存在的账号均无法使用 vsftpd (PAM)；
 可利用 /etc/hosts.{allow|deny} 来作为基础防火墙；
 当客户端有任何上传/下载信息时，该信息会被纪录到 /var/log/xferlog
中；
 主动式联机的埠口为 port 20；
 使用格林威治时间 (GMT)。
所以当你启动 vsftpd 后，你的实体用户就能够直接利用 vsftpd 这个服务来传输
他自己的数据了。 不过比较大的问题是，因为 vsftpd 预设使用 GMT 时间，因为你在
客户端使用 ftp 软件连接到 FTP 服务器时，会发现每个档案的时间都慢了八小时了！
真是讨厌啊！ 所以建议你加设一个参数值，就是‘ use_localtime=YES ’啰！
[root@www ~]# vim /etc/vsftpd/vsftpd.conf
# 在这个档案当中的最后一行加入这一句即可
use_localtime=YES
[root@www ~]# /etc/init.d/vsftpd restart
PI:EMAIL
[root@www ~]# chkconfig vsftpd on
如此一来你的 FTP 服务器不但可以提供匿名账号来下载 /var/ftp 的数据，如果使用
实体账号来登入的话， 就能够进入到该用户的家目录底下去了！真是很简单方便的一
个设定啊！且使用本地端时间呢！ ^_^
另外，如果你预计要将 FTP 开放给 Internet 使用时，请注意得要开放防火墙喔！
关于防火墙的建置情况， 由于牵涉到数据流的主动、被动联机方式，因此，还得要加