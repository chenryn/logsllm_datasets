According to the documentation, "plugins can be shipped in a subdirectory relative to a top-level playbook," and this functionality worked in version 1. However, with version 2, this approach no longer works (at least for `lookup_plugins`) unless the `lookup_plugins` subdirectory is explicitly specified in the `ansible.cfg` file.

To illustrate, follow these steps:

1. Create a `lookup_plugins` directory:
   ```bash
   $ mkdir lookup_plugins
   ```

2. Copy the `items.py` plugin from the Ansible library to your `lookup_plugins` directory and rename it to `myitems.py`:
   ```bash
   $ cp $ANSIBLE_ROOT/lib/ansible/plugins/lookup/items.py lookup_plugins/myitems.py
   ```

3. Create a test playbook `test_lookup_pl.yml`:
   ```yaml
   ---
   - hosts: localhost
     tasks:
       - name: Print items from custom lookup plugin
         debug:
           msg: "Item= {{ item }}"
         with_myitems:
           - foo
           - bar
   ```

4. Run the playbook without an `ansible.cfg` file:
   ```bash
   $ ansible-playbook test_lookup_pl.yml
   ```
   The output will show a failure:
   ```plaintext
   PLAY ****************************************************************************
   TASK [setup] ********************************************************************
   ok: [localhost]
   TASK [Print items from custom lookup plugin] ************************************
   fatal: [localhost]: FAILED! => {"failed": true, "msg": "ERROR! the field 'args' has an invalid value, which appears to include a variable that is undefined. The error was: 'item' is undefined"}
   PLAY RECAP **********************************************************************
   localhost                  : ok=1    changed=0    unreachable=0    failed=1
   ```

5. Create an `ansible.cfg` file to specify the `lookup_plugins` directory:
   ```ini
   [defaults]
   lookup_plugins=./lookup_plugins
   ```

6. Run the playbook again with the `ansible.cfg` file:
   ```bash
   $ ansible-playbook test_lookup_pl.yml
   ```
   The output will now show success:
   ```plaintext
   PLAY ****************************************************************************
   TASK [setup] ********************************************************************
   ok: [localhost]
   TASK [Print items from custom lookup plugin] ************************************
   ok: [localhost] => (item=foo) => {
       "item": "foo",
       "msg": "Item= foo "
   }
   ok: [localhost] => (item=bar) => {
       "item": "bar",
       "msg": "Item= bar "
   }
   PLAY RECAP **********************************************************************
   localhost                  : ok=2    changed=0    unreachable=0    failed=0
   ```

By explicitly specifying the `lookup_plugins` directory in the `ansible.cfg` file, the custom lookup plugin is recognized, and the playbook runs successfully.