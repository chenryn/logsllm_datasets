器会将分组发送给服务器。
在图20-5中，三台服务器为同一个IP地址10.10.10.1服务。洛杉矶（LA）服务
器将此地址广告给LA路由器，纽约（NY）服务器同样将此地址广告给NY路由
器，以此类推。服务器会通过路由器协议与路由器进行通信。路由器会将目标为
10.10.10.1的客户端请求自动地转发到广告这个地址的最近的服务器上去。在图
20-5中，对IP地址10.10.10.1的请求会被转发给服务器3。
任播寻址仍然是项实验性技术。要使用分布式任播技术，服务器就必须“使用路由
器语言”，而且路由器必须能够处理可能出现的地址冲突，因为因特网地址基本上
都是假定一台服务器只有一个地址的。（如果没有正确地实现，可能会造成很严重的
“路由泄露”问题。）分布式任播是一种新兴技术，可以为那些自己控制骨干网络的
480 ｜ 第20章
内容提供商提供一种解决方案。
www.joes-hardware.com
骨干网络
10.10.10.1
路由器
客户端 服务器1
路由器
交换机
www.joes-hardware.com
路由器
客户端
边缘网络 www.joes-hardware.com
10.10.10.1
服务器2
10.10.10.1
服务器3
图20-5 分布式任播寻址 458
20.4.4 IP MAC转发
在以太网中，HTTP报文都是以携带地址的数据分组的形式发送的。每个分组都有
一个第四层地址，由源IP地址、目的IP地址以及TCP端口号组成，它是第四层设
备所关注的地址。每个分组还有一个第二层地址，MAC（Media Access Control，媒
体访问控制）地址，这是第二层设备（通常是交换机和Hub）所关注的地址。第二
层设备的任务是接收具有特定输入MAC地址的分组，然后将其转发到特定的输出
MAC地址上去。
比如，图20-6中交换机的程序会将来自MAC地址MAC3的所有流量都发送到
MAC地址MAC4上去。
客户端MAC1
通向因特网
Hub MAC3 交换机MAC4
网关MAC5
客户端MAC2
图20-6 第二层交换机会将客户端请求发送给一个网关
重定向与负载均衡 ｜ 481
第四层交换机能够检测出第四层地址（IP地址和TCP端口号），并据此来选择路由。
比如，一台第四层交换机可以将所有目的为端口80的Web流量都发送到某个代理
上去。在图20-7中，编写交换机程序，将MAC3上所有端口80的流量都转发到
MAC6（代理缓存）上去。MAC3上所有其他流量都会被转发到MAC5上去。
客户端MAC1
通向因特网
Hub MAC3 交换机MAC4
网关MAC5
端口80的流量
客户端MAC2
代理缓存MAC6
图20-7 通过第四层交换机进行MAC转发
通常，如果缓存中有所请求的HTTP内容，而且是新鲜的，那么就由代理缓存来提
供内容；否则，代理缓存就会代表客户端向此内容的原始服务器发送一条HTTP请
求。交换机会将端口80的请求从代理（MAC6）发送给因特网网关（MAC5）。
支持MAC转发的第四层交换机通常会将请求转发给几个代理缓存，并在它们之间
459 平衡负载。类似地，也可以将HTTP流量转发给备用HTTP服务器。
因为MAC地址转发只是点对点的，所以服务器或代理只能位于离交换机一跳远的
地方。
20.4.5 IP地址转发
在IP地址转发中，交换机或其他第四层设备会检测输入分组中的TCP/IP地址，并
通过修改目的IP地址（不是目的MAC地址），对分组进行相应的转发。与MAC转
发相比，这么做的优点是目标服务器不需要位于一跳远的地方；只需要位于交换机
的上游就行了，而且通常第三层的端到端因特网路由都会将分组传送到正确的地方。
这种类型的转发也被称为NAT（Network Address Translation，网络地址转换）。
但还有一个问题，就是对称路由。从客户端接受输入TCP连接的交换机管理着连
接；交换机必须通过那条TCP连接将响应回送给客户端。这样，所有来自目标服务
器或代理的响应都必须返回给交换机（参见图20-8）。
482 ｜ 第20章
目标代理
骨干网络
Joe的服务器
客户端
Joe的边
路由器
交换机 缘网络
客户端客户端
边缘网络
图20-8 对代理缓存或镜像Web服务器进行IP地址转发的交换机 460
有以下两种方式可以控制响应的返回路径。
• 将分组的源IP地址改成交换机的IP地址。通过这种方式，无论交换机和服务器
之间采用何种网络配置，响应分组都会被发送给交换机。这种方式被称为完全
NAT（full NAT），其中的IP转发设备会对目的IP地址和源IP地址都进行转换。
图20-9显示了对一条TCP/IP数据报进行完全NAT的效果。这样做的缺点是服
务器不知道客户端的IP地址，那种需要认证和计费的Web服务器无法获知客户
端的IP地址。
• 如果源IP地址仍然是客户端的IP地址，就要确保（从硬件的角度来看）没有从
服务器到客户端的直接路由（绕过交换机的）。这种方式有时被称为半NAT（half
NAT）。这种方法的优点是服务器知道客户端的IP地址，但缺点是要对客户端和
服务器之间的整个网络都有某种程度的控制。
来自：客户端 通过网络地址 来自：NAT设备
转换（NAT）
1.1.1.1 3.3.3.3
设备进行传输
80 发往：Joe的服务器 80 发往：代理
2.2.2.2 4.4.4.4
80 80
HTTP数据 HTTP数据
图20-9 一条TCP/IP数据报的完全NAT
重定向与负载均衡 ｜ 483
20.4.6 网元控制协议
NECP（Network Element Control Protocol，网元控制协议）允许网元（NE，路由器
和交换机等负责转发IP分组的设备）与服务器元素（SE，Web服务器和代理缓存
等提供应用层请求的设备）进行交互。NECP并未显式提供对负载均衡的支持；它
只是为SE提供了一种发送负载均衡信息给NE的方式，这样NE就可以在它认为
合适的情况下进行负载均衡了。与WCCP一样，NECP也提供了几种转发分组的方
式：MAC转发、GRE封装和NAT。
NECP支持例外。SE可以决定它不能为某些特定的源IP地址提供服务，并将这些
地址发送给NE。然后，NE可以将来自这些IP地址的请求转发给原始服务器。
报文
461 表20-3描述了NECP报文。
表20-3 NECP报文
报 文 发 送 者 含 义
NECP_NOOP 不操作——什么都不做
NECP_INIT SE SE初始化了与NE的通信。SE打开与NE的
TCP连接后，将此报文发送给它。SE必须知
道要连接哪个NE端口
NECP_INIT_ACK NE 确认NECP_INIT
NECP_KEEPALIVE NE或SE 询问对等实体是否仍然活跃
NECP_KEEPALIVE_ACK NE或SE 对keep-alive报文的应答
NECP_START SE SE说：“我在这里，做好接受网络流量的准备
了。”可以指定端口
NECP_START_ACK NE 确认NECP_START
NECP_STOP SE SE告诉NE“停止向我发送流量。”
NECP_STOP_ACK NE NE确认NECP_STOP操作
NECP_EXCEPTION_ADD SE SE说要向NE列表中添加一个或多个例外。例
外可以基于源IP地址、目的IP地址、（IP之
上的）协议，或者端口
NECP_EXCEPTION_ADD_ACK NE 对NECP_EXCEPTION_ADD进行证实
NECP_EXCEPTION_DEL SE 请求NE从列表中删除一个或多个例外
NECP_EXCEPTION_DEL_ACK NE 对NECP_EXCEPTION_DEL进行证实
NECP_EXCEPTION_RESET SE 请求NE删除整个例外列表
NECP_EXCEPTION_RESET_ACK NE 对NECP_EXCEPTION_RESET进行证实
NECP_EXCEPTION_QUERY SE 查询NE的整个例外列表
NECP_EXCEPTION_RESP NE 响应例外查询
484 ｜ 第20章
20.5 代理的重定向方法
到目前为止，我们已经讨论过通用的重定向方法了。（出于潜在的安全考虑）内容也
可能需要通过各种代理来访问，或者网络中可能有一个客户端可利用的代理缓存。
（因为获取已缓存的内容很可能要比直接连接到原始服务器快得多。）
但Web浏览器客户端怎么才会知道要连接到某个代理上去呢？可以用3种方法来判断：
显式的浏览器配置，动态自动配置以及透明拦截。我们会在本节中讨论这3种技术。
代理可以顺次将客户端请求重定向到另一个代理上去。比如，没有缓存此内容的代
理缓存可能会选择将客户端重定向到另一个代理缓存。这样一来，响应就会来自与
客户端请求资源的地址不同的另外一个地址，所以，我们还会讨论几种用于对等代
理-缓存重定向的协议：ICP、CARP和HTCP。 462
20.5.1 显式浏览器配置
大多数浏览器都可以配置为从代理服务器上获取内容——浏览器中有一个下拉菜单，
用户可以在这个菜单中输入代理的名字或IP地址以及端口号。然后浏览器的所有请
求都可以发送给这个代理。有些服务提供商不允许用户配置普通浏览器来使用代理，
它们会要求用户下载事先配置好的浏览器。这些浏览器知道所要使用的代理的地址。
显式浏览器配置有以下两个主要的缺点。
• 配置为使用代理的浏览器，即使在代理无法响应的情况下，也不会去联系原始服
务器。如果代理崩溃了，或者没有正确配置浏览器，用户就会遇到连接方面的问题。
• 对网络架构进行修改，并将这些修改通知给所有的终端用户都是很困难的。如果
服务提供商要添加更多的代理服务器，或者使其中一些退出服务，用户都要修改
浏览器代理设置。
20.5.2 代理自动配置
显式配置浏览器使其联系特定的代理，这样会限制网络架构方面的变动，因为它是
靠用户来介入并重新配置浏览器的。自动配置方式可以动态配置浏览器，连接到
正确的代理服务器，以解决这个问题。这种方法已经实现了，被称为代理自动配
置（PAC）协议。PAC是网景公司定义的，网景公司的Navigator和微软的Inernet
Explorer浏览器都支持此协议。
PAC的基本思想是让浏览器去获取一个称为PAC的特殊文件，这个文件说明了每
个URL所关联的代理。必须配置浏览器，为这个PAC文件关联一个特定的服务器。
这样，浏览器每次重启的时候都可以获取这个PAC文件了。
重定向与负载均衡 ｜ 485
PAC文件是个JavaScript文件，其中必须定义函数：
function FindProxyForURL(url, host)
如下所示，浏览器要为请求的每条URL调用这个函数：
return_value = FindProxyForURL(url_of_request, host_in_url);
其返回值为一个字符串，用来说明浏览器应该到哪里请求这个URL。返回值可以是
所关联的代理名称列表（比如， PROXY proxy1.domain.com，PROXY proxy2.
domain.com），或者是字符串"DIRECT"，这个字符串说明浏览器应该绕开所有的
代理，直接连接原始服务器。
图 20-10 给出了浏览器对 PAC 文件的请求以及响应此请求的操作顺序。在本
463 例中，服务器回送了带有 JavaScript 程序的 PAC 文件。JavaScript 程序中有一
个 FindProxyForURL函数，用来告知浏览器，如果所请求的 URL 的主机位于
netscape.com域中，就直接与原始服务器联系，所有其他请求都连接到proxy1.joes-
cache.com。浏览器会为它所请求的每个URL调用这个函数，并根据此函数返回的
结果进行连接。
嗨，我配置为向你请
求PAC文件。请把这
个文件发给我。 PAC服务器
HTTP/1.0 200 OK
Content-type: application/x-ns-proxy-autoconfig
Content-length: 176
function FindProxyForURL(url,host)
{
if (dnsDomain(host,".netscape.com")
return "DIRECT";
浏览器 else
return "PROXY proxy1.joes-cache.com:8080; DIRECT";
}
发往netscape.com域的请
如果代理可用，就直接
求会直接发送给服务器。 连接它，如果代理1不可
达，就直接连接原始服务器。
因特网
原始服务器
对所有其他域的请求都发送 e