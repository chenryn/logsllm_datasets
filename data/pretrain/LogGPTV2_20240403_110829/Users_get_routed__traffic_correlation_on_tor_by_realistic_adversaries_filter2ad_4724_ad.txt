### Path Analysis and Adversary Considerations

#### Client-to-Guard and Exit-to-Destination Paths
We consider the paths from the client to the guard and from the exit to the destination. This scenario is deemed uninteresting for our analysis, and hence, for the remainder of this section, we exclude Autonomous Systems (ASes) that contain clients or destinations for a given client and activity from the set of potential adversaries.

#### Monte Carlo Simulations
For each behavior, we use TorPS to conduct 50,000 Monte Carlo simulations of three months of client activity, spanning from January 2013 to March 2013. The output of these simulations is used to model multiple clients.

#### Client Location
TorPS-generated paths are agnostic to the client's specific attributes, as Tor currently does not modify path selection based on client characteristics. However, to analyze exposure to network-level adversaries, we must place clients within the network. We assign clients to the five most popular ASes (AS3320, AS3209, AS3269, AS13184, and AS6805), as identified by Edman and Syverson in 2009 [15]. These ASes include four from Germany and one from Italy. For each sample stream from our Monte Carlo simulations, we analyze the client-to-guard path five times, once for each of the client origins.

### Network Adversaries

#### Types of Network Adversaries
We consider three types of network adversaries: autonomous systems (ASes), Internet exchange points (IXPs), and IXP organizations. A network connection often transits multiple ASes, and a network operator interested in deanonymizing Tor traffic needs only to have the traffic pass through its domain of control once on each side of the path.

- **Autonomous Systems (ASes):** A single AS can potentially deanonymize Tor traffic if it controls both sides of the path.
- **Internet Exchange Points (IXPs):** IXPs represent interconnection points between ASes, and they may have significant ability to deanonymize Tor users.
- **IXP Organizations:** Some organizations control multiple IXPs, which can increase their ability to deanonymize traffic.

#### Analysis of IXP Organizations
We manually compared IXP descriptions from the IXP Mapping Project and company websites to identify 19 IXP organizations that collectively administer 90 distinct IXPs. To determine which organizations can compromise client streams, we perform the same procedure as for individual IXPs, replacing IXP identifiers with organization identifiers where possible. We treat IXPs without an identified organization as standalone entities.

### Security Analysis

#### Adversarial Entities
We begin our analysis by identifying specific adversarial entities for each combination of client behavior and client origin. Previous work has often considered the ability of network adversaries to compromise Tor circuits independently, reporting that a large percentage of circuits can be deanonymized by some AS. However, from a user perspective, it is more relevant to consider distinct adversarial entities specific to each simulated user origin and behavior.

To identify candidate entities, we aggregate all streams over all client samples originating from a given client location. We then compute the client-side and destination-side paths and count the number of streams in which a given adversarial entity (AS, IXP, or IXP organization) exists on both sides. We select the entity that compromises the largest number of streams to understand the extent of the threat.

#### Simulation Results
Our simulation results show significant variation in the ability of network adversaries to compromise Tor users depending on the user's location. While we run experiments for all selected client origins, we display only the best and worst cases for readability. The best and worst cases are determined by the smallest and largest area under the curve, respectively, in their cumulative distribution function (CDF) of time to compromise.

- **AS-Level Adversary:** In the worst case, compromise is highly likely regardless of user behavior. For example, 45.9%, 64.9%, and 76.4% of Typical, IRC, and BitTorrent samples use a compromised stream within one day. At least one stream is compromised within the three-month period for over 98% of samples.
- **IXP and IXP Organization Adversaries:** In the worst case, fewer than 20% of clients use a stream that could be compromised within three months. This difference is due to the fact that while IXPs represent high-degree connection points, 80% of the network links do not traverse IXPs.

#### Discussion
At a high level, the network adversary analysis shows that client behavior resulting in low diversity of client destinations is most likely to result in a compromise. For example, a single AS adversary can compromise 50% of clients using IRC within 44 days, even under the most optimistic client placement. By contrast, fewer than half of Typical clients are compromised within the entire period, and BitTorrent users have even lower compromise rates.

It is also notable that a large number of clients encounter compromised streams very quickly, followed by a steep decline in the rate. This phenomenon is partly attributable to how guard selection interacts with relay selection. Given the initial set of guards, the path between the client and entry guard is relatively fixed. If the adversarial entity exists on the guard side of the path, it need only wait until it appears on the exit side. However, if the entity does not exist on any of the paths from a client to its chosen guards, it will not compromise any streams until new guards are selected.

Finally, while IXPs have a distinctly lower likelihood of compromising client traffic, the complexity of performing traffic correlation at an IXP is likely to be significantly lower than at an AS. ASes may span large regions, and traffic may not pass through the same routers on the forward and return path, while IXPs are geographically concentrated, making it easier for a single rogue agent at an IXP to perform traffic analysis.

### Alternative Path Selection

This paper has focused on Tor’s path selection protocol and outlined severe security implications. Unsurprisingly, path selection algorithms also have a large impact on Tor’s performance because they directly affect how client load is balanced among the available relay resources and therefore how congested relays become. Researchers have investigated and proposed several improvements to Tor’s current path selection algorithm. This section explores the security implications of the most effective of these proposals.

#### Congestion Awareness
Based on the results of Wacek et al. [44], the most effective proposed improvement to path selection is the "instant response" mode of Congestion-Aware Tor (CAT) by Wang et al. [45]. The main idea in CAT is that clients create a local view of circuit congestion through opportunistic and active measurements of circuit round trip times (RTTs). Circuits that are or become too congested are ignored or dropped, respectively.

#### Methodology
As CAT only slightly modifies Tor’s original path selection algorithm, our methodology for evaluating CAT’s security is largely the same as described in Section 5. However, we made several changes to TorPS to incorporate the new selection algorithm. In addition to implementing the instant response mode of CAT, we needed a source for relay congestion over our analysis period. Since historical data about relay congestion has not been collected, we created relay-specific congestion models using Shadow [25].

Running thousands of Tor nodes simultaneously is time-consuming, so we ran several short identical pairs of experiments with different seeds and used the Kolmogorov-Smirnov (K-S) test statistic as a distance metric between each resulting pair of relay-specific congestion traces. We lengthen and repeat the experiment to increase our sample size until the median K-S distance of all relay trace pairs is below five percent, increasing our confidence in the consistency of congestion produced in our virtual network.

We create congestion profiles by smoothing each relay congestion trace by binning the values. We assign each simulated relay the profile with the closest consensus bandwidth weight to its actual value.