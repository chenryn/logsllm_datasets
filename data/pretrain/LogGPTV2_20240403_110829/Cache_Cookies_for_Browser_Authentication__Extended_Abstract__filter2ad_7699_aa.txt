# Cache Cookies for Browser Authentication (Extended Abstract)

**Authors:**
- Ari Juels, RSA Laboratories and RavenWhite Inc.
- Markus Jakobsson, Indiana University and RavenWhite Inc.
- Tom N. Jagatic, Indiana University

## Abstract
Cache cookies, like conventional cookies, are data objects stored in web browsers. However, cache cookies are unintended byproducts of browser cache design and lack explicit interface support or security policies. This paper demonstrates that despite these limitations, cache cookies can be useful for user identification and authentication. Many users block conventional cookies for privacy reasons, but the cache-cookie tools we propose can restore usability and convenience while maintaining privacy. Additionally, our techniques can help combat online security threats such as phishing and pharming, which conventional cookies cannot address. The concepts introduced for cache-cookie management can also enhance the security of conventional cookies.

The full version of this paper is available at [www.ravenwhite.com](http://www.ravenwhite.com).

**Keywords:** cache cookies, personalization, malware, pharming, phishing, privacy, web browser

## 1. Introduction
Conventional cookies are data objects stored in a specially designated cache in a web browser. They often contain user-specific identifiers or personal information, such as age, and are used by servers to personalize web pages. For example, when Alice visits a website, the server might place a cookie in her browser with an identifier. When Alice revisits the site, the browser sends the cookie back, allowing the server to recognize her.

In contrast, cache cookies are not an explicit browser feature but are a form of persistent state that servers can access in unintended ways. One type of cache cookie, based on Temporary Internet Files (TIFs), involves caching data objects like images locally to speed up browsing. By checking if a specific TIF is present in the browser, a server can read a bit of information from the browser.

### 1.1 Our Work: Cache Cookies as Authenticators
Cookies were originally designed for passing state, but they have been repurposed for authentication. We take a similar approach with cache cookies, co-opting them for user identification and authentication. Conventional cookies are vulnerable to pharming attacks, where a browser is directed to a spoofed site, and cached objects can be harvested. SSL offers limited protection against such attacks, as users often ignore browser warnings about invalid certificates.

We show how to use cache cookies in a way that does not rely on server domains, making them resistant to many pharming attacks. Our framework, called cache-cookie memory (CC-memory), is a virtually addressed memory structure within the browser. The size of CC-memory is exponential in the bit-length of browser resource names, making it infeasible for attackers to read more than a negligible portion.

### 1.2 Related Work
Most literature on cache cookies focuses on their threat to privacy. Felten and Schneider first highlighted the problems of invasive cache cookies and coined the term. Their techniques, based on timing analysis, are somewhat difficult to implement. Clover later demonstrated more easily manipulated cache cookies using browser histories and Cascading Style Sheets (CSS). Web bugs, client-specific HTML links to invisible images, are another common tracking method.

Jackson et al. examined the privacy impact of cache cookies and related browser features, proposing browser extensions to enforce consistent privacy policies. Our focus, however, is on the positive aspects of cache cookies, proposing ways to use them beneficially without exacerbating privacy issues.

## 2. Cache-Cookie Memory Management
We now explain how to construct CC-memory structures. Using TIFs as an example, a server can plant any variety of TIFs by assigning them appropriate URLs. For instance, a server can create a CC-memory structure over the space of URLs, such as "www.arbitrarysite.com/Z.gif," where Z is an index into the CC-memory space. This virtual-memory space can be enormous, larger than a cryptographic key space.

When the cache cookie is sufficiently long (e.g., 80 bits), brute-force search becomes impractical. A server can hide cache cookies from adversaries by placing a secret string in a random location in CC-memory. CC-memory can support various virtual memory structures and operations like reading, writing, erasure, and re-writing.

**TIF-based Cache Cookies:**
Temporary Internet Files (TIFs) are files containing objects like images, cached to speed up display when a user revisits a web page. To place a TIF X in a browser cache, a server serves content that causes the downloading of X. The server can verify the presence of X by displaying a page containing X. If X is not in the cache, the browser will request it; otherwise, it will retrieve the local copy. To avoid changing the state of the cache cookie, the server must withhold X if it is not present, triggering a "401" error.

TIF-based cache cookies restrict read privileges, as only the domain associated with X can detect its presence. However, TIFs cannot be manipulated over SSL, as HTTPS sessions do not cache information on disk.

**C-Memory:**
Conventional cookies can have associated paths, restricting their release to specific URL prefixes. For example, a cookie set with the path "www.arbitrarysite.com/X" would only be released when the browser visits a URL of the form "www.arbitrarysite.com/X/...". Using paths, it is possible to manage cache cookies in a similar manner, enhancing their utility and security.

---

This revised version aims to improve clarity, coherence, and professionalism, making the content more accessible and engaging for the reader.