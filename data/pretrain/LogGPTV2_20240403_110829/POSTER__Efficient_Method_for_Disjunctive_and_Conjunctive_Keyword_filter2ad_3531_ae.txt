n, m: the number of keywords in an index keyword set and a query, respectively.
For simplicity, we denote pkS and pkR by pk and skS and skR by sk. From Table 2, we can ﬁnd
that the storage cost of index in our scheme is much less than that in the other schemes. Moreover,
the storage cost of pk is also the smallest of all. Since n is not large and the storage cost of |Zq| is small,
the storage cost of sk and trapdoor in our scheme is still as practical as the other schemes.
5.2. Experimental Results
Our experiment is run on Intel(R) Core(TM) i7 CPU at 3.40 Ghz processor with 16 GB memory
size. The experiment is based on Java language because Java is a cross platform development language
and the bilinear pairing technique is realized by adopting the Java Pairing Based Cryptography
(JPBC) library [32]. The experiment is based on a real-world e-mail dataset called Enron e-mail
dataset [33]. We randomly select 1000 e-mail messages from the dataset and extract 5∼25 words
from each document as its keyword list. By utilizing these e-mails and its associated keywords, we
implement the schemes introduced in References [7,8,10] and our scheme in the same environment to
demonstrate the advantages of the proposed scheme in term of time and space overhead (The source
code can be accessed through the website http://www.inforstation.com/webservers/SPE-CKS/).
5.2.1. Time Overhead
The time overhead is tested in term of key generation, index building, trapdoor generation and
testing. The experiment results are shown in Figure 2.
3.
2.
1. Key generation. Because of adopting the technique called dual pairing vector space (DPVS)[8],
the time complexity of key generation in OT15 is O(n2). The time cost of key generation in other
three schemes are all linear with n.
Index building. The time cost of index building in ZZ11, OT15 and ours are all linearly with
n. The time cost of index building in our scheme is still much less than that in ZZ11 and OT15.
Furthermore, as n grows, for example, n > 10, the time cost of index building in ZLW19 is more
than that in our scheme since it is linear with n2.
Trapdoor generation. Although the time cost of trapdoor generation in ZZ11, OT15 and ours
are all linear with n, our scheme needs less time cost than ZZ11 and OT15 due to needing less
exponentiation computation operations. The time cost of trapdoor generation in ZLW19 is linear
with m. Because m is less than n, the time cost of trapdoor generation in our scheme is slightly
more than that in ZLW19.
Testing. The time cost of test in these four schemes are all linear with n. Compared with ZZ11 and
ZLW19, our scheme needs less pairing operations. Compared with OT15, our scheme needs less
exponentiation operations on group elements. Since the time cost of exponentiation operation is
only one fourth of that of pairing operation, our solution requires less test time.
4.
5.2.2. Space Overhead
This experiment evaluates the space cost of pk, sk, index and trapdoor. The experiment results are
illustrated in Figure 3.
1.
pk size. The pk size in these four schemes are all linear with n. Our scheme is the best of these
four schemes since it needs less elements in group G1.
Appl. Sci. 2019, 9, 3655
13 of 16
2.
3.
4.
sk size. ZZ11 only needs one integer in Zq. Although sk size in OT15, ZLW19 and ours are all
linear with n, both ZLW19 and our scheme need less space cost since the space cost of Zq is less
than that of G1. In addition, the sk size in our scheme is only a half of that in ZLW19.
Index size. Our scheme needs less space cost than OT15 and ZLW19, although the index size of
OT15, ZLW19 and our scheme are all linear with n. This is ﬁt to the theoretical analysis. The index
size of ZLW19 is linear with n2, so it is not as efﬁcient as our scheme.
Trapdoor size. The space complexity of trapdoor in OT15 and ZLW19 are O(1) and O(m),
respectively. Thus, these two schemes need less storage cost. The space cost of trapdoor in ZZ11
and our scheme are both linear with n. Our scheme needs less storage consumption than ZZ11
for trapdoor since our scheme needs less group element in trapdoor.
Figure 2. Impact of n on the time cost of key generation (a); index building (b); trapdoor generation
(c) and testing (d). (D = 1000, m = 5 and n = {5; 10; 15; 20; 25}).
51015202501234a# of keywordstime cost of key generation (103ms)Scheme NameZZ11OT15ZLW19OURS5101520250200400600800b# of keywordstime cost of index building (103ms)5101520250.00.51.01.52.0c# of keywordstime cost of trapdoor generation (103ms)5101520250100200300400500d# of keywordstime cost of test (103ms)Appl. Sci. 2019, 9, 3655
14 of 16
Figure 3. Impact of n on the space cost of pk (a); sk (b); index (c) and trapdoor (d). (D = 1000, m = 5
and n = {5; 10; 15; 20; 25}).
5.2.3. Comments
Based on the theoretical analysis and experimental results, we ﬁnd that our scheme is better than
ZZ11 except the time cost of key generation and the storage cost of sk. Note that the key generation
algorithm does not run often and sk is stored only several copies. So, we can argue that our scheme
has a better performance than ZZ11. Compared with OT15, our scheme is better than it except the
space cost of trapdoor. Considering that n is not very large, we can argue that our scheme is much
practical than OT15. Compared with ZLW19, our scheme is better than this scheme except the time
cost of trapdoor generation and the storage cost of trapdoor. The reason is that the time and space cost
of trapdoor are both linear with m, not n. However, since n and m are commonly small, we can argue
that our scheme is still much more practical than ZLW19.
For our scheme, when n = 10, the average time costs of index building and testing of one
document are 63 ms and 62 ms, respectively. The average time costs of key and trapdoor generation
are 10 ms and 119 ms, respectively. Thus, we can argue that our scheme is very practical in the mobile
setting in which data receiver has limited computation capacity. Note that the index structure for our
scheme is that each document has its own index. We can accelerate the process of the index building
and testing by using the parallel computation mechanism. What is more, our scheme can efﬁciently
support dynamic operation, that is, documents deletion and insertion, on the account of the property
of the index structure. According to these analysis, we can argue that our scheme is very suitable for
the actual e-mail system.
6. Conclusions
In this paper, we propose a secure and efﬁcient SPE-CKS scheme for realizing multi-keywords
search over the encrypted e-mail data. The rigorous theoretical analysis shows that our scheme
has better performance on the time and space complexities than the previous SPE-CKS schemes.
Furthermore, an experiment over a real world e-mail dataset illustrates that our scheme is practical
in the mobile cloud setting. Considering that advanced search functions, for example, disjunctive,
51015202501020304050a# of keywordsspace cost of pk (kb)Scheme NameZZ11OT15ZLW19OURS51015202501020304050b# of keywordsspace cost of sk (kb)5101520250102030405060c# of keywordsspace cost of index (mb)510152025012345d# of keywordsspace cost of trapdoor (kb)Appl. Sci. 2019, 9, 3655
15 of 16
Boolean and fuzzy keywords search, are very useful for the encrypted e-mail system, we will construct
a secure and efﬁcient SPE scheme supporting various advanced search functions in the future work.
Author Contributions: Conceptualization, Y.Z. and Y.L.; Data curation, Y.Z. and Y.L.; Formal analysis, Y.Z.
and Y.L.; Funding acquisition, Y.L.; Methodology, Y.Z.; Software, Y.Z. and Y.W.; Validation, Y.Z., Y.L. and Y.W.;
Writing—original draft, Y.Z. and Y.L.; Writing—review & editing, Y.Z., Y.L. and Y.W.
Funding: We gratefully acknowledge the support of the National Natural Science Foundation of China under
Grant Nos. 61402393 and 61601396, and Nanhu Scholars Program for Young Scholars of XYNU.
Conﬂicts of Interest: The authors declare that they have no conﬂict of interest.
References
1.
2.
3.
4.
Song, D.; Wagner, D.; Perrig, A. Practical Techniques for Searching on Encrypted Data. In Proceedings of the
IEEE Symposium on Research in Security and Privacy 2000, Berkeley, CA, USA, 14–17 May 2000; pp. 44–55.
Boneh, D.; Di Crescenzo, G.; Ostrovsky, R.; Persiano, G. Public Key Encryption with Keywrod Search.
In EUROCRYPT 2004; Cachin, C., Camenisch, J.L., Eds.; Lecture Notes in Computer Science; Springer:
Berlin/Heidelberg, Germany, 2004; Volume 3027, pp. 506–522.
Xu, P.; He, S.; Wang, W.; Susilo, W.; Jin, H. Lightweight Searchable Public-key Encryption for Cloud-assisted
Wireless Sensor Networks. IEEE Trans. Ind. Inform. 2017, 14, 3712–3723. [CrossRef]
Park, D.J.; Kim, K.; Lee, P.J. Public Key Encryption with Conjunctive Field Keyword Search. In WISA 2004;
Lim, C.H., Yung, M., Eds.; Lecture Notes in Computer Science; Springer: Berlin/Heidelberg, Germany, 2004;
Volume 3325, pp. 73–86.
6.
5. Hwang, Y.H.; Lee, P.J. Public Key Encryption with Conjunctive Keyword Search and Its Extension to a
Multi-user System. In Pairing 2007; Lecture Notes in Computer Science; Springer: Berlin/Heidelberg,
Germany, 2007; Volume 4575, pp. 2–22.
In TCC 2007;
Boneh, D.; Waters, B. Conjunctive, Subset, and Range Queries on Encrypted Data.
Vadhan, S.P., Ed.; Lecture Notes in Computer Science; Springer: Berlin/Heidelberg, Germany, 2007;
Volume 4392, pp. 535–554.
Zhang, B.; Zhang, F. An efﬁcient public key encryption with conjunctive-subset keywords search. J. Netw.
Comput. Appl. 2011, 34, 262–267. [CrossRef]
Okamoto, T.; Takashima, K. Achieving short ciphertexts or short secret-keys for adaptively secure general
inner-product encryption. Des. Codes Cryptogr. 2015, 77, 138–159. [CrossRef]
Zhang, Y.; Lu, S. POSTER: Efﬁcient method for disjunctive and conjunctive keyword search over encrypted
data. In Proceedings of the 2014 ACM SIGSAC Conference on Computer and Communications Security,
Scottsdale, AZ, USA, 3–7 November 2014; pp. 1535–1537.
9.
7.
8.
10. Zhang, Y.; Li, Y.; Wang, Y. Conjunctive and Disjunctive Keyword Search over Encrypted Mobile Cloud Data
in Public Key System. Mob. Inf. Syst. 2018, 2018, 3839254. [CrossRef]
11. Lu, Y.; Wang, G.; Li, J. Keyword guessing attacks on a public key encryption with keyword search scheme
without random oracle and its improvement. Inf. Sci. 2019, 479, 270–276. [CrossRef]
12. Goh, E.-J. Secure Indexes. Cryptology ePrint Archive. Report; 2003/216. Available online: http://eprint.iacr.
org/2003/216/ (accessed on 25 February 2004).
13. Golle, P.; Staddon, J.; Waters, B. Secure Conjunctive Search over Encrypted Data. In ACNS 2004; Jakobsson, M.,
Yung, M., Zhou, J., Eds.; Lecture Notes in Computer Science; Springer: Berlin/Heidelberg, Germany, 2004;
Volume 3089, pp. 31–45.
14. Byun, J.W.; Lee, D.H.; Lim, J. Efﬁcient Conjunctive Keyword Searches on Encrypted Data Storage System.
In EuroPKI 2006; Atzeni, A.S., Lioy, A., Eds.; Lecture Notes in Computer Science; Springer: Berlin/Heidelberg,
Germany, 2004; Volume 4043, pp. 184–196.
15. Byun, J.W.; Rhee, H.S.; Park, H.; Lee, D.H. Off-line keyword guessing attacks on recent keyword search
schemes over encrypted data. In SDM 2006; Lecture Notes in Computer Science; Springer: Berlin/Heidelberg,
Germany, 2006; Volume 4165, pp. 75–83.
16. Cao, N.; Wang, C.; Li, M.; Ren, K.; ; Lou, W. Privacy-preserving multi-keyword ranked search over encrypted
cloud data. IEEE Trans. Parallel Distrib. Syst. 2014, 25, 222–233. [CrossRef]
Appl. Sci. 2019, 9, 3655
16 of 16
17.
Fu, Z.; Sun, X.; Liu, Q.; Zhou, L.; Shu, J. Achieving Efﬁcient Cloud Search Services: Multi-Keyword Ranked
Search over Encrypted Cloud Data Supporting Parallel Computing. IEICE Trans Commun. 2015, 98, 190–200.
[CrossRef]
18. Xia, Z.; Wang, X.; Sun, X.; Wang, Q. A Secure and Dynamic Multi-Keyword Ranked Search Scheme over
Encrypted Cloud Data. IEEE Trans. Parallel Distrib. Syst. 2016, 27, 340–352. [CrossRef]
19. Boneh, D.; Franklin, M. Identity based Encryption from the Weil Pairing. In CRYPTO 2001; Kilian, J., Ed.;
Lecture Notes in Computer Science; Springer: Berlin/Heidelberg, Germany, 2001; Volume 2139, pp. 213–229.
20. Abdalla, M.; Bellare, M.; Catalano, D.; Kiltz, E.; Kohno, T.; Lange, T.; Malone-Lee, J.; Neven, G.; Paillier, P.;
Shi, H. Searhable Encryption Revisited: Consistency Properties, Relation to Anonymous IBE, and Extensions.
In CRYPTO 2005; Shoup, V., Ed.; Lecture Notes in Computer Science; Springer: Berlin/Heidelberg,
Germany, 2005; Volume 3621, pp. 205–222.
21. Katz, J.; Sahai, A.; Waters, B. Predicate encryption supporting disjunctions, polynomial equations, and inner
products. J. Cryptol. 2013, 26, 191–224. [CrossRef]
22. Lewko, A.; OkamotoT, S.; ATakashima, K.; Takashima, K.; Waters, B. Fully secure functional
In Advances in
encryption: Attribute-based encryption and (hierarchical) inner product encryption.
Cryptology—EUROCRYPT 2010; Lecture Notes in Computer Science; Springer: Berlin/Heidelberg,
Germany, 2010; Volume 6110, pp. 62–91.
23. Wang, B.; Hou, Y.; Li, M.; Wang, H.; Li, H. Maple: Scalable multi-dimensional range search over encrypted
cloud data with tree-based index. In Proceedings of the 9th ACM Symposium on Information, Computer
and Communications Security, Kyoto, Japan, 4–6 June 2014; pp. 111–122.
24. Zhu, H.; Mei, Z.; Wu, B.; Li, H.; Cui, Z. Fuzzy keyword search and access control over ciphertexts in cloud
25.
computing. In Information Security and Privacy; Springer: Cham, Switzerland, 2017; pp. 248–265.
Jeong, I.R.; Kwon, J.O.; Hong, D.; Lee, D.H. Constructing PEKS schemes secure against keyword guessing
attacks is possible? Comput. Commun. 2009, 32, 394–396. [CrossRef]
26. Rhee, H.S.; Susilo, W.; Kim, H. Secure searchable public key encryption scheme against keyword guessing
attacks. IEICE Electron. Express 2009, 6, 237–243. [CrossRef]
27. Tang, Q.; Chen, L. Public-key Encryption with Registered Keyword Search.
In Proceedings of
the Sixth European Workshop on Public Key Services, Applications and Infrastructures, Pisa, Italy,
10–11 September 2009.
Shao, Z.; Yang, B. On security against the server in designated tester public key encryption with keyword
search. Inform. Process. Lett. 2015, 115, 957–961 . [CrossRef]
Joux, A. The Weil and Tate Pairing as Building Blocks for Public Key Cryptosystems. In Algorithmic Number
Theory; Fieker, C., Kohel, D.R., Eds.; Lecture Notes in Computer Science; Springer: Berlin/Heidelberg,
Germany, 2002; Volume 2369, pp. 20–32.
28.
29.
30. Boneh, D.; Boyen, X. Efﬁcient selective-ID secure identity based encryption.
In Advances in
Cryptology—EUROCRYPT 2004; Lecture Notes in Computer Science; Springer: Berlin/Heidelberg,
Germany, 2004; Volume 3027, pp. 223–238.
31. Bao, F.; Deng, R.H.; Zhu, H. Variations of Difﬁe-Hellman Problem. In Proceedings of the International
Conference on Information and Communications Security, ICICS, Huhehaote, China, 10–13 October 2003.
32. Caro, A.D. The Java Pairing Based Cryptography Library (JPBC). Available online: Http://gas.dia.unisa.it/
projects/jpbc/ (accessed on 24 February 2013).
33. Cohen W.W. Enron E-Mail Dataset. Available online: Http://www.cs.cmu.edu/~./enron/ (accessed on
20 June 2019).
c(cid:13) 2019 by the authors. Licensee MDPI, Basel, Switzerland. This article is an open access
article distributed under the terms and conditions of the Creative Commons Attribution
(CC BY) license (http://creativecommons.org/licenses/by/4.0/).