Flash内存管理与漏洞利用
Hearmen
北京大学软件安全研究小组
目录
AVM2 虚拟机简介
CVE-2015-0313
CVE-2015-3043
CVE-2015-5119
攻击演示
uCVE-2015-3043
AVM2 虚拟机简介
uAVM2 是 目 前 使 用 的 flash player 的 核 心 ， 所 有 的
ActionScript 3 代码都由AVM2来执行
u采用Jit与解释器混合执行的方式，大幅提升flash的运
行效率
ActionScript 3执行流程
u《avm2overview》
ActionScript 3
bytecode
Constant pool
堆栈初始化
常量池初始化
JIT
解释器
机器语言
编译器
AVM 2
AVM2 内存管理
u使用MMgc进行内存管理
u延缓引用计数，标记/清除算法
u从操作系统中申请大量保留空间，按页交予垃圾回收机
制GC进行管理。
AVM2 内存管理
HeapBlock
4k
4k
4k
4k
4k
4k
4k
4k
4k
4k
4k
4k
4k
4k
4k
4k
4k
4k
4k
4k
HeapBlock
HeapBlock
HeapBlock
HeapBlock
GCHeap
Free[0]
Free[1]
Free[2]
Free[3]
Free[4]
Free[5]
……
Free[30]
1 block
1 block
1 block
1 block
2 block
2 block
2 block
2 block
3 block
3 block
3 block
3 block
4 block
4 block
4 block
4 block
5 block
5 block
5 block
5 block
6 block
6 block
6 block
6 block
128 
block
… 
block
… 
block
… 
block
FreeLists
CVE-2015-0313
ByteArray.Clear()
利用步骤
堆喷射，控制内存布局
触发漏洞，更改Vector的length属性
任意地址读写，布局shellcode
更改对象虚表，接管程序运行流程
ByteArray
uByteArrayObject
uBuffer
uBuffer大小以4k倍数增长
u通过FixedMalloc进行内存分配
FixedMalloc
FixedMalloc::Alloc(size)
{
if(size FixedAlloc()
else
LargeAlloc(size)
}
FixedBlock
FixedAlloc
FixedAllo
c
FixedBlock
FixedBlock
FixedBlock
FixedBlock
Free
item
Free
item
m_firstFree
firstFree
m_firstBlock
Uint Vector
内存布局
data
data
Data_1
data
data
data
data
Data_2
data
data
Worker
data
data
FixedBlock
data
data
Block Head
Vector
Vector
Vector
si32
Main
FixedBlock
稳定性的考虑
uByteArray.clear之前的额外操作
ØGCHeap内存释放，将HeapBlock挂入freelist末尾
ØGCHeap内存分配，从freelist头部开始遍历。
CVE-2015-3043
ØFlash在解析Flv中Nellymoser压缩的时，没有对buffer长度
进行正确的检验，从而导致的堆溢出
Ø被溢出的对象大小是0x2000
Ø该漏洞出现过 两次
内存布局
Vector
Vector
Free
Vector
Vector
Vector
Vector
Corrupt Buffer
Vector
Vector
Vector
Vector
Corrupt Obj
Vector
Vector
加载flv
重新布局
Object Vector
GC::Alloc
GC::Alloc
{
if(size  Vector[ i ]
优雅的利用
uNo ROP
uAS完成操作
uBypass CFG
FunctionObject
uAS中的函数对象
uFunction.apply ; Function.call；Function（）
FunctionObject
uCore可由FunctionObject查找
AS3_call
Demo
u完全使用AS代码
操作API
u只能精确控制两
个参数
u调用的函数参数
个数需为三或四
Flash_18_0_0_209/232
uVector长度验证
u隔离堆
u强随机化
长度验证
uUint Vector
uObject Vector
绕过验证
u堆溢出
uString对象
u更改长度字段/更改起始指针
u任意地址读
绕过验证
uVectorObject
u更改数据对象指针
uCookie作为length
u交换Vector长度与Cookie
谢谢