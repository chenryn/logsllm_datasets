---
author: Gabriel Cánepa
category: 技术
comments_data: []
count:
  commentnum: 0
  favtimes: 8
  likes: 0
  sharetimes: 0
  viewnum: 9714
date: '2015-10-03 09:07:00'
editorchoice: false
excerpt: '在本系列的前面几篇文章中，我们已经详细地探索了至少两种访问控制方法：标准的 ugo/rwx 权限（RHCSA 系列（三）: 如何管理 RHEL7
  的用户和组） 和访问控制列表（RHCSA 系列（七）: 使用 ACL（访问控制列表) 和挂载 Samba/NFS 共享）。  RHCSA 认证：SELinux
  精要和控制文件系统的访问 尽管作为第一级别的权限和访问控制机制是必要的，但它们同样有一些局限，而这些局限则可以由安全增强 Linux（Security Enhanced
  Linux，简称为 SELinux）来处理。 这些局限的一种情形是：某个用户可能通过一个泛泛的 chmod 命令将文件或目录暴露出现了安'
fromurl: http://www.tecmint.com/selinux-essentials-and-control-filesystem-access/
id: 6339
islctt: true
largepic: /data/attachment/album/201510/03/001057n1o6dma6odtbldmp.png
permalink: /article-6339-1.html
pic: /data/attachment/album/201510/03/001057n1o6dma6odtbldmp.png.thumb.jpg
related:
- displayorder: 0
  raid: 6335
- displayorder: 0
  raid: 6348
reviewer: ''
selector: ''
summary: '在本系列的前面几篇文章中，我们已经详细地探索了至少两种访问控制方法：标准的 ugo/rwx 权限（RHCSA 系列（三）: 如何管理 RHEL7
  的用户和组） 和访问控制列表（RHCSA 系列（七）: 使用 ACL（访问控制列表) 和挂载 Samba/NFS 共享）。  RHCSA 认证：SELinux
  精要和控制文件系统的访问 尽管作为第一级别的权限和访问控制机制是必要的，但它们同样有一些局限，而这些局限则可以由安全增强 Linux（Security Enhanced
  Linux，简称为 SELinux）来处理。 这些局限的一种情形是：某个用户可能通过一个泛泛的 chmod 命令将文件或目录暴露出现了安'
tags:
- RHCSA
thumb: false
title: RHCSA 系列（十三）： 在 RHEL 7 中使用 SELinux 进行强制访问控制
titlepic: false
translator: FSSlc
updated: '2015-10-03 09:07:00'
---
在本系列的前面几篇文章中，我们已经详细地探索了至少两种访问控制方法：标准的 ugo/rwx 权限（[RHCSA 系列（三）: 如何管理 RHEL7 的用户和组](/article-6187-1.html)） 和访问控制列表（[RHCSA 系列（七）: 使用 ACL（访问控制列表) 和挂载 Samba/NFS 共享](/article-6263-1.html)）。
![RHCSA 认证：SELinux 精要和控制文件系统的访问](/data/attachment/album/201510/03/001057n1o6dma6odtbldmp.png)
*RHCSA 认证：SELinux 精要和控制文件系统的访问*
尽管作为第一级别的权限和访问控制机制是必要的，但它们同样有一些局限，而这些局限则可以由 安全增强 Linux   （    Security Enhanced Linux，简称为 SELinux    ） 来处理。
这些局限的一种情形是：某个用户可能通过一个泛泛的 chmod 命令将文件或目录暴露出现了安全违例，从而引起访问权限的意外传播。结果，由该用户开启的任意进程可以对属于该用户的文件进行任意的操作，最终一个恶意的或有其它缺陷的软件可能会取得整个系统的 root 级别的访问权限。
考虑到这些局限性，美国国家安全局（NSA） 率先设计出了 SELinux，一种强制的访问控制方法，它根据最小权限模型去限制进程在系统对象（如文件，目录，网络接口等）上的访问或执行其他的操作的能力，而这些限制可以在之后根据需要进行修改。简单来说，系统的每一个元素只给某个功能所需要的那些权限。
在 RHEL 7 中，SELinux 被并入了内核中，且默认情况下以 强制模式   （    Enforcing    ） 开启。在这篇文章中，我们将简要地介绍有关 SELinux 及其相关操作的基本概念。
### SELinux 的模式
SELinux 可以以三种不同的模式运行：
*  强制模式   （    Enforcing    ） ：SELinux 基于其策略规则来拒绝访问，这些规则是用以控制安全引擎的一系列准则；
*  宽容模式   （    Permissive    ） ：SELinux 不会拒绝访问，但对于那些如果运行在强制模式下会被拒绝访问的行为进行记录；
*  关闭   （    Disabled    ）  (不言自明，即 SELinux 没有实际运行).
使用 `getenforce` 命令可以展示 SELinux 当前所处的模式，而 `setenforce` 命令（后面跟上一个 1 或 0） 则被用来将当前模式切换到 强制模式   （    Enforcing    ） 或 宽容模式   （    Permissive    ） ，但只对当前的会话有效。
为了使得在登出和重启后上面的设置还能保持作用，你需要编辑 `/etc/selinux/config` 文件并将 SELINUX 变量的值设为 enforcing，permissive，disabled 中之一：
```
# getenforce
# setenforce 0
# getenforce
# setenforce 1
# getenforce
# cat /etc/selinux/config
```
![设置 SELinux 模式](/data/attachment/album/201510/03/001104z817mn41dl1z7xhn.png)
*设置 SELinux 模式*
通常情况下，你应该使用 `setenforce` 来在 SELinux 模式间进行切换（从强制模式到宽容模式，或反之），以此来作为你排错的第一步。假如 SELinux 当前被设置为强制模式，而你遇到了某些问题，但当你把 SELinux 切换为宽容模式后问题不再出现了，则你可以确信你遇到了一个 SELinux 权限方面的问题。
### SELinux 上下文
一个 SELinux  上下文   （    Context    ） 由一个访问控制环境所组成，在这个环境中，决定的做出将基于 SELinux 的用户，角色和类型（和可选的级别）：
* 一个 SELinux 用户是通过将一个常规的 Linux 用户账户映射到一个 SELinux 用户账户来实现的，反过来，在一个会话中，这个 SELinux 用户账户在 SELinux 上下文中被进程所使用，以便能够明确定义它们所允许的角色和级别。
* 角色的概念是作为域和处于该域中的 SELinux 用户之间的媒介，它定义了 SELinux 可以访问到哪个进程域和哪些文件类型。这将保护您的系统免受提权漏洞的攻击。
* 类型则定义了一个 SELinux 文件类型或一个 SELinux 进程域。在正常情况下，进程将会被禁止访问其他进程正使用的文件，并禁止对其他进程进行访问。这样只有当一个特定的 SELinux 策略规则允许它访问时，才能够进行访问。
下面就让我们看看这些概念是如何在下面的例子中起作用的。
**例 1：改变 sshd 守护进程的默认端口**
在 [RHCSA 系列（八）: 加固 SSH，设定主机名及启用网络服务](/article-6266-1.html) 中，我们解释了更改 sshd 所监听的默认端口是加固你的服务器免受外部攻击的首要安全措施。下面，就让我们编辑 `/etc/ssh/sshd_config` 文件并将端口设置为 9999：
```
Port 9999
```
保存更改并重启 sshd：
```
# systemctl restart sshd
# systemctl status sshd
```
![更改 SSH 的端口](/data/attachment/album/201510/03/001110nkt5tuclnnkvruzg.png)
*重启 SSH 服务*
正如你看到的那样， sshd 启动失败，但为什么会这样呢？
快速检查 `/var/log/audit/audit.log` 文件会发现 sshd 已经被拒绝在端口 9999 上开启（SELinux 的日志信息包含单词 "AVC"，所以这类信息可以被轻易地与其他信息相区分），因为这个端口是 JBoss 管理服务的保留端口：
```
# cat /var/log/audit/audit.log | grep AVC | tail -1
```
![查看 SSH 日志](/data/attachment/album/201510/03/001112ges4t76vm2xlqexv.png)
*查看 SSH 日志*