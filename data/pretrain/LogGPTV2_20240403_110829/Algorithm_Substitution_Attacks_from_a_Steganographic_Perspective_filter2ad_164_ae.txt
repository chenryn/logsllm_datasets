InSecasa
ASA,SIG(κ) ≤ InSecprf
F (κ) + negl(κ)
for a pseudorandom function F.
Theorem 7.4 (Theorem 2 in [2]). For every coin-extractable sig-
nature scheme SIG, there is a successful algorithm substitution attack
ASA and a negligible function negl such that
InSecasa
ASA,SIG(κ) ≤ negl(κ).
Both of these results are easily implied by Theorem 7.1.
On the negative side (from the view of an algorithm substitution
attack), they show that unique signature schemes are resistant to
ASAs fulfilling the verifiability condition. Informally this means that
(a) each message has exactly on signature (for a fixed key-pair) and
(b) each signature produced by the ASA must be valid.
Theorem 7.5 (Theorem 3 in [2]). For all unique signature schemes
SIG and all algorithm substitution attacks ASA against them that
fulfill the verifiability condition, there is a negligible function negl
such that
InSecasa
ASA,SIG(κ) ≥ 1 − negl(κ).
As unique signature schemes do not provide enough min-entropy
for a stegosystem, this results follows from Theorem 1.3.
8 A LOWER BOUND FOR UNIVERSAL ASA
A setting similar to steganography, where universal stegosystems
exist, that can be used for any channel of sufficiently large min-
entropy, would be quite useful for attackers that plan to launch
algorithm substitution attacks. Such a system would allow them to
attack any SES without knowing the internal specification of the
encryption algorithm. A closer look at the results in [2, 6, 7] reveals
that their attacks do indeed go without internal knowledge of the
used encryption algorithm. They only manipulate the random coins
used in the encryption process. Note that SES.Enc(k, m; ρ) – where
3To be more precise, their attacks only replace the signing algorithm Sign.
ρ denotes the random coins used by SES.Enc – is a deterministic
function, as SES.Enc is a PPTM.
We thus define a universal ASA as a triple of PPTMs such that
for every symmetric encryption scheme SES, the triple
ASASES = (ASA.Gen, ASA.EncSES.Enc(·,·;·)
, ASA.Ext)
is an ASA against SES. The encoder ASA.Enc has only oracle access
to the encryption algorithm SES.Enc of the SES: It may thus choose
arbitrary values k, m, and ρ and receives a ciphertext
c ← SES.Enc(k, m; ρ)
without having a complete description of the encryption schemes.
Let Q be set of ciphertexts that ASA.Enc receives upon its queries.
It might be possible for the encoding algorithm ASA.Enc to con-
struct a new ciphertext c (cid:60) Q from the elements of Q, but such a
construction must be highly specific to a single SES and thus non-
universal. We thus say that ASA is consistent, if ASA.EncSES.Enc(·,·;·)
only outputs ciphertexts in Q for all encryption schemes SES.
Note that the encoding EncSES.Enc(·,·;·) of a consistent ASA with
parameters (ak, am, k, m, σ) may output a ciphertext c with m (cid:44)
SES.Dec(k, c) if c was provided by the encryption oracle. But gen-
erating a c with m = SES.Dec(k, c) is only allowed if c was given
by the oracle.
As noted above, all attacks in [2, 6, 7] are consistent and universal
and Bellare, Jaeger, Kane explicitly state in their work [6] that their
ASA works against any encryption scheme of sufficiently large min-
entropy. We also remark that the rejection sampling ASA presented
earlier is universal and consistent.
For such a universal and consistent attack ASA and an encryption
scheme SES, denote by ASA.query(SES, κ) the expected number
of oracle calls that ASA.EncSES.Enc(·,·;·) makes to the encryption
algorithm SES.Enc, i. e. the expected size of Q.
In the steganographic setting, Dedić et al. showed in [12] that
(under the cryptographic assumption that one-way functions exist)
no universal stegosystem can embed more than O(1) · log(κ) bits
per document and thus proved that the rejection sampling based
systems have optimal rate.
The critical observation is that a universal stegosystem can only
work upon the documents sampled from the channel, as most chan-
nel distributions are not learnable due to information-theoretic
reasons. The stegosystem is thus not able to generate valid doc-
uments by itself. Their proof crucially depends on the fact that
the stegosystem can not deduce anything about the distribution of
unseen documents from the given documents. This is summarized
by two key properties. The first one (Lemma 2 in [12]) says that
secure stegosystems almost always output query answers which
belong to the channel’s support. This can be adapted to universal
ASAs (in a weaker form) as follows:
Lemma 8.1. Let ASA be a universal and consistent ASA such that
it is secure against the encryption scheme SES. Then, for all key
lengths κ, attacker messages am, keys k and messages m we have
Pr[SES.Dec(k, c) (cid:44) m] ≤ negl for some negligible function negl,
where c ← ASA.Enc(ak, am, k, m) for ak ← ASA.Gen(1κ).
Proof. Since the watchdog knows k and m, it can verify if
SES.Dec(k, c) = m and thus detect whenever the universal ASA
outputs a non-ciphertext.
□
Session H1:  Crypto AttacksCCS’17, October 30-November 3, 2017, Dallas, TX, USA1658The second key property (stated as Lemma 1 in [12]) informally
says that a reliable universal stegosystem that samples at most n
documents can only embed log(n) bits per document. This is due
to the fact that the embedding must be injective with regard to
the attacker message am and that the sampling of the documents
is independent. Note that the independence of the documents de-
scribed above for the steganographic setting is not true for ASAs:
As the ciphertexts are constructed by the same PPTM SES.Enc (on
the same key k and the same message m), there is a clear depen-
dency between the ciphertexts usable by the ASA. One can thus
not simply translate the second property into the ASA setting.
In the following, we will taker a closer look at an example that
clearly shows the dependency between the ciphertexts and how an
ASA can make use of this fact. We will then modify this example
and prove that this dependency can be eliminated in the random
oracle model. The full version of this work also shows how one
can get rid of the dependence on the random oracle model and the
requirement of consistency by using signature schemes similar to
the approach used by the authors in [9]. A minor modification of
this example allows us to also state the second key property in the
setting of ASAs in the random oracle model.
Consider an example presented by Bellare et al. in [7], where
they presented an attack against symmetric encryption schemes
that surface their initialization vector (IV). One such example is the
random counter mode CTR$F of [5] making use of the PRF F. For
the sake of completeness, the encoder CTR$F.Enc of the random
counter mode is defined below, where m is a message of length
ℓ · F.out(κ).
Input: key k, message m; PRF F
1: split m into m1, m2, . . . , mℓ with |mi| = F.out(κ)
2: r ← {0, 1}F.in(κ)
3: c0 := r
4: for i = 1, . . . , ℓ do
5:
6: return c = c0c1 . . . cℓ
ci := F.Evalk([c0 + i mod 2F.in(κ)]) ⊕ mi
▷ treated as string and number
Algorithm 6: Encoder of random counter mode CTR$F.
In a universal and consistent ASA, the encoder ASA.Enc can
observe that the first part c0 of the produced ciphertexts equals the
random coins ρ it gave to its encryption oracle. It may thus compute
a certain ρ∗ = SES.Enc(ak, am) (which is indistinguishable from a
random string) and the resulting ciphertext c∗ = SES.Enc(k, m; ρ∗)
would thus embed the attacker message. In contrast to the stegano-
graphic setting, where the stegoencoder can simply query its oracle
for channel documents, a universal and consistent ASA can choose
the random coins and make use of the dependencies between those
coins and the generated ciphertext.
In the following, we will thus work in the random oracle model
introduced by Bellare and Rogaway [8] to modify the random
counter mode CTR$F of [5] such that no ASA can embed more
than O(1) · log(κ) bits per ciphertext by getting rid of these de-
pendencies. If H: {0, 1}n → {0, 1}F.in(κ) is a random oracle (see
e. g. [17] for a detailed treatment of this topic), we modify the algo-
rithm above by setting c0 := H(r) and choosing r of length n such
that | H(r)| = F.in(κ). Denote this modified version by CTR$F,H.
Due to the definition of the random oracle, until H(r) is computed,
Pr[H(r) = x] = 2− F.in(κ) for all x, i. e. no one can predict the output
of the random oracle. Clearly, if one replaces the PRF F by a com-
pletely random function f , the output of CTR$f ,H.Enc(k, m; r) is in-
dependent of k, m and r. This implies that the set of sampled cipher-
texts C is a completely random subset of supp(CTR$f ,H.Enc(k, m)).
We can thus state the following.
Lemma 8.2. Let ASA be a universal and consistent ASA, F be a
PRF and H be a random oracle. For all key lengths κ:
UnRelASA,CTR$F,H(κ) ≥
1 − ASA.ol(κ) · ASA.query(CTR$F,H, κ)
2ASA.ml(κ)
− InSecprf
F (κ).
This allows us to conclude the following corollary bounding the
number of bits embeddable into a single ciphertext by a universal
algorithm substitution attack.
Corollary 8.3. In the random oracle model, there is no universal
and consistent ASA that embeds more than O(1) · log(κ) bits per
ciphertext.
9 CONCLUSIONS
In this work, we proved that ASAs in the strong undetectability
model of Bellare, Jaeger and Kane [6] are a special case of stegosys-
tems on a certain kind of channels described by symmetric en-
cryption schemes. This gives a rigorous proof of the well-known
connection between steganography and algorithm substitution at-
tacks. We make use of this relationship to show that a wide range of
results on ASAs are already present in the steganographic literature.
Inspired by this connection, we define universal ASAs that work
with no knowledge on the internal implementation of the sym-
metric encryption schemes and thus work for all such encryption
schemes with sufficiently large min-entropy. As almost all known
ASAs are universal, we investigate their rate – the number of em-
bedded bits per ciphertext – and prove a logarithmic upper bound
of this rate.
REFERENCES
[1] Ross J. Anderson. 1996. Stretching the Limits of Steganography. In Proc. IH
(Lecture Notes in Computer Science), Vol. 1174. Springer, 39–48.
[2] Giuseppe Ateniese, Bernardo Magri, and Daniele Venturi. 2015. Subversion-
resilient signature schemes. In Proc. CCS. ACM, 364–375.
[3] Michael Backes and Christian Cachin. 2005. Public-Key Steganography with Ac-
tive Attacks. In Proc. TCC (Lecture Notes in Computer Science), Vol. 3378. Springer,
210–226.
[4] James Ball, Julian Borger, Glenn Greenwald, and others. 2013. Revealed: how US
and UK spy agencies defeat internet privacy and security. The Guardian 6 (2013).
[5] Mihir Bellare, Anand Desai, E. Jokipii, and Phillip Rogaway. 1997. A Concrete
Security Treatment of Symmetric Encryption. In Proc. FOCS. IEEE Computer So-
ciety, 394–403. Full version available under http://web.cs.ucdavis.edu/~rogaway/
papers/sym-enc.pdf.
[6] Mihir Bellare, Joseph Jaeger, and Daniel Kane. 2015. Mass-surveillance without
the State: Strongly Undetectable Algorithm-Substitution Attacks. In Proc. CCS
2015. ACM, 1431–1440.
[7] Mihir Bellare, Kenneth G. Paterson, and Phillip Rogaway. 2014. Security of
Symmetric Encryption against Mass Surveillance. In Proc. CRYPTO 2014 (Lecture
Notes in Computer Science), Vol. 8616. 1–19.
[8] Mihir Bellare and Phillip Rogaway. 1993. Random Oracles are Practical: A Para-
digm for Designing Efficient Protocols. In Proc. CCS. ACM, 62–73.
Session H1:  Crypto AttacksCCS’17, October 30-November 3, 2017, Dallas, TX, USA1659[9] Sebastian Berndt and Maciej Liśkiewicz. 2016. Hard Communication Channels
for Steganography. In Proc. ISAAC (LIPIcs), Vol. 64. Schloss Dagstuhl - Leibniz-
Zentrum fuer Informatik, 16:1–16:13.
[10] Christian Cachin. 2004. An information-theoretic model for steganography.
Information and Computation 192, 1 (2004), 41–56.
[11] Stephen Checkoway, Ruben Niederhagen, Adam Everspaugh, Matthew Green,
Tanja Lange, Thomas Ristenpart, Daniel J. Bernstein, Jake Maskiewicz, Hovav
Shacham, and Matthew Fredrikson. 2014. On the Practical Exploitability of Dual
EC in TLS Implementations. In Proc. USENIX. USENIX Association, 319–335.
[12] Nenad Dedić, Gene Itkis, Leonid Reyzin, and Scott Russell. 2009. Upper and lower
bounds on black-box steganography. Journal of Cryptology 22, 3 (2009), 365–394.
[13] Jean Paul Degabriele, Pooya Farshim, and Bertram Poettering. 2015. A More
Cautious Approach to Security Against Mass Surveillance. In Proc. FSE (Lecture
Notes in Computer Science), Vol. 9054. Springer, 579–598.
[14] Glenn Greenwald. 2014. No place to hide: Edward Snowden, the NSA, and the US
Chapman and Hall/CRC Press.
[18] Stefan Katzenbeisser and Fabien A.P. Petitcolas. 2002. Defining security in
steganographic systems. In Proc. Electronic Imaging. SPIE, 50–56.
[19] Michael Mitzenmacher and Eli Upfal. 2005. Probability and computing - random-
ized algorithms and probabilistic analysis. Cambridge University Press.
surveillance state. Macmillan.
[15] Nicholas J. Hopper, John Langford, and Luis von Ahn. 2002. Provably Secure
Steganography. In Proc. CRYPTO. Lecture Notes in Computer Science, Vol. 2442.
Springer, 77–92.
[16] Nicholas J. Hopper, Luis von Ahn, and John Langford. 2009. Provably secure
steganography. Computers, IEEE Transactions on 58, 5 (2009), 662–676.
[17] Jonathan Katz and Yehuda Lindell. 2007. Introduction to Modern Cryptography.
[20] Nicole Perlroth, Jeff Larson, and Scott Shane. 2013. NSA able to foil basic safe-
guards of privacy on web. The New York Times 5 (2013).
[21] Alexander Russell, Qiang Tang, Moti Yung, and Hong-Sheng Zhou. 2016. Clip-
tography: Clipping the Power of Kleptographic Attacks. In Proc. ASIACRYPT
(Lecture Notes in Computer Science), Vol. 10032. Springer, 34–64.
[22] Alexander Russell, Qiang Tang, Moti Yung, and Hong-Sheng Zhou. 2016. De-
stroying Steganography via Amalgamation: Kleptographically CPA Secure Public
Key Encryption. IACR Cryptology ePrint Archive 2016 (2016), 530.
[23] Bruce Schneier. 2007. Did NSA put a secret backdoor in new encryption stan-
dard? http://www.wired.com/politics/security/commentary/securitymatters/
2007/11/securitymatters. (2007).
[24] Bruce Schneier, Matthew Fredrikson, Tadayoshi Kohno, and Thomas Ristenpart.
2015. Surreptitiously Weakening Cryptographic Systems. IACR Cryptology ePrint
Archive 2015 (2015), 97.
[25] Dan Shumow and Niels Ferguson. 2007. On the Possibility of a Back Door in the
NIST SP800-90 Dual Ec Prng. Presentation at the CRYPTO 2007 Rump Session.
(2007).
[26] Gustavus J Simmons. 1984. The prisoners’ problem and the subliminal channel.
In Proc. CRYPTO. Springer, 51–67.
[27] Gustavus J Simmons. 1998. The history of subliminal channels. IEEE Journal on
Selected Areas in Communications 16, 4 (1998), 452–462.
[28] Adam Young and Moti Yung. 1996. The Dark Side of “Black-Box” Cryptography
or: Should We Trust Capstone?. In Proc. CRYPTO (Lecture Notes in Computer
Science), Vol. 1109. Springer, 89–103.
[29] Adam Young and Moti Yung. 1997. Kleptography: Using cryptography against
cryptography. In Proc. EUROCRYPT (Lecture Notes in Computer Science), Vol. 1233.
Springer, 62–74.
Session H1:  Crypto AttacksCCS’17, October 30-November 3, 2017, Dallas, TX, USA1660