# TCP Port 80 Open
- **Protocol**: TCP
- **Port**: 80
- **State**: Open
- **Service**: HTTP

# Other Ports
- All other ports are in a closed state.

# Primary Guess
- **Host IP**: x.x.x.x
- **Running OS**: Microsoft Windows 2000 Server Service Pack 3
- **Guess Probability**: 100%

---

## Xprobe2: The Ability to Totally Control Modules and Features

### Command Usage
```bash
[root@fremont src]# ./xprobe2 -v
Xprobe2 v.0.1 Copyright (c) 2002-2003 PI:EMAIL, PI:EMAIL, PI:EMAIL
usage: ./xprobe2 [options] target
Options:
-v                       Be verbose
-r                       Show route to target (traceroute)
-p  Specify portnumber, protocol, and state.
Example: tcp:23:open, UDP:53:CLOSED
-c                        Specify config file to use.
-h                       Print this help.
-o                        Use logfile to log everything.
-t                        Set initial receive timeout or roundtrip time.
-s                        Set packet-sending delay (milliseconds).
-d                        Specify debugging level.
-D                        Disable module number.
-m                        Specify number of matches to print.
-P                        Enable portscanning module.
-T                        Specify TCP port(s) to scan.
Example: -T21-23,53,110
-U                        Specify UDP port(s) to scan.
-f                        Force fixed round-trip time (-t opt).
```

---

## Maintaining a Quality Signature Database

### Database Management
- Xprobe2's signature database is tightly controlled.
- New signatures are added only if they can be verified against a test system we control or have legitimate access to.
- A high-quality signature database is essential for the tool's success.
- It is easy to corrupt a signature database, leading to false and inaccurate results.

### Current Database
- Rebuilt from scratch, currently containing over 160 signatures.
- **Linux Kernels**:
  - 2.4.x branch
  - 2.2.x branch
- **FreeBSD**:
  - 2.2.7, 2.2.8, 3.1, 3.2, 3.3, 3.4, 3.5.1, 4.0, 4.1, 4.2, 4.3, 4.4, 4.5, 4.6, 4.6.2, 4.7, 4.8, 5.0, 5.1
- **OpenBSD**:
  - 2.4, 2.5, 2.6, 2.7, 2.8, 2.9, 3.0, 3.1, 3.2, 3.3
- **NetBSD**:
  - 1.6.1, 1.6, 1.5.3, 1.5.2, 1.5.1, 1.5, 1.4.3, 1.4.2, 1.4.1, 1.4, 1.3.3, 1.3.2, 1.3.1, 1.3
- **Microsoft Windows**:
  - 2003-based Servers (unique ID)
  - Windows XP and its service packs
  - Windows 2000 based Server (unique for SP3 and SP4) and Workstation and their service packs
  - NT4 Server and Workstation with different service packs
  - ME, 98SE, 98, 95
- **Cisco IOS**:
  - 12.2, 12.0, 11.3, 11.2, 11.1
- And many more...

---

## Parallel Scanning Support

- Support for parallel scanning is being added to Xprobe2 (currently in development).
- Xprobe2 will be able to scan class B networks fairly quickly.
- Since Xprobe2 uses a minimal number of packets per host to discover the host's underlying operating system, its overall impact on the network is minimal compared to other active operating system fingerprinting tools.

---

## The Future of Active Operating System Fingerprinting

- New and existing TCP/IP stack-based fingerprinting methods can be added to create a tool that uses the best-of-breed active operating system TCP/IP-based stack fingerprinting methods.
- In the near future, other means for actively identifying the underlying operating system of a remote targeted system will need to be added.
- There is a limit to the abilities of TCP/IP stack fingerprinting, and other methods might provide additional insights that cannot be gained using traditional methods.

---

## Using the Application Layer

- When an application layer-based fingerprinting test is used, other fingerprinting tests that use the transport and IP layers can be used simultaneously based on the information exchanged during the "setup stage" of the application-based fingerprinting test.
- Several methods include:
  - Generic Tests
  - Application-based fingerprinting tests
  - Application-based fingerprinting tests targeting a specific operating system family or a certain group of operating systems

---

## Banner Grabbing

- Obtaining a service banner is usually a simple process, nearly as simple as changing the banner a certain service is using.
- Many operating system hardening guides contain instructions on how to change the banner presented with several services.
- Therefore, service banners should be treated with caution.
- There are unique cases in which a service banner cannot be altered.

### Example
```plaintext
06/21-17:02:09.520598 192.168.0.1:80 -> 192.168.0.3:49429
TCP TTL:64 TOS:0x0 ID:22699 IpLen:20 DgmLen:181
***A**** Seq: 0xEBC6279  Ack: 0xCD94564E  Win: 0x16D0  TcpLen: 20
48 54 54 50 2F 31 2E 30 20 34 30 31 20 41 75 74  HTTP/1.0 401 Aut
68 6F 72 69 7A 61 74 69 6F 6E 20 52 65 71 75 69  horization Requi
72 65 64 0D 0A 57 57 57 2D 41 75 74 68 65 6E 74  red..WWW-Authent
69 63 61 74 65 3A 20 42 61 73 69 63 20 72 65 61  icate: Basic rea
6C 6D 3D 22 44 2D 4C 69 6E 6B 20 44 49 2D 37 31  lm="D-Link DI-71
34 50 2B 22 0D 0A 43 6F 6E 74 65 6E 74 2D 74 79  4P+"..Content-ty
70 65 3A 20 74 65 78 74 2F 68 74 6D 6C 0D 0A 0D  pe: text/html...
0A 34 30 31 20 41 75 74 68 6F 72 69 7A 61 74 69  .401 Authorizati
6F 6E 20 52 65 71 75 69 72 65 64 0D 0A           on Required..
```
- The difference from other service banners is that the reply received from the D-Link 714P+ wireless broadband router cannot be altered by using any of the device's configuration interfaces.

### Implementation
- When implementing a banner-grabbing module as an active operating system fingerprinting module, different service banners should get different weights in the overall matching process according to the ability and ease of changing them.
- The overly cautious can grant a banner-grabbing module implementation with less impact on the overall fingerprinting results than other fingerprinting modules used.

### Example
```plaintext
[root@angelfire root]$ telnet x.x.x.x
Trying x.x.x.x...
Connected to x.x.x.x.
Escape character is '^]'.
User Access Verification
Username:
```

---

## Application-based Stack Fingerprinting

### Generic Tests
- Web Servers (HTTP Fingerprinting)
- Any other service which is widely implemented

### Group-specific Tests
- There is a need to use a specific test that targets an operating system family in question, providing the required information to dismantle the group and provide a clear and decisive answer about the underlying operating system of the targeted machine.

### Fingerprinting Process
- Launching Application
- Specific Tests
- Processing Results

---

## Xprobe2 v0.2 Live Demo

---

## Further Reading

- Arkin Ofir, “ICMP Usage in Scanning” research project
  - [http://www.sys-security.com](http://www.sys-security.com)
- Arkin Ofir, “ICMP Usage in Scanning” version 3.0, June 2001
  - [http://www.sys-security.com/html/projects/icmp.html](http://www.sys-security.com/html/projects/icmp.html)
- Arkin Ofir & Fyodor Yarochkin, “X – Remote ICMP based OS fingerprinting Techniques”, August 2001 (This paper describes the first generation of Xprobe).
  - [http://www.sys-security.com/archive/papers/X_v1.0.pdf](http://www.sys-security.com/archive/papers/X_v1.0.pdf)
- Arkin Ofir & Fyodor Yarochkin, “ICMP based remote OS TCP/IP stack fingerprinting techniques”, Phrack Magazine, Volume 11, Issue 57, File 7 of 12, Published August 11, 2001.
  - [http://www.sys-security.com/archive/phrack/p57-0x07](http://www.sys-security.com/archive/phrack/p57-0x07)
- Arkin Ofir & Fyodor Yarochkin, “Xprobe2 - A „Fuzzy‟ Approach to Remote Active Operating System Fingerprinting”
  - [http://www.sys-security.com/archive/papers/Xprobe2.pdf](http://www.sys-security.com/archive/papers/Xprobe2.pdf), August 2002.
- Arkin Ofir, Fyodor Yarochkin, Meder Kydyraliev, “Next Generation Active Operating System Fingerprinting – The Present & Future of Xprobe2”, July 2003.

---

## Questions?

---

**O F I R   A R K I N,   F O U N D E R,   T H E   S Y S – S E C U R I T Y   G R O U P**
© 2 0 0 0 – 2 0 0 3     T H E   S Y S – S E C U R I T Y   G R O U P