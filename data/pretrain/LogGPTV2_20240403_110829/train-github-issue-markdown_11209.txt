Python's for-else construct as described for example in section 4.4, here, is
sometimes very useful. (The idea is that the else clause will be executed
after the loop completes normally, but not if we break out of the loop.) Could
something similar be added to Julia?
As an example, code like:
    converged=true
    for i=1:n
        if !isapprox(y[i],ynew[i])
            converged=false
            break
        end
    end
    if converged
        return y
    end
could become:
    for i=1:n
        if !isapprox(y[i],ynew[i])
            break
        end
    else
        return y
    end