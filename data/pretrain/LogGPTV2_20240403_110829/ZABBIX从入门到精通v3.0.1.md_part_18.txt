以上是没问题的信息，那么出现故障是什么样子呢？我把密码改掉，演示给大家看看下图，在LOGIN IN这个step
就出错了，拿不到SID
那么Required String不匹配又是什么样子呢？我们把阶段3Login CHECK的required string的Profile改成Profile1试
试。看看结果
好了，web监控的实例就完成了。
zabbix 监控 API
现在各种应用都走api，例如淘宝，天气预报等手机、pad客户端都是走api的，那么平时也得对这些api做监控了。
怎么做呢？zabbix的web监控是不二选择了。今天就以天气预报api作为一个例子。
天气预报 API
天气预报api地址：http://www.weather.com.cn/data/sk/101010100.html
api正常情况下会返回如下数据：
{
"weatherinfo": {
"city": "北京",
"cityid": "101010100",
"temp": "-1",
"WD": "北风",
"WS": "3级",
"SD": "12%",
"WSE": "3",
"time": "11:15",
"isRadar": "1",
"Radar": "JC_RADAR_AZ9010_JB",
"njd": "暂无实况",
"qy": "1021"
}
}
ZABBIX WEB 场景配置
configuration->host->您的主机->web->点击右上角create scenario
点击step，输入如下
查看监控结果
monitoring->web->选择相应的hosts，点击如下的“监控天气预报API_FOR_TTLSA”
创建触发器
至于怎么创建触发器，我这边就不多说了，请看关于触发器的文章《zabbix 创建触发器》，当有故障发生，便可以
发送故障报警。
zabbix 监控 api 说明
以上只是一个简单的例子，具体应用看大家了，比如说可以监控注册、获取新闻列表、获取评论等等接口是否可以
使用，以及这些接口的一些性能。
第十章：维护模式
zabbix Maintenance 维护周期
概述
我们可以给zabbix某些组或者某些Hosts设置维护时间,zabbix提供两种维护类型：依旧收集数据、暂停收集数
据，在服务器维护期间不会生成报警（前提：触发器设置了’Maintenance status = not in “maintenance”’），如果
在维护期间出现故障，并且没有解决掉，那么在维护周期结束之后，服务器会生成报警.如果你想在维护期间也能收
到报 警，那么触发器不需要设置’Maintenance status = not in “maintenance”’.
配置
配置维护周期
点击Configuration（配置） → Maintenance（维护）—>点击Create maintenance period （创建维护周期），配置
如下
参数 描述
Name 维护名称
Maintenance type 两种维护类型可选:
With data collection – 依旧收集数据
No data collection– 暂停收集数据
Active since 维护周期开始时间
Active till 维护结束时间
Description 描述
Periods
选项卡是维护周期的，可以选择daily, weekly, monthly or one-time，我这边的例子是每周一凌晨6点开始维护，持
续2 个小时，也就是到八点结束.如果你想每天执行，也可以选择daily或者在weekly 里选择周一到周天.具体用法
我不在详讲了，大家看了就明白.
Hosts & Groups
选项卡里面，选择需要维护的主机或者组.
维护标识在inventory–>HOSTS->host inventory的overview里面可以看到维护的标示（扳手），如下图
或者在HOSTS列表里面，status显示In maintenance.
第十一章：事件确认
事件确认（Event acknowledgment）
概述
以往服务器出现报警，运维人员处理完事之后，报警自动取消，但是下一次出现同样一个错误，但是换了一个运维
人员，他可能需要重新排查问题，直到问题处理完毕。针对这种情况，zabbix提供了event acknowledgment（事件
确认）功能，一旦处理好某个问题，运维认为可以再里面写上备注，说明造成此问题的原因以及处理方法，下一次
运维人员遇到这个报警先看前一次的事件确认。
Acknowledgment 也可以在 action 中使用，一旦运维人员没有及时填写事件确认，可以向他的主管或者经理发送一
个通知：xxx人员没有写事件确认.
事件确认界面
在zabbix首页的last 20 issues，在每条报警列都有Ack，如果是NO，说明还没有对事件进行确认，如果是Yes，表
明已经提交了事件描述.
这里写明造成问题的原因以及解决方法，然后点击下方的acknowledge and return,如果下次还出现类似故障，运维
人员可以看到如下内容
第十二章：网络发现
zabbix 网络发现介绍 Discovery
网络发现简介
网络发现有什么用？网络发现怎么配置？我们带着这两个问题开始我们的网络发现之旅。比如小明有100台服务器，
不想一台台主机去添加，能不能让zabbix自动添加主机呢，当然可以，网络发现便是这个功能，当然前提条件是所
有服务器都已经安装了agent或者snmp（其实也可以不用，鉴于我们大部分功能都用agent，所以请安装上agent），
server扫描配置好的ip段，自动添加host，自动给host link模板，自动加到主机组里等等。网络发现功能让我们能
更快速的部署zabbix、简化zabbix管理、并且在经常变动的环境里面也不需要花太多的精力，毕竟网络发现也能随
时变化。虽然网络发现能干很多事情，但是它无法发现网络拓扑。
zabbix网络发现基于如下信息
 ip范围
 可用的外部服务（FTP, SSH, WEB, POP3, IMAP, TCP, etc）
 来自zabbix agent的信息
 来自snmp agent的信息
网络发现由两个阶段组成：discovery和actions
Discovery 发现
zabbix定期扫描网络发现规则中的ip范围，每个规则中都定义了一组需要检测的服务，在这些ip范围内一一扫描
网络发现模块每次检测到service和host（ip）都会生成一个discovery事件,如下是事件
时间 条件
Service Up zabbix检测到可用的service
Service Down zabbix无法检测到service
Host Up 某个ip上至少有一个service是up状态
Host Down 所有service都无响应
Service Discovered 一个service首次被发现或者在维护后从新归队
Service Lost service在up之后又丢失了
Host Discovered 一个host首次被发现或者在维护后从新归队
Host Lost 一个host在up之后又丢失了
Actions 动作
zabbix所有action都是基于发现事件，例如：
 发送通知
 添加/移除主机
 启用/禁用主机
 添加主机到组
 从组中移除主机
 主机link模板/unlink模板
 执行远程脚本命令
创建主机
discovery发现主机事件产生之后，接下来需要执行discovery action，在action中选择添加主机操作、并且将主机加
入某个组以及link某个模板等等。更具体操作请关注下一篇文章。那么主机名怎么定义呢？首先监控端（server/proxy）
通过ip泛解析主机名（如果失败了，不会重新尝试），如果解析成功了，那么zabbix将会使用这个主机名，否则直
接使用ip地址。如果主机名相同怎么办？比如都叫ttlsa-server，那么第一台主机名会定义为ttlsa-server，第二台为
ttlsa-server_2，第三台为ttlsa-server_3，以此类推。action配置里的条件包含设备类型、IP、状态、uptime/downtime
等等。
添加主机接口
主机接口规则如下：
 服务检测 – 例如，成功检测到一个SNMP服务，那么创建snmp接口
 如果主机同时UIzabbix agent和snmp请求作出响应，那么会同时创建这两种接口
 如果使用 agent或者snmp 作为唯一性指标，先通过哪个接口发现主机，那么哪个接口就作为默认接口，其他
的作为附加接口。
 如果一开始只响应zabbix agent的检测，那么他只会创建agent接口。如果后面响应了snmp检测，那么他又
会增加snmp接口
 如果有三台独立的主机 A\B\C，一开始使用 IP 地址来作为唯一标识。可以看到 discovery 有三条记录。此时我
们修改发现规则，让他们有相同的唯一标识。例如自定义一个 keysystem.dis，这个 key 统一输出值”ttlsa”，
这样 A 的接口成了默认的，B 和 C 都变成了附加到 A 主机上。我们可以发现一个很明显的变化。在 discovery
接口中依旧有3条记录，但是”discovered device”这列显示的A主机的接口，”monitored host“这列显示的都
是A主机的名称，”Uptime/downtime“这列只有A主机有值，B和C都为空。从这里我们能看到唯一标识是多
重要，如果唯一标识不是唯一，那么有的主机会被认为是同一台。
zabbix 网络发现规则配置实战/详解
在了解了《网络发现规则》是什么之后，我们开始配置。首先，我们需要定义发现规则，用于扫描。步骤如下
第一步
Configuration >>Discovery>>Create rule，编辑网络发现规则
如上配置，zabbix每30秒会扫描10.9.7.88与10.9.32.106-107。会使用key：agent.uanme来判断客户端是否存在，
并且以IP地址作为唯一性的标识。
规则属性
属性 描述
Name 规则名称，唯一
Discovery by proxy 谁执行当前发现规则:
no proxy - zabbix server
 - 指定的proxy
IP range 发现规则中的ip范围，格式如下
单IP: 192.168.1.33
一个IP段: 192.168.1.1-255
一个子网: 192.168.4.0/24
支持如下子网掩码:
IPV4:/16 - /30
IPV6:/112 - /128
IP列表: 192.168.1.1-255,192.168.2.1-100,192.168.2.200,192.168.4.0/24
备注：1. IP列表中的IP不能重复2. 不同的发现规则里面不要包含相同的IP，
否则可能会出现意想不到的问题
Delay (in sec) 规则执行完毕之后，要多久才执行下一次。
Checks 支持的checks: SSH, LDAP, SMTP, FTP, HTTP, HTTPS, POP, NNTP, IMAP, TCP,
Telnet, Zabbix agent, SNMPv1 agent, SNMPv2 agent, SNMPv3 agent, ICMP
ping.
Port属性如下：
单个端口: 22
端口段: 22-45
端口列表: 22-45,55,60-70
Device uniqueness criteria 设备唯一标识:
IP address - 使用IP地址作为设备唯一性标识
Type of discovery check - 使用SNMP 或者Zabbix agent的check作为唯一标
识
Enabled 是否启用当前规则
第二步
Monitorning>>Discovery，可以看到已经发现了两台主机，ip地址作为他们的唯一标识。确保这个标识的唯一性，否
则zabbix会认为他们是一台主机。
第三步
目前仅仅是可以找到主机，并未自动添加到Host中，接下来完成几个步骤：
1. 加入到Linux Servers组
2.Linux link linux模板、windows link windows模板
3. 主机在线时长10分钟的主机添加到HOST中
4. 离线1天以上的主机从Host中移除
创建Action
我们需要创建两个Action，一份正对windows，一份针对Linux。我们下面演示一下Linux服务器
Action添加主机
configuration>>action>>Event source（选discover）>>create action
首先，配置名称，以及定义消息内容，这些使用默认的即可
Action
条件配置
操作
回到HOST中，我们可以发现已经把主机加到列表里了，并且也Linux了模板以及加到了相应的组里
移除主机
configuration>>action>>Event source（选discover）>>create action
首先，配置名称，以及定义消息内容，这些使用默认的即可
移除主机
Action
条件
动作
移除主机我就不演示了。
通过使用 discovery，zabbix 能够自动完成添加到 host 等等一系列动作，这一切都是基于这个规则来实现的。那么
如果离开这个规则，我能完成这一系列动作吗？答案是肯定的
zabbix 客户端自动注册
1. 概述
上一篇内容《zabbix自动发现配置》，大概内容是zabbix server去扫描一个网段，把在线的主机添加到Host列表中。
我们本篇内容与上篇相反，这次是Active agent主动联系zabbix server，最后由zabbix server将这些agent加到host
里。对于需要部署特别多服务器的人来说，这功能相当给力。所有服务器批量装好zabbix agent，server配置好trigger，
所有的服务器都配置好了，非常快速。
2. 配置
2.1配置文件修改
指定server ip
# cat /usr/local/zabbix-2.2.2/etc/zabbix_agentd.conf | grep -E ^ServerActive
ServerActive=66.175.222.232
修改Hostname
# cat /usr/local/zabbix-2.2.1/etc/zabbix_agentd.conf | grep -E ^Hostname
Hostname=auto-reg-for-ttlsa-01
关于主机名：如果zabbix_agentd.conf配置有定义Hostname，那么zabbix会使用这个Hostname命名，否则agent
的主机名（hostname得来的）
修改metadataitem
cat /usr/local/zabbix-2.2.1/etc/zabbix_agentd.conf | grep HostMetadataItem=
HostMetadataItem=system.uname
2.2 配置action
步骤：configuration>>action>>Event source（选择Auto registration）>>Create Action，我们按如下步骤来定义个action
2.2.1 action选项卡
定义Action名称，以及发送消息的主题和内容，使用默认的就行了
2.2.2 Conditions选项卡
Host metadata包含Linux字符的主机将会触发 2.2.3的操作，什么是metadata，文章的下半段会专门讲解。