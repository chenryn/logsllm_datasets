sequence, that are triggered by the original instability event.
Each observed update sequence captures the set of updates
created by the route convergence process and may not con-
tain the original instability event update. We refer to the
total resulting set of updates as an update burst.
Ideally we would like to build our workload model around
instability event updates and update sequences. Unfortu-
nately distinguishing between instability event updates and
related updates is an unresolved problem [7]. But a second
look reveals that to a system under test it does not matter
if the update burst is the result of n or m instability events.
What matters is the number of updates it has to handle and
the relationship between the updates. Therefore we propose
to build the workload model around the notion of update
bursts.
Using this terminology we can say that each instability
creator is either generating a single update burst, in case
of a preﬁx, or a set of update bursts, in the case of an AS.
For example we can express BGP protocol divergence [5, 22,
44] for a preﬁx as a single update burst that lasts for the
duration of the workload (or until it is ﬁxed) and consists of
a large number of updates.
Preﬁx forest
Routing updates are applied to and may change the existing
routing table. Each routing/forwarding table consists of a
set of preﬁxes. In abstract terms preﬁxes can be viewed as
nodes in a forest. Each node covers a certain address space
and a preﬁx is a descendant of another preﬁx if it covers a
subset of the address space. A preﬁx S (son) is a child of
another preﬁx F (father) if no other preﬁx exists that covers
a larger address than S but a smaller address space than F.
A possible root node for all preﬁxes corresponds to the full
address space (the default route: 0.0.0.0/0). If the default
route is present the table corresponds to a tree, otherwise
to a forest. Figure 2 shows an example of a set of preﬁxes
and their forest.
Once we view preﬁxes as forest we can use graph termi-
nology to describe its properties. The fanout of a preﬁx is
the fanout of its node in the forest, which is the number of
its children. Intuitively, the fanout of a preﬁx speciﬁes how
many preﬁxes are more speciﬁc than a given preﬁx. The
depth of a preﬁx is the depth of the corresponding node in
the forest, which is the number of ancestors on the path
from the node to the root of its subtree (including the root
node). Intuitively the depth of a preﬁx speciﬁes how often
this preﬁx is a more speciﬁc preﬁx of another preﬁx. The
distance of two preﬁxes, whose nodes in the forest are son
and father, is the absolute diﬀerence of their preﬁx mask
lengths.
Intuitively the distance speciﬁes how much more
speciﬁc a preﬁx is.
The preﬁx structure in BGP tables reﬂect address allo-
cation, aggregation and traﬃc engineering policies in the
Internet. These policies have led to dependencies between
the preﬁxes which is reﬂected in the structure of the preﬁx
forest. Preﬁxes in the same subtree of the preﬁx forest are
more likely to be correlated in terms of attribute values than
two random preﬁxes. Actually, this is one of the reasons why
the preﬁx structure inﬂuences the memory needed for stor-
ing the BGP tables on routers. A better understanding of
the preﬁx structure may lead to better packet lookup and
classiﬁcation algorithms [45].
AS path properties
The AS path properties that are important for capturing
the correlations between routing instabilities as observed by
a peer include the properties of the ASes themselves and the
peering policies reﬂected in the path. The AS properties in-
clude the distributions of the number of originated preﬁxes
and transiting preﬁxes. These have been shown to be con-
sistent with heavy-tailed distributions [36, 46, 47]. A small
number of tier-1 ISPs provide transit for a huge number of
preﬁxes, while a huge number of customers provide transit
for none, and a sizeable number of tier-3 ISPs provide transit
for some number of customers.
In general the peering policies between all ASes deter-
mine the AS level topology of the Internet. From the view
point of a single router this general graph is restricted to an,
at least ideally, directed acyclic graph (DAG) of the BGP
announcements in its routing table (ignoring replicated AS
34s
e
t
a
d
p
u
f
o
r
e
b
m
u
n
0
0
0
,
0
0
5
0
0
0
,
0
0
3
0
0
0
,
0
0
1
0
RRC:1-E
RRC:1-D
RRC:1-C
RRC:1-B
RRC:1-A
t
n
e
c
r
e
p
0
0
1
0
8
0
6
0
4
0
2
0
new
duplicate
flapping
reconvergence
4−way
> 4−way
y
t
i
s
n
e
d
y
t
i
l
i
b
a
b
o
r
p
2
.
1
0
.
1
8
.
0
6
.
0
4
.
0
2
.
0
0
.
0
RRC:1−C
RRC:1−D
RRC:1−E
LISP:1−A
LISP:1−B
01/14/02
01/16/02
time
01/19/02
01/14/02
01/16/02
time
01/19/02
1
5
10
50 100
distance
500
5,000
Fig. 4: # of updates for four peers.
Fig. 5: Relative # of updates:
x-way change.
Fig. 6: # updates between up-
dates with same set of attrib..
entries4). From the view point of a workload model we do
not want to include the whole set of policies and the full
topology. Rather we want to capture the important depen-
dencies. Here we point out an interplay between the number
of preﬁxes that an AS is transiting and its position in the
DAG. The default policy for a router peering with a tier-1
ISP and a small local ISP is that a large number of its best
routes will be via the tier-1 ISP and only a small number via
the small ISP. If the router is only peering with the small
ISP or it prefers the small ISP then a huge number of its
best routes will be via the small ISP. Instead of incorporat-
ing all BGP policies and all BGP peering agreements into
our workload model we propose to “just” incorporate the
eﬀects as observed by a BGP peer. This implies that we
are not interested in which AS is peering with which other
AS. Rather we are interested in the distance of the ASes
from the peer and the number of originating and transiting
routes. The latter matters since routes are coalesced at in-
termediate routers of the DAG and aggregated routes may
be added. The richness of the connectivity does not get lost
by considering just the distances either. The fanout of the
DAG is captured in the number of ASes at a certain distance.
In addition the number of nodes at each distance limits the
number of alternative paths that may be explored by an up-
date for a preﬁx originated by a distant router during route
convergence. Traﬃc engineering and routing policies are re-
ﬂected in the announced routes, AS replications on the AS
path, and other attribute values.
In summary, we do not consider the full AS topology.
Rather we propose to use the following ingredients in our
BGP workload model: position of ASes in the BGP DAG,
distribution of transiting/originated preﬁxes and distribu-
tion of AS path replication.
Attribute changes
Whenever we create an update for some preﬁx we need to
decide if this is a new preﬁx or which attribute and in what
fashion the attribute is to be changed. Some attributes are
almost ﬁxed, e.g., originator, others reﬂect the policies of the
peer, e.g., communities and multi exit discriminator (MED),
others reﬂect the convergence process, e.g., AS path and
community. Which attribute changes we want to consider
depends on the test-lab scenario that we have in mind. Cer-
tain test-lab scenarios might imply certain attribute values.
For example the next-hop attribute is ﬁxed for external BGP
sessions. Other attributes might be uninteresting for a spe-
4Replication is a traﬃc engineering instrument used to make
a path less desirable.
ciﬁc test-lab experiment, e.g., communities and MED, if the
router under test ignores these values. On the other hand
one might want to study in a test-lab what would happen if
the peer starts to export community and MED attributes.
In general we propose to distinguish announcements from
withdraws, and for consecutive announcements we either
note the kind of change or the value change. The distinction
is necessary in order not to disturb the other abstractions.
For example for changes to the AS path it may not matter
which AS is added to/deleted from the path. What mat-
ters is that the length is increased/decreased/constant. On
the other hand a community encodes a certain policy of the
AS and one might want to keep the meaning of the speciﬁc
value.
It is important to consider attribute changes not just be-
tween two consecutive updates but over some number of up-
dates. This is especially true within update bursts. Overall
we note that the kind and the number of attribute changes
capture some aspects of the dynamics of the convergence
process and therefore the latency of route convergence. An-
other point that we need to deal with when considering
multiple updates for the same preﬁx is timing. How much
time separates two consecutive updates and how much time
passes until two updates with the same attributes are ob-
served. The latter corresponds to the time until the original
route has been restored. To understand how many updates
are involved before a route gets restored we propose to use
the notion of an n-way change. An n-way change refers to
a set of n + 1 consecutive updates, where the last and the
ﬁrst updates are the ﬁrst updates with the same attributes
values.
Overall attribute changes and update burst are closely
related to each other. Update burst capture more of the
temporal characteristics while attribute changes capture the
structural relationships between updates.
4. CHARACTERIZATION
Having discussed the key ingredient of our workload model
we need to understand the probability distributions needed
for the workload model. Contrary to other areas, including
Web [48], telnet [28, 29], etc., the statistical properties of
many of our workload ingredients have not been character-
ized before.
In this paper we characterize both dynamic
BGP traﬃc (Section 4.2), e.g., attribute changes/update
burst/session resets, as well as static BGP tables (Section 4.3,
4.4), e.g., preﬁx structure, AS path. While the ingredients of
the workload model are derived top-down the characteriza-
tion has to proceed bottom-up. This implies that our anal-
35y
t
i
s
n
e
d
y
t
i
l
i
b
a
b
o
r
p
6
.
0
5
.
0
4
.
0
3
.
0
2
.
0
1
.
0
0
.
0
consecutive
new
fapping
> 2−way and dups
t
n
e
c
r
e
p
0
0
1
0
8
0
6
0
4
0
2
0
Path
Path/Policy
Path/Policy/Att
Path/Att
Policy
Policy/Att
Att
neither
Path
Path/Policy
Path/Policy/Att
Path/Att
Policy
Policy/Att
Att
neither
t
n
e
c
r
e
p
0
0
1
0
8
0
6
0
4
0
2
0
10
1,000
interarrival time
100,000
01/14/02
01/16/02
time
01/19/02
01/14/02
01/16/02
time
01/19/02
Fig. 7: Interarrival time: x-way
change.
Fig. 8: Relative # of updates:
attribute change.
Fig. 9: Relative # of updates:
attribute change.
ysis starts with the dynamics of the updates, then moves
to sets of related updates, followed by the preﬁx forest, and
ends with the AS path.
4.1 Data sets
Our characterization work is based on raw external BGP
routing table dumps and update traces that we obtain from
Ripe [49], SaarGate, a local ISP [50], Routeviews [51] and
Merit [52]. Throughout this section we only present re-
sults in an exemplary fashion for the following raw data
sets. BGP update traces: RRC:1 refers to the trace
from RIPE’s Remote Route Collector (RRC00) [49] (from
01/14/02, 1am to 01/20/02, 1:10am).
It consists of 577
BGP update ﬁles with 8, 442, 000 updates from 13 diﬀer-
ent peering session, including Tier 1 ISPs and major Euro-
pean ISPs. LISP:1 was gathered via two peering sessions
with a local ISP, SaarGate (12/23/01, 10:05pm to 12/28/01,
1:05am). It contains roughly 959, 000 updates in 794 update
ﬁles from two peering sessions. A lower bound on the num-
ber of missing updates is estimated by applying the updates
to the starting BGP routing table and computing the diﬀer-
ences between the resulting and the ﬁnal routing table. We