link  that  i  is  monitoring.  MalC(i,j)  is  incremented  for 
any  malicious  activity  of  j  that  is  detected  by  i.  The 
increment  to  MalC  depends  on  the  nature  of  the 
malicious  activity  detected,  e.g., Vf  for  fabricating  and 
Vd for dropping a control packet. 
Now, we present the detection algorithm individually for each of the first four wormhole attack modes and 
show how existing approaches can be used to detect the fifth mode. However, prior to that, we give the isolation 
and the response algorithm that applies across all the attack modes 
4.2.2  Response and Isolation Algorithm 
(i) When MalC(a,A) crosses a threshold, Ct , a revokes A from its neighbor list, and sends to each neighbor of A, 
say  D,  an  authenticated  alert  message  indicating  A  is  a  suspected  malicious  node.  This  communication  is 
authenticated using the shared key between a and D to prevent false accusations. Alternately, if the clocks of 
all the nodes in the network are loosely synchronized, a can do authenticated local two-hop broadcast as in 
[29] to inform the neighbors of A.  
(ii) When D gets the alert, it verifies the authenticity of the alert message, that a is a guard to A, and that A is D’s 
neighbor. It then stores the identity of a in an alert buffer associated with A.  
(iii) When D gets enough alert messages, γ, about A, it isolates A by marking A’s status as revoked in the neighbor 
list.  We call γ  the detection confidence index of D.   
(iv) After isolation, D does not accept or send any packet to a revoked node. Note that this isolation is performed 
locally within the neighbors of the malicious node. This makes the response process quick and lightweight, 
and has the desired effect of removing the malicious nodes from the network.  
11
4.2.3  Detecting Different Modes of Wormhole Attacks 
Detecting out-of-band and packet encapsulation wormholes 
(i) A guard node a for a link, say from X to A,   saves information from the packet header of each control packet 
going over the link and time stamps it with the deadline t.  
(ii) a overhears every packet going out of the receiver end of the link, A. For all the packets that A claims has 
come from X, α looks up the corresponding entry in its watch buffer. 
(iii) If an entry is found, a drops that entry since the corresponding packet has been correctly forwarded. 
(iv) If an entry is not found, then A must have fabricated the packet. a increments MalC (a,A) by Vf. 
(v) If an entry for a packet sent from X to A stays in the watch buffer beyond t, then A is accused of dropping the 
corresponding packet. a increments MalC(a,A) by Vd. 
Consider  the  scenario  in  Figure  4.  M1  and  M2  are  two  malicious  nodes  wishing  to  establish  a  wormhole 
between the two nodes S and D. When M1 hears the REQ packet from S, it directs the packet to M2. Node M2 
rebroadcasts the REQ packet after appending the identity of the previous hop from which it got the REQ. Node M2 
has two choices for the previous hop — either to append the identity of M1, or append the identity of one of M2’s 
neighbors, say X. In the first choice all the neighbors of M2 will reject the REQ because they all know, from the 
stored data structure of the two-hop neighbors, that M1 is not a neighbor to M2. In the second case, all the guards 
of the link from X to M2 (X, m, and l) will detect M2 as fabricating the route request since they do not have the 
information for the corresponding packet from X in their watch buffer.  
d
S
a
M1
g
b
C
A
Good node
Z
E
l
m
D
M2
y
X
F
Malicious node
The legitimate path without  wormhole 
An out-of-band channel between M1 and M2
A path between M1 and M2 for encapsulation
Figure 4: Wormhole detection for out-of-
band and packet encapsulation modes 
In  both  cases M2  is  detected,  and  the  guards  increment 
the MalC of M2. In addition, the REP packet may also be 
used for detection of M1 and M2. When D gets the REQ, 
it generates a route reply packet, REP, and sends it back 
to M2. The guards of the link from D to M2 (D, m, and y) 
overhear  the  REP  and  save  an  entry  in  their  watch 
buffers.   
12
Node M2 sends the route reply back to M1 using the out-of-band channel or packet encapsulation. After t time 
units, the timers in the watch buffers of the guards D, m, and y run out, and thus the guards detect M2 as dropping 
the REP packet and increment the MalC of M2. However if M2 is smarter, it can forward another copy of the REP 
through the regular slower route. In this case, MalC of M2 is not incremented. When M1 gets the REP from M2, M1 
forwards it back to S after appending the identity of the previous hop. As before, M1 has two choices — either to 
append the identity of M2, or append the identity of one of M1’s neighbors, say Z. In the first choice, node S rejects 
the REP because it knows that M2 is not a neighbor to M1. Also, all the neighbors of M1 know that M2 is not a 
neighbor to M1. In the second case, all the guards of the link from Z to M1 detect M1 as forging the REP since they 
don’t have the corresponding entry from Z in their watch buffers.  
Detecting high power transmission wormhole 
This mode is detected using the assumption of symmetric bi-directional channels. Suppose a malicious node, 
say X, tries to use high power transmission to forward a packet P1 to it is final destination, or to cross multiple 
hops to introduce itself in the shortest path. Then all the nodes for which X is not in their neighbor lists detect the 
malicious behavior of X and reject P1.  
Detecting packet relay wormhole 
This mode is detected using the stored neighbor lists at each node. Suppose a malicious node X is a neighbor to 
two non-neighbor nodes A and B and tries to deceive them by relaying packets between them. Both A and B detect 
the malicious behavior of X since they know that they are not neighbors and reject the relayed packet. 
Detecting protocol deviation wormhole 
This mode can not be detected using LITEWORP. Researchers have proposed techniques for countering selfish 
behavior  in  specific  protocols.  Selfishness  refers  to  the  property  that  nodes  may  tend  to  deny  providing 
cooperating services to other nodes in order to save their own resources, e.g., battery power. Kyasanur et al. have 
addressed the problem of greediness at the MAC layer [30], while Buttyán have addressed selfishness in packet 
forwarding [28]. Hu et al. have proposed a solution to an attack, called the rushing attack, in which nodes greedily 
forward the route request passing through them without back off [16]. 
13
5  LITEWORP Analysis 
5.1  Coverage Analysis 
In this section, we characterize the probability of missed detection and false detection as the network density 
increases and the detection confidence index γ varies. The results provide some interesting insights. For example, 
we are able to compute the required network density d to detect p% of the wormhole attacks for a given γ.  
Consider  a  homogeneous  network  of  nodes  where  the  nodes  are  uniformly  distributed  in  the  field.  For 
simplicity, we assume that the field is large enough that edge effects can be neglected in our analysis. Consider 
any two randomly selected neighbor nodes, S and D, as shown in Figure 5(a). S and D are separated by a distance 
x, and the communication range is r.  The value of x follows a random variable with probability density function 
of f(x) = 2x/r2 with range (0,r). This follows from the assumption of uniform distribution of the nodes.  
G
The  guard  nodes  for  the  communication  between  S  and D 
are those nodes that lie within the communication range of S 
S
S
D
DD
r
r
X
X
(a)
S
D
(b)
and D, the shaded area in Figure 5(a). This area is given by 
Area x
( )
=
2
2
r
cos
− ⎛
1
⎜
⎝
x
r
2
⎞
⎟
⎠
−
(
2
x
)
2
r
−
x
2
4
.  
The minimum value of Area(x), Areamin, is when x = r.
Figure 5: (a) The area from which a node can 
guard the link between S and D; (b) Illustration 
for detection accuracy 
Therefore, the minimum number of guards 
g
min
=
Area d
min
=
0.36
r d
2
.The expected value of the area 
[
E Area x
( )
]
=
r
∫
0
2
r
2 cos
1
−
x
r
2
⎛
⎜
⎝
⎞
⎟
⎠
⎧
⎪
⎨
⎪
⎩
−
(
2
x
)
2
r
−
x
2
4
⎫
⎪
⎬
⎪
⎭
⎛
⎜
⎝
x
2
2
r
⎞
⎟
⎠
dx
=
2
π
3
⎛
⎜
⎝
−
1
2
⎞
⎟
⎠
2
r
≈
1.6
r
2
.  Therefore,  the  expected 
number of guards 
thus
g
=
2
3
⎛
⎜
⎝
−
1
⎞
⎟
2
π
⎠
g E Area x d
( )]
=
[
1.6
⎢
= ⎣
r d
2
⎥
⎦ . The number of neighbors of a node is given by
BN
r dπ=
2
, 
N
B
≈ ⎢
⎣
N
0.51
⎥
⎦
B
 ⎯⎯⎯⎯⎯ (I). 
Now, as in [33] where IEEE 802.11 was analyzed, we assume that each packet collides on the channel with a 
constant and independent probability, PC. As shown in Figure 5(b), a guard G will not detect a fabricated packet 
sent by D, claiming it was received from S, if G experienced a collision at the time that D transmits. Thus, the 
14
probability of missed detection is PC. Assume that m packet fabrications occur within a certain time window, T. 
Also assume that a guard must detect at least β fabrications to cause the MalC for a node to cross the threshold, 
and thus generate an alert. Then, the alert probability at a guard is given by
P
βµ
|
=
µ
∑
i
β
=
⎛
⎜
⎝
µ
⎞
⎟
i
⎠
(
1
−
P
C
i
) (
P
C
i
µ
−
)
. Thus, 
assuming independence of collision events among the different guards, the probability that at least g of the guards 
generate an alert is given by 
p
γ
≥
=
g
∑
γ
=
i
g
i
⎛
⎜
⎝
⎞
⎟
⎠
(
P
βµ
|
i
) (
1