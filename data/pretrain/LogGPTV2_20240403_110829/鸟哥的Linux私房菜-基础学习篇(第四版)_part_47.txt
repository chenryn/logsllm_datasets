最近更新日期：2015/06/24
苏凯 窄憵亐譈譪个Linux粟纃® 瘨攫亚曧间椦徙争卮皒迫瘨郱缒讘斲。 苏载Ð 窄舦廷Ó ，憵亐寕皘捉有轿 欉瘨摱伀³ 筅玪攫亚卮皒迫友！助抐苏² 厂瘨皒迫闸
卼挆、 冿庞³ 凄阈皒迫、冿庞³ 凄阈攫亚，轼暭実戢攫亚、枉闽攫亚儩孝竭竭，邡亡苏载Ð 窄舦伀Ð 笤勹瘨乯繱哮！
由前一章Linux的文件权限与目录配置中通过FHS了解了Linux的“树状目录”概念之后， 接下来就得要实际的来搞定一些基本的路径问题
了！这些目录的问题当中，最重要的莫过于前一章也谈过的“绝对路径”与“相对路径”的意义啦！ 绝对/相对路径的写法并不相同，要特别注意。
此外，当你下达指令时，该指令是通过什么功能来取得的？ 这与PATH这个变量有关呢！下面就让我们来谈谈啰！
在开始目录的切换之前，你必须要先了解一下所谓的“路径（PATH）”， 有趣的是：什么是“相对路径”与“绝对路径”？ 虽然前一章已经稍
微针对这个议题提过一次，不过，这里不厌其烦的再次的强调一下！
绝对路径：路径的写法“一定由根目录 / 写起”，例如： /usr/share/doc 这个目录。
相对路径：路径的写法“不是由 / 写起”，例如由 /usr/share/doc 要到 /usr/share/man 下面时，可以写成： “cd ../man”这就是相对路径的写法
啦！相对路径意指“相对于目前工作目录的路径！”
相相对对路路径径的的用用途途
那么相对路径与绝对路径有什么了不起呀？喝！那可真的是了不起了！假设你写了一个软件， 这个软件共需要三个目录，分别是 etc,
bin, man 这三个目录，然而由于不同的人喜欢安装在不同的目录之下， 假设甲安装的目录是 /usr/local/packages/etc, /usr/local/packages/bin 及
/usr/local/packages/man ，不过乙却喜欢安装在 /home/packages/etc, /home/packages/bin, /home/packages/man 这三个目录中，请问如果需要
用到绝对路径的话，那么是否很麻烦呢？是的！ 如此一来每个目录下的东西就很难对应的起来！这个时候相对路径的写法就显的特别的重要
了！
此外，如果你跟鸟哥一样，喜欢将路径的名字写的很长，好让自己知道那个目录是在干什么的，例如：
/cluster/raid/output/taiwan2006/smoke 这个目录，而另一个目录在 /cluster/raid/output/taiwan2006/cctm ，那么我从第一个要到第二个目录去的
话，怎么写比较方便？ 当然是“ cd ../cctm ”比较方便啰！对吧！
绝绝对对路路径径的的用用途途
但是对于文件名的正确性来说，“绝对路径的正确度要比较好～”。 一般来说，鸟哥会建议你，如果是在写程序 （shell scripts） 来管理
系统的条件下，务必使用绝对路径的写法。 怎么说呢？因为绝对路径的写法虽然比较麻烦，但是可以肯定这个写法绝对不会有问题。 如果使
用相对路径在程序当中，则可能由于你执行的工作环境不同，导致一些问题的发生。 这个问题在工作调度（at, cron, 第十五章）当中尤其重
要！这个现象我们在十二章、shell script时，会再次的提醒你喔！ ^_^
我们之前稍微提到变换目录的指令是cd，还有哪些可以进行目录操作的指令呢？ 例如创建目录啊、删除目录之类的～还有，得要先知
道的，就是有哪些比较特殊的目录呢？ 举例来说，下面这些就是比较特殊的目录，得要用力的记下来才行：
. 代代表表此此层层目目录录
.. 代代表表上上一一层层目目录录
- 代代表表前前一一个个工工作作目目录录
~ 代代表表“目目前前使使用用者者身身份份”所所在在的的主主文文件件夹夹
~account 代代表表 account 这这个个使使用用者者的的主主文文件件夹夹（（account是是个个帐帐号号名名称称））
需要特别注意的是：在所有目录下面都会存在的两个目录，分别是“.”与“..” 分别代表此层与上层目录的意思。那么来思考一下下面这个例
题：
例题：
请问在Linux下面，根目录下有没有上层目录（..）存在？
答：
若使用“ ls -al / ”去查询，可以看到根目录下确实存在 . 与 .. 两个目录，再仔细的查阅， 可发现这两个目录的属性与权限完全一
致，这代表根目录的上一层（..）与根目录自己（.）是同一个目录。
下面我们就来谈一谈几个常见的处理目录的指令吧：
cd：变换目录
pwd：显示目前的目录
mkdir：创建一个新的目录
rmdir：删除一个空的目录
cd （（change directory, 变变换换目目录录））
我们知道dmtsai这个使用者的主文件夹是/home/dmtsai/，而root主文件夹则是/root/，假设我以root身份在 Linux系统中，那么简单的说明
一下这几个特殊的目录的意义是：
[dmtsai@study ~]$ su - # 先切换身份成为 root 看看！
[root@study ~]# cd [相相对对路路径径或或绝绝对对路路径径]
# 最重要的就是目录的绝对路径与相对路径，还有一些特殊目录的符号啰！
[root@study ~]# cd ~dmtsai
# 代表去到 dmtsai 这个使用者的主文件夹，亦即 /home/dmtsai
[root@study dmtsai]# cd ~
# 表示回到自己的主文件夹，亦即是 /root 这个目录
[root@study ~]# cd
# 没有加上任何路径，也还是代表回到自己主文件夹的意思喔！
[root@study ~]# cd ..
# 表示去到目前的上层目录，亦即是 /root 的上层目录的意思；
[root@study /]# cd -
# 表示回到刚刚的那个目录，也就是 /root 啰～
[root@study ~]# cd /var/spool/mail
# 这个就是绝对路径的写法！直接指定要去的完整路径名称！
[root@study mail]# cd ../postfix
# 这个是相对路径的写法，我们由/var/spool/mail 去到/var/spool/postfix 就这样写！
cd是Change Directory的缩写，这是用来变换工作目录的指令。注意，目录名称与cd指令之间存在一个空格。 一登陆Linux系统后，每个
帐号都会在自己帐号的主文件夹中。那回到上一层目录可以用“ cd .. ”。 利用相对路径的写法必须要确认你目前的路径才能正确的去到想要去的
目录。例如上表当中最后一个例子， 你必须要确认你是在/var/spool/mail当中，并且知道在/var/spool当中有个mqueue的目录才行啊～ 这样才
能使用cd ../postfix 去到正确的目录说，否则就要直接输入cd /var/spool/postfix 啰～
其实，我们的提示字符，亦即那个 [root@study ~]# 当中，就已经有指出目前的目录了， 刚登陆时会到自己的主文件夹，而主文件夹还
有一个代码，那就是“ ~ ”符号！ 例如上面的例子可以发现，使用“ cd ~ ”可以回到个人的主文件夹里头去呢！ 另外，针对 cd 的使用方法，如果
仅输入 cd 时，代表的就是“ cd ~ ”的意思喔～ 亦即是会回到自己的主文件夹啦！而那个“ cd - ”比较难以理解，请自行多做几次练习，就会比较
明白了。
Tips
还是要一再地提醒，我们的 Linux 的默认指令列模式 （bash shell） 具有文件补齐功能， 你要常常利用 [tab] 按键来达成你的目录完整性
啊！这可是个好习惯啊～可以避免你按错键盘输入错字说～ ^_^
pwd （（显显示示目目前前所所在在的的目目录录））
[root@study ~]# pwd [-P]
选项与参数：
-P ：显示出确实的路径，而非使用链接 （link） 路径。
范例：单纯显示出目前的工作目录：
[root@study ~]# pwd
[root@study ~]# pwd
/root  spool/mail
# 看到这里应该知道为啥了吧？因为 /var/mail 是链接文件，链接到 /var/spool/mail
# 所以，加上 pwd -P 的选项后，会不以链接文件的数据显示，而是显示正确的完整路径啊！
pwd是Print Working Directory的缩写，也就是显示目前所在目录的指令， 例如在上个表格最后的目录是/var/mail这个目录，但是提示字
符仅显示mail， 如果你想要知道目前所在的目录，可以输入pwd即可。此外，由于很多的套件所使用的目录名称都相同，例如 /usr/local/etc还
有/etc，但是通常Linux仅列出最后面那一个目录而已，这个时候你就可以使用pwd 来知道你的所在目录啰！免得搞错目录，结果...
其实有趣的是那个 -P 的选项啦！他可以让我们取得正确的目录名称，而不是以链接文件的路径来显示的。 如果你使用的是CentOS 7.x
的话，刚刚好/var/mail是/var/spool/mail的链接文件， 所以，通过到/var/mail下达pwd -P就能够知道这个选项的意义啰～ ^_^
mkdir （（创创建建新新目目录录））
[root@study ~]# mkdir [-mp] 目目录录名名称称
选项与参数：
-m ：设置文件的权限喔！直接设置，不需要看默认权限 （umask） 的脸色～
-p ：帮助你直接将所需要的目录（包含上层目录）递回创建起来！
范例：请到/tmp下面尝试创建数个新目录看看：
[root@study ~]# cd /tmp
[root@study tmp]# mkdir test <==创建一名为 test 的新目录
[root@study tmp]# mkdir test1/test2/test3/test4
mkdir: cannot create directory ‘test1/test2/test3/test4’: No such file or directory
# 话说，系统告诉我们，没可能创建这个目录啊！就是没有目录才要创建的！见鬼嘛？
[root@study tmp]# mkdir -p test1/test2/test3/test4
# 原来是要建 test4 上层没先建 test3 之故！加了这个 -p 的选项，可以自行帮你创建多层目录！
范例：创建权限为rwx--x--x的目录
[root@study tmp]# mkdir -m 711 test2
[root@study tmp]# ls -ld test*
drwxr-xr-x. 2 root root 6 Jun 4 19:03 test
drwxr-xr-x. 3 root root 18 Jun 4 19:04 test1
drwx--x--x. 2 root root 6 Jun 4 19:05 test2
# 仔细看上面的权限部分，如果没有加上 -m 来强制设置属性，系统会使用默认属性。
# 那么你的默认属性为何？这要通过下面介绍的 umask 才能了解喔！ ^_^
如果想要创建新的目录的话，那么就使用mkdir （make directory）吧！ 不过，在默认的情况下， 你所需要的目录得一层一层的创建才
行！例如：假如你要创建一个目录为 /home/bird/testing/test1，那么首先必须要有 /home 然后 /home/bird ，再来 /home/bird/testing 都必须要存
在，才可以创建 /home/bird/testing/test1 这个目录！假如没有 /home/bird/testing 时，就没有办法创建 test1 的目录啰！
不过，现在有个更简单有效的方法啦！那就是加上 -p 这个选项喔！你可以直接下达：“ mkdir -p /home/bird/testing/test1 ” 则系统会自动
的帮你将 /home, /home/bird, /home/bird/testing 依序的创建起目录！并且， 如果该目录本来就已经存在时，系统也不会显示错误讯息喔！挺快
乐的吧！ ^_^。 不过鸟哥不建议常用-p这个选项，因为担心如果你打错字，那么目录名称就会变的乱七八糟的！
另外，有个地方你必须要先有概念，那就是“默认权限”的地方。我们可以利用 -m 来强制给予一个新的目录相关的权限， 例如上表当
中，我们给予 -m 711 来给予新的目录 drwx--x--x 的权限。不过，如果没有给予 -m 选项时， 那么默认的新建目录权限又是什么呢？这个跟
umask 有关，我们在本章后头会加以介绍的。
rmdir （（删删除除“空空”的的目目录录））
[root@study ~]# rmdir [-p] 目目录录名名称称
选项与参数：