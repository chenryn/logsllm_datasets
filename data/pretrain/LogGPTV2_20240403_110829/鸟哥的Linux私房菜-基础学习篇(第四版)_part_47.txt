### 最近更新日期：2015/06/24

在前一章中，我们通过FHS（文件系统层次结构标准）了解了Linux的“树状目录”概念。接下来，我们将深入探讨一些基本的路径问题，特别是绝对路径与相对路径的区别。理解这些概念对于有效地导航和管理Linux文件系统至关重要。

#### 绝对路径与相对路径
- **绝对路径**：从根目录（`/`）开始写起的完整路径。例如：`/usr/share/doc`。
- **相对路径**：相对于当前工作目录的路径。例如，如果当前目录是`/usr/share/doc`，要切换到`/usr/share/man`，可以使用`cd ../man`。

#### 路径的重要性
假设你编写了一个软件，需要访问三个目录：`etc`, `bin`, 和 `man`。不同用户可能将这些目录安装在不同的位置。使用绝对路径会导致配置文件中的路径变得非常复杂，而相对路径则更加灵活和易于维护。此外，在编写脚本时，建议使用绝对路径以确保路径的准确性，尤其是在涉及任务调度（如`at`或`cron`）时。

#### 特殊目录符号
- `.`：代表当前目录。
- `..`：代表上一级目录。
- `-`：代表上一个工作目录。
- `~`：代表当前用户的主目录。
- `~account`：代表特定用户的主目录（`account`是用户名）。

请注意，所有目录下都存在`.`和`..`这两个特殊目录，分别表示当前目录和上级目录。例如，在根目录`/`下，`..`实际上指向根目录本身。

#### 常用目录操作命令
- **`cd`**：变更目录
  - 语法：`cd [相对路径或绝对路径]`
  - 示例：
    ```bash
    [dmtsai@study ~]$ su -  # 切换到root用户
    [root@study ~]# cd ~dmtsai  # 切换到dmtsai用户的主目录
    [root@study dmtsai]# cd ~  # 返回到当前用户的主目录
    [root@study ~]# cd ..  # 切换到上一级目录
    [root@study /]# cd -  # 返回到上一个工作目录
    [root@study ~]# cd /var/spool/mail  # 使用绝对路径切换
    [root@study mail]# cd ../postfix  # 使用相对路径切换
    ```
- **`pwd`**：显示当前工作目录
  - 选项：`-P` 显示实际路径而非符号链接
  - 示例：
    ```bash
    [root@study ~]# pwd
    /root
    [root@study ~]# cd /var/mail
    [root@study mail]# pwd
    /var/mail
    [root@study mail]# pwd -P
    /var/spool/mail
    ```
- **`mkdir`**：创建新目录
  - 选项：
    - `-m`：设置目录权限
    - `-p`：递归创建多级目录
  - 示例：
    ```bash
    [root@study ~]# mkdir test  # 创建单个目录
    [root@study ~]# mkdir -p test1/test2/test3/test4  # 递归创建多级目录
    [root@study ~]# mkdir -m 711 test2  # 创建并设置权限
    ```
- **`rmdir`**：删除空目录
  - 选项：
    - `-p`：递归删除空目录
  - 示例：
    ```bash
    [root@study ~]# rmdir test  # 删除单个空目录
    [root@study ~]# rmdir -p test1/test2/test3/test4  # 递归删除空目录
    ```

希望以上内容能帮助你更好地理解和使用Linux中的路径和目录操作。如果你有任何疑问或需要进一步的帮助，请随时联系我！