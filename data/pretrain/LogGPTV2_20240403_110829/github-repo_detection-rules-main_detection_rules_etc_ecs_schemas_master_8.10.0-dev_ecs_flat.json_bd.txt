{"source.geo.timezone": {"dashed_name": "source-geo-timezone", "description": "The time zone of the location, such as IANA time zone name.", "example": "America/Argentina/Buenos_Aires", "flat_name": "source.geo.timezone", "ignore_above": 1024, "level": "core", "name": "timezone", "normalize": [], "original_fieldset": "geo", "short": "Time zone."}}
{"source.ip": {"dashed_name": "source-ip", "description": "IP address of the source (IPv4 or IPv6).", "flat_name": "source.ip", "level": "core", "name": "ip", "normalize": [], "short": "IP address of the source.", "type": "ip"}}
{"source.mac": {"dashed_name": "source-mac", "description": "MAC address of the source.\nThe notation format from RFC 7042 is suggested: Each octet (that is, 8-bit byte) is represented by two [uppercase] hexadecimal digits giving the value of the octet as an unsigned integer. Successive octets are separated by a hyphen.", "example": "00-00-5E-00-53-23", "flat_name": "source.mac", "ignore_above": 1024, "level": "core", "name": "mac", "normalize": [], "pattern": "^[A-F0-9]{2}(-[A-F0-9]{2}){5,}$", "short": "MAC address of the source."}}
{"source.nat.ip": {"dashed_name": "source-nat-ip", "description": "Translated ip of source based NAT sessions (e.g. internal client to internet)\nTypically connections traversing load balancers, firewalls, or routers.", "flat_name": "source.nat.ip", "level": "extended", "name": "nat.ip", "normalize": [], "short": "Source NAT ip", "type": "ip"}}
{"source.nat.port": {"dashed_name": "source-nat-port", "description": "Translated port of source based NAT sessions. (e.g. internal client to internet)\nTypically used with load balancers, firewalls, or routers.", "flat_name": "source.nat.port", "format": "string", "level": "extended", "name": "nat.port", "normalize": [], "short": "Source NAT port", "type": "long"}}
{"source.packets": {"dashed_name": "source-packets", "description": "Packets sent from the source to the destination.", "example": 12, "flat_name": "source.packets", "level": "core", "name": "packets", "normalize": [], "short": "Packets sent from the source to the destination.", "type": "long"}}
{"source.port": {"dashed_name": "source-port", "description": "Port of the source.", "flat_name": "source.port", "format": "string", "level": "core", "name": "port", "normalize": [], "short": "Port of the source.", "type": "long"}}
{"source.registered_domain": {"dashed_name": "source-registered-domain", "description": "The highest registered source domain, stripped of the subdomain.\nFor example, the registered domain for \"foo.example.com\" is \"example.com\".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as \"co.uk\".", "example": "example.com", "flat_name": "source.registered_domain", "ignore_above": 1024, "level": "extended", "name": "registered_domain", "normalize": [], "short": "The highest registered source domain, stripped of the subdomain."}}
{"source.subdomain": {"dashed_name": "source-subdomain", "description": "The subdomain portion of a fully qualified domain name includes all of the names except the host name under the registered_domain.  In a partially qualified domain, or if the the qualification level of the full name cannot be determined, subdomain contains all of the names below the registered domain.\nFor example the subdomain portion of \"www.east.mydomain.co.uk\" is \"east\". If the domain has multiple levels of subdomain, such as \"sub2.sub1.example.com\", the subdomain field should contain \"sub2.sub1\", with no trailing period.", "example": "east", "flat_name": "source.subdomain", "ignore_above": 1024, "level": "extended", "name": "subdomain", "normalize": [], "short": "The subdomain of the domain."}}
{"source.top_level_domain": {"dashed_name": "source-top-level-domain", "description": "The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is \"com\".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as \"co.uk\".", "example": "co.uk", "flat_name": "source.top_level_domain", "ignore_above": 1024, "level": "extended", "name": "top_level_domain", "normalize": [], "short": "The effective top level domain (com, org, net, co.uk)."}}
{"source.user.domain": {"dashed_name": "source-user-domain", "description": "Name of the directory the user is a member of.\nFor example, an LDAP or Active Directory domain name.", "flat_name": "source.user.domain", "ignore_above": 1024, "level": "extended", "name": "domain", "normalize": [], "original_fieldset": "user", "short": "Name of the directory the user is a member of."}}
{"source.user.email": {"dashed_name": "source-user-email", "description": "User email address.", "flat_name": "source.user.email", "ignore_above": 1024, "level": "extended", "name": "email", "normalize": [], "original_fieldset": "user", "short": "User email address."}}
{"source.user.full_name": {"dashed_name": "source-user-full-name", "description": "User's full name, if available.", "example": "Albert Einstein", "flat_name": "source.user.full_name", "ignore_above": 1024, "level": "extended", "multi_fields": [{"flat_name": "source.user.full_name.text", "name": "text", "type": "match_only_text"}], "name": "full_name", "normalize": [], "original_fieldset": "user", "short": "User's full name, if available."}}
{"source.user.group.domain": {"dashed_name": "source-user-group-domain", "description": "Name of the directory the group is a member of.\nFor example, an LDAP or Active Directory domain name.", "flat_name": "source.user.group.domain", "ignore_above": 1024, "level": "extended", "name": "domain", "normalize": [], "original_fieldset": "group", "short": "Name of the directory the group is a member of."}}
{"source.user.group.id": {"dashed_name": "source-user-group-id", "description": "Unique identifier for the group on the system/platform.", "flat_name": "source.user.group.id", "ignore_above": 1024, "level": "extended", "name": "id", "normalize": [], "original_fieldset": "group", "short": "Unique identifier for the group on the system/platform."}}
{"source.user.group.name": {"dashed_name": "source-user-group-name", "description": "Name of the group.", "flat_name": "source.user.group.name", "ignore_above": 1024, "level": "extended", "name": "name", "normalize": [], "original_fieldset": "group", "short": "Name of the group."}}
{"source.user.hash": {"dashed_name": "source-user-hash", "description": "Unique user hash to correlate information for a user in anonymized form.\nUseful if `user.id` or `user.name` contain confidential information and cannot be used.", "flat_name": "source.user.hash", "ignore_above": 1024, "level": "extended", "name": "hash", "normalize": [], "original_fieldset": "user", "short": "Unique user hash to correlate information for a user in anonymized form."}}
{"source.user.id": {"dashed_name": "source-user-id", "description": "Unique identifier of the user.", "example": "S-1-5-21-202424912787-2692429404-2351956786-1000", "flat_name": "source.user.id", "ignore_above": 1024, "level": "core", "name": "id", "normalize": [], "original_fieldset": "user", "short": "Unique identifier of the user."}}
{"source.user.name": {"dashed_name": "source-user-name", "description": "Short name or login of the user.", "example": "a.einstein", "flat_name": "source.user.name", "ignore_above": 1024, "level": "core", "multi_fields": [{"flat_name": "source.user.name.text", "name": "text", "type": "match_only_text"}], "name": "name", "normalize": [], "original_fieldset": "user", "short": "Short name or login of the user."}}
{"source.user.roles": {"dashed_name": "source-user-roles", "description": "Array of user roles at the time of the event.", "example": "[\"kibana_admin\", \"reporting_user\"]", "flat_name": "source.user.roles", "ignore_above": 1024, "level": "extended", "name": "roles", "normalize": ["array"], "original_fieldset": "user", "short": "Array of user roles at the time of the event."}}
{"span.id": {"dashed_name": "span-id", "description": "Unique identifier of the span within the scope of its trace.\nA span represents an operation within a transaction, such as a request to another service, or a database query.", "example": "3ff9a8981b7ccd5a", "flat_name": "span.id", "ignore_above": 1024, "level": "extended", "name": "span.id", "normalize": [], "short": "Unique identifier of the span within the scope of its trace."}}
{"tags": {"dashed_name": "tags", "description": "List of keywords used to tag each event.", "example": "[\"production\", \"env2\"]", "flat_name": "tags", "ignore_above": 1024, "level": "core", "name": "tags", "normalize": ["array"], "short": "List of keywords used to tag each event."}}
{"threat.enrichments": {"dashed_name": "threat-enrichments", "description": "A list of associated indicators objects enriching the event, and the context of that association/enrichment.", "flat_name": "threat.enrichments", "level": "extended", "name": "enrichments", "normalize": ["array"], "short": "List of objects containing indicators enriching the event.", "type": "nested"}}
{"threat.enrichments.indicator": {"dashed_name": "threat-enrichments-indicator", "description": "Object containing associated indicators enriching the event.", "flat_name": "threat.enrichments.indicator", "level": "extended", "name": "enrichments.indicator", "normalize": [], "short": "Object containing indicators enriching the event.", "type": "object"}}
{"threat.enrichments.indicator.as.number": {"dashed_name": "threat-enrichments-indicator-as-number", "description": "Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet.", "example": 15169, "flat_name": "threat.enrichments.indicator.as.number", "level": "extended", "name": "number", "normalize": [], "original_fieldset": "as", "short": "Unique number allocated to the autonomous system.", "type": "long"}}
{"threat.enrichments.indicator.as.organization.name": {"dashed_name": "threat-enrichments-indicator-as-organization-name", "description": "Organization name.", "example": "Google LLC", "flat_name": "threat.enrichments.indicator.as.organization.name", "ignore_above": 1024, "level": "extended", "multi_fields": [{"flat_name": "threat.enrichments.indicator.as.organization.name.text", "name": "text", "type": "match_only_text"}], "name": "organization.name", "normalize": [], "original_fieldset": "as", "short": "Organization name."}}
{"threat.enrichments.indicator.confidence": {"dashed_name": "threat-enrichments-indicator-confidence", "description": "Identifies the vendor-neutral confidence rating using the None/Low/Medium/High scale defined in Appendix A of the STIX 2.1 framework. Vendor-specific confidence scales may be added as custom fields.", "example": "Medium", "expected_values": ["Not Specified", "None", "Low", "Medium", "High"], "flat_name": "threat.enrichments.indicator.confidence", "ignore_above": 1024, "level": "extended", "name": "enrichments.indicator.confidence", "normalize": [], "short": "Indicator confidence rating"}}
{"threat.enrichments.indicator.description": {"dashed_name": "threat-enrichments-indicator-description", "description": "Describes the type of action conducted by the threat.", "example": "IP x.x.x.x was observed delivering the Angler EK.", "flat_name": "threat.enrichments.indicator.description", "ignore_above": 1024, "level": "extended", "name": "enrichments.indicator.description", "normalize": [], "short": "Indicator description"}}
{"threat.enrichments.indicator.email.address": {"dashed_name": "threat-enrichments-indicator-email-address", "description": "Identifies a threat indicator as an email address (irrespective of direction).", "example": "PI:EMAIL", "flat_name": "threat.enrichments.indicator.email.address", "ignore_above": 1024, "level": "extended", "name": "enrichments.indicator.email.address", "normalize": [], "short": "Indicator email address"}}
{"threat.enrichments.indicator.file.accessed": {"dashed_name": "threat-enrichments-indicator-file-accessed", "description": "Last time the file was accessed.\nNote that not all filesystems keep track of access time.", "flat_name": "threat.enrichments.indicator.file.accessed", "level": "extended", "name": "accessed", "normalize": [], "original_fieldset": "file", "short": "Last time the file was accessed.", "type": "date"}}
{"threat.enrichments.indicator.file.attributes": {"dashed_name": "threat-enrichments-indicator-file-attributes", "description": "Array of file attributes.\nAttributes names will vary by platform. Here's a non-exhaustive list of values that are expected in this field: archive, compressed, directory, encrypted, execute, hidden, read, readonly, system, write.", "example": "[\"readonly\", \"system\"]", "flat_name": "threat.enrichments.indicator.file.attributes", "ignore_above": 1024, "level": "extended", "name": "attributes", "normalize": ["array"], "original_fieldset": "file", "short": "Array of file attributes."}}
{"threat.enrichments.indicator.file.code_signature.digest_algorithm": {"dashed_name": "threat-enrichments-indicator-file-code-signature-digest-algorithm", "description": "The hashing algorithm used to sign the process.\nThis value can distinguish signatures when a file is signed multiple times by the same signer but with a different digest algorithm.", "example": "sha256", "flat_name": "threat.enrichments.indicator.file.code_signature.digest_algorithm", "ignore_above": 1024, "level": "extended", "name": "digest_algorithm", "normalize": [], "original_fieldset": "code_signature", "short": "Hashing algorithm used to sign the process."}}
{"threat.enrichments.indicator.file.code_signature.exists": {"dashed_name": "threat-enrichments-indicator-file-code-signature-exists", "description": "Boolean to capture if a signature is present.", "example": "true", "flat_name": "threat.enrichments.indicator.file.code_signature.exists", "level": "core", "name": "exists", "normalize": [], "original_fieldset": "code_signature", "short": "Boolean to capture if a signature is present.", "type": "boolean"}}
{"threat.enrichments.indicator.file.code_signature.signing_id": {"dashed_name": "threat-enrichments-indicator-file-code-signature-signing-id", "description": "The identifier used to sign the process.\nThis is used to identify the application manufactured by a software vendor. The field is relevant to Apple *OS only.", "example": "com.apple.xpc.proxy", "flat_name": "threat.enrichments.indicator.file.code_signature.signing_id", "ignore_above": 1024, "level": "extended", "name": "signing_id", "normalize": [], "original_fieldset": "code_signature", "short": "The identifier used to sign the process."}}
{"threat.enrichments.indicator.file.code_signature.status": {"dashed_name": "threat-enrichments-indicator-file-code-signature-status", "description": "Additional information about the certificate status.\nThis is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.", "example": "ERROR_UNTRUSTED_ROOT", "flat_name": "threat.enrichments.indicator.file.code_signature.status", "ignore_above": 1024, "level": "extended", "name": "status", "normalize": [], "original_fieldset": "code_signature", "short": "Additional information about the certificate status."}}
{"threat.enrichments.indicator.file.code_signature.subject_name": {"dashed_name": "threat-enrichments-indicator-file-code-signature-subject-name", "description": "Subject name of the code signer", "example": "Microsoft Corporation", "flat_name": "threat.enrichments.indicator.file.code_signature.subject_name", "ignore_above": 1024, "level": "core", "name": "subject_name", "normalize": [], "original_fieldset": "code_signature", "short": "Subject name of the code signer"}}