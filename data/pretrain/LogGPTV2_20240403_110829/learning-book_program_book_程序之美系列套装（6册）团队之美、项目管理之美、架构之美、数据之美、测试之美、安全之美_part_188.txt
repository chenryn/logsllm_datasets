域（stubdomain），它为"虚拟硬件"域提供设备支持（在接下来的
章节中介绍）。把这些代码移到单独的域中是考虑为了获得更好的
性能隔离，提高健壮性并改善初始性能（这有点令人惊讶）。随着
开发的延续，越来越多的特性可能会移出零域，特别是当这样做可
以改善安全性时。
[L]实际上，这个架构允许任何授权的虚拟机访问硬件，并因此作
为驱动域（driverdomain）。
7.6改变的硬件，改变的Xen
直到目前，我们的讨论集中在半虚拟化。然而，在Xen2.0版本和3.0
版本之间，Intel和AMD在处理器中引入了有区别但类似的硬件虚拟
机支持。在虚拟机中运行未修改的操作系统（包括Microsof
Windows或Linux）已经成为可能。这是否会招致半虚拟化的终结？
首先，我们看一下硬件虚拟机是如何实现的。Intel和AMD都引入了
一个新的模式（Intel中称为nonroot模式，AMD中称为guest模式），
试图在这个模式中执行一个特权操作，甚至在最高的（虚拟）权限
级别，以生成一个通知系统管理程序的异常。因此，不必再扫描代
码并替换这些指令（在运行时或通过半虚拟化预先处理）。系统管
理程序可以利用影子页表（shadowpagetable）向虚拟机提供连续内
存的假象，接着它可以触发IO操作以模拟物理设备。
Xen在3.0版本中增加了对硬件虚拟机的支持。开源开发为这次改变
提供了很大的帮助。因为Xen是一个并源项目，所以，来自Intel和
AMD的并发人员可以贡献支持新处理器的底层代码。此外，由于它
的GPL身份，Xen可以合并其他并源项目的代码。例如，新的硬件
虚拟机需要一个模拟的BIOS和模拟的硬件设备；实现其中的任何一
个都需要巨大的开发工作。幸运的是，Xen可以使用来自Bochs项目
的开源BIOS和来自QEMU的模拟设备。
现在你可能想知道有这么多优点的半虚拟化到底怎样了。模拟设
备、影子页表、额外的异常等一定会导致糟糕的性能吗？一个草率
1060
---
## Page 1062
的硬件虚拟化操作系统通常比半虚拟化操作系统运行得更糟糕，但
有两个缓和因素。
首先，处理器厂商正在不断地开发优化虚拟化的新特性。就像存储
器管理单元（memorymanagementunit,MMU）使程序员处理虚拟地
址而不是物理地址一样，IOMIMU对于输入和输出设备来说同样如
此。IOMIMU可以用来使虚拟机（无论是虚拟化硬件的或半虚拟化硬
件的虚拟机）安全、直接地访问一个硬件（参见图7-9）。虚拟机直
接访问硬件的常见问题是许多设备可以操作DMA，因此，如果没有
IOMMU，它可以读取或重写其他虚拟机的内存。IOMMU可以用来
确保：在控制某一虚拟机时，DMA只可以使用属于那台虚拟机的内
存。
模拟与虚拟化的对比
最新版本的Xen包含了Bochs和QEMU的代码，而它们都是模拟程
序。在模拟和虚拟化之间有什么区别，两者怎样才可以合并呢？
Bochs用软件提供了x86处理器家族以及所支持硬件的开源实现。
QEMU模拟了好几个架构，包括x86。两者都可以用于运行未修改的
x86操作系统和应用程序。而且，因为它们都包括了硬件的完整实
现（包括CPU），所以，它们可以运行在使用不兼容指令集的硬件
上。
虚拟系统和模拟系统的区别在于两者的指令执行方式不同。在虚拟
系统中，应用程序和大部分操作系统都直接在处理器上运行。而在
模拟系统中，模拟程序必须模拟或转换每个指令以执行它。因此，
对于相同的平台，模拟程序比虚拟机监控器引入更多的开销。山
然而，即使它们使用了部分的Bochs和QEMUXen的硬件虚拟机仍然
是虚拟化的，而不是模拟的。Bochs的代码提供了支持启动进程的
BIOS，而QEMU提供了许多常规设备的模拟驱动程序。然而，只有
在启动和试图进行I/O操作时才调用这些代码。其他大部分指令直接
在CPU上运行。
图7-9演示了一个来自一个虚拟机（DomIO）的利用IOMMU的简化
的DMA请求。当硬件驱动程序和设备通信时使用伪物理（特定虚拟
机的）地址（1）。这个设备使用这些地址进行DMA请求（2），
IOMMU（利用由系统管理程序配置的I/O页表）把这些地址转变为
1061
---
## Page 1063
使用物理地址（3）。IOMMU也会终止虚拟机对任何不属于它的内
存地址的访问。
物理内存
1)发送伪物理地址给设备
h
Domlo
3）用物理地址的DMA
请求
2）用伪物理地址的
DMA请求
IOMMU
图7-9：利用IOMMU直接访问设备
增强内存管理硬件也可以避免使用影子页表。21-AMD和Intel都拥有
在伪物理地址和物理地址之间进行转换的技术，它们分别称为快速
虚拟化索引（RapidVirtualizationIndexing）和加强页表（Enhanced
PageTable）。因此无需系统管理程序创建影子页表，因为整个转
换都由硬件进行处理。
当然，一个廉价得多的解决方案是吸取半虚拟化的经验并把它们应
用到未修改的客户操作系统。虽然不太可能改变操作系统的核心部
分，但是我们可以增加设备驱动程序。此外，Xen可以修改操作系
统运行的虚拟硬件。最后，模拟硬件提供一个Xen平台设备（Xen
platformdevice），它看起来像是未修改客户操作系统的一个PCI设
备并提供对虚拟平台的访问。然后就可以为未修改的操作系统编写
前端设备，它会像半虚拟化操作系统中的前端一样运行。这样我们
可以在硬件虚拟机中获得与半虚拟化情形相当的I/O性能。当这一章
前面介绍半虚拟化的时候，我们说过，使一个常用操作系统像半虚
拟化客户操作系统一样运行的最好方式是我们自已做或使操作系统
开发人员相信他们应该这样做。作为半虚拟化成功的一个证明，
Microsoft在WindowsServer2008中已经包含了一些启蒙技术
（enlightenment），当在虚拟机中运行时会提高内存管理的性能。
1062
---
## Page 1064
这些启蒙技术相当于半虚拟化操作，因为它们依赖超级调用来通知
当前运转的系统管理程序。
[L]KQEMU是容许用户模式的代码（及一些内核模式的代码）直接
在CPU上运行的Linux内核模块。在宿主和目标平台相同的地方，这
个模块可以提供巨大的加速。结果是模拟和虚拟的混合。
[2]需要提到的是，Xen的影子页表实现方式非常优秀，其性能很有
竞争力，但是，当和半虚拟页表进行比较时仍然显得开销略大。
7.7经验教训
回顾一下，我们可以从Xen中获得两个主要的经验：半虚拟化的重
要性和开源开发的优点。
7.7.1半虚拟化
首先是半虚拟化的成功。一句名言提醒我们：
计算机科学中的任何问题都可以用另外的间接层解决，但是这通常
会引发另一个问题。
DavidWheeler
虚拟化仅仅是一种间接的形式，即使现代的计算机从硬件上支持虚
拟化，盲目地依赖这种支持会导致糟糕的性能。当你盲目地利用任
何类型的虚拟化时都会出现同样的问题。例如，虚拟内存使用一块
硬盘来产生有很多内存可用的假象。然而，假如你编写了一个试图
使用所有内存（就像它是真正的物理内存一样）的程序，那性能会
非常糟糕。在这种情况下，你可以想象把那个程序“半虚拟化”以使
它意识到这个物理限制，结合虚拟内存系统来改变用来使它高效运
行的算法和数据结构。
在操作系统的环境中，Xen已经表明半虚拟化（无论是它增加虚拟
驱动程序，还是大规模地改变操作系统，还是在选定区域中有意识
地提升性能）是在虚拟环境中运行时提升性能的一项重要技术。
7.7.2开源开发
1063
---
## Page 1065
在Xen发展过程中采取的最大胆的决策也许是当其他系统管理程序
还只作为私有软件时把Xen作为开源软件。
这个决策绝对使Xen受益，因为这样，Xen可以利用非常多的软件：
从Linux内核和QEMtU机器模拟器，到启动时绘制Xen标识的小程
序。没有这些软件，Xen项目将需要非常大工作量的重复实现。
通过包括这些来自其他项目的软件，当它们更新时，Xen也会受
益，而其他项目也受益于Xen并发人员提交的补丁。
Xen最初是剑桥大学一位研究生的兼职项目，现在已经成长为包括
来自全球的超过100位贡献者。一些大的贡献来自Intel和AMD，他
们提供了许多代码来支持硬件虚拟机。这使得Xen能够成为领先的
系统管理程序之一来支持这些处理器扩展。
除此之外，因为可以自由获得Xen，一些项目已经采用它。主流的
Linux版本，例如Debian、RedHat、SUSE和Ubuntu，都包含了Xen包
并给这个项目反馈代码，还有用于使用Xen的有用的工具。一些贡
献者努力把Xen移植到其他架构，甚至移植到其他操作系统上，使
操作系统直接运行在这个系统管理程序上。Xen已经用于运行半虚
拟化的OpenSolaris、FreeBSD和NetBSD等。Xen现在也涉及Itanium
架构，作用是把它移植到ARM处理器。后者非常令人激动，因为它
使得Xen能够运行"非传统"的设备，例如移动电话。
当我们着眼于未来时，一些最有趣的Xen用途在于研究团体。Xen出
现在2003年的操作系统原理座谈会（SymposiumonOperatingSystems
Principles,SOSP）上并成为一系列研究（在它最初的研究组织内外
都有）的基础。关于Xen的最早的论文之一来自Clarkson大学，一组
研究人员在其中重复了SOSP论文中的结果。作者们强调并源软件改
善了计算机科学，因为它使重复研究成为可能，并且反过来巩固任
何关于性能或其他特性的主张。最近更多的研究工作直接导致Xen
中的新特性变得令人感兴趣。一个特殊的例子是动态迁移（live
migration），它使得一台虚拟机用几乎可以忽略的时间在物理计算
机之间迁移。这在2005年的论文中进行了详细描述，并增加到了
Xen的2.0版本中。
[1]Figlet:http://www.figlet.org
7.8延伸阅读
1064
---
## Page 1066
本章只能够简单地介绍一下Xen项目，相关的研究论文是详细资料
的最好来源。
下面两篇论文分别描述了Xen1.0和2.0的架构：
Barham,Paul,et al."Xen and the art of virtualization, "Proceedings of the
19th ACM Symposium on Operating System Principles,October, 2003
Fraser,Keir,et al."Safe hardware access with the Xen virtual machine
monitor,"Proceedings of the 1st OASIS Workshop,October，2004
下面的论文讲述了一些已经并发用来帮助虚拟化的新的芯片集及处
理器技术：
Ben-Yehuda,Muli,et al."Using IOMMUs for virtualization in Linux and
Xen, "Proceedings of the 2006 Ottawa Linux Symposium,July, 2006
Dong,Yaozu,et al."ExtendingXenwithIntelvirtualization
technology，"Intel?Technology Journal,August,2006.
最后，Xen正在积极地发展并不断地演变。保持与新开发平行的最
好方式是下载源代码并加入邮件列表。它们都可以在
http://www.xen.org/找到。
1065
---
## Page 1067
第8章Guardian：一个容错操作系统环境
Greg Lehey