Each mix decrypts a layer of the message using its private
key, performs some batching strategy to reorder and delay
messages, and then forwards it onward.
Chaum’s original Mix-Net proposal was further developed
in Babel [17], and the Mixmaster [20] and Mixminion [6] sys-
tems were later deployed. These systems can be classiﬁed as
2In fact, a smaller scale version of such a Sybil attack [12]
has recently been observed on the Tor network.
high-latency Mix-Nets since they introduce large and vari-
able latencies during batching. Because of this, however,
high-latency Mix-Nets are much more robust to timing at-
tacks than systems such as Tor. Only when the adversary
controls every mix in the forwarding path will the anonymity
of a message be compromised.
2.2.1 Reliability
As mix-based systems were developed and deployed, the
issue of reliability became apparent as volunteer-run nodes
were often unavailable or oﬄine. One approach was to intro-
duce pingers to keep track of the reliability of nodes. Pingers
attempt to relay traﬃc through all mixes and keep track of
the messages that are eventually delivered. To avoid mali-
cious nodes manipulating the rankings, the pinging traﬃc
is forwarded through the anonymous network itself. Mix
clients then select routes based on these reliability rankings.
Such a strategy, however, biases the nodes used, may be ma-
nipulable by the adversary, and could reduce the anonymity
of messages.
An alternative strategy to ensure reliability, supported by
Mixminion and Mixmaster, is to send copies of the messages,
or fragments thereof, through independent paths. There is
no interaction between copies of the message travelling on
the multiple paths, and the mixes on the diﬀerent paths
operate independently. Furthermore, messages on diﬀerent
paths are bitwise unlinkable amongst themselves, reducing
the potential for traﬃc analysis.
2.2.2 Conventional Analysis
We ﬁrst analyze the security and reliability of mix net-
works under the simple attacker strategy of forwarding all
messages. Our results are straightforward and well-known;
we present them here for comparison purposes only. We as-
sume that reliability is achieved by sending multiple copies
of the messages, as described above. We introduce several
parameters for describing the mix network in Table 1; we
will use them throughout the rest of the paper.
We ﬁrst calculate the probability of security in a mix net-
work with parameters (l, w, t, f ). For a message to be com-
promised, at least one full route should be composed of dis-
honest mixes. A route has at least one honest mix with
probability 1 − tl. The probability that all routes have at
least one honest mix is: “
1 − tl”w
(1)
The security of mix networks is signiﬁcantly higher than
low-latency systems, since increasing l results in an exponen-
tial increase of security. For example, with l = 5 (the default
used by MixMinion), even if 50% of all mixes are compro-
mised, only 3% of all messages can be read. Cautious users
may choose even higher values of l, so that their messages
remain secure even under the most pessimistic assumptions
about the number of compromised mixes.
We can next compute reliability in a mix network with
parameters (l, w, t, f ), where adversary nodes simply relay
all communications. For the messages to be delivered, there
must be at least one full route with no unreliable mixes. The
probability of one such route is (¯t+t·f )l, and the probability
that not all routes are unreliable is:
1 −h
1 − (¯t + t · f )liw
(2)
Variable Description
l
w
t
f
The length of all paths. We assume all copies of the message travel over paths of the same length.
(for width) The number of independent paths over which a copy of the message is transmitted.
The probability a mix is honest. Its converse ¯t = 1 − t is the probability a node is in the hands of the
adversary. We assume that all nodes when chosen have the same probability of being corrupt, independently
of the number of previously honest or corrupt nodes selected.
The probability an honest node is reliable. Its converse ¯f = 1 − f is the probability it is unreliable. This
does not apply to corrupt nodes, which are reliable or not depending on the attack strategy—a reliable
node relays the message correctly, while an unreliable one is simply oﬄine, and behaves as if it does not
exist in the network.
Table 1: Variables used in reliability and security analysis
2.2.3 Selective DoS Attack
Similar to the case in Tor, an adversary may choose to
apply a selective DoS strategy to maximize the chances of
compromising messages.
Instead of relaying all messages,
bad mixes only relay those messages that they can trace
from the beginning to end: the mixes decrypt as much of the
message as they can using the keys of all the colluding mixes
and determine whether there is an honest mix somewhere in
the chain. Messages that cannot be compromised in this
way are either dropped or modiﬁed in a subtle way so that
they are unrecoverable by the recipient. The sender then has
to send more copies of the message to increase its chances
of arriving, which in turn increases the chances that the
adversary captures the message.
In a mix network with parameters (l, w, t, f ), where ad-
versaries drop all communications they cannot compromise,
a message will only be delivered if some path is either fully
compromised or fully honest and reliable. This occurs with
probability r = (1 − t)l + (t · f )l. At least one such path
within w must be picked which happens with probability
1− (1− r)w, so the reliability of mix networks under DoS is:
1 −“
1 −h
¯tl + (t · f )li”w
(3)
The DoS strategy does not aﬀect the probability the mes-
sage is secure; the results are the same as in (1). So what
advantage does this strategy present? To achieve the same
level of reliability, a sender must send the messages more
times, which in turn provides more opportunities for the ad-
versary to capture the message. How many more copies of
the message should be sent, though?
Note 1. Given a mix network with parameters (l, wpas, t, f )
with a passive adversary leading to messages having a proba-
bility of delivery ppas, the number of copies of a message in a
network with parameters (l, wDoS, t, f ) with a DoS adversary
to achieve the same degree of reliability is:
log(1 − (¯t + t · f )l)
log(1 − (¯tl + (t · f )l))
wDoS =
wpas
(4)
Proof Sketch. Require the two probabilities of reliable
delivery from (2) and (3) (with w equal to wpas and wDoS,
respectively) be equal and solve for wDoS.
Note 2. The probability of security for a particular target
reliability c can easily be calculated:
secpas = (1 − ¯tl)
secDoS = (1 − ¯tl)
log (1−c)
log (1−(¯t+t·f)l)
log (1−c)
log (1−(¯tl+(t·f)l))
(5)
(6)
y
t
i
r
u
c
e
S
1
0.8
0.6
0.4
0.2
0
0
l = 2
l = 5
l = 10
l = 20
0.2
0.4
0.6
0.8
1
Fraction of honest nodes (t)
Figure 3: Security of mix networks for diﬀerent
choices of l under the DoS strategy.
Figure 2 presents the results of simulations used to val-
idate our calculations. Nodes in these experiments tuned
their sending parameters w to achieve a reliability of 95%,
with ﬁxed l = 5 and f = 0.90. The parameters l and f are
chosen to mimic observed behavior of Mixminion nodes.3
Figure 2(a) presents the fraction of secure messages out of
5000 sample messages sent through the network, for both the
passive and DoS attacker strategies (the sample size leads
to an error of less than 1% for all our simulation results; the
discontinuities in the graph are due to changing quantized
values of w). It is clear that an attacker who denies service
has an advantage, depicted as the gap between the two lines
representing the probabilities of success of the two attacks.
Figure 2(b) depicts the replication factor w that honest
nodes are forced to use to compensate for network unreli-
ability. Under the DoS strategy, the number of copies of
a message can become very large. The number of replicas
peaks at about t = 0.5. For smaller fractions of honest
nodes, reliability is guaranteed by the fact that the route
is often compromised, and for larger fractions, reliability is
restored by the honest nodes. This should act as a clear
warning to mix system administrators: reliability is not a
measure of security.
2.2.4
One response to increase security under the DoS attack
may be to use longer paths. Conventional analysis suggests
that higher values of l provide exponentially higher security,
so arbitrary security levels can easily be achieved by increas-
Increasing path lengths (l)
3This is lower than the ﬁgure we used for reliability in Tor;
Tor nodes are periodically probed by the directory server
and ejected from the network if they are not reliable.
(a) Security for diﬀerent fractions of honest nodes.
(b) Number of messages to be sent for diﬀerent fractions
of honest nodes.
Figure 2: The eﬀect of diﬀerent fractions of honest nodes t on the security of the routes, and the replication
factor w, for a target reliability of 95%. Experimental results: 5000 samples per point, l = 5 (Mixminion),
f = 0.90.
ing l. Can the same approach work under the selective DoS
strategy?
Figure 3 shows the security achieved for varying values of
l using the same parameters as in Figure 2 under the DoS
strategy. For higher values of t, increased values of l have
the expected eﬀect of increasing security. However, for low
values of t, longer paths not only do not help the security,
but in fact are a detriment. This is because the chance of
path compromise, tl, becomes higher than the chance of a
successful honest path, (tf )l, and the diﬀerence grows with
higher l. The crossover point on the graph is when t = tf .
The results show that, when reliability, and not just secu-
rity, is taken into account, mix networks have a fundamental
limit on the number of compromised mixes. When a major-
ity of nodes are corrupt, mix networks are “unsafe at any
path length.”
3. DENIAL OF SERVICE AGAINST
SYSTEMS FEATURING RELIABILITY
3.1 Cashmere
Cashmere [30] is an anonymous routing layer that uses re-
lay groups instead of single-node mixes to provide increased
connection reliability. Each relay group is composed of a set
of nodes that share a common public/private key pair. This
gives any member of the group the ability to decrypt a layer
of the message and forward it to the next relay group. Each
node in Cashmere is assigned a unique nodeID and each re-
lay group a unique groupID such that a node is a member
of a relay group if the groupID is a preﬁx of its nodeID.
Cashmere is implemented on top of the Pastry [26] struc-
tured overlay and makes use of its anycast mechanism to
route a message towards any node with the correct groupID
preﬁx; the node that receives the message is named the relay
group root. The Pastry mechanisms for maintaining reliabil-
ity ensure that such a node will be found as long as at least
one member of the relay group is reliable. The root decrypts
Security and Reliability of Cashmere
the message, broadcasts the payload to all members of his
relay group, and then sends the message to the next relay
group in the forwarding path. The actual destination may
be located in any relay group, not necessarily the last one; a
node recognizes itself as the destination when it can decrypt
the message payload.
3.1.1
In the presence of a passive adversary, honest and reliable,
as well as dishonest nodes will forward traﬃc appropriately.
As long as there is at least one of these nodes acting as the
relay group root for every relay until the destination, the
connection will remain reliable. Since any of the nodes in a
relay group can decrypt the current layer of the forwarding
path, connections may be insecure whenever there is at least
one dishonest mix present in every relay group leading up to
the destination. Since the destination itself is not revealed
in the message, but instead is chosen among the members of
all relay groups, we also require the destination to be dishon-
est to consider a message compromised; in other words, we
measure sender anonymity. (Unlinkability is more complex
to model; see [30] for a conventional analysis. We leave the
study of unlinkability under selective DoS to future work.)
We next compute the probability that a message is deliv-
ered reliably in Cashmere with parameters (l, w, t, f ), where
dishonest nodes simply relay all communications. The prob-
ability that a relay group is reliable, or has at least one
honest, reliable or dishonest node present, is 1 − (t ¯f )w. To
ensure message reliability, each relay group before the one
that contains the destination must be reliable, and the des-
tination must itself be reliable. The destination is in each
relay group with probability 1/l. Therefore, the message is
reliably delivered with probability:
Next we consider security. For message anonymity to be
compromised, each relay group leading up the destination
(7)
l−1X
i=0
`1 − (t ¯f )w´i (¯t + tf )
1
l
0.00.20.40.60.81.00.00.20.40.60.81.0Security versus honest nodest − Probability a node is honest.Probability of SecurityNo DoSDoS0.00.20.40.60.81.0125102050Replication versus honest nodest − Probability a node is honest.w − replication factor. (Log scale.)No DoSDoSthan for mix networks with equivalent w. This is because to
deny service, the adversary must capture only a single relay
root that precedes the destination, whereas mix networks
require an adversary on every path. Similarly, to violate se-
curity, the adversary needs only a single adversary in each
group, rather than an entire compromised path in mix net-
works. By failing to consider denial of service as a security
concern, the authors have created great potential for the
selective DoS attack to succeed.
The graph also shows that, under the parameters we con-
sidered, mix networks oﬀer substantially greater security
even under the passive adversary strategy. Cashmere is use-
ful when there are few compromised nodes and very frequent
failures. With t = 1.0 and f = 0.5, the reliability of Cash-
mere with w = 5 is 94%, conditioned on the destination
being reliable. To achieve the same reliability in mix net-
works, w = 89 would be necessary!
3.2 Hydra-Onions
The Hydra-Onion system was designed to resist active ad-