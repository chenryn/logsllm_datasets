 **Migrated issue, originally created by Alessandro Pelliciari
(@apelliciari)**
    SQLAlchemy==1.1.9
    SQLAlchemy-Utils==0.32.16
Working on sqlite, with a query like this:
    SELECT 
      DATE(creation_date, -strftime('%d', data) || ' days', '+1 day') AS __timestamp
    FROM table_xyz
SQLAlchemy when compiling escapes percent sign inside `strtfime`, making the
query wrong and meaningless:
    SELECT 
      DATE(creation_date, -strftime('%%d', data) || ' days', '+1 day') AS __timestamp
    FROM table_xyz
notice the double percent inside `strftime` function.
I think the problem is in the `sqlite` dialect: it doesn't cover this case,
but I don't know very well SQLAlchemy so i don't know where to look to patch
it.
I don't have an easy reproducible case because this issue came up using
Superset (https://github.com/apache/incubator-superset/), who's using
SQLAlchemy to do the interrogation on the database, so not knowing SQLAlchemy
well I can't isolate the case.
Relevant Superset code doing the query:
        def get_query_str(self, query_obj):
            engine = self.database.get_sqla_engine()
            qry = self.get_sqla_query(**query_obj)
            sql = str(
                qry.compile(
                    engine,
                    compile_kwargs={"literal_binds": True}
                )
            )
            logging.info(sql)
            sql = sqlparse.format(sql, reindent=True)
            return sql
In my case, engine is:
    #!
    (Pdb++) pp engine.__dict__
    {'_echo': None,
     'dialect': ,
     'engine': Engine(sqlite:////home/superset/consuntivo.db),
     'logger': ,
     'pool': ,
     'url': sqlite:////home/superset/consuntivo.db}
qry is:
    #!
and raw columns in qry object are ok:
    #!
    (Pdb++) pp qry._raw_columns[0].__dict__
    {'_allow_label_resolve': True,
     '_element': ,
     '_key_label': u'__timestamp',
     '_label': u'__timestamp',
     '_proxies': [],
     '_resolve_label': u'__timestamp',
     '_type': DateTime(),
     'comparator': ,
     'element': ,
     'key': u'__timestamp',
     'name': u'__timestamp',
     'type': DateTime()}