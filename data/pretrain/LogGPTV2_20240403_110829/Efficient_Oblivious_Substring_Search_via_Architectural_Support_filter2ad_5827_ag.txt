PoPETs 2015, 2 (2015), 263–281. http://www.degruyter.com/view/j/popets.2015.
2015.issue-2/popets-2015-0014/popets-2015-0014.xml
[11] P.J. Cock, C.J. Fields, N. Goto, M.L. Heuer, and P.M. Rice. 2010. The Sanger FASTQ
file format for sequences with quality scores, and the Solexa/Illumina FASTQ
variants. Nucleic Acids Research 38, 6 (2010), 1767–1771. https://doi.org/10.1093/
nar/gkp1137.PMC2847217.PMID20015970
[12] Intel Corporation. 2019. Intel® Software Guard Extensions (Intel® SGX) SDK for
Linux* OS (v2.5 ed.). https://download.01.org/intel-sgx/linux-2.5/docs/
[13] Victor Costan and Srinivas Devadas. 2016. Intel SGX Explained. IACR Cryptology
ePrint Archive 2016 (2016), 86.
[14] Paolo Ferragina and Giovanni Manzini. 2005. Indexing compressed text. J. ACM
52, 4 (2005), 552–581. https://doi.org/10.1145/1082036.1082039
[15] Benny Fuhry, Raad Bahmani, Ferdinand Brasser, Florian Hahn, Florian Ker-
schbaum, and Ahmad-Reza Sadeghi. 2018. HardIDX: Practical and secure index
with SGX in a malicious environment. Journal of Computer Security 26, 5 (2018),
677–706. https://doi.org/10.3233/JCS-171103
ACSAC 2020, December 7–11, 2020, Austin, USA
N. Mainardi, D. Sampietro, A. Barenghi, G. Pelosi
[16] Craig Gentry. 2009. Fully homomorphic encryption using ideal lattices. In Pro-
ceedings of the 41st Annual ACM Symposium on Theory of Computing, STOC 2009,
Bethesda, MD, USA, May 31 - June 2, 2009. ACM, 169–178. https://doi.org/10.
1145/1536414.1536440
[17] Craig Gentry, Kenny A. Goldman, Shai Halevi, Charanjit S. Jutla, Mariana
Raykova, and Daniel Wichs. 2013. Optimizing ORAM and Using It Efficiently for
Secure Computation. In Privacy Enhancing Technologies - 13th International Sym-
posium, PETS 2013, Bloomington, IN, USA, July 10-12, 2013. Proceedings (Lecture
Notes in Computer Science), Vol. 7981. Springer, 1–18. https://doi.org/10.1007/978-
3-642-39077-7_1
[18] Daniel Gruss, Julian Lettner, Felix Schuster, Olga Ohrimenko, István Haller, and
Manuel Costa. 2017. Strong and Efficient Cache Side-Channel Protection using
Hardware Transactional Memory, See [23], 217–233.
[19] Intel Corporation. 2018. Description and mitigation overview for L1 Termi-
https://software.intel.com/security-software-guidance/software-
nal Fault.
guidance/l1-terminal-fault
[20] Intel Corporation. 2020. Deep Dive: Load Value Injection. https://software.intel.
com/security-software-guidance/insights/deep-dive-load-value-injection
[21] Intel Corporation. 2020.
Deep Dive: Special Register Buffer Data Sam-
https://software.intel.com/security-software-guidance/insights/deep-
pling.
dive-special-register-buffer-data-sampling
[22] Yu Ishimaki, Hiroki Imabayashi, and Hayato Yamana. 2017. Private Substring
Search on Homomorphically Encrypted Data. In 2017 IEEE International Con-
ference on Smart Computing, SMARTCOMP 2017, Hong Kong, China, May 29-31,
2017. IEEE Computer Society, 1–6. https://doi.org/10.1109/SMARTCOMP.2017.
7947038
[23] Engin Kirda and Thomas Ristenpart (Eds.). 2017. 26th USENIX Security Sympo-
sium, USENIX Security 2017, Vancouver, BC, Canada, August 16-18, 2017. USENIX
Association.
[24] Bryan Klimt and Yiming Yang. 2004. The Enron Corpus: A New Dataset for
Email Classification Research. In Machine Learning: ECML 2004, 15th European
Conference on Machine Learning, Pisa, Italy, September 20-24, 2004, Proceedings
(Lecture Notes in Computer Science), Vol. 3201. Springer, 217–226. https://doi.org/
10.1007/978-3-540-30115-8_22
[25] Donald E. Knuth. 1997. The Art of Computer Programming, Volume 2: Seminumer-
ical Algorithms (third ed.). Addison-Wesley, Boston.
[26] Iraklis Leontiadis and Ming Li. 2018. Storage Efficient Substring Searchable Sym-
metric Encryption. In Proceedings of the 6th International Workshop on Security
in Cloud Computing, SCC@AsiaCCS 2018, Incheon, Republic of Korea, June 04-08,
2018. ACM, 3–13. https://doi.org/10.1145/3201595.3201598
[27] Nicholas Mainardi, Alessandro Barenghi, and Gerardo Pelosi. 2019. Privacy
preserving substring search protocol with polylogarithmic communication cost.
In Proceedings of the 35th Annual Computer Security Applications Conference,
ACSAC 2019, San Juan, PR, USA, December 09-13, 2019. ACM, 297–312. https:
//doi.org/10.1145/3359789.3359842
[28] Udi Manber and Eugene W. Myers. 1993. Suffix Arrays: A New Method for
On-Line String Searches. SIAM J. Comput. 22, 5 (1993), 935–948. https://doi.org/
10.1137/0222058
[29] Pratyush Mishra, Rishabh Poddar, Jerry Chen, Alessandro Chiesa, and Raluca Ada
Popa. 2018. Oblix: An Efficient Oblivious Search Index. In 2018 IEEE Symposium
on Security and Privacy, SP 2018, Proceedings, 21-23 May 2018, San Francisco,
California, USA. IEEE Computer Society, 279–296. https://doi.org/10.1109/SP.
2018.00045
[30] Tarik Moataz and Erik-Oliver Blass. 2015. Oblivious Substring Search with
Updates. IACR Cryptology ePrint Archive 2015 (2015), 722. http://eprint.iacr.org/
2015/722
[31] Ge Nong, Sen Zhang, and Wai Hong Chan. 2009. Linear Suffix Array Construction
by Almost Pure Induced-Sorting. In 2009 Data Compression Conference (DCC
2009), 16-18 March 2009, Snowbird, UT, USA. IEEE Computer Society, 193–202.
https://doi.org/10.1109/DCC.2009.42
[32] Erik Nygren, Ramesh K. Sitaraman, and Jennifer Sun. 2010. The Akamai network:
a platform for high-performance internet applications. Operating Systems Review
44, 3 (2010), 2–19. https://doi.org/10.1145/1842733.1842736
[33] Oleksii Oleksenko, Bohdan Trach, Robert Krahn, Mark Silberstein, and Christof
Fetzer. 2018. Varys: Protecting SGX Enclaves from Practical Side-Channel Attacks.
In 2018 USENIX Annual Technical Conference, USENIX ATC 2018, Boston, MA,
USA, July 11-13, 2018. USENIX Association, 227–240. https://www.usenix.org/
conference/atc18/presentation/oleksenko
[34] Hany Ragab, Alyssa Milburn, Kaveh Razavi, Herbert Bos, and Cristiano Giuffrida.
2021. CrossTalk: Speculative Data Leaks Across Cores Are Real. In 42th IEEE
Symposium on Security and Privacy (S&P’21). https://download.vusec.net/papers/
crosstalk_sp21.pdf Intel Bounty Reward.
[35] Indrajit Ray, Ninghui Li, and Christopher Kruegel (Eds.). 2015. Proceedings of the
22nd ACM SIGSAC Conference on Computer and Communications Security, Denver,
CO, USA, October 12-16, 2015. ACM. http://dl.acm.org/citation.cfm?id=2810103
[36] Ling Ren, Christopher W. Fletcher, Albert Kwon, Emil Stefanov, Elaine Shi,
Marten van Dijk, and Srinivas Devadas. 2015. Constants Count: Practical Im-
provements to Oblivious RAM. In 24th USENIX Security Symposium, USENIX
Security 15, Washington, D.C., USA, August 12-14, 2015. USENIX Association, 415–
430. https://www.usenix.org/Conference/usenixsecurity15/technical-sessions/
presentation/ren-ling
[37] Ling Ren, Christopher W. Fletcher, Xiangyao Yu, Marten van Dijk, and Srinivas
Devadas. 2013.
Integrity verification for path Oblivious-RAM. In IEEE High
Performance Extreme Computing Conference, HPEC 2013, Waltham, MA, USA,
September 10-12, 2013. IEEE, 1–6. https://doi.org/10.1109/HPEC.2013.6670339
[38] Cédric Van Rompay, Refik Molva, and Melek Önen. 2017. A Leakage-Abuse
Attack Against Multi-User Searchable Encryption. PoPETs 2017, 3 (2017), 168.
https://doi.org/10.1515/popets-2017-0034
[39] Davide Sampietro and Nicholas Mainardi. 2020. ObSQRE: Oblivious Substring
Queries on Remote Enclave. https://github.com/DavideSampietro/ObSQRE
[40] Sajin Sasy, Sergey Gorbunov, and Christopher W. Fletcher. 2018. ZeroTrace
: Oblivious Memory Primitives from Intel SGX. In 25th Annual Network and
Distributed System Security Symposium, NDSS 2018, San Diego, California, USA,
February 18-21, 2018. The Internet Society. http://wp.internetsociety.org/ndss/wp-
content/uploads/sites/25/2018/02/ndss2018_02B-4_Sasy_paper.pdf
[41] Ming-Wei Shih, Sangho Lee, Taesoo Kim, and Marcus Peinado. 2017. T-
SGX: Eradicating Controlled-Channel Attacks Against Enclave Programs. In
24th Annual Network and Distributed System Security Symposium, NDSS 2017,
San Diego, California, USA, February 26 - March 1, 2017. The Internet Soci-
ety. https://www.ndss-symposium.org/ndss2017/ndss-2017-programme/t-sgx-
eradicating-controlled-channel-attacks-against-enclave-programs/
[42] Kana Shimizu, Koji Nuida, and Gunnar Rätsch. 2016. Efficient privacy-preserving
string search and an application in genomics. Bioinformatics 32, 11 (2016), 1652–
1661. https://doi.org/10.1093/bioinformatics/btw050
[43] Shweta Shinde, Zheng Leong Chua, Viswesh Narayanan, and Prateek Saxena.
2016. Preventing Page Faults from Telling Your Secrets. In Proceedings of the 11th
ACM on Asia Conference on Computer and Communications Security, AsiaCCS
2016, Xi’an, China, May 30 - June 3, 2016. ACM, 317–328. https://doi.org/10.1145/
2897845.2897885
[44] Emil Stefanov, Marten van Dijk, Elaine Shi, Christopher W. Fletcher, Ling Ren,
Xiangyao Yu, and Srinivas Devadas. 2013. Path ORAM: an extremely simple
oblivious RAM protocol. In 2013 ACM SIGSAC Conference on Computer and
Communications Security, CCS’13, Berlin, Germany, November 4-8, 2013. ACM,
299–310. https://doi.org/10.1145/2508859.2516660
[45] Larry Stefonic and Todd Ouska. 2019. The wolfSSL Embedded TLS Library.
https://www.wolfssl.com/
[46] Mikhail Strizhov, Zachary Osman, and Indrajit Ray. 2016. Substring Position
Search over Encrypted Cloud Data Supporting Efficient Multi-User Setup. Future
Internet 8, 3 (2016), 28. https://doi.org/10.3390/fi8030028
[47] The UniProt Consortium. 2018.
knowledgebase.
https://doi.org/10.1093/nar/gky092
pdf/46/5/2699/24388239/gky092.pdf
the universal protein
Nucleic Acids Research 46, 5 (02 2018), 2699–2699.
arXiv:http://oup.prod.sis.lan/nar/article-
UniProt:
[48] Bing Wang, Wei Song, Wenjing Lou, and Y. Thomas Hou. 2017. Privacy-preserving
pattern matching over encrypted genetic data in cloud computing. In 2017 IEEE
Conference on Computer Communications, INFOCOM 2017, Atlanta, GA, USA, May
1-4, 2017. IEEE, 1–9. https://doi.org/10.1109/INFOCOM.2017.8057178
[49] Xiao Wang, T.-H. Hubert Chan, and Elaine Shi. 2015. Circuit ORAM: On Tightness
of the Goldreich-Ostrovsky Lower Bound, See [35], 850–861. https://doi.org/10.
1145/2810103.2813634
[50] Xiao Shaun Wang, Kartik Nayak, Chang Liu, T.-H. Hubert Chan, Elaine Shi, Emil
Stefanov, and Yan Huang. 2014. Oblivious Data Structures. In Proceedings of
the 2014 ACM SIGSAC Conference on Computer and Communications Security,
Scottsdale, AZ, USA, November 3-7, 2014. ACM, 215–226. https://doi.org/10.1145/
2660267.2660314
[51] Yuanzhong Xu, Weidong Cui, and Marcus Peinado. 2015. Controlled-Channel
Attacks: Deterministic Side Channels for Untrusted Operating Systems. In 2015
IEEE Symposium on Security and Privacy, SP 2015, San Jose, CA, USA, May 17-21,
2015. IEEE Computer Society, 640–656. https://doi.org/10.1109/SP.2015.45
A FORMAL SECURITY ANALYSIS
We provide here the formal proofs of the security guarantees of
ObSQRE, hereby formalizing the security notion reported in Lemma 2.
In our threat model, we assume a powerful malicious adversary that
has total control of the machine where the SGX enclave is running.
Thus, thanks to the security guarantees of SGX, the attacker has
no direct access to the data stored inside the enclave and it can-
not interfere with the computation performed within the enclave;
nonetheless, it has access to every data outside the enclave and may
tamper with the computation performed outside the enclave.
Efficient Oblivious Substring Search via Architectural Support
ACSAC 2020, December 7–11, 2020, Austin, USA
Experiment out ← Realρ,A(λ):
(D, stA) ← AInit(1λ)
res0 ← ρ.Init([Di]n
i =1)
∀i ∈ {1, . . . , d}:
dis (bidi , stA) ← AAcc,i(stA, D,[bidj]i−1
TInit ,[TAcc, j]i−1
j=1)
dis resi ← ρ.Access(bidi)
out ← {[resi]d
i =0,[TAcc,i]d
i =1, TInit , stA}
j=1, LInit ,[LAcc, j]i−1
j=1,
Experiment out ← Idealρ,A,S(λ):
j=1, LInit ,[LAcc, j]i−1
j=1,
(D, stA) ← AInit(1λ)
(DS, stS) ← SInit(LInit)
res0 ← ρ.Init([DS
i ]n
i =1)
∀i ∈ {1, . . . , d}:
dis (bidi , stA) ← AAcc,i(stA, D,[bidj]i−1
TInit ,[TAcc, j]i−1
j=1)
dis (bidS
dis resi ← ρ.Access(bidS
i )
if resi (cid:44) abort: resi ← Dbidi
out ← {[resi]d
i =0,[TAcc,i]d
i =1, TInit , stA}
Figure 4: Security Experiments for DORAM protocol ρ
i , stS) ← SAcc,i(stS, LInit ,[LAcc, j]i
j=1)
Our security analysis is carried out in two main steps: first, we
define and prove the security guarantees of our DORAMs; then,
we define and prove the security guarantees of ObSQRE assuming
that a secure DORAM is employed. For the sake of conciseness, we