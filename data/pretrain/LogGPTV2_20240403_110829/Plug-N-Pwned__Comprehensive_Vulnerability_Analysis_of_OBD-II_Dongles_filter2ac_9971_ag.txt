joint efforts to secure the products in automotive IoT.
8 Related Work
Attack and defense on the CAN bus. As the core of a mod-
ern automobile, CAN bus has long been an important target
for security research. It is often regarded as a fragile pro-
tocol vulnerable to a signiﬁcant number of attacks because
of its design-level ﬂaws. As a broadcast protocol, CAN bus
does not support authentication, and thus it is not capable
of distinguishing spoofed CAN bus messages from normal
messages [36], which leads to unauthorized external access.
According to previous research, one kind of common attack is
to inject CAN bus messages through the OBD-II port which
directly connects to the internal CAN bus, which ultimately
affects the behaviour of the vehicle. Prior efforts have demon-
strated the attack on real automobiles (e.g., a Chevy Impala, a
Ford Escape, or a Toyota Prius) as well as eavesdropping the
CAN bus protocol through the OBD-II port [10,13,19,44,45].
The injection attack can also lead to serious consequences
such as engine shut down and sudden braking, which brings
severe safety concerns.
In addition to the OBD-II port, a large body of efforts
has focused on analyzing other attack surfaces of modern
vehicles including IVI system, radio system, sensors, LiDAR,
connected vehicle device, etc [44,46–53]. Most recently, with
the massive growing popularity of the IVI system, it becomes
2The complete list of CVEs is available at https://github.com/
OSUSecLab/DongleScope/blob/master/ResponsibleDisclosure.md
where we will also update the progress of our responsible disclosure.
962    29th USENIX Security Symposium
USENIX Association
a great target since it has direct access to the CAN bus. For
instance, Mazloom et al. discover the security holes of the
MirrorLink protocol in an IVI system allowing injecting ma-
licious messages to the CAN bus [54]. Mandal et al. conduct
static program analysis on the IVI Android apps and reveal
tens of vulnerabilities such as poor access control [55]. Miller
et al. uncover a software vulnerability on the Uconnect sys-
tem on a Jeep Cherokee that allows remote attack via cellular
network [44].
While prior efforts have revealed novel vulnerabilities and
demonstrated attacks on automobiles, most of them are ad-
hoc and the vulnerability analysis is not comprehensive. In
addition, most of the attacks require direct physical access to
the vehicle [13, 19], which narrows the ﬂexibility of attacks.
Compared to these works, we are the ﬁrst to conduct a com-
prehensive vulnerability study on a large number of OBD-II
dongles on the market, and our uncovered vulnerabilities can
lead to wireless attacks on nearby vehicles.
In order to counter attacks on the CAN bus, novel defenses
have also been proposed overtime. It is non-trivial to make
harmful impacts to the vehicle by directly injecting CAN bus
messages since there are complicated defensive approaches
deployed by the car manufacturers. One common defense
countering the CAN bus message injection attack is conﬂict
detection. As the ECUs are always broadcasting CAN bus
messages at a ﬁxed frequency, it is possible to detect anoma-
lous messages from malicious senders [19]. Consequently,
many attacks become impractical in reality, such as directly
injecting CAN bus message to operate the vehicle. In addition,
there are also other defensive approaches such as intrusion
detection [56–58] and data authentication [36–40].
Mobile app based vulnerability discovery. With the mas-
sive growth of the mobile app market today, mobile app anal-
ysis has been widely used to uncover various vulnerabilities.
One particular analysis is the data ﬂow analysis that has been
used to track the data ﬂow, trace the data of interest and iden-
tify vulnerabilities in the phone (e.g., [59–63], remote servers
(e.g., vulnerable authentication [64], authorization [65], and
cloud leakage [66]). Inspired by these efforts, DONGLESCOPE
adopts static analysis to extract predeﬁned messages from the
companion apps to study the security of OBD-II dongles.
9 Conclusion
In this paper, we perform the ﬁrst comprehensive security
analysis on 77 wireless OBD-II dongles available on Amazon
in the US in February 2019. To systematically perform the
analysis, we design and implement an automated analysis tool
DONGLESCOPE, and use it to identify 5 different types of
vulnerabilities, with 4 being newly discovered. Our results
show that each of these 77 dongles exposes at least two types
of these vulnerabilities, which indicates a widespread vulnera-
bility exposure among wireless OBD-II dongles on the market
today. To demonstrate the severity, we construct 4 classes of
concrete attacks that can cause privacy leakage, property theft,
and safety threat. We also discuss the root causes and feasible
countermeasures, and have performed responsible disclosure.
Finally, as IoT devices are increasingly used in safety-
critical domains such as vehicles, we expect
that our
domain-speciﬁc ﬁndings and their security/safety implica-
tions can send a strong and timely message to start developing
and deploying principled security designs in these highly
critical application domains such as automotive IoT.
Acknowledgment
We thank our shepherd Nils Ole Tippenhauer as well as the
anonymous reviewers for their insightful comments. This re-
search was supported in part by National Science Foundation
(NSF) Awards 1834215 and 1850533. Any opinions, ﬁndings,
conclusions, or recommendations expressed are those of the
authors and not necessarily of the NSF.
References
[1] “Obd-ii - on-board diagnostic system,” http://www.obdii.com/.
[2] D. S. Eisinger and P. Wathern, “Policy evolution and clean
air: The case of us motor vehicle inspection and maintenance,”
Transportation Research Part D: Transport and Environment,
vol. 13, no. 6, pp. 359–368, 2008.
[3] A. Kovelman, “A Remote Attack on the Bosch Drivelog Con-
nector Dongle,” https://argus-sec.com/remote-attack-bosch-
drivelog-connector-dongle, 2017.
[4] M. Antonakakis, T. April, M. Bailey, M. Bernhard,
E. Bursztein, J. Cochran, Z. Durumeric, J. A. Halder-
man, L. Invernizzi, M. Kallitsis et al., “Understanding the
mirai botnet,” in 26th USENIX Security Symposium (USENIX
Security 17), 2017, pp. 1093–1110.
[5] W. He, M. Golla, R. Padhi, J. Ofek, M. Dürmuth, E. Fernandes,
and B. Ur, “Rethinking access control and authentication for
the home internet of things (iot),” in 27th USENIX Security
Symposium (USENIX Security 18), 2018, pp. 255–272.
[6] E. Fernandes, J. Jung, and A. Prakash, “Security analysis of
emerging smart home applications,” in 2016 IEEE Symposium
on Security and Privacy (SP).
IEEE, 2016, pp. 636–654.
[7] Y. J. Jia, Q. A. Chen, S. Wang, A. Rahmati, E. Fernandes, Z. M.
Mao, and A. Prakash, “ContexIoT: Towards Providing Contex-
tual Integrity to Appiﬁed IoT Platforms,” in NDSS, 2017.
[8] J. Erickson, Q. A. Chen, X. Yu, E. Lin, R. Levy, and Z. M. Mao,
“No One In The Middle: Enabling Network Access Control Via
Transparent Attribution,” in ACM AsiaCCS, 2018.
[9] F. Dang, Z. Li, Y. Liu, E. Zhai, Q. A. Chen, T. Xu, Y. Chen,
and J. Yang, “Understanding Fileless Attacks on Linux-based
IoT Devices with HoneyCloud,” in ACM MobiSys, 2019.
USENIX Association
29th USENIX Security Symposium    963
[10] K. Koscher, A. Czeskis, F. Roesner, S. Patel, T. Kohno,
S. Checkoway, D. McCoy, B. Kantor, D. Anderson,
H. Shacham et al., “Experimental security analysis of a
modern automobile,” in 2010 IEEE Symposium on Security
and Privacy.
IEEE, 2010, pp. 447–462.
[11] M. Di Natale, H. Zeng, P. Giusto, and A. Ghosal, Understand-
ing and using the controller area network communication pro-
tocol: theory and practice.
Springer Science & Business
Media, 2012.
[12] M. Ruta, F. Scioscia, F. Gramegna, and E. Di Sciascio, “A mo-
bile knowledge-based system for on-board diagnostics and car
driving assistance,” in UBICOMM 2010, The Fourth Interna-
tional Conference on Mobile Ubiquitous Computing, Systems,
Services and Technologies. Citeseer, 2010, pp. 91–96.
[13] C. Miller and C. Valasek, “Adventures in automotive networks
and control units,” Def Con, vol. 21, pp. 260–264, 2013.
[14] “OBD-II PIDs,” http://obdcon.sourceforge.net/2010/06/obd-ii-
pids/.
[15] “Top-5 best obd2 scanners worth buying in 2019 |
buyer’s guide,” https://gadgets-reviews.com/review/735-top-
best-obd2-scanner.html.
[16] “Parani-ud100 bluetooth 4.0 class1 usb adapter,” http://
www.senanetworks.com/ud100-g03.html, 2019.
[17] C. Zuo, H. Wen, Z. Lin, and Y. Zhang, “Automatic ﬁngerprint-
ing of vulnerable ble iot devices with static uuids from mobile
apps,” in Proceedings of the 2019 ACM SIGSAC Conference
on Computer and Communications Security. ACM, 2019, pp.
1469–1483.
[18] R. Malekian, N. R. Moloisane, L. Nair, B. T. Maharaj, and
U. A. Chude-Okonkwo, “Design and implementation of a wire-
less obd ii ﬂeet management system,” IEEE Sensors Journal,
vol. 17, no. 4, pp. 1154–1164, 2016.
[19] C. Miller and C. Valasek, “Can message injection,” OG Dyna-
mite Edition, 2016.
[20] “Elm327dsk,” https://www.elmelectronics.com/wp-content/
uploads/2017/01/ELM327DS.pdf.
[21] J. Chen, W. Diao, Q. Zhao, C. Zuo, Z. Lin, X. Wang, W. C. Lau,
M. Sun, R. Yang, and K. Zhang, “Iotfuzzer: Discovering mem-
ory corruptions in iot through app-based fuzzing.” in NDSS,
2018.
[22] S. Demetriou, N. Zhang, Y. Lee, X. Wang, C. A. Gunter,
X. Zhou, and M. Grace, “Hanguard: Sdn-driven protection
of smart home wiﬁ devices from malicious mobile apps,” in
Proceedings of the 10th ACM Conference on Security and
Privacy in Wireless and Mobile Networks. ACM, 2017, pp.
122–133.
[23] K. Kuchera, “How to Hack a Car - A Quick Crash
Course,” https://www.freecodecamp.org/news/hacking-cars-
a-guide-tutorial-on-how-to-hack-a-car-5eafcfbbb7ec, 2017.
- A Quick Crash Course,”
[24] “How to Hack a Car
https://medium.freecodecamp.org/hacking-cars-a-guide-
tutorial-on-how-to-hack-a-car-5eafcfbbb7ec.
[25] Bisdikian and Chatschik, “An overview of the bluetooth wire-
less technology,” IEEE Commun Mag, vol. 39, no. 12, pp. 86–
94, 2001.
[26] C. Gomez, J. Oller, and J. Paradells, “Overview and evaluation
of bluetooth low energy: An emerging low-power wireless
technology,” Sensors, vol. 12, no. 9, pp. 11 734–11 753, 2012.
https:
[27] “socket
networking
//docs.python.org/3/library/socket.html.
interface,”
-
low-level
[28] “Pybluez,” https://github.com/pybluez/pybluez.
[29] “Pyble,” https://github.com/jesstess/PyBLE.
[30] M. Weiser, “Program slicing,” in Proceedings of the 5th inter-
IEEE Press,
national conference on Software engineering.
1981, pp. 439–449.
[31] “Sable/soot: Soot - a java optimization framework,” https://
github.com/Sable/soot.
[32] S.-H. Chen, J.-S. Pan, and K. Lu, “Driving behavior analysis
based on vehicle obd information and adaboost algorithms,” in
Proceedings of the International MultiConference of Engineers
and Computer Scientists, vol. 1, 2015, pp. 18–20.
[33] M. Enev, A. Takakuwa, K. Koscher, and T. Kohno, “Automo-
bile driver ﬁngerprinting,” Proceedings on Privacy Enhancing
Technologies, vol. 2016, no. 1, pp. 34–50, 2016.
[34] M. Sutton, A. Greene, and P. Amini, Fuzzing: brute force vul-
nerability discovery. Pearson Education, 2007.
[35] H. Lee, K. Choi, K. Chung, J. Kim, and K. Yim, “Fuzzing
can packets into automobiles,” in 2015 IEEE 29th Interna-
tional Conference on Advanced Information Networking and
Applications.
IEEE, 2015, pp. 817–821.
[36] A. Van Herrewege, D. Singelee, and I. Verbauwhede, “Canauth-
a simple, backward compatible broadcast authentication proto-
col for can bus,” in ECRYPT Workshop on Lightweight Cryp-
tography, vol. 2011, 2011.
[37] D. K. Nilsson, U. E. Larson, and E. Jonsson, “Efﬁcient in-
vehicle delayed data authentication based on compound mes-
sage authentication codes,” in 2008 IEEE 68th Vehicular Tech-
nology Conference.
IEEE, 2008, pp. 1–5.
[38] B. Groza, S. Murvay, A. Van Herrewege, and I. Verbauwhede,
“Libra-can: a lightweight broadcast authentication protocol
for controller area networks,” in International Conference on
Cryptology and Network Security. Springer, 2012, pp. 185–
200.
[39] R. Kurachi, Y. Matsubara, H. Takada, N. Adachi, Y. Miyashita,
and S. Horihata, “Cacan-centralized authentication system in
can (controller area network),” in 14th Int. Conf. on Embedded
Security in Cars (ESCAR 2014), 2014.
[40] A.-I. Radu and F. D. Garcia, “Leia: A lightweight authentica-
tion protocol for can,” in European Symposium on Research in
Computer Security. Springer, 2016, pp. 283–300.
[41] M. Bozdal, M. Samie, and I. Jennions, “A survey on can bus
protocol: Attacks, challenges, and potential solutions,” in 2018
International Conference on Computing, Electronics & Com-
munications Engineering (iCCECE).
IEEE, 2018, pp. 201–
205.
[42] “Fca
https://diag.net/msg/
gateway module,”
secure
m1fsoznwl3nndqti9pxq9k4nz0.
[43] “openxc-android,” https://github.com/openxc/openxc-android,
2019.
964    29th USENIX Security Symposium
USENIX Association
[44] C. Miller and C. Valasek, “Remote exploitation of an unaltered
passenger vehicle,” Black Hat USA, vol. 2015, p. 91, 2015.
[45] I. Foster, A. Prudhomme, K. Koscher, and S. Savage, “Fast
and vulnerable: A story of telematic failures,” in 9th USENIX
Workshop on Offensive Technologies (WOOT 15), 2015.
[46] C. Miller and C. Valasek, “A survey of remote automotive
attack surfaces,” black hat USA, vol. 2014, p. 94, 2014.
[47] S. Checkoway, D. McCoy, B. Kantor, D. Anderson,
H. Shacham, S. Savage, K. Koscher, A. Czeskis, F. Roesner,
T. Kohno et al., “Comprehensive experimental analyses of
automotive attack surfaces.” in USENIX Security Symposium,
vol. 4. San Francisco, 2011, pp. 447–462.
[48] J. Petit and S. E. Shladover, “Potential cyberattacks on auto-
mated vehicles,” IEEE Transactions on Intelligent Transporta-
tion Systems, vol. 16, no. 2, pp. 546–556, 2014.
[49] Y. Cao, C. Xiao, B. Cyr, Y. Zhou, W. Park, S. Rampazzi, Q. A.
Chen, K. Fu, and Z. M. Mao, “Adversarial Sensor Attack on
LiDAR-based Perception in Autonomous Driving,” in ACM
CCS, 2019.
[50] Q. A. Chen, Y. Yin, Y. Feng, Z. M. Mao, and H. X. Liu, “Ex-
posing Congestion Attack on Emerging Connected Vehicle
based Trafﬁc Signal Control,” in NDSS, 2018.
[51] Y. Feng, S. Huang, Q. A. Chen, H. X. Liu, and Z. M. Mao, “Vul-
nerability of Trafﬁc Control System Under Cyber-Attacks Us-
ing Falsiﬁed Data,” in Transportation Research Board (TRB),
2018.
[52] Y. Tu, Z. Lin, I. Lee, and X. Hei, “Injected and delivered: fab-
ricating implicit control over actuation systems by spooﬁng in-
ertial sensors,” in 27th USENIX Security Symposium (USENIX
Security 18), 2018, pp. 1545–1562.
[53] Y. Feng, S. Huang, Q. A. Chen, H. X. Liu, and Z. M. Mao,
“Vulnerability of Trafﬁc Control System Under Cyberattacks
with Falsiﬁed Data,” Transportation Research Record (TRR),
vol. 2672, no. 1, pp. 1–11, 2018.
[54] S. Mazloom, M. Rezaeirad, A. Hunter, and D. McCoy, “A se-
curity analysis of an in-vehicle infotainment and app platform,”
in 10th USENIX Workshop on Offensive Technologies (WOOT
16), 2016.
[55] A. K. Mandal, A. Cortesi, P. Ferrara, F. Panarotto, and F. Spoto,
“Vulnerability analysis of android auto infotainment apps,” in
Proceedings of the 15th ACM International Conference on
Computing Frontiers. ACM, 2018, pp. 183–190.
[57] M. Müter, A. Groll, and F. C. Freiling, “A structured approach
to anomaly detection for in-vehicle networks,” in 2010 Sixth In-
ternational Conference on Information Assurance and Security.
IEEE, 2010, pp. 92–98.
[58] W. Wong, S. Huang, Y. Feng, Q. A. Chen, H. X. Liu, and
Z. M. Mao, “Trajectory-Based Hierarchical Defense Model
to Detect Cyber-Attacks on Transportation Infrastructure,” in
Transportation Research Board (TRB), 2019.
[59] W. Enck, P. Gilbert, S. Han, V. Tendulkar, B.-G. Chun, L. P.
Cox, J. Jung, P. McDaniel, and A. N. Sheth, “Taintdroid: An
information-ﬂow tracking system for realtime privacy monitor-
ing on smartphones,” ACM Transaction on Computer Systems
(TOCS), 2014.
[60] S. Arzt, S. Rasthofer, C. Fritz, E. Bodden, A. Bartel, J. Klein,
Y. Le Traon, D. Octeau, and P. McDaniel, “Flowdroid: Precise
context, ﬂow, ﬁeld, object-sensitive and lifecycle-aware taint
analysis for android apps,” in Acm Sigplan Notices, vol. 49,
no. 6. ACM, 2014, pp. 259–269.
[61] Q. A. Chen, Z. Qian, Y. J. Jia, Y. Shao, and Z. M. Mao, “Static
Detection of Packet Injection Vulnerabilities: A Case for Iden-
tifying Attacker-Controlled Implicit Information Leaks,” in
ACM CCS, 2015.
[62] Y. Shao, Q. A. Chen, Z. M. Mao, J. Ott, and Z. Qian, “Kratos:
Discovering Inconsistent Security Policy Enforcement in the
Android Framework,” in NDSS, 2016.
[63] Y. J. Jia, Q. A. Chen, Y. Lin, C. Kong, and Z. M. Mao, “Open
Doors for Bob and Mallory: Open Port Usage in Android Apps
and Security Implications,” in IEEE Euro S&P, 2017.
[64] C. Zuo, W. Wang, R. Wang, and Z. Lin, “Automatic forgery
of cryptographically consistent messages to identify security
vulnerabilities in mobile services,” in Proceedings of the 23rd
Annual Network and Distributed System Security Symposium
(NDSS’16), San Diego, CA, February 2016.
[65] C. Zuo, Q. Zhao, and Z. Lin, “Authscope: Towards automatic
discovery of vulnerable authorizations in online services,” in
Proceedings of the 24th ACM Conference on Computer and
Communications Security (CCS’17), Dallas, TX, November
2017.
[56] K.-T. Cho and K. G. Shin, “Fingerprinting Electronic Control
Units for Vehicle Intrusion Detection,” in USENIX Security
Symposium, 2016.
[66] C. Zuo, Z. Lin, and Y. Zhang, “Why does your data leak?
uncovering the data leakage in cloud from mobile apps,” in
Proc. IEEE Symposium on Security and Privacy, 2019.
USENIX Association
29th USENIX Security Symposium    965