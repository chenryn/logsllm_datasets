keep_truncated=true
deliver_incomplete_final=true
deliver_interval="5s"
[3_file_decoder]
type="RizhiyiDecoder"
appname="rizhiyi_app"
tag="rizhiyi_tag"
charset="gbk"
[3_file_input]
type="LogstreamerInput"
log_directory="/Volumes/Transcend/"
file_match='esbserver\.log'
decoder="3_file_decoder"
splitter="3_file_splitter"
oldest_duration="720h"
[TransactionFilter]
message_matcher='Type!="transaction"'
# 通过此正则判断新事务是否开始，是，则将之前同id下的日志合并成一个event发出
start_contains='压力测试标识，商户限流!'
# 通过此正则判断事务是否结束，如果结束，则将之前内容合并成一个Event发出
end_contains='【end】'
# 通过此正则抽取每行日志中的id(括号中的被抽去成id)，id可以是任意字符串
# 该id可以理解为可以唯一表示线程的id，
# 注意:这里提取正则用的括号只能有一个
id_match='\[WebContainer:(\d+)\]'
# 如果缓存中日志超过timeout_in_sec秒还是没找到行尾或新行头，则将作为一个Event发
出 timeout_in_sec=120
#1.8.16.0后引入该配置，是否丢弃过大(超过max_message_size)的事务日志 ,不填将使用默
认值false
drop_too_large_msg=false
###Output
[RzyFramingSplitter]
[RzyProtobufEncoder]
token="81b04117372b40809c8757dec908aac0"
charset=""
1-16
日志学院
auto_conv=false
[RzyHttpOutput]#注意此处message_matcher的修改，只接收
TransactionFilter处理的日志，避免日志发送两份
message_matcher='Type=="transaction"'
address="http://192.168.1.78:5180/proto/?compressed=false"
use_buffering=true
encoder="RzyProtobufEncoder"
rate_limit=0
[RzyHttpOutput.Buffering]
max_file_size=268435456
max_buffer_size=1073741824
full_action="block"
cursor_update_count=1000
以上面示例的事务日志为例，其Agent配置文件部分展示如下：
###Other
[hekad]
base_dir='/data/rizhiyi/cache/hekad'
max_message_size=65536
[internal_file_splitter]
type='RegexSplitter'
delimiter='\n(\d|\[)'
delimiter_eol=false
keep_truncated=true
deliver_incomplete_final=true
deliver_interval='5s'
[internal_file_decoder]
type='PathDecoder'
[internal_file_input]
type='LogstreamerInput'
log_directory='/data/rizhiyi/logs'
file_match='(?P[^/]+)/(?P.*)\.(?Plog|stdout|stderr)'
differentiator=['ModuleName','_','FileName','_','Suffix','..rizhiyi_internal..padding']
oldest_duration='24h'
exclude=''
splitter='internal_file_splitter'
decoder='internal_file_decoder'
disabled=true
[3_file_splitter]
type="RegexSplitter"
delimiter='\n(\d)'
delimiter_eol=false
keep_truncated=true
deliver_incomplete_final=true
deliver_interval="5s"
[3_file_decoder]
1-17
日志学院
type="RizhiyiDecoder"
appname="rizhiyi_app"
tag="rizhiyi_tag"
charset="gbk"
[3_file_input]
type="LogstreamerInput"
log_directory="/Volumes/Transcend/"
file_match='esbserver\.log'
decoder="3_file_decoder"
splitter="3_file_splitter"
oldest_duration="720h"
[TransactionFilter]
message_matcher='Type!="transaction"'
# 通过此正则判断是否新事务开始，是，则将之前同id下的日志合并成一个event发出
start_contains='[开始交易 NNBS888888:支付业务清算（bccp通讯）]'
# 通过此正则判断某个事务是否结束，如果结束，则将之前内容合并成一个Event发出
end_contains='[结束交易 NNBS888888]'
# 通过此正则抽取每行日志中的id(括号中的被抽去成id)，id可以是任意字符串
# 该id可以理解为可以唯一表示线程的id，
# 注意:这里提取正则用的括号只能有一个
id_match='\]\[(\d+)\]'
# 如果缓存中日志超过timeout_in_sec秒还是没找到行尾或新行头，则将作为一个Event发
出 timeout_in_sec=120
#1.8.16.0后引入该配置，是否丢弃过大(超过max_message_size)的事务日志 ,不填将使用默
认值false
drop_too_large_msg=false
###Output
[RzyFramingSplitter]
[RzyProtobufEncoder]
token="86bb700c6f5e48b094bbc73dd8f46a6a"
charset=""
auto_conv=false
remove_null_char=false
[RzyHttpOutput]
message_matcher='Type=="transaction"'
address="http://192.168.1.101:5180/proto/?compressed=false"
use_buffering=true
encoder="RzyProtobufEncoder"
rate_limit=0
worker=0
[RzyHttpOutput.Buffering]
max_file_size=268435456
max_buffer_size=1073741824
full_action="block"
cursor_update_count=1000
配置Agent文件采集事务日志后，可在日志易系统中查询到如下合并效果：
1-18
日志学院
数据压缩
Heka支持压缩文件采集。
1.7.25.0后的Heka支持gzip格式和zip格式文件的采集，配置方法和采集普通文件一致。
（注：zip格式只支持每个zip中仅含有一个文件的情况)
Heka配置文件中###Output配置段里的address里的compressed=的值控制是否压缩上报，
Hekad采用snappy算法压缩，压缩比约为14:1。
Heka配置文件中###Output段下的“[RzyHttpOutput]”的rate_limit控制上报速度（单位:字节)，
0为不限速。
###Output
[RzyFramingSplitter]
[RzyProtobufEncoder]
token="81b04117372b40809c8757dec908aac0"
charset=""
auto_conv=false
[RzyHttpOutput]
message_matcher="TRUE"
#compressed=false为不压缩，compressed=true为压缩上传
address="http://192.168.1.78:5180/proto/?compressed=true"
use_buffering=true
encoder="RzyProtobufEncoder"
rate_limit=0
[RzyHttpOutput.Buffering]
max_file_size=268435456
1-19
日志学院
max_buffer_size=1073741824
full_action="block"
cursor_update_count=1000
当客户的网络带宽有限制的情况下，可以开启数据压缩。压缩会减少带宽，但需注意压缩会
增加日志易采集代理机器和日志易服务器的资源占用。
数据加密
采集Agent支持使用SSL方式加密发送日志，只需在采集Agent配置处配置https方式发送
日志即可。
必须的准备工作：
 Collector升级到v1.10.4.0版本及以上
 Heka升级到v1.10.0.26版本以上
 RizhiyiAgent升级到v1.10.0.9版本以上
启用https发送日志配置步骤如下：
1、进入RizhiyiManager前台页面，点击服务->Collector，选中配置Tab页：
修改配置项collector0.sources，增加sourceHttps，新的https服务会启动在5190端口上。
注：https端口默认监听在5190，因此需要开通采集Agent到Collector5190端口网络策略。
2、将Collector 端口变化通过心跳同步给所有Heka/RizhiyiAgent。
进入RizhiyiManager前台页面，点击操作->Mysql工具：
1-20
日志学院
Port配成3306， DB配成rizhiyi_system, 执行SQL"Update CollectorInfoSetport=5190"
3、等待2分钟左右（让采集Agent同步到最新的Collector端口)，在shell下运行switch_ssl
工具，该工具会批量将集群所有支持https的agent改为采用https发送日志。
工具使用方法如下：
./switch_ssl-dsn='root:rizhiyi&2014@tcp(localhost:3306)/rizhiyi_system'-use_ssl=true-token=
实际token
 dsn: 日志易数据库的dsn, 格式如
'[username[:password]@][protocol[(address)]]/dbname'
 use_ssl:true-开启ssl发送， false-关闭ssl发送
如果单独对某台Heka/RizhiyiAgent配置开启ssl，可按4，5步骤进行配置修改。
4、如果是Heka，进入数据采集->Agent管理，选中需要修改的Heka，点击高级配置，修
改address的配置值，将http改为https：
5、如果是RizhiyiAgent，进入数据采集->Agent管理，选中需要修改的RizhiyiAgent，点击
高级配置, 修改图中红框所示配置项：
1-21
日志学院
Agent 资源控制
日志易采集Agent安装在客户环境内，为确保日志采集不会影响到客户主机正常工作，其资
源使用默认已有许多限制，如Agent默认只占用客户单核CPU，Agent日志+缓存默认仅占
用磁盘1.4G。
但仍可通过更改Agent配置文件相关内容对Agent使用的资源进行更精细的控制，具体如
下：
 CPU
可以通过maxprocs配置项控制最多使用的核数，默认为1，即最多使用单核的100%
 Memory
1、Heka使用对象池管理Message，对象池大小通过pool_size配置，默认值为100，单个
Message的上限通过max_message_size配置，默认值为64KB.pool_size暂不能自定义修改，
max_message_size在“###Other”部分进行配置。
2、大使用内存约等于 max_message_size*(pool_size*4 ＋ 同时监听文件数*2)，其中
 max_message_size*pool_size*2 是固定对象池的开销，和实际消息长度无关，就
是至少会申请这么大内存
 实际单行消息平均长度 *pool_size*2 的开销也用来存放消息，这个和实际消息长
度有关，如果配置没用filter，则*2改为*1
 同时监听文件数 * 对应文件单行最大长度 *2 用作读取文件的缓存开销，这个和
单个文件实际最长单行长度有关，最长单行长度上限为max_message_size
1-22
日志学院
 Disk
1、hekad和hekad-daemon的自身日志，有滚动机制，最多只会在本地磁盘写400MB的日
志文件
2、Ouput的缓存文件，通过max_buffer_size配置，默认值1GB
 Network
可以通过rate_limit配置项对出流量进行限速
 DiskIO
磁盘IO跟日志源的增速有关，可以通过配置发送速度间接限制读取速度：