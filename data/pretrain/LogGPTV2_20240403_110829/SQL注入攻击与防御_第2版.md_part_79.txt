·应该根据承载的是静态载荷还是动态载荷对攻击进行分类。
·根据攻击载荷确定如何从安全事件中恢复。
11.从SQL注入攻击中恢复：
·将数据库恢复到已知的良好状态。
·检验数据库服务器的配置。
·识别并修复SQL注入漏洞。
·在线恢复系统并恢复Web服务。
10.6常见问题解答
问题：如果某个没有接受过专业取证训练，或者没有获得授权的人去实施调查取证工作，
将会带来哪些问题？
解答：任何未经授权的人去实施调查取证，无论他是否受过专业的取证训练，都必须承担
法律后果。另外这样做还可能导致证据失效，从这些证据中发现的结果可能不会被
384
---
## Page 399
第10章确认并从SQL注入攻击中恢复
法庭采信，或者在公司的诉讼过程中不能采用。
问题：什么是SQL注入蜡虫的多态性？
解答：SQL注入端虫的多态性指的是在传染时螨虫会发生变异和改变。这些端虫是专门为
动态改变面设计的，目的是避开基于特征的检测机制。在本书写作之时，还没有著
名的多态SQL注入螺虫，但是在不远的将来，这种具有多态性的螺虫就会浮出水面。
问题：在执行调查取证时，必须使用本书介绍过的数据库客户端吗？
解答：不必，可以使用从可靠来源获得的任何可信的数据库客户端，只要当连接到数据库
服务器和查询RDBMS时，可以将操作记录在日志中即可。另外，客户端还需要具
有将标准输出（stdout）重定向到某个文件以保存查询结果的功能。
问题：可以使用RDBMS查询编辑器来实施调查取证，而不使用数据库客户端吗？
解答：不建议使用运行在受损害系统上的应用程序来实施调查取证工作。在遭到攻击时，
RDBMS或操作系统文件有可能已经被算改，这可能会使查询结果产生扭曲。应该
使用运行在可信计算机上的可信客户端连接到受损害的数据库服务器并执行调查
取证工作。
问题：相同的查询能否在不同的 RDBMS产品中正常工作？
解答：不能，绝大多数主流RDBMS产品都支持基本的SQL语法，但每一种RDBMS产
品都具有自己独特的语句和函数。基础的SQL查询可以跨多个RDBMS平台工作。
但是，要求收集数据库痕迹的查询，都需要使用特定的数据库视图和函数，这些视
图和函数通常都不是跨平台的。
385
---
## Page 401
第11章参考资料
本章目标
·SQL入门
·SQL注入快速参考
·避开输入验证过滤器
·排查SQL注入攻击
·其他平台上的SQL注入
紫系·
11.1概述
本章包含很多主题，它们可以作为帮助理解SQL注入的参考资料，其覆盖范围包括从对
基本SQL的简单介绍到帮助理解SQL在正常环境下的工作原理，因而将有助于读者按照正确
的语法来重写SQL语句。
此外，本章还提供了一系列的SQL注入备忘单（chcat shcet)，它们能帮助读者快速跳转到
感兴趣的内容，也可能仅仅是为读者提示SQL注入的工作原理或语法内容。我们还提供了一
张故障检测提示表，它能帮助读者解决在利用SQL注入漏洞时经常碰见的问题，最后介绍了
一些与本书未介绍的数据库相关的信息（到目前为止，我们在例子中使用了Microsof SQL
Server、Oracle、PostgreSQL和MySQL，它们在现实生活中被广为接受）。请查阅11.6节“其
11.2SQL入门
SQL最开始是由IBM在20世纪70年代早期开发出来的，直到1986年才被美国国家标准
协会（American National Standards Institute，ANSI)规范化。SQL最初被设计成一种数据查询和
操作语言，相比现在功能丰富的SQL语言，它当时只有有限的功能。本节简要概述一下常用
的SQL查询、运算符及其特征。如果您已经熟悉SQL，可以跳过本节。
每种主流数据库供应商均扩展了SQL标准以便针对自己的产品引入新的特征。为实现我
们的目标，我们使用 ISO(Intemational Organization for Standardization，国际标准化组织)定义的
SQL标准，该标准对大多数数据库平台都是有效的。必要时我们会突出该标准与平台相关的
变化。
---
## Page 402
SQL注入攻击与防御（第2版）
SQL查询
SQL查询由一条或多条SQL语句构成，这些语句是数据库服务器能够有效执行的指令。
操作数据库或执行SQL注入时最经常碰到的SQL语句是SELECT、INSERT、UPDATE、
CREATE、UNION SELECT 和 DELETE。
用于读取、删除或更新表数据的SQL查询通常包含有条件子句，以筛选表中特定的数据行。
条件子句从WHERE关键字开始，后跟筛选条件。需要评测多个条件时可使用OR和AND运
算符。
为实现本书的目的，除非专门指定，否则所有示例查询均面向tblUsers表。表11-1列出了
tblUsers 表的结构。
表11-1SQL表示例tblUsers
ID
usemame
password
priv
1
gary
leedsutd1992
0
2
sarah
3
michael
w00dhead111
4
admin
letmein
1. SELECT 语句
SELECT语句主要用于从数据库检索数据并将检索结果返回给应用程序或用户。作为基本
的例子，下列 SQL语句将返回tblUsers表中的所有数据：
SELECT · FROM tb1Users
星号（*）是个通配符，它指示数据库服务器返回所有数据。如果只需要检索特定的列，可用
所需的列名替换通配符。接下来的例子会返回 tblUsers表中所有行的usermame列：
SELECT username FROM tblUsers
要想根据条件从表中返回特定的行，可以添加WHERE子句并跟上所需的条件。例如，下
列 SQL查询会返回所有usemame 列的值为 admin 且 password 列的值为letmein 的行：
MicrosoftSQLServer还支持使用SELECT语句从一张表中读取数据并将读取结果插入到
另一张表中。在下面的例子中，tblUsers 表中的所有数据被复制到了hackerTable 表中：
SELECT · INTO hackerTable FROM tb1Users
2.UNION运算符
可以使用UNION运算符来合并两条或多条SELECT语句的结果集。参与UNION运算
的所有SELECT语句必须返回相同的列数，并且对应列的数据类型必须相互兼容。在下面的
例子中，SQL查询将分别来自 tblUsers 表和 tblAdmins 表的username 列和password 列合并到
388
---
## Page 403
第11章参考资料
一起：
SELECT username, passvord FROM tblUsers UNION SELECT username, passvord
FROM tb1Admin.s
UNION SELECT会自动比较每条SELECT语句返回的值并只返回不重复的值。要想允许
重复值并阻止数据库比较返回的数据，可使用UNIONALLSELECT：
SELECT username, passvord FROM tblUsers UNION ALL SELECT username,
password FROM tb1Admins
3.INSERT语句
读者可能已经猜到，INSERT语句用于向表中插入数据。可以按照两种不同的方式构造
INSERT语句来实现同一目的。接下来的 INSERT语句将值5、john、smith 和0插入到tbIUsers
表中：
INSERT INTO tb1Users VALUES (5, 'john′, *smith′, 0)
本例中，插入到表中的数据的排列顺序与表中每一列的顺序相一致。这种方法最明显的向
题是：如果表的结构发生了变化（例如，添加或删除了列），那么数据会被写入到错误列。为通
免潜在的有害错误，INSERT语句可以接收跟随在表名之后且由逗号分隔开的目标列列表：
INSERT INTO tb1Users (id, username, password, priv) VALUES (5, *john′, *smith', 0)
本例中列出了所有目标列，这样可以确保将提供的数据插入到正确的列。即使表结构发生
了变化，INSERT语句也仍然面向的是正确的列。
4. UPDATE 语旬
UPDATE语句用于修改数据库表中已经存在的数据。接下来的UPDATE语句将所有usemame
值为 sarah 的记录的 priv列的值修改为 0:
一定要注意，所有的UPDATE语句都应包含一条WHERE子句，以指出应该更新哪些行。
如果省略了WHERE子句，那么所有行都会受到影响。
5. DELETE 语句
DELETE语句用于从表中删除行。接下米的 DELETE语句会删除 tbIUsers 表中所有usemame
值为 admin 的行：
一定要注意，所有的DELETE语句都应包含一条WHERE子句，以指出应该删除哪些行。
如果省略了WHERE子句，那么所有行都会被删除。
389
---
## Page 404
SQL注入攻击与防御（第2版）
秘密手记
危险的SQL注入
检测SQL注入漏洞最常见的一种方法是插入条件子句并观察应用行为中的差异。
例如，向SELECT语句的WHERE子句中注入OR1=I语句会极大地修改该查询返回的
结果数：请思考下列3条SQL语句.第1条语句代表原始查询，第2条和第3条则通
过SQL.注入进行了修改：
SELECT story FROM nevs WHERE id=19
SELECT story FROM news WHERE id=19 OR 1=1
SELECT story FROM nevs WHERE id=19 OR 1=2
执行时，第1条语句返园news表中id值为19的story列.经过修改的第2条查询
返回数据库中所有的story列，因为1始终等于1.第3条查询返回与第1条查询相同
的结果，因为1不等于2.
从攻击者的角度来看，易受攻击的应用会针对修改后的查询作出不同的响应，这表
明存在SQL注入缺陷，到目前为止，一切都还算顺利。遗德的是，如来易受攻击的查
询恰好是UPDATE或DELETE语句，那么该方法会产生毁灭性的影响，请思考一种易
受SQL注入攻击的口令重置特性。正常操作时，口令重置组件会接收c-mail地址作为
输入开执行下列查询以重置用户口令：
UPDATE tblUsers SET password-*letmein'wHERE
emailaddress='PI:EMAIL'
考虑向e-mail地址字段注入or1=1-字符事，SQL语句现在变成：
UPDATE tblUsers SET password-'letmein'wHERE emailaddress='
--=11O
由于有效条件为WHERE1-1.因而修改后的语句现在将更新表中所有记录的
password字段.
从备份中恢复数据吧！如果现实中真的出现这种情况，那就只能通知客户端并接受
责罚了.
为防止这种情况发生，首先应尽力去理解正在注入的查询。问一下自己：“这会是
一条UPDATE或DELETE语句么？”例如，口令重置和取消订阅组件很可能会操纵或
删除数据，因此操作时应格外小心。
OWASPZedAttackProxy及其他自动SQL注入工具经常会注入OR1=1这科的语
句，因此使用时它们能产生同样的影响
执行评估之前请确保备份了所有数据！
6.DROP语句
DROP语句用于删除数据库对象，比如表、视图、索引，某些情况下甚至可以是数据库本
身。例如，接下来的SQL语句会删除tblUsers表：
390
---
## Page 405
第11章参考资料
7. CREATE TABLE 语句
CREATETABLE语句用于在当前数据库或模式（schema)中创建新的表，可在表名后面的括
号中传递列名及其数据类型。接下来的SQL语句会创建一个包含两列（item和name）的新表，
名为 shoppinglist:
CREATE TABLE shoppinglist (item int, name varchar (100))
Oracle支持创建一张表并使用另一张表或视图的数据来填充它：
8. ALTER TABLE 语句
ALTER TABLE语句用于添加、删除或修改现有表中的某列。接下来的 SQL查询会向
tblUsers 表添加一列，名为comments：
ALTER TABLE tblUsers ADD comments varchar (100)
下列 SQL语句会删除comments 列：
ALTER TABLE tblUsers DROP COLUMN comments
接下来的 SQL语句会将comments列的数据类型由varchar(100)修改为varchar(500)：
ALTER TABLE tblUsers ALTER COLUMN comments varchar (500)
9.GROUP BY语旬
通常针对表中的某一列执行SUM这样的聚合函数时会用到GROUPBY语句。例如，假设
希望在下列Orders表（表11-2)上执行一个查询来计算AnthonyAnteater这个顾客的总花费。
表11-2Orders表
ID
customer
_product
cost
1
Gary Smith
Scooter
7000
2