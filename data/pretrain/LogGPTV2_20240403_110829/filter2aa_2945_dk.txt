NOT (~) operator, 365
NotImplementedException, 243, 299, 439
NotOnCanceled option (ContinueWith method), 531
NotOnFaulted option (ContinueWith method), 531
NotOnRanToCompletion option (ContinueWith method), 531
NuGet Package Manager, 70, 727
null strings, 376
null values
null-conditional (?) operator, 190–191, 207
overview, 189–190
testing for, 190–191
nullable types
enumerations, 210
structures, 218
nullable values
overview, 191–192
properties of, 192–193
null-conditional (?) operator, 190–191, 207
NullReferenceException, 190
NumCircles field (Circle class), 174–175
numeric values
converting strings to, 47
infinite values, 49
primitive data types
displaying values of, 41–46
table of, 40
specifying, 39–40
Download from finelybook PI:EMAIL
1153
Numerics namespace, 511
O
Object class, 199, 270
object initializers, 357
object keyword, 199, 215
ObjectComparer object, 406
objectCount field (Point class), 177–178
ObjectCount method, 178
Object.Finalize method, 318
objects. See also classes
calling methods from, 68
CancellationToken, 551–552, 590
CancellationTokenSource, 590, 610
cardsInSuit, 428
casting, 202
InvalidCastException, 201
is operator, 202
as operator, 202–203
quick reference, 207
switch statement, 203–204
classes compared to, 161
creating, 315–316
deconstructing, 172–173
destroying, 316
Dispatcher, 571
initializing with properties, 356–358, 361
lifetime of, 319
MessageDialog, 580
ObjectComparer, 406
passing by reference, 189
Download from finelybook PI:EMAIL
1154
speechRecognitionResult, 691
StopWatch, 534
Task
abstracting, 545–549
canceling, 551–561, 566
continuations, 530–531, 563–564, 565
CPU bottlenecks, identifying, 533–545
creating, 529, 564
exception handling, 562–563, 565
faulted, 557, 563–564
parallelism, 531–538, 545–551, 565
running, 530, 564
synchronizing, 531
waiting for, 531, 564–565
TaskCreationOptions, 530
ViewModel, 734–740
adding commands to, 675–685
adding/editing data with, 731
creating, 671–675
error reporting, 743–746
MVVM (Model-View-ViewModel) pattern, 657–658
UI updates, 746–748
VoiceCommandActivatedEventArgs, 691
WriteableBitmap, 532, 582
obo prefix, 364, 378
on clause, 491
OnActivated method, 691–692, 697
OnLaunched method, 690
OnlyOnCanceled option (ContinueWith method), 531
OnlyOnFaulted option (ContinueWith method), 531
OnlyOnRanToCompletion option (ContinueWith method), 531
OnNavigatedTo method, 694, 699
Download from finelybook PI:EMAIL
1155
OnPropertyChanged method, 666–668, 679
openFileClick method, 119
OperationCanceledException, 559–560, 596
operator keyword, 504, 518
operators
arithmetic
applying to int values, 49–54
associativity, 54–56
data types and, 47–49
overview of, 47
precedence, 54, 59
prefix and postfix forms, 56–57
as, 202–203, 207
assignment (=)
associativity, 54–56
overview, 39
associativity, 98–99, 503
await, 555, 564, 572–574, 608
binary, 504
bitwise, 365–366
Boolean
associativity, 98–99
conditional logical operators, 97
defined, 96
equality operators, 96
precedence, 98–99
relational operators, 96
short-circuiting, 97–98
comparing in structures and classes, 509–510
compound assignment
associativity, 116
delegates and, 455
Download from finelybook PI:EMAIL
1156
evaluation of, 507–508
events and, 466, 476
examples of, 132
overview, 115–116
precedence, 116
table of, 116
constraints, 504
conversion
built-in, 517
narrowing conversions, 517
overview, 516–517
user-defined, 518
widening conversions, 517
writing, 519–521, 522
decrement (--), 56–57, 59, 116, 508–509
dot (.), 316
equality (==), 96, 99, 112, 510
equals, 490
from, 489, 501
group by, 489, 501
implementing, 511–516, 522
increment (++), 56–57, 59, 116, 508–509
is, 202, 207
join, 490, 502
lambda (=>), 425
language interoperability and, 507
nameof, 668–669
naming conventions, 505
NOT (!), 96
null-conditional (?), 190–191, 207
orderby, 489, 501
overloading
Download from finelybook PI:EMAIL
1157
constraints, 504
syntax, 504–505
pairs of, 510
precedence, 98–99, 503
prefix, 56–57
public, 505
query, 489–491
quick reference, 59, 522
select, 489, 501
static, 505
structures and, 216
symmetric, 506–507, 519
unary, 56, 504
where, 489, 501
optional parameters, 263–265
defining, 86, 94
resolving ambiguities with, 87–92
when to use, 84–86
optMethod method, 86–88
OR operators
OR (|), 365
logical OR (||)
associativity, 99
precedence, 99
short-circuiting, 97–98
syntax, 97
Order Placed dialog box, 458
OrderBy method, 485–486, 501
orderby operator, 489, 501
OrderByDescending method, 486
ordering data, 485–487, 501
OrdersInMemory class, 588
Download from finelybook PI:EMAIL
1158
out keyword, 194–195, 207, 405, 409
out parameters, 194–195, 207
OutOfMemoryException, 198, 238, 533
Output window, 12
OverflowException, 135, 144–149, 517
checked expressions, 146–148
checked statements, 145
overloading
constructors, 164–165
methods, 72–73, 255–256
operators
constraints, 504
syntax, 504–505
overpartitioning, 529
override keyword, 275–276, 288, 307, 313
override methods
declaring, 275–276, 288
sealed override, 307
overriding operators
equality (==) operator, 510
inequality (!=) operator, 510
operator precedence, 54, 59
P
Pack class, 242–243, 428
package managers, NuGet, 70, 727
Package.appxmanifest file, 614
packages
System.ValueType, 173
ValueTuple, 70
pairs, operator, 510
Download from finelybook PI:EMAIL
1159
Parallel class
abstracting classes with, 545–549
ForEach method, 546, 565
Invoke method, 546, 565
For method, 545–546, 565
when to use, 549–551
Parallel LINQ. See PLINQ (Parallel LINQ)
Parallel.For method
canceling, 557–558
syntax, 565
when to use, 545–546
Parallel.ForEach method, 546, 565
Parallel.Invoke method, 546
parallelism
CPU bottlenecks, identifying, 533–545
implementing, 531–538, 565
Parallel class, 545–551
PLINQ (Parallel LINQ)
overview, 585
parallelized query over simple collection, 585–587
parallelized query that joins two collections, 587–590
query cancellation, 587–590
ParallelLoop project, 549
ParallelPI method, 603–604, 607
ParallelTest method, 592–593
ParamArray project, 260–263, 264–265
parameter arrays
advantages of, 255
declaring, 257–259, 266
int data type in, 257–258
optional parameters compared to, 263–265
params object[]259–260
Download from finelybook PI:EMAIL
1160
priority of, 259
quick reference, 266
Sum method used with, 260–263
parameters (method), 62
arrays as, 235–236
defining, 62
named arguments, 94
passing, 86–87
resolving ambiguities with, 87–92
optional, 263–265
defining, 86, 94
resolving ambiguities with, 87–92
when to use, 84–86
out, 194–195, 207
parameter arrays
advantages of, 255
declaring, 257–259, 266
int data type in, 257–258
optional parameters compared to, 263–265
params object[]259–260
priority of, 259
quick reference, 266
Sum method used with, 260–263
ref
creating, 193–194, 207
overview, 193
Parameters project, 195–196
Parameters project, 186–188, 195–196
params arrays. See parameter arrays
params keyword, 256, 258, 731
params object[]259–260
parentheses ()
Download from finelybook PI:EMAIL
1161
in if statements, 100
in method calls, 62, 66
precedence override, 54
parse method, 47
partial classes, 165–172
partial keyword, 166
PascalCase naming scheme, 163
Pass class
Reference method, 188
Value method, 186–187
passing
arrays, 235–236
named arguments, 86–87, 94
by reference, 189
Peek Definition window, 90
percent sign (%)
compound modulus (%=) operator, 116
modulus (%) operator, 48
Performance Explorer, identifying CPU bottlenecks with, 533–545
performCalculationDelegate, 450–451
period (.)
dot notation, 284
dot operator, 316
phone book project, 372–378
PhoneNumber structure, 373–375
PhraseTopic element (CustomerVoiceCommands.xml), 688, 689
pi, calculating
with parallel tasks, 603–605
with single thread, 600–603
PI field (Math class), 160, 175
PickMultipleFilesAsync method, 581
PickSingleFileAsync method, 581
Download from finelybook PI:EMAIL
1162
pipe (|)
logical OR (||) operator
associativity, 99
precedence, 99
short-circuiting, 97–98
syntax, 97
OR (|) operator, 365
PlayingCard class, 241–242, 429–430
PLINQ (Parallel LINQ)
overview, 585
parallelized query over simple collection, 585–587
parallelized query that joins two collections, 587–590
query cancellation, 587–590
quick reference, 608
PLINQ project, 586–587
plotButton_Click method, 533, 545, 554–555, 575–576, 577
plotXY method, 535
plus sign (+)
addition (+) operator, 47
compound addition (+=) operator, 116, 466, 476
increment (++) operator, 56–57, 59, 116, 146, 508–509
Point class
declaring, 167–171
deconstructor, 172
objectCount field, 177–178
ObjectCount method, 178
pointers
function, 451
memory, 204–206
pointsList collection, 605
Polygon class, 358–359
polymorphism
Download from finelybook PI:EMAIL
1163
virtual methods and, 277
Windows Runtime compatibility, 311–313
Pop method, 411–412
populating arrays, 231–232
POST requests, 733
PostCustomer method, 721, 740, 741
PostCustomerAsync method, 740
PostCustomerWithHttpMessagesAsync method, 742
postfix form of operator, 56–57
precedence of operators, 503
Boolean operators, 98–99
compound assignment operators, 116
controlling, 54, 59
table of, 98–99
predicates, 423–425
prefix form of operator, 56–57
Previous buttons, adding to forms, 682–685
Previous method, 680–681
PreviousCustomer command, 679–682
PreviousCustomer property (ViewModel), 681–682
primary operators
associativity, 98
precedence, 98
primitive data types
displaying values of, 41–46
table of, 40
PrimitiveDataTypes project, 41–46
privacy, data, 185–186
private classes, 162–163
private constructors, 164
private fields, 162
private keyword, 65, 162–163, 278, 313
Download from finelybook PI:EMAIL
1164
ProcessData method, 235
processors, multicore, 526–527. See also tasks
Profiling Reports, 539–544
Program class, 187
ProgressRing control, 747
projects. See also AdventureWorksService project; Customers application
AuditService, 459
AutomaticProperties, 358–359
BinaryTree, 392–396, 445–447
BinaryTreeTest, 396–399
BuildTree, 400–402
CalculatePI, 600–603
Cards, 240–248
AddCardToHand method, 246
collection classes, 427–431
DealCardFromPack method, 243
dealClick method, 246
IsCardAlreadyDealt method, 244
IsSuitEmpty method, 243–244
for loop, 247–248
Pack class, 242–243
PlayingCard class, 241–242
randomCardSelector variable, 242
ToString method, 245
Value enumeration, 241
CheckoutService, 461–463
Classes, 166–172
ComplexNumbers, 511–514