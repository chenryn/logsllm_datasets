### Reconstructing Visitor Histories

Crawling Renren for recent visitor records is complicated by two primary challenges. First, each user’s profile only lists the last 9 visitors. This means that our crawler must continuously revisit users to gather representative data, as new visitors will cause older visitors to fall off the list. Continuous crawling, however, leaves the ID of our crawler on the visitor logs, which has generated negative feedback from profile owners. Additionally, Renren imposes multiple per-account rate limits that significantly slow down our crawler, despite our large number of crawler accounts.

To address these issues, we designed a self-adapting crawler. This means that we track the popularity and level of dynamics in different user profiles and allocate most of our requests to highly trafficked user profiles, while guaranteeing a minimum crawl rate (once per day) for low-traffic users. The individual lists from each crawl contain overlapping results, which we integrate into a single history.

The second challenge is that each visitor is only shown once in the list, even if they visit multiple times. Repeat visits simply cause the user to return to the top of the list, erasing their old position. This makes it difficult to identify overlapping sets of visitors from iterative crawls.

To solve these challenges, we use a log-integration algorithm to concatenate the individual recent visitor lists observed during each successive crawl. Specifically, some overlapping sets of visitors exist in successive crawl data, and our main task is to find new visitors and remove overlaps. There are two types of incoming visitors: new users, who do not appear in the previous list, and repeat users, who appear in the prior list at a different relative position. New visitors are easily identified, as their records are completely new to the recent visitor list. New visitors provide a useful checkpoint for log-integration, as other users behind them in the list are also necessarily new. Repeat users can be detected by looking for changes in the sequence of the recent visitor list. If a user repeatedly visits the same profile between two visits of other users, nothing changes in the recent visitor list. Therefore, consecutive repeat visits are ignored by our crawler.

**Figure 2** demonstrates our integration algorithm. We observe that visitors ABCDEFGHI viewed a user’s profile at some time before our first crawl. New users view the profile and are added to the recent visitor list by the second crawl at time 2. We re-observe the old sequence CDEFGHI and identify JK as new visitors, since JK do not exist in the previous visitor list. Next, we compare recent visitor lists at time 2 and 3. We find that E is before K in the recent visitor list crawled at time 2, but this order is changed at time 3. This means that at some time before the third crawl, user E revisited the target and changed positions in the list. Thus, we identify E as a new visitor. Since C is behind E at time 3, C is also identified as a new visitor. Our integration algorithm also works correctly at time 4. User L has not been observed before, and thus L, plus subsequent visitors C and M, are all classified as new visitors.

Overall, from the 61,405 user profiles we continuously crawled, we obtained a total of 8,034,664 total records of visits to user profiles in the PKU network. After integrating these raw results, we are left with 1,863,168 unique profile visit events. This high reduction (77%) is because most profiles receive few page views, and thus overlaps between successively crawled results are very high. Although Renren does not show individual recent visitors of user diaries and photos, it does display the total number of visits, which we also crawled.

### Impact of Crawl Frequency

We are concerned that our crawls might not be frequent enough to capture all visit events to a given profile. To address this concern, we took a closer look at the impact of crawler frequency on missing visits. First, we computed the average daily visit count for all the profiles we crawled between September and November 2009 and plotted this as a CDF in **Figure 3**. Most users (99.3%) receive ≤ 8 visits per day on average. Since Renren shows the 9 latest visitors, crawling a profile once every day should be sufficient to capture all visits. While our crawler adapts to allocate more crawl requests to popular, frequently visited profiles, we guarantee that every profile is crawled at least once every 24 hours.

Next, we selected 1,000 random PKU users and crawled their recent visitors every 15 minutes for 2 days. We used the data collected to simulate five frequencies for the crawling process: 15 minutes, 30 minutes, 1 hour, 12 hours, and 1 day. Then we used the log-integration algorithm to concatenate the individual recent visitor lists at different crawling frequencies. For each person, we computed the number of visits missed by the crawler when we reduced the frequency, starting with visits every 15 minutes. We plotted the CDF of these deviations in **Figure 4**. As we see, for 88% of users, there are no additional visits missed when we reduce the crawler rate from once every 15 minutes to once per day. Only for a very small group of users (0.7%) is the number of missing visits greater than 10 when crawling once per day. **Figure 3** also shows that less than 0.7% of all users receive more than 9 visits per day. Only these users would require more than one crawl per day to collect a full history of their visits. Since we allocate the bulk of our crawler requests to these high-popularity users (and crawl once per day for the rest), we are relatively confident that very few visits are missed by our crawls.

### Social Graph Analysis

In this section, we analyze the topological properties of the entire Renren social graph by focusing on salient graph measures. **Table 1** shows some general properties of Renren, such as average degree, clustering coefficient, assortativity, and average path length, compared to other social networks. Our Renren dataset is larger than most previously studied OSN datasets, with the exceptions being recent measurements of the Twitter network [4, 16]. However, our dataset shares similar properties with prior studies [7, 22, 29], confirming that Renren is a representative social network, and the behavior of its users is likely indicative of users in other OSNs like Facebook.

**Figure 5** plots the complementary cumulative distribution function (CCDF) of user social degrees in the Renren network, showing that Renren’s network structure roughly follows a power-law [2]. We compute that the power-law curve fitting the social degree CCDF has an alpha value of 3.5, with a fitting error of 0.02. This alpha value is significantly higher than that found for Facebook (1.5), Orkut (1.5), and Twitter (2.4).

We also look at Renren’s clustering coefficient, which assesses the level of local connectivity between nodes. In undirected graphs, the clustering coefficient of a person is defined as the ratio of the number of links over all possible connections between one’s friends. The clustering coefficient of the entire network is defined by the average of all individual clustering coefficients. Renren’s average clustering coefficient is only 0.063, implying that Renren friend relationships are more loosely connected than the other social networks studied in **Table 1**. **Figure 6** displays the distribution of clustering coefficient versus node degree. As expected for a social network, users with lower social degrees have higher clustering coefficients, demonstrating high levels of clustering at the edge of the social graph.

The assortativity coefficient measures the probability for users to establish links to other users of similar degree [29]. It is calculated as the Pearson correlation coefficient of the degrees of node pairs for all links in a graph. A positive assortativity coefficient indicates that users tend to connect to other users of similar degree, and a negative value indicates the opposite trend. Renren’s assortativity is 0.15, implying that connections between like-degree users are numerous. **Figure 7** displays node degree correlation (knn) versus node degree. knn is a closely related metric to assortativity. The positive correlation starting around degree 100 demonstrates that higher-degree users tend to establish links with other high-degree users. These chains of well-connected super-users form the backbone of the social network.

Average path length is the average of all-pairs-shortest-paths in the social network. Given the immense size of our social graph, it is not tractable to compute the shortest path for all node pairs. Instead, we chose 1,000 random users in the network, performed Dijkstra to build a spanning tree for each user in the social graph, and computed the length of their shortest paths to all other users in the network. As shown in **Table 1**, the average path length in Renren is 5.38, which agrees with the six-degrees of separation hypothesis [20]. It is not surprising to see that the average path length is longer in Renren than prior results from Facebook [29], as those path lengths were computed over smaller subgraphs representing regional networks. It is surprising, however, when we compare it to results from Cyworld [7], as the two networks are similar in size and completeness. One reasonable explanation is that connectivity between Internet users in the Cyworld network is much stronger than connectivity between users in the Renren network.

### Strongly Connected Component Analysis

Online friendship links often correspond closely with offline relationships [17]. Thus, it is natural to assume that college students would have many online friends in the same campus network. This behavior should manifest itself as a single, large, strongly connected component (SCC) that includes most users in the PKU network social graph. Surprisingly, we find that 23,430 (23.2%) of users in the PKU network have no friends in the PKU campus network and are therefore disconnected from the SCC. We refer to these as isolated users. To confirm these results, we measured the SCC of 9 other large university networks and discovered similar numbers of isolated users.

**Figure 8** shows social degrees and total number of profile visits for these isolated users. 83% of isolated users have social degrees less than 10. Additionally, 70% of isolated users have fewer than 20 total profile visits, meaning their profiles are rarely browsed by others. These isolated users likely abandoned their accounts soon after registration and did not have enough time to establish links with friends within the campus network. Further analysis into the behavior and activities of these isolated users is the subject of ongoing work.