Subject: Proposal for Enhancing the Container Runtime Interface

Dear Team,

In several discussions and meetings, I have expressed our dissatisfaction with the current container runtime interface (CRI) due to various reasons. Below, I outline the primary concerns:

1. **Code Duplication**: There is significant code duplication when supporting `SyncPod` across different container runtime implementations, especially with Kubernetes-defined policies such as `StartPolicy` and `PullPolicy`. We have discussed the possibility of transitioning from a declarative API to an imperative API at this lowest extensible point to address this issue.

2. **Image Format Coupling**: The current CRI is tightly coupled with specific image formats. For example, Docker runtime supports Docker images, while rkt supports appc images by converting Docker images to its own format. In the long term, we aim to support additional image formats without modifying each runtime. The current API does not provide a straightforward way to achieve this flexibility.

3. **Logging Management**: Logging management varies significantly across different operating system distributions and runtime implementations. To improve consistency and flexibility, we should make logging management pluggable within the runtime.

4. **Resource Isolation**: Currently, resource isolation is handled partially by the runtime and partially by Kubelet. This division was made ad-hoc and lacks a well-thought-out strategy. We need to decide whether the CRI should handle resource management or if it should be entirely managed by the ResourceManager module in Kubelet, given that QoS policies are defined by Kubernetes and may evolve over time.

5. **Other Considerations**: Additional factors, such as [insert any other relevant points here], also contribute to the need for a more robust and flexible CRI.

To address these issues, I propose that we decouple image management, resource/cgroup management, and logging management from the current CRI. By doing so, we can effectively transform the CRI into a dedicated pod/container lifecycle management interface.

I look forward to your feedback and suggestions on this proposal.

Best regards,

[Your Name]

CC: @kubernetes/sig-node, @bgrant0607
CC: @philips, @jonboulle, @yifan-gu (CoreOS)
CC: @smarterclayton, @derekwaynecarr (Red Hat)