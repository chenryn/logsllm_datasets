In this experiment, we investigate whether an attacker can
infer the pattern by simply watching the video or through
direct observations. To answer this question, we asked each
of our ten participants to watch 60 videos (where a pattern
was drawn by other participants) to guess the pattern. We only
played the video segment during which a pattern is drawn to
the participant (around 3 seconds per video). To familiarize
participants with the process, we played ﬁve sample videos
and showed the correct patterns at the end of each video to
our participants before the experiment. Each participant then
had 10 minutes to watch a video and ﬁve chances to guess
a pattern. They could adjust the playing speed and replay the
video multiple times as they wished.
Figure 24 (a) shows the success rate of pattern guessing
with bare eyes. Our participants correctly guessed for nearly
half of the simple patterns in ﬁve attempts. However, they
found that it is difﬁcult to infer complex patterns with many
line segments, overlapping lines and intersections. The success
rate of guessing complex patterns is less than 10% in ﬁve
attempts. This is not a surprising result because although it is
possible to correctly guess patterns with simple structures by
watching the video, doing so for patterns with more complex
structures is much harder.
We also asked participants to directly observe how a pattern
was drawn from a distance of 2 meters away from the target
device. The intuition behind this evaluation is that human eyes
can catch richer information over a digital video camera. The
results of this experiment are shown in Figure 24 (b). As can be
seen from the diagram, although the success rate is improved
compared to directly watching the video,
the chances for
guessing the correct pattern in 5 attempts are quite low. In fact,
the success rates are 48.3%, 38.3% and 11.7% respectively for
simple, median and complex patterns.
G. Evaluation on Other Pattern Grids
Result 7: A pattern grid with more dots provides stronger
protection but our attack can still crack most of the patterns.
There are a few applications (such as CyanLock) and
customized ROMs available to increase the size of the pattern
grid from 3 × 3 to 4 × 4, 5 × 5, and 6 × 6. Although a
3 × 3 grid remains a popular choice (as it is supported by
the native Android OS), it is worth studying whether having
more touch dots on a pattern grid leads to stronger security. In
(a) video watching
(b) direct observations
Figure 24. Success rates of guessing patterns through watching the video (a)
or direct observations (b).
Figure 25. Success rates of our attack for different locking grids.
this experiment, we ﬁrst ranked all possible patterns for each
grid setting in ascending order according to their complexity
scores. We then equally divided the patterns into three groups,
simple, medium and complex, and asked our participants to
randomly select 20 patterns from each group for evaluation.
We report the success rate of our attack within ﬁve attempts.
In the experiments, we have adapted our algorithms for each
grid setting by adjusting the algorithm parameters (such as the
line direction numbers).
Figure 25 shows the success rate of our attack for different
grids. Similar to a 3 × 3 grid, our approach achieves a
higher success rate for complex patterns over simple ones.
On average, we can crack 90% of the complex patterns. We
observed that a grid with more dots does provide stronger
protection. For complex patterns, the success rate of our attack
drops from 95% on a 4 × 4 grid to 87% on a 6 × 6 grid.
For simple patterns, the success rate of our attack drops from
85% on a 4 × 4 grid to 75% on a 6 × 6 grid. This is
because a ﬁngertip trajectory in general could be mapped to
a larger number of candidates on a grid with more dots. For
instance, the pattern shown in Figure 2 (f) can be mapped
to 55 candidate patterns on a 6 × 6 grid as opposite to 5 on
a 3 × 3 grid. Overall, our attack can crack over 75% (up to
95%) of the patterns within ﬁve attempts. One of the purposes
of introducing pattern grids with more dots is to allow users to
13
123450%10%20%30%40%50%Number of attemptsCracking success rate  SimpleMedianComplex123450%10%20%30%40%50%Number of attemptsCracking success rate  SimpleMedianComplexSimpleMedianComplex60%70%80%90%100%Cracking success rate  4*45*56*6use more complex patterns. However, this experiment suggests
that complex patterns remain less security on these grids under
our attack.
VII. DISCUSSIONS
A. Potential Countermeasures
The success of our attack depends on three factors: (1)
knowledge of the pattern grid; (2) a decent quality video
footage allowing the algorithm to track the ﬁngertip movement;
(3) successfully identifying a video segment that captures the
entire process of pattern drawing.
For the ﬁrst factor, the attacker can obtain relevant in-
formation via analyzing a device installed with the same
operating system and applications as the target. Randomization
techniques such as randomized pictures [6, 24] could be a
solution for the ﬁrst factor. However, randomization-based
solutions often come at the cost of poorer usability. This issue
is a major obstruction for this approach to be adopted at a
large scale. Regarding the second factor, there are ways, such
as KALEIDO [35], to prevent unauthorized videotaping by
dynamically changing the colour and brightness of the screen
to confuse the ﬁlming camera. Furthermore, a non-technical
solution for this aspect would be to educate users to fully
cover their ﬁngers when drawing a pattern. But doing this
on a large-screen device could be awkward especially when
the device is held by one hand. For the third factor,
the
attacker’s solution depends on the type of the pattern. For a
screen lock, pattern drawing is the ﬁrst activity (except for
receiving a phone call or making an emergency call) when the
device is retrieved. Therefore, identifying the video segment
is straightforward. When the pattern is used by applications,
we have observed that users typically pause for a few seconds
before or after entering the pattern. Therefore, an experienced
attacker should also be able to identify the video segment
in case our automatic algorithm (presented in Section IV-A)
fails to do so. A potential countermeasure is to mix pattern
unlocking with other on-screen activities. For examples, before
and after pattern drawing, the system can ask the user to type
in a sentence using a Swype-like method or to draw some
graphical shapes. The problem of this approach is that it could
annoy users by asking them to do more, especially for screen
unlocking – an activity that is performed many times a day.
B. Implications
While pattern lock is preferable by many users [7], this
work shows that it is vulnerable under video-based attacks. Our
attack is able to break most patterns in ﬁve attempts. Consid-
ering Android allows ﬁve failed attempts before automatically
locking the device, our work shows that this default setting is
unsafe. We also demonstrated that, in contrast to many users’
perception, complex patterns actually do not provide stronger
protection over simple patterns under our attack.
It is worth mentioning that our approach is only one of the
many attacking methods that researchers have demonstrated.
Examples of these attacks include video-based attacks on
keystroke-based authentication [23, 33], sensor-based attacks
for pattern lock [34]. Authentication methods that combine
different authentication methods [10, 19, 25] to constantly
checks the user’s identity could be a solution.
VIII. RELATED WORK
Our work lies at the intersection between computer vi-
sion based attacks and cracking graphical- and touch-based
authentication methods. This work brings together techniques
developed in the domain of computer vision and motion
tracking to develop a new attack.
Computer Vision-based Attacks No work has targeted using
video footage to crack Android pattern lock and this is the
ﬁrst to do so. Our work is inspired by the work presented
by Shukla et al. [23] on video-based attacks of PIN-based
passwords. In addition to addressing the new challenges high-
lighted in Section I, our work differs to their approach in two
ways. Firstly, we target a different authentication method, i.e.
graphical-based passwords, which are fundamentally different
from PIN-based passwords. Secondly, our approach does not
require knowledge of the size of the screen or the grid. Other
work in the area including [33] which attacks PIN-based
passwords by analyzing how the screen brightness changes
when entering a password. But
the subtle changes of the
screen brightness can be dramatically affected by the lighting
condition. In Section VI-D, we show that our attack is effective
under various lighting conditions. This restricts the application
of their approach. There is a body of work using reﬂections
to recover information typed by the user [2, 16, 20, 31]. They
all require having a clear vision of the content displayed on
the screen which is not required by our attack.
Cracking Graphical-based Passwords Aviv et al. demon-
strated that it is possible to reconstruct a locking pattern by
analyzing the oily residues left on the screen [1]. This method
is highly restricted as oily residues can be messed up by
any on-screen activities after pattern drawing. Zhang et al.
exploit the WiFi signal interferences caused by ﬁnger motions
to recover patterns [34]. Their method requires a complex setup
and is highly sensitive to moving objects of the environment.
Attacks on Touch-based Authentication Ballard et al. im-
plemented a forgery attack on handwriting authentication [3].
Using a small number of training examples, they achieve a
high success rate for this attack. More recently, Serwadda et
al. show that a simple robot can achieve high penetration rates
against touch-based authentication systems by analyzing on-
screen gestures including swiping and zooming [22]. In this
paper, we present a new, video-based attack for graphical-
based passwords. Research in this area all demonstrates the
need for a closer look of the security risks of touch-based
authentication.
Study of Android Pattern Lock Uellebenk et al. study how
people use Android pattern lock on a daily basis [29]. They
found that in practice many people only use a small set of
patterns due to the users’ bias in generating patterns. Løge
explored the correlation between human’s characteristics (e.g.
ages and genders) and the choice of patterns [18]. Her study
shows that users have a bias in selecting the starting dot to
form a pattern and people tend to use complex patterns for
sensitive applications.
Motion Tracking In addition to TLD, there are other methods
proposed in the past for tracking object motions. Some of them
apply image analysis to track the hand and gesture motions
from video footage [5, 26, 32]. In this paper we do not seek
to advance the ﬁeld of motion tracking. Instead we demonstrate
14
that a new attack can be built using classical motion tracking
algorithms. We show that the attack presented in this work can
be a serious security threat for Android pattern lock.
IX. CONCLUSIONS
This paper has presented a novel video-based side-channel
attack for Android pattern lock. The attack is based on a video
ﬁlmed a distance of 2 meters away from the target device using
a mobile phone camera. The attack is achieved by employing
a computer vision algorithm to track the ﬁngertip movement
from the video, and then using the geometry information of
the ﬁngertip movement trajectory to identify the most likely
patterns to be tested on the target device. Our approach was
evaluated using 120 unique patterns collected from indepen-
dent users as well as some of the most complex patterns. The
experimental results show that our attack is able to successfully
crack over 90% of the patterns in ﬁve attempts. We show
that,
to many people’s belief, complex pattern
actually provides weaker protection over simple patterns under
our attack. Our study suggests that Android pattern lock is
vulnerable to video-based side-channel attacks.
in contrast
ACKNOWLEDGEMENTS
This work was partly supported by the National Natural
Science Foundation of China (NSFC) through grant agree-
ments 61672427, 61672428 and 61572402; and the UK En-
gineering and Physical Sciences Research Council (EPSRC)
through grant agreements EP/M01567X/1 (SANDeRs) and
EP/M015793/1 (DIVIDEND). The user patterns used to eval-
uate this work are openly available from the Lancaster Uni-
versity data archive at https://dx.doi.org/10.17635/lancaster/
researchdata/113.
REFERENCES
[1] A. J. Aviv et al., “Smudge attacks on smartphone touch
screens,” in 4th USENIX Conference on Offensive Tech-
nologies, 2010.
[2] M. Backes et al., “Tempest in a teapot: Compromising
reﬂections revisited,” in IEEE S & P ’09.
[3] L. Ballard et al., “Forgery quality and its implications for
behavioral biometric security,” IEEE SMC, 2007.
[4] D. a. Balzarotti, “Clearshot: Eavesdropping on keyboard
input from video,” in IEEE S &P ’08.
[5] J. Beh et al., “Rule-based trajectory segmentation for
modeling hand motion trajectory,” Pattern Recognition,
2014.
[6] R. Biddle et al., “Graphical passwords: Learning from
the ﬁrst twelve years,” ACM Computing Surveys (CSUR),
2012.
[7] D. V. Bruggen, “Studying the impact of security aware-
ness efforts on user behavior,” Ph.D. dissertation, Univer-
sity of Notre Dame, 2014.
[8] L. F. Cranor et al., Eds., It’s a Hard Lock Life: A Field
Study of Smartphone (Un)Locking Behavior and Risk
Perception.
[9] A. De Angeli et al., “Is a picture really worth a thousand
words? exploring the feasibility of graphical authentica-
tion systems,” Int. J. Hum.-Comput. Stud., 2005.
[10] A. De Luca et al., “Touch me once and I know it’s you!:
implicit authentication based on touch screen patterns,”
in CHI ’12.
15
[11] S. Egelman et al., “Are you ready to lock?” in CCS ’14.
[12] v. G. R. Grompone et al., “LSD: a fast line segment
detector with a false detection control.” IEEE PAMI,
2010.
[13] T. Hastie and R. Tibshirani, “Discriminant adaptive near-
est neighbor classiﬁcation,” IEEE PAMI, 1996.
[14] Z. Kalal, “TLD: Tracking-learning-detection,” http://
kahlan.eps.surrey.ac.uk/featurespace/tld/.
[15] Z. Kalal et al., “Tracking-learning-detection,” IEEE
PAMI, 2012.
[16] M. G. Kuhn, “Compromising emanations: eavesdropping
risks of computer displays,” Ph.D. dissertation, University
of Cambridge, 2002.
[17] M. H. Kutner, C. J. Nachtsheim, and J. Neter, “Ap-
plied linear regression models (5th ed.),” Technometrics,
vol. 26, no. 4, 2004.
[18] M. D. Løge, “Tell me who you are and i will tell you your
unlock pattern,” Master’s thesis, Norwegian University of
Science and Technology, 2015.
[19] M. Mannan and P. C. van Oorschot, “Using a personal
device to strengthen password authentication from an un-
trusted computer,” in Financial Cryptography and Data
Security. Springer, 2007, pp. 88–103.
[20] R. Raguram et al., “iSpy: automatic reconstruction of
typed input from compromising reﬂections,” in CCS ’11.
[21] J. Rogers, “Please enter your four-digit pin,” Financial
Services Technology, 2007.
[22] A. Serwadda and V. V. Phoha, “When kids’ toys breach
mobile phone security,” in CCS ’13.
[23] D. Shukla et al., “Beware, your hands reveal your se-
crets!” in CCS ’14.
[24] H. Siadati et al., “Fortifying android patterns using per-
suasive security framework,” in UBICOMM 2015.
[25] D. Stefan et al., “Robustness of keystroke-dynamics
based biometrics against synthetic forgeries,” computers
& security, 2012.
[26] B. Stenger et al., “Model-based hand tracking using a
hierarchical bayesian ﬁlter,” IEEE PAMI, 2006.
[27] C. Sun et al., “Dissecting pattern unlock: The effect of
pattern strength meter on pattern selection,” Journal of
Information Security and Applications, 2014.
[28] A. Torralba and A. Oliva, “Depth estimation from image
structure,” IEEE PAMI, 2002.
[29] S. Uellenbeck et al., “Quantifying the security of graph-
ical passwords: The case of android unlock patterns,” in
CCS ’13.
[30] E. von Zezschwitz et al., “Easy to draw, but hard to
trace?: On the observability of grid-based (un)lock pat-
terns,” in CHI ’15.
[31] Y. Xu et al., “Seeing double: Reconstructing obscured
typed input from repeated compromising reﬂections,” in
CCS ’13.
[32] M. H. Yang et al., “Extraction of 2d motion trajectories
and its application to hand gesture recognition,” IEEE
PAMI, 2002.
[33] Q. Yue et al., “Blind recognition of touched keys: Attack
and countermeasures,” arXiv preprint arXiv:1403.4829,
2014.
[34] J. Zhang et al., “Privacy leakage in mobile sensing: Your
unlock passwords can be leaked through wireless hotspot
functionality,” Mobile Information Systems, 2016.
[35] L. Zhang et al., “Kaleido: You can watch it but cannot
record it,” in MobiCom ’15.