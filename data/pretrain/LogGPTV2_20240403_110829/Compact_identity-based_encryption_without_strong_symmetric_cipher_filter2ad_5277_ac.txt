1 − qD2
− ν
(cid:14)(cid:15)
e(qKE + 1)
e(qKE + 1)
 − ν
−k
(cid:2)(cid:1)
>
1
1
(cid:2)
Identity Based Encryption Without Redundancy
293
The reason for which the symmetric encryption key is computed using a hash
function taking U and QID among its input is that it provides us with a more
eﬃcient reduction: the security of the scheme can still be proved if the symmetric
key is derived from the sole bilinear Diﬃe-Hellman key but the reduction then
involves qDqH2 calls to the decision oracle. A similar observation was made by
Cramer and Shoup [17] in their security proof of the Hashed El Gamal KEM.
The reduction given in theorem 1 is more eﬃcient than the one obtained from
the BDH assumption through the Fujisaki-Okamoto tranform [23] in the original
IBE. Although our proof relies on a stronger assumption, we believe that this
is a fact of interest because a tight reduction from a given assumption should
always be preferred to a loose reduction from a potentially weaker assumption as
argued in [27]. On the other hand, the Gap-BDH assumption does not appear as
a much stronger assumption than the (already non-standard) BDH assumption.
Interestingly, if we compare our security reduction for Hybrid-IBE with the
one of Galindo [24] for another variant of the Boneh-Franklin IBE obtained
through the ﬁrst Fujisaki-Okamoto transform [22], we ﬁnd that ours is as eﬃ-
cient as Galindo’s one (which relies on the DBDH assumption) but our Hybrid
construction happens to be more eﬃcient (as no re-encryption is needed for the
receiver) and produces shorter ciphertexts thanks to the absence of redundancy.
As for Galindo’s variant [24], an essentially optimal reduction can be obtained
for Hybrid-IBE by applying a trick suggested in [27] at the cost of an additional
pairing computation at encryption. We also mention that a similar technique
can be applied to a variant of a certiﬁcateless encryption scheme [3] proposed
in [4].
4 Shortening Ciphertexts in the Multiple-Receiver Case
A recent result [5] of Baek, Safavi-Naini and Susilo showed how to eﬃciently
encrypt a message intended to N distinct recipients from their identities with-
out having to compute more than one pairing. The security of their scheme in
the selective-ID model considered in [12] and [9] (that is, the attacker has to an-
nounce the set of identities it intends to attack at the beginning of the game even
before seeing the master-key of the scheme) was shown to rely on the Gap-BDH
assumption and was obtained through the REACT transformation.
It is not hard to see that the construction we used in the previous section
can also help to shorten the ciphertexts produced by the single-recipient version
of the latter scheme since, in the same way as the use of an IND-CCA cipher
instead of an IND-CPA one allows removing the message authentication code
(MAC) from the DHIES construction [1] as shown in [28], it also allows removing
the checksum from REACT (so that the resulting construction produces as short
ciphertexts as the GEM conversion).
Interestingly, the same trick applies to the multiple-receiver case considered
in [5] if we accept a loss of eﬃciency in the security reduction. The latter then
involves a number of calls to the decision oracle that depends on the square of
the number of adversarial queries. We thus believe the resulting hybrid multiple-
294
Benoˆıt Libert and Jean-Jacques Quisquater
recipient scheme (called Hybrid-IBE2 and depicted on ﬁgure 2) to be of interest
because of its ciphertexts which are about 1184 bits shorter than in [5] as no
checksum is needed and there is no need to encode a part of ciphertext as a G2
element.
4.1 The Selective-ID Security Model for Multiple-Receiver Schemes
The formal deﬁnition [5] of a multiple-receiver IBE scheme is identical to the
deﬁnition of section 2.3 with two essential syntactic diﬀerences. First, the en-
cryption algorithm takes as inputs a message M, system-wide parameters params
and several identities (ID1, . . . , IDt) to produce an encryption C of M under
(ID1, . . . , IDt). Secondly, the decryption algorithm is given a ciphertext C to-
gether with a receiver number i ∈ {1, . . . , t} and the associated private key dIDi
and returns either a plaintext or a rejection message ⊥. In the scheme described
in this section, a ciphertext is never rejected.
Similarly to the authors of [5], we establish the security of our multiple-
receiver construction in the selective-ID model recalled in the next deﬁnition.
The reason for this is that, as in [5], a security reduction in the strongest model
(where target identities are adaptively chosen) involves a loss of concrete security
which is exponential in the number of receivers.
, . . . , ID∗
t ).
1
Deﬁnition 4 ([5]). A multiple-receiver IBE scheme is said to be selective-ID
secure against chosen-ciphertext attacks (or IND-sMID-CCA secure) if no PPT
adversary has a non-negligible advantage in the game below.
1. The attacker A outputs a set of target identities (ID∗
2. The challenger CH runs the setup algorithm, transmits the public parameters
params to A and keeps the master key mk to itself.
3. A issues a number of key extraction queries (as in deﬁnition 2) for identities
ID (cid:12)= ID∗
t and decryption queries, each of which is denoted by (C, IDi)
for some i ∈ {1, . . . , t}.
4. A produces messages (M0, M1) and obtains a challenge ciphertext C∗ =
Encrypt(Mb, params, ID∗
5. A issues new queries with the same restriction as in step 3. Additionally,
she is disallowed to ask for the decryption of C∗ for any one of the target
identities (ID∗
6. A outputs a bit b(cid:3) ∈ {0, 1} and wins if b(cid:3) = b. Her advantage is again
Adv(A) = |2 × Pr[b(cid:3) = b] − 1|.
t ), for a random bit b R← {0, 1}, from CH.
, . . . , ID∗
t ).
, . . . , ID∗
1
, . . . , ID∗
1
1
4.2 The Scheme
A strange feature of Hybrid-IBE2 is that, unlike Hybrid-IBE, it is not a pub-
lic key encryption scheme without redundancy in the strict sense of [31] and
[33]. Indeed, in the simplest single-recipient scenario, elements (cid:4)U, V, W(cid:5) of the
ciphertext space for which logP (U) (cid:12)= logQID+Q(V ) can never be reached by a
correct application of the encryption function and thus do not correspond to
Identity Based Encryption Without Redundancy
295
Setup: given security parameters k and λ, this algorithm selects a k-bit prime q,
groups G1, G2 of order q, a generator P ∈ G1, a bilinear map e : G1×G1 → G2,
hash functions H1 : {0, 1}∗ → G1, H2 : {0, 1}∗ → {0, 1}λ and an IND-CCA
cipher (E, D) of keylength λ. It also picks Q R← G1, a master key mk := s R← Z
∗
q
and the public key is (Ppub := sP, Q). The public parameters are
params := {q, G1, G2, P, Q, Ppub, e, H1, H2, n, E, D, λ}
where n denotes a bound on the size of plaintexts.
Keygen is the same as in Hybrid-IBE.
Encrypt: to encrypt a message M under the system-wide public key Ppub
, compute QIDi = H1(IDi) ∈ G1 for
for identities ID1, . . . , IDt ∈ {0, 1}∗
i = 1, . . . , t, pick a random r R← Z
C = (cid:4)U, V1, . . . , Vt, W,L(cid:5) = (cid:4)rP, rQID1 + rQ, . . . , rQIDt + rQ, ESK(M ),L(cid:5)
where SK = H2(U, V1, . . . , Vt, L, ω) ∈ {0, 1}λ with ω = e(Ppub, Q)r and L is
a label indicating how each part of ciphertext is associated to each receiver.
× {0, 1}n and his private key
dIDi = sQIDi , receiver i ∈ {1, . . . , t} computes ω = e(Ppub, Vi)/e(U, dIDi ) and
returns M = DSK(W ) where SK = H2(U, V1, . . . , Vt, L, ω) ∈ {0, 1}λ.
Decrypt: given C = (cid:4)U, V1, . . . , Vt, W,L(cid:5) ∈ G
∗
q and output the ciphertext
t+1
1
Fig. 2. Hybrid-IBE2
any plaintext. Nevertheless, the decryption oracle never returns an error mes-
sage indicating a badly formed ciphertext and the receiver does not have to
perform a validity checking (that could be made here by solving a DDH problem
in G1) when decrypting a ciphertext. In any case, for an input (cid:4)U, V, W(cid:5), the
decryption algorithm returns a symmetric decryption of W using a hash value
of e(Ppub, V )/e(U, dID) and other ciphertext components (it is essential to in-
clude them among the inputs of H2 to prevent the scheme from being malleable)
as a symmetric key so that inconsistent ciphertexts are decrypted into random
messages but consistently encrypted messages are always correctly decrypted.
From a security point of view, theorem 2 shows that ill-formed ciphertexts
do not have to be detected and that their existence does not induce security
concerns: in the security proof, the simulator is always able to provide an attacker
with a perfectly consistent emulation of the decryption oracle thanks to the
power of the decision oracle. This result shows that the existence of incorrectly
formed ciphertexts does not necessarily require the recipient to perform a validity
checking for chosen-ciphertext security purposes.
Theorem 2. Let A be an adversary having an advantage  against the IND-
sMID-CCA2 security of Hybrid-IBE2 when running in a time τ, making qHi
queries to random oracles Hi (i = 1, 2), qD decryption queries and qKE private
key extraction queries. Then, for any 0 ≤ ν ≤ , there either exists
– a PPT algorithm B to solve the Gap-BDH problem with an advantage
within time τ(cid:3) ≤ τ + (qH1 + qKE)τmult + (2qD + 1)qH2 Φ + qD(τsym + τp)
(cid:3) ≥  − ν − qD
2k
296
Benoˆıt Libert and Jean-Jacques Quisquater
– an attacker that breaks the IND-CCA security of the symmetric encryption
scheme (E, D) with an advantage ν within a time τ(cid:3)
where τmult is the time to perform a multiplication in G1, τsym denotes the
cost of a symmetric decryption, τp the cost of a pairing evaluation and Φ the
complexity of a call to the decision oracle.
Proof. Given an instance (aP, bP, cP,ODBDH ) of the Gap-BDH problem, B
launches the adversary A who ﬁrst announces the set of identities (ID∗
, . . . , ID∗
t )
that she intends to attack. She then obtains the domain-public key (Ppub =
aP, Q = bP ) from B that simulates her view as follows.
– queries H1(IDi): B draws li
q. If IDi = ID∗
j for some j ∈ {1, . . . , t},
B returns liP − Q. Otherwise, it responds with liP (so that the associated
private key dIDi = li(aP ) is always computable).
1
R← Z∗
H2(.) queries and decryption queries are handled using two lists L2 and L(cid:3)
are initially empty.
– For decryption queries on a ciphertext C = (cid:4)U, V1, . . . , Vt, W,L(cid:5) for an iden-
tity IDi and a receiver number i ∈ {1, . . . , t}, the simulator’s strategy is to
always return a symmetric decryption of W under a symmetric key that
appears (or will subsequently appear) to A as a hash value of the tuple
2 which
(U, V1, . . . , Vt,L, e(Ppub, Vi)/e(U, dIDi))
according to the speciﬁcation of the decryption algorithm under recipient
i’s private key dIDi. To do so, B ﬁrst retrieves QIDi = H1(IDi) ∈ G1 and
then searches list L2 for entries of the form (U, V1, . . . , Vt,L, ωj, κj) for pairs
(ωj, κj) ∈ G2 × {0, 1}λ indexed by j ∈ {1, . . . , qh2}.
• For each one of such entries, B checks whether
ODBDH(P, QID, U, Ppub, e(Ppub, Vi)/ωj) = 1
(meaning that ωj = e(Ppub, Vi)/e(U, dIDi)). If the unique ω ∈ G2 satisfy-
ing the latter relation is found, B uses the corresponding κ to compute
M = Dκ(W ) and return the result to A.
• If no entry of L2 satisﬁes the above condition, B draws κ R← {0, 1}λ, stores
the information (U, V1, . . . , Vt,L, ?, κ, e(Ppub, Vi), QIDi), where ? denotes
an unknown G2 element, into L(cid:3)
2 and returns M = Dκ(W ) as a plaintext.
– H2(.) queries: for such a query on an input (U, V1, . . . , Vt,L, ω), B halts
and outputs ω as a result if ODBDH(P, aP, bP, cP, ω) = 1. Otherwise, it
ﬁrst checks whether H2 was previously deﬁned for that input. If so, the