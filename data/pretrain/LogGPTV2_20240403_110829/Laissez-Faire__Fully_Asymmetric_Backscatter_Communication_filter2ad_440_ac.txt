# LF-Backscatter: A Comprehensive Overview

## Signal Components and Edge Detection
- **Signal Components:**
  - \( V(t_x) \): Transmitted signal
  - \( V(rx) \): Received signal
  - \( V(\text{background}) \): Background noise
  - **I Channel** and **Q Channel**: In-phase and Quadrature components

- **Edge Detection:**
  - Use IQ signals to detect edges.
  - Instead of analyzing signal edges in the time domain, we should examine them in the in-phase (I) and quadrature (Q) dimensions, as shown in red in the example.

## Addressing Edge Collisions
- **Assumption:**
  - Initially, it was assumed that signal edges do not collide. However, with a large number of tags, edge collisions can occur.
- **Solution:**
  - One approach is retransmissions, but in many cases, this may not be necessary.

### Example of Edge Collision
- **Tags:**
  - Tag1 and Tag2 have different signal edges \( e1 \) and \( e2 \).
  - When these edges collide, they add up, resulting in nine clusters in the IQ dimension, each encoding the state of both edges.
  - For instance, the top cluster is contributed by two rising edges, and the bottom cluster is caused by falling edges.
  - These nine clusters are separable if the Signal-to-Noise Ratio (SNR) is sufficient. For a colliding edge signal, we only need to classify which cluster it belongs to for decoding.

- **Limitation:**
  - This approach will not work if more than two tags collide, as the number of clusters becomes unmanageable. In such cases, retransmission is necessary.

## LF-Backscatter: The Big Picture
- **Key Components:**
  - **IQ-Based Edge Detection:** Detects signal edges in the IQ domain.
  - **Collision Detection and Recovery:** Identifies and resolves collisions using IQ cluster information.
  - **Decoding:** Assigns edges to each tag and decodes the data.

- **Scenarios:**
  - **Without Collision:** Two tags start at different time frames.
  - **With Collision:** Two tags start at the same time frame.

- **Process:**
  - Start by detecting signal edges in the IQ domain.
  - Then, detect and resolve collisions using IQ cluster information.
  - Finally, assign edges to each tag and decode the data.

- **Details Omitted:**
  - How to associate edge streams to nodes.
  - Handling unknown numbers of tags, unknown bitrates, clock drift, and edge detection errors using a Viterbi decoder.
  - Refer to the paper for these details.

## Evaluation
- **Implementation:**
  - Implemented on a software-defined radio, USRP N210, with a SBX daughterboard.
  - Each tag can transmit up to 1 Megabit per second.
  - The front-end has a bandwidth of 40 MHz and uses separate antennas for transmission and reception.

- **Throughput:**
  - LF-Backscatter achieves 15x throughput improvement over TDMA and 7x over Buzz.
  - Stable bits per Joule even with an increase in the number of tags.
  - More energy-efficient than TDMA and Buzz, especially when the number of tags increases.

- **Energy Efficiency:**
  - LF-Backscatter is 20x more energy-efficient than TDMA/Buzz.
  - Energy efficiency remains stable with an increasing number of tags, unlike TDMA and Buzz, which suffer from control message overhead, repeated transmissions, and collision handling.

## Trade-offs
- **Sacrifices:**
  - LF-Backscatter requires higher SNR to achieve the same performance as ASK.
  - Needs 4 dB additional SNR, reducing its working range by about 20% compared to ASK.

- **Advantages:**
  - Uses a subset of the hardware used by standard passive RFID tags.
  - Can switch between LF-Backscatter and ASK without hardware modifications.

## Conclusion
- **Summary:**
  - LF-Backscatter achieves the best power and energy efficiency at the cost of higher SNR requirements.
  - Allows multiple tags to transmit at any bitrate.
  - Balances throughput, power, and SNR for ultra-low-power backscatter-based devices.
  - Future work includes designing next-generation backscatter-based wearable devices.

- **Final Remarks:**
  - With that, I conclude my talk and am happy to take questions.

---

**Computer Science@UMASS Amherst**