invalid  pages  in  the  media  in  order  to  perform  block  erase 
operation,  which  will  free-up  memory  space  for  new  data. 
The wear-leveling module manages the limited endurance of 
the flash media by ensuring uniform program-erase operation 
on all the blocks. 
3. Threat model and Assumptions 
Adversary Model:  We  assume  the  adversary  has  one-time 
access  to  the  flash  memory  device.  In  addition,  we  assume 
that adversary can perform multiple read and erase operations 
on  the  content  of  the  flash.  We  also  assume  that  adversary 
aims  to  illegitimately  derive  sensitive  information  which  is 
not available through a “legitimate” interface. For example, 
we assume adversary has access to the raw NAND memory 
chip  and  he/she  can  perform  low  level  memory  operation, 
such as partial erase, shifted read or read retry, etc.  
Assumption: We assume adversary  can read the data from 
the  NAND  flash  without  any  error  correction.  Most  of  the 
NAND  chips  do  not  include  error  correction  engine  on  the 
memory chip. Instead, the ECC engine is typically included 
in  the  FTL.  We  also  assume  that  adversary  can  access  the 
NAND flash chip with bypassing the FTL.  
4. Data Retrieval after Scrubbing 
4.1 Data Retention (DR)  
Flash memory technology has finite data retention character-
istics as the stored charge on the floating gate (and trapped 
electrons in the oxides) continuously leaks through surround-
ing oxides [6]–[8]. Because of DR, when data is stored and 
kept for some time, the programmed state cell tends to lose 
its charge and its threshold becomes lower. Figure 3 describes 
USENIX Association
29th USENIX Security Symposium    1401
NAND Flash ArrayFile systemRead/write(physicaladdress)Read/write (logical address)ApplicationRead/write (file)Flash Transition LayerHost SystemRemovable StorageBlock-based access interfaceFlash translation layer…..NAND flasherase blockpageFile system(a)(b)Figure 3: (a) Threshold voltage distribution of memory cells for stored ‘1’ and ‘0’. Programmed state has a higher threshold 
than the erased state. (b) Down-shift of threshold distribution of programmed state due to data retention effect. (c) Threshold 
voltage distribution difference between weak ‘0’ and strong ‘0’. The newly programmed cell has a higher threshold than the 
old one. 
the data retention effects on the 𝑉𝑡 distribution for SLC type 
of storage. In Figure 3(a), there are two states: erase state and 
programmed state. Flash manufacturers keep enough voltage 
margin between the two states. The read reference voltage is 
typically chosen in the middle of the voltage margin. When 
the cell voltage is greater than the reference voltage, it reads 
as logic zero and when the cell voltage is lower than this, the 
data is read as one. In Figure 3(b) we show the DR effect on 
the cell 𝑉𝑡 distribution. Usually, program state 𝑉𝑡 distribution 
moves  down  with  DR,  while  erase  state  𝑉𝑡  distribution  re-
mains almost the same. If the data retention time is not large 
(less than  1-2  years), the program  state  will  still be read as 
zero even after down-shift of cell 𝑉𝑡 distribution. 
4.2 Scrubbing after Data Retention  
When data scrubbing is applied for page level sanitization af-
ter DR, all the data of the page becomes zero. It is important 
to note that even though all the bits are read as zero digitally, 
their threshold voltage distribution will have significant and 
detectable differences. In Figure 3(c), the data retention effect 
on the “scrubbing” process is explained. When scrubbing op-
eration is applied to a page, which has gone through a finite 
time of data retention, only the erased cells are programmed. 
The zeros in the original data remain at the  same 𝑉𝑡. How-
ever, the newly written zero has higher threshold than the old 
zeros as old zeros already lose some of their charges. In Fig-
ure 3(c), the red zeros are the old zeros which have a lower 
threshold  distribution  than  the  black  zeros  which  have  a 
higher threshold distribution.  Thus, the  data retention  prop-
erty is the key characteristic to identify the same logical zero 
as weak zero and strong zero based on their threshold voltage 
distribution. In other words, if scrubbing is done immediately 
after writing the data, the difference between old and new ze-
ros will be minimal and it will be difficult to recover the data. 
If  the  time  difference  between  write  and  scrubbing  is  high, 
there will be a higher chance that data will be recoverable. 
4.3 Partial Erase  
We  utilized  partial  erase  of  a  block  in  order  to  recover  the 
scrubbing  based  deleted  data.  A  full  erase  is  the  process 
where all the bits in a memory block turn into the logic state 
“1”. The datasheet of the specific flash chip reports the typi-
cal erase time of a block. If the erase operation is interrupted 
in between by issuing a “RESET” command, then the opera-
tion is called partial erase. Partial erase will lower down the 
𝑉𝑡 distribution of the programmed cells in step by step, which 
provides a method to distinguish the strong vs weak zeros us-
ing  standard  digital  interfaces.  Alternative  methods  exist  in 
order to determine the cell 𝑉𝑡 by using digital interfaces, such 
as read retry,  which involves  counting fail bits  with shifted 
read  levels[9],  [10].  However,  many  SLC  NAND  chips  do 
not  include  read  retry  feature.  Hence  partial  erase  offers  a 
more generic method to distinguish weak vs strong zeros. 
4.4 Data Recovery with Partial Erase 
The adversary can utilize the partial erase operation to distin-
guish  between  strong  and  weak  zeros  on  a  fully  scrubbed 
page (meaning all the data being zeros). For example, if the 
adversary  performs  partial  erase  on  a  fully  scrubbed  page 
with  fine  resolution  of  erase  time,  the  weak  zeros  will  first 
turn into ones while the strong zeros will still be read as zeros. 
Thus, adversary can recover the original data by distinguish-
ing the strong and weak zeros on a deleted page.  
In  Figure  4  we  illustrate  the  data  recovery  process  with  an 
Einstein image (binary) as an example. We first store the bi-
nary  image  in  a  NAND  block  (Toshiba  SLC  Part  # 
TC58NVG3S0F). The size of the image is 276,000 bytes and 
it requires 64 SLC pages for getting stored in the memory. In 
order to accelerate the data retention effects, we then bake the 
NAND chip at high temperature (120°C) for 3 hours and read 
back  the  image  data.  Figure  4(b)  shows  the  post-bake  Ein-
stein image. From a digital viewpoint, there is no difference 
between the pre-bake Einstein image and the post bake one. 
1402    29th USENIX Security Symposium
USENIX Association
1 0 1 1 1 0 1 0 1 0 0 1 1Page n01VrefVErased stateProgrammed state(a)1VrefVErased stateProgrammed state(after DR)(b)0VrefVThreshold voltage difference of weak zero and strong zero0 00 0 0 00000 00 0(c)1 01 1 1 01 01 001 1AfterDRAfterScrubbingWeak “0”Strong “0”Figure 4: Data recovery from scrubbed pages. (a) Original Einstein image (460 × 600) which is stored to the NAND flash. 
(b) Original image after data retention takes place (c) Scrubbed image, this is all ‘0’ image. We bake the chip for 3 hours in 
an oven of temperature 120°C in order to accelerate the data retention effect. (d) The raw image recovered using partial erase 
operation. (e), (f), (g) & (h) Threshold voltage distribution for corresponding image of (a), (b), (c) & (d).  
Algorithm 1: Partial erase on scrubbed data 
Initialize: 
Target block where data has been stored and 
scrubbed previously (TargetBlock); 
Measured partial erase time based on data reten-
𝑒) 
tion information (PEtime) and define delay (𝑡𝑑
Number of pages in a single block (Blockpage); 
Perform: 
1: 
2: 
3: 
4: 
5: 
Retrieve data from each page of target block   
using partial erase (Retrievepage); 
Issue NAND block erase command; 
Apply time delay (𝑡𝑑
Issue RESET command (FFh); 
Issue READ command to read NAND flash data; 
Save the retrieved bytes; 
𝑒); 
However,  the  analog  threshold  voltage  of  the  memory  bits 
holding the data in Figure 4(a) and the  Figure 4(b) are dis-
tinctively different as illustrated with the downshifted thresh-
old voltage distribution of zero bits in Figure 4(f). Next, we 
perform the scrubbing based deletion operation and read the 
data back. Figure 4(c) shows the deleted image. As expected 
from  a  scrubbed  NAND  data,  the  image  looks  completely 
black or all the bits of the image are at zero state. However, 
in  terms  of  analog  threshold  voltage,  there  is  an  important 
distinction between the zero bits. The original zero bits have 
slightly lower threshold voltage than the newly created zero 
bits, even though digitally both are read as zeros. Finally, we 
perform partial erase operation on the scrubbed image to re-
cover back the original data. Partial erase operation will shift 
down  the  𝑉𝑡  distribution  of  both  strong  and  weak  zeros  in 
such a way that the memory read operation with a fixed ref-
erence  voltage  will  identify  most  of  the  weak  zeros  as  one 
bits and most of the strong zeros as zero bits (see Figure 4(h)).   
We invert the bit  map after partial erase operation and plot 
the recovered image in Figure 4(d).  
Algorithm  1  briefly  describes  the  command  sequence  used 
for data retrieval process. First, we select a block where data 
was stored for some time and then scrubbed recently. So, all 
the  data  is  read  as  0  with  standard  NAND  read  command. 
Then, according to the data storing information (i.e. the time 
when the data stored and scrubbed), we calculate the optimal 
partial erase time (PEtime). And, then upon applying the pre-
cise time delay for the partial erase process, we also issue the 
NAND  Read  operation  to  read  data  from  a  specified  page. 
The data read after the partial erase is essentially the inverted 
version of original stored data. So, we invert the data and save 
as Retrievepage data.  And the  final stopping criteria requires 
90% of the data become in the erased state. Until this require-
ment fulfills, the partial operation will continue for the spe-
cific block and keep saving data from the specified page for 
each partial erase operation. 
5. Analog Scrubbing 
In principle, analog sanitization of the flash media will ensure 
true  destruction  of  the  stored  data.  Analog  sanitization  of 
USENIX Association
29th USENIX Security Symposium    1403
Original imageScrubbed imageAfter few daysImage after DRScrubbingPartial Erase01VrefVErased stateProgrammed state1Erased stateProgrammed state(after DR)0Vref0Weak “0”0VrefStrong “0”0Weak “0”1VrefStrong “0”(a)(b)(c)(e)(f)(g)(h)VVV(d)Recovered imagesemiconductor memory is always challenging because there 
are many electronic processes that leave imprints of remnant 
data on the device characteristics[11]–[13]. The block erase 
operation of the NAND  flash device is closer to the analog 
sanitization  of  the  flash  media,  as  it  ensures  information  is 
lost  by  removing  the  floating  gate  charge  from  the  pro-
grammed cells. However, due to fundamental array architec-
ture of NAND flash, there is no equivalent page-level erase 
command that converts all the bits in a page into erased bits. 
Hence developing analog scrubbing method is essential in or-
der to securely delete page data in the NAND array. In this 
work, we propose the analog sanitization method of NAND 
memory pages using the history of data creation such as page 
creation  time.  The  basic  idea  is  to  create  an  all-zero  page 
(similar  to  digital  scrubbing)  with  the  additional  constraint 
that all the zero bits have undistinguishable analog threshold 
voltage  distribution.  We  implement  this  idea  using  partial 
program technique as described in the next section. 
5.1 Partial Page Program 
A NAND page generally takes ~100-1000 µs to be fully pro-
grammed  based  on  different  technology.  The  partial  page 
program method on a NAND page is typically implemented 
by issuing a NAND RESET command after the NAND write 
command.  The  RESET  command  will  forcibly  stop  the 
NAND write operation before its stipulated time. As a result, 
the memory cells get programmed to a lower threshold volt-
age level than  the corresponding fully programed threshold 
𝑝
level. In addition, introducing a time delay (𝑡𝑑
) between the 
NAND write command and the RESET command, it is pos-
sible control the analog threshold voltage of the partially pro-
grammed cells. 
5.2 Analog Scrubbing with Partial Page Program 
The goal of analog scrubbing is to match the threshold volt-