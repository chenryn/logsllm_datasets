CTF特训营：技术详解、解题方法与
27.4高存器地址和SRAM地址的处理方法
1024/1144
图27-15经过寄存器识别后的伪代码
这样一来，我们就处理好了特殊功能寄存器以及RAM的地址范
围，接下来，我们的分析就容易多了。
---
## Page 1025
CTF特训营：技术详解、解题方法与
27.5IDA之CPU高级选项
1025/1144
27.5IDA之CPU高级选项
继续上面的例子，我们知道，ARM的架构有许多种，IDA虽然可
以在一定程度上智能地选择合适的子架构来分析代码，但要想达到最
好的分析效果，我们最好指定最精确的属性。如图27-16所示，我们
在Processortype选择ARM后，单击右侧的Set按钮，使CPU设置生效
同时，右侧还有一个Processoroptions按钮，这个就是CPU的高级选
项了，下面我们打开来看一下。打开后的界面如图27-17所示。
Load a new file
Load file C:\Users\wjh\DesktoplconfusedARM.hex as
Intel Hex Object Format [hex.ldw]
Binary file
Processor type
AB Little-endian [A]
Set
Analysis
Loading sement
10x00000000
 Enabled
Kernel options 1Kernel options 2
Loading offset
0x00000000
Indicator enabled
Frocessor options
Options
Loading opti ons
Load resources
Fill segent gaps
enane DLL entries
Create sements
Hanual load
Create FLAT goup
Load as code segment
OK
aDcel
Help
---
## Page 1026
CTF特训营：技术详解、解题方法与
27.5IDA之CPU高级选项
1026/1144
图27-16
CPU高级选项的进入位置
在弹出的界面里，继续点击EditARMarchitectureoptions按钮
接下来会弹出如图27-18所示的对话框。
Load a new fle
X
Load file C:\Usersljh
ARM specificoptions
X
Intel Hex Object Form
Binary fle
Sinplify instruetions
Disable pointer dereferencing
Enable macros
Processor type
NoautomaticARH-THBswitch
AR Little-endian [AR
Disable BL junps detection
、
Set
Loading segment
Edit AR architecture options
options 1Kernel options 2
Current architecture:
Loading offset
0x0000
Base architecture: netaarn
Processor options
AR instruotions:Yes
Options
Thunb instruotions:Thunb2
Loading options
Thunb2-EE extension:Yes
VFP instruetions:VFPv8
Fill sement gaps
Advaneed SIM instructions (KEOH):KEONv8
xScale architecture:Tes
Create sements
IntelWirelessMTechnology:Wv2
Create FLAT group
OK
Cancel
Help
Load as code se
XO
Cancel
Help
图27-17
CPU高级选项界面
---
## Page 1027
CTF特训营：技术详解、解题方法与
27.5IDA之CPU高级选项
1027/1144
ARM architecture options
Base architecture
VFP instructions
ARMv4
None
OvFPv1
ARMv4T
VFPv2
ARMv5T
VFPv3
ARMv5TEJ
vFPv4
VFPv8
OxScale
ARMv6
Other options
BE-6code
ARMv6T2
Thumb instructions
ARMv6
ONo
ARMv7-
Thumb
ARMv7A&R
Thumb-2
ARMv8
ARM instructions
ONo
Any
Yes
Advanced SID (NEON)
Wireless MX
ONo
Hone
OYes
W1
Yes with FMA
w2
v8
OK
Cancel
Help
---
## Page 1028
CTF特训营：技术详解、解题方法与
27.5IDA之CPU高级选项
1028/1144
图27-18
CPU架构选项
在前面的介绍中，我们知道，CortexM架构属于ARMv7-M，而
默认的CPU选项是any，即IDA会根据实际情况进行智能分析，那么
我们这次就直接选择ARMV7-M，看看IDA将如何做出分析。选择后确
认，我们再到入口点0x8000100处看一下，如图27-19所示。
seg000:080000EC
CODE16
seg000:080000EC
seg000:080000EC
10c_80000EC
；CODE XREF:Seg000:1
seg000:080000EC
SP,=0x20000730
；DATA XREF:Seg000:1
seg000:080000EC
LDR.V
seg000:080000F0
CODE32
seg000:080000F0
BL
1oc_8000188
Seg000:080000F4
CODE16
seg000:080000F4
seg000:080000F4
seg000:080000F4
seg000:080000F4
Seg000:080000F4Sub_80000F4
；CODE XREF:Seg000:1
seg000:080000F4
LDR
R0，=(sub_8001084+1)
seg000:080000F6
CODE32
seg000:080000F6
BX
R0;Sub_8001084
seg000:080000F6 ;End of function sub_80000F4
seg000:080000F6
seg000:080000F6
seg000:080000F80fF_80000F8
DCD sub_8001084+1
；DATA XREF:Sub_8001
seg080:080000FC
duord_s0800FC
DCD 0x20000730
；DATA XREF: Seg000:
seg000:08000100
seg000:08000100
：
LDR
R0,=(sub_8000A00+1)
seg000:08000102
X78
R0；Sub_8000A00
seg000:08000104
LDR
R0,=(10C_80000EC+1)
seg000:08000106
BX
R0;1oc_80000EC
seg000:08000108
seg000:08000108
CODE16
seg080:08088108
seg000:08000108
10c_8000108
；CODE XREF: Seg000:
seg000:08000108
1oc_8000108
seg000:0800010A
seg000:0800010A
Seg000:0800810A10c_800010A
；CODE XREF:Seg000:
seg000:0800010A
B
1oc 800010A
图27-19
修改CPU具体架构之后的效果
---
## Page 1029
CTF特训营：技术详解、解题方法与
27.5IDA之CPU高级选项
1029/1144
我们将会很惊喜地发现，IDA已经正确识别了入口点，并且针对
CortexM的Thumb-2指令集做出了干分准确的分析。这样就能节省不
少分析步骤。剩下的分析，就与正常的逆向工程一样了。
---
## Page 1030
CTF特训营：技术详解、解题方法与
27.6动态调试环境搭建1030/1144
27.6动态调试环境搭建
在前面的章节中，我们讲到了使用DA分析嵌入式固件的一些技
巧，属于静态分析的范畴，但是在大多数情况下，我们需要动态调试
指定的程序，一般会使用与目标程序相同CPU的设备进行真机调试
但比赛中很多情况都是难以预料的，我们也不可能同时准备如此多的
设备，于是，在软件仿真环境下调试也是我们必须掌握的技巧之一。
本节将介绍一些常见的调试环境及工具。
1.Linux类环境
诸如ARM-Linux、MIPS-Linux这类基于GNU/Linux操作系统的可
执行文件，一般都可以使用基于Debian的环境。Qemu是一个多架构
虚拟化系统，里面包括所有常见架构的虚拟化环境，而Debian官方出
了一套基于Qemu针对不同架构CPU的镜像，所以可以十分方便地下
载到（下载地址为https://people.debian.org/~aurel32/qemu/）。
Debian官方除了提供最常见的i386/x86_64架构的虚拟化Debian
系统以外，还提供了armel、armhf、mips、mipsel、PPC、sh4、
sparc等架构，几乎涵盖了使用Linux系统的所有CPU类型。Debian还
---
## Page 1031
CTF特训营：技术详解、解题方法与
27.6动态调试环境搭建
1031/1144
很有特色地提供了FreeBSD系统的虚拟机，不过，只有i386和x86_64
平台的。每种架构的页面上都有镜像的使用说明，但是为了方便初学
者参考，这里以mipsel为例，这里列举几个镜像，依次简单说明。
·文件系统（squeeze
发行版)：
debian_squeeze_mipsel_standard.qcow2
内核2.6.32（32位）：vmlinux-2.6.32-5-4kc-malta
内核2.6.32（64位）：vmlinux-2.6.32-5-5kc-malta
文件系统（wheezy发行版)：debian_wheezy_mipsel_standard
qcow2
内核3.2.0（32位）：vmlinux-3.2.0-4-4kc-malta
内核3.2.0（64位)：vmlinux-3.2.0-4-5kc-malta
对于版本的选择，大家可以根据自己的需要来选择32位或64位
系统，以及Debian的发行版本。推荐大家使用Linux系统启动，需要
事先完整安装qemu，这里以32位3.2.0内核和wheezy发行版为例进行
说明，启动方法如下：
qemu-system-mips -M malta -kernel vmlinux-3.2.0-4-4kc-malta -hda debian_wheezy.
---
## Page 1032
CTF特训营：技术详解、解题方法与
27.6动态调试环境搭建
1032/1144
mips_standard.qcow2-append"root=/dev/sda1console=tty0"-redirtcp:23946:
23946-redirtcp:10022::22
在启动命令行中，转发了2个端口，23946和22，虚拟机默认升
启了ssh服务，所以只需ssh本机的10022端口即可。23946端口可用
已选择，默认用户名密码为root/root
对于ARM架构的虚拟机，使用方法类似，只是在启动虚拟机
时，“-M”参数不同以及ARM-Linux需要指定initrd的区别，读者可以
根据网站上的说明自行尝试。
2.裸机环境（无操作系统）
针对之前ConfusedARM这道题，程序在实际运行时是没有操作
系统的，属于裸机运行的模式，其文件结构并不符合e标准，因此在
ARM-Linux环境中是无法正常运行的。这时候就需要一些针对裸机系
统的模拟工具。日本有一个实验室制作了几乎所有的芯片交叉编译环
境，同时还提供了对应平台的模拟器用于运行程序，还有ld、as和
gdb之类的工具，非常方便。读者可以自行下载（http://kozos.jp
vmimage/burming-asm.html），该编译环境是一个基于CentOs的虚拟
---
## Page 1033
CTF特训营：技术详解、解题方法与
27.6动态调试环境搭建
1033/1144
机，以ARM环境为例，可以使用arm-elf-run程序来运行我们要分析的
目标。实际功能还有很多，大家可以自行挖掘。
另外，如果不习惯使用虚拟机，也可以使用Docker，功能是完全
相同的，下载地址为https://hub.docker.com/r/blukat29/cross/
---
## Page 1034
CTF特训营：技术详解、解题方法与
27.7专业调试工具1034/1144
27.7专业调试工具
本节将向大家介绍一些商业软件，下女介绍的工具本属于电子工
程师所使用的开发和调试工具（大多数电子工程师仪会使用它的编译
器以及调试环境），但由于其具有强大的仿真内核，可以完美仿真其
宣传所支持的产品，而自这些软件甚至可以直接调试生成的hex或者
bin/elf文件，正好为我们做逆向分析提供了方便。本节将介绍两款最
为好用的专业软件。
1.MDK
MDK原为KeI公司开发的业界领先的微控制器（MCU）软件开发
工具，其中最有名的是uVision系列IDE。有超过10万名微控制器开发
人员在使用这种得到业界认可的解决方案。其KeiC51编译器自1988
年引入市场以来已成为事实上的行业标准，并支持超过500种8051变
种。2005年，Keil公司被ARM收购。其Keil产品线更名为
MicrocontrollerDevelopmentKit（MDK)，软件仍以uVision命名。
MDK软件支持的CPU内核类型包括8051、C16X、ARM7、ARM9以及
CortexM，这些均可以使用MDK进行开发和调试。由于该软件为商业
---
## Page 1035
CTF特训营：技术详解、解题方法与
首工
1035/114
软件，所以资源还需要各大读者自行寻找。这里还需说明一点的是
MDK在5.x版本之前，采用了集成所有当时所支持CPU的方式，因此
安装后直接可用，而在5.x版本之后，默认不安装任何DevicePack
即芯片支持包，而是采用组件的方式来让用户自行选择所需要支持的
CPU包。因此安装好uVision本体还是不够的，还需要安装对应的
DevicePack，对应的DevicePack可以到这里下载：https:ll
www.keil.com/dd2/pack/，一般下载对应厂商的Pack即可。前面的例
子中，我们只需要下载STMicroelectronicsSTM32F1SeriesDevice
Support即可，其他的Pack可以在有需要的时候再下载。
这里仍然使用前面的例子来简单介绍一下如何使用MDK来反汇
编调试单片机的hex和bin程序。
安装软件的过程这里不再赘述，如果有不明白的地方可以自行参
考网络上的教程，这里给出新建工程以及调试的方法。首先我们单击
Project→NewuVisionProject...，如图27-20所示，然后随便找个地方
保存即可（在创建工程之前，首先将要调试的hex文件与工程放在同
一个目录下）。
保存之后则会弹出如图27-21所示的对话框，让我们选择CPU。
---