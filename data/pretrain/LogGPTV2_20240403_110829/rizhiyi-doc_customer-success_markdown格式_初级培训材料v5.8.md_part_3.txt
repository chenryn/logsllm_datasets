mkdir /opt/rizhiyi
tar zxf rizhiyi-dataengine-3.0.0.1-release.tar.gz -C /opt/rizhiyi
cd /opt/rizhiyi/deployer
准备安装用脚本
创建 nodes.list 文件
初始化前需要创建 nodes.list 文件，该文件是集群服务器登录信息，包含
IP SSH端口 root root密码
该文件有严格的格式要求，请务必保证，其中对用户名的要求为root用户名。
格式要求：
每台机器1行，要求有4列，每列含义如下：
IP SSH端口 root root密码
vi /opt/rizhiyi/deployer/nodes.list按照格式写入机器信息。
安装包内提供了一个示例（/opt/rizhiyi/deployer/node.txt.demo）：
# cat /opt/rizhiyi/deployer/node.txt.demo
192.168.1.145 22 root 123456
192.168.1.146 22 root 123456
192.168.1.147 22 root 123456
另外需要保证这里列举的所有机器都可以从运行安装脚本的机器通过ssh进行访问，否则
安装将会出错无法进行。
17
日志学院
创建 deploy.list 文件
该文件是模块分布信息，包含模块：IP列表。该文件有严格的格式要求，请务必保证。
格式要求：
每个模块1行，模块名全部小写。和IP列表之间用冒号分隔。IP列表之间用逗号分隔
模块名:IP1,IP2,IP3,...
这里给出一个示例，模块切勿修改，只需要修改IP即可：
l 不想指定的模块可不写，系统会自动安装。
l 其中 mysql/influxdb 会安装在执行 install.py 的机器上。heka 会安装在所有机器。
l 其余模块也可以不指定，安装脚本会根据自动分配的规则进行分配。
编辑 deploy.list 文件，写入模块分布信息。
vi /opt/rizhiyi/deployer/deploy.list
这里给出一个示例：
# cat /opt/rizhiyi/deployer/instance.txt.demo
zookeeper:10.0.0.4,10.0.0.5,10.0.0.6
kafka:10.0.0.4,10.0.0.5,10.0.0.6
yottasearch:10.0.0.4,10.0.0.5,10.0.0.6
yottaweb:10.0.0.4,10.0.0.5
yottaapi:10.0.0.5
haproxy:10.0.0.5,10.0.0.6
nginx:10.0.0.5,10.0.0.6
collector:10.0.0.4,10.0.0.5
heka:10.0.0.4,10.0.0.5,10.0.0.6
frontend:10.0.0.4,10.0.0.5
logparserserver:10.0.0.4
logriver:10.0.0.4,10.0.0.5,10.0.0.6
splserver:10.0.0.5,10.0.0.6
archiver:10.0.0.5
mongodb:10.0.0.5
influxdb:10.0.0.5
beaver_master:10.0.0.5
beaver_datanode: 10.0.0.4,10.0.0.5,10.0.0.6
beaver_broker:10.0.0.5
人为指定模块分布时，具体模块分布可参考1.6集群模块分布小节。
18
日志学院
开始安装
安装说明：
l 必须通过 --license 参数指定license文件的绝对路径。
l 必须通过 --localaddr 参数指定运行安装脚本的机器IP
l 必须通过 --engine 参数指定运行集群使用的搜索引擎
l 必须使用 --nodesfile 参数指定 node.list 文件
l 必须使用 --deployfile 参数指定 deploy.list 文件
l 需要使用root用户运行安装命令
l 安装失败 请参考 《第三部分 安装故障排查》进行清理
l 安装成功 请参考 《第四部分 开始使用》进行访问
安装命令示例(可以参考 /opt/rizhiyi/deployer/install_cmd.Readme )
python install.py --localaddr 本机IP --action install --license License安装包绝对路径 -
-deploymode assign --nodesfile nodes.list文件绝对路径 --deployfile deploy.list文件绝对
路径 --engine beaver
安装成功之后将会打印如下信息：
2018-02-26 20:20:59,897 [Install][INFO] Stopped installation server
2018-02-26 20:20:59,898 [Install][INFO] Install had been finished!!
2018-02-26 20:20:59,898 [utils.process_server][INFO] Stopping Server http_server
2018-02-26 20:20:59,900 [utils.process_server][INFO] Server http_server, pid 11130 exit
2018-02-26 20:20:59,999 [utils.process_server][INFO] Stopping Server http_server
1.4 安装故障排查
安装失败的话，需要清理系统环境之后才能重新部署。
失败清理
在运行安装脚本的机器执行如下命令即可完成清理工作：
使用node.list指定需要清理的机器
python clear.py --nodesfile /opt/rizhiyi/deployer/nodes.list
只清理当前的机器
python clear.py
19
日志学院
故障定位
1、安装脚本会打印安装日志到屏幕，并输出到日志文件install.log中，一般情况下出现错
误时，请检查错误日志，确定出错原因。无法确定详细原因时，可以将install.log 以及
/tmp/rizhiyi_manager_install/output/* 这些文件打包发给研发进行分析。
2、安装过程中执行脚本出错，一般会提示查看xxx文件获取详细信息：
这时候可以进到 /tmp/rizhiyi_manager_install/output/ 目录下，查看提示的文件，即可看
到脚本执行错误的原因
3、提示xx资源不合要求，无法安装。
这时候可以修改 scripts/environment_check_action.sh，去掉对应的检查，或者调小阈值即
可。
4、安装过程中执行脚本出错，显示xx任务超时时，可能不会指明要看哪个文件
这时候可以进到 /tmp/rizhiyi_manager_install/output/ 目录下，查看最新的日志文件，即
可看到脚本执行错误的原因
修正错误的原因之后，可以在 /opt/rizhiyi/deployer 下执行 python clear.py --nodesfile
/opt/rizhiyi/deployer/nodes.list （集群）或者 python clear.py（单机）清理掉之前安装失
败的数据，再次重新执行安装命令即可。
5、有些情况下，在执行安装命令时会显示 Import error 之类的错误。这个可能是由于系
统的python被破坏了。这时可以使用rizhiyi自带的python环境进行安装。操作过程为
tar zxf /opt/rizhiyi/deployer/package/python.RHEL.tar.gz -C /opt/rizhiyi
然后在执行安装命令时将原来的python都改为 /opt/rizhiyi/python/bin/python 即可。如
果还是不能正常执行，联系开发协助定位原因。
1.5 产品默认密码
1、日志易产品前台
直接访问 Nginx模块所在机器的IP即可。
用户名： admin
默认密码： PI:EMAIL
2、日志易运维后台
访问 rizhiyi manager （直接访问IP:8180即可。IP为执行install.py脚本的服务器IP。）
20
日志学院
用户名： admin
默认密码： admin
3、日志易模块日志自采集前台
直接访问 Nginx 模块所在机器的 IP:7180 即可。
用户名： admin
默认密码： all123456
1.6 集群模块分布
指定集群模块时可参考以下表格：
建议实
模块名称 模块功能 部署模式 扩容说明 备注
例数
日志采集模 默认每台主机都有该
heka
块 模块，无需指定
负责日志数
网络带宽占满时需要 涉及网络关系，需
collector 据接收及缓 集群 3
扩容 与客户确认
存
分布式消息
队列，用于
kafka 集群 3 与collector同理
缓存日志数
据
分布式应用
多主（主
zookeeper 程序协调组 3 与mysql同理
备）
件
如果发现task和sink
队伍挤压很多，机器
日志解析模 资源不足以支撑数据
logriver 集群 3
块 量时需要扩容，扩容
需要注意partion和
consumer的数量
日志解析配 多主（主
logparserserver 3 与mysql同理
置模块 备）
Beaver搜索
多主（主
beaver_master 引擎主节点 3 与mysql同理
备）
管理组件
Beaver搜索
做了大量聚合，所以
beaver_broker 引擎代理管 集群 给一半
内存要给够
理模块
21
日志学院
Beaver搜索
全部部
beaver_datanode 引擎数据节 集群 与logriver同理
署
点
备份节点，根据数据
量及客户需求进行扩
archiver 备份模块 集群 1
容，扩容时应保证最
终实例为奇数台
前台模块，涉及网
多主（主 前段访问模块，一般
nginx 代理服务器 3 络关系，需与客户
备） 无需扩容
确认
2台容易脑裂，所以一
提供前端 般3台。扩容时也应
yottaweb 集群 3
Web服务 保证最终实例为奇数
台
解析SPL查 group需要大量内
splserver 集群 3
询语句 存，所以内存要给够
权限认证和
多主（主 涉及网络关系，需
frontend License管理 3 与mysql同理
备） 与客户确认
模块
单节点工作，为考虑
高可用，需要2台以
数据库，用
多主（主 上，但2台容易脑
mysqld 于存储用户 3
备） 裂，所以一般3台。
配置信息
扩容时应保证最终实
例为奇数台
存储生产的
多主（主
mongodb 报表及告警 3 与mysql同理
备）
信息记录
存储
存放日志易集群性能
Manager上 多主（主
influxdb 1 数据，无需重复占用
性能图的数 备）
资源，一般不扩容
据
关于Beaver模块划分的相关问题：
一、集群模式中，如果机器配置相同而且数目足够，应该以什么样的比例分配模块才能更
好地利用系统资源？