1 − 1/q over K ←R G, we have cK 6= K, and DecO(τ, [y],cK) = 0.
τ :=
(cid:0)kτ + M∗
i (τ|i)(cid:1), computed by DecO(τ, [y],cK) on its j + 1-st query, is
completely hidden from A, up to its j + 1-st query to DecO, if (τ, [y],cK) is ill-formed. The
We prove Claim 2 similarly, arguing than in G′
argument goes exactly as for Claim 1. (cid:4)
2.i.1.j, the value K := [y⊤k′
i+1(τ|i+1) + M∗
τ ], where k′
1RF(1)
0RF(0)
6=0
Lemma 17: From game G2.i.2 to game G2.i.3
For all 0 ≤ i ≤ λ − 1,
|AdvG2.i.2(A) − AdvG2.i.3(A)| ≤
2QDec
p
,
where QDec is the number of times A queries DecO.
Proof of Lemma 17. In G2.i.3, we use the same decomposition Span(M⊥) = Span(M∗
1) as
that in G2.i.2. The entropy of the components of k′
1) increases from G2.i.2 to
G2.i.3. To argue that these two games are statistically close, we use a Cramer-Shoup argument
[CS03], exactly as for Lemma 16.
i+1{0, 1}i+1 → Zk
τ that lie in Span(M∗
We deﬁne RF(1)
p as follows:
0, M∗
RF(1)
i+1(τ|i+1) :=
RF(1)
RF(1)
i (τ|i) + RF′(1)
i (τ|i)
i (τ|i)
if τi+1 = 0
if τi+1 = 1
where RF′(1)
a random function.
: {0, 1}i → Zk
i
p is a random function independent from RF(1)
i
. This way, RF(1)
i+1 is
We show that the outputs of EncO and DecO are statistically close in G2.i.1 and G2.i.2. We
decompose the proof in two cases (delimited with (cid:4)): the queries with a tag τ ∈ {0, 1}λ such
that τi+1 = 0, and the queries with tag τ such that τi+1 = 1.
Queries with τi+1 = 1:
i
in G2.i.2, whereas it uses the random function RF(1)
The only diﬀerence between G2.i.2 and G2.i.3 is that k′
RF(1)
by deﬁnition of RF(1)
and the outputs of EncO and DecO are identically distributed. (cid:4)
i+1, for all τ ∈ {0, 1}λ such that τi+1 = 1, k′
τ is computed using the random function
i+1 in G2.i.3 (see Figure 3.5). Therefore,
τ is the same in G2.i.2 and G2.i.3,
3.1 Multi-ciphertext PCA-secure KEM
59
Queries with τi+1 = 0:
Observe that for all y ∈ Span(M, M0) and all τ ∈ {0, 1}λ such that τi+1 = 0,
{
i (τ|i)(cid:17)
{z
i+1(τ|i+1) + M∗
i+1(τ|i+1) + M∗
i (τ|i) + M∗
1RF′(1)
0RF(0)
1RF(1)
0RF(0)
1RF(1)
}|
G2.i.3
G2.i.2
1RF′(1)
i (τ|i)
}
z
y⊤(cid:16)kτ + M∗
= y⊤(cid:16)kτ + M∗
z
y⊤ ·(cid:16)kτ + M∗
=
i (τ|i)(cid:17) + y⊤M∗
{
i (τ|i)(cid:17)
|
=0
0RF(0)
i+1(τ|i+1) + M∗
1RF(1)
}|
where the second equality uses the fact M⊤M∗
1 = M⊤
0M∗
1 = 0, which implies y⊤M∗
1 = 0.
This means that:
and G2.i.3;
• the output of EncO on any input τ such that τi+1 = 0 is identically distributed in G2.i.2
• the output of DecO on any input (τ, [y],cK) where τi+1 = 0, and y ∈ Span(M, M0) is the
Henceforth, we focus on the ill-formed queries to DecO, namely those corresponding to τi+1 = 0,
and y /∈ Span(M, M0). The rest of the proof goes similarly than the proof of Lemma 16. See
the latter for further details. (cid:4)
same in G2.i.2 and G2.i.3.
Lemma 18: From game G2.i.3 to game G2.i+1
For all 0 ≤ i ≤ λ−1, there exists an adversary B2.i.3 such that T(B2.i.3) ≈ T(A)+(QEnc +
QDec) · poly(λ) and
|AdvG2.i.3(A) − AdvG2.i+1(A)| ≤ 2 · AdvUk(p)-mddh
G,B2.i.3
(λ) +
2
p − 1
where QEnc, QDec are the number of times A queries EncO, DecO, respectively, and poly(λ)
is independent of T(A).
1RF(1)
i+1(τ|i+1) is identically distributed to M⊥RFi+1(τ|i+1), where RFi+1 : {0, 1}i+1 → Z2k
Proof of Lemma 18. First, we use the fact that for all τ ∈ {0, 1}λ, the vector M∗
i+1(τ|i+1)+
M∗
is
1) is a basis of Span(M⊥). That means A’s view can
a random function. This is because (M∗
0, M∗
0, M∗
be simulated only knowing M⊥, and not M∗
1 explicitly. Then, to go from G2.i.3 to G2.i+1,
we switch the distribution of the vectors [y] sampled by EncO, using the QEnc-fold U3k,k(p)-
MDDH assumption (which is equivalent to the Uk(p)-MDDH assumption, see Lemma 2) twice:
ﬁrst with respect to a matrix M0 ←R U3k,k(p) for ciphertexts with τi+1 = 0, then with respect
to an independent matrix M1 ←R U3k,k(p) for ciphertexts with τi+1 = 1 (see the proof of
Lemma 15 for further details).
p
0RF(0)
Lemma 19: Game G2.λ
For any PPT adversary A, we have: AdvG2.λ(A) ≤ QEnc
p .
60
Chapter 3. Tightly CCA-Secure Encryption without Pairings
Proof of Lemma 19. We show that the joint distribution of all the values K0 computed by
EncO is statistically close to uniform over GQEnc. Recall that on input τ, EncO(τ) computes
K0 := [y⊤(kτ + M⊥RFλ(τ))],
where RFλ : {0, 1}λ → Z2k
p
is a random function, and y ←R Z3k
p
We make use of the following properties:
(see Figure 3.4).
Property 1: all the tags τ queried to EncO, such that EncO(τ) 6= ⊥, are distinct.
Property 2: the outputs of DecO are independent of {RF(τ) : τ ∈ TEnc}. This is because for
all queries (τ, [y],cK) to DecO such that τ ∈ TEnc, DecO(τ, [y],cK) = 0, independently of
y sampled by EncO are such that y⊤M⊥ 6= 0.
Property 3: with probability at least 1− QEnc
over the random coins of EncO, all the vectors
RFλ(τ), by deﬁnition of G2.λ.
p
We deduce that the joint distribution of all the values RFλ(τ) computed by EncO is uni-
formly random over (cid:0)Z2k
Property 2). Finally, from Property 3, we get that the joint distribution of all the values K0
computed by EncO is statistically close to uniform over GQEnc, since:
p (cid:1)QEnc (from Property 1), independent of the outputs of DecO (from
K0 := [y⊤(kτ + M⊥RFλ(τ)) = [y⊤kτ + y⊤M⊥
RFλ(τ)].
6=0 w.h.p.
| {z }
This means that the values K0 and K1 are statistically close, and therefore, AdvG3(A) ≤ QEnc
p .
Multi-ciphertext CCA-secure Public Key Encryption scheme
Our construction
We now describe the optimized IND-CCA-secure PKE scheme. Compared to the PCA-secure
KEM from Section 3.1, we add an authenticated (symmetric) encryption scheme (EncAE, DecAE),
and set the KEM tag τ as the hash value of a suitable part of the KEM ciphertext (as explained
in the introduction). A formal deﬁnition with highlighted diﬀerences to our PCA-secure KEM
appears in Figure 3.6. We prove the security under the Uk(p)-MDDH assumption.
Perfect correctness.
r ∈ Zk
It follows from the perfect correctness of AE and the fact that for all
p and y = Mr, for all k ∈ Z3k
p :
r⊤(M⊤k) = y⊤ · k.
3.2 Multi-ciphertext CCA-secure Public Key Encryption scheme
61
GenPKE(1λ):
G ←R GGen(1λ); H ←R H(1λ) ; M ←R U3k,k
k1,0, . . . , kλ,1 ←R Z3k
pk :=(cid:16)G, [M], H ,(cid:0)[M⊤kj,β](cid:1)1≤j≤λ,0≤β≤1(cid:17)
sk := (kj,β)1≤j≤λ,0≤β≤1
Return (pk, sk)
q
EncPKE(pk, m):
r ←R Zk
τ := H([y])
q ; y := Mr
kτ :=Pλ
j=1 kj,τj
K := [r⊤ · M⊤kτ ]
φ := EncAE(K, m)
Return ([y], φ )
DecPKE(pk, sk, ([y], φ )):
kτ
τ := H([y]) ;
K := [y⊤kτ ]
Return DecAE(K, φ) .
:= Pλ
j=1 kj,τj ;
Figure 3.6: PKE, an IND-CCA-secure PKE. We color in gray the diﬀerences with KEM,
the IND-PCA-secure KEM in Figure 3.2. Here, GGen is a prime-order group generator (see
Section 2.2.1) , and AE := (EncAE, DecAE) is an Authenticated Encryption scheme with key-
space K := G (see Deﬁnition 3).
62
Chapter 3. Tightly CCA-Secure Encryption without Pairings
Security proof of PKE
Theorem 8: IND-CCA security
The Public Key Encryption scheme PKE deﬁned in Figure 3.6 is IND-CCA secure, if
the Uk(p)-MDDH assumption holds in G, AE has one-time privacy and authenticity, and
H generates collision resistant hash functions. Namely, for any adversary A, there exist
adversaries B, B′, B′′ such that T(B) ≈ T(B′) ≈ T(B′′) ≈ T(A) + (QDec + QEnc) · poly(λ)
and
AdvIND-CCA
PKE,A (λ) ≤ (4λ + 1) · AdvUk(p)-mddh
G,B
(λ)
+ (QEncQDec + (4λ + 2)QDec + QEnc) · Advae-ot
+ AdvCR
H,B′(λ) + QEnc(QEnc + QDec) · 2−Ω(λ),
AE,B′′(λ)
(3.3)
where QEnc, QDec are the number of times A queries EncO, DecO, respectively, and poly(λ)
is independent of T(A).
We note that the QEnc and QDec factors in (3.4) are only related to AE. Hence, when
using a statistically secure authenticated encryption scheme, the corresponding terms in (3.4)
become exponentially small.
Remark 6: Extension to the multi-user CCA security
We only provide an analysis in the multi-ciphertext (but single-user) setting. However, we
remark (without proof) that our analysis generalizes to the multi-user, multi-ciphertext
scenario, similar to [BBM00, HJ12, HKS15]. Indeed, all computational steps (not counting
the steps related to the AE scheme) modify all ciphertexts simultaneously, relying for this
on the re-randomizability of the Uk(p)-MDDH assumption relative to a ﬁxed matrix M.
The same modiﬁcations can be made to many PKE simultaneously by using that the
Uk(p)-MDDH Assumption is also re-randomizable across many matrices Mi. (A similar
property for the DDH, DLIN, and bilinear DDH assumptions is used in [BBM00], [HJ12],
and [HKS15], respectively.)
Proof of Theorem 8. We proceed via a series of hybrid games described in Figures 3.7 and 3.8.
Let A be a PPT adversary. For any game G, we use AdvG(A) to denote the advantage of A in
game Gi.
• We transition from game G0 to game G1 using the collision resistance of H and the one-
time authenticity of AE to restrict the oracles DecO and EncO, as described in Figure 3.7.
In Lemma 51, we build adversaries B0 and B′
|AdvG0(A) − AdvG1(A)| = 2QDec · Advae-ot
AE,B0(λ) + AdvCR
H,B′
0
QEnc(QEnc + QDec)
0 such that:
(λ) +
pk
,
where QEnc, QDec are the number of times A queries EncO, DecO, respectively, and
poly(λ) is independent of T(A).
• To go from game G1 to G2, we use the MDDH assumption to “tightly” switch the dis-
tribution of all the challenge ciphertexts. Similarly than in Lemma 12, we obtain an
adversary B1 such that:
|AdvG1(A) − AdvG2(A)| ≤ AdvUk(p)-mddh
G,B1
(λ) +
1
p − 1
.
3.3 Security proof of PKE
G0, G1,G2, G3.i,G4 :
CEnc := ∅; b ←R {0, 1}
TEnc = TDec := ∅
G ←R
M ←R U3k,k(p);
GGen(1λ);
H ←R
H(1λ);
p
p
k1,0, . . . , kλ,1 ←R Z3k
M⊥ ←R U3k,2k(p) s.t. M⊤M⊥ = 0
Pick random RFi : {0, 1}i → Z2k