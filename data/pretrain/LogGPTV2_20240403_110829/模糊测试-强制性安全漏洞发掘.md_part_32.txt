12.6实例研究：REALPLAYERREALPIX格式化字符串漏洞
我们现在将要讲述如何使用notSPIKEfile来发现RealPlayer中的一个漏洞，该漏洞于2005年
9月被修补。第一步是任意选择RealPlayer所支持的一种文件格式。当然在这个例子中，选择了
RealPix格式。在经过大量的搜索之后，一些示例RealPix文件被编译，并被用于notSPIKEfile模
糊测试的基础文件。下面给出了一个示例：
cimf1>
chead title=“Rea1Pix(tm) Sample Effects"
author="Jay S1ag1e"
timefornat="dd:hh:mm:ss.xyz*
copyright=*(c)1998 Rea1Networks, Inc."
duration="46"
bitrate-“12000"
width="256"
height="256"
ur1=*http://www.rea1.com*
http:/www.idefense.com/intelligence/vulnerabilities/display.php?id=279
 htt:/www.idefense.com/intelligence/vulnerabilities/display.php?id=311
---
## Page 147
/32
第二部分目标和自动化
aspect="true"/>
θ
这只是一个很小的RealPlayer文件的一个框架示例。如果在RealIPlayer中加载该文件，那么
将不会显示任何内容，因为它只包含一个头。我们将通过notSPIKEile来运行该文件以测试头
解析代码。使用下面的命令来启动模糊测试：
user8host 5./notSPIKEfi1e-t3-d1-m3-r0--5-s SIGKILL-o FUzZY-samp1e1.rp
userBhost S export HELIX_PATH=/opt/Rea1Player/
samplel.rp“/opt/Rea1Play/realplay.bin %FILENAMEx"
[] 
userehostS
我们使用-t选项告诉工具对每个ReaIPlayer的激活要延续3秒钟，同时，使用-d选项告诉
该工具在它销毁一个空闲进程和启动一个新进程之间要等待1秒钟。使用-m选项来指定部署
RealPlayer的3个并发实例，并使用-r选项告诉工具对从0字节开始的整个文件进行模糊测试。
我们还使用-S选项来指定字符串模糊测试的模式，并使用-S选项指定SIGKILL信号来终止空
闲进程。最后，告诉工具为模期测试文件名所采取的一种格式，并指定示例文件的文件名
samplel.rp，并告诉工具如何执行RealPlayer以使它解析我们的文件：一切准备就绪。
notSPIKEfile的输出通过报告一些崩溃信息来表明发现了某些类型的漏洞。
我们将当前目录中的文件列出，可以看到文件FUZZY-samplel.rp-0x28ab156b-dump.txt被
创建。当我们查看该文件时，就可以看到一个生成的描述监清时进程状杰的详细报告。同时也
可以看到导致崩溃的文件的名字。在这个例子中，它被保存为12288-FUZZY-samplel.rp。该文
件可以用来再现崩溃。当查看该文件时，我们得到了该问题可能是什么的一个很好的提示。该
文件的内容如下：
BAEA
58
chead tit1e=*Rea1Pix(tm) Samp1e Effects”
author="Jay S1ag1e*
copyright="(c)1998 ReaINetworks,Inc."
届
t1meformat=nnnnnnnndd:hh:m:ss.xyz
在存91051
duration="46"
bitrate-*12000"
width="256"
hefght="256"
ur1="http://w.rea1.com
由于知字符的出现，我们立刻怀疑是一个格式化字符串漏洞导致了崩溃的发生。当在GDB
中部署RealPlayer二进制文件时，我们的怀疑得到了证实。
Using host 1ibthread_db 1ibrary “/1ib/t1s/1ibthread_db.so.1°.
(gdb) r 12288-FuzZY-sanp1e1.rp
 htp://ervice.real.com/help/library/guides/realpix/htmfiles/tags.htm
---
## Page 148
第12章文件格式模糊测试：UNIX平台上的自动化测试
133
Starting program: /opt/Rea1Player/rea1p1ay.bin 12288-FUZZY-sanp1e1.rp
Program received signal SICSECV, Segmentation fau1t.
0xb7e53e67 in vfprintf () from/1ib/t1s/1ibc.so.6
0xb7e53e67:mov%ecx，(%eax)
(gdb)x/i5pc
我们真的在RealPlayer对timeformat选项的处理中发现了一个格式化字符串漏洞。关于如
何利用该漏洞进行攻击的问题给读者留作练习思考。
12.7语言
这些工具之所以采用C语言编写，是由于以下一些逻辑原因。首先，就像盐和胡椒粉的关
系一样，C和Linux一直能够井且还将能够相互配合很好地进行工作。每个先进的Linux分布式
系统都有一个C编译器，并且可能将会一直拥有，因为Linux的内核就是用C语言编写的。这里
不需要任何特殊的库来将ptrace接口暴露给我们的应用程序，我们完全有自由来执行所需要的
任务。
这些工具使用C语言编写的另外一个原因是由于SPIKE就是用C编写的。由于至少有一个工
具扩展使用了SPIKE代码，同时这两个工具需要共享某些代码如异常处理和报告代码，因此采
用不同的语言来实现相同的功能是不明智的。
12.8小结
在可靠的文件模糊化测试的工具的支持下，客户端漏洞发掘工作变成了只是选择一个目标
应用并且辅以耐心。不论你是选择编写自己的模器还是从其他的模糊器进行扩展，那么所花
费的时间都是非常值得的。
---
## Page 149
第13章文件格式模糊测试：Windows平台上的自动化测试
“发现那些伤害我们的人并阻止他们，这是我们国家的利益所在。
George W. Bush, Washington DC.2005年4月28日
在上一章中，我们讨论了在UNIX平台上实现文件格式模期测试。现在我们要转向发现
Windows应用程序中的文件格式漏洞。尽管所有的概念都是一致的，但我们还是要强调一些重
要的不同点。首先，Windows编程在本质上都是进行图形化的工具设计，因此我们将脱离上一
章所提到的命令行应用，为脚本程序创建一个独特的GUI应用。同时还要花时间来识别作为模
糊测试目标的适当的文件格式，当工作在Windows环境时这是一个非常重要的决定，提供了针
对给定文件类型对Windows中默认应用的严重依赖性。最后，我们为曾经提到的发现漏洞条件
的挑战提供一种解决方法。
13.1Windows文件格式漏洞
尽管文件格式漏洞也可以影响服务器，但它们更多的是影响客户端应用。文件格式漏洞的
出现表明客户端漏洞的重要性正在不断地增加。网络管理者关注于资源以使协同网络免受网络
层漏洞的攻击。同时，软件提供商也意识到了由服务器端漏洞所导致的威胁，这些努力联合起
来减少了在流行应用程序和操作系统中的严重的服务器端漏洞数量，这些漏洞过去曾导致快速
扩张的螺虫并造成非常严重的损害。然面，对于客户端的情况却大不一样。客户端漏洞在过去
的几年中一直在增长，并使它们成为了攻击的目标，如钓鱼式攻击和身份窃取。
文件格式漏洞给企业带来独特的风险。尽管这些漏洞并不会使它们自已变为快速增长的螺
虫或直接危及网络安全，但是它们在很多方面是难以被防护的。Internet网络从设计初衷上讲，
是为了促进信息的共享。Web站点上充满了电影、图像、音乐以及文档，这使它变成了信息和
娱乐的一个巨大的资源库。所有这些内容都要求文件公开的、免费的共享。我们从来没有将图
片和电子表格这样的文件认为是恶意的，因为它们是不能自已执行的。然而正如前面所讨论的，
当它们被一个漏洞应用所解释时就可能导致漏洞的发生。我们如何来避免此类威胁呢？网络管
理者是否应当在防火墙阻止所有的内容呢？如果Web站点上只是基于文本的内容，那么它将会
使人感到厌烦。我们真的想回到使用基于文本的浏览器如Lynx来浏览Web站点的时代吗？当然
不是，但我们需要认识到由文件格式漏洞所带来的威胁。
Windows平台更加易于受到文件格式漏洞的影响，因为它具有用户友好的特性。文件类型
是与默认将要处理它们的应用程序关联在一起的。这就允许一个用户通过简单的双击文件就可
以观看电影或阅读文档。甚至没有必要知道何种应用程序能够提供特定的文件类型以查看或聆
听它们。想象一下由应用程序中所发现的一个文件格式漏洞带来的风险，该漏洞默认运行在
---
## Page 150
第13章文件格式模糊测试：Windows平台上的自动化测试135
Windows操作系统中。那么成百上千的终端用户将会立刻受到影响。下面列出了影响微软
Windows的一些严重的文件格式漏润。
影响微软Windows的严重的文件格式漏洞
MS04-028，JPEG处理（GDI+）中的缓冲区溢出，可以导致代码执行
2004年9月，微软发布了一个安全公告，详细描述了一个缓冲区溢出漏洞，该漏洞发生在
当GDI+图形设备接口所提供的JPEG图像包含一个无效大小的内客时。JPEG文件中的内客的
前级是0xFFFE字节值，后面跟着针对后续内客的一个2字节大小。内容的最小有效大小是2字节，
因为内容大小包含被大小值自身所使用的2个字节。我们发现一个0或1的大小值将由于一个整
数下溢而导致一个堆溢出。因为GDI+库（gdiplus.dl）被多个应用程序所使用，因此该漏洞影
响了大量的Windows应用程序。在该安全公告发布之后，很快就出现了公开的漏润利用代码。
MS05-009，PNG处理中的漏润，可以允许远程代码执行
许多软件提供商，包括微软都曾开发了包含缓冲区溢出漏洞的应用程序，这些漏洞发生在
当注染包含有大块tRNS的可移植网络图形（Portable NetworkGraphics,PNG）图像时，tRNS用
于图像的透明化处理。该漏洞影响了Windows消息处理器和MSN消息处理器，并且导致微软阻
止含有漏洞的客户端访问它们的即时消息网络，直到进当的补丁被应用为止。
MS06-001，图形渲染引擎中的漏洞，可以允许远程代码执行
在2005年的假日期间，有报道称Web站点对悉意的Windows元文件（WindowsMetaFile，
WMF）文件进行攻击将会导致一个问题，即当使用IntermetExplorer查看页面时将发生代码的
执行。随后摄软根据所发生漏洞的级别，在2006年初被迫发布了针对该问题的一个生命周期之
外的补丁。该漏润后来证明是由于一个设计错误而导致的。WMF文件包含记录以无许参数被
传递给特定的Windows图形设备接口（GraphicsDeviceInterface,GDI）库的调用，其中的一个
调用Escape及其子命令SETABORTPROC，实际上充计任意可执行代码被调用。稍后将说明该漏
洞的细节信息已经被秘密地卖到了4000美元0。
eBay网中的Excel漏洞拍卖
2005年12月8日，一个由自称为“fearwall”的黑客发起的拍卖在eBay网上进行，该拍卖提
供了撒软Excel中的一个漏洞的详细信息。该拍卖引起了媒体的重点关注，并且得快被eBay网
取消，删除该拍卖的原因是eBay网引用了一条禁止非法活动的政策。
FileFuzz被创建用来将识别文件格式漏洞的过程实现自动化。FileFuzz要实现的目标包含三
个方面。首先，应用程序应当是直观且用户友好的。其次，它应当既可以实现模糊化文件创建
的自动化，也能够实现设计用来解释这些文件的应用程序执行过程的自动化。第三，它应当组
合有调试功能，以确保已处理和未处理的异常都能被识别，为了实现这些目标，我们选用微软
http:/www.securityfocus.com/brief/126
1=d/8oq/oqpasmmd
③htp:/www.theregister.co.a/2005/12/10/ebay_plls_excel_vulnerability_saoction/
---
## Page 151
136
第二部分目标和自动化
的.NET平台来设计该应用程序.这就允许我们使用C#来创建图形化的前端，而其他的一些后
端构件如调试器仍然用C语言编写。图13-1显示了该应用程序GUI的一个快照。
XQ3
FeT
SoutaFle
TegeD
AByes
Start
Fnf
Loe
图13-1FileFuzz界面
13.2FileFuzz的特性
FileFuzz被设计为通过使用一种简单而有效的强有力漏洞发掘方法来识别文件格式漏洞。
FileFuzz破坏正确格式化的文件，并将它们部署到设计用来解释这些文件的应用程序中，然后
查看是否发生任何问题。这种方法可能不是非常好，但它可以正确地工作。当开发FileFuzz时，
我们对它非常容易地发现文件格式中潜在的漏洞条件感到非常的惊讶。
FileFuzz的开发经历了3个不同的阶段。首先，它创建将要被模翻化的文件，它通过获得一
个合法的用户提供的文件并基于所提供的目录，来进行有计划的连续变异，并保存结果文件的
方法来实现此功能。其次，变异后的文件一个接一个的被部署到目标应用中。这些文件被重复
部署，并且结果进程最终基于用户定义的一个超时面被销毁。最后，内嵌的调试功能监视进程
以识别可能发生的已处理和未处理异常。当这些事件被识别时，它们被记录下来并报告给终端
用户。下面对每个阶段进行更加详细的介绍。
PD
13.2.1创建文件