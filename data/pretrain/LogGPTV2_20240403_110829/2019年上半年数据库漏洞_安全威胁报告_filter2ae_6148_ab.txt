数据库所在的操作系统和网络环境也是影响数据库安全的重要因素。例如运行在Windows平台上的Oracle进程有一个安全隐患：每一个Windows系统上的用户都可以通过空用户（sqlplus
/ nolog）程序化的打开Oracle.exe进行越权访问。对于这类问题，需要管理员在操作系统中进行相关设置才能解决。
数据库内置的存储过程也会影响安全性。因为某些数据库自带的存储过程或函数可以与操作系统进行交互，如Oracle的UTL_FILE_DIR 和SQL
SERVER的XP_cmdshell函数。它们可以对操作系统进行操作，当数据库被入侵后利用这些函数影响操作系统。所以如果不需要这种扩展存储过程或函数请将它们彻底删除。否则这些扩展函数和存储过程很可能成为数据库给操作系统留下的后门。删除危险的函数，禁止数据库对OS文件完全访问对于提升数据库的安全性而言是很有必要的。
**数据库本身系统安全分析**
要研究数据库本身系统安全，离不开它的三大基本组件：网络监听组件、关系型数据库管理系统和SQL编程组件（例如pl/sql）。网络监听组件主要负责数据库的网络通讯，包括端口监听、身份验证等功能。关系型数据库管理系统是数据库最核心的组件，它的存在确保了数据库高效、稳定的运行。SQL编程组件提升了数据库的扩展能力和灵活性。针对用户的实际需求，软件厂商还会在数据库的基础上开发上层应用，因此数据库漏洞大体上可以划分为两类：数据库软件漏洞和应用程序逻辑漏洞。
数据库软件漏洞属于产品自身的缺陷，由数据库厂商对其修复，通常以产品补丁的形式出现。
应用程序逻辑漏洞主要出现在以数据库为核心开发的应用程序中，如HIS系统、财务系统等。虽然漏洞出现在应用程序上，但数据库中的数据才是黑客的最终目标。出现这种问题，很大程度上与软件开发的复杂度有关。一套数据库软件不仅有繁复的逻辑结构，还要有大量的代码支撑。面对纷繁复杂的产品，在软件实现的过程中，数据库设计开发人员难免出现纰漏。攻击者往往会利用这些漏洞攻陷目标数据库，典型的攻击方式有SQL注入、提权、缓冲区溢出等。
由于关注的重点不同，本文中所涉及的数据库漏洞仅限于数据库软件自身的漏洞，不涉及应用程序逻辑方面。下面将从三个基本组件出发，根据数据库被入侵的方式分析数据库所面临的安全问题。
网络攻击的安全问题
在实际应用中，数据库通常会作为Server与各个Client进行网络通讯，产生数据交互，因此监听组件必不可少。当然，在不同的数据库软件中，监听的存在方式有所不同，例如，在Oracle中以一个可执行文件的形式存在；在SQL
Server中，监听则成为了数据库引擎进程的一部分。
监听组件在编码时应更加重视代码的逻辑规范，避免出现缓冲区溢出漏洞。无论是SQL
Server还是Oracle，这些知名的数据库都曾出现过网络端口漏洞。对于Oracle主要表现在TNS上，例如CVE-2002-0965、CVE-2002-0965、CVE-2007-5507、CVE-2012-0072都是可以直接夺取操作系统权限的缓冲区漏洞，涵盖了Oracle9i到11g的所有版本。
数据库引擎的安全问题
此类问题中，较为有代表性的是2007年7月Oracle的一个错误授权验证漏洞。该漏洞允许被篡改的SQL语句绕过执行用户被授权的权限，能够在没有相应权限的情况下，对数据表执行更新、插入和删除操作。
Creat view em_em as
Select e1.ename,e1.empno,e1.deptno
From scott.emp e1,scott.emp e2
Where e1.empno=e2.empno;
Delete from em_em;
作为数据库软件的核心部分，数据库引擎不仅要实现与用户的数据交互，还要保证数据库高效、稳定的运行，因此其内部结构相当复杂。既包括语法分析器、优化器、PL/SQL等功能组件，还含有大量的逻辑结构。软件的复杂程度越高，出现逻辑错误的概率越大，对于数据库这个高复杂度的软件更是如此。一个细微的逻辑错误就有可能演变成安全漏洞，因此非常难以防护。值得庆幸的是，很多漏洞的利用条件较为苛刻，难以形成实际威胁。
内建存储对象的安全问题
数据库提供内建的存储对象，本意是为用户和开发人员提供便利，利用存储对象可以实现访问操作系统文件、管理XML对象、发送HTTP请求等功能。然而一个善意的功能在面对入侵者时可能带来意想不到的后果。尤其是当这些功能都需要监听对应的端口进行网络通讯时，带来的安全隐患更为严重。据了解，这些漏洞涵盖了SQL注入、缓冲区溢出、应用程序逻辑问题等多个方面。
SQL编程组件的安全问题
对于SQl编程组件，各个数据库厂商的实现方式有所不同，如微软SQL
Server使用的是T_SQL，甲骨文Oracle数据库使用的是PL/SQL。为了便于理解，下面以PL/SQL为例进行说明。
PL/SQL是Oracle对SQL语句的扩展，用户使用PL/SQL可以实现复杂的功能或计算，能够实现比较复杂的业务逻辑。对于安全研究者来讲，PL/SQL最大的问题在便于攻击者提权。
例如当通过Web拿到数据库的一组低权限用户后，可以利用PL/SQL中的一些方法进行提权，最终控制整个数据库。诸如
DBMS_METADATA、CTXSYS DRILOAD、CTXSYS DRILOAD、
DBMS_CDC_SUBSCRIBE、DBMS_METADATA、MDSYS、SYS.LT、LT_CTX_PKG、USER_SDO_LRS_METADATA、DBMS_EXPORT_EXTENSION、DBMS_SQL
等都出现过让低权限账号提权到DBA权限的漏洞。
**第三方恶意组件**
就目前的情况来看，针对数据库攻击的第三方恶意组件主要包括数据库后门、挖矿木马和数据库勒索三大类。
当黑客攻破数据库后，往往会留下针对数据库的后门程序，便于长期、持续地窃取数据。起初后门攻击的主要目标是操作系统，但是随着数据库的重要性逐渐提升，专门针对数据库的后门数量也在日渐增加。
由于比特币、莱特币、以太坊等加密数字货币的兴起，各类挖矿木马如雨后春笋般出现。挖矿木马可以利用数据库漏洞入侵数据库服务器，并进行内网扩散，构建僵尸网络。与数据库后门不同的是，挖矿木马主要是窃取服务器的硬件资源，通过挖矿行为获利。
数据库勒索的主要目的是通过妨碍用户使用数据库对其进行敲诈勒索，实现非法获利。进行数据库勒索的方式大致可分为两种，一种是先向数据库工具、数据库组件插入恶意的SQL语句，再通过被感染的数据库工具、组件向用户的数据库中插入恶意的SQL语句和触发器。在合适的时机会自动执行恶意SQL语句，从而以阻断合法用户访问数据库、隐藏数据库关键表、删除数据等方式实现妨碍用户正常使用进行敲诈勒索的目的。另一种方式是直接攻击数据库文件，对其进行加密，影响数据库功能的正常使用。
对于防护第三方恶意组件，使用正版软件是较为有效的途径。一些绿色版、破解版软件中很可能存在恶意程序，从而影响数据库安全。保护数据库安全，不仅要考虑数据库本身，还要从整体出发，保证数据库系统的安全性。
**数据库勒索攻击分析**
自勒索病毒出现以来，勒索攻击一跃成为数据库安全的最大威胁。数据库服务器中存放的大量敏感数据对于企业级用户至关重要，因此黑客会直接攻击数据库服务器，挟持核心数据非法获利。针对核心数据的攻击方式主要有两种，一种是入侵数据库服务器，植入后门软件，长期盗取数据，通过倒卖数据获利；另一种是利用勒索病毒进行数据勒索，通过敲诈用户获利。由于目前数据库勒索的攻击手段日趋成熟，攻击方法越来越自动化、傻瓜化，导致攻击门槛降低，使其成为数据库的首要威胁。下面将分别介绍不同场景下的数据库勒索攻击，并讨论应对措施。