2096400
10 206956
13884 79180 175964
0
412
0
2680 1008
8093700
20 207348
1444878800 175576
0
412
0
412763
70841600
20 207348
15756 78800 175424
0
0
0
0874
25 89 11
00
10 207348
16368
78800 175596
0
0
0
0940
24 861400
10 2073481660078800 175604
0
0929
2795302
30 207348 16976 78548 175876
0
02508969
3593700
40207348 162161
78548 175704
0
0
0
0874
3693601
40 207348
16424
78548 175776
0
0
0
0850
26 77 2300
20 207348
17496
78556 175840
0
0
0
0736
23 831700
00 20734817680
78556 175868
0
0
0861
2191801
根据观察值，我们可以得到以下结论：
1.有大量的中断(in)和较少的上下文切换（cs)这意味着一个单一的进程在产生对硬件设备的请求
2.进一步显示某单个应用usertime(us)经常在85%或者更多.考虑到较少的上下文切换，这个应用应该
还在处理器中被处理
3.运行队列还在可接受的性能范围内，其中有2个地方，是超出了允许限制，
2：在这个例子中，内核调度中的上下文切换处于饱和
# vmstat 1
---
## Page 75
procs
memory
swap
system
cpu
rb
pdms
free
buff cache
si
S0
bi
bo
in
CS us sy wa id
21207740
98476
81344 180972
0
0
2496
0060
2883
4 12 57 27
01 207740
96448
83304 180984
0
1968
328
810
2559
89830
01 207740
94404
85348 180984
0
0
2044
0829
287996787
01 207740 92576 87176 180984
01828
6892088 3 97810
2 0 207740 91300 88452 180984
0
01276
0565 2182 7 6834
31 2077409012489628 180984
0
01176
0551221927910
42 207740
89240
90512 180984
0
0
880
520
443
907 22 10 670
53 207740
88056
91680 180984
0
01168
0
628
1248 12 11 770
42 207740
86852
92880 180984
0
0
1200
0
654
1505
6787
0
61207740
85736
93996 180984
0
01116
526
1512
510850
0120774084844
94888 180984
0
892
0438
155664900
根据观察值，我们可以得到以下结论：
1.上下文切换数目高于中断数目，说明kermnel中相当数量的时间都开销在上下文切换线程.
2.大量的上下文切换将导致CPU利用率分类不均衡.很明显实际上等待io请求的百分比（wa）非常高。
以及 user time 百分比非常低(us).
3.因为CPU都阻塞在IO请求上，所以运行队列里也有相当数目的可运行状态线程在等待执行.
3、iostat
用途：报告中央处理器（CPU）统计信息和整个系统、适配器、tty设备、磁盘和CD-ROM的输入/
输出统计信息。
语法:  iostat [ -c | -d ] [ -k ] [ -t | -m ] [ -V ] [ -x [ device ]]{ interval [ count ] ]
描述：iostat命令用来监视系统输入/输出设备负载，这通过观察与它们的平均传送速率相关的物
理磁盘的活动时间来实现。iostat命令生成的报告可以用来更改系统配置来更好地平衡物理磁盘和适配
器之间的输入/输出负载。
参数：-c为汇报CPU的使用情况：-d为汇报磁盘的使用情况：-k表示每秒按kilobytes字节显示数据：
-m表示每秒按M字节显示数据：-t为打印汇报的时间：-v表示打印出版本信息和用法：-xdevice指定
要统计的设备名称，默认为所有的设备：interval指每次统计间隔的时间：count指按照这个时间间隔统
计的次数。
iostat 结果解析
Linux 2., 6. 9-78.ELsap (20081006-1724)
11/20/2009
:ndo_aAe
%user
%nice
%sys %iowai t
%idle
0.19
0.00
0, 04
≤0°0
99.73
Device:
rrg/s wrg/s
17.60
8/J
/s
rsec/s
wsec/s
rkB/s
wkB/s avgrq=sz avgqu-sz
0.05
7.72
80.69
202.57
101.29
30.87
0.01
awai t
svctn
0.37
%util
sda
sdal
1.46
40.34
0, 00
1.06
0.34
sda2
0, 00
0, 00
00 *0
0. 00
0.00
0, 00
0.00
00 °0
0, 00
0662
16.25
0. 00
3.14
3.14
0. 00
0.00
0.00
0.00
0.00
0.00
0.00
1.51
1.30
0.00
0. 00
sda3
0, 05
17. 60
1.46
7.72
80.69
202.57
101.29
30.87
10.57
10°0
13. 56
1.06
0.37
S0
dn~0
0, 00
0.00
0. 00
1. 46 25. 28
80.32
0.37
202. 26
40. 16
0,000.05 0.04
0.32
101.13
0, 16
8.00
0.36
0.13
0.01
0.34
dm-1
0.18
0, 00
8°9
1. 30
rrqm/s:每秒进行 merge 的读操作数目。即 delta[rmerge)/s
wrqm/s:每秒进行 merge 的写操作数目。即 delta(wmerge)/s