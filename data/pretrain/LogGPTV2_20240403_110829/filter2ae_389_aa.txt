**✎首先利用开源的工具做恶意代码自动化并不是什么高大上的东西，但是你需要会恶意代码相关的知识，手动分析过病毒，会一些内存取证的手段，最好是一个Python熟练工，完全可以自己部署自己的开源自动化。**
**➥本系列只是个人在学习过程中一些心得杂谈。后面有机会我们一起聊一聊沙箱二次开发或者蜜罐，当然那将是后话。**
**✍ 为什么需要部署恶意代码自动化？  
也许你是一个病毒分析师，也许你是一个安全分析师、应急响应安全团队或者从事相关的工作。日常工作？大量的样本辨黑白，网络流量日志分析，或者针对某些样本做深度分析，编写yara规则入库，出相关分析报告。  
如果你接触的更深入一些，有蜜罐集群，沙箱集群，每天来自于全国各地甚至国外的恶意样本，多则几万或者几十万，这不是依赖于人工就可以大规模的对样本进行识别、归纳、分析，而是要有完善的系统与机制，流程化的去采集处理。当然那些高精度的系统并不是开源工具就能做到的，是长期的经验与总结，不断的开发与维护。**
**✍ 与威胁情报有关吗?**  
**个人认为威胁情报本身字面意思，威胁已经包含了恶意代码，有一本很有意思的书叫做《情报驱动应急响应》，书中也提了到捕获的恶意来源，恶意软件及漏洞的价值。**  
**微步在线情报社区与Venuse，你能通过ip、url、sha256等信息获取一条相对完整的恶意链，恶意链包含了该ip通信有那些样本，时间节点，国家地区、恶意域名，邮箱等等，相对于情报来讲这就是价值。**
**✍ 需要准备点什么？**
  * **maltrieve**
  * **viper**
  * **clamav**
  * **Online API(virustotal api, weibuyun api....**
  * **CuckooSandBox**
  * **HoneyDrive or t-pot**
  * **volatility**
  * **Python Django or Pulsar**
**上述工具列举的并不算太齐全，会在文中继续补充，列举一个国外的网站，这是一个热爱恶意研究的二进制工程师个人网站：  
Tracker模块子网页Home主页有大量的恶意ip及样本在Web上展示，动态更新而且它提供了api接口，在线获取这些样本数据，可以做到恶意查询，类似于在线微步情报社区这种。但是好像没有提供沙箱的页面接口，如果能有沙箱功能，让别人提交样本分析，关联这些恶意的数据，在Web中展现出来，理论上这就是简单的情报社区。**
✍ **目标是什么？**  
**没错，一个假的情报社区......。利用蜜罐，有条件可以国外部署节点，当然也可以随便部署节点，只要放到了公网上就好。  
还可以利用cuckoo提供的web页面，收集提交的样本，这时候你会发现每天捕获的样本非常少，我们需要共享的样本，公网没钱就玩开源样本就好。**
**❀ 你可以考虑这样干：** ：
  * **maltrieve在不同的站点上下载共享的恶意样本。**
  * **viper对恶意代码进行分类。**
  * **因为都是公开的，所以已经被大多数的杀软厂商识别入库，用clamav辨别病毒家族，将识别的样本家族分类，也就是给样本打上标签。**
  * **利用线上api接口获取样本详细的数据。**
  * **将字段整合保存在数据库中，后面会对这些数据进行关联、分析、展示等工作。**
  * **cuckoo配合volatility模块，将某些样本或者指定的样本详细分析，生成报告，也就是沙箱功能。**
  * **对恶意样本数据进行聚合、清洗、关联性分析产生有价值的数据。**
**通过线上api分析后，也许会得到c
&c通信的ip或者url、域名，也可能是代理服务器。会发现你没有海量的ip数据支撑，每天仅仅靠蜜罐捕获与共享样本中获取的数据是有限的，你没有承载大量的c&c或者ddos攻击，很难收集来自于大网的数据，但是少量的数据并不影响去做恶意代码同源性与情报。**
**✍ 工具部署：**  
**你必须认识这些新伙伴，你能帮助你实现"梦想"。了解与部署一款新的工具、应该去官方查阅权威文档，因为它能够提供最新的帮助与支持。虽然很多都是英文，你手中也有翻译法宝不是，这样你就避免百度谷歌找到的都是前几年的部署博客，虽然能提供思路，但是部署起来困难重重。**
**下面关于工具的介绍很简单，列举网站中有详细的介绍，你需要去查阅。如果你不知道什么是蜜罐技术，或者沙箱技术你需要格外的普及一些常识。**
**1\. Maltrieve Github:**   
**Maltrieve起源于mwcrawler的一个分支。 它直接从多个站点列出的源检索恶意软件**
**2\. viper ：** **Github:**
**Viper是一个二进制分析和管理框架**
**3\. clamav：**  
**一款开源Linux下杀毒软件，同样提供了c与Python接口**
**4\. CuckooSandBox：** **CuckooSandBox github**
:  
**Cuckoo Sandbox是领先的开源自动恶意软件分析系统，也即是沙箱。**
**5\. HoneyDrive or t-pot or Other:**  
**HoneyDrive：**  
**一个蜜罐系统，里面有很多不同类型的蜜罐。**
**6\. t-pot ：** **Github:**
**一个多蜜罐平台，而且提供非常友好的可视化，es插件也很不错。**  
**当然你可以选择部署单个蜜罐，比如只部署中交互cowrie或者低交互kippo都是可以的，高级/复杂蜜罐是有一定的风险。**
**7\. volatility：**  
**个人认为这是个强大的利器，非常灵活，cuckoo内存分析也是依赖于它，不得说这是一个很优秀的内存分析、取证工具。**
**8\. Python Django or Pulsar or webpy:  
这个随便，你需要开发一个Web页面，爬也行！能与后端的数据库交互，用js，css或者其他框架语言都可以，数据展示到前端即可。  
这时候你也需要注意自己网站的安全，起码对自己的网站做一下简单的测试....，被别人脱库就不好了，加一个20G的抗DOS(很多厂商都可以给你免费申请的)。**
**★ Install部署: 环境：Ubuntu 18 system**
**① Maltrieve你只需要在Github下载，并且在操作系统上解压，就算安装成功，当然这里会输出一些引导与帮助：**
**运行格式：python maltrieve.py**
问题 | 解决方案  
---|---  
ImportError: No module named feedparser | pip install feedparser  
Import grequests | pip install grequests  
ImportError: No module named magic | pip3 install magic  
ImportError: No module named bs4 | pip install bs4  
**♫ 经过上面的问题，你应该明白，以后遇到这些类的报错是依赖环境没有模块，pip安装即可.**
**② viper你需要参考用户手册，手册会告诉你功能与如何去使用.**
    $ apt-get install git gcc python3-dev python3-pip
    $ apt-get install libssl-dev swig libffi-dev ssdeep libfuzzy-dev unrar p7zip-full
**以上是依赖环境Python3与一些工具包,下面你还会需要做这些操作:**
    Install:
    $ git clone https://github.com/viper-framework/viper
    $ cd viper
    $ git submodule init
    $ git submodule update
    $ sudo pip3 install setuptools wheel --upgrade
    $ sudo pip3 install .
    Uninstall:
    $ cd viper
    $ pip3 uninstall -y viper
    $ pip3 uninstall -y -r requirements.txt
**执行命令：./viper-cli，也许会报错如下**
问题 | 解决方案 | 注意  
---|---|---  
ModuleNotFoundError: No module named 'sqlalchemy' | pip3 install sqlalchemy |
pip3 python3的环境  
**③ clamav部署，如果你是Ubuntu或者Centos那么apt-get or yum就可以满足你的安装需求：**
    Debian  
      apt-get update
      apt-get install clamav
    RHEL/CentOS  
      yum install -y epel-release
      yum install -y clamav
**在部署的时候特别是联调Python接口的时候遇到了一些问题，个人环境Ubuntu 18，安装后你就会出现以下几条指令：**
指令 | 功能  
---|---  
clamdscan | 监控  
clamscan | 扫描  
clamsubmit | 提交  
**可以利用clamscan进行测试，指令后带上文件夹或文件名扫描，就会输出扫描结果，如下所示：**
    root@ubuntu:~# clamscan ./virustest/15/
    ./virustest/15/1.exe: OK
    ./virustest/15/4.exe: Win.Packed.Noon-6997872-0 FOUND
    ./virustest/15/13.vbs: OK
    ./virustest/15/6: OK
    ./virustest/15/9.exe: Win.Malware.Smdd-7006691-0 FOUND
    ./virustest/15/5.exe: OK
    ./virustest/15/11.jar: OK
    ./virustest/15/10.jar: OK
    ./virustest/15/3.exe: OK
    ./virustest/15/2.exe: OK
    ./virustest/15/7.exe: OK
    ./virustest/15/14.exe: OK
    ./virustest/15/12.exe: Win.Malware.Wacatac-7007712-0 FOUND
    ./virustest/15/15.exe: OK
    ./virustest/15/8.exe: OK
    ----------- SCAN SUMMARY -----------    Known viruses: 6170445
    Engine version: 0.100.3
    Scanned directories: 1
    Scanned files: 15
    Infected files: 3
    Data scanned: 9.30 MB
    Data read: 8.69 MB (ratio 1.07:1)
    Time: 41.171 sec (0 m 41 s)
**ps aux | grep clam 看一看后台是否开启了freshclam与clamd进程，如果有报错信息请进一步查阅官方资料**
    root@ubuntu:~# /etc/init.d/clamav-daemon start/stop/status/restart  开启关闭状态重启
    root@ubuntu:~# /etc/init.d/clamav-daemon start
    [ ok ] Starting clamav-daemon (via systemctl): clamav-daemon.service
    root@ubuntu:~# ps aux | grep clam
    clamav    35244  0.0  5.8 1057096 725688 ?      Ssl  Jul06   1:42 clamd restart
    clamav    35436  0.0  5.8 983108 725204 ?       Ssl  Jul06   1:46 clamd stop
    clamav    35442  0.0  5.8 983204 725424 ?       Ssl  Jul06   1:42 clamd start
    root      49855  100  4.6 735636 578764 ?       Rs   17:56   0:23 /usr/sbin/clamd --foreground=true
    clamav      538  0.0  0.2 156876 25232 ?        Ss   Jul05   0:25 /usr/bin/freshclam -d --foreground=true
    root      49876  0.0  0.0  22920  2272 pts/1    S+   17:57   0:00 grep --color=auto clam
**Python提供了库Pyclamd，当然你可以利用Lib库，这里介绍Python联调clamav
api，你需要配置clamav配置文件，且监听端口设置为3310，当然这都是默认配置。**
**指令clamconf，如果你发现没有该指令请apt-get install clamav-daemon
，该指令是新版本中的clamav配置文件稍微有些不同，clamconf是ClamAV提供的工具，用于检查整个系统配置。
/etc/clamav/clamav.conf没有相关的TCP监听信息，而且配置文件无效。最终在官方的
Configuration专栏中找到了参考文档，但是内容不详细，经过一番尝试终成功。**
    root@ubuntu:~# clamconf 
    Checking configuration files in /etc/clamav
    Config file: clamd.conf
    -----------------------    BlockMax disabled
    PreludeEnable disabled
    PreludeAnalyzerName disabled
    LogFile disabled
    LogFileUnlock disabled
    LogFileMaxSize = "1048576"
    LogTime disabled
    LogClean disabled
    LogSyslog disabled
    LogFacility = "LOG_LOCAL6"
    LogVerbose disabled
    LogRotate disabled
    ExtendedDetectionInfo disabled
    PidFile disabled
    TemporaryDirectory disabled
    DatabaseDirectory = "/var/lib/clamav"
    OfficialDatabaseOnly disabled
    LocalSocket = "/tmp/clamd.socket"
    LocalSocketGroup disabled
    LocalSocketMode = "660"
    FixStaleSocket = "yes"
    TCPSocket = "3310"
    TCPAddr = "36.27.214.218"
    MaxConnectionQueueLength = "30"
    StreamMaxLength = "26214400"
    .........................
    .........................
**你应该会看到以上的配置信息，检测了clamav的运行环境变量，如果你配置文件中没有TCP相关的字段，你可以在配置文件中直接添加如下：**
    # A TCP port number the daemon will listen on.
    # Default: disabled
    TCPSocket 3310
    # By default clamd binds to INADDR_ANY.
    # This option allows you to restrict the TCP address and provide
    # some degree of protection from the outside world.
    # Default: disabled
    TCPAddr 36.27.xxx.xxx
    LocalSocket /tmp/clamd.socket
    # Sets the permissions on the unix socket to the specified mode.
    # Default: disabled (socket is world accessible)
    LocalSocketMode 660
**如何让配置文件生效呢？你需要查找注释以下内容：**
    # Comment or remove the line below.
      #Example  默认没有注释
**你也可以重新生成一个新的配置文件，命令如下：**