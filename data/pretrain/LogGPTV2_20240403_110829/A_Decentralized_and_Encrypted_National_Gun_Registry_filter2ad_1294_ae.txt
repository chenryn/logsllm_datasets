circuit size. Like above, the 2PC computation dominates the
execution time. In Figure 2d, we show the execution time
without the 2PC. In particular, inserting 10, 000 pairs into the
global directory requires less than 0.5 milliseconds.
Setting up the encrypted database. In this experiment, we
measure the time to encrypt the multi-map and the records.
Figure 4a shows that the setup of the EMM dominates the
overall execution time. In particular, setup takes around 220
seconds while the encryption of the records takes only 22
seconds.
Total add time. The time to execute the Add protocol is the
sum over the time do a batch update, the time to prepare and
the time to encrypt the local database (which itself consists
of the time prepare the EMM and encrypt the records). For
clarity, we consider a concrete example in which the local
ofﬁcial has an add rate of 10, 000 records per week. The time
to add 10, 000 serial/id pairs is 2, 627 seconds while the time
to add a new batch of records to the encrypted database is
either of the following (depending on the update number).
If the update number is a power of 2, then the execution
time is simply the time to create a new EMM along with
the encrypted records which is 14.58 seconds. Otherwise, if
the update number is not a power of 2, then the execution
time is less than 220.42 seconds, which is the time to create
an EMM for 100, 000 records. 4 For n = 10, 000 and u = 53
, the largest EMM has a size less than 100, 000. In summary,
the Add protocol requires less than 48 minutes.
2) Find Time: We are interested in measuring the time it
takes a querier to identify the county a given gun is registered
in. As above, we vary the number of pairs in the global
directory from 100 to 1 million and then extrapolate to 1
billion. We used a logistic regression to extrapolate the results
for when 1 million and 1 billion are already stored in the
global directory. In Figure 2e, we show that
the time is
independent of the size of the directory. In particular, it takes
around 230 milliseconds to retrieve the county identiﬁer. For
completeness, we tested the time to query for a county ID a
global encrypted directory containing 400 million pairs. The
total time was 247 milliseconds, with 230 milliseconds spent
on the 2PC. Similar to the Add protocol, the 2PC computation
takes the most time. Figure 2f shows that the server requires
less than 1 millisecond to retrieve the encrypted pair.
3) Query Time: In this experiment, we measure the time
it takes for a querier to retrieve the matching records from
a local database. There are two dimensions we varied in
the experiment: (1) the selectivity of the query; and (2) the
number of records stored in the server. Figure 3 summarizes
our results. As an example, retrieving 100 records from the
database, requires about 1 minute. We noticed that the query
time is independent of the number of records in the database.
However, the selectivity of the query does impact query time;
especially the time to do the decryption in the 2PC which
represents 99.5% of the overall execution time, and sharply
increases with more records to decrypt. Note that in our current
prototype, each decryption requires a new 2PC. And since
the decryptions occur sequentially, the query time is almost
proportional to the selectivity of the query. In Figure 3, we also
notice that the time to query the EMM on the server side is
negligible compared to the time required to generate the token
using 2PC. In particular, the former takes 3 milliseconds which
accounts for 0.006% of the overall time, while the latter takes
260 milliseconds which accounts for 0.4% of the overall time.
Note that the 2PC computation for selectivity 10 is slightly
larger as we need to compute a token for a more complex
query, refer to Section VIII-A for more details on our queries.
Query time with dynamic databases. We assessed the query
and ofﬂine query times while dynamically expanding the
4Note that one can show that the smallest structure on the server has a size
O(u · n/ log(u)), where u is the number of updates and n the number of
records, respectively.
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:16:24 UTC from IEEE Xplore.  Restrictions apply. 
1529
(a) Global directory add time for a single
pair.
(b) Global directory add time for a single
pair (without 2PC).
(c) Global directory add time for batched
pairs.
(d) Global directory add time for batched
pairs (without 2PC).
(e) Global directory ﬁnd time for a single
county.
(f) Global directory ﬁnd time for a single
county (without 2PC).
Fig. 2: Performance of operations with varying number of pairs in the global directory. In (a), (b), (e), (f), the values for when
108 and 109 pairs are in the global directory are extrapolated.
database and, in particular, the EMM. Note that the main
effects of using the dynamic BIEX-2Lev EMM are that: (1)
we need to generate tokens that increase linearly as a function
of the number of sub-EMMs; and (2) the query algorithm
needs to query all the sub-EMMs. In Figure 4b and 4c, we
provide a simulation based on the empirical numbers from the
previous experiment. Speciﬁcally, we use the average time for
querying an EMM and multiply it by the number of EMMs
that exist after x updates have been made, which is log2(x).
Recall that the number of sub-EMMs, as well as the token
size, grows logarithmically as a function of the number of
adds. In particular, our simulation demonstrates that dynamism
has a little to no impact on the execution time of the query
protocols. This was expected since the 2PC decryption step
greatly dominates the other tasks.
4) Ofﬂine Query Time: We show in Figure 7 (in Ap-
pendix D) the overall time spent by the OﬄineQuery protocol
as a function of the selectivity, but also the number of
records in the dataset. This protocol is similar to the Query
protocol. The main differences are that the backups need to:
(1) reconstruct the local ofﬁcial’s key; and (2) generate new
shares for the key. In particular, the time for reconstruction is
around 5.68 seconds, while the time for generating the new
shares is around 450 milliseconds.
5) Storage Overhead: In this experiment, we are interested
in assessing the size of the encrypted databases (including its
EMM and encrypted records) and the size of the global direc-
tory. Figure 4d summarizes our results. We observe that the
size of the EMM dominates the overall size of the encrypted
databases. The encrypted records only accounts for 0.2% of
the overall storage. With respect to the global directory, we
varied the number of pairs it holds from 1000 up to 100
million. The storage overhead is summarized in Figure 4e.
We notice that the size of the global directory grows linearly
as a function of the number of pairs. As an example, storing
100 million serial/id pairs requires 28GB.
D. Cost analysis
We estimated the yearly cost of running the system in order
to provide a sense of its ﬁnancial feasibility. Our numbers are
based on the AWS pricing calculator [4] and our own AWS
usage data. We assume that the yearly cost would be paid
upfront. Note that these costs are based on regular billing rates
while government entities would be billed at a discounted rate.
We only consider the servers that store the global directory and
the encrypted databases and the custodians since a standard
laptop is sufﬁcient for local ofﬁcials and queriers. The base
cost reﬂects the price of running a single AWS instance with
no additional storage and no data transfer. Depending on a
server’s role, it incurs different storage and data transfer costs,
which we describe. For the custodians and the global directory
server, we assume 400 million adds and ﬁnds are executed.
This captures the estimated number of gun ownership in the
US that was previously mentioned. For the encrypted database
servers, which would store the databases of each county in a
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:16:24 UTC from IEEE Xplore.  Restrictions apply. 
1530
(a) Query time with 1,000 records in
local database.
(b) Query time with 10,000 records in
local database.
(c) Query time with 100,000 records in
local database.
(d) Query time with 1,000 records in
local database (without 2PC decryption).
(e) Query time with 10,000 records in local
database (without 2PC Decryption).
(f) Query time with 100,000 records in
local database (without 2PC Decryption).
Fig. 3: Local database query times based on the selectivity of the query with varying records stored. The x-axis represents
low, medium, and high selectivity, which return 1, 10, 100 records respectively.
(a) Local database setup time.
(b) Simulated local database query time
after updates
(c) Simulated local database query time
after updates (without 2PC decryption).
(d) Size of local database.
(e) Size of the global directory.
Fig. 4: Performance of various operations on a local database and the storage sizes of a local database and global directory.
Record encryption refers to the amount of time taken to encrypt records. MM Encryption refers to the amount of time taken
to setup the EMM used to make queries over the local database.
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:16:24 UTC from IEEE Xplore.  Restrictions apply. 
1531
state, our estimate is based on the population of California
since it is the largest state with around 40 million people as
of 2019 [48].
Base costs. As mentioned, we used a t3.xlarge AWS
instance for our empirical evaluation, which has a yearly cost
of $853.22 when considering no additional storage and upfront
payment. If a more powerful instance were to be used, such
as the m5.metal, which has 96 vCPUs and 384GB of RAM,
the yearly cost with no additional storage and upfront payment
would be $23, 739.60.
Global directory server. Given that an EDX of 400 million
pairs is around 110GB, the directory server would require at
least this much storage. An attachment of 200GB of SSD EBS
storage would cost $461.28 a year. The data transfer cost is
assumed to be negligible since the server receives tokens that
are either 96 or 64 bytes. If 400 million updates were made
in a single year, the amount of data transferred would still be
less than 1 TB, which amounts to less than $10.
Custodians. The custodians have relatively low storage costs
but high data transfer costs due to the 2PCs they have to
execute as part of the add and ﬁnd operations. We observed
that around 0.5 GB of data was transferred between the two
custodians for the 2PCs of 25 adds and the 2PCs of 25 ﬁnds.
Based on this number, at a price of $10 per TB, it would cost
roughly $80, 000 to execute the 2PCS of 400 million adds and
400 million ﬁnds.
Encrypted database servers. Given that an EMM that holds
100, 000 records is around 1.75 GB and that the encrypted
records are 384 bytes each, if the state of California were to
store a record for every person, it would need around 680
GB to store the EMMs and 15.36 GB to store the encrypted
records. An attachment 700 GB of SSD EBS storage would
cost $1586.28 a year.
The data transfer cost for a state-level encrypted database
server is negligible since the server only receives data in the
form of query tokens and encrypted records. Each encrypted
record is 384 bytes and a query token for the high selectivity
query used is 380 bytes. If each individual in California were
to be queried in a year, this would result in less than 40 GB
of data transferred, which would cost less than $10. These
estimates show an approximate range of costs. This does not
imply that the various government entities would choose to use
these speciﬁc machines or even a cloud provider such as AWS,
but rather it demonstrates that the ﬁnancial cost of operating
our system would not be a signiﬁcant barrier to deployment.
IX. RESPONSIBLE DESIGN
We believe that gun control laws, stricter licensing, and
ﬁrearm registries have a positive affect on public health. We
acknowledge, however, that introducing a protocol designed
speciﬁcally for data collection by law enforcement has the po-
tential for abuse and we recognize and strongly oppose existing
forms of non-consensual data collection by law enforcement.
We are also aware that giving law enforcement access to
data on citizens can enable the abuse of that data beyond
the original intent of its collection. Although driver license
and license plate databases are—like gun registries—intended
to increase public safety, unfettered access to this data by
various law enforcement agencies has lead to abuse. In 2019, it
was reported that US Immigration and Customs Enforcement
ofﬁcers were given access to license plate databases which
were used to proﬁle “foreign-looking” drivers, record their
license plates, look up personal information, and target them
for deportation [38]. Furthermore, it is known that the Federal
Bureau of Investigation has access to driver license photos in
multiple states and that it uses the data with facial recognition
algorithms to detect suspected criminals [21]. In registering
for a driver’s license, citizens do not explicitly consent to
these uses of their data and photos. This is exacerbated by the
fact that this data can misidentify them as criminals which is
particularly harmful to Black license holders, for whom facial
recognition algorithms have a lower accuracy rate.
In designing this system, we kept in mind how the data
it stores could be misused; particularly against marginalized
groups. We emphasize that people should consent to how their
registration data is used and by whom. The draft legislation
explicitly states that attempts to use the registry to collect large
amounts of data is prohibited and will be reported. We support
this rate limiting feature (and instantiate it via our 2PC-based
decryption) and urge that that access to the system (e.g., by
ofﬁcials, sellers, police agencies, government agencies) be
clearly and transparently deﬁned prior to deployment.
We also understand that once the technical infrastructure is
in place, ﬁrearm data could be be replaced and used for other
purposes beyond our intentions. While we cannot control how
this protocol is deployed, we strongly advocate for policies
and regulations that limit personal data collection by Law
Enforcement. While new developments in cryptography can
enhance privacy, the use of privacy-enhancing technologies
can also be used as cover to request access to more data.
Policies and laws that speciﬁcally outline what kind of data
can and cannot be collected by law enforcement before a
system such as ours is built and deployed would help curb
the potential for abuse.
X. CONCLUSION
In this work, we designed,
implemented and evaluated
an end-to-end encrypted national gun registry. In designing
the system, we were in conversation with the Senate ofﬁce
that drafted the legislation and followed their requirements
explicitly. We implemented the protocol and evaluated at the
scale it would have to run if it were deployed in the US. Our
empirical results conﬁrmed that the design is not only possible
but practical.
The purpose of this work is to demonstrate the feasibility of
such a system, so our design can be improved by future work
in several respects. As designed (and implemented), the system
is secure in the standalone setting. Future work could improve
the protocol
to be secure in the universal composability
model [14]. As mentioned in Section V, our protocol makes
black-box use of its underlying primitives. As such, different
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:16:24 UTC from IEEE Xplore.  Restrictions apply. 
1532
instantiations of these building blocks yield different tradeoffs
between efﬁciency and leakage. Future work could explore
how different instantiations (e.g., using techniques from [34])
improve the leakage proﬁle of the system at what cost to
performance.
FINANCIAL AND COMPETING INTERESTS DISCLOSURE
Seny Kamara is co-founder and Chief Scientist at Aroki
Systems, a company focused on the design and implementation
of encrypted search solutions. Tarik Moataz is co-founder and
Chief Technology Ofﬁcer at Aroki Systems.
ACKNOWLEDGMENTS
We would like the thank Senator Wyden’s ofﬁce for mo-
tivating this work, sharing the draft of their legislation, and
providing valuable feedback throughout the project. We would
also like to thank Samuel Boger for his implementation
assistance in the initial stages of this project and Xiao Wang
for taking the time to answer our questions in working with
EMP-Toolkit.
REFERENCES
[1] Aaron Karp.
Estimating Global Civilian-Held Firearms Numbers.
Technical report, Small Arms Survey, Geneva, Switzerland, June 2018.
[2] Al Danial. cloc, May 2020.
[3] Amazon Web Services. Amazon Elastic Compute Cloud Documentation,
2020.
[4] Amazon Web Services. AWS Pricing Calculator, 2020.
[5] Ghous Amjad, Seny Kamara, and Tarik Moataz. Breach-resistant struc-