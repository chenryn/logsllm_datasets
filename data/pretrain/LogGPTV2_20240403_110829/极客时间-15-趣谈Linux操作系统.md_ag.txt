## 安装软件好了，你现在应该会浏览文件夹了，接下来应该做什么呢？当然是开始安装那些"装机必备"的软件啦！在 Windows 下面，在没有类似软件管家的软件之前，我们其实都是在网上下载installer，然后再进行安装的。就以我们经常要安装的 JDK为例子。应该去哪里下载呢？为了安全起见，一般去官网比较好。如果你去 JDK的官网，它会给你一个这样的列表。![](Images/f1e7ce28df381c7ff6129f0e946f7ba6.png){savepage-src="https://static001.geekbang.org/resource/image/5e/02/5e54fe2dba0e86e14a7a92d9ea46c202.jpg"}对于 Windows 系统，最方便的方式就是下载exe，也就是安装文件。下载后我们直接双击安装即可。对于 Linux 来讲，也是类似的方法，你可以下载 rpm 或者 deb。这个就是 Linux下面的安装包。为什么有两种呢？因为 Linux 现在常用的有两大体系，一个是CentOS 体系，一个是 Ubuntu 体系，前者使用 rpm，后者使用 deb。在 Linux上面，没有双击安装这一说，因此想要安装，我们还得需要命令。CentOS下面使用[rpm -i jdk-XXX_linux-x64_bin.rpm]{.orange}进行安装，Ubuntu下面使用[dpkg -i jdk-XXX_linux-x64_bin.deb]{.orange}。其中 -i 就是install 的意思。在 Windows下面，控制面板里面有程序管理，我们可以查看目前安装了哪些软件，可以删除这些软件。![](data:image/png;resource=13;base64,){savepage-src="https://static001.geekbang.org/resource/image/4c/9b/4c0cddd6f5ea77bc4aeabc135e6e8a9b.png"}在 Linux 下面，凭借[rpm -qa]{.orange}和[dpkg-l]{.orange}就可以查看安装的软件列表，-q 就是 query，a 就是 all，-l的意思就是 list。如果真的去运行的话，你会发现这个列表很长很长，很难找到你安装的软件。如果你知道要安装的软件包含某个关键词，可以用一个很好用的搜索工具grep。rpm -qa \| grepjdk]{.orange}，这个命令是将列出来的所有软件形成一个输出。\|是管道，用于连接两个程序，前面 rpm -qa 的输出就放进管道里面，然后作为grep 的输入，grep 将在里面进行搜索带关键词 jdk 的行，并且输出出来。grep支持正则表达式，因此搜索的时候很灵活，再加上管道，这是一个很常用的模式。同理[dpkg-l \| grep jdk]{.orange}也是能够找到的。如果你不知道关键词，可以使用[rpm -qa \| more]{.orange}和[rpm -qa \|less]{.orange}这两个命令，它们可以将很长的结果分页展示出来。这样你就可以一个个来找了。我们还是利用管道的机制。more是分页后只能往后翻页，翻到最后一页自动结束返回命令行，less是往前往后都能翻页，需要输入 q 返回命令行，q 就是 quit。如果要删除，可以用[rpm -e]{.orange}和[dpkg -r]{.orange}。-e 就是erase，-r 就是 remove。我们刚才说的都是没有软件管家的情况，后来 Windows上有了软件管家，就方便多了。我们直接搜索一下，然后点击安装就行了。![](data:image/png;resource=13;base64,){savepage-src="https://static001.geekbang.org/resource/image/4c/9b/4c0cddd6f5ea77bc4aeabc135e6e8a9b.png"}Linux 也有自己的软件管家，CentOS 下面是 yum，Ubuntu 下面是 apt-get。你可以根据关键词搜索，例如搜索[jdk]{.orange}、[yum searchjdk]{.orange}和[apt-cache searchjdk]{.orange}，可以搜索出很多很多可以安装的 jdk版本。如果数目太多，你可以通过管道 grep、more、less 来进行过滤。选中一个之后，我们就可以进行安装了。你可以用[yum installjava-11-openjdk.x86_64]{.orange}和[apt-get installopenjdk-9-jdk]{.orange}来进行安装。安装以后，如何卸载呢？我们可以使用[yum erasejava-11-openjdk.x86_64]{.orange}和[apt-get purgeopenjdk-9-jdk]{.orange}。Windows上的软件管家会有一个统一的服务端，来保存这些软件，但是我们不知道服务端在哪里。而Linux 允许我们配置从哪里下载这些软件的，地点就在配置文件里面。对于 CentOS来讲，配置文件在[/etc/yum.repos.d/CentOS-Base.repo]{.orange}里。    [base]name=CentOS-$releasever - Base - 163.combaseurl=http://mirrors.163.com/centos/$releasever/os/$basearch/gpgcheck=1gpgkey=http://mirrors.163.com/centos/RPM-GPG-KEY-CentOS-7 对于 Ubuntu 来讲，配置文件在[/etc/apt/sources.list]{.orange}里。    deb http://mirrors.163.com/ubuntu/ xenial main restricted universe multiversedeb http://mirrors.163.com/ubuntu/ xenial-security main restricted universe multiversedeb http://mirrors.163.com/ubuntu/ xenial-updates main restricted universe multiversedeb http://mirrors.163.com/ubuntu/ xenial-proposed main restricted universe multiversedeb http://mirrors.163.com/ubuntu/ xenial-backports main restricted universe multiverse这里为什么都是 163.com 呢？因为 Linux服务器遍布全球，不能都从一个地方下载，最好选一个就近的地方下载，例如在中国，选择163.com，就不用跨越重洋了。**其实无论是先下载再安装，还是通过软件管家进行安装，都是下载一些文件，然后将这些文件放在某个路径下，然后在相应的配置文件中配置一下。**例如，在Windows 里面，最终会变成 C:\\Program Files下面的一个文件夹以及注册表里面的一些配置。对应 Linux里面会放的更散一点。例如，主执行文件会放在 /usr/bin 或者 /usr/sbin下面，其他的库文件会放在 /var 下面，配置文件会放在 /etc 下面。所以其实还有一种简单粗暴的方法，就是将安装好的路径直接下载下来，然后解压缩成为一个整的路径。在JDK 的安装目录中，Windows 有 jdk-XXX_Windows-x64_bin.zip，这是 Windows下常用的压缩模式。Linux 有 jdk-XXX_linux-x64_bin.tar.gz，这是 Linux下常用的压缩模式。如何下载呢？Linux 上面有一个工具 wget，后面加上链接，就能从网上下载了。下载下来后，我们就可以进行解压缩了。Windows 下可以有 winzip之类的解压缩程序，Linux 下面默认会有 tar 程序。如果是解压缩 zip包，就需要另行安装。    yum install zip.x86_64 unzip.x86_64apt-get install zip unzip如果是 tar.gz 这种格式的，通过 tar xvzf jdk-XXX_linux-x64_bin.tar.gz就可以解压缩了。对于 Windows 上 jdk的安装，如果采取这种下载压缩包的格式，需要在系统设置的环境变量配置里面设置[JAVA_HOME]{.orange}和[PATH]{.orange}。![](Images/18fdd227c2f7d2b1e883f0fa1b50dd9a.png){savepage-src="https://static001.geekbang.org/resource/image/ab/be/ab4e83ac1300658649989a2e016ac0be.png"}在 Linux 也是一样的，通过 tar 解压缩之后，也需要配置环境变量，可以通过export 命令来配置。    export JAVA_HOME=/root/jdk-XXX_linux-x64export PATH=$JAVA_HOME/bin:$PATHexport命令仅在当前命令行的会话中管用，一旦退出重新登录进来，就不管用了，有没有一个地方可以像Windows 里面可以配置永远管用呢？在当前用户的默认工作目录，例如 /root 或者 /home/cliu8下面，有一个.bashrc 文件，这个文件是以点开头的，这个文件默认看不到，需要ls -la 才能看到，a 就是all。每次登录的时候，这个文件都会运行，因而把它放在这里。这样登录进来就会自动执行。当然也可以通过source .bashrc 手动执行。要编辑.bashrc 文件，可以使用文本编辑器 vi，也可以使用更加友好的vim。如果默认没有安装，可以通过 yum install vim 及 apt-get install vim进行安装。**vim 就像 Windows 里面的 notepad一样，是我们第一个要学会的工具**。要不然编辑、查看配置文件，这些操作你都没办法完成。vim是一个很复杂的工具，刚上手的时候，你只需要记住几个命令就行了。vim hello，就是打开一个文件，名字叫hello。如果没有这个文件，就先创建一个。我们其实就相当于打开了一个notepad。如果文件有内容，就会显示出来。移动光标的位置，通过上下左右键就行。如果想要编辑，就把光标移动到相应的位置，输入[i]{.orange}，意思是insert。进入编辑模式，可以插入、删除字符，这些都和 notepad很像。要想保存编辑的文本，我们使用[esc]{.orange}键退出编辑模式，然后输入":"，然后在":"后面输入命令[w]{.orange}，意思是write，这样就可以保存文本，冒号后面输入[q]{.orange}，意思是quit，这样就会退出vim。如果编辑了，还没保存，不想要了，可以输入[q!]{.orange}。好了，掌握这些基本够用了，想了解更复杂的，你可以自己去看文档。通过 vim .bashrc，将 export的两行加入后，输入:wq，写入并且退出，这样就编辑好了。
## 运行程序好了，装好了程序，可以运行程序了。我们都知道 Windows 下的程序，如果后缀名是 exe，双击就可以运行了。Linux 不是根据后缀名来执行的。它的执行条件是这样的：只要文件有 x执行权限，都能到文件所在的目录下，通过[./filename]{.orange}运行这个程序。当然，如果放在PATH 里设置的路径下面，就不用./ 了，直接输入文件名就可以运行了，Linux会帮你找。这是**Linux 执行程序最常用的一种方式，通过 shell在交互命令行里面运行**。这样执行的程序可能需要和用户进行交互，例如允许让用户输入，然后输出结果也打印到交互命令行上。这种方式比较适合运行一些简单的命令，例如通过date获取当前时间。这种模式的缺点是，一旦当前的交互命令行退出，程序就停止运行了。这样显然不能用来运行那些需要"永远"在线的程序。比如说，运行一个博客程序，我总不能老是开着交互命令行，博客才可以提供服务。一旦我要去睡觉了，关了命令行，我的博客别人就不能访问了，这样肯定是不行的。于是，我们就有了**Linux 运行程序的第二种方式，后台运行**。这个时候，我们往往使用[nohup]{.orange}命令。这个命令的意思是 no hangup（不挂起），也就是说，当前交互命令行退出的时候，程序还要在。当然这个时候，程序不能霸占交互命令行，而是应该在后台运行。最后加一个&，就表示后台运行。另外一个要处理的就是输出，原来什么都打印在交互命令行里，现在在后台运行了，输出到哪里呢？输出到文件是最好的。最终命令的一般形式为[nohup command \>out.file 2\>&1&]{.orange}。这里面，"1"表示文件描述符1，表示标准输出，"2"表示文件描述符2，意思是标准错误输出，"2\>&1"表示标准输出和错误输出合并了。合并到哪里去呢？到out.file 里。那这个进程如何关闭呢？我们假设启动的程序包含某个关键字，那就可以使用下面的命令。    ps -ef |grep 关键字  |awk '{print $2}'|xargs kill -9从这个命令中，我们多少能看出 shell 的灵活性和精巧组合。其中 ps -ef 可以单独执行，列出所有正在运行的程序，grep上面我们介绍过了，通过关键字找到咱们刚才启动的程序。awk 工具可以很灵活地对文本进行处理，这里的 awk \'{print\$2}\'是指第二列的内容，是运行的程序 ID。我们可以通过 xargs 传递给 kill-9，也就是发给这个运行的程序一个信号，让它关闭。如果你已经知道运行的程序ID，可以直接使用 kill 关闭运行的程序。在 Windows里面还有一种程序，称为服务。这是系统启动的时候就在的，我们可以通过控制面板的服务管理启动和关闭它。![](Images/f7e895161c5c956e57307a5ea8da14af.png){savepage-src="https://static001.geekbang.org/resource/image/f2/a6/f24f0f11bcb9a177861a4782ba1d82a6.png"}Linux也有相应的服务，这就是**程序运行的第三种方式，以服务的方式运行**。例如常用的数据库MySQL，就可以使用这种方式运行。例如在 Ubuntu 中，我们可以通过 apt-get install mysql-server 的方式安装MySQL，然后通过命令[systemctl start mysql]{.orange}启动MySQL，通过[systemctl enablemysql]{.orange}设置开机启动。之所以成为服务并且能够开机启动，是因为在/lib/systemd/system 目录下会创建一个 XXX.service的配置文件，里面定义了如何启动、如何关闭。在 CentOS 里有些特殊，MySQL 被 Oracle 收购后，因为担心授权问题，改为使用MariaDB，它是 MySQL 的一个分支。通过命令[yum install mariadb-servermariadb]{.orange}进行安装，命令[systemctl startmariadb]{.orange}启动，命令[systemctl enablemariadb]{.orange}设置开机启动。同理，会在 /usr/lib/systemd/system目录下，创建一个 XXX.service 的配置文件，从而成为一个服务。systemd的机制十分复杂，这里咱们不讨论。如果有兴趣，你可以自己查看相关文档。最后咱们要学习的是如何关机和重启。这个就很简单啦。[shutdown -hnow]{.orange}是现在就关机，[reboot]{.orange}就是重启。
## 总结时刻好了，掌握这些基本命令足够你熟练操作 Linux了。如果你是个初学者，这些命令估计看起来还是很多。我把今天这些基本的命令以及对应的操作总结了一下，方便你操作和查阅。你不用可以去死记硬背，按照我讲的这个步骤，从设置用户和密码、浏览文件、安装软件，最后到运行程序，**自己去操作几遍，再自己整理一遍**，手脑并用，加深理解，巩固记忆，效果可能会更好。![](Images/331492a00d9b5cdc2d38793212ef76ba.png){savepage-src="https://static001.geekbang.org/resource/image/88/e5/8855bb645d8ecc35c80aa89cde5d16e5.jpg"}```{=html}```(建议保存查看清晰大图)]{.reference}```{=html}```
## 课堂练习现在你应该已经学会了安装 JDK 和 MySQL，你可以尝试搭建一个基于 Java+MySQL的服务端应用，上手使用一下。欢迎留言和我分享你的疑惑和见解，也欢迎你收藏本节内容，反复研读。你也可以把今天的内容分享给你的朋友，和他一起学习、进步。![](Images/1a5564dd4e1c9f25d4772c7f844ca84a.png){savepage-src="https://static001.geekbang.org/resource/image/8c/37/8c0a95fa07a8b9a1abfd394479bdd637.jpg"}
# 05 \| 学会几个系统调用：咱们公司能接哪些类型的项目？上一节我们讲了几个重要的 Linux 命令行，只有通过这些命令，用户才能把Linux 系统用起来，不知道你掌握得如何了？其实 Linux命令也是一个程序，只不过代码是别人写好的，你直接用就可以了。你可以自己试着写写代码，通过代码把Linux 系统用起来，这样印象会更深刻。不过，无论是别人写的程序，还是你写的程序，运行起来都是进程。如果你是一家外包公司，一个项目的运行要使用公司的服务，那就应该去办事大厅，也就是说，你写的程序应该使用系统调用。你看，系统调用决定了这个操作系统好用不好用、功能全不全。对应到咱们这个公司中，作为一个老板，你应该好好规划一下，你的办事大厅能够提供哪些服务，这决定了你这个公司会被打五星还是打差评。