### Offline Guessing Evaluation

For each of the three datasets (RockYou, LinkedIn, 000Webhost), we sampled 10,000 passwords to create three distinct offline guessing datasets.

### 6.3 Selected Meters from the Literature

#### Academic Proposals

We considered various password strength meter (PSM) proposals from the literature:

- **Heuristic/NIST**: In 2004, the National Institute of Standards and Technology (NIST) published SP 800-63 Ver. 1.0 [11], which includes heuristics based on length and compliance with a composition policy for entropy estimation. The heuristic also considers a bonus if the password passes a common dictionary check. The latest version, SP 800-63B [31] from June 2017, no longer includes this ad-hoc heuristic.
- **Markov Model/OMEN**: In 2012, Castelluccia et al. [13] proposed training n-gram Markov models on the passwords of a service to provide accurate strength estimations. The estimation is based on the probabilities of the n-grams that compose the password. The meter provides adaptive estimations based on a target distribution but is limited to server-side implementations.
- **Heuristic/Comp8**: In 2012, Ur et al. [61] investigated how PSMs can nudge users towards stronger passwords. They outlined a scoring algorithm derived from a composition policy called "Comprehensive 8." Despite its limitations, this LUDS-based approach was included for completeness.
- **Heuristics/zxcvbn**: In 2012, Daniel Wheeler proposed a PSM in a Dropbox Inc. blog post. It uses advanced heuristics that extend the LUDS approach by including dictionaries, leetspeak transformations, keyboard walks, and more. Due to its easy integration, it is widely deployed on many websites. Recent scientific analysis [71] has validated its effectiveness.
- **PCFG/fuzzyPSM**: In 2012, Houshmand and Aggarwal [34] proposed a system to analyze password strength using a PCFG-based approach. In 2016, Wang et al. [65] extended this concept by proposing a fuzzy PCFG to model password strength, based on mangling rules required to modify a basic dictionary to match a training distribution of stronger passwords.
- **Heuristic/Eleven**: In 2013, Egelman et al. [22] studied password selection in the presence of PSMs. Their meter uses a similar metric for strength as NIST, considering character set sizes and length.
- **RNN/DD-PSM**: In 2016, Melicher et al. [46] proposed using a recurrent neural network for probabilistic password modeling. We used the guess number estimations provided by the RNN. The authors also describe a method for client-side implementation using a special encoding and a Bloom filter. In 2017, Ur et al. [59] extended this concept by adding data-driven feedback using 21 heuristics to explain how to improve password choice. We used Ur’s website [4] for additional measurements.
- **Heuristic/LPSE**: In 2018, Guo et al. [32] proposed a lightweight client-side meter based on cosine-length and password-edit distance similarity. It transforms a password into a LUDS vector and compares it to a standardized strong-password vector using the aforementioned similarity measures.

#### Password Managers

We also tested meters from 11 popular password managers, including 1Password [2], Bitwarden [1], Dashlane [14], Enpass [55], KeePass [51], Keeper [39], LastPass [43], and more. These managers protect high-value encrypted password vaults, and their security often depends on the use of a high-entropy secret.

#### Popular Websites

We queried PSMs from popular web services within the top 100 ranking published by Alexa Internet, including Apple, Baidu, Dropbox, Facebook, Google, Microsoft, Reddit, Twitter, Sina Weibo, Yandex, and more. For better comparability, we included sites that were queried in previous work by de Carné de Carnavalet and Mannan [16].

#### Operating Systems

We analyzed PSMs from standard operating systems. While Microsoft’s Windows and Apple’s macOS do not provide strength estimation during account creation, Apple includes a Password Assistant with a strength estimation function in the Keychain Access application. Canonical’s Ubuntu distribution shows a PSM during account creation and hard disk encryption setup, based on Mozilla’s Seamonkey PSM function.

### 6.4 Querying Meters

To query the website PSMs, we used techniques similar to those in previous work [16]. For JavaScript and server-side implementations, we used the Selenium framework [35] to automate a headless Google Chrome browser. This approach allows us to execute JavaScript and access intermediate results in the Document Object Model (DOM).

For academic proposals, a more sophisticated approach was required due to the need for training or the unavailability of implementations. We sampled 10 million passwords from each sanitized dataset (excluding the respective offline and online passwords). Note that not all meters make full use of all available training data. For example, fuzzyPSM, OMEN, and the RNN-based approach have specific requirements. The Markov model approach used by OMEN does not allow training passwords shorter than the n-gram size. FuzzyPSM does not require a training corpus larger than 1 million passwords. For the RNN-based approach, we limited the training set to passwords no longer than 30 characters.

### Table 4: Weighted Spearman Correlation

| ID | Meter | Type | Quant. | RockYou | LinkedIn | 000Webhost | RockYou | LinkedIn | 000Webhost |
|---|---|---|---|---|---|---|---|---|---|
| 1A | Comprehensive8 [61] | C | - | -0.652 | 0.670 | 0.584 | -0.589 | 0.912 | 0.669 |
| 2 | LPSE [32] | C | - | 0.721 | 0.669 | 1.000 | 0.998 | 0.910 | 0.994 |
| 3 | Markov (Multi) [27] | C | - | 0.251 | 0.492 | 0.508 | 0.902 | 0.472 | 0.963 |
| 4C | RNN Target [46] | C | - | 0.951 | 0.965 | 0.554 | -0.476 | 0.755 | 0.544 |
| 5B | NIST (w. Dict.) [11] | S | - | 0.997 | 0.756 | 0.998 | 0.896 | 0.989 | -0.616 |
| 6 | fuzzyPSM [65] | C | - | 0.995 | 0.953 | 0.999 | 0.860 | 0.999 | 0.885 |
| 7C | zxcvbn (Guess Number) [71] | C | - | 0.441 | 0.733 | 0.693 | 0.777 | 0.816 | 0.899 |

**Type**: C=Client, S=Server; **Quantization**: Q3–Q6=Number of bins, e.g., Q5=[Terrible, Weak, Good, Excellent, Fantastic]

### 7. Results

#### 7.1 Overall Performance

The top-performing academic meters are:
- ID: 6 fuzzyPSM (0.899 − 1.000)
- ID: 7C RNN Target (0.860 − 0.965)
- ID: 4C Markov (Multi) (0.721 − 0.998)

For password managers, the most accurate meters are:
- ID: 13A KeePass (0.284 − 0.884)
- ID: 14B Keeper (0.284 − 0.884)
- ID: 17B RoboForm (0.528 − 0.962)

Among binning PSMs, some zxcvbn (Score)-based meters, such as ID: 17A RoboForm (Q4), ID: 17C RoboForm Business (Q6), ID: 18 True Key (Q5), and ID: 12 Enpass (Q5), perform well (0.341 − 0.827). However, ID: 10A Bitwarden, ID: 16B LogMeOnce, and ID: 19A Zoho Vault show significant inaccuracies, likely due to their LUDS-based approaches.

#### 7.2 Effect of Quantization

Most website PSMs provide binned outputs, which can reduce accuracy. Weighted Spearman correlation is relatively robust against this effect. We qualitatively analyzed the estimates of binning meters to compare weighted Spearman correlation with over- and underestimates.

- **≥ 10³ | V Bin**: Includes weak passwords (10³ ≤ guess number < 10⁶) misjudged as strong. ID: 41B Twitter's bin revealed weaknesses in detecting keyboard walks and leet transformations. ID: 8B zxcvbn (Score)’s bin includes misdosamores and mardelplata (film and city names), as well as oportunidades (common Spanish term).
- **≥ 10¹⁰ | II Bin**: Includes strong passwords misjudged as somewhat weak. ID: 41B Twitter’s bin had issues with digit-only passwords and lowercase phrases. ID: 8B zxcvbn (Score)’s bin includes zxcvbvcxz (a variation of the meter’s name) and phrases like atlantasports.

#### 7.3 Performance Over Time

Comparing our results with those from de Carné de Carnavalet and Mannan [16] (collected in June/July 2013), we observed:
- Some meters, such as ID: 26A vs. 26B (China Railway) and ID: 31B vs. 31C (Fedex), did not change.
- Some meters, such as ID: 23A vs. 23C (Apple), ID: 27A vs. 27B (Dropbox), and ID: 28B vs. 28C (Drupal), showed degraded ranking accuracy.
- Positive developments were seen in ID: 32A vs. 32B (Google), ID: 42B vs. 42C (Yandex), and ID: 41B vs. 41C (Twitter).

Overall, the performance of PSMs has slightly improved, but no significant changes were observed.