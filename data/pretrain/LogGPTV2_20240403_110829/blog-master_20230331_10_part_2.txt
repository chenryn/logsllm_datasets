+ ('["a",]');  
+SELECT  
+   js,  
+   js IS JSON "IS JSON",  
+   js IS NOT JSON "IS NOT JSON",  
+   js IS JSON VALUE "IS VALUE",  
+   js IS JSON OBJECT "IS OBJECT",  
+   js IS JSON ARRAY "IS ARRAY",  
+   js IS JSON SCALAR "IS SCALAR",  
+   js IS JSON WITHOUT UNIQUE KEYS "WITHOUT UNIQUE",  
+   js IS JSON WITH UNIQUE KEYS "WITH UNIQUE"  
+FROM  
+   test_is_json;  
+                      js                       | IS JSON | IS NOT JSON | IS VALUE | IS OBJECT | IS ARRAY | IS SCALAR | WITHOUT UNIQUE | WITH UNIQUE   
+-----------------------------------------------+---------+-------------+----------+-----------+----------+-----------+----------------+-------------  
+                                               |         |             |          |           |          |           |                |   
+                                               | f       | t           | f        | f         | f        | f         | f              | f  
+ 123                                           | t       | f           | t        | f         | f        | t         | t              | t  
+ "aaa "                                        | t       | f           | t        | f         | f        | t         | t              | t  
+ true                                          | t       | f           | t        | f         | f        | t         | t              | t  
+ null                                          | t       | f           | t        | f         | f        | t         | t              | t  
+ []                                            | t       | f           | t        | f         | t        | f         | t              | t  
+ [1, "2", {}]                                  | t       | f           | t        | f         | t        | f         | t              | t  
+ {}                                            | t       | f           | t        | t         | f        | f         | t              | t  
+ { "a": 1, "b": null }                         | t       | f           | t        | t         | f        | f         | t              | t  
+ { "a": 1, "a": null }                         | t       | f           | t        | t         | f        | f         | t              | f  
+ { "a": 1, "b": [{ "a": 1 }, { "a": 2 }] }     | t       | f           | t        | t         | f        | f         | t              | t  
+ { "a": 1, "b": [{ "a": 1, "b": 0, "a": 2 }] } | t       | f           | t        | t         | f        | f         | t              | f  
+ aaa                                           | f       | t           | f        | f         | f        | f         | f              | f  
+ {a:1}                                         | f       | t           | f        | f         | f        | f         | f              | f  
+ ["a",]                                        | f       | t           | f        | f         | f        | f         | f              | f  
+(16 rows)  
+  
+SELECT  
+   js,  
+   js IS JSON "IS JSON",  
+   js IS NOT JSON "IS NOT JSON",  
+   js IS JSON VALUE "IS VALUE",  
+   js IS JSON OBJECT "IS OBJECT",  
+   js IS JSON ARRAY "IS ARRAY",  
+   js IS JSON SCALAR "IS SCALAR",  
+   js IS JSON WITHOUT UNIQUE KEYS "WITHOUT UNIQUE",  
+   js IS JSON WITH UNIQUE KEYS "WITH UNIQUE"  
+FROM  
+   (SELECT js::json FROM test_is_json WHERE js IS JSON) foo(js);  
+                      js                       | IS JSON | IS NOT JSON | IS VALUE | IS OBJECT | IS ARRAY | IS SCALAR | WITHOUT UNIQUE | WITH UNIQUE   
+-----------------------------------------------+---------+-------------+----------+-----------+----------+-----------+----------------+-------------  
+ 123                                           | t       | f           | t        | f         | f        | t         | t              | t  
+ "aaa "                                        | t       | f           | t        | f         | f        | t         | t              | t  
+ true                                          | t       | f           | t        | f         | f        | t         | t              | t  
+ null                                          | t       | f           | t        | f         | f        | t         | t              | t  
+ []                                            | t       | f           | t        | f         | t        | f         | t              | t  
+ [1, "2", {}]                                  | t       | f           | t        | f         | t        | f         | t              | t  
+ {}                                            | t       | f           | t        | t         | f        | f         | t              | t  
+ { "a": 1, "b": null }                         | t       | f           | t        | t         | f        | f         | t              | t  
+ { "a": 1, "a": null }                         | t       | f           | t        | t         | f        | f         | t              | f  
+ { "a": 1, "b": [{ "a": 1 }, { "a": 2 }] }     | t       | f           | t        | t         | f        | f         | t              | t  
+ { "a": 1, "b": [{ "a": 1, "b": 0, "a": 2 }] } | t       | f           | t        | t         | f        | f         | t              | f  
+(11 rows)  
+  
+SELECT  
+   js0,  
+   js IS JSON "IS JSON",  
+   js IS NOT JSON "IS NOT JSON",  
+   js IS JSON VALUE "IS VALUE",  
+   js IS JSON OBJECT "IS OBJECT",  
+   js IS JSON ARRAY "IS ARRAY",  
+   js IS JSON SCALAR "IS SCALAR",  
+   js IS JSON WITHOUT UNIQUE KEYS "WITHOUT UNIQUE",  
+   js IS JSON WITH UNIQUE KEYS "WITH UNIQUE"  
+FROM  
+   (SELECT js, js::bytea FROM test_is_json WHERE js IS JSON) foo(js0, js);  
+                      js0                      | IS JSON | IS NOT JSON | IS VALUE | IS OBJECT | IS ARRAY | IS SCALAR | WITHOUT UNIQUE | WITH UNIQUE   
+-----------------------------------------------+---------+-------------+----------+-----------+----------+-----------+----------------+-------------  
+ 123                                           | t       | f           | t        | f         | f        | t         | t              | t  
+ "aaa "                                        | t       | f           | t        | f         | f        | t         | t              | t  
+ true                                          | t       | f           | t        | f         | f        | t         | t              | t  
+ null                                          | t       | f           | t        | f         | f        | t         | t              | t  
+ []                                            | t       | f           | t        | f         | t        | f         | t              | t  
+ [1, "2", {}]                                  | t       | f           | t        | f         | t        | f         | t              | t  
+ {}                                            | t       | f           | t        | t         | f        | f         | t              | t  
+ { "a": 1, "b": null }                         | t       | f           | t        | t         | f        | f         | t              | t  
+ { "a": 1, "a": null }                         | t       | f           | t        | t         | f        | f         | t              | f  
+ { "a": 1, "b": [{ "a": 1 }, { "a": 2 }] }     | t       | f           | t        | t         | f        | f         | t              | t  
+ { "a": 1, "b": [{ "a": 1, "b": 0, "a": 2 }] } | t       | f           | t        | t         | f        | f         | t              | f  
+(11 rows)  
+  
+SELECT  
+   js,  
+   js IS JSON "IS JSON",  
+   js IS NOT JSON "IS NOT JSON",  
+   js IS JSON VALUE "IS VALUE",  
+   js IS JSON OBJECT "IS OBJECT",  
+   js IS JSON ARRAY "IS ARRAY",  
+   js IS JSON SCALAR "IS SCALAR",  
+   js IS JSON WITHOUT UNIQUE KEYS "WITHOUT UNIQUE",  
+   js IS JSON WITH UNIQUE KEYS "WITH UNIQUE"  
+FROM  
+   (SELECT js::jsonb FROM test_is_json WHERE js IS JSON) foo(js);  
+                 js                  | IS JSON | IS NOT JSON | IS VALUE | IS OBJECT | IS ARRAY | IS SCALAR | WITHOUT UNIQUE | WITH UNIQUE   
+-------------------------------------+---------+-------------+----------+-----------+----------+-----------+----------------+-------------  
+ 123                                 | t       | f           | t        | f         | f        | t         | t              | t  
+ "aaa "                              | t       | f           | t        | f         | f        | t         | t              | t  
+ true                                | t       | f           | t        | f         | f        | t         | t              | t  
+ null                                | t       | f           | t        | f         | f        | t         | t              | t  
+ []                                  | t       | f           | t        | f         | t        | f         | t              | t  
+ [1, "2", {}]                        | t       | f           | t        | f         | t        | f         | t              | t  
+ {}                                  | t       | f           | t        | t         | f        | f         | t              | t  
+ {"a": 1, "b": null}                 | t       | f           | t        | t         | f        | f         | t              | t  
+ {"a": null}                         | t       | f           | t        | t         | f        | f         | t              | t  
+ {"a": 1, "b": [{"a": 1}, {"a": 2}]} | t       | f           | t        | t         | f        | f         | t              | t  
+ {"a": 1, "b": [{"a": 2, "b": 0}]}   | t       | f           | t        | t         | f        | f         | t              | t  
+(11 rows)  
+  
+-- Test IS JSON deparsing  
+EXPLAIN (VERBOSE, COSTS OFF)  
+SELECT '1' IS JSON AS "any", ('1' || i) IS JSON SCALAR AS "scalar", '[]' IS NOT JSON ARRAY AS "array", '{}' IS JSON OBJECT WITH UNIQUE AS "object" FROM generate_series(1, 3) i;  
+                                                                        QUERY PLAN                                                                          
+----------------------------------------------------------------------------------------------------------------------------------------------------------  
+ Function Scan on pg_catalog.generate_series i  
+   Output: ('1'::text IS JSON), (('1'::text || (i)::text) IS JSON SCALAR), (NOT ('[]'::text IS JSON ARRAY)), ('{}'::text IS JSON OBJECT WITH UNIQUE KEYS)  
+   Function Call: generate_series(1, 3)  
+(3 rows)  
+  
+CREATE VIEW is_json_view AS  
+SELECT '1' IS JSON AS "any", ('1' || i) IS JSON SCALAR AS "scalar", '[]' IS NOT JSON ARRAY AS "array", '{}' IS JSON OBJECT WITH UNIQUE AS "object" FROM generate_series(1, 3) i;  
+\sv is_json_view  
+CREATE OR REPLACE VIEW public.is_json_view AS  
+ SELECT '1'::text IS JSON AS "any",  
+    ('1'::text || i) IS JSON SCALAR AS scalar,  
+    NOT '[]'::text IS JSON ARRAY AS "array",  
+    '{}'::text IS JSON OBJECT WITH UNIQUE KEYS AS object  
+   FROM generate_series(1, 3) i(i)  
+DROP VIEW is_json_view;  
```  
#### [期望 PostgreSQL|开源PolarDB 增加什么功能?](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
#### [PolarDB 云原生分布式开源数据库](https://github.com/ApsaraDB "57258f76c37864c6e6d23383d05714ea")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、内核开发公开课、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [PostgreSQL 解决方案集合](../201706/20170601_02.md "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")