# The CrossPath Attack: Disrupting the SDN Control Channel via Shared Links

**Authors:**
- Jiahao Cao, Qi Li, Renjie Xie, Kun Sun, Guofei Gu, Mingwei Xu, and Yuan Yang
- Affiliations: Tsinghua University, George Mason University, Texas A&M University

**Publication:**
- [Proceedings of the 28th USENIX Security Symposium](https://www.usenix.org/conference/usenixsecurity19/presentation/cao)
- August 14â€“16, 2019, Santa Clara, CA, USA
- ISBN: 978-1-939133-06-9
- Open access sponsored by USENIX

## Abstract

Software-Defined Networking (SDN) enables network innovations with a centralized controller that manages the entire network through the control channel. The security and reliability of this control channel are critical, as it handles all network control traffic. In this paper, we introduce the CrossPath attack, which disrupts the SDN control channel by exploiting shared links between control and data traffic paths. By generating crafted data traffic, the attack can implicitly interfere with the forwarding of control traffic on these shared links, making it stealthy and difficult to detect. To identify target paths containing shared links, we develop a novel technique called adversarial path reconnaissance. Both theoretical analysis and experimental results demonstrate the feasibility and efficiency of this technique. We systematically study the impact of the CrossPath attack on various network applications in a real SDN testbed, showing significant degradation in performance and serious network anomalies, such as routing blackholes, flow table resets, and network-wide DoS.

## 1. Introduction

Software-Defined Networking (SDN) has gained popularity and is widely deployed in data centers, cloud networks, and wide area networks. In SDN, the control plane and data plane are decoupled, with a logically centralized controller communicating with SDN switches via the control channel, typically using the OpenFlow protocol. This architecture enables diverse packet processing and drives network innovation, benefiting numerous network services and applications.

However, the SDN control channel is not well-protected, despite the use of TLS/SSL for confidentiality and integrity. We find that the control channel is vulnerable to Denial-of-Service (DoS) attacks, where a small amount of traffic can disrupt communication. Existing studies have focused on various security aspects of SDN, including malicious or buggy applications, attacks on controllers and switches, and information leakage, but the security of the SDN control channel remains an open problem.

In this paper, we propose the CrossPath attack, which exploits shared links between control and data traffic paths to disrupt the SDN control channel. The attack is stealthy because it does not directly flood the control channel with a large volume of traffic. Instead, it generates well-crafted data traffic on the shared links, implicitly interfering with the delivery of control traffic. This can significantly delay or drop real-time control messages, leading to severe network disruptions. The root cause of this vulnerability is the side effect of shared links, a common practice in SDN with in-band control, which reduces the cost of building a dedicated control network but also opens the door to potential attacks.

## 2. Background and Threat Model

### 2.1 Background

SDN decouples the control and data planes, providing programmability and flexibility. The control plane, often referred to as the controller, runs on commodity servers and can deploy various network applications for functions like routing, monitoring, and load balancing. The data plane consists of "dumb" SDN switches that forward packets based on rules installed by the controller.

The primary communication protocol between the control and data planes is OpenFlow, standardized by the Open Networking Foundation (ONF). OpenFlow allows the controller to dynamically specify switch forwarding behaviors by installing flow rules. Each rule includes match fields, instructions, and counters. When a switch receives a packet, it processes it based on the highest-priority matching rule. If no rules match, the switch sends the packet to the controller via the control channel, and the controller makes decisions and installs the corresponding rules.

To reduce the cost of building a dedicated control network, especially in large-scale networks, OpenFlow allows control and data traffic to share some links, known as in-band control.

### 2.2 Threat Model

We consider an SDN network using the OpenFlow protocol with a reactive approach to install flow rules over an in-band control channel. We assume an attacker has compromised at least one host in the network, which can be easily achieved, for example, by renting a virtual machine in an SDN-based cloud network. The attacker's goal is to craft data traffic to disrupt the SDN control channel.

The attacker does not need prior knowledge of the network or any privileges. The CrossPath attack does not require compromising controllers, applications, or switches, nor constructing man-in-the-middle attacks on the control channel. The control channel can be protected with TLS/SSL, and we assume that controllers, switches, and applications are well-protected.

## 3. The CrossPath Attack

### 3.1 Overview

The CrossPath attack aims to disrupt the SDN control channel by exploiting shared links between control and data traffic paths. The attacker generates data traffic on these shared links, causing delays or drops in control messages. This can break down network functionalities enabled by SDN applications.

To achieve this, the attacker uses a host in the network to generate probing traffic to identify target paths with shared links. The attacker then sends attack traffic to these paths, using low-rate TCP-targeted DoS (LDoS) to generate periodic on-off "square-wave" traffic, leading to repeated TCP retransmission timeouts for the control channel.

### 3.2 Adversarial Path Reconnaissance

To address the challenge of finding target paths in SDN, we develop a probing technique called adversarial path reconnaissance. This technique is based on the observation that the delay of a control path increases if a short-term burst of data traffic passes through shared links. The attacker can use a host in the SDN to identify key data paths by generating timing packets to measure the latency variation of control messages with and without injecting a short-term burst of data traffic. By conducting this reconnaissance on each possible path, the attacker can accurately identify a target path.

Our experiments with 261 real network topologies show that the conditions for successful probing can be easily met in practice. Theoretical analysis and experimental results demonstrate the high efficiency of our probing technique, requiring exploration of fewer than 50 paths on average in a network with 1,000 paths and only 2% of them containing shared links.

## 4. Evaluation

We evaluate the feasibility and effectiveness of the CrossPath attack in both large-scale simulations and real SDN testbeds. Our experiments show that the attack can significantly degrade the performance of SDN applications, such as ARP Proxy, Learning Switch, Reactive Routing, and Load Balancer. The results include:

- **ARP Proxy:** Response delays increase by up to 10 times, and the number of ARP replies decreases by 95%.
- **Learning Switch:** Forwarding decisions cannot be installed, reducing data plane throughput to 0 Mbps.
- **Reactive Routing:** Routing information updates are delayed, leading to routing loops, blackholes, and flow table resets.
- **Load Balancer:** Incorrect decisions result in link overloading.

## 5. Impact Analysis

We conduct a systematic study of the impacts of the CrossPath attack on different SDN applications. Our detailed analysis and extensive experiments show that the attack can severely affect almost all SDN applications, as it targets the core services in SDN controllers that support these applications.

## 6. Defense Mechanisms

We discuss defense mechanisms that can be immediately deployed to mitigate the CrossPath attack. These include:

- **Network Segmentation:** Isolating control and data traffic to prevent shared links.
- **Traffic Monitoring and Anomaly Detection:** Detecting and mitigating abnormal traffic patterns.
- **Rate Limiting and Traffic Shaping:** Controlling the rate and pattern of data traffic to prevent LDoS attacks.

## 7. Related Work

We review related work on SDN security, including studies on malicious applications, attacks on controllers and switches, and information leakage. The CrossPath attack is unique in its focus on disrupting the SDN control channel via shared links.

## 8. Conclusion

In summary, our paper presents the CrossPath attack, a novel method to disrupt the SDN control channel by exploiting shared links between control and data traffic paths. We develop an effective probing technique, adversarial path reconnaissance, to identify target paths with high accuracy. Our experiments demonstrate the feasibility and effectiveness of the attack, and we provide recommendations for defense mechanisms to mitigate the threat.