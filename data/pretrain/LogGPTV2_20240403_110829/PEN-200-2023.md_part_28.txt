• Perform common enumeration techninques on web applications
• Understand Web Proxies theory
i
• Learn how Burp Suite proxy works for web application testing
z
Before going into the details of web application enumeration, let’s familiarize ourselves with the
tools of the trade. In thiDs Learning Unit, we are going to revisit Nmap for web services
enumeration, along with Wappalyzer, an online service that discloses the technology stack behind
an application, and Gobuster, a tool for performing file and web directory discovery. Lastly, we are
going to focus on the Burp Suite proxy, which we’ll rely on heavily for web application testing
during this and upcoming Modules.
8.2.1 Fingerprinting Web Servers with Nmap
As covered in a previous Module, Nmap is the go-to tool for initial active enumeration. We should
start web application enumeration from its core component, the web server, since this is the
common denominator of any web application that exposes its services.
Since we found port 80 open on our target, we can proceed with service discovery. To get started,
we’ll rely on the nmap service scan (-sV) to grab the web server (-p80) banner.
kali@kali:~$ sudo nmap -p80 -sV 192.168.50.20
Starting Nmap 7.92 ( https://nmap.org ) at 2022-03-29 05:13 EDT
Nmap scan report for 192.168.50.20
Host is up (0.11s latency).
341 (OWASP, 2022), https://owasp.org/www-project-top-ten/
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 200
Made in Morocco
Penetration Testing with Kali Linux
PORT STATE SERVICE VERSION
80/tcp open http Apache httpd 2.4.41 ((Ubuntu))
Listing 98 - Running Nmap scan to discover web server version
Our scan shows that Apache version 2.4.41 is running on the Ubuntu host.
To take our enumeration further, we use service-specific Nmap NSE scripts, like http-enum, which
performs an initial fingerprinting of the web server.
kali@kali:~$ sudo nmap -p80 --script=http-enum 192.168.50.20
Starting Nmap 7.92 ( https://nmap.org ) at 2022-03-29 06:30 EDT
Nmap scan report for 192.168.50.20
Host is up (0.10s latency).
PORT STATE SERVICE y
80/tcp open http
| http-enum:
| /login.php: Possible admin folder k
| /db/: BlogWorx Database
| /css/: Potentially interesting directory w/ listing on 'apache/2.4.41 (ubuntu)'
s
| /db/: Potentially interesting directory w/ listing on 'apache/2.4.41 (ubuntu)'
| /images/: Potentially interesting directory w/ listing on 'apache/2.4.41 (ubuntu)'
| /js/: Potentially interesting directory wo/ listing on 'apache/2.4.41 (ubuntu)'
|_ /uploads/: Potentially interesting directory w/ listing on 'apache/2.4.41
(ubuntu)'
n
Nmap done: 1 IP address (1 host up) scanned in 16.82 seconds
Listing 99 - Running Nmap NSE http enumeration script against the target
i
As shown above, we discovered szeveral interesting folders that could lead to further details about
the target web application.
By using Nmap scripts, weD managed to discover more application-specific information that we
can add to the web server enumeration we performed earlier.
8.2.2 Technology Stack Identification with Wappalyzer
Along with the active information gathering we performed via Nmap, we can also passively fetch
a wealth of information about the application technology stack via Wappalyzer.342
Once we have registered a free account, we can perform a Technology Lookup on the
megacorpone.com domain.
342 (Wappalyzer, 2022), https://www.wappalyzer.com/
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 201
Made in Morocco
Penetration Testing with Kali Linux
y
k
s
o
n
i
z
D
Figure 81: Wappalyzer findings
From this quick third-party external analysis, we learned about the OS, the UI framework, the web
server, and more. The findings also provide information about JavaScript libraries used by the
web application - this can be valuable data, as some versions of JavaScript libraries are known to
be affected by several vulnerabilities.
8.2.3 Directory Brute Force with Gobuster
Once we have discovered an application running on a web server, our next step is to map all its
publicly-accessible files and directories. To do this, we would need to perform multiple queries
against the target to discover any hidden paths. Gobuster343 is a tool (written in Go language) that
can help us with this sort of enumeration. It uses wordlists to discover directories and files on a
server through brute forcing.
343 (OJ, 2022), https://www.kali.org/tools/gobuster/
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 202
Made in Morocco
Penetration Testing with Kali Linux
Due to its brute forcing nature, Gobuster can generate quite a lot of traffic,
meaning it will not be helpful when staying under the radar is necessary.
Gobuster supports different enumeration modes, including fuzzing and dns, but for now, we’ll only
rely on the dir mode, which enumerates files and directories. We need to specify the target IP
using the -u parameter and a wordlist with -w. The default running threads are 10; we can reduce
the amount of traffic by setting a lower number via the -t parameter.
kali@kali:~$ gobuster dir -u 192.168.50.20 -w /usr/share/wordlists/dirb/common.txt -t
5
===============================================================
Gobuster v3.1.0
by OJ Reeves (@TheColonial) & Christian Mehlmauer (@firefart)y
===============================================================
[+] Url: http://192.168.50.20
k
[+] Method: GET
[+] Threads: 5
[+] Wordlist: /usr/share/wordlists/sdirb/common.txt
[+] Negative Status codes: 404
[+] User Agent: gobuster/3.1.0
[+] Timeout: 10s o
===============================================================
2022/03/30 05:16:21 Starting gobuster in directory enumeration mode
=======================================n========================
/.hta (Status: 403) [Size: 278]
/.htaccess (Status: 403) [Size: 278]
i
/.htpasswd (Status: 403) [Size: 278]
/css (Status:z 301) [Size: 312] [--> http://192.168.50.20/css/]
/db (Status: 301) [Size: 311] [--> http://192.168.50.20/db/]
/images (Status: 301) [Size: 315] [--> http://192.168.50.20/images/]
D
/index.php (Status: 302) [Size: 0] [--> ./login.php]
/js (Status: 301) [Size: 311] [--> http://192.168.50.20/js/]
/server-status (Status: 403) [Size: 278]
/uploads (Status: 301) [Size: 316] [--> http://192.168.50.20/uploads/]
===============================================================
2022/03/30 05:18:08 Finished
===============================================================
Listing 100 - Running Gobuster
Under the /usr/share/wordlists/dirb/ folder we selected the common.txt wordlist, which found
ten resources. Four of these resources are inaccessible due to insufficient privileges (Status:
403). However, the remaining six are accessible and deserve further investigation.
8.2.4 Security Testing with Burp Suite
Burp Suite344 is a GUI-based integrated platform for web application security testing. It provides
several different tools via the same user interface.
344 (PortSwigger, 2022), https://portswigger.net/burp
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 203
Made in Morocco
Penetration Testing with Kali Linux
While the free Community Edition mainly contains tools used for manual testing, the commercial
versions include additional features, including a formidable web application vulnerability scanner.
Burp Suite has an extensive feature list and is worth investigating, but we will only explore a few
basic functions in this section.
We can find Burp Suite Community Edition in Kali under Applications > 03 Web Application
Analysis > burpsuite.
y
k
s
o
n
i
z
D
Figure 82: Starting Burp Suite
We can also launch it from the command line with burpsuite:
kali@kali:~$ burpsuite
Listing 101 - Starting Burp Suite from a terminal shell
After our initial launch, we’ll first notice a warning that Burp Suite has not been tested on our Java
Runtime Environment (JRE).345 Since the Kali team always tests Burp Suite on the Java version
shipped with the OS, we can safely ignore this warning.
345 (Oracle, 2022), https://www.java.com/en/download/help/whatis_java.html
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 204
Made in Morocco
Penetration Testing with Kali Linux
y
k
Figure 83: Burp Suite JRE warning
s
Once it launches, we’ll choose Temporary project and click Next.
o
n
i
z
D
Figure 84: Burp Startup
We’ll leave Use Burp defaults selected and click Start Burp.
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 205
Made in Morocco
Penetration Testing with Kali Linux
y
k
s
o
n
Figure 85: Burp Configuration
After a few moments, the UI will load.
i
z
D
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 206
Made in Morocco
Penetration Testing with Kali Linux
y
k
s
o
n
Figure 86: Burp Suite User Interface
i
The initial four panes of the interface primarily serve as a summary for the Pro version scanner,
z
so we can ignore them. Instead, we are going to focus on the features present on the tabs in the
upper bar.
D
Let’s start with the Proxy tool. In general terms, a web proxy is any dedicated hardware or
software meant to intercept requests and/or responses between the web client and the web
server. This allows administrators and testers alike to modify any requests that are intercepted by
the proxy, both manually and automatically.
Some web proxies are employed to intercept company-wide TLS traffic. Known
as TLS inspection devices, these perform decryption and re-encryption of the
traffic and thus nullify any privacy layer provided by the HTTPS protocol.
With the Burp Proxy tool, we can intercept any request sent from the browser before it is passed
on to the server. We can change almost anything about the request at this point, such as
parameter names or form values. We can even add new headers. This lets us test how an
application handles unexpected arbitrary input. For example, an input field might have a size limit
of 20 characters, but we could use Burp Suite to modify a request to submit 30 characters.
In order to set up a proxy, we will first click the Proxy tab to reveal several sub-tabs. We’ll also
disable the Intercept tool, found under the Intercept tab.
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 207
Made in Morocco
Penetration Testing with Kali Linux
When Intercept is enabled, we have to manually click on Forward to send each
request to its destination. Alternatively, we can click Drop to not send the
request. There are times when we will want to intercept traffic and modify it, but
when we are just browsing a site, having to click Forward on each request is very
tedious.
y
k
s
o
n
i
z
D
Figure 87: Turning Off Intercept
Next, we can review the proxy listener settings. The Options sub-tab shows what ports are
listening for proxy requests.
Figure 88: Proxy Listeners
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 208
Made in Morocco
Penetration Testing with Kali Linux
By default, Burp Suite enables a proxy listener on localhost:8080. This is the host and port that our
browser must connect to in order to proxy traffic through Burp Suite.
Burp Suite is now shipped with its own Chromium-based native web browser,
which is preconfigured to work with all Burp’s features. However, for this course
we are going to exclusively rely on Kali’s Firefox browser because it is a more
flexible and modular option.
Let’s demonstrate how to configure our local Kali machine with the Firefox browser to use Burp
Suite as a proxy.
In Firefox, we can do this by navigating to about:preferences#general, scrolling down to Network
y
Settings, then clicking Settings.
Let’s choose the Manual option, setting the appropriate IP addkress and listening port. In our case,
the proxy (Burp) and the browser reside on the same host, so we’ll use the loopback IP address
127.0.0.1 and specify port 8080. s
o
In some testing scenarios, we might want to capture the traffic from multiple
machines, so the proxy will be configured on a standalone IP. In such cases, we
will configure the browser with the nexternal IP address of the proxy.
i
Finally, we also want to enable tzhis proxy server for all protocol options to ensure that we can
intercept every request while testing the target application.
D
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 209
Made in Morocco
Penetration Testing with Kali Linux
y
k
s
o
n
i
z
D
Figure 89: Firefox Proxy Configuration.
With Burp configured as a proxy on our browser, we can close any extra open Firefox tabs and
browse to http://www.megacorpone.com. We should find the intercepted traffic in Burp Suite
under Proxy > HTTP History.
Figure 90: Burp Suite HTTP History
We can now review the various requests our browser performed towards our target website.
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 210
Made in Morocco
Penetration Testing with Kali Linux
If the browser hangs while loading the page, Intercept may be enabled. Switching
it off will allow the traffic to flow uninterrupted. As we browse to additional
pages, we should observe more requests in the HTTP History tab.
By clicking on one of the requests, the entire dump of client requests and server responses is
shown in the lower half of the Burp UI.
y
k
s
o
n
i
z
D
Figure 91: Inspecting the first HTTP request.
On the left pane we can visualize the client request details, with the server response on the right