proposed system (TVP+rIP+rDomain) can precisely predict
future malicious domain names 220 days before the ground
truths, such as honeyclients and sandbox systems, and identify
them as malicious in the best case. Comparing the above
results with Table VI reveals that the common/typical feature
set (rIP+rDomain) also detects malicious domain names early;
499
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:19:55 UTC from IEEE Xplore.  Restrictions apply. 
however, the number of detected domain names (TP) is quite
small. We conclude that our proposed system using TVPs
outperforms the system using only the common/typical feature
set from the perspective of both accuracy and earliness.
F. Effectiveness of Our Temporal Variation Patterns (TVPs)
We analyzed how our temporal variation pattern (TVP)
features contribute to increasing the true positive rate (TPR)
and true negative rate (TNR) simultaneously. We present some
noteworthy case studies in our TVPs deﬁned in Section II.
In this analysis, we used the TVP+rIP+rDomain feature set,
and the setting and dataset were the same as the previous
evaluation discussed in Section IV-E.
Alexa1M-Null: This TVP is intended to boost the TPR, as
described in Section II. Our analysis revealed that this TVP
was especially effective for malicious domain names using a
domain generation algorithm (DGA) and abusing new generic
top-level domains (gTLDs) such as .xyz and .solutions. This
is because these domain names are less likely to be within
Alexa1M.
Alexa1M-Stable: This TVP successfully determined the
characteristics of somewhat popular domain names to improve
the TNR.
Alexa1M-Fall: This TVP is designed to detect changing
malicious domain names to improve the TPR. We observed
two major types of malicious domain names that ﬁt this TVP.
One type is expired domain names due to the termination of
services or the merger and acquisition of companies. Some of
these expired domain names were re-registered by third-party
attackers to execute domain parking or cyber attacks. The other
type is domain names that were changed from legitimate to
malicious because the website of the domain name was not
well-managed and in a poor state of security.
Alexa1M-Rise: This TVP attempts to grab the features of
legitimate domain names of start-up websites to improve the
TNR. We observed many domain names corresponding to this
TVP such as those of new companies, services, movies, and
products.
hpHosts-Null: This TVP successfully improved the TNR
because the second-level domain (2LD) parts of popu-
lar/legitimate domain names were less likely to be listed in
hpHosts.
hpHosts-Stable: This TVP is designed to determine the
characteristics of malicious domain names abusing easy-to-
use services, such as bullet-proof hosting, to improve the TPR.
For example, we observed many subdomains using a domain
generation algorithm (DGA) under the same 2LD part such as
“84c7zq.example.com”.
hpHosts-Fall: This TVP is intended to boost
the TNR.
We conﬁrmed that some domain names under well-managed
networks ﬁt this TVP because the domain names were once
abused and then quickly sanitized. In this case,
the TVP
contributed to the accurate prediction of future legitimate
domain names.
hpHosts-Rise: This TVP is designed to help detect/predict
malicious domain names more accurately to improve the TPR.
We mainly observed two types of domain names that ﬁt
this TVP. One type is domain names that heavily used the
DGA in both 2LD and third-level domain (3LD) parts of do-
main names, e.g., “14c2c5h8[masked].yr7w2[masked].com”.
We observed that this type of 2LD will be continuously used
for a while by attackers to create many subdomain names.
The other type is domain names under free subdomain name
services, which offer subdomain name creation under 2LD
parts, such as .ﬂu.cc and .co.nr. These services are easily
abused by attackers in creating distinct domain names.
V. DISCUSSION
This section discusses possible evasion techniques against
DOMAINPROFILER and issues when using the predicted ma-
licious domain names generated from our system as counter-
measures to protect users from cyber attacks.
A. Evading DomainProﬁler
DOMAINPROFILER is designed to exploit
the temporal
variation patterns (TVPs) of malicious domain names used by
attackers. There are three possible evasion techniques of our
system. One technique is to avoid using domain names as their
infrastructure. If attackers do not use domain names, it would
be easier for us to take countermeasures such as just blocking
them using IP addresses. The cost of changing IP addresses is
much higher than that of changing domain names due to the
limited address space. For instance, the address space of IPv4
is limited to 32 bits and that of IPv6 is to 128 bits. However,
domain names can consist of 255 octets/characters or less [13],
which means a maximum of a 2040-bit space.
Another evasion technique is to avoid all our features in
a TVP, related IP address (rIP), and related domain name
(rDomain) to hide malicious domain names from our system.
For example, attackers can operate their domain names as
real legitimate/popular services for a long time to evade our
TVPs and then use the domain names as their malicious
infrastructure. However, this situation drives up the cost for im-
plementing any attacks using domain names. Another example
is border gateway protocol (BGP) hijacking, which potentially
enables attackers to divert user trafﬁc from real IP addresses
to their IP addresses. In such a case, attackers may bypass
our rIP or rDomain features; however, the BGP is basically
used between Internet service providers, and it is difﬁcult for
normal Internet users/attackers to take effective control of it.
The other possible evasion technique is to use legitimate
web services as legitimate users. For example, attackers would
create dedicated accounts for some web services and use them
as their command and control (C&C) channels. In such a case,
only legitimate domain names are observed and our system
cannot detect them. However, these accounts could be easily
banned by the administrator of the web services, and the
content sent/received by attackers could be easily analyzed
to develop a new countermeasure.
B. DNS-based Blocking
DOMAINPROFILER predicts and outputs malicious domain
these domain names cannot always be
names. However,
500
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:19:55 UTC from IEEE Xplore.  Restrictions apply. 
blocked with a domain name level. For example, malicious
and legitimate websites can exist under the same domain
name. Thus, blocking based on domain names instead of
URLs may excessively block legitimate websites. To examine
an actual condition, we extracted and checked URLs under
each predicted malicious domain name using a search engine
API and commercial ground truths. In this examination, we
manually analyzed 250 domain names randomly selected from
the Honeyclient-Exploit dataset, as shown in Table III, by
using the following simple heuristics. If multiple URLs are
found under the domain name, we consider that the domain
name cannot be blocked with a domain name level. On the
other hand, if at most one URL is under the domain name,
we determine that the domain name can be blocked with
a domain name level. The examination results suggest that
72% (=180/250) of domain names can be effectively blocked
using DNS-based blocking without excessive blocking of legit-
imate websites. Therefore, we conclude that malicious domain
names output from our system can contribute to expanding
DNS-based block lists if we consider the situation of URLs
under the domain names.
VI. RELATED WORK
We summarize known approaches related to ours in terms
of evaluating attack infrastructure or resources owned by
cyber attackers. Most of the studies are broadly divided into
three approaches: lexical/linguistic, user-centric, and historic
relationship. Note that these approaches were often combined
in most of the studies we reviewed; thus, we classify them
based on the main idea of each study.
A. Lexical/Linguistic Approach
The lexical/linguistic approach is focused on lexical or
linguistic features obtained from malicious attack resources
such as URLs and domain names.
Ma et al. proposed a learning approach using features from
the lexical structure of malicious phishing URLs [14]. The
focus with the approach for our system is not URLs but
domain names, and our system can detect not only phishing
but also other attacks.
Yadav et al. focused on linguistic features in command
and control (C&C) domain names generated by a domain
generation algorithm (DGA) and developed an approach for
detecting such malicious domain names [15]. While this ap-
proach detects C&C domain names containing random strings,
our approach targets broader malicious domain names.
Szurdi et al. analyzed the nature of typosquatting domain
names [16]. Typosquatting is generally deﬁned as a technique
to register similar domain names to popular domain names to
proﬁt from advertisements and perform phishing attacks. We
take a different or more general approach with our system,
and our temporal variation patterns (TVPs) can also take into
account the nature of typosquatting domain names.
Felegyazhi et al. proposed to use WHOIS information of
domain names such as registration and name servers to detect
malicious domain names [17]. Our approach does not use
WHOIS information due to the cost of retrieving it; however,
we achieve a high true positive rate (TPR) of malicious domain
names without WHOIS.
B. User-centric Approach
The user-centric approach focuses on user behavior of DNS
trafﬁc by observing passive DNS logs.
Sato et al. used the co-occurrence characteristics of DNS
queries to C&C domain names from multiple malware-infected
hosts in a network to extend domain name blacklists [18].
This approach requires malware-infected hosts in a network;
however, our approach works without malware-infected hosts.
Bilge et al. proposed a system called Exposure to detect
malicious domain names based on the time-series changes of
the number of DNS queries in passive DNS data [19]. Perdisci
et al. proposed a system, FluxBuster, which detects previously
unknown fast-ﬂux domain names by using large-scale passive
DNS data [20]. The cost of Exposure or FluxBuster for
retrieving and analyzing large-scale passive DNS logs is much
larger than that of our TVPs in DOMAINPROFILER.
Antonakakis et al. proposed a system, Kopis, which uses
user behavior observed in passive DNS logs on authoritative
DNS servers [21]. Today, the number of new generic top-level
domains (gTLDs) is rapidly increasing; thus, it is more difﬁcult
to exhaustively gather such information on a TLD’s authori-
tative DNS servers. DOMAINPROFILER does not require such
logs and is designed to use publicly available information.
Antonakakis et al. also proposed a system called Pleiades
that is focused on DNS queries to non-existent domain names
observed on recursive DNS servers to detect DGA domain
names used for C&C [22]. In addition, Thomas et al. proposed
a system similar to Pleiades to determine the characteristics of
non-existent domain names [23]. Our system does not require
such DNS logs and is focused on not only C&C domain
names but also other malicious domain names such as drive-by
download and phishing.
C. Historic Relationship Approach
The historic relationship approach is focused on the historic
or time-series information of domain names, IP addresses, and
web content.
Antonakakis et al. proposed a system called Notos to detect
malicious domain names that have similar patterns to past ma-
licious domain names [8]. This was one of the most successful
studies on domain name evaluation or reputation systems.
Notos uses historic IP addresses and historic domain names
to extract effective features to discriminate malicious domain
names from legitimate ones. As stated in Section III-B2,
we follow these features as some of our features in related
IP addresses (rIPs) and related domain names (rDomains).
Moreover, our TVP features dramatically expand detection and
prediction performance, as discussed in Section IV.
Manadhata et al. proposed a method for detecting malicious
domain names from event logs in an enterprise network by
using graph-based analysis [24]. Boukhtouta et al. proposed
an analyzing method for creating graphs from sandbox results
501
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:19:55 UTC from IEEE Xplore.  Restrictions apply. 
to understand the relationships among domain names, IP
addresses, and malware family names [25]. K¨uhrer et al.
proposed a method for identifying parked and sinkhole domain
names from websites and blacklist content information by
using graph analysis [26]. Our DOMAINPROFILER strongly
relies on the TVP or time-series information, which these
studies did not use,
to precisely predict future malicious
domain names.
Chiba et al. used the characteristics of past malicious IP
addresses to detect malicious websites [27]. Our system uses
not only IP address features (rIPs) but also TVPs to precisely
detect malicious domain names.
Venkataraman et al. developed a method for inferring time-
series shifting of IP address preﬁxes to detect malicious IP
addresses used for spam or botnet [28]. DOMAINPROFILER
is also focused on the idea of shifting malicious resources;
however, the target and method are completely different.
The closest concept to ours is that proposed by Soska et
al. [29]. They focused on the idea of variations in compromised
websites using a popular content management system and pro-
posed a method for predicting vulnerable websites before they
turn malicious. The main features they rely on are content-
based features obtained from compromised websites. The
concept of DOMAINPROFILER seems to be similar; however,
our system has an advantage in scalability because it does
not need to access websites and extract features from them.
Moreover, the focus with our system is wider; that is, our
system can detect websites related in drive-by download and
phishing attacks.
VII. CONCLUSION
We proposed a system called DOMAINPROFILER to de-
tect/predict potential malicious domain names in future. Our
key idea behind the system is to exploit temporal variation
patterns (TVPs) of malicious domain names. A TVP of domain
names includes information about how and when a domain
name has been listed in legitimate/popular and/or malicious
domain name lists. Our system actively collects DNS logs,
identiﬁes their TVPs, and predicts whether a given domain
name will be used for a malicious purpose. Our evaluation with
large-scale data revealed that our system can predict malicious
domain names 220 days beforehand with a true positive rate
of 0.985. DOMAINPROFILER will be one of the ways to track
the trend in ever-changing cyber security threats.
REFERENCES
[1] Verisign. Domain name industry brief.
[Online]. Available: http:
//www.verisign.com/en US/innovation/dnib/index.xhtml
[2] Alexa top sites. [Online]. Available: http://www.alexa.com/topsites
[3] Malwarebytes. hpHosts. [Online]. Available: http://www.hosts-ﬁle.net/
[4] F. Weimer, “Passive DNS replication,” in Proc. of the 17th Annu. FIRST
Conf., Apr. 2005.
[5] Y. Chen, M. Antonakakis, R. Perdisci, Y. Nadji, D. Dagon, and W. Lee,
“DNS noise: Measuring the pervasiveness of disposable domains in
modern DNS trafﬁc,” in Proc. of the 44th Annu. IEEE/IFIP Int. Conf.
on Dependable Systems and Networks (DSN’14), 2014, pp. 598–609.
[6] VirusTotal. [Online]. Available: https://www.virustotal.com/
[7] Mozilla foundation. Public sufﬁx list.
[Online]. Available: https:
[8] M. Antonakakis, R. Perdisci, D. Dagon, W. Lee, and N. Feamster,
“Building a dynamic reputation system for DNS,” in Proc. of the 19th
USENIX Security Symp., 2010.
[9] CAIDA. Routeviews preﬁx to AS mappings dataset
for
[Online]. Available: http://www.caida.org/data/routing/
(pfx2as)
IPv4 and IPv6.
routeviews-preﬁx2as.xml
com/en/geoip2-databases
[10] MaxMind. GeoIP2 databases. [Online]. Available: https://www.maxmind.
[11] P. Maigron.
[On-
line]. Available: http://www-public.tem-tsp.eu/∼maigron/RIR
Stats/index.html
statistics.
registries
Regional
internet
[12] L. Breiman, “Random forests,” Machine Learning, vol. 45, no. 1, pp.
5–32, Oct. 2001.
[13] P. Mockapetris, “Domain names - implementation and speciﬁcation,”
RFC 1035, Nov. 1987. [Online]. Available: http://www.ietf.org/rfc/rfc1035.
txt
[14] J. Ma, L. K. Saul, S. Savage, and G. M. Voelker, “Beyond blacklists:
Learning to detect malicious web sites from suspicious URLs,” in Proc.
of the 15th ACM SIGKDD Int. Conf. on Knowledge Discovery and Data
Mining (KDD’09), 2009, pp. 1245–1254.
[15] S. Yadav, A. K. K. Reddy, A. L. N. Reddy, and S. Ranjan, “Detecting al-
gorithmically generated domain-ﬂux attacks with DNS trafﬁc analysis,”
IEEE/ACM Trans. Netw., vol. 20, no. 5, pp. 1663–1677, Oct. 2012.
[16] J. Szurdi, B. Kocso, G. Cseh, J. Spring, M. Felegyhazi, and C. Kanich,
“The long “taile” of typosquatting domain names,” in Proc. of the 23rd
USENIX Security Symp., 2014, pp. 191–206.
[17] M. Felegyhazi, C. Kreibich, and V. Paxson, “On the potential of
proactive domain blacklisting,” in Proc. of the 3rd USENIX Conf. on
Large-scale Exploits and Emergent Threats (LEET’10), 2010.
[18] K. Sato, K. Ishibashi, T. Toyono, and N. Miyake, “Extending black
domain name list by using co-occurrence relation between DNS queries,”
in Proc. of the 3rd USENIX Conf. on Large-scale Exploits and Emergent
Threats (LEET’10), 2010.
[19] L. Bilge, S. Sen, D. Balzarotti, E. Kirda, and C. Kruegel, “Exposure: A
passive DNS analysis service to detect and report malicious domains,”
ACM Trans. Inf. Syst. Secur., vol. 16, no. 4, pp. 14:1–14:28, Apr. 2014.
[20] R. Perdisci, I. Corona, and G. Giacinto, “Early detection of malicious
ﬂux networks via large-scale passive DNS trafﬁc analysis,” IEEE Trans.
Depend. Sec. Comput., vol. 9, no. 5, pp. 714–726, Sep. 2012.
[21] M. Antonakakis, R. Perdisci, W. Lee, N. Vasiloglou, II, and D. Dagon,
“Detecting malware domains at the upper DNS hierarchy,” in Proc. of
the 20th USENIX Security Symp., 2011.
[22] M. Antonakakis, R. Perdisci, Y. Nadji, N. Vasiloglou, S. Abu-Nimeh,
W. Lee, and D. Dagon, “From throw-away trafﬁc to bots: Detecting
the rise of DGA-based malware,” in Proc. of the 21st USENIX Security
Symp., 2012.
[23] M. Thomas and A. Mohaisen, “Kindred domains: Detecting and clus-
tering botnet domains using DNS trafﬁc,” in Proc. of the 23rd Int. Conf.
on World Wide Web (WWW’14), 2014, pp. 707–712.
[24] P. Manadhata, S. Yadav, P. Rao, and W. Horne, “Detecting malicious
domains via graph inference,” in Computer Security - ESORICS 2014,
Lecture Notes in Computer Science. Springer International Publishing,
2014, vol. 8712, pp. 1–18.
[25] A. Boukhtouta, D. Mouheb, M. Debbabi, O. Alfandi, F. Iqbal, and
M. E. Barachi, “Graph-theoretic characterization of cyber-threat infras-
tructures,” Digital Investigation, vol. 14, Supplement 1, pp. S3 – S15,
2015.
[26] M. K¨uhrer, C. Rossow, and T. Holz, “Paint it black: Evaluating the effec-
tiveness of malware blacklists,” in Research in Attacks, Intrusions and
Defenses, Lecture Notes in Computer Science.
Springer International
Publishing, 2014, vol. 8688, pp. 1–21.
[27] D. Chiba, K. Tobe, T. Mori, and S. Goto, “Detecting malicious websites
by learning IP address features,” in Proc. of the 12th IEEE/IPSJ Int.
Symp. on Applications and the Internet (SAINT’12), 2012, pp. 29–39.
[28] S. Venkataraman, D. Brumley, S. Sen, and O. Spatscheck, “Automat-
ically inferring the evolution of malicious activity on the Internet,” in
Proc. of the 20th Annu. Network and Distributed System Security Symp.
(NDSS’13), Feb. 2013.
[29] K. Soska and N. Christin, “Automatically detecting vulnerable websites
before they turn malicious,” in Proc. of the 23rd USENIX Security Symp.,
2014, pp. 625–640.
//publicsufﬁx.org/list/
502
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:19:55 UTC from IEEE Xplore.  Restrictions apply.