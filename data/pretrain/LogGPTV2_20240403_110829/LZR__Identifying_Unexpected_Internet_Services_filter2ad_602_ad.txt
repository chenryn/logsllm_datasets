### Table 4: LZR Performance
- **Filtering for IPs that acknowledge data increases service fingerprinting speed by up to 55 times while finding up to 30% more unexpected services.**
- **All relative performance numbers are compared to ZGrab and measured at a 1 Gb/s scanning rate.**

### Performance Comparison
- **LZR** is significantly faster than **ZGrab** in various scenarios, particularly when handling expensive operations such as cryptographic functions in TLS.
- **Minimum Speedup**: LZR is 1.9 times faster than ZGrab when scanning 5672/AMQP.
- **Maximum Speedup**: LZR is 6.3 times faster when scanning 443/TLS+HTTP, equivalent to a 40 CPU hour speed-up of a 100% scan of IPv4 using ZGrab’s default settings (1,000 senders, 50K pps).

### Performance Variability
- **As ZGrab’s Shim (ZMap/LZR + ZGrab)**: The performance varies based on the service makeup of the port.
  - **High Improvement**: For ports with many hosts that do not consistently establish a TCP connection (e.g., zero window), there is substantial performance improvement. For example, ZMap/LZR + ZGrab is 2.6 times faster when scanning 62220/HTTP.
  - **Low Improvement**: For ports like 443, where the number of such hosts is small, the improvement is minimal (1.1 times).

### Data Acknowledgment
- **Significant Improvement**: When a significant fraction of candidate services do not acknowledge data, using LZR to filter hosts offline (allowing ZGrab to run at full speed) results in significant performance gains.
  - **Example**: On a 100% IPv4 scan of 27017/MongoDB, only 21% of hosts SYN-ACK acknowledge data, and an additional 30% send a zero window. This allows LZR to increase ZGrab performance by 7 times and a LZR scan by 55 times.
  - **Unpopular Ports**: These ports are expected to have similar performance improvements (e.g., a 25 times speed-up) because most IPs on these ports are more likely to not acknowledge data.

### Bandwidth Savings
- **Using LZR Alone**: Always saves bandwidth (up to 87% on 47808/HTTP+TLS) by avoiding re-transmitting ACKs to zero-window hosts and not completing full L7 handshakes.
- **Using LZR with ZGrab**: There is an overhead in the number of total packets sent, even with a time speed-up, due to LZR sending at least one extra ACK before re-attempting the actual handshake. For example, LZR + ZGrab together send 28% more packets than ZMap+ZGrab for 80/HTTP, though they run 1.2 times faster.

### Related Work
- **Fast Internet-wide Scanning**: Used in hundreds of academic papers over the past seven years, common in security, networking, and Internet measurement communities.
- **Data Collection**: Used to understand censorship, botnet behavior, patching behavior, and to uncover vulnerabilities in IoT, SCADA devices, cryptographic protocols, and the Web PKI.
- **Tools**: Notable tools include ZMap and Masscan.
- **Research Focus**: Limited work specifically investigating the dynamics of Internet-wide scanning, with some studies noting discrepancies between L4 and L7 responses and dynamic blocking within the Great Firewall of China and SSH.

### Recommendations and Conclusion
- **Observation**: A significant fraction of hosts on the Internet that respond to a SYN scan never complete an application-layer handshake.
- **Findings**: Middleboxes are responsible for most responses with no real services, and many services are located on unexpected ports.
- **LZR Introduction**: Reduces the time required for application-layer scans on ports with few expected services, identifying 16 protocols and 88% of identifiable services with one packet, and 99% with 5 handshakes.
- **Challenges**: Scanning all 65,535 ports is not feasible, and it is unclear which subset of ports is worth scanning.
- **Recommendation**: Conduct lightweight sub-sampled (e.g., 0.1%) application-layer scans across all ports to detect the prevalence of targeted protocols.

### Acknowledgements
- **Contributors**: Tatyana Izhikevich, Katherine Izhikevich, Kimberly Ruth, Deepak Kumar, David Adrian, Deepti Raghavan, Jeff Cody, members of Stanford University and UC San Diego, and anonymous reviewers.
- **Support**: National Science Foundation, Cisco Systems, Inc., Google, Inc., NSF Graduate Fellowship, and Stanford Graduate Fellowship.

### References
- [1] - [72] (References listed as provided in the original text)

This optimized version aims to make the content more coherent, clear, and professional.