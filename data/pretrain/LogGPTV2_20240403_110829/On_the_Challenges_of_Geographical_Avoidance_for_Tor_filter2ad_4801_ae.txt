suggests an avoidance decision following the desired tradeoff
between performance and security in which we can shift the
decision point towards higher (more security) or lower (more
performance) thresholds.
B. Avoidance Decision
In the evaluation of avoidance concepts we were able to
use hop estimates for full circuits, i. e., our RTT measurements
provided us with estimates that also cover hops between the
client and entry/exit and server. In a realistic setup, such hops
are highly individual and cannot be covered. Furthermore, we
switch from actively sending TCP ping probes through an
established circuit (introduced by DeTor) to measure the time
offset in the key establishment for organizational and security
beneﬁts, as we will introduce throughout this section. These
changes lead us to an updated decision threshold Rest that
consists of the shortest possible extension to the forbidden
area extF , an approximation of the transmission time between
client and entry appc,e, and the pairwise hop estimates for
remaining hops in the circuit. We ﬁrst deﬁne the c → e
approximation:
appc,e =
D(c, e)
avg(S(c, e))
,
(11)
10
ClientEntryMiddleExitHandshake(Client,Entry)Handshake(Client,Middle)createﬁnishFig. 4. Comparison of propagation speeds in estimates (black) and NTor
handshakes (red). Results summarize the spectrum of measured times for full
circuits (areas) and the NLS propagation speed ﬁt (lines).
where D(c, e) is the great circle distance from the client to the
entry, and avg(S(c, e)) is the average measured propagation
speed from the client’s country to the entry’s country. Using
this approximation of the ﬁrst hop, we now deﬁne two cases
for the deﬁnition of the predicted transmission time Rest:
(cid:26)2 · appc,e + extF + est(e, x, e \ extF )
Rest =
,
extF + est(c, x, c) + appc,e
, c /∈ extF
, c ∈ extF
where we distinguish an extension to F that happens without
including the client (c /∈ extF ), or an extension that takes
place between the client and the entry node (c ∈ extF ). In the
ﬁrst case, we approximate the hop from the client to the entry
twice for both directions of the connection and estimate the
remaining hops and the extension as usual. In the second case,
the shortest possible extension is between the client and the
entry, and we only need to approximate this hop for the way
back from the exit to the client. Just as in the empirical concept,
we estimate only hops that are not involved in the extension
(est(e, x, e \ extF )); the estimation est(c, x, c) includes all
hops from client c to exit x and back to c. For the ﬁnal
avoidance decision, we compare the predicted time Rest with
the measured RTT between the client and the exit Re2e and
reject or accept a circuit according to the time ratio and desired
decision threshold. We derive the circuit timing from a novel
measurement technique that we introduce as follows.
C. Circuit Establishment Timing
On each new circuit establishment, Tor performs three
cryptographic handshakes with the entry, middle, and exit relay
of a connection (cf. Fig. 3). Each of these handshakes traverses
parts of the circuit and delivers the end-to-end timing informa-
tion Re2e. We measure the handshake timings in the NTor [46]
implementation, which provides Tor’s cryptographic primitives
since version 0.2.4.x. More precisely, we measure the
offsets (red bar) between the create and the ﬁnal finish
messages. The client repeats the handshake procedure for each
relay in the circuit and ﬁnally delivers the total transmission
time between the client and the exit. In contrast to active TCP
probing, the Tor client performs the required cryptographic
handshakes at each circuit establishment, i. e., we can derive
all relevant information without any active interference. We
will see later how this beneﬁts the usability of the avoidance
system and overcomes one existing security issue of DeTor.
11
Fig. 5.
Distribution of time ratios for theoretical avoidance concepts
(Stat. Symm., Stat. Asymm., Empirical) in comparison with the prototype
implementation TrilateraTor. Higher time ratios indicate higher accept rates.
D. Experiments
In our prototype evaluation, we ﬁrst address the timing
characteristics of RTTs derived from the circuit establishment
procedure and compare them to the characteristics we observed
for TCP pings (§III). Furthermore, we analyze the performance
of TrilateraTor in comparison to the theoretical avoidance
concepts of §IV.
1) Experimental Setup: We use eight worldwide server
instances (CA,NL,US,US,IN,SG,GB,DE) and measure a
total of 16,500 individual relay combinations (1,945 entries,
3,724 middles, 893 exits) for the exit handshake offsets. For
each measurement, we draw 100 top bandwidth relays from
the ﬁrst consensus of the day and form random circuits from
this; measurements are repeated every 10 min within a period
of three days. We document the handshake timings for all
successful circuits along with the relay at which the buildup
procedure failed in case of an unﬁnished circuit establishment.
Besides the handshake measurements, we repeat the ICMP
reference measurements (§III-B1) and TCP ping measurements
(§IV-A) to provide recent information for the veriﬁcation of
relay positions and the estimation of hop relations.
2) Timing Characteristics: We analyze the robustness of
timings from the key agreement procedure, as in comparison
to repeated TCP Ping measurements, a much smaller data basis
for the decision is given. To do so, we measure the median
deviation of handshake times between identical hops. Our
results indicate that exit handshakes differ by 6.54 % between
measurements, which results in an average variance of 32 ms.
Furthermore, we compare the propagation speed of hand-
shake timings with the TCP ping hop estimates (cf. Fig. 4).
Obviously, the cryptographic computations of the handshake
procedure induce an additional overhead that
leads to an
overall reduced propagation speed in comparison to the hop
estimates. As this computational overhead is not related to the
transmission characteristics of a connection, we speed up the
handshake measurements by the difference 0.031c between the
estimates and the handshakes.
3) Performance: We now compare the performance of
TrilateraTor with the theoretical concepts of §IV and analyze
the spectrum of time ratios that results from avoiding the top
nine relay providing countries (cf. Fig. 5). We see that the static
avoidance concepts lead to smaller time ratios, which supports
the ﬁnding that a ﬁxed speed assumption leads to overly
restrictive decisions. In comparison, the empirical approach
0.00.10.20.30.4025,00050,00075,000Speed [c]0.031cDistance [km]EstimateHandshake0.000.250.500.751.000123Time RatioDensityPrototypeEmpiricalStat. Symm.Stat. Asymm.Stat. Symm.Median Time RatioStat. Asymm.EmpiricalPrototype0.5880.5621.2970.946achieves a median time ratio of 0.946 and with that is close
to a balanced distribution of decisions.
Our prototype implementation improves this result further,
e. g., we achieve a median time ratio of 1.297 that allows
accepting a high number of circuits. At this point it is important
to once more emphasize the structural differences between the
theoretical concepts and TrilateraTor: While we can analyze
full circuits in the theoretical concepts, the prototype is limited
to connections from the client to the exit. Nevertheless, the
comparison of time ratios still delivers an essential perspective
on the differences between the theoretical concepts and the
practical implementation.
VI. DEPLOYMENT OF TrilateraTor
For successfully deploying TrilateraTor, we depend on
reliable sources for all information that we consider in the
avoidance decision. Furthermore, we must maintain Tor’s orig-
inal level of security and limit the performance impairments
that the avoidance feature induces. In the following, we discuss
the organizational aspects of deployment, analyze the security
features of TrilateraTor, and estimate potential performance
impairments.
A. Information Sources
We depend on three different sources of information for
an avoidance decision in TrilateraTor: Distributed ICMP and
TCP measurements improve the trust in GeoIP information and
deliver the empirical timing information for individual hops
between relays. Handshake measurements allow us to derive a
circuit’s RTT without any active probing.
1) ICMP and TCP Measurements: The strength of the
ICMP and TCP measurements lies in the fact that we use multi-
ple worldwide server instances that either reliably identify false
relay locations in the case of ICMP, or generate representative
empirical estimates of the timing characteristics between hops
(TCP). While we will see later (§VI-C) how this adds another
layer of security, we are now interested in ways to organize
these distributed measurements in case of deployment.
We assume ﬁxed relay locations,
i. e., ICMP reference
measurements only require updates for changes in the con-
sensus. Throughout 2017, a ﬂuctuation of approximately 17 %
occurred when existing relays disappeared or new relays
appeared in the consensus. For an average number of 7,283
relays in the consensus, this translates to approximately 1,238
nodes that require updates (in a worst case, only new relays
need to be veriﬁed). The situation is different for TCP mea-
surements, e. g., we do not only need to cover ﬂuctuations
in the consensus but must also consider varying transmission
characteristics (§III-B3). Therefore, periodic updates help to
improve the data basis for the pairwise hop estimations. For
both the ICMP and TCP information, we advocate a consensus-
centric infrastructure that allows users to access all relevant
information.
The overhead through distributed measurements is negligi-
ble in comparison to Tor’s daily usage and the provided capac-
ities. We can assume approximately 2.8 Mio. daily Tor users,
and an average consumed bandwidth of 121.5 Gbit/s. Under
the assumption that an average user builds at least three circuits
TABLE VI.
MEASUREMENT STATISTICS [MS]
Type
Iteration
Mean
Median
SD
Duration
#Results
TCP
ICMP
1
2
3
1
2
3
287.35
358.89
327.39
98.95
55.79
135.85
288.46
335.28
294.66
67.35
17.5
128
157.51
179.58
185.26
97.68
76.79
102.42
5 days
7 days
8 days
1 day
1 day
2 days
223,070
134,370
275,509
27,274
62,643
1,837,761
(this is a minimum estimate, numbers should be much higher),
all experimental circuits represent approximately 4 × 10−4 %
of Tor’s daily circuits. To send 500 messages (as an upper
bound for the number of probes sent) with a length of 100 B,
we require 758 kbit/s per day, which is only 6.24 × 10−7 %
of the daily bandwidth consumption in Tor.
B. Reproducibility
Our experimental setups can only represent snapshots of
Tor’s network infrastructure and describe the period in which
empirical data was gathered. Differences might arise from
varying network conditions (congestion, outages, attacks),
the selection of measurement points (server locations), the
hypothetical forbidden areas, etc. Nevertheless, our selection
of experimental components represents worldwide server po-
sitions, top bandwidth relays provide the majority of Tor’s
performance capacities, and the number of conducted measure-
ments delivers a profound data basis. Table VI summarizes the
characteristics of our repeated measurements. In both sets, the
ﬁrst two iterations were conducted within one month, whereas
the third iteration serves as a reference from measurements
gathered six months later.
Results show a high standard deviation (SD) within all
measurement sets, but are in a comparable range between
iterations (27.75 ms delta between TCP results; 25.64 ms for
ICMP). The variance of results once more conﬁrms the ﬁnd-
ings of our challenges assessment, i. e., transmission charac-
teristics depend on the infrastructure and health of the network
and change, accordingly. Nevertheless, results are sufﬁciently
comparable even through longer measurement periods.
C. Security
Any behavior that leaks information can open new attack
vectors and, consequently, harm users that depend on addi-
tional protection mechanisms. Furthermore, overly restrictive
decisions reduce one of Tor’s core security features,
the
anonymity set size, and even facilitate trafﬁc-analysis attacks.
In the following, we discuss security implications that could
arise from deploying an avoidance system.
1) Fingerprinting: An adversary that actively monitors the
circuit establishment procedure might recognize deviations
from expected patterns and derive ﬁngerprinting information
from this. The ability to ﬁngerprint actions of the avoidance
system can reveal the endpoints of a connection, help to derive
sensitive information because of unexpected user behavior, or
help to reduce the anonymity set.
Revealing Connection Endpoints. Measuring the timing char-
acteristics of a circuit through TCP pings requires sending
messages along the full transmission path between the client
12
and the server. Under the assumption of a strong AS- or
state-level adversary, such messages can reveal the endpoints
of a connection, as the RTT measurements also include the
destination of the connection. TrilateraTor does not leak such
information, as it utilizes the crypto handshake of the circuit
buildup procedure.
Unexpected Behavior. Active TCP ping measurements add
unexpected trafﬁc to the standard transmission patterns of a
user. An adversary can monitor batches of TCP probes sent
out by the avoidance system and derive additional information
from this. Such information includes the presence of an
avoidance system and might help to predict the choice of
relays. TrilateraTor attaches to already existing functions of
Tor and does not depend on active probing, i. e., it maintains
the original circuit buildup behavior.
Reducing the Anonymity Set. Rejecting a majority of circuits
helps an adversary to predict the remaining set of relays that
are suitable candidates to circumvent a forbidden area. As a
consequence, trafﬁc-analysis attacks become more likely, and
the measurement overhead is reduced—both factors would
otherwise only enable very powerful adversaries to succeed.
TrilateraTor manages to reduce the number of rejected circuits
and, furthermore, allows to apply a context-sensitive tradeoff
between security and performance.
2) Measurement Manipulation: A powerful, nation-state
adversary can manipulate [57] the distributed measurements
(ICMP, TCP ping) of an avoidance system by holding back
probes. This results in an overall increased transmission time
that would manipulate the relay veriﬁcation and computation
of hop estimates. TrilateraTor inherently limits the impact of
such attacks. All network side measurements are conducted
from multiple reference points, i. e., the scenario is comparable
to veriﬁable trilateration as proposed by ˇCapkun et al. [47].
Prolonging one distance to a reference would require the
shortening of at least one other distance to a different reference.
However, this would need accelerating packets beyond typical
Internet transmission speeds mitigating the manipulation suc-
cess while leaving conspicuous attack ﬁngerprints. TrilateraTor
protects against measurement manipulations that otherwise
would affect a timing-based avoidance decision.
D. Performance
Two inﬂuencing factors have the potential to impair Tor’s
original level of performance. First, timing-based avoidance
systems depend on RTT measurements for a tested circuit.
Prior work introduced active TCP probing where a client sends
messages through the established circuit and measures the
offset until the response was received. This approach forces
users to wait until the measurement procedure is ﬁnished and
hinders from directly using a (safe) circuit. We overcome this
by using the circuit establishment handshake as an information
source, i. e., we induce no additional waiting time. Second,
restrictive avoidance decisions limit Tor’s available resources.
Our worst case evaluation (§IV and Table V) proves that Tri-
lateraTor manages to reduce this source of collateral damage
by preserving approximately 22 % more of Tor’s advertised
bandwidth. This is an important result, as a congested infras-
tructure also affects users that do not make use of TrilateraTor.
From an individual perspective, users must always accept slight
performance impairments through geographical avoidance, as
rejecting the most prominent relay choices often leads to
weaker circuits.
VII. RELATED WORK