crypts these values and sends them to the SP: ccci
xD =
FV.Enc(kkkp, NTT−1(qi
yD.
xD)) and analogously for ccci
4. The SP sums all drivers’ ciphertexts by using the ho-
momorphic property of the cryptosystem to pack them
together: cccxD = ∑n−1
i=0 ccci
xD and similarly for cccyD. It then
homomorphically computes the n packed squared val-
ues of the Euclidean distances between the n drivers
and the rider in parallel, due to the packing cccdist =
(cccxR − cccxD)2 + (cccyR − cccyD)2, and it sends the result to
the rider (see Fig. 1).
5. The rider decrypts the ciphertext and applies the NTT
to obtain a squared distance in each coefﬁcient: dddiiisssttt =
NTT(FV.Dec(kkks,cccdist )). Then, she selects the driver
with the smallest squared distance.
6. The SP notiﬁes the selected driver. If she declines the
offer, the SP asks the rider to select a different driver;
it repeats this operation, until one driver accepts. The
1240    26th USENIX Security Symposium
USENIX Association
Rider: anonymous session sR
SP
Driver: anonymous session sD
Generate (kkkp,ks)
pxR = ∑d−1
i=0 xRX i
pyR = ∑d−1
i=0 yRX i
cccxR = FV.Enc(kkkp, NTT−1(pxR ))
cccyR = FV.Enc(kkkp, NTT−1(pyR ))
(1) z, dt, cccxR , cccyR , kkkp
(2) kkkp, i
qi
xD = xDi X i
qi
yD = yDi X i
(3) ccci
xD = FV.Enc(kkkp, NTT−1(qi
ccci
yD = FV.Enc(kkkp, NTT−1(qi
ccci
xD , ccci
yD
xD ))
yD ))
cccxD = ∑n−1
i=0 ccci
xD
cccyD = ∑n−1
i=0 ccci
yD
cccdist = (cccxR − cccxD )2 + (cccyR − cccyD )2
dddiiisssttt = NTT(FV.Dec(kkks,cccdist ))
Select driver, denoted ibest
(4) cccdist
(5) ibest
(6) Notify the selected driver
(7a) Secure channel (via SP): exchange repR and repD
(7b) Secure channel (via SP): exchange kkkp, certR, certD,precise locations
(8) Proximity check and validation of secure channel
(9) Driver’s identifying info: plate number, proﬁle picture
(10) Fare report: sigR−D{day, fare, certR, certD}
Figure 2: ORide ride setup protocol. The dashed arrows represent the secure channel (via the SP), and the dotted
arrows represent the proximity channel.
SP conﬁrms with the rider and the driver that they have
been assigned to each other.
can select another driver, by using the list of cleartext
squared Euclidean distances she obtained in Step 5.
7a. The rider and the driver establish a secure channel via
the SP, e.g., using the unauthenticated Difﬁe-Hellman
protocol,
to exchange data that should not be ob-
served by the SP.1 From the information used to de-
rive the secret key of the secure channel, the rider and
the driver compute a shared secret pairing PIN. This
pairing PIN will be used for the proximity-check oper-
ation in Step 8.
With this secure channel, the rider and the driver reveal
their reputation scores to each other. The trustworthi-
ness of the revealed values is proved by showing that
they are indeed the values in the rider’s and driver’s
ACs.
If the rider’s reputation is too low, the driver
can abort the protocol at this step. Likewise, the rider
1Detection of possible man-in-the-middle attacks by the SP is done
in Step 8. Note that this check is needed only if the SP is an active
adversary.
7b. Via the secure channel, the rider and the driver ex-
change their precise locations (i.e., locR and locD, re-
spectively). In addition, they exchange their digital cer-
tiﬁcates (i.e., certR and certD) with each other. This pro-
vides accountability for the rider and driver (see Sec-
tion 6). Also, the driver can reveal to the rider the public
key kkkp that she used to encrypt her locations; this helps
to detect possible man-in-the-middle attacks at Step 2
of the protocol by the SP.
The driver drives from her current location locD to the
pick-up location locR, using an off-line navigation app
or a third-party navigation app (such as Google Maps
or TomTom). She sends, in real time via the secure
channel, her precise locations to the rider, thus the rider
can track the movements of the car. Also, at this point,
the rider and the driver can call or message each other
through their ride-hailing apps, if needed.
USENIX Association
26th USENIX Security Symposium    1241
8. When the rider and the driver are in proximity, the
driver performs a proximity check to verify the physical
presence of the rider before releasing her identifying in-
formation: they use a short-range wireless technology
(e.g., Bluetooth or WiFi Direct) to set up a proximity
channel using the pairing PIN. If the channel is suc-
cessfully established, the driver can verify that the rider
is in her proximity. This is similar to the approach pro-
posed in [39] to prevent drivers’ PII from being har-
vested. If this step fails, the driver can decide to abort
the protocol. Also, via the proximity channel, the rider
and the driver can check whether the secure channel
(established at Step 7a) was tampered with by the SP.
9. The driver releases her identifying information to the
rider, including her vehicle’s license plate number and
her proﬁle picture. This information helps the rider to
identify the driver and her car and to prevent certain
threats, e.g., fake drivers [45]. Therefore, it is needed
when the rider is about to enter the car, i.e., the re-
quired communication distance between the phones of
the rider and the driver is small (e.g., several meters).
10. The rider and the driver create a fare report. A fare re-
port is a token generated by the rider and driver; and at
the end of the day, the driver deposits it to the SP to get
paid (Section 5.5). A fare report is created as follows.
The rider sends her drop-off location to the driver via
the secure channel, they agree on the path, and based
on the estimated path, they compute the fare. The rider
and driver then sign a message consisting of the day
of the ride, the fare and their certiﬁcates, i.e., fare re-
port = sigR−D{day, fare, certR, certD}, using the pri-
vate keys associated with their certR and certD. Note
that this upfront-fare method has been implemented in
current RHSs, such as in Uber [34] and in Lyft [41].
Once the driver receives the fare report from the rider,
the ride begins. The rider’s and driver’s app do not re-
port any information to the SP at this step and during
the ride. Also, to prevent the SP from inferring the
starting time of the ride based on the interactions be-
tween the rider and the driver over the secure channel,
the rider and driver can randomly send dummy infor-
mation to each other through the secure channel. Also,
some random time after the fare-report agreement, they
terminate their anonymous sessions.
Intuitively, because the distances between the rider
and drivers are computed based on their (encrypted) pre-
cise locations, expanding the size of the zone will not
result in negative effects on the performance of the ride-
matching and fare-calculation operations.
In addition,
with ciphertext packing, we reduce by a factor of n the
communication between the SP and the rider. However,
if the drivers are malicious, they could corrupt the inputs
from other drivers. Furthermore, note that in Step 1 of
the protocol, any valid rider can generate an ephemeral
public/private key pair. Consequently, if the SP is an ac-
tive attacker, it could track the locations of the drivers,
thus indirectly track the locations of the riders. We dis-
cuss solutions to these potential issues in Section 7.
5.5 Ride Payment and Reputation Rating
When the car arrives at the drop-off location, the driver
creates a new anonymous session to the SP. This enables
her to receive ride-request broadcasts from the SP. Note
that the driver does not report to the SP that the ride is
completed.
At the end of the day, the driver sends to the SP the fare
report sigR−D{day, fare, certR, certD} she received dur-
ing the ride set-up operation (step 10, Section 5.4). The
SP checks the correctness of the rider certiﬁcate certR in
the fare report and the correctness of the signature.
If
they are valid, the SP charges the rider according to her
payment method, e.g., credit card. It then subtracts the
service fee, and deposits the remainder to the driver. The
SP then notiﬁes the rider about the payment and that a
new deposit token is available. The rider generates a ran-
dom number rdt, blinds it to r(cid:48)
dt to the SP.
dt}, and it sends this
The SP signs r(cid:48)
blind signature to the rider’s account. The rider unblinds
the signature to obtain the deposit token which she can
use for her next ride. Note that this procedure can be
done automatically by the rider’s app.
dt (i.e., dt(cid:48) = sigSP{r(cid:48)
dt, and sends r(cid:48)
Once the payment is successfully completed, the rider
and driver can rate the reputation of each other, similarly
to current RHSs. They can log in to the service with their
real credentials and provide the reputation score for the
party whom they rode with.
Note
and
the payment
that ORide preserves
reputation-rating operations of
the current RHSs.
That is, unlike PrivateRide, it does not require the rider
to purchase e-cash in advance, and it does not require
the rider and the driver to generate and keep extra
cryptographic tokens for the reputation-rating operation.
Also, ORide does not require the rider and the driver
to hide their identifying information to the SP during
the payment and reputation-rating operations, because
both the rider and driver are anonymous during the ride.
However, it is important to note that, in order to prevent
the SP from de-anonymizing the rider and the driver by
correlating the time that a fare report is deposited with
the drop-off event of the ride, the payment operation
should not occur immediately after the ride, e.g., the
drivers deposit the fare reports to the SP at the end of
the day.
1242    26th USENIX Security Symposium
USENIX Association
5.6 Ride Cancellation
As in current RHSs, a rider or a driver can cancel a ride
at any time before or during the ride. This, however, is
discouraged by the SP, because it can lead to malicious
behaviors: For example, once a rider and a driver are
assigned to each other by the SP, they meet at the pick-
up location and start the ride as normal; but, to avoid
the service fee, the rider or the driver can send a can-
cellation notiﬁcation to the SP. Therefore, similarly to
current RHSs, if a rider or a driver cancels a ride a cer-
tain amount of time after the ride request, they should
be penalized by the SP, e.g., their reputation scores are
lowered or fees are charged [12].
In ORide, when a rider cancels a ride, the SP can of-
fer her two options: to lose her deposit token (i.e., pay
a penalty) or to reveal her certR and have her reputation
score lowered. If a driver cancels a ride, the SP can ask
the rider to reveal the certD, from which the SP can iden-
tify and penalize the driver according to its policy.
6 Accountability
In this section, we discuss the accountability goals (men-
tioned in Section 3.2) of ORide. This includes audit trail
mechanisms against the attack A1 in Section 3.1 and ad-
ditional features such as retrieval of lost items, assurance
of payment, and integrity of the reputation-rating opera-
tion. Attacks A2 and A3 are discussed in Section 8.
(A1) Accountability. ORide enables the rider and the
driver to exchange, during the ride set-up procedure,
their digital certiﬁcates, i.e., certR and certD, respec-
tively, and the fare report. This provides accountability
for riders and drivers, i.e., an affected party can report
to the SP the digital certiﬁcate of the attacker and the
fare report, from which the SP can identify the attack to
charge her a fee, lower her reputation and/or support le-
gal action. However, the SP is only able to identify the
attacker with support from the affected party. Likewise,
the affected party cannot obtain the real identity of the
attacker without support from the SP, because the certiﬁ-
cates certR and certD contain only the pseudonyms and
only the SP knows the mapping between the pseudonyms
and the real identities of the certiﬁcate owners.
ORide enables the rider to share with her trusted peers
the driver’s certiﬁcate certD and the fare report, via out-
of-band channels such as messaging apps, or a plug-in in
her rider app. Similarly, during the ride, via out-of-band
channels, she can share her GPS trace with her friends
using (k,l) threshold secret sharing [17], i.e., each GPS
location point is split into l parts so that any k out of l
parts reconstruct the original coordinate. Likewise, the
driver can follow the same mechanism. Such informa-
tion can be shared with law enforcement in case riders
or drivers disappear (e.g., kidnapping), as in current ser-
vices. This is similar to the approach used in personal
safety apps, such as Google Trusted Contacts [23].
ORide guarantees assurance of payment. A rider can-
not avoid paying the fare of a ride, because the fare report
contains her digital certiﬁcate certR and the day of the
ride. As the rider and driver agree on the fare and both
sign it before the ride, they cannot subsequently increase
or decrease this fare. However, they might collude to un-
derpay the service fee to the SP, by agreeing on a small
fare and paying the difference in cash. Yet in this case,
ORide offers the same guarantees as current RHSs, be-
cause riders can already request a small ride through the
application and then pay in cash for a longer ride once
they have met the driver. In future work, we will explore
mechanisms to protect against such attacks.
Moreover, the bilateral rating system enables the SP to
ban abusive riders and drivers from the service. A rider
or driver cannot claim a better reputation for herself, be-
cause the proof for attributes in her AC will not be correct
w.r.t. her falsely claimed reputation. They also cannot ar-
bitrarily rate the reputation of each other, because a pay-
ment record is needed (the deposit of a fare report). In
addition, as discussed in Section 5.6, similarly to current
RHSs, ORide enables the SP to hold riders and drivers
accountable for ride cancellations.
SP incentives.
From an economic perspective, ride-
hailing service SPs would have incentives to deploy
ORide because it provides privacy and security for the
riders and still preserves their business models (i.e., the
SP can still charge a commission for each ride). In or-
der to monetize ride data, the SPs can provide a discount
for riders if they reveal (part of) their GPS traces. In ad-
dition, privacy and security for RHSs could be required
by law and legislation, and ORide shows that it is tech-
nically possible to achieve a strong level of protection.
As such, this work lays the foundation for the design of