5
6
7
...
4094
4095
Normal
Abnormal
Normal
(b) The two possible relationships between the current sequence number
and the next sequence number: normal, abnormal.
Next
Fig. 4. (a) The diﬀerence between current SN and last SN falls into three categories.
(b) When the source STA is in the veriﬁcation state, the diﬀerence between next SN
and current SN falls into two categories.
following subsections. Figure 4(a) illustrates these relationships, assuming the
last SN is 4.
Normal Sequence Number Advance. Normally current SN should be last
SN plus one. Occasionally, the gap between last SN and current SN can be more
than one, because frames are lost in the air or on the monitor node. Experiments
show that a non-negligible percentage of frames have a gap of two, but the
number of frames with a gap greater than two is small. So the algorithm deﬁnes
[last SN + 1, last SN + 2] as the normal range. For example, in Figure 4, if
current SN is 5 or 6, the current frame is considered normal.
Duplicated Sequence Number. When the current frame is a retransmitted
frame, current SN could be equal to or smaller than last SN. Therefore, the
proposed algorithm deﬁnes the duplicate range as [last SN - 3, last SN]. That
is, if the current frame’s sequence number falls into the duplicate range, it is
considered as a retransmitted frame. For example, in Figure 4, if current SN is
4, 3, 2 or 1, the current frame is treated as a retransmitted frame. The size of
the duplicate range is a conﬁgurable parameter, but we found 4 is a good choice
empirically. A STA can only retransmit the last frame. So only the last SN can
possibly be repeated. However, an AP may transmit frames out of order. The
Sequence Number-Based MAC Address Spoof Detection
319
maximum distance among out-of-order frames is less than 4 in all our tests. So
we choose 4 as the size of the duplicate range. The state maintained is 4 frames
for each AP and 1 frame for each legitimate STA. Thus denial of service to
monitor node’s state is not an issue here.
If the current frame is a retransmitted frame and the monitor node already
has a copy of it, it can use the copy to verify that the current frame is indeed a
retransmitted frame. When the current frame does not match the stored copy,
the current frame must be a spoofed frame. However, the monitor node may not
always have a copy of the current frame, because an AP may transmit beacon
and probe response frame out of order, it is possible for the monitor node to
receive a beacon frame with a SN of K and then a data frame with a SN of K-
1. In this case, the monitor node won’t have a copy for the current data frame,
because it is not a duplicate but rather an out-of-order frame; as a result the cur-
rent frame is not considered as a spoofed frame. However, because normal data
frames are never transmitted out of order, any out-of-order data frames that are
not preceded by beacon or probe response frame are treated as spoofed frames.
Abnormal Sequence Number Advance. When the gap between current
SN and last SN is between 3 and 4092 inclusively, it is considered an abnormal
sequence number advance. It is incorrect to declare the current frame is a spoofed
frame simply because there is an abnormal sequence number advance, since
there are many legitimate scenarios that can lead to such sequence number
advances. For example, when an STA resumes its traﬃc with its current AP
after scanning other channels, resetting its NIC, or roaming out of the coverage
area of the monitor node, the gap between the current frame and the last frame
that the monitor node can observe could be much larger than 1. Furthermore, the
monitor node may miss some frames from an STA due to transient radio signal
propagation problems. Therefore, equating large inter-frame sequence number
gap to spooﬁng could generate many false positives. The proposed algorithm
applies a veriﬁcation process to check if the current frame is a spoofed frame.
It ﬁrst remembers the value of current SN, then sends an ARP request to the
current frame’s source STA, and puts the STA in the veriﬁcation state.
When a STA is in the veriﬁcation state, the monitor node further checks if
the sequence number of successive frames (called next SN) is consistent with
the current SN. There are two cases to consider. When next SN is smaller than
current SN but larger than last SN, the frame corresponding to current SN is a
spoofed frame. For example, in Figure 4(b), current SN is 7, so the source STA
is put in the veriﬁcation state. If next SN is between 4 and 6 inclusively, the
frame corresponding to current SN is a spoofed frame. When next SN is equal to
or larger than current SN, the monitor node continues to check the subsequent
sequence numbers for a period of time. If none of the sequence numbers in this
period is smaller than current SN, the monitor node terminates the veriﬁcation
process for the STA, and concludes that the frame corresponding to current SN
is not a spoofed frame.
Summary. In summary, when a frame is received, if its source STA is not in
the veriﬁcation state, there are three cases for the value of inter-frame sequence
320
F. Guo and T.-c. Chiueh
number gap G. If G ∈ [4093, 4095] or G = 0, the current frame is treated as
a retransmitted frame. If G ∈ [1, 2], the current frame is a normal frame. If
G ∈ [3, 4092], whether the current frame is spoofed depends on the result of
veriﬁcation. When an STA is in the veriﬁcation state, there are two cases for
next SN: either between last SN and current SN or out of this range.
4.4 Attack Analysis
Table 1 shows scenarios under which the proposed algorithm may generate false
positives and negatives. It is organized according to how the algorithm classiﬁes
the inter-frame sequence number gap.
Normal Sequence Number Advance. In this case, the proposed algorithm
concludes that the current frame is not a spoofed frame. Therefore, there is no
false positive as no attack alert is reported. However, if an attacker can use the
sequence number that the victim STA is going to use, false negatives may occur
if the victim STA remains silent.
To solve this problem, the monitor node sends out ARP requests to each STA
every 2000 frames, and synchronizes with their sequence number based on the
ARP responses. This guarantees that the monitor node will detect this type
of false negative within 2000 frames. The frequency as one probing every 2000
frames is a tradeoﬀ between probing overhead and detection latency. If small
detection latency is more desirable, the probing frequency can be increased at
the price of more probing overhead.
Table 1. The false positive (F+) and false negative (F-) analysis of the proposed spoof
detection algorithm
Cases
Normal ad-
vance
False positive and false negative analysis
F+ None as no attack alert reported in this case
F- Attacker simulates victim STA’s sequence number state when
victim STA is inactive
Duplicate
F+ (1) STA reuses sequence number in 4 consecutive numbers. (2)
Other unknown out-of-order frame
F- Attacker sends a spoofed frame when the original frame is lost
and the frame is treated as an out-of-order frame due to bea-
con/probe response
F+ None as no attack alert reported in this case
F- None as potential spooﬁng will be detected
F+ Out-of-order frames
F- No frames come from victim in the veriﬁcation period
Abnormal
advance
Veriﬁcation
state
Sequence Number-Based MAC Address Spoof Detection
321
When attacker can simulate the sequence number that the victim STA is
going to use, the detection algorithm degrade to only detect spooﬁng activity.
It cannot detect each spoofed frames immediately. For short-lived spooﬁng, the
attack will be detected when victim sends out the ﬁrst frame.
Fortunately, this false negative is not easy to be exploited by attacker since
it requires forging correct sequence number. On the other hand, WLAN card
ﬁrmware or even hardware controls sequence number thus makes it not updatable
to card drivers.
Duplicate Sequence Number. If the current frame is treated as a retrans-
mitted frame, false positives may occur when two data frames are transmitted
out of order, or when a STA wraps around its sequence number once every four
consecutive sequence numbers.
Fortunately, both scenarios are very rare, if ever happen. For instance, if the
sequence numbers from a STA evolves as 1 2 3 4 1 2 3 4...., every ﬁfth frame
will have the same sequence number as the frames that are four frames before
and after it. Because they are really diﬀerent frames, the proposed algorithm
will report spooﬁng based on the comparison of their contents.
False negatives may arise if an attacker forges a frame that appears as a nor-
mal out-of-order frame transmitted immediately after a beacon/probe response
frame. However, this attack is relatively easy to detect as the monitor node can
compare the attack frame with the frame with the same sequence number to
determine whether one is a duplicate of the other.
Abnormal Sequence Number Advance. If the current frame is abnormal
advance, whether there are false positives or negatives depend on the veriﬁcation
process. During the veriﬁcation process, if next SN is “smaller” than current SN,
the algorithm concludes that the current frame is a spoofed frame. This decision
logic could generate false positives when frames are transmitted out of order.
However, the false positive rate is expected to be very small because all out-of-
order frames are due to beacon/probe response and thus only frames from an
AP that are sent together with a beacon/probe response frame can lead to a
false positive.
If the proposed algorithm cannot conclude that the victim STA is not being
spoofed in the veriﬁcation period, it will not raise alarm. Therefore, if the vic-
tim STA’s frames are all lost or delayed, false negatives may arise because the
monitor node has no way to check whether the victim STA is being spoofed.
Fundamental Limitation. The proposed sequence number-based spoof detec-
tion algorithm has one fundamental limitation: It requires the victim node to
be in the same wireless network as the attacker node, so that it can use ARP
request/response to obtain the most up-to-date value of the victim node’s se-
quence number. Therefore, if an attacker spoofs a legitimate STA/AP that does
not exist in the current wireless network, the proposed algorithm cannot detect
this spooﬁng attack, as it is not possible to synchronize sequence numbers or
perform veriﬁcation checks. Fortunately, most of the spooﬁng attacks require
both the victim node and the attacker node to be present in the same wireless
network simultaneously.
322
F. Guo and T.-c. Chiueh
5 Evaluation
5.1 Testbed Setup
The testbed consists of one AP, one victim STA, one attacker STA and one
monitor node. The monitor node is co-located with the AP so as to receive all
the frames that the AP sends and receives. It has two WLAN interfaces: one is
running in RF monitoring mode to capture frames and the other is running in
managed (station) mode to probe a STA when it is put in the veriﬁcation state.
The monitor node runs the proposed spoof detection algorithm. One implemen-
tation issue is how to probe an STA to obtain its current sequence number when
frames travelling on the underlying WLAN are encrypted using WEP, and the
monitor node does not share any key with the underlying WLAN. To probe an
STA, the monitor node uses ARP requests. Even if WEP is enabled, the monitor
node does not have to know the WEP key to send an ARP request to the target
STA, as it can just replay previously captured ARP requests to the target STA.
The monitor node learns which frame is ARP request by examining ARP frame’s
special frame size and request/reply pattern.
The attacker STA runs Linux 2.4.20 with the hostap [20] driver. It can spoof
frames as an AP or a victim STA. The victim STA runs Linux 2.4.20 or Windows
XP. We tested 7 diﬀerent WLAN NICs for victim STA and 2 diﬀerent APs.
The 7 diﬀerent WLAN NICs are Lucent IEEE 802.11 WaveLAN silver PC card,
Orinoco Gold PC card, Cisco AIRONET 350 series PC card, Linksys WPC 11 PC
card, Netgear WAG311 802.11a/g PCI adapter, Netgear MA311 PCI adapter,
and Orinoco 802.11abg PCI adapter. The two diﬀerent APs are Linksys WAP11
and Orinoco BG-2000.
5.2 False Positive Test
From the attack analysis in Section 4.4, the proposed algorithm can generate
false positives in the following two scenarios: (1) when normal data frames from
the same STA can arrive out of order, and (2) when the sequence number for
a node wraps around once every four consecutive sequence numbers. To test if
these two scenarios actually appear in commercial WLAN devices, we tested 7
diﬀerent WLAN NICs and 2 diﬀerent APs. For each NIC and AP combination,
a STA downloads a 89-Mbytes ﬁle via a web browser. The 4 PC-card NICs are
installed on a notebook that is far away from the AP. The 3 PCI adapter NICs
are installed on a desktop computer located close to the AP.
Out-of-Order Data Frame Arrival. In all the tests, none of the 7 WLAN
interfaces transmits frames out of order, and none of the 2 APs transmit out-
of-order frames that are not due to beacon/probe response. As a result, the
proposed spoof detection algorithm generates no false positives in all these tests.
When an WLAN interface is placed far away from the AP, as in the case
of Figure 5, the inter-frame sequence number gap occasionally is larger than 2,
because the monitor may fail to receive some of the frames from the WLAN
interface. This in return puts the receiving STA in the veriﬁcation state. In the
Sequence Number-Based MAC Address Spoof Detection
323
1000
p
a
G
r
e
b
m
u
N
e
c
n
e
q
e
S
100
10
1
0
10000
20000
Frame Index
30000
Fig. 5. The inter-frame sequence number gaps for Cisco’s PC-card WLAN interface.
This NIC is placed far away from AP, so the monitor node experiences many frame
losses. However, with the help of the veriﬁcation process, these frame losses do not lead
to any false positive.
veriﬁcation process, since the algorithm freezes last SN, if subsequent sequence
numbers are large than current SN, the inter-frame sequence number gap should
increase, as indicated by the vertical lines in the ﬁgures. During veriﬁcation
period, there is no sequence number smaller than current SN. Thus false positive
is eliminated.
Short Sequence Number Wrap-Around. Normally the sequence number
of a STA only wraps around after reaching 4095, as speciﬁed in the IEEE802.11
standard. From our experiments, all WLAN interfaces except the Cisco NIC
wrap around after reaching 4095. The Cisco NIC wraps around after reaching
2047, as shown in Figure 5. As a result, around every 2000 frames, the inter-
frame sequence number gap becomes 2049. Despite this abnormal wrap-around,
the proposed algorithm does not generate false positives, because this abnormal
wrap-around is only treated as abnormal sequence number advance and triggers
a veriﬁcation process. In the veriﬁcation process, the algorithm ﬁnds out that all
subsequent sequence numbers are not “smaller” than the current sequence num-
ber, and so eventually the abnormal wrap-around does not cause false positives.
It is unlikely that a STA’s sequence number can wrap around every 4 con-
secutive frames in normal operation. However, when a WLAN NIC is reset re-
peatedly, short wrap-around may happen. We tested 7 diﬀerent WLAN NICs.
After an NIC is reset, it will start active probing in all channels. The monitor
node normally will receive 2 probe requests with a sequence number of 5 and 8
in its monitored channel. Then it receives authentication and association with
a sequence number of 12 and 13 respectively. During repeated resetting, the se-
quence number will wrap around after 13. But since the sequence numbers are
not consecutive, they won’t fall into the duplicate range, and so there is no false
324
F. Guo and T.-c. Chiueh
positive in this case. For APs, the beacon interval is normally 100 msec. When
the AP is reset, the sequence number of beacons already exceeds 4.
In summary, in all of our tests, the proposed spoof detection algorithm never
generates false positives, because in actual WLAN traﬃc no frames arrive out
of order when they follow a normal data frame, and no STA/AP wraps around
its sequence number every 4 consecutive sequence numbers.
5.3 False Negative Test
Based on the analysis in Section 4.4, an attacker can evade the detection of
the proposed algorithm (1) when she can forge an out-of-order frame from the
AP and the original frame is lost, (2) when she can simulate the victim STA’s
sequence number while it is inactive, or (3) when the monitor node cannot
receive any probe responses from the victim node during the entire veriﬁcation
time period. Each of these three cases is examined more closely next.
Out-of-Order Frames from the AP. In this case, the AP sends a data
frame followed by a beacon/probe response frame but the data frame is lost,
and the attacker forges a frame with the same sequence number as the lost data
frame. At this point, to the monitor node, the current frame is the beacon/probe
response frame, the forged frame falls into the duplicate range of current SN,
and it does not have a copy of the lost frame to verify the content of this out-
of-order spoofed frame. So the spooﬁng goes undetected. This attack can only
spoof frames from the AP, and requires the AP to lose a data frame that is sent
before a beacon/robe response frame, and the attacker to be able to observe