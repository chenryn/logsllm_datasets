switch{
%low (500mm)
case(lit101 -> plc1: low):{
Actor -> mv101: open;
}
%high (800mm)
case(lit101 -> plc1: high):{
plc1 -> mv101: close;
}
%highhigh (1200mm)
case(lit101 -> plc1: highhigh):{
systemStatus.remove((alarm,*));
systemStatus.add((alarm,on));
}
%lowlow (250mm)
case(lit101 -> plc1: lowlow):{
plc1 -> mv101: open;
plc1 -> p101: stop;
systemStatus.remove((alarm,*));
systemStatus.add((alarm,on));
}
Example: Modeling of physical laws in T301.
In Section 3.1, we discussed the modeling of physical be-
havior of components based on physical laws. We now pro-
vide an example how this modeling was done in our use
case. For the deﬁnition of the physical behavior of a com-
ponent C we have considered the neighboring components
that can aﬀect the component C . As an example, consider
the level of water inside tank T301 in process 3 (Figure 4) as
a deterministic value. If the initial level is above an upper
threshold, it will decrease if, e.g., the pump P101 is oﬀ, the
motorized valve MV201 is closed, and the pump P301 is on.
if(
(systemStatus((mv201,close)) |
systemStatus((p101,off))) &
systemStatus((p301,on))
){
if(systemStatus((t301,Status))){
systemStatus.remove((t301,Status));
switch{
case(Status = aboveThreshold){
systemStatus.add((t301,highhigh));
lit301 -> plc3: highhigh;}
case(Status = highhigh){
systemStatus.add((t301,high));
lit301 -> plc3: high;}
[...]
4.2 Modeling the Attacker
In this section, we describe our mapping between the
diﬀerent dimensions of the attacker proﬁle and the attack
model.
4.2.1 Attacker Proﬁle
We consider two diﬀerent attacker proﬁles: Insider and
Cybercriminal. The deﬁnition of the two attacker proﬁles
is given in Table 1 where the dimension instantiations re-
ported reﬂect the descriptions in Section 2.1 and the deﬁ-
nitions in [31]. In Table 1, we show a comparison between
Sensor42.42Sensor42.42T101T301T401UFL1 NetworkMV101MV201MV302P101P301P401UVSensor42.42PLC 1Sensor42.42Sensor42.42Sensor42.42PLC 2PLC 3Sensor42.42PLC 4ROPLC 5P501Sensor42.42T601Sensor42.42T602MV503MV501MV502HMIHMISwitchSCADAHistorianHMIPLC 6119Table 1: Comparison of attacker proﬁles in use case
e
d
o
C
e
c
r
u
o
S
m
e
t
s
y
S
e
c
n
a
t
s
i
D
y
g
e
t
a
r
t
S
i
n
o
i
t
a
n
m
r
e
t
e
D
e
g
a
ﬂ
u
o
m
a
C
m
A
i
Proﬁle
Insider
(cid:32) (cid:32) (cid:32) (cid:32) (cid:32) (cid:32) physical
Cybercriminal (cid:35) (cid:35) (cid:35) (cid:32) (cid:32) (cid:32) virtual
The metric associated do the dimensions is [(cid:32) lit101 : statusRequest
-> lit101 : statusRequest
plc1
lit101 -> i(plc1): optimal
plc1
lit101 -> i(plc1): high
plc1
lit101 -> i(plc1): highhigh
plc1
lit101 -> i(plc1): aboveThreshold
-> lit101 : statusRequest
-> lit101 : statusRequest
To perform this attack, the attacker waits while the water
level is increasing in the tank dropping all the responses sent
from the LIT101 to the PLC1 (i(plc) indicates that the at-
tacker i is intercepting the message addressed to the PLC).
The tank will then overﬂow because the PLC1 will not stop
the inﬂowing of the water. We have performed our experi-
ments with over- and underﬂow, and both with and without
encryption of messages between PLCs and tanks/LITs but
encryption does not prevent the Insider to achieve the goal.
For all the processes the attacker (either with Cybercrimi-
nal or Insider proﬁle) can easily overﬂow the tank. However,
the attacker with an Insider proﬁle can directly manipulate
one of the manual valve to achieve the goal. For example,
we have tested our formal speciﬁcation with respect to the
security goal that if the MV101 is open, the level of the wa-
ter in the tank T101 needs to be equal to a certain abstract
value low (the system ﬁlls up the tank if the level is low to
prevent overﬂows).
(cid:50)(systemStatus(mv101, open) ⇒ systemStatus(t101, low))
CL-AtSe reports the following attack trace, in which the
HC_open(Component) is the HC (see Section 3.1.1) that al-
lows an attacker that has physical access to the CPS to man-