## Londiste 3 replicate case - 1 上节  
### 作者                                 
digoal                               
### 日期                                                                                                                                                 
2012-05-30                                                                            
### 标签                                                                              
PostgreSQL , skytools , pgq , Londiste 3 , 快照 , snapshot , logical replication , 逻辑复制 , 队列复制          
----                                                                                                                                              
## 背景               
前面讲解过Londiste3的安装, 有不了解的朋友可以参考如下BLOG:  
[《Londiste3 Install》](../201205/20120529_01.md)    
今天将介绍一下使用londiste3, 从PostgreSQL 9.1.3 复制表以及序列到PostgreSQL 9.2beta1. (这种场景的复制使用PostgreSQL的流复制是办不到的.目前使用slony也是无法做到的,因为slony和PostgreSQL的版本相关, 目前还没有支持PostgreSQL9.2的版本. 正因为slony对版本要求较高, 相对没有londiste灵活, 所以我选择了londiste作为跨数据库版本的复制工具)  
londiste3支持合并复制,级联复制等. 合并复制是只可以把多个数据库的表复制到同一个目标表中, 常用在plproxy分区的数据库集群环境中, 同时londiste还支持部分复制, 即复制的源可以带where条件. 支持源和目标的库名不一样, 表名不一样, schema_name不一样, 支持自定义handler等. 功能非常强大. 这一切都基于PostgreSQL queue技术.  
以后再讲解londiste3的合并复制和级联复制等.  
一、测试环境 :   
源库 :   
```  
PostgreSQL 9.1.3  
host=172.16.3.176 port=1921 user=digoal_01 dbname=digoal_01  
```  
4个表,2个序列  
目标库1 :   
```  
PostgreSQL 9.2 beta1  
host=172.16.3.33 port=1919 user=digoal_01 dbname=digoal_01   
```  
复制4个表,2个序列   
目标库2 :   
```  
PostgreSQL 9.2 beta1  
host=172.16.3.33 port=1919 user=digoal_02 dbname=digoal_02  
```  
复制2个表,2个序列, 但是只复制userid psql  
psql (9.1.3)  
Type "help" for help.  
postgres=# create role digoal_01 nosuperuser nocreatedb nocreaterole noinherit login encrypted password 'digoal_01';  
CREATE ROLE  
postgres=# create database digoal_01 encoding 'UTF8' template template0 owner digoal_01;  
CREATE DATABASE  
postgres=# \c digoal_01 digoal_01  
You are now connected to database "digoal_01" as user "digoal_01".  
digoal_01=> create schema digoal_01 authorization digoal_01;  
CREATE SCHEMA  
```  
创建测试表  
```  
create table user_info  
(userid int,  
engname text,  
cnname text,  
occupation text,  
birthday date,  
signname text,  
email text,  
qq numeric,  
crt_time timestamp without time zone,  
mod_time timestamp without time zone  
);  
create table user_session  
(userid int,  
logintime timestamp(0) without time zone,  
login_count bigint default 0,  
logouttime timestamp(0) without time zone,  
online_interval interval default interval '0'  
);  
create table user_login_rec  
(userid int,  
login_time timestamp without time zone,  
ip inet  
);  
create table user_logout_rec  
(userid int,  
logout_time timestamp without time zone,  
ip inet  
);  
```  
初始化数据  
```  
insert into user_info (userid,engname,cnname,occupation,birthday,signname,email,qq,crt_time,mod_time)  
select generate_series(1,200000),  
'digoal.zhou',  
'德哥',  
'DBA',  
'1970-01-01'  
,E'公益是一辈子的事, I\'m Digoal.Zhou, Just do it!',  
'PI:EMAIL',  
276732431,  
clock_timestamp(),  
NULL;  
insert into user_session (userid) select generate_series(1,200000);  
set work_mem='2048MB';  
set maintenance_work_mem='2048MB';  
alter table user_info add constraint pk_user_info primary key (userid);  
alter table user_session add constraint pk_user_session primary key (userid);  
```  
业务函数  
模拟用户登录的函数  
```  
create or replace function f_user_login   
(i_userid int,  
OUT o_userid int,  
OUT o_engname text,  
OUT o_cnname text,  
OUT o_occupation text,  
OUT o_birthday date,  
OUT o_signname text,  
OUT o_email text,  
OUT o_qq numeric  
)  
as $BODY$  
declare  
begin  
select userid,engname,cnname,occupation,birthday,signname,email,qq  
into o_userid,o_engname,o_cnname,o_occupation,o_birthday,o_signname,o_email,o_qq  
from user_info where userid=i_userid;  
insert into user_login_rec (userid,login_time,ip) values (i_userid,now(),inet_client_addr());  
update user_session set logintime=now(),login_count=login_count+1 where userid=i_userid;  
return;  
end;  
$BODY$  
language plpgsql;  
```  
模拟用户退出的函数  
```  
create or replace function f_user_logout  
(i_userid int,  
OUT o_result int  
)  
as $BODY$  
declare  
begin  
insert into user_logout_rec (userid,logout_time,ip) values (i_userid,now(),inet_client_addr());  
update user_session set logouttime=now(),online_interval=online_interval+(now()-logintime) where userid=i_userid;  
o_result := 0;  
return;  
exception   
when others then  
o_result := 1;  
return;  
end;  
$BODY$  
language plpgsql;  
```  
三、准备目标库1, (注意londiste的复制需要表上有主键.所以两个日志表一会在添加的时候会报错, 因为没有主键)  
创建测试用户和测试库  
```  
PostgreSQL 9.2beta1  
host=172.16.3.33 port=1919 user=digoal_01 dbname=digoal_01  
pg92@db-172-16-3-33-> psql postgres postgres  
psql (9.2beta1)  
Type "help" for help.  
postgres=# create role digoal_01 nosuperuser nocreatedb nocreaterole noinherit login encrypted password 'digoal_01';  
CREATE ROLE  
postgres=# create database digoal_01 encoding 'UTF8' template template0 owner digoal_01;  
CREATE DATABASE  
postgres=# \c digoal_01 digoal_01  
You are now connected to database "digoal_01" as user "digoal_01".  
digoal_01=> create schema digoal_01 authorization digoal_01;  
CREATE SCHEMA  
```  
创建测试表  
```  
create table user_info  
(userid int,  
engname text,  
cnname text,  
occupation text,  
birthday date,  
signname text,  
email text,  
qq numeric,  
crt_time timestamp without time zone,  
mod_time timestamp without time zone  
);  
create table user_session  
(userid int,  
logintime timestamp(0) without time zone,  
login_count bigint default 0,  
logouttime timestamp(0) without time zone,  
online_interval interval default interval '0'  
);  
create table user_login_rec  
(userid int,  
login_time timestamp without time zone,  
ip inet  
);  
create table user_logout_rec  
(userid int,  
logout_time timestamp without time zone,  
ip inet  
);  
alter table user_info add constraint pk_user_info primary key (userid);  
alter table user_session add constraint pk_user_session primary key (userid);  
```  
四、准备目标库2, (目标库2里面只复制了两个用户相关的表, 都有主键.)  
创建测试用户和测试库  
```  
PostgreSQL 9.2beta1  
host=172.16.3.33 port=1919 user=digoal_02 dbname=digoal_02  
pg92@db-172-16-3-33-> psql postgres postgres  
psql (9.2beta1)  
Type "help" for help.  
postgres=# create role digoal_02 nosuperuser nocreatedb nocreaterole noinherit login encrypted password 'digoal_02';  
CREATE ROLE  
postgres=# create database digoal_02 encoding 'UTF8' template template0 owner digoal_02;  
CREATE DATABASE  
postgres=# \c digoal_02 digoal_02  
You are now connected to database "digoal_02" as user "digoal_02".  
digoal_01=> create schema digoal_02 authorization digoal_02;  
CREATE SCHEMA  
```  