the simple event of entering information into a information exchange between you and the Web
Web browser, information is stored onto disk. This site an agreement has been made; whereas, the
may take place in a temporary file. Although once Web site has promised not to sell your personal
the information is sent to a Web server and the file information. However, how well is it protected?
is deleted, the information is still present on the Your credit card information, billing address,
disk; even though the file reference is gone. Many and security code are now stored in two places,
unsavory characters have learned how to glean the Web sites server and on your PC. More than
this information off of remote systems through likely one of those unsavory characters will not
vulnerabilities of the operating system. spend the time and effort to get one credit card
A basic definition of security can be thought number off a PC when with a little more work
of as “keeping unauthorized access minimal.” they could have access to thousands of entries.
This is true not only on the Web but also in our So this brings us back to security. This time that
daily lives. We lock our doors when we leave our of the Web site server. As you can see, security
houses in an effort to keep unauthorized visitors and privacy go hand and hand, with mutual trust
out. This definition is simple, but it is clear. A holding them together.
more complete definition may become too con- The above scenario is a simple client-server
voluted. Let us consider a definition for privacy, process, much like those that currently encom-
“not making public what may be considered passes the Web. However, Web services extend
personal.” Not a fancy definition, rather straight the client-server model and are distributed as
to the point. We all have different ideas of what discussed in earlier sections. Although this com-
is personal to us, and what being made public bination is what gives Web services such promises
means. However, I think we can all agree that in the SOA, it is also an area of concern for secu-
having our Social Security Number and checking rity and privacy. The more doors and windows a
account information sold to the highest bidder is home has, the more opportunities a thief has, the
a violation of our privacy. more vigilant the home owner must be. This can
Now that security and privacy are defined, let be applied to Web services as well. Web services
us consider how this fits into the Web. Suppose increases the number of access points to data
you would like to purchase a book online. Once and ultimately machines. Furthermore, because
you have found the book and placed it in your the access to data is increased, the sharing of
“Cart” it is time to checkout. In order to checkout information is increased. This in itself is opens
you must pass through some security. Typically, the possibility of privacy invasion.
you will be asked for your credit card informa- Now that the stage has been set, let us look at
tion and billing address. This is the first security the specific security and privacy considerations.
checkpoint and this information is verified with Web services are a distributed cross-domain en-
your bank; as well as making sure the card has vironment. Therefore, it is difficult to determine
not been reported stolen. The next checkpoint is the identity of the actors; in this case who is the
physical possession of the card, which is verified service requester and who is the service provider.
by a security code on the back of your card. So, Message level security and privacy is important
you the consumer trust this Web site to send the since these invocations may cross un-trusted

Introduction to Web Services
intermediaries. It is necessary for the requester flow, however, they can not guarantee the integrity
and provider to have a protocol for discovering of the message. End-to-End schemes, which are
each others policies and negotiating constraints at implemented at the application layer, can guar-
run-time, prior to interaction. Privacy rights and antee the confidential integrity of the message
agreements should be explicitly described and and that the message has not been altered. This
agreed upon. We will look more closely at these is because the message is encrypted and digitally
considerations in the following paragraphs. signed with a key. End-to-End schemes also of-
Message level security involves securing all fer the granularity necessary for Web services
aspects of the SOAP message. Encryption plays such that sections of the SOAP message may be
a large role in providing integrity of messages encrypted while other sections are not.
between the requester and the provider while tra-
versing intermediaries. In addition, the requester WS-Security Framework
and the provider can not always be trusted.
Man-In-The-Middle attack is when an attacker The WS-Security specification provides a frame-
is able to compromise a SOAP message in tran- work and vocabulary for requesters and providers
sit. An attacker may gain access to confidential to secure messaging as well as communicate
information contained in the message or may information regarding security and privacy.
alter the message. There are other security related specifications
Unauthorized Access attack takes place when worth mentioning. XML-Encryption specifies
an attacker is able to gain access to a Web service the process of encrypting data and messages.
which they do not have permissions to use. This can XML-Signature provides a mechanism for mes-
happen through brute-force or by compromising sages integrity and authentication, and signer
a SOAP message thereby gaining a username and authentication. XACML is an XML representa-
token. An attacker may also pose as a legitimate tion of the Role-Based Access Control standard
Web service in order to gain an authentication (RBAC). XACML will likely play an important
mechanism, this is known as Spoofing. function in Web services authorization. Security
The above threats can be alleviated using Assertion Markup Language, or SAML, is an
proper authentication and encryption techniques. OASIS framework for conveying user authenti-
However, there are other attacks that can only be cation and attribute information through XML
alleviated through good programming habits and assertions. There are many specifications and
proper verification of parameters. standards for Web services security. We would
SQL injection attack is the insertion of mali- like to encourage you to investigate these on your
cious SQL statements. This requires preprocessing
own as an exercise.
of any parameters passed to an operation which
queries a SQL database to alleviate this threat.
WS-SecurityPolicy
Command injection attacks are similar to SQL
injection attacks in that malicious system com-
Policies for Web services that describe the access
mands are injected into the SOAP in an effort to
permissions as well as actions which a requester
exploit the systems vulnerabilities. This threat can
or provider are required to perform. For example,
be alleviated by proper configuration permissions
a policy may indicate that requesters must have
and preprocessing.
an active account with the service and that mes-
Proper authentication and encryption schemes
sages be encrypted using a PKI scheme from a
can alleviate threats which compromise message
trusted certificate authority. A requester may
integrity. Point-to-Point schemes which are imple-
also have a policy indicating which encryption
mented at the transport layer, such as VPN, SSL,
schemes it accepts.
or IPSec, provide a “secure tunnel” for data to
6
Introduction to Web Services
WS-Trust
WS-Privacy
Before two parties are going to exchange sensitive
information, they must establish a secure com- Privacy is in the context of data and can be as-
munication. This can be done by the exchange sociated with the requester or the provider. The
of security credentials. However, one problem requester may be concerned that the information
remains, how one party can trust the credentials of given to a provider will be propagated to other
the other. The Web Service Trust Language (WS- entities. Such information could be a credit card
Trust) was developed to deal with this problem. It number, address, or phone number. A provider
offers extensions to the WS-Security elements to may be concerned with the proliferation of in-
exchange security tokens and establishing trust formation which they have sold to a requester.
relationships (WS-Trust, 2005). In this case the provider does not want the re-
quester to resell this information without proper
WS-SecureConversation compensation.
The Web services protocol stack is designed to be transaction Processing
a series of building blocks. WS-Secure Conversa-
tion is one of those blocks. WS-Security provides The perceived success of composite applica-
message level authentication, but is vulnerable to tions in a service-oriented architecture depends
some types of attacks. WS-SecureConversation on the reliability of participants that are often
uses SOAP extensions to define key exchange beyond corporate boundaries. In addition to al-
and key derivation from security context so that ready frequent errors and glitches in application
a secure communication can be ensured (WS- code, distributed applications must cope with
SecureConversation, 2005). external factors such as network connectivity,
unavailability of participants and even mistakes
Ws-authorization in service configuration. Web services transac-
tion management enables participating services
Authorization for Web services still remains an to have a greater degree of confidence in that the
area of research at the time of this publication. The actions among them will progress successfully,
difficulty of authorization is the inability to dy- and that in the worst case, such transactions can
namically determine authorization for a requester be cancelled or compensated as necessary.
whom a Web service has just been introduced.
Some authorization frameworks being suggested WS-Transaction
include assertion based, role based, context based
and a hybrid approach. To date, probably the most comprehensive effort to
Assertion based authorization uses assertions define transaction context management resides in
about the requester to decided on the level of au- the WS-Coordination (WS-C) (Microsoft, BEA,
thorization. In a role based approach, requesters IBM,`Web Service Coodination’, 2005), WS-
are given “user” labels and these labels are associ- AtomicTransaction (WS-AT) (Microsoft, BEA,
ated with roles, which in turn have permissions IBM, `Web Service Atomic Transaction’, 2005)
assigned to them. Context based authorization and WS-BusinessActivity (WS-BA) (Microsoft,
examines the context in which a requester is act- BEA, IBM,`Web Service Business Activity’,
ing. For instance: proximity to the resource, on 2005) specifications. WS-C defines a coordina-
behalf of a partnership, or even the time of day. tion context, which represents an instance of
Obviously a hybrid approach is some combination coordinated effort, allowing participant services
of two or more approaches. to share a common view. WS-AT targets existing

Introduction to Web Services
transactional systems with short interactions and Kandula (Apache Kandula Project, 2005) and the
full ACID properties. WS-BA, on the other hand, academic community (Trainotti, Pistore, Pistore,
is intended for applications involved in business et al., 2005; Vasquez et al., 2005).
processes of long duration, whose relaxed proper-
ties increase concurrency and suit a wider range Messaging
of applications.
Neither the Web services architecture nor
WS-ReliableMessaging
any specifications prescribe explicit ways to
implement transactional capabilities, although
Communication over a public network such as
it is clear that delivering such features should
the Internet imposes physical limitations to the
minimally impact existing applications. Some
reliability of exchanged messages. Even though
propose approaching the problem of transaction
failures are inevitable and unpredictable, certain
monitoring and support by means of intermedi-
techniques increase message reliability and trace-
ary (proxy) services (Mikalsen, 2002), while
ability even in the worst cases.
others by providing a lightweight programming
At a minimum, senders are interested in de-
interface requiring minimal application code
termining whether the message has been received
changes (Vasquez, Miller, Verma, & Sheth, 2005).
by the partner, that it was received exactly once
Whichever the case, protocol-specific messages
and in the correct order. Additionally, it may be
should also be embedded in exchanged messages
necessary to determine the validity of the received
and propagated though all participants.
message: Has the message been altered on its
way to the receiver? Does it conform to standard
WS-Composite Application Framework formats? Does it agree with the business rules
expected by the receiver?
Reliability and management are aspects highly WS-Reliability and WS-ReliableMessaging
dependent on particular Web service implementa- have rules that dictate how and when services
tions and therefore no specification mandates or must respond to other services concerning the
comments on them. However, just like the J2EE receipt of a message and its validity.
Enterprise JavaBeans (EBJ) technology has made
available container-managed transactions (CMT)
WS-Eventing
for some time, a way to procure increased Web
service reliability could be through their deploy-
Web services eventing (WS-Eventing) is a
ment in managed environments, in which the
specification that defines a list of operations that
hosting application server becomes responsible
should be in a Web service interface to allow for
for support activities such as event logging and
asynchronous messaging. WS-Eventing is based
system recovery. These additional guarantees
on WS-Notification that was submitted to OASIS
could potentially improve many aspects of Web
for standardization.
services reliability, taking part of the burden
away from their creators with regards to secu-
WS-Notification
rity, auditing, reliable messaging, transactional
logging and fault-tolerance, to cite just a few.
Web service notification (WS-Notification) is
Some implementations leading this direction
a family of specifications that provide several
are already available from enterprise software
capabilities.
companies such as Arjuna Transaction Service
(Arjuna Transaction Service, 2005), IBM Trans-
• Standard message exchanges for clients
actional Attitudes (IBM Transactional Attitudes,
• Standard message exchanges for a notifica-
2005), and from open source projects like Apache
tion broker service provider

Introduction to Web Services
• Required operations for services that wish 1. Create a UML Class Diagram: Following
to participate in notifications software engineering practices, the initial
• An XML model that describes topics. step is to create a UML Class Diagram to
define the classes that will be needed for the
WS-Notification is a top layer for the following service. UML provides a succinct represen-
specifications: WS-BaseNotification, WS-Bro- tation of modeling classes. The following is
keredNotification, and WS-Topics.
an example of a UML class diagram for a
WS-BaseNotification defines the operations
service that will take as input the name of a
and message exchanges that must take place be-
business and search a database to return the
tween the two parties. WS-BrokeredNotification
profile for this business if they are a partner
defines messages and operations required of a
of the Moon Company.
Notification Broker Service and those that wish
2. Generate Java Code: Using a UML tool
to use it. WS-Topics define the “topics” that are
such as Poseidon, the UML Class Diagram
used to organize the elements in a notification
can easily converted into a Java class skel-
message. It also defines XML to describe the
eton. It is important to note that while you
metadata associated with different topics.
are developing objects to be used for Web
services that you must follow the Java bean
dEvEloPinG WEb sErvicEs programming conventions, for example,
implementing “getters” and “setters” for
The starting point of using Web service tech- every member variable. Fortunately, this is
nology is to create Web services. Although it is exactly the code that will be generated thanks
similar to developing other software, there are to the UML tool based on the diagram that
some differences in that early focus on interfaces we have created in step one. For simplicity,
and tool support is of even greater importance. we have generated our Web service as an
One can start by creating a WSDL specification,
abstract class.
or alternatively, by creating, for example, a Java