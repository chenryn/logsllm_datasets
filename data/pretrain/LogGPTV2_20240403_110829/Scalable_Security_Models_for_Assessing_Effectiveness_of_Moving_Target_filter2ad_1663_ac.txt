different vulnerabilities [18]–[24].
We analyze Shufﬂe and Diversity using two security
metrics (risk and attack cost) via the HARM shown in
Section III. Both Shufﬂe and Diversity can be combined and
used together, but we do not take into account that case in
this paper.
III. EFFECTIVE SECURITY ANALYSIS USING
IMPORTANCE MEASURES
There is a constraint on the number of applicable defense
strategies (e.g., deploying the MTD techniques) due to
system constraints. However, previous work on deploying
the MTD techniques did not consider these constraints in
the networked system [6], [10]–[16], [18], [19], [22]–[24]. In
this section, we consider deploying the MTD techniques in
a large sized networked system, where the applicable MTD
techniques are bounded by constraints in the networked
system. Also, we show the effectiveness of using the IMs to
deploy the MTD techniques, and compare its performance
to the ES method via simulations.
A. Network hardening using the MTD Techniques
We focus our network hardening based on securing im-
portant nodes in attack paths, such as shown in [18], rather
than end points of an attack (i.e., initial attack points and
target nodes) because (i) in a virtualized system (e.g., cloud),
visible components or nodes to the attacker (i.e., initial
attack points) may change frequently (e.g., service updates).
(ii) assets in the networked system change, and there may be
multiple assets (i.e., multiple target nodes), and (iii) target
nodes are estimated with asset values but it is still difﬁcult
to specify targets in an event of an attack.
519
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 08:25:31 UTC from IEEE Xplore.  Restrictions apply. 
Unavailable
VM
3
Internet
Attacker
VM
1
VM
2
Attacker
VM
4
VM
5
(a) Initial Attack Scenario
Internet
Attacker
Unavailable
VM
1
VM
2
Attacker
VM
3
VM
4
VM
5
Internet
Attacker
VM
1
VM
2
VM
3
Unavailable
VM
4
VM
5
(a) Initial Attack Scenario
Internet
Attacker
VM
1
VM
2
VM
3
Unavailable
VM
4
VM
5
(b) Applying the AR on V M4 and V M5
(b) Applying the OS Diversity on V M2
Internet
Attacker
Unavailable
VM
1
VM
2
Attacker
VM
3
VM
4
VM
5
(c) Applying the AR on V M3
Internet
Attacker
VM
1
VM
2
VM
3
Unavailable
VM
4
VM
5
(c) Applying the OS Diversity on V M3
Figure 5. A Comparison of Securing Attack Paths and Targets
Figure 6. Different Effectiveness of deploying the OS Diversity
A simple example based on the virtualized system is
shown in Figure 5. We assume that V M1 is unavailable,
the attacker has compromised V M2, and targets are V M4
and V M5 (e.g., steal information from different asset nodes).
We use an address randomization (AR) method (one of the
Shufﬂe based MTD techniques [3], [6], [10]) in the example,
where a dotted box represents the VM with the AR in use.
Figure 5(a) shows an initial attack scenario without any AR.
Figure 5(b) shows that the AR is applied to both target nodes
V M4 and V M5 (in this scenario, two AR implementations
are required). Figure 5(c) shows that the AR is applied in
the attack path (i.e., to V M3). This is hardening the initial
conditions of the target nodes, which is time-efﬁcient and
cost-effective [35]. The optimal countermeasure for such
cases can be selected as in [33]. In this scenario, only a
single AR implementation is required. If we assume the
implementation of the AR has its associated security cost,
then the second scenario (i.e., implementing the AR on V M3)
has less associated security cost.
Another example depicted in Figure 6 shows the different
effectiveness of securing nodes in the virtualized system.
We assume that V M4 is down (i.e., not operational), V M3 is
operating on W7, and V M5 is the target. We consider using
an OS diversity technique (i.e., backup OS is used). The
initial attack scenario is shown in Figure 6(a), and there are
two attack paths; (i) through V M1 and V M3 to the target, and
(ii) through V M2 and V M3 to the target. If we deploy the
OS diversity on V M1 or V M2, it only affects a single attack
path. An example of deploying the OS diversity on V M2 is
shown in Figure 6(b), where VMs operating with the backup
OS are highlighted with a double square. However, if we
deploy the OS diversity on V M3, it affects both attack paths
mentioned before, as shown in Figure 6(c). More complex
diversity assignment can be found in [18]. In a large sized
networked system with complex network topologies, it is
difﬁcult to decide which nodes are more important (in terms
of the number of attack paths that are affected by deploying
the MTD techniques).
B. Deploying the MTD using the IMs
In a large sized networked system with complex network
topology, it is difﬁcult to determine which nodes are more
important than others (i.e., which node is more likely to be
used in an event of an attack?). One can compute all possible
attack scenarios (e.g., via an ES method) to assess which
nodes are important, but the computational complexity is
exponential. To address this, we use the IMs to deploy the
MTD techniques on important nodes.
1) Computing the IMs: We compute the IMs as in [39]
using network centrality measures (NCMs) and security
metrics to rank important hosts and vulnerabilities respec-
520
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 08:25:31 UTC from IEEE Xplore.  Restrictions apply. 
tively. For the virtualized system shown in Figure 1, we
compute the NCMs as shown in Table V to rank important
VMs in the upper layer. The rank is calculated based
on three different NCMs (degree, closeness and between-
ness). The order of important VMs based on the NCMs
are [V M3,V M4,V M1,V M2,V M5]. Vulnerabilities are ranked
based on their CVSS BS. The order of W7 vulnerabilities
are [W 74,W 71,W 72,W 73,W 75], and the order of REL vul-
nerabilities are [REL3,REL6,REL4,REL5,REL2,REL1].
NCMS AND RANKING IMPORTANT VMS
Table V
NCM
Degree
Closeness
Betweenness
Rank
V M1
0.6
0.556
0.217
3
V M2
0.4
0.714
0.083
4
V M3
0.8
0.833
0.367
1
V M4
0.6
0.714
0.083
2
V M5
0.4
0.556
0
5
2) Applying Shufﬂe using the IMs: We use a VM live
migration method as an example Shufﬂe as shown in Section
II-D. First, we use the ES method and analyze the risk
associated with each migration case. The risk formula is
deﬁned as in equation (1) [32], where the system risk,
Rsystem, is deﬁned as a product of the probability of attack
success on node i, Pgoali, with the impact of the attack on
node i, Igoali, where i ∈ N and N is a set of all nodes in the
networked system. We use security metrics shown in Table
II and III to compute the system risk. We accumulate the risk
of all attack paths to represent the system risk. The system
risk is denoted as RV Mi, for the attack scenario when V Mi has
migrated. For example, the system risk after migrating V M1
(also the same for migrating V M2) is shown in equation (2),
and the system risk after migrating V M4 is shown in equation
(3). Equation (4) shows the risk calculation of an attack
through V M1, V M2, V M4 and V M5. The risk of an attack
through a path is denoted as PRV Mi
path, where path denotes
the sequence of VMs (shown by VM IDs) compromised in
an attack path when V Mi has migrated. The risk of V Mi
is denoted as V RV Mi. The list of attack paths for V Mi is
denoted as pathV Mi.
Rsystem = ∑
i∈N
× Igoali
Pgoali
RV M1
= ∑
i∈pathV M1
PRV M1
i
= 1070
RV M4
= ∑
i∈pathV M4
PRV M4
i
= 480
PRV M1
1245
= ∑
i∈path
V RV Mi
= 40
(1)
(2)
(3)
(4)
521
RISK ANALYSIS FOR MIGRATION METHOD
Table VI
Case No. Migrated VM Risk Value
No. of Attack Paths
1
2
3
V M1
V M2
V M4
1070
1070
480
26
26
12
Table VI shows the summarized system risk for each
migration case, including the number of attack paths. We
conclude that selecting V M4 is the most effective available
VM live migration for the example virtualized system. Next,
we use the IMs to deploy the migration method. We ranked
important VMs as shown in Table V, and V M3 has the
highest rank. However, V M3 cannot be migrated due to the
system constraints (see subsection II-A). Therefore, V M4 is
chosen, which is an equivalent solution to the ES method in
this example. The next available migration is moving V M1,
and then V M2. It shows that it is possible to compute the
equivalent important nodes using the IMs to the ES method.
3) Applying diversity using the IMs: We use an OS
diversity as an example shown in Section II-D. There are
overlapping vulnerability scores from the OS currently used
with the backup OS, such that the risk analysis shows no
difference. However, each OS requires the attack pattern to
change, which may thwart attacks that are repeated on the
same OS. Therefore, instead of analyzing the system risk,
we compare the increase of the attack cost to analyze the
OS diversity. Other security metrics that reﬂect different
path information can be used also (e.g., mean time to
compromise). We assume that exploiting a VM has an
attack cost value of 1, and if the attacker has previously
compromised the same OS, then the attack cost is reduced
to 0.5 (i.e., the attacker has a set of attacks that can be reused,
reducing the attack cost). We also assume that we can only
deploy the OS diversity to a single VM for simplicity, but
more complex diversity scenarios can be used, such as in
[18]. We use the same attack scenario as shown in Figure 5
and 6, with the attack goal of compromising V M5.
First, we use the ES method. We assume the virtualized
system is in the initial state. We can deploy the OS diversity
to each VM and compute the attack cost (with V M5 as the
target). For instance, we compute the attack cost of the
initial state as shown in equation (5). The attack cost of
deploying the OS diversity to V Mi is denoted as ACV Mi, and
the total attack cost of an attack path is denoted as APV Mi
path.
We compute the attack cost of deploying the OS diversity
to V M1 in equation (6), and it shows that this increases the
total attack cost by two units from the initial state.