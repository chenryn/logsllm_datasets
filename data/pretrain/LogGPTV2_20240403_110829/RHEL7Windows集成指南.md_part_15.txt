类型。可以通过更改特定服务的本地设置来覆盖全局设置。
::: procedure
1.  打开 [IPA Server]{.guilabel} 选项卡。
2.  选择 [Configuration]{.guilabel} 子选项卡。
3.  滚动到 [Service Options]{.guilabel} 区域。
    ::: figure
    []{#active-directory-trust.html#pac-svc-config}
    **图 5.7. [Service Options]{.guilabel} 区域**
    ::: figure-contents
    ::: mediaobject
    ![Service Options 区域](images/pac-svc-config.png)
    :::
    :::
    :::
4.  要使用 PAC，请选中 [MS-PAC]{.guilabel}
    复选框，该复选框会添加一个可供 AD
    服务使用的证书。如果没有选择复选框，则不会在 Kerberos 票据中添加任何
    PAC。
    如果您选中 [nfs:NONE]{.guilabel} 复选框，则 MS-PAC
    记录不会添加到针对 NFS 服务器发布的服务票据中。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    [您可以忽略PAD 复选框]{.guilabel}。IdM 中尚不提供此功能。
    :::
5.  [单击页面顶部的更新链接]{.guilabel}，以保存更改。
:::
:::
::: section
::: titlepage
### []{#active-directory-trust.html#setting-pac-local}为服务设置 PAC 类型 {.title}
:::
如果没有为该服务明确设置任何设置，全局策略会设置要用于服务的 PAC
类型。但是，全局设置可以在本地服务配置中覆盖。
要从命令行更改 PAC 设置，请使用 [**ipa service-mod**]{.command} 命令和
`--pac-type`{.option} 选项。有关如何使用该命令的详情，请在添加
`--help`{.option} 选项的情况下运行该命令：
``` screen
$ ipa service-mod --help
Usage: ipa [global-options] service-mod PRINCIPAL [options]
Modify an existing IPA service.
Options:
-h, --help            show this help message and exit
...
```
更改 Web UI 中的 PAC 设置：
::: procedure
1.  [打开\"身份 []{.guilabel} \"选项卡，然后选择\"服务]{.guilabel}
    \"子选项卡。
2.  单击要编辑的服务的名称。
3.  在 [Service Settings]{.guilabel} [区域，选中覆盖继承的
    settings]{.guilabel} 选项，然后选择 [MS-PAC]{.guilabel}
    复选框来添加可供 AD 服务使用的证书。
    ::: figure
    []{#active-directory-trust.html#svc-pac}
    **图 5.8. [Service Settings]{.guilabel} 区域**
    ::: figure-contents
    ::: mediaobject
    ![Service Settings 区域](images/svc-pac.png)
    :::
    :::
    :::
    如果没有选择复选框，则不会在 Kerberos 票据中添加任何 PAC。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    [您可以忽略PAD 复选框]{.guilabel}。IdM 中尚不提供此功能。
    :::
4.  [单击页面顶部的更新链接]{.guilabel}，以保存更改。
:::
:::
:::
::: section
::: titlepage
## []{#active-directory-trust.html#posix-attributes-from-ad}使用在 Active Directory 中定义的 POSIX Attributes {.title}
:::
::: section
::: titlepage
### []{#active-directory-trust.html#posix-gid-group}为 Active Directory 用户定义 UID 和 GID 属性 {.title}
:::
如果 Windows 管理员手动为用户定义了 POSIX UID 和 GID 属性，请在 IdM
服务器上为用户创建具有相同 GID 的匹配组。
创建组可确保该用户与主要用户组关联。如果这样的组不存在，IdM
服务器将无法查找用户所属的所有组。
:::
::: section
::: titlepage
### []{#active-directory-trust.html#posix-shell-homedir}传输登录 Shell 和主目录属性 {.title}
:::
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
客户端必须注册基于 Red Hat Enterprise Linux 7.1 或更高版本的 IdM
服务器才能从此功能受益。
:::
SSSD 可以从与 IdM 信任关系的 Active Directory 服务器读取以下属性值：
::: itemizedlist
-   `loginShell`{.systemitem} 属性，用于指定 AD 用户的 shell
-   `unixHomeDirectory`{.systemitem} 属性，它指定 AD 用户的主目录
:::
当使用这些属性在 AD 服务器上定义自定义 shell
或主目录值时，会将自定义值显示给 AD 用户的 IdM 客户端。因此，AD 用户和
IdM 端会显示相同的用户 shell。
请注意，要将 AD 用户主目录显示 IdM 客户端，IdM 服务器中的
`/etc/sssd/sssd.conf`{.filename} 文件的 `[domain]`{.literal} 部分中的
*`subdomain_homedir`* 选项必须设置为 `%o`{.literal}。`%o`{.literal}
值代表从身份提供程序检索的主目录。例如：
``` screen
[domain/example.com]
subdomain_homedir = %o
```
如果 AD 管理员修改 AD 端的 `loginShell`{.systemitem} 或
`unixHomeDirectory`{.systemitem}，则更改也会自动反映在 IdM 端。如果 AD
服务器上未定义这些属性，SSSD 会使用模板默认值。然后，这个默认值被显示到
IdM 客户端。
:::
:::
::: section
::: titlepage
## []{#active-directory-trust.html#trust-ssh}将 Active Directory 机器的 SSH 用于 IdM 资源 {.title}
:::
配置信任时，Active Directory 用户可以使用 SSH 及其 AD 凭据访问 IdM
主机上的计算机、服务和文件。
::: section
::: titlepage
### []{#active-directory-trust.html#caching-considerations}缓存注意事项 {.title}
:::
IdM 客户端不直接连接到 Active Directory
域控制器(DC)来检索用户属性。客户端会连接到缓存此信息的 IdM
服务器。因此，如果您在 Active Directory 中禁用了用户，用户仍然可以使用
SSH 密钥身份验证向 IdM 客户端进行身份验证，直到用户记录在 IdM
数据库中过期为止。
IdM 在以下情况下更新用户记录：
::: itemizedlist
-   该条目已自动过期。
-   使用 `sss_cache`{.systemitem} 实用程序手动使用户条目在缓存中过期：
    ``` screen
    # sss_cache --user user_name
    ```
-   用户使用 `kinit`{.systemitem} 实用程序或 Web UI 向 IdM
    服务器进行身份验证。
:::
:::
::: section
::: titlepage
### []{#active-directory-trust.html#ad-passwordless-ssh}使用 SSH 不带密码 {.title}
:::
用于本地授权的 `localauth`{.systemitem} Kerberos 插件确保 Kerberos
主体自动映射到本地 SSSD 用户名。通过 `localauth`{.systemitem}，在使用
Kerberos 登录时不会提示来自可信 AD 域的 Windows
用户输入密码，因此无需密码即可使用 SSH。
插件提供跨多个域和信任的可靠映射机制：当 `sssd`{.systemitem} 连接到
Kerberos 库以将主体映射到本地 POSIX 身份时，SSSD 插件会根据 IdM
中定义的信任协议对其进行映射。
在某些情况下，用户使用 SSH 堡垒主机来访问其他红帽企业 Linux
计算机。默认情况下，如果您使用 Kerberos 在堡垒主机上进行 SSH
身份验证，则无法将 Kerberos 票据转发到使用 Kerberos 进行身份验证到其他
Red Hat Enterprise Linux 主机。要启用这样的转发身份验证，请在 bastions
主机主体中添加 [**OK_AS_DELEGATE**]{.command} Kerberos 标志：
``` screen
# ipa host-mod bastion_host.idm.example.com --ok-as-delegate=true
```
### []{#active-directory-trust.html#idm139883592567648}Red Hat Enterprise Linux 7.1 和更新系统上的 AD 用户的 Kerberos 身份验证
在红帽企业 Linux 7.1 和更新的系统中，SSSD 自动配置
`localauth`{.systemitem} Kerberos 插件。
SSSD 允许使用
`PI:EMAIL`{.systemitem}、`ad.domain\user 和 AD\user`{.systemitem}
``{=html} 格式的用户名。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
在具有 `localauth`{.systemitem} 的系统中，不需要在
`/etc/krb5.conf`{.filename} 文件中设置 *`auth_to_local`*
` 选项，或者在.k5login`{.filename} 文件中列出 Kerberos
主体。`localauth`{.systemitem}
插件使得之前用于登录的配置不会过时的密码。
:::
### []{#active-directory-trust.html#idm139883605810736}为 AD 用户手动配置 Kerberos 身份验证
在不存在 `localauth`{.systemitem} 插件的系统上，SSH 会提示为 Active
Directory 域用户输入用户密码，即使用户获取了适当的 Kerberos 票据。
要启用 Active Directory 用户在这种情况下使用 Kerberos 进行身份验证，请在
`/etc/krb5.conf`{.filename} 文件中配置 *`auth_to_local`*
` 选项，或在用户主目录中的.k5login`{.filename} 文件中列出用户 Kerberos
主体。
::: variablelist
[配置 `/etc/krb5.conf`{.filename}]{.term}
:   以下流程描述了如何在 Kerberos 配置中配置域映射。
    ::: procedure
    []{#active-directory-trust.html#ad-kerberos-krb5.conf}
    1.  打开 `/etc/krb5.conf`{.filename} 文件。
    2.  在 `[realms]`{.literal} 部分，根据名称识别 IdM 域，然后添加两个
        *`auth_to_local`* 行来定义 Kerberos 主体名称映射：
        ::: itemizedlist
        -   在一个规则中，包含用于映射不同 Active Directory
            用户名格式和特定 Active Directory 域的规则。
        -   在另一规则中，为标准 Unix 用户名设置 `DEFAULT`{.literal}
            值。
        :::
        例如：
        ``` screen
        [realms]
        IDM = {
        ....
        auth_to_local = RULE:[1:$1@$0](^.*@ADDOMAIN$)s/@ADDOMAIN/@addomain/
        auth_to_local = DEFAULT
        }
        ```
    3.  重新启动 KDC 服务。
        ``` screen
        [root@server ~]# systemctl restart krb5kdc.service
        ```
    :::
    请注意，如果您使用 *`auth_to_local`* 选项配置 Kerberos
    身份验证，用于 SSH 访问的用户名必须满足以下条件：
    ::: itemizedlist
    -   用户名必须具有格式 `ad_user@ad_domain`{.systemitem}。
    -   域名必须是小写。
    -   用户名的情况必须与 Active Directory
        中的用户名案例匹配。`例如，用户和用户 `{.systemitem}
        被视为不同的用户``{=html}，因为存在不同的情况。
    :::
    有关设置 *`auth_to_local`* 的详情请参考
    [[krb5.conf]{.refentrytitle}(5)]{.citerefentry} man page。
[` configure.k5login`{.filename}]{.term}
:   以下步骤将系统配置为查找本地用户名的 Kerberos 主体名称。
    ::: procedure
    []{#active-directory-trust.html#ad-kerberos-.k5login}
    1.  ` 在用户的主目录中创建.k5login`{.filename} 文件。
    2.  列出用户在 文件中使用的 Kerberos 主体。
    :::
    如果身份验证用户与现有 Kerberos
    票据中的主体匹配，则允许用户使用票据登录，而且不会提示用户输入密码。
    ` 请注意，如果您使用.k5login`{.filename} 配置配置 Kerberos
    身份验证，用于 SSH 访问的用户名必须具有
    `ad_user@ad_domain`{.systemitem} 格式。
    ` 有关配置.k5login`{.filename} 文件的详情请参考
    [[.k5login]{.refentrytitle}(5)]{.citerefentry} man page。
:::
无论哪种配置过程都会导致 AD 用户能够使用 Kerberos 登录。
:::
:::
::: section
::: titlepage
## []{#active-directory-trust.html#trust-webapps}使用启用了 Kerberos 的 Web 应用程序的信任 {.title}