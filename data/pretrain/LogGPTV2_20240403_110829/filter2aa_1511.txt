# Document and Content Ownership
This document and its content are the property of Airbus Defence and Space. It shall not be communicated to any third party without the ownerâ€™s written consent. All rights reserved.

# Auditing 6LoWPAN Networks Using Standard Penetration Testing Tools
**Authors:**
- Adam Reziouk
- Arnaud Lebrun
- Jonathan-Christofer Demay

## Presentation Overview
- **Why this talk?**
- **What we will not talk about?**
- **What we will talk about?**

## The 6LoWPAN Protocol
- **IPv6 over Low-Power Wireless Personal Area Networks (6LoWPAN)**
  - Header compression flags
  - Address factoring (IID or predefined)
  - Predefined values (e.g., TTL)
  - Fields omission (when unused)
  - Use of contexts (index-based)
  - UDP header compression (ports and checksum)
  - Packet fragmentation
  - MTU: 127 bytes vs. 1500 bytes
  - 80 bytes of effective payload

## Existing Tools for IPv6
- **Tools for IPv6:**
  - nmap -6, nc6, ping6, etc.
  - Higher-layer protocols (TCP, UDP, HTTP, etc.) remain the same.
- **USB Adapter Consideration:**
  - Works for Wi-Fi
  - Available
  - What's the big deal?

## IEEE 802.15.4 Standard
- **PHY Layer and MAC Sublayer:**
  - Multiple possible configurations
  - Network topology: Star vs. Mesh
  - Data transfer model: Direct or Indirect, with or without GTS, with or without Beacons
  - Multiple security suites
    - Integrity, confidentiality, or both
    - Integrity/Authentication code size (32, 64, or 128 bits)
  - Multiple standard revisions: 2003, 2006, and 2011

### IEEE 802.15.4-2006 Security Suites
| Security Level | b2 | b1 | b0 | Security Suite | Confidentiality | Integrity |
|---------------|----|----|----|----------------|-----------------|-----------|
| 000           | No | No | No |
| 001           | MIC-32 | No | Yes (M = 4) |
| 010           | MIC-64 | No | Yes (M = 8) |
| 011           | MIC-128 | No | Yes (M = 16) |
| 100           | ENC | Yes | No |
| 101           | ENC-MIC-32 | Yes | Yes (M = 4) |
| 110           | ENC-MIC-64 | Yes | Yes (M = 8) |
| 111           | ENC-MIC-128 | Yes | Yes (M = 16) |

### IEEE 802.15.4-2003 Security Suites
| Security Identifier | Security Suite | Confidentiality | Integrity |
|--------------------|----------------|-----------------|-----------|
| 0x00               | None           | No              | No        |
| 0x01               | AES-CTR        | Yes             | No        |
| 0x02               | AES-CCM-128    | Yes             | Yes       |
| 0x03               | AES-CCM-64     | Yes             | Yes       |
| 0x04               | AES-CCM-32     | Yes             | Yes       |
| 0x05               | AES-CBC-MAC-128| No              | Yes       |
| 0x06               | AES-CBC-MAC-64 | No              | Yes       |
| 0x07               | AES-CBC-MAC-32 | No              | Yes       |

## Deviations from the Standard
- **Supplier-Specific Implementations:**
  - One supplier builds the whole infrastructure
  - Suppliers design their own firmware using SoC solutions
  - Compliance with customer specifications
- **Potential Issues:**
  - Availability failures
  - Performance issues
  - Example: Digi XBee S1
    - 2003 header with 2006 encryption suites
    - Available since 2010 but no mention of this deviation

## The ARSEN Project
- **Advanced Routing between 6LoWPAN and Ethernet Networks:**
  - Detecting the configuration of existing 802.15.4 infrastructures
  - Network topology, data transfer model, security suite, standard revision, and deviations
  - Handling frame translation between IPv6 and 6LoWPAN
  - Compression/decompression, fragmentation/defragmentation
  - Support for all possible IEEE 802.15.4 configurations

### Based on Scapy-Radio
- **Scapy-Radio:**
  - https://bitbucket.org/cybertools/scapy-radio

### Main Components
- **IEEE 802.15.4 Scanner:**
  - Build a database of devices and captured frames
  - Devices running on a given channel
  - Communication between devices
  - Types of frames exchanged
  - Parameters used for transmission
- **6LoWPAN Border Router:**
  - TUN interface
  - Ethernet omitted (for now)
  - Scapy automaton

### New Scapy Layers
- **Dot15d4.py:**
  - Several bug fixes
  - Complete 2003 and 2006 support
  - User-provided keystreams support
- **Sixlowpan.py:**
  - Uncompressed IPv6 support
  - Complete IP header compression support
  - UDP header compression support
  - Fragmentation and defragmentation support

## Known Attacks on IEEE 802.15.4
- **Availability:**
  - Equivalent to PHY-based jamming attacks
  - Handle from a safety point of view (i.e., reboot)
- **Confidentiality:**
  - Simplified key management
  - Same-nonce attacks
- **Integrity:**
  - Encryption-only approach and misuse of non-volatile memory
  - Replay and malleability attacks

### AES-CTR (2003) or CCM*-ENC (2006)
- **Keystream Generation:**
  - \( K = F(\text{Key}, \text{Nonce}, \text{AES Counter}) \)
  - Nonce = \( F(\text{SrcExtID}, \text{Frame Counter}) \)
- **Same-Nonce Attacks:**
  - If one captured frame is known or guessable
  - Or statistical analysis on a large number of captured frames
- **Replay Attacks:**
  - Frame counters not being checked or stored in non-volatile memory
- **Malleability Attacks:**
  - Keystreams provided by same-nonce attacks (with a simple XOR)
  - Frame counters allowed by replay attacks

## Application on a Metering Infrastructure
- **Monitoring of a Water Distribution System:**
  - Wireless sensor network
  - Focus on two particular reachable sensors

### Information Gathering
- **Using the ARSEN Scanner:**
  - Channel 18 for transmission
  - Sensors only communicate with the PAN_Coord
  - PAN_Coord transmits beacon frames
  - Frame version: IEEE 802.15.4-2006 standard
  - Security functions: AES-CTR mode
  - Short_Addr used, Long_Addr needed

### Forcing Re-association
- **Disrupting the PAN:**
  - Flood the channel to disrupt beacon tracking
  - Sensors go into synchronization-loss state and try to re-associate

### Association Procedure
- **Analysis of Captured Association Frames:**
  - No secure functions during association
  - No higher protocol for authentication
  - Channels 11 to 26 scanned (with beacon requests)
  - Adding a fake sensor to the network
  - Any long address accepted by the PAN coordinator

### Outgoing Frame Counters
- **Forcing Sensor Reboot:**
  - Continuously flood the channel of the PAN coordinator (18)
  - Sensors look for a PAN coordinator on all channels (11 to 26)
  - Stop flooding, let re-associations happen, and observe frame counters

### Incoming Frame Counters
- **Forcing PAN Coordinator Reboot:**
  - Create a fake PAN coordinator on a channel below 18
  - Force re-association of sensors to the fake PAN coordinator
  - Wait for beacons to come back
  - Associate a fake sensor and replay previously captured frames

### Forging Encrypted Frames
- **Conducting Attacks:**
  - Reset outgoing frame counters for same-nonce attacks
  - Reset incoming frame counters for replay attacks
  - Conduct malleability attacks
  - Provide valid keystreams and frame counters to the new Dot15d4 Scapy layer
  - Set up the ARSEN border router and start auditing higher-layer protocols and services

## Demonstration Bench
- **Setup:**
  - Node 1 with XBee S1
  - Node 2 with XBee S1
  - USRP B210 used by the ARSEN tools
  - ARSEN, Scapy-Radio, GnuRadio, USRP B210

## Thank You
- **For Your Attention:**
  - https://bitbucket.org/cybertools/scapy-radio