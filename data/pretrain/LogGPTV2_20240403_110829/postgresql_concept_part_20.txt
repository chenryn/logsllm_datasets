16.1 Psql
Thissectionsummarizethecapabilitiesof psql. Thepsqlmanualhasdetailedinformationabout
eachitem. SeeChapter2foranintroductiontopsql.
Query Buffer Commands
Table16.1showsthecommandsusedtocontrolpsql’squerybuffer. Thereisoneitemofparticular
interest,edit(\e),whichallowseditingofthequerybuffer. The\ecommandloadsthecontentsof
thequerybufferintothedefaulteditor. When theuserexitstheeditor,theeditor’scontentsare
reloaded into the query buffer, ready for execution. The environment variable EDITOR specifies
thedefaulteditor.
General Commands
Table16.2listspsql’sgeneralcommands. Psql’slocalcopyinterfaceallowscopyoperationsusing
fileslocal to the computer running psql, rather than local to the computer running the database
server. Latersectionsinthischaptercovertheuseofthe\set,\unset,and\psetcommands.
Output Format Options
The\psetcommandcontrolstheoutputformatusedbypsql. Table16.3liststheavailableformatting
commands, andFigure 16.1 showsexamplesof theiruse. In thefigure,\pset tuples_only causes
psqltoshowonlydatarows,suppressingtableheadingsandrowcounts. Thetuples_onlydoesnot
177
178 CHAPTER16. DATABASEQUERYTOOLS
Function Command Argument
Print \p
Execute \gor; fileor|command
Quit \q
Clear \r
Edit \e file
Backslashhelp \?
SQLhelp \h topic
Includefile \i file
Outputtofile/command \o fileor|command
Writebuffertofile \w file
Show/savequeryhistory \s file
Runsubshell \! command
Table16.1: psql’squerybuffercommands
Operation Command
Connecttoanotherdatabase \connectdbname
Copytablefileto/fromdatabase \copytablenameto|fromfilename
Setavariable \setvariableor\setvariablevalue
Unsetavariable \unsetvariable
Setoutputformat \psetoptionor\psetoptionvalue
Echo \echostringor\echo`command`
Echoto\ooutput \qechostringor\qecho`command`
Copyright \copyright
Changecharacterencoding \encodingnewencoding
Table16.2: psql’sgeneralcommands
16.1. PSQL 179
Format Parameter Options
Fieldalignment format unaligned,aligned,html,orlatex
Fieldseparator fieldsep separator
Onefieldperline expanded
Rowsonly tuples_only
Rowseparator recordsep separator
Tabletitle title title
Tableborder border 0,1,or2
DisplayNULLvalues null null_string
HTMLtabletags tableattr tags
Pageoutput pager command
Table16.3: psql’s\psetoptions
test=> SELECT NULL;
?column?
----------
(1 row)
test=> \pset tuples_only
Showing only tuples.
test=> SELECT NULL;
test=> \pset null ’(null)’
Null display is ’(null)’.
test=> SELECT NULL;
(null)
Figure16.1: Exampleof\pset
180 CHAPTER16. DATABASEQUERYTOOLS
Modifies Command Argument
Fieldalignment \a
Fieldseparator \f separator
Onefieldperline \x
Rowsonly \t
Tabletitle \C title
EnableHTML \H
HTMLtabletags \T tags
Table16.4: psql’soutputformatshortcuts
takeasecondargument,asitisanon/off parameter. Thefirst\psettuples_onlyturnsiton,andthe
secondoneturnsitoff. Thesecond\psetinthefigurecausespsqltodisplayNULLas(null).
Output Format Shortcuts
Inadditiontousing\pset,someoutputformatoptionshaveshortcuts,asshowninTable 16.4.
Variables
The\setcommandsetsavariable,and\unsetremovesavariable. Toaccessavariableyouprecede
itsnamewithacolon. The\setcommandusedalonelistsalldefinedvariables.
Figure16.2showstheuseof psqlvariables. Thefirstvariableassigned,num_var,isaccessed
intheSELECTquerybyprecedingthevariablenamewithacolon. Thesecond\setcommandplaces
the word SELECT into a variable, then uses that variable to perform a SELECT query. The next
example uses backslash-quotes (\’) to create a string that contains single quotes. This variable
thenreplacesaquotedstringinaquery. Withdate_var,graveaccents(`)allowacommandtoberun
andtheresultplacedintoavariable. Inthiscase,theoutputoftheUnixdatecommandiscaptured
and placed into a variable. The assignment to date_var2 combines the use of backslash-quotes
andgraveaccentstorunthedatecommandandsurrounditwithsinglequotes. ThefinalSELECT
showsthatdate_var2holdsaquoteddatestringthatcanbeusedinqueries.
Psql includes a number of predefined variables, as listed in Table 16.5. The variables in the
first group contain useful information; the others affect psql’s behavior. Some of the predefined
variablesdonottakeanargumentbutareactivatedusing\set,anddeactivatedusing\unset.
Listing Commands
Youcanfindagreatdealofinformationaboutthecurrentdatabasebyusingpsql’slistingcommands,
as shown in Table 16.6. They provide information about tables, indexes, functions, and other
objectsdefinedinthedatabase.
16.1. PSQL 181
test=> \set num_var 4
test=> SELECT :num_var;
?column?
----------
4
(1 row)
test=> \set operation SELECT
test=> :operation :num_var;
?column?
----------
4
(1 row)
test=> \set str_var ’\’My long string\’’
test=> \echo :str_var
’My long string’
test=> SELECT :str_var;
?column?
----------------
My long string
(1 row)
test=> \set date_var `date`
test=> \echo :date_var
Thu Aug 11 20:54:21 EDT 1994
test=> \set date_var2 ’\’’`date`’\’’
test=> \echo :date_var2
’Thu Aug 11 20:54:24 EDT 1994’
test=> SELECT :date_var2;
?column?
------------------------------
Thu Aug 11 20:54:24 EDT 1994
(1 row)
Figure16.2: psqlvariables
182 CHAPTER16. DATABASEQUERYTOOLS
Meaning VariableName Argument
Database DBNAME
Multibyteencoding ENCODING
Host HOST
PreviouslyassignedOID LASTOID
Port PORT
User USER
Echoqueries ECHO all
Echo\d*queries ECHO_HIDDEN noexec
Historycontrol HISTCONTROL ignorespace,ignoredups,or
ignoreboth
Historysize HISTSIZE command_count
Terminateonendoffile IGNOREEOF eof_count
\lobjecttransactions LO_TRANSACTION rollback,commit,nothing
Stoponqueryerrors ON_ERROR_STOP
Commandprompt PROMPT1,PROMPT2,PROMPT3 string
Suppressoutput QUIET
Single-linemode SINGLELINE
Single-stepmode SINGLESTEP
Table16.5: psql’spredefinedvariables
16.1. PSQL 183
Listing Command Argument
Table,index,view,orsequence \d name
Tables \dt name
Indexes \di name
Sequences \ds name
Views \dv name
Permissions \zor\dp name
Systemtables \dS name
Largeobjects \dl name
Types \dT name
Functions \df name
Operators \do name
Aggregates \da name
Comments \dd name
Databases \l
Table16.6: psql’slistingcommands
Most listing commands take an optional name parameter, which can be specifiedas a regular
expression. Forexample,\dt secdisplaysalltablenamesbeginningwithsec,and\dt .*x.*shows
alltablenamescontaininganx. RegularexpressionswerecoveredinSection 4.10.
Whenyouareusinglistingcommands,thedescriptionsofthevariousdatatypesandfunctions
arecalledcomments. POSTGRESQLpredefinesmanycomments,andtheCOMMENTcommandallows
userstodefinetheirownaswell. The\ddcommandandothersthendisplaythesecomments. See
theCOMMENTmanualpageformoreinformation.
Manycommandssupporttheuseofanoptionalplussign,whichshowsadditionalinformation.
Forexample,\dTlistsalldatatypes,\dT+includesthesizeofeachtype,and\df+showsadditional
informationaboutfunctions. With theothercommands,aplussigncausesthecommentsforthe
objecttobedisplayed.
Large Object Commands
Psqlhasalocallargeobjectinterfacethatsupportslargeobjectoperationsusingfileslocaltothe
computerrunningpsql,ratherthanlocaltothecomputerrunningthedatabaseserver. Table 16.7
showsthelocallargeobjectcommandssupported.
184 CHAPTER16. DATABASEQUERYTOOLS
LargeObjects Command Argument
Import \lo_import file
Export \lo_export oidfile
Unlink \lo_unlink oid
List \lo_list
Table16.7: psql’slargeobjectcommands
Psql Command-line Arguments and Start-up File
You canchangethebehaviorof psql when startinga newsession. Psql isnormallystartedfrom
the command line by typing psql followed by the database name. However, psql accepts extra
argumentsbetweenpsqlandthedatabasename,whichmodifypsql’sbehavior. Forexample,psql
-f file testwillreadcommandsfromfile,ratherthanfromthekeyboard. Table16.8summarizes
psql’scommand-lineoptions. Consultthepsqlmanualpageformoredetailedinformation.
Anotherwaytochangethebehaviorofpsqlonstart-upistocreateafilecalled.psqlrcinyour
homedirectory. Eachtimepsqlstarts,itexecutesanybackslashorSQLcommandsinthatfile.
16.2 Pgaccess
Pgaccess isagraphicaldatabasetoolthatisusedforaccessingtables,queries,views,sequences,
functions,reports,forms,scripts,users,andschemas. ItiswrittenusingthePOSTGRESQLTCL/TK
interface. Itssourcecodeappearsinpgsql/src/bin/pgaccess.
Figure16.3 showstheopeningwindowof pgaccess. Thetabsontheleftshowtheitemsthat
can be accessed. The menu at the top permitsdatabaseactions, table import/export, and object
creation,deletion,andrenaming.
Figure16.4showsthetablewindow. Thiswindowallowstablerowstobeviewedandmodified.
Thepgaccessmanualpageandhelpscreenscoveritscapabilitiesinmoredetail.
16.3 Summary
This chapter covered psql and pgaccess, the most popular POSTGRESQL query tools. They are
valuabletoolsforaccessingPOSTGRESQL.
16.3. SUMMARY 185
Option Capability Argument AdditionalArgument
Connection Database(optional) -d database
Hostname -h hostname
Port -p port
User -U user
Forcepasswordprompt -W
Version -V
ControllingOutput Fieldalignment -A
Fieldseparator -F separator
Recordseparator -R separator
Rowsonly -t
Extendedoutputformat -x
Echo\d*queries -E
Quietmode -q
HTMLoutput -H
HTMLtabletags -T tags
Set\psetoptions -P optionoroption=value
Listdatabases -l
Disablereadline -n
Automation Echoallqueriesfromscripts -a
Echoqueries -e
Executequery -c query
Getqueriesfromfile -f file
Outputtofile -o file
Single-stepmode -s
Single-linemode -S
Suppressreading˜/.psqlrc -X
Setvariable -v varorvar=value
Table16.8: psql’scommand-linearguments
186 CHAPTER16. DATABASEQUERYTOOLS
Figure16.3: Pgaccess’sopeningwindow
Figure16.4: Pgaccess’stablewindow
Chapter 17
Programming Interfaces
PsqlisidealforinteractivelyenteringSQLcommandsandforrunningautomatedscripts,butitis
notidealforwritingapplications. Fortunately,POSTGRESQLhasinterfacesformanyprogramming
languages. Programming languages include variables, functions, conditional evaluation, looping,
andcomplexinput/outputroutines,allofwhicharerequiredforwritinggoodapplications.
Table 17.1 shows the supported programming interfaces. These language interfaces allow
applicationstopassqueriestoPOSTGRESQLandreceiveresults. Thecompiledlanguagesexecute
morequickly,butaremoredifficulttoprogramthantheinterpretedones.
ThischapterwillshowthesameapplicationusingeachoftheinterfaceslistedinFigure 17.1.
The application is a very simple one that prompts the user for a United States state code and
outputsthestatenamethatgoeswiththecode. Figure 17.1 showsthesampleapplicationbeing
run. For clarity, the texttypedby the userappearsin bold. The program displaysaprompt, the
usertypesAL,andtheprogramdisplaysAlabama. Althoughstatecodesareunique,theapplication
iswrittentoallowmultiplequeryreturnvalues. Theapplicationusesthestatenametable,which
isrecreatedinFigure17.2.
AdditionalinformationaboutPOSTGRESQLinterfacesisavailableintheProgrammer’sManual
mentionedinAppendixA.2.
Enter a state code: AL
Alabama
Figure17.1: Sampleapplicationbeingrun
187
188 CHAPTER17. PROGRAMMINGINTERFACES
Interface Language Processing Advantages
LIBPQ C compiled nativeinterface
LIBPGEASY C compiled simplifiedC
ECPG C compiled ANSIembeddedSQLC
LIBPQ++ C++ compiled object-orientedC
ODBC ODBC compiled applicationconnectivity
JDBC Java both portability
PERL Perl interpreted textprocessing
PGTCLSH TCL/TK interpreted interfacing,windowing
PYTHON Python interpreted object-oriented
PHP HTML interpreted dynamicWebpages
Table17.1: Interfacesummary
test=> CREATE TABLE statename (code CHAR(2) PRIMARY KEY,
test(> name CHAR(30)
test(> );
CREATE
test=> INSERT INTO statename VALUES (’AL’, ’Alabama’);
INSERT 18934 1
test=> INSERT INTO statename VALUES (’AK’, ’Alaska’);
INSERT 18934 1
…
Figure17.2: Statenametable
17.1. CLANGUAGEINTERFACE(LIBPQ) 189
User
Terminal
PostgreSQL
Application Database
Code