### PostgreSQL Internals

#### Plan Output - Three-Table Join
**DEBUG: Plan**
- **Node Type:** HASHJOIN
- **Startup Cost:** 6.58
- **Total Cost:** 68.90
- **Estimated Rows:** 575
- **Width:** 112
- **Target List:**
  - **Target Entry:**
    - **Result Domain:**
      - **ResNo:** 1
      - **ResType:** 19
      - **ResTypMod:** -1
      - **ResName:** relname
      - **ResKey:** 0
      - **ResKeyOp:** 0
      - **ResSortGroupRef:** 0
      - **ResJunk:** false
    - **Expression:**
      - **Variable:**
        - **VarNo:** 65000
        - **VarAttno:** 1
        - **VarType:** 19
        - **VarTypMod:** -1
        - **VarLevelsup:** 0
        - **VarNoOld:** 1
        - **VarOattno:** 1

#### Result Returned
```sql
test=> SELECT firstname
       FROM friend
       WHERE age = 33;
```
- **Output:**
  - **firstname (typeid = 1042, len = -1, typmod = 19, byval = f):**
    - Sandy

#### Statistics - Part 1
**PARSER STATISTICS**
- **System Usage:**
  - Elapsed: 0.000002 sec
  - User: 0.000000 sec
  - System: 0.000001 sec
  - [User Total: 0.009992 sec, System Total: 0.049961 sec]
  - Filesystem Blocks: 0/0 in/out
  - Page Faults/Reclaims: 0/0, Swaps: 0
  - Signals Received: 0
  - Messages: 0/0 rcvd/sent
  - Context Switches: 0/0 voluntary/involuntary
- **Postgres Usage:**
  - Shared Blocks: 0 read, 0 written, Buffer Hit Rate: 0.00%
  - Local Blocks: 0 read, 0 written, Buffer Hit Rate: 0.00%
  - Direct Blocks: 0 read, 0 written

**PARSE ANALYSIS STATISTICS**
- **System Usage:**
  - Elapsed: 0.000002 sec
  - User: 0.000001 sec
  - System: 0.000002 sec
  - [User Total: 0.009993 sec, System Total: 0.049965 sec]
  - Filesystem Blocks: 0/0 in/out
  - Page Faults/Reclaims: 0/0, Swaps: 0
  - Signals Received: 0
  - Messages: 0/0 rcvd/sent
  - Context Switches: 0/0 voluntary/involuntary
- **Postgres Usage:**
  - Shared Blocks: 1 read, 0 written, Buffer Hit Rate: 96.88%
  - Local Blocks: 0 read, 0 written, Buffer Hit Rate: 0.00%
  - Direct Blocks: 0 read, 0 written

#### Statistics - Part 2
**REWRITER STATISTICS**
- **System Usage:**
  - Elapsed: 0.000002 sec
  - User: 0.000000 sec
  - System: 0.000002 sec
  - [User Total: 0.009993 sec, System Total: 0.049968 sec]
  - Filesystem Blocks: 0/0 in/out
  - Page Faults/Reclaims: 0/0, Swaps: 0
  - Signals Received: 0
  - Messages: 0/0 rcvd/sent
  - Context Switches: 0/0 voluntary/involuntary
- **Postgres Usage:**
  - Shared Blocks: 0 read, 0 written, Buffer Hit Rate: 0.00%
  - Local Blocks: 0 read, 0 written, Buffer Hit Rate: 0.00%
  - Direct Blocks: 0 read, 0 written

**PLANNER STATISTICS**
- **System Usage:**
  - Elapsed: 0.009974 sec
  - User: 0.009988 sec
  - System: -1.999985 sec
  - [User Total: 0.019982 sec, System Total: 0.049955 sec]
  - Filesystem Blocks: 0/0 in/out
  - Page Faults/Reclaims: 0/0, Swaps: 0
  - Signals Received: 0
  - Messages: 0/0 rcvd/sent
  - Context Switches: 0/0 voluntary/involuntary
- **Postgres Usage:**
  - Shared Blocks: 5 read, 0 written, Buffer Hit Rate: 96.69%
  - Local Blocks: 0 read, 0 written, Buffer Hit Rate: 0.00%
  - Direct Blocks: 0 read, 0 written

**EXECUTOR STATISTICS**
- **System Usage:**
  - Elapsed: 0.040004 sec
  - User: 0.039982 sec
  - System: 0.000013 sec
  - [User Total: 0.059964 sec, System Total: 0.049970 sec]
  - Filesystem Blocks: 0/0 in/out
  - Page Faults/Reclaims: 0/0, Swaps: 0
  - Signals Received: 0
  - Messages: 0/2 rcvd/sent
  - Context Switches: 2/2 voluntary/involuntary
- **Postgres Usage:**
  - Shared Blocks: 2 read, 0 written, Buffer Hit Rate: 83.33%
  - Local Blocks: 0 read, 0 written, Buffer Hit Rate: 0.00%
  - Direct Blocks: 0 read, 0 written

#### File Structure
- **Page Structure:**
  - **Page Header**
  - **Item**
  - **Tuple**
  - **Special**

#### Heap Tuple Structure
- **OID:** Object ID of the tuple
- **cmin:** Creation command ID
- **cmax:** Destruction command ID
- **xmin:** Creation transaction ID
- **xmax:** Destruction transaction ID
- **ctid:** Tuple ID (page/item)
- **natts:** Number of attributes
- **infomask:** Tuple flags
- **hoff:** Length of tuple header
- **bits:** Bit map representing NULL values
- **Attributes:**

#### Index Page Structure
- **Page Header**
- **Item**
- **Internal**
- **Leaf**

#### Snapshot Data
```c
typedef struct SnapshotData {
    TransactionId xmin; /* all xacts starting after this are invisible to me */
    TransactionId xmax; /* all xacts ending at or before this are invisible to me */
    uint32 xcnt; /* number of xacts below */
    TransactionId *xip; /* array of xacts in progress */
    ItemPointerData tid; /* required for Dirty snapshot */
} SnapshotData;
```

#### Vacuum
- **Vacuum Process:**
  - A: Analyze
  - E: Execute
  - C: Cleanup
  - T: Truncate
  - I: Index
  - V: Vacuum
  - R: Reindex

#### Proc Structure
```c
struct proc {
    SHM_QUEUE links; /* list link if process is in a list */
    SEMA sem; /* semaphore to sleep on */
    int errType; /* STATUS_OK or STATUS_ERROR after wakeup */
    TransactionId xid; /* current transaction ID */
    TransactionId xmin; /* minimal running XID as it was when we were starting our xact */
    XLogRecPtr logRec;
    LOCK *waitLock; /* Lock object we’re sleeping on */
    HOLDER *waitHolder; /* Per-holder info for awaited lock */
    LOCKMODE waitLockMode; /* type of lock we’re waiting for */
    LOCKMASK heldLocks; /* bitmask for lock types already held on this lock object by this backend */
    int pid; /* This backend’s process id */
    Oid databaseId; /* OID of database this backend is using */
    short sLocks[MAX_SPINS]; /* Spin lock stats */
    SHM_QUEUE procHolders; /* list of HOLDER objects for locks held or awaited by this backend */
};
```

#### Lock Modes
- **Access Share Lock:** `SELECT`
- **Row Share Lock:** `SELECT FOR UPDATE`
- **Row Exclusive Lock:** `INSERT`, `UPDATE`, `DELETE`
- **Share Lock:** `CREATE INDEX`
- **Share Row Exclusive Lock:** Allows `ROW SHARE LOCK` but blocks `EXCLUSIVE MODE`
- **Exclusive Lock:** Blocks `ROW SHARE LOCK` and `SELECT...FOR UPDATE`
- **Access Exclusive Lock:** `ALTER TABLE`, `DROP TABLE`, `VACUUM`, and unqualified `LOCK TABLE`

#### Lock Structure
- **Proc 1:** Holder, Lock A
- **Proc 2:** Lock B
- **Proc 3:** Waiter, Lock C
- **Proc 4:** Lock D

#### System Tables
- **pg_database:** `datlastsysoid`
- **pg_description:** `objoid`
- **pg_trigger:** `tgrelid`, `tgfoid`
- **pg_aggregate:** `aggtransfn`, `aggfinalfn`, `aggbasetype`, `aggtranstype`, `aggfinaltype`
- **pg_language:** `prolang`
- **pg_proc:** `prorettype`
- **pg_am:** `amgettuple`, `aminsert`, `amdelete`, `ambeginscan`, `amrescan`, `amendscan`, `ammarkpos`, `amrestrpos`, `ambuild`, `amcostestimate`
- **pg_rewrite:** `ev_class`
- **pg_opclass:** `opcdeftype`
- **pg_index:** `indexrelid`, `indrelid`, `relfilenode`, `reltoastrelid`, `reltoastidxid`
- **pg_class:** `reltype`, `relam`
- **pg_type:** `typrelid`, `typelem`, `typinput`, `typoutput`, `typreceive`, `typsend`
- **pg_operator:** `oprleft`, `oprright`, `oprresult`, `oprnegate`, `oprcode`, `oprlsortop`, `oprrsortop`, `oprcom`, `oprrest`, `oprjoin`
- **pg_inherits:** `inhrelid`, `inhparent`
- **pg_attribute:** `attrelid`, `attnum`, `atttypid`
- **pg_attrdef:** `adrelid`, `adnum`
- **pg_statistic:** `starelid`, `staattnum`, `staop`
- **pg_relcheck:** `rcrelid`

#### Modifying System Capabilities
- **CREATE FUNCTION**
- **CREATE OPERATOR**
- **CREATE TYPE**
- **CREATE LANGUAGE**

#### Caches
- **System Cache**
- **Relation Information Cache**
- **File Descriptor Cache**

#### Shared Memory
- **Proc Structure**
- **Lock Structure**
- **Buffer Structure**

#### Shared Buffers
```c
typedef struct sbufdesc {
    Buffer freeNext; /* links for freelist chain */
    Buffer freePrev;
    SHMEM_OFFSET data; /* pointer to data in buf pool */
    BufferTag tag; /* file/block identifier */
    int buf_id; /* maps global desc to local desc */
    BufFlags flags; /* see bit definitions above */
    unsigned refcount; /* # of times buffer is pinned */
    slock_t io_in_progress_lock; /* to block for I/O to complete */
    slock_t cntx_lock; /* to lock access to page context */
    unsigned r_locks; /* # of shared locks */
    bool ri_lock; /* read-intent lock */
    bool w_lock; /* context exclusively locked */
    bool cntxDirty; /* new way to mark block as dirty */
    BufferBlindId blind; /* was used to support blind write */
    void (*CleanupFunc)(Buffer); /* function to clean up buffer content */
} BufferDesc;
```

#### Memory Routines
- **palloc()**
- **pfree()**
- **MemoryContexts**

#### Algorithms
- **Lookup Insert/Del Pointers Resize**
  - **Algorithm:** Ordering by Order
  - **Insert:** O(n) (list), O(1) (array), O(logN) (tree, hash)
  - **Delete:** O(1) (list), O(n) (array), O(logN) (tree), O(1) (hash)
  - **Recent per Entry Overhead:** 1-2 (list), 0.5 (array, tree), 3 (hash)
  - **Overhead:** no (list, tree), yes (array, hash)