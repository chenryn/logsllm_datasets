# 【CTF攻略】L-CTF 2016 出题心得&花絮集锦
|
##### 译文声明
本文是翻译文章，文章来源：安全客
译文仅供参考，具体内容表达以及含义原文为准。
3日上午九点，第一届L-CTF落下帷幕，排行榜定格在下图的状态中：
从9月20日比赛筹备开始到现在，参与比赛组织、筹办的每个人都收获良多。特将部分题目的出题人心得，和比赛中一些有趣的事情分享出来，以飨读者。
**关于出题**
**Icemakr（Pwn出题人）**
If your problem relies on leaking libc, consider providing the libc.so along
with the problem binary. libc hunting isn't really an interesting skill to
test in a CTF.
关于Pwn100，出题时就想着，PWN100简单粗暴的栈溢出就好。PWN200当时是想试一下house of
spirit的技巧，就是在栈上构造堆块，然后通过free和malloc之后得到一个栈上的堆块，就可以对这块缓冲区写东西了（比如覆盖返回地址），但实际情况是没有考虑到覆盖got表里的函数地址为shellcode的地址即可get
shell（，）。
PWN300设计时的初衷是想让选手自己通过查共享库的文件头，然后找到符号表，从而获得共享库内函数信息的方法来getshell（），Pwn400则希望选手构造一个虚表，利用uaf来修改虚表指针指向构造好的虚表，在下一次调用虚函数时即可控制程序执行流。PWN500就是让大家构造overlapping
chunks，来做一些羞羞的事()
**Silver（逆向400、500出题人）**
这次出的题让各位见笑了……哈哈哈（掩饰不住得意/*weisuo*/的笑）。
先说Re400啦，题目标题是The Gold Rush，淘金热。各位应该已经看到我们放出的 Writeup
了，在我的设计中，Re不只是一道对程序主文件（problem_fully_stripped）的逆向题，因为这个程序里涉及的算法比较多（sha256,
sha384,
twofish），而用C++编写也提升了一点点难度，因此在我的思路中是希望选手通过对程序流程的理解和405480处函数的分析，并结合对magic_file的逆向分析，了解到这是在挖矿，然后去网络中找到对应的nonce值。之所以在比赛中段放出了提示bitcoin，也是希望提示参赛队伍这是一道和比特币密切相关的题。
后期和队伍交流时也发现，两支解出来的队伍（跌亭科技、Nu1L）基本就是这个思路，不再赘述，可见逆向能力很强。但比赛结束后我发现AAA有一种更好的解法[[点击查看他们对Re200和500的wp](https://www.zybuluo.com/Aqua-Dream/note/520182)]，但是没来得及提交。这种解法利用的是我在出题设计时候的漏洞：密钥的解密参数是用各块哈希值的sha384生成的，但各块的哈希值是可以从数据中直接拿到的，也就是说，选手可以先对程序进行patch，然后在magic_file后附加一个块，写入最后一个块的hash值，再直接运行程序，就可以了。这个漏洞的引入还是因为我不希望大家直接去爆破nonce的哈希，所以就取了整个块的hash……无意之中忘掉了这一点……然而更可惜的是，如果他们能把这个题目漏洞提交上来，按我的想法，至少能拿到100分以上的加分（因为这个洞会导致题目难度至少降低100分），在此还是要表达对AAA战队队员逆向功底和思路的钦佩，师傅们还是强的不要不要的啊。
而Re500，在设计之初是希望将软件逆向和硬件逆向结合起来，题目的名字Halt and Catch
fire是一部讲述上世纪80年代个人计算机发展的美剧，其第一集讲述的就是主人公通过自己搭建的硬件电路，dump出BIOS芯片内的代码。我甚至还构想过在线下赛融入相关的内容，只可惜由于种种原因，线下赛不能举办，这个思路也只能留作以后使用了。
斗胆出了这么两道题，如果有哪些地方见笑了，还请海涵。
**math1as(web 300、500出题 **人** )**
😀
从这次比赛的情况看来各位表哥都很厉害,这次我出题的时候呢，web300的主要思路还是二次注入,比较常见。而headpic这个标题是从经历过的一个实际的渗透案例出发的,比较现实的换头像产生ssrf,另外我又在想,对于某些问题是否可以让web有更多种解法,更偏实战一点,于是就有了验证码的两种解决方案,1是识别,2是从session绕过。最后的登陆呢,则是考察到了其他题目没有怎么关注的php类型和函数的问题,通过strcmp函数的缺陷来完成最后的flag收割。
web500作为一道分值很重的题目,实际上是一道实战渗透+内网+提权的题目,之所以外部的web选择了python,
一个是感觉web如果全是php就太low了233(。虽然php的确是世界上最好的语言,另一个是,说不定不同的语言特点和框架可以让大家能够有更好的思路呢。比较实际的点就是那个积分转现金,并发数据库不加锁定的问题,经典的案例是wooyun的白帽子奖金提现,命令注入则部分参考了hitcon
2015的一道题目,最后的内网渗透则是从某个js混淆中获得的灵感（），也顺手黑一下易语言。当然呢留下的小惊喜是,居然还有本地提权~,不过这算是一个常规题目了，我这个web狗看了下都能做hhh。
**  