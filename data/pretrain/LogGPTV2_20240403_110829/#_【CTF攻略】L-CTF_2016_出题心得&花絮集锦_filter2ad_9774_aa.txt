# 【CTF攻略】L-CTF 2016 出题心得与花絮集锦

**译文声明**
本文为翻译文章，原文来源：安全客
译文仅供参考，具体内容及含义以原文为准。

9月3日上午九点，第一届L-CTF比赛圆满结束。排行榜最终定格如下图所示：

从9月20日开始筹备比赛至今，参与组织和筹办的每一位成员都收获颇丰。现将部分出题人的心得体会以及比赛中的一些趣事分享给大家。

## 关于出题

### Icemakr（Pwn题目出题人）

在设计PWN100时，我们选择了一个简单的栈溢出问题。对于PWN200，最初的设想是测试house of spirit技巧，即通过在栈上构造堆块，并利用free和malloc操作来获取对栈上堆块的控制权，从而覆盖返回地址。然而，在实际操作中，我们忽略了可以通过覆盖GOT表中的函数地址直接执行shellcode的方法。

PWN300的设计初衷是让参赛者自行查找共享库文件头并找到符号表，进而获取共享库内函数信息以实现getshell的目的。至于PWN400，则希望选手能够构造一个虚表，并利用UAF漏洞修改虚表指针指向自定义的虚表，在下次调用虚函数时控制程序流程。最后，PWN500旨在鼓励大家构建重叠chunk来进行一些高级攻击。

### Silver（逆向工程400、500出题人）

这次出题经历让我感到非常自豪（笑）。

首先是Re400，《淘金热》。根据我们的Writeup显示，该题目不仅限于对主程序文件的逆向分析，还涉及到多种加密算法如SHA-256、SHA-384以及Twofish等。此外，使用C++编写也增加了难度。我的预期是希望选手们通过对程序逻辑的理解以及特定函数（例如位于偏移量405480处）进行深入研究，并结合对magic_file的逆向分析，发现这实际上是一个挖矿过程。为了进一步引导参赛者，我们在赛程中期给出了“比特币”这一关键词提示。

赛后与队伍交流得知，两支成功解题的队伍（跌亭科技、Nu1L）基本上遵循了上述思路。但令人惊讶的是，AAA团队找到了一种更为巧妙的解决方法——他们发现了我在出题时无意间引入的一个漏洞：密钥解密参数是由各数据块哈希值的SHA-384生成的，而这些哈希值可以直接从数据中提取出来。这意味着参赛者可以先修补程序代码，在magic_file后追加一个新块并写入最后一个块的哈希值，然后直接运行程序即可完成挑战。如果当时他们能及时提交这一发现，我认为至少可以获得额外100分奖励。在此向AAA战队表示敬意！

至于Re500，最初构想是将软件逆向与硬件逆向相结合。题目名称《Halt and Catch Fire》取自一部关于上世纪八十年代个人电脑发展历程的美剧，其中第一集讲述了主人公如何通过自制硬件电路读取BIOS芯片内容的故事。虽然由于种种原因未能在线下赛事中实施这一创意，但我相信未来仍有机会将其付诸实践。

尽管这两道题目可能存在不足之处，但仍希望大家能够多多包涵。

### math1as（Web 300、500出题人）

😀

本次比赛中各位选手表现十分出色！Web300主要考察了二次注入这一常见漏洞类型。"Headpic"灵感来源于真实世界中的SSRF案例，同时我还考虑到了验证码绕过的问题，提供了两种不同的解决方案：一种是通过图像识别技术破解验证码；另一种则是尝试绕过Session验证机制。至于登录环节，则侧重于PHP类型转换及函数使用方面的知识，特别是利用strcmp函数缺陷获取Flag。

Web500是一道高分值题目，它综合了外部渗透、内部网络访问以及权限提升等多个方面。选择Python作为Web服务器语言的原因之一是为了避免过于依赖单一编程环境（尽管PHP确实非常优秀）。此外，本题还涉及到了数据库并发操作未加锁所带来的风险、命令注入以及JavaScript混淆等问题。值得一提的是，该题还隐藏了一个本地提权的小彩蛋，即使是Web安全领域的新手也能轻松应对。

以上就是此次L-CTF比赛的部分出题心得与幕后故事。希望各位读者能够从中获得启发，并享受这场精彩纷呈的安全竞赛之旅！