$ echo *rich_blun8here,now* l./isenai]
$ echo *rich/blumghere.nov* |./isenai1
echo *richfblumghere.nov* I./isemail
$ echo *rich*blumghere.nov*|./isenai1
$
20.5小结
如果你在shell脚本中处理数据文件，就必须熟悉正则表达式。正则表达式在Linux实用工具、
编程语言以及采用了正则表达式引擎的应用程序中均有实现。在Linux中有一些不同的正则表达
式引擎。最流行的两种是POSIX基础正则表达式（BRE）引擎和POSIX扩展正则表达式（ERE）
引擎。sed编辑器基本符合BRE引擎，而gawk程序则使用了ERE引擎中的大多数特性。
正则表达式定义了用来过滤数据流中文本的模式模板。模式由标准文本字符和特殊字符的组
成。正则表达式引擎用特殊字符来匹配一系列单个或多个字符，这类似于其他应用程序中通配符
的工作方式。
通过结合字符和特殊字符，你能够定义出匹配大多数数据类型的模式。然后你可以用sed编
辑器或gawk程序从大型数据流中过滤特定数据，或者验证从其他数据输入应用程序收到的数据。
下一章将会更深人地使用sed编辑器来进行高级文本处理。sed编辑器中的许多高级功能让它
在处理大型数据流和过滤数据时非常有用。
---
## Page 460
21
第21章
sed进阶
本章内容
口多行命令
口保持空间
口排除命令
改变流
口模式替代
在脚本中使用sed
口创建sed实用程序
19章介绍了如何用sed编辑器的基本功能来处理数据流中的文本。sed编辑器的基础命令
中能满足大多数日常文本编辑需求。本章将会介绍sed编辑器提供的更多高级特性。这些
功能你未必会经常用到，但当需要时，知道这些功能的存在以及如何使用肯定是件好事。
21.1
多行命令
在使用sed编辑器的基础命令时，你可能注意到了一个局限。所有的sed编辑器命令都是针对
单行数据执行操作的。在sed编辑器读取数据流时，它会基于换行符的位置将数据分成行。sed编
辑器根据定义好的脚本命令一次处理一行数据，然后移到下一行重复这个过程。
有时需要对跨多行的数据执行特定操作。如果要查找或替换一个短语，就更是如此了。
举个例子，如果你正在数据中查找短语Linux System Administrators Group，它很有
可能出现在两行中，每行各包含其中一部分短语。如果用普通的sed编辑器命令来处理文本，就
不可能发现这种被分开的短语。
幸运的是，sed编辑器的设计人员已经考虑到了这种情况，并设计了对应的解决方案。sed编
辑器包含了三个可用来处理多行文本的特殊命令。
N：将数据流中的下一行加进来创建一个多行组（multiline group）来处理。
口D：删除多行组中的一行。
口P：打印多行组中的一行。
---
## Page 461
446
第21章sed进阶
后面几节将会进一步讲解这些多行命令并向你演示如何在脚本中使用它们。
21.1.1next 命令
在讲解多行next命令之前，首先需要看一下单行版本的next命令是如何工作的，然后就比
较容易理解多行版本的next命令是如何操作的了。
1.单行的next命令
小写的n命令会告诉sed编辑器移动到数据流中的下一文本行，面不用重新回到命令的最开始
再执行一遍。记住，通常sed编辑器在移动到数据流中的下一文本行之前，会在当前行上执行完
所有定义好的命令。单行next命令改变了这个流程。
这听起来可能有些复杂，没错，有时确实是。在这个例子中，你有个数据文件，共有5行内
容，其中的两行是空的。目标是删除首行之后的空白行，而留下最后一行之前的空白行。如果写
一个删掉空白行的sed脚本，你会删掉两个空白行。
S cat datal.txt
This is the header line.
This is a data line.
This is the last line.
$ sed •/^$/d' data1.txt
This is the header line.
This is a data line.
This is the last line.
由于要删除的行是空行，没有任何能够标示这种行的文本可供查找。解决办法是用n命令。
在这个例子中，脚本要查找含有单词header的那一行。找到之后，n命令会让sed编辑器移动到文
本的下一行，也就是那个空行。
$ sed */header/(n ; d)' data1.txt
This is the header line.
This is a data line.
This is the last line.
这时，sed编辑器会继续执行命令列表，该命令列表使用a命令来删除空白行。sed编辑器执
行完命令脚本后，会从数据流中读取下一行文本，并从头开始执行命令脚本。因为sed编辑器再
也找不到包含单词header的行了。所以也不会有其他行会被删掉。
2.合并文本行
了解了单行版的next命令，现在来看看多行版的。单行next命令会将数据流中的下一文本
行移动到sed编辑器的工作空间（称为模式空间）多行版本的next命令（用大写N）会将下一文
本行添加到模式空间中已有的文本后。
---
## Page 462
21.1多行命令
447
这样的作用是将数据流中的两个文本行合并到同一个模式空间中。文本行仍然用换行符分
隔，但sed编辑器现在会将两行文本当成一行来处理。
下面的例子演示了N命令的工作方式。
This is the beader line,
S cat data2.txt
This is the first data line.
Thi s
 is the second data line,
This is the last line.
$ sed*/first/( N1s/\n// }· data2.txt
This is the besder line.
This is the first data line. This is the second data line.
This is the last line.
sed编辑器脚本查找含有单词first的那行文本。找到该行后，它会用n命令将下一行合并到那
行，然后用替换命令s将换行符替换成空格。结果是，文本文件中的两行在sed编辑器的输出中成
了一行。
如果要在数据文件中查找一个可能会分散在两行中的文本短语的话，这是个很实用的应用程
序。这里有个例子。
On Tuesdsy, the Linux Bysten
S cat data3.txt
All System Administrators should attend.
Adninistrator′s group meeting wi1l be held.
Thank you for your attendance.
S sed *N 1 s/System Administrator/Desktop User/* data3.txt
Adninistrator′s group meeting wi1l be held.
On Tuesday, the Linux Systen
All Desktop Users should attend.
Thank you for your attendance.
替换命令会在文本文件中查找特定的双词短语system Acministrator。如果短语在一行
中的话，事情很好处理，替换命令可以直接替换文本。但如果短语分散在两行中的话，替换命令
就没法识别匹配的模式了。
这时N命令就可以派上用场了。
S sed *H 1 s/System.Adninistrator/Desktop User/. data3,txt
On Tuesday,。 the Linux Desktop User*s group meeting wi1l be held.
All Desktop Users should attend.
Thank you for your attendance.
用命令将发现第一个单词的那行和下一行合并后，即使短语内出现了换行，你仍然可以找
到它。
注意，替换命令在System和Administrator之间用了通配符模式（.）来匹配空格和换行符
---
## Page 463
448
第21章sed进阶
这两种情况。但当它匹配了换行符时，它就从字符串中删掉了换行符，导致两行合并成一行。这
可能不是你想要的。
要解决这个问题，可以在sed编辑器脚本中用两个替换命令：一个用来匹配短语出现在多行
中的情况，一个用来匹配短语出现在单行中的情况。
$ sed*N
> 8/System\nAdministrator/Desktop^nUser/
> 8/System Administrator/Desktop User/
qxa'gep . a/Syaten\nAdmlnLatrator/Desktop\nUser/
> s/Systen Administrator/Desktop User/
> ' data4.txt
On Tuesday, the Linux Desktop
User*α group meeting vill be held.
A11 Syaten Adminlatrators should attend.
%
由于systemAdministrator文本出现在了数据流中的最后一行，N命令会错过它，因为没
有其他行可读人到模式空间跟这行合并。你可以轻松地解决这个问题—将单行命令放到N命令
前面，并将多行命令放到N命令后面，像这样：
$ sed *
> s/Systen Administrator/Desktop User/
> s/Systen\nAdminiatrator/Desktop\nUser/
>N
>* data4.txt
On Tuesday, the Linux Desktop
User α group meeting vi1l be held.
A1l Desktop Users should attend.
---
## Page 464
21.1多行命令
449
现在，查找单行中短语的替换命令在数据流的最后一行也能正常工作，多行替换命令则会负
责短语出现在数据流中间的情况。
21.1.2多行删除命令
第19章介绍了单行删除命令（a）。sed编辑器用它来删除模式空间中的当前行。但和N命令一
起便用时，便用单行删除命令就要小心了。
$ sed *N ;/Systen\nAdninistrator/d' data4.txt
All System Adminietrators sbould attend.
删除命令会在不同的行中查找单词System和Administrator，然后在模式空间中将两行都删掉。
这未必是你想要的结果。
sed编辑器提供了多行删除命令D，它只删除模式空间中的第一行。该命令会删除到换行符（含
换行符）为止的所有字符。
S sed *N1/Sy8ten\nAdministrator/D' data4.txt
Adninistrator's group meeting wi1l be he1d.
All System Administrators should attend.
文本的第二行被命令加到了模式空间，但仍然完好。如果需要删掉目标数据字符串所在行
2
的前一文本行，它能派得上用场。
这里有个例子，它会删除数据流中出现在第一行前的空白行。
S cat data5.txt
This is the beader line.
This is a data line.
This is the last line.
S sed */^$/(α ;/beader/D)* data5.txt
This is the besder line.
This is a data line.
This is the last line.
sed编辑器脚本会查找空白行，然后用n命令来将下一文本行添加到模式空间。如果新的模式
空间内容含有单词header，则D命令会删除模式空间中的第一行。如果不结合使用N命令和D命令，
就不可能在不删除其他空白行的情况下只删除第一个空白行。
21.1.3多行打印命令
现在，你可能已经了解了单行和多行版本命令间的差异。多行打印命令（P）沿用了同样的
方法。它只打印多行模式空间中的第一行。这包括模式空间中直到换行符为止的所有字符。当你
---
## Page 465
450第21章sed进阶
用-n选项来阻止脚本输出时，它和显示文本的单行p命令的用法大同小异。
$ sed -n*N ;/Sy8ten\nAdninistrator/P' data3.txt
On Tuesday, the Linux System
当多行匹配出现时，P命令只会打印模式空间中的第一行。多行P命令的强大之处在和N命令
及D命令组合使用时才能显现出来。
D命令的独特之处在于强制sed编辑器返回到脚本的起始处，对同一模式空间中的内容重新执
行这些命令（它不会从数据流中读取新的文本行）在命令脚本中加人N命令，你就能单步扫过整
个模式空间，将多行一起匹配。
接下来，使用r命令打印出第一行，然后用D命令删除第一行并绕回到脚本的起始处。一旦返
回，N命令会读取下一行文本并重新开始这个过程。这个循环会一直继续下去，直到数据流结束。
21.2保持空间
模式空间（patterm space）是一块活跃的缓冲区，在sed编辑器执行命令时它会保存待检查的
文本。但它并不是sed编辑器保存文本的唯一空间。
sed编辑器有另一块称作保持空间（hold space）的缓冲区域。在处理模式空间中的某些行时，
可以用保持空间来临时保存一些行。有5条命令可用来操作保持空间，见表21-1。
表21-1sed编辑器的保持空间命令
命令
描述
将模式空间复制到保持空间
H
将模式空间附加到保持空间
将保持空间复制到模式空间
G
将保持空间附加测模式空间
交换模式空间和保持空间的内容
这些命令用来将文本从模式空间复制到保持空间。这可以清空模式空间来加载其他要处理的
字符串。
通常，在使用h或H命令将字符串移动到保持空间后，最终还要用g、G或x命令将保存的字符
串移回模式空间（否则，你就不用在一开始考虑保存它们了）。
由于有两个缓冲区域，弄明白哪行文本在哪个缓冲区域有时会比较麻顺。这里有个简短的例
子演示了如何用n和g命令来将数据在sed编辑器缓冲空间之间移动。
Thia la the header llne.
S cat data2.txt
Thia la the firat data line.
Thia la the second data llne.
This Le the last 1ine.
$sed -n */firat/ (h ; p ; n p19 : p )' data2.txt
---
## Page 466
21.3排除命令
451
Thla ia the first Gata line
Thia ia the second data line,
Thia ia the firat data line.
我们来一步一步看上面这个代码例子：
(1)sed脚本在地址中用正则表达式来过滤出含有单词first的行；
(2)当含有单词first的行出现时，h命令将该行放到保持空间：
(3)p命令打印模式空间也就是第一个数据行的内容；
(4)n命令提取数据流中的下一行（This is the second data line），并将它放到模式
空间：
(5)p命令打印模式空间的内容，现在是第二个数据行；
(6)g命令将保持空间的内容（This is the first data line）放回模式空间，替换当
前文本；
(7)p命令打印模式空间的当前内容，现在变回第一个数据行了。
通过使用保持空间来回移动文本行，你可以强制输出中第一个数据行出现在第二个数据行后
面。如果丢掉了第一个p命令，你可以以相反的顺序输出这两行。
S sed -n /first/ (h ; n : P : g : p )' data2.txt
Thia is the first data line.
Thla ia the second data line,
这是个有用的开端。你可以用这种方法来创建一个sed脚本将整个文件的文本行反转！但要
那么做的话，你需要了解sed编辑器的排除特性，也就是下节的内容。
21.3排除命令
第19章演示了sed编辑器如何将命令应用到数据流中的每一个文本行或是由单个地址或地址
区间特别指定的多行。你也可以配置命令使其不要作用到数据流中的特定地址或地址区间。
感叹号命令（：）用来排除（negate）命令，也就是让原本会起作用的命令不起作用。下面
的例子演示了这一特性。
S sed -n /header/!p' data2.txt
Thia ia the second data line.
Ihla is the firat data line.
Thls ia the last line.