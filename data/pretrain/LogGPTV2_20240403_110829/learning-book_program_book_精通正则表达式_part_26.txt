$HostnameRegex=qr/[-a-20-9]+(\.[-a-z0-9]+)*\.(comledu/info)/i;
---
## Page 164
138
第3章：正则表达式的特性和流派概览
表3-14：若干工具软件及其中访问捕获文本的方法
程序
完整的匹配
第一组括号匹配的文本
GNUegrep
N/A
N/A
GNU Emacs
(match_string 0)
(match-string 1)
（replacement字符串中为\&）
（replacement字符串中为\1）
Substr (Sted, RSTART,RLENGTH)
GNU awk
(replacement字符串中为\&）
\1（在gensub替换中）
MySQL
N/A
N/A
Perl
r41
$&
$1
PHP
450
Smatches[0]
Smatches[1]
Python
97
MatchObj.group(0)
MatchObj.group(1)
Ruby
$&
$1
GNU sed
&（只能在replacement字符串中使用）
\1（只能出现在regex和replacement中）
Java
95
MatcherObj.group()
MatcherObj.group(1)
Tcl
通过regexp命令设置为用户选择的变量
VB.NET96
MatchObj.Groups(0)
MatchObj.Groups(1)
C#
MatchObj.Gropus[0]
MatchObj.Groups[1]
vi
&
\1
（请参考第91页的版本信息）
如果这两组括号是非捕获型的，我们就可以按照直观的方式使用sHostnameRegex。另一种
办法是使用命名捕获，尽管Perl没有提供这种功能，我们还是会介绍它。
命名捕获：（?...）
Python和PHP的preg引擎，以及.NET引擎，都能够为捕获内容命名。Python和PHIP使用
的语法是（?P….），而.NET使用（?.）。我更喜欢.NET的语法。下面是一
个.NET的例子：
\b(?|d\d\d\)-(?|d\d\d)-(?\d\d\d\d)\bj
在Python/PHP中是这样：
\b(?P\d\d\d\)-(?PId\d\d)-(?P\d\d\d\d)\b)
这个表达式会用美国电话号码的各个部分“填充”Area、Exch和Num命名的内容。然后我
们可以通过名称来访问各个括号捕获的内容，例如在VB.NET和大多数.NET语言中，可以
使用RegexObj.Groups（“Area"），在C#中使用RegexObj.Groups[*Area"]，在Python中
使用RegexObj.group（"Area"），在PHP中使用smatches[*Area"]。这样程序看起来更清
晰。
---
## Page 165
常用的元字符和特性
139
如果要在正则表达式内部引I用捕获的文本，.NET中使用k，Python和PHP中使用
(?P=Area) Je
在Pyhon和.NET（但不包括PHP）中，可以在同一个表达式中多次使用同样的命名。例如
语法）：…(?：\（（?\d\d\d)\）I(?\d\d\d)-)J。无论哪组匹配成功，都
会把3位的区号保存到Area中。
固化分组：（?>.）
如果详细了解正则引擎的匹配原理（169），就很容易理解固化分组。在这里只说一点，
就是一旦括号内的子表达式匹配之后，匹配的内容就固定下来（固化（atomic）下来无法改
变），在接下来的匹配过程中不会变化，除非整个固化分组的括号都被弃用，在外部回溯中
重新应用。下面这个简单的例子会帮助我们理解这种匹配的“固化”性质。
；.*！能够匹配‘；Hola！'，但是如果".*在固化分组；（?>.*)！中就无法匹配。在这两
种情况下，.*都会首先匹配尽可能多的内容（Hola"），但是之后的"！无法匹配，会强
追.*释放之前匹配的某些内容（最后的‘！')。如果使用了固化分组，就无法实现，因为
.*在固化分组中，它永远也不会“交还”已经匹配的任何内容。
尽管这个例子没有什么实际价值，固化分组还是有重要的用途。尤其是，它能够提高匹配
的效率（171），而且能够对什么能匹配，什么不能匹配进行准确地控制（269)。
多选结构：.
多选结构能够在同一位置测试多个子表达式。每个子表达式称为一个多选分支（altermative)。
符号1有很多称呼，不过“或（or)”和“竖线（bar)”最为常见。有的流派使用11。
多选结构的优先级很低，所以'thisandlorthati的匹配等价于（thisand）I（orthat），
而不是'this（andlor）that)，虽然andlor看上去是一个单位。
大多数流派都容许出现空的多选分支，例如"（thisIthat1)。空表达式在任何情况下都能
匹配，所以这个例子等于（thislthat）？：（注16)。
注16：认真考究起来，（thislthat1）1在逻辑上等价于（（？：this|that）？）i。它与语句
但是如果工具软件对匹配是否参与最终匹配会区别对待，就很重要。
---
## Page 166
140
第3章：正则表达式的特性和流派概览
POSIX标准禁止出现空多选分支，lex和大多数版本的awk也是如此。我认为，考虑到空多
选分支的简便和清晰，保留它不无益处。LarryWall告诉我：“我认为，保留它就好像在数
学中保留0一样有意义”。
条件判断：（?ifthenIelse）
这个结构容许用户在正则表达式中使用if/then/else判断。if部分是特殊的条件表达式（a
specialkindof conditionalexpression)，下文马上会有介绍。rhen和else部分是普通的子表达
式。如果f部分测试为真，则尝试then的表达式，否则尝试else部分（else部分也可以不
出现，果真如此的话，可以省略)。
f的种类因流派的不同而不同，但是大多数实现方式都容许在其中引用捕获的子表达式和环
视结构。
测试对捕获型括号的特殊引用。如果f部分是一个括号中的编号，而对应编号的捕获型括
号参与了匹配，其值为“true”。下面的例子匹配tag，无论是是单独出现的，或者是
在"中出现的。代码采用带注释的宽松排列格式，条件判断结构（这里的没有else
部分）以粗体标注。
（]+>\s*）？#匹配开头的tag、如果存在的话
#匹配tag
(?(1)\s*)
#匹配结尾的，如果之前匹配过
（？（1)）测试中的（1）会测试第一组捕获型括号是否参与了匹配。“参与匹配”不等于“实
际匹配了文本”，来看个简单的例子：
下面两种办法都可以匹配可能包含在“<>”中的单词：（）：可以，
()则不行。它们之间唯一的区别在于第一个问号出现的位置。在第一种（正
确的）办法中，问号作用于整个捕获型括号，所以括号（以及包含的内容）不是必须匹配
的。在第二个例子中，捕获型括号不是可选的一一只有其中的.+)：的结果完全一样，只是足够智能的实现方式能对占有优先量词进行更多的
优化。
高级话题引导
Guideto thieAitvanced Clapters
我们已经熟悉了元字符、流派、语法包装（syntacticpackaging）之类的概念，现在应该详
细介绍本书开头提到的第三点了，也就是工具软件的正则引擎如何把一个正则表达式应用
到文本当中。在第4章“正则表达式的匹配原理”中，我们会看到匹配引擎的实现方式如
何影响匹配的完成、匹配的内容，以及匹配的时间。我们会详细考察这一切。学习完这些
知识之后、你在调校复杂的正则表达式时会更有信心。第5章“实用正则表达式技巧”会
用更复杂的例子巩固这些知识。
接下来是第6章“打造高效率的正则表达式”。了解了引擎的基本工作原理之后，你会学习
到如何充分利用这些知识。第6章考察了正则表达式的陷阱一一它们通常会导致意外的结
果，然后教会读者真正运用书本上的知识。
第4、5、6三章是本书的核心。头三章只是为它们做铺垫，而且最后针对工具软件的章节
以它们为基础。核心章节不容易阅读，但是我尽力避免使用数学、代数和其他我们不熟悉
的概念。但是，就像任何高深的学问一样，潜心研究细节需要花费相当的工夫。
---
## Page 169
第
表达式的匹配原理
The Mechanicsof ExpressionProcessing
前一章在开头类比了正则表达式与汽车，余下的部分介绍了正则表达式的功能、特点以及
其他相关信息。本章仍会使用这个类比来说明重要的正则引擎及其工作原理。
为什么需要了解这些原理呢？读者将会了解到，正则引擎分为很多种，最常用的引擎类型
—-Perl、Tcl、Python、.Net、Ruby、PHP，我见过的所有的Java正则包，以及其他语言使
用的工作原理，基于此原理，构建正则表达式的方式决定了某个正则表达式能否匹配一个
特定字符串，在何处匹配，以及匹配成功或报告失败的速度。如果你认为这些问题很重要，
请阅读本章。
发动引擎
Start Your Engines!
现在我们来看看，引擎的类比能为我们提供多大帮助。引擎的价值在于，有了它，你不需
要花多少气力就能从一个地方移动到另一个地方。驾驶员只需要放松或者听听音乐，发动
机会完成余下的事情。它的主要任务就是驱动车轮，而驾驶员没必要关心它是如何工作的。
是这样吗？
---
## Page 170
144
第4章：表达式的匹配原理
两类引擎
Tuo Kinds of Engines
设想一下驾驶电动汽车的情形？电动汽车已经诞生很久了，但它们不像汽油发动机驱动的
汽车那样普及，因为电动汽车还不够成熟。如果你有辆电动汽车，请记住别给它加油。如
果你的汽车采用汽油发动机，请务必远离烟火。电动机几乎总是“能够运行”，汽油机则需
要多加保养。更换火花塞、空气过滤器，或者换用不同品牌的汽油，有可能大大提升发动
机的效率。当然，也可能降低汽油机的性能，或者导致发动机罢工。不同引擎的工作原理
也有不同，但目的都是驱动车轮。不过，如果你想开车去某个地方，还得把好方向盘，当
然，这是题外话。
新的标准
NewStandards
让我们看看添加一条新规范：加利福尼亚州的尾气排放标准（注1）。一些发动机达到了加
州的严格排放标准，一些则没有。这两类发动机并没有本质的不同，只是按标准划分为两
类。这些标准规定了发动机尾气排放的成分，而并没有规定发动机应该怎样做才能达标。
所以，现在我们可以把之前的两分法变为四分法：符合标准的电动机、不符合标准的电动
机、符合标准的汽油机和不符合标准的汽油机。
回到原来的话题，我敢打赌，电动机不需要做多少改动就可以达标一一标准只是“规定”
尾气的成分，而电动机几乎没有尾气。相反，汽油机要达标可能就需要大的修改和更新。
使用汽油发动机的驾驶员尤其需要注意汽油的型号一一如果加错了油，他们就惹上大麻烦
了。
标准的作用