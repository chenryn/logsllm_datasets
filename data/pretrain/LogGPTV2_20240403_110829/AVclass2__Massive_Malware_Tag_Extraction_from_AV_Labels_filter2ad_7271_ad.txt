100%
5%
97%
14%
100%
100%
12%
5%
100%
7%
100%
100%
2%
94%
94%
95%
91%
89%
95%
99%
89%
92%
93%
96%
75%
78%
28%
82%
69%
73%
31%
85%
71%
83%
82%
83%
83%
74%
82%
98%
96%
98%
97%
98%
66%
98%
5.1 Datasets
We evaluate AVclass2 using the 11 datasets in Table 3. For each
dataset, the table shows the target architecture of the samples (Win-
dows, Android, or both), whether the samples are labeled with a
family name, the number of samples, whether binaries are available
(otherwise we only have their hashes), and the collection period.
Datasets come from prior works, save for Superset that is the union
of all other datasets. Some datasets overlap, e.g., Drebin [1] is a
superset of MalGenome [39]. We do not remove duplicates to make
it easy to map results to publicly available datasets.
We had VT reports for most samples and only collect a few
missing ones. We use the available reports since VT’s rate limits
make it infeasible for us to collect the latest reports.
5.2 Tagging Evaluation
Table 4 summarizes the tagging coverage of AVclass2, i.e., the
fraction of samples for which it can extract a tag. These results are
obtained using the tagging rules, expansion rules, and taxonomy
output by the update module after it identifies previously unknown
relations. In Section 5.3 we analyze the tagging improvement before
and after applying the update module. The table first shows the
fraction of all samples, and those flagged by at least four AV engines,
for which at least one tag was obtained. We use the threshold of four
AV detections to remove potentially benign samples. This threshold
has been used in prior works [19] and a recent work shows that
threshold values between two and 14 are good for stability and for
balancing precision and recall [40]. For each category, the table then
shows the fraction of tagged samples with at least four detections
with a tag of that category. Column UNK corresponds to samples
with at least one output unknown token not in the taxonomy.
The results show that AVclass2 can extract at least one tag
for 89%–100% of the samples, depending on the dataset. Thus, it
is possible to index the majority of samples. The files for which
no tags can be extracted largely correspond to those with very
few detections, which is higher for Andropup as it is the most
recent dataset. When considering sample flagged by at least four
AV engines the fraction of tagged samples is at least 99%. As shown
by the Superset, the most common tags are file properties (99%
of samples), followed by malware classes (94%), known families
(83%), and behaviors (75%). It is important to note that the FAM
column considers only samples tagged with families that appear
in the taxonomy. However, unknown tags most often correspond
to new families that have not yet been added to the taxonomy and
should be considered for final family tagging results. Section 5.5
compares the family tagging results of AVclass2 to prior tools like
AVclass and Euphony.
Most popular tags. Table 5 shows the top 10 tags in the Superset
for each category, ranked by the number of samples assigned the tag.
The most popular tag is FILE:OS:windows (61% of samples), followed
by CLASS:grayware (46%), BEH:execdownload (27%), BEH:filemodify
(21%), FILE:packed (20%), and CLASS:downloader (20%). Our taxon-
omy contains 32–95 tags in each of the non-family categories, and
894 families. Of the tags in the taxonomy 94%–100%, depending
on the category, appear in the Superset. Thus, the distribution of
tags per category contains a large number of tags with at most
1% coverage, each identifying up to tens of thousands of samples.
Thus, AVclass2 extracts a wide variety of tags that can be used
by the analyst to search for samples according to class, family, file
properties, and behaviors.
The top FILE tags include the platform (windows, android), whether
the sample is packed, if it is a bundle that contains other executables,
the programming language (autoit, msil for C#), if it is an installer or
has been generated by a particular installer (nsis), and the size of the
file (small). Intermediate tags rank high because they accumulate
popularity of their children through the expansion on taxonomy
relationships. For example, packed accumulates the influence of
all packer tags in the taxonomy (e.g., asroot, upack, themida). And,
installer the influence of nsis, as well as other installer-generating
software (e.g., wiseinstaller, installmate).
There are four CLASS tags appearing in more than 10% of the
samples. They capture the popularity of potentially unwanted
programs, downloaders, monetizing through advertisements, and
viruses. CLASS:grayware:adware:multiplug are adware that install
browser plugins (e.g., extensions, toolbars) to modify the user’s
Web surfing. And, CLASS:grayware:tool are tools not necessarily
malicious, but often abused, such as those used for remote adminis-
tration. Note that trojan is considered generic, otherwise it would
be assigned to 86% of the samples.
The top three behavior tags correspond to expansions from
class tags: downloader ⇒ execdownload, virus ⇒ filemodify, worm
ACSAC 2020, December 7–11, 2020, Austin, USA
Silvia Sebastián and Juan Caballero
Table 5: Top 10 tags for each category ranked by the number of samples assigned the tag in the Superset dataset.
Rank
1
2
3
4
5
6
7
8
9
10
FILE
windows
packed
android
bundle
installer
small
nsis
msil
autoit
html
61%
20%
5%
3%
2%
2%
1%
1%
1%
1%
CLASS
grayware
downloader
adware
virus
worm
backdoor
multiplug
rogueware
tool
clicker
46%
20%
18%
15%
9%
4%
4%
2%
1%
1%
BEH
execdownload
filemodify
selfpropagate
autorun
inject
server
alertuser
killproc
sms
ddos
27%
21%
12%
10%
6%
6%
2%
2%
2%
2%
FAM
vobfus
loadmoney
virut
softpulse
installerex
domaiq
firseria
zbot
sality
virlock
10%
5%
5%
4%
3%
3%
3%
3%
3%
2%
UNK
fraudpack
atraps
hiddapp
hiddenads
packer
llac
trymedia
refroso
bifrost
comame
1%
1%
1%
1%
1%
1%
1%
1%
1%
1%
⇒ selfpropagate. Note that the behavior associated to a class gets
a higher tagging ratio than its class, indicating additional samples
without the corresponding class tag. For example, execdownload
has an additional 7% samples without the downloader class tag and
filemodify an additional 6% over virus. Other popular behaviors
are autorun, which captures samples that modify the autorun.inf
Windows file to automatically execute; those related to obfuscation
such as injecting code in a benign process and killing a process, typ-
ically of a security tool; opening a server, alerting the user, sending
SMS messages; and launching denial of service attacks.
Top families have lower prevalence than top classes, file proper-
ties, and behaviors. The most prevalent family is vobfus (10%). Out
of the top families, half correspond to grayware families (loadmoney,
softpulse, installererex, domaiq, firseria) and the rest are malware.
Top unknown tokens have much lower prevalence, at most 1%.
They mostly correspond to families not yet in the taxonomy, for
which no strong relation has yet been observed to another tag.
5.3 Update Module
We illustrate the usage of the update module with the Andropup
dataset. When we first obtained this dataset, we run AVclass2’s
labeler observing that 65% of samples contained an unknown tag.