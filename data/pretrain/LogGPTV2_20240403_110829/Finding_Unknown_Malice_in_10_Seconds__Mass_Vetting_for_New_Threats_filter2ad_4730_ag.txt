[21] HANNA, S., HUANG, L., WU, E., LI, S., CHEN, C., AND
SONG, D. Juxtapp: A scalable system for detecting code reuse
among android applications. In DIMVA (2012).
[22] HUANG, H., CHEN, K., REN, C., LIU, P., ZHU, S., AND WU,
D. Towards discovering and understanding unexpected hazards
in tailoring antivirus software for android. In AsiaCCS (2015),
ACM, pp. 7–18.
[23] JING, Y., ZHAO, Z., AHN, G.-J., AND HU, H. Morpheus: au-
tomatically generating heuristics to detect android emulators. In
Proceedings of the 30th Annual Computer Security Applications
Conference (2014), ACM, pp. 216–225.
[24] KASSNER, M.
Google play: Android’s bouncer can be
http://www.techrepublic.com/blog/it-security/-google-
pwned.
play-androids-bouncer-can-be-pwned/, 2012.
[25] KELION, L. Android adware ’infects millions’ of phones and
tablets. http://www.bbc.com/news/technology-31129797, 2015.
[26] LINDORFER, M., NEUGSCHWANDTNER, M., WEICHSEL-
BAUM, L., FRATANTONIO, Y., VAN DER VEEN, V., AND
PLATZER, C. Andrubis-1,000,000 apps later: A view on current
android malware behaviors. In Proceedings of the the 3rd Inter-
national Workshop on Building Analysis Datasets and Gathering
Experience Returns for Security (BADGERS) (2014).
[27] LINDORFER, M., VOLANIS, S., SISTO, A., NEUGSCHWANDT-
NER, M., ATHANASOPOULOS, E., MAGGI, F., PLATZER, C.,
ZANERO, S., AND IOANNIDIS, S. Andradar: Fast discovery of
android applications in alternative markets. In DIMVA (2014).
[28] LU, L., LI, Z., WU, Z., LEE, W., AND JIANG, G. Chex: stat-
ically vetting android apps for component hijacking vulnerabili-
ties. In Proceedings of the 2012 ACM conference on Computer
and communications security (2012), ACM, pp. 229–240.
[29] NETWORKX.
Python
package
and
ing
and
https://pypi.python.org/pypi/networkx/1.9.1, 2015.
manipulating
graphs
for
creat-
networks.
USENIX Association  
24th USENIX Security Symposium  673
15
[30] OBERHEIDE, J., AND MILLER, C. Dissecting the android
bouncer. SummerCon2012, New York (2012).
[31] RASTOGI, V., CHEN, Y., AND ENCK, W. Appsplayground: Au-
tomatic security analysis of smartphone applications. In Proceed-
ings of the third ACM conference on Data and application secu-
rity and privacy (2013), ACM, pp. 209–220.
[32] RASTOGI, V., CHEN, Y., AND JIANG, X. Catch me if you can:
Evaluating android anti-malware against transformation attacks.
Information Forensics and Security, IEEE Transactions on 9, 1
(2014), 99–108.
I.
. D.
[33] READING,
Google play exploits bypass malware
checks. http://www.darkreading.com/risk-management/google-
play-exploits-bypass-malware-checks/d/d-id/1104730?, 6 2012.
[34] REINA, A., FATTORI, A., AND CAVALLARO, L. A system call-
centric analysis and stimulation technique to automatically recon-
struct android malware behaviors. EuroSec, April (2013).
[35] REN, C., CHEN, K., AND LIU, P. Droidmarking: resilient soft-
ware watermarking for impeding android application repackag-
ing. In ASE (2014), ACM, pp. 635–646.
[36] SMALI. An assembler/disassembler for android’s dex format.
http://code.google.com/p/smali/, 2013.
[37] SQUARE, G. Dexguard.
https://www.saikoa.com/dexguard,
2015.
[38] SQUARE, G. Proguard. https://www.saikoa.com/proguard, 2015.
[39] STATISTA.
portal.
statistics
Statista
The
:
http://www.statista.com/, 2014.
[40] STORM, A. Storm, distributed and fault-tolerant realtime com-
putation. https://storm.apache.org/.
[41] VIDAS, T., AND CHRISTIN, N. Sweetening android lemon mar-
kets: measuring and combating malware in application market-
places. In Proceedings of the third ACM conference on Data and
application security and privacy (2013), ACM, pp. 197–208.
[42] VIDAS, T., TAN, J., NAHATA, J., TAN, C. L., CHRISTIN, N.,
AND TAGUE, P. A5: Automated analysis of adversarial android
applications. In Proceedings of the 4th ACM Workshop on Secu-
rity and Privacy in Smartphones & Mobile Devices (2014), ACM,
pp. 39–50.
[43] VIRUSTOTAL. Virustotal - free online virus, malware and url
scanner. https://www.virustotal.com/, 2014.
https://www.virustotal.com/en/documentation/mobile-
applications/, 2015.
[45] WALENSTEIN, A., AND LAKHOTIA, A. The software simi-
Internat. Begegnungs-und
larity problem in malware analysis.
Forschungszentrum f¨ur Informatik, 2007.
[46] WEICHSELBAUM, L., NEUGSCHWANDTNER, M., LINDORFER,
M., FRATANTONIO, Y., VAN DER VEEN, V., AND PLATZER,
C. Andrubis: Android malware under the magnifying glass. Vi-
enna University of Technology, Tech. Rep. TRISECLAB-0414-001
(2014).
[47] WU, C., ZHOU, Y., PATEL, K., LIANG, Z., AND JIANG, X.
Airbag: Boosting smartphone resistance to malware infection. In
NDSS (2014).
[48] YAN, L. K., AND YIN, H. Droidscope: seamlessly reconstruct-
ing the os and dalvik semantic views for dynamic android mal-
ware analysis. In In USENIX rSecurity 12’.
[49] YAN, P. A look at repackaged apps and their effect on the
mobile threat landscape. http://blog.trendmicro.com/trendlabs-
security-intelligence/a-look-into-repackaged-apps-and-its-role-
in-the-mobile-threat-landscape/, 7 2014. Visited on 11/10/2014.
[50] ZHANG, F., HUANG, H., ZHU, S., WU, D., AND LIU, P. View-
droid: Towards obfuscation-resilient mobile application repack-
aging detection. In Proceedings of the 7th ACM Conference on
Security and Privacy in Wireless and Mobile Networks (WiSec
2014). ACM (2014).
[51] ZHANG, Q., AND REEVES, D. S. Metaaware: Identifying meta-
In Computer Security Applications Confer-
morphic malware.
[44] VIRUSTOTAL.
Virustotal
for
android.
AndroidLeyuan
ence, 2007. ACSAC 2007. Twenty-Third Annual (2007), IEEE,
pp. 411–420.
[52] ZHANG, Y., YANG, M., XU, B., YANG, Z., GU, G., NING, P.,
WANG, X. S., AND ZANG, B. Vetting undesirable behaviors in
android apps with permission use analysis. In Proceedings of the
2013 ACM SIGSAC conference on Computer & communications
security (2013), ACM, pp. 611–622.
[53] ZHENG, M., LEE, P. P., AND LUI, J. C. Adam: An automatic
and extensible platform to stress test android anti-virus systems.
In Detection of Intrusions and Malware, and Vulnerability As-
sessment (2013), pp. 82–101.
[54] ZHOU, W., ZHOU, Y., GRACE, M., JIANG, X., AND ZOU, S.
Fast, scalable detection of piggybacked mobile applications. In
CODASPY (2013).
[55] ZHOU, W., ZHOU, Y., JIANG, X., AND NING, P. Detecting
repackaged smartphone applications in third-party android mar-
ketplaces. In Proceedings of the second ACM conference on Data
and Application Security and Privacy (2012), ACM, pp. 317–
326.
[56] ZHOU, Y., AND JIANG, X. Dissecting android malware: Char-
In Security and Privacy (SP), 2012
acterization and evolution.
IEEE Symposium on (2012), IEEE, pp. 95–109.
[57] ZHOU, Y., WANG, Z., ZHOU, W., AND JIANG, X. Hey, you,
get off of my market: Detecting malicious apps in ofﬁcial and
alternative android markets. In NDSS (2012).
[58] ZORZ,
Z.
1.2info.
security.org/secworld.php?id=15976, 11 2013.
11/10/2014).
http://www.net-
(Visited on
8 Appendix
Appstore
Anzhi
Yidong
yy138
Anfen
Slideme
gfun
16apk
Pandaapp
Lenovo
Haozhuo
Dangle
3533 world
Appchina
Wangyi
Youyi
Nduo
Sogou
Huawei
Opera
Mumayi
Google
Xiaomi
others
Amazon
Baidu
7xiazi
Liqu
Gezila
Yingyongbao
AndroidRuanjian
Anji
AndroidMarket
# of malicious apps # of total apps studied Percentage Country
China
China
China
China
US
China
China
China
US
China
China
China
China
China
China
China
China
China
China
China
China
China
China
Europe
China
US
China
China
US
China
China
China
China
46055
3026
2950
1572
15367
6053
108736
25714
10679
68839
8052
22183
9886
62449
663
3628
190
23774
1466
2812
2308
41607
24332
61866
79594
401549
12139
38648
1001
21122
26195
26392
5000
17921
1088
828
365
3285
997
17779
4008
1577
9799
1100
2992
1331
8396
85
408
20
2414
148
272
198
3467
1997
4852
6129
30552
832
2377
59
831
898
394
30
38.91
35.96
28.07
23.22
21.38
16.47
16.35
15.59
14.77
14.23
13.66
13.49
13.46
13.44
12.82
11.25
10.53
10.15
10.1
9.67
8.58
8.33
8.21
7.84
7.7
7.61
6.85
6.15
5.89
3.93
3.43
1.49
0.6
Table 5: App Collection & Malware in Different Markets.
674  24th USENIX Security Symposium 
USENIX Association
16