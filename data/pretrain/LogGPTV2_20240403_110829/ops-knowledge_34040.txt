User: Here is the example:

centos:(build a virtualen)
    $ virtualenv tenv

ubuntu:(active it)
    $ . tenv/bin/activate
    $ python
    Could not find platform independent libraries 
    Could not find platform dependent libraries 
    Consider setting $PYTHONHOME to [:]
    ImportError: No module named site

    In turn:

ubuntu:
    $ virtualenv ttenv

centos:
    $ . ttenv/bin/activate
    $ python
    ttenv/bin/python: /usr/lib64/libcrypto.so.1.0.0: no version information available (required by ttenv/bin/python)
    ttenv/bin/python: /lib64/libc.so.6: version `GLIBC_2.14' not found (required by ttenv/bin/python)
    ttenv/bin/python: /lib64/libc.so.6: version `GLIBC_2.15' not found (required by ttenv/bin/python)
    ttenv/bin/python: /usr/lib64/libssl.so.1.0.0: no version information available (required by ttenv/bin/python)
Assistant: What did you expect exactly ? Virtualenv creates a sandboxed Python environmenent with binaries etc for the platform on which it's created - it doesn't automagically makes the binaries platform-independent...