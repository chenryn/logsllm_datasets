target
tcp 0 0 0.0.0.0:80 0.0.0.0:±LISTEN 919/apache
$sudo netstat-1np|grep:80
target
target
prot opt source
prot opt source
prot opt source
prot opt source
prot opt source
destination
destination
destination
destination
destination
。第二列和第三列是
，Apache正在
---
## Page 144
8.2.1使用curl测试Web服务器
就是确认Web服务器确实对访问请求做出了响应。尽管可以使用
8.2
似下面这样：
telnet这样的命令行工具去诊断一台Web服务器的故障，就可以从
Web 浏览器进行这个测试，但是如果你了解如何使用类似curl或者
流量通过Web服务器的80端口。
会安装telnet这个工具。因此本章将展示如何使用curl和telnet 测
保证安装过命令行浏览器，比如curl、links或者w3m，
要知道大多数服务器并没有安装图形化的Web 浏览器，甚至都不能
任何一台主机上测试这台Web 服务器（更重要的是通过 ssh 连接)。
试Web服务器。
显然，在后一个例子里，你需要修改防火墙的规则以允许数据
一旦确定 Web 服务器监听的端口是正确的，故障排除的下一步
换句话说，如果存在阻塞80端口的防火墙规则，输出可能会类
Chain OUTPUT (policy ACCEPT)
Chain INPUT (policy ACCEPT)
$sudo/sbin/iptables-L-n
与其他使用 HTTP 和 HTTPS 协议的命令行工具相比，curl使用
target
target
Chain FORWARD (policy ACCEPT)
reject-with icmp-port-unreachable
REJECT
target
target
使用命令行测试Web服务器
prot opt source
prot opt source
prot opt source
prot opt source
tcp
--0.0.0.0/0
0.0.0.0/0
destination
destination
destination
destination
8.2使用命令行测试Web服务器137
tcp dpt:80
但是基本都
---
## Page 145
138
·第8章网站宕机了？追踪Web服务器问题
选项用以获取很多与请求相关的额外信息并展示在屏幕上。举个例
会详述）、请求花费的时间、传送了多少数据等信息。curl提供了-w
若因为某种原因Web 服务器不可访问，你会看到类似下面的输出
图形用户界面的网页浏览器还容易。使用telnet，则需要直接输人
如身份认证、提交数据、使用SSL 以及其他功能，使用这些功能比
故障，curl隐藏了很多HTTP 协议的细节，帮你做了很多事情，比
道的命令行工具都只使用了curl程序。相比使用 telnet 诊断服务器
可以看到curl支持各种不同的选项。实际上，很多与 Web 接口打交
起来相对比较简单。查看它的帮助手册（在命令行里输人 man curl),
子，如果想查看一个请求的HTTP状态码，只需输人：
Web 服务器时需要获取一些额外的数据，如HTTP的状态码（稍后
信息：
常简单，只要输人curl命令并等待页面加载完毕就可以了：
人了解curl更复杂的一些选项。实际上使用curl 测试 Web 服务器非
HTTP命令。
因为我们只是想测试 Web 服务器的基本功能，所以没有必要深
$ cur1 -w"%[http_code\n" http://www.example.net
默认情况下，curl 只输出你请求的页面内容，但是在诊断故障
$cur1http://www.example.net
本例中，看到的输出是Apache Web 服务器创建的默认页
The web server software is running but no content has been added, yet.
Itworks!
curl:（7) couldn't connect to host
The web server software isrunning butno contenthas been added，yet./p>
Thisis the default web page for thisserver.
$cur1http://www.example.net
Itworks!
---
## Page 146
8.2.2
举了-w参数可以串联使用的很多额外选项。下面的例子展示了如
200，这也是我们希望的结果。curl的帮助手册（输人 man curl）列
的网络诊断部分。一旦连接建立，输入下面基本的 HTTP 命令：
或者Web服务器监听的某个其他端口号：
或要查看底层的HTTP调用。无论何种情况，都是telnet大展身手
有时候你需要从某台没有安装curl的主机上测试Web服务器，抑
的数据大小和内容类型。
何使用这些选项去获取状态码、HTTP协议请求花费的时间、下载
断数据。
了解一些基本的HTTP协议，就可以从Web服务器获取大量的诊
的时候。几乎所有的Linux系统都应该安装了telnet命令，只要你
首先，运行 telnet命令，参数是要连接的主机地址和 80端口，
如果因为某个原因无法连接主机，你需要重温本章最开始介绍
尽管curl是在命令行下测试 Web 服务器的简单便捷工具，但
$cur]-w"%[http_code}%[time_total}%[size_download}\
在请求的底部会列出额外的信息。本例中，HTTP状态码是
本例中，使用GET方法（GET/）请求这个网站的默认主页，紧
$telnet www.example.net 80
200 0.004177 text/html
The web server software is running but no content has been added, yet.
This is the default web page for this server.
GET / HTTP/1.1
Escape character is‘]'.
Connected to www.example.net.
Itworks!
%{content_type}\n"http://www.example.net
host:ww.example.net
Trying10.1.2.5...
使用telnet测试Web服务器
8.2使用命令行测试Web服务器139
---
## Page 147
140
取到所有的应答信息：
●第8章网站宕机了？追踪Web服务器问题
的请求设置。
用curl命令执行 HTTP请求，curl 可以轻松应对重定向和其他棘手
远比简单的GET请求复杂，需要重新温习一下HTTP协议，或者使
看不到的数据。当然，使用telnet的劣势是，
改的日期、Web 服务器名称和版本，以及一些通常在Web 浏览器中
看到HTTP状态码（200OK）、请求的日期以及页面最后一次被修
用telnet会比使用curl获取到更多的诊断数据。这个例子里，可以
务。因此若不指定具体访问哪一台主机，可能就不会得到期望的页
因为Web 服务器经常在某一台机器上同时为多个虚拟主机提供服
名（就是url里 http://后面的字符串）。这个主机参数非常重要
HTTP/1.1，然后按回车键，紧接着输人host:和你想连接的主机
想测试页面/admin/inventory.cgi，请输人GET/admin/inventory.cgi
面输出。
跟着是所使用的HTTP协议的版本（HTTP/1.1）。举个例子，如果
host:行输人完毕，按下回车键，应该就可以从 Web 服务器获
待请求完毕，按Ctrl-］组合键退出 telnet命令。默认情况下，使
HTTP/1.1 200 0K
The web server software is running but no content has been added, yet.
Itworks!
X-Pad:avoid browser bug
Content-Length:177
Date:Thu,28Jun 2012 03:56:32GMT
Vary:Accept-Encoding
Accept-Ranges:bytes
Tag:"38111c-b1-4875dc9938880
Last-Modified:Mon,24May 201021:33:10 GMT
Server:Apache/2.2.14 (Ubuntu)
，如果你的HTTP请求
---
## Page 148
8.3.11××信息状态码
8.3
已创建完毕。
OK，表明请求执行成功。下面是你可能会遇到的一些成功状态码：
务器问题，这类响应是你最想看到的。最常见的成功状态码是200
8.3.2
协议版本。
是常见的两个响应：
版本中引人，因此禁止发送给使用HTTP/1.0版本的客户端。下面
一类状态码并重点关注几个你会碰到的常见状态码。
求执行成功，以4开头的状态码表明客户端错误。本节将会讨论每
码，每个状态码属于某一数字类别。比如以2开头的状态码表明请
回标准状态码200。200OK表明请求执行成功。有许多其他的状态
态码非常有价值。在前几个例子中，一切正常的情况下，服务器返
以1开头的状态码表明某类信息响应。这个状态码在 HTTP/1.1
诊断Web 服务器故障时，服务器针对每个请求返回的HTTP状
以2开头的状态码表明请求执行成功，如果你正在诊断Web 服
请求执行成功，
200OK
服务器将根据客户端的指示把协议切换成客户端请求中列出的
服务器收到了请求的部分数据，客户端应该继续请求。
100 Continue
201 Created
服务器成功处理了请求。
101 SwitchingProtocols
HTTP状态码
2××成功状态码
，对于那些要服务器创建对象的请求来说，资源
8.3HTTP状态码·141
---
## Page 149
14
的。客户端以后的资源请求仍然使用原始的URI。
明资源现在所处的位置，客户端之后的请求都应该访问新的URI。
到另一个URL，把你从一个域名移动到另外一个域名，甚至重定向
8.3.3
资源。
让你使用HTTPS 协议而不是HTTP协议。下面是常见的状态码：
管理员经常在以下情况下使用此类状态码：把某个URL的内容移动
始资源的子集。
第8章
服务器响应包含多个资源，然后客户端可以选择希望访问的
以3开头的状态码表明服务器发送给客户端某种重定向信息。
301 Moved Permanently
204 No Content
服务器返回的信息并非来自原始资源，而是来自第三方或者原
请求已接受，但服务器可能尚未处理。
202 Accepted
POST请求的常见响应，客户端应当采用GET的方式访问一个
303 See Other
302 Found
请求的URL已移走。Response 中应该包含一个新的URI，
300 Multiple Choices
与状态码301不同的是，
服务器已经成功处理了部分GET请求。
206Partial Content
客户端应该重置当前页面上所有的 HTML 表单。
205 Reset Content
请求执行成功，
203NonAuthoritativeInformation
3××重定向状态码
网站宕机了？追踪Web服务器问题
，但是响应没有内容实体。
，该状态码表明这里的资源移除是临时
说
---
## Page 150
个请求也不应该被重复提交。这个错误通常表明存在权限错误。
8.3.4
通过指定的代理才能访问。
码。下面是常见的错误状态码：
404，如果客户端请求了一个不存在的页面就会返回这个错误状态
的请求。
由于这样的重定向是临时的，客户端应当继续向原始URI发送之后
回资源。这个状态码告诉客户端资源未被修改。
不同的URI来获取那个资源。
送请求。
类状态码指明服务器确认客户端的请求出错了。常见的错误码是
诊断服务器故障时，很可能会遇到某些以4开头的状态码。这
类似302，客户端请求的资源现在临时从不同的URI响应请求。
404 Not Found
307 Temporary Redirect