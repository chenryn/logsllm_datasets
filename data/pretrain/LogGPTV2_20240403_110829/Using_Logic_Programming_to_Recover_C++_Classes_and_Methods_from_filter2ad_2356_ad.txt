32 12.5
406 30.6
439 31.5
655 31.6
6 10.7
166 25.3
69 16.6
55 19.4
5 17.9
21 15.6
15 11.5
29
8.6
378 19.7
670 32.3
37 20.1
17 12.8
639 23.6
329 20.5
21.8
1
1
2
12
7
38
27
57
5
4
66
63
86
0
20
10
11
0
2
1
3
27
31
1
2
37
20
220
638
295
893
378
1437
598
1266
167
256
1328
1395
2071
56
656
415
283
28
135
130
339
1920
2072
184
133
2712
1601
800
3
40
15
100
27
213
59
200
14
16
197
229
294
3
54
30
19
1
4
4
5
121
280
15
4
264
106
15
64
15
59
15
111
55
63
13
8
65
69
166
3
58
23
9
4
6
9
10
179
159
11
8
281
165
1
67
0
2
2
17
8
3
0
0
3
4
17
0
10
1
6
0
7
1
5
24
89
3
0
38
22
classes, which often do not have a natural identifier such as a virtual
function table.
Unfortunately, without class identifiers that are present in both
the ground truth and OOAnalyzer’s output, it can be difficult to
establish a mapping between the two. For example, if the ground
truth contains two classes that consist of the method sets {M1, M2}
and {M3, M4}, and OOAnalyzer reports a single class consisting of
{M1, M2, M3, M4}, how should that be judged? On the one hand,
all four methods in the executable were identified, but on the other
hand, OOAnalyzer accidentally merged two classes into one.
We propose that class membership should be evaluated by mea-
suring the edit distance that is required to transform the classes
that OOAnalyzer emits into the classes found in the ground truth.
The edit distance is the number of actions used to perform the
transformation, where the possible actions are:
(1) moving a single method to another class;
(2) adding a single method that OOAnalyzer failed to identify
to an arbitrary class;
(3) removing an extra function that OOAnalyzer mistakenly
identified as a method;
(4) arbitrarily splitting a class into two new classes; and
(5) merging two separate classes into one.
For instance, in the above example, the class recovered by OO-
Analyzer, {M1, M2, M3, M4}, must be split to yield {M1, M2} and
{M3, M4}, which yields an edit distance of one.
Edit distance can be interpreted as an upper bound on the number
of mistakes that OOAnalyzer made. For example, if OOAnalyzer
achieved an edit distance of 6 in a program with 56 methods (10.7%),
it must have recovered at least 56−6 = 50 methods (89.3%) correctly,
since every incorrect method will require at least one corresponding
edit to correct it.
Ideally, we would like to use the minimal edit distance as a metric.
However, because of the large number of classes and methods in
real-world C++ programs, we have found this to be impractical.
Instead, we use a greedy algorithm to compute a sequence of edits
that transforms the OOAnalyzer output to the ground truth.
Session 3A: Binary AnalysisCCS’18, October 15-19, 2018, Toronto, ON, Canada435Program
F
0.85
0.76
0.85
0.95
0.81
0.92
0.76
0.87
0.57
0.75
0.87
0.86
0.84
0.95
0.87
0.91
0.87
0.92
0.96
0.94
0.97
0.89
0.91
0.92
0.97
0.88
0.89
0.87
F
0.00
0.05
0.14
0.51
0.44
0.30
0.27
0.55
0.36
0.32
0.55
0.55
0.58
0.00
0.75
0.00
0.72
0.00
0.67
0.00
0.67
0.74
0.64
0.40
0.53
0.72
0.76
0.41
Recall
44/51
40/51
41/52
192/209
135/165
293/325
197/252
260/290
10/10
15/19
283/310
282/314
459/529
10/11
117/142
53/60
49/60
6/7
12/12
33/34
50/52
187/228
464/532
27/29
19/20
262/320
163/197
0.88
Constructor
Prec
44/53
40/54
41/44
192/197
135/170
293/314
197/269
260/311
10/25
15/21
283/340
282/341
459/570
10/10
117/126
53/57
49/53
6/6
12/13
33/36
50/51
187/194
464/490
27/30
19/19
262/275
163/169
0.88
F
0.85
CImg
0.85
Firefox
0.92
light-pop3-smtp
0.90
log4cpp Debug
0.90
log4cpp Release
0.78
muParser Debug
0.83
muParser Release
0.85
MySQL cfg_editor.exe
0.72
MySQL connection.dll
0.98
MySQL ha_example.dll
0.86
MySQL libmysql.dll
0.85
MySQL mysql.exe
0.83
MySQL upgrade.exe
1.00
optionparser
0.86
PicoHttpD
0.91
TinyXML Debug
0.91
TinyXML Release
1.00
x3c
0.89
Malware 0faaa3d3
0.85
Malware 29be5a33
0.99
Malware 6098cb7c
0.98
Malware 628053dc
0.60
Malware 67b9be3c
0.89
Malware cfa69fff
0.86
Malware d597bee8
0.96
Malware deb6a7a1
0.98
Malware f101c05e
Average
0.88
Table 4: The recall and precision of various method properties achieved by OOAnalyzer, without utilizing RTTI data. A recall
of X/Y indicates that OOAnalyzer detected X instances out of Y total in the ground truth. A precision of X/Y indicates that
X of the Y instances that OOAnalyzer reported were actually correct. Green indicates a recall or precision higher than 0.75,
whereas red is a value lower than 0.25.
VF Tables
Prec
13/13
18/18
5/5
18/18
18/18
12/13
12/13
69/69
10/10
9/9
75/75
75/75
150/150
6/6
46/46
24/24
24/24
1/1
4/4
13/13
43/43
100/107
123/123
5/5
4/4
130/137
93/100
0.99
Destructor
Prec
0/0
1/1
2/2
40/40
24/36
28/30
15/21
107/111
8/9
4/6
115/119
115/121
198/221
0/0
68/72