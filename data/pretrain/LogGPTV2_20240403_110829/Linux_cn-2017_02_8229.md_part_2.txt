这个 JavaScript 框架在 2011 年正式发布，是由 *Yehuda Katz* 开发的开源项目。它有一个庞大且活跃的在线社区，所以在有任何问题时，你都可以在社区中提问。该框架吸收融合了非常多的通用的 JavaScript 风格和经验，以便确保开发者能最快地做到开箱即用。
它使用了 MVVM （ 模型-视图-视图模型   （    Model–view–viewmodel    ） ） 的设计模式，这使得它与 MVC 有些不一样，因为它由一个 *连接器 （binder）* 帮助视图和数据连接器进行通信。
对于 DOM 编程接口的快速服务端渲染，它借助了 *Fastboot.js*，这能够让那些复杂 UI 的性能得到极大提高。
它的现代化路由模式和模型引擎还支持 *RESTful API*，这确保你可以使用到这种最新的技术。它支持 句柄集成模板   （    Handlebars integrated template    ） ，用来自动更新数据。
早在 2015 年间，它的风头曾一度盖过 AngularJS 和 React，被称为最好的 JavaScript 框架，对于它在 JavaScript 社区中的可用性和吸引力，这样的说服力该是足够了的。
对于不追求高灵活性和大型架构的用户，并且仅仅只是为了赶赴工期、完成任务的话，我个人非常推荐这个 JavaScript 框架。
### 4、Adonis
![Adonis](/data/attachment/album/201702/22/130602vfwfc0w4yuppup82.jpg)
如果你曾使用过 *Laravel* 和 *NodeJS*，那么你在使用这一个框架之时会觉得相当顺手，因为它是集合了这两个平台的优点而形成的一个框架，对于任何种类的现代应用来说，它都显得非常专业、圆润和精致。
它使用了 *NodeJS*，所以是一个很好的后端框架，同时还附带有一些前端特性 （与前面提到那些更多地注重前端的框架不同），所以想要进入后端开发的新手开发者会发觉这个框架相当迷人。
相比于 *NoSQL*，很多的开发者都比较喜欢使用 *SQL* 数据库 （因为他们需要增强和数据以及其它特性的交互性），这一现象在这个框架中得到了很好的体现，这使得它更接近标准，开发者也更容易使用。
如果你混迹于各类 PHP 社区，那你一定很熟悉  服务提供者   （    Service Providers    ） ，也由于 Adonis 其中包含相应的 PHP 风格，所以在使用它的时候，你会觉得似曾相识。
在它所有的特性中，最好的便是那个极为强大的路由引擎，支持使用函数来组织和管理应用的所有状态、支持错误处理机制、支持通过 SQL ORM 来进行数据库查询、支持生成器、支持 箭头函数   （    arrow functions    ） 、支持代理等等。
如果喜欢使用无状态 REST API 来构建服务器端应用，我比较推荐它，你会爱上这个框架的。
### 5、Vue.js
![Vue.js](/data/attachment/album/201702/22/130602fv4skjv2vnjn8v82.png)
这是一个开源的 JavaScript 框架，发布于 2014 年，它有个极为简单的 API，用来为 现代 Web 界面   （    Modern Web Interface    ） 开发 交互式组件   （    Reactive components    ） 。其设计着重于简单易用。与 Ember 相似，它使用的是 MVVM （ 模型-视图-视图模型   （    Model–view–viewmodel    ） ） 设计范例，这样简化了设计。
这个框架最有吸引力的一点是，你可以根据自身需求来选择使用的模块。比如，你需要编写简单的 HTML 代码，抓取 JSON，然后创建一个 Vue 实例来完成可以复用的小特效。
与之前的那些 JavaScript 框架相似，它使用双路数据绑定来更新模型和视图，同时也使用连接器来完成视图和数据连接器的通信。这是一个还未完全成熟的框架，因为它全部的关注点都在视图层，所以你需要自己处理其它组件。
如果你熟悉 *AngularJS*，那你会感觉很顺手，因为它大量嵌入了 *AngularJS* 的架构，如果你懂得 JavaScript 的基础用法，那你的许多项目都可以轻易地迁移到该框架之下。
假如你只想把任务完成，或者想提升你自身的 JavaScript 编程经验，又或者你需要学习不同的 JavAScript 框架的本质，我极力推荐这个。
### 6、Backbone.js
![Backbone.JS](/data/attachment/album/201702/22/130602xj0mu8kjzljektn7.png)
这个框架可以很容易的集成到任何第三方的模板引擎中，默认使用的是 *Underscore* 模板引擎，而且该框架仅有一个依赖项 （**JQuery**），因此它以轻量而闻名。它支持带有 **RESTful JSON** 接口的 MVC （ 模型-视图-控制   （    Model–view–controller    ） ） （可以自动更新前端和后端） 设计范例。
假如你曾经使用过著名的社交新闻网络服务 **reddit**，那么你肯定听说过它在几个单页面应用中使用了 **Backbone.js**。**Backbone.js** 的原作者为之建立了与 *CoffeScript* 旗鼓相当的 *Underscore* 模板引擎，所以你可以放心，开发者知道该做什么。
该框架在一个软件包中提供了 键值对   （    key-value    ）  模型、视图以及几个打包的模块，所以你不需要额外下载其他的外部包，这样可以节省不少时间。框架的源码可以在 GitHub 进行查看，你可以根据需求进行深度定制。
如果你在寻找一个入门级框架来快速构建一个单页面应用，那么这个框架非常适合你。
### 总而言之
至此，我已经在本文着重说明了 6 个值得好好学习的 JavaScript 框架，希望你读完本文后能够决定使用哪个框架来完成自己的任务。
如果说对于选择框架，你还是不知所措，请记住，这个世界是实践出真知而非教条主义的。最好就是从列表中挑选一个来使用，看看最后是否满足你的需求和兴趣，如果还是不行，接着试试另一个。你也尽管放心好了，列表中的框架肯定是足够了的。
---
译者简介：
[GHLandy](http://GHLandy.com) —— 生活中所有欢乐与苦闷都应藏在心中，有些事儿注定无人知晓，自己也无从说起。
---
via: 
作者：[Danyal Zia](http://www.discoversdk.com/blog/6-best-javascript-frameworks-to-learn-in-2016) 译者：[GHLandy](https://github.com/GHLandy) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出