09:59"
10:00"
to"
10:59"
11:00"
to"
11:59"
12:00"
to"
12:59"
13:00"
to"
13:59"
14:00"
to"
14:59"
15:00"
to"
15:59"
16:00"
to"
16:59"
17:00"
to"
17:59"
18:00"
to"
18:59"
19:00"
to"
19:59"
20:00"
to"
20:59"
Apple"
71%"
Samsung"
14%"
Motorola"
5%"
HTC"
3%"
LG"
2%"
RIM"
2%"
Sony"
1%"
Nokia"
1%"
Other"
1%"
@glennzw // DefCon 22 August 2014 
Table 4 - Conference attendee devices 
Conference 
Year 
Unique Devices 
± Attendees 
Black Hat Vegas 
2012 
4,778 
6500 
ITWeb 
1,106 
400 
44Con 
969 
350 
Black Hat EU 
2013 
681 
607 
Securi-Tay 
375 
100 
BSides London 
208 
474 
Hackito-E-Sum 
309 
400 
CERT Poland 
598 
500 
Zero Nights 
507 
600 
Black Hat Brazil 
719 
500 
Figure 7 depicts devices observed at the Black Hat Brazil 
conference that were also observed at other conferences. 
Figure 7 - Repeat visitors to Black Hat Brazil 2013 
Figure 8 illustrates client device previous network SSIDs geo-
located from the Black Hat Brazil 2013 security conference. 
Figure 8 - Visitors to Black Hat Brazil 2013 
6.3 Link Analysis 
The Maltego platform allows for the easy creation of arbitrary 
data querying constructs known as transforms, which are run 
against entities. A sample of transforms from the Wi-Fi suite is 
presented in Table 5.  
Table 5 - Wi-Fi transforms 
Input Entity 
Transform 
Output Entities 
Base of Operations 
fetchDrones 
Drone 
Drone 
fetchLocations 
Location 
Location 
fetchClients 
Client device 
Client 
fetchSSIDs 
SSID 
Client 
fetchObservations 
Observation 
SSID 
fetchSSIDLocation 
Address 
SSID 
fetchClients 
Client 
Address 
fetchNearbySSIDs 
SSID 
Client 
fetchDomains 
Domain 
Domain 
fetchCookies 
Cookie 
Domain 
fetchFacebook 
Facebook 
Facebook 
fetchFriends 
Facebook 
Furthermore, filtering can be performed by drone, location, or 
observation date/time. For example, it is possible to query all 
devices observed in Finsbury Park on the 11 March 2014 between 
1pm and 1:30pm. 
6.3.1 Shared Location 
It is possible to query the database for devices that have some 
value in common. For example, searching for all mobile phones 
that are looking for a common SSID, but ignoring generic results 
(such as “Starbucks”). This can quickly disclose relationships 
such as work colleagues (devices looking for a SSID at a 
determined business address) or family members (devices looking 
for an SSD at a known residence). Figure 9 illustrates four devices 
searching for the same network RBS-1-1111, which was geo-
located to a Royal Bank of Scotland Branch in Liverpool Street. 
This observation was made on a train into London. 
Figure 9 - RBS devices 
6.3.2 Known Prior Location 
It is possible to determine whether any devices are nearby have 
visited a predetermined location either by having previously 
collected data at the prior location, or by having information about 
the prior location that can be queried. For the later example it is 
@glennzw // DefCon 22 August 2014 
possible to search for all known AP SSIDs from an address, and 
query the database to see if any devices within our proximity have 
searched for any of those SSIDs. 
This is illustrated in Figure 10 in which we query all AP SSIDs 
within a 200m radius of the SensePost office (as determined by a 
photograph on the SensePost website with EXIF data). Each 
returned SSID is then queried to see if any observed devices have 
ever searched for one of those SSIDs. In this real world (but 
redacted) example four SensePost devices were discovered at 
Black Hat 2013. Each of those discovered devices could be 
queried further to discover personal information about SensePost 
employees. 
Figure 10 - Discovering SensePost devices 
6.3.3 Multi-hop Analysis 
Figure 11 depicts the end of a several steps of investigation. An 
Apple device of interest was noted to be at three locations: 
Starbucks, Hyde Park, and Heathrow airport. The analyst then 
queried the SSIDs of networks the device was looking for which 
revealed numerous results; each SSID was then queried to see if 
any other devices had been searching for any of the same 
networks, which revealed the Blackberry device which was also 
searching for the AGMC_GUEST network. This implies that both 
those devices have visited the same location at some point in the 
past (not necessarily simultaneously). This SSID is geo-located to 
Dubai, and an address and street view photograph is retrieved.  
The same process is conducted with the Blackberry device, which 
reveals a third link: an HTC device searching for the common 
Verizon SSID. This is geo-located to San Francisco. At this point 
active traffic interception was conducted against all three devices, 
from which Facebook profiles were acquired for two, revealing 
common friends. This result reinforces the original hypothesis that 
the owners of the HTC and Blackberry know each other. 
Figure 11 - Multi-hop analysis 
6.4 Other Scenarios 
The examples in the previous section depict common scenarios 
that have been encountered. Furthermore, several scenarios are 
presented below. 
6.4.1 Finding the Spy 
Assume that drones are running at numerous locations – from 
hotels, to airports, to rail stations. Partial intelligence is received 
that a person of interested will arrive during a certain week, and 
check into one of three hotels, and depart via one of two train 
stations a week later. It would be possible to look for overlap of 
one (or a few) devices from the locations and temporal 
information to isolate the target. 
6.4.2 Discovering a Celebrity 
If we know that a celebrity’s schedule we can attempt to be within 
proximity of that person at numerous events, and observe the 
overlap of devices observed at multiple events. This process 
would be repeated until only one device was observed at all 
events that the target celebrity attended. 
6.4.3 Understanding Customers 
Customer tracking was discussed in Section 4.1, and is currently 
an area of much debate regarding privacy and invasion. It would 
be of great interest to a retail store to have drones deployed at 
numerous stores to track how long customers spend in stores, how 
they migrate between stores, and the effects of promotions or 
other external factors affect numbers. 
6.4.4 Catching Criminals 
Suppose an entire city is covered with drones. If a crime is 
committed at a location historical, records could be investigated to 
determine devices present near the scene of the crime. 
Alternatively, suppose a riot is taking place in a city. Aerial 
drones could be flown overhead to collect device signatures from 
the rioters below, and used for future prosecution, or to discover 
the identities of the persons on the ground. 
7. Opting Out / Defences 
If a consumer does not want to be tracked based on the 
discussions in this paper they should take care to be aware of their 
own footprint. Take note of every electronic device carried on 
@glennzw // DefCon 22 August 2014 
your person, and determined what wireless technologies are in 
use, and how unique the signals emitted are. The Snoopy 
framework is a useful tool for assessing one’s own footprint, 
before those for whom you would not want to know it capture it. 
8. FUTURE WORK 
Additional research is planned for fixed wing aerial units due to 
considerably longer flight time, as well as optimizations and 
additional interfaces to the framework as a whole. As new 
wireless technologies are released, additional plugins will be 
added to the framework. 
9. CONCLUSIONS 
In this paper the unique signatures that mobile devices emit was 
introduced. From this initial observation a hypothesis was 
constructed with the intention of tracking people based on devices 
they carry, as well discovering personal information about them. 
Numerous wireless technologies were discussed, identifying their 
range and possible fingerprint. The Snoopy framework was then 
introduced as a distributed, tracking, profiling, data interception, 
and analysis tool. The framework is technology agnostic and can 
be used to track any signature for which a suitable Python plugin 
can be written. Result data was discussed from field experiments 
with the framework, and additional hypothetical scenarios were 
discussed. Finally, advise was given on how to be aware of one’s 
own footprint, as well as a mention for future work. 
10. ACKNOWLEDGMENTS 
Thank you to SensePost for providing the time and resources to 
conduct this research, and to you the reader for your interest in 
this topic. Additionally, thank you to the team who run the 
WIGLE project for their insight and assistance. 
11. REFERENCES 
[1] Bock, J., & Lynn, M. (2007). In Hacking Exposed Wireless. 
McGraw-Hill, Inc. 
[2] Barbera, M. V., Epasto, A., Mei, A., Perta, V. C., & Stefa, J. 
(2013, October). Signals from the crowd: uncovering social 
relationships through smartphone probes. In Proceedings of 
the 2013 conference on Internet measurement conference 
(pp. 265-276). ACM. 
[3] Cheng, N., Mohapatra, P., Cunche, M., Kaafar, M. A., 
Boreli, R., & Krishnamurthy, S. (2012, October). Inferring 
user relationship from hidden information in wlans. In 
MILITARY COMMUNICATIONS CONFERENCE, 2012-
MILCOM 2012 (pp. 1-6). IEEE. 
[4] Cunche, M., Kaafar, M. A., Chen, J., Boreli, R., & Mahanti, 
A. (2012, October). Why are they hiding? Study of an 
anonymous file sharing system. In Satellite 
Telecommunications (ESTEL), 2012 IEEE First AESS 
European Conference on (pp. 1-6). IEEE. 
[5] Cunche, M., Kaafar, M. A., & Boreli, R. (2012, June). I 
know who you will meet this evening! linking wireless 
devices using wi-fi probe requests. In World of Wireless, 
Mobile and Multimedia Networks (WoWMoM), 2012 IEEE 
International Symposium on a (pp. 1-9). IEEE. 
[6] Cunche, M. (2013). I know your MAC Address: Targeted 
tracking of individual using Wi-Fi. Journal of Computer 
Virology and Hacking Techniques, 1-9. 
[7] Cunche, M., Kaafar, M. A., & Boreli, R. (2013). Linking 
wireless devices using information contained in Wi-Fi probe 
requests. Pervasive and Mobile Computing. 
[8] Musa, A. B. M., & Eriksson, J. (2012, November). Tracking 
unmodified smartphones using wi-fi monitors. In 
Proceedings of the 10th ACM Conference on Embedded 
Network Sensor Systems (pp. 281-294). ACM. 
[9] O Connor, B. (2013). CreepyDOL: Cheap, Distributed 
Stalking. In BlackHat 2013. 
[10] Bankston, K & Soltani, S. (2014). Tiny Constables and the 
Cost of Surveillance. In The Yale Law Journal Online. 
[11] Soltani, S. (2014). Mobile Device Tracking. In FTC Spring 
Privacy Series. 
[12] Netline Communications Technologies. Detection Products. 
http://www.netlinetech.com/products/detection.html 
[13] Verint Systems. Communications Interception. 
http://www.verint.com/solutions/communications-cyber-
intelligence/solutions/communications-interception/index 
[14] Cuthbert, D & Wilkinson, G. (2012) Snoopy: Distributed 
tracking and profiling  framework. In 44Con 2012 
[15] PebbleBee: Versatile iOS/Android Bluetooth Device 
http://www.pebblebee.com/. 
[16] Apple Inc. (2013). Submit your iOS 7 apps today. 
https://developer.apple.com/ios7/ 
[17] WiGLE: Wireless Geographic Logging Engine. 
http://wigle.net/.  
[18] Lee, E. (2012). NFC hacking: The easy way. In Defcon 20 
[19] Lifchitz, R. (2012). Hacking the NFC credit cards for fun and 
debit. Hackito Ergo-Paris, France, poslední aktualizace, 
13(4). 
[20] Federrath, H. (1999). Protection in mobile communications. 
In: Günter Müller, Kai Rannenberg (Ed.): Multilateral 
Security in Communications, Addison-Wesley-Longman 
1999, 349-364 
[21] Borgaonkar, R., Golde, N., & Redon, K. (2011). Femtocells: 
a Poisonous Needle in the Operator's Hay Stack. Black Hat 
Las Vegas. 
[22] Cavallini, A. (2013). iBeacons Bible. 
http://meetingofideas.files.wordpress.com/2013/12/ibeacons-
bible-1-0.pdf 
[23]  Digi XBee Radios: http://www.digi.com/xbee/ 
[24] Hancke, G. (2008, July). Eavesdropping attacks on high-
frequency RFID tokens. In 4th Workshop on RFID Security 
(RFIDSec) (pp. 100-113). 
[25]  Dynastream Innovations. (2013). ANT Message Protocol 
and Usage 
[26] Ryan, M. (2013). Bluetooth: with low energy comes low 
security. In 7th USENIX Workshop on Offensive 
Technologies. 
[27]  Miller, R. (2013). Wifi-based trilateration on Android. 
http://rvmiller.com/2013/05/part-1-wifi-based-trilateration-
on-android/