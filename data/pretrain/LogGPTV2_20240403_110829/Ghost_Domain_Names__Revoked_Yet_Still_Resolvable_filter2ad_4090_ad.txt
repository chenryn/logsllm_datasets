### Authoritative Server Migration and DNS Cache Update Policy

The migration of an authoritative server can be expedited by allowing the overwriting of cached NS (Name Server) records. However, the current DNS protocol, coupled with the strict bailiwick rule, means that resolvers will not recognize the migration until the cached delegation data expires. This is further complicated by DNS administrators often setting large TTL (Time to Live) values for delegation data. Our analysis of the top one million Internet domains (ranked by Alexa.com) revealed that the majority of popular domains have TTL values of either one day (12.04%) or two days (78.41%). This suggests that, under the strict bailiwick rule, legitimate authority changes can take several days to complete.

### Approaches to Addressing the Ghost Domain Problem

#### Second Approach: Trust Levels of Self-Issued Delegation Data
This approach can mitigate the ghost domain problem by ensuring that all self-issued delegation data has the same trust level [13]. It also remains resilient to the authority mismatch problem, as the self-issued delegation data from the child zone is considered more trustworthy than that from the parent. Additionally, this method can reduce the risk of cache poisoning attacks [31]. However, it still faces challenges related to authority migration.

#### Third Approach: Limiting TTL Updates
This approach does not penalize legitimate changes in authoritative servers and remains resilient to authority mismatches. It is also the simplest to implement. However, we view it as a temporary solution because it does not address the fundamental issue of loosely defined update policies.

### Recommended Solution

Although the second approach offers practical advantages, we recommend the first approach, which involves a strict bailiwick rule that rejects self-issued delegation data. This is semantically correct and aligns with the need for the DNS standard to clarify and formally define the cache update policy. We hope our work will prompt efforts within the DNS standards community to achieve this.

### Current Defense Implementations

Our analysis in Section 3 showed that while popular DNS implementations like BIND and many public DNS servers are vulnerable, three specific implementations—MaraDNS (version Deadwood-3.0.03), Microsoft DNS (version Windows Server 2008 R2), and Unbound (version 1.4.11)—are immune to the ghost domain attack. The immunity of the latest version of Microsoft DNS is attributed to a new feature called DNS cache locking [12], but its proprietary nature limits our understanding of the specifics. Reviewing MaraDNS and Unbound, we found that each implemented one of the proposed solutions:
- **MaraDNS** follows the first solution by only accepting a zone's delegation data from its parent zone.
- **Unbound** adopts the third solution, allowing the overwriting of delegated data but maintaining the old TTL value in the cache.

### Delegation Semantics in DNSSEC

We also examined the implications of the ghost domain attack on DNSSEC. A fully deployed DNSSEC system is immune to the ghost domain problem, not because of its initial intention to protect DNS data integrity with cryptographic signatures, but due to its strictly defined delegation behavior. Specifically, DNSSEC introduces the DS (Delegation Signer) record type, which forms a chain of trust between parent and child zones. The DNSSEC standard explicitly states that DS records can only be obtained from the parent zone, preventing a ghost domain attacker from renewing the DS record. Without a valid DS record, the trust chain is broken, and security-aware resolvers will treat the ghost domain as non-authentic.

In partially deployed DNSSEC environments, however, a security-aware resolver might still resolve a ghost domain as authentic. This is due to the "isolated DNSSEC islands" issue [26], where partial deployment raises trust anchor management concerns. Resolvers need third-party trust anchor providers, such as DLV (DNSSEC Look-aside Validation) providers [33] [34] or public trust anchor lists [24], to validate DNS data from isolated DNSSEC-enabled zones. Attackers can register DNSKEY records of the ghost domain with these providers, allowing the domain to be validated even if the DS record is deleted from the parent zone. To prevent this, DLV providers and public trust anchor lists must synchronize their databases with DNS registries in a timely manner. In other words, a malicious domain must be revoked from both the DNS registry and third-party trust anchor providers simultaneously.

### Related Work

#### Study of Malicious Domain Names
Our work is motivated by the need to understand the lifetime of malicious domains and the effects of domain takedown. Previous studies [22] [23] by Moore et al. showed that most phishing domains remain active for several tens of hours before being taken down. The ghost domain problem complicates the predictability of takedown effects.

#### Malicious Domain Identification
Recent research has proposed various methods to distinguish malicious domain names from benign ones, including analyzing RR (Resource Record) usage [15], leveraging registration information [14], passive access logging [29] [1] [6], and lexical construction [19] [35]. From an intrusion detection perspective, the ghost domain exploitation is detectable due to unusual DNS record usage.

#### Cache Poisoning Attacks and Countermeasures
The ghost domain vulnerability stems from the loosely defined sanity check of DNS caches, a weakness exploited by DNS cache poisoning attacks. Steve Bellovin [5] highlighted this in 1990, leading to the adoption of the credibility and bailiwick rules [32]. However, these rules are still insecure and have been exploited by Kaminsky-class cache poisoning attacks [18]. Post-disclosure, several approaches were proposed to enhance DNS forgery resistance [10] [9] [16] [28], but few focused on the DNS cache update policy. Son et al. [31] provided a formal study of the bailiwick and credibility rules, which helped clarify their details.

#### DNS Cache Inconsistency
The ghost domain problem is a form of DNS cache inconsistency. DNS uses TTL to limit the lifetime of cached copies, but this weak consistency mechanism fails to propagate data changes from authoritative servers to resolvers in a timely manner. Previous studies proposed mechanisms like DNScup [8] and Zone State Revocation [25] to address this, but such changes require careful consideration given DNS's critical role.

#### DNS Misconfiguration
Kalafut et al. [17] described orphan DNS servers, which have address records in DNS despite their parent domains not existing. Orphan DNS servers and ghost domains are superficially similar but fundamentally different. Orphan DNS servers result from typographical errors and misconfigurations, while ghost domains arise from ambiguously defined DNS cache update policies.

### Conclusion

In this paper, we present a vulnerability in the DNS cache update policy that hinders effective domain name revocation. Attackers can make a malicious domain continuously resolvable even after its deletion from the domain registry and the expiration of its TTL. Although we have not found evidence of this vulnerability being exploited, our tests show that most public DNS servers and implementations are vulnerable. Large-scale exploitation is feasible, potentially allowing botnets to use identified and removed malicious domains. We recommend a strict bailiwick rule to fix this vulnerability and highlight the need for the DNS community to adopt and implement such measures.

### Acknowledgments

We thank Jason Gustafson for valuable discussions and proofreading, Roberto Perdisci and Zhankao Wen for experimental assistance, and anonymous reviewers for their feedback. This work was supported by the National Basic Research Program of China (973 Project) grant 2009CB320505, the USA National Science Foundation (NSF) CISE grant 1127195, and a gift from Cisco Systems. Any opinions, findings, and conclusions expressed in this material are those of the authors and do not necessarily reflect the views of the funding agencies.

### References

[References listed here as per the original text]

This revised version aims to provide a clearer, more coherent, and professional presentation of the content.