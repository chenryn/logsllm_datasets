the update interval is reduced dynamically to a value predeﬁned by
the network in order to provide more relevant ads quicker to the
user if needed.
Reporting support
Statistics for the views are securely stored locally in an encrypted
database. The reports are batched and uploaded to the server dur-
10Android’s PassiveLocationProvider reports location changes ob-
tained from A-GPS or network positioning systems only if another
app is actively doing so.
ing cache updates rather than reporting them immediately. To avoid
fraudulent actions, on receiving a message from a new publisher
(based on their app package and publisher ID), the mobile agent
validates the publisher’s authenticity by contacting the ad network.
The database is secured with tokens obtained from the ad network
when starting the cache which are refreshed on each cache update.
We use a dynamic token instead of a static token to avoid reverse
engineering attacks. The downside of this is that if the client ser-
vice is killed, the token, that had been stored in memory, is lost and
the database has to be thrown away. This loss is not ideal, however
it can be considered acceptable when compared to allowing an at-
tacker (once the password is discovered) to delete and/or generate
fake reports. As a consequence, user clicks are reported imme-
diately to the server as the network interface will already be in a
connected power mode when downloading the advertised content.
This reduces the possibility of losing a click report if the service is
stopped (unless network connectivity is not available at this time, in
which case it will be cached), while also allowing AdCache to syn-
chronize the reports and update the cache. This decision is based
on the fact that click actions for AdMob (using the rule reported in
Table 3) are not popular across many mobile users. Only 4.06%,
4.34% and 5.19% of the users for Android, iPhone and iPad re-
spectively had performed at least one click on an AdMob ad. This
metric should not be confused with the click-through rate, gener-
ally used to measure the success of an online advertising campaign
for a particular website, and requires further investigation that we
would like to explore in the future. The current consumption of
performing such action on the device under study is 350 mA on 3G
and 200 mA on Wi-Fi approximately.
Smart network usage
AdCache monitors the network conditions of the mobile interface
(i.e., signal strength and type of network). This is done in order
to temporarily defer the update if the network conditions are not
ideal. In fact, the beneﬁts of using AdCache on Wi-Fi are minor
when compared to the 3G case.
When the mobile device is connected by Wi-Fi, AdCache oper-
ates like an ordinary ad network, by fetching one ad at a time as
the power and network overhead is minimum. This is done so Ad-
Cache can deliver the most relevant ads to the user without any sig-
niﬁcant power cost. Nevertheless, under these network conditions,
the cache attempts to prefetch fresher ads or update the metadata of
existing ads which will be served once Wi-Fi connectivity is lost.
Privacy
The privacy and security issues highlighted in studies such as [1], [13]
and [6] were considered. AdRisk [3] found that sensitive informa-
tion accessed by some SDKs included call logs, user phone num-
bers and lists of all the apps a user has installed. A side effect of
the AdCache design is that the permissions required for advertising
are decoupled from the ones required for the intended purpose of
the app. In fact, local user proﬁling helps to preserve user privacy
as AdRisk [3] proposes.
5.2 AdCache evaluation
To evaluate the power cost of using AdCache, we used the same
refresh intervals from Section 4.2.1 for three different type of ad:
static banner, animated banner and text ads. A fourth case in which
AdCache serves a randomly chosen type was also evaluated to em-
ulate the behavior of existing ad networks. The animated ad type
was purposely built to be particularly costly in terms of CPU usage,
thus we could establish an upper bound on cost of supporting such
a feature. We collected two sets of results, one where the mobile
353Animated
Random
Text
Static
20 40 60 80
20 40 60 80
20 40 60 80
20 40 60 80
Refresh Interval (s)
(a) Mobile Network (3G)
Animated
Random
Text
Static
F
r
e
s
h
S
t
a
r
t
C
a
c
h
e
d
A
d
s
F
r
e
s
h
S
t
a
r
t
C
a
c
h
e
d
A
d
s
146
143
140
137
134
131
122
119
116
113
)
A
m
(
t
n
e
r
r
u
C
)
A
m
(
t
n
e
r
r
u
C
131
128
125
122
128
125
122
119
20 40 60 80
20 40 60 80
20 40 60 80
20 40 60 80
Refresh Interval (s)
(b) Wi-Fi
Figure 16: Current drain of AdCache with different refresh
intervals for animated and static banner ads, text ads and ran-
dom ads under different connectivity conditions: Mobile Net-
work (3G) (a) and Wi-Fi (b).
client has an empty cache (worst case), and the second with the
cache already running and with valid ads already pre-fetched (best
case). On a fresh start, 15 ads (10 image-based and 5 text-based
ads) were downloaded to the device from a mock server hosted in
the US. The time required to download all the ads on a fresh start
varies from 10 to 12 seconds on 3G, this includes the channel allo-
cation time.
As we show in Figure 16(a), AdCache has a signiﬁcantly lower
average current consumption when compared to existing ad net-
works (Figure 13). The power overhead compared to the baseline
values for minimum brightness shown in Table 6 is small as a result
of batching and pre-fetching. In Table 7, we compare the current
drain of AdCache with the existing ad networks under study for
the minimum and maximum refresh interval on 3G. For a 20 sec-
ond refresh interval, the power consumption is halved when com-
pared to existing ad networks over a 3 minute period. Interestingly,
the effect of the refresh interval is not as notorious as in existing
ad networks (Figure 13) where it reduces the number of network
Ad Network
AdMob
Push
Pull
InMobi
Millennial Media
AdCache
Fresh Start
Animated
Random
Text
Static
Refresh Interval (s)
20
80
242.7 (12.2)
233.4 (10.6)
223.7 (6.8)
225.5 (3.7)
140.1 (0.6)
139.5 (1.4)
145.1 (0.6)
136.1 (1.6)
204.6 (5.5)
198.8 (12.2)
178.6 (12.0)
156.4 (6.1)
142.8 (2.1)
137.8 (1.7)
136.5 (1.7)
133.6 (1.8)
Table 7: Comparison of the average current consumption
(standard deviation in brackets) for the different ad-networks
with the maximum and minimum refresh intervals on 3G and
AdCache if the cache is empty (worst case scenario).
transactions. For a 1,500 mAh battery, this implies that if the app
was running continuously, the battery life could be extended from 6
hours to more than 12 hours. On the other hand, if the mobile agent
has prefetched ads already, the ad is displayed almost instantly at a
minimal power cost as I/O and CPU cost is negligible compared to
wireless interfaces. Likewise, the cost over Wi-Fi (Figure 16(b)) is
also slightly improved over existing ad networks. The small vari-
ability below 10 mA on the current cost for the Wi-Fi measure-
ments is caused by background trafﬁc. In a real deployment sce-
nario, the current consumption can vary between the upper and the
lower bounds depending on the advertising campaigns, user mobil-
ity and the expiration time of the ads.
Data plans can have relatively low data allowances, thus Ad-
Cache is also important in monetary terms for the end user. Ad-
Cache does not repeatedly download the same objects as was found
with current ad networks, and also batches activity reports. In Sec-
tion 3.5.2, we saw that 1% of the user’s total daily trafﬁc is wasted
as a consequence of the repeated downloads of objects. Further-
more, mobile operators can also beneﬁt from AdCache as the client
communicates with the ad network less frequently, thus the amount
of signalling trafﬁc and the implications on the scarce radio spec-
trum in the mobile network are likely to be reduced signiﬁcantly as
a consequence of minimising unnecessary HTTP requests.
6. RELATED WORK
The ad ecosystem has been subject to several research studies
focusing primarily on privacy issues. MobiAd [5] and PrivAd [6]
suggest local proﬁling and ad serving in order to protect the user
privacy, using a third party as an anonymization stage.
In these
solutions, a proﬁling agent receives a large selection of ads via a
third party proxy, displaying those which match the user’s inter-
ests. Clicks are also sent using third parties in order to keep the
anonymity of the user intact. However these solutions perform a
number of CPU-intensive cryptographic operations and are likely
to increase communication overhead. In [1], the authors perform
a large scale crawl of the Android app market based on the meta-
data about required permissions. They describe the mobile ecosys-
tem based on free mobile apps and the imbalance of privacy in the
ecosystem, as many apps are free and depend on targeted ads to
generate revenue [14]. In AdRisk [3] the authors found that more
than half the apps on the Android platform include aggressive ad
libraries that download and run code from remote servers, while
accessing personal information such as call logs and installed app
lists.
While a lot of effort has been taken on privacy, only a small set of
work focuses on performance issues and energy. In [4] the authors
analyzed the mobile trafﬁc patterns of 43 mobile users across two
354different mobile platforms using packet sniffers. They ﬁnd daily
trafﬁc generation patterns of users and highlight the inefﬁciencies
caused by the generally small transfer size of packets. Both [1]
and [13] suggest the need to decouple the ﬂow of information be-
tween publishers, users and ad networks to better optimize energy
consumption. Eprof [2] is the ﬁrst energy proﬁler for smartphone
apps. It found that as much as 75% of the energy consumed by free
apps is spent on mobile advertising.
The characteristics of the current mobile stacks and the tied re-
lationship with energy management have been extensively studied
in the recent literature. Studies cover topics ranging from the low-
est level of the 3G network stack with the radio resource allocation
management [10] to the highest level of the stack with the impact
of Javascript and HTML code in web pages [15] on mobile de-
vices. Other pieces of work tried to analyze the impact of middle
boxes [16], along with other contributions such as [17] and [18].
Caching has been a popular solution for constrained systems
and networks, specially those with poor connectivity conditions.
Caching has been proposed already as an efﬁcient way of saving
energy on mobile networks [12]. In [19], the authors aim to reduce
the bandwidth cost of mobile apps by proposing an HTTP proxy-
based caching mechanism. They also highlight the potential inefﬁ-
ciencies that can be found in terms of energy. In our work, we prove
the efﬁciency of an independent caching system using a variety of
energy measurements on 3G and Wi-Fi. AdCache also provides the
ability to separate permissions between advertising and app func-
tionality, hence enabling AdCache to be a privacy-preserving pro-
ﬁler and advertising system.
The works described above are usually based on active experi-
ments performed on a set of smartphones. To the best of our knowl-
edge, this paper presents the ﬁrst in-depth analysis of the ad net-
work and mediation services ecosystem conducted on trafﬁc from
a real network. We did not limit our analysis to a single device
type or ad agency, but instead we consistently compared Android,
iPhone and iPad devices. We found several inefﬁciencies consid-
ering the wastage of both energy and bandwidth, and we designed
AdCache to limit them.
7. CONCLUSION
In this paper, we undertook the ﬁrst in-depth analysis of a large
mobile ad trafﬁc data set. Our ﬁndings conﬁrm on a large scale
that: i) ad networks impact a large proportion of users, especially
on Android, but also on iPhone and iPad; ii) the ad ecosystem for
mobile apps is mainly dominated by Google services (e.g. AdMob,
AdWhirl and Google Analytics); iii) ad trafﬁc can be a signiﬁcant
fraction of the total trafﬁc of the users; iv) mobile ad trafﬁc is re-
sponsible for important energy and network overhead by forcing
ofﬂine apps to become online apps; and v) many of these requests
are redundant due to the lack of caching capabilities in the SDKs.
By taking a closer look at the popular AdMob service, we identify
that the typical session of such trafﬁc is quite short and very similar
to the demotion timeouts used by the 3GPP network technology.
We identify a clear incompatibility of the current ad distribution
mechanisms with the quasi-static nature of ad content. During the
analysis of the data set, we have been surprised to see the impact of
the user proﬁling trafﬁc. We noticed a signiﬁcant number of trans-
missions to analytic services with similar energy and bandwidth
usage issues as seen in ad networks.
We demonstrate the advantages of a caching approach through
the implementation and evaluation of AdCache, a ﬁrst step into re-
ducing the impact of ad trafﬁc on battery life and controlling the
trafﬁc generated by ad networks. We demonstrate AdCache’s via-
bility in terms of energy savings to tackle the identiﬁed issues re-
lated to ads trafﬁc. Our future objectives go along two points, ﬁrst
of which, we are planning to characterize the mobile ad ecosystem
in greater detail, specially from an economics perspective, taking
advantage of the potential of the rule set. Second, we would like
to continue researching an energy and spectrum efﬁcient ad de-
livery mechanism by introducing more embedded logic, enabling
more ofﬂine capabilities such as user proﬁling, analytics support
and greater ﬁne-grained targeted advertising.
Acknowledgements
Narseo Vallina-Rodriguez is partially funded by a Qualcomm Inno-
vation Fellowship and Alessandro Finamore by the EU-IP project
mPlane funded by the European Commission under the grant n-
318627. The authors would also like to thank the anonymous re-
viewers and our shepherd Chen-Nee Chuah (UC Davids) for con-
structive feedback on preparation of the ﬁnal version of this pa-
per. We also wish to thank Steve Uhlig (Queen Mary, University of
London), Vijay Erramilli (Telefonica Research), Charalampos Rot-
sos, Steve Hand, Ilias Leontiadis, Christos Efstratiou, and Daniele
Quercia (University of Cambridge) for insightful comments and
feedback.
8. REFERENCES
[1] Ilias Leontiadis, Christos Efstratiou, Marco Picone, and
Cecilia Mascolo. Don’t kill my ads!: balancing privacy in an
ad-supported mobile application market. In Proceedings of
the Twelfth Workshop on Mobile Computing Systems &#38;
Applications, HotMobile ’12, pages 2:1–2:6, New York, NY,
USA, 2012. ACM.
[2] Abhinav Pathak, Y. Charlie Hu, Ming Zhang, Paramvir Bahl,
and Yi-Min Wang. Fine-grained power modeling for
smartphones using system call tracing. In Proceedings of the
sixth conference on Computer systems, EuroSys ’11, pages
153–168, New York, NY, USA, 2011. ACM.
[3] Michael C. Grace, Wu Zhou, Xuxian Jiang, and
Ahmad-Reza Sadeghi. Unsafe exposure analysis of mobile
in-app advertisements. In Proceedings of the ﬁfth ACM
conference on Security and Privacy in Wireless and Mobile
Networks, WISEC ’12, pages 101–112, New York, NY,
USA, 2012. ACM.
[4] Hossein Falaki, Dimitrios Lymberopoulos, Ratul Mahajan,
Srikanth Kandula, and Deborah Estrin. A ﬁrst look at trafﬁc
on smartphones. In Proceedings of the 10th annual
conference on Internet measurement, IMC ’10, pages
281–287, New York, NY, USA, 2010. ACM.
[5] Hamed Haddadi, Pan Hui, and Ian Brown. Mobiad: private
and scalable mobile advertising. In Proceedings of the ﬁfth
ACM international workshop on Mobility in the evolving
internet architecture, MobiArch ’10, pages 33–38, New
York, NY, USA, 2010. ACM.
[6] Saikat Guha, Alexey Reznichenko, Kevin Tang, Hamed
Haddadi, and Paul Francis. Serving ads from localhost for
performance, privacy, and proﬁt. In In Proceedings of the 8th
Workshop on Hot Topics in Networks, 2009.
[7] Ad Regex Dictionary.
http://www.retitlc.polito.it/finamore/
mobileAdRegexDictionary.xlsx, 2012.
[8] Qiang Xu, Jeffrey Erman, Alexandre Gerber, Zhuoqing Mao,
Jeffrey Pang, and Shobha Venkataraman. Identifying diverse
usage behaviors of smartphone apps. In Proceedings of the
2011 ACM SIGCOMM conference on Internet measurement
355conference, IMC ’11, pages 329–344, New York, NY, USA,
2011. ACM.
[9] Feng Qian, Kee Shen Quah, Junxian Huang, Jeffrey Erman,
Alexandre Gerber, Zhuoqing Mao, Subhabrata Sen, and
Oliver Spatscheck. Web caching on smartphones: ideal vs.
reality. In Proceedings of the 10th international conference
on Mobile systems, applications, and services, MobiSys ’12,
pages 127–140, New York, NY, USA, 2012. ACM.
[10] Feng Qian, Zhaoguang Wang, Alexandre Gerber,
Zhuoqing Morley Mao, Subhabrata Sen, and Oliver
Spatscheck. Characterizing radio resource allocation for 3G
networks. In Proceedings of the 10th annual conference on
Internet measurement, IMC ’10, pages 137–150, New York,
NY, USA, 2010. ACM.
[11] Aaron Carroll and Gernot Heiser. An analysis of power
consumption in a smartphone. In Proceedings of the 2010
USENIX conference on USENIX annual technical
conference, USENIXATC’10, pages 21–21, Berkeley, CA,
USA, 2010. USENIX Association.
[12] Niranjan Balasubramanian, Aruna Balasubramanian, and
Arun Venkataramani. Energy consumption in mobile phones:
a measurement study and implications for network
applications. In Proceedings of the 9th ACM SIGCOMM
conference on Internet measurement conference, IMC ’09,
pages 280–293, New York, NY, USA, 2009. ACM.
[13] Paul Pearce, Adrienne Porter Felt, Gabriel Nunez, and David
Wagner. Addroid: Privilege separation for applications and
advertisers in android. In Proceedings of ACM Symposium
on Information, Computer and Communications Security,
AsiaCCS’12. ACM, 2012.
[14] William Enck, Peter Gilbert, Byung-Gon Chun, Landon P.
Cox, Jaeyeon Jung, Patrick McDaniel, and Anmol N. Sheth.
Taintdroid: an information-ﬂow tracking system for realtime
privacy monitoring on smartphones. In Proceedings of the
9th USENIX conference on Operating systems design and
implementation, OSDI’10, pages 1–6, Berkeley, CA, USA,
2010. USENIX Association.
[15] Narendran Thiagarajan, Gaurav Aggarwal, Angela Nicoara,
Dan Boneh, and Jatinder P. Singh. Who killed my battery?:
analyzing mobile browser energy consumption. In
Proceedings of the 21st international conference on World
Wide Web, WWW ’12, pages 41–50, New York, NY, USA,
April 2012. ACM.
[16] Zhaoguang Wang, Zhiyun Qian, Qiang Xu, Zhuoqing Mao,
and Ming Zhang. An untold story of middleboxes in cellular
networks. SIGCOMM Comput. Commun. Rev.,
41(4):374–385, August 2011.
[17] Narseo Vallina-Rodriguez and Jon Crowcroft. Energy
management techniques in modern smartphones.
Communications Surveys Tutorials, IEEE, PP, 2012.
[18] H. Haverinen, J. Siren, and P. Eronen. Energy consumption
of always-on applications in wcdma networks. In Vehicular
Technology Conference, 2007. VTC2007-Spring. IEEE 65th,
pages 964 –968, april 2007.
[19] Azeem J. Khan, V. Subbaraju, Archan Misra, and Srinivasan
Seshan. Mitigating the true cost of advertisement-supported
”free” mobile applications. In HotMobile’12, 2012.
356