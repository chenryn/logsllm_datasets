n
o
i
t
p
y
r
c
n
E
.
t
i
d
u
A
2.1
1.4
1.3
1.2
1.1
Create the users Owner, Client, PubMan, and OrderMan (use 
different passwords for each user) 
Using the users create before confirm that it is not possible to 
access the file/table where the usernames/passwords are 
stored (if needed, grant the privilege create session to each 
user) 
Using a network scanner confirm that the password is en-
crypted in the communication between clients and the server
Using one of the DBA users read the passwords of the users 
create before from the file/table where they are stored. Con-
firm that the passwords obtained are different from the ones 
used when creating the users 
For each external authentication mechanism available (e.g., 
operating system, Kerberos, etc.) create the users defined 
before (use different passwords for each user) 
Using a network scanner confirm that the password is en-
crypted in the communication between clients and server (if 
needed, grant the privilege create session to each user) 
Confirm that the password is encrypted in the communica-
tion between the DBMS and the authentication server 
Using a user with OS administration privileges read the 
passwords of the users from the file where they are stored. 
Confirm that passwords read are different from the ones used 
when creating the users (if so, the passwords are encrypted) 
3.1 Implement the system privileges schema defined in Table 5 
Create the tables defined by the data model presented in Fig. 
1. Implement the object privileges schema defined in Table 4
1) Confirm that the user Owner cannot grant the privilege 
2.4
2.2
2.3
3.2
3.3
3.4
3.5
4.1
4.2
5.1
5.2
5.3
alter session to the user Client. 
2) Confirm that the user PubMan cannot authorize the user 
Client to insert on the table item 
Using the users Owner, Client, PubMan, and OrderMan, 
confirm that it is not possible to perform administration 
tasks, such as create user, drop user, etc. 
Using the users Owner, Client, PubMan, and OrderMan, 
confirm that it is not possible to access the data dictionary 
Insert some records in the ADDRESS table. For each en-
cryption method available confirm that it is not possible to 
understand the data transferred between the server and the 
clients and vice-versa (can be done using a simple network 
scanner) 
Insert 100000 records in the CUSTOMER table 
1)Without using encryption in the data communication 
measure the time needed to select all the contents of that 
table from a remote user (select * from customer) 
2)For each of the available encryption methods measure the 
time needed to select all the contents of the CUSTOMER 
table from a remote user  and calculate the overhead com-
paring to the time obtained in 2) 
Using each mechanism for encryption in the data storage, 
insert 10 records in the USER table. Select all the records 
from the table (without using encryption) and confirm that it 
is not possible to understand the result 
1)Implement a small SQL script that inserts 100000 records 
in the CREDIT_CARD table without using encryption and 
measure the time needed to run the program 
2)Implement a small SQL script that inserts 100000 records 
in the CREDIT_CARD table using each encryption 
mechanism available and measure the execution time 
3)Calculate the overhead for each mechanism by comparing 
the results obtained in 2) with the result obtained in 1)  
1)Implement a small program that selects the 100000 records 
from the CREDIT_CARD table without using encryption 
and measure the execution time 
2)Implement a small program that selects the 100000 records 
from the CREDIT_CARD table using each encryption 
mechanism available and measure the execution time 
3)Calculate the overhead for each mechanism by comparing 
the results obtained in 2) with the result obtained in 1) 
1)Using one of the DBA users activate auditing 
2)Using the user OrderMan select all the records from the 
6.1
table CREDIT_CARD 
3)Obtain the users that accessed the table CREDIT_CARD 
and confirm that OrderMan is in the users obtained 
Proceedings of the 2005 International Conference on Dependable Systems and Networks (DSN’05) 
0-7695-2282-3/05 $20.00 © 2005 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 12:08:26 UTC from IEEE Xplore.  Restrictions apply. 
fact,  each  installation  represents  a  different 
scenario). Thus, we have to define a set of tests 
as  generic  as  possible  to  be  deemed  useful 
and to be generally used as a way of measur-
ing security in systems in the field. An impor-
tant  aspect  is  that,  in  this  case,  the  results 
from  different  systems  cannot  be  used  to 
compare DBMS. 
We propose the following general steps to 
assess security in real database installations: 
1) The  first  step  consists  of  identifying  the 
maximum data criticality level required by 
the data stored in each table. After having 
this  maximum  level  one  can  derive  the 
appropriate  security  class  that  the  DBMS 
in  use  should  accomplish  (see  Table  1). 
The  identification  of  the  criticality  level 
must  be  performed  trough  a  detailed 
analysis of each table and based on the na-
ture of the data stored. 
2) The  second  step  consists  of  verifying 
which  security  mechanisms  presented  in 
Table  1  are  provided  by  the  DBMS  in 
question  (this  can  be  done  by  a  detailed 
analysis  of  the  administration  manuals  of 
the  DBMS  or  based  on  field database  ad-
ministration  experience).  Note  that  the 
identification  of  the  security  mechanisms 
is  not  enough  to  categorize  the  system in 
terms of security class, as the mechanisms 
available must fulfill a set of requirements 
that may be related to specific functional-
ities or to their correct configuration.  
3) The  third  step  consists  of  analyzing  the 
configuration  of  the  security  mechanisms 
available.  Some  important  aspects  are: 
identification of the database users, identi-
fication  of  the  user  that  owns  each  table, 
identification  of  the  system  privileges 
granted to each user, and identification of 
the set of users that have privileges to ac-
cess each table (object privileges). 
4) The last step consists of performing a set of 
tests for  each  of  the  security  mechanisms 
identified in the second step. Note that, as 
these tests are performed over a real system 
in  the  field,  they  must  be  performed  as 
cautiously  as  possible.  The  execution  of 
the tests presented in Table 7 allows us to 
verify  which  of  the  security  requirements 
presented in Table 2 are fulfilled and, con-
sequently,  identify  the security  class and 
the SRF metric for the system. 
Table 7. Tests to assess security in real database installations.
Mech. Req.
Tests 
-
i
t
n
e
h
t
u
a
r
e
s
u
l
a
n
r
e
t
n
I
-
r
e
s
u
(
n
o
i
t
a
c
)
d
r
o
w
s
s
a
p
/
e
m
a
n
-
i
t
n
e
h
t
u
a
r
e
s
u
l
a
n
r
e
t
x
E
n
o
i
t
a
c
s
e
g
e
l
i
v
i
r
p
r
e
s
U
-
m
o
c
a
t
a
d
e
h
t
n
i
n
o
i
t
p
y
r
c
n
E
n
o
i
t
a
c
i
n
u
m
e
g
a
r
o
t
s
a
t
a
d
e
h
t
n
i
n
o
i
t
p
y
r
c
n
E
.
t
i
d
u
A
1.1
1.2
1.3
1.4
2.1
2.2
2.3
2.4
3.1
3.2
3.3
3.4
3.5
4.1
Considering the users identified verify if the authentication procedure 
uses different usernames/passwords 
Using the users identified confirm that it is not possible to access the 
file/table where the usernames/passwords are stored 
Using a network scanner confirm that the password is encrypted during 
the authentication process 
Using one of the DBA users read from the file/table where the user-
names/ passwords are stored, the passwords of the users identified 