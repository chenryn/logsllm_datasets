User: I am writing code with python that might run wild and do unexpected things. These might include trying to save very large arrays to disk and trying to allocate huge amounts of memory for arrays (more than is physically available on the system).
I want to run the code in a constrained environment in Mac OSX 10.7.5 with the following rules:

The program can write files to one specific directory and no others (i.e. it cannot modify files outside this directory but it's ok to read files from outside)
The directory has a maximum "capacity" so the program cannot save gigabytes worth of data
Program can allocate only a finite amount of memory

Does anyone have any ideas on how to set up such a controlled environment?
Thanks.
Assistant: import os
stats = os.stat('possibly_big_file.txt')
if (stats.st_size > TOOBIG):
    print "Oh no....."