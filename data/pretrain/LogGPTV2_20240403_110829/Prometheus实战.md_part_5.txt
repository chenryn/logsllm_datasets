23
乙
5
4
3
2
X
O
configurations.
type ServiceDiscoveryconfig struct { 
discovery mechanisms.
 // ServiceDiscoveryconfig configures lists of different service
yaml:"azure_sd_configs, omitempty""
`yaml:"openstack_sd_configs,omitempty"`
`yaml:"kubernetes_sd_configs, omitempty"
configurations.
yaml:"marathon_sd_configs, omitempty"`
yaml:"nerve_sd_configs, omitempty""
yaml:"serverset_sd_configs, omitempty"
yaml:"consul_sd_configs, omitempty"
`yaml:"file_sd_configs, omitempty"
 MarathonSDConfigs []*MarathonSDConfig
// MarathonSDconfigs is a list of Marathon service discovery
NerveSDConfigs []*NerveSDConfig
// NerveSDconfigs is a list of Nerve service discovery
 AzureSDConfigs []*AzureSDConfig 
// List of Azure service discovery configurations.
 OpenstackSDconfigs []*openstackSDConfig
EC2SDConfigs []*EC2SDconfig ^yaml:"ec2_sd_configs,omitempty"
 KubernetesSDConfigs []*KubernetesSDConfig 
 // List of Kubernetes service discovery configurations.
 ServersetSDconfigs []*ServersetSDConfig
// List of Triton service discovery configurations.
// List of OpenStack service discovery configurations.
// List of EC2 service discovery configurations.
// List of GCE service discovery configurations.
 // List of Serverset service discovery configurations.
 ConsulSDConfigs []*ConsulSDConfig
// List of Consul service discovery configurations.
FileSDConfigs []*FileSDConfig 
// List of file service discovery configurations.
" | default = /metrics ］ 
# The HTTP resource path on which to fetch metrics from targets.
# Per-scrape timeout when scraping this job.
# How frequently to scrape targets from this job.
job_name: 
# The job name assigned to scraped metrics by default
implementations).
target 
attach 
labels that are
[ scrape_timeout:  | default =
 ]
[ scrape_interval:  | default =
parsing.
`yaml:"triton_sd_configs, omitempty""
 XXX map[string]interface{} `yaml:",inline"
// Catches all undefined fields and must be empty after
TritonSDConfigs []*TritonSDConfig
N
---
## Page 73
本文档使用书栈(BookStack.CN)构建
数据拉取配置
5
3
8
5
2
2
乙
2
Z
2
 # Sets the ‘Authorization` header on every scrape request with
 # configured username and password.
 # Sets the ‘Authorization` header on every scrape request with the
 # Optional HTTP URL parameters.
 # Configures the protocol scheme used for requests.
# the configured bearer token. It is mutually exclusive with
basic_auth: 
params:
[ scheme:
ignored otherwise.
 u     u  s  a  uum #
# setting. In communication with external systems, they are always
unaffected by this 
# Note that any globally configured "external_labels" are
# specified in the target should be preserved.
# example "exported_instance", "exported_job") and then attaching
  o  '     a #
side labels.
# values from the scraped data and ignoring the conflicting server.
[ honor_labels:  
applied only
all labels 
# labels. This is useful for use cases such as federation, where
server-side 
label>"(for
by renaming 
#
keeping label
bearer_token_file`.
[ password:
[ username: 
[: [,
丨 default = http ］
| default = false 
3
---
## Page 74
本文档使用书栈(BookStack.CN)构建
数据拉取配置
18
8
5
3
2
6
8
7
15
6
1
15
8
50.
49
47.
# List of file service discovery 
 openstack_sd_configs:
 # List of OpenStack service discovery configurations
 # List of EC2 service discovery configurations.
dns_sd_configs:
 # List of DNS service discovery configurations.
 consul_sd_configs: 
 # List of Consul service discovery configurations.
 azure_sd_configs: 
 # List of Azure service discovery configurations.
file_sd_configs: 
[ proxy_url:  
 # Optional proxy URL.
 # Configures the scrape request's TLS settings
 # read from the configured file. It is mutually exclusive with
# Sets the `Authorization`
[ bearer_token:  ]
ec2_sd_configs:
tls_config: 
[ bearer_token_file: /path/to/bearer/token/file ］
`bearer_token`.
bearer token 
[ －  
[ -  ...
[ -  
[ -  ... 
 [- 
[ 
 header on every scrape request with the
 configurations.
---
## Page 75
本文档使用书栈(BookStack.CN)构建
120.
119.
118
116
115
114.
113.
112.
111.
110.
数据拉取配置
117
08
07
106.
G
10
6
6
5
1
3
88
8
5
83
. # List of target relabel configurations.
relabel_configs:
# List of labeled statically configured targets for this job.
triton_sd_configs:
 # List of metric relabel configurations.
static_configs:
 # List of AirBnB's Nerve service discovery configurations.
 # List of Marathon service discovery configurations.
 # List of Kubernetes service discovery configurations.
 gce_sd_configs:
 # Per-scrape limit on number of scraped samples that will be
 metric_relabel_configs:
 # List of Triton service discovery configurations.
 serverset_sd_configs: 
 marathon_sd_configs:
 kubernetes_sd_configs:
 # List of GCE service discovery configurations.
[－
[－  
nerve_sd_configs:
 [－ 
[-  ...
[ -  ...
[ －  
[ -  ...
 [-  
---
## Page 76
本文档使用书栈(BookStack.CN)构建
数据拉取配置
23.
22
.21
 [ sample_limit:| default = θ ］
 # If more than this number of samples are present after metric
relabelling 
accepted,
---
## Page 77
本文档使用书栈(BookStack.CN)构建
其代码结构体为：
远程可写存储
远程可写存储
远程可写存储
13.
2
remote_write]
·write_relabel_configs：标签重置配置，
·remote_timeout：请求超时时间
·url：访问地址
·远程可写存储
过重置处理后，发送给远程存储
parsing.
will then parse 
type RemotewriteConfig struct
storage.
  b t  n 1  
types.
yaml:"write_relabel_configs,omitempty"`
yaml:"remote_timeout, omitempty" 
// values arbitrarily into the overflow maps of further-down
 XxX map[string]interface{} ‘yaml:",inline"
 // we cannot do proper Go type embedding below as the parser
WriteRelabelConfigs []*RelabelConfig
 // Catches all undefined fields and must be empty after
 RemoteTimeout
 URL 
主要用于可写远程存储配置，
 model.Duration
*URL 
，主要包含以下参数：
`yaml:"url, omitempty" 
拉取到的数据，经
---
## Page 78
本文档使用书栈(BookStack.CN)构建
一份完整的配置大致为：
远程可写存储
30.
2
28.
27.
2
22.
Z
2
6
5
T
C
6
8
S
4
2
[ proxy_url: 
 # Optional proxy URL.
tls_config:
 # Configures the remote write request's TLS settings.
# read from the configured file. It is mutually exclusive with
# Sets the `Authorization`
# the configured bearer token. It is mutually exclusive with
 # Sets the ^Authorization` header on every remote write request
# configured username and password.
 # Sets the ^Authorization^ header on every remote write request
 write_relabel_configs:
 # List of remote write relabel configurations.
with the 
[ remote_timeout:  | default = 30s ］ 
# Timeout for requests to the remote write endpoint.
# The URL of the endpoint to send samples to.
[ bearer_token_file: /path/to/bearer/token/file ]
`bearer_token`.
with the bearer token 
[ bearer_token:  ]
`bearer_token_file`.
with 
basic_auth: 
url: 
【 ]
[ username:  
[- ...］
[ password: 
header on every remote write request
---
## Page 79
本文档使用书栈(BookStack.CN)构建
可能发生改变。
注意：
远程可写存储
remote_write 属于试验阶段，慎用，因为在以后的版本中
---
## Page 80
本文档使用书栈(BookStack.CN)构建
一份完整的配置大致为：
其代码结构体为：
远程可读存储
远程可读存储
远程可读存储
12.
11
remote_read 
2
·remote_timeout：请求超时时间
·url：访问地址
·远程可读存储
# The URL of the endpoint to query from.
url: 
parsing.
will then parse
type RemoteReadConfig struct {
types.
storage.
// RemoteReadconfig is the configuration for reading from remote
XXX map[string]interface{} ‘yaml:",inline"
 // Catches all undefined fields and must be empty after
 HTTPClientConfig HTTPClientConfig ^yaml:",inline" 
 // values arbitrarily into the overflow maps of further-down
 // we cannot do proper Go type embedding below as the parser
RemoteTimeout model.Duration ^yaml:"remote_timeout,omitempty"
URL 
主要用于可读远程存储配置，
*URL 
`yaml:"url, omitempty"
，主要包含以下参数：
---
## Page 81
本文档使用书栈(BookStack.CN)构建
能发生改变。
注意：remote_read属于试验阶段，慎用，因为在以后的版本中可
远程可读存储
心
2
2
忆
2
2
6
18
4
3
口
5
4.
[ proxy_url: 
 # Optional proxy URL.
tls_config:
 # Configures the remote read request's TLS settings.
[ bearer_token:  ]
 # the configured bearer token. It is mutually exclusive with 
 # Sets the ^Authorization` header on every remote read request with
 basic_auth: 
 # configured username and password.
[ remote_timeout:  | default = 30s ］
 # Timeout for requests to the remote read endpoint.
[ bearer_token_file:
# read from the configured file. It is mutually exclusive with
the bearer token
# Sets the ^Authorization`
`bearer_token`.
`bearer_token_file`.
the 
[ 
[ password: 
[ username: 
/path/to/bearer/token/file ]
 header on every remote read request with
---
## Page 82
本文档使用书栈(BookStack.CN)构建
些动态类型都可以看成是某些通用业务使用静态服务封装的结果。
它们中最重要的，也是使用最广泛的应该是
它们具体使用以及配置模板，请参考服务发现配置模板。
几类：
target，而数据源的配置主要分为静态配置和动态发现，大致为以下
在 Prometheus 的配置中，
服务发现
服务发现
服务发现
·static_configs：静态服务发现
·服务发现
triton_sd_configs：Triton 服务发现
·azure_sd_configs：Azure 服务发现
·openstack_sd_configs：OpenStack 服务发现
gce_sd_configs：GCE 服务发现
marathon_sd_configs：Marathon 服务发现
serverset_sd_configs：Serverset 服务发现
 file_sd_configs:
·dns_sd_configs：DNS 服务发现
ec2_sd_configs：EC2服务发现
kubernetes_sd_configs: Kubernetes 服务发现
nerve_sd_configs：Nerve 服务发现
consul_sd_configs：Consul 服务发现
文件服务发现
一个最重要的概念就是数据源
static_configs
其实那
---
## Page 83
本文档使用 书栈(BookStack.CN) 构建
服务发现
---
## Page 84
本文档使用 书栈(BookStack.CN)构建
我平时使用的配置文件大致为这样：
Prometheus 的配置参数比较多，但是个人使用较多的是 global,
配置样例
配置样例
配置样例
6
15
切
3
·配置样例
6
8
9
3
2
 scrape_configs:
 global:
rule_files:
seconds.
 evaluation_interval: 15s # By default, scrape targets every 15
seconds.
 scrape_interval:
- job_name: 'prometheus
- "rules/node.rules"
job_name: 'memcached'
-job_name: 'mysqld'
job_name: 'node'
static_configs:
static_configs:
scrape_interval:
static_configs:
scrape_interval: 5s 
- targets: ['127.0.0.1:9104']
- targets: ['127.0.0.1:9100', '127.0.0.12:9100']
- targets: ['localhost:9090']
8S
15s # By default, scrape targets every 15
---
## Page 85
本文档使用书栈(BookStack.CN) 构建
配置样例
static_configs:
targets: ['127.0.0.1:9150']
---
## Page 86
本文档使用书栈(BookStack.CN)构建
Prometheus 社区已经提供了很多 exporter，详情请参考这里
在 Prometheus 中负责数据汇报的程序统一叫做 Exporter，而不
Exporter
Exporter
的 node_exporter。
它们具有统一命名格式，即 xx_exporter，例如负责主机信息收集
同的 Exporter 