466
42
600
Figure 6). Algorithm 2 speciﬁes the algorithm we apply to
automate the dependency-based blockchain state reduction.
Figure 15 in the Appendix shows a timeline analysis of the
state dependencies for all considered assets. We observe that
ETH experiences the most state changes with over 950, 000
blocks (36.76%), followed by DAI (14.62%).
TABLE II: Results of path pruning after applying the heuristics
from Section V-B. In total, 600 paths remain, with the major-
ity (77.67%) consisting of 4 actions. For each path length, the
heuristics remove at least 99.98% of the strategies.
Fig. 6: We consider each blockchain block as an independent
state representation of the DeFi platform markets. Only if a
DeFi market changes in state, we need to re-engage the SMT
solver for the affected paths only.
Algorithm 2: Block state dependency analysis.
Input:
p = (a1, a2, . . .) ∈ P ← Path ; b ← Block number
Output: Has a state change
foreach a ∈ p do
foreach s ∈ K
(a) do
T
if fetch(s, b) (cid:54)= fetch(s, b - 1) then
end
return True
end
end
return False
Function fetch(s, b) is
return (Concrete value for storage variable address s on
block b)
end
without repeating actions, which is an impractical space to
evaluate. Table II hence illustrates the impact of our heuristics
on paths of various lengths. We observe a signiﬁcant reduction
of at least 99.98% per path length of the total number of
considered paths, resulting in only 600 remaining paths. The
majority of paths (77.67%) consist of 4 actions, while the
shortest paths count 2 actions, and the longest 5 actions.
Although we do not enforce a constraint on the maximum
number of actions, all paths with more than 5 actions failed
to pass our heuristics.
Action Dependency: In the following, we present a concrete
example of determining the dependency between two actions.
The ﬁrst action aUniswap transacts ETH to SAI using the
Uniswap SAI market. The second action aBancor
transacts
BNT to SAI using the Bancor SAI contract. Equation 10 and
Equation 11 show the relevant storage variables, respectively.
These two actions are not independent, as they both modify
the trader’s balance in the SAI contract.
T
K
(aUniswap) = {.ETH,
.balance of UniswapSAI,
.ETH,
.balance of trader}
T
K
(aBancor) = {.balance of BancorSAI
.balance of BancorSAI
.balance of trader
.balance of trader}
C. DEFIPOSER-ARB and DEFIPOSER-SMT: Revenue
We validate both DEFIPOSER designs on past blockchain
data from block 9, 100, 000 to block 10, 050, 000, over a
total of 150 days. We visualize the distribution of traders’
revenue for DEFIPOSER-SMT in Figure 8. DEFIPOSER-
SMT found 13, 317 strategies consisted of 2 to 5 actions.
In total DEFIPOSER-SMT yields a total of 1,552.32 ETH
(620,928 USD), and we observe that
the most proﬁtable
strategies consist of 3 actions, where the highest revenue
yielded amounts to 22.40 ETH (8,960 USD). Similarly,
Figure 9 visualizes the distribution of traders’ revenue for
DEFIPOSER-ARB. Recall
that DEFIPOSER-ARB greedily
combine multiple paths into a single strategy. We observe
that
the revenue increases as the number of paths in-
creases, with the highest revenue amounting to 81.31 ETH
(32,524 USD). In total, DEFIPOSER-ARB ﬁnds 2, 709 strate-
gies and yields 4,103.22 ETH (1,641,288 USD).
We visualize in Figure 7 the revenue generated by
DEFIPOSER-SMT and DEFIPOSER-ARB as a function of
the initial capital. If a trader owns the base asset (e.g., ETH),
most strategies require less than 150 ETH. Only 10 strategies
require more than 100 ETH for DEFIPOSER-SMT, and only 7
strategies require more than 150 ETH for DEFIPOSER-ARB.
This capital requirement is reduced to less than 1.00 ETH
(400 USD) when using ﬂash loans (cf. Figure 7 (b, d)).
Figure 10a shows how our concrete execution valida-
tion over 150 days yields consistent
revenue for both
tools. The concrete execution estimates a weekly rev-
enue of 191.48 ETH (76,592 USD) for DEFIPOSER-ARB
and 72.44 ETH (28,976 USD) for DEFIPOSER-SMT. For
DEFIPOSER-SMT, our validation estimates a total revenue
9
(10)
(11)
Dependency-based Blockchain State Reduction: If a DeFi
state does not change across a number of blockchain blocks,
the same SMT solver computation is not re-engaged (cf.
(a) DEFIPOSER-SMT without ﬂash loans.
(b) DEFIPOSER-SMT with ﬂash loans.
(c) DEFIPOSER-ARB without ﬂash loans.
(d) DEFIPOSER-ARB with ﬂash loans.
Fig. 7: Revenue as a function of the initial capital, in ETH with and without ﬂash loans for DEFIPOSER-ARB (total of 2, 709
found strategies) and DEFIPOSER-SMT (total of 1, 556 found strategies).
Fig. 8: Analytical distribution of the trader’s revenue. The
majority of the most proﬁtable strategies consist of 3 actions.
Because DEFIPOSER-SMT requires manual modeling,
the
revenues discovered by Z3 are not accurate, and thus the
number of discovered strategies (yellow) are less than the
proﬁtable strategies (blue). We use concrete execution to
validate the strategies from Z3.
Fig. 9: Distribution of the trader’s revenue using DEFIPOSER-
ARB. We observe that the revenue increases as the number of
paths increases. We also visualize the distribution of the most
proﬁtable sub-path (orange) for every strategy. Intuitively, the
more paths DEFIPOSER-ARB try to combine, the higher the
revenue.
of 1,552.32 ETH (620,928 USD) out of 3,577.14 ETH
(1,430,856 USD) (i.e., 40% of the Z3 indicated revenue is
validated in practice).
Cost Analysis: The trader’s principal costs are the blockchain
transaction fees (e.g., gas in Ethereum), which remain below
the revenue yielded by the strategies we validated (cf. Fig-
ure 11). Note that a trading strategy may fail if the underlying
market state changes before its execution. Therefore, we
assume that the trader adopts the gas price of 32 GWei, which
is highly volatile, but the recommended fast transaction gas
price at the time of writing. Summarizing, the execution of
all strategies costs less than 0.05 ETH, which warrants all
strategies to be proﬁtable.
Performance Analysis: Our tools must ﬁnd trades within
the average Ethereum block time of 13.5 ± 0.12 seconds [9]
to be applicable in real-time. Assuming a network propaga-
tion latency of roughly three seconds towards miners in the
blockchain P2P network [22], our tools must generate trans-
actions within at most 10.5 seconds. Figure 12 shows the de-
tailed execution speed of DEFIPOSER-ARB and DEFIPOSER-
SMT on an AMD Ryzen Threadripper 3990 X Processor
(4.3 GHz, 64 cores) CPU. For new block states, we measure a
total average computing time of 6.43 seconds and 5.39 seconds
per block, respectively.
We further group the strategies detected by DEFIPOSER-
ARB based on the number of negative cycles and compare
the respective analysis time (cf. Figure 13). We ﬁnd that
DEFIPOSER-ARB exceeds our estimated time limit (13.5 −
3 = 10.5 seconds) when exploiting more than 6 cycles. The
higher the total number of negative cycles, the more likely
DEFIPOSER-ARB misses the most proﬁtable opportunity.
10
0255075100125150175InitialcapitalinETH020RevenueinETH0.0600.0650.0700.0750.0800.085InitialcapitalinETH020RevenueinETH050100150200InitialcapitalinETH050RevenueinETH0.20.40.60.8InitialcapitalinETH050RevenueinETH2345TotalNumberofactionsperpath100101RevenueofthetraderinETHZ3discoveredstrategies(totalof608.6ETH)Validatedmostproﬁtablestrategyperblock(totalof161.3ETH)123456789≥10Numberofpathsexecutedperstrategy10−1100101102RevenueofthetraderinETHRevenue(inETH)Mostproﬁtablepathperstrategy(a) Cumulative revenue over time (150 days), found by DEFIPOSER-SMT and DEFIPOSER-ARB, and validated via concrete execution.
(b) Strategies detected and validated by DEFIPOSER-SMT.
(c) Strategies validated by DEFIPOSER-ARB.
Fig. 10: Revenue and transaction fees analysis over time, measured in blocks.
VII. PROFITABLE TRANSACTIONS AND BLOCKCHAIN
SECURITY
In this section, we show that DEFIPOSER-SMT is capa-
ble of identifying the economic bZx attack from February
2020 [53] and provide forensic insights into the event. Given
optimal adversarial strategies provided by an MDP, we then
quantify whether an MEV opportunity will cause a rational
miner to create a blockchain fork.
A. Economic bZx Attack
On the 15th of February, 2020, a trader performed a
pump and arbitrage attack on the margin trading platform
bZx3. The core of this trade was a pump and arbitrage
involving four DeFi platforms atomically executed in one
single transaction. As a previous study shows,
this trade
resulted in in 4,337.62 ETH (1,735,048 USD) loss from
bZx loan providers, where the trader gained 1,193.69 ETH
(477,476 USD) in total [53].
Attack Window: To gain deeper insights into this DeFi
composability event, we extend DEFIPOSER-SMT with two
additional actions: (i) borrow WBTC with ETH on compound
ﬁnance; (ii) short ETH for WBTC on bZx. We replayed
DEFIPOSER-SMT on historical blockchain data by starting
at the creation of the bZx’s margin short smart contract (cf.
Figure 16). Surprisingly, the bZx attack window lasted for 69
days until it was openly exploited. DEFIPOSER-SMT ﬁnds
that the attack yielded the highest revenue of 2,291.02 ETH
(916,408 USD) at block 9, 482, 670, which is about one day
before the attack occurred.
B. MEV, an MDP and Optimal Adversarial Strategies
The economic bZx attack revenue exceeds the aver-
age Ethereum block reward4 by a factor of 874×. After
bZx, the other most proﬁtable validated strategies found by
DEFIPOSER-ARB and DEFIPOSER-SMT exceed the block
reward by a factor of 31× and 8.5× respectively. In this
section, we quantify the value at which an MEV-aware miner
would exploit an MEV opportunity by forking the blockchain.
Markov Decision Process: A Markov Decision Process is
a single-player decision process that allows identifying the
optimal strategies for an encoded decision problem. In this
work, we adopt the state transition and reward matrix of the
PoW double-spending MDP of Gervais et al. [31]. Note that
the MDP we use does not consider uncle rewards.
We observe that conceptually, an MEV opportunity is equiv-
alent to a double-spending opportunity: if an MEV opportunity
is mined by an honest miner, and an adversarial miner aims
to claim the MEV opportunity, the MEV miner will need to
outrun the honest chain with a fork. The MEV miner will
hence want to follow the optimal adversarial strategies given
by the MDP, which advises whether to fork or not to fork the
blockchain depending on the MEV value.
Threat Model: We assume a rational and computationally
bounded adversary. Because MDP’s are single-player decision
problems, we assume the existence of only one adversarial
3transaction id: 0xb5c8bd9430b6cc87a0e2fe110ece6bf527fa4f170a4bc8cd0
32f768fc5219838
4At the time of writing, the average Ethereum block reward is 2.62 ETH
(https://bitinfocharts.com/ethereum/)
11
920000094000009600000980000010000000Blocknumber020004000Cumulativerevenue/transactionfeeinETHJan-02-2020Feb-02-2020Mar-03-2020Apr-03-2020May-04-2020DeFiPoser-SMT:beststrategyperblockfoundDeFiPoser-SMT:validatedrevenuebyconcreteexecutionDeFiPoser-SMT:transactionfeeDeFiPoser-ARB:validatedrevenuebyconcreteexecutionDeFiPoser-ARB:transactionfee(a) DEFIPOSER-SMT
(b) DEFIPOSER-ARB
Fig. 11: Distribution of revenue and transaction cost based
on concrete execution on the EVM for DEFIPOSER-SMT
and DEFIPOSER-ARB. The revenue outpaces the transaction
costs, which are higher for DEFIPOSER-ARB because the
found strategies often consist of more cycles (arbitrage op-
portunities).
Fig. 12: Analysis time distribution to detect a proﬁtable strat-
egy on DEFIPOSER-SMT and DEFIPOSER-ARB. For most
strategies the search and validation process remains below the
average Ethereum block time of 13.5 ± 0.12 seconds.
miner willing to exploit MEV. We parametrize the miner
with a hash rate α ∈]0, 0.5[, while the remaining non-MEV
miners have a hash rate of 1 − α. We ignore the existence
of eclipse attacks (ω = 0) and assume the weakest possible
network propagation parameter of the adversary (γ = 0). We
parametrize the MDP with the stale block rate of the Ethereum
blockchain at the time of writing. By crawling the number of
uncle blocks (from the block 9.1M to 10.5M), we approximate
the stale block rate to rs = 5.72%. We set the mining costs
to match the hash rate of the MEV miner (cm = α).
12
Fig. 13: The analysis time of DEFIPOSER-ARB exceeds
our estimated time limit (taking into consideration block
time and transaction network propagation to miners), when
DEFIPOSER-ARB exploits more than 6 cycles.
Exploit or not exploit MEV? Each time an MEV opportunity
arises on the network layer, we assume that the honest miner
succeeds in mining the MEV opportunity, and the MEV miner
fails to receive the reward initially. The MEV miner, therefore,
needs to decide whether to start to mine on a private chain,
where he claims the MEV opportunity. Note that the MDP’s
exit state can only be reached when the MEV miner mined
a private chain that is longer than the honest chain (la > lh)
given k = 1 (la > k). Depending on the MEV value, the
optimal strategy π might advise against forking the chain to
attempt to claim the MEV reward. We quantify the minimal
MEV value M EVv, such that M EVv is strictly larger than
the reward from honest mining (cf. Equation 13). We denote
h is the process of mining honestly.
P = (α, γ, rs, k, ω, cm)
(12)
M EVv = min{M EVv|∃π ∈ A : R(π, P, M EVv) > R(h, P )}
(13)
To solve the MEV MDP for the optimal strategies, we use
the code of [31]5 and reparametrize given the current Ethereum
stale block rate (rs = 5.72%). We further set k = 1, γ = 0,
ω = 0 and the cut-off value (the maximum length of la and
lh) to 20 blocks. Similar to [31], we apply a binary search
to ﬁnd the lowest value for M EVv in units of block rewards,
given a margin of error of 0.1.
Results: We visualize our ﬁndings in Figure 14, which shows
that for an MEV miner with 10% hash rate, on Ethereum
(stale block rate of 5.72%), M EVv equals to 4. We conclude
that in this case, if an MEV opportunity yields at least a
reward that is 3 times higher than the block reward, then
an MEV miner which follows the optimal strategies will
fork the blockchain. A fork of the blockchain deteriorates
the blockchain’s security as it increases the risks of double-
spending and selﬁsh mining [31].
Multiple MEV Miner: Our MDP model does not allow us to
draw conclusions on the dynamics under multiple independent
MEV miners. We hence can only speculate about the outcome
5https://github.com/arthurgervais/pow_mdp
2345TotalNumberofactionsperpath10−210−1100101Revenue/Costofthetrader(inETH)RevenueinETHTransactioncostinETH(gaspriceof32GWei)123456789≥10Numberofpathsexecutedperstrategy10−1101Revenue/Costofthetrader(inETH)RevenueinETHTransactioncostinETH(gaspriceof32GWei)051015202530Analysistime(seconds)DeFiPoser-ARBtotalDeFiPoser-ARBcycledetectionDeFiPoser-ARBﬁndparametersDeFiPoser-SMTtotalDeFiPoser-SMTpruningDeFiPoser-SMTz3solvingDeFiPoser-SMTvalidationPropagationtimeEstimatedlimitAverageEthereumblocktime100%overestimatedlimit200%overestimatedlimit12345678910111213141516171819202223242526273234Numberofcyclesexploited51015202530TotaldurationEstimatedlimitPropagationtimeAverageEthereumblocktime100%overestimatedlimitanalysis tool has yet considered the problem of a composability
analysis as we’ve performed.
Model Checking: Model-checking is another viable method
to verify the security of smart contracts. Model-checking
examines all possible states in a brute-force manner [7]
and performs systematic exhaustive exploration for checking
whether a ﬁnite transition machine model of a system meets
appropriate speciﬁcations [13], [16], [36], [43], [45], [48],
[56], [57]. One of the main limitations of model-checking
is the exponential growth of the number of possible states,
resulting in unsolvability for complex contracts.
IX. CONCLUSIONS
This paper presents two practical approaches that automat-
ically extract revenue from the intertwined mesh of decentral-
ized ﬁnance protocols. The ﬁrst technique, DEFIPOSER-ARB,
is well-suited for arbitrage, and the second, DEFIPOSER-
SMT, can also ﬁnd acyclic opportunities. When evaluated
over a span of 150 days with 96 DeFi actions and 25
cryptocurrency assets, DEFIPOSER-ARB and DEFIPOSER-
SMT are estimated to generate an average weekly revenue
of 191.48 ETH (76,592 USD) and 72.44 ETH (28,976 USD),
with the highest transaction being 81.31 ETH (32,524 USD)
and 22.40 ETH (8,960 USD), respectively.
apply to a
real-time operation on
blockchains with reasonably fast inter-block times (such as
Ethereum), with an average search of 6.43 seconds and 5.39
seconds per block for DEFIPOSER-ARB and DEFIPOSER-