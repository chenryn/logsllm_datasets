couple PANId/PAN-Coordinator. In addition, depending on the frame type, several others information may be specified. In fact, when 
captured frame is a beacon, it is possible to infer the nature of the originator (PAN coordinator or coordinator) and the beacon interval if the 
network is a beacon-enabled one. If such device is found, it may be updated with additional potential inferred information such as the long 
address, the short address and the nature of the device. 
3.1.2 THE RECIPIENT 
Note that with this approach, beacons are excluded because they do not carry any useful information for that step. The scanner checks if it 
can find in the database a device sharing the same addressing information than the destination addressing information of the captured 
frame. It is worth mentioning that addressing information includes the destination PANId and, depending of the destination address mode, 
the destination address. When destination address is missing, that means that the frame is directed to the PAN Coordinator. In this case, 
rather than looking for a device using its address and its PANId as an entry key, the database is requested to look for a PAN coordinator 
with a given PANId. If such device does not exist, a new one is registered by the tool with the appropriate information: either the couple 
PANId/Address or the couple PANId/PAN-Coordinator. If such device is found, it may be updated with additional potential inferred 
information such as the long address, the short address and the nature of the device. 
3.1.3 THE BEACONS  
How the transfers are implemented depends on the network support for the transmission of beacons. A beacon-enabled PAN is used when 
synchronization or low-latency is required. When that is not the case, a network may not use beacons for normal transfers, but they are still 
required for network discovery. That is why they can be useful to gather information on a specific PAN. 
3.1.3.1 THE GUARANTEED TIME SLOTS 
In a beaconing network, devices may request the PAN coordinator for the allocation of a Guaranteed Time Slot (GTS). A device can infer 
that it actually owns a GTS if its address is contained in the GTS fields of the periodic beacons. The scanner is able to recover the addresses 
of the GTS owners by simply reading the corresponding fields of the captured beacons. The PANId of each GTS owner is inferred from the 
beaconing coordinatorâ€™s PANId. Both the addresses and the PANId being retrieved, the scanner can register the new devices in the 
database. If a device is already registered in the database, the scanner does nothing. It is worth noting that, such a mechanism cannot be 
processed by the scanner if beacon payloads are encrypted.  
3.1.3.2 THE PENDING ADDRESSES 
When a coordinator wishes to transfer data to a device in a beacon-enabled PAN, it may use three types of transmission models and among 
them the indirect one. In an indirect transmission scheme, the coordinator maintains in its periodic beacons a list of device addresses for 
which data are pending, and wait for the corresponding devices to request the data. The scanner takes advantage of this feature to infer the 
presence of devices on the network. Each time a beacon is captured, the pending addresses field is read and new devices can be registered 
in the database. Note that for each discovered address, the PANId is inferred from the corresponding coordinator PANId. If a device is 
already registered in the database, the scanner does nothing. 
3.1.4 THE ASSOCIATION PROCEDURE 
Each IEEE 802.15.4 device owns a unique 64-bit extended address but a 16-bit short address may also be allocated by the coordinator 
when the device associates. Both of these two addresses may be used for transmission within the network. However, there is no way to 
make the connection between the short address and the long address owned by a single device, except when capturing an association 
procedure. In fact, during such procedure, the device asks the coordinator to associate with the PAN and, optionally, requests a short 
address. If the coordinator was able to associate the device to its PAN and allocate a short address, it will reply with an association response 
command frame that contains the allocated short address.  
3.1.4.1 DEVICE ADDRESSES 
As the IEEE 802.15.4 standard states that the coordinator shall use the 64-bit extended address of the device requesting for association as 
the destination address of its association response frame, the scanner is able to retrieve, by simply reading the corresponding fields of this 
frame, both the short and the long address the device owns. The two addresses being retrieved, the scanner checks whether or not the 
discovered device had already been registered in the database as two distinct device instances, one with the short address and the other with 
the long address. In such a case, it simply merges the two instances. If the scanner can only find in the database a single registered device 
instance in which only one of the two retrieved addresses are known, it feeds it with the other.  If no devices are found, it simply 
instantiates a new one with the two addresses it just retrieved. Finally, if the scanner finds a device in which both the short and the address 
are known, it does nothing.  
3.1.4.2 COORDINATOR ADDRESSES 
When sending beacons, a coordinator may choose between its short and its long address as a source address. When sending data or 
command frames, it may use another addressing mode than it actually uses for beacon transmission. The coordinator association response 
command is part of the association procedure and informs the device wishing to join the PAN whether or not its request has been accepted. 
When capturing such a frame, if the scanner identifies that the source addressing mode is not the same as the one used for beacons, it can 
make the connection between the long and the short address owned by the coordinator. The database is then updated accordingly. The two 
addresses being retrieved, the scanner checks whether or not the coordinator had already been registered in the database as two distinct 
device instances, one with the short address and the other with the long address. In such a case, it simply merges the two instances. If the 
scanner only find in the database a single registered device instance in which only one of the two retrieved addresses are known, it feeds it 
with the other. Finally, if the scanner finds a device in which both the short and the address are known, it does nothing.  
3.2 DEVICES THAT ARE COMMUNICATING WITH EACH OTHER 
Being aware of each pair of devices communicating on the network can be very useful, especially when spoofing devices. Moreover, from 
this information, the network topology may be retrieved. For each captured frame in which the frame-type subfield does not specify an 
acknowledgment or a beacon frame, the scanner retrieves information about the originator and the expected recipient by analyzing both the 
source and the destination addressing fields. After ensuring both devices were registered in the database, the receiving device is, if that is 
not already the case, stored as a recipient in the originator instance. The mechanism by which the transmission parameters are stored is 
detailed in next section.  
3.3 TYPES OF FRAMES THAT ARE EXCHANGED BETWEEN DEVICES 
In this section, we focus on describing the transmission parameters that can be inferred from captured frames: 
Frame type and subtype; 
Addressing modes; 
Data transmission model; 
IEEE 802.15.4 standard version; 
Security policy; 
For each captured frame in which the frame-type subfield does not specify an acknowledgment or a beacon frame, the scanner stores in the 
database the parameters used by the originator to transmit the frame. This is achieved by instantiating a transmission object and adding it to 
the recipient of the corresponding originator instance. A transmission object contains a list of parameters, a frame counter and a buffer in 
which are stored every captured frames that have been sent with these parameters. When dealing with a captured frame, is the scanner 
identifies that in the database the pair originator/recipient already exists and, that the transmission parameters are already known, it does 
not create a new transmission instance but rather increments the counter of the corresponding instance and stores the packet in the buffer. 
Moreover, for each captured frame, the scanner first checks if both originator and recipient devices exist and instantiate them otherwise. It 
is worth noting that, most part of the parameters listed below can be retrieved regardless of the use of security. However, when guessing the 
security policy which has been used to secure a captured frame, the scanner requires the user to provide an encryption key. 
3.3.1 FRAME-TYPE AND SUBTYPE 
Knowing about each frame-type (and subtype when it is a command frame) a device has been able to send/receive during the scan can give 
clues about how important are devices. Also, it can help an auditor to choose which device to spoof when wishing to send a specific frame-
type/subtype to a given recipient, ensuring a normal behavior. The scanner retrieves the frame-type and, when necessary, the frame-subtype 
by simply reading the corresponding fields of the given frame. 
3.3.2 ADDRESSING MODES 
To be sure an outgoing frame would not be rejected by a device because of the use of an improper addressing mode, it is interesting to 
retrieve, for each captured frame, which addressing modes have been used. Thus, the auditor would know which source and destination 
addressing modes to use in order to send a secured data frame to device B, while mimicking device A.  As for the frame-type and subtype, 
the scanner retrieves both source and destination addressing information by simply reading the corresponding fields of the given frame. 
3.3.3 DATA TRANSMISSION MODEL 
Depending on the networkâ€™s ability of transmitting periodic beacons (beacon-enabled PAN) and on device types, numerous transfer models 
can be used by devices to transfer data frames. Retrieving the mechanism by which each pair of devices communicates can guide the 
auditor in his choice of a transfer scheme when trying to send data to a given device. The available transfer models are described hereafter.   
3.3.3.1 BEACON-ENABLED PAN 
3.3.3.1.1 DEVICE TO COORDINATOR (OR PAN COORDINATOR) 
If the device has been allocated a transmission Guaranteed Time Slot (GTS) by the coordinator, then it will directly transmit the data frame 
during its reserved slot during the Contention Free Period (CFP). The scanner always stores the last captured beacon. When a data frame is 
received and is directed to the beaconing coordinator, it checks in the GTS subfield of the beacon MAC field if a GTS is actually allocated 
to the originator device. If so, the scanner infers that the given frame has been sent according to a GTS scheme. It is worth noting that, 
however, even if a device owns a transmission GTS, it still can send its data frame using direct transmission during the Contention Access 
Period (CAP). Having said that, this information is still available and ensures the user that, by following a GTS transmission model, the 
frame he wants to send will not be rejected. Moreover, in order to let the user know which slot(s) the originator owns, the scanner stores the 
following timing information: beacon order, superframe order, final CAP slot as well as the GTS starting slot and the GTS length of the 
corresponding device, everything being available in the beacon. 
When no transmission GTS has been found for the originator in the GTS field of the beacon frame, in a direct transmission scheme, the 
device wishing to send data to its coordinator will first synchronize with beacons and then send its frame during the Contention Access 
Period (CAP).  
3.3.3.1.2 COORDINATOR (OR PAN COORDINATOR) TO DEVICE 
If the recipient device had previously been allocated a GTS for reception by the coordinator, then the coordinator will thus directly transmit 
its data frame during the corresponding slot(s). When a data frame is received and has originated from the beaconing coordinator, the 
scanner checks in the GTS subfield of the most recent beaconâ€™s MAC field if a GTS is actually allocated to the recipient device. If so, the 
scanner infers that the captured frame has been sent according to a GTS scheme. This information ensures the user that, by following a 
GTS transmission model, the frame he wants to send will not be rejected by the recipient. Note that, however, even if a device owns a 
reception GTS, a coordinator can still send data to it using direct transmission. In this scenario, the scanner stores timing-related 
information to situate the exact position of the slot(s) the device owns. This information are: beacon order, superframe order, final CAP slot 
as well as the GTS starting slot and the GTS length of the corresponding device, everything being available in the beacon. In this case, the 
coordinator indicates in its periodic beacons that data are pending. The target device then requests the pending data by sending a MAC data 
request command. Finally, the coordinator sends the data frame during the CAP. For each captured data frame, the scanner can infer that an 
indirect transmission scheme has been used if the recipient has been sending a data request command just before receiving the data frame. 
When neither the GTS transmission mechanism nor the indirect transmission mechanism has been identified, the coordinator will send its 
frame directly during the CAP. 
3.3.3.2 NONBEACON-ENABLED PAN 
3.3.3.2.1 DEVICE TO COORDINATOR (OR PAN COORDINATOR) 
In a nonbeacon-enabled PAN, devices have no choice but to directly send their data frames to their coordinators. Thus, there is no need to 
compute anything. 
3.3.3.2.2 COORDINATOR (OR PAN COORDINATOR) TO DEVICE 
Just as in a beacon-enabled PAN, the coordinator stores the message it wants to send and waits for the concerned device to request the data. 
However, in this case, the coordinator is not sending any beacons and thus cannot indicate that data are pending. This is the device itself 
which, at a software defined rate, sends data request commands. On reception of such a command and if data are actually pending for the 
requesting device, then the coordinator first sends an acknowledgment in which the frame pending bit is set to one and then sends the data 
frame.  For each captured data frame, the scanner can infer that an indirect transmission scheme has been used if the recipient has been 
sending a data request command just before receiving the data frame. 
When the indirect transmission mechanism has not been identified, then the coordinator directly sends its data frame to the recipient device 
3.3.4 VERSION OF THE IEEE 802.15.4 STANDARD 
Since its initial release in 2003, the IEEE 802.15.4 standard has been revised two times. In this project, we only focused on the 2003 and 
the 2006 versions of the standard as the 2011 version does not affect any features we implemented in the scanner. Thus, from the scanner 
point of view, there are only two possibilities: 2003 and 2006 or higher. 
Moreover, the IEEE 802.15.4-2006 standard states that, excluding two minor cases, all unsecured frames are compatible with IEEE 
802.15.4-2003 standard. However, it also stipulates that secured frames are differently formatted and thus incompatible. When this is the 
case, a 2-bit field called frame-version is set to 0x1 in the corresponding frame. Thus, when dealing with such version-specific frames, the 
auditor needs to infer the version of the standard they are compliant with before trying to manipulate them. On that aspect, the scanner 
retrieves, when necessary (i.e., when security is enabled), the frame version simply by reading the corresponding fields of the given frame. 
3.3.5 SECURITY POLICY 
As explained before, depending on the standard version the secured frames are compliant with, they are formatted in a different manner. In 
this section we first describe here the low-level security mechanism for both 2003 and 2006 versions of the standard and then we explain 
how the scanner can, to a certain extent, infer the security policy which has been used by the originator to secure each captured frame.  
3.3.5.1 IEEE 802.15.4-2003 SECURITY POLICIES 
In IEEE 802.15.4-2003 standard, frames can be secured according to three transformation processes: CTR, CBC-MAC or CCM. CCM is 
block cipher mode combining the CTR encryption mode with the CBC-MAC authentication mode, providing both encryption and 
authentication. As for the IEEE 802.15.4 standard, the block cipher shall be the advanced encryption standard (AES)-128. 
CBC-MAC and CCM can be leveraged such as they can provide each one three levels of data authenticity (MIC-32, MIC-64 or MIC-128). 
While CBC-MAC provides nothing but authenticity, CTR and CCM always provide confidentiality. In all, IEEE 802.15.4-2003 standard 
provides seven security levels to protect frames. Contrary to the IEEE 802.15.4 standard, secured frames compliant with the IEEE 
802.15.4-2003 standard do not include in their header any information about which security protection has been processed by the 
originator. Thus, devices must know in advance which security policies are used by all devices. 
CTR and CCM require a 13-octets sized nonce to perform security. It is formatted as the combination of the extended source address, the 
frame counter and the key sequence counter, a counter which can be used, for instance, when the frame counter is exhausted. Of course, 
both the originator and the recipient devices shall use the same nonce. Thus, each outgoing secured frames shall include in their header the 
frame counter and the key sequence counter formerly used by the originator to secure the frame.  
3.3.5.2 IEEE 802.15.4-2006 SECURITY POLICIES 
The IEEE 802.15.4-2006 standard states that frames shall be secured according to the transformation process known as CCM*. It is a 
generic combined encryption and authentication bloc cipher mode. The standard also specifies that the block cipher to be used is the 
advanced encryption standard (AES)-128. 
CCM* can be leveraged such as it can provide up to seven kind of frame protection, allowing for varying levels of data authenticity and for 
optional data confidentiality. In order to the recipient device to know which unsecuring process to perform, all outgoing secured frames 
shall provide in their header the proper security level used by the originator to protect the frame.  
CCM* also requires a nonce to process security. The nonce is a 13-octets string and is formatted as the combination of the extended source 
address, the frame counter and the security level. As for the security level, each outgoing secured frame shall provide in its header the 
frame counter which has been used by the originator during the securing process. Note that the extended addresses do not have to be 
included in secured frames because they may have been retrieved by recipient devices in previous transfers, making them able to infer the 
extended addresses from the short ones.   
3.3.5.3 SECURITY POLICY IDENTIFICATION 
As explained before, in the IEEE 802.15.4-2006 standard, the security policy used for protecting a frame is indicated in the header of the 
concerned frame through the value of the security level field. Thus, when dealing with such frames, the scanner just have to read the 
corresponding field to retrieve the security policy. The security level is then added as a parameter in the corresponding transmission 
instance.  
As for the IEEE 802.15.4-2003 standard, security level by which a frame has been secured is not provided to the recipient. In fact, the 
device shall know in advance which unsecuring process to use. When such a frame is captured, the scanner does nothing but storing the 
frame in the database, either in an appropriate existing transmission instance or in a new one. 
However, at the end of a scan, if requested by the user, the scanner will try to unsecure the frames for transmission instances that specify 
that security was enabled. If appropriate, the scanner will also try to guess the security policy in the process. The steps used to unsecure 
frames are the following: 
The scanner first asks the user to provide an encryption key. Then, it tries to unsecure the buffered frames (a maximum number 
can be defined by user), using every security policy of the IEEE 802.15.4-2003 standard if the frame-version parameter specifies 
an IEEE 802.15.4-2003 frame or using the single IEEE 802.15.4-2006 security policy specified by the value of the security-level 
parameter stored during the scan. 
When a decrypted payload appears to be a valid one (either the header of a valid higher layer protocol is recognized or a low 
entropy is computed), and/or a MIC can be recovered, a parameter called security-found is set to true in the transmission instance. 
If the frame-version parameter of the transmission instance specifies IEEE 802.15.4-2003 frames, the retrieved security-level is 