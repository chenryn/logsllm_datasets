title:TrafficSliver: Fighting Website Fingerprinting Attacks with Traffic
Splitting
author:Wladimir De la Cadena and
Asya Mitseva and
Jens Hiller and
Jan Pennekamp and
Sebastian Reuter and
Julian Filter and
Thomas Engel and
Klaus Wehrle and
Andriy Panchenko
TrafficSliver: Fighting Website Fingerprinting Attacks with
Traffic Splitting
Wladimir De la Cadena‚àó
University of Luxembourg
PI:EMAIL
Jan Pennekamp
RWTH Aachen University
PI:EMAIL
Thomas Engel
University of Luxembourg
PI:EMAIL
Asya Mitseva‚àó
Brandenburg Technical University
PI:EMAIL
Sebastian Reuter
RWTH Aachen University
PI:EMAIL
Jens Hiller
RWTH Aachen University
PI:EMAIL
Julian Filter
RWTH Aachen University
PI:EMAIL
Klaus Wehrle
RWTH Aachen University
PI:EMAIL
Andriy Panchenko
Brandenburg Technical University
PI:EMAIL
ABSTRACT
Website fingerprinting (WFP) aims to infer information about the
content of encrypted and anonymized connections by observing
patterns of data flows based on the size and direction of packets. By
collecting traffic traces at a malicious Tor entry node ‚Äî one of the
weakest adversaries in the attacker model of Tor ‚Äî a passive eaves-
dropper can leverage the captured meta-data to reveal the websites
visited by a Tor user. As recently shown, WFP is significantly more
effective and realistic than assumed. Concurrently, former WFP
defenses are either infeasible for deployment in real-world settings
or defend against specific WFP attacks only.
To limit the exposure of Tor users to WFP, we propose novel
lightweight WFP defenses, TrafficSliver, which successfully counter
today‚Äôs WFP classifiers with reasonable bandwidth and latency
overheads and, thus, make them attractive candidates for adoption
in Tor. Through user-controlled splitting of traffic over multiple
Tor entry nodes, TrafficSliver limits the data a single entry node
can observe and distorts repeatable traffic patterns exploited by
WFP attacks. We first propose a network-layer defense, in which we
apply the concept of multipathing entirely within the Tor network.
We show that our network-layer defense reduces the accuracy from
more than 98% to less than 16% for all state-of-the-art WFP attacks
without adding any artificial delays or dummy traffic. We further
suggest an elegant client-side application-layer defense, which is
independent of the underlying anonymization network. By sending
single HTTP requests for different web objects over distinct Tor
entry nodes, our application-layer defense reduces the detection
rate of WFP classifiers by almost 50 percentage points. Although it
offers lower protection than our network-layer defense, it provides
‚àóBoth are first authors, supervised by Andriy Panchenko. Further details in Appendix C.
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior specific permission
and/or a fee. Request permissions from permissions@acm.org.
CCS ‚Äô20, November 9‚Äì13, 2020, Virtual Event, USA
¬© 2020 Copyright held by the owner/author(s). Publication rights licensed to ACM.
ACM ISBN 978-1-4503-7089-9/20/11...$15.00
https://doi.org/10.1145/3372297.3423351
a security boost at the cost of a very low implementation overhead
and is fully compatible with today‚Äôs Tor network.
CCS CONCEPTS
‚Ä¢ Security and privacy ‚Üí Pseudonymity, anonymity and un-
traceability; ‚Ä¢ Networks ‚Üí Network privacy and anonymity.
KEYWORDS
Traffic Analysis; Website Fingerprinting; Privacy; Anonymous Com-
munication; Onion Routing; Web Privacy
ACM Reference Format:
Wladimir De la Cadena, Asya Mitseva, Jens Hiller, Jan Pennekamp, Sebastian
Reuter, Julian Filter, Thomas Engel, Klaus Wehrle, and Andriy Panchenko.
2020. TrafficSliver: Fighting Website Fingerprinting Attacks with Traffic
Splitting. In Proceedings of the 2020 ACM SIGSAC Conference on Computer and
Communications Security (CCS ‚Äô20), November 9‚Äì13, 2020, Virtual Event, USA.
ACM, New York, NY, USA, 15 pages. https://doi.org/10.1145/3372297.3423351
1 INTRODUCTION
Nowadays, mass surveillance and Internet censorship have become
extremely alarming as billions of people rely on the Internet as
their primary source of information. Several methods for anony-
mous communication have been designed and developed to im-
prove online privacy and enable users to retain control over their
data [24, 46]. The main goals of these tools are to hide the identity
(i.e., IP address) of Internet users, and to prevent third parties from
linking communicating partners. However, as real-world adoption
of such systems requires acceptable performance to handle mod-
ern real-time applications, only a few of these tools have reached
widespread deployment. Currently, Tor [11, 12] is the most popular
anonymization network [40], designed particularly for low-latency
applications, e.g., web browsing. To hide its identity, each Tor user
runs onion proxy (OP) software, and creates a virtual tunnel, circuit,
to its destination through a chain of three volunteer nodes, called
onion relays (ORs). Based on their position in the circuit, the ORs
are known as entry, middle, and exit, and each of these knows its
predecessor and its successor only. The user data is then encrypted
in multiple layers (where each of the ORs can remove only a single
layer of encryption) and encapsulated in chunks of a fixed size,
called cells. Thus, Tor ensures that none of the ORs in the circuit
knows the user and its destination at the same time [11].
Due to its popularity, Tor has become an attractive target for
attacks. Although Tor promises to hide the relationship between the
user and its communication partner from a local passive observer,
e.g., a malicious entry OR ‚Äî one of the weakest adversaries in the at-
tacker model of Tor [12] ‚Äî Tor cannot conceal the number, direction,
and timing of transmitted packets. An attacker can exploit this leak-
age to conduct website fingerprinting (WFP) [5, 19, 34, 44, 47]. WFP
is a special type of traffic analysis attack, which aims to identify the
content (i.e., the visited website) of anonymized user connections
by passively observing patterns of data flows. Over the years, mul-
tiple studies have systematically shown the continuously improved
effectiveness of WFP attacks [19, 34, 44, 47] and their applicability
in real-world settings [42, 45]. In response, a major line of research
has focused on designing defenses against WFP attacks [6, 7, 23, 50].
Nevertheless, none of these has been adopted in Tor due to their
unacceptably high bandwidth and latency overhead [6, 7, 13] or
proven inefficiency against state-of-the-art WFP attacks [26, 44].
The growing number of powerful WFP attacks and the lack of
effective and feasible WFP defenses highlight the need to design
easily-deployable and efficient countermeasures against WFP. In
this paper, we propose two novel lightweight WFP defenses, called
TrafficSliver, which successfully counter today‚Äôs WFP classifiers
with reasonable bandwidth and latency overheads and, thus, make
them attractive candidates for adoption in Tor. In contrast to former
WFP defenses that rely mainly on padding and delaying user traffic,
our TrafficSliver defenses are based on user-controlled splitting
of traffic over multiple entry ORs without inserting any artificial
delays or dummy traffic. Our main goals are to limit the data a
single entry node can observe, and to destroy repeatable traffic
patterns exploited by state-of-the-art WFP attacks. We first intro-
duce our network-layer defense, in which we apply the concept
of multipathing entirely within Tor, i.e., the user traffic is sent via
several Tor paths containing distinct entry ORs. We implement our
network-layer defense in the existing Tor software and show its
feasibility and possible incremental deployment in practice. Second,
we suggest our elegant client-side application-layer defense that
works completely independently of the underlying anonymization
network. We demonstrate that it supports two modes of operation
by (ùëñ) sending single HTTP requests for different web objects over
distinct Tor entry ORs or (ùëñùëñ) requesting different fractions of a
single web object via different Tor paths. To achieve the latter mode
of operation, we exploit the range option in the HTTP protocol to
create multiple outgoing HTTP requests for a single resource.
Alongside fulfilling the requirements of being easy deployable
and efficient in terms of bandwidth and latency overhead, another
main challenge to be addressed by our defenses is the selection
of an effective traffic-splitting strategy. The latter ensures that a
single malicious entry OR can observe only a limited portion of user
traffic, which is not sufficient to perform WFP. As shown in [25],
a basic splitting scheme, such as round robin, does not provide
an adequate level of security against WFP. Thus, we explore the
resistance of advanced traffic-splitting strategies against WFP.
The contributions of our paper are as follows:
(1) We design two novel lightweight WFP defenses, TrafficSliver,
based on the idea of traffic splitting over multiple entry ORs.
While our network-layer defense realizes the concept of mul-
tipathing entirely within Tor, our application-layer defense
distributes (fragments of) single HTTP requests over several
Tor paths. Both defenses insert neither artificial delays nor
dummy traffic and, thus, are efficient in practice.
(2) We explore several traffic-splitting strategies, which can
serve as candidates for adoption in our defenses. In particu-
lar, we analyze the efficiency of these strategies against mod-
ern WFP attacks by conducting simulative and real-world
evaluations with four state-of-the-art WFP classifiers.
(3) We conduct an extensive analysis to prove the effectiveness
of our TrafficSliver defenses. We show that our network-
layer defense provides better protection than prior WFP
defenses on a state-of-the-art dataset by achieving a classifi-
cation accuracy below 16% while being significantly more
efficient with respect to bandwidth and latency overhead. We
further show that our elegant application-layer defense out-
performs WTF-PAD (the former most favored low-overhead
defense) in terms of the attacker‚Äôs performance while dra-
matically reducing implementation overhead.
2 THREAT MODEL
Despite the encapsulation of user data in cells of equal size, Tor still
cannot conceal meta-data such as number, direction, and timing of
transmitted packets. An adversary can passively exploit this side-
channel leakage and mount website fingerprinting [5, 19, 34, 44, 47].
WFP usually corresponds to a supervised machine learning (ML)
problem, in which the adversary (1) defines a set of websites to
be detected and (2) collects traces of multiple page loads for each
of them. The adversary (3) analyses the collected traces to extract
possibly expressive patterns, i.e., features, used to create a finger-
print for each website. Then, (4) ML is applied to train a classifier
with the fingerprints in order to create a classification model, i.e.,
a representation that is able to map an unknown fingerprint to
a previously-predefined class of fingerprints. Finally, the adver-
sary (5) uses the generated model to identify the visited website,
corresponding to an unknown trace of a real user.
A WFP attack is typically analyzed in two threat models, closed
and open world. In a closed-world scenario, the user is allowed to
visit a limited set of websites and the attacker has patterns for all
these websites. Although this scenario is not realistic, it is appro-
priate for comparing and analyzing the performance of different
WFP classifiers. The open-world scenario reflects a more realistic
threat model, in which the attacker has fingerprints for websites of
interest only (foreground) and the user can visit an unlimited set of
websites (background). Like related work [19, 44, 47], we assume
that the adversary can detect the start and the end of each page
load and each site in our analysis is represented by its index page.
In this work, we assume the attacker to be a passive observer
that does not decrypt, modify, or interrupt transmitted packets.
The attacker has a limited view of the Tor network by controlling
a restricted number of entry ORs. Thus, he can monitor traffic
exchanged with a Tor user and is aware of the user‚Äôs identity, but
does not know which website the user is visiting. Moreover, we
assume that the adversary has sufficient computational power to
train several fingerprinting techniques on large training datasets.
3 RELATED WORK
We briefly review previously proposed WFP attacks and defenses.
WFP Attacks. In 2011, Panchenko et al. [35] are the first to show
the feasibility of WFP to deanonymize Tor users. They achieve an
accuracy of almost 55% by using a novel set of features based on
volume, time, and direction of transmitted packets and applying a
Support Vector Machine (SVM) classifier. The authors are also the
first to explore the scalability of WFP in an open-world scenario and
achieve a true positive rate (TPR) of up to 73% and a false positive
rate (FPR) of 0.05%. Thus, the work prompted a significant amount
of further research in the field of WFP [8, 13, 48].
In 2014, Wang et al. [47] suggest a new k-Nearest Neighbor
(k-NN) classifier, which achieves an accuracy of 91% (100 pages,
closed world) and a TPR of 85% for a FPR of 0.6% using more than
5,000 background pages in open world. Juarez et al. [22] criticize
several unrealistic assumptions made by previous works and show
the negative impact of multitab browsing, constantly changing
web content, and the use of different Tor Browser [39] versions for
training and testing on the accuracy of WFP attacks. Wang and
Goldberg [49] revisit some of these assumptions and show how the
attacker can efficiently keep the training data up to date.
In 2016, Panchenko et al. [34] collect the first comprehensive
dataset to evaluate WFP at Internet scale. They propose a new clas-
sifier, CUMUL, which outperforms existing methods both in terms
of recognition rate and computational complexity. The authors
show that while no existing WFP attack scales when applied in
realistic settings, fingerprinting websites, i.e., a set of pages served
under the same domain, scales significantly better than webpage
fingerprinting. Another concurrent WFP classifier, k-FP [19], relies
on a random decision forest to create fingerprints of pages, and
k-NN for the classification itself. The accuracy achieved by k-FP is
similar to that obtained by CUMUL. Other works [7, 19, 52] analyze
different methods to rank WFP features by their importance.
Recently, several works have applied deep learning (DL) methods.
Contrary to the traditional classifiers described above, these do
not require manual feature engineering. Rimmer et al. [43] show
that automatically created features are more robust in the face of
constantly changing web content. Sirinam et al. [45] focus on other
DL methods to deal with changing content. Other works [2, 5, 33]
further explore the applicability of DL for WFP. Sirinam et al. [44]
present the most powerful WFP attack, deep fingerprinting (DF),
which is an improved design of the Convolutional Neural Networks
(CNN) classifier. DF achieves an accuracy of more than 95% for
both the closed-world (95 URLs) and the open-world (20,000 URLs)
scenarios while requiring a relatively small set of training traces.
WFP Defenses. Existing WFP countermeasures can be catego-
rized into network-layer and application-layer defenses [6].
Network-layer Defenses. Liberatone and Levine [27] explore dif-
ferent padding schemes on a per-packet level as a basic WFP de-
fense. Wright et al. [51] use traffic morphing to mimic the trace
of another page. However, neither padding nor traffic morphing
defend against WFP [13, 19]. Buffered Fixed-Length Obfuscation
(BuFLO) [13] obfuscates page transmissions by sending packets of
a fixed size at a fixed interval for a certain period of time. Thus,
the traffic generated by different websites has a similar continu-
ous data flow. However, besides its high latency and bandwidth
overhead, BuFLO cannot respond to congestion and may even re-
veal the total transmission size [6, 8]. Thus, Cai et al. [6] propose
Congestion-Sensitive BuFLO (CS-BuFLO) that varies the rate of
packet transmissions. Tamaraw [7] uses smaller fixed packet sizes
and treats incoming and outgoing packets differently to avoid un-
necessary padding and dummy traffic. However, the large overhead
created by these defenses hinders their real-world adoption.
WTF-PAD [23] further reduces the latency and bandwidth over-
head created by the prior defenses. It relies on predefined his-
tograms of packet inter-arrival times to detect time gaps between
packets and covers them by adding dummy packets. To obscure
traffic bursts, it adds statistically-unlikely delays between packets.
Due to its low overhead, WFP-PAD is the most favored defense for
adoption in Tor [17, 31]. However, Sirinam et al. [44] showed the
inefficiency of WFP-PAD against their DF classifier by achieving
over 90% accuracy. Li et al. [26] also confirm the high information