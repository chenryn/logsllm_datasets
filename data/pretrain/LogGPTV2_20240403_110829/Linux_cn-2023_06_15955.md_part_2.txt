```
对于 Ubuntu/Debian 用户：
```
sudo apt remove i3lock
```
完成后，你可以使用 AUR 包管理器安装 `i3lock-color`：
```
yay i3lock-color
```
如果你使用的是基于 Ubuntu 的系统，你需要从头编译它。你可以在他们的 GitHub 页面上找到 [详细的说明](https://github.com/Raymo111/i3lock-color)。
安装完成后，让我们创建一个新目录并创建一个新文件来存储锁屏界面的配置：
安装好 `i3lock-color` 后，你可以创建一个新目录并创建一个新文件来存储锁屏界面的配置：
```
mkdir ~/.config/scripts && nano ~/.config/scripts/lock
```
将以下文件内容粘贴到文件中，定义锁屏界面的样式：
```
#!/bin/sh
BLANK='#00000000'
CLEAR='#ffffff22'
DEFAULT='#00897bE6'
TEXT='#00897bE6'
WRONG='#880000bb'
VERIFYING='#00564dE6'
i3lock \
--insidever-color=$CLEAR     \
--ringver-color=$VERIFYING   \
\
--insidewrong-color=$CLEAR   \
--ringwrong-color=$WRONG     \
\
--inside-color=$BLANK        \
--ring-color=$DEFAULT        \
--line-color=$BLANK          \
--separator-color=$DEFAULT   \
\
--verif-color=$TEXT          \
--wrong-color=$TEXT          \
--time-color=$TEXT           \
--date-color=$TEXT           \
--layout-color=$TEXT         \
--keyhl-color=$WRONG         \
--bshl-color=$WRONG          \
\
--screen 1                   \
--blur 9                     \
--clock                      \
--indicator                  \
--time-str="%H:%M:%S"        \
--date-str="%A, %Y-%m-%d"       \
--keylayout 1                \
```
保存更改并退出文本编辑器。
> 
> ? 在网上可以找到各种不同的 i3 锁屏样式的 bash 脚本。这只是一个示例，对于大多数情况来说是一个较为简单的选项。
> 
> 
> 
现在，使用 [chmod 命令](https://linuxhandbook.com/chmod-command/) 将该文件设置为可执行文件：
```
sudo chmod +x .config/scripts/lock
```
接下来，你需要对配置文件进行一些更改，以添加该配置文件的路径以使其生效。
此外，我将向你展示如何使用自定义键盘快捷键锁定屏幕。
首先，打开配置文件：
```
nano ~/.config/i3/config
```
使用 `Alt + /` 跳至行尾并粘贴以下内容：
```
# 锁屏快捷键
bindsym $mod+x exec /home/$USER/.config/scripts/lock
```
在上面的示例中，我将 `mod + x` 作为锁定屏幕的快捷键，你可以选择任何你喜欢的快捷键。
最后的配置文件将如下所示：
![如何在 Arch Linux 中使用 i3lock-color](/data/attachment/album/202306/30/102858rkjukk79wzkwy865.png)
相当不错，不是吗？
### 在 i3 窗口管理器中更改主题和图标
我知道你可能会想到这个问题。
你为什么需要图标呢？你并不仅仅使用窗口管理器来使用命令行工具。
有时候，使用图形界面更加方便，比如使用文件管理器。所以，在处理这些工具时，你希望界面看起来更好看？
因此，在本部分中，我将向你展示：
* 如何在 i3 中更改主题
* 如何在 i3 中更改图标
让我们从安装主题开始。
在这里，我将使用 `materia-gtk-theme` 和 `papirus` 图标，但你可以使用任何你喜欢的主题和图标。
在 Arch 中安装主题，使用以下命令：
```
sudo pacman -S materia-gtk-theme papirus-icon-theme
```
在 Ubuntu/Debian 系统中：
```
sudo apt install materia-gtk-theme papirus-icon-theme
```
但仅仅安装还不能完成任务。**你需要像使用 GNOME “ 调整   Tweaks ” 应用更改主题一样来应用主题。**
**在 i3 中，你可以使用 `lxappearance` 工具** 来更改主题和图标。
在 Arch 中安装 `lxappearance`，使用以下命令：
```
sudo pacman -S lxappearance
```
在 Ubuntu/Debian 系统中：
```
sudo apt install lxappearance
```
安装完成后，使用 `Mod + d` 启动 D 菜单，然后输入 `lxappearance`，并在第一个结果上按回车键。
在这里，选择你喜欢的主题。我这里选择 `Materia-dark`。
选择主题后，点击应用按钮以应用更改：
![](/data/attachment/album/202306/30/102858o9c9o59k9zk7c9ia.png)
同样地，要更改图标，选择 “ 图标主题   Icon Theme ”，选择图标主题，然后点击应用按钮：
![使用 lxappearance 更改 i3 窗口管理器中的图标](/data/attachment/album/202306/30/102859pfgywww1a6yfswg9.png)
应用主题和图标后，我的文件管理器如下所示：
![在 i3 窗口管理器中更改主题和图标](/data/attachment/album/202306/30/102859dsg97i9ngxxgza5o.png)
### 在 i3 窗口管理器中为工作区设置图标
默认情况下，工作区仅由数字表示，这并不是你想要使用工作区的最理想方式。
因此，在本部分中，我将引导你如何使用合适的图标更改工作区的名称。
为了在配置文件中使用图标，首先你需要安装名为 `Awesome` 的新字体：
对于基于 Arch 的发行版：
```
sudo pacman -S ttf-font-awesome
```
对于 Ubuntu/Debian 系统：
```
sudo apt install fonts-font-awesome
```
安装完成后，打开 i3 配置文件：
```
nano ~/.config/i3/config
```
在这个配置文件中，找到工作区的部分，你将会看到为每个工作区给出的变量：
![在 i3 配置文件中的工作区变量](/data/attachment/album/202306/30/102931n80bo8eowvszz040.png)
在这个部分，你需要用你想要的名称替换给出的工作区数字。
我将把第一个工作区命名为 “programs”，因为**在本教程的后面部分，我将展示如何将特定的应用程序分配到特定的工作区。**
我主要使用前 5 个工作区，所以我会相应地命名它们：
```
# 定义默认工作区的名称，稍后我们将在其中配置键绑定。
# 我们使用变量来避免在多个地方重复使用名称。
set $ws1 "1: Terminal"
set $ws2 "2: Firefox"
set $ws3 "3: VMWare"
set $ws4 "4: Spotify"
set $ws5 "5: Shutter"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"
```
现在让我们为配置文件中提到的每个应用程序添加图标。
你可以 [参考 awesome 字体的备忘单](https://fontawesome.com/v5/cheatsheet) 来找到合适的图标。
将图标复制粘贴到名称前面：
```
# 定义默认工作区的名称，稍后我们将在其中配置键绑定。
# 我们使用变量来避免在多个地方重复使用名称。
set $ws1 "1:  Terminal"
set $ws2 "2:  Firefox"
set $ws3 "3:  VMWare"
set $ws4 "4:  Spotify"
set $ws5 "5:  Shutter"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"
```
不要担心它看起来可怕！
完成后，使用 `Mod + e` 退出 i3，然后再次登录以应用你刚刚所做的更改。
我的效果如下图所示：
![](/data/attachment/album/202306/30/102931wsbrrwobbm2s5i2t.png)
字体看起来太小？是时候解决这个问题了！
### 在 i3 中更改标题窗口和状态栏的字体
首先，让我们安装新的字体（我将在这里使用 Ubuntu 字体）。
要在 Arch 上安装 Ubuntu 字体，请执行以下操作：
```
sudo pacman -S ttf-ubuntu-font-family
```
如果你使用的是 Ubuntu，你已经安装了这些字体！
安装完成后，打开配置文件：
```
nano ~/.config/i3/config
```
在配置文件中，找到 `font pango:monospace 8` 这一行，这是默认字体。
找到那行后，添加字体名称和大小，如下所示：
```
font pango:Ubuntu Regular 14
```
然后，使用 `Mod + Shift + r` 重新启动窗口管理器，这样就完成了工作：
![](/data/attachment/album/202306/30/102931i7k5o1z5ovxfrx5n.png)
### 在 i3 窗口管理器中分配应用程序到工作区
在给工作区命名之后，你会想要将特定的软件分配到相应的工作区中。
例如，如果我将第二个工作区命名为 “Firefox”，那么我只想在该工作区中使用 Firefox。
那么要如何实现呢？
为了做到这一点，你需要找到每个要分配的应用程序的类名。
**听起来复杂？** 让我告诉你如何做。
首先，将应用程序和终端并排打开。例如，在这个例子中，我将 Firefox 和终端并排打开：
![并排打开应用程序和终端](/data/attachment/album/202306/30/102932vow0ggvqzfqtvdzt.png)
现在，在终端中执行 `xprop` 命令，它会改变鼠标指针的形状：
```
xprop
```
接下来，将鼠标悬停在应用程序上，并在应用程序窗口内的任何位置单击，如图所示：
![在 i3 窗口管理器中查找类名](/data/attachment/album/202306/30/102933fupn6zuuu5skil5n.gif)
类名将在以下行的最后一个字符串中找到：
```
WM_CLASS(STRING) = "Navigator", "firefox"
```
在我的情况下，Firefox 浏览器的类名将是 `firefox`。
对所有你想要分配到工作区的应用程序重复这个过程。
**一旦你知道每个你想要分配到工作区的应用程序的类名，打开配置文件：**
```
nano ~/.config/i3/config
```
使用 `Alt + /` 将 `nano` 定位到文件末尾，并使用以下语法将应用程序分配到工作区：
```
# 分配应用到工作区
for_window [class="类名"] move to workspace $[工作区变量]
```
作为参考，下面是我为不同应用程序分配了 4 个工作区后的配置文件示例：
![将应用分配到工作区](/data/attachment/album/202306/30/102933xs34z04so04ec9im.png)
现在，无论在哪个工作区打开任何应用程序，它都会自动放置在配置的工作区中。非常方便！ ?
### 在 i3 窗口管理器中让终端变透明
要启用透明效果，你需要安装 `picom` 合成器并对配置文件进行一些更改。