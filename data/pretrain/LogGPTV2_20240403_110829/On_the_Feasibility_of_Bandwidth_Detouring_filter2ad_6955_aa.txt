title:On the Feasibility of Bandwidth Detouring
author:Thom Haddow and
Sing Wang Ho and
Jonathan Ledlie and
Cristian Lumezanu and
Moez Draief and
Peter R. Pietzuch
On the Feasibility of Bandwidth Detouring
Thom Haddow1, Sing Wang Ho1, Jonathan Ledlie2,
Cristian Lumezanu3, Moez Draief1, and Peter Pietzuch1
1 Imperial College London, United Kingdom
2 Nokia Research Center, Cambridge, MA, USA
3 Georgia Institute of Technology, Atlanta, GA, USA
Abstract. Internet applications that route data over default Internet
paths can often increase performance by sending their traﬃc over alter-
native “detour” paths. Previous work has shown that applications can
use detour routing to improve end-to-end metrics such as latency and
path availability. However, the potential of detour routing has yet to be
applied where it may be most important: improving TCP throughput.
In this paper, we study the feasibility of bandwidth detouring on
the Internet. We ﬁnd that bandwidth detours are prevalent: between
152 Planetlab nodes, 74.8% of the paths can beneﬁt from detours with
at least 1 Mbps and 20% improvement. To understand how to exploit
bandwidth detours in practice, we explore the trade-oﬀs between network-
and transport-level mechanisms for detouring. We show, both analyti-
cally and experimentally,
routing
improves TCP throughput more than encapsulated, IP-based tunneling,
although the latter provides a more natural interface.
that direct, TCP-based detour
1 Introduction
The Internet was designed for best-eﬀort data communication. It is limited to a
basic role—to provide connectivity—and does not guarantee good path perfor-
mance between hosts in terms of latency, bandwidth or loss. Not surprisingly,
direct end-to-end routing paths may be more congested, longer, or have lower
bandwidth than necessary. To overcome these ineﬃciencies and improve net-
work performance, distributed applications can use detour routing [17]. Detour
routing constructs custom paths by concatenating multiple network-level routes
using an overlay network.
Existing proposals use detour routing to improve latency [13] and availabil-
ity [1,3]. However, an important potential beneﬁt of detour routing—improving
end-to-end bandwidth—is still unrealised. Bandwidth is critical for many In-
ternet applications. For example, emerging data-intensive applications, such as
HD video streaming and content-on-demand systems, require consistently high
bandwidth in order to operate eﬀectively. Further, as enterprises begin to store
their data in “cloud” data centres, access to high throughput paths is critical.
Discovering and exploiting bandwidth detours is challenging. Unlike latency or
path availability, bandwidth is more expensive to measure. Bandwidth measure-
ment tools generally require many probes of diﬀering sizes sent over long periods
N. Spring and G. Riley (Eds.): PAM 2011, LNCS 6579, pp. 81–91, 2011.
c(cid:2) Springer-Verlag Berlin Heidelberg 2011
82
T. Haddow et al.
of time [5,18]. Available bandwidth also varies with the volume of cross-traﬃc
on the path: measurements must be done not just once, but continuously.
In this paper, we study the feasibility of bandwidth detouring and lay the
groundwork for a general Internet detouring platform for bandwidth. We explore
the variability of bandwidth measurements and the properties of detour paths.
Our measurements on the PlanetLab testbed show that 74.8% of the paths can
beneﬁt from at least 20% and 1 Mbps bandwidth increase. Bandwidth detours
are often symmetric, beneﬁting both forward and reverse paths at the same time,
and last for more than 90 minutes.
To understand how to build a bandwidth detouring platform, we investigate
the trade-oﬀ between network- and transport-level mechanisms for detour rout-
ing and the relationship between detours for diﬀerent path metrics. We pro-
vide evidence, both analytically and experimentally, that TCP-based detouring,
rather than IP detouring, achieves better performance. In addition, we show that
employing cheaper latency probes to ﬁnd bandwidth detours is not eﬀective.
The rest of the paper is organised as follows. In §2 we review related work. We
consider Internet bandwidth measurement and analyse properties of bandwidth
detour paths in §3. In §4 we propose how detour paths can be exploited. We
conclude in §5.
2 Related Work
Routing overlay networks exploit detours to improve the performance and ro-
bustness of packet delivery [1,13,3,15]. They delegate the task of selecting paths
to applications, which can choose paths that are more reliable, less loaded,
shorter, or have higher bandwidth than those selected by the network.
Gummadi et al. [3] found that path failures occur frequently, but can be circum-
vented through random detours. iPlane [15] uses measurements from PlanetLab
nodes to build a structural map of the Internet that predicts path performance
properties, such as latency, bandwidth and loss. While this previous work focused
on path availability and end-to-end latency, our focus is on bandwidth.
Prior research has studied bandwidth-aware overlay routing. Lee et al. [11] de-
scribe BARON, a method for switching to an overlay path with higher available
bandwidth. It relies on periodic all-to-all network capacity measurements, which
are less transient than available bandwidth measurements. When searching for
possible alternative paths, BARON uses high capacity to infer potential for high
available bandwidth on a path. Since evaluation results are simulated, it is un-
clear how a deployment would perform. In contrast, we evaluate the discrepancy
between predicted and measured bandwidth on a live system.
Zhu et al. [19] propose an overlay-based approach for selecting a path with
high available bandwidth; because their focus is on fairly small networks, they
re-measure bandwidth to a large fraction of the network with each path adjust-
ment, which is not scalable. Jain et al. [6] are able to implicitly learn available
bandwidth through a video streaming application; they disseminate this infor-
mation through a link-state protocol with limited scalability.
Bandwidth Detouring on the Internet
83
Split-TCP [7] improves end-to-end throughput by establishing a relay between
the two endpoints of a TCP connection. Its beneﬁts have been thoroughly stud-
ied in many domains, especially for mobile devices [8]. While our approach for
TCP bandwidth detouring beneﬁts from splitting TCP connections, the bulk of
improvements result from carefully choosing the right detour nodes (cf. §4).
3 Detour Properties
In this section, we use measurements to demonstrate the existence of bandwidth
detours. We show that most measured paths could beneﬁt from detours with
higher bandwidth. We also investigate how bandwidth detours change over time
and how they compare with latency detours.
PlanetLab. We use PlanetLab to demonstrate the feasibility of bandwidth de-
touring. Nodes are selected from independent sites to maximise path diversity
and avoid known bandwidth restrictions. We created a list of 256 nodes with a
bandwidth cap higher than 10 Mbps on May 3rd, 2010. Some experiments used
fewer nodes due to node failures or bandwidth limits on PlanetLab. In these
cases, we state the actual number of used nodes in the text.
UkairoLab. To circumvent the above limitations and validate measurement re-
sults, we also use our own UkairoLab testbed hosted on corporate and university
machines. It consists of 10 geographically-dispersed nodes located in the US, In-
dia, Kenya, UK and France. Their network connectivity is provided by commer-
cial hosting companies, which results in a lower median bandwidth: 4.87 MBps
on UkairoLab versus 6.54 MBps on PlanetLab. Machines are virtualised but are
dedicated with full kernel access.
3.1 Bandwidth Measurement
To discover detour paths, we must measure a particular bandwidth metric. Since
our focus is on the TCP protocol, we consider bulk transfer capacity (BTC),
which is the steady-state throughput (in terms of successfully transmitted data
bits) of a TCP connection1. We measure BTC using the standard Iperf tool2,
which observes the throughput of an elastic TCP transfer. We deploy Iperf on
256 PlanetLab nodes and collect all-pairs measurements with a 5 second timeout.
We ensure that each node makes only one inbound and one outbound measure-
ment at any point in time. On average, each Iperf measurement takes 8 seconds
and consumes 10.8 MBytes.
To understand the variability of bandwidth measurements, we perform re-
peated measurements at 30 sec, 5 min, 30 min, and 1.5 hour intervals. To stay
1 We use the terms BTC, throughput and bandwidth interchangeably in this paper.
2 We explored the use of available bandwidth predictions tools such as Pathload [5] for
estimating BTC with lower measurement overhead. However, on average, Pathload
took 50 seconds to measure a path, which is too slow for a large deployment.
84
T. Haddow et al.
s
h
t
a
P
f
o
F
D
C
1.0
0.8
0.6
0.4
0.2
0.0
 0
s
h
t
a
P
f
o
F
D
C
1.0
0.8
0.6
0.4
0.2
0.0
 100
Direct Path (BTC)
One-Hop Detour
Two-Hop Detour
Unlimited-Hop Detour
 0
 20
 40
 60
 80
 100
Bandwidth (Mbps)
BTC after 30 sec
BTC after 5 min
BTC after 30 min
BTC after 90 min
 40
 20
 80
Variation in Bandwidth (%)
 60
Fig. 1. Bandwidth measurements vary sig-
niﬁcantly over time.
Fig. 2. Detouring via a node increases
bandwidth but more hops have little eﬀect.
within Planetlab’s 10 GB daily limit, 48 Planetlab nodes measure to 20 randomly-
chosen nodes within those 48 nodes. This is repeated three times at diﬀerent
times, measuring 920 paths. As Figure 1 shows, bandwidth can vary signiﬁ-
cantly, even when measured in quick succession, as conﬁrmed by others [12].
Approximately half of the paths have a 20% variation in bandwidth, regard-
less of when remeasured. This means that good bandwidth detours have to be
signiﬁcantly better to compensate for this variation.
3.2 Bandwidth Detouring
We want to understand how often traﬃc between two Internet hosts can ben-
eﬁt from a detour path with higher bandwidth than the direct path. Of the
20 323 successful BTC measurements between 152 PlanetLab nodes, we exam-
ined whether detour paths via another node have higher bandwidth. We consider
the bandwidth of a detour path as the minimum bandwidth of the paths between
the source and the detour node and the detour node and the destination.
Figure 2 shows the cumulative distribution of path bandwidth. We ﬁnd that
96.6% of all pairs of nodes have a detour path with higher bandwidth. The
median increase in path performance is 18.6 Mbps (i.e. a factor of 2.24). We also
noted 74.8% of the paths can improve by at least 20% and 1 Mbps. Because
detouring via one node can signiﬁcantly increase bandwidth, we also investigate
if additional detour nodes yield similar gains. As the ﬁgure shows and conﬁrmed
by Lee et al. [11], this is not the case and it provides only minimal additional
beneﬁts. We also observe that 40% of paths cannot beneﬁt from detours with
more than 10 Mbps bandwidth. This is likely because many PlanetLab paths
have 10 Mbps network capacity.
In Figure 3, we compare the relative improvement from bandwidth detouring
to latency and loss detouring, discovered by brute-force search. Bandwidth de-
touring has a signiﬁcantly larger gain: half the paths can double in bandwidth,
while only 13.5% of paths are half the average path latency. We measure loss by
s
h
t
a
P
f
o
F
D
C
1.0
0.8
0.6
0.4
0.2
0.0
Bandwidth Detours
Latency Detours
Loss Detours
1x 2x 3x 4x 5x 6x 7x 8x 9x 10x
Improvement
Bandwidth Detouring on the Internet
85
s
h
t
a
P
f
o
F
D
C
1.0
0.8
0.6
0.4
0.2
0.0
Detour Method
TCP (Measured)
TCP (Predicted)
IP (Measured)
IP (Predicted)
 0
 5
 10
 15
 20
Bandwidth Improvement (Mbps)
Fig. 3. Bandwidth can be improved signif-
icantly more than latency using detouring.
Fig. 4. TCP detouring improves actual
bandwidth between nodes
signiﬁcantly
more than IP detouring on UkairoLab.
sending 1200 UDP probes with a payload of 1472 bytes and an interval of 100 ms,
which is similar to the rate of VoIP connections [15]. Only 27.2% of paths beneﬁt
from detouring for loss because most paths suﬀer no loss at this low rate.
Why are there such a large number of good detour paths with higher band-
width? Previous studies show that latency detours are due to ISP routing poli-
cies [14], which we believe also cause bandwidth detours. We have preliminary
evidence that good detours can be found by avoiding one or more autonomous
systems (AS) in the default path: for 32% of the pairs of PlanetLab nodes, for
which we have complete AS paths, at least one AS in the direct path is avoided
more than half the time by the detour. For 29% of the pairs of nodes, the detour
paths traverse all the ASes on the direct path. These detours may be due to
Internet congestion or diﬀerences in intra-domain routing policies.
We expect that “similar” paths in terms of their AS-links would beneﬁt from
the same detour nodes. This idea has been exploited in latency detouring [4]—we
aim at exploring analogous mechanisms for bandwidth detouring. We leave
further investigation of this to future work.