原本的my_contacts表现在成
为义表，因为它的部分数据
已经移至新表，被称为….
my_contacts
contact_ido
子表
last_name
first_name
phone
interests
email
int_id 0
gender
birthday
interest
引用究整性，表示你只能把值
profession
contact_id
一放在子表的外键列中，而且外
city
键值已经存储在义表中。
state
status
seeking
你可以使用外键来引用父表中某个唯一的
值。
外键不一定必须是父表的主键，但必须有
唯一性。
当前位置
305
---
## Page 338
外键的重要性
为什么要找外键的麻烦？
好吧，我知道把兴趣抽出WY_contaets是唯一让查沟
更简单的方法。而且Regis真的需要一次感觉不错的
约会现在我真正需要的是如何创建一个带有外
键的表。
创建新表时你可以加入外键。
而且，你也可以用ALTERTABLE加人外键。语
法很简单，只需要知道父表的主键列名，当然还
要知道父表名。让我们创建带有外键contact_
id的interests表，父表为my_contacts。
没有盘问融
没有套问题
没有蠢问题
问：
当我把兴趣列抽离my_contacts后，我该怎么查询它们呢？
式真的很简单。现在，我们只需要重新设计my_contacts，让查询简单且效
率。
306
第7章
---
## Page 339
多张表的数据库设计
创建带有外键的表
知道为何需创建一个具有约束的外键后，接下来是实际操作。
请注意CONSTRAINT的命名方式，这样才容易识别键的来源。
直接在设计列的同一行代码中
加入PRMARYKEY命今是另一
种指定主键的方式（更快）。
CREATE TABLE interests（
创建外健就和创
int
id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
建索引列一样：
把外键列设定
interest VARCHAR(5O)NOT NULL,
这部分称为CONSTRANT，它的命名方式
为JNT与NOT
能告知我们键的来源表（my_contacts）
NULU
键的名称（contact_id）.还能说明它是
contact
idINT NOT NULL
一个外键（k）。
如果我们日后改变了心
CONSTRAINT mY
contacts
contact
id
重K还要用这个名称解
除约束。本行为可选用
FOREIGN KEY(contactid)
的，但最好养成使用它
的习惯。
REFERENCES my _contacts (contact
id）
括号中的列名就代表外
);
键。可以随意命名。
这部分指定外键的
还有外键列在另一
来源..
张表中的名称。
请大家动手做做看。打开你的数据库控制台界面，输入上述SQL代码来创
建一张interests表。
创建完后，注意一下新表的结构。什么信息能够告诉你约束的位置？
当前位置
307
---
## Page 340
习题解答
请大家动手做做看。打开你的数据库控制台界面，输人上述SQL代码来创建
张interests表。
解答
创建完成后，注意一下新表的结构。什么信息能够告诉你约束的位置？
DEsc interests;
|Field
1Type
|NullIKey|DefaultlExtra
int_id
1int（11)
INO
|PRI|NULL
Iauto_increment
|interest
varchar（50)
INO
1
contact_id|int（11)
1NO
IMUL1
MUL表示这一列可以存储多个相同的值，它也是追踪每个
contact_id拥有什么兴趣的关键。
没有蠢问题
没有蠢问题
时，你就会收到错误警告。
问：
建外键约束，但究竞是为了什么？不
所以说，my_contacts 中的
还有其他约束吗？
能单纯地使用另一张表的键，称之为
数据行若具有主键，而且它的主键是
合：我们已经看到主键约束
外键，而不加上约束吗？
其他表的外键时，我就没办法删除这
个数据行？
了。另外，（在创建列时）使用关键
：其实可以、但创建成外键约
字UNIQUE也被视为约束的一种。还
束后，就只能插入已经存在于父表中
含：
还是可以的，但必须先移除
有另一种MySQL不支持的约束，称
的值，有助于加强两张表间的连接。
外键行。毕竞，如果你从my_contacts
为CHECK（检查）约束。它用于指定
“加强连接”？这是什么意
移除了某个人，也就不再需要知道他
某个条件，列必须满足条件后才能插
的兴趣了。
思？
入新的值。关于CHECK的使用方式，
答：
请查询你的RDBMS说明文档。
：外键约束能确保引用完整
行留在interests表中？
性（换句话说，如果表中的某行有外
键、约束能确保该行通过外键与另一
合：
多余的数据会拖慢查询速度。
张表中的某一行对应）。如果我们试
这种残留数据称为“孤儿”，它们会
着删除主键表中的行或试着改变主键
增加查询时间。孤儿记录变成必须搜
值，而这个主键是其他表的外键约束
索却无用的信息，因而拖慢了查询。
308
第7章
---
## Page 341
多张表的数据库设计
表间的关系
现在，我们知道如何通过外键连接表了，但我们仍然需要思考表
之间产生关系的方式。以my_contacts表为例，我们的问题是
要让许多人与许多兴趣产生关联。
接下来讨论的三种可能的模式，各位会重复在将来要接触到的数
据上发现：一对一、一对多、多对多，找出数据所属的模式后，
设计多张表的关系一设计数据库模式（schema），也就变得
简单了。
数据模式：一对一
先看第一种模式（pattern），一对一模式。右图中A表
的某条记录在B表中最多只能有一条相对应的记录。
TableA
TableB
假设A表包含你的姓名，B表则包含薪资信息和社会安
全号，基于安全理由，所以要独立存储这些信息。
对应到
两张表都会包含你的ID编号，所以你可以拿到正确的薪
ONE
TO
ONE
资单。父表中的employee_id是主键，子表中的em-
众多数据行中
众多数据行中的
ployee_ia则是外键。
的一行
一行
在模式（schema）图中，一对一关系的连接线是单纯的
实线，表示连接一件事物与另一件事物。
在employees中的每个人只能有一个社会安全号
（SSN）每个SSN则只会对应到一个人，因而形成一
对一的关系。
employees
salary
employee_idO-
first_name
last_name
salary_level
employee_id
1
Beyonce
Knowles
234567891
2
6
2
Shawn
Carter
345678912
5
35
3
Shakira
Ripoll
123456789
7
1
这两列也具有一对一的关系，因为employees表的主
键employ_id波当成salary表的外键。
当前位置
309
---
## Page 342
一对一关系
数据模式：使用一对一的时机
所以，我们应该把所有
C
一对一的数揭放入新表吗？
事实上，不需要。我们其实不会经常用
到一对一的表。
连接表时用到一对一关系的机会其实非常少。
使用一对一表的时机
通常，把一对一的数据留在主表更合理，但也有适合把某些列
拉出来的时候：
1.抽出数据或许能让你写出更快速的查询。例如，如果大多
数时候你只需要查询SSN，就可以查询较小的SSN表。
2.如果有列包含还不知道的值，可以单独存储这一列，以
免主要表中出现NULL。
3.我们可能希望某些数据不要太常被访问。隔离这些数据
即可管制访问次数。以员工表为例，他们的薪资信息最
好存为另一张表。
4.如果有一大块数据，例如BLOB类型，这段数据或许存为
另一张表会更好。
一对一：父表只有一行与子表的
某行相关。
310
第7章
---
## Page 343
多张表的数据库设计
数据模式：一对多
一对多，表示A表的某条记录在B表中可以对应到多条记
一对多：A表中
录，但B表的每一条记录都只会对应到A表中的某一条记
录。
的某一条记录可
L
A表的某条记录可在
以对应到B表中
TableA
TableB
B表中对应出多条记
录，但B表中的任何一
的多条记录，但
条记录只会对应到A表
B表中的某一条
中的某一条记录。
对应到
记录只能对应到
ONE
TO
MANY
众多记录中的
A表中的某一条记
许多
一条记录
记录
录。
右图中my_contacts表的prof_id列就是一对
多的好例子。每个人都有一个prof_id，但my_
professions
contacts表中却有很多人共用相同的prof_id。
prof_id O
profession
my_contacts
在本例中，我们把profession列移进新表，父
contact_idow
last_name
表的profession列则改为存储外键的prof_
first_name
id列。因为它具有一对多关系，所以我们可以使
phone
email
用prof_id连接两张表。
gender
birthday
连接线应该带有黑色箭头来表示一对多的连接关
prof_id
系。
city
因为pros_id可以重复它
state
具有多条对应的记录，教
status
profession表中的每一行可能对应到my_con-
seeking
tacts表中的许多行，但my_contacts表的每一
不可作为主键。这是一个外
键，因为它引用了来自其他
行就只能对应到profession表中的一行。
表的键。
例如，Programmer表中的prof_id可以在my_
contacts表中出现很多次，但my_contacts表
中的每个人却只会有一个prof_id。
当前位置
311
---
## Page 344
多对多关系
数据模式：认清多对多
许多女士拥有许多双鞋。如果为了便于追踪而创建一张表
TableA
TableB
来记录姓名，另建一张表来存储鞋名，此时就需要连接多
条记录与多条记录，因为一种鞋可能不只是一名女士购买，
每一位女士也不可能只有一双鞋。
对应到
MANY
TO
MANY
假设Carrie与Miranda都买了OldNavyFlops和
许多记录
许多记录
PradaBoots，Samantha与Miranda都拥有Manolo
Strappies，Charlotte则每一款鞋都有一双。以下是women与
shoes表之间的连接。
woman_id
woman
shoe_id
shoe_name
了
1
Carrie
1
ManoloStrappies
2
Samantha
2
Crocs Clogs
3
Charlotte
3
OldNavyFlops
4
Miranda
4
PradaBoots
试想女士们都很喜欢鞋子，每个人都买了一双自己还没有
的鞋，下面就是购买后的连接情况。
连接线的两端都带有黑色韵头，代表
连接多件事物与多件事物。
woman_id
woman
shoeid
shoe name
1
Carrie
1
ManoloStrappies
2
Samantha
2
CrocsClogs
3
Charlotte
3
OldNavyFlops
4
Miranda
4
PradaBoots
D动g
该如何修改表，使得列的值不会超过一个（且最终可以实现类似Greg处理interests列问题的
方式）？
312
第7章
---
## Page 345
多张表的数据库设计
磨笔上阵
查看前面关于鞋的第一组表，我们试着在记
录女士姓名的表中加入外键shoe_id来解决这
个问题。
woman
shoe_id
shoe_id
shoe_name
1
Carrie
3
1
ManoloStrappies
2
Samantha
1
2
Crocs Clogs
3
Charlotte
1
3
Old Navy Flops
4
Miranda
1
4
Prada boots
5
Carrie
4
6
Charlotte
2
7
Charlotte
3
现在这两张表以
8
Charlotte
shoe_id进行连接。
9
Miranda
3
10
Miranda
4
请试着自己画出表，但这一次把woman_id当成外
键放入shoes表。
画完表后，还要试着画出两张表之间的连接。
当前位置
313
---
## Page 346
磨笔上阵解答
磨笔上阵
解答
查看前面关于鞋的第一组表，我们试着在记
录女士姓名的表中加人外键shoe_id来解决
这个问题。
woman
shoe_id
shoe _name
1
Carrie
3
1
ManoloStrappies
2
Samantha
1
2
CrocsClogs
3
Charlotte
1
3
OldNavyFlops
4
Miranda
1
4
Prada boots
5
Carrie
4
T
6
Charlotte
2
7
Charlotte
3
现在这两张表以
8
Charlotte
4
shoe_id进行连接。