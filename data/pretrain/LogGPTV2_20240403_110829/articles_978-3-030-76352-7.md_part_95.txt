provides 3360 matches. Quickly looking at the output shows that sample file is likely
tobesomesortofkeyloggerasshowninFig.2.Examiningtheoutputindetailed,aset
of IRC commands can be found within the extracted strings. It can be suggested that
thekeyloggerwillperiodicallylogintoanIRCserveranduploadsomelogfiles.Other
Fig.2. Extractingthestringsofthesamplefile
636 A.M.Elmiseryetal.
commandssuchas‘RegCreateKeyExA’werespottedaswell,whichsuggeststhataset
of registry keys are installed to provide persistence on the system PE analysis can be
performedusingPEview,thatwasusedtoextractthePEheaderinformation.Expanding
the‘.idata’sectionandselectingtheimportnametable,alistofimportscanbedisplayed
asseeninFig.3.
Fig.3. Listofimportsofthesamplefile
Thereareseveralimportsthatcanbefoundinthesamplefilesthatcouldbeinteresting
for further analysis as. For example, the CreateMutexA import is commonly used by
malware to set a value in a predetermined location on disk, in order to not infect the
same target multiple times. It is important to note that legitimate programs may use
CreateMutexA to ensure that only a single instance of the program is running on the
system toprevent conflicts. Other imports such asSetHandleCount and SetStdHandle
areusedtocreateahandletoaprocessandredirectinput,whichcanbeusedtoredirect
keystrokesfromtheusertoafile.Additionally,theReadProcessMemoryimportisused
tointeractwithvictimprocessesandextractinformation.
5 DiscussiononDynamicHuntingTools
In the dynamic hunting step, the selected sample files were executed 10 times, clean
snapshotsoftheVMswereacquiredbeforeeachexecutionplan.Aftercompletion,all
VMsarerestoredtothesavedsnapshotstoobtainimmaculatestatesineveryattempt.The
analysisplatformwaspreparedasstatedinthesubsection,withtwovirtualmachines,
oneisrunningWindows7andtheotherrunsWindows8.1.Botharerunningonahost
onlynetwork,throughanintermediaryVMrunningParrotOS.TheWindowsVMswere
prepared with these IP addresses 172.16.22.10/70, while the Parrot VM was prepared
withtheIPaddress172.16.22.40.
Tosimulateanetwork,theFakeNetutilitywasusedtoallowtheanalysttoobserve
thenetworkactivityofthesamplefilewithinasafeenvironment.WhenFakeNetruns,it
EfficientThreatHuntingMethodology 637
listenstomultipleportsofmultipleprotocols.Afterrunningoneofthesamplefiles,an
executablesuspectedtobeamalwaresampleshowsthataconnectionwasattemptedto
IPaddress58.65.232.68onport443asshowninFig.4.Conductingawho-islookupon
theextractedIPaddressshowsthatitisanIPaddressoriginatingfromforeignnetwork.
Anunsolicitedoutboundrequesttoanexternalnetworksuggestsmaliciousactivityand
isagoodindicationthattheexecutableisindeedamaliciousbinary.
Fig.4. FakeNetshowsanunsolicitedoutboundrequest
Toextractandmonitornetworktrafficonaspecificinterface,theWiresharkutilityis
usedwithinasafeenvironment.Theutilityhastheabilitytocapturewebpagesandtraffic
andthenstorethisdatainafilethatdumpsallnetworkelementsthatweretransferred
whilethisutilitywasrunning.
Regshotutilitywasemployedtodeterminewhichregistryvalueswereadded,altered
or modified by the malicious binaries. All unnecessary services and applications run-
ningontheVMhavebeenterminatedbeforerunningofRegShot.Aregistrysnapshot
wastakenfromtheregistrybeforerunningthemaliciousbinaries.After,thecomplete
run of the malicious binary, a second registry snapshot was taken. The output of the
secondregistrysnapshotiscomparedwiththeoutputofthepreviouslytakensnapshot
todeterminewhichregistryentrieswheremodified,aswellasfoldersandfileswithin
theoperatingsystemthathavebeenadded,alteredormodified.
AnexampleofareportofchangesgeneratedbyRegshotisprovidedinFig.5,which
showsthattworegistrykeysweredeleted,1346keyswerecreated,13fileshavebeen
modifiedand246foldershavebeenadded.Examiningthisreportindetail,itispossible
todetectwheremaliciousfileshavebeeninstalledandwhichregistryentrieshavebeen
maliciouslymodified.
AutoRunsutilitywasusedasstart-upobservertomonitorandlistallprocessesthat
aresetto runon the start-upprograms. Snapshots of thecurrent system configuration
canbemadeandsavedtoafilethenlatercomparedtoprevioussnapshotstodetermine
changes.Afterthecompleterunofthesamplefile,thesavedsnapshotcanbecompared
tothecurrentstart-upprograms.
Process monitor utility is an advanced monitoring tool for windows, it is a vital
utility to understand the changing behaviours of any running binaries. It excessively
offers different views of the running processes by swapping between different filters
thatcandepictmultipleinsightsaboutthebinaryfileinruntime.Theprocessmonitor
cananalyseandwatchinreal-timeeachrunningprocess,createdfiles,accessedregistries
entries,etc.Theutilityisequippedwithvariousfilterstosearchforpatternsofinterest,
italsohastheabilitytofilteroutallotherprocessesthatcaninterferewiththerequired
results.Processmonitorcanbeusedtorecordalloperationscompletedbyanyrunning
638 A.M.Elmiseryetal.
Fig.5. ReportofchangesgeneratedbyRegshot
processes. By setting process monitor to capture data and then running the malicious
binarysample,alltheperformedoperationscanbecaptured.Ifthemaliciouspayload
ishiddenwithinalegitimateinstaller,filterscouldbeappliedtofilteroutanyunneeded
processoperations.The‘processtree’viewcanbeselectedwherethelegitimateprocess
isdisplayedalongwiththemaliciouspayload.
Process Explorer is a powerful utility for managing windows processes. It can be
used to present insights about all the processes running in the system. Every running
processisdisplayedinatree-likestructurethatshowstherelationsbetweenparentand
childprocesses.
ProcessExplorerisconsideredanadvancedtaskmanagerwithenhancedfeatures.
Someofthesefeaturesarethehierarchicalcolouredviewofprocesseswhichsimplify
theanalysis,theabilitytoidentifyinput/outputoperationofaspecificprocesssuchas
openingorlockingspecificfileorfolderandloadingaDLL,theabilitytoterminateor
suspend any specific process tree with all of its spawned processes, and smooth inte-
grationwithVirusTotaldatabasethatpermitssubmittingandcomparingcryptographic
hashes of all running executables against those stored on VirusTotal then displays the
numberofdetectionswithoutneedingtoisolateeachexecutablefileandthenuploadit
separately for review. The granularity of information offered by process explorer can
helptheanalysttotraceDLLversioningandmemoryleaksproblemsforanyexecutable
file.AnexampleofanoutputgeneratedbyprocessexplorerisprovidedinFig.6,apro-
cessname‘newbos2.exe’(thatisanewchildprocessof‘explorer.exe’process)has47
outof55detections.Thissharpdetectionrateconfidentlyindicatesthatthisexecutableis
malicious.ThePropertieswindowofthemaliciousbinarycanprovideadditionaluseful
informationtotheinvestigatorsuchas,thecharacterstringsinmemory,theuserunder
whomtheprocessisbeingexecuted,theactivenetworkconnections,activethreads,and
thelocationoftheexecutablepertainingtotheprocessonthedesk.Inordertoreduce
theinterpretationtimefortheinvestigator,theaggregatedtracesofprocessmonitorand
the collected network traffic dump can be visualized by ProcDOT as seen in Fig. 7.
Thisapplicationcangenerateacallgraphthatrepresentsbehaviorofthesampleunder
investigationbycombiningthepreviouslycollecteddata.
EfficientThreatHuntingMethodology 639
Fig.6. Anoutputgeneratedby‘ProcessExplorer’
Fig.7. CallGraphGeneratedby‘ProcDOT
6 ConclusionsandFutureWork
This research presents our efforts to propose a methodology to distinguish malicious
binaries from benign binaries in a quick and efficient manner. The proposed method-
ology consists of static and dynamic hunting techniques. Using these two techniques,
theproposedmethodologyisnotonlycapableofidentifyingarangeofsignature-based
anomaliesbutalsotopinpointbehaviouralanomaliesthatariseintheoperatingsystem
when malicious binaries are triggered. The proposed threat hunting methodology was
640 A.M.Elmiseryetal.
appliedtosamplesofmaliciousbinaries,whichcanbefoundincommonmalwarerepos-
itories.Thefindingspresentedinthispapercanbeusedtoconstructothermethodologies
andincidentresponseplansforotheremergingthreats.Fullreverseengineeringofthe
maliciousbinarycanbeextremelybeneficial.However,itisnotfeasibletodothisfor
allbinariesontheinternalsystems.Additionally,therearespecificskillsetsrequiredto
properly perform reverse engineering for a binary. More research is required on auto-
matic detection of advanced malware using artificial intelligence techniques. Future
researchwillincludeautomatedapproachestouncovervariousconcealmentalgorithms
andevasionmethodsusedbymalwaredevelopers.TheintegrationofCuckooSandbox
withtheproposedmethodologyshouldalsobeanareaofinvestigation.
References
1. Dowdy, J.: The cyber-security threat to us growth and prosperity. In: Cyberspace: A New
DomainforNationalSecurity(2012)
2. Friedberg, I., Skopik, F., Settanni, G., Fiedler, R.: Combating advanced persistent threats:
fromnetworkeventcorrelationtoincidentdetection.Comput.Secur.48,35–57(2015)
3. Connolly, L.Y., Wall, D.S.: The rise of crypto-ransomware in a changing cybercrime
landscape:taxonomisingcountermeasures.Comput.Secur.87,(2019)
4. Lord,N.:Whatisthreathunting?Theemergingfocusinthreatdetection.In:DigitalGuardian
(2018)
5. Sqrrl.CyberThreatHunting.www.sqrrl.com
6. Bhatt,P.,Yano,E.T.,Gustavsson,P.:Towardsaframeworktodetectmulti-stageadvanced
persistentthreatsattacks.In:2014IEEE8thInternationalSymposiumonServiceOriented
SystemEngineering,pp.390–395(2014)
7. Scarabeo,N.,Fung,B.C.,Khokhar,R.H.:Miningknownattackpatternsfromsecurity-related
events.PeerJ.Comput.Sci.1,(2015)
8. Mahyari,A.G.,Aviyente,S.:Amulti-scaleenergydetectorforanomalydetectionindynamic
networks.In:2013AsilomarConferenceonSignals,SystemsandComputers,pp.962–965.
IEEE(2013)
9. Miller, B.A., Beard, M.S., Bliss, N.T.: Eigenspace analysis for threat detection in social
networks.In:14thInternationalConferenceonInformationFusion,pp.1–7.IEEE(2011)
10. Bhardwaj, A.K., Singh, M.: Data mining-based integrated network traffic visualization
frameworkforthreatdetection.NeuralComput.Appl.26(1),117–130(2015)
11. Gu,G.,Perdisci,R.,Zhang,J.,Lee,W.:Botminer:clusteringanalysisofnetworktrafficfor
protocol-andstructure-independentbotnetdetection(2008)
12. Elmisery,A.M.,Sertovic,M.:Privacypreservingthreathuntinginsmarthomeenvironments.
In:Anbar,M.,Abdullah,N.,Manickam,S.(eds.)AdvancesinCyberSecurity(ACeS2019)
CommunicationsinComputerandInformationScience,vol.1132,pp.104–120.Springer,
Singapore(2020).https://doi.org/10.1007/978-981-15-2693-0_8
13. Elmisery, A.M., Botvich, D.: Privacy aware recommender service using multi-agent
middleware-anIPTVnetworkscenario.Informatica36(1)(2012)
14. Elmisery,A.M.,Rho,S.,Botvich,D.:Afogbasedmiddleware forautomated compliance
withOECDprivacyprinciplesininternetofhealthcarethings.IEEEAccess4,8418–8441
(2016)
15. Elmisery,A.M.,Rho,S.,Botvich,D.:Collaborativeprivacyframeworkforminimizingprivacy
risksinanIPTVsocialrecommenderservice.MultimediaToolsAppl.75(22),14927–14957
(2016)
EfficientThreatHuntingMethodology 641
16. Elmisery, A.M., Botvich, D.: Enhanced middleware for collaborative privacy in IPTV
recommenderservices.J.Converg.2(2),10(2011)
17. Elmisery,A.M.,Doolin,K.,Roussaki,I.,Botvich,D.:Enhancedmiddlewareforcollaborative
privacyincommunitybasedrecommendationsservices.In:Yeo,S.S.,Pan,Y.,Lee,Y.,Chang,
H.(eds.)ComputerScienceanditsApplications.LectureNotesinElectricalEngineering,
vol.203,pp.313–328.Springer,Dordrecht(2012)
18. Berrueta Irigoyen, E., Morató Osés, D., Lizarrondo, M., Izal Azcárate, M.: A survey on
detectiontechniquesforcryptographicransomware.IEEEAccess7,144925–144944(2019)
19. Akbanov,V.G.,Vassilakis,I.D.Moscholios,Logothetis,M.D.:Staticanddynamicanalysis
ofWannaCryransmware
20. Aman,W.:Aframeworkforanalysisandcomparisonofdynamicmalwareanalysistools.Int.
J.Netw.Secur.ItsAppl.6(5),63–74(2014).arXivpreprintarXiv:1410.2131
21. Wichmann, B.A., Canning, A., Clutterbuck, D., Winsborrow, L., Ward, N., Marsh, D.:
Industrialperspectiveonstaticanalysis.Softw.Eng.J.10(2),69–75(1995)
22. Firdausi, I., Erwin, A., Nugroho, A.S.: Analysis of machine learning techniques used in
behavior-basedmalwaredetection.In:2010SecondInternationalConferenceonAdvances
inComputing,Control,andTelecommunicationTechnologies,pp.201–203.IEEE(2010)
23. Snaker (ed.): Softpedia (2008). https://www.softpedia.com/get/Programming/Packers-Cry
pters-Protectors/PEiD-updated.shtml
24. Petoolse(ed.):Github(2018).https://github.com/petoolse/petools
25. Miller,S.(ed.):Dependencywalker(2015).http://www.dependencywalker.com
26. Microsoft(ed.):Processexplorer(2019).https://docs.microsoft.com/en-us/sysinternals/dow
nloads/process-explorer
27. Microsoft(ed.):Processmonitor.https://docs.microsoft.com/en-us/sysinternals/downloads/
procmon
28. Wojner,C.(ed.):ProcDOT,anewwayofvisualmalwareanalysis.AustrianNationalCERT
(2015).https://www.procdot.com/
29. Maddes,X.(ed.):Regshotdownload(2018).https://sourceforge.net/projects/regshot/
30. Hungenberg,T.,Eckert,M.(ed.):INetSim:internetservicessimulationsuite(2013)
31. Wireshark,F.:Wireshark-GoDeep,vol.15.RetrievedOct2011
32. Sistemas,H.(ed.):VirusTotal(2004).https://www.virustotal.com/gui/
Peer-to-Peer Application Threat Investigation
B
MohamedMahdy( )
OWASPCairo-Chapter,Cairo,Egypt
PI:EMAIL
Abstract. Understandingthelayersofanapplicationleadstoabetterthreatinves-
tigationoutcomeaswellashelpingwithdevelopingpropercontrolswithoptimized
cost.Startingwiththeblockchainasthepeer-to-peerapplicationwewillanalyze
thepeer-to-peernetworksandhowtheyprovidetheunderlayforblockchain.We’ll
havealookatthelayersofthepeer-to-peerapplicationstartingfromthenetwork
layer,communicationflowsandcommunicationportsthroughanalyzingpacket
capturescollectedfrombothclientsideandnetworktaps,uptotheblockchain
layerandclient-sideprocesseswherewestarttohavealookatimportedfunc-
tions, memory and CPU utilization. We aim to have a structured approach for
threatinvestigationforpeer-to-peerapplications.
Keywords: Blockchain·Cryptocurrency·Mechanismdesign·Peer-to-peer·
Mining·Threatinvestigation·Cyberthreats·API
1 Introduction
1.1 BlockchainandP2PConnected
Blockchainconceptstartedtogainattentionbackin2008withtheintroductionofBit-
coinbyS.Nakamotoin[1].Blockchainusespeer-to-peernetworksasanunderlayand
providesauniversaldatasetthateverypeercantrusteventhoughtheymightnotknow
ortrusteachother.Itprovidesasharedandtrustedchainofblocks,whereencryptedand
immutablecopiesofthischainaresharedwithothernetworkpeers.Itcanbeconsidered
bothatargetandamediumforinitiatingsophisticatedcyber-attacks.
1.2 BlockchainInvestigationChallenges
The main concern around how blockchain affect endpoints pushes enterprises toward
investing in endpoint solution as the main control to secure or investigate blockchain
systems.
While endpoint solutions provide tremendous amount of information and provide
thecapabilitytointerceptfunctioncallsataverylowlevelwithinendpointmemory,the
costassociatedwithsuchdeploymentsisveryhighspeciallywiththeIndustrialControl
systems(ICS)inthepicture.
Enterpriseseitherrelysolelyontheendpointsolutionsorignorethethreatrelated
toblockchainsystemsasthecostofsecuringitisveryhigh.
©SpringerNatureSwitzerlandAG2021
H.Hacidetal.(Eds.):ICSOC2020Workshops,LNCS12632,pp.642–650,2021.
https://doi.org/10.1007/978-3-030-76352-7_55
Peer-to-PeerApplicationThreatInvestigation 643
Inthisresearchwearegoingthroughthelayerscontributingtotheblockchainsystem,
toidentifyhowdifferentdefensesandcontrolscanbeimplementedateachlayer.
Thisapproachhelpsmorewithidentifyingatwhichkillchainstagetheorganization
teamcanengagebasedontheexistingcontrolsandhowtheycanmakethebestuseof
thosecontrolstobuildaproperwell-informedhypothesis.
2 Background
2.1 BlockchainChangedtheGame
Blockchain solved challenges that faced previous implementations of digital payment
systems(e.g.,Digicash)see[2].Someofthesechallengesarelistedbelow.
(cid:129) Sybilattack:Thisattacktargetssystemreputationbycreatinglargenumberofpseudo
nodestousethemtogainamaliciousinfluence,see[2]
(cid:129) Doublespending:Digitalinformationcanbeusedmultipletimesbymovingorcopy-
ingthem.Unlikephysicalassets(e.g.,bills,coins,etc.),theyrequireexpensiveeffort
tobecopied.
Blockchainmadeitpossibletotrusttheoutputofthesystemwithouttheneedtotrust
any of its members and removed the need for third parties like banks and authorities,
see[2].
2.2 BlockchainMainComponents
(cid:129) Distributed Ledger [3]: It can be described as a chain of blocks, where each block
contains some transactions and a hash of the prior block, this guarantees the chain
integritybacktothefirstblock(genesisblock).
(cid:129) Proof-of-work: This enables distributed control and statistical protection for the
blockchain system which makes it very expensive to cheat the system solving the