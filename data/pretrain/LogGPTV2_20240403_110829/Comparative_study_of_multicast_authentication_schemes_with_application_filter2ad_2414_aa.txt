# Comparative Study of Multicast Authentication Schemes with Application to Wide-Area Measurement Systems

## Authors
- Yee Wei Law
  - Department of Electrical and Electronic Engineering (EEE)
  - The University of Melbourne, Australia
  - Email: [PI:EMAIL]
- Zheng Gong
  - School of Computer Science
  - South China Normal University, Guangzhou 510631, China
  - State Key Laboratory of Information Security, Institute of Information Engineering, Chinese Academy of Sciences, Beijing 100093, China
  - Email: [PI:EMAIL]
- Tie Luo
  - Research Institute for Infocomm
  - A*STAR, Singapore
  - Email: [PI:EMAIL]
- Slaven Marusic
  - Department of Electrical and Electronic Engineering (EEE)
  - The University of Melbourne, Australia
  - Email: [PI:EMAIL]
- Marimuthu Palaniswami
  - Department of Electrical and Electronic Engineering (EEE)
  - The University of Melbourne, Australia
  - Email: [PI:EMAIL]

## Abstract
Multicasting involves the transmission of a message to multiple receivers simultaneously. For sporadic multicast messages, conventional digital signature schemes are suitable. However, for continuous multicast data streams, an authenticated multicast or multicast authentication (MA) scheme is necessary. MA schemes can be constructed from either conventional digital signatures or multiple-time signature (MTS) schemes. Several MTS-based MA schemes have been proposed over the years. In this study, we formally analyze four such MA schemes: BiBa, TV-HORS, SCU+, and TSV+. Among these, SCU+ is an MA scheme derived from an MTS scheme designed for secure code updates, and TSV+ is our patched version of TSV, which we found to be vulnerable. Our simulation-validated analysis, which complements and improves upon existing analyses, compares the computational and communication efficiencies of these schemes relative to their security levels. We use parameters relevant to a smart grid component known as the wide-area measurement system (WAMS) for numerical comparisons. Our results show that while TV-HORS is not the most sophisticated, it offers the most balanced performance. SCU+, TSV+, and their parent schemes do not provide clear advantages over BiBa, the oldest among the schemes.

## 1. Introduction
A multicast authentication (MA) scheme allows receivers of a multicast packet to authenticate the sender and ensures that only the sender can send authenticated packets to the multicast group. At the core of every MA scheme lies a signature scheme. Conventional digital signature algorithms like DSA and ECDSA can sign a large number of distinct messages but have high computational and memory requirements. For sporadic multicast messages, appending a digital signature to each message is feasible, but for continuous multicast data streams, it is computationally prohibitive.

Recent research on digital signature-based MA schemes focuses on signature amortization, which spreads a single signature across multiple packets to reduce verification costs and allow for the verification of successfully received packets even if some packets are lost. However, all signature amortization schemes require assembling multiple packets before their collective signature can be verified, leading to delays that may be problematic for real-time applications.

Real-time requirements have driven the investigation of multiple-time signature (MTS) schemes for multicast authentication. An MTS scheme can sign a fixed number of distinct messages using a public/private key pair. Although they generally produce longer signatures, MTS schemes have much lower computational and memory requirements than conventional digital signature schemes. MTS-based MA schemes are thus suitable for real-time systems, such as the wide-area measurement system (WAMS), which motivates this work.

Despite the numerous MTS-based MA schemes proposed, a systematic comparison is lacking due to inadequate analysis. This prevents a scientific approach to selecting MA schemes for real-time systems, including WAMS. Our contributions include a rigorous, simulation-validated analysis and a methodical comparison of four MTS-based MA schemes: BiBa, TV-HORS, SCU+, and TSV+. SCU+ is an MA scheme we constructed from an MTS scheme designed for secure code updates, and TSV+ is our patched version of TSV. These schemes were chosen because they are either highly cited or tailored to smart grids. Our analysis fills gaps in, and rectifies or improves upon, existing analyses. Our comparison shows that TV-HORS has the most balanced computational and communication costs. Contrary to common perception, recent sophisticated designs do not necessarily outperform older, often criticized designs. Our work is motivated by the need to find an efficient MA scheme for WAMS, and the parameters of our comparison are tailored to WAMS. However, our analysis is system-independent, and the parameter values used for comparison can be adapted to any other system. This work serves as the first step in an ongoing series of comparative studies of MTS-based MA schemes.

## 2. Related Work
The past decade of active research on wireless sensor networks has spurred interest in broadcast/multicast authentication and, consequently, multiple-time signature (MTS) schemes. This is largely due to the resource constraints on typical sensor nodes, which favor low computational complexity and small code size. Recently, smart grid researchers have also turned to MTS schemes for real-time multicast authentication.

One-time signatures, a subset of MTS schemes, were first considered by Lamport. Among subsequent schemes that improve upon Lamport's impractical construction, BiBa is a benchmark for its simple ingenuity. TESLA and its variant μTESLA are more lightweight than BiBa but use delayed signature verification, making them unsuitable for real-time multicast authentication. HORS improves upon BiBa by generating shorter signatures for the same security level and has inspired many variants and extensions. TV-HORS is an extension of HORS to an MA scheme, and TSV is both a variant and an extension of HORS, as it is both an MTS and an MA scheme. Both TV-HORS and TSV were motivated by smart grid applications, making them ideal candidates for comparison here. SCU was designed for wireless sensor networks and has an interesting design, adding diversity to our comparison. According to Katz's taxonomy, all schemes studied here are chain-based stateful schemes. As Steinwadt et al. noted, naming a single superior MTS scheme (and accordingly, MA scheme) is nontrivial.

In the context of the wide-area measurement system (WAMS), the North American SynchroPhasor Initiative (NASPI) views data multicasting from a phasor measurement unit (a WAMS node) to multiple control centers as essential. Bobba et al. proposed a Policy-Based Encryption System (PBES) to secure data sharing, including WAMS data, between utilities. PBES was not designed for securing WAMS traffic itself, and NASPI has yet to standardize on an MA scheme for this purpose.

IEC 61850 is a series of standards on substation automation, including the automation of data acquisition, control, protection, diagnostics, and monitoring functions within substations. IEC 61850-90-5 governs the IEC 61850-compliant transmission of IEEE C37.118-formatted WAMS data. The standard specifies Group Domain of Interpretation (GDOI) for securing the distribution of group keys and IPsec for securing IP multicast using the group keys. However, GDOI does not support mutual authentication among group members, and IPsec relies on a shared group key for encryption, which can be abused by a rogue member to forge messages to the entire group. Zhang and Gunter proposed using IPsec for securing multicast WAMS data but did not address these pitfalls.

Researchers at the Future Renewable Electric Energy Delivery and Management (FREEDM) Systems Center implemented TV-HORS on their testbed but did not provide the detailed justification we offer here. Recently, Law et al. proposed a key management scheme for WAMS that specifies TV-HORS for securing multicast data streams, based on a simulation-based comparison between TV-HORS and TSV+. Our comparison covers more schemes and is both analytical and empirical.

Within the wireless sensor network community, several studies have evaluated the efficiency of various signature schemes. For example, Seys and Preneel compared the energy efficiency of ECDSA, Lamport-Diﬃe, and HORS one-time signature schemes. Their results show that for fewer than 15,000 signatures, HORS is the most energy-efficient, whereas for more than 15,000 signatures, Lamport-Diﬃe is better.

## 3. Notation and Definitions
For the ensuing discussion, the following mathematical notation is used:

- \( H \): One-way hash function
- \( M \), \( c \): Message and counter, respectively
- \( t \): Number of elements in a private key tuple
- \( \lambda \): Last index of a one-way chain
- \( S \): See Definition 1
- \( C_\sigma \), \( C_v \): Expected number of hash operations required for signing and verification, respectively
- \( L_\sigma \): Expected number of bits in a signature
- \( r \): Number of signatures generated per epoch
- \( |x| \): Bit-length of \( x \) when \( x \) is a bit-string
- \( l_H \): Bit-length of a truncated hash value
- \( \text{PRF}(K, M) \): Pseudorandom function (PRF) with key \( K \) and plaintext \( M \)
- \( \text{Split}_k() \): Function that splits a bit-string into \( k \) sub-strings

A one-way hash function is a hash function that is preimage-resistant and second preimage-resistant. The following definitions are used:

**Definition 1.** Assuming a polynomial-time adversary \( A \) can successfully execute an existential forgery on a scheme \( S \) with probability \( p \), the security level of the scheme is defined as:
\[ S(A, S) = -\log_2(p) \]

**Definition 2.** [26] Let \( f \) be a function from \( X \) to \( Y \), and \( x_1, \ldots, x_k \in X \). Suppose that values \( y_i = f(x_i) \) have been determined for \( i = 1, \ldots, k \). Then, \( f \) is \( k \)-wise independent if for all \( x \in X \setminus \{x_1, \ldots, x_k\} \) and all \( y \in Y \):
\[ \Pr[H(x) = y \mid y_1 \leftarrow H(x_1) \land \cdots \land y_k \leftarrow H(x_k)] = \frac{1}{|Y|} \]

## 4. Multicast Authentication Using Multiple-Time Signature Schemes
Most MTS schemes can be divided into the following parts:
- A private key tuple \( (s_1, s_2, \ldots, s_t) \) consisting of \( t \) fixed-length random strings.
- A key generation algorithm for generating a public key tuple from a private key tuple.
- A signature generation algorithm that, based on the message to be signed, selects elements of a private key and generates signature elements from the selected private key elements.
- A signature verification algorithm that checks if the public key elements can be derived from the received signature elements.

Constructing an MA scheme from an MTS scheme requires two key "ingredients." The first ingredient is one-way chains. Since a key pair can generate only a fixed number of signatures, to sign a message stream of unlimited length, the key pair must be refreshed once its usage limit is reached. The de facto standard technique is to use the private key of an expired key pair as the public key of a new key pair. For BiBa, this means generating the one-way chain as \( s_{i,\lambda}, s_{i,\lambda-1}, \ldots, s_{i,0} \), where \( s_{i,j-1} = H(s_{i,j}) \) for all \( i = 1, \ldots, t \) and \( j = 1, \ldots, \lambda \). Thus, \( s_{i,j} \) is both the private key element corresponding to public key element \( s_{i,j-1} \) and the public key element corresponding to the private key element \( s_{i,j+1} \) (see Fig. 1). This technique requires a private key to have the same number of elements as the corresponding public key, so it does not apply to tree-based MTS schemes. The second ingredient is clock/time synchronization, which is essential for the security of MTS-based MA schemes, as explained in Fig. 1.

In a smart grid, this requirement is met by the draft standard IEEE PC37.238, which specifies a common profile for the use of IEEE 1588-2008 Precision Time Protocol in power system protection, control, automation, and data communication applications utilizing an Ethernet communications architecture.

### Public Key and Private Key Traversal
Public key for epoch 1
- Private key for epoch 1 becomes public key for epoch 2
- Receiver "stuck" in epoch 1 is vulnerable to signature forgery

```
s1,0  s2,0  ...  st,0
s1,1  s2,1  ...  st,1
...
s1,λ  s2,λ  ...  st,λ
```

**Figure 1:** Some (not all) private key elements are disclosed for each signature generated. As time passes, an attacker can capture enough signatures (in this example, the "thick boxes") to reconstruct the whole \( s_{1,1}, s_{2,1}, \ldots, s_{t,1} \). It is therefore necessary to deprecate private keys by:
1. Dividing time into epochs.
2. Keeping track of the active private key corresponding to the current epoch.
3. Synchronizing the clocks of the sender and receivers.

In the approach depicted in Fig. 1, during epoch \( j \), the active private key elements are \( s_{1,j}, \ldots, s_{t,j} \). This approach is called uniform chain traversal. Using uniform chain traversal, in the first epoch, when a signature containing \( s_{i1,1}, s_{i2,1}, \ldots, s_{ik,1} \) is received, \( H \) is invoked \( k \) times to check \( H(s_{i1,1}) ?= s_{i1,0} \), \( H(s_{i2,1}) ?= s_{i2,0} \), and so on. Assume every private key is used to generate only one signature. In the second epoch, suppose a signature containing \( s_{j1,2}, s_{j2,2}, \ldots, s_{jk,2} \) is received, and \( \{i_1, \ldots, i_k\} \cap \{j_1, \ldots, j_k\} = \emptyset \). This time, \( H \) would have to be invoked \( 2k \) times to check \( H(s_{j1,2}) ?= s_{j1,0} \), \( H^2(s_{j2,2}) ?= s_{j2,0} \), and so on. Therefore, in uniform chain traversal, the verification cost, i.e., the expected number of hash operations for verifying a signature, varies from signature to signature.

An alternative approach, called nonuniform chain traversal, aims to keep the verification cost at a minimum from signature to signature. Using nonuniform chain traversal, the first active private key is \( s_{1,1}, s_{2,1}, \ldots, s_{t,1} \). Without loss of generality, suppose \( s_{1,1}, s_{2,1}, \ldots, s_{k,1} \) have been used for a signature; the active private key now becomes \( s_{1,2}, s_{2,2}, \ldots, s_{k,2}, s_{k+1,1}, \ldots, s_{t,1} \). As explained in Fig. 1, it is essential that receivers keep track of the active private key, but the loss of synchrony between the epoch counter and the key-chain indices of the active private key means time can no longer be used as a reference. The sender can disclose the key-chain indices of the active private key with every signature, but by blocking packets to a receiver, an attacker can cause a receiver to lose track of the current active private key. Once the attacker has collected enough signatures, it will be able to forge packets to the receiver. To keep the verification cost at a minimum for every signature, nonuniform chain traversal inadvertently compromises the receivers' ability to track the active private key and exposes them to signature forgery. Therefore, in comparison, uniform chain traversal is more robust and is adopted for all MA schemes in this paper, at the expense of higher verification cost.

The discussion above glosses over a particular caveat of one-way chains. If \( H \) is to be \( k \)-wise independent (see Definition 2), following Bradford et al.'s analysis, the size of the domain of \( H \) must be \( \Omega((\lambda + 1)^{k/2}) \), where \( \lambda + 1 \) is the length of the one-way chain. There are many ways to expand the domain of \( H \) (below, \( s_{i,\lambda} \) is randomized, \( i = 1, \ldots, t \), \( j = 1, \ldots, \lambda \)):
1. Use a separate salt chain \( K_{j-1} = \text{PRF}(K_j, 0) \), and set \( s_{i,j-1} = \text{PRF}(s_{i,j}, K_{i,j}) \) for all \( j = 2, \ldots, \lambda \) [20].
2. Use a separate salt chain \( K_{j-1} = H(K_j) \), and set \( s_{i,j-1} = H(s_{i,j} \parallel K_j) \) [31].
3. Use a synchronized counter \( c_j \), e.g., the epoch counter, and set \( s_{i,j-1} = H(s_{i,j} \parallel c_j) \) [5].
4. Set \( s_{i,j-1} = H(s_{i,j} \parallel s_{i,j+1}) \), \( s_{i,\lambda-1} = H(s_{i,\lambda}) \) [5].

Above, note that replacing \( \text{PRF}(K, M) \) with \( H(K \parallel M) \) is valid provided \( H \) can be modeled as a random oracle [2].

The performance of an MA scheme is evaluated in terms of the computational complexity of signature generation and signature verification (\( C_\sigma \) and \( C_v \)), and in terms of communication overhead (\( L_\sigma \)). However, these performance metrics are only meaningful with respect to the achievable security level (\( S \)). In other words, we are interested in how MA schemes compare with each other in terms of (i) \( L_\sigma / S \), (ii) \( C_\sigma / S \), and (iii) \( C_v / S \). The lower an MA scheme scores in these ratios, the more efficient it is.