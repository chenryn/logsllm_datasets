### Total Time for All Missions
The total time for all missions is 360 minutes (4 * 30 * 3).

### Table II: Comparison of Gratuitous Recovery in the Absence of Attacks and False Positive Rate (FPR) Across Techniques

| Analysis Type | Total Missions | Recovery Activated | Mission Successful | Mission Failed | FPR = (Failed / Total) * 100 |
|---------------|----------------|--------------------|--------------------|----------------|------------------------------|
| CI            | 30             | 7                  | 0                  | 7              | 23.33%                       |
| Savior        | 30             | 4                  | 0                  | 4              | 13.33%                       |
| SRR           | 30             | 6                  | 3                  | 3              | 10%                          |
| PID-Piper     | 30             | 3                  | 3                  | 0              | 0%                           |

**Table II** shows the results of simulated RVs for each technique. PID-Piper activated gratuitous recovery in 3 out of 30 missions but completed all missions successfully, achieving a 0% FPR. In comparison, CI, Savior, and SRR activated gratuitous recovery in 7, 4, and 6 missions, respectively. CI and Savior had a 0% recovery rate, while SRR had a 50% recovery rate. The overall FPR for CI, Savior, and SRR was 23.33%, 13.33%, and 10%, respectively. PID-Piper also achieved 0% FPR when tested on 3 real RVs.

### D. Recovery from Overt Attacks
To test PID-Piper's effectiveness in detecting and recovering from overt attacks, we launched 3 overt attacks targeting the gyroscope and GPS sensors. We then measured the mission success rate under these attacks. All techniques, including PID-Piper, successfully detected the attacks and activated recovery. We performed 30 missions for the simulated RVs with the techniques CI, Savior, and SRR, and mounted the same overt attacks in each mission. Without any recovery, all missions crashed.

**Table III: Mission Outcomes under Overt Attacks**

| Analysis Type | Total Missions | Mission Successful | Mission Failed (No Crash) | Crash/Stall |
|---------------|----------------|--------------------|----------------------------|-------------|
| CI            | 30             | 0                  | 4                          | 26          |
| Savior        | 30             | 0                  | 5                          | 25          |
| SRR           | 30             | 4                  | 15                         | 11          |
| PID-Piper     | 30             | 25                 | 5                          | 0           |

PID-Piper successfully recovered the RVs from attacks in 25 out of 30 missions, achieving an 83% mission success rate. In contrast, CI and Savior could not complete any missions, and SRR completed only 4 out of 30 missions. PID-Piper did not experience any crashes or stalls, while SRR experienced crashes/stalls in 11 out of 30 missions, and CI and Savior incurred crashes/stalls in 80% of the missions.

We also measured the deviations from the target destination in non-crash missions for SRR and PID-Piper. For PID-Piper, the average deviation for the 5 failed missions was 14.5m, and for the 25 successful missions, it was 5.7m, resulting in an overall average deviation of 7.35m. For SRR, the average deviation was 24m in the 15 failed missions and 8.2m for the 4 successful missions, resulting in an overall average deviation of 20.67m. Thus, PID-Piper has a 2.8X smaller average deviation than SRR for non-crashing missions.

**Figure 7** shows the cumulative distribution function (CDF) of the non-crashing missions for PID-Piper and SRR as a function of the deviation incurred. This is normalized to the number of non-crash missions in each technique (30 for PID-Piper, 19 for SRR). PID-Piper’s CDF increases sharply, indicating much less deviation than SRR.

**Figure 8: PID-Piper’s Recovery under Overt Attacks**
- **(a)** Gyroscope attack in Sky-viper drone.
- **(b)** GPS attack in Pixhawk drone.

Finally, we tested PID-Piper’s recovery on 3 real RVs. **Table IV** shows the results. PID-Piper performs successful recovery in 87% of the missions on average. **Figure 8a** shows an example of PID-Piper’s recovery from a gyroscope attack on the Sky-viper drone. The top portion shows the outputs of the PID controller and PID-Piper under attacks, and the bottom portion shows the three instances when the attack was launched. The PID’s roll angle estimations experienced heavy fluctuations under the attack (between 12 and -20 degrees), while the ML model’s predictions limited the fluctuations between -5 and 5 degrees. PID-Piper detected the attack, triggered recovery, and completed the mission successfully. Without PID-Piper, the drone crashed.

**Figure 8b** shows the deviations due to PID-Piper recovery after a GPS attack on the Pixhawk drone. The figure shows the deviations during a 50m mission both with and without PID-Piper’s recovery. Without PID-Piper, the deviation is about 25m, while with PID-Piper, the deviation is about 5m. Further, the deviations with PID-Piper are bounded as the mission distance increases, unlike the deviations without PID-Piper.

### E. Mitigating Stealthy Attacks
Stealthy attacks are triggered by controlled sensor manipulations, which over time result in large deviations in RV missions. We compared PID-Piper’s ability to mitigate stealthy attacks with other systems. We used the ArduCopter for comparison with SRR and CI, and the PX4 for comparison with Savior. We varied the mission distances from 50m to 5000m for linear paths (straight-line missions). The resulting deviations are shown in **Figures 9a and 9b**.

**Figure 9: Deviation Due to Stealthy Attacks**
- **(a)** Comparison between PID-Piper, SRR, and CI on ArduCopter.
- **(b)** Comparison between PID-Piper and Savior on PX4 Solo.

On the Arducopter, PID-Piper significantly limits the deviations due to stealthy attacks, incurring less than 10m deviation even for a 5000m mission distance. In comparison, CI and SRR incur more than 160m and 140m deviation, respectively. This is because CI and SRR use a monitoring window to track the error between the observed value and model-predicted values, setting very high thresholds. PID-Piper sets the threshold to around 18 degrees, allowing it to limit the effect of stealthy attacks.

On the PX4 Solo system, both PID-Piper and Savior cap the deviations, as they use CUSUM to track the error throughout the RV mission rather than a window. However, PID-Piper caps the deviations at 10m, while Savior caps it at 70m. This is because Savior sets a high threshold for comparison to avoid false positives. Thus, the deviation due to stealthy attacks in PID-Piper is 7X smaller than that of Savior.

Overall, the success rate of PID-Piper is 100% under stealthy attacks, while for the other 3 techniques, it is 0%.

**Table IV: PID-Piper’s Overt Attack Recovery Rate and Deviations Due to Stealthy Attacks on 50m Real RV Missions**

| RV Systems   | Overt Attacks Success Rate | Deviation due to Stealthy Attacks (m) |
|--------------|-----------------------------|---------------------------------------|
| Pixhawk      | 87.5%                       | No Protection: 10, With PID-Piper: 1  |
| Sky-viper    | 88%                         | No Protection: 13, With PID-Piper: 3.5|
| Aion R1      | 86.6%                       | No Protection: 14, With PID-Piper: 1.23|

### F. Performance and Power Overhead
Performance overheads in simulated RVs depend on the computing platform, so we used only the three real RVs for measuring the overheads. PID-Piper incurs performance overheads of 6.91%, 6.78%, and 5.36% for the Pixhawk drone, Sky-viper drone, and the Aion rover, respectively, for an average overhead of 6.35%. In comparison, the average performance overhead for SRR is 6.9%. Therefore, PID-Piper incurs a similar performance overhead compared to SRR while achieving a much higher mission success rate. We exclude CI and Savior from this comparison due to their poor mission success rates.

We estimate the power consumption based on the runtime overhead of PID-Piper. The Pixhawk drone and Aion rover both use an ARM processor and 5000 mAH battery. The processor typically accounts for 12% of the total power consumption. Because PID-Piper adds an overhead of 7%, the total power consumption of the RV increases by 0.84%. Finally, we find that PID-Piper does not increase the RV’s overall mission time, both with and without attacks.

### VII. Discussion
#### Missing Attacks
As seen from the results, PID-Piper achieves over 80% mission success rates under overt attacks, compared to other techniques, which achieve less than 15% success. However, PID-Piper does not achieve mission success in about 17% of cases. This is because the attacks cause significant deviation in the RV’s trajectory towards the end of the mission, and the ML model is unable to correct the deviation in time. To handle such attacks, PID-Piper can be improved using ensemble learning, e.g., two LSTM models, one tailored for attacks towards the end of the mission, and use boosting algorithms to correlate the predictions of both networks to obtain the actuator signals of the RV.

#### Attacks Targeting Other Sensors
We only tested PID-Piper with attacks on the GPS and gyroscope sensors. However, PID-Piper is not limited to these attacks. Attacks on other sensors, such as the accelerometer, magnetometer, or optical sensor of the RV, will also result in fluctuations of the PID controller’s output. Hence, PID-Piper will detect this as an attack and activate the recovery.

#### Adversarial Attacks
It is possible to craft adversarial inputs against PID-Piper if the attacker has knowledge of the ML model itself or has access to the training data (white-box). However, it is possible to mitigate such attacks by certifying the robustness of each prediction or by utilizing decision boundaries, which guarantee that the model does not provide incorrect predictions. On the other hand, attackers can query the system to construct a surrogate model to craft adversarial samples (black-box). It is difficult to launch such attacks against RVs as they are closed systems. It is possible to defend against such attacks by monitoring the similarity index in queries.

### VIII. Related Work
Physical invariants have been used to detect attacks against different CPS. These invariants are specific to the CPS they are designed for. For example, BRUIDS uses domain knowledge to derive rules for detecting different attack types against UAVs. However, this technique is limited to known attack signatures and does not work for previously unseen attacks. ML techniques have been developed to derive invariants and physical dynamics-based monitoring techniques have been proposed to detect attacks against CPS. None of these have been used for RVs, to our knowledge.

In the domain of RVs, physical attacks targeting the RV’s gyroscope, accelerometer, GPS, and optical sensor have been proposed. Only three techniques have been used for attack detection and recovery. We have studied these in detail earlier. CORGIDS finds correlations among system parameters in drones using Hidden Markov Models to detect attacks. However, it does not predict or correct the RV’s behavior and cannot be used for recovery. In recent work, Fei et al. proposed the use of reinforcement learning (RL) in RV controllers to recover from faults and attacks. However, this technique requires the policy to be trained with representative faults and attacks, which are difficult to obtain in practice. Additionally, the RL-based controller cannot control the altitude drop due to gyroscope attacks, ultimately resulting in a crash. Therefore, unlike PID-Piper, this technique will require manual remediation to handle attacks targeting the RV’s gyroscope.

### IX. Conclusion
PID-Piper demonstrates superior performance in detecting and recovering from both overt and stealthy attacks on RVs. It achieves a 100% success rate under stealthy attacks and an 83% success rate under overt attacks, outperforming existing techniques. The system incurs minimal performance and power overheads, making it a practical and effective solution for enhancing the security and reliability of RVs.