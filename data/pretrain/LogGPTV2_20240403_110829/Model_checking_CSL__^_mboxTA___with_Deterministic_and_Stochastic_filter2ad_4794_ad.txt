### External DSPN Solvers and CslTa-Solver Software Schema

**Figure 12. CslTa-Solver Software Schema**

The CslTa-Solver is designed to be more practical for Deterministic Timed Automata (DTAs) by using a parametric approach with propositions and clock constants. These parameters are then instantiated in a way that allows the solver to handle common DTAs, such as \( x[a, \beta] \).

### Evaluation of Existing DSPN Solvers

#### 4.2. Final Evaluation

- **Act-{srV"emply,}**
- **Act-{srV"emply,}**

In our evaluation, we found that many existing DSPN solvers cannot handle large models. Specifically, TimeNET crashes when dealing with DSPNs with a few hundred places. Since we did not have access to the source code, we could not make the necessary modifications to use this tool.

**Characteristics of the Transition Rate Graph (TRG):**

1. The TRG is non-ergodic.
2. The TRG can be very large, often on the order of the number of ASMC states.
3. The TRG may have multiple arcs between pairs of markings.
4. The TRG may have self-loops that preempt deterministic behavior (e.g., caused by a DTA edge with a clock reset in the first clock region \((0, c_1)\)).

To address these characteristics, we considered several DSPN solvers:

- **TimeNET:** Our installation of TimeNET crashes with large DSPNs (a few hundred places). We were unable to modify the source code, so we set this tool aside.
- **SPNica:** SPNica is based on Mathematica and is limited to handling fewer than a thousand places. It addresses all four points above, except for point (1), which we modified. However, it is very slow, likely due to inefficiencies in the code.
- **DSPNexpress:** This tool is distributed as DSPNExpressNG and is not able to handle any of the four points. Points (1) and (3) were addressed by modifying the maximum number of places and transitions, which is correct according to the implementation. Point (4) remains unsolvable. We focused most of our efforts on this tool, but it is still very slow.

Given these limitations, we prefer to use SPNica for small nets and DSPNexpress for larger ones, despite its limitations.

### Results

**Figure 16. Results of DTA 15 for Various \(\mu\)**

- The probability of serving each station in a single round increases with \(\alpha\), but a larger \(\alpha\) induces a lower probability of being in a failure state by time \(\alpha\), leading to the behavior shown in the figure.

**Table 1. DSPN Sizes for the Query in Figure 15**

| N | ASMC States | ASMC Transitions | DSPN Places | DSPN Transitions | TRG Size | Time (seconds) |
|---|--------------|------------------|-------------|------------------|----------|----------------|
| 5 | 240          | 800              | 258         | 1070             | 803      | 10.143         |
| 6 | 576          | 2208             | 594         | 2814             | 1923     | 112.720        |
| 7 | 1344         | 5824             | 1362        | 7198             | 4483     | 1389.700       |
| 8 | 3072         | 14848            | 22          | 43               | 64       | 150            |
| 9 | 6912         | 36864            | 30          | 54               | 84       | 123            |
| 10| 15360        | 89600            | 272         | 114              | 398      | 323            |

### References

1. Donatelli, S., Haddad, S., & Sproston, J. (2009). "Model Checking Timed and Stochastic Properties with CSLTA." IEEE Transactions on Software Engineering, vol. 35, no. 2, pp. 224-240.
2. Lindemann, C. (1998). "Performance Modelling with Deterministic and Stochastic Petri Nets." John Wiley & Sons Ltd.
3. German, R. (2000). "Performance Analysis of Communication Systems - Modeling with Non-Markovian Petri Nets." John Wiley & Sons Ltd.
4. German, R. (2001). "Iterative analysis of Markov regenerative models." Performance Evaluation, 44:51-72.
5. Baier, C., Cloth, L., Haverkort, B. R., Kuntz, M., & Siegle, M. (2007). "Model Checking Markov Chains with Actions and State Labels." IEEE Transactions on Software Engineering, vol. 33, no. 4, pp. 209-224.
6. Aziz, A., Sanwal, K., Singhal, V., & Brayton, R. (2000). "Model Checking Continuous Time Markov Chains." ACM Transactions on Computational Logic.
7. German, R., Kelling, Ch., Zimmermann, A., & Hommel, G. (1995). "TimeNET - A Toolkit for Evaluating Stochastic Petri Nets with Non-Exponential Firing Times." Journal of Performance Evaluation.
8. Baier, C., Haverkort, B., Hermanns, H., & Katoen, J.-P. (2003). "Model-Checking Continuous-Time Markov Chains." IEEE Transactions on Software Engineering, Vol. 29, No. 7.
9. Chen, T., Han, T., Katoen, J.-P., & Mereacre, A. (2009). "Quantitative Model Checking of Continuous-Time Markov Chains Against Timed Automata Specifications." Symposium on Logic in Computer Science, pages 309-318.
10. Hinton, A., Kwiatkowska, M., Norman, G., & Parker, D. (2006). "PRISM: A Tool for Automatic Verification of Probabilistic Systems." Proc. 12th International Conference on Tools and Algorithms for the Construction and Analysis of Systems (TACAS'06).
11. Katoen, J.-P., Zapreev, I. S., Hahn, E. M., Hermanns, H., & Jansen, D. N. (2009). "The Ins and Outs of the Probabilistic Model Checker MRMC." Quantitative Evaluation of Systems, International Conference on, pp. 167-176.
12. Alur, R., & Dill, D. (1990). "Automata for Modeling Real-Time Systems." In Proc. of ICALP'90, vol. 443.
13. Berard, B., Cassez, F., Haddad, S., Lime, D., & Roux, O. H. (2008). "When are Timed Automata weakly timed bisimilar to Time Petri Nets?" Theoretical Computer Science, Volume 403, Elsevier Science Publishers Ltd.

### Conclusions and Future Work

In this paper, we presented a simple yet effective method for translating a CSL TA query into an equivalent deterministic and stochastic Petri net. This allows us to build a full CSL TA model checker with minimal software development, reusing existing DSPN tools. Despite the fact that we used DSPN tools that have been around for a while, we encountered several difficulties, as discussed. Current work is focused on developing a new DSPN solver that fulfills all the listed requirements. Even with such a solver, the MRP numerical solution can become a bottleneck, being very expensive in both time and space. We are currently working on extending the iterative approach proposed in [4] and on a decomposition-based approach that should allow us to save both space and time.

**Acknowledgments:**

We would like to thank R. German for his help in modifying SPNica for non-ergodic DSPNs.

Â©2010 IEEE
614
DSN 2010: Amparore & Donatelli
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18, 2021 at 13:55:53 UTC from IEEE Xplore. Restrictions apply.