User: How to use the Python language to implement an automated script to monitor the status of the server, including indicators such as CPU, memory, and disk?
Assistant: To implement an automated script to monitor the status of the server, you can take the following steps: 1. Choose a suitable Python library or framework, for example, psutil can obtain system information such as CPU, memory, and disk. 2. Write a main function to read and record system indicators cyclically, and output them through logs or other methods. 3. Set thresholds or rules, and trigger notifications or other actions, such as sending emails or text messages, when an indicator exceeds the set value. Here is a simple sample code: ```python import psutil import logging logging.basicConfig(filename='monitor.log', level=logging.INFO, format='%(asctime)s %(levelname)s %(message )s') def main(): while True: cpu_usage = psutil.cpu_percent(interval=1) memory = psutil.virtual_memory() memory_usage = memory.percent disk = psutil.disk_usage('/') disk_usage = disk.percent logging .info(f'CPU usage: {cpu_usage}%, Memory usage: {memory_usage}%, Disk usage: {disk_usage}%') # add your rule here, eg if cpu_usage > 80: logging.warning(f'CPU usage exceeds 80%!') if __name__ == '__main__': main() ``` This script will read CPU, memory, disk and other indicators in a loop every second, and output them to the log file. When the CPU usage exceeds 80%, a warning log will be output. You can extend this script for more monitoring and manipulation as needed.