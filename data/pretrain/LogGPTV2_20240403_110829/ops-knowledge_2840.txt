User: I'm re-writing a legacy Windows application using Python and running on Linux.  Initially, the new application needs to call the legacy application so that we have consistent results between customers still using the legacy application and customers using the new application. 
So I have a Linux box, sitting right next to a Windows box and I want a process on the Linux box to execute a command on the Windows box and capture the result (synchronously).
My initial thought was to write a web service on the Windows box, but that would mean running a web server on the Windows machine in addition to the legacy application.
So then I thought that using Twisted.Conch might allow me to just execute a command over the network without the additional overhead of running a web server, but I assume there is also overhead with running an ssh server on the Windows machine.
What are some alternative ways that I can initiate a synchronous process on a different machine, using Python, besides a web service or ssh, or is a web service or ssh the best approach?  Also, if a web service or ssh are the best routes to pursue, is Twisted something that I should consider using?
Assistant: Another option is paramiko. It's a Python library that implements SSH. I've used it to remotely execute commands and transfer files to windows boxes running an SSH server. The problem is it doesn't properly capture stdout on windows due to the peculiarities of the windows command shell. You may have the same problem with a solution based on twisted.
What kind of results are you trying to capture?