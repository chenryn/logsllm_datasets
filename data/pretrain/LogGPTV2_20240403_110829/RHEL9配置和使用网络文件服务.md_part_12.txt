::: titlepage
# []{#assembly_using-samba-as-a-server_configuring-and-using-network-file-services.html#assembly_running-samba-on-a-server-with-fips-mode-enabled_assembly_using-samba-as-a-server}在启用了 FIPS 模式的服务器上运行 Samba {.title}
:::
本节概述了在启用了 FIPS 模式的情况下运行 Samba 的限制。还提供了在运行
Samba 的 Red Hat Enterprise Linux 主机上启用 FIPS 模式的流程。
::: section
::: titlepage
## []{#assembly_using-samba-as-a-server_configuring-and-using-network-file-services.html#ref_limitations-of-using-samba-in-fips-mode_assembly_running-samba-on-a-server-with-fips-mode-enabled}在 FIPS 模式中使用 Samba 的限制 {.title}
:::
在指定条件下，以下 Samba 模式和功能在 FIPS 模式下工作：
::: itemizedlist
-   Samba 仅在 Active
    Directory(AD)或使用AES密码进行Kerberos身份验证的红帽身份管理(IdM)环境中作为域成员。
-   Samba 作为 Active Directory
    域成员上的文件服务器。但是，这需要客户端使用 Kerberos
    向服务器进行身份验证。
:::
由于 FIPS 的安全性增强，如果启用了 FIPS 模式，以下 Samba
特性和模式将无法正常工作：
::: itemizedlist
-   NT LAN Manager(NTLM)验证，因为 RC4 密码已被阻止
-   服务器消息块版本 1(SMB1)协议
-   独立文件服务器模式，因为它使用了 NTLM 身份验证
-   NT4 风格的域控制器
-   NT4 风格的域成员.请注意,红帽继续支持后台使用的主域控制器（PDC）功能
    IdM。
-   针对Samba 服务器的密码修改.您只能对 Active Directory 域控制器使用
    Kerberos 进行密码修改。
:::
以下特性没有在 FIPS 模式下测试，因此红帽不支持：
::: itemizedlist
-   将 Samba 作为打印服务器来运行
:::
:::
::: section
::: titlepage
## []{#assembly_using-samba-as-a-server_configuring-and-using-network-file-services.html#proc_using-samba-in-fips-mode_assembly_running-samba-on-a-server-with-fips-mode-enabled}在 FIPS 模式下使用 Samba {.title}
:::
这部分描述了如何在运行 Samba 的 RHEL 主机上启用 FIPS 模式。
::: itemizedlist
**先决条件**
-   在 Red Hat Enterprise Linux 主机上配置了Samba 。
-   Samba 以 FIPS 模式支持的模式运行。
:::
::: orderedlist
**流程**
1.  在 RHEL 中启用 FIPS 模式：
    ``` literallayout
    # fips-mode-setup --enable
    ```
2.  重启服务器：
    ``` literallayout
    # reboot
    ```
3.  使用 `testparm`{.literal} 工具来验证配置：
    ``` literallayout
    # testparm -s
    ```
    如果命令显示任何错误或不兼容，请修复它们以确保 Samba 正常工作。
:::
::: itemizedlist
**其它资源**
-   ["在 FIPS 模式中使用 Samba
    的限制"一节](#assembly_using-samba-as-a-server_configuring-and-using-network-file-services.html#ref_limitations-of-using-samba-in-fips-mode_assembly_running-samba-on-a-server-with-fips-mode-enabled "在 FIPS 模式中使用 Samba 的限制"){.xref}
:::
:::
:::
::: section
::: titlepage
# []{#assembly_using-samba-as-a-server_configuring-and-using-network-file-services.html#assembly_tuning-the-performance-of-a-samba-server_assembly_using-samba-as-a-server}调整 Samba 服务器的性能 {.title}
:::
本章描述了在某些情况下，什么设置可以提高 Samba
的性能，以及哪些设置可能会对性能造成负面影响。
本节的部分内容来自在 Samba Wiki 中发布的 [Performance
Tuning](https://wiki.samba.org/index.php/Performance_Tuning){.link}
文档。许可证： [CC BY
4.0](https://creativecommons.org/licenses/by/4.0/){.link}。作者和贡献者：请参阅
Wiki
页面上的[历史](https://wiki.samba.org/index.php?title=Performance_Tuning&action=history){.link}选项卡。
::: itemizedlist
**先决条件**
-   Samba 被设置为文件或打印服务器
:::
::: section
::: titlepage
## []{#assembly_using-samba-as-a-server_configuring-and-using-network-file-services.html#proc_setting-the-smb-protocol-version_assembly_tuning-the-performance-of-a-samba-server}设置 SMB 协议版本 {.title}
:::
每个新的 SMB 版本都添加了特性并提高了协议的性能。最新的 Windows 和
Windows 服务器操作系统始终支持最新的协议版本。如果 Samba
也使用最新的协议版本，那么连接到 Samba 的 Windows
客户端将从性能改进中受益。在 Samba 中，server max
protocol的默认值被设置为最新支持的稳定的 SMB 协议版本。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
要始终拥有最新的稳定的 SMB 协议版本，请不要设置
`server max protocol`{.literal} 参数。如果手动设置参数，则需要修改 SMB
协议的每个新版本的设置，以便启用最新的协议版本。
:::
以下流程解释了如何对 `server max protocol`{.literal} 参数使用默认值。
::: orderedlist
**步骤**
1.  从 `/etc/samba/smb.conf`{.literal} 文件的 `[global]`{.literal}
    部分中删除 `server max protocol`{.literal} 参数。
2.  重新载入 Samba 配置
    ``` literallayout
    # smbcontrol all reload-config
    ```
:::
:::
::: section
::: titlepage
## []{#assembly_using-samba-as-a-server_configuring-and-using-network-file-services.html#proc_tuning-shares-with-directories-that-contain-a-large-number-of-files_assembly_tuning-the-performance-of-a-samba-server}与包含大量文件的目录调整共享 {.title}
:::
Linux
支持区分大小写的文件名。因此，在搜索或访问文件时，Samba需要针对大小写文件名来扫描目录。您可以将共享配置为只以小写或大写来创建新文件，这可以提高性能。
::: itemizedlist
**先决条件**
-   Samba 配置为文件服务器
:::
::: orderedlist
**步骤**
1.  将共享上的所有文件重命名为小写。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    使用这个过程中的设置，名称不为小写的文件将不再显示。
    :::
2.  在共享部分中设置以下参数：
    ``` literallayout
    case sensitive = true
    default case = lower
    preserve case = no
    short preserve case = no
    ```
    有关参数的详情，请查看 `smb.conf(5)`{.literal} 手册页 中的描述。
3.  验证`/etc/samba/smb.conf`{.literal}文件：
    ``` literallayout
    # testparm
    ```
4.  重新载入 Samba 配置：
    ``` literallayout
    # smbcontrol all reload-config
    ```
:::
应用了这些设置后，此共享上所有新创建的文件的名称都使用小写。由于这些设置，Samba
不再需要针对大小写来扫描目录，这样可以提高性能。
:::
::: section
::: titlepage
## []{#assembly_using-samba-as-a-server_configuring-and-using-network-file-services.html#con_settings-that-can-have-a-negative-performance-impact_assembly_tuning-the-performance-of-a-samba-server}可能会对性能造成负面影响的设置 {.title}
:::
默认情况下，Red Hat Enterprise Linux
中的内核会根据高网络性能进行了微调。例如，内核对缓冲区大小使用自动轮询机制。在
`/etc/samba/smb.conf`{.literal} 文件中设置 `socket options`{.literal}
参数会覆盖这些内核设置。因此，设置此参数会在大多数情况下降低 Samba
网络性能。
要使用内核的优化的设置，请从 `/etc/samba/smb.conf`{.literal} 中的
`[global]`{.literal} 部分删除 `socket options`{.literal} 参数。
:::
:::
::: section
::: titlepage
# []{#assembly_using-samba-as-a-server_configuring-and-using-network-file-services.html#assembly_configuring-samba-to-be-compatible-with-clients-that-require-an-smb-version-lower-than-the-default_assembly_using-samba-as-a-server}将 Samba 配置为与需要 SMB 版本低于默认版本的客户端兼容 {.title}
:::
Samba
对它支持的最小服务器消息块(SMB)版本使用合理的安全默认值。但是，如果您的客户端需要较旧的
SMB 版本，您可以配置 Samba 来支持它。
::: section
::: titlepage
## []{#assembly_using-samba-as-a-server_configuring-and-using-network-file-services.html#setting-the-minimum-smb-protocol-version-supported-by-a-samba-server_assembly_configuring-samba-to-be-compatible-with-clients-that-require-an-smb-version-lower-than-the-default}设置 Samba 服务器支持的最小 SMB 协议版本 {.title}
:::
在 Samba 中，`/etc/samba/smb.conf`{.literal} 文件中的
`server min protocol`{.literal} 参数定义了 Samba
服务器支持的最小服务器消息块(SMB)协议版本。这部分论述了如何更改最小 SMB
协议版本。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
默认情况下，RHEL 8.2 及之后版本上的 Samba 只支持 SMB2
和更新的协议版本。红帽建议不要使用已弃用的 SMB1
协议。但是，如果您的环境需要 SMB1，您可以手动将
`server min protocol`{.literal} 参数设置为 `NT1`{.literal} 来重新启用
SMB1。
:::
::: itemizedlist
**先决条件**
-   已安装并配置 Samba。
:::
::: orderedlist
**流程**
1.  编辑 `/etc/samba/smb.conf`{.literal} 文件，添加
    `server min protocol`{.literal}
    参数，并将参数设置为服务器应支持的最小 SMB 协议版本。例如，要将 SMB
    协议的最小版本设置为 `SMB3`{.literal}，请添加：
    ``` literallayout
    server min protocol = SMB3
    ```
2.  重启`smb`{.literal}服务：
    ``` literallayout
    # systemctl restart smb
    ```
:::
::: itemizedlist
**其它资源**
-   `smb.conf(5)`{.literal} man page
:::
:::
:::
::: section
::: titlepage
# []{#assembly_using-samba-as-a-server_configuring-and-using-network-file-services.html#assembly_frequently-used-samba-command-line-utilities_assembly_using-samba-as-a-server}经常使用 Samba 命令行工具 {.title}
:::
本章论述了使用 Samba 服务器时经常使用的命令。
::: section
::: titlepage
## []{#assembly_using-samba-as-a-server_configuring-and-using-network-file-services.html#proc_using-the-net-ads-join-and-net-rpc-join-commands_assembly_frequently-used-samba-command-line-utilities}使用 net ads join 和 net rpc join 命令 {.title}
:::
使用 `net`{.literal} 工具的 `join`{.literal} 子命令，您可以将 Samba
加入到 AD 或 NT4 域。要加入域，您必须手动创建
`/etc/samba/smb.conf`{.literal} 文件，并有选择地更新其他配置，如 PAM。
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
红帽建议使用 `realm`{.literal} 工具来加入域。`realm`{.literal}
工具自动更新所有涉及的配置文件。
:::
::: orderedlist
**流程**
1.  使用以下设置手动创建 `/etc/samba/smb.conf`{.literal} 文件：
    ::: itemizedlist
    -   对于 AD 域成员：
        ``` literallayout
        [global]
        workgroup = domain_name
        security = ads
        passdb backend = tdbsam
        realm = AD_REALM
        ```
    -   对于 NT4 域成员：
        ``` literallayout
        [global]
        workgroup = domain_name
        security = user
        passdb backend = tdbsam
        ```
    :::
2.  为 `*`{.literal} 默认域和要加入到 `/etc/samba/smb.conf`{.literal}
    文件中 `[global`{.literal}\] 部分的域添加 ID 映射配置。