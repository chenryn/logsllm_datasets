on 154.213.21[.]207. Suspicious network traffic between this Poison Ivy C2 and 
several Vatican hosts, as well as an Indian aviation entity, were observed by Insikt 
Group analysts.
Two other IP addresses within the same 24-bit CIDR range, 154.213.21[.]73 
and 154.213.21[.]70, were also identified communicating with overlapping 
Vatican infrastructure at this time. A Cobalt Strike sample (SHA256: 
7824eb5f173c43574593bd3afab41a60e0e2ffae80201a9b884721b451e6d935), 
uploaded from an Italian IP address to a malware multiscanner repository as a 
zipped file the same day as the Poison Ivy sample, also used the 154.213.21[.]70 
IP for command and control. 
Figure 5: Maltego chart of RedDelta infrastructure.
Domain
Registration Timestamps
sbicabsec[.]com
November 26, 2019 10:31:18Z
systeminfor[.]com
November 19, 2019 07:06:03Z
cabsecnow[.]com
September 17, 2019 02:37:37Z
cab-sec[.]com
September 17, 2019 02:37:34Z
forexdualsystem[.]com
October 22, 2018 01:09:46Z*
lionforcesystems[.]com
October 22, 2018 01:09:45Z*
apple-net[.]com
October 22, 2018 01:09:46Z*
wbemsystem[.]com
October 17, 2018 06:51:02Z*
Table 2: Domains with “Ma Ge Bei Luo Xiang Gang Jiu Dian” registrant organization.
(*Domains now re-registered) 
Figure 6: Context panel from the Recorded Future Intelligence Card™ for ipsoftwarelabs[.]com.
CYBER THREAT ANALYSIS | CHINA
www.recordedfuture.com | Recorded Future®
 CTA-CN-2020-0728
6
This cluster of activity does not overlap with the infrastructure identified 
in the PlugX cluster. The WHOIS registration data for the domains miscrosaft[.]
com and hostareas[.]com contains the registrant organization “sec.” While less 
distinct than the “Ma Ge Bei Luo Xiang Gang Jiu Dian’’ registrant identified earlier 
in the PlugX cluster, there are still relatively few domains associated with this 
organization, and fewer still that were registered through GoDaddy. Using these 
characteristics, we identified that the domains svrhosts[.]com, strust[.]club, and 
svchosts[.]com all match this criteria and are previously reported Mustang Panda 
Cobalt Strike C2 domains. In particular, svrhosts[.]com and svchosts[.]com were 
both registered at the same time as hostareas[.]com on February 3, 2019 through 
GoDaddy.
Malware Analysis
While there is notable targeting and infrastructure overlap between this 
RedDelta campaign and publicly reported Mustang Panda activity, there are some 
deviations in tactics, techniques, and procedures (TTPs) used in both. For instance, 
Mustang Panda has typically used Windows Shortcut (LNK) files containing an 
embedded HTA (HTML Application) file with a VBScript or PowerShell script to load 
PlugX and Cobalt Strike Beacon payloads. However, in this campaign, RedDelta 
used ZIP files containing legitimate executables masquerading as lure documents, 
a notable departure from Mustang Panda activity that has been publicly reported 
previously. This legitimate executable is used to load a malicious DLL also 
present within the ZIP file through DLL sideloading, before the target is shown 
a decoy document. While Mustang Panda have used DLL sideloading previously, 
the PlugX variant used in association with this campaign has key differences 
from more traditional PlugX variants, particularly in the C2 protocol used and 
the configuration encoding within the samples, leading us to refer to it as the 
“RedDelta PlugX” variant below — however, this is not intended to suggest that 
this variant is used exclusively by this group and is in reference to the first group 
we have seen using this variant.
Figure 7: Execution diagram of the malware associated with RedDelta PlugX.
RedDelta PlugX: ‘Hong Kong Security Law’ Lure
The first sample, titled “About China’s plan for Hong Kong security 
law.zip” 
(SHA256:86590f80b4e1608d0367a7943468304f7eb665c9195 
c24996281b1a958bc1512), corresponds to the Union of Catholic Asian News lure 
delivering the RedDelta PlugX variant. Although Insikt Group does not have full 
visibility into this infection chain, the ZIP file is likely to have been delivered via a 
spearphishing email. The ZIP contains two files:
File Name
About China’s plan for Hong Kong security law.exe
SHA256 Hash
6c959cfb001fbb900958441dfd8b262fb33e052342 
948bab338775d3e83ef7f7 Hash
File Name
wwlib.dll
SHA256 Hash
f6e5a3a32fb3aaf3f2c56ee482998b09a6ced0a60 
c38088e7153f3ca247ab1cc Hash
Stage 1: Wwlib.dll DLL Sideload and Hk.dat Download 
and Execution
“About China’s plan for Hong Kong security law.exe” is a legitimate Windows 
loader for Microsoft Word that is vulnerable to sideloading.  When executed, it 
sideloads the malicious DLL, “wwlib.dll.”
Wwlib.dll initializes the loading stage by downloading, decoding, and executing 
an XOR-encoded Windows executable file, hk.dat, from http://167.88.180[.]198/
hk.dat. Next, wwlib.dll will extract a Word document, “About China’s plan for Hong 
Kong security law.docx” from its resource section and open it to make it appear to 
the user that a legitimate Microsoft Word document was opened.
Stage 2: Hk.exe/AAM Updates.exe DLL Sideloading to 
Load PlugX Variant
After “hk.dat” is decoded and executed, it will create three files in the 
C:\%APPDATA%/local/temp directory:
• Hk.exe (SHA256: 0459e62c5444896d5be404c559c834ba455fa5cae1689c 
70fc8c61bc15468681) - A legitimate Adobe executable that is vulnerable 
to DLL sideloading
CYBER THREAT ANALYSIS | CHINA
Recorded Future® | www.recordedfuture.com
 CTA-CN-2020-0728
7
• Hex.dll (SHA256: bc6c2fda18f8ee36930b469f6500e28096eb6795e5fd17c 
44273c67bc9fa6a6d) -  The malicious DLL sideloaded by hk.exe that 
decodes and loads adobeupdate.dat
• Adobeupdate.dat (SHA256: 01c1fd0e5b8b7bbed62bc8a6f7c9ceff1725d4ff 
6ee86fa813bf6e70b079812f) - The RedDelta PlugX variant loader
Next, “hk.exe” is executed and creates copies of the files “adobeupdate.dat,” 
“hex.dll,” and itself renamed as “AAM Updates.exe” in the folder “C:\ProgramData\
AAM UpdatesIIw.” “AAM Updates.exe” is then executed, starting the installation 
process by sideloading the malicious “hex.dll.” “Hex.dll” will decode and execute 
“adobeupdate.dat,” which ultimately leads to the execution of the RedDelta PlugX 
variant in memory. This use of DLL sideloading, including the use of this specific 
Adobe executable, aligns with recent public reporting of Mustang Panda PlugX 
use (1, 2).
RedDelta PlugX: ‘Qum, the Vatican of Islam’ Lure 
The second PlugX sample uses the same loading method identified above. In 
this case, the same WINWORD.exe executable is used to load another malicious 
wwlib.dll file. The sample then contacts http://103.85.24[.]190/qum.dat to retrieve 
the XOR-encoded Windows executable file, qum.dat. This sample uses the same 
C2 as above, www.systeminfor[.]com.
RedDelta PlugX: Vatican Lure Targeting Hong Kong 
Study Mission
The final PlugX sample featuring the Vatican Hong Kong Study Mission 
lure also uses largely the same PlugX loading method. In this case, the ZIP file 
contains a benign Adobe Reader executable, AcroRd32.exe, renamed “DOC-
2020-05-15T092742.441.exe,” which is used to load the malicious acrord32.dll 
file through DLL sideloading. In this case the sample retrieves the file dis.dat from 
http://167.88.180[.]198/dis.dat and uses the same C2 referenced in the previous 
samples.
RedDelta PlugX: Installation Process
Insikt Group performed detailed analysis on the DAT files related to the “Union 
of Catholic Asian News” and “Qum, the Vatican of Islam” lure. Analysis of these 
samples showed two DAT files were downloaded from the URLs listed in the table 
below:
In each case, the file (“hk.dat” or “qum.dat“) is downloaded and executed after 
initial execution of the phishing lure, as described above in “Stage 1: Wwlib.dll DLL 
Sideload and Hk.dat Download and Execution.” Both files are RtlCompress/LZNT1 
compressed, as well as XOR-encoded. The XOR key precedes the encoded data, 
allowing the file to be more easily decoded during static analysis. A Python script 
to decompress and decode the payload can be found on our GitHub repository.
After the DAT files are decompressed and decoded, they are executed. The 
execution details for “hk.dat” have been detailed above (see: “Stage 2:  Hk.exe/AAM 
File Name
Download Location
SHA256 Hash
hk.dat
http://167.88.180[.]198/hk.dat
2fb4a17ece461ade1a2b63bb8db1 
9947636c6ae39c4c674fb4b7d4f9 
0275d20
qum.dat
http://103.85.24[.]190/qum.
dat
476f80521bf6789d02f475f67e0f4 
ede830c4a700c3f7f64d99e8118 
35a39e
Updates.exe DLL Sideloading to Load PlugX Variant“) and are nearly identical to 
that of “qum.dat.” As with the hk.dat sample associated with the “Union of Catholic 
Asian News” lure, the main purpose of this stage of the malware is to perform the 
DLL sideloading step in order to execute the PlugX variant.
Again, the final stage consists of three files: a non-malicious executable, a 
malicious sideloaded DLL, and the encoded DAT file which are all used to sideload 
the final payload. This is consistent with a typical PlugX installation. 
Like the first-stage DAT files, the PlugX loaderDAT file is XOR-encoded and 
the decode key precedes the encoded data in the file; however, they are not 
RtlCompress/LZNT1 compressed as the initial stage files are. A Python script to 
decode the PlugX loader, as well as the configuration block, is contained on our 
GitHub repository.
RedDelta: An Updated PlugX Variant
The PlugX variant used in the RedDelta campaign is similar to the PlugX 
variants previously associated with Mustang Panda by Avira and Anomali. Both 
make heavy use of stack strings as an obfuscation mechanism, as seen in Figure 
8, making it harder for an analyst to use strings to determine the functionality or 
purpose of the code.
CYBER THREAT ANALYSIS | CHINA
www.recordedfuture.com | Recorded Future®
 CTA-CN-2020-0728
8
Figure 8: Comparison of Anomali/Avira PlugX variant stack string implementation and RedDelta stack 
string implementation.
However, the configuration block for the RedDelta PlugX variant has one 
key distinction: the Avira-reported Mustang Panda configuration block decoding 
function looks for the string “XXXXXXXX” to determine whether the configuration 
is encoded, while the RedDelta variant looks for the string “########.” Apart from 
the different demarcator strings, both variants use the same rolling XOR encoding 
with the key “123456789.”  The configuration block decode routine can be seen 
in Figure 9, below.
CYBER THREAT ANALYSIS | CHINA
Recorded Future® | www.recordedfuture.com
 CTA-CN-2020-0728
9
Figure 9: Comparison of configuration block in Anomali/Avira PlugX (showing the “XXXXXXXX” 
demarcator) and the RedDelta configuration block (showing the “########” demarcator).
A Python implementation of this algorithm can be observed in Figure 10, 
below.
Figure 10: Python implementation of RedDelta PlugX configuration block decoding mechanism.
In conventional PlugX samples, the configuration block is encrypted with a 
more complex algorithm using multiple keys in combination with shift left and shift 
right bitwise operations. For example, the Python code implementing this algorithm, 
as seen in Figure 11, was created by Kyle Creyts based on Takahiro Haruyama’s 
extensive research and analysis on PlugX. 
Figure 11: Python implementation of traditional PlugX configuration block decoding mechanism by 
Kyle Creyts.
The configuration block encryption associated with the RedDelta variant is 
considerably less sophisticated when compared to traditional PlugX samples, and 
while both make use of XOR-based ciphers, the simple algorithm used by RedDelta 
would be easier to brute force by an analyst.
CYBER THREAT ANALYSIS | CHINA
www.recordedfuture.com | Recorded Future®
 CTA-CN-2020-0728
10
Command and Control Protocol 
The C2 protocol used for the RedDelta PlugX malware differs from the Mustang 
Panda PlugX. While both variants use the HTTP POST method common to PlugX 
including the number of “61456” in the POST header field which is a clear indicator 
of a PlugX HTTP POST. However, the RedDelta variant does not include the URI 
string  “/update?wd=” more commonly associated with PlugX, as seen in Figure 12.
Figure 12: HTTP POST request from Anomali/Avira PlugX variant and RedDelta PlugX variant.
The RedDelta PlugX variant encrypts its C2 communications very differently 
when compared to the Mustang Panda variant reported by Anomali and Avira. 
Instead of using XOR encoding, RedDelta uses RC4 encryption where the first 
10 bytes of the passcode are hardcoded and the last four bytes are randomly 
generated and included as a key within the TCP packet so that the communication 
can be decrypted. The hardcoded portion of the RC4 passphrase is “!n&U*O%Pb$.” 
Figure 13 shows the function where the RC4 passphrase is defined as well as 
where the last four bytes are appended to create the full key. A Python script to 
decode the RedDelta C2 communication from a supplied PCAP can be found on 
our GitHub repository. 
Despite the different C2 encryption schemes, both RedDelta and Mustang 
Panda variants’ C2 traffic decrypts to the familiar PlugX header format, as shown 
in Figure 14.
Figure 14: PlugX header and data.
In conventional PlugX samples, the C2 uses the same algorithm as in the 
configuration decode (see Figure 11), with part of the key being the first four bytes 
of the TCP transmission. While the RedDelta PlugX variant also uses the first four 
bytes of the TCP transmission as a part of the key, the use of RC4 for C2 encryption 
demonstrates a departure from the usual PlugX C2 traffic encryption mechanism.
Figure 13: C2 encryption/decryption routine showing the first four hardcoded bytes of the 
RC4 key used in RedDelta PlugX variant.
CYBER THREAT ANALYSIS | CHINA
Recorded Future® | www.recordedfuture.com
 CTA-CN-2020-0728
11
While Recorded Future has not done extensive code analysis to further 
compare the samples, we have highlighted fundamental differences between the 
RedDelta PlugX variants and conventional PlugX, notably in the configuration block 
and C2 communication. Additionally, while RedDelta has implemented a modular 
delivery system based on traditional PlugX tactics, it also provides the group with 
the ability to change, enhance or remove functionality as needed.
Cobalt Strike
The file, OneDrive.exe, is responsible for loading the Cobalt Strike payload. 
When executed, OneDrive will reach out to http://154.213.21[.]27/DotNetLoader40.
exe, download the file DotNetLoader40.exe and invoke the “RunRemoteCode” 
function contained within it.
DotNetLoader40.exe is a small .NET executable that essentially downloads and 
then executes shellcode. The main function in DotNetLoader is “RunRemoteCode” 
which takes a URL as an argument. The content is downloaded from the provided 
URL, in this case, http://154.213.21[.]27/beacon.txt, and then sent to the function 
“InjectShellCode.” The shellcode is then base64 decoded, decompressed, saved 
to memory, and executed. 
The shellcode loaded is Cobalt Strike Beacon, which is configured using the 
Havex Malleable C2 profile. This Havex C2 code has been published on GitHub 
and can be used by any entity that wishes to use it; and in this case, the attacker 
is doing so in conjunction with Cobalt Strike. This can be seen both through the 
URI used within the C2 URL (http://154.213.21[.]70/wp08/wp-includes/dtcla.php) 
and the client and server headers and HTML content displayed below in Figure 15.
Figure 15: Network connections and server response to Cobalt Strike Beacon Havex Malleable C2 
sample.
Poison Ivy
File Name
MpSvc.dll
SHA256 Hash
9bac74c592a36ee249d6e0b086bfab395a37537ec87c2095f999c00b946ae81d
The identified Poison Ivy sample is loaded using the above MpSvc.dll file, 
masquerading as the Microsoft Windows Defender file of the same name. Once 
loaded, web.miscrosaft[.]com is used for command and control.
File Name
OneDrive.exe
SHA256 Hash
7824eb5f173c43574593bd3afab41a60e0e2ffae80201a9b884721b451e6d935
CYBER THREAT ANALYSIS | CHINA
www.recordedfuture.com | Recorded Future®
 CTA-CN-2020-0728
12
Outlook
Our research uncovered a suspected China state-sponsored campaign 
targeting multiple high-profile entities associated with the Catholic Church ahead 
of the likely renewal of the provisional China-Vatican deal in September 2020. 
The CCP’s warming diplomatic relations with the Holy See has been commonly 
interpreted as a means to facilitate increased oversight and control over its 
unofficial Catholic church. This also supports the CCP’s wider stated goal of 
“sinicizing religions” in China. Furthermore, it demonstrates that China’s interest 
in control and surveillance of religious minorities is not confined to those within 
the “Five Poisons,” exemplified by the continued persecution and detainment of 
underground church members and allegations of physical surveillance of official 
Catholic and Protestant churches. 
The U.S. Ambassador-at-Large for International Religious Freedom recently 
expressed concern regarding the impact of the new national security law within 
Hong Kong, stating it has the “potential to significantly undermine religious 
freedom.” The targeting of the Catholic diocese of Hong Kong is likely a valuable 
intelligence source for both monitoring the diocese’s position on Hong Kong’s pro-
democracy movement and its relations with the Vatican. This marks a possible 
precursor to increased limits on religious freedom within the special administrative 
region, particularly where it coincides with pro-democracy or anti-Beijing positions.
RedDelta is a highly active threat activity group targeting entities relevant 
to Chinese strategic interests. Despite the group’s consistent use of well-known 
tools such as PlugX and Cobalt Strike, infrastructure reuse, and operations security 
failures, these intrusions indicate RedDelta is still being tasked to satisfy intelligence 
requirements. In particular, this campaign demonstrates a clear objective to target 
religious bodies, and therefore we feel this is particularly pertinent for religious 
and non-governmental organizations (NGOs) to take note and invest in network 
defenses to counter the threat posed by Chinese state-sponsored threat activity 
groups like RedDelta. A lack of ability to invest in security and detection measures 
for many NGOs and religious organizations greatly increases the likelihood of 
success for well-resourced and persistent groups, even using well-documented 
tools, TTPs, and infrastructure.
Network Defense Recommendations
Recorded Future recommends that users conduct the following measures to 
detect and mitigate activity associated with RedDelta activity: 
• Configure your intrusion detection systems (IDS), intrusion prevention 
systems (IPS), or any network defense mechanisms in place to alert on — 
and upon review, consider blocking illicit connection attempts from — the 
external IP addresses and domains listed in the appendix.
Additionally, we advise organizations to follow the following general 
information security best practice guidelines:
• Keep all software and applications up to date; in particular, operating 
systems, antivirus software, and core system utilities.
• Filter email correspondence and scrutinize attachments for malware.
• Make regular backups of your system and store the backups offline, 