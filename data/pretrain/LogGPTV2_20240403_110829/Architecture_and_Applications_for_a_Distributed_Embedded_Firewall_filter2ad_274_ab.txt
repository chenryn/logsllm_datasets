### 3CR990 NICs and Their Role in EFW

The 3CR990 NICs take a significant step forward by integrating multiple functions onto fewer chips. The assumptions that apply to Claim 3 also hold for Claim 4, which is not coincidental. While the EFW NIC is typically managed remotely, it can also be locally managed by an EFW policy server to protect itself. The protection mechanisms on the EFW NIC do not differentiate between local and remote policy servers, and the host does not have privileged access to the EFW NIC.

### Supporting Assumptions for Claims 8, 9, and 10

Claims 8, 9, and 10 share identical supporting assumptions:

- **Claim 9**: All communication between the policy server and the NIC is authenticated using 3DES.
- **Claim 10**: Only the EFW policy server and the EFW NIC possess the cryptographic key.

These assumptions are validated by the same controls, ensuring that attackers cannot masquerade as the EFW policy server.

### Technology Controls

**Claim 9**: All communication between the policy server and the NIC is authenticated using 3DES. This assumes:
- The work factor required to break 3DES is too high.

### Procedural and Physical Security Controls

**Claim 10**: Only the EFW policy server and the EFW NIC possess the cryptographic key. This assumes:
- Only authorized users can access the EFW policy server.
- EFW cryptographic keys are protected from compromise.

### High-Level Architecture of EFW

The high-level architecture of EFW is illustrated in Figure 2. The protected host can be a client workstation, a server, or any other device that supports the NIC. The policy server should be installed on a dedicated host and protected by its own EFW NIC. The following sections provide more detailed descriptions of the components on each platform.

### Other Objectives

While much of the research behind EFW was funded by the US Department of Defense (DoD), the DoD increasingly relies on commercial-off-the-shelf solutions. Therefore, the needs of the DoD and the commercial marketplace are not dissimilar. We considered commercial viability and acceptance throughout this effort. In addition to being secure, EFW needed to be cost-effective, scalable, and easy to manage.

#### Cost-Effective

Implementing EFW on a NIC prompted the motto: "fast, simple, and cheap." For performance, a NIC has a tight processing loop, and our solution had to fit within those constraints. Given the limited memory, complex processing is offloaded to the EFW policy server. The 3CR990 NIC is relatively inexpensive, and we aimed to maintain this affordability. Modifications were confined to the NIC's firmware to avoid altering existing hardware and drivers.

#### Scalable

To facilitate commercial acceptance, administrators must be able to introduce EFW incrementally. Some may start by protecting a few critical servers, while others may deploy EFW to every client desktop with policies enforcing "good network hygiene." The differences between large and small deployments are minimized through management abstractions, explained in Section 4. A master/slave architecture is adopted between the policy server and its NICs.

#### Friendly to Manage

To make EFW user-friendly, we developed several administration tools, including a policy editor, an EFW device (NIC) manager, and an audit logger and event viewer. These tools use abstractions to reduce complexity, making EFW invisible to end users and incorporating familiar management paradigms for administrators.

### EFW Components on the Protected Host

Three components reside on each protected host:
- **EFW-enhanced NIC**: The most important component, based on the 3Com 3CR990 family of NICs, which includes an on-board processor, memory, and a cryptographic engine.
- **Driver and Runtime Image**: The unmodified commercial driver ensures the integrity of the runtime image.
- **Helper Agent**: A small user-space agent that helps determine the IP address and sends regular heartbeats to the policy server.

### EFW Policy Server Components

The EFW policy server consists of three main components:
1. **Management Component**: Includes the graphical user interface (GUI), SNMP MIB, and controller frontend.
2. **Policy Component**: Manages the policy daemon and database, compiling policies into filter rules for each NIC.
3. **Audit Component**: Handles the audit daemon and database, storing and analyzing audit events.

### Managing EFW

EFW provides useful abstractions to help administrators define and manage policies, including:
- **Policy Domains**: Grouping protected hosts into domains, each managed by one or more policy servers.
- **Device Sets**: Grouping NICs by function to simplify policy assignment.
- **Policies and Rules**: Composed of policy attributes and rules, with support for audit and test modes to evaluate policy effects before enforcement.

These abstractions and components collectively ensure that EFW is both secure and manageable, meeting the needs of both the DoD and the commercial market.