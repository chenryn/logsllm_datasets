able Tor at selection level 0; this is due to Tunable Tor
disregarding router performance at that level in the aim of
maximizing the equality of router selection. However, at se-
lection level 5, Tunable Tor has a signiﬁcantly higher frac-
tion (69%) of trials below the one-minute mark than vanilla
Tor (62%). At the higher selection levels, Tunable Tor out-
performs vanilla Tor across the board; notably, at selection
level 15, 85% of trials fall below the one-minute mark.
To further examine the long-tail statistics of the data,
Figure 6 presents the 90th percentile of the transfer times
for both known routers (those for which we have bandwidth
data) and all routers (including those for which we lack
bandwidth data) by selection level as well as vanilla Tor.
Note that vanilla Tor’s lack of relative load information can
be seen here in its poor long-tail performance: in times of
high load, routers still advertising their full capacity (see
Figure 1(a)) become overloaded, resulting in poor perfor-
mance. Tunable Tor, by comparison, switches away from
those routers which tend to become overloaded, resulting in
much better performance at high selection levels.
gether with 95% conﬁdence intervals at various selection
levels; this corresponds to the user experience for down-
loading a single, relatively large ﬁle. Again, vanilla Tor is
included for comparison7. Again we see the deleterious ef-
fect of Tor’s long tail: even though, as Figure 5 shows, the
median time is only 35 seconds, the mean time is more than
twice that, at 84 seconds. For Tunable Tor, the mean time
decreases with increasing selection level, as expected.
4.2. Anonymity
As stated, the other goal of the proposed improvements
was resistance to subversion. One measure of this is how
many routers an intelligent attacker must subvert in order
to have a high probability of compromising a tunnel. Intu-
itively, it is clear that choosing routers uniformly makes this
number increase, while skewing the selection towards cer-
tain routers make it lower (because the attacker can choose
to compromise the more popular routers). To quantify this
intuitive notion, we choose the Gini coefﬁcient. The Gini
coefﬁcient is a measure of equality [12] (equality of selec-
tion probability, in this case), used frequently in economics.
A Gini coefﬁcient of 0 represents perfect selection equal-
ity (i.e all routers are chosen with equal frequency), while a
coefﬁcient of 1 represents perfect inequality (i.e. the same
router is always chosen). Figure 8 shows the observed Gini
coefﬁcient for various selection levels as well as the Gini
coefﬁcient of vanilla Tor over a similar sample size. There
are several points worth noting: ﬁrst, the equality is the
7Due to the larger data set, the conﬁdence interval is sufﬁciently small
Finally, Figure 7 examines the mean transfer time to-
(±2 seconds) as to be omitted.
 90
 80
 70
)
s
(
e
m
T
i
 60
 50
 40
 30
 20
Tunable Tor
Vanilla Tor
 0
High Anonymity
 2
 4
 6
Selcetion Level
 8
 10
 12
 14
High Performance
Figure 7. Mean transfer times with 95% con(cid:173)
ﬁdence intervals for known routers by selec(cid:173)
tion level; the mean time for vanilla Tor is in(cid:173)
cluded for comparison.
highest at selection level 0, and lowest at selection level 15,
as expected. The reason that selecting uniformly from all
routers present at any given time (as selection level 0 does)
still gives a coefﬁcient signiﬁcantly different from 0 is that
the router population over time is itself non-uniform; since
some routers are present more often than others, they are
proportionally more likely to be chosen. Second, using this
metric, the bias in Tor’s current router selection metric is
apparent: all the selection levels below 13 have a more bal-
anced selection than does vanilla Tor. Finally, it is informa-
tive to compare Figure 8 with Figure 7; the inherent tradeoff
between performance and anonymity becomes quite appar-
ent and the need to allow the user to chose the appropriate
point along this continuum for their needs is clear.
To further examine the effects of selection inequality, we
consider the success of an attacker who controls a certain
fraction of the top performing routers. This can be ac-
quired through either compromising the best routers, or by
inserting routers that have high bandwidth (or in the case
of vanilla Tor, pretend to). We plot the results in Figure 9.
At high selection levels, an attacker who controls a rela-
tively small fraction of the most highly ranked routers can
compromise a signiﬁcant fraction of tunnels8. However, at
low selection levels, an attacker must control a much higher
fraction of Tor routers to compromise even a small fraction
of tunnels. At level 0, even when an attacker controls the top
10% of routers, the chance of a compromised tunnel is only
4% (this is higher than (10%)2 because attackers, with their
fast and stable nodes, actually comprise 40% of all guard
8We consider a tunnel compromised here if the attacker controls both
endpoints.
 1
Tunable Tor
Vanilla Tor
 0.8
t
n
e
c
e
i
f
f
e
o
C
i
i
n
G
 0.6
 0.4
 0.2
 0
 0
High Anonymity
 2
 4
 6
Selection Level
 8
 10
 12
 14
High Performance
Figure 8. Gini coefﬁcient of router selection
equality by selection level. The Gini coef(cid:173)
ﬁcient for the router selection equality for
vanilla Tor is included for comparison.
Vanilla Tor
... with false advertising
Tunable Tor (0)
Tunable Tor (5)
Tunable Tor (10)
Tunable Tor (15)
 0.4
 0.35
 0.3
 0.25
 0.2
 0.15
i
d
e
s
m
o
r
p
m
o
c
s
e
n
n
u
t
f
o
n
o
l
i
t
c
a
r
F
 0.1
 0.05
 0
 0
 0.02
 0.04
 0.06
 0.08
 0.1
Top fraction of routers compromised
Figure 9. The fraction of tunnels compro(cid:173)
mised if an attacker compromises the top
given fraction of Tor routers, for vanilla Tor
and for various selection levels.
It is interesting to note that, even though vanilla
nodes).
Tor does relatively well for a low fraction of compromised
nodes, by the time 10% of routers are compromised, it per-
forms comparably to Tunable Tor at its least anonymous
setting. Note also that an attacker does not need to compro-
mise the existing best nodes for vanilla Tor, but can compro-
mise arbitrary nodes and have them falsely advertise high
bandwidth; this is reﬂected in the second curve for vanilla
Tor, labeled “false advertising,” which reﬂects an attacker
changing the advertised bandwidth for each compromised
router to the maximum believable bandwidth (1.5 MB/s,
by default9) after it is compromised. The analogous sit-
uation for Tunable Tor, where collaborating nodes report
each other as having high bandwidth, is much less effective,
since the likelihood that the majority of the reports (i.e. 3
of 5) are from compromised routers changes with the cube
of the fraction of compromised; this gives a probability of
0.1% for the highest fraction of compromised nodes shown
in Figure 9. Our ﬁndings are similar to those by Bauer et
al. [3].
5. Related Work
Our results regarding the variability of Tor performance
match a comparative study of Tor and AN.ON perfor-
mance [29], which also showed large standard deviations
for bandwidth values provided by Tor. Bauer et al. [3] con-
sider distributed probing, perhaps in the style of anonymous
auditing [25], as a means of defending from low-resource
attacks. They reject it due to the extra load imposed on the
system and the ability of malicious nodes to falsely respond
to probes.
In our case, the distributed measurements are
performed opportunistically and thus impose no extra load
on the network, and they correspond to real trafﬁc therefore
a node seeking to appear as high-bandwidth has to actually
provide good performance to real users.
Several projects aim at optimizing latency in anonymous
communications. Sherr et al. propose the use o. geo-
graphic coordinates to create paths that fall within selected
bounds [24]. Renner developed a controller for Tor to select
paths according to criteria such as avoiding ocean crossings
and otherwise minimizing latencies [21]. Extensions such
as the Tor button [26] and FoxTor [23] give users a cruder
way to trade off performance and anonymity by selectively
enabling or disabling Tor depending on the task. Other work
aims to improve Tor performance by speeding up crypto-
graphic operations [19, 15].
One approach to improve overall Tor performance is to
9As previously described, the Tor project recently increased the max-
imum believable bandwidth to 10 MB/s. While a cursory analysis of the
data gathered before and after this release showed no signiﬁcant differ-
ences, a set of experiments to determine the effect of this update are
planned.
use a peer-to-peer design where all users contribute for-
warding capacity [22, 10, 18]. Tor designers avoided peer-
to-peer approaches due to Sybil attacks [9]; unfortunately,
existing peer-to-peer anonymous designs are either inse-
cure [28, 4] or not scalable [10].
6. Conclusions and Future Directions
In this paper, we have proposed improvements to the ex-
isting Tor router bandwidth evaluation and router selection
algorithms. We examined these changes individually and
in combination, showing that they result in a Tor protocol
that is both more secure (since it does not use self-reported
bandwidth to choose routers for tunnel creation) and per-
forms better, both in terms of observed performance and
in terms of achievable anonymity. Additionally, by allow-
ing the user to select their preferred balance of performance
and anonymity, these improvements increase the usability,
and therefore the potential user base and security of the Tor
network.
Evaluations of these changes show that they can result in
increasing average throughput by a factor of almost three in
exchange for a modest decrease in anonymity, or they can
result in drastically improved anonymity while maintaining
similar average throughput. We also show that the improve-
ments we propose can reduce or even eliminate the long tail
of the transfer time distribution, greatly improving perfor-
mance as perceived by the users of the network.
We plan to expand on this work in the future in sev-
eral ways: ﬁrst, we plan to study the whole-network effects
of the changes we propose using a simulation of the Tor
network. We would also like to examine the other aspects
(such as latency) of the tradeoff between performance and
anonymity in anonymous networks of varying types. Ad-
ditionally, we observed a number of interesting characteris-
tics of the Tor network over the course of this study which
could provide insight into the observed behavior of the Tor
network, and which we would like to study further.
References
[1] A. Akella, S. Seshan, and A. Shaikh. An empirical evalua-
tion of wide-area internet bottlenecks. In Proceedings of the
3rd ACM SIGCOMM conference on Internet measurement
(IMC03), 2003.
[2] A. Back, I. Goldberg, and A. Shostack. Freedom systems 2.1
security issues and analysis. White paper, Zero Knowledge
Systems, Inc., May 2001.
[3] K. Bauer, D. McCoy, D. Grunwald, T. Kohno, and D. Sicker.
Low-resource routing attacks against anonymous systems.
In Proceedings of the 2007 Workshop on Privacy in the Elec-
tronic Society (WPES), 2007.
[4] N. Borisov, G. Danezis, P. Mittal, and P. Tabriz. Denial of
service or denial of security? How attacks on reliability can
Electronic Society (WPES 2002), Washington, DC, USA,
November 2002.
[23] S. Romanosky. FoxTor: Anonymous web browsing. http:
//cups.cs.cmu.edu/foxtor/, 2006.
[24] M. Sherr, B. T. Loo, and M. Blaze. Towards application-
In Workshop on Hot Topics in
aware anonymous routing.
Security, Aug. 2007.
[25] A. Singh, T.-W. Ngan, P. Druschel, and D. S. Wallach.
Eclipse attacks on overlay networks: Threats and defenses.
In IEEE INFOCOM, Apr. 2006.
[26] S. Squires and M. Perry. Torbutton — quickly toggle Fire-
fox’s use of the Tor network. https://torbutton.
torproject.org/, 2006.
[27] P. Syverson, G. Tsudik, M. Reed, and C. Landwehr. Towards
an analysis of onion routing security. In H. Federrath, editor,
Proceedings of Designing Privacy Enhancing Technologies:
Workshop on Design Issues in Anonymity and Unobservabil-
ity, pages 96–114. Springer-Verlag, LNCS 2009, July 2000.
[28] P. Tabriz and N. Borisov. Breaking the collusion detection
mechanism of MorphMix. In Privacy Enhancing Technolo-
gies Workshop, June 2006.
[29] R. Wendolsky, D. Herrmann, and H. Federrath. Performance
comparison of low-latency anonymisation services from a
user perspective. In Borisov and Golle [5].
[30] M. Wright, M. Adler, B. N. Levine, and C. Shields. An anal-
ysis of the degradation of anonymous protocols. In Proceed-
ings of the Network and Distributed Security Symposium.
IEEE, February 2002.
[31] M. Wright, M. Adler, B. N. Levine, and C. Shields. De-
fending anonymous communication against passive logging
attacks.
In Proceedings of the 2003 IEEE Symposium on
Security and Privacy, May 2003.
compromise anonymity. In ACM Conference on Computer
and Communications Security, Oct. 2007.
[5] N. Borisov and P. Golle, editors. Privacy Enhancing Tech-
nologies Symposium, volume 4776 of Lecture Notes in Com-
puter Science, Ottawa, Canada, June 2007. Springer.
[6] R. Dingledine.
Exit balancing patch.
http:
//archives.seul.org/or/dev/Jul-2007/
msg00022.html, 2007. Mailing list post to or-dev.
[7] R. Dingledine and N. Mathewson. Anonymity loves com-
pany: Usability and the network effect. In Designing Secu-
rity Systems That People Can Use. O’Reilly Media, 2005.
[9] J. Douceur. The Sybil Attack.
[8] R. Dingledine, N. Mathewson, and P. Syverson. Tor: The
second-generation onion router. In Proceedings of the 13th
USENIX Security Symposium (USENIX Security ’04), 2004.
In Proceedings of the 1st
International Peer-To-Peer Systems Workshop, March 2002.
[10] M. J. Freedman and R. Morris. Tarzan: A peer-to-peer
anonymizing network layer.
In 9th ACM Conference on
Computer and Communications Security, Washington, DC,
November 2002.
[11] R. Gao, C. Dovrolis, , and E. W. Zegura. Avoiding oscilla-
tions due to intelligent route control systems. In Proceed-
ings of the 25th IEEE International Conference on Com-
puter Communications. (INFOCOM 2006), 2006.
[12] C. Gini. Measurement of inequality of incomes. The Eco-
nomic Journal, 31(121), 1921.
[13] G. Goodell, S. Bradner, and M. Roussopoulos. Building
a coreless Internet without ripping out the core. In Fourth
Workshop on Hot Topics in Networks, College Park, MD,
Nov. 2005.
[14] D. Goodin. Tor at heart of embassy passwords leak. The
Register, Sept. 10, 2007.
[15] A. Kate, G. Zaverucha, and I. Goldberg. Pairing-based onion
routing. In Borisov and Golle [5].
[16] K. Lakshminarayanan and V. N. Padmanabhan. Some ﬁnd-
ings on the network performance of broadband hosts.
In
Proceedings of the 3rd ACM SIGCOMM conference on In-
ternet measurement (IMC03), 2003.
[17] D. McCoy, K. Bauer, D. Grunwald, P. Tabriz, and D. Sicker.
Shining light in dark places: A study of anonymous net-
work usage. Technical Report CU-CS-1032-07, University
of Colorado at Boulder, 2007.
[18] A. Nambiar and M. Wright. Salsa: a structured approach
to large-scale anonymity. In ACM Conference on Computer
and Communications Security, pages 17–26, New York, NY,
USA, 2006. ACM Press.
[19] L. Øverlier and P. Syverson. Improving efﬁciency and sim-
plicity of Tor circuit establishment and hidden services. In
Borisov and Golle [5].
[20] P. Palfrader. Number of running Tor routers. http://
www.noreply.org/tor-running-routers/.
[21] J. Renner.
Implementation and evaluation of path se-
lection algorithms for performance-improved onion rout-
ing. http://code.google.com/soc/2007/eff/
appinfo.html?csaid=6AFA998995C47478, 2007.
Google Summer of Code Project.
[22] M. Rennhard and B. Plattner. Introducing MorphMix: Peer-
to-Peer based Anonymous Internet Usage with Collusion
Detection. In Proceedings of the Workshop on Privacy in the