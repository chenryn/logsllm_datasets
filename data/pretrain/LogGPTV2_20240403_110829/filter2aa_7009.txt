## React获取DOM节点
### 原生方法
利用原生方法中抓取DOM节点的方法，例如`getElementById`，`querySelector`等
```
import React from 'react'
class RefDemo extends React.Component{
  handleClick(){
    document.getElementsByTagName('p')[0].style.color = 'red'
  }
  render(){
    return(
        哈哈哈
    )
  }
}
export default RefDemo
```
### Jquery方法
安装`jquery`包，使用jq选择器抓取DOM节点，可以用jq方法进行操作
```
import React from 'react'
import $ from 'jquery'
class RefDemo extends React.Component{
  handleClick(){
    $('p').toggle('slow')
    //有就隐藏，没有就显示
    }
  render(){
    return(
        哈哈哈
    )
  }
}
export default RefDemo
```
### 通过React的`ref`来获取DOM节点
`ref`是`Reference`的缩写,拿到一个真实的DOM节点,使参数按引用传递,使用`ref`参数，则方法定义和调用方法都必须显式使用`ref`关键字。
**Key**：唯一一个不重复的值
```
import React from 'react'
class Ref extends React.Component{
  constructor(){
    super()
    this.state = {
      title:''
    }
  }
  handleClick(){
    this.setState({
      title:this.value.value
    })
  }
  render(){
    return(
        123{this.state.title}
         this.value = value } onChange={this.handleClick.bind(this)} />
      )
  }
}
export default Ref
```
不仅可以获取DOM节点，还可以获取子组件的节点
```
import React from 'react'
class Test extends React.Component{
  constructor(){
    super()
    this.state = {
      show:true
    }
  }
  handleShow(){
    this.setState({
      show:!this.state.show
    })
  }
  render(){
    return(
        杀人诛心
    )
  }
}
class Ref extends React.Component{
  handleClick(){
    this.test.handleShow()
  }
  render(){
    return(
         this.test = test} onClick={this.handleClick.bind(this)}/>
    )
  }
}
export default Ref
```