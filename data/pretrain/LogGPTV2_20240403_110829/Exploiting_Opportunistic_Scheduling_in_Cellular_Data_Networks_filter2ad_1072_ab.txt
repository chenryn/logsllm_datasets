tive time slots that the attacker can obtain is the maxi-
mum integer t0 that satisﬁes
C
CQImax ≥
(1 − α)t0−1 Ra(0) · Π
(5)
where Π is
Π =
(cid:18)
t0−1Y
k=1
(cid:19)
(1 − α)k−1 + (1 − α)
αC
Equation (5) shows that the maximum number of
consecutive slots an attacker can obtain (t0) depends
on the attacker’s beginning average throughput (Ri(0)),
maximum CQI (CQImax), and α. Maximum CQI de-
pends on network hardware and α is used to balance
the trade off between long-term and short-term perfor-
mance. Since the CQImax and α are set by the sys-
tem, they are out of the attacker’s control. The attacker
does have control over Ri(0), its average throughput at
the beginning of the attack. Equation (5) shows that the
smaller the value Ra(0), the larger the value t0. There-
fore, after each attack session, the attacker needs to reset
its Ra(0) by reporting lower CQI values for a sufﬁcient
period (typically a few seconds6). Finally, this model
is simpliﬁed, assuming all victim users have the same,
consistent CQI. When users have time-varying channel
conditions, Equation 5 provides an upper bound for es-
timating t0.
2.2.2 Greedy handoffs
Opportunistic schedulers are oblivious to handoffs
that mobile devices experience. For example, when a
mobile device performs a handoff to another base sta-
tion, the new base station does not retrieve the device’s
average data rate from its previous base station, but
rather assigns an often small or average value as the de-
vice’s initial average rate [10, 46]. By reporting fab-
ricated CQIs, as in the na¨ıve attack illustrated in the
section above, a malicious mobile device has to report
monotonically increasing CQIs to sustain the attack be-
cause its average data rate keeps increasing. Eventually,
the attack stops when its reported CQI exceeds the max-
imum allowable CQI. However, if the malicious device
sits in the coverage area of multiple base stations, it may
hand off to another cell to acquire a fresh, lower aver-
age data rate to continue the attack. Moreover, multiple
malicious devices may cooperate to attack multiple cells
simultaneously (Section 3.3). Note that by manipulating
its CQI reports, a malicious mobile device can cause its
base station to initiate a handoff.
3 Attack analysis
3.1 Threat model
Our threat model assumes the following:
6This limitation is in relation to our na¨ıve attack scenario. Section
3 discusses heuristics for avoiding this limitation.
1. Attackers control one or a few mobile devices that
a cellular network has admitted and authenticated.
2. Attackers have modiﬁed their 3G mobile devices or
PC cards such that they may report any CQI value
to the base station and to trigger a handoff at any
time.
3. Attackers can be physically located in the overlap-
ping areas of cells.
We believe this threat model is realistic. Attackers can
buy network-approved mobile devices (or PC cards with
accompanying SDKs) and prepaid data plans directly
from providers, or can spread worms to take over ex-
isting mobile devices. Prepaid data plans, in particular,
minimze the risk of discovery and punishment7. Pre-
vious research has demonstrated ways to modify mobile
devices to perform different actions than intended by the
providers, even when providers attempted tamper-proof
techniques [19, 32, 39]. Note, however, that our threat
model does not assume hacking into the network. In-
stead, our attack exploits vulnerabilities in the network’s
scheduler by manipulating the information that mali-
cious mobile devices report to the network.
In the following sections, we start by considering
intra-cell attacks with multiple attackers. Then, we de-
scribe an inter-cell attack, which is considerably more
effective. Finally, we present a more realistic attack
where attackers are unaware of other users’s channel
conditions in the cell.
3.2
Intra-cell attack
Consider a scenario where all the attackers stay in the
same cell. We assume that no user leaves or joins the cell
during the attack. Although this assumption is not cru-
cial to our attack, it simpliﬁes our analysis. Addition-
ally, for simplicity we assume that the attackers know
the channel conditions of all the users in the cell. Sec-
tion 3.4 will describe an attack strategy which eliminates
this assumption.
As we have stated in the previous section, a single
attacker can obtain consecutive time slots until his re-
ported CQI exceeds the maximum CQI value. Naturally,
attackers can increase the number of consecutive time
slots obtained by using multiple colluding attackers. We
discuss three possible ways for the attackers to coordi-
nate.
Sequential attack The simplest scheme is to attack
sequentially. The attacker with the smallest average
7While gaining momentum in North America, prepaid data plans
are very popular and omnipresent in many parts of the world where
one can buy prepaid SIM cards anonymously.
throughput Ri(t) starts the attack and obtains as many
consecutive time slots as possible, while the other at-
tackers lurk (by reporting arbitrarily small CQIs to
avoid being scheduled). When the active attacker’s re-
ported CQI exceeds the maximum value of CQI, it stops
the attack while the attacker with the smallest average
throughput takes over the attack.
Minimum CQI attack Since the attack will stop
when all attackers’ reported CQIs exceed the maximum
value, this scheme tries to slow the increment of the re-
ported CQIs. At each time slot, each attacker, given
its current average data rate, computes the CQI that it
needs to obtain the next time slot. The attacker with the
smallest computed CQI reports its CQI to the base sta-
tion while other attackers report arbitrarily low CQIs to
continue lurking.
Delta CQI attack This algorithm tries to slow the in-
crement of calculated CQI values for upcoming slots.
At each time slot t, each attacker i computes the incre-
ment δi(t) needed to its previous CQI. In other words,
δi(t) = CQIi(t) − CQIi(t − 1). The attacker with
the smallest δi(t) then reports its CQI to the base station
while the other attackers report arbitrarily low CQIs to
continue lurking.
3.2.1 Attack results
To verify the effectiveness of this and other attacks
described below, we ran simulations for 18072 time
slots, or 30 seconds. Through trial-and-error we deter-
mined that 30 seconds is more than enough time to de-
termine an attack’s effectiveness as all attacks stabilized
well before that time. In simulating single cell attacks,
we chose parameters that are recommended by the 3G
and HSDPA speciﬁcation or that are commonly used by
cellular networks. The PF scheduler has an α = .001.
We assume 50 users in a cell. Each user quantized his
channel condition into CQI, an integer between 0 and
30, and reported the CQI to the base station. Each user’s
channel condition was a random variable following a
Rayleigh distribution [37] with σ = 3 and an initial av-
erage rate of 0.5. In communications theory, Rayleigh
distribution is widely used to model scattered signals
that reach a receiver by multiple paths, e.g., in an urban
environment [37]. A simulation with only one attacker
present showed that the attacker gained an average of 19
time slots, with a standard deviation of 2.77.
Next, we simulated multiple attackers in the same
cell. Again, each user’s channel condition was a ran-
dom variable following a Rayleigh distribution. We var-
ied the number of attackers from one to ﬁve and sim-
ulated each of the attack schemes in Section 3.2. Fig-
ure 1 shows that the number of collective consecutive
time slots obtained by the attackers increases almost lin-
early with the number of attackers. Among the three at-
tack schemes, the Delta CQI scheme performed the best,
where ﬁve attackers obtained 99 consecutive time slots.
Figure 1. Consecutive time slots obtained
by attackers using different collaborating
schemes in a naive single cell attack. No-
tice that after the attack’s initial burst, the
attackers must relinquish a large number
of timeslots before attacking again
Although 99 consecutive time slots (or 165ms) occu-
pied by the attackers will cause a delay to victim users,
this delay is tolerable by many applications and proto-
cols. Moreover, after the attack, the attackers must re-
linquish a large number (at least 2000) of time slots to
reset their average throughput low enough before they
can attack again. Therefore, this attack is not sustain-
able. This conﬁrmed our intuition that single cell at-
tacks were relatively ineffective. Fortunately (or unfor-
tunately, depending on your position), we were able to
exploit another vulnerability to make our attack much
more effective and sustainable.
3.3
Inter-cell attack
PF scheduler ensures long-term fairness within a
cell’s boundary. By transgressing those boundaries, at-
tackers can gain unfair share of network bandwidth. For
example, when attackers sit in the overlapping area of
two cells, they can exploit the handoff procedure to
make their attack much more effective and sustainable.
Our single cell simulations show that an attacker’s re-
ported CQI and average throughput increase very fast
during an attack. When a large average throughput
forces the attacker to report a CQI larger than the max-
imum value, the attack stops. However, since users can
012345020406080100Number of AttackersTimeslot Occupied  DeltaMinimumSequentialtrigger handoffs and the network does not carry users’
average throughput across cells, the attacker can handoff
to another other cell, get a small initial average through-
put, and immediately start the attack in its new cell.
3.3.1 Initial average throughput
Since the network does not track users’ average
throughput across cells [10], when a new user joins a
cell, the scheduler must ﬁrst assign the user an initial
value for its average throughput. Since the choice of this
initial value is unspeciﬁed, we explore three reasonable
schemes. Although these schemes are not all-inclusive,
they represent good schemes that lead to predictable be-
havior of the PF scheduler.
Based on the average of average throughput of all
users A simple scheme is to choose the average of av-
erage throughput of all existing users in this cell as the
initial average throughput of the new user, since the new
user’s channel condition is close to the average channel
condition of all existing users.
Based on the minimum of average throughput of all
users Since new users often join a cell from the edge
of the cell, they are expected to have the poorest channel
condition. Therefore, this scheme chooses the minimum
of the average throughput of all existing users as the ini-
tial average throughput of the new user.
Determined by the user Finally, since users are
trusted with tasks such as channel quality and pilot mea-
surements for multiple cells, an intuitive scheme is to
let users report their initial average throughput. A major
problem with this scheme is that an attacker can report a
bogus low average throughput to gain unfair advantage
in scheduling.
3.3.2 Attack Results
Figure 2 shows the fraction of time slots that the at-
tackers procured where there was one attacker per cell
and the attackers determined their initial throughput. It
shows that after about 2000 time slots, the attackers con-
sistently obtained about 78% of all the slots, a condition
that we call the stabilization of the attack. We simu-
lated different number of attackers per cell and differ-
ent schemes for assigning the initial average throughput,
and in all the simulations the attack stabilized well be-
fore 30 seconds.
Figure 3 shows the total number of time slots that the
attackers obtained in 30 seconds. Unsurprisingly, the
more attackers per cell, the more time slots they can ob-
tained. However, even with just one attacker per cell, the
Figure 2. Fraction of time slots obtained by
two attackers, one per cell of 50 users
Figure 3. Time slots occupied by the attack
in 30 seconds (18072 time slots). The three
lines represent different schemes for assign-
ing the initial average throughput by the base
station
attackers obtained from 13459 (74%) to 16241 (90%)
time slots, depending on the scheme by which the sched-
uler assigns the initial average throughput. Among the
three schemes, the scheme that let the user provide this
initial value is the most vulnerable, where one attacker
obtained 16241 (90%) time slots while ﬁve attackers ob-
tained 17317 (96%) time slots.
3.4 Realistic inter-cell attack
In the above simulations, the attack required attack-
ers to know all users’ channel conditions and average
throughput at each time slot. In practice, however, at-
tackers may not have such information.
In this case,
during the attack, the attacker must constantly adjust
0500010000150000.50.60.70.80.91Time (timeslot)Fraction of timeslots obtained012345020004000600080001000012000140001600018000Attackers per CellTimeslots Occupied   User ProvidedMin. user avg.Mean user avg.the estimated maximum CQI-to-throughput ratio of all
the victim users. This is because each user’s average
throughput, in every time slot, will increase by α∗ CQI
if he is scheduled, and decrease by a factor of (1 − α)
otherwise. We propose the following scheme for adjust-
ing the maximum ratio estimation.
Let c(t) be the estimated maximum CQI-to-
throughput ratio at time t and Ri(t) be the average
throughput of user i at time t. If the attacker is sched-
uled at time t, the average throughput of all the other
users will decrease, Ri(t) = (1 − α) ∗ Ri(t − 1). Since
c(t) estimates the largest Ri(t) of all the victim users,
it increases at the same rate, c(t + 1) = c(t)/(1 − α).
When the attacker is not scheduled, on the other hand,
only the average rate of the victim user who is scheduled
will increase. Therefore,
≈ max
i
c(t + 1) = max
i
CQIi(t + 1)
Ri(t)
N · CQIi(t)
CQIi(t + 1)
Ri(t − 1)(1 − α) + α
CQIi(t+1)
Ri(t−1)
N · CQIi(t+1)
Ri(t−1)
N · c(t)
c(t)
(1 − α) + α
(1 − α) + α
= max
i
≈
≈
=
≈
(6)
Some approximations are involved in the above esti-
mation. First, on average, a victim user gets scheduled
once every N times when the attacker is not scheduled.
Therefore, the average rate of a victim user will increase
by α/N ∗ CQIi(t) approximately when the attacker is