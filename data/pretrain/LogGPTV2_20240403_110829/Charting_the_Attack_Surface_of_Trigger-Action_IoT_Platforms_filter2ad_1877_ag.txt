以下是优化后的文本，使其更加清晰、连贯和专业：

---

### 引用文献

1. **访问控制模型和技术 (SACMAT '17 摘要)**。ACM, 纽约, NY, USA, 页码 43-54。

2. **Chieh-Jan Mike Liang, Lei Bu, Zhao Li, Junbei Zhang, Shi Han, Börje F. Karlsson, Dongmei Zhang, 和 Feng Zhao**。2016 年。系统性调试物联网控制系统在建筑自动化中的正确性。*第三届 ACM 国际能源高效建筑环境系统会议 (BuildSys '16)*。ACM, 纽约, NY, USA。

3. **Chieh-Jan Mike Liang, Börje F Karlsson, Nicholas D Lane, Feng Zhao, Junbei Zhang, Zheyi Pan, Zhao Li, 和 Yong Yu**。2015 年。SIFT: 构建安全的物联网。*第十四届国际传感器网络信息处理会议*。ACM, 页码 298-309。

4. **Chang Liu, Xinyun Chen, Eui Chul Shin, Mingcheng Chen, 和 Dawn Song**。2016 年。用于 if-then 程序合成的隐式注意力机制。*神经信息处理系统进展*。页码 4574-4582。

5. **Si Liu, Peter Csaba Ölveczky, Keshav Santhanam, Qi Wang, Indranil Gupta, 和 José Meseguer**。2018 年。ROLA: 一种新的分布式事务协议及其形式化分析。*FASE*。页码 77-93。

6. **Si Liu, Peter C Ölveczky, Qi Wang, Indranil Gupta, 和 José Meseguer**。2018 年。带有防止丢失更新的读原子事务：ROLA 及其形式化分析。技术报告。

7. **Si Liu, Peter Csaba Ölveczky, Qi Wang, 和 José Meseguer**。2018 年。Walter 事务数据存储的形式化建模与分析。*重写逻辑及其应用国际研讨会*。Springer, 页码 136-152。

8. **Si Liu, Peter Csaba Ölveczky, Min Zhang, Qi Wang, 和 José Meseguer**。2019 年。使用 Maude 自动分析分布式事务系统的一致性属性。*工具和算法构造及分析系统国际会议*。Springer, 页码 40-57。

9. **Tom Lodge, Andy Crabtree, 和 Anthony Brown**。2018 年。物联网应用程序开发：支持默认的数据保护设计。*2018 ACM 国际联合会议暨 2018 国际普适计算与可穿戴计算机研讨会 (UbiComp '18)*。ACM, 纽约, NY, USA, 页码 901-910。

10. **Hong Luo, Ruosi Wang, 和 Xinming Li**。2013 年。智能建筑系统中的规则验证和解析框架。*2013 年国际并行和分布式系统会议 (ICPADS)*。IEEE, 页码 438-439。

11. **Meiyi Ma, S Masud Preum, W Tarneberg, Moshin Ahmed, Matthew Ruiters, 和 John Stankovic**。2016 年。智慧城市中服务运行时冲突的检测。*2016 IEEE 智能计算国际会议*。IEEE, 页码 1-10。

12. **Xianghang Mi, Feng Qian, Ying Zhang, 和 XiaoFeng Wang**。2017 年。IFTTT 的实证特征：生态系统、使用情况和性能。*2017 互联网测量会议 (IMC '17)*。ACM, 纽约, NY, USA, 页码 398-404。

13. **Tomas Mikolov, Ilya Sutskever, Kai Chen, Greg S Corrado, 和 Jef Dean**。2013 年。词和短语的分布式表示及其组合性。*神经信息处理系统进展 26*。

14. **Sirajum Munir 和 John A Stankovic**。2014 年。DepSys: 面向智能家居的依赖感知集成。*2014 ACM/IEEE 国际信息物理系统会议 (ICCPS)*。IEEE, 页码 127-138。

15. **Alessandro A Nacci, Bharathan Balaji, Paola Spoletini, Rajesh Gupta, Donatella Sciuto, 和 Yuvraj Agarwal**。2015 年。BuildingRules: 基于触发-动作的复杂商业建筑管理系统。*2015 ACM 国际联合普适计算与可穿戴计算机会议附属论文集*。ACM, 页码 381-384。

16. **Yuhong Nan, Zhemin Yang, Xiaofeng Wang, Yuan Zhang, Donglai Zhu, 和 Min Yang**。2018 年。寻找你的秘密线索：基于语义驱动的学习型移动应用隐私发现。*2018 年第 25 届网络与分布式系统安全研讨会 (NDSS 2018)*, 圣地亚哥, 加利福尼亚州, 美国, 2018 年 2 月 18-21 日。

17. **Chandrakana Nandi 和 Michael D Ernst**。2016 年。基于规则的智能家居自动触发生成。*PLAS*。页码 97-102。

18. **Roberto Navigli 和 Simone Paolo Ponzetto**。2012 年。BabelNet: 多语言语义网络的自动构建、评估和应用。*人工智能* 193 (2012), 页码 217-250。

19. **Dang Tu Nguyen, Chengyu Song, Zhiyun Qian, Srikanth V. Krishnamurthy, Edward J. M. Colbert, 和 Patrick McDaniel**。2018 年。IoTSan: 加强物联网系统的安全性。*第 14 届新兴网络实验和技术国际会议 (CoNEXT '18)*。ACM, 纽约, NY, USA, 页码 191-203。

20. **Xiang Pan, Yinzhi Cao, Xuechao Du, Boyuan He, Gan Fang, Rui Shao, 和 Yan Chen**。2018 年。FlowCog: Android 应用程序中信息流泄漏的上下文感知语义提取与分析。*2018 年第 27 届 USENIX 安全研讨会 (USENIX Security 18)*。USENIX 协会, 巴尔的摩, MD, 页码 1669-1685。

21. **Rahul Pandita, Xusheng Xiao, Wei Yang, William Enck, 和 Tao Xie**。2013 年。WHYPER: 向移动应用程序的风险评估自动化迈进。*2013 年第 22 届 USENIX 安全研讨会 (USENIX Security 13)*。USENIX, 华盛顿特区, 页码 527-542。

22. **Chris Quirk, Raymond J Mooney, 和 Michel Galley**。2015 年。从语言到代码：学习 If-This-Then-That 配方的语义解析器。*ACL (1)*。页码 878-888。

23. **A. Rahmati, E. Fernandes, K. Eykholt, 和 A. Prakash**。2018 年。Tyche: 智能家居的风险基础权限模型。*2018 IEEE 网络安全开发 (SecDev)*, 第 00 卷。页码 29-36。

24. **Camilo Rocha, José Meseguer, 和 César Muñoz**。2017 年。重写模 SMT 及开放系统分析。*逻辑与代数方法编程杂志* 86, 1 (2017), 页码 269-297。

25. **Eyal Ronen 和 Adi Shamir**。2016 年。针对物联网设备的功能扩展攻击：以智能灯为例。*EuroS&P*。页码 3-12。

26. **Roei Schuster, Vitaly Shmatikov, 和 Eran Tromer**。2018 年。物联网中的情境访问控制。*2018 ACM SIGSAC 计算机与通信安全会议 (CCS '18)*。ACM, 纽约, NY, USA, 页码 1056-1073。

27. **Vijay Sivaraman, Dominic Chan, Dylan Earl, 和 Roksana Boreli**。2016 年。智能手机攻击智能家居。*WiSec*。页码 195-200。

28. **Vijay Sivaraman, Hassan Habibi Gharakheili, Arun Vishwanath, Roksana Boreli, 和 Olivier Mehani**。2015 年。智能家居 IoT 设备的网络级安全与隐私控制。*WiMob*。页码 163-167。

29. **Yan Sun, Xukai Wang, Hong Luo, 和 Xiangyang Li**。2015 年。基于形式化规则模型的智能建筑系统冲突检测方案。*IEEE 人机系统汇刊* 45, 2 (2015), 页码 215-227。

30. **Milijana Surbatovich, Jassim Aljuraidan, Lujo Bauer, Anupam Das, 和 Limin Jia**。2017 年。有些配方比破坏你的食欲更糟糕：分析 IFTTT 配方的安全性和隐私风险。*第 26 届万维网国际会议*。页码 1501-1510。

31. **Moin Syed 和 Sarah C. Nelson**。2015 年。编码叙述数据时建立可靠性的指南。*成年初期* 3, 6 (2015), 页码 375-387。

32. **Kazuki Tada, Shin Takahashi, 和 Buntarou Shizuki**。2016 年。智能家居卡片：使用纸质卡片进行有形编程。*2016 ACM 国际联合普适计算与可穿戴计算机会议附属论文集*。ACM, 页码 381-384。

33. **Yuan Tian, Nan Zhang, Yueh-Hsun Lin, Xiaofeng Wang, Blase Ur, Xianzheng Guo, 和 Patrick Tague**。2017 年。SmartAuth: 物联网的用户中心授权。2017 年。

34. **Blase Ur, Elyse McManus, Melwyn Pak Yong Ho, 和 Michael L. Littman**。2014 年。智能家居中的实用触发-动作编程。*CHI*。

35. **José Meseguer**。1992 年。条件重写逻辑作为并发的统一模型。*理论计算机科学* 96, 1 (1992), 页码 73-155。

36. **José Meseguer**。2000 年。重写逻辑与 Maude: 概念与应用。*国际重写技术与应用会议*。Springer, 页码 1-26。

37. **Blase Ur, Melwyn Pak Yong Ho, Stephen Brawner, Jiyun Lee, Sarah Mennicken, Noah Picard, Diane Schulze, 和 Michael L Littman**。2016 年。野外的触发-动作编程：对 200,000 个 IFTTT 配方的分析。*2016 CHI 人类因素计算系统会议*。ACM, 页码 3227-3231。

38. **Qi Wang, Wajih Ul Hassan, Adam Bates, 和 Carl Gunter**。2018 年。物联网中的恐惧与日志记录。*网络与分布式系统研讨会*。

39. **Jong-bum Woo 和 Youn-kyung Lim**。2015 年。DIY 风格智能家居中的用户体验。*2015 ACM 国际联合普适计算与可穿戴计算机会议*。ACM, 页码 779-790。

40. **Tianlong Yu, Vyas Sekar, Srinivasan Seshan, Yuvraj Agarwal, 和 Chenren Xu**。2015 年。处理万亿条（可用）法规在十亿设备上：重新思考物联网网络安全。*HotNets*。

41. **Lefan Zhang, Weijia He, Jesse Martinez, Noah Brackenbury, Shan Lu, 和 Blase Ur**。2019 年。AutoTap: 使用 LTL 属性合成和修复触发-动作程序。*第 41 届软件工程国际会议*。IEEE 出版社, 页码 281-291。

### A. IFTTT APPLET

#### A.1 过滤代码
在清单 2 中，我们展示了一个过滤代码片段的示例。该代码片段根据一天中的时间有条件地执行操作。

**清单 2: IFTTT applet 过滤代码示例**

```javascript
var timeOfDay = Meta.currentUserTime.hour();
if (timeOfDay >= 22 || timeOfDay < 8) {
    // 跳过发送推送通知
    IfNotifications.sendNotification.skip("太晚了");
} else {
    // 跳过将文章保存到 Feedly
    Feedly.createNewEntryFeedly.skip("我已经知道了");
}
```

### B. 规则间漏洞

在表 6 中，我们展示了现有工作考虑的规则间漏洞类型。

**表 6: 现有工作考虑的规则间漏洞类型**

| 工具/系统 | 漏洞类型 |
| --- | --- |
| iRuler | 冲突、循环、回滚、重复、组重复 |
| Soteria [30] | 条件绕过、动作阻塞、规则不足 |
| IoTSan [70] | 冲突、重复、不一致事件 |
| SIFT [52] | 冲突、重复 |
| HomeGuard [32] | 冲突、重复 |
| IoTGuard [31] | 冲突、重复、循环、条件禁用、条件启用 |

### C. 物联网系统建模

#### C.1 设备/服务元数据

在清单 3 中，我们展示了一个简单的加热器的设备元数据，它具有一个开关属性和两个命令 turn_on 和 turn_off。

**清单 3: 简单加热器的设备元数据示例**

```json
{
    "ModelType": "SimpleHeater",
    "Attributes": [
        {
            "Name": "switch",
            "Type": "bool",
            "Default": "false"
        }
    ],
    "Commands": [
        {
            "Name": "turn_on",
            "Arguments": [],
            "Transition": {
                "assignments": {
                    "switch": "true"
                }
            },
            "Effects": [
                {
                    "EnvironmentalVariable": "Temperature",
                    "Effect": "Increase",
                    "Rate": 1
                }
            ]
        },
        {
            "Name": "turn_off",
            "Arguments": [],
            "Transition": {
                "assignments": {
                    "switch": "false"
                }
            }
        }
    ]
}
```

在清单 4 中，我们展示了通过我们的 NLP 辅助信息流分析工具生成的 Lockitron 服务的元数据。Lockitron 服务有两个触发器“Lockitron 锁定”和“Lockitron 解锁”，以及两个动作“锁定 Lockitron”和“解锁 Lockitron”。

**清单 4: 通过我们的 NLP 工具生成的 Lockitron 服务元数据**

```json
{
    "ServiceType": "Lockitron",
    "Attributes": [],
    "Commands": [
        {
            "Name": "Lock_Lockitron",
            "Arguments": [
                {
                    "Name": "lock_id",
                    "Type": "string"
                }
            ],
            "Transition": {
                "Events": [
                    {
                        "Name": "Lockitron_Locked"
                    }
                ]
            }
        },
        {
            "Name": "Unlock_Lockitron",
            "Arguments": [],
            "Transition": {
                "Events": [
                    {
                        "Name": "Lockitron_Unlocked"
                    }
                ]
            }
        }
    ]
}
```

---

希望这些改进能够使文本更加清晰、连贯和专业。如果有任何进一步的需求或修改，请随时告知。