http://www.infobytesec.com
Francisco Amato / Federico Kirschbaum 
evilgrade, "You STILL have pending 
upgrades!“
Defcon 18 2010
http://www.infobytesec.com
Introduction                                                 
Topics
- Client side explotation
- Update process
- Poor implementation of update processes
- Attack vectors
- evilgrade framework presentation
http://www.infobytesec.com
Introduction                                                
Client side explotation
Searching the Weakest Link
Bypassing the fortress walls
This technique allows for example transform a user 
terminal in a “proxy” to access the internal network 
of a company
http://www.infobytesec.com
General application’s update process
How does it works?
• Update process are either manual or automatic.
• The process requests a special file in the master   
server for example update.application.com/info.xml
• The file has the internal information of the 
available updates.
•It’s installed automatic or ask if you like to install 
the new update.
http://www.infobytesec.com
What’s the problem?
http://www.infobytesec.com
Is there any problem?
Trust
• A lot of application don’t verify the updates 
contents.
• They blindly trust without verification of the 
master update server.
http://www.infobytesec.com
evilgrade                                                 
Tool Information
evilgrade is modular framework that allow us to 
take advantage of poor update implementations by 
 injecting fake updates.
• It’s a opensource project
• It’s developed in Perl
http://www.infobytesec.com
evilgrade                                                
How does it work?
It  works with modules, each module implements 
the structure needed to emulate a false update of 
specific application.
evilgrade needs the manipulation of the victims’s 
dns traffic 
http://www.infobytesec.com
evilgrade                                                
Normal update process
1.
App1 start the update process
2.  Consult to the dns server host 
update.app1.com
3. DNS server replies 200.1.1.1
4. App gets the file lastupdate.xml from 
update.app1.com
5. App analyzes the update file and detect a new 
update
6. App1 downloads and execute the update  http://
update.app1.com/update.exe
http://www.infobytesec.com
evilgrade                                                
Attack example
1. App1 starts the update process
2. Consult to the dns server host update.app1.com
3. The attacker modifies the DNS traffic and 
returns other ip address, controlled by the 
attacker.
4. App1 get the file controlled by the attacker http://
update.app1.com/lastupdate.xml
5. App1 processes the file and detect a new 
update
6. App1 downloads and execute the backdoor 
http://update.app1.com/backdoor.exe
http://www.infobytesec.com
Attack vectors?                                  
Possibilities:
Internal scenery:
- Internal DNS access. 
- ARP spoofing.
-DNS Cache Poisoning.
-DHCP spoofing
External scenery:
- Internal DNS access. 
-DNS Cache Poisoning.
-Fake AP wireless 
http://www.infobytesec.com
evilgrade
No, it’s not. 
The idea of the framework is the centralization 
and  explotation of different update 
implementations all together in one tool. 
Is this new?
http://www.infobytesec.com
evilgrade
What are the supported OS?
The framework is multiplatform, it only depends of 
having the rigth payload for the platform to exploit.
http://www.infobytesec.com
evilgrade                                                
What can I do with it?
This attack vector allows the injection of fake 
updates to remotely access a target system.
http://www.infobytesec.com
evilgrade                                                
Console:
It works similar to a IOS console:
-show : Used to show different 
information.
-conf : Enter to the configure mode.
-set  “value”: Configures different 
options.
-start: Services starts.
-stop: Services stops.
-status: Services status.
http://www.infobytesec.com
evilgrade                                                
Modules:
.
http://www.infobytesec.com
evilgrade                                                
Request:
Each object has:
 - requeried URL (regex friendly).
 : [ file | string | agent | install ]
 :  [GET|POST|TEST|””]
 : [1|””] If is it a binary file.
 : String request’s response 
 : [1|””] If this file or string need be parsed
 : The path of the request’s response
http://www.infobytesec.com
evilgrade                                                
Implemented modules:
- Java plugin
- Winzip
- Winamp
- OpenOffices
- iTunes
- Quicktime
- Safari
- DAP (download accelerator)
- Notepad++
- Mirc
And more….
http://www.infobytesec.com
Lab                                                
Time for the demo. 
Cool!
http://www.infobytesec.com
evilgrade 
A more secure approach
- Update server running under https, certificate 
control.
- Digital signatures, verify the update with a public 
key
http://www.infobytesec.com
and you know..
Next time you do an update!
http://www.infobytesec.com
don’t believe in everything you see          
http://www.infobytesec.com
References
More Info
• http://www.secureworks.com/research/articles/dns-cache-
poisoning/#update
• http://www.trusteer.com/docs/bind9dns.html
• http://www.trusteer.com/docs/bind8dns.html
• http://en.wikipedia.org/wiki/ARP_spoofing 
• http://www.trusteer.com/docs/microsoftdns.html
•http://www.doxpara.com/
http://www.infobytesec.com
Questions!
???
http://www.infobytesec.com
Thanks!
Contact
Francisco Amato – PI:EMAIL
Federico Kirschbaum – PI:EMAIL
http://www.infobytesec.com
http://blog.infobytesec.com
http://www.ekoparty.org