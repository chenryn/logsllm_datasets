在开始之前，我们需要创建一个AWS账户，获取访问密钥ID。您可以从亚马逊网站免费获取您的账户。创建账户后，登录AWS，获取您的安全凭证和访问密钥。一旦您获得AWS Access ID和密钥，就可以查询申请的S3容器了。
查询S3容器并下载所有内容。
安装awscli。 
sudo apt install awscli
配置凭据。 
aws configure
查看CyberSpaceKittens的S3容器的权限。 
aws s3api get-bucket-acl --bucket cyberspacekittens
从S3容器中读取文件。 
aws s3 ls s3://cyberspacekittens
下载S3容器中的所有内容。 
aws s3 sync s3://cyberspacekittens
在查询S3容器之后，接下来要测试的是该容器的写入权限。如果我们具有写访问权限，则可以完全控制容器中的应用程序。我们经常看到，当存储在S3容器中的文件在所有页面上使用时（如果我们可以修改这些文件），我们可以将恶意代码复制到Web应用程序服务器。
写入S3，如图2.11所示。
echo "test" > test.txt。
aws s3 mv test.txt s3://cyberspacekittens。
aws s3 ls s3://cyberspacekittens。
注意，写权限已从Everyone组中删除。这只是为了演示。
图2.11
3．修改AWS容器中的访问控制权限
在分析AWS安全性时，我们需要检查对象和容器的权限控制。对象是单个文件，容器是逻辑存储单元。如果配置不正确，这两个权限可能会被用户任意修改。
首先，我们查看每个对象，检查是否正确配置了这些权限。
aws s3api get-object-acl --bucket cyberspacekittens --key ignore.txt。
我们看到该文件只能由名为“secure”的用户写入，并未对所有人开放。如果我们具有写访问权限，则可以使用s3api中的put-object函数来修改该文件。
接下来，我们来查看是否可以修改容器。这可以通过以下方式实现，如图2.12所示。
aws s3api get-bucket-acl --bucket cyberspacekittens。
图2.12
同样，在这两种情况下，READ是全局许可的，但只有名为“secure”的账户才具有完全控制或任意写的权限。如果我们访问容器，那么可以使用--grant-full-control来完全控制容器和对象。
4．子域名劫持
子域名劫持是常见的漏洞，近期我们发现很多公司有这个漏洞。如果一家公司使用第三方CMS/内容/云服务商，将子域名指向这些服务商的平台，会发生什么情况？如果该公司忘记配置第三方服务或者忘记注销服务，攻击者可以从第三方服务商接管该子域名。
例如，您注册名为testlab.s3.amazonaws.com的S3 Amazon容器。然后，您的公司的子域名testlab.company.com指向testlab.s3.amazonaws.com。一年后，您不再使用S3容器，并取消了testlab.s3.amazonaws.com注册，但忘记了testlab.company.com的别名记录的重定向配置。现在有人可以访问AWS并重新申请testlab.s3.amazon.com，并在被攻击者的域上拥有有效的S3容器。
tko-subs工具可以检测子域名劫持漏洞。我们可以使用这个工具，检查任何指向CMS服务商（Heroku、GitHub、Shopify、Amazon S3、Amazon CloudFront等）的子域名是否可以被劫持。
运行tko-subs。
cd /opt/tko-subs/。
./tkosubs -domains = list.txt -data = providers-data.csv output = output.csv。
如果找到一个未注册的别名记录，那么可以使用tko-subs来接管GitHub页面和Heroku应用程序。否则，我们需要手动完成。以下两个工具也具有域名劫持功能。
HostileSubBruteforcer。
autoSubTakeover。
2.1.9 电子邮件
社会工程攻击的很大一部分工作是搜索电子邮件地址和员工姓名。在前面的章节中，我们提到了Discover Script，这个工具非常适合搜集电子邮件和员工姓名等数据。我通常首先使用Discover脚本，然后再使用其他工具挖掘数据。每个工具的工作方式略有不同，尽可能多地使用这些工具是非常有帮助的。
获得一些电子邮件后，最好了解目标的电子邮件命名格式。目标是采用姓.名@ cyberspacekitten.com还是初始.姓@ cyberspacekittens.com的命名方式？一旦找出邮件的命名格式，我们就可以使用像LinkedIn这样的工具，找到更多的员工姓名，并尝试识别他们的电子邮件地址。
1．SimplyEmail
我们都知道，鱼叉式网络钓鱼仍然是非常有效的攻击方式。如果我们未发现公司网络的任何漏洞，那么只能“攻击”公司的员工。要构建一个有效的电子邮件地址列表，我们可以使用SimplyEmail工具。这个工具能够输出公司的电子邮件地址格式和有效用户列表。
实验
查找cnn.com的所有电子邮件账户。
cd /opt/SimplyEmail。
./SimplyEmail.py -all -v -e cyberspacekittens.com。
firefox cyberspacekittens.com /Email_List.html。
这可能需要运行很长时间，因为SimplyEmail工具会检索Bing、Yahoo、Google、Ask Search、PGP Repos和文件等，如图2.13所示。这也可能使您的网络看起来像搜索引擎的机器人，由于SimplyEmail工具会发起非常多的搜索请求，因此可能需要验证码。
图2.13
对您的公司进行这种检测。您是否看到了熟悉的电子邮件地址？这些邮件地址将是后续行动中的攻击目标。
2．过去的泄露事件
获取电子邮件地址的一种方法是持续监控和关注之前的泄露事件。我不想直接提供泄露文件的链接，但我会提供这些事件的名称。
2017年密码泄露14亿次。
2013年的Adobe泄露事件。
Pastebin Dumps。
Exploit.In Dumps。
Pastebin Google Dork。
2.2 其他开源资源
我不知道在哪里放置这些资源，但是我想提供一些其他红队攻击活动的资源。这有助于识别人员、位置、域名信息、社交媒体和图像分析等。
OSINT链接的集合。
OSINT框架。
2.3 结论
在本章中，我们简要介绍了各种不同的侦察策略和使用的工具。这只是一个开始，因为有太多工作需要手动完成，而且执行要花费大量时时间。您可以进阶到下一阶段，优化这些工具的自动化过程，使侦察变得快速而且高效。
第3章 抛传——网站应用程序漏洞利用
在过去几年中，我们经历了一些来自外部的严重网络攻击事件。Apache Struts 2网站（尽管Equifax事件还没有正式确认）、Panera网站和优步网站泄露了大量数据。毫无疑问，我们还会看到其他一些互联网网站，由于被攻击而导致严重的数据泄露事件。
整个安全行业在以周期性的方式发展。如果查看OSI模型的各个层级，那么会发现攻击者每隔一年就转移到不同的层级。对于网站来说，早在21世纪初，就有大量的SQLi和RFI类型漏洞被攻击者利用。然而，一旦公司开始加固网站外部安全措施，并开始进行外部渗透测试，攻击者就转向最初进入点——第8层即社交工程（网络钓鱼）攻击。现在，正如我们看到的，公司通过下一代端点/防火墙提升内部的安全性，攻击者的重点转向应用程序漏洞利用。我们还看到应用程序、API和语言的复杂性大幅增加，这导致许多旧的漏洞重新出现，甚至产生新的漏洞。
由于本书倾向于采用红队的思路，因此我们不会深入研究所有不同的Web漏洞或者如何手工利用这些漏洞。本书不会将Web漏洞逐一罗列。本书关注红队和“坏人”在现实世界中使用的漏洞，这些漏洞会导致个人身份信息、主机和网络泄露。如果您想详细了解网站漏洞类型，我强烈建议您参考《OWASP测试指南》一书。
请注意，由于本书第2版中的很多攻击方法没有改变，因此在本章练习中我们将不再重复SQLMap、IDOR攻击和CSRF漏洞等示例。我们将关注更新、更重要的攻击方法。
3.1 漏洞悬赏项目
在开始介绍如何挖掘网站应用程序漏洞之前，我们先来了解一下漏洞悬赏项目。我们经常被问到的问题：“我怎样才能在这些训练后继续学习？”我的建议是针对真实的应用系统。您可能整天在训练、做实验，但是如果没有真实的目标环境，您很难提升能力。
但有一点需要注意：平均而言，训练大约需要花费3～6个月的时间，之后您才能够持续发现漏洞。我们的建议：不要感到沮丧，与其他漏洞挖掘同行并肩前进，同时要经常挖掘旧程序的漏洞。
常见的漏洞悬赏项目是HackerOne、BugCrowd和SynAck，还有很多其他的项目，这些项目可以提供0～2万美元甚至是更多的奖金。
我的很多学生发现，查找漏洞的过程令人望而生畏。漏洞悬赏项目需要您深入了解项目，每天花费几个小时，并且要了解如何利用“第六感”来挖掘漏洞。通常来说，漏洞挖掘一个好的起点是从无赏金漏洞悬赏项目（专业人士不会在这里看）或者像Yahoo这样的大型、成立时间较长的网站开始。这些类型的站点往往具有大量的网络地址空间和很多传统的服务器。正如之前的书中所提到的，渗透测试规划很重要，漏洞悬赏项目也不例外。许多项目指定了可以做什么和不可以做什么（如不能扫描、不能使用自动化工具、哪些域名可以被攻击等）。有时您很幸运，项目允许对* .company.com开展漏洞挖掘，但有时可能只限于一个域名。
让我们以eBay网站为例，该网站有一个公开的漏洞悬赏项目。漏洞悬赏项目明确了指南、可以攻击的域名、有效的漏洞类型、禁止攻击的目标，以及如何报告和确认，如图3.1所示。
图3.1
如何向公司报告漏洞通常与发现漏洞同等重要。我们都希望能够为公司提供尽可能详细的信息，包括漏洞类型、严重性/关键性、漏洞产生的步骤、屏幕截图，甚至是漏洞触发样本。如果您需要创建完善的报告，请查看报告生成表单，如图3.2所示。
图3.2
在运行自己开发的漏洞利用程序之前，对于漏洞悬赏项目，有一点需要注意的是，我看到在一些案例中，研究人员在发现漏洞后，后续操作已不局限于验证漏洞。
举例说明，在找到SQL注入漏洞后，转储整个数据库，在接管子域名后用个人认为有趣的内容修改页面，甚至执行远程代码漏洞后，在生产环境中横向渗透。上述行为都有可能导致法律纠纷，并可能让联邦调查人员出现在您的家门口。因此，请您做出最理智的判断，确定项目的范围，并记住如果感觉想要做的事是违法的，那么它很可能就是违法的。
3.2 Web攻击简介——网络空间猫
完成侦察和探测后，您需要回顾和分析找到的所有各类站点。查看结果，未发现存在漏洞或者配置错误的应用程序。没有任何Apache Tomcat服务器或者存在Heartbleed/ShellShock漏洞的服务器，似乎所有Apache Strut及其CMS应用程序漏洞都已经被打上补丁了。
此时直觉可能会开始发挥作用，您开始在客户支持系统应用程序中探索。有些东西感觉不对劲，但是从哪里开始呢？
本章中提到的所有攻击方法，都可以在本书自定义的VMWare虚拟机中重复实验。虚拟机可以在本书配套资源中免费获得。
设置Web演示环境（客户支持系统）。
下载本书定制的虚拟机。
下载实验的完整命令列表。 
https://github.com/cheetz/THP-ChatSupportSystem/blob/master/lab.txt
http://bit.ly/2qBDrFo
启动并登录虚拟机。
虚拟机完全启动后，显示应用程序的当前IP地址。您无须登录VM，也无须提供密码，即可开始查找应用程序漏洞。
由于这是在您自己的主机系统上托管的网站应用程序，因此需要在攻击者Kali系统上创建主机名记录。 
在攻击者Kali虚拟机上编辑主机文件，通过主机名或者IP地址指向被攻击的应用程序。
gedit/etc/hosts
添加以下行，IP地址指向被攻击的应用程序。
[存在漏洞应用程序IPAddr] chat
现在，在Kali的浏览器中访问http://chat:3000/。如果一切正常，您应该能够看到Node.js自定义漏洞应用程序。
本节的命令和攻击方法可能非常多而且复杂。为了方便起见，我在下面文件中列出了每个实验所需的所有命令。
https://github.com/cheetz/THP-ChatSupportSystem/blob/master/lab.txt。