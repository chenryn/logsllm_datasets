### Issue Description

I am using `exporter` from `tensorflow.contrib.session_bundle` to save my model. Here is the relevant code:

```python
x = tf.placeholder(tf.float32, (None,) + (100, 200) + (1,))
...
saver = tf_saver.Saver(sharded=True)
model_exporter = exporter.Exporter(saver)
model_exporter.init(
    sess.graph.as_graph_def(),
    named_graph_signatures={
        'inputs': exporter.generic_signature({'images': x}),
        'outputs': exporter.generic_signature({'classes': y})
    }
)
```

After saving the model, I load it back using `session_bundle` from `tensorflow.contrib.session_bundle`:

```python
sess, meta_graph_def = session_bundle.load_session_bundle_from_path(input_path)
```

However, when I inspect the `Placeholder` tensor corresponding to the input `x`, I notice that the shape information is missing:

```python
> sess.graph.get_tensor_by_name(input_name)
<tf.Tensor 'Placeholder:0' shape=<unknown> dtype=float32>
```

Is this behavior by design, or is there a bug causing the shape to be lost?

### Related Issues and Threads

I found a related StackOverflow thread discussing a similar issue:
- [StackOverflow: Exported TensorFlow Model Not Preserving Placeholder Shape](http://stackoverflow.com/questions/40733752/exported-tensorflow-model-not-preserving-placeholder-shape)

### Environment Information

- **Operating System**: 
  - Using `gcr.io/tensorflow/tensorflow:latest-devel-gpu` Docker image
- **Installed version of CUDA and cuDNN**:
  - Output of `ls -l /path/to/cuda/lib/libcud*`:
    ```sh
    # ls -al /usr/local/cuda/lib64/libcud*
    -rw-r--r-- 1 root root    558720 Sep 14 23:02 /usr/local/cuda/lib64/libcudadevrt.a
    lrwxrwxrwx 1 root root        16 Sep 14 23:05 /usr/local/cuda/lib64/libcudart.so -> libcudart.so.8.0
    lrwxrwxrwx 1 root root        19 Sep 14 23:05 /usr/local/cuda/lib64/libcudart.so.8.0 -> libcudart.so.8.0.44
    -rw-r--r-- 1 root root    415432 Sep 14 23:02 /usr/local/cuda/lib64/libcudart.so.8.0.44
    -rw-r--r-- 1 root root    775162 Sep 14 23:02 /usr/local/cuda/lib64/libcudart_static.a
    lrwxrwxrwx 1 1000 users       13 Jul 27 05:55 /usr/local/cuda/lib64/libcudnn.so -> libcudnn.so.5
    lrwxrwxrwx 1 1000 users       17 Jul 27 05:55 /usr/local/cuda/lib64/libcudnn.so.5 -> libcudnn.so.5.1.5
    -rwxrwxr-x 1 1000 users 79337624 Jul 27 05:53 /usr/local/cuda/lib64/libcudnn.so.5.1.5
    -rw-rw-r-- 1 1000 users 69756172 Jul 27 05:53 /usr/local/cuda/lib64/libcudnn_static.a
    ```

- **If installed from source**:
  - Commit hash: `git rev-parse HEAD`
    ```sh
    4d924e796368163eff11a8151e8505715345f58d
    ```
  - Bazel version:
    ```sh
    # bazel version
    INFO: Reading 'startup' options from /root/.bazelrc: --batch
    Extracting Bazel installation...
    Build label: 0.3.2
    Build target: bazel-out/local-fastbuild/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar
    Build time: Fri Oct 7 17:25:10 2016 (1475861110)
    Build timestamp: 1475861110
    Build timestamp as int: 1475861110
    ```

Please let me know if you need any additional information or if there are any further steps I can take to resolve this issue.