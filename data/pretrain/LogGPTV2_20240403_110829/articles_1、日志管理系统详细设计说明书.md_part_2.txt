  ------------------------ ----------------------- -----------------------
  字段名称                 类型                    含义描述
  id                       bigint                  自增ID
  name                     varchar(128)            名称
  conf                     longtext                解析配置文件
  enable                   tinyint                 是否启用
  last_modified_time       timestamp               最后修改时间
  enable_security          tinyint                 是否启用安全功能
  ------------------------ ----------------------- -----------------------
**LogTypeGrok**
**表，用来记录LogTypeGrok的相关信息**
  ------------------------ ----------------------- -----------------------
  字段名称                 类型                    含义描述
  id                       bigint                  自增ID
  name                     varchar(128)            名称
  pattern                  longtext                正则
  ------------------------ ----------------------- -----------------------
**Dict**
**表，用来记录词典的相关信息**
  ------------------------ ----------------------- -----------------------
  字段名称                 类型                    含义描述
  id                       bigint                  自增ID
  name                     text                    名称
  domain                   text                    域名
  content                  LONGBLOB                词典内容
  timestamp                timestamp               最后修改时间
  ------------------------ ----------------------- -----------------------
**AgentStatus表，用来记录Heka状态信息**
  ------------------------ ----------------------- -----------------------
  字段名称                 类型                    含义描述
  ip                       varchar(64)             heka上报使用的IP
  last_update_timestamp    datetime                heka上次上报时间戳
  port                     int                     heka http端口
  status                   varchar(64)             heka状态
  ------------------------ ----------------------- -----------------------
**\
**
**SavedSchedule**
**表，用来保存统计信息**
  ------------------------ ----------------------- --------------------------
  字段名称                 类型                    含义描述
  id                       bigintid                自增ID
  name                     text                    名称
  domain_id                int(11)                 
  owner_id                 int(11)                 创建者ID
  request                  varchar(255)            统计对应的web端请求
  result                   text                    运行结果记录集
  email                    varchar(255)            报表等邮件地址
  description              varchar(255)            统计描述
  check_condition          varchar(255)            统计保存的时间间隔等条件
  last_run_timestamp       bigint(20)              上次运行的时间
  ------------------------ ----------------------- --------------------------
UserGroup表，用来保存用户组的信息
  ------------------------ ----------------------- -----------------------
  字段名称                 类型                    含义描述
  id                       bigintid                自增ID
  name                     text                    名称
  domain_id                int(11)                 
  group_owner_name         text                    用户组拥有者的名字
  ------------------------ ----------------------- -----------------------
**MemberUserGroupFinder**
表，用来快速查找用户组下的用户和用户所属用户组下的用户
  ------------------------ ----------------------- -----------------------
  名字名称                 类型                    含义描述
  id                       bigint                  自增ID
  member_id                int(11)                 用户ID，即account_id
  user_group_id            int(11)                 用户组的ID
  ------------------------ ----------------------- -----------------------
**2.6.2接口设计**
**账号（Accounts）管理**
在本系统中以租户为单位管理用户账号，系统为每一个租户（比如yottabyte）分配一个token，做为它的唯一标识。一个租户下的用户分成如下三种角色：
owner，创建该租户的用户就是owner，它可以负责创建/修改/删除
admin/user用户，修改付费计划。
admin，与owner相比，只是不能修改付费计划，其它权限都一样
user
account信息保存在ElasticSearch的system索引中，type名为accounts。scheme
mapping如下描述：
{
\"mapping\" : {
\"accounts\" : {
\"properties\" : {
\"id\" : {\"type\":\"string\", \"store\":\"yes\",
\"index\":\"not_analyzed\"},
\"name\" : {\"type\":\"string\", \"store\":\"yes\",
\"index\":\"not_analyzed\"},
\"full_name\" : {\"type\":\"string\", \"store\":\"yes\",
\"index\":\"not_analyzed\"},
\# passwd使用md5签名
\"passwd\" : {\"type\":\"string\", \"store\":\"yes\", \"index\":\"no\"},
\# domain用来记录用户所属域名
\"domain\" : {\"type\":\"string\", \"store\":\"yes\",
\"index\":\"not_analyzed\"},
\"phone\" : {\"type\":\"string\", \"store\":\"yes\", \"index\":\"no\"},
\"email\" : {\"type\":\"string\", \"store\":\"yes\", \"index\":\"no\"},
\"company\" : {\"type\":\"string\", \"store\":\"yes\",
\"index\":\"no\"},
\# access_type表示用户权限类型，owner/admin/user
\"access_type\" : {\"type\":\"string\", \"store\":\"yes\",
\"index\":\"not_analyzed\"},
\# 用来记录用户行为，内容是一个json串，格式如{"search\":\"xx\",
\"dashboard\": \"xx\"},
\"actions\" : {\"type\":\"string\", \"store\":\"yes\", \"index\":no},
\# 记录趋势图，内容是一个json串，格式如{"\$id\":\[\"\$name\",
\"\$content\"\], \"\$id2\":\[\"\$name2\", \"\$content2\"\]},
\"trends\" : {\"type\":\"string\", \"store\":\"yes\", \"index\":no}
}
}
}
}
id的生成格式：timestamp_domain，其中timestamp是精确到秒的时间戳。比如1404109555_yottabyte
系统提供以下HTTP接口用来管理accounts
  --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  创建account                                                     act=create_account &\                                                                                        成功返回{\"result\":\"true\"}\
                                                                  token=xx &\                                                                                                  失败返回{\"result\":\"false\", \"error\":\"xxx\"}
                                                                  operator=xx &\                                                                                               
                                                                  name=xx &\                                                                                                   
                                                                  full_name=xx &\                                                                                              
                                                                  passwd=xx &\                                                                                                 
                                                                  phone=xx &\                                                                                                  
                                                                  email=xx &\                                                                                                  
                                                                  company=xx &\                                                                                                
                                                                  access_type=xx                                                                                               
  --------------------------------------------------------------- ------------------------------------------------------------------------------------------------------------ ---------------------------------------------------
  检查用户名是否已存在                                            act=check_account_name_existed&token=xx&name=xx                                                              成功返回{\"result\":\"true\"}\
                                                                                                                                                                               失败返回{\"result\":\"false\"}
  检查用户是否是owner                                             act=check_owner&token=xx&name=xx                                                                             成功返回{\"result\":\"true\"}\
                                                                                                                                                                               失败返回{\"result\":\"false\"}
  检查是否具有admin权限（owner或admin)                            act=check_admin&token=xx&name=xx                                                                             成功返回{\"result\":\"true\"}\
                                                                                                                                                                               失败返回{\"result\":\"false\"}
  更新account（只更新设置的key)                                   act=update_account&token=xx&operator=xx&id=xx&name=xx&passwd=xx&phone=xx&email=xx&company=xx&acess_type=xx   成功返回{\"result\":\"true\"}\
                                                                                                                                                                               失败返回{\"result\":\"false\", \"error\":\"xxx\"}
  重置passwd                                                      act=reset_passwd &\                                                                                          成功返回{\"result\":\"true\"}\
                                                                  domain=xx &\                                                                                                 失败返回{\"result\":\"false\", \"error\":\"xxx\"}
                                                                  name=xx &\                                                                                                   
                                                                  email=xx &\                                                                                                  
                                                                  passwd=xx                                                                                                    
  删除account                                                     act=delete_account &\                                                                                        成功返回{\"result\":\"true\"}\
                                                                  token=xx &\                                                                                                  失败返回{\"result\":\"false\", \"error\":\"xxx\"}
                                                                  operator=xx &\                                                                                               
                                                                  id=xx                                                                                                        
  根据account_id获取某个用户的信息                                act=get_account&token=xx&id=xx                                                                               
  获取account列表                                                 act=get_account_list&token=xx                                                                                返回所有account列表，每个account用如下json描述：\
                                                                                                                                                                               {\
                                                                                                                                                                               \"id\":\"xxx\",\
                                                                                                                                                                               \"name\":\"xxx\",\
                                                                                                                                                                               \"access_type\":\"owner\|admin\|user\",\
                                                                                                                                                                               \"phone\":\"xxx\",\
                                                                                                                                                                               \"email\":\"xxx\",\
                                                                                                                                                                               \"company\":\"xxx\"\
                                                                                                                                                                               }
  添加用户action(采用post方式发送数据)                            act=add_account_action &\                                                                                    成功返回{\"result\":true}\
                                                                  token=xx &\                                                                                                  失败返回{\"result\":false, \"error\":\"xxx\"}
                                                                  id=xx  &\                                                                                                    
                                                                  categoy=xx   -d  \$content                                                                                   
  删除用户action                                                  act=delete_account_action &\                                                                                 成功返回{\"result\":true}\
                                                                  token=xx &\                                                                                                  失败返回{\"result\":false, \"error\":\"xxx\"}
                                                                  id=xx &\                                                                                                     
                                                                  category=xx                                                                                                  
  获取用户行为                                                    act=get_account_action &\                                                                                    成功返回{\"result\":true, \"content\":\"xx\"}\
                                                                  token=xx &\                                                                                                  失败返回{\"result\":false, \"error\":\"xxx\"}
                                                                  id=xx &\                                                                                                     
                                                                  category=xx                                                                                                  
  添加trend                                                       act=add_account_trend &\                                                                                     成功返回{\"result\":true}\
                                                                  token=xx &\                                                                                                  失败返回{\"result\":false, \"error\":\"xxx\"}
                                                                  id=xx &\                                                                                                     
                                                                  name=xx -d \$content                                                                                         
  删除trend                                                       act=delete_account_trend &\                                                                                  成功返回{\"result\":true}\
                                                                  token=xx &\                                                                                                  失败返回{\"result\":false, \"error\":\"xxx\"}
                                                                  id=xx &\                                                                                                     
                                                                  trend_id=xx                                                                                                  
  更新trend名字                                                   act=update_account_trend_name &\                                                                             成功返回{\"result\":true}\
                                                                  token=xx &\                                                                                                  失败返回{\"result\":false, \"error\":\"xxx\"}
                                                                  id=xx &\                                                                                                     
                                                                  trend_id=xx &\                                                                                               
                                                                  name=xx                                                                                                      
  获取trend信息，如果不设置trend_id，返回\                        act=get_account_trend &\                                                                                     成功返回{\"result\":true,\
  （trend_id，name）的列表，如果设置trend_id，返回对应的content   token=xx &\                                                                                                  \"trends\":{\"id\" : \"name\", \"id2\" : \"name\"}\
                                                                  id=xx &\                                                                                                     失败返回{\"result\":false, \"error\":\"xxx\"}
                                                                  trend_id=xx                                                                                                  
  --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
**租户管理**
每个租户都需要分配一个Token，以及流量限制、付费计划等。租户可以重置token，重置之后旧的token还能使用一段时间。
租户账号表保存在ES的system索引中，Type名为domains，其scheme
mapping如下：
{
\"mapping\" : {
\"domains\" : {
\"properties\" : {
\"name\" : {\"type\":\"string\", \"index\":\"not_analyzed\",
\"store\":\"yes\"},
\# 所对应的token，根据name生成
\"token\" : {\"type\":\"string\", \"index\":\"not_analyzed\",
\"store\":\"yes\"},
\# 创建时间
\"create_time\" : {\"type\":\"long\", \"index\":\"no\",
\"store\":\"yes\"},
\#
过期时间，账号有效期需要限定，可以进行修改（如用户由免费升级为付费用户）
\"expiry_date\" : {\"type\":\"long\", \"index\":\"no\",
\"store\":\"yes\"},
\# 每天的流量配额，以M为单位
\"flow_quota\" : {\"type\":\"long\", \"index\":\"no\",
\"store\":\"yes\"},
\# 当天已经消耗的流量，以byte为单位
\"used_flow_quota\" : {\"type\":\"long\", \"index\":\"no\",
\"store\":yes},
\# 记录重置used_flow_quota的时间戳
\"reset_used_flow_quota_timestamp\" : {\"type\":\"long\",
\"index\":\"no\", \"store\":yes}
\# 其它字段：比如付费计划等
}
}
}
}
  -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  创建domain（只有系统内部可以使用，需要指定一个特殊的token)   act=create_domain&domain=xx&token=xx&name=xx&passwd=xx&email=xx&phone=xx&company=xx   成功返回{\"result\":\"true\", \"token\":\"xxx\"}\
                                                                                                                                                     失败返回{\"result\":\"false\",\
                                                                                                                                                     \"error\":\"xxx\"}
  ------------------------------------------------------------ ------------------------------------------------------------------------------------- --------------------------------------------------------------------------
  检查domain name是否已经存在                                  act=check_domain_existed&token=xx&domain=xx                                           存在返回{\"result\":\"true\"}\
                                                                                                                                                     不存在返回{\"result\":\"false\"}
  更新domain(                                                  act=update_domain&token=xx&key=value                                                  成功返回{\"result\":\"true\"}\
                                                                                                                                                     失败返回{\"result\":\"false\",\
                                                                                                                                                     \"error\":\"xxx\"}
  获取domain                                                   act=get_domain&token=xx                                                               成功返回domain信息\
                                                                                                                                                     {\"result\": true,\
                                                                                                                                                     \"domain\": {\
                                                                                                                                                     \"name\":,//String\
                                                                                                                                                     \"create_time\"://秒的unix时间戳\
                                                                                                                                                     \"limit_quota\"://单位byte的每天限额\
                                                                                                                                                     \"max_upload_file_size\"://单位byte最大单个上传文件大小\
                                                                                                                                                     \"used_quota\"://单位byte已用的每天流量\
                                                                                                                                                     \"token\":\[\]//Array\[String\]所有token\
                                                                                                                                                     }}\
                                                                                                                                                     失败返回{\"result\":\"false\",\
                                                                                                                                                     \"error\":\"xxx\"}
  重新设置token                                                act=reset_token&token=xx                                                              成功返回{\"result\":\"true\", \"token\":\"xxx\"}\
                                                                                                                                                     失败返回{\"result\":\"false\",\
                                                                                                                                                     \"error\":\"xxx\"}
  获取token列表(该接口只有本系统之间可以调用，用户不能使用）   act=get_token_list&token=system                                                       获取所有的token列表\
                                                                                                                                                     {\"result\":true,\"tokens\":{\"e4a18194e0b944fb93e05df98156ccce\":true}}
  获取所有domain列表                                           act=get_all_domains &\                                                                {\"result\":true,\"domains\":\[{\"name\":\"alltest\",
                                                               token=system                                                                          \"token\":\[\"e4a18194e0b944fb93e05df98156ccce\"\]}}
  增量更新used_flow_quota                                      act=increase_used_flow_quota&token=xx&quota=xx                                        成功返回{\"result\":true}\
                                                                                                                                                     失败返回{\"result\":false,\"error\":\"xx\"}
  获取上传日志量统计（30天之内的）                             act=get_upload_bytes_stat &\                                                          成功返回\
                                                               token=xx                                                                              {\"result\":true, \"stats\":\[v1,v2\...v30\]}\
                                                                                                                                                     失败返回{\"result\":false,\"error\":\"xx\"}
  获取日志量统计\                                              act=get_domain_stats &\                                                               成功返回\
  （根据logtype,hostname,appname,tag进行分类）                 token=system                                                                          {\"result\":true, \"stats\":{\"hostname_stats\":\[\], xxx}}\
                                                                                                                                                     失败返回{\"result\":false,\"error\":\"xx\"}
  创建功能权限配置                                             act=create_func_auth&token=xx&parser_conf=0\|1&upload_file_size_limit=                成功返回：\
                                                                                                                                                     {\"result\":true}\
                                                                                                                                                     失败返回：\
                                                                                                                                                     {\"result\":false}
  更新功能权限配置                                             act=update_func_auth&token=xx&parser_conf=0\|1&upload_file_size_limit                 成功返回：\
                                                                                                                                                     {\"result\":true}\
                                                                                                                                                     失败返回：\
                                                                                                                                                     {\"result\":false}
  获取功能权限配置                                             act=get_func_auth&token=xx                                                            成功返回：\
                                                                                                                                                     {\
                                                                                                                                                     \"result\": true,\
                                                                                                                                                     \"results\": {\
                                                                                                                                                     ***\"parser_conf\": true,***\
                                                                                                                                                     \"upload_file_size_limit\": -1\
                                                                                                                                                     }\
                                                                                                                                                     }
  -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
**LogType模板管理**
每条日志都需要一个特定的模板来解析它，本系统提供若干内置模板（比如标准nginx/apache/log4j等），如果内置模板不能准确解析，也支持用户自定义模板。
每个模板都配置了若干解析规则（比如Grok Parser，KV
Parser等，具体配置参考tim的LogParser文档），每个解析规则都是可配置的。自定义模板可以继承自某个内置模板，然后提供自定义的某个解析规则（比如只修改Grok
Parser），其它解析规则都继承内置模板，有点类似OOP中的override method。
内置模板表保存在ES的system索引中，type名为log_types，scheme
mapping如下描述：
{
\"mapping\" : {
\"log_types\" : {
\"properties\" : {
\"name\" : {\"type\":\"string\", \"store\":\"yes\",
\"index\":\"not_analyzed\"},
\# pattern字段包含所有的解析规则，以json格式描述
\"pattern\" : {\"type\":\"string\", \"store\":\"yes\", \"index\":\"no\"}
}
}
}
}
  --------------------------------------------------------------------------------------------------
  创建模板（采用POST接口）   act=create_logtype&token=xx&name=xx   成功返回{\"result\":\"true\"}\
                             -d \$pattern                          失败返回{\"result\":\"false\",\
                                                                   \"error\":\"xxx\"}
  -------------------------- ------------------------------------- ---------------------------------
  更新模板（采用POST接口）   act=update_logtype&token=xx&name=xx   成功返回{\"result\":\"true\"}\
                             -d \$pattern                          失败返回{\"result\":\"false\",\
                                                                   \"error\":\"xxx\"}
  删除模板                   act=delete_logtype&token=xx&name=xx   成功返回{\"result\":\"true\"}\
                                                                   失败返回{\"result\":\"false\",\
                                                                   \"error\":\"xxx\"} 
  获取模板列表               act=get_config&token=xx&name=xx       成功返回模板列表｛\
                                                                   \"result\":\"true\",\
                                                                   \"config\" : {\
                                                                      logParserConfig\
                                                                   }\
                                                                   ｝\
                                                                   失败返回{\"result\":\"false\",\
                                                                   \"error\":\"xxx\"} 
  获取某一个模板             act=get_logtype&token=xx&name=xx      成功返回模板列表｛\
                                                                   \"result\":\"true\",\
                                                                   \"logtypes\" : {\
                                                                   \"name\" : \"pattern\",\
                                                                   }\
                                                                   ｝\
                                                                   失败返回{\"result\":\"false\",\
                                                                   \"error\":\"xxx\"} 
  --------------------------------------------------------------------------------------------------
**SourceGroup管理**