原文：[brokenbrowser](https://www.brokenbrowser.com/sop-bypass-uxss-tweeting-like-charles-darwin/)  
原作者: Manuel Caballero  
译： **Holic (知道创宇404安全实验室)**
今天我们探索 Microsoft Edge 上的另一个 SOP 绕过，而此处 data/meta 标签的滥用，侧面证实了无域页面是可以随意访问有域的页面的。
着急吗？可以先看这 59 秒的视频，其中我们[代表 Charles Darwin
发了条推特](https://youtu.be/K3Ui3JxZGnE)，或者，观看我们手动[发推并抓取用户的密码](https://youtu.be/PlxQBmLrnQA)（利用了
Microsoft Edge 的默认密码管理器）。Charles Darwin
是一个案例，该漏洞可以让攻击者用已经登录的用户的名义发推（或是更多的事情）。欲知详情如何，请继续阅读。
如果你第一次看本博客，我建议你先阅读这两篇 SOP 绕过的文章： [Adventures in a Domainless World
(Edge)](https://www.brokenbrowser.com/uxss-edge-domainless-world/) 和 [More
Adventures in a Domainless World (IE)](https://www.brokenbrowser.com/uxss-ie-domainless-world/)。后续文章基于相同的思路，只是用了一点新技术。
（对应 Paper 译文：http://paper.seebug.org/143/ 和 http://paper.seebug.org/254/ ）
接下来快速回顾一个重要概念： **about:blank 始终是其 referrer 的域** ，意味着来自 Twitter 的 about:blank
iframe 不能访问 google 的 blank 页面。即使他们之间的地址是匹配的（about:blank），document.domain
却是不同的。
过去，我们无须域名就能创建 about:blank ，或者 **无域的 about:blank** 。那些都有权访问每个 about:blank
而无视其域。比如，假设我们在主页上有一个无域的 blank，渲染了一个指向 Twitter，另一个指向 google 的 iframe。那些 iframe
中同样有空的子 iframe，其域当然也是 twitter 和 google。在这种情况下，顶部窗口可以访问有域的空页面，意味着可以访问 google 和
Twitter 的 DOM 了。
上述情景效果很好，但是微软三个月前用一个[很机智的技巧](https://www.brokenbrowser.com/free-ticket-to-the-intranet-zone/) [修复了这个 bug](http://www.cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0002):无域的 blank 已经不再是无域的了，而被设置为其域名的
GUID，比如{53394a4f-8c04-46ab-94af-3ab86ffcfd4c}。还有一些更有意思的东西（向微软开发者致敬）：域看起来像是空的，其实不是。换句话说，Edge
隐藏 GUID 并返回空，而在其内部仍是 GUID。
试一下便知！打开 Edge 启用 Devtools（F12)，然后在地址栏输入
about:blank。用于创建一个无域的空白页面，它仍然看起来没有变化，这是 Edge 在给我们上演戏法。请稍事欣赏，我们有足够的时间打破它的魔咒。
如你所见，DevTools 认为我们在空域之下，其实并不是。
### 打破魔咒
如果就连 DevTools 都被欺骗了，又如何了解其中发生了什么呢？比想象中简单，仅需尝试加载有相对路径的东西，或者改变 window 的
location，甚至 document.write 都会揭露这个把戏。使用 location.href=1，看看会发生什么。
### 顶层 data:uri 被修复以及 Flash 禁用的情况
我们之前[创建无域空白页面](https://www.brokenbrowser.com/uxss-edge-domainless-world/)的技术已修复。我们也曾借助 Flash/GetURL 在主（顶层） window 上设置
data:uri。而这些技巧都被修复了，更糟糕的是，已经不会自动运行 Flash 了！Windows 创意者更新中，运行 Flash 之前 Edge
会请求权限。
注意，捉虫猎手！之前文章的 [PoC](http://unsafe.cracking.com.ar/demos/edge-domainless-uxss/bing/index.html)现在看起来很不美观！表扬下 Edge 团队，这一措施减少了攻击面。
### 寻找新的无域空页面
针对顶层的 data:uri 技巧已经没有用了，那么我们又如何攻克呢。首先，我先研究 iframe 而不是顶层，因为我们在过去看到，Edge 不喜欢主窗口的
data:uri。
    top.location.href = "data:text/html,SOMETHING"; // Fails badly, error page
而将 data:uri 设置为 iframe 的 location 则颇为有效。但这并不是一个 bug，iframe 的域是与顶层隔离的。
正如在[阅读模式 SOP 绕过](https://www.brokenbrowser.com/sop-bypass-abusing-read-protocol/)中看过的，data:uri 的‘隔离’限制微不足道（仅一个 self document.write
就能访问父页面），但不是我们现在想要的。访问顶层现在毫无意义，我们想要能访问无域空白页面方法。为此，我们需要三连击：data-meta-data。然后重获
Edge 那些修复的特性。
具体来说，我们使用 data uri 设置 iframe 的 location，该 uri 会渲染 meta 刷新，重定向至另一个 data
uri。这都是我们和 Edge 忽略的地方。
> 创建无域空白页面的方法：
>
>   1. 设置 iframe 的 location 为 data:uri
>
>   2. data:uri 渲染了 meta refresh 标签
>
>   3. meta refresh 重定向至另一个 data:uri
>
>
我们构建一个 URL ，将常规的（有域）的 iframe 转换为无域的。如果在脑海中不断重复‘data-meta-data’，会更容易一些，因为...实际就是这样。
我知道它没有 E=mc2 那么漂亮，但是这一技巧可以用来偷取爱因斯坦的登录凭据，电子邮件，PayPal
账户，甚至以他的名义发推。我们先测试所学的技巧，直到这点生效为止。我们用 bing.com 做演示，颇为简单，因为它内部有一个空白页面的 iframe
而且不使用 XFO。
### 用 bing.com 热身
我们将创建有两个 iframe 的页面：其一是 bing.com ，另一个是无域的。无域页面将在 bing 内部的blank iframe
中执行代码。Bing 图片正是我们想要的。我先打开 Chrome 展示下我想表达的意思。
很不错。现在我们借助 **无域的 data-meta-data** 构建页面并将代码注入到 blank iframe 中。但有一些话我还没讲。你还记得在那篇
[domainless SOP](https://www.brokenbrowser.com/uxss-edge-domainless-world/) 中用
nature.com 演示的命名问题吗？若是没有，我给你快速回顾一下。
这一点上，我们的无域 iframe 能够访问 bing 中的 blank 页面，而访问机制尤其重要。我们不能直接访问 DOM，必须使用
window.open 方法。换句话说，我们无法以这种方式访问 iframe 的内部：
    alert(top[0][0].document.cookie); // ACCESS DENIED
其实我们甚至不能这样做：
    top[0][0].location.href = "javascript:alert(document.cookie)"; // ACCESS DENIED
那我们应该怎么办呢？很简单，利用 JavaScript url 和 iframe 的名称(name 属性，后统称名称)打开窗口。如果 bing 内部
iframe 名称为 " **INNER_IFRAME** "，以下代码将运行正常。
    window.open("javascript:alert(document.cookie)", "INNER_IFRAME"); // SOP BYPASSED!
可恶， Bing 中嵌套的 iframe 没有名称（name）！不要惊慌，要么我们请求 Bing 团队为我们设置一个名称，要么继续推进。更好地继续推进！
### 设置 iframe 的名称（name）
我们不能设置不属于我们的 iframe 的名称，除非它与我们在同一个域中。然后要渲染一个内有 blank 页面的 iframe。外部 iframe
属于不同的域，但标签本身（元素，对象）位于我们的域中，因此我们可以设置我们想要的任何名称。
而内部 iframe 是通过 bing 渲染的，即使它是空白页面，更改它名称的方法也只能是将其 location