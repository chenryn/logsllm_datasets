附录D系统变量、状态变量和用户变量参考
里引入的。
获得更好的并发性，并减少阻塞。对于会生成多个这种值的多行INSERT语
局）
此变量是在
因
---
## Page 655
口innodb_file_format_check（启动：直接设置；作用范围：全局）
口
口
口
口
口
口
口
口innodb_checksums（启动：直接设置；作用范围：全局）
口innodb_checksum_algorithm（启动：直接设置；作用范围：全局；动态）
innodb_data_home_dir（启动：直接设置；作用范围：全局）
innodb_data_file_path（启动：直接设置；作用范围：全局）
innodb_concurrecy_tickets（启动：直接设置；作用范围：全局；动态）
innodb_commit_concurrency（启动：直接设置；作用范围：全局；动态）
InnoDB 系统表空间包含有一个标志，它表示的是表空间里使用的最高版本的文件格式。此
持的功能，如COMPRESSED 行格式。
为Antelope；另一个允许值为 Barracuda。
如果启用了innodb_file_per_table，则它指的是InnoDB新表所使用的格式。默认格式
innodb_file_format（启动：直接设置；作用范围：全局；动态）
些正常情况下会执行的操作）。
innodb_fast_shutdown（启动：直接设置；作用范围：全局；动态）
它指的是，InnoDB是否启用了双写缓冲区。默认值是ON。
innodb_doublewrite（启动：直接设置；
文件名将被解释为绝对路径名。
它指的是相对于InnoDB表空间组件文件存放位置的目录路径名。
它指定的是InnoDB表空间组件的文件。与该变量值的格式有关的讨论请参考12.5.3.1节。
当
最大次数由 innodb_concurrecy_tickets 变量的值决定。默认值为 500。
下。一旦线程被允许进入，它将可以不受限制地离开和重新进入InnoDB，这种自由往返的
当某个线程想进入InnoDB时，只有当线程数量小于innodb_commit_concurrency 变量
此变量表示的是可以同时提交多少个线程。当该值为0时(默认值)，表示的是
用，请使用innodb_checksum_algorithm。
它指的是，InnoDB表是否启用检验计算。默认值为ON。自MySQL 5.6.3起，此变量已被弃
此变量是在MySQL5.6.3里引I入的。
法。下表列出了各种可能的取值。strict_xxx的值与它们的对应变量很相似，主要差异在
InnoDB 会在其表空间的每一个块里写入校验和值。此变量控制的是用于计算检验和值的算
当此变量的值为0或1时，它表示的是InnoDB是否使用其较快速的关机方法（它会跳过某
设
设置的上限时它才能成功。否则，该线程将排队等候直到线程的数量降低到那个上限以
：InnoDB在表空间里遇到多种校验和类型时会停止。
strict_innodb
purges
inserts
deletes
changes
none
all
innodb,
取值
取值
。当取值为2时，InnoDB会刷新其日志，然后停止。
默认算法
使用CRC32算法
检验值为常量
缓存那些被“垃圾回收器”标记为删除的清理操作
缓存插入操作
缓存那些把索引记录标记为删除的更改操作
缓存插入和删除操作
不缓存更改操作
缓存所有的更改操作；这个是默认值
作用范围：全局）
：使用Barracuda可以启用不被Antelope支
含义
含义
如果此变量为空，则组件
D.1系统变量
“无限制”
635
---
## Page 656
636
口innodb_force_load_corrupted（启动：直接设置；作用范围：全局）
口
口innodb_flush_method（启动：直接设置；作用范围：全局）
口innodb_flush_log_at_trx_commit（启动：直接设置；作用范围：全局；动态）
口i
口
此变量是在MySQL 5.5.18里引入的。
据；在恢复之后，可以在禁用此变量的情况下重启服务器。更多相关信息请参考14.7.4节。
常情况下会被忽略。如果启用此变量，则可能允许恢复那些在禁用此变量时无法访问的数
它表示的是，ImnoDB 在启动时是否加载已标记为损坏的表。默认值为OFF，因此这些表通
新相邻页面）
邻页面一起刷新。刷新相邻页面，可以将写操作结合在一起，减少磁盘设备旋转过程中的
它表示的是，InnoDB是单独刷新缓冲池的脏面，还是连同位于同一范围（页面组）内的相
innodb_flush_neighbors（启动：直接设置；作用范围：全局；动态）
数据文件和日
fdatasync（使用fsync（）来刷新数据文件和日志文件）、O_DsYNC（使用fsync（)来刷
此变量给出的是InnoDB 用来刷新文件的方法。它只适用于Unix系统。可取值包括
在丢失最近提交事务的风险。
以减少 InnoDB将缓存数据保存到磁盘的次数。不过，如果出现崩溃，则这样会大大增加潜
的情况，那么会付出大约1秒的代价，即最近的事务会丢失。如果将此变量设置为0，则可
只有在将此变量设置为1（默认值）时，InnoDB才能保证ACID特性。否则，如果出现崩溃
这个变量控制着 InnoDB日志的刷新行为。下表列出了各种可能的取值。
访问已经在系统表空间或独立表空间里创建的表。
此变量只影响 InnoDB 如何创建新表。不管如何更改此变量的值，InnoDB存储引擎总是可以
目录条目，而不会用于数据或索引存储。
独创建一个.ibd文件来存放该表的内容。在这种情况下，系统表空间只会用于InnoDB数据
如果此变量被设置为0（默认值），InnoDB 将在其系统表空间里创建新表。
innodb_file_per_table（启动：直接设置；作用范围：全局；动态）
此变量未被使用。
innodb_file_io_threads（启动：直接设置）
请参考innodb_file_format_check的描述。
innodb_file_format_max（启动：直接设置；作用范围：全局；动态)
MySQL5.6.6走
新
innodb_file_format_max设置成该格式。
么启动会失败，并产生一个错误。如果该格式版本不够高，那么InnoDB 会将
本比InnoDB支持的那个版本更高。如果启用此变量（默认值），并且该格式版本更高，
变量会在服务器启动时设置，主要用于控制InnoDB是否要检查这个标志，以确定此格式版
附录D系统变量、状态变量和用户变量参考
道时间开销。这个变量是在MySQL5.6.3里引入的，是一个布尔量，其默认值为ON。
数据文件，
取值
，并使用O_SYNC来打开和刷新日志文件）和O_DIRECT（使用fsync（）来刷新
和2（刷新同一范围里的所有相邻页面）。
起，这个变量成为了三态变量，允许的值包括：0（不刷新相邻页面）、1（刷
日志文件，视情况选用O_DIRECT或directio（)来打开数据文件）。默认值为
每提交一次写入一次日志，但是每秒刷新到磁盘一次
每提交一次写入一次日志，并刷新到磁盘一次
每秒写入一次日志，并刷新到磁盘一次
含义
。如果此变量被设
自
那
---
## Page 657
口innodb_max_dirty_page_pct（启动：直接设置；作用范围：全局；动态）
口
口
口
口
口i
口
口
口i
口innodb_io_capacity（启动：直接设置；作用范围：全局；动态）
innodb_ft_xxx
口innodb_force_recovery（启动：直接设置；作用范围：全局）
它指的是，在InnoDB认为需要将日志刷新到磁盘之前，InnoDB允许脏页占用其缓冲池的百
合理更改包括：对于拥有繁重写操作工作负载和大型缓冲池的服务器，可以减小这个值：
这个操作能够查看到的页面列表（按最近最少使用的顺序排序）的长度。对默认值1024
innodb_lru_scan_depth（启动：直接设置；作用范围：全局；动态）
InnoDB会使用一个后台操作来查找需要从其缓冲池刷新到磁盘的脏页。
它指的是InnoDB应该将其日志文件写入的那个目录的路径名。
innodb_log_group_home_dir（启动：直接设置；作用范围：全局）
in_group 的乘积决定了 InnoDB 日志的总大小。
它指的是 InnoDB 维护的日志文件个数。innodb_log_file_size和 innodb_log_files_
innodb_log_files_in_group（启动：直接设置；作用范围：全局）
files_in_group的乘积决定了InnoDB日志的总大小。
它指的是每个InnoDB日志文件的大小。
innodb_log_file_size（启动：直接设置；作用范围：全局）
为1MB。
它指的是InnoDB事务日志缓冲区的大小。此变量的取值范围通常是1MB~8MB；默认
TTED。更多详细信息请参考2.12.3节。
针对特定的会话或事务，使用SETTRANSACTION将事务隔离级别设置为READCOMMI-
因此请不要再使用它。为获得与此变量相同的效果（非严格的锁定），但是更加灵活，可以
此变量会对InnoDB如何处理索引行锁定产生影响，但是自MySQL5.6.3起，它已被弃用，
innodb_locks_unsafe_for_binlog（启动：直接设置；作用范围：全局）
它指的是等待某个事务锁的秒数。如果无法获得该锁，则InnoDB会回滚该事务。
innodb_lock_wait_timeout（启动：直接设置；作用范围：全局、会话；动态）
变量是在MySQL5.5.14里引I人的。
COMPRESSED或DYNAMIC行格式的表，允许前缀最高达到3072个字节。默认值为OFF。此
InnoDB索引的最大索引前缀长度通常是767字节。如果启用此变量，
innodb_large_prefix（启动：直接设置；作用范围：全局；动态）
的两倍，它受限制于服务器所使用的最低值2000。此变量是在MySQL5.6.6里引I入的。
如果innodb_io_capacity的值在紧急情况下不够高，那么innodb_io_capacity_max
innodb_io_capacity_max（启动：直接设置；作用范围：全局；动态）
高。请参考innodb_io_capacity_max。
它指的是InnoDB对于后台任务每秒执行IO操作次数的近似限制。默认值为200，最小值为
信息，请参考MySQL参考手册。
的系统变量都与 InnoDB表的全文搜索支持有关。该项功能是在MySQL 5.6.4引I入的。更多
在 MySQL5.6.4之前，对全文搜索的支持仅限于MyISAM表。这些以 innodb_ft 作为开头
恢复失败也可以再次启动。与如何使用此变量有关的更多信息请参考14.7.4节。
此变量的值通常为0，但是可以被设置为1~6的某个值，以便让服务器在崩溃后即使ImnoDB
会
100。对于慢速旋转的磁盘，可能需要将这个值调低一点。对于 SSD 磁盘，可以将其适当
成为InnoDB可以将该限制扩展到的最大值。其默认值为innodb_io_capacity默认值
innodb_log_file_size 和 innodb_log_
D.1系统变量
，这个变量控制的是
那么对于那些使用
637
调
---
## Page 658
638
口innodb_purge_batch_size（启动：直接设置；作用范围：全局；动态）
口innodb_print_all_deadlocks（启动：直接设置；作用范围：全局；动态）
口i
口innodb_open_files（启动：直接设置；作用范围：全局）
口innodb_old_blocks_time（启动：直接设置；作用范围：全局；动态）
口innodb_old_blocks_pct（启动：直接设置；作用范围：全局；动态）
 innodb_monitor_disable、innodb_monitor_enable、
口innodb_max_purge_lag_delay（启动：直接设置；作用范围：全局；动态）
口innodb_max_purge_lag（启动：直接设置；作用范围：全局；动态）
它指的是，重做日志记录的数量。这些记录会引发清除操作，将更改过的缓冲池数据块刷
此变量是在 MySQL 5.6.2里引入的。
它指的是，InnoDB是否会将诊断信息写到与事务死锁有关的错误日志里。默认值为OFF。
在删除并重新创建InnoDB表空间文件之前设置它。此变量是在MySQL5.6.4里引入的。
文件。最小值为10，默认值为300。在innodb_open_files变量控制下分配的文件描述符
files变量控制着需要为InnoDB存储引擎保留多少个文件描述符用于同时打开多个.ibd
如果将 innodb_file_per_table 变量设置为 1，将启用独立表空间。innodb_open_
访问时会立即移到新子列表里去。更多信息请参考12.7.2.1节。
毫秒才能移动到新子列表里。默认值为0。表示的是，插到旧子列表里的缓存块，在第一次
取值范围为5~95。更多信息请参考12.7.2.1节。
考MySQL参考手册。
这此变量控制的是对INFORMATION_SCHEMA.innodb_metrics
它指的是InnoDB维护的日志文件组的个数。其值总是为1。
它指的是可以由 innodb_max_purge_lag 产生的延迟间隔（单位为毫秒）。默认为0（即
为待删除的事务的数量。
延迟INSERT、DELETE和UPDATE语句，让它们适当放慢速度以便清除线程能够追上它们的
5.6.6里引入的。
用百分比。默认值为0，表示禁止预刷新。允许的取值范围为0~99。此变量是在 MySQL
分比。允许的取值范围是0~100；默认值为90。
它指的是InnoDB表空间里的页面大小。默认大小为16KB。允许值有4KB、8KB和16KB。
innodb_page_size（启动：直接设置；作用范围：全局）
件，后者供表缓冲区使用。
与
一个缓存块在第一次访问之后、下次访问之前，需要在InnoDB 缓冲池的旧子列表里待多少
它指的是InnoDB缓冲池的旧子列表所占百分比。
（(n/innodb_max_purge_lag)x10）－5毫秒，其中的n是在执行过程中会把一些行标记
进
行不能及时清除，而占用着本应该释放的空间。innodb_max_purge_lag 变量控制着如何
批量行被插入和删除的频率差不多相同，那么清除线程可能会落后，进而导致大量待删除
InnoDB 维护着一个清除线程，它可以清除删除操作或更新操作标记的待删除的行。如果小
它指的是，
附录 D系统变量、状态变量和用户变量参考
在open_files_limit变量控制下分配的文件描述符互不相干：前者用来打开.ibd 文
生度。默认为〇（即不延迟）。如果把此变量设置为一个非零值，那么延迟大约是
设
置只有在InnoDB 初始化表空间的时候才会生效，因此应该在初始化MySQL之前，或者
，InnoDB为降低脏页的占用比例，而启用预刷新功能所参考的缓冲池脏页最低占
这些变量是在MySQL5.6.2里引I入的。
。默认值为37（即缓冲池的3/8）。允许的
innodb_monitor_reset
表的操作。更多信息请参
---
## Page 659