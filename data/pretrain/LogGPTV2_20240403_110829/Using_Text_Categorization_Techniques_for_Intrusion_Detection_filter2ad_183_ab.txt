main computation is the sorting of training documents
in order to ﬁnd the k nearest neighbors for the test docu-
ment.
is the weight of
We seek to draw an analogy between a text document
and the sequence of all system calls issued by a process,
i.e., program execution. The occurrences of system calls
can be used to characterize program behavior and trans-
form each process into a vector. Furthermore, it is as-
sumed that processes belonging to the same class will

,
/
$
%
S
=[?T)
 ;
if8)9;:
<>=@?T)
 equals 1.0 then
ﬁnd\ biggest scores of8)9;:
<>=@?]
 ;
calculate8)9;:
^_"
for\ -nearest neighbors;
if8Z9;:
`^`"
is greater thanUOa
bc
ad R
is normal; exit;
is normal;
else then
is abnormal;
then
Figure 1: Pseudo code for the kNN classiﬁer algorithm for
anomaly detection.
intrusion detection accuracy against the false positive
probability. It can be obtained by varying the detection
threshold. We formed a test data set to evaluate the per-
formance of the kNN classiﬁer algorithm. The BSM data
of the third day of the seventh training week was chosen
as part of the test data set (none of the training processes
was from this day). There was no attack launched on this
day. It contains 412 sessions and 5285 normal processes.
The rest of the test data set consists of 55 intrusive ses-
sions chosen from the seven-week DARPA training data.
There are 35 clear or stealthy attack instances included
in these intrusive sessions (some attacks involve multiple
sessions), representing all types of attacks and intrusion
scenarios in the seven-week training data. Stealthy at-
tacks attempt to hide perpetrator’s actions from someone
who is monitoring the system, or the intrusion detection
system. Some duplicate attack sessions of the types eject
and warezclient were skipped and not included in the test
data set. When a process is categorized as abnormal, the
session that the process is associated with is classiﬁed
as an attack session. The intrusion detection accuracy is
calculated as the rate of detected attacks. Each attack
counts as one detection, even with multiple sessions.
<
<
8
<
<
1
0.9
0.8
0.7
0.6
0.5
0.4