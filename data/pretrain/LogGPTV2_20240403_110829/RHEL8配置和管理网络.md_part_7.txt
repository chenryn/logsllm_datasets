        对于 IPv4：
        ``` literallayout
        # ping 198.162.3.1
        ```
        对于 IPv6：
        ``` literallayout
        # ping 2001:db8:2::1
        ```
        ::: itemizedlist
        -   如果命令失败，则使用 ping 默认网关来验证设置。
            对于 IPv4：
            ``` literallayout
            # ping 192.0.2.254
            ```
            对于 IPv6：
            ``` literallayout
            # ping 2001:db8:1::fffe
            ```
        :::
    :::
4.  使用 `host`{.literal} 实用程序验证名称解析是否正常工作。例如：
    ``` literallayout
    # host client.example.com
    ```
    如果命令返回任何错误，如 `connection timed out`{.literal} 或
    `no servers could be reached`{.literal}，请验证您的 DNS 设置。
:::
::: itemizedlist
**其它资源**
-   有关为 IPv6 设置客户端标识符的详情，请查看 `dhclient(8)`{.literal}
    man page。
-   有关连接配置集属性及其设置的详情，请查看 `nm-settings(5)`{.literal}
    手册页。
-   有关 `nmcli`{.literal} 工具程序的详情，请查看 `nmcli(1)`{.literal}
    man page。
-   如果磁盘中的配置与设备中的配置不匹配，则启动或重启 NetworkManager
    会创建一个代表该设备的配置的内存连接。有关详情以及如何避免此问题，请参阅
    [NetworkManager
    服务重启后复制连接](https://access.redhat.com/solutions/3068421){.link}。
:::
:::
::: section
::: titlepage
# []{#configuring-an-ethernet-connection_configuring-and-managing-networking.html#configuring-a-dynamic-ethernet-connection-using-the-nmcli-interactive-editor_configuring-an-ethernet-connection}使用 nmcli 互动编辑器配置动态以太网连接 {.title}
:::
这个步骤描述了使用 `nmcli`{.literal}
工具的互动编辑器添加动态以太网连接。使用这个设置，NetworkManager 从 DHCP
服务器请求这个连接的 IP 设置。
::: itemizedlist
**先决条件**
-   网络中有 DHCP 服务器。
:::
::: orderedlist
**流程**
1.  要为以太网连接添加新的 NetworkManager
    连接配置集并启动互动模式，请输入：
    ``` literallayout
    # nmcli connection edit type ethernet con-name Example-Connection
    ```
2.  设置网络接口：
    ``` literallayout
    nmcli> set connection.interface-name enp7s0
    ```
3.  （可选）在使用 `Example-Connection`{.literal} 配置集时更改主机名
    NetworkManager 发送到 DHCP 服务器：
    ``` literallayout
    nmcli> set ipv4.dhcp-hostname Example
    nmcli> set ipv6.dhcp-hostname Example
    ```
4.  （可选）在使用 `Example-Connection`{.literal} 配置集时更改客户端 ID
    NetworkManager 发送到 IPv4 DHCP 服务器：
    ``` literallayout
    nmcli> set ipv4.dhcp-client-id client-ID
    ```
    请注意，没有 IPv6 的 `dhcp-client-id`{.literal} 参数。要为 IPv6
    创建标识符，请配置 `dhclient`{.literal} 服务。
5.  保存并激活连接：
    ``` literallayout
    nmcli> save persistent
    Saving the connection with 'autoconnect=yes'. That might result in an immediate activation of the connection.
    Do you still want to save? (yes/no) [yes] yes
    ```
6.  保留为互动模式：
    ``` literallayout
    nmcli> quit
    ```
:::
::: orderedlist
**验证步骤**
1.  显示设备和连接的状态：
    ``` literallayout
    # nmcli device status
    DEVICE      TYPE      STATE      CONNECTION
    enp7s0      ethernet  connected  Example-Connection
    ```
2.  显示连接配置集的所有设置：
    ``` literallayout
    # nmcli connection show Example-Connection
    connection.id:              Example-Connection
    connection.uuid:            b6cdfa1c-e4ad-46e5-af8b-a75f06b79f76
    connection.stable-id:       --
    connection.type:            802-3-ethernet
    connection.interface-name:  enp7s0
    ...
    ```
3.  使用 `ping`{.literal}
    实用程序验证这个主机是否可以向其他主机发送数据包。
    ::: itemizedlist
    -   查找同一子网中的 IP 地址。
        对于 IPv4：
        ``` literallayout
        # ping 192.0.2.3
        ```
        对于 IPv6：
        ``` literallayout
        # ping 2001:db8:2::1
        ```
        如果命令失败，请验证 IP 和子网的设置。
    -   在远程子网中查找 IP 地址。
        对于 IPv4：
        ``` literallayout
        # ping 198.162.3.1
        ```
        对于 IPv6：
        ``` literallayout
        # ping 2001:db8:2::1
        ```
        ::: itemizedlist
        -   如果命令失败，则使用 ping 默认网关来验证设置。
            对于 IPv4：
            ``` literallayout
            # ping 192.0.2.254
            ```
            对于 IPv6：
            ``` literallayout
            # ping 2001:db8:1::fffe
            ```
        :::
    :::
4.  使用 `host`{.literal} 实用程序验证名称解析是否正常工作。例如：
    ``` literallayout
    # host client.example.com
    ```
    如果命令返回任何错误，如 `connection timed out`{.literal} 或
    `no servers could be reached`{.literal}，请验证您的 DNS 设置。
:::
::: itemizedlist
**其它资源**
-   有关为 IPv6 设置客户端标识符的详情，请查看 `dhclient(8)`{.literal}
    man page。
-   有关连接配置集属性及其设置的详情，请查看 `nm-settings(5)`{.literal}
    手册页。
-   有关 `nmcli`{.literal} 工具程序的详情，请查看 `nmcli(1)`{.literal}
    man page。
-   如果磁盘中的配置与设备中的配置不匹配，则启动或重启 NetworkManager
    会创建一个代表该设备的配置的内存连接。有关详情以及如何避免此问题，请参阅
    [NetworkManager
    服务重启后复制连接](https://access.redhat.com/solutions/3068421){.link}。
:::
:::
::: section
::: titlepage
# []{#configuring-an-ethernet-connection_configuring-and-managing-networking.html#proc_configuring-a-dynamic-ethernet-connection-using-nmstatectl_configuring-an-ethernet-connection}使用 nmstatectl 配置动态以太网连接 {.title}
:::
这个步骤描述了如何使用 `nmstatectl`{.literal} 工具为 `enp7s0`{.literal}
设备添加动态以太网。在这个过程中的设置中，NetworkManager 从 DHCP
服务器请求此连接的 IP 设置。
`nmstatectl`{.literal}
工具确保设置配置后结果与配置文件匹配。如果有任何失败，`nmstatectl`{.literal}
会自动回滚更改以避免系统处于错误状态。
该流程以 YAML 格式定义接口配置。或者，您也可以以 JSON 格式指定配置：
::: itemizedlist
**先决条件**
-   已安装 `nmstate`{.literal} 软件包。
:::
::: orderedlist
**流程**
1.  创建包含以下内容的 YAML 文件，如
    `~/create-ethernet-profile.yml`{.literal} ：
    ``` literallayout
    ---
    interfaces:
    - name: enp7s0
      type: ethernet
      state: up
      ipv4:
        enabled: true
        address: []
        auto-dns: true
        auto-gateway: true
        auto-routes: true
        dhcp: true
      ipv6:
        enabled: true
        address: []
        auto-dns: true
        auto-gateway: true
        auto-routes: true
        autoconf: true
        dhcp: true
    ```
2.  将设置应用到系统：
    ``` literallayout
    # nmstatectl set ~/create-ethernet-profile.yml
    ```
:::
::: orderedlist
**验证步骤**
1.  显示设备和连接的状态：
    ``` literallayout
    # nmcli device status
    DEVICE      TYPE      STATE      CONNECTION
    enp7s0      ethernet  connected  enp7s0
    ```
2.  显示连接配置集的所有设置：
    ``` literallayout
    # nmcli connection show enp7s0
    connection.id:              enp7s0_
    connection.uuid:            b6cdfa1c-e4ad-46e5-af8b-a75f06b79f76
    connection.stable-id:       --
    connection.type:            802-3-ethernet
    connection.interface-name:  enp7s0
    ...
    ```
:::
::: itemizedlist
**其它资源**
-   有关 `nmstatectl`{.literal} 的详情，请查看 `nmstatectl(8)`{.literal}
    man page。
-   如需了解更多配置示例，请参阅
    `/usr/share/doc/nmstate/examples/`{.literal} 目录。
:::
:::
::: section
::: titlepage
# []{#configuring-an-ethernet-connection_configuring-and-managing-networking.html#configuring-a-dynamic-ethernet-connection-using-rhel-system-roles_configuring-an-ethernet-connection}使用 RHEL 系统角色配置动态以太网连接 {.title}
:::
此流程描述了如何使用 RHEL 系统角色通过运行 Ansible playbook 为
`enp7s0`{.literal} 接口远程添加动态以太网连接。在这个设置中，网络连接从
DHCP 服务器请求这个连接的 IP 设置。在 Ansible 控制节点上运行此步骤。
::: itemizedlist
**先决条件**
-   网络中有 DHCP 服务器。
-   在控制节点上安装 `ansible`{.literal} 和
    `rhel-system-roles`{.literal} 软件包。
-   如果您运行 playbook 时使用了与 `root`{.literal} 不同的远程用户,
    则此用户在受管节点上需要具有适当的 `sudo`{.literal} 权限。
-   主机使用 NetworkManager 配置网络。
:::
::: orderedlist
**流程**
1.  如果 playbook 要针对其执行的主机还没有在清单中，请将此主机的 IP
    或名称添加到 `/etc/ansible/hosts`{.literal} Ansible 清单文件中：
    ``` literallayout
    node.example.com
    ```
2.  使用以下内容创建 `~/ethernet-dynamic-IP.yml`{.literal} playbook：
    ``` literallayout
    ---
    - name: Configure an Ethernet connection with dynamic IP
      hosts: node.example.com
      become: true
      tasks:
      - include_role:
          name: linux-system-roles.network
        vars:
          network_connections:
            - name: enp7s0
    	  interface_name: enp7s0
              type: ethernet
              autoconnect: yes
              ip:
                dhcp4: yes
                auto6: yes
              state: up
    ```
3.  运行 playbook：
    ::: itemizedlist
    -   以 `root`{.literal} 用户身份连接到受管主机，输入：
        ``` literallayout
        # ansible-playbook -u root ~/ethernet-dynamic-IP.yml
        ```
    -   以用户身份连接到受管主机，请输入：
        ``` literallayout
        # ansible-playbook -u user_name --ask-become-pass ~/ethernet-dynamic-IP.yml
        ```