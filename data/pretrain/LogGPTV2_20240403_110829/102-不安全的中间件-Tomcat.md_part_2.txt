get命令：http:// [ip]:[port]/manager/jmxproxy/?get=
set命令：http:// [ip]:[port]/manager/jmxproxy/?set=
invoke命令：http:// [ip]:[port]/manager/jmxproxy/?invok
访问上⾯的地址，我们就可以看到不同的信息，通过向不
同的参数传递特定的参数，也可以获取到⼀些敏感信息。
不加参数时查询到的是所有的 MBeans 的内容，加参数
之后就可以查看到具体的 MBeans 的内容。
例如：
http://[ip]:[port]/manager/jmxproxy/?qry=*%3atype=User
该查询可以看到设置的 tomcat-user.xml 中配置的账号
密码，甚⾄还可以通过 set 命令修改账号密码，来设置
⼀个后⻔账号。
除此之外，Tomcat 下还可以开启 JMX Service，默认情
况下 Tomcat 是不开启 jmx service 的，开启 JMX
Service 需要对 / bin ⽬录下的
Catalina.bat/Catalina.sh ⽂件进⾏更改。
Catalina.bat:
set CATALINA_OPTS=-Dcom.sun.management.jmxremote -Dcom
Catalina.sh:
CATALINA_OPTS="$CATALINA_OPTS-Dcom.sun.management.jmxr
这⾥没有对 jmx 连接设置身份认证，从安全⻆度来说，
需要设置身份认证，设置认证时，需要在配置中添加:
-Dcom.sun.management.jmxremote.password.file=path/jmxr
-Dcom.sun.management.jmxremote.access.file=path/jmxrem
在 jdk 的安装⽬录 / jre/lib/management ⽬录下，有相
应的 jmxremote.access ⽂件，将⽂件最后两⾏显示
【monitorRole 和 controlRole】的注释取消，其中
monitorRole 为只拥有只读权限的⻆⾊，controlRole 有
更⾼权限：读写等。默认情况下该⽬录下不存在
jmxremote.password ⽂件，我们可以将
jmxremote.password.template ⽂件改名，或者复制出
来⼀份再改名即可，然后修改 jmxremote.password ⽂
件。同样将⽂件最后两⾏显示【monitorRole 和
controlRole】的注释取消。然后保存。
配置后之后，我们就可以启动 Tomcat，启动之后先查看
⼀下我们配置的 jmx 是否正常开启。
通过 java ⾃带的 jconsole 来连接我们配置 jmx 端⼝。
连接之后，我们可以通过 jconsole 的⻚⾯看到许多的敏
感信息，这些与前⾯的 manager-jmx 类似。
同样的可以通过查看 MBean 看到 tomcat manager 配
置的账号密码，除此之外，还能添加账号，从⽽添加后⻔
账号。
在 Catalina->Valve->localhost->AccessLogValve
中，可以实现对⽇志备份的操作，通过前⾯获取到的
Tomcat 物理路径，根据 webapps ⽬录以及从 MBean
中获取到的已安装的应⽤，可以构造出 web 路径。我们
在进⾏⽇志备份时，需要备份到不存在的⽂件中，如果⽂
件已存在，该功能不会对已存在的⽂件进⾏覆盖或追加。
AJP 协议
由于 tomcat 的 html 和图⽚解析功能相对其他服务器如
apche 等较弱，所以，⼀般都是集成起来使⽤，只有 jsp
和 servlet 服务交由 tomcat 处理，⽽ tomcat 和其他服
务器的集成，就是通过 ajp 协议来完成的。Web 客户访
问 Tomcat 服务器上 JSP 组件的两种⽅式如图所示。
在 tomcat 中有两个连接器，⼀个是监听在 8080 端⼝，
负责建⽴ web 的 HTTP 连接，⼀个是监听在 8009 端
⼝，负责 Tomcat 与其他 HTTP 服务器进⾏集成。配置
⽂件 server.xml 中，关于 AJP 的配置项默认是关闭的，
若需要开启，将注释符去掉，重新启动 Tomcat 即可。
相对⽽⾔，AJP 协议的攻击利⽤⽅式较少，⽬前爆出的
可直接利⽤的就是 CVE-2020-1938（AJP ⽂件包含漏
洞）。
Debug 模式
Tomcat 默认情况下，debug 模式是不开启的，如果需
要开启 debug 时，要对 / bin ⽬录下的
Catalina.bat/Catalina.sh ⽂件进⾏修改： Windows 下
在 Catalina.bat 中添加:
SET CATALINA_OPTS=-server -Xdebug -Xnoagent -Djava.com
Linux 下在 Catalina.sh 中对 jpda 相关的内容进⾏修改
修改完成后，在 startup.sh ⽂件中添加 jpda，如下所
示：
全部修改完成后，我们就可以启动 tomcat 了，此时
debug 模式就正常启动了。我们通过 nmap 对 tomcat
debug 端⼝进⾏探测，发现该端⼝ service 信息为
jdwp。
实际上 Tomcat 的 debug 模式也是调⽤的 jvm 的调试接
⼝，正如配置⽂件中显示的那样，最终是通过调⽤ jdwp
来实现。
JPDA(Java Platform Debugger Architecture,Java 平台
调试架构) , 由 Java 虚拟机后端和调试平台前端组成,
JPDA 为 Java 平台上的调试器定义了⼀个标准的体系结
构。该体系结构包括 3 个主要组成部分：JVM TI（Java
虚拟机⼯具接⼝）、JDI（Java 调试连线协议）和
JDWP（Java 调试接⼝）。
在⼀些低版本的 jdk 中会存在漏洞，可以通过 jdwp 来执
⾏系统命令。所以对 Tomcat 的安全配置时，要关闭
debug 模式。
历史漏洞
CVE-2016-8735
漏洞说明:
该漏洞与之前 Oracle 发布的
mxRemoteLifecycleListener 反序列化漏洞（CVE-
2016-3427）相关，是由于使⽤了
JmxRemoteLifecycleListener 的监听功能所导致。⽽在
Oracle 官⽅发布修复后，Tomcat 未能及时修复更新⽽
导致的远程代码执⾏。
该漏洞所造成的最根本原因是 Tomcat 在配置 JMX 做监
控时使⽤了 JmxRemoteLifecycleListener 的⽅法。
影响版本：
漏洞利⽤：
这⾥我们使⽤ ysoserial 来进⾏漏洞攻击利⽤
CVE-2017-12615 & CVE-2017-126
16
漏洞说明：
该漏洞称之为 Tomcat PUT ⽅法任意写⽂件漏洞，类似
IIS 的 PUT 上传漏洞。该漏洞可以利⽤ HTTP 的 PUT ⽅
法直接上传 webshell 到⽬标服务器，从⽽获取权限。该
漏洞是⾼危漏洞，在 Tomcat 的 web.xml 默认情况下不
存在该漏洞，但是⼀但开发者或者运维⼈员⼿动讲
web.xml 中的 readonly 设置为 false，可以通过 PUT /
DELETE 进⾏⽂件操控。
CVE-2017-12616 是对 CVE-2017-12615 的绕过，影响
7.x、8.x、9.x 版本。
影响范围：
7.0.0 – 7.0.79
漏洞利⽤：
构造 PUT 上传数据包，上传时内容可以写 jsp ⼀句话⽊
⻢，上传返回 201 时，表示上传成功，访问该⽂件即
可。
上传绕过⽅法：
Windows：
1、利⽤ / shell.jsp::$DATA 的⽅式绕过
2、/shell.jsp%20，空格绕过 3、/shell.jsp/ ，
Tomcat 在处理⽂件时会删除最后的 /
Linux：
/shell.jsp/ ， Tomcat 在处理⽂件时会删除最后
的 /
CVE-2019-0232
漏洞说明：
该漏洞是由于 Tomcat CGI 将命令⾏参数传递给
Windows 程序的⽅式存在错误，使得 CGIServlet 被命
令注⼊影响。
该漏洞的利⽤条件较为苛刻，需同时满⾜下列条件：
1. 系统为 Windows
2. 启⽤了 CGI Servlet（默认为关闭）
3. 启⽤了 enableCmdLineArguments（Tomcat
9.0.* 及官⽅未来发布版本默认为关闭）
影响范围：
9.0.0.M1-9.0.17
8.5.0-8.5.39
7.0.0-7.0.93
漏洞利⽤：
CVE-2020-1938
漏洞描述：
漏洞是 Tomcat AJP 协议存在缺陷⽽导致，攻击者利⽤
漏洞可以构造特定参数，读取服务器 webapp/ROOT 下
的任意⽂件。若⽬标服务器同时存在⽂件上传功能，攻击
者可进⼀步通过⽂件包含实现远程代码执⾏。
影响范围：
Apache Tomcat 6
Apache Tomcat 7 < 7.0.100
Apache Tomcat 8 < 8.5.51
Apache Tomcat 9 < 9.0.31
漏洞利⽤：
使⽤已公开的漏洞利⽤⼯具来进⾏漏洞利⽤。
全⽂完
本⽂由 简悦 SimpRead 优化，⽤以提升阅读体验
使⽤了 全新的简悦词法分析引擎 beta，点击查看详细说明