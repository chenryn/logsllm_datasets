组件的形式作为一个庞大系统的一部分，处理一些特定的工作。下面
列举一些生活中的例子，手机、摄像头、空调、汽车以及PC等常见
的电子产品都含有嵌入式系统，可谓无处不在。嵌入式系统的中流破
柱要数微控制器和DSP了，前者负责逻辑控制工作，后者负责数据的
处理（主要是浮点数的处理）。这里可以不夸张地说，离开了微控制
器，一切电子设备都将无法正常工作。
当然，嵌入式系统存在的范围不只是在我们看得到的地方，在许
多我们看不到的地方，比如卫星、导弹、月球车等航天军事方面，也
有大量的应用，可以说，嵌入式系统撑起了整个电子世界。既然嵌入
式系统如此重要，那么它的安全问题势必更为重要。虽然事实如此
可是嵌入式系统上的安全直到近儿年才开始慢慢被行业所关注，而且
安全问题日益凸显，从这里可以看出，loT安全将会成为其中的第一
个爆发点。
---
## Page 983
CTF特训营：技术详解、解题方法与
26.3嵌入式系统的基本概念983/1144
26.3嵌入式系统的基本概念
嵌入式系统常被用于底层信号和逻辑的处理，要理解其原理，需
要大量的硬件和逻辑电路的知识，包括模拟电路和数字电路，甚至还
包括控制理论、电力电子、无线通信的相关知识。其背后有庞大的知
识体系，建议有兴趣的读者可以翻看电子相关专业的培养方案，读一
读相关教材，慢慢就会理解整个体系了。
本书不希望为读者增加太多前置知识方面的负担，毕竟本书只是
一本CTF比赛用书，知识够用即可，因此接下来讲解一些基本的概念
知道这些概念，在今后的学习中若有需求，可以自己去寻找相应的资
料。这些概念也足可以帮助大家理解本章所要讲述的内容
模拟信号：又称原始信号，即域上连续的信号，可以将其简单理
解为实际电压的变化信号，交流电就是最常见的模拟信号。其特点是
模拟信号是物理世界的一个变化的电信号，无法被计算机系统储存以
及理解，只能使用模拟器件进行运算和处理。
数字信号：又称采样信号，即通过一定间隔对模拟信号在某些特
定时刻的值进行测量，并用二进制表示，会得到一串数列，而该数列
---
## Page 984
CTF特训营：技术详解、解题方法与
26.3嵌入式系统的基本概念984/1144
可以在一定程度上反映原始信号的特点，但它是离散的。两个时刻之
间的桌个点的模拟信号值我们并不知道，也就是说，去失了部分模拟
信号的信息，但使得模拟信号的特征可以在一定程度上被计算机存储
以及处理了。
单片机：单片微型计算机的简称，专业名称为微控制器，本质是
在单硅片上集成内核、SRAM，ROM或FLASH，以及一些外围逻辑控
制器（例如UART、SPI、GPIO等总线设备）所组成的一个拥有较完
整处理能力的芯片。而此类芯片，我们一般不称之为CPU，而称其为
MCU，即MicrocontrollerUnit。由手单片机厂商较多，内核指令集各
不相同，市场占有率也大有区别，当今最有名的要数lntel8051单片
机了，被各大高校的单片机教材所采用。另外，常见的还有Atmel公
司推出的AVR系列单片机，ARM公司推出的CortexM系列单片机
Microchip公司的PIC单片机。
固件：所谓固件（firmware），当然是固化的，无法修改，一般
是指单片机中固化的程序，一般只读不写，主要包含了单片机运行的
程序代码和运行所需的数据。当然，固件可以存储在单片机内部的片
上存储区，也可以存储在片外单独的存储芯片上，与硬盘上的数据的
---
## Page 985
CTF特训营：技术详解、解题方法与
26.3嵌入式系统的基本概念985/1144
主要区别是，固件只读不写，出厂即固化完毕，除了特殊需要，正常
使用过程中都不会对固件进行修改
架构/指令集：这个想必大家都不会陌生，类比x86指令集，大家
应该很容易理解，也可称为指令系统。不过MCU市场巨大，多家公
其中，8051是复杂指令集，而剩下的均为精简指令集。也许这时候
你会问为什么没有提到MIPS，那是因为MIPS最初与x86一样，是为
CPU设计的指令集，至今没有出现过MIPS架构的MCU。
DSP：数字信号处理/数字信号处理器。由于数字信号处理技术
的不断发展，嵌入式设备经常要处理一些常用的如积分变换、数字滤
波等需要大量浮点运算的工作，而DSP就是一种从硬件来对此类算法
进行加速，浮点处理能力更强的芯片。这类芯片往往会弱化外设，主
要承担计算工作，因此接口控制功能较弱。随看ARM在CPU中集成
了DSP单元，现在单独使用DSP芯片的需求已逐渐减少。
嵌入式处理器：现在又被称为应用处理器（Application
Processor），个人认为叫应用处理器更贴切一些。最开始是因为在嵌
入式系统中有类似于PC的应用需求，比如液晶屏显示、触摸、音频
---
## Page 986
CTF特训营：技术详解、解题方法与
26.3嵌入式系统的基本概念
986/1144
等没有经过调制的功能，需要大量的计算资源，而当时MCU的计算
能力都被用于处理接口通信数据，而处理数据的能力已经所剩无几，
所以才有了这种应用处理器，用于应用层的计算工作。最有名的嵌入
式处理器是ARM的CortexA系列处理器，以及MIPS架构的处理器。
Intel的CoreM系列处理器也可以看作是一类应用处理器。
基带：原指基本频带，即信源发出的没有经过调制的原始电信号
（可以是数字信号，也可以是模拟信号）的固有频宽。随着数字调制
技术的发展，现在通信行业所指的基带是一类能够进行数字调制并产
生原始数字信号的处理模块、芯片或软件。
Datasheet：又称为数据表，厂商在开发出芯片之后，会提供此
女档，女档中会详细描述芯片的性能、工作电气特性。如果是
MCU，还会给出内部的框图、寄存器文档、指令集、内存管理方式
等详细信息。学会寻找并阅读数据表是一个电子工程师应该真备的最
基本能力，也是必须掌握的技能，甚至是解答loT类题目的关键所在
所以这里强烈建议读者养成阅读数据表的好习惯。
FPGA：现场可编程门阵列，简单地说，就是逻辑可编程的芯片
注意，逻辑电路的连接是可编程的。什么意思呢，大家可能会知道一
---
## Page 987
CTF特训营：技术详解、解题方法与
26.3嵌入式系统的基本概念
987/1144
些通过软件来实现向CPU编程的操作方法。但总的来说，操作需要经
过CPU已经设计好的状态机来完成，也就是需要通过取指、译码、执
行、访存、回写这5个步骤。而什么是硬件可编程呢？举个简单的例
子，比如，我想计算1+1，如果通过软件实现，那么CPU需要通过前
面所说的5个步骤才能得到结果，每个步骤都会花费至少微秒级的时
间。如果用逻辑实现一个加法器，然后在输入端加上对应的电平，那
么输出端会在纳秒级时间内就得到一个结果，这就是为什么硬件加速
会比软件快很多的原因。软件具有串行性，而硬件逻辑具有并行性
只要堆砌更多的单元，就总能得到更大的计算能力，这也是为什么
CPU不断堆砌核心的原因。前面说了这么多，是为了让大家直观地体
在方案验证的时候，不可能直接进行流片生产，因为这样成本太高，
一般是先在FPGA上实现要完成的电路并进行测试，测试完毕后才会
进行实际生产。也就是说，自前大家能买到的CPU都是在FPGA上进
行过方案验证的。虽然FPGA可以实现一样的功能，但是由于其灵活
性，成本必然比ASIC要高，所以更多的时候只是作为方案验证使
用。当然，对于个别需要逻辑可修改的场合，比如SSD的主控器，还
是会直接使用FPGA的
---
## Page 988
CTF特训营：技术详解、解题方法与
26.3嵌入式系统的基本概念
988/1144
频谱：频率谱密度的简称，是频率的分布曲线。根据傅立叶分解
原理，复杂的信号总可以分解为有限或无穷多个正弦信号的叠加，通
过分析这些正弦信号的成分，就可以了解原信号的特征，是一种重要
的研究手段和分析工具。
无线传感器网络（WSN）：是一种分布式传感网络，是由传感
器节点通过无线电组织形成的多跳自组织网络。WSN中的传感器通
过无线方式通信，因此网络设置比较灵活，设备位置可以随时更改
还可以与互联网进行有线或无线方式的连接。
---
## Page 989
CTF特训营：技术详解、解题方法与
26.4CTF中常见的loT题型归类
989/1144
26.4CTF中常见的IoT题型归类
前面说了那么多，我相信有些读者可能摸不着头脑，没关系，可
以继续往后看，结合后面要讲述的知识，大家可以更快掌握本书想要
表达的内容。在本节中，我们将CTF中可能涉及的loT类赛题进行归
类，并各个击破，帮助大家轻松攻克此类赛题。
逆向工程：此类赛题最常见，也是难度比较高的。题目往往涉及
一些单片机或者嵌入式处理器的固件，还有极少的题目可能会将基带
固件抑或是FPGA的逻辑出作逆向，由于嵌入式处理器的架构繁多，
同一架构下不同型号的产品还会存在细微差别。作为一个初学者，很
难在短时间内熟练掌握那么多不同的汇编指令系统，所以此类题比较
难，也是最重要的一类。
漏洞利用（PWN)：由于Linux、Android、WindowsCE在嵌入式
环境中的大量使用，原来在x86Windows/Linux上的漏洞利用方法也
可以方便地迁移到嵌入式环境中，只是由于架构不同，细节上的处理
会略有不同而已。虽然嵌入式系统的架构层出不穷，但大多数处理能
力较弱，并不能很容易地支持TCP/IP，因此这部分可以出成PWN题
---
## Page 990
CTF特训营：技术详解、解题方法与。
26.4CTF中常见的loT题型归类
990/1144
目的限制就会比较多。从目前的情况看来，这类题目大多都集中在网
络功能比较成熟的ARM-Linux和MIPS-Linux这两个平台上，不确定以
后会出哪些新类型，但由于各种限制，CTF题自的发挥空间还是较小
所以此类题目的解题方法相对比较明确，所需要做的就是掌握一般
PWN类型题目的技巧。
取证（forensic）：比较常见的题目是提供一个嵌入式系统的固
件，让你分析并提取其中的有用信息，例如管理员密码和后门账户等。
这类题目的解题方法相对比较固定，大部分情况下只要了解固件的结
构即可。
协议分析（MISC）：此类题目一般需要分析一些无线传感器网络
的数据包格式，比如胎压传感器的数据包格式。大致解题思路是通过
研推测数据包的每个学节的大致含义，从而推断出大致的协议。这
类题自往往还会让你去伪造某个条件的数据包，或者提供一系列数据
包让你去找出其中伪造的数据包。当然，这类题目的难点主要在于某
些校验位可能使用了CRC或另外的特定算法，因此并不容易伪造。
无线信号分析：这类题目的解题思路是最明显的，但要求选手有
无线通信相关领域的专业知识。题目一般会提供一段无线通信的原始
---
## Page 991
CTF特训营：技术详解、解题方法与
26.4CTF中常见的loT题型归类
991/1144
波形，让选手分析出这段信号所传输的内容。考过的类型有简单的
ASK、FSK调制的无线信号解调，抑或复杂的4G通信的原始信号。显
然，此类题自既可以比较容易，也可以专业性非常强，如果出现专业
性很强的题目，就需要选手具有熟练的专业知识。因此，这类题目也
可以是最难的，是对基础知识的掌握程度要求最高的一类题目。
---
## Page 992
CTF特训营：技术详解、解题方法与
第27章loT固件逆向工程
992/1144
第27章loT固件逆向工程
在本章中，我们开始介绍目前CTF中关于loT的解题技巧，即loT
固件的逆同工程相关的技巧。此类题自往往会提供一个oT设备的固
件让选手分析，完成题自所要求的任务，而对于所给固件，在很多情
（即ELF程序）一样可以直接被IDA自动识别并分析，而是一个对于
IDA看来完全未知的binary文件，此时iDA无法自动分析，需要我们手
动让IDA识别代码和数据，这当中包括非常多的技巧。
另外，loT设备所使用的架构并非传统安全所熟悉的x86或x86-64
汇编，这当中又包含了许多没有听说过的架构，对于这类CPU架构的
汇编以及固件的组织形式，参赛选手往往都是比较陌生的，因此这也
是一大难点之一。
所以，针对loT固件的逆向工程，我们需要一些特别的技巧或者
工具，在接下来的内容中，笔者将详细展开介绍
---
## Page 993
CTF特训营：技术详解、解题方法与
27.1常见loT架构介绍993/1144
27.1常见loT架构介绍
自前，在市场上能够见到的单片机架构至少有几十种，每种架构
的不同产品又有不同的分支，直对于不同子型号的产品，指令集还会
存在细微的差异，对于架构指令集的介绍，不是一本书可以囊括的
这里仅列举出一些比赛中最容易出现的架构。
1.ARM
ARM最常见不过，几乎已经深深地融入我们的生活中，90%的手
机处理器都使用了该架构，是当之无愧的老大哥。最有代表性的就是
高通骁龙处理器了，真已成为高性能手机必备的标识。ARM家族子
架构众多，在ARMv4t架构之前，其主要应用于嵌人式环境、汽车电
子等领域。而从ARMv7i开始，作为ARM第7代架构，根据不同的应用
场景，衍生出了CortexA、CortexM和CortexR三种子架构，下面分
别对这三种子架构进行介绍。
CortexA作为高性能旗舰产品的代表，A即Application，也就是前
面列举的概念里提到的应用处理器，儿乎所有的手机、PDA、平板
路由器都使用了这种架构，其特点是处理能力强，功耗较高，适用于
---
## Page 994
CTF特训营：技术详解、解题方法与
27.1常见loT架构介绍994/1144
有大量逻辑数据需要处理的场合。其支持的指令集包括ARM和
Thumb，以及现在最新的Thumb-2。
CortexM，M是McU的意思，也就是说，该架构多用于微控制器
其特点是高性能低功耗，身为32位处理器，其提供了比自前主流的8
位、16位MCU更好的性能，同时还很好地兼顾了功耗，使得在每兆
赫兹功耗相当甚至更低的情况下，真有高于现有其他MCU的性能
同时该系列处理器使用的指令集为最新的Thumb-2，有极高的代码密
度，很好地兼顾了各个方面，如今，该架构的MCU已经成了热门之
选。该系列处理器也经过了多次更新换代，最早的CortexMo发布之
时，其功能就令人惊艳，其主频可达40MHz。而紧随其后的Cortex
M3成为CortexM系列中使用最为广泛的架构72MB的主频，相对低廉
的成本，成就了这款性价比最高的架构。后来发布的还有Cortex
M4（F），主频可达168MB，特点是集成了DSP核，使得MCU也可以
完成DSP的部分功能，并且集成了FPU，浮点处理能力大大增强，甚
至在某些程度上越来越向CortexA的性能靠拢。而在2015年发布的
CortexM7架构，主频甚至达到了惊人的400MHz，主要面向物联网和
穿戴领域，其性能已超越了早期的CortexA架构，它甚至可以承担图
像处理、高级音频处理、车联网应用的应用级处理工作，同时文具有
---
## Page 995
CTF特训营：技术详解、解题方法与
27.1常见loT架构介绍995/1144
控制器的控制功能，强大到令人生畏。该系列的代表产品有ST公司
的STM32系列，以及TI公司的Stellaris系列。
CortexR，其中R代表RTOS，即专门为实时操作系统准备。它
是所有衍生产品中体积最小的ARM处理器，这一点也最不为人所
知。Cortex-R处理器主要针对高性能实时应用，例如，硬盘控制器
（或固态驱动控制器）、企业中的网络设备和打印机、消费电子设备
例如蓝光播放器和媒体播放器），以及汽车应用（例如安全气囊
制动系统和发动机管理）。Cortex-R系列在桌些方面与高端微控制器
（MCU）类似，但是，针对的是比通常使用标准MCU的系统还要大型
的系统。例如，Cortex-R4非常适合汽车应用。Cortex-R4主频可以高
达60OMHz（真有2.45DMIPS/MHz），配有8级流水线，具有双发送
预取和分支预测的功能，以及低延迟中断系统，可以中断多周期操作
而快速进入中断服务程序。Cortex-R4还可以与另外一个Cortex-R4构
成双内核配置，一同组成一个带有失效检测逻辑的穴余锁步（lock-
step）配置，因而非常适合安全攸关的系统。
Cortex-R5能够很好地服务于网络和数据存储应用，它扩展了
Cortex-R4的功能集，从而提高了效率和可靠性，增强了可靠实时系
---
## Page 996
CTF特训营：技术详解、解题方法与
27.1常见loT架构介绍
996/1144
统中的错误管理。它提供低延迟外设端口（LLPP），可实现快速外设
的读取和写入（而不必对整个端口进行“读取一修改-写入”操作）。
序。这种双核实现能够构建出非常强大和灵活的实时响应系统
Cortex-R7极大地扩展了R系列内核的性能范围，时钟速度可超过
1GHz，性能达到3.77DMIPS/MHz。Cortex-R7上的11级流水线增强了
错误管理功能，改进了分支预测功能。多核配置也有多种不同的选项：
锁步、对称多重处理和不对称多重处理。Cortex-R7还配有一个完全
集成的通用中断控制器（GIC）来支持复杂的优先级中断处理。不过
直得注意的是，虽然Cortex-R7真有高性能，但是它并不适合于运行
那些特性丰富的操作系统（例如Linux和Android）的应用，Cortex-A
系列才更适合这类应用。
至于近两年新出的ARMv8也称为Aarch64架构，即64位ARM架
构，其衍生架构与ARMV7类似，只不过命名方式不同而已，比如
CortexA53/A57就是最早上市的ARMv8架构，其指令集也与ARMv7存
在较大差异，当然，也不乏追捧者让Aarch64很快地进入Android题目
---
## Page 997
CTF特训营：技术详解、解题方法与
27.1常见loT架构介绍997/1144
中。
对于ARM架构的比赛题，大多都集中在Android类型的题目中
该部分在本书移动安全部分已经有了相当详尽的介绍。有时也会出现
ARM-Linux（比如树莓派），vxworks（比如基带系统）。有的甚至不
带操作系统，比如CortexM系列MCU的裸机程序。后面的几种情况
就是本篇要讨论的loT类赛题了。
2.MIPS
MlPS是MicroprocessorwithoutInterlockedPipelineStage的缩
写。顾名思义，该处理器的设计思路是无内部互锁的流水线设计，其
体系结构本身就是为了获得较高的流水线性能而设计的。通过细化流
水，将一条指令的执行过程进行更细致的划分，使得一次同时在执行
的指令更多，从而提高并行度，提高CPU使用率。而lntel在设计x86
的时候却采用了另外的思路，虽然x86架构也有流水线设计，但似乎
并没有在细化流水上下功夫。CISC似乎都是如此，在性能的提高
上，选择了另外一条路，即使用多个核心叠加，增加同时运行的线程。
而ARM也紧随其后加入了这个行列。到如今，也确确实实是多核心
的策略获得了完胜。但从设计理念来看，虽然是MIPS更加先进，然
---
## Page 998
CTF特训营：技术详解、解题方法与
27.1常见loT架构介绍
998/1144
而受制于工艺和应用场景，优势没有得到很好地发挥，再加上精简指
令集对于复杂计算有着先天的不足，处理能力一般，对于现在大量的
多应用需求场景，细化流水带来的提升并不明显，因此难免没落。
当然，MIPS也有一个比较显著的优势，由于采用了细化流水的
策略，因此应对单线程、计算简单且重复的应用，有看先天的优势
例如，其在网络数据包处理和转发上的能力就明显较强。因此在许多
网络设备、路由器的CPU中被大量采用，当然，如今MIPS已经被拆
分出售，一代知名架构就此陨落。
在如今的CTF比赛中，仍然会涉及MIPS，题自多为PWN和逆
向。然而这里还需要提一点的就是，在MIPS体系结构中，硬件并没
有支持NX。MIPS架构下的ELF程序，NX保护开或者不开，都是一样
的，从任何位置都可以执行代码。
3.8051
8051是由lntel在1981年设计制造的8位MCU，是现存的为数不多
的复杂指令集MCU，由于其架构简单，直linte将其授权给其他很多公
司，因此在8位单片机领域，8051系列及其衍生产品占据了大量的市
场份额，有许多公司甚至以其为基础开发了功能更多、更强大的产品。
---
## Page 999
CTF特训营：技术详解、解题方法与
27.1常见loT架构介绍
999/1144
由于其较强的稳定性，在恶劣的工控网络中也被大量使用，是使用最
为广泛的MCU之一。
目前8051在CTF比赛中还未出现，但由于其广泛的应用，笔者认
为在今后的比赛中，也许会大量出现
4.AVR