title:Dark Clouds on the Horizon: Using Cloud Storage as Attack Vector and
Online Slack Space
author:Martin Mulazzani and
Sebastian Schrittwieser and
Manuel Leithner and
Markus Huber and
Edgar R. Weippl
Dark Clouds on the Horizon:
Using Cloud Storage as Attack Vector and Online Slack Space
Martin Mulazzani
SBA Research
Sebastian Schrittwieser
SBA Research
Manuel Leithner
SBA Research
Markus Huber
SBA Research
Edgar Weippl
SBA Research
Abstract
During the past few years, a vast number of online ﬁle
storage services have been introduced. While several of
these services provide basic functionality such as upload-
ing and retrieving ﬁles by a speciﬁc user, more advanced
services offer features such as shared folders, real-time
collaboration, minimization of data transfers or unlim-
ited storage space. Within this paper we give an overview
of existing ﬁle storage services and examine Dropbox,
an advanced ﬁle storage solution, in depth. We analyze
the Dropbox client software as well as its transmission
protocol, show weaknesses and outline possible attack
vectors against users. Based on our results we show that
Dropbox is used to store copyright-protected ﬁles from
a popular ﬁlesharing network. Furthermore Dropbox can
be exploited to hide ﬁles in the cloud with unlimited stor-
age capacity. We deﬁne this as online slack space. We
conclude by discussing security improvements for mod-
ern online storage services in general, and Dropbox in
particular. To prevent our attacks cloud storage opera-
tors should employ data possession proofs on clients, a
technique which has been recently discussed only in the
context of assessing trust in cloud storage operators.
1
Introduction
Hosting ﬁles on the Internet to make them retrievable
from all over the world was one of the goals when the
Internet was designed. Many new services have been
introduced in recent years to host various type of ﬁles
on centralized servers or distributed on client machines.
Most of today’s online storage services follow a very
simple design and offer very basic features to their users.
From the technical point of view, most of these services
are based on existing protocols such as the well known
FTP [28], proprietary protocols or WebDAV [22], an ex-
tension to the HTTP protocol.
With the advent of cloud computing and the shared
usage of resources, these centralized storage services
have gained momentum in their usage, and the number
of users has increased heavily. In the special case of on-
line cloud storage the shared resource can be disc space
on the provider’s side, as well as network bandwidth
on both the client’s and the provider’s side. An online
storage operator can safely assume that, besides private
ﬁles as well as encrypted ﬁles that are speciﬁc and
different for every user, a lot of ﬁles such as setup ﬁles
or common media data are stored and used by more than
one user. The operator can thus avoid storing multiple
physical copies of the same ﬁle (apart from redundancy
and backups, of course). To the best of our knowledge,
Dropbox is the biggest online storage service so far
that implements such methods for avoiding unnecessary
trafﬁc and storage, with millions of users and billions
of ﬁles [24]. From a security perspective, however, the
shared usage of the user’s data raises new challenges.
The clear separation of user data cannot be maintained
to the same extent as with classic ﬁle hosting, and
other methods have to be implemented to ensure that
within the pool of shared data only authorized access
is possible. We consider this to be the most important
challenge for efﬁcient and secure “cloud-based” storage
services. However, not much work has been previously
done in this area to prevent unauthorized data access or
information leakage.
We focus our work on Dropbox because it is the
biggest cloud storage provider that implements shared
ﬁle storage on a large scale. New services will offer sim-
ilar features with cost and time savings on both the client
and the operators side, which means that our ﬁndings are
of importance for all upcoming cloud storage services as
well. Our proposed measurements to prevent unautho-
rized data access and information leakage, exemplarily
demonstrated with Dropbox, are not speciﬁc to Dropbox
and should be used for other online storage services as
well. We believe that the number of cloud-based storage
operators will increase heavily in the near future.
Our contribution in this paper is to:
• Document the functionality of an advanced cloud
storage service with server-side data deduplication
such as Dropbox.
• Show under what circumstances unauthorized ac-
cess to ﬁles stored within Dropbox is possible.
• Assess if Dropbox is used to store copyright-
protected material.
• Deﬁne online slack space and the unique problems
it creates for the process of a forensic examination.
• Explain countermeasures, both on the client and the
server side, to mitigate the resulting risks from our
attacks for user data.
The remainder of this paper is organized as follows.
Related work and the technical details of Dropbox are
presented in Section 2. In Section 3 we introduce an at-
tack on ﬁles stored at Dropbox, leading to information
leakage and unauthorized ﬁle access. Section 4 discusses
how Dropbox can be exploited by an adversary in var-
ious other ways while Section 5 evaluates the feasibil-
ity of these attacks. We conclude by proposing various
techniques to reduce the attack surface for online storage
providers in Section 6.
2 Background
This section describes the technical details and imple-
mented security controls of Dropbox, a popular cloud
storage service. Most of the functionality is attributed
to the new cloud-paradigm, and not speciﬁc to Dropbox.
In this paper we use the notion of cloud computing as de-
ﬁned in [9], meaning applications that are accessed over
the Internet with the hardware running in a data center
not necessarily under the control of the user:
“Cloud Computing refers to both the applica-
tions delivered as services over the Internet and
the hardware and systems software in the data
centers that provide those services.” ... “The
datacenter hardware and software is what we
will call a Cloud.”
In the following we describe Dropbox and related litera-
ture on cloud storage.
2.1 Dropbox
Since its initial release in September 2008 Dropbox
has become one of the most popular cloud storage
provider on the Internet.
It has 10 million users and
stores more then 100 billion ﬁles as of May 2011 [2]
and saves 1 million ﬁles every 5 minutes [3]. Dropbox
is mainly an online storage service that can be used
to create online backups of ﬁles, and one has access
to ﬁles from any computer or similar device that is
connected to the Internet. A desktop client software
available for different operating systems keeps all the
data in a speciﬁed directory in sync with the servers, and
synchronizes changes automatically among different
client computers by the same user. Subfolders can be
shared with other Dropbox users, and changes in shared
folders are synced and pushed to every Dropbox account
that has been given access to that shared folder. Large
parts of the Dropbox client are written in Python.
Internally, Dropbox does not use the concept of ﬁles,
but every ﬁle is split up into chunks of up to 4 megabytes
in size. When a user adds a ﬁle to his local Dropbox
folder, the Dropbox client application calculates the hash
values of all the chunks of the ﬁle using the SHA-256
algorithm [19]. The hash values are then sent to the
server and compared to the hashes already stored on
the Dropbox servers.
If a ﬁle does not exist in their
database, the client is requested to upload the chunks.
Otherwise the corresponding chunk is not sent to the
server because a copy is already stored. The existing ﬁle
on the server is instead linked to the Dropbox account.
This approach allows Dropbox to save trafﬁc and storage
costs, and users beneﬁt from a faster syncing process
if ﬁles are already stored on the Dropbox servers. The
software uses numerous techniques to further enhance
efﬁciency e.g., delta encoding, to only transfer those
parts of the ﬁles that have been modiﬁed since the
last synchronization with the server.
If by any chance
two distinct ﬁles should have the same hash value, the
user would be able to access other users content since
the ﬁle stored on the servers is simply linked to the
users Dropbox account. However, the probability of a
coincidental collision in SHA-256 is negligibly small.
The connections between the clients and the Drop-
box servers are secured with SSL. Uploaded data is
encrypted with AES-256 and stored on Amazons S3
storage service that is part of the Amazon Web Services
(AWS) [1]. The AES key is user independent and only
secures the data during storage at Amazon S3, while
transfer security relies on SSL. Our research on the
transmission protocol showed that data is directly sent
to Amazon EC2 servers. Therefore, encryption has to
be done by EC2 services. We do not know where the
keys are stored and if different keys are used for each
ﬁle chunk. However, the fact that encryption and storage
is done at the same place seems questionable to us, as
2
Amazon is most likely able to access decryption keys 1.
After uploading the chunks that were not yet in the
Dropbox storage system, Dropbox calculates the hash
values on their servers to validate the correct transmis-
sion of the ﬁle, and compares the values with the hash
values sent by the client. If the hash values do not match,
the upload process of the corresponding chunk is re-
peated. The drawback of this approach is that the server
can only calculate the hash values of actually uploaded
chunks; it is not able to validate the hash values of ﬁles
that were already on Dropbox and that were provided by
the client. Instead, it trusts the client software and links
the chunk on the server to the Dropbox account. There-
fore, spooﬁng the hash value of a chunk added to the
local Dropbox folder allows a malicious user to access
ﬁles of other Dropbox users, given that the SHA-256
hash values of the ﬁle’s chunks are known to the attacker.
Due to the recent buzz in cloud computing many com-
panies compete in the area of cloud storage. Major op-
erating system companies have introduced their services
with integration into their system, while small startups
can compete by offering cross-OS functionality or more
advanced security features. Table 1 compares a selec-
tion of popular ﬁle storage providers without any claim
for completeness. Note that “encrypted storage” means
that the ﬁle is encrypted locally before it is sent to the
cloud storage provider and shared storage means that it
is possible to share ﬁles and folders between users.
2.2 Related Work
Related work on secure cloud storage focuses mainly
on determining if the cloud storage operator is still in
possession of the client’s ﬁle, and if it has been modiﬁed.
An interesting survey on the security issues of cloud
computing in general can be found in [30]. A summary
of attacks and new security problems that arise with the
usage of cloud computing has been discussed in [17].
In a paper by Shacham et al. [11] it was demonstrated
that it is rather easy to map the internal infrastructure of
a cloud storage operator. Furthermore they introduced
co-location attacks where they have been able to place
a virtual machine under their control on the same
hardware as a target system, resulting in information
leakage and possible side-channel attacks on a virtual
machine.
1Independently found and conﬁrmed by Christopher Soghoian [5]
and Ben Adida [4]
3
Early publications on ﬁle retrievability [25, 14] check
if a ﬁle can be retrieved from an untrusted third party
without retransmitting the whole ﬁle. Various papers
propose more advanced protocols [11, 12, 20] to ensure
that an untrusted server has the original ﬁle without
retrieving the entire ﬁle, while maintaining an overall
overhead of O(1). Extensions have been published
that allow checking of dynamic data,
for example
Wang et al. [32] use a Merkle hash tree which allows
a third party auditor to audit for malicious providers
while allowing public veriﬁability as well as dynamic
data operations. The use of algebraic signatures was
proposed in [29], while a similar approach based on ho-
momorphic tokens has been proposed in [31]. Another
cryptographic tree structure is named “Cryptree” [23]
and is part of the Wuala online storage system.
It
allows strong authentication by using encryption and
can be used for P2P networks as well as untrusted
cloud storage. The HAIL system proposed in [13]
can be seen as an implementation of a service-oriented
version of RAID across multiple cloud storage operators.
Harnik et al. describe similar attacks in a recent pa-
per [24] on cloud storage services which use server-side
data deduplication. They recommend using encryption
to stop server-side data deduplication, and propose a ran-
domized threshold in environments where encryption is
undesirable. However, they do not employ client-side
data possession proofs to prevent hash manipulation at-
tacks, and have no practical evaluation for their attacks.
3 Unauthorized File Access
In this section we introduce three different attacks on
Dropbox that enable access to arbitrary ﬁles given
that the hash values of the ﬁle, respectively the ﬁle
chunks, are known. If an arbitrary cloud storage service
relies on the client for hash calculation in server-side
data deduplication implementations, these attacks are
applicable as well.
3.1 Hash Value Manipulation Attack
For the calculation of SHA-256 hash values, Drop-
box does not use the hashlib library which is part
of Python.
Instead it delegates the calculation to
OpenSSL [18] by including a wrapper library called
NCrypto [6]. The Dropbox clients for Linux and Mac
OS X dynamically link to libraries such as NCrypto
and do not verify their integrity before using them. We
modiﬁed the publicly available source code of NCrypto
so that it replaces the hash value that was calculated by
OpenSSL with our own value (see Figure 1), built it
Name
Dropbox
Box.net
Wuala
TeamDrive
SpiderOak
proprietary
Windows Live Skydrive WebDAV
WebDAV
u1storage
Apple iDisk
Ubuntu One
Protocol
proprietary
proprietary
Cryptree
many
Encrypted transmission
Encrypted storage
Shared storage
yes
yes
yes
yes
yes
yes
no
yes
no
yes (enterprise only)
yes
yes
yes
no
no
no
yes
yes
yes
yes
yes
yes
no
yes
Table 1: Online Storage Providers
and replaced the library that was shipped with Dropbox.
The Dropbox client does not detect this modiﬁcation
and transmits for any new ﬁle in the local Dropbox the
modiﬁed hash value to the server.
If the transmitted
hash value does not exist in the server’s database, the
server requests the ﬁle from the client and tries to verify
the hash value after the transmission. Because of our
manipulation on the client side, the hash values will
not match and the server would detect that. The server
would then re-request the ﬁle to overcome an apparent
transmission error.
Figure 1: Hash Value Manipulation Attack
However, if the hash value is already in the server’s
databases the server trusts the hash value calculation of
the client and does not request the ﬁle from the client.
Instead it
links the corresponding ﬁle/chunk to the
Dropbox account. Due to the manipulation of the hash
value we thus got unauthorized access to arbitrary ﬁles.
This attack is completely undetectable to the user. If