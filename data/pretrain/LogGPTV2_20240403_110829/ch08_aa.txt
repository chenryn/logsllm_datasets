大型企业 SRE 的介绍
Sriram Gollapalli, Agilent Technologies
   本章介绍我的故事，即收购的软件即服务 （SaaS） 初创公司（成立于 2006 年）如何将 SRE 引入大型企业（最初创建于 20 世纪 30 年代），包括传统 IT、运营、支持/质量团队以及不同的产品工程部门协同工作。这是针对了解 SRE 是其组织和产品需要的，但他们正在努力确定如何实现这些想法的经理。这是改编自我在 2017 年夏天在爱尔兰都柏林的 SRECon17 欧洲演讲。
 质量意味着当没有人在关注的时候自动做正确的事。
亨利·福特
背景
作为一家小型 SaaS 初创公司的联合创始人，加入大型组织对我来说是一次激动人心的经历。我们的团队很高兴能分享我们的知识，并利用这家大公司可以提供的资源和基础设施来拓展我们的业务。我们的初创公司了解到，在引入新管理模式方面，矩阵式结构（即组具有双重报告关系：功能线和产品线）既灵活又具有挑战性。我们的组织安捷伦科技从 20 世纪 30 年代末开始深植于硅谷。作为一家主要使用包装售卖的软件产品的大型仪器制造商，我们传统上通过刻录 CD 和 DVD 并邮寄来交付软件，主要版本每 12 到 24 个月发布一次。由于我们的客户开始接受更多电子产品的电子交付，我们推出了可下载的修补程序和升级，但仍然试图限制文件大小，以便传输更加高效。
随着安捷伦收购 SaaS 公司并推出 SaaS 产品，持续集成和部署管道为交付提供了不断发展的渠道，从而挑战了传统的流程、组织结构和角色。美国邮政服务公司和联邦快递等组织曾经是我们软件产品发布可靠性的唯一来源。随着云交付变得越来越普遍，我们必须融入这个趋势。它应该成为我们品牌承诺和客户体验不可或缺的组成部分。
介绍 SRE介绍 SRE
请务必注意，从根本上说，SRE 是一种工具，用于维护和改善面向客户的产品的健康，同时提高软件工程速度。这个信息容易与高管产生共鸣，并有助于倡导专用的 SRE 资源。为了介绍SRE，我们使用了以下方法，你可以在#steps_to_implementing_sre_in_an_enterpris看到。
在企业中实现 SRE 的步骤。
定义当前状态
 要确定 SRE 将来将适合的位置以及如何向领导展示业务案例，你必须从了解组织结构开始。在评估当前功能和潜在差距时，需要考虑许多组件。
首先定义组织中传统职能的角色和责任，以了解情况
典型企业具有以下中心功能：
信息技术/中央 IT/信息系统/服务台
产品支持和服务
全球运维信息技术/中央 IT/信息系统/服务台
产品支持和服务
全球运维
鉴于需要跨多个组的技能集的独特组合，SRE 的跨职能本性将对确定其在组织中的位置带来挑战。我们与类似大型企业的同行进行了非正式调查，但团队并不总是有明确的归属。要确定最佳组织结构，请确定领导职位的领导者和/或高管，以评估他们的运维经验和采用新运维方法的意愿。这对 SRE 教育和共享业务案例非常重要。典型角色可能包括 CIO、运维副总裁、支持副总裁、云副总裁或工程副总裁。其羽翼之下，可能是你的 SRE 团队可以找到的成长契合点。
为了帮助我们确定与谁合作，我们查看了已建立的 SaaS 产品。我们想象它突然变得不可用，并跟踪了一个事件，看看哪些角色和组将受到影响。这让我们转向传统产品支持和 IT 支持，更重要的是，它揭示了既没有明确的所有者，也没有建立全面产品管理和监控流程的问题。
准备业务案例：个性化和评估让工程资源来负责可靠性的成本准备业务案例：个性化和评估让工程资源来负责可靠性的成本
想象一下这种情况：你的新一轮开发周期有精心规划的用户故事，还有一致定义的已完成、整理好的工作清单、已批准的验收测试。这是一个集中开发计划，计划在完成时达到令人叹服的功能，并为计划外事件准备了充足的缓冲资源。周二下午，你正准备开始另一次重点功能开发，但从支持团队得到消息：“嘿，我收到一些客户工单，他们无法将商品添加到购物车中，你能看看吗？”
噗！任何达到开发目标和开发速度的希望现在都无暇顾及，而你只能专注于试图发现问题的所在。
听起来很熟悉吗？
上下文切换越来越降低任务交付的效率。业务案例的第一个元素可以侧重于这样一个事实，即如果没有 SRE 资源，传统工程资源就无法专注于业务优先的产品增强和改进。
可以从支持、销售、营销和其他面向客户的团队那里收集有关工程化如何更高效地完成产品（以及对故障响应或事件处理而耗费的资源进行宏观统计）的故事。准备业务案例：计算执行重复工作的各类资源的成本
在具有多个产品（云产品和其他服务）的大型组织中，可能会有多个资源，甚至具有类似 SRE 的职责的团队。通过集中集中处理这些资源，对资源进行协作调度，可以导致知识共享和成本节约。整个组织的不同资源可以定义和开发类似的流程和工具。确定这些资源并估计冗余工作的成本。
要为 SRE 负责哪些产品制定路线图，可以调查当前的基础架构环境
当我们开始确定将受益于 SRE 参与的产品类型时，我们收集了有关产品所基于的技术足迹的信息。我们看到各种各样的产品，从依赖雪花服务器（需要扩展到云服务）的产品，到具有复杂的 Windows 体系结构和依赖关系的产品（也有故障历史记录和脆弱的生态系统：不支持的操作系统版本、有限的供应商支持等）。不要低估对现有环境进行操作的复杂性，而应该将这一点纳入评估。 
识别和教育利益相关者识别和教育利益相关者
  了解当前环境后，开始进行对话，并构建 SRE 对您的组织意味着什么及其可能产生的影响的故事。
开始与组织中的领导者和拥护者对话
  如上一节所述，领导者可以包括首席信息官、运营副总裁、支持副总裁和工程副总裁。我们从一对一的对话开始，以了解每个小组当前经历的责任和痛点。我们利用这段时间来发现并定制 SRE 将如何改进其每个功能领域的故事。
由于我们做了功课并了解了产品足迹，所以我们开始这些对话，分享了我们目前状态和不同产品交付模型的高级分析（请参阅#kinds_of_software_products_and_their_deli）。我们利用这个机会介绍了云交付概念，以及它们与传统的包装软件有何不同。
软件产品种类及其交付方法（这些点代表独特的产品）。软件产品种类及其交付方法（这些点代表独特的产品）。
在此背景下，我们讨论了交付和运维模型的演变，这些模式始于通常位于中央 IT 部门的传统系统管理员。尽管我们的组织并不渴望成为下一个 SaaS 独角兽或被炒作的社交媒体产品，但使用 Google、Netflix 等示例，有助于提供背景，并展示行业交付模式如何转向更多与工程组织集成（参见#evolution_of_software_delivery_models）。我们用这些来强调传统运营模式之间的差异，并指出组织中缺乏明显的相关团队。
软件交付模型的演变。
定义 SRE
  这让我们开始定义适用于安捷伦的 SRE 的关键准则：
SRE 团队运行生产服务（一组相关系统，为我们的客户运维，可以是内部或外部），并且该团队最终负责这些服务的运行状况。
成功运行服务需要广泛的活动：
开发和实施性能、可用性、延迟和效率的监控系统
容量规划、服务器管理、灾难恢复开发和实施性能、可用性、延迟和效率的监控系统
容量规划、服务器管理、灾难恢复
应急响应，确保解决故障的根本原因
与产品团队密切合作进行发布管理
设置和满足可用性目标
当 SRE 与服务互动时，目标是改进沿这些服务的基本要素（改进事件响应时间、提高可用性等），从而更轻松地管理服务的生产环境。
SRE 表示用户对软件产品始终可用和正常运行的兴趣。
SRE 的目标是让传统工程资源专注于产品，提高速度。
起初，其中一些似乎违反直觉，与我们现有的功能（即 IT 基础架构支持或产品支持）重叠。但是，通过进一步讨论，SRE 是一个独特的功能，与传统企业支持组相比，它与软件工程组和资源的交互更为紧密。
在这些对话中，每个人都同意工程资源填补了这一角色，以保持产品的可用。我们还同意，这分散了这些资源的注意力，也阻碍了它们处理优先业务的能力。最初的倾向是扩大业务小组的范围，以包括这些 SRE 职责。然而，随着我们定义了所需的技术技能，并发现产品组合中其他产品正在出现的类似需求，因此，在保持与产品保持密切联系的同时，还需要具备专门的产品工程师经验和运维理念，并能兼顾多个产品组的需要。此外，目前的角色没有能力或技术知识来支持不同的产品，因为细腻的技术水平是这个职位必需的。
有了这些定义和结论，我们安排了与每位先前确定的领导者的一对一会谈，并引导他们接受 SRE 概念和基础知识。事实证明，这种教育是让我们提出一个商业案例，为团队提供资金和向前迈进的关键。  
展示业务案例
  由于我们花了几个月的时间与利益相关者一起准备，所以我们通过召开大型小组会议结束了这一阶段，会上我们总结了机遇并将其作为业务案例呈现。在这次会议上，我们介绍了以下情况：
我们当前面临的挑战/业务问题
当前在类似但不连贯的职能中花费的努力/成本
描述在我们的技术领导下孵育 SRE 功能的方法
对运维/可靠性的潜在积极影响
为实现投资回报而提出的时间表和里程碑
实施 SRE 团队为实现投资回报而提出的时间表和里程碑
实施 SRE 团队
在上一个阶段，业务案例已经收集，我们为什么要实施 SRE 的问题也已经得到了解答。现在开始了“如何”阶段。从设定目标和为团队配备人员开始。确定已经为你负责的产品执行此类工作的资源类型，并尝试将他们分为一个不同的组，以脱离他们的工程职务，使他们现在可以专注于 SRE 职责。
设定目标并定义成功指标
   鉴于这很可能是组织中一个独特的团队，因此一致的指标和更新对于定义、衡量和向利益相关者报告非常重要。衡量 SRE 实施成功的一个好起点是 Google 的四个黄金信号：流量（每分钟请求数）、错误（每天的事件数/错误数、每个产品数）、饱和度（活跃服务器的数量）以及延迟（超时数或页面加载持续时间）。监视这些会影响整个产品上接时间指标。