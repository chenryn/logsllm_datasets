lation peaks to data bits. To increase the communication range, the
transmitter-receiver pair uses longer chip sequences that effectively
increase the signal-to-noise ratio and hence enable long-range com-
munication. Decoding such transmissions on a backscatter device is
challenging for two main reasons:
• The correlation operation required at the receiver is both compu-
tationally expensive and requires power-consuming ADCs that
are not available on a backscatter device.
• More important, performing synchronization at the receiver is
expensive. Synchronization requires correlating the received sig-
nal with a chip sequence for every offset of the received signal.
This is not only computationally expensive but also consumes
much more power than is available on our target device.
So any code that is to be decoded on a backscatter device should
satisfy two main properties: 1) It should not require an ADC or
digital signal processing operations, and 2) It should work without
the need for synchronization.
5. µCODE
5.2 µcode’s Encoding and Decoding Algorithms
We ﬁrst motivate the need for low-power coding designs for
backscatter systems and then describe the challenges in achieving
this goal. We then describe µcode’s encoding and decoding algo-
rithms that address these challenges. Finally, we present our de-
coder hardware design that uses only analog components.
µcode can achieve coding gains on the backscatter device with-
out requiring synchronization operations at the receiver. To under-
stand µcode, we ﬁrst explain the intuition using a simple sinusoidal
wave; we then design the encoding and decoding algorithms to op-
erate on the backscattered bits.
Figure 4—µmo hardware design. µmo performs the required computation using analog components. Speciﬁcally, µmo’s hardware has
three main components: an envelope detector that removes the carrier frequency (e.g., 539 MHz), an analog division circuit that divides the
received signal on the two antennas, and ﬁnally a thresholding circuit that outputs the 0 and 1 bits.
Intuitively, instead of using a pseudorandom chip sequence,
µcode uses a periodic signal to represent the information. To see
why this works, consider a periodic sinusoidal signal transmitted at
a speciﬁc frequency. If the receiver knows the frequency of the si-
nusoidal signal, it can detect the signal without any phase synchro-
nization with the transmitter. Speciﬁcally, suppose the transmitter
sends a sine wave, sin(ft + φ), with a frequency f and a phase offset
φ. One can easily detect the above sine wave without phase syn-
chronization by performing a dot product operation with the sine
and cosine basis functions at the same frequency to compute the
In-phase (I) and Quadrature phase (Q) components:
I =
T
X
t=0
sin(ft + φ)sin(ft) ∆t =
Q =
T
X
t=0
sin(ft + φ)cos(ft) ∆t =
1
2
sin(φ)
1
2
cos(φ)
where T is the duration over which the above dot product operation
is computed.2 Note that from the above equation,
|I|2 + |Q|2 =
1
2
(1)
Since Eq. 1 is independent of the phase offset φ the receiver can de-
tect the transmitted signal without the need for phase synchroniza-
tion. Further, the receiver can increase its detection sensitivity by
increasing the transmit signal duration, T. Thus, a simple periodic
sine wave can be detected without requiring phase synchronization,
and also provides a form of coding gain to increase reliability.
µcode’s design builds on the above intuition. However, since
our backscatter transmitter has only two states and therefore can-
not transmit sine waves, it instead uses a periodic alternating se-
quence of zeros and ones. Speciﬁcally, it encodes the one bit by the
chip sequence 101010 · · · 10 and the zero bit by the chip sequence
000000 · · · 00.
Our decoder imitates the I and the Q computation above to detect
the alternating one-zero sequence, without the need for synchro-
nization. Speciﬁcally, it computes the in-phase component (I) by a
dot-product operation with the chip sequence 101010 · · · 10 and the
quadrature-phase component (Q) by a dot-product operation with a
90 degree offset chip sequence. This is similar to using the sine
and the cosine function in the previous scenario. Note that a 90 de-
gree offset is effectively a time offset of half a chip duration. To
2We replace the integration operation that is typically performed
with summation, for ease of exposition.
detect the presence of the alternating sequence of zeros and ones,
the receiver then computes |I| + |Q|. This works independent of
synchronization due to the following lemma:
LEMMA 5.1. If the transmitter continuously sends an alternat-
ing sequence of zero and one chips and the receiver computes in-
phase (I) and quadrature-phase (Q) components over any duration
of N chips, then |I| + |Q| = N.
The above lemma states that |I| + |Q| is constant, independent
of receiver synchronization (see appendix for the proof). Thus the
receiver can detect an alternating sequence of zeros and ones by
computing |I| + |Q| over any duration of N chips. To summarize:
µcode’s Encoding Algorithm. The transmitter uses the following
chip sequences to represent the zero and one information bits:
1010 · · · N · · · 10 as bit 1
0000 · · · N · · · 00 as bit 0
where the chips are transmitted at a rate of C.
µcode’s Decoding Algorithm. The receiver computes |I|+|Q| over
a duration of n
3 chips. If the majority vote of three adjacent compu-
tations is greater than a threshold then the receiver outputs a 1, and
a 0 otherwise. The threshold is computed by taking the average of
the received signal over bits in the preamble at the beginning of the
transmitted packet.
The transmitter can control both the chip rate C and the chip
length N to achieve different bit rates. The chip rate determines the
duration of each chip bit; a higher chip rate corresponds to smaller
chip durations. Given a chip rate, longer chip lengths result in larger
ranges since they increase the signal-to-noise ratio. We also show
in §8 that by controlling these parameters, we can create orthogo-
nal codes that do not require any synchronization and can enable
multiple concurrent transmissions.
5.3 µcode Hardware Design
Next we describe how µcode achieves the above decoding algo-
rithm in the analog domain, without the need for ADCs.
Speciﬁcally, as shown in Fig. 5, our receiver design has four main
components: an envelope detector circuit, |I| and |Q| computation
blocks, an addition circuit, and a thresholding circuit. The envelope
detector circuit is the same as that described in §4 and is used to
remove the carrier frequency (e.g., 539 MHz TV transmissions).
We implement the addition operation with an analog adder circuit,
and the thresholding circuit is similar to that used in §4.
Figure 5—µcode hardware design. Our hardware design performs the decoding operations using analog components, without the need for
ADCs. The hardware system has three main components: I/Q correlation circuits that compute |I| and |Q|, a summation circuit that computes
|I| + |Q|, and ﬁnally a thresholding circuit that outputs 0 and 1 bits.
We focus the rest of this discussion on the |I| and |Q| computa-
tion circuits. Note that, functionally, both operations are similar to
a dot product operation, multiplying two signals and accumulating
the result over a time period (in our case the chip length N). The
only difference between the |I| and the |Q| computations is that the
chip sequence 10 · · · 10 is offset by 90 degrees for the |Q| com-
putation. Thus, we focus on the |I| computation circuit. At a high
level, we achieve the dot product operation (which is a multiply-
accumulate operation) using three key components. First, we send
the received signal through an analog inverter to generate the in-
verted version of the input signal. We then use an analog switch that
toggles between the inverted and the non-inverted signal every T
seconds, where T is the duration of a chip. This effectively achieves
the multiplication operation with the chip sequence. Finally, we use
an analog integrator to accumulate the output of this multiplication
operation and compute |I|. The reset function in Fig. 5 is used to
reset the circuit every chip sequence length duration to repeat the
computation for every transmitted bit.
5.4 Enabling multiple transmissions using µcode
µcode can also be used to enable concurrent transmissions in the
network without the need to deal with collisions or random access.
Speciﬁcally, we show in the appendix that µcode satisﬁes the fol-
lowing property:
LEMMA 5.2. A alternating zero-one chip sequence at a chip
rate C is orthogonal to all chip sequences at a chip rate 2NC
and chip length 2N, where N is a positive integer. The orthogo-
nality property holds independent of the synchronization between
the codes.
The above lemma implies that transmitters with codes that sat-
isfy the above condition do not interfere with each other. Further,
one can create codes with rates C, 2C, 4C, 8C, · · · such that every
pair of chip sequences satisfy the above condition. By setting a par-
ticular value for C (say 100 Hz) and assigning different codes to dif-
ferent transmitter-receiver pairs, µcode can be used to enable con-
current interference-free transmissions. In §8 we evaluate µcode’s
ability to enable concurrent transmissions. One aspect of using dif-
ferent codes across transmitter-receiver pairs is the question of dis-
tributing these codes across the transmitters. Prior work on CDMA
systems [27] has proposed a number of techniques including those
that use collision-resistant hash functions to achieve this goal. In
principle, we can combine µcode’s design with these existing solu-
tions; evaluating this, however, is not in the scope of this paper.
6. FURTHER DISCUSSION
We discuss the following aspects of our design:
(1) Bit Rate Adaptation. µmo and µcode each provide us with
multiple bit rates; the transmitter-receiver pair can perform bit rate
adaptation over all these rates to optimize the throughput and to
account for channel ﬂuctuations. We note that, for both systems,
multiple bit rates can be achieved in hardware simply by changing
timing parameters in the digital control logic. Our current prototype
implementation allows us to pick different rates across µmo and
µcode. Designing bit rate adaptation algorithms however is not in
the scope of this paper.
(2) Interference with TV receivers. While the receiver designs
in this paper increase the range and rate of backscatter communi-
cation, the backscattering operation at the transmitter is the same
as in prior designs. Speciﬁcally, we do not change the strength of
the backscattered signal at the transmitter over prior designs, and
thus create no additional interference at TV receivers. Thus, simi-
lar to [24], our system creates interference at the TV receiver only
when it is closer than eight inches from the TV antenna.
(3) Application to traditional RFID systems. This paper is fo-
cused on enabling communication between battery-free devices us-
ing backscatter. However, our designs can also be used to increase
the downlink rate and range from an RFID reader to a tag. Cur-
rent RFID reader-tag systems do not operate across different rooms
and are limited to communication ranges that are comparatively
smaller; our designs can in principle also provide between-room
capabilities to traditional RFID reader to tag links.
7. PROTOTYPE IMPLEMENTATION
To evaluate the performance of µmo and µcode in practice, we
designed and implemented the system on a printed circuit board as
shown in Fig. 1. Our prototype integrates both the µmo and µcode
designs on a single board. Fig. 6 shows a block diagram of our
receiver prototype; it is a fully reconﬁgurable platform controlled
by ﬁrmware executed on the low power MSP430 microcontroller.
Both the µmo and µcode sections of the analog circuit are power-
gated, i.e., they can be enabled or disabled easily to save power. Our
prototype has the following features:
(a) -30 dBm TV Power at Transmitter
(b) -20 dBm TV Power at Transmitter
(c) -10 dBm TV Power at Transmitter
(d) 0 dBm TV Power at Transmitter
Figure 7—µmo BER versus Distance. The ﬁgure shows the bit error rate (BER) as a function of distance between the backscattering device
and the receiver. The different plots correspond to different ambient RF power levels at the transmitter. The black solid line represents the
baseline BER from existing ambient backscatter designs. The ﬁgure shows that µmo can enable data rates as high as 1 Mbps at distances
between 4-7 feet. This translates to a 100X improvement in the data rates.
is, there is a maximum baseband signal bandwidth that a receiver
is capable of decoding. The analog bandwidth of a receiver is pro-
portional to the maximum data rate that can be achieved using it.
In our prototype, the analog bandwidth is determined by the capa-
bilities of the operational ampliﬁers and other components we use
to implement the analog processing. In general, higher bandwidth
allows higher data rates but also increases power consumption.
We fabricate two prototypes: one that targets high-rate commu-
nication and consumes more power, and another that targets low-
rate communication and consumes less power. Speciﬁcally, our
high data rate prototype targets an analog bandwidth of 1 MHz. To
achieve this we make use of the power-efﬁcient TSV6390 opera-
tional ampliﬁers from ST Microelectronics in our signal processing
circuits. For the ﬁnal threshold comparison we use the NCS2200
comparator made by ON semiconductors. The low rate prototype,
on the other hand, has an analog bandwidth of 1 kHz. To achieve
this, we use the BU7265 operational ampliﬁer from Rohm Semi-
conductor and the TS881 comparator from ST Microelectronics.
We use our high rate prototype to demonstrate µmo and our low
rate prototype for µcode. Table 1 shows the power consumption
of their analog signal processing, including all the analog com-
ponents. The table shows that µmo consumes about 422 µW of
power; this is in contrast to traditional Wi-Fi MIMO implementa-
tions [14] that use more than one Watt for a two-antenna receiver.
The power consumption numbers for µcode are signiﬁcantly lower
at around 8.9 µW. We note that prior ambient backscatter designs
use 0.54 µW of power but are signiﬁcantly limited to less than two
feet of communication range and 10 kbps of bit rates. The higher
power consumption of our prototype, however, is not an issue since
we use duty cycling to reduce the average power of these analog
components, as described next. We also note that one can further
reduce these power numbers by an order of magnitude by using
application-speciﬁc integrated circuits (ASICs).
3) Energy Harvesting and Duty Cycling. Our prototype provides the
ability to harvest energy from one or both of the following sources:
Figure 6—Block diagram of our receiver prototype
Table 1—Power consumption of Analog Signal Processing
µcode
µmo
Max. Rate Range
>80 ft
1 kbps
1 Mbps
4 - 7 ft
Rx Power
8.9 µW
422 µW
1) Flexible switching between µmo and µcode. We use an ultra-low-
power conﬁguration switch as shown in the ﬁgure to route signals
between two modes of operation: µmo and µcode. When in µmo
mode, the microcontroller directs the conﬁguration switch to allow
the output of the µmo divider to pass to the next decoding step.
The µmo divider circuit is powered on, along with the thresholding
circuit. When µmo is active, the µcode correlator is bypassed in-
ternally by forcing it into a perpetual reset state, which effectively
disables any impact from the correlation circuit.
When in µcode mode, the switch is conﬁgured to route the sig-
nal from one of the two detectors to the correlator, allowing either
of the two antennas to be selected as the signal source. The µcode
correlator is powered on, along with the thresholding circuit. The
microcontroller generates the correlator’s reference I and Q chip
sequences as well as a periodic reset pulse that clears the corre-
lation result after every chip sequence duration. Note that in our
experiments, we use only one receive antenna to evaluate µcode.
2) Trading analog bandwidth for lower power consumption. Every
analog communication circuit has an constrained bandwidth, that
ambient TV energy, and solar power. In the case of an ambient RF
energy harvesting supply, our prototype duty-cycles (periodically
alternates between active and sleep states) to allow operation from
such a low power source. With a typical TV harvesting power of
100 µW, our 1 MHz µmo device can operate 23% of the time, and
the 1 kHz µcode system can operate 100% of the time.
In the case of a solar photovoltaic power supply, we consider
the area requirement of a typical-efﬁciency solar array such that it
can provide sufﬁcient power for continuous operation of µmo and
µcode circuits. To do this we measure the power output from an
2.75 by 1.38 inch thin ﬁlm solar array (manufactured by PowerFilm
Inc) in an environment with an illuminance of 330 lux. 330 lux
is the minimal ofﬁce and workplace illuminance speciﬁed by the
Occupational Safety and Health Administration (OSHA) [1]. Given
these measurements, µmo requires a 8.28 square inch solar array
and µcode requires a 0.17 square inch solar array to continuously
operate in our ofﬁce environment.
8. EVALUATION
We ﬁrst evaluate the performance of µmo in an ambient