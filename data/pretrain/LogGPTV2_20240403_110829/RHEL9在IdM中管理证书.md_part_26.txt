            `webserver-ca`{.literal}，而不是 `ipa`{.literal}。
        -   `-C`{.literal} 选项指示 `certmonger`{.literal}
            在获取证书后重启 `httpd`{.literal} 服务。
        :::
        ::: itemizedlist
        -   要指定使用特定配置集发布证书，请使用 `-T`{.literal} 选项。
        :::
    :::
2.  （可选）检查请求的状态：
    ``` literallayout
    # ipa-getcert list -f /etc/pki/tls/certs/httpd.pem
    Number of certificates and requests being tracked: 3.
    Request ID '20190604065735':
        status: MONITORING
        stuck: no
        key pair storage: type=FILE,location='/etc/pki/tls/private/httpd.key'
        certificate: type=FILE,location='/etc/pki/tls/certs/httpd.crt'
        CA: IPA
        issuer: CN=WEBSERVER,O=IDM.EXAMPLE.COM
    [...]
    ```
    输出显示请求处于 MONITORING
    `状态`{.literal}，这表示已经获取证书。密钥对和证书的位置是请求的。
:::
:::
::: section
::: titlepage
# []{#restricting-an-application-to-trust-only-a-subset-of-certificates_managing-certificates-in-idm.html#communication-flow-certmonger-requesting-service-cert_restricting-an-application-to-trust-a-subset-of-certs}请求服务证书的 certmonger 的通信流 {.title}
:::
本节图表显示当 `certmonger`{.literal} 从 Identity
Management(IdM)证书认证机构(CA)服务器请求服务证书时发生的阶段。该序列由这些示意图组成：
::: itemizedlist
-   [未加密通信](#restricting-an-application-to-trust-only-a-subset-of-certificates_managing-certificates-in-idm.html#restricting-an-application-to-trust-a-subset-of-certs_certmonger-service-cert-1 "图 17.3. 未加密通信"){.link}
-   [请求服务证书的
    certmonger](#restricting-an-application-to-trust-only-a-subset-of-certificates_managing-certificates-in-idm.html#restricting-an-application-to-trust-a-subset-of-certs_certmonger-service-cert-2 "图 17.4. 请求服务证书的 certmonger"){.link}
-   [IdM CA
    发布服务证书](#restricting-an-application-to-trust-only-a-subset-of-certificates_managing-certificates-in-idm.html#restricting-an-application-to-trust-a-subset-of-certs_certmonger-service-cert-3 "图 17.5. IdM CA 发布服务证书"){.link}
-   [应用服务证书的
    certmonger](#restricting-an-application-to-trust-only-a-subset-of-certificates_managing-certificates-in-idm.html#restricting-an-application-to-trust-a-subset-of-certs_certmonger-service-cert-4 "图 17.6. 应用服务证书的 certmonger"){.link}
-   [在旧的证书接近过期时请求新证书的
    certmonger](#restricting-an-application-to-trust-only-a-subset-of-certificates_managing-certificates-in-idm.html#restricting-an-application-to-trust-a-subset-of-certs_certmonger-service-cert-5 "图 17.7. 在旧的证书接近过期时请求新证书的 certmonger"){.link}
:::
在图中，`webserver-ca`{.literal} 子 CA 由通用 `IdM CA 服务器`{.literal}
表示。
[未加密通信](#restricting-an-application-to-trust-only-a-subset-of-certificates_managing-certificates-in-idm.html#restricting-an-application-to-trust-a-subset-of-certs_certmonger-service-cert-1 "图 17.3. 未加密通信"){.link}
显示初始情况：没有 HTTPS 证书，Web 服务器之间的通信和浏览器未加密。
::: figure
[]{#restricting-an-application-to-trust-only-a-subset-of-certificates_managing-certificates-in-idm.html#restricting-an-application-to-trust-a-subset-of-certs_certmonger-service-cert-1}
**图 17.3. 未加密通信**
::: figure-contents
::: mediaobject
![显示运行 Apache web 服务器和 certmonger 服务的 IdM 客户端图。浏览器和
Apache webserver 之间有箭头，显示它通过未加密的 HTTP 连接进行连接。从
certmonger 服务到 IdM CA
服务器的不活跃连接。](images/84_RHEL_IdM_0420_1.png)
:::
:::
:::
\
[请求服务证书的
`certmonger`{.literal}](#restricting-an-application-to-trust-only-a-subset-of-certificates_managing-certificates-in-idm.html#restricting-an-application-to-trust-a-subset-of-certs_certmonger-service-cert-2 "图 17.4. 请求服务证书的 certmonger"){.link}
显示系统管理员使用 certmonger 为 Apache web 服务器手动请求 HTTPS
证书。请注意，在请求 web 服务器证书时，certmonger 不会直接与 CA
通信。它通过 IdM 进行代理。
::: figure
[]{#restricting-an-application-to-trust-only-a-subset-of-certificates_managing-certificates-in-idm.html#restricting-an-application-to-trust-a-subset-of-certs_certmonger-service-cert-2}
**图 17.4. 请求服务证书的 certmonger**
::: figure-contents
::: mediaobject
![在 IdM 客户端和 IdM CA 服务器中显示 certmonger
服务间的箭头，以显示它通过 ipa-getcert
请求进行连接。](images/84_RHEL_IdM_0420_2.png)
:::
:::
:::
\
[发出服务证书的](#restricting-an-application-to-trust-only-a-subset-of-certificates_managing-certificates-in-idm.html#restricting-an-application-to-trust-a-subset-of-certs_certmonger-service-cert-3 "图 17.5. IdM CA 发布服务证书"){.link}
IdM CA 显示为 web 服务器发出 HTTPS 证书的 IdM CA。
::: figure
[]{#restricting-an-application-to-trust-only-a-subset-of-certificates_managing-certificates-in-idm.html#restricting-an-application-to-trust-a-subset-of-certs_certmonger-service-cert-3}
**图 17.5. IdM CA 发布服务证书**
::: figure-contents
::: mediaobject
![在 IdM 客户端中显示 IdM CA 服务器和 certmonger 服务间的箭头 -
显示它正在连接并发送 HTTPS 证书。](images/84_RHEL_IdM_0420_3.png)
:::
:::
:::
\
[Certmonger
应用服务证书](#restricting-an-application-to-trust-only-a-subset-of-certificates_managing-certificates-in-idm.html#restricting-an-application-to-trust-a-subset-of-certs_certmonger-service-cert-4 "图 17.6. 应用服务证书的 certmonger"){.link}显示，`certmonger`{.literal}
把 HTTPS 证书放置到 IdM 客户端的正确位置，如果指定，会重启
`httpd`{.literal} 服务。随后，Apache 服务器使用 HTTPS
证书来加密其自身和浏览器之间的流量。
::: figure
[]{#restricting-an-application-to-trust-only-a-subset-of-certificates_managing-certificates-in-idm.html#restricting-an-application-to-trust-a-subset-of-certs_certmonger-service-cert-4}
**图 17.6. 应用服务证书的 certmonger**
::: figure-contents
::: mediaobject
![显示分配给 Apache Web 服务器的 HTTPS 证书的图表，以及分配给 certmonger
服务的图像。浏览器和 Apache webserver
之间有箭头，显示连接现在是一个加密的 HTTPS 连接。certmonger 服务和 IdM
CA 服务器间的连接不活跃。](images/84_RHEL_IdM_0420_4.png)
:::
:::
:::
\
[当旧证书接近过期时，cert](#restricting-an-application-to-trust-only-a-subset-of-certificates_managing-certificates-in-idm.html#restricting-an-application-to-trust-a-subset-of-certs_certmonger-service-cert-5 "图 17.7. 在旧的证书接近过期时请求新证书的 certmonger"){.link}
`monger`{.literal} 会在证书过期前自动从 IdM CA 续订服务证书。IdM CA
发出新证书。
::: figure
[]{#restricting-an-application-to-trust-only-a-subset-of-certificates_managing-certificates-in-idm.html#restricting-an-application-to-trust-a-subset-of-certs_certmonger-service-cert-5}
**图 17.7. 在旧的证书接近过期时请求新证书的 certmonger**
::: figure-contents
::: mediaobject
![在连接到 IdM CA 服务器的 IdM 客户端中显示来自 certmonger
服务的箭头，以显示它正在执行 ipa-getcert 请求。从 IdM CA 服务器到
Certmonger 的箭头是标记为 HTTPS 证书，以显示它正在向 certmonger 服务传输
HTTPS 证书。](images/84_RHEL_IdM_0420_5.png)
:::
:::
:::
\
:::
::: section
::: titlepage
# []{#restricting-an-application-to-trust-only-a-subset-of-certificates_managing-certificates-in-idm.html#setting-up-a-single-instance-apache-http-server_restricting-an-application-to-trust-a-subset-of-certs}设置单实例 Apache HTTP 服务器 {.title}
:::
这部分论述了如何设置单实例 Apache HTTP 服务器来提供静态 HTML 内容。
如果 web
服务器应该为与服务器关联的所有域提供相同的内容，请按照本节中的步骤进行操作。如果要为不同的域提供不同的内容，请设置基于名称的虚拟主机。详情请参阅
[配置基于 Apache
名称的虚拟主机](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/deploying_different_types_of_servers/index#configuring-apache-name-based-virtual-hosts_setting-apache-http-server){.link}。
::: orderedlist
**步骤**
1.  安装 `httpd`{.literal} 软件包：
    ``` screen
    # dnf install httpd
    ```
2.  在本地防火墙中打开 TCP 端口 `80`{.literal}:
    ``` screen
    # firewall-cmd --permanent --add-port=80/tcp
    # firewall-cmd --reload
    ```
3.  启用并启动 `httpd`{.literal} 服务：
    ``` screen
    # systemctl enable --now httpd
    ```
4.  可选：将 HTML 文件添加到 `/var/www/html/`{.literal} 目录中。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    在 向`/var/www/html/`{.literal}
    添加内容时，在`httpd`{.literal}默认运行的情况下，文件和目录必须可被用户读取。内容所有者可以是
    `root`{.literal}用户和`root`{.literal}用户组，也可以是管理员所选择的其他用户或组。如果内容所有者是
    `root`{.literal} 用户和 `root`{.literal}
    用户组，则文件必须可被其他用户读取。所有文件和目录的 SELinux
    上下文必须为 `httpd_sys_content_t`{.literal}，其默认应用于
    `/var/www`{.literal} 目录中的所有内容。
    :::
:::
::: itemizedlist
**验证步骤**
-   使用 Web 浏览器连接到 `http://my_company.idm.example.com/`{.literal}
    或 `http://server_IP/`{.literal}。
    如果 `/var/www/html/`{.literal} 目录为空，或者不包含
    `index.html`{.literal}或`index.htm`{.literal}文件，则 Apache 会显示
    `Red Hat Enterprise Linux 测试页面`{.literal}。如果
    `/var/www/html/`{.literal} 包含具有不同名称的 HTML
    文件，您可以通过输入 URL 到该文件来加载这些文件，如
    `http://server_IP/example.html`{.literal} 或
    `http://my_company.idm.example.com/example.html`{.literal}。
:::
::: itemizedlist
**其他资源**
-   请参阅 Apache 手册。[请参阅安装 Apache HTTP
    服务器手册](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/deploying_different_types_of_servers/index#installing-the-apache-http-server-manual_setting-apache-http-server){.link}。
-   请参见 `httpd.service(8)`{.literal} 手册页。
:::
:::
::: section
::: titlepage
# []{#restricting-an-application-to-trust-only-a-subset-of-certificates_managing-certificates-in-idm.html#proc_adding-tls-encryption-to-an-apache-http-server-configuration_restricting-an-application-to-trust-a-subset-of-certs}在 Apache HTTP 服务器中添加 TLS 加密 {.title}
:::
这部分论述了如何在 `my_company.idm.example.com`{.literal} Apache HTTP
Server 中为 `idm.example.com`{.literal} 域启用 TLS 加密。
::: itemizedlist
**先决条件**
-   `my_company.idm.example.com`{.literal} Apache HTTP
    服务器已安装并运行。
-   您已从 [**webserver-ca**]{.strong} 子 CA 获取 TLS 证书，并将其存储在
    `/etc/pki/tls/certs/httpd.pem`{.literal} 文件中，如 ["使用
    certmonger 为服务获取 IdM
    证书"一节](#restricting-an-application-to-trust-only-a-subset-of-certificates_managing-certificates-in-idm.html#obtain-service-cert-with-certmonger_restricting-an-application-to-trust-a-subset-of-certs "使用 certmonger 为服务获取 IdM 证书"){.xref}
    所述。如果您使用其他路径，请调整该流程的对应步骤。
-   对应的私钥存储在 `/etc/pki/tls/private/httpd.key`{.literal}
    文件中。如果您使用其他路径，请调整该流程的对应步骤。
-   [**webserver-ca**]{.strong} CA 证书存储在
    `/etc/pki/tls/private/sub-ca.crt`{.literal}
    文件中。如果您使用其他路径，请调整该流程的对应步骤。
-   客户端和 [**my_company.idm.example.com**]{.strong} Web
    服务器会将服务器的主机名解析为 web 服务器的 IP 地址。
:::
::: orderedlist
**步骤**
1.  安装 `mod_ssl`{.literal} 软件包：
    ``` literallayout
    # dnf install mod_ssl
    ```
2.  编辑`/etc/httpd/conf.d/ssl.conf`{.literal}文件，并将以下设置添加到
    ``{.literal}指令中：
    ::: orderedlist
    1.  设置服务器名称：
        ``` literallayout
        ServerName my_company.idm.example.com
        ```
        ::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
        ### 重要 {.title}
        服务器名称必须与证书的
        `Common Name`{.literal}字段中设置的条目匹配。
        :::
    2.  可选：如果证书在 `Subject Alt Names`{.literal}
        (SAN)字段中包含额外的主机名，您可以
        配置`mod_ssl`{.literal}来为这些主机名提供 TLS
        加密。要配置此功能，请添加具有对应名称的`ServerAliases`{.literal}参数：
        ``` literallayout
        ServerAlias www.my_company.idm.example.com server.my_company.idm.example.com
        ```
    3.  设置到私钥、服务器证书和 CA 证书的路径：
        ``` literallayout
        SSLCertificateKeyFile "/etc/pki/tls/private/httpd.key"
        SSLCertificateFile "/etc/pki/tls/certs/httpd.pem"
        SSLCACertificateFile "/etc/pki/tls/certs/ca.crt"
        ```
    :::
3.  出于安全考虑，配置成只有 `root`{.literal} 用户才可以访问私钥文件：
    ``` literallayout
    # chown root:root /etc/pki/tls/private/httpd.key
    # chmod 600 //etc/pki/tls/private/httpd.key
    ```
    ::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 警告 {.title}
    如果私钥被设置为可以被未授权的用户访问，则需要撤销证书，然后再创建一个新私钥并请求一个新证书。否则，TLS
    连接就不再安全。
    :::
4.  在本地防火墙中打开端口 `443`{.literal}:
    ``` literallayout
    # firewall-cmd --permanent --add-port=443/tcp
    # firewall-cmd --reload
    ```
5.  重启`httpd`{.literal}服务：
    ``` literallayout
    # systemctl restart httpd
    ```
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    如果您使用密码来保护私钥文件，则必须在每次
    `httpd`{.literal}服务启动时都输入此密码。