# 攻击 JavaWeb 应用
## [JavaWeb 安全系列]
### 作者：园长 MM
### 发布日期：2013-07-04

---

## 目录
1. JavaEE 基础
2. 如何找到数据源
3. Tomcat 基础
4. Resin 和 Apache 配置
5. 客户端与服务器交互安全

---

## 1. JavaEE 基础
本节将简要介绍一些 Java 相关的基本知识，包括 JavaWeb 结构、Servlet 容器以及如何快速定位敏感信息。请注意，本文的后续内容均基于此基础之上展开。由于笔者并非网络安全行业的专业人员，因此在技术细节上可能存在不足或错误之处，欢迎各位读者批评指正。

### 1.1 关键术语定义
- **JSP (Java Server Pages)**: 是一种简化版的 Servlet 设计，主要用于生成动态网页。
- **Servlet**: 是一种运行于服务器端的 Java 应用程序，能够处理客户端请求并返回响应。
- **JavaEE (Java Enterprise Edition)**: 曾被称为 J2EE，是专为企业级应用设计的 Java 平台版本。

### 1.2 Java 平台概述
Java 平台由多个层次构成，其中 JSP 只是众多开发技术中的一种初级技能。了解整个 Java 技术栈有助于更好地理解其在 Web 开发中的地位。

### 1.3 Web 请求流程简介
当用户通过浏览器向服务器发送 HTTP 请求时，如果该请求指向的是一个 JSP 页面，Tomcat 会自动将其编译成相应的 Servlet 类来执行。这一过程展示了 JSP 实际上是如何转换为普通 Java 类进行处理的。

---

## 2. 如何找到数据源
数据库连接配置通常位于项目目录下的特定文件内，如 `WEB-INF` 文件夹中的 `.xml` 或者 `.properties` 文件。此外，在某些情况下，这些配置也可能直接嵌入到源代码里。

---

## 3. Tomcat 基础
Apache Tomcat 是一个开源且广泛使用的 Web 服务器及 Servlet 容器。它支持多种负载均衡方案，并且可以与 Apache HTTP 服务器集成以提供更强大的功能。

### 3.1 查找 Tomcat 安装路径
对于那些不知道自己系统中 Tomcat 安装位置的人来说，可以通过检查相关配置文件（如 `httpd.conf`）来确定具体位置。

---

## 4. Resin 和 Apache 配置
Resin 是另一个高性能的 Java 应用服务器，常用于构建大型分布式应用程序。结合 Apache 使用时，两者可以形成互补关系，前者专注于 Java 应用的支持，后者则擅长处理静态资源和 PHP 脚本。

---

## 5. 客户端与服务器交互安全
### 5.1 请求与响应机制
无论使用哪种编程语言编写 Web 应用程序，其核心都离不开对客户端请求 (`HttpServletRequest`) 的接收与响应 (`HttpServletResponse`) 的生成。理解这一过程对于确保应用程序的安全性至关重要。

### 5.2 请求头伪造与 XSS 攻击
利用工具如 Firefox 浏览器插件 Tamper Data，开发者可以轻松地修改 HTTP 请求头部信息，进而模拟各种攻击场景，例如跨站脚本 (XSS) 攻击。

---

希望以上内容能帮助您更好地理解和保护您的 JavaWeb 应用免受潜在威胁。未来章节还将探讨更多关于 SQL 注入防御、Servlet 容器管理等主题。