# 用户故事 \| 站在更高的视角看架构  我是 Aaron，一名 python 软件工程师， 目前主要从事运维开发 DevOps工作。   一般开发的系统是内部使用的运维系统，最近主要的工作就是将产品需要的一些功能嵌入到类似CMDB 系统当中，比如 SaltStack、ELK（EFK)、Zabbix等。   目前，运维自动化的困境是运维研发资源能力的不足，底层自动化的能力可以通过IaaS 公有云来解决，但是在 OS之上的运维自动化都是通过一些开源工具来解决的。开源工具的引入，加大了维护的难度和复杂度，而且，很多平台的可扩展能力非常薄弱。   理解这些开源工具的内部实现原理、优缺点，了解可以改善的地方，实现项目的深层次进化，是自己的额外追求。因为这个追求，学习架构设计就很有必要，从架构的思维来看这些迭代了五六年的开源项目，可以看到开源软件开发者的迭代开发流程和思考。发上等愿，结中等缘，享下等福，运维开发在公司偏辅助业务，我希望努力学习基础架构来实现自身价值。 我为什么要学习架构课？  极客时间推出《许式伟的架构课》的时候，我正在工作时间之外学习操作系统、计算机网络等课程。看了这门课的介绍觉得挺好的，知道作者是七牛云的许式伟老师，因为自己工作方向的原因，经常会接触到关于Go 语言布道师（许式伟老师）的一些介绍，对于许老师非常崇拜，特别是许老师多年前就预测到 Go语言会称霸云计算这一点，我特别佩服。   另外，我也一直希望能借助许老师的视角和高度，来看看架构这件事。slate-object="mark"}   如何将用户的需求，一步步分解为程序员要实现的功能点，并展现给用户，这是架构师的职责。设计高可用、高性能、高并发的可靠系统需要匠心，悟心，保持谦和求取的心态。架构思维并不难，但是成为优秀的架构师却不易。我很想知道在许老师这样的高度上，他对架构的理解是什么样的。   我也希望可以通过对专栏的学习，能在工作实践中有所成长，成为优秀的架构师。所以我购买了《许式伟的架构课》，并开始学习。 我是怎样学习专栏的？  我学习这个专栏没有什么特别之处，无非做到了三点：反复学习、动手实践、留言打卡坚持。slate-object="mark"}   许老师的课程是每周二、五更新，一般情况下我都会在当天先通读一下老师的文章，特别好的文章会通读好几遍 ，周末的时候会再拿出来细看 。平时上下班路上的细碎时间，也会抽空看一次、听一次来巩固学习。   具体算下来，整个学习的过程，基本上也和别的同学分享的类似，基本可以读懂的文章，学习两到三次；不是很精通的，云里雾里的，会至少看到五六次；听一遍不够，再看一遍也不行，那就再多读几遍，查看留言，看看其他同学的留言内容，来检验自己是否理解了，问题是否完全解决了。   许老师专栏中提到的实战项目， 像 JS 和 Golang 的项目，我都要自己仔细敲一遍，落实到代码上。因为如果只是浮光掠影的话，不会理解到精髓的。知识还是要下苦工夫才能消化。   另外，我基本一直坚持学slate-object="mark"}。可能很多同学可以看到我在老师课程下坚持留言，因为极客时间的课程我购买了不少，有些跟了一段时间就暂时搁置了，所以我在跟许老师的架构课程之初，就定下了Flag：一定要在老师正式的课程下多留言打卡，虽然留言质量未必很高，但是至少有一种方式可以让我尽量坚持下去。 专栏中最有收获的文章是哪几篇？  介绍几篇我个人觉得很有收获的文章：      slate-type="list-line" 《 [01 \|架构设计的宏观视角slate-object="inline"》   很多开发人员对众多系统背后是如何工作的，原理一知半解，知其然不知其所以然，成为架构师就是成长为造房子的建筑工程师，需要宏观的全局掌握能力。      slate-type="list-line" 《 [17 \|需求分析（上）slate-object="inline"》和《18 \|需求分析（下）slate-object="inline"》   为什么要做需求分析呢？一是为了满足用户需求，二是满足边界的需要，三是架构设计的需要，防止过度设计，把简单的事情复杂化。   如果只是被动接受产品需求，以按图索骥的方式做架构师，是不足以成为顶级架构师的，用户需求的深层理解是很难传递的。   产品设计过程需要架构师的深度参与，而不是单向的信息传递。产品是桥，一端连接用户需求，一端连接了先进的技术。   产品经理和架构师其实是一体两面，都需要关心用户需求和产品定义。架构师需要三分之一的精力（我目前感觉可能会更多一些）在需求分析上。   许老师介绍的这些点，都很有价值：   "心态第一，装着用户，刨根究底，找到根源需求，理清需求，对需求进行归纳整理。需求分析，用户的需求反馈到架构师那里，需要对功能进行拆解，对于部分超前的需求，分期进行实现。"      slate-type="list-line" 《 [22 \|桌面程序的架构建议slate-object="inline"》   老师对 MVC 的讲解，当时看完了之后感觉到醍醐灌顶，看到下面留言说，这一篇文章就值回"票价"，我也是同样的感受。   后面的我就不一一举例了。 有哪些好的学习方法？  学习的方法无非就是坚持，坚持，坚持！夯实基础，夯实基础，夯实基础！   去年的时候看到一位深度学习的大佬 Lan Goodfellow 的访谈，说他人工智能本科阶段和博士早期阶段曾经多次咨询吴恩达老师寻求建议。吴恩达建议他彻底精通这些基础知识和技能（编程、调试、线性代数、概率论等等），特别是基础数学。   以前的他特别不理解这个建议，觉得这些实在是很无聊，他以为吴恩达能建议他去学习超实数或者类似的东西，实践几年后，他发现老师当时给的建议实在是太正确了。   学习没什么捷径，不存在什么一蹴而就的高超技术，要真的能稳得住啃那些基础，能沉下心坚持再坚持。   夯实基础，坚持下去slate-object="mark"}，就几个字，做到不易，愿你我共勉。每个开发者都希望能够有银弹，架构设计的其中一种是基础架构，涉及操作系统、分布式系统、嵌入式系统、数据库、计算机网络等，这些都需要扎实的基础作为后盾。研发底层基础设施，这个是自己近期的目标。   有很多人说，第一份工作带给你的能力，眼界，和圈子是非常重要的，一个人的能力决定他的上限，圈子决定了他的下限。   我对毕业之后的第一份工作没有足够的重视，发展不佳，但是非常庆幸参加了许老师的课程，"受益终生"四个字不足以完全表达我的谢意。 希望老师的公司发展蒸蒸日上，也祝一起在极客时间学习的我们在努力坚持之后会心想事成！   平时对外输出文字的机会不多，些许胡言，希望能够给大家抛砖引玉，谢谢大家。   ![](Images/66b9828c3d4de21b8f7a14213cf3c4e7.png)savepage-src="https://static001.geekbang.org/resource/image/43/00/43231f3789095eb4cdb38e67ff3d7900.jpg"}
# 课外阅读 \| 从《孙子兵法》看底层的自然法则你好，我是七牛云许式伟。近日在读《孙子兵法》，颇有感触。作为我国现存第一部，也是世界最早的军事著作。《孙子兵法》一直为众多政治家、军事家及企业管理者膜拜，被当作军事外交、企业管理的圣典。时至今日，新经济、科技和社会结构下，很多人认为我们身处一种复杂社会，需要全新的军事、商业和公共策略。然而，不管远古农耕刀兵还是高科技信息社会竞争，时代、人文环境和科学技术的变迁，并不能改变人类社会生存竞争所依赖的基础系统环境和人性思维的规则。英国空军元帅斯莱瑟曾说过："孙武的思想有惊人之处------把一些词句稍加变换，他的箴言就像是昨天刚写出来的。"《孙子兵法》讲的是战争，骨子里包含的却是人类社会生存竞争的底层规则。案例会变迁，背后的道理却很难过时。我们作为架构师，需要做到对世界的认知可宏观、可微观。从对宏观的理解来说，背后所依赖的正是我们对这些底层自然法则的体悟。
## 明道《孙子兵法》讲的是规则。它通过战争，结合环境和人性探讨竞争中生存的规则；然后，在确定目标下，它又将战争行为分解成为一系列细分的规则。《始计篇》开端，全书先讲总规则，就是"道"。"道者，令民与上同意也，故可以与之死，可以与之生，而不畏危。"如同国家有纲领，企业必须明确愿景，使命或是价值观一样。明心方能正道，明道方知力之所指。事实上，明白道之所求，术方能有指引，追随者才能有方向、有激情。对国家、企业而言"道"不仅是方向，还是战斗力和吸附力的来源，明道和传播非常重要。``{=html}"慎战"。"兵者，国之大事，生死之地，存亡之道，不可不察也。"战争和企业竞争涉及系统存亡关系重大，是管理者每日都要考虑的事情。"自古知兵非好战。"这种行为不是个人名利或得失，而是关系到万户千家，或者全体员工和家庭，必须慎之又慎，不可凭个人好恶，更不可好大喜功和拍脑袋。"上兵伐谋"、"不战而屈人之兵"。要牢记初心，保存敬畏和责任感，求胜同时要避免己方生命和资源的巨大消耗。"善战者，无智名，无勇功。"正如"善弈者通盘无妙手"，或是扁鹊治病于未发，"立于不败之地"非常之关键。"避害第一"，先考虑失败的后果；"先胜后战"，不打无把握的战争。"因利而战"，考虑成本和结果；"一战而终"，准备要充分，动手要迅捷，毕其功于一役。"兵无常势，水无常形。"环境、资源条件，心态、优劣势这些都可能随时变化，不能教条主义，须将策略灵活应用于变化的实际。满口教义，如赵括那般纸上谈兵，一棒子打死算了。"君将士卒皆有其道"。公司内也应各司其职，人人满口战略、创新和文化，"所有人都举着旗帜，他们用哪只手来战斗？"这样的公司很危险。
## 庙算"先胜后战"，就要"未战先算"。战与棋，一样考的算力，所谓政治经济环境人心都要纳入数据输入。庙算，非治一战或局部。而是知己知彼综合所获数据，依据规则全面分析，很像是系统竞争成败的"大案牍数"。庙算策略，不是单一事件的静态考量，而是复杂动态的综合考量。五事，道、天、地、将、法；七计，主、将、天地、法令、兵众、士卒、赏罚都要纳入进来。知己还要知彼。内外部环境，天时地形人才人心钱粮规章，所有影响战争胜负的东西，一切可以数据化，能算计的全都计算进去。依据庙算可确定"势"，依据"势"决断是否有利并采取相应行动。拥有这样的洞察和决断力，知道了什么时候该打什么时候不该打，真正战争行为才会很简单。战争中要"致人而不致于人"。曾说"朕观诸兵书，无出孙武"的李世民，还有林彪都非常擅长集中优势兵力，通过忍耐和调动对手，"多方以误"，引敌人失误而获取最终胜利。恰如"木桶理论"，庙算还可以消灭己方短板，寻找或者调动对方出现短板。当然，《孙子兵》并不是每战必胜，也不是以弱胜强，化不可能为可能的魔法书。不宜"知其不可而为之"。一系列庙算都在规则下，寻找到可能性，获得相对优势来战胜对手。如集中优势兵力，实现局部优势。"以迂为直，以患为利。"利用天时地形和行军，训练扎营做饭都有明确的目标。速战还是持久战，都是依据各种条件资源推演分析的结果。"故知战之地，知战之日，则可千里而会战。"唯有算胜，方可一战。庙算为术，战术不能超脱于战略。"将在外君命有所不受"只是指根据实际情况可以灵活战术，正如当年毛主席要求林彪东北战役要服从大局，大战略不容颠覆。不能因一人之利，一地之利，一时之利而改变，只能随整个系统变化而调整。