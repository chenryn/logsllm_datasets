title:Cirripede: circumvention infrastructure using router redirection with
plausible deniability
author:Amir Houmansadr and
Giang T. K. Nguyen and
Matthew Caesar and
Nikita Borisov
Cirripede: Circumvention Infrastructure using Router
Redirection with Plausible Deniability
Amir Houmansadr† Giang T. K. Nguyen‡ Matthew Caesar‡ Nikita Borisov†
†Department of Electrical and Computer Engineering
‡Department of Computer Science
University of Illinois at Urbana-Champaign
{ahouman2,nguyen59,caesar,nikita}@illinois.edu
ABSTRACT
Many users face surveillance of their Internet communica-
tions and a signiﬁcant fraction suﬀer from outright blocking
of certain destinations. Anonymous communication systems
allow users to conceal the destinations they communicate
with, but do not hide the fact that the users are using them.
The mere use of such systems may invite suspicion, or access
to them may be blocked.
We therefore propose Cirripede, a system that can be
used for unobservable communication with Internet desti-
nations. Cirripede is designed to be deployed by ISPs; it
intercepts connections from clients to innocent-looking desti-
nations and redirects them to the true destination requested
by the client. The communication is encoded in a way that
is indistinguishable from normal communications to anyone
without the master secret key, while public-key cryptogra-
phy is used to eliminate the need for any secret information
that must be shared with Cirripede users.
Cirripede is designed to work scalably with routers that
handle large volumes of traﬃc while imposing minimal over-
head on ISPs and not disrupting existing traﬃc. This allows
Cirripede proxies to be strategically deployed at central lo-
cations, making access to Cirripede very diﬃcult to block.
We built a proof-of-concept implementation of Cirripede and
performed a testbed evaluation of its performance proper-
ties.
Categories and Subject Descriptors
C.2.0 [Computer-Communication Networks]: General—
Security and protection; E.3 [Data]: Data Encryption; K.4.1
[Computers and Society]: Privacy
General Terms
Algorithms, Design, Security
Keywords
Censorship-resistance, unobservability
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
CCS’11, October 17–21, 2011, Chicago, Illinois, USA.
Copyright 2011 ACM 978-1-4503-0948-6/11/10 ...$10.00.
1.
INTRODUCTION
The Internet has become a serious threat to repressive
regimes as it plays an increasingly powerful role in the free
circulation of speech, information, and ideas. To counter
this, countries that restrict political freedom and corpora-
tions that aim to silence whistleblowers limits open access
to the Internet [61], thereby disrupting the free ﬂow of in-
formation and ideas as well as preventing citizens and em-
ployees from sharing their own information with the world.
To do this, repressive regimes leverage IP-address blocking,
DNS hijacking, and TCP content ﬁltering to block access
to certain destinations or to prevent certain forms of con-
tent from being transmitted [3, 33]. To ensure compliance
and to detect undercover political/social activists, repres-
sive regimes also monitor usage by leveraging Deep Packet
Inspection (DPI) and other technologies [33]. Consequences
of non-compliance can be severe, ranging from identiﬁcation
and termination of employment to life-threatening prosecu-
tions under repressive governments. Manipulating access to
the Internet seems increasingly important in silencing cor-
porate misconduct and for repressive governments to retain
their power. Recent events in Tunisia, Libya, and the rest
of the Middle East give strong indications that oppressive
regimes can even be overthrown by the power of people mo-
bilized to ﬁght by organizing, communicating, and raising
awareness through use of the Internet.
To help Internet users retain openness of communication,
a number of systems have been developed, including anti-
censorship and anonymous communication systems [2, 9, 13,
17, 30]. These systems, composed of computer and network-
ing technologies, enable evasion of monitoring, blocking, and
tracing of the information over the Internet. HTTP prox-
ies [1, 9, 13] are the early circumvention tools that perform
simple proxying of the HTTP requests in order to evade
the IP-blocking and DNS hijacking techniques used by the
early censors. The use of advanced content ﬁltering by the
censors [3, 15] led to the advent of more sophisticated cir-
cumvention tools such as Ultrasurf [2] and Psiphon [30].
These systems evade blocking techniques by avoiding ﬁre-
walls and content-ﬁltering systems. To evade monitoring,
anonymous communication systems, such as Tor [17], were
developed. These systems aim to hide the destinations a
user visits from outside observers. Diﬀerent designs have
been proposed for anonymous communication, including the
onion routing mechanisms [53] and the mix networks [12],
each having diﬀerent points of strengths and weaknesses.
While these systems are of great beneﬁt, they share one
common shortcoming: they do not hide the fact that the user
187is using these technologies. For example, a repressive regime
in control of its nation’s networks may not be able to detect
which remote sites a Tor user is visiting, but it will be able
to detect that the user is using Tor. This presents several
problems. It calls attention to certain users of these services,
which may bring about further investigation or detainment.
In addition, if use of these services can be detected, access to
them can also be blocked. For example, relays that run the
Tor service have been blacklisted by several countries [4].
To address these issues, we need technologies that pro-
vide unobservable communication that circumvent monitor-
ing and censorship technologies. As a ﬁrst step in that di-
rection, we describe Cirripede, a platform for unobservable
communication with Internet destinations. From the per-
spective of a monitoring entity, a user of Cirripede appears
to be making regular network connections, while the user is
actually getting connected to destinations that are forbid-
den by that monitoring entity. To do this, Cirripede requires
in-network support, through conﬁguration changes and de-
ployment of overlay nodes outside of the repressive regime’s
network. We envision these in-network changes may be
oﬀered as a service by some participating ISPs, or man-
dated/supported by non-repressive governments (or NGOs)
to encourage the freedom of speech abroad.
In order to use Cirripede for the communication, a user
needs to be registered in the system. This is performed by
using covert channels inside the TCP headers of legitimate
traﬃc. We design a cryptographic protocol that ensures that
a client’s registration messages can only be recognized by
the Cirripede registration servers, whereas anyone else can-
not distinguish them from regular traﬃc. The protocol uses
public-key technology to eliminate the need of a (long-term)
shared key between the Cirripede service and its clients.
The list of the registered clients is provided to border
routers of participating ISPs, which deﬂect traﬃc from the
clients to a Cirripede proxy. The proxy tunnels communica-
tion between the client and its true destination by replacing
the encrypted payload of an HTTPS connection seemingly
destined to a benign site. This provides a high-bandwidth
channel that can be used to access a wide range of Internet
services, including blocked websites and anonymous com-
munication systems such as Tor. By strategically placing
deﬂecting routers in the Internet core, it is possible to make
the Cirripede service available to a large user population—
we show that using only two tier-1 ASes can deliver Cir-
ripede service to all Internet hosts.
In this case, censors
cannot block access to Cirripede without blocking a signif-
icant fraction of all Internet sites. Cirripede can operate
on the existing router infrastructure using oﬀ-the-shelf net-
working tools, with low-cost commodity servers providing
the registration and proxy services.
The rest of this paper is organized as follows; in Section 2,
we deﬁne the problem targeted in this paper and describe
the system model and assumptions. We describe the Cir-
ripede design in Section 3. In Section 4, we address some
technical and security issues of Cirripede in practice. Sec-
tion 5 describes our prototype implementation on commod-
ity hardware and opensource software. Section 6 describes
a laboratory evaluation of our prototype implementation as
well as studies Cirripede’s usability under diﬀerent deploy-
ment scenarios. In Section 7 we discuss the related work.
Finally, the paper is concluded in Section 8.
2. PROBLEM STATEMENT AND THREAT
MODEL
We consider the following problem: a client is being mon-
itored by its host ISP, which we will call the warden. (Note
that we use the term ISP loosely here; in the case of China,
for example, the warden is comprised of all of the Chinese
ISPs and monitors all traﬃc leaving China.) The client
aims to communicate unobservably with a covert destina-
tion, without this communication being detected by the war-
den either directly or indirectly (by, e.g., observing that the
client is using some sort of anonymous communication sys-
tem). We assume that the warden can inspect the entirety
of the traﬃc between the client and the outside world. Ad-
ditionally, the warden can block traﬃc with certain destina-
tions (including the covert destination), based on simple IP
ﬁltering and/or deep packet inspection. We assume, how-
ever, that the warden is only willing to perform selective
blocking and is unwilling to block Internet access entirely,
use a small “white list” of allowed sites, or block all HTTPS
(port 443) traﬃc. As evidenced by the shutdown of Internet
access in Egypt in January of 2011, there are some wardens
who might take the above actions; we feel, however, that in
the majority of cases, the wardens will be reluctant to take
such drastic steps. (Indeed, the Internet shutdown in Egypt
lasted only a week.) On the other hand, we assume that
the warden is willing to block certain web sites and services
(even popular ones) if it learns that they are being used to
circumvent blocking.
Finally, we assume that the client is not privy to any secret
information that is unavailable to the warden. In particular,
we assume that the warden is aware of all the details of the
system design, while the client relies on public information
only. This is in contrast to previous proxy-based designs
that assume, at a minimum, that the warden cannot learn
the addresses of all proxies, yet must make the same proxy
addresses available to a large population of users.
In our
case, the client only needs to obtain a public key of the
system, which we assume is also available to the warden; we
also assume that the warden can identify where the relevant
proxies are located but is unable to prevent access to them
without blocking a signiﬁcant fraction of all Internet sites.
We assume that the warden does not actively tamper with
the traﬃc sent by the client; we leave unobservability with
respect to more active wardens to future work.
3. Cirripede ARCHITECTURE
The architecture of Cirripede is shown in Figure 1. The
main components are:
• Client (C): the Internet user who aims to establish
an unobservable connection with a covert destination
(CD).
• Warden ISP: the network provider hosting client C.
• Covert destination (CD): a website, access to which is
blocked by the warden ISP.
• Overt destination (OD): a website, access to which
is allowed by the warden ISP. C communicates with
this destination overtly to provide a carrier channel
for covert communication with CD.
• Participating ISP: an ISP who participates in Cirri-
pede by deﬂecting network traﬃc to Cirripede servers.
This ISP must be on the (forward) network path from
C to OD.
188• Cirripede registration server (RS ): a server that is
part of the Cirripede infrastructure, used for register-
ing clients who want to use the Cirripede service.
• Cirripede service proxy (SP ): another server, also part
of the Cirripede infrastructure, that connects with CD
and proxies communications with it over the overt com-
munication stream between C and OD.
• Deﬂecting router (DR): an Internet router, owned by a
participating ISP, that deﬂects traﬃc from a registered
client C to the service proxy SP .
We next provide an overview of the operation of Cirripede.
1. Client registration: A client C who wishes to use the
Cirripede service ﬁrst must register with Cirripede.
Since its traﬃc is observed by the warden, C uses a
covert channel in TCP headers to signal its intent to
register and to establish a secret key, shared with Cir-
ripede, to be used in later communication. The de-
ﬂecting router DR mirrors part of all TCP traﬃc it
sees to the registration server RS , which detects the
covert registration message and instructs DR to redi-
rect HTTPS traﬃc from C to the service proxy SP .
2. Cover connection: After registration, C makes a TCP
connection with the overt destination OD, which is
deﬂected by DR to SP .
3. Covert communication: C performs a TLS handshake
with OD, which SP interposes upon. After the hand-
shake, SP disconnects from OD and takes over the
TLS connection, which is used to tunnel communica-
tion between C and CD.
We detail these steps in the following sections.
3.1 Client registration
The ﬁrst step in using Cirripede is registration. The client
must send a covert message to the registration server while
avoiding detection by the warden ISP. We chose to use a
covert channel embedded in TCP initial sequence numbers
(ISNs) [41]. Each endpoint of a TCP connection selects
a new initial sequence number for each connection, to pre-
vent potential confusion between diﬀerent TCP sessions that
use the same ports [44]. These sequence numbers, how-
ever, should also be diﬃcult to predict [6]. Modern oper-
ating systems, therefore, include a random component in
the ISN generation that can be used to carry a covert mes-
sage. Murdoch and Lewis [41] describe a covert channel that
can embed 24 bits of covert information inside an ISN while
faithfully mimicking the ISN generation algorithms of either
Linux or OpenBSD. We adopt this channel for the purposes
of our registration protocol. One particular advantage of us-
ing ISNs is that they are observed in the very ﬁrst packet of
the TCP session (the “SYN” packet); thus, to look for regis-
trations sent over this channel, the registration server needs
only examine a small fraction of the total packets seen by
the deﬂection router. (See Section 7 for more details.) Each
registration is valid for a registration time interval T to min-
imize the eﬀect of failures, as described later.
3.1.1 Registration Protocol
The client uses the TCP ISN covert channel to announce
its intention to use Cirripede. A simple approach would be
to embed a special tag inside the ISN that will be recognized
by the registration server. This, however, only obscures the
behavior of the client from a warden who is completely un-
aware of Cirripede; if Cirripede became widely used, the
warden could start looking for the embedded tag directly. To
provide stronger protection from detection, we use a cryp-
tographic registration protocol based on Diﬃe-Hellman key
exchange [52].
The registration server creates a secret key kRS and a
Diﬃe-Hellman public key KRS = gkRS , using some group
G = hgi where the computational Diﬃe-Hellman assump-
tion (CDH) is believed to hold. The client generates its own
secret key kC and public key KC = gkC and sends it to
the registration server over the covert channel. This allows
the client and the registration server to establish a shared
key, kC,RS = gkRS kC , which is then used to generate a reg-
istration tag. In particular, the shared key is used to seed
a cryptographically-strong pseudo-random number genera-
tor (PRNG), which is then used to produce an m-bit tag τ .
Note that a secure PRNG will ensure that anyone not in pos-
session of the secret key cannot distinguish it from random;
we chose to use the AES-128 cipher in counter mode as the
PRNG. Altogether, the client sends the following message
over the covert channel:
KC ||ﬁrst m bits of PRNG(kC,RS )
To implement the Diﬃe-Hellman protocol, we chose to
use Curve25519 [8], a state-of-the-art elliptic-curve Diﬃe-
Hellman design. Curve25519 provides a high level of secu-
rity and has a very fast implementation due to Bernstein1. It
also uses a bit string encoding of group elements that makes
it diﬃcult for the warden to distinguish KC from random
to detect the use of Cirripede. The underlying group is an
elliptic curve over Fp, where p = 2255 − 19, thus a uniformly