title:Blackbox traceable CP-ABE: how to catch people leaking their keys
by selling decryption devices on ebay
author:Zhen Liu and
Zhenfu Cao and
Duncan S. Wong
Blackbox Traceable CP-ABE: How to Catch People Leaking
Their Keys by Selling Decryption Devices on eBay
Shanghai Jiao Tong University
Shanghai Jiao Tong University
Zhen Liu
Shanghai, China
City University of Hong Kong
Hong Kong SAR, China
PI:EMAIL
Zhenfu Cao
Shanghai, China
PI:EMAIL
Duncan S. Wong
City University of Hong Kong
Hong Kong SAR, China
PI:EMAIL
ABSTRACT
In the context of Ciphertext-Policy Attribute-Based Encryp-
tion (CP-ABE), if a decryption device associated with an
attribute set SD appears on eBay, and is alleged to be able
to decrypt any ciphertexts with policies satisﬁed by SD, no
one including the CP-ABE authorities can identify the mali-
cious user(s) who build such a decryption device using their
key(s). This has been known as a major practicality concern
in CP-ABE applications, for example, providing ﬁne-grained
access control on encrypted data. Due to the nature of CP-
ABE, users get decryption keys from authorities associated
with attribute sets. If there exists two or more users with
attribute sets being the supersets of SD, existing CP-ABE
schemes cannot distinguish which user is the malicious one
who builds and sells such a decryption device. In this pa-
per, we extend the notion of CP-ABE to support Blackbox
Traceability and propose a concrete scheme which is able to
identify a user whose key has been used in building a decryp-
tion device from multiple users whose keys associated with
the attribute sets which are all the supersets of SD. The
scheme is eﬃcient with sub-linear overhead and when com-
pared with the very recent (non-traceable) CP-ABE scheme
due to Lewko and Waters in Crypto 2012, we can consider
this new scheme as an extension with the property of fully
collusion-resistant blackbox traceability added, i.e. an adver-
sary can access an arbitrary number of keys when building a
decryption device while the new tracing algorithm can still
identify at least one particular key which must have been
used for building the underlying decryption device. We show
that this new scheme is secure against adaptive adversaries
in the standard model, and is highly expressive by support-
ing any monotonic access structures. Its additional trace-
ability property is also proven against adaptive adversaries
in the standard model.
As of independent interest, in this paper, we also consider
another scenario which we call it “found-in-the-wild ”. In this
scenario, a decryption device is found, for example, from
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for prof t or commercial advantage and that copies bear this notice and the full cita-
tion on the f rst page. Copyrights for components of this work owned by others than
ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or re-
publish, to post on servers or to redistribute to lists, requires prior specif c permission
and/or a fee. Request permissions from permissions@acm.org.
CCS’13, November 4–8, 2013, Berlin, Germany.
Copyright 2013 ACM 978-1-4503-2477-9/13/11 ...$15.00.
http://dx.doi.org/10.1145/2508859.2516683.
a black market, and reported to an authority (e.g. a law
enforcement agency). The decryption device is found to be
able to decrypt ciphertexts with certain policy, say A, while
the associated attribute set SD is missing. In this found-in-
the-wild scenario, we show that the Blackbox Traceable CP-
ABE scheme proposed in this paper can still be able to ﬁnd
the malicious users whose keys have been used for building
the decryption device, and our scheme can achieve selective
traceability in the standard model under this scenario.
Categories and Subject Descriptors
E.3 [Data Encryption]: Public key cryptosystems
Keywords
Attribute-Based Encryption; Blackbox Traceability
1.
INTRODUCTION
Ciphertext-Policy Attribute-Based Encryption (CP-ABE),
introduced by Goyal et al. [11], is a versatile one-to-many en-
cryption mechanism which enables ﬁne-grained access con-
trol over encrypted data. Suppose Alice wants to encrypt a
message for all PhD students and alumni in the Department
of Mathematics, but she does not know or is not possible to
ﬁnd out the identities of all the eligible receivers, and the set
of eligible receivers could also be dynamic. Intuitively, Alice,
in this example, is to encrypt a message under “(Mathemat-
ics AND (PhD Student OR Alumni))”, which is an access
policy deﬁned over descriptive attributes, so that only those
receivers who have their decryption keys associated with the
attributes which satisfy this policy can decrypt.
Traditional public key encryption and identity-based en-
cryption [23, 3] are ineﬃcient to realize the requirement in
the example above as they are for one-to-one encryption.
Broadcast Encryption (BE) [8] may not be suitable either
as the encryptor in BE has to know and specify the exact
identities/indices of the receivers. In CP-ABE, an authority
issues diﬀerent decryption keys to each user based on the at-
tributes the user possesses. During encryption, an encryptor
speciﬁes an access policy for the resulting ciphertext. If and
only if a receiver’s attributes satisfy the access policy of the
ciphertext can the receiver decrypt the ciphertext.
Among the CP-ABE schemes recently proposed [2, 7, 10,
24, 15, 20, 12, 16], progress has been made on the schemes’
security, access policy expressivity, and eﬃciency. In [16],
Lewko and Waters proposed a new prooﬁng technique and
475obtained a CP-ABE which is fully secure (i.e. provably se-
cure against adaptive adversaries in the standard model),
highly expressive (i.e. supporting any monotonic access struc-
tures) and eﬃcient, and additionally eliminates the one-use
restriction that previous schemes [15, 20] have. Speciﬁcally,
the security proof in [15, 20] relies on the one-use restriction
that a single attribute can only be used once in a policy, and
directly extending the schemes in [15, 20] to allow attribute
reuse would incur signiﬁcant tradeoﬀs in eﬃciency.
One of the major practicality issues of CP-ABE to date is
the lacking of eﬀective solutions to identify malicious users
which intentionally expose their secret decryption keys, for
example, for ﬁnancial gain. Due to the nature of CP-ABE,
access policies associated with the ciphertexts do not have to
contain the exact identities of the eligible receivers. Instead,
access policies are role-based and the attributes are gener-
ally shared by multiple users. For example, both Bob (with
attributes {Bob, Alumni, Mathematics}) and Tom (with at-
tributes {Tom, Alumni, Mathematics}) could share a de-
cryption key corresponding to attributes {Alumni, Mathe-
matics} and be able to decrypt the ciphertext in the exam-
ple above, while the key has no identity information. As
a result, a malicious user, with his attributes shared with
multiple other users, might have an intention to leak the
corresponding decryption key or some decryption privilege
in the form of a decryption blackbox/device in which the
decryption key is embedded, for example, for ﬁnancial gain
or for some other incentives, as there is little risk of getting
caught.
This is an interesting problem in practice as leaking a de-
cryption key or a more advanced decryption device/blackbox
may entail ﬁnancial gain and even better, the malicious user
has very little risk of getting caught. To address this prob-
lem, we require a CP-ABE system to support traceability.
There are two levels of traceability. Level one is Whitebox
Traceability, by which given a well-formed decryption key as
input, a tracing algorithm can ﬁnd out the user which owns
the key. This also includes a scenario that a malicious user
sells a new well-formed decryption key for ﬁnancial gain, and
the new decryption key is created from his own key.
Level two is Blackbox Traceability, by which given a de-
cryption blackbox/device, while the decryption key and even
the decryption algorithm could be hidden, the tracing algo-
rithm, which treats the decryption blackbox as an oracle,
can still ﬁnd out the malicious user whose key must have
been used in constructing the decryption blackbox.
The problem of building a secure CP-ABE supporting
traceability has recently been studied in [18, 17, 19]. How-
ever, as we will review that an expressive Blackbox Traceable
CP-ABE is yet to be built: (1) the ciphertext access policies
in [18, 17] only support a single AND gate with wildcard; (2)
the traceable CP-ABE in [19] is as fully secure, highly ex-
pressive and eﬃcient as a conventional CP-ABE such as the
one in [15], but it only supports level one Whitebox Trace-
ability, i.e., it deters malicious users from leaking or selling
well-formed decryption keys, but it cannot deter them from
selling decryption blackboxes/devices. Below is an example
on the importance of achieving Blackbox Traceability.
Key-like Decryption Blackbox for Sale. Using his
decryption key (or the decryption keys from multiple col-
luded malicious users), a malicious user builds a decryption
blackbox/device (i.e. a CP-ABE Decryption Blackbox) and
sells it on eBay for ﬁnancial gain. To invalidate the possible
whitebox tracing algorithms, the seller keeps the embedded
decryption keys and (possibly complicated) algorithms hid-
den and the device works as a decryption blackbox. Then, to
attract potential buyers, the seller describes and advertises
that the decryption blackbox functions like a decryption key
associated with an attribute set SD, i.e., if a ciphertext ac-
cess policy can be satisﬁed by SD, the device can decrypt
the ciphertext. For simplicity, we call such a decryption
blackbox as a key-like decryption blackbox . In practice,
such a key-like decryption blackbox could be quite useful
and deemed to be very attractive to potential buyers, and
the resulting ﬁnancial gain could be a big incentive for ma-
licious users to build and sell such a blackbox.
1.1 Our Results
In this paper, we propose a new CP-ABE which is fully
secure (i.e. provably secure against adaptive adversaries in
the standard model), highly expressive (i.e. supporting any
monotonic access structures), and blackbox traceable. Fur-
thermore, this new CP-ABE achieves fully collusion-resistant
blackbox traceability, that is, the tracing algorithm can ﬁnd
out at least one of the malicious users even if there are an ar-
bitrary number of malicious users colluding by pulling all of
their decryption keys together when building a key-like de-
cryption blackbox. Note that collusion-resistant traceability
is orthogonal to collusion-resistant security, which is the pri-
mary requirement of CP-ABE. In this paper, traceability is
regarded as an additional feature besides the traditional CP-
ABE full security, high expressivity and eﬃciency.
In addition, the traceability of the scheme is public, that
is, anyone can run the tracing algorithm with no additional
secret needed. When compared with the most eﬃcient con-
ventional (non-traceable) highly expressive CP-ABE cur-
rently available, this new scheme adds the public and fully
collusion-resistant blackbox traceability with the price of
adding only O(√K) elements in the ciphertext and public
key, rather than expanding the sizes linearly with K, where
K is the number of users in the system, while the private
key size and decryption eﬃciency mainly remain compara-
ble and are independent of the value of K.
To the best of our knowledge, this is the ﬁrst CP-ABE that
simultaneously supports public and fully collusion-resistant
blackbox traceability, full security, high expressivity, and
without the one-use restriction, and for a system with fully
collusion-resistant blackbox traceability, sub-linear overhead
is the most eﬃcient one to date. Table 1.1 compares our
scheme with that in [15, 16, 19] in terms of performance
and features (i.e. traceability and one-use restriction), as all
the four schemes are fully secure and highly expressive.
In Sec. 2, following the standard deﬁnition of conventional
CP-ABE, we give a ‘functional’ deﬁnition of CP-ABE, in
which we specify a unique index k ∈ {1, . . . ,K} to each
decryption key, that later will enable us to deﬁne a trac-
ing algorithm Trace which supports fully collusion-resistant
blackbox traceability against key-like decryption blackbox.
We call the resulting scheme a Blackbox Traceable CP-ABE
(or BT-CP-ABE for short).
On the construction of BT-CP-ABE, instead of build-
ing one directly, we ﬁrst deﬁne a simpler primitive called
Augmented CP-ABE (or AugCP-ABE for short), then we
extend it to BT-CP-ABE. In Sec. 3.1, we deﬁne AugCP-
ABE as (SetupA, KeyGenA, EncryptA, DecryptA), which is sim-
ilar to BT-CP-ABE, except that the encryption algorithm
476Ciphertext Private Key Public Key Pairing Computation
Traceability
Without One-Use
[15]
[16]
[19]
this work
Size
2l + 2
2l + 3
2l + 3
2l
+17√K
Size
|S| + 2
|S| + 3
|S| + 4
|S| + 4
Size
|U| + 3
|U| + 4
|U| + 4
|U| + 3
+4√K
in Decryption
2|I| + 1
2|I| + 2
2|I| + 1
2|I| + 10
No
No
whitebox
public, blackbox,
fully collusion-resistant
Restriction
×
√
×
√
1 All the four schemes are fully secure and highly expressive (i.e. supporting any monotonic access structures).
2 Let l be the size of an access policy, |S| the size of the attribute set of a private key, |U| the size of the attribute universe,
and |I| the number of attributes in a decryption key that satisﬁes a ciphertext’s access policy.
Table 1: Comparison with the conventional CP-ABE in [15, 16] and the traceable CP-ABE in [19]
EncryptA(PP, M, A, ¯k) takes one more parameter ¯k ∈ {1, . . . ,
K+1}, and the encrypted message M can be recovered using
a decryption key SKk,S, which is identiﬁed by k ∈ {1, . . . ,K}
and described by an attribute set S, provided that (k ≥
¯k) ∧ (S satisﬁes A), where A is an access policy. Also, we
deﬁne the security of AugCP-ABE using message-hiding and
(encryption) index-hiding games. In Sec. 3.2, we show how
to transform an AugCP-ABE scheme with message-hiding
and index-hiding properties to a fully secure BT-CP-ABE
scheme. In Sec. 4, we propose an eﬃcient and highly expres-
sive AugCP-ABE scheme, and show that it is message-hiding
and index-hiding against adaptively adversaries in the stan-