title:AuthCTC: Defending Against Waveform Emulation Attack in Heterogeneous
IoT Environments
author:Sihan Yu and
Xiaonan Zhang and
Pei Huang and
Linke Guo and
Long Cheng and
Kuangching Wang
AuthCTC: Defending Against Waveform Emulation Attack in
Heterogeneous IoT Environments
Sihan Yu
Clemson University
Clemson, SC, USA
PI:EMAIL
Linke Guo
Clemson University
Clemson, SC, USA
PI:EMAIL
Xiaonan Zhang
Clemson University
Clemson, SC, USA
PI:EMAIL
Long Cheng
Clemson University
Clemson, SC, USA
PI:EMAIL
Pei Huang
Clemson University
Clemson, SC, USA
PI:EMAIL
Kuangching Wang
Clemson University
Clemson, SC, USA
PI:EMAIL
ABSTRACT
Widely deployed IoT devices have raised serious concerns for the
spectrum shortage and the cost of multi-protocol gateway deploy-
ment. Recent emerging Cross-Technology Communication (CTC)
technique can alleviate this issue by enabling direct communication
among heterogeneous wireless devices, such as WiFi, Bluetooth,
and ZigBee on 2.4 GHz. However, this new paradigm also brings
security risks, where an attacker can use CTC to launch wireless
attacks against IoT devices. Due to limited computational capability
and different wireless protocols being used, many IoT devices are
unable to use computationally-intensive cryptographic approaches
for security enhancement. Therefore, without proper detection
methods, IoT devices cannot distinguish signal sources before ex-
ecuting command signals. In this paper, we first demonstrate a
new defined physical layer attack in the CTC scenario, named as
waveform emulation attack, where a WiFi device can overhear and
emulate the ZigBee waveform to attack ZigBee IoT devices. Then,
to defend against this new attack, we propose a physical layer de-
fensive mechanism, named as AuthCTC, to verify the legitimacy of
CTC signals. Specifically, at the sender side, an authorization code is
embedded into the packet preamble by leveraging the dynamically
changed cyclic prefix. A WiFi-based detector is used to verify the
authorization code at the receiver side. Extensive simulations and
experiments using off-the-shelf devices are conducted to demon-
strate both the feasibility of the attack and the effectiveness of our
defensive mechanism.
CCS CONCEPTS
• Security and privacy → Authorization; • Networks → Mo-
bile and wireless security.
Permission to make digital or hard copies of all or part of this work for personal or 
classroom use is granted without fee provided that copies are not made or distributed 
for profit or commercial advantage and that copies bear this notice and the full citation 
on the first page. Copyrights for components of this work owned by others than ACM 
must be honored. Abstracting with credit is permitted. To copy otherwise, or republish, 
to post on servers or to redistribute to lists, requires prior specific permission and/or a 
fee. Request permissions from permissions@acm.org.
ASIA CCS ’20, October 5–9, 2020, Taipei, Taiwan
© 2020 Association for Computing Machinery.
ACM ISBN 978-1-4503-6750-9/20/10. . . $15.00
https://doi.org/10.1145/3320269.3384726
KEYWORDS
Cross-Technology Communication; Waveform Emulation Attack;
Physical Layer Security
ACM Reference Format:
Sihan Yu, Xiaonan Zhang, Pei Huang, Linke Guo, Long Cheng, and Kuangch-
ing Wang. 2020. AuthCTC: Defending Against Waveform Emulation At-
tack in Heterogeneous IoT Environments. In Proceedings of the 15th ACM
Asia Conference on Computer and Communications Security (ASIA CCS ’20),
October 5–9, 2020, Taipei, Taiwan. ACM, New York, NY, USA, 13 pages.
https://doi.org/10.1145/3320269.3384726
1 INTRODUCTION
The wide deployment of the Internet of Things (IoT) has resulted
in serious problems in terms of wireless spectrum scarcity and de-
vice coexistence [37]. A large number of end IoT devices, although
using different wireless protocols, still interfere with each other in
the already-crowded industrial, scientific and medical (ISM) band.
To tackle this issue, Cross-Technology Communication (CTC) pro-
vides a viable solution, which enables direct communication among
devices adopting different wireless protocols including WiFi, Blue-
tooth, and ZigBee [24]. In contrast to existing indirect methods
such as deploying a multi-protocol gateway, CTC is able to reduce
the cost of gateway deployment and avoid repeated data transmis-
sion with different wireless protocols. However, the development of
CTC also brings potential challenges to the security of IoT devices.
For example, in a designated CTC application scenario, a ZigBee
smart lock is allowed to receive commands (LOCKING/UNLOCKING)
from an authorized ZigBee gateway and some other WiFi devices
(e.g., smartphone or tablet) for enhancing the efficiency of spec-
trum utilization. Meanwhile, all of these commands have the same
content since they perform the same function. Then, it is very hard
for the smart lock to differentiate whether or not the command
comes from an authorized source. As a result, this new communica-
tion paradigm provides opportunities for a WiFi-based attacker to
maliciously control a broader range of IoT devices, such as smart
locks, smart outlets, and security cameras, all of which are con-
trolling critical functionalities in the future smart home. Therefore,
how to differentiate whether the command comes from a valid
gateway, a legitimate CTC device, or an illegitimate CTC device
becomes a challenging issue. Given that most IoT devices have
limited computational capabilities, accomplishing such a task is
nearly infeasible.
Session 1: IoT Security and PrivacyASIA CCS '20, October 5–9, 2020, Taipei, Taiwan20In this work, we present a new physical-layer attack in the het-
erogeneous IoT environment with a focus on the CTC between
WiFi and ZigBee protocol, named as Waveform Emulation At-
tack (WEA). Specifically, a WiFi-based attacker is able to eavesdrop
on the communication channel between a ZigBee gateway and a
ZigBee end device, then, emulates the eavesdropped signal to attack
the ZigBee end device. Different to traditional replay attacks, the
newly proposed WEA has the following uniquenesses: (1) from the
perspective of attackers, the replay attack is launched by homoge-
neous devices whereas WEA is launched by heterogeneous devices;
(2) from the perspective of defenders, traditional defensive schemes
intend to prevent replays whereas the WEA defender allows replays
but wants to check the legitimacy of the signal source for ensuring
the authenticity of signals. Additionally, attacking ZigBee devices
with WiFi devices has the following advantages: (1) the attacker
has a stronger camouflage ability, where he can disguise himself
as a passerby with a commonly-used smartphone; (2) the attacker
can launch an attack at a farther distance because of the longer
transmission range and stronger penetration capability of WiFi
signals. However, in terms of defensive approaches, existing cryp-
tographic methods (e.g., AES-128 [29]) may not work to prevent
WEA since most of the cryptographic methods used in wireless
protocols are applied in the higher layer, where the objects being
processed are hexadecimal symbol sequences. Since both the em-
ulated waveform and the original waveform will be decoded into
the same sequence at the physical layer, they have no difference
when they are transmitted to the higher layer.
To defend against WEA, we propose a physical layer defensive
mechanism, named as AuthCTC. Our idea is to embed an authoriza-
tion code at the sender side, which can be verified at the receiver
side with a WiFi-based detector. The embedded authorization code
will dynamically change over time, making attackers unable to
predict or re-use the overheard code for attacking purposes. The
main contributions of this paper are as follows:
• We define and demonstrate the existence of a new physical
layer attack in the heterogeneous IoT environment, where
current security mechanisms are unable to thwart.
• We propose a novel detection method to prevent the WEA.
Without using higher-layer cryptographic approaches, the
defensive mechanism is implemented in the physical layer
to achieve high efficiency and low cost.
• Different to existing schemes [49] that simply regard CTC
signal as malicious attacks, our work prevents illegitimate
CTC without sacrificing the benefits of legitimate CTC.
• We perform extensive experiments on both the USRP plat-
form and a self-designed prototype to validate the existence
of the WEA and further demonstrate the effectiveness of the
defense strategy.
The rest of this paper is organized as follows: Section 2 introduces
the motivation of proposing AuthCTC. Section 3 and Section 4
describe the process of WEA and AuthCTC respectively. Section
5 demonstrates the attacking performance and the effectiveness
of defensive mechanism through extensive experiments. Section
6 discusses related works about CTC and physical layer security.
Section 7 concludes the paper.
2 MOTIVATION
2.1 New Challenges Brought by CTC
Cross-Technology Communication (CTC) [5, 7, 9, 10, 13–15, 18–
20, 22, 24, 25, 40, 45, 53, 54] enables two heterogeneous devices to
communicate directly without the help of a multi-protocol gateway,
which enhances the interoperation of different wireless protocols
and the efficiency of spectrum utilization. However, CTC also brings
new security risks to IoT devices, e.g., an end device will face po-
tential attacks from many different types of wireless devices. If
CTC is allowed and serves as a normal operation, the content being
transmitted tends to be relatively simple, because we cannot expect
a device knows well about the security mechanisms deployed on
other heterogeneous devices. For example, if we use a smartphone
to directly control a ZigBee smart lock, then, we should tell the
LOCKING/UNLOCKING command to the smartphone and allow the
replay, because the smartphone does not know the secret key of Zig-
Bee cryptosystem and cannot generate a new encrypted command
by itself. Since an illegitimate CTC user can overhear and replay
the command as well, ZigBee end devices may receive signals from
ZigBee gateway, legitimate CTC users, and illegitimate CTC users.
Therefore, how to differentiate the legitimacy of received signals
becomes a challenging problem.
2.2 Existing Security Mechanisms in IoT
In recent years, many security mechanisms (e.g. [16, 27, 35, 39])
adopt machine learning methods to achieve anomaly detection.
Aegis [35] observes different user activities and usage patterns and
builds a contextual model to differentiate malicious and benign
behavior. Hafeez et al. [16] propose a traffic morphing technique
that shapes network traffic thus making the adversary more diffi-
cult to identify IoT devices and their activities. HomeSnitch [27]
presents a framework for classifying IoT device communication by
semantic behaviors (e.g. heartbeat, motion detection), which can
help identify previously unseen devices and behaviors. However,
this kind of classification method (i.e. classify the user behavior
into malicious and benign) is invalid when faced with WEA, be-
cause WEA completely mimics the user’s behavior, the classifier
will inevitably classify the mimic communication traffic into benign
behavior.
Other classic security mechanisms adopted in ZigBee IoT de-
vices are mainly the cryptographic methods [36], such as AES-128
[29]. However, the use of cryptographic methods has two main
disadvantages: (1) It is hard to differentiate the source of received
packets when they have the same content. Although some tech-
niques (e.g., digital signature) can achieve the sender verification,
they depend on the uniqueness of timestamp or sequence number
to prevent replay attack, i.e., any signed ciphertext can only be
used for once, and the second time usage will be regarded as a
replay attack. However, the CTC scenario typically allows replay,
where the signed ciphertext can be replayed by various legitimate
CTC devices so that the non-repudiation property of the digital
signature is lost. As a result, this kind of method cannot be used
to differentiate the source of packets. (2) It limits the wider adop-
tion of CTC. Specifically, some cryptographic methods have the
property of defending against replay attacks, so the encrypted data
field of packets will be different for each time. As shown in Fig. 1,
Session 1: IoT Security and Privacy ASIA CCS '20, October 5–9, 2020, Taipei, Taiwan21these two packets are the smart bulb’s “TURNING ON” command we
overheard from a ZigBee gateway in different time slots. They have
the same function but with different data fields. However, WiFi
devices cannot generate this kind of encrypted packets, because
they do not know the secret key used in ZigBee systems. Secret
keys and their generating mechanism are the secrets of ZigBee
device manufacturer, they directly determine which devices can
join their network so that devices produced by other manufactur-
ers may be excluded from their network. However, WiFi devices
(e.g. smartphone) can be owned by anyone. If the ZigBee device
manufacturers allow arbitrary WiFi devices to know their secret
key and join their network, their security attributes will no longer
exist. Since the WiFi device cannot generate a new encrypted CTC
packet or replay an old packet (due to the usage of cryptographic
method), CTC completely loses its functionality.
MAC Payload
y
FCF
F
080
0
6
Destination
nn Source
ee Radius
s
a34a
0000
1e
n Source
Destination
FCF
F
080
0
000
6
FCF: Frame Control Field
FCF: F
FCF
ld
FF
0000
a34a
C t
l Fi
l
ee Radius
s
1e
Seq 
NumNum
11
Relay 
Count
Count
00
Security 
y y
Relay 
x Control Field
Index
I
x
C
Control Field
Index
00
28
Seq 
Num
Num
1b
Relay 
ou t
Count
00
Relay 
y y
Index
Index
x
00
MAC Payload
MAC Payload
M
Security 
o t o
Control Field
e d
28
Frame 
Counter
Counter
Counter
0d7f210
0
Frame 
Counter
Counter
ou te
147f210
0
it C d
MIC: Message Integrity Code
MIC
it
I tI
MM
Extended 
Source
Source
Source
b36efc0e
006f0d00
  Key Seq 
NumNum
00
Data
e8da3d6f30e37f
ae312d331ca39e
e
MIC
ca8d
8fdf
Extended 
Source
Source
Sou ce
b36efc0e
006f0d00
d d Key Seq 
Numu
00
Data
a0e9700ad742d3
72b53e52cff539
MIC
33 4e7c
c368
Figure 1: Encrypted ZigBee Packets
As a result, it is highly desirable that a security mechanism can
identify the source of packets even if they have the identical content
so that we can verify the legitimacy of received packets instead
of completely excluding them with the cryptographic methods.
As one of the few works in this field, Zhang et al. [49] propose
a physical layer detection method that uses constellation higher-
order statistic analysis to differentiate whether the received signal
is sent from a ZigBee device or a WiFi device. However, this work
regards any WiFi devices as potential attackers, which limits the
usage of CTC. Taking a step further, we ask, when CTC is allowed,
how to differentiate the legitimacy of received signals?
2.3 Adversarial Model
We decide to construct an attacking scenario according to the afore-
mentioned security risks. In our adversarial model, the attacker
uses a WiFi-based device with 64-QAM modulation. With our pro-
posed mechanism in Sec. 3, the attacker can eavesdrop on, decode
(i.e. demodulate ZigBee waveform into ZigBee symbol) and emu-
late arbitrary ZigBee packets. The eavesdropped ZigBee commands
can be either in plaintext or ciphertext, the attacker cannot and
doesn’t need to decrypt the ciphertext. The ZigBee system allows
commands to be replayed. Noise and other interference signals (e.g.,
WiFi) are allowed because the attacker can differentiate whether
the eavesdropped signal is a ZigBee signal or not.
In order to acquire a valid command, the attacker can analyze
the functionalities of eavesdropped packets based on the user’s ac-
tivities, the traffic patterns and the information of packets’ headers
(e.g. the source and destination addresses, which are in plaintext
even if a certain cryptographic method is used). For a multi-device
scenario, there are also some machine learning methods which can
be used to analyze the functionalities of packets, such as [1, 48].
2.4 Design Intuition of AuthCTC
To defend against WEA, we deploy a WiFi-based device in proximity
of IoT devices as the detector. If a legitimate CTC device wants to
send a packet, it can embed an authorization code in the preamble
of the packet. The detector can detect the authorization code at the
receiver side. If the received signal has the correct authorization
code, it is regarded as a legitimate CTC signal; If the received signal
doesn’t have the correct authorization code, it is regarded as an
illegitimate CTC signal and the detector will give an alarm to tell the
user that your IoT devices are being controlled by attackers. In our
scenario, we do not consider the "insider attack" (i.e. a legitimate
CTC device may be controlled by an adversary), as long as the
CTC device is legitimate, all the packets send by it are regarded
as legitimate packets. In our design, the authorization code will
change over time, so that an attacker cannot replay the previous
code or predict the next code.
3 WAVEFORM EMULATION ATTACK
3.1 Overview
We first present the overview of WEA, then provide a detailed de-
scription of each component. The process of WEA mainly contains
three steps: starting point detection, decoding, and signal emula-
tion, in which the first two steps correspond to the eavesdropping
process and the last step corresponds to the attacking process. Fig. 2
demonstrates the workflow of the standard WiFi physical layer [3],
where we mainly highlight the modules that are relevant to our
design and omit some irrelevant modules. We overwrite these func-
tions with the above three modules. In particular, the starting point
detection is to find the beginning of an eavesdropped ZigBee signal,
the decoding is to convert received waveform to symbol sequence,
and the signal emulation is to send ZigBee waveform with WiFi
hardware.
WiFi Waveform
Delay and
 Conjugate
Average of
Product
Complex
to Mag
Starting Point Detection
Average
of Mag2
Divide
d
Short and 
Long Sync
FFT
Size: 64
Frame
Equalizer
Decode 
MAC
WiFi MAC Frame
To Upper Layer Protocol
Decoding
WiFi MAC Frame From 
m 
Upper Layer Protocol
Interleaver
Interleaver
Header
Header
 Generator
Generator
Carrier
Carrier
 Allocator
Allocator
IFFT
IFFT
Size: 64
Size: 64
Cyclic
Cyclic
Prefixer
Prefixer
WiFi Waveform
Signal Emulation
Figure 2: Workflow of WiFi Physical Layer
3.2 Starting Point Detection
3.2.1 Existing Detection Methods. Since we use WiFi devices (which
have a broader bandwidth than ZigBee) to eavesdrop on ZigBee
signals, the obtained signals may include ZigBee signals, WiFi sig-
nals, and noise. Hence, the first step is the frame detection, i.e.,
determining whether a received signal is a ZigBee signal and where
is the starting point. Using WiFi devices to delimit ZigBee frames
is a new challenge. Existing works [3, 6, 14] exploit the repetitive
pattern of preamble (i.e., the ZigBee preamble is “00000000A7”)
to delimit frames. Fig. 3(a) shows their principle of frame delimit-
ing, which measures the similarity of two waveforms (i.e. signal