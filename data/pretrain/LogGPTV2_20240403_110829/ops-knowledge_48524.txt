It appears that you are attempting to install the Google Cloud SDK on a CentOS 6.8 server, but the installation process is using an older version of Python (2.6) located in `/usr/bin` instead of the newer version (2.7) installed in `/usr/local/bin`.

You have already tried modifying the `PATH` environment variable by running `export PATH=/usr/local/bin:$PATH`, but the issue persists. Hereâ€™s a more detailed approach to resolve this:

### Solution 1: Use an Alias
Create an alias for `python` to point to the desired version. Add the following line to your shell configuration file (e.g., `.bashrc` or `.bash_profile`):

```sh
alias python='/usr/local/bin/python'
```

Then, reload the shell configuration:

```sh
source ~/.bashrc  # or source ~/.bash_profile
```

### Solution 2: Update the Alternatives System
CentOS uses the `alternatives` system to manage different versions of software. You can set the default `python` command to point to Python 2.7.

First, check the current alternatives:

```sh
alternatives --display python
```

If Python 2.7 is not listed, add it:

```sh
alternatives --install /usr/bin/python python /usr/local/bin/python 2
```

Set the priority to make Python 2.7 the default:

```sh
alternatives --config python
```

Select the option corresponding to Python 2.7 when prompted.

### Solution 3: Modify the Shebang Line
If the Google Cloud SDK installer script explicitly uses the shebang line to call Python, you can modify the script to use the correct Python interpreter. Locate the script and change the first line (shebang line) to:

```sh
#!/usr/local/bin/python
```

### Solution 4: Use a Virtual Environment
Consider using a virtual environment to isolate the Python version used for the Google Cloud SDK. This ensures that the correct version of Python is used without affecting the system-wide configuration.

Install `virtualenv` if you haven't already:

```sh
pip install virtualenv
```

Create a new virtual environment:

```sh
virtualenv -p /usr/local/bin/python myenv
```

Activate the virtual environment:

```sh
source myenv/bin/activate
```

Now, try installing the Google Cloud SDK within this environment.

### Summary
By using one of the above methods, you should be able to ensure that the Google Cloud SDK installation uses the correct version of Python. If you continue to experience issues, please provide additional details so we can further assist you.