可用登录名或UID来指定文件的新属主。
 chovm dan newfile
+ 1s -1 newfile 
-IW---
1dan
rich
0 Sep 20 19:16 newfile
非常简单。chowm命令也支持同时改变文件的属主和属组。
 chowm dan.shared newfile
 le -1 newfile
-M-W-r--
1 dan
shared
0 Sep 20 19:16 newfile
如果你不嫌麻烦，可以只改变一个目录的默认属组。
---
## Page 155
140
第7章理解Linux文件权限
chown .rich nevfile
 1s -1 nevfile
-W=*
1 Gan
r1ch
0 Sep 20 19:16 newE11e
最后，如果你的Linux系统采用和用户登录名匹配的组名，可以只用一个条目就改变二者。
 choun teat. nevfile
 1s -1 nevfile
1 Cest
test
0 Sep 20 19:16 newE11e
chown命令采用一些不同的选项参数。-R选项配合通配符可以递归地改变子目录和文件的所
属关系。-h选项可以改变该文件的所有符号链接文件的所属关系。
说明只有root用户能够改变文件的属主。任何属主都可以改变文件的属组，但前提是属主必须
是原岛组和目标岛组的成美。
chgrp命令可以更改文件或目录的默认属组。
$ chgxp shared newfi1e
$ 1s -1 nevfile
-Wr=*
1 rich shared
0 Sep 20 19:16 newE11e
用户账户必须是这个文件的属主，除了能够更换属组之外，还得是新组的成员。现在shared
组的任意一个成员都可以写这个文件了。这是Linux系统共享文件的一个途径。然而，在系统中
给一组用户共享文件也会变得很复杂。下一节会介绍如何实现。
7.5共享文件
可能你已经猜到了，Limux系统上共享文件的方法是创建组。但在一个完整的共享文件的环
境中，事情会复杂得多。
在7.3节中你已经看到，创建新文件时，Linux会用你默认的UID和GID给文件分配权限。想
让其他人也能访问文件，要么改变其他用户所在安全组的访问权限，要么就给文件分配一个包含
其他用户的新默认属组。
如果你想在大范围环境中创建文档并将文档与人共享，这会很烦琐。幸好有一种简单的方法
可以解决这个问题。
Linux还为每个文件和目录存储了3个额外的信息位。
口设置用户ID（SUID）：当文件被用户使用时，程序会以文件属主的权限运行。
口设置组ID（SGID）：对文件来说，程序会以文件属组的权限运行；对目录来说，目录中
创建的新文件会以目录的默认属组作为默认属组。
口粘着位：进程结束后文件还驻留（粘着）在内存中。
SGID位对文件共享非常重要。启用SGID位后，你可以强制在一个共享目录下创建的新文件
---
## Page 156
7.5共享文件
141
都属于该目录的属组，这个组也就成为了每个用户的属组。
SGID可通过chmod命令设置。它会加到标准3位八进制值之前（组成4位八进制值），或者在
符号模式下用符号s。
如果你用的是八进制模式，你需要知道这些位的位置，如表7-6所示。
表7-6chmodSUID、SGID和粘着位的八进制值
二进制值
八进制值
描述
000
0
所有位都清零
001
1
枯着位置位
010
N
SGID位置位
011
3
SGID位和粘着位都置位
100
4
SUID包置位
101
5
SUD位和粘着位都置位
110
6
SUD包和SGID位都置位
111
7
所有位都置位
因此，要创建一个共享目录，使目录里的新文件都能沿用目录的属组，只需将该目录的SGID
位置位。
$ nkdir testdir
XXMXR.tp
S 1α -1
 2 r1ch
rich
4096 Sep 20 23:12 testdir/
$ chgrp ahared testdir
$ chmod g+a teatdix
S 1a -1
drwxrwsrx
2 r1ch
shared
4096 Sep 20 23:12 teatdix/
$umask 002
$ cd testdir
$touch testfile
S 1a -1
total 0
V==-
1r1ch
shared
0 Sep 20 23:13 testfile
首先，用mkdir命令来创建希望共享的目录。然后通过chgrp命令将目录的默认属组改为包
含所有需要共享文件的用户的组（你必须是该组的成员）。最后，将目录的SGID位置位，以保证
目录中新建文件都用shared作为默认属组。
为了让这个环境能正常工作，所有组成员都需把他们的umask值设置成文件对属组成员可
写。在前面的例子中，umask改成了002，所以文件对属组是可写的。
做完了这些，组成员就能到共享目录下创建新文件了。跟期望的一样，新文件会沿用目录的
属组，而不是用户的默认属组。现在shared组的所有用户都能访问这个文件了。
---
## Page 157
142第7章理解Linux文件权限
7.6小结
本章讨论了管理Linux系统安全性需要知道的一些命令行命令。Linux通过用户ID和组ID来限
制对文件、目录以及设备的访问。Linux将用户账户的信息存储在/etc/passwd文件中，将组信息存
储在/etc/group文件中。每个用户都会被分配唯一的用户ID，以及在系统中识别用户的文本登录名。
组也会被分配唯一的组ID以及组名。组可以包含一个或多个用户以支持对系统资源的共享访问。
有若干命令可以用来管理用户账户和组。useradc命令用来创建新的用户账户，groupadd
命令用来创建新的组账户。修改已有用户账户，我们用usermod命令。类似的groupmoc命令用
来修改组账户信息。
Linux采用复杂的位系统来判定文件和目录的访问权限。每个文件都有三个安全等级：文件
的属主、能够访问文件的默认属组以及系统上的其他用户。每个安全等级通过三个访问权限位来
定义：读取、写人以及执行，对应于符号rwx。如果某种权限被拒绝，权限对应的符号会用单破
折线代替（比如r--代表只读权限）。
这种符号权限通常以八进制值来描述。3位二进制组成一个八进制值，3个八进制值代表了3
个安全等级。umask命令用来设置系统中所创建的文件和目录的默认安全设置。系统管理员通常
会在/etc/profile文件中设置一个默认的umask值，但你可以随时通过umask命令来修改自己的
umasxf。
chmoa命令用来修改文件和目录的安全设置。只有文件的属主才能改变文件或目录的权限。
不过root用户可以改变系统上任意文件或目录的安全设置。chown和chgrp命令可用来改变文件
默认的属主和属组。
本章最后讨论了如何使用设置组ID位来创建共享目录。SGID位会强制某个目录下创建的新
文件或目录都沿用该父目录的属组，而不是创建这些文件的用户的属组。这可以为系统的用户之
间共享文件提供一个简便的途径。
现在你已经了解了文件权限，下面就可以进一步了解如何使用实际的Linux文件系统了。下
一章将会介绍如何使用命令行在Limux上创建新的分区，以及如何格式化新分区以使其可用于
Linux虚拟目录。
---
## Page 158
第8章
管理文件系统
本章内容
口文件系统基础
口日志文件系统与写时复制文件系统
口文件系统管理
口逻辑卷布局
使用Linux逻辑卷管理器
使用Linux系统时，需要作出的决策之一就是为存储设备选用什么文件系统。大多数Linux发
行版在安装时会非常贴心地提供默认的文件系统，大多数入门级用户想都不想就用了默
认的那个。
使用默认文件系统未必就不好，但了解一下可用的选择有时也会有所帮助。本章将探讨Linux
世界里可选用的不同文件系统，并向你演示如何在命令行上进行创建和管理。
8.1
探索Linux文件系统
第3章讨论了Linux如何通过文件系统来在存储设备上存储文件和目录。Linux的文件系统为
我们在硬盘中存储的0和1和应用中使用的文件与目录之间搭建起了一座桥梁。
Linux支持多种类型的文件系统管理文件和目录。每种文件系统都在存储设备上实现了虚拟
目录结构，仅特性略有不同。本章将带你逐步了解Linux环境中较常用的文件系统的优点和缺陷。
8.1.1基本的Linux文件系统
Linux最初采用的是一种简单的文件系统，它模仿了Unix文件系统的功能。本节讨论了这种
文件系统的演进过程。
1.ext文件系统
Linux操作系统中引人的最早的文件系统叫作扩晨文件系统（extendedfilesystem，简记为ext）。
它为Linux提供了一个基本的类Unix文件系统：使用虚拟目录来操作硬件设备，在物理设备上按
定长的块来存储数据。
---
## Page 159
144
第8章管理文件系统
ext文件系统采用名为索引节点的系统来存放虚拟目录中所存储文件的信息。索引节点系统
录中的每一个文件在索引节点表中都有一个条目。ext文件系统名称中的extended部分来自其跟踪
的每个文件的额外数据，包括：
口文件名
口文件大小
口文件的属主
口文件的属组
口文件的访问权限
口指向存有文件数据的每个硬盘块的指针
Linux通过唯一的数值（称作索引节点号）来引用索引节点表中的每个索引节点，这个值是
创建文件时由文件系统分配的。文件系统通过索引节点号而不是文件全名及路径来标识文件。
2.ext2文件系统
最早的ext文件系统有不少限制，比如文件大小不得超过2GB。在Linux出现后不久，ext文件
系统就升级到了第二代扩展文件系统，叫作ex12。
如你所猜测的，ext2文件系统是ext文件系统基本功能的一个扩展，但保持了同样的结构。ext2
文件系统扩展了索引节点表的格式来保存系统上每个文件的更多信息。
ext2的索引节点表为文件漆加了创建时间值、修改时间值和最后访问时间值来帮助系统管理
员追踪文件的访间情况。ext2文件系统还将允许的最大文件大小增加到了2TB（在ext2的后期版
本中增加到了32TB），以容纳数据库服务器中常见的大文件。
除了扩展索引节点表外，exr2文件系统还改变了文件在数据块中存储的方式。ext文件系统常
见的问题是在文件写人到物理设备时，存储数据用的块很容易分散在整个设备中（称作碎片化，
fragmentation）。数据块的碎片化会降低文件系统的性能，因为需要更长的时间在存储设备中查找
特定文件的所有块。
保存文件时，exr2文件系统通过按组分配磁盘块来减轻碎片化。通过将数据块分组，文件系
统在读取文件时不需要为了数据块查找整个物理设备。
多年来，ext文件系统一直都是Linux发行版采用的默认文件系统。但它也有一些限制。索
引节点表虽然支持文件系统保存有关文件的更多信息，但会对系统造成致命的问题。文件系统
成的。
如果计算机系统在存储文件和更新索引节点表之间发生了什么，这二者的内容就不同步了。
ext2文件系统由于容易在系统前资或断电时损坏面臭名陷著。即使文件数据正常保存到了物理设
备上，如果索引节点表记录没完成更新的话，ex12文件系统甚至都不知道那个文件存在！
很快开发人员就开始尝试开发不同的Linux文件系统了。
---
## Page 160
8.1探索Linux文件系统
145
8.1.2日志文件系统
日志文件系统为Limux系统增加了一层安全性。它不再使用之前先将数据直接写人存储设备
再更新索引节点表的做法，而是先将文件的更改写人到临时文件（称作日志，journal）中。在数
据成功写到存储设备和索引节点表之后，再删除对应的日志条目
如果系统在数据被写入存储设备之前崩溃或断电了，日志文件系统下次会读取日志文件并处
理上次留下的未写人的数据。
Linux中有3种广泛使用的日志方法，每种的保护等级都不相同，如表8-1所示。
表8-1文件系统日志方法
方
法
措述
数据模式
索引节点和文件都会被写入日志：丢失数据风险低，但性能差
有序模式
只有索引节点数据会被写入日志，但只有数据成功写人后才删除：在性能和安全性之间取得了
良好的折中
回写模式
只有索引节点数据会被写入日志，但不控制文件数据何时写人：丢失数据风险高，但仍比不用
数据模式日志方法是目前为止最安全的数据保护方法，但同时也是最慢的。所有写到存储设
备上的数据都必须写两次：第一次写人日志，第二次写人真正的存储设备。这样会导致性能很差，
尤其是对要做大量数据写人的系统而言。
这些年来，在Linux上还出现了一些其他日志文件系统。后面儿节将会讲述常见的Linux日志
文件系统。
1.ext3文件系统
2001年，ext3文件系统被引人Linux内核中，直到最近都是几乎所有Linux发行版默认的文件
系统。它采用和ext2文件系统相同的索引节点表结构，但给每个存储设备增加了一个日志文件，
以将准备写人存储设备的数据先记人日志。
默认情况下，ext3文件系统用有序模式的日志功能一只将索引节点信息写人日志文件，直
到数据块都被成功写人存储设备才删除。你可以在创建文件系统时用简单的一个命令行选项将
ext3文件系统的日志方法改成数据模式或回写模式。
虽然ext3文件系统为Linux文件系统添加了基本的日志功能，但它仍然缺少一些功能。例如
ext3文件系统无法恢复误删的文件，它没有任何内建的数据压缩功能（虽然有个需单独安装的补
丁支持这个功能），ext3文件系统也不支持加密文件。鉴于这些原因，Linux项目的开发人员选择
再接再厉，继续改进ext3文件系统
2.ext4文件系统
扩展ext3文件系统功能的结果是ex4文件系统（你可能也猜出来了）。ext4文件系统在2008年
受到Linux内核官方支持，现在已是大多数流行的Linux发行版采用的默认文件系统，比如Ubuntu。
除了支持数据压缩和加密，ext4文件系统还支持一个称作区孜（extent）的特性。区段在存储
设备上按块分配空间，但在索引节点表中只保存起始块的位置。由于无需列出所有用来存储文件
---
## Page 161
146第8章管理文件系统
中数据的数据块，它可以在索引节点表中节省一些空间。
大的文件预留空间，ex4文件系统可以为文件分配所有需要用到的块，面不仅仅是那些现在已经
用到的块。ext4文件系统用o填满预留的数据块，不会将它们分配给其他文件。
3.Reiser文件系统
2001年，Hans Reiser为Linux创建了第一个称为ReiserFS的日志文件系统。ReiserFS文件系统
只支持回写日志模式——只把索引节点表数据写到日志文件。ReiserFS文件系统也因此成为Linux
上最快的日志文件系统之一。
有两个有意思的特性被引人了ReiserFS文件系统：一个是你可以在线调整已有文件系统的大
小；另一个是被称作尾部压端（tailpacking）的技术，该技术能将一个文件的数据填进另一个文
件的数据块中的空白空间。如果你必须为已有文件系统扩容来容纳更多的数据，在线调整文件系
统大小功能非常好用。
4.JFS文件系统
作为可能依然在用的最老的日志文件系统之一，JFS（Joumaled File System，目志化文件系
统）是IBM在1990年为其Unix衍生版AIX开发的。然面直到第2版，它才被移植到Linux环境中。
说明IBM官方称JFS文件系统的第2版为JFS2，但大多数Linux系统提到它时都只用JFS
JFS文件系统采用的是有序日志方法，即只在日志中保存索引节点表数据，直到真正的文件
数据被写进存储设备时才制除它。这个方法在ReiserFS的速度和数据模式日志方法的完整性之间
的采取的一种折中。
JFS文件系统采用基于区段的文件分配，即为每个写人存储设备的文件分配一组块。这样可