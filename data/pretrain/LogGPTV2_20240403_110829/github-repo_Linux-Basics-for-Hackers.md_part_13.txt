kali \>cd
bash: cd: command not found
记住，您想要追加PATH变量，而不是替换它。如果您有疑问，请在修改变量之前将其内容保存在某个地方。
### 创建用户定义的变量
您可以在Linux中创建自己的自定义用户定义变量，只需为您命名的新变量分配一个值。当您在进行一些更高级的shell脚本编写时，或者发现您经常使用一个您已经厌倦了一遍又一遍地输入的长命令时，这可能很有用。
语法很简单：输入变量的名称，后面跟着赋值符号(=)，然后输入变量的值，如下所示:
kali \>MYNEWVARIABLE="Hacking is the most valuable skill set in the 21st
century"
这就给变量MYNEWVARIABLE分配了一个字符串，要查看该变量中的值，可以使用echo命令和带有变量名的**\$
content**符号，就像我们之前做的那样:
kali \>echo \$MYNEWVARIABLE
Hacking is the most valuable skill set in the 21st century
就像我们的系统环境变量一样，必须导出用户定义的变量才能将其持久化到新的会话中。
如果要删除这个新变量或任何变量，请使用**unset**命令。不过，在删除系统变量之前一定要三思，因为之后系统的操作可能会大不相同。
kali \>unset MYNEWVARIABLE
kali \>echo \$MYNEWVARIABLE
kali \>
如您所见，当您输入unset
MYNEWVARIABLE时，您将删除该变量及其值。如果在同一个变量上使用echo，Linux现在将返回空行。
### 总结
您可能会发现环境变量是外来的，但是值得了解它们。它们控制Linux中工作环境的外观、行为和感觉。您可以通过更改这些变量、导出它们，甚至创建您自己的变量来管理这些变量，使您的环境适合您的需要。在某些情况下，它们可能有助于掩盖您作为黑客的踪迹。
8
-
BASH脚本编程
------------
BASH SCRIPTING
![](media/451fdbee142e8cd4684d71b24707d050.jpg)
任何有自尊心的黑客都必须能够编写脚本。因此，任何自尊的Linux管理员都必须能够编写脚本。黑客经常需要自动化命令，有时需要多个工具，这可以通过他们自己编写的简短程序最有效地完成。
在本章中，我们构建了几个简单的bash
shell脚本，以帮助您开始编写脚本。随着我们的进展，我们将添加功能和特性，最终构建一个脚本，该脚本能够在一系列IP地址中查找潜在的攻击目标。
要成为一名优秀的黑客，您还需要能够使用一种广泛使用的脚本语言编写脚本，例如Ruby
(Metasploit exploits是用Ruby编写的)、Python(许多黑客工具都是Python脚本)或Perl
(Perl是最好的文本操作脚本语言)。在第17章中，我将简要介绍Python脚本。
### BASH的速成班
shell是用户和操作系统之间的接口，它允许您操作文件和运行命令、实用程序、程序等等。shell的优点是，您可以直接从计算机执行这些任务，而不是通过GUI这样的抽象来执行这些任务，GUI允许您将任务定制为Z
shell、C shell和Bourne Again Shell，也就是更广为人知的**bash**。
由于bash
shell几乎可以在所有Linux和UNIX发行版(包括macOS和Kali)上使用，所以我们将只使用bash
shell。
bash
shell可以运行您通常的命令行可以运行的任何系统命令、实用程序或应用程序，但是它也包含一些自己的内置命令。本章后面的表8-1给出了对驻留在bash
shell中的一些有用命令的引用。
在前面的章节中，您使用了**cd**、**pwd**、**set**和**umask**命令。在本节中，您将使用另外两个命令：**echo**命令(首先在第7章节中使用)和**read**命令(读取数据并将其存储在其他地方)。仅仅学习这两个命令就可以构建一个简单但功能强大的工具。
您将需要一个文本编辑器来创建shell脚本。您可以使用任何您最喜欢的Linux文本编辑器，包括vi、vim、emacs、gedit、kate等等。在这些教程中，我将使用Leafpad，就像在前几章中一样。使用不同的编辑器不会对脚本或其功能造成任何影响。
### 你的第一个脚本:“HELLO, HACKERS-ARISE!”
对于您的第一个脚本，我们将从一个简单的程序开始，该程序将向屏幕返回一条消息，该消息说:“你好，黑客——站起来!”打开文本编辑器，开始吧。
首先，您需要告诉您的操作系统您想为脚本使用哪个解释器。为此，输入一个开头标识符，它是哈希符号和感叹号的组合，如下所示:
\#!
然后按照指示的 (\#!/bin/bash)操作系统使用bash
shell解释器。正如您将在后面的章节中看到的，您还可以使用标识符(\#!)来使用其他解释器，如Perl或Python。在这里，您希望使用bash解释器，因此输入以下内容:
\#! /bin/bash
接下来，输入**echo**命令，它告诉系统简单地将命令后面的内容重复(或回显)到监视器。
在这种情况下，我们希望系统向我们回送“Hello,
Hackers-Arise！”如清单8-1所示。注意，要回显的文本或消息必须使用双引号。
\#! /bin/bash
\# This is my first bash script. Wish me luck.
echo "Hello, Hackers­Arise!"
*清单8-1: “Hello, Hackers­Arise！”脚本*
在这里，您还可以看到前面有一行散列标记(\#)。这是一个注释，是您留给自己或任何阅读代码的人来解释您在脚本中所做的事情的注释。程序员在每种编码语言中都使用注释。这些注释不是由解释器读取或执行的，因此您不必担心代码混乱。它们只对人类可见。bash
shell知道，如果一行以\#字符开头，那么它就是一个注释。
现在，将该文件保存为HelloHackersArise，不带扩展名，并退出文本编辑器。
#### *设置执行权限*
默认情况下，新创建的bash脚本甚至您(所有者)也无法执行。让我们在命令行中查看新文件的权限，方法是使用**cd**移动到目录中，然后输入**ls
-l**。它应该是这样的:
kali \>ls -l
­­snip­­
­rw­r­­r­­ 1 root root 42 Oct 22 14:32 HelloHackersArise
­­snip­­
如您所见，我们的新文件具有**rw-r--r--**(644)权限。正如您在第5章中学到的，这意味着这个文件的所有者只有读(**r**)和写(**w**)权限，而没有执行(**x**)权限。组和所有其他用户只有读权限。为了运行这个脚本，我们需要给其执行权限。我们使用chmod命令更改权限，如第5章所示。要授予所有者、组和所有其他执行权限，请输入以下命令:
kali \>chmod 755 HelloHackersArise
现在，当我们对文件以长列表形式列出时，像这样，我们可以看到我们有执行权限:
kali \>ls -l
­­snip­­
­rwx r­x r­x 1 root root 42 Oct 22 14:32 HelloHackersArise
­­snip­­
脚本现在可以执行了！
#### *运行HelloHackersArise*
要运行我们的简单脚本，输入以下命令:
kali \>./HelloHackersArise
文件名前的**./**告诉系统我们希望在HelloHackersArise所在的当前目录文件中执行此脚本。它还告诉系统，如果在另一个名为hellohackersrise的目录中有另一个文件，请忽略它，只在当前目录中运行hellohackersrise。在您的系统上似乎不太可能有另一个具有此名称的文件，但是在执行文件时使用**./**是一个很好的实践，因为这会将文件执行定位到当前目录，并且许多目录将具有重复的文件名，例如start和setup。
当我们按下回车ENTER时，我们非常简单的脚本将我们的消息返回给监视器:
Hello, Hackers­Arise!
恭喜成功！您刚刚完成了第一个shell脚本!
#### *添加带有变量和用户输入的功能*
现在我们有了一个简单的脚本。它所做的只是将消息回显到标准输出。如果希望创建更高级的脚本，可能需要添加一些变量。
变量是一个可以在内存中存储某些东西的存储区域。“某物”可能是一些字母或单词(字符串)或数字。它被称为变量，因为其中包含的值是可变的，这对于向脚本中添加功能非常有用。
在下一个脚本中，我们将添加一些功能来提示用户输入他们的名字，将他们输入的任何内容放入一个变量中，然后提示用户输入他们在这本书中的章节，并将键盘输入放入一个变量中。在此之后，我们将向用户回显一条包含其姓名和章节的欢迎消息。
在文本编辑器中打开一个新文件，并输入清单8-2所示的脚本。
➊ \#! /bin/bash
➋ \# This is your second bash script. In this one, you prompt /
\# the user for input, place the input in a variable, and /
\# display the variable contents in a string.
➌ echo "What is your name?"
read name
➍ echo "What chapter are you on in Linux Basics for Hackers?"
read chapter
➎ echo "Welcome" \$name "to Chapter" \$chapter "of Linux Basics for Hackers!"
*清单8-2:使用变量的简单脚本*
我们从\#!/bin/bash开始，告诉系统要使用这个脚本➊bash解释器。然后添加一个注释描述脚本➋及其功能。之后,我们提示用户输入他们的名字，➌问解释器我们的名字，读取输入并将其转换成一个变量**name**。然后我们提示用户输入他们目前正在这本书中的所在章节，➍我们再次读取键盘输入一个变量，这个章节叫**chapter**。
在最后一行中，我们构造一个输出字符串，➎欢迎读者（他们的名字）在此书的所在章节。我们使用echo命令，并用双引号提供要在屏幕上显示的文本。然后，为了填写用户输入的名称和章号，我们将变量添加到消息中应该出现的位置。如第7章所述，要使用变量中包含的值，必须在变量名前面加上\$符号。
将此文件保存为WelcomeScript.sh文件。其中**.sh**扩展名是脚本文件的约定。您可能已经注意到，我们没有包含前面的扩展名，这并不是严格要求的，如果您关闭扩展名，该文件将默认保存为shell脚本文件。
现在，让我们运行这个脚本。不要忘记先用**chmod**给其执行权限，否则，操作系统会用权限拒绝的消息（Permission
denied）斥责你的。
kali \>./WelcomeScript.sh
What is your name?
OccupytheWeb
What chapter are you on in Linux Basics for Hackers?
8
Welcome OccupytheWeb to chapter 8 of Linux Basics for Hackers!
如您所见，您的脚本从用户那里获取输入，将其放入变量中，然后使用这些输入为用户发出问候语。
这是一个简单的脚本，但它教你如何使用变量并从键盘输入。这些都是脚本中的关键概念，您将来需要在更复杂的脚本中使用它们。
### 您的第一个黑客脚本:扫描打开的端口
现在您已经掌握了一些基本的脚本编写技巧，接下来让我们来学习一些更高级的脚本编写技巧，它们具有实际应用的黑客应用程序。我们将使用黑帽子黑客世界的一个例子。“黑帽子黑客”指的是那些怀有恶意的黑客，比如盗取信用卡号码或篡改网站。白帽黑客是那些有良好意图的人，比如帮助软件开发人员或系统管理员使他们的系统更加安全。“灰帽黑客”是那些倾向于在这两个极端之间游走的人。
在继续之前，您需要熟悉一个名为**nmap**的简单但必要的工具，该工具默认安装在Kali上。您可能听说过**nmap**这个名称，它用于探测一个系统，以查看它是否连接到网络，并查明哪些端口是打开的。通过发现的开放端口，您可以推测在目标系统上运行哪些服务。这对于任何黑客或系统管理员来说都是一项至关重要的技能。
最简单的形式是，运行nmap扫描的语法如下所示:
nmap \ \ \
这不太困难。最简单、最可靠的nmap扫描是TCP
connect扫描，在nmap中使用**-sT**参数选项进行指定。因此，如果想用TCP扫描IP地址192.168.181.1，可以输入以下命令:
nmap -sT 192.168.181.1
更进一步，如果您想对地址192.168.181.1执行TCP扫描，查看端口3306
(MySQL的默认端口)是否打开，您可以输入以下命令:
nmap -sT 192.168.181.1 -p 3306
这里，**-p**指定要扫描的端口。现在就在您的Kali系统上尝试它吧。
#### *我们的任务*
在撰写本书时，有一名黑客在美国联邦监狱服刑时间名为Max
Butler，在整个黑客世界中也被称为Max
Vision。Max是一个灰帽子黑客。白天，他是硅谷的IT安全专业人员，到了晚上，他在黑市上偷窃和销售信用卡号码。有一段时间，他经营着全球最大的信用卡黑市CardersMarket。现在，Max正在服刑13年，同时协助匹兹堡的计算机应急响应小组（CERT）防御黑客。
在Max被抓住的几年前，他意识到许多小餐馆使用的Aloha销售点（POS）系统都内置了技术支持后门。在这种情况下，后门启用了技术支持来帮助他们的客户。Aloha技术支持可以通过端口5505访问最终用户的系统，以在用户寻求帮助时提供帮助。Max意识到，如果他发现一个系统通过Aloha
POS系统连接到互联网，他可以通过端口5505访问具有sysadmin权限的系统。Max可以进入许多这样的系统并窃取数以万计的信用卡号码。
最终，Max想要找到每个有5505端口打开的系统，这样他就可以从窃取数千个信用卡号码变成窃取数百万个。Max决定编写一个脚本，扫描数百万个IP地址，寻找端口5505打开的系统。当然，大多数系统端口5505没有打开，所以，如果它们被打开了，很可能它们正在运行注定的Aloha
POS。他可以在白天工作时运行这个脚本，然后在夜间入侵那些被识别为打开端口5505的系统。