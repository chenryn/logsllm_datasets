目录
p14
---
## Page 26
3.5 SHELL扩展
第三章SHELL的基本功能
+eee ee ee e  e ee e ee ee e ee ee eee ee e ee e e e ee ee e ee ee e ee ee e@
参数和变量扩展
命令替换
算术扩展
单词拆分
文件名扩展
扩展的顺序是：大括号扩展，波浪号扩展，参数、变量和算术扩展以及命令替换（按从左到右的顺序），
单词拆分，以及文件名扩展。如果系统支持，则还有另外一种扩展，即进程替换：它和参数、变量和算术扩
展以及命令替换是同时进行的。
只有大括号扩展，单词扩展，以及文件名扩展在扩展时能够改变单词的数目。其它的扩展都是单个单
词扩展成单个单词。唯一例外的是对"$g（参见53.4.2[特殊参数]，p14）和“${name[a]}”（参见56.7[数组]，
p62）的扩展。所有扩展完成后再进行引用去除（参见53.5.9[引用去除]，p21）。
83.5.1大括号扩展
大括号扩展是一种能够生成任意字符串的机制：它和文件名扩展（参见3.5.8[文件名扩展]，p19）是相
似的，但是生成的文件名不一定存在。进行大括号扩展的模式在形式上有一个可选的前缀：其后是一组用逗
号分隔的字符申，或者是一个序列表达式，它们都在一对大括号之间：最后是一个可行的后级。前级部分将
放在大括号中每个字符申的前面，而后级将放在每个结果的后面，它们都是从左到右进行扩展的。例如，
bash$ echo a{d,c,b}e
ade ace abe
序列表达式的形式是
{x-.y[增量]}
其中，x和y是整数或者单个字符：而可选的增量是一个整数。如果使用了整数，则扩展成x的y之间的
每个整数，包括x和y.所使用的整数可以用“F开头，以使每个量都有同样的宽度。当x或者y有前导
的零时，shell会试图强制让每个生成的量都含有同样多的数位，如果不同就在前面补零。如果使用了字符，
那么表达式就扩展成在字母表中x和y中间的每个字母，包括x和y.注意，x和y必须有同样的类型。
如果指定了增量，它就是每个量之间的差值。默认的增量是1或者-1，根据情况而定。
展。Bash不会对扩展的上下文字或大括号之间的文本进行任何语义解释。为了避免与参数扩展冲突，大括
号扩展不会识别字符串中的“s”
格式正确的大括号扩展必须包含没有被引用的起始和结束大括号，还有至少一个未被引用的逗号或者序
列表达式。格式不正确的大括号扩展不会被处理。
为了防止被认为是大括号扩展的一部分，{或者""可以用反斜杠转义。为了避免与参数扩展冲突，大
括号扩展不会识别字符串中的“3
当要生成的字符申具有的公共前缀比上面的例子更长时，大括号扩展通常用来简写：
mktdir /usr/local/src/bash/ (old,neu,dist ,bugs
chown root /usr//ucb/↓ex,edit},1ib/{ex?.?+,hou_ex}}
S3.5.2波浪号扩展
如果一个单词以未被引用的波浪号“-"开头，则其后的所有字符，直到第一个未被引用的斜杠（如果有
未被引用的斜杠），都被看作波浪号前缀。如果波浪号前缀里面的字符都没有被引用，则其中波浪号后面的
所有字符就被当成一个可能存在的登录用户名。如果这个登录名是个空字符串，波浪号就被替换成shell变
具体来说，如果x比y小，则增量是1：如果x比y大，则增量是-1.
p15
目录
BASH 中文文
---
## Page 27
第三章SHELL的基本功能
3.5 SHELL 扩展
量中HOME的值。如果没有设置HOME，则替换成执行该脚本那个用户的主目录。否则，波浪号前缀就被替
换成其中指定的那个登录名的主目录。
如果波浪号前级是“-+"，它就会被shell变量PWD的值取代。如果波浪号前缀是"--”，它就会被shell
变量OLDPWD的值取代（如果这个值已经设置）。在波浪号前缀中，如果波浪号后面的字符包含数字N，前面
可能还有""或“-”，那么这个波浪号前缀就会被目录栈（参见56.8[目录栈]，p63）中相应的元素取代，这个
元素是内部命令dirg以波浪号前缀中波浪号后面各字符作为参数所要显示的内容。如果波浪号前级中除去
波浪号的部分仅仅包含数字，而没有前导的""或“”，则认为指定了“”
如果登录名是无效的，或者波浪号扩展失败，则该单词不会被处理。
每个变量在赋值时都会检查紧接着”："或者“"是否含有波浪号前缀。如果找到，就进行波浪号扩展。所
以，在给PATH、MAILPATH以及CDPATH赋值时，可以使用带波浪号的文件名：这时，shell会用扩展后的量
赋值。
下面的例子显示了Bash是如何处理未被引用的波浪号前缀：
SHOME的值
-/foo
$HOME/foo
-fred/foo
用户fred主目录中的子目录foo，即“$PWD/foo
-+/foo
‘$PWD/foo"
--/foo
"S{OLDPUD-'--'}/foo
N
命令“dire+N"所显示的字符串。
-+N
命令“dir+N所显示的字符串。
--N
命令“dir-N所显示的字符串。
3.5.3
Shell参数扩展
字符“$”引导参数扩展，命令替换和算术扩展。将要扩展的变量名或符号可以放在大括号中。大括号显
然是可选的，但却可以保护待扩展的变量，使得紧跟在大括号后面的部分名称不会被扩展。如果使用了大括
号，则与这匹配的结束半边是第一个没有用反斜杠转义或不属于引用字符串的“”，这个结束符不能嵌入在
算术扩展、命令替换、或者参数扩展之中。
参数扩展的基本形式是
封[参数}
结果用参数的值替换。如果参数是包含多个数位的位置参数，或者参数后面的字符不应该当成是整个名称的
一部分，则大括号是必须的。
如果参数的第一个字符是个感叹号，就表示某个级别的间接变量。Bash使用后续变量的值作为新变量
的名称，然后扩展这个新的变量，并用其值进行替换，而不是后续变量的值。这叫做间接扩展。下面将介绍
的${！前缀+}和S{！名称[@]}属于例外情况。感叹号必须紧跟在大括号后面才表示间接变量。
正确使用问接变量
在很多其它语言中，可以用$韩A来表示以$A为名称的间接变量，而Bash中不可以，即使$SA}
也不可以：Bash只识别感叹号形式的间接变量，不过，这个功能在其它的shell中可能没有。所
以，为了增强可移植性，可以这样写：
eval echo$$B
BASH 中文文档
目录
p16
---
## Page 28
$3.5 SHELL 扩展
第三章SHELL的基本功能
在下面介绍的每种情况中，名称都要进行波浪号扩展、参数扩展、命令替换和算术扩展。如果不是进行
字符串扩展，使用下面的形式时，Bash会检查参数是否已经设置或者为空：只有当参数尚未设置时才会在
测试时忽略冒号后面的结果。换句话说，如果包含了冒号，则这个运算符会测试参数是否存在，同时还会检
查它是否为空：如果忽略了冒号，就只检查变量参数是否存在。
${参数：-单词}
如果参数没有设置或者为空，则替换为单词：否则替换为参数的值。
${参数：-单词
如果参数没有设置或者为空，则把扩展后的单词赋给参数，然后替换为参数的值。对位
置参数和特殊参数，不可以这样进行赋值。
${参数：？单词}
如果参数没有设置或者为空，就把扩展后的单词（如果没有给出单词，则代之以一条大
意相同的相信）写到标准错误输出中。如果当前的shell是交互式的，退出shell.否则，替换为参数的
值。
${参数：+单词}
如果参数没有设置或者为空，不进行任何替换：否则，替换为扩展后的单词。
$[参数：偏移量}
参数：偏移量：长度）
扩展为参数中从偏移量开始的不超过长度个字符。如果没有指定长度，扩展为参
数中从偏移量开始的子字符串。长度和偏移量都是算术表达式（参见6.5[Shell的算术运算，p61）。这
又叫做“子字符申扩展”。
长度的值必须是个大于或等于零的数字。如果长度的值是个小于零的数，它就会被当成参数所表示的
字符串中从结尾开始的偏移量，如果参数是“”，结果就是从偏移量开始的第长度个位置参数。如果参
数是带有“”或“”下标的下标数组名，则结果是该数组中从$[参数[偏移量]}开始的长度个元素。负
的偏移量是从数组中比最大的下标大一的数字开始的。对键值数组进行子字符串扩展的结果没有定
义。注意，负数的偏移量与冒号之间至少得有一个空格，这样可以避免与“：-”扩展相混清，查找子字
符串的下标是从0开始的：但是如果使用了位置参数，则默认从1开始。如果使用位置参数时偏移
量是0，则把$Q添加到结果前面.
${！前级}
${！前缓}
扩展为名称中含有前缀的变量，以特殊变量IFS的第一个字符分隔。如果使用了“"，并且
在双引号内扩展，则每个变量都扩展成单独的单词。
$！名称}
$[！名称]
如果名称是个数组变量，扩展成名称内数组下标或者键名列表。如果名称不是数组变量，则
如果名称已经设置就扩展为0，否则扩展为空值。如果使用了“”，并且在双引号内扩展，则每个键或
下标都扩展成单独的单词。
${参数}
替换为参数扩展后所含的字符数目。如果参数是“"或“”，则替换为位置参数的个数。如果参
数是带有下标""或“的数组名，则在做的为该数组中元素的个数。
参数#单词}
$[参数*单词]
单词被扩展成一个模式，就像文件名扩展（参见53.5.8[文件名扩展]：p19）一样。如果
这个模式与参数扩展后的值开始部分匹配，则替换的结果是该模式与参数扩展后的值最短的匹配部
分（指“#"）或者最长的匹配部分（指“#）删除以后的字符串。如果参数是“"或“"，则模式删除操作
就对位置参数依次进行，扩展的结果就是所得到的位置参数列表。如果参数是带有下标“或“”的数
组名，则模式删除操作就对数组元素依次进行，扩展的结果就是所得到的数组元素列表。
这个尚待验证，
p17
目录
BASH 中文文
---
## Page 29
第三章SHELL的基本功能
3.5 SHELL 扩展
+ee e ee ee e ee ee e ee ee eee ee eeeeeeee ee eee ee e e e ee e e e ee ee
${参数单词}
参数x单词》
单词被扩展成一个模式，就像文件名扩展一样。如果这个模式与参数扩展后的值开始
部分匹配，则替换的结果是该模式与参数扩展后的值最短的匹配部分（指"）或者最长的匹配部
分（指“%X"）删除以后的字符串。如果参数是“或“”，则模式删除操作就对位置参数依次进行，扩展
的结果就是所得到的位置参数列表。如果参数是带有下标“"或“”的数组名，则模式剩除操作就对数
组元素依次进行，扩展的结果就是所得到的数组元素列表。
${参数/模式/字符串}
模式被扩展成一个模式，就像文件名扩展一样，参数被扩展后，与模式匹配的最
长部分用字符串来取代。如果模式以""开头，则所有与之匹配的部分都用字符串来取代：而通常情
况下，只取代第一个匹配的部分。如果模式以“#"开头，它就只能和参数扩展后的开始部分匹配：。如
果模式以"Y"开头，它就只能和参数扩展后的结尾部分匹配。如果字符申为空，则与模式匹配的部分将
被删除：这时，模式后面的/也可以省略。如果参数是带有下标“"或“”的数组名，则模式删除操作
就对数组元素依次进行，扩展的结果就是所得到的数组元素列表。
${参数模式}
$[参数模式}
{参数，模式}
${参数，，模式}
这种扩展会改变参数中字母符号的大小写，模式被扩展成一个模式，就像文件名扩展
一样。运算符“把匹配部分的小写字母转换为大写：运算符"，"把匹配部分的大写字母转换为小写。
"和“，扩展转换参数扩展后的每个匹配的字符，面“"和""扩展只转换参数扩展后第一个匹配
的字符。如果省略了模式，则它则当成"”，这就与每个字符都匹配。如果参数是“或“”，则大小
写转换操作就对位置参数依次进行，扩展的结果就是所得到的位置参数列表。如果参数是带有下
标""或“”的数组名，则模式删除操作就对数组元素依次进行，扩展的结果就是所得到的数组元素列
表。
$3.5.4命令替换
命令替换用命令的输出取代命令本身，它的形式可以是下面任意一种：
轧（命令）
或者
·命令·
进行扩展时，Bash先执行命令，并把该命令的标准输出中最后面的换行符删除，用结果取代命令替换。这
个时候中间的换行符不删除，但是它们可能在单词拆分时被删除。命令替换形式$（cat文件名）可以用与
其等价但速度更快的$（（命令列表）
在运行时，进程的命令列表的输入和输出与一个命名管道或者“/dev/fd"目录里面的某个文件相关联。扩展
的结果是，该文件的名称作为一个参数转递给当前的命令，如果使用了>（命令列表）这种形式，对该文件
的写入就为命令列表提供了输入。如果使用了《（命令列表）这种形式，在需要得到命令列表的输出时，应
该去读取作为参数转递的文件，注意，《或》与左边括号之间不能有任何空格，否则这种结构就会被解释成
重定向。
如果系统支持，进程替换就和参数及变量扩展、命令替换、还有算术扩展同时进行。
$3.5.7单词拆分
在单词拆分时，shell会扫描参数扩展、命令替换和算术运算的结果，如果它们不是在双引号之间进行
的。
Shell会把SIFS中的每个字符都当成分隔符，并按照这些字符把其它扩展的结果拆分成单词。如果
$IFS没有设置，或者它的值和默认的完全一样，那么在前述扩展的结果中开头或
结尾出现的由、、或者构成的序列就会被忽略：而由SIFS中任意字符组成的序
列如果不是出现在头部或尾部就成为单词的分隔符。如果SIFS的值不是默认的并且含有由空格和制表符这
两个空白符（称为$IFS分隔符）构成的空白符，则如果在单词的头部或尾部出现就会被删除。$IFS中除了