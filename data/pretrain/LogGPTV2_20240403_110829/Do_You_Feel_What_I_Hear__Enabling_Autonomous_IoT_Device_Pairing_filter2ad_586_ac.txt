841
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:35:39 UTC from IEEE Xplore.  Restrictions apply. 


!$!
 	&
'
'

'
'

# 
  
#!
#%
" #%




	













	




	

		





	



		

		

		

Fig. 6: Figure depicts Perceptio protocol Ô¨Çowchart diagram.
Details of this protocol is presented in Appendix B.
the previously described Ô¨Ångerprint generation process to
create respective sets of Ô¨Ångerprints {FAi , i = 1, . . . , p}
and {FBj , j = 1, . . . , q} for the p and q observed event
clusters. Using the Ô¨Ångerprints, A is able to compute a set of
commitments, CA, that it hides a set of secrets generated
by A, ki, by effectively encrypting it using an extracted
Ô¨Ångerprint, FAi. Another device, B, can decode the message
ÀÜFBJ that is ‚Äúclose
to acquire ki only if it has a Ô¨Ångerprint
enough‚Äù to FAi. The fuzzy commitment primitive is similar
in spirit to encryption of ki with FAi using a one-time pad.
Once B successfully derives the secret with its FBj
that
is similar to FAi, A and B has now established a shared
symmetric master key, k. Then the two devices continue to
the Key ConÔ¨Årmation Phase, creating a shared session key,
kAB, derived from k. Each time a pair of devices A and
B successfully execute the key generation and conÔ¨Årmation
phases for a round, they increase their respective conÔ¨Ådence
by a small amount. Upon each increment, each device veriÔ¨Åes
Conf Score > T hrConf . In the Ô¨Ånal ConÔ¨Ådence Score
Check Phase, each device can Ô¨Ånally decide that the other
is contextually veriÔ¨Åed once the overall conÔ¨Ådence score is
above a threshold. The conÔ¨Ådence score check mechanism is
thus similar to a reputation system.
In addition to the four main phases, Perceptio protocol
includes an optional extension to allow a notion of transitive
veriÔ¨Åcation for cases where two devices want to verify each
other but their sensing equipment does not allow for gen-
eration of matching Ô¨Ångerprints (e.g., the accelerometer and
the power meter who perceive no event in common). We call
this extension Transitivity of Trust (ToT). If the two devices
A and C have each performed the Ô¨Ångerprint veriÔ¨Åcation
with a third device B, meaning A and B share key kAB
and B and C share key kBC, A and C can rely on T oT to
expand the ‚Äúpairing‚Äù operation to a ‚Äúgrouping‚Äù operation by
leveraging authenticated encryption scheme [64] to exchange
public parameters for DifÔ¨Åe-Hellman key exchange [17]. Fur-
thermore, this approach enables devices located in different
rooms within a house to pair, leveraging bridging devices.
We discuss this extension further in Section IX.
Fig. 7: Figure depicts Perceptio Ô¨Ångerprint generation Ô¨Çow
chart, taking as input the raw sensor data, performs clustering
to distinguish group of events (e.g., walking, door opening,
knocking) represented as (cid:2), (cid:4), (cid:5), and computes correspond-
ing Ô¨Ångerprints per event cluster (i.e., F(cid:2), F(cid:3), and F(cid:4)).
VI. IMPLEMENTATION
We now present our implementation of Perceptio Ô¨Ånger-
print generation. Figure 7 depicts the Ô¨Çow chart diagram.
First, each sensor perceives the contextual information by
measuring its sensor data for a Ô¨Ångerprinting time period,
tF . Measured data is input to Pre-processing module for
noise reduction. The pre-processed signals are then input to
Signal Detection module, which distinguishes event signals
(e.g., walking, door opening, knocking.) against the rest of
the signal and outputs the corresponding signal time indices.
Subsequently, the the indices, along with detected signals are
input to Feature Extraction and Event Clustering module,
which performs unsupervised learning to cluster signals of
similar events via K-Means clustering. This is analogous to
categorizing detected event signals into clusters of (cid:2), (cid:4), (cid:5).
The Fingerprint Extraction module then converts the result-
ing cluster indices into corresponding Ô¨Ångerprints per cluster
(i.e., F(cid:2), F(cid:3), and F(cid:4)). We present the implementation details
of the Signal Detection and Event Clustering modules.
A. Signal Detection
Signal detection module identiÔ¨Åes events of interest by (1)
signal smoothing and (2) threshold-based detection.
1) Pre-processing: Signal Smoothing for Noise Reduction:
We Ô¨Årst compute a moving average to smooth the signal
for noise reduction, speciÔ¨Åcally applying an exponentially
weighted moving average (EWMA) Ô¨Ålter to discrete time
series x as y[k] = Œ±‚àóx[k]+(1‚àíŒ±)‚àóy[k‚àí1], where Œ±, k, x[k],
and y[k] denote the weight, sample index, sensor data and
moving average data, respectively. Hence, EWMA smooths
the signal while retaining signiÔ¨Åcant changes. Figure 8(a)
depicts the original geophone signal of the event of a person
walking. Figures 8(b) and (c) depict the absolute values of
the original and EWMA-Ô¨Åltered values, respectively.
2) Thresholding and Signal Detection: We then perform
thresholding for signal detection, including both a lower-
bound (T hrlower) and an upper-bound (T hrupper) threshold.
842
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:35:39 UTC from IEEE Xplore.  Restrictions apply. 
500
0
-500
4.9
500
0
4.9
200
100
0
4.9
(a) Original Signal
4.905
4.91
4.915
4.92
4.925
(b) Absolute Value
4.905
4.91
4.915
4.92
4.925
(c) Exponentially Weighted Moving Average
4.905
4.91
4.915
4.92
4.925
4.93
√ó106
4.93
√ó106
4.93
√ó106
Fig. 8: Figure depicts an example of Pre-processing module
where the (a) raw sensor signal is Ô¨Årst converted to (b)
corresponding absolute value, and ultimately converted to (c)
subsequent pre-processed signal.
(a) Before Lumping
15
10
5
0
1.745
1.75
(b) After Lumping
15
10
5
0
1.745
1.75
1.755
√ó106
1.755
√ó106
(c) Before Lumping - Original Signal
(d) After Lumping - Original Signal
20
0
-20
20
0
-20
1.745
1.75
1.755
√ó106
1.745
1.75
1.755
√ó106
Fig. 9: Figure depicts an example of the Signal Detection
module, and demonstrate the effects of thresholding and
signal isolation.
We leverage T hrlower to distinguish event signals to ambient
noise. On the other hand, we also leverage T hrupper to
remove any signals of high amplitude, in order to thwart
Shamming attack. We note that T hrupper can be a function
of T hrlower after certain calibration phase.
This is depicted in Figure 9(a), where we apply a lower-
bound thresholding to the EWMA signal using the lower
dotted line (i.e., T hrlower = 3). The signal above the
threshold are highlighted with a gray box. Also, we apply an
upper-bound thresholding as well using the upper dotted line
(i.e., T hrupper = 10). For more accurate event clustering,
however, we implement a signal lumping technique to group
segmented parts of the event signal into a single event signal,
as shown in Figure 9(b). SpeciÔ¨Åcally, we disregard short
discontinuities between adjacent segmented signals above
threshold to ‚Äúlump‚Äù the signals into one continuous group
of signal event. From the indices returned by these steps,
we determine the signal of interest in the original signals
as presented in Figures 9(c) and (d), depicting before and
after lumping technique, respectively. Finally, this module
outputs the corresponding indices of detected signal to the
Event Clustering module.
B. Event Clustering
We implement event clustering to appropriately group
observed events. Though some additional work may increase
the accuracy and efÔ¨Åciency of the clustering results, we detail
a preliminary proof-of-concept implementation.
843
1) Feature Extraction: We select a set of features per
sensor to reliably separate perceived events via clustering.
We select common time-domain features for analysis (e.g.,
maximum amplitude, duration, and area under the curve and
its variants) and evaluate them using principle component
analysis. We choose Ô¨Ånal set of features based on their
capacities to maximize visibilities across events. We choose
maximum amplitudes and lengths for geophone, microphone,
and accelerometer. Motion and power meter did not require
clustering as these sensors only perceive one speciÔ¨Åc event in
our experiments. Hence, we performed dimensionality reduc-
tion via feature extraction process while retaining essential
features for differentiating events.
2) K-Means Clustering and Elbow Method: We leverage
K-Means clustering to eliminate the need for a training phase.
K-Means takes as input k cluster groups and outputs data
points to similar clusters. K-Means algorithm computes the
Euclidean distances between data points and then selects
cluster centroids that minimizes the distances.
The number of cluster groups is unknown in Perceptio,
as the devices do not know how many types of events will
occur. To address this issue, we leverage Elbow method to
infer the optimum value of K [42]. Elbow method tests
several K-cluster hypotheses to output the optimum K value.
SpeciÔ¨Åcally, this method evaluates the rate at which data
variances captured by the clusters increase when varying
K. By leveraging K-Means and Elbow method, Perceptio
increases its practicality by eliminating the burden of the
user or device manufacturer to train speciÔ¨Åc event types.
VII. EVALUATION
We implement the Perceptio protocol and evaluate its ef-
fectiveness in different settings. After detailing the apparatus
used, we present an end-to-end study of Perceptio‚Äôs various
aspects, including sensors‚Äô event detection abilities and ro-
bustness of Ô¨Ångerprint similarity and key establishment.
A. Experiment Apparatus
We describe the nature of legitimate devices, LDs, placed
inside the environment and attacker devices, Ms, placed out-
side attempting to launch Shamming‚ÄìEavesdropping attack.
The LDs include a SM-24 geophone [13], an MD9745APA-
1 microphone [3], an ADXL335 accelerometer [16], an MP
Motion Sensor NaPiOn passive infrared motion detector [59],
and a Kill-A-Watt P4400 power meter [37]. Each of the
sensors is interfaced to an Arduino Uno board [5] with a
Wireless SD Shield [4] and microSD card for data logging
at 5 kHz sampling rate. The sensors were placed between
2.5-5.5m apart from each other. The Ms also include a SM-
24 geophone, MD9745APA-1 microphone, and an ADXL335
accelerometer, as well as a higher-quality MMA1270KEG
accelerometer [66] and a higher-quality Blue Yeti micro-
phone [50] as depicted in Figure 10(c). The higher-quality
accelerometer and microphone cost an estimated $10 and
$100 respectively, which is roughly one and two orders more
expensive than the normal-quality IoT accelerometer and
microphone.
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:35:39 UTC from IEEE Xplore.  Restrictions apply. 


	
 
	








 

	

	
			 
		 

	

	 
	


 
 
 
	


	


	




	
			 
	 
(a) Evaluating event detection accuracy
for various sensing modalities
(b) Evaluating the impact of different
environmental factors
(c) Attacker devices
Fig. 10: To study event detection accuracy for LDs and Ms of different sensor modalities, we have human subjects conduct
the following actions shown in (a): knock on a door hosting an accelerometer, walk across a motion detector, around a
microphone and geophone on the ground, and brew coffee from a machine attached to a power meter. The attacker sensors
are placed outside the wall opposite to the door. We study the effect of environmental factors in (b): a coffee machine and
blender are used successively while varying the distance between them and the sensors, the Ô¨Çoor type and the noise level
inside the room. We illustrate the Ô¨Åve Ms in (c) including higher quality accelerometer and microphone.
1
0.8
e
v
i
t
i
s
o
P
e
u
r
T
0.6
0.4
0.2
0
0
1
0.8
e
v
i
t
i
s
o
P
e
u