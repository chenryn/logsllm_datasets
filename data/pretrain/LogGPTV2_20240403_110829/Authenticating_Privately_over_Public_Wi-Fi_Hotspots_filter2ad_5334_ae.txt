以下是经过优化的文本，使其更加清晰、连贯和专业：

---

### 3. 隐藏身份以访问接入点
图3展示了城市区域中ISP热点的吞吐量。
表8：未优化的多项式运算（N = 439）。

| 服务器 | 添加时间 (µs) | 乘法时间 (µs) | GPU乘法总/列 (µs) | 平均每列操作时间 (ms) |
| --- | --- | --- | --- | --- |
| 1 | 4.28 | 251.6 ± 0.33 | 76.5 | 438 |
| 2 | 2.67 | 228.2 ± 0.38 | 38.4 | 225 |
| 3 | 2.94 | 129.9 ± 0.05 | - | - |
| 4 | 2.97 | 130.2 ± 0.1 | 13.4 | 113.5 |
| 5 | 2.97 | 130.2 ± 0.1 | 5.9 | 48.8 |
| 6 | 2.67 | 228.2 ± 0.38 | 5.7 | 27.9 |

上表显示了每个服务器在数据库列上执行简单多项式乘法和加法的平均操作时间。GPU计算明显优于多线程程序，并且随着核心和设备数量的增加表现出良好的扩展性。例如，在服务器6的情况下，一组8个中端GPU（2300核）可以在不到1.1秒的时间内处理1000万行的数据表。然而，由于所使用的O(N^2)乘法算法的性质，评估时间仍然以秒为单位。

相比之下，第5.4节中概述的快速傅里叶变换（FFT）策略显著减少了每列的评估时间（超过一个数量级的增益）。图4a和图4b展示了使用不同块/线程配置时，500次样本中每列乘法和加法的平均时间。每条曲线代表第一个加法步骤的块配置，而所示时间包括两个加法步骤。从我们的结果来看，每个设备都有不同的最佳块参数（如第5.4节所述），Amazon实例的最佳块参数β=64，GTX780的最佳块参数β=96。中端GTX780设备在FFT乘法和加法中的每列计算时间为1.077毫秒，而之前的实现需要28毫秒。这意味着8个GTX780 GPU可以计算1000万个326位宽条目的PIR响应仅需43.9毫秒。这种改进来自于频率域中点对点乘法期间的并行性增强，其中结果仅依赖于两个因子系数。

上述结果给出了使用TracEdge进行端到端身份验证所需的时间，包括查询传输、PIR计算、响应传输和查询提取。尽管这些网络存在性能损失，但它们的性能一直在上升，达到每个中继平均9Mbps [57]，这与我们在第6节中的链路吞吐量实验相当。这表明中继匿名网络不再是瓶颈。

### 8. 致谢
本研究得到了美国国家科学基金会CNS #1218197号资助的支持。

### 参考文献
[此处省略具体参考文献列表]

---

希望这个版本更加清晰、连贯和专业。如果有任何进一步的需求或修改，请告诉我！