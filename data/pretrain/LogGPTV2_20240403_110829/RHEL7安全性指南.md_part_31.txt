:::
::: section
::: titlepage
## [⁠]{#chap-Hardening_Your_System_with_Tools_and_Services.html#sec-openCryptoki}4.8.3. 在公钥密码学中使用 openCryptoki {.title}
:::
::: para
[**openCryptoki**]{.application} 是一个 Linux 下的 *PKCS#11*
开源实现，是一种" *公钥加密标准* "（PKCS，Public-Key Cryptography
Standard），定义了通常称为令牌的加密设备的应用程序接口（``{=html}API``{=html}）。令牌可在硬件或软件中执行。此特点概述了
[**openCryptoki**]{.application} 系统是如何安装、配置，以及如何在
Red Hat Enterprise Linux 7 中使用。
:::
::: section
::: titlepage
### [⁠]{#chap-Hardening_Your_System_with_Tools_and_Services.html#sec-openCryptoki-Installing}4.8.3.1. 安装 openCryptoki 并启动服务 {.title}
:::
::: para
要在您的系统中安装 [**openCryptoki**]{.application}
基本工具包，包括用于检测的令牌的软件实现，则须作为 `root`{.systemitem}
用户运行以下命令：
:::
``` screen
~]# yum install opencryptoki
```
::: para
根据您打算使用的硬件令牌的类型，您可能需要安装其他工具包以支持具体使用情况。例如，要获取对"
*可信计算平台模块* "（``{=html}TPM，Trusted
Platform Module``{=html}）设备的支持，您需要安装
[opencryptoki-tpmtok]{.package} 工具包。
:::
::: para
关于如何使用 [**Yum**]{.application}
工具包管理器安装工具包的基本信息，请参阅《 [Red Hat Enterprise Linux 7
系统管理员指南](https://access.redhat.com/site/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/System_Administrators_Guide/index.html)
》。
:::
::: para
要启用 [**openCryptoki**]{.application} 服务，您需要运行
`pkcsslotd`{.systemitem} 守护进程。作为 `root`{.systemitem}
用户执行以下命令，就可启动当前会话的守护进程：
:::
``` screen
~]# systemctl start pkcsslotd
```
::: para
要确保在启动时可自动启用服务，则须运行以下命令：
:::
``` screen
~]# systemctl enable pkcsslotd
```
::: para
关于如何使用 systemd 来管理服务的更多信息，请参阅《 [Red Hat
Enterprise Linux 7
系统管理员指南](https://access.redhat.com/site/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/System_Administrators_Guide/index.html)
》。
:::
:::
::: section
::: titlepage
### [⁠]{#chap-Hardening_Your_System_with_Tools_and_Services.html#sec-openCryptoki-Configuring}4.8.3.2. 配置并使用 openCryptoki {.title}
:::
::: para
启动时， `pkcsslotd`{.systemitem}
守护进程会读取`/etc/opencryptoki/opencryptoki.conf`{.filename}
配置文件，它可用于收集关于在系统工作时所配置的令牌以及其槽的信息。
:::
::: para
此文件定义了使用键值对的独立槽。每个槽的定义可含有描述、可使用的令牌库的规格说明书，以及槽制造者的
ID
。另外，可对槽的硬件和固件的版本进行定义。关于文件格式的描述以及独立键和可分配给这些键的值的详细描述，请参阅
[[opencryptoki.conf]{.refentrytitle}(5)]{.citerefentry} 手册页。
:::
::: para
要在运行时修改 `pkcsslotd`{.systemitem} 守护进程的行为，则须使用
`pkcsconf`{.command}
实用程序。此工具允许您显示和配置守护进程的状态，以及列出并修改当前所配置的槽和令牌。例如，要显示关于令牌的信息，则须发出以下命令（请注意，
所有需用 `pkcsslotd`{.systemitem} 守护进程进行通信的非 root 用户必须是
`pkcs11`{.systemitem} 系统组的成员）：
:::
``` screen
~]$ pkcsconf -t
```
::: para
关于可用于 `pkcsconf`{.command} 工具的参数列表，请参阅
[[pkcsconf]{.refentrytitle}(1)]{.citerefentry} 手册页。
:::
::: {.warning xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**警告**
:::
::: admonition
::: para
请牢记，只有完全可信的用户应可成为 `pkcs11`{.systemitem}
组的成员，因为此组的所有成员有权限阻止其他
[**openCryptoki**]{.application} 服务的用户访问所配置的 PKCS#11 令牌。
:::
:::
:::
:::
:::
:::
:::
[]{#chap-system_auditing.html}
::: chapter
::: titlepage
# [⁠]{#chap-system_auditing.html#chap-system_auditing}第 5 章 系统审核 {.title}
:::
::: para
Linux
审核系统为追踪系统中与安全相关的信息提供了途径。基于预配置原则，审核将生成日志项从而记录尽可能多的在系统中发生的事件。这一信息对执行关键任务的环境尤其重要，它可以确定那些违反安全策略的人以及他们的行为。审核不会为系统提供额外的安全保护；相反，它能用来发现系统中违反安全策略的行为。通过额外的措施例如
SELinux 可以进一步地防止这些违反行为。
:::
::: para
下面的列表总结了一些信息有关审核能够记录的日志文件：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    日期和时间，类型，以及事件结果。
    :::
-   ::: para
    主题和对象的敏感性标签。
    :::
-   ::: para
    事件关联与触发事件的用户身份。
    :::
-   ::: para
    所有对审核配置的修改以及尝试访问审核日志文件。
    :::
-   ::: para
    所有认证机制的使用，例如 SSH、Kerberos、以及其他。
    :::
-   ::: para
    对于任何信任数据库的改变，例如 `/etc/passwd`{.filename}.
    :::
-   ::: para
    尝试把信息输入系统，或者从系统中输出信息
    :::
-   ::: para
    包含或者排除以用户身份，主题和对象标签以及其他属性为基础的事件
    :::
:::
::: para
使用审核系统也要求与安全有关的认证。设计审核是为了能满足甚至超过以下认证或者服从指南的要求：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    受控制访问保护文件（CAPP）
    :::
-   ::: para
    卷标式安全保护设定文件（LSPP）
    :::
-   ::: para
    基于规则集的访问控制（RSBAC）
    :::
-   ::: para
    国家工业安全计划操作手册（NISPOM）
    :::
-   ::: para
    联邦信息安全管理法案（FISMA）
    :::
-   ::: para
    支付卡行业数据安全标准 (PCI-DSS)
    :::
-   ::: para
    安全技术实施指南 (STIG)
    :::
:::
::: para
审核也可以是：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    由国家信息安全保障联盟（NIAP）以及最佳安全行业（BSI）评估
    :::
-   ::: para
    红帽企业版 Linux 5 通过 LSPP/CAPP/RSBAC/EAL4+ 认证。
    :::
-   ::: para
    红帽企业版 Linux 6 通过操作系统保护文件/评估保障等级4+ (OSPP/EAL4+)
    认证。
    :::
:::
## [⁠]{#chap-system_auditing.html#bh-Use_Cases}用例
::: variablelist
[访问监测文件]{.term}
:   ::: para
    审核能够追踪是否有人访问、修改或者运行某个文件或者目录，或者是否更改了文件属性。这是很有用的，例如检测访问重要文件以及备有审计记录以防其中的某个文件被破坏。
    :::
[调用监测系统]{.term}
:   ::: para
    每次使用特定的系统调用时，配置审核来生成日志项。例如，这可以通过监测来追踪系统中的变化
    `settimeofday`{.systemitem}、`clock_adjtime`{.systemitem}
    和其他与时间相关的系统调用。
    :::
[用户记录指令运行]{.term}
:   ::: para
    因为审核可以追踪该文件是否被运行，因此设定许多规则来记录每一个执行过的特定指令。例如，为每一个可执行的
    `/bin`{.filename}目录设定规则。通过用户的身份可以搜寻所产生的日志项从而生成每一位用户所执行指令的审计记录。
    :::
[记录安全事件]{.term}
:   ::: para
    `pam_faillock`{.systemitem}
    认证模块能够记录失败的登录尝试，也可以通过建立审核来记录失败的登录尝试，并提供有关尝试登录用户的额外信息。
    :::
[查找事件]{.term}
:   ::: para
    审核提供 [**ausearch**]{.application}
    实用程序，这被用来筛选日志项，并且提供基于许多情况的审计记录。
    :::
[运行总结报告]{.term}
:   ::: para
    [**aureport**]{.application}
    实用程序此外还可以被用来生成所记录的事件的日常报告。系统管理员能够分析报告并且进一步调查可疑活动。
    :::
[监测网络访问]{.term}
:   ::: para
    [**iptables**]{.application} 以及 [**ebtables**]{.application}
    实用程序可以被配置用来触发审核事件，允许系统管理员监测网络访问。
    :::
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**注意**
:::
::: admonition
::: para
审核所收集的信息量可能影响系统性能。
:::
:::
:::
::: section
::: titlepage
# [⁠]{#chap-system_auditing.html#sec-audit_system_architecture}5.1. 审核系统架构 {.title}
:::
::: para
审核系统包含两个主要部分：用户空间的应用程序、实用程序，以及 kernel-side
系统调用处理。Kernel
的组件从用户空间的应用程序接受系统调用，并且通过三个过滤器中的一个过滤器来进行筛选：
[*user*]{.emphasis}、[*task*]{.emphasis} 或者
[*exit*]{.emphasis}。一旦系统调用通过其中的一个过滤器，就将通过
[*exclude*]{.emphasis}
过滤器进行传送，这是基于审核规则的配置，并把它传送给审核的守护程序做进一步的处理。[图 5.1
"审核系统架构"](#chap-system_auditing.html#fig-audit_architecture){.xref}
说明这一过程。
:::
::: figure
[⁠]{#chap-system_auditing.html#fig-audit_architecture}
::: figure-contents
::: mediaobject
![审核系统架构](images/audit_architecture.png)
:::
:::
**图 5.1. 审核系统架构**
:::
::: para
用户空间的审核守护进程收集来自于 Kernel
的信息，并在日志文件中创造日志文件项。其他审核用户空间的实用程序与审核守护进程进行信息交互，Kernel
审核组件，或者审核日志文件：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    [**audisp**]{.application} ---
    审核调度守护进程与审核守护进程进行交互，把事件传送给其他应用程序做进一步处理。守护进程的目的是为了提供插入机制，这样的话实时分析程序就能与审核事件进行交互。
    :::
-   ::: para
    [**auditctl**]{.application} --- 审核控制实用程序与 Kernel