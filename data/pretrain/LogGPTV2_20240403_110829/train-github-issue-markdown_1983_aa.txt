##### System information (version)
  * OpenCV => commit: `1b07274` (master branch latest commit)
  * Operating System / Platform => ubuntu 18.04
  * Compiler => clang++ 10.0.1
##### Detailed description
##### Steps to reproduce
    ##### Issue submission checklist
     - [X] I report the issue, it's not a question
     - [ X] I checked the problem with documentation, FAQ, open issues,
           forum.opencv.org, Stack Overflow, etc and have not found any solution
     - [X ] I updated to the latest OpenCV version and the issue is still there
     - [X ] There is reproducer code and related data files: videos, images, onnx, etc
# Reproduce code
    #include "opencv2/dnn.hpp"
    #include 
    using namespace cv;
    using namespace dnn;
    std::string Input1
        { 0x0a, 0x00, 0x0a, 0x00, 0x0a, 0x00, 0x0a, 0x00, 0x0a, 0x00, 0x0a, 0x00,
          (char)0xba, 0x0a, 0x00, 0x0a, 0x00, 0x0a, 0x00, 0x0a, 0x00, 0x0a, 0x00,
          0x0a, (char)0xbd, 0x00, 0x1a, 0x00, 0x0a, 0x00, 0x0a, 0x00, (char)0xba,
          0x0a, 0x00, 0x0a, 0x00, 0x0a, 0x00, 0x0a, 0x00, 0x0a, 0x00, 0x0a, 0x00,
          0x0a, 0x00, 0x0a, 0x00, 0x0a, 0x00, 0x0a, 0x00, (char)0xba, 0x0a, 0x00,
          0x0a, 0x00, 0x0a, 0x00, 0x0a, 0x00, 0x0a, 0x00, 0x0a, 0x00, (char)0xba,
          0x0a, 0x00, 0x0a, 0x00, 0x0a, 0x00, 0x0a, 0x00, 0x0a, 0x00, 0x0a, 0x00,
          0x0a, 0x00, 0x0a, 0x00, 0x0a, 0x00, 0x2a, 0x00, (char)0xba, 0x0a, 0x00,
          0x0a, 0x00, 0x5d, 0x00, 0x0a, 0x00, 0x0a, 0x00, 0x0a, 0x00, 0x0a, 0x40 };
    std::string Input1Path = "Input1";
    bool saveFile(std::string Path, std::string Content) {
      std::ofstream OFS(Path);
      if (!OFS.is_open())
        return false;
      OFS  nodesMap;
    ...
    987~991
        for (int i = 0; i  numRefsToAdd(nodesMap.size(), 0); //numRefsToAdd size is depends on nodesMap.size().
    ...
    997
    for (int i = 0; i (char const*&&, char const*&&) /root/fuzz-test-generation/exp/opencv/modules/dnn/src/tensorflow/../dnn_common.hpp:75:14
        #4 0x5e2b33 in cv::dnn::dnn4_v20211220::Net cv::dnn::dnn4_v20211220::detail::readNetDiagnostic(char const*&&, char const*&&) /root/fuzz-test-generation/exp/opencv/modules/dnn/src/tensorflow/../dnn_common.hpp:82:25
        #5 0x5e2b33 in cv::dnn::dnn4_v20211220::readNetFromTensorflow(std::__cxx11::basic_string, std::allocator > const&, std::__cxx11::basic_string, std::allocator > const&) /root/fuzz-test-generation/exp/opencv/modules/dnn/src/tensorflow/tf_importer.cpp:3219:12
        #6 0x4d90ce in main (/root/fuzz-test-generation/exp/opencv/fuzzer/imread/crash_3/crash+0x4d90ce)
        #7 0x7fafffa17c86 in __libc_start_main /build/glibc-uZu3wS/glibc-2.27/csu/../csu/libc-start.c:310
        #8 0x42e459 in _start (/root/fuzz-test-generation/exp/opencv/fuzzer/imread/crash_3/crash+0x42e459)
    0x602000002578 is located 4 bytes to the right of 4-byte region [0x602000002570,0x602000002574)
    freed by thread T0 here:
        #0 0x4d6b6d in operator delete(void*) (/root/fuzz-test-generation/exp/opencv/fuzzer/imread/crash_3/crash+0x4d6b6d)
        #1 0x7611f5 in __gnu_cxx::new_allocator::deallocate(int*, unsigned long) /usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/ext/new_allocator.h:125:2
        #2 0x7611f5 in std::allocator_traits >::deallocate(std::allocator&, int*, unsigned long) /usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/alloc_traits.h:462:13
        #3 0x7611f5 in std::_Vector_base >::_M_deallocate(int*, unsigned long) /usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/stl_vector.h:180:4