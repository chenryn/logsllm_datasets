Covert Channels
Towards a Qual Project
Rachel Greenstadt
Harvard University
Covert Channels – p.1/21
Overview
■ About covert channels
■ Example channel: TCP timestamps
■ Problems with the example channel
■ Directions in covert channel research
Covert Channels – p.2/21
What’s a Covert Channel?
■ A channel transfers information in a way
that violates a security policy
■ This comes from military literature
■ Alternately, consider ...
Covert Channels – p.3/21
Alice and Bob in Jail
■ Alice and Bob plan to escape
■ But the Warden monitors their messages!
■ If the warden suspects ->
solitary conﬁnement
Covert Channels – p.4/21
Isn’t that a bit subversive?
■ Well, yes...
■ But censorship resistance
■ And privacy
■ And freedom
■ Ok, how do we start?
Covert Channels – p.5/21
Threat Modelling:
Know Your Warden
■ Watch trafﬁc over channel
Attempt to detect suspicious activity
■ Close off potential channels
through ﬁltering
■ Allow legitimate communication.
Covert Channels – p.6/21
Covert Channel Properties
■ Undetectability
♦ Plausible (legitimate cover)
♦ Open functionality
♦ Encode the message to match channel
statistically
■ Robustness
♦ Message survive natural/malicious
lossiness
♦ Indispensable
Covert Channels – p.7/21
Example Channel
■ My ﬁrst publication!
■ joint work with John Gifﬁn, Peter Litwack,
Richard Tibbetts
■ Broken in some ways
Covert Channels – p.8/21
Why TCP Timestamps?
■ TCP ubiquitous - plausibility
■ Possible to modify the timestamp/delay
packets
■ Slow connection - low order bits random
■ Encryption produces random bits
■ Seems simple, encrypt message,
hide it in low order bits
Covert Channels – p.9/21
Robustness???
■ Don’t get TCP reliability if you use the
timestamps!
■ Bits delivered out of order
■ Bits dropped randomly
■ Data acknowledged, not packets, can’t get
reliability there.
■ Timestamps must increase
■ Timestamps are an option, can be
replaced/squashed.
Covert Channels – p.10/21
How to get reliability?
■ Divide data into blocks
■ Use a hash of the headers to tell receiver
which bit is in timestamp
■ Encrypt that bit
■ Make sure you send each bit o times
■ Assume the receiver will get the block,
then move on
■ The receiver keeps a checksum to tell
when to move on to next block
Covert Channels – p.11/21
Sending Data
SHA1
Hash of Headers and Key
KeyBit
Index
bits 0-7
bit 8
Current Message Block
Plain Text Bit
Cipher Text Bit
Secret Key
Packet Header
Covert Channels – p.12/21
Receiving Data
SHA1
Current Message Block
Hash of Headers and Key
KeyBit
Index
bits 0-7
bit 8
Secret Key
Packet Header
Timestamp
Cipher Text Bit
Plain Text Bit
Covert Channels – p.13/21
Rewriting the Timestamp
LSB of timestamp
=
cipher text bit?
Start
Increment
timestamp
Did the high order
bits change?
Recompute
cipher text bit
Done
YES
NO
NO
YES
Covert Channels – p.14/21
Detecting the TCP
Timestamp Channel
■ Drew Hintz, Defcon 10
■ Problem: Low order bits aren’t
cryptographically random
■ Algorithm:
♦ Record all the low bits of the timestamp
♦ Put them through a complex
randomness test
♦ If very random, then covert channel used
Covert Channels – p.15/21
Can This Idea Be Saved?
■ Increase the occupation number
♦ (or use some less braindead error correctio
scheme)
■ Model the distribution of timestamps
■ Remove some packets to lower the entropy
of the channel
■ Arms race?
Covert Channels – p.16/21
Should This Idea Be Saved?
■ Complex, low bandwidth channel.
■ Easy to remove anyway -
timestamps are an option you could strip
them from the packets or modify them.
■ Maybe better off with another channel
(say TCP initial seq numbers)
♦ Are they really random?
♦ Removable with a 32 bit offset
Covert Channels – p.17/21
Security Through Obscurity?
■ Can you have a widespread covert channel?
♦ example: break the Chinese ﬁrewall?
■ In crypto, algorithm public, key secret
■ But known channels are closeable
■ Should the channel be secret too?
■ 3 can keep a secret if 2 of them are dead.
Covert Channels – p.18/21
Solutions?
■ Superiminal channels.
■ More generalized covert channel scheme
♦ Easy to apply to new channels
♦ In band method of channel rotation.
Covert Channels – p.19/21
Back to Randomness
■ Maybe hard if limited to using
true cryptographic randomness
■ Need to encrypt to arbitrary distributions
■ Maybe use ECCs and the rejection method
♦ Graph desired distribution,
♦ Pick uniform distribution which is larger
♦ Remove anything which doesn’t ﬁt
Covert Channels – p.20/21
Potential Directions
■ Come up with a ﬂexible covert channel
scheme which can be used in many channels
■ Create a protocol for jumping between
multiple covert channels.
Covert Channels – p.21/21