# Covert Channels: Towards a Qualitative Project
**Rachel Greenstadt, Harvard University**

## Overview
- **Introduction to Covert Channels**
- **Example: TCP Timestamps as a Covert Channel**
- **Problems with the Example Channel**
- **Directions in Covert Channel Research**

---

### What is a Covert Channel?
- A covert channel is a method of transferring information that violates a security policy.
- This concept originates from military literature.
- Alternatively, consider it as a means of bypassing censorship, ensuring privacy, and maintaining freedom.

---

### Alice and Bob in Jail
- **Scenario**: Alice and Bob are planning an escape but their communication is monitored by the warden.
- **Risk**: If the warden suspects any covert communication, they will be placed in solitary confinement.
- **Challenge**: How can Alice and Bob communicate without being detected?

---

### Threat Modeling: Know Your Warden
- **Monitoring**: The warden watches the traffic over the channel to detect suspicious activity.
- **Filtering**: The warden closes off potential channels through filtering.
- **Legitimate Communication**: The warden allows legitimate communication to continue.

---

### Properties of Covert Channels
- **Undetectability**
  - **Plausible Cover**: The channel must appear legitimate.
  - **Open Functionality**: The channel should be open and functional.
  - **Statistical Matching**: The message should be encoded to match the statistical properties of the channel.
- **Robustness**
  - **Survivability**: The message must survive natural or malicious lossiness.
  - **Indispensability**: The channel should be indispensable to avoid easy detection and closure.

---

### Example Channel: TCP Timestamps
- **Publication**: My first publication, a joint work with John GifÔ¨Ån, Peter Litwack, and Richard Tibbetts.
- **Properties**:
  - **Ubiquity**: TCP is widely used, making the channel plausible.
  - **Modifiability**: It is possible to modify the timestamp and delay packets.
  - **Randomness**: In slow connections, the low-order bits of the timestamp appear random.
  - **Encryption**: Encryption produces random bits, which can be hidden in the low-order bits of the timestamp.

---

### Robustness Issues
- **Reliability**: Using timestamps for covert communication does not provide TCP's reliability.
- **Order and Loss**: Bits may be delivered out of order or dropped randomly.
- **Acknowledgment**: Data, not packets, are acknowledged, making it difficult to ensure reliability.
- **Monotonicity**: Timestamps must increase, and they are an optional feature that can be replaced or squashed.

---

### Achieving Reliability
- **Data Division**: Divide the data into blocks.
- **Hashing**: Use a hash of the headers and key to identify which bit is in the timestamp.
- **Encryption**: Encrypt the bit and send each bit multiple times.
- **Checksum**: The receiver maintains a checksum to determine when to move to the next block.

---

### Sending and Receiving Data
- **Sending Process**:
  - Use SHA1 to hash the headers and key.
  - Determine the key bit index and encrypt the plaintext bit.
  - Place the ciphertext bit in the packet header.
- **Receiving Process**:
  - Use SHA1 to hash the headers and key.
  - Decrypt the ciphertext bit to retrieve the plaintext bit.
  - Use the checksum to track the progress and move to the next block.

---

### Rewriting the Timestamp
- **Algorithm**:
  - Set the least significant bit (LSB) of the timestamp to the ciphertext bit.
  - Increment the timestamp.
  - Check if the high-order bits have changed.
  - Recompute the ciphertext bit if necessary.

---

### Detecting the TCP Timestamp Channel
- **Detection Method**: Drew Hintz, Defcon 10
- **Problem**: The low-order bits of the timestamp are not cryptographically random.
- **Algorithm**:
  - Record all low bits of the timestamp.
  - Apply a complex randomness test.
  - If the bits are very random, a covert channel is likely in use.

---

### Can This Idea Be Saved?
- **Improvements**:
  - Increase the occupation number or use a more robust error correction scheme.
  - Model the distribution of timestamps.
  - Remove some packets to lower the entropy of the channel.
  - Consider an arms race scenario where both sides continuously improve their methods.

---

### Should This Idea Be Saved?
- **Complexity and Bandwidth**: The channel is complex and has low bandwidth.
- **Removability**: Timestamps are an optional feature that can be stripped or modified.
- **Alternative Channels**: Consider other channels like TCP initial sequence numbers.
  - **Randomness**: Are these really random?
  - **Removal**: Can they be removed with a 32-bit offset?

---

### Security Through Obscurity?
- **Widespread Covert Channels**: Can a covert channel be widespread, e.g., to break the Chinese firewall?
- **Cryptography Principles**: In cryptography, the algorithm is public, but the key is secret.
- **Known Channels**: Known channels can be closed.
- **Secret Channels**: Should the channel itself be kept secret?

---

### Potential Solutions
- **Superliminal Channels**: More advanced and flexible covert channels.
- **Generalized Scheme**: Develop a generalized covert channel scheme that is easy to apply to new channels.
- **Channel Rotation**: Implement an in-band method for rotating between multiple covert channels.

---

### Back to Randomness
- **Challenges**: It may be difficult to use true cryptographic randomness.
- **Encryption**: Need to encrypt to arbitrary distributions.
- **Error-Correcting Codes (ECCs)**: Use ECCs and the rejection method.
  - **Graph Distribution**: Graph the desired distribution.
  - **Uniform Distribution**: Pick a uniform distribution that is larger.
  - **Rejection Method**: Remove anything that doesn't fit the desired distribution.

---

### Potential Directions
- **Flexible Covert Channel Scheme**: Develop a flexible scheme that can be used across various channels.
- **Protocol for Channel Rotation**: Create a protocol for jumping between multiple covert channels.

---

This presentation aims to provide a comprehensive overview of covert channels, their properties, and potential research directions.