title:Certified mailing lists
author:Himanshu Khurana and
Hyung-Seok Hahm
Certiﬁed Mailing Lists
National Center for Supercomputing Applications
Electrical and Computer Engineering Dept.
Himanshu Khurana
University of Illinois
Urbana-Champaign, IL, USA
PI:EMAIL
Hyung-Seok Hahm
University of Illinois
Urbana-Champaign, IL, USA
PI:EMAIL
eﬀectively support such dissemination and exchange, ser-
vices similar to those provided by postal mail such as fair
delivery, non-repudiation, and conﬁdentiality are needed. In
other words, there is a need to develop certiﬁed mailing lists.
Certiﬁed email for two-party email exchange is a well stud-
ied problem and aims to ensure that the recipient gets the
email content if and only if the sender gets a proof-of-receipt
from the recipient. In addition, this exchange is often conﬁ-
dential in that only the sender and receiver can see the email
content. Certiﬁed email protocols derive from a larger fam-
ily of protocols for fair exchange of digital goods and are
close in nature to fair non-repudiation protocols, which are
an instance of fair exchange. Certiﬁed email protocols fall
into two categories:
Inline protocols
employ a Trusted Third Party (TTP) that is actively in-
volved in message exchange while in optimistic protocols the
sender and receiver exchange messages directly and rely on
the TTP only for dispute resolution. Many inline (e.g., [14],
[28], [16], [3]) as well as optimistic (e.g., [4], [7], [11]) proto-
cols for two-party exchange have been proposed. Recently,
several multi-party fair exchange, fair non-repudiation, and
certiﬁed email protocols have been proposed as well. Of
these ([17], [23]) are inline while ([5], [8], [24], [15], [27]) are
optimistic.
inline or optimistic.
MLs are popular largely because they oﬄoad the manage-
ment of list subscriber information (e.g. email addresses)
from users to the list server and signiﬁcantly reduce user
overheads. Certiﬁed MLs must retain this ease in that sub-
scribers should be able to oﬄoad the management of nec-
essary keying material and message processing that provide
certiﬁed email delivery. This unique challenge is not satisﬁed
by existing multi-party certiﬁed email optimistic ([15], [27])
and inline solutions [23] all of which require the sender to
process individual receipts from the recipients and maintain
public keys of every recipient to encrypt emails for conﬁden-
tiality.
In this paper we develop a novel inline certiﬁed mailing list
protocol that retains the ease of use of existing ML systems.
Inline protocols are more suitable than optimistic protocols
for two reasons. First, MLs already use an on-line entity (i.e.
the list server) for email exchange. Second, only an on-line
entity can be used to oﬄoad message processing for certi-
ﬁed delivery such that subscriber overhead is minimized. In
fact, our protocol uses a TTP that is co-located with the list
server for simplicity (but this is not necessary for the cor-
rect operation of the protocol). The protocol provides the
necessary assurances for certiﬁed delivery while minimizing
subscriber overhead. We also formally verify the correctness
ABSTRACT
Email List Services (or simply, mailing lists) are becoming
increasingly common for collaborative computing. In order
to enable their use for oﬃcial purposes with increased eﬀec-
tiveness and security, services typically provided by postal
mail (e.g. fair delivery) need to be provided in mailing lists.
In this paper we propose a novel Certiﬁed Mailing-list Proto-
col (CMLP) that provides fair delivery, conﬁdentiality, non-
repudiation of origin and receipt, and authentication and in-
tegrity. We have formally speciﬁed and veriﬁed the CMLP
protocol with Proverif, which is a fully-automated protocol
veriﬁcation tool.
Categories and Subject Descriptors
H.4.3 [Communications Applications]: Electronic Mail
Keywords
Mailing lists, Certiﬁed delivery
1.
INTRODUCTION
As more and more user communities are engaging in col-
laborative tasks, use of Email List Services (or simply Mail-
ing Lists - MLs) is becoming common; i.e., emails exchanged
with the help of a list server (an example of a commonly used
list server software is Majordomo). In addition to being a
commonly used means of establishing collaborative groups,
MLs are also an integral component of many groupware ap-
plications such as document annotation and storage [26] [9],
mobile teamwork [22], and software development [19]. The
increasing popularity of mailing lists (MLs) for exchanging
both public and private information content can be gauged
from the fact that there are over 300,000 registered LIST-
SERV lists while only 20% of those serve public content [13].
In addition to supporting exchange of private information
content, MLs can be used for dissemination and exchange of
oﬃcial documents (e.g., in multi-party contract negotiations
and signing, oﬃcial announcements). However, in order to
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
AsiaCCS’06 March21-24, 2006, Taipei, Taiwan
Copyright 2006 ACM 1-59593-272-0/06/0003 ...$5.00.

of our protocol using Proverif [2], which is a fully-automated
protocol veriﬁcation tool.
The rest of this paper is organized as followed. In section
2 we detail the requirements of a certiﬁed mailing list pro-
tocol. In Section 3 we present our protocol and analyze it
informally.
In Section 4 we discuss the overhead imposed
by the the protocol and give examples of its use. In Sec-
tion 5 we formally verify the protocol using Proverif and we
conclude in Section 6.
2. REQUIREMENTS AND APPROACH
Certiﬁed email protocols are an instance of fair exchange
protocols where the recipient obtains an email if and only
if the sender obtains a receipt. The aim of such protocols
is to be resistant to possible attempts at cheating by the
involved parties. Furthermore, when a dispute arises, all
parties should be able to provide irrefutable evidence to-
wards the resolution of the dispute. In this section we ﬁrst
discuss the entities that would be involved in the Certiﬁed
Mailing List Protocol (CMLP). We then deﬁne the require-
ments of certiﬁed mailing list protocols. Blundo et al. [11]
provide a more comprehensive list of requirements of certi-
ﬁed email protocols dealing with two party email exchange
and while we do not include all those requirements, we do
include ones that distinguish mailing lists from two party
email exchange. We then discuss our approach in satisfying
these requirements.
The following entities are involved in the CMLP:
• List Moderator (LM). LM is a user (or process) that cre-
ates a list to be maintained at the list server, authenticates
users, and helps them subscribe to and unsubscribe from
the list. To create a list, LM establishes key material with
the list server, and to subscribe a user, it distributes key
material to the joining user. LM signs and distributes cer-
tiﬁcates of list members, and provides certiﬁcate validation
with respect to list membership. We assume that LM is an
autonomous entity; in particular, it is not controlled by the
list server.
• List Server (LS). LS creates lists, maintains member-
ship information (e-mail addresses and key material), adds
and removes subscribers based on information received from
LM , and forwards e-mails sent by a valid list subscriber to
all current subscribers of that list.
• Trusted Third Party (TTP). T T P is directly involved
It
in exchange of messages between sender and receivers.
is responsible for ensuring fairness by providing recipients
with email contents and senders with receipts. For simplicity
we co-locate the T T P with LS and call the entity L/T ;
however, this co-location is not necessary for the correct
operation of our protocol as we discuss later.
• Users/Subscribers. Users subscribe to lists by sending
join requests to LM , obtaining key material from LM , and
then sending key material to L/T to complete the subscrip-
tion process. Users send and receive certiﬁed email with the
help of L/T .
The following are the requirements and our approach in ad-
dressing them for the CMLP:
tocol in an eﬀort to gain any advantage from the exchanged
messages. At the completion of a strongly fair certiﬁed mail-
ing list protocol all parties should get the information they
desired or no one should be able to obtain any useful infor-
mation. This implies that a receiver (i.e. a list subscriber)
gets access to an email message if and only if all list sub-
scribers get the message and the sender obtains a receipt
from every subscriber of that list.
Approach. The basic design choice of inline pro-
tocol allows us to use L/T for providing strong fairness in
CMLP. L/T provides strong fairness by forwarding the key
that can be used to decrypt a given email to all list sub-
scribers only when it is able to give the email sender a receipt
from all subscribers for that message.
Weak Fairness. Weakly fair certiﬁed mailing list proto-
cols must not allow any party to interrupt or corrupt a pro-
tocol in an eﬀort to gain any advantage from the exchanged
messages. At the completion of a weakly fair certiﬁed mail-
ing list protocol every pair of sending and receiving parties
should get the information they desired or no one should be
able to obtain any useful information. This implies that a
receiver (i.e. a list subscriber) gets access to an email mes-
sage if and only if the sender obtains a receipt from at least
that receiver. This weaker notion of fairness may suﬃce for
some applications (e.g. information propagation) but not for
others (e.g. multi-party contract negotiations and signing)1.
Approach. Again, we use L/T to provide weak
fairness in CMLP. L/T does so by forwarding the key that
can be used to decrypt an email message to a given list
subscriber only when it is able to give the email sender a
receipt from that subscriber for that message.
Conﬁdentiality. Only the sender and the receivers shou-
ld be able to extract the plaintext contents of email mes-
sages. This implies that the list server and any other entity
involved in the protocol should not be able to access the
message contents.
Approach. This requirement deserves a closer
look as it has been addressed in several diﬀerent ways to
varying extents in the literature. In two-party certiﬁed email
protocols it has been deemed important that the T T P (whe-
ther inline or optimistic) should not be able to read emails as
part of the conﬁdentiality requirement. To address this goal
Blundo et al.
[11] require the sender to encrypt the email
with the receiver’s public key while in order to reduce the
PKI overhead, Abadi et al.
[3] assume a partially trusted
T T P and use the T T P ’s public key for encrypting emails. In
multi-party certiﬁed email conﬁdentiality of emails has been
used as a means to achieve fairness in that the key encrypt-
ing the email is made available to the recipients only when
the sender obtains receipts from the recipients. To that end,
Zhou [27] requires the sender to encrypt the symmetric email
encryption key individually with each recipient’s public key
while Kremer and Markowitch [23] use a group encryption
scheme that allow the sender to compute a single encryption
for all recipients.
When using mailing lists for multi-party certiﬁed email
we need to be concerned about two entities outside the set
of sender and recipients, namely, LS and T T P . Our goal
is to ensure that neither LS nor T T P can read the emails.
However, preventing the list server that forwards emails to
the list subscribers from being able to read those emails is a
Strong Fairness. Strongly fair certiﬁed mailing list proto-
cols must not allow any party to interrupt or corrupt a pro-
1Note that this notion of strong and weak fairness is diﬀerent
from that for non-repudiation protocols deﬁned in [23].

tricky problem. Khurana et al.[21] show in their SELS pro-
tocol that we can solve this problem and address the conﬁ-
dentiality requirement via a novel software-based proxy en-
cryption scheme presented in the paper. This proxy encryp-
tion scheme allows L/T to transform messages between the
sender and receivers without requiring access to the email
plaintext or to private keys that can be used to decrypt the
email messages. Furthermore, list subscribers only have to
maintain one public encryption/decryption key pair. Other
approaches such as those undertaken by multi-party certi-
ﬁed email protocols would require list subscribers to main-
tain public encryption/decryption key pairs for all recipi-
ents, which goes against the mailing list approach. To ad-
dress conﬁdentiality in CMLP, we use proxy encryption and
present the proxy encryption scheme for CMLP in Section
3.
Non-repudiation of origin. Any party that originates
a given message should not be able to falsely deny having
originated it.
Approach. We use digital signatures to provide
non-repudiation of origin. The sender must sign outgo-
ing emails and receivers can provide emails along with the
sender’s signature to ensure non-repudiation of origin.
Non-repudiation of receipt. The recipient of a mes-
sage should not be able to falsely repudiate the fact that she
received the message.
Approach. We use digital signatures to provide
non-repudiation of receipt. The receiver must sign email
receipts and the sender can provide the email along with the
receiver’s signature on the receipt to ensure non-repudiation
of receipt.
Authenticity and Integrity. Parties involved in the
protocol should be able to verify each other’s identities and
should not be able modify messages without such modiﬁca-
tions being detected.
Approach. We use digital signatures to provide
authentication and integrity. All protocol messages are sign-
ed by the entity sending the message and the recipients of
these messages can verify the digital signature to authenti-
cate the sender and to ensure that the messages have not
been modiﬁed in transit.
3. PROTOCOL
In the section, we describe our inline Certiﬁed Mailing-
list Protocol (CMLP). In keeping with the requirements and
approach outlined in the previous section the CMPL proto-
col combines properties of multi-party inline fair exchange
and fair non-repudiation protocols with SELS [21]. Earlier
work in multi-party inline fair exchange [17] introduces the
notion of a semi trusted inline third party where the third
party is not trusted with access to the (digital) goods be-
ing exchanged (it is, however, trusted to execute the fair
exchange protocol correctly). More recently work in inline
fair non-repudiation [23], which is closer in nature to certi-
ﬁed email than fair exchange of digital goods, presents an
approach that is suitable for CMLP. That is, to encrypt the
email with a symmetric key and distribute the key to only
those recipients that have provided the sender with a re-
ceipt. Furthermore, this work retains the notion of a semi
trusted third party even though that is not an explicitly
stated goal. To achieve fair non-repudiation the protocol
requires the sender to send two messages − one to the re-
ceivers directly and one to the T T P . We believe that this
can be improved upon in the mailing list setting and we
achieve fair exchange of certiﬁed email in a more optimized
way with the sender only needing to send one message to
L/T (this is possible because we combine fair exchange of
certiﬁed email with the proxy encryption scheme of SELS).
Instead of designing layered protocols where a fair ex-
change protocol would be placed on top of SELS, we develop
an integrated protocol for two reasons. First, we provide
a modiﬁcation to the proxy encryption scheme that allows
L/T to deliver messages with one less exponentiation than