# Evaluation of Denial-of-Service Attacks on DNS Servers

## 1. Introduction
This section evaluates the performance of DNS servers under various denial-of-service (DoS) attacks, including UDP-based and TCP-based attacks, with and without SYN cookies, and TLS-based attacks.

## 2. Experimental Setup
The experiments were conducted using a testbed environment. We tested connection initiation without using persistent connections or TCP fast-open. Foreground traffic was generated using the `dig` program, while attack traffic was generated using a custom-written UDP/TCP flooder or `hping3`. The number of attackers and the observed attack rates were varied, and each experiment was repeated 10 times.

## 3. Results

### 3.1. UDP-based DNS Performance Under DoS Attack
In this scenario, all traffic is UDP. A UDP receiver cannot verify source addresses, allowing an attacker to spoof query source addresses and defeat source-based rate-limiting or filtering. The server must respond to both legitimate and attack queries, leading to the exhaustion of either host processing power or network capacity in the reverse path.

- **Attack Rate**: Two attackers can easily DoS the server if not network-limited.
- **Server Capacity**: The server handles about 230k queries/s at full capacity (CPU limited).
- **Performance Metrics**:
  - **CPU Usage**: More than 99%.
  - **Query Latency**: Median latency increases significantly under overload.
  - **Failed Queries**: The number of unanswered queries rises dramatically.

### 3.2. TCP-based DNS Performance Under Spoofed DoS Attack
We considered three variations of a TCP SYN-flood attack:

- **Without SYN Cookies**:
  - **Single Attacker**: Can send 60k SYN/s, consuming all possible TCP connections, resulting in 70% of foreground queries being dropped.
  - **With SYN Cookies**:
    - **State Management**: All state is pushed back to the sender, so attack traffic consumes no memory at the server, and no foreground replies are lost.

- **Non-Spoofed Addresses**:
  - **Rate Limiting**: If the server rate-limits to 10 new connections/s per IP address, it requires 6k attackers to fully consume 60k TCP connection slots.
  - **Scaled-Down Experiment**: With 4096 active connections, 5 attackers are required to consume most connection slots, dropping all legitimate traffic.

### 3.3. TCP-based DNS Performance with Non-Spoofed DoS Attack
- **Rate Limiting**: The server uses SYN cookies against spoofers and rate limits to 1 TCP connection per source-IP when under attack.
- **Large DNS Providers**: Clusters of machines require even more attackers to overwhelm the system.

### 3.4. TLS-based DNS Performance
- **TLS Handshakes**: Expensive, requiring strict rate limits per source address (e.g., 4 TLS connections/s per IP address).
- **Server Capacity**: A server with a PIII-933 MHz, dual CPU can handle more than 1000 TLS connections/s with optimizations.
- **Attacker Resources**: Requires 250 machines to overwhelm a single server.
- **Non-Spoofed Addresses**: Active filtering becomes possible, making it harder for an attacker to succeed.

## 4. Summary
- **TCP with SYN Cookies and TLS**: Greatly increase the work factor for an attacker to overwhelm the DNS server compared to UDP.
- **Large Deployments**: Large DNS deployments, such as authoritative servers for large zones, are even harder to defeat.
- **Feasibility and Benefits**: Large-size servers should find TCP and TLS both feasible and highly beneficial for mitigating DoS attacks.

## 5. Client-Side Latency
For clients, the primary cost of T-DNS is the additional latency due to connection setup. We examined stub-to-recursive and recursive-to-authoritative query latency with TCP and TLS, highlighting the effects of pipelining and out-of-order processing. Three parameters affect these results: computation time, client-server RTT, and workload. RTTs dominate performance, not computation.

### 5.1. Computation Costs
- **Experiment Setup**: 4-core x86-64 CPUs, Fedora 19 with Linux-3.12.8 over a 1Gb/s Ethernet.
- **Measurements**:
  - **TCP Handshakes**: 10k handshakes, each by setting up and closing a connection.
  - **TLS Connection Establishment**: 1000 connections, isolating key exchange from certificate validation.
  - **TLS Resumption**: 1000 trials.

### 5.2. Results
- **TCP Setup and DNS Resolution**: Fast (less than 1 ms).
- **TLS Setup**: More expensive (8 or 26 ms), but resumption is ten times faster.
- **DNSCurve and DNSCrypt**: Similar computation required for session key establishment.

## 6. Conclusion
TCP with SYN cookies and TLS significantly increase the work factor for an attacker to overwhelm the DNS server compared to UDP. Large DNS deployments, especially those with multiple servers, are even more resilient. For clients, the additional latency due to connection setup is manageable, and the benefits of enhanced security and resilience make TCP and TLS highly beneficial.