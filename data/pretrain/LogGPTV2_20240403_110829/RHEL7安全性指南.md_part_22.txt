``` screen
rule protocol value="ah" accept
```
:::
:::
::: section
::: titlepage
#### [⁠]{#chap-Hardening_Your_System_with_Tools_and_Services.html#Using_the_Rich_Rule_Log_Command_Example_2}4.5.15.4.2. 多规则登录命令使用示例 2 {.title}
:::
::: para
同意新的 `IPv4`{.systemitem} 和 `IPv6`{.systemitem} 连接
`FTP`{.systemitem}，并使用审核每分钟登录一次：
``` screen
rule service name="ftp" log limit value="1/m" audit accept
```
:::
:::
::: section
::: titlepage
#### [⁠]{#chap-Hardening_Your_System_with_Tools_and_Services.html#Using_the_Rich_Rule_Log_Command_Example_3}4.5.15.4.3. 多规则登录命令使用示例 3 {.title}
:::
::: para
为 `TFTP`{.systemitem} 协议同意来自 `192.168.0.0/24`{.systemitem}
地址的新的 `IPv4`{.systemitem} 连接，并且使用系统日志每分钟登录一次：
``` screen
rule family="ipv4" source address="192.168.0.0/24" service name="tftp" log prefix="tftp" level="info" limit value="1/m" accept
```
:::
:::
::: section
::: titlepage
#### [⁠]{#chap-Hardening_Your_System_with_Tools_and_Services.html#Using_the_Rich_Rule_Log_Command_Example_4}4.5.15.4.4. 多规则登录命令使用示例 4 {.title}
:::
::: para
为 `RADIUS`{.systemitem} 协议拒绝所有来自 `1:2:3:4:6::`{.systemitem}
的新 `IPv6`{.systemitem}
连接，并每分钟在级别3登录。接受来自其他来源的新的 `IPv6`{.systemitem}
连接：
``` screen
rule family="ipv6" source address="1:2:3:4:6::" service name="radius" log prefix="dns" level="info" limit value="3/m" reject
rule family="ipv6" service name="radius" accept
```
:::
:::
::: section
::: titlepage
#### [⁠]{#chap-Hardening_Your_System_with_Tools_and_Services.html#Using_the_Rich_Rule_Log_Command_Example_5}4.5.15.4.5. 多规则登录命令使用示例 5 {.title}
:::
::: para
转发带有 `TCP`{.systemitem} 协议的端口 4011 上的来自
`1:2:3:4:6::`{.systemitem} 的 `IPv6`{.systemitem} 包，到端口 4012 上的
`1::2:3:4:7`{.systemitem} 。
``` screen
rule family="ipv6" source address="1:2:3:4:6::" forward-port to-addr="1::2:3:4:7" to-port="4012" protocol="tcp" port="4011"
```
:::
:::
::: section
::: titlepage
#### [⁠]{#chap-Hardening_Your_System_with_Tools_and_Services.html#Using_the_Rich_Rule_Log_Command_Example_6}4.5.15.4.6. 多规则登录命令使用示例 6 {.title}
:::
::: para
把一个源地址加入白名单，以便允许来自这个源地址的所有连接
``` screen
rule family="ipv4" source address="192.168.2.2" accept
```
:::
::: para
更多示例请查阅 `firewalld.richlanguage(5)`{.filename} 说明页。
:::
:::
:::
:::
::: section
::: titlepage
## [⁠]{#chap-Hardening_Your_System_with_Tools_and_Services.html#Firewall_Lockdown}4.5.16. 锁定防火墙 {.title}
:::
::: para
如果以 `root`{.systemitem} 身份运行本地应用或者服务（比如
[**libvirt**]{.application}
），就能更改防火墙设置。因为这个功能，管理员可以锁定防火墙设置，这样无论是不向锁定的白名单添加应用，还是仅允许添加应用，都可以要求防火墙更改。锁定设置默认不启动，如果启动，用户可以确保本地应用或者服务不需要对防火墙做任何设置更改。
:::
::: section
::: titlepage
### [⁠]{#chap-Hardening_Your_System_with_Tools_and_Services.html#Configuring_Firewall_Lockdown}4.5.16.1. 设置防火墙锁定 {.title}
:::
::: para
以 `root`{.systemitem} 身份运行一个编辑器，把以下行增加到
`/etc/firewalld/firewalld.conf`{.filename} 文件：
``` synopsis
Lockdown=yes
```
以 `root`{.systemitem} 身份使用以下命令重启防火墙：
``` screen
~]# firewall-cmd --reload
```
欲在默认区内使用 `imaps`{.literal} 服务，则以管理员账户，也就是
`wheel`{.systemitem}
组中的用户（通常是系统的第一位用户），使用以下命令：
``` screen
~]$ firewall-cmd --add-service=imaps
Error: ACCESS_DENIED: lockdown is enabled
```
:::
::: para
欲使用 [**firewall-cmd**]{.application} ，以 `root`{.systemitem}
身份输入以下命令：
``` screen
~]# firewall-cmd --add-lockdown-whitelist-command='/usr/bin/python -Es /usr/bin/firewall-cmd*'
```
如果需要重启后会继续使用此设定，增加 `--permanent`{.option} 选项。
:::
::: para
以 `root`{.systemitem} 身份重启防火墙：
``` screen
~]# firewall-cmd --reload
```
以管理员账户输入以下命令，尝试在默认区里再次启动 `imaps`{.literal}
服务。您将被提示输入用户密码：
``` screen
~]$ firewall-cmd --add-service=imaps
```
这样，命令成功运行。
:::
:::
::: section
::: titlepage
### [⁠]{#chap-Hardening_Your_System_with_Tools_and_Services.html#Configure_Lockdown_with_the_Command_Line_Client}4.5.16.2. 用命令行客户端配置锁定 {.title}
:::
::: para
查询锁定是否执行，以 `root`{.systemitem} 身份输入以下命令：
``` screen
~]# firewall-cmd --query-lockdown
```
如果是锁定状态，打印退出状态为 `0`{.literal} 的
`yes`{.literal}。否则，打印退出状态为 `1`{.literal} 的 `no`{.literal}。
:::
::: para
启动锁定，以 `root`{.systemitem} 身份输入以下命令：
``` screen
~]# firewall-cmd --lockdown-on
```
:::
::: para
关闭锁定，以 `root`{.systemitem} 身份输入以下命令：
``` screen
~]# firewall-cmd --lockdown-off
```
:::
:::
::: section
::: titlepage
### [⁠]{#chap-Hardening_Your_System_with_Tools_and_Services.html#Configure_Lockdown_Whitelist_Options_with_the_Command_Line}4.5.16.3. 用命令行配置锁定白名单选项 {.title}
:::
::: para
锁定白名单可以包含命令，安全环境，用户和用户ID。如果白名单上输入的一个命令以一个星号
["[\*]{.quote}"]{.quote}
结束，那么所有以这个命令开始的命令行都匹配。如果没有
["[\*]{.quote}"]{.quote} ，那么包括参数的绝对命令必须匹配。
:::
::: para
环境，是指一个正在运行的应用或者服务的安全 (SELinux)
环境。用以下命令获取一个正在运行的应用的环境：
``` screen
~]$ ps -e --context
```
这个命令检查所有运行中的应用。通过 [**grep**]{.application}
工具将输出转移，得到需要的应用。比如：
``` screen
~]$ ps -e --context | grep example_program
```
:::
::: para
列出白名单上的所有命令行，以 `root`{.systemitem} 身份输入以下命令：
``` screen
~]# firewall-cmd --list-lockdown-whitelist-commands
```
:::
::: para
增加一个*command* 命令到白名单，以 `root`{.systemitem}
身份输入以下命令：
``` screen
~]# firewall-cmd --add-lockdown-whitelist-command='/usr/bin/python -Es /usr/bin/command'
```
:::
::: para
从白名单移除一个 *command* 命令，以 `root`{.systemitem}
身份输入以下命令：
``` screen
~]# firewall-cmd --remove-lockdown-whitelist-command='/usr/bin/python -Es /usr/bin/command'
```
:::
::: para
查询 *command* 命令是否在白名单上，以 `root`{.systemitem}
身份输入以下命令：
``` screen
~]# firewall-cmd --query-lockdown-whitelist-command='/usr/bin/python -Es /usr/bin/command'
```
如果存在，显示退出状态为 `0`{.literal} 的 `yes`{.literal}
，否则，显示退出状态为 `1`{.literal} 的 `no`{.literal} 。
:::
::: para
列出白名单上的所有安全环境，以 `root`{.systemitem} 身份输入以下命令：
``` screen
~]# firewall-cmd --list-lockdown-whitelist-contexts
```
:::
::: para
增加一个环境 *context* 到白名单，以 `root`{.systemitem}
身份输入以下命令：
``` screen
~]# firewall-cmd --add-lockdown-whitelist-context=context
```
要使这个命令持续，增加 `--permanent`{.option} 选项。
:::
::: para
从白名单移除一个环境 *context* ，以 `root`{.systemitem}
身份输入以下命令：
``` screen
~]# firewall-cmd --remove-lockdown-whitelist-context=context
```
要使这个命令持续，增加 `--permanent`{.option} 选项。
:::
::: para
查询白名单上是否有环境 *context* ，以 `root`{.systemitem}
身份输入以下命令：
``` screen
~]# firewall-cmd --query-lockdown-whitelist-context=context
```
如果存在，显示退出状态为 `0`{.literal} 的 `yes`{.literal}
，否则，显示退出状态为 `1`{.literal} 的 `no`{.literal} 。
:::
::: para
列出白名单上所有用户 ID ，以 `root`{.systemitem} 身份输入以下命令：
``` screen