## Page 570
548丨MySQL DBA工作笔记：数据库管理、架构优化与运维开发
的脑图。
15.3.2
就一目了然了。
的CPU监控曲线图，有一条阈值线（在这里就是30%），通过阈值来作为参考，高还是低，
其实也不知道20%是高还是低，所以我们可以对指标数据通过可视化来衔接，比如我们显示
我们设定阈值是30%，如果现在的状态是20%，业务同学在查看的时候如果没有量化的指标
预想有较大偏差，我们需要引起注意。
统配置和系统性能，我们可以提供相关的 API或者数据查询服务来开放这些数据。
也不知道该找谁，所以在信息的透明性和对等性方面还是存在较大的改进空间。比如对于系
的一些问题和业务提出的问题，整理后的结果。
们需要了解下应用关注的问题，
业者自的滋出写一
在技术细节上，他们也存在一些疑惑，那就是对于一些指标的量化，比如CPU 监控指标，
应该建立哪些索引，但是没有创建
期望支持更灵活的需求
期望支持更高效的需求
我把整体的巡检信息分为了三个维度：系统、数据库和业务，整理成了如下15-14
为了避免范围铺的太大，难以聚焦，我们需要做一些引导。下图15-13 所示是我们预设
我们在和业务同学沟通的时候，期望得到体系化的信息，
从沟通的情况来看，业务同学的很多需求还是很迫切的，但是如果你不去问，可能他们
最迫切的需求
MySQL 业务巡检的维度设计
MySQL慢日志的提取
问题需求
一部分原因是字段类型设置，
连接数的分布情况
应用的数据变化情况
哪些表走了全表扫描
SQL
数据库
周期较长，改动难度较大
周期较长，需要迭代优化
周期可控，相对较短
业务维度关注的问题
，大体分为以下几类，如表15-1所示。
时间周期
图15-13
表15-1
重新适配操作方式，周期相对较长
系统性能
系统配置
容易衡量，见效快
结果难以量化
结果预测
，所以在进行沟通调研之前，我
系统可用性，实例可用性
SQL执行频率，比如ops,tps等指标
数据写入，存储容量，是否需要调整
数据缓存是多大，能够支撑多大的并发能力？
不重要不紧急
重要不紧急
重要紧急
权重
---
## Page 571
么我们需要转化被动为主动，即思考巡检数据对我们有什么用处？
保护。
来提前告知，在多次提醒无效的情况下，如果出了问题，对 DBA 同学本身也是一种无形的
好得多。另外一种就是如果这个问题很严重，但是不好协调，我们可以通过专业报告的方式
现问题主动提示，一般来说对于业务同学是一种相对友好的方式，远比出现问题被动处理要
样做是有问题的，这样做是有风险的。这样做有几种好处，一种是由被动变为主动，主动发
否配置得当等。在权限允许的情况下，我们可以提供这样的自助服务来明确告诉业务同学这
表和索引了，但是绝大多数情况下，业务同学压根不知道自己所处的环境是否存在问题，是
知道你们理解问题的维度是不是基本平衡。
息的补充，能够减少业务处理中的更多确认环节，最起码业务同学提出一个需求就可以明确
可以使用多个从库提供读写分离的服务，而不是仅仅告诉一个VIP就完事了。通过数据库信
但是实际业务中可能是一主多从的架构，那么业务同学就需要了解目前的架构方式，那么就
些信息，这就是一个自助服务的初衷。
系统的配置信息和监控报警来确认是不是服务出现了问题。在这个时候他们可以主动提取这
务同学而言，就是一种透明地处理方式，比如业务同学发现某个服务产生了问题，可以通过
的数据模型来发现一些潜在的问题。
说，更有意义的便是后面三类信息的聚合。通过后面三类信息的提取和聚合，能够根据设定
，对于业务巡检，这是整个巡检的核心任务，对于业务同学，他能够接触到的就是数据库
“对于系统巡检问题，主要是面向运维同学，需要作出响应和明确的处理方法，而对于业
当然，上面的巡检设计是一种被动的方式，如果希望巡检能够发挥出强有力的支撑，那
关于数据库巡检，对于业务同学来说就是一种全新的补充，比如对业务同学开放了VIP，
有的同学可能还不大理解，我们来举个例子，比如我们会每天收集数据库中的表信息（数
关于信息的采集方式，大部分数据是通过数据字典的配置信息得到，而对于业务巡检来
在线分析数据
数据库连
元数据变
慢日志
信息的采集方式
数据库信息
巡检信息
图15-14
业务信息
工单信息
数据库概要信息
第15章运维自助化服务|549
安全性检查
---
## Page 572
550丨MySQL DBA工作笔记：数据库管理、架构优化与运维开发
来通过多个维度来进行表结构变更的追溯。
以根据一个或多个维度来评估是否和现有的业务类型匹配。
那些日表，月表等周期表。
做下清理。
常感受不到，但是一出问题就哪里都是问题了。
单的数据如何发挥余热的，我来给出一个我的建议：
据库、表名、表数据大小、
续的数据库服务巡检效果也会大打折扣。.
15.3.3
的
那些流程外创建出的表，流程外删除的表，可以做到统筹的管理。
（（8）权限和安全隐患管理：我们可以通过全局的方式来评估现有环境存在的隐患，比如
（5）数据库的特性和业务类型不匹配：如果表数据写入过多，很可能是日志型业务，可
（4）周期表探测：如果一些业务存在周期表需求，那么通过反向的方式可以很轻松找出
（3）一些没有用到的表，例如临时表和备份表，这些表像牛皮癣一样，我们要对数据库
对于系统巡检整体上有如下图15-15所示的一些部分需要注意。
系统巡检是服务巡检的第一站，我们要站好第一班岗，如果系统巡检稀里糊涂，那么后
让我们对更多的问题具有主动的管理方式，而从一开始就希望想全，想好也是不切实际
以上只是抛砖引玉，主要想表达的就是巡检在一定阶段之后会产生数据分析的更大价
（7）数据生命周期管理：有了时间维度的信息，我们可以建立数据生命周期管理模型，
（6）预测数据量变化：可以通过历史数据的变化建立模型预测近一段时间的数据量变化
（2）库中的表过多：可以通过统计的方式得知哪些环境是属于不规范环境，这类问题通
（1）冷数据：一些长时间未操作的数据，可以通过数据量和时间维度进行权衡。
查看crontab的执行情况
文件的分区和规划情况
多网卡IP使用情况
时间同步设置NTP
系统巡检该怎么做
swap使用情况
网络信息
系统任务
系统配置
、索引大小、
系统巡检
、表结构变更时间、碎片情况等)，这样一份看起来简
图15-15
安全性检查
硬件信息
监控报警
主机信息
ILO状态检查
硬盘坏块和硬盘问题
备份保留情况，是否有异机备份
检查操作系统防火墙情况
系统文件权限
操作系统内核参数
监控采集检查
操作系统版本
---
## Page 573
以上版本。
较新的稳定版本，比如 RedHat5是个相对较旧的版本，需要尽可能升级到 RedHat 6.8或
不推荐的，因为安全策略太高，导致初始化失败。
有些可以使用chrome，firefox，有些则不适用。
Controller），为了方便理解，在此我们暂且统称为ILO服务。
于惠普的远程控制卡服务，在 Dell服务中叫做 IDRAC（Integrated Dell Remote Access
以硬件信息-ILO 状态检查为例来提供一种巡检思路，ILO（IntegratedLights-Out）服务是基
操作系统的版本也需要提前规划，如果有些服务的版本过旧，需要考虑升级到一个
（1）操作系统版本
在主机层面需要注意如下的两点：
在其他层面，我也做一些阐述。
这两点比较微妙，但是在实际中碰到问题的时候更多，特别是对于 Java，过高的版本是
（6）ILO 页面和Java 的版本关系
ILO在不同的硬件产品版本中浏览器也有一些使用差异，有些版本使用IE低版本可以，
（5）ILO在不同的硬件产品版本和浏览器的兼容性
这个过程会持续几分钟。
这个时候可以重启 ILO 来达到目标。
如果用户名，密码正确，但上一次登录没有正常退出，可能会有下面的报错。
（4）ILO超过最大用户连接数限制检查
可以使用下面的命令来重置密码。
（3）ILO密码检查
这个可以联系系统组的同学帮你开启，也可以参考下面的步骤。
（2）ILO模块是否开启
是否拥有对服务器资源的管理权限，可以通过Web 访问方式进行验证。
（1）检查L0可用性和使用情况
对于ILO服务，我们需要做如下的巡检：
可能整体看起来没有太深入的东西，但是和实践结合起来就有很多的注意事项，我们就
RAC0218：已达到用户会话的最大数
/usr/bin/ipmitool user set password 2 'xunjian'
#chkconfig
#modprobe ipmi_watchdog
ipmitool mc reset cold
modprobe
ipmi
ipmi
devintf
on
第15章运维自助化服务|551
---
## Page 574
552丨MySQL DBA工作笔记：数据库管理、架构优化与运维开发
据图。
如删除归档，发现一直在扫描一个空目录，而真正的归档目录已经快撑爆了。
份。
是提前准备好，在下次重启的时候能够省事省力；对于备库而言，也可以提早准备。
15.3.4
除。
坑
用到。
如果对巡检工作做一个整体的规划，
如果存在特殊的网络设置情况，
对于操作系统中的防火墙设定最好能够提供完整的备份，
，对于一些关键业务，在有灾备的情况下，也可以额外增加部分的逻辑备份。
操作系统内核参数可以作为一个重要的检查项，当然对于主库而言可能重启不现实，但
要使用根据公司统一配置的时间同步服务器进行时间的修正。
（2）时间同步设置NTP
查看例行的执行任务是否正常，
（1）查看Crontab的执行情况
在系统任务方面，有如下的几点补充：
另外，还要看看是否还在使用很陈旧的文件系统。
对于文件的分区和使用情况也需要格外关注，对于一些过旧的历史文件可以压缩或者删
swap 的监控还是比较重要,如果 swap 争用较高,而剩余内存不足,很容易触发oom-killer。
（1）swap 使用情况
在系统配置方面，有以下的补充：
（3）检查操作系统防火墙情况
这个需要结合目前的系统使用情况，
（2）备份保留情况，是否有异机备份
对于部分文件，需要考虑文件的权限，保证不会被恶意篡改。
（1）系统文件权限
在安全检查方面，有如下的几点补充：
（2）操作系统内核参数
（2）文件的分区和规划情况
业务巡检整体设计
比较尴尬的是Crontab 运行了，但是什么都没有干，比
需要提前标注，
我把巡检方向的事情整理成如下图15-16所示的数
如果数据库是非归档和测试环境，
要不帮你处理问题的同事会踩到一个大
到时候可以在灾备切换的时候
，可以设定这些关键文件和
，可以考虑异机备
---
## Page 575
验证。
15.3.5我眼中的业务巡检设计
的任务。
通过运维系统的模型层获得。
间范围和维度，可以再从OpenTSDB获得渲染到可视化方案中。
到MySQL 中。
基于这个快照数据是状态值，代表里一个时间周期内的变化情况，数据可以通过提取持久化
数据，通过OpenTSDB是一种比较快捷的方式。
实现两类重要需求：数据聚合和统计，这也是时序数据库擅长的方向。
期望实现定时任务和异步任务两种触发模式，队列使用了Redis。
优先级拆分为了系统监控层和系统信息层。
所以对于业务巡检来说，首先提取的数据是从 MySQL 中得到的，如果要自定义提取时
此外还可以支持在线巡检的方式，通过服务接口实时获取巡检数据，当然有一些数据是
历史数据可再生提取，因为在时序中存储了大量的历史数据，如果要提取历史范围内的
而里面相对重要的部分是OpenTSDB，这是基于 HBase 的计算层，能够通过OpenTSDB
整体来说，巡检的底层是大量依赖于任务调度来实现。任务调度采用 Celery 来对接完成，
在明确了巡检的需求和主要任务之后，我们可以设计一个初版的原型来进行基本功能的
以上的任务提取的内容都可以设定相应的维度和阈值，来通过这些信息来触发生成相应
在这个基础上，借助于任务调度，我们来定时触发，比如每个小时生成一个快照数据，
巡检模块的整体设计是分了三类：系统层、数据库层和业务层，其中系统层的数据根据
业务信息
数据库信息
系统监控信息
系统信息
图15-16
第15章运维自助化服务|553
---
## Page 576
554|MySQLDBA工作笔记：数据库管理、架构优化与运维开发
确提到业务的维度，是希望明确这是一个业务巡检，我们是基于业务的信息支持。
通过对增删改查的数量进行摸底，则会对整个数据库的特征有一个明确的把握，在概要里明
有一些可以衡量的指标，比如TPS、QPS 等，可以对数据库的整体性能情况有一个了解，而
的就是这个数据库有多少用户连接，现在是否有主从延迟，有的话，现在延迟是多少。如果
为三类：
户需求和实现难度进行调整，下图15-17是我设计的一个初版的业务巡检。
总体来说，是希望做成自助巡检服务，我们来评估一个数据库的整体情况，我把信息分
MySQL5.7.16-Slave1
如果是一个全新的数据库，其实硬件配置信息是相对次要的，对业务同学来说，最关心
（3）架构设计
（2）图表分析
（1）概要信息
原型设计的意义不言而喻，
连接数
表和索引维度巡检信息
172.18.11.21
存在全表扫描的表
自增列溢出检查
系统负载曲线图
兄余索引
20/600
172.18.11.20
MySQL5.7.16-
Mastel
MySQL5.7.16-Slave2
172.18.11.22
组合查询条件
能够对我们的设计工作进行一个快速验证，
创建大量临时表的SQL
SQL维度巡检信息
数据量变化曲线图
Update
Insert
巡检建议列表
慢查询概览
全表扫描SQL
图15-17
500 Select:800
Delete:20
数据库在线380天
系统在线
每小时日志量：4G（较高）
归属业务：
CPU
巡检打分：xxx分
据库缓存
消耗资源最多的用户
消耗资源最高的数据库
数据库维度巡检信息
8核
网络流量曲线图
650天
内存8G/12G
PI:EMAIL
产品线-业务
便于及时根据用