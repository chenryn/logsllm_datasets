# Checklist
  * I have verified that the issue exists against the `master` branch of Celery.
  * This has already been asked to the discussions forum first.
  * I have read the relevant section in the  
contribution guide  
on reporting bugs.
  * I have checked the issues list  
for similar or identical bug reports.
  * I have checked the pull requests list  
for existing proposed fixes.
  * I have checked the commit log  
to find out if the bug was already fixed in the master branch.
  * I have included all related issues and possible duplicate issues  
in this issue (If there are none, check this box anyway).
## Mandatory Debugging Information
  * I have included the output of `celery -A proj report` in the issue.  
(if you are not able to do this, then at least specify the Celery  
version affected).
  * I have verified that the issue exists against the `master` branch of Celery.
  * I have included the contents of `pip freeze` in the issue.
  * I have included all the versions of all the external dependencies required  
to reproduce this bug.
## Optional Debugging Information
  * I have tried reproducing the issue on more than one Python version  
and/or implementation.
  * I have tried reproducing the issue on more than one message broker and/or  
result backend.
  * I have tried reproducing the issue on more than one version of the message  
broker and/or result backend.
  * I have tried reproducing the issue on more than one operating system.
  * I have tried reproducing the issue on more than one workers pool.
  * I have tried reproducing the issue with autoscaling, retries,  
ETA/Countdown & rate limits disabled.
  * I have tried reproducing the issue after downgrading  
and/or upgrading Celery and its dependencies.
## Related Issues and Possible Duplicates
#### Related Issues
  * None
#### Possible Duplicates
  * None
## Environment & Settings
**Celery version** :
**`celery report` Output:**
    software -> celery:5.3.0b1 (dawn-chorus) kombu:5.3.0b1 py:3.10.5
                billiard:4.0.2 redis:4.3.4
    platform -> system:Linux arch:64bit, ELF
                kernel version:5.15.60-1-MANJARO imp:CPython
    loader   -> celery.loaders.app.AppLoader
    settings -> transport:redis results:disabled
    broker_url: 'redis://localhost:6379//'
    task_acks_late: True
    deprecated_settings: None
The actual commit of `celery` is `ebdf9e5` (see PR #7755).
# Steps to Reproduce
## Required Dependencies
  * **Minimal Python Version** : 3.8
  * **Minimal Celery Version** : master, 5.3.0b1
  * **Minimal Kombu Version** : 5.3.0b1
  * **Minimal Broker Version** : Redis 5, 6
  * **Minimal Result Backend Version** : N/A
  * **Minimal OS and/or Kernel Version** : N/A
  * **Minimal Broker Client Version** : redis==4.3, hiredis==2.0
  * **Minimal Result Backend Client Version** : N/A or Unknown
### Python Packages
**`pip freeze` Output:**
    amqp==5.1.1
    asttokens==2.0.8
    async-timeout==4.0.2
    backcall==0.2.0
    billiard==4.0.2
    -e git+https://gitlab.merchise.org/merchise/celery.git@ebdf9e53d4b5edd9aa66cb7faf413776dd5d74a5#egg=celery
    click==8.1.3
    click-didyoumean==0.3.0
    click-plugins==1.1.1
    click-repl==0.2.0
    decorator==5.1.1
    Deprecated==1.2.13
    executing==1.0.0
    hiredis==2.0.0
    ipython==8.5.0
    jedi==0.18.1
    kombu==5.3.0b1
    matplotlib-inline==0.1.6
    packaging==21.3
    parso==0.8.3
    pexpect==4.8.0
    pickleshare==0.7.5
    prompt-toolkit==3.0.31
    ptyprocess==0.7.0
    pure-eval==0.2.2
    Pygments==2.13.0
    pyparsing==3.0.9
    pytz==2022.2.1
    redis==4.3.4
    six==1.16.0
    stack-data==0.5.0
    traitlets==5.3.0
    vine==5.0.0
    wcwidth==0.2.5
    wrapt==1.14.1
### Other Dependencies
N/A
## Minimally Reproducible Test Case
The client sends an argument of type `datetime.date`, but the task receives an
instance of `datetime.datetime`.
I have updated the `app/myapp.py` example with a simple `echo` task (see  
#7755) like this:
    @app.task
    def echo(d):
        print(repr(d))
I'm running the worker like this:
    $ celery_broker_url="redis://localhost/" python myapp.py worker -l INFO
And the client like this:
    $ celery_broker_url="redis://localhost/" python -c "import myapp, datetime; myapp.echo.delay(datetime.date.today())"
# Expected Behavior
The worker should receive a `datetime.date`. Expected log:
    [2022-09-11 12:16:52,824: WARNING/ForkPoolWorker-8] datetime.date(2022, 9, 11)
# Actual Behavior
The worker receives a `datetime.datetime`. Actual log:
    [2022-09-11 12:16:52,823: INFO/MainProcess] Task myapp.echo[6e6eabbf-b4ad-4a21-aee9-69b27d6767dd] received
    [2022-09-11 12:16:52,824: WARNING/ForkPoolWorker-8] datetime.datetime(2022, 9, 11, 0, 0)
    [2022-09-11 12:16:52,824: INFO/ForkPoolWorker-8] Task myapp.echo[6e6eabbf-b4ad-4a21-aee9-69b27d6767dd] succeeded in 0.00020399800268933177s: None