# A.2. 公钥加密 {.title}

公钥加密是一种被众多加密算法和系统所采用的方法，其核心特征在于使用不对称密钥算法。与对称密钥算法不同，公钥加密技术利用了一对密钥——公钥和私钥，这使得许多新的通讯保护和信息验证方法成为可能。该技术不需要在初始阶段安全地交换一个或多个保密密钥，同时也支持创建数字签名。

公钥加密是全球广泛使用的基础设施技术之一，构成了诸如传输层安全性协议（TLS，即SSL的后续版本）、PGP 和 GPG 等互联网标准的基础。

在公钥加密中，最显著的技术特点是采用了非对称密钥算法。这意味着用于加密信息的密钥（公钥）与解密信息所需的密钥（私钥）不是同一个。每位用户都拥有这样一对密钥：公钥公开共享，而私钥则保密存储。只有通过对应的私钥才能解密由特定用户的公钥加密的信息。这两个密钥之间存在数学上的关联，但从实践角度来看，很难从公钥推导出私钥。这一发现自上世纪七十年代以来彻底改变了密码学领域。

相比之下，对称密钥算法及其变体已经有着数千年的历史。这种算法要求发送方和接收方共同持有同一份保密密钥，该密钥既用于加密也用于解密过程。为了使用对称加密方案，必须事先确保双方能够安全地共享这个保密密钥。

由于对称密钥算法通常计算效率更高，因此常常会结合密钥交换算法来实现密钥的安全传递，然后利用这个共享密钥以及对称加密算法来传输数据。例如，PGP 和 SSL/TLS 协议就采用了这样的混合加密方式。

## A.2.1. Diffie-Hellman 密钥交换 {.title}

Diffie-Hellman (D-H) 是一种加密协议，允许两个之前未曾相识的实体通过不安全的通信渠道共同建立一个共享的秘密密钥。之后，这个秘密密钥可以用来加密基于对称密钥算法的通信内容。

### A.2.1.1. Diffie-Hellman 历史

此方案最初由 Whitfield Diffie 和 Martin Hellman 于 1976 年提出，尽管实际上它的发明者是英国信号情报机构 GCHQ 的 Malcolm J. Williamson，并且该发明一直保持机密状态直到后来才被公开。2002年，Hellman 提议将此算法命名为 Diffie-Hellman-Merkle 密钥交换，以表彰 Ralph Merkle 对公钥加密技术发展的贡献。

尽管 Diffie-Hellman 密钥协商协议本身是非认证性的，但它为多种认证协议奠定了基础，并且被应用于 TLS 的短期模式中，提供前向保密性（根据具体配置可能是 EDH 或 DHE）。

美国专利 4,200,770 描述了该算法，并认可了 Hellman、Diffie 和 Merkle 作为其发明人。

## A.2.2. RSA {.title}

RSA 是一种著名的公钥加密算法，得名于其三位创始人 Rivest、Shamir 和 Adleman。它是第一个既能用于加密又能用于认证的公钥算法之一，在电子商务等领域得到广泛应用。当使用足够长度的密钥并正确实施时，RSA 被认为是非常安全的。

## A.2.3. DSA {.title}

DSA（数字签名算法）是美国联邦政府推荐的一种数字签名标准。不同于 RSA，DSA 仅限于签名功能，并不是一个完整的加密算法。

## A.2.4. SSL/TLS {.title}

传输层安全协议（TLS）及之前的 SSL 协议提供了网络通信中的端到端加密服务，适用于包括网页浏览、电子邮件等多种应用场合。

## A.2.5. Cramer-Shoup 加密系统 {.title}

Cramer-Shoup 系统是一种非对称密钥加密算法，首次证明了对于适应性选择明文攻击具有安全性。其安全性依赖于判定性 Diffie-Hellman 假设的难解性。相较于 ElGamal 加密系统，Cramer-Shoup 添加了额外组件来增强抗延展性，从而即使在面临复杂攻击时也能保证数据完整性。

## A.2.6. ElGamal 加密 {.title}

ElGamal 加密算法基于 Diffie-Hellman 协议，属于非对称密钥加密类型。它是由 Taher ElGamal 在 1985 年提出的，并被 GNU 隐私卫士等开源软件项目采用。