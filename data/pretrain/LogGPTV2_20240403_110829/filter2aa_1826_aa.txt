# Momigari: Overview of the Latest Windows OS Kernel Exploits Found in the Wild

## Presenters
- **Boris Larin**  
  @oct0xor  
  Senior Malware Analyst (Heuristic Detection and Vulnerability Research Team)  
  Head of Advanced Threats Research and Detection Team
- **Anton Ivanov**  
  @antonivanovm  
  Twitter: @antonivanovm

## Date
30-May-19

## Introduction
Momigari, a Japanese tradition of searching for the most beautiful leaves in autumn, serves as a metaphor for our quest to uncover and analyze the most sophisticated and elusive zero-day exploits. This presentation will provide an overview of the latest Windows OS kernel exploits found in the wild.

### What This Talk Is About
1. **Introduction to Zero-Day Exploit Discovery:**
   - Brief overview of the methods and challenges involved in finding zero-day exploits.
2. **Detailed Analysis of Elevation of Privilege (EOP) Exploits:**
   - Discussion of three EOP zero-day exploits that were discovered in the wild.
   - Insights into the current state of Windows OS kernel exploitation and new techniques.
   - In-depth coverage of two exploits targeting Windows 10 RS4.
3. **Exploitation Framework:**
   - Unveiling the framework used to distribute these exploits.

### Kaspersky Lab Detection Technologies
- **Technology #1: Exploit Prevention**
  - **Delivery:** Detects and blocks malicious payloads.
  - **Memory Manipulation:** Prevents memory-based attacks.
  - **Exploitation:** Blocks shellcode execution.
  - **Shellcode Execution:** Stops the execution of malicious code.
  - **Exploitation Prevention:** Detects and prevents exploitation attempts.
  - **Detection and Blocking:** Identifies and blocks malicious activities.
  - **Payload Execution Start:** Monitors and halts the start of payload execution.

- **Technology #2: The Sandbox**
  - **Artifacts Assembled for Analysis:**
    - Files/URLs for testing.
    - Execution logs.
    - Memory dumps.
    - System/registry changes.
    - Network connections.
    - Screenshots.
    - Exploit artifacts.
  - **Verdict and Rich Data on Activity:**
    - Detailed analysis and reporting.
  - **Test VMs:**
    - Multiple test virtual machines to simulate and detect exploits.

### Exploits Caught in the Wild by Kaspersky Lab
- **May 2018:** CVE-2018-8174 (Windows VBScript Engine Remote Code Execution Vulnerability)
- **October 2018:** CVE-2018-8453 (Win32k Elevation of Privilege Vulnerability)
- **November 2018:** CVE-2018-8589 (Win32k Elevation of Privilege Vulnerability)
- **December 2018:** CVE-2018-8611 (Windows Kernel Elevation of Privilege Vulnerability)
- **March 2019:** CVE-2019-0797 (Win32k Elevation of Privilege Vulnerability)
- **April 2019:** CVE-2019-0859 (Win32k Elevation of Privilege Vulnerability)

### Key Observations
- Six exploits discovered in one year, with one being a remote code execution in Microsoft Office and five being elevation of privilege escalations.
- These numbers likely represent only a fraction of the total number of undiscovered exploits.
- Payouts for single exploit acquisition programs, such as Zerodium, highlight the high value of these vulnerabilities.

### Challenges in Zero-Day Exploit Detection
- **Detection and Prevention:**
  - Our technologies are designed to detect and prevent exploitation, but identifying zero-day exploits requires additional analysis.
  - Some exploits are easy to detect, while others are more challenging due to false alarms and the complexity of the attack.
- **Web Browsers:**
  - Improvements are needed in the detection of web browser exploits, particularly those involving scripts.
  - A possible solution is to implement an interface for security applications to access loaded scripts, similar to the Antimalware Scan Interface (AMSI).

### Case Studies

#### Case 1: CVE-2018-8453
- **Overview:**
  - Exploitation module distributed in encrypted form.
  - Targets x64 platform, but analysis shows x86 exploitation is possible.
  - Supports multiple Windows versions from Windows 7 to Windows 10 RS4.
- **Vulnerability:**
  - Located in the `NtUserSetWindowFNID` syscall.
  - Allows changing the FNID of a window being released, leading to a double free vulnerability.
- **Exploitation:**
  - Uses usermode callbacks and heap grooming techniques.
  - Employs multiple heap groom tactics, including blind heap groom and address leaking.
  - Leverages GDI objects and thread manipulation to achieve system token theft.
- **Mitigation:**
  - New mitigations, such as GDI object isolation, have been implemented in Windows 10 RS4 to reduce the attack surface.

#### Case 2: CVE-2018-8589
- **Overview:**
  - Least interesting exploit presented but led to significant discoveries.
  - Race condition in win32k due to improper locking of messages sent synchronously between threads.
  - Targets Windows 7 SP1 32-bit, requiring at least two processor cores.
- **Exploitation:**
  - Utilizes `MoveWindow()` and `WM_NCCALCSIZE` message to initiate recursion and exploit the race condition.
  - Both threads share the same window procedure, leading to the race condition.

### Conclusion
The continuous evolution of Windows OS kernel exploitation techniques and the increasing difficulty of discovering and mitigating zero-day exploits underscore the importance of robust detection and prevention technologies. By sharing our findings and insights, we aim to contribute to the broader cybersecurity community's efforts to protect against these threats.