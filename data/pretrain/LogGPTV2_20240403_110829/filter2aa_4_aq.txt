If you are interested in using an Android distribution for penetration testing, I have run Kali NetHunter on my tablet. It's a lot of fun on an airplane, but please remember to make ethical decisions. I had an interesting conversation on a flight from Denver to Los Angeles sitting next to a physician using the wireless service the airline offers. He was obviously reading confidential patient information that I could see because he had no privacy screen on his laptop. A peek at his taskbar told me a lot about the precautions he was taking. I pulled up NetHunter on my Android tablet and asked if he wanted to see something interesting. I'm not sure if I was supposed to be flattered that he said I looked like a librarian, not a hacker.
Download the appropriate VMware image, and in Lab 14.2, you'll unzip it and open it with the player.
LAB 14.2: INSTALLING 7‐ZIP AND USING KALI LINUX IN VMware WORKSTATION
The file you just downloaded ends with the extension .7z. 7‐zip is open source and free software that is a file archiver that utilizes a high compression ratio. To download the 7‐Zip software for Windows, go to www.7-zip.org. Like you see in Figure 14.7, you have a choice between 32‐bit and 64‐bit architecture. It is a teeny tiny file, so it takes only a few seconds to download. Double‐click the 7‐zip icon and install the software.
Figure 14.7: Downloading and installing 7‐Zip
Now that you have 7‐Zip installed, find your download of Kali Linux. Right‐click the file and choose 7zip And Extract Here. This will unpack the zipped file create folder with the VM inside.
Open your VMware Workstation Player and choose the Open A VM option. When the Open dialog box opens, navigate to the proper folder and, like you see in Figure 14.8, the Kali Linux VM will be an option. Select the folder and then click Open.
Figure 14.8: Opening Kali Linux VM
Once the Kali Linux VM is open, you will have several options. As you see in Figure 14.9, you have the ability to power on the VM or edit the settings. If you click the Edit VM Settings link, you will be able to allocate more resources to the virtual environment before you hit the Play button.
Figure 14.9: Editing VM settings
In Figure 14.10, you see the Hardware tab. The default configuration of 2 GB of memory, four processors, a 80 GB hard drive, a CD/DVD that will auto‐detect if one is installed on your host and a NAT network adapter. For most workloads, CPU virtualization adds only a small amount of overhead, which means it will be very close to what you see on a bare‐metal installation. The host operating system will not perform very well when it runs low on memory, so be careful about giving yourself too much memory. If the host OS doesn't have enough memory for itself, it can cause thrashing, constantly swapping data between memory and the paging file on disk. If you want this VM to connect to the Internet using the host's network, NAT is often the easiest way to go. The sound card and display will auto‐detect unless you make a change. Take note of the defaults currently displayed for future performance tuning.
Figure 14.10: Default configuration for Kali Linux
The next tab to the right of Hardware is Options. The options for your Kali Linux VM include giving the VM a new name, using power options such as entering full‐screen mode when the VM is ready to be powered on, and enabling or disabling folders. Considering this is Kali Linux and you will be compromising machines, I usually disable this. Shared folders will expose your host files to programs in the VM. In Figure 14.11, you see the option to disable shared folders or enable if you trust the VM with the data you have stored on the host. Edit your Power options to enter full‐screen mode after powering on by selecting the box to the left and clicking OK.
Figure 14.11: Disabling shared folders
The only other viable option to consider is Unity. Unity in VMware is the ability to display applications directly on the host desktop. The VM console is hidden, and you can minimize the Workstation window. If you're feeling really fancy, you can change the border color around the applications that run in Unity mode on the desktop, as shown in Figure 14.12.
Figure 14.12: Running Kali Linux in Unity mode
Click the OK or Cancel button after you have made your VM modifications, and from the Home page, click the Play Virtual Machine green triangle. You will see the Kali Linux machine spin up. The first time you spin up this VM, it may ask if you moved it or copied it. Select the I Copied It option. “It” is the VM you have created or downloaded.
When the Kali Linux VM is ready, you will see the login screen that's shown in Figure 14.13. The default username is root, and the password is toor.
Figure 14.13: Logging into Kali Linux
If the screensaver pops up while you are reading or otherwise engaged, just press the Esc button on your keyboard. I like to see my VM in full screen on my auxiliary screen, leaving one monitor dedicated to Windows and one dedicated to Kali Linux, like you see in Figure 14.14.
Figure 14.14: Kali Linux desktop
Optimizing Kali Linux
One of the first things I do as a habit is update Kali Linux every single time I open it up. Offensive Security pulls updates from Debian four times a day. This ensures patches and updates are getting incorporated into Kali Linux on a daily basis. Keep your system up‐to‐date and make it part of your routine. As soon as the OS loads, open a terminal, and run apt‐get update, as shown in Figure 14.15. When that process completes and you get your command prompt back, run apt‐get dist‐upgrade (also shown in Figure 14.15).
Figure 14.15: Updating Kali Linux through a terminal
Next, think about the credentials you used to log into this VM of Kali Linux. Those are root credentials. This book has cautioned you with a discussion on least privileges. Adding a nonroot user to Kali Linux is pretty easy. You can still use the root/toor credentials as needed. As you can see in Figure 14.16, the commands to add a user and password are simply useradd ‐m nt ‐G ‐s /bin/bash and passwd nt, respectively.
Figure 14.16: Adding a nonroot username and password
You will probably want to use your name or initials, not mine (even though mine are pretty awesome considering I'm in IT). Be cognizant of using any information or credentials that someone else could use nefariously.
You also might want to consider disabling the screen lock feature. The easiest and fastest way to disable the screen lock feature is to navigate the menu on the left to the very bottom. There is an icon of nine dots, which is your Show Applications icon. At the top of the window is the Search field. Type Settings, navigate toward the bottom of the page, and choose Power. Like you see in Figure 14.17, choose Never as the Blank Screen option.
Figure 14.17: Turning off the Blank screen saver
The next feature you might want to disable is the Automatic Screen Lock. You will find this under Privacy in the Settings menu, as shown in Figure 14.18.
Figure 14.18: Configuring Automatic Screen Lock
Using Kali Linux Tools
Some of the tools in Kali Linux have been discussed in previous chapters of this book—including NMAP, Burp, Wireshark, Social Engineer Toolkit, and Metasploit Framework—but there are so many more. Here are some of my favorites out of hundreds that are extremely specialized but can be put in the following categories:
Information gathering
Maltego
Recon‐ng
Sparta
Utilities
MacChanger
Nikto
Wireless
Kismet
WiFite
Brute forcing
John the Ripper
Hashcat
With these tools, you can test your computer system security using the same techniques that an attacker would. Kali Linux is specifically built to meet the requirements of security auditing and specifically geared toward security specialists. It is not a general‐purpose operating system and should be used only while working toward achieving your security requirements.
As you see in Figure 14.19, by clicking Applications in the upper‐left corner, the menu that drops down already breaks down the tools into different genres such as information gathering, password attacks, and forensics. Explore the menus in your own Kali Linux instance to get familiar with the names of the tools and recognize the placement of those you already know.
Figure 14.19: Kali Favorites menu
Maltego
In the beginning of any type of penetration test or campaign, you want to use your tools to gather as much information as you can. Maltego is one of the best. When you go to Applications ⇨ Information Gathering ⇨ Maltego, as shown in Figure 14.20, you have several choices that require a key. But there is a Community Edition, which you can access by clicking the Run button under Maltego CE (Free).
Figure 14.20: Starting Maltego CE in Kali Linux
After you have created a user login for Maltego, you will be able to fully utilize the features. As you see in Figure 14.21, after logging in, you will access Maltego and have a choice to build a new graphic interface or use an example to get familiar. This is the default example of what data mining looks like. Maltego renders graphs full of links based on relationships between pieces of data sprinkled across the Internet. Maltego uses the visual node representation to assist you in finding the information that is out in the wild that could possibly be used to compromise your environment. There is no graphical export in the community version, but the data is still there at your fingertips.
Figure 14.21: Data sources of Paterva, the owner of Maltego
Recon‐ng
While Maltego is one of my favorite ways to present the data, Recon‐ng is a tool written by one of my favorite organizations: Black Hills InfoSec. Recon‐ng is a Python web reconnaissance framework. It has modules, database interaction, and built‐in functions to help you gather information. It looks like Metasploit and SET to reduce the learning curve, but even with the obvious simplicity, it is a rather complex tool. Type help at the default prompt for a list of all commands.
Next, type show modules. You will get a list of all the discovery, exploit, import, recon, and reporting modules. Next, type user hackertarget and then show info, as you see in Figure 14.22. You can use this module to enumerate hostnames, among other things.
Figure 14.22: Recon‐ng welcome prompt
Sparta
Sparta is another Python tool that is a GUI application that assists in the scanning and enumeration phase. It feels like Zenmap in the beginning when you define the parameters of the network you would like to investigate, as shown in Figure 14.23.
Figure 14.23: Defining parameters in Sparta
However, when you launch Sparta, after the initial Nmap scan and some data collection, it proceeds to run additional tools against the discovered services such as nikto, smbenum, snmpcheck, and more. Figure 14.24 shows an example of some of the data that can be extracted, such as the Sign In screen for the ASUS router on 192.168.1.117.
Figure 14.24: Sparta data collected while running a scan
Services that need a login like telnet or SSH can be sent to the brute‐force tool on the next tab to attempt to crack the password. Right‐click any service that has been discovered and select Send To Brute. Sparta attempts to automate several tasks that you would normally manual execute separately.
MacChanger
After you have all the information from the three previous tools, you may want to change or fake your MAC address if you are attempting to disguise any of your exploit attempts. First, to find a list of all MAC vendors, type macchanger ‐l in your terminal window. You will get a list of all hardware vendors if there is a specific one you want to impersonate.
Next, type ifconfig eth0 down in your terminal window so that you can reassign a new MAC address to eth0, as shown in Figure 14.25. Then type macchanger ‐s eth0 to figure out what your current MAC is. Change ‐s to ‐r to reassign a random MAC to eth0. To bring the eth0 back up, type ifconfig eth0 up. If you did happen to have a specific MAC address you want to use, the command you would type is macchanger ‐m 00:00:00:00:00:00 eth0. A MAC address is hexadecimal, so instead of 0s, you could use any number from 0 to 9 and any letter from A to F.
Figure 14.25: Spoofing your MAC address
Nikto
Now that you're flying incognito with a spoofed MAC address, you can use a tool like Perl‐based Nikto to find vulnerabilities in web servers. One caveat: Nikto is not very stealthy. In fact, just about any IDS or security measure will detect it. We are using it to test for security—it was never designed to be stealthy. I do find it a little funny that the Nikto icon is the same as my Alienware Start button.
Go to the grid array of nine dots at the bottom of your Start menu to bring up the Show Applications window. At the top of the page, search for nikto. Do you still have your Metasploitable2 VM from Chapter 10, “Metasploit’’? Spin it up, find its IP address, and once you have the terminal window open, type nikto ‐host and then add the IP address of the web server you would like to scan for vulnerabilities. The ‐host option is used to specify host(s) to target for a scan. It can be an IP address, hostname, or text file of hosts. Try the example in Figure 14.26; in your Kali Linux terminal, type nikto ‐host http://webscantest.com.
Figure 14.26: Nikto vulnerability scanning of http://webscantest.com
Kismet
For wireless, Kismet is a great way to view what is going on around you. Kismet uses a wireless network card in monitor mode to silently scan Wi‐Fi channels. By capturing all this data, Kismet can visualize the wireless networks around you as well as the activity of any devices. How useful the data is depends on who you are and what you want to do. Kismet can detect wireless cameras, smartphones, and laptops. By using Kismet, you can easily war drive in your neighborhood looking for Wi‐Fi signals and combine it with GPS data to build a map. In fact, you may not even have to get in your car. Visit https://wigle.net to see a global picture of Wi‐Fi networks. Those purple dots are Wi‐Fi networks geographically mapped for you. Guess what helped build this map. Yes, Kismet. Type in your address and zoom in. Do you recognize any of those networks? I recognize the names of networks that populate my Wi‐Fi list. Now I know where they live. Are any of those MAC addresses yours? If so, you may consider turning off your Wi‐Fi when you're not using it.
Starting Kismet is easy. Simply type kismet ‐cYourCardName. As you see in Figure 14.27, you can make permanent changes to the configuration file and set up options for logging as well as the GPS location.
Figure 14.27: Kismet server options
WiFite
If Kismet is the tool to use for Wi‐Fi network detection and sniffer and you need to take this a step further, then think about using Aircrack‐ng or WiFite. These tools can be used for auditing or cracking to recover WEP/WPA/WPS keys once enough packets have been captured. WiFite is called the “set it and forget it” Wi‐Fi cracking tool. As you see in Figure 14.28, there are many options for you to set with WiFite. However, you can simply automate the wireless capture of access points over 40 dB of power using the WPS attack with the command wifite ‐pow 40 ‐wps.
Figure 14.28: WiFite options
John the Ripper
Two community favorite password tools are Hashcat and John the Ripper. If you ask people which one is their favorite, chances are the answer will depend on the person. I like both. If I am not successful with one, I will try the other. I usually use John the Ripper first.
John the Ripper was originally designed to crack Unix passwords. Now it runs on pretty much everything and cracks almost any password. The original version is maintained by Openwall. The version that comes in Kali Linux is called the Jumbo version because it has more hash types and new attack modes. John the Ripper stores cracked passwords in the john.pot file, and its main configuration file is john.conf. There are lots of command‐line options and more options in the configuration file, as you see in Figure 14.29.
Figure 14.29: John the Ripper password cracker
At the simplest level, you can just point John the Ripper at a pwdump file, tell it what type of hashes you want it to crack (NTLM), and let it go. This is the tool that Metasploit Pro by Rapid7 uses to reverse engineer hashes. I've gotten to the point where I recognize the MD5 sum hash for a blank password as well as password for a password.
Hashcat
Hashcat provides much of the same functionality as John the Ripper. They are both open‐source and share the same features. Hashcat is built around using the GPU rather than the CPU for cracking as John the Ripper does. A CPU is the central processing unit, often called the brains of a PC. A GPU is the graphics processing unit, which comprises the chips that render the display images to the monitors. If the CPU is the brain, some call the GPU the brawn. A GPU is better at focusing all the computing power on a specific task. If you're looking to do password‐cracking on a system that has GPU, then use Hashcat. It will be better and faster for many complex passwords.
Remember, passwords should not be stored in clear text. They are stored in one‐way encryption called hashes. There are a couple different ways of obtaining these hashes, but once you grab them, the next step is to reverse‐engineer the hash, unless you want to Pass the Hash in Metasploit. There are gigs of wordlists available on the Internet, but Kali Linux already has some built in. A wordlist is a text file that contains a collection of words to be used in a dictionary attack.
The first thing you want to do is open a terminal window and type in locate wordlist. As you see in Figure 14.30, there are many wordlists available. (I just happen to know that the wordlist built for sqlmap has more than a million words in it.)
Figure 14.30: Hashcat wordlists
After you choose a wordlist, it's time to grab your hashes. In Kali Linux, they are stored in the /etc/shadow file, so if you type in tail /etc/shadow, you should see something like what's shown in Figure 14.31. (I cut off my hashes on purpose—you never know if someone would take the time to reverse engineer my hashes.)
Figure 14.31: Hashes collected on Kali Linux
Now we need to figure out what hashing algorithm was used. To open that file, type more /etc/login.defs.
The more command allows you to page down line by line through this file. Once you're about 80 to 85 percent down the page, you should see what's shown in Figure 14.32.
Figure 14.32: Kali Linux using Encrypt_Method SHA512
Now you can put all the puzzle pieces together. Make a copy of your hashes in a separate file by using the following cp command:
cp /etc/shadow hash.lst
To make sure that it worked, type the following:
More hash.lst
To prepare this file for cracking, you need to remove everything but the hashes. Open the hash.lst file with gedit or vim and delete all the usernames and the colon. Remove the ending colons too. Now the file is only the raw hash itself.
To crack these hashes, I used the following:
hashcat -m 1800 -a 0 -o success.txt -remove hash.lst
/usr/share/sqlmap/txt/wordlist.txt
where
‐m 1800 is the type of hash I'm cracking.
‐a 0 is a dictionary attack.
‐o success.txt is the output file.
‐remove says delete the hash after it was cracked.
hash.lst is the input file.
/usr/share/sqlmap/txt/wordlist.txt is the path to the wordlist.
Open your success.txt file. It took me a little over 10 minutes to get the cracked passwords. If you have issues, try running the command again with a ‐‐force at the end. If that doesn't work, you may have to give the Kali Linux box a few more than the default resources.
As I tell my classes, if at first you don't succeed, try again. You are attempting to force machines to behave in a way they were not originally intended to behave. We are trying to use these machines and vulnerabilities like attackers would. Using that mind‐set is critical to securing our environments. Kali was designed to work even when used in a very hostile environment. The Kali motto is “The quieter you become, the more you are able to hear”. Kali is designed to be as quiet as possible so that you can hide its presence on your network. This chapter was meant to be an introduction to penetration testing and what you have learned is a good foundation. You are now ready to learn more in order to fully exploit the power of Kali Linux, the best penetration testing framework.
CHAPTER 15CISv7 Controls and Best Practices
WHAT YOU WILL LEARN IN THIS CHAPTER:
CIS Basic Controls—The Top Six
As an educator, I firmly believe that humans have to know the “why” to accept change. Most of us are curious creatures of habit and do not change unless sufficiently motivated. Most of us are motivated by either the love of something or the fear of it. In our cyber society, people need to know why certain controls are important, and they have to understand why they are important on a personal level. Knowing something and understanding it are very different. As a cybersecurity trainer, it is my personal mission to educate the public and bring understanding to cyber threats in a personal way. I believe we have to hope for the best but prepare for the worst.
When you are evaluating and auditing your environment for managing your processes and systems, you should determine whether the options you are following are the best practices of conducting inventories, adopting computer policy, and communicating to the people using those systems. You also have to evaluate whether people in the management roles have the practical and technical expertise to assess these options and can provide support and training for users.
The Center for Internet Security (CIS) is a self‐described forward‐thinking, nonprofit entity dedicated to protecting private domains and public society against cyber threats. The controls they publish are the global standard and are the recognized best practices for security. As our cyber worries evolve, so do these best practices. As a cybersecurity professional, I refer to these CIS top 20 controls fairly often as a reminder to secure the world to the best of my ability.
The CIS top 20 controls are broken into three sections. The first six controls are the basic ones. These six controls are essential in any organization for cyber defense. The rest of the controls are divided into foundational and organizational, which focus on technical best practices and processes.
CIS Basic Controls—The Top Six
I recommend that you go to the SANS website, www.sans.org, and look for conferences that are happening near you. In the evenings, they will have mini‐sessions free to the public, usually about an hour long each, of interesting security topics taught by the certified SANS instructors. Sometimes, if you're lucky, they will have an assortment and up to three or four in one evening. In the dozens of sessions I've attended, the one that stands out the most is the one Eric Conrad did a couple years ago in Orlando, Florida. He talked about the top six CIS controls. He said that while he was consulting for a governmental organization on another continent, implementing the top six controls negated about 80 percent of the problems resulting in more security and less likelihood of a breach.
The top six CISv7 basic controls are as follows:
Inventory and Control of Hardware Assets
Inventory and Control of Software Assets
Continuous Vulnerability Management
Controlled Use of Administrative Privileges
Secure Configuration for Hardware and Software on Mobile Devices, Laptops, Workstations, and Servers
Maintenance, Monitoring, and Analysis of Audit Logs
If you read about the major breaches in the last five years, most of them could have been avoided if the organization had subscribed to and executed these six controls. The CISv7 controls have cross‐compatibility or directly map to other cyber compliance and security standards like NIST 800‐53, PCI DSS, and HIPAA. This translates to other organizations using these suggestions as regulations to aid in their respective compliance. The NIST Cybersecurity Framework is another tool that organizations use to organize and strengthen their security posture using the CIS top controls as their baseline for several of their best practices. Let's look at these in more detail.
Inventory and Control of Hardware Assets
One of my favorite sayings in class is that “you cannot protect what you don't know you have.” This control specifically addresses the need to know what is connected to your network. You must develop policy and procedures around maintaining an accurate inventory. It can be rather tedious, but it is critical. If you do it right, it reduces loss risks. You must know what is on your network and who the system belongs to and use that data to prevent anyone unauthorized from accessing the network.
Creating a system inventory is a common task for system and network administrators. An open source security audit tool Nmap or Zenmap has all the necessary features needed to run an ad hoc or automated inventory process. By simply scanning a network using the operating system identification (‐O) command switch and possibly verbose output (‐v) command switch, you can get a list of systems and their protocols. The inventory created provides information that is critical to system, application, and protocol management. The inventory will not include information such as how much memory the system has or how many processors there are. This type of hardware inventory requires either an SNMP agent on the system or a script running on the system to determine the hardware in the system.
What do all network‐connected devices have in common? They speak to each other using a logical address called IP addresses. Who manages IP addresses? Dynamic Host Configuration Protocol (DHCP) manages IP addresses. DHCP also generates logs. For DHCP‐enabled networks, deploying a mechanism to focus on combining system inventory with configuration management and network access control is a win‐win. The inventory management portion is usually based on some type of endpoint management software like System Center Configuration Manager (SCCM). SCCM is a Microsoft systems management software product for managing large groups of computers from servers to workstations to mobile devices. Do not forget IoT when you are coming up with a management policy of your hardware inventory.
If you are a Microsoft customer with an existing Microsoft enterprise agreement, you may already have an SCCM license. SCCM provides software distribution, operating system deployment, and network access as well as the CIS control hardware inventory. There are a couple of options when implementing at SCCM. There is a datacenter edition as well as a standard edition. Both editions include the following tools:
Configuration Manager—for managing the deployment of applications and devices in an enterprise network
Data Protection Manager—for performing backup and recovery for business continuance and disaster recovery
Endpoint Protection—for managing anti‐malware and firewall security
Operations Manager—for monitoring the health and performance of operating systems and hypervisors
Orchestrator—for standardizing and automating processes for operational efficiency
Service Manager—for change control and asset lifecycle management
Virtual Machine Manager—for provisioning and managing resources used to create virtual machines
Inventory and Control of Software Assets