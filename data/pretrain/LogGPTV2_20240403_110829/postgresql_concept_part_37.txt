typename Thenameofanexistingtype.
Outputs
DROP Themessagereturnedifthecommandissuccessful.
ERROR: RemoveType:type ’typename’doesnotexist Thismessageoccursifthespecified
typeisnotfound.
Description
DROPTYPEwillremoveausertypefromthesystemcatalogs.
Onlytheownerofatypecanremoveit.
Notes
DROPTYPEstatementisaPostgreslanguageextension.
RefertoCREATETYPEforinformationonhowtocreatetypes.
Itistheuser’sresponsibilitytoremoveanyoperators,functions,aggregates,accessmethods,
subtypes,andclassesthatuseadeletedtype.
Ifabuilt-intypeisremoved,thebehaviorofthebackendisunpredictable.
Usage
Toremovetheboxtype:
DROP TYPE box;
350 APPENDIXD. REFERENCEMANUAL
Compatibility
SQL3
DROPTYPEisaSQL3statement.
D.44 DROP USER
Name
DROPUSER—Removesauser
DROPUSERname
Inputs
name Thenameofanexistinguser.
Outputs
DROPUSER Themessagereturnediftheuserissuccessfullydeleted.
ERROR: DROPUSER:user"name"doesnotexist This message occurs if the username is
notfound.
DROP USER:user"name"ownsdatabase"name",cannotberemoved You must drop the
databasefirstorchangeitsownership.
Description
DROPUSERremovesthespecifieduserfromthedatabase. Itdoesnotremovetables,views,or
otherobjectsownedbytheuser. Iftheuserownsanydatabaseyougetanerror.
Use CREATE USER to add new users, and ALTER USER to change a user’s properties.
Postgrescomeswithascriptdropuserwhichhasthesamefunctionalityasthiscommand(infact,
itcallsthiscommand)butcanberunfromthecommandshell.
Usage
Todropauseraccount:
DROP USER jonathan;
D.45. DROPVIEW 351
Compatibility
SQL92
ThereisnoDROPUSERinSQL92.
D.45 DROP VIEW
Name
DROPVIEW—Removesanexistingviewfromadatabase
DROPVIEWname
Inputs
name Thenameofanexistingview.
Outputs
DROP Themessagereturnedifthecommandissuccessful.
ERROR: RewriteGetRuleEventRel:rule"_RETname"notfound Thismessageoccursifthe
specifiedviewdoesnotexistinthedatabase.
Description
DROP VIEW dropsanexistingviewfrom thedatabase. To executethiscommandyou mustbe
theowneroftheview.
Notes
ThePostgresDROP TABLEstatementalsodropsviews.
RefertoCREATEVIEWforinformationonhowtocreateviews.
Usage
Thiscommandwillremovetheviewcalledkinds:
DROP VIEW kinds;
352 APPENDIXD. REFERENCEMANUAL
Compatibility
SQL92
SQL92specifiessomeadditionalcapabilitiesforDROPVIEW:
DROP VIEW view { RESTRICT | CASCADE }
Inputs
RESTRICT Ensures that only a view with no dependent views or integrity constraints can be
destroyed.
CASCADE Anyreferencingviewsandintegrityconstraintswillbedroppedaswell.
Notes
Atpresent,toremoveareferencedviewfromaPostgresdatabase,youmustdropitexplicitly.
D.46 dropdb
Name
dropdb—RemoveanexistingPostgresdatabase
dropdb[options]dbname
Inputs
-h,–hosthost Specifiesthehostnameofthemachineonwhichthepostmasterisrunning.
-p,–portport Specifiesthe InternetTCP/IP port or local Unix domain socket fileextension on
whichthepostmasterislisteningforconnections.
-U,–usernameusername Usernametoconnectas.
-W,–password Forcepasswordprompt.
-e,–echo Echothequeriesthatdropdbgeneratesandsendstothebackend.
-q,–quiet Donotdisplayaresponse.
-i,–interactive Issuesaverificationpromptbeforedoinganythingdestructive.
dbname Specifies the name of the database to be removed. The database must be one of the
existingPostgresdatabasesinthisinstallation.
Theoptions-h,-p,-U,-W,and-earepassedonliterallytopsql.
D.47. DROPLANG 353
Outputs
DROPDATABASE Thedatabasewassuccessfullyremoved.
dropdb: Databaseremovalfailed. Somethingdidn’tworkout.
Ifthereisanerrorcondition,thebackenderrormessagewillbedisplayed. SeeDROPDATABASE
andpsqlforpossibilities.
Description
dropdbdestroysanexistingPostgresdatabase. Theuserwhoexecutesthiscommandmustbea
databasesuperuserortheownerofthedatabase.
dropdbisashellscriptwrapperaroundtheSQLcommandDROPDATABASEviathePostgres
interactiveterminalpsql. Thus,thereisnothingspecialaboutdroppingdatabasesviathisorother
methods. This means that the psql must be found by the script and that a database server is
runningatthetargetedhost. Also,anydefaultsettingsandenvironmentvariablesavailabletopsql
andthelibpqfront-endlibrarydoapply.
Usage
Todestroythedatabasedemoonthedefaultdatabaseserver:
$ dropdb demo
DROP DATABASE
Todestroythedatabasedemousingthepostmasteronhosteden,port5000,withverificationand
apeekattheunderlyingquery:
$ dropdb -p 5000 -h eden -i -e demo
Database "demo" will be permanently deleted. Are you sure? (y/n) y
DROP DATABASE "demo" DROP DATABASE
D.47 droplang
Name
droplang—RemoveaprogramminglanguagefromaPostgresdatabase
droplang[connectionoptions][langname[dbname]]
droplang[connectionoptions]–list|-l
354 APPENDIXD. REFERENCEMANUAL
Inputs
droplangacceptsthefollowingcommandlinearguments:
langname Specifies the name of the backend programming language to be removed. droplang
willpromptforlangnameifitisnotspecifiedonthecommandline.
[-d, –dbname dbname]Specifiesfromwhichdatabasethelanguageshouldberemoved.
-l,–list Showsalistofalreadyinstalledlanguagesinthetargetdatabase(whichmustbespecified).
droplangalsoacceptsthefollowingcommandlineargumentsforconnectionparameters:
-h,–hosthost Specifiesthehostnameofthemachineonwhichthepostmasterisrunning.
-p,–portport SpecifiestheInternetTCP/IP portorlocalUnixdomainsocketfileextensionon
whichthepostmasterislisteningforconnections.
-U,–usernameusername Usernametoconnectas.
-W,–password Forcepasswordprompt.
Outputs
Mosterrormessagesareself-explanatory. Ifnot,rundroplangwiththe–echooptionandseeunder
therespectiveSQLcommandfordetails. Checkalsounderpsqlformorepossibilities.
Description
droplang is a utility for removing an existing programming language from a Postgres database.
droplangcurrentlyacceptstwolanguages,plsqlandpltcl.
Although backend programming languages can be removed directly using several SQL com-
mands, it is recommended to use droplangbecauseit performs a number of checksand ismuch
easiertouse. SeeDROPLANGUAGEformore.
Notes
Usecreatelang toaddalanguage.
Usage
Toremovepltcl:
$ droplang pltcl
D.48. DROPUSER 355
D.48 dropuser
Name
dropuser—Drops(removes)aPostgresuser
dropuser[options][username]
Inputs
-h,–hosthost Specifiesthehostnameofthemachineonwhichthepostmasterisrunning.
-p,–portport Specifiesthe InternetTCP/IP port or local Unix domain socket file extensionon
whichthepostmasterislisteningforconnections.
-e,–echo Echothequeriesthatcreatedbgeneratesandsendstothebackend.
-q,–quiet Donotdisplayaresponse.
-i,–interactive Promptforconfirmationbeforeactuallyremovingtheuser.
username Specifiesthenameof thePostgresusertoberemoved. Thisnamemustexistinthe
Postgresinstallation. You willbepromptedforanameifnoneisspecifiedonthecommand
line.
Theoptions-h,-p,and-e,arepassedonliterallytopsql. Thepsqloptions-Uand-Wareavailable
aswell,buttheycanbeconfusinginthiscontext.
Outputs
DROPUSER Alliswell.
dropuser:deletionofuser"username"failed Something went wrong. The user was not re-
moved.
Ifthereisanerrorcondition,thebackenderrormessagewillbedisplayed. SeeDROPUSERand
psqlforpossibilities.
Description
dropuserremovesanexistingPostgresuserandthedatabaseswhichthatuserowned. Onlyusers
withusesupersetinthepg_shadowclasscandestroyPostgresusers.
dropuser is a shell script wrapper around the SQL command DROP USER via the Postgres
interactive terminal psql. Thus, there is nothing special about removing users via this or other
methods. This means that the psql must be found by the script and that a database server is
runningatthetargetedhost. Also,anydefaultsettingsandenvironmentvariablesavailabletopsql
andthelibpqfront-endlibrarydoapply.
356 APPENDIXD. REFERENCEMANUAL
Usage
Toremoveuserjoefromthedefaultdatabaseserver:
$ dropuser joe
DROP USER
Toremoveuserjoeusingthepostmasteronhosteden,port5000,withverificationandapeekat
theunderlyingquery:
$ dropuser -p 5000 -h eden -i -e joe
User "joe" and any owned databases will be permanently deleted. Are you sure?
(y/n) y
DROP USER "joe" DROP USER
D.49 ecpg
Name
ecpg—EmbeddedSQLCpreprocessor
ecpg[-v][-t][-Iinclude-path][-ooutfile]file1[file2][... ]
Inputs
ecpgacceptsthefollowingcommandlinearguments:
-v Printversioninformation.
-t Turnoffauto-transactionmode.
-Ipath Specify an additional include path. Defaults are /usr/local/include, the Postgres include
pathwhichisdefinedatcompiletime(default: /usr/local/pgsql/lib),and/usr/include.
-o Specifiesthatecpgshouldwriteallitsoutputtooutfile. Ifnosuchoptionisgiventheoutputis
writtento name.c,assumingtheinputfilewasnamedname.pgc. Iftheinputfiledoeshave
theexpected.pgcsuffix,thentheoutputfilewillhave.pgcappendedtotheinputfilename.
file Thefilestobeprocessed.
Outputs
ecpgwillcreateafileorwritetostdout.
returnvalue ecpgreturns0totheshellonsuccessfulcompletion,-1forerrors.
D.49. ECPG 357
Description
ecpgisanembeddedSQLpreprocessorfortheClanguageandthePostgres. Itenablesdevelop-
mentofCprogramswithembeddedSQLcode.
LinusTolkewastheoriginalauthorofecpg(uptoversion0.2). MichaelMeskesisthecurrent
author and maintainer of ecpg. Thomas Good is the author of the last revision of the ecpg man
page,onwhichthisdocumentisbased.
Usage
PreprocessingforCompilation
AnembeddedSQLsourcefilemustbepreprocessedbeforecompilation:
ecpg [ -d ] [ -o file ] file .pgc
wheretheoptional-dflagturnsondebugging. The.pgcextensionisanarbitrarymeansofdenoting
ecpgsource.
Youmaywanttoredirectthepreprocessoroutputtoalogfile.
CompilingandLinking
Assuming the Postgres binaries are in /usr/local/pgsql, you will need to compile and link your
preprocessedsourcefile:
gcc -g -I /usr/local/pgsql/include [ -o file ] file.c -L /usr/local/pgsql/lib -lecpg -lpq
Grammar
Libraries
Thepreprocessorwillprependtwodirectivestothesource:
#include 
#include 
VariableDeclaration
Variablesdeclaredwithinecpgsourcecodemustbeprependedwith:
EXEC SQL BEGIN DECLARE SECTION;
Similarly,variabledeclarationsectionsmustterminatewith:
EXEC SQL END DECLARE SECTION;
358 APPENDIXD. REFERENCEMANUAL
Note: Prior to version 2.1.0, each variable had to be declared on a separateline. As of version
2.1.0multiplevariablesmaybedeclaredonasingleline:
char foo(16), bar(16);
ErrorHandling
TheSQLcommunicationareaisdefinedwith:
EXEC SQL INCLUDE sqlca;
Note: Thesqlcaisinlowercase. WhileSQLconventionmaybefollowed,i.e.,usinguppercaseto
separateembeddedSQLfromCstatements,sqlca(whichincludesthesqlca.hheaderfile)MUST
belowercase. ThisisbecausetheEXECSQLprefixindicatesthatthisINCLUDEwillbeparsed
by ecpg. ecpg observes case sensitivity (SQLCA.h will not be found). EXEC SQL INCLUDE
canbeusedtoincludeotherheaderfilesaslongascasesensitivityisobserved.
Thesqlprintcommand isusedwiththe EXEC SQLWHENEVER statementto turnon error
handlingthroughouttheprogram:
EXEC SQL WHENEVER sqlerror sqlprint;
and
EXEC SQL WHENEVER not found sqlprint;
Note: ThisisnotanexhaustiveexampleofusagefortheEXECSQLWHENEVERstatement.
FurtherexamplesofusagemaybefoundinSQLmanuals(e.g.,TheLANTIMESGuidetoSQLby
GroffandWeinberg).
ConnectingtotheDatabaseServer
Oneconnectstoadatabaseusingthefollowing:
EXEC SQL CONNECT dbname;
wherethedatabasenameisnotquoted. Priortoversion2.1.0,thedatabasenamewasrequiredto
beinsidesinglequotes.
Specifyingaserverandportnameintheconnectstatementisalsopossible. Thesyntaxis:
dbname [@server ][:port ]
or
 :postgresql://server [:port ][/dbname ][?options ]
D.49. ECPG 359
Queries
Ingeneral,SQLqueriesacceptabletootherapplicationssuchaspsqlcanbeembeddedintoyourC
code. Herearesomeexamplesofhowtodothat.
CreateTable:
EXEC SQL CREATE TABLE foo (number int4, ascii char(16));
EXEC SQL CREATE UNIQUE index num1 on foo(number);
EXEC SQL COMMIT;
Insert:
EXEC SQL INSERT INTO foo (number, ascii) VALUES (9999, ’doodad’);
EXEC SQL COMMIT;
Delete:
EXEC SQL DELETE FROM foo WHERE number = 9999;
EXEC SQL COMMIT;
SingletonSelect:
EXEC SQL SELECT foo INTO :FooBar FROM table1 WHERE ascii = ’doodad’;
SelectusingCursors:
EXEC SQL DECLARE foo_bar CURSOR FOR
SELECT number, ascii
FROM foo ORDER BY ascii;
EXEC SQL FETCH foo_bar INTO :FooBar, DooDad;
...
EXEC SQL CLOSE foo_bar;
EXEC SQL COMMIT;
Updates:
EXEC SQL UPDATE foo SET ascii = ’foobar’ WHERE number = 9999;
EXEC SQL COMMIT;
Notes
ThereisnoEXECSQLPREPAREstatement.
ThecompletestructuredefinitionMUSTbelistedinsidethedeclaresection.
SeetheTODOfileinthesourceforsomemoremissingfeatures.
360 APPENDIXD. REFERENCEMANUAL
D.50 END
Name
END—Commitsthecurrenttransaction
END[WORK|TRANSACTION]
Inputs