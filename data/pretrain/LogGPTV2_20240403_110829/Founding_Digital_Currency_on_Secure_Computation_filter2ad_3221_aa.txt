title:Founding Digital Currency on Secure Computation
author:Karim El Defrawy and
Joshua Lampkins
Founding Digital Currency on Secure Computation
Karim El Defrawy
HRL Laboratories
3011 Malibu Canyon Rd
PI:EMAIL
Malibu, CA 90265
Department of Mathematics, UCLA
Box 951555
∗
Joshua Lampkins
Los Angeles, CA 90095
PI:EMAIL
ABSTRACT
Most current digital currency schemes and associated ledgers
are either centralized or completely distributed similar to
the design adopted by Bitcoin. Centralized schemes en-
able accountability, but leave the privacy of users’ identi-
ties and transactions in the hands of one organization. Dis-
tributed schemes can ensure better privacy but provide little
accountability. In this paper we design a privacy-preserving
proactively-secure distributed ledger and associated transac-
tion protocols that can be used to implement an accountable
digital currency that inherits the ledger’s privacy and secu-
rity features. One of the main technical challenges that we
address is dealing with the increase in ledger size over time,
an unavoidable aspect as the currency spreads and the ledger
is required to be maintained for a long time in the future. We
accomplish this by reducing the distributed (secret-shared)
storage footprint and the required bandwidth and computa-
tion for proactively refreshing the ledger to ensure long-term
con(cid:12)dentiality and security.
1.
INTRODUCTION
Despite the large number of digital currency schemes that
have been proposed, e.g., [18, 19, 9, 10, 7], few have been
implemented and adopted by a large number of users. Bit-
coin [37] is currently the scheme that enjoys the widest adop-
tion and is attracting the most attention. In existing digital
currency designs either the scheme is decentralized, similar
to Bitcoin and its replicas [1, 2], or centralized [18, 19, 9, 10,
7]. The completely decentralized nature of digital currencies
such as Bitcoin prevents accountability and oversight from
being e(cid:11)ectively implemented. If a Bitcoin wallet’s private
keys are lost or stolen (a common occurrence lately [35]),
there is no way to recover coins from such wallets. Thieves
can hardly be identi(cid:12)ed when bitcoins are stolen.
If bit-
coins are used to sell illegal goods, it is very di(cid:14)cult for law
enforcement to identify the vendor. On the other hand, a
∗
Permission to make digital or hard copies of all or part of this work for personal 
or classroom use is granted without fee provided that copies are not made or 
distributed for profit or commercial advantage and that copies bear this notice 
and the full citation on the first page. Copyrights for components of this work 
owned  by  others  than  ACM  must  be  honored.  Abstracting  with  credit  is 
permitted. To copy otherwise, or republish, to post on servers or to redistribute 
to  lists,  requires  prior  specific  permission  and/or  a  fee.  Request  permissions 
from permissions@acm.org. 
CCS’14, November 3–7, 2014, Scottsdale, Arizona, USA. 
Copyright © 2014 ACM  978-1-4503-2957-6/14/11…$15.00. 
http://dx.doi.org/10.1145/2660267.2660293.
Work performed while at HRL Laboratories.
major concern with centralized digital currencies is that an
institution issuing them can undermine user’s privacy and
is a single point of failure, in sharp contrast to decentralized
schemes.
Stepping back, we observe that most (physical and digi-
tal) currencies today e(cid:11)ectively exist in the form of a ledger.
For example, when someone stores money in a bank ac-
count, the bank keeps a centralized ledger indicating how
much that person owns. In the case of a fully distributed
scheme such as Bitcoin, the distributed ledger is stored (and
veri(cid:12)ed) by a large number of nodes scattered throughout
the Internet. By striking a balance between the centralized
and decentralized frameworks, we present the design of a
privacy-preserving and proactively-secure distributed ledger
that can be used to implement a digital currency in which:
(1) The ledger is kept not by an individual server or entity,
but by a large (possibly dynamic) group of Ledger Servers
preferably owned/operated by di(cid:11)erent entities. (2) Com-
putation on the ledger is performed without revealing secret
values of account balances or the identities of users.
(3)
The ledger is stored such that an adversary would have to
corrupt a signi(cid:12)cant fraction, e.g., approaching 1/3 or 1/2,
of the servers in order to alter or even recover the ledger.
(4) The ledger is periodically refreshed so that even if por-
tions of it are obtained by an attacker, they cannot be used
with other ones obtained in the future to uncover any trans-
actions or ledger entries. Such a ledger and the function-
alities required to implement a digital currency’s necessary
transaction protocols can be cast as a special case of secure
multiparty computation (MPC).
A scheme satisfying the above properties can be used to
instantiate a multi-organization, or multi-government issued
currency where each Ledger Server is controlled by one of
the organizations or governments.
In the case of a multi-
government currency, Ledger Servers would (ideally) be lo-
cated in multiple countries to prevent any single government
from shutting them down.1
Finally, we stress that it is critically important to deter-
mine how the ledger of a digital currency scheme can be
stored and maintained e(cid:14)ciently for a long period of time.
If the ledger is to contain a record of every transaction, its
size will only increase with time. For example, at time of
writing, the size of the Bitcoin ledger has increased from
7GB to 17GB over the past year.2 The costs of storing the
1We note that the politics of how this ledger is deployed and
regulatory issues concerning it are interesting questions but
are outside the scope of this paper.
2 http://blockchain.info/charts/blocks-size.
1Bitcoin ledger could become prohibitive if Bitcoin ever sees
widespread adoption as pointed out by some researchers [32].
In our digital currency scheme, the transaction data is ini-
tially secret-shared among the Ledger Servers. This could
present long-term storage and maintenance problems, since
secret sharing increases the total amount of memory re-
quired for storing data, and refreshing secret-shared data
consumes a lot of bandwidth. We solve this problem by de-
signing a new secure protocol (outlined in Section 3.4.3) for
e(cid:14)ciently converting secret sharings into batch sharings [28]
without reconstructing stored secrets; this reduces both the
storage and bandwidth required for maintaining and refresh-
ing ledger entries and data.
Outline: In Section 2 we discuss related work. In Sec-
tion 3, we provide the technical details and assumptions of
the design and operation of the new ledger and the trans-
action and accountability protocols and the digital currency
scheme that can be built using it.
In Section 4, we dis-
cuss some possible modi(cid:12)cations to the scheme, speci(cid:12)cally
focusing on anonymity and increasing the threshold for tol-
erated corruption in ledger nodes.
In the Appendices we
provide a functionality, simulator, and security proof for
the novel protocol that converts single-sharings to batch-
sharings, and sketch a security proof for the entire digital
currency scheme. In the full version [23], we provide per-
formance analysis of some of the subprotocols to estimate
the time required to perform transactions and the proactive
refreshing of the ledger.
2. RELATED WORK
Research Proposals for Digital Currency Schemes: E-cash
was initially introduced by Chaum [18] in 1982.
In [18],
the author describes how blind digital signatures could be
used to issue electronic coins that could be anonymously
spent at a merchant.
In [19], this idea was applied using
blind RSA digital signatures;
[19] also addresses double-
spending. E-cash schemes that provide the ability for some
authority to revoke the anonymity of transactions are called
fair payment systems, which were independently introduced
in [43],[8], and [6]. The scheme in [43] uses RSA moduli,
whereas [6] and [8] are based on discrete logarithms.
In
[34], the group signature scheme of [14] was altered to con-
struct a group blind signature scheme, and implemented e-
cash in a manner similar to schemes that used single-signer
blind signatures. A publicly veri(cid:12)able secret sharing (PVSS)
scheme is presented in [40], and the author suggests e-cash
as one possible application. The idea is to take the e-cash
scheme of either [11] or [27] and share some of the data
using the PVSS scheme. An e-cash scheme with multiple
issuing authorities that uses blind threshold signatures was
presented in [31]; any t out of n issuers can issue coins us-
ing the blind signatures. In theory, one could construct a
digital currency scheme from an existing scheme by hav-
ing multiple banks/coin issuers and requiring coins from a
threshold number of issuers in order to spend. However,
this would require some mechanism for ensuring that the is-
suers keep copies of the same ledger. In addition, the issuers
must coordinate to ensure that a user cannot double-spend
by requesting n coins from n issuers and spending n/2 coins
at each of two merchants (since n/2 would be more than
a threshold amount). Exploring such a scheme may be an
area for future work.
Deployed Distributed Digital Currencies: Bitcoin’s [37]
success may be largely attributed to being the (cid:12)rst imple-
mentation of a completely decentralized digital currency; the
ledger of Bitcoin transactions is stored and veri(cid:12)ed by a
group of \miners". The miners are rewarded for verifying
transactions and preserving the integrity of the ledger with
\mined" bitcoins and transaction fees provided by Bitcoin
users. An adversary that controls less than 50% of the min-
ing network will, with high probability, be incapable of caus-
ing inconsistencies in the ledger. However, a recent paper
suggests that the corruption threshold for certain attacks is
likely no more than 25% [26]. In the wake of Bitcoin’s suc-
cess, several other digital currencies have been implemented
that use the same basic design as Bitcoin but add features
to it, e.g., Litecoin [1] and Primecoin [2]. As these coins are
marketed largely as alternatives to Bitcoin, they are some-
times referred to as \altcoins." Zerocoin [36] improves the
anonymity of Bitcoin using zero-knowledge proofs. The case
of Zerocoin notwithstanding, there have been minor di(cid:11)er-
ences in altcoin designs, typically varying the utilized proof-
of-work scheme. Finally, [3] proposes to certify Bitcoin ad-
dresses to provide users with opt-in guarantees to send (and
receive) bitcoins only to (from) certi(cid:12)ed users. The scheme
in [3] also enables the control of creation of Bitcoin addresses
by trusted authorities. Certi(cid:12)ed addresses prevent man-in-
the-middle attacks and provide assurance that entities users
are interacting with have been certi(cid:12)ed, though it is still
possible to lose private keys of certi(cid:12)ed addresses or have
them stolen and thus losing bitcoins associated with them.
Our Work Compared To Other Schemes: To our knowl-
edge, this is the (cid:12)rst digital currency proposal (which we call
Proactively-private Digital Currency, PDC ) that uses se-
cure multiparty computation (MPC) to keep a secret-shared
ledger among a (possibly dynamic) group of servers. In this
paper, we mainly focus on a version that provides revoca-
ble (escrowed) anonymity; however, Section 4 describes how
adding a couple of modi(cid:12)cations can provide non-revoca
ble anonymity if desired. Most digital currency schemes
(e.g., [19, 43, 6, 34]) do not hide the value being trans-
mitted or the balances in users’ accounts. PDC hides both
transmission values and balances (unless suspicious activ-
ity is reported) while still preventing overdrawing.
If the
values stored at addresses were known to an adversary, the
adversary could then target users with a large number of
coins and try to compromise their personal computers to
steal such coins. Furthermore, law enforcement often views
transactions involving large amounts of cash as inherently
suspicious, regardless of whether there is any evidence of il-
legal activity; PDC eliminates concerns about such scrutiny.
Our design allows de-anonymizing and freezing of sus-
pect addresses, allows users to retrieve lost coins, and allows
the Ledger Servers to implement analytics on the accounts
and transactions without violating user privacy. Although
schemes with revocable anonymity have been presented ([13,
12, 6]), PDC provides a unique incentive for those entrusted
with the user’s identity to preserve anonymity unless it is
necessary to de-anonymize. In the schemes mentioned above,
the entities that revoke anonymity are not involved with
the transactions. In PDC, the Ledger Servers are responsi-
ble for processing transactions and for de-anonymizing ma-
licious users. Since the Ledger Servers collect a transaction
fee on each transaction, they will each possess a (presum-
ably) large amount of the currency. If the Ledger Servers
2de-anonymize users without proper justi(cid:12)cation, this could
make the public less inclined to use the currency, hence de-
valuing it. This devaluation would have a direct, negative,
(cid:12)nancial impact on the Ledger Servers.
3. PRIVACY-PRESERVING PROACTIVELY-
SECURE DIGITAL CURRENCY
This section provides an overview of the operation of the
Proactively-private Digital Currency (PDC) scheme and
outlines some cryptographic preliminaries. The section also
describes details of maintaining the ledger, protocols to per-
form individual operations required in (cid:12)nancial transactions,
protocols for enforcing accountability, and the main loop ex-
ecuted by the Ledger Servers. The section ends with a sketch
of the security arguments for our protocols (more details in
the Appendices).
3.1 Overview of the PDC Scheme
The main idea behind the PDC scheme is to design a digi-
tal currency in which the ledger of balances and transactions
is kept by a group of Ledger Servers in secret-shared form.
The group of servers can be dynamic if mobile secret sharing
is used [41]. Apart from the Ledger Servers, there are users
who own units of the currency, which we call coins, and who
may want to transfer coins to other users. Each user may
have multiple addresses, which are just public keys. The
address serves the same purpose as an account number at
a bank. To ensure that the identities of users can be re-
covered if malicious activity occurs, an Identity Veri(cid:12)cation
Server (IVS) will be used to facilitate linking identities to
addresses with (threshold) revocable anonymity.
(We de-
scribe in Section 4 a completely anonymous version of PDC
with no IVS.)
The operation of the PDC scheme using the proposed
ledger proceeds as follows:
Initialization: When a user wants to create an address,
the user provides her identity to an IVS. The IVS checks
that the provided identity is the identity of a real person
who can be located and be accountable if illegal activity is
detected, similar to existing Bitcoin payment systems such
as Coinbase. If the veri(cid:12)cation succeeds, the IVS sends back
to the user a signature on the identity. The user then gener-
ates a private/public key pair, with the public key serving as
her address. The user sends to each ledger server a request
to initialize an address; the request includes the public key
that serves as the address, a share of the identity, and a share
of the IVS’s signature on the identity. The Ledger Servers
then invoke an MPC-based signature veri(cid:12)cation protocol
without revealing the identity. This MPC-based signature
veri(cid:12)cation protocol is only executed once per address and
does not have to work in real time. If the signature is valid,
the Ledger Servers add the address, with zero balance, to
the balance ledger.
(Details of initializing an address are
given in Section 3.5.1.)
Sending and Receiving Coins: When a user wants to send
coins to some address, she sends to each Ledger Server the
sending address, the receiving address, and a share of each
bit in the binary representation of the transaction value.
The ledger servers use a secure comparison protocol to en-
sure that the user is not overdrawing the balance stored at
the address; the comparison protocol does not reveal the
value stored at the address or the value being transmitted.
If the user is not overdrawing, the transaction value and
a transaction fee (collected by the Ledger Servers) is sub-
tracted from the sending address, and the transaction value
is added to the receiving address. The transactional data is
then stored in the transaction ledger. (Details of processing
transactions are given in Section 3.5.2.)
Balance Checking: When a user wants to check the bal-
ance of an address or view recent transactions to/from that
address, she sends a request to each of the Ledger Servers,
and each replies with its share(s) of the requested value(s).
(Details of balance checks are given in Section 3.5.3.)
Accountability: If some law enforcement or other agencies
have evidence that an address is associated with illegal ac-
tivity, it can send this evidence to each of the Ledger Servers,
and so long as more than a su(cid:14)cient (function of tolerated
corruption threshold) number of the Ledger Servers agree,
they can de-anonymize the address by sending their shares
of the associated identity to said agency. The address may
also be frozen pending legal action. In addition, PDC can
implement retrieval of lost coins. (An overview of such ac-
countability protocols are given in Section 3.6.)
Long Term Con(cid:12)dentiality: The ledger maintained by the
Ledger Servers contains (possibly highly) sensitive (cid:12)nancial
data, so it is imperative to ensure secure, long-term storage
of such data. To keep the ledger secure, the Ledger Servers
will periodically perform a proactive refresh protocol on all
data that has been secret-shared. One technical challenge
that must be solved is dealing with the increase in ledger
entries over time and reducing its storage footprint and the
bandwidth and computation required for the proactive re-
fresh. (Details of proactive refresh and how these challenges
are solved are given in Section 3.4.3.)
3.2 Cryptographic Preliminaries