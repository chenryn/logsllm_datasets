o
t
s
i
h
h
c
r
a
e
s
n
i
s
d
r
o
w
e
u
q
i
n
u
f
o
e
z
i
S
Nu m b e r o f a ll u n iq u e  in d e xe d  w o rd s
Ne w  a d d e d  w o rd s  in  5 0 0 0  ru n s
Size  o f s e a rc h  h is t o ry  b e fo re
2 0 0
1 5 0
1 0 0
5 0
]
s
m
[
e
g
a
r
e
v
a
n
i
h
c
r
a
e
s
e
n
o
r
o
f
e
m
T
i
0
0
1 0 0 0 0 2 0 0 0 0 3 0 0 0 0 4 0 0 0 0 5 0 0 0 0 6 0 0 0 0 7 0 0 0 0 8 0 0 0 0
Am o u n t  o f a ll p e rfo rm e d  s e a rc h e s
0
0
1 0 0 0 0
2 0 0 0 0
5 0 0 0 0
Am o u n t  o f a ll p e rfo rm e d  s e a rc h e s
3 0 0 0 0
4 0 0 0 0
6 0 0 0 0
7 0 0 0 0
Figure 3: Unique search tokens queried; grey represents new
search tokens not asked before.
Figure 4: Mean query time for one random generated search
token of 5000.
total search queries. On the one hand, due to this eﬀect
the majority of our randomized add tokens remain random-
ized. At the end of the experiment less than 16% of the
unique keywords are in the inverted index γw and hence en-
crypted deterministically. On the other hand, this results in
decreasing search time, because already searched tokens can
be looked up in this inverted index.
This eﬀect is presented in Figure 4 in more detail. It shows
the mean search time in ms for blocks of 5000 searches over
the time of the experiment. One bar at position i in Figure 3
can be linked with the point in Figure 4 at position i on x-
axes. At the beginning the service provider did not know any
search tokens so that the search history σ is empty. Given
a search token in this situation, the service provider needed
to check the index of every ﬁle i.e. every list representing
one ﬁle in γf had to be checked value by value. With an
increasing size of the search history an increasing number
of search tokens were indexed in our reverse index γw and
hence the service provider was able to answer these queries
much faster. Our results also show that the optimal search
time is reached much faster than in n2 searches, since we
only perform 70.000 searches for more than 95.000 unique
keywords.
8. RELATED WORK
Song et al. introduced searchable encryption [29]. It pro-
vides a more secure alternative for searching compared to
deterministic encryption. Deterministic encryption is use-
ful for searching in outsourced databases, since it does not
require to modify the database engine for queries or up-
dates [16, 17]. Recent results, such as CryptDB [25], show
that its performance overhead is negligible and only a mi-
nority of database columns need to be encrypted in deter-
ministic encryption. Motivated by these use cases Bellare et
al. investigated deterministic encryption in a public key set-
ting [5]. Still, they conclude that searchable encryption, as
also proposed in this paper, could help securing the searched
data.
A number of works investigated eﬃciency increases for
searchable encryption. Goh ﬁrst proposed the use of in-
dexes [13]. Deterministic encryption allows the construction
of (most) indexes on the ciphertext – without modiﬁcation
of the algorithm –, but searchable encryption requires an
adjustment of the indexing method. Curtmola et al. were
the ﬁrst to use inverted indexes [11]. While constructing
the index can be performed on the plaintext, modifying it
without leakage is diﬃcult. We discussed in detail in Sec-
tion 2 the diﬀerent drawbacks of the dynamic searchable
encryption schemes [8, 19, 20, 24]. We did not consider the
scheme in [32], since it does not contain a formal security
proof. The scheme proposed in this paper is the ﬁrst with
asymptotically optimal search time, asymptotically optimal
storage cost and no leakage on updates.
Searchable encryption has also been extended in a num-
ber of ways. Boneh et al. introduced public key searchable
encryption based on identity-based encryption [6]. Another
direction is complex queries for conjunctive [15] and dis-
junctive [7] keyword combinations. Recent results achieved
signiﬁcant eﬃciency gains for these complex queries [9, 21].
Extending our method to complex queries is subject of fu-
ture work.
Searchable encryption has also been combined with proxy
re-encryption [12, 26]. Popa et al. also demonstrate another
interesting application of re-encryptable, searchable encryp-
tion for securing web applications [26]. Commercial oﬀerings
in this space currently focus on deterministic encryption [3,
4], since they do not require to rewrite the web application.
Clearly, searchable encryption has the potential to provide
enhanced security should the necessary operations, such as
updates, be eﬃciently and securely supported.
Disjunctive queries also allow to perform range queries.
Shi et al. ﬁrst demonstrate this in [27]. Lu shows that one
can also construct an index for range queries [23].
Although searchable encryption is a clear security advan-
[7] D. Boneh and B. Waters. Conjunctive, subset, and
tage compared to deterministic encryption, Islam et al. demon-
strate an attack based on the leaked access patterns [18].
Their attack relies on the knowledge of the distribution of
keywords and works for many ciphertexts with a correspond-
ing search token. Hence, it is even more important to not
leak additional information during updates.
9. CONCLUSIONS
We have demonstrated a new technique for eﬃcient, dy-
namic searchable encryption. Our idea is to learn the index
from the search token. We have theoretically shown that
this must lead to the optimal search time over a suﬃciently
long period. We have experimentally shown that this search
time is low in absolute numbers and hence highly practical.
Furthermore, it is reached much faster in practice than the
theoretical upper bound.
Our scheme can be implemented without client storage
and only requires to store 2 cryptographic hash values per in-
dex entry. Additions and deletes can be performed securely.
We maintain semantic security even during updates, i.e. we
leak no additional information. We give detailed leakage
functions in our simulation-based security proof that com-
pare favourably with related work. In our experiments us-
ing real-world search terms, 84% of all keywords were never
searched for. These keywords remain semantically secure en-
crypted and hence proﬁt from the additional security under
updates provided by our scheme.
We believe our construction to be valuable from two per-
spectives. First, it provides a novel design alternative for
constructing dynamic searchable encryption scheme. Our
idea may be also applied to other research directions of
searchable encryption, such as complex queries. Second, it
provides a favorable trade-oﬀ compared to deterministic en-
cryption, since it is almost as eﬃcient – the time for the
second search of a keyword is the same –, but signiﬁcantly
more secure. Hence, it may provide a viable alternative for
practical adoption.
Acknowledgements
We would like to thank our reviewers for their insightful
comments that helped improve the paper and our shepherd
Frederik Armknecht who provided many helpful hints for
ﬁnishing the paper in the best possible mode. The work in
this paper was supported by the European Union Seventh
Framework Program (FP7/2007–2013) under grant agree-
ment no. 609611 (PRACTICE).
10. REFERENCES
[1] http://www.gutenberg.org/.
[2] http:
//invokeit.wordpress.com/frequency-word-lists/.
[3] http://www.ciphercloud.com/.
[4] http://www.vaultive.com/.
[5] M. Bellare, A. Boldyreva, and A. O’Neill.
Deterministic and eﬃciently searchable encryption. In
Advances in Cryptology, CRYPTO, 2007.
[6] D. Boneh, G. Di Crescenzo, R. Ostrovsky, and
G. Persiano. Public key encryption with keyword
search. In Advances in Cryptology, EUROCRYPT,
2004.
range queries on encrypted data. In Proceedings of the
4th Theory of Cryptography Conference, TCC, 2007.
[8] D. Cash, J. Jaeger, S. Jarecki, C. Jutla, H. Krawczyk,
M. Rosu, and M. Steiner. Dynamic searchable
encryption in very-large databases: Data structures
and implementation. In Proceedings of the 21st
Network and Distributed System Security Symposium,
NDSS, 2014.
[9] D. Cash, S. Jarecki, C. Jutla, H. Krawczyk, M.-C.
Rosu, and M. Steiner. Highly-scalable searchable
symmetric encryption with support for boolean
queries. In Proceedings of the 33rd Cryptology
Conference, CRYPTO, 2013.
[10] B. Chor, E. Kushilevitz, O. Goldreich, and M. Sudan.
Private information retrieval. Journal of the ACM,
45(6), 1998.
[11] R. Curtmola, J. Garay, S. Kamara, and R. Ostrovsky.
Searchable symmetric encryption: improved
deﬁnitions and eﬃcient constructions. Journal of
Computer Security, 19(5), 2011.
[12] C. Dong, G. Russello, and N. Dulay. Shared and
searchable encrypted data for untrusted servers.
Journal of Computer Security, 19(3), 2011.
[13] E.-J. Goh. Secure indexes. Technical Report 216,
IACR Cryptology ePrint Archive, 2003.
[14] O. Goldreich and R. Ostrovsky. Software protection
and simulation on oblivious rams. Journal of the
ACM, 43(3), 1996.
[15] P. Golle, J. Staddon, and B. Waters. Secure
conjunctive keyword search over encrypted data. In
Proccedings of the International Conference on Applied
Cryptography and Network Security, ACNS, 2004.
[16] H. Hacig¨um¨us, B. R. Iyer, C. Li, and S. Mehrotra.
Executing sql over encrypted data in the
database-service-provider model. In Proceedings of the
2002 ACM International Conference on Management
of Data, SIGMOD, 2002.
[17] H. Hacig¨um¨us, S. Mehrotra, and B. R. Iyer. Providing
database as a service. In Proceedings of the 18th
International Conference on Data Engineering, ICDE,
2002.
[18] M. Islam, M. Kuzu, and M. Kantarcioglu. Access
pattern disclosure on searchable encryption:
ramiﬁcation, attack and mitigation. In Proceedings of
the 19th Network and Distributed System Security
Symposium, NDSS, 2012.
[19] S. Kamara and C. Papamanthou. Parallel and
dynamic searchable symmetric encryption. In
Proceedings of the 17th International Conference on
Financial Cryptography and Data Security, FC, 2013.
[20] S. Kamara, C. Papamanthou, and T. Roeder.
Dynamic searchable symmetric encryption. In
Proceedings of the 19th ACM Conference on Computer
and Communications Security, CCS, 2012.
[21] J. Katz, A. Sahai, and B. Waters. Predicate
encryption supporting disjunctions, polynomial
equations, and inner products. In Advances in
Cryptology, EUROCRYPT, 2008.
[22] E. Kushilevitz and R. Ostrovsky. Replication is not
needed: Single database, computationally-private
information retrieval. In Proceedings of the 38th IEEE
Symposium on Foundations of Computer Science,
FOCS, 1997.
[23] Y. Lu. Privacy-preserving logarithmic-time search on
encrypted data in cloud. In Proceedings of the 19th
Network and Distributed System Security Symposium,
NDSS, 2012.
[24] M. Naveed, M. Prabhakaran, and C. Gunter. Dynamic
searchable encryption via blind storage. In Proceedings
of the 35th IEEE Symposium on Security and Privacy,
S&P, 2014.
[25] R. A. Popa, C. M. S. Redﬁeld, N. Zeldovich, and
H. Balakrishnan. Cryptdb: protecting conﬁdentiality
with encrypted query processing. In Proceedings of the
23rd ACM Symposium on Operating Systems
Principles, SOSP, 2011.
[26] R. A. Popa, E. Stark, J. Helfer, S. Valdez,
N. Zeldovich, F. Kaashoek, and H. Balakrishnan.
Building web applications on top of encrypted data
using mylar. In Proceedings of the 11th USENIX
Symposium of Networked Systems Design and
Implementation, NSDI, 2014.
[27] E. Shi, J. Bethencourt, H. T.-H. Chan, D. X. Song,
and A. Perrig. Multi-dimensional range query over
encrypted data. In Proceedings of the 2007 Symposium
on Security and Privacy, S&P, 2007.
[28] R. Sion and B. Carbunar. On the practicality of
private information retrieval. In Proceedings of the
Network and Distributed System Security Symposium,
NDSS, 2007.
[29] D. X. Song, D. Wagner, and A. Perrig. Practical
techniques for searches on encrypted data. In
Proceedings of the 21st IEEE Symposium on Security
and Privacy, S&P, 2000.
[30] E. Stefanov, C. Papamanthou, and E. Shi. Practical
dynamic searchable symmetric encryption with small
leakage. In Proceedings of the 21st Network and
Distributed System Security Symposium, NDSS, 2014.
[31] E. Stefanov, M. van Dijk, E. Shi, C. Fletcher, L. Ren,
X. Yu, and S. Devadas. Path oram: an extremely
simple oblivious ram protocol. In Proceedings of the
20th ACM Conference on Computer and
Communications Security, CCS, 2013.
[32] P. van Liesdonk, S. Sedghi, J. Doumen, P. H. Hartel,
and W. Jonker. Computationally eﬃcient searchable
symmetric encryption. In Proceedings of the 7th VLDB
Workshop on Secure Data Management, SDM, 2010.
[33] P. Williams and R. Sion. Single round access privacy
on outsourced storage. In Proceedigs of the 19th ACM
Conference on Computer and Communications
Security, CCS, 2012.