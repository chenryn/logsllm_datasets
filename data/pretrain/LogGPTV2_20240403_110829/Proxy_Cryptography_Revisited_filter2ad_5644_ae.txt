as (cid:5)(x) = gs2 (x) (cid:8) gs3(x). The obvious way to split the
keys between F, P, and user is to give 2 keys to each one
such that any two users have only 1 key in common. For
example, the user U gets (s1; s2), the proxy P gets (s2; s3),
and the user F receives (s1; s3).
Theorem 11 The bidirectional PRF function deﬁned as
BiPRF(x) = f1(x) (cid:8) f2(x), where f1 and f2 are two PRF
functions, is a PRF function.
9 Conclusions
At the beginning of the paper we started describing the
for unidirectional functions. The unidirectional notation is
justiﬁed by the fact that the proxy P needs to help the law
enforcement agency (user F) for every message that needs
to be decrypted or signed. There is also an ofﬂine version
of the unidirectional proxy function. Because of space con-
sideration, we shortly describe it as part of the conclusions.
The ofﬂine proxy functions are based on the key-insulated
encryption and signature primitives created by [9, 10]. In
the ofﬂine scheme, users U protect their secrets by period-
ically updating their secret keys. The user U updates its
secret key using the index of the current time period and
some information provided by a third party (P). The same
third party P can help the law enforcement agency F to de-
crypt or sign messages on behalf of other users U, by pro-
viding special pieces of information at the beginning of the
time period. There is one main difference between unidi-
rectional and ofﬂine proxy functions: in the unidirectional
case, the law enforcement agency F is strictly controlled by
the proxy P and cannot decrypt or sign a message without
its help; in the ofﬂine case, the law enforcement agency can
misbehave 3 for one time period once it has the necessary
information.
The main contribution of this paper is the formalized
deﬁnitions of the bidirectional and unidirectional proxy
functions for encryption and signatures and their security
guarantees.
In addition, for each class of proxy func-
tions, the paper describes one generic technique and several
speciﬁc techniques to transform a standard cryptographic
primitive into a proxy function.
References
[1] M. Bellare and P. Rogaway. Random oracles are practical:
A paradigm for designing efﬁcient protocols. In ACM Con-
ference on Computer and Communications Security, pages
62–73, 1993.
[2] M. Bellare and P. Rogaway. The exact security of digital
signatures — how to sign with RSA and Rabin. Lecture
Notes in Computer Science, 1070, 1996.
[3] M. Bellare and R. Sandhu. The Security of Practical Two-
party RSA Signature Schemes. Cryptology ePrint Archive,
Report 2001/060, 2001.
[4] M. Blaze and M. Strauss. Atomic Proxy Cryptography. Eu-
rocrypt, 1998.
[5] D. Boneh and M. Franklin. Identity-Based Encryption from
the Weil Pairing. Proceedings of Crypto ’2001, Lecture
Notes in Computer Science, 2139:213–229, 2001.
3Misbehave i.e. decrypt or sign messages it is not supposed to
[6] C. Boyd. Digital Multisignatures, volume Cryptography
A Unidirectional Encryption Scheme
and Coding, pages 241–246. Claredon Press, 1986.
[7] J.-S. Coron. On the Exact Security of Full Domain Hash.
Advances in Cryptology - CRYPTO 2000, 20th Annual In-
ternational Cryptology Conference, pages 229–235, 2000.
[8] Y. Desmedt and Y. Frankel. Threshold Cryptosystems. Ad-
vances in Cryptology – Crypto ’89, pages 307–315, 1989.
[9] Y. Dodis, J. Katz, S. Xu, and M. Yung. Key-Insulated Public
Key Cryptosystems. Eurocrypt, 2002.
[10] Y. Dodis, J. Katz, S. Xu, and M. Yung. Strong Key-Insulated
Signature Schemes. PKC, 2002.
[11] A. Fiat and A. Shamir. How to Prove Yourself: Practical So-
lution to Identiﬁcation and Signature Problems. CRYPTO,
263:186–194, 1987.
[12] T. E. Gamal. A Public Key Cryptosystem and a Signature
Scheme Based on the Discrete Logarithm. IEEE Transac-
tions of Information Theory, pages 31(4): 469–472, 1985.
[13] B. Horne, B. Pinkas, and T. Sander. Escrow Services and
Incentives in Peer-to-Peer Networks. 3rd ACM Conference
on Electronic Commerce, 2001.
[14] J. Kilian and F. T. Leighton. Fair Cryptosystems, Revisited.
Advances of Cryptology - CRYPTO ’95 Proceedings, Berlin:
Springer-Verlag, 1995.
[15] H. Kim, J. Baek, B. Lee, and K. Kim. Computing with
Secrets for Mobile Agent Using One-time Proxy Signature.
SCIS2001, vol 2/2, pages 845–850, 2001.
[16] B. Lee, H. Kim, and K. Kim. Strong Proxy Signature and
its Applications. SCIS2001, vol 2/2, pages 603–608, 2001.
[17] F. T. Leighton. Failsafe Key Escrow Systems. Technical
Memo 483, MIT Lab. for Computer Science, 1994.
[18] A. K. Lenstra, P. Winkler, and Y. Yacobi. A Key Escrow
System with Warrant Bounds. Advances in Cryptology -
CRYPTO, pages 197–207, 1995.
[19] P. MacKenzie. An Efﬁcient Two-Party Public Key Cryp-
tosystem Secure Against Adaptive Chosen Ciphertext At-
tack. PKC, 2003.
[20] P. MacKenzie and M. Reiter. Delegation of cryptographic
servers for capture-resilient devices. CCS, 2001.
[21] P. MacKenzie and M. K. Reiter. Networked Cryptographic
Devices Resilient to Capture. Eighth ACM Conference on
Computer and Communications Security (CCS-8), 2001.
[22] P. MacKenzie and M. K. Reiter. Two-Party Generation of
DSA Signatures. Advances in Cryptology - CRYPTO 2001
(Lecture Notes in Computer Science 2139), 2001.
[23] S. Micali. Fair Public-Key Cryptosystems. Advances in
Cryptology - CRYPTO ’92 Proceedings, Berlin: Springer-
Verlag, 1993.
[24] A. Nicolosi, M. Krohn, Y. Dodis, and D. Mazieres. Proac-
tive Signatures for User Authentication. NDSS, 2003.
[25] R. L. Rivest, A. Shamir, and L. M. Adelman. A Method
for Obtaining Digital Signatures and Public-Key Cryptosys-
tems. Technical Report MIT/LCS/TM-82, 1977.
[26] A. Shamir.
Identity-Based Cryptosystems and Signa-
ture Schemes. Advances in Cryptology: Proceedings of
CRYPTO 84, Lecture Notes in Computer Science, 7:47–53,
1984.
[27] Y.Frankel and M.Yung. Escrow Encryption Systems Vis-
ited: Attacks, Analysis and Designs. Advances in Cryp-
tology - CRYPTO ’95 Proceedings, Berlin:Springer-Verlag,
1995.
A.1 Unidirectional Generic Encryption Scheme
Theorem 1 Let’s consider a standard encryption
scheme E = (Enc-Gen; Enc; Dec). Based on E, we build an
unidirectional encryption scheme E 0 = (UniGen, UniEnc,
If E is CCA2 secure, than E 0 is
UniDec, PDec, FDec).
also CCA2 secure against (1) the proxy P, (2) the user F,
and (3) all users U, where the success of the adversary is
deﬁned in table 6.
Proof
1. Let’s assume that E 0 is not CCA2 secure against the
proxy P. This means that the proxy P can break E 0
with probability of success greater than 1/2. We as-
sume that PDec is a deterministic algorithm and the
proxy P never submits PDec(UniEncEK(mb)) to the
FDec oracle. Based on P, we build an adversary B
capable of breaking the original encryption scheme
E. The adversary B receives as input the public key
EK2 of the original encryption scheme E. B simulates
the conditions necessary for the proxy P to break the
unidirectional encryption E 0 by randomly choosing a
public/private key pair (EK1; DK1) and forwarding it
to the proxy P together with EK2. The adversary B
starts running the proxy P. Whenever the proxy P
needs to make a query to the FDec oracle, B simu-
lates the FDec oracle by taking the P’s query q, and
forwards it to its own Dec oracle access. B sends
to the proxy P the output of the Dec oracle. At one
moment, P challenges the unidirectional encryption
scheme E 0 by choosing two messages (m0; m1) and
sending them to B. B chooses the same two mes-
sages to challenge the original encryption scheme E.
When B is presented with the challenge Enc2(mb),
where mb is chosen at random from the two messages
(m0; m1), B applies Enc1(Enc2(m)) and sends the
challenge as UniEnc(mb) to the proxy P. We assumed
that the proxy P can break the unidirectional encryp-
tion scheme with probability greater than 1/2. Thus, B
can break the standard encryption scheme with prob-
ability greater than 1/2.
2. Let’s assume that E 0 is not CCA2 secure against the
user F. This means that the user F can break E 0 with
probability of success greater than 1/2. Based on the
user F, we build an adversary B capable of breaking
the orginal encryption scheme E. The adversary B
receives as input the public key EK1 of the original
Generic
SuccP;E 0
SuccF;E 0
def
= Pr (cid:20) b = ~b (cid:12)(cid:12)(cid:12)(cid:12)
= Pr (cid:20) b = ~b (cid:12)(cid:12)(cid:12)(cid:12)
def
SuccP;E 0
(EK1; DK1; EK2; DK2)   UniGen(1k); (m0; m1)   PFDec(EK1; EK2; DK1);
b   f0; 1g; ~b   PFDec(EK1; EK2; DK1; UniEnc(mb))
(EK1; DK1; EK2; DK2)   UniGen(1k); (m0; m1)   FPDec(EK1; EK2; DK2);
b   f0; 1g; ~b   FPDec(EK1; EK2; DK2; UniEnc(mb))
(cid:21)
(cid:21)
(EK; DK)   UniGen(1k); (m0; m1)   P(EK; DKP);
b   f0; 1g; ~b   P(EK; DKP; UniEncEK(mb))
(cid:21)
SuccF;E 0
(EK; DK)   UniGen(1k); (m0; m1)   FPDec(cid:3)(EK; DKF);
b   f0; 1g; ~b   FPDec(cid:3)(EK; DKF; UniEncEK(mb))
SuccP;E
def
= Pr (cid:20) m
(EK; DK)   UniGen(1k); m   M; m0   P(EK; DKP; UniEncEK(m)) (cid:21)
(cid:21)
(cid:21)
El-Gamal
RSA
IBE
def
def
= Pr (cid:20) b = ~b (cid:12)(cid:12)(cid:12)(cid:12)
= Pr (cid:20) b = ~b (cid:12)(cid:12)(cid:12)(cid:12)
0 = m (cid:12)(cid:12)(cid:12)(cid:12)
= Pr (cid:20) b = ~b (cid:12)(cid:12)(cid:12)(cid:12)
= Pr (cid:20) b = ~b (cid:12)(cid:12)(cid:12)(cid:12)
def
def
SuccP;E 0
SuccF;E 0
(s = (s1; s2); sP )   UniGen(1k); (m0; m1)   P(s1; sP );
b   f0; 1g; ~b   P(s1; sP; UniEncID(mb))
(s = (s1; s2); sP )   UniGen(1k); (m0; m1)   FPDec(cid:3)(EK; DKF);
b   f0; 1g; ~b   FPDec(cid:3)(EK; DKF; UniEncEK(mb))
(cid:21)
Table 6. Online generic encryption deﬁnitions for adversary’s success.
encryption scheme E. First, B simulates the condi-
tions necessary for the user F to break the unidirec-
tional encryption E 0 by choosing at random a pub-
lic/private key pair (EK2; DK2) and forwarding it to
F together with the EK1. The adversary B starts run-
ning the user F. When the user F makes a query
q = Enc1(Enc2(m)) to the PDec oracle, B takes the
query e, forwards it to its own Dec oracle, and sends
the answer Enc2(m) directly to F. When the user F
challenges the adversary B, it chooses two messages
(m0; m1) and sends them to B. B encrypts those two
messages using the key EK2 and sends them to chal-
lenge the standard encryption. When B is presented
with the challenge Enc1(mb), where mb is chosen at
random from two messages (Enc2(m0); Enc2(m1)),
B sends the challenge to F. We assumed that the user
F can break the unidirectional encryption scheme with
probability greater than 1/2. Thus, B can break the
standard encryption scheme with probability greater
than 1/2.
3. This part is implied by the two previous parts.
A.2 Unidirectional El Gamal Encryption Scheme
Theorem 2 Let E 0 = (UniGen, UniEnc, UniDec, PDec,
FDec) be an unidirectional El Gamal encryption scheme.
E 0 is CPA secure against (1) the proxy P, (2) the user F, and
(3) all users U, where the adversary’s success is deﬁned in
table 6.
Proof
1. Let’s assume that P is capable of breaking the unidi-