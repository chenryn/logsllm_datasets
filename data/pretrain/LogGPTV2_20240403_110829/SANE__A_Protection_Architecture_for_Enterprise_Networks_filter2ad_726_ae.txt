cumbersome, difﬁcult-to-manage networks. Similar to
SANE, they argue that routing (the control plane) should
be separated from forwarding, resulting a very simple
data path. Although 4D centralizes routing policy deci-
sions, they retain the security model of today’s networks.
Routing (forwarding tables) and access controls (ﬁltering
rules) are still decoupled, disseminated to forwarding el-
ements, and operate the basis of weakly-bound end-point
identiﬁers (IP addresses). In our work, there is no need
to disseminate forwarding tables or ﬁlters, as forwarding
decisions are made a priori and encoded in source routes.
Predicate routing [43] attempts to unify security and
routing by deﬁning connectivity as a set of declarative
statements from which routing tables and ﬁlters are gen-
erated. SANE differs, however, in that users are ﬁrst-
class objects—as opposed to end-point IDs or IP ad-
dresses in Predicate routing—and thus can be used in
deﬁning access controls.
Expanding the Link-layer. Reducing a network from
two layers of connectivity to one, where all forwarding
is done entirely at the link layer, has become a popu-
lar method of simplifying medium-sized enterprise net-
works. However, large Ethernet-only networks face sig-
niﬁcant problems with scalability, stability, and fault
tolerance, mainly due to their use of broadcast and
spanning-tree-based forwarding.
To address these concerns, several proposals have sug-
gested replacing the MST-based forwarding at the link-
layer with normal link-state routing [39, 35]. Some,
such as Myers et al. [35], advocate changing the Eth-
ernet model to provide explicit host registration and dis-
covery based on a directory service, instead of the tra-
ditional broadcast discovery service (ARP) and implicit
MAC address learning. This provides better scalability
and transparent link-layer mobility, and it eliminates the
inefﬁciencies of broadcast. Similarly, SANE eliminates
broadcast in favor of tighter trafﬁc control through link-
state updates and source routes. However, we eschew
the use of persistent end host identiﬁers, instead associ-
ating each routable destination with the switch port from
where it registered.
Capabilities for DDOS prevention. Much recent work
has focused on DoS remediation through network en-
forced capabilities on the WAN [12, 51, 52]. These sys-
tems assumes no cooperation between network elements,
nor do they have a notion of centralized control. Instead,
clients receive capabilities from servers directly and vice
versa. Capabilities are constructed on-route by the ini-
tial capability requests. This offers a very different pol-
icy model than SANE, as it is designed to meet different
needs (limiting wide area DoS) and relies on different
operating assumptions (no common administrative do-
main).
8 Conclusion
We believe that enterprise networks are different from the
Internet at large and deserve special attention: Security
is paramount, centralized control is the norm, and uni-
form, consistent policies are important. However, pro-
viding strong protection is difﬁcult, and it requires some
tradeoffs. There are clear advantages to having an open
environment where connectivity is unconstrained and ev-
ery end host can talk to every other. Just as clearly, how-
ever, such openness is prone to attack by malicious users
from inside or outside the network.
We set out to design a network that greatly limits the
ability of an end host or switch to launch an effective at-
tack, while still maintaining ﬂexibility and ease of man-
agement. Drastic goals call for drastic measures, and we
understand that our proposal—SANE—is an extreme ap-
proach. SANE is conservative in the sense that it gives
the least possible privilege and knowledge to all parties,
except to a trusted, central Domain Controller. We be-
lieve that this would be an acceptable practice in en-
terprises, where central control and restricted access are
common.
USENIX Association
Security ’06: 15th USENIX Security Symposium
149
1
Yet SANE remains practical: Our implementation
shows that SANE could be deployed in current networks
with only a few modiﬁcations, and it can easily scale to
networks of tens of thousands of nodes.
9 Acknowledgements
We would like to thank Mendel Rosenblum, Vern Pax-
son, Nicholas Weaver, Mark Allman and Bill Cheswick
for their helpful comments on this project. We also
like to thank the anonymous reviewers for their feedback
and especially our shepherd, Michael Roe, for his guid-
ance. This research was supported in part by the Stan-
ford Clean Slate program, the 100x100 project and NSF.
Part of this research was performed while on appoint-
ment as a U.S. Department of Homeand Security (DHS)
Fellow under the DHS Scholarship and Fellowship Pro-
gram, a program administered by the Oak Ridge Institute
for Science and Education (ORISE) for DHS through an
interagency agreement with the U.S Department of En-
ergy (DOE). ORISE is managed by Oak Ridge Associ-
ated Universities under DOE contract number DE-AC05-
00OR22750. All opinions expressed in this paper are the
authors’ and do not necessarily reﬂect the policies and
views of DHS, DOE, ORISE, or NSF. This work was also
supported in part by TRUST (The Team for Research in
Ubiquitous Secure Technology), which receives support
from the National Science Foundation (NSF award num-
ber CCF-0424422).
Notes
1A policy might be speciﬁed by many people (e.g, LDAP), but is
typically centrally managed.
2SANE is agnostic to the PKI or other authentication mechanism in
use (e.g. Kerberos, IBE). Here, we will assume principals and switches
have keys that have been certiﬁed by the enterprises CA.
3To establish shared keys, we opt for a simple key-exchange proto-
col from the IKE2 [28] suite.
cussed in [12, 51]
4Request capabilities are similar to network capabilities as dis-
5We use the same IV for all layers—as opposed to picking a new
random IV for each layer—to reduce the capability’s overall size. For
standard modes of operation (such as CBC and counter-mode) reusing
the IV in this manner does not impact security, since each layer uses a
different symmetric key.
6For example, while SANE’s protection layer prevents an adver-
sary from targeting arbitrary switches, an attacker can attempt to target
a switch indirectly by accessing an upstream server for which it other-
wise has access permission.
7Normally, DC packet headers contain a consistent sender-ID in
cleartext, much like the IPSec ESP header. This sender-ID tells the
DC which key to use to authenticate and decrypt the payload. We re-
place this static ID with an ephemeral nonce provided by the DC. Every
DC response contains a new nonce to use as the sender-ID in the next
message.
8Implementing threshold cryptography for symmetric encryption is
done combinatorially [16]: Start from a t-out-of-t sharing (namely, en-
crypt a DC master secret under all independent DC server keys) and
then construct a t-out-of-n sharing from it.
9To calculate the concurrent number of TCP connections, we
tracked srcip:srcport:dstip:dstport tuples, where a connection is consid-
ered ﬁnished upon receiving the ﬁrst FIN packet or if no trafﬁc packets
belonging to that tuple are seen for 15 minutes. There were only 143
cases of TCP packets that were sent after a connection was considered
timed-out.
10This is a conservative upper bound: In our traces, the average
ﬂow length is 92s, implying that at most, 15% of the ﬂows could have
lengths greater than 10 minutes.
References
[1] 802.1D MAC Bridges. http://www.ieee802.org/1/pages/802.1D-
2003.html.
[2] Apani home page. http://www.apani.com/.
[3] Consentry home page. http://www.consentry.com/.
[4] DNS Service Discover (DNS-SD). http://www.dns-sd.org/.
[5] Lumeta. http://www.lumeta.com/.
[6] UPnP Standards. http://www.upnp.org/.
[7] Cisco Security Advisory: Cisco IOS Remote Router Crash.
http://www.cisco.com/warp/public/770/ioslogin-pub.shtml, Au-
gust 1998.
[8] CERT Advisory CA-2003-13 Multiple Vulnerabilities in Snort
Preprocessors. http://www.cert.org/advisories/CA-2003-13.html,
April 2003.
[9] Sasser Worms Continue to Threaten Corporate Productivity.
http://www.esecurityplanet.com/alerts/article.php/3349321, May
2004.
[10] Technical Cyber Security Alert TA04-036Aarchive HTTP Pars-
ing Vulnerabilities in Check Point Firewall-1. http://www.us-
cert.gov/cas/techalerts/TA04-036A.html, February 2004.
[11] ICMP Attacks Against
Exploit.
http://www.securiteam.com/exploits/5SP0N0AFFU.html, April
2005.
TCP Vulnerability
[12] T. Anderson, T. Roscoe, and D. Wetherall. Preventing Internet
Denial-of-Service with Capabilities. SIGCOMM Comput. Com-
mun. Rev., 34(1):39–44, 2004.
[13] Y. Bartal, A. J. Mayer, K. Nissim, and A. Wool. Firmato: A
novel ﬁrewall management toolkit. ACM Trans. Comput. Syst.,
22(4):381–420, 2004.
[14] S. M. Bellovin. Distributed ﬁrewalls.
November 1999.
;login:, 24(Security),
[15] M. Blaze, J. Feigenbaum, and A. D. Keromytis. Keynote: Trust
management for public-key infrastructures (position paper).
In
Proceedings of the 6th International Workshop on Security Pro-
tocols, pages 59–63, London, UK, 1999. Springer-Verlag.
[16] E. Brickell, G. D. Crescenzo, and Y. Frankel. Sharing block ci-
phers. In Proceedings of Information Security and Privacy, vol-
ume 1841 of LNCS, pages 457–470. Springer-Verlag, 2000.
[17] M. Casado and N. McKeown. The Virtual Network System. In
Proceedings of the ACM SIGCSE Conference, 2005.
[18] M. Castro and B. Liskov. Practical byzantine fault tolerance
and proactive recovery. ACM Transactions on Computer Systems
(TOCS), 20(4):398–461, Nov. 2002.
[19] D. Cullen. Half Life 2 leak means no launch for Christmas.
http://www.theregister.co.uk/2003/10/07/half life 2 leak means/,
October 2003.
150
Security ’06: 15th USENIX Security Symposium
USENIX Association
1
[41] J. Rexford, A. Greenberg, G. Hjalmtysson, D. A. Maltz, A. My-
ers, G. Xie, J. Zhan, and H. Zhang. Network-Wide Decision
Making: Toward A Wafer-Thin Control Plane.
In Proceedings
of HotNets III, November 2004.
[42] P. Rogaway, M. Bellare, J. Black, and T. Krovetz. OCB: A Block-
Cipher Mode of Operation for Efﬁcient Authenticated Encryp-
tion. In ACM Conference on Computer and Communications Se-
curity, pages 196–205, 2001.
[43] T. Roscoe, S. Hand, R. Isaacs, R. Mortier, and P. Jardetzky. Pred-
icate routing: Enabling controlled networking. SIGCOMM Com-
put. Commun. Rev., 33(1):65–70, 2003.
[44] J. Veizades, E. Guttman, C. Perkins, and S. Kaplan. Service lo-
cation protocol. RFC 2165, july 1997.
[45] N. Weaver, D. Ellis, S. Staniford, and V. Paxson. Worms vs.
Perimeters: The Case for Hard-LANs. In Proc. Hot Interconnects
12, August 2004.
[46] A. Wool. A quantitative study of ﬁrewall conﬁguration errors.
IEEE Computer, 37(6):62–67, 2004.
[47] A. Wool. The use and usability of direction-based ﬁltering in
ﬁrewalls. Computers & Security, 26(6):459–468, 2004.
[48] S. Wu, B. Vetter, and F. Wang. An experimental study of insider
attacks for the OSPF routing protocol. October 1997.
[49] G. Xie, J. Zhan, D. Maltz, H. Zhang, A. Greenberg, G. Hjalm-
tysson, and J. Rexford. On static reachability analysis of ip net-
works. In IEEE INFOCOM 2005, March 2005.
[50] G. Xie, J. Zhan, D. A. Maltz, H. Zhang, A. Greenberg, and
G. Hjalmtysson. Routing design in operational networks: A look
from the inside.
In Proc. ACM SIGCOMM ’04, pages 27–40,
New York, NY, USA, 2004. ACM Press.
[51] A. Yaar, A. Perrig, and D. Song. Siff: A stateless internet ﬂow
ﬁlter to mitigate ddos ﬂooding attacks. In In Proceedings of the
IEEE Security and Privacy Symposium, May 2004.
[52] X. Yang, D. Wetherall, and T. Anderson. A DoS-limiting network
architecture. In Proc. ACM SIGCOMM ’05, pages 241–252, New
York, NY, USA, 2005. ACM Press.
[20] Y. Desmedt and Y. Frankel. Threshold cryptosystems.
vances in Cryptology - Crypto ’89, 1990.
In Ad-
[21] J. R. Douceur. The Sybil attack. In First Intl. Workshop on Peer-
to-Peer Systems (IPTPS 02), Mar. 2002.
[22] T. Garﬁnkel, B. Pfaff, J. Chow, M. Rosenblum, and D. Boneh.
Terra: A virtual machine-based platform for trusted computing.
In Proceedings of the 19th Symposium on Operating System Prin-
ciples(SOSP 2003), October 2003.
[23] D. M. Goldschlag, M. G. Reed, and P. F. Syverson. Hiding Rout-
ing Information.
In R. Anderson, editor, Proceedings of Infor-
mation Hiding: First International Workshop, pages 137–150.
Springer-Verlag, LNCS 1174, May 1996.
[24] A. Greenberg, G. Hjalmtysson, D. A. Maltz, A. Myers, J. Rex-
ford, G. Xie, H. Yan, J. Zhan, and H. Zhang. A Clean Slate 4D
Approach to Network Control and Management. In In ACM SIG-
COMM Computer Communication Review, October 2005.
[25] J. H. Howard, M. L. Kazar, S. G. Menees, D. A. Nichols,
M. Satyanarayanan, R. N. Sidebotham, and M. J. West. Scale
and performance in a distributed ﬁle system. ACM Trans. Com-
put. Syst., 6(1):51–81, Feb. 1988.
[26] S. Ioannidis, A. D. Keromytis, S. M. Bellovin, and J. M. Smith.
Implementing a distributed ﬁrewall. In ACM Conference on Com-
puter and Communications Security, pages 190–199, 2000.
[27] G. C. S. Jian Pu, Eric Manning. Routing Reliability Analysis
of Partially Disjoint Paths. In IEEE Paciﬁc Rim Conference on
Communications, Computers and Signal processing (PACRIM’
01), volume 1, pages 79–82, August 2001.
[28] C. Kaufman. Internet key exchange (ikev2) protocol. draft-ietf-
ipsec-ikev2-10.txt (Work in Progress).
[29] A. Kumar, V. Paxson, and N. Weaver. Exploiting underlying
structure for detailed reconstruction of an internet-scale event. In
to appear in Proc. ACM IMC, October 2005.
[30] M. Leech, M. Ganis, Y. Lee, R. Kuris, D. Koblas, and L. Jones.
Socks protocol version 5. RFC 1928, March 1996.
[31] T. Markham and C. Payne. Security at the Network Edge: A
In DARPA Information Sur-
Distributed Firewall Architecture.
vivability Conference and Exposition, 2001.
[32] G. M. Marro. Attacks at the data link layer, 2003.
[33] A. Mayer, A. Wool, and E. Ziskind. Fang: A ﬁrewall analysis
engine.
In SP ’00: Proceedings of the 2000 IEEE Symposium
on Security and Privacy, page 177, Washington, DC, USA, 2000.
IEEE Computer Society.
[34] D. Moore, V. Paxson, S. Savage, C. Shannon, S. Staniford, and
N. Weaver. Inside the Slammer Worm. IEEE Security and Pri-
vacy, 1(4):33–39, 2003.
[35] A. Myers, E. Ng, and H. Zhang. Rethinking the Service Model:
Scaling Ethernet to a Million Nodes. In ACM SIGCOMM Hot-
Nets, November 2004.
[36] R. Pang, M. Allman, M. Bennett, J. Lee, V. Paxson, and B. Tier-
ney. A ﬁrst look at modern enterprise trafﬁc. In ACM/USENIX
Internet Measurement Conference, Oct. 2005.
[37] R. Pang, M. Allman, V. Paxson, and J. Lee. The devil and packet
trace anonymization. ACM Comput. Commun. Rev., 36(1), Jan.
2006.
[38] R. Perlman. Network layer protocols with Byzantine robustness.
PhD thesis, Massachussets Institute of Technology, 1988.
[39] R. J. Perlman. Rbridges: Transparent Routing. In INFOCOM,
2004.
[40] V. Prevelakis and A. D. Keromytis. Designing an Embedded
Firewall/VPN Gatweway. In Proc. International Network Con-
ference, July 2002.
USENIX Association
Security ’06: 15th USENIX Security Symposium
151
1