Each administrator carries a veriﬁer, a mobile device (i.e., a
tablet or phone) used to communicate with the signer and perform
computations on behalf of the administrator. A veriﬁer belongs to
a speciﬁc administrator and stores the administrator’s private key
−1
. The veriﬁer must have a camera and display to communicate
K
i
with the signer, an application to run the CASTLE processes, and
protected storage for the private key that can only be unlocked by
authenticating to the application.
The signer is a machine that authenticates administrators and
generates a signed certiﬁcate when authorized to do so. The signer
also stores the system information such as private signing keys, ad-
ministrator information, and event logs, and carries out both certiﬁ-
cate signatures and management operations by accessing this infor-
mation. The signer has a commodity OS, touchless I/O interface in
the form of a webcam and monitor, and a TPM.
4.3 Hardware Layer
The TPM, CPU, LPC bus, and memory bus on the signer are
the only fully trusted pieces of hardware in CASTLE (though the
5481. Authentication: the administrators unlock their veriﬁers with
a PIN, authenticate to the signer via a digital signature, and
initiate the signing process with a CSR conforming to the
PKCS #10 speciﬁcation [17].
2. Attestation: the PAL checks the signatures and creates a sig-
nature on the CSR provided, attesting the received CSR.
3. Authorization: the administrators check the attestation sig-
nature and if correct, authorize the certiﬁcate signature via
signatures with their own private keys.
4. Signature: the PAL checks the authorization, then signs and
returns the certiﬁcate, completing the process.
glass, hindering adversaries from physically accessing the machine
via direct hardware access. The signer also has no network ca-
pabilities, preventing any access through the network or wireless
peripherals.
The signer’s I/O is completely touchless: input is provided by
scanning QR codes (provided by the veriﬁer) with a webcam and
output is provided through a display in the form of human-readable
text and machine-readable QR codes (scanned by veriﬁers). This
I/O system hinders adversaries by limiting their interactions with
the system compared to using a keyboard or mouse.
4.5 Authentication Layer
A certiﬁcate signature session in CASTLE is carried out by k
administrators and their veriﬁers. The veriﬁers are protected by a
secure PIN so that only the corresponding administrators can access
them. A signing session consists of four steps:
During a certiﬁcate signature session, the administrators communi-
cate with the CASTLE PAL through the untrusted signer front end.
Thus the signer front end can observe and modify all messages sent
between the administrators and the PAL. Each step of the session
is designed to prevent a malicious front end from using these ca-
pabilities to sign an unauthorized certiﬁcate. Each message from
the administrators is also temporally bound, preventing the reuse
of messages from previously successful process instances (e.g., at-
tempts to re-issue certiﬁcates that were revoked).
The veriﬁer serves to provide strong authentication, relying on
what the administrator has (the veriﬁer itself) and what the admin-
istrator knows (the PIN for the veriﬁer application). Moreover, even
a malicious administrator cannot cause a certiﬁcate to be signed
without gathering a quorum of k administrators.
4.6 Management Layer
In order to protect management functions, the management layer
primarily relies on the assumption that fewer than u of m admin-
istrators are malicious. The management layer thus requires the
authorization of at least u administrators to add or remove an ad-
ministrator or to back up or restore system information, including
all information secured by the hardware layer. The management
layer also requires authorization from u administrators to change
the value of u.
The backup and restore process allows a system’s private keys,
administrator information, logs, and parameters to be transferred
between two signer machines. A backup from one machine is thus
equivalent to a restore to the other machine. In order to prevent
exposing system information to any observer who sees the mes-
sages exchanged between the signers, the information is encrypted
with the public key of the restored machine, and u administrators
must authorize both the backup and restore actions. If we assume
that fewer than u administrators are malicious, we can infer that the
backup will be encrypted with a real CASTLE signer’s public key
1Using induction coupling would avoid a physical connection into
the glass box for the power line.
Figure 3: CASTLE signer prototype in the glass box, displaying
a QR code. Manufacturing of the glass box by Magnetron Labs
Merz.
administrators and veriﬁers are partially trusted. This trusted hard-
ware comprises the hardware layer and protects information that no
other component of the system should access. Protected informa-
tion includes the following: (1) system private keys used in attes-
tation, signatures, and decryption of messages from administrators,
(2) public keys used to authenticate messages from administrators,
(3) event logs, used to record all system operations, (4) session data
used in the authentication layer, and (5) system parameters used in
the management layer. The hardware layer, speciﬁcally the TPM,
secures this information via sealed storage and its NVRAM. The
Memoir system [18] can be used to protect the integrity and persis-
tence of information in case of unanticipated power loss.
The protection provided at the hardware layer stems from the
security of the TPM, whose security in turn relies on that of the
CPU, LPC bus, and memory bus. As long as the TPM remains
uncompromised, sealed storage applied properly within Flicker al-
lows protected information to only be released to a speciﬁed appli-
cation (Flicker running the CASTLE PAL), and NVRAM storage
allows particularly sensitive information to only be accessible or
modiﬁable by a speciﬁed application. Since we assume that the
TPM cannot be compromised, we therefore conclude that only the
correct CASTLE PAL can access any sealed information, and read
or overwrite any information stored in NVRAM.
4.4
Isolation Layer
The veriﬁers and signer are stored in secure physical facilities,
and the signer is additionally air gapped and touchless. These mea-
sures comprise the isolation layer, which ensure that the devices
and tokens cannot be stolen or tampered with. Veriﬁers can be
stored in facilities such as secure lockers only accessible to their
respective administrators, while the signer can be housed in a fa-
cility such as a secure room with security staff to control access to
the room. By our assumptions, a conscripted CA has the means to
maintain such physical security, and thus the signer and veriﬁers
can remain physically secure.
The signer machine is protected by multiple forms of physical
isolation. As Figure 3 shows, the signer is housed in a glass box,
with only a power connection crossing the box’s boundary.1 All
fans and vents on the box are covered with additional layers of
549Table 1: Notation used in the paper.
Notation
A
Ai
B
C
C
d
hi
I
k
K
Kb
c
Kε
Kc, K−1
Kr, K−1
Ks, K−1
r
s
(cid:2)
Li
m
Mi
Ri
S
S
Si
u
Meaning
Attestation Signature
Authorization Signature
Base BLOB
CSR
Conﬁguration BLOB
Hidden digit
Epoch identiﬁer
Initialization BLOB
Signature threshold
Public key set
Base key
Attestation key pair
Non-migratable key pair
Restoration key pair
Signature key pair
Log length
Log event
Administrator set size
Initialization nonce
Request signature
Signed certiﬁcate
Session BLOB
Setup signature
Management threshold
Use
Attest to CSR and OTP received at PAL
and to the session BLOB
Authorize ﬁnal certiﬁcate signature
Store base key sealed to the PAL.
Certiﬁcate signing request to be signed
Store signer
information (encrypted
with Kb)
Encourage administrator diligence
Identify speciﬁc log entry
Store intermediate information during
system setup
Number of administrators needed for
signature process
Store administrator public keys
Encrypt sensitive system information
(symmetric key, sealed to PAL)
Certify/verify messages from the PAL
Authenticate TPM during initialization
Ensure conﬁdentiality when restoring a
backup to a target machine
Generate/verify certiﬁcate signatures
Identify how many events have been
logged since initialization
Record authentication,
management operation
Number of currently enrolled admins
Prevent replay of old setup messages
Authenticate administrator at start of
signing session
Certiﬁcate signed with K−1
Store signature session information be-
tween attestation and signature steps
(encrypted with Kb)
Authorize system state generation
Number of administrators needed for
management functions
signature, or
s
and not with a public key created by an adversary. In Section 7, we
further analyze the security of the management operations.
5. CASTLE CERTIFICATE SIGNING
In this section, we describe CASTLE’s certiﬁcate signing pro-
cess. Throughout the remainder of the paper, we use notation as
listed in Table 1. We begin the section with a brief description of
the signer conﬁguration, which is required to intuitively understand
some of the design decisions of CASTLE. We then describe the
four steps of the process (authentication, attestation, authorization,
and signature).
5.1 Signer Conﬁguration
The information stored at the signer is structured as shown in
Figure 4. The information stored on the signer consists of three
main parts: the BLOBs, the log, and the NVRAM.
The information required during a certiﬁcate signing session is
stored in BLOBs. We use a hybrid encryption scheme in which
only the base key Kb is sealed to the PAL. We thus only seal a sin-
gle symmetric key with the TPM and call this sealed key the base
BLOB B. The base key is used to encrypt the larger conﬁgura-
tion BLOB C, which contains the information used during a signing
session, such as private keys. Table 1 explains the use of the infor-
mation (and accompanying notation) used in CASTLE (including
outside of a signing session).
For simplicity of implementing the logging functionality in the
TPM, the log is a hash chain of events stored on disk. Each opera-
tion carried out by the PAL is logged in the form of an event Li that
contains the relevant details of the operation (see Section 6.1 for
precise deﬁnitions of each log event). The hash values in the chain
C
h(cid:3)
K−1
K−1
K−1
s
c
r
K
Base BLOB
(sealed to PAL)
Base key
B
Kb
Number of admins
Signature threshold
Management threshold
m
k
u
Conﬁg. BLOB
(enc. w/ base key)
Epoch identiﬁer
Attestation private key
Signature private key
Restoration private key
Admin public keys
Hash func.
h0
H
L1
Log
(on disk)
h1
. . .
h(cid:3)−1
H
h(cid:3)
Epoch identiﬁers
Log events
L(cid:3)−1
NVRAM
(on TPM)
Non-migratable key
Epoch identiﬁer
Base key hash
K−1

h(cid:3)
H(Kb)
Figure 4: Information stored by the signer.
hi are called epoch identiﬁers and serve to link events and BLOBs
temporally. We describe the logging mechanism in more detail in
Section 6.1.
The NVRAM on the TPM stores a non-migratable private key
−1ε
(only used in the initial setup of CASTLE), as well as the
K
current epoch identiﬁer h(cid:2), which prevents an adversary from un-
detectably replacing BLOBs with older versions or altering log en-
tries. Moreover, in order to prevent replacement of both BLOBs,
the NVRAM also stores a hash of the base key.
5.2 Request Step
A certiﬁcate signing session is carried out by k administrators,
each with their personal veriﬁer. The ﬁrst step in the session is
the request, in which administrators unlock their veriﬁers via PIN
and send the CSR and a digital signature (for authentication) to the
signer. The authentication step hinders an adversary from initiating
a signature process, since each request requires signatures from k
administrators.
To initiate the session, one administrator scans the CSR C at
the signer’s webcam, and each participating administrator creates a
request signature
Ri = SignK
−1