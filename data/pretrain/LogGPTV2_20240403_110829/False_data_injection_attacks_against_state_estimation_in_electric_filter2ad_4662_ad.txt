t
t
a
e
h
t
g
n
d
n
i
f
f
o
y
t
i
l
i
i
b
a
b
o
r
P
9−bus
14−bus
30−bus
118−bus
300−bus
1
0.8
0.6
0.4
0.2
0
0
1
Percentage of specific meters to compromise
0.2
0.4
0.6
0.8
Figure 3: Probability of ﬁnding an attack vector for
targeted false data injection attacks (unconstrained
case)
IEEE 9-bus system, since it only has 8 state variables). For
each target state variable, we perform multiple trials (1,000
trials for the IEEE 9-bus, 14-bus, and 30-bus systems, 100
trials for the IEEE 118-bus system, and 20 trials for the
IEEE 300-bus system)4. In each trial, we randomly choose k
meters and test if an attack vector that injects false data into
this target variable can be generated. If yes, we mark the
experiment as successful. After these trials, we can compute
the success probability pk,v for this particular state variable
v as pk,v = # successful trials
. Finally, we compute the over-
all success probability pk as the average of pk,v’s for all the
chosen state variables.
# trials
Figure 3 shows the relationship between pk and Rk for
targeted false data injection attacks in the unconstrained
case. We observe the same trend in this ﬁgure as in Figure 2,
though the probability in this case is in general lower than
that in Figure 2. For example, pk increases sharply as Rk
passes 60% for both the IEEE 118-bus and 300-bus systems.
Moreover, for both systems, the probability that the attacker
can successfully generate the attack vector is larger than
0.6 when Rk passes 70%. For targeted false data injection
attacks, larger systems also tend to have higher pk than
smaller systems for the same Rk.
It is critical to note that Figures 2 and 3 represent the suc-
cess probabilities of “blind trials”. In this case, an attacker
needs to compromise 30–70% of the meters to get a reason-
able probability to construct an attacker vector. However,
as shown later in Section 4.2.1, when an attacker targets the
“weakest link” of a power system, she only needs to compro-
mise 4 meters in these test systems.
The targeted false data injection attack in the constrained
case is the most challenging one for the attacker. Due to the
constraints on the speciﬁc meters, the targeted state vari-
ables, and the necessity of no impact on the remaining state
variables, the probability of constructing a successful attack
vector is in fact very small, though still possible. We perform
experiments for this case slightly diﬀerently. We randomly
pick 6 sets of meters for the IEEE 118-bus and 300-bus sys-
tems. In each set, there are 350 meters and 700 meters for
4In this case, it take even more time than random false data
injection attacks to exhaustively examine the IEEE 118-bus
and 300-bus systems with all possible k’s. Thus, we reduce
the number of trials for these two systems so that the sim-
ulation can ﬁnish within a reasonable amount time.
28Table 1: Timing results in Scenario I (ms)
Test system
IEEE 9-bus
IEEE 14-bus
IEEE 30-bus
IEEE 118-bus
IEEE 300-bus
Random attack Targeted attack
(unconstrained)
0.17–2.4
0.16–5.6
0.35–14.9
0.34–867.9
0.55–8,549.6
0.21–2.2
0.26–11.3
0.24–31.4
0.42–1,874.5
0.73–18,510
the IEEE 118-bus and 300-bus systems, respectively. We
then check the number of individual target state variables
that can be aﬀected by each set of meters without aﬀecting
the estimation of the remaining state variables. The results
show that the attacker can aﬀect 8–11 and 13–16 individual
state variables in the IEEE 118-bus and 300-bus systems,
respectively. Thus, though the targeted false data injection
attack in the constrained case is hard, it is still possible to
modify some target state variables.
In Scenario I, all attacks can be performed fairly quickly.
When the attack is feasible, it takes again little time to actu-
ally construct an attack vector. Table 1 shows the execution
time required by the random false data injection attack and
the targeted false data injection attack in the unconstrained
case. The time required for the targeted false data injection
attack in the constrained case is very small, since the com-
putational task is just the multiplication of a matrix and a
column vector. For example, the time required for the IEEE
300-bus system ranges from 1.2ms to 11ms.
4.2 Results of Scenario II
In Scenario II, the attacker has resources to compromise
up to k meters. Compared with Scenario I, the restriction on
the attacker is relaxed in the sense that any k meters can be
used for the attack. Similar to Scenario I, we would also like
to see how likely the attacker can use the limited resources to
achieve his/her attack goal, and at the same time, examine
the amount of computation required for attacks. We use
two evaluation metrics in our experiments: (1) number of
meters to compromise in order to construct an attack vector,
and (2) execution time required for constructing an attack
vector.
Due to the ﬂexibility for the attacker to choose diﬀerent
meters to compromise in Scenario II, the evaluation of Sce-
nario II generally requires more experiments to obtain the
evaluation results. In the following, we examine (1) random
false data injection attacks, (2) targeted false data injection
attacks in the constrained case, and (3) targeted false data
injection attacks in the unconstrained case, respectively.
4.2.1 Results of Random False Data Injection Attacks
Random false data injection attacks are the easiest one
among the three types of attacks under evaluation, mainly
due to the least constraints that the attacker has to follow.
We perform a set of experiments to construct attack vectors
for random false data injection attacks in the IEEE test
systems. We assume the attacker wants to minimize the
attack cost by compromising as few meters as possible. This
means the attacker needs to ﬁnd the attack vector having
the minimum number of non-zero elements.
The brute-force approach is too expensive to use for ﬁnd-
ing such an attack vector due to its high time complexity.
Thus, in our experiment, we use the heuristic algorithm dis-
cussed in Section 3.3.1 to ﬁnd an attack vector that has
near minimum number of non-zero elements for the IEEE
test systems.
Table 2: Random false data injection attacks
Test system
IEEE 9-bus
IEEE 14-bus
IEEE 30-bus
IEEE 118-bus
IEEE 300-bus
# meters to Execution time (ms)
compromise
4
4
4
4
4
0.88
3.47
4.31
19.58
110.51
Table 2 shows the results. In all test systems, the num-
ber of meters that need to be compromised is surprisingly
small. For all test systems, the attacker can construct an at-
tack vector for random false data injection attacks by only
compromising 4 meters, with execution time ranging from
0.88ms to about 110ms. We looked into the experimental
data, and found that this is mainly due to the fact that the
H matrices of all these IEEE test systems are sparse. For
example, the H matrix of the IEEE 300-bus system is a
1,122×300 matrix, but most of the entries are 0’s. In partic-
ular, the sparsest column in H only has 4 non-zero elements.
This column is selected by the algorithm as the attack vec-
tor. Note that power systems with sparse H matrices are
not rare cases. In practice, components in a power system
that are not physically adjacent to each other are usually
not connected. As a result, the H matrices of the power
systems are often sparse.
4.2.2 Results of Targeted False Data Injection At-
tacks in Constrained Case
Similar to Scenario I, targeted false data injection attacks
in the constrained case are the most challenging one among
all types of attacks due to all the constraints the attacker has
to follow in attack vector construction. In the constrained
case, the attacker aims to change speciﬁc state variables to
speciﬁc values and keep the remaining state variables as they
are.
In our experiments, we randomly choose l (1 ≤ l ≤ 10)
target state variables and generate malicious data for each of
them. The malicious data is set to be 100 times larger than
the real estimates of the state variables. We then examine
how many meters need to be compromised in order to inject
the malicious data (without changing the other non-target
state variables). For each value of l, we perform the above
experiment 1,000 times to examine the distribution of the
number of meters that need to be compromised.
Figure 4 shows the results of the IEEE 300-bus system.
We use a box plot5 to show the relationship between the
number of target state variables and the number of meters
to compromise. In the worst case, to inject malicious data
into as many as 10 state variables, the attacker needs to com-
promise 55–140 meters in the IEEE 300-bus system. Given
1,122 meters in the IEEE 300-bus system, the attacker only
needs to compromise a small fraction of the meters to launch
targeted false data injection attacks even in the constrained
case.
5In a box plot [1], each box describes a group of data through
their ﬁve summaries: minimum, ﬁrst quartile, median, third
quartile, and maximum. They are represented as horizontal
lines at the very bottom, at the lower end, inside the box, at
the upper end, and at the very top of the box, respectively.
29i
e
s
m
o
r
p
m
o
c
o
t
s
r
e
e
m
t
f
o
r
e
b
m
u
N
35
30
25
20
15
10
5
i
e
s
m
o
r
p
m
o
c
o
t
s
r
e
e
m
t
f
o
r
e
b
m
u
N
150
100
50
0
1
3
2
9
Number of target state variables
4
5
6
7
8
10
i
e
s
m
o
r
p
m
o
c
o
t
s
r
e
t
e
m
f
o
r
e
b
m
u
N
140
120
100
80
60
40
20
0
1
3
9
2
Number of target state variables
4
5
6
7
8
evaluation metrics: the number of meters to compromise and
the execution time. Note that in the unconstrained case, it
takes signiﬁcantly more time to construct an attack vector
than the previous experiments. Thus, we show more detailed
results on execution time in this case.
Figure 6 shows the relationship between the number of