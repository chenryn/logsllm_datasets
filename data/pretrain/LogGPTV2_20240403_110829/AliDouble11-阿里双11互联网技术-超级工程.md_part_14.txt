三份的文件，通常情况下认定写入两份即为写入成功，第三份可通过异步化操作的
方式进行补充。假设文件写在A、B、C三台机器上，且其中一台真的发生了故障，
那么写入A和B两份成功后，首先将信息返回用户，再对另外一份在客户端中进行
range的记录（ 描述第三份有那些数据没有计入），再从后台向空置的C端进行推送，
在这一条件下，即使系统中出现单机的抖动或故障，绝大多数用户也能够可以被系统
过滤，从而可圈可点的降低时延指标。
新智能  9年双11：互联网技术超级工程
3. 能够通过一系列技术手段来优化长尾，做到长尾优于物理盘，物理盘的热点
无法通过切走来进行优化，云盘让这一点变得可能。
低成本：稳定高效之外，经济依旧是特长
除了出色的稳定和优秀的性能之外，更低的成本也是Pangu2.0的一大特色，
例如：
1. 全面支持EC，从而能够把经典的8+3从三份变成1.375份。
2. 支持自适应压缩 根据特定算法筛选出能够压缩的文件，对其进行压缩。
3. 数据冷热分离，冷数据存储到廉价介质，热数据存到高性能介质，形成资源
的合理规划。
4.管控水平拆分到所有的存储节点，不需要独立的管控机型。
5.云盘跨集群，将单集群的空间利用率做到极致，充分发挥云的优势。
Pangu2.0的软硬件一体化工作也一直在同步进行，我们与AIS合作，共同研发
了USSOS–User Space Storage Operating System，并实现了很多之前所期待
的目标：
1. 建立一个统一的用户态存储软件基础平台
2. 实现对新硬件的快速适配，任何硬件只要在USSOS层进行适配就能直接应
用，且对从前的软件和服务毫无影响，完全公开和透明。
3. 提升I/O处理效率，发挥I/O极致性能
4. 识别和冗余硬件故障，简化系统运维与管理，增强系统稳定性
5. 实现存储硬件的自主可控，降低供应链风险，降低成本，使用户能够选择低
成本的硬件，同时更激进的使用新的技术。
易运维:将使用的压力同样降到最低
1. 高度的可运维性也是Pangu2.0不得不提的一个点，并在相当多的方面能够
得到体现：
新智能  9年双11：互联网技术超级工程
上图为阿里业务六个月的峰值数据表。表中两个最大的峰值依次代表双11和双
12的交易峰值，其他较小的峰值是日常交易峰值，红线代表日常准备系统服务器资
源的处理能力。
在13年之前，我们采购大量的服务器资源以支撑双11流量高峰。高峰过去后，
长时间低效运行产生很大的资源浪费，这是非常粗放的预算和资源管理模式。阿里的
多种业务形态产生了多种集群，每个集群之间运维体系差异较大、各个板块无法互
用、资源整体弹性能力不足导致双11无法借用这些资源。每个板块的资源池有不同
的buffer，每个资源池的在线率、分配率和利用率无法统一。我们通过云化架构提高
整体技术效率和全局资源的弹性复用能力。例如某个不做双11的集群把资源贡献出
来给双11的交易使用。由于云能提供双11正需要的弹性能力，所以我们也开始大
量使用阿里来解决双11成本问题，通过拉通技术体系来降低大促和日常整体成本，
提出通过云化架构来实现双11单笔交易成本减半的目标。
先来梳理一下整个运维体系现状。我们将集群大致分在线服务集群、计算任务
集群、ECS集群三类。这三种集群上的资源管理和基础运维、调度都是独立的。它
们有各自的调度编排能力，在线服务Sigma调度、计算任务的Fuxi调度、ECS的
Cloud Open API；它们在生产资源、资源供给、分配方式上也是不同的。在线服务
用的是容器、计算任务调度最后生产的是LXC的轻量级隔离封装容器、云生产的是
ECS；它们在应用层上运维集群管理也是不一样的，最上层业务层跑的任务也不一
新基础  9年双11：互联网技术超级工程
急场景的处理。通过本机Slave对时延敏感任务快速做出决策和响应，避免因全局决
策处理时间长带来的业务损失。SigmaMaster是一个最强的大脑，它可以统揽全局，
为大量物理机的容器部署进行资源调度分配和算法优化决策。
整个架构是面向终态的设计理念，请求进来后把数据存储到持久化存储，调度器
识别调度需求分配资源。系统整体的协调性和最终一致性是非常好的。我们在2011
年开始做调度系统，2016年用Go语言重写，2017年兼容了kubernetes API，希
望和开源社区共同建设和发展。
发挥统一调度，集中管理的优势，释放了规模效益下的一些红利。在线服务的调
度和计算任务调度下有各种业务形态，它们在一层调度上进一步细分成二层调度，通
过合并资源池提升利用率和分配率，合并buffer进行空间维度的优化实现全局打通。
全局打通后进行弹性分时复用、时间维度的优化，共节省超过5%的资源。由于基数
大，这个优化效果是非常可观的。
阿里巴巴在2014年开始推动混部架构，目前已在阿里巴巴内部大规模部署。在
线服务属于长生命周期、规则策略复杂性高、时延敏感类任务。而计算任务生命周期
短、调度要求大并发高吞吐、任务有不同的优先级、对时延不敏感。基于这两种调度
的本质诉求的不同，所以我们在混合部署的架构上把两种调度并行处理，即一台NC
新基础 < 123
物理机上可以既有Sigma调度又有Fuxi调度。Sigma调度是通过SigmaAgent调
用OCI标准的RunC 、RunV、 RunLXC三种标准来启动Pouch容器。Fuxi也在
这台NC物理机上抢占资源，启动自己的计算任务。所有在线任务都在Pouch容器
上，它负责把服务器资源进行分配切割通过调度把在线任务放进去，离线任务填入其
空白区，保证物理机资源利用达到饱和，这样就完成了两种任务的混合部署。
混部的关键技术
内核资源隔离上的关键技术
在CPU HT资源隔离上，做了Noise Clean内核特性，解决在/离线超线程
●
资源争抢问题。