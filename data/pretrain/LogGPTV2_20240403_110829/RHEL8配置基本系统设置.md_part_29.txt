:::
::: section
::: titlepage
# []{#chrony-with-hw-timestamping_configuring-basic-system-settings.html#configuring-server-for-large-number-of-clients_chrony-with-hw-timestamping}为大量客户端配置服务器 {.title}
:::
默认服务器配置允许几千个客户端同时使用交集模式。要为更多的客户端配置服务器，增大
`/etc/chrony.conf`{.literal} 中的 `clientloglimit`{.literal}
指令。这个指令指定为服务器中客户端访问的日志分配的最大内存大小：
``` literallayout
clientloglimit 100000000
```
:::
::: section
::: titlepage
# []{#chrony-with-hw-timestamping_configuring-basic-system-settings.html#verifying-hardware-timestamping_chrony-with-hw-timestamping}验证硬件时间戳 {.title}
:::
要校验该接口是否已成功启用了硬件时间戳，请检查系统日志。这个日志应该包含来自
`chronyd`{.literal} 的每个接口的消息，并成功启用硬件时间戳。
::: example
[]{#chrony-with-hw-timestamping_configuring-basic-system-settings.html#verifying-hardware-timestamping}
**例 31.3. 为启用硬件时间戳的接口记录日志信息**
::: example-contents
``` literallayout
chronyd[4081]: Enabled HW timestamping on eth0
chronyd[4081]: Enabled HW timestamping on eth1
```
:::
:::
当 `chronyd`{.literal} 配置为 `NTP`{.literal}
客户端或对等时，您可以有传输和接收时间戳模式，以及
`chronyc ntpdata`{.literal} 命令为每个 `NTP`{.literal} 源报告交集模式：
::: example
[]{#chrony-with-hw-timestamping_configuring-basic-system-settings.html#Report-mode-for-source}
**例 31.4. 报告每个 NTP 源的传输、接收时间戳以及交集模式**
::: example-contents
``` literallayout
# chronyc ntpdata
```
输出：
``` literallayout
Remote address  : 203.0.113.15 (CB00710F)
Remote port     : 123
Local address   : 203.0.113.74 (CB00714A)
Leap status     : Normal
Version         : 4
Mode            : Server
Stratum         : 1
Poll interval   : 0 (1 seconds)
Precision       : -24 (0.000000060 seconds)
Root delay      : 0.000015 seconds
Root dispersion : 0.000015 seconds
Reference ID    : 47505300 (GPS)
Reference time  : Wed May 03 13:47:45 2017
Offset          : -0.000000134 seconds
Peer delay      : 0.000005396 seconds
Peer dispersion : 0.000002329 seconds
Response time   : 0.000152073 seconds
Jitter asymmetry: +0.00
NTP tests       : 111 111 1111
Interleaved     : Yes
Authenticated   : No
TX timestamping : Hardware
RX timestamping : Hardware
Total TX        : 27
Total RX        : 27
Total valid RX  : 27
```
:::
:::
::: example
[]{#chrony-with-hw-timestamping_configuring-basic-system-settings.html#stability-NTP-measurements}
**例 31.5. 报告 NTP 测量的稳定性**
::: example-contents
``` literallayout
# chronyc sourcestats
```
启用硬件时间戳后，`NTP`{.literal}
测量的稳定性应该以十秒或数百纳秒为单位，处于正常负载下。此稳定性会在
`chronyc sourcestats`{.literal} 命令的输出结果的 `Std Dev`{.literal}
列中报告：
输出：
``` literallayout
210 Number of sources = 1
Name/IP Address            NP  NR  Span  Frequency  Freq Skew  Offset  Std Dev
ntp.local                  12   7    11     +0.000      0.019     +0ns    49ns
```
:::
:::
:::
::: section
::: titlepage
# []{#chrony-with-hw-timestamping_configuring-basic-system-settings.html#configuring-ptp-ntp-bridge_chrony-with-hw-timestamping}配置 PTP-NTP 桥接 {.title}
:::
如果网络中存在一个高度准确的 Precision Time Protocol (`PTP`{.literal})
grandmaster，但没有支持 `PTP`{.literal}
支持的交换机或路由器，则一个计算机会可能会被指定专门用于作为
`PTP`{.literal} slave 和一个 stratum-1 `NTP`{.literal}
服务器。此类计算机需要两个或多个网络接口，并且与降电员接近或与之直接连接。这样可保证高度准确的网络同步。
配置 `linuxptp`{.literal} 软件包中的
[**[ptp4l]{.application}**]{.strong} 和
[**[phc2sys]{.application}**]{.strong} 程序，以使用 `PTP`{.literal}
同步系统时钟。
配置 `chronyd`{.literal} 以使用其他接口提供系统时间：
::: example
[]{#chrony-with-hw-timestamping_configuring-basic-system-settings.html#configuring-NTP-bridge}
**例 31.6. 将 chronyd 配置为使用其他接口提供系统时间**
::: example-contents
``` literallayout
bindaddress 203.0.113.74
hwtimestamp eth1
local stratum 1
```
:::
:::
:::
:::
[]{#assembly_achieving-some-settings-previously-supported-by-ntp-in-chrony_configuring-basic-system-settings.html}
::: chapter
::: titlepage
# []{#assembly_achieving-some-settings-previously-supported-by-ntp-in-chrony_configuring-basic-system-settings.html#assembly_achieving-some-settings-previously-supported-by-ntp-in-chrony_configuring-basic-system-settings}第 32 章 在 chrony 中实现一些之前被 NTP 支持的设置 {.title}
:::
Chrony 不支持在之前的 Red Hat Enterprise Linux 主版本中被
[**[ntp]{.application}**]{.strong} 支持的设置
[**[。]{.application}**]{.strong}以下小节列出了这些设置，并描述了在带有
[**[chrony]{.application}**]{.strong} 的系统上实现它们的方法。
::: section
::: titlepage
# []{#assembly_achieving-some-settings-previously-supported-by-ntp-in-chrony_configuring-basic-system-settings.html#monitoring-by-ntpq-and-ntpdc_achieving-some-settings-previously-supported-by-ntp-in-chrony}使用 ntpq 和 ntpdc 进行监控 {.title}
:::
`chronyd`{.literal} 无法被由 [**[ntp]{.appplication}**]{.strong} 提供的
[**[ntpq]{.application}**]{.strong} 和
[**[ntpdc]{.application}**]{.strong} 监控，因为
[**[chrony]{.application}**]{.strong} 不支持 `NTP`{.literal} 模式 6 和
7。它支持不同的协议，[**[chronyc]{.application}**]{.strong}
是一个客户端的实现。如需更多信息，请参阅 `chronyc(1)`{.literal} man
page。
要监控使用 `chronyd`{.literal} 的系统时钟的状态，您可以：
::: itemizedlist
-   使用 tracking 命令
-   使用支持 [**[chrony]{.application}**]{.strong} 的
    [**[ntpstat]{.application}**]{.strong} 工具，它提供和
    `ntpd`{.literal}类似的输出。
:::
::: example
[]{#assembly_achieving-some-settings-previously-supported-by-ntp-in-chrony_configuring-basic-system-settings.html#exam-use-tracking-command}
**例 32.1. 使用跟踪命令**
::: example-contents
``` literallayout
$ chronyc -n tracking
Reference ID    : 0A051B0A (10.5.27.10)
Stratum         : 2
Ref time (UTC)  : Thu Mar 08 15:46:20 2018
System time     : 0.000000338 seconds slow of NTP time
Last offset     : +0.000339408 seconds
RMS offset      : 0.000339408 seconds
Frequency       : 2.968 ppm slow
Residual freq   : +0.001 ppm
Skew            : 3.336 ppm
Root delay      : 0.157559142 seconds
Root dispersion : 0.001339232 seconds
Update interval : 64.5 seconds
Leap status     : Normal
```
:::
:::
::: example
[]{#assembly_achieving-some-settings-previously-supported-by-ntp-in-chrony_configuring-basic-system-settings.html#exam-use-ntpstat-utility}
**例 32.2. 使用 ntpstat 程序**
::: example-contents
``` literallayout
$ ntpstat
synchronised to NTP server (10.5.27.10) at stratum 2
   time correct to within 80 ms
   polling server every 64 s
```
:::
:::
:::
::: section
::: titlepage
# []{#assembly_achieving-some-settings-previously-supported-by-ntp-in-chrony_configuring-basic-system-settings.html#using-authentication-mechanism-based-on-public-key-cryptography_achieving-some-settings-previously-supported-by-ntp-in-chrony}使用基于公钥加密的认证机制 {.title}
:::
在红帽企业 Linux 7 中，[**[ntp 支持]{.application}**]{.strong}
[**[Autokey]{.application}**]{.strong}，这是一种基于公钥加密的身份验证机制。
在 Red Hat Enterprise Linux 8 中，`chrony`{.literal} d
支持网络时间安全(NTS)，这是一种现代安全身份验证机制，而不是
[**[Autokey]{.application}**]{.strong}。如需更多信息，请参阅 [chrony
中的网络时间安全(NTS)概述](#assembly_overview-of-network-time-security-in-chrony_configuring-basic-system-settings.html "第 33 章 chrony 中的网络时间安全(NTS)概述"){.link}。
:::
::: section
::: titlepage
# []{#assembly_achieving-some-settings-previously-supported-by-ntp-in-chrony_configuring-basic-system-settings.html#using-ephemeral-symmetric-associations_achieving-some-settings-previously-supported-by-ntp-in-chrony}使用临时对称关联 {.title}
:::
在 Red Hat Enterprise Linux 7 中，ntpd `支持`{.literal}
临时对称关联，它们可以被 `ntp.conf`{.literal}
配置文件中未指定的对等点数据包修改。在 Red Hat Enterprise Linux 8
中，`chrony`{.literal} d 需要在 `chrony.conf`{.literal}
中指定所有对等点。不支持临时对称关联。
请注意，使用通过 `server`{.literal} 或 `pool`{.literal}
指令启用的客户端/服务器模式和通过 `peer`{.literal}
指令启用的对称模式相比，更为安全。
:::
::: section
::: titlepage
# []{#assembly_achieving-some-settings-previously-supported-by-ntp-in-chrony_configuring-basic-system-settings.html#multicast-broadcast-client_achieving-some-settings-previously-supported-by-ntp-in-chrony}多播/广播客户端 {.title}
:::
红帽企业 Linux 7 支持广播/多播 `NTP`{.literal}
模式，该模式简化了客户端配置。采用此模式时，可以将客户端配置为仅侦听发送到多播/广播地址的数据包，而不是侦听单个服务器的特定名称或地址，这些名称或地址可能会随时间变化。
在 Red Hat Enterprise Linux 8 中，chronyd `不支持`{.literal}
广播/多播模式。主要的原因是它比一般的客户端/服务器以及对称模式的准确性较低且安全性较低。
从 `NTP`{.literal} 广播/多播设置中迁移有几个选项：
::: itemizedlist
-   将 DNS 配置为将单个名称（如
    ntp.example.com）转换为不同服务器的多个地址。
    客户端只能使用单一池指令来与多个服务器同步进行静态配置。如果池中的服务器变得不可访问，或者不适合同步，客户端会自动将其替换为池中的另一台服务器。
-   通过 DHCP 分配 `NTP`{.literal} 服务器列表
    当 NetworkManager 从 DHCP 服务器获得 `NTP`{.literal}
    服务器列表时，`chronyd`{.literal} 会自动配置来使用它们。把
    `PEERNTP=no`{.literal} 添加到 `/etc/sysconfig/network`{.literal}
    文件可以禁用这个功能。
-   使用 `优先级时间协议(PTP)`{.literal}
    这个选项主要适用于服务器经常更改的环境，或者大量的客户端需要在没有指定服务器的情况下相互同步。
    `PTP`{.literal} 是为多播消息设计的，它的工作方式与 `NTP`{.literal}
    广播模式相似。`linuxptp`{.literal} 软件包中包括了一个
    `PTP`{.literal} 实现。
    `PTP`{.literal}
    通常需要硬件时间戳并支持网络开关执行正常。但是，`PTP`{.literal}
    应该比广播模式中的 `NTP`{.literal}
    更好地工作，即使存在软件时间戳，且不支持网络交换机。
    在一个通信路径中有大量 `PTP`{.literal} slave 的网络中，建议使用
    `hybrid_e2e`{.literal} 选项配置 `PTP`{.literal}
    从接口，以减少从设备生成的网络流量量。您可以将运行
    `chronyd`{.literal} 的计算机配置为 `NTP`{.literal} 客户端（可能为
    `NTP`{.literal} 服务器），以同时作为 `PTP`{.literal} master
    运行，以使用多播消息传递将同步时间分发到大量计算机。
:::
:::
:::
[]{#assembly_overview-of-network-time-security-in-chrony_configuring-basic-system-settings.html}
::: chapter
::: titlepage
# []{#assembly_overview-of-network-time-security-in-chrony_configuring-basic-system-settings.html#assembly_overview-of-network-time-security-in-chrony_configuring-basic-system-settings}第 33 章 chrony 中的网络时间安全(NTS)概述 {.title}
:::
网络时间安全(NTS)是网络时间协议(NTP)的身份验证机制，旨在扩展大量客户端。它验证从服务器计算机收到的数据包是否在移动到客户端计算机时未改变。网络时间安全(NTS)包含密钥建立(NTS-KE)协议，可自动创建服务器及其客户端之间使用的加密密钥。
::: section
::: titlepage
# []{#assembly_overview-of-network-time-security-in-chrony_configuring-basic-system-settings.html#proc_enabling-nts-in-the-client-configuration-file_assembly_overview-of-network-time-security-in-chrony}在客户端配置文件中启用网络时间安全性(NTS) {.title}
:::
默认情况下不启用网络时间安全性(NTS)。您可以在
`/etc/chrony.conf`{.literal} 中启用 NTS。为此，请执行以下步骤：
::: itemizedlist
**先决条件**
-   支持 NTS 的服务器
:::
::: title
**流程**
:::
在客户端配置文件中：
::: orderedlist
1.  除了推荐的 `iburst`{.literal} 选项外，还使用 the `nts`{.literal}
    选项指定服务器。
    ``` screen
    For example:
    server time.example.com iburst nts
    server nts.netnod.se iburst nts
    server ptbtime1.ptb.de iburst nts
    ```
2.  为了避免在系统引导过程中重复网络时间安全(NTS-KE)会话，请将以下行添加到
    `chrony.conf`{.literal} （如果不存在）：
    ``` screen