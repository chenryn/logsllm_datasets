5
6 return (𝑥 (𝑘), 𝜃 (𝑘));
Algorithm 1 sketches the complete procedure. By alternating be-
tween input and model perturbation, it finds approximately optimal
adversarial input 𝑥∗ and poisoned model 𝜃∗. Note that designed to
study the interactions of adversarial inputs and poisoned models
(§ 4), Algorithm 1 is only one possible implementation of Eqn (4)
under the setting of a single target input and both input and model
perturbation. To implement other attack variants, one can adjust
Algorithm 1 accordingly (§ 5). Also note that it is possible to per-
form multiple input (or model) updates per model (or input) update
to accommodate their different convergence rates.
3.2.3 Analysis. Next we provide analytical justification for Algo-
rithm 1. As Eqn (5) is effectively equivalent to Eqn (4), Algorithm 1
approximately solves Eqn (5) by alternating between (i) input pertur-
bation – searching for 𝑥∗ = arg min𝑥∈F𝜖 (𝑥◦) ℓ(𝑥; 𝜃∗) and (ii) model
perturbation – searching for 𝜃∗ = arg min𝜃 ∈F𝛿 (𝜃◦) ℓ(𝑥∗; 𝜃). We now
show that this implementation effectively solves Eqn (5) (proof
deferred to Appendix A).
Proposition 1. Let 𝑥∗ ∈ F𝜖(𝑥◦) be a minimizer of the function
min𝑥 ℓ(𝑥; 𝜃). If 𝑥∗ is non-zero, then ∇𝜃 ℓ(𝑥∗; 𝜃) is a proper descent
direction for the objective function of min𝑥∈F𝜖 (𝑥◦) ℓ(𝑥; 𝜃).
Thus, we can conclude that Algorithm 1 is an effective implemen-
tation of the IMC attack framework. It is observed in our empirical
evaluation that Algorithm 1 typically converges within less than
20 iterations (details in § 4).
4 MUTUAL REINFORCEMENT EFFECTS
Next we study the dynamic interactions between adversarial inputs
and poisoned models. With both empirical and analytical evidence,
we reveal that there exist intricate “mutual reinforcement” effects
between the two attack vectors: (i) leverage effect – with fixed attack
efficacy, at slight cost of one metric (i.e., fidelity or specificity), one
can disproportionally improve the other metric; (ii) amplification
effect – with one metric fixed, at minimal cost of the other, one can
greatly boost the attack efficacy.
4.1 Study Setting
Datasets. To factor out the influence of specific datasets, we pri-
marily use 4 benchmark datasets:
• CIFAR10 [27] – It consists of 32 × 32 color images drawn from 10
classes (e.g., ‘airplane’);
• Mini-ImageNet – It is a subset of the ImageNet dataset [14], which
consists of 224 × 224 (center-cropped) color images drawn from
20 classes (e.g., ‘dog’);
• ISIC [16] – It represents the skin cancer screening task from the
ISIC 2018 challenge, in which given 600 × 450 skin lesion images
are categorized into a 7-disease taxonomy (e.g., ‘melanoma’);
• GTSRB [46] – It consists of color images of size ranging from
29 × 30 to 144 × 48, each representing one of 43 traffic signs.
Note that among these datasets, ISIC and GTSRB in particular
represent security-sensitive tasks (i.e., skin cancer screening [16]
and traffic sign recognition [4]).
DNNs. We apply ResNet18 [23] to CIFAR10, GTSRB and ImageNet
and ResNet101 to ISIC as the reference DNN models. Their top-1
accuracy on the testset of each dataset is summarized in Table 1.
Using two distinct DNNs, we intend to factor out the influence of
individual DNN characteristics (e.g., network capacity).
CIFAR10
ResNet18
95.23%
ImageNet
ResNet18
94.56%
Model
Accuracy
Table 1. Accuracy of benign DNNs on reference datasets.
ResNet101
88.18%
ISIC
GTSRB
ResNet18
99.12%
Attacks. Besides the IMC attack in § 3.2, we also implement two
variants of IMC (with the same hyper-parameter setting) for com-
parison: (i) input perturbation only, in which IMC is instantiated
as the adversarial attack (i.e., PGD [34]), and (ii) model perturba-
tion only, in which IMC is instantiated as the poisoning attack. The
implementation details are deferred to Appendix B.
Measures. We quantify the attack objectives as follows.
Efficacy – We measure the attack efficacy by the misclassification
confidence, 𝑓𝑡 (𝑥∗; 𝜃∗), which is the probability that the adversarial
input 𝑥∗ belongs to the target class 𝑡 as predicted by the poisoned
model 𝜃∗. We consider the attack successful if the misclassification
confidence exceeds a threshold 𝜅.
Fidelity – We measure the fidelity loss by the 𝐿𝑝-norm of the
input perturbation ℓf(𝑥∗) ≜ ∥𝑥∗ − 𝑥◦∥𝑝. Following previous work
on adversarial attacks [7, 20, 34], we use 𝑝 = ∞ by default in the
following evaluation.
Specificity – Further, we measure the specificity loss using the
difference of the benign and poisoned models on classifying a ref-
erence set R. Let I𝑧 be the indicator function that returns 1 if 𝑧 is
true and 0 otherwise. The specificity loss can be defined as:
I𝑓 (𝑥;𝜃◦)≠𝑓 (𝑥;𝜃∗)
|R|
(9)
ℓs(𝜃∗) ≜∑︁
𝑥∈R
With fixed attack efficacy 𝜅, let (𝑥∗, 𝜃∗) be the adversarial input
and poisoned model generated by IMC, and ¯𝑥∗ and ¯𝜃∗ be the ad-
versarial input and poisoned model given by the adversarial and
poisoning attacks respectively. Because the adversarial and poison-
ing attacks are special variants of IMC, we have 𝑥∗ = ¯𝑥∗ if 𝜃∗ = 𝜃◦
and 𝜃∗ = ¯𝜃∗ if 𝑥∗ = 𝑥◦. Thus, in the following, we normalize the
fidelity and specificity losses as ℓf(𝑥∗)/ℓf( ¯𝑥∗) and ℓs(𝜃∗)/ℓs( ¯𝜃∗) re-
spectively, both of which are bound to [0, 1]. For reference, the
concrete specificity losses ℓs( ¯𝜃∗) (average accuracy drop) caused by
the poisoning attack on each dataset are summarized in Table 2.
Figure 4: Disproportionate trade-off between attack fidelity and specificity.
𝜅
0.75
0.9
CIFAR10
0.11%
0.12%
ImageNet
2.44%
3.83%
ISIC
1.53%
1.62%
GTSRB
0.25%
0.27%
Table 2. Specificity losses (average accuracy drop) caused by poison-
ing attacks on reference datasets.
4.2 Effect I: Leverage Effect
In the first set of experiments, we show that for fixed attack effi-
cacy, with disproportionally small cost of fidelity, it is feasible to
significantly improve the attack specificity, and vice versa.
4.2.1 Disproportionate Trade-off. For each dataset, we apply
the adversarial, poisoning, and IMC attacks against 1,000 inputs
randomly sampled from the testset (as the target set T ), and use the
rest as the reference set R to measure the specificity loss. For each
input of T , we randomly select its target class and fix the required
attack efficacy (i.e., misclassification confidence 𝜅). By varying IMC’s
hyper-parameters 𝜆 and 𝜈, we control the importance of fidelity
and specificity. We then measure the fidelity and specificity losses
for all the successful cases. Figure 4 illustrates how IMC balances
fidelity and specificity. Across all the datasets and models, we have
the following observations.
First, with fixed attack efficacy (i.e., 𝜅 = 0.9), by sacrificing dispro-
portionally small fidelity (i.e., input perturbation magnitude), IMC
significantly improves the attack specificity (i.e., accuracy drop on
non-target inputs), compared with required by the corresponding
poisoning attack. For instance, in the case of GTSRB (Figure 4 (d)),
as the fidelity loss increases from 0 to 0.05, the specificity loss is
reduced by more than 0.48.
Second, this effect is symmetric: a slight increase of specificity
loss also leads to significant fidelity improvement, compared with
required by the corresponding adversarial attack. For instance, in
the case of CIFAR10 (Figure 4 (a)), as the specificity loss increases
from 0 to 0.1, the specificity loss drops by 0.37.
Third, higher attack efficacy constraint brings more fidelity-
specificity trade-off. Observe that across all datasets, GTSRB shows
significantly larger curvature, which might be explained by the
higher model accuracy(99.12%) and larger number of classes(43).
Leverage Effect
There exists an intricate fidelity-specificity trade-off. At
disproportionally small cost of fidelity, it is possible to sig-
nificantly improve specificity, and vice versa.
4.2.2 Empirical Implications. The leverage effect has profound
implications. We show that it entails a large design spectrum for the
adversary to optimize the attack evasiveness with respect to various
detection methods (detectors). Note that here we do not consider
the adversary’s adaptiveness to specific detectors but rather focus
on exposing the design spectrum enabled from a detection perspec-
tive. In § 5, we show that IMC also allows to enhance the attacks
by adapting to specific detectors. To assess IMC’s evasiveness, we
consider three complementary detectors.
Input Anomaly – From the input anomaly perspective, we apply
manifold transformation [35] as the detector. At a high level, it em-
ploys a reformer network to project given inputs to the manifold
spanned by benign inputs and a detector network to differenti-
ate benign and adversarial inputs. Besides, we apply randomized
smoothing [11] as another detector, which transforms a given DNN
into a “smoothed” model and considers a given input 𝑥∗ as adver-
sarial if the probability difference of 𝑥∗’s largest and second largest
classes exceeds a threshold.
Model Anomaly – From the model anomaly perspective, we apply
curvature profiling [38] as the detector. Recall that the poisoning
attack twists the classification boundary surrounding the target
input 𝑥∗; thus, the loss function tends to change abruptly in 𝑥∗’s
vicinity. To quantify this property, we compute the eigenvalues of
the Hessian 𝐻𝑥(𝑥∗) = ∇2
𝑥 ℓ(𝑥∗). Intuitively, larger (absolute) eigen-
values indicate larger curvatures of the loss function. We define
the average (absolute) value of the top-𝑘 eigenvalues of 𝐻𝑥(𝑥∗) as
𝑖=1 |𝜆𝑖(𝐻𝑥(𝑥∗))|, where 𝜆𝑖(𝑀) is the 𝑖-th
𝑥∗’s curvature profile: 1
𝑘
eigenvalue of matrix 𝑀 (details in Appendix B). We compare the
curvature profiles of given inputs and benign ones, and use the
Kolmogorov–Smirnov statistics to differentiate the two sets.
𝑘
We apply the above detectors to the adversarial inputs and poi-
soned models generated by IMC under varying fidelity-specificity
trade-off (𝜅 fixed as 0.75). Figure 5 measures the detection rates for
different datasets. We have the following observations.
The detection rate of input anomaly grows monotonically with
the fidelity loss (i.e., input perturbation magnitude); on the contrary,
the detection rate of model anomaly drops quickly with the fidelity
loss (i.e., disproportionate specificity improvement due to the lever-
age effect). For instance, in the case of ImageNet (Figure 5 (b)), as
the fidelity loss varies from 0 to 0.35, the detection rate of input
anomaly increases from 0.17 to 0.53 by manifold transformation
and from 0.16 to 0.47 by randomized smoothing, while the detection
rate of corresponding model anomaly drops from 0.63 to 0.44.
Moreover, across all the cases, IMC is able to balance fidelity and
specificity, leading to high evasiveness with respect to multiple
detectors simultaneously. For instance, in the case of CIFAR10 (Fig-
ure 5 (a)), with the fidelity loss set as 0.23, the detection rates of
κ = 0.75κ = 0.90(a) CIFAR10Poisoning AttackAdversarial AttackSpecificity Loss1.00.80.60.40.20.00.00.20.40.60.81.0(b) ImageNet0.00.20.40.60.81.0(c) ISIC0.00.20.40.60.81.0(d) GTSRB0.00.20.40.60.81.0Fidelity LossFigure 5: Detection rates of input anomaly (by manifold projection [35]) and model anomaly (by curvature profile [38]).
Figure 6: Average misclassification confidence (𝜅) as a function of fidelity and specificity losses.
iteratively updates it with adversarial inputs that deceive its current
configuration (i.e., adversarial “re-training”).
Dataset
CIFAR10
ImageNet
ISIC
GTSRB
Maximum Perturbation
PGD
3 × 10−2
4 × 10−3
3 × 10−2
3 × 10−2
IMC
2 × 10−3
1 × 10−3
1 × 10−3
3 × 10−2