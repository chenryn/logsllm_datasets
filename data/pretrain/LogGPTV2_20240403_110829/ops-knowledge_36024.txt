User: 如何使用Ansible来一次性部署多台Web服务器，包括配置Web服务器和负载均衡器？
Assistant: 1.准备工作
首先需要安装好Ansible，并且已经有一个可以远程访问的Web服务器和一台负载均衡器。需要将这些服务器添加到Ansible主机清单中，并以组的形式进行分类。

2.创建Ansible playbook
可以先创建一个名为web_server.yaml的文件，将全部的任务都放到该文件中。可以使用Ansible提供的丰富模块来完成这些任务，例如，使用apt模块安装Apache、PHP和数据库。使用template模块来生成配置文件，使用copy模块将文件传输到服务器。

3.在playbook中添加负载均衡器
将负载均衡器添加到主机清单中，并在playbook中创建一个新任务来配置负载均衡器。使用Haproxy模块可以很容易地在运行Haproxy的服务器上配置负载均衡器。可以使用template模块创建Haproxy配置文件，并使用copy模块将文件传输到服务器。

4.运行playbook
使用ansible-playbook命令运行playbook。可以指定要使用的主机清单、要运行的playbook文件以及其他参数（如用户、密码等）。运行完毕后，所有的Web服务器以及负载均衡器都会被成功配置，可以通过负载均衡器访问网站。

参考执行代码：

---
- name: deploy web servers and load balancer
  hosts: all
  become: true

  vars:
    web_servers:
      - name: web1.example.com
        ip_address: 192.168.1.10
      - name: web2.example.com
        ip_address: 192.168.1.11
    haproxy_server: haproxy.example.com

  tasks:
    # Install Apache, PHP and database on web servers
    - name: Install required packages
      apt:
        name: "{{ item }}"
        state: present
      with_items:
        - apache2
        - php
        - php-mysql
        - mysql-client

    # Copy Apache virtual host configuration file to web servers
    - name: Copy Apache virtual host configuration file
      copy:
        src: templates/vhost.conf.j2
        dest: /etc/apache2/sites-available/{{ item.name }}.conf
      with_items: "{{ web_servers }}"

    # Enable virtual host on web servers
    - name: Enable virtual host
      command: a2ensite {{ item.name }}
      with_items: "{{ web_servers }}"
    
    # Restart Apache on web servers
    - name: Restart Apache
      service:
        name: apache2
        state: restarted

    # Install Haproxy on Haproxy server
    - name: Install Haproxy
      apt:
        name: haproxy
        state: present
      when: inventory_hostname == haproxy_server

    # Copy Haproxy configuration file to Haproxy server
    - name: Copy Haproxy configuration file
      copy:
        src: templates/haproxy.cfg.j2
        dest: /etc/haproxy/haproxy.cfg
      when: inventory_hostname == haproxy_server
    
    # Restart Haproxy
    - name: Restart Haproxy
      service:
        name: haproxy
        state: restarted
      when: inventory_hostname == haproxy_server