(Deﬁnition 2.6) with respect to the F U
Proof. The simulation follows the same strategy as Lemma 5.15 except now A is allowed to sample
k and have the parties output messages of the form vi,x := H(i, k + ti + b(cid:12) (ci +C(map(x)))). The
simulator A(cid:48) samples ti uniformly at random after A is bound to their choice of k and therefore
its easy to verify that A has negligible probability of querying H on such an input before receiving
k.
OT oracle.
Claim F.5 (Malicious Receiver Security). Πext-Su+ satisﬁes security against a malicious receiver
(Deﬁnition 2.6) with respect to the F U
OT oracle.
Proof. The simulation also follows the same strategy as Lemma 5.15 with a few key diﬀerences.
1. A(cid:48) sends a dummy commitment in place of the commitment to k, i.e. a uniform string from
the same distribution.
2. Then A(cid:48) runs the normal simulation described by Lemma 5.15 up to the point that S would
decommit to k except that A(cid:48) does not program H as described.
48
3. At this point A(cid:48) has received U in step Step 2 and A send a valid proof for Step 4 (by
assumption or A(cid:48) would have aborted). A(cid:48) now uniformly samples k ← FnC
2 and programs
the commitment random oracle to decommit to k. A(cid:48) then programs H(cid:48) to output the ideal
output vi,xi of R for the query H(cid:48)(i, k + ti). Since k ∈ FnC
is uniformly distributed in the view
of A, it follows that A has probability at most q2−nC ≤ q2−κ = negl probability of querying
the oracle at this point, where q is the number of queries that A has made.
2
4. A(cid:48) then sends the decommits of k to A and completes the simulation as Lemma 5.15 does.
OT Extension with an Ideal Cipher
F.6 Proof of Lemma F.7: F S
Deﬁnition F.6. Let Πext-Sπ be the protocol of Figure 9 where FOT := F R
OT and the random oracle
H(i, x) required by Πext-E is replaced as follows: after Step 4, S samples k ← {0, 1}κ and sends it to
2 → {0, 1}κ is an ideal cipher. Note:
R. Both parties deﬁne H(x) = πk(x) + x where π : {0, 1}κ × FnC
the i parameter of H is removed.
Lemma F.7. The Πext-Sπ protocol realizes 1-out-of-N F S
malicious R, Πext-Rπ realizes F U
uniformly from {0, 1}κ by the protocol.
OT-security, for N = poly(κ). Against a
OT-security. That is, the input messages of an honest S are sampled
Proof.
Claim F.8 (Malicious Sender Security). Πext-R satisﬁes security against a malicious sender (Def-
inition 2.6) with respect to the F S
OT functionality.
Proof. The simulation follows essentially the same strategy as Lemma 5.8. Consider the following
hybrids which will deﬁne the simulator A(cid:48).
Hybrid 1. A(cid:48) internally runs A while plays the role of R and base OT oracle FOT = F R
OT. For
j − 1. A(cid:48)
b}) to A on behalf of
j ∈ [nC], A(cid:48) receives (b(cid:48)
uniformly samples tj
1−bj
FOT. A(cid:48) outputs whatever A outputs. The view of A is unmodiﬁed.
OT would. A(cid:48) sends (b(cid:48),{tj
j, tj
bj
as FOT = F E
) ∈ [2] × Fm(cid:48)
from A in Step 1 where bj := b(cid:48)
2
Hybrid 2. For Step 2 A(cid:48) does not sample tj
and instead uniformly samples U ← Fm(cid:48)×nC
. A(cid:48)
sends U to A and then computes Q as S would. The view of A is identically distributed.
is uniformly distributed in the view of A and masks
This follows from the fact that tj
the j-th column of U in the previous hybrid.
1−bj
1−bj
2
Hybrid 3. For Step 4 A(cid:48) simulates the consistency proof. This change is indistinguishable.
Hybrid 4. A(cid:48) receives k from A as speciﬁed in Deﬁnition F.6. For each row qi, A(cid:48) deﬁnes the circuit
Mi : [N ] → {0, 1}κ such that on input j ∈ [N ] it outputs H(qi + b (cid:12) C(map(j))). A(cid:48)
sends Mi to the ideal oracle F E
OT as the sender’s input to the i-th OT instance. This
change allows the ideal oracle to output the same distribution as the real protocol. The
view of A is unmodiﬁed.
Let yj = qi + b (cid:12) C(map(j)) = ti + b (cid:12) (ci + C(map(j)) and note that A can inﬂuence
Mi(j) = H(yj) = πk(yj) + yj by choosing k, b and the bits {ti[j] | bj = 0}.
49
Hybrid 5. A(cid:48) does not take the input of R. R only interacts with F E
distributed since A(cid:48) was not using the input of R.
OT. This change is identically
Claim F.9 (Malicious Receiver F U
(Deﬁnition 2.6) with respect to the F U
OT functionality.
OT-Security). Πext-R satisﬁes security against a malicious receiver
Proof. The simulation also follows a similar strategy as Lemma 5.8. Consider the following hybrids
which will deﬁne the simulator A(cid:48).
Hybrid 1. A(cid:48) internally runs A while plays the role of S and base OT oracle FOT = F R
OT. A(cid:48)
1}i∈nC and sends them to A in Step 1. A(cid:48) samples b as S would.
uniformly samples {tj
A(cid:48) outputs whatever A outputs. The view of A is unmodiﬁed.
Hybrid 2. In Step 2 A(cid:48) receives U from A. A(cid:48) computes C and Q using tj
0, tj
1, b. A(cid:48) performs the
proof of Step 4 as S would. If the proof fails, A(cid:48) aborts as S would. Otherwise, by the
correctness of the proof, ci decodes to wi and computes xi s.t. wi = map(xi).
For all i ∈ [m], A(cid:48) deﬁnes the circuit Si : [N ] → {0, 1} which outputs 1 at xi and 0
otherwise. A(cid:48) sends Si and then (Output, xi) to F S
OT as the receiver’s input to the i-th
OT instance which responds with vi,xi. The view of A is unmodiﬁed.
F S
0, tj
Hybrid 3. A(cid:48) then uniformly samples k ← {0, 1}κ as S would and deﬁnes the ideal permutation πk.
If πk has been queries by A, then A(cid:48) aborts. The probability of this event is negligible
due to k being uniformly sampled from {0, 1}κ. Otherwise, before sending k to S, A(cid:48)
programs πk s.t. πk(ti) = vi,xi +ti. Conditioned on these input/outputs not colliding for
i ∈ [m], which happens with overwhelming probability, this modiﬁcation is identically
distributed due to vi,xi ← {0, 1}κ being sampled uniformly by F U
OT.
Hybrid 4. Assuming A(cid:48) did not abort in Step 4, let E = {j | ∃i ∈ [m], (ci ⊕C(wi))j = 1} index the
columns of C where A added an error to any codeword ci (w.r.t wi). By the correctness
of Step 4, it holds that E ⊆ B0, otherwise the consistency proof would have failed.
By passing the consistency proof, A learns what bj = 0 for all j ∈ E. Similarly, the
probability of passing the check and Pr[|E| = d] = Pr[bj = 0 | ∀j ∈ E] = 2−d due to the
proof being independent of b. We will see that this is equivalent to A simply guessing
E (which is correct with the same probability) and then being honest.
For all w (cid:54)= wi, A has negl probability of computing g = qi + b (cid:12) C(w). If this was not
the case, then A could compute
g + ti = qi + b (cid:12) C(w) + ti
= ci (cid:12) b + ti + b (cid:12) C(w) + ti
= (ci + C(w)) (cid:12) b
= (C(wi) + C(w)) (cid:12) b
This last equality holds due to A(cid:48) aborting if (ci + C(wi)) (cid:12) b (cid:54)= 0. Recall that C has
minimum distance dC ≥ κ and therefore computing g is equivalent A guessing dC ≥ κ
bits of b which happens with probability 2−dC ≤ 2−κ. As such, the probability that A
has made a query of the form πk(qi + b (cid:12) C(w)) for w (cid:54)= wi is also negligible. If such
as query does happen A(cid:48) aborts. This hybrid is indistinguishably distributed from the
previous.
50
Hybrid 5. When S makes an πk query of the form πk(h) which they have not previously been
queried, A(cid:48) must determine if there is a unique w ∈ FnC
2 , i ∈ [m] such that h = qi +
b (cid:12) C(w). For the sake of contradiction, let us assume there exists any two i, i(cid:48) ∈ [m] or
w, w(cid:48) ∈ FkC
2 which result in the same input to πk. If i = i(cid:48) and w = w(cid:48), then a unique
(i, w) exist. Otherwise,
ti + b (cid:12) (ci + C(w)) = ti(cid:48) + b (cid:12) (ci(cid:48) + C(w(cid:48)))
b (cid:12) (C(w) + C(w(cid:48)) + ci + ci(cid:48)) = ti + ti(cid:48)
b (cid:12) δ = ti + ti(cid:48)
where δ := C(w) + C(w(cid:48)) + ci + ci(cid:48). If i = i(cid:48), then it must hold b (cid:12) (C(w) + C(w(cid:48))) = 0
for w (cid:54)= w(cid:48). Recall that C by construction has minimum distance dC ≥ κ and that b is
uniformly distributed. Let E = {i | δi = 1}, then |E| ≥ dC ≥ κ and for the above to hold
we require bi = 0 | ∀i ∈ E which occurs with probability Pr[bi = 0 | ∀i ∈ E] = 2−|E| ≤
2−dC ≤ 2−κ. Therefore with overwhelming probability a unique (i, w) exist if i = i(cid:48).
Otherwise, let Bj := {i | bi = j} and due to Step 4 it holds that for all i ∈ [m], ci (cid:12) b
erasure decodes to wi with B0 indexing the erasures. Therefore, by the linearity of C,
δ erasure decodes to some w∗ with B0 indexing the erasures s.t. b (cid:12) c∗ = b (cid:12) δ where
c∗ := C(w∗).
Fixing some i, i(cid:48), the probability b (cid:12) c∗ = ti + ti(cid:48) is p0 = Pr[(ti + ti(cid:48))(cid:96) = 0 | ∀(cid:96) ∈
B0] ≤ 2−|B0| times p1 = Prc∗[(ti + ti(cid:48) + c∗)(cid:96) = 0 | ∀(cid:96) ∈ B1] ≤ N 2−|B1|. Therefore, the
probability that i (cid:54)= i(cid:48) and w (cid:54)= w(cid:48) is at most the union bound over all i, i(cid:48) ∈ [m],
i,i(cid:48),c∗[b (cid:12) c∗ ≤ ti + ti(cid:48)] ≤ m2p0p1 = m2N 2−nC
Pr
(2)
which is negligible8. Therefore we conclude that (i, w) is unique if such a pair exists.
If so then A(cid:48) can use Gaussian elimination to identify it. In particular, A(cid:48) computes
h + qi for all i ∈ [m] and checks that (h + qi)(cid:96) = 0 for all (cid:96) ∈ B1 and if so tries erasure
decodes h + qi to w where the erasures are index by B0. For h + qi this will happen and
A(cid:48) computes x s.t. map(x) = w and sends (Output, x) to the i-th instance of F S
OT and
receives vi,x ← {0, 1}(cid:96) in response. Let yi,x := h = ti + b(ci + C(map(x))).
A(cid:48) programs πk(yi,x) = vi,x + yi,x. Programming πk requires the input/output pair
(yi,x, vi,x + yi,x) to have not previously been queried on πk, π−1
It is easy to verify
k .
that with overwhelming probability π−1
k (vi,x + yi,x) has not been queried since vi,x is
uniformly distributed.
In the other direction, yi,x could have been queried in two ways. 1) D or A guessed
it which is negligible as discussed in Hybrid F.6. 2) D inverted vi(cid:48),x(cid:48)
:= H(yi(cid:48),x(cid:48)) =
πk(yi(cid:48),x(cid:48))+yi(cid:48),x(cid:48) and then recovered b. However, v = πk(y)+y is preimage resistant[BRS02,
Win84] which informally follows from the diﬃculty of ﬁnding an input to the random
permutation πk which diﬀers from v by itself.
Hybrid 6. A(cid:48) does not take the input of S and does not program π in Hybrid F.6. S only interacts
with F S
OT. This change is identically distributed.
8Note, N is assumed to be polynomial. This is true in the target use case where N = 2 and nC = κ.
51
Claim F.10 (Malicious Receiver F S
ceiver (Deﬁnition 2.6) with respect to the F S
OT functionality.
OT-Security). Πext-R satisﬁes Security Against a Malicious Re-
Proof. Follows from Lemma 3.1 and the previous claim.
Deﬁnition F.11. Let Πext-Uπ be the protocol of Figure 9 where FOT := F Uu
H(i, x) required by Figure 9 is replaced as follows:
OT and the random oracle
1. In round one, S samples k ← {0, 1}κ and sends a commitment of k to R.
2. After Step 4, S decommits k to R who aborts if it fails.
3. Both parties deﬁne H(x) = πk(x) + x where π : {0, 1}κ × FnC
Note: the i parameter of H is removed.
2 → {0, 1}κ is an ideal cipher.
F.7 Proof of Lemma F.11: F U
Lemma F.12. The Πext-Uπ protocol realizes 1-out-of-N F U
OT Extension with an Ideal Cipher
OT-security, for N = poly(κ).
Proof.
Claim F.13 (Malicious Sender Security). Πext-U satisﬁes security against a malicious sender (Def-
inition 2.6) with respect to the F U
OT functionality.
Proof. The simulation follows essentially the same strategy as Lemma F.7. The diﬀerences to the
hybrids are as follows.
Hybrid 1. A(cid:48) extracts k from the commitment. Then A(cid:48) samples T0, T1 and the selections b uni-
formly at random and simulates the base OTs using them.
Hybrid 4. A(cid:48) no longer sends the messages speciﬁed by S to F U
OT. Instead, when A makes a query
to πk(h), A(cid:48) checks if h = yi,x = ti + b (cid:12) (ci + C(map(x))) for some pair (i, x). If so,
then (i, x) are unique as described by Lemma F.7. A(cid:48) queries the i-th instance of F U
with (Output, x) and receives vi,x in response. A(cid:48) programs πk(yi,x) = vi,x + yi,x. The
probability of the input/output being previously queries is negligible due to A extracting
k before ti was sampled and vi,x being uniformly distributed.
OT
Hybrid 5. A(cid:48) does not take the input of R. R only interacts with F U
distributed since A(cid:48) was not using the input of R.
OT. This change is identically
Claim F.14 (Malicious Receiver F U
ceiver (Deﬁnition 2.6) with respect to the F U
OT oracle.
OT-Security). Πext-R satisﬁes security against a malicious re-
Proof. Follows directly from Lemma F.7 claim 2 and the hiding property of the commitment.
52
F R
OT Extension with an Ideal Cipher
F.8
Deﬁnition F.15. Let Πext-Rπ be the protocol of Figure 9 where FOT := F Uu
H(i, x) required by Πext-E is replaced as follows: H(x) = π(x) + x where π : FnC
ideal permutation. Note: the i parameter of H is removed.
Lemma F.16. The Πext-Rπ protocol realizes 1-out-of-N F R
OT and the random oracle
2 → {0, 1}κ is an
OT-security, for N = poly(κ).
sketch. The proof follows the same strategy as Lemma F.7 except π is not keyed. As such, R can
compute H(ti) before making their selection xi. This can be simulator by having the simulator
extract H(ti) as their chosen message.
53