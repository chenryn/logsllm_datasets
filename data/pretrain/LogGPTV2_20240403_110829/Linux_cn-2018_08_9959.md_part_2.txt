![](/data/attachment/album/201808/29/002749zedqu84xz4d1bb68.jpg)
### 操作系统
供应就绪后，我们来到操作系统层。在这里你可以看到我们打趣一些我们最喜欢的同事：注意上面 Brian Redbeard 那超众的瑜珈姿势。:)
Packet 为客户提供了 11 种主要的操作系统可供选择，包括一些你在图中看到的：[Ubuntu](https://www.ubuntu.com/)、[CoreOS](https://coreos.com/)、[FreeBSD](https://www.freebsd.org/)、[Suse](https://www.suse.com/)、和各种 [Red Hat](https://www.redhat.com/) 系的发行版。我们看到越来越多的人们在这一层上加入了他们自己的看法：从定制内核和用于不可变部署的 黄金镜像   golden images （LCCT 注：golden image 指定型的镜像或模板，一般是经过一些定制，并做快照和版本控制，由此可拷贝出大量与此镜像一致的开发、测试或部署环境，也有人称作 master image），到像 [NixOS](https://nixos.org/) 和 [LinuxKit](https://github.com/linuxkit/linuxkit) 这样的项目。
![](/data/attachment/album/201808/29/002755fbvojjkokvhrl1hn.jpg)
### 运行时
为了有趣些，我们将 运行时   runtime 放在了体育馆内，并为 CoreOS 赞助的 [rkt](https://coreos.com/rkt/) 和 [Docker](https://www.docker.com/) 的容器化举行了一次比赛。而无论如何赢家都是 CNCF！
我们认为快速演进的存储生态系统应该是一些可上锁的储物柜。关于存储部分有趣的地方在于许多的新玩家尝试去解决持久性的挑战问题，以及性能和灵活性问题。就像他们说的：存储很简单。
![](/data/attachment/album/201808/29/002800b4goobeohqgnlnot.jpg)
### 编排
在过去的这一年里，编排层全是 Kubernetes 了，因此我们选取了其中一位著名的布道者（Kelsey Hightower），并在这个古怪的会议场景中给他一个特写。在我们的团队中有一些 [Nomad](https://www.nomadproject.io/)（LCTT 译注：一个管理机器集群并在集群上运行应用程序的工具）的忠实粉丝，并且如果抛开 Docker 和它的工具集的影响，就无从谈起云原生。
虽然负载编排应用程序在我们栈中的地位非常高，我们看到的各种各样的证据表明，这些强大的工具开始去深入到栈中，以帮助用户利用 GPU 和其它特定硬件的优势。请继续关注 —— 我们正处于容器化革命的早期阶段！
![](/data/attachment/album/201808/29/002807gewh6i6eecegwg6g.jpg)
### 平台
这是栈中我们喜欢的层之一，因为每个平台都有如此多的工具帮助用户去完成他们想要做的事情（顺便说一下，不是去运行容器，而是运行应用程序）。从 [Rancher](https://rancher.com/) 和 [Kontena](https://kontena.io/)，到 [Tectonic](https://coreos.com/tectonic/) 和 [Redshift](https://aws.amazon.com/redshift/) 都是像 [Cycle.io](https://cycle.io/) 和 [Flynn.io](https://flynn.io/) 一样是完全不同的方法 —— 我们看到这些项目如何以不同的方式为用户提供服务，总是激动不已。
关键点：这些平台是帮助用户转化云原生生态系统中各种各样的快速变化的部分。很高兴能看到他们各自带来的东西！
![](/data/attachment/album/201808/29/002812pt4telo8efn2tz9e.jpg)
### 安全
当说到安全时，今年真是很忙的一年！我们尝试去展示一些很著名的攻击，并说明随着工作负载变得更加分散和更加可迁移（当然，同时攻击者也变得更加智能），这些各式各样的工具是如何去帮助保护我们的。
我们看到一个用于不可信环境（如 Aporeto）和低级安全（Cilium）的强大动作，以及尝试在网络级别上的像 [Tigera](https://www.tigera.io/) 这样的可信方法。不管你的方法如何，记住这一点：安全无止境。:0
![](/data/attachment/album/201808/29/002819rxn1ttfo9xdo7pnj.jpg)
### 应用程序
如何去表示海量的、无限的应用程序生态系统？在这个案例中，很容易：我们在纽约，选我们最喜欢的。;) 从 [Postgres](https://www.postgresql.org/) “房间里的大象” 和 [Timescale](https://www.timescale.com/) 时钟，到鬼鬼祟祟的 [ScyllaDB](https://www.scylladb.com/) 垃圾桶和那个悠闲的 [Travis](https://travis-ci.com/) 哥们 —— 我们把这个片子拼到一起很有趣。
让我们感到很惊奇的一件事情是：很少有人注意到那个复印屁股的家伙。我想现在复印机已经不常见了吧？
![](/data/attachment/album/201808/29/002828whr00hjjrij5idmm.jpg)
### 可观测性
由于我们的工作负载开始到处移动，规模也越来越大，这里没有一件事情能够像一个非常好用的 [Grafana](https://grafana.com/) 仪表盘、或方便的 [Datadog](https://www.datadoghq.com/) 代理让人更加欣慰了。由于复杂度的提升，[SRE](https://en.wikipedia.org/wiki/Site_Reliability_Engineering) 时代开始越来越多地依赖监控告警和其它智能事件去帮我们感知发生的事件，出现越来越多的自我修复的基础设施和应用程序。
在未来的几个月或几年中，我们将看到什么样的面孔进入这一领域……或许是一些人工智能、区块链、机器学习支撑的仪表盘？:-)
![](/data/attachment/album/201808/29/002836hpks6gsn8e8zezh2.jpg)
### 流量管理
人们往往认为互联网“只是能工作而已”，但事实上，我们很惊讶于它居然能如此工作。我的意思是，就这些大规模的、不同的网络间的松散连接 —— 你不是在开玩笑吧？
能够把所有的这些独立的网络拼接到一起的一个原因是流量管理、DNS 和类似的东西。随着规模越来越大，这些让互联网变得更快、更安全、同时更具弹性。我们尤其高兴的是看到像 [Fly.io](https://fly.io/) 和 [NS1](https://ns1.com/) 这样的新贵与优秀的老牌玩家进行竞争，最后的结果是整个生态系统都得以提升。让竞争来的更激烈吧！
![](/data/attachment/album/201808/29/002844t89eooka2f5az5ap.jpg)
### 用户
如果没有非常棒的用户，技术栈还有什么用呢？确实，他们享受了大量的创新，但在云原生的世界里，他们所做的远不止消费这么简单：他们也创造并贡献了很多。从像 Kubernetes 这样的大量的贡献者到越来越多的（但同样重要）更多方面，而我们都是其中的非常棒的一份子。
在我们屋顶上有许多悠闲的用户，比如 [Ticketmaster](https://www.ticketmaster.com/) 和[《纽约时报》](https://www.nytimes.com/)，而不仅仅是新贵：这些组织拥抱了部署和管理应用程序的方法的变革，并且他们的用户正在享受变革带来的回报。
![](/data/attachment/album/201808/29/002852zcpa76vmtt0gcmpt.jpg)
### 同样重要的，成熟的监管！
在以前的生态系统中，基金会扮演了一个非常被动的“幕后”角色。而 CNCF 不是！他们的目标（构建一个健壮的云原生生态系统），勇立潮流之先 —— 他们不仅已迎头赶上还一路领先。
从坚实的治理和经过深思熟虑的项目组，到提出像 CNCF 这样的蓝图，CNCF 横跨云 CI、Kubernetes 认证、和讲师团 —— CNCF 已不再是 “仅仅” 受欢迎的 [KubeCon + CloudNativeCon](https://www.cncf.io/community/kubecon-cloudnativecon-events/) 了。
---
via: 
作者：[Zoe Allen](https://www.packet.net/about/zoe-allen/) 选题：[lujun9972](https://github.com/lujun9972) 译者：[qhwdw](https://github.com/qhwdw) 校对：[wxy](https://github.com/wxy), [pityonline](https://github.com/pityonline)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出