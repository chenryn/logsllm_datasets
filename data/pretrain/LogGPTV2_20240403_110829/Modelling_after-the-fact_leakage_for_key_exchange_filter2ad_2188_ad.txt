How to generate strong keys from biometrics and other
noisy data. In EUROCRYPT, pages 523–540, 2004.
[15] S. Dziembowski and S. Faust. Leakage-resilient
cryptography from the inner-product extractor. In
ASIACRYPT, pages 702–721, 2011.
[16] S. Dziembowski and K. Pietrzak. Leakage-resilient
cryptography. In IEEE Symposium on Foundations of
Computer Science, pages 293–302, 2008.
[17] S. Faust, E. Kiltz, K. Pietrzak, and G. N. Rothblum.
Leakage-resilient signatures. IACR Cryptology ePrint
Archive, Report 2009/282, 2009.
[18] S. Halevi and H. Lin. After-the-fact leakage in
public-key encryption. In Theory of Cryptology
Conference, pages 107–124, 2011.
[19] M. Hutter, S. Mangard, and M. Feldhofer. Power and
EM attacks on passive 13.56MHz RFID devices. In
CHES, pages 320–333, 2007.
[20] J. Katz and V. Vaikuntanathan. Signature schemes
with bounded leakage resilience. In ASIACRYPT,
pages 703–720, 2009.
214[21] E. Kiltz and K. Pietrzak. Leakage resilient elgamal
encryption. In ASIACRYPT, pages 595–612, 2010.
[22] E. Kiltz, K. Pietrzak, M. Stam, and M. Yung. A new
randomness extraction paradigm for hybrid encryption.
In EUROCRYPT, pages 590–609, 2009.
[23] P. C. Kocher. Timing attacks on implementations of
Diﬃe-Hellman, RSA, DSS, and other systems. In
CRYPTO, pages 104–113, 1996.
[24] H. Krawczyk. On extract-then-expand key derivation
functions and an HMAC-based KDF.
http://webee.technion.ac.il/ hugo/kdf/kdf.pdf, 2008.
[25] B. LaMacchia, K. Lauter, and A. Mityagin. Stronger
security of authenticated key exchange. In ProvSec,
pages 1–16, 2007.
[26] T. Malkin, I. Teranishi, Y. Vahlis, and M. Yung.
Signatures resilient to continual leakage on memory
and computation. In Theory of Cryptology Conference,
pages 89–106, 2011.
[27] T. Messerges, E. Dabbish, and R. Sloan. Examining
smart-card security under the threat of power analysis
attacks. IEEE Transactions on Computers, pages
541–552, 2002.
[28] S. Micali and L. Reyzin. Physically observable
cryptography (extended abstract). In Theory of
Cryptology Conference, pages 278–296, 2004.
[29] D. Moriyama and T. Okamoto. Leakage resilient
eCK-secure key exchange protocol without random
oracles. In ASIACCS, pages 441–447, 2011.
[30] M. Naor and G. Segev. Public-key cryptosystems
resilient to key leakage. In CRYPTO, pages 18–35.
2009.
[31] V. Shoup. Sequences of games: a tool for taming
complexity in security proofs. IACR Cryptology ePrint
Archive, Report 2004/332, 2004.
[32] G. Yang, Y. Mu, W. Susilo, and D. S. Wong. Leakage
resilient authenticated key exchange secure in the
auxiliary input model. In ISPEC, pages 204–217, 2013.
APPENDIX
A. PROOF SKETCH
A.1 A partner to the test session exists.
In this case, the adversary is allowed to corrupt both
principals or reveal ephemeral keys from both oracles. We
assume that the adversary A can win the (·)AFL-eCK chal-
lenge against the protocol π with non-negligible advantage
(A). We split this case into four sub cases as
Adv(·)AFL-eCK
follows:
π
1. Adversary corrupts neither owner or nor partner princi-
pal to the test session.
2. Adversary corrupts both the owner and partner princi-
pals to the test session.
3. Adversary corrupts the owner to the test session, but
does not corrupt the partner to the test session.
4. Adversary corrupts the partner to the test session, but
does not corrupt the owner to the test session.
A.1.1 Adversary corrupts neither owner or nor part-
ner principal to the test session.
Game 1: This game is the original game.
Game 2: Same as Game 1 with the following exception:
before A begins, two distinct random principals U∗, V ∗ $←−
{U1, ..., UNP } are chosen and two random numbers s∗, t∗ $←−
{1, ...Ns} are chosen, where NP is the number of protocol
principals and NS is the number of sessions on a principal.
The oracle Πs∗
U∗,V ∗ is chosen as the target session and the
oracle Πt∗
V ∗,U∗ is chosen as the partner to the target session.
If the test session is not the oracle Πs∗
U∗,V ∗ or partner to the
oracle is not Πt∗
V ∗,U∗ , the Game 2 challenger aborts the game.
Game 3: Same as Game 2 with the following exception:
value (cid:103)rU∗
the Game 3 challenger randomly chooses a pseudo-ephemeral
Enc(pU∗ ,(cid:103)rU∗ ). Then computes KU∗V ∗ ← KDF(U∗, V ∗,
$←−
X (cid:103)rU∗
V ∗ ). When the adversary asks the Test(U∗, V ∗, s∗), Game
3 challenger will answer with KU∗,V ∗ . Further, since a part-
ner session to the test session exists, when the adversary
asks Test(V ∗, U∗, t∗), Game 3 challenger will answer with
KU∗,V ∗ .
q and computes the ephemeral key rU∗
$←− Z∗
U∗
$←− Z∗
Game 4: Same as Game 3 with the following exception:
value (cid:103)r(cid:48)
the Game 4 challenger randomly chooses a pseudo-ephemeral
q . Then computes KU∗V ∗ ← KDF(U∗, V ∗,
(cid:103)r(cid:48)
V ∗ ) and sends it to the adversary A as the answer to the
U∗
X
Test(U∗, V ∗, s∗) query or Test(V ∗, U∗, t∗) query.
Game 5: Same as Game 4 with the following exception:
value (cid:103)r(cid:48)
the Game 5 challenger randomly chooses a pseudo-ephemeral
q . Then computes KU∗V ∗ ← KDF(U∗, V ∗,
(cid:103)r(cid:48)
U∗ ) and sends it to the adversary A as the answer to the
V ∗
X
Test(U∗, V ∗, s∗) query or Test(V ∗, U∗, t∗) query.
$←− Z∗
V ∗
Game 6: Same as Game 5 with the following exception: the
Game 6 challenger randomly chooses z $←− Z∗
q and computes
KU∗V ∗ ← KDF(U∗, V ∗, gz). When the adversary asks the
Test(U∗, V ∗, s∗) query, Game 3 challenger will answer with
KU∗,V ∗ . Further, since a partner session to the test session
exists, when the adversary asks Test(V ∗, U∗, t∗) query, Game
3 challenger will answer with KU∗,V ∗ .
Game 7: Same as Game 6 with the following exception: the
Game 7 challenger randomly chooses K $←− {0, 1}k and sends
it to the adversary A as the answer to the Test(U∗, V ∗, s∗)
query or Test(V ∗, U∗, t∗) query.
Diﬀerences between games: In this section the ad-
versary’s advantage of distinguishing each game from the
previous game is investigated. SuccGame x(A) denotes the
event that the adversary A wins Game x, AdvGame x(A) de-
notes the advantage of the adversary A of winning Game x.
Game 1 is the original game. Hence,
AdvGame 1(A) = Adv(·)AFL-eCK
π
(A).
(1)
Game 1 and Game 2: The probability of Game 2 to be halted
due to incorrect choice of the test session is 1− 1
. Unless
the incorrect choice happens, Game 2 is identical to Game 1.
Hence,
P N 2
s
N 2
AdvGame 1(A).
1
2N 2
s
AdvGame 2(A) =
NP
(2)
Game 2 and Game 3: We introduce an algorithm F which
is constructed using the adversary A. If A can distinguish
the diﬀerence between Game 2 and Game 3, then F can
distinguish whether a message/cphertext pair (m, c) belongs
to the distribution D1 or D2. F receives a pair (rU∗ ,(cid:103)rU∗ )
215$←− Z∗
such that(cid:103)rU∗ = Dec(sU∗ , rU∗ ). F uses rU∗ as the ephemeral
key of U∗ and (cid:103)rU∗ as the pseudo-ephemeral key of U∗. If
pseudo-ephemeral value (cid:103)rU∗ ← Dec(sU∗ , rU∗ ) is computed,
Otherwise if a random pseudo-ephemeral value (cid:103)rU∗ $←−
Enc(pU∗ ,(cid:103)rU∗ ) is computed, then the simulation constructed
a random ephemeral key rU∗
p is chosen ﬁrst and the
then the simulation constructed by F is identical to Game 2.
$←−
mathbbZ∗
by F is identical to Game 3. If A can distinguish whether
a message/cphertext pair (m, c) belongs to the distribution
D1 or D2. Hence,
p is chosen ﬁrst and the ephemeral key rU∗
|AdvGame 2(A) − AdvGame 3(A)| ≤ .
(3)
Game 3 and Game 4: We introduce an algorithm D which
is constructed using the adversary A. If A can distinguish
the diﬀerence between Game 3 and Game 4, then D can be
used against a CPLA2 challenger. The algorithm D uses
the public-key of the CPLA2 challenger as the public key
of the protocol principal U∗ and generates public/secret
key pairs for all other protocol principals. D generates sign-
ing/veriﬁcation key pairs for every protocol principal. D picks
$←− {0, 1}k and passes them to the
two random strings, r0, r1
CPLA2 challenger. From the CPLA2 challenger, D receives
$←− Enc(pkU∗ , rθ)
a challenge ciphertexts C1 such that C1
where rθ = r0 or rθ = r1. If θ = 1, then r1 is the decryption
of C1 and the simulation constructed by D is identical to
Game 3 whereas if θ = 0, then r0 is the decryption of C1
and the simulation constructed by D is identical to Game 4.
Hence,
(4)
|AdvGame 3(A) − AdvGame 4(A)| ≤ AdvCPLA2
PKE (D).
Game 4 and Game 5: Similar to Game 3 and Game 4.
PKE (D).
|AdvGame 4(A) − AdvGame 5(A)| ≤ AdvCPLA2
(5)
Game 5 and Game 6: We get We construct an algorithm C
against the DDH challenge, using the adversary A. The DDH
challenger sends values (gx, gy, gz) such that either z = xy
q , as the inputs to the algorithm C. If C’s input is a
or z $←− Z∗
Diﬃe-Hellman triple, simulation constructed by C is identical
to Game 5, otherwise it is identical to Game 6. If A can
distinguish whether gz = gxy or not, then C can answer the
DDH challenge. Note that EphemeralKeyReveal(U∗, V ∗, s∗)
or EphemeralKeyReveal(V ∗, U∗, t∗) is prohibited since the
adversary is allowed to corrupt both the owner and the
partner to the test session. Hence,
q,g
(C).
|AdvGame 5(A) − AdvGame 6(A)| ≤ AdvDDH
(6)
Game 6 and Game 7: We construct an algorithm B against
the security of the key derivation function KDF, using the
adversary A. B receives K such that K is computed using
the KDF or randomly chosen from the session key space. If
K is computed using the KDF, simulation constructed by B
is identical to Game 6, otherwise it is identical to Game 7.
If A can distinguish between Game 6 and Game 7, then B
can distinguish whether the value K is computed using KDF
or randomly chosen, and answer the security challenge on
key derivation function. Hence,
|AdvGame 6(A) − AdvGame 7(A)| ≤ AdvKDF(B).
(7)
from all other values, A does not have any advantage in
Game 7. Hence,
AdvGame 7(A) = 0
(8)
Using equations (1)–(8) we ﬁnd,
Adv(·)AFL-eCK
π
(A) ≤ N 2
P Ns
2(cid:0) + 2AdvCPLA2
(C) + AdvKDF(B)(cid:1).
PKE (D)
+AdvDDH
q,g
A.1.2 Adversary corrupts both the owner and part-
ner principals to the test session.
Game 1: Same as Game 1 in Case A.1.1. Game 2: Same
as Game 2 in Case A.1.1. Game 3: Same as Game 6 in Case
A.1.1. Game 4: Same as Game 7 in Case A.1.1. Hence,
Adv(·)AFL-eCK
A.1.3 Adversary corrupts the partner, but not the
(C) + AdvKDF(B)(cid:1).
2(cid:0)AdvDDH
(A) ≤ N 2
P Ns
q,g
π
owner to the test session.
Game 1: Same as Game 1 in Case A.1.1. Game 2: Same
as Game 2 in Case A.1.1. Game 3: Same as Game 3 in Case
A.1.1. Game 4: Same as Game 4 in Case A.1.1. Game 5:
Same as Game 6 in Case A.1.1. Game 6: Same as Game 7 in
Case A.1.1. In this case we ﬁnd that,
Adv(·)AFL-eCK
π
(A) ≤ N 2
P Ns
+AdvDDH
q,g
2(cid:0) + AdvCPLA2
(C) + AdvKDF(B)(cid:1).
PKE (D)
A.1.4 Adversary corrupts the owner, but not the
partner to the test session.
Game 1: Same as Game 1 in Case A.1.1. Game 2: Same
as Game 2 in Case A.1.1. Game 3: Same as Game 3 in Case
A.1.1. Game 4: Same as Game 5 in Case A.1.1. Game 5:
Same as Game 6 in Case A.1.1. Game 6: Same as Game 7 in
Case A.1.1. In this case we ﬁnd that,
Adv(·)AFL-eCK
π
(A) ≤ N 2
P Ns
+AdvDDH
q,g
2(cid:0) + AdvCPLA2
(C) + AdvKDF(B)(cid:1).
PKE (D)
A.2 No partner exists to the test session.
When the partner session does not exist, the owner of the
test session shares the session key with the active adversary.
In this situation adversary is not allowed to corrupt the
intended partner principal to the test session. Assume that
the adversary A asks a Send query to some fresh oracle, such
that it accepts, but the signature used in the query is not
generated by a legitimate party.
Game 1: Same as Game 1 in Case A.1.1. Game 2: Same as
Game 1 with the following exception: before A begins, the
Game 2 challenger guesses the identity, V ∗, of the partner
principal to the test session and if the guess in incorrect it
aborts the game. The probability of Game 2 to be aborted
due to incorrect guess of the partner principal to the test
session is 1 − 1
. Unless the incorrect guess happens, Game
2 is identical to Game1. The owner principal accepts the
message coming from the intended partner, because the owner
computes Vfy(vkV ∗ , XV ∗ , σV ∗ ) is “true”. But the principal
V ∗ is not corrupted and the message XV ∗ is not signed by
the principal V ∗, because of no partner. Hence,
(E).
(A) = NP AdvUFCMLA
Adv(·)AFL-eCK
N 2
P
SIG
π
Semantic security of the session key in Game 7: Since the ses-
sion key K of Πs∗
U∗,V ∗ is chosen randomly and independently
Combine Case A.1 and A.2 to obtain the relationship in
Theorem 1.
216