### Starvation Caused by Periodic Short TCP Flows in 3G Networks

#### Introduction
In this paper, we explore the vulnerability of the Proportional Fair (PF) algorithm used in 3G networks to malicious users. We demonstrate that such users can cause significant performance degradation, including jitter and spurious TCP timeouts, leading to a reduction in TCP goodput and an increase in flow completion times.

#### Performance Analysis
Figure 6 illustrates the starvation effect caused by periodic short TCP flows to AT2 on a long-lived TCP flow to AT1. The left panel shows the Round-Trip Time (RTT) over time, while the right panel displays the TCP sequence number over time.

**Figure 6: Starvation Effect**
- **Left Panel:** RTT over time.
- **Right Panel:** TCP sequence number over time.

#### Table 1: Performance Improvement with Preliminary Solution
| Scenario | AT1 (TCP)       | AT2             | Performance Metric | Improvement |
|----------|-----------------|-----------------|--------------------|-------------|
| I        | Long flow       | Periodic TCP download 50KB | Goodput           | 82.40%      |
| II       | Short flow 1MB  | Periodic UDP burst         | Completion time   | 28.10%      |
| III      | Short flow 500KB| Periodic UDP burst         | Completion time   | 26.64%      |
| IV       | Long flow       | Periodic UDP burst         | Goodput           | 8.03%       |

#### Discussion
The periodic TCP download from AT2, even at a low rate (921.6 Kbps), can cause significant starvation to AT1, especially during the slow start phase. Future work will focus on exploring the types of user behavior that can trigger starvation and determining their frequency in real-world scenarios.

#### Rectifying the Vulnerability
To address the vulnerability, the PF algorithm needs to be modified. A naive approach of stopping the update of \(A_t\) when an Access Terminal (AT) has no data to receive is not feasible because \(A_t\) must reflect the total number of active users and recent channel conditions. 

We propose a solution where two instances of PF are run:
1. One instance assumes all ATs always have data to receive.
2. The second instance governs actual slot allocation and resets its \(A_t\) values with those of the first instance whenever an idle AT begins to receive data.

#### Simulation Results
We use ns-2 simulations to evaluate our proposed solution across four scenarios, summarized in Table 1. In these simulations, AT2 acts as a malicious user in scenarios I, II, and III, and as a benign user causing AT1 to timeout in scenario IV. To simulate the accidental timeouts observed in Figure 6, we set the achievable data rate for AT2 to 300 Kbps.

**Table 1: Performance Improvement**
- **Scenario I:** 82.40% improvement in goodput.
- **Scenario II:** 28.10% improvement in completion time.
- **Scenario III:** 26.64% improvement in completion time.
- **Scenario IV:** 8.03% improvement in goodput.

Our solution is more robust to malicious behavior and virtually eliminates spurious timeouts introduced by PF.

#### Conclusions and Future Work
We have shown that the PF algorithm in 3G networks can be easily corrupted by malicious users, leading to severe performance degradation. Our preliminary solution addresses this vulnerability, and future work will include extending the study to scenarios with more than two ATs and a thorough exploration of alternative scheduling algorithms.

#### References
1. Telecommunications Industry Association. CDMA 2000: High Rate Packet Data Air Interface Specification (TIA-856-A), 2004.
2. S. Bali, S. Machiraju, H. Zang, and V. Frost. On the Performance Implications of Proportional Fairness (PF) in 3G Wireless Networks. Technical Report RR06-ATL-040624, Sprint ATL, 2006.
3. P. Bender, P. Black, M. Grob, R. Padovani, N. Sindhushayana, and A. Viterbi. CDMA/HDR: A Bandwidth-efficient High-speed Wireless Data Service for Nomadic Users. IEEE Communications Magazine, 38:70–77, July 2000.
4. S. Borst. User-level Performance of Channel-aware Scheduling Algorithms in Wireless Data Networks. In Proc. of IEEE INFOCOM, 2003.
5. Mun Choon Chan and Ramachandran Ramjee. Improving TCP/IP Performance over Third Generation Wireless Networks. In Proc. of IEEE INFOCOM, 2004.
6. Carl Harris. Windows 2000 TCP Performance Tuning Tips. http://rdweb.cns.vt.edu/public/notes/win2k-tcpip.htm.
7. A. Jalali, R. Padovani, and R. Pankaj. Data Throughput of CDMA-HDR: A High Efficiency-high Data Rate Personal Communication Wireless System. Proc. of IEEE Vehicular Technology Conference, 3:1854–1858, May 2000.
8. T. Klein, K. Leung, and H. Zheng. Enhanced Scheduling Algorithms for Improved TCP Performance in Wireless IP Networks. In Proc. of GLOBECOM, 2004.
9. A. Kuzmanovic and E.W. Knightly. Low-rate TCP-targeted Denial of Service Attacks: The Shrew vs. The mice and Elephants. In Proc. of SIGCOMM, 2003.
10. Shawn Ostermann. tcptrace, http://jarok.cs.ohiou.edu/software/tcptrace.
11. S. Shakkottai and A. Stolyar. Scheduling Algorithms for a Mixture of Real-time and Non-real-time Data in HDR. In Proc. of ITC-17, September 2001.
12. tcpdump. http://www.tcpdump.org.
13. P. Viswanath, D. Tse, and R. Laroia. Opportunistic Beamforming using Dumb Antennas. IEEE Transactions on Information Theory, 48:1277–1294, June 2002.
14. W. Wei, C. Zhang, H. Zang, J. Kurose, and D. Towsley. Inference and Evaluation of Split-Connection Approaches in Cellular Data Networks. In Proc. of PAM, 2006.