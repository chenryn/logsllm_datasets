system. In this example, CPU is 98.7% idle
o Line 4 “Mem” and line 5 “Swap” provides the memory
information. This is the same information from the free
command.
o The rest of the lines display all the active processes on the
system, sorted default by CPU usage (%CPU column). i.e the most
CPU intensive processes will be displayed on the top by default.
There are several command line options and interactive options available for
top commands. Let us review couple of essential options for top command.
How to identify the most memory intensive processes?
While the output of the top command displayed, press F, which will display
the following message and show all fields available for sorting, press n (which
is for sorting the processes by Memory) and press enter. This will display the
processes in the top output sorted by memory usage.
Current Sort Field: K for window 1:Def
Select sort field via field letter, type any other key to return
How to add additional fields (for e.g. CPU Time) to the top output?
114
Linux 101 Hacks www.thegeekstuff.com
While the top command is running, press f, which will display the following
message and show all fields available for display, press l, which will add the
CPU Time to the display columns in the top output.
Current Fields: AEHIOQTWKNMbcdfgjplrsuvyzX for window 1:Def
Toggle fields via field letter, type any other key to return
How to get the full path name and parameters of the running
processes?
While the top command is running, press c, which will display full pathname
of running processes as shown below in the command column. i.e Instead of
httpd, it displays /usr/local/apache2/bin/httpd.
PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND
11912 apache 15 0 31828 13m 3916 S 1 0.2 0:46.35
/usr/local/apache2/bin/httpd
How to view the individual CPUs in the top command?
While the top command is running, press 1 (number one), which will display
the performance data of the individual CPUs on that machine as shown
below.
top - 13:10:13 up 171 days, 20:21, 3 users, load average: 0.01, 0.05, 0.00
Tasks: 194 total, 1 running, 193 sleeping, 0 stopped, 0 zombie
Cpu0 : 10.2% us, 2.6% sy, 0.0% ni, 86.8% id, 0.3% wa, 0.0% hi, 0.0% si
Cpu1 : 9.6% us, 8.0% sy, 0.0% ni, 82.4% id, 0.0% wa, 0.0% hi, 0.0% si
Cpu2 : 1.3% us, 1.3% sy, 0.0% ni, 95.0% id, 2.3% wa, 0.0% hi, 0.0% si
Cpu3 : 0.0% us, 0.0% sy, 0.0% ni, 100.0% id, 0.0% wa, 0.0% hi, 0.0% si
115
Linux 101 Hacks www.thegeekstuff.com
Mem: 1034624k total, 1007420k used, 27204k free, 174540k buffers
Swap: 2031608k total, 0k used, 2031608k free, 615904k cached
Hack 91. Ps Command
ps command (process status) will display snapshot information of all active
processes.
Syntax: ps [options]
How to display all the processes running in the system?
Use "ps aux", as shown below.
# ps aux | more
USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND
root 1 0.0 0.0 2044 588 ? Ss Jun27
0:00 init [5]
apache 31186 0.0 1.6 23736 17556 ? S Jul26
0:40 /usr/local/apache2/bin/httpd
apache 31187 0.0 1.3 20640 14444 ? S Jul26
0:37 /usr/local/apache2/bin/httpd
You can also use "ps -ef | more", to get a similar output
Print the Process Tree
You can use either ps axuf or ps –ejH to display processes in a tree format.
The tree structure will help to visualize the process and it’s parent process
immediately. For clarity purpose, few columns have been cut-off in the
output below.
# ps axuf
116
Linux 101 Hacks www.thegeekstuff.com
root Oct14 0:00 /opt/VRTSralus/bin/beremote
root Oct14 0:00 \_ /opt/VRTSralus/bin/beremote
root Oct14 0:00 \_ /opt/VRTSralus/bin/beremote
root Oct14 0:00 \_ /opt/VRTSralus/bin/beremote
root Oct14 0:01 \_ /opt/VRTSralus/bin/beremote
root Oct 14 0:00 \_ /opt/VRTSralus/bin/beremote
root Dec03 0:01 /usr/local/sbin/sshd
root Dec22 1:08 /usr/local/sbin/sshd
root 23:35 0:00 \_ /usr/local/sbin/sshd
511 23:35 0:00 \_ -bash
511 \_ ps axuf
Note: You can also use pstree command to display process in tree structure.
View Processes Owned by a Particular User
The following command displays all the process owned by Linux user-name:
oracle.
$ ps U oracle
PID TTY STAT TIME COMMAND
5014 ? Ss 0:01 /oracle/bin/tnslsnr
7124 ? Ss 0:00 ora_q002_med
8206 ? Ss 0:00 ora_cjq0_med
8852 ? Ss 0:01 ora_pmon_med
8854 ? Ss 0:00 ora_psp0_med
8911 ? Ss 0:02 oraclemed (LOCAL=NO)
View Processes Owned by Current User
Following command displays all the process owned by the current user.
$ ps U $USER
PID TTY STAT TIME COMMAND
10329 ? S 0:00 sshd: ramesh@pts/1,pts/2
10330 pts/1 Ss 0:00 -bash
117
Linux 101 Hacks www.thegeekstuff.com
10354 pts/2 Ss+ 0:00 -bash
10530 pts/1 R+ 0:00 ps U ramesh
Hack 92. Df Command
df command (disk free) displays the amount of total and free disk space
available on the mounted filesystems.
Syntax: df [options] [name]
How much GB of disk space is free on my system?
Use df -h as shown below. Option -h displays the values in human readable
format (for example: K for Kb, M for Mb and G for Gb). In the sample output
below, / filesystem has 17GB of disk space available and /home/user
filesystem has 70GB available.
# df –h
Filesystem Size Used Avail Use% Mounted on
/dev/sda1 64G 44G 17G 73% /
/dev/sdb1 137G 67G 70G 49% /home/user
What type of filesystem do I have on my system?
Option -T will display the information about the filesystem Type. In this
example / and /home/user filesystems are ext2. Option -a will display all the
filesystems, including the 0 size special filesystem used by the system.
# df -Tha
Filesystem Type Size Used Avail Use% Mounted on
118
Linux 101 Hacks www.thegeekstuff.com
/dev/sda1 ext2 64G 44G 17G 73% /
/dev/sdb1 ext2 137G 67G 70G 49% /home/user
none proc 0 0 0 - /proc
none sysfs 0 0 0 - /sys
none devpts 0 0 0 - /dev/pts
none tmpfs 2.0G 0 2.0G 0% /dev/shm
Hack 93. Kill Command
kill command can be used to terminate a running process. Typically this
command is used to kill processes that are hanging and not responding.
Syntax: kill [options] [pids|commands]
How to kill a hanging process?
First, identify the process id of the particular process that you would like to
kill using the ps command. Once you know the process id, pass it as a
parameter to the kill command. The example below shows how to kill the
hanging apache httpd process. Please note that typically you should use
“apachectl stop” to stop apache.
# ps aux | grep httpd
USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND
apache 31186 0.0 1.6 23736 17556 ? S Jul26
0:40 /usr/local/apache2/bin/httpd
apache 31187 0.0 1.3 20640 14444 ? S Jul26
0:37 /usr/local/apache2/bin/httpd
# kill 31186 31187
119
Linux 101 Hacks www.thegeekstuff.com
Please note that the above command tries to terminate the process graciously
by sending a signal called SIGTERM. If the process does not get terminated,
you can forcefully terminate the process by passing a signal called SIGKILL,
using the option -9 as shown below. You should either be the owner of the
process or a privileged user to kill a process.
# kill -9 31186 31187
Another way to kill multiple processes easily is by adding the following two
functions to the .bash_profile.
function psgrep ()
{
ps aux | grep "$1" | grep -v 'grep'
}
function psterm ()
{
[ ${#} -eq 0 ] && echo "usage: $FUNCNAME STRING" && return 0
local pid
pid=$(ps ax | grep "$1" | grep -v grep | awk '{ print $1 }')
echo -e "terminating '$1' / process(es):\n$pid"
kill -SIGTERM $pid
}
Now do the following, to identify and kill all httpd processes.
# psgrep http
USER PID %CPU %MEM VSZ RSS TTY STAT START TIME
COMMAND
apache 31186 0.0 1.6 23736 17556 ? S
Jul26 0:40 /usr/local/apache2/bin/httpd
apache 31187 0.0 1.3 20640 14444 ? S
Jul26 0:37 /usr/local/apache2/bin/httpd
# psterm httpd
terminating 'httpd' / process(es):
31186
120
Linux 101 Hacks www.thegeekstuff.com
31187
Hack 94. Du Command
du command (disk usage) will print the file space usage for a particular
directory and its subdirectories.
How much space is taken by my home directory and all its
subdirectories?
In the following example, option -s stands for summary only. i.e it displays
only the total size of /home/jsmith and not the individual sizes of all the
subdirectories inside the /home/jsmith. Option -h displays the information in
a human readable format. i.e K for KB, M for MB and G for GB. The ~
indicates the user home directory. This command is same as “du -sh
/home/jsmith”
# du -sh ~
320M /home/jsmith
To get the subdirectories under /home/jsmith listed, execute the above
command without the s option.
Hack 95. lsof commands.
Lsof stands for ls open files, which will list all the open files in the system.
The open files include network connection, devices and directories. The
output of the lsof command will have the following columns:
o COMMAND process name.
o PID process ID
o USER Username
121
Linux 101 Hacks www.thegeekstuff.com
o FD file descriptor
o TYPE node type of the file
o DEVICE device number
o SIZE file size
o NODE node number
o NAME full path of the file name.
View all open files of the system
Execute the lsof command without any parameter as shown below.
# lsof | more
COMMAND PID USER FD TYPE DEVICE SIZE NODE
NAME
init 1 root cwd DIR 8,1 4096 2 /
init 1 root rtd DIR 8,1 4096 2 /
init 1 root txt REG 8,1 32684 983101 /sbin/init
init 1 root mem REG 8,1 106397 166798 /lib/ld-
2.3.4.so
init 1 root mem REG 8,1 1454802 166799
/lib/tls/libc-2.3.4.so
init 1 root mem REG 8,1 53736 163964
/lib/libsepol.so.1
init 1 root mem REG 8,1 56328 166811
/lib/libselinux.so.1
init 1 root 10u FIFO 0,13 972 /dev/initctl
migration 2 root cwd DIR 8,1 4096 2 /
skipped…
The lsof command by itself without may return lot of records as output,
which may not be very meaningful except to give you a rough idea about how
122
Linux 101 Hacks www.thegeekstuff.com
many files are open in the system at any given point of view as shown below.
# lsof | wc -l
3093
View open files by a specific user
Use lsof –u option to display all the files opened by a specific user.
# lsof –u ramesh
vi 7190 ramesh txt REG 8,1 474608
475196 /bin/vi
sshd 7163 ramesh 3u IPv6 15088263
TCP dev-db:ssh->abc-12-12-12-12.socal.res.rr.com:2631
(ESTABLISHED)
A system administrator can use this command to get some idea on what users
are executing on the system.
List Users of a particular file
If you like to view all the users who are using a particular file, use lsof as
shown below. In this example, it displays all users who are currently using vi.
# lsof /bin/vi
COMMAND PID USER FD TYPE DEVICE SIZE NODE NAME
vi 7258 root txt REG 8,1 474608 475196 /bin/vi
vi 7300 ramesh txt REG 8,1 474608 475196 /bin/vi
123
Linux 101 Hacks www.thegeekstuff.com
Hack 96. Sar Command
Sar commands comes with the sysstat package. Make sure sysstat is installed.
If you don’t have sar installed on your system, get it from Sysstat project.
Sar is an excellent monitoring tool that displays performance data of pretty
much every resource of the system including CPU, memory, IO, paging,
networking, interrupts etc.,
Sar Collects, Reports (displays) and Saves the performance data. Let us look
at all the three aspects separately
Sadc - System activity data collector
/usr/lib/sadc (System activity data collector) command collects the system
data at a specified time interval. This uses the daily activity data file that is
located under /va/log/sa/sa[dd], where dd is the current day.
Sa1 shell-script
/usr/lib/sa1 in-turn calls the /usr/lib/sadcs. sa1 is invoked from the crontab
as shown below. Run this every 5 minutes or 15 minutes depending on your
need. I prefer to schedule it for every 5 minutes in the cron tab as shown
below.
*/5 * * * * root /usr/lib/sa/sa1 1 1
Sa2 shell-script
/usr/lib/sa2 is a shell script that will write a daily report in the
/var/log/sa/sa[dd] file, where dd is the current day. Invoke the sa2 from the
crontab once a day at midnight.
# 59 23 * * * root /usr/lib/sa/sa2 –A
124
Linux 101 Hacks www.thegeekstuff.com
Note: /etc/cron.d/sysstat files comes with the sysstat package that includes
some default value for the sa1 and sa2, which you can change accordingly.
Display CPU Statistics using Sar Command
# sar –u
Linux 2.6.9-42.ELsmp (dev-db) 01/01/2009
12:00:01 AM CPU %user %nice %system %iowait %idle
12:05:01 AM all 3.70 0.00 0.85 0.00 95.45
12:10:01 AM all 4.59 0.00 1.19 0.06 94.16
12:15:01 AM all 3.90 0.00 0.95 0.04 95.11
12:20:01 AM all 4.06 0.00 1.00 0.01 94.93
12:25:01 AM all 3.89 0.00 0.87 0.00 95.23
12:30:01 AM all 3.89 0.00 0.87 0.00 95.23
Skipped..
Average: all 4.56 0.00 1.00 0.15 94.29
Note: If you need a break down of the performance data for the individual
CPU’s, execute the following command.
# sar -u -P ALL
Display Disk IO Statistics using sar command
# sar –d
Linux 2.6.9-42.ELsmp (dev-db) 01/01/2009
12:00:01 AM DEV tps rd_sec/s wr_sec/s
12:05:01 AM dev2-0 1.65 1.28 45.43
12:10:01 AM dev8-1 4.08 8.11 21.81
Skipped..
Average: dev2-0 4.66 120.77 69.45
Average: dev8-1 1.89 3.17 8.02
125
Linux 101 Hacks www.thegeekstuff.com
Display networking Statistics using sar command
# sar -n DEV | more
Linux 2.6.9-42.ELsmp (dev-db) 01/01/2009
12:00:01 AM IFACE rxpck/s txpck/s rxbyt/s txbyt/s
rxcmp/s txcmp/
s rxmcst/s
12:05:01 AM lo 0.17 0.16 25.31 23.33
0.00 0.0
0 0.00
12:10:01 AM eth0 52.92 53.64 10169.74 12178.57
0.00 0.0
0 0.00
# sar -n SOCK |more
Linux 2.6.9-42.ELsmp (dev-db) 01/01/2009
12:00:01 AM totsck tcpsck udpsck rawsck ip-frag
12:05:01 AM 50 13 3 0 0
12:10:01 AM 50 13 4 0 0
12:15:01 AM 53 13 5 0 0
Hack 97. vmstat Command
For a typical performance monitoring all you need is only vmstat command.
This display memory, swap, IO, system and cpu performance information.
The following command executes vmstat every 1 second for 100 times.
# vmstat 1 100
procs -----------memory---------- ---swap-- -----io---- --system-- ----cpu----
r b swpd free buff cache si so bi bo in cs us sy id wa
0 0 0 282120 134108 5797012 0 0 0 2 0 0 0 0 100 0
0 0 0 282120 134108 5797012 0 0 0 0 1007 359 0 0 100 0
126
Linux 101 Hacks www.thegeekstuff.com
0 0 0 282120 134108 5797012 0 0 0 0 1117 577 0 0 100 0
0 0 0 282120 134108 5797012 0 0 0 0 1007 366 0 0 100 0
Vmstat procs Section
o r field: Total number of runnable process
o b field: Total number of blocked process
Memory section
o Swpd field: Used swap space
o Free field: Available free RAM
o Buff field: RAM used for buffers
o Cache field: RAM used for filesystem cache
Swap Section
o Si field: Amount of memory swapped from disk per second
o So field: Amount of memory swapped to disk per second
IO Section
o Bi field: Blocks received from disk
o Bo field: Blocks sent to disk.
System Section
o In field: Number of interrupts per second.
o Cs field: Number of context switches per second.
127