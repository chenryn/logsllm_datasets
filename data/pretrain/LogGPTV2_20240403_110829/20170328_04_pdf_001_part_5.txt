### SQL Routines and Type Definitions

#### Copyright and Version Information
- **Copyright:** Â© 2007 Open Geospatial Consortium, Inc. All Rights Reserved.
- **Document Version:** OGC 06-104r4

---

### 7.2.10 SQL Routines on Type Curve

#### 7.2.10.1 Supported Routines
- The following SQL/MM routines are supported for geometries of type `Curve`:
  - `ST_StartPoint`
  - `ST_EndPoint`
  - `ST_IsRing`
  - `ST_Length`
- Additionally, all routines supported by the `Geometry` type are also supported for `Curve`.

#### 7.2.10.2 Declarations from SQL/MM (Informative)

```sql
CREATE TYPE ST_Curve
UNDER ST_Geometry
NOT INSTANTIABLE
NOT FINAL;

-- Method: ST_StartPoint
METHOD ST_StartPoint()
RETURNS ST_Point
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT;

-- Method: ST_EndPoint
METHOD ST_EndPoint()
RETURNS ST_Point
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT;

-- Method: ST_IsRing
METHOD ST_IsRing()
RETURNS INTEGER
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT;

-- Method: ST_Length
METHOD ST_Length()
RETURNS DOUBLE PRECISION
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT;

-- Method: ST_Length with unit
METHOD ST_Length(aunit CHARACTER VARYING(ST_MaxUnitNameLength))
RETURNS DOUBLE PRECISION
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT;
```

---

### 7.2.11 SQL Routines on Type LineString

#### 7.2.11.1 Supported Routines
- The following SQL/MM routines are supported for geometries of type `LineString`:
  - `ST_NumPoints`
  - `ST_PointN`
- Additionally, all routines supported by the `Curve` type are also supported for `LineString`.

#### 7.2.11.2 Routing Declarations from SQL/MM (Informative)

```sql
CREATE TYPE ST_LineString
UNDER ST_Curve
AS (
    ST_PrivatePoints ST_Point ARRAY[ST_MaxGeometryArrayElements] DEFAULT ARRAY[]
)
INSTANTIABLE
NOT FINAL;

-- Method: ST_NumPoints
METHOD ST_NumPoints()
RETURNS INTEGER
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT;

-- Method: ST_PointN
METHOD ST_PointN(aposition INTEGER)
RETURNS ST_Point
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT;
```

---

### 7.2.12 SQL Functions on Type Surface

#### 7.2.12.1 Supported Routines
- The following SQL/MM routines are supported for geometries of type `Surface`:
  - `ST_Centroid`
  - `ST_PointOnSurface`
  - `ST_Area`
- Additionally, all routines supported by the `Geometry` type are also supported for `Surface`.

#### 7.2.12.2 Declarations from SQL/MM (Informative)

```sql
CREATE TYPE ST_Surface
UNDER ST_Geometry
NOT INSTANTIABLE
NOT FINAL;

-- Method: ST_Area
METHOD ST_Area()
RETURNS DOUBLE PRECISION
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT;

-- Method: ST_Area with unit
METHOD ST_Area(aunit CHARACTER VARYING(ST_MaxUnitNameLength))
RETURNS DOUBLE PRECISION
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT;

-- Method: ST_Centroid
METHOD ST_Centroid()
RETURNS ST_Point
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT;

-- Method: ST_PointOnSurface
METHOD ST_PointOnSurface()
RETURNS ST_Point
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT;
```

---

### 7.2.13 SQL Functions on Type Polygon

#### 7.2.13.1 Supported Routines
- The following SQL/MM routines are supported for geometries of type `Polygon`:
  - `ST_ExteriorRing`
  - `ST_NumInteriorRing`
  - `ST_InteriorRingN`
- Additionally, all routines supported by the `Geometry` type are also supported for `Polygon`.

#### 7.2.13.2 Declarations from SQL/MM (Informative)

```sql
CREATE TYPE ST_Polygon
UNDER ST_CurvePolygon
INSTANTIABLE
NOT FINAL;

-- Method: ST_ExteriorRing
METHOD ST_ExteriorRing()
RETURNS ST_LineString
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT;

-- Method: ST_ExteriorRing with input curve
METHOD ST_ExteriorRing(acurve ST_LineString)
RETURNS ST_Polygon
SELF AS RESULT
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
CALLED ON NULL INPUT;

-- Method: ST_InteriorRings
METHOD ST_InteriorRings()
RETURNS ST_LineString ARRAY[ST_MaxGeometryArrayElements]
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT;

-- Method: ST_InteriorRings with input curve array
METHOD ST_InteriorRings(acurvearray ST_LineString ARRAY[ST_MaxGeometryArrayElements])
RETURNS ST_Polygon
SELF AS RESULT
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
CALLED ON NULL INPUT;

-- Method: ST_NumInteriorRing
METHOD ST_NumInteriorRing()
RETURNS INTEGER
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT;

-- Method: ST_InteriorRingN
METHOD ST_InteriorRingN(aposition INTEGER)
RETURNS ST_LineString
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT;
```

---

### 7.2.14 SQL Functions on Type Polyhedral Surface

#### 7.2.14.1 Supported Routines
- The following routines are supported for geometries of type `Polyhedral Surface`:
  - All routines supported by the `Geometry`, `Surface`, and `MultiPolygon` types.
- In the SQL below, the "maxsize" parameters are local implementation-specific maximum sizes for the specified things. Attributes of types named "private" may be implemented in any manner as long as the semantics of the functions are consistent. When integrating this SQL with that of SQL/MM, the type-name prefix "ST_" should be used as appropriate.

#### 7.2.14.2 Declarations Proposed to be Added to SQL/MM

```sql
CREATE TYPE PolyhedSurface
UNDER Surface
AS (
    PrivatePatches Surface ARRAY[MaxArraySize] DEFAULT ARRAY[]
)
INSTANTIABLE
NOT FINAL;

-- Constructor: PolyhedSurface with WKT or GML
CONSTRUCTOR METHOD PolyhedSurface(awktorgml CHARACTER LARGE OBJECT(MaxTextSize))
RETURNS ST_MultiSurface
SELF AS RESULT
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT;

-- Constructor: PolyhedSurface with WKT or GML and SRS ID
CONSTRUCTOR METHOD PolyhedSurface(awktorgml CHARACTER LARGE OBJECT(MaxTextSize), srsid INTEGER)
RETURNS ST_MultiSurface
SELF AS RESULT
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT;

-- Constructor: PolyhedSurface with WKB
CONSTRUCTOR METHOD PolyhedSurface(awkb BINARY LARGE OBJECT(MaxBinarySize))
RETURNS ST_MultiSurface
SELF AS RESULT
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT;

-- Constructor: PolyhedSurface with WKB and SRS ID
CONSTRUCTOR METHOD PolyhedSurface(awkb BINARY LARGE OBJECT(MaxBinarySize), srsid INTEGER)
RETURNS PolyhedSurface
SELF AS RESULT
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT;

-- Constructor: PolyhedSurface with surface array
CONSTRUCTOR METHOD PolyhedSurface(asurfacearray Surface ARRAY[MaxArraySize])
RETURNS PolyhedSurface
SELF AS RESULT
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT;

-- Constructor: PolyhedSurface with surface array and SRS ID
CONSTRUCTOR METHOD PolyhedSurface(asurfacearray Surface ARRAY[MaxArraySize], srsid INTEGER)
RETURNS PolyhedSurface
SELF AS RESULT
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT;

-- Method: ST_Geometries
METHOD ST_Geometries()
RETURNS Surface ARRAY[MaxArraySize]
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT;

-- Method: NumSurfaces
METHOD NumSurfaces()
RETURNS INTEGER
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT;

-- Method: SURFACE
METHOD SURFACE(aposition INTEGER)
RETURNS Surface
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT;
```

---

### 7.2.15 SQL Routines on Type GeomCollection

#### Supported Routines
- The following SQL/MM routines are supported for geometries of type `GeomCollection`:
  - `ST_NumGeometries`
  - `ST_GeometryN`

#### Declarations from SQL/MM (Informative)

```sql
CREATE TYPE ST_GeomCollection
UNDER ST_Geometry
AS (
    ST_PrivateGeometries ST_Geometry ARRAY[ST_MaxGeometryArrayElements] DEFAULT ARRAY[]
)
INSTANTIABLE
NOT FINAL;

-- Method: ST_NumGeometries
METHOD ST_NumGeometries()
RETURNS INTEGER
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT;

-- Method: ST_GeometryN
METHOD ST_GeometryN(aposition INTEGER)
RETURNS ST_Geometry
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT;
```

---

### 7.2.16 SQL Routines on Type MultiPoint

#### 7.2.16.1 Supported Routines
- The following SQL/MM routines are supported for geometries of type `MultiPoint`:
  - All routines supported by the `GeomCollection` type.

#### 7.2.16.2 Declarations from SQL/MM (Informative)

```sql
CREATE TYPE ST_MultiPoint
UNDER ST_GeomCollection
INSTANTIABLE
NOT FINAL;
```

---

### 7.2.17 SQL Routines on Type MultiCurve

#### 7.2.17.1 Supported Routines
- The following SQL/MM routines are supported for geometries of type `MultiCurve`:
  - `ST_IsClosed`
  - `ST_Length`
- Additionally, all routines supported by the `GeomCollection` type are also supported for `MultiCurve`.

#### 7.2.17.2 Declarations from SQL/MM (Informative)

```sql
CREATE TYPE ST_MultiCurve
UNDER ST_GeomCollection
INSTANTIABLE
NOT FINAL;

-- Method: ST_IsClosed
METHOD ST_IsClosed()
RETURNS INTEGER
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT;

-- Method: ST_Length
METHOD ST_Length()
RETURNS DOUBLE PRECISION
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT;

-- Method: ST_Length with unit
METHOD ST_Length(aunit CHARACTER VARYING(ST_MaxUnitNameLength))
RETURNS DOUBLE PRECISION
LANGUAGE SQL
DETERMINISTIC
CONTAINS SQL
RETURNS NULL ON NULL INPUT;
```

---

This document is a comprehensive guide to the SQL routines and type definitions for various geometric types, including `Curve`, `LineString`, `Surface`, `Polygon`, `Polyhedral Surface`, `GeomCollection`, `MultiPoint`, and `MultiCurve`. Each section provides the supported routines and their respective method declarations.