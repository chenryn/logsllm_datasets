## Page 202
图10-57展示了FlrRese、PRocestor和ewues等组件。在`include/defines.inc.php`文件中，可以找到全局变量的配置位置。默认情况下，该文件的内容如下：

```php
define('ZABBIX_API_VERSION', '2.2.0');
define('ZABBIX_VERSION', '2.2.0');
```

### 10.6 配置文件
安装完成后，通常不需要修改`zabbix.conf.php`文件。如果需要更改前端设置（例如，后端Zabbix数据库发生变更），则只需编辑`php`目录下的相应文件。

#### 10.6.1 全局配置参数
以下是部分重要的全局配置参数：
- **ZBX_PERIOD_DEFAULT**：Graph中显示的时间跨度，默认为1小时。
- **ZBX_MIN_PERIOD**：Graph中显示时间的最短跨度，即滑块的最小值。

Zabbix前端是使用PHP开发的，相关配置参数存储在配置文件中。通过这些配置，您可以了解如何进行必要的调整。

---

## Page 203

### 10.6.1 全局配置参数（续）
- **ZBX_MAX_PERIOD**：Graph中显示时间的最长跨度，默认为-1。
- **GRAPH_YAXIS_SIDE_DEFAULT**：Graph中Y轴的位置，默认为左侧（0）。
- **ZBX_HISTORY_DATA_UPKEEP**：根据“keep in history”设置决定从哪个表获取数据。
  - 小于0：根据Item的“keep in history”设置选择history表或trends表。
  - 等于0：仅从trends表中获取数据。
  - 大于0：忽略“keep in history”设置，使用这里的设置。
- **ZBX_UNITS_ROUNDOFF_THRESHOLD**：用于选择使用`ZBX_UNITS_ROUNDOFF_UPPER_LIMIT`或`ZBX_UNITS_ROUNDOFF_LOWER_LIMIT`的阈值，默认为0.01。
- **DEFAULT_LATEST_ISSUES_CNT**：Dashboard板块中的Last n issues栏目中显示的n，默认为30。
- **SCREEN_REFRESH_TIMEOUT**：Screen刷新数据时的超时时间，默认为30秒。
- **SCREEN_REFRESH_RESPONSIVENESS**：由于screen在刷新数据时是一个一个发送请求，为了避免一个查询超时而堵塞其他查询，此参数针对每个查询设置了超时时间，默认为10秒。

---

## Page 204

### 10.6.2 前端维护状态显示
当Zabbix需要维护时，可以通过以下步骤在前端提示用户：
1. 在前端目录下的`conf/maintenance.inc.php`文件中进行配置。
2. 设置`ZBX_DENY_GU_ACCESS`为1以显示Zabbix维护信息。
3. 使用`$ZBX_GUI_ACCESS_IP_RANGE`指定允许访问Zabbix前端的IP范围。
4. 设置`warming_msg`为维护期间显示的消息内容。

示例代码：
```php
$_REQUEST['warning_msg'] = 'We are upgrading MySQL database till 15:00. Stay tuned.';
$ZBX_GUI_ACCESS_IP_RANGE = array('127.0.0.1');
```

---

## Page 205

### 10.6.3 用户Profile设置
用户可以在Zabbix前端右上角点击“Profile”按钮进入个人设置界面。这些设置仅对当前用户生效，包括以下选项：
- **Messaging**：设置报警声音播放方式（Once, 10 seconds, Message timeout）。
- **Auto-logout**：设置自动登出时间，默认90分钟。
- **Refresh**：设置页面刷新间隔，默认30秒。
- **Theme**：选择主题样式。
- **Language**：选择语言，默认为系统默认。

示例界面如图10-61所示。

---

## Page 206

### 10.7 全局搜索框
Zabbix前端右上角的全局搜索框支持多种搜索方式，包括Host、Hosts group和Template。搜索结果会根据权限不同进行展示。搜索框还提供Snooze、Mute/Unmute和Clear按钮，用于管理报警。

---

## Page 208

### 11.1 Discovery概述
Discovery功能可以帮助自动化添加监控。通过给定IP范围，Zabbix可以检查是否存在特定服务，并根据检查结果触发Action。例如，在192.168.0.1-255范围内检查FTP服务，发现后将其加入到特定Host group并开始监控。

### 11.2 Discovery的一个例子
首先配置Discovery rule，然后配置发现后的动作。具体步骤如下：
1. 创建新的Discovery rule，指定IP范围和检查类型。
2. 配置发现后的Action，如添加Host到特定Host group、发送通知等。

示例配置界面如图11-1所示。

希望这些优化使文档更加清晰和专业。如果有更多细节需要调整，请告知！