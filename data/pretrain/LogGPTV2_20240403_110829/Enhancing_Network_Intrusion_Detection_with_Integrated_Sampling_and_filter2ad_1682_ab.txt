**Simon P. Chung, Aloysius K. Mok**

**Thwarting Signature Learning by Training Maliciously...**
- **Authors:** James Newsome, Brad Karp, Dawn Song
- **Pages:** 19-41

**System Evaluation and Threat Assessment**
- **Anomaly Detector Performance Evaluation Using a Parameterized Environment...**
  - **Authors:** Jeffery P. Hansen, Kymie M.C. Tan, Roy A. Maxion
  - **Pages:** 61-81

- **Ranking Attack Graphs...**
  - **Authors:** Vaibhav Mehta, Constantinos Bartzis, Haifeng Zhu, Edmund Clarke, Jeannette Wing
  - **Pages:** 81-127

- **Using Hidden Markov Models to Evaluate the Risks of Intrusions...**
  - **Authors:** André Årnes, Fredrik Valeur, Giovanni Vigna, Richard A. Kemmerer
  - **Pages:** 127-145

**Malware Collection and Analysis**
- **The Nepenthes Platform: An Efficient Approach to Collect Malware...**
  - **Authors:** Paul Baecher, Markus Koetter, Thorsten Holz, Maximillian Dornseif, Felix Freiling
  - **Pages:** 145-165

- **Automatic Handling of Protocol Dependencies and Reaction to 0-Day Attacks with ScriptGen Based Honeypots...**
  - **Authors:** Corrado Leita, Marc Dacier, Frederic Massicotte
  - **Pages:** 165-185

- **Fast and Evasive Attacks: Highlighting the Challenges Ahead...**
  - **Authors:** Moheeb Abu Rajab, Fabian Monrose, Andreas Terzis
  - **Pages:** 185-206

**Anomaly- and Specification-Based Detection**
- **Anagram: A Content Anomaly Detector Resistant to Mimicry Attack...**
  - **Authors:** Ke Wang, Janak J. Parekh, Salvatore J. Stolfo
  - **Pages:** 206-226

- **DEMEM: Distributed Evidence-Driven Message Exchange Intrusion Detection Model for MANET...**
  - **Authors:** Chinyang Henry Tseng, Shiau-Huey Wang, Calvin Ko, Karl Levitt
  - **Pages:** 226-249

**Network Intrusion Detection**
- **Enhancing Network Intrusion Detection with Integrated Sampling and Filtering...**
  - **Authors:** Jose M. Gonzalez, Vern Paxson
  - **Pages:** 249-272

- **WIND: Workload-Aware INtrusion Detection...**
  - **Authors:** Sushant Sinha, Farnam Jahanian, Jignesh M. Patel
  - **Pages:** 272-290

- **SafeCard: A Gigabit IPS on the Network Card...**
  - **Authors:** Willem de Bruijn, Asia Slowinska, Kees van Reeuwijk, Tomas Hruby, Li Xu, Herbert Bos
  - **Pages:** 290-311

**Author Index...**
- **Pages:** 311-331

---

**A Framework for the Application of Association Rule Mining in Large Intrusion Detection Infrastructures**
- **Authors:** James J. Treinen (IBM Global Services, Boulder, CO 80301, USA) and Ramakrishna Thurimella (University of Denver, Denver, CO 80208, USA)
- **Emails:** PI:EMAIL, PI:EMAIL

**Abstract:**
The high number of false positive alarms generated in large intrusion detection infrastructures makes it challenging for operations staff to distinguish between false alerts and real attacks. One approach to reduce this problem is the use of meta-alarms or rules that identify known attack patterns in alarm streams. However, the rule base may not be comprehensive, especially for new attack profiles. Currently, discovering new rules manually is both costly and error-prone. We present a novel approach using association rule mining to shorten the time from the appearance of a new attack profile in the data to its definition as a rule in the production monitoring infrastructure.

**Keywords:** Association Rules, Data Mining, Intrusion Detection, Graph Algorithms

### 1. Introduction
Attempts to compromise networked computing resources generally consist of multiple steps, including reconnaissance, exploitation, and the installation of backdoor channels. If an intrusion detection infrastructure is in place, each action by the attacker can raise an alarm, but these alarms are often false positives. This makes it difficult for security staff to separate real attacks from false alarms. Deploying an inaccurate IDS can lead to reduced vigilance and increased operational costs. In large monitoring infrastructures, the number of managed sensors can reach into the thousands, generating millions of alerts per day.

Our experiments were conducted in a large Managed Security Service Provider (MSSP) environment with approximately 1000 IDS sensors across 135 distinct customer networks. The sensor technologies used represented multiple vendors and versions. The alarm logs were consolidated at a Security Operations Center (SOC) using a third-party Enterprise Security Manager (ESM) that monitors incoming alarm streams and matches them against predefined meta-rules. Keeping the rule base current in such a dynamic environment is challenging. Our framework aims to reduce the labor required to keep the rules current and significantly decrease the time from the appearance of a new attack profile to the implementation of the corresponding rule.

### 2. Related Work
Many data mining techniques have been applied to intrusion detection, focusing on system audit data and raw network traffic to build more accurate IDS devices. Data mining has also been used to classify alarms and perform root cause analysis. The effectiveness of data mining depends on its integration into a broader Knowledge Discovery in Databases (KDD) process, which includes understanding the application domain, data integration and selection, data mining, pattern evaluation, and knowledge presentation.

### 3. Preliminaries

#### 3.1 Experimental Environment
Figure 1 describes our data mining architecture. As alarms arrive at the SOC, they are temporarily stored in a database on the monitoring engine. From this database, we extracted all alarms generated in a single day for all networks and loaded them into a data warehouse. We executed data mining algorithms on this warehouse to generate new monitoring rules for the ESM.

![Association Rules Data Mining Architecture](figure1.png)

#### 3.2 Data Mining Terminology
We employ association rule mining, using DB2 Intelligent Miner for Modeling v8.2. The goal is to find non-obvious interrelationships between attack signatures and IP addresses, capturing them as rules in the ESM. An example rule is:

\[ [x][y] \rightarrow [z] \]
- **Support = 50%**: This specific grouping represents 50% of the transactions.
- **Confidence = 80%**: 80% of the time that x and y are found together, z is also found.

Formally, let \( I = \{i_1, i_2, ..., i_n\} \) be a set of items. Given a set of transactions \( D \), where each transaction is a set of items \( T \subseteq I \), a transaction \( T \) contains \( X \) if \( X \subseteq T \). An association rule is an implication \( X \Rightarrow Y \), where \( X \subset I \), \( Y \subset I \), and \( X \cap Y = \emptyset \). The rule \( X \Rightarrow Y \) holds in \( D \) with confidence \( c \) if \( c \) percent of transactions in \( D \) containing \( X \) also contain \( Y \). The rule \( X \Rightarrow Y \) has support \( s \) in \( D \) if \( s \) percent of transactions in \( D \) contain \( X \cup Y \).

In our results, support values are typically less than 5% due to the large number of signatures in the monitoring infrastructure.

#### 3.3 Modeling Alarms as Directed Graphs
To filter the number of alarms, we generated a directed graph \( G = (V, E) \) where each IP address is a vertex, and each edge represents a potential attack direction. This helps in reducing the number of alarms to be analyzed.

| Network ID | Source IP   | Destination IP | Signature  |
|------------|-------------|----------------|------------|
| Network A  | 10.0.0.1    | 10.0.0.4       | Signature 1|
| Network A  | 10.0.0.2    | 10.0.0.4       | Signature 1|
| Network A  | 10.0.0.3    | 10.0.0.4       | Signature 2|
| Network A  | 10.0.0.5    | 10.0.0.7       | Signature 2|
| Network A  | 10.0.0.6    | 10.0.0.7       | Signature 2|
| Network A  | 10.0.0.7    | 10.0.0.8       | Signature 2|
| Network A  | 10.0.0.9    | 10.0.0.13      | Signature 2|
| Network A  | 10.0.0.10   | 10.0.0.13      | Signature 2|
| Network A  | 10.0.0.11   | 10.0.0.13      | Signature 2|
| Network A  | 10.0.0.12   | 10.0.0.13      | Signature 2|

### 4. Approach
Our approach includes a novel alarm filtering technique. By modeling alarms as directed graphs, we can reduce the number of alarms to be analyzed. This allows us to focus on the most relevant data, improving the efficiency and accuracy of the association rule mining process.

### 5. Results
Our results show that the framework can detect new attack patterns and generate corresponding rules for the ESM. We provide examples of attack activity and the resulting rules.

### 6. Conclusion
The use of association rule mining in large intrusion detection infrastructures can significantly reduce the time and cost associated with maintaining the rule base. Our framework demonstrates the feasibility and effectiveness of this approach.