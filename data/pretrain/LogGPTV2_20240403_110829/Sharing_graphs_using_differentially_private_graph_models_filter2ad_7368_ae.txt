h
a
P
e
g
a
r
e
v
A
Russia
dK w/o Noise
ε=100
ε=10
ε=5
 10
 8
 6
 4
 2
 0
t
t
h
g
n
e
L
h
a
P
e
g
a
r
e
v
A
WWW
dK w/o Noise
ε=100
ε=10
ε=5
 10
 8
 6
 4
 2
 0
t
t
h
g
n
e
L
h
a
P
e
g
a
r
e
v
A
AS
dK w/o Noise
ε=100
ε=10
ε=5
 8
 7
 6
 5
 4
 3
 2
 1
 0
(a) Russia
(b) WWW
(c) AS
Figure 7: Average path length of three real measured graphs, i.e. Russia, WWW and AS, each compared to the dK-synthetic graph
without noise and Pygmalion synthetic graphs with different  values.
i
i
m
a
p
S
g
n
v
e
c
e
R
s
r
e
s
U
f
o
%
 100
 80
 60
 40
 20
 0
ε = 5
ε = 10
ε = 100
dK w/o Noise
Russia
 0  1  2  3  4  5  6  7  8  9  10
% of Users Spamming
(a) Russia
i
i
m
a
p
S
g
n
v
e
c
e
R
s
r
e
s
U
f
o
%
 100
 80
 60
 40
 20
 0
ε = 5
ε = 10
ε = 100
dK w/o Noise
WWW
 0  1  2  3  4  5  6  7  8  9  10
% of Users Spamming
(b) WWW
i
m
a
p
S
g
n
v
e
c
e
R
s
r
e
s
U
i
f
o
%
 100
 80
 60
 40
 20
 0
ε = 5
ε = 10
ε = 100
dK w/o Noise
AS
 0  1  2  3  4  5  6  7  8  9  10
% of Users Spamming
(c) AS
Figure 8: Reliable Email (RE) experiment run on three real measured graphs, i.e. Russia, WWW and AS, each compared with the
dK-synthetic graph without noise and Pygmalion synthetic graphs with different  values.
5.1 Graph Metrics
Our evaluation includes two classes of graph metrics. One group
includes degree-based metrics such as: Average Node Degree, De-
gree Distribution, Joint Degree Distribution and Assortativity. These
are basic topological metrics that characterize how degrees are dis-
tributed among nodes and how nodes with particular degree con-
nect with each other. The second group includes node separation
metrics that quantify the interconnectivity and density of the over-
all graph. This group includes metrics such as Graph Diameter,
Radius and Average Path Length.
For our evaluation purposes, we always use our most advanced
algorithm, i.e. Pygmalion LDRC. We only focus on Pygmalion
LDRC, because there are practical problems in generating large
graphs from dK values after signiﬁcant noise has been added. As
shown earlier, the dK-PA model introduces the highest noise. In
fact, errors introduced by dK-PA are so large that the generator
fails when trying to generate large graphs with the resulting noisy
dK distributions.
We generate -private graphs for  ∈ [5, 100], and compare the
graph metrics of the resulting synthetic graphs against those of the
original graph, and a synthetic graph generated by the dK model
with no additional noise added. We limit ourselves to -private
graphs with  ∈ [5, 100] because of two reasons. First, we aim
to ﬁnd the  value that contributes to a smallest noise such that it
is statistically similar to the synthetic dK-2 graph with no privacy
enforced. This way, we can indirectly quantify the level of privacy
introduced by a pure synthetic graph with no additional steps taken
to improve privacy. This by itself is a potentially interesting result.
In particular, we obtain this property only when  is equal to 100.
Second, the dK-2 distribution is a very sensitive function and it
naturally requires a high level of noise to provide strong levels of
privacy guarantees. Unfortunately, very small values of  require
larger noise values, thus producing synthetic graphs that are ex-
tremely different in structure from the original. Finally, for < 1,
the required noise level is so high for larger graphs, that the dK
graph generator fails to produce synthetic graphs that match the re-
sulting dK distributions. This is clearly a limitation of the current
system, one that we hope will be removed with the discovery of
less sensitive models and optimization techniques to further reduce
noise required for -differential privacy.
As we mentioned, our results are highly consistent across our
pool of graphs (Table 1), and we only report experimental results
on three graphs: the Russia Facebook graph, the AS graph and the
WWW graph.
Degree-based Metrics.
These metrics are fundamental in un-
derstanding the statistical properties of node degrees and how nodes
connect to each other to form speciﬁc topological structures. Out
of the four metrics mentioned above, we report results for Degree-
Distribution (which supersedes average node degree) and Assorta-
tivity (which is related to joint degree distribution).
Figure 5 compares the node degree CDFs.
Degree Distributions.
For each of the Russia, WWW, and AS graphs, the degree distribu-
tions of both the Pygmalion (=100) graph and the dK-synthetic
graph very closely match the degree distribution of the original
graphs. When we increase the strength of the privacy guarantees,
i.e. smaller  values of 5 and 10, the accuracy of the synthetic de-
90gree distribution progressively decreases. For example, both the
Russia and WWW graphs show a small deviation from the original
distribution even for  = 5. Across all models for these two graphs,
the worst-case degree distribution deviation is still within 10% of
the original.
The AS graph, on the other hand, shows a slightly different be-
havior. For small  values, i.e.  = 5 and  = 10, the largest
error is within 35% from the original graph values. The AS graph
shows a different behavior because a small number of high degree
nodes connect the majority of other nodes. Thus, when the privacy
perturbation hits those high-degree nodes, it can produce structural
changes that send ripples through the rest of the graph.
Figure 6 reports the results of the assortative met-
Assortativity.
ric computed on both real and synthetic graphs for each of the three
graphs (Russia, WWW and AS). The assortativity metric describes
the degree with which nodes with similar degree are connected to
each other. Positive assortativity value denotes a positive correla-
tion between the degrees of connected nodes, and negative values
indicate anti-correlation. Note that both the WWW and AS graphs
show negative assortativity (Figure 6(b) and Figure 6(c)).
As with the degree distribution results, for each of our graphs
(Russia, WWW, and AS), assortativity results from synthetic graphs
for  = 100 and those from the dK-series closely match results
from the original graphs. As we increase the level of privacy pro-
tection, the results get slightly further from the original values. For
example, using  = 5 on Russia produces an error less than 0.05
on the assortativity value. The same  value for the WWW graph
produces negligible error on assortativity. Assortativity results on
the AS graph are also consistent with degree distribution results.
Under high privacy requirements, i.e.  = 5, error on assortativity
reaches 0.12.
Node Separation Metrics.
For brevity, we report only the
Average Path Length as a representative of the node separation
metrics. Figure 7 shows the Average Path Length (APL) values
computed on Russia, WWW and AS compared to the APL values
on their synthetic graphs. On Russia and WWW, APL results de-
note a moderate level of error (higher when compared to results
for the earlier graph metrics). We can see that the error is mainly
introduced by the impreciseness of the dK-model, since the syn-
thetic graph from the dK-series with no noise shows the same er-
ror. In comparison, the error introduced by strengthening privacy
(and hence decreasing ) is relatively small. This is encouraging,
because we can eliminate the bulk of the error by moving from
dK-2 to a more accurate model, e.g. dK-3.
As with previous experiments, the AS graph shows a slightly
different behavior.
In this case, all of our synthetic graphs do a
good job of reproducing the average path length value of the AS
graph.
Summary.
Our experimental analysis shows that synthetic
graphs generated by Pygmalion exhibit structural features that pro-
vide a good match to those of the original graphs. As expected,
increasing the strength of privacy guarantees introduces more noise
into the structure of the synthetic graphs, producing graph metrics
with higher deviation from the original graphs. These observations
are consistent across social, web, and Internet topology graphs.
Overall, these results are very encouraging. They show that we
are able to effectively navigate the tradeoff between accuracy and
privacy by carefully calibrating the  values. The fact that signiﬁ-
cant changes in  values do not dramatically change the graph struc-
ture means owners of datasets can guarantee reasonable levels of
privacy protection and still distribute meaningful graphs that match
the original graphs in structure.
5.2 Application Results
For a synthetic graph to be usable in research, ultimately it must
produce the same results in application-level experiments as the
original graph it is replacing. To quantify the end-to-end impact
of trading graph similarity for privacy protection, we compare the
results of running two real world applications on both differentially
private synthetic graphs and the original graphs. We implement two
applications that are highly dependent on graph structure: Reliable
Email (RE) [20] and Inﬂuence Maximization [11].
Reliable Email.
RE [20] is an email spam ﬁlter that relies on a
user’s social network to ﬁlter and block spam. One way to evaluate
the security of RE is to compute the number of users in a network
who can be spammed by a ﬁxed number of compromised friends
in the social network. This experiment depends on the structure of
the network, and is a useful way to evaluate whether Pygmalion
graphs can be true substitutes for measurement graphs in research
experiments.
Figure 8 shows the portion of the nodes ﬂooded with spam as we
increase the number of malicious spammers, using different graphs
as the underlying social network topology. We show results on the
usual three graphs, Russia, WWW and AS. On the Russia Facebook
graph, all synthetic graphs closely follow the original graph. Even
in the case of the strongest privacy setting, i.e.  = 5, the difference
between the synthetic graph result and those of the original is at
most 10%. For both the WWW and AS graphs, all synthetic graphs
with and without noise produce results within 20% of the original
graphs.
Inﬂuence Maximization.
The inﬂuence maximization problem
tries to locate users in the network who can most quickly spread
information through the network. This problem is most commonly
associated with advertisements and public relations campaigns. Eval-
uating a solution to this problem includes two steps. First, the so-
lution must identify the nodes who can maximize inﬂuence in the
network. Second, it must model the spread of inﬂuence through the
network to quantify how many users the inﬂuence has ultimately
reached.
For our purposes, we use a recently proposed heuristic for in-
ﬂuence maximization that minimizes computation. The heuristic
is called the Degree Discount method [11], and is able to ﬁnd the
most inﬂuential nodes, called “seeds,” on a given graph. Starting
from those seed nodes, we run three different inﬂuence dissemina-
tion models: Linear threshold (LT), Independent Cascade (IC) and
Weighted Cascade (WC), to determine the total number of users in
the network inﬂuenced by the campaign. We use source code we
obtained from the authors. However, signiﬁcant memory overhead
in the code meant that we had to limit our experiments to smaller