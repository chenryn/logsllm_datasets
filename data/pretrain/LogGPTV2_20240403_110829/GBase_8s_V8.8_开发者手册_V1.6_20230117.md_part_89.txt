BEGIN
IFvalidTHEN
GOTOpos1;
南大通用数据技术股份有限公司
671
GBase 8s V8.8开发者手册
SELECT*FROM...
ELSE
>
UPDATEt1SET...
ENDIF;
END;
不支持从外部块跳转到内部的BEGIN-END块。
BEGIN
GOTOpos1;
BEGIN
>
UPDATEt1SET...
END;
END;
不支持从异常处理部分跳转到当前的BEGIN-END块。但可以跳转到上层BEGIN-END
块。
BEGIN
>
UPDATEt1SET...
EXCEPTION
WHENconditionTHEN
GOTOpos1;
END;
如果从GOTO到一个不包含执行语句的位置，需要添加NULL语句。
DECLARE
done BOOLEAN;
BEGIN
FORiIN1..50LOOP
IFdoneTHEN
南大通用数据技术股份有限公司
672
GBase 8s V8.8开发者手册
GOTOend_loop;
ENDIF;
> --notallowedunlessanexecutablestatementfollows
NULL;--addNULLstatementtoavoiderror
ENDLOOP; --raisesanerrorwithoutthepreviousNULL
END;
/
17.9事务管理
存储过程本身就处于一个事务中，开始调用最外围存储过程时会自动开启一个事务，在
调用结束时自动提交或者发生异常时回滚。除了系统自动的事务控制外，也可以使用
COMMIT/ROLLBACK来控制存储过程中的事务。在存储过程中调用COMMIT/ROLLBACK
命令，将提交/回滚当前事务并自动开启一个新的事务，后续的所有操作都会在此新事务中
运行。
保存点SAVEPOINT是事务中的一个特殊记号，它允许将那些在它建立后执行的命令全
部回滚，把事务的状态恢复到保存点所在的时刻。存储过程中允许使用保存点来进行事务管
理，当前支持保存点的创建、回滚和释放操作。存储过程中使用回滚保存点只是回退当前事
务的修改，而不会改变存储过程的执行流程，也不会回退存储过程中的局部变量值等。
17.9.1 语法格式
定义保存点
SAVEPOINTsavepoint_name;
回滚保存点
ROLLBACKTO[SAVEPOINT]savepoint_name;
释放保存点
RELEASE[SAVEPOINT]savepoint_name;
17.9.2 使用场景
支持调用的上下文环境：
南大通用数据技术股份有限公司
673
GBase 8s V8.8开发者手册
 支持在PLSQL的存储过程内使用COMMIT/ROLLBACK/SAVEPOINT。
 支持含有EXCEPTION的存储过程使用COMMIT/ROLLBACK/SAVEPOINT。
 支持在存储过程的EXCEPTION语句内使用COMMIT/ROLLBACK/SAVEPOINT。
 支持在事务块里调用含有 COMMIT/ROLLBACK/SAVEPOINT 的存储过程，即通过
/BEGIN/START/END等开启控制的外部事务。
 支持在子事务中调用含有 SAVEPOINT 的存储过程，即存储过程中使用外部定义的
SAVEPOINT，回退事务状态到存储过程外定义的SAVEPOINT位置。
 支持存储过程外部对存储过程内定义的SAVEPOINT可见，即存储过程外可以将事务修
改回滚到存储过程中定义SAVEPOINT的位置。
 支持多数PLSQL的上下文和语句内调用COMMIT/ROLLBACK/SAVEPOINT，包括常
用的IF/FOR/CURSORLOOP/WHILE。
 支 持 存 储 过 程 返 回 值 与 简 单 表 达 式 计 算 中 调 用 含 有
COMMIT/ROLLBACK/SAVEPOINT的存储过程或者函数。
支持提交/回滚的内容：
 支持DDL在COMMIT/ROLLBACK后的提交/回滚。
 支持DML的COMMIT/ROLLBACK后的提交。
 支持存储过程内GUC参数的回滚提交。
17.9.3 使用限制
不支持调用的上下文环境：
 不支持除 PLSQL 的其他存储过程中调用 COMMIT/ROLLBACK/SAVEPOINT，例如
PLJAVA、PLPYTHON等。
 不支 持函数 中调用 COMMIT/ROLLBACK/SAVEPOINT ，包 括函数 调用含有
COMMIT/ROLLBACK/SAVEPOINT的存储过程。
南大通用数据技术股份有限公司
674
GBase 8s V8.8开发者手册
 不支持事务块中调用了SAVEPOINT后，调用含有COMMIT/ROLLBACK的存储过程。
 不支持TRIGGER中调用含有COMMIT/ROLLBACK/SAVEPOINT语句的存储过程。
 不支持EXECUTE语句中调用COMMIT/ROLLBACK/SAVEPOINT语句。
 不支持在CURSOR语句中打开一个含有COMMIT/ROLLBACK/SAVEPOINT的存储过
程。
 不 支 持 带 有 IMMUTABLE 以 及 SHIPPABLE 的 存 储 过 程 调 用
COMMIT/ROLLBACK/SAVEPOINT，或调用带有 COMMIT/ROLLBACK/SAVEPOINT
语句的存储过程。
 不支持 SQL 中调用含有 COMMIT/ROLLBACK/SAVEPOINT 语句的存储过程，除了
SELECTPROC以及CALLPROC。
 存储过程头带有GUC参数设置的不允许调用COMMIT/ROLLBACK/SAVEPOINT语句。
 不 支 持 CURSOR/EXECUTE 语 句 ， 以 及 各 类 表 达 式 内 调 用
COMMIT/ROLLBACK/SAVEPOINT。
 自治事务和存储过程事务是两个独立的事务，不能互相使用对方事务中定义的保存点。
不支持提交回滚的内容：
 不支持存储过程内声明变量以及传入变量的提交/回滚。
 不支持存储过程内必须重启生效的GUC参数的提交/回滚。
17.9.4 示例
示例1：支持在PLSQL的存储过程内使用COMMIT/ROLLBACK。
CREATETABLEEXAMPLE1(COL1INT);
CREATEORREPLACEPROCEDURETRANSACTION_EXAMPLE()
AS
南大通用数据技术股份有限公司
675
GBase 8s V8.8开发者手册
BEGIN
FORiIN0..20LOOP
INSERTINTOEXAMPLE1(COL1)VALUES(i);
IFi%2=0THEN
COMMIT;
ELSE
ROLLBACK;
ENDIF;
ENDLOOP;
END;
/
示例2：
支持含有EXCEPTION的存储过程使用COMMIT/ROLLBACK。
支持在存储过程的EXCEPTION语句内使用COMMIT/ROLLBACK。
支持DDL在COMMIT/ROLLBACK后的提交/回滚。
CREATEORREPLACEPROCEDURE
TEST_COMMIT_INSERT_EXCEPTION_ROLLBACK()
AS
BEGIN
DROPTABLEIFEXISTSTEST_COMMIT;
CREATETABLETEST_COMMIT(AINT,BINT);
INSERTINTOTEST_COMMITSELECT1,1;
COMMIT;
CREATETABLETEST_ROLLBACK(AINT,BINT);
RAISEEXCEPTION'RAISEEXCEPTIONAFTERCOMMIT';
EXCEPTION
WHENOTHERSTHEN
INSERTINTOTEST_COMMITSELECT2,2;
ROLLBACK;
END;
南大通用数据技术股份有限公司
676
GBase 8s V8.8开发者手册
/
示例 3：支持在事务块里调用含有 COMMIT/ROLLBACK 的存储过程，即通过
/BEGIN/START/END等开启控制的外部事务。
BEGIN;
CALLTEST_COMMIT_INSERT_EXCEPTION_ROLLBACK();
END;
示例4：支持多数PLSQL的上下文和语句内调用COMMIT/ROLLBACK，包括常用的
IF/FOR/CURSORLOOP/WHILE。
CREATEORREPLACEPROCEDURETEST_COMMIT2()
IS
BEGIN
DROPTABLEIFEXISTSTEST_COMMIT;
CREATETABLETEST_COMMIT(AINT);
FORIINREVERSE3..0LOOP
INSERTINTOTEST_COMMITSELECTI;
COMMIT;
ENDLOOP;
FORIINREVERSE2..4LOOP
UPDATETEST_COMMITSETA=I;
COMMIT;
ENDLOOP;
EXCEPTION
WHENOTHERSTHEN
INSERTINTOTEST_COMMITSELECT4;
COMMIT;
END;
/
示例5：支持存储过程返回值与简单表达式计算。
南大通用数据技术股份有限公司
677
GBase 8s V8.8开发者手册
CREATEORREPLACEPROCEDUREexec_func3(RET_NUMOUTINT)
AS
BEGIN
RET_NUM:=1+1;
COMMIT;
END;
/
CREATEORREPLACEPROCEDUREexec_func4(ADD_NUMININT)
AS
SUM_NUMINT;
BEGIN
SUM_NUM:=ADD_NUM+exec_func3();
COMMIT;
END;
/
示例6：支持存储过程内GUC参数的回滚提交。
SHOWexplain_perf_mode;
SHOWenable_force_vector_engine;
CREATEORREPLACEPROCEDUREGUC_ROLLBACK()
AS
BEGIN
SETenable_force_vector_engine=on;
COMMIT;
SETexplain_perf_modeTOpretty;
ROLLBACK;
END;
/
南大通用数据技术股份有限公司
678
GBase 8s V8.8开发者手册
callGUC_ROLLBACK();
SHOWexplain_perf_mode;
SHOWenable_force_vector_engine;
SETenable_force_vector_engine=off;
示例7：函数（Function）中不允许调用commit/rollback语句，同时不允许函数调用含
有commit/rollback的存储过程。
CREATEORREPLACEFUNCTIONFUNCTION_EXAMPLE1()RETURNINT
AS
EXPINT;
BEGIN
FORiIN0..20LOOP
INSERTINTOEXAMPLE1(col1)VALUES(i);
IFi%2=0THEN
COMMIT;
ELSE
ROLLBACK;
ENDIF;
ENDLOOP;
SELECTCOUNT(*)FROMEXAMPLE1INTOEXP;
RETURNEXP;
END;
/
示例8：函数（Fucntion）中不允许调用带有commit/rollback语句的存储过程。
CREATEORREPLACEFUNCTIONFUNCTION_EXAMPLE2()RETURNINT
AS
EXPINT;
BEGIN
--transaction_example为存储过程，带有commit/rollback语句
CALLtransaction_example();
SELECTCOUNT(*)FROMEXAMPLE1INTOEXP;
南大通用数据技术股份有限公司
679
GBase 8s V8.8开发者手册
RETURNEXP;
END;
/
示例9：不允许Trigger的存储过程包含commit/rollback语句，或调用带有commit/rollback
语句的存储过程。
CREATEORREPLACEFUNCTIONFUNCTION_TRI_EXAMPLE2()RETURN
TRIGGER
AS
EXPINT;
BEGIN
FORiIN0..20LOOP
INSERTINTOEXAMPLE1(col1)VALUES(i);
IFi%2=0THEN
COMMIT;
ELSE
ROLLBACK;
ENDIF;
ENDLOOP;
SELECTCOUNT(*)FROMEXAMPLE1INTOEXP;
END;
/
CREATETRIGGERTRIGGER_EXAMPLEAFTERDELETEONEXAMPLE1
FOREACHROWEXECUTEPROCEDUREFUNCTION_TRI_EXAMPLE2();
DELETEFROMEXAMPLE1;
示例10：不支持带有IMMUABLE以及SHIPPABLE的存储过程调用commit/rollback，