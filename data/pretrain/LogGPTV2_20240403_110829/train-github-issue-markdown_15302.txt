# Bug report
**What is the current behavior?**  
I've a react project in which I use the monaco-editor-webpack-plugin
I want to bundle all dependencies to `monaco-editor` to a separate chunk.
    chunkFilename: isEnvProduction
            ? "static/js/[name].[contenthash:8].chunk.js"
            : isEnvDevelopment && "static/js/[name].chunk.js",
    ...
    splitChunks: {
            chunks: "all",
            maxInitialRequests: Infinity,
            minSize: 0,
            cacheGroups: {
              vendor: {
                test: /[\\/](monaco-editor)[\\/]/,
                name: "monaco-editor"
              }
            }
    },
When doing this I get the following error:
    chunk runtime-main [entry]
    Cannot convert undefined or null to object
As you can see I'm using `contenthash` within my `chunkFilename` if I change
this to `chunkhash` it works fine.
I did some research in `monaco-editor-webpack-plugin` and I found out that it
is using `new webpack.optimize.LimitChunkCountPlugin({ maxChunks: 1 })` for
the workers that are added by the plugin. This seems to be the issue somehow.
I tested this by defining an empty `languages` option for the plugin (the
plugin doesn't add any worker that uses the `LimitChunkCountPlugin` when and
empty array is defined):
    new MonacoWebpackPlugin({
            //does work
            languages: []
            // does not work
            languages: ["json"]
    })
To reproduce this error download the repository below:  
my-app.zip
The `monaco-editor-webpack-plugin` is added on line `674`
**What is the expected behavior?**  
I expect webpack to bundle and chunk my files normally without throwing an
error.
**Other relevant information:**  
webpack version: 4.41.0  
Node.js version: v10.17.0  
Operating System: ubuntu  
Additional tools: