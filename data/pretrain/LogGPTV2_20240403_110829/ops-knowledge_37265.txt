User:  How to use Cron scheduled task to backup MySQL database in Linux environment?
Assistant: 1. Install Cron No installation is required. Cron is a task scheduling tool that comes with the Linux system. 2. Write a backup script Create a script file named "backup.sh" and add the following command: ```bash #!/bin/bash # Backup file save path BACKUP_DIR="/var/backups/mysql" # Get the current Date as backup file name BACKUP_NAME="mysql_backup_$(date +%Y%m%d_%H%M%S).sql" # MySQL database information DB_USER="root" DB_PASSWORD="password" DB_NAME="database_name" # Execute Backup command, save the backup file to the specified directory mysqldump -u$DB_USER -p$DB_PASSWORD $DB_NAME > $BACKUP_DIR/$BACKUP_NAME # Delete the backup file 7 days ago find $BACKUP_DIR -type f -mtime +7 -delete ``` Functions of the above script: - Back up the MySQL database as a .sql file using the mysqldump tool. - The backup file name adopts the format of "mysql_backup_date.sql", and the date is expressed in the form of year, month, day, hour, minute, and second. - Backup files are stored in the /var/backups/mysql directory. - Automatically delete backup files older than 7 days. 3. Grant execution permission Use the chmod command to grant execution permission to the script: ```bash chmod +x backup.sh ``` 4. Define a cron task Use the crontab command to add a scheduled task: ```bash crontab -e ``` Open cron editor, enter the following content: ```bash 0 0 * * * /path/to/backup.sh ``` The meaning of the above command is to execute the backup script ( /path/to/backup.sh). 5. Save and exit Save and exit the cron editor, and the scheduled task will take effect. Now, every night at 12 o'clock, the backup script will automatically execute and save the backup file to the specified directory. You can modify the backup frequency and file storage location according to the actual situation.