likely to use short-lived certiﬁcates and provide/support automated certiﬁcate
replacement solutions for their customers, we could only see a weak correla-
tion between the CAs with longer validation periods and those with more gaps,
60
C. M. Bruhner et al.
Fig. 6. CDFs for the 12 most frequently observed CAs. (Based on CRs in 2019.) (Color
ﬁgure online)
when excluding Let’s Encrypt. Instead, Let’s Encrypt had a surprising number
of gaps. We expect this to have more to do with the domains that select to use
free certiﬁcates than the service provided by Let’s Encrypt. However, more work
is needed to conﬁrm the underlying reasons for the above observations.
Subject vs Issuer Dominated Overlap Decisions: Clearly, all subjects have
some control over the certiﬁcate overlaps: ﬁrst the size of the validity period over-
laps and second the speciﬁc date and time when to replace a certiﬁcate (and a
key). Subjects can also decide if and when to change their issuing CA. However,
the variation in these overlaps and decisions diﬀer substantially depending on
which issuing CA the subject uses. For example, the CAs with longer validity
times have higher variability in the overlap distribution relative to CRs with cer-
tiﬁcates issued by CAs with shorter validity periods. One possible explanation is
that the overlap of short-validity certiﬁcates is inﬂuenced more by the issuer than
the subject, whereas the overlap with long-validity certiﬁcates appears inﬂuenced
more by the subject. We again do not see any major diﬀerences when condition-
ing on whether the key is reused in the certiﬁcates.
DV Certiﬁcates Use Shorter Validity Periods and Overlaps than OV
and EV Certiﬁcates: The validity periods are shorter for DV certiﬁcates
regardless of whether Let’s Encrypt certiﬁcates are included or excluded. While
the average statistic (not shown) increases from 103 to 187 days when excluding
Let’s Encrypt, these values are still lower than for OV (241 days) and EV (461
days). One reason is that DV certiﬁcates typically use a faster validation process,
simplifying use of short-lived certiﬁcates. Interestingly, DV certiﬁcates typically
also use much shorter overlaps (safety margin). For example, the EV certiﬁcates
have a median overlap of 317 days compared to 29 days for DV certiﬁcates.
Distinguishing Features of CAs: There are big diﬀerences in the validity
periods and the overlaps. For example, Let’s Encrypt, Google, and cPanel always
use 90-day validity periods; services using their certiﬁcates have fairly speciﬁc
overlaps for the majority of their CRs (typically 15 or 30 days). In contrast,
Changing of the Guards: Certiﬁcate and Public Key Management
61
most of the other CAs use much longer validity periods and their customers use
both larger and much more diverse overlaps.
To better understand the distinct behaviors observed for the customers of
diﬀerent CAs, Fig. 6 shows the empirical cumulative distribution function (CDF)
of the validity periods and CR overlaps observed in 2019 for each of the top-12
CAs in our dataset. To improve readability, the top-6 are shown with distinct
color coding and enumeration, the CAs with ranks 7–9 are shown in green, and
the CAs with ranks 10–12 are shown in yellow.
Increasing Validity Periods with Decreasing Rank: While there are excep-
tions, we note a clear shift in the CDFs based on the CA ranks. The three CAs
with the shortest validity periods (left-most CDFs in Fig. 6) are roughly followed
by the three CAs with ranks 2, 5 and 6, which are followed by the three CAs
with ranks 7–9 (green curves), which ﬁnally are followed by the CAs with ranks
9–12 (yellow curves). This is in part due to some of the top-ranked CAs now
oﬀering attractive low-cost certiﬁcates with simple, automated validation checks
and shorter validity periods. These distribution examples also show that many
of the less popular CAs have had to make relatively bigger changes to comply
with the recently imposed 398-day limit.
Automated Replacement Solutions: Some of the CAs have a clear “knee”
in their overlap distributions. This behavior appears to be due to default values
used in automated processes simplifying certiﬁcate management. For example,
the two CAs with the most signiﬁcant knee are cPanel (rank 4) and Let’s Encrypt
(rank 1). These CAs typically have an overlap of 15 and 30 days, respectively.
Both Let’s Encrypt and cPanel automate some of their certiﬁcate services
with the recently standardized Automatic Certiﬁcate Management Environment
(ACME) [9,17]. Let’s Encrypt, for instance, has created its own automation tool
Certbot as an ACME agent [75]. The cPanel system also issues other certiﬁcates,
and almost one out of ﬁve Let’s Encrypt certiﬁcates are issued using cPanel [9].
Other CAs with sharp (although smaller) knees in the overlap distribution
are Google (multiple steps), Sectigo (30 days), Amazon (60 days), Microsoft (30
days), and CSC (148 days). This suggests that websites using these services also
use automated certiﬁcate replacement processes to a signiﬁcant degree.
4 Reuse of Keys
There is a cost associated with mapping subjects to keys. Unless a key has been
compromised, in some cases it may therefore be desirable to keep using the same
key when issuing a new certiﬁcate. For example, servers do not have to replace
their private keys and the CA could potentially simplify the domain validation
process somewhat knowing that the domain already is in possession of the key.
We call a CR where the public key is reused a Same Key CR (SKCR). The
fraction of SKCRs is increasing and are today responsible for roughly 13% of all
CRs. We next look closer at the SKCRs and the SKCR chains formed when a
key is reused for consecutive replacements.
62
C. M. Bruhner et al.
4.1 High-Level SKCR Analysis
Figure 7 shows the fraction of CRs that reuse the same key (black bars), and
the fraction of those that have gaps (purple bars). As a reference point, we
also include the overall fraction of gaps for each category (× markers). These
reference point values are the same that were reported in Fig. 4.
Fig. 7. Fraction of CRs that are SKCRs and have gaps. Only 2019 CRs are used here
(with exception for the 3 categories “2020”, “2018”, “≤2017” to the left).
Small Diﬀerence or Reduced Fraction of Gaps: In most cases, reusing a
key has limited eﬀect on the results. We have only seen a few cases when services
reusing keys have more gaps: the issuer changes, the certiﬁcate is of type EV,
and (at a ﬁrst glance) the ﬁrst certiﬁcate in a CR was issued by certain CAs.
However, these cases can be explained by a change in CA (the characteristic
most likely resulting in a gap). For example, the three CAs (Google, cPanel,
CSC) with noticeable higher fraction of SKCR gaps (i.e., higher purple bars
than × markers), as well as Amazon, have very small key reuse (black bars).
It appears that these CAs typically do not allow reuse of keys. Instead, these
rare cases are associated with a customer re-using their key with a diﬀerent CA.
(Google, cPanel, and Amazon has less than 0.003% reuse and CSC 0.6%.)
Three CAs with High Key Reuse and Fewer Gaps: The customers of
three CAs have higher than 65% key reuse: Sectigo (81%), GlobalSign (66%),
and Go Daddy (75%). The highest reuse among the other CAs is less than
13%. Interestingly, these three CAs (together with DigiCert and Trust Asia)
also achieved less gaps when reusing a key (shorter purple bars than × markers).
We believe that the reuse of keys is part of the operational practices of these
CAs and may simplify the validation process as well as the key and certiﬁcate
management process of the customers. In Sect. 5 we expand on this observation
and show how key reuse can be used as a building block in an improved certiﬁcate
management system.
Changing of the Guards: Certiﬁcate and Public Key Management
63
Fig. 8. Chain length distributions.
Fig. 9. Aggregate validity of SKCRs
(one CDF per chain length)
Fig. 10. Aggregate validity period vs aggregate observed use for SKCR chains. (Color
ﬁgure online)
4.2 SKCR-Chain Analysis
Let us next consider the SKCR chains formed when the same key is reused for a
series of SKCRs (numbered from ﬁrst to last) in which the replacing certiﬁcate
in SKCR i is the certiﬁcate being replaced in SKCR i + 1 of the series.
Short Chains are Common: We have found that most chains are short (e.g.,
CDF in Fig. 8 shows that 80% of the chains of lengths at least two are no longer
than ﬁve) and that the tail of the chain-length distribution has exponential
characteristics (e.g., straight-line CCDF behavior on linear-log scale).
Long Chains are Dominated by Automated Services: Figure 9 shows the
CDFs of the aggregate validity periods, when merging the validity periods of
all certiﬁcates associated with an SKCR chain. When interpreting this ﬁgure,
note that the single certiﬁcate line roughly captures the overall validity period
distribution across all certiﬁcates. For example, as shown in Figs. 5 and 6, most
certiﬁcates have a validity period of 90 days (Let’s Encrypt, Google, cPanel) or
around either one or two years (most other top-CAs). While we see some chains
of length two (pink line) that clearly include long-lived certiﬁcates (e.g., steps
around 1 year and 2 years), close to 40% of the chains with length 2 (pink line)
have an aggregate validity period of 150 days (90+60), matching our previous
observation that most of the Let’s Encrypt certiﬁcates have a validity of 90 days
64
C. M. Bruhner et al.
Fig. 11. CA-based comparison of the validity vs. use as aggregated over all certiﬁcates
in certiﬁcate-replacement chains. (Rank in parenthesis.)
and an overlap of 30 days. For chain lengths of three, the higher age steps have
almost disappeared, and the aggregate duration instead appears to be dominated
by Let’s Encrypt chains. This is seen by the consecutive CDFs being shifted by
roughly 60 days up-to a chain length of 10 certiﬁcates. The 11+ curve includes
a mix of longer chain lengths (mapped to diﬀerent CAs) and therefore has a
somewhat diﬀerent general shape, without any distinct steps.
Keys Used in Chains are Typically Used for Close to the Full Aggre-
gate Validity Period: Figure 10 shows contour plots of the aggregate validity
period versus (vs) the aggregate observed use for certiﬁcate-replacement chains
of diﬀerent replacement lengths. For easier visualization, we use contour plots.
These plots are based on data between 2017-01-02 and 2020-07-13 and are gener-
ated using a matrix granularity of 5 days (meaning that any point falling within
any of the 5 × 5 possible day combinations would add to the same counter),
outliers are removed using a threshold of 0.15% of the total observations, and
we have applied a Gaussian smoothing with a smoothing constant (sigma) of
2, where the smoothing can be seen as us simply taking the sum across twice
as many buckets when doing a regional summation. We separate results based
on whether the chain is eventually replaced by a new chain (Fig. 10(a)), which
uses a diﬀerent key, or whether no additional certiﬁcate replacement is observed
(Fig. 10(b)). While we observe more variations in both use and validation periods
for the second case, the general characteristics and observations are the same for
both cases. First, the largest volumes (peaks or ridges in the plots) are observed
just under the diagonal, suggesting that the observed use typically spans almost
the full aggregate validity period. This shows that the websites typically make
good use of the aggregate validity period. Second, we the shortest chains (red)
have the largest portion of points well below the diagonal.
Behavior Varies Noticeably by CA: Looking closer at individual CAs, Let’s
Encrypt has the most interesting behavior. Figure 10(c) shows how it nicely
stacks up longer and longer chains along the diagonal. As discussed above, this
is desirable and demonstrates good use of the aggregated validity periods. This
shift comes from Let’s Encrypt customers consistently using a validity period of
90 days and often using an overlap of approximately 30 days.
Changing of the Guards: Certiﬁcate and Public Key Management
65
Fig. 12. Replacement timing for Let’s Encrypt (rank #1), measured using (a) the
average overlap vs the average validity left for the certiﬁcates in CR chains and (b) the
average validity vs. use for certiﬁcates in CR chains.
Fig. 13. Example CA-based comparison of the replacement timing as measured using
the average overlap vs the average validity left for the certiﬁcates in certiﬁcate-
replacement chains. (Rank in parenthesis.)
CA-Based Comparisons: Figure 11 shows the aggregated validity period vs.
the aggregated use (over all certiﬁcates in the SKCR chains) for the other four
CAs with key reuse of at least 12% in 2019. As a reminder, Let’s Encrypt and
DigiCert had just over 12% SKCRs and the other three CAs shown (Sectigo,
GlobalSign, and GoDaddy) all had over 65% SKCRs. (Keys from certiﬁcates by
Google and cPanel, with ranks 3 and 4, respectively, only were reused in 4.7·10−6
and 1.2 · 10−5 of their respective CRs.) For the customers of the other CAs we
observe much more diverse behaviors. For these other CAs, many chains are also
only observed for a small portion of the aggregate validity period (i.e., areas well
below the diagonal). While four CAs have clear singularities in the aggregate
validity period (e.g., around the 1-year and 2-year marks), their diversity diﬀers
substantially. Both DigiCert and GoDaddy primarily appear to have aggregated
validity period of a year, suggesting that they limit the reuse and often have
signiﬁcant overlap in their SKCRs. In contrast, both Sectigo and GlobalSign
has much more diversity in their SKCR chains (both with regards to aggregate
validity period and aggregate usage period). For all four of these later CAs, we
again see a shift towards the diagonal as the chains become longer.
66
C. M. Bruhner et al.
Let’s Encrypt Highly Automated: As we have seen, Let’s Encrypt’s highly
automated services stand out in many ways. Another way to highlight this is
shown in Figs. 12(a) and 13. Here, we compare the replacement timing, measured
using the average overlap (based on validity periods) versus the average of the
validity left for the ﬁrst certiﬁcate of each SKCR in the SKCR chains when
the replaced certiﬁcate is last observed. Again, Let’s Encrypt displays a highly
distinct pattern, as all CRs in the SKCR chains are equally treated. In particular,
the validity periods are always 90 days and Let’s Encrypt appears to aim to use
a 30-day overlap, regardless of whether a key is re-used or not.
Replacement Certiﬁcates Typically Used Close to the Time They
Become Valid: For all ﬁve CAs, the replacement certiﬁcates are typically being
seen in use soon after they have become valid. This is seen by almost all points
falling along (or slightly above) the diagonal in Fig. 13. However, exactly as
we observed for the full set of CRs (Fig. 6(b)), compared with Let’s Encrypt,
the overlaps of the other four CAs are much more diverse and are therefore