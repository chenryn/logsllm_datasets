# 【技术分享】快报！Windows DNS客户端中惊现多重堆缓冲区溢出漏洞
|
##### 译文声明
本文是翻译文章，文章来源：bishopfox.com
原文地址：
译文仅供参考，具体内容表达以及含义原文为准。
译者：[WisFree](http://bobao.360.cn/member/contribute?uid=2606963099)
预估稿费：200RMB
投稿方式：发送邮件至linwei#360.cn，或登陆网页版在线投稿
**介绍**
****
微软已经在2017年10月份正式修复了漏洞 **CVE-2017-11779** ，该漏洞包含Windows
DNS客户端中的多个内存崩溃漏洞，运行了Windows 8/Server
2012以及更新版本操作系统的计算机都将会受到该问题的影响，攻击者将能够通过恶意DNS响应来触发这些漏洞。在这个漏洞的帮助下，攻击者将能够在发送DNS请求的应用程序之中实现任意命令执行。
这也就意味着，如果攻击者能够控制你的DNS服务器（例如通过中间人攻击或恶意WiFi热点），那么他们就能够获得你系统的访问权。受该问题影响的不仅仅是你的Web浏览器，因为你的计算机系统会在后台不停地发送DNS查询请求，而攻击者只需要响应用户的查询请求就可以触发这些漏洞并实施攻击了。
研究人员在下面这个视频中对漏洞CVE-2017-11779进行了简单介绍，如果你想了解更多技术细节的话，请继续阅读本文。
视频：  
**漏洞概述**
****
在Windows 8/Windows Server 2012系统中，微软给Windows DNS客户端扩展了DNSSEC支持，相关代码存在于
**DNSAPI.dll** 文件中。其中一个引入用来支持DNSSEC的DNS资源记录（RRs）为NSEC3记录，该信息由
**Nsec3_RecordRead** 函数负责处理。
**CVE-2017-11779** 所包含的漏洞均与 **Nsec3_RecordRea** d函数有关，因为该函数无法安全地解析NSEC3
RRs，并进一步导致了多重写入越界问题。使用 **DNSAPI.dll** 文件的一般都是 **DnsCache** 服务，该服务的运行依赖于
**svchost.exe**
，并能够给Windows系统的DNS客户端提供DNS缓存服务。除此之外，还有很多其他需要发送DNS查询请求的应用程序也会引入该服务。
需要注意的是，由于这种记录是存在安全问题的，因此它理应是无法通过任何正常的DNS解析器的。正因如此，所以只有当目标用户直接从攻击者所控制的服务器中接受DNS响应的情况下，这些漏洞才有可能被触发。一般来说，
**这里需要攻击者实现主动的中间人攻击** 。
本文主要涉及到的是存在漏洞的DNS记录-NSEC3，NSEC3记录主要用来帮助DNS解析器识别记录名并验证DNSSEC有效性。
**漏洞介绍**
****
当你在看网页、听音乐或者什么都不做的时候，你的电脑都会发送DNS请求。除此之外，类似检测Windows系统更新的后台活动同样也会发送这种请求。绝大多数情况下，应用程序在发送这类请求时是不会直接查看到响应数据的，因为响应内容需要先到达DNS缓存服务并存储下来以便后续使用，这种特性可以帮助系统减少发送DNS请求的次数。
**DNS是一种明文协议，并且无法抵御中间人攻击**
。正是由于这种特殊性质，所以微软才引入了DNSSEC（域名安全）扩展。这种扩展引入了多种新的DNS记录，并能够向DNS客户端以及服务器传递更多的信息。DNSSEC的目的是尝试解决某些现存的安全问题，但你可能已经猜到了，它的出现也带来了新的安全问题。
微软在Windows8和Server
2012及其之后的操作系统版本中为DNSSEC添加了客户端功能，随之一起的还有多种新的DNS记录。但是这种功能中有一条存在漏洞的DNS记录，即NSEC3。当Windows
DNS客户端在处理包含NSEC3记录的DNS响应时， **它并不没有进行必要的数据过滤或清洗**
。恶意的NSEC3记录将能够触发这种漏洞，并导致DNS客户端出现内存崩溃问题。如果攻击者技术足够好的话，他们甚至还可以在目标系统中实现任意代码执行。
由于这种记录本身的恶意性，因此它无法通过正常的DNS系统。服务器在接收到这种记录时将会直接丢弃，因为它并不符合NSEC3记录的标准规范。所以，如果攻击者想要利用该漏洞实施攻击的话，他们的位置必须在目标用户和DNS服务器之间（中间人攻击）。比如说，你现在在用咖啡店的WiFi上网，然后某人想要对你实施攻击，如果他们可以入侵你的路由器，那么他们就能够修改你所接收到的DNS响应了。
**受影响的系统以及如何修复该问题**
****
**从 Windows 8/Windows Server 2012到Windows 10/Windows Server
2016的所有版本WIndows操作系统都会受到这些漏洞的影响，但Windows 8之前的操作系统不会受此影响。**
如果你的计算机操作系统版本是上述系统其中之一的话，我们建议用户 **立刻安装微软在2017年10月份发布的安全更新补丁** 。
**技术细节**
****
**DNSAPI.dl
l**中的这三个堆缓冲区溢出漏洞可以通过一台恶意DNS服务器或中间人攻击来触发，即发送恶意形式的NSEC3响应记录（RR）来对DNS请求予以响应。研究人员此次分析的是
**DNSAPI.dll** v6.3.9600.18512 (x86, Windows 8.1)，该问题也已经在v10.0.14393.206 (x64,
Windows 10)中得到了确认。
**缓冲区空间分配**
****
**Nsec3_RecordRead** 函数负责通过调用 **DNSAPI!DNS_AllocateRecordEx**
来为NSEC3响应数据分配目的缓冲区（destbuf），destbuf的分配大小是由一个16位的受用户控制的数据长度域控制的，即一条DNS资源记录中的通用数据域。通过修改数据长度域，攻击者就能够控制destbuf的大小，然后进行越界读写攻击了。
下图为WireShark捕获到的一条NSEC3资源记录，其中用蓝色部分标记的就是数据长度域：
DNSAPI可以从 **Dns_ReadRecordStructureFromPacket** 函数中获取到这个值，然后
**Nsec3_RecordRead** 函数将根据这个值来决定缓冲区空间的分配大小。
**堆缓冲区溢出漏洞 #1-NSEC3 Salt_Length**
第一个堆缓冲区溢出漏洞位于 **DNSAPI!Nsec3_RecordRead+0xB9** ，这里它会将用户提供的8位Salt Length值当作
**memcpy** 的拷贝大小。在我们分析的NSEC3资源记录样本中，NSEC3 Salt Length值的位置如下图所示：
如果攻击者能够控制NSEC3 Salt Length的大小，并让其超过destbuf的大小，那么攻击者就能够利用这个堆缓冲区溢出漏洞来实现越界写入操作了。
接下来，Nsec3_RecordRead函数将会使用空直接提供的NSEC3 Salt Length数据来作为memcpy的size参数，具体如下列代码所示：
    .text:742574D4         mov     bh, [esi+4]    ; User-controlled NSEC3 Salt Length size
    .text:742574D7         add     esi, 5               ; Start of NSEC3 Salt data in RR
    .text:742574DA         mov     eax, [ebp+var_4]
    .text:742574DD         mov     [edi+1Ch], bh      
    .text:742574E0         add     eax, 20h
    .text:742574E3         movzx   edi, bh
    .text:742574E6         push    edi          ; Size (user-controlled)
    .text:742574E7         push    esi           ; Src (NSEC3 RR data)
    .text:742574E8         push    eax          ; Dst (size of buf is user-controlled)
    .text:742574E9         call    memcpy            ; Nsec3_RecordRead+0xB9
其中的memcpy操作会将攻击者提供的DNS资源记录（0xff字节）拷贝到destbuf之中。
**堆缓冲区溢出漏洞 #2-NSEC3 Hash Length**
第二个堆缓冲区溢出漏洞存在于 **Nsec3_RecordRead+0xD9** ，具体如下列代码所示：
    .text:742574EE         mov     eax, [ebp+var_4]
    .text:742574F1         add     esi, edi
    .text:742574F3         mov     bl, [esi]              ; User-controlled NSEC3 Hash Length size