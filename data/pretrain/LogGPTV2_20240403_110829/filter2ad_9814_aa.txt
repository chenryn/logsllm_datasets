**作者：天融信阿尔法实验室  
原文链接：**
## 0x01 前言
前段时间看到有篇文章是关于DedeCMS后台文件上传(CNVD-2022-33420)，是绕过了对上传文件内容的黑名单过滤，碰巧前段时间学习过关于文件上传的知识，所以有了这篇文章，对DedeCMS的两个文件上传漏洞(CVE-2018-20129、CVE-2019-8362)做一个分析。
## 0x02 简介
DedeCMS简介：DedeCMS由上海卓卓网络科技有限公司研发的国产PHP网站内容管理系统；具有高效率标签缓存机制；允许对类同的标签进行缓存，在生成
HTML的时候，有利于提高系统反应速度，降低系统消耗的资源。众多的应用支持；为用户提供了各类网站建设的一体化解决方案，在本版本中，增加了分类、书库、黄页、圈子、问答等模块，补充一些用户的特殊要求。
## 0x03 DedeCMS V5.7 SP2前台文件上传(CVE-2018-20129)
### 01 漏洞复现
复现环境：phpstudy、DedeCMS V5.7 SP2、php5.6.9
前提条件：会员模块开启、以管理员权限登录。会员模块默认情况下是不开启的，需要管理员在后台手动。
登录到前台以后找到内容中心，发表一篇文章，点击下面编辑器中找到上传图片按钮，其实这里原本想实现的功能就是一个简单图片上传的功能。
然后使用BurpSuite抓包，把文件名称从1.png改成1.png.p*hp，然后放包上传。
在响应信息中得到上传文件的保存地址，并且文件的后缀也是PHP。
但是当我们尝试去访问这个文件时会发现有的文件是不解析的，这跟我们上传的文件有关系，这个问题我们后面再解释。
上传的脚本文件可以正常利用。
### 02 漏洞分析
从抓取的数据包可以看到提交路径是/dedecmsgbk/include/dialog/select_images_post.php，跟进这个文件看一下进行了怎样的处理。
在select_images_post.php文件中的第36行，对文件名称进行了正则替换，正则会匹配`回车符、换行符、制表符、*、 % 、/ 、？、、
|、 “、 ：、`并至少匹配1次，把匹配到的内容替换成‘
’（空），因为我们通过抓包把文件名称改成了1.png.p*hp，所以经过替换会变成1.png.php。
紧接着在第38行对文件名称再次验证，文件名中只需要存在jpg、gif、png中任意一个，如果不存在程序就会提示错误信息，但这里有一个非常大的缺陷，就是程序只是验证文件名称中存在jpg、gif、png三个中的任意一个，并不是在验证文件的后缀。所以我们上传的文件名称1.png.php是可以绕过这个限制的。既然这个限制这么轻松就可以绕过，那我们可不可以直接把文件名称改成1.png.php，而不是1.png.p*hp呢？这个问题最后会进行解答。
程序在第44行对上传文件的MIME类型进行验证，这里进行白名单验证，在`$sparr`数组中定义了六个允许上传的MIME类型，然后把我们上传文件的MIME去除两端空格并转变成小写得到`$imgfile_type`，然后判断`$imgfile_type`是否在数组`$sparr`，如果不存在程序就会提示错误信息。
漏洞的产生还有一个非常重要的原因，从第57行开始分析，用户的UserID拼接上'-'再拼接上一段随机字符形成`$filename_name`，`$mdir`是年(年份后两位)月日，`$mdir`跟`$filename_name`拼接形成`$filename=$mdir/$filename_name`，然后使用explode函数按照'.'分割文件名`$imgfile_name`，形成数组`$fs`内容（'1'，'png'，'php'），然后取出数组中的最后一个元素拼接到了`$filename_name`参数后面组成文件名，而数组的最后一个元素正好是PHP，所以PHP文件就可以上传了。
并且在最后也可以看到完成的路径。
程序的最后就是把上传文件的信息保存到了数据库中。
### 03 遗留问题
上面我们留下了两个疑问：1.直接上传PHP文件可不可行，2.为什么部分脚本文件上传失效。接下来我们将解决这两个问题。
**1.直接上传PHP文件可不可以**
从返回信息中可以看到，不允许我们上传这种类型的文件，在select_images_post.php文件中包含了config.php文件，config.php文件包含了common.inc.php文件，common.inc.php文件包含了uploadsafe.inc.php文件，在uploadsafe.inc.php文件的第33行对文件的后缀进行了验证，定义了一些禁止上传的文件后缀`$cfg_not_allowall`，所以直接上传PHP文件是不可以的，上传PHP文件要配合
select_images_post.php文件中替换为空的操作进行利用。
这里的提示信息跟上面我们看到的是一样的。并且在这里面也发现了验证MIME类型。
**2.为什么部分脚本文件上传不能利用**
通过观察我们上传的PHP脚本文件，可以发现脚本文件被二次渲染了。比如这个：
但是对于PNG图片把恶意代码插入的IDAT数据块的脚本文件可以避免被二次渲染，并且可以成功利用。
并成功执行命令。
### 04 漏洞修复
**修复方式一：**
在给文件名拼接后缀时，对后缀进行二次验证。
比如说在select_images_post.php的第60行添加如下代码。
-1]`会取出最后一个数组成员php，而`$cfg_imgtype`是`jpg|gif|png`，不包含，所以程序提示报错信息，上传失败。
**修复方式二：**
在官方DedeCMS
V5.7.93版本中，uploadsafe.inc.php文件中由原先只要文件名中包含`$cfg_not_allowall`参数定义的这些文件后缀，改成了使用pathinfo()方法获取文件的后缀，然后判断后缀是否存在黑名单中，按照之前的文件名来说的话，这里获取的后缀是p*hp，依然不在黑名单数组中。