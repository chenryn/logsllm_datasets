adding an ECS option carrying clients’ source IP addresses. An
egress resolver issues queries to authoritative DNS servers and re-
turns the responses, along with the authoritative ECS scope, to the
front-ends. The All-Names Resolver dataset contains all queries and
responses exchanged between front-ends and one egress resolver
where the responses include an ECS option with non-zero scope
prefix length. The unique feature of the dataset is that it contains
both the client IP address and the authoritative ECS scope. The
dataset, collected for 24 hours starting from 09:00 UTC on March
27, 2019, contains 11.1M A/AAAA queries and responses coming
from 76.2K different client IP addresses (37.4K IPv4 and 38.8K IPv6
addresses) which belong to 15.1K different client subnets (12.3K /24
IPv4 client subnets and 2.8K /48 IPv6 client subnets). The queries
are for 134925 unique hostnames from 19014 unique second-level
domains2.
5 DISCOVERING ECS-ENABLED RESOLVERS
Our CDN and Scan datasets represent two orthogonal methodolo-
gies to discover ECS-enabled resolvers - using passive observations
from a busy authoritative nameserver perspective and using active
measurements. Both can miss resolvers but an argument can be
made that both may catch a large number of them. Indeed, the
passive method may miss a resolver that never needs to resolve a
domain from the authoritative nameserver’s zone during the obser-
vation period, but for a busy authoritative nameserver (such as a
major CDN), one can assume that, given a sufficient observation
time, many resolvers will have at least some of its clients access
at least some URLs accelerated by the CDN. Similarly, the active
method will miss resolvers that are not accessible through any open
ingress resolvers, but it is conceivable that – given millions of open
ingress resolvers – many large resolvers would be used by at least
one open ingress resolver.
The number of non-Google ECS-supporting egress resolvers that
we found through our scan is lower than the number in the CDN
dataset (278 vs 4147). Moreover, of the resolvers discovered by the
scan, most (234 out of 278) are also present in the passive logs.
Clearly, between the above reasons for missing ECS resolvers, the
active method is impacted more. In addition, there can be several
further reasons for this difference. First, some recursive resolvers
(like OpenDNS [14]) maintain a whitelist of domains/nameservers
to which it sends ECS-enabled queries. The CDN domains are more
likely to be whitelisted by such resolvers while our experimental
domain is likely not as we did not submit any whitelisting requests.
Second, our authoritative nameserver is IPv4-only and would miss
IPv6 recursive resolvers (there are 145 IPv6 ECS-enabled resolvers
2Second-level domains, or SLDs, in DNS denote the two most senior labels in a host-
name, e.g., cnn.com, or ac.uk.
118
IMC ’19, October 21–23, 2019, Amsterdam, Netherlands
Rami Al-Dalky, Michael Rabinovich, and Kyle Schomp
in the CDN dataset). Third, one can imagine that a recursive re-
solver might only send ECS queries on behalf of whitelisted ingress
resolvers (e.g., from those users who explicitly opt-in, since using
ECS entails privacy implications). Our scan may miss such a re-
solver. Overall, between a large-scale passive observation and a
large-scale active measurement, the former is more effective at dis-
covering resolvers of interest. With the decreasing number of open
resolvers, the utility of the active measurements will decline further.
Still, although incomplete, the active dataset allows us to to study
more closely ECS-related aspects of resolver behavior, using the
recursive resolvers accessible externally (either directly or through
open ingress resolvers) as an example.
6 ECS BEHAVIOR OF RESOLVERS
This section considers strategies the ECS-enabled resolvers use
for deciding whether to include an ECS option in their queries
to authoritative nameservers, the ECS source prefix length they
use when they do send the option, and how they use the scope
prefix length returned by the authoritative nameservers in control-
ling caching. The first two aspects affect the degree to which the
resolvers reveal clients address information and the third aspect
assesses if the resolvers implement ECS cache control prescribed
by the authoritative nameservers correctly.
6.1 ECS Probing Strategies
RFC 7871 recommends that recursive resolvers not send ECS op-
tions blindly with every DNS query. Indeed, sending an ECS option
to an authoritative nameserver that does not support ECS need-
lessly reduces privacy. Additionally, some authoritative nameserver
implementations that do not support the ECS option have var-
ious bugs that result in dropped queries, and nameservers that
do not support the EDNS0 mechanism in general [11] will return
FORMERR responses. RFC 7871 specifies two strategies that a re-
cursive resolver can employ to decide whether to include ECS data
in queries to a given authoritative nameserver. The first strategy
is probing for ECS support: a recursive resolver can periodically
send an ECS query (e.g., hourly or daily) and omit the ECS data for
subsequent queries if the response returned by the authoritative
nameserver doesn’t have a valid ECS option. The second strategy
is to maintain a whitelist of authoritative nameservers or zones to
which the resolver will send the option. The second strategy can
reduce the complexity associated with probing and improve privacy
as recursive resolvers would send client subnet information only to
authoritative nameservers that are known to use this information
in generating a response. However, maintaining a whitelist is not
scalable as it requires out-of-band interaction between the resolvers
and authoritative nameserver, and the whitelist can quickly become
stale as the authoritative nameservers supporting ECS may change
with time.
Since the major CDN’s authoritative nameservers only respond
to ECS-enabled queries from whitelisted resolvers, it appears as a
non-ECS supporting site to non-whitelisted resolvers included in
the CDN dataset. Thus, the CDN dataset reflects the strategies of
these resolvers in probing authoritative nameservers whose ECS
support is either unknown or which previously were found to
119
not support ECS. We identify four distinct behavior patterns for
including the ECS option.
First, 3382 out of 4147 resolvers in the CDN dataset send 100%
of their A and AAAA queries with an ECS option, including all
the resolvers from the dominant AS and 287 out of 1,080 resolvers
from non-dominant ASes. These resolvers either maintain a per-
authoritative nameserver whitelist and have whitelisted the CDN’s
authoritative nameservers, or send the ECS option indiscriminately
for all A/AAAA queries to all authoritative nameservers. We are
unable to distinguish between these possibilities.
Second, 258 resolvers send ECS queries consistently but only for
specific hostnames. Furthermore, they send repeated queries for
these hostnames within the TTL periods, even when the TTLs of the
responses are very short, e.g., 20 seconds. Given past findings that
resolvers are unlikely to evict records quickly or further shorten
such short TTLs [27], it appears that these resolvers disable or
limit caching for these hostnames. We have no speculation for the
reasons behind this behavior except that perhaps these resolvers
select certain hostnames for ECS probing and conduct the probing
regardless of the cache hits.
Third, we find 32 resolvers that send ECS queries at the interval
of a multiple of 30 minutes, and non-ECS queries otherwise. More-
over, we observe that all of the probes are for a single query string
and carry the loopback IP address as client subnet information.
The use of the loopback address for ECS probing is an interesting
approach as it avoids revealing any real client information unneces-
sarily, before the ECS support by a given authoritative nameserver
is determined. However, as discussed in Section 8.1, this may cause
major confusion, and very poor edge server selection, at the author-
itative nameservers (assuming the probing queries are triggered
by real client queries). A better approach to accomplish the same
goal is to use the resolver’s own address in the ECS option. The
RFC already suggests this as an option for queries that arrive at
the resolver with source prefix length 0. We recommend to use
this approach for probing and make it mandatory. Further, since
a loopback could be technically viewed as one the resolver’s own
addresses, the RFC should clarify that by “own address” it means
the public IP address the resolver uses to send the query.
Fourth, 88 recursive resolvers consistently send ECS-enabled
queries for specific hostnames as in the second category above, but
not within a short (i.e., at most one minute) time window from a
previous query for the same name. We speculate these resolvers
include ECS in their queries for specific hostnames on a cache miss.
The remaining 387 recursive resolvers send ECS-enabled queries
for a subset of hostnames and on a subset of queries for those
hostnames. From our dataset, we are unable to discern a pattern to
their probing behavior.
Finally, we have observed that some resolvers send client subnet
information unnecessarily, for queries that are unlikely to be an-
swered based on ECS information, such as NS queries, which the
RFC recommends to be answered with zero scope. We were curious
if any resolvers violate the RFC outright by sending ECS queries to
root DNS servers. We analyze 24-hours of logs from one instance
of the A-root server using DITL data from April 2018 (the latest
DITL data available [13]) and do find 15 resolvers exhibiting this
erroneous behavior.
A Look at the ECS Behavior of DNS Resolvers
IMC ’19, October 21–23, 2019, Amsterdam, Netherlands
18
21
22
24
25
32
24,25,32/jammed last byte
24,32/jammed last byte
25,32/jammed last byte
32/jammed last byte
Source Prefix
Length
32 (IPv6)
44 (IPv6)
48 (IPv6)
56 (IPv6)
64 (IPv6)
64,96,128 (IPv6)
# of Resolvers
(Scan dataset)
8
1384
1
130
433
# of Resolvers
(CDN dataset)
3
60
19
757
1
3
1
78
3002
221
28
60
56
4
1
3
Table 1: ECS source prefix lengths. The rows sum up to more
than the total number of recursive resolvers because some
resolvers convey both IPv4 and IPv6 source prefixes.
6.2 Prefix Source Lengths
A resolver needs to make a policy decision on the length of the ECS
prefix to be conveyed to authoritative nameserver. The longer the
prefix the higher its utility for user mapping but the greater the
privacy erosion. RFC 7871 [9] recommends that recursive resolvers
truncate IPv4 addresses to at most 24 bits and IPv6 addresses to at
most 56 bits in the source prefix to maintain client privacy.
We observe that the ECS source prefix length sent by recursive
resolvers varies. Table 1 shows the number of recursive resolvers
that sent specific source prefix lengths in the Scan and CDN datasets.
While all recursive resolvers in the Scan dataset sent only a sin-
gle source prefix length per IP version, we observe that in the
CDN dataset 82 recursive resolvers sent multiple IPv4 source prefix
lengths, and 3 recursive resolvers sent multiple IPv6 source prefix
lengths in different queries. We include in the table the combina-
tions of source prefix lengths observed from these resolvers. A row
for a given combination lists the number of resolvers that sent every
prefix length in the combination. In the Scan dataset, we find the
vast majority of the resolvers follow the RFC recommendation and
send source prefix length 24. However, a possible sense of content-
ment can be deceptive as these are mostly Google resolvers. Almost
half of non-Google ECS resolvers do not indicate any truncation of
user IP addresses at all. The vast majority of these (118 out of the
130) are in Chinese ASes. The CDN dataset shows similar results
as it does not include Google’s queries to inflate the number of /24
prefixes. Moreover, the resolvers sending /32 prefixes include all
3067 resolvers from the dominant AS, which also happens to be
from China. It appears that this aspect of ECS behavior is especially
common among Chinese ISPs.
At a first glance, the resolvers sending /32 prefixes appear to ig-
nore the above RFC recommendation on client privacy preservation.
However, we find that all 130 such resolvers in the Scan dataset, and
3084 out of 3323 such resolvers in the CDN dataset (including 2912
from the dominant AS), convey the client IP addresses with the
lower byte of the address set to a fixed value, mostly 0x01 and some
0x00. Thus, these resolvers effectively reveal only 24 senior bits of
the client address, even though the source prefix length is 32. Still,
this is an incorrect implementation of the RFC recommendation
and provides misleading information to authoritative DNS.
In addition, there is a sizable number of resolvers in the CDN
dataset that submit 25-bit prefixes, violating the RFC-recommended
24-bit maximum. Because BGP routers typically limit advertised
prefix lengths to at most 24 bits [29], such specific ECS prefixes
add little benefit and unnecessarily erode client privacy. We con-
sider implications of using fewer than 24 bits in ECS prefixes in
Section 8.3.
Finally, we note that some recursive resolvers sent IPv6 prefixes
in the ECS option and in many cases those prefixes included more
than 48 bits of the client IP address. Research [25] shows that this
may not be sufficient to anonymize many IPv6 clients depending
upon the address assignment practices in use. Thus, these recur-
sive resolvers may be eroding client privacy as well even if they
follow the RFC guidance (which recommends 56-bit prefixes or,
presumably, less).
6.3 Caching Behavior
In this section, we investigate how ECS-enabled recursive resolvers
handle caching of DNS records in the presence of the ECS option
and, specifically, whether these resolvers honor cache restrictions
imposed by ECS scope in authoritative responses. Not following
these cache restrictions can interfere with the authoritative name-
servers’ traffic engineering policies that ECS is supposed to facili-
tate.
6.3.1 Methodology. Our general approach involves delivering pairs
of queries for our own domain, with different client subnet infor-
mation, to the ECS-enabled recursive resolvers, and returning re-
sponses with specially selected scope prefix length values. The first
query populates the resolver’s cache, and the second tests whether
the resolver treats it as a hit or a miss, thus assessing if resolver
respects the caching restrictions imposed by the ECS scope from
the response. The method used to deliver the pair of queries to the
recursive resolver depends upon its accessibility. We are able to
study the caching behavior of various recursive resolvers using the
following techniques:
For recursive resolvers egressing resolution paths that accept ar-
bitrary ECS prefixes we submit with our queries, we deliver queries
with our chosen ECS source prefixes either directly (if the recur-
sive resolver is open) or through the forwarders that use them. We
find 32 recursive resolvers to be amenable to this measurement,
including 24 open resolvers with which we could interact directly
and 8 closed resolvers accessible through a forwarder that passed
along our arbitrary ECS prefixes, which were then accepted by the
resolvers and used in the resolvers’ own queries to our authoritative
nameserver.
Our next technique leverages two open forwarders that use the
same recursive resolver to deliver our queries. Specifically, for the