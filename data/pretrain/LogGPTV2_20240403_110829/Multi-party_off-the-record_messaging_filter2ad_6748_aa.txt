title:Multi-party off-the-record messaging
author:Ian Goldberg and
Berkant Ustaoglu and
Matthew Van Gundy and
Hao Chen
Multi-party Off-the-Record Messaging
David R. Cheriton School of Computer Science
NTT Information Sharing Platform Laboratories
Ian Goldberg
University of Waterloo
Waterloo, ON, Canada
PI:EMAIL
Matthew D. Van Gundy
Department of Computer Science
University of California, Davis, CA, USA
PI:EMAIL
Berkant Ustao˘glu
Tokyo, Japan
PI:EMAIL
Hao Chen
Department of Computer Science
University of California, Davis, CA, USA
PI:EMAIL
ABSTRACT
Most cryptographic algorithms provide a means for secret
and authentic communication. However, under many cir-
cumstances, the ability to repudiate messages or deny a con-
versation is no less important than secrecy and authentic-
ity. For whistleblowers, informants, political dissidents and
journalists — to name a few — it is most important to have
means for deniable conversation, where electronic commu-
nication must mimic face-to-face private meetings. Oﬀ-the-
Record Messaging, proposed in 2004 by Borisov, Goldberg
and Brewer, and its subsequent improvements, simulate pri-
vate two-party meetings. Despite some attempts, the multi-
party scenario remains unresolved.
In this paper, we ﬁrst identify the properties of multi-
party private meetings. We illustrate the diﬀerences not
only between the physical and electronic medium but also
between two- and multi-party scenarios, which have impor-
tant implications for the design of private chatrooms. We
then propose a solution to multi-party oﬀ-the-record instant
messaging that satisﬁes the above properties. Our solution
is also composable with extensions that provide other prop-
erties, such as anonymity.
Categories and Subject Descriptors
K.4.1 [Management of Computing and Information
Systems]: Public Policy Issues—Privacy; E.3 [Data]: Data
Encryption; K.6.5 [Management of Computing and In-
formation Systems]: Security and Protection—Authenti-
cation; H.4.3 [Information Systems Applications]: Com-
munication Applications—Computer conferencing, telecon-
ferencing, and videoconferencing; C.2.2 [Computer-
Communication Protocols]: Network Protocols—Appli-
cations
General Terms
Security, Algorithms
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
CCS’09, November 9–13, 2009, Chicago, Illinois, USA.
Copyright 2009 ACM 978-1-60558-352-5/09/11 ...$10.00.
Keywords
Privacy, deniability, multi-party, instant messaging
1. MOTIVATION
The Internet presents a novel means of communication
— instant messaging (IM), where users can engage in ac-
tive conversations across great distances. However, IM lacks
certain fundamental security properties that a physical pri-
vate conversation can provide.
Impersonation, eavesdrop-
ping and information copying are all trivial attacks in IM.
Online communication systems commonly provide three
properties: conﬁdentiality, authentication and non-repudia-
tion. Conﬁdentiality and authentication are expected traits
of face-to-face conversations, but non-repudiation clashes
with the expectations for private communication. Non-re-
pudiation denotes a receiver’s ability to prove to a third
party, possibly a judge, that the sender has authored a mes-
sage. Although desirable under many circumstances, non-
repudiation is the very property journalists, dissidents or
informants wish to avoid.
Borisov, Goldberg and Brewer [6] argued that instant mes-
saging should mimic casual conversations. Participants of a
casual talk can deny their statements in front of outsiders,
and can sometimes deny having taken part in the talk at all.
The authors presented a mechanism called Oﬀ-the-Record
Messaging (OTR) that allows two-party private conversa-
tions using typical IM protocols. OTR aims to provide con-
ﬁdentiality, authentication, repudiation and forward secrecy,
while being relatively simple to employ.
Despite its good design, OTR has limitations, the most
important of which is that it can serve only two users. Hence
it is not suitable for online multi-party conversations, com-
monly enjoyed by casual users via Internet Relay Chat (IRC),
by open-source software developers, and by businesses that
cannot aﬀord conﬁdential meetings across vast distances [4,
§2.3].
It is non-trivial to extend OTR to allow for multi-
party conversations, as OTR uses cryptographic primitives
designed for two parties. For example, OTR uses message
authentication codes (MACs) to provide authenticity. While
for two parties MACs can provide a deniable authentica-
tion mechanism, MACs do not provide origin authentication
when used by more than two parties.
Bian, Seker and Topaloglu [4] proposed a method for ex-
tending OTR for group conversation. The crux of their so-
lution is to designate one user as the “virtual server”. While
358this may be feasible under certain circumstances, it devi-
ates from the original OTR goal, which is to mimic private
conversations.
In private group conversations there is no
virtual server responsible for smooth meetings. Moreover,
the server becomes an enticing target for malicious parties.
Finally, the server has to be assumed honest, as a dishonest
server could compromise both the conﬁdentiality and the
integrity of all messages sent during a chat session.
In this work, we present a multi-party oﬀ-the-record pro-
tocol (mpOTR), which provides conﬁdentiality, authenticity
and deniability for conversations among an arbitrary num-
ber of participants. Using our protocol, an ad hoc group of
individuals can communicate interactively without the need
for a central authority. We identify the important traits
of multi-party authentication for users, for messages and
for chatrooms that share users; that is, we take into ac-
count that two or more users may concurrently share more
than one chatroom with diﬀerent peers. When considering
privacy properties, we allow malicious insiders and identify
their goals. These multi-party chatroom properties present
new challenges that were not addressed in previous work.
An OTR transcript reveals that a user at some point com-
municated with someone. Our mpOTR protocol carries de-
niability further by allowing the user to deny everything ex-
cept, by virtue of being part of the system, that they were
willing at some point to engage in a conversation. In fact,
it is unclear how users can deny the latter at all because
by using the Internet, they already indicate their intent and
ability to engage with others. In this sense, mpOTR is closer
than OTR to simulating deniability in private conversations
in the physical world: anyone could take or have taken part
in a private conversation, but that person can plausibly deny
ever having done so.
1.1 Related work
While not the ﬁrst to address security in instant messag-
ing, Borisov, Goldberg and Brewer [6] popularized its pri-
vacy aspects, partly due to their now-popular open-source
plugin. Subsequently, more research was devoted to IM; in
fact, the original proposal was found to contain errors [10],
which were repaired in a subsequent version of OTR.
On a high level there are two approaches to secure IM.
Clients can establish their connections via a centralized server
and rely on the server for security and authentication [16].
Alternatively, participants can use shared knowledge to au-
thenticate each other [1]. OTR, which aims to simulate ca-
sual conversations, is closer to the second solution.
While there is a wide literature on IM (see [15, §2.1] for an
extensive list), little research has focused on the multi-party
privacy aspects of instant messaging. To our knowledge the
only published work with the explicit goal of achieving group
oﬀ-the-record conversations is the aforementioned result by
Bian, Seker and Topaloglu [4]. It has traits of Mannan and
Van Oorschot’s work on two-party IM [16] in the sense that
a designated user acts as a server. In some cases, e.g. the
Navy [9], it may be easy to establish a superuser whom
everyone trusts, but if the goal is a casual oﬀ-the-record
chat or users are unwilling to trust each other, agreeing on
a server user becomes problematic. We adopt the scenario
where all users are equal.
1.2 Outline
In §2 we identify the relevant properties of private meet-
ings and how they apply to IM. §3 describes the diﬀerent
players of our model for private communication; we focus
on the diﬀerent adversaries and their goals. §4 outlines our
solution at a high level and shows that we have achieved the
goals of private conversations. Due to space limitations we
only touch upon the many cryptographic primitives and the
formal deﬁnitions we use in this paper. We conclude in §5.
2. PRIVATE CHATROOMS
2.1 Conﬁdentiality
In meetings a user ˆA is willing to reveal information to
chatroom members but not outsiders. Hence chatroom mes-
sages need to remain hidden from the wider community.
In private physical communication, should a new party ap-
proach, the participants can “detect” the newcomer and take
appropriate actions.
On the Internet eavesdropping cannot be detected as eas-
ily; however, there are ways to guard against casual eaves-
droppers. Cryptographic algorithms can assure parties that
observers looking at the transmitted conversation packets
are left in dark about the communicated content. That is,
the transcript gives an eavesdropper no additional knowl-
edge above information about lengths of messages and traﬃc
patterns, beyond what the eavesdropper could have deduced
without having seen the encrypted messages.
2.2 Entity authentication
In a face-to-face meeting we identify peers via their ap-
pearances and physical attributes. By contrast, on the Inter-
net a user proves to another user knowledge of some secret
identifying information, a process known as entity authenti-
cation.
The basic goal of entity authentication is to provide evi-
dence that a peer who presents public key S ˆB also holds the
corresponding private key s ˆB. For example, suppose Alice
provides a challenge to Bob. If Bob can compute a response
that can only be computed by an entity possessing s ˆB, then
Bob successfully authenticates himself to Alice. This type
of authentication is limited in the sense that Bob only shows
knowledge of s ˆB. If Bob wants to claim any further creden-
tials like “classmate Bob”, then Alice would need additional
proofs. Two-party entity authentication has been studied in
the setting of OTR by Alexander and Goldberg [1, §4 and
§5]; their solution is suitable for pairwise authentication.
The entity authentication goal for mpOTR is to provide
a consistent view of chatroom participants: each chat par-
ticipant should have the same view of the chatroom mem-
bership. We achieve this goal by ﬁrst requiring users to
authenticate pairwise to each other. Then users exchange
a short message about who they think will take part in the
chat. Alternatively, a suitable n-party authentication prim-
itive could be used to authenticate all users to each other
simultaneously.
Authentication is challenging. In a centralized approach,
if a malicious party successfully authenticates to the server,
the security of the whole chatroom is compromised. The
problem is more evident when the server itself is malicious.
In our approach, parties do not rely on others to perform
faithful authentication. All parties check to ensure that no
party has been fooled. While we do not provide means to
359prevent malicious parties from joining a chat, users can leave
a chat if they wish. In other words a malicious party may
join a chat with a given set of honest participants only if all
the honest participants approve his entrance.
2.3 Origin authentication
Each message has a well-deﬁned source. The goal of ori-
gin authentication is to correctly identify the source. First
of all a user must be assured that the message is sent from
someone who legitimately can author messages in the cha-
troom. In OTR if Alice is assured that a valid OTR peer
sent a message and that peer is not Alice herself, then she
knows Bob sent the message and that only she and Bob know
the message1. In mpOTR if both Bob and Charlie are chat
participants, Alice should be able to distinguish messages
authored by Bob from messages authored by Charlie. She
should also be able to identify origins with respect to chat-
rooms: if Alice and Charlie are both members of chatrooms
C1 and C2, then when Alice receives a message from Charlie
in C1, no one should be able to fool her that the message
was sent in C2. In this way Alice is aware of who else sees
the message.
Message authentication should be non-repudiable among
chat participants in order to allow honest users to relay mes-
sages between one another or to expose dishonest users who
try to send diﬀerent messages to diﬀerent parties. Alice
should have the ability to convince Bob, or any other chat
member, that a message she accepted from Charlie indeed
was sent by Charlie. A word of caution: transferability in-
troduces a subtlety when combined with our deniability re-
quirement. Alice’s ability to convince Bob that Charlie au-