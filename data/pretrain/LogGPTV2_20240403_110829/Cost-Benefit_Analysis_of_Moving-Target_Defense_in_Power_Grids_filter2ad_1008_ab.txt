At bus i, we denote the power generation and load at time
t by Gi,t and Li,t respectively and the reactance of link l by
xl,t. We adopt the dc power ﬂow model [25], under which the
power ﬂow on line l at time t denoted by Fl,t, is given by
Fl,t =
(θi,t − θj,t),
1
xl,t
where θi,t and θj,t are the voltage phase angles at buses i, j ∈
N respectively at time t. For safe operation, the branch ﬂows
must be maintained within the power ﬂow limits F max
at all
time, i.e.,
k
−F max
k ≤ Fk,t ≤ F max
k
, ∀t.
The relationship between branch power ﬂows and the voltage
phase angles can be compactly represented as ft = DtAT θt,
where the matrix A ∈ RN×L is the branch-bus incidence
matrix given by
−1,
0
1,
(cid:18)(cid:20) 1
Ai,j =
if link j starts at bus i,
if link j ends at bus i ,
otherwise,
and Dt ∈ RL×L is a diagonal matrix of the reciprocal of link
reactances, i.e.,
Dt = diag
,
1
x2,t
, . . . ,
1
xL,t
x1,t
(cid:21)(cid:19)
,
and ft = [F1,t, . . . , FL,t]T (similarly gt, lt, θt denote the
vector forms of the corresponding quantities).
We assume that a subset of the links LD ⊆ L are equipped
with D-FACTS devices, and the reactances of these links can
be changed within the range [xmin, xmax], where xmin, xmax
are the reactance limits achievable by the D-FACTS devices.
= xl,t if l /∈ LD. Denote the vector
Naturally, xmin
of branch reactances by xt.
l = xmax
l
State Estimation & Bad Data Detection Technique
the state at
SE is a technique of estimating the system state from
its noisy sensor measurements [25]. Under the dc power
ﬂow model,
time t corresponds to the nodal
voltage phase angles θt, which are monitored by a set of
M measurements zt ∈ RM . The measurements correspond
to the nodal power injections, and the forward and reverse
branch power ﬂows, i.e. zt = [˜pt, ˜ft,−˜ft]T . We note that the
measurements may be different from the actual values of pt
and ft due to sensor measurement noises or cyber-attacks. The
measurement vector and the state are related as
zt = Htθt + nt,
where nt is the measurement noise, which is assumed to
have Gaussian distribution. Ht ∈ RM×N is the measurement
matrix given by
 DtAT
−DtAT
ADtAT
 .
H =
The estimate of the system state, (cid:98)θt, is computed using a
maximum likelihood (ML) estimation technique, given by
[25],
(cid:98)θt = (HT
t WHt)−1HT
t Wzt,
compares the residual deﬁned by rt = ||zt − Ht(cid:98)θt|| against
where W is a diagonal weighting matrix whose elements are
reciprocals of the variances of the sensor measurement noise.
A BDD is used to detect faulty sensor measurements. It
a pre-deﬁned threshold τ and raises an alarm if rt ≥ τ. The
detection threshold τ is determined by the SO to ensure a
certain false positive (FP) rate α, where α > 0 (usually a
small value close to zero).
Pre-perturbation
Post-perturbation
Time
Measurement
Matrix
Time
t
Ht
Time between MTD
Time between MTD
t(cid:48)
H(cid:48)
t(cid:48)
Fig. 2: MTD timeline. The vertical arrows indicate the times
at which the system is perturbed.
systems. For example, in modern-day power grids, the ﬁeld
devices (such as remote terminal units) are often IP-accessible
[26]. We also assume that the attacker can learn the system’s
measurement matrix (using the eavesdropped measurements)
and craft undetectable FDI attacks accordingly (e.g., see [17],
[18]).
Under MTD, the defender (e.g., the SO) tries to thwart
the FDI attacks by actively perturbing the transmission line
reactances to invalidate the attacker’s prior knowledge. We
assume that at the time of introducing MTD perturbations,
there are no on-going FDI attacks. Note that the power system
under consideration is naturally dynamic (even without MTD)
since the branch reactances are optimized periodically to
reﬂect temporal changes in the system load (refer to the OPF
problem in (1)). However, these natural changes are usually
insufﬁcient for effectively negating the attacker’s knowledge.
Thus, the defender deliberately introduces an additional reac-
tance perturbation to ensure the MTD’s detection capability.
The defender implements the MTD reactance perturbations
by sending MTD control commands to the remote D-FACTS
devices in the grid. Unlike the sensor measurements that
support the grid’s normal operation (e.g., extensive SCADA
measurements collected every few seconds), these commands
are much less frequent (e.g., hourly, see the discussion below),
have much more restricted scope (i.e., between the control
center and the set of D-FACTS devices only), and do not
have stringent real-time constraints. Hence, we assume that
it is feasible to encrypt the MTD commands to ensure their
conﬁdentiality.
We note that although the attacker cannot read the MTD
commands directly due to their encryption, in principle he may
still infer the MTD perturbations by monitoring their effects
on the eavesdropped sensor measurements and estimating the
new measurement matrix accordingly. Thus, the secrecy of
the MTD generally decays over time. In practice, however,
the learning will be time consuming since the attacker must
collect an informative sequence of the measurements over a
signiﬁcant duration of time. In this paper, we assume that the
time interval between the MTD perturbations is sufﬁciently
small, so that during it the attacker’s gain in knowledge (of
the measurement matrix) is negligible.
A guiding principle to estimate the perturbation time in-
terval can be obtained from [17], in which it is shown that
FDI attacks against an IEEE 14-bus system require about
500−1000 measurements of the system to successfully bypass
the BDD, even if these measurements are assumed to have
Fig. 1: System block diagram.
Undetectable FDI Attacks
the SE,
t = zt +at, where za
We consider FDI attacks against
in which the
attacker injects an attack vector at ∈ RM into the sensor
measurements, i.e., za
t is the measurement
vector under an attack. In general,
the BDD can detect
arbitrary FDI attack vectors. However, it is demonstrated [4]
that the BDD’s detection probability for attacks of the form
at = Htc, where c ∈ RN , is no greater than the FP rate α.
Such attacks are referred to as undetectable attacks.
Optimal Power Flow Problem
OPF is an optimization framework to adjust
the power
ﬂows in the network (by setting the generator dispatch and
the branch reactances) with the objective of minimizing the
generation cost for a given load vector lt ∈ RN , stated as
follows1:
COPF,t = min
gt,xt
s.t.
(cid:88)
Ci(Gi,t)
i∈N
gt − lt = Btθt,
−f max ≤ ft ≤ f max,
gmin ≤ gt ≤ gmax,
xmin ≤ xt ≤ xmax,
(1a)
(1b)
(1c)
(1d)
(1e)
where Ci(Gi,t) is the cost of generating Gi,t units of power
at node i ∈ N , the matrix Bt = ADtAT . In (1), the ﬁrst
constraint (1b) represents the nodal power balance constraint,
i.e., the power injected into a node must be equal to the power
ﬂowing out of the node. Constraints (1c)-(1e) correspond to
the branch power ﬂows, generator limits, and D-FACTS limits,
respectively. We denote g∗
t = arg maxgt,xt OPF. We note
that the OPF cost depends on the branch reactances through
the matrix Bt (in addition to the loads).
t , x∗
IV. MOVING-TARGET DEFENSE IN POWER GRIDS
A. Attacker and the Defender Model
A block diagram of the system under study is shown
in Fig. 1. We consider a strong attacker who has access
to the measurement data communicated between the ﬁeld
devices and the control center. Such access could be obtained
by exploiting vulnerabilities in power grid communication
1In the absence of D-FACTS devices installed within the grid, OPF
optimizes over the generator dispatch values only (which is the version of
OPF traditionally used [25]).
r(cid:48)(1)
2.82
r(cid:48)(2)
2.87
r(cid:48)(3)
0
r(cid:48)(4)
0
Attack 1
Attack 2
0
2.82
TABLE I: BDD residual values.
2.87
0
Fig. 3: 4 bus system under consideration. The loads are
indicated in MWs.
maximum information diversity in that they are i.i.d. Hence,
if we assume optimistically for the attacker that SCADA
measurements need to be only 5− 10 seconds apart to achieve
the information diversity, their result suggests that the time
required by the attacker to learn the system sufﬁciently well
for stealthy attacks is on the order of a few hours. Accordingly,
hourly MTD perturbations might be realistic for practical
systems. Further, we note that utilities typically solve the OPF
more frequently, i.e., every 5 − 10 minutes (whereas we only
need to update the MTD every hour or so). Thus, between the
MTD updates, the OPF will be solved as in (1).
The MTD timeline is illustrated in Fig. 2. We consider two
representative time instants t and t(cid:48) at which the reactances
are perturbed for MTD. We denote the branch reactances and
the measurement matrix after applying the MTD perturbations
by x(cid:48)
t(cid:48) respectively, and the
reactance perturbation vector by ∆xt,t(cid:48) = xt − x(cid:48)
t(cid:48). We note
that in the absence of MTD, the branch reactances and the
measurement matrix would be set to xt(cid:48) and Ht(cid:48) by solving
(1) at time t(cid:48).
L,t(cid:48)]T and H(cid:48)
1,t(cid:48), . . . , x(cid:48)
t(cid:48) = [x(cid:48)
In the rest of the paper, we address the question of how to
select MTD perturbations that are effective in detecting FDI
attacks crafted based on the outdated (i.e., pre-pertubation)
knowledge, and examine their cost-beneﬁt tradeoff. We use
a(cid:48)
t(cid:48) to denote the value of a power system parameter at after
the MTD. E.g., θ(cid:48)
t(cid:48) denotes the nodal voltage phase angles
after the MTD. To motivate our inquisition, we now illustrate
an example to show that certain randomly selected MTD
perturbations will remain vulnerable to FDI attacks crafted
with the attacker’s pre-pertubation knowledge of the system.
B. A Motivating Example
We consider the 4-bus example shown in Fig. 3 [27]. For
simplicity, we assume that the system load is ﬁxed (indicated
in Fig. 3) and does not change with time. Furthermore, the pre-
perturbation system state and the reactance settings xt (and
Ht) are adjusted by solving (1). The resulting branch ﬂows,
generation values and OPF cost are listed in Table II. The
attacker is assumed to have learned the pre-perturbation matrix
Ht.
To
the MTD,
implement
consider
we
reactance
∆x(1)
perturbation
vectors
t,t(cid:48) = η[x1, 0, 0, 0]T , ∆x(2)
respectively
given
t,t(cid:48) = η[0, x2, 0, 0]T , ∆x(3)
four
by