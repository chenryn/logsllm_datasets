inthetransportofQAintothecell.
For most reactions, mass balance leads to a specification of a system of differential
equations to describe this reaction network or biological circuit [12]. The boxes in the
middleofthisdiagramwiththeRNAandproteinspeciesaretheobservables.Theboxes
atthebottomarethereactantsintheunderlyingbiochemicalpathway.Themodelisafirst
approximation of what needs to be considered to predict induction of the qa cluster and
its products. This model is a highly simplified version of what the cell is actually doing
withtheQA.WehavenotputthemolecularmachinethattranscribesDNAintomessenger
RNA.NeitherhaveweputinthemolecularmachinethattranslatesmessengerRNAinto
protein.Asafirstapproximation,transcriptionalandtranslationalmachineryaretreatedas
aninfiniteresource,availableasneeded.Theaimistointroduceonlyenoughofthe“wiring
schematic” of the organism into the model to make the model predictive about how the
systemrespondswhenthesystemisperturbedgenetically,environmentally,orchemically.
ThemodelisthenfittedtotheobservedRNAandproteinprofiles(theboxesinthethird
andfourthrowsofthecircuit)andevaluatedforfitinthepresenceofvariedperturbations.
The system is perturbed genetically when the qa-2 gene is knocked out, and the system
observed.Thesystemisperturbedchemicallywhenaninhibitorisaddedtoinhibittheqa-2p
geneproduct,andthesystemisobserved.Thesystemisperturbedenvironmentallywhen
sucroseisaddedorremovedasthepreferredcarbonsource,andthesystemisobserved.In
eachperturbationthecircuitissimulatedwithareactionnetworksimulator,whichleadsto
predictionsofthemessengerRNAandproteinprofilesovertime.ThepredictedRNAand
proteinprofileseithermatchordonotmatchtheobservedprofiles.Inalllikelihood,itwill
benecessarytoaddadditionalcomponentstothewiringschematicinfigure1eveninthis
well-understoodparadigmofeukaryoticgeneregulation[27].
Imagineextendingthiswholeprocesstothecell.Onestartingpointmaybesomething
like a cell with only 256 genes [42] in a very small microbial genome. Can we build the
circuitandshowthatthecircuitdescribeshowthecellfunctions?Thisishypothesis-driven
genomics.Tocarryoutthisprogramonamodelmicrobialsystemrequiresthecompletion
ofdifferenttaskswiththegeneticblueprintinhand,including:
1. genetic,chemical,orenvironmentalperturbationofthecell,
2. RNAandproteinprofilingtodescribingthestateofthecellafterperturbation,
3. building protein/protein and protein/DNA interaction maps to build the links in the
biologicalcircuit[82],
4. fittingthekineticsmodelstoobservedmessengerRNAandproteinprofiles,
5. evaluatingthefitofthemodel,
6. searchingforanimprovedmodel,
7. storingtheintermediatecircuitmodelforlaterquery;and
8. repeatingtheprocess.
We model this process as an automated workflow. In the next several sections we will
describeonedistinctpartofthislargerworkflow,identifyingtheprotein-proteinlinksinthe
INTELLIGEN:ADISTRIBUTEDWORKFLOWSYSTEM 49
circuits.Itisclearthattherearemanysubtasksthatwillbecarriedoutbydifferentgroups
of researchers. Then there is the challenge of integrating the informationto carry out the
fittingprocess,nottomentionthecomputationaltaskoffittingalargereactionnetwork.
Aswithsequencingthehumangenome,theprocessofcomputinglife,i.e.identifyingthe
biologicalcircuit,involvesmanynewcomputationalproblems.Oneoftheseisconstructing
software that allows the design, construction, execution, management, and adaptation of
workflowstocarryoutcircuitidentificationorsomesubsetofthetasksneededforcircuit
identification. The experiments require typically over 100,000 task executions. The tasks
arecomplex,andastheprojectunfoldsoverthecourseofseveralyearsnewtechnologies
become available, or discoveries are made that require the workflow to be adapted. Data
routinelycomefrommultiplesourcesinmultiplestoragemedia.Thereisalsothechallenge
ofdatabaseintegrationandefficientstorageandintegrationofdatawithcomplexstructure.
The problem of constructing a map of all the protein-protein interactions requires new
algorithmssimilartotheonesinphysicalmapping[82].Oncethedataareintegrated,novel
algorithmsareneededforsimulatingthelargereactionnetworks,whichareattheheartof
thedataintegrationstep.
2.2. Processmanagementandworkflowsystems
Aworkflowisanactivityinvolvingthecoordinatedexecutionofmultipletasksperformedby
differentprocessingentities[53].Thesetaskscouldbemanual,orautomated,eithercreated
specificallyforthepurposeoftheworkflowapplicationbeingdeveloped,orpossiblyalready
existing as legacy programs. A workflow process is an automated organizational process
involvingbothhuman(manual)andautomatedtasks.
Workflow management is the automated coordination, control and communication of
work as is required to satisfy workflow processes. A Workflow Management System
(WfMS)isasetoftoolsprovidingsupportforthenecessaryservicesofworkflowcreation
(whichincludesprocessdefinition),workflowenactment,andadministrationandmonitor-
ingofworkflowprocesses[39].Thedeveloperofaworkflowapplicationreliesontoolsfor
thespecificationoftheworkflowprocessandthedataitmanipulates.Thespecificationtools
cooperatecloselywiththeworkflowrepositoryservice,whichstoresworkflowdefinitions.
Theworkflowprocessisbasedonaformalizedworkflowmodelthatisusedtocapturedata
andcontrol-flowbetweenworkflowtasks.
Theworkflowenactmentservice(includingaworkflowmanagerandtheworkflowrun-
timesystem)consistsofexecution-timecomponentsthatprovidetheexecutionenvironment
fortheworkflowprocess.Aworkflowruntimesystemisresponsibleforenforcinginter-task
dependencies,taskscheduling,workflowdatamanagement,andforensuringareliableexe-
cutionenvironment.Administrativeandmonitoringtoolsareusedformanagementofuser
andworkgrouproles,definingpolicies(e.g.,security,authentication),auditmanagement,
processmonitoring,tracking,andreportingofdatageneratedduringworkflowenactment.
Workflowtechnologyhasmaturedtosomeextent,andcurrentproductsareabletosup-
portarangeofapplications(fortechnologyandstateoftheartoverview,see[2,23,28].
Nevertheless,manyadditionallimitationsremain,especiallyinsupportingmoredemanding
applications, more dynamic environments and for better support for human involvement
50 KOCHUTETAL.
in organizational activities and better support for Quality of Service (QoS) management
[17,73].Inthispaper,wefocusonproblemsinvolvedinsupportingalargegenomicsproject,
inwhichanumberofadditionaldemandsareplacedontheworkflowmanagementsystem.
These demands include high adaptability to varying experimental conditions in the lab,
automaticqualityassessmentoftheexperimentalresults,aswellasassistingtheworkflow
administrator and researchers in introducing changes in the workflow due to inadequate
qualityortimelinessoftheresults.Researchissuesbasedontheserequirementshavebeen
investigatedaspartoftheMETEORprojectandworkflowmanagementsystemdeveloped
attheLSDISlaboftheComputerScienceDepartmentattheUniversityofGeorgia[58],
whichweuseinthiseffort.
2.3. FungalGenomeDatabase
TheFungalGenomeDatabase(FGDB)[50,69]isa10-yeardevelopmenteffortthatsupports
storage,retrieval,anddistributionofallofourdataovertheWeb[40]forphysicalmapping,
geneticmapping,sequencing,andnowprotein-proteininteractionmappingexperiments.An
importantscientificcontributionofFGDBisitssupportoforderedsequencesofgenomic
objects in order to meet the efficient computation requirements involving genome data.
FGDBisimplementedintheobject-relationaldatabasesystem,Oracle8iEnterpriseEdition,
onaSUNEnterprise250server.Theoutlineofthedatabaseschemaispresentedinfigure2
intheformofaUML(UnifiedModelingLanguage)classdiagram[71].
We have also developed Java-based tools to visualize the data in FGDB, which can
be downloaded from our web site [33, 79, 87, 88]. FGDB supports physical mapping of
Aspergillus nidulans, N. crassa, Aspergillus flavus, Nectria haematococca, and Pneumo-
cystiscariniiandsequencingprojectsforN.crassaandP.carinii.
2.4. WorkflowmanagementsystemMETEOR
METEOR is a comprehensive Workflow Management System. METEOR’s architecture
includesacollectionoffourservices:WorkflowBuilder,WorkflowRepository,Workflow
Enactment, and Workflow Manager. Workflow Enactment includes two services: ORB-
WorkandWebWork.BothORBWorkandWebWorkusefullydistributedimplementations.
WebWork[61],anentirelyWeb-basedenactmentservice,isacomparativelylight-weight
implementationthatiswell-suitedforavarietyofenterpriseworkflowprocessapplications
thatinvolvelimiteddataexchangeanddonotneedtobedynamicallychanged.ORBWork
[51](usedinthisproject)isbettersuitedformoredemanding,mission-criticalenterprise
applicationsrequiringhighscalability,robustnessanddynamicmodifications.Theoverall
architectureofthesystemisshowninfigure3.
2.4.1.Workflowbuilderservice. Thisserviceconsistsofanumberofcomponentsthatare
usedtodesigngraphicallyandspecifyaworkflow,insomecasesleavingnoextraworkafter
adesignedworkflowisconvertedtoaworkflowapplicationbytheruntimecodegenerator.
Itsthreemaincomponentsareusedtospecifytheentiremapoftheworkflow,dataobjects
manipulatedbytheworkflow,aswellasthedetailsoftaskinvocation,respectively.Thetask
INTELLIGEN:ADISTRIBUTEDWORKFLOWSYSTEM 51
Figure2. Databaseschema(moredetailedschemaat[40]).
Builder Service
Workflow
Designer
Workflow
Translator/ Workflow
Generator Repository
Repository Service
WEBWork ORBWork
Workflow Workflow
Engine Engine Enactment Service
Figure3. METEORarchitecture.
designcomponentprovidesinterfacestoexternaltaskdevelopmenttools(e.g.,Microsoft’s
FrontPagetodesigntheinterfaceofausertask,orarapidapplicationdevelopmenttool).
This service supports modeling of complex workflows consisting of varied human and
automatedtasksinaconceptualmannerusingeasy-to-usetools.Inparticular,thedesigner
52 KOCHUTETAL.
oftheworkflowisshieldedfromtheunderlyingdetailsoftheinfrastructureortheruntime
environment. At the same time, very few restrictions regarding the specification of the
workflowareplacedonthedesigner.
The workflow specification created using this service includes all the predecessor-
successordependenciesbetweenthetasksaswellasthedataobjectsthatarepassedamong
the different tasks. It also includes definitions of the data objects, and the details of task
invocation.ThespecificationmaybeformattedtobecompliantwiththeWorkflowProcess
Definition Language (WPDL) of the Workflow Management Coalition [39] and its sub-
sequentlydefinedXMLsyntax.Thisserviceassumesnoparticularimplementationofthe
workflowenactmentservice(runtimesystem).Itsindependencefromtheruntimesupports
separatingtheworkflowdefinitionfromtheenactmentserviceonwhichitwillultimately
beinstalledandused.Workflowprocessdefinitionsarestoredintheworkflowrepository.
2.4.2.Workflowrepositoryservice. TheMETEORRepositoryServiceisresponsiblefor
maintaininginformationaboutworkflowdefinitionsandassociatedworkflowapplications.
Thegraphicaltoolsintheworkflowbuilderservicecommunicatewiththerepositoryservice
andretrieve,update,andstoreworkflowdefinitions.Thetoolsarecapableofbrowsingthe
contentsoftherepositoryandincorporatingfragments(eithersub-workflowsorindividual
tasks) of already existing workflow definitions into the one currently being created. The
repositoryserviceisalsoavailabletotheenactmentservice(seebelow)andprovidesthe
necessaryinformationaboutaworkflowapplicationtobeinvoked.
ThefirstversionoftherepositoryservicewasbasedontheInterfaceIAPI,asspecifiedby
WfMC[39].Subsequently,wehavebuiltthesecondversionoftheworkflowrepository[8],
inwhichworkflowsarestoredasXML-documentstofacilitatetheirWeb-interchangeon
adistributedsystemmanagedbyMETEOR.Theresearcher(oraserviceoftheMETEOR
system itself) can query the workflow repository in order to introduce dynamic changes
neededforworkflowadaptation,asdescribedlater.
2.4.3. ORBWork enactment system. The task of the enactment service is to provide an
executionenvironmentforprocessingworkflowinstances.BothORBWorkandWebWork
have suitable code generators that can be used to build workflow applications from the
workflowspecificationsgeneratedbythedesignserviceorthosestoredintherepository.
In the case of ORBWork, the code generator outputs specifications for task schedulers
(seebelow),includingtaskroutinginformation,taskinvocationdetails,dataobjectaccess
information, user interface templates, and other necessary data. The code generator also
outputs the code necessary to maintain and manipulate data objects created by the data
designer.Thetaskinvocationdetailsareusedtocreatethecorresponding“wrapper”code
forincorporatinglegacyapplicationswithrelativeease.Themanagementservicesupports
monitoringandadministeringworkflowinstancesaswellasconfigurationandinstallation
oftheenactmentservices.
2.5. Adaptabilityanddynamicworkflows
Recently,therehasbeenanincreasinginterestindevelopingWfMSscapableofsupporting
adaptive and dynamic workflows. Such systems must be uniquely sensitive to a rapidly
INTELLIGEN:ADISTRIBUTEDWORKFLOWSYSTEM 53
changing process execution triggered by collaborative decision points, context-sensitive
information updates, and other external events. The majority of current work addresses
relevantissuesatmodelingandlanguagelevels[24,36,45,53,57,70]whiletherelevant
issuesinvolvingorganizationalchangesappearin[24,38].Aparticularlydifferentapproach
tosupportingadaptiveworkflow(capableofreactingtothechangesinlocalrulesandother
conditions) has been developed using the notion of migrating workflows) [19]. Related
issuesofintegratingworkfloworcoordinationtechnologiesandcollaborativetechnologies
areinvestigatedin[31,72].
ORBWork utilizes a fully distributed scheduler in that the scheduling responsibilities
are shared among a number of participating task schedulers, according to the designed
workflow map [51]. Each task scheduler receives the scheduling specifications at startup
from the Workflow Repository (currently, the repository service sends the specifications
via the HTTP protocol). Each set of task specifications includes the input dependency
(inputtransitions),outputtransitionswithassociatedconditions,anddataobjectssentinto
and out of the task. In the case of a human task (performed directly by an end-user),
the specifications include an HTML template of the end-user interface page(s). In the
case of a non-transactional automatic task (typically performed by a computer program),
thespecificationsalsoincludeataskdescriptionandthedetailsofitsinvocation.Finally,
in the case of a transactional task, the specification includes the details of accessing the
desireddatabaseandthedatabasequery.