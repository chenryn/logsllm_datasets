damage other ISPs. 
to  meet 
Example 1.   Define a Stackelberg price-quality competition game 
as follows:  Extend the partial order of nodes induced by the graph 
to  any  complete  ordering,  such  that  downstream  nodes  appear 
before  their parents.  In this order, each node selects a contract to 
offer to its parents, consisting of a rest of path quality, and a linear 
price.  In the routing game, each node selects a next hop at every 
time,  consistent  with  its  advertised  rest  of  path  quality.    The 
Stackelberg price-quality competition game can be implemented in 
our model with ROPc monitors, by using the strategy in the proof, 
above.  It has the following useful property: 
Claim  4.    The  Stackelberg  price-quality  competition  game  yields 
optimal routes in SPE. 
The proof is given in the appendix.  This property is favorable from 
an innovation perspective, since firms that invest in high quality will 
tend to fall on the optimal path, gaining positive payoff.  In general, 
however,  investments  may  be  over  or  under  rewarded.    Extra 
conditions may be given under which innovation decisions approach 
perfect efficiency for large innovations.  We omit the full analysis 
here.  (cid:2) 
Example 2.    Alternately,  we  can  imagine  that  players  report  their 
private  information  to  a  central  authority,  which  then  assigns  all 
contracts.  For example, contracts could be computed to implement 
the cost-minimizing VCG mechanism proposed by Feigenbaum, et 
al.  in  [7].    With  ROPc  monitors,  we  can  adapt  this  mechanism  to 
maximize  welfare.    For  node,  i,  on  the  optimal  path,  L,  the  net 
payment must equal, essentially, its contribution to the welfare of S, 
D, and the other nodes.  If L’ is an optimal path in the graph with i 
removed, the profit flow to i is, 
)
(
qu
(
qu
(6) 
,  
-
)
-
(cid:14)(cid:14)
˛
˛
jLj
Lj
,
c
j
„
i
+
c
'
j
L
L
'
where  Lq  and 
'Lq  are the qualities of the two paths.  Here, (price, 
quality)  contracts  ensure  that  nodes  report  their  qualities  honestly.  
The  incentive  structure  of  the  VCG  mechanism  is  what  motivates 
nodes to report their costs accurately. 
A nice feature of this game is that individual innovation decisions 
are  efficient,  meaning  that  a  node  will  invest  in  an  innovation 
whenever the investment cost is less than the increased welfare of 
the optimal data path.  Unfortunately, the source may end up paying 
more than the utility of the path.  (cid:2) 
Notice  that  with  just  E2Ec,  a  weaker  version  of  Claim  3  holds.  
Bilateral  (price,  quality)  contracts  can  be  maintained  in  an 
equilibrium that is fixed-route and coalition-proof, but not protect-
the-innocent.  This is done by writing contracts to punish everyone 
on the path when the end to end quality drops.  If the path length is 
)P
n, the first hop pays nP to the source, the second hop pays  (
n 1-
to the first, and so forth.  This ensures that every node is punished 
sufficiently to make cheating unprofitable.  For the reasons we gave 
previously, we believe that this solution concept is less than ideal, 
since 
trigger 
punishments for potential competitors. 
it  allows  for  malicious  nodes 
to  deliberately 
Up  to  this  point,  we  have  adopted  fixed-route  coalition-proof 
protect-the-innocent  equilibrium  as  our  desired  solution  concept, 
and  shown  that  ROPc  monitors  are  sufficient  to  create  some 
competition  games  that  are  desirable  in  terms  of  service  diversity 
and  innovation.    As  the  next  claim  will  show,  rest  of  path 
monitoring  is  also  necessary  to  construct  such  games  under  our 
solution concept.  
Before  we  proceed,  what  does  it  mean  for  a  game  to  be  desirable 
from the perspective of service diversity and innovation?  We will 
use a very weak assumption, essentially, that the game is not fully 
commoditized for any node.  The claim will hold for this entire class 
of games. 
Definition:    A  competition  game  is  nowhere-commoditized  if  for 
each node, i, not adjacent to D, there is some assignment of qualities 
and marginal costs to nodes, such that the optimal data path includes 
i, and i has a positive temptation to cheat. 
, 
In the case of linear contracts, it is sufficient to require that 
and that every node make positive profit under some assignment of 
qualities and marginal costs. 
¥<CI
Strictly speaking, ROPc monitors are not the only way to construct 
these desirable games.  To prove the next claim, we must broaden 
our notion of rest of path monitoring to include the similar ROPc’ 
monitor,  which  attests  to  the  quality  starting  at  its  own  node, 
through the end of the path.  Compare the two monitors below: 
ROPc: gives a node proof that the path quality from the next node 
to the destination is not correct. 
ROPc’: gives a node proof that the path quality from that node to 
the destination is correct. 
We  present  a  simplified  version  of  this  claim,  by  including  an 
assumption  that  only  one  node  on  the  path  can  cheat  at  a  time 
(though  conspirators  can  still  exchange  side  payments).    We  will 
discuss the full version after the proof. 
Claim 5.  Assume a set of monitors, and a nowhere-commoditized 
bilateral  contract  competition  game  that  always  maintains  the 
optimal  quality  in  fixed-route  coalition-proof  protect-the-innocent 
equilibrium, with only one node allowed to cheat at a time.  Then 
for each node, i, not adjacent to D, either i has an ROPc monitor, or 
i’s children each have an ROPc’ monitor. 
Proof:   First, because of the fixed-route assumption, punishments 
must be purely monetary. 
Next,  when  cheating  occurs,  if  the  payment  does  not  go  to  the 
source  or  destination,  it  may  go  to  another  coalition  member, 
rendering  it  ineffective.    Thus,  the  source  must  accept  some 
monetary  compensation,  net  of  its  normal  flow  payment,  when 
cheating occurs.  Since the source only contracts with the first hop, 
it must accept this money from the first hop.  The source’s contract 
must  therefore  distinguish  when  the  path  quality  is  normal  from 
when it is lowered by cheating.  To do so, it can either accept proofs 
from  the  source,  that  the  quality  is  lower  than  required,  or  it  can 
accept proofs from the first hop, that the quality is correct.  These 
nodes will not rationally offer the opposing type of proof. 
By definition, any monitor that gives the source proof that the path 
quality  is  wrong  is an ROPc monitor.  Any monitor that gives the 
first hop proof that the quality is correct is a ROPc’ monitor.  Thus, 
at least one of these monitors must exist. 
By the protect-the-innocent assumption, if cheating occurs, but the 
first hop is not a cheater, she must be able to claim the same size 
reward  from  the  next  ISP  on  the  path,  and  thus  “pass  on”  the 
punishment.    The  first  hop’s  contract  with  the  second  must  then 
distinguish when cheating occurs after the first hop.  By argument 
similar  to  that  for  the  source,  either  the  first  hop  has  a  ROPc 
monitor, or the second has a ROPc’ monitor.  This argument can be 
iterated along the entire path to the penultimate node before D. 
Since the marginal costs and qualities can be arranged to make any 
path the optimal path, these statements must hold for all nodes and 
their children, which completes the proof.  (cid:2) 
The two possibilities for monitor correspond to which node has the 
burden  of  proof.    In  one  case,  the  prior  node  must  prove  the 
suboptimal quality to claim its reward.  In the other, the subsequent 
node  must  prove  that  the  quality  was  correct  to  avoid  penalty.  
Because  the  two  monitors  are  similar,  it  seems  likely  that  they 
require comparable costs to implement.  If submitting the proofs is 
costly,  it  seems  natural  that  nodes  would  prefer  to  use  the  ROPc 
monitor, placing the burden of proof on the upstream node. 
Finally, we note that it is straightforward to derive the full version of 
the  claim,  which  allows  for  multiple  cheaters. 
  The  only 
complication  is  that  cheaters  can  exchange  side  payments,  which 
makes  any  money  transfers  between  them  redundant.    Because  of 
this, we have to further generalize our rest of path monitors, so they 
are less constrained in the case that there are cheaters on either side. 
5.1  Implementing Monitors 
Claim 5 should not be interpreted as a statement that each node must 
compute  the  rest  of  path  quality  locally,  without  input  from  other 
nodes.  Other monitors, besides ROPc and ROPc’ can still be used, 
loosely  speaking,  as  building  blocks.    For  instance,  network 
tomography is concerned with measuring properties of the network 
interior with tools located at the edge.  Using such techniques, our 
source might learn both individual node qualities and the data path.  
This is represented by the following two monitors: 
i:  (source-based  hop  quality)  A  monitor  that  gives  the 
SHOPc
source proof of what the quality of node i is. 
SPATHc:  (source-based  path)  A  monitor  that  gives  the  source 
proof  of  what  the  data  path  is  at  any  time,  at  least  as  far  as  it 
matches the equilibrium path. 
With these monitors, a punishment mechanism can be designed to 
fulfill the conditions of Claim 5.  It involves the source sharing the 
proofs  it  generates  with  nodes  further  down  the  path,  which  use 
them  to  determine  bilateral  payments.    Ultimately  however,  the 
proof  of  Claim  5  shows  us  that  each  node  i’s  bilateral  contracts 
require proof of the rest of path quality.  This means that node i (or 
possibly  its  children)  will  have  to  combine  the  proofs  that  they 
receive  to  generate  a  proof  of  the  rest  of  path  quality.    Thus,  the 
combined process is itself a rest of path monitor. 
What we have done, all in all, is constructed a rest of path monitor 
i  as  building  blocks.    Our  new  monitor 
using  SPATHc  and  SHOPc
includes  both  the  component  monitors  and  whatever  distributed 
algorithmic mechanism exists to make sure nodes share their proofs 
correctly. 
This mechanism can potentially involve external institutions.  For a 
concrete  example,  suppose  that  when  node  i  suspects  it  is  getting 
poor rest of path quality from its successor, it takes the downstream 
node  to  court.    During  the  discovery  process,  the  court  subpoenas 
proofs of the path and of node qualities from the source (ultimately, 
there must be some threat to ensure the source complies).  Finally, 
for  the  court  to  issue  a  judgment,  one  party  or  the  other  must 
compile  a  proof  of  what  the  rest  of  path  quality  was.    Hence,  the 
entire discovery process acts as a rest of path monitor, albeit a rather 
costly monitor in this case. 
Of course, mechanisms can be designed to combine these monitors 
at  much  lower  cost.    Typically,  such  mechanisms  would  call  for 
automatic  sharing  of  proofs,  with  court  intervention  only  as  a  last 
resort.  We defer these interesting mechanisms to future work. 
i  generates  more 
As  an  aside,  intuition  might  dictate  that  SHOPc
information than ROPc; after all, inferring individual node qualities 
seems  a  much  harder  problem.    Yet,  without  path  information, 
i  is  not  sufficient  for  our  first-best  innovation  result.    The 
SHOPc
proof of this demonstrates a useful technique: 
i  and  PRc,  and  a 
Claim  6.  With  monitors  E2E,  ROP,  SHOPc
nowhere-commoditized  bilateral  contract  competition  game,  the 
optimal quality cannot be maintained for all assignments of quality 
and  marginal  cost,  in  fixed-route  coalition-proof  protect-the-
innocent equilibrium. 
Proof: Because nodes cannot verify the data path, they cannot form 
a proof of what the rest of path quality is.  Hence, ROPc monitors do 
not exist, and therefore the requirements of Claim 5 cannot hold.  (cid:2) 
6.  CONCLUSIONS AND FUTURE WORK 
It is our hope that this study will have a positive impact in at least 
three different ways.  The first is practical: we believe our analysis 
has  implications  for  the  design  of  future  monitoring  protocols  and 
for public policy. 
For  protocol  designers,  we  first  provide  fresh  motivation  to  create 
monitoring systems.  We have argued that the poor accountability of 
the Internet is a fundamental obstacle to alleviating the pathologies 
of  commoditization  and  lack  of innovation.  Unless accountability 
improves, these pathologies are guaranteed to remain. 
Secondly, we suggest directions for future advances in monitoring.  
We  have  shown  that  adding  verifiability  to  monitors  allows  for 
some  improvements  in  the  characteristics  of  competition.      At  the 
same  time,  this  does  not  present  a  fully  satisfying  solution.    This 
paper has suggested a novel standard for monitors to aspire to – one 
of supporting optimal routes in innovative competition games under 
fixed-route  coalition-proof  protect-the-innocent  equilibrium.    We 
have shown that under bilateral contracts, this specifically requires 
contractible rest of path monitors. 
This is not to say that other types of monitors are unimportant.  We 
included an example in which individual hop quality monitors and a 
path monitor can also meet our standard for sustaining competition.  
However, in order for this to happen, a mechanism must be included 
to  combine  proofs  from  these  monitors  to  form  a  proof  of  rest  of 
path  quality.    In  other  words,  the  monitors  must  ultimately  be 
combined  to  form  contractible  rest  of  path  monitors.    To  support 
service differentiation and innovation, it may be easier to design rest 
of  path  monitors  directly,  thereby  avoiding  the  task  of  designing 
mechanisms for combining component monitors. 
As  far  as  policy  implications,  our  analysis  points  to  the  need  for 
legal  institutions  to  enforce  contracts  based  on  quality.    These 
institutions must be equipped to verify proofs of quality, and police 
illegal  contracting  behavior.    As  quality-based  contracts  become 
numerous  and  complicated,  and  possibly  negotiated  by  machine, 
this  may  become  a  challenging  task,  and  new  standards  and 
regulations  may  have  to  emerge  in  response.    This  remains  an 
interesting and unexplored area for research. 
The second area we hope our study will benefit is that of clean-slate 
architectural design.  Traditionally, clean-slate design tends to focus 
on  creating  effective  and  elegant  networks  for  a  static  set  of 
requirements.    Thus,  the  approach  is  often  one  of  engineering, 
which  tends  to  neglect  competitive  effects.    We  agree  with 
Ratnasamy,  Shenker,  and  McCanne,  that  designing  for  evolution 
should  be  a  top  priority  [11].    We  have  demonstrated  that  the 
network’s monitoring ability is critical to supporting innovation, as 
are the institutions that support contracting.  These elements should 
feature  prominently  in  new  designs.    Our  analysis  specifically 
suggests  that  architectures  based  on  bilateral  contracts  should 
include  contractible  rest  of  path  monitoring.    From  a  clean-slate 
perspective, these monitors can be transparently and fully integrated 
with the routing and contracting systems. 
Finally,  the  last  contribution  our  study  makes  is  methodological.  
We  believe  that  the  mathematical  formalization  we  present  is 
applicable  to  a  variety  of  future  research  questions.    While  a 
significant  literature  addresses  innovation  in  the  presence  of 
network effects, to the best of our knowledge, ours is the first model 
of  innovation  in  a  network  industry  that  successfully  incorporates 
the actual topological structure as input.  This allows the discovery 
of new properties, such as the weakening of market forces with the 
number  of  ISPs  on  a  data  path  that  we  observe  with  low-
accountability.   
Our  method  also  stands  in  contrast  to  the  typical  approach  of 
distributed  algorithmic  mechanism  design.    Because  this  field  is 
based  on  a  principle-agent  framework,  contracts  are  usually 
proposed by the source, who is allowed to make a take it or leave it 
offer to network nodes.  Our technique allows contracts to emerge 
from a competitive framework, so the source is limited to selecting 
the most desirable contract.  We believe this is a closer reflection of 
the industry. 
Based on the insights in this study, the possible directions for future 
research  are  numerous  and  exciting.    To  some  degree,  contracting 
based on quality opens a Pandora’s Box of pressing questions:  Do 
quality-based  contracts  stand  counter  to  the  principle  of  network 
neutrality?  Should ISPs be allowed to offer a choice of contracts at 
different  quality  levels?    What  anti-competitive  behaviors  are 
enabled  by  quality-based  contracts?    Can  a  contracting  system 
support optimal multicast trees? 
In this study, we have focused on bilateral contracts.  This system 
has seemed natural, especially since it is the prevalent system on the 
current  network.    Perhaps  its  most  important  benefit  is  that  each 
contract is local in nature, so both parties share a common, familiar 
legal jurisdiction.  There is no need to worry about who will enforce 
a punishment against another ISP on the opposite side of the planet, 
nor is there a dispute over whose legal rules to apply in interpreting 
a contract. 
Although  this  benefit  is  compelling,  it  is  worth  considering  other 
systems.  The clearest alternative is to form a contract between the 
source  and  every  node  on  the  path.    We  may  call  these  source 
contracts.    Source  contracting  may  present  surprising  advantages.  
For instance, since ISPs do not exchange money with each other, an 
ISP  cannot  save  money  by  selecting  a  cheaper  next  hop.  
Additionally,  if  the  source  only  has  contracts  with  nodes  on  the 
intended path, other nodes won’t even be willing to accept packets 
from this source since they won’t receive compensation for carrying 
them.    This  combination  seems  to  eliminate  all  temptation  for  a 
single  cheater  to  cheat  in  route.    Because  of  this  and  other 
encouraging features, we believe source contracts are a fertile topic 
for further study. 
Another  important  research  task  is  to  relax  our  assumption  that 
quality can be measured fully and precisely.  One possibility is to 
assume that monitoring is only probabilistic or suffers from noise.  
Even  more  relevant  is  the  possibility  that  quality  monitors  are 
fundamentally incomplete.  A quality monitor can never anticipate 
every dimension of quality that future applications will care about, 
nor  can  it  anticipate  a  new  and  valuable  protocol  that  an  ISP 
introduces.    We  may  define  a  monitor  space  as  a  subspace  of  the 
QM (cid:204) ,  and  a 
quality  space  that  a  monitor  can  measure, 
corresponding  monitoring  function  that  simply  projects  the  full 
range of qualities onto the monitor space, 
MQm ﬁ: