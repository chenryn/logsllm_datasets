# A Data Streaming Algorithm for Estimating Entropies of OD Flows

**Authors:**
- Haiquan (Chuck) Zhao, Georgia Institute of Technology
- Ashwin Lall, University of Rochester
- Mitsunori Ogihara, University of Rochester
- Oliver Spatscheck, AT&T Labs – Research
- Jia Wang, AT&T Labs – Research
- Jun (Jim) Xu, Georgia Institute of Technology

## Abstract

Entropy has recently gained significant importance as a key metric in network measurement. Previous research has demonstrated its utility in traffic clustering and anomaly detection. While the entropy of traffic observed at a single point has been well-studied, the challenge of measuring the entropy of traffic between every origin-destination (OD) pair remains an open problem. In this paper, we present the first solution to this challenging problem. Our sketch builds upon and extends the Lp sketch by Indyk with substantial innovations. We provide calculations showing that our data streaming algorithm is feasible for high-speed links using commodity CPU and memory at a reasonable cost. Simulations using real-world traffic traces from a tier-1 ISP backbone link demonstrate the high accuracy of our algorithm.

## Categories and Subject Descriptors

C.2.3 [Computer-Communication Networks]: Network Operations—Network Monitoring

## General Terms

Algorithms, Measurement, Theory

## Keywords

Network Measurement, Entropy Estimation, Data Streaming, Traffic Matrix, Stable Distributions

## 1. Introduction

The empirical entropy of network traffic has recently been proposed as an effective and reliable metric for anomaly detection and network diagnosis [3, 11, 15, 24, 25]. However, measuring this quantity exactly in real-time, especially on high-speed links, is not feasible due to the high computational and memory requirements. To address this, various data streaming algorithms have been proposed to approximate this quantity. Data streaming involves processing a long stream of data items in one pass using a small working memory (called a sketch) to answer a class of queries about the stream. The challenge is to use this sketch to "remember" as much relevant information as possible.

We observe that it is often important to know the entropies of origin-destination (OD) flows, where an OD flow is defined as all the traffic that enters an ingress point (origin) and exits at an egress point (destination). Knowing these quantities provides significant insights into the dynamics of traffic within an ISP network. However, existing entropy estimation algorithms [1, 2, 5, 16] cannot be extended to solve this new problem. In particular, the traffic matrix estimation literature [18, 21, 22, 23, 27] has ruled out the naive approach of separating traffic at each ingress point into various OD flows in real-time and feeding them to existing entropy estimation algorithms. In this paper, we propose the first solution to this new problem.

### 1.1 Motivation

The ability to estimate entropy for all OD flows in a network can be highly beneficial. On today's Internet, network performance degradation and service disruption can be caused by a wide range of events, including anomalies (e.g., DDoS attacks, network failures, and flash crowds) and scheduled network maintenance tasks (e.g., router IOS updates and customer migration). Many of these events occur in a distributed manner, making their detection and impact evaluation require monitoring of traffic from multiple locations across the network. Changes in traffic distribution may be invisible in traditional traffic volume matrices but can be captured by examining the entropy of every OD flow in the network.

For example, consider a situation where a link fails and is taken out for maintenance. The traffic flows that used to be carried on that link will likely be redistributed to alternative paths. If no alternative path exists or the network experiences long convergence delays, the flows may abort completely. In either case, traffic distribution on multiple links across the network will change. These changes might be too small to detect using volume-based detection algorithms. However, the overall change in traffic distribution can be large, and examining traffic entropy along with the traffic matrix for all OD flows can help capture such distributed and dynamically occurring events.

Another example is a DoS attack. When there is a distributed DoS attack launched from outside the network, its impact may not be immediately visible in the traffic matrix in terms of traffic volume change. However, it is crucial for operators to detect and mitigate the attack early to minimize negative impacts on services. Certain types of DoS attacks are difficult to detect due to their low-rate nature [14, 26]. In such cases, real-time detection based on traffic entropy estimation can be achieved.

### 1.2 Our Solution and Contributions

In this work, we propose the first solution to the challenging problem of estimating the entropies of all OD flows. Our key innovation is a sketch that allows us to approximately estimate not only the entropy of a data stream but also the entropy of the intersection of two data streams A and B from the sketches of A and B. We refer to this property as the "intersection measurable property" (IMP). All existing entropy estimation algorithms have the property of estimating the entropy of a data stream, but none have IMP.

Our sketch builds upon and extends the Lp sketch by Indyk [12] with significant additional innovations. Indyk's sketch was designed for the estimation of the Lp norm of a stream. We observe that Indyk's Lp sketch has the desirable IMP, allowing for the estimation of the Lp norm of an OD flow Oi ∩ Dj using the Lp sketches at Oi and Dj. However, we had to develop the IMP theory of Lp sketch ourselves, as IMP was never claimed in [13].

Our most important contribution is the discovery that the entropy of an OD flow can be approximated by a function of just two Lp norms (Lp1 and Lp2, p1 ≠ p2) of the OD flow. With this insight, our sketch at each ingress and egress point is simply one Lp1 sketch and one Lp2 sketch. This not only solves the problem but also finds a nice application for the Lp sketch. From a theoretical perspective, our solution resolves one of the open questions posed by Cormode [7].

Our contributions can be summarized as follows:
1. We build a mathematical connection between our problem and Indyk’s Lp norm estimation problem, leading to a highly cost-effective solution.
2. We extend Indyk’s (ε, δ) analysis of Lp sketches using asymptotic normality of order statistics, resulting in tighter (though slightly less rigorous) accuracy bounds.
3. We modify Indyk’s algorithm to run fast enough for processing traffic at very high-speed links (e.g., 10 million packets per second).
4. We thoroughly evaluate the accuracy of our solution by simulating it on real-world packet traces collected at a tier-1 ISP backbone, demonstrating that our algorithm delivers very accurate estimations of the OD flow entropies.

The remainder of this paper is organized as follows:
- Section 2 provides a high-level overview of how the different components of our scheme work.
- Sections 3 through 6 describe the major components of our algorithm.
  - Section 3 introduces stable distributions and describes Indyk’s algorithm to estimate the Lp norm.
  - Section 4 shows how to estimate entropy from the Lp norm.
  - Section 5 demonstrates the intersection measurable property (IMP) of the Lp norm algorithm.
  - Section 6 modifies the Lp norm algorithm to improve its accuracy under tight resource constraints.
- Section 7 discusses the hardware implementation of our algorithm.
- Section 8 demonstrates the accuracy of our algorithm via simulations on real-world data.
- Section 9 briefly surveys related previous work.
- Section 10 concludes the paper. The Appendix contains the proofs of some of the theorems.

## 2. Problem Statement and Overview

In this section, we precisely define the problem of estimating the entropies of OD flows and provide an overview of our solution approach. As defined in [16], given a stream S of packets containing n (transport-layer) flows with sizes (number of packets) a1, a2, ..., an, respectively, the empirical entropy H(S) is defined as:

\[ H(S) = -\sum_{i=1}^{n} \frac{a_i}{s} \log_2 \left( \frac{a_i}{s} \right) \]

where \( s = \sum_{i=1}^{n} a_i \) is the total number of packets in S. We have shown that to estimate the empirical entropy of a stream S, it suffices to estimate a related quantity called the entropy norm ||S||H, defined as:

\[ ||S||_H = \sum_{i=1}^{n} a_i \ln(a_i) \]

since H(S) can be rewritten as:

\[ H(S) = \log_2(e) \left[ \ln(s) - \frac{1}{s} \sum_{i=1}^{n} a_i \ln(a_i) \right] \]

and s is usually a known quantity.

The entropy of an OD flow stream ODij between an ingress point i and an egress point j is defined as the entropy of their intersection, i.e., H(ODij) ≡ H(Oi ∩ Dj). To derive this entropy value, we need to measure both the entropy norm ||Oi ∩ Dj||H and s in order to compute H(Oi ∩ Dj). Note that in our case, s is the volume of the OD flow and is an unknown quantity that needs to be estimated separately. As described in Section 1.2, our solution is to invent a sketch for estimating the entropy norm of a stream that has the intersection measurable property (IMP).

Our algorithm and sketch build upon Indyk’s classical results on estimating the Lp norm of a stream using the theory of stable distributions, for values of p in (0, 2]. In [13], Indyk presents an algorithm for computing the Lp norm of a stream S. For a stream S that contains n flows of sizes a1, ..., an, its Lp norm ||S||p is defined as:

\[ ||S||_p = \left( \sum_{i=1}^{n} |a_i|^p \right)^{1/p} \]

We discover that the data streaming solution of Indyk has the aforementioned IMP. Interestingly, this property was never claimed in [13] or elsewhere. We will develop an entropy estimation technique that fully takes advantage of this property and offer its rigorous analysis.

While Indyk’s work is very influential, the practical importance of being able to estimate the Lp norm for values other than 1 and 2 was never clear. In our work, the Lp norms for p values slightly above or below 1 play a crucial role. Realizing that Indyk’s algorithm can be extended for estimating the Lp norms of an OD flow, we conjectured that it is possible to approximate the function x ln(x) using a linear combination of a small number of functions in the family {xp | p ∈ (0, 2]}. Specifically, we conjectured that:

\[ x \ln(x) \approx \sum_{j=1}^{k} c_j \cdot x^{p_j} \]

where ||S||pj, j = 1, ..., k, can be estimated using our extension of Indyk’s algorithm for stream intersection. This conjecture has been proven correct. We found that by using a linear combination of only two functions in the form of \( \frac{1}{2\alpha} (x^{1+\alpha} - x^{1-\alpha}) \), we can approximate x ln(x) very closely for all x values in a large interval, e.g., [1, 1000] or [1, 5000]. Here, α is a tunable parameter that takes small values. For example, in Figure 1, we show how closely we can approximate x ln(x) using \( 10(x^{1.05} - x^{0.95}) \) within the interval [1, 1000].