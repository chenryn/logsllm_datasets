As described in §2.2, however, we assume in this pa-
per an adversary who has the ability to manipulate an ob-
server’s map of the Internet, for instance by withholding
some routing advertisements, withholding traceroute
responses, and so on. Instead of relying on these manip-
ulable data sources, we base our proofs on physical, nat-
ural limitations: the fact that information cannot travel
faster than the speed of light. As an additional depar-
ture from this line of work, we focus predominately on
nation-state adversaries, which are easier to locate and
geographically reason about than networks (which may
have points of presence throughout the world).
DeTor’s proofs of avoidance come at a cost that sys-
tems that do not offer provable security do not have to
USENIX Association
26th USENIX Security Symposium    345
pay. DeTor discards any circuit for which it cannot ob-
tain proof of avoidance, but it is possible that there are
circuits that achieve avoidance that do not meet the re-
quirements of the proof. As a result, DeTor clients have
fewer circuits to choose from than more permissive sys-
tems that rely only on AS maps, potentially leading to
greater load imbalance in DeTor. We believe this to be
a fundamental cost of security with provable properties;
however, we also believe that future work can reduce
DeTor’s “false negatives.”
Avoidance routing Recent work has proposed not to
sneak through attackers’ networks, but to avoid them al-
together. Edmundson et al. [11] propose to use maps of
the Internet’s routing topology to infer through which
countries packets traverse, and to proxy trafﬁc through
those who appear to avoid potential attackers. However,
as with AS-aware Tor variants, this approach relies on
data that can be signiﬁcantly manipulated by the kind of
powerful routing-capable adversaries that we consider.
In this paper, we seek techniques that yield provable se-
curity, even in the presence of such adversaries.
Alibi Routing [24] uses round-trip time measurements
and speed of light constraints to provably avoid user-
speciﬁed, “forbidden” geographic regions. The Alibi
Routing protocol only uses a single relay; we general-
ize this approach to apply to Tor’s three-hop circuits.
Moreover, our never-twice application avoids doubly-
traversing any region of the world, and does not require
an a priori deﬁnition of a forbidden region. We review
Alibi Routing next.
3 Background: Alibi Routing
We build upon techniques introduced in Alibi Rout-
ing [24] to achieve provable avoidance in Tor.
In this
section, we brieﬂy review how Alibi Routing achieves
its proofs of avoidance, and we outline the challenges we
address in translating it to Tor.
3.1 Proofs of Avoidance
Alibi Routing [24] is a system that provides proof that
packets have avoided a user-speciﬁed geographic region.
Speciﬁcally, a source node s speciﬁes both a destination
t and a forbidden region F. Node s trusts all nodes that
are provably outside F (we return to this point at the end
of this subsection). Alibi Routing then seeks to identify
a relay a that is not in F and that satisﬁes the following
property. Let R(x,y) denote the round-trip time (RTT)
between hosts x and y, and let Re2e denote the end-to-end
RTT that s observes; then for a user-conﬁgurable δ ≥ 0:
(1 + δ )· Re2e <
(cid:40)
min
min f∈F [R(s, f ) + R( f ,a)] + R(a,t)
R(s,a) + min f∈F [R(a, f ) + R( f ,t)]
(1)
When this inequality holds, it means that the RTT for
s forwarding packets through a to t is signiﬁcantly less
than the smallest round-trip time that would also include
a host in the forbidden region. In other words, if s can
verify that its trafﬁc is going through a and t, then the
trafﬁc could not also go through F without inducing a
noticeable increase in end-to-end round-trip time. With
such a relay, s can prove that his packets avoided F with
two pieces of evidence:
1. A MAC (or digital signature) from a attesting to the
fact that it did indeed forward the packet, and
2. A measured end-to-end round-trip time that satisﬁes
Eq. (1).
These two pieces of evidence form an “alibi”: the packets
went through a and could not also have gone through F,
therefore it avoided F. As a result, Levin et al. [24] refer
to a relay a who provides such a proof an alibi peer.
These proofs of avoidance must be obtained for each
round-trip of communication. The factor of δ acts as an
additional buffer against variable latencies. The larger δ
is, the fewer potential alibis there will be, but they will
be able to provide proofs of avoidance even when packets
suffer an uncharacteristically high delay, for instance due
to congestion. DeTor makes use of δ in the same manner.
One technical detail in Alibi Routing’s proof that
we will make use of is the process of computing
min f∈F [R(s, f ) + R( f ,a)] and min f∈F [R(a, f ) + R( f ,t)].
After all, how can one compute the shortest RTT through
a host in an untrusted region of the world? The insight is
that, if we know the geographic locations of the hosts in
question, then we can obtain a lower bound on the round-
trip time between them. In particular, if D(x,y) denotes
the great-circle distance between hosts at locations x and
y, then we have the following bound:
[R(s, f ) + R( f ,a)] + R(a,t) ≥
min
f∈F
(cid:18)
·
3
c
min
f∈F
(cid:19) (2)
[D(s, f ) + D( f ,a)] + D(a,t)
where c denotes the speed of light. In general, informa-
tion cannot travel faster than the speed of light; in prac-
tice, information tends to travel no faster than two-thirds
the speed of light. Coupled with a 2× factor to capture
the RTT, this gives us the 3
c value in Eq. (2) as a way to
convert the great-circle distance between two hosts to a
346    26th USENIX Security Symposium
USENIX Association
minimum RTT on the Internet. Provided with the set of
geographic coordinates deﬁning the border of F, one can
compute the geographic coordinate f ∈ F that provides
this minimum distance. Critically, computing this does
not require any participation from F (e.g., sending re-
sponses to pings)—it only depends on knowing the geo-
graphic coordinates of those trusted to forward the pack-
ets: s, t, and a.
As mentioned above, Alibi Routing assumes that node
s trusts all nodes that are provably outside of its speciﬁed
forbidden region F. To determine if a node n is deﬁni-
tively outside of F, s directly measures the RTT to n by
asking it to echo a random nonce. Recall from §2 that
attackers cannot lie about having lower latencies; thus, if
this measured RTT is smaller than the theoretical mini-
mum RTT between s and F, then n cannot be in F. Alibi
Routing applies these trust inferences transitively. We
adopt this assumption in our DeTor, as well.
3.2 Remaining Challenges
Applying Alibi Routing to Tor is not
immediately
straightforward. First, Alibi Routing is deﬁned only with
respect to a single alibi relay, whereas Tor circuits con-
sist of three or more relays. Even if we were to extend the
proofs from Eqs. (1) and (2), it is not obvious how well
this would work in practice. As we will demonstrate, we
are able to extend Alibi Routing’s approach to Tor, and
that it is surprisingly effective at ﬁnding “alibi circuits.”
Second, the notion of a ﬁxed forbidden region does
not directly apply to the problem of deanonymization at-
tacks like those described in §2.3.
Recall that these
attacks arise when an adversary is on both (a) the path
between source and entry node and (b) the path between
exit node and destination. Avoiding a region F altogether
(as with Alibi Routing) ensures that F could not have
launched such an attack, but it is overly restrictive to do
so. Note that it is not necessary to avoid a given region
altogether—it sufﬁces to ensure that the region is not on
the path twice, at both the entry and exit legs of the cir-
cuit. This relaxation allows users to protect themselves
against deanonymization attacks launched by their home
countries, whereas it would be impossible to avoid one’s
own country altogether.
Moreover, using a static forbidden region would re-
quire users to anticipate all of those who could have
launched an attack. Ideally, a solution would be more
adaptive, by permitting avoidance of the form “wherever
packets might have gone between source and entry, avoid
those places between exit and destination.”
We demonstrate an adaptive “never-twice” tech-
nique that provably avoids regions that could launch
deanonymization attacks, and we demonstrate that it is
highly successful on the Tor network.
4 Provable Avoidance in Tor
In this section, we introduce how to construct proofs
that a round-trip of communication (a packet and its re-
sponse) over a Tor circuit has avoided geographic regions
of the world. These proofs have the beneﬁt of being
easy to obtain (they largely consist of taking end-to-end
round-trip time measurements), easy to deploy (they do
not require modiﬁcations to Internet routing or buy-in
from ISPs), and resilient to manipulation.
4.1 Never-Once Avoidance
The goal of never-once avoidance is to obtain proof that
at no point during a round-trip of communication could
a packet or its response have traversed a user-speciﬁed
forbidden region F. Like with Alibi Routing, our proof
consists of two parts:
First, we obtain proof that the packets did go through
selected Tor routers. Whereas Alibi Routing traverses
only a single relay, we traverse a circuit of at least three
hops.
Fortunately, Tor already includes end-to-end in-
tegrity checks in all of its relay cells [8], which success-
fully validate so long as the packets followed the circuit
and were unaltered by those outside or inside the circuit.
This serves as proof that the packets visited each hop,
and, thanks to onion routing, that they visited each hop
in order.
Second, we obtain proof that it could not also have
gone through the forbidden region. To this end, we mea-
sure the end-to-end round-trip time Re2e through the en-
tire circuit, and we compute the shortest possible time
necessary to go through each circuit and the forbidden
region:
Rmin =
· min
3
c
Dmin(s,F,e,m,x,t)
Dmin(s,e,F,m,x,t)
Dmin(s,e,m,F,x,t)
Dmin(s,e,m,x,F,t)
(3)
Here, Dmin(x1, . . . ,xn) denotes the shortest possible
great-circle distance to traverse nodes x1 → ··· → xn in
order. We abuse notation to also account for regions—
for example, Dmin(s,F,e) = min f∈F [D(s, f ) + D( f ,e)].
Note that Eq. (3) is in essence a generalization of Alibi
Routing’s single-relay proof (Eq. (2)), and can be easily
extended to support longer circuits.
Equation (3) captures the shortest possible distance to
go through each hop in the circuit (in order) as well as
through F. It also applies the observation that informa-
tion tends to travel no faster than two-thirds the speed
of light on the Internet. For example, in Figure 1, the top
circuit has its shortest detour through F between the mid-
dle and exit nodes; the bottom circuit’s shortest trajectory
USENIX Association
26th USENIX Security Symposium    347
Ultimately, we seek to show that there is no point p for
which 3
c · Dmin(s, p,e,m,x, p,t) ≤ Re2e.
Iterating through all points on the Earth would be
computationally infeasible; although we do not have a
closed-form solution, we present an efﬁcient empirical
check.
Note that the best-case scenario for the attacker is
that all trafﬁc on the (e,m) and (m,x) legs of the cir-
cuit take the least amount of time possible: a total of
c · D(e,m,x). This leaves a total remaining end-
Rm = 3
to-end latency of Re2e − Rm. This is the total time the
packets have to traverse (s,e) and (x,t); the larger this
value, the greater the chance an attacker can be on the
path of both of these legs (in the extreme, were this dif-
ference on the order of seconds, there would be enough
time to theoretically traverse any point on the planet on
both legs).
A useful way to visualize this problem is as two el-
lipses. Recall that an ellipse with focal points a and b
and radius r represents all points p such that d(a, p) +
d(p,b) ≤ r. Larger values of r result in ellipses with
greater area, while larger values of d(a,b)/r result in
more elongated ellipses (in the extreme, an ellipse with
d(a,b) = 0 is a circle).
Thus, we can view this problem as two ellipses—one
with focal points s and e and radius re and the other with
focal points x and t and radius rx, such that re + rx =
3 · (Re2e − Rm).
c
If these two ellipses intersect, then there could exist a
host through which the trafﬁc on both the entry and exit
leg could have traversed.
Never-twice avoidance of a country The above tech-
nique for avoiding double traversal of a single host does
not preclude a powerful attacker such as a nation-state
from deploying multiple vantage points within their bor-
ders. For example, as in Figure 2b, consider an ellipse
around the entry leg that traverses southwest Europe, and
an exit leg that traverses central and eastern Europe—
even though the two ellipses never intersect one another,
they share two common nation states: France and Bel-
gium. We next explore how to avoid double traversal of
countries.
This process begins by identifying the set of countries
that either leg could go through were all of the extra la-
tency spent on either leg individually. This corresponds
to two ellipses: one with focal points s and e and radius
3 · (Re2e − Rm)− D(x,t), and the other with focal points
c
3 · (Re2e − Rm)− D(s,e). We intersect
x and t and radius c
these ellipses with a database of countries’ borders to ob-
tain the sets of countries that could have been traversed
on the entry leg (Ce) and on the exit leg (Cx).