detection fidelity through enhanced contextual-awareness provided
by CoordiNetZ, and (iv) the use of lightweight security-based
microservices.
1) Spoof Protection. While science projects inside an SDMZ
network share host DTNs, each DTN may require different access
controls and resource allocation rules, per project. To prevent a host
DTNfromemployingtagspoofingtobypasstheserules, CoordiNetZ
integrates spoofing protection module within the SDN switch (using
OVS [31]). It provides a mapping between tags and hosts managed
by the CNZ Controller. Spoof protection module will filter any flow
that does not match the known mapping of tags for that host. Figure
15 illustrates an edge switch maintaining the list of portID to tagID
mappings necessary for spoofed flow filtering. SciMon also prevents
spoofing that may arise from one project spoofing traffic from
another. It does this by monitoring process and file system accesses,
and analyzing network IO events for flows and their associated tags.
2) Data Exfiltration. To illustrate CoordiNetZ data exfiltration
prevention, let us consider the following scenario. An attacker gains
(a) Data exfiltration.
(b) Collaborative protection.
Figure 14: Security use cases with context-awareness.
access to a DTN, for example, through an exploit targeting GridFTP
(e.g., using CVE-2012-3292 [8]). Once inside, the attacker then
seeks to exfiltrate DTN-hosted data, which could not be effectively
prevented with simple application-centric access control and
authentication mechanisms. However, SciMon monitors and enforces
a DTN-internal data export policy defined by both project and site
administrators. SciMon policies enforce access restrictions based (a)
usernames, (b) application binaries, (c) ability to access sensitive files,
(d) ability to send data out of host (protocol level restrictions such
as packet size, protocol etc.), and (e) situational attributes (such as
time, location, geolocation etc.). Attempts to initiate outbound flows
of project data to unauthorized sites trigger violations that occurs
during the process, network, and file I/O interactions (see Figure 14a),
which are forwarded to the CNZ Controller for coordinated security
enforcement. The CNZ Controller would configure network-level
devices with a block rule to thwart the data exfiltration.
Figure 15: Spoof protection with Port-ID & Tag mappings.
3) Collaborative Protection. Clustered monitoring (see Section
2), prevents the IDS instances from detecting attacks (such as DDoS
and reconnaissance scans) using threshold-based filters. The use of
high-performance data transfer applications (e.g., GridFTP, ddftp),
which rely on encryption and parallel data streaming, further com-
plicates network-based intrusion detection. CoordiNetZ addresses
this problem by providing contextual information from the host
DTN to BroIDS, allowing the traffic to be aggregated and categorized
for filtering. In Figure 14b, the host DTN node adds flow-based tags
to the traffic that need to be processed by the same IDS instance,
and adds the necessary rules in the SDN switch to steer the traffic
in accordance to flow-based tags to the respective IDS entity.
4) Protection with Lightweight Microservices. Two factors that
degradeSDMZelephantflowperformanceacrosssitesare:(i)stateful
inspection devices such as firewalls and DPIs [14], and (ii) dynamic
flow steering to middleboxes and associated security-state migration.
12
(cid:4)(cid:16)(cid:18)1(cid:18)(cid:11)(cid:8)(cid:17)(cid:16)(cid:15)(cid:13)(cid:12)1(cid:1)(cid:10)(cid:14)1(cid:13)(cid:2)(cid:4)(cid:16)(cid:18)1(cid:1)(cid:4)(cid:16)(cid:18)1(cid:7)(cid:10)(cid:14)1(cid:13)(cid:1)(cid:10)(cid:14)1(cid:13)(cid:3)(cid:4)(cid:16)(cid:18)1(cid:8)(cid:4)(cid:16)(cid:18)1(cid:9)(cid:4)(cid:16)(cid:18)1(cid:5)(cid:4)(cid:16)(cid:18)1(cid:6)(cid:7)(cid:14)(cid:10)(cid:13)(cid:14)(cid:9)(cid:3)(cid:16)(cid:12)(cid:1)(cid:7)(cid:14)(cid:10)(cid:13)(cid:1)(cid:7)(cid:14)(cid:10)(cid:13)(cid:8)(cid:6)(cid:11)(cid:15)(cid:10)(cid:1)(cid:6)(cid:11)(cid:15)(cid:10)(cid:2)(cid:7)(cid:14)(cid:10)(cid:13)(cid:4)(cid:7)(cid:14)(cid:10)(cid:13)(cid:5)(cid:9)23(cid:22)3(cid:17)(cid:15)(cid:7)(cid:11)(cid:16)(cid:17)(cid:15)1(cid:22)(cid:18)(cid:1)(cid:12)(cid:18)(cid:22)(cid:1)(cid:12)(cid:18)(cid:22)(cid:3)(cid:6)(cid:10)(cid:7)(cid:8)(cid:1)(cid:6)(cid:10)(cid:7)(cid:8)(cid:2)(cid:12)(cid:18)(cid:22)(cid:5)(cid:12)(cid:18)(cid:22)(cid:4)(cid:12)(cid:18)(cid:22)(cid:2)(cid:9)23(cid:22)(cid:1)(cid:9)23(cid:22)(cid:12)(cid:9)23(cid:22)(cid:13)(cid:9)23(cid:22)(cid:14)2 (cid:10)(cid:1)(cid:9)(cid:11)(cid:17)(cid:37)(cid:7)(cid:18)(cid:17)27(cid:30)(cid:33)(cid:32)(cid:34)4(cid:29)(cid:2)(cid:11)(cid:23)AB(cid:34)46B9(cid:32)(cid:31)2(cid:4)(cid:10)(cid:1)(cid:7)(cid:18)(cid:17)(cid:1)(cid:37)(cid:9)(cid:18)(cid:17)2(cid:5)(cid:10)(cid:1)(cid:9)(cid:18)(cid:17)(cid:1)(cid:37)(cid:8)(cid:11)(cid:17)2(cid:6)(cid:10)(cid:1)(cid:8)(cid:11)(cid:17)(cid:1)(cid:37)  (cid:11)(cid:17)(cid:14)(cid:29)(cid:32)(cid:32)(cid:34) 1(cid:33)4B94(cid:29)3(cid:14)(cid:29)(cid:32)(cid:32)(cid:34)3(cid:11)(cid:23)AB(cid:34)46B9(cid:32)(cid:31)3(cid:12)(cid:16)(cid:13)- (cid:14)(cid:29)(cid:32)(cid:32)(cid:34)(cid:4)(cid:14)(cid:29)(cid:32)(cid:32)(cid:34)(cid:5)(cid:18)4(cid:34):9(cid:31)(cid:26)(cid:2)(cid:14)(cid:14)(cid:1) (cid:25)(cid:27)(cid:21)(cid:29)(cid:34)(cid:14)(cid:29)(cid:28)(cid:22)(cid:23)(cid:30)(cid:30)(cid:7)(cid:25)(cid:26)(cid:23)(cid:1)(cid:9)(cid:13)(cid:12)(cid:23)(cid:31)(cid:1)(cid:9)(cid:13)AAA(cid:8)(cid:28)(cid:30)(cid:31)(cid:1)(cid:5)(cid:17)(cid:12)(cid:4)(cid:12)(cid:20)(cid:4)(cid:28)(cid:27)(cid:31)(cid:29)(cid:28)(cid:26)(cid:26)(cid:23)(cid:29)(cid:16)(cid:5)(cid:12)(cid:1)(cid:4)(cid:28)(cid:27)(cid:31)(cid:29)(cid:28)(cid:26)(cid:26)(cid:23)(cid:29)(cid:14)(cid:28)(cid:26)(cid:25)(cid:22)(cid:34)(cid:1)(cid:15)(cid:32)(cid:26)(cid:23)(cid:30)(cid:1)(cid:24)(cid:28)(cid:29)(cid:1)(cid:5)(cid:21)(cid:31)(cid:21)(cid:1)(cid:6)(cid:33)(cid:24)(cid:25)(cid:26)(cid:31)(cid:29)(cid:21)(cid:31)(cid:25)(cid:28)(cid:27)(cid:7)(cid:10)(cid:13)(cid:19)(cid:11)(cid:13)(cid:5)(cid:18)(cid:25)(cid:28)(cid:26)(cid:21)(cid:31)(cid:25)(cid:28)(cid:27)(cid:30)(cid:18)(cid:25)(cid:28)(cid:26)(cid:21)(cid:31)(cid:25)(cid:28)(cid:27)(cid:30)(cid:7)(cid:10)(cid:13)(cid:19)(cid:11)(cid:13)(cid:5),AD(cid:39)(cid:1)(cid:12)(cid:22)0)0(cid:24))A(cid:34)(cid:39)CA(cid:32)(cid:32)(cid:28)C(cid:21)(cid:12)0(cid:1))A(cid:34)(cid:39)CA(cid:32)(cid:32)(cid:28)C-(cid:12)(cid:21)(cid:20)AC(cid:39)(cid:1)9(cid:28)(cid:39)(cid:25)(cid:31)(cid:32)D(cid:1) (cid:9)(cid:7)(cid:7)(cid:7)(cid:1)(cid:6)(cid:9)(cid:7)&(cid:7)(cid:4)(cid:1)(cid:2)(cid:1)((cid:36)(cid:36)(cid:1)-(cid:34)(cid:29)A(cid:5)(cid:1))A(cid:34)(cid:39)(cid:28)H(cid:39)(cid:22)(cid:25)(cid:30)(cid:6)(cid:26)(cid:25)D(cid:28)9(cid:1)(cid:13)(cid:32)A(cid:41)(cid:1)CF(cid:32)(cid:28)D(cid:13)(cid:16)1(cid:23)(cid:17)1(cid:12)(cid:12)(cid:25)(cid:39)(cid:25)(cid:1)(cid:13)(cid:32)A(cid:41))A(cid:34)(cid:39)(cid:28)H(cid:39)(cid:1)-(cid:34)(cid:29)AC(cid:33)(cid:25)(cid:39)(cid:31)A(cid:34)(cid:22)(cid:25)(cid:30)(cid:1)-(cid:34)(cid:29)AC(cid:33)(cid:25)(cid:39)(cid:31)A(cid:34)(cid:26)(cid:28)(cid:34)2/2F6GI(cid:45)(cid:8)(cid:7)(cid:7)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)6GI(cid:45)2/(cid:8)(cid:8)(cid:7)(cid:8)6GI(cid:45)2/(cid:9)(cid:8)(cid:8)(cid:7)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)6GI(cid:45)2/((cid:8)(cid:8)(cid:8)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)6GI(cid:45)2/(cid:8)(cid:1)(cid:1)(cid:1)(cid:26)(cid:28)(cid:34)2/5(cid:46)(cid:45)(cid:1)6GI(cid:45)(cid:8)(cid:4)(cid:1)6GI(cid:45)2/*(cid:1)(cid:1)(cid:26)(cid:28)(cid:34)2/5(cid:46)(cid:45)6GI(cid:45)(cid:8)(cid:7)(cid:7)6GI(cid:45)2/*(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:8)(cid:7)(cid:8)6GI(cid:45)2/(cid:13)(cid:8)(cid:8)(cid:7)6GI(cid:45)2/(cid:14)(cid:8)(cid:8)(cid:8)6GI(cid:45)2/*7(cid:8)7(cid:9)7(7)7*7(cid:13)7(cid:8)(cid:1)(cid:2)7(cid:42)GG(cid:33)(cid:1)1(cid:46)(cid:28)I(cid:31)(cid:1)(cid:26)(cid:28)(cid:29)D(cid:32) 7(cid:8)(cid:1)(cid:2)0GIM(cid:28)I(cid:31)AF(cid:34)(cid:1)(cid:26)(cid:28)(cid:29)D(cid:32) 7(cid:13)(cid:1)(cid:2)0GIM(cid:28)I(cid:31)AF(cid:34)(cid:1)(cid:26)(cid:28)(cid:29)D(cid:32) (cid:26)(cid:28)(cid:34)2/5(cid:46)(cid:45)(cid:1)6GI(cid:45)(cid:8)(cid:4)(cid:1)6GI(cid:45)2/(cid:8)(cid:1)(cid:1)7*(cid:1)(cid:2)0GIM(cid:28)I(cid:31)AF(cid:34)(cid:1)(cid:26)(cid:28)(cid:29)D(cid:32) 7/3(cid:27)(cid:1).GI(cid:32)(cid:1)4(cid:32)(cid:45)MGIC2/72/7.4(cid:27)(cid:1).GGI(cid:31)AF(cid:28)(cid:45)GI(cid:1)(cid:6)(cid:1)7/4(cid:1).GF(cid:45)IGDD(cid:32)I(cid:26)(cid:28)(cid:34)(cid:1)(cid:15)(cid:44)(cid:44)A(cid:34)F(cid:39)(cid:32)F(cid:45)(cid:1)(cid:45)G(cid:1)6IG(cid:36)(cid:32)(cid:30)(cid:45)(cid:44)(cid:5)Toaddressthesechallenges, CoordiNetZemploysstatelessmicroser-
vices that decompose full-fledged firewall capabilities built on top of
existing stateless NF platform [27, 49]. We built a few light-weight
functionally customized security microservices (e.g., tag-based
filtering, spoofing protection, connection tracking, exfiltration pro-
tection, rate limiting) that can be introduced along the data path via
network function chains to provide on-demand security capabilities.
A.3 Flow Records
Figure 16: Sample process flow table entry.
Figure 17: DTN flow record field (Flow Record = Timestamp +
SciFlow Record + SciMon Record).
A.4 Policy Composition & Optimizations
Incremental Policy Composition. Policy updates are nec-
A.4.1
essary whenever network conditions and security states change,
site topologies are modified, or when projects are added, migrated,
or completed (removed). When such changes occur, the policy
composition and conflict resolution must be recomputed. In general,
policy updates could result in tens to hundreds of rule modifications.
Incremental composition helps reduce the overall run-time of
composition, by avoiding the recomposition of the whole policy
state, which may consume several seconds to minutes (see ยง6(2)).
Rather, incremental composition recomposes only the updated set
of policies with the whole set of composed policies.
Updating a policy from the composition graph involves first delet-
ing the policy from the graph, and then inserting a modified version.
Deleting a policy requires one to remove the edges that belong to the
policy from graph. However, the composition procedure might have
removed portions of other policies that had a higher precedence dur-
ing conflict resolution. Hence, these lost portions must be returned.
Two items are recorded during composition that accelerate incre-
mental composition time. First, for each original policy, a reference
pointer to each edge is maintained in the graph that belongs to the
policy. If a policy is split into multiple sub-policies during conflict
resolution, the edges associated with these child policies are stored.
Second, during a conflict, if a policy that has a higher precedence
causes the policy to be split into multiple sub-policies, then the policy
number of the lower-precedence policy is recorded in a data struc-
ture associated with the higher-precedence policy. During deletion,
13
this data structure enables CoordiNetZ to restore edges from the
deleted policy when it finds that other policies also depend on these
edges. This internal bookkeeping enables edge deletion in constant
time, resulting in orders of magnitude faster overall composition.
From the aforementioned equation (1) in ยง4.3, the major time com-
plexity of the algorithm lies with the iteration of policies O(L) over
the list of all source nodes S J in the composed bi-partite graph G and
comparing the policyโs source node s(p) having m host entities with
the graphโs source node S(G) having n entities. The overall complex-
ity calculation for finding overlaps among the source nodes stage
is therefore O(LโS J โ(mโn)). Consider the policyโs source node s(p)
has m host entities (i.e., h1, ... hm), and the graphโs source node S(G)
hasn hostentities(i.e.,h1,...hn).Thenaivecomparisonoftwosubsets
of size m and n will result in O(mโn) complexity. Similarly, for each
propertydefinedontheedge,thecompositionengineincursacompu-
tation complexity ofO(q +r), whereq and r are the number of entities
associated with edge properties of composed policy graph G and the
edge property of the policy pi. For the list Lt overlapping edges, the
compositionenginechecksfortheoverlapinthetargetnodeofpolicy
pi that hasu host entities with the edge of the composed policy graph
G with v host entities, incurring computation complexity O(u +v).
A.4.2 Policy Composition Optimization. To reduce the complexity
from O(mโn) to O(m +n), we employ a hashing algorithm: the m
host entries of s(p) are hashed as key-value pairs. Then the host
entities of S(G) are looked up in the hash for the existence of the host
n. As the hash lookup complexity is O(1), the total subset calculation
complexity results in O(m + n) complexity. Now, the baseline
complexity will be reduced to: O(LโS J โ(m+n)). To further reduce
this complexity, we Caching the comparison calculation outcome as
key-value pairs in the hash further reduces complexity: the s(p):S(G)
as key and the value as the first comparison result. Hence, the next
node comparison can be extracted from the hash entry with an O(1)
lookup cost. This reduces the overall baseline complexity to O(LโS J).
Similarly, the edge properties and target nodes of pi and Sj(G)
are added on top of the baseline composition cost. Any complexity
beyond the baseline comparison will be present only when there
exists an overlap in the edges properties or target nodes. Therefore,
the source-node overlaps trigger checks for edge-property overlaps
and these occurrences then necessitate target node comparisons
resulting in a worst case complexity of O(LโS J โLe โLt). Similarly,
by hashing the comparison results of edge nodes and the target
nodes, we can eventually reduce the complexity to O(LโS J). A proof
of this complexity bound is outside the scope of this paper but will
be provided in an expanded technical report.
A.5 Optimization of Tag-Space Reuse
Depending on the tag-space allocation mechanism discussed above
in Section 5.2, each project is assigned tag space, while taking into
consideration the tag space requirement of the project plus the slack
space (i.e., range of tags that are left for future use). This allows each
project to expand its policies either due to the dynamic network
conditions or from new policy additions by administrators. If the
slack space is completely consumed by project Pi, then the new
range of tag space is assigned using one of the following methods:
(i) considering the non-overlapping tag space assigned to other
projects inside site Si and its adjacent sites SAi , a new color is added
(cid:20)A(cid:24)(cid:34)(cid:3)(cid:4)(cid:20)(cid:18)(cid:10)/(cid:14)(cid:21)(cid:31)(cid:7)(cid:27)(cid:31)(cid:21)(cid:34)E(cid:3)(cid:4)(cid:6)(cid:33)(cid:33)(cid:29)(cid:27)(cid:22)(cid:21)B(cid:27)>(cid:31)(cid:7)(cid:27)(cid:31)(cid:21)(cid:34)E(cid:14)(cid:21)(cid:22)(cid:24)AA(cid:3)(cid:4)(cid:16)(cid:34)>(cid:22)(cid:24)AA(cid:31)(cid:21)(cid:34)(cid:16)(cid:12)(cid:9)(cid:5)(cid:19)(cid:27)(cid:34)(cid:21)(cid:29)(cid:23)(cid:24)B(cid:21)(cid:27)(cid:29)A(cid:5)(cid:11)(cid:34)>(cid:22)(cid:21)B(cid:27)>(cid:31)(cid:3)(cid:4)(cid:22)(cid:27)BE(cid:2)(cid:29)(cid:21)B(cid:27)BC(cid:23)(cid:24)(cid:2)(cid:29)>(cid:31)(cid:26)(cid:27)BC(cid:23)(cid:24)(cid:2)(cid:8)>C(cid:31)B(cid:34)E>(cid:25)-(cid:34)(cid:27)(cid:26)(cid:27)(cid:31)(cid:5)(cid:6)(cid:22)B(cid:27)>(cid:31)(cid:3)(cid:4)(cid:7)(cid:29)>(cid:22):-(cid:33)(cid:24)(cid:34)(cid:21)B(cid:27)>(cid:31)(cid:2)(cid:14)>B(cid:27)(cid:25)E(cid:6)(cid:23)(cid:34):(cid:18)>C(cid:34)(cid:22)(cid:24)(cid:3)(cid:4)(cid:7)(cid:29)(cid:21)(cid:22):(cid:13)(cid:27)AB(cid:24)(cid:23)(cid:8)>C(cid:31)B(cid:34)(cid:27)(cid:24)A(cid:2)(cid:12)(cid:16)A(cid:2)(cid:23)>(cid:34):(cid:23)(cid:24)AB(cid:27)(cid:31)(cid:21)B(cid:27)>(cid:31)(cid:3)(cid:4)(cid:7)(cid:29)(cid:21)(cid:22):(cid:13)(cid:27)AB(cid:24)(cid:23)(cid:8)>C(cid:31)B(cid:34)(cid:27)(cid:24)A(cid:2)(cid:12)(cid:16)A(cid:2)(cid:23)><(cid:21)(cid:27)(cid:31)(cid:1)(cid:31)(cid:21)<(cid:24)A(cid:5)(cid:2)(cid:1)(cid:19)(cid:15)(cid:22):(cid:10)(cid:30)(cid:33)F(cid:20)(cid:4)(cid:1)BA(cid:22)(cid:11), (cid:1)BA(cid:22),(cid:33)AC (cid:1)(cid:23)BC(cid:11), (cid:1)(cid:23)BC,(cid:33)AC (cid:1)BC(cid:21)AC (cid:1)(cid:24)(cid:32)(cid:23) (cid:1)(cid:23)DA(cid:21)C:(cid:33)(cid:32) (cid:1)(cid:34)A(cid:33)C(cid:33)(cid:22)(cid:33)(cid:30) (cid:1)BC(cid:21)C(cid:24) (cid:1)BA(cid:22)(cid:18)(cid:24)A(cid:33)(cid:34)(cid:21)(cid:29)B (cid:1)BA(cid:22)(cid:8)(cid:21)C(cid:21)(cid:34)(cid:21)(cid:29)B (cid:1)BA(cid:22)#E(cid:26)(cid:34)(cid:21)(cid:29) (cid:1)BA(cid:22)(cid:6)(cid:42)C(cid:24)(cid:22)(cid:32)C (cid:1)BA(cid:22),(cid:21)(cid:29)(cid:22)(cid:32)C (cid:1)(cid:23)BC(cid:18)(cid:24)A(cid:33)(cid:34)(cid:21)(cid:29)B (cid:1)(cid:23)BC(cid:8)(cid:21)C(cid:21)(cid:34)(cid:21)(cid:29)B (cid:1)E(cid:30)(cid:21)(cid:32) (cid:1)(cid:23)BC#E(cid:26)(cid:34)(cid:21)(cid:29) (cid:1)(cid:23)BC(cid:6)(cid:42)C(cid:24)(cid:22)(cid:32)C (cid:1)(cid:23)BC,(cid:21)(cid:29)(cid:22)(cid:32)C (cid:1)D(cid:34)(cid:23)(cid:21)C(cid:24)(cid:16):(cid:31)(cid:24) (cid:1)D(cid:34)(cid:23)(cid:21)C(cid:24)(cid:15)A(cid:22)(cid:6)(cid:42)C(cid:24)(cid:22)(cid:32)C (cid:1)(cid:34)(cid:23)(cid:21)C(cid:24)(cid:15)A(cid:22),(cid:21)(cid:29)(cid:22)(cid:32)C (cid:1)BA(cid:22),A(cid:24)(cid:25):(cid:41) (cid:1)(cid:23)BC,A(cid:24)(cid:25):(cid:41) (cid:1)D(cid:34)(cid:23)(cid:21)C(cid:24)(cid:8)BC(cid:6)(cid:42)C(cid:24)(cid:22)(cid:32)C (cid:1)D(cid:34)(cid:23)(cid:21)C(cid:24)(cid:8)BC,(cid:21)(cid:29)(cid:22)(cid:32)C (cid:1):(cid:22)(cid:31)(cid:34),(cid:21)(cid:29)(cid:22)(cid:32)C (cid:1)BA(cid:22)(cid:8)(cid:33)(cid:31)(cid:21):(cid:32) (cid:1)(cid:23)BC(cid:8)(cid:33)(cid:31)(cid:21):(cid:32) (cid:1)BA(cid:22)(cid:7)(cid:33)D(cid:32)CA(cid:42) (cid:1)BA(cid:22)(cid:7):C(cid:42) (cid:1)(cid:23)BC(cid:7)(cid:33)D(cid:32)CA(cid:42) (cid:1)(cid:23)BC(cid:7):C(cid:42) (cid:1)BA(cid:22)(cid:12)(cid:21)C:CD(cid:23)(cid:24) (cid:1)DB(cid:24)A(cid:11)(cid:8) (cid:1)BA(cid:22)(cid:12)(cid:33)(cid:32)(cid:26):CD(cid:23)(cid:24) (cid:1)(cid:23)BC(cid:12)(cid:21)C:CD(cid:23)(cid:24) (cid:1)(cid:23)BC(cid:12)(cid:33)(cid:32)(cid:26):CD(cid:23)(cid:24) (cid:1)(cid:11),(cid:15)(cid:22)(cid:33)A(cid:24)(cid:2)(cid:19)(cid:15)(cid:22):(cid:13)(cid:33)(cid:32)(cid:20)(cid:4)(cid:1)DB(cid:24)A(cid:32)(cid:21)(cid:31)(cid:24) (cid:1)(cid:27)(cid:33)BC(cid:32)(cid:21)(cid:31)(cid:24) (cid:1)(cid:34)A(cid:33)(cid:22)(cid:24)BB(cid:11)(cid:8) (cid:1)(cid:21)(cid:34)(cid:34)(cid:32)(cid:21)(cid:31)(cid:24) (cid:1)(cid:24)(cid:41)(cid:24)(cid:22)(cid:34)(cid:21)C(cid:27) (cid:1)(cid:24)(cid:41)(cid:24)(cid:22)#A(cid:26)D(cid:31)(cid:24)(cid:32)CB (cid:1)(cid:24)(cid:41)(cid:24)(cid:22)(cid:7)A(cid:24)(cid:23)(cid:24)(cid:32)C:(cid:21)(cid:30) (cid:1)(cid:33)(cid:34)(cid:24)(cid:32)(cid:10):(cid:30)(cid:24)(cid:12):BC (cid:1):(cid:32)C(cid:24)(cid:26)A:C(cid:42) (cid:1)(cid:34),A(cid:33)(cid:22)(cid:24)BB(cid:11)(cid:8) (cid:1)(cid:34)#(cid:34)(cid:34)(cid:32)(cid:21)(cid:31)(cid:24) (cid:1)(cid:34)(cid:9)(cid:41)(cid:24)(cid:22),(cid:21)C(cid:27) (cid:1)B(cid:24)(cid:32)B(cid:33)A(cid:11)(cid:8) (cid:1)B(cid:24)(cid:32)B(cid:33)A(cid:17)(cid:24)Ato the project Pi, and (ii) if there are no flows for the project for
which the active rules exist, then project Pi is assigned a new color,
recalculating tag space allocation between Si and SAi . The approach
described above in (ii) is used only when there exists spare colors
unassigned between the Si and its adjacent sites SAi .
However, during tag space allocation, when a project Pi from
site Si requires less tag space than what is available, to optimize the
tag space utilization we temporarily decompose a color into its sub-
colors.Thatis,acolorisdecomposedintotwopieces:thesizeequalto
the tag space requirement of the Pi + its slack size. The decomposed
sub-color is allowed to be reused only among its adjacent sites. The
opposite scenario (i.e., the tag space requirement of a project is
more than what is available with color pool) does not arise in our
mechanism because our heuristic of pre-computing the possible tag
spacesizeswithcolor.Thatis,wechoosethecolorsizebyconsidering
thetopSN highestpolicysizesforwhichcolorsareassociated.Hence,
there exists no scenario in which a project requires a tag space or
color for which a suitable color or tag space does not exist.
14