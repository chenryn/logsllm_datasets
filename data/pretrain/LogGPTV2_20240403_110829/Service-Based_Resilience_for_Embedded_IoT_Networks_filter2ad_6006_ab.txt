# Resilience and Inter-Service Dependency in Network Optimization

## References
- Espling et al. [15]
- Breitgand et al. [16]
- Pu et al. [17]
- Gawali & Shinde [18]
- Additional references: [21], [22], [23], [24], [25]
- Médard et al. [26]
- Lee et al. [27]
- Barla et al. [28], Xu et al. [29]
- Beck et al. [30]
- Atallah et al. [31]

## Table II: Terms and Definitions in the Optimization Problem

| **Type** | **Symbols** | **Set** | **Interval** | **Definition** |
|----------|-------------|---------|--------------|----------------|
| Base     | u, v        | V       | -            | Nodes in the network |
|          | e           | E       | -            | Link (edges) between nodes |
|          | s, t        | S       | -            | Basic services |
|          | d           | D       | -            | A demand between a pair of services |
|          | p           | Puv     | -            | An end-to-end path between nodes u and v |
|          | f           | F       | -            | A failure scenario/state |
| Constant | τs          | -       | [0, ∞]       | Resource consumption of s |
|          | hd          | -       | [0, ∞]       | Traffic volume of d |
|          | ce          | -       | [0, ∞]       | Maximum link capacity of e |
|          | rv          | -       | [0, ∞]       | Maximum resource capacity of v |
|          | ns          | -       | Z*           | Required number of instances for s |
|          | ld          | -       | [0, ∞]       | Latency requirement of d |
|          | l∗e         | -       | [0, ∞]       | Latency in e |
| Variable | ksv         | -       | {0, 1}       | Binary variable to indicate if v is capable to host s |
|          | avf         | -       | [0, 1]       | Binary variable to indicate if v is available in failure state f |
|          | θpf         | -       | [0, 1]       | Binary variable to indicate if p is available in failure state f |
|          | xdp         | -       | [0, ∞]       | Flow allocated to path p of demand d |
|          | ysv         | -       | {0, 1}       | Binary variable to decide if s is hosted by v |
|          | ysvf        | -       | {0, 1}       | Binary variable to decide if s is hosted by v in scenario f |

### Constraints
1. **Link Capacity Constraint:**
   \[
   \sum_{d \in D} \sum_{p \in P, e \in p} x_{dp} \leq c_e \quad \forall e \in E
   \]
   where \( P = \bigcup_{u, v \in V} P_{uv} \).

### B. Further QoS and Resilience Extensions

#### 1. Latency Requirements
In addition to the traffic volume constraint, each demand \( d \) must be satisfied within a bounded delay \( l_d \). The latency in a path is the sum of the delays in each link. The constraint ensuring this is:
\[
\sum_{e \in p} l^*_e x_{dp} \leq l_d \quad \forall d \in D, \forall p \in P
\]
where \( l^*_e \) is the delay on link \( e \), assumed constant.

#### 2. Node Capability
Not all nodes can host any service due to hardware and design constraints. A binary parameter \( k_{sv} \) indicates if node \( v \) can host service \( s \):
\[
\sum_{v \in V} k_{sv} y_{sv} \geq 1 \quad \forall s \in S
\]

#### 3. Single-Node Demand Allocation
Demands between services \( s \) and \( t \) can be deployed at the same node. Paths are defined as:
\[
p = 
\begin{cases} 
{} & \text{if } p \in P_{uv} \text{ and } u = v \\
\{e_1, e_2, \ldots, e_i\} & \text{otherwise}
\end{cases}
\]
Self-paths do not include physical links and do not affect link capacity or latency constraints.

#### 4. Failure Protection
The model includes failure scenarios where each state \( f \in F \) represents a failure. For single node failures:
\[
\sum_{v \in V} a_{vf} = |N| - 1 \quad \forall f \in F
\]
Constraints for service deployment and routing in case of failure:
\[
\sum_{v \in V} k_{sv} y_{svf} a_{vf} \geq 1 \quad \forall s \in S, \forall f \in F
\]
\[
\sum_{s \in S} \sum_{f \in F} \min(y_{svf}, 1) \tau_s \leq r_v \quad \forall v \in V
\]
\[
\sum_{p \in P_{uv}} \theta_{pf} x_{dp} \geq h_d \quad \forall d \in D, \delta_d = (s, t), s, t \in S, \forall f \in F
\]

### C. Objective Function
The objective is to minimize end-to-end latency:
\[
\min \sum_{d \in D} \sum_{p \in P} \sum_{e \in p} l^*_e x_{dp}
\]

### IV. Complexity Overview
Joint resource allocation and routing problems are NP-hard. The complexity is influenced by the size of the network and the number of services. Linearization of constraints involves:
- **Service Deployment Constraints:**
  \[
  w_{stuv} \leq y_{su}, \quad w_{stuv} \leq y_{tv}, \quad w_{stuv} \geq y_{su} + y_{tv} - 1
  \]
  Introduces \( O(|S|^2 |V|^2) \) new binary variables, reduced to \( O(|D|) \).

- **Flow Allocation Constraints:**
  \[
  q_{dp}^{stuv} \leq \min(c_e) w_{stuv}, \quad q_{dp}^{stuv} \leq x_{dp}, \quad q_{dp}^{stuv} \geq x_{dp} - (1 - w_{stuv}) \min(c_e), \quad q_{dp}^{stuv} \geq 0
  \]
  Introduces \( O(|D||P|) \) new variables.

- **Failure State Constraints:**
  \[
  m_{sv} \leq y_{svf}, \quad m_{sv} \geq y_{svf} - (1 - m^*_{sv})
  \]

This linearization allows the use of efficient LP solvers.