eval printf &s "$1" 2> /dev/nul1
quote ()
local quoted=${1//\'/\'\11'\*);
quote_readline ()
Local quoted;
---
## Page 117
printf ts "$ret'
【Centos764位】默认情况
_expand_ti1de_by_ref ()
if [[ ${1) == \-→ ”]; then
if [[ ${1) == */+ ]]; then
(/+*）s./{/a/T1)s=S△
else
(ti)s.=IS TeAa
fi;
fi
_get_cword_at_cursor_by_ref ()
local cword words=():
_reassenble_comp_words_by_ref *$1" words cword;
local i cur index=$COMP_POINT lead=${COMP_LINE:0:$COMP_POINT) :
if [[ $index =gt 0 s& (=n $lead 46 =n ${lead//[[=space:]]} ) 1]: then
cur=$COMP_LINE;
for ((i = 0; i ]ssuoyado）suodo
printf 's\n* "$(option/=+/=)"
reassenble_comp_words_by_ref ()
local exclude i j line ref;
if [[ =n $1 1]; then
fi;
eval $3=$COMP_cWORD;
if [[ =n $exclude 1]; then
line=$COMP_LINE;
for ((i=0, j=0; i = 2 )) &s((j--));
ref='$2[$j]';
eval $2 [ $j j=\$ { 1ref) \$ {coMP_woRDs [i1) ;
---
## Page 119
[[$i == $COMP_CWORD}]&&eva1$3=$j;
{（++））  [[+[.,]== u$ 1]
1xeaxq11((++）)9（(={[alsaoawo)s> $）)
done;
ref="$2[$j1";
eval $2[$j”=\${1ref)\s(coMP_woRDs[i]} ;
[[ $i == $COMP_CWORD ]] && eval $3=$j;
done;
[[ $i == $COMP_CWORD 1] &s eval $3=$j;
else
eval $2=\( \*\${COMP_WORDS[@])\* \)
fi
_allowed_groups ()
1
if _complete_as_root; then
local IFS=
$1）；
else
local IFS='
COMPREPLY=($( comPgen =N
"$( id =Gn 2>/dev/null ll groups 2>/dev/null )"
“$1"1）;
fi
alloved_users ()
if _complete_as_root; then
local IFS='
else
local IFS='
COMPREPLY=($( comPgen =N
"$( id =un 2>/dev/null |l whoami 2>/dev/null 1"
“${1==$eur)"）}};
fi
_available_fcoe_interfaces ()
1
if [ *${1:=}* = =a ]; then
coMPRepLY=($t for f in /ays/class/net/+ ; do if grep -g up $f/operstate ; then echc
$(f#&+/}：fi;done 2>/dev/null ])=
else
coMPREPLY=($( for f in /sys/class/net/+ ; do ccho ${f##*/) : done 2>/dev/null ):
fi;
_available_interfaces ()
---
## Page 120
local cmd PATH=$PATH:/sbin;
if [[ ${1:=} == =v 1]; then
cmd=*iwconfig*;
else
if [[ ${1:=} == =a ]]; then
idn wous xut d ll btguoogt }.=puo
else
wous xutt d l = bguoog }.=puo
fi;
fi;
COMPREPLY=($( eval $emd 2>/dev/null | awk
/^t]/（if($1-/[0=9]+=/）(print
$2）else（print $i）”')=
(/[[ound:lls/[alxdaao)s. Nubo 1s/=xaaa
_bpftool ()
1
local cur prev words objuord;
_init_completion || return;
case $prev in
(tensta |sapoodo |xau |dtaq
return 0
F
(6e
_bpftool_get_prog_tags;
return 0
F
file |pinned)
_filedir;
return 0
batch)
return 0
esac;
local object command cmdrord;
for ((cmdword=1; cmdvord < $<#words[é]}-1; cmdvord++ ))
do
[[ =n $Sobject 1] 4s command=${words[cmdword]} && break;
[[ ${words[cndword]} != =* ]] s& object=${words[cmdword]};
done1
if [[ =z $object 1]; then
case $cur in
=*)
,aad- uos-- uog==,=o eoo
1(Iamos. --os. N- uabauoo 1s)=xTaaaawoo
return 0
* )
---
## Page 121
sed
=e '/OBJECT I= /1d'
E'S/.*(/f
=e‘s/|//g′ )"--“$cur”]）=
f(d mos. -- ,dtau yoarq. M- uahduoo 1s=+xaaaaanoo
return 0
esac;
fi;
[[ $command == help 1] &4 return 0;
case $object in
prog)
case $prev in
id)
_bpftool_get_prog_ids;
return 0
esac;
local PROG_rYPE=′id pinned tag′ ;
case Scommand in
show |1ist)
f0uanaz s [[ purwuoos。 =i Aaads 1]
（4ns=
return 0
F
(dunp
case $prev in
$command)
COMPREPLY+=($4 compgen =W"xlated jited" -
$eur ）=
return 0
xlated |jited)
$cur））;
return 0
*)
_bpftool_once_attr *file′;
“$cur"}};
else
$cur）
fi;
return 0
esac
F
pin)
uu f[I puwoos. == Aaxds ll g
COMPREPLY=($（cOmPgen -V"$PROG_TYPE"--“$cur）=
---
## Page 122
_filedir;
fi;
return 0
F
1oad )
_filedir;
return 0
* )
peot uid dtaq dunp. N- uabdues )s/=xmaaadnos ss (I aoafqos == Aaads ll
show list' -- "$cur" ↓)
esac
F
nap)
local MAP_TYPE=′id pinned' ;
case $command in
show | 1ist |dump)
case $prev in
$conmand)
return 0
id)
_bpftool_get_map_ids;
return 0
*)
return 0
esac
FF
1ookup | getnext| delete)
case $prev in
$command)
return 0
id)
sptdeua6toodq
return 0
key }
*)
_bpftool_once_attr “key”;
return 0
csac
F
---
## Page 123
case $Sprev in
$command)
return 0
id)
_bpftool_map_update_get_id;
return 0
key )
(l 1nos -- xoy. M- uobdeoo Is)=+xadaamon 
value)
case $(_bpftool map_update_map_type) in
array_of_maps | hash_of_maps)
local MAP_rYPE=′id pinned' ;
“$cur"）)1
return 0
prog_array)
COMPREPLY+=($I compgen =W $PROG_TYPE
"$cur）=
return 0
*)
:(I,anos
return 0
esac;
return 0
*)
_bpftool_once_attr “key′:
local UPDATE_FLAGS='any exist noexist';
for ((idx=3; idx < ${#words[]}-1; idx++ ))
do
uaq [f ,nA, =={[xplspzon)s 1] 
return 0;
fi;
done;
for ((idx=3; idx < ${#words[]}-1; idx++ ))
op
uaq [1 Ax.=={[xplspzon)s 1l 
_bpftool_once_attr *value′ ;
return 0;
fi;
done;
---
## Page 124
esac
pin)
uaus f[[ purwmoos. == haids ll g1
COMPREPLY=($( COMPgen -V"$PROG_TYPE"--“$cur);
else
_filedir;
fi;
return 0
*)
help
lcokup pin shcw list update′ -- "$cur" 1)
FF
esac
cgroup)
case $command in
show |list)
_filedir;
return 0
attach |detach)
device';
local ArTACH_FLAGS='multi override′;
  p. t
case $prev in
$command)
_filedir;
return 0
ingress | egress |sock_create | sock_ops | device)
COMPREPLY=($( COmPgen -W "$PROG_TYPE"
$eur））;
return 0
id)
_bpftool_get_prog_ids;
return 0
*)
if ! _bpftool_search_list *$ATrACH_TYPEs"; then
$eur）;
else
fi;
---
## Page 125
1 ;
return 0
esac
* )
[[ $prev == $object ]] && CoMPREPLY=($( conpgen -W 'help attach detach 
show list' --“$cur" })
esac
F
esac
_bpftool_get_map_ids ()
ITycz deu df- [ooagdq 1s. M- uahduoo 1s]=+xmaaaanoo
command sed -n 's/.+"id': \
(.*），$/\1/p)"--“$eur））
_bpftool_get_prog_ids ()
1Ty<z 6oid df-tooagdq 1s. M- uo6duoo 1s)=+xmaaadnoo
[*)，$/\1/p′)"--“$cur"））
_bpftool_get_prog_tags ()
1Ty<z boid d- tooagdg 1s. M- uohduoo 1s)=+xmaaanoo
（（ansd//$（）
_bpftool_map_update_get_id ()
local idx value;
for ((idx=7; idx < ${#words[@]}-1; idx++ ))
op
uay [[ neA, == {[xpt]spxon)s ll 
value=1;
break;
fi;
lauop
[[ $value =eg 0 ]] 6& _bpftool_get_map_ids && return 0;
local type=$(_bpftcol_map_update_map_type);
case $type in
array_of_maps | hash_of_maps)
_bpftool_get_map_ids;
return 0
prog_array)
_bpftool_get_prog_ids;
return 0
F
*)
return 0
F F
---
## Page 126
_bpftool_map_update_nap_type ()
local keyuord ref;
for ((idx=3; idx < ${#words[@]}-1; idx++ })
do
uu [[ pdn, =([(4=xp))s]spoa)s 1] 
keyword=${words[$4(idx=1)] ]}:
ref=s{words[$4(idx)]):
done;
[[ =z $ref 1] ss return 0;
1ocal type;
type=s(bpftool -jp map show Skeyword $ref
[*$/\1/p];
printf $type
_bpftool_once_attr ()
local v idx found;
for v in $*;
do
found=0;
for ((idx=3; idx < $<*words[@]}-1; idx++ ))
op
if [[ $w == ${words[idx]) 1]: then
found=1;
break;
fi;
done)
done
_bpftool_one_of_list ()
_bpftool_search_list $* && return 1;
(4amos. -- +$. M- uahduoo 1s)=+xmaaaano
_bpftool_search_list ()
local w idx;
for v in $*;
do
for ((idx=3; idx < ${*words[@]}-1; idx++ ))
do
[[ $w == ${words[idx]) 1] s& return 0;
lauop
done;
return 1
_cd()
---
## Page 127
local cur prev words cword;
_init_completion |l return;
local IFS=
ijk;
compopt =o filenames;
uauf[[/(-)c(·)c ==anos1(-1Havao)s。 z=11 
_filedir =d;
return 0;
fi;
local =r mark_dirs=s(_rl_enabled mark=directories &s echo Yl:
local =r mark_symdirs=$(_rl_enabled mark-symlinked-directories &f ccho yl:
for i in ${CDPATH//:/'
{
do
for j in $\ compgen -d $i/$cur ):
do
if [[ ( =n $mark_syndirs &s =h $j |] =n $mark_dirs &s ! =h $j ) && ! =d ${j#$i/}
J]; then
j+="/";
fi;
COMPREPLY[k++]=${j*$i/};
done;
done;
_filedir =d;