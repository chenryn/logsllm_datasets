    ::: para
    可用 RAID 级别为：
    :::
    ::: variablelist
    [RAID0 - [**最佳性能（条状）**]{.guilabel}]{.term}
    :   ::: para
        在多个磁盘间分配数据。级别 0 RAID
        提供比标准分区优越的性能，并可用来将多个设备的存储汇集到一个大的虚拟磁盘中。请注意：级别
        0 RAID
        不提供冗余，且阵列中一个设备的失败将破坏整个阵列中的数据。RAID 0
        需要至少两个 RAID 分区。
        :::
    [RAID1 - [**冗余（镜像）**]{.guilabel}]{.term}
    :   ::: para
        将一个磁盘中的数据镜像保存到一个或者多个其他磁盘中。阵列中的附加设备提供增加的冗余级别。RAID
        1 需要至少两个 RAID 分区。
        :::
    [RAID4 - [**探测错误（奇偶校验）**]{.guilabel}]{.term}
    :   ::: para
        在多个磁盘间分配数据，但只在阵列中的一个设备中保存奇偶校验信息，这样可在阵列中的任意设备失败时保护阵列。因为所有奇偶校验信息是保存在一个磁盘中，访问这个磁盘的会造成阵列性能瓶颈。RAID
        4 至少需要三个 RAID 分区。
        :::
    [RAID5 - [**分布式错误探测**]{.guilabel}]{.term}
    :   ::: para
        在多个磁盘间分配数据[*和*]{.emphasis}奇偶校验信息。因此 RAID 5
        提供优越的跨多磁盘数据分布性能，但没有 RAID 4
        的性能瓶颈，因为也在阵列间发布奇偶校验信息。RAID 5 至少需要三个
        RAID 分区。
        :::
    [RAID6 - [**冗余**]{.guilabel}]{.term}
    :   ::: para
        RAID 6 与 RAID 5 类似，但不是保存一组奇偶校验信息而是两组。RAID
        6 至少需要四个 RAID 分区。
        :::
    [RAID10 - [**冗余（镜像）**]{.guilabel} 和 [**最佳性能（条状）**]{.guilabel}]{.term}
    :   ::: para
        RAID 10 是*内嵌的 RAID* 或者*合成的 RAID*。它们是
        由在磁盘镜像组件中分布的数据组成。例如：一个由四个 RAID
        分区组成的 RAID 10 包含两对条状分区镜像。RAID 10 至少需要四个
        RAID 分区。
        :::
    :::
6.  ::: para
    点击 [**更新设置**]{.guibutton}
    保存更改，并继续对其他分区操作，或者点击 [**完成**]{.guibutton} 返回
    [**安装概述**]{.guilabel} 界面。
    :::
:::
::: para
如果包含的磁盘少于 RAID
级别要求，则会在窗口底部显示一条信息，提醒您选择的配置实际需要多少磁盘。
:::
:::
::: section
::: titlepage
### [⁠]{#chap-installing-using-anaconda-ppc.html#sect-create-lvm-ppc}11.15.4.3. 创建 LVM 逻辑卷 {.title}
:::
::: para
*逻辑卷管理*（LVM）显示一个基本物理存储空间（比如硬盘或者
LUN）的简单裸机视图。可将物理存储中视为*物理卷*的分区分组成为*卷组*。可将每个卷组分成多个*逻辑卷*，每个逻辑卷模拟一个标准磁盘分区。因此，LVM
逻辑卷可作为包含多个物理磁盘的分区使用。
:::
::: para
要了解更多 LVM，请查看 [附录 C, *了解
LVM*](#appe-lvm-overview.html){.xref} 或者阅读 [《Red Hat
Enterprise Linux 7
逻辑卷管理器指南》](https://access.redhat.com/site/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Logical_Volume_Manager_Administration/index.html)。注：LVM
配置只适用于图形安装程序。
:::
::: {.important xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**重要**
:::
::: admonition
::: para
在文本模式安装过程中不能使用 LVM 配置。如果您需要从头生成一个 LVM
配置，请按 [**Ctrl**]{.keycap}+[**Alt**]{.keycap}+[**F2**]{.keycap}
使用不同的虚拟控制台，并运行 `lvm`{.command}
命令。要返回文本模式安装，请按
[**Ctrl**]{.keycap}+[**Alt**]{.keycap}+[**F1**]{.keycap}。
:::
:::
:::
::: figure
[⁠]{#chap-installing-using-anaconda-ppc.html#idm139805840340432}
::: figure-contents
::: mediaobject
![配置逻辑卷](images/diskpartitioning/lvm-pv.png){width="660"}
:::
:::
**图 11.28. 配置逻辑卷**
:::
::: para
要生成逻辑卷并将其添加到新的或者现有卷组中：
:::
::: {.procedure xmlns:d="http://docbook.org/ns/docbook"}
1.  ::: para
    如 [第 11.15.4.1 节
    "添加文件系统并配置分区"](#chap-installing-using-anaconda-ppc.html#sect-partition-configuration-ppc){.xref}
    所述为 LVM 卷生成挂载点。
    :::
2.  ::: para
    点击 [**设备类型**]{.guilabel} 下拉菜单并选择
    [**LVM**]{.guilabel}。此时会出现 [**卷组**]{.guilabel}
    下拉菜单并显示新生成卷组的名称。
    :::
3.  ::: para
    另外也可以点击该菜单并选择 [**新建卷组**]{.guilabel}
    ，或者在需要时点击 [**修改**]{.guibutton}
    配置新生成的卷组。[**新建卷组**]{.guilabel} 选项和
    [**修改**]{.guibutton} 按钮都会让您进入 [**配置卷组**]{.guilabel}
    对话框，您在那里可以重命名逻辑卷组并选择器所包含的磁盘。
    ::: note
    ::: admonition_header
    **注意**
    :::
    ::: admonition
    ::: para
    该配置对话不允许指定卷组物理扩展的大小。该大小永远是默认的 4
    MiB。如果要使用不同的物理扩展创建卷组，则可切换至互动
    shell，并使用命令 `vgcreate`{.command}，或附带
    `volgroup --pesize=size`{.command} 命令的 Kickstart
    文件手动创建该卷组。
    :::
    :::
    :::
    :::
    ::: figure
    [⁠]{#chap-installing-using-anaconda-ppc.html#idm139805876308128}
    ::: figure-contents
    ::: mediaobject
    ![定制 LVM 卷组](images/diskpartitioning/lvm-volume-ppc.png)
    :::
    :::
    **图 11.29. 定制 LVM 卷组**
    :::
    ::: para
    可用 RAID 等级与实际 RAID 设备相同。详情请查看 [第 11.15.4.2 节
    "创建软件
    RAID"](#chap-installing-using-anaconda-ppc.html#sect-create-software-raid-ppc){.xref}
    。您还可以将子卷标记为加密，并为其设置大小策略。可用策略选项为：
    :::
    ::: itemizedlist
    -   ::: para
        [**自动**]{.guilabel} -
        自动设置卷组大小，使其足够容纳配置的逻辑卷。最适合不需要剩余空间的卷组。
        :::
    -   ::: para
        [**尽量分配空间**]{.guilabel} -
        为该卷组分配最大的可用空间，不考虑其包含的已配置逻辑卷的大小。最适用于您要将大多数数据保存到
        LVM，且之后需要增大一些现有逻辑卷容积，或者需要在该卷组中生成附加逻辑卷的情况。
        :::
    -   ::: para
        [**固定**]{.guilabel} -
        使用这个选项您可以设置该卷组的具体大小。这个固定的大小必须能够容纳所有配置的逻辑卷。如果您知道该卷组的实际大小就很有用。
        :::
    :::
    ::: para
    完成组配置后点击 [**保存**]{.guibutton}。
    :::
4.  ::: para
    点击 [**更新设置**]{.guibutton}
    保存更改，并继续对其他分区操作，或者点击 [**完成**]{.guibutton} 返回
    [**安装概述**]{.guilabel} 界面。
    :::
:::
::: {.warning xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**警告**
:::
::: admonition
::: para
不支持将 `/boot`{.filename} 分区放到 LVM 卷中。
:::
:::
:::
:::
::: section
::: titlepage
### [⁠]{#chap-installing-using-anaconda-ppc.html#sect-create-btrfs-subvolume-ppc}11.15.4.4. 创建 Btrfs 子卷 {.title}
:::
::: para
*Btrfs* 是一个文件系统类型，但有一些存储设备的特征。Btrfs
设计要求可以容错，并可以更容易地检测出错误并修复。它使用 checksum
确保数据和元数据的完整性并维护可用来备份或者修复的文件系统快照。
:::
::: para
在手动分区的过程中会生成 Btrfs
子卷而不是多个卷。然后安装程序会自动生成包含这些子卷的 Btrfs
卷。[**手动分区**]{.guilabel} 页面左侧栏中给出的 Btrfs
挂载点大小均一致，这是因为它们代表的是卷的总大小，而不是每个子卷的大小。
:::
::: figure
[⁠]{#chap-installing-using-anaconda-ppc.html#idm139805851757392}
::: figure-contents
::: mediaobject
![配置 Btrfs 子卷](images/diskpartitioning/btrfs.png){width="660"}
:::
:::
**图 11.30. 配置 Btrfs 子卷**
:::
::: para
要创建 Btrfs 子卷：
:::
::: {.procedure xmlns:d="http://docbook.org/ns/docbook"}
1.  ::: para
    如 [第 11.15.4.1 节
    "添加文件系统并配置分区"](#chap-installing-using-anaconda-ppc.html#sect-partition-configuration-ppc){.xref}
    所述生成挂载点。通过配置这个挂载点，您就可以配置 Btrfs 卷。
    :::
2.  ::: para
    点击 [**设备类型**]{.guilabel} 下拉菜单并选择
    [**BTRFS**]{.guilabel}。[**文件系统**]{.guilabel} 下拉菜单中的
    `Btrfs`{.literal} 会自动变灰。出现 [**卷**]{.guilabel}
    下拉菜单并显示新生成卷的名称。
    :::
3.  ::: para
    另外也可以点击该菜单并选择 [**新建卷**]{.guilabel}
    ，或者在需要时点击 [**修改**]{.guibutton}
    配置新生成的卷。[**新建卷**]{.guilabel} 选项和
    [**修改**]{.guibutton} 按钮都会让您进入 [**配置卷**]{.guilabel}
    对话框，在那里可以重命名子卷并为其添加 RAID 级别。
    :::
    ::: figure
    [⁠]{#chap-installing-using-anaconda-ppc.html#idm139805868135024}
    ::: figure-contents
    ::: mediaobject
    ![定制 Btrfs 卷](images/diskpartitioning/btrfs-volume-ppc.png)
    :::
    :::
    **图 11.31. 定制 Btrfs 卷**
    :::
    ::: para
    可用 RAID 级别为：
    :::
    ::: variablelist
    [[**RAID0（性能）**]{.guilabel}]{.term}
    :   ::: para
        在多个存储设备间分配数据。级别 0 RAID
        提供比标准分区优越的性能，并可用来将多个设备的存储汇集到一个大的虚拟设备中。请注意：级别
        0 RAID 不提供冗余，且阵列中一个设备的失败将破坏整个阵列。RAID 0
        至少需要两个 RAID 分区。
        :::
    [[**RAID1（冗余）**]{.guilabel}]{.term}
    :   ::: para
        将一个存储设备中的数据镜像保存到一个或者多个其他存储设备中。阵列中的附加设备提供增加的冗余级别。RAID
        1 至少需要两个 RAID 分区。
        :::
    [[**RAID10（性能，冗余）**]{.guilabel}]{.term}
    :   ::: para
        兼备 RAID0 和
        RAID1，并同时提供更高性能和冗余。在提供冗余（镜像）的 RAID 1
        阵列中分配数据，且这些阵列呈条带状（RAID0)，提供性能（条状）。至少需要四个
        RAID 分区。
        :::
    :::
    ::: para
    您还可以将该卷标记为加密，并为其设置大小策略。可用策略选项为：
    :::
    ::: itemizedlist
    -   ::: para
        [**自动**]{.guilabel} -
        自动设置卷大小，使其足够容纳配置的子卷。最适合不需要剩余空间的卷。
        :::
    -   ::: para
        [**尽量分配空间**]{.guilabel} -
        为该卷分配最大的可用空间，不考虑其包含的已配置子卷的大小。最适用于要将大多数数据保存到
        Btrfs，且之后需要增大一些现有子卷容积，或者需要在该卷中生成附加子卷的情况。
        :::
    -   ::: para
        [**固定**]{.guilabel} -
        使用这个选项可以设置该卷的具体大小。这个固定的大小必须能够容纳所有配置的子卷。如果您知道该卷的实际大小就很有用。
        :::
    :::
    ::: para
    完成卷配置后点击 [**保存**]{.guibutton}。
    :::
4.  ::: para
    点击 [**更新设置**]{.guibutton}
    保存更改，并继续对其他分区操作，或者点击 [**完成**]{.guibutton} 返回
    [**安装概述**]{.guilabel} 界面。
    :::
:::
::: para
如果包含的磁盘少于 RAID
级别要求，则会在窗口底部显示一条信息，提醒您选择的配置实际需要多少磁盘。
:::
::: {.warning xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**警告**
:::
::: admonition
::: para
不支持将 `/boot`{.filename} 分区放到 `Btrfs`{.systemitem} 子卷中。
:::
::: para
同样，也不支持使用 `Btrfs`{.systemitem} 创建独立 `/usr`{.filename}
分区。该系统无法启动。
:::
:::
:::
:::
::: section
::: titlepage
### [⁠]{#chap-installing-using-anaconda-ppc.html#sect-recommended-partitioning-scheme-ppc}11.15.4.5. 推荐分区方案 {.title}
:::
[]{#chap-installing-using-anaconda-ppc.html#idm139805853616784
.indexterm}[]{#chap-installing-using-anaconda-ppc.html#idm139805846825728
.indexterm}[]{#chap-installing-using-anaconda-ppc.html#idm139805874118816
.indexterm}[]{#chap-installing-using-anaconda-ppc.html#idm139805846243024
.indexterm}[]{#chap-installing-using-anaconda-ppc.html#idm139805862032816
.indexterm}
::: para
除非您另有原因，Red Hat 建议您为 x86、AMD64 和 Intel 64
位系统创建以下分区：
:::