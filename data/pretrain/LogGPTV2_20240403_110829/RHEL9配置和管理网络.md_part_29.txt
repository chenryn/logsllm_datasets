    # RADIUS accounting server
    acct_server_addr=192.0.2.1
    acct_server_port=1813
    acct_server_shared_secret=client_password
    ```
    有关此配置使用的参数的详情，请查看
    `/usr/share/doc/hostapd/hostapd/hostapd.conf`{.literal}
    示例配置文件中的描述。
2.  启用并启动 `hostapd`{.literal} 服务：
    ``` literallayout
    # systemctl enable --now hostapd
    ```
:::
::: itemizedlist
**验证**
-   请参阅：
    ::: itemizedlist
    -   [针对 FreeRADIUS 服务器或验证器测试 EAP-TTLS
        身份验证](#assembly_setting-up-an-802-1x-network-authentication-service-for-lan-clients-using-hostapd-with-freeradius-backend_configuring-and-managing-networking.html#proc_testing-eap-ttls-authentication-against-a-freeradius-server-or-authenticator_assembly_setting-up-an-802-1x-network-authentication-service-for-lan-clients-using-hostapd-with-freeradius-backend "针对 FreeRADIUS 服务器或验证器测试 EAP-TTLS 身份验证"){.link}
    -   [针对 FreeRADIUS 服务器或验证器测试 EAP-TLS
        身份验证](#assembly_setting-up-an-802-1x-network-authentication-service-for-lan-clients-using-hostapd-with-freeradius-backend_configuring-and-managing-networking.html#proc_testing-eap-tls-authentication-against-a-freeradius-server-or-authenticator_assembly_setting-up-an-802-1x-network-authentication-service-for-lan-clients-using-hostapd-with-freeradius-backend "针对 FreeRADIUS 服务器或验证器测试 EAP-TLS 身份验证"){.link}
    :::
:::
::: orderedlist
**故障排除**
1.  停止 `hostapd`{.literal} 服务：
    ``` literallayout
    # systemctl stop hostapd
    ```
2.  以 debug 模式启动该服务：
    ``` literallayout
    # hostapd -d /etc/hostapd/hostapd.conf
    ```
3.  在 FreeRADIUS 主机上执行验证测试，如 `验证部分中所述`{.literal}。
:::
::: itemizedlist
**其他资源**
-   `hostapd.conf(5)`{.literal} man page
-   `/usr/share/doc/hostapd/hostapd.conf`{.literal}
:::
:::
::: section
::: titlepage
# []{#assembly_setting-up-an-802-1x-network-authentication-service-for-lan-clients-using-hostapd-with-freeradius-backend_configuring-and-managing-networking.html#proc_testing-eap-ttls-authentication-against-a-freeradius-server-or-authenticator_assembly_setting-up-an-802-1x-network-authentication-service-for-lan-clients-using-hostapd-with-freeradius-backend}针对 FreeRADIUS 服务器或验证器测试 EAP-TTLS 身份验证 {.title}
:::
要测试通过隧道传输层安全(EAP-TTLS)使用可扩展身份验证协议(EAP-TTLS)进行身份验证，请运行此流程：
::: itemizedlist
-   设置 FreeRADIUS 服务器后
-   将 `hostapd`{.literal} 服务设置为 802.1X 网络身份验证验证器后。
:::
此流程中使用的测试实用程序的输出提供有关 EAP
通信的其他信息，并帮助您调试问题。
::: itemizedlist
**先决条件**
-   当您要验证时：
    ::: itemizedlist
    -   FreeRADIUS 服务器：
        ::: itemizedlist
        -   已安装 `hostapd`{.literal} 软件包提供的
            `eapol_test`{.literal} 实用程序。
        -   运行此流程的客户端已授权在 FreeRADIUS
            服务器的客户端数据库中。
        :::
    -   已安装由同一命名软件包提供的验证器（ `wpa_supplicant`{.literal}
        实用程序）。
    :::
-   您在 `/etc/pki/tls/certs/ca.pem`{.literal}
    文件中存储了证书颁发机构(CA)证书。
:::
::: orderedlist
**步骤**
1.  使用以下内容创建
    `/etc/wpa_supplicant/wpa_supplicant-TTLS.conf`{.literal} 文件：
    ``` literallayout
    ap_scan=0
    network={
        eap=TTLS
        eapol_flags=0
        key_mgmt=IEEE8021X
        # Anonymous identity (sent in unencrypted phase 1)
        # Can be any string
        anonymous_identity="anonymous"
        # Inner authentication (sent in TLS-encrypted phase 2)
        phase2="auth=PAP"
        identity="example_user"
        password="user_password"
        # CA certificate to validate the RADIUS server's identity
        ca_cert="/etc/pki/tls/certs/ca.pem"
    }
    ```
2.  要进行身份验证以进行身份验证：
    ::: itemizedlist
    -   FreeRADIUS 服务器，输入：
        ``` literallayout
        # eapol_test -c /etc/wpa_supplicant/wpa_supplicant-TTLS.conf -a 192.0.2.1 -s client_password
        ...
        EAP: Status notification: remote certificate verification (param=success)
        ...
        CTRL-EVENT-EAP-SUCCESS EAP authentication completed successfully
        ...
        SUCCESS
        ```
        `a`{.literal} 选项定义 FreeRADIUS 服务器的 IP 地址，而
        `-s`{.literal} 选项指定您在 FreeRADIUS
        服务器客户端配置中运行命令的主机的密码。
    -   验证器，输入：
        ``` literallayout
        # wpa_supplicant -c /etc/wpa_supplicant/wpa_supplicant-TTLS.conf -D wired -i enp0s31f6
        ...
        enp0s31f6: CTRL-EVENT-EAP-SUCCESS EAP authentication completed successfully
        ...
        ```
        `i`{.literal} 选项指定通过
        LAN(EAPOL)数据包发送扩展验证协议的网络接口名称。``{.literal}
        若要了解更多信息，请将 `-d`{.literal} 选项传递给 命令。
    :::
:::
::: itemizedlist
**其他资源**
-   `/usr/share/doc/wpa_supplicant/wpa_supplicant.conf`{.literal}
:::
:::
::: section
::: titlepage
# []{#assembly_setting-up-an-802-1x-network-authentication-service-for-lan-clients-using-hostapd-with-freeradius-backend_configuring-and-managing-networking.html#proc_testing-eap-tls-authentication-against-a-freeradius-server-or-authenticator_assembly_setting-up-an-802-1x-network-authentication-service-for-lan-clients-using-hostapd-with-freeradius-backend}针对 FreeRADIUS 服务器或验证器测试 EAP-TLS 身份验证 {.title}
:::
要测试使用可扩展身份验证协议(EAP)传输层安全(EAP-TLS)进行身份验证，请执行以下步骤：
::: itemizedlist
-   设置 FreeRADIUS 服务器后
-   将 `hostapd`{.literal} 服务设置为 802.1X 网络身份验证验证器后。
:::
此流程中使用的测试实用程序的输出提供有关 EAP
通信的其他信息，并帮助您调试问题。
::: itemizedlist
**先决条件**
-   当您要验证时：
    ::: itemizedlist
    -   FreeRADIUS 服务器：
        ::: itemizedlist
        -   已安装 `hostapd`{.literal} 软件包提供的
            `eapol_test`{.literal} 实用程序。
        -   运行此流程的客户端已授权在 FreeRADIUS
            服务器的客户端数据库中。
        :::
    -   已安装由同一命名软件包提供的验证器（ `wpa_supplicant`{.literal}
        实用程序）。
    :::
-   您在 `/etc/pki/tls/certs/ca.pem`{.literal}
    文件中存储了证书颁发机构(CA)证书。
-   发布客户端证书的 CA 与签发 FreeRADIUS 服务器的服务器证书相同。
-   您将客户端证书存储在 `/etc/pki/tls/certs/client.pem`{.literal}
    文件中。
-   将客户端的私钥存储在 `/etc/pki/tls/private/client.key`{.literal}中
:::
::: orderedlist
**步骤**
1.  使用以下内容创建
    `/etc/wpa_supplicant/wpa_supplicant-TLS.conf`{.literal} 文件：
    ``` literallayout
    ap_scan=0
    network={
        eap=TLS
        eapol_flags=0
        key_mgmt=IEEE8021X
        identity="PI:EMAIL"
        client_cert="/etc/pki/tls/certs/client.pem"
        private_key="/etc/pki/tls/private/client.key"
        private_key_passwd="password_on_private_key"
        # CA certificate to validate the RADIUS server's identity
        ca_cert="/etc/pki/tls/certs/ca.pem"
    }
    ```
2.  要进行身份验证以进行身份验证：
    ::: itemizedlist
    -   FreeRADIUS 服务器，输入：
        ``` literallayout
        # eapol_test -c /etc/wpa_supplicant/wpa_supplicant-TLS.conf -a 192.0.2.1 -s client_password
        ...
        EAP: Status notification: remote certificate verification (param=success)
        ...
        CTRL-EVENT-EAP-SUCCESS EAP authentication completed successfully
        ...
        SUCCESS
        ```
        `a`{.literal} 选项定义 FreeRADIUS 服务器的 IP 地址，而
        `-s`{.literal} 选项指定您在 FreeRADIUS
        服务器客户端配置中运行命令的主机的密码。
    -   验证器，输入：
        ``` literallayout
        # wpa_supplicant -c /etc/wpa_supplicant/wpa_supplicant-TLS.conf -D wired -i enp0s31f6
        ...
        enp0s31f6: CTRL-EVENT-EAP-SUCCESS EAP authentication completed successfully
        ...
        ```
        `i`{.literal} 选项指定通过
        LAN(EAPOL)数据包发送扩展验证协议的网络接口名称。``{.literal}
        若要了解更多信息，请将 `-d`{.literal} 选项传递给 命令。
    :::
:::
::: itemizedlist
**其他资源**
-   `/usr/share/doc/wpa_supplicant/wpa_supplicant.conf`{.literal}
:::
:::
::: section
::: titlepage
# []{#assembly_setting-up-an-802-1x-network-authentication-service-for-lan-clients-using-hostapd-with-freeradius-backend_configuring-and-managing-networking.html#proc_blocking-and-allowing-traffic-based-on-hostapd-authentication-events_assembly_setting-up-an-802-1x-network-authentication-service-for-lan-clients-using-hostapd-with-freeradius-backend}根据主机apd 验证事件阻止和允许流量 {.title}
:::
`hostapd`{.literal} 服务不与 traffic plane
交互。该服务仅充当身份验证器。但是，您可以编写脚本，以根据身份验证事件的结果来允许或拒绝流量。
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
此步骤不受支持，没有企业级的解决方案。它演示了如何通过评估由
`hostapd_cli`{.literal} 检索的事件来阻止或允许流量。
:::
当 `802-1x-tr-mgmt`{.literal} systemd 服务启动时，RHEL 会阻止监听
`主机apd`{.literal} 端口的所有流量，但通过
LAN(EAPOL)数据包可扩展验证协议并使用 `hostapd_cli`{.literal}
实用程序连接到 `主机apd`{.literal}
控制接口。`/usr/local/bin/802-1x-tr-mgmt`{.literal}
脚本随后评估事件。根据 `hostapd_cli`{.literal}
接收的不同事件，该脚本允许或阻止 MAC 地址的流量。请注意，当
`802-1x-tr-mgmt`{.literal} 服务停止时，所有流量会自动允许。
在 `hostapd`{.literal} 服务器上执行这个步骤。
::: itemizedlist
**先决条件**
-   `主机apd`{.literal} 服务已经配置，服务已准备好对客户端进行身份验证。
:::
::: orderedlist
**步骤**
1.  使用以下内容创建 `/usr/local/bin/802-1x-tr-mgmt`{.literal} 文件：
    ``` literallayout
    #!/bin/sh
    if [ "x$1" == "xblock_all" ]
    then
        nft delete table bridge tr-mgmt-br0 2>/dev/null || true
        nft -f -  /dev/null 2>&1'
    ExecStartPre=-/bin/sh -c '/usr/sbin/tc qdisc del dev %i clsact > /dev/null 2>&1'
    ExecStartPre=/usr/sbin/tc qdisc add dev %i clsact
    ExecStartPre=/usr/sbin/tc filter add dev %i ingress pref 10000 protocol 0x888e matchall action ok index 100
    ExecStartPre=/usr/sbin/tc filter add dev %i ingress pref 10001 protocol all matchall action drop index 101