框架使用表来存储链。链包含执行动作的独立规则。`libnftnl`{.literal}
库可用于通过 `libmnl`{.literal} 库与 `nftables`{.literal} Netlink API
进行低级交互。
要显示规则集变化的影响，请使用 `nft list ruleset`{.literal}
命令。由于这些工具将表、链、规则、集合和其他对象添加到
`nftables`{.literal} 规则集中，请注意， `nftables`{.literal}
规则集操作（如 `nft flush ruleset`{.literal}
命令）可能会影响使用之前独立的旧命令安装的规则集。
::: section
::: titlepage
# []{#getting-started-with-nftables_firewall-packet-filters.html#assembly_migrating-from-iptables-to-nftables_getting-started-with-nftables}从 iptables 迁移到 nftables {.title}
:::
如果您的防火墙配置仍然使用 `iptables`{.literal} 规则，您可以将
`iptables`{.literal} 规则迁移到 `nftables`{.literal}。
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
`ipset`{.literal} 和 `iptables-nft`{.literal} 软件包已在 Red Hat
Enterprise Linux 9 中弃用。这包括 `nft-variants`{.literal} （如
`iptables`{.literal}、`ip6tables`{.literal}、`arptables`{.literal} 和
`ebtables`{.literal}
工具）的弃用。如果您使用其中任何一个工具，例如，因为您从早期的 RHEL
版本升级，红帽建议迁移到 `nftables`{.literal} 软件包提供的
`nft`{.literal} 命令行工具。
:::
::: section
::: titlepage
## []{#getting-started-with-nftables_firewall-packet-filters.html#when-to-use-firewalld-nftables-or-iptables_assembly_migrating-from-iptables-to-nftables}使用 firewalld、nftables 或者 iptables 时 {.title}
:::
以下是您应该使用以下工具之一的概述：
::: itemizedlist
-   `firewalld`{.literal}:使用 `firewalld`{.literal}
    实用程序进行简单防火墙用例。此工具易于使用，并涵盖了这些场景的典型用例。
-   `nftables`{.literal}:使用 `nftables`{.literal}
    程序设置复杂和性能关键防火墙，比如针对整个网络。
-   `iptables`{.literal} ：Red Hat Enterprise Linux 上的
    `iptables`{.literal} 实用程序使用 `nf_tables`{.literal} 内核 API
    而不是 `旧的`{.literal} 后端。`nf_tables`{.literal} API
    提供了向后兼容性，以便使用 `iptables`{.literal} 命令的脚本仍可在 Red
    Hat Enterprise Linux 上工作。对于新的防火墙脚本，红帽建议使用
    `nftables`{.literal}。
:::
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
要避免不同的防火墙服务相互影响，在 RHEL
主机中只有一个服务，并禁用其他服务。
:::
:::
::: section
::: titlepage
## []{#getting-started-with-nftables_firewall-packet-filters.html#converting-iptables-rules-to-nftables-rules_assembly_migrating-from-iptables-to-nftables}将 iptables 规则转换为 nftables 规则 {.title}
:::
Red Hat Enterprise Linux 提供了 `iptables-translate`{.literal} 和
`ip6tables-translate`{.literal} 工具，将现有 `iptables`{.literal} 或
`ip6tables`{.literal} 规则转换为与 `nftables`{.literal} 相同的规则。
请注意，一些扩展可能缺少响应的转换支持。如果存在这样的扩展，工具会打印以
`#`{.literal} 符号为前缀的未转换的规则。例如：
``` screen
# iptables-translate -A INPUT -j CHECKSUM --checksum-fill
nft # -A INPUT -j CHECKSUM --checksum-fill
```
此外，用户可以使用 `iptables-restore-translate`{.literal} 和
`ip6tables-restore-translate`{.literal}
工具来转换规则的转储。请注意，在此之前，用户可以使用
`iptables-save`{.literal} 或 `ip6tables-save`{.literal}
命令来打印当前规则的转储。例如：
``` screen
# iptables-save >/tmp/iptables.dump
# iptables-restore-translate -f /tmp/iptables.dump
# Translated by iptables-restore-translate v1.8.0 on Wed Oct 17 17:00:13 2018
add table ip nat
...
```
如需更多信息，以及可能的选项和值列表，请输入
`iptables-translate --help`{.literal} 命令。
:::
::: section
::: titlepage
## []{#getting-started-with-nftables_firewall-packet-filters.html#ref_comparison-of-common-iptables-and-nftables-commands_assembly_migrating-from-iptables-to-nftables}常见的 iptables 和 nftables 命令的比较 {.title}
:::
以下是常见的 `iptables`{.literal} 和 `nftables`{.literal} 命令的比较：
::: itemizedlist
-   列出所有规则：
    ::: informaltable
      iptables                    nftables
      --------------------------- ------------------------------
      `iptables-save`{.literal}   `nft list ruleset`{.literal}
    :::
-   列出某个表和链：
    ::: informaltable
      iptables                                    nftables
      ------------------------------------------- ----------------------------------------------
      `iptables -L`{.literal}                     `nft list table ip filter`{.literal}
      `iptables -L INPUT`{.literal}               `nft list chain ip filter INPUT`{.literal}
      `iptables -t nat -L PREROUTING`{.literal}   `nft list chain ip nat PREROUTING`{.literal}
    :::
    `nft`{.literal}
    命令不会预先创建表和链。只有当用户手动创建它们时它们才会存在。
    ::: title
    **Example:列出 firewalld 生成的规则**
    :::
    ``` literallayout
    # nft list table inet firewalld
    # nft list table ip firewalld
    # nft list table ip6 firewalld
    ```
:::
:::
:::
::: section
::: titlepage
# []{#getting-started-with-nftables_firewall-packet-filters.html#writing-and-executing-nftables-scripts_getting-started-with-nftables}编写和执行 nftables 脚本 {.title}
:::
`nftables`{.literal}
框架提供了一个原生脚本环境，与使用shell脚本来维护防火墙规则相比，它带来了一个主要好处：执行脚本是原子的。这意味着，系统会应用整个脚本，或者在出现错误时防止执行。这样可保证防火墙始终处于一致状态。
另外，`nftables`{.literal} 脚本环境使管理员能够：
::: itemizedlist
-   添加评论
-   定义变量
-   包含其他规则集文件
:::
本节介绍了如何使用这些功能，以及如何创建和执行 `nftables`{.literal}
脚本。
安装 `nftables`{.literal} 软件包时，Red Hat Enterprise Linux 会在
`/etc/nftables/`{.literal} 目录中自动创建 `*.nft`{.literal}
脚本。这些脚本包含为不同目的创建表和空链的命令。
::: section
::: titlepage
## []{#getting-started-with-nftables_firewall-packet-filters.html#supported-nftables-script-formats_writing-and-executing-nftables-scripts}支持的 nftables 脚本格式 {.title}
:::
`nftables`{.literal} 脚本环境支持以下格式的脚本：
::: itemizedlist
-   您可以以与 `nft list ruleset`{.literal}
    命令相同的格式来编写脚本，显示规则集：
    ``` literallayout
    #!/usr/sbin/nft -f
    # Flush the rule set
    flush ruleset
    table inet example_table {
      chain example_chain {
        # Chain for incoming packets that drops all packets that
        # are not explicitly allowed by any rule in this chain
        type filter hook input priority 0; policy drop;
        # Accept connections to port 22 (ssh)
        tcp dport ssh accept
      }
    }
    ```
-   你可以对命令使用与 `nft`{.literal} 命令相同的语法：
    ``` literallayout
    #!/usr/sbin/nft -f
    # Flush the rule set
    flush ruleset
    # Create a table
    add table inet example_table
    # Create a chain for incoming packets that drops all packets
    # that are not explicitly allowed by any rule in this chain
    add chain inet example_table example_chain { type filter hook input priority 0 ; policy drop ; }
    # Add a rule that accepts connections to port 22 (ssh)
    add rule inet example_table example_chain tcp dport ssh accept
    ```
:::
:::
::: section
::: titlepage
## []{#getting-started-with-nftables_firewall-packet-filters.html#running-nftables-scripts_writing-and-executing-nftables-scripts}运行 nftables 脚本 {.title}
:::
您可以通过将其传给 `nft`{.literal} 工具或直接执行脚本来运行
`nftables`{.literal} 脚本。
::: itemizedlist
**先决条件**
-   本节的流程假设您在 `/etc/nftables/example_firewall.nft`{.literal}
    文件中存储了 `nftables`{.literal} 脚本。
:::
::: itemizedlist
**步骤**
-   要通过将其传给 `nft`{.literal} 工具来运行 `nftables`{.literal}
    脚本，请输入：
    ``` literallayout
    # nft -f /etc/nftables/example_firewall.nft
    ```
-   要直接运行 `nftables`{.literal} 脚本：
    ::: orderedlist
    1.  只需要执行一次的步骤：
        ::: orderedlist
        1.  确保脚本以以下 shebang 序列开头：
            ``` literallayout
            #!/usr/sbin/nft -f
            ```
            ::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
            ### 重要 {.title}
            如果省略 `-f`{.literal} 参数，`nft`{.literal}
            实用程序不会读取脚本并显示：`错误：语法错误，意外的换行符，预期字符串`{.literal}。
            :::
        2.  可选：将脚本的所有者设置为 `root`{.literal} ：
            ``` literallayout
            # chown root /etc/nftables/example_firewall.nft
            ```
        3.  使脚本可以被其所有者执行：
            ``` literallayout
            # chmod u+x /etc/nftables/example_firewall.nft
            ```
        :::
    2.  运行脚本：
        ``` literallayout
        # /etc/nftables/example_firewall.nft
        ```
        如果没有输出结果，系统将成功执行该脚本。
    :::
:::
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
即使 `nft`{.literal}
成功执行了脚本，在脚本中错误放置的规则、缺少参数或其他问题都可能导致防火墙的行为不符合预期。
:::
::: itemizedlist
**其他资源**
-   `chown(1)`{.literal} 手册页
-   `chmod(1)`{.literal} 手册页
-   [系统引导时自动载入 nftables
    规则](#getting-started-with-nftables_firewall-packet-filters.html#automatically-loading-nftables-rules-when-the-system-boots_writing-and-executing-nftables-scripts "系统引导时自动载入 nftables 规则"){.link}
:::
:::
::: section
::: titlepage
## []{#getting-started-with-nftables_firewall-packet-filters.html#using-comments-in-nftables-scripts_writing-and-executing-nftables-scripts}使用 nftables 脚本中的注释 {.title}
:::
`nftables`{.literal} 脚本环境将 `#`{.literal}
字符右侧的所有内容都视为注释。
::: example
[]{#getting-started-with-nftables_firewall-packet-filters.html#idm140590621892432}
**例 2.1. nftables 脚本中的注释**
::: example-contents
注释可在一行的开始，也可以在命令后：
``` literallayout
...
# Flush the rule set
flush ruleset
add table inet example_table  # Create a table
...
```
:::
:::
:::
::: section
::: titlepage
## []{#getting-started-with-nftables_firewall-packet-filters.html#using-variables-in-an-nftables-script_writing-and-executing-nftables-scripts}使用 nftables 脚本中的变量 {.title}
:::
要在 `nftables`{.literal} 脚本中定义变量，请使用 `define`{.literal}
关键字。您可以在变量中存储单个值和匿名集合。对于更复杂的场景，请使用 set
或 verdict 映射。
::: variablelist
[只有一个值的变量]{.term}
:   以下示例定义了一个名为 `INET_DEV`{.literal} 的变量，其值为
    `enp1s0`{.literal} ：
    ``` literallayout
    define INET_DEV = enp1s0
    ```