Algorithm 1: Construction of traffic matrix
Input: Topology 𝐺 = (K, E), Server per switch 𝐻
Output: Traffic matrix 𝑇
1 Q ← ∅
2 𝑇 ← 0 ∈ R|K|×|K|
3 for 𝑢 ∈ K \ Q do
4
𝑣 ← arg max𝑣′∈K\Q 𝐿𝑢𝑣′
(𝑡𝑢𝑣, 𝑡𝑣𝑢) ← (𝐻, 𝐻)
Q ← Q ∪ {𝑢, 𝑣}
5
6
7 end
D Proof of Theorem 4.1.
Lemma 8.1. Given a uni-regular topology with total servers 𝑁 and
𝐻 servers per switch, for every switch 𝑢, the number of switches with
at least 𝑚 hops away from the switch is at least
𝑊𝑚 =
𝑁
𝐻
−1−(𝑅−𝐻) (𝑅 − 𝐻 − 1)𝑚−1 − 1
𝑅 − 𝐻 − 2
, 𝑚 ∈ {1, . . . , 𝑑} (10)
where 𝑑 is the minimum diameter computed using Moore bound [39].
Proof. Fix switch 𝑢. Let 𝑦𝑖 be the number of switches with
distance 𝑖 from switch 𝑢. Since every switch has 𝑅 − 𝐻 switch-
to-switch ports, the number of switches with distance 1 from 𝑢
is bouned by 𝑦1 ≤ 𝑅 − 𝐻. The number of switches with distance
𝑖 hops away from switch 𝑢 can be recursively bounded by 𝑦𝑖 ≤
(𝑅 − 𝐻 − 1)𝑦𝑖−1 = (𝑅 − 𝐻 − 1)𝑖−1(𝑅 − 𝐻), as each 𝑖-th switch has
one port connecting to (𝑖 − 1)-th switch. Since there are total 𝑁/𝐻
switches, the number of switches with at least 𝑚 hops away from
switch 𝑢 is 𝑁
𝑖=1 𝑦𝑖 and is at least
𝐻 − 1 −𝑚−1
− 1 − 𝑚−1
𝑦𝑖 ≥ 𝑁
𝐻
𝑖=1
𝑁
𝐻
− 1 − (𝑅 − 𝐻) (𝑅 − 𝐻 − 1)𝑚−1 − 1
𝑅 − 𝐻 − 2
Algorithm 1 generates a traffic matrix with high pair-wise short-
est path length. In each iteration (Line 3-7), from unpicked switches,
it arbitrarily picks a switch 𝑢 and then a switch 𝑣 which maximizes
the shortest path length from 𝑢 (Line 4). Then, it updates entries
𝑡𝑢𝑣 and 𝑡𝑣𝑢 of the traffic matrix 𝑇 with 𝐻.
Lemma 8.2. Given a uni-regular topology with total servers 𝑁 and
𝐻 servers per switch, Algorithm 1 constructs a traffic matrix with at
least 𝑊𝑚 non-zero entries whose shortest path lengths are at least 𝑚,
for 𝑚 ∈ {1, . . . , 𝑑}.
Proof. We will show that there are at least 𝑊𝑚 non-zero entries
whose shortest path lengths are at least 𝑚 at the end of 𝑘𝑚-th
iteration of Algorithm 1 for every 𝑚. Fix 𝑚 and 𝑊𝑚 from Lemma 8.1.
Let Q𝑘 be the set of switches already picked after 𝑘-th iteration
and Q0 = ∅. In the 𝑘-th iteration, switches 𝑢 and 𝑣 are picked
from unpicked switches in K \ Q𝑘−1 such that 𝑣 maximizes the
shortest path length from 𝑢. Let V𝑢
𝑚 denote the set of switches
with distance of at least 𝑚 hops from switch 𝑢. We observe that
𝑚 \ Q𝑘−1;
𝑚 \ Q𝑘−1 is non-empty because
(b) if 𝑊𝑚 − 2(𝑘 − 1) > 0, then V𝑢
𝑚| − |Q𝑘−1| ≥ 𝑊𝑚 − 2(𝑘 − 1) > 0. (We use
|V𝑢
𝑚 \ Q𝑘−1| ≥ |V𝑢
𝑚| ≥ 𝑊𝑚 and the fact that |Q𝑘−1| = 2(𝑘 − 1).)
Lemma 8.1 that |V𝑢
𝑚 \ Q𝑘−1(cid:12)(cid:12) is non-empty, 𝑣 will be picked from V𝑢
(a) if(cid:12)(cid:12)V𝑢
𝐿𝑢𝑣I [𝑡𝑢𝑣 > 0] ≥ 𝑑
Lemma 8.1, we have
(𝑢,𝑣)∈K2
Proof of Theorem 4.1.
𝑚=1
𝑊𝑚.
□
Proof. To prove this theorem, we apply Lemma 8.1 and
Lemma 8.3 to the RHS of Theorem 2.2. We have;
𝜃∗ ≤ min
𝑇 ∈ ˆT
2𝐸
𝐻(𝑢,𝑣)∈K2 𝐿𝑢𝑣I [𝑡𝑢𝑣 > 0]
𝐻 max𝑇 ∈ ˆT(𝑢,𝑣)∈K2 𝐿𝑢𝑣I [𝑡𝑢𝑣 > 0] ≤ 2𝐸
(cid:32) (𝑅 − 𝐻 − 1)𝑑 − 1
𝐻𝐷
2𝐸
− 1) − 𝑅 − 𝐻
𝑅 − 𝐻 − 2
𝑅 − 𝐻 − 2
𝑊𝑚 = 𝑑( 𝑁
𝐻
=
(12)
(cid:33)
− 𝑑
where
𝐷 =
𝑑
𝑚=1
A Throughput-Centric View of the Performance of Datacenter Topologies
SIGCOMM ’21, August 23–28, 2021, Virtual Event, USA
From Equation 12 and using the fact that in uni-regular topologies,
2𝐸 = 𝑁
□
𝐻 (𝑅 − 𝐻), we have the upper bound in Equation 2.
E Asymptotic behavior of throughput gap
In §3.1, we pointed out that the throughput gap for Jellyfish might
be expected to be non-zero in the range 100K – 180K servers, but
could not confirm this because our KSP-MCF implementation does
not scale to these sizes. To be able to quantify the throughput gap
for topologies larger than our computational limit for KSP-MCF, we
compute a lower bound on throughput when routing can exploit all
paths of length equal to or less than the length of the shortest path
plus 𝑀 (𝑀 is a parameter to the lower bound calculation) in Theo-
rem 8.4. Define the theoretical throughput gap to be the difference
between the upper and lower bounds (for a given 𝑀). Intuitively,
the theoretical throughput gap shows the maximum possible gap
one can expect when using our bound in Theorem 2.2. Figure A.1
shows that the magnitude of the theoretical gap as a function of the
topology size. (we use 𝑀 = 1; at this setting, each topology has at
least 300 distinct paths between each source-destination pair across
the entire range of topology sizes we have considered, which is
sufficient for our path-based MCF computation §H).
Figure A.1 shows that the maximum possible gap at these scales is
going to be smaller than that of 3K – 15K. Moreover, the theoretical
gap decreases as the size of the topology grows. We prove this
observation in Corollary 2 showing that the theoretical throughput
gap approaches zero asymptotically. In other words, for very large
topologies, we expect our throughput bound to match the actual
topology throughput.
Figure A.1: Theoretical throughput gap.
We first start by stating the following assumption that always
holds in all of our experiments.
Assumption 1. Given a traffic matrix 𝑇 and a corresponding
solution of our path-based MCF, the ingress capacity of network-
facing ports is saturated by traffic at every switch:
𝑋𝑢(𝑇) + 𝜃(𝑇) 
𝑡𝑣𝑢 = 𝑅𝑢 − 𝐻𝑢
𝑣∈K\{𝑢}
𝑋𝑢(𝑇) = 𝑅𝑢
for every 𝑢 ∈ K
for every 𝑢 ∈ S \ K,
where 𝑋𝑢(𝑇) is the amount of transit traffic on switch 𝑢 as a result of
routing the traffic matrix 𝑇 . Note that 𝐻𝑢 = 0 for every switch with
no servers, and it is omitted in the second equality.
Intuitively, the assumption holds in practice because datacenter
topologies are designed such that all the link capacities can be fully
utilized, as are the ingress capacities. We use this assumption to
prove a bound on throughput gap. Let 𝑀 denote the additive path
length such that every path length is bounded by
𝑙𝑒𝑛(𝑝) ≤ 𝐿𝑢𝑣 + 𝑀 for every 𝑝 ∈ P𝑢𝑣, and every (𝑢, 𝑣) ∈ K2.
Theorem 8.4. Under a permutation traffic matrix 𝑇 ∈ ˆT , when
Assumption 1 holds with the additive path length 𝑀𝑇 (depending
on 𝑇 ), the maximum achievable throughput of a topology (either
uni-regular or bi-regular) is at least;
𝑁 𝑀𝑇 + 𝐻(𝑢,𝑣)∈K2 𝐿𝑢𝑣I [𝑡𝑢𝑣 > 0] .

(𝑅𝑢 − 𝐻𝑢) − 𝜃(𝑇)

Proof. Let S denote the set of all switches. From Assumption
1, we sum the transit traffic 𝑋𝑢(𝑇) over all switches and have the
following equality
𝑋𝑢(𝑇) =

𝜃(𝑇) ≥
(13)
(14)
𝑡𝑣𝑢 .
2𝐸
𝑢∈S
𝑢∈S
𝑢∈K
𝑣∈K\{𝑢}
Note that Assumption 1 changes the inequality in Equation 9 to
equality due to all ingress capacity is fully utilized.
Alternatively, we can compute the total
transit
traffic
(𝑢∈S 𝑋𝑢(𝑇)) based on Equation 5;

𝑋𝑢(𝑇) = 𝜃(𝑇)

𝑋𝑢(𝑇) ≤ 𝜃(𝑇)

𝑣∈K\{𝑢}
𝑢∈K
𝑢∈S
𝑢∈S
𝑢∈K

𝑡𝑢𝑣
𝑝∈P𝑢𝑣

𝑢∈S (𝑅𝑢 − 𝐻𝑢)
𝑣∈K\{𝑢}
𝜃(𝑇) ≥
From Equation 14 and Equation 15, we have
𝑢∈K𝑣∈K\{𝑢} 𝑡𝑢𝑣(𝐿𝑢𝑣 + 𝑀𝑇) .
Finally, using the fact that a)𝑢∈S (𝑅𝑢 − 𝐻𝑢) = 2𝐸, b) 𝑇 is a permu-
tation traffic matrix, c) 𝐿𝑢𝑢 = 0 for every switch 𝑢 and d) the sum of
all the entries except the diagonals of the traffic matrix 𝑇 is at most
𝑁 , we can derive the throughput lower bound in Equation 13. □
The above theorem states the lower bound of throughput with
respect to the additive path length 𝑀𝑇 depending on a given per-
mutation traffic matrix 𝑇 . Our path-based MCF computation shows
that 𝑀𝑇 = 1 is sufficient to provide enough path diversity to make
Assumption 1 valid for all Jellyfish, Xpander and FatClique. Us-
ing Theorem 8.4, we show that the gap between the upper bound
and the lower bound can be arbitrarily small when the network
size is sufficiently large and when a mild assumption holds.
Assumption 2. The additive path length for the maximal permu-
tation traffic matrix ˆ𝑇 does not increase with a topology size such that
𝑀 ˆ𝑇 = 𝑂(1).
𝛽𝑝(𝑇)(𝑙𝑒𝑛(𝑝) − 1).
Since length of all the paths in P𝑢𝑣 is at most 𝐿𝑢𝑣 + 𝑀𝑇 from the
definition of the additive path length, we have;
𝑡𝑢𝑣(𝐿𝑢𝑣 + 𝑀𝑇 − 1).
(15)
10k100k#Servers (N)0.000.050.100.150.200.250.30Throughput GapSIGCOMM ’21, August 23–28, 2021, Virtual Event, USA
Namyar .et al.
Corollary 2. When Assumptions 1 and 2 hold, for any positive
𝜖 such
value 𝜖 > 0, any uni-regular topology with 𝑁 servers has 𝑁∗
that for every 𝑁 ≥ 𝑁∗
𝜖 ;
𝜃∗ − 𝜃𝑙𝑏 ≤ 𝜖
where 𝜃∗ is the throughput upper bound from Theorem 2.2 and 𝜃𝑙𝑏 =
min𝑇 ∈ ˆT 𝜃𝑙𝑏(𝑇) is the mininum of throughput lower bound 𝜃𝑙𝑏(𝑇)
from Theorem 8.4.
Proof. From Assumption 1, it holds for every permutation ma-
trix 𝑇 ∈ ˆT that
𝜃∗ − 𝜃𝑙𝑏(𝑇) ≤ 𝜃∗ − min
𝑇 ∈ ˆT
𝜃∗ − min
𝑇 ∈ ˆT
𝜃𝑙𝑏(𝑇) ≤