Administrator after right-clicking Command Prompt.) A regular system uses a lot of UEFI vari-
ables. The tool supports filtering all the variables by name and GUID. You can even export all the 
variable names and data in a text file using the /out parameter.
Start by dumping all the UEFI variables in a text file:
C:\Tools>UefiTool.exe /enum /out Uefi_Variables.txt 
UEFI Dump Tool v0.1 
Copyright 2018 by Andrea Allievi (AaLl86) 
Firmware type: UEFI 
Bitlocker enabled for System Volume: NO 
Successfully written “Uefi_Variables.txt” file.
You can get the list of UEFI boot variables by using the following filter:
C:\Tools>UefiTool.exe /enum Boot 
UEFI Dump Tool v0.1 
Copyright 2018 by Andrea Allievi (AaLl86) 
Firmware type: UEFI 
Bitlocker enabled for System Volume: NO 
EXPERIMENT: Playing with the UEFI boot variables
You can use the UefiTool utility (found in this book’s downloadable resources) to dump all the 
UEFI boot variables of your system. To do so, just run the tool in an administrative command 
prompt and specify the /enum command-line parameter. (You can launch the command 
prompt as administrator by searching cmd in the Cortana search box and selecting 
cmd in the Cortana search box and selecting 
cmd
Run As 
Administrator after right-clicking Command Prompt.) A regular system uses a lot of UEFI vari-
ables. The tool supports filtering all the variables by name and GUID. You can even export all the 
variable names and data in a text file using the /out parameter.
Start by dumping all the UEFI variables in a text file:
C:\Tools>UefiTool.exe /enum /out Uefi_Variables.txt
UEFI Dump Tool v0.1
Copyright 2018 by Andrea Allievi (AaLl86)
Firmware type: UEFI
Bitlocker enabled for System Volume: NO
Successfully written “Uefi_Variables.txt” file.
You can get the list of UEFI boot variables by using the following filter:
C:\Tools>UefiTool.exe /enum Boot
UEFI Dump Tool v0.1
Copyright 2018 by Andrea Allievi (AaLl86)
Firmware type: UEFI
Bitlocker enabled for System Volume: NO
CHAPTER 12
Startup and shutdown
787
EFI Variable  “BootCurrent” 
   Guid
: {8BE4DF61-93CA-11D2-AA0D-00E098032B8C} 
   Attributes: 0x06 ( BS RT ) 
   Data size : 2 bytes 
   Data: 
   00 00
| 
EFI Variable  “Boot0002” 
   Guid
: {8BE4DF61-93CA-11D2-AA0D-00E098032B8C} 
   Attributes: 0x07 ( NV BS RT ) 
   Data size : 78 bytes 
   Data: 
   01 00 00 00 2C 00 55 00 53 00 42 00 20 00 53 00 |    , U S B   S 
   74 00 6F 00 72 00 61 00 67 00 65 00 00 00 04 07 | t o r a g e   
   14 00 67 D5 81 A8 B0 6C EE 4E 84 35 2E 72 D3 3E | gü¿lNä5.r> 
   45 B5 04 06 14 00 71 00 67 50 8F 47 E7 4B AD 13 | Eq gPÅGK¡ 
   87 54 F3 79 C6 2F 7F FF 04 00 55 53 42 00       | çT≤y/  USB 
EFI Variable  “Boot0000” 
   Guid
: {8BE4DF61-93CA-11D2-AA0D-00E098032B8C} 
   Attributes: 0x07 ( NV BS RT ) 
   Data size : 300 bytes 
   Data: 
   01 00 00 00 74 00 57 00 69 00 6E 00 64 00 6F 00 |    t W I n d o 
   77 00 73 00 20 00 42 00 6F 00 6F 00 74 00 20 00 | w s   B o o t 
   4D 00 61 00 6E 00 61 00 67 00 65 00 72 00 00 00 | M a n a g e r 
   04 01 2A 00 02 00 00 00 00 A0 0F 00 00 00 00 00 | * á 
   00 98 0F 00 00 00 00 00 84 C4 AF 4D 52 3B 80 44 |  ÿ     ä»MR;ÇD 
   98 DF 2C A4 93 AB 30 B0 02 02 04 04 46 00 5C 00 | ÿ,ñô½0F \ 
   45 00 46 00 49 00 5C 00 4D 00 69 00 63 00 72 00 | E F I \ M i c r 
   6F 00 73 00 6F 00 66 00 74 00 5C 00 42 00 6F 00 | o s o f t \ B o 
   6F 00 74 00 5C 00 62 00 6F 00 6F 00 74 00 6D 00 | o t \ b o o t m 
   67 00 66 00 77 00 2E 00 65 00 66 00 69 00 00 00 | g f w . e f i 
   7F FF 04 00 57 49 4E 44 4F 57 53 00 01 00 00 00 |   WINDOWS 
   88 00 00 00 78 00 00 00 42 00 43 00 44 00 4F 00 | ê   x   B C D O 
   42 00 4A 00 45 00 43 00 54 00 3D 00 7B 00 39 00 | B J E C T = { 9 
   64 00 65 00 61 00 38 00 36 00 32 00 63 00 2D 00 | d e a 8 6 2 c - 
   35 00 63 00 64 00 64 00 2D 00 34 00 65 00 37 00 | 5 c d d - 4 e 7 
   30 00 2D 00 61 00 63 00 63 00 31 00 2D 00 66 00 | 0 - a c c 1 - f 
   33 00 32 00 62 00 33 00 34 00 34 00 64 00 34 00 | 3 2 b 3 4 4 d 4 
   37 00 39 00 35 00 7D 00 00 00 6F 00 01 00 00 00 | 7 9 5 }   o 
   10 00 00 00 04 00 00 00 7F FF 04 00
|
EFI Variable "BootOrder" 
   Guid
: {8BE4DF61-93CA-11D2-AA0D-00E098032B8C} 
   Attributes: 0x07 ( NV BS RT ) 
   Data size : 8 bytes 
   Data: 
   02 00 00 00 01 00 03 00
|     
EFI Variable  “BootCurrent”
   Guid
: {8BE4DF61-93CA-11D2-AA0D-00E098032B8C}
   Attributes: 0x06 ( BS RT )
   Data size : 2 bytes
   Data:
   00 00
|
EFI Variable  “Boot0002”
   Guid
: {8BE4DF61-93CA-11D2-AA0D-00E098032B8C}
   Attributes: 0x07 ( NV BS RT )
   Data size : 78 bytes
   Data:
   01 00 00 00 2C 00 55 00 53 00 42 00 20 00 53 00 |    , U S B   S
   74 00 6F 00 72 00 61 00 67 00 65 00 00 00 04 07 | t o r a g e   
   14 00 67 D5 81 A8 B0 6C EE 4E 84 35 2E 72 D3 3E | gü¿ l Nä5.r >
   45 B5 04 06 14 00 71 00 67 50 8F 47 E7 4B AD 13 | E q gPÅG K¡
   87 54 F3 79 C6 2F 7F FF 04 00 55 53 42 00       | çT≤y /  USB
EFI Variable  “Boot0000”
   Guid
: {8BE4DF61-93CA-11D2-AA0D-00E098032B8C}
   Attributes: 0x07 ( NV BS RT )
   Data size : 300 bytes
   Data:
   01 00 00 00 74 00 57 00 69 00 6E 00 64 00 6F 00 |    t W I n d o
   77 00 73 00 20 00 42 00 6F 00 6F 00 74 00 20 00 | w s   B o o t
   4D 00 61 00 6E 00 61 00 67 00 65 00 72 00 00 00 | M a n a g e r
   04 01 2A 00 02 00 00 00 00 A0 0F 00 00 00 00 00 | * á
   00 98 0F 00 00 00 00 00 84 C4 AF 4D 52 3B 80 44 |  ÿ     ä »MR;ÇD
   98 DF 2C A4 93 AB 30 B0 02 02 04 04 46 00 5C 00 | ÿ ,ñô½0 F \
   45 00 46 00 49 00 5C 00 4D 00 69 00 63 00 72 00 | E F I \ M i c r
   6F 00 73 00 6F 00 66 00 74 00 5C 00 42 00 6F 00 | o s o f t \ B o
   6F 00 74 00 5C 00 62 00 6F 00 6F 00 74 00 6D 00 | o t \ b o o t m
   67 00 66 00 77 00 2E 00 65 00 66 00 69 00 00 00 | g f w . e f i
   7F FF 04 00 57 49 4E 44 4F 57 53 00 01 00 00 00 |   WINDOWS 
   88 00 00 00 78 00 00 00 42 00 43 00 44 00 4F 00 | ê   x   B C D O
   42 00 4A 00 45 00 43 00 54 00 3D 00 7B 00 39 00 | B J E C T = { 9
   64 00 65 00 61 00 38 00 36 00 32 00 63 00 2D 00 | d e a 8 6 2 c -
   35 00 63 00 64 00 64 00 2D 00 34 00 65 00 37 00 | 5 c d d - 4 e 7
   30 00 2D 00 61 00 63 00 63 00 31 00 2D 00 66 00 | 0 - a c c 1 - f
   33 00 32 00 62 00 33 00 34 00 34 00 64 00 34 00 | 3 2 b 3 4 4 d 4
   37 00 39 00 35 00 7D 00 00 00 6F 00 01 00 00 00 | 7 9 5 }   o 
   10 00 00 00 04 00 00 00 7F FF 04 00
|
EFI Variable "BootOrder"
   Guid
: {8BE4DF61-93CA-11D2-AA0D-00E098032B8C}
   Attributes: 0x07 ( NV BS RT )
   Data size : 8 bytes
   Data:
   02 00 00 00 01 00 03 00
|     
788
CHAPTER 12
Startup and shutdown
The tool can even interpret the content of each boot variable. You can launch it using the 
/enumboot parameter: 
C:\Tools>UefiTool.exe /enumboot 
UEFI Dump Tool v0.1 
Copyright 2018 by Andrea Allievi (AaLl86) 
Firmware type: UEFI 
Bitlocker enabled for System Volume: NO 
System Boot Configuration 
   Number of the Boot entries: 4 
   Current active entry: 0 
   Order: 2, 0, 1, 3 
Boot Entry #2 
   Type: Active 
   Description: USB Storage 
Boot Entry #0 
   Type: Active 
   Description: Windows Boot Manager 
   Path: Harddisk0\Partition2 [LBA: 0xFA000]\\EFI\Microsoft\Boot\bootmgfw.efi 
   OS Boot Options: BCDOBJECT={9dea862c-5cdd-4e70-acc1-f32b344d4795} 
Boot Entry #1 
   Type: Active 
   Description: Internal Storage 
Boot Entry #3 
   Type: Active 
   Description: PXE Network
When the tool is able to parse the boot path, it prints the relative Path line (the same applies 
for the Winload OS load options). The UEFI specifications define different interpretations for 
the path field of a boot entry, which are dependent on the hardware interface. You can change 
your system boot order by simply setting the value of the BootOrder variable, or by using the 
/setbootorder command-line parameter. Keep in mind that this could invalidate the BitLocker 
Volume master key. (We explain this concept later in this chapter in the “Measured Boot” section):
C:\Tools>UefiTool.exe /setvar bootorder {8BE4DF61-93CA-11D2-AA0D-00E098032B8C} 
0300020000000100 
UEFI Dump Tool v0.1 
Copyright 2018 by Andrea Allievi (AaLl86) 
Firmware type: UEFI 
Bitlocker enabled for System Volume: YES 
Warning, The "bootorder" firmware variable already exist. 
Overwriting it could potentially invalidate the system Bitlocker Volume Master Key. 
Make sure that you have made a copy of the System volume Recovery Key. 
Are you really sure that you would like to continue and overwrite its content? [Y/N] y 
The "bootorder" firmware variable has been successfully written.
The tool can even interpret the content of each boot variable. You can launch it using the 
/enumboot parameter: 
C:\Tools>UefiTool.exe /enumboot
UEFI Dump Tool v0.1
Copyright 2018 by Andrea Allievi (AaLl86)
Firmware type: UEFI
Bitlocker enabled for System Volume: NO
System Boot Configuration
   Number of the Boot entries: 4
   Current active entry: 0
   Order: 2, 0, 1, 3
Boot Entry #2
   Type: Active
   Description: USB Storage
Boot Entry #0
   Type: Active
   Description: Windows Boot Manager
   Path: Harddisk0\Partition2 [LBA: 0xFA000]\\EFI\Microsoft\Boot\bootmgfw.efi
   OS Boot Options: BCDOBJECT={9dea862c-5cdd-4e70-acc1-f32b344d4795}
Boot Entry #1
   Type: Active
   Description: Internal Storage
Boot Entry #3
   Type: Active
   Description: PXE Network
When the tool is able to parse the boot path, it prints the relative Path line (the same applies 
for the Winload OS load options). The UEFI specifications define different interpretations for 
the path field of a boot entry, which are dependent on the hardware interface. You can change 
your system boot order by simply setting the value of the BootOrder variable, or by using the 
/setbootorder command-line parameter. Keep in mind that this could invalidate the BitLocker 
Volume master key. (We explain this concept later in this chapter in the “Measured Boot” section):
C:\Tools>UefiTool.exe /setvar bootorder {8BE4DF61-93CA-11D2-AA0D-00E098032B8C} 
0300020000000100
UEFI Dump Tool v0.1
Copyright 2018 by Andrea Allievi (AaLl86)
Firmware type: UEFI
Bitlocker enabled for System Volume: YES
Warning, The "bootorder" firmware variable already exist.
Overwriting it could potentially invalidate the system Bitlocker Volume Master Key.
Make sure that you have made a copy of the System volume Recovery Key.
Are you really sure that you would like to continue and overwrite its content? [Y/N] y
The "bootorder" firmware variable has been successfully written.
CHAPTER 12
Startup and shutdown
789
After the Application Parameters data structure has been built and all the boot paths retrieved 
(\EFI\Microsoft\Boot is the main working directory), the Boot Manager opens and parses the Boot 
Configuration Data file. This file internally is a registry hive that contains all the boot application de-
scriptors and is usually mapped in an HKLM\BCD00000000 virtual key after the system has completely 
started. The Boot Manager uses the boot library to open and read the BCD file. The library uses EFI ser-
vices to read and write physical sectors from the hard disk and, at the time of this writing, implements 
a light version of various file systems, such as NTFS, FAT, ExFAT, UDFS, El Torito, and virtual file systems 
that support Network Boot I/O, VMBus I/O (for Hyper-V virtual machines), and WIM images I/O. The 
Boot Configuration Data hive is parsed, the BCD object that describes the Boot Manager is located 
(through its GUID), and all the entries that represent boot arguments are added to the startup section 
of the Application Parameters data structure. Entries in the BCD can include optional arguments that 
Bootmgr, Winload, and other components involved in the boot process interpret. Table 12-2 contains 
a list of these options and their effects for Bootmgr, Table 12-3 shows a list of BCD options available to 
all boot applications, and Table 12-4 shows BCD options for the Windows boot loader. Table 12-5 shows 
BCD options that control the execution of the Windows Hypervisor.
TABLE 12-2 BCD options for the Windows Boot Manager (Bootmgr)
Readable name
Values
BCD Element Code1
Meaning
bcdfilepath
Path
BCD_FILEPATH
Points to the BCD (usually \Boot\BCD) file on 
the disk.
displaybootmenu
Boolean
DISPLAY_BOOT_MENU
Determines whether the Boot Manager 
shows the boot menu or picks the default 
entry automatically.
noerrordisplay
Boolean
NO_ERROR_DISPLAY
Silences the output of errors encountered by 
the Boot Manager.
resume
Boolean
ATTEMPT_RESUME
Specifies whether resuming from hiberna-
tion should be attempted. This option is 
automatically set when Windows hibernates.
timeout
Seconds
TIMEOUT
Number of seconds that the Boot Manager 
should wait before choosing the default entry.
resumeobject
GUID
RESUME_OBJECT
Identifier for which boot application 
should be used to resume the system after 
hibernation.
displayorder
List
DISPLAY_ORDER