### Using UefiTool to Manage UEFI Variables

#### Introduction
UefiTool is a utility that allows you to dump and manage UEFI variables. This tool is particularly useful for administrators and security professionals who need to inspect or modify UEFI settings. The following sections will guide you through the process of using UefiTool to dump and interpret UEFI variables, as well as how to change the boot order.

#### Dumping UEFI Variables

1. **Launching UefiTool**:
   - Open an administrative command prompt. You can do this by searching for `cmd` in the Cortana search box, right-clicking on `Command Prompt`, and selecting `Run as administrator`.

2. **Dumping All UEFI Variables**:
   - To dump all UEFI variables into a text file, use the following command:
     ```sh
     C:\Tools>UefiTool.exe /enum /out Uefi_Variables.txt
     ```
   - This command will create a file named `Uefi_Variables.txt` containing all the UEFI variables.

3. **Example Output**:
   ```sh
   UEFI Dump Tool v0.1
   Copyright 2018 by Andrea Allievi (AaLl86)
   Firmware type: UEFI
   Bitlocker enabled for System Volume: NO
   Successfully written “Uefi_Variables.txt” file.
   ```

4. **Filtering UEFI Boot Variables**:
   - To get a list of UEFI boot variables, use the following filter:
     ```sh
     C:\Tools>UefiTool.exe /enum Boot
     ```
   - This command will display only the UEFI boot variables.

#### Interpreting UEFI Boot Variables

1. **Using the `/enumboot` Parameter**:
   - To interpret the content of each boot variable, use the `/enumboot` parameter:
     ```sh
     C:\Tools>UefiTool.exe /enumboot
     ```
   - Example output:
     ```sh
     UEFI Dump Tool v0.1
     Copyright 2018 by Andrea Allievi (AaLl86)
     Firmware type: UEFI
     Bitlocker enabled for System Volume: NO
     System Boot Configuration
        Number of the Boot entries: 4
        Current active entry: 0
        Order: 2, 0, 1, 3
     Boot Entry #2
        Type: Active
        Description: USB Storage
     Boot Entry #0
        Type: Active
        Description: Windows Boot Manager
        Path: Harddisk0\Partition2 [LBA: 0xFA000]\\EFI\Microsoft\Boot\bootmgfw.efi
        OS Boot Options: BCDOBJECT={9dea862c-5cdd-4e70-acc1-f32b344d4795}
     Boot Entry #1
        Type: Active
        Description: Internal Storage
     Boot Entry #3
        Type: Active
        Description: PXE Network
     ```

#### Changing the Boot Order

1. **Setting the Boot Order**:
   - You can change the system boot order by setting the value of the `BootOrder` variable. For example:
     ```sh
     C:\Tools>UefiTool.exe /setvar bootorder {8BE4DF61-93CA-11D2-AA0D-00E098032B8C} 0300020000000100
     ```
   - Example output:
     ```sh
     UEFI Dump Tool v0.1
     Copyright 2018 by Andrea Allievi (AaLl86)
     Firmware type: UEFI
     Bitlocker enabled for System Volume: YES
     Warning, The "bootorder" firmware variable already exists.
     Overwriting it could potentially invalidate the system Bitlocker Volume Master Key.
     Make sure that you have made a copy of the System volume Recovery Key.
     Are you really sure that you would like to continue and overwrite its content? [Y/N] y
     The "bootorder" firmware variable has been successfully written.
     ```

#### Understanding the Boot Process

1. **Application Parameters Data Structure**:
   - After the Application Parameters data structure is built and all boot paths are retrieved, the Boot Manager opens and parses the Boot Configuration Data (BCD) file. This file is a registry hive that contains all boot application descriptors and is usually mapped to the `HKLM\BCD00000000` virtual key after the system has started.

2. **Boot Configuration Data (BCD) Options**:
   - The BCD file contains various options that control the behavior of the Boot Manager and other boot applications. Table 12-2 lists some of these options for the Windows Boot Manager (Bootmgr).

| Readable Name | Values | BCD Element Code | Meaning |
|---------------|--------|------------------|---------|
| bcdfilepath | Path | BCD_FILEPATH | Points to the BCD file on the disk. |
| displaybootmenu | Boolean | DISPLAY_BOOT_MENU | Determines whether the Boot Manager shows the boot menu or picks the default entry automatically. |
| noerrordisplay | Boolean | NO_ERROR_DISPLAY | Silences the output of errors encountered by the Boot Manager. |
| resume | Boolean | ATTEMPT_RESUME | Specifies whether resuming from hibernation should be attempted. |
| timeout | Seconds | TIMEOUT | Number of seconds that the Boot Manager should wait before choosing the default entry. |
| resumeobject | GUID | RESUME_OBJECT | Identifier for which boot application should be used to resume the system after hibernation. |
| displayorder | List | DISPLAY_ORDER | Specifies the order in which boot entries are displayed. |

By following these steps and using the provided commands, you can effectively manage and interpret UEFI variables on your system.