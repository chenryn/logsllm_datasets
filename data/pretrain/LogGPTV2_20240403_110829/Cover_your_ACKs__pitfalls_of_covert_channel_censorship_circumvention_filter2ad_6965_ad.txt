rectly connect to each other. A Skype client sitting behind a NAT
box will send multiple packets to the client it is calling, even if that
client also resides behind a NAT box. Only if those packets fail
to reach their destination will the caller fall back to a supernode.
Additionally, the callee will attempt to send packets in response di-
rectly to the caller, even if the caller is actively using a supernode to
reach the callee. The issue for FreeWave users is that this allows the
censor to ﬂag connections that are using Skype to connect to Free-
Wave servers. The censor can easily enumerate the IP addresses of
the FreeWave servers by placing calls to the FreeWave VoIP IDs
and examining which IP addresses Skype attempts to directly con-
nect to. The censor can then ﬂag hosts that send UDP packets to,
or receive UDP packets from, those IP addresses. This issue can,
to some extent, be ﬁxed by adding the FreeWave server to a ﬁre-
wall on the user’s machine, and user’s IP address to a ﬁrewall on
the server side. However, it still serves as an excellent illustration
of the issues with using an active system that is in constant ﬂux. In
order to not rely on the underlying architecture of Skype, FreeWave
would have to resort to a framework similar to SkypeMorph, where
proxy IDs are secret and distributed out of band. This would allow
FreeWave clients to directly connect to proxies using the Skype ID.
But then we are operating in the same environment presented in
Section 5.1 with all the same problems of using a proxy model in a
peer to peer system.
The peer to peer system used by many VoIP based systems present
alternative methods for the censor to detect FreeWave users. Con-
tinuing to focus on Skype, using supernodes as proxies exposes the
Figure 8: Ratio of daily Tor bridge users from Syria, Iran, and
China compared to the overall number of available Tor bridges.
fore China started blocking access. Having so many unique clients
connecting through each bridge daily is going to create trafﬁc pat-
terns quite different than one would expect from a normal Skype
user. For example, long lived connections spanning many hours
will be much longer than the most video calls where only 5% last
longer than and hour [5], having multiple simultaneous connec-
tions overlapping at different time windows, and clients that seem-
ingly communicate non-stop with a large number of unique clients
around the clock. These characteristics do not even need to be able
to deﬁnitively identify SkypeMorph connections, they can tolerate
some small amount of false positives and only need to be able to
exclude a large number of actual Skype connections. Once a con-
nection is ﬂagged a censor can attempt to create a SkypeMorph
connection to the client under suspicion in order to verify that it’s a
SkypeMorph bridge.
This also points to a problem that would be faced when deploy-
ing SkypeMoprh bridges into the Tor network. A large number
of Tor bridges are already blacklisted by censoring countries, only
new bridges unknown by these countries deploying SkypeMorph
would be able to be reached by the clients. This implies an even
smaller base of reachable SkypeMoprh bridges available to these
countries, which could be potentially swarmed as clients attempt to
use them amplifying the statistics mentioned previously, making it
even easier for the SkypeMorph bridges to be ﬂagged.
5.2 FreeWave Proxies
FreeWave prevents this type of ﬁngerprinting by using supern-
odes in the Skype network as proxies, which then forward the con-
051015202060100140Time (s)Packet Length (bytes)051015202060100140Time (s)Packet Length (bytes)051015202060100140Time (s)Packet Length (bytes)2011201220130246810User to bridge ratioSyriaIranChina369(a) Packet length standard deviation over time
(b) Average Packet Differences Over Time
Figure 10: While tracking connections over Skype, these show how the modem in FreeWave compares to actual voice data when comparing
the (a) standard deviation of observed packet lengths and (b) the average difference between difference between packet lengths
user to identiﬁcation should the censor observe the supernode. As
shown previously, the censor can use Skype to enumerate the IP
addresses of FreeWave servers. Since the supernode is a simple
one hop proxy, the censor can then defeat the unobservability of
FreeWave simply by observing trafﬁc through supernodes. While
many censors might ﬁnd this out of their scope of capabilities, oth-
ers would ﬁnd the task trivial. For example, China currently forces
users to run its own version of Skype called TomSkype [14]. This is
currently done so Chinese censors can view instant messaging chat
between users. It would be a simple change to force TomSkype
to only select supernodes that reside inside China, making linkage
between the two IP addresses carrying out a call possible.
6. CROSS-CONTENT DELIVERY
Extensive research has been done on information leakage in en-
crypted VoIP calls [26, 25, 24], showing how a censor can iden-
tify languages spoken, recognize key phrases, and even reconstruct
parts of the conversation. This is possible due to the fact that when
using variable bitrate (VBR) codecs, common in applications like
Skype and Google Talk, there is a strong correlation between how
much voice data there is to send and the packet length (in contrast to
constant bitrate codecs which have ﬁxed lengths). Previous meth-
ods that take advantage of this information leakage are generally
fairly complex, relying on Hidden Markov Models or classiﬁers
such as k−Nearest Neighbor or χ2. While these techniques might
work for analyzing a targeted VoIP call, implementing these meth-
ods on a large scale would be very computationally intensive and
impractical or even impossible to perform across all calls. To this
end, Houmansadr et al. demonstrate that FreeWave over Skype has
similar trafﬁc statistics to actual Skype communication, comparing
minimum, maximum, and average packet sizes.
While the very basic trafﬁc statistics are similar, there still might
exist an intermediate test geared speciﬁcally towards FreeWave traf-
ﬁc that can still be performed with ease. The simplest model used
for exploiting the information leakage was the χ2 in [26] for lan-
guage classiﬁcation. In this case the model had to differentiate be-
tween 22 different possible languages, our task is considerably eas-
ier only needing a binary classiﬁcation. Using the packet lengths
generated by the samples from Oregon Graduate Institute corpus
[15] mentioned in Section 3, we compared the distribution of packet
lengths to those generated by the modem. Figure 11 shows the
probability density functions of the minimum, maximum, and av-
erage packet lengths seen over the OGI sample set, with the corre-
sponding value for the modem marked on each density.
Figure 11: Distribution of minimum/average/maximum packet
lengths of actual voice data, with x marking values computed for
the FreeWave modem packet lengths
The minimum and average packet length for modem overlaps al-
most perfectly with the densities for actual speech, and while the
maximum value is close to the left tail, it still overlaps implying that
you cannot distinguish modem from potential legitimate VoIP traf-
ﬁc using only these metrics, conﬁrming the original claim. How-
ever, as seen in Figure 10, there is still a very noticeable difference
in stream of packet lengths seen with the modem compared to ac-
tual speech. Modem packet lengths seen in Figure 9c have a much
tighter distribution then either the English or Portuguese samples.
Using this intuition, we can build computationally simplistic bi-
nary classiﬁers that can detect modem trafﬁc from actual speech.
Figure 10 shows the divergence of modem verses speech while
tracking either standard deviation of the observed packet lengths
over time, or simply keeping track of the average inter packet length
difference. The average inter packet length difference starts to di-
verge for the modem connection after around 10 seconds, but while
the average is lower than all but one of the samples, it’s still fairly
close to the other averages potentially making it harder to differ-
entiate and lead to false positives. Tracking the standard deviation
produces much better results, starting to signiﬁcantly diverge af-
ter only 5 seconds. Furthermore, the standard deviation on packet
length for the modem ends up being 2.0 - 2.5 times lower than all
of the speech standard deviation, making it much easier to classify
05101520510152025Time (s)Packet Length Standard DeviationMoDemVoice0510152046812Time (s)Median Packet Length DifferenceMoDemVoice0501001500.000.040.08Packet LengthPDFminimumaveragemaximum370without the risk of false positives. Being able to use such a low
resource classiﬁer lets a censor conduct widespread monitoring of
encrypted VoIP calls instead of being limited to targeting speciﬁc
connections.
7. CONCLUSION
With the increase in technologies available to censoring regimes,
achieving unobservability in censorship-resilient systems is becom-
ing increasingly difﬁcult. In response there have been a new wave
of systems that attempt to use popular services such as VoIP as a
cover-protocol for anonymous communication. While the use of
mimicry has been shown to be a ﬂawed approach, these systems
can be improved to actively participate in the cover-protocol, re-
moving their reliance on mimicry techniques. We show that even
removing the dependence on mimicry is not enough to achieve un-
observability alone, as there are signiﬁcant problems in delivering
anonymous communication over these cover protocols.
First, we show there are issues in differential error tolerance be-
tween the anonymous communication and legitimate cover-protocol
trafﬁc. By using an unreliable channel to tunnel data, these sys-
tems must implement their own mechanisms for ensuring reliable
data transmission. Due to the fact that the cover-protocols are er-
ror tolerant and can still operate while incurring packet loss rates
from 10-15%, a censor is able to interfere with the mechanisms at-
tempting to ensure reliable transmission, limiting the use of anony-
mous communication while retaining usability of legitimate use of
the cover-protocol. Next, we demonstrate the inherent problems in
forcing a client-proxy model on to a peer-to-peer system. Diverging
use cases for the different systems allow for noticeable trafﬁc pat-
terns that can be ﬂagged by censors, easily breaking unobservabil-
ity. Additionally, we explore the pitfalls of relying on a dynamic
external network for proxies, as changes can quickly break cen-
sorship circumvention. Finally we look at issues in cross-content
delivery, showing that even when fully participating in the cover-
protocol system, issues arise in attempting to deliver content out-
side the normal scope of operation, leading to low cost methods of
detection.
Acknowledgments We thank the anonymous reviewers for their
valuable feedback and suggestions. This research was supported
by NSF grants CNS-0917154, CNS-1223421, and CNS-1314637.
8. REFERENCES
[1] JAP: The JAP anonymity & privacy homepage.
http://anon.inf.tu-dresden.de/.
[2] Knock Knock Knockin’ on Bridges’ Doors.
https://blog.torproject.org/blog/
knock-knock-knockin-bridges-doors.
[3] The Anonymizer. https://www.anonymizer.com/.
[4] BOLOT, J.-C. End-to-end packet delay and loss behavior in
the internet. In Conference proceedings on Communications
architectures, protocols and applications (New York, NY,
USA, 1993), SIGCOMM ’93, ACM, pp. 289–298.
[5] BONFIGLIO, D., MELLIA, M., MEO, M., AND ROSSI, D.
Detailed analysis of skype trafﬁc. Multimedia, IEEE
Transactions on 11, 1 (2009).
[6] DING, L., AND GOUBRAN, R. A. Speech quality prediction
in voip using the extended e-model. In Global
Telecommunications Conference, 2003. GLOBECOM’03.
IEEE (2003), vol. 7, IEEE, pp. 3974–3978.
[7] DINGLEDINE, R., AND MATHEWSON, N. Design of a
blocking-resistant anonymity system. Tech. rep., Tor Project,
November 2006.
[8] DINGLEDINE, R., MATHEWSON, N., AND SYVERSON, P.
Tor: the second-generation onion router. In Proceedings of
the 13th conference on USENIX Security Symposium (2004),
USENIX Association.
[9] HOUMANSADR, A., BRUBAKER, C., AND SHMATIKOV, V.
The parrot is dead: Observing unobservable network
communications. In Security and Privacy (SP), 2011 IEEE
Symposium on (2013), IEEE.
[10] HOUMANSADR, A., NGUYEN, G. T., CAESAR, M., AND
BORISOV, N. Cirripede: circumvention infrastructure using
router redirection with plausible deniability. In Proceedings
of the 18th ACM Conference on Computer and
Communications Security (CCS) (2011).
[11] HOUMANSADR, A., RIEDL, T., BORISOV, N., AND
SINGER, A. I want my voice to be heard: Ip over
voice-over-ip for unobservable censorship circumvention.
NDSS.
[12] KARLIN, J., ELLARD, D., JACKSON, A. W., JONES, C. E.,
LAUER, G., MANKINS, D. P., AND STRAYER, W. T. Decoy
routing: Toward unblockable internet communication. In
Proceedings of the USENIX Workshop on Free and Open
Communications on the Internet (FOCI) (2011).
[13] KHO, W., BASET, S. A., AND SCHULZRINNE, H. Skype
relay calls: Measurements and experiments. In INFOCOM
Workshops 2008, IEEE (2008), IEEE.
[14] KNOCKEL, J., CRANDALL, J. R., AND SAIA, J. Three
researchers, ﬁve conjectures: An empirical analysis of
tom-skype censorship and surveillance. In USENIX
Workshop Free and Open Communications on the Internet
(FOCI) (2011).
[15] LANDER, T., COLE, R. A., OSHIKA, B., AND NOEL, M.
The ogi 22 language telephone speech corpus. In Proc.
Eurospeech (1995), vol. 95.
[16] LYON, G. F. Nmap Network Scanning: The Ofﬁcial Nmap
Project Guide to Network Discovery and Security Scanning.
Insecure, 2009.
[17] MCLACHLAN, J., AND HOPPER, N. On the risks of serving
whenever you surf: vulnerabilities in tor’s blocking
resistance design. In Proceedings of the 8th ACM workshop
on Privacy in the electronic society (2009), ACM.
[18] MOHAJERI MOGHADDAM, H., LI, B., DERAKHSHANI,
M., AND GOLDBERG, I. Skypemorph: protocol obfuscation
for tor bridges. In Proceedings of the 2012 ACM conference
on Computer and communications security (New York, NY,
USA, 2012), CCS ’12, ACM, pp. 97–108.
[19] ROSENBERG, J., SCHULZRINNE, H., CAMARILLO, G.,
JOHNSTON, A., PETERSON, J., SPARKS, R., HANDLEY,
M., AND SCHOOLER, E. SIP: Session Initiation Protocol.
RFC 3261 (Proposed Standard), June 2002. Updated by
RFCs 3265, 3853, 4320, 4916, 5393, 5621, 5626, 5630,
5922, 5954, 6026, 6141.
[20] SCHUCHARD, M., GEDDES, J., THOMPSON, C., AND
HOPPER, N. Routing around decoys. In Proceedings of the
2012 ACM conference on Computer and communications
security (2012), ACM.
[21] SMITS, R., JAIN, D., PIDCOCK, S., GOLDBERG, I., AND
HENGARTNER, U. Bridgespa: improving tor bridges with
single packet authorization. In Proceedings of the 10th
annual ACM workshop on Privacy in the electronic society
(2011), ACM.
[22] WANG, Q., GONG, X., NGUYEN, G. T., HOUMANSADR,
A., AND BORISOV, N. Censorspoofer: asymmetric
communication using ip spooﬁng for censorship-resistant
web browsing. In Proceedings of the 2012 ACM conference
on Computer and communications security (New York, NY,
USA, 2012), CCS ’12, ACM, pp. 121–132.
[23] WEINBERG, Z., WANG, J., YEGNESWARAN, V.,
BRIESEMEISTER, L., CHEUNG, S., WANG, F., AND
BONEH, D. Stegotorus: a camouﬂage proxy for the tor
anonymity system. In Proceedings of the 2012 ACM
conference on Computer and communications security
(2012), ACM.
[24] WHITE, A. M., MATTHEWS, A. R., SNOW, K. Z., AND
MONROSE, F. Phonotactic reconstruction of encrypted voip
conversations: Hookt on fon-iks. In Security and Privacy
(SP), 2011 IEEE Symposium on (2011), IEEE.
371[25] WRIGHT, C. V., BALLARD, L., COULL, S. E., MONROSE,
F., AND MASSON, G. M. Spot me if you can: Uncovering
spoken phrases in encrypted voip conversations. In Security
and Privacy, 2008. SP 2008. IEEE Symposium on (2008),
IEEE.
[26] WRIGHT, C. V., BALLARD, L., MONROSE, F., AND
MASSON, G. M. Language identiﬁcation of encrypted voip
trafﬁc: Alejandra y roberto or alice and bob. In Proceedings
of the 16th USENIX Security Symposium (2007).
[27] WUSTROW, E., WOLCHOK, S., GOLDBERG, I., AND
HALDERMAN, J. A. Telex: anticensorship in the network
infrastructure. In Proceedings of the 20th USENIX
Conference on Security (SEC) (2011).
[28] ZHANG, X., XU, Y., HU, H., LIU, Y., GUO, Z., AND
WANG, Y. Proﬁling skype video calls: Rate control and
video quality. In INFOCOM, 2012 Proceedings IEEE
(2012), IEEE.
372