            "   ServerName \"".$sname."\"".             "\n".
            "   ServerId \"".$uid."\"".                 "\n".
            "   Family ".$af.                           "\n".
            "   Interface ".$ifname.                    "\n".
            "   Port 1900".                             "\n".
            "   Address 239.255.255.250".               "\n".
            "   Datagrams On".                          "\n".
            "   Virtual".                               "\n".
            "   {".                                     "\n".
            "       AnyHost".                           "\n".
            "       Control".                           "\n".
            "       {".                                 "\n".
            "           Alias /".                       "\n".
            "           Location /htdocs/upnp/docs/".$uid."\n".
            "           External".                      "\n".
            "           {".                             "\n".
            "               /htdocs/upnp/ssdpcgi { * }"."\n".
            "           }".                             "\n".
            "       }".                                 "\n".
            "   }".                                     "\n".
            "}".                                        "\n".
            "\n";
    }
    function upnp_server($sname, $uid, $ifname, $af, $ipaddr, $port)
    {
        if ($af=="inet6") return;
        echo
            "Server".                                   "\n".
            "{".                                        "\n".
            "   ServerName \"".$sname."\"".             "\n".
            "   ServerId \"".$uid."\"".                 "\n".
            "   Family ".$af.                           "\n".
            "   Interface ".$ifname.                    "\n".
            "   Address ".$ipaddr.                  "\n".
            "   Port ".$port.                           "\n".
            "   Virtual".                               "\n".
            "   {".                                     "\n".
            "       AnyHost".                           "\n".
            "       Control".                           "\n".
            "       {".                                 "\n".
            "           Alias /".                       "\n".
            "           Location /htdocs/upnp/docs/".$uid."\n".
            "       }".                                 "\n".
            "   }".                                     "\n".
            "}".                                        "\n".
            "\n";
    }
    foreach("/runtime/services/http/server")
    {
        $model  = query("/runtime/device/modelname");
        $ver    = query("/runtime/device/firmwareversion");
        $smart404 = query("/runtime/smart404");
        $sname  = "Linux, HTTP/1.1, ".$model." Ver ".$ver;  /* HTTP server name */
        $suname = "Linux, UPnP/1.0, ".$model." Ver ".$ver;  /* UPnP server name */
        $mode   = query("mode");
        $inf    = query("inf");
        $ifname = query("ifname");
        $ipaddr = query("ipaddr");
        $port   = query("port");
        $hnap   = query("hnap");
        $widget = query("widget");
        $af     = query("af");
        if ($af!="" && $ifname!="")
        {
            if      ($mode=="HTTP") http_server($sname, $inf,$ifname,$af,$ipaddr,$port,$hnap,$widget,$smart404);
            else if ($mode=="SSDP") ssdp_server($sname, $inf,$ifname,$af,$ipaddr);
            else if ($mode=="UPNP") upnp_server($suname,$inf,$ifname,$af,$ipaddr,$port);
        }
    }
    ?>
可以了解到该php用于生成配置文件，由于我们只需要其中的http服务，可以按照该配置文件改写我们所需的conf。
    Umask 026
    PIDFile /var/run/httpd.pid
    LogGMT On  #开启log
    ErrorLog /log #log文件
    Tuning
    {
        NumConnections 15
        BufSize 12288
        InputBufSize 4096
        ScriptBufSize 4096
        NumHeaders 100
        Timeout 60
        ScriptTimeout 60
    }
    Control
    {
        Types
        {
            text/html    { html htm }
            text/xml    { xml }
            text/plain    { txt }
            image/gif    { gif }
            image/jpeg    { jpg }
            text/css    { css }
            application/octet-stream { * }
        }
        Specials
        {
            Dump        { /dump }
            CGI            { cgi }
            Imagemap    { map }
            Redirect    { url }
        }
        External
        {
            /usr/sbin/phpcgi { php }
        }
    }
    Server
    {
        ServerName "Linux, HTTP/1.1, "
        ServerId "1234"
        Family inet
        Interface eth0 #对应qemu虚拟机的网卡
        Address 192.168.79.143 #对于qemu虚拟机IP
        Port "1234" #对应未被使用的端口
        Virtual
        {
            AnyHost
            Control
            {
                Alias /
                Location /htdocs/web
                IndexNames { index.php }
                External
                {
                    /usr/sbin/phpcgi { router_info.xml }
                    /usr/sbin/phpcgi { post_login.xml }
                }
            }
            Control
            {
                Alias /HNAP1
                Location /htdocs/HNAP1
                External
                {
                    /usr/sbin/hnap { hnap }
                }
                IndexNames { index.hnap }
            }
        }
    }
接下来利用qemu系统模式仿真路由器的运行环境，具体的配置过程在文章[路由器漏洞挖掘环境搭建](https://pup2y.github.io/2020/03/30/lu-you-qi-lou-dong-wa-jue-huan-jing-da-jian/)的qemu网络配置中有提到。
利用下面命令启动，接下来的实验是一次性实验，因为会覆盖qemu虚拟机原本文件系统中的/etc等文件夹从而损坏原有配置，所以无法第二次启动。
    sudo qemu-system-mipsel -M malta -kernel vmlinux-3.2.0-4-4kc-malta -hda debian_squeeze_mipsel_standard.qcow2 -append "root=/dev/sda1 console=tty0" -net nic -net tap -nographic
测试能ping通的情况下，将文件系统利用scp命令拷贝到mipsel虚拟机中。
    sudo scp -r squashfs-root PI:EMAIL:/root/
之后编写copy.sh脚本配置启动http服务需要的环境包括动态链接库，以及conf配置文件中提到的`/usr/sbin/phpcgi`，`/usr/sbin/hnap`。
copy.sh，需要进入squashfs-root目录使用，脚本最后启动了http服务。
    #!/bin/bash
    cp conf /
    cp sbin/httpd /
    cp -rf htdocs/ /
    rm /etc/services
    cp -rf etc/ /
    cp lib/ld-uClibc-0.9.30.1.so  /lib/
    cp lib/libcrypt-0.9.30.1.so  /lib/
    cp lib/libc.so.0  /lib/
    cp lib/libgcc_s.so.1  /lib/
    cp lib/ld-uClibc.so.0  /lib/
    cp lib/libcrypt.so.0  /lib/
    cp lib/libgcc_s.so  /lib/
    cp lib/libuClibc-0.9.30.1.so  /lib/
    cd /
    ln -s /htdocs/cgibin /htdocs/web/hedwig.cgi
    ln -s /htdocs/cgibin /usr/sbin/phpcgi
    ln -s  /htdocs/cgibin /usr/sbin/hnap
    ./httpd -f conf
之后可以在浏览器访问conf文件中配置的192.168.79.143:1234/hedwig.cgi
或者在宿主机中使用以下命令：其中-v显示详细信息，-X指定什么指令，-H 自定义头信息传递给服务器，-b 指定cookie字符串。
    #curl http://192.168.79.143:1234/hedwig.cgi -v -X POST -H "Content-Length: 8" -b  "uid=zh"
    *   Trying 192.168.79.143...
    * Connected to 192.168.79.143 (192.168.79.143) port 1234 (#0)
    > POST /hedwig.cgi HTTP/1.1