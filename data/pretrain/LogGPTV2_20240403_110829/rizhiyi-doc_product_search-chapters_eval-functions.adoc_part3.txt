### 搜索命令函数

| 函数 | 描述 | 示例 |
| --- | --- | --- |
| `abs(X)` | 返回数字X的绝对值。 | `... \| eval absv = abs(value)` |
| `exp(X)` | 返回e的X次方。 | `... \| eval y = exp(3)` |
| `ln(X)` | 返回X的自然对数（以e为底）。 | `... \| eval lnBytes = ln(bytes)` |
| `empty(x)` 或 `isempty(X)` | 判断某个字段是否为空。如果存在返回`false`，否则返回`true`。 | `... \| eval isEmpty = empty(apache.status)` |
| `case(X, "Y", ..., [default, Z])` | 根据布尔表达式X的结果选择相应的Y值。如果没有匹配项，则返回默认值Z（可选）。 | `... \| eval desc = case(error == 200, "OK", error == 500, "Internal Server Error", default="Unexpected error")` |
| `ceil(X)` | 返回X向上取整后的整数值。 | `... \| eval n = ceil(4.1)` |
| `cidrmatch(X, Y)` | 判断IP地址Y是否在CIDR表示法X所定义的子网范围内。 | `... \| eval matched = cidrmatch("192.168.1.130/25", "192.168.1.129")` |
| `coalesce(X, ...)` | 返回第一个非空参数，如果所有参数都为空则返回空。 | `... \| eval username = coalesce(user_name, user)` |
| `floor(X)` | 返回X向下取整后的最接近的整数。 | `... \| eval n = floor(4.1)` |
| `format(FORMAT, [X...])` | 格式化字符串，类似于printf功能。 | `... \| eval formattedRate = format("%.1fMB", rate)` <br> `... \| eval output = format("%s => %s", "aa", "bb")` |
| `formatdate(X[, Y])` | 将UTC时间值X格式化为指定的时间格式Y。默认格式为"yyyy-MM-dd HH:mm:ss.SSS"。 | `... \| eval v = formatdate(timestamp, "HH:mm")` |
| `datetime_diff(X, Y[, Z])` | 计算两个时间戳之间的时间差，单位可以是毫秒、天、小时、分钟或秒。 | `... \| eval diff = datetime_diff(1655870081000, 1655870082000, "ms")` |
| `if(X, Y, Z)` | 如果布尔表达式X为真，则返回Y，否则返回Z。 | `... \| eval desc = if(status == 200, "OK", "Error")` |
| `in(field, X, ...)` | 判断字段中的值是否存在于给定的值列表中。 | `... \| eval field = 'appname' \| where in(field, 'appname', 'hostname')` |
| `isnum(X)` | 判断字段X是否为数值类型。 | `... \| eval isNumeric = isnum(apache.status)` |
| `isstr(X)` | 判断字段X是否为字符串类型。 | `... \| eval isString = isstr(apache.method)` |
| `len(X)` | 返回字符串X的长度。 | `... \| eval n = len(method)` |
| `log(X [,Y])` | 返回以Y为底X的对数，默认底数为10。 | `... \| eval num = log(number, 2)` |
| `pi()` | 返回π的值。 | `... \| eval area_circle = pi() * pow(radius, 2)` |
| `pow(X, Y)` | 返回X的Y次方。 | `... \| eval n = pow(number, 3)` |
| `sqrt(X)` | 返回X的平方根。 | `... \| eval n = sqrt(number)` |
| `acos(X)` | 返回X的反余弦值（弧度）。 | `... \| eval result = acos(0)` |
| `acosh(X)` | 返回X的反双曲余弦值（弧度）。 | `... \| eval result = acosh(1)` |
| `asin(X)` | 返回X的反正弦值（弧度）。 | `... \| eval result = asin(0)` |
| `asinh(X)` | 返回X的反双曲正弦值（弧度）。 | `... \| eval result = asinh(5)` |
| `atan(X)` | 返回X的反正切值（弧度）。 | `... \| eval result = atan(0.5)` |
| `atan2(Y, X)` | 返回Y/X的反正切值（弧度），考虑象限。 | `... \| eval result = atan2(0.5, 0.75)` |
| `atanh(X)` | 返回X的反双曲正切值（弧度）。 | `... \| eval result = atanh(0.5)` |
| `cos(X)` | 返回X的余弦值（弧度）。 | `... \| eval result = cos(0)` |
| `cosh(X)` | 返回X的双曲余弦值（弧度）。 | `... \| eval result = cosh(0)` |
| `hypot(X, Y)` | 返回欧几里得范数，即sqrt(X^2 + Y^2)。 | `... \| eval result = hypot(2, 2)` |
| `sin(X)` | 返回X的正弦值（弧度）。 | `... \| eval result = sin(0)` |
| `sinh(X)` | 返回X的双曲正弦值（弧度）。 | `... \| eval result = sinh(0)` |
| `tan(X)` | 返回X的正切值（弧度）。 | `... \| eval result = tan(0)` |
| `tanh(X)` | 返回X的双曲正切值（弧度）。 | `... \| eval result = tanh(0)` |
| `entropy(field)` | 计算指定字段的熵值。 | `... \| eval e = entropy(json.name)` |
| `lower(X)` | 返回字符串X的小写形式。 | `... \| eval lowerstr = lower(method)` |
| `match(X, Y)` | 使用正则表达式Y对字符串X进行匹配，返回匹配结果。 | `... \| eval matched = match(ip, "^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$")` |
| `contains(X, Y)` | 判断字符串X是否包含字符串Y中的任意一个值。 | `... \| eval a = split("a,b,c,e", ",") \| eval b = "Hello,world!" \| eval c = contains(b, a)` |
| `max(X, ...)` | 返回一组数值中的最大值。 | `... \| eval maxv = max(101, 100.0)` |
| `min(X, ...)` | 返回一组数值中的最小值。 | `... \| eval minv = min(101, 100.0)` |

此表格提供了常用搜索命令函数的描述和示例，以便于理解和使用。