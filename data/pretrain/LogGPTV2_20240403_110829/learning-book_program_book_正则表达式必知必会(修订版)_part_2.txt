字符
· 36
2.1.1有多个匹配结果
5.1.2
匹配零个或多个
2.1.2字母的大小写问题
- 8
字符
.39
2.2
匹配任意字符
- 9
5.1.3
匹配零个或一个
2.3
匹配特殊字符
12
字符
2.4
小结
14
5.2匹配的重复次数
43
第3章
匹配一组字符
15
5.2.1
为重复匹配次数设
匹配多个字符中的某一个·15
定一个精确的值
44
5.2.2
为重复匹配次数设
3.2
利用字符集合区间
17
定一个区间
45
3.3
取非匹配
21
5.2.3
匹配“至少重复
3.4
小结
22
多少次”
 46
第4章
使用元字符
23
5.3防止过度匹配
47
对特殊字符进行转义
23
5.4小结
4.1
49
4.2
匹配空白字符
26
第6章位置匹配
50
4.3匹配特定的字符类别
28
6.1边界
50
---
## Page 10
目
录
6.2单词边界
·51
9.3向后查找
83
6.3字符申边界
·54
9.4
把向前查我和向后查找结
6.4小结
·59
合起来.
86
第7章使用子表达式
· 60
9.5对前后查找取非
87
7.1什么是子表达式
60
9.6小结
89
7.2子表达式
61
第10章嵌入条件
90
7.3子表达式的嵌套
65
10.1
为什么要嵌入条件
90
7.4小结
67
10.2
正则表达式里的条件
91
第8章
回溯引用：前后一致
10.2.1回溯引用条件
91
匹配
68
10.2.2前后查找条件
6
回溯引用有什么用
10.3小结
68
96
71
附录A
常见应用软件和编
8.3
回测引用在替换操作中的
程语言中的正则表
应用
74
达式
97
8.4小结
79
附录B
常见问题的正则表
第9章前后查找
80
达式解决方案
110
9.1前后查找
80
附录C正则表达式测试器-128
9.2向前查找
81
---
## Page 11
第1章
正则表达式入门
在本章里，你将学习何为正则表达式以及它们可以帮助你做些什么。
1.1正则表达式的用途
正则表达式（regular expression，简称regex）是一种工具，和其他工
具一样，它是人们为了解决某一类专门的间题而发明的。要想理解正则
表达式及其功用，最好的办法是了解它们可以解决什么样的间题。
请考虑以下几个场景。
口你正在搜索一个文件，这个文件里包含着单词car（不区分字母大
小写），但你并不想把包含着字符串car的其他单词（比如scar、
carry和incarcerate等）也找出来。
口你打算用一种应用服务器来动态地生成一个Web网页以显示从某
个数据库里检索出来的文本。在那些文本里可能包含着一些URL
地址字符串，而你希望那些URL地址在最终生成的页面里是可点
击的（也就是说，你打算生成一些合法的HTML代码—
一而不仅仅是普通的文本）。
口你创建了一份包含着一张表单的Web页面，这张表单用来收集用
户信息，其中包括一个电子邮件地址。你需要检查用户给出的电
子邮件地址是否符合正确的语法格式。
口你正在编辑一段源代码并且要把所有的size都替换为isize，但这
种替换仅限于单词size本身面不涉及那些包含者字符串size的
其他单词，
---
## Page 12
2第1章正则表达式入门
口你正在显示一份计算机文件系统中所有文件的清单，但你只想把
文件名里包含着Application字样的文件列举出来。
口你正在把一些数据导入应用程序。那些数据以制表符作为分隔符，
但你的应用程序要支持CSV格式（每条记录独占一行，同一条记
录里的各项数据之间用逗号分隔并允许被括在引号里面）。
口你需要在文件里搜索某个特定的文本，但你只想把出现在特定位
置的（比如每行的开头或是每条语句的结尾）找出来。
以上场景都是大家在编写程序时经常会遇到的问题，用任何一种支
持条件处理和字符串操作的编程语言都可以解决它们，但问题是你的解
决方案将会变得十分复杂。比较容易想到的办法是，用一些循环来依次
遍历那些单词或字符并在循环体里面用一系列1f语句来进行测试，这往
往意味着你需要使用大量的标志来标记你已经找到了什么，你还没有找
到什么，还需要检查空白字符和特殊字符，等等。面这一切都需要以手
工方式来进行。
另一种解决方案是使用正则表达式。上述问题都可以用一些精心构
造的语句，或者说一些由文本和特殊指令构成的高度简练的字符串来解
决，比如像下面这样的语句：
\b[Cc] [Aa] [Rr]\b
它的含义是什么。
1.2如何使用正则表达式
如果认真思考一下那些问题场景，就会发现它们不外乎两种情况：
一种是查找特定的信息（搜索），另一种是查找并编辑特定的信息（替换）。
事实上，从根本上来讲，那正是正则表达式的两种基本用途：搜索和替
换。给定一个正则表达式，它要么匹配一些文本（进行一次搜索），要么
匹配并替换一些文本（进行一次替换）。
---
## Page 13
1.2如何使用正则表达式3
1.2.1用正则表达式进行搜索
正则表达式的主要用途之一是搜索变化多端的文本，比如刚才描述
的搜索单词car的场景：你要把car、CAR、Car，或CaR都找出来，但这只
是整个间题比较简单的一部分（有许多搜索工具都可以完成不区分字母
大小写的搜索）。比较困难的部分是确保scar、carry和incarcerate之
类的单词不会被匹配到。一些比较高级的编辑器提供了MatchOnlyWhole
Word（仅匹配整个单词）选项，但还有许多编辑器并不具备这一功能，
而你往往无法在你正在编辑的文档里做出这种调整。使用正则表达式而
不是纯文本car进行搜索就可以解决这个问题。
?
提示想知道如何解决这个问题吗？你们其实已经见过答案
了，它就是我们刚才给出的示例语句：\b[Cc][Aa][Rr]\b。
请注意，“等于”比较（比如说，用户给出的电子邮件地址是否匹配
这个正则表达式）本质上也是一种搜索操作，这种搜索操作会对用户所
提供的整个字符串进行搜索以寻找一个匹配，与此相对的是子字符串搜
索，子字符串搜索是“搜索”这个词的普通含义。
1.2.2用正则表达式进行替换
正则表达式搜索的威力非常强大，非常有用，面且比较容易学习和
掌握。本书的许多章节和示例都与“匹配”有关。不过，正则表达式的
真正威力体现在替换操作方面，比如我们刚才所描述的需要把URL地址
字符串替换为可点击URL地址的场景：这需要先把相关文本里的URL地
址字符串找出来（比如说，通过搜索以http：//或https：//开头、以句号、
逗号或空白字符结尾的字符串），再把找到的URL地址字符串替换为
HTML语言的元素，如下所示：
http:/wwr.forta. con/
替换结果：
http: //www,forta.com/
绝大多数应用程序的“Search andReplace”（搜索和替换）选项都可
---
## Page 14
4
第1章正则表达式入门
以完成这种替换操作，但使用一个正则表达式来完成这个任务将简单得
让人难以置信。
1.3什么是正则表达式
现在，你已经知道正则表达式是用来干什么的了，我们再来给它下
个定义。简单地说，正则表达式是一些用来匹配和处理文本的字符串。
正则表达式是用正则表达式语言创建的，这种语言的用途就是为了解决
我们前面所描述的种种间题。与其他程序设计语言一样，正则表达式语
言也有需要你们去学习的特殊语法和指令，它们正是本书要教给大家的
东西。
正则表达式语言并不是一种完备的程序设计语言，它甚至算不上是
一种能够直接安装并运行的程序。更准确地说，正则表达式语言是内置
于其他语言或软件产品里的“迷你”语言，好在现在几乎所有的语言或
工具都支持正则表达式，但是正则表达式与你正在使用的语言或工具可
以说毫无相似之处。正则表达式语言虽然也被称为一种语言，但它与人
们对语言的印象相去甚远。
注意正则表达式起源于20世纪50年代在数学领城的一些研
究工作。几年之后，计算机领城借鉴那些研究工作的成果和思
路开发出了Unix世界里的Perl语言和grep等工具程序。在许多
年里，正则表达式只流行于Unix平台（Unix程序员用它们来解
决我们前面所描述的各种问题），但这种情况早已发生了变化，
现在儿乎所有的计算平台都支持正则表达式，只是具体方式和
支持程度略有差异而已。
说完这些掌故，我们再来看几个例子。下面都是合法的正则表达式
（稍后再解释它们的用途）：
uag 
 www\ , forta^ , com
---
## Page 15
1.4使用正则表达式5
[a-zA-Z0-9_- ]*
 ,*
\\n\\n