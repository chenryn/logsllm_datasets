and frequency-domain backoff to contend for each sub-channel for
transmission. The contention result is resolved by the receiving
stations and fed back to each AP by M-CTS broadcasts.
However, there is another issue in presence of two-way trafﬁc.
Assume that an AP and one client have frames to exchange. Since
FICA does not use time backoff by default, both nodes may send
an M-RTS simultaneously. This may cause a failure if there are no
other nodes that can send back an M-CTS. Further, even if there is
a third node that receives these M-RTSs and sends an M-CTS back
153with the contention resolution, it is still possible that both the AP
and the client have been granted some winning subchannels. So,
they will both transmit data simultaneously but neither of them can
receive its frame due to the simplex radio used.
To address this issue, FICA separates uplink and downlink trafﬁc
by assigning different DIFS times to the AP and stations. The one
with a short DIFS has priority to access the channel by sending an
M-RTS earlier. To ensure fairness between uplink and downlink
trafﬁc, we use a simple dynamic DIFS assignment strategy. We
assign a ﬁxed DIFS time to all mobile stations, and the AP has
two different DIFS time settings. One is shorter than the DIFS of
mobile stations, and the other one is longer. The AP chooses a
DIFS time based on the following rules: (1) once an AP accesses
the channel with a short DIFS, it will use the long DIFS for its next
access; and (2) if an AP receives an M-RTS from stations, it will
use a short DIFS for its next access. Note that this simple strategy
ensures the fair interleaving of uplink and downlink trafﬁc, but not
the fairness among all nodes as 802.11 currently does. In effect,
it gives the AP many more chances to transmit — which may be
an appropriate strategy given the asymmetrical nature of WLAN
application workloads. It is an interesting open question of what
sort of fairness is best provided in FICA and remains future work.
3.5 Discussion
We end the description of FICA with a few additional points of
consideration. For the issues raised, we broadly describe potential
approaches for addressing them, but in general leave an exhaustive
discussion of them as future work.
Hidden terminals. Until now, we have only described FICA within
a single broadcast domain. How does FICA operate in a network
with hidden terminals, and therefore when there are multiple over-
lapped contention domains? Hidden terminals cannot be coordi-
nated by carrier sensing. As a result, there is a chance for M-RTSs
to collide if the misalignment of symbols from hidden terminals
exceeds the long cyclic preﬁx. To prevent persistent M-RTS colli-
sions, once a node misses an M-CTS or it receives an invalid M-
CTS after it sends an M-RTS, the node should wait for a random
time before sending an M-RTS again. This random waiting time is
necessary to de-synchronize the hidden terminals. However, since
M-RTS/M-CTSs are short, we believe the chance of M-RTS/M-
CTSs collisions will be small.
Another issue is that when a node contends for a subchannel
in multiple domains, it may receive inconsistent resolution results
from M-CTSs from different APs. This will effectively prevent the
node from sending on that subchannel since the received informa-
tion is a mixture from two M-CTSs. Only when the node is the
winner in all contention domains it participates in should it be al-
lowed to access the subchannels (implying all returned M-CTSs
contain the same resolution results for intended subchannels). We
believe such behavior is reasonable and follows the general princi-
ple of wireless system designs.
Multi-user diversity. FICA also enables an opportunity to exploit
multi-user diversity in WLANs [26]. When a node chooses sub-
channels to access, it may also consider the quality of each sub-
channel. Moreover, heterogeneous modulation methods can be ap-
plied to different subchannels to match the conditions on that spe-
ciﬁc channel band. There is already much research on resource
allocation for multi-user diversity in both single and multi-channel
cases [7,12,15,21], and applying these ideas in a distributed system
like FICA remains interesting open challenges.
Backwards compatibility. It is also possible for FICA to coexist
with current 802.11. Since FICA is still based on CSMA, FICA
nodes will defer if they sense a transmission of 802.11 nodes, and
vice versa. It is also possible to retain fairness among these two
types of nodes. For example, since FICA has a ﬁxed access pattern
with the M-RTS/M-CTS handshake, it is possible to choose an ap-
propriate DIFS time (e.g., equal to half of the CWmin of 802.11) for
FICA to be fair to 802.11 nodes with random time-domain backoff.
Cellular vs. WLAN environments. Finally, we note that the mech-
anisms designed in FICA may unlikely be applicable in cellular
networks because coverage of a cellular base station is large (e.g.,
a few kilometers). Thus, the propagation time is large as well, at
least an order of magnitude larger than that in a WLAN. Conse-
quently, even using broadcasting the synchronization accuracy is
too coarse (e.g., several tens of microseconds). Current OFDM-
based WWANs already emply a relative long cyclic preﬁx (4:69(cid:22)s)
and FFT period (66:67(cid:22)s) to handle a large delay spread due to
multi-path fading in the wide area. A low-precision synchroniza-
tion method in OFDMA will further enlarge the symbol FFT size,
adding substantial engineering complexity to control frequency off-
sets and undermining the ability to handle Doppler effects in a mo-
bile environment.
4. SIMULATION
We implemented an event-based simulator to study the perfor-
mance of FICA in large-scale wireless networks and to compare
its performance with 802.11n. The simulator can model both the
CSMA MAC and an OFDM PHY that supports multiple subchan-
nels. We study the performance primarily under a single AP net-
work with varying number of stations. We assume only collisions
will cause frame reception failures, and thus we focus on the per-
formance of the MAC design. We also focus on only the uplink
transmissions (the downlink behavior in this setting is analogous),
and we apply various trafﬁc patterns in a wide 40MHz channel with
high data rates. For 802.11n, we also simulate MAC Service Data
Units (MSDU) aggregation, the most efﬁcient aggregation method
deﬁned in 802.11n [1].
For FICA, we use the same values of tsifs and tdifs as in 802.11.
The preamble in FICA requires three OFDM symbols for single
and 2x MIMO and four for 4x MIMO. Using the three-symbol
preamble as an example, tpreamble = 46:8(cid:22)s, and counting another
OFDM symbol for the ACK, i.e., tack = 15:6(cid:22)s, the subtotal per-
access MAC overhead of FICA is 157:8(cid:22)s. Note that although
FICA uses the M-RTS/M-CTS handshake, the overhead is compa-
rable to that of 802.11 (160(cid:22)s with minimal contention window)
due to the use of the PHY signaling mechanism. Eq. 7 gives a
simple model for FICA’s access efﬁciency,
(cid:17)ﬁca =
tdifs + trts/cts/ack + tpreamble + 3 (cid:2) tsifs + tdata
tdata
;
(7)
where trts/cts/ack = tmrts + tmcts + tmack.
Thus, to achieve an efﬁciency ratio of 80%, we need 40 DATA
OFDM symbols. For different PHY data rates, frame sizes for
the same efﬁciency correspond to a size of 400/800/1600 bytes at
145/290/580Mbps, respectively. We use these sizes as a rule of
thumb for FICA nodes to fragment upper layer frames and send
each fragment on one subchannel.
No aggregation. In this scenario, we ﬁrst disable the frame aggre-
gation of 802.11n as a lower bound. Figure 8 shows the through-
put efﬁciency of 802.11n and FICA with two different frequency-
backoff schemes: AIMD and Reset-to-Max (RMAX) (Section 3.3.2).
The scenario simulates ten concurrent nodes where each node trans-
mits UDP trafﬁc corresponding to 1/10 of the PHY data rate with
a frame size of 1500 bytes. As expected, with a 1500-byte frame
154Figure 8: Efﬁciency ratio of 802.11 and FICA with different
PHY data rates. No frame aggregation is enabled.
current 802.11a/g rates only provide around a 50% efﬁciency ra-
tio, and this ratio decreases rapidly with the increase of the PHY
data rate. However, by enabling ﬁne-grained channel access, FICA
can achieve a much higher efﬁciency ratio in the same situation.
This beneﬁt is because different stations can access different sub-
channels simultaneously. Thus the per-access MAC overhead is
amortized among all concurrent nodes. Also, we ﬁnd that FICA
AIMD has slightly better performance than FICA RMAX. As we
will see in subsequent experiments, FICA AIMD consistently per-
forms better. We hypothesize that this is because FICA AIMD ad-
justs Cmax much smoother compared to FICA RMAX. However,
a deep analysis on the optimal frequency-domain backoff strategy
remains future work.
This scenario is the worst case for 802.11n. We show this case
to demonstrate how signiﬁcant the MAC overhead can be at high
PHY data rates, and that techniques like FICA or frame aggregation
are indeed necessary for efﬁciency.
Full aggregation. Here, we show the best case of 802.11n with
frame aggregation. In this experiment, all nodes are saturated so
that the frame aggregation can work most efﬁciently. Figure 9
shows throughput efﬁciency with different numbers of contending
nodes at two PHY data rates, 150Mbps and 600Mbps, respectively.
In both cases, the efﬁciency of 802.11n has been signiﬁcantly im-
proved due to frame aggregation. Since all nodes are saturated, the
aggregation level is very high: 12 frames (or 18KB) on average.
FICA still has slightly better performance than 802.11n even in
this case, though, because FICA has slightly fewer collisions com-
pared to 802.11n. To understand why, consider the operation of
frequency domain contention. When there are many stations con-
tending for a subchannel, if two stations happen to pick up the same
subcarrier to send their signals, it does not necessarily result in a
collision. A collision occurs only when the collided subcarrier is
also chosen as the winner as nodes contend for subchannels. In
the next contention period, all stations will pick a different random
number again. This situation is unlike time-domain backoff used
in 802.11: when two stations pick the same backoff slots they will
eventually collide with each other.
Mixed trafﬁc. Finally we evaluate a situation in between the two
extremes. We have ﬁve saturated stations that always have full-
sized frames to transmit. In addition, there are a variable number
of nodes that have small but delay-sensitive trafﬁc representing, for
instance, video conferencing or Web browsing. We choose the load
of this delay sensitive trafﬁc uniformly from 800Kbps to 5Mbps,
and the packet size from 800–1300 bytes. Figure 10 shows the efﬁ-
ciency results of this scenario as a function of the number of delay-
sensitive nodes. With a few delay-sensitive nodes, the through-
put efﬁciency of the network is signiﬁcantly reduced for 802.11n.
Since the delay sensitive ﬂows cannot be aggregated, their access
(a)
(b)
Figure 9: Full aggregation case. For 802.11, the maximal aggre-
gated frame size is 28KB. All nodes are saturated. (a) 802.11
PHY 150Mbps; FICA 145Mbps.
(b) 802.11 PHY 600Mbps;
FICA 580Mbps.
(a)
(b)
Figure 10: Mixed trafﬁc. Five nodes are fully saturated. All
other nodes have delay-sensitive trafﬁc with a uniform distri-
bution between 800Kbps to 5Mbps. (a) 802.11 PHY 150Mbps;
FICA 145Mbps. (b) 802.11 PHY 600Mbps; FICA 580Mbps.
to the channel is much less efﬁcient. Thus, the overall channel uti-
lization is reduced. However, with FICA such nodes can request
access to fewer subchannels, leaving the other subchannels for use
by other nodes. Consequently, the overall network efﬁciency re-
mains at a high level, improving upon 802.11 from 16% up to 4
times better at the high PHY data rates.
5.
IMPLEMENTATION
We have also implemented the basic mechanisms of FICA us-
ing Sora, a fully programmable software radio platform based on
commodity general-purpose PC architectures [24]. Our FICA im-
plementation is based on SoftWiFi, a software implementation of
the 802.11a/b/g PHY/MAC [24]. We make the following modiﬁ-
cations: (1) we change the FFT size from 64-point to 256-point
for DATA/ACK symbols and 512-point for M-RTS/M-CTS sym-
bols; (2) we employ convolutional coding in each subchannel and
decode data in each subchannel individually using the Viterbi al-
gorithm; (3) we remove the random time-domain backoff in the
CSMA MAC, and implement the M-RTS/M-CTS handshake after
the channel is sensed idle.
FICA uses a PHY frame structure and synchronization algorithm
similar to 802.11. A preamble precedes data symbols. The ﬁrst
symbol is used for symbol time synchronization (i.e., ﬁnding the
boundary of symbols). It employs a self-repeating pattern in the
time domain so that the receiver can detect it using auto-correlation.
The second symbol is used for channel estimation. To support 4x
MIMO, another training symbol is needed. The last symbol en-
codes the Physical Layer Convergence Protocol (PLCP) header us-
ing BPSK and 1/2 convolutional coding. The PLCP header contains
the modulation mode used in the following DATA symbols for the
receiver to set the proper demodulating parameters.
01020304050607080900200400600Efficiency  (%)PHY Data Rate (Mbps)802.11FICA AIMDFICA RMAX010203040506070809001020304050Efficiency (%)# of nodes802.11FICARMAXFICAAIMD010203040506070809001020304050Efficiency (%)# of nodes802.11FICARMAXFICAAIMD010203040506070809051015202530354045Efficiency (%)# of delay sensitive nodes802.11FICARMAXFICAAIMD010203040506070809051015202530354045Efficeiency (%)# of delay-sensitive nodes802.11FICARMAXFICAAIMD155Figure 11: Measured frequency offsets of two nodes over two
weeks starting from a single calibration.
There are two practical issues that our implementation addresses:
Threshold setting. With physical layer signal symbols (M-RTS/M-
CTS), we need a proper energy threshold to reliably detect the bit
modulated on each subcarrier. Since we target WLANs, where the
signal-to-noise-ratio (SNR) is usually high, setting such a threshold
is not a difﬁcult task [5]. In FICA, we further use a self-calibration
method to facilitate this threshold setting. We use blank subcarriers
(carrying a bit “0”) in the M-RTS/M-CTS tag band to calibrate the
noise ﬂoor. Then, we choose a threshold that is a constant multiple
of the noise ﬂoor. In our experiments, we ﬁnd that a threshold 2–
5dB higher than the noise ﬂoor works reliably in WLAN settings.
Frequency offset calibration. In OFDM-based multi-access net-
works, the frequency offset among simultaneous senders should be
controlled within a certain range. Otherwise, it will undermine the
orthogonality among subcarriers since the concurrent senders are
not actually transmitting on orthogonal frequency due to the offset.
Thus, in FICA, all nodes should have their frequency calibrated.
Fortunately, FICA can use the AP’s frequency as a reference.
Every station can hear the beacon from the AP and adjust its local
numerically-controlled oscillator (NCO) to match the frequency of
the AP. We note that frequency calibration is much simpler than
time synchronization, since the frequency offset does not accumu-
late over time. Figure 11 shows the measured absolute value of
the frequency offset of two Sora nodes over two weeks after a sin-
gle calibration. The frequency offset is within a limited range of
500Hz. This range is quite small compared to the data subcarrier
width (0:63% of 80KHz), and its impact to orthogonality can be
neglected in practice. Thus, we conclude that an infrequent fre-
quency calibration process can support FICA very well.
Although Sora is the fastest programmable software radio plat-
form that allows us to prototype FICA quickly, it still has a limita-
tion that prevents our implementation from running in real-time. It
takes too long to transfer the just-in-time modulated PHY frames
from the CPU to the Radio Control Board (RCB) after receiving
contention results in the M-CTS. As a result, it will miss the SIFS
deadline by a small margin. To improve the situation, we will either
need a faster version of Sora or take the step of moving part of the
FICA implementation to hardware.
6. EVALUATION
In this section, we evaluate the feasibility of FICA using our
prototype implementation on four Sora nodes: one serves as the
AP and the others are stations. We ﬁrst demonstrate how well con-
current transmissions can be coordinated in a WLAN. We evaluate
the maximal symbol timing misalignment at the receiver for two
concurrent transmissions coordinated by means of carrier sensing
and broadcasting. We show that even with our existing software