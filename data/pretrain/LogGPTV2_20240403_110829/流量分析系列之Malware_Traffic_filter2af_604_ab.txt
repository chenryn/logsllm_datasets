###  Problem 8
> **What is the FQDN of the compromised website?**
本题的问题是，受感染的网站的完全限定域名是什么？
到目前为止，我们还没有找到Tom上网时感染的源头是什么，他到底访问了什么站点导致他的主机被感染？
我们继续过滤，看看什么流量中包含gate站点：
    ip contains solution.babyboomershopping.org
在一条从IP
`64.34.173.208`到受害主机`10.1.25.119`的流量中，包含`solution.babyboomershopping.org`，跟踪该条TCP流：
由此我们得知，本题的答案，compromised
website的完全限定域名为`shotgunworld.com`。攻击者采用了相同的frame劫持的方法，通过iframe将受害者重定向至gate站点`solution.babyboomershopping.org`，通过这个中间站点再将用户重定向至EK服务器。所以整条attack链为：
> **_shotgunworld.com — > solution.babyboomershopping.org —> EK server_**
###  Problem 9
> **The compromised website contains a malicious js that redirect the user to
> another website. What is the variable name passed to the “document.write”
> function?**
>
> Hint：OX_
这道题的答案很简单，从上题追踪到的TCP Stream知道，iframe是当页面加载的时候，执行js，然后将iframe写入页面的：
所以本题的答案为`OX_7f561e63`。
该流量包的分析就暂时到此为止了。
## Malware Traffic Analysis-2
流量包： ，提取码：0099。
这道题没什么场景，一上来就给了一个pcap数据包，以及几个问题，直接开始分析！
###  分析过程
###  Problem 1
> **What is the IP address of the Windows VM that gets infected?**
首先，第一道题就是求被感染主机的IP。在没有任何场景提示的情况下，一拿到流量包就要分析，还是先送到VirusTotal上扫描，扫描结果显示这个数据包还是有点东西的，其中包括11条Snort
alerts和23条Suricata alerts：
查看更详细的分析，看来受害主机是被Exploit-Kit感染了的：
既然存在木马文件，那么拖入数据包分析神器Brim看看。拖入Brim后，发现有很多files：
很容易就和Exploit-Kit联系起来，过滤出所有files流量：
    _path=files
所以的destination ip全是`172.16.165.165`：
在wireshark中进行过滤：
    http.request
数据包源IP地址都是`172.16.165.165`。也可以过滤：
    http.response
得到的结果也在预料之中，目的地址都是`172.16.165.165`：
得到本题答案：受害主机IP为`172.16.165.165`。
###  Problem 2
> **What is the hostname of the Windows VM that gets infected?**
查找主机名只要过滤出dhcp流量即可，我们选择第一条源地址为受害主机的dhcp流量：
很容易得到主机名为`K34EN6W3N-PC`。当然，因为是Windows主机，还可以过滤`nbns`流量来获取主机名：
###  Problem 3
> **What is the MAC address of the infected VM?**
求受害主机的MAC地址很简单，只要和受害主机IP相关的流量中都能提取出该条信息，比如我们过滤：
    ip.src==172.16.165.165
当然，也可以过滤ARP流量，查看发起ARP广播的相关信息：
得到本题答案：受害主机MAC地址为：`f0:19:af:02:9b:f1`。
###  Problem 4
> **What is the IP address of the compromised web site?**
从VirusTotal的扫描结果看，受害主机是在网上冲浪时被感染了Exploit-Kit，但是具体是怎么感染的我们还不清楚。但是从受害主机发出的http请求中，我们大概可以得到compromised website的候选站点：
分别是：
IP | Host  
---|---  
82.150.140.30 | www.ciniholland.nl  
185.53.178.9 | adultbiz.in  
188.225.73.100 | 24corp-shop.com  
37.200.69.143 | stand.trustandprobaterealty.com  
我们先从流量包中提取出恶意软件，选择`File->Export Objects->HTTP`：
选择`Save All`将这些文件全部提取保存在文件夹中，然后一起拖入扫描软件Clam中检查：
从该流量包中提取出了37个文件，经过Clam扫描，发现了4个恶意软件，分别选择上面的四个文件，然后选择`Analysis`选项，就能逐个得到可以的源文件。最后发现是这4个可疑文件被扫描出：
    index.php%3freq=swf&num=809&PHPSSESID=njrMNruDMhvJFIPGKuXDSKVbM07PThnJko2ahe6JVg%7cZDJiZjZiZjI5Yzc5OTg3MzE1MzJkMmExN2M4NmJiOTM
    index.php%3freq=swf&num=7533&PHPSSESID=njrMNruDMhvJFIPGKuXDSKVbM07PThnJko2ahe6JVg%7cZDJiZjZiZjI5Yzc5OTg3MzE1MzJkMmExN2M4NmJiOTM
    index.php%3freq=jar&num=3703&PHPSSESID=njrMNruDMhvJFIPGKuXDSKVbM07PThnJko2ahe6JVg%7CZDJiZjZiZjI5Yzc5OTg3MzE1MzJkMmExN2M4NmJiOTM
    index.php%3freq=jar&num=9229&PHPSSESID=njrMNruDMhvJFIPGKuXDSKVbM07PThnJko2ahe6JVg%7CZDJiZjZiZjI5Yzc5OTg3MzE1MzJkMmExN2M4NmJiOTM
从中提取出关键信息：
    req=swf&num=809
    req=swf&num=7533
    req=jar&num=3703
    req=jar&num=9229
虽然不清楚这几串请求中`num`参数带的数字是什么意义，但是至少我们可以知道malware的格式分别为是swf格式的flash文件和jar包：
接着从中过滤出与这四条请求相关的http流量：
    ip contains "req=swf&num=809" or ip contains "req=swf&num=7533" or ip contains "req=jar&num=3703" or ip contains "req=jar&num=9229"
顺利返回4条记录，这4条记录的目的地址IP都是`37.200.69.143`，对应域名为`stand.trustandprobaterealty.com`：
由此我们可以知道，提供感染受害主机的Exploit-Kit是由主机`stand.trustandprobaterealty.com`提供的，它就是Exploit-Kit感染链中的提供EK的主机 **EK
server** 。
现在我们找到了攻击链中的最后一个设备 **EK server** ，不过本题需要找的是攻击链中的第一环节，即 **Compromised website**
。
当然我们还不知道这中间是不是存在一些gate traffic。不过在一般场景中，攻击链无非是：
> **_Compromised(legitimate) website — > EK server_**
>
> **_Compromised website — > Gate —> EK_**
>
> **_Compromised website — > First gate —> Second gate —> EK_**
>
> **_Compromised website — > First gate —> Second gate —> n… gate —> EK_**
我一开始的想法是看看EK server是不是还存在于其他主机与受害主机的通讯流量中，所以进行过滤：
    ip contains stand.trustandprobaterealty.com
但是返回的结果表明该domain仅在受害主机和EK server之间的流量中存在：
没关系，前面我们过滤出4条与Exploit-Kit和malware相关的流量：
    ip contains "req=swf&num=809" or ip contains "req=swf&num=7533" or ip contains "req=jar&num=3703" or ip contains "req=jar&num=9229"
右键追踪HTTP流，在受害主机向EK
server（`stand.trustandprobaterealty.com`）的HTTP请求包中，数据包请求头header中的`Referer`字段是`http://24corp-shop.com`，4个受害主机向EK
server请求恶意软件的请求数据包的header中都包含相同的Referer字段（当然受害者自己本人大概率是不知道的，除非他要已经知道恶意站点的情况，只是进行研究）：
所以我们知道了在EK server之前的gate是`24corp-shop.com`，对应IP为`188.225.73.100`。我们得到的额外信息是，在EK
server返回的响应包中，恶意数据是通过`gzip`的格式传输的。
攻击链更新为：
> **_unknown Compromised website — > … gate —> gate [24corp-shop.com] —> EK
> server [stand.trustandprobaterealty.com]_**
过滤出`24corp-shop.com`相关的http流量：
    http.request and ip.addr==188.225.73.100
右键跟踪HTTP流，该请求数据包请求头中`Referer`字段为`http://www.ciniholland.nl`，对应IP为`82.150.140.30`：
并且gate搭建了一个假的页面来欺骗访问的用户，采用的攻击方法是iframe劫持。
继续向前追溯，过滤与`www.ciniholland.nl`相关的http请求：
    http.request and ip.addr==82.150.140.30
选择第一条请求主站点的数据流，追踪数据流：
我们看到，同样是利用frame劫持的手段，不过该隐形iframe是通过js写入的，当文档被完全加载和解析后，就会执行`showBrowVer()`函数，该函数会创建一个`div`标签，然后在该标签中写入iframe，将用户重定向至gate服务器，而且为了防止此处执行`showBrowVer()`失败，攻击者在页面的最后也放了相同的函数来保证用户能够被重定向至恶意软件所在的服务器：
而且从该条流量我们也能够发现，`Referer`字段为`http://www.bing.com/search?q=ciniholland.nl&qs=ds&form=QBLH`：
到这里，整个流量指向的事件已经很清楚了，是受害主机的用户在www.biying.com
上搜索到了一个受攻击者感染的网站，并且访问了该网站，然后该网站通过frame劫持将受害者用户重定向至`24corp-shop.com`，在这个充当gate的站点中，同样存在一个不可见的iframe将用户重定向至Exploit
Kit和malware存在的站点`stand.trustandprobaterealty.com`，所以整个访问过程为：
> **_Compromised website [www.ciniholland.nl] — > gate [24corp-shop.com] —> EK
> server [stand.trustandprobaterealty.com]_**
用IP地址来表示为：
> **_82.150.140.30 — > 188.225.73.100 —> 37.200.69.143_**
我们得到本题的答案：`82.150.140.30`。
###  Problem 5
> **What is the FQDN of the compromised website?**
上一道题已经分析过，compromised website的完全限定域名为`ciniholland.nl`。
###  Problem 6
> **What is the IP address of the server that delivered the exploit kit and
> malware?**