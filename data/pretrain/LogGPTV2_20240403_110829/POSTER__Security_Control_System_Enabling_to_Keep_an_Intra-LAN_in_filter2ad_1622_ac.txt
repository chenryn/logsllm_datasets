### 3.2.1. Data Freshness and Security

Maintaining the freshness of the message is crucial to limit adversarial access to data. Let us assume that node \( A \) forwards the data to the cluster head node \( B \). The format of the packet can be described as follows:

- \( D_{A} \): Data sent to node \( B \)
- \( R_{A} \): Reading from node \( A \)
- \( P_{\text{payload}} \): Data payload
- \( E_{\text{packet}} \): Encrypted packet

The data sent using the MAC key \( K_{\text{MAC}} \) complies with the message authentication code of the data. Once the cluster head node \( B \) receives the aggregated and encrypted packet \( E_{\text{packet}} \) from node \( A \), it forwards the packet to the next hop node, which could be either the Base Station (BS) or another cluster head. The data format for this transmission can be described as:

- \( D_{\text{aggregated}} \): Resultant aggregated data from the cluster head node
- \( K_{\text{group}} \): Group of secret random keys shared between two cluster head nodes or a cluster head node and the BS

We observed that the data \( D_{\text{aggregated}} \) could not be modified by an attacker while delivering the aggregation reports between intermediate nodes. By combining the features of Equations (6) and (9), we achieve authentication, integrity, hop-to-hop count, and end-to-end delay, leading to Quality of Service (QoS) provisioning. The combined equations result in:

\[ \text{Combined Equation} \]

The intermediary node uses its processing unit to perform aggregation and de-aggregation functions. Additionally, it has a service access unit that helps in setting up and fine-tuning the timer settings for efficient aggregation. Finally, the intermediary node applies the aggregating-control unit to decide the amount of traffic to be forwarded to the next node to avoid possible congestion and data losses. These multiple units work together to tighten security, functioning as a single aggregation unit, as shown in Figure 2.

When traffic is tuned and refined, the intermediary node selects the next valid communicating cluster node \( C \) for forwarding a specific amount of traffic based on the capacity of the node. The sensed reading \( R_{C} \) of sensor node \( C \) and the resultant aggregation listening capability \( L_{C} \) for any chosen event \( E \) can be seen in Equation (13). Thus, every valid cluster node \( C \) belonging to the respective cluster head updates the valid and invalid information of the cluster head. Hence, the valid communicating cluster nodes \( C \) at the current detection time \( t \) can be obtained as:

\[ \text{Valid Nodes Equation} \]

Furthermore, we can identify valid and non-valid cluster nodes, which helps improve the authentication and integration process since there is a minimal chance of compromising the aggregated data. Where \( D_{\text{affected}} \) is the affected aggregated data, this process correctly determines the valid (legitimate) and non-valid (malicious) sensor nodes to forward the aggregated data using Equation (13).

### 3.2.2. Accuracy and Energy Efficiency

Communication overhead consumes additional energy. One of the goals of our proposed scheme is to reduce communication overhead and maintain accuracy by offering privacy preservation. Let us assume a network \( N' \) with \( n \) sensor nodes exchanging messages \( M_1 \) and \( M_2 \). The exchanged messages between intermediate nodes can be described as:

- \( M_1 \): Message sent from node \( X \) to node \( Y \)
- \( M_2 \): Message sent from node \( Y \) to node \( Z \)

Equations (17) and (18) show the communication overhead of the messages exchanged between the two intermediate nodes. Using these two equations, the total communication overhead \( O_{\text{total}} \) of the exchanged messages can be calculated as follows:

\[ \text{Total Overhead Equation} \]

If we compare the overhead ratio \( R_{\text{overhead}} \) of our proposed approach with the well-known FESA, the overhead ratio can be obtained as:

\[ \text{Overhead Ratio Equation} \]

Thus, the computation overhead of the proposed SDAACA scheme is lower than FESA, which further helps in preserving energy consumption. The overhead ratio for the proposed SDAACA scheme can be quantified as:

\[ \text{SDAACA Overhead Ratio Equation} \]

To evaluate energy consumption, the sensing energy \( E_{\text{sensing}} \) can be computed by:

\[ E_{\text{sensing}} = k \cdot r \]

where \( k \) is the constant representing the energy to sense a bit of data, and \( r \) is the sensing rate in bits per second. For communication purposes, the energy dissipated \( E_{\text{dissipated}} \) for sensor node \( X \) to transmit a packet of size \( s \) to sensor node \( Y \) can be obtained as:

\[ E_{\text{dissipated}} = d \cdot \alpha + \beta \]

where \( d \) is the one-hop distance between two sensor nodes, and \( \alpha \) and \( \beta \) are constant parameters. We set the distance \( d \) equivalent to one. Once the dissipated energy for transmitting the packet is obtained, the energy for receiving the packets can be obtained as:

\[ E_{\text{received}} = \gamma \]

The description of used notations of the access control model is given in Table 1. In addition, a comparison of all parameters and the computation of numerical values for the proposed SDAACA scheme and the existing FESA model are presented in Table 1. The details of used notations and descriptions can be found in Table 2.

### 4. Simulation Setup and Experimental Results

To demonstrate the practicality of the proposed scheme, we implemented secure data aggregation using access control and authentication for Wireless Sensor Networks (WSNs). Specifically, we created a model and ran simulations for a realistic oil-refinery plant that currently faces several security and data privacy challenges. The network simulator (NS3.26) with Ubuntu-16.04 operating system was used to simulate the proposed protocol. The objective of the simulation is to monitor different parts of an oil refinery plant, including working staff and vehicles. Several scenarios were generated to show the performance of the proposed protocol against malicious attempts. In these scenarios, different activities were monitored and measured to reflect the problems of secure data aggregation in WSNs, as discussed earlier in this paper. For our simulations, we also considered the mobility of the sensor nodes, as mobility could affect the performance of the entire working process. The scenarios replicate a real wireless sensor data aggregation environment. The obtained simulation results are fairly considerable and identical to realistic tentative results. The main objective of the simulation is to determine the performance of the proposed SDAACA in the presence of malicious nodes and to identify the strength using QoS parameters. Additionally, the performance of the proposed SDAACA is compared with secure data aggregation protocols such as SDA, SDAT, SEEDA, ESSDA, and FESA. For a realistic comparison, similar factors/parameters were used for all data aggregation protocols in the simulation.

The simulation scenarios involve 460 sensor nodes (maximum) that are sufficient to cover an area of 1280 * 1000 square meters. However, we also simulated different sizes of network topologies to determine the impact of the topologies on our proposed and contending protocols. All examined protocols showed similar behavior even for smaller or larger network topologies. We observed that a network with 1280 * 1000 square meters is ideal for covering 460 nodes and monitoring all parts of an oil-refinery plant. The transmission range was set to 50 meters, which is considered sufficient to transmit data frames to the next node. The standard energy for a sensor node was set to 3.6 joules. However, we assigned higher energy to other nodes depending on their roles and deployment locations. For example, we set 6 joules of energy for event-monitoring nodes and cluster nodes, 12 joules for aggregator nodes, and 14 joules for cluster head nodes. In our approach, the cluster head node is static, whereas the cluster nodes can be either static or mobile. Different bandwidths were set for each node. For instance, the event-monitoring node has a bandwidth of 30 kbps, the aggregator node has a bandwidth of 65 kbps, the cluster node has a bandwidth of 65 kbps, and the cluster head has a much higher bandwidth capacity of 130 kbps. All bandwidth-setting parameters meet the standard criteria to handle events in a real environment. Furthermore, we set 13.8 mW and 15.4 mW power consumptions for receiving and transmitting data, respectively. The sensor nodes require a pause time in some situations. We set a 20-second pause time with a 27-minute simulation time. To determine the next node (neighbor discovery node), the least distance smart neighboring search (LDSNS) protocol [39] was used. The LDSNS uses small-sized preambles to determine the one-hop shortest path nodes. The preamble is sent using Anycasting addressing methodology to deal with only selected nodes at the one-hop neighborhood. The results demonstrate an average of 15 simulation runs. The simulation parameters are summarized in Table 3.

#### 4.1. End-to-End Delay

The lack of bidirectional reliability deteriorates the data aggregation process and results in unsuitable data aggregation collection. Figure 3 shows the end-to-end delay of SDAACA and its comparison with other known secure data aggregation protocols. We reduced the overall end-to-end delay using an authorization process. Additionally, energy is preserved using short-range and one-hop communication rather than long-range communication. The advent of new mobility-based applications causes a higher network traffic rate to be common in WSNs. We demonstrated that in high network traffic rate situations, reducing end-to-end delay is vital for improving overall throughput performance. This reduction in end-to-end delay is possible due to the forwarding range of sensor nodes, as shown in Figure 3. The message monitoring and forwarding processes are performed using event-monitoring nodes and aggregator nodes, respectively. Based on the simulation results, we observed that our proposed SDAACA protocol produces the minimum latency compared to other competing data aggregation protocols. The results confirm that latency increases with respect to time. However, our proposed protocol has a maximum latency of 0.05 seconds for monitoring single events consisting of 15 hops, whereas other competing protocols have higher latency between 0.06-0.072 seconds, which is considered quite high for sensitive applications.

#### 4.2. Resilience Time and Affected Network

We simulated to show the performance of the network during resilience time after sinkhole and Sybil attacks, as shown in Figure 4. The attacker can launch several attacks (including both Sybil and sinkhole attacks) against a non-secure synchronization time among different types of legitimate nodes [39-41]. Based on the results in Figure 4, we observed a linear increase in the affected network ratio with respect to time. However, our proposed protocol has less resilience time compared to other competing protocols. Our protocol has a maximum resilience time between 0.037-0.074 seconds with 9-18% network effect, while other competing protocols have a resilience time of 0.056-0.094 seconds with 9-18% network effect. The better performance of our proposed approach is due to the use of access control, which helps the BS detect falsely calculated aggregated data. Additionally, our authorization and freshness models correctly identify legitimate nodes and their communication processes, resulting in a lower chance of additional resilience time. Other known approaches do not have support for authorization and freshness.

#### 4.3. Reliability and Malicious Trend of Node

Figure 5 shows the reliability rates in the presence of different malicious nodes in the network. To determine the effectiveness of our proposed model, we sampled the behavior of Sybil and sinkhole attacks and created malicious nodes to launch both types of attacks. Both types of attacks were also generated for other known approaches with the same number of malicious nodes. Based on the experimental results, we observed that our proposed approach reaches a reliability of 98.8% with the presence of 9% malicious nodes. When the number of malicious nodes increases to 27%, our approach has a slightly lower reliability rate of approximately 98.65%. The results show that our approach is not highly affected by an increase in the number of malicious nodes. On the other hand, competing approaches have a relatively lower reliability rate of 92.05-96.1% with 9% malicious nodes. When the number of malicious nodes increases to 27%, the reliability rate of the competing approaches decreases to 89.03-92.12%. The statistical data indicates that our SDAACA outperforms other competing approaches in the presence of Sybil and sinkhole attacks generated by malicious nodes. This is due to the fact that our proposed approach initiates the authorization process before the start of authentication for newly arrived nodes in the network.

#### 4.4. Energy Consumption in the Presence of Malicious Nodes

Existing research on secure data aggregation mostly depends on energy consumption for maintaining QoS provisions. This is also a significant trade-off that has not been properly explored. Energy consumption and preservation processes are detected when completing the event-monitoring process and continuing the sending and receiving of data. Energy is consumed when the data duplication process continues with the involvement of an adversary. As a result, several possible attacks are expected on the network, but we particularly focus on sinkhole and Sybil attacks and their negative impact on excess energy consumption. Based on the results, we observed that the energy consumption ratio increases as the monitoring process increases. Figure 6 shows that energy consumption increased as the percentage of malicious nodes increased, along with an additional increase in monitoring process time (days). Our proposed SDAACA protocol has a maximum energy consumption of 2.91, 3.32, and 3.36 joules with 10, 20, and 30 malicious nodes, respectively. On the other hand, other known competing approaches consume 3.32-3.37, 3.6-4.32, and 4.32-4.48 joules with 10, 20, and 30 malicious nodes, respectively. Our SDAACA approach includes features that minimize communication overhead and maintain accuracy by reducing the additional amount of energy and maintaining the tradeoff between energy consumption and QoS provisioning.

### 5. Conclusion

This paper presented a secure data aggregation scheme using access control and authentication processes to handle Sybil and sinkhole attacks in WSNs. The proposed scheme aims to monitor an oil-refinery plant. We proposed two algorithms: a secure data fragmentation process and a node authorization process. The first algorithm provides secure data fragmentation to ensure secure data communication and avoid unexpected attacks by adversaries. The second algorithm initiates the node authorization process to prevent illegitimate nodes from entering the network. Furthermore, the protocol consists of an access control scheme primarily focusing on authentication, freshness, accuracy, and energy consumption. These components maintain the tradeoff between energy efficiency, accuracy, and QoS provisioning. To show the practicality, our proposed scheme was programmed in C++ and implemented in NS3. Based on extensive experimental results, we showed that our proposed SDAACA protocol outperformed other similar types of schemes such as SDA, SDAT, SEEDA, ESSDA, and FESA. This comparison was done from the perspective of end-to-end delay, resilience time, reliability, and energy consumption in the presence of sinkhole and Sybil attacks. In the future, we intend to expand our proposed protocol using scalability and mobility models and analyze state-of-the-art QoS parameters.

### References

1. Razaque, Abdul, and Khaled M. Elleithy. "Energy-efficient boarder node medium access control protocol for wireless sensor networks." Sensors 14, no. 3 (2014): 5074-5117.
2. Li, Hongjuan, Kai Lin, and Keqiu Li. "Energy-efficient and high-accuracy secure data aggregation in wireless sensor networks." Computer Communications 34, no. 4 (2011): 591-597.
3. Liu, Chen-Xu, Yun Liu, Zhen-Jiang Zhang, and Zi-Yao Cheng. "High energy-efficient and privacy-preserving secure data aggregation for wireless sensor networks." International Journal of Communication Systems 26, no. 3 (2013): 380-394.
4. Roy, Sankardas, Mauro Conti, Sanjeev Setia, and Sushil Jajodia. "Secure data aggregation in wireless sensor networks: Filtering out the attacker's impact." IEEE Transactions on Information Forensics and Security 9, no. 4 (2014): 681-694.
5. Conti, Mauro. "Secure Data Aggregation." In Secure Wireless Sensor Networks, pp. 101-124. Springer New York, 2016.
6. Razaque, Abdul, and Khaled Elleithy. "Modular energy-efficient and robust paradigms for a disaster-recovery process over wireless sensor networks." Sensors 15, no. 7 (2015): 16162-16195.
7. Wang, Taochun, Xiaolin Qin, and Liang Liu. "An energy-efficient and scalable secure data aggregation for wireless sensor networks." International Journal of Distributed Sensor Networks 2013 (2013).
8. Kumar, Manish, Shekhar Verma, and Kusum Lata. "Secure data aggregation in wireless sensor networks using homomorphic encryption." International Journal of Electronics 102, no. 4 (2015): 690-702.
9. Li, Xing, Dexin Chen, Chunyan Li, and Liangmin Wang. "Secure data aggregation with fully homomorphic encryption in large-scale wireless sensor networks." Sensors 15, no. 7 (2015): 15952-15973.
10. Jariwala, Vivaksha, Himanshu Patel, Parth Patel, and Devesh C. Jinwala. "Integrity and Privacy Preserving Secure Data Aggregation in Wireless Sensor Networks." International Journal of Distributed Systems and Technologies (IJDST) 5, no. 3 (2014): 77-99.
11. Othman, Soufiene Ben, Abdelbasset Trad, Habib Youssef, and Hani Alzaid. "Secure data aggregation in wireless sensor networks." In Ad Hoc Networking Workshop (MED-HOC-NET), 2013 12th Annual Mediterranean, pp. 55-58. IEEE, 2013.
12. Vaidehi, V., R. Kayalvizhi, and N. Chandra Sekar. "Secure data aggregation in wireless sensor networks." In Computing for Sustainable Global Development (INDIACom), 2015 2nd International Conference on, pp. 2179-2184. IEEE, 2015.
13. Huang, Shih-I., Shiuhpyng Shieh, and J. D. Tygar. "Secure encrypted-data aggregation for wireless sensor networks." Wireless Networks 16, no. 4 (2010): 915-927.
14. Groat, Michael M., Wenbo He, and Stephanie Forrest. "KIPDA: k-indistinguishable privacy-preserving data aggregation in wireless sensor networks." In INFOCOM, 2011 Proceedings IEEE, pp. 2024-2032. IEEE, 2011.
15. Ozdemir, Suat, and Yang Xiao. "Integrity protecting hierarchical concealed data aggregation for wireless sensor networks." Computer Networks 55, no. 8 (2011): 1735-1746.
16. Chen, Chien-Ming, Yue-Hsun Lin, Ya-Ching Lin, and Hung-Min Sun. "RCDA: recoverable concealed data aggregation for wireless sensor networks." Computer Networks 55, no. 15 (2011): 3340-3352.