=== 告警内容可用变量
各种告警方式都会使用同一种模板进行内容的渲染，模板可用的变量如下：
[source,javascript]
----------
{
  "alert._alert_id": Number, // 对应这个告警的监控项在数据库表中的ID
  "alert.name": String, // 对应Web页面上监控名称
  "alert.description": String, // 对应Web页面上的监控描述，是模板渲染后的结果字符串
  "alert.resource_groups": Array[String],  // 触发该告警的监控项标签
  "alert.check_interval": Number, // 检测时间间隔
  "alert.send_time": Number, //往接收服务发送的时间点，unix时间戳。模板内是python的datetime对象
  "alert.exec_time": Number, //搜索的执行时间点，unix时间戳。模板内是python的datetime对象
  "alert.extend_conf": {}, // 对应Web页面上高级配置的固定键值
  "alert.is_alert_recovery" : Boolean, //是否告警恢复
  "alert.graph_enabled" : Boolean, // 是否启用扩展搜索的插图功能
  "alert._alert_domain_id": Number, //告警配置所属domain的id
  "alert._alert_domain_token": String, //告警配置所属domain的token
  "alert._alert_owner_id": Number, //创建告警配置用户的id
  "alert._alert_owner_name": String, //创建告警配置用户的名字
  "alert.is_segmentation" : Boolean, //是否配置了字段切分
  "alert.segmentation_field": String, //告警配置里的切分字段
  "alert.segmentation_specify_value": String, //切分字段的当前值
  "alert.search": {
    "query": String, // query内容
    "datasets": String, // 数据集ID
    "filter": String // filter内容
    "extend_query": String, // 扩展搜索（可以没有）的query内容
    "extend_datasets": String, // 扩展搜索（可以没有）的数据集ID
  },
  "alert.result": {
    "total": Number, //命中了多少条日志
    "value": Number, // 连续统计告警，基线告警的结果。字段统计告警里的最大最小平均值统计的结果。
    "extend_total": Number, //告警扩展搜索（可以没有）命中了多少条日志，当为spell的transaction和stats型结果时候是transaction的group和stats结果有多少行，而不是与之关联的事件数。
    "hits": [
      {
        "appname": String,
        "tag": String,
        "hostname": String,
        "raw_message": String
      }// 一个hit至少包含这四项，事件有其他字段时也会包含
       // 或者当是spl的统计型的结果的时候
       // hit的字段是key:value分别为用户
       // eval的值
    ], // 命中的日志的内容，只有count统计和spl统计才有命中的具体日志
    "terms": [
      {
        "key": String,
        "doc_count": Number
      }
    ], // 字段统计告警中的独立数统计才有的结果
    "columns": [
      {
        "name": String, // 当spl时候列名的顺序是有意义的
        "type": String,
      }
    ], // 当时spl统计才有的结果
    "extend_hits": [// //扩展搜索（可以没有）搜索出来的内容
      {// 普通事件结果
        "appname": String,
        "tag": String,
        "raw_message": String,
        "hostname": String
      }// 当扩展搜索是spl搜索的stats结果时候，是在spl中eval出来的字段的值
    ]
  },
  "alert.strategy": {
    "name": "count|field_stat|sequence_stat|baseline_cmp|spl_query",// 五种告警策略方式
    "description": "事件数告警|字段统计告警|连续统计告警|基线对比告警|spl告警", // 策略中文描述，对应网页上
    "trigger":  {
      "field": String, // 字段，策略count没有此字段
      "start_time": Number, // 这次告警查询的开始时间。
      "end_time": Number, // 这次告警查询的结束时间。
      "method": "count|cardinality|sum|avg|max|min", //统计方法，count策略的method是count
      "method_as_string": String,
      "threshold": Number, //只有连续告警统计有阈值
      "baseline_base_value": Number, //只有基线告警才有，基线的百分比的100%代表的数值。
      "baseline_start_time": Number, // 对照基线的时间范围开始时间
      "baseline_end_time": Number, // 对照基线的时间范围结束时间
      "compare": ">|
{% for athlete in athlete_list %}
     {{ athlete.name }}
{% endfor %}
给标签增加一个 reversed 使得该列表被反向迭代： 
[source,python]
{% for athlete in athlete_list reversed %}
 ...
{% endfor %}
可以嵌套使用 {% for %} 标签： 
[source,python]
{% for athlete in athlete_list %}
     {{ athlete.name }}
     {% for sport in athlete.sports_played %}
         {{ sport }}
     {% endfor %}
{% endfor %}
==== ifequal/ifnotequal 标签
`{% ifequal %}` 标签比较两个值，当他们相等时，显示在 `{% ifequal %}` 和 `{% endifequal %}` 之中所有的值。 
下面的例子比较两个模板变量 user 和 currentuser : 
[source,python]
{% ifequal user currentuser %}
     Welcome!
{% endifequal %}
和 {% if %} 类似， {% ifequal %} 支持可选的 {% else%} 标签：
[source,python]
{% ifequal section 'sitenews' %}
     Site News
{% else %}
     No News Here
{% endifequal %}
==== 注释标签
Django 注释使用 {# #}。
[source,python]
{# 这是一个注释 #}
==== 过滤器
模板过滤器可以在变量被显示前修改它，过滤器使用管道字符，如下所示：
 {{ name | lower }}
`{{ name }}` 变量被过滤器 lower 处理后，文档中的大写字母将被转换文本为小写。
过滤管道可以串联使用，也就是说，一个过滤器管道的输出又可以作为下一个管道的输入：
 {{ my_list | first | upper }}
以上实例将第一个元素并将其转化为大写。
有些过滤器有参数。 过滤器的参数跟随冒号之后并且总是以双引号包含。 例如： 
[source,python]
{{ bio | truncatewords:"30" }}
这个将显示变量 bio 的前30个词。 
其他过滤器：
* addslashes: 添加反斜杠到任何反斜杠、单引号或者双引号前面。
* date: 按指定的格式字符串参数格式化 date 或者 datetime 对象，实例： `{{ pub_date | date:"F j, Y" }}`
* length: 返回变量的长度。