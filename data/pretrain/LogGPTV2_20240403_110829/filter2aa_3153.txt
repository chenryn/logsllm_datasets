1 . 1
One Gadget RCE
david942j @ HITCON CMT 2017
2 . 1
Before Start
2 . 2
Q: 
1. 
2. 
3. 
2 . 3
3 . 1
Who Am I
david942j
CTF 
4 . 1
Introduction
4 . 2
Hacker 
4 . 3
4 . 4
Binary Services (PE / ELF)
PE - Windows
ELF - Linux
Web Browser
OS Kernel (privilege escalation)
VM (VM escape)
CTF
4 . 5
Binary Exploitation in CTF
Binary
Control PC
Defeat ASLR
Remote Code Execution
4 . 6
Binary
Control PC
Defeat ASLR
Remote Code Execution
Control PC
Defeat ASLR
4 . 7
Defeat ASLR
Binary
Control PC
Defeat ASLR
Remote Code Execution
Defeat ASLR
4 . 8
ASLR
Linux kernel 2.6.12 (2005, June)
4 . 9
Defeat ASLR
Information leak
4 . 10
Control PC
Binary
Control PC
Defeat ASLR
Remote Code Execution
Control PC
4 . 11
Control PC
Program Counter
4 . 12
Control PC = 
4 . 13
Remote Code Execution
Binary
Control PC
Defeat ASLR
Remote Code Execution
Remote Code Execution
4 . 14
DeASLR + Control PC = RCE
4 . 15
4 . 16
RCE = system("sh")
4 . 17
 system("sh")
DeASLR: 
 system 
: 
 system
 "sh"
5 . 1
One Gadget
5 . 2
5 . 3
 RCE
5 . 4
5 . 5
(1)
5 . 6
DeASLR
5 . 7
(2)
5 . 8
PC 
5 . 9
(3)
5 . 10
5 . 11
5 . 12
execve("/bin/sh", argv, envp)
5 . 13
 execve 
5 . 14
execve
int execve(const char *file, char *const argv[], char *const envp[])
 syscall
main(int argc, char **argv, char **envp){}
execve(file, argv, envp)
5 . 15
Example
 ls -lh
#include  
int main() { 
  char *const argv[] = {"ls", "-lh", NULL}; 
  char *const envp[] = {NULL}; 
  execve("/bin/ls", argv, envp); 
}
Demo
5 . 16
argv 
 envp
 NULL 
 array of pointers
char *s[] = {ptr1, ptr2, ..., NULL}
execve(file, {NULL}, {NULL})
(?) - 
 NULL 
execve(file, NULL, NULL)
5 . 17
 argv
5 . 18
argv
argv=NULL 
Demo
: /bin/sh 
✓ execve("/bin/sh", NULL, NULL)
5 . 19
 envp
5 . 20
envp
environ 
✓ execve(.., NULL)
✓ execve(.., {NULL})
✓ execve(.., environ)
5 . 21
 execve 
5 . 22
system(cmd)
 fork() + 
execve("/bin/sh", ["sh","-c",cmd], environ)
5 . 23
source code of system
pid = __fork (); 
  (void) __execve (SHELL_PATH, (char *const *) new_argv, __environ); 
if (pid == (pid_t) 0) 
{ 
  /* Child side.  */ 
  const char *new_argv[4]; 
  new_argv[0] = SHELL_NAME; 
  new_argv[1] = "-c"; 
  new_argv[2] = line; 
  new_argv[3] = NULL; 
  /* ...omitted... */ 
  /* Exec the shell.  */
  _exit (127);
5 . 24
 system 
execve("/bin/sh", argv, environ) 
5 . 25
 argv 
 *argv 
 NULL
✓ execve("/bin/sh", NULL, environ) 
✓ execve("/bin/sh", {NULL}, environ)
5 . 26
One Gadget 
5 . 27
One Gadget 
6 . 1
 One Gadget 
6 . 2
6 . 3
6 . 4
 One Gadget 
6 . 5
(1)
6 . 6
 /bin/sh 
6 . 7
&"/bin/sh": 0x18ac40
6 . 8
(2)
6 . 9
 objdump 
 libc.so.6
 18ac40
6 . 10
objdump -d libc.so.6|grep 18ac40 -A 7 -B 3
6 . 11
(3)
6 . 12
execve("/bin/sh", argv, environ)
6 . 13
One Gadget: 0x4557a
execve("/bin/sh", rsp+0x30, environ)
6 . 14
6 . 15
6 . 16
6 . 17
6 . 18
6 . 19
6 . 20
6 . 21
github: david942j/one_gadget
6 . 22
6 . 23
execve("/bin/sh", argv, envp)
6 . 24
One Gadget 
argv 
 envp 
 array of pointers
argv == NULL || *argv == NULL 
envp == NULL || *envp == NULL || envp == environ
6 . 25
6 . 26
Symbolic Execution
7 . 1
1 
 Symbolic Execution
7 . 2
7 . 3
7 . 4
7 . 5
7 . 6
7 . 7
7 . 8
x = input()
7 . 9
7 . 10
y = x*2 
 y = 2x
z = y*3-2 
 z = 6x-2
7 . 11
7 . 12
if z 
8 . 11
8 . 12
i386 
 calling convention
 stack 
esp 
 stack pointer
8 . 13
call func(A, B, C)
                                    esp (stack 
) 
                                     | 
 +-----------+-----------+-----------V------------------------ 
 |     C     |     B     |     A     | 
 +-----------+-----------+-----------+------------------------
8 . 14
ubuntu 16.04 32bit 
3ac69:   mov    eax,DWORD PTR [esi-0xb8] 
3ac6f:   add    esp,0xc 
3ac72:   mov    DWORD PTR [esi+0x1620],0x0 
3ac7c:   mov    DWORD PTR [esi+0x1624],0x0 
3ac86:   push   DWORD PTR [eax] ; environ 
3ac88:   lea    eax,[esp+0x2c] 
3ac8c:   push   eax 
3ac8d:   lea    eax,[esi-0x567d5] ; "/bin/sh" 
3ac93:   push   eax 
3ac94:   call   0xb0670 
                                    esp 
                                     | 
 +-----------+-----------+-----------V------------------------ 
 |           |           |           | 
 +-----------+-----------+-----------+------------------------
8 . 15
esp += 0xc
3ac6f:   add    esp,0xc 
3ac69:   mov    eax,DWORD PTR [esi-0xb8]
3ac72:   mov    DWORD PTR [esi+0x1620],0x0 
3ac7c:   mov    DWORD PTR [esi+0x1624],0x0 
3ac86:   push   DWORD PTR [eax] ; environ 
3ac88:   lea    eax,[esp+0x2c] 
3ac8c:   push   eax 
3ac8d:   lea    eax,[esi-0x567d5] ; "/bin/sh" 
3ac93:   push   eax 
3ac94:   call   0xb0670 
esp = esp + 0xc
esp                                 esp 
 |                                   | 
 V-----------+-----------+-----------V------------------------ 
 |           |           |           | 
 +-----------+-----------+-----------+------------------------
8 . 16
push environ
3ac86:   push   DWORD PTR [eax] ; environ 
3ac69:   mov    eax,DWORD PTR [esi-0xb8] 
3ac6f:   add    esp,0xc 
3ac72:   mov    DWORD PTR [esi+0x1620],0x0 
3ac7c:   mov    DWORD PTR [esi+0x1624],0x0
3ac88:   lea    eax,[esp+0x2c] 
3ac8c:   push   eax 
3ac8d:   lea    eax,[esi-0x567d5] ; "/bin/sh" 
3ac93:   push   eax 
3ac94:   call   0xb0670 
esp = esp + 8
            esp                     esp 
             |                       | 
 +-----------V-----------+-----------V------------------------ 
 |  environ  |           |           | 
 +-----------+-----------+-----------+------------------------
8 . 17
eax = esp+0x2c
3ac88:   lea    eax,[esp+0x2c] 
3ac69:   mov    eax,DWORD PTR [esi-0xb8] 
3ac6f:   add    esp,0xc 
3ac72:   mov    DWORD PTR [esi+0x1620],0x0 
3ac7c:   mov    DWORD PTR [esi+0x1624],0x0 
3ac86:   push   DWORD PTR [eax] ; environ
3ac8c:   push   eax 
3ac8d:   lea    eax,[esi-0x567d5] ; "/bin/sh" 
3ac93:   push   eax 
3ac94:   call   0xb0670 
eax = esp + 0x34
            esp                     esp 
             |                       | 
 +-----------V-----------+-----------V------------------------ 
 |  environ  |           |           | 
 +-----------+-----------+-----------+------------------------
8 . 18
push eax
3ac8c:   push   eax 
3ac69:   mov    eax,DWORD PTR [esi-0xb8] 
3ac6f:   add    esp,0xc 
3ac72:   mov    DWORD PTR [esi+0x1620],0x0 
3ac7c:   mov    DWORD PTR [esi+0x1624],0x0 
3ac86:   push   DWORD PTR [eax] ; environ 
3ac88:   lea    eax,[esp+0x2c]
3ac8d:   lea    eax,[esi-0x567d5] ; "/bin/sh" 
3ac93:   push   eax 
3ac94:   call   0xb0670 
                        esp         esp 
                         |           | 
 +-----------+-----------V-----------V------------------------ 
 |  environ  |  esp+0x34 |           | 
 +-----------+-----------+-----------+------------------------
8 . 19
eax = &"/bin/sh"
3ac8d:   lea    eax,[esi-0x567d5] ; "/bin/sh" 
3ac69:   mov    eax,DWORD PTR [esi-0xb8] 
3ac6f:   add    esp,0xc 
3ac72:   mov    DWORD PTR [esi+0x1620],0x0 
3ac7c:   mov    DWORD PTR [esi+0x1624],0x0 
3ac86:   push   DWORD PTR [eax] ; environ 
3ac88:   lea    eax,[esp+0x2c] 
3ac8c:   push   eax
3ac93:   push   eax 
3ac94:   call   0xb0670 
                        esp         esp 
                         |           | 
 +-----------+-----------V-----------V------------------------ 
 |  environ  |  esp+0x34 |           | 
 +-----------+-----------+-----------+------------------------
8 . 20
push eax
3ac93:   push   eax 
3ac69:   mov    eax,DWORD PTR [esi-0xb8] 
3ac6f:   add    esp,0xc 
3ac72:   mov    DWORD PTR [esi+0x1620],0x0 
3ac7c:   mov    DWORD PTR [esi+0x1624],0x0 
3ac86:   push   DWORD PTR [eax] ; environ 
3ac88:   lea    eax,[esp+0x2c] 
3ac8c:   push   eax 
3ac8d:   lea    eax,[esi-0x567d5] ; "/bin/sh"
3ac94:   call   0xb0670 
                                    esp 
                                     | 
 +-----------+-----------+-----------V------------------------ 
 |  environ  |  esp+0x34 | "/bin/sh" | 
 +-----------+-----------+-----------+------------------------
8 . 21
3ac94:   call   0xb0670 
3ac69:   mov    eax,DWORD PTR [esi-0xb8] 
3ac6f:   add    esp,0xc 
3ac72:   mov    DWORD PTR [esi+0x1620],0x0 
3ac7c:   mov    DWORD PTR [esi+0x1624],0x0 
3ac86:   push   DWORD PTR [eax] ; environ 
3ac88:   lea    eax,[esp+0x2c] 
3ac8c:   push   eax 
3ac8d:   lea    eax,[esi-0x567d5] ; "/bin/sh" 
3ac93:   push   eax
execve("/bin/sh", esp+0x34, environ)
                                    esp 
                                     | 
 +-----------+-----------+-----------V------------------------ 
 |  environ  |  esp+0x34 | "/bin/sh" | 
 +-----------+-----------+-----------+------------------------
8 . 22
8 . 23
8 . 24
✗ *(esp+0x34) == NULL && eax == NULL
✓ *(esp+0x34) == NULL && eax == NULL
8 . 25
8 . 26
✗ *(esp+0x34) == NULL && eax == NULL
✓ *(esp+0x34) == NULL 
8 . 27
8 . 28
 OneGadget 
8 . 29
 5~8 
8 . 30
Demo with a CTF challenge
9 . 1
Conclusion
9 . 2
1. 
2. 
 One Gadget 
3. Symbolic Execution 
4. 
 One Gadget 
 star 
https://github.com/david942j/one_gadget
10
david942j @