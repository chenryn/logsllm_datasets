Duplicate Records. As discussed above, for both the BreachCom-
pilation and Collection#1 datasets, we preserve duplicate (email,
password) pairs rather than filter all of them (although we removed
entire Collection#1 datasets that exhibited abnormally high rates of
data duplication). By preserving these duplicate records which may
represent password reuse across breached online services, we can
characterize credential stuffing effectiveness when typo-tolerance
is not enabled, serving as a baseline to understand the relative
impact of enabling typo-tolerance. We note that some of these
duplicate records may be due to leak duplication in the datasets,
rather than true password reuse by users. As a consequence, our
baseline evaluation of credential stuffing‚Äôs effectiveness without
typo-tolerance may be inflated, and our reported results serve as
an upper bound on vanilla credential stuffing effectiveness. How-
ever, duplicate records do not affect our analysis of the absolute
impact of enabling typo-tolerance on credential stuffing attacks,
and only lower bounds our analysis of the impact relative to the
baseline (i.e., the relative effectiveness of credential stuffing under
typo-tolerance may be even higher than we already report). Thus,
preserving duplicate records will not notably affect our findings on
the security impact of typo-tolerant password authentication.
4 SECURITY EVALUATION
In this section, we re-evaluate the security implications of typo-
tolerant password authentication under a more comprehensive
threat model than considered in the existing security analysis by
Chatterjee et al. [7]. In particular, the prior analysis considered
online password spraying attacks [22], where the attacker guesses
common passwords. In this work, we expand the threat model to
additionally consider credential stuffing attacks [21, 24], where at-
tackers test a user‚Äôs leaked password from one online service on
other services, and credential tweaking attacks [25], where attack-
ers generate variants of a user‚Äôs leaked password from one service
as login attempts on other services.
Throughout this evaluation, we use the same typo-tolerance
password corrector functions as the prior work, as well as the same
typo-tolerance policies combining correctors, as discussed in Sec-
tion 2.1. We first reproduce the prior empirical analysis on our leak
datasets (which are more recent and significantly larger than those
used previously, although are lacking clear breach provenance),
evaluating how typo-tolerance affects password spraying attack
success. We then perform our new analysis assessing the influence
of typo-tolerance on credential stuffing and tweaking attacks.
4.1 Attack Metrics
To start, we discuss our metrics for attack success under the differ-
ent password attack models. Both the BreachCompilation dataset
and the multiple Collection#1 leak combinations aggregate various
leaks, without indicating which data subsets were derived from
which leaks. As a result, we cannot group emails and passwords
together into individual leaks, preventing a definitive evaluation
of attack effectiveness targeting a specific breached online service.
Instead, for each separate dataset, we consider the set of passwords
associated with each email in that dataset, and compute different
attack success metrics to capture the range of potential attack out-
comes on the passwords per email. These attack metrics are:
‚Ä¢ Upper Bound: The upper bound attack metric measures the
proportion of emails where at least one associated password
or password pair would be successfully attacked. This scenario
indicates the attacker‚Äôs best-case success rate, as the attacker
successfully attacks every email with any susceptible password
(or password pair).
‚Ä¢ Lower Bound: This metric measures the proportion of emails
where all associated passwords or password pairs would be suc-
cessfully attacked. This situation represents the attacker‚Äôs worst-
case success rate, where the attacker successfully attacks only
the emails where every possible password (or password pair) is
susceptible.
‚Ä¢ Random: For this metric, we randomly select one password or
password pair for each email, and determine the proportion of
emails that would be successfully attacked. This random selection
process provides an expected attack success rate.
Essentially, the upper and lower bound metrics characterize the po-
tential range of attack success, whereas the random metric reflects
a more realistic attack outcome. Throughout the remainder of this
Session 1D: Authentication and Click Fraud CCS ‚Äô21, November 15‚Äì19, 2021, Virtual Event, Republic of Korea255Dataset
Policy
All
Multi
q = 1000
C#1: EUcombos
C#1: EUcombos_1
BreachCompilation
C#1: OC_BTCcombos
C#1: OC_Porncombos
Lower Upper
10.48
+0.66
10.35
+0.70
11.15
+0.83
11.35
+0.62
13.21
+0.64
11.98
+0.58
19.85
+0.94
16.72
+1.24
36.75
+0.88
5.25
+0.31
7.51
+0.47
8.04
+0.47
7.12
+0.38
6.71
+0.29
3.90
+0.28
10.70
+0.45
8.09
+0.63
6.69
+0.33
Upper
6.73
+0.38
8.39
+0.48
8.96
+0.49
8.07
+0.41
7.82
+0.33
5.66
+0.35
11.68
+0.48
9.95
+0.72
13.55
+0.49
CNone
CTop5
CNone
CTop5
CNone
CTop5
CNone
C#1: Gamescombos
CTop5
C#1: NEW_csp_EUcombo CNone
CTop5
CNone
CTop5
CNone
CTop5
CNone
CTop5
CNone
CTop5
Lower
1.52
+0.22
3.32
+0.66
2.48
+0.66
2.04
+0.33
0.78
+0.19
4.26
+0.27
2.89
+0.44
2.06
+0.58
2.20
+0.09
Table 1: The effectiveness of password spraying when pass-
word typo-tolerance is disabled (CNone) compared with us-
ing the CTop5 typo-tolerance policy, across different datasets
for ùëû = 1000 attack queries. For each leak, we evaluate at-
tack success on all emails (labeled as All) and only emails
with multiple passwords (labeled as Multi), using the upper
and lower bound attack success metrics. For ease of compar-
ison, the CTop5 attack metrics are the percentage point in-
creases/deltas (indicated by the + sign) in password spraying
success over CNone, rather than the total attack success rate.
C#1: OC_UKcombos
C#1: RUcombo
section, we use these three attack success metrics to characterize
the effectiveness of our different attack models.
In addition, throughout our analysis, we will often use percent-
age points (pp) for comparing two percentages, where the percent-
age points show the arithmetic difference between two percentages
(e.g., increasing from 50% to 55% is a 5pp increase). We use this
unit as it represents the absolute difference between two percent-
ages rather than a relative one, which is particularly useful when
interpreting the difference between two attack success rates or
population percentages.
4.2 Password Spraying Attacks (Replication)
In the prior security analysis of typo-tolerant password authentica-
tion, Chatterjee et al. [7] used password leaks from three websites
(RockYou, phpBB, and Myspace) to empirically demonstrate that
typo-tolerance did not significantly exacerbate password spraying
attacks, where attackers guessed common passwords. These three
leaks are dated (circa 2009) and small (only the Myspace leak ex-
ceeded 1M users), compared to our more recent and significantly
larger datasets. Here, we replicate their analysis on our distinct
password datasets to confirm the prior work‚Äôs observations.
Analysis Method. We evaluate two typo-tolerance policy con-
figurations: no typo-tolerance (CNone) and the most permissive
typo-tolerance policy (CTop5). (Recall that Section 2.1 discussed the
nature of these policies.) For our password leak datasets, some
emails are associated with multiple passwords while others are tied
to only one. While analyzing all emails provides the most compre-
hensive analysis of password spraying effectiveness, our subsequent
analyses of credential stuffing and tweaking attacks (in Sections 4.3
and 4.4) are restricted to only emails with multiple passwords. Thus,
to support more direct comparisons across attacks, we consider
both populations separately (all emails and only multi-password
ones). Finally, password spraying attacks depend on a parameter
ùëû, indicating the number of attack queries attempted. We evaluate
ùëû = 10, 100, 1000, as also done by Chatterjee et al. [7]. We note that
typo-tolerance only affects online attacks, and websites often de-
ploy defenses (e.g., rate limiting, blocklisting) that limit the number
of queries that attackers can reasonably make (i.e., ùëû = 1000 is less
feasible in practice).
A password spraying attack succeeds against an (email, pass-
word) pair if the attacker is able to successfully guess the password
within ùëû queries. The optimal guessing strategy is for the attacker
to attempt passwords in order of decreasing popularity, assuming
the attacker knows the password distribution. While attackers typ-
ically lack this knowledge in practice, in our analysis, we assume
the attacker knows the target dataset‚Äôs password distribution and
we simulate an optimal attack. By doing so, we model the best-case
scenario for the attacker.
Analysis Results. Table 1 displays the password spraying attack
results across different target datasets and typo-tolerance policies,
for attacks consisting of ùëû = 1000 queries, the strongest password
spraying attack we evaluate. We list the upper bound and lower
bound attack success rates (we elide the random metric for space).
In Table 7 of the Appendix, we show the password spraying attack
results for ùëû = 10 and 100, the weaker attacks.
Without typo-tolerance (where the policy is CNone), we observe
varying password spraying effectiveness across the different pass-
word datasets and email populations. However, when enabling the
most permissive typo-tolerance policy (CTop5), we see that the in-
crease in password spraying success is minimal across all settings,
even though we are considering our largest attack size (ùëû = 1000).
The upper bound increase in attack success is below 1 percentage
point (pp) in all cases except one (targeting multi-password emails in
Collection#1‚Äôs OC_UKcombos leak, with an attack success increase
of 1.24pp). For weaker attacks (ùëû = 10 and 100), typo-tolerance has
an even smaller impact on attack success.
Thus, we replicate the same conclusion as prior work [7], that
typo-tolerant password authentication does not significantly ad-
vantage password spraying attacks.
4.3 Credential Stuffing Attacks
Here, we assess how typo-tolerant password authentication is af-
fected by credential stuffing attacks. This class of attacks was not
considered in the prior security analysis of typo-tolerance [7], thus
our security evaluation encompasses a broader threat model.
Analysis Method. Credential stuffing attacks involve two pass-
words from a user, one leaked password (from one online service)
that the attacker has access to and one targeted password (on an-
other online service) that the attacker aims to guess. To evaluate
credential stuffing attacks using the leak datasets, we only consider
emails associated with multiple passwords within the same dataset.
We analyze all ordered password pairs per email, where each pair
Session 1D: Authentication and Click Fraud CCS ‚Äô21, November 15‚Äì19, 2021, Virtual Event, Republic of Korea256CTop1
Random Upper / Lower
CTop2
Random Upper / Lower
+0.7
+1.1
+1.5
+1.8
+1.1
+0.1
+1.3
+0.6
+0.3
+3.4 / +1.7
+7.9 / +6.2
+4.4 / +3.5
+14.2 / +3.2
+5.2 / +2.0
+0.9 / +0.3
+2.7 / +2.0
+4.1 / +2.4
+7.3 / +0.4
CTop5
Random
+2.0
+6.3
+4.2
+4.7
+2.5
+0.5
+2.2
+2.8
+0.5
Dataset
Breach Compilation
C#1: Eucombos
C#1: EUCombos_1
C#1: Gamescombos
C#1: NEW_csp_EUcombo
C#1: OC_BTCcombos
C#1: OC_Porncombos
C#1: OC_UKcombos
C#1: RUcombo
CNone
Upper / Lower
20.9 / 16.2
49.8 / 41.6
30.7 / 26.8
30.1 / 28.2
~0.0 / ~0.0
47.6 / 41.8
11.3 / 8.2
11.8 / 9.1
7.4 / 6.0
17.1
44.1
27.9
28.6
~0.0
43.2
8.9
9.8
6.3
+1.3 / +0.6
+1.4 / +0.9
+1.9 / +1.3
+10.3 / +0.5
+3.1 / +0.7
+0.2 / +0.1
+1.7 / +1.2
+1 / +0.5
+6.8 / +0.2
Dataset
Breach Compilation
C#1: Eucombos
C#1: EUCombos_1
C#1: Gamescombos
C#1: NEW_csp_EUcombo
C#1: OC_BTCcombos
C#1: OC_Porncombos
C#1: OC_UKcombos
C#1: RUcombo
CTop3
CTop4
Upper
+8.1
+10.8
+12.0
+22.8