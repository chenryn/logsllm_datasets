# 十、在公共云中运行 Docker
到目前为止，我们一直在使用数字海洋在基于云的基础设施上推出容器。在本章中，我们将研究如何使用 Docker 提供的工具在亚马逊网络服务和微软 Azure 中启动 Docker Swarm 集群。然后我们将看看亚马逊网络服务、微软 Azure 和谷歌云提供的容器解决方案。
本章将涵盖以下主题:
*   Docker 云
*   亚马逊 ECS 和 AWS Fargate
*   微软 Azure 应用服务
*   微软 Azure、谷歌云和亚马逊网络服务中的 Kubernetes
# 技术要求
在本章中，我们将使用各种云提供商，因此，如果您要跟进，您将需要每个提供商的活动帐户。同样，本章的截图将来自我的首选操作系统，macOS。如前所述，除非另有说明，否则我们将运行的命令应该可以在我们目前针对的所有三个操作系统上运行。
我们还将查看云提供商提供的一些命令行工具，以帮助管理他们的服务——不过，本章并不作为这些工具的详细操作指南，更多详细的使用指南将在本章的*进一步阅读*部分提供文档链接。
查看以下视频，了解《行动守则》:
[http://bit.ly/2Se544n](http://bit.ly/2Se544n)
# Docker 云
在我们开始研究其他服务之前，我认为快速讨论 Docker Cloud 是很好的，因为仍然有很多对曾经由 Docker 提供的云管理服务的引用。
Docker 云由几个 Docker 服务组成。其中包括 SaaS 提供的构建和托管映像的服务，这是提供应用、节点和 Docker Swarm 集群管理的另一项服务。2018 年 5 月 21 日，所有提供远程节点管理的服务都关闭了。
Docker 建议使用此服务管理其节点的 Docker Cloud 用户应将这些工作负载迁移到 Docker **社区版** ( **CE** )或 Docker **企业版** ( **EE** )并迁移到自己硬件的云中。Docker 还推荐了 Azure 容器服务和谷歌 Kubernetes 引擎。
因此，出于这个原因，我们不会像在以前版本的*掌握 Docker* 中那样，在本章中讨论任何 Docker 托管的服务。
然而，考虑到我们已经讨论过的内容，下一部分可能会有点混乱。虽然 Docker 已经停止了所有托管云管理服务，但它仍然提供工具来帮助您管理两个主要公共云提供商中的 Docker Swarm 集群。
# 云上 Docker
在本节中，我们将看看 Docker 提供的两种模板化云产品。它们都推出了 Docker Swarm 集群，这些集群与目标平台有着深度的集成，并且在构建时也考虑了 Docker 的最佳实践。让我们先看看亚马逊网络服务模板。
# AWS 的 Docker 社区版
面向 AWS 的 Docker 社区版(从现在开始，我们将称之为面向 AWS 的 Docker)是 Docker 创建的亚马逊云信息模板，旨在通过应用 Docker 最佳实践和建议，在 AWS 中轻松启动 Docker Swarm 模式集群。
**CloudFormation** is a service that's offered by Amazon that allows you to define how you would like your infrastructure to look in a template file that can then be shared or brought under version control.
我们需要做的第一件事——也是我们在为 AWS 启动 Docker 之前需要配置的唯一一件事——是确保我们在将要启动集群的地区为我们的帐户分配了 SSH 密钥。为此，请在[https://console.aws.amazon.com/](https://console.aws.amazon.com/)登录到 AWS 控制台，或者您所在组织的自定义登录页面(如果您使用的话)。登录后，进入页面左上角的服务菜单，找到 **EC2** 服务。
为了确保您在您想要的地区，您可以使用位于您的用户名和支持菜单之间右上角的地区切换器。进入右侧区域后，点击**键对**，在左侧菜单的**网络&安全**下可以找到。一旦进入**键对**页面，您应该会看到当前键对的列表。如果您没有列出或无法访问它们，您可以单击**创建密钥对**或**导入密钥对**，并按照屏幕提示进行操作。
AWS 的 Docker 可以在 https://store.docker.com/editions/community/docker-ce-aws 的 Docker 商店找到。AWS 有两种 Docker 选择:稳定版和边缘版。
Edge 版本包含 Docker 即将推出的版本的实验特性；正因为如此，我们将考虑为 AWS(稳定)推出 Docker。为此，只需点击按钮，您将直接进入 AWS 控制台中的云信息，Docker 模板已经加载。
您可以通过转到[https://editions-us-east-1 . S3 . Amazon AWS . com/AWS/stable/docker . tmpl](https://editions-us-east-1.s3.amazonaws.com/aws/stable/Docker.tmpl)查看原始模板，该模板目前由 3100 行代码组成，或者您可以在 CloudFormation designer 中可视化该模板。从下面的可视化中可以看出，启动集群有很多事情要做:
![](img/94c34f21-31ad-4493-900c-293d3dcf0cd2.png)
这种方法的好处是你不必担心这些复杂的事情。Docker 已经覆盖了您，并承担了所有担心如何将上述基础架构和服务从您身边推出的工作。
启动集群的第一步已经为您安排好了。您只需在**选择模板**页面点击**下一步**:
![](img/efd42eec-ca73-40ba-a7f0-10dfade0ac1e.png)
接下来，我们必须指定一些关于集群的细节。除了 SSH 密钥，我们将保留所有内容的默认值:
*   **栈名** : `Docker`
*   **蜂群管理器数量** : `3`
*   **群工作节点数** : `5`
*   **使用哪个 SSH 密钥**:(从列表中选择您的密钥)
*   **启用日常资源清理**:否
*   **使用 CloudWatch 进行容器日志记录**:是
*   **为云商店**创建 EFS 先决条件:否
*   **群管理器实例类型** : t2.micro
*   **管理器临时存储卷大小** : 20
*   **管理器临时存储卷类型**:标准
*   **代理工作者实例类型** : t2 .微
*   **工作人员临时存储卷大小** : 20
*   **工作人员临时存储卷类型**:标准
*   **启用 EBS I/O 优化？**否
*   **加密 EFS 对象？**假
一旦你检查完一切都是**确定**，点击**下一步**按钮。下一步，我们可以让一切保持原样，点击**下一步**按钮进入评论页面。在查看页面上，您应该会发现一个链接，其中提供了估计成本:
![](img/d39ed962-001f-49a0-aa2a-210eb1bc50eb.png)
如您所见，我的集群的每月估计价格为 113.46 美元。
I have had varying success with the Estimate cost link—it may not appear each time you launch the template—if it doesn't and you have answered the questions as per the preceding list, then your costs will be similar to that of mine.
在启动集群之前，您需要做的最后一件事是勾选表示**的框，我承认 AWS 云信息可能会创建 IAM 资源**，然后单击**创建**按钮。可以想象，启动集群需要一段时间；您可以通过在 AWS 控制台中选择您的云信息栈并选择**事件**选项卡来检查启动状态:
![](img/a8a82d94-d51e-4d61-82d9-e7ca88708725.png)
大约 15 分钟后，您应该会看到状态从 **CREATE_IN_PROGRESS** 变为 **CREATE_COMPLETE** 。当你看到这个，点击**输出**标签，你会看到一个网址和链接列表:
![](img/98e173dc-9ce2-48a0-9a5e-7e24156c1349.png)
要登录到我们的 Swarm 集群，请单击 manager 旁边的链接，该链接将被带到 EC2 实例列表，这些实例是我们的 manager 节点。选择其中一个实例，然后记下它的公共 DNS 地址。在终端，SSH 到节点，使用 docker 作为用户名。例如，我运行了以下命令来登录并获取所有节点的列表:
```
$ ssh PI:EMAIL
$ docker node ls
```
If you downloaded your SSH key from the AWS Console when you added a key, you should update the preceding command to include the path to your download key, for example, `ssh -i /path/to/private.key PI:EMAIL`.
下面的屏幕截图显示了登录并获取所有节点列表的上述命令:
![](img/9198f5ee-5731-4b5f-b733-78de04e63158.png)
从这里，您可以像对待其他 Docker Swarm 集群一样对待它。例如，我们可以通过运行以下命令来启动和扩展集群服务:
```
$ docker service create --name cluster --constraint "node.role == worker" -p 80:80/tcp russmckendrick/cluster
$ docker service scale cluster=6
$ docker service ls
$ docker service inspect --pretty cluster
```
现在您的服务已经启动，您可以在云信息页面的**输出**选项卡中的**缺省缺省缺省缺省缺省缺省缺省缺省缺省缺省缺省缺省缺省缺省缺省缺省缺省缺省缺省缺省缺省缺省缺省缺省缺省缺省缺省缺省缺省缺省缺省。这是一个亚马逊弹性负载平衡器，我们所有的节点都位于它的后面。**
例如，我的**默认为**是`Docker-ExternalLoa-PCIAX1UI53AS-1796222965.eu-west-1.elb.amazonaws.com`。将它放入我的浏览器中，显示了集群应用:
![](img/80e2bf26-45b2-4e45-a601-073052f7e191.png)
完成集群后，返回 AWS 控制台中的云信息页面，选择您的栈，然后从**操作**下拉菜单中选择**删除栈**。这将从亚马逊网络服务集群中删除您的 Docker 的所有痕迹，并阻止您获得任何意外的费用。
Please make sure that you check that there have not been any problems with the deletion of the stack—if this process encounters any problems, any resources that have been left behind will be charged for.
# 蓝色 Docker 社区版
接下来，我们有 Azure 的 Docker 社区版，我将把它称为 Azure 的 Docker。这使用 **Azure 资源管理器** ( **ARM** )模板来定义我们的 Docker Swarm 集群。使用 ARMViz 工具，我们可以可视化集群的外观:
![](img/3c55ee06-9812-4e68-9646-2f31719b7fac.png)
如您所见，它将启动虚拟机、连接了公共 IP 地址的负载平衡器和存储。在我们启动集群之前，我们需要找到一些关于我们的 Azure 帐户的信息:
*   广告服务原则标识
*   广告服务原则密钥
为了生成所需的信息，我们将使用一个在容器内部运行的助手脚本。要运行该脚本，您需要对有效的 Azure 订阅具有管理员访问权限。要运行脚本，只需运行以下命令:
```
$ docker run -ti docker4x/create-sp-azure sp-name
```
这会给你一个网址，[https://microsoft.com/devicelogin](https://microsoft.com/devicelogin)，还有一个要输入的代码。转到网址并输入代码:
![](img/72247725-713a-42ad-a02e-97369dde5f79.png)
这将使您在命令行上登录到您的帐户，并询问您想要使用哪个订阅。帮助器脚本的完整输出可以在下面的截图中找到:
![](img/e996f939-d086-454c-805a-eddb97d1e319.png)
输出的最后是你需要的信息，所以请记下来。
At the time of writing this book, there is a known issue of using the **Docker for Azure (Stable)** button on the Docker Community Edition for Azure page in the Docker Store. For now, we need to use an older version of the template. You can do this by using the following link: [https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fdownload.docker.com%2Fazure%2Fstable%2F18.03.0%2FDocker.tmpl](https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fdownload.docker.com%2Fazure%2Fstable%2F18.03.0%2FDocker.tmpl).
这将打开 Azure 门户，并向您显示一个屏幕，您需要在其中输入几个信息:
*   **订阅**:从下拉列表中选择您想要使用的订阅
*   **资源组**:选择您想要使用的资源组或创建一个新的资源组
*   **位置**:选择您想要启动 Docker Swarm 集群的位置
*   **广告服务原理 App ID** :这是我们刚刚运行的助手脚本生成的
*   **广告服务原理 App 秘籍**:这是我们刚刚运行的助手脚本生成的
*   **启用扩展日志**:是
*   **启用系统清理**:否
*   **Linux SSH 公钥**:在这里输入本地 SSH 密钥的公共部分
*   **Linux 工作人员计数** : 2
*   **Linux 工作虚拟机大小**:标准 _D2_v2
*   **经理人数** : 1
*   **管理器虚拟机大小**:标准 _D2_v2
*   **Swarm 名称**:dock warm
同意条款和条件，然后点击页面底部的**购买**按钮。单击菜单顶部通知区域中的“正在部署”链接查看启动进度后，您应该会看到如下内容:
![](img/f8479606-7175-4d43-8c08-1cf260a92606.png)
完成后，您将看到在您选择或创建的资源组下列出了几个服务。其中之一将是`dockerswarm-externalSSHLoadBalancer-public-ip`。深入到资源中，您将获得一个 IP 地址，您可以使用它将 SSH 连接到您的群管理器中。为此，请运行以下命令:
```
$ ssh PI:EMAIL -p 50000
$ docker node ls
```
请注意，我们使用的是端口 5000，而不是标准端口 22。您应该会看到如下内容:
![](img/e2bf3c3a-b3ce-4fef-b867-45ca8f93d88d.png)
登录到管理器节点后，我们可以使用以下命令启动应用:
```
$ docker service create --name cluster --constraint "node.role == worker" -p 80:80/tcp russmckendrick/cluster
$ docker service scale cluster=6
$ docker service ls
$ docker service inspect --pretty cluster
```
一旦启动，转到`dockerswarm-externalLoadBalancer-public-ip`—这将显示应用。完成集群后，我建议删除资源组，而不是尝试删除单个资源:
![](img/097dd1a2-64c9-48e0-add1-51a68c786429.png)
Remember, you will be charged for the resources while they are active, even if you are not using them.