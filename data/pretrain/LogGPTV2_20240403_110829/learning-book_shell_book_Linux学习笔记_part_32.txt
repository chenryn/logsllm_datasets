LIL0 /etc/lilo. conf
GRUB /boot/grub/menu. 1st
系统启动文件核脚本
主启动控制文件/etc/inittab
SysV启动脚本的位置/etc/init.d、/etc/rc.d/init.d或/etc/rc.d
SysV启动脚本链接的位置/etc/init.d/rc?.d、/etc/rc.d/rc?.d或/etc/rc？. d
本地启动脚本/etc/rc.d/rc.local、/etc/init.d/boot.local或/etc/rc.boot里的文件
网络配置文件
建立网络接口的脚本/sbin/ifup
保存网络配置数据文件的目录/etc/network、/etc/sysconfig/network和
/etc/sysconfig/networkscripts
---
## Page 143
保存解析 DNS服务的文件/etc/resolv.conf
DHCP客户端的配置文件/etc/dhclient.conf
超级服务程序配置文件和目录
inetd 配置文件/etc/inetd. conf
TCP Wrappers 配置文件 /etc/hosts.allow 和/etc/hosts. deny
xinetd 配置文件/etc/xinetd.conf 和/etc/xinetd. d目录里的文件
硬件配置
内核模块配置文件/etc/modules.conf
硬件访问文件
Linux设备文件/dev目录里
保存硬件和驱动程序数据的文件/proc目录里
扫描仪配置文件
SANE 主配置 /etc/sane. d/d11. conf
特定扫描仪的配置文件/etc/sane.d目录里以扫描仪型号命名的文件
打印机配置文件
BSD LPD 核 LPRng 的本地打印机主配置文件/etc/printcap
CUPS 本地打印机主配置和远程访问受权文件/etc/cups/cupsd.conf
BSD LPD 远程访间受权文件/etc/hosts.1pd
LPRng 远程访间受权文件/etc/lpd. perms
文件系统
文件系统表/etc/fstab
软驱装配点/floppy、/mnt/floppy 或/media/floppy
光驱装配点/cdrom、/mnt/cdrom或/media/cdrom
shel1配置文件
bash 系统非登录配置文件/etc/bashrc、/etc/bash.bashrc 或/etc/bash.bashrc.local
bash 系统登录文件/etc/profile 和/etc/profile.d里的文件
bash用户非登录配置文件~/.bashrc
bash用户登录配置文件~/.profile
XFree86 配置文件核目录
XFree86 主配置文件/etc/XF86config、/etc/X11/XF86Config 或/etc/X11/XF86Config4
字体服务程序配置文件/etc/X11/fs/config
Xft 1. x 配置文件/etcX11/XftConfig
Xft 2. 0 配置文件 /etc/fonts/fonts. conf
字体目录/usr/X11R6/1ib/X11/fonts 和l/usr/share/fonts
Web服务程序配置文件
Apache 主配置文件/etc/apache、/etc/httpd 或/httpd/conf 里的 httpd. conf 或 httpd2. conf 文
件
MIME 类型文件与 Apache 主配置文件在同一目录里的 mime,types 或 apache-mime.types
文件服务程序配置文件
ProFTPd 配置文件 /etc/proftpd. conf
vsftpd 配置文件/etc/vsftpd. conf
NFS 服务程序的输出定义文件/etc/exports
NFS 客户端装配的 NFS 输出/etc/fstab
Samba 配置文件 /etc/samba/smb. conf
---
## Page 144
Samba 用户配置文件/etc/samba/smbpasswd
邮件服务程序配置文件
sendmail 主配置文件/etc/mail/sendmai1. cf
sendmai1 源配置文件 /etc/mail/sendmai1. mc 或/usr/share/sendmail/cf/cf/linux. smtp, mc 或
其他文件
Postfix 主配置文件/etc/postfix/main. cf
Exim 主配置文件/etc/exim/exim. cf
Procmai1配置文件/etc/procmailrc 或~/ procmailrc
Fetchmail配置文件~/. fetchmailrc
远程登录配置文件
SSH服务程序配置文件/etc/ssh/sshd_config
SSH客户端配置文件/etc/ssh/ssh_config
XDM配置文件/etc/X11/xdm目录下
GDM配置文件/etc/X11/gdm目录下
VNC服务程序配置文件/usr/X11R6/bin/vncserver启动脚本和~/.vnc目录里的文件
其他服务程序配置文件
DHCP服务程序配置文件/etc/dhcpd.conf
BIND 服务程序配置文件/etc/named.conf 和/var/named/
NTP服务程序配置文件/etc/ntp.conf
十六、计划任务
在很多时候为了自动化管理系统，我们都会用到计划任务，比如关机，管理，备份之类的操作，我
们都可以使用计划任务来完成，这样可以是管理员的工作量大大降低，面且可靠度更好。
linux系统支持一些能够自动执行任务的服务，我们称为计划任务。
LINUX有如下三种计划任务：
at：指定一个时间执行一个任务（适用一个或多个任务，执行一次后就不用）
cron：根据一个时间表自动执行任务（使用一个或多个任务，周期性执行）
系统级别的计划任务及其扩展anacron：在一个指定时间间隔错过后自动执行任务
1、at：安排一个任务在未来执行，需要一个atd的系统后台进程
检查atd进程是否启动
[root@centos61 泉Imij]# service atd status
atd (pid2274) 正在运行...
[root@centos61 桌Imj]# chkconfig Igrep atd
pxe
0:关闭1：关闭2:关闭3：启用4:启用5:启用6：关闭
如果未启动，可以使用如下命令：
[root@centos61 泉mi]# service atd start
正在启动 atd：
[确定]
[root@centos61 泉mi]# chkconfig atd on
常用指令：at：安排延时任务
具体使用方法：
例1:
#at now+2 minutes回车
>输入要执行的命令
---
## Page 145
>ctrl+d 结束输入
[rootetest ~]# at now+2 minutes
at> wall Aixi
at>
job 2 at 20100618 16:36
是ctr1+d中断输入，这个命令意思是发送一个广播内容是He1loAixi.具体时间可以改，单位可
以改,可以用 hours,months,years, weeks 等.
例2我们还可以跟具体时间
[rootetest ~]# at 16:39 dec 10
at> Hello Aixi
at>ctr1+d结束输入
job 3 at 20101210 16:39
意思是在今年的12月10日16：39运行这个命令.如果不加月和日，默认就是今天
Atq：查询当前的等待任务
用atq来查询，已经运行的任务，就消失了。这就是at计划任务的重点，只运行一次
atrm：删除等待任务
启动计划任务后，如果不想启动设定好的计划任务可以使用atrm命令删除。
格式：atrm任务号
命令后面跟计划任务编号，如果不跟，就会删除这个用户所有的计划任务。
例3
atrm 10//删除计划任务10
atq//查看计划任务是否删除
at将要运行的命令以文本形式写入/var/spool/at/目录内，等待atd服务的取用和执行。
还可以进入到/var/spool/at目录里把计划任务删除，计划任务的文件都保存在该目录里，可以用rm-f
文件名来删除（以文件的形式删除计划任务，因为计划任务是以文件形式保存在该目录中）
例 4:
#cd/var/spool/at//进入到/var/spool/at 目录中
1s//显示目录中所有文件
rm -f a0000b0138b19c //删除计划任务
在通常情况下，超级用户都可以使用这个命令。对于其他用户来说，能否可以使用就取决于两个文
:/etc/at. a1low 和/etc/at, deny
at命令是可以基于用户来控制的，我们可以明确指定哪些用户可以使用at计划任务，哪些用户不可以
使用at计划任务。
at 的控制文件
/etc/at. allow
/ete/at. deny
系统默认是有at.deny文件，如果某个用户名在这个文件里，他就不能使用at计划任务。如果有
at.allow文件，allow文件先行，检查了allow明确允许，就不会检查deny.
如果你要让哪个用户不能使用计划任务，就直接把他的用户名写进去就可以了，一排只能写一个。
---
## Page 146
2、cron服务（参考网址：http://www.linuxsir.org/main/?q=node/209)
相对与at，cron的优点就是能够周期性的执行某个命令，at却只能执行一次，cron的后台进程名字
是 crond，cron 也是 system V的服务，所以我们可以 service crond start|stop 来启动和关闭此服
务，也可以使用chkconfig或者ntsysv来选择cron服务的默认开启，这些命令在以前我们都讲过的
命令：
#crontab e
编辑当前用户的cron表
#crontab 1
查看当前用户的cron表
#crontab r
删除当前用户的cron进程
#crontab-u用户名以某用户的身份来控制cron表
还有个重要的知识点，就是当用户的计划任务建立后是存放在var/spool/cron这个目录
当使用crontab-e编辑当前用户的cron表后，会出现一个vi文件，cron的格式是这样的。分成两
列，左边是时间，右边是运行的命令。时间是由5个部分组成。
例：
*事***
wal1 hello everyone
5 个星号分别代表：minute hour day-of-month month-of-year day-ofweek ，而 wal1 hello
everyone 这是命令内容。上面的意识是每分每小时每天每月每周广播hello everyone。具体时间大
家可以自己定义。如果要每两分钟发送就用*/2代替第一个*。也可以是用具体时间来表示。
我们使用crontab-e编辑当前用户的cron表
这里的5个星号就代表的时间和日期：
第一个*星号代表个小时的第几分钟：minute范围是从0-59
第二个*星号代表每天的第儿个小时：hour范围是从0-23
第三个*星号代表每月的第儿个日：day-of-month范围从1-31
第四个*星号代表没年的第儿个月：month-of-year 范围从1-12
第五个*星号代表每周的星期儿：day-of-week范围从0-6，其中0表示星期日
用户名：也就是执行程序要通过哪个用户来执行，这个一般可以省略：
命令：执行的命令和参数。
时程表的格式如下：
f1 f2 f3 f4 f5 program
其中f1是表示分钟，f2表示小时，f3表示一个月份中的第几日，f4表示月份，f5表示一个星期
中的第几天。programn表示要执行的程序。
当f1为*时表示每分钟都要执行program，f2为*时表示每小时都要执行程序，其余以此类推
当f1为a-b时表示从第a分钟到第b分钟这段时间内要执行，f2 为a-b时表示从第a到第b
小时都要执行，其余以此类推
当f1为*/n时表示每n分钟个时间间隔执行一次，f2为*/n表示每n小时个时间间隔执行一
次，其余以此类推
当f1 为a,b，c,...时表示第a,b，c,...分钟要执行，f2 为a，b，c,...时表示第a，b，c..
个小时要执行，其余以此类推
使用者也可以将所有的设定先存放在档案file中，用crontabfile的方式来设定时程表。
例1：如果我要表示9月10日25分执行1svar/spool/cron任务怎么表示？
25 * 10 9 *
1s var/spoo1/cron
由于我没表示小时，所以就只能里面为每小时
例2：我要在每周日，每分钟执行wal1Helloredking.blog.51cto.com这个命令，时间怎么表示？
*/1 * * * 0 wal1 He1lo redking. blog. 51cto. com
*/表示每多少分钟执行一次
---
## Page 147
例3：每晚的 21:30重启apache。
30 21 *  * /usr/local/etc/rc. d/1ighttpd restart
例4：每月1、10、22日的4：45重启 apache
45 4 1, 10, 22 * * /usr/local/etc/rc. d/1ighttpd restart
例5：每周六、周日的1：10重启apache
10 1  * 6, 0 /usr/local/etc/rc. d/1ighttpd restart
例6：在每天18：00至23：00之间每隔30分钟重启apache
0, 30 1823 *  * /usr/local/etc/rc. d/1ighttpd restart
例7：每一小时重启apache
 */1 * * * /usr/local/etc/rc. d/1ighttpd restart
例8：晚上11点到早上7点之间，每隔一小时重启apache
 237/1 * * # /usr/1ocal/etc/rc. d/lighttpd restart
例9：每月的4号与每周一到周三的11点重启apache
0 11 4 * monwed /usr/local/etc/rc. d/1ighttpd restart
例10：一月一号的4点重启apache
0 4 1 jan * /usr/local/etc/rc. d/lighttpd restart
例11：在12月内，每天的早上6点到12点中，每隔3个小时执行一次/usr/bin/backup
0 612/3 * 12 * /usr/bin/backup
例12：每月每天的午夜0点20分，2点20分，4点20分....执行echohaha
20 023/2 * * * echo ~hahaa
3、系统级别的计划任务及其扩展anacrontab
这个是系统设置好了，清理系统垃圾或者是自动执行某些脚本的系统任务，一般我们做了解就行了，
不要更改配置文件是/etc/conrtab
root@test:~
文件E编辑E查看V终端标签帮助(H
HELL=/bin/bash
PATH=/sbin:/bin:/usr/sbin: /usr/bin
MAILTO=root
HOXE=/
#run-parts
root run=parts /etc/cron.hourly
02 4 * * *
* root run-parts /etc/cron.daily
42 4 1 **
root run-parts /etc/cron.nonthly
SHELL：就是运行计划任务的解释器，默认是bash
PATH：执行命令的环境变量
MAILTO：计划任务的出发者用户
HOME：家目录为/
run-parts是一个脚本，在/usr/bin/run-parts，作用是执行一个目录下的所有脚本/程序。
run-parts/etc/cron.hourly执行目录/etc/cron.hourly/之下的所有脚本/程序
run-parts 下面就是运行的命令
vim/etc/crontab与crontab-e写入的定时运行的区别？
vim/etc/crontab：是系统级别定义的crontab，/etc/crontab的所有者和组都是root
crontab-e：是用户自定义的crontab，是所有的用户都可以写入的
---
## Page 148
两种方法记录的位置不一样，一个在/etc/另一个在/var/里面。都被cron服务调用
问题，所以就有了cron服务的扩展，目的就是为了防止非24小时开机的计算机遗漏的守护任务，anacr
ontab就是系统计划任务的扩展文件：在一个指定时间间隔错过后自动执行任务
格式是这样的：
period delay
jobidentifier command
period一命令执行的频率（天数）
delay—延迟时间（分钟）
job-identifier—任务的描述，用在 anacron 的消息中，并作为作业时间文件的名称，只能包括
非空白的字符（除斜线外）。
command
一
要执行的命令
文件E）编辑E）查看终端标签帮助H
# /etc/anacrontab: configuration file for anacron
# See anacron(8) and anacrontab(5) for details.
SHELL=/bi n/sh
PATH=/sbin: /bin: /usr/sbin: /usr/bin
MAILTO=root
65
cron.dai1y
runparts /etc/cron.dai1y
7
70
cron. week1y
run-parts /etc/cron.week1y
30
75
cron. month1y
runparts /etc/cron.month1y
第一行的意思是：每天开机65分钟后就检查cron.daily文件是否被执行了，如果今天没有被执行就执
行他
第二行的意思是：每隔7天开机后70分钟检查cron.weekly文件是否被执行了，如果一周内没有被执行
就执行他