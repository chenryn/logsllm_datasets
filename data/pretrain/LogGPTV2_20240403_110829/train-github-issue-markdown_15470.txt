Matlab has a function called complexrandn which generates a 2D complex matrix
from uniform distribution. I need to use 2D complex number random matrix
sometimes. Here is the code which I made to deal with it. It would be great if
I could have it built in. You may like to also scale up to N dimensions as per
the inputs given. Also, my code takes RandomState as an argument whereas you
may like to do it like np.random.RandomState(513).conplexrandn()
Thanks for your services to open source
### Reproducing code example:
    import numpy as np
    def complexrandn(M,N,randomGen = np.random):
        data = randomGen.randn(M,N,2).view(complex)
        return np.array([ np.array([ complex(data[i][j]) for j in range(N) ]) for i in range(M) ] )
    randomGen = p.random.RandomState(513)
    x = complexrandn(2,2,randomGen) # To use a particular random stream
    y = complexrandn(2,2) # To use global random stream
    # You may like to do it as randomGen.complexrandn (It would be better for all)
### Numpy/Python version information:
1.16.3 3.6.7 (default, Oct 22 2018, 11:32:17)  
[GCC 8.2.0]