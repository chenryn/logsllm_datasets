    属性的方法。
    :::
4.  使用 `virsh nodev-create`{.literal} 命令，基于上一步中创建的 XML
    文件创建 VHBA。
    ``` literallayout
    # virsh nodedev-create vhba_host3
    Node device scsi_host5 created from vhba_host3.xml
    ```
:::
::: itemizedlist
**验证**
-   使用 `virsh nodedev-dumpxml`{.literal} 命令验证新的 vHBA
    的详情(scsi_host5)）：
    ``` literallayout
    # virsh nodedev-dumpxml scsi_host5
      scsi_host5
      /sys/devices/pci0000:00/0000:00:04.0/0000:10:00.0/host3/vport-3:0-0/host5
      scsi_host3
        5
        2
          5001a4a93526d0a1
          5001a4ace3ee047d
          2002000573de9a81
    ```
:::
::: itemizedlist
**其它资源**
-   [通过 CLI，创建带有 vHBA 设备的基于 SCSI
    的存储池](#managing-storage-for-virtual-machines_configuring-and-managing-virtualization.html#creating-scsi-based-storage-pools-with-vhba-devices-using-the-cli_assembly_managing-virtual-machine-storage-pools-using-the-cli "通过 CLI，创建带有 vHBA 设备的基于 SCSI 的存储池"){.link}
:::
:::
:::
[]{#assembly_managing-gpu-devices-in-virtual-machines_configuring-and-managing-virtualization.html}
::: chapter
::: titlepage
# []{#assembly_managing-gpu-devices-in-virtual-machines_configuring-and-managing-virtualization.html#assembly_managing-gpu-devices-in-virtual-machines_configuring-and-managing-virtualization}第 15 章 在虚拟机中管理 GPU 设备 {.title}
:::
要在 RHEL 9 主机上增强虚拟机(VM)的图形性能，您可以将主机 GPU
分配给虚拟机。
::: itemizedlist
-   您可以从主机中分离 GPU，并将 GPU 直接控制传递给虚拟机。
-   您可以从物理 GPU 创建多个介质设备，并将这些设备指定为虚拟
    GPU(vGPU)到多个客户端。这目前只在所选 NVIDIA GPU
    上被支持，一个介质设备只能分配给一个客户端。
:::
::: section
::: titlepage
# []{#assembly_managing-gpu-devices-in-virtual-machines_configuring-and-managing-virtualization.html#proc_assigning-a-gpu-to-a-virtual-machine_assembly_managing-gpu-devices-in-virtual-machines}为虚拟机分配 GPU {.title}
:::
要访问和控制附加到主机系统的 GPU，您必须配置主机系统，将 GPU
直接控制传递给虚拟机(VM)。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
如果您要查找有关分配虚拟 GPU 的信息，请参阅 ["管理 NVIDIA vGPU
设备"一节](#assembly_managing-gpu-devices-in-virtual-machines_configuring-and-managing-virtualization.html#assembly_managing-nvidia-vgpu-devices_assembly_managing-gpu-devices-in-virtual-machines "管理 NVIDIA vGPU 设备"){.xref}。
:::
::: itemizedlist
**先决条件**
-   您必须在主机机器内核中启用 IOMMU 支持。
    ::: itemizedlist
    -   在 Intel 主机上，您必须启用 VT-d：
        ::: orderedlist
        1.  使用 `intel_iommu=on`{.literal} 和 `iommu=pt`{.literal}
            参数重新生成 GRUB 配置：
            ``` literallayout
            # grubby --args="intel_iommu=on iommu_pt" --update-kernel DEFAULT
            ```
        2.  重启主机。
        :::
    -   在 AMD 主机上，您必须启用 AMD-Vi。
        请注意，在 AMD 主机上，IOMMU 被默认启用，您可以添加
        `iommu=pt`{.literal} 来将其切换到 pass-through 模式：
        ::: orderedlist
        1.  使用 `iommu=pt`{.literal} 参数重新生成 GRUB 配置：
            ``` literallayout
            # grubby --args="iommu=pt" --update-kernel DEFAULT
            ```
            ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
            ### 注意 {.title}
            `pt`{.literal} 选项只为使用直通模式的设备启用
            IOMMU，并提供更高的主机性能。但是，并非所有硬件都支持这个选项。您仍然可以分配是否启用了这个选项的设备。
            :::
        2.  重启主机。
        :::
    :::
:::
::: orderedlist
**流程**
1.  防止驱动程序绑定到 GPU。
    ::: orderedlist
    1.  识别 GPU 附加到的 PCI 总线地址。
        ``` literallayout
        # lspci -Dnn | grep VGA
        0000:02:00.0 VGA compatible controller [0300]: NVIDIA Corporation GK106GL [Quadro K4000] [10de:11fa] (rev a1)
        ```
    2.  防止主机的图形驱动程序使用 GPU。要做到这一点，使用 GPU 的 PCI ID
        和 pci-stub 驱动程序。
        例如，以下命令可防止驱动程序绑定到 [**10de:11fa**]{.strong}
        总线附加的 GPU：
        ``` literallayout
        # grubby --args="pci-stub.ids=10de:11fa" --update-kernel DEFAULT
        ```
    3.  重启主机。
    :::
2.  [**可选：**]{.strong}如果某些 GPU
    功能（如音频）因为支持限制而无法传递给虚拟机，您可以在 IOMMU
    组中修改端点的驱动程序绑定，以只通过所需的 GPU 功能。
    ::: orderedlist
    1.  将 GPU 设置转换为 XML，并记录您要阻止附加到主机驱动程序的端点的
        PCI 地址。
        要做到这一点，通过将 `pci_`{.literal} 前缀添加到地址，并将 GPU
        的 PCI 总线地址转换为 libvirt 兼容格式，并将分隔符转换为下划线。
        例如，以下命令显示在 `0000:02:00.0`{.literal} 总线地址附加的 GPU
        的 XML 配置。
        ``` literallayout
        # virsh nodedev-dumpxml pci_0000_02_00_0
        ```
        ``` programlisting
         pci_0000_02_00_0
         /sys/devices/pci0000:00/0000:00:03.0/0000:02:00.0
         pci_0000_00_03_0
          pci-stub
          0
          2
          0
          0
          GK106GL [Quadro K4000]
          NVIDIA Corporation
        ```
    2.  防止端点附加到主机驱动程序。
        在本例中，要将 GPU
        分配给虚拟机，防止与音频功能对应的端点，``{.literal}，连接至主机音频驱动程序，而是将端点附加到
        VFIO-PCI。
        ``` literallayout
        # driverctl set-override 0000:02:00.1 vfio-pci
        ```
    :::
3.  将 GPU 附加到虚拟机
    ::: orderedlist
    1.  使用 PCI 总线地址为 GPU 创建 XML 配置文件。
        例如，您可以使用来自 GPU 总线地址的参数，创建以下 XML 文件
        GPU-Assign.xml。
        ``` programlisting
        ```
    2.  将文件保存到主机系统中。
    3.  将文件与虚拟机的 XML 配置合并。
        例如，以下命令将 GPU XML 文件 GPU-Assign.xml 与
        `System1`{.literal} 虚拟机的 XML 配置文件合并。
        ``` literallayout
        # virsh attach-device System1 --file /home/GPU-Assign.xml --persistent
        Device attached successfully.
        ```
        ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
        ### 注意 {.title}
        GPU 作为二级图形设备附加到虚拟机。不支持将 GPU
        分配为主图形设备，红帽不推荐在虚拟机 XML
        配置中删除主仿真图形设备。
        :::
    :::
:::
::: itemizedlist
**验证**
-   该设备会出现在虚拟机的 XML 配置中。
:::
::: itemizedlist
**已知问题**
-   将 NVIDIA GPU 设备附加到使用 RHEL 9
    客户机操作系统的虚拟机当前禁用该虚拟机上的 Wayland 会话，并改为加载
    Xorg 会话。这是因为 NVIDIA 驱动程序和 Wayland 之间的不兼容。
:::
:::
::: section
::: titlepage
# []{#assembly_managing-gpu-devices-in-virtual-machines_configuring-and-managing-virtualization.html#assembly_managing-nvidia-vgpu-devices_assembly_managing-gpu-devices-in-virtual-machines}管理 NVIDIA vGPU 设备 {.title}
:::
vGPU 功能可使物理 NVIDIA GPU 设备划分为多个虚拟设备，称为
`介质设备`{.literal}。然后可将这些 mediated devices
分配给多个虚拟机（VM）作为虚拟 GPU。因此，这些虚拟机可以共享单个物理 GPU
的性能。
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
为虚拟机分配物理 GPU，使用介质设备或不使用介质设备，使得主机无法使用
GPU。
:::
::: section
::: titlepage
## []{#assembly_managing-gpu-devices-in-virtual-machines_configuring-and-managing-virtualization.html#proc_setting-up-nvidia-vgpu-devices_assembly_managing-nvidia-vgpu-devices}设置 NVIDIA vGPU 设备 {.title}
:::
要设置 NVIDIA vGPU 功能，您需要为 GPU 设备下载 NVIDIA vGPU
驱动程序，创建介质设备，并将其分配给预期的虚拟机。具体步骤请查看以下说明。
::: itemizedlist
**先决条件**
-   您的 GPU 支持 vGPU 介质设备。有关支持创建 vGPU 的 NVIDIA GPU
    的最新列表，请参阅 [NVIDIA vGPU
    软件文档](https://docs.nvidia.com/grid/latest/grid-vgpu-release-notes-red-hat-el-kvm/index.html#validated-platforms){.link}。
    ::: itemizedlist
    -   如果您不知道您的主机正在使用哪个 GPU，请安装 [*lshw*]{.emphasis}
        软件包并使用 `lshw -C display`{.literal}
        命令。以下示例显示系统使用与 vGPU 兼容的 NVIDIA Tesla P4 GPU。
        ``` literallayout
        # lshw -C display
        *-display
               description: 3D controller
               product: GP104GL [Tesla P4]
               vendor: NVIDIA Corporation
               physical id: 0
               bus info: pci@0000:01:00.0
               version: a1
               width: 64 bits
               clock: 33MHz
               capabilities: pm msi pciexpress cap_list
               configuration: driver=vfio-pci latency=0
               resources: irq:16 memory:f6000000-f6ffffff memory:e0000000-efffffff memory:f0000000-f1ffffff
        ```
    :::
:::
::: orderedlist
**流程**