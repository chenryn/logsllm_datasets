X
X
forestFunctionality
X
X
X
X
X
X
X
X
X
X
X
X
X
X
msDS-ReplAllInboundNeighbors
X
X
X
X
X
X
X
X
X
X
X
X
X
X
msDS-ReplAllOutboundNeighbors
X
X
X
X
X
X
X
X
X
X
X
X
X
X
msDS-ReplConnectionFailures
X
X
X
X
X
X
X
X
X
X
X
X
X
X
msDS-ReplLinkFailures
X
X
X
X
X
X
X
X
X
X
X
X
X
X
msDS-ReplPendingOps
X
X
X
X
X
X
X
X
X
X
X
X
X
X
msDS-ReplQueueStatistics
X
X
X
X
X
X
X
X
X
X
X
X
X
X
msDS-TopQuotaUsage
X
X
X
X
X
X
X
X
X
X
X
X
X
X
supportedConfigurableSettings
X
X
X
X
X
X
X
X
X
X
X
X
X
X
supportedExtension
X
X
X
X
X
X
X
X
X
X
X
X
X
X
validFSMOs
X
X
X
X
X
X
X
X
X
X
X
X
X
X
dsaVersionString
X
X
X
X
X
X
X
X
X
X
X
X
X
msDS-PortLDAP
X
X
X
X
X
X
X
X
X
X
X
X
X
msDS-PortSSL
X
X
X
X
X
X
X
X
X
X
X
X
X
msDS-PrincipalName
X
X
X
X
X
X
X
X
X
X
X
X
X
serviceAccountInfo
X
X
X
X
X
X
X
X
X
X
X
X
X
spnRegistrationResult
X
X
X
X
X
X
X
X
X
X
X
X
X
tokenGroups
X
X
X
X
X
X
X
X
X
X
X
X
X
usnAtRifm
X
X
X
X
X
X
X
X
X
X
X
X
approximateHighestInternalObjectID
X
X
X
X
X
X
X
X
X
X
databaseGuid
X
X
X
X
X
X
X
X
schemaIndexUpdateState
X
X
X
X
X
X
X
X
dumpLdapNotifications
X
X
X
X
X
X
msDS-ProcessLinksOperations *
X
X
X
X
X
X
X
X
msDS-SegmentCacheInfo **
X
X
msDS-ThreadStates ***
X
X
X
X
X
X
ConfigurableSettingsEffective
X
X
X
X
LDAPPoliciesEffective
X
X
X
X
msDS-ArenaInfo
X
X
X
X
msDS-Anchor
X
X
msDS-PrefixTable
X
X
msDS-SupportedRootDSEAttributes
X
X
msDS-SupportedRootDSEModifications
X
X
这⾥我们着重的看 RootDSE⾥的netlogon属性，因为LDAP PING 的实现就是搜索netlogon属性
当我在搜索RootDSE的时候发现⽬录⾥不存在netlogon。
因为这⾥所实现的LDAP 的netlogon是通过域控制器将查询传递给在域控制器上运⾏的 NetLogon 服务，由
NetLogon去返回NetLogon属性，
这⾥很绕，通俗⼀点来讲是在LDAP上是没有netlogon这个属性的，微软通过NetLogon来实现了这个属性。然后把
这个概念放到了LDAP ROOtDSE上，NetLogon属性只适⽤于我们在进⾏LDAP PING
这是MS提供的搜索的例⼦
(&(DnsDomain=abcde.corp.microsoft.com)(Host=abcdefgh-dev)(User=abcdefgh-dev$)(AAC=\80\00\00\00)
(DomainGuid=\3b\b0\21\ ca\d3\6d\d1\11\8a\7d\b8\df\b1\56\87\1f)(NtVer=\06\00\00\00))
⽹络有效载荷：
这⾥是我们在域客户端请求LDAP下的默认下进⾏的⽹络包（7）
 A0 84 00 00 00 A8 A3 84 00 00 00 25 04 09 44 ?...¨?...%..D
 6E 73 44 6F 6D 61 69 66 04 18 61 62 63 64 65 nsDomain..abcde
 2E 63 6F 72 70 2E 6D 69 63 72 6F 73 6F 66 74 .corp.microsoft
 2E 63 6F 6D A3 84 00 00 00 14 04 04 48 6F 73 .com£?......Hos
 74 04 0C 61 62 63 64 65 66 67 68 2D 64 65 76 t..abcdefgh-dev
 A3 84 00 00 00 15 04 04 55 73 65 72 04 0D 61 £?......⽤户..a
 62 63 64 65 66 67 68 2D 64 65 76 24 A3 84 00 bcdefgh-dev$£?。
 00 00 0B 04 03 41 41 43 04 04 80 00 00 00 A3 .....AAC..?...£?
 84 00 00 00 1E 04 0A 44 6F 6D 61 69 6E 47 75 ......DomainGu
 69 64 04 10 3B B0 21 CA D3 6D D1 11 8A 7D B8 id..;°!ÊÓmÑ.?}¸
 DF B1 56 87 1F A3 84 00 00 00 0D 04 05 4E 74 ß±V?.£?......Nt
 56 65 72 04 04 06 00 00 00 30 84 00 00 00 0A Ver......0?....
 04 08 6E 65 74 6C 6F 67 6F 6E ..netlogon
DnsDomain：当前的域
Host：客户端的NetBIOS名称
NtVer：NETLOGON_NT_VERSION 选项位（兼容新旧AD）
DnsHost：客户端的完全限定域名
 在第七条数据包的时候我们请求的是RootDSE中的NETLOGON属性
当我们的LDAP ping SearchRequest请求发送以后，接下来看服务器与我们回复的包（8）
从红框中的依次是 
DS_FLAG （DS_FLAG选项）
DomainGuid  （NC 的 GUID 属性值）
DnsForestName（森林的 DNS 名称）
DnsDomainName（NC 的 DNS 名称）
DnsHostName（DNS的服务器名称）
NetbiosDomainName（NetBIOS 域名）
NetbiosComputerName（服务器NetBIOS名称）
UserName（⽤户名）
DcSiteName（服务器的Active Directory 站点名称）
ClientSiteName（客户端的Active Directory 站点名称）
Version Flags （NtVersion）
LM （必须设置为 0xFFFF）
NT （必须设置为 0xFFFF）
接下来开始看DS_FLAG位，DS_FLAG为四个字节，
DS_PDC_FLAG, 0x00000001：服务器持有PDC FSMO⻆⾊（PdcEmulationMasterRole）
DS_GC_FLAG，0x00000004：服务器是全局编录 域控制器，将接受和处理在全局编录端⼝ 上定向到它的消
息
DS_LDAP_FLAG, 0x00000008：服务器是LDAP服务器
DS_DS_FLAG, 0x00000010：服务器是域控制器
DS_KDC_FLAG，0x00000020：服务器正在运⾏Kerberos 密钥分发中⼼服务。
DS_TIMESERV_FLAG, 0x00000040：W32Time 中指定的 Win32 Windows 时间服务存在于服务器上。
DS_CLOSEST_FLAG, 0x00000080：DcSiteName和ClientSiteName相同，提示客户端它在速度⽅⾯与服务器
的连接良好。
DS_WRITABLE_FLAG, 0x00000100：表示服务器不是RODC。如第 3.1.1.1.9 节所述，RODC上托管的所有 
NC 副本不接受原始更新。
DS_GOOD_TIMESERV_FLAG, 0x00000200：服务器是可靠的时间服务器。
DS_NDNC_FLAG, 0x00000400: NamingContext是⼀个应⽤程序 NamingContext。
DS_SELECT_SECRET_DOMAIN_6_FLAG, 0x00000800)：服务器是RODC。
DS_FULL_SECRET_DOMAIN_6_FLAG, 0x00001000：服务器是可写 DC，不通过Windows Server 2003 R2操
作系统运⾏Windows Server 2000 操作系统。
DS_WS_FLAG, 0x00002000：服务器上存在MS-ADDM 中指定的 Active Directory Web 服务。
DS_DS_8_FLAG, 0x00004000：服务器未通过Windows Server 2008 R2操作系统运⾏Windows Server 2000 
操作系统。
DS_DS_9_FLAG, 0x00008000：服务器未通过Windows Server 2012操作系统运⾏Windows Server 2000。
DS_DNS_CONTROLLER_FLAG, 0x20000000：服务器有⼀个DNS 域名。
DS_DNS_DOMAIN_FLAG, 0x40000000: NamingContext是DefaultNamingContext
DS_DNS_FOREST_FLAG, 0x80000000: NamingContext是森林根域
在分析完这些之后可以⼤概的对微软如何进⾏定位域控的进⾏⼀个了解了
登录到基于 Windows 的域的⼯作站以⼀般形式查询DNS SRV 记录。
Active Directory 服务器通过TCP协议提供轻型⽬录访问协议( LDAP ) 服务。因此，客户端通过查询DNS SRV 记录
来查找LDAP服务器（即域控制器）以获取以下形式的记录：
当客户端登录或加⼊⽹络时，它必须能够找到域控制器。因此，客户端通过查询 DNS 以获取以下形式的记录来查
找域控制器：
客户端找到域控制器后，它通过使⽤LDAP建⽴通信以访问AD。客户端使⽤LDAP ping建⽴到域控制器的LDAP连接
并检索Netlogon 属性。该客户端确定的域控制器适⽤于启动Windows登录使⽤Windows客户端认证架构
 资料来源:https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-adts/8ebcf782-87fd-4dc3-85
85-1301569dfe4f
_ldap._tcp.DnsDomainName
_LDAP._TCP.dc._msdcs.domain name
通过查询DNS SRV的记录来定位域控的两条命令
nslookup -type=SRV _ldap._tcp.dc._msdcs.loca.test.com
nltest /dsgetdc:loca.test.com
//其实还有好⼏条命令，不过我忘了。