networking activity on the day of the robbery they ﬁnd that
the social snapshots accurately correlate with a F1-score of
0.84, and both accounts hold the treasonous private mes-
sages. The timeline generated from the social snapshot and
outlined in Figure 7 shows Bob’s online activity on the day
of the bank robbery. Curious as to whether the pristine
digital image of Bob’s posting can be recovered the investi-
gator runs the digital image forensic module to match digi-
tal images from the forensic image with the image collected
through the seven independent social snapshots. The dig-
ital image forensic module reports a positive match on a
digital image named “CIMG2216.JPG”. The original EXIF
information of image “CIMG2216.JPG” reveals that their al-
ibi group picture had indeed been taken a week before the
robbery.
4.8 Social Snapshot Open-Source Release
We release the social snapshot core framework for Facebook
under a GPL v3 open source license1. The source code con-
tains the social snapshot client, our third-party application,
as well as the patched Selenium server. Not included in
the open source release are the analysis and photo forensics
modules. We furthermore decided not to release the hijack
module, which could be potentially misused for malicious
attacks.
5. DISCUSSION
Our evaluation required on average 9,802 API and 238 HTTP
requests to successfully snapshot an entire social network-
ing account in less than 15 minutes.
In order to collect
forensic evidence with traditional web-crawling more than
10,000 HTTP requests are necessary to snapshot a single
test account. The generated network traﬃc of traditional
web-crawling would have been likely detected and blocked
by social networking providers. Moreover, our evaluated
approach retrieved the great majority of social networking
account data without the requirement of additional parsing
and with exact timestamps. During the implementation of
our social snapshot techniques, Facebook’s web-site layout
changed a number of times. Since only contact details were
crawled, we could promptly adapt the parser of our client,
while our third-party application did not require any changes
at all. As Facebook has no review process for third-party
applications we could also make our third-party application
1https://github.com/mleithner/SocialSnapshot
1/13/2011 12:00 AM1/14/2011 12:00 AM01:0002:0003:0004:0005:0006:0007:0008:0009:0010:0011:0012:0013:0014:0015:0016:0017:0018:0019:0020:0021:0022:0023:005:51:35 PMWall Post ID 123456789Privacy: ALL_Friends1 Comments3:20:32 PMPrivate MessageID 00000000To Grat DaltonID 333333Bob Dalton ID 11111111 UTC-56:27:12 PMPrivate MessageID 0000001User Grat Dalton ID 3333336:43:12 AMUser Bill Power ID 222222Wall Post ID 12345678:48:00 PMUser Dick Broadwell ID 4444444Comment Wall Post ID 1234567897:44:50 AMUploaded digital pictureID 77777777Privacy: EVERYBODYMatched Source Image:CIMG2216.JPG12:32:50 PMLike Wall Post ID 1234567of User 12345610:56:50 AMUser Dick Broadwell ID 4444444Posted video ID 1234567available straightforward. Third-party applications on Face-
book do not even have to appear in their application direc-
tory in order to be usable.
Apart from digital forensics, social snapshots could also be
used to raise user awareness. Users would run our social
snapshot tool and get a report on their account data. Thus,
social networking users could sight the magnitude of infor-
mation that is stored with their social networking providers.
We hope that this would help the average social networking
user to make better informed decisions on which information
they post.
Unencrypted social networking sessions enable the gather-
ing of social snapshots for digital forensics but also pose a
serious security threat. Since HTTPS is not enabled by de-
fault on today’s social networking services, user sessions can
easily be hijacked. Two proof-of-concept tools have been re-
leased that make session hijacking of social networking ses-
sions available to the average user. Firesheep [3] has been
released in October 2010 as a browser extension and at the
time of writing is not functioning anymore. Faceniﬀ [24]
oﬀers a point-to-click interface and supports a number of
wireless network protocols. It is an Android application for
hijacking social networking sessions released in June 2011.
Both hijacking applications were released in order to create
awareness for the problem of insecure social networking ses-
sions. It is trivial however to couple such simple hijacking
applications with our social snapshot tool. Thus, attackers
could harvest complete account snapshots in an automated
fashion.
It has been shown [17] that the large amount of
sensitive data stored in social networks could be used for
large-scale spam attacks via session hijacking.
6. RELATED WORK
Numerous forensic frameworks have been proposed in recent
years. However, none of them were designed speciﬁcally to
extract information from social networks. To the best of our
knowledge, no other publication has examined the impact of
a hybrid API and crawler based approach to digital forensics
in social networks.
Even though social networks are not per-se part of the cloud
computing paradigm, the area of cloud forensics poses some
related challenges as these service operators rely on private
clouds for their infrastructure. Speciﬁcally the unknown lo-
cation of data centers [26] and the diﬃculty to obtain access
to forensic data sources without trusting a third party [2] as
well as data provenance [20]. Pyﬂag [8], on the other hand,
is a modular network forensic framework built to analyze
network dumps. Among other features it is able to rebuild
HTML pages from packets, allowing the examiner to view
the webpages the suspect has seen even if it used AJAX or
other dynamic techniques for representation. Xplico [30] is
an Internet traﬃc decoder which can retrieve Facebook chat
conversations from network dumps.
In relation to our digital image forensics module a recent
approach is PhotoDNA [21], which is a program to detect
known and explicitly illegal pictures based on calculated
signatures.
It is only available to law enforcement agen-
cies. Similar to signature-based antivirus software, a trusted
party calculates the signatures for illicit pictures such as
child pornography which in turn is then compared with the
signatures of pictures in webpages, data archives or pictures
from forensic hard drive examinations. In [19] characteris-
tics of embedded thumbnails are used to authenticate the
source of a picture. While both approaches work similar to
our module, they have not been designed or employed to
compare digital images from social networks with pictures
from a suspect’s hard drive.
7. CONCLUDING REMARKS
Social snapshots explore novel techniques for automated col-
lection of digital evidence from social networking services.
Compared with state-of-the-art web crawling techniques our
approach signiﬁcantly reduces network traﬃc, is easier to
maintain, and has access to additional and hidden informa-
tion. Extensive evaluation of our techniques have shown
that they are practical and eﬀective to collect the complete
information of a given social networking account reasonably
fast and without detection from social networking providers.
We believe that our techniques can be used in cases where
no legal cooperation with social networking providers exists.
In order to provide a digital evidence collection tool for mod-
ern forensic investigations of social networking activities, we
release our core social snapshot framework as open source
software. We will continue to extend the analysis capabili-
ties of our forensic software and cooperate with partners on
the evaluation of real-world cases.
7.1 Acknowledgments
The research was funded by COMET K1, FFG - Austrian
Research Promotion Agency, by the Austrian Research Pro-
motion Agency under grants: 820854, 824709, 825747, and
by the European Union Seventh Framework Programme (FP7/2007-
2013) under grant agreement n◦ 257007. Recruiting test
subjects in a security lab and computer science environment
was especially challenging as most people misconceived our
temporary Facebook access request for a clumsy social engi-
neering attack. Therefore, we would like to especially thank
the human volunteers who supported our experiments by
providing their Facebook data. The authors would also like
to thank Barbara Weber and Robert Sablatnig for their ad-
vice and feedback in the creation of this paper.
8. REFERENCES
[1] L. Bilge, T. Strufe, D. Balzarotti, and E. Kirda. All
your contacts are belong to us: automated identity
theft attacks on social networks. In Proceedings of the
18th international conference on World wide web,
pages 551–560. ACM, 2009.
[2] D. Birk and C. Wegener. Technical issues of forensic
investigatinos in cloud computing environments. In
Systematic Approaches to Digital Forensic
Engineering, 2011. SADFE 2011. Sixth International
Workshop on. IEEE.
[3] E. Butler. Firesheep. Online at
http://codebutler.com/firesheep, oct 2010.
[4] M. Caloyannides, N. Memon, and W. Venema. Digital
forensics. Security & Privacy, IEEE, 7(2):16–17, 2009.
[5] B. Carrier. File system forensic analysis.
Addison-Wesley Professional, 2005.
[6] E. Chan, S. Venkataraman, F. David, A. Chaugule,
and R. Campbell. Forenscope: A framework for live
forensics. In Proceedings of the 26th Annual Computer
Security Applications Conference, pages 307–316.
ACM, 2010.
[26] M. Taylor, J. Haggerty, D. Gresty, and D. Lamb.
Forensic investigation of cloud computing systems.
Network Security, 2011(3):4–10, 2011.
[7] CNN. Facebook status update provides alibi. Online
[27] The New York Criminal Law Blog. Criminal found via
at http://cnn.com/2009/CRIME/11/12/facebook.
alibi/index.html, nov 2009.
[8] M. Cohen. PyFlag-An advanced network forensic
framework. digital investigation, 5:S112–S120, 2008.
[9] EFF. Social Media and Law Enforcement: Who Gets
What Data and When? Online at
https://www.eﬀ.org/deeplinks/2011/01/social-media-
and-law-enforcement-who-gets-what.
[10] Facebook. Graph API. Online at https:
Facebook. Online at
http://newyorkcriminallawyersblog.com/2010/03/
assault-criminal-who-was-found-via-facebook-is-back-in-ny.
html, mar 2009.
[28] The Washington Post. Facebook: a place to meet,
gossip, share photos of stolen goods. Online at
http://www.washingtonpost.com/wp-dyn/content/
article/2010/12/14/AR2010121407423_pf.html, dec
2010.
//developers.facebook.com/docs/reference/api/.
[29] G. Wondracek, T. Holz, E. Kirda, and C. Kruegel. A
Practical Attack to De-Anonymize Social Network
Users. In Proceedings of the IEEE Symposium on
Security and Privacy, 2010.
[30] Xplico. Xplico - Network Forensic Analysis Tool.
Online at http://www.xplico.org/.
[11] Facebook. Statistics of Facebook. Online at http:
//www.facebook.com/press/info.php?statistics.
Accessed April 20th, 2011.
[12] Facebook. The Facebook Blog: Giving You More
Control. Online at https:
//blog.facebook.com/blog.php?post=434691727130,
oct 2010.
[13] K. Fowler. SQL Server forensic analysis.
Addison-Wesley Professional, 2008.
[14] FSF. Ocrad - The GNU OCR. Online at
http://www.gnu.org/software/ocrad/.
[15] H. Gao, J. Hu, C. Wilson, Z. Li, Y. Chen, and
B. Zhao. Detecting and characterizing social spam
campaigns. In Proceedings of the 10th annual
conference on Internet measurement, pages 35–47.
ACM, 2010.
[16] B. Hay, K. Nance, and M. Bishop. Live analysis:
Progress and challenges. Security & Privacy, IEEE,
7(2):30–37, 2009.
[17] M. Huber, M. Mulazzani, E. Weippl, G. Kitzler, and
S. Goluch. Friend-in-the-middle attacks: Exploiting
social networking sites for spam. Internet Computing,
2011.
[18] T. Jagatic, N. Johnson, M. Jakobsson, and
F. Menczer. Social phishing. Communications of the
ACM, 50(10):94–100, 2007.
[19] E. Kee and H. Farid. Digital image authentication
from thumbnails. Proceedings of the SPIE, Electronic
Imaging, Media Forensics and Security XII, 2010.
[20] R. Lu, X. Lin, X. Liang, and X. Shen. Secure
provenance: the essential of bread and butter of data
forensics in cloud computing. In Proceedings of the 5th
ACM Symposium on Information, Computer and
Communications Security, pages 282–292. ACM, 2010.
[21] Microsoft. PhotoDNA. Online at
http://www.microsoftphotodna.com/.
[22] OpenQA. Selenium wep application testing system.
Online at http://seleniumhq.org/.
[23] M. Perry. CookieMonster: Cookie Hijacking. Online at
http://fscked.org/projects/cookiemonster, aug
2008.
[24] B. Ponurkiewicz. Faceniﬀ. Online at
http://faceniff.ponury.net/, jun 2011.
[25] N. A. Rahman. Scraping facebook email addresses.
Online at http://www.kudanai.com/2008/10/
scraping-facebook-email-addresses.html, aug
2008.