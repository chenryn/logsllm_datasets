title:Modeling insider attacks on group key-exchange protocols
author:Jonathan Katz and
Ji Sun Shin
Modeling Insider Attacks on
Group Key›Exchange Protocols
Jonathan Katz(cid:3)
Dept. of Computer Science
University of Maryland
College Park, MD
Ji Sun Shin
Dept. of Computer Science
University of Maryland
College Park, MD
PI:EMAIL
PI:EMAIL
ABSTRACT
Protocols for authenticated key exchange (AKE) allow par-
ties within an insecure network to establish a common ses-
sion key which can then be used to secure their future com-
munication. It is fair to say that group AKE is currently less
well understood than the case of two-party AKE; in partic-
ular, attacks by malicious insiders | a concern speci(cid:12)c to
the group setting | have so far been considered only in a
relatively \ad-hoc" fashion. The main contribution of this
work is to address this de(cid:12)ciency by providing a formal, com-
prehensive model and de(cid:12)nition of security for group AKE
which automatically encompasses insider attacks. We do
so by de(cid:12)ning an appropriate ideal functionality for group
AKE within the universal composability (UC) framework.
As a side bene(cid:12)t, any protocol secure with respect to our
de(cid:12)nition is secure even when run concurrently with other
protocols, and the key generated by any such protocol may
be used securely in any subsequent application.
In addition to proposing this de(cid:12)nition, we show that the
resulting notion of security is strictly stronger than the one
proposed by Bresson, et al. (termed \AKE-security"), and
that our de(cid:12)nition implies all previously-suggested notions
of security against insider attacks. We also show a simple
technique for converting any AKE-secure protocol into one
secure with respect to our de(cid:12)nition.
Categories and Subject Descriptors
C.2.0 [Computer-Communication Networks]: General|
Security and Protection
General Terms
Security, Theory
(cid:3)Research supported by NSF Trusted Computing Grant
#0310751 and NSF CAREER award #0447075.
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for pro(cid:2)t or commercial advantage and that copies
bear this notice and the full citation on the (cid:2)rst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speci(cid:2)c
permission and/or a fee.
CCS’05, November 7(cid:150)11, 2005, Alexandria, Virginia, USA.
Copyright 2005 ACM 1›59593›226›7/05/0011 ...$5.00.
Keywords
Group Key Exchange, Insider Attacks, Universal Compos-
ability
1.
INTRODUCTION
Protocols for authenticated key exchange (AKE) allow
parties within a completely insecure network to establish
a common session key and furthermore to be assured that
they are sharing this key with each other (i.e., with their
intended partners). The case of two-party AKE has been
extensively investigated [18, 10, 19, 2, 6, 4, 29, 13, 14] both
from a de(cid:12)nitional standpoint as well as from the stand-
point of designing e(cid:14)cient protocols for this task. Less well
understood is the group setting where a session key is to
be established among more than two parties. Formal def-
initional work in this setting began only recently with the
introduction of a formal model by Bresson, et al. [7, 8, 9]
(with some additional modi(cid:12)cations by Katz and Yung [23])
which was based on earlier work in the two-party setting by
Bellare, Pointcheval, and Rogaway [2, 3, 5]. In the subse-
quent discussion, we refer to protocols secure in the model
of Bresson, et al. as \AKE-secure".
AKE-security does not take into account any notion of
protection against \insider attacks", and in fact it is easy to
see that AKE-secure protocols may be completely insecure
against attacks by malicious insiders (cf. Claim 1, below).
The lack of a comprehensive and formal model which ad-
equately treats insider attacks has led to a number of rel-
atively \ad-hoc" de(cid:12)nitions1 of security against insider at-
tacks [24, 27, 1, 20, 16] as well as a number of claimed \at-
tacks" on provably-secure protocols [28, 33, 32, 17] (however,
the protocols in question were never claimed to be secure
against insider attacks). Recent work of Cachin and Strobl
[11] deals with the case of fail-stop faults, but does not deal
with the more general case of adversarial (Byzantine) fail-
ures. Note that the possibility of insider faults/attacks in
the group setting represents a qualitative di(cid:11)erence from the
two-party setting where insider attacks are not a concern.
Of course, when an insider is malicious there is no way
to prevent this malicious player from learning the value of
the session key computed by a group of which he is a valid
member. However, there are still important and potentially-
1By \ad-hoc" we do not (necessarily) mean \informal".
Rather, we mean that these works do not present a general
framework in which to deal with insider attacks, but instead
consider a seemingly \ad-hoc" collection of such attacks.
avoidable security concerns to be addressed: for example, a
malicious insider should not have the ability to learn the ses-
sion keys computed by groups of which he is not a member,
and should not be able to impersonate other honest players
or to cause di(cid:11)erent (honest) members of a group to com-
pute di(cid:11)erent session keys without detecting that something
is amiss. Although one can continue to list various proper-
ties of this sort which any \secure" group AKE protocol
should satisfy (as done in, e.g., [27, 16]), it is unclear how to
determine when any given list of attacks has exhausted all
the relevant possibilities! It is for precisely this reason that
a comprehensive model is useful.
1.1 Our Contributions
As a way to better model insider attacks, we introduce
de(cid:12)nitions of security for group AKE protocols within the
universal composability (UC) framework [12].
In the UC
framework, a cryptographic task is speci(cid:12)ed via an appro-
priate ideal-world functionality; a secure protocol is then
de(cid:12)ned as one which adequately \mimics" this ideal-world
functionality in a way made formal in [12] (the reader is
referred there for details). By introducing a suitable ideal
functionality for the task of group key exchange, we are as-
sured that any secure protocol will automatically guarantee
security against both insider and outsider attacks. The pri-
mary advantage of working within the UC framework is that
we need only specify what it is we wish a group AKE pro-
tocol to achieve (via introduction of the appropriate ideal-
world functionality), rather than provide a laundry-list of
attacks we wish to prevent. As a sanity check for our pro-
posed ideal functionality, however, we show that any proto-
col which securely realizes the functionality proposed here
is also AKE-secure (i.e., is secure against \outsider" attacks
in the sense of Bresson, et al.) as well as secure against the
various insider attacks considered in [27, 16]. As mentioned
earlier, the de(cid:12)nition of Bresson, et al. does not guarantee
any security against insider attacks; thus, we see that our
de(cid:12)nition is strictly stronger than AKE-security.
Working within the UC framework also yields other ad-
vantages, as highlighted by Canetti and Krawczyk in the
context of two-party key exchange [14]. In particular, addi-
tional advantages include: (1) protocols proven secure within
the UC framework remain secure even when run concur-
rently with any other set of protocols; (2) the session keys
generated by any UC-secure protocol may be securely used
by any application calling the protocol as a sub-routine; also
(3) we obtain a de(cid:12)nition which guarantees security even in
the so-called strong corruption model where honest players
may be compromised at any point during execution of the
protocol. Although some previous de(cid:12)nitions of group AKE
describe security against such attacks, none of the above-
mentioned references show a group AKE protocol which is
proven secure in the strong corruption model.
As mentioned above, the de(cid:12)nition of security developed
in this work is strictly stronger than AKE-security. We
show, however, a simple and e(cid:14)cient compiler which trans-
forms any AKE-secure protocol into a protocol which se-
curely realizes the ideal functionality proposed here. Our
compiler is essentially the one suggested (without proof) in
the full version of [23, Section 2.1], and is fundamentally dif-
ferent from the one used by Canetti and Krawczyk [14] for
a similar purpose in the two-party setting. In particular (in-
formally), the compiler suggested by Canetti and Krawczyk
authenticates an acknowledgment (\ack") message using a
message authentication code (MAC) keyed by the session
key sk generated by the two parties. In our setting, how-
ever, this would not result in a protocol secure against in-
sider attacks since a malicious insider may know sk as well!
Instead, our compiler requires the parties to sign an \ack"
message using a long-term key established for this purpose.
(For exactly this reason, our compiler is also fundamentally
di(cid:11)erent from the ones suggested by Bellare, et al. [5] and
Bresson, et al. [7] to achieve explicit authentication.) How-
ever, some additional subtleties arise (see Section 4.2 for
details): in particular, we must ensure that the \ack" mes-
sage both (1) does not leak information about sk (in a com-
putational sense); yet (2) corresponds to a unique possible
sk. Thus, for example, the \ack" message cannot simply
be computed as v = Fsk(r), where F is a pseudorandom
function and r is a random value: in this case (even if r is
public), v would not necessarily correspond to a unique sk.
1.2 Previous Related Work
Clearly, the work most relevant to our own is that of
Canetti and Krawczyk [14] who consider two-party key ex-
change within the UC framework. Our work builds on theirs,
however our goals are somewhat di(cid:11)erent in that we set out
with the aim of modeling insider attacks (which are not of
much concern in the two-party setting) and merely view the
UC framework as a convenient way to achieve this goal. (In
contrast, Canetti and Krawczyk were most concerned with
composability, and speci(cid:12)cally use the UC framework for
that reason.)
Works which come closest to providing a formal model in
which to analyze insider attacks on group AKE protocols
include [27, 16], which both list various security concerns to
be addressed when malicious insiders may be present.
In
contrast, we view our work as providing a single, simple,
and comprehensive de(cid:12)nition of insider attacks; moreover,
our de(cid:12)nition encompasses all the de(cid:12)nitions of those pre-
vious papers. A mechanism for protecting against certain
insider attacks in shown in [27]; however, their approach is
tailored for a speci(cid:12)c protocol and no proofs of security or
formal de(cid:12)nitions are given (indeed, depending on how var-
ious components of their schemes are instantiated, speci(cid:12)c
attacks appear possible).
Steiner [30, Section 5.2] (see also [25]) proposes an ideal
functionality for group AKE within the framework of P(cid:12)tz-
mann and Waidner [26]. Insider attacks were not the speci(cid:12)c
focus there, but nevertheless it is claimed that protocols se-
curely realizing the given ideal functionality are also secure
against (certain classes of) insider attacks. Arguably, the
ideal functionality de(cid:12)ned in this work is simpler and more
straightforward than the one given in [30] (although, to be
fair, this probably depends to some extent on one’s rela-
tive familiarity with [12] vs. [26]). Furthermore, although
a speci(cid:12)c, O(n)-round protocol (where n is the group size)
is proven secure in [30], no generic method for constructing
secure protocols is given.
2. AKE›SECURITY
Here, we review the notion of \AKE-security" essentially
along the lines of [7, 8, 9, 23] (but with some modi(cid:12)cations).
We then formally introduce two notions of security against
insider attacks; these may be of independent interest, as they
appear to be the (cid:12)rst formal de(cid:12)nitions of such attacks. We
conclude this section by showing, as one might expect, that
AKE-security does not imply security against either of these
attacks. This motivates our subsequent introduction of a
new framework which does adequately handle such attacks
(among others).
Participants and initialization. There is a (cid:12)xed set of n
players U = fU1; : : : ; Ung. Any subset of these players may
run the group AKE protocol at any time (possibly concur-
rently) in order to share a session key. During some initial-
ization phase which occurs before the protocol is ever exe-
cuted, each player U runs a key-generation algorithm G(1k)
to generate a long-term public/secret key pair (P KU ; SKU ).
Player U keeps the secret key SKU private and the public
key P KU is assumed to be known by all other participants
and the adversary as well. Following most previous work,
we assume that all long-term keys are honestly-generated;
this is equivalent to assuming that no players are corrupted
before the initialization phase concludes. We stress that this
is for simplicity only (and, in particular, our analysis of the
compiler in Section 4.2 does not rely on this assumption).
Session IDs, partner IDs, and related notions. Each
player U 2 U is allowed to run the protocol multiple times