According to the Firebase documentation at [Custom Claims](https://firebase.google.com/docs/auth/admin/custom-claims#propagate_custom_claims_to_the_client), custom claims can be updated locally by calling `currentUser.getIdToken(true)`. In a Flutter application, I expected the following code to achieve the same result:

```dart
final user = await FirebaseAuth.instance.currentUser();
await user.getIdToken(refresh: true);
```

However, when I attempt to use Firestore after updating the claims via a Cloud Function and calling `getIdToken` as shown above, the updated claims are not reflected. Firestore rules still return "PERMISSION_DENIED." Interestingly, if I close and reopen the app, the claims are correctly updated, and Firestore rules function as expected.

Additionally, there is no API available in the current version of the Flutter SDK to check if the claims have been updated locally (see [issue #20238](https://github.com/flutter/flutter/issues/20238)).

### The Issue
The primary issue is that the method described in the documentation for propagating custom claims does not seem to work in Flutter. Specifically, the problem appears to be Android-specific, as the claims are updated correctly on iOS even without explicitly calling `getIdToken`.

### Environment
- Flutter: v0.8.2
- cloud_firestore: 0.8.1
- firebase_auth: 0.5.20

### Further Investigation
Upon further investigation, it appears that the issue is specific to Android. On iOS, the claims are updated correctly, even without calling `getIdToken`.

### Questions
- Is this a bug in the Firebase documentation, or is it a bug in the Flutter client?
- How can I force the propagation of the claims in a Flutter application, especially on Android?

### Summary
- **Problem**: Custom claims are not being propagated correctly in Flutter on Android.
- **Expected Behavior**: After updating claims via a Cloud Function, calling `getIdToken(refresh: true)` should update the claims and reflect them in Firestore rules.
- **Actual Behavior**: Firestore rules return "PERMISSION_DENIED" until the app is closed and reopened.
- **Platform Specificity**: The issue is specific to Android; iOS works as expected.

If you have any insights or solutions, please share them.