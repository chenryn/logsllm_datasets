latter scheme is comparable to ours, while that of [6] re-
quires O(log n) decryptions due to the cut-and-choose. The
bottleneck of our scheme is its high round and communica-
tion complexity, which is essentially that of IT-IH protocol.
At the same time, the design of our scheme is substantially
simpler compared to the previous ones. Also, there may be
a potential for improving communication cost of protocol, s-
ince up to date, there is no lower bound on round complexity
of IT-IH (in contrast to C-IH). Therefore, any improvements
to this end may apply to our scheme as well.
Our constructions manifest importance of the IH primitive
in the following sense: given IH as a black-box, OT can be
achieved using only two passes, under our assumptions. In
some sense, IH works as a secure compiler denying certain
malicious player’s behavior.
This paper is organized as follows. Sec. 2 contains a de-
scription of basic notation and tools. The TDP-based proto-
col using C-IH is presented in Sec. 3, while the coding based
protocol using IT-IH is presented in Sec. 4.
2. PRELIMINARIES
Basic Notation. Summation is bitwise exclusive-or. By
weight, we refer to the Hamming weight. I is the unit matrix.
\[M0jM1]" denotes a concatenation of matrices M0, M1 of
appropriate size.
An element x uniformly distributed in the domain X is
denoted by \x 2R X". By writing that x is negligible in n,
we mean that x is decreasing faster than any polynomial
fraction in a security parameter n. Whenever mentioning
of the security parameter is omitted, we implicitly refer to
n (whatever it denotes in the given context). When the
statement is claimed to hold on the average, it holds for all
but a negligible fraction of instances. We call an algorithm
e(cid:14)cient, if it is PPT. Computational indistinguishability is
denoted by \ c=".
A view of a player participating in an interactive protocol
represents the player’s inputs, results of all local computa-
tions and local coin tosses, and messages exchanged. The
view of a player A having input x and interacting with a
449
player B having input y is denoted by V iewA(A(x); B(y)).
Speaking of information-theoretic (or unconditional) secu-
rity, we refer to protection against computationally unboun-
ded adversary.
In this case, a security failure probability,
negligibly small in some security parameter, is admitted.
Adversary Model. We consider the static adversary, i.e.
either a sender or a receiver gets corrupt prior to the protocol
execution. A player is called honest, if it strictly follows
the protocol. A passive (or semi-honest) attacker follows
the protocol, but may use his view. Finally, an active (or
malicious) attacker, in addition to the above, may deviate
from the protocol arbitrarily.
2.1 Generic Cryptographic Functions
We use the standard de(cid:12)nitions of generic cryptographic
functions from [9].
De(cid:12)nition 1. A collection of functions ffi
: f0; 1gn !
f0; 1g∗gi∈I is called a collection of trapdoor functions (TDF),
if they are easy to invert if an additional information called
trapdoor is available, but hard to invert otherwise.
A collection of trapdoor permutations ffi
: f0; 1gn !
f0; 1gngi∈I is de(cid:12)ned similarly to the above. We require
that the domain of TDP should be e(cid:14)ciently representable
in binary, such that each encoding is valid. For formal de(cid:12)-
nitions, see the full version of this paper [19].
The following encryption scheme is a TDF candidate.
2.2 McEliece Public Key Cryptosystem
def
The McEliece PKC [18] has the following public key s-
= SGP , where S 2R f0; 1gk×k non-singular;
pace: P K
G 2 f0; 1gk×n a generating matrix of an irreducible Goppa
code correcting t errors, k (cid:21) n (cid:0) t (cid:1) log2 n; P 2 f0; 1gn×n
random permutation matrix. The secret key is the decoding
algorithm of the code G (loosely speaking, the knowledge of
(S; G; P ) is enough). Note that each pk 2 P K represents a
linear (n; k) code.
The problems underlying the following two assumptions
are discussed in details in [24, Sec. 6], so we limit our pre-
sentation to a brief sketch. Let us denote by Goppa-IND
the problem of distinguishing a randomly sampled McEliece
public key from a random linear code (with the same pa-
rameters). The security parameter is n, the length of the
code.
Assumption 1. Goppa-IND is hard on the average.
Goppa-IND is not known to reduce to any hard problem.
Let Goppa Bounded Decoding (GBD) be the problem of
syndrome decoding with the following promise: the number
of errors is guaranteed to be up to t, as in the de(cid:12)nition of
the Goppa code.
Assumption 2. GBD is hard on the average.
In other words, without knowing a structure of the code
(as the previous assumption suggests), it is hard to decode
errors in the corresponding codeword (and hence, to invert
the McEliece encryption). The underlying problem is not
known to be NP-complete, but it is related to the Bounded
Distance Decoding problem conjectured to be NP-hard, and,
in turn, the later is connected to NP-complete Syndrome
Decoding problem.
For our proofs, we need an additional ad-hoc assumption.
We call a subset of (n; k) linear codes (denoted by Ct) trap-
door Goppa-Bound decodable (trapdoor-GBD), if the follow-
ing holds on the average for all the codes in this subset:
1) GBD problem is hard given a particular representation
of the code; 2) GBD problem is easy given the code’s repre-
sentation and some auxiliary input of size polynomial in the
security parameter n.
In the above de(cid:12)nition, we intend to cover all linear codes
with the properties similar to that of the irreducible Goppa
codes.
Assumption 3. jCtj=jCj is negligible in the security param-
eter n.
Let us now provide two evidences in support of this as-
sumption. First, it is easy to check given the bound on the
number of the McEliece public keys [24, Sec. 2.2.2] that the
following claim is true.
Claim 1. jP Kj=jCj is negligible in n.
Moreover, to our best knowledge, any family of good codes
(known so far) represents a negligibly small (in n) fraction
of C. Secondly, any substantially large (i.e. of size at least
superpolynomial in n) family in the subset Ct is a potential
candidate for a coding based PKC. However, the search for
such the candidates has not been very successful so far [7,
Sec. 1.1].
2.3 Interactive hashing
as S and R, resp. while the corrupt players will beeS and eR.
The honest sender and receiver will henceforth be denoted
In the following, we borrow notation from [15, Sec. 3.1].
Let H : f0; 1gn ! f0; 1gn−1 be a family of two-to-one
Boolean hash functions and g : f0; 1gn ! f0; 1gn be an
OWP. Both players receive the security parameter 1n as an
input and S gets as a private input y 2 f0; 1gn. At the end,
S locally outputs y and, in addition, both S and R output
(h; z) 2 H (cid:2) f0; 1gn−1. The following de(cid:12)nition is adapted
from [23, Def. 2.1].
De(cid:12)nition 2.
Information-theoretic interactive hashing
satis(cid:12)es the following three properties.
Correctness: For all n, all y 2 f0; 1gn, and any pair (y; (h; z))
that may be output by (S(1n; y); R(1n)), it is the case that
h(y) = z.
Hiding: There exists a polynomial-time simulator Sim such
that for every y 2 f0; 1gn and h 2 H the distributions
V iewR(S(y); R)(1n) and Sim(1n; h; h(y)) are identical.
game with probability more than O(jTj=2n). On security
(y0; y1) such that y0; y1 2 T and h(y0) = h(y1) = z.
Binding: Let T (cid:26) f0; 1gn. No eS succeeds in the following
parameter 1n,eS interacts with R, and then R outputs a pair
The following de(cid:12)nition (focusing on a particular scenario
of [20]) for the computational (cid:13)avor of IH is adapted from
[15, Sec. 3.1].
De(cid:12)nition 3. Computational interactive hashing satis(cid:12)es
the following three properties. The correctness and hid-
ing properties are identical to that of Def. 2. The binding
450
property is as follows: No PPT eS succeeds in the follow-
rity parameter 1n, eS interacts with R, and then R output-
ing game with more than negligible probability. On secu-
s pairs (x0; y0); (x1; y1) s.t. y0 = g(x0), y1 = g(x1) and
h(y0) = h(y1) = z.
In our work, we abstract the implementation details as
much as possible and use IH as a black-box. Any IH protocol
which satis(cid:12)es one of the above de(cid:12)nitions (cid:12)ts one of our
constructions.
Concrete protocols realizing C-IH and IT-IH can be found,
e.g., in [20, Section 3.1] (appears as a part of the committing
stage) and [23, Protocol 2.1], respectively. These protocol-
s are very similar, the main di(cid:11)erence between them is in
construction of receiver’s queries. The main disadvantage of
these protocols is their round and communication complexi-
ty: for n-bit input, they require n(cid:0) 1 rounds and O(n2) bits
of communication.3
2.4 Oblivious transfer
The next de(cid:12)nition is adapted from [6, Def. 1].
a (su(cid:14)ciently long) random tape RS, there exists a choice
bit c such that for bc 2 f0; 1g the distribution (taken over
De(cid:12)nition 4. A protocol [S; R](b0; b1) is said to securely
implement randomized oblivious transfer, if at the end of its
execution by the sender S and the receiver R, which are rep-
resented by PPT algorithms having as their input a security
parameter N , the following properties hold:
Correctness: when the players honestly follow the protocol,
R outputs (c; bc) for c 2R f0; 1g while S has no output.
S having input bc and b1−c = 0 is computationally indistin-
guishable from the distribution of runs with S having input
bc and b1−c = 1.
Sender-security: For every PPT adversaryeR, every input z,
S’s randomness) of runs of eR(z) using randomness RS with
Receiver-security: For any PPT adversary eS, any security
view thateS(z) obtains when c = 0 is computationally indis-
fV ieweS(eS(z); R)gz
holds for any (even computationally unbounded)eS.
If the receiver-security is information-theoretic, then it
parameter n and any input z of size polynomial in N , the
tinguishable from that of when c = 1, denoted:
c= fV ieweS(eS(z); R)gz:
2.5 Hardcore Bit Encryption
Denote the scalar product by \(cid:1)". Let x; r 2 f0; 1gn. It