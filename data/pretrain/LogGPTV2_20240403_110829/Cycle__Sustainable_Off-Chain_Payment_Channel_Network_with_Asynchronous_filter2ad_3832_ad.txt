(cid:2009)(cid:3003)
(cid:2009)(cid:3003)(cid:3002)
(cid:2009)(cid:3003)(cid:3003)
(cid:2009)(cid:3003)(cid:3004)
(cid:21)(cid:19)(cid:19)
(cid:21)(cid:19)(cid:19)
(cid:21)(cid:19)(cid:19)
(cid:21)(cid:19)(cid:19)
(cid:21)(cid:19)(cid:19)
(cid:21)(cid:19)(cid:19)
(cid:20)(cid:24)(cid:19)
(cid:21)(cid:19)(cid:19)
(cid:21)(cid:19)(cid:19)
(cid:2009)(cid:3004)
(cid:2009)(cid:3004)(cid:3002)
(cid:2009)(cid:3004)(cid:3003)
(cid:2009)(cid:3004)(cid:3004)
(cid:21)(cid:19)(cid:19)
(cid:21)(cid:19)(cid:19)
(cid:21)(cid:19)(cid:19)
(cid:959)
(cid:959)(cid:3002)
(cid:959)(cid:3003)
(cid:959)(cid:3004)
(cid:21)(cid:19)(cid:19)
(cid:20)(cid:24)(cid:19)
(cid:21)(cid:19)(cid:19)
(cid:21)(cid:19)(cid:19)
Fig. 4. An example of a cycle in which the local copy of the expected offset
list can be different versions in different participants.
αi ≥ Δj, it will sign the message, which can guarantee
that αi will not decrease j’s local copy of global offset thus
the balance deviation of j’s connected channels is legal, i.e.,
the constraint in Line 10 still holds. Then, i broadcasts the
message (cid:5)αi, σ(cid:6) to the cycle (Line 13). In addition, there are
two points to mention. First, although decreasing αi costs
more, a good cycle planning based on the demand of PCN
can reduce the number of such events. Second, due to the
lack of version number for expected offset, a malicious node
can launch a replay attack by using an old expected offset
decrease, which needs an additional design. (More detail will
be discussed in § VI.)
3) The third kind of messages is learned from the blockchain
and denotes the beginning of a dispute resolution process for
the state of a channel cij including the balance deviation δij
and the global offset Δ (Line 18). After receiving the message,
i and j can provide their chi and chj to Chan.setstate for
δij and their expected offset lists to Cycle.balancing for Δ.
When the dispute expires, Chan.settle can be invoked to settle
the dispute (Line 19-22). The collective signatures for the
expected offset list or the balance deviation can guarantee only
the valid channel state will be recorded in the blockchain.
IV. ANALYSIS
A. Security Analysis
In the traditional rebalancing protocol, the balance security
can be guaranteed if the global offsets applied to the channels
are the same in the cycle, since with the same global offset,
each participant loses and gains the same funds. However, our
balancing protocol adopts an asynchronous update policy for
the global offset thus the global offset computed by different
participants may be of different versions.
Example 1. In Fig. 4, the balance of channels, the local copy
of the expected offsets αi, and the global offset Δi in each
participant i at a certain moment are given. The balance
number represents the current balance without balancing. For
example, -100 on the right of Alice means Alice’s current
balance without balancing in the channel cAlice,Carol is -100.
Because the global offset computed by Alice ΔA is 200, from
the view of Alice, its current balance with balancing in the
channel cAlice,Carol is −100 + 200 = 100, and Carol’s is
300−200 = 100. However, in Carol’s local copy, the expected
offset of Alice αC
A is an old version (The latest version is 200),
thus ΔC is 150. From the view of Carol, its current balance
with balancing in the channel is 300− 150 = 150, and Alice’s
is −100 + 150 = 50.
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 13:16:49 UTC from IEEE Xplore.  Restrictions apply. 
45
Different versions of global offset in participants sometimes
result in disputes over the newcome payments.
Example 2. Consider a newcome payment that transfers 100
from Alice to Carol. From Alice’s view, the payment is valid
because it has enough balance. However, from Carol’s view,
the payment is invalid because Alice’s balance is not enough.
Then, Alice and Carol have a dispute over the payment.
In our protocol, when the dispute parties are honest, the
dispute is resolved by the off-chain communication, i.e., the
participants exchange their local expected offset for synchro-
nization. When the dispute parties are malicious, the dispute is
resolved by the on-chain contract, i.e., the participants provide
their local expected offset to the cycle contract for arbitration.
However, we need to guarantee that no matter when the dispute
parties are honest or malicious, after the dispute resolution,
the parties have the same global offset that is valid for the
honest ones. For a participant, the property valid means the
balance of its channels is not negative after the global offset
is applied. Depending on this guarantee, the balance security
can be achieved. In the following, we ﬁrst prove how the
guarantee is achieved by our protocol in a cycle only with
network latency and without any malicious nodes.
Lemma 1. When a dispute happens, if the dispute parties are
honest, i.e., they exchange local expected offsets via off-chain
communication, they will have the same valid global offset Δ.
Proof. We deﬁne Δ∗ as the global offset Δ after off-chain
communication, δ∗
ij as the latest balance deviation of channel
cij, and α∗
i as the latest expected offset of participant i. Δi
is the local copy of Δ computed by participant i and αj
i is
participant j’s local copy of expected offset of participant i.
Without loss of generality, consider two honest participant
a and b are the dispute parties (a and b are connected in the
cycle, i.e., |a − b|= 1), the lemma can be proved if −βi ≤
ij − Δ∗ ≤ βj is satisﬁed for participant a and b’s channels
δ∗
in the cycle including ca−1,a, cab, cb,b+1.
According to Line 10 in Algorithm 1, for participant i, only
a balance deviation δij that satisﬁes −βi ≤ δij − Δi ≤ βj can
generate a successful payment, thus −βi ≤ δ∗
ij − Δi ≤ βj
holds for channel cij ∈ {ca−1,a, cab, cb,b+1}.
Since the conditional-revert rule guarantees that only a
higher αi has a chance to be missed by another participant j,
i ≥ αj
i }i∈P
α∗
and Δi = min{αi
j}
j∈P, we can get that
Δi ≤ Δ∗,∀i ∈ P
i holds for any j ∈ P. And since Δ∗ = min{α∗
(3)
According to Δ∗ = min{α∗
which can prove that
ij ≤ βj + Δi ≤ βj + Δ∗.
δ∗
i }i∈P and α∗
i ≤ δ∗
ij, which can prove that
− βi + Δ∗ ≤ δ∗
ij.
can get Δ∗ ≤ α∗
(5)
Therefore, the channel cij ∈ {ca−1,a, cab, cb,b+1} with the
ij and local copy of global offset Δi satisﬁes
− βi + Δ∗ ≤ δ∗
(6)
ij ≤ βj + Δ∗.
latest deviation δ∗
i ≤ min{δ∗
(4)
ij}, we
Next, we analyze a cycle with both network latency and
malicious nodes as follows.
Lemma 2. If there exist malicious participants in the cycle,
depending on the cycle contract, the honest participants can
have the same valid global offset Δ.
Proof. A malicious participant m can broadcast a fake ex-
pected offset to disturb the balancing in two manners and we
describe how our protocol guarantees that Δ stored in the
cycle contract can be accepted by the honest participants in
the cycle as follows.
1) A malicious participant m broadcasts a fake expected
offset α(cid:2)
m that can be higher or lower than its actual expected
m. However, no matter what value α(cid:2)
offset α∗
m is, for each
honest participant, (4) and (5) are satisﬁed, thus (6) can be
proved in the same way as Lemma 1,
i.e., after calling
Cycle.balancing, Δ in the cycle contract can be accepted
by the honest participants.
m and α(cid:2)(cid:2)
2) A malicious participant m broadcasts different αm to
different participants. We assume that m broadcasts two ver-
sions of αm, i.e., α(cid:2)
m. Only when it leads to the
cycle having several version of Δ∗ at the same time, can the
malicious participant inﬂuence the running of the cycle. We
consider the case in which there are two versions of Δ∗, i.e.,
1 and Δ∗
Δ∗
m. Without loss of generality,
we assume Δ∗
m  |αi − Δ∗|,∀i ∈ P. Therefore, the problem
has a unique solution Δ∗ = mini∈P{αi}.
V. PRIVACY-PRESERVING SCHEME
In this section, to address the privacy concern, we combine
the protocol with a differential privacy mechanism to achieve
both privacy and security during balancing.
A. Protocol Roadmap
For the above protocol, the information about payment value
of each channel in the cycle can be revealed by the expected
offset, because the update of the expected offset depends on the
balance change of channels and is broadcast to all participants
in the cycle (see (2) and the ﬁrst kind of messages). The
malicious participants may infer the payment value from the
difference between two successive expected offsets, which