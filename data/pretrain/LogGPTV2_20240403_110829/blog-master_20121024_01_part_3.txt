query mode: prepared  
number of clients: 8  
number of threads: 8  
duration: 60 s  
number of transactions actually processed: 5088896  
tps = 84813.774212 (including connections establishing)  
tps = 84822.447895 (excluding connections establishing)  
```  
测试过程中的top截取 :   
```  
Tasks: 247 total,   9 running, 238 sleeping,   0 stopped,   0 zombie  
Cpu(s): 63.0%us, 29.1%sy,  0.0%ni,  7.0%id,  0.2%wa,  0.1%hi,  0.5%si,  0.0%st  
Mem:  98992440k total, 89760120k used,  9232320k free,  1246116k buffers  
Swap:  8385920k total,        0k used,  8385920k free, 85081028k cached  
  PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND                                                                  
 6865 pg9.2.0   15   0  319m 2100 1524 S 126.5  0.0   0:35.91 pgbench -M prepared -n -j 8 -c 8 -T 60 -f ./pgbench.sql -U digoal digo  
 6877 pg9.2.0   18   0 1180m 114m 113m R 77.1  0.1   0:20.89 postgres: digoal digoal [local] INSERT                                   
 6880 pg9.2.0   18   0 1180m 115m 113m R 77.1  0.1   0:20.80 postgres: digoal digoal [local] idle                                     
 6876 pg9.2.0   18   0 1180m 114m 113m R 76.1  0.1   0:21.10 postgres: digoal digoal [local] idle                                     
 6878 pg9.2.0   18   0 1180m 116m 115m R 75.1  0.1   0:21.11 postgres: digoal digoal [local] INSERT                                   
 6879 pg9.2.0   18   0 1180m 115m 114m R 75.1  0.1   0:20.99 postgres: digoal digoal [local] idle                                     
 6874 pg9.2.0   17   0 1180m 117m 115m R 74.1  0.1   0:21.30 postgres: digoal digoal [local] idle                                     
 6875 pg9.2.0   18   0 1180m 115m 114m R 74.1  0.1   0:21.36 postgres: digoal digoal [local] INSERT                                   
 6881 pg9.2.0   18   0 1180m 115m 114m R 69.2  0.1   0:20.85 postgres: digoal digoal [local] INSERT  
```  
测试过程中的iostat截取 :   
```  
avg-cpu:  %user   %nice %system %iowait  %steal   %idle  
          61.92    0.00   29.96    0.25    0.00    7.87  
Device:         rrqm/s   wrqm/s   r/s   w/s   rsec/s   wsec/s avgrq-sz avgqu-sz   await  svctm  %util  
sda               0.00  2078.00  0.00 40.00     0.00 16944.00   423.60     0.15    3.65   0.53   2.10  
sda1              0.00    11.00  0.00  2.00     0.00   104.00    52.00     0.00    0.00   0.00   0.00  
sda2              0.00     0.00  0.00  0.00     0.00     0.00     0.00     0.00    0.00   0.00   0.00  
sda3              0.00  2067.00  0.00 38.00     0.00 16840.00   443.16     0.15    3.84   0.55   2.10  
sdb               0.00  7377.00  0.00 2112.00     0.00 75912.00    35.94     0.40    0.19   0.12  25.20  
dm-0              0.00     0.00  0.00 9489.00     0.00 75912.00     8.00     5.81    0.61   0.03  25.90  
dm-1              0.00     0.00  0.00 2105.00     0.00 16840.00     8.00     7.83    3.72   0.01   2.10  
dm-2              0.00     0.00  0.00 9489.00     0.00 75912.00     8.00     5.83    0.61   0.03  26.10  
```  
其他几种测试数据就不一一列出来了, 简单的进行总结.  
1\. 针对 uuid 和 text 测试4种存储配置 (plain, main, external, extended) .   
默认是extended存储, 所以以上测试都是在extended下进行的.  
数据量5000W后进行的测试 : 所以比较数据请参看后面的数据.  
```  
digoal=> \d+ test_text_pk  
                    Table "digoal.test_text_pk"  
 Column | Type | Modifiers | Storage  | Stats target | Description   
--------+------+-----------+----------+--------------+-------------  
 id     | text | not null  | extended |              |   
Indexes:  
    "test_text_pk_pkey" PRIMARY KEY, btree (id), tablespace "tbs_digoal_idx"  
Has OIDs: no  
digoal=> alter table test_text_pk alter column id set storage plain;  
ALTER TABLE  
pg9.2.0@db-172-16-3-150-> pgbench -M prepared -n -j 8 -c 8 -T 60 -f ./pgbench.sql -U digoal digoal   
transaction type: Custom query  
scaling factor: 1  
query mode: prepared  
number of clients: 8  
number of threads: 8  
duration: 60 s  
number of transactions actually processed: 216127  
tps = 3576.422811 (including connections establishing)  
tps = 3576.800549 (excluding connections establishing)  
Tasks: 249 total,   1 running, 248 sleeping,   0 stopped,   0 zombie  
Cpu(s):  3.6%us,  3.6%sy,  0.0%ni, 79.1%id, 13.5%wa,  0.0%hi,  0.2%si,  0.0%st  
Mem:  98992440k total, 92489108k used,  6503332k free,   760752k buffers  
Swap:  8385920k total,       60k used,  8385860k free, 88174496k cached  
  PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND                                                                  
10661 pg9.2.0   16   0 1184m 330m 328m S  6.9  0.3   0:04.10 postgres: digoal digoal [local] INSERT                                   
10654 pg9.2.0   16   0 1184m 326m 324m S  5.9  0.3   0:04.03 postgres: digoal digoal [local] INSERT                                   
10655 pg9.2.0   15   0 1184m 334m 332m S  5.9  0.3   0:04.14 postgres: digoal digoal [local] INSERT                                   
10658 pg9.2.0   16   0 1184m 322m 320m S  5.9  0.3   0:03.94 postgres: digoal digoal [local] INSERT                                   
10659 pg9.2.0   16   0 1184m 333m 331m S  5.9  0.3   0:04.16 postgres: digoal digoal [local] INSERT                                   
10656 pg9.2.0   16   0 1184m 322m 320m S  4.9  0.3   0:03.96 postgres: digoal digoal [local] INSERT                                   
10657 pg9.2.0   16   0 1184m 333m 331m S  4.9  0.3   0:04.15 postgres: digoal digoal [local] INSERT                                   
10660 pg9.2.0   16   0 1184m 331m 329m S  4.9  0.3   0:04.12 postgres: digoal digoal [local] INSERT                                   
10645 pg9.2.0   15   0  255m 2092 1524 S  3.9  0.0   0:03.35 pgbench -M prepared -n -j 8 -c 8 -T 60 -f ./pgbench.sql -U digoal digoa  
avg-cpu:  %user   %nice %system %iowait  %steal   %idle  
           0.00    0.00    1.50   14.96    0.00   83.54  
Device:         rrqm/s   wrqm/s   r/s   w/s   rsec/s   wsec/s avgrq-sz avgqu-sz   await  svctm  %util  
sda               0.00   862.00  0.00 654.00     0.00 11880.00    18.17   145.69  218.26   1.53 100.10  
sda1              0.00    13.00  0.00  2.00     0.00   120.00    60.00     0.31  157.00 157.00  31.40  
sda2              0.00     0.00  0.00  0.00     0.00     0.00     0.00     0.00    0.00   0.00   0.00  
sda3              0.00   849.00  0.00 652.00     0.00 11760.00    18.04   145.38  218.45   1.54 100.10  
sdb               0.00  5311.00  0.00 84.00     0.00 39896.00   474.95    23.67  294.74  11.64  97.80  
dm-0              0.00     0.00  0.00 5403.00     0.00 43224.00     8.00  1436.09  279.59   0.18  97.80  
dm-1              0.00     0.00  0.00 1522.00     0.00 12176.00     8.00   330.52  212.65   0.66 100.10  
dm-2              0.00     0.00  0.00 5403.00     0.00 43224.00     8.00  1436.09  279.59   0.18  97.80  
```  
略. 这几种模式影响不明显. 主要压缩和数据存储开销的均衡, 也就是硬件的CPU能力和IO能力的抉择.  
plain和external都不压缩, 一个是存在表的数据文件中一个是存在toast中.  
main和extended都压缩, 一个是存在表的数据文件中一个是存在toast中.  
2\. 测试数据量不同的情况下对性能的影响.  
数据量越大, 连续插入离散值带来的影响越大, tps越低.  而连续插入顺序值则几乎不受影响. 下面是把基础数据加到5000W后进行的测试. 可以看出连续插入离散值到主键的测试有明显的性能变化.  
连续插入顺序值的测试结果如下 :   
```  
digoal=> truncate table test_int8_pk ;  
TRUNCATE TABLE  
digoal=> \d test_int8_pk  
 Table "digoal.test_int8_pk"  
 Column |  Type  | Modifiers   
--------+--------+-----------  
 id     | bigint | not null  
Indexes:  
    "test_int8_pk_pkey" PRIMARY KEY, btree (id), tablespace "tbs_digoal_idx"  
digoal=> alter table test_int8_pk drop constraint test_int8_pk_pkey;  
ALTER TABLE  
```  
插入5000W数据, 为了加快速度, 先删除PK, 数据插入完后再加入进来.  
```  
digoal=> insert into test_int8_pk select generate_series (1,50000000);  
\c digoal digoal  
set work_mem='4096MB';  
set maintenance_work_mem='4096MB';  
alter table test_int8_pk add constraint test_int8_pk_pkey primary key(id) using index tablespace tbs_digoal_idx;  
alter sequence test_seq start with 50000001;  
\c digoal postgres  
checkpoint;  
```  
测试数据 :   
```  
pg9.2.0@db-172-16-3-150-> pgbench -M prepared -n -j 8 -c 8 -T 60 -f ./pgbench.sql -U digoal digoal   
transaction type: Custom query  
scaling factor: 1  
query mode: prepared  
number of clients: 8  
number of threads: 8  
duration: 60 s  
number of transactions actually processed: 4557154  
tps = 75951.686893 (including connections establishing)  
tps = 75962.447482 (excluding connections establishing)  
```  
TOP数据 :   
```  
Cpu(s): 65.4%us, 26.3%sy,  0.0%ni,  6.9%id,  0.4%wa,  0.1%hi,  0.9%si,  0.0%st  
Mem:  98992440k total, 93250652k used,  5741788k free,  1246256k buffers  
Swap:  8385920k total,        0k used,  8385920k free, 88484952k cached  
  PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND                                                                  
 8263 pg9.2.0   15   0  319m 2108 1520 S 115.6  0.0   0:25.50 pgbench -M prepared -n -j 8 -c 8 -T 60 -f ./pgbench.sql -U digoal digo  
 8274 pg9.2.0   18   0 1180m 137m 135m R 78.1  0.1   0:16.33 postgres: digoal digoal [local] INSERT                                   
 8276 pg9.2.0   18   0 1180m 134m 132m R 78.1  0.1   0:16.12 postgres: digoal digoal [local] idle                                     
 8273 pg9.2.0   18   0 1180m 134m 133m R 77.1  0.1   0:16.00 postgres: digoal digoal [local] idle                                     
 8277 pg9.2.0   18   0 1180m 136m 134m R 75.1  0.1   0:16.39 postgres: digoal digoal [local] INSERT                                   
 8272 pg9.2.0   18   0 1180m 143m 141m R 74.1  0.1   0:16.56 postgres: digoal digoal [local] INSERT                                   
 8275 pg9.2.0   18   0 1180m 137m 135m R 74.1  0.1   0:16.55 postgres: digoal digoal [local] INSERT                                   
 8278 pg9.2.0   18   0 1180m 133m 132m R 74.1  0.1   0:15.99 postgres: digoal digoal [local] idle                                     
 8279 pg9.2.0   18   0 1180m 135m 133m R 72.1  0.1   0:16.14 postgres: digoal digoal [local] INSERT  
```  
IOSTAT 数据 :   
```  
avg-cpu:  %user   %nice %system %iowait  %steal   %idle  
          65.04    0.00   27.59    0.50    0.00    6.87  
Device:         rrqm/s   wrqm/s   r/s   w/s   rsec/s   wsec/s avgrq-sz avgqu-sz   await  svctm  %util  
sda               0.00  1899.00  0.00 40.00     0.00 15512.00   387.80     0.29    7.17   0.47   1.90  
sda1              0.00    11.00  0.00  2.00     0.00   104.00    52.00     0.00    0.00   0.00   0.00  
sda2              0.00     0.00  0.00  0.00     0.00     0.00     0.00     0.00    0.00   0.00   0.00  
sda3              0.00  1888.00  0.00 38.00     0.00 15408.00   405.47     0.29    7.55   0.50   1.90  
sdb               0.00 10063.00  0.00 2843.00     0.00 103248.00    36.32     0.58    0.21   0.12  34.30  
dm-0              0.00     0.00  0.00 12902.00     0.00 103216.00     8.00     9.76    0.76   0.03  34.40  
dm-1              0.00     0.00  0.00 1926.00     0.00 15408.00     8.00    14.49    7.52   0.01   1.90  
dm-2              0.00     0.00  0.00 12902.00     0.00 103216.00     8.00     9.78    0.76   0.03  34.50  