Certainly! Here's a more polished and professional version of your text:

---

I need to print several files using a PDF printer and then perform additional tasks, but only after the printing process is complete. Currently, I use the following command in my Python script to initiate the printing:

```bash
lpr path/to/file.doc -P PDF
```

However, this command returns immediately with an exit code of 0, providing no way to determine when the printing process is finished or whether it was successful.

One option is to send an email notification once the printing is complete, but this approach seems overly complex and not very efficient.

### Current Approach

To address this, I have implemented a workaround where I continuously check the printer queue every 0.5 seconds using the `lpq` command to determine if the printer is still active. This method, however, does not seem optimal, as I would prefer a more reliable way to be notified when the printing process is finished, along with its success status.

### Question

Do you have any suggestions for a more efficient and reliable method to achieve this?

### Additional Information

I am aware that the `lpstat` command can be used to check the state of the printer. Additionally, I understand that I can wait for a specific process to finish by getting its PID and using the `wait` command. However, I am looking for a more streamlined solution that can provide a clear indication of when the printing process is complete and whether it was successful.

---

Feel free to let me know if you need further details or have any other questions!