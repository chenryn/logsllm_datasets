Key Size
Schemes Public/Private Ciphertext/
ReKey Size
CP-ABPRE [20] O(U )/O(U ) O(U )/O(U )
CP-ABPRE [22] O(U 2)/O(U ) O(U )/O(U )
CP-ABPRE [24] O(U )/O(U ) O(U )/O(U ) O(1) · ce + O(U ) · cp
O(1)/O(A) O(f )/O(A) O(A) · ce + O(A) · cp
Our CP-ABPRE
O(U ) · cp
O(U ) · cp
Re-Encryption
Cost
Selective Model
/CCA Security
Attributes Expression
! /#
! /#
! /#
! /!
AND gates on + and −
AND gates on mv and −
AND gates on + and −
Any monotonic access formula
2 Deﬁnitions and Security Models
In this section, we concentrate on formulating the deﬁnition of CP-ABPRE systems. Before proceeding,
we ﬁrst review some notations used in our deﬁnition.
Deﬁnition 1. (Access Structure [4]) Let P = {P1, P2, ..., Pn} be a set of parties. A collection
AS ⊆ 2P is monotone if ∀B, C: if B ∈ AS and B ⊆ C then C ∈ AS. An access structure (resp.,
monotonic access structure) is a collection (resp., monotone collection) AS of non-empty subsets of
P, i.e., AS ⊆ 2P \ {∅}. The sets in AS are called the authorized sets, and the sets not in AS are called
the unauthorized sets.
In ABE the role of the parties is taken by the attributes. The access structure AS contains all authorized
sets of attributes. In this paper we work on monotone access structures. As shown in [4], any monotone
access structure can be represented by a linear secret sharing scheme.
Deﬁnition 2. (Linear Secret Sharing Schemes (LSSS) [26] ) A secret-sharing scheme Π over
a set of parties P is called linear (over Zp) if
– The shares for each party form a vector over Zp.
– There exists a matrix an M with l rows and n columns called the share-generating matrix for Π.
For all i = 1, ..., l, the ith row of M is labeled by a party ρ(i), where ρ is a function from {1, ..., l} to
P. When we consider the column vector v = (s, r2, ..., rn), where s ∈ Zp is the secret to be shared,
and r2, ..., rn ∈ Zp are randomly chosen, then M · v is the vector of l shares of the secret s according
to Π. The share (M · v)i belongs to party ρ(i). For any unauthorized set, no such constants exist.
We use LSSS matrix (M, ρ) to represent an access policy in this paper.
be deﬁned as I = {i : ρ(i) ∈ S}. There will exist constants {wi ∈ Zp}i∈I such that (cid:80)
Note that every LSSS according to the above deﬁnition achieves the linear reconstruction prop-
erty [4]. Suppose that Π is an LSSS for the access structure AS. Let S ∈ AS (that is, S satisﬁes the
access structure; we also denote this case as S |= (M, ρ)) be any authorized set, and let I ⊂ {1, 2, ..., l}
i∈I wi · λi = s
if {λi} are valid shares of any secret s according to Π. Note that as shown in [4] {wi} can be found
(with knowledge of M and I) in time polynomial in the size of the share-generating matrix M .
2.1 Deﬁnition of CP-ABPRE
7
output the public parameters param and a master secret key msk.
Deﬁnition 3. A Single-Hop Unidirectional Ciphertext-Policy Attribute-Based Proxy Re-Encryption
(CP-ABPRE) scheme consists of the following seven algorithms:
1. (param, msk) ← Setup(1k,U): on input a security parameter k ∈ N and an attribute universe U,
2. skS ← KeyGen(param, msk, S): on input param, msk and an attribute set S that describes the
key, output a private key skS for S. Note that like traditional CP-ABE each private key skS is
associated with an attribute set S.
3. rkS→(M(cid:48),ρ(cid:48)) ← ReKeyGen(param, skS, S, (M(cid:48), ρ(cid:48))): on input param, a private key skS and the
corresponding attribute set S, and an access structure (M(cid:48), ρ(cid:48)) for attributes over U, output a re-
encryption key rkS→(M(cid:48),ρ(cid:48)) that can be used to transform a ciphertext under (M, ρ) to another
ciphertext under (M(cid:48), ρ(cid:48)), where S |= (M, ρ). Note that (M, ρ) and (M(cid:48), ρ(cid:48)) are disjoint8.
4. C(M,ρ) ← Enc(param, (M, ρ), m): on input param, an access structure (M, ρ) for attributes over U,
and a plaintext m ∈ {0, 1}k, output an original ciphertext C(M,ρ) which can be further re-encrypted.
We assume that the access structure is implicitly included in the ciphertext.
(M(cid:48),ρ(cid:48)) ← ReEnc(param, rkS→(M(cid:48),ρ(cid:48)), C(M,ρ)): on input param, a re-encryption key rkS→(M(cid:48),ρ(cid:48)),
(M(cid:48),ρ(cid:48)) if S |= (M, ρ) or a
and an original ciphertext C(M,ρ), output a re-encrypted ciphertext CR
symbol ⊥ indicating either C(M,ρ) is invalid or S (cid:50) (M, ρ). Note that CR
(M(cid:48),ρ(cid:48)) cannot be further
re-encrypted.
6. m ← Dec(param, S, skS, C(M,ρ)): on input param, an attribute set S and its corresponding private
key skS, and an original ciphertext C(M,ρ), output a plaintext m if S |= (M, ρ) or a symbol ⊥
indicating either C(M,ρ) is invalid or S (cid:50) (M, ρ).
(M(cid:48),ρ(cid:48))): on input param, an attribute set S(cid:48) and its corresponding
(M(cid:48),ρ(cid:48)), output a plaintext m if S(cid:48) |= (M(cid:48), ρ(cid:48)) or a
7. m ← DecR(param, S(cid:48), skS(cid:48), CR
5. CR
private key skS(cid:48), and a re-encrypted ciphertext CR
symbol ⊥ indicating either CR
(M(cid:48),ρ(cid:48)) is invalid or S(cid:48) (cid:50) (M(cid:48), ρ(cid:48)).
For simplicity, we omit param in the expression of the algorithm inputs in the rest of the paper.
Correctness: For any k ∈ N, any attribute set S (S ⊆ U) with its cardinality polynomial to k,
any access structure (M, ρ) for attributes over U and any message m ∈ {0, 1}k, if (param, msk) ←
Setup(1k,U), skS ← KeyGen(msk, S), for all S used in the system, we have
Dec(S, skS, Enc((M, ρ), m)) = m;
DecR(S(cid:48), skS(cid:48), ReEnc(ReKeyGen(skS, S, (M(cid:48), ρ(cid:48))), Enc((M, ρ), m))) = m,
where S |= (M, ρ) and S(cid:48) |= (M(cid:48), ρ(cid:48)).
2.2 Security Models
In the following we deﬁne the security notions for CP-ABPRE systems. Prior models for CP-ABPRE
only consider the IND-sAS-CPA security, below we deﬁne a complete IND-sAS-CCA security game.
Deﬁnition 4. A single-hop unidirectional CP-ABPRE scheme is IND-sAS-CCA secure at original
ciphertext if no probabilistic polynomial time (PPT) adversary A can win the game below with non-
negligible advantage. In the game, C is the game challenger, k and U are the security parameter and
attribute universe.
1. Initialization. A outputs a challenge access structure (M∗, ρ∗) to C.
8 Suppose (M, ρ) and (M(cid:48), ρ(cid:48)) are two access structures. For any attribute x satisﬁes (M, ρ), x does not satisfy (M(cid:48), ρ(cid:48)).
For such a case, from now on, we say that (M, ρ) and (M(cid:48), ρ(cid:48)) are disjoint.
8
2. Setup. C runs Setup(1k,U) and sends param to A.
3. Query Phase I. A is given access to the following oracles.
(M(cid:48),ρ(cid:48)), C returns m ← DecR(S(cid:48), skS(cid:48), CR
a re-encrypted ciphertext CR
KeyGen(msk, S(cid:48)) and S(cid:48) |= (M(cid:48), ρ(cid:48)).
(e) Re-encrypted ciphertext decryption oracle Od1(S(cid:48), CR
(a) Private key extraction oracle Osk(S): on input an attribute set S, C runs skS ← KeyGen(msk, S)
and returns skS to A.
(b) Re-encryption key extraction oracle Ork(S, (M(cid:48), ρ(cid:48))): on input an attribute set S, and an
access structure (M(cid:48), ρ(cid:48)), C returns rkS→(M(cid:48),ρ(cid:48)) ← ReKeyGen(skS, S, (M(cid:48), ρ(cid:48))) to A, where
skS ← KeyGen(msk, S).
(c) Re-encryption oracle Ore(S, (M(cid:48), ρ(cid:48)), C(M,ρ)): on input an attribute set S, an access structure
(M(cid:48), ρ(cid:48)), and an original ciphertext C(M,ρ), C returns CR
(M(cid:48),ρ(cid:48)) ← ReEnc(rkS→(M(cid:48),ρ(cid:48)), C(M,ρ))
to A, where rkS→(M(cid:48),ρ(cid:48)) ← ReKeyGen(skS, S, (M(cid:48), ρ(cid:48))), skS ← KeyGen(msk, S) and S |=
(M, ρ).
(d) Original ciphertext decryption oracle Od2(S, C(M,ρ)): on input an attribute set S and an original
ciphertext C(M,ρ), C returns m ← Dec(S, skS, C(M,ρ)) to A, where skS ← KeyGen(msk, S)
and S |= (M, ρ).
(M(cid:48),ρ(cid:48))): on input an attribute set S(cid:48) and
(M(cid:48),ρ(cid:48))), where skS(cid:48) ←
Note that if the ciphertexts queried to oracles Ore, Od2 and Od1 are invalid, C simply outputs ⊥.
In this phase the following queries are forbidden to issue:
– Osk(S) for any S |= (M∗, ρ∗); and
– Ork(S, (M(cid:48), ρ(cid:48))) for any S |= (M∗, ρ∗), and Osk(S(cid:48)) for any S(cid:48) |= (M(cid:48), ρ(cid:48)).
4. Challenge. A outputs two equal length messages m0 and m1 to C. C returns C∗
ρ∗), mb) to A, where b ∈R {0, 1}.
5. Query Phase II. A continues making queries as in Query Phase I except the following:
(a) Osk(S) for any S |= (M∗, ρ∗);
(b) Ork(S, (M(cid:48), ρ(cid:48))) for any S |= (M∗, ρ∗), and Osk(S(cid:48)) for any S(cid:48) |= (M(cid:48), ρ(cid:48));
(c) Ore(S, (M(cid:48), ρ(cid:48)), C∗
(d) Od2(S, C∗
(e) Od1(S(cid:48), CR
(M∗,ρ∗)) for any S |= (M∗, ρ∗), and Osk(S(cid:48)) for any S(cid:48) |= (M(cid:48), ρ(cid:48));
(M(cid:48),ρ(cid:48)) is a derivative of C∗
(M∗,ρ∗)) for any S |= (M∗, ρ∗); and
(M(cid:48),ρ(cid:48))) for any CR
of [8], the derivative of C∗
i. C∗
ii. If A has issued a re-encryption key query on (S, (M(cid:48), ρ(cid:48))) to obtain the re-encryption
(M(cid:48),ρ(cid:48)) is
(M(cid:48),ρ(cid:48)), S(cid:48) |= (M(cid:48), ρ(cid:48)), where CR
(M∗,ρ∗) is deﬁned as follows.
(M(cid:48),ρ(cid:48)) ← ReEnc(rkS→(M(cid:48),ρ(cid:48)), C∗
(M∗,ρ∗) is a derivative of itself.
(M∗,ρ∗) = Enc((M∗,
(M∗,ρ∗)), then CR
(M∗,ρ∗). As
key rkS→(M(cid:48),ρ(cid:48)), and achieved CR
a derivative of C∗
(M∗,ρ∗), where S |= (M∗, ρ∗).
ciphertext CR
(M(cid:48),ρ(cid:48)), then CR
iii. If A has issued a re-encryption query on (S, (M(cid:48), ρ(cid:48)), C∗
(M(cid:48),ρ(cid:48)) is a derivative of C∗
6. Guess. A outputs a guess bit b(cid:48) ∈ {0, 1}. If b(cid:48) = b, A wins.
The advantage of A is deﬁned as 1 = AdvIN D−sAS−CCA−Or
Remarks. The model above can be converted to the IND-aAS-CCA-Or game by allowing A to output
the challenge access structure (M∗, ρ∗) in the challenge phase. Meanwhile, there is no restriction for
A in Query Phase I. Besides, C will output the challenge ciphertext if the forbidden queries deﬁned in
Query Phase I of the above game are never made.
(M∗,ρ∗)) and obtained the re-encrypted
(M∗,ρ∗), where S |= (M∗, ρ∗).
2|.
(1k,U) = |P r[b(cid:48) = b] − 1
CP−ABP RE,A
The deﬁnition of IND-sAS-CCA-Re security can be deﬁned in an orthogonal manner as follows.
Deﬁnition 5. A single-hop unidirectional CP-ABPRE scheme is IND-sAS-CCA secure at re-encrypted
ciphertext if the advantage 2 = AdvIN D−sAS−CCA−Re
(1k,U) is negligible for any PPT adversary A
CP−ABP RE,A
9
|,
(M∗,ρ∗) ← ReEnc(rkS→(M∗,ρ∗), C(M,ρ)); b(cid:48) ← AO1(CR∗
in the following experiment. Set O1 = {Osk, Ork, Ore, Od2, Od1}.
2 = |P r[b(cid:48) = b : ((M∗, ρ∗), State1) ← A(1k); (param, msk) ← Setup(1k,U); (m0, m1, (M, ρ), State2) ← AO1
(M∗,ρ∗), State2)] − 1
(param, State1); b ∈R {0, 1}; CR∗
2
where State1 and State2 are the state information, (M, ρ) and (M∗, ρ∗) are disjoint, (M∗, ρ∗) is
the challenge access structure, S |= (M, ρ), rkS→(M∗,ρ∗) ← ReKeyGen(skS, S, (M∗, ρ∗)), C(M,ρ) ←
Enc((M , ρ), mb), Osk,Ork,Ore,Od2,Od1 are the oracles deﬁned in Deﬁnition 4. However, these oracles
are restricted by the following constraints. For Osk, the query on S is forbidden to issue for any
S |= (M∗, ρ∗). For Ork, it works as in the IND-sAS-CCA-Or game. Ore will output ⊥ if A queries
invalid original ciphertexts or re-encrypted ciphertexts. There is no restriction for Od2 except that
the oracle will reject invalid original ciphertexts. If A queries to Od1 on (S, CR∗
(M∗,ρ∗)) or invalid re-
encrypted ciphertexts, the oracle outputs ⊥, where S |= (M∗, ρ∗).
Remarks. In Deﬁnition 5 Ork must follow the constraints deﬁned in Deﬁnition 4. This is necessary
because in selective access structure model the challenger cannot construct a valid private key for
any S |= (M∗, ρ∗). Thus the re-encryption key rkS→(M(cid:48),ρ(cid:48)) has to be randomly generated, where A is
allowed to query Osk(S(cid:48)) for any S(cid:48) |= (M(cid:48), ρ(cid:48)). If such a re-encryption key can be issued by A, then
A can distinguish the simulation from the real attack9. In this case, to generate the corresponding
re-encryption, Ore must be provided for A. Note that Deﬁnition 5 can be regarded as a weaker notion
when compared with the (adaptive) re-encrypted ciphertext security model deﬁned in traditional PRE.
The model above can be also converted to the IND-aAS-CCA-Re game as follows. A is allowed
to output (M∗, ρ∗) in the challenge phase. There is no restriction for A to query Ork. Besides, Ore is
unnecessary as A is allowed to query any re-encryption key.
We now proceed to the selective collusion resistance for CP-ABPRE. Like collusion resistance
deﬁned in traditional PRE, this security notion also guarantees that a dishonest proxy cannot com-
promise the entire private key of the delegator even it colludes with the corresponding delegatee.
However, an adversary is required to output an attribute set that it wishes to attack before the setup
phase. The selective collusion resistance model can be deﬁned via the identical manner introduced
in [20,22], we hence omit the details. Instead, we prefer to show that the IND-sAS-CCA-Or security
already implies selective collusion resistance.
Theorem 1. Suppose a single-hop unidirectional CP-ABPRE scheme is IND-sAS-CCA-Or secure,
then it is selective collusion resistant as well.
Please refer to Appendix A for the proof of Theorem 1.
3 Preliminaries
We ﬁrst give a brief review of bilinear maps and the decisional q-parallel BDHE assumption, and next
introduce the target collision resistance hash function.
Bilinear Maps. Let BSetup denote an algorithm that, on input the security parameter 1k, outputs
the parameters for a bilinear map as (p, g, G, GT , e), where G and GT are two multiplicative cyclic
groups with prime order p ∈ Θ(2k) and g is a generator of G. The eﬃcient mapping e : G×G → GT has
three properties: (1) Bilinearity: for all g ∈ G and a, b ∈R Z∗
p, e(ga, gb) = e(g, g)ab; (2) Non-degeneracy:
e(g, g) (cid:54)= 1GT , where 1GT is the unit of GT ; (3) Computability: e can be eﬃciently computed.
9 This is so because A can verify whether such a re-encryption key is valid or not as follows: A ﬁrst generates a ciphertext
of a chosen message m under (M∗, ρ∗), re-encrypts the ciphertext using the re-encryption key, and then decrypts the
re-encrypted ciphertext using skS(cid:48) . If the decryption outputs m, then the re-encryption key is valid.
10
Deﬁnition 6. Decisional q-parallel BDHE Assumption [26]. Given a tuple y=
, gaq+2
, ..., ga2q
g, gs, ga, ..., gaq
∀1≤j≤q gs·bj , ga/bj , ..., gaq/bj , gaq+2/bj , ..., ga2q/bj
∀1≤j,k≤q,k(cid:54)=j ga·s·bk/bj , ..., gaq·s·bk/bj ,
the decisional q-parallel BDHE problem is to decide whether T = e(g, g)aq+1·s, where a, s, b1, ..., bq ∈R
Zp, T ∈R GT and g is a generator of G. Deﬁne AdvD−q−parallelBDHE
= |P r[A(y, e(g, g)aq+1·s) =
0] − P r[A(y, T ) = 0]| as the advantage of adversary A in winning the decisional q-parallel BDHE
problem. We say that the decisional q-parallel BDHE assumption holds in (G, GT ) if no PPT algorithm
has non-negligible advantage.
A
Target Collision Resistant Hash Function. Target Collision Resistant (TCR) hash function was