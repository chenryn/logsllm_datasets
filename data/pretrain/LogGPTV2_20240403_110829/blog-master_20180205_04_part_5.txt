```
INSERT INTO agg1 (lt, tu, gv, mid, _cnt, _sum, avg, min, max, p90, p95, p99)  
SELECT  
  date_trunc('minute', current_timestamp) - INTERVAL '1 minutes' as lt,
  1,  
  gv,  
  1,  
  _count,  
  array_to_mean(sorted1) * _count AS _sum,   
  array_to_mean(sorted1) as avg,  
  (sorted_array_to_percentile(sorted1, 0)) AS min,  
  (sorted_array_to_percentile(sorted1, 1)) AS max,  
  (sorted_array_to_percentile(sorted1, 0.9)) AS P90,  
  (sorted_array_to_percentile(sorted1, 0.95)) AS P95,  
  (sorted_array_to_percentile(sorted1, 0.99)) AS P99  
FROM   
(  
select   
  gv,  
  count(rc) as _count,  
  sort_asc( 
    ( '{'||string_agg(rtrim(ltrim(mg.v1::text, '{'), '}'), ',')||'}' )::int[]  
  ) as sorted1  
FROM   
  mx1 mg   
where   
  lt >= date_trunc('minute', current_timestamp) - INTERVAL '1 minutes'  
and   
  lt = date_trunc('minute', current_timestamp) - INTERVAL '%s'   -- $3  
  and   
    lt < date_trunc('minute', current_timestamp)  
  limit %s     -- $2 , 限流作用，协助压测量级调整
) mg    
group by gv  
) t  
$_$,  
$1, $3, $1, $3, $2  
);  
end;  
$$ language plpgsql strict;  
```  
```  
postgres=# select stat(2, 24000, '10 min');      -- 24000*2500=6000万 ，10分钟6000万个点的统计  
 stat   
------  
(1 row)  
Time: 235.821 ms  
```  
同样道理，也可以改成string_agg统计。    
```
create or replace function stat(  
  int,    -- suffix  
  int,    -- limit  
  text    -- interval  
) returns void as $$  
declare  
begin  
  set enable_seqscan=off;  
  set max_parallel_workers_per_gather =0;  
  execute format(  
$_$  
INSERT INTO agg%s (lt, tu, gv, mid, _cnt, _sum, avg, min, max, p90, p95, p99)  -- $1  
SELECT  
  date_trunc('minute', current_timestamp) - INTERVAL '%s' as lt,  -- $3
  1,  
  gv,  
  1,  
  _count,  
  array_to_mean(sorted1) * _count AS _sum,   
  array_to_mean(sorted1) as avg,  
  (sorted_array_to_percentile(sorted1, 0)) AS min,  
  (sorted_array_to_percentile(sorted1, 1)) AS max,  
  (sorted_array_to_percentile(sorted1, 0.9)) AS P90,  
  (sorted_array_to_percentile(sorted1, 0.95)) AS P95,  
  (sorted_array_to_percentile(sorted1, 0.99)) AS P99  
FROM   
(  
select   
  gv,  
  count(rc) as _count,  
  sort_asc(
    ( '{'||string_agg(rtrim(ltrim(mg.v1::text, '{'), '}'), ',')||'}' )::int[]  