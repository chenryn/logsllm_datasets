cache中更新192.168.2.2的MAC地址。
2\. IPv4报文封装到新的以太网帧中并从R1的FastEthernet 0/1 接口转发出去。
**到达目的地：**
当帧到达R3时执行以下步骤：
1\. R3将数据链路帧复制到它的buffer。
2\. R3解封装该数据链路帧。
3\.
R3在路由表中查找该目的IPv4地址。R3路由表中有直接连接到该网络的路由。这表示报文可直接发送到目的设备而无需发送至路由器。
由于输出接口是一个直连以太网，所以R3必须用ARP解析出目的IPv4地址的MAC地址。
1\. R3在它的ARP cache中查找目的IPv4地址，如果此ARP
cache中没有此表项，R3会从FastEthernet 0/0 接口发送ARP请求。PC
2回复ARP响应告知它的MAC地址。R3之后在ARP
cache中更新192.168.4.10的MAC地址。
2\. IPv4报文封装到新的以太网帧中并从R3的FastEthernet 0/0 接口发出。
3\. 当PC
2接收到该帧，检查帧的目的MAC地址，与网卡接收端口的MAC地址相匹配，PC
2于是将帧的剩余部分复制到自己的buffer。
4\. PC 2识别到以太网类型为0x800，也就是帧的数据部分包含IPv4报文。
5\. PC 2解封装以太网帧，将IPv4报文传递给操作系统的IPv4进程。
**路由表:**
路由表存储的信息包括：
**直连路径：**来自活动路由接口的路径。当接口为活动状态并配置了IP地址时，路由器添加一条直连路径。
**远端路径：**远端的网络连接到其他路由。通过静态配置或动态路由协议到达该网络。
路由表是存储在RAM中的一份数据文件，用于存储直连以及远端网络的路由信息。路由表中包含网络或下一跳地址的信息。这些信息告知路由器可以通过将报文发送至代表下一跳地址的路由器以最佳路劲到达目的地址。下一跳信息也可以是到下一个目的地的输出接口。
**路由表内容：**
Cisco IOS路由器可用**show IP
route**命令显示IPv4路由表。路由器还提供一些额外的路由信息，包括路径是怎样学习到的，路径在表中有多长时间，使用哪一接口去到达预定义的目的地。
路由表中的表项可作为以下内容添加：
**本地路径接口**：当接口配置并激活时添加。
**直连接口**：当接口配置并激活时添加。
**静态路径**：当手动配置路径并且输出接口激活时。
**动态路由协议**：当路由协议动态学习到网络时添加，如EIGRP或OSPF。
路由表项的来源通过代码来标识，代码表明路径是怎样学习到的。例如，常用代码包括：
**L：**路由器接口地址。当路由器接收到报文时发送至本地接口而无需转发。
**C：**直连网段。
**O：**通过OSPF从另一个路由器动态学习到的网络。
**D：**通过EIGRP从另一个路由器动态学习到的网络。
下图显示了R1的路由表：
[![image003.jpg](42739f58.jpg){.calibre9}](https://community.emc.com/servlet/JiveServlet/showImage/2-835157-92958/image003.jpg){.pcalibre2
.pcalibre .calibre7 .pcalibre1 target="_blank"}
**远端网络路由表项：**
下图显示了R1到远端网络10.1.1.0的表项：
[![image004.jpg](6d5ca23e.jpg){.calibre9}](https://community.emc.com/servlet/JiveServlet/showImage/2-835157-92959/image004.jpg){.pcalibre2
.pcalibre .calibre7 .pcalibre1 target="_blank"}
Route source：路径是怎样学习到的。
Destination network：远端网络地址。
Administrative distance：路由来源的可信度。较低值表明优先选择。
Metric：是[路由算法](http://www.baidu.com/s?wd=%E8%B7%AF%E7%94%B1%E7%AE%97%E6%B3%95&hl_tag=textlink&tn=SE_hldp01350_v6v6zkg6){.pcalibre2
.pcalibre .calibre7 .pcalibre1
target="_blank"}用以确定到达目的地的最佳路径的[计量标准](http://www.baidu.com/s?wd=%E8%AE%A1%E9%87%8F%E6%A0%87%E5%87%86&hl_tag=textlink&tn=SE_hldp01350_v6v6zkg6){.pcalibre2
.pcalibre .calibre7 .pcalibre1 target="_blank"}。较低值表明优先选择。
Next hop：转发报文的下一个路由器的IP地址。
Route timestamp：自学习到路径以来过了多少时间。
Outgoing interface：用以转发报文的输出接口。
**直连路由表项：**
下图显示了R1到直连网络192.168.10.0的路由表项：
[![image005.jpg](ef171eb7.jpg){.calibre9}](https://community.emc.com/servlet/JiveServlet/showImage/2-835157-92960/image005.jpg){.pcalibre2
.pcalibre .calibre7 .pcalibre1 target="_blank"}
在一个接口状态为up/up并添加到IPv4路由表之前，接口必须：
-   指定有效的IPv4或IPv6地址。
-   通过no shutdown命令激活。
-   从另一设备（路由器，交换机，主机等）接收到载体信号。
当接口up之后，该接口的网络作为直连网络添加到路由表中。
:::
:::
[]{#4.html}
::: page
# 网络基本功（五）：细说路由（下） {#4.html#calibre_toc_6 .book-chapter}
::: {#4.html#section- .section}
# 网络基本功（五）：细说路由（下） {#4.html#网络基本功（五）：细说路由（下） .calibre4}
**转载请在文首保留原文出处：EMC中文支持论坛**[https://community.emc.com/go/chinese](https://community.emc.com/go/chinese){.pcalibre2
.pcalibre .calibre7 .pcalibre1 target="_blank"}
[![image001.gif](3bc24922.gif){.calibre9}](http://service.weibo.com/share/share.php?title=%23ECN%e4%b8%ad%e6%96%87%e6%94%af%e6%8c%81%e8%ae%ba%e5%9d%9b%23%20%e7%bd%91%e7%bb%9c%e5%9f%ba%e6%9c%ac%e5%8a%9f%ef%bc%88%e4%ba%94%ef%bc%89%ef%bc%9a%e7%bb%86%e8%af%b4%e8%b7%af%e7%94%b1%ef%bc%88%e4%b8%8b%ef%bc%89@EMC%e6%98%93%e5%ae%89%e4%bf%a1%e4%b8%ad%e5%9b%bd%e6%8a%80%e6%9c%af%e7%a4%be%e5%8c%ba&url=https://community.emc.com/message/836518#836518){.pcalibre2
.pcalibre .calibre7 .pcalibre1 target="_blank"}
## 介绍 {#4.html#介绍 .calibre10}
静态路由是指由网络管理员手工配置的路由信息。当网络的拓扑结构或链路的状态发生变化时，网络管理员需要手工去修改路由表中相关的静态路由信息。动态路由是指路由器之间相互通信，传递路由信息，利用收到的路由信息更新路由表的过程。是基于某种协议来实现的。本文详细阐述这两者的实现过程。
## 更多信息 {#4.html#更多信息 .calibre10}
**静态路由:**
静态路由是指由网络管理员手动配置在路由器上的表项。对于特定的目标地址，以及在小型或稳定的网络环境，手动配置静态路由可以非常成功地应用。通过使用静态路由，网络管理员确定了通向一目标网络的路径。
一个重要的概念是：路由的核心在于下一跳。下一跳是一个特定路由器的角度来看，距离目标地址更近一步的路由器。下图显示了一个中型路由拓扑。从R1的角度来看，R2同时是到达192.168.3.0以及192.168.4.0的下一跳。
[![image002.jpg](b865f467.jpg){.calibre9}](https://community.emc.com/servlet/JiveServlet/showImage/2-836518-93887/image002.jpg){.pcalibre2
.pcalibre .calibre7 .pcalibre1 target="_blank"}
初始状态下，除了已经启动的接口和给定的IP地址以外，什么都没有配置。路由器的路由表只会包含直连路由。每一个路由器只知道它接口相连的两个网络。下表显示了这一时刻的路由表。
[![image003.png](bd9236b4.png){.calibre9}](https://community.emc.com/servlet/JiveServlet/showImage/2-836518-93903/image003.png){.pcalibre2
.pcalibre .calibre7 .pcalibre1 target="_blank"}
从上表可以看出，路由器不知道整个网络的情况。例如，Node A连接到Switch
1尝试访问Switch 4的Node
B。经过主机路由表处理后，A将数据转发至R1的默认网关（192.168.1.254），R1查询自己的路由表并发现没有目标网络的相关信息。于是R1发送ICMP
destination unreachable消息。
这个问题怎么解决呢？像这样的小型网络，网络管理员可以在路由器输入路由命令，配置额外的转发信息：
``` calibre13
ip route destination-network destination-network-mask next-hop-IP-address (forwarding router interface)
```
例如，以下命令告知R1怎样到达192.168.3.0以及192.168.4.0：
``` calibre13
ip route 192.168.3.0 255.255.255.0 192.168.2.254
ip route 192.168.4.0 255.255.255.0 192.168.2.254
```
R1上输入命令之后，路由表更新如下所示：
[![image004.png](5f024a6f.png){.calibre9}](https://community.emc.com/servlet/JiveServlet/showImage/2-836518-93904/image004.png){.pcalibre2
.pcalibre .calibre7 .pcalibre1 target="_blank"}
现在R1理解到达这些网络需要经过R2，但是R2接下来怎么办呢?由于192.168.3.0直接连接到R2，R2可以直接ARP主机。但对于192.168.4.0，R2需要管理员以下命令来协助：
``` calibre13
ip route 192.168.4.0 255.255.255.0 192.168.3.254
```
路由表相应更新：
[![image005.png](f4d2dab1.png){.calibre9}](https://community.emc.com/servlet/JiveServlet/showImage/2-836518-93905/image005.png){.pcalibre2
.pcalibre .calibre7 .pcalibre1 target="_blank"}
目前只成功了一半，报文需要返回。查看R3的路由表，发现路由器不知道怎么找到192.168.1.0。Node
A的报文到达之后，Node B尝试回复，但是会从R3收到ICMP destination
unreachable的消息。在Node
A看来，好像传输从未收到回复。要完成这一过程，需要在所有路由器上对于所有未知网络输入ip
route命令来更新路由表。
[![image006.png](e7c8e23e.png){.calibre9}](https://community.emc.com/servlet/JiveServlet/showImage/2-836518-93906/image006.png){.pcalibre2
.pcalibre .calibre7 .pcalibre1 target="_blank"}
R2真正的路由表以及在R2上输入的ip route命令如下图所示：