下面的 Makefile 将执行上述所有操作：
# Your book files
DEPENDENCIES= toc preface about
# Placement of your HTML files
DOCS=docs
all: web
web: setup $(DEPENDENCIES)
&nbsp; &nbsp; &nbsp; &nbsp; @cp $(DOCS)/toc/index.html $(DOCS)
# Creation and copy of stylesheet and images into
# the assets folder. This is important to deploy the
# website to Github Pages.
setup:
&nbsp; &nbsp; &nbsp; &nbsp; @mkdir -p $(DOCS)
&nbsp; &nbsp; &nbsp; &nbsp; @cp -r assets $(DOCS)
# Creation of folder and index.html file on a
# per-chapter basis
$(DEPENDENCIES):
&nbsp; &nbsp; &nbsp; &nbsp; @mkdir -p $(DOCS)/$@
&nbsp; &nbsp; &nbsp; &nbsp; @pandoc -s --toc web-metadata.yaml parts/$@.md \
&nbsp; &nbsp; &nbsp; &nbsp; -c /assets/pandoc.css -o $(DOCS)/$@/index.html
clean:
&nbsp; &nbsp; &nbsp; &nbsp; @rm -rf $(DOCS)
.PHONY: all clean web setup
选项 - c /assets/pandoc.css 声明要使用的 CSS 样式表，它将从 /assets/pandoc.cs 中获取。也就是说，在 &lt;head&gt; 标签内，Pandoc 会添加这样一行：
&lt;link rel="stylesheet" href="/assets/pandoc.css"&gt;
使用下面的命令生成网页：
make
根文件夹现在应该包含如下所示的文件结构：
.---parts
| &nbsp; &nbsp;|--- toc.md
| &nbsp; &nbsp;|--- preface.md
| &nbsp; &nbsp;|--- about.md
|
|---docs
&nbsp; &nbsp; |--- assets/
&nbsp; &nbsp; |--- index.html
&nbsp; &nbsp; |--- toc
&nbsp; &nbsp; | &nbsp; &nbsp; |--- index.html
&nbsp; &nbsp; |
&nbsp; &nbsp; |--- preface
&nbsp; &nbsp; | &nbsp; &nbsp; |--- index.html
&nbsp; &nbsp; |
&nbsp; &nbsp; |--- about
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |--- index.html
&nbsp; &nbsp;
部署网页
通过以下步骤将网页部署到 GitHub 上：
创建一个新的 GitHub 仓库
将内容推送到新创建的仓库
找到仓库设置中的 GitHub Pages 部分，选择 Source 选项让 GitHub 使用主分支的内容
你可以在 GitHub Pages 的网站上获得更多详细信息。
我的书的网页 便是通过上述过程生成的，可以在网页上查看结果。
生成电子书
创建 ePub 格式的元信息文件
ePub 格式的元信息文件 epub-meta.yaml 和 HTML 元信息文件是类似的。主要区别在于 ePub 提供了其他模板变量，例如 publisher 和 cover-image 。ePub 格式图书的样式表可能与网页所用的不同，在这里我使用一个名为 epub.css 的样式表。
---
title: 'GRASP principles for the Object-oriented Mind'
publisher: 'Programming Language Fight Club'
author: Kiko Fernandez-Reyes
rights: 2017 Kiko Fernandez-Reyes, CC-BY-NC-SA 4.0 International
cover-image: assets/cover.png
stylesheet: assets/epub.css
...
将以下内容添加到之前的 Makefile 中：
epub:
&nbsp; &nbsp; &nbsp; &nbsp; @pandoc -s --toc epub-meta.yaml \
&nbsp; &nbsp; &nbsp; &nbsp; $(addprefix parts/, $(DEPENDENCIES:=.md)) -o $(DOCS)/assets/book.epub
用于产生 ePub 格式图书的命令从 HTML 版本获取所有依赖项（每章的名称），向它们添加 Markdown 扩展，并在它们前面加上每一章的文件夹路径，以便让 Pandoc 知道如何进行处理。例如，如果 $（DEPENDENCIES 变量只包含 &ldquo;前言&rdquo; 和 &ldquo;关于本书&rdquo; 两章，那么 Makefile 将会这样调用：
@pandoc -s --toc epub-meta.yaml \
parts/preface.md parts/about.md -o $(DOCS)/assets/book.epub
Pandoc 将提取这两章的内容，然后进行组合，最后生成 ePub 格式的电子书，并放在 Assets 文件夹中。
这是使用此过程创建 ePub 格式电子书的一个 示例。
过程总结
从 Markdown 文件创建网页和 ePub 格式电子书的过程并不困难，但有很多细节需要注意。遵循以下大纲可能使你更容易使用 Pandoc。
HTML 图书：
使用 Markdown 语法创建每章内容
添加元信息
创建一个 Makefile 将各个部分组合在一起
设置 GitHub Pages
部署
ePub 电子书：
使用之前创建的每一章内容
添加新的元信息文件
创建一个 Makefile 以将各个部分组合在一起
设置 GitHub Pages
部署
via: https://opensource.com/article/18/10/book-to-website-epub-using-pandoc
作者：Kiko Fernandez-Reyes 选题：lujun9972 译者：jlztan 校对：wxy
本文由 LCTT 原创编译，Linux中国 荣誉推出