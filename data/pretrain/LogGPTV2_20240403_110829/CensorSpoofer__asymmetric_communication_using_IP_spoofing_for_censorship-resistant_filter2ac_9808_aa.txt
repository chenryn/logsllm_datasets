title:CensorSpoofer: asymmetric communication using IP spoofing for censorship-resistant
web browsing
author:Qiyan Wang and
Xun Gong and
Giang T. K. Nguyen and
Amir Houmansadr and
Nikita Borisov
CensorSpoofer: Asymmetric Communication using IP
Spooﬁng for Censorship-Resistant Web Browsing
Qiyan Wang
Xun Gong
Dept. of Computer Science,
Dept. of Electrical & Computer
UIUC
PI:EMAIL
Engineering, UIUC
PI:EMAIL
Giang T. K. Nguyen
Dept. of Computer Science,
UIUC
PI:EMAIL
Amir Houmansadr
Dept. of Computer Science,
UT Austin
PI:EMAIL
Nikita Borisov
Dept. of Electrical & Computer
Engineering, UIUC
PI:EMAIL
ABSTRACT
A key challenge in censorship-resistant web browsing is be-
ing able to direct legitimate users to redirection proxies while
preventing censors, posing as insiders, from discovering their
addresses and blocking them. We propose a new framework
for censorship-resistant web browsing called CensorSpoofer
that addresses this challenge by exploiting the asymmet-
ric nature of web browsing traﬃc and making use of IP
spooﬁng. CensorSpoofer de-couples the upstream and down-
stream channels, using a low-bandwidth indirect channel for
delivering upstream messages (URLs) and a high-bandwidth
direct channel for downloading web content. The upstream
channel hides the request contents using steganographic en-
coding within Email or instant messages, whereas the down-
stream channel uses IP address spooﬁng so that the real ad-
dress of the proxy is not revealed either to legitimate users
or censors. We built a proof-of-concept prototype that uses
encrypted VoIP for this downstream channel and demon-
strated the feasibility of using the CensorSpoofer framework
in a realistic environment.
Categories and Subject Descriptors
C.2.1 [Computer-Communication Networks]: Network
Architecture and Design—Network communications; C.2.0
[Computer-Communication Networks]: General—Se-
curity and protection
Keywords
Censorship resistance, asymmetric communication, IP spoof-
ing, Voice-over-IP
1.
INTRODUCTION
Today, the Internet is playing an ever-increasing role in
social and political movements around the world. Activists
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
CCS’12, October 16–18, 2012, Raleigh, North Carolina, USA.
Copyright 2012 ACM 978-1-4503-1651-4/12/10 ...$10.00.
use it to coordinate their activities and to inform the gen-
eral people of important information that is not available
via traditional media channels. The role played by Twitter,
Facebook, YouTube, CNN iReport and many other web-
sites/blogs in the recent events in the Middle East is a great
example of this [34, 47].
The free ﬂow of information and exchange of ideas on the
Internet have been perceived as a serious threat by repressive
regimes. In response, they have imposed strong censorship
on the Internet usage of their citizens. They monitor, ﬁl-
ter, trace, and block data ﬂows using sophisticated technolo-
gies, such as IP address blocking, DNS hijacking, and deep
packet inspection [32, 50]. For example, the “Great Firewall
of China” blocks almost all popular social networks, such as
Facebook, Twitter and Flickr, and other websites that may
provide political information contrary to the state’s agenda,
such as Youtube, Wikipedia, BBC News, and CNN [60]. To
exercise control over the Internet, the Chinese government
employs an Internet police force of over 30 000 people to
constantly monitor the citizens’ online activities [45], and
an individual who is caught violating the laws of Chinese
censorship is subject to payment of ﬁnes [24].
There are many tools that aim to circumvent such cen-
sorship [1, 2, 40, 48]; a typical approach is to deploy a redi-
rection proxy that provides access to blocked sites. Cen-
sors are, however, eager to locate such proxies and block
them as well; a particularly powerful approach is the in-
sider attack, wherein censors pretend to be legitimate users
of the service in order to locate and shut down the prox-
ies. Limiting the amount of information each user gets and
trying to identify compromised insiders can partially miti-
gate this attack [51, 52, 56]; however, these techniques are
unlikely to survive a powerful adversary who can deploy a
very large number of corrupt users. An alternate approach
is to never reveal the proxies’ addresses to users and thus
be completely immune to the insider attack. Some recent
work suggests strategically placing special deﬂection routers
at core Internet ISPs to transparently redirect users’ traﬃc
to the proxies [44, 49, 59]. Such a deployment, however re-
quires a signiﬁcant resource investment that is likely to come
only from a (pro-Internet freedom) government agency, as
well as cooperation of large ISPs.
We propose a new approach, CensorSpoofer, that can be
deployed using minimal resources, perhaps volunteered by
ordinary people interested in promoting Internet freedom.
121(The Tor project [40] has demonstrated the feasibility of
building a successful service with contributions from such
volunteers.) Our key insight is that it is possible to use
IP address spooﬁng to send data from the proxy to a user
without revealing its actual origin. Such a spoofed channel
allows communication in a single direction only; however,
we can exploit the asymmetric nature of web-browsing traf-
ﬁc, using a low-bandwidth indirect channel, such as stegano-
graphic instant messages or Email, to communicate requests
from the user to the proxy. To avoid identiﬁcation by the
censor, CensorSpoofer mimics an encrypted VoIP session to
tunnel the downstream data, since the VoIP protocol does
not require endpoints to maintain close synchronization and
does not reveal its contents to the censor. We also explore
additional steps that need to be taken to prevent detection,
namely, choosing a plausible fake IP source address.
To demonstrate the feasibility of CensorSpoofer, we built
a proof-of-concept prototype implementation and tested it
in a real-world environment. Our experiments show that
our prototype can be successfully used for browsing the web
while resisting blocking eﬀorts of the censors.
The rest of this paper is organized as follows. We intro-
duce the related work in Section 2. Section 3 presents the
basic concepts, including the threat model and system goals.
Section 4 describes the framework of CensorSpoofer.
In
Section 5, we elaborate a concrete design of CensorSpoofer
based on VoIP, and analyze its security in Section 6. Sec-
tion 7 presents our prototype implementation and the eval-
uation results. We conclude in Section 8.
2. RELATED WORK
In response to Internet censorship, many pragmatic sys-
tems such as Dynaweb/freegate [1], Ultrasurf [2], and Psiphon
[48] have been developed to help people bypass censorship.
All these systems are based on a simple idea:
let the user
connect to one of the proxies deployed outside the censor’s
network, which can fetch blocked webpages for the user. To
hide the nature of the traﬃc, the communications with the
proxy are encrypted. Infranet [41] takes things a step fur-
ther, embedding the real communication inside a cover web
session, using covert channels to communicate the request
and image steganography to return the data. However, while
escaping detection by outsiders, these designs are vulnera-
ble to the insider attack, where the censor pretends to be an
ordinary user to locate the proxies and then block them.
Tor [40] also uses proxies (called bridges, run by volun-
teers) to resist censorship, but employs more advanced strate-
gies to limit the distribution of proxies’ IP addresses. So far,
Tor has tried four diﬀerent distribution strategies. First,
each user would receive a small subset of bridges based on
his or her IP address as well as the current time. Second,
a small subset of bridges could be obtained by sending a
request via Gmail. These strategies fail to protect against
an adversary who has access to a large number of IP ad-
dresses and Gmail accounts; Chinese censors were able to
enumerate all bridges in under a month [3].
(McLachlan
and Hopper further showed that open proxies could be used
to gain access to a large number of IP addresses [53]). The
third strategy involves distributing bridge addresses to a few
trusted people in censored countries in an ad hoc manner,
who then disseminate this information to their social net-
works. Fourth, an individual can deploy a private bridge
and give the bridge’s address only to trusted contacts. These
methods can resist bridge discovery but reach only a limited
fraction of the population of potential bridge users.
Several researchers have tried to design better proxy dis-
tribution strategies [42, 51, 52, 56] that aim to identify users
who are likely to lead to a proxy being blocked using past
history and directing new proxy information towards other
users. However, these designs are not likely to withstand a
censor who controls a large number of corrupt users.
TriangleBoy [4] is a circumvention system that is similar
in spirit to Tor-bridge and also uses IP spooﬁng. In Trian-
gleBoy, a user connects to one of the TriangleBoy proxies
run by volunteers, and the proxy forwards the user’s URLs
to a SafeWeb server, which fetches the web pages and sends
them back to the user by spooﬁng the source IP address with
the proxy’s IP. The only diﬀerence between Tor-bridge and
TriangleBoy is that in Tor the downstream traﬃc takes the
same route (through several relays) as the upstream traf-
ﬁc, while in TriangleBoy the server sends the downstream
traﬃc to the user directly using IP spooﬁng to improve ef-
ﬁciency. Note that, in spite of using IP spooﬁng, the Tri-
angleBoy proxies are still exposed to users, which raises the
same problem to the insider attack as Tor bridges; whereas,
CensorSpoofer adopts a diﬀerent architecture by using IP
spooﬁng to conceal the proxy’s IP address, and hence is im-
mune the insider attack.
Similar to CensorSpoofer, another school of prior research
tries to fundamentally resist the insider attack, i.e., toler-
ating any fraction of corrupt users, by hiding the proxy’s
IP from any user and therefore the censors. One way to
achieve this is to utilize indirect channels, i.e., relaying the
traﬃc sent to/by the proxy through one or more intermedi-
ate nodes. For example, MailMyWeb [5] and FOE [6] utilize
Email as the indirect channel. For these systems, users are
required to be able to access foreign servers that support
encryption (e.g., Gmail), in order to avoid being detected
by the censor. Nevertheless, considering the Chinese gov-
ernment once temporarily blocked Gmail [35], we can envi-
sion that the censor would again block the few special Email
providers upon ﬁnding out they are popularly used to bypass
censorship.
It is important to note that, while CensorSpoofer also em-
ploys an indirect channel, we only use it for sending users’
requests (e.g., URLs), which are usually very small (espe-
cially after encoding URLs into small numbers) and easy to
hide into any indirect channel using steganography. This al-
lows us to obviate the need for special servers (e.g., external
Email providers supporting encryption) to provide a secured
and high-bandwidth indirect channel, and users can even use
the local Email and IM providers controlled by the censor
to access our system. Consequently, the cost of blocking the
upstream indirect channel of CensorSpoofer is signiﬁcantly
higher: the censor has to block all overseas indirect commu-
nication (e.g., overseas Email and IM).
More recently, researchers proposed several infrastructure-
assisted circumvention systems,
including Telex [59], De-
coy routing [49], and Cirripede [44]. Although these sys-
tems can support low-latency communication and perfectly
resist the insider attack, they require a signiﬁcant invest-
ment of eﬀort by large ISPs. By contrast, CensorSpoofer is
an infrastructure-independent circumvention system, allow-
ing individuals to deploy their own anti-censorship systems
without requiring support from network infrastructure.
Instead of aiming to provide low-latency communication,
122some anti-censorship systems are designed to achieve censorship-
resistant content sharing and/or distribution. For example,
some proposals leverage peer-to-peer (P2P) networks to pro-
vide privacy-preserving ﬁle sharing, e.g., Freenet [38], mem-
bership concealing overlay network [57], and darknet [7, 54].
Collage [36] let users stealthily exchange censored informa-
tion with an external proxy via a website that can host user-
generated content (e.g., Flickr) using steganography.
3. CONCEPT
3.1 Threat Model
We consider a state-level adversary (i.e., the censor), who
controls the network infrastructure under its jurisdiction.
The censor has sophisticated capabilities of IP ﬁltering, deep
packet inspection, and DNS hijacking, and can potentially
monitor, block, alter, and inject traﬃc anywhere in its net-
work. However, the censor is motivated to allow citizens to
normally access basic Internet services, such as IM, Email
and VoIP, as blocking such services would lead to economic
losses and political pressure. More speciﬁcally, we assume
the censor is unwilling to interfere with the Internet connec-
tions of a user, e.g., an ongoing VoIP conversation, unless it
has evidence that a particular connection is being used for
bypassing censorship.
Furthermore, we assume the censor generally allows peo-
ple to use common encryption protocols to protect their on-
line privacy, e.g., SRTP [28] or ZRTP [31] for secure VoIP
communication.1 Thus far, this assumption has held true
for most existing cases of Internet censorship, and the use of
encrypted protocols such as SSL/TLS have formed the foun-
dation of most existing anti-censorship systems [1, 2, 5, 6, 40,
44,48,49,59]. Once again, blocking encrypted traﬃc reduces
the security of normal citizens using the Internet for personal
or business reasons, and thus censors are motivated to allow
such traﬃc through. There have been important exceptions
to this, including Iran’s blocking of all encrypted traﬃc prior
to the 33rd anniversary of the Islamic Revolution [33] and
Egypt’s complete disconnection of the Internet in response
to nationwide protests [39]. Such drastic censorship requires
fundamentally diﬀerent circumvention approaches that are
out of scope of our work.
We assume the censor can utilize its governmental power
to force local IM, Email, and VoIP providers to censor their
users’ communication. We also assume that the censor can
block any foreign Internet website or service, such as an
Email or instant messaging provider, if it has reason to be-
lieve that it is being used to circumvent censorship. The
censor can rent hosts outside of its own network, but oth-
erwise has no power to monitor or control traﬃc outside its
network. Finally, we assume that the censor has suﬃcient
resources to launch successful insider attacks, and thus is
aware of the same details of the circumvention system as
are known to ordinary users.
Similar to many existing systems [36,40,41,44,49,59], our
approach requires that users run specialized circumvention
software on their computers. We assume that users are able
to obtain authentic copies of the software without alerting
1Although much of VoIP traﬃc is currently unencrypted,
the trend is towards more widespread use of secure VoIP
protocols; for example, a number of VoIP software clients [8–
14] and VoIP phones [15, 16] have encryption functionality.
the government to this fact through some form of out-of-
band communication. (We acknowledge, however, that se-
cure and reliable mechanisms for distributing such software
are an important area of future research.)
3.2 System Goals
CensorSpoofer aims to achieve the following goals:
Unblockability: The censor should not be able to block