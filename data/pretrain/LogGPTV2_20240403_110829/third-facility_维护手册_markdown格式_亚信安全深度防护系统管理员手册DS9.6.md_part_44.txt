### 310 密钥交换错误
服务器正在尝试使用临时生成的密钥建立 SSL 会话。

### 311 预主密钥解密错误
在尝试对预主密钥进行排队以解密时出现错误。

### 312 主密钥过大
主密钥大于协议标识符所指定的最大大小。

### 313 握手参数无效
在尝试解码握手协议时遇到无效或不合理的值。

### 314 超出会话数限制
已超出可用会话数。

### 315 压缩方法不受支持
请求的压缩方法不受支持。

### 316 不受支持的应用层协议
请求的 SSL 应用层协议未知或不受支持。

### 500 URI 路径深度超过限制
URI 中的“/”分隔符过多。最大路径深度为 100。

### 501 无效的遍历
已在根目录上使用了“../”。

### 502 URI 包含非法字符
URI 中使用了非法字符。

### 503 UTF8 序列不完整
URI 在 UTF8 序列中间结束。

### 504 无效的 UTF8 编码
UTF8 编码无效或非规范。

### 505 十六进制编码无效
%nn 中的 nn 不是有效的十六进制数字。

### 506 URI 路径过长
路径长度超过 512 个字符。

### 507 使用了禁用字符
使用了已禁用的字符。

### 508 利用双重解码
尝试利用双重解码（例如 %25xx、%25%xxd 等）。

### 700 无效的 Base64 内容
预期以 Base64 格式编码的数据包内容未正确编码。

### 710 压缩/GZIP 内容损坏
预期以 Base64 格式编码的数据包内容未正确编码，且压缩/GZIP 内容已损坏。

### 711 压缩/GZIP 内容不完整
压缩/GZIP 内容不完整。

### 712 压缩/GZIP 校验和错误
压缩/GZIP 校验和错误。

### 713 不支持的压缩/GZIP 字典
不支持的压缩/GZIP 字典。

### 714 不支持的 GZIP 标头格式/方法
不支持的 GZIP 标头格式或方法。

### 801 超出协议解码搜索限制
协议解码规则定义了搜索或 PDU 对象的限制，但在达到限制前未找到对象。

### 802 协议解码约束错误
协议解码规则已解码不符合协议内容约束的数据。

### 803 协议解码引擎内部错误
协议解码引擎内部错误。

### 804 协议解码结构太深
协议解码规则已遇到导致超过最大类型嵌套深度 (16) 的类型定义和数据包内容。

### 805 协议解码堆栈错误
规则编程错误尝试引起递归或用于多嵌套过程调用。

### 806 无限数据循环错误
协议解码过程中检测到无限数据循环。

### 完整性监控事件

#### 8000 已创建完整基线
当已请求客户端生成基线，或者完整性监控规则的数量从 0 增加到 n 时创建。此事件包含扫描时间（毫秒）和已编录实体数的相关信息。

#### 8001 已创建部分基线
当客户端的安全配置中有一个或多个完整性监控规则发生更改时创建。此事件包含扫描时间（毫秒）和已编录实体数的相关信息。

#### 8002 已完成更改扫描
当请求客户端执行完整或部分按需扫描时创建。此事件包含扫描时间（毫秒）和已编录更改次数的相关信息。（正在进行的针对文件系统驱动程序或通知的更改扫描不会生成 8002 事件。）

#### 8003 未知环境变量
当完整性监控规则中存在未知环境变量时创建。此事件包含出现问题的完整性监控规则的 ID、名称以及未知环境变量的名称。

#### 8004 错误的基准
当规则包含的基本目录/密钥无效时创建。此事件包含出现问题的完整性监控规则的 ID、名称以及错误基准值。

#### 8005 未知实体集
当完整性监控规则中遇到未知实体集时创建。此事件包含出现问题的完整性监控规则的 ID、名称以及遇到的未知实体集名称列表（以逗号分隔）。

#### 8006 不支持的实体集
当完整性监控规则中遇到已知但不受支持的实体集时创建。此事件包含有问题的完整性监控规则的 ID、完整性监控规则的名称以及出现的不支持的实体集名称的逗号分隔列表。某些实体集类型（如 RegistryKeySet）是特定于平台的。

#### 8007 未知功能
当完整性监控规则中遇到未知功能时创建。此事件包含有问题的完整性监控规则的 ID、完整性监控规则的名称、实体集类型（例如 FileSet）以及遇到的未知功能名称的逗号分隔列表。有效的功能值示例包括 "whereBaseInOtherSet"、"status" 和 "executable"。

#### 8008 不支持的功能
当完整性监控规则中遇到已知但不受支持的功能时创建。此事件包含有问题的完整性监控规则的 ID、完整性监控规则的名称、实体集类型（例如 FileSet）以及遇到的但不受支持的功能名称的逗号分隔列表。某些功能值（例如用于 Windows 服务状态的 "status"）是特定于平台的。

#### 8009 未知属性
当完整性监控规则中遇到未知属性时创建。此事件包含有问题的完整性监控规则的 ID、完整性监控规则的名称、实体集类型（例如 FileSet）以及遇到的未知属性名称的逗号分隔列表。有效的属性值示例包括 "created"、"lastModified" 和 "inodeNumber"。

#### 8010 不支持的属性
当完整性监控规则中遇到已知但不受支持的属性时创建。此事件包含有问题的完整性监控规则的 ID、完整性监控规则的名称、实体集类型（例如 FileSet）以及遇到的但不受支持的属性名称的逗号分隔列表。某些属性值（例如 "inodeNumber"）是特定于平台的。

#### 8011 实体集中存在未知属性
当完整性监控规则中遇到未知实体集 XML 属性时创建。此事件包含有问题的完整性监控规则的 ID、完整性监控规则的名称、实体集类型（例如 FileSet）以及遇到的未知实体集属性名称的逗号分隔列表。如果您编写的是 `<UnknownAttribute>`，而非 `<ValidAttribute>`，将出现此事件。

#### 8012 未知注册表字符串
当规则引用的注册表项不存在时创建。此事件包含出现问题的完整性监控规则的 ID、名称以及未知注册表字符串的名称。

#### 8013 WQLSet 缺少命名空间
表示 WQL 查询缺少命名空间，因为完整性规则 XML 的格式不正确。只有在包含使用和监控 WQL 查询的定制完整性规则的高级情形中才会出现。

#### 8014 WQLSet 使用了未知提供程序值
使用了无效的 WQLSet 提供程序值。

#### 8015 完整性监控规则不适用
可能由多种原因导致，例如平台不匹配、目标目录或文件不存在或者功能不受支持。

#### 8016 检测到非最优的完整性规则
检测到非最优的完整性规则。

#### 8050 正则表达式编译错误
无法编译正则表达式。使用了无效通配符。

### 日志审查事件

#### 8100 日志审查引擎错误
日志审查引擎发生错误。

#### 8101 日志审查引擎警告
日志审查引擎发出警告。

#### 8102 日志审查引擎已初始化
日志审查引擎已成功初始化。

### 完整性监控规则语言

完整性监控规则语言是一种基于 XML 的声明性语言，用于描述应该受亚信安全服务器深度安全防护系统监控的系统组件和关联属性。此语言还提供了一种方法来指定一组数量较大的组件中应免于监控的组件。

#### 创建新完整性监控规则
创建新完整性监控规则有两种方式：
- **基本规则**：如果只是希望监控文件中是否发生未经授权的更改，则可以使用“基本规则”模板。有关使用“基本规则”模板的说明，请参阅“完整性监控规则属性”窗口的文档。
- **定制规则**：如果要创建用来监控计算机上其他实体（如目录、注册表值、服务等）的规则，则必须使用完整性监控规则语言来编写规则。要使用完整性监控规则语言创建新的完整性监控规则，请转至策略 >> 通用对象 >> 规则 >> 完整性监控规则 >> 新建 >> 新建完整性监控规则 >> 内容并选择“定制 (XML)”。

#### 实体集
完整性监控规则中包括的系统组件称为“实体”。每种类型的组件便是一个实体类。例如，文件、注册表项和进程分别是不同的实体类。完整性监控规则语言为每种实体类提供一种标记，用于描述该组实体（实体集）。以下实体集类型可用于规则中：

- **DirectorySet**：规则将扫描目录的完整性。
- **FileSet**：规则将扫描文件的完整性。
- **GroupSet**：规则将扫描组的完整性。
- **InstalledSoftwareSet**：规则将扫描已安装软件的完整性。
- **PortSet**：规则将扫描侦听端口的完整性。
- **ProcessSet**：规则将扫描进程的完整性。
- **RegistryKeySet**：规则将扫描注册表项。
- **RegistryValueSet**：规则将扫描注册表值。
- **ServiceSet**：规则将扫描服务的完整性。
- **UserSet**：规则将扫描用户的完整性。
- **WQLSet**：规则将监控 Windows Management Instrumentation (WMI) WQL 查询语句结果的完整性。

单个完整性规则可以包含多个实体集。例如，这允许您使用单个规则监控多个文件和注册表项来保护应用程序。

（本节概括介绍了实体集。有关各实体集的详细信息，请参阅其各自页面：DirectorySet (第 226 页)、FileSet (第 228 页)、GroupSet (第 231 页)、InstalledSoftwareSet (第 232 页)、PortSet (第 234 页)、ProcessSet (第 237 页)、RegistryKeySet (第 239 页)、RegistryValueSet (第 241 页)、ServiceSet (第 243 页)、UserSet (第 245 页) 和 WQLSet (第 248 页)。）

#### 层次结构和通配符
对于代表层次结构数据类型（如 FileSet 和 RegistryKeySet）的实体集，支持基于部分的特征码匹配：

- **/**（正斜杠）：划分要应用于层次结构各级别的特征码部分。
- **\*\***（两个星号）：匹配零个或多个部分。

支持以下通配符：
- **?**（问号）：匹配一个字符。
- ***（星号）：匹配零个或多个字符。

还支持“转义”字符：
- **\\**（反斜杠）：转义下一个字符。

使用 "/" 字符可以将特征码分成几个部分，只要每部分特征码连续匹配，便可以将其应用于层次结构的多个连续级别。例如，如果将特征码 `/a?c/123/*.java` 应用到以下路径 `/abc/123/test.java`，则：
- `"a?c"` 匹配 `"abc"`
- `"123"` 匹配 `"123"`

这样可以更灵活地匹配复杂的层次结构路径。