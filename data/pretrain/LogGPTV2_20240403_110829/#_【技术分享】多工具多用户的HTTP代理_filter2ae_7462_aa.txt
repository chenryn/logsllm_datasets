# 【技术分享】多工具多用户的HTTP代理
|
##### 译文声明
本文是翻译文章，文章来源：安全客
原文地址：
译文仅供参考，具体内容表达以及含义原文为准。
**翻译：**[ **WisFree**
****](http://bobao.360.cn/member/contribute?uid=2606963099)
**稿费：200RMB（不服你也来投稿啊！）**
**投稿方式：发送邮件至linwei#360.cn，或登陆 **[
**网页版**](http://bobao.360.cn/contribute/index)** 在线投稿**
**基础知识**
目前，很大一部分流行的命令控制（C&C）工具都是通过HTTP来传输网络通信数据的，例如Metasploit和Empire。对于C&C工具而言，之所以HTTP协议是一个更加高效的选择，主要是因为这个协议几乎适用于目前所有类型的通信网络以及网络设备。除此之外，使用“HTTP
over
TLS”可以为这些工具添加一个额外的安全层，因为这项技术将会使我们更加难以去检测到C&C流量。如果企业或组织拥有一个配置正确的Web代理，那么这个能够执行SSL/TLS检查的代理将会帮助安全技术人员更好地检测C&C流量。但是在我所帮助测试过的组织中，并没有多少组织采取了这样的安全措施。
为了掩饰所有的非法操作，通过HTTP协议传输的C&C流量应该通过80端口或者443端口来发送。如果使用类似8080这样的特殊端口来发送C&C数据的话，不仅会引起管理员怀疑，而且也逃不过安全防护软件的检测。就我个人而言，我喜欢在同一台主机中使用多种类型的工具。如果我要在一台主机中同时使用Empire和Metasploit的网络传输模块，我将总共需要三个网络端口，一般来说我会选择使用80端口、8080端口、以及443端口。但是现在，我想要让所有的网络流量全部通过端口443来发送。因此，我现在就要使用Sword&Shield所提供的安全分析服务了，这样我就可以使用一个C&C代理来完成所有的分析操作。
接下来，我打算使用Nginx来搭建一个反向代理服务器。如下图所示，这样我们就可以使用一台Web服务器来同时处理多用户-多工具的情况了。当代理服务器配置完成之后，代理规则将会负责对发送至C2服务器端口的流量进行划分。除此之外，这样的配置也可以隐藏C&C服务器的“真实身份”（实际主机）。Nginx不仅安装和配置非常简单，而且操作起来也非常便捷。多用户-多工具的C&C代理架构图如下图所示：
**Nginx的安装与配置**
首先，将你最喜欢的Linux发行版安装至一台VPS服务器中，你愿意的话也可以将其安装在自己的服务器里。为了方便大家理解，我选择将Ubuntu
16.10安装在一台VPS主机中。如果各位同学在Nginx的安装和运行上遇到了困难的话，可以参阅这份教程[[教程获取]](https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-16-04)。通过配置之后，我的服务器仅启用了80端口，并且只允许网络流量通过443端口来发送。
在测试开始之前，我们一定要将Nginx配置好，否则代理服务器将会不知道如何去处理那些通信连接。为了防止暴力破解攻击，我们要为每一个分析器分配一个GUID。你可以点击[这里](https://www.guidgenerator.com/)来生成相应的GUID。我所生成的GUID如下表所示：
我总共设置了三个分析器，每一个分析器的相关配置信息如下所示：
    #Analyst 1
    location /E0922BB0-684B-4ED3-967E-85D08880CFD5/ {
          proxy_redirect off;
          #Empire
          location /E0922BB0-684B-4ED3-967E-85D08880CFD5/e/ {
            proxy_pass https://205.232.71.92:443;
          }
          #Metasploit
          location /E0922BB0-684B-4ED3-967E-85D08880CFD5/m/ {
            #Metasploit exploit/multi/script/web_delivery
            location /E0922BB0-684B-4ED3-967E-85D08880CFD5/m/Delivery {
              proxy_pass https://205.232.71.92:8080;
            }
            #Metasploit Payload windows/x64/meterpreter/reverse_https
            location /E0922BB0-684B-4ED3-967E-85D08880CFD5/m/Pwned {
              proxy_pass https://205.232.71.92:80;
            }
          }
    }
    #Analyst 2
    location /30061CD8-0CEE-4381-B3F8-B50DCACA4CC8/ {
          proxy_redirect off;
          #Empire
          location /30061CD8-0CEE-4381-B3F8-B50DCACA4CC8/e/ {
            proxy_pass https://1.2.3.5:443;
          }
          #Metasploit
          location /30061CD8-0CEE-4381-B3F8-B50DCACA4CC8/m/ {
            #Metasploit exploit/multi/script/web_delivery
            location /30061CD8-0CEE-4381-B3F8-B50DCACA4CC8/m/Delivery {
              proxy_pass https://1.2.3.5:8080;
            }
            #Metasploit Payload windows/x64/meterpreter/reverse_https
            location /30061CD8-0CEE-4381-B3F8-B50DCACA4CC8/m/Pwned {
              proxy_pass https://1.2.3.5:80;
            }
          }
    }
    #Analyst 3
    location /6012A46E-C00C-4816-9DEB-7B2697667D92/ {
          proxy_redirect off;
          #Empire
          location /6012A46E-C00C-4816-9DEB-7B2697667D92/e/ {
            proxy_pass https://1.2.3.6:443;
          }