conservative computational delay of 10 milliseconds and a Poisson
distribution function for P in Equation 1. The background agents
consist of 49 ZI and 16 HBL agents with parameters that match a
related work on modeling spoofing [51].
For the evaluation, we perform two different experiments. In the
first, we vary the ratio of bot to background agents and measure the
impact on the botmaster’s profits. In the second, we steadily increase
the latency between the bots, the exchange, and the botmaster,
starting with the same latency as the background agents.
Figure 2: The ROI of Bot2Stock relative to the ratio of bots
to background trading agents. The ROI increases slightly as
the number of bots increase with a minimum ROI of 2.8% at
a 1.5% “bot to background agent” ratio.
Figure 3: ROI of Bot2Stock relative to network latency of
bots. Latency is shown relative to background agents for one
direction, with 0% being identical latency. Even at 200% ad-
ditional latency, the attack remains stable.
6.5 Experimental Results
Our simulations show that the minimum ROI for the botmaster is
2.8% over 2.5 seconds, assuming a 1.5% ratio of bots to background
traders. The ROI remains stable even when bots have 200% more
network latency than background traders.
Annual Return on Investment. To calculate a conservative
annual ROI for the botmaster, we assume 1 attack is carried out
per trading day to give the botmaster ample time to perform the
pre-attack setup. Assuming 252 trading days in a year (365 days
minus 104 weekend days and 9 U.S. public holidays), the botmas-
ter’s non-compounding ROI is 252r where r is the ROI for a single
attack. We use non-compounding ROI to be conservative, although
realistically a criminal is likely to reinvest their earnings, resulting
in higher profits. Given our minimum estimated ROI of 2.8%, the
botmaster would achieve a 1,022% annual non-compounding ROI.
In other words, if the botmaster started with $100,000, he would
have $1,022,000 after a year. This matches the order of magnitude of
the real layering fraud prosecuted by the SEC, which we presented
in Section 4.1.
Required Number of Bots. How does a 1.5% ratio of bots trans-
late into real-world market environments? In March 2020, IBM (a
“large cap” stock [12]) had an average minutely trade volume of
9,120 shares6, worth $1,241,141 at its highest price that month of
$136.10 per share [14]. To sustain 1.5% of this volume for 1 minute,
63,556,538 shares per day, 22 trading days in March 2020, the NYSE is open from 9:30
AM EST to 4 PM (6.5 hours).
285ACSAC 2020, December 7–11, 2020, Austin, USA
Carter Yagemann, et al.
Table 7: Comparison of Monetization Schemes
Crime Type
DDoS-for-hire
Spam
Pharmaceutical
Bank Trojan
Ad Fraud
Annual Revenue
$312,000
$3,500,000
$42,500,000
$302,000,000
$1,000,000,000
# Bots
N/A
52,000
N/A
180,000
2,000
Source
[8]
[23]
[30]
[48]
[3]
Bot2Stock
$1,022,000
~1,000
the botmaster would only need $18,617. Assuming each victim has
$5,000 in cash (Subsection 4.3), 4 bots are required per attack. To
run a yearlong campaign, conducting 1 attack per trading day (252
days) without ever reusing a bot, about 1,000 bots are required,
cumulatively. Since each attack takes less than a minute, no bot
would need to be controlled for more than a day. This is less than
the number of accounts our dark web scraper observed being sold
in a 3 month window for 1 brokerage on 1 marketplace.
Impact of Bot Ratio. Figure 2 shows the impact to the botmas-
ter’s ROI of changing the ratio of bots to background agents. As the
number of bots increase, the ROI also increases. In the worst case,
with a 1.5% ratio of bots to background agents, the ROI is 2.8% over
2.5 seconds. The bots lost no more than 0.18% of their cash from
accidental executions, which is consistent with the loss estimated
in Section 4.
Impact of Network Latency. Figure 3 shows the impact of net-
work latency on the stability of Bot2Stock. Latency (x-axis) is shown
relative to the latency of the background agents for one direction,
with 0% denoting identical latency. Note that querying the exchange
requires a full round-trip, so total additional latency for round-trip
time (RTT) is doubled. Surprisingly, even with 200% additional la-
tency, the layering remains effective. On closer examination, we
discover that because background agents wait for an order confir-
mation from the exchange before issuing another order and some
orders never end up executing, the rate at which orders execute
at the exchange remains slow enough to render the additional bot
latency moot. For example, when background agents have 10 ms
network latency, trades execute every 30 ms, on average. Thus,
even if the bots have 30 ms latency (200% added), they can still keep
up with the price movement.
7 DISCUSSION
7.1 Limitations
We resort to using a simulator to evaluate Bot2Stock because con-
ducting experiments in a real-world marketplace would be highly
unethical (and illegal). Consequently, the validity of our results
relies on the realism of the simulation. Agent-based discrete event
simulations are currently the most realistic technique for modeling
stock markets [5, 34, 51], however it is impossible to formally prove
that any models accurately reflect real-world markets.
Due to the proprietary and opaque nature of commercial anomaly
detection software, we are unable to directly evaluate Bot2Stock’s
ability to evade real-world detection. However, the SEC case files
reveal some clues as to the patterns these programs look for, which
we have shown are not produced by Bot2Stock (e.g., Q6 in Subsec-
tion 4.1). We also discuss academic systems in Section 2 and why
they are currently insufficient. The largest challenge, which works
in the criminal’s favor, is the high cost of false positives.
Lastly, since the Bot2Stock malware relies on its man-in-the-
browser position to hide injected orders from the transaction history
page, if the user uses multiple devices to access their brokerage
account, they may be able to spot the attack. However, as we show
in our evaluation, attacks are conducted so quickly that the user is
unlikely to spot the discrepancy in time to prevent it.
7.2 Profit Compared to Other Botnet Schemes
How does the profit of a Bot2Stock malware compare to existing
botnet schemes like spam and click fraud? Given the illicit nature of
these activities, estimates for current botnet profits are rough and
varied. Likewise, since no criminals have been caught automating
stock market fraud, our estimates are based on the outcome of dis-
covered manual manipulations and our simulations from Section 6.
Based on prior work, we conclude that the potential profits of a
Bot2Stock malware are in the same order of magnitude. For example,
McCoy et al. analyzed a four-year pharmaceutical scam generating
$42.5 million per year [30]. On the high end of the spectrum, recent
analysis by Anderson et al. [3] suggests that an advertising fraud
campaign busted by the FBI may have been generating slightly over
$1 billion of revenue per year, but the authors acknowledge that
the lack of public data makes their estimation weak.
It is even harder to estimate the number of bots in a campaign
because unless authorities can gain access to the C2 infrastructure,
the only observable outcome is the damage caused to victims (e.g.
the number of stolen credit card numbers, spam emails sent, etc.).
Even when access is gained into the infrastructure, estimates are
difficult to make due to churn caused by new infections, old ones
being cleaned up, etc. Given the prior work, a safe estimate for the
size of real-world botnets is in the order of thousands.
In summary, real-world botnet operations are roughly estimated
to make millions per year using thousands of bots. By comparison,
our simulation results show that Bot2Stock can make $1,022,000
per year, which is in the same order of magnitude. Table 7 sum-
marizes our comparisons. The revenues are for single campaigns
and botnet sizes (where available) are at the time the network was
dismantled (i.e., not cumulative). Since cumulative size estimates
are unavailable, the reported revenues may be lower bounds. Re-
gardless, even with conservative size estimates, all the botnets in
the table are larger than the cumulative size we estimate for oper-
ating Bot2Stock for 1 year (Subsection 6.5). Bot2Stock also has the
additional advantage of only needing to control each bot for less
than a day, due to the speed of layering attacks. That said, we do not
know the the ratio of infected devices that access suitable brokerage
accounts, however our dark web data suggests enough accounts do
get hijacked to conduct a Bot2Stock attack (Subsection 4.3).
7.3 Towards Defending Against Bot2Stock
Increasing Transparency & Accountability. The finest level
of data available to traders is layers. Since they aggregate all open
orders at a given price, the trader does not know if a layer is made
up of many tiny orders or a few large ones or even how many
286On the Feasibility of Automating Stock Market Manipulation
ACSAC 2020, December 7–11, 2020, Austin, USA
traders are involved. This is one of the key reasons why it is possible
for criminals to manipulate the market.
As for the exchanges, they can see the orders, but they only
know the identity of the broker, not the brokerage or trader. This
poses a challenge for regulatory bodies like the SEC because if they
want to investigate a trading event, they have to ask the exchange
to identify the broker, then ask the broker for the brokerage, and
then finally ask the brokerage for the customer’s identity.
In the coming years, companies will be required to participate in
the Consolidated Audit Trail program [15], which aims to optimize
the deanonymization process. Initial deployment is still ongoing as
of 2020 and the program raises its own security concerns because
it creates a centralized treasure trove of highly sensitive financial
data (names, SSNs, etc.) [13].
Improving Notifications. Although layering attacks may be
too quick to stop individually, since they take less than a minute to
perform, providing customers with better notifications can reduce
the risk that an intrusion goes undetected for an extended period.
First, Bot2Stock exploits that notifications default to email-only,
which can be filtered server-side. Also sending notifications to a
mobile device via SMS or an application would remove this choke-
point. Second, sending alerts for new logins would make it harder
for adversaries to scope out victim accounts prior to committing
the fraud. However, this will only be effective if the first point is
addressed, otherwise these alerts will also be filtered by the criminal.
Securing Accounts. Bot2Stock relies on bots being able to con-
trol accounts used for trading. It may be tempting to declare that
this can all be solved by mandating the use of 2FA, but unfortu-
nately that would be oversimplifying the problem. Mandating 2FA
is already easily within the current capabilities of brokerages and
yet they choose not to go down this route. One reason is because the
financial industry highly values availability, so they are concerned
about customers losing their second factor. As one industry expert
we interviewed simply stated, customers panic if they cannot access
their money. 2FA is also at odds with algorithmic trading, which
accounts for over 85% of market volume [19].
Anomaly Detection. There is also more work to be done in de-
tecting anomalous trading patterns. Unfortunately, as we point out
in Section 2, existing proposals struggle when the number of iden-
tities performing the manipulation is large. Many of the existing
products are still trying to address fraud perpetrated by one or two
identities, let alone a distributed scheme like Bot2Stock. It is also
unclear how the different network layers can benefit detection. For
example, brokerages are in a prime position to detect when a par-
ticular account’s activity abruptly changes (e.g. trading frequency),
but lack a complete context across brokerages to draw correlations.
Conversely, stock markets lack the per-account activity hidden be-
hind brokers. Thus, a solution will likely require more data sharing
between parties, such as the CAT program mentioned earlier.
8 CONCLUSION
This work presents the first study on the feasibility of automating
stock market manipulation using a botnet. Our design addresses
several key challenges based on data we collected. We determine
which techniques are likely to be used by a botmaster, how they
can be adapted to a distributed network of bots, how it will evade
detection, among other technical challenges.
We implement our design in a proof-of-concept, man-in-the-
browser malware, Bot2Stock, and evaluate it using agent-based
simulations. We discover that 1,000 bots, cumulatively collected
over a yearlong campaign, can yield an average ROI of 1,022% if
1 attack is performed daily, allowing a botmaster to turn $100,000
into $1,022,000. This is consistent with our collected real-world
data and comparable to alternative botnet schemes.
ACKNOWLEDGMENTS
The authors would like to thank Yanick Fratantonio for his contri-
butions in the early stages of this work.
REFERENCES
[1] Michael J Aitken, FH Harris, and Shan Ji. 2009. Trade-Based Manipulation
and Market Efficiency: A Cross-Market Comparison. In Proceedings of the 22nd
Australia Finance Banking Conference. SSRN, 55.
[2] Franklin Allen and Douglas Gale. 1992. Stock-Price Manipulation. The Review of
Financial Studies 5, 3 (1992), 503–529.
[3] Ross Anderson, Chris Barton, Rainer Böhme, Richard Clayton, Michel J. G. van
Eeten, Michael Levi, Tyler Moore, and Stefan Savage. 2013. Measuring the Cost
of Cybercrime. Springer Berlin Heidelberg, Berlin, Heidelberg, 265–300. https:
//doi.org/10.1007/978-3-642-39498-0_12
[4] Manos Antonakakis, Tim April, Michael Bailey, Matt Bernhard, Elie Bursztein,
Jaime Cochran, Zakir Durumeric, J Alex Halderman, Luca Invernizzi, Michalis
Kallitsis, et al. 2017. Understanding the mirai botnet. In 26th USENIX Security
Symposium (USENIX Security 17). 1093–1110.
[5] Samuel Assefa, Danial Dervovic, Mahmoud Mahfouz, Tucker Balch, Prashant
Reddy, and Manuela Veloso. [n.d.]. Generating synthetic data in finance: oppor-
tunities, challenges and pitfalls. ([n. d.]).
[6] Rainer Böhme and Thorsten Holz. 2006. The Effect of Stock Spam on Financial
Markets.
[7] Matthew Brand, Nuria Oliver, and Alex Pentland. 1997. Coupled Hidden Markov
Models for Complex Action Recognition. In CVPR. IEEE, IEEE, 994–999.
[8] Ryan Brunt, Prakhar Pandey, and Damon McCoy. 2017. Booted: An Analysis of a
Payment Intervention on a DDoS-for-Hire Service. In Workshop on the Economics
of Information Security. WEIS, 06–26.
[9] David Byrd, Maria Hybinette, and Tucker Hybinette Balch. 2019. ABIDES:
Towards High-Fidelity Market Simulation for AI Research. arXiv preprint
arXiv:1904.12066 (2019), 13.
[10] Longbing Cao, Yuming Ou, Philip S Yu, and Gang Wei. 2010. Detecting Abnormal
Coupled Sequences and Sequence Changes in Group-Based Manipulative Trading
Behaviors. In Proceedings of the 16th ACM SIGKDD International Conference on
Knowledge Discovery and Data Mining. ACM.
[11] Yi Cao, Yuhua Li, Sonya Coleman, Ammar Belatreche, and Thomas Martin McGin-
nity. 2016. Detecting Wash Trade in Financial Market Using Digraphs and Dy-
namic Programming. IEEE transactions on neural networks and learning systems
27 (2016).
[12] James Chen. [n.d.]. Large Cap (Big Cap). https://www.investopedia.com/terms/l/
large-cap.asp. Accessed: 2020-04-17.
[13] Jay Clayton.
[n.d.].
the Consolidated Au-
https://www.sec.gov/news/public-statement/statement-status-
Statement on Status of
dit Trail.
consolidated-audit-trail. Accessed: 2020-08-21.
[14] YahooFinance. [n.d.]. International Business Machines Corporation (IBM). https:
//finance.yahoo.com/quote/IBM/history. Accessed: 2020-04-17.
[15] FINRA. [n.d.]. The Consolidated Audit Trail. https://www.catnmsplan.com/.
Accessed: 2019-04-03.
[16] Maggie Fitzgerald. [n.d.]. Charles Schwab is Eliminating Online Commissions
for Trading in US Stocks and ETFs. https://www.cnbc.com/2019/10/01/charles-
schwab-is-eliminating-online-commissions-for-trading-in-us-stocks-and-
etfs.html. Accessed: 2020-04-15.
[17] Laura Frieder and Jonathan Zittrain. 2007. Spam Works: Evidence From Stock
[18] Eric Gilbert and Karrie Karahalios. 2010. Widespread Worry and the Stock Market.
Touts and Corresponding Market Activity. Hastings Comm. & Ent. LJ (2007).
In Fourth International AAAI Conference on Weblogs and Social Media.
[19] Morton Glantz and Robert L Kissell. 2013. Multi-Asset Risk Modeling: Techniques
for a Global Economy in an Electronic and Algorithmic Trading Era. Academic
Press.
[20] Koosha Golmohammadi and Osmar R Zaiane. 2015. Time Series Contextual
Anomaly Detection for Detecting Market Manipulation in Stock Market. In 2015
287ACSAC 2020, December 7–11, 2020, Austin, USA
Carter Yagemann, et al.
IEEE International Conference on Data Science and Advanced Analytics (DSAA).
IEEE.
[21] Google. [n.d.]. Search operators you can use with Gmail. https://support.google.
com/mail/answer/7190?hl=en. Accessed: 2020-04-17.
[22] Michael Hanke and Florian Hauser. 2008. On the Effects of Stock Spam E-Mails.
Journal of Financial markets 11 (2008).
[23] Chris Kanich, Christian Kreibich, Kirill Levchenko, Brandon Enright, Geoffrey M
Voelker, Vern Paxson, and Stefan Savage. 2008. Spamalytics: An Empirical Anal-
ysis of Spam Marketing Conversion. In Proceedings of the 15th ACM conference
on Computer and communications security. ACM.
[24] Asim Ijaz Khwaja and Atif Mian. 2005. Unchecked Intermediaries: Price Ma-
nipulation In an Emerging Stock Market. Journal of Financial Economics 78
(2005).
[25] Albert S Kyle and S Viswanathan. 2008. How to Define Illegal Price Manipulation.
American Economic Review 98 (2008).
[26] Mark Langston. [n.d.]. How To: Building A Dark Web Scraper. https://
justhackerthings.com/post/building-a-dark-web-scraper/. Accessed: 2019-02-04.
[27] Aihua Li, Jiede Wu, and Zhidong Liu. 2017. Market Manipulation Detection
[28] Junyi Li, Xintong Wang, Yaoyang Lin, Arunesh Sinha, and Michael P Wellman.
Based on Classification Methods. Procedia Computer Science 122 (2017).
2018. Generating Realistic Stock Market Order Streams. (2018).
[29] Yuexin Mao, Wei Wei, Bing Wang, and Benyuan Liu. 2012. Correlating S&P 500
Stocks with Twitter Data. In Proceedings of the 1st ACM International Workshop
on Hot Topics on Interdisciplinary Social Networks Research. ACM.
[30] Damon McCoy, Andreas Pitsillidis, Jordan Grant, Nicholas Weaver, Christian
Kreibich, Brian Krebs, Geoffrey Voelker, Stefan Savage, and Kirill Levchenko. 2012.
PharmaLeaks: Understanding the Business of Online Pharmaceutical Affiliate
Programs. In 21st USENIX Security Symposium ((USENIX) Security 12).
lation: Theory and Prosecution Evidence. (2004).
[31] Jianping Mei, Guojun Wu, and Chunsheng Zhou. 2004. Behavior Based Manipu-
[32] Microsoft. [n.d.]. Mail flow rule actions in Exchange Online.
https:
//docs.microsoft.com/en-us/exchange/security-and-compliance/mail-flow-
rules/mail-flow-rule-actions. Accessed: 2020-04-17.