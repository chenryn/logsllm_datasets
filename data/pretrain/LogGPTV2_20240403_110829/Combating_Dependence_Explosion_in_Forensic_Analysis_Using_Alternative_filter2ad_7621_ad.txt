### Data from DARPA TC Engagement 3

In the third engagement, the red team's choice of attacks was guided by emerging stealthy Advanced Persistent Threat (APT) techniques. However, they were less concerned with data completeness. For example, audit data collection often began after many background services had already started, making it impossible to track provenance through these services. Additionally, some attacks relied on rootkits or malicious kernel modules that were present on the victim system before audit data collection began. We believe such gaps are inevitable in real-world systems, and thus, the red team data provides a realistic evaluation that would not have been possible if we had generated the data ourselves.

#### Datasets Used

For our evaluation, we utilized datasets from the TRACE and CADETS teams in the DARPA Transparent Computing (TC) program. The TRACE data, referred to as the L-3 dataset, is derived from Linux audit data. The CADETS data, called the F-3 dataset, is derived from FreeBSD DTrace data. More details about these datasets are provided in Table IV.

According to the ground truth, there were four successful attacks and several failed attempts in the L-3 dataset. In the F-3 dataset, there were five attacks, with four being repetitions of the same attack. The final attack, which also appeared in L-3, involved stealing website passwords by luring users to a phishing site. Since this attack did not result in subsequent effects on the victim's machine or network, it is not visible in the system-call audit data and was omitted from our analysis.

**Table IV: Attacks in Our Datasets**

| Dataset | Duration (hh:mm) | Number of Events | 
|---------|------------------|------------------|
| L-3     | 263:05           | 714 M            |
| F-3     | 263:28           | 21 M             |
| L-4     | 15:28            | 36.5 M           |
| F-4     | 11:53            | 37.2 M           |

**Attack Details:**

- **Firefox Backdoor w/ Drakon in-memory:** A malicious website exploits Firefox to execute an in-memory payload, providing a remote console for the attacker.
- **Browser Extension w/ Drakon dropper:** A preexisting malicious Firefox extension drops and executes a malicious file on disk.
- **Phishing Email w/ Executable Attachment:** A malicious executable file sent via email establishes a connection to the attackerâ€™s machine when opened.
- **Nginx Backdoor w/ Drakon in-memory (4 instances):** An Nginx server is exploited using a malicious HTTP request, leading to the execution of several malicious files.
- **Azazel:** A user-level rootkit allows the attacker to connect to the system and run reconnaissance commands.
- **VNC Attack:** A motivating example discussed in Section II.
- **Metasploit:** Malware is downloaded and executed using Metasploit, giving the attacker remote access to run reconnaissance commands.
- **Firefox Drakon:** An in-memory exploit works with a preexisting malicious kernel module for privilege escalation, compromising the sshd server.
- **Dropbear SSH:** A pre-installed Trojan SSH server allows the attacker to log in, run reconnaissance commands, and exfiltrate results.
- **Micro APT:** Two rootkits are uploaded separately, executed, and used to gain root privileges and run multiple reconnaissance commands.

### Data from DARPA TC Engagement 4

The L-4 and F-4 datasets from the fourth red team engagement involve a pair of Ubuntu Linux and a pair of FreeBSD systems interacting with each other. The attacks in this engagement were more stealthy and spanned multiple hosts. However, the adversarial team worked serially, focusing on a single operating system each day, resulting in shorter datasets.

### Effectiveness of Tag Attenuation and Decay

#### Parameter Selection

Our method involves setting the rates of attenuation and decay for benign and suspect environment subjects. These parameters (ab, db, ae, de) can be chosen based on a high-level understanding of their impact on alarms. For instance, if a benign subject s1 reads a file f1 with integrity 0.0 and writes to file f2, which is then read by another benign subject s2, and so on, setting ab = 0.2 limits low-integrity data from propagating beyond two subject-to-object hops. This is a sensible choice, as it is highly unlikely for malicious data to exploit multiple vulnerabilities in sequence.

For suspect environment subjects, we set ae = 0.1 to reflect the greater control attackers have over them. Similarly, the decay rate parameter db can be set based on the time it takes for an exploit to succeed or fail, typically between 50 to 200 milliseconds. We set the half-life of db to 0.25 seconds, meaning the integrity of a benign subject starting at 0.15 will increase to 0.45 in 0.25 seconds. For suspect environment subjects, we use de = 0.5 seconds.

We validate the selection of these parameters through three sets of experiments.

**Table V: Alarm Reduction Due to Tag Attenuation and Decay**

| Alarm Type | L-3 Base | L-3 Ours | L-4 Base | L-4 Ours | F-3 Base | F-3 Ours | F-4 Base | F-4 Ours | Average Base | Average Ours |
|------------|----------|----------|----------|----------|----------|----------|----------|----------|--------------|--------------|
| FileExec   | 479      | 1.31x    | 53       | 18.33x   | 19       | 1x       | 38       | 9.5x     | 138          | 3.89x        |
| MemExec    | 1.45M    | 13.96x   | 337K     | 16.73x   | N/A      | N/A      | N/A      | N/A      | 1.45M        | 15.28x       |
| ChPerm     | 9        | 1.41x    | 66       | 22.45x   | 1.81K    | 1.86x    | 1.82K    | 2.65x    | 1.86K        | 3.53x        |
| Corrupt    | 184K     | 10.53x   | 32K      | 13.68x   | 6.4K     | 1.91x    | 166K     | 16.85x   | 184K         | 8.25x        |
| CDL        | 13.4K    | 40.36x   | 1.88K    | 15.95x   | 41.03K   | 94.19x   | 53.90K   | 4.84x    | 13.4K        | 23.28x       |
| Escalate   | 959      | 1.54x    | 211      | 1.92x    | 113      | 21.98x   | 243      | 4.52x    | 959          | 4.14x        |
| Total Alarms | 1.65M | 11.54x   | 371K     | 16.45x   | 11.32x   | 49.4K    | 7.85x    | 222K     | 11.40x       |              |

The "Base" columns show the alarms generated by SLEUTH [30], while the "Ours" columns show the reduction achieved by MORSE.