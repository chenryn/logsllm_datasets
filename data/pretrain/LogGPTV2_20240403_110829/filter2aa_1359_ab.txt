/index.php?
arrs1[]=99&arrs1[]=102&arrs1[]=103&arrs1[]=95&arrs1[]=116&arrs1[]=101&arrs1[]=10
9&arrs1[]=112&arrs1[]=108&arrs1[]=101&arrs1[]=116&arrs1[]=115&arrs1[]=95&arrs1[]
=100&arrs1[]=105&arrs1[]=114&arrs2[]=47&arrs2[]=46&arrs2[]=46&arrs2[]=47&arrs2[]
=46&arrs2[]=46&arrs2[]=47&arrs2[]=116&arrs2[]=101&arrs2[]=115&arrs2[]=116&arrs2[
]=47
调用都没法调用！无奈还是放弃。代码看累了，连看代码注入的欲望都没有了，不想跟了太麻烦。
放弃 4.0
前面看代码发现问题出在 /web/include/dedesql.class.php  文件中，但基本上只要包含了  
/../include/common.inc.php   核心文件，都会受到影响，再找个能发起 SQL  查询的地方并修改一
下数据库连接地址，就可以尝试 Mysql  恶意服务端读文件漏洞了。  😀
先数据库密码改成 123  让他连接失败看看是否生效 (只对当前发出去的数据包生效，不影响网站正常运
行)
改掉了，有戏 !
但需要解决一个问题，我现在是全局变量追加，所以如果他原来的地址是 127.0.0.1  我也只能在这个
基础上添加修改，不能全部删掉，也就是说我们公网的 mysql  如果是 123.123.123.123  那也只能加
在他的后面，最后变成 127.0.0.1.123.123.123.123 ，要解决这个问题，就只能用域名连接并且要开
启泛解析。
不过开启泛解析很简单随便在 Godaddy  购买个域名，然后添加一条 A  记录指向你的 VPS  主机为 *  
就行了。
读个 /etc/passwd  试试
失败了...  并没有都成功，本来还想着试试 DedeCMS  读文件反序列化的那个打法，可惜了。 但是获取
到了目标的数据库名字和加密的密码，但是这密码基本无解，累了不想折腾了。
进入后台
前几个步骤之所以都尝试一下，本质原因其实是想偷懒，想找个又简单又方便的洞，可奈何这套源码，
前台东西实在太少，很多利用点都在后台，看到后面根本没有看的欲望了。其实一开始的时候我就想到
了控制它的 Mysql  伪造后台认证流程进后台的方法，但是实在是太麻烦了，又要搞域名，又要搞数据
库，就一直不想弄，最后没办法了还是得用，真香。
想要控制认证流程，有几个问题需要解决
1. 控制对方 Mysql  连接，让他连我的数据库  
解决办法:
修改 $cfg_dbhost  全局变量改变数据库连接地址
2. 解决连接地址只能追加的问题 
解决办法:
连接地址用域名，并开启泛解析
3. 要让对方使用他的数据库账号密码认证通过 
解决办法:
复杂:自己伪造 Mysql  客户端，建立连接后不管输入啥返回认证成功数据包，改读文件脚本
就行
简单:搭建一个真实数据库并开启跳过权限认证，达到任意账号密码登录的效果( skip-grant-
tables )
4. 要知道对方的数据库名和表前缀
解决办法:
tcpdump  抓目标回连过来的 Mysql  数据包
5. 要返回认证所需要的数据内容
解决办法
看代码程序本质还是 DedeCMS  直接下载官方的 DedeCMS  搭建把需要的东西拿出来就行
列出来看好像感觉并不复杂，而且每个问题都有解决方案，事实证明也只是有点繁琐而已，是我的偷懒
心理作祟才不想这样干。但其实这里的很多问题都是在前面的尝试阶段就已经解决了，所以到后面直接
走这一步就显得简单。
域名开启泛解析
在 Godaddy  购买一个域名，然后添加一条 A  记录指向你的 VPS  主机设置为 *  就行
数据库跳过权限认证
直接用 docker  启动一个 Mysql 并修改 my.conf  开启跳过权限认证即可
启动
修改 my.conf
tcpdump 抓目标连过来的 Mysql 数据包
也是一条命令的事
监听好以后在登录数据包中添加我构造好的公网开了泛解析的域名 Payload
docker run --name mysql --network=host -e MYSQL_ROOT_PASSWORD=123456 -d -i -p 
3306:3306 mysql:5.6
[mysqld]
pid-file        = /var/run/mysqld/mysqld.pid
socket          = /var/run/mysqld/mysqld.sock
datadir         = /var/lib/mysql
secure-file-priv= NULL
skip-grant-tables  # 添加这条即可
tcpdump -i eth0 -l port 3306 -w mysql.pcap
发送过去，目标像我发起连接，但因为数据库是空的，很快就会响应完成
基本需要的信息在一次连接中就可以抓全了，数据包里包含了数据库用户名，数据库密码 HASH 、数据
库名，查询的表和字段
查询语句
接下来只需要建立对应的数据库和表名、字段并添加相应内容即可，这里用到了多表查询，所以得建立
两个表只需要添加用到的字段即可
需要注意的是 DedeCMS  密码加密，是 32  位取 20  位数据库里面也需要对上，平时渗透搞到的 20  位
密文是需要前减三后减一才能拿去解密的， pubiews  字段在 DedeCMS  中代表了权限，
admin_AllowAll  即为管理员
添加完数据，本地拿抓到的查询语句测试一下是否正常
携带 Payload  重新登录一次，我数据库里管理账号是 1  所以登录数据包也要一致，发送数据包让目标
回连我的数据库，查询到结果即可通过后台鉴权，从而进入后台
Getshell
不想写了， DedeCMS  文件管理器 file_manage_main.php  无脑上传
漏洞检测
访问以下 URL  提示链接数据库失败则说明存在漏洞。若不存在此文件，访问 /index.php  或 /plus  
下的其他文件也可以。
修复方法，升级至最新版本或将 Mysql 类型改为 mysqli  
结束
    $mpwd = md5($pwd);
    $pwd = substr(md5($pwd), 5, 20);
/plus/search.php?
arrs1[]=99&arrs1[]=102&arrs1[]=103&arrs1[]=95&arrs1[]=100&arrs1[]=98&arrs1[]=112
&arrs1[]=119&arrs1[]=100arrs2[]=49&arrs2[]=50&arrs2[]=51
如果代码是完整的 dedecms  源码的话，我估计还有更多的利用链，前台无限制 RCE  也不是不可能。从
发现目标开始到拿下目标花了我两晚，写这一篇水文记录又花了我两晚，我的时间好像都浪费到这种零
零碎碎的琐事上了。有趣事的很多，无聊的烦心事更多。
R3start
2022年1月7日 06点54分