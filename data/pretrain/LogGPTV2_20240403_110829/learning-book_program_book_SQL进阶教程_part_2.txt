证，对于由本书内客和示例代码造成的一切后果，不承担任何责任。
亲本书中的示例代码和脚本，以及执行结果页面都是基于特定环境的参考示例。
亲本书中的公司名、商品名分别是相关公司的商标或注册商标。
---
## Page 10
录
神奇的SQL
1-1CASE表达式
2
在SOL里表达条件分支
练习题
19
1-2自连接的用法
面向集合语言SOL
21
练习题
35
1-3
三值逻辑和NULL
SOL的湿柔陷阱
38
1-4HAVING子句的力量
出彩的配角
55
练习题
70
1-5外连接的用法
..72
SOL的勇点及其超势和对策
72
练习题
92
1-6用关联子查询比较行与行
94
用SOL进行行与行之间的比较
94
练习题
110
1-7用SQL进行集合运算
112
SOL和集合论
112
练习题
12B
---
## Page 11
1-8EXISTS谓词的用法
130
SOL中的谓词逐辑
130
炼习题
146
1-9用SQL处理数列
149
灵活快用谓词逻辑
149
练习题
165
1-10HAVING子句又回来了
167
再也不要叫它配角了！
167
练习题
183
1-11让SQL飞起来
186
简单的性能忧化
186
1-12SQL编程方法
216
确立SOL的端程风格
201
关系数据库的世界
2-1关系数据库的历史
216
1969年
切从这里开始
216
2-2为什么叫“关系”模型
222
为什么不叫“表”模型
222
2-③开始于关系，结束于关系
229
关于封闭世界的幸福
229
2-4地址这一巨大的怪物
233
为什么关系数据库里没有指针
233
2- 5 GROUP BY 和PARTITION BY
238
物以“类”聚
238
---
## Page 12
2-6从面向过程思维向声明式思维，面向集合思维转变的7个关键点
243
图4
243
2-7SQL和递归集合
250
SOL和集合论之间
260
2-8人类的逻辑学
256
浅谈逻辑学的历史
266
2-9消灭NULL委员会
260
全世界的数据库工程师团结起来！
260
2-10SQL中的层级
265
严格的等级社会
265
附录
3-1
习题解答
272
3- 2
参考文献
·296
后记
---
## Page 13
阅读本书时的注意事项
●本书中出现的SQL语句都是尽可能按照标准SQL（SQL-92/99/2003）来写的，对于依赖具体数据库实
现的地方，本书会有明确的说明。
●按照标准SQL的要求，指定表的别名的关键字AS也应该写上，但本书省略了。这是为了避免SQL程序
在Oracle数据库中出错（其他数据库里也一样，省略了就不会出错）。
●RANK、ROW_WUMEER这样的窗口函数（OLAP函数）目前还不能在MySQL数据库中运行。
·正文里的代码在以下数据库中测试运行过。
• Oracle 10g
• SQL Server 2005
+ DB2 9.1
• PostgreSQL 9.6
• MySQL 5.0
●正文里提到Oracle、MySQL等数据库而未指定版本时，请参照上述版本。
●关于用于创建示例用表的SQL语句和示例代码等，请参考如下网站。
http:/www.ituaring.com.cn/book/1813（请点击“随书下载”下载中文版相关资料）
http:/www.geocities.jp/imickindex/database/db_suppor_sinan.html (f作者MICK的日文网3站 )
---
## Page 14
第
章
神奇的SQL
1-1
CASE表达式
1-7
用SQL进行集合运算
1-2
自连接的用法
1-8
EXSTS谓词的用法
1-3
三值逻辑和NULL
1-9
用SQL处理数列
1-4
HAVING子句的力量
1-10 :
HAVING子句又回来了
1-5
外连接的用法
1-11
让SQL飞起来
1-6
用关联子查询此较行与行
1-12 .
SQL编程方法
---
## Page 15
第1章神奇的SQL
CASE表达式
在SQL里表达条件分支
CASB表达式是SQL里非常重要而且使用起来非常便利的技术，我们应该学会用它来措述条件分支。
本节将通过行列转换、已有数据重分组（分类）与的束的结合使用、针对聚合结果的条件分支等例题。
来介绍CASB表达式的用法。
写在前面
CASE表达式是从SQL-92标准开始被引入的。可能因为它是相对较新
的技术，所以尽管使用起来非常便利，但其真正的价值却并不怎么为人所
知。很多人不用它，或者用它的简略版函数，例如 DECODE（Oracle）、IF
（MySQL）等。然而，正如Joe Celko所说，CASE表达式也许是 SQL-92
标准里加入的最有用的特性。如果能用好它，那么SQL能解决的问题就
会更广泛，写法也会更加漂亮。而且，因为CASE表达式是不依于具体
数据库的技术，所以可以提高SQL代码的可移植性。这里强烈推荐大家
注
改用CASE表达式，特别是使用D&coDB函数的Oracle用户·。
1B:0DR 是 Oracle 用户很熟愚的
函数，它有以下国个不如CA路
本节，我们将通过具体的例题来学习优点众多的CASE表达式。
表达式的地方。
- 它是Oracle 独有的函数。所以
分支数最大支持127个（参数
不具有可移植性。
CASE表达式概述
上限 255 个。一个分支重要 2
个参数 L,
首先我们来学习一下基本的写法，CASE表达式有简单CASE表达式
·如果分支数增加，代码会空得
非营难读。
（simple case expression）和搜索 CASE 表达式（searched case expression）
表达能力较竭。具体来说，参
两种写法，它们分别如下所示。
数里不经使用调间，也不能嵌
套子查次。
■CASE表达式的写法
-简单CASE表达式
CASS sex
WHEN1THEN男
XHEN '2' THEN′女'
BLSE·其他·END
---
## Page 16
11CASE表达式—
3
--搜索CASB表达式
. NSHI ,T, - XOR N3N SYO
MHEN BeX ='2' THEN 女
ELSE*其他’END
这两种写法的执行结果是相同的，“sex”列（字段）如果是‘1'，那
么结果为男：如果是“2'，那么结果为女。简单CASE表达式正如其名，写
法简单，但能实现的事情比较有限。简单CASE表达式能写的条件，搜索
CASE表达式也能写，所以本书基本上采用搜索CASE表达式的写法。
我们在编写SQL语句的时候需要注意，在发现为真的WHEN子句时，
CASE表达式的真假值判断就会中止，而剩余的WHEN子句会被忽略。为了
避免引起不必要的混乱，使用WHEN子句时要注意条件的排他性。
■剥余的WHEN子句被忽略的写法示例
-例如，这样写的话，结果里不会出现“第二”
CASE NHEN co1_1 IN (a, *b THEN *第1
（）NI TTOO REHM
ELSE 其他 END
THEN‘第二
此外，使用CASE表达式的时候，还需要注意以下几点。
注意事项1：统一各分支返回的数据类型
虽然这一点无需多言，但这里还是要强调一下：一定要注意CASE表
达式里各个分支返回的数据类型是否一致。某个分支返回字符型，而其他
分支返回数值型的写法是不正确的。
注意事项2：不要忘了写END
使用CASE表达式的时候，最容易出现的语法错误是忘记写END。虽
然忘记写时程序会返回比较容易理解的错误消息，不算多么致命的错误。
但是，感觉自己写得没间题，而执行时却出错的情况大多是由这个原因引
起的，所以请一定注意一下。
注意事项3：养成写ELSE子句的习惯
与 END不同，ELSE子句是可选的，不写也不会出错。不写ELSE子句时，
CASE表达式的执行结果是NULL。但是不写可能会造成“语法没有错误，结
---
## Page 17
一第1章种奇的SQL
果却不对”这种不易追查原因的麻烦，所以最好明确地写上BLSE子句（即便
是在结果可以为NULL的情况下）。养成这样的习惯后，我们从代码上就可以
清楚地看到这种条件下会生成NULL，而且将来代码有修改时也能减少失误。
将已有编号方式转换为新的方式并统计
在进行非定制化统计时，我们经常会遇到将已有编号方式转换为另外
一种便于分析的方式并进行统计的需求。
例如，现在有一张按照“1：北海道”、“2：青森”、、‘47：冲绳”
注0
这种编号方式来统计都道府县·人口的表，我们需要以东北、关东、九州
日本的省级行政单位有都、道
府、县，包含一都[东京都入
等地区为单位来分组，并统计人口数量。具体来说，就是统计下表PopTbl
二府 (京都府和大医府入 一道
1 比海道 1 和诸多的县, 披称都
中的内容，得出如右表“统计结果”所示的结果。
道准具。多个较近的且被划归到
一个地区,加关东地区、大州烽
■统计数原表PopTb
■块计结果
区等。类作我国的华北地区、华
南地区等账念：——译者注
[具名】
po
地区名
人口
德岛