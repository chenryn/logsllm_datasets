MVP
试验
Build
下游 API 格式
（Spring、Django）
Discover Define Delivery
“ ” Prompt
流程与 语⾔ ⼯程 数据与 ⼯程 上下⽂与平台⼯程
● ● MVP ●
软件开发过程资产化 与微调试验 上下⽂⼯程
● “ ” ● ●
资产的 语⾔建模 增量引导指标设计 持续反馈的平台⼯程
Discover
探索阶段
API
软件⼯程过程资产化（ 示例）
LLM
基于私有化 的新⼯序⼀部分取决于：已有的软件过程资产（基于架构规范）
挑战：
1.
定义概念
2.
标准化流程（⼯序）
3.
审视规范
4.
过程资产
新机遇？
“ ”
资产的 语⾔建模
探索适合于⼤语⾔模型的资产代码化形式
功能需求
建模 API Spec
源
格
式
API Method Request Response Error Response
/v3/alipay/boss/fnc/ [200: { "resultset": "123"}, 400: {"error":
可 POST
invoice/apply 500: {}] String}
视
化
/v3/alipay/boss/fnc/ 400: {"error":
POST [200: {}, 500: { "value": ""}]
invoice/batchquery String}
/v3/alipay/boss/fnc/ invoice_id: 400: {"error":
GET [200: {}, 500: { "value": ""}]
invoice/query?invoice_id 123 String}
Define
定义阶段
26
MVP Prompt
与微调试验：数据处理与 优化
对已有数据进⾏标准化，⽣成指令格式数据集（反复多次）
预期数据结果 两种不同⽅式
{
"instruction": "⽣成 RESTful API
接⼝",
"input": "查看账户收⼊,添加收⼊记录,修改收⼊记
录,删除收⼊记录",
"output": "## Enrichment API\n\n>
Incomes\n| API | Method | Description |
Request | Response | Error Response |\n|
OpenAI
基于已有数据⽣成 蒸馏
--- | --- | --- | --- | --- | --- |\n| /
api/incomes/?page=1&account=uuid | GET |
| page: 1, account: uuid | [200: {}, 401:
1. 内部数据集不够时，可以模拟场景
1. 收集公开数据集（HuggingFace..）
[\t{\t\t\"code\":
\"\",\t\t\"message\":
2. 降低⼈⼯成本
2. 收集和公司内部的私有数据（整理）
\"\",\t\t\"request_id\":
\"\"\t},\t{\t\t\"code\":
\"\",\t\t\"message\":
\"\",\t\t\"request_id\":
\"\"\t}]] | 400: {\"error\":
String} |\n|
…
设计增量引导指标
5% -> 10%
作为分阶段的微调⽬标：
HumanEval
示例
API Eval
量级评估
（评估代码⽣成质量）
场景 数据 数据来源
辅助功能需求 1k, 3k 个⽤户故事 结合公开搜集到的应⽤类
（AC编写） 微调及⽣成结果对⽐ 型，调⽤ OpenAI 进⾏⽣成
10k，20k, 40k, 80k 个代码
辅助编码
⽚段 公开的代码数据集
（特定上下⽂）
微调及⽣成结果对⽐
1k, 3k 个 API spec 业界各银⾏的开放银⾏API资
辅助API设计 ⼿写⾼质量的⼤模型测试⽤例
结果对⽐ 料数据格式化后作为数据集
（TODO）
基于 ChatGLM（6B）、LLaMA（7B） 微调试验
图出⾃： https://arxiv.org/abs/2303.17568
3k 能达到初步可⽤
Delivery
交付阶段
29
token
有限 的上下⽂⼯程：提供⾜够丰富的上下⽂
上下⽂的构建应该被当作是⼀个⼯程、策略，⽽不是⼀个简单的事情。
prefix
（⽂件路径 + 其它⽂件 + 光标前代码）
suffix
2048
上限
（光标后代码）
IDEA Prompt
潜在的相关信息 ⽣成的
参考来源 1：https://github.com/thakkarparth007/copilot-explorer
参考来源 2：https://github.com/saschaschramm/github-copilot
（反复计算）
持续反馈的平台⼯程
与已有⼯具集成，构建起⾃动调优闭环，持续收集数据和反馈
迭代调整建议
更新格式
迭代更新数据集
或Prompt
BizDevOps
在 ⼯具平台
收集组织中已有需求资产
微调
“ ”
定义 代码化
中应⽤，并记录采纳结果
（如测试⽤例）；转换为
LLM
（⽣成可⽤ ）
格式规范
及反馈信息
“ ”
代码化 规范格式数据集
以代码化格式
集成数据
LLM BizDevOps
训练管理⼯具 各系统
- — ——
未来展望
总结⼀下
1 2 3 4 5
设计端到端实验 验证可⾏性 新⼯序假设 软件⼯程流程重新梳理 语⾔建模
最好的⼤语⾔模型能带来什么？
10 9 8 7 6
持续反馈的平台⼯程 Showcase ⼯具链集成 MVP 微调试验 数据收集
Test and review
{O} {P} {M}
Analyse
Manager
Deploy
如何⼯程化？
Design
Develop
AI
⽆缝集成到研发⼯具链
AI BizDevOps
探索如何把 ⽆缝集成到 ⼯
Hackathon
具链中，评估技术可⾏性和实施难度
产品规划 需求分析 研发实现 发布运维 持续运营
• 业务术语清单 • 特性功能流程图 • 领域模型图 • 部署脚本 • ⽂案内容
• 业务分析结果 • ⽤户故事清单 • 序列图 • 发布说明 • 营销图⽚⽂案
AI
• 专题画布/电梯演 • ⽤户故事编写 • 状态图 • 产品说明⽂档 • 营销视频脚本
辅
• 验收标准⽣成 • API接⼝定义 • FAQ • 评价分析结果
讲
助
• … • FAQ
• ⽤户画像/场景/旅程 • 测试⽤例
触
• 低保真原型图 • 测试代码
点
• MVP特性清单 • 代码
• 发布计划 Chatbot IDE Copilot Plugin Chatbot
• ..
平
台
交
互
形
式 AutoDev示例
BizDevOps⼯具台
PS：先验证公开可⽤的 LLM 带来的提升 https://github.com/prompt-engineering/chat-chess
LLM
对⼈才和组织结构的影响？
LLM
取决于我们如何看待
LLM as toolset LLM as member LLM as God
https://github.com/unit-mesh
欢迎⼀起探讨：