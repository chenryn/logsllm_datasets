### Overview of S1AP and X2AP Functions

- **E-RAB Management Functions**: Includes setup, management, and modification of E-RABs.
- **Initial Context Transfer Function**: Establishes an S1UE context in the eNodeB to set up E-RABs, IP connectivity, and NAS signaling.
- **UE Capability Info Indication Function**: Provides UE capability information.
- **Mobility Functions for UE**: Active in LTE networks during changes in eNodeB or RAN (e.g., location change).
- **Paging**: Enables the MME to page the UE.
- **NAS Signaling Transport**: Facilitates the transport of NAS messages.
- **S1 UE Context Release/Modification Functions**: Modifies and releases UE context information.
- **Status Transfer**: Transfers Packet Data Convergence Protocol (PDCP) SN and status information between two eNodeBs.
- **Trace Functions**: Supports tracing and logging.
- **Location Reporting Functions**: Provides location reporting capabilities.
- **LPPa Signaling Transport**: Transfers LPPa messages between eNodeB and E-SMLC.
- **S1 CDMA2000 Tunneling Functions**: Carries CDMA2000 signaling messages between the UE and the CDMA2000 RAT.
- **Warning Message Transmission**: Sends warning messages.
- **RAN Information Management (RIM) Functions**: Transfers RAN system information between two RAN nodes.
- **Configuration Transfer Functions**: Requests and transfers RAN configuration information.

### Getting Started with S1-MME

- **S1 Setup Request**: Only the S1 Setup Request is needed initially.
- **fake_mme.py**: A script for simulating MME functions.

### Working with S1AP

- **After S1 Setup Request**: Several messages can be sent.
- **S1AP Scanner**: Published on [www.insinuator.net](http://www.insinuator.net).
- **S1AP Enum**: Enumeration of S1AP messages.
- **S1AP Dizzy Scripts**: Scripts for testing and fuzzing S1AP.
- **New Scripts**:
  - **fake_mme.py**: Simulates MME functions.
  - **sctp_mitm.py**: Man-in-the-middle tool for SCTP.

### Operations & Maintenance Network

- **Attacking the Local and Remote Maintenance Interface**:
  - After the host 10.27.99.173 on VLAN 3 becomes available, the eNodeB starts searching for an NTP server.
  - It also tries to establish a TCP session with a management system.

### Nmap Results

- **Host 10.27.99.174**:
  - Scanned at 2015-12-28 19:16:02 CET for 842 seconds.
  - Open ports: 21 (FTP), 22 (SSH), 23 (Telnet), 80 (HTTP), 8443 (TCP-wrapped), 56834 (unknown).
  - SSH Host Keys and XMLRPC methods are detailed in the scan report.

### Maintenance Workflow

1. **Fault-State of BaseStation (NoService)**.
2. **Engineer moves on-site**.
3. **Engineer connects to BTS with $tool**.
4. **Engineer accesses debug information**.
5. **Engineer adjusts configuration**.

### LMT Software Installation

- **Windows XP Compatibility**: The software is compatible with Windows XP.

### Security Considerations

- **eNB Security**: Setting up and configuring eNBs should be authenticated and authorized to prevent unauthorized modifications.
- **IP Connection**: 4G BaseStations are network devices with IP connections, as per 3GPP TS 33.401.

### Observations

- **Services**: FTP, Telnet, and SSH are running.
- **EM (Element Manager)**: Uses outdated Java, does not ask for a password, and is based on HTTP and GIOP.
- **Configuration Data**: Transmits current configuration data of the BTS and allows unauthorized configuration changes.
- **Credentials**: Default credentials include `rbs` and `cellouser`.

### Webserver Details

- **WEBS - OSE web server**: Running on the device.
- **Java JDK Versions**: 1.1.6, 1.2.1, 1.3.1, 1.4.2, 1.5.0, 1.6.0.
- **Load Resistance**: The server is not very load-resistant, leading to potential DoS attacks.

### Insights

- **RTOS OSE 5.5**: Running on a Motorola MPC 85xx, assisted by FPGA + ARM.
- **GZIP Volumes and Files**: Start with `1F 8B` and hold the OS on a Flashdisk.
- **Image and File Formats**: PPC Binaries have the format `*.ppc.elf.strip.pl.conf`, and files are gziped, allowing extraction of configuration data and reverse engineering.

### Ramlog

- **Ramlog Output**: Displays the boot process and initialization of various services on the eNodeB.

### Ownership and Configuration

- **BaseStation**: Likely from the US, based on log file entries.
- **Password Management**: Users `cellouser` and `rbs` are present, but `rbs` is not in the passwd file. Passwords can be changed using the `passwd` command.

### SSH Access

- **SSH Enabled**: SSH access is enabled, but the only supported key exchange algorithm is `diffie-hellman-group1-sha1`, which is disabled by default in current SSH clients.

### Cell and UE Traces

- **Traces**: The eNodeB can create traces for cells and UEs. Found traces contain data on packet loss but no "interesting" information.

### GIOP Remote Session

- **TCP Session**: The eNodeB attempts to establish a TCP session with 5.211.14.4, sending a simple GIOP request, likely related to Java IDL: Interoperable Naming Service (INS).

### IP Address: 5.211.14.4

- **Public IP**: The only public IP address the device talks to, located in Iran.
- **Provisioning**: The eNodeB was provisioned and set up in 2013, and the IP address range was registered in 2012 for an Iranian telco.

### Summary

- **Signaling**: Security based on IPSec, but keys might be easily obtained via local access.
- **OAM**: Hardcoded passwords and weak management protocols.
- **Physical Access**: LMT, no local encryption, and debug interfaces.

### Contact Information

- **ERNW Website**: [www.ernw.de](http://www.ernw.de)
- **Insinuator Website**: [www.insinuator.net](http://www.insinuator.net)
- **Contact**: PI:EMAIL
- **Social Media**: @hendrks_, @BadgeWizard

Thank you for your attention!