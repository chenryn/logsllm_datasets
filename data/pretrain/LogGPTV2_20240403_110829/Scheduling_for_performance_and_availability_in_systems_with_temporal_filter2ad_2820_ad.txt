c
c
 10
FCFS N=800
SWAP N=1000
 1
 0
 5000
 10000
 15000
round trip time
 20000
 25000
Figure 11. Illustrating the CCDF of RTT in a network
with M = 2, λ1 = 2, and ACF1. The solid curve shows
the results in the experiment with N = 800 under the FCFS
policy and the dashed curve presents the results in the ex-
periment with N = 1000 under SWAP.
Regarding availability, SWAP enables the system to sus-
tain higher loads compared to the FCFS policy. For in-
stance, for N = 800 and FCFS scheduling, 80% of requests
experience RTTs less than 1146 when no delaying of jobs
occurs, see the solid curve in Figure 11. However, even for
N = 1000 requests, the fraction of requests having round
trip times less than 1146 becomes 95% with SWAP (see the
dashed curve in Figure 11). That is, SWAP is able to give a
remarkably better performance to most jobs than with FCFS
even if the overall population is increased by 200 requests.
This makes immediately clear that SWAP can be very effec-
tive in addressing request bursts that threaten system avail-
ability.
3.5 Sensitivity to Network Size
We evaluate the sensitivity of SWAP to the network size
by evaluating throughput improvement for M = 2, 3, 4.
Except for the autocorrelated queue QACF , the remaining
M − 1 resources are queues with exponential service times.
In order to evaluate the different impact of service times
that are balanced or unbalanced with respect to the service
at QACF , we consider the sets of rates shown in Table 3,
see the initial part of this section for related notation.
Figure 12 shows throughput improvement provided by
the three scheduling disciplines. Note that the ﬁrst experi-
International Conference on Dependable Systems & Networks: Anchorage, Alaska, June 24-27 20081-4244-2398-9/08/$20.00 ©2008 IEEE343DSN 2008: Mi et al.M QACF
µ = 1
2
3
µ = 1
4
µ = 1
Q1
Exp
λ1 = 1
λ1 = 1
λ1 = 1
Q2
Exp
N/A
λ2 = 0.25
λ2 = 0.25
Q3
Exp
N/A
N/A
λ3 = 1
Table 3. Queue service rates in the three experiments used
to study SWAP sensitivity to different network sizes.
FCFS
SWAP
SJF
52.7%
29.5%
the performance of SJF without the need of additional in-
formation about job service times. The sensitivity results
on the various autocorrelation proﬁles have proved that the
gains are more pronounced in presence of higher tempo-
ral dependent workloads. This suggests that SWAP is an
effective solution to increase performability in systems pro-
cessing this type of workloads. Sensitivity analyses to the
number of queues in the network and system load show that
the gains of SWAP are visible in a variety of different con-
ditions.
26.3%
15.8%
4 Related Work
t
u
p
h
g
u
o
r
h
t
 0.9
 0.8
 0.7
 0.6
 0.5
 0.4
 0.3
 0.2
4.3%
8.6%
M=2
M=3
M=4
Figure 12. Sensitivity to network size in a network with
N = 500 and ACF1, where the relative improvement over
the FCFS policy is indicated on each bar.
ment is different from the conditions of Table 1, since here
the two queues are balanced. As the number of queues in
the network increases, the relative improvement over the
FCFS policy decreases. We interpret this effect by observ-
ing that since there are more exponential servers in the net-
work, the temporal dependence of the successive requests
at the queues are much weaker than in the experiments con-
sidered before. That is, throughout its path, each request
is served multiple times by exponential service processes
without temporal dependence and therefore the temporal lo-
cality effects in the network are reduced. Therefore, the
reduced gain in this experiment is rather a consequence of
the more limited margin for improvements on these network
rather than a limit of SWAP. In fact, we see that also SJF im-
proves modestly with respect to the FCFS case. Preliminary
experiments indicate that if SJF or SWAP are deployed at
multiple queues with temporal dependent workloads, then
overall system performance and availability beneﬁt signiﬁ-
cantly. We leave the detailed investigation of these proper-
ties of SWAP for future work.
We complete the analysis in this subsection with Fig-
ure 13 that plots the CCDF of job RTTs for the three ex-
periments. Consistently with the results presented in the
previous cases, SWAP delays only 2-3% of requests but
achieves better performance for most requests. The results
are consistent with the properties of SWAP observed in the
previous experiments, and the results are almost indistin-
guishable across the three experiments.
3.6 Summary of Experiments
The extensive experimentation carried out in this sec-
tion has revealed that SWAP can effectively approximate
A large literatures on scheduling policies (disciplines)
have been developed over the years (see [6] and [5] and ref-
erences therein). Recently, Friedman and Henderson intro-
duce a preemptive scheduling policy for Web servers in [6].
This new policy called Fair Sojourn Protocol (FSP) pro-
vides both efﬁciency and fairness for the sojourn time of the
jobs. The Priority-based Blind Scheduling (PBS) policy ap-
proximates the existing standard blind scheduling policies,
e.g., FCFS, PS, and LAS, by tuning a single parameter [5].
The Generalized Processor Sharing (GPS) policy is stud-
ied in the literature [10]. For a two-class GPS system, the
admission region is selected for the general Gaussian traf-
ﬁc sources which contain the service processes with both
long-range dependence and short-range dependence. How-
ever, to our best knowledge, no existing policy considers the
structure of temporal locality in scheduling for systems.
Several papers have investigated the idea of using mea-
sured autocorrelation in capacity control policies.
In [7]
a general framework for measurement-based call admis-
sion control is introduced. Admission decisions are taken
by means of an approximate Gaussian model of the aggre-
gated trafﬁc which is parameterized by the measured mean,
variance and correlation of the superposed ﬂows. Similar
approaches appear frequently in the networking literature,
e.g., in the call admission control in VBR trafﬁc [3], for data
communications over CDMA mediums [18], and for gen-
eral self-similar multiplexed trafﬁc modeled as fractional
Brownian motion (fBm) [17]. However, these works differ
substantially in the scope and approach of the present paper
for several reasons. First, network ﬂows can have highly-
variable bandwidth requirements that are non-stationary
and difﬁcult to model outside heavy trafﬁc or asymptotic
regimes; instead service in systems typically shows consis-
tent functional forms which are easier to model and can be
exploited effectively to control system load. Another im-
portant difference is that network trafﬁc is often modeled
as a superposition of ﬂows which share the available band-
width according to a discriminatory or generalized process-
sharing policy; this assumption is instead often unrealistic
in systems, e.g., when the scheduling discipline is approx-
International Conference on Dependable Systems & Networks: Anchorage, Alaska, June 24-27 20081-4244-2398-9/08/$20.00 ©2008 IEEE344DSN 2008: Mi et al.)
%
(
f
d
c
c
 100
 10
 1
 0.1
 0.01
 0.001
(a) M = 2
FCFS
SJF
SWAP
 1
 10
 100
 1000
 1e4
 1e5
 1e6
round trip time
)
%
(
f
d
c
c
 100
 10
 1
 0.1
 0.01
 0.001
 1
(b) M = 3
FCFS
SJF
SWAP
 100
 1e4
 1e6
 1e8
round trip time
)
%
(
f
d
c
c
 100
 10
 1
 0.1
 0.01
 0.001
 1
(c) M = 4
SWAP
SJF
FCFS
 10
 100
 1000
round trip time
 1e4
 1e5
Figure 13. Illustrating the CCDF of round trip time in a network with N = 500 and ACF1. The number of queues in the network
is (a) M = 2, (b) M = 3, and (c) M = 4.
imately ﬁrst-come ﬁrst-served (FCFS). FCFS scheduling is
also found in networks, e.g., in ATM communication, but
the service time distributions are here usually deterministic
or Erlang, whereas high job size variability in systems is a
fundamental factor of congestion.
5 Conclusions
In this paper, we have proposed SWAP, a no-knowledge
scheduling technique for increasing the performability of
systems processing temporal dependent workloads. Tempo-
ral locality has been observed in several practical settings,
arguing for signiﬁcant applicability of SWAP in real sys-
tems. Using simulation, we have shown that SWAP con-
sistently improves performance, as quantiﬁed by the system
mean throughput and by the distribution of round-trip times
experienced by requests under temporal dependent condi-
tions. We have shown that SWAP is able to approximate
effectively the SJF scheduling techniques which is known
to provide very effective results in systems, but requiring
additional knowledge on job service times that is instead
not required by SWAP.
Future work includes the extension of SWAP for
scheduling multiple classes of jobs, the analytical model-
ing of the maximum achievable performance gains under
temporal dependent workloads and the additional validation
of SWAP in complex distributed networks, e.g., in systems
that are best modeled by several queues with temporal de-
pendent service.
References
[1] A. T. Andersen and B. F. Nielsen. On the statistical impli-
cations of certain random permutations in markovian arrival
processes (MAPs) and second-order self-similar processes.
Perf. Eval., 41(2-3):67–82, 2000.
[2] M. F. Arlitt and C. L. Williamson. Web server workload
characterization: The search for invariants. In Proc. of ACM
SIGMETRICS, pages 126–137, 1996.
[3] H. Chu, D. Tsang, and T. Yang. Bandwidth allocation for
VBR video trafﬁc in ATM networks. In Proc. of IEEE ICC,
pages 612–615. IEEE Press, 1995.
[4] P. J. Denning and J. P. Buzen. The operational analysis of
queueing network models. ACM Comp. Surv., 10(3):225–
261, 1978.
[5] H. Feng, V. Misra, and D. Rubenstein. PBS: a uniﬁed
In Proc. of ACM SIGMETRICS
priority-based scheduler.
’07, pages 203–214, New York, NY, USA, 2007. ACM.
[6] E. J. Friedman and S. G. Henderson. Fairness and efﬁciency
in web server protocols. In Proc. of ACM SIGMETRICS ’03,
pages 229–237, New York, NY, USA, 2003. ACM.
[7] M. Grossglauser and D. N. C. Tse. A framework for robust
measurement-based admission control. IEEE/ACM T. Net-
working, 7(3):293–309, 1999.
[8] S. K. P. L. H Leemis. Discrete-Event Simulation: A First
Course. Prentice Hall, 2005.
[9] H. Li and M. Muskulus. Analysis and modeling of job ar-
rivals in a production grid. SIGMETRICS Perform. Eval.
Rev., 34(4):59–70, 2007.
[10] P. Lieshout, M. Mandjes, and S. Borst. GPS scheduling: se-
lection of optimal weights and comparison with strict prior-
ities. In Proc. of ACM SIGMETRICS ’06/Performance ’06,
pages 75–86, New York, NY, USA, 2006. ACM.
[11] D. Menasce and V. A. F. Almeida. Capacity Planning for
Web Performance: Metrics, Models, and Methods. Prentice
Hall, 1998.
[12] N. Mi, Q. Zhang, A. Riska, E. Smirni, and E. Riedel. Perfor-
mance impacts of autocorrelated ﬂows in multi-tiered sys-
tems. Perf. Eval., 64(9-12):1082–1101, 2007.
[13] M. F. Neuts. Structured Stochastic Matrices of M/G/1 Type
and Their Applications. Marcel Dekker, New York, 1989.
[14] A. Riska and E. Riedel. Long-range dependence at the disk
drive level. In Proc. of 3rd Conf. on Quantitative Evaluation
of Systems (QEST), pages 41–50. IEEE Press, 2006.
[15] L. Schrage. A proof of the optimality of the shortest re-
maining processing time discipline. Oper. res., 16:687–690,
1968.
[16] B. Urgaonkar, G. Paciﬁci, P. J. Shenoy, M. Spreitzer, and
A. N. Tantawi. An analytical model for multi-tier inter-
net services and its applications. In Proc. of SIGMETRICS,
pages 291–302. ACM, 2005.
[17] J. Wang and A. Erramilli. A connection admission control
algorithm for self-similar trafﬁc. In Proc. of IEEE GLOBE-
COM, pages 1623–1628. IEEE Press, 1999.
[18] J. Zhang, M. Hu, and N. Shroff. Bursty data over CDMA:
MAI selfsimilarity, rate control, and admission control. In
Proc. of IEEE INFOCOM, 2002.
International Conference on Dependable Systems & Networks: Anchorage, Alaska, June 24-27 20081-4244-2398-9/08/$20.00 ©2008 IEEE345DSN 2008: Mi et al.