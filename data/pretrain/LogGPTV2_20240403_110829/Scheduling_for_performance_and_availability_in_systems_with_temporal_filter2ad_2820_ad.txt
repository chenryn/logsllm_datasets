### 10. Performance Analysis

#### FCFS vs. SWAP
- **FCFS (N=800)**
- **SWAP (N=1000)**

**Round Trip Time (RTT)**
- 0
- 5000
- 10000
- 15000
- 20000
- 25000

**Figure 11.** CCDF of RTT in a network with M = 2, λ1 = 2, and ACF1. The solid curve represents the results for N = 800 under the FCFS policy, while the dashed curve shows the results for N = 1000 under the SWAP policy.

**Availability Comparison:**
- **FCFS (N = 800):** 80% of requests experience RTTs less than 1146 when no job delays occur.
- **SWAP (N = 1000):** 95% of requests have RTTs less than 1146, even with an increase of 200 requests.

This indicates that SWAP provides significantly better performance for most jobs compared to FCFS, even under higher loads. This makes SWAP highly effective in managing request bursts that could otherwise threaten system availability.

### 3.5 Sensitivity to Network Size

We evaluate the sensitivity of SWAP to the network size by measuring throughput improvement for M = 2, 3, 4. For all configurations except the autocorrelated queue QACF, the remaining M − 1 resources are queues with exponential service times. To assess the impact of balanced and unbalanced service times relative to QACF, we use the sets of rates shown in Table 3.

**Table 3.** Queue service rates in the three experiments used to study SWAP sensitivity to different network sizes.

| M | QACF (µ = 1) | Q1 (Exp, λ1 = 1) | Q2 (Exp, λ2 = 0.25) | Q3 (Exp, λ3 = 1) |
|---|--------------|------------------|---------------------|------------------|
| 2 | 1            | 1                | N/A                 | N/A              |
| 3 | 1            | 1                | 0.25                | N/A              |
| 4 | 1            | 1                | 0.25                | 1                |

**Figure 12.** Sensitivity to network size in a network with N = 500 and ACF1, where the relative improvement over the FCFS policy is indicated on each bar.

- **FCFS:** 52.7%
- **SWAP:** 29.5%
- **SJF:** 26.3%

As the number of queues increases, the relative improvement over the FCFS policy decreases. This is because the temporal dependence of successive requests at the queues becomes weaker as more exponential servers are added, reducing the temporal locality effects. Therefore, the reduced gain is due to the limited margin for improvement rather than a limitation of SWAP. Preliminary experiments suggest that deploying SJF or SWAP at multiple queues with temporally dependent workloads can significantly enhance overall system performance and availability.

**Figure 13.** CCDF of round trip time in a network with N = 500 and ACF1. The number of queues in the network is (a) M = 2, (b) M = 3, and (c) M = 4.

- **M = 2:** SWAP delays only 2-3% of requests but achieves better performance for most requests.
- **M = 3:** Results are consistent with the previous experiment.
- **M = 4:** Results are almost indistinguishable from the previous experiments.

### 3.6 Summary of Experiments

Extensive experimentation has shown that SWAP can effectively approximate the performance of SJF without requiring additional information about job service times. The sensitivity results on various autocorrelation profiles indicate that SWAP's gains are more pronounced in the presence of higher temporal dependency in workloads. This suggests that SWAP is an effective solution for increasing performability in systems processing such workloads. Sensitivity analyses to the number of queues and system load show that SWAP's benefits are visible under a variety of conditions.

### 4. Related Work

A substantial body of literature on scheduling policies (disciplines) has been developed over the years. Recent works include:

- **Fair Sojourn Protocol (FSP) [6]:** Provides both efficiency and fairness for the sojourn time of jobs in web servers.
- **Priority-based Blind Scheduling (PBS) [5]:** Approximates standard blind scheduling policies by tuning a single parameter.
- **Generalized Processor Sharing (GPS) [10]:** Studies the admission region for general Gaussian traffic sources with long-range and short-range dependencies.

However, to our knowledge, no existing policy considers the structure of temporal locality in scheduling for systems. Several papers have explored using measured autocorrelation in capacity control policies, but these differ in scope and approach. For example, network flows often have highly variable bandwidth requirements, which are difficult to model outside heavy traffic or asymptotic regimes. In contrast, service in systems typically shows consistent functional forms, making it easier to model and control system load.

### 5. Conclusions

In this paper, we proposed SWAP, a no-knowledge scheduling technique for increasing the performability of systems processing temporally dependent workloads. Temporal locality has been observed in several practical settings, indicating significant applicability of SWAP in real systems. Simulation results show that SWAP consistently improves performance, as quantified by system mean throughput and the distribution of round-trip times under temporal dependent conditions. We demonstrated that SWAP can effectively approximate the SJF scheduling technique, which is known to provide excellent results but requires additional knowledge of job service times, which SWAP does not.

**Future Work:**
- Extend SWAP for scheduling multiple classes of jobs.
- Analytically model the maximum achievable performance gains under temporal dependent workloads.
- Validate SWAP in complex distributed networks, such as those best modeled by several queues with temporal dependent service.

### References

[1] A. T. Andersen and B. F. Nielsen. On the statistical implications of certain random permutations in markovian arrival processes (MAPs) and second-order self-similar processes. Perf. Eval., 41(2-3):67–82, 2000.

[2] M. F. Arlitt and C. L. Williamson. Web server workload characterization: The search for invariants. In Proc. of ACM SIGMETRICS, pages 126–137, 1996.

[3] H. Chu, D. Tsang, and T. Yang. Bandwidth allocation for VBR video traffic in ATM networks. In Proc. of IEEE ICC, pages 612–615. IEEE Press, 1995.

[4] P. J. Denning and J. P. Buzen. The operational analysis of queueing network models. ACM Comp. Surv., 10(3):225–261, 1978.

[5] H. Feng, V. Misra, and D. Rubenstein. PBS: a unified priority-based scheduler. In Proc. of ACM SIGMETRICS '07, pages 203–214, New York, NY, USA, 2007. ACM.

[6] E. J. Friedman and S. G. Henderson. Fairness and efficiency in web server protocols. In Proc. of ACM SIGMETRICS '03, pages 229–237, New York, NY, USA, 2003. ACM.

[7] M. Grossglauser and D. N. C. Tse. A framework for robust measurement-based admission control. IEEE/ACM T. Networking, 7(3):293–309, 1999.

[8] S. K. P. L. H Leemis. Discrete-Event Simulation: A First Course. Prentice Hall, 2005.

[9] H. Li and M. Muskulus. Analysis and modeling of job arrivals in a production grid. SIGMETRICS Perform. Eval. Rev., 34(4):59–70, 2007.

[10] P. Lieshout, M. Mandjes, and S. Borst. GPS scheduling: selection of optimal weights and comparison with strict priorities. In Proc. of ACM SIGMETRICS '06/Performance '06, pages 75–86, New York, NY, USA, 2006. ACM.

[11] D. Menasce and V. A. F. Almeida. Capacity Planning for Web Performance: Metrics, Models, and Methods. Prentice Hall, 1998.

[12] N. Mi, Q. Zhang, A. Riska, E. Smirni, and E. Riedel. Performance impacts of autocorrelated flows in multi-tiered systems. Perf. Eval., 64(9-12):1082–1101, 2007.

[13] M. F. Neuts. Structured Stochastic Matrices of M/G/1 Type and Their Applications. Marcel Dekker, New York, 1989.

[14] A. Riska and E. Riedel. Long-range dependence at the disk drive level. In Proc. of 3rd Conf. on Quantitative Evaluation of Systems (QEST), pages 41–50. IEEE Press, 2006.

[15] L. Schrage. A proof of the optimality of the shortest remaining processing time discipline. Oper. res., 16:687–690, 1968.

[16] B. Urgaonkar, G. Pacifici, P. J. Shenoy, M. Spreitzer, and A. N. Tantawi. An analytical model for multi-tier internet services and its applications. In Proc. of SIGMETRICS, pages 291–302. ACM, 2005.

[17] J. Wang and A. Erramilli. A connection admission control algorithm for self-similar traffic. In Proc. of IEEE GLOBECOM, pages 1623–1628. IEEE Press, 1999.

[18] J. Zhang, M. Hu, and N. Shroff. Bursty data over CDMA: MAI self-similarity, rate control, and admission control. In Proc. of IEEE INFOCOM, 2002.

**International Conference on Dependable Systems & Networks: Anchorage, Alaska, June 24-27 20081-4244-2398-9/08/$20.00 ©2008 IEEE345DSN 2008: Mi et al.**