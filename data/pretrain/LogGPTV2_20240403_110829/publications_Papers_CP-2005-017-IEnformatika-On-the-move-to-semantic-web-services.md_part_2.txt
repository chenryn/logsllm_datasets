### Web Services Using OWL Ontologies

OWL-S services provide both syntactic and semantic information. The syntactic details, such as the physical location of the web service, supported operations, and inputs and outputs, are mapped to WSDL (Web Services Description Language) operations and messages. The semantic details, on the other hand, provide information about the properties, capabilities, and non-functional attributes of the web service, including Quality of Service (QoS). This document will discuss two approaches: semantically annotated web services and pure semantic web services.

#### A. Semantically Annotated Web Services: WSDL-S Annotation

One approach to creating semantic web services is by mapping concepts in a web service description to ontological concepts. This allows users to explicitly define the semantics of a web service for a given domain. With the help of ontologies, the meaning of service data and mappings between service, task, or activity descriptions and ontological concepts can be clearly defined. The METEOR-S WSDL-S Annotator tool [15] facilitates this process, as illustrated in Figure 4.

**Figure 4. Annotating Web Services with Ontological Concepts**

Based on the analysis of WSDL descriptions, three types of elements can be annotated with ontological concepts: operations, messages, preconditions, and effects.

- **Operations**: Each WSDL description may have multiple operations with different functionalities. For example, a flight booking service might include operations for booking and canceling flight tickets. To add semantics, these operations must be mapped to ontological concepts to describe their functionality.

- **Messages**: Message parts, which are the input and output parameters of operations, are defined in WSDL using XML Schema. Ontologies, being more expressive than XML Schema, can be used to annotate WSDL message parts. This not only brings user requirements and service advertisements to a common conceptual space but also helps in applying reasoning mechanisms.

- **Preconditions and Effects**: Each WSDL operation may have a number of preconditions and effects. Preconditions are logical conditions that must be true for an operation to execute, while effects are changes in the world that occur after the operation's execution. After annotating services' operations, inputs, and outputs, preconditions and effects can also be annotated.

To create, represent, and manipulate WSDL-S documents, WSDL4J (http://sourceforge.net/projects/wsdl4j/) can be used. WSDL4J provides Java APIs for WSDL parsing and generation, supporting extensibility elements that allow WSDL to represent specific technologies under various WSDL-defined elements.

**Example: Congo.com Book Selling Service**
The following example, provided by www.daml.org and available for download at http://daml.semanticweb.org/services/owl-s/1.0/, describes the inputs, outputs, preconditions, and effects of the Congo book selling service.

#### B. Pure Semantic Web Services: OWL-S

OWL-S (formerly DAML-S) is a web service description language that semantically describes the web service model and its grounding. OWL-S is organized into three main modules: the service profile, the process model, and the grounding.

- **Service Profile**: The service profile describes "what the service does" and can be used to advertise a service by describing its capabilities. It includes a human-readable description of the service and its provider, a specification of the functionalities provided, and additional attributes such as the category, quality, and geographic scope.

- **Process Model**: The process model decomposes into an ordered collection of processes. A process can consist of other processes, making it a composite process, or it can be atomic. The process model allows various types of control flow structures, including sequence, split, unordered, split+join, choice, if-then-else, repeat-until, and repeat-while.

- **Grounding**: The grounding maps the constructs of the process model onto detailed specifications of the web service. The `wsdlDocument` tag identifies the URI of the WSDL document, and the `wsdlOperation` tag identifies the URI of the WSDL operation corresponding to an atomic process. The `wsdlInput` and `wsdlOutput` tags define the message definitions that carry the input and output of an atomic process, respectively.

**Example: FullCongoBuy Process**
The previous example describes a process named "FullCongoBuy" composed of a sequence of two sub-processes: "locateBook" and "CongoBuyBook". The first sub-process, "locateBook," is shown in the example. The "FullCongoBuy" process has several inputs and outputs, and the preconditions and effects are also defined.

By leveraging these approaches, web services can be made more semantically rich, enabling better interoperability and automation.