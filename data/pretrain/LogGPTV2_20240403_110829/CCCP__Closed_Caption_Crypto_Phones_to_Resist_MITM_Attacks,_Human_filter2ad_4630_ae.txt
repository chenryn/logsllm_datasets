scribed. Although these results by themselves may seem high, we
show how we can effectively improve them by orders of magnitude.
The higher error rate in the 8-word checksum compared to the
4-word checksum is not surprising. As one may expect, there is a
higher probability of generating a single-word error in an 8-word
sentence compared to a 4-word sentence. In theory, if the probability
of incorrectly transcribing at least one word in a 4-word checksum
is p1, such probability increases to 2p1 − p2
1 in a 8-word checksum.
Wilcoxon signed-rank test conducted using alpha levels of 0.05.
and showed statistical significance (p = 0.008) for the compari-
son between FNRcc of 4-word and FNRcc of 8-word checksum.
This analysis confirms that FNRcc significantly increases when the
checksum becomes longer.
Relaxing Automated Checksum Comparison to Signifi-
cantly Reduce Rejection Rate: Since FNRcc leads to the rejection
of a benign call (which may degrade the usability of the system), our
goal is to reduce this error. To decrease the error rate, we propose
to relax the assumption of accepting the checksums. For example,
we suggest accepting the checksum even if at least half of the words
in the checksum are incorrectly transcribed (such as for a 4-word
checksum, the transcriber accepts it even if one or two words are
transcribed incorrectly).
FNRr in Table 2 (to be read as FNR of Checksum Comparison
in “r”elaxed mode) shows the result of such relaxation. Using this
approach, FNRcc significantly reduces from around 25% and over,
to around 5%. With this approach the usability of the system may
increase since rejecting the calls due to the incorrect matching
of the valid checksum will be less frequent. Figure A.1a and A.1b
in Appendix A.3, further show the effect of “number of tolerated
incorrect words” on FNRr .
We did not find a statistically significant difference in FNRr
between the two checksum sizes, which implies that longer check-
sums may not change the usability of the system induced by an
unwanted rejection of calls.
Relaxing the Automated Checksum Comparison has an impact
on the theoretical security of CCCP. Using this approach, the secu-
rity of a k-word checksum (2−k) is reduced to the security provided
by a k/2-word checksum (2−k/2). For example, in our study, the
security offered by a 4-word checksum reduces to that of a 2-word
checksum, similarly, 8-word to 4-word. Although, the security of
CCCP will be reduced in the “relaxed” mode, still if more than 4-
word checksum is incorporated, CCCP can offer significantly higher
security compared to traditional Crypto Phones with 2-word check-
sum as argued next.
Since FPRcc is essentially 0% in CCCP, the security provided by
CCCP is close to the theoretical security promised by the underlying
protocol. Therefore, in a relaxed mode (if transcription error in up
to half of the checksum is accepted), a 4-word checksum offers a
Table 5: Analysis of Speaker Verification for the original
speaker
Checksum
Size
4-word
8-word
Checksum
Duration
3.66s
6.79s
FNRsv Tsv
5.71s
25.76%
21.72%
5.96s
RR
10.61%
2.02%
security level close to the security of 2-word checksum, that is 2−16.
However, in the traditional Crypto Phones although the security
provided by a 2-word checksum is expected to be 2−16, due to
human errors in Checksum Comparison the security degrades to
around 30% [59]. In practice, we can pick any number of tolerated
incorrect words to optimize accuracy and security.
Accuracy of Speaker Verification in Benign Case: We are also
interested in investigating FNRsv, which represents the instances
where the user mistakenly rejects the CCCP call due to the failure
in recognizing a legitimate user’s voice. Our study shows that FNR
for the 4-word and 8-wordchecksums were 25.76% and 21.72% re-
spectively as shown in column 3 of Table 5. In analyzing this higher
error rate we should recall that the voice MITM is a less plausible
attack (especially with the converted voice).
5.5 Efficiency
SAS Length: Column 2 of Table 2 shows the average duration of
speaking the checksum. As expected, the duration of the checksum
increases as the number of words increases. Wilcoxon signed-rank
test showed statistical significance when comparing the 4-word
and 8-word (p = 0).
Time Taken by Speaker Verification (Tsv ) and Replay Rate:
The average duration of making a decision to accept or reject the
different speaker, conversion attack, and original speakers voice are
shown under Tsv in column 4 of Table 3, 4, and 5, respectively. We
did not find any statistically significant difference in Tsv between
4-word and 8-word checksums in any of the attack and benign
settings.
Note that the average Tsv in some cases is less than the average
duration of the samples, which shows that users did not fully listen
to the samples before accepting or rejecting the call. However, in all
cases, Tsv increases by the increase in the duration of the sample.
We will discuss how we should incorporate this result in designing
checksums in Section 6.
The results of Replay Rate (RR) is shown in column 5 of Table 3,
4, and 5. Replay Rate is around 5% when averaged over all instances
of attack and benign cases. The maximum Replay Rate is around
10% in the benign case for 4-word checksum. It seems that the
participants did not frequently replay the samples more than once
before deciding to accept or reject them. We did not find statistically
significant difference in RR between the two checksum sizes in any
of the attack and benign settings.
Time Taken for Checksum Comparison (Tcc): Since in our
study, Checksum Comparison analysis is performed offline, the
efficiency of the transcriber (Tcc) does not play a major role in the
imposed delay. However, for the sake of completeness, we report
9
Session F3:  Crypto PitfallsCCS’17, October 30-November 3, 2017, Dallas, TX, USA1337Figure 9: Comparison of FPRcc and FPRsv between CCCP and traditional design
Tcc analysis here. Our analysis shows that IBM Watson Speech to
Text tool can operate at near real-time speed. Using our dataset, Tcc
is 59 words per minute, which seems to be efficient for all practical
checksum sizes. Therefore, the transcriber can run in parallel with
receiving the checksum (i.e., while the user speaks the checksum).
This performance analysis was performed on a MacBook Air with
1.3GHz Intel Core i5 processor with 4GB of DDR3 Memory, over a
300Mbps Internet link. There are faster Speech to Text tools that
have reported the speed of 450 words per minute [9], which may
be utilized in future real-life implementations of CCCP.
5.6 CCCP vs. Traditional Designs
Although our study was not designed to directly compare CCCP
with the traditional designs, we summarize an indirect quantitative
comparison and illustrate it in Figure 9. The MTurk participants
in the study of [59] had demographic characteristics similar to the
participants in our study, which allows for us to compare the results
between the two studies meaningfully. Therefore, this represents a
relatively fair, between-subjects comparison with a study involving
a similar design/dataset and similar set of participants. In this com-
parison, we consider CCCP in the relaxed mode (i.e., when at most
half of the words in the checksum are transcribed incorrectly), and
therefore compare our 4-word and 8-word results against 2-word
and 4-word results of [59], respectively. This is a fair comparison
at the equivalent level of security offered by CCCP relaxed mode
versus the traditional design tested in [59].
Mandatory Threat Model: Data MITM: The most appealing
contribution of our work is that CCCP eliminates the chances of
data MITM — the most commonly occurring attack in practice
([19, 30, 56]) (Figure 9). With respect to Checksum Comparison, our
study shows that if the only applicable attack is data MITM, then
the FPR for CCCP is close to 0%6. In contrast, the results of [59]
show that in the traditional Crypto Phones, with manual Checksum
Comparison, due to human errors, the average FPR of accepting
a mismatching checksum is on average around 28% and 39% for
6Precisely, FPR would be no more than the success rate of the random attack against
the protocol, that is, 2−k , for a k-bit checksum
2- and 4-word checksums, respectively. Our automated Checksum
Comparison basically eliminates this error.
Also with respect to the average FNR, [59] reports the error
rates of about 22% and 25% for 2- and 4-word checksums, respec-
tively, while CCCP reduces the error rates to around 4% and 7%
in the relaxed mode for the 4- and 8-word checksums. Therefore,
CCCP not only drastically reduces FPR, but also eliminates the
click-through effect by automating Checksum Comparison. We
believe these improvements constitute an important breakthrough
in Crypto Phones’ security. Moreover, CCCP’s time duration is low
(about 5s).
Optional Threat Model: Voice MITM: Even considering more so-
phisticated, i.e., less common, voice MITM attacks, CCCP provides
a significant security improvement (Figure 9), which we attribute
to CCCP’s “single tasking” feature, since, in our study of CCCP,
users are only involved in one task of Speaker Verification, whereas
in [59], participants had to perform both Speaker Verification and
Checksum Comparison. The Speaker Verification task in [59] shows
FPRsv of about 40% for 4-word checksum for the different speaker
attack (compared to 6% in our study) and 43% for voice conversion
attack (compared to 18% in our study). For the 8-word checksum,
the Speaker Verification task in [59] shows FPRsv of about 38% for
the different speaker attack (compared to 12% in our study) and
39% for voice conversion attack (compared to 20% in our study).
In terms of usability, although our FNRsv are in line with those
of traditional designs (21-25%), we believe that single tasking would
make the CCCP system more usable by reducing the cognitive
burden on the users, which might also prevent them from clicking
through speaker verifications in practice. Therefore, with respect
to Speaker Verification, our study also shows that users generally
performed better in detecting the voice MITM attack in CCCP
compared to the reports of [59].
6 SUMMARY AND KEY INSIGHTS
(1) Defeating Data MITM Attacks due to Human Errors and
Click-Through: By automating the Checksum Comparison task,
we effectively reduced FPRcc to 0%. This result implies that CCCP
drastically improves security against data MITM attack, compared
10
0%5%10%15%20%25%30%35%40%45%FPR_ccFPR_sv(Diff.Speaker)FPR_sv(ConvertedVoice)0.00%6.56%18.43%28.39%40.00%43.55%4-word CCCP2-word Traditional Design0%5%10%15%20%25%30%35%40%45%FPR_ccFPR_sv(Diff.Speaker)FPR_sv(ConvertedVoice)0.00%12.13%20.45%39.96%37.69%38.92%8-word CCCP4-word Traditional DesignSession F3:  Crypto PitfallsCCS’17, October 30-November 3, 2017, Dallas, TX, USA1338to traditional Crypto Phones. This is a notable result, considering
that data MITM attack is the most dominant and practical form of
attack against Crypto Phones.
In current Crypto Phones and even CCCP, user’s primary task
is to have a conversation, while the establishment of the secure
channel is their secondary task. Therefore, users may skip the
security task or accept a mismatching checksum without fully
verifying it to proceed with the call. This click-through or rushing
user behavior has also been reported in the context of localized
device pairing schemes [49], security warnings [41] and end-to-end
encrypted messaging apps [57].
CCCP seems naturally more robust to such a click-through be-
havior in detecting data MITM attacks compared to traditional
designs, due to the automation of Checksum Comparison. Since
the F PRcc for existing designs is high, they can not be sure when
the users are under attack and therefore can not reliably inform the
users of the presence of the attack. In contrast, since the F PRcc for
CCCP is 0%, the Crypto Phones built on the CCCP model can very
reliably alert the users about an ongoing attack, therefore, the users
can make an informed decision to drop the call. The app can also
optionally drop the call if the automated Checksum Comparison
detects an ongoing data MITM attack. Automatically dropping the
calls may have some usability price as CCCP’s FNRcc is around
5% and therefore around 5% of the valid calls may have to be re-
jected. However, it is important to notice that CCCP’s FNRcc is still
much lower compared to that of the current Crypto Phones designs
(around 25%) (as reported in Section 5.6), which means that current
designs can not at all afford to automatically drop the calls under
the suspicion of the attack.
(2) Other Significant Benefits: Automating the Checksum Com-
parison task offers two additional/optional benefits that further
improves security indirectly:
2a) Longer Checksums: Automating the Checksum Compar-
ison task facilitated the use of longer checksums and as a result
increases the security of the system significantly. For example, the
probability of the attack success in CCCP (relaxed mode) reduces
from 2−16 for a 4-word (32 bit) checksum to 2−32 for a 8-word (64
bit) checksum.
2b) Single-Tasking: By automating Checksum Comparison in
CCCP, users are only involved in one task of Speaker Verification,
while in current Crypto Phones models, users are involved in two
tasks of Speaker Verification and Checksum Comparison. There are
several research work, which studied and argued that multitasking
reduces efficiency and performance since the brain can focus on
one task at a time (e.g., [46–48, 51]). Therefore, automating Check-
sum Comparison might have an implicit effect on improving the
manual Speaker Verification task by reducing the number of the
simultaneous tasks that users need to perform at a given time.
(3) Efficiency: Longer checksums improve the security of CCCP.
However, longer checksums increase the time taken to speak the
checksum and the time taken to reject or accept the speaker’s voice
(Tsv). This may impact the usability of the system. For example,
our study showed that on average it takes about 10s to speak the
8-word checksum and users took on average about 6s to accept or
reject the speaker’s voice. Assuming that the transcriber works in
11
real-time, and the transcription and Speaker Verification runs in
parallel, in practice, the checksum validation would take about 10s
to complete. For a 4-word checksum, this time is around 6s.
The analysis also shows that the users do not wait for the whole
checksum to be spoken before accepting or rejecting the voice.
Hence, it seems the dominant delay in CCCP checksum validation
is in speaking the checksum.
We infer that while the size of the checksum in bits increases the
theoretical security, the duration of the checksum in seconds may
affect usability. Since our study shows that users take no more than
6s for Speaker Verification (regardless of the checksum size and
duration), a practical CCCP may design a checksum dictionary to
incorporate this result to limit any n-word checksum (e.g., 8 words
to provide 2−32 theoretical security against MITM) to a certain
duration (e.g., 6s, since users take no more than 6s to verify the
speaker).
7 DISCUSSION AND FUTURE DIRECTIONS
7.1 Defeating Voice Reordering Attacks
In Copy-Confirm checksum validation, where the users are asked
to copy the checksum spoken by the other party into their device
(and let the device compare it), typically numerical checksums are
used. This is because the use of phrases is not practical due to the
limitation of users in typing the (random) words. However, numer-
ical checksum is highly susceptible to reordering attacks [58]. Since
in CCCP, Checksum Comparison is now automated, several types
of checksums become possible (e.g., words from a large, dynamic
dictionary) making reordering attacks practically impossible.
7.2 Study Strengths and Limitations
In our human factors study designed to evaluate CCCP, we col-
lected data set from a large and diverse sample of users, operating
from their own computers (potentially with diverse hardware and
software, including microphones to record the spoken samples).
Our collected data included over 1100 audio samples, and responses
to around 400 questions in each category of checksum challenges
(attacked and benign setting for 4- and 8-word). This study was
supported by our online setup that emulated a realistic VoIP call in
a web-based setting. The web-based VoIP architecture helped us to
gather data that would have not been easily collected if the setup
were based on a mobile VoIP app or a lab study.
Similar to any study that involves human users, our study also
had certain limitations. First, we recruited native American English
speakers through Amazon Turk and our study did not cover any
other accent. At this stage of the study, we preferred to focus on
one language to show the promising feasibility of the CCCP notion.
Future research may be needed to evaluate other accents. Second,
some of the recorded data samples in our study had very poor
quality and were not recognized by the speech recognition tool or
were generating unusual number of errors. After manually listening
to and checking these samples with high error rates, we noticed
that the quality of these samples was so poor, due to excessive
noise, that they were not even easily recognized by the human user.
Therefore, we discarded these data samples collected from 6 users
from our analysis. We assume that such low audio quality will be
discarded by the users in a phone call and users will drop the call.
Session F3:  Crypto PitfallsCCS’17, October 30-November 3, 2017, Dallas, TX, USA13397.3 Future Work
Integrating with Existing Crypto Phones: Our study showed
that automated Checksum Comparison is a practical and feasible
approach that can effectively eliminate the data MITM attacks. We
also derived several insights for Crypto Phones designs regarding
the duration of the checksums and the number of words in the
checksum, using which the performance of transcription and the
performance of humans user in – now the only – task of Speaker
Verification (if required) is improved.
In our future work, we plan to develop an SDK that can indepen-
dently be used by Crypto Phones. Since in current Crypto Phones,
Checksum Comparison is a human task independent of the key ex-
change protocol, integration of automated Checksum Comparison
tool with the current Crypto Phones would be straight-forward. We
will incorporate the insights drawn from our study into designing
such tool.
We also plan to develop a real-time automated Checksum Com-
parison tool using off-the-shelf STT engines designed for mobile
platforms (e.g., Nuance Dragon Mobile SDK) and we will customize
it for the specific needs of checksum transcription. To activate
the transcriber for automated Checksum Comparison, we suggest
Crypto Phones to ask the user to speak a fixed preamble phrase
during the checksum validation phase (e.g., similar to “Ok Google”
in Android) through their checksum validation screen. Traditional
Crypto Phones, such as Silent Circle, can then use our tool to con-
vert the received checksums to text and automatically compare it
with the checksum generated by the protocol locally.
Further Improving the Accuracy of the Transcriber:
1) Limited-Domain Transcribers: The existing off-the-shelf
STT tools are designed for the natural language grammar (i.e.,
arbitrary speech communications). This allows the tools to predict
the words based on the context of the speech. However, this may not
be ideal for the Crypto Phones Checksum Comparison functionality
where a string of isolated words (not meaningful text) should be
transcribed. Since a general purpose transcriber may not always
perform accurately in the context of Crypto Phone application
domain, designing a specialized grammar for the tool may improve
the accuracy of the transcriber. A future research avenue is to
consider the requirements of the Crypto Phones to design a special-
purpose transcriber that fulfills the narrow and specific need of
the automated Checksum Comparison task by designing a limited-
domain transcriber on top of the existing off-the-shelf speech-to-
text engines.
2) Optimal Checksum Dictionary: The checksum vocabulary
is very compact compared to the natural language. For example,
PGP word list [26], which is commonly used in Crypto Phones,
consists of two lists of 256 phonetically distinct words. We envision
that limiting the dictionary of the spoken words would have a
significant impact on the accuracy of the transcriber.