IX. PASSWORD RESET PROCESS AUDITING
Our work discovered vulnerabilities in the password reset
process of the most popular websites in the world. If well-
secured websites like Google and Facebook are vulnerable, it
is reasonable to assume that many other websites that have
not been surveyed are vulnerable as well.
The damage that can be caused to billions of accounts over
many websites makes it necessary to create a relatively short
list of possible problems and secure alternatives. In this section
we bring such a list that can be used to audit and to secure
password reset procedures in websites. The section begins with
general guidelines and continues with instructions about the
different challenges discussed in the paper.
A. General Guidelines
We bring here guidelines that should be applied to prevent
PRMitM attacks. We do not bring known and basic principles
like limiting the number of tries in inserting the reset code, or
to cancel previous codes once a new code is required.
1) Password-reset messages (SMS, phone call, email) must
include the sending website, clear explanation about the
meaning of the code (password reset), and a warning to
avoid giving this code to any person or website. However,
even all of those elements might not be enough to prevent
the attack.
2) In spite of the previous point, password reset using either
SMS or phone call can be implemented securely. See
examples in Sections VII-B2 and VII-C. Yet, in addition
to those countermeasures, the following points should be
considered.
3) For each supported language, the password reset mes-
sages (SMS, phone call, email) must be sent in that
language.
4) Test your password reset process for every supported
language separately.
5) Notify the user when a password reset request is sent,
to both the email and the phone. If the password reset
is done via the phone, this is even more critical. Email
notiﬁcation to email account that got compromised is
useless.
valid only for short time period, e.g., 1 − 15 minutes.
6) The link or the code sent to reset the password should be
7) If there are several ways to reset the password for a
user, automatically disable the less secure ones. If it is
impossible to use a secure password reset process, contact
the user in advance and offer her both to add information
that can be used to reset her password securely and to
disable the (only) insecure ways.
8) Require several details about the user before sending the
password-reset message (SMS, phone call, email). This
prevents the easy option for the attacker to launch the
attack given only the phone number of the user, without
knowing anything else about the user.
Finally, although the recommendations of this section are
given mainly in the perspective of the PRMitM attack, it is
important to note that according the NIST Digital Authen-
tication Guideline, due to other security problems (stronger
attacker model) it is not recommended to rely only on SMS
or phone calls for authentication [51].
B. Security Questions
Avoid relying on security questions. Security questions
are relatively easy to bypass, using either PRMitM attacks or
other techniques [29]–[32].
What to do with users who do not have an alternative
email account or a phone number. We offered two alterna-
tives: (1) rely on email accounts of friends (Section VII-E), and
(2) use security questions that are strongly related to the user’s
actions in the website (Section VII-A). The second option
is still vulnerable to other attacks and hence, less preferred.
When a user does not give a website another email address or
phone number as alternatives, the website should at least warn
the user about the dangers of relying on security questions, and
encourage the user to move to the alternatives.
C. SMS Code
Specify the sender name. Use SMS spooﬁng to give
indication about the real sender.
Do not send the code as clear text. Many users do not
read the messages and just detect and copy the code. We offer
an alternative: send SMS with detailed message and with a
long link instead (Section VII-B2).
D. Phone Call
Add interactivity to the process to make sure that the
users listen to the message and understand what they are
doing. For example, after reading a detailed message, do not
immediately give the code, but ask the user a few questions
to make sure she understands the situation.
265
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:24:09 UTC from IEEE Xplore.  Restrictions apply. 
X. CONCLUSIONS
This paper introduced the PRMitM attack, which exploits a
set of vulnerabilities in password reset procedures of popular
(and other) websites and mobile applications. The attack
allows a weak attacker to take over accounts of many websites,
including Google and Facebook and other popular websites we
surveyed. We evaluated the attacks and pointed at vulnerabil-
ities and weaknesses of the password reset processes.
Although simple defense like more detailed SMS messages
seems to be enough, our experiments indicate that this is not
the case. We designed defenses and evaluated them compared
to the existing implementations of Google and Facebook; our
experiments show that our proposed defenses improve the
security signiﬁcantly. Finally, to help the many vulnerable
websites to test and improve their password reset processes, we
created a list of rules and recommendations for easy auditing.
ACKNOWLEDGMENTS
The authors wish to express their gratitude to the Research
Fund of the Research Authority of the College of Management
Academic Studies, Rishon Lezion, Israel, for the ﬁnancial
support provided for this research.
REFERENCES
[1] R. Morris and K. Thompson, “Password security: A case history,”
Communications of the ACM, vol. 22, no. 11, pp. 594–597, 1979.
[2] Troy Hunt, “Have I Been Pwned?” https://haveibeenpwned.com/.
[3] S. Gaw and E. W. Felten, “Password management strategies for online
accounts,” in Proceedings of the second symposium on Usable privacy
and security. ACM, 2006, pp. 44–55.
[4] X. de Carn´e de Carnavalet and M. Mannan, “From very weak to
very strong: Analyzing password-strength meters,” in Network and
Distributed System Security Symposium (NDSS 2014).
Internet Society,
2014.
[5] R. Shay, S. Komanduri, P. G. Kelley, P. G. Leon, M. L. Mazurek,
L. Bauer, N. Christin, and L. F. Cranor, “Encountering stronger password
requirements: user attitudes and behaviors,” in Proceedings of the Sixth
Symposium on Usable Privacy and Security. ACM, 2010, p. 2.
[6] S. Komanduri, R. Shay, P. G. Kelley, M. L. Mazurek, L. Bauer,
N. Christin, L. F. Cranor, and S. Egelman, “Of passwords and people:
measuring the effect of password-composition policies,” in Proceedings
of the SIGCHI Conference on Human Factors in Computing Systems.
ACM, 2011, pp. 2595–2604.
[7] B. Ur, P. G. Kelley, S. Komanduri, J. Lee, M. Maass, M. L. Mazurek,
T. Passaro, R. Shay, T. Vidas, L. Bauer et al., “How does your password
measure up? the effect of strength meters on password creation,” in
Presented as part of the 21st USENIX Security Symposium (USENIX
Security 12), 2012, pp. 65–80.
[8] R. Shay, S. Komanduri, A. L. Durity, P. S. Huh, M. L. Mazurek, S. M.
Segreti, B. Ur, L. Bauer, N. Christin, and L. F. Cranor, “Designing
password policies for strength and usability,” ACM Transactions on
Information and System Security (TISSEC), vol. 18, no. 4, p. 13, 2016.
[9] M. Zviran and W. J. Haga, “A comparison of password techniques for
multilevel authentication mechanisms,” The Computer Journal, vol. 36,
no. 3, pp. 227–237, 1993.
[10] J. J. Yan, A. F. Blackwell, R. J. Anderson, and A. Grant, “Password
memorability and security: Empirical results.” IEEE Security & privacy,
vol. 2, no. 5, pp. 25–31, 2004.
[11] L. V. Ahn, M. Blum, N. J. Hopper, and J. Langford, “CAPTCHA: Using
Hard AI Problems for Security,” in EUROCRYPT. Springer-Verlag,
2003, pp. 294–311. [Online]. Available: http://dl.acm.org/citation.cfm?
id=1766171.1766196
[12] M. L. Mazurek, S. Komanduri, T. Vidas, L. Bauer, N. Christin, L. F.
Cranor, P. G. Kelley, R. Shay, and B. Ur, “Measuring password guess-
ability for an entire university,” in Proceedings of the 2013 ACM SIGSAC
conference on Computer & communications security. ACM, 2013, pp.
173–186.
[13] T. N. Jagatic, N. A. Johnson, M. Jakobsson, and F. Menczer, “Social
phishing,” Communications of the ACM, vol. 50, no. 10, pp. 94–100,
2007.
[14] J. M. Jeff Williams and N. Mattatall, “Cross Site Scripting Preven-
tion Cheat Sheet,” https://www.owasp.org/index.php/XSS (Cross Site
Scripting) Prevention Cheat Sheet, March 2016.
[15] Paul Peteﬁsh, Eric Sheridan, and Dave Wichers, “Cross-Site Request
Forgery (CSRF) Prevention Cheat Sheet,” https://www.owasp.org/index.
php/Cross-Site Request Forgery (CSRF) Prevention Cheat Sheet,
2015.
[16] R. Hansen and J. Grossman, “Clickjacking,” Sec Theory, Internet Secu-
rity, 2008.
[17] S. Lekies, B. Stock, M. Wentzel, and M. Johns, “The unexpected dangers
of dynamic javascript,” in 24th USENIX Security Symposium (USENIX
Security 15), 2015, pp. 723–735.
[18] N. Gelernter and A. Herzberg, “Tell me about yourself: The malicious
captcha attack,” in Proceedings of the 25th International Conference on
World Wide Web.
International World Wide Web Conferences Steering
Committee, 2016, pp. 999–1008.
[19] T. Van Goethem, W. Joosen, and N. Nikiforakis, “The clock is still
ticking: Timing attacks in the modern web,” in Proceedings of the 22nd
ACM SIGSAC Conference on Computer and Communications Security.
ACM, 2015, pp. 1382–1393.
[20] R. Dhamija and J. D. Tygar, “Why phishing works,” in In Proceedings
of the SIGCHI Conference on Human Factors in Computing Systems.
ACM Press, 2006, pp. 581–590.
“New
[21] Noriaki
Phishing
Operation
Technique
Huyao,”
Out-
http://
Owners:
foxes
blog.trendmicro.com/trendlabs-security-intelligence/
new-phishing-technique-outfoxes-site-owners-operation-huyao/,
November 2014.
Hayashi,
Site
[22] Jim Youll, “Fraud Vulnerabilities in SiteKey Security at Bank of Amer-
ica,” http://cr-labs.com/publications/SiteKey-20060718.pdf, July 2006.
[23] Google, “Prevent phishing attacks on your users,” https://support.google.
com/a/answer/6197480?hl=en, November 2016.
[24] J. A. Chaudhry, S. A. Chaudhry, and R. G. Rittenhouse, “Phishing
attacks and defenses,” International Journal of Security and Its Appli-
cations, vol. 10, no. 1, pp. 247–256, 2016.
[25] A. Dvorkin and A. Herzberg, “Effective and usable browser-based
defenses against phishing,” International Journal of Electronic Security
and Digital Forensics, 2009, accepted with revisions, revised version
sent.
[26] S. Egelman, L. F. Cranor, and J. Hong, “You’ve been warned:
an empirical study of the effectiveness of web browser phishing
warnings,” in Proceeding of the twenty-sixth annual SIGCHI conference
’08. New
on Human factors
York, NY, USA: ACM, 2008, pp. 1065–1074. [Online]. Available:
http://doi.acm.org/10.1145/1357054.1357219
in computing systems,
ser. CHI
[27] Alexa, “Top Sites,” http://www.alexa.com/topsites, May 2016.
[28] J. Bonneau, E. Bursztein, I. Caron, R. Jackson, and M. Williamson,
“Secrets, lies, and account recovery: lessons from the use of personal
knowledge questions at google,” in Proceedings of the 24th International
Conference on World Wide Web. ACM, 2015, pp. 141–150.
[29] M. Just, “Designing and evaluating challenge-question systems,” IEEE
Security & Privacy, no. 5, pp. 32–39, 2004.
[30] M. Jakobsson, E. Stolterman, S. Wetzel, and L. Yang, “Love and
authentication,” in Proceedings of the SIGCHI Conference on Human
Factors in Computing Systems. ACM, 2008, pp. 197–200.
[31] A. Rabkin, “Personal knowledge questions for fallback authentication:
Security questions in the era of facebook,” in Proceedings of the 4th
symposium on Usable privacy and security. ACM, 2008, pp. 13–23.
[32] S. Schechter, A. B. Brush, and S. Egelman, “It’s no secret. measuring
the security and reliability of authentication via “secret” questions,” in
Security and Privacy, 2009 30th IEEE Symposium on.
IEEE, 2009, pp.
375–390.
[33] Facebook, “Facebook Login for your Apps & Websites,” https://
developers.facebook.com/products/login, May 2016.
[34] D. Irani, M. Balduzzi, D. Balzarotti, E. Kirda, and C. Pu, “Reverse social
engineering attacks in online social networks,” in Detection of intrusions
and malware, and vulnerability assessment. Springer, 2011, pp. 55–74.
“The Million Dollar
a
https://citizenlab.org/2016/08/
Dissident: NSO Group’s
UAE Human Rights Defender,”
John Scott-Railton,
[35] Bill Marczak
iPhone Zero-Days
against
used
and
266
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:24:09 UTC from IEEE Xplore.  Restrictions apply. 
million-dollar-dissident-iphone-zero-day-nso-group-uae/,
2016.
[36] Chris
seemingly
Smith,
“One
wreck your Android phone’s
android-sms-malware-attack-mazar-bot/, February 2016.
innocuous
can
security,” http://bgr.com/2016/02/16/
text message
August
[37] S. Schechter, S. Egelman, and R. W. Reeder, “It’s not what you know,
but who you know: a social approach to last-resort authentication,” in
Proceedings of the SIGCHI Conference on Human Factors in Computing
Systems. ACM, 2009, pp. 1983–1992.
[38] M. Egele, L. Bilge, E. Kirda, and C. Kruegel, “Captcha smuggling: hi-
jacking web browsing sessions to create captcha farms,” in Proceedings
of the 2010 ACM Symposium on Applied Computing. ACM, 2010, pp.
1865–1870.
[39] K. Thomas and D. M. Nicol, “The koobface botnet and the rise of social
malware,” in Malicious and Unwanted Software (MALWARE), 2010 5th
International Conference on.
IEEE, 2010, pp. 63–70.
[40] T. Lauinger, V. Pankakoski, D. Balzarotti, and E. Kirda, “Honeybot, your
man in the middle for automated social engineering.” in LEET, 2010.
[41] M. Huber, S. Kowalski, M. Nohlberg, and S. Tjoa, “Towards automating
social engineering using social networking sites,” in Computational
Science and Engineering, 2009. CSE’09. International Conference on,
vol. 3.
IEEE, 2009, pp. 117–124.
[42] T. Dougan and K. Curran, “Man in the browser attacks,” International
Journal of Ambient Computing and Intelligence (IJACI), vol. 4, no. 1,
pp. 29–39, 2012.
[43] V. Roth, W. Polak, E. Rieffel, and T. Turner, “Simple and effective
defense against evil twin access points,” in Proceedings of the ﬁrst ACM
conference on Wireless network security. ACM, 2008, pp. 220–235.
[44] Y. Song, C. Yang, and G. Gu, “Who is peeping at your passwords at
starbucks?-to catch an evil twin access point.” in DSN, vol. 10, 2010,
pp. 323–332.
[45] C. Karlof, J. D. Tygar, and D. Wagner, “Conditioned-safe ceremonies
and a user study of an application to web authentication.” in NDSS,
2009.
[46] Brad
Some
03/13/breaking-google-captchas-for-3-a-day/? r=0,
[Online].
breaking-google-captchas-for-3-a-day/? r=0
Google
for
http://bits.blogs.nytimes.com/2008/
2008.
http://bits.blogs.nytimes.com/2008/03/13/
Stone,
Extra
CAPTCHAs
“Breaking
Available:
Cash,”
[47] E. Bursztein, M. Martin, and J. Mitchell, “Text-based captcha strengths
the 18th ACM conference on
and weaknesses,” in Proceedings of
Computer and communications security. ACM, 2011, pp. 125–138.
[48] C. Cruz-Perez, O. Starostenko, F. Uceda-Ponga, V. Alarcon-Aquino, and
L. Reyes-Cabrera, “Breaking recaptchas with unpredictable collapse:
heuristic character segmentation and recognition,” in Pattern Recogni-
tion. Springer, 2012, pp. 155–165.
[49] E. Bursztein, J. Aigrain, A. Moscicki, and J. C. Mitchell, “The end is
nigh: Generic solving of text-based captchas,” in 8th USENIX Workshop
on Offensive Technologies (WOOT 14), 2014.
[50] E. Bursztein and S. Bethard, “Decaptcha: breaking 75% of ebay audio
captchas,” in Proceedings of the 3rd USENIX conference on Offensive
technologies. USENIX Association, 2009, p. 8.
[51] Paul A. Grassi and James L. Fenton and Elaine M. Newton and Ray
A. Perlner and Andrew R. Regenscheid and William E. Burr and Justin
P. Richer and Naomi B. Lefkovitz and Jamie M. Danker and Yee-Yin
Choong and Kristen K. Greene and Mary F. Theofanos, “DRAFT NIST
Special Publication 800-63B: Digital Authentication Guideline,” https:
//pages.nist.gov/800-63-3/sp800-63b.html, November 2016.
267
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:24:09 UTC from IEEE Xplore.  Restrictions apply.