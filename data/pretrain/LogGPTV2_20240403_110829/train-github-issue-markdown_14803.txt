### Testing #2218

The duplicate property in the following code is not a problem because the code is not in strict mode. I have also tested it, and Node.js runs it without any issues:

```javascript
// "use strict";
var o = { p: 1, p: 2 };
console.log(o); // Output: { p: 2 }
```

![Output Screenshot](https://cloud.githubusercontent.com/assets/5047891/12615335/6e88aee4-c505-11e5-8a8e-81ae41632fff.png)

### Question: Is This Not an Error in ES6?

I found an interesting note on the MDN Web Docs regarding strict mode, which states:

> In non-strict mode, if multiple data properties are defined for the same property name, the last one wins. In strict mode, this is considered a syntax error.

Source: [MDN Web Docs - Strict Mode](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode)

![MDN Note Screenshot](https://cloud.githubusercontent.com/assets/5047891/12615377/99c5e77a-c505-11e5-90a7-1660fbf5216d.png)

### Conclusion

In non-strict mode, the last property definition overwrites the previous ones, and this behavior is consistent with both ES5 and ES6. However, in strict mode, this would be considered a syntax error.

_Copied from the original issue: [microsoft/vscode#2452](https://github.com/microsoft/vscode/issues/2452)_