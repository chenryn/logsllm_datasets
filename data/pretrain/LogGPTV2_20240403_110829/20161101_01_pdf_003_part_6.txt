 v | pg_seclabels -- 安全标签信息
 v | pg_settings -- 当前数据库集群的参数设置信息
 v | pg_shadow -- 数据库用户信息
 v | pg_stat_activity -- 会话活动信息
 v | pg_stat_all_indexes -- 查询用户权限范围内的所有索引的统计信息
 v | pg_stat_all_tables -- 查询用户权限范围内的所有表的统计信息
 v | pg_stat_bgwriter -- bgwriter进程的统计信息
 v | pg_stat_database -- 数据库级别的统计信息
 v | pg_stat_database_conflicts -- 数据库
 v | pg_stat_replication -- 流复制相关的统计信息
 v | pg_stat_sys_indexes -- 系统表相关的索引统计信息
 v | pg_stat_sys_tables -- 系统表统计信息
 v | pg_stat_user_functions -- 用户函数统计信息
 v | pg_stat_user_indexes -- 用户表的索引相关的统计信息
 v | pg_stat_user_tables -- 用户表统计信息
PostgreSQL 系统视图介绍
 v | pg_stat_xact_all_tables -- 当前事务的表级统计信息, 显示用户可以访问的所有表
 v | pg_stat_xact_sys_tables -- 当前事务的表级统计信息, 仅显示系统表
 v | pg_stat_xact_user_functions -- 当前事务的用户函数的统计信息
 v | pg_stat_xact_user_tables -- 当前事务的用户表的统计信息
 v | pg_statio_all_indexes -- io相关的统计信息
 v | pg_statio_all_sequences
 v | pg_statio_all_tables
 v | pg_statio_sys_indexes
 v | pg_statio_sys_sequences
 v | pg_statio_sys_tables
 v | pg_statio_user_indexes
PostgreSQL 系统视图介绍
 v | pg_statio_user_sequences
 v | pg_statio_user_tables
 v | pg_stats -- 数据库中的统计信息, 以列为最小统计单位输出
 v | pg_tables -- 数据库中的表对象的信息
 v | pg_timezone_abbrevs -- 时区缩写信息
 v | pg_timezone_names -- 时区信息, 包含全名
 v | pg_user -- 用户信息
 v | pg_user_mappings -- 外部表的用户映射权限信息.
 v | pg_views -- 视图信息
PostgreSQL 管理函数
 http://www.postgresql.org/docs/9.3/static/functions-admin.html
 配置函数
Name Return Type Description
current_setting(setting_name) text get current value of setting
set_config(setting_name, new_value, is_local) text set parameter and return new value
 服务端信号发送函数
Name Return Type Description
Cancel a backend's current query. You can execute this against another
pg_cancel_backend(pidint) boolean backend that has exactly the same role as the user calling the function. In all
other cases, you must be a superuser.
pg_reload_conf() boolean Cause server processes to reload their configuration files
pg_rotate_logfile() boolean Rotate server's log file
Terminate a backend. You can execute this against another backend that has
pg_terminate_backend(pidint) boolean exactly the same role as the user calling the function. In all other cases, you
must be a superuser.
PostgreSQL 管理函数
 备份控制函数
Name Return Type Description
pg_create_restore_point(name text) text Create a named point for performing restore (restricted to superusers)
pg_current_xlog_insert_location() text Get current transaction log insert location
pg_current_xlog_location() text Get current transaction log write location
pg_start_backup(label text [, fast boolean ]) text Prepare for performing on-line backup (restricted to superusers or replication roles)
pg_stop_backup() text Finish performing on-line backup (restricted to superusers or replication roles)
pg_is_in_backup() bool True if an on-line exclusive backup is still in progress.
timestamp
pg_backup_start_time() with time Get start time of an on-line exclusive backup in progress.
zone
pg_switch_xlog() text Force switch to a new transaction log file (restricted to superusers)
pg_xlogfile_name(location text) text Convert transaction log location string to file name
pg_xlogfile_name_offset(location text) text, integer Convert transaction log location string to file name and decimal byte offset within file
pg_xlog_location_diff(locationtext, location text) numeric Calculate the difference between two transaction log locations
PostgreSQL 管理函数
 恢复控制函数
Name Return Type Description
pg_is_in_recovery() bool True if recovery is still in progress.
Get last transaction log location received and synced to disk by streaming replication. While
streaming replication is in progress this will increase monotonically. If recovery has completed this
pg_last_xlog_receive_location() text
will remain static at the value of the last WAL record received and synced to disk during recovery.
If streaming replication is disabled, or if it has not yet started, the function returns NULL.
Get last transaction log location replayed during recovery. If recovery is still in progress this will
increase monotonically. If recovery has completed then this value will remain static at the value of
pg_last_xlog_replay_location() text
the last WAL record applied during that recovery. When the server has been started normally
without recovery the function returns NULL.
Get time stamp of last transaction replayed during recovery. This is the time at which the commit or
abort WAL record for that transaction was generated on the primary. If no transactions have been
replayed during recovery, this function returns NULL. Otherwise, if recovery is still in progress this
pg_last_xact_replay_timestamp() timestamp with time zone
will increase monotonically. If recovery has completed then this value will remain static at the
value of the last transaction applied during that recovery. When the server has been started
normally without recovery the function returns NULL.
PostgreSQL 管理函数
 恢复控制函数
Name Return Type Description
pg_is_xlog_replay_paused() bool True if recovery is paused.
pg_xlog_replay_pause() void Pauses recovery immediately.
pg_xlog_replay_resume() void Restarts recovery if it was paused.
 事务镜像导出函数
Name Return Type Description
Save the current snapshot and return
pg_export_snapshot() text
its identifier
例如用于并行逻辑备份, (举例讲解)
PostgreSQL 管理函数
 数据库对象管理函数
Name Return Type Description
pg_column_size(any) int Number of bytes used to store a particular value (possibly compressed)
pg_database_size(oid) bigint Disk space used by the database with the specified OID
pg_database_size(name) bigint Disk space used by the database with the specified name
pg_indexes_size(regclass) bigint Total disk space used by indexes attached to the specified table
pg_relation_size(relation regclass, fork text) bigint Disk space used by the specified fork ('main', 'fsm' or 'vm') of the specified table or index
pg_relation_size(relation regclass) bigint Shorthand for pg_relation_size(..., 'main')
pg_size_pretty(bigint) text Converts a size in bytes expressed as a 64-bit integer into a human-readable format with size units
pg_size_pretty(numeric) text Converts a size in bytes expressed as a numeric value into a human-readable format with size units
Disk space used by the specified table, excluding indexes (but including TOAST, free space map, and
pg_table_size(regclass) bigint
visibility map)
pg_tablespace_size(oid) bigint Disk space used by the tablespace with the specified OID
pg_tablespace_size(name) bigint Disk space used by the tablespace with the specified name
pg_total_relation_size(regclass) bigint Total disk space used by the specified table, including all indexes and TOAST data
PostgreSQL 管理函数
 数据库对象存储位置管理函数
Name Return Type Description
pg_relation_filenode(relation regclass) oid Filenode number of the specified relation
pg_relation_filepath(relation regclass) text File path name of the specified relation
 文件访问函数
Name Return Type Description
pg_ls_dir(dirname text) setof text List the contents of a directory
pg_read_file(filename text [, offset bigint, length bigint]) text Return the contents of a text file
pg_read_binary_file(filename text [, offset bigint, length bigint]) bytea Return the contents of a file
pg_stat_file(filename text) record Return information about a file
PostgreSQL 管理函数
 应用锁函数, 对于长时间持锁的应用非常有效. 因为长时间的数据库重量锁会带来垃圾回收的问题. (举例讲解)
Name Return Type Description
pg_advisory_lock(key bigint) void Obtain exclusive session level advisory lock
pg_advisory_lock(key1 int, key2 int) void Obtain exclusive session level advisory lock
pg_advisory_lock_shared(key bigint) void Obtain shared session level advisory lock
pg_advisory_lock_shared(key1 int, key2 int) void Obtain shared session level advisory lock
pg_advisory_unlock(key bigint) boolean Release an exclusive session level advisory lock
pg_advisory_unlock(key1 int, key2 int) boolean Release an exclusive session level advisory lock
pg_advisory_unlock_all() void Release all session level advisory locks held by the current session
pg_advisory_unlock_shared(key bigint) boolean Release a shared session level advisory lock
pg_advisory_unlock_shared(key1 int, key2 int) boolean Release a shared session level advisory lock
pg_advisory_xact_lock(key bigint) void Obtain exclusive transaction level advisory lock
pg_advisory_xact_lock(key1 int, key2 int) void Obtain exclusive transaction level advisory lock
pg_advisory_xact_lock_shared(key bigint) void Obtain shared transaction level advisory lock
PostgreSQL 管理函数
 应用锁函数
Name Return Type Description
pg_advisory_xact_lock_shared(key1 int, key2 int) void Obtain shared transaction level advisory lock
pg_try_advisory_lock(key bigint) boolean Obtain exclusive session level advisory lock if available
pg_try_advisory_lock(key1 int, key2 int) boolean Obtain exclusive session level advisory lock if available
pg_try_advisory_lock_shared(key bigint) boolean Obtain shared session level advisory lock if available
pg_try_advisory_lock_shared(key1 int, key2 int) boolean Obtain shared session level advisory lock if available
pg_try_advisory_xact_lock(key bigint) boolean Obtain exclusive transaction level advisory lock if available
pg_try_advisory_xact_lock(key1 int, key2 int) boolean Obtain exclusive transaction level advisory lock if available
pg_try_advisory_xact_lock_shared(key bigint) boolean Obtain shared transaction level advisory lock if available
pg_try_advisory_xact_lock_shared(key1 int, key2 int) boolean Obtain shared transaction level advisory lock if available
PostgreSQL 进程结构
 进程源码大部分在 : src/backend/postmaster
 postmaster -- 所有数据库进程的主进程(负责监听和fork子进程)
 startup -- 主要用于数据库恢复的进程
 syslogger -- 记录系统日志
 pgstat -- 收集统计信息
 pgarch -- 如果开启了归档, 那么postmaster会fork一个归档进程.
 checkpointer -- 负责检查点的进程
 bgwriter -- 负责把shared buffer中的脏数据写入磁盘的进程
 autovacuum lanucher -- 负责回收垃圾数据的进程, 如果开启了autovacuum的话,那么postmaster会fork这个进程.
 autovacuum worker -- 负责回收垃圾数据的worker进程, 是lanucher进程fork出来的.
PostgreSQL 物理结构
 主要讲一下数据存储结构
 第一个问题 : 对象对应的物理文件在哪里?
 digoal=# select pg_relation_filepath('pg_class'::regclass);
 pg_relation_filepath
 ----------------------------------------------
 pg_tblspc/66422/PG_9.3_201306121/16384/12658
 (1 row)
 分解 :
 1. pg_tblspc/66422/PG_9.3_201306121/16384/12658
 代表$PGDATA中的相对路径
 2. 66422
 这个对应表空间oid
 digoal=# select spcname from pg_tablespace where oid=66422;
 spcname
 ------------
 tbs_digoal
 (1 row)
PostgreSQL 物理结构
 3. 16384
 对应数据库的oid
 digoal=# select oid from pg_database where datname=current_database();
 oid
 -------
 16384
 (1 row)
 4. 12658
 对应表的main fork文件名, 其他fork后面加后缀fsm, vm, init等. 对于超过1GB(系统编译时指定), 文件名后面加 .x
 pg93@db-172-16-3-150-> ll $PGDATA/pg_tblspc/66422/PG_9.3_201306121/16384/12658*
 -rw------- 1 pg93 pg93 80K Dec 7 21:20 /ssd2/pg93/pg_root/pg_tblspc/66422/PG_9.3_201306121/16384/12658
 -rw------- 1 pg93 pg93 24K Nov 27 16:11 /ssd2/pg93/pg_root/pg_tblspc/66422/PG_9.3_201306121/16384/12658_fsm
 -rw------- 1 pg93 pg93 8.0K Nov 21 08:19 /ssd2/pg93/pg_root/pg_tblspc/66422/PG_9.3_201306121/16384/12658_vm
PostgreSQL 物理结构
 数据文件的结构
DataFile
One DataFile(s) Per Table or Index .
BlockID :
sequentially, 0 to 0xFFFFFFFE
Initilized Block Initilized Block
0x00000000 0x00000001
Initilized Block Initilized Block
0x00000002 0x00000003
Initilized Block Initilized Block
0x00000004 0xFFFFFFFE
PostgreSQL 物理结构
 单个BLOCK的结构
PageHeaderData(24 Bytes)
ItemIdData(Array of (offset,length) pairs
pointing to the actual items. 4 bytes per item)
Free space(The unallocated space.
New item pointers are allocated from the start of this area,
ONE
new items from the end.)
PAGE
Items (The actual items themselves.)
Special space (Index access method specific data.
Different methods store different data. Empty
in ordinary tables.)(an access method should always
initialize its pages with PageInit
and then set its own opaque fields.)
PostgreSQL 物理结构
 BLOCK头数据结构
Field Type Length Description
LSN: next byte after last byte of xlog record for