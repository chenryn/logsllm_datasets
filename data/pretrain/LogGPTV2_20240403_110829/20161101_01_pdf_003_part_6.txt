### PostgreSQL 系统视图介绍

- **`pg_seclabels`**：安全标签信息
- **`pg_settings`**：当前数据库集群的参数设置信息
- **`pg_shadow`**：数据库用户信息
- **`pg_stat_activity`**：会话活动信息
- **`pg_stat_all_indexes`**：查询用户权限范围内的所有索引的统计信息
- **`pg_stat_all_tables`**：查询用户权限范围内的所有表的统计信息
- **`pg_stat_bgwriter`**：后台写入进程（bgwriter）的统计信息
- **`pg_stat_database`**：数据库级别的统计信息
- **`pg_stat_database_conflicts`**：数据库冲突统计信息
- **`pg_stat_replication`**：流复制相关的统计信息
- **`pg_stat_sys_indexes`**：系统表相关的索引统计信息
- **`pg_stat_sys_tables`**：系统表统计信息
- **`pg_stat_user_functions`**：用户函数统计信息
- **`pg_stat_user_indexes`**：用户表的索引相关的统计信息
- **`pg_stat_user_tables`**：用户表统计信息
- **`pg_stat_xact_all_tables`**：当前事务的表级统计信息，显示用户可以访问的所有表
- **`pg_stat_xact_sys_tables`**：当前事务的表级统计信息，仅显示系统表
- **`pg_stat_xact_user_functions`**：当前事务的用户函数的统计信息
- **`pg_stat_xact_user_tables`**：当前事务的用户表的统计信息
- **`pg_statio_all_indexes`**：I/O相关的索引统计信息
- **`pg_statio_all_sequences`**：I/O相关的序列统计信息
- **`pg_statio_all_tables`**：I/O相关的表统计信息
- **`pg_statio_sys_indexes`**：系统表相关的I/O索引统计信息
- **`pg_statio_sys_sequences`**：系统表相关的I/O序列统计信息
- **`pg_statio_sys_tables`**：系统表相关的I/O表统计信息
- **`pg_statio_user_indexes`**：用户表的I/O索引统计信息
- **`pg_statio_user_sequences`**：用户表的I/O序列统计信息
- **`pg_statio_user_tables`**：用户表的I/O表统计信息
- **`pg_stats`**：数据库中的统计信息，以列为最小统计单位输出
- **`pg_tables`**：数据库中的表对象的信息
- **`pg_timezone_abbrevs`**：时区缩写信息
- **`pg_timezone_names`**：时区信息，包含全名
- **`pg_user`**：用户信息
- **`pg_user_mappings`**：外部表的用户映射权限信息
- **`pg_views`**：视图信息

### PostgreSQL 管理函数

#### 配置函数
- **`current_setting(setting_name)`**：
  - **返回类型**：`text`
  - **描述**：获取指定设置项的当前值
- **`set_config(setting_name, new_value, is_local)`**：
  - **返回类型**：`text`
  - **描述**：设置参数并返回新值

#### 服务端信号发送函数
- **`pg_cancel_backend(pid int)`**：
  - **返回类型**：`boolean`
  - **描述**：取消指定后端的当前查询。调用者必须与目标后端具有相同的角色，否则需要超级用户权限。
- **`pg_reload_conf()`**：
  - **返回类型**：`boolean`
  - **描述**：使服务器进程重新加载配置文件
- **`pg_rotate_logfile()`**：
  - **返回类型**：`boolean`
  - **描述**：轮转服务器的日志文件
- **`pg_terminate_backend(pid int)`**：
  - **返回类型**：`boolean`
  - **描述**：终止指定后端。调用者必须与目标后端具有相同的角色，否则需要超级用户权限。

#### 备份控制函数
- **`pg_create_restore_point(name text)`**：
  - **返回类型**：`text`
  - **描述**：创建一个用于恢复的命名点（限超级用户）
- **`pg_current_xlog_insert_location()`**：
  - **返回类型**：`text`
  - **描述**：获取当前事务日志插入位置
- **`pg_current_xlog_location()`**：
  - **返回类型**：`text`
  - **描述**：获取当前事务日志写入位置
- **`pg_start_backup(label text [, fast boolean ])`**：
  - **返回类型**：`text`
  - **描述**：准备进行在线备份（限超级用户或复制角色）
- **`pg_stop_backup()`**：
  - **返回类型**：`text`
  - **描述**：完成在线备份（限超级用户或复制角色）
- **`pg_is_in_backup()`**：
  - **返回类型**：`bool`
  - **描述**：如果在线独占备份仍在进行中，则返回 `true`
- **`pg_backup_start_time()`**：
  - **返回类型**：`timestamp with time zone`
  - **描述**：获取正在进行的在线独占备份的开始时间
- **`pg_switch_xlog()`**：
  - **返回类型**：`text`
  - **描述**：强制切换到新的事务日志文件（限超级用户）
- **`pg_xlogfile_name(location text)`**：
  - **返回类型**：`text`
  - **描述**：将事务日志位置字符串转换为文件名
- **`pg_xlogfile_name_offset(location text)`**：
  - **返回类型**：`text, integer`
  - **描述**：将事务日志位置字符串转换为文件名和文件内的字节偏移量
- **`pg_xlog_location_diff(location1 text, location2 text)`**：
  - **返回类型**：`numeric`
  - **描述**：计算两个事务日志位置之间的差异

#### 恢复控制函数
- **`pg_is_in_recovery()`**：
  - **返回类型**：`bool`
  - **描述**：如果恢复仍在进行中，则返回 `true`
- **`pg_last_xlog_receive_location()`**：
  - **返回类型**：`text`
  - **描述**：获取通过流复制接收到并同步到磁盘的最后一个事务日志位置
- **`pg_last_xlog_replay_location()`**：
  - **返回类型**：`text`
  - **描述**：获取在恢复过程中重放的最后一个事务日志位置
- **`pg_last_xact_replay_timestamp()`**：
  - **返回类型**：`timestamp with time zone`
  - **描述**：获取在恢复过程中重放的最后一个事务的时间戳
- **`pg_is_xlog_replay_paused()`**：
  - **返回类型**：`bool`
  - **描述**：如果恢复已暂停，则返回 `true`
- **`pg_xlog_replay_pause()`**：
  - **返回类型**：`void`
  - **描述**：立即暂停恢复
- **`pg_xlog_replay_resume()`**：
  - **返回类型**：`void`
  - **描述**：恢复已暂停的恢复过程

#### 事务镜像导出函数
- **`pg_export_snapshot()`**：
  - **返回类型**：`text`
  - **描述**：保存当前快照并返回其标识符（例如用于并行逻辑备份）

#### 数据库对象管理函数
- **`pg_column_size(any)`**：
  - **返回类型**：`int`
  - **描述**：存储特定值所使用的字节数（可能被压缩）
- **`pg_database_size(oid)`**：
  - **返回类型**：`bigint`
  - **描述**：指定OID的数据库使用的磁盘空间
- **`pg_database_size(name)`**：
  - **返回类型**：`bigint`
  - **描述**：指定名称的数据库使用的磁盘空间
- **`pg_indexes_size(regclass)`**：
  - **返回类型**：`bigint`
  - **描述**：指定表的所有索引使用的总磁盘空间
- **`pg_relation_size(relation regclass, fork text)`**：
  - **返回类型**：`bigint`
  - **描述**：指定表或索引的指定fork（'main', 'fsm' 或 'vm'）使用的磁盘空间
- **`pg_relation_size(relation regclass)`**：
  - **返回类型**：`bigint`
  - **描述**：指定表或索引的主fork使用的磁盘空间
- **`pg_size_pretty(bigint)`**：
  - **返回类型**：`text`
  - **描述**：将64位整数表示的字节数转换为人类可读的格式
- **`pg_size_pretty(numeric)`**：
  - **返回类型**：`text`
  - **描述**：将数值表示的字节数转换为人类可读的格式
- **`pg_table_size(regclass)`**：
  - **返回类型**：`bigint`
  - **描述**：指定表使用的磁盘空间，不包括索引（但包括TOAST、空闲空间映射和可见性映射）
- **`pg_tablespace_size(oid)`**：
  - **返回类型**：`bigint`
  - **描述**：指定OID的表空间使用的磁盘空间
- **`pg_tablespace_size(name)`**：
  - **返回类型**：`bigint`
  - **描述**：指定名称的表空间使用的磁盘空间
- **`pg_total_relation_size(regclass)`**：
  - **返回类型**：`bigint`
  - **描述**：指定表使用的总磁盘空间，包括所有索引和TOAST数据

#### 数据库对象存储位置管理函数
- **`pg_relation_filenode(relation regclass)`**：
  - **返回类型**：`oid`
  - **描述**：指定关系的filenode编号
- **`pg_relation_filepath(relation regclass)`**：
  - **返回类型**：`text`
  - **描述**：指定关系的文件路径名

#### 文件访问函数
- **`pg_ls_dir(dirname text)`**：
  - **返回类型**：`setof text`
  - **描述**：列出目录的内容
- **`pg_read_file(filename text [, offset bigint, length bigint])`**：
  - **返回类型**：`text`
  - **描述**：返回文本文件的内容
- **`pg_read_binary_file(filename text [, offset bigint, length bigint])`**：
  - **返回类型**：`bytea`
  - **描述**：返回二进制文件的内容
- **`pg_stat_file(filename text)`**：
  - **返回类型**：`record`
  - **描述**：返回文件的信息

#### 应用锁函数
- **`pg_advisory_lock(key bigint)`**：
  - **返回类型**：`void`
  - **描述**：获取会话级别的独占咨询锁
- **`pg_advisory_lock(key1 int, key2 int)`**：
  - **返回类型**：`void`
  - **描述**：获取会话级别的独占咨询锁
- **`pg_advisory_lock_shared(key bigint)`**：
  - **返回类型**：`void`
  - **描述**：获取会话级别的共享咨询锁
- **`pg_advisory_lock_shared(key1 int, key2 int)`**：
  - **返回类型**：`void`
  - **描述**：获取会话级别的共享咨询锁
- **`pg_advisory_unlock(key bigint)`**：
  - **返回类型**：`boolean`
  - **描述**：释放会话级别的独占咨询锁
- **`pg_advisory_unlock(key1 int, key2 int)`**：
  - **返回类型**：`boolean`
  - **描述**：释放会话级别的独占咨询锁
- **`pg_advisory_unlock_all()`**：
  - **返回类型**：`void`
  - **描述**：释放当前会话持有的所有会话级别的咨询锁
- **`pg_advisory_unlock_shared(key bigint)`**：
  - **返回类型**：`boolean`
  - **描述**：释放会话级别的共享咨询锁
- **`pg_advisory_unlock_shared(key1 int, key2 int)`**：
  - **返回类型**：`boolean`
  - **描述**：释放会话级别的共享咨询锁
- **`pg_advisory_xact_lock(key bigint)`**：
  - **返回类型**：`void`
  - **描述**：获取事务级别的独占咨询锁
- **`pg_advisory_xact_lock(key1 int, key2 int)`**：
  - **返回类型**：`void`
  - **描述**：获取事务级别的独占咨询锁
- **`pg_advisory_xact_lock_shared(key bigint)`**：
  - **返回类型**：`void`
  - **描述**：获取事务级别的共享咨询锁
- **`pg_advisory_xact_lock_shared(key1 int, key2 int)`**：
  - **返回类型**：`void`
  - **描述**：获取事务级别的共享咨询锁
- **`pg_try_advisory_lock(key bigint)`**：
  - **返回类型**：`boolean`
  - **描述**：尝试获取会话级别的独占咨询锁（如果可用）
- **`pg_try_advisory_lock(key1 int, key2 int)`**：
  - **返回类型**：`boolean`
  - **描述**：尝试获取会话级别的独占咨询锁（如果可用）
- **`pg_try_advisory_lock_shared(key bigint)`**：
  - **返回类型**：`boolean`
  - **描述**：尝试获取会话级别的共享咨询锁（如果可用）
- **`pg_try_advisory_lock_shared(key1 int, key2 int)`**：
  - **返回类型**：`boolean`
  - **描述**：尝试获取会话级别的共享咨询锁（如果可用）
- **`pg_try_advisory_xact_lock(key bigint)`**：
  - **返回类型**：`boolean`
  - **描述**：尝试获取事务级别的独占咨询锁（如果可用）
- **`pg_try_advisory_xact_lock(key1 int, key2 int)`**：
  - **返回类型**：`boolean`
  - **描述**：尝试获取事务级别的独占咨询锁（如果可用）
- **`pg_try_advisory_xact_lock_shared(key bigint)`**：
  - **返回类型**：`boolean`
  - **描述**：尝试获取事务级别的共享咨询锁（如果可用）
- **`pg_try_advisory_xact_lock_shared(key1 int, key2 int)`**：
  - **返回类型**：`boolean`
  - **描述**：尝试获取事务级别的共享咨询锁（如果可用）

### PostgreSQL 进程结构
- **`postmaster`**：所有数据库进程的主进程，负责监听和fork子进程
- **`startup`**：主要用于数据库恢复的进程
- **`syslogger`**：记录系统日志
- **`pgstat`**：收集统计信息
- **`pgarch`**：如果开启了归档，`postmaster` 会fork一个归档进程
- **`checkpointer`**：负责检查点的进程
- **`bgwriter`**：负责将shared buffer中的脏数据写入磁盘的进程
- **`autovacuum launcher`**：负责回收垃圾数据的进程，如果开启了autovacuum，`postmaster` 会fork这个进程
- **`autovacuum worker`**：负责回收垃圾数据的工作进程，由launcher进程fork出来

### PostgreSQL 物理结构
#### 数据存储结构
- **对象对应的物理文件在哪里？**
  ```sql
  digoal=# select pg_relation_filepath('pg_class'::regclass);
  pg_relation_filepath
  ----------------------------------------------
  pg_tblspc/66422/PG_9.3_201306121/16384/12658
  (1 row)
  ```
  - **分解**：
    1. `pg_tblspc/66422/PG_9.3_201306121/16384/12658`：代表 `$PGDATA` 中的相对路径
    2. `66422`：对应表空间OID
      ```sql
      digoal=# select spcname from pg_tablespace where oid=66422;
      spcname
      ------------
      tbs_digoal
      (1 row)
      ```
    3. `16384`：对应数据库的OID
      ```sql
      digoal=# select oid from pg_database where datname=current_database();
      oid
      -------
      16384
      (1 row)
      ```
    4. `12658`：对应表的main fork文件名，其他fork后面加后缀 `fsm`, `vm`, `init` 等。对于超过1GB（系统编译时指定），文件名后面加 `.x`。
      ```bash
      pg93@db-172-16-3-150-> ll $PGDATA/pg_tblspc/66422/PG_9.3_201306121/16384/12658*
      -rw------- 1 pg93 pg93 80K Dec 7 21:20 /ssd2/pg93/pg_root/pg_tblspc/66422/PG_9.3_201306121/16384/12658
      -rw------- 1 pg93 pg93 24K Nov 27 16:11 /ssd2/pg93/pg_root/pg_tblspc/66422/PG_9.3_201306121/16384/12658_fsm
      -rw------- 1 pg93 pg93 8.0K Nov 21 08:19 /ssd2/pg93/pg_root/pg_tblspc/66422/PG_9.3_201306121/16384/12658_vm
      ```

#### 数据文件的结构
- **每个表或索引对应一个数据文件**
- **BlockID**：从 `0x00000000` 到 `0xFFFFFFFE` 依次递增
- **初始化块**：
  - `0x00000000` 到 `0xFFFFFFFE` 依次递增

#### 单个BLOCK的结构
- **PageHeaderData**：24字节
- **ItemIdData**：项目指针数组（每个项目4字节）
- **Free space**：未分配的空间，新项目指针从该区域的起始处分配，新项目从该区域的末尾分配
- **Items**：实际项目
- **Special space**：索引访问方法特定的数据（不同方法存储不同的数据，普通表为空）

#### BLOCK头数据结构
- **Field Type**：长度和描述
  - **LSN**：下一个字节在xlog记录之后的位置