域：YUNYING.LAB
域控：Windows Server 2008 R2 x64(DC)：用户Administrator
域内主机：Windows Server 2008 R2 x64(s2)：用户tsvc
所需工具：
Mimikatz
实验流程：
在域中只有服务账户才能有委派功能，所以先把用户tsvc设置为服务账号。
setspn -U -A variant/golden tsvc
通过setspn -l tsvc查看配置成功。
然后在“AD用户和计算机”中将tsvc设置为非约束委派模式
此时在域控上使用Administrator访问tsvc所在主机S2的SMB服务。
我们在S2上通过mimikatz可以导出Administrator发送过来的TGT内容。这里需要使用管理员权限打开mimikatz，然后通过privilege::debug命令提升权限，如果没有提升权限会报kuhl_m_sekurlsa_acquireLSA错误。再使用sekurlsa::tickets
/export命令导出内存中所有的票据。
可以看到名称为[0;9bec9]PI:EMAIL的这一条即为Administrator发送的TGT。
此时访问域控被拒绝。
通过kerberos::ptt [0;9bec9]PI:EMAIL命令将TGT内容导入到当前会话中，其实这也是一次Pass The Ticket攻击（有兴趣的可以了解一下）。
通过kerberos::list查看当前会话可以看到票据已经导入到当前会话。
导入之后已经可以访问域控的共享目录。也就是说每当存在用户访问tsvc的服务时，tsvc的服务就会将访问者的TGT保存在内存中，可以通过这个TGT访问这个TGT所属用户的所有服务。非约束委派的原理相对简单，就是通过获取到的administrator的TGT进行下一步的访问。
这里有一个点就是sekurlsa::tickets是查看内存中所有的票据，而kerberos::list只是查看当前会话中的kerberos票据。更多的mimikatz的使用可以参考
Print Spooler服务+非约束委派提升至域控权限：
在2018年的DerbyCon中Will Schroeder（@ Harmj0y），Lee Christensen（@Tifkin_）和Matt
Nelson（@ enigma0x3）提到了关于非约束委派的新方式，通过域控的Print
Spooler服务和非约束委派账户提升至域控权限（），主要的原理就是通过Print
Spooler服务使用特定POC让域控对设置了非约束委派的主机发起请求，获取域控的TGT，从而提升权限。
## 0x04约束委派的利用
约束委派由于只指定了特定的服务，所以利用起来相对非约束委派更加复杂，本实验的条件是配置了约束委派的账号，并且已知当前配置了约束委派的当前账户的密码（tsvc的密码）。
### 1 实验
这里环境和上文中不变，依然使用普通域账号tsvc和域Administrator账户。不过增加了一个新的工具kekeo，他和mimikatz是同一个作者。
1）、确认账号tsvc设置了约束委派。
通过工具PowerView的查询可以看到域内配置了约束委派的列表：
2）、使用kekeo对域控发起申请TGT的请求。
通过已知的账户名和明文密码对KDC发起请求，得到TGT。
Kekeo# tgt::ask /user:tsvc /domain:yunying.lab /password:admin1234!
/ticket:tsvc.kirbi
/user:当前用户名
/domain:所在域名
/password:当前用户名的密码
/ticket:生成票据名称，上图里生成的没有按参数设定的来命名，不重要，也可以直接跳过这个参数
3）、使用kekeo申请TGS票据
Kekeo#tgs::s4u /tgt:TGT_filename /user:PI:EMAIL
/service:cifs/dc.yunying.lab
/tgt:上一步通过kekeo生成的tgt票据
/user:想要伪造的用户名写全称（用户名@域名）
/service:想要伪造访问的服务名（服务名/主机的FQDN名称）
4）、从kekeo中使用exit命令退出，然后使用mimikatz将生成的TGS文件导入到Kerberos凭据列表中
这时可以看到导入之后已经能够成功访问域控的共享文件（严格来说应该是非约束委派中设置的SPN的权限）。而且在这个过程中是不需要管理员权限的，只是用当前账户的权限就可以完成，因为不需要从内存中导出票据。
### 2 原理
下面看一下在非约束委派中是如何实现通过非约束委派去获得所设置的SPN的权限的。实验过程其实主要是三个步骤：
  1. 请求TGT
  2. 请求TGS
  3. 将TGS导入内存
主要看1、2两个步骤，第1步中使用Kekeo发起AS-REQ请求去请求TGT。
Kekeo# tgt::ask /user:tsvc /domain:yunying.lab /password:admin1234!
/ticket:tsvc.kirbi
这时tsvc获取到了一个TGT，并且kekeo工具将其保存为一个kirbi格式的文件。
第2步，再使用这个TGT申请两个ST文件，上文中说到过在约束委派实现的过程中分为两个部分，分别是S4U2Self扩展和S4U2Proxy扩展。S4U2Self中Service1会代替用户向KDC申请一张用于访问自身的TGS，这个TGS也就是生成的两个TGS中的一个（PI:EMAIL@PI:EMAIL）还有一个TGS是用于访问非受限委派中设置的SPN的TGS（PI:EMAIL@YUNYING.LAB_cifs~PI:EMAIL）。
我们抓包也可以看到这里是发起了两次TGS_REQ请求，在第一个TGS_REQ请求的包里面可以看到KRB5-PADATA-S4U2SSELF的标识。并且cname和sname都是tsvc，也是侧面说明这个TGS其实就是拿来验证自身的。
再看第二个TGS_REQ请求，sname的值为cifs/dc.yunying.lab，也就是截图中非约束委派中“可由此账户提供委派凭据的服务”一栏中添加的SPN。而这个其实就是S4U2Proxy扩展中所申请的TGS票据。
关于约束委派的这种攻击方式就是通过在Service1（tsvc）中将自己伪造成用户，然后获取允许约束委派的SPN的TGS的一个过程。
## 0x05委派攻击的防御
通过上文中说到设置了非约束委派的账户权限如果被窃取那么攻击者可能获取非常多其他账户的TGT，所以最好是不要在域中使用非约束委派这种功能。
域中不需要使用委派的账户特别是administrator账户，设置为“敏感用户不能被委派”。
如果是win2012的系统也可以通过设置受保护的用户组来缓解委派所带来的危害。
## 0x06总结
在两种方式的委派中，非约束委派的实验获取的权限更大，能够通过TGT直接获取目标主机的所有服务权限，而约束委派实验主要是通过TGS来获取约束委派列表中设置的SPN的TGS来获得相应的SPN的权限。
同时在今年有国外的安全人员提出来基于NTLMRelay和约束委派结合进行权限提升的攻击方式，详情可参考下面链接，此处不再赘述：
这几篇文章也是通过实验来说明分析每一种Kerberos攻击方式的原理和如何实现，个人认为在Kerberos的攻击还是需要结合其他攻击方式才能发挥更大的作用，关于更多Kerberos的不同意见及看法欢迎留言交流，本文暂时到此完结，希望对你有所帮助。
实验工具
## 参考链接