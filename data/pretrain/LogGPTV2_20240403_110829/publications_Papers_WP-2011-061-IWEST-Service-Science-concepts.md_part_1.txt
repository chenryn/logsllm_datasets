Jorge Cardoso and Paulo Rupino, Service Science: concepts, tools and platforms to
support digital services for SME, Workshop on Enterprise Systems and Technology (I-
WEST 2011), Setúbal, Portugal. June 29-30, 2011.
Service Science: concepts, tools and platforms to support
digital services for SME
Jorge Cardoso and Paulo Rupino da Cunha
CISUC, Universidade de Coimbra
Pólo II - Pinhal de Marrocos,
3030-290 Coimbra
{jcardoso, rupino}@dei.uc.pt
Abstract. Digital services emerging from Service Science call for research in
areas as diverse as business, law, economics, behavior, and psychology to
systematically design services. Current research and approaches have mainly
developed intricate theories, methodologies, and apparatus to invent, design,
engineer and trade services. These solutions are to be used by large
organizations since their complexity hinders their use by small and medium
enterprises (SME). Based on this observation, this paper provides an overview
of research areas which needs to be explored to provide the first building blocks
and foundations to enable a widespread trading of services by non-IT
professionals and SME.
Keywords: service science, digital services, Internet of Services.
1 Introduction
Services currently govern economies and will unquestionably become even more
significant in the near future. This trend is supported by the launch of a proposal for a
Directive on Services in the Internal Market [1] from the European Commission. To
enable the trading of services within Europe and to emerging economies, the concept
of Internet of Services (IoS) proposes new business, theoretical, and technological
models that can radically change the way day-to-day services are provisioned and
contracted.
Significant investments have already been made to take the concept of IoS into
production systems. The TEXO [2] project has invested large efforts to create
theories, systems, and tools to enable large companies to engineer, design and publish
their services using electronic marketplaces.
The development efforts have been carried mainly to provide large organizations
with the necessary systems to capitalize on the IoS. SAP Research, the research
division of the largest software developer in Europe, has devoted considerable efforts
to develop languages and marketplaces for their services [3]. One of the outcomes
2 Jorge Cardoso and Paulo Rupino da Cunha
was the USDL1 language which was used to describe services [4]. While efforts were
directed at large organizations, the European Union considers that the IoS is also
suitable for SME (Small and Medium Enterprises). Enabling the design and trading of
services by non-IT professionals and SME brings a new set of requirements that needs
to be addressed, namely:
1. Graphical description languages. Current service description languages, such as
USDL [5], are suitable to describe complex services made available by companies
such as SAP AG, but their direct use is not appropriate for non-IT professionals.
For SME, the development of a graphical representation language for USDL
(called graphical USDL or gUSDL) that will shield users from complexity is
needed.
2. Design tools for non-IT professionals. The tools that have previously been
proposed, for example the ISE Methodology and Workbench [6-8], are suitable for
highly qualified engineers but overly complex for non-IT users and SME.
Therefore, new concept tools which implement the gUSDL graphical specification
language and provide an intuitive environment to design services are also needed.
3. One-click service marketplaces. gUSDL designs need to be uploaded for
advertisement in service marketplaces [9] which bring consumers and providers in
a “one-stop” exposure of business services through a centralized channel [5]. Large
companies use complex marketplaces such as Salesforce.com and
Webservicex.net. As such, easy-to-use prototypes are needed to show that non-
professional users are able to interact and feel comfortable with marketplaces to
publish and consume services on their own.
4. Comprehensive service use cases. So far, there is a lack of a systematic validation
of the languages and tools proposed for the IoS. For example, USDL only provides
a few examples of the use of the language and its engineering workbench [9].
Therefore, there is the need to identify a set of use cases, scenarios, storyboards,
and patterns that non-IT professionals and SME can use to learn by example and
quickly design their own service solutions.
Achieving these four objectives will enable SME to create new market
opportunities for services, outside company “firewalls”. The cross-border market
access to services will be facilitated at the national and international level. The impact
of IoS platforms for businesses and the IT community are enormous since the service
sector represents more than 70% of the Gross National Product and the European
directive can amplify the consumption of services in the European Union by 37
billion Euros [1].
The remainder of the paper is structured as follows. The second section presents
the related work in this area with a special emphasis on graphical description
languages, design tools, and electronic marketplaces for services. Section 3 discusses
the characteristics and advantages of developing a graphical description language for
the USDL specification – which we call gUSDL – to represented business services.
Section 4 elaborates on the development of a service design tool for non-IT
1 http://www.internet-of-services.com
Service Science: concepts, tools and platforms to support digital services for SME 3
professionals – called gUSDL Design. Section 5 provides a view on service
marketplaces and section 6 focuses on the need for a comprehensive service use case
set for SME to support the adoption and use of digital services. Finally, section 7
closes the manuscript with our conclusions.
2 Related work
The importance of domain specific graphical description languages to represent
artifacts has long been recognized as an important success factor in many fields.
SoaML [10] is a UML-based language created for architecting systems of services.
The emphasis is on creating architectures, not individual business services, but to
produce service architectures that operate according to the SOA model. SoaML
overlaps with the graphical USDL (gUSDL) language proposed for the IoS since they
both include the notion of service but model distinct types of services.
The ISE Workbench [7] includes a very simple graphical language to describe
some properties associated with services. The graphical language is not more than a
set of icons related with service properties. It was a first idea to explore forms to
express services’ properties during service design [11]. Compared to the ISE
Workbench, we believe that a sound and complete visual language is needed.
Osterwalder and Pigneur [12] present a canvas to create new business models.
While some of the concepts used overlap with the concepts to describe a service, such
as pricing and customer [6], the solution proposed is directed at managers looking for
new business models and not for the development of individual services. Furthermore,
the models are not developed to be later mapped to a specification language to be
used to advertise services in marketplaces.
In the area of business process management, the BPMN [13] was developed as a
visual language to represent business processes of organizations. Our proposal is
similar in the sense that we also envision the existence of dedicated visual languages
for service modeling as it has been done with BPMN to visually model business
processes.
Having a graphical representation language for services (i.e., gUSDL) is a first
step, but its benefits can be amplified when suitable tools are available. Design tools
for non-IT professionals, such as a gUSDL Design tool do not exist yet. The current
reference environment for service description is the ISE Workbench [8], developed in
the TEXO/THESEUS project [2]. This is a powerful but complex tool, meant to be
used by IT professionals, much like IBM’s Rational Rose Enterprise for UML
modeling [14]. SME end users usually do not have such technical expertise, so they
need simpler tools with a closer tie to business concepts. Products such as Visual
Rules [15] illustrate how a complexity in the field of business rules similar to service
modeling can be tamed for non-technical people.
Shostack [16-17] has developed tools to support service blueprinting
methodologies to allow for a quantitative description of critical service elements, such
as time, logical sequences of actions and processes. Wilson et al. [18] uses
blueprinting as a tool for simultaneously depicting the service process, the points of
4 Jorge Cardoso and Paulo Rupino da Cunha
customer contact, and the evidence of the service from the customer’s point of view.
Unfortunately, the tools and languages used by Shostack and Wilson et al. were not
developed to describe services that would later be interpreted, searched, and executed
by automated means. While the concepts developed are important, they need to be
reframed in the context of the Internet of Services.
When service designs are ready, they can be published in a service marketplace for
consumption. Software-as-a-Service marketplaces [19] like Salesforce.com,
Workday.com and webservicex.net use WSDL to provide technical interfaces, most
of the remaining description is presented as structured and unstructured text.
Structured text includes a categorization of the service, pricing or provider
information. Unstructured text is used to point out the benefits, usage scenarios and
policies of the service offer [5]. Other business service marketplaces [20], e.g.
American Express Intelligent Online Marketplace (AXIOM), Intel Business Exchange
or IBM SmartMarket, are centrally governed by a dominant commercial player
focused on differentiation. As the range of services on these marketplaces is quite
diverse, descriptions are mostly free-text in addition to basic attributes like price,
provider details, reputation and categorization [5]. The IoS and digital services require
a stronger systematization, formalization and structuring of service descriptions to
enable, for example, a high precision and recall when searching for services.
3 Graphical description languages for services
Although interface descriptions for automated Web services (RESTfull or WSDL
services) are in widespread use today, the same cannot be said for the description of
business or non-functional components of services, which are often described in free
form text (see [21-22]). While textual representations may be very rich, direct
automatic handling of such information is hard.
Design methods and methodologies for software design, such as Structured Design
from Constantine and Yourdon, Jackson System Development, or OO design from
Rumbaugh and Booch are not sufficient to design services. While they have been
applied successfully for years to software development, new approaches, notations,
rules, and design guideline are needed to represent service designs. For example, how
can a service’ business model be formally represented using a structure which obeys
domain dependent rules and constraints, and is understood by computer systems?
Data-flow models, entity-relation models, inheritance and interaction models are not
sufficient when the pricing or the legal regulations of a service need to be formalized.
The concept of service from the areas of marketing and management has produced
several tools that have been used for service analysis and design. For example,
Blueprinting captures the multiplicity of dimensions involved when a service is
provisioned [23]. Nonetheless, existing proposals are decoupled from formal notation
systems and disconnected with the consumption of a service [24].
Service Science: concepts, tools and platforms to support digital services for SME 5
As a new approach, the USDL (Unified Service Description Language [5]; see Fig
1) specification language has been developed to describe complex services which are
made available in marketplaces by companies such as SAP AG.
Technical
Protocol ssenisuB
Information
+++
Performance p de er pf eo nr dm aa bn ic lie t y0 . 0.* ..* Technical 1 0..1 Invocation 1..*
security 0..*
Dependability 0..1 Execution
Service Level
Pay-per-use, flat rate, Security Service
T v Caw oro mia p mba i Pl sr e st r t i it ca oa er nr ii ff ff ,, DocR umat ein ng ta tion r da oti cn ug m 0 e. nL .* te ag tia ol ns 0..* S+ u+ b+ perspective C Po rn os cu em sser +++ Operationaf l mun ilc et si to on na el si t 0y . .0 *..* DF eu sn cc rt ii po tn ioal n Operational
operations 0..* classification 0..*
ValidLocations Pricings Marketing subperspectives 0..* phases 0..*
price 0..* Channels Operation
ValidPeriods Certifications Business
startDate, endDate Op Ne ar ta ut ri eon interfaces 0..*
Interface
Participants
input 0..* output 0..*
partners 0..* provider 1..1 consumers 0..*
Input Output
Partners Provider Co Pn rosu fim leer Interface Interface
ports 1..* ports 1..*
bundle 0..1 1 1
Bundling Port Resource
Me Sas yu sr te em ment 1..1 EP xr to ep ne sr ioty n 1..* P Ee xrs tep ne sc it oiv ne +++ ProcessModels Organization Address Contact DU en si cv re iprs tia ol n
Fig. 1. Early version of the USDL model
The direct use of the models developed is suitable for technical personal, but not
appropriate for non-professional users. Instead, and for SME, there is the need for the
development of a graphical representation language for USDL that will enable an
easy way to describe services by relying on a similar approach to the BPMN visual
language devised to design business processes. Therefore, it is indispensable to
increase the level of abstraction of the USDL language and provide a simple, easy-to-
use, graphical language – called gUSDL – that will interface with the USDL model.
To develop a suitable graphical language, it will be advantageous to explore the
use of metaphors to organize and structure a visual service description framework and
give insights into the represented information through the key characteristics of the
metaphor (graphic facilitation, knowledge maps, and cognitive mapping). In
particular, the following service design issues need to be considered:
─ Design issue 1. There should be an unambiguous translation from the visual
service description gUSDL to the specification formalism USDL.
─ Design issue 2. The design of gUSDL needs to take into account the human
factors of individual users, particularly the characteristics of non-IT
professionals from SME.
─ Design issue 3. Each graphical construction used in gUSDL should have a well
defined business, operational, and technical meaning that can be simply
explained and applied in several situations involving services.
6 Jorge Cardoso and Paulo Rupino da Cunha
─ Design issue 4. gUSDL needs to take into account the need for modularity such
that service structures may be split and recombined to enable a divide-and-
conquer approach to service design.
The graphical language needs to be later validated and evaluated taking into
account several scenarios. Small scale test-beds with selected services need to be
identified to validate the business, operational and technological perspectives of
USDL. In addition, validation must also be done with more complex and long-
running service models to describe more advanced business services.
4 Service design tools for non-IT professionals
So far the tools implemented to develop services for the IoS were overly complex and