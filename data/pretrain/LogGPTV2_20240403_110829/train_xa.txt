.\"   gnu glibc-2 source code and manual
.\"   dinkumware c library reference http://www.dinkumware.com/
.\"   opengroup's single unix specification http://www.unix-systems.org/online.html
.\"   iso/iec 9899:1999
.\"
.th iswupper 3  2021-03-22 "gnu" "linux programmer's manual"
.sh name
iswupper \- test for uppercase wide character
.sh synopsis
.nf
.b #include 
.pp
.bi "int iswupper(wint_t " wc );
.fi
.sh description
the
.br iswupper ()
function is the wide-character equivalent of the
.br isupper (3)
function.
it tests whether
.i wc
is a wide character
belonging to the wide-character class "upper".
.pp
the wide-character class "upper" is a subclass of the wide-character class
"alpha", and therefore also a subclass of the wide-character class "alnum", of
the wide-character class "graph" and of the wide-character class "print".
.pp
being a subclass of the wide-character class "print", the wide-character class
"upper" is disjoint from the wide-character class "cntrl".
.pp
being a subclass of the wide-character class "graph", the wide-character class
"upper" is disjoint from the wide-character class "space" and its subclass
"blank".
.pp
being a subclass of the wide-character class "alnum", the wide-character class
"upper" is disjoint from the wide-character class "punct".
.pp
being a subclass of the wide-character class "alpha", the wide-character class
"upper" is disjoint from the wide-character class "digit".
.pp
the wide-character class "upper" contains at least those characters
.i wc
which are equal to
.i towupper(wc)
and different from
.ir towlower(wc) .
.pp
the wide-character class "upper" always contains at least the
letters \(aqa\(aq to \(aqz\(aq.
.sh return value
the
.br iswupper ()
function returns nonzero if
.i wc
is a wide character
belonging to the wide-character class "upper".
otherwise, it returns zero.
.sh attributes
for an explanation of the terms used in this section, see
.br attributes (7).
.ad l
.nh
.ts
allbox;
lbx lb lb
l l l.
interface	attribute	value
t{
.br iswupper ()
t}	thread safety	mt-safe locale
.te
.hy
.ad
.sp 1
.sh conforming to
posix.1-2001, posix.1-2008, c99.
.sh notes
the behavior of
.br iswupper ()
depends on the
.b lc_ctype
category of the
current locale.
.pp
this function is not very appropriate for dealing with unicode characters,
because unicode knows about three cases: upper, lower, and title case.
.sh see also
.br isupper (3),
.br iswctype (3),
.br towupper (3)
.sh colophon
this page is part of release 5.13 of the linux
.i man-pages
project.
a description of the project,
information about reporting bugs,
and the latest version of this page,
can be found at
\%https://www.kernel.org/doc/man\-pages/.
.\" copyright 2002 walter harms (PI:EMAIL)
.\"
.\" %%%license_start(gpl_noversion_oneline)
.\" distributed under gpl
.\" %%%license_end
.\"
.th csinh 3 2021-03-22 "" "linux programmer's manual"
.sh name
csinh, csinhf, csinhl \- complex hyperbolic sine
.sh synopsis
.nf
.b #include 
.pp
.bi "double complex csinh(double complex " z ");"
.bi "float complex csinhf(float complex " z ");"
.bi "long double complex csinhl(long double complex " z ");"
.pp
link with \fi\-lm\fp.
.fi
.sh description
these functions calculate the complex hyperbolic sine of
.ir z .
.pp
the complex hyperbolic sine function is defined as:
.pp
.nf
    csinh(z) = (exp(z)\-exp(\-z))/2
.fi
.sh versions
these functions first appeared in glibc in version 2.1.
.sh attributes
for an explanation of the terms used in this section, see
.br attributes (7).
.ad l
.nh
.ts
allbox;
lbx lb lb
l l l.
interface	attribute	value
t{
.br csinh (),
.br csinhf (),
.br csinhl ()
t}	thread safety	mt-safe
.te
.hy
.ad
.sp 1
.sh conforming to
c99, posix.1-2001, posix.1-2008.
.sh see also
.br cabs (3),
.br casinh (3),
.br ccosh (3),
.br ctanh (3),
.br complex (7)
.sh colophon
this page is part of release 5.13 of the linux
.i man-pages
project.
a description of the project,
information about reporting bugs,
and the latest version of this page,
can be found at
\%https://www.kernel.org/doc/man\-pages/.
.\" copyright (c) bruno haible 
.\"
.\" %%%license_start(gplv2+_doc_onepara)
.\" this is free documentation; you can redistribute it and/or
.\" modify it under the terms of the gnu general public license as
.\" published by the free software foundation; either version 2 of
.\" the license, or (at your option) any later version.
.\" %%%license_end
.\"
.\" references consulted:
.\"   gnu glibc-2 source code and manual
.\"   dinkumware c library reference http://www.dinkumware.com/
.\"   opengroup's single unix specification http://www.unix-systems.org/online.html
.\"   iso/iec 9899:1999
.\"
.th wcsrtombs 3  2021-03-22 "gnu" "linux programmer's manual"
.sh name
wcsrtombs \- convert a wide-character string to a multibyte string
.sh synopsis
.nf
.b #include 
.pp
.bi "size_t wcsrtombs(char *restrict " dest ", const wchar_t **restrict " src ,
.bi "                 size_t " len ", mbstate_t *restrict " ps );
.fi
.sh description
if
.i dest
is not null,
the
.br wcsrtombs ()
function converts
the wide-character string
.i *src
to a multibyte string starting at
.ir dest .
at most
.i len
bytes are written to
.ir dest .
the shift state
.i *ps
is updated.
the conversion is effectively performed by repeatedly
calling
.ir "wcrtomb(dest, *src, ps)" ,
as long as this call succeeds,
and then incrementing
.i dest
by the
number of bytes written and
.i *src
by one.
the conversion can stop for three reasons:
.ip 1. 3
a wide character has been encountered that can not be represented as a
multibyte sequence (according to the current locale).
in this case,
.i *src
is left pointing to the invalid wide character,
.i (size_t)\ \-1
is returned,
and
.i errno
is set to
.br eilseq .
.ip 2.
the length limit forces a stop.
in this case,
.i *src
is left pointing
to the next wide character to be converted,
and the number of bytes written to
.i dest
is returned.
.ip 3.
the wide-character string has been completely converted, including the
terminating null wide character (l\(aq\e0\(aq),
which has the side effect of bringing back
.i *ps
to the initial state.
in this case,
.i *src
is set to null, and the number
of bytes written to
.ir dest ,
excluding the terminating null byte (\(aq\e0\(aq),
is returned.
.pp
if
.ir dest
is null,
.i len
is ignored,
and the conversion proceeds as above, except that the converted bytes
are not written out to memory, and that
no length limit exists.
.pp
in both of the above cases,
if
.i ps
is null, a static anonymous
state known only to the
.br wcsrtombs ()
function is used instead.
.pp
the programmer must ensure that there is room for at least
.i len
bytes
at
.ir dest .
.sh return value
the
.br wcsrtombs ()
function returns
the number of bytes that make up the
converted part of multibyte sequence,
not including the terminating null byte.
if a wide character was encountered
which could not be converted,
.i (size_t)\ \-1
is returned, and
.i errno
set to
.br eilseq .
.sh attributes
for an explanation of the terms used in this section, see
.br attributes (7).
.ad l
.nh
.ts
allbox;
lb lb lbx
l l l.
interface	attribute	value
t{
.br wcsrtombs ()
t}	thread safety	t{
mt-unsafe race:wcsrtombs/!ps
t}
.te
.hy
.ad
.sp 1
.sh conforming to
posix.1-2001, posix.1-2008, c99.
.sh notes
the behavior of
.br wcsrtombs ()
depends on the
.b lc_ctype
category of the
current locale.
.pp
passing null as
.i ps
is not multithread safe.
.sh see also
.br iconv (3),
.br mbsinit (3),
.br wcrtomb (3),
.br wcsnrtombs (3),
.br wcstombs (3)
.sh colophon
this page is part of release 5.13 of the linux
.i man-pages
project.
a description of the project,
information about reporting bugs,
and the latest version of this page,
can be found at
\%https://www.kernel.org/doc/man\-pages/.
.\" copyright 1999      dimitri papadopoulos (PI:EMAIL)
.\"
.\" %%%license_start(gplv2+_doc_full)
.\" this is free documentation; you can redistribute it and/or
.\" modify it under the terms of the gnu general public license as
.\" published by the free software foundation; either version 2 of
.\" the license, or (at your option) any later version.
.\"
.\" the gnu general public license's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" this manual is distributed in the hope that it will be useful,
.\" but without any warranty; without even the implied warranty of
.\" merchantability or fitness for a particular purpose.  see the
.\" gnu general public license for more details.
.\"
.\" you should have received a copy of the gnu general public
.\" license along with this manual; if not, see
.\" .
.\" %%%license_end
.\"
.th iso_8859-7 7 2020-08-13 "linux" "linux programmer's manual"
.sh name
iso_8859-7 \- iso 8859-7 character set encoded in octal, decimal,
and hexadecimal
.sh description
the iso 8859 standard includes several 8-bit extensions to the ascii
character set (also known as iso 646-irv).
iso 8859-7 encodes the
characters used in modern monotonic greek.
.ss iso 8859 alphabets
the full set of iso 8859 alphabets includes:
.ts
l l.
iso 8859-1	west european languages (latin-1)
iso 8859-2	central and east european languages (latin-2)
iso 8859-3	southeast european and miscellaneous languages (latin-3)
iso 8859-4	scandinavian/baltic languages (latin-4)
iso 8859-5	latin/cyrillic
iso 8859-6	latin/arabic
iso 8859-7	latin/greek
iso 8859-8	latin/hebrew
iso 8859-9	latin-1 modification for turkish (latin-5)
iso 8859-10	lappish/nordic/eskimo languages (latin-6)
iso 8859-11	latin/thai
iso 8859-13	baltic rim languages (latin-7)
iso 8859-14	celtic (latin-8)
iso 8859-15	west european languages (latin-9)
iso 8859-16	romanian (latin-10)
.te
.ss iso 8859-7 characters
the following table displays the characters in iso 8859-7 that
are printable and unlisted in the
.br ascii (7)
manual page.
.ts
l l l c lp-1.
oct	dec	hex	char	description
_
240	160	a0	 	no-break space
241	161	a1	‘	left single quotation mark
242	162	a2	’	right single quotation mark
243	163	a3	£	pound sign
244	164	a4	€	euro sign
245	165	a5	₯	drachma sign
246	166	a6	¦	broken bar
247	167	a7	§	section sign
250	168	a8	¨	diaeresis
251	169	a9	©	copyright sign
252	170	aa	ͺ	greek ypogegrammeni
253	171	ab	«	left-pointing double angle quotation mark
254	172	ac	¬	not sign
255	173	ad	­	soft hyphen
257	175	af	―	horizontal bar
260	176	b0	°	degree sign
261	177	b1	±	plus-minus sign
262	178	b2	²	superscript two
263	179	b3	³	superscript three
264	180	b4	΄	greek tonos
265	181	b5	΅	greek dialytika tonos
266	182	b6	ά	greek capital letter alpha with tonos
267	183	b7	·	middle dot
270	184	b8	έ	greek capital letter epsilon with tonos
271	185	b9	ή	greek capital letter eta with tonos
272	186	ba	ί	greek capital letter iota with tonos
273	187	bb	»	right-pointing double angle quotation mark
274	188	bc	ό	greek capital letter omicron with tonos
275	189	bd	½	vulgar fraction one half
276	190	be	ύ	greek capital letter upsilon with tonos
277	191	bf	ώ	greek capital letter omega with tonos
300	192	c0	ΐ	t{
greek small letter iota with
.br
dialytika and tonos
t}
301	193	c1	α	greek capital letter alpha
302	194	c2	β	greek capital letter beta
303	195	c3	γ	greek capital letter gamma
304	196	c4	δ	greek capital letter delta
305	197	c5	ε	greek capital letter epsilon
306	198	c6	ζ	greek capital letter zeta
307	199	c7	η	greek capital letter eta
310	200	c8	θ	greek capital letter theta
311	201	c9	ι	greek capital letter iota
312	202	ca	κ	greek capital letter kappa
313	203	cb	λ	greek capital letter lambda
314	204	cc	μ	greek capital letter mu
315	205	cd	ν	greek capital letter nu
316	206	ce	ξ	greek capital letter xi
317	207	cf	ο	greek capital letter omicron
320	208	d0	π	greek capital letter pi
321	209	d1	ρ	greek capital letter rho
323	211	d3	σ	greek capital letter sigma
324	212	d4	τ	greek capital letter tau
325	213	d5	υ	greek capital letter upsilon
326	214	d6	φ	greek capital letter phi
327	215	d7	χ	greek capital letter chi
330	216	d8	ψ	greek capital letter psi
331	217	d9	ω	greek capital letter omega
332	218	da	ϊ	greek capital letter iota with dialytika
333	219	db	ϋ	greek capital letter upsilon with dialytika
334	220	dc	ά	greek small letter alpha with tonos
335	221	dd	έ	greek small letter epsilon with tonos
336	222	de	ή	greek small letter eta with tonos
337	223	df	ί	greek small letter iota with tonos
340	224	e0	ΰ	t{
greek small letter upsilon with
dialytika and tonos
t}
341	225	e1	α	greek small letter alpha
342	226	e2	β	greek small letter beta
343	227	e3	γ	greek small letter gamma
344	228	e4	δ	greek small letter delta
345	229	e5	ε	greek small letter epsilon
346	230	e6	ζ	greek small letter zeta
347	231	e7	η	greek small letter eta
350	232	e8	θ	greek small letter theta
351	233	e9	ι	greek small letter iota
352	234	ea	κ	greek small letter kappa
353	235	eb	λ	greek small letter lambda
354	236	ec	μ	greek small letter mu
355	237	ed	ν	greek small letter nu
356	238	ee	ξ	greek small letter xi
357	239	ef	ο	greek small letter omicron
360	240	f0	π	greek small letter pi
361	241	f1	ρ	greek small letter rho
362	242	f2	ς	greek small letter final sigma
363	243	f3	σ	greek small letter sigma
364	244	f4	τ	greek small letter tau
365	245	f5	υ	greek small letter upsilon
366	246	f6	φ	greek small letter phi
367	247	f7	χ	greek small letter chi
370	248	f8	ψ	greek small letter psi
371	249	f9	ω	greek small letter omega
372	250	fa	ϊ	greek small letter iota with dialytika
373	251	fb	ϋ	greek small letter upsilon with dialytika
374	252	fc	ό	greek small letter omicron with tonos
375	253	fd	ύ	greek small letter upsilon with tonos
376	254	fe	ώ	greek small letter omega with tonos
.te
.sh notes
iso 8859-7 was formerly known as elot-928 or ecma-118:1986.
.sh see also
.br ascii (7),
.br charsets (7),
.br utf\-8 (7)
.sh colophon
this page is part of release 5.13 of the linux
.i man-pages
project.
a description of the project,
information about reporting bugs,
and the latest version of this page,
can be found at
\%https://www.kernel.org/doc/man\-pages/.
.so man2/getxattr.2
.\" this manpage is copyright (c) 1992 drew eckhardt;
.\"             and copyright (c) 1993 michael haardt, ian jackson.
.\"
.\" %%%license_start(verbatim)
.\" permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" since the linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  the author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  the author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%license_end
.\"
.\" modified wed jul 21 23:02:38 1993 by rik faith 
.\" modified 2001-11-17, aeb
.\"
.th _exit 2 2021-03-22 "linux" "linux programmer's manual"
.sh name
_exit, _exit \- terminate the calling process
.sh synopsis
.nf