I ran into this error while playing with Rust, it told me to make a bug
report:
    src/dynamics/simple_dynamics.rs:52:17: 52:25 error: internal compiler error: debuginfo::create_local_var_metadata() - Referenced variable location is not an alloca!
    src/dynamics/simple_dynamics.rs:52             let body_mut = rc::get_mut(body).unwrap();
                                                       ^~~~~~~~
    note: the compiler unexpectedly panicked. this is a bug.
    note: we would appreciate a bug report: http://doc.rust-lang.org/complement-bugreport.html
    note: run with `RUST_BACKTRACE=1` for a backtrace
    thread 'rustc' panicked at 'Box', /Users/rustbuild/src/rust-buildbot/slave/nightly-mac/build/src/libsyntax/diagnostic.rs:123
    stack backtrace:
       1:        0x108c99220 - sys::backtrace::write::hc95aae63c60abfc60Jt
       2:        0x108cb98e7 - failure::on_fail::hc127add6dd357cc5e0z
       3:        0x108c29fda - rt::unwind::begin_unwind_inner::hdbf43425f18437c6FHz
       4:        0x106b34307 - rt::unwind::begin_unwind::h3355969672767655914
       5:        0x106b34294 - diagnostic::SpanHandler::span_bug::hea7ee9aa261e288cr2F
       6:        0x105fbacad - session::Session::span_bug::hdfbd47445f72bab9eVn
       7:        0x10575b51e - middle::pat_util::pat_bindings::closure.49320
       8:        0x106afeb61 - ast_util::walk_pat::h7d3cad2bd4c87dbfTBC
       9:        0x10564a2d0 - trans::controlflow::trans_block::h5d0744ec09805d679Zd
      10:        0x105691c3f - trans::expr::trans_rvalue_stmt_unadjusted::h59279501085e6932y4i
      11:        0x105649b24 - trans::expr::trans_into::h44e9352c5eb030daFGh
      12:        0x10564a4c6 - trans::controlflow::trans_block::h5d0744ec09805d679Zd
      13:        0x105707697 - trans::base::trans_closure::h83ded929acc2e866deu
      14:        0x10563e976 - trans::base::trans_fn::h91abc7c09fbef750upu
      15:        0x10563abac - trans::base::trans_item::h23d355b70575f043AKu
      16:        0x105708dd9 - trans::base::trans_mod::h21384f26cbb919756Pu
      17:        0x10563ad6e - trans::base::trans_item::h23d355b70575f043AKu
      18:        0x105708dd9 - trans::base::trans_mod::h21384f26cbb919756Pu
      19:        0x10563ad6e - trans::base::trans_item::h23d355b70575f043AKu
      20:        0x10570e178 - trans::base::trans_crate::h73c2bbef83961cfeRGv
      21:        0x10540d3bf - driver::phase_4_translate_to_llvm::h50f0f13e625a634f2Ca
      22:        0x1053e5463 - driver::compile_input::h258f407dd8455477wba
      23:        0x105583e5d - thunk::F.Invoke<A,$u{20}R$GT$::invoke::h8883338591471054833
      24:        0x105580770 - rt::unwind::try::try_fn::h8230218938911070377
      25:        0x108d21229 - rust_try_inner
      26:        0x108d21216 - rust_try
      27:        0x105580e6b - thunk::F.Invoke<A,$u{20}R$GT$::invoke::h14505686894590603956
      28:        0x108ca8dc4 - sys::thread::thread_start::h2cb22211a4c7d938vFw
      29:     0x7fff8fb792fc - _pthread_body
      30:     0x7fff8fb79279 - _pthread_body
This only happened when I added this line to help me debug:
    panic!("STRONG REF COUNT: {}", rc::strong_count(body)); // <- Causes the compiler error
    let body_mut = rc::get_mut(body).unwrap();
This is the output from `rustc --version --verbose`, I am currently on Mac OS
X Yosemite:
    rustc 0.13.0-nightly (5ba610265 2014-12-25 18:01:36 +0000)
    binary: rustc
    commit-hash: 5ba6102657a892457063d2d6a7cbb9632ce282c6
    commit-date: 2014-12-25 18:01:36 +0000
    host: x86_64-apple-darwin
    release: 0.13.0-nightly