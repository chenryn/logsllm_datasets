title:Conficker and beyond: a large-scale empirical study
author:Seungwon Shin and
Guofei Gu
Conﬁcker and Beyond: A Large-Scale Empirical Study
Seungwon Shin
Success Lab, Texas A&M University
College Station, Texas, 77843, USA
PI:EMAIL
ABSTRACT
Conﬁcker [26] is the most recent widespread, well-known
worm/bot. According to several reports [16, 28], it has in-
fected about 7 million to 15 million hosts and the victims are
still increasing even now. In this paper, we analyze Conﬁcker
infections at a large scale, including about 25 millions vic-
tims, and study various interesting aspects about this state-
of-the-art malware. By analyzing Conﬁcker, we intend to
understand current and new trends in malware propagation,
which could be very helpful in predicting future malware
trends and providing insights for future malware defense.
We observe that Conﬁcker has some very diﬀerent victim
distribution patterns compared to many previous genera-
tion worms/botnets, suggesting that new malware spreading
models and defense strategies are likely needed. Further-
more, we intend to determine how well a reputation-based
blacklisting approach can perform when faced with new mal-
ware threats such as Conﬁcker. We cross-check several DNS
blacklists and IP/AS reputation data from Dshield [6] and
FIRE [7], and our evaluation shows that unlike a previous
study [18] which shows that a blacklist-based approach can
detect most bots, these reputation-based approaches did rel-
atively poorly for Conﬁcker. This raised the question, how
can we improve and complement existing reputation-based
techniques to prepare for future malware defense? Finally,
we look into some insights for defenders. We show that
neighborhood watch is a surprisingly eﬀective approach in
the Conﬁcker case. This suggests that security alert shar-
ing/correlation (particularly among neighborhood networks)
could be a promising approach and play a more important
role for future malware defense.
1.
INTRODUCTION
Conﬁcker worm (or bot) [26] ﬁrst appeared in November
2008 and since then it has rapidly and widely spread in the
world within a short period. It exploits a NetBIOS vulner-
ability in various Windows operating systems and utilizes
many new, advanced techniques such as a domain genera-
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
ACSAC ’10 Dec. 6-10, 2010, Austin, Texas USA
Copyright 2010 ACM 978-1-4503-0133-6/10/12 ...$10.00.
Guofei Gu
Success Lab, Texas A&M University
College Station, Texas, 77843, USA
PI:EMAIL
tion algorithm, self-defense mechanisms, updating via Web
and P2P, and eﬃcient local propagation. As a result, it has
infected millions of victims in the world and the number is
still increasing even now [16, 28].
It is clear that the complex nature of Conﬁcker makes it
one of the state-of-the-art malware, and therefore the analy-
sis of Conﬁcker is very important in order to defend against
it. A full understanding of Conﬁcker can also help us in
comprehending current and future malware trends. Exist-
ing research of Conﬁcker analysis mainly falls into two cat-
egories. The ﬁrst focuses on analyzing the Conﬁcker bi-
nary and its behavior, revealing its malicious tricks such as
the domain generation algorithm [23, 30]. In this direction,
SRI researchers [23] and the Honeynet project [30] already
provided excellent reports that analyzed Conﬁcker in great
detail. The second research category mainly focuses on an-
alyzing the network telescope data [2] or DNS sinkhole data
[13] to reveal the propagation pattern and victim distribu-
tion characteristics of Conﬁcker on the Internet. There are
very few studies in this direction, which is probably because
it is very hard to obtain large scale real-world data of vic-
tims and the amount of data should be large enough to cover
victims’ global behavior. CAIDA [2] and Team Cymru [13]
provided some initial reports which contain some very basic
statistics on the scanning pattern and propagation informa-
tion of Conﬁcker. However, for a worm/bot that has infected
so many victims and has so much potential to damage the
Internet, it deserves a much deeper study. Such study is
necessary because by analyzing this state-of-the-art botnet,
we can gain more knowledge of current malware, e.g., how it
diﬀers from previous generation malware and whether such
diﬀerences represent future trends or not. These deeper in-
vestigations could also provide new insights in developing
new detection and defense mechanisms for current and fu-
ture malware.
In this paper, we attempt to provide a deeper empiri-
cal measurement study of Conﬁcker. We have collected a
large-scale data set which contains almost 25 million Con-
ﬁcker victims with the help of Shadowserver.org (details on
data collection are discussed in Section 3). We believe such
scale is large enough to uncover Conﬁcker’s global patterns.
We provide an extensive measurement of various distribu-
tion patterns of Conﬁcker victims. Furthermore, we use
a comparison- and cross-check-based methodology in our
measurement study. We study the similarities and diﬀer-
ences between Conﬁcker and several other publicly reported
worms/botnets. Then we analyze how these diﬀerences may
aﬀect existing reputation-based detection approaches. We
also investigate possible aspects that may be useful for Con-
ﬁcker and future malware defense.
In short, this paper makes the following contributions:
• We provide a large-scale empirical study of almost 25
million Conﬁcker victims. By analyzing this data, we
reveal many interesting aspects that were previously
unknown and show that Conﬁcker victims exhibit a
very diﬀerent distribution pattern from many previ-
ously reported botnets or worms. This diﬀerence could
be a new trend or some ignored facts that are poten-
tially important for future malware defense. Detailed
information is in Section 4.
• We evaluate the eﬀectiveness of existing reputation-
based approaches for detecting emerging malware threats.
They are considered as promising in defending against
unknown malware compared to traditional signature-
based approaches [1]. Through cross-checking several
DNS blacklists and reputation data from Dshield [6]
and FIRE [7], our evaluation shows that these reputation-
based approaches are not eﬀective for Conﬁcker de-
fense. This suggests that these reputation-based ap-
proaches need to be signiﬁcantly improved and com-
plemented by other techniques. Detailed information
is in Section 5.
• We study the Conﬁcker data and ﬁnd that neighbor-
hood watch is surprisingly eﬀective to detect or pre-
dict new victims. This could suggest that alert shar-
ing/correlation (among distributed collaborators, par-
ticularly neighborhood networks) could be an eﬀec-
tive and promising technique to defend against future
emerging threats and it needs more attention for such
research. Detailed information is in Section 6.
2. RELATED WORK
Conﬁcker binary analysis. Porras et al. from SRI In-
ternational provided a very extensive study of the Conﬁcker
binary analysis [23]. They analyzed several variants of Con-
ﬁcker and revealed how Conﬁcker propagates, how it infects
others, how it evades anti-virus tools and how it updates
itself. This provided very detailed and valuable information
of Conﬁcker behavior. The Honeynet project [30] also pro-
vides a detailed analysis of Conﬁcker binary. These studies
also provide scanning tools for detecting Conﬁcker victims
in the network.
Conﬁcker data analysis. With the use of the telescope
data, researchers from CAIDA provided a simple analysis
on Conﬁcker propagation [2]. The Telescope data mainly
contains scanning traﬃc from Conﬁcker victims, which re-
veals Conﬁcker victim location and timing information to
display how Conﬁcker emerges and spreads on the Internet.
However, such data is not complete due to the size limit of
(passive) monitoring networks. Recently, researchers started
to use the DNS sinkholing technique [13] to collect much
more accurate Conﬁcker victim data. A report from Team
Cymru[13] analyzed the behavior of Conﬁcker victims and
provided some general distribution and propagation infor-
mation. However, there is still a lack of some deep analysis
of Conﬁcker victims such as how diﬀerent the victims are
from previous malware. This paper is a ﬁrst attempt to
provide an empirical deep study of Conﬁcker victims, reveal
how they are distributed diﬀerently from previous genera-
tion malware, and how this aﬀects current reputation-based
defense mechanisms.
In addition, we want to understand
if there are some eﬀective techniques for early detection of
future variations of Conﬁcker.
3. DATA COLLECTION
An interesting feature of Conﬁcker is the resilient function
of updating itself. To avoid detection, it automatically gen-
erates new domain names (of updating servers) [23, 30] and
connects to those domain names to download an updated
version of itself. This function greatly supports Conﬁcker to
increase the survivability and resilience. However, once the
domain generation algorithm was cracked by researchers, it
also provides a way to sinkhole and track the victims. By
registering new domain names that will be used by Con-
ﬁcker victims on controlled servers, defenders can collect
visits from hosts infected by Conﬁcker. This approach is
widely known as DNS sinkholing and has been successfully
adopted by researchers that study Conﬁcker [13].
With the aid of ShadowServer.org, we have collected the
Conﬁcker sinkhole data captured from January 1, 2010 to
January 8, 2010. During this period, we observed 24,912,492
unique IP addresses of Conﬁcker victims. We note that the
accurate counting of worm/botnet victims is not an easy
task because of the existence of DHCP, NAT, and many
other issues [31, 25]. For example, Stone-Gross et al.
[25]
pointed out that there is a slight diﬀerence between the num-
ber of IP addresses and the number of real infected hosts.
This is the limitation of almost all existing worm/botnet
measurement studies. We do not intend to solve this prob-
lem in this paper. We simply report our observations from
our collected data. Although the number may not be exact,
with such a large scale it at least provides an estimation of
overall characteristics and statistics of the Conﬁcker botnet.
To obtain more interesting results, we surveyed previous
work [15, 14, 19, 18, 31, 32, 24] about the behavior of ne-
farious worms and bots/botnets. They are used to compare
with our Conﬁcker result and to help us track whether in-
fection trends have changed. Based on the information they
provide, we selected seven measurement studies, which are
summarized in Table 1. Of these, three are well-known net-
work worms [15, 14, 19] and four are botnets [18, 31, 32,
24]. Note that some studies of botnets do not specify botnet
names in their work, but they show the result of malicious
nodes that send spam emails. Since most spam emails are
delivered by botnets [18], we can reasonably assume that
their studies represent the behavior of some bots or mal-
ware.
4. WHO IS WORKING FOR THE CONFICKER
BOTNET?
In this section, we provide a basic but important network-
level examination, which demonstrates fundamental charac-
teristics of Conﬁcker victims. We review how Conﬁcker vic-
tims are distributed over the IP address space and ASes.
Also, we investigate the bandwidth of Conﬁcker victims and
domain names that Conﬁcker victims belong to. Finally, we
survey portions of countries where Conﬁcker victims heavily
exist. Some of them are already provided by other studies
[2, 13], but our work is more than just providing basic mea-
surement results. To comprehend the radical alteration of
Malware [Work] Type
Botnet 1 [18]
Botnet 2 [31]
Botnet 3 [32]
Waledac [24]
CodeRed [15]
Slammer [14]
Witty [19]
Botnet
Botnet Hotmail
Botnet
Botnet
Worm Measurement
Worm Measurement
Worm Measurement
Data Source
Sinkhole server
Data Collection Time
Aug. 2004 ∼ Jan. 2006
Jun. 2006 ∼ Sep. 2006
Spamhaus
Nov. 2006 ∼ Jun. 2007
Inﬁlatrion into Waledac Aug. 2008 ∼ Sep. 2009
Jul. 2001 ∼ Oct.2001
Jan. 2003
Mar. 2004
Table 1: Data source of previous worms/bots for comparison.
malware, we compare Conﬁcker victims’ network-level char-
acteristics with those of previous well-known bots or worms.
4.1 Distribution Over Networks
We plotted each victim’s IP address to determine how
Conﬁcker victims are distributed over the IP address space
and found that they are not uniformly distributed in the
whole IP address space; instead the distribution is highly
biased, mostly concentrated in some speciﬁc ranges.
Result 1. (Distribution over the IP address space)
Most of hosts infected by Conﬁcker are concentrated in sev-
eral speciﬁc IP address ranges.
x 104
4.5
4
3.5
3
2.5
2
1.5
1
0.5
s
t
s
o
h
d
e
t
c
e
f
n
i
f
o
r
e
b
m
u
n
0
0
50
100
150
IP address
200
250
Figure 1: Distribution of infected hosts over IP ad-
dress.
Figure 1 depicts the distribution of victims over the IP
address space. The presence of several wide, sharp spikes,
which represent densely infected areas, reveals that the vic-
tims are not uniformly distributed. Since the IP address
ranges within these wide spikes could be regarded as more
vulnerable, we inspected three notable wide spikes in detail.
They are in the range of (109.* - 125.*), (77.* - 96.*), and
(186.* - 222.*) and they cover around 87% of all victims.
In particular, the widest and most prominent spike which is
in the range of (109.* - 125.*), includes 9,303,423 infected
hosts and accounts for 37.34% of the total number of Con-
ﬁcker victims. To get a more detailed view, we narrowed
down the scope from the ranges to more speciﬁc networks.
In the widest spike, we found that 123.* and 124.* networks
are the main contributors. They comprise 1,701,438 infected
hosts and account for 6.83% of all victims. We analyzed fur-
ther and discovered that there are 40,278 Conﬁcker victims
in the 123.19.* network, which is around 61.9% of all possi-
ble IP addresses in that /16 subnet. Similar characteristics
were observed in nearby networks such as the 123.22.* and
the 123.23.*1
Result 1.1. (Distribution over IP address space -
Comparison) Some portions of IP address ranges were al-
ready aﬀected by the previous botnets, but some ranges such
as 109.* - 125.* are unique to Conﬁcker.
Comparing the distribution of Conﬁcker victims over the
IP address space with that of previous bots, we ﬁnd that
some ranges are similar to the previous results and some are
unique to Conﬁcker. The ranges of (77.* - 96.*) and (186.* -
222.*) are widely known as major locations of the Waledac
bot [24]. Yet the interesting thing is that while the range
of (109.* - 125.*) is one of the signiﬁcant locations of Con-
ﬁcker, Waledac has no signiﬁcant number of victims in that
range. In addition, [18] investigated the IP address ranges
of hosts infected by bots and they denoted that the ranges
of (80.* - 90.*) and (210.* - 220.*) were major locations of
bots, which is similar to Waledac analysis. However, both
previous studies still did not point out the range of (109.*
- 125.*) as a heavy contributor of bots. We tried to under-
stand why the range of (109.* - 125.*) was not seen before.
After investigating the data in this range, we concluded that
the reason is most likely a change of infection trend, and we
will elaborate on this in Result 2.1.
Since it is nearly impossible to monitor the entire Internet,
it is more eﬃcient to focus on speciﬁc (suspicious) networks
that are more likely to contain commands directed by a bot-
master. The IP address ranges within wide spikes, which are
shown in Figure 1, can be good candidates that need to be
focused.
Insight from Result 1 and 1.1 (Monitoring Net-
works more eﬃciently) It is impossible to monitor all the
IP addresses on the Internet, but we can monitor a limited
number of speciﬁc ranges to eﬃciently detect commands and
attacks in infected networks. Even though the ranges may be
diﬀerent for each botnet, there are still some common parts
and they are good candidate ranges to monitor.
1Since the 123.* network is in Class A network, it seems
that there is no meaning in splitting it into subnetworks.
However, people commonly split Class A networks into sev-
eral /16 subnets to manage them eﬃciently. As in the case
of 123.* network, we found that it is divided and assigned