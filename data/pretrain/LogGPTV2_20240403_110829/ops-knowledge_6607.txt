User: Please write a Python script to scan the IP addresses and MAC addresses of all devices on the local network and save the results to a file.
Assistant: Since obtaining the IP addresses and MAC addresses of all devices on the local network requires some underlying operations, it needs to be implemented through a third-party library. This article will use the scapy library to achieve. Please use pip to install the scapy library first. The code is as follows: ```python from scapy.all import ARP, Ether, srp # Define the network address to scan target_ip = "192.168.1.0/24" # Create an ARP request packet arp = ARP(pdst=target_ip) # Create Ethernet Packet, the target address is the broadcast address (ff:ff:ff:ff:ff:ff) ether = Ether(dst="ff:ff:ff:ff:ff:ff") # Combined request packet packet = ether/arp # Send request and get response result = srp(packet, timeout=3, verbose=0)[0] # print result devices = [] for sent, received in result: # extract IP address and MAC address devices.append({'ip ': received.psrc, 'mac': received.hwsrc}) print(f"IP address: {received.psrc}, MAC address: {received.hwsrc}") # save the result to a file with open('devices .txt', 'w') as file: for device in devices: file.write(f"IP address: {device['ip']}, MAC address: {device['mac']}\n") ` `` First, we define the network address to be scanned, which can be a specific IP address or a network segment. Then, we create the ARP request packet and the Ethernet packet and combine them into one request packet. Next, we use the srp function to send a request and get a response. The timeout parameter of the function indicates the time to wait for the response, and the verbose parameter indicates whether to output detailed information. Finally, we extract the IP addresses and MAC addresses in the response, store them in a list, and print them. At the same time, we save the results to a file, one line for each device's IP address and MAC address.