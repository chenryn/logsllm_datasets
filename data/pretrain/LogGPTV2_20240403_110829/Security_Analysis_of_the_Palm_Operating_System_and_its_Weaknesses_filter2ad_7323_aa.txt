# Security Analysis of the Palm Operating System and its Weaknesses Against Malicious Code Threats

**Authors:**
Kingpin and Mudge  
@stake, Inc.  
196 Broadway  
Cambridge, MA 02139  
{kingpin, mudge}@atstake.com

**Proceedings of the 10th USENIX Security Symposium**  
Washington, D.C., USA  
August 13–17, 2001  
© 2001 by The USENIX Association  
Phone: +1 510 528 8649  
FAX: +1 510 548 5738  
Email: [info@usenix.org](mailto:info@usenix.org)  
[http://www.usenix.org](http://www.usenix.org)

## Abstract
Portable devices, such as Personal Digital Assistants (PDAs), are particularly vulnerable to malicious code threats due to their widespread use and lack of a robust security framework. Despite being known to be insecure, PDAs are ubiquitous in enterprise environments and are used for applications like one-time-password generation, storage of medical and company confidential information, and e-commerce. This paper analyzes the design of the Palm OS and its supporting hardware platform, providing detailed insights into specific scenarios, weaknesses, and mitigation recommendations related to data protection, malicious code, virus storage, and propagation. The research aims to serve as a model for users and developers to understand the additional security risks introduced by portable devices.

## 1. Introduction
Portable devices, including PDAs, are increasingly integrated into corporate infrastructures, often without thorough security assessments. These devices, which employ custom electrical circuit designs, product-specific capabilities, and embedded operating systems, introduce new threat models and attack vectors that differ from traditional desktop environments. For example, the addition of wireless technologies like infrared (IR) and radio frequency (RF) increases the risk areas. New classes of malicious code attacks can evade detection and containment methods commonly used in desktop environments. Additionally, the concept of cross-architecture pollination becomes a significant concern.

The Palm OS, which holds nearly 80% of the global handheld computing market, is analyzed in this paper. The research highlights the underlying problem that security is not adequately designed into the Palm OS platform. While the Palm OS is not marketed as a secure operating system, its use in security-sensitive applications in corporate settings necessitates a thorough examination of potential risk areas.

## 2. Summary of Malicious Code Types
Malicious code can be classified into three main categories:

- **Viruses**: Self-replicating code segments that attach to host executables. When the host is executed, the virus may also execute and replicate by attaching copies of itself to other executables. Viruses may include an additional "payload" that triggers under specific conditions.
- **Trojan Horses**: Malicious code disguised as legitimate applications. Trojan horses do not replicate but trick users into believing they are running innocuous software while performing harmful activities.
- **Worms**: Self-replicating programs that do not require a host program. Worms create copies of themselves and propagate through network services without user intervention.

## 3. Palm OS Device Architecture
The architecture of a Palm OS device can be divided into three layers: Application, Operating System, and Hardware.

### 3.1 Operating System
Palm OS was designed to be open and modular to support third-party application development. However, it lacks layer- or file-based access control, allowing all program code and data to be accessed and modified by any user or application. This uniform memory access makes it difficult to differentiate between legitimate and malicious applications based solely on memory read/writes and system calls.

- **File System and Application Structure**:
  - Palm OS uses a non-traditional flat file system, storing data in memory chunks called "records," which are grouped into "databases."
  - Applications are generally single-threaded, event-driven programs. Each application has a `PilotMain` function, similar to the `main` function in C programs.
  - Applications can send launch codes to each other, enabling inter-application communication and data modification.

### 3.2 Hardware
Palm OS devices, including those from various manufacturers, use the Motorola DragonBall MC68328-family of microprocessors, based on the Motorola MC68EC000 core. These processors operate at low speeds, ranging from 16MHz to 33MHz. Future versions of Palm OS devices will use ARM Limited's microprocessor architecture, which is planned for implementation in 2002.

- **Memory**:
  - Battery-backed Random Access Memory (RAM) is used to store application and user data.
  - Read-Only Memory (ROM) and Flash memory are used for static components like the operating system.

## 4. Retrieval of Passwords
Poorly chosen or stored passwords are a common weakness in portable devices. Users often choose short, easily guessable passwords, prioritizing convenience over security. This can lead to successful attacks where malicious code determines the user’s password and uses it to gain access to other systems.

### 4.1 Password Decoding Details
An encoded block containing a reversible obfuscation of the user’s system password is stored in the Unsaved Preferences database on the Palm OS device. This block is readable by any application on the device and is transmitted during HotSync operations. The encoding schema can be reversed to decode the password.

- **Encoding Schema**:
  - For passwords of four characters or fewer, an index is calculated based on the length of the password, and the string is XORed against a 32-byte constant block.
  - For passwords longer than four characters, the string is padded to 32 bytes and run through four rounds of a function that XORs against a 64-byte constant block.

## 5. Conclusion
Current state-of-the-art portable devices, including those running the Palm OS, are not equipped to handle the threat of viruses and other malicious code. The new threat models and attack vectors introduced by these devices are not yet fully considered by product designers and anti-virus vendors. This paper aims to provide a roadmap for future device design and aid in security awareness for existing deployments.

---

This optimized version of the text is more structured, clear, and professional, with improved readability and coherence.