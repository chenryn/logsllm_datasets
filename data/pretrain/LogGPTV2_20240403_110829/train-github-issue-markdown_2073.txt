Right now, the content of `classes_` and the shape of the output of
`predict_proba` and `decision_function` are inconsistent between estimators.  
If an estimator supports multioutput multiclass, `classes_` will be `[[0, 1]]
* n_outputs` and `predict_proba` will return an object array of length
`n_outputs` where each is `(n_samples, 2)`.  
If the estimator supports multi-label classification, but not multioutput
multiclass, `classes_` will be `np.arange(n_outputs)` and `predict_proba` will
be `(n_samples, n_outputs)`.
That leads to issues such as #8773, but also runs counter to the sklearn
promise of a consistent API.  
Given that even basic API like the `score` method is broken on multioutput
multiclass (see #9414), I'm not sure it's worth keeping this maintenance
burden.
Alternatively we could detect in the multioutput multiclass classifiers that a
problem is actually multilabel and use the appropriate shapes for that.
Either way, it's an incompatible change that's tricky to do with a deprecation
cycle :-/