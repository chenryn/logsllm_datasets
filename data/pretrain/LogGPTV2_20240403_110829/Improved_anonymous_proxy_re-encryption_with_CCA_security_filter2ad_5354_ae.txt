A secure email forwarding typically takes the following
steps. First, Alice sends to Bob the email in encryption
form (encrypting email body, and optional attachment) via
the email client (step 1). Upon receiving it, the email server
will upload the encrypted email body to s3-url2 (step 2),
and invoke the proxy service via the API ReEnc(rk, s3-
url2, s3-url1) with a re-encryption key so that the re-
encrypted email can be decrypted by Carol (step 3). The
proxy service will parse rk, fetch second level ciphertexts
speciﬁed by s3-url2 from S3, perform the re-encryption,
write re-encrypted ciphertexts to the location speciﬁed by
s3-url1, and return HTTP OK to the email server (step 4).
Finally the email server will send to Carol the ﬁnal email
stored in the location speciﬁed by s3-url1 (step 5), so that
Carol can decrypt and read it with its email client (step 6).
We use open source Hastymail [3] as the email client,
which is written in PHP. We extend Hastymail with three
important plugins: encryption, decryption, and key manage-
ment. The encryption plugin encrypts the email that will be
sent out and the decryption plugin decrypts the encrypted
emails (before or after re-encrypted) that are downloaded
from S3. On the other hand, we use Apache JAMES [2] as
the email server, which is responsible to upload the incom-
256ŶŽŶǇŵŽƵƐWZ
^ĞƌǀŝĐĞ;ϮͿ
ŝƉŚĞƌŽŶƚĞŶƚ
^ƚŽƌĂŐĞ;^ϯͿ
'Ğƚ;ƐϯͲƵƌůϮͿ
tƌŝƚĞ;ƐϯͲƵƌůϭͿ
ϭ͗^ĞŶĚ;ƐĞŶĚĞƌ͕ƌĞĐĞŝǀĞƌ͕
ďŽĚǇ͕ĂƚƚĂĐŚͿ
ϱ͘^ĞŶĚŵĂŝů
;ƐĞŶĚĞƌ͕ƌĞĐĞŝǀĞƌ͕ƵƌůϭͿ
100
)
d
n
o
c
e
s
(
i
e
m
T
g
n
s
s
e
c
o
r
P
i
80
60
40
20
0
Small Instance
Medium Instance
8KB
Size of the Plaintext of Email
32KB
128KB
ŵĂŝů^ĞŶĚĞƌ
ŵĂŝů^ĞƌǀĞƌ
ŵĂŝůZĞĐĞŝǀĞƌ
Figure 2: Average processing time for re-encryption
in the cloud (one request).
Figure 1: System overview of cloud-based email for-
warding service with anonymous PRE.
ing email objects to S3, invoke the proxy service, and send
(or broadcast) forwarding emails to appropriate receivers.
the cloud cannot infer any identities information due to the
anonymous property in our PRE scheme. Therefore, the
identities of the re-encryption participants are kept private.
Experiment evaluation: We evaluate the system perfor-
mance with two diﬀerent EC2 instances:
5. RELATED WORK
• Small Instance: One core CPU of 1 ECU and 1.7GB
memory;
• Medium Instance: Two core CPU of 5 ECUs and 1.7GB
memory,
where an ECU provides the equivalent CPU capacity of 1.0-
1.2 GHz 2007 Opteron or 2007 Xeon processor.
In par-
ticular, we are interested in the execution time on the re-
encryption operation by the proxy service.
We model the scenario that the proxy service receives
1,000 re-encryption requests simultaneously from the email
server. The sizes of plaintexts for emails are 8KB, 32KB, and
128KB respectively, which are close to the size of emails in
reality. we measure the execution time by the proxy ser-
vice, including downloading second level ciphertexts from
S3, performing re-encryption operations, and uploading ﬁrst
level ciphertexts to S3. Note here we do not encrypt plain-
text with hybrid encryption methodology [14]: Encrypt the
symmetric key with the PRE, and then encrypt plaintext
with symmetric encryption.
Instead we divide plaintexts
into multiple blocks and encrypt each block individually.
As shown in Figure 2, we can see that the performance of
the proxy service is acceptable. Taking the Medium Instance
as an example, an email of 8KB can be re-encrypted around
2.3 second, and an email of 128KB around 40 seconds. Sec-
ond, the computation capability has a positive inﬂuence on
the re-encryption operations: the operation in the Medium
Instance costs less time than that in the Small Instance.
Security properties: We use our anonymous PRE scheme
to reduce the trust of cloud for email forwarding, which is
ideal for large volume email sending, e.g., group email dis-
tribution. As an incoming email is encrypted with a user’s
(or an organization’s) public key, the cloud based proxy ser-
vice cannot access the encrypted content without its private
key, which is stored in an isolated domain (Hastymail in our
case). Furthermore, since users’ private keys are maintained
locally and re-encryption keys are generated out of cloud,
The cryptographic primitive of Proxy Re-Encryption (PRE)
was formalized in [8] and has become an important build-
ing block for constructing cryptographic solutions to many
application problems [6, 10, 11, 23, 24]. Various features of
PRE have been investigated: e.g. [5] initiated the anonymity
property, [9, 17] constructed CCA security PRE, [12] pro-
posed eﬃcient PRE construction and [21] enriched the PRE
with conditional re-encryption feature.
The anonymity (key privacy) of PRE was ﬁrst initiated
in [5], where they assumed that only one re-encryption key
existing for each pair of users. In addition, their proposed
PRE scheme achieved security against chosen-plaintext at-
tacks based on the DBDH assumption, and left constructing
anonymous CCA-secure PRE as an open problem. Another
anonymity notion came from the work [19], where allowed
multiple re-encryption keys for each pair of users while lack-
ing access to the re-encryption oracle¨ıij ˇN which weakened
the adversary’s capability as explained in Section 1. Their
proposed scheme [19] achieved their deﬁned anonymity and
enjoyed the security against chosen-ciphertext attack in the
random oracle. Another work [20] claimed attaining the se-
curity against chosen-ciphertext attack and the anonymity
property simultaneously, but later was proved not CCA se-
cure.
In order to achieve chosen-ciphertext security, the work
[9] ﬁrst formalized the notion of security against chosen-
ciphertext attacks for PRE and presented an eﬃcient con-
struction satisfying that. The subsequent work on achieving
CCA security can be found in [12, 17, 22, 16, 18]. To achieve
both anonymity and CCA security in PRE, the construction
is quite diﬃcult, since the CPA-to-CCA translations, such
as the Fujisaki-Okamoto transformation cannot be applied
directly [5, 20].
6. CONCLUSION
We consider the identity privacy problem for proxy re-
encryption, which is useful when cloud users outsource re-
encryption operations to public clouds. We propose a new
257anonymity notion by comprehensively considering the lim-
itations of existing anonymity notions. We then present
an eﬃcient construction, which achieves the anonymity and
security against chosen-ciphertext attack in random oracle
simultaneously. We implement and deploy our proposed
scheme in Amazon Web Services, based on which we develop
the prototype of secure email forwarding with anonymous
re-encryption. Our evaluation shows that the performance
is acceptable for many web-based applications. Our future
work includes designing anonymous and CCA secure PRE in
the standard model.
7. REFERENCES
[1] Amazon web service. http://aws.amazon.com/.
[2] Apache james.
http://projects.apache.org/projects/james.html.
[3] Hastymail. http://www.hastymail.org/.
[4] Pairing-based cryptography library.
http://crypto.stanford.edu/pbc/.
[5] G. Ateniese, K. Benson, and S. Hohenberger.
Key-private proxy re-encryption. In Proceedings of the
The Cryptographers’ Track at the RSA Conference
2009 on Topics in Cryptology, CT-RSA ’09, pages
279–294, Berlin, Heidelberg, 2009. Springer-Verlag.
[6] G. Ateniese, K. Fu, M. Green, and S. Hohenberger.
Improved proxy re-encryption schemes with
applications to secure distributed storage. volume 9,
pages 1–30, New York, NY, USA, February 2006.
ACM.
[7] M. Bellare, A. Boldyreva, A. Desai, and
D. Pointcheval. Key-privacy in public-key encryption.
In Proceedings of the 7th International Conference on
the Theory and Application of Cryptology and
Information Security: Advances in Cryptology,
ASIACRYPT ’01, pages 566–582, London, UK, UK,
2001. Springer-Verlag.
[8] M. Blaze, G. Bleumer, and M. Strauss. Divertible
protocols and atomic proxy cryptography. In In
EUROCRYPT, pages 127–144. Springer-Verlag, 1998.
[9] R. Canetti and S. Hohenberger. Chosen-ciphertext
secure proxy re-encryption. In Proceedings of the 14th
ACM conference on Computer and communications
security, CCS ’07, pages 185–194, New York, NY,
USA, 2007. ACM.
[10] Y.-R. Chen, C.-K. Chu, W.-G. Tzeng, and J. Zhou.
Cloudhka: A cryptographic approach for hierarchical
access control in cloud computing. In Proceedings of
the 11th International Conference on Applied
Cryptography and Network Security, ACNS’13, pages
37–52, Berlin, Heidelberg, 2013. Springer-Verlag.
[11] Y.-R. Chen, J. D. Tygar, and W.-G. Tzeng. Secure
group key management using uni-directional proxy
re-encryption schemes. In INFOCOM, pages
1952–1960, 2011.
[12] R. H. Deng, J. Weng, S. Liu, and K. Chen.
Chosen-ciphertext secure proxy re-encryption without
pairings. In Proceedings of the 7th International
Conference on Cryptology and Network Security,
CANS ’08, pages 1–17, Berlin, Heidelberg, 2008.
Springer-Verlag.
[13] E. Fujisaki and T. Okamoto. Secure integration of
asymmetric and symmetric encryption schemes. In
Proceedings of the 19th Annual International
Cryptology Conference on Advances in Cryptology,
CRYPTO ’99, pages 537–554, London, UK, 1999.
Springer-Verlag.
[14] D. Hofheinz and E. Kiltz. Secure hybrid encryption
from weakened key encapsulation. In CRYPTO, pages
553–571, 2007.
[15] T. Isshiki, M. H. Nguyen, and K. Tanaka. Proxy
re-encryption in a stronger security model extended
from ct-rsa2012. In CT-RSA, pages 277–292, 2013.
[16] X. Jia, J. Shao, J. Jing, and P. Liu. Cca-secure
type-based proxy re-encryption with invisible proxy.
In CIT, pages 1299–1305, 2010.
[17] B. Libert and D. Vergnaud. Unidirectional
chosen-ciphertext secure proxy re-encryption. In
Proceedings of the Practice and theory in public key
cryptography, 11th international conference on Public
key cryptography, PKC’08, pages 360–379, Berlin,
Heidelberg, 2008. Springer-Verlag.
[18] T. Matsuda, R. Nishimaki, and K. Tanaka. Cca proxy
re-encryption without bilinear maps in the standard
model. In Proceedings of the 13th international
conference on Practice and Theory in Public Key
Cryptography, PKC’10, pages 261–278, Berlin,
Heidelberg, 2010. Springer-Verlag.
[19] J. Shao, P. Liu, G. Wei, and Y. Ling. Anonymous
proxy re-encryption. volume 5, pages 439–449. John
Wiley & Sons, Ltd, 2012.
[20] J. Shao, P. Liu, and Y. Zhou. Achieving key privacy
without losing cca security in proxy re-encryption. In
Journal of Systems and Software, 2011.
[21] J. Weng, R. H. Deng, X. Ding, C.-K. Chu, and J. Lai.
Conditional proxy re-encryption secure against
chosen-ciphertext attack. In ASIACCS, pages
322–332, 2009.
[22] J. Weng, Y. Yang, Q. Tang, R. H. Deng, and F. Bao.
Eﬃcient conditional proxy re-encryption with
chosen-ciphertext security. In Proceedings of the 12th
International Conference on Information Security, ISC
’09, pages 151–166, Berlin, Heidelberg, 2009.
Springer-Verlag.
[23] H. Xiong, X. Zhang, W. Zhu, and D. Yao. Cloudseal:
End-to-end content protection in cloud-based storage
and delivery services. In SecureComm, pages 491–500,
2011.
[24] K. Yang, X. Jia, and K. Ren. Attribute-based
ﬁne-grained access control with eﬃcient revocation in
cloud storage systems. In ASIACCS, pages 523–528,
2013.
[25] F. Zhang, R. Safavi-Naini, and W. Susilo. An eﬃcient
signature scheme from bilinear pairings and its
applications. In Public Key Cryptography, pages
277–290, 2004.
258