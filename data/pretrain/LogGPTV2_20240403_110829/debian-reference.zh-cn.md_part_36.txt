BSD ps aux 显示%CPU%MEM
SystemV ps -efH 显示PPID
Table9.10: ps命令样式列表
对于僵尸（死了的）子进程，你能够通过”PPID”字段的父进程ID来杀死它们。
pstree(1)命令显示进程树。
9.4.4 top 命令
Debian系统上的top(1)拥有丰富的特征，有助于识别进程有趣的动态行为。
它是一个交互式的全屏程序。你可以通过按”h”键来得到它的使用帮助，按”q”键来终止该程序。
9.4.5 列出被一个进程打开的文件
你能够通过一个进程ID(PID)来列出该进程所有打开的文件，例如，PID为1的进程，使用下面的方式。
$ sudo lsof -p 1
PID=1通常用于init程序.
9.4.6 跟踪程序活动
你能够跟踪程序活动，使用 strace(1),ltrace(1),xtrace(1)来跟踪系统调用和信号、库调用、X11客户端和服务
器端之间的通信。
跟踪ls命令的系统调用。
$ sudo strace ls
提示
使用在/usr/share/doc/strace/examples/中发现的strace-graph脚本来生成一个好看的树形视图
Debian参考手册 144/233
9.4.7 识别使用文件和套接字的进程
你可以通过fuser(1)来识别出使用文件的进程，例如，用下面的方式识别出”/var/log/mail.log”由哪个进程打
开。
$ sudo fuser -v /var/log/mail.log
USER PID ACCESS COMMAND
/var/log/mail.log: root 2946 F.... rsyslogd
你可以看到”/var/log/mail.log”是由rsyslogd(8)命令打开并写入。
你可以通过fuser(1)来识别出使用套接字的进程，例如，用下面的方式识别出”smtp/tcp”由哪个进程打开。
$ sudo fuser -v smtp/tcp
USER PID ACCESS COMMAND
smtp/tcp: Debian-exim 3379 F.... exim4
现在你知道你的系统运行exim4(8)来处理连接到SMTP端口(25)的TCP连接.
9.4.8 使用固定间隔重复一个命令
watch(1)使用固定间隔重新执行一个命令，并全屏显示输出。
$ watch w
显示哪些人登录到系统，每2秒钟更新一次。
9.4.9 使用文件循环来重复一个命令
通过匹配某些条件的文件来循环重复一个命令，有几种方法，例如，匹配全局模式”*.ext”.
• Shell循环方式(参见第 12.1.4 节):
for x in *.ext; do if [ -f ”$x”]; then command ”$x” ; fi; done
• find(1)和xargs(1)联合:
find . -type f -maxdepth 1 -name ’*.ext’ -print0 | xargs -0 -n 1 command
• find(1)使用”-exec”选项并执行命令:
find . -type f -maxdepth 1 -name ’*.ext’ -exec command ’{}’ \;
• find(1)使用”-exec”选项并执行一个短的shell脚本:
find . -type f -maxdepth 1 -name ’*.ext’ -exec sh -c ”command ’{}’ && echo ’successful’” \;
上面的列子确保适当处理怪异的文件名（如包含空格）。find(1)更多高级的用法，参见第 10.1.5 节.
Debian参考手册 145/233
9.4.10 从 GUI 启动一个程序
对于命令行界面（command-lineinterface，CLI），$PATH环境变量所指定的目录中第一个匹配相应名称的程序会被
执行。参见第 1.5.3 节。
对于遵从freedesktop.org标准的图形用户界面（graphicaluserinterface，GUI），/usr/share/applications/目
录中的*.desktop文件给每个程序的GUI菜单显示提供了必要的属性。遵从Freedesktop.orgxdg菜单系统的每一个
软件包，通过”/usr/share/applications/”下”*.desktop”提供的数据来安装它的菜单。遵从Freedesktop.org标准的现代桌面
环境，用xdg-utils软件包利用这些数据生成它们的菜单。参见”/usr/share/doc/xdg-utils/README”。
举个例子，chromium.desktop文件中为“Chromium网络浏览器”定义了相关属性，例如程序名“Name”，程序执
行路径和参数“Exec”，所使用的图标“Icon”等等（参见桌面配置项规范）。文件内容如下：
[Desktop Entry]
Version=1.0
Name=Chromium Web Browser
GenericName=Web Browser
Comment=Access the Internet
Comment[fr]=Explorer le Web
Exec=/usr/bin/chromium %U
Terminal=false
X-MultipleArgs=false
Type=Application
Icon=chromium
Categories=Network;WebBrowser;
MimeType=text/html;text/xml;application/xhtml_xml;x-scheme-handler/http;x-scheme-handler/ ←-
https;
StartupWMClass=Chromium
StartupNotify=true
这是一个较为简单的说明。*.desktop文件像下面那样被搜寻。
桌面环境设置$XDG_DATA_HOME和$XDG_DATA_DIR环境变量。举个例子，在GNOME3中：
• 未设置$XDG_DATA_HOME。（将使用默认值$HOME/.local/share。）
• $XDG_DATA_DIRS被设置为/usr/share/gnome:/usr/local/share/:/usr/share/。
基准目录（参见XDGBaseDirectorySpecification）和应用程序目录如下所示。
• $HOME/.local/share/→$HOME/.local/share/applications/
• /usr/share/gnome/→/usr/share/gnome/applications/
• /usr/local/share/→/usr/local/share/applications/
• /usr/share/→/usr/share/applications/
*.desktop文件将按照这个顺序在这些applications目录中进行搜寻。
提示
要建立一个用户自定义的 GUI 菜单项，需要在 $HOME/.local/share/applications/ 目录中添加一个
*.desktop文件。
提示
相似地，如果在这些基准目录下的autostart目录中建立了一个*.desktop文件，则*.desktop文件中指定
的程序会在桌面环境启动时自动执行。参见DesktopApplicationAutostartSpecification。
Debian参考手册 146/233
提示
相似地，如果在 $HOME/Desktop 目录中建立了一个 *.desktop 文件并且桌面环境被配置为支持桌面图标启动
器功能，则点击图标时指定的程序会被执行。请注意，$HOME/Desktop 目录的实际名称与语言环境有关。参见
xdg-user-dirs-update(1)。
9.4.11 自定义被启动的程序
一些程序会被另一个程序自动启动。下面是自定义该过程的方法。
• 应用程序配置菜单：
– GNOME3桌面：“设置”→“系统”→“详细信息”→“默认应用程序”
– KDE桌面: ”K”→”ControlCenter控制中心”→”KDEComponents组件”→”ComponentChooser组件选择器”
– Iceweasel浏览器：“编辑”→“首选项”→“应用程序”
– mc(1)：“/etc/mc/mc.ext”
• 例如“$BROWSER”、“$EDITOR”、“$VISUAL”和“$PAGER”这样的环境变量（参见environ(7)）
• 用于例如“editor”、“view”、“x-www-browser”、“gnome-www-browser”和“www-browser”这样的程序
的update-alternatives(1)系统（参见第 1.4.7 节）
•“~/.mailcap”和“/etc/mailcap”文件的内容关联了程序的MIME类型（参见mailcap(5)）
•“~/.mime.types”和“/etc/mime.types”文件的内容关联了MIME类型的文件扩展名（参见run-mailcap(1)）
提示
update-mime(8) 会 更 新”/etc/mailcap” 文 件， 期 间 会 用 到”/etc/mailcap.order” 文 件 (参 见
mailcap.order(5)).
提示
debianutils软件包提供sensible-browser(1)、sensible-editor(1)和sensible-pager(1)，它们可以
分别对要调用的编辑器、分页程序和网络浏览器作出明智的选择。我建议你阅读那些shell脚本。
提示
为了在GUI（图形用户界面）下运行例如mutt这样的控制台应用程序来作为你的首选应用程序，你应该像下面那
样建立一个 GUI（图形用户界面）应用程序并设置“/usr/local/bin/mutt-term”为你想要启动的首选应用
程序。
# cat /usr/local/bin/mutt-term <<EOF
#!/bin/sh
gnome-terminal -e ”mutt \$@”
EOF
# chmod 755 /usr/local/bin/mutt-term
Debian参考手册 147/233
提示
GUI（图形用户界面）应用程序能够很容易的放在特定环境变量下执行，在它相应的 *.desktop 文件里面用
于”Exec”的程序不定义完整执行路径。你可以启用非英文键盘输入到kitty：在安装需要的输入方式软件包后，使
用一个ibus或fcitx5的输入框架，并按如下方式创建一个shell脚本”/usr/local/bin/kitty”。
# cat /usr/local/bin/kitty <<EOF
#!/bin/sh
GLFW_IM_MODULE=ibus exec /usr/bin/kitty ”\$@”
EOF
# chmod 755 /usr/local/bin/kitty
这个 kitty 脚本可以选择存放在”~/bin/” 或”~/.local/bin/” 目录，只要这些目录在”$PATH” 中，
比”/usr/bin/”目录更早定义。
9.4.12 杀死一个进程
使用kill(1)通过进程ID来杀死（发送一个信号）一个进程。
使用killall(1)或pkill(1)通过进程命令的名字或其它属性来做同样的事情。
信号值 信号名 操作 注释
没有
信号
0 --- 发送 检查进程是否运行
(参见
kill(2))
终止
1 SIGHUP 从终端断开连接（信号挂起）
进程
终止
2 SIGINT 从键盘中断(CTRL-C)
进程
终止
进程
并触
3 SIGQUIT 从键盘退出(CTRL-\)
发
dump
core
终止
9 SIGKILL 不可阻塞的kill信号
进程
终止
15 SIGTERM 可被阻塞的终止信号
进程
Table9.11: kill命令常用信号列表
9.4.13 单次任务时间安排
运行at(1)命令来安排一次性的工作。
$ echo ’command -args’| at 3:40 monday
9.4.14 定时任务安排
使用cron(8)来进行定时任务安排。参见crontab(1)和crontab(5).
Debian参考手册 148/233
你能够作为一个普通用户定时运行一个进程，比如，foo 使用”crontab -e” 命令创建一个 crontab(5) 的文
件”/var/spool/cron/crontabs/foo”。
这里是一个crontab(5)文件的列子。
# use /usr/bin/sh to run commands, no matter what /etc/passwd says
SHELL=/bin/sh