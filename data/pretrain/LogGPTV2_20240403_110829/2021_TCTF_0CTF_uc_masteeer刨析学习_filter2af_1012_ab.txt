    0x100c: xor eax, eax
    0x100e: mov esi, 1
    0x1013: mov edi, 1
    0x1018: sub rsp, 8
    0x101c: call 0x1080
    0x1021: lea rax, [rip + 0x2b]
    0x1028: movabs qword ptr [0xbabecafe233], rax
    0x1032: add rsp, 8
    0x1036: movabs rdi, 0xbabecafe000
    0x1040: jmp qword ptr [rdi + 8]
    0x1043: insd dword ptr [rdi], dx
exp_main.pyï¼š
    from capstone import *
    MAIN = b'\x48\x83\xec\x20\x66\xc7\x44\x24\x0e\x00\x00\x48\x8d\x5c\x24\x0e\x48\xc7\x44\x24\x10\x00\x00\x00\x00\x48\xc7\x44\x24\x18\x00\x00\x00\x00\xb9\x44\x00\x00\x00\x48\x8d\x15\x8b\x01\x00\x00\xbe\x01\x00\x00\x00\x31\xc0\xbf\x01\x00\x00\x00\xe8\xbe\x01\x00\x00\xb9\x02\x00\x00\x00\x48\x89\xda\x31\xf6\x31\xff\x31\xc0\xe8\xab\x01\x00\x00\x8a\x44\x24\x0e\x3c\x32\x74\x39\x3c\x33\x74\x62\x3c\x31\x0f\x85\x04\x01\x00\x00\xb9\x12\x00\x00\x00\x48\x8d\x15\x35\x01\x00\x00\xbe\x01\x00\x00\x00\x31\xc0\xbf\x01\x00\x00\x00\xe8\x7a\x01\x00\x00\x48\x83\xc4\x20\x48\xbf\x00\xe0\xaf\xec\xab\x0b\x00\x00\xff\x27\xb9\x12\x00\x00\x00\x48\x8d\x15\xf6\x00\x00\x00\xbe\x01\x00\x00\x00\x31\xc0\xbf\x01\x00\x00\x00\xe8\x4d\x01\x00\x00\x48\x83\xc4\x20\x48\xbf\x00\xe0\xaf\xec\xab\x0b\x00\x00\xff\x27\xb9\x07\x00\x00\x00\x48\x8d\x15\xc2\x00\x00\x00\xbe\x01\x00\x00\x00\x31\xc0\xbf\x01\x00\x00\x00\xe8\x20\x01\x00\x00\x31\xf6\x31\xff\x48\x8d\x54\x24\x10\xb9\x08\x00\x00\x00\x31\xc0\xe8\x0b\x01\x00\x00\xb9\x07\x00\x00\x00\xbe\x01\x00\x00\x00\x31\xc0\x48\x8d\x15\x82\x00\x00\x00\xbf\x01\x00\x00\x00\xe8\xee\x00\x00\x00\x31\xf6\x31\xff\x31\xc0\x48\x8d\x54\x24\x18\xb9\x08\x00\x00\x00\xe8\xd9\x00\x00\x00\x48\x81\x7c\x24\x18\xff\x00\x00\x00\x0f\x87\xef\xfe\xff\xff\xb9\x07\x00\x00\x00\x48\x8d\x15\x41\x00\x00\x00\xbe\x01\x00\x00\x00\x31\xc0\xbf\x01\x00\x00\x00\xe8\xad\x00\x00\x00\x48\x8b\x4c\x24\x18\x31\xf6\x31\xff\x48\x8b\x54\x24\x10\x31\xc0\xe8\x98\x00\x00\x00\xe9\xb8\xfe\xff\xff\xbe\xff\x00\x00\x00\xbf\x3c\x00\x00\x00\x31\xc0\xe8\x82\x00\x00\x00\xe9\xa2\xfe\xff\xff\x64\x61\x74\x61\x3a\x20\x00\x73\x69\x7a\x65\x3a\x20\x00\x61\x64\x64\x72\x3a\x20\x00\x50\x61\x74\x68\x65\x74\x69\x63\x20\x68\x75\x6d\x61\x6e\x20\x3e\x0a\x00\x50\x6f\x77\x65\x72\x66\x75\x6c\x20\x61\x64\x6d\x69\x6e\x20\x3e\x0a\x00\x57\x65\x6c\x63\x6f\x6d\x65\x20\x74\x6f\x20\x75\x63\x5f\x6d\x61\x73\x74\x65\x65\x65\x72\x0a\x31\x2e\x20\x61\x64\x6d\x69\x6e\x20\x74\x65\x73\x74\x0a\x32\x2e\x20\x75\x73\x65\x72\x20\x74\x65\x73\x74\x0a\x33\x2e\x20\x70\x61\x74\x63\x68\x20\x64\x61\x74\x61\x0a\x3f\x3a\x20\x00\x48\x89\xf8\x48\x89\xf7\x48\x89\xd6\x48\x89\xca\x4d\x89\xc2\x4d\x89\xc8\x4c\x8b\x4c\x24\x08\x0f\x05\xc3'
    md = Cs(CS_ARCH_X86, CS_MODE_64)
    for i in md.disasm(MAIN, 0x1000):
    print("0x%x:\t%s\t%s" %(i.address, i.mnemonic, i.op_str))
**result:**
    0x1000: sub rsp, 0x20
    0x1004: mov word ptr [rsp + 0xe], 0
    0x100b: lea rbx, [rsp + 0xe]
    0x1010: mov qword ptr [rsp + 0x10], 0
    0x1019: mov qword ptr [rsp + 0x18], 0
    0x1022: mov ecx, 0x44
    0x1027: lea rdx, [rip + 0x18b]
    0x102e: mov esi, 1
    0x1033: xor eax, eax
    0x1035: mov edi, 1
    0x103a: call 0x11fd
    0x103f: mov ecx, 2
    0x1044: mov rdx, rbx
    0x1047: xor esi, esi
    0x1049: xor edi, edi
    0x104b: xor eax, eax
    0x104d: call 0x11fd
    0x1052: mov al, byte ptr [rsp + 0xe]
    0x1056: cmp al, 0x32
    0x1058: je 0x1093
    0x105a: cmp al, 0x33
    0x105c: je 0x10c0
    0x105e: cmp al, 0x31
    0x1060: jne 0x116a
    0x1066: mov ecx, 0x12
    0x106b: lea rdx, [rip + 0x135]
    0x1072: mov esi, 1
    0x1077: xor eax, eax
    0x1079: mov edi, 1
    0x107e: call 0x11fd
    0x1083: add rsp, 0x20
    0x1087: movabs rdi, 0xbabecafe000
    0x1091: jmp qword ptr [rdi]
    0x1093: mov ecx, 0x12
    0x1098: lea rdx, [rip + 0xf6]
    0x109f: mov esi, 1
    0x10a4: xor eax, eax
    0x10a6: mov edi, 1
    0x10ab: call 0x11fd
    0x10b0: add rsp, 0x20
    0x10b4: movabs rdi, 0xbabecafe000
    0x10be: jmp qword ptr [rdi]
    0x10c0: mov ecx, 7
    0x10c5: lea rdx, [rip + 0xc2]
    0x10cc: mov esi, 1
    0x10d1: xor eax, eax
    0x10d3: mov edi, 1
    0x10d8: call 0x11fd
    0x10dd: xor esi, esi
    0x10df: xor edi, edi
    0x10e1: lea rdx, [rsp + 0x10]
    0x10e6: mov ecx, 8
    0x10eb: xor eax, eax
    0x10ed: call 0x11fd
    0x10f2: mov ecx, 7
    0x10f7: mov esi, 1
    0x10fc: xor eax, eax
    0x10fe: lea rdx, [rip + 0x82]
    0x1105: mov edi, 1
    0x110a: call 0x11fd
    0x110f: xor esi, esi
    0x1111: xor edi, edi
    0x1113: xor eax, eax
    0x1115: lea rdx, [rsp + 0x18]
    0x111a: mov ecx, 8
    0x111f: call 0x11fd
    0x1124: cmp qword ptr [rsp + 0x18], 0xff
    0x112d: ja 0x1022
    0x1133: mov ecx, 7
    0x1138: lea rdx, [rip + 0x41]
    0x113f: mov esi, 1
    0x1144: xor eax, eax
    0x1146: mov edi, 1
    0x114b: call 0x11fd
    0x1150: mov rcx, qword ptr [rsp + 0x18]
    0x1155: xor esi, esi