### Optimized Text

The deterministic finite automata (DFAs) generated by our scheme incorporate edge weights, which can be utilized to generate “characteristic” synthetic sessions using the augmented hit counts discussed in §5.3. This is achieved by simulating a “probabilistic” DFA, where the next state is determined through weighted sampling from the outgoing edges, and the process terminates when no outgoing edges are selected. This method captures the qualitative structure; however, for self-loops that allow a variable number of connections, the distribution of the number of connections must be explicitly determined.

We note that since our DFAs are inferred based on the output of session extraction, which may have non-uniform false negative performance across different types of sessions, this could bias the hit counts. The degree of this bias depends on how well the particular application conforms to our Poisson assumptions. In such cases, it may be possible to refine the weights in these DFAs by comparing the synthetic output with actual traces.

A promising area for near-term future work is extending our methods to extract application sessions involving multiple remote hosts, as discussed in §4.3. Our preliminary results in [16] indicate that this extension better captures the behavior of peer-to-peer applications, proxies (mail and web), and other applications. For example, proxies typically exhibit a characteristic session structure: an incoming connection from one remote host followed by an outgoing connection on the same port to another remote host.

More broadly, we hope that our session extraction and structure abstraction tools will be a valuable addition to the toolkit of administrators and researchers. Our session extraction approach can be viewed as inferring “hidden causality” in network connections, identifying causally related connections by leveraging the observation that they typically occur closer to each other in practice compared to causally unrelated connections. This observation forms the basis of our statistical test, which, while not foolproof, has a bounded false positive rate (as shown in §4.3). Thus, most of the inferred sessions are indeed causally related connections. Furthermore, in scenarios like worm propagation, where we can relate outgoing infection attempts to the initial infection connection, the scale and speed of post-compromise activity may be readily detectable by our session extraction mechanism.

### Conclusion

In this work, we have demonstrated a statistical technique for extracting application sessions from a connection-level trace of network activity and shown how to deduce descriptors that can be used by analysts to capture the qualitative structure of such sessions. Our results show that a simple Poisson-based statistical technique, combined with a greedy approach for inferring DFA descriptors, works well for many applications in our trace. The results were, in some ways, surprising in terms of the various ways in which a particular application’s structure manifests in our traces, and this is why the validation of our results is still incomplete. Sessions reflecting protocol specifications are relatively easy to validate (although even this is challenging for closed-source applications), while those reflecting user behavior, server-side configuration, or client-side configuration are considerably more difficult to validate purely from in-network data.

In the future, we aim to evaluate and validate our methods over more applications, extend our approach to the case where a local host interacts during a session with multiple remote hosts, and devise mechanisms to collate descriptors for closely-related protocols. More broadly, the fact that our methods offer a general “causality” tool that can detect some forms of anomalous sessions also holds promise for detecting a variety of network attacks.

### Acknowledgments

We would like to thank Mark Allman, Rodrigo Fonseca, Dilip Joseph, Christian Kreibich, Karthik Lakshminarayanan, Ruoming Pang, Ananth Rao, Robin Sommer, Ion Stoica, and Mythili Vutukuru for their helpful comments about the paper. We would also like to thank Manikandan Narayanan for helpful discussions. This work was supported in part by grants STI-0334088, ITR/ANI-0205519, and NSF-0433702 from the National Science Foundation, for which we are grateful.

### References

[References remain unchanged]

### Appendix

#### Derivation of the False Positive Rate

In this section, we prove Theorem 1 in two steps: First, we consider the case of a single Poisson process with rate \(\lambda\), and compute the probability that it has two arrivals within \(x\) time units of each other in the time interval \([0, \tau]\). Then, we generalize this to the scenario where there are two independent Poisson processes with different rates.

**Lemma 1.** Let \(\{X_i, i \geq 1\}\) be the interarrival times of the Poisson process \(\{N(t), t \geq 0\}\) with an arrival rate \(\lambda\). Then, for some \(\tau > 0\),

\[ \Pr[X_i < x | N(\tau) = n] = 1 - \left(1 - \frac{x}{\tau}\right)^n. \]

This holds since the conditional distribution for arrival epochs follows the order statistics for a joint uniform distribution of \(n\) random variables [32]. Therefore,

\[ \Pr[X_i < x | N(\tau) = n] = 1 - \left(1 - \frac{x}{\tau}\right)^n. \]

Since the time for the first arrival is identically distributed with the \(i\)-th interarrival time,

\[ \Pr[X_i < x | N(\tau) = N] \leq N \frac{x}{\tau}, \quad \text{for } 1 \leq i \leq N - 1. \]

Next, let us look at the probability that there exists such an interarrival time within all \(n\) arrivals.

\[ \Pr[X_i < x \text{ for some } i \leq N(\tau) | N(\tau) = n] \leq (n - 1) \frac{x}{\tau}. \]

Finally, using this, we find a bound for the unconditional probability that there exists an interarrival of size smaller than \(x\) in the entire window of \(\tau\) seconds, where for some \(i \leq N(\tau)\),

\[ \Pr[X_i < x] \leq \lambda^2 \tau x. \]

Note that the bound becomes tight if the average interarrival time is large compared to \(x\), i.e., \(\lambda x \ll 1\). In this regime, the probability that two or more occurrences of such interarrivals is highly unlikely, and the higher-order terms in the binomial expansion are negligible, making the union bound tight.

We now generalize the previous lemma to the case when there are two types of sessions, \(T_1\) and \(T_2\), seen at a given local host.

**Lemma 2.** Let \(\{N_1(t), t \geq 0\}\) and \(\{N_2(t), t \geq 0\}\) be two independent Poisson processes with rates \(\lambda_1\) and \(\lambda_2\) respectively. Let \(P[N_1(\tau), N_2(\tau), x]\) be the probability that an arrival in \(N_1(t), t \leq \tau\) is followed by an arrival of \(N_2(t), t \leq \tau\) within \(x\) time units. Then,

\[ P[N_1(\tau), N_2(\tau), x] \leq \lambda_1 \lambda_2 \tau x. \]

**Proof.** Consider the combined process consisting of arrivals from both \(N_1\) and \(N_2\). Since this aggregate process is Poisson with rate \((\lambda_1 + \lambda_2)\), the probability that an interarrival of less than \(x\) occurs is upper bounded by \((\lambda_1 + \lambda_2)^2 \tau x\) by Lemma 1. Among such pairs, we need to count those for which the first arrival belongs to \(N_1\) and the second arrival belongs to \(N_2\). From the independence of the two processes,

\[ P[N_1(\tau), N_2(\tau), x] \leq (\lambda_1 + \lambda_2)^2 \tau x \cdot \frac{\lambda_1}{\lambda_1 + \lambda_2} \cdot \frac{\lambda_2}{\lambda_1 + \lambda_2} = \lambda_1 \lambda_2 \tau x. \]

Note that Theorem 1 is a direct consequence of Lemma 2. We simply plug \(\tau = 1\) since we deal with the rate of false positives, i.e., the number of false positives per time unit. This is the basis for the statistical test in our session extraction approach.