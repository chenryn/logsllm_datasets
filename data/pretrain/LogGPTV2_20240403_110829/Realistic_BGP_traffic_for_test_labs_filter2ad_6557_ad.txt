60
80
100
1
10
100
1,000
100
1,000
10,000
100,000
1,000,000
fraction of changed ASes
duration
interarrival time
Fig. 13: % preﬁxes with updates
Fig. 14: Duration of session resets.
Fig. 15: Session reset interarr. time.
attributes (22.2%). The fact that a lot of consecutive update
bursts end with the same update indicates that most pre-
ﬁxes, even if they experience an instability event, converge to
a main route. Note that this indicates that most instabilities
last only for a short time period and are contained within
an update burst, which validates our methodology. Some
failures cannot be repaired automatically and therefore in-
volve two update bursts (captured by failure/repair). Here
we cannot expect certain prevalent time periods which is
supported by the interarrival time distribution. For update
bursts that result in diﬀerent attribute values we notice two
spikes. Both spikes contain a large percentage of updates
with an AS path of the same length. But the relative frac-
tion of updates with longer paths is bigger in the ﬁrst spike
than in the second one. This is not surprising either since
after a failure one can expect an alternative route announce-
ment. Interesting features are the peaks in the distributions
at time periods, 10−14 hours and 1−2 days, known from hu-
man behavior periods. The interarrival time distribution is
not consistent with a heavy-tailed distribution. In contrast,
the distribution of the number of updates within each
update burst is consistent with heavy-tailed distributions.
(Figure 12 plots the complementary cumulative distribution
(ccdf) of the number of updates in a update burst.) Some
bursts contain more than 10, 000 updates and some bursts
have more than 1, 000 diﬀerent updates. Furthermore the
duration of a burst is strongly correlated to the number of
updates (correlation > 0.92).
Possible session resets: In Section 3 we argued that an
instability creator aﬀects either a single preﬁx or many pre-
ﬁxes from the same AS. Indeed we argued that in the latter
case the updates are or look like session resets. This also is
conﬁrmed by the presumption that a signiﬁcant part of the
routing table updates are results of BGP session resets [21].
A reset causes the two involved peers to update their BGP
routing table and select a new best path for each preﬁx. If
this results in a new “best path”/“no path” for a preﬁx, an
announcement/withdraw has to be sent to all other peers.
A session reset on an access link connecting ISP A and
B implies that all preﬁxes from A are now unreachable or
reachable via some other AS. A session reset of the only
peering link between two ISPs C and D implies updates for
all preﬁxes that uses the ASes C and D on their AS path.
But most ISPs peer at more than one location, see Figure 3.
This implies that we will only see updates for preﬁxes whose
best path included the link with the failed BGP session but
not for all preﬁxes. Assuming that preﬁxes are evenly dis-
tributed across peering links, this explanation predicts up-
dates at fractions such as 1/4, 1/3, 2/3 of the preﬁxes orig-
inating and transiting the ASes. Presumably the richer the
peering connectivity of an AS is, the smaller is its reliance on
any single BGP peering session and therefore the number of
best path changes. Therefore we presume that the fraction
of preﬁxes with routing updates decreases as the distance
between the AS and the measurement point increases since
the connectivity increases with the distance. Depending on
the policy (export of IGP metrics via communities or MEDs)
of the ISP a session reset of an IBGP session may not change
the best BGP path or may change a substantial fraction of
the best paths. This either causes only a small number of
updates or a sizeable number of updates. For example in the
example shown in Figure 3 an IBGP session reset will cause
no updates as long as no advanced BGP features are used.
In summary, we presume that most session resets result in
routing updates for a signiﬁcant fraction of the preﬁxes of
the AS/ASes involved in the reseted BGP session.
To understand the magnitude of these fractions we want
to compute, for each peer and for each AS, the fraction of
updated preﬁxes associated with this AS within some small,
appropriately chosen, time period. We approximate this
value by computing, for each update and for each AS on the
AS path, which fraction of the preﬁxes transiting/originated
by that AS has changed during a window of plus/minus 3
minutes relative to the update timestamp. Averaged over
5 minute periods this approximates the fraction of changed
originating/transiting preﬁxes for each AS. Figure 13 plots
the density of these fractions, in percentages, for peer
C (A) of data sets RRC:1 (LISP:1). For originating ASes
the distribution is rather bimodal, either close to 80% or
smaller than 20%. Therefore we only call events, where at
least 80% of the preﬁxes originating at an AS saw updates,
a possible session reset, in accordance with the above rea-
soning. Due to the high degree of peering at most transit
ASes, each transit AS session reset is bound to only aﬀect
a much smaller fraction of the preﬁxes. This is reﬂected in
the distribution which shows small peaks around 1/4, 1/3,
2/3. Given the shape of the distribution we only identify
an update as belonging to a possible session reset, if at least
20% of the preﬁxes associated with a transit AS experienced
updates.
After identifying which updates are part of a possible ses-
sion reset, we group the updates into session resets in the
same way that we grouped updates into update bursts. We
explicitly choose a much smaller timeout value, 90 seconds,
for session resets than for update bursts, since session resets
are events localized in time. Experiments have shown that
the results are not sensitive to this speciﬁc value. Figures 14
and 15 display the density plots of the logarithm of
380
0
0
,
5
s
e
t
u
o
r
#
0
0
0
,
3
0
0
0
,
1
0
y
t
i
l
i
b
a
b
o
r
p
.
6
0
.
5
0
4
0
.
3
0
.
2
0
.
1
0
.
0
0
.
Class A
CIDR ClassA
Class B
Class C/CIDR
y
t
i
s
n
e
d
y
t
i
l
i
b
a
b
o
r
p
5
2
0
.
0
2
0
.
5
1
0
.
0
1
0
.
5
0
0
.
0
0
.
Class A
CIDR ClassA
Class B
Class C/CIDR
1/8
50/8
100/8
150/8
200/8
250/8
network prefix
Fig. 16: # of routes per IP ad-
dress range.
0
1
2
3
4
5
0
5
10
15
20
25
depth
distance
Fig. 17: Preﬁx depth.
Fig. 18: Preﬁx distances.
the duration and interarrival times of session resets
for the peer A (A) of data sets RRC:1 (LISP:1). Surpris-
ingly some possible session resets last for a long time (> 30
minutes). Note that due to the 90 second timeout this im-
plies a continuous sequence of updates. Such updates are
likely caused by persistently ﬂapping interfaces not subject
to route ﬂap damping. The fact that quite a large fraction
(18.4%) of the session resets lasts longer than 90 seconds
(second spike), indicates that routes are propagated along
diﬀerent paths. Some follow one AS path, others follow an-
other longer or shorter path. Along the path they are sub-
ject to the Min-Route Advertisement Interval. This explains
session reset durations of 90 seconds. The interarrival time
distributions show the eﬀect of synchronization due to route
ﬂap damping (diﬀerent route ﬂap damping parameters are
in use by diﬀerent ASes). After a session reset some routes
may be subject to damping. After some time they all will
be eligible for new updates again. To us, the observer, these
later updates look like another session reset. Therefore it
should be noted that we only identify candidate session re-
sets. We are neither able to capture all session resets, nor
are all captured ones actual session resets. But manual vali-
dation shows that the methodology is promising. Again the
interarrival time distribution is neither consistent with an
exponential distribution (too many dependencies), nor with
a heavy-tailed one. On the other hand the number of up-
dates within a possible session reset is, just as the number
of (unique) updates within a update burst, consistent with
a heavy-tailed distribution, although maybe not always a
Pareto distribution.
4.3 BGP preﬁx forest
The structure of the preﬁxes in the BGP tables reﬂects the
history of address allocation policies in the Internet. This
policy has led to dependencies between the preﬁxes which
is reﬂected in the structure of the preﬁx forest. We there-
fore analyze the BGP tables according to the properties of
the preﬁx forest:
fanout, depth and distances (for deﬁni-
tions of these terms see Section 3). To capture the history
of classful address allocation we analyze the diﬀerence be-
tween the usage of the address space [53] of class A, B, C
and CIDR blocks. Furthermore we consider the relationship
between preﬁx length and distance in the preﬁx forest. In
summary, we characterize routing tables with respect to the
metrics shown in Table 2. The forest metrics are crucial if
we want to study how routing instabilities inﬂuence forward-
ing performance (see [45, 54]). In contrast to the work by
Huston [55] we are not analyzing the reasons of the growth
rates of BGP routing tables, neither are we analyzing the
long-term churn of BGP routing tables [56].
To highlight the dependency of the routing table on the
history of address allocation policies, Figure 16 plots how
many preﬁxes exist with the same ﬁrst octet of the
IP address. Intuitively this represents the usage of address
space within each /8 preﬁx6. Looking back to the days of
classful routing [53] class A networks should only announce
a single preﬁx, class B networks should announce a maxi-
mum of 254 preﬁxes, and class C networks may announce
up to 64K preﬁxes for each ﬁrst byte of the IP address. This
is clearly not the case today. For example within the former
class B address range we usually observe between 100 to 254
preﬁxes. Still 23 of 45 groups within the same /8 preﬁxes
announced slightly larger number of preﬁxes. The variabil-
ity in terms of announced preﬁxes within each /8 is much
larger in the former class C address range and extreme in
the class A/A-CIDR range. While only 41 of the 126 pos-
sible class A networks did announce any preﬁxes, there are
some that announce a lot of more speciﬁc preﬁxes, e.g., 12/8
(AT&T), announces over 650 more speciﬁc preﬁxes, or 24/8
(designated for data-over-cable networks), announces up to
1, 970 preﬁxes. Some of these more speciﬁc preﬁxes are used
to implement the CIDR allocation strategies, others appear
to be used for routing policies such as multi-homing, traf-
ﬁc splitting/sharing, load balancing, etc. Due to the large
diﬀerences we study the forest metrics separately for each
address range: class A, B, C and A-CIDR.
Figures 17, 18 conﬁrm this decision. The plots show the
density of the depth and the distances of the pre-
ﬁxes separated according to address ranges. The depth
of the preﬁxes (see Figure 17) reﬂects how many holes are
punched into the address space, i.e., how often one address
block is more speciﬁc than another one. Surprisingly, we
have observed that more than 84 preﬁxes have depth 4 − 5,
a rather large number. Just because a preﬁx is at depth 4
or 5 does not imply that it is a point-to-point link (/30) or
a host route (/32). Ironically no /30 or /32 can be found at
depth 4 or 5 (indeed over 80% are nested exactly 1 time).
Rather we observe that for preﬁxes with large depth the dis-
tances between the speciﬁc routes are rather small, resulting
in progressions of, e.g., /17, /19, /20, /21, /22. This sug-
gests that this technique is used for traﬃc engineering and
multi-homing. Punching holes is most extreme in the class
C address block.
The distribution of preﬁx lengths is as expected. Less
6Note, that not all preﬁxes with a mask of /8 need to be
present in the routing table.
39y
t
i
s
n
e
d
y
t
i
l
i
b
a
b
o
r
p
0
3
0
.
5
2
0
.
0
2
0
.
5
1
0
.
0
1
0
.
5
0
0
.
0
0
.
Depth 1
Depth 2
Depth 3
y
t
i
s
n
e
d
y
t
i
l
i
b
a
b
o
r
p
0
3
0
.
5
2
0
.
0
2
0
.
5
1
0
.
0
1
0
.
5
0
0
.
0
0
.
Depth 0
Depth 1
Depth 2
Depth 3
Depth 4
Depth 1
Depth 2
Depth 3