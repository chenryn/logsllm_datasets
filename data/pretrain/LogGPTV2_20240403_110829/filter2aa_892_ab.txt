# Asterisk AGI Interface and Cross-Language Support

Asterisk's AGI (Asterisk Gateway Interface) provides a powerful mechanism for adding custom functionality to the Asterisk PBX. It supports multiple programming languages, including Perl, C, PHP, and any other language that can handle standard input and output (STDIN and STDOUT).

## Key Features of AGI
- **Cross-Language Compatibility**: AGI can be used with various languages, such as Perl, C, PHP, and more.
- **Communication via STDIN and STDOUT**: Programs can communicate with Asterisk using standard input and output streams.
- **Versatility and Flexibility**: AGI is highly versatile and can be used to implement a wide range of functionalities.

## A Simple AGI Program in Bash

```bash
#!/bin/bash
#
# Simple AGI example to read back Caller ID
#
# Written by: Black Ratchet

# Import variables from Asterisk
declare -a array
while read -e ARG && [ "$ARG" ]; do
    array=($(echo $ARG | sed -e 's/://'))
    export ${array[0]}=${array[1]}
done

checkresults() {
    while read line; do
        case ${line:0:4} in
            "200 ") echo $line >&2; return ;;
            "510 ") echo $line >&2; return ;;
            "520 ") echo $line >&2; return ;;
            *) echo $line >&2 ;; # Keep reading invalid commands until "520 End ..."
        esac
    done
}

# Say the user's Caller ID
echo "STREAM FILE yourcalleridis \"\""
checkresults
echo "SAY DIGITS ${agi_callerid} \"\""
checkresults
```

### How It Works
1. **Connection**: The AGI script connects to Asterisk and reads the `agi_callerid` variable.
2. **Playback**: The script plays a sound file (`yourcalleridis`) and then says the caller ID digits.
3. **Disconnection**: The call is terminated after the playback.

## Using Asterisk::AGI in Perl

Asterisk::AGI is a Perl module that simplifies AGI programming by handling many of the low-level details.

### Key Features of Asterisk::AGI
- **Simplification**: Takes care of much of the 'dirty work' involved in AGI programming.
- **Object-Oriented Interface**: Provides an object-oriented interface for controlling the AGI.
- **Integration**: Easily integrates with Perl, which in turn can integrate with almost anything.

### A Simple AGI Program with Asterisk::AGI

```perl
#!/usr/bin/perl
#
# Simple AGI example to say the Caller ID using Asterisk::AGI
#
# Written by: Black Ratchet

use Asterisk::AGI;
my $AGI = new Asterisk::AGI;

# Read variables from Asterisk
my %input = $AGI->ReadParse();

# Speak the user's caller ID if available
if ($input{'callerid'}) {
    $AGI->stream_file('yourcalleridis');
    $AGI->say_digits($input{'callerid'});
}
```

## Interacting with Your Script

### Input Methods
- **Touch Tone**: Basic, ubiquitous, and easy to use, but limited in functionality.
- **VXML (VoiceXML)**: Extensible and widely supported, but lacks native support in Asterisk. Commonly used in SIPxPBX and commercial solutions.

### Output Methods
- **Text to Speech**:
  - **Festival**: Native support, free, but low-quality voice.
  - **Cepstral**: High-quality voice, easy to integrate, but not free (though affordable).
- **Recordings**:
  - **Do It Yourself**: Free but requires effort.
  - **Allison Smith**: Professional recordings, available for purchase, with a wide range of canned sayings.

## More Complex AGI Script Example

```perl
#!/usr/bin/perl
#
# Simple AGI example demonstrating input and output
#
# Written by: Black Ratchet

use Asterisk::AGI;
my $AGI = new Asterisk::AGI;

while (1) {
    my $input = chr($AGI->stream_file('seeandsay/menu', '123'));
    if ($input eq "1") {
        $AGI->stream_file('seeandsay/ratchet');
    } elsif ($input eq "2") {
        $AGI->stream_file('seeandsay/cepstralsays');
        $AGI->stream_file('seeandsay/cepstral');
    } elsif ($input eq "3") {
        $AGI->stream_file('seeandsay/allisonsays');
        $AGI->stream_file('seeandsay/allisonhello');
    }
}
```

## Cool Applications

### Caller ID Spoofing
- **Functionality**: Asterisk allows setting a custom Caller ID, similar to a PRI.
- **Uses**:
  - Confusing or amusing friends.
  - Social engineering.
  - Backspoofing to find names associated with phone numbers.

### Backspoofing
- **Concept**: Fools the phone company into providing the name associated with a telephone number.
- **Uses**:
  - Pre-scanning interesting phone numbers.
  - Cheap reverse lookup.
  - Identifying celebrities' cell phone numbers.

### Super Caller ID
- **Features**: Extracts data from a telephone number, such as name, address, and switch information.
- **Implementation**: Runs on a dedicated WYSE 150, hacked up by Strom Carlson.

### Rigging Radio Contests
- **Method**: Use numerous simultaneous outbound calls to overwhelm the radio station's hunt group.
- **Result**: Increases the chances of winning, though it doesn't guarantee a win.

### Nmap-by-phone
- **Functionality**: Allows port scanning from a phone.
- **Uses**: Impress friends, scan computers from payphones, and perform various other tasks.

### Personal Assistant
- **Features**: Reads emails over the phone, sets reminders, and provides updates.
- **Benefits**: Cheaper than commercial alternatives and can be enhanced with VXML.

## DEFCON by Phone

### Problem
- **Challenge**: Managing the massive Def Con schedule, which is hard to memorize and changes frequently.

### Solution
- **Def Con By Phone**: A system that allows searching the Def Con schedule, setting reminders, and notifying users of changes.
- **Features**:
  - Search available to all callers.
  - Quick reminders for upcoming events.
  - User registration for personalized features.
  - Database-driven with over 250 audio clips.
  - Web interface for event management.

### Code and Resources
- Available at: 
  - [Black Ratchet](http://www.blackratchet.org/)
  - [Strom Carlson](http://www.stromcarlson.com/)

## Caveats

### TDM Card Flakiness
- **Issues**: Connecting an FXS module to a real telephone line can be dangerous, and cards may malfunction without apparent reason.

### Code Restrictions
- **GPL License**: All code contributed to Asterisk is owned by Digium, and contributors must waive their rights.

### Termination Issues
- **Call Progression**: Some providers, like VoipJet, do not fully support proper call progression.
- **Uptime**: Most providers do not offer 99.999% uptime, and some may lose your registration, requiring a restart of Asterisk.

## Q&A

### Contact Information
- **Phone**: 1-800-4-CATSEX
- **Further Reading and Resources**:
  - [Asterisk](http://www.asterisk.org/)
  - [Black Ratchet](http://www.blackratchet.org/)
  - [Digium](http://www.digium.com/)
  - [Strom Carlson](http://www.stromcarlson.com/)
  - [VoIP Info](http://www.voip-info.org/)
  - [VoIP Supply](http://www.voipsupply.com/)