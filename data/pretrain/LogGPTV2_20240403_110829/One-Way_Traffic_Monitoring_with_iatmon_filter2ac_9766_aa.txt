# One-Way Traffic Monitoring with iatmon

**Author:** Nevil Brownlee  
**Affiliations:** CAIDA, UC San Diego, and The University of Auckland, New Zealand  
**Email:** [PI:EMAIL]

## Abstract
Over the past decade, unsolicited one-way Internet traffic has been a valuable tool for studying malicious activities on the Internet. Researchers typically observe such traffic using network telescopes deployed in darkspace (unused address space). When these observations began ten years ago, one-way traffic was minimal. However, over the last five years, traffic levels have increased significantly, making it challenging to discern new activities through raw packet and byte counts or even port counts.

To enhance the detectability of changes in one-way traffic composition, we developed iatmon (Inter-Arrival Time Monitor), a freely available measurement and analysis tool. iatmon allows users to separate one-way traffic into clearly defined subsets. We initially implemented two subsetting schemes: source types based on the schema proposed by Treurniet [12], and inter-arrival-time (IAT) groups that summarize source behavior over time. Using 14 types and 10 groups, we created a matrix of 140 type + group subsets. Each subset represents only a fraction of the total traffic, making changes within the subsets more observable even when changes in total traffic levels are not noticeable.

We report on our experience using this tool to observe changes in one-way traffic at the UCSD network telescope during the first half of 2011. Daily average plots of source numbers and their traffic volumes reveal clear long-term changes in several of our types and groups.

## 1. Introduction
Since around 2002, observations of unsolicited one-way Internet traffic have provided insights into a wide range of security-related events, including misconfigurations, scanning of address space by hackers, backscatter from denial-of-service attacks, and the automated spread of malware like worms and viruses. Researchers have generally used network telescopes, deployed in darkspace (unused address space), to observe such traffic. Initially, one-way traffic was minimal. However, due to increased botnet-related activities over the last five years, one-way traffic at the UCSD network telescope has risen. For example, Aben [1] observed an increase in sources scanning TCP port 445 from almost none to 220,000 per hour over three months starting on November 21, 2008. Now, we see approximately 6 GB/h of one-way traffic, which is high enough to require more subtle differentiation—raw packet and byte or even port counts make it difficult to discern and distinguish new activities.

To better understand current and emerging one-way traffic behavior, we introduce and implement a methodology in a freely available measurement and analysis tool, iatmon. This tool provides an effective platform for separating one-way traffic into well-defined subsets, making changes within a subset more easily recognizable. We implemented two subsetting schemes in iatmon: source types and IAT groups, described in Section 3.3. This taxonomy facilitates the analysis of increasing unsolicited IPv4 traffic, pollution to IPv6 addresses, and comparisons between the two. Tools like iatmon can also enable consistent distributed monitoring of unused addresses across many different sites, effectively providing a wide-area view of unsolicited one-way traffic. The tool's utility is not limited to empty address space; it can be deployed on partially populated address space, ignoring traffic to assigned hosts, or used to monitor unsolicited traffic to all IP addresses on a stub network, as iatmon ignores bidirectional traffic.

We first review related work in darkspace traffic analysis, then summarize research challenges and opportunities specific to darkspace measurement. In Section 3, we describe the data and our analysis methods. Section 4 presents the results of our analyses. Section 5 summarizes our contributions and future plans for one-way traffic analysis.

## 2. Related Work
Data from the UCSD network telescope has supported significant research on DOS attacks, Internet worms, and their victims, such as Code-Red, Slammer, Witty, and the Nyxem email virus. Data sets curated from telescope observations of these events have become a foundation for modeling the top speed of flash worms, worst-case scenario economic damages, pathways of spread, and potential means of defense.

In 2004, Pang et al. [10] analyzed one-way traffic destined for five different empty prefixes (a /8, two /19s, and two sets of 10 contiguous /24 subnets) announced from two sites. They found that, relative to legitimate traffic, traffic to darkspace is complex, highly automated, frequently malicious, potentially adversarial, and mutates rapidly. TCP packets dominated in all of their traffic samples, with 99% being TCP/SYNs, indicating either scanning or backscatter. Also in 2004, Cooke et al. [6] found diversity in incoming traffic to ten unused address blocks ranging in size from a /25 to a /8, announced from service provider networks, a large enterprise, and academic networks. They passively recorded incoming packets and actively responded to TCP SYN requests to obtain more data from the sources. They found traffic diversity along three dimensions: across protocols and applications, for a specific protocol/application using TCP port 135, and for a particular worm signature (Blaster).

In 2006, Barford et al. [2] analyzed the source address distribution of malicious "Internet background" traffic. They evaluated traces from network telescopes running active responders on portions of two /16s and one /8 network, in addition to a large set of intrusion detection system logs provided by Dshield.org. They found a bursty distribution of source addresses, many from a small set of tightly concentrated network locations, which varied across segments of darkspace but were consistent over time for each separate segment.

More recently, in 2010, Wustro et al. [14] analyzed background traffic using one-week traces from four /8 darkspaces. Traces of one-way traffic destined to 35/8 from 2006 to 2010 showed an eight-fold rise in traffic rate over the five years, with daily variations during a week. The 2010 data rate (about 20 Mb/s) was similar to that at the UCSD network telescope. One-week traces from three of the four darkspaces suggested that the overall daily variations in traffic volume were similar across all sites. Their TTL distributions were also similar, suggesting that all the sites saw similar spatial traffic distributions.

In 2011, Treurniet [12] proposed a traffic activity classification schema to monitor state changes in TCP, UDP, and ICMP flows to help detect low-rate network scanning activities. She used state changes per sending host to classify the host as normal, DoS, backscatter, scanning, etc. She tested the approach on bidirectional trace data from outside the border of a /14 network with some responding servers, although fewer than 1% of observed flows were bidirectional communications with these servers. The rest of the observed traffic was malicious, mostly slow scans of various types.

## 3. Methodology

### 3.1 Data Set
The UCSD network telescope [5, 4] uses a /8 network prefix, most of which is dark. An upstream router filters out legitimate traffic to the reachable IP addresses in this space, so we monitor only traffic destined to empty address space. Managing the UCSD network telescope requires continual navigation of the pervasive challenges in network traffic research methodology: collection and storage, efficient curation, and sharing large volumes of data. The large volume of data captured by the telescope incurs considerable expenses for data storage and limits the number of researchers who can realistically download datasets. The situation is worse during malicious activity outbreaks when data volumes increase sharply, yet rapid analysis and response are necessary.

The UCSD network telescope remains a purely passive observer of unsolicited traffic. While we do not rule out active response by the telescope in the future, active responding requires resources and careful navigation of legal and ethical issues. We have found that much can be gleaned with non-intrusive methods and external knowledge of malware behavior. For example, we indirectly observed the rise of Conficker A and B because Conficker induced a conspicuous increase in the number of probe packets aimed at TCP port 445, using poorly randomized destination addresses [1].

### 3.2 Analysis Strategy
In 2002, when CAIDA began analyzing telescope data, one-way traffic volumes were low, so rapid increases caused by viruses and fast-spreading worms were easy to discern. As of June 2011, we see 6 to 9 GB/h of one-way traffic, making the early stages of a new rapidly spreading attack much harder to observe in the continuous swamp of background traffic. For example, we observe that each hour 76% of the sources send UDP packets, but these packets account for only 23% of the hourly byte volumes, so that the UDP sources are swamped (in terms of byte volumes) by TCP sources. One goal of our iatmon methods and tool is to separate the one-way traffic into various subsets so that changes within subsets are easier to detect.

### 3.3 iatmon Implementation
First, we consider the one-way traffic in terms of its sources. Specifically, we construct a source table, with entries that summarize the set of packets arriving from a source IP address. At the end of each hour’s trace, iatmon scans the source table, calling various classifying functions to separate the sources into clearly-defined subsets. We describe our initial implementation of these subsetting schemes below. iatmon has a Ruby outer block, which sets up iatmon’s configuration and writes its hourly summary file. However, most of the processing occurs in a C extension module that reads trace packets, maintains the source hash table, classifies sources using the various subsetting schemes, and passes results back to the outer block. For normal hours, iatmon running on an 8-core machine with 32 GiB of memory takes 7 to 15 minutes of elapsed time to process each hour’s trace file, easily fast enough to keep up with new data from the telescope.

iatmon handles its own storage allocation, requesting memory in 4 GB chunks as needed. Two such chunks are sufficient for most hour-long intervals of trace data, but for nine of the hours, iatmon was unable to get enough memory to process the entire hour—even when using 28 GiB of real memory. We examined the first few thousand packets of each of those nine hours and found that most of their sources sent just two TCP packets, from apparently random source addresses. To allow iatmon to handle traces when such DoS attack conditions occur, we discarded sources that only sent two packets and were then idle for at least 120 seconds. One of these nine traces had 122.5 million source addresses that we discarded (97% of the hour’s sources), but most packets in the flood traces had the same TTL, suggesting a high-rate DoS attack using spoofed source addresses.

#### Source Types
One obvious approach to classifying one-way sources is to examine their use of IP addresses and ports. For example, a probe source sends all its packets to a single port on a single host. A vertical scan source sends packets to various ports on a single host. A horizontal scan source sends packets to the same port on many hosts. We used this approach in early development work on iatmon. Our current source types scheme is now based on Treurniet’s [12] recent classification scheme, using the source types listed in Table 1(a).

In 2008, we observed the rise of the Conficker worm/botnet. Conficker C may send both TCP and UDP packets as part of its p2p network establishment; SRI’s algorithm [11] allows us to estimate which incoming packets are likely Conficker C p2p packets. We were curious about whether BitTorrent has contributed to the rise in UDP one-way traffic observed in the last two years. The BitTorrent protocols are well-documented [8, 13], allowing us to identify µTorrent sources from UDP packet payloads. Table 1(a) includes the two source types we added to represent these application-specific sources.

#### Source IAT Groups
About 30% of the packets that reached the UCSD telescope in the first half of 2011 were TCP SYNs, carrying no payload. To further characterize the source behaviors, especially those from TCP sources, we investigated the inter-arrival time (IAT) distributions from sources active in a typical hour. To search for recognizable IAT patterns, we plotted many sheets of 'postage-stamp size' IAT distribution plots, with each distribution’s parameters shown on its plot. We examined these plots manually to find common patterns, then developed algorithms that captured these recognizable subsets of the sources, based on statistical properties of their IAT distributions. For example, many sources exhibit a strong inter-arrival time mode at 3 seconds, the standard time for TCP retries, aggregated with an underlying wide range of IATs. A Poisson process that sends TCP SYN packets and resends each packet after 3-second intervals will produce this kind of distribution, with skew that depends on the process’s average time between sending new packets.

Once we identified a clearly distinguishable IAT pattern, we developed an algorithm to capture it and assigned it an IAT group label. After several cycles of this process, we settled on a scheme with nine different groups (listed in Table 1(b)) that meaningfully distinguished about 99% of the sources in each hour.

Figure 2 shows example distributions for each group. The center column shows three groups that have a packet inter-arrival time mode at 3 seconds, the standard time for TCP retries. We also found that some UDP sources had IAT distributions suggesting an application with a 3-second retry time. These three group names end in left, even, and right to show which side of their distribution’s mode has more counts. The left-hand column shows stealth sources—those sending fewer than 120 packets, remaining active for more than 30 minutes, and having long (>= 5 minute) quiet intervals. (IAT distributions are an effective way to detect stealth sources, despite their low average packet rates.) The right-hand column shows IAT distributions for three other groups: at the top, short-lived sources, active less than 30 minutes and sending fewer than 120 packets; in the middle, high-rate sources, sending packets almost back-to-back; and at the bottom, 'DoS' sources sending more than 10% of their packets in brief (<= 15 ms) bursts.

## 4. Observations

### 4.1 Long-Term (Six-Month Plots)
Figure 3 shows daily average total counts and volumes per hour as stacked bars for source types and IAT groups observed at the UCSD network telescope from January 3, 2011, to June 30, 2011. Over those six months, typically between 0.5 and 2.0 million sources were seen on average during a typical 6-10 GB/hour of one-way traffic. The number of unique source IP addresses (in millions) declined from 1.08 in mid-January to 0.65 at the beginning of February, then rose again to 1.37 by mid-April, after which there was no obvious trend in total source counts or MB volumes.

For source types (Figure 3(a)), the number of TCP horizontal scan sources in the daily average hour showed a steady decline while TCP probe, TCP vertical scan, and untyped source numbers remained at steady, much lower values. UDP probe and unknown source numbers increased gradually from about February 1. Apart from the gradual long-term changes, Figure 3(a) also shows short-lived activity, for example, the huge spike in TCP probes on January 12, the increase in TCP and UDP during the first week of February, and the doubling of UDP probes in the first week of April.

## 5. Conclusion
We have presented iatmon, a tool for monitoring and analyzing one-way traffic, which allows for the separation of traffic into clearly defined subsets. This tool enhances the detectability of changes in one-way traffic composition, making it easier to discern new activities. Our experience with iatmon at the UCSD network telescope during the first half of 2011 has provided valuable insights into the long-term and short-term changes in one-way traffic. Future work will focus on refining the subsetting schemes and expanding the tool's capabilities to handle larger and more diverse datasets.