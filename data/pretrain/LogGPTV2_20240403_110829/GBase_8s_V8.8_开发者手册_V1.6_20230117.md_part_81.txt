14.6.2.7.1 网卡多中断队列设置
产品需要在服务器端，客户端均使用网卡多中断队列（默认16队列）的规格，网卡至
少为千兆网卡，客户端与服务端光纤互连。
当前推荐的配置为：
 服务器端网卡配置16中断队列。
 客户端网卡配置48中断队列。
操作步骤
(1) 下载IN500_solution_5.1.0.SPC401.zip。
(2) 解压IN500_solution_5.1.0.SPC401.zip，进入tools\linux_arm目录。
(3) 解压nic-ZIP ，在root用户下安装hinicadm。
(4) 确定当前连接的物理端口对应哪个网卡，不同硬件平台的网口和网卡名有差别。以当前
举例的服务器为例，当前使用enp3s0的小网网口，属于hinic0网卡。
(5) 进入config目录， 利用配置工具hinicconfig配置中断队列FW配置文件。根据实际需
南大通用数据技术股份有限公司
598
GBase 8s V8.8开发者手册
要进行修改。
 64队列配置文件：std_sh_4x25ge_dpdk_cfg_template0.ini；
 16队列配置文件：std_sh_4x25ge_nic_cfg_template0.ini；
a. 修改系统支持的最大中断队列数。
​ 对hinic0卡配置为不同队列数（默认16队列，可以按需要调整）
​ ./hinicconfighinic0-fstd_sh_4x25ge_dpdk_cfg_template0.ini
​ 执行命令reboot重启操作系统使生效。
​ 执行命令ethtool-lenp3s0查看是否修改成功，比如下图表示修改为64。
b. 修改当前使用的队列数。
执行如下命令，将网卡的中断队列调整为48个。
​ ethtool-Lenp3s0combined48
不同平台，不同应用的优化值可能不同，当前128核的平台，服务器端调优值为16，
客户端调优值为48。
14.6.2.7.2 中断调优
在GBase8s数据库CPU占比90%以上的情况下，CPU成为瓶颈，需要开启offloading，
将网络分片offloading到网卡上。
执行如下命令，开启tso、lro、gro、gso特性。
ethtool–Kenp3s0tsoon
ethtool–Kenp3s0lroon
ethtool–Kenp3s0groon
ethtool–Kenp3s0gsoon
执行如下命令，将网卡中断队列与CPU核进行绑定。
shbind_net_irq.sh 16
14.6.2.7.3 网卡固件确认与更新
执行命令ethtool-ienp3s0确认当前环境的网卡固件版本是否为2.4.1.0，如果不是2.4.1.0，
建议更换为2.4.1.0，以获得更佳性能。
#ethtool-ienp3s0
driver:hinic
南大通用数据技术股份有限公司
599
GBase 8s V8.8开发者手册
version:2.3.2.11
firmware-version:2.4.1.0
expansion-rom-version:
bus-info:0000:03:00.0
 更新网卡固件。
a.在..\firmware\update_bin路径下，获取cfg_data_nic_prd_1h_4x25G.bin文件。
b.使用root用户执行如下命令更新网卡固件。
​ hinicadmupdatefw-i-f
涉及的参数说明如下：
 “物理网卡设备名”为网卡在系统中的名称，例如“hinic0”表示第一张网卡，“hinic1”表示
第二张网卡，查找方法参见前文网卡多中断队列设置。
 “固件文件路径”为cfg_data_nic_prd_1h_4x25G.bin文件的路径。
例如：
​ #
​ Pleasedonotremovedriverornetworkdevice
​ Loading...
​ [>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>] [100%][\]
​ Loadingfirmwareimagesucceed.
​ PleaserebootOStotakefirmwareeffect.
c.重启服务器，再确认网卡固件版本成功更新为2.4.1.0。
​ #ethtool-ienp3s0
​ driver:hinic
​ version:2.3.2.11
​ firmware-version:2.4.1.0
​ expansion-rom-version:
​ bus-info:0000:03:00.0
14.6.2.8 数据库服务端及客户端绑核
安装GBase8s数据库，具体操作请参考《GBase8sV8.8_3.0.x_安装指南》。
停止数据库，具体操作请参考《GBase8sV8.8_3.0.x_GBase8s 管理员指南》中的“启停
GBase8s”章节。
使用 gs_guc 工具修改数据库端口、IP 等，gs_guc 的使用请参考《GBase 8s
南大通用数据技术股份有限公司
600
GBase 8s V8.8开发者手册
V8.8_3.0.x_GBase8s 工具参考》中的“服务端工具>gs_guc”章节。
使用gs_guc工具设置如下参数。
advance_xlog_file_num=100
numa_distribute_mode='all'
thread_pool_attr='464,4,(cpubind:1-27,32-59,64-91,96-123)'
xloginsert_locks=16
wal_writer_cpu=0
wal_file_init_num=20
xlog_idle_flushes_before_sleep=500000000
pagewriter_sleep=10ms
执行如下命令以绑核方式启动服务端数据库。
numactl-C1-27,32-59,64-91,96-123gaussdb--single_node-D/data1/gaussdata -p3625&
其中0核用于wal_writer、1-27、32-59、64-91、96-123表示使用 111个核运行TPCC
程序，其余的16个核用来处理服务端的网络中断。
执行如下命令，将客户端CPU的48个核与网卡中断队列进行绑定：
```shbind_net_irq.sh48
14.6.3 测试 TPCC 性能
下载TPCC标准测试工具BenchmarkSQL5.0。
将目录lib/postgresql下面的*.jar 替换为GBase8s适配的jar包。
$pwd
/yourpath/benchmarksql-5.0/lib/postgres
$ls
postgresql.jar #GBase8sjdbc驱动。
postgresql-9.3-1102.jdbc41.jar.bak # 自带jar备份。
进入benchmarksql-5.0根目录，输入ant命令进行编译。
$cd/yourpath/benchmarksql-5.0/
$ant
编译成功后会生成build和dist两个目录。
创建benchmarkSQL配置文件，使用benchmarkSQL前需要配置数据库相关的信息，包
括数据库账号、密码、端口、数据库名称。
$cd/yourpath/benchmarksql-5.0/run
$cpprops.pgprops.opengauss.1000w
南大通用数据技术股份有限公司
601
GBase 8s V8.8开发者手册
$vimprops.opengauss.1000w
从props.pg拷贝一份配置文件并按如下修改，斜体处请根据真实情况进行修改。
db=postgres
driver=org.postgresql.Driver
// 修改连接字符串, 包含IP、端口号、数据库，其中8.92.4.238为数据库服务端的千兆网
卡IP。
conn=jdbc:postgresql://8.92.4.238:21579/tpcc1000?prepareThreshold=1&batchMode=on&fetc
hsize=10
// 设置数据库登录用户和密码。
user=bot
password=gbase;123
warehouses=1000
loadWorkers=200
// 设置最大并发数量, 跟服务端最大work数对应。
terminals=812
//要为每个终端运行指定事务--runMins必须等于零
runTxnsPerTerminal=0
//要运行指定的分钟 -runTxnsPerTerminal必须等于零
runMins=5
//每分钟总事务数
limitTxnsPerMin=0
//在4.x兼容模式下运行时，设置为True。
//设置为false以均匀使用整个配置的数据库。
terminalWarehouseFixed=false
//以下五个值相加之和为100。
//45、43、4、4和4的默认百分比与TPC-C规范匹配。
newOrderWeight=45
paymentWeight=43
orderStatusWeight=4
deliveryWeight=4
stockLevelWeight=4
//创建文件夹以收集详细结果数据。
//通过注释取消此内容。
resultDirectory=my_result_%tY-%tm-%td_%tH%tM%tS
osCollectorScript=./misc/os_collector_linux.py
南大通用数据技术股份有限公司
602
GBase 8s V8.8开发者手册
osCollectorInterval=1
//收集OS负载信息。
osCollectorSSHAddr=PI:EMAIL
osCollectorDevices=net_enp3s0blk_nvme0n1blk_nvme1n1blk_nvme2n1blk_nvme3n1
TPCC导入数据前准备。
使用如下文件替换benchmarkSQL中的文件，路径为benchmarksql-5.0/run/sql.common/。
该文件主要增加了两个表空间和一些附加数据属性。
CREATETABLESPACEexample2relativelocation'tablespace2';
CREATETABLESPACEexample3relativelocation'tablespace3';
createtablebmsql_config(
cfg_name varchar(30),
cfg_value varchar(50)
);
createtablebmsql_warehouse(
w_id integer notnull,
w_ytd decimal(12,2),
w_tax decimal(4,4),
w_name varchar(10),
w_street_1 varchar(20),
w_street_2 varchar(20),
w_city varchar(20),
w_state char(2),
w_zip char(9)
)WITH(FILLFACTOR=80);
createtablebmsql_district(
d_w_id integer notnull,
d_id integer notnull,
d_ytd decimal(12,2),
d_tax decimal(4,4),
d_next_o_id integer,
d_name varchar(10),
d_street_1 varchar(20),
d_street_2 varchar(20),
d_city varchar(20),
d_state char(2),
d_zip char(9)
)WITH(FILLFACTOR=80);
南大通用数据技术股份有限公司
603
GBase 8s V8.8开发者手册
createtablebmsql_customer(
c_w_id integer notnull,
c_d_id integer notnull,
c_id integer notnull,
c_discount decimal(4,4),
c_credit char(2),
c_last varchar(16),
c_first varchar(16),
c_credit_lim decimal(12,2),
c_balance decimal(12,2),
c_ytd_payment decimal(12,2),
c_payment_cnt integer,
c_delivery_cntinteger,
c_street_1 varchar(20),
c_street_2 varchar(20),
c_city varchar(20),
c_state char(2),
c_zip char(9),
c_phone char(16),
c_since timestamp,
c_middle char(2),
c_data varchar(500)
)WITH(FILLFACTOR=80)tablespaceexample2;
createsequencebmsql_hist_id_seq;
createtablebmsql_history(
hist_id integer,
h_c_id integer,
h_c_d_idinteger,
h_c_w_idinteger,
h_d_id integer,
h_w_id integer,
h_date timestamp,
h_amountdecimal(6,2),
h_data varchar(24)
)WITH(FILLFACTOR=80);
createtablebmsql_new_order(
no_w_id integer notnull,
南大通用数据技术股份有限公司
604
GBase 8s V8.8开发者手册
no_d_id integer notnull,
no_o_id integer notnull
)WITH(FILLFACTOR=80);
createtablebmsql_oorder(
o_w_id integer notnull,
o_d_id integer notnull,
o_id integer notnull,
o_c_id integer,
o_carrier_idinteger,
o_ol_cnt integer,
o_all_local integer,
o_entry_d timestamp
)WITH(FILLFACTOR=80);
createtablebmsql_order_line(
ol_w_id integer notnull,
ol_d_id integer notnull,
ol_o_id integer notnull,
ol_number integer notnull,
ol_i_id integer notnull,
ol_delivery_d timestamp,
ol_amount decimal(6,2),
ol_supply_w_id integer,
ol_quantity integer,
ol_dist_info char(24)
)WITH(FILLFACTOR=80);
createtablebmsql_item(
i_id integer notnull,
i_name varchar(24),
i_price decimal(5,2),
i_data varchar(50),
i_im_id integer
);
createtablebmsql_stock(
s_w_id integer notnull,
s_i_id integer notnull,
s_quantity integer,
s_ytd integer,
南大通用数据技术股份有限公司