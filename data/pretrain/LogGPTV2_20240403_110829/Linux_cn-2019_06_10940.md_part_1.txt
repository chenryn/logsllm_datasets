---
author: Sk
category: 容器与云
comments_data:
- date: '2019-06-06 05:57:12'
  message: deepin 终端好评&nbsp;&nbsp;看着很亲切
  postip: 171.82.188.46
  username: 来自湖北武汉的 Chrome Mobile 62.0|Android 7.1 用户
count:
  commentnum: 1
  favtimes: 6
  likes: 0
  sharetimes: 0
  viewnum: 8181
date: '2019-06-05 01:37:00'
editorchoice: false
excerpt: 该教程包含了如何创建一个新的 Docker 容器，如何运行该容器，如何从现有的 Docker 容器中创建自己的 Docker 镜像等 Docker
  的一些基础知识、操作。
fromurl: https://www.ostechnix.com/getting-started-with-docker/
id: 10940
islctt: true
largepic: /data/attachment/album/201906/05/013725xggreagf67wrrige.png
permalink: /article-10940-1.html
pic: /data/attachment/album/201906/05/013725xggreagf67wrrige.png.thumb.jpg
related: []
reviewer: wxy
selector: lujun9972
summary: 该教程包含了如何创建一个新的 Docker 容器，如何运行该容器，如何从现有的 Docker 容器中创建自己的 Docker 镜像等 Docker
  的一些基础知识、操作。
tags:
- 容器
- Docker
thumb: false
title: Docker 入门指南
titlepic: true
translator: zhang5788
updated: '2019-06-05 01:37:00'
---
![Getting Started With Docker](/data/attachment/album/201906/05/013725xggreagf67wrrige.png)
在我们的上一个教程中，我们已经了解[如何在 Ubuntu 上安装 Docker](https://www.ostechnix.com/wp-content/uploads/2016/04/docker-basics-720x340.png)，和如何在 [CentOS 上安装 Docker](http://www.ostechnix.com/install-docker-ubuntu/)。今天，我们将会了解 Docker 的一些基础用法。该教程包含了如何创建一个新的 Docker 容器，如何运行该容器，如何从现有的 Docker 容器中创建自己的 Docker 镜像等 Docker 的一些基础知识、操作。所有步骤均在 Ubuntu 18.04 LTS server 版本下测试通过。
### 入门指南
在开始指南之前，不要混淆 Docker 镜像和 Docker 容器这两个概念。在之前的教程中，我就解释过，Docker 镜像是决定 Docker 容器行为的一个文件，Docker 容器则是 Docker 镜像的运行态或停止态。（LCTT 译注：在 macOS 下使用 Docker 终端时，不需要加 `sudo`）
#### 1、搜索 Docker 镜像
我们可以从 Docker 仓库中获取镜像，例如 [Docker hub](https://www.ostechnix.com/install-docker-centos/)，或者自己创建镜像。这里解释一下，Docker hub 是一个云服务器，用来提供给 Docker 的用户们创建、测试，和保存他们的镜像。
Docker hub 拥有成千上万个 Docker 镜像文件。你可以通过 `docker search`命令在这里搜索任何你想要的镜像。
例如，搜索一个基于 Ubuntu 的镜像文件，只需要运行：
```
$ sudo docker search ubuntu
```
示例输出：
![](/data/attachment/album/201906/05/013820ejue6nwxk3355j33.png)
搜索基于 CentOS 的镜像，运行：
```
$ sudo docker search centos
```
搜索 AWS 的镜像，运行：
```
$ sudo docker search aws
```
搜索 WordPress 的镜像：
```
$ sudo docker search wordpress
```
Docker hub 拥有几乎所有种类的镜像，包含操作系统、程序和其他任意的类型，这些你都能在 Docker hub 上找到已经构建完的镜像。如果你在搜索时，无法找到你想要的镜像文件，你也可以自己构建一个，将其发布出去，或者仅供你自己使用。
#### 2、下载 Docker 镜像
下载 Ubuntu 的镜像，你需要在终端运行以下命令：
```
$ sudo docker pull ubuntu
```
这条命令将会从 Docker hub 下载最近一个版本的 Ubuntu 镜像文件。
示例输出：
```
Using default tag: latest
latest: Pulling from library/ubuntu
6abc03819f3e: Pull complete 
05731e63f211: Pull complete 
0bd67c50d6be: Pull complete 
Digest: sha256:f08638ec7ddc90065187e7eabdfac3c96e5ff0f6b2f1762cf31a4f49b53000a5
Status: Downloaded newer image for ubuntu:latest
```
![下载 Docker 镜像](/data/attachment/album/201906/05/013744ic44yy3ytclulccw.png)
你也可以下载指定版本的 Ubuntu 镜像。运行以下命令：
```
$ docker pull ubuntu:18.04
```
Docker 允许在任意的宿主机操作系统下，下载任意的镜像文件，并运行。
例如，下载 CentOS 镜像：
```
$ sudo docker pull centos
```
所有下载的镜像文件，都被保存在 `/var/lib/docker` 文件夹下。（LCTT 译注：不同操作系统存放的文件夹并不是一致的，具体存放位置请在官方查询）
查看已经下载的镜像列表，可以使用以下命令：
```
$ sudo docker images
```
示例输出：
```
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
ubuntu              latest              7698f282e524        14 hours ago        69.9MB
centos              latest              9f38484d220f        2 months ago        202MB
hello-world         latest              fce289e99eb9        4 months ago        1.84kB
```
正如你看到的那样，我已经下载了三个镜像文件：`ubuntu`、`centos` 和 `hello-world`。
现在，让我们继续，来看一下如何运行我们刚刚下载的镜像。
#### 3、运行 Docker 镜像
运行一个容器有两种方法。我们可以使用标签或者是镜像 ID。标签指的是特定的镜像快照。镜像 ID 是指镜像的唯一标识。
正如上面结果中显示，`latest` 是所有镜像的一个标签。`7698f282e524` 是 Ubuntu Docker 镜像的镜像 ID，`9f38484d220f`是 CentOS 镜像的镜像 ID，`fce289e99eb9` 是 hello\_world 镜像的 镜像 ID。
下载完 Docker 镜像之后，你可以通过下面的命令来使用其标签来启动：
```
$ sudo docker run -t -i ubuntu:latest /bin/bash
```
在这条语句中：
* `-t`：在该容器中启动一个新的终端
* `-i`：通过容器中的标准输入流建立交互式连接
* `ubuntu:latest`：带有标签 `latest` 的 Ubuntu 容器
* `/bin/bash`：在新的容器中启动 BASH Shell
或者，你可以通过镜像 ID 来启动新的容器：
```
$ sudo docker run -t -i 7698f282e524 /bin/bash
```
在这条语句里：
* `7698f282e524` — 镜像 ID
在启动容器之后，将会自动进入容器的 shell 中（注意看命令行的提示符）。
![](/data/attachment/album/201906/05/013745wkzbtpbtk5pka6zt.png)
*Docker 容器的 Shell*
如果想要退回到宿主机的终端（在这个例子中，对我来说，就是退回到 18.04 LTS），并且不中断该容器的执行，你可以按下 `CTRL+P`，再按下 `CTRL+Q`。现在，你就安全的返回到了你的宿主机系统中。需要注意的是，Docker 容器仍然在后台运行，我们并没有中断它。
可以通过下面的命令来查看正在运行的容器：
```
$ sudo docker ps
```
示例输出：
```
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
32fc32ad0d54        ubuntu:latest       "/bin/bash"         7 minutes ago       Up 7 minutes                            modest_jones
```
![](/data/attachment/album/201906/05/013748k3em3ve3qd7inae3.png)
*列出正在运行的容器*
可以看到：
* `32fc32ad0d54` – 容器 ID
* `ubuntu:latest` – Docker 镜像
需要注意的是，容器 ID 和 Docker 的镜像 ID是不同的。
可以通过以下命令查看所有正在运行和停止运行的容器：
```
$ sudo docker ps -a
```
在宿主机中断容器的执行：
```
$ sudo docker stop 
```
例如：
```
$ sudo docker stop 32fc32ad0d54
```
如果想要进入正在运行的容器中，你只需要运行：
```
$ sudo docker attach 32fc32ad0d54
```
正如你看到的，`32fc32ad0d54` 是一个容器的 ID。当你在容器中想要退出时，只需要在容器内的终端中输入命令：
```
# exit
```
你可以使用这个命令查看后台正在运行的容器：
```
$ sudo docker ps
```
#### 4、构建自己的 Docker 镜像
Docker 不仅仅可以下载运行在线的容器，你也可以创建你的自己的容器。