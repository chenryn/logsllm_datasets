Download from finelybook PI:EMAIL
2
Microsoft Visual C# Step by Step
Ninth Edition
John Sharp
Download from finelybook PI:EMAIL
3
Microsoft Visual C# Step by Step, Ninth Edition
Published with the authorization of Microsoft Corporation by: Pearson
Education, Inc.
Copyright © 2018 by Pearson Education, Inc.
All rights reserved. This publication is protected by copyright, and
permission must be obtained from the publisher prior to any prohibited
reproduction, storage in a retrieval system, or transmission in any form or by
any means, electronic, mechanical, photocopying, recording, or likewise. For
information regarding permissions, request forms, and the appropriate
contacts within the Pearson Education Global Rights & Permissions
Department, please visit www.pearsoned.com/permissions/. No patent
liability is assumed with respect to the use of the information contained
herein. Although every precaution has been taken in the preparation of this
book, the publisher and author assume no responsibility for errors or
omissions. Nor is any liability assumed for damages resulting from the use of
the information contained herein.
ISBN-13: 978-1-5093-0776-0
ISBN-10: 1-5093-0776-1
Library of Congress Control Number: 2018944197
1 18
Trademarks
Microsoft and the trademarks listed at http://www.microsoft.com on the
“Trademarks” webpage are trademarks of the Microsoft group of companies.
All other marks are property of their respective owners.
Warning and Disclaimer
Every effort has been made to make this book as complete and as accurate as
possible, but no warranty or fitness is implied. The information provided is
on an “as is” basis. The author, the publisher, and Microsoft Corporation
Download from finelybook PI:EMAIL
4
shall have neither liability nor responsibility to any person or entity with
respect to any loss or damages arising from the information contained in this
book.
Special Sales
For information about buying this title in bulk quantities, or for special sales
opportunities (which may include electronic versions; custom cover designs;
and content particular to your business, training goals, marketing focus, or
branding interests), please contact our corporate sales department at
PI:EMAIL or (800) 382-3419.
For government sales inquiries, please contact
governmentsales@pearsoned.com.
For questions about sales outside the U.S., please contact
intlcs@pearson.com.
Editor-in-Chief
Brett Bartow
Acquisitions Editor
Trina MacDonald
Development Editor
Rick Kughen
Managing Editor
Sandra Schroeder
Senior Project Editor
Tracey Croom
Copy Editor
Christopher Morris
Indexer
Erika Millen
Proofreader
Download from finelybook PI:EMAIL
5
Jeanine Furino
Technical Editor
David Franson
Editorial Assistant
Courtney Martin
Cover Designer
Twist Creative, Seattle
Compositor
codemantra
Download from finelybook PI:EMAIL
6
Contents at a Glance
Acknowledgments
About the Author
Introduction
PART I           INTRODUCING MICROSOFT VISUAL C# AND
MICROSOFT VISUAL STUDIO 2017
CHAPTER 1   Welcome to C#
CHAPTER 2   Working with variables, operators, and expressions
CHAPTER 3   Writing methods and applying scope
CHAPTER 4   Using decision statements
CHAPTER 5   Using compound assignment and iteration statements
CHAPTER 6   Managing errors and exceptions
PART II         UNDERSTANDING THE C# OBJECT MODEL
CHAPTER 7   Creating and managing classes and objects
CHAPTER 8   Understanding values and references
CHAPTER 9   Creating value types with enumerations and structures
CHAPTER 10 Using arrays
CHAPTER 11 Understanding parameter arrays
CHAPTER 12 Working with inheritance
CHAPTER 13 Creating interfaces and defining abstract classes
CHAPTER 14 Using garbage collection and resource management
PART III        DEFINING EXTENSIBLE TYPES WITH C#
Download from finelybook PI:EMAIL
7
CHAPTER 15 Implementing properties to access fields
CHAPTER 16 Handling binary data and using indexers
CHAPTER 17 Introducing generics
CHAPTER 18 Using collections
CHAPTER 19 Enumerating collections
CHAPTER 20 Decoupling application logic and handling events
CHAPTER 21 Querying in-memory data by using query expressions
CHAPTER 22 Operator overloading
PART IV        BUILDING UNIVERSAL WINDOWS PLATFORM
APPLICATIONS WITH C#
CHAPTER 23 Improving throughput by using tasks
CHAPTER 24 Improving response time by performing asynchronous
operations
CHAPTER 25 Implementing the user interface for a Universal Windows
Platform app
CHAPTER 26 Displaying and searching for data in a Universal Windows
Platform app
CHAPTER 27 Accessing a remote database from a Universal Windows
Platform app
Index
Download from finelybook PI:EMAIL
8
Contents
Acknowledgments
About the Author
Introduction
PART I       INTRODUCING MICROSOFT VISUAL C# AND
MICROSOFT VISUAL STUDIO 2017
Chapter 1  Welcome to C#
Beginning programming with the Visual Studio 2017
environment
Writing your first program
Using namespaces
Creating a graphical application
Examining the Universal Windows Platform app
Adding code to the graphical application
Summary
Quick reference
Chapter 2  Working with variables, operators, and expressions
Understanding statements
Using identifiers
Identifying keywords
Using variables
Naming variables
Declaring variables
Specifying numeric values
Download from finelybook PI:EMAIL
9
Working with primitive data types
Unassigned local variables
Displaying primitive data type values
Using arithmetic operators
Operators and types
Examining arithmetic operators
Controlling precedence
Using associativity to evaluate expressions
Associativity and the assignment operator
Incrementing and decrementing variables
Prefix and postfix
Declaring implicitly typed local variables
Summary
Quick reference
Chapter 3  Writing methods and applying scope
Creating methods
Declaring a method
Returning data from a method
Using expression-bodied methods
Calling methods
Specifying the method call syntax
Returning multiple values from a method
Applying scope
Defining local scope
Defining class scope
Overloading methods
Writing methods
Refactoring code
Nesting methods
Download from finelybook PI:EMAIL
10
Using optional parameters and named arguments
Defining optional parameters
Passing named arguments
Resolving ambiguities with optional parameters and
named arguments
Summary
Quick reference
Chapter 4  Using decision statements
Declaring Boolean variables
Using Boolean operators
Understanding equality and relational operators
Understanding conditional logical operators
Short-circuiting
Summarizing operator precedence and associativity
Using if statements to make decisions
Understanding if statement syntax
Using blocks to group statements
Cascading if statements
Using switch statements
Understanding switch statement syntax
Following the switch statement rules
Summary
Quick reference
Chapter 5  Using compound assignment and iteration statements
Using compound assignment operators
Writing while statements
Writing for statements
Understanding for statement scope
Writing do statements
Download from finelybook PI:EMAIL
11
Summary
Quick reference
Chapter 6  Managing errors and exceptions
Coping with errors
Trying code and catching exceptions
Unhandled exceptions
Using multiple catch handlers
Catching multiple exceptions
Filtering exceptions
Propagating exceptions
Using checked and unchecked integer arithmetic
Writing checked statements
Writing checked expressions
Throwing exceptions
Using throw exceptions
Using a finally block
Summary
Quick reference
PART II     UNDERSTANDING THE C# OBJECT MODEL
Chapter 7  Creating and managing classes and objects
Understanding classification
The purpose of encapsulation
Defining and using a class
Controlling accessibility
Working with constructors
Overloading constructors
Deconstructing an object
Understanding static methods and data
Download from finelybook PI:EMAIL
12
Creating a shared field
Creating a static field by using the const keyword
Understanding static classes
Static using statements
Anonymous classes
Summary
Quick reference
Chapter 8  Understanding values and references
Copying value type variables and classes
Understanding null values and nullable types
The null-conditional operator
Using nullable types
Understanding the properties of nullable types
Using ref and out parameters
Creating ref parameters
Creating out parameters
How computer memory is organized
Using the stack and the heap
The System.Object class
Boxing
Unboxing
Casting data safely
The is operator
The as operator
The switch statement revisited
Summary
Quick reference
Chapter 9  Creating value types with enumerations and structures
Working with enumerations
Download from finelybook PI:EMAIL
13
Declaring an enumeration
Using an enumeration
Choosing enumeration literal values
Choosing an enumeration’s underlying type
Working with structures
Declaring a structure
Understanding differences between structures and classes
Declaring structure variables
Understanding structure initialization
Copying structure variables
Summary
Quick reference
Chapter 10 Using arrays
Declaring and creating an array
Declaring array variables
Creating an array instance
Populating and using an array
Creating an implicitly typed array
Accessing an individual array element
Iterating through an array
Passing arrays as parameters and return values for a
method
Copying arrays
Using multidimensional arrays
Creating jagged arrays
Accessing arrays that contain value types
Summary
Quick reference
Chapter 11 Understanding parameter arrays
Download from finelybook PI:EMAIL
14
Overloading—a recap
Using array arguments
Declaring a params array
Using params object[ ]
Using a params array
Comparing parameter arrays and optional parameters
Summary
Quick reference
Chapter 12 Working with inheritance
What is inheritance?
Using inheritance
The System.Object class revisited
Calling base-class constructors
Assigning classes
Declaring new methods
Declaring virtual methods
Declaring override methods
Understanding protected access
Creating extension methods
Summary
Quick reference
Chapter 13 Creating interfaces and defining abstract classes
Understanding interfaces
Defining an interface
Implementing an interface
Referencing a class through its interface
Working with multiple interfaces
Explicitly implementing an interface
Interface restrictions
Download from finelybook PI:EMAIL
15
Defining and using interfaces
Abstract classes
Abstract methods
Sealed classes
Sealed methods
Implementing and using an abstract class
Summary
Quick reference
Chapter 14 Using garbage collection and resource management
The life and times of an object
Writing destructors
Why use the garbage collector?
How does the garbage collector work?
Recommendations
Resource management
Disposal methods
Exception-safe disposal
The using statement and the IDisposable interface
Calling the Dispose method from a destructor
Implementing exception-safe disposal
Summary
Quick reference
PART III    DEFINING EXTENSIBLE TYPES WITH C#
Chapter 15 Implementing properties to access fields
Implementing encapsulation by using methods
What are properties?
Using properties
Download from finelybook PI:EMAIL
16
Read-only properties
Write-only properties
Property accessibility
Understanding the property restrictions
Declaring interface properties
Replacing methods with properties
Generating automatic properties
Initializing objects by using properties
Summary
Quick reference
Chapter 16 Handling binary data and using indexers
What is an indexer?
Storing binary values
Displaying binary values
Manipulating binary values
Solving the same problems using indexers
Understanding indexer accessors
Comparing indexers and arrays
Indexers in interfaces
Using indexers in a Windows application
Summary
Quick reference
Chapter 17 Introducing generics
The problem: Misusing with the object type
The generics solution
Generics vs. generalized classes
Generics and constraints
Creating a generic class
The theory of binary trees
Download from finelybook PI:EMAIL
17
Building a binary tree class by using generics
Creating a generic method
Defining a generic method to build a binary tree
Variance and generic interfaces
Covariant interfaces
Contravariant interfaces
Summary
Quick reference
Chapter 18 Using collections
What are collection classes?
The List collection class
The LinkedList collection class
The Queue collection class
The Stack collection class
The Dictionary collection class
The SortedList collection class
The HashSet collection class
Using collection initializers
The Find methods, predicates, and lambda expressions
The forms of lambda expressions
Comparing arrays and collections
Using collection classes to play cards
Summary
Quick reference
Chapter 19 Enumerating collections
Enumerating the elements in a collection
Manually implementing an enumerator
Implementing the IEnumerable interface
Download from finelybook PI:EMAIL
18
Implementing an enumerator by using an iterator
A simple iterator