     +- nvme0 fc traddr=nn-0x20000090fadd5979:pn-0x10000090fadd5979 host_traddr=nn-0x20000090fac7e1dd:pn-0x10000090fac7e1dd live
     +- nvme1 fc traddr=nn-0x20000090fadd597a:pn-0x10000090fadd597a host_traddr=nn-0x20000090fac7e1dd:pn-0x10000090fac7e1dd live
     +- nvme2 fc traddr=nn-0x20000090fadd5979:pn-0x10000090fadd5979 host_traddr=nn-0x20000090fac7e1de:pn-0x10000090fac7e1de live
     +- nvme3 fc traddr=nn-0x20000090fadd597a:pn-0x10000090fadd597a host_traddr=nn-0x20000090fac7e1de:pn-0x10000090fac7e1de live
    ```
    ``` screen
    # multipath -ll
    mpathae (uuid.8ef20f70-f7d3-4f67-8d84-1bb16b2bfe03) dm-36 NVME,Linux
    size=233G features='1 queue_if_no_path' hwhandler='0' wp=rw
    `-+- policy='service-time 0' prio=50 status=active
      |- 0:1:1:1  nvme0n1 259:0   active ready running
      |- 1:2:1:1  nvme1n1 259:2   active ready running
      |- 2:3:1:1  nvme2n1 259:4   active ready running
      `- 3:4:1:1  nvme3n1 259:6   active ready running
    mpathaf (uuid.44c782b4-4e72-4d9e-bc39-c7be0a409f22) dm-39 NVME,Linux
    size=233G features='1 queue_if_no_path' hwhandler='0' wp=rw
    `-+- policy='service-time 0' prio=50 status=active
      |- 0:1:2:2  nvme0n2 259:1   active ready running
      |- 1:2:2:2  nvme1n2 259:3   active ready running
      |- 2:3:2:2  nvme2n2 259:5   active ready running
      `- 3:4:2:2  nvme3n2 259:7   active ready running
    ```
:::
::: itemizedlist
**其它资源**
-   [有关编辑内核选项的更多信息，请参阅配置内核命令行参数](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/managing_monitoring_and_updating_the_kernel/configuring-kernel-command-line-parameters_managing-monitoring-and-updating-the-kernel){.link}。
-   有关配置 DM 多路径的详情请参考 [第 3 章 *设置 DM
    多路径*](#assembly_setting-up-dm-multipath-configuring-device-mapper-multipath.html "第 3 章 设置 DM 多路径"){.xref}。
:::
:::
:::
[]{#assembly_modifying-dm-multipath-configuration-file_configuring-device-mapper-multipath.html}
::: chapter
::: titlepage
# []{#assembly_modifying-dm-multipath-configuration-file_configuring-device-mapper-multipath.html#assembly_modifying-dm-multipath-configuration-file_configuring-device-mapper-multipath}第 5 章 修改 DM-Multipath 配置文件 {.title}
:::
默认情况下，DM 多路径会为多数常见的多路径用例提供配置值。另外，DM
多路径包括对自己支持 DM 多路径的最常见存储阵列的支持。您可以通过编辑
`/etc/multipath.conf`{.literal} 配置文件来为 DM
多路径覆盖默认配置值。如果需要，您还可以在配置文件中添加默认不支持的存储阵列。
有关默认配置值（包括支持的设备）的信息，请运行以下命令之一：
``` screen
# multipathd show config
# multipath -t
```
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
您可以在 `initramfs`{.literal} 文件系统中运行设置的多路径。如果您在
`initramfs`{.literal}
文件系统中运行多路径，并且对多路径配置文件进行任何更改，您必须重建
`initramfs`{.literal} 文件系统才能使更改生效。
:::
在多路径配置文件中，您只需要指定配置所需的部分，或者您想要从默认值中更改的部分。如果文件中有一些部分与您的环境无关，或者您不需要覆盖默认值，则可以将它们注释掉，因为它们已在初始文件中被注释掉。
配置文件允许正则表达式描述语法。
::: section
::: titlepage
# []{#assembly_modifying-dm-multipath-configuration-file_configuring-device-mapper-multipath.html#ref_multipath-configfile-overview_assembly_modifying-dm-multipath-configuration-file}配置文件概述 {.title}
:::
多路径配置文件可分为以下几个部分：
::: variablelist
[黑名单]{.term}
:   不视为多路径的特定设备列表。
[blacklist_exceptions]{.term}
:   根据 `blacklist`{.literal} 部分的参数忽略的多路径候选项列表。
[默认值]{.term}
:   DM 多路径的常规默认设置。
[多路径]{.term}
:   单个多路径设备的特征设置。这些值覆盖了配置文件的
    `overrides`{.literal}、`设备和`{.literal} `defaults`{.literal}
    部分中指定的内容。
[devices]{.term}
:   单个存储控制器的设置。这些值覆盖了在 配置文件的 `defaults`{.literal}
    部分中指定的值。如果您使用默认不支持的存储阵列，您可能需要为您的阵列创建
    `设备`{.literal} 子部分。
[overrides]{.term}
:   适用于所有设备的设置。这些值覆盖了在配置文件的 `devices`{.literal}
    和 `defaults`{.literal} 部分中指定的值。
:::
当系统确定多路径设备的属性时，首先检查多路径设置，然后检查设备设置，然后为多路径系统默认设置。
:::
::: section
::: titlepage
# []{#assembly_modifying-dm-multipath-configuration-file_configuring-device-mapper-multipath.html#dm-multipath-overrides-of-the-device-timeout_assembly_modifying-dm-multipath-configuration-file}DM 多路径覆盖设备超时 {.title}
:::
restore `_tmo`{.literal} `sysfs`{.literal} 选项控制特定 iSCSI
设备的超时时间。以下选项全局覆盖 `restore_tmo`{.literal} 值：
::: itemizedlist
-   `replacement_timeout`{.literal} 配置选项全局覆盖所有 iSCSI 设备的
    restore `_tmo`{.literal} 值。
-   对于由 DM 多路径管理的所有 iSCSI 设备，DM 多路径中的
    `fast_io_fail_tmo`{.literal} 选项全局覆盖 `restore_tmo`{.literal}
    值。
    DM 多路径中的 `fast_io_fail_tmo`{.literal}
    选项也会覆盖光纤通道设备中的 `fast_io_fail_tmo`{.literal} 选项。
:::
DM 多路径 `fast_io_fail_tmo`{.literal} 选项优先于
`replacement_timeout`{.literal}。红帽不建议在由 DM
多路径管理的设备中使用 `replacement _timeout`{.literal} 覆盖
restore_tmo``{=html}，因为在 `multipathd`{.literal}
服务重新加载时 DM 多路径总是重置 restore `_tmo`{.literal}。
:::
::: section
::: titlepage
# []{#assembly_modifying-dm-multipath-configuration-file_configuring-device-mapper-multipath.html#assembly_preventing-devices-from-multipathing_assembly_modifying-dm-multipath-configuration-file}防止设备多路径[]{#assembly_modifying-dm-multipath-configuration-file_configuring-device-mapper-multipath.html#proc_blacklisting-devices-from-multipathing_configuring-device-mapper-multipath} {.title}
:::
您可以在配置多路径设备时将 DM 多路径配置为忽略所选设备。DM
多路径不会将这些忽略的设备分组到多路径设备中。
::: section
::: titlepage
## []{#assembly_modifying-dm-multipath-configuration-file_configuring-device-mapper-multipath.html#con_conditions-when-dm-multipath-creates-a-multipath-device-for-a-path_assembly_preventing-devices-from-multipathing}当 DM 多路径为路径创建多路径设备时的条件 {.title}
:::
DM
多路径有一组默认规则来确定是为路径创建多路径设备还是忽略该路径。您可以配置行为。
如果 `find_multipaths`{.literal} 配置参数设置为
`off`{.literal}，多路径总是会尝试为每个未明确禁用的路径创建多路径设备。如果将
`find_multipaths`{.literal} 配置参数设置为
`on`{.literal}，则多路径只有在满足以下条件之一时才创建设备：
::: itemizedlist
-   至少有两个具有相同 WWID 的路径，它们没有禁用。
-   您可以通过使用 `multipath`{.literal}
    命令指定设备来手动强制创建设备。
-   路径与之前创建的多路径设备具有相同的
    WWID（即使当前还不存在该多路径设备）。每当创建了多路径设备时，多路径会记住设备的
    WWID，以便在看到含有该 WWID
    的路径时，会自动再次创建设备。这可让您让多路径自动选择正确的路径进入多路径设备，而无需在其他设备上禁用多路径。
    如果您之前使用 `find_multipaths`{.literal}
    参数创建了多路径设备，然后在以后将该参数设置为
    `on`{.literal}，您可能需要删除您不想作为多路径设备从
    `/etc/multipath/wwids`{.literal} 文件创建的任何设备的
    WWID。下面显示了 `/etc/multipath/wwids`{.literal} 文件示例。WWID
    包含在斜杠(`/`{.literal})中：
    ``` screen
    # Multipath wwids, Version : 1.0
    # NOTE: This file is automatically maintained by multipath and multipathd.
    # You should not need to edit this file in normal circumstances.
    #
    # Valid WWIDs:
    /3600d0230000000000e13955cc3757802/
    /3600d0230000000000e13955cc3757801/
    /3600d0230000000000e13955cc3757800/
    /3600d02300069c9ce09d41c31f29d4c00/
    /SWINSYS  SF2372         0E13955CC3757802/
    /3600d0230000000000e13955cc3757803/
    ```
:::
除了启用 `和关闭`{.literal} ``{.literal} 外，您还可以将
`find_multipaths`{.literal} 设置为以下值：
::: variablelist
[`strict`{.literal}]{.term}
:   多路径不接受之前没有多路径的路径，因此不在
    `/etc/multipath/wwids`{.literal} 文件中。
[`smart`{.literal}]{.term}
:   多路径总是会在 `udev`{.literal} 中马上接受非禁用设备，但如果
    `multipathd`{.literal} 不会在使用
    `find_multipaths_timeout`{.literal}
    参数设置的超时内创建设备，它会在设备上释放其声明。
:::
`find_multipaths 的`{.literal} 内置默认值为
`off`{.literal}。但是，`mpath conf 创建的默认 multipath.`{.literal}
conf``{=html} 文件会将 `find_multipaths 的`{.literal} 值设置为
`on`{.literal}。
将 `find_multipaths`{.literal} 参数设置为
`on 时`{.literal}，您只需要在具有多个路径的设备上禁用多路径，而您不希望多路径。因此，通常不需要在设备上禁用多路径。
::: itemizedlist
**其它资源**
-   有关 `find_multipaths_timeout`{.literal} 参数或您可以为
    `find_multipaths`{.literal} 设置的值的详情，请查看
    `multipath.conf(5)`{.literal} man page。
:::
:::
::: section
::: titlepage
## []{#assembly_modifying-dm-multipath-configuration-file_configuring-device-mapper-multipath.html#con_criteria-for-disabling-multipathing-on-certain-devices_assembly_preventing-devices-from-multipathing}在特定设备中禁用多路径的标准 {.title}
:::
您可以根据以下任一条件禁用设备的多路径：
::: itemizedlist
-   WWID
-   设备名称
-   设备类型
-   属性
-   协议
:::
对于每个设备，DM 多路径会按照以下顺序评估这些条件：
::: orderedlist
1.  `属性`{.literal}
2.  `devnode`{.literal}
3.  `device`{.literal}
4.  `协议`{.literal}
5.  `wwid`{.literal}
:::
如果某个设备被任何条件发现禁用，DM 多路径会将其排除为
`多路径处理，`{.literal}
而不会评估后续标准。对于每个条件，异常列表的优先级高于禁用设备列表（如果设备同时匹配）。
::: itemizedlist
**其它资源**
-   默认情况下，禁用各种设备类型，即使您注释掉了配置文件的初始
    `黑名单`{.literal} 部分。如需更多信息，请参阅
    ["为禁用多路径的设备添加例外"一节](#assembly_modifying-dm-multipath-configuration-file_configuring-device-mapper-multipath.html#proc_adding-exceptions-for-devices-with-disabled-multipathing_assembly_preventing-devices-from-multipathing "为禁用多路径的设备添加例外"){.xref}。
:::
:::
::: section
::: titlepage
## []{#assembly_modifying-dm-multipath-configuration-file_configuring-device-mapper-multipath.html#proc_disabling-multipathing-by-wwid_assembly_preventing-devices-from-multipathing}使用 WWID 禁用多路径 {.title}
:::
您可以通过其全球识别(WWID)在单个设备上禁用多路径。
::: itemizedlist
**流程**
-   使用 `wwid`{.literal} 条目禁用 `/etc/multipath.conf`{.literal}
    配置文件中的设备。
    以下示例显示了 DM 多路径配置文件中禁用 WWID 为
    `26353900f02796769`{.literal} 的设备的行：
    ``` screen
    blacklist {
           wwid 26353900f02796769
    }
    ```
:::
:::
::: section
::: titlepage
## []{#assembly_modifying-dm-multipath-configuration-file_configuring-device-mapper-multipath.html#proc_disabling-multipathing-by-device-name_assembly_preventing-devices-from-multipathing}使用设备名称禁用多路径 {.title}
:::
您可以根据设备名称禁用设备类型的多路径，以便 DM
多路径不会将其分组到多路径设备中。
::: itemizedlist
**流程**
-   使用 `devnode`{.literal} 条目禁用 `/etc/multipath.conf`{.literal}
    配置文件中的设备。
    以下示例显示 DM 多路径配置文件中禁用所有 SCSI
    设备的行，因为它禁用了所有 `sd*`{.literal} 设备：
    ``` screen
    blacklist {
           devnode "^sd[a-z]"
    }
    ```
:::