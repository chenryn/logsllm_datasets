命令名 -h
```
它可以让你快速了解命令的语法、常用选项及其含义，在某些情况下还有命令的例子。
![cat 命令的帮助页](/data/attachment/album/202112/09/075523e6zih8m6u68f6eti.png)
如果你需要更多的帮助，你可以参考 [手册页](https://itsfoss.com/linux-man-page-guide/)，即命令的手册。
```
man 命令名
```
它涉及到所有的细节，阅读和理解起来可能会让人难以承受。另外，你也可以在网上搜索 “Linux 中 xyz 命令的例子”。
### 9、Linux 是区分大小写的
Linux 是区分大小写的。你在终端中输入的所有东西都是区分大小写的。如果你不考虑这一点，你会经常遇到 “[bash: command not found](https://itsfoss.com/bash-command-not-found/)” 或 “file not found” 的错误。
在主目录中，你的所有文件夹名称以大写字母开头的。如果你要切换到 `Documents` 目录，你必须把第一个字母保持为 `D`，而不是 `d`。
![Linux 是区分大小写的](/data/attachment/album/202112/09/075523kgmcdr6hzr5rhebr.png)
你可以有两个分别名为 `file.txt` 和 `File.txt` 的文件，因为对于 Linux 来说，`file` 和 `File` 是不一样的。
### 10、运行 Shell 脚本
你可以通过指定 Shell 来 [运行一个 Shell 脚本](https://itsfoss.com/run-shell-script-linux/)：
```
bash script.sh
```
或者你可以像这样执行 Shell 脚本。
```
./script.sh
```
第二种方法只有在文件有执行权限时才会起作用。更多关于 [Linux 文件权限参考这里](https://linuxhandbook.com/linux-file-permissions/)。
![运行bash脚本](/data/attachment/album/202112/09/075523jr8gtoawxgnrrome.png)
### 11、使用制表符补完而不是全部输入
Ubuntu 的终端已经预先配置了制表符补完功能。这意味着如果你开始在终端上输入，然后点击 `tab` ，它会尝试自动完成它，或者在有多个可能的匹配时提供选项。
它既适用于命令，也适用于参数和文件名。
![Tab 完成示例](/data/attachment/album/202112/09/075523amoaddkdskm6tiea.png)
这可以节省大量的时间，因为你不需要把所有的东西都写完整。
### 12、Ctrl+C 和 Ctrl+V 不是用来在终端复制粘贴的。
`Ctrl+C`、`Ctrl+V` 可能是复制粘贴的“通用”键盘快捷键，但它在 Linux 终端中不行。
Linux 继承了 UNIX 的很多东西，在 UNIX 中，`Ctrl+C` 被用来停止一个正在运行的进程。
由于 `Ctrl+C` 已经被用于停止一个命令或进程，所以它不能再用于复制粘贴。
### 13、你当然可以在终端复制粘贴
别担心。你仍然可以 [在终端中复制粘贴](https://itsfoss.com/copy-paste-linux-terminal/)。同样，复制-粘贴的键盘快捷键没有固定的规则，因为它取决于你使用的终端程序或你的配置。
在 Ubuntu 终端中，复制的默认键盘快捷键是 `Ctrl+Shift+C`，粘贴则是 `Ctrl+Shift+V`。
你可以使用 `Ctrl+C` 从终端外（如网页浏览器）复制文本和命令，并使用 `Ctrl+Shift+V` 将其粘贴。同样，你可以高亮显示文本，用 `Ctrl+Shift+C` 从终端复制文本，用 `Ctrl+V` 粘贴到编辑器或其他应用程序。
### 14、避免在终端中使用 Ctrl+S
另一个初学者常犯的错误是使用“通用”的 `Ctrl+S` 键盘快捷键来保存。如果你在终端中使用 `Ctrl+S`，你的终端会被“冻结”。
这来自于传统的计算机，在那里没有向上滚动的滚动条。因此，如果有大量的输出行，`Ctrl+S` 被用来停止屏幕，以便可以阅读屏幕上的文字。
你可以用 `Ctrl+Q` 来解除终端的冻结。但还是要避免在终端中使用 `Ctrl+S`。
### 15、注意命令例子中的 $ 和 <>
如果你参考一些在线教程或文档，你会看到一些命令例子中的文本在 `<>` 内。这表明你需要用一个合适的值来替换与 `` 一起的内容。
例如，如果你看到一个这样的命令：
```
grep -i  
```
你应该把 `` 和 `` 换成各自的实际值。（LCTT 译注：不要输入 ``）
这表明该命令只是一个例子，你必须用实际值来完成它。
这里需要注意的另一件事是，有些教程显示的命令例子是以 `$` 开头的，比如这样：
![命令开头的美元符号](/data/attachment/album/202112/09/075524mbhgjg5cgtebe8bj.png)
这是表明它们是命令（而不是命令输出）的一种方式。但是，许多新的 Linux 用户把前面的 `$` 和实际的命令一起复制，当他们把它粘贴到终端时，显然会出现错误。
所以，当你复制一些命令时，如果开头有 `$`，就不要复制它。你也应该避免复制随机网站的随机命令，特别是当你不了解它的作用时。
既然你正在阅读关于复制命令的文章，当你看到多行的命令在一起时，你应该一次复制一行，然后逐一运行。
![避免将多个命令复制在一起](/data/attachment/album/202112/09/075524lsrqtheestfr0tke.png)
下一节将告诉你如何一次性运行多个命令。
### 16、你可以同时运行多个命令
你可以 [一次运行多个命令](https://itsfoss.com/run-multiple-commands-linux/) 而不需要用户干预。作为 Ubuntu 用户，你可能已经在这个命令的形式中看到了它：
```
sudo apt update && sudo apt upgrade
```
在终端中，有三种不同的方法来组合命令：
| `;` | `命令 1 ; 命令 2` | 先运行命令 1，再运行命令 2 |
| --- | --- | --- |
| `&&` | `命令 1 && 命令 2` | 只有命令 1 成功结束才运行命令 2 |
| `||` | `命令 1 || 命令 2` | 只有命令 1 失败时才运行命令 2 |
### 17、停止一个正在运行的 Linux 命令
如果一个 Linux 命令在前台运行，也就是说，它正在显示输出，或者说你不能输入任何其他命令，你可以用 `Ctrl+C` 键停止它。
我以前讨论过它。它来自于 UNIX 的传统计算时代。
所以，下次你看到像 `top` 或 `ping` 这样的命令在持续运行，而你想恢复终端控制，只需使用这两个键：`Ctrl+C`。
![在 Linux 中用 Ctrl+C 停止一个正在运行的程序](/data/attachment/album/202112/09/075524v9g3fvtfav1l8p5p.png)
### 18、清除终端
当我发现我的屏幕被不同类型的输出弄得太杂乱时，我会在开始其他工作之前清除终端屏幕。这只是一种习惯，但我发现它很有帮助。
要清除终端，请使用以下命令：
```
clear
```
你也可以使用 [终端快捷键](https://linuxhandbook.com/linux-shortcuts/) `Ctrl+L`。
### 19、退出终端
在少数情况下，我看到有人关闭终端程序来退出会话。你可以这样做，但退出终端的正确方法是使用退出命令：
```
exit
```
你也可以使用 Ubuntu 终端的键盘快捷键 `Ctrl+D`。
### 总结
即使你对终端完全陌生，你也可以在终端中做很多额外的事情。你可以：
* [运行有趣的 Linux 命令](https://itsfoss.com/funny-linux-commands/)
* [在终端中浏览互联网](https://itsfoss.com/terminal-web-browsers/)
* [在终端中玩游戏](https://itsfoss.com/best-command-line-games-linux/)
如果你想了解更多，[看看这些 Linux 命令技巧，可以像专家一样使用终端](https://itsfoss.com/linux-command-tricks/)。
说实话，要谈的东西太多了。很难确定哪些应该被认为是绝对的基础知识，哪些应该被排除在外。例如，我想避免包括关于路径的信息，因为它需要详细的解释，但在一个地方讲得太详细可能会让人不知所措。
我已经过了在终端中的小东西曾经让我困惑的阶段。如果你是 Linux 终端的新手，或者你还记得你最初使用 Linux 时的挣扎，请随时提出建议对列表进行补充。我可能会根据你的意见更新这个列表。
如果你学到了新的东西，请在评论中提及。我想看看这篇文章是否值得一读 ?
---
via: 
作者：[Abhishek Prakash](https://itsfoss.com/author/abhishek/) 选题：[lujun9972](https://github.com/lujun9972) 译者：[wxy](https://github.com/wxy) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出