//min frequency + sweet spot-min frequency
the previous phase is specified as a requirement on the CPU. 11
frequency#N1 = 1200 + 1000b#rdx#eff#N1
Thesecondmodespecifiesthehighestpossiblefrequencyasa 12
+ 2000b#rdx#fast#N1;
13
requirement.In addition,the runtimeand energyconsumption
14
on the CPU are specified as functions depending on the list time#N2 = 1120b#rdx#eff#N2
15
size. They are determined analogously to the sweet spot func- 16 + 940b#rdx#fast#N2;
energy#N2 = 100 + 420b#rdx#eff#N2
tions in the first phase. All modes specify which guarantees 17
+ 530b#rdx#fast#N2;
are given if a set of requirements is fulfilled. In the example 18
frequency#N2 = 1200 + 1000b#rdx#eff#N2
19
contract,aspecificmaximumresponsetime,whichisequalto + 2000b#rdx#fast#N2;
20
the time required on the CPU and a small overhead (x1 and
21
x2, respectively), is guaranteed. 22 bin b#rdx#eff#N1, b#rdx#fast#N1,
b#rdx#eff#N2, b#rdx#fast#N2;
Contracts, like the discussed example, can then be used 23
to generate problem formulations for off-the-shelf constraint Listing2. ExampleofanIntegerLinearProgramforself-adaptivesoftware.
satisfaction and optimization problem solvers.
e(intercept) a×freq b×freq2 c×freq3 d×freq4 f×listsize adj.r.squared
98.558887 -17.000578 24.473429 1.497380 5.577048 1.00E+07(fixed) 0.939935
214.645925 -30.237388 45.255654 2.977515 10.231982 2.00E+07(fixed) 0.9699779
344.115647 -43.960454 78.485585 1.588671 15.814538 3.00E+07(fixed) 0.9519011
450.068206 -49.751193 103.690842 0.926805 21.180903 4.00E+07(fixed) 0.9654956
564.112603 -51.629321 131.365326 6.015857 26.856475 5.00E+07(fixed) 0.9554555
-15.65866 -86.12392 171.4039 5.816562 35.62546 1.16653E-05 0.994221
TABLEIV
FOURTHGRADEPOLYNOMIALFUNCTIONSFORRADIXSORTON10TO50MILLIONELEMENTS.
tionproblemhavetheformb#algorithm#variant#server, VII. RELATEDWORK
whereby the prefixing b denotes the Boolean type of the
variable,whichisexplicitlystatedasconstraintonlines22/23, The closest existing research to our work was conducted
and algorithm, variant and server, delimited by pounds by Livingston et al. [3]. Their work classifies software appli-
(#), denote the respective algorithm, variant (energy-efficient cations as memory- and compute-bound. For memory-bound
or fast) and server. The meaning of b#rdx#eff#N1=1 is applications, they demonstrate that a higher energy-efficiency
the decision to use radix sort in its energy-efficient variant on is achieved at lower CPU frequencies since memory behaves
server N1. Thus, each decision is represented by a variable. as a bottleneck. For compute-bound applications, a higher
energy-efficiency is achieved at higher CPU frequencies since
Each server is characterized by the variables time, energy
finishing work quickly is the best approach for efficiency. For
and frequency, which include the name of the server sepa-
algorithms which cannot be purely classified as memory- or
ratedbyapound.Theydenotethetimerequiredon,theenergy
compute-bound, they propose to use sweet spot frequencies, a
spentbyandtheCPUfrequencyusedfortherespectiveserver.
benchmarkedoptimalfrequencybetweenthelowestandhigh-
TheobjectivefunctionoftheILPisalinearcombinationof estfrequency.OurworkconfirmsthefindingsbyLivingstonet
theproblem’svariables.Intheexample,theobjectivefunction al. also in newer computer architectures and makes a detailed
specifiesthegoaltominimizetheenergyconsumptionofboth analysis of sweet spot frequencies.
servers for user requests to sort n elements.
Other related work can be classified taking into account
Then, two types of constraints are generated for a specific the level at which energy-efficiency analysis was conducted.
request (e.g., the invocation of sort for a list of 30 million We use the terms macro-, meso-, and micro-level to express
elementsasintheexampleabove).First,astructuralconstraint studiesconductedwithlargesoftwareapplications,algorithms,
to ensure the selection of at least one variant is generated andinstructions.Atthemacro-level,researchers(cf.[16])have
(cf. line 3 and 4). Second, for each server variable (time, looked into the energy-efficiency of large management infor-
energy and frequency) a constraint, reflecting the impact of mationsystemssuchasERP,CRM,anddatabases.Whileitis
a decision on them is generated. For example, the constraint importanttolookintotheefficiencyofsuchsystemstoidentify
in line 6/7 specifies that deciding for radix sort in efficient fields of improvements, the approach taken does not allow
mode on server N1 will require 1620ms, whereas using fast to gather insights on how software could be re-engineered
mode will require only 1164ms. For energy consumption, differently to obtain energy reductions. At the meso-level,
the idle consumption has to be considered in addition. The Bunse et al. [20] evaluate various sorting algorithms in bat-
constraintonline9/10reflectsanidleconsumptionof97Jand tery powered mobile communication using smartphones. The
the respective consumption of radix sort in the most efficient results indicate that insertion sort is most efficient. Rivoire
and fastest mode. Considering the idle consumption is impor-
tant if the servers are always powered. The frequency con-
straint on line 12/13 reflects the minimum possible frequency
(1200MHz),thesweetspotfrequency(1000+1200MHz),and
the maximum possible frequency (1000+2000MHz). 5.3
To solve this optimization problem, standard solvers like 0.3
LP Solve [19] can be applied. The time required to solve 5.2
]sm[
problems as shown in the example, depends on the number emiT 0.2
of modes (i.e., execution variants) for which we used m=2 srevreS
gnivloS 5.1
representing the most efficient and the fastest variant, the
10 0.1 fo
number of algorithms for the same task A (e.g., different sort 8 rebmuN
6
algorithms) and the number of servers N. Fig. 8 shows the 4 5.0
2
time required to solve ILPs with A=[1..10] algorithms with 0 0.0
0 2 4 6 8 10
2modeseachonN =[2..10]servers.Ascanbeseen,thetime
Number of Algorithms
toderivethedecisionisnegligible.Ittook≈3.1mstoidentify
which algorithm out of 10 to run on which of 10 servers. Fig.8. TimeforadaptationdecisionmakingusingLPSolve.
et al. [21] investigate system-level benchmarks for sorting. [5] L.Brochard,R.Panda,andF.Thomas,“Powerconsumptionofclusters:
Nonetheless, the work does not explore the effect of CPU Control and Optimization,” Industry Talk at Fourth International Con-
ference on Energy-Aware High Performance Computing (EnA-HPC),
frequency on software energy-efficiency. At the micro-level,
September2013.
Ong and Yan [22] use an abstract machine to study the [6] D. Versick, I. Waßmann, and D. Tavangarian, “Power consumption
energy consumption of search and sorting algorithms. The estimation of CPU and peripheral components in virtual machines,”
ACM SIGAPP Applied Computing Review, vol. 13, no. 3, pp. 17–25,
energy requirement of each instruction was estimated and,
September2013.
e.g., an ALU access consumes 8×10−12 joule per 32 bits. [7] X.Liu,P.Shenoy,andM.Corner,“Chameleon:applicationlevelpower
Their findings indicate that the energy consumption can differ management with performance isolation,” in Proceedings of the 13th
AnnualACMInternationalConferenceonMultimedia(MULTIMEDIA),
in orders of magnitude between algorithms, and, also, that
November2005,Singapore.
faster algorithms can sometimes consume more energy than [8] M.Y.Lim,V.W.Freeh,andD.K.Lowenthal,“Adaptive,transparentfre-
slower ones. In [23], the authors propose a first-order, linear quencyandvoltagescalingofcommunicationphasesinMPIprograms,”
in Proceedings of the 19th ACM/IEEE Conference on Supercomputing
power estimation model that uses performance counters to
(SC),November2006,p.Article107,Tampa,Florida,USA.
estimate CPU and memory consumption. The accuracy of the [9] C.Clark,K.Fraser,S.Hand,J.G.Hansen,E.Jul,C.Limpach,I.Pratt,
modelestimatesconsumptionwithin4%ofthemeasuredCPU and A. Warfield, “Live migration of virtual machines,” in Proceedings
of the 2Nd Conference on Symposium on Networked Systems Design
consumption.
& Implementation - Volume 2, ser. NSDI’05. Berkeley, CA,
Related to future work, Beloglazov et al. [24] observe that USA: USENIX Association, 2005, pp. 273–286. [Online]. Available:
modern large servers currently use 32 or 64 DIMMs that lead http://dl.acm.org/citation.cfm?id=1251203.1251223
[10] M.Cinque,D.Cotroneo,F.Frattini,andS.Russo,“Cost-BenefitAnal-
to power consumption by memory higher than by CPUs. This
ysisofVirtualizingBatchSystems:Performance-Energy-Dependability
suggeststhatthestudyanddesignofenergy-efficientsoftware Trade-offs,”in2013IEEE/ACM6thInternationalConferenceonUtility
should account for CPU and memory efficiency. and Cloud Computing, December 2013, pp. 264–268, Dresden, Ger-
many.
[11] D.Hackenberg,T.Ilsche,R.Schone,D.Molka,M.Schmidt,andW.E.
VIII. CONCLUSION Nagel, “Power measurement techniques on standard compute nodes:
A quantitative comparison,” 2013 IEEE International Symposium on
Overtheyears,hardwareenergy-efficiencyhassignificantly Performance Analysis of Systems and Software (ISPASS), vol. 0, pp.
improved. Nevertheless, research on software efficiency has 194–204,2013.
[12] R. Schöne, D. Hackenberg, and D. Molka, “Memory performance
not received the same attention. Thus, in this paper we
at reduced cpu clock speeds: an analysis of current x86_64
study mechanisms to make software more energy-efficient. processors,” in Proceedings of the 2012 USENIX conference on
Our findings indicate that the existence of sweet spots can Power-Aware Computing and Systems, ser. HotPower’12. Berkeley,
CA, USA: USENIX Association, 2012, pp. 9–9. [Online]. Available:
be explored to realize software energy-efficiency in at least
http://dl.acm.org/citation.cfm?id=2387869.2387878
threefields:1)byadaptingtheCPUfrequencytosweetspots, [13] M.P.I.Forum.(2012,Sep.)Mpi:Amessage-passinginterfacestandard
the maximum power of the upper limit used by a computing -version3.0.http://www.mpi-forum.org/docs/mpi-3.0/mpi30-report.pdf.
[14] D. E. Knuth, The Art of Computer Programming. Addison-Wesley,
system can be established; 2) the consideration of sweet spots
1998,vol.3-SortingandSearching,2ndEdition.
leads to effective energy gains which reached up to 25% for [15] ISO/IEC,“ISO/IEC14882:2011:Programminglanguages–C++,”Tech.
the investigated sorting algorithms; and 3) the existence of Rep.,1998.
[16] E. Capra, C. Francalanci, and S. Slaughter, “Measuring application
sweet spots enables the design of new and more efficient
softwareenergyefficiency,”ITProfessional,vol.14,no.2,pp.54–61,
self-adaptive software architectures. Our results are important March2012.
andrelevantsinceexperimentswereconductedusingthemost [17] ISO/IEC,“ISO/IEC25010:Systemsandsoftwareengineering-Systems
andsoftwareQualityRequirementsandEvaluation(SQuaRE)-System
advanced hardware measuring devices.
andsoftwarequalitymodels,”Tech.Rep.,2010.
[18] S.Götz,C.Wilke,S.Richly,andU.Aßmann,“Approximatingquality
ACKNOWLEDGEMENTS contracts for energy auto-tuning software,” in Proceedings of First
International Workshop on Green and Sustainable Software (GREENS
This work has been partially funded by the German Re- 2012),2012.
searchFoundation(DFG)underprojectagreementsSFB912/1 [19] K. Eikland and P. Notebaert, “LP Solve 5.5 reference guide,”
http://lpsolve.sourceforge.net/5.5/(accesson26.11.2012).
2011 and SCHI 402/11-1.
[20] C.Bunse,H.Höpfner,S.Roychoudhury,andE.Mansour,“Choosingthe
bestsortingalgorithmforoptimalenergyconsumption,”inProceedings
REFERENCES of the International Conference on Software and Data Technologies
(ICSOFT),2009,pp.199–206.
[1] J. Koomey., “Growth in Data center electricity use 2005 to 2010,” [21] S.Rivoire,M.A.Shah,P.Ranganathan,andC.Kozyrakis,“Joulesort:
Analytics Press, 2011. [Online]. Available: http://www.analyticspress. A balanced energy-efficiency benchmark,” in Proceedings of the ACM
com/datacenters.html SIGMODIntl.ConferenceonManagementofData(SIGMOD),2007.
[2] L.BarrosoandU.Holzle,“Thecaseforenergy-proportionalcomputing,” [22] P.-W. Ong and R.-H. Yan, “Power-conscious software design-a frame-
Computer,vol.40,no.12,pp.33–37,Dec2007. work for modeling software on hardware,” in Low Power Electronics,
[3] K. Livingston, N. Triquenaux, T. Fighiera, J. Beyler, and W. Jalby, 1994.DigestofTechnicalPapers.,IEEESymposium,Oct1994,pp.36–
“Computerusingtoomuchpower?giveitarest(runtimeenergysaving 37.
technology),”ComputerScience-ResearchandDevelopment,pp.1–8, [23] G.ContrerasandM.Martonosi,“Powerpredictionforintelxscalereg;
2012.[Online].Available:http://dx.doi.org/10.1007/s00450-012-0226-0 processors using performance monitoring unit events,” in Low Power
Electronics and Design, 2005. ISLPED ’05. Proceedings of the 2005
[4] K.Choi,R.Soma,andM.Pedram,“Fine-GrainedDynamicVoltageand
InternationalSymposiumon,Aug2005,pp.221–226.
FrequencyScalingforPreciseEnergyandPerformanceTrade-OffBased
on the Ratio of Off-Chip Access to On-Chip Computation Times,” in [24] A.Beloglazov,R.Buyya,Y.C.Lee,andA.Y.Zomaya,“Ataxonomy
ProceedingsoftheconferenceonDesign,automationandtestinEurope and survey of energy-efficient data centers and cloud computing sys-
(DATE),February2004,Paris,France. tems.”AdvancesinComputers,vol.82,pp.47–111,2011.