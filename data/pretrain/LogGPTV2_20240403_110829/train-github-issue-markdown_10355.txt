While attempting to benchmark JuMP solvers on an M1 processor, we encountered an issue where JuMP requires a compiler feature that is not supported on the aarch64 architecture. Specifically, the error message indicates that closures are not supported on this platform.

### Error Details
```plaintext
$ julia --project=. bench.jl 
ERROR: LoadError: cfunction: closures are not supported on this platform
Stacktrace:
  [1] _set_callback
    @ ~/.julia/dev/GLPK/src/MOI_wrapper/MOI_wrapper.jl:259 [inlined]
  [2] empty!(model::GLPK.Optimizer)
    @ GLPK ~/.julia/dev/GLPK/src/MOI_wrapper/MOI_wrapper.jl:290
  [3] GLPK.Optimizer(; want_infeasibility_certificates::Bool, method::GLPK.MethodEnum, kwargs::Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GLPK ~/.julia/dev/GLPK/src/MOI_wrapper/MOI_wrapper.jl:206
  [4] Optimizer
    @ ~/.julia/dev/GLPK/src/MOI_wrapper/MOI_wrapper.jl:171 [inlined]
  [5] _instantiate_and_check(optimizer_constructor::Type{GLPK.Optimizer})
    @ MathOptInterface ~/.julia/packages/MathOptInterface/YDdD3/src/instantiate.jl:62
  [6] instantiate(optimizer_constructor::Type; with_bridge_type::Type{Float64}, with_names::Bool)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/YDdD3/src/instantiate.jl:120
  [7] set_optimizer(model::Model, optimizer_constructor::Type; bridge_constraints::Bool)
    @ JuMP ~/.julia/packages/JuMP/klrjG/src/optimizer_interface.jl:109
  [8] Model(optimizer_factory::Type; bridge_constraints::Bool, kwargs::Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ JuMP ~/.julia/packages/JuMP/klrjG/src/JuMP.jl:287
  [9] Model
    @ ~/.julia/packages/JuMP/klrjG/src/JuMP.jl:286 [inlined]
 [10] example_factory_schedule(factory::Type)
    @ Main ~/mlp_bench/bench.jl:557
 [11] top-level scope
    @ ~/mlp_bench/bench.jl:605
in expression starting at /Users/sabae/mlp_bench/bench.jl:602
```

### Relevant Code
The problematic code can be found in the `GLPK.jl` package:
- **File**: [MOI_wrapper.jl](https://github.com/jump-dev/GLPK.jl/blob/ebc73abbf0c8352c0509932aa1ad57a69716a2e6/src/MOI_wrapper/MOI_wrapper.jl#L242-L259)

### Documentation and Workaround
According to the documentation, this limitation is known. However, since a prominent package like GLPK uses closures internally, it would be beneficial to explore potential workarounds. 

If you have any suggestions or know of any existing solutions, please share them. Alternatively, we may need to consider alternative solvers or platforms that support the required features.

Thank you for your assistance.