repeated N times.
Return the element repeated N times.
Example 1:
Input: [1,2,3,3]
output: 3
Example 2:
Input: [2,1,2,5,3,2]
Output: 2
Example 3:
Input: [5,1, 5 ,2, 5 , 3, 5, 4]
output:5
Note:
1.4  0{
idx := find(A, right)
if idx != right-1 {
reverse969(A, 0, idx)
reverse969(A,0,right-1)
ans = append(ans, idx+1, right)
right--
return ans
func reverse969(nums []int, 1， r int) {
for 1= 0 and j >= 0
---
## Page 924
Return a list of all powerfu/ integers that have value less than or equal to bound
You may return the answer in any order. In your answer, each value should occur at most once.
Example 1:
Input: × = 2, y = 3, bound = 10
Output: [2,3,4,5,7,9,10]
Explanation:
0vE + 0vZ = 
3 = 2A1 + 3^0
4 = 2∧0 + 31
5 = 2A1 + 3^1
7 = 2∧2 + 3∧1
0vE + EvZ = 6
10 = 2∧0 + 3∧2
Example 2:
Input: × = 3, y = 5, bound = 15
Output: [2,4,6,8,10,14]
Note:
1=0且j>=0，那么我们认为该整数
是一个强整数。返回值小于或等于bound的所有强整数组成的列表。你可以按任何顺序返回答案。在
你的回答中，每个值最多出现一次。
解题思路
·简答题，题目要求找出满足xAi+y^j≤bound条件的所有解。题目要求输出中不能重复，所
以用map来去重。剩下的就是n^2暴力循环枚举所有解。
代码
package leetcode
import "math"
func powerfulIntegers(x int, y int, bound int) []int {
if x == 1 && y == 1 {
---
## Page 925
if bound  y {
x, y = y， x
visit, result := make(map[int]bool), make([]int, 0)
for i := 0; ; i++ {
found := false
for j := 0; pow(x, i)+pow(y, j) = 2;i--{
if (A[1]+A[i1]> A[i-2]) && (A[i]+A[i2]> A[i1]) && （A[12]+A[i1]>
A[i]] {
return A[i]   +  A[i-1]   +  A[i-2]
return o
977.SquaresofaSortedArray.
题目
Given an array of integers A sorted in non-decreasing order, return an array of the squares of
each number, also in sorted non-decreasing order.
Example 1:
Input: [-4, -1,0,3,10]
output: [0,1,9,16,100]
Example 2:
---
## Page 929
Input: [7, -3,2,3,11]
output: [4,9,9,49,121]
Note:
1. 1 A[j]*A[j] {
ans[k] = A[i]  A[1]
i++
}else{
ans[k] = A[j]  A[j]
---