Fingerprinting. The key observation driving our ﬁngerprint-based proxy detec-
tion is that proxies use predictable patterns when setting bits in the TCP/IP
header, which are diﬀerent from the ones used by the Web servers. We use the
following rules to identify proxying for arbitrary Web sites.
For each Web site, we collect packet traces for four connections with diﬀerent
properties. We fetch content via the cellular (c) and wired connections (w), using
HTTP (h), and HTTPS (s). From the traces, we derive connection ﬁngerprints,
denoted by Fc,h, Fw,h, Fc,s and Fw,s. The ﬁngerprint for each packet trace is
composed of the receiver window, the window scaling option value, advertised
maximum segment size, and the IP/ID pattern, all extracted from the handshake
response packet. In Sect. 4, we observed these ﬁelds as being most frequently
manipulated by proxies.
In the wired network environment, traﬃc cannot pass through the cellular
proxy. Therefore, the ﬁngerprints Fw,h and Fw,s are from the Web server (pos-
sibly a server-side middlebox). To obtain the Web server’s ﬁngerprint in the
cellular environment, we need to bypass the potential proxy. In the previous
sections, we used a non-standard port (7777) since we controlled the server. But
in general, Web sites do not listen on this port, so we use port 443 (HTTPS),
which we veriﬁed to be un-proxied and which is supported by many Web sites.
In addition, we use a common ﬁngerprint obtained by fetching content from
our server, denoted by Fp. We demonstrated earlier that this is the cellular
proxy’s ﬁngerprint, seen by the client when establishing a connection to our
server. Based on these ﬁve ﬁngerprints per site, we conclude that the phone
communicates with an HTTP proxy to access web resources if the following
conditions apply:
Fc,h = Fp
Fc,h (cid:5)= Fw,h
Fc,h (cid:5)= Fc,s ⇒ Fc,s = Fw,s
(1)
(2)
(3)
Investigating Transparent Web Proxies in Cellular Networks
273
First, we check if the phone observes the proxy’s ﬁngerprint when establishing
a connection to a web server using the cellular network (rule 1). Then, we ensure
that the web server is not using the same ﬁngerprint when responding to a client,
by accessing the server through a wired connection (rule 2). Finally, we ensure
that servers do not simply use diﬀerent ﬁngerprints depending on the network
access type. For this, we check whether the HTTP and HTTPS ﬁngerprints in the
cellular environment do not match, indicating that HTTPS traﬃc bypasses the
proxy. If so, we expect that the HTTPS ﬁngerprints should be consistent across
network access types (rule 3). Additionally we conclude that the phone always
communicates with the same proxy infrastructure for sites wi if the following
additional condition holds:
∀w1, w2 : Fc,h(w1) = Fc,h(w2)
(4)
For each of the 100 most popular websites [1], we ﬁrst obtain the mobile-
speciﬁc version of the site (if one exists). To control for the fact that ﬁxed-line and
cellular networks may resolve DNS names and perform redirection diﬀerently,
we generate the Fw,∗ ﬁngerprints by connecting to the same IP address found
in the cellular network.
Among these 100 websites, ∼20 websites do not support HTTPS. For these
websites we cannot check rule 3. For the ∼10 websites that always redirect HTTP
requests to HTTPS, we use the redirection response as the ﬁngerprint for the
HTTP response.
Results. Rule 1 holds for each of the tested websites, and rule 4 holds for all pairs
of websites, suggesting that the same proxy handles all of a carrier’s Web traﬃc.
Rules 2 and 3 do not hold for a few destinations. In particular, the ﬁngerprints
for three websites connecting over the wired network match the ﬁngerprint of
the Sprint proxy. For another three websites we observe non-matching HTTPS
ﬁngerprints.
Table 2. TCP-based traceroutes show that T-Mobile selectively proxies connections
on port 80.
Hop Test server
(port 80)
Test server
(port 443)
YouTube
(port 80)
1
2
3
4
5
6
Last
192.168.42.129
192.168.42.129
192.168.42.129
10.170.224.192
10.170.224.192
10.170.224.192
10.170.224.138
10.170.224.138
10.170.224.138
10.165.54.12
10.165.54.12
10.165.54.12
128.125.121.204 10.165.54.1
10.165.54.1
10.170.213.11
...
128.125.121.204 208.54.39.44
10.170.213.11
...
274
X. Xu et al.
The results above indicate that contents for index pages are proxied, but they
do not indicate whether the same is true for all site content. In particular, we
suspect that content such as streaming video, which is often heavily optimized
based on client performance, could bypass the proxy to avoid interference with
these optimizations. To test this hypothesis, we use a similar strategy as above
for the video streaming URLs from three popular video streaming websites.
For Hulu, we verify that the traﬃc is proxied for all four carriers. Verizon uses
IPv6 for YouTube and NetFlix which we omit from this study. YouTube traﬃc
is proxied for AT&T and Sprint. However, T-Mobile traﬃc to some YouTube
servers bypasses the proxy. We compare paths to YouTube and other hosts with
tcptraceroute. Table 2 presents our results, indicating that the IP-level path
to YouTube servers diﬀers from those passing through the proxy (hop 5), and
shares IP hops with paths to our Web server over unproxied connections (hop 6).
This observation was subsequently veriﬁed when Google and T-Mobile revealed
that video bypassed the proxy to improve performance [20].
7 Discussion and Future Work
Limitations. This paper focuses on methodologies and experiments for iden-
tifying and characterizing proxies in four US cellular networks using a small
number of devices. We measured the impact of proxies for a variety of network
conﬁgurations, but future work will use a broader set of locations and carriers
to generalize our results. Our study characterizes proxies only in IPv4 networks.
Only one carrier, Verizon, supported native IPv6 connectivity (in addition to
IPv4). Verizon proxies v4 Web traﬃc but does not proxy it when using IPv6, a
topic of future work. This study focused on behavior for the 100 most-popular
Web sites and one testbed Web site; we found that proxying was consistent for
all but YouTube on T-Mobile. We believe that such exceptions to proxying are
rare, but we would like to evaluate this on more Web sites.
Selective proxying. We were interested to discover that proxies interpose on
connections to almost all major Web sites, but Google’s YouTube traﬃc bypasses
T-Mobile proxies. Subsequent to our discovery, Google and T-Mobile revealed
that they worked together to enable the bypass [20]. YouTube accounts for signif-
icant portions of Internet traﬃc, and Google has actively developed approaches
to improve delivery [3,5,10,14,15]. This suggests that Google sees beneﬁt in
maintaining an end-to-end connection to clients, and T-Mobile appears willing
to work with (at least some) providers to enable bypassing of the proxy. HTTPS
provides another means to bypass the proxy, and providers are increasingly using
it to serve Web content. It will be interesting to observe trends over time, to see
if the role of proxies diminishes as content moves to HTTPS and, perhaps, as
more Web providers negotiate arrangements like YouTube has.
Proxy evolution. Despite evidence of selective proxying and unclear perfor-
mance beneﬁts from existing proxies, we believe that future proxies can serve an
important role in cellular networks. Cellular carriers control the whole transport
Investigating Transparent Web Proxies in Cellular Networks
275
segment between the client device and the proxy. As such it is possible to ﬁne
tune connections. For example, connections between the phone and the proxy
can use advanced protocol features which cannot be easily deployed in a pub-
lic network due to potential third-party interference [14]. With explicit proxies
(e.g., SPDY/compression proxies [2]) a client can use a single connection to the
proxy, which connects to requested sites.
References
1. Alexa Top 100 Websites. http://www.alexa.com/topsites
2. Data Compression Proxy. https://developer.chrome.com/multidevice/data-compre
ssion
3. Experimenting with QUIC. http://blog.chromium.org/2013/06/experimenting-
with-quic.html
4. Grading the Top U.S. Wireless Carriers, 8 August 2014. http://www.ﬁercewireless.
com/special-reports/grading-top-us-wireless-carriers-second-quarter-2014
5. SPDY Whitepaper. http://www.chromium.org/spdy/spdy-whitepaper
6. Sprint Community. https://community.sprint.com/baw/thread/144305
7. Baccelli, F., Caroﬁglio, G., Foss, S.: Proxy caching in split TCP: dynamics, stability
and tail asymptotics. In: Proceedings of INFOCOM (2008)
8. Border, J., Kojo, M., Griner, J., Montenegro, G., Shelby, Z.: Performance enhanc-
ing proxies intended to mitigate link-related degradations. Technical report, RFC
3135 (2001)
9. Botta, A., Pescap´e, A.: Monitoring and measuring wireless network performance
in the presence of middleboxes. In: Proceedings of WONS (2011)
10. Dukkipati, N., Reﬁce, T., Cheng, Y., Chu, J., Herbert, T., Agarwal, A., Jain,
A., Sutin, N.: An argument for increasing TCP’s initial congestion window. In:
Proceedings of SIGCOMM CCR (2010)
11. Ehsan, N., Liu, M., Ragland, R.J.: Evaluation of performance enhancing proxies
in internet over satellite. IJCS 16, 513–534 (2003)
12. Erman, J., Gerber, A., Hajiaghayi, M.T., Pei, D., Sen, S., Spatscheck, O.: To cache
or not to cache: the 3G case. IEEE Internet Comput. 15, 27–34 (2011)
13. Farkas, V., H´eder, B., Nov´aczki, S.: A split connection TCP proxy in LTE networks.
In: Szab´o, R., Vid´acs, A. (eds.) EUNICE 2012. LNCS, vol. 7479, pp. 263–274.
Springer, Heidelberg (2012)
14. Flach, T., Dukkipati, N., Terzis, A., Raghavan, B., Cardwell, N., Cheng, Y., Jain,
A., Hao, S., Katz-Bassett, E., Govindan, R.: Reducing web latency: the virtue of
gentle aggression. In: Proceedings of SIGCOMM (2013)
15. Ghobadi, M., Cheng, Y., Jain, A., Mathis, M.: Trickle: rate limiting youtube video
streaming. In: Proceedings of USENIX ATC (2012)
16. Gomez, C., Catalan, M., Viamonte, D., Paradells, J., Calveras, A.: Web browsing
optimization over 2.5G and 3G: end-to-end mechanisms vs. usage of performance
enhancing proxies. Wirel. Commun. Mob. Comput. 8, 213–230 (2008)
17. Ha, S., Rhee, I.: Hybrid slow start for high-bandwidth and long-distance networks.
In: Proceedings of PFLDnet (2008)
18. Ha, S., Rhee, I., Xu, L.: CUBIC: a new TCP-friendly high-speed TCP variant.
ACM SIGOPS Op. Syst. Rev. 42, 64–74 (2008)
19. Honda, M., Nishida, Y., Raiciu, C., Greenhalgh, A., Handley, M., Tokuda, H.: Is
it still possible to extend TCP? In: Proceedings of IMC (2011)
276
X. Xu et al.
20. Hui, J., Lau, K., Jain, A., Terzis, A., Smith, J.: How youtube performance is
improved in T-mobile network. In: Proceedings of Velocity (2014)
21. Ivanovich, M., Bickerdike, P., Li, J.: On TCP performance enhancing proxies in a
wireless environment. IEEE Commun. Mag. 46, 76–83 (2008)
22. Jiang, H., Wang, Y., Lee, K., Rhee, I.: Tackling buﬀerbloat in 3G/4G networks.
In:Proceedings of IMC (2012)
23. Kreibich, C., Weaver, N., Nechaev, B., Paxson, V.: Netalyzr: illuminating the edge
network. In: Proceedings of IMC (2010)
24. Necker, M.C., Scharf, M., Weber, A.: Performance of diﬀerent proxy concepts in
UMTS networks. In: Kotsis, G., Spaniol, O. (eds.) Euro-NGI 2004. LNCS, vol.
3427, pp. 36–51. Springer, Heidelberg (2005)
25. Rodriguez, P., Fridman, V.: Performance of PEPs in cellular wireless networks.
In: Douglis, F., Davison, B.D. (eds.) Web Content Caching and Distribution, pp.
19–38. Springer, Dordrecht (2004)
26. Wang, Z., Qian, Z., Xu, Q., Mao, Z., Zhang, M.: An untold story of middleboxes
in cellular networks. In: Proceedings of SIGCOMM (2011)
27. Weaver, N., Kreibich, C., Dam, M., Paxson, V.: Here be web proxies. In: Faloutsos,
M., Kuzmanovic, A. (eds.) PAM 2014. LNCS, vol. 8362, pp. 183–192. Springer,
Heidelberg (2014)
28. Xu, X., Jiang, Y., Flach, T., Katz-Bassett, E., Choﬀnes, D., Govindan, R.: Inves-
tigating transparent web proxies in cellular networks. Technical report 14-944,
University of Southern California (2014)