n
o
s
c
e
r
P
i
i
 0.6
 0.4
 0.2
 0
Train w/ casing
Test w/o casing
Train w/o casing
Test w/ casing
Train w/o casing
Test w/o casing
Train w/ casing
Test w/ casing
All
Fig. 12: Performance with and without phone cases
When the training is done using the traces of the phones
10
The amount of stimulation generated by a smartphone’s
vibration motor may depend upon the surface on which it is
placed. To measure the impact of surface on device ﬁnger-
prints, we collected accelerometer readings while keeping
smartphones on four types of surfaces: a wooden table, a
carpeted ﬂoor, a sofa cushion and on top of a palm. We
trained AccelPrint with traces from one surface and
tested with traces from all surfaces. We repeated this process
for all four types of surfaces. We have also trained the system
with a mix of traces that were collected on all four surfaces
(we kept the number of training traces for each surface the
same), and tested upon traces collected on all surface traces.
The results of these experiment are shown in Figure 13.
l
l
i
i
/
a
c
e
R
n
o
s
c
e
r
P
e
g
a
r
e
v
A
 1
 0.8
 0.6
 0.4
 0.2
 0
Precision
Recall
Table
Floor
Hand
Cushion
Training Surface
All
Fig. 13: Performance with different surfaces
When AccelPrint is trained by placing the phones on
a table and then tested by placing them also on the carpet,
on the cushion, and in a hand, it classiﬁes all phones with
an average precision of around 80% and recall close to 60%.
The reduced precision and recall are caused by the different
hardness of the surfaces. Compared to a table, a cushion
is softer and can absorb a larger amount of vibration, and
hence accelerometer readings are affected accordingly. If the
training set includes enough diversity, e.g., when we train
the system with traces from each surface, AccelPrint
can classify each phone with 98% precision and recall,
regardless of the surface types. This is encouraging, since
AccelPrint can achieve a high performance without
having to explicitly specify the surface while testing a trace.
In other words, AccelPrint is surface-agnostic.
H. Scalability of AccelPrint
In an academic lab setup, it is difﬁcult to test a system
with a very large set of devices. However, to get a sense of
how well the system scales, we conduct an experiment where
we increase the number of devices considered gradually and
measure the performance of the system at each stage. In the
ﬁrst stage, we consider only 20 randomly chosen devices,
train and evaluate the system with their traces. Next, we
increase this number to 40 devices and we again evaluate our
system. This way we keep increasing the number of devices
in each stage and measure the system’s performance.
Table III shows how accuracy changes with the increas-
ing number of devices. From this table, we can observe that
although the number of devices increases, the accuracy of
the system does not change signiﬁcantly. Figure 14 shows
the precision and recall of the system for different number
of devices considered. This ﬁgure also shows that the system
performance does not change much for the larger set. These
results provide encouraging signs that AccelPrint is
likely scalable to a large number of devices.
TABLE III: Accuracy for increasing number of known
devices
I.
Impact of Alien Devices
In real life, it is very likely that AccelPrint needs
to classify the traces of the devices,
i.e., alien devices,
for which it is not trained beforehand. To understand how
it performs for the traces collected from alien devices,
we conduct the following experiment. Out of 107 devices,
we randomly choose 20 devices for training and those 20
devices are never used for testing. Out of the rest 87 devices,
ﬁrst we randomly choose 20 alien devices for testing, and
evaluate the performance of the system. In the next stage, we
choose total 40 alien devices and repeat the same process.
Thus, we include all the alien devices gradually and obtain
a measure of the scalability of AccelPrint.
Table IV show the overall accuracy with the increasing
number of alien devices, whereas ﬁgure 15 shows the
precision and recall for the same. These results indicate
that AccelPrint can successfully reject the alien devices
using the threshold value of the classiﬁcation score. Further,
the overall performance of the system does not change much
with the increasing number of alien devices.
TABLE IV: Accuracy for increasing alien devices
Number of devices Accuracy
0.9917
0.9950
0.9983
0.9963
0.9883
20
40
60
80
87
Number of devices Accuracy
0.9917
0.9958
0.9956
0.9908
0.9883
0.9907
20
40
60
80
100
107
l
l
/
a
c
e
R
n
o
s
c
e
r
P
i
i
 1
 0.95
 0.9
 0.85
 0.8
20
Precision
Recall
40
60
80
100
108
Number of Devices for Testing
Fig. 14: Precision/Recall for known devices
l
l
/
a
c
e
R
n
o
s
c
e
r
P
i
i
 1
 0.95
 0.9
 0.85
 0.8
20
Precision
Recall
40
60
80
Number of Alien Devices for Testing
88
Fig. 15: Precision/Recall for alien devices
J.
Impact of Stimulation
The experiments we described thus far employ vibration
to stimulate the accelerometer. So it is natural to raise three
questions. 1) Are we ﬁngerprinting the accelerometer or the
combination of accelerometer and vibration motor? 2) Can
a device be ﬁngerprinted with a different stimulation other
than vibration? 3) How about ﬁngerprinting a device without
any stimulation? In this section, we attempt to answer these
11
questions. First, we subject smartphones to rotational motion
and show that it works as well as vibration in ﬁngerprinting
devices. This experiment, in addition to the experiments with
stand-alone accelerometer chips, conﬁrm that accelerometer
can be ﬁngerprinted (even if vibration motor contributes
to the ﬁngerprint of a smartphone). Second, we perform
experiments keeping devices still and show that they can
be discriminated to some extent without any stimulation.
1) Fingerprinting with external rotational motor: In this
setup, we use an external DC motor and an Arduino con-
troller [2] to stimulate the smartphones through rotational
motion. The Arduino controller rotates the DC motor in the
same 2-sec pattern as above to maintain consistency. The
DC motor is attached to a platform that is used to hold the
smartphone. The entire setup is shown in Figure 16. In this
experiment we use only the smartphones as the size of the
platform was not suitable for the tablets. Here as we use only
one common motor for all the smartphones, the rotational
motor has no impact on the ﬁngerprint of the smartphones.
However this is worth mentioning that we also collect traces
from this setup in a round robin fashion as stated previously.
Fig. 16: Smartphone with external motor for rotation.
The precision and recall of this setup is shown in Fig. 17.
We compute the precision and recall for all the smartphones
individually and then plot their CDF in Figures 17a and
17b. Here for 5 training traces (amounting to 10 seconds of
training), both precision and recall are above 84% for all
classes. As we increase the number of training traces, the
tail for both CDFs get shortened. If we consider 15 training
traces, then all the smartphones are above 90%. For training
size 15, the average precision and recall are both above 97%.
2) Fingerprinting without stimulation: To understand if
the ﬁngerprint can be extracted without any stimulation, we
conduct an experiment where we put the smartphones still
on the table and collect the traces in this setup.
The precision and recall of this setup is shown in Fig. 18.
As done in the previous section, here also we compute the
precision and recall for all the smartphones individually to
12
plot the CDF of their distributions in Figures 18a and 18b.
Here for 5 training traces, both precision and recall are above
65% for all classes. Here even if we increase the number of
training traces, the tail for both CDFs do not get shortened
as fast as in Figure 9. We surmise this because accelerometer
chip has a mechanical part and an electronic part. Without
stimulation, the movable mechanical part does not play any
role in the ﬁngerprint and we cannot capture the imperfection
of the movable part. That is why the system performs worse
compared to that with external stimulation.
To summarize, our evaluation using 107 different types
of stand-alone chips, smartphones, and tablets shows that
they can be identiﬁed robustly leveraging the ﬁngerprints
of their accelerometers. While even larger study is needed
to conﬁrm the scalability of our ﬁndings, to the best of
our knowledge,
this is the ﬁrst work to attempt device
identiﬁcation based on ﬁngerprints of accelerometers.
VI. RELATED WORK
A. Device Fingerprinting
Fingerprints are originally used as a biometrics tech-
nology to identify human beings [58], [62]. The concept
was applied to device identiﬁcation as early as in 1960s,
when a “speciﬁc emitter identiﬁcation” system that utilizes
externally observable characteristics of signals was devel-
oped to distinguish radars [61]. Later, the similar technology
was used to identify transmitters in cellular networks [26],
[39], [56]. Since then, much effort has been devoted to
identifying network devices by building a ﬁngerprint out of
their software or hardware.
In terms of software-based ﬁngerprint, MAC address
was exploited to detect the presence of multiple 802.11
devices [32], [66]. The combination of chipsets, ﬁrmware
and device drivers [30], timing interval of probe request
frames [19], or the patterns of wireless trafﬁc [50] were
also used to identify devices. An open source toolkit for
network administrators [40] utilizes software conﬁguration
for network discovery. The downside of these methods is that
ﬁngerprints will be different once computer conﬁguration or
trafﬁc behavior changes.
Another approach of the software based ﬁngerprinting is
to exploit the browser properties and plugins to ﬁgure out
unique identiﬁers [23]. Researches [48], [68] shows that the
log ﬁles of Bing and Hotmail and web browser history can
potentially reveal the identity of the client. The web viewing
time [31] or the benchmark execution time of the javascript
[46] can also help to ﬁngerprint a device.
Hardware-based approaches rely on stable ﬁngerprints.
Network devices have different clock oscillators that create
stable and constant clock skews [53], [60], which can be
estimated remotely using TCP and ICMP timestamps for de-
vice ﬁngerprinting [37]. Radio frequency (RF) ﬁngerprinting
 1
 0.8
 0.6
F
D
C
 0.4
 0.2
Training Traces: 5
Training Traces: 10
Training Traces: 15
 1
 0.8
 0.6
F
D
C
 0.4
 0.2
Training Traces: 5
Training Traces: 10
Training Traces: 15
 0
 0.7
 0.75
 0.8
 0.9
 0.85
Precision
 0.85
Recall
Fig. 17: Precision and recall of smartphones with external motor for rotation
 0.95
 0.75
 0.7
 0.8
 1
 0
 0.9
 0.95
 1
 1
 0.8
 0.6
F
D
C
 0.4
 0.2
Training Traces: 5
Training Traces: 10
Training Traces: 15
 1
 0.8
 0.6
F
D
C
 0.4