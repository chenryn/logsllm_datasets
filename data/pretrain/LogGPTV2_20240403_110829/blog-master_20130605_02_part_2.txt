}  
define service{  
  use generic-service  
  host_name db_3_39  
  service_description check_xlogs  
  check_command check_nrpe!check_xlogs  
}  
```  
检查配置文件正确性, 确保无错误.  
```  
[root@db-172-16-3-33 db_servers]# /opt/nagios-3.5.0/bin/nagios -v /opt/nagios-3.5.0/etc/nagios.cfg   
```  
重启nagios  
```  
[root@db-172-16-3-33 db_servers]# service nagios restart  
Running configuration check...done.  
Stopping nagios: done.  
Starting nagios: done.  
```  
9\. nagios web界面截图  
![pic](20130605_02_pic_001.png)  
## 其他  
1\. check_postgres的过滤选项  
```  
--exclude  
--include  
```  
先排除后包含. 所以如果同一个值在包含和排除中都存在, 那么最后还是包含的.  
2\. LANG变量设置.  
最好设置成en_US.UTF8  
3\. export LC_TIME=C , 需要与数据库一致.  
```  
pg92@db-172-16-3-39-> psql -h 127.0.0.1 -U postgres  
psql (9.2beta1)  
Type "help" for help.  
postgres=# \l  
                             List of databases  
   Name    |   Owner   | Encoding | Collate | Ctype |   Access privileges     
-----------+-----------+----------+---------+-------+-----------------------  
 digoal    | postgres  | UTF8     | C       | C     |   
 digoal_01 | digoal_01 | UTF8     | C       | C     |   
 digoal_02 | digoal_02 | UTF8     | C       | C     |   
 postgres  | postgres  | UTF8     | C       | C     |   
 template0 | postgres  | UTF8     | C       | C     | =c/postgres          +  
           |           |          |         |       | postgres=CTc/postgres  
 template1 | postgres  | UTF8     | C       | C     | =c/postgres          +  
           |           |          |         |       | postgres=CTc/postgres  
(6 rows)  
```  
一致的情况下, 时间比对正常.  
```  
pg92@db-172-16-3-39-> /opt/check_postgres-2.20.0/check_postgres.pl --output=nagios --datadir=$PGDATA --action=checkpoint -w 10s -c 200000s  
POSTGRES_CHECKPOINT WARNING:  Last checkpoint was 1265 seconds ago | age=1265;10;200000  
```  
如果环境变量与数据库不一致, check point会有问题.  
```  
pg92@db-172-16-3-39-> export LC_TIME=en_US.UTF8  
pg92@db-172-16-3-39-> /opt/check_postgres-2.20.0/check_postgres.pl --output=nagios --datadir=$PGDATA --action=checkpoint -w 10s -c 200000s  
POSTGRES_CHECKPOINT OK:  Last checkpoint was -49101 seconds ago | age=-49101;10;200000   
```  
4\. 修改LC_TIME后在本地调用正常, 但是在nagios服务端使用check_nrpe调用还是异常.  
```  
[root@db-172-16-3-33 db_servers]# /opt/nagios-3.5.0/libexec/check_nrpe -H 172.16.3.39 -c check_checkpoint  
POSTGRES_CHECKPOINT OK:  Last checkpoint was -38070 seconds ago | age=-38070;300;600   
```  
即使将LC_TIME=C写在nrpe.cfg中也不能正常使用.   
```  
command[check_checkpoint]=LC_TIME=C /opt/check_postgres-2.20.0/check_postgres.pl --PGBINDIR=/opt/pgsql92/bin --output=nagios --datadir=/pgdata1919 --action=checkpoint -w 300s -c 600s  
[root@db-172-16-3-39 check_postgres-2.20.0]# service xinetd restart  
Stopping xinetd: [  OK  ]  
Starting xinetd: [  OK  ]  
[root@db-172-16-3-33 db_servers]# /opt/nagios-3.5.0/libexec/check_nrpe -H 172.16.3.39 -c check_checkpoint  
POSTGRES_CHECKPOINT OK:  Last checkpoint was -37864 seconds ago | age=-37864;300;600   
```  
## 参考  
1\. http://bucardo.org/check_postgres/check_postgres.pl.html  
2\. http://blog.163.com/digoal@126/blog/static/16387704020135313354383/  
3\. http://blog.163.com/digoal@126/blog/static/16387704020135334157531/  
4\. http://blog.163.com/digoal@126/blog/static/1638770402013531131023/  
5\. http://search.cpan.org/  
6\. http://www.postgresql.org/docs/9.3/static/runtime-config-autovacuum.html  
7\. http://blog.163.com/digoal@126/blog/static/1638770402013548284410/  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")