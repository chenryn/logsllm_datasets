title:Digging For Worms, Fishing For Answers
author:Florian P. Buchholz and
Thomas E. Daniels and
James P. Early and
Rajeev Gopalakrishna and
R. Patrick Gorman and
Benjamin A. Kuperman and
Sofie Nystrom and
Addam Schroll and
Andrew Smith
Digging For Worms, Fishing For Answers
The CERIAS Intrusion Detection Research Group
Center for Education and Research in Information Assurance and Security
Purdue University
West Lafayette, IN
Abstract
Worms continue to be a leading security threat on the In-
ternet. This paper analyzes several of the more widespread
worms and develops a general life-cycle for them. The life-
cycle, from the point of view of the victim host, consists
of four stages: target selection, exploitation, infection, and
propagation. While not all worms fall into this framework
perfectly, by understanding them in this way, it becomes ap-
parent that the majority of detection techniques used today
focus on the ﬁrst three stages. This paper presents a tech-
nique that is used in the fourth stage to detect the class of
worms that use a horizontal scan to propagate. An argu-
ment is also made that detection in the fourth stage is a
viable, but under-used technique.
1. Introduction
Worms continue to be a serious threat to the Internet as a
whole. A worm is an “Independent program that replicates
from machine to machine across network connections often
clogging networks and information systems as it spreads”
[19]. To date, the worms that have become widespread have
been relatively benign. However, as worm writers become
more sophisticated, the potential damage caused by worms
becomes incalculable. Warhol and Flash worms [18] illus-
trate ways in which worms can become more sophisticated
and rapidly spread. In fact, more recent worms such as Slap-
per [4] have set up Distributed Denial of Service (DDoS)
networks as they spread.
To model how worms behave and propagate, a four stage
life-cycle was developed. Our life-cycle is constructed from
the point of view of an uninfected host. First, the host is
selected as a target by the worm from a remote machine.
The host is then compromised through some sort of exploit.
Florian Buchholz, Thomas E. Daniels, James P. Early, Rajeev
Gopalakrishna, R. Patrick Gorman, Bejamin A. Kuperman, Soﬁe Nystrom,
Addam Schroll, and Andrew Smith. This paper was partially funded by the
sponsors of CERIAS
After being compromised, the worm then infects the host.
Finally, the worm propagates by choosing other targets to
infect. Not all worms ﬁt perfectly within this framework;
however, from a conceptual standpoint, the actions in each
stage are present in a worm’s behavior and can be success-
fully applied to most of the worms in the past few years.
As worms have been identiﬁed as a signiﬁcant security
threat, a number of techniques have been developed to de-
fend against them. However, the majority of the focus has
been on the ﬁrst three stages of a worm’s life-cycle. For ex-
ample, signature based network intrusion detection systems
are used to detect exploits and host based intrusion detection
systems are used to detect infections based upon modiﬁed,
deleted, or added ﬁles.
This paper focuses on techniques that can be used to de-
tect and contain worms in the fourth stage, propagation. A
class of worms that behave similarly in the fourth stage is
also identiﬁed. By watching outbound network trafﬁc from
an infected host, it is possible to detect these worms as they
attempt to propagate. There are a number of advantages
in this form of detection, including being notiﬁed of an in-
fected host and containing any further infection on the local
network or in other domains (potentially protecting one’s
reputation). Furthermore, even if a worm is not detected
when it enters the network, it may be possible to detect it
on its way out.
The next section describes the four stage life-cycle of a
worm in greater detail. Section 3 discusses the techniques
currently being used to detect worms in the context of the
four stage life-cycle. Section 4 looks at the different tech-
niques that can be used to detect a worm in the fourth stage.
Finally, a preliminary implementation, future work and con-
clusions are presented.
2 The Four Stage Life-cycle
By analyzing the behavior of several worms, it becomes
apparent that they exhibit many similar activities. By group-
ing their common actions, a four stage life-cycle emerges
that characterizes worms’ behavior.
Proceedings of the 18th Annual Computer Security Applications Conference (ACSAC(cid:146)02) 
1063-9527/02 $17.00 ' 2002 IEEE 
Victim
  Host
1. Target Selection
2. Exploit
3. Infect
4. Propogate
Network
Source
Target
Figure 1. The Four Stage Life-cycle of a Worm
The four stage life-cycle, as shown in Figure 1, is from
the point of view of a host that is about to become infected.
The arrows represent the source of each stage, but are not
necessarily indicative of separate network trafﬁc or connec-
tions.
The four stages in the life-cycle are:
1. Target selection
2. Exploitation
3. Infection
4. Propagation
In practice, the actions in the ﬁrst and fourth stages are
the same. However, from the point of view of the attacked
host, they appear differently. This will become clear as each
of these stages is described in more detail. The Lion worm,
described in both [2] and [5], will be used as an example to
illustrate the actual actions of a worm in each stage.
2.1 Target Selection
The target selection stage is the phase when an unin-
fected host is chosen to be attacked. This is where the worm
performs reconnaissance to determine other potential vic-
tims.
From the point of view of the host that is about to be in-
fected, this may be as simple as a single network probe. For
example, the Lion worm simply probes a potential victim to
see if it is running a service on port 53. If there is indeed a
service running, then the worm moves into the second stage
to attempt to exploit the victim.
2.2 Exploitation
The exploitation phase is when the worm compromises
the target by exploiting a particular vulnerability. Often-
times, worms use well known vulnerabilities and published
exploits to compromise their target.
In the Lion example, a BIND exploit [1] is used to com-
promise the host and obtain root privileges. If the victim is
successfully compromised, then the worm moves into the
third stage, infection.
2.3 Infection
The infection stage is the most broad in the life-cycle, as
the worm copies itself on to the victim machine and then
performs any number of different actions. The line between
the infection and exploitation stage is sometimes blurred.
For example, the Code Red worm [3] actually loads itself
into the victim’s memory as part of the exploit used to com-
promise the victim. The infection stage is understood to
be the time when the worm “sets up shop” on the newly
infected machine. For example, the worm can open back-
doors, change system ﬁles, or attempt to hide its presence
by replacing system utilities with trojan horses.
The Lion worm connects to a predetermined website to
download itself to the newly infected host, mails several
system ﬁles (including /etc/shadow) to a predetermined
email address, and adds an entry to /etc/inetd.conf
to allow attackers to connect to port 10008 with root access.
After the worm has set itself up on the newly infected
host, it then moves into the fourth stage of the life-cycle,
propagation.
2.4 Propagation
In the propagation stage, the worm attempts to spread
by choosing new targets. The difference between this stage
and target selection is simply the point of view from which
the actions take place. In target selection, a remotely in-
fected host chooses the local host as a target, often in the
form of a probe coming in through inbound network trafﬁc.
In the propagation stage, the infected local host is the one
choosing a new target, using probes going out in outbound
Proceedings of the 18th Annual Computer Security Applications Conference (ACSAC(cid:146)02) 
1063-9527/02 $17.00 ' 2002 IEEE 
network trafﬁc. This is an important distinction and allows
new techniques to be used in worm detection.
The Lion worm begins its propagation by randomly
choosing an IP address as a base. Then, starting with this
base address, it uses a TCP SYN scan to probe on port 53.
It repeatedly increments the address by one to get the next
target it will probe. It scans well over a hundred hosts per
second.
2.5 Four Stage Life-cycle Summary
Looking at the entire life-cycle for the Lion worm, a vic-
tim host would see:
(cid:15) Stage One - A connection attempt on port 53
(cid:15) Stage Two - A BIND exploit on port 53
(cid:15) Stage Three - An outbound connection to a website
to download the worm, ﬁlesystem changes to open a
backdoor, and outbound email transferring sensitive
system ﬁles
(cid:15) Stage Four - A series of rapid outbound scans probing
port 53 on randomly selected hosts
In Table 1, included at the end of the paper, several of
the more proliﬁc worms are broken into the described four
stage life-cycle. Every worm in the table scans to ﬁnd po-
tential victims. The Network Probe category illustrates this,
and lists the port numbers of any scanned ports. In addition,
some worms use email in order to spread themselves. This
category was included for completeness, but is not other-
wise addressed. The Exploit category gives the targeted ser-
vice and the CERT Advisory that describes the vulnerabil-
ity. The Infection category includes columns for ﬁlesystem
modiﬁcations, backdoors, and other activity. A ﬁlesystem
modiﬁcation includes everything from a copy of the worm
being placed on the system to changing system ﬁles. A
backdoor includes techniques such as adding new users to
the system and opening a root shell server (in which case the
port is listed). The Other column contains activities that do
not fall into the ﬁrst two, such as emailing out system ﬁles,
connecting to a server to download the worm, or setting up a
DDoS client. The Propagation category includes an Other
column, which accounts for different spreading techniques
such as a web server infecting a client.
This table gives the intuition behind how each worm can
be detected or prevented in its different stages.
3 Detection Techniques in the First Three
Stages
Having described the four stage life-cycle of a worm, it
becomes apparent that the majority of tools used to combat
worms focus on the ﬁrst three stages. This section will look
at the different techniques being used today in each stage,
as well as the limitations that these tools face.
3.1 Detecting Target Selection
As discussed, from the point of view of the victim host,
the target selection phase typically involves an inbound net-
work probe on a particular port. Firewalls are designed to
block this type of probe. If a remote machine is attempting
to access a service it does not have permission to access, the
ﬁrewall can block it. However, worms often target services
that are available to the public, such as a web server. In this
case, detection in this phase can be reduced to the detection
of an inbound portscan.
The standard technique used to detect a port scan is “test-
ing for X events of interest across a Y-sized time window
[11].” For example, one can test for the same source ad-
dress accessing 10 different ports on the same destination
machine within a two second interval. This claim is sup-
ported by a survey of a number of different network intru-
sion detection systems that use slight variations of the afore-
mentioned technique to detect portscans [17].
This technique is viable if the scanning host actually trig-
gers X events; however, as noted earlier, the scanning host
may only send one probe into a network. It does not need
to scan multiple ports, or multiple hosts.
In the case where a target can be selected with one probe,
such as a connection to a web server on port 80, very little
can be done to detect the worm at this stage in the life-cycle.
3.2 Detecting Exploits
Because of the difﬁculty of detecting the scans described
in the prior stage, much of the work that has been done to
detect and prevent worms falls into detecting attempts to
exploit vulnerabilities.
The ﬁrst, and most effective line of defense against
worms and any other network attack is to keep servers up-
to-date with the latest patches. Many of the worms in circu-
lation today exploit well known vulnerabilities for which
patches exist (and existed even before the worms began
spreading). Furthermore, many worms simply copy their
predecessors and exploit the same vulnerabilities. Using Ta-
ble 1, it can be seen that Code Red v1 and Code Red II both
exploit the same vulnerability. Similarly, Adore exploits the
same vulnerabilities that Lion and Ramen exploit.
Detecting exploits as they cross the network is the main
goal of a Network Intrusion Detection System (NIDS).
While many worms attack well known vulnerabilities, they
also use well known exploits for which signatures have been
written. In these cases, an up-to-date ruleset on a NIDS will
Proceedings of the 18th Annual Computer Security Applications Conference (ACSAC(cid:146)02) 
1063-9527/02 $17.00 ' 2002 IEEE 
generate an alert when a worm attempts to attack a host on
the network.
The limitations of network intrusion detection systems
and patches are well known. If a new vulnerability is at-
tacked, and the exploit has never been seen in the wild,
patches will probably not have been released and signatures
will not have been written to detect it. Consequently, a host
will be vulnerable, and a signature based NIDS will miss
the exploit. Furthermore, there are several techniques that
can be used to avoid detection by a NIDS, with varying de-
grees of success depending upon the actual NIDS that is
deployed. These include techniques such as slightly vary-
ing the signature of the worm, overlapping fragmentation
attacks, and others [14].
3.3 Detecting Infection
Due to the number of different actions a worm can take
in this stage, there are many different techniques that may