FLO but ﬁxes packet sizes depending on their direc-
tion. Outgoing trafﬁc is ﬁxed at a higher packet in-
terval, this reduces overhead as outgoing trafﬁc is less
frequent.
• Adaptive Padding (AP) [18, 31].
AP protects
anonymity by introducing trafﬁc in to statistically un-
likely delays between packets in a ﬂow. This limits the
amount of extra bandwidth required and does not in-
cur any latency costs. AP uses previously computed
histograms of inter-arrival packet times from website
loads to determine when a dummy packet should be in-
Table 1: Attack comparison under various website ﬁn-
gerprinting defenses.
Defenses This work
0.91± 0.01
0.90 ±0.03
0.37 ±0.01
0.30 ±0.04
0.21 ±0.02
0.10 ±0.01
CUMUL [28] Bandwidth overhead (%)
0.91± 0.04
0.75± 0.07
0.21± 0.02
0.16± 0.03
0.08± 0.03
0.08± 0.03
No defense
Morphing [40]
Decoy pages [27]
Adaptive Padding [31]
BuFLO [12]
Tamaraw [35]
k-NN [39]
0.91± 0.03
0.82± 0.06
0.30± 0.06
0.19± 0.03
0.10± 0.03
0.09± 0.02
50± 10
130± 20
190± 20
96± 9
0
54
jected15. This is currently the favored option if padding
were to be implemented in Tor [4].
Table 1 shows the performance of k-ﬁngerprinting
against k-NN and CUMUL under various website ﬁnger-
printing defenses in a closed-world setting. Under ev-
ery defense k-ﬁngerprinting is comparable or achieves
better results than the k-NN attack and performs signif-
icantly better than CUMUL. Note that k-ﬁngerprinting
does equally well when trafﬁc morphing is applied com-
pared to no defense. As Lu et al. [23] note, trafﬁc morph-
ing is only effective when the attacker restricts attention
to the same features targeted by the morphing process.
Our results conﬁrm that attacks can succeed even when
trafﬁc morphing is employed. k-ﬁngerprinting also per-
forms nearly 10% better than k-NN when decoy pages
are used, which is in effect a marker for how well the
attack performs on multi-tab browsing. Due to the de-
pendency of packet length and sequence length features,
CUMUL performs substantially worse than the other two
attacks under website ﬁngerprinting defenses. Though
CUMUL uses a similar number of features and is of sim-
ilar computational efﬁciency to k-ﬁngerprinting, simple
defenses remove the feature vector patterns between sim-
ilar web pages used in CUMUL, rendering the attack
ineffectual. More generally, any attack that uses a re-
stricted set of features will suffer greatly from a defense
that targets those features. k-ﬁngerprinting performs well
under defenses due to its feature set that captures trafﬁc
information not used in CUMUL such as packet timings
and burst patterns. The k-NN attack performs slightly
better than CUMUL but requires an order of magnitude
more features than both CUMUL and k-ﬁngerprinting.
Our attack is both more efﬁcient and more accurate than
CUMUL and k-NN under defenses.
k-ﬁngerprinting the Wang et al. data set
7
We ﬁrst evaluate k-ﬁngerprinting on the Wang et al. data
set [39]. This data set was collected over Tor, and thus
implements padding of packets to ﬁxed-size cells (512-
bytes) and randomization of request orders [30]. Thus
15As Juarez et al.
[18] note, the distribution of histogram bins is
dependent on the individual client bandwidth capacity. Optimizing his-
tograms for a large number of clients is an open problem. Here we
implement a naive version of AP with one master histogram for all
clients.
USENIX Association  
25th USENIX Security Symposium  1193
7
Figure 3: Attack results for 1500 unmonitored training
pages while varying the number of ﬁngerprints used for
comparison, k, over 10 experiments.
Figure 4: Accuracy of k-ﬁngerprinting as we vary the
number of trees in the forest.
Table 2: k-ﬁngerprinting results for k=3 while varying
the number of unmonitored training pages.
Training pages TPR
0
1500
2500
3500
4500
0.90± 0.02
0.88± 0.02
0.88± 0.01
0.88± 0.01
0.87± 0.02
FPR
0.750± 0.010
0.013± 0.007
0.007± 0.001
0.005± 0.001
0.009± 0.001
BDR
0.419
0.983
0.993
0.997
0.998
the only available information to k-ﬁngerprinting are tim-
ing and volume features. We train on 60 out of the 90
instances for each of the 100 monitored web pages; we
vary the number of pages on which we train from the
5000 unmonitored web pages. For the attack evaluation
we use ﬁngerprints of length 200 and 150 features. Final
classiﬁcation is as described in Section 3.2, if all k ﬁnger-
prints agree on classiﬁcation a test instance is classiﬁed
as a monitored web page, otherwise it is classiﬁed as an
unmonitored web page.
The scenario for the attack is as follows: an attacker
monitors 100 web pages; they wish to know whether a
client is visiting one of those pages, and establish which
one. The client can browse to any of these web pages
or to 5000 unmonitored web pages, which the attacker
classiﬁes in bulk as an unmonitored page.
Using the k-ﬁngerprinting method for classifying a
web page we measure a TPR of 0.88 ± 0.01 and a FPR of
0.005 ± 0.001 when training on 3500 unmonitored web
pages and k, the number of training instances used for
classiﬁcation, set at k=3. k-ﬁngerprinting achieves better
accuracy than the state-of-the-art k-NN attack that has a
TPR of 0.85 ± 0.04 and a FPR of 0.006 ± 0.004. Given
a monitored web page k-ﬁngerprinting will misclassify
this page 12% of the time, while k-NN will misclassify
with 15% probability.
Best results are achieved when training on 3500 un-
monitored web pages. Table 2 reports TPR and FPR
when using different numbers of unmonitored web pages
for training with k=3. As we train more unmonitored web
pages we decrease our FPR with almost no reduction in
TPR. After training 3500 unmonitored pages there is no
decrease in FPR and so no beneﬁt in training more un-
monitored web pages. This is conﬁrmed by the marginal
increase in BDR after training on at least some of the
unmonitored set. Furthermore without training on any
of the unmonitored web pages, despite the high FPR the
classiﬁer has more than 40% probability of being correct
when classifying a web page as monitored.
Figure 3 illustrates how classiﬁcation accuracy
changes as, k, the number of ﬁngerprints used for clas-
siﬁcation changes. For a low k the attack achieves a FPR
of around 1%, as we increase the value of k we reduce the
number of misclassiﬁcations since it is less likely that all
k ﬁngerprints will belong to the same label, but we also
reduce the TPR. Altering the number of ﬁngerprints used
for classiﬁcation allows an attacker to tune the classiﬁer
to either a low FPR or high TPR depending on the de-
sired application of the attack.
We ﬁnd that altering the number of ﬁngerprints used
for classiﬁcation, k, affects the TPR and FPR more than
the number of unmonitored training pages. This suggests
that while it is advantageous to have a large world size
of unmonitored pages, increasing the number of unmon-
itored training pages does not increase accuracy of the
classiﬁer dramatically. This supports Wang et al.’s [39]
claims to the same effect.
In practice an attacker will
need to train on at least some unmonitored pages to in-
crease the BDR, though this does not need to be a sub-
stantial amount; training 1500 unmonitored web pages
leads to a 98.3% chance the classiﬁer is correct when
claiming to have recognized a monitored web page.
Fingerprint length. Changing the length of the ﬁnger-
print vector will affect k-ﬁngerprinting accuracy. For a
1194  25th USENIX Security Symposium 
USENIX Association
8
Table 3: Attack results on top Alexa sites for k=2 while
varying the number of unmonitored training pages.
Table 4: Attack results on Tor hidden services for k=2
while varying the number of unmonitored training pages.
Training pages TPR
2000
4000
8000
16000
0.93± 0.03
0.93± 0.01
0.92± 0.01
0.91± 0.02
FPR
0.032± 0.010
0.018± 0.007
0.008± 0.002
0.003± 0.001
BDR
0.33
0.47
0.67
0.86
Training pages TPR
2000
4000
8000
16000
0.82± 0.03
0.82± 0.04
0.82± 0.02
0.81± 0.02
FPR
0.0020± 0.0015
0.0007± 0.0006
0.0002± 0.0001
0.0002± 0.0002
BDR
0.72
0.88
0.96
0.97
small ﬁngerprint length there may not be enough diver-
sity to provide an accurate measure of distance over all
packet sequences. Figure 4 shows the resulting TPR and
FPR as we change the length of ﬁngerprints in the Wang
et al. [39] data set. We set k=1 and train on 4000 unmon-
itored web pages. Using only a ﬁngerprint of length one
results in a TPR of 0.51 and FPR of 0.904. Clearly us-
ing a ﬁngerprint of length one results in a high FPR since
there is a small universe of leaf symbols from which to
create the ﬁngerprint. A ﬁngerprint of length 20 results
in a TPR of 0.87 and FPR of 0.013. After this there are
diminishing returns for increasing the length of the ﬁn-
gerprint vector.
8 Attack evaluation on DSTor
We now evaluate k-ﬁngerprinting on DSTor. First we
evaluate the attack given a monitored set of the top 55
Alexa web pages, with 100 instances for each web page.
Then we evaluate the attack given a monitored set of 30
Tor hidden services, with 80 instances for each hidden
service. The unmonitored set remains the same for both
evaluations, the top 100,000 Alexa web pages with one
instance for each web page.
8.1 Alexa web pages monitored set
Table 3 shows the accuracy of k-ﬁngerprinting as the
number of unmonitored training pages is varied. For the
monitored web pages, 70 instances per web page were
trained upon and testing was done on the remaining 30
instances of each web page. As expected, the FPR de-
creases as the number of unmonitored training samples
grows. Similar to Section 7 there is only a marginal de-
crease in TPR while we see a large reduction in the FPR
as the number of training samples grows. Meaning an at-
tacker will not have to compromise on TPR to decrease
the FPR; when scaling the number of unmonitored train-
ing samples from 2% to 16% of the entire set the TPR de-
creases from 93% to 91% while the FPR decreases from
3.2% to 0.3%. There is a more pronounced shift in BDR
with the increase of unmonitored training pages, however
an attacker needs to train on less than 10% of the entire
dataset to have nearly 70% conﬁdence that classiﬁer was
correct when it claims to have detected a monitored page.
Clearly the attack will improve as the number of train-
ing samples grows, but in reality an attacker may have
limited resources and training on a signiﬁcant fraction of
100,000 web pages may be unfeasible. Figure 5 shows
the TPR and FPR of k-ﬁngerprinting as the number of
unmonitored web pages used for testing grows while the
number of unmonitored web pages used for training is
kept at 2000, for different values of k. We may think of
this as the evaluation of success of k-ﬁngerprinting as a
client browses to more and more web pages over multiple
browsing sessions. Clearly for a small k, both TPR and
FPR will be comparatively high. Given that, with k=5
only 2.5% of unmonitored web pages are falsely identi-
ﬁed as monitored web pages, out of 98,000 unmonitored
web pages.
8.2 Hidden services monitored set
Table 4 shows the accuracy of k-ﬁngerprinting as the
number of unmonitored training pages is varied. For
the monitored set, 60 instances per hidden service were
trained upon and testing was done on the remaining 20
instances of each hidden service. Again we observe a
marginal loss of TPR and a large reduction in FPR as
the number of training samples grows. When scaling
the number of unmonitored training samples from 2%
to 16% of the entire set the TPR decreases from 82% to
81% while the FPR decreases by an order of magnitude
from 0.2% to 0.02%. As a result, when training on 16%
of the unmonitored set only 16 unmonitored web pages
out of 84,000 were misclassiﬁed as a Tor hidden service.
In comparison to the Alexa web pages monitored set the
TPR is around 10% lower, while the FPR is also greatly
reduced. This is evidence that Tor hidden services are
easy to distinguish from standard web pages loaded over
Tor. There is also a higher but more gradual increase in
BDR compared to standard web pages. An attacker need
only train on as little as 2% of unmonitored pages to have
over 70% conﬁdence that classiﬁcation of a monitored
page was correct, with this rising to 97% when training
on 16% of the unmonitored dataset.
Similarly to Figure 5, Figure 6 shows the TPR and
FPR of k-ﬁngerprinting as the number of unmonitored
web pages used for testing grows while the number of
unmonitored web pages used for training is kept at 2000,
for different values of k. Both the TPR and FPR is lower
USENIX Association  
25th USENIX Security Symposium  1195
9
than in Figure 5. For example using k=5, the FPR is 0.2%
which equates to only 196 out of 98,000 unmonitored
pages being falsely classiﬁed as monitored pages.
From Figure 7 we observe that the BDR of both stan-
dard web pages and hidden services monitored sets de-
pends heavily on not only the world size but the number
of ﬁngerprints used for classiﬁcation. With k=10, when
a web page is classiﬁed as a monitored hidden service
page, there is over an 80% chance that the classiﬁer was
correct, despite the unmonitored world size (98,000) be-
ing over 160 times larger than the monitored world size
(600). The high BDR regardless of the disparity in world
sizes makes it clear that our attack is highly effective un-
der realistic large world size conditions.
It is clear that an attacker need only train on a small
fraction of data to launch a powerful ﬁngerprinting at-
tack. It is also clear that Tor hidden services are easily
distinguished from standard web pages, rendering them
vulnerable to website ﬁngerprinting attacks. We attribute
the lower FPR of Tor hidden services when compared to