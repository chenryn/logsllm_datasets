---
author: Bryant Son
category: 系统运维
comments_data: []
count:
  commentnum: 0
  favtimes: 3
  likes: 0
  sharetimes: 0
  viewnum: 12120
date: '2019-11-07 00:07:00'
editorchoice: false
excerpt: 通过这份 Jenkins 分步教程，构建持续集成和持续交付（CI/CD）流水线。
fromurl: https://opensource.com/article/19/9/intro-building-cicd-pipelines-jenkins
id: 11546
islctt: true
largepic: /data/attachment/album/201911/07/001349rbbbswpeqnnteeee.jpg
permalink: /article-11546-1.html
pic: /data/attachment/album/201911/07/001349rbbbswpeqnnteeee.jpg.thumb.jpg
related:
- displayorder: 0
  raid: 9741
- displayorder: 1
  raid: 11307
reviewer: wxy
selector: lujun9972
summary: 通过这份 Jenkins 分步教程，构建持续集成和持续交付（CI/CD）流水线。
tags:
- Jenkins
thumb: false
title: 用 Jenkins 构建 CI/CD 流水线
titlepic: true
translator: wxy
updated: '2019-11-07 00:07:00'
---
> 
> 通过这份 Jenkins 分步教程，构建持续集成和持续交付（CI/CD）流水线。
> 
> 
> 
![](/data/attachment/album/201911/07/001349rbbbswpeqnnteeee.jpg)
在我的文章《[使用开源工具构建 DevOps 流水线的初学者指南](/article-11307-1.html)》中，我分享了一个从头开始构建 DevOps 流水线的故事。推动该计划的核心技术是 [Jenkins](https://jenkins.io/)，这是一个用于建立持续集成和持续交付（CI/CD）流水线的开源工具。
在花旗，有一个单独的团队为专用的 Jenkins 流水线提供稳定的主从节点环境，但是该环境仅用于质量保证（QA）、构建阶段和生产环境。开发环境仍然是非常手动的，我们的团队需要对其进行自动化以在加快开发工作的同时获得尽可能多的灵活性。这就是我们决定为 DevOps 建立 CI/CD 流水线的原因。Jenkins 的开源版本由于其灵活性、开放性、强大的插件功能和易用性而成为显而易见的选择。
在本文中，我将分步演示如何使用 Jenkins 构建 CI/CD 流水线。
### 什么是流水线？
在进入本教程之前，了解有关 CI/CD  流水线   pipeline 的知识会很有帮助。
首先，了解 Jenkins 本身并不是流水线这一点很有帮助。只是创建一个新的 Jenkins 作业并不能构建一条流水线。可以把 Jenkins 看做一个遥控器，在这里点击按钮即可。当你点击按钮时会发生什么取决于遥控器要控制的内容。Jenkins 为其他应用程序 API、软件库、构建工具等提供了一种插入 Jenkins 的方法，它可以执行并自动化任务。Jenkins 本身不执行任何功能，但是随着其它工具的插入而变得越来越强大。
流水线是一个单独的概念，指的是按顺序连接在一起的事件或作业组：
> 
> “ 流水线   pipeline ”是可以执行的一系列事件或作业。
> 
> 
> 
理解流水线的最简单方法是可视化一系列阶段，如下所示：
![Pipeline example](/data/attachment/album/201911/07/000903hxn0ngte5s3nsxir.jpg "Pipeline example")
在这里，你应该看到两个熟悉的概念： 阶段   Stage 和 步骤   Step 。
* 阶段：一个包含一系列步骤的块。阶段块可以命名为任何名称；它用于可视化流水线过程。
* 步骤：表明要做什么的任务。步骤定义在阶段块内。
在上面的示例图中，阶段 1 可以命名为 “构建”、“收集信息”或其它名称，其它阶段块也可以采用类似的思路。“步骤”只是简单地说放上要执行的内容，它可以是简单的打印命令（例如，`echo "Hello, World"`）、程序执行命令（例如，`java HelloWorld`）、shell 执行命令（ 例如，`chmod 755 Hello`）或任何其他命令，只要通过 Jenkins 环境将其识别为可执行命令即可。
Jenkins 流水线以**编码脚本**的形式提供，通常称为 “Jenkinsfile”，尽管可以用不同的文件名。下面这是一个简单的 Jenkins 流水线文件的示例：
```
// Example of Jenkins pipeline script
pipeline {
  stages {
    stage("Build") {
      steps {
          // Just print a Hello, Pipeline to the console
          echo "Hello, Pipeline!"
          // Compile a Java file. This requires JDKconfiguration from Jenkins
          javac HelloWorld.java
          // Execute the compiled Java binary called HelloWorld. This requires JDK configuration from Jenkins
          java HelloWorld
          // Executes the Apache Maven commands, clean then package. This requires Apache Maven configuration from Jenkins
          mvn clean package ./HelloPackage
          // List the files in current directory path by executing a default shell command
          sh "ls -ltr"
      }
    }
   // And next stages if you want to define further...
  } // End of stages
} // End of pipeline
```
从此示例脚本很容易看到 Jenkins 流水线的结构。请注意，默认情况下某些命令（如 `java`、`javac`和 `mvn`）不可用，需要通过 Jenkins 进行安装和配置。 因此：
> 
> Jenkins 流水线是一种以定义的方式依次执行 Jenkins 作业的方法，方法是将其编码并在多个块中进行结构化，这些块可以包含多个任务的步骤。
> 
> 
> 
好。既然你已经了解了 Jenkins 流水线是什么，我将向你展示如何创建和执行 Jenkins 流水线。在本教程的最后，你将建立一个 Jenkins 流水线，如下所示：
![Final Result](/data/attachment/album/201911/07/000914a8gz1mxm4xt81tir.jpg "Final Result")
### 如何构建 Jenkins 流水线
为了便于遵循本教程的步骤，我创建了一个示例 [GitHub 存储库](https://github.com/bryantson/CICDPractice)和一个视频教程。
开始本教程之前，你需要：
* Java 开发工具包（JDK）：如果尚未安装，请安装 JDK 并将其添加到环境路径中，以便可以通过终端执行 Java 命令（如 `java jar`）。这是利用本教程中使用的 Java Web Archive（WAR）版本的 Jenkins 所必需的（尽管你可以使用任何其他发行版）。
* 基本计算机操作能力：你应该知道如何键入一些代码、通过 shell 执行基本的 Linux 命令以及打开浏览器。
让我们开始吧。
#### 步骤一：下载 Jenkins
导航到 [Jenkins 下载页面](https://jenkins.io/download/)。向下滚动到 “Generic Java package (.war)”，然后单击下载文件；将其保存在易于找到的位置。（如果你选择其他 Jenkins 发行版，除了步骤二之外，本教程的其余步骤应该几乎相同。）使用 WAR 文件的原因是它是个一次性可执行文件，可以轻松地执行和删除。
![Download Jenkins as Java WAR file](/data/attachment/album/201911/07/000930yi1pjh9ay7z9pj77.jpg "Download Jenkins as Java WAR file")
#### 步骤二：以 Java 二进制方式执行 Jenkins