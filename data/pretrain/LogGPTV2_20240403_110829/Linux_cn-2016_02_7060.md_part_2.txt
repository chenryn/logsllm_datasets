`` 中的 UUID 字符串可以随机生成。为了得到一个随机的 uuid 字符串，你可能需要使用 uuid 命令行工具。
```
$ sudo apt-get install uuid
$ uuid
```
生成一个主机 xml 配置文件的方式就是通过一个已经存在的虚拟机来导出它的 xml 配置文件。如下所示。
```
$ virsh dumpxml alice > bob.xml
```
![](/data/attachment/album/201602/28/200343qk3x3da3szkvfez0.jpg)
### 第五步：使用命令行启动虚拟机
在启动虚拟机之前，我们需要创建它的初始磁盘镜像。为此，你需要使用 qemu-img 命令来生成一个 qemu-kvm 镜像。下面的命令将会创建 10 GB 大小的空磁盘，并且它是 qcow2 格式的。
```
$ qemu-img create -f qcow2 /home/dev/images/alice.img 10G
```
使用 qcow2 格式的磁盘镜像的好处就是它在创建之初并不会给它分配全部大小磁盘容量（这里是 10 GB），而是随着虚拟机中文件的增加而逐渐增大。因此，它对空间的使用更加有效。
现在，你可以通过使用之前创建的 xml 配置文件启动你的虚拟机了。下面的命令将会创建一个虚拟机，然后自动启动它。
```
$ virsh create alice.xml
Domain alice created from alice.xml
```
**注意**: 如果你对一个已经存在的虚拟机执行了了上面的命令，那么这个操作将会在没有任何警告的情况下抹去那个已经存在的虚拟机的全部信息。如果你已经创建了一个虚拟机，你可能会使用下面的命令来启动虚拟机。
```
$ virsh start alice.xml
```
使用如下命令确认一个新的虚拟机已经被创建并成功的被启动。
```
$ virsh list
```
```
 Id    Name                           State
----------------------------------------------------
 3     alice                          running
```
同样，使用如下命令确认你的虚拟机的虚拟网卡已经被成功的添加到了你先前创建的 br0 网桥中。
```
$ sudo brctl show
```
![](/data/attachment/album/201602/28/200343zm9z8cg32igls631.jpg)
### 远程连接虚拟机
为了远程访问一个正在运行的虚拟机的控制台，你可以使用VNC客户端。
首先，你需要使用如下命令找出用于虚拟机的VNC端口号。
```
$ sudo netstat -nap | egrep '(kvm|qemu)'
```
![](/data/attachment/album/201602/28/200343u8h9v62hpnz6ptyj.jpg)
在这个例子中，用于 alice 虚拟机的 VNC 端口号是 5900。 然后启动一个VNC客户端，连接到一个端口号为5900的VNC服务器。在我们的例子中，虚拟机支持由CentOS光盘文件启动。
![](/data/attachment/album/201602/28/200344jq1isyi11c0b0npg.jpg)
### 使用 virsh 管理虚拟机
下面列出了 virsh 命令的常规用法：
创建客户机并且启动虚拟机：
```
$ virsh create alice.xml
```
停止虚拟机并且删除客户机：
```
$ virsh destroy alice
```
关闭虚拟机（不用删除它）：
```
$ virsh shutdown alice
```
暂停虚拟机：
```
$ virsh suspend alice
```
恢复虚拟机：
```
$ virsh resume alice
```
访问正在运行的虚拟机的控制台：
```
$ virsh console alice
```
设置虚拟机开机启动：
```
$ virsh autostart alice
```
查看虚拟机的详细信息：
```
$ virsh dominfo alice
```
编辑虚拟机的配置文件：
```
$ virsh edit alice
```
上面的这个命令将会使用一个默认的编辑器来调用主机配置文件。该配置文件中的任何改变都将自动被libvirt验证其正确性。
你也可以在一个virsh会话中管理虚拟机。下面的命令会创建并进入到一个virsh会话中：
```
$ virsh
```
在 virsh 提示中，你可以使用任何 virsh 命令。
![](/data/attachment/album/201602/28/200344hggy37q00mg8b7lq.jpg)
### 问题处理
1. 我在创建虚拟机的时候遇到了一个错误：
error: internal error: no supported architecture for os type 'hvm'
如果你的硬件不支持虚拟化的话你可能就会遇到这个错误。（例如，Intel VT或者AMD-V），这是运行KVM所必需的。如果你遇到了这个错误，而你的cpu支持虚拟化，那么这里可以给你一些可用的解决方案：
首先，检查你的内核模块是否丢失。
```
$ lsmod | grep kvm
```
如果内核模块没有加载，你必须按照如下方式加载它。
```
$ sudo modprobe kvm_intel (for Intel processor)
$ sudo modprobe kvm_amd (for AMD processor)
```
第二个解决方案就是添加 `--connect qemu:///system` 参数到 `virsh` 命令中，如下所示。当你正在你的硬件平台上使用超过一个虚拟机管理器的时候就需要添加这个参数（例如，VirtualBox，VMware）。
```
$ virsh --connect qemu:///system create alice.xml
```
2. 当我试着访问我的虚拟机的登陆控制台的时候遇到了错误：
```
 $ virsh console alice
 error: internal error: cannot find character device 
```
这个错误发生的原因是你没有在你的虚拟机配置文件中定义控制台设备。在 xml 文件中加上下面的内部设备部分即可。
```
```
---
via: 
作者：[Dan Nanni](http://xmodulo.com/author/nanni) 译者：[kylepeng93](https://github.com/kylepeng93) 校对：[Ezio](https://github.com/oska874)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出