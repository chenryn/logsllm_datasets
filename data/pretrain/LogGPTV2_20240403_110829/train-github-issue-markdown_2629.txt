This compiles
    fn func(){}
    fn main(){
        run(func);
        run(func);
    }
    fn run(f: T)
    where T: Fn() + Copy{
        f();
    }
but this does not (playground)
    fn func(){}
    fn main(){
        run(func);
        run(func);
    }
    fn run(f: T)
    where T: Fn() + Clone{
        f();
    }
The only difference is the bounds on T. The Copy trait requires that the Clone
trait is also implemented, so I believe both of these should compile.