**译者：知道创宇404实验室翻译组  
原文链接：**
在这次入侵中(从2021年11月开始)
，一个黑客通过使用[Qbot](https://malpedia.caad.fkie.fraunhofer.de/details/win.qakbot)(又名
Quakbot/Qakbot)恶意软件在环境中获得了最初的立足点。
在 Qbot 有效载荷执行后不久，恶意软件建立了 c2连接并在beachhead 长期存在。成功利用
[Zerologon](https://www.crowdstrike.com/blog/cve-2020-1472-zerologon-security-advisory/)漏洞(CVE-2020-1472)允许攻击者获得域管理员权限。这一级别的访问被用来部署额外的Cobalt
Strike信标，从而转向网络内的其他敏感主机。然后，攻击者在被驱逐出网络之前将敏感文档从环境中提取出来。
### 摘要
攻击者通过执行恶意 DLL 获得了对 Windows 工作站的初始访问权。QBot 的第一个活动是在 DLL
执行后5分钟发现的。各种各样的自动发现命令被用来映射网络拓扑，检索本地组成员信息，以及列出受感染用户的可用文件共享/特权。
在第一个发现阶段之后，Qbot 植入了另一个恶意 DLL 并创建了一个计划任务以获得持久性。计划任务的主要目的是每30分钟执行一个(base64编码的)
PowerShell Cobalt Strike 信标。
一旦攻击者建立了持久性，他们就会继续枚举环境，通过使用Nltest、net和ADFind等工具映射出Active Directory环境。
在识别出一个域控制器之后，攻击者开始利用 ZeroLogon 漏洞。使用的可执行文件与前一个案例[From Zero to Domain
Admin](https://thedfirreport.com/2021/11/01/from-zero-to-domain-admin/)中基于命令行参数和漏洞的总体执行使用的文件有惊人的相似性。命名为 cool.exe
的可执行文件将网域控制器密码重置为一个空字符串，检索域管理密码 Hash，并在 DC 上安装一个服务来重置 DC 密码，以免破坏Active
Directory操作。
然后，域管理散列通过一种over-pass-the-hash攻击在滩头上使用。在拥有域管理员特权之后，他们继续在一个文件服务器和另一个域控制器服务器上部署
Cobalt Strike 信标，这使得他们可以转向这些服务器。
最后，文件被盗并通过 Cobalt Strike 加密的 c2通道(HTTPS)进行泄露。而案件的结束点，就在黑客在完成任何进一步目标之前被驱逐出网络。
### Timeline 时间轴
分析和报告由[@pigerlin](https://twitter.com/pigerlin)和[@MetallicHack](https://twitter.com/MetallicHack)完成。
检测:[@ICSNick](https://twitter.com/IcsNick) 和
[@kostastsale](https://twitter.com/Kostastsale)
### 初始访问
攻击者通过执行恶意 DLL 获得了初始访问权限。传统上，Qbot 是通过使用恶意文档的电子邮件传递的，然后下载恶意
DLL。但是，在这次案例中，执行直接从[这里](https://tria.ge/211115-r554waafe6)找到的 qbot DLL 开始。
这种 QBot 感染的执行链如下:
### 执行
#### QBot PowerShell 分析
我们分析了定时任务`HKCU:\SOFTWARE\Pvoeooxf`查询的注册表路径和相关键，发现创建了三个包含
base64编码值的键。对这些值进行解码后得出:
  1. QBot DLL 的副本
  2. 由分号分隔的 QBot C2 ip 地址字符串
  3. 计划任务引用的模糊化 PowerShell 脚本
[
PowerShell 脚本(由定时任务触发)启动一系列事件，如下所示:
[
在第一次运行时，脚本在相同的路径中创建一个新的注册表项，保存执行日期。然后在执行时验证此注册表项的创建日期键是否超过4小时。
[
根据结果，它将: (1)从 Windows 注册表中检索 base64编码的 Qbot 有效负载，对其进行解码，将其保存在文件系统中并执行它。
[
或者(2)借助`Invoke-WebRequest`PowerShell 模块使用的一个活动的 C2 ip 远程获取 QBot 有效负载:
[
PS 脚本包含执行各种类型有效负载（）包括批处理和 visualbasic 文件）的内置逻辑。
[
存储在注册表中的经过编码的 QBot DLL 被植入在目录`%APPDATA%\Roaming\Microsoft\Fdopitcu`中。这个无符号
DLL带有描述符`Cancel Autoplay 2`，使用`regsvr32.exe`执行
[
[
在执行这个第二阶段 DLL 时，`HKCU\Software\Microsoft\Yerqbqokc.`里创建了各种注册表项。此外，还启动了一个新的
explorer.exe 实例(32bit) ，并将其注入。
[
注册表键包含八个字符长的十六进制字符串，我们认为这是恶意软件的加密[配置](https://www.binarydefense.com/qakbot-upgrades-to-stealthier-persistence-method/)的一部分。
[
### 持久性
#### Beachhead 的计划任务
由 Qbot 创建的计划任务被设置为每30分钟运行一次，并执行存储在 Windows 注册表中的 base64编码的有效负载。
    schtasks.exe /Create /F /TN "{97F2F70B-10D1-4447-A2F3-9B070C86E261}" /TR "cmd /c start /min \"\" powershell.exe -Command IEX([System.Text.Encoding]::ASCII.GetString([System.Convert]::FromBase64String((Get-ItemProperty -Path HKCU:\SOFTWARE\Pvoeooxf).yzbbvhhdypa))) " /SC MINUTE /MO 30
[
    LogName: Microsoft-Windows-TaskScheduler/Operational 
    EventCode: 106
    Message: Task scheduler Task Registered
### 权限提升
在获得初始访问权限30分钟后，攻击者在Beachhead运行一个可执行文件，利用 CVE-2020-1472，Zerologon漏洞。
可执行文件名为“ cool.exe”:
    C:\Windows\system32\cmd.exe /C cool.exe [DC IP ADDRESS] [DOMAIN NAME] Administrator -c "taskkill /f /im explorer.exe"
[
在 [Zerologon](https://blogs.blackberry.com/en/2021/03/zerologon-to-ransomware)
攻击后3毫秒后，事件4742“计算机帐户被更改”在目标网域控制器上产生了。
正如[CrowdStrike](https://www.crowdstrike.com/blog/cve-2020-1472-zerologon-security-advisory/)在一篇详细的博客中所解释的那样，ZeroLogon CVE 依赖于与 zero IV 一起使用的 AES-CFB8
算法:
> “为了安全地使用 AES-CFB8，需要为每个明文生成一个随机初始向量(IV)
> ，以使用相同的密钥进行加密。但是，ComputeNetlogonCredential 函数将 IV
> 设置为16个零字节的固定值。这导致了一个加密漏洞，即8字节的零的加密可以产生零的密文，其概率为1/256。未加密的 Netlogon
> 会话未被服务器拒绝(默认情况下)的时候也会因此此攻击。这两个漏洞的结合可能使攻击者完全破坏身份验证，从而假冒他们选中的服务器。”
正如我们在网络图片中看到的，为了伪造域控制器的身份，进行了强制攻击:
[
在强力通信结束之后，我们可以看到一个单独的实例，其中一个漏洞已经成功完成。
[
成功验证后，设置了 DC 密码:
[
PasswordLastSet 字段等于 TimeCreated 字段，这意味着域控制器的密码已经成功更新。我们还可以看到 SubjectUserName
是匿名登录。
黑客使用 DC 帐户执行了从beachhead到域控制器的连接。在使用 DC 帐户对 DC 进行身份验证之后，黑客将植入 Domain Admin
散列，然后重置 DC 密码以恢复 activedirectory 域。
[
explorer shell也被黑客重新启动:
[
### Defense 回避
在执行初始 DLL 时，QBot 使用进程空洞化来启动 explorer.exe (32位)的挂起实例，然后将自身注入到这个进程中。
[
注入的 explorer.exe 进程用于生成并注入到 explorer.exe (32位)的其他实例中。下面可以看到一个示例事件。源码 PID
10492属于 QBot，注入一个 DLL 到 PID 4072，我们发现这是Cobalt Strike c2通信的一部分。
[
#### 来自 Beachhead 的 Over-Pass-the-Hash
攻击者通过 Zerologon 漏洞获得管理员帐户的 NTLM 散列值，并使用 over-pass-The-hash 向管理网域控制器请求
TGT。我们以前已经看到过几次使用over-pass-the-hash的情况。
[
不久之后，攻击者要求为管理员账户提供一个 TGT:
[
### 发现
QBot 最初会启动许多进程来收集关于受影响系统的信息。这是“SYSTEM INFO” bot 请求的一部分，如 secureist
最近的一篇[文章](https://securelist.com/qakbot-technical-analysis/103931/)所述。
后来，攻击者通过 Cobalt Strike 信标执行了更多的discovery命令，收集有关活动目录环境的信息。
[
ADFind (在find.exe中重命名)用于枚举计算机
    C:\redacted\find.exe  -f objectcategory=computer -csv name cn OperatingSystem dNSHostName
在域控制器上，攻击者通过WMI收集有关已安装安全软件的信息:
[
    C:\Windows\system32\cmd.exe /C wmic /namespace:\\root\SecurityCenter2 PATH AntiSpywareProduct GET /value
    C:\Windows\system32\cmd.exe /C wmic /namespace:\\root\SecurityCenter2 PATH AntiVirusProduct GET /value
    C:\Windows\system32\cmd.exe /C wmic /namespace:\\root\SecurityCenter2 PATH FirewallProduct GET /value
Ping 被用来验证机器是否在线
    ping -n 1 [REDACTED]
### 横向移动
通过创建 Windows 服务，Cobalt Strike 信标(psexec_psh 函数)被部署在环境中的多台主机上。
    EventCode: 7045
    Service File Name: %COMSPEC% /b /c start /b /min powershell -nop -w hidden -encodedcommand 
    User: NT AUTHORITY\SYSTEM
    ParentImage: C:\Windows\System32\services.exe
    ParentCommandLine: C:\Windows\system32\services.exe
在第一个域控制器上，Cobalt Strike 服务被安装了:
[
    Log Source: Microsoft-Windows-Service Control Manager Event ID:7045
Cobalt Strike 在整个环境中安装了多种服务，以下是一些例子:
    HKLM\System\CurrentControlSet\Services\3141131\ImagePath 
    HKLM\System\CurrentControlSet\Services\af5ff02\ImagePath 
    HKLM\System\CurrentControlSet\Services\c46234f\ImagePath
Cobalt Strike 首先调用 **OpenSCManagerW** 远程创建服务，然后用 **StartServiceA** 函数启动它:
[
#### RDP/交互式登录
黑客在不同的主机上执行不同的命令来启用 RDP 服务:
增加允许的最大 RDP 连接数，在这种情况下是任意大的数量。
    REG  ADD "HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp" /t REG_DWORD /v "MaxInstanceCount" /d 0xffffffff /f
确保启用了 RDP 侦听器。
    REG  ADD "HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp" /t REG_DWORD /v "fEnableWinStation" /d 1 /f
确保允许用户 RDP 到终端服务器。
    REG  ADD "HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server" /t REG_DWORD /v "TSUserEnabled" /d 0 /f
确保终端服务器设置为启用。
    REG ADD "HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server" /t REG_DWORD /v "TSEnabled" /d 1 /f
确保终端服务设置为远程管理模式。
    REG ADD "HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server" /t REG_DWORD /v "TSAppCompat" /d 0 /f
确保终端服务将启动空闲会话。
    REG ADD "HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server" /t REG_DWORD /v "IdleWinStationPoolCount" /d 1 /f
启用终端服务器的广告。
    REG ADD "HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server" /t REG_DWORD /v "TSAdvertise" /d 1 /f
确保终端服务器设置为允许连接。
    REG ADD "HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server" /t REG_DWORD /v "AllowTSConnections" /d 1 /f
确保终端服务器设置为同步会话。
    REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server\Licensing Core" /t REG_DWORD /v "EnableConcurrentSessions" /d 1 /f
确保允许多个会话。
    REG ADD "HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server" /t REG_DWORD /v "fSingleSessionPerUser" /d 0 /f
启动终端服务并将服务设置为自动启动。
    sc config termservice start= auto
    net  start termservice /y
然后，攻击者建立交互式管理 RDP 会话，并转移到网络中的不同主机。
[
    LogName=Security
    EventCode=4624
    Logon Type=10 (Remote Interactive Logon - RDP)
### Named pipe (SMB)
### 命名管道(SMB)
Base64编码的有效载荷可以使用 Cyberchef
[配方](https://gist.github.com/0xtornado/69d12572520122cb9bddc2d6793d97ab)（由
[@0xtornado](https://twitter.com/0xtornado)提出) 进行解码，该配方代表一个 SMB
信标，创建命名管道“dce_3d”。
[
[
    LogName=Microsoft-Windows-System/Operational
    EventCode=17