# 服务器配置优化指南

## 连接与认证
- **password_encryption**: 开启
- **其他设置**: 无

## 服务器配置
### 自定义选项
- **custom_variable_classes**: 无

### 开发者选项
- **ignore_system_indexes**: 关闭
- **post_auth_delay**: 0秒 (最小值: 0, 最大值: 2147483647)
- **allow_system_table_mods**: 开启
- **trace_recovery_messages**: 日志 (枚举值: debug5, debug4, debug3, debug2, debug1, log, notice, warning, error)
- **pre_auth_delay**: 0秒 (最小值: 0, 最大值: 60)
- **zero_damaged_pages**: 关闭
- **debug_assertions**: 关闭
- **trace_sort**: 关闭
- **trace_notify**: 关闭

### 错误处理
- **restart_after_crash**: 开启
- **exit_on_error**: 关闭

### 文件位置
- **config_file**: `/pgdata/digoal/1921/data02/pg_root/postgresql.conf`
- **hba_file**: `/pgdata/digoal/1921/data02/pg_root/pg_hba.conf`
- **data_directory**: `/pgdata/digoal/1921/data02/pg_root`
- **ident_file**: `/pgdata/digoal/1921/data02/pg_root/pg_ident.conf`
- **external_pid_file**: 无

### 锁管理
- **max_pred_locks_per_transaction**: 640000 (最小值: 10, 最大值: 2147483647)
- **max_locks_per_transaction**: 64 (最小值: 10, 最大值: 2147483647)
- **deadlock_timeout**: 1000毫秒 (最小值: 1, 最大值: 2147483647)

### 预设选项
- **server_version**: 9.1.3
- **wal_block_size**: 8192字节 (固定值: 8192)
- **server_version_num**: 90103 (固定值: 90103)
- **block_size**: 8192字节 (固定值: 8192)
- **segment_size**: 131072字节 (固定值: 131072, 单位: 8kB)
- **integer_datetimes**: 开启
- **max_index_keys**: 32 (固定值: 32)
- **wal_segment_size**: 8192字节 (固定值: 8192, 单位: 8kB)
- **max_identifier_length**: 63 (固定值: 63)
- **max_function_args**: 100 (固定值: 100)

### 查询调优 - 遗传查询优化器
- **geqo_effort**: 5 (最小值: 1, 最大值: 10)
- **geqo**: 开启
- **geqo_generations**: 0 (最小值: 0, 最大值: 2147483647)
- **geqo_pool_size**: 0 (最小值: 0, 最大值: 2147483647)
- **geqo_seed**: 0 (最小值: 0, 最大值: 1)
- **geqo_selection_bias**: 2 (最小值: 1.5, 最大值: 2)
- **geqo_threshold**: 12 (最小值: 2, 最大值: 2147483647)

### 查询调优 - 其他规划器选项
- **constraint_exclusion**: 分区 (枚举值: partition, on, off)
- **from_collapse_limit**: 8 (最小值: 1, 最大值: 2147483647)
- **cursor_tuple_fraction**: 0.1 (最小值: 0, 最大值: 1)
- **join_collapse_limit**: 8 (最小值: 1, 最大值: 2147483647)
- **default_statistics_target**: 100 (最小值: 1, 最大值: 10000)

### 查询调优 - 规划器成本常量
- **cpu_operator_cost**: 0.0025 (最小值: 0, 最大值: 1.79769e+308)
- **effective_cache_size**: 16384 (最小值: 1, 最大值: 2147483647, 单位: 8kB)
- **cpu_index_tuple_cost**: 0.005 (最小值: 0, 最大值: 1.79769e+308)
- **cpu_tuple_cost**: 0.01 (最小值: 0, 最大值: 1.79769e+308)
- **seq_page_cost**: 1 (最小值: 0, 最大值: 1.79769e+308)
- **random_page_cost**: 4 (最小值: 0, 最大值: 1.79769e+308)

### 查询调优 - 规划器方法配置
- **enable_hashjoin**: 开启
- **enable_indexscan**: 开启
- **enable_material**: 开启
- **enable_mergejoin**: 开启
- **enable_tidscan**: 开启
- **enable_sort**: 开启
- **enable_nestloop**: 开启
- **enable_seqscan**: 关闭
- **enable_bitmapscan**: 开启
- **enable_hashagg**: 开启

### 复制 - 主服务器
- **max_wal_senders**: 0 (最小值: 0, 最大值: 8388607)
- **wal_keep_segments**: 0 (最小值: 0, 最大值: 2147483647)
- **synchronous_standby_names**: 无
- **wal_sender_delay**: 1000毫秒 (最小值: 1, 最大值: 10000)
- **replication_timeout**: 60000毫秒 (最小值: 0, 最大值: 2147483647)
- **vacuum_defer_cleanup_age**: 0 (最小值: 0, 最大值: 1000000)

### 复制 - 备用服务器
- **hot_standby**: 关闭
- **max_standby_streaming_delay**: 30000毫秒 (最小值: -1, 最大值: 2147483647)
- **hot_standby_feedback**: 关闭
- **wal_receiver_status_interval**: 10秒 (最小值: 0, 最大值: 2147483)

### 报告和日志 - 记录内容
- **log_disconnections**: 关闭
- **log_connections**: 关闭
- **log_line_prefix**: 无
- **log_autovacuum_min_duration**: -1毫秒 (最小值: -1, 最大值: 2147483647)
- **log_hostname**: 关闭
- **log_timezone**: PRC
- **log_checkpoints**: 关闭
- **log_statement**: none (枚举值: none, ddl, mod, all)
- **log_duration**: 关闭
- **log_error_verbosity**: 默认 (枚举值: terse, default, verbose)
- **log_lock_waits**: 关闭
- **log_temp_files**: -1千字节 (最小值: -1, 最大值: 2147483647)
- **debug_pretty_print**: 开启
- **debug_print_parse**: 关闭
- **debug_print_plan**: 关闭
- **application_name**: psql
- **debug_print_rewritten**: 关闭

### 报告和日志 - 记录时机
- **log_min_duration_statement**: -1毫秒 (最小值: -1, 最大值: 2147483647)
- **log_min_messages**: 警告 (枚举值: debug5, debug4, debug3, debug2, debug1, info, notice, warning, error, log, fatal, panic)
- **log_min_error_statement**: 错误 (枚举值: debug5, debug4, debug3, debug2, debug1, info, notice, warning, error, log, fatal, panic)
- **client_min_messages**: 通知 (枚举值: debug5, debug4, debug3, debug2, debug1, log, notice, warning, error)

### 报告和日志 - 记录位置
- **silent_mode**: 关闭
- **logging_collector**: 关闭
- **log_rotation_size**: 10240千字节 (最小值: 0, 最大值: 2097151)
- **log_truncate_on_rotation**: 关闭
- **log_destination**: 标准错误输出
- **log_filename**: postgresql-%Y-%m-%d_%H%M%S.log
- **log_rotation_age**: 1440分钟 (最小值: 0, 最大值: 35791394)
- **log_directory**: pg_log
- **syslog_ident**: postgres
- **syslog_facility**: local0 (枚举值: local0, local1, local2, local3, local4, local5, local6, local7)
- **log_file_mode**: 0600 (最小值: 0, 最大值: 511)

### 资源使用 - 异步行为
- **effective_io_concurrency**: 1 (最小值: 0, 最大值: 1000)

### 资源使用 - 后台写入器
- **bgwriter_lru_multiplier**: 2 (最小值: 0, 最大值: 10)
- **bgwriter_lru_maxpages**: 100 (最小值: 0, 最大值: 1000)
- **bgwriter_delay**: 200毫秒 (最小值: 10, 最大值: 10000)

### 资源使用 - 基于成本的真空延迟
- **vacuum_cost_page_dirty**: 20 (最小值: 0, 最大值: 10000)
- **vacuum_cost_page_hit**: 1 (最小值: 0, 最大值: 10000)
- **vacuum_cost_page_miss**: 10 (最小值: 0, 最大值: 10000)
- **vacuum_cost_delay**: 0毫秒 (最小值: 0, 最大值: 100)
- **vacuum_cost_limit**: 200 (最小值: 1, 最大值: 10000)

### 资源使用 - 内核资源
- **shared_preload_libraries**: 无
- **max_files_per_process**: 1000 (最小值: 25, 最大值: 2147483647)

### 资源使用 - 内存
- **track_activity_query_size**: 1024 (最小值: 100, 最大值: 102400)
- **shared_buffers**: 4096 (最小值: 16, 最大值: 1073741823, 单位: 8kB)
- **max_prepared_transactions**: 0 (最小值: 0, 最大值: 8388607)
- **max_stack_depth**: 2048千字节 (最小值: 100, 最大值: 2147483647)
- **temp_buffers**: 1024 (最小值: 100, 最大值: 1073741823, 单位: 8kB)
- **work_mem**: 1024千字节 (最小值: 64, 最大值: 2147483647)
- **maintenance_work_mem**: 16384千字节 (最小值: 1024, 最大值: 2147483647)

### 统计 - 监控
- **log_parser_stats**: 关闭
- **log_executor_stats**: 关闭
- **log_planner_stats**: 关闭
- **log_statement_stats**: 关闭

### 统计 - 查询和索引统计收集器
- **stats_temp_directory**: pg_stat_tmp
- **track_functions**: none (枚举值: none, pl, all)
- **track_activities**: 开启
- **track_counts**: 开启
- **update_process_title**: 开启

### 版本和平台兼容性 - 其他平台和客户端
- **transform_null_equals**: 关闭

### 版本和平台兼容性 - 以前的PostgreSQL版本
- **lo_compat_privileges**: 关闭
- **quote_all_identifiers**: 关闭
- **synchronize_seqscans**: 开启
- **sql_inheritance**: 开启
- **escape_string_warning**: 开启
- **backslash_quote**: 安全编码 (枚举值: safe_encoding, on, off)
- **array_nulls**: 开启
- **default_with_oids**: 关闭
- **standard_conforming_strings**: 开启

### 预写日志 - 归档
- **archive_mode**: 关闭
- **archive_command**: 禁用
- **archive_timeout**: 0秒 (最小值: 0, 最大值: 2147483647)

### 预写日志 - 检查点
- **checkpoint_timeout**: 300秒 (最小值: 30, 最大值: 3600)
- **checkpoint_warning**: 30秒 (最小值: 0, 最大值: 2147483647)
- **checkpoint_completion_target**: 0.5 (最小值: 0, 最大值: 1)
- **checkpoint_segments**: 3 (最小值: 1, 最大值: 2147483647)

### 预写日志 - 设置
- **wal_level**: 最小 (枚举值: minimal, archive, hot_standby)
- **wal_buffers**: 128 (最小值: -1, 最大值: 2147483647, 单位: 8kB)
- **fsync**: 开启
- **wal_sync_method**: fdatasync (枚举值: fsync, fdatasync, open_sync)
- **wal_writer_delay**: 200毫秒 (最小值: 1, 最大值: 10000)
- **full_page_writes**: 开启
- **commit_delay**: 0 (最小值: 0, 最大值: 100000)
- **synchronous_commit**: 开启 (枚举值: local, on, off)
- **commit_siblings**: 5 (最小值: 0, 最大值: 1000)

### 常见初始化后的参数调整
- **listen_addresses**: '0.0.0.0' (监听地址)
- **port**: 5432 (可更改为其他端口)
- **max_connections**: 1000 (最大允许连接数，根据实际环境设定)
- **superuser_reserved_connections**: 13 (保留给超级用户的连接数)
- **unix_socket_directory**: '/pgdata/digoal/1921/data02/pg_root' (默认是/tmp, 不太安全, 放到$PGDATA比较靠谱)
- **unix_socket_permissions**: 0700 (修改unix socket文件的权限为700)
- **tcp_keepalives_idle**: 60秒 (TCP连接空闲多长时间后发出keepalive包)
- **tcp_keepalives_interval**: 10秒 (间隔多长时间再发一次)
- **tcp_keepalives_count**: 6 (总共发几次keepalive包)
- **shared_buffers**: 512MB (在第一天的内容中包含了计算shared_buffers的方法)
- **work_mem**: 1MB (默认是1MB, 如果发现数据经常使用临时文件排序或group by等, 可以考虑设置为一个较大的值)
- **maintenance_work_mem**: 512MB (用于创建索引的操作,vacuum操作. 按需使用)
- **max_stack_depth**: 8MB (一般设置为ulimit 的stack size一致或略小)
- **shared_preload_libraries**: 'pg_stat_statements' (启动数据库集群时加载的库, 这里表示加载pg_stat_statements, 一个用于统计SQL执行次数, CPU开销等的模块)
- **vacuum_cost_delay**: 10毫秒 (VACUUM操作比较消耗IO, 设置延时是指VACUUM操作消耗的成本大于vacuum_cost_limit后延迟10毫秒再继续执行)
- **bgwriter_delay**: 10毫秒 (每个background writer运行周期之间延迟10毫秒)
- **wal_level**: hot_standby (WAL级别, 如果要开启备份必须设置为archive或hot_standby, 如果要建立hot_standy则必须设置为hot_standby)
- **synchronous_commit**: 关闭 (关闭XLOG的同步写, 可以大大提高写事务的处理能力, 不会破坏数据库一致性, 但是如果数据库异常DOWN机需要recovery时, 恢复后的数据库可能丢失最后10毫秒(wal_writer_delay)的事务)
- **wal_sync_method**: fdatasync (使用pg_test_fsync测试出系统使用哪种sync接口效率最高)
- **wal_buffers**: 16384kB (一般繁忙的系统设置为xlog文件段的大小)
- **wal_writer_delay**: 10毫秒 (WAL日志写操作round之间延迟10毫秒)
- **commit_delay**: 0 (在事务提交的同时如果系统中有大于等于commit_siblings个未提交事务时, 等待0毫秒, 合并这些提交事务的IO请求, 降低IO请求次数)
- **commit_siblings**: 5
- **checkpoint_segments**: 256 (多少个xlog rotate后触发checkpoint, checkpoint segments一般设置为大于shared_buffer的SIZE)
- **archive_mode**: 开启 (开启归档, 修改这个配置需要重启, 所以一般安装好就开启)
- **archive_command**: '/bin/date' (这个可以RELOAD, 一般的做法是先设置一个空转命令)
- **max_wal_senders**: 32 (修改这个配置需要重启数据库, 所以一般的做法是先设置一个数字)
- **wal_sender_delay**: 10毫秒 (在每个轮次中, WAL发送器将自上次轮次以来累积的所有WAL发送到备用服务器, 然后休眠wal_sender_delay毫秒, 并重复. 休眠会被事务提交中断, 因此无论此设置如何, 提交的事务效果都会立即发送到备用服务器)
- **wal_keep_segments**: 0 (在主库中至少保留多少个xlog segment, 哪怕有一些XLOG已经不需要被数据库recovery使用)

### 同步流复制
- **synchronous_standby_names**: '' (如果打算配置同步流复制, 则需要配置这个参数. 同一时间只有一个同步复制角色standby, 如果这个节点挂了或者因为某些原因延迟了, 第二个配置节点将接替同步复制standby的角色)
- **hot_standby**: 开启 (这是standby节点的配置, 是否允许客户端连接standby进行只读操作)
- **max_standby_archive_delay**: 300秒 (在规定的时间内必须完成archive standby的replay操作. 不影响接收操作. 计时从最近一次replay赶上receive的时间开始算)
- **max_standby_streaming_delay**: 300秒 (在规定的时间内必须完成streaming standby的replay操作. 不影响接收操作. 计时从最近一次replay赶上receive的时间开始算)
- **wal_receiver_status_interval**: 10秒 (指定备用服务器上的WAL接收进程向主服务器发送复制进度信息的最小频率, 可以通过pg_stat_replication视图查看. 更新会在每次写或刷新位置变化时发送, 或者至少按照此参数指定的频率发送. 因此, 应用位置可能会稍微落后于真实位置)
- **hot_standby_feedback**: 开启 (指定热备是否向主服务器发送当前正在执行的查询的反馈)

### 性能优化
- **random_page_cost**: 2.0 (调小后更倾向使用索引, 而非全表扫描)
- **effective_cache_size**: 12000MB (调大后更倾向使用索引, 而非全表扫描)
- **log_destination**: 'csvlog' (便于导入到库中进行分析)
- **logging_collector**: 开启
- **log_directory**: '/var/applog/pg_log/集群名/port号'
- **log_filename**: 'postgresql-%Y-%m-%d_%H%M%S.log'
- **log_file_mode**: 0600
- **log_truncate_on_rotation**: 开启 (便于维护日志文件)