1) Retrieve forwarding decision: It ﬁrst locates its seg-
ment Oi based on OFFSET and TYPE (which encodes
the direction of forwarding) in the header. It then
decrypts χi to recover the ingress interface ig, egress
interface eg.
2) Veriﬁcation: Oi is valid if the following conditions
hold: i) For a forward packet (e.g., data), d = ig; for
a backward packet (e.g., reply, data), d = eg, ii)
MAC veriﬁcation succeeds (i.e., the AD re-computes
the MAC using its current secret key and the infor-
mation embedded in the header, and checks if the
resulting MAC matches the one included in Oi.)
3) Forwarding: If this segment
the AD de-
termines the exiting interface and adjusts the offset.
is valid,
510
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:49:13 UTC from IEEE Xplore.  Restrictions apply. 
In our example, since this is a backward packet,
the exiting interface is ig and the offset should be
decreased by 1. The AD then forwards the packet to
the exiting interface.
Since ADs rotate their short-term keys periodically (e.g.,
every hour) for security, Alice may have to renew or request
a new e-path if any key for decrypting or verifying the e-
path expires during her session. LAP can support efﬁcient
renewal by embedding updated e-path in data packets.
Session unlinkability.
Alice can request a new e-path
(by specifying a different nonce) for every new session to
achieve session unlinkability. Also, the encryption algorithm
should be secure against chosen-plaintext attacks such that
encrypting the same plaintext twice would result in two
different ciphertexts with high probability. For example,
one can use AES in CTR mode. The initialization vector
(IV) in CTR mode can be derived from the nonce and the
previous Oi to avoid allocating extra space for storing IV
in the packet. Since a different nonce or routing path would
result in a new e-path, an attacker has a low success rate in
correlating two separate sessions based on an e-path.
C. Controllable Privacy Levels
Encrypting every AD hop in LAP increases the packet
header size and computational overhead, and may reduce
the ﬂexibility in routing (e.g., in the case of multipaths, the
sender cannot make an informed decision in path selection
without knowing which ADs are on the path.) Although
LAP provides negligible computational overhead on routers
(see Section VIII) and we anticipate that routers will be
improved to support larger packets, users may still want to
trade privacy for improved performance.
LAP provides options for end-hosts to control the length
of e-paths, which results in differentiated privacy disclosure.
The intuition is that the degree of anonymity and privacy
(in terms of the size of an anonymity set) increases with the
length of an e-path (in terms of the number of AD-hops).
More speciﬁcally, Alice speciﬁes the desired length of the
e-path in a Hop-to-Encrypt (HTE) ﬁeld in the request
packet. Each AD checks the HTE ﬁeld before updating the
e-path, and if HTE ≥ 1, the AD updates the request
packet as usual and decreases the HTE ﬁeld by 1. If HTE
reaches zero before reaching Bob,
the intermediate AD
returns the e-path to Alice on a reply packet. Similarly,
if Bob receives the packet with HTE ≥ 0, Bob returns
the e-path to Alice on a reply packet. Note that to use
such partially encrypted paths, packets have to contain an
extra ﬁeld storing the destination’s address (which, however,
can be in plaintext, as receiver anonymity is provided using
rendezvous points, as will be explained in Section IV-D).
During the forwarding phase, the AD at the end of the e-
path converts data packets between the LAP- and regular-
mode. For example, in BGP routing, the AD encapsulates
the e-path in a normal IP packet and sets the source address
to be its own address and the destination address to Bob’s.
D. Path Publishing for Receiver Anonymity
We have shown that Alice can achieve sender anonymity
and location privacy by constructing an e-path to Bob (i.e.,
only Alice’s ﬁrst-hop AD knows her identity and location).
However, sometimes Bob may want privacy protection as
well. For example, a user running a controversial website
(e.g., WikiLeaks) would prefer to hide his location and
permanent identity to prevent tracking or avoid censorship.
However, since a receiver is unaware of who a sender might
be in advance, the challenges become (1) how the receiver
constructs an e-path for any potential sender and (2) how a
sender looks up the receiver’s e-path without knowing his
permanent identity.
At a high level, to achieve receiver anonymity, Alice and
Bob each initiate an e-path to a rendezvous point so that
only the local ADs know the identity of end-hosts. Such
an indirection technique is commonly used in anonymity
systems [1]. To address the second challenge, Bob publishes
his e-path associated with his pseudonym on a publicly-
accessible path server. As a result, a sender knowing Bob’s
pseudonym (e.g., via out-of-band communication) can re-
trieve Bob’s e-path from the path server and reach Bob
through the rendezvous AD. In theory, any AD in the
Internet could be a rendezvous point or host a path server. To
minimize the path stretch and communication overhead, in
practice, tier-1 ADs are a reasonable choice of rendezvous
ADs and path server administrators, because most of the
Internet trafﬁc goes through tier-1 ADs.
E. Padding Against Size-Based Trafﬁc Analysis
If we use ﬁxed-size segments, an attacker can determine
the distance (in terms of AD hops) to a sender based on the
size of the header. Hence, LAP allows ADs to pad segments
(variable-size segments) to enhance topological anonymity.
As mentioned in Section IV-A, the size of each variable-size
segment is in multiples of 128 bits. For proper decryption
and adjustment of the offset, each AD needs to know the size
of its own segment. Hence, to allow proper operations on
both forward and backward packets, an AD using a variable-
size segment encodes the size in both the ﬁrst and last 128-
bit blocks in the SIZE ﬁeld as follows: ADi (1) creates the
ﬁrst 128-bit block Oi using symmetric key ki as described
in Section IV-B; and (2) copies the same INGRESS, EGRESS,
and SIZE to the last 128-bit block of its segment, and creates
the MAC over the entire segment using another symmetric
key k(cid:2)
i. In this manner, the ﬁrst 128-bit block looks different
from the last 128-bit block. With this process, the AD can
recover the length of its own segment from either the ﬁrst
or the last 128 bits of the segment, and adjust the offset
properly. For (1), note that since an AD does not know the
511
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:49:13 UTC from IEEE Xplore.  Restrictions apply. 
size of the previous segment, it computes a MAC over the
last 128 bits of the previous segment.
With these variable-size segments, an attacker can only
obtain an upper bound on the distance to the sender, which
is the size of the e-path in bits divided by 128. The optimal
way of padding results in an e-path of 128 · l bits, where l
is the distance of the farthest potential sender in AD hops.
V. PRELIMINARY ANALYSIS
In this section, we illustrate that
the current Internet
provides minimal anonymity, and demonstrate how LAP can
increase the level of anonymity with a real Internet topology.
A. Anonymity and Privacy in the Current Internet
Anonymity in the Internet is hindered by long lasting end-
host identiﬁers, namely IP addresses. From a network layer’s
perspective, IP addresses identify both the source and the
destination of the trafﬁc. Hence, by snooping on trafﬁc ﬂows,
malicious nodes can easily determine which end-hosts are
communicating with each other and link different sessions to
the same end-hosts. While public servers prefer long-lasting
IP addresses for availability, current Internet protocols and
ISP policies generally assign IP addresses that last on the
order of days [24] to clients who have no desire to run
public servers. Typically, these IP addresses (from the ISPs
allocated address space) change only when the DHCP lease
time expires. While NAT boxes can provide an anonymity set
greater than one, devices behind them are usually both small
in number and in the same geographical area, thus providing
extremely limited privacy guarantees. In the cellular realm,
the situation is better since providers’ NATs can mask a
wider range of clients [25]. Ideally, privacy solutions should
be available in all domains that easily allow end-hosts to
retain anonymity at the network level.
Consequently, while the current Internet intrinsically pro-
vides a certain level of anonymity based on dynamic ad-
dressing techniques (e.g., DHCP and NAT), the degree of
anonymity is constrained by the size of the IP preﬁxes. More
speciﬁcally, we estimate the anonymity set size by analyzing
the announced preﬁx sizes and the number of subscribers of
six main ISPs in the U.S., as Table I summarizes. We group
the preﬁxes (extracted from the RouteViews dataset [26])
into ISPs using AS description from the CIDR report.5
Assuming that subscribers are uniformly distributed in an
ISP’s address space, the size of an anonymity set can be as
low as 24.7 (cid:5) 26.
Similar studies have shown that hiding behind a preﬁx
provides insufﬁcient anonymity [7]. Although aggregating
preﬁxes associated with the same location may increase the
size of the anonymity set (but not location privacy), the
ﬂexibility of route management within an ISP may diminish.
Also, users have no control over their level of anonymity.
5http://www.cidr-report.org/as2.0/
 100000
s
e
i
t
i
C
f
o
r
e
b
m
u
N
 10000
 1000
 100
 10
 1
2^0
2^5
2^10
2^15
Number of Addresses
2^20
2^25
2^30
Figure 5. As the number of possible IP addresses increases, so does the
number of potential cities.
1 Hop
2 Hop
3 Hop
4 Hop
 1
 0.8
 0.6
F
D
C
 0.4
 0.2
 0
2^0
2^4
2^8 2^12 2^16 2^20 2^24 2^28 2^32
Anonymity Set Size
Comparison of anonymity set size based on the number of
Figure 6.
the
encrypted hops. As the number of encrypted AD hops increases,
anonymity set size increases. For the case of 4 encrypted hops, almost
all origins enjoy an anonymity set size of over 228 hosts.
We also investigate location privacy in the current Internet.
We use the Maxmind GeoIP locationing tool to estimate an
end-host’s current city6 based on its IP address and quantify
the location-privacy level based on the number of cities the
end-host may reside in. Figure 5 shows the relationship
between the number of cities and the anonymity set size:
the level of location privacy can be increased by increasing
the number of possible IP addresses.
B. Anonymity in LAP
In LAP, users can improve their anonymity set size by
extending the length of their e-paths.
To show the effectiveness of LAP path encryption,
we evaluate anonymity in LAP using traceroute data
from iPlane’s measurements and routing data from Route-
Views [26]. The iPlane dataset contains traceroute data
between 197 sources and about 13 thousand destinations. We
eliminate 28 sources with incomplete logs and choose 1,000
destinations for each source. For each pair of source and
destination, we calculate the size of the source anonymity
set with respect to the destination based on the Internet
topology and the assigned address space extracted from the
6Maxmind determines city names based on the Geographic Names Data
Base. http://www.maxmind.com/
512
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:49:13 UTC from IEEE Xplore.  Restrictions apply. 
Table I
ISP
Comcast
Time Warner
Cox
ATT
Verizon
Quest
Address Space
ANONYMITY SET SIZE OF US TOP ISPS.
Subscriber [27]
Announcing
(Entropy)
70,374,912 (26.1)
27,556,352 (24.7)
11,971,584 (23.5)
114,544,128 (26.8)
84,403,200 (26.3)
84,403,200 (24.0)
Preﬁx
865
2,158
1,507
6,127
4,376
899
(Entropy)
17,406,000 (24.1)
9,992,000 (23.3)
4,400,000 (22.1)
16,485,000 (24.0)
8,490,000 (23.0)
2,965,000 (21.5)
Subscriber Entropy/Preﬁx
Ave. Min
6.0
19.5
6.5
14.4
18.8
6.6
5.2
18.3
4.7
15.5
16.2
5.5
Max
22.0
17.5
19.6
21.2
19.7
18.5
RouteViews dataset. According to Figure 6, which illustrates
the CDF (cumulative distribution function) of the number
of addresses, the increase in the number of encrypted hops
increases the anonymity set.
VI. LAP INSTANTIATION
In this section, we discuss how LAP can be accommo-
dated in the current IP network running BGP. We then
discuss the potential beneﬁts of tailoring LAP to two future
Internet architectures: SCION [9] and MobilityFirst [10].
A. LAP in the Current Internet
In this section, we delineate how LAP can be incremen-
tally deployed in the current IP network. We consider both
LAP-enabled ADs and legacy ADs that do not support LAP.
In such heterogeneous networks, one main challenge is to
enable a LAP-enabled AD to discover and build virtual
channels to nearby LAP-enabled ADs. For this integration,
we assume that the IP header contains a LAP-ﬂag bit that is
set if an IP packet encapsulates a LAP packet.7
A legacy AD is agnostic to the encapsulated LAP packet
and routes IP packets based on the destination IP as speciﬁed
in the IP packet header. A LAP-enabled AD, on the other