4 SIMILARITY-BASED PREDICTION
In this section, we propose a prediction method to autonomously
cluster malicious registrations by leveraging the perceived similari-
ties that these malicious registrations share. These clusters of mali-
cious registrations are then used to predict whether new instances
are associated with ongoing malicious activity, i.e. campaigns.
Figure 3: The three phases of the similarity-based predic-
tion process. Malicious registrations in the training set are
grouped together in clusters. Afterwards, new registrations
can be compared to those clusters to predict their associa-
tion with malicious activities.
The remainder of this section discusses in more detail the simi-
larity metric and the clustering technique used in this prediction
approach.
4.1 Similarity metric between registrations
To cluster blacklisted registrations, we need the ability to assess the
similarity of two instances. We propose a custom similarity metric
that expresses the distance between two registrations. This metric
is then used in the clustering and prediction phases.
Similarity features. The distance metric primarily takes into ac-
count registrant data, alongside the domain name, name servers
and registrar used during the registration. These features are either
numerical, categorical or string-based:
String features (Company) name, address, postal code, city, state
/ province, email and phone of the registrant
ABCCLUSTERBENIGN    MALICIOUS    NEWREGISTRATIONS:wf = IG(cid:42)(cid:44)
f11
f21
...
fn1
Malicious reg. | Benign reg.
(cid:43)(cid:45)
. . .
. . .
. . .
. . .
f1m+n
f2m+n
...
fnm+n
. . .
. . .
. . .
. . .
f1n
f2n
...
fnn
|
|
|
|
Figure 4: Daily variation of information gain-based feature
weights for the similarity-based predictions (year 2015)
Numerical features Length, randomness score of the domain
name (as introduced in Section 2.1.1), address validity score.
Categorical features Email provider and country of the regis-
trant, domains used for name servers and their GeoIP loca-
tion (country), and the registrar
For string-based features, the similarity is expressed as a normal-
ized Levenshtein distance [25]. This distance between two strings
is defined as the minimum number of single-character adjustments
(insertions, deletions or substitutions) that are needed to transform
one string into the other. The distance function thus preserves a no-
tion of partial similarity and common characters in both strings. We
opt for a similarity metric rather than equality/inequality to cope
with typos and small variations as well as mitigation for possible
evasion. Since registrations vary in length, a normalized pairwise
distance is used.