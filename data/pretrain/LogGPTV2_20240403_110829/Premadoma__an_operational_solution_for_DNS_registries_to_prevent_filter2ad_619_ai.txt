### 4. Similarity-Based Prediction

In this section, we introduce a prediction method that autonomously clusters malicious registrations by leveraging the perceived similarities among them. These clusters of malicious registrations are then used to predict whether new instances are associated with ongoing malicious activities, such as campaigns.

**Figure 3: The Three Phases of the Similarity-Based Prediction Process**
1. **Clustering Phase:** Malicious registrations in the training set are grouped into clusters.
2. **Prediction Phase:** New registrations are compared to these clusters to predict their association with malicious activities.

The remainder of this section provides a detailed discussion of the similarity metric and the clustering technique used in this prediction approach.

#### 4.1 Similarity Metric Between Registrations

To cluster blacklisted registrations, we need a way to assess the similarity between two instances. We propose a custom similarity metric that quantifies the distance between two registrations. This metric is then used in both the clustering and prediction phases.

**Similarity Features:**
The distance metric primarily considers registrant data, along with the domain name, name servers, and registrar used during the registration. These features can be numerical, categorical, or string-based:

- **String Features:**
  - Company name
  - Address
  - Postal code
  - City
  - State/Province
  - Email
  - Phone number of the registrant

- **Numerical Features:**
  - Length of the domain name
  - Randomness score of the domain name (as introduced in Section 2.1.1)
  - Address validity score

- **Categorical Features:**
  - Email provider
  - Country of the registrant
  - Domains used for name servers
  - GeoIP location (country) of the name servers
  - Registrar

For string-based features, the similarity is expressed using the normalized Levenshtein distance [25]. The Levenshtein distance between two strings is defined as the minimum number of single-character edits (insertions, deletions, or substitutions) required to transform one string into the other. This distance function preserves a notion of partial similarity and common characters in both strings. We use a similarity metric rather than strict equality/inequality to account for typos and small variations, as well as to mitigate potential evasion techniques. Since the lengths of registrations can vary, a normalized pairwise distance is used.

**Figure 4: Daily Variation of Information Gain-Based Feature Weights for Similarity-Based Predictions (Year 2015)**
- This figure illustrates the daily variation in the weights of features based on information gain, which are used in the similarity-based predictions for the year 2015.

By combining these features and using the proposed similarity metric, we can effectively cluster and predict malicious registrations, enhancing the detection of ongoing malicious activities.