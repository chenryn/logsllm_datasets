== 事件操作
日志易提供事件操作功能，方便用户在事件上进行各种操作。可以使用系统默认功能：查看上下文，实时查看，配置字段提取，添加到知识库；同时支持用户自定义更复杂的spl逻辑。
=== 在搜索页使用事件操作[[event-action-usage]]
image::images/shijiancaozuo.png[]
事件操作分为三部分：事件菜单，字段菜单，临近事件
1. 事件菜单：事件操作下拉框，日志易提供默认的事件操作有：查看上下文，实时查看，配置字段提取，添加到知识库。
*  点击'查看上下文'：打开链接于【新窗口/当前窗口】，展现其相同文件来源的上下50/100/200/500条日志
+
image::images/show-source.png[]
+
查看上下文的 URL 是日志易单独内置的，格式为：`/search/context/?time_field=timestamp&timestamp=${timestamp}&id_field=context_id&context_id=${context_id}&sort_field=timestamp,context_id&filter_field=source,ip&source=${source}&ip=${ip}&size=250`。其中 size 参数可以单独自定义，页面会自动给上下文条数下拉框新增一个选项。
当用户想要获得很多事件原文如几千条时，直接修改size参数会造成性能开销过大，用户可以点击第一行的"搜索之前X行"或最后一行的"搜索之后X行"，逐步浏览事件原文，其中X是当前选中的展示条数。
+
* 点击'实时查看'：自动把这条日志的hostname、appname、tag作为搜索条件加到搜索框（加的办法等同于‘添加到搜索’辅助）后，自动开始实时窗口刷新事件流
* 点击'配置字段提取'：打开字段提取规则新建页面，自动将这条日志的 raw_message、source、appname、hostname、tag 填充为日志样例。如果日志本身能匹配上已有的字段提取规则，则打开的是该规则的编辑页面
* 点击'添加到知识库'：跳转到新建知识界面，事件代码是appname，标签是tag，事件描述是raw_message
* 点击'添加动态字段'：跳转到动态字段原文解析规则的划选辅助生成界面，自动将这条日志的 raw_message 填充为日志样例。可以快速为本应用添加一个动态字段原文解析规则。
2. 字段菜单：显示于字段的向下三角下拉框，默认没有字段菜单，需要用户在权限中设置事件操作
3. 临近事件：点击'时间戳'可以查看临近事件
image::images/shijiancaozuo-linjinshijian.png[]
=== 事件操作菜单管理
点击'查询分析'-'事件操作'进入事件操作列表页。点击'新建'，创建新的事件操作：
image::images/shijiancaozuo-new.png[]
* 事件操作名称：目前可以重复
* 事件操作别名：当设置别名后，事件操作的菜单中会使用别名进行显示。别名中可以使用${字段名}作为变量，展示时${字段名}部分会被当前日志的相应字段的值代替。例如：操作${ip},展示时会被替换成 `192.168.1.10`。当变量不存在是展示为空
* 应用条件：输入字段名称、字段值和判断条件。指定条件后，该操作只会展现在满足该条件的事件内。默认不填表示都满足条件。
* 应用字段：输入以逗号分隔的字段列表。在满足应用条件的基础上，如果指定应用字段，该操作只会展现在搜索页面事件列表的相应字段名下拉菜单中。最多支持5个字段。
* 显示动作于：【事件菜单|字段菜单|两者】
* 动作类型：
** 搜索：搜索类型对应配置如下
*** 搜索字符串：将使用输入的内容在搜索页面进行搜索，可以使用${字段名}作为变量，搜索时会将${字段名}部分替换为对应字段的值。
*** 数据集
*** 时间选择器
** 链接：链接类型对应配置如下
*** URI：输入要链接的 url，如果是系统内部，既可以输入完整的 url，也可以直接输入 url 的路由部分，例如，希望链接到仪表盘，既可以输入 `http://192.168.1.1/dashboard/`，也可以只输入 `/dashboard/`。但是如果链接到外部地址，请输入完整 url，例如 `https://www.baidu.com/s?wd=a`。url 中也可以使用${字段名}作为变量，跳转时会将${字段名}部分替换为对应字段的值。
*** 打开链接于：【新窗口|当前窗口】
** 格式化：格式化类型只应用于字段菜单，如果格式不符合，只显示文本
*** 展示方式：【JSON | XML】
=== 事件操作示例
==== 创建链接事件操作
步骤：
1. 事件操作名称：Google 这个IP
2. 事件操作别名：Google ${apache.clientip}
3. 只应用到以下字段： apache.clientip
4. 显示动作于：字段菜单
5. 动作类型：链接
6. 链接配置： URI= http://www.google.com/search?q=$apache.clientip$
7. 打开链接于：新窗口
8. 链接方法： get
在搜索页可以看到在事件中字段(apache.clientip)菜单中显示有：Google 113.104.232.167,点击跳转到新窗口，URL 是 `http://www.google.com/search?q=113.104.232.167`
image::images/google_ip.png[]
==== 创建搜索事件操作
步骤：
1. 事件操作名称：搜索某省的事件
2. 事件操作别名：搜索province="${apache.geo.province}"的事件
3. 只应用到以下字段：apache.geo.province
4. 显示动作于：两者
5. 动作类型：搜索
6. 搜索语句：apache.province:${apache.geo.province}
7. 数据集：所有数据集
8. 时间选择器：本周
事件菜单和字段菜单都显示'搜索province="广东"的事件'。点击它，开始搜索，搜索语句是 `apache.geo.province:广东`，搜索时间是本周
image::images/sousuoshijian-ss.png[]
==== 创建格式化事件操作
步骤：
1. 事件操作名称：格式化
2. 事件操作标签：格式化
3. 应用条件：logtype 等于 json
4. 只应用到以下字段：raw_message
5. 显示动作于：字段菜单
6. 动作类型：格式化
7. 格式化配置：json
在事件raw_message字段的字段菜单中显示有：格式化，点击弹出悬浮层
image::images/shijiancaozuo-format.png[]
<<<
== 搜索宏
搜索宏指可插入其他搜索并可重复使用的搜索处理语言(SPL)数据块。搜索宏可以是搜索的任一部分(如eval语句或搜索术语)，不必是完整的命令。您还可以指定宏字段是否使用任何参数。
=== 在搜索中使用搜索宏
使用反引号字符(`)可在搜索字符串插入搜索宏。在大多数英文键盘上，该字符与波形符(~)位于相同按键上。也可以使用此相同语法在其他搜索宏内引用某搜索宏。如果您有一个名为mymacro的搜索宏，在搜索中引用时它的形式如下：
 logtype=apache | `mymacro`
带引号的值内的宏不会扩展。在以下示例中，搜索宏bar没有扩展。
 "foo `bar` baz"
如果您的搜索宏要用到参数，择要将搜索宏插入到搜索字符串时定义这些参数。例如，如果搜索宏argmacro(2)包含两个整数，您可以用以下方式将此宏插入到搜索字符串中：`argmacro(200,404)`。
如果搜索宏参数包含引号，则在搜索中调用宏时需要对引号进行转义。例如，如果您要将具有引号的字符串作为宏的参数进行传递，应使用以下形式:`mymacro("He said \"hello!\"")`。
您的搜索宏定义可包含验证表达式，用于确定您输入的参数是否有效，并会在发现无效参数时发出验证错误消息。
=== 创建/编辑搜索宏
创建一个搜索宏的步骤如下：
1. 点击"设置-资源-搜索宏"，进入搜索宏列表页；
2. 点击新建，即可创建新的搜索宏；
3. (必填)提供该搜索宏的唯一名称。 如果搜索宏包含参数，则需要在名称后附加参数的数目来进行表示。例如，如果搜索宏 mymacro包含两个参数，则将其名称设置为 mymacro(2)。
4. (必填)提供该搜索宏的定义，宏的定义只是在其他搜索语句中引用这个宏时，会被扩展出的局部搜索字符串。
5. (可选)选择搜索宏资源标签
6. (可选)选择使用基于 eval 的定义?以表示定义值是一个 eval 表达式。
7. (可选)为搜索宏选择适当的参数。这是一个字符串，包含以逗号分隔的参数名称，不包含重复的元素。参数名称只能包含字母数字字符(a-Z、A-Z、0-9)，下划线和短划线。
8. (可选)提供验证表达式，用于验证调用搜索宏的参数值是否可接受。验证表达式是一个 eval 表达式，用于为布尔值或字符串生成求值结果。可以是 与或非：&& ，||，！这三种逻辑符号，组成多种情况。常见的有isnum(),isstr()
9. (可选)如果已定义验证表达式，则会提供验证错误消息。当调用搜索宏的参数值没有通过验证表达式的验证时，会返回此消息。
10. 单击“保存”以保存搜索宏。
image::images/new-sousuohong.png[]
=== 搜索宏示例
==== 无参数的简单搜索宏
创建名为preview1d_perhour_perip_precent_currenthour的搜索宏：统计过去一天每个小时每个ip的事件数占当前这个小时总数的百分比
宏定义：
 starttime="-1d/d" endtime="now/d" logtype:apache | bucket timestamp span=1h as ts | stats count() as ip_count by apache.clientip,ts | join type=left ts [[ logtype:apache | bucket timestamp span=1h as ts | stats count() as hour_count by ts ]] | eval ippercent=100 * ip_count / hour_count
==== 带参数的简单搜索宏
例如使用这么一类SPL可以快速搜索包含某个手机号的业务日志：
 appname:java AND [[18900043123|stats count(appname) by thread_id | fields thread_id]] ｜transaction thread_id contains="18900043123"
但是手机号每次可能变动，重新输入SPL比较麻烦。
现在使用宏指令，定义一个宏叫check_phone(1)
宏定义：
 appname:java AND [[$num$ | stats count(appname) by thread_id | fields thread_id]] ｜transaction thread_id contains="$num$"
然后每次搜索，只需要写 `check_phone(18900043123)` 即可。
==== 搜索宏可以包含搜索宏
假设有一个名为 makesessions 的搜索宏定义了特定事件的 transaction，这些事件拥有相同的 clientip 值且是在彼此相隔 30 分钟内 所发生的。以下为 makesessions 的定义:
 transaction clientip maxpause=30m
那么我们可以使用如下搜索语句，使用 makesessions 搜索宏获取 Web 流量事件，并将其拆分为会话:
 logtype=access_* | `makesessions`
此搜索使用 makesessions 搜索宏每天返回一个表格，其中列出每个会话的 pageview 数量:
 logtype=access_* | `makesessions` | timechart span=1d sum(eventcount) as pageviews count as sessions
如果您要构建相同的表格，但使用不同的跨度长度，只需将其保存为一个含有跨度长度参数的搜索宏。以下为新搜索宏 pageviews_per_session(1) 的定义。注意，此宏引用了原始 makesessions 宏。
 sourcetype=access_* | `makesessions` | timechart $span$ sum(eventcount) as pageviews count as sessions
现在，您可以在将其插入搜索字符串时指定跨度长度:
`pageviews_per_session(span=1h)`
==== 验证参数以确定参数是否为字符串
定义名为 mymacro(2) 的搜索宏，宏定义是：
 * | stats count() by $x$,$y$
宏的参数是： x, y。
可以添加验证布尔表达式为：
 isstr(x) && isstr(y)
验证错误消息："参数错误，请输入正确的参数"。
保存以后，如果在搜索页面输入
 `mymacro(2，3)`
将看到提示：参数错误，请输入正确的参数。
== 已存搜索
对于后续可能会经常使用的搜索语句，可以保存为已存搜索，供未来自己或其他人使用。
=== 已存搜索管理
搜索完成后，点击搜索页右上角操作栏的"已存搜索"菜单，点击"新建"，可以看到如下保存弹层：
image::images/new-savedsearch.png[]
在菜单中，点击"打开列表"，可以看到如下列表弹层，左侧展示组织结构标签树，右侧展示已经保存过的搜索语句，可以在列表右侧选择加载、删除、授权、发布、查看。
image::images/list-savedsearch.png[]
此外，也可以在"查询分析"-"已存搜索"入口，打开独立的已存搜索列表页。列表页除了加载和删除以外，还可以进行授权分享操作。授权操作的详细说明，请参阅稍后权限管理章节。
加载完毕的已存搜索，如果对语句进行修改后，可以点击"已存搜索"-"更新"来保存修改到原已存搜索中，也可以点击"已存搜索"-"另存为"来创建另一个新的已存搜索。
=== 带输入项的已存搜索
在保存搜索语句时，其中部分查询条件很可能是后续使用中会经常改动的部分，您可以使用搜索宏来进行简单的封装，也可以直接在搜索页采用添加输入项的方式进行可视化的封装。
已存搜索的输入项创建流程如下：
1. 在搜索框内，划选 SPL 语句中可能会改动的部分，这时可以看到搜索框右下角，出现一个新的"创建输入项"操作入口：
+
image::images/savedsearch-input-new.png[]
+
2. 点击"创建输入项"，打开输入项配置浮层，可以填写输入项标识、输入项类型、默认值和其他配置参数，如标识前后缀等。已存搜索输入项支持文本输入、下拉菜单、动态菜单类型，不支持时间范围类型。输入项配置和使用方式，与仪表盘输入项保持一致，详细说明，请参阅稍后仪表盘章节。
+
image::images/savedsearch-input-new-step2.png[]
+
3. 配置完成后，点击确定，返回搜索页，可以看到搜索框只展示输入项操作区域：
+
image::images/savedsearch-input-new-step3.png[]
4. 如果想查看搜索语句，可以点击搜索框右上角的眼睛图标，可以看到搜索框变成了左右结构，左侧展示 SPL，其中划选文本变成了 `${tokenname}` 形式；右侧展示输入项操作区域，可以在这里，进行输入或选择操作：
+
image::images/savedsearch-input-new-step4.png[]
+
5. 如果语句中还有其他需要改动的部分，重复 1-4 步，创建下一个输入项。
6. 确认配置满意后，点击搜索框右下角的"已存搜索"-"新建"，将这个带有输入项的已存搜索保存好，就可以后续继续使用了。
和仪表盘类似，已存搜索的输入项，也可以通过 URL 传参的方式直接赋值，格式为：`http://192.168.1.100/search/?savedsearchId=17&tokenname=value`。
=== 已存搜索发布
已存搜索授权给其他用户读取时，用户能看到的只是搜索语句，而并不是初始用户实际所见的原始数据。这是因为数据范围还受用户的搜索权限约束。如果用户需要分享出去的是实际看到的原始数据内容，可以选择"发布"这条已存搜索，并设定"数据用户"为创建者身份。
image::images/savedsearch-share.png[]
被发布的已存搜索， 在列表上名称列展示有发布图标标记，并同时支持加载和查看两种操作。加载时，依然以当前浏览者身份加载搜索语句到搜索页。查看时，以设定的数据用户，比如创建者身份，打开只读的查看页面，用户只能浏览语句返回的数据结果，不能修改语句本身：
image::images/savedsearch-share-result.png[]
发布的已存搜索如果包含了输入项定义，则可通过 URL 传参给输入项 ID。 接收的数据结果将自动根据传参值查询。
<<<