# VirusMeter: Preventing Your Cellphone from Spies

**Authors:** Lei Liu, Guanhua Yan, Xinwen Zhang, and Songqing Chen

**Affiliations:**
- **Lei Liu and Songqing Chen:** Department of Computer Science, George Mason University
- **Guanhua Yan:** Information Sciences Group (CCS-3), Los Alamos National Laboratory
- **Xinwen Zhang:** Computer Science Lab, Samsung Information Systems America

## Abstract

With the rapid advancement in mobile communication technology, modern mobile devices now support a wide range of data services that were previously unavailable. As the popularity of these devices has grown, so too have the attacks targeting them. Traditional malware detection techniques, often adapted from internet security solutions, are less effective on mobile devices due to their limited computing resources. In this paper, we introduce VirusMeter, a novel and general method for detecting anomalous behaviors on mobile devices. The core principle of VirusMeter is that any malicious activity on a battery-powered device will inevitably consume power. By monitoring power consumption, VirusMeter can identify and flag abnormal activities. It employs a user-centric power model to characterize common user behaviors and uses real-time and battery-charging modes to detect malware with minimal overhead. We implemented a prototype on a Nokia 5500 Sport and tested it against real-world malware, such as FlexiSPY and Cabir, demonstrating that VirusMeter can effectively detect these threats with less than 1.5% additional power consumption in real time.

**Keywords:** Mobile malware, mobile device security, anomaly detection, power consumption

## 1. Introduction

Advancements in chip design have significantly increased the computing power of microprocessors, enabling mobile devices to offer a wide array of features. Today, many cellphones provide data services like text messaging, email, and web browsing, in addition to traditional voice services. This all-in-one convenience has made mobile devices increasingly popular, with an expected mobile population of 5 billion by 2015 [1]. Out of the 1 billion camera phones shipped in 2008, about 10% were smartphones, representing around 100 million units [2]. Modern mobile devices also offer a more open environment, allowing users to install and run third-party applications.

While these new features make mobile devices more attractive, they also expose them to malicious attacks. By the end of 2007, over 370 different mobile malware instances were identified [21]. The first modern cellphone virus, Cabir [3], which spreads via Bluetooth, appeared in 2004. Since then, various malware, such as Cabir [9] and Commwarrior [8], have exploited vulnerabilities in mobile devices, leading to serious security concerns including information theft, overcharging, battery exhaustion, and network congestion.

Despite the significant security threats posed by mobile malware, detection and defense mechanisms are still lagging. Many signature- and anomaly-based schemes developed for IP networks have been extended to mobile networks [12, 30, 31]. For example, Hu and Venugopal proposed extracting signatures from mobile malware samples and scanning network traffic for these signatures [20]. However, signature-based approaches can be easily bypassed using techniques like encryption, obfuscation, and packing. Anomaly-based detection schemes, while more robust, require accurate and complete models of normal behavior, making them prone to high false alarm rates.

Behavioral signatures have also been proposed for mobile malware detection [10]. These methods, however, face limitations. Monitoring API calls in an emulated environment and running machine learning algorithms for detection are impractical on resource-constrained mobile devices. Additionally, stealthy malware can mimic user behavior or hide among normal activities to evade detection. For instance, FlexiSPY-like malware, which performs eavesdropping, does not show anomalies in API call sequences because they appear as if the user has received an incoming call. Kim et al. proposed using power signatures based on system hardware states tainted by known malware [22], but this approach is mainly useful for detecting known malware and their variants.

In this study, we propose VirusMeter, a novel and general method for detecting mobile malware without external support. VirusMeter leverages the fact that any malicious activity on a battery-powered mobile device will consume power. It monitors and audits power consumption using a behavior-power model that characterizes normal user behaviors. To overcome challenges, VirusMeter uses a user-centric power model and operates in both real-time and battery-charging modes. We implemented a prototype on a Nokia 5500 Sport and evaluated its performance against real-world malware, including Cabir and FlexiSPY. The results show that VirusMeter can effectively detect malware with less than 1.5% additional power consumption in real time and improve detection accuracy up to 98.6% in battery-charging mode.

The remainder of the paper is organized as follows: Section 2 presents related work, Section 3 provides an overview of the VirusMeter design, Sections 4, 5, and 6 detail the model designs, data collection, and model checking, respectively. Section 7 describes the implementation, Section 8 presents the evaluation results, Section 9 discusses limitations and future work, and Section 10 concludes the paper.

## 2. Related Work

The increasing popularity of mobile devices with faster microchips and larger memory space has made them a lucrative target for malware. There are over 370 mobile malware instances in the wild, with Symbian being the most targeted OS [21]. Various approaches have been used to classify mobile malware, such as infection vectors like Bluetooth, MMS, memory cards, and user downloading [13, 21]. User downloading, Bluetooth, and MMS are the most common propagation channels. Studies have focused on understanding the propagation behaviors of mobile malware, including agent-based models [11], probabilistic queuing models [23], and detailed mathematical models [32].

Early defense schemes against mobile malware have primarily focused on understanding attack characteristics. For example, potential attacks from compromised cellphones and corresponding defenses have been studied [15, 16, 19, 26]. Algorithms based on user interactions have been proposed to identify vulnerable users [12], and schemes to mitigate DoS attacks via queuing in the network have been explored [30]. Labeling techniques have been used to separate the phone interface from the PDA interface of a mobile device [24], and common walk lengths and node frequencies have been integrated to detect worms and determine their origins [27]. SmartSiren [13] uses a proxy to detect malware by analyzing user communication logs, and Bose et al. [10] proposed behavioral signatures for mobile malware detection. However, existing schemes either target specific situations, require significant infrastructure support, or demand non-trivial computing resources from mobile devices. In contrast, VirusMeter is a general approach that works regardless of how malware invades a system and is lightweight, requiring no external support.

A previous approach that also aims to detect energy-greedy anomalies [22] is similar to VirusMeter. However, it is only effective for known malware and their variants and works only in a single process mode, which stealthy malware can evade by activating during user processes.

## 3. Overview of VirusMeter Design

The rationale behind VirusMeter is that any malicious activity on a mobile device must consume some battery power. Therefore, abnormal power consumption is a good indicator of misbehavior. VirusMeter monitors battery power usage and compares it against a pre-defined power consumption model to identify abnormal activities.

Figure 1 illustrates the workflow of VirusMeter on a mobile device. VirusMeter can run at either the system level or the application level (our current implementation is at the application level). Running at the system level is more robust against attacks, as mobile OSes like Symbian and Windows Mobile are typically accessible only to device manufacturers or authorized parties. VirusMeter uses APIs provided by the underlying mobile OS to collect information on supported services and the remaining battery capacity. Based on the pre-defined power model, VirusMeter calculates the expected power consumption and compares it to the actual measured consumption. If the difference exceeds a specified threshold, VirusMeter raises an alarm indicating potential malware. This comparison can be done in real time for fast detection or when the battery is charging for higher accuracy.

The alarms raised by VirusMeter help users further investigate and address potential malware. For example, users can check communication records provided by the network operator for suspicious activity and use advanced virus removal tools to clean the device. Thus, VirusMeter is a valuable tool for early detection of malware, preventing continuous compromise of service security and data confidentiality.

![VirusMeter Workflow](path_to_image)

---

This revised version aims to enhance clarity, coherence, and professionalism while maintaining the essential content and structure of the original text.