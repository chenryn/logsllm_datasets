Adaptive Traf(cid:2)c Engineering. In INFOCOM, 2001.
[13] A. Feldmann et al. Deriving Traf(cid:2)c Demands from Operational IP
Networks: Methodology and Experience. IEEE/ACM ToN, 2001.
[14] B. Fortz and M. Thorup. Internet Traf(cid:2)c Engineering by Optimizing
OSPF Weights in a Changing World. In INFOCOM, 2000.
[8] A. Basu and J. G. Reicke. Stability Issues in OSPF Routing. In
[9] D. Bertsekas and R. Gallager. Data Networks. Englewood Cliffs,
2001. IETF RFC 3209.
SIGCOMM, 2001.
1992.
[15] B. Fortz and M. Thorup. Optimizing OSPF Weights in a Changing
[16] B. Fortz and M. Thorup. Robust Optimization of OSPF/IS-IS
World. In IEEE JSAC, 2002.
Weights. In INOC, 2003.
[17] R. Gallager. A Minimum Delay Routing Algorithm using Distributed
Computation. IEEE Transactions on Computers, 1977.
[18] R. Govindan and V. Paxson. Estimating Router ICMP Generation
Times. In PAM, Munich, 2002.
[19] GT-ITM: Georgia Tech. Internetwork Topology Models.
[20] J. Guichard, F. le Faucheur, and J. P. Vasseur. De(cid:2)nitive MPLS
Network Designs. Cisco Press, 2005.
[21] D. Katabi, M. Handley, and C. Rohrs. Internet Congestion Control
for High Bandwidth-Delay Product Networks. In SIGCOMM, 2002.
[22] R. Keralapura, N. Taft, C.-N. Chuah, and G. Iannaccone. Can ISPs
take the Heat from Overlay Networks? In HOTNETS, 2004.
[23] A. Khanna and J. Zinky. The Revised ARPANET Routing Metric. In
SIGCOMM, 1989.
[24] M. Kodialam, T. V. Lakshman, and S. Sengupta. Ef(cid:2)cient and Robust
Routing of Highly Variable Traf(cid:2)c. In HOTNETS, 2004.
[25] S. Kunniyur and R. Srikant. Analysis and Design of an Adaptive
Virtual Queue. In SIGCOMM, 2001.
[26] D. Mitra and K. G. Ramakrishna. A Case Study of Multiservice
Multipriority Traf(cid:2)c Engineering Design. In GLOBECOM, 1999.
[27] The Network Simulator. http://www.isi.edu/nsnam/ns/.
[28] E. Osborne and A. Simha. Traf(cid:2)c Engineering with MPLS. Cisco
Press, 2002.
[29] L. Qiu, Y. R. Yang, Y. Zhang, and S. Shenker. On Sel(cid:2)sh Routing in
Internet-Like Environments. In SIGCOMM, 2003.
[30] Rocketfuel. www.cs.washington.edu/research/networking/rocketfuel.
[31] Resilient Overlay Network. htpp://nms.lcs.mit.edu/ron.
[32] E. Rosen, A. Viswanathan, and R. Callon. Multi-protocol Label
Switching Architecture. RFC 3031.
[33] M. Roughan et al. Experience in Measuring Backbone Traf(cid:2)c
Variability: Models, Metrics, Measurements and Meaning. In ACM
IMW, 2002.
[34] A. Shaikh, J. Rexford, and K. Shin. Load-Sensitive Routing of
Long-lived IP Flows. In SIGCOMM, 1999.
[35] S. Sinha, S. Kandula, and D. Katabi. Harnessing TCPs Burstiness
using Flowlet Switching. In HOTNETS, 2004.
[36] S. Skogestad and I. Postlethwaite. Multivariable Feedback Control:
Analysis and Design. John Wiley & Sons, 1996.
[37] R. Teixeira, K. Marzullo, S. Savage, and G. Voelker. In Search of
Path Diversity in ISP Networks. In IMC, 2003.
[38] J. Tsitsiklis and D. Bertsekas. Distributed Asynchronous Optimal
Routing in Data Networks. IEEE Trans. on Automatic Control, 1986.
[39] C. Villamazir. Mpls optimized multipath (mpls-omp), 1999.
[40] C. Villamazir. Ospf optimized multipath (ospf-omp), 1999.
[41] S. Vutukury and J. J. Garcia-Luna-Aceves. A Simple Approximation
to Minimum-Delay Routing. In SIGCOMM, 1999.
[42] R. Zhang-Shen and N. McKeown. Designing a Predictable Internet
Backbone Network. In HOTNETS, 2004.
APPENDIX
A. PROOF OF THEOREM 4.1
Model & Assumptions: We assume a (cid:3)uid model of traf(cid:2)c, a single bottle-
neck along each path, the RTT is a constant d, and the IE (cid:3)ows have in(cid:2)nite
demands. We also ignore boundary conditions.
This proof is similar to that in [21], and we claim no credit for it.
Consider a bottleneck of capacity c traversed by N IE (cid:3)ows. Let ri(t)
be the sending rate of IE (cid:3)ow i at time t. The aggregate traf(cid:2)c rate on the
link is (cid:30)(t) = P ri(t). The router sends some aggregate feedback every
Tp. The feedback reaches the TeXCP agents after a round trip time, d.
Assuming the IE (cid:3)ows have enough demands, the change in their aggregate
rate per second is equal to the feedback divided by Tp.
d(cid:30)(t)
dt
= X dri(t)
dt
=
1
Tp(cid:18)(cid:0)(cid:11) (cid:1) ((cid:30)(t (cid:0) d) (cid:0) c) (cid:0) (cid:12) (cid:1)
Tp (cid:19):
q(t (cid:0) d)
The whole system can be expressed using the following delay differential
equations.
_q(t) = (cid:30)(t) (cid:0) c
(13)
Figure 13: The feedback loop and the Bode plot of its open loop transfer
function.
Figure 14: The Nyquist plot of the open-loop transfer function with a
very small delay.
_(cid:30)(t) = (cid:0)
(cid:11)
Tp
((cid:30)(t (cid:0) d) (cid:0) c) (cid:0)
(cid:12)
T 2
p
q(t (cid:0) d)
(14)
Proof Idea: This is a linear feedback system with delay. The stability of
such systems may be studied by plotting their open-loop transfer function
in a Nyquist plot. We prove that the system satis(cid:2)es the Nyquist stability
criterion. Further, the gain margin is greater than one and the phase margin
is positive independently of delay, capacity, and number of IE (cid:3)ows.10
PROOF. Let us change variable to x(t) = (cid:30)(t) (cid:0) c.
_q(t) = x(t)
_x(t) = (cid:0)K1x(t (cid:0) d) (cid:0) K2q(t (cid:0) d)
K1 =
(cid:11)
Tp
and K2 =
(cid:12)
T 2
p
;
The system can be expressed using a delayed feedback (see Figure 13).
The open loop transfer function is:
G(s) =
K1 (cid:1) s + K2
s2
e(cid:0)ds
For very small d > 0, the closed-loop system is stable. The shape of its
Nyquist plot, which is given in Figure 14, does not encircle (cid:0)1.
Next, we prove that the phase margin remains positive independent of
the delay. The magnitude and angle of the open-loop transfer function are:
jGj = qK 2
1 (cid:1) w2 + K 2
2
;
w2
\G = (cid:0)(cid:25) + arctan
wK1
K2 (cid:0) w (cid:1) d:
The break frequency of the zero occurs at wz = K2
K1
.
K1
To simplify the system, we choose (cid:11) and (cid:12) such that the break frequency
of the zero wz is the same as the crossover frequency wc (frequency for
which jG(wc)j = 1). Substituting wc = wz = K2
in jG(wc)j = 1 leads
to (cid:12) = (cid:11)2p2.
To maintain stability for any delay, we need to make sure that the phase
margin is independent of delay and always remains positive. This means
that we need \G(wc) = (cid:0)(cid:25) + (cid:25)
> (cid:0)(cid:25). Since Tp > d by
design, we need (cid:12)
4 . Substituting (cid:12) from the previous paragraph, we
(cid:2)nd that we need 0  0 only increases the value of (cid:1)x, which
would otherwise sum to zero, and the re-normalization in Eq. 8, causes the
new traf(cid:2)c fraction to be no larger than ^x. Hence, it is easy to verify that:
(cid:15) + xsp(n)(us(n) (cid:0) usp(n));
8p; usp > umin;
p; usp = umin:
(15)
xsp(n + 1) (cid:20) ^xsp = xsp(n) + (cid:1)xsp(n):
(16)
Our proof goes in discrete steps. In each step, each TeXCP agent s ap-
plies Eq. 15, to adjust the amount of traf(cid:2)c rsp sent along each path. Note:
(cid:1)rsp = Rs(xsp(n + 1) (cid:0) xsp(n)) (cid:20) Rs(cid:1)xsp(n):
(17)
The last part is from using Eq. 16.
The change in the utilization of link l, due to this new traf(cid:2)c assignment,
is the sum of the changes over all the paths traversing the link.
ul(n + 1) (cid:20) ul(n) + Xs Xp2Ps;p3l
(cid:20) ul(n) + Xs Xp2Ps;p3l
Rs
Cl
Rs
Cl
(cid:1)xsp(n)
((cid:15) + xsp(n)(us(n) (cid:0) usp(n))):
The (cid:2)rst part is from Eq. 17 and the second is by substituting with Eq. 15.
By de(cid:2)nition, path utilization usp is the maximum link utilization in that
path, i.e. 8l 2 p; usp(n) (cid:21) ul(n). Replacing usp by ul in the last
equation, and noting that Ps Pp2Ps;p3l
ul(n + 1) (cid:20) ul(n)(1 (cid:0) ul(n)) + Xs Xp2Ps;p3l
= ul(n), we get:
Rsxsp(n)
Rs
Cl
Cl
(us(n)xsp(n) + (cid:15)): (18)
PROOF. We will now prove that in every step, the maximum link uti-
lization in the network always decreases without oscillations, i.e.
max
l
ul(n + 1)  uM (n)
[Highly Utilized in Past]
In this case, at step n, uj was larger than the largest us. Every TeXCP
agent sending traf(cid:2)c on a path containing link j will decrease its traf(cid:2)c
share xsp according to equation 15. Thus, the utilization of link j decreases
uj (n + 1)  us, and agent s
would move traf(cid:2)c away from this path reducing the maximum utilization(cid:150)
a contradiction. Hence, these agents do not use any of the paths traversing
maximum utilization links.
These assertions lead to an interesting conclusion. Since every path used
by an agent in Z traverses a max-utilization link and no agent in Z uses
a path containing a max-utilization link, the subsets of paths used by the
agents in these two sets is disjoint. The agents in these two sets will not
interact any more. Further, agents in Z have a balanced load on all of their
paths and will not move traf(cid:2)c anymore, in accordance with Eq. 15. Thus,
uj (n + 1) will never decrease and this is the (cid:2)nal max-utilization of the
system. Also, agents in Z satisfy the stable state conditions in Theorem 4.2.
We now focus on the agents in Z. Since the link bandwidth consumed by
agents in Z stays static after step n, we can ignore agents in Z after adjust-
ing the link capacities accordingly. The new system has reduced capacity
links, contains only the agents in set Z and has a max-utilization smaller
than uj (n). We can analyze this reduced system as we did the original sys-
tem. The max-utilization of the reduced system will keep strictly decreasing
until we are again in sub-case 3.1. We are bound to reach sub-case 3.1 again
as it is impossible for the max-utilization, a positive value, to keep decreas-
ing inde(cid:2)nitely. At sub-case 3.1, non-zero number of TeXCP agents (those
in the new set Z) will satisfy the stability conditions in Theorem 4.2 and
can be ignored henceforth. We repeat this argument iteratively until there
are no TeXCP agents of type Z left.
To summarize, eventually all TeXCP agents see equal utilization along
all of the paths they use and do not know any paths with smaller utilization.
In this state, no TeXCP agent can move traf(cid:2)c from one path to another, and
the system has stabilized.