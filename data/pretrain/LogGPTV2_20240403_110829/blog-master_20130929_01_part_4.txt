   218                   */  
   219    
   220                  if (peer && peer->tcp_ts_stamp + TCP_PAWS_MSL >= xtime.tv_sec) {  
   221                          tp->rx_opt.ts_recent_stamp = peer->tcp_ts_stamp;  
   222                          tp->rx_opt.ts_recent = peer->tcp_ts;  
   223                  }  
   224          }  
   225    
   226          inet->dport = usin->sin_port;  
   227          inet->daddr = daddr;  
   228    
   229          inet_csk(sk)->icsk_ext_hdr_len = 0;  
   230          if (inet_opt)  
   231                  inet_csk(sk)->icsk_ext_hdr_len = inet_opt->optlen;  
   232    
   233          tp->rx_opt.mss_clamp = 536;  
   234    
   235          /* Socket identity is still unknown (sport may be zero).  
   236           * However we set state to SYN-SENT and not releasing socket  
   237           * lock select source port, enter ourselves into the hash tables and  
   238           * complete initialization after this.  
   239           */  
   240          tcp_set_state(sk, TCP_SYN_SENT);  
   241          err = inet_hash_connect(&tcp_death_row, sk);  
   242          if (err)  
   243                  goto failure;  
   244    
   245          err = ip_route_newports(&rt, IPPROTO_TCP, inet->sport, inet->dport, sk);  
   246          if (err)  
   247                  goto failure;  
   248    
   249          /* OK, now commit destination to socket.  */  
   250          sk->sk_gso_type = SKB_GSO_TCPV4;  
   251          sk_setup_caps(sk, &rt->u.dst);  
   252    
   253          if (!tp->write_seq)  
   254                  tp->write_seq = secure_tcp_sequence_number(inet->saddr,  
   255                                                             inet->daddr,  
   256                                                             inet->sport,  
   257                                                             usin->sin_port);  
   258    
   259          inet->id = tp->write_seq ^ jiffies;  
   260    
   261          err = tcp_connect(sk);  
   262          rt = NULL;  
   263          if (err)  
   264                  goto failure;  
   265    
   266          return 0;  
   267    
   268  failure:  
   269          /* This unhashes the socket and releases the local port, if necessary. */  
   270          tcp_set_state(sk, TCP_CLOSE);  
   271          ip_rt_put(rt);  
   272          sk->sk_route_caps = 0;  
   273          inet->dport = 0;  
   274          return err;  
   275  }  
```  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")