## DDD 与微服务的关系有了上面的讲解，现在我们不妨再次总结下 DDD 与微服务的关系。DDD是一种架构设计方法，微服务是一种架构风格，两者从本质上都是为了追求高响应力，而从业务视角去分离应用系统建设复杂度的手段。两者都强调从业务出发，其核心要义是强调根据业务发展，合理划分领域边界，持续调整现有架构，优化现有代码，以保持架构和代码的生命力，也就是我们常说的演进式架构。DDD主要关注：从业务领域视角划分领域边界，构建通用语言进行高效沟通，通过业务抽象，建立领域模型，维持业务和代码的逻辑一致性。微服务主要关注：运行时的进程间通信、容错和故障隔离，实现去中心化数据管理和去中心化服务治理，关注微服务的独立开发、测试、构建和部署。
## 总结今天我们主要讨论了微服务设计和拆分的难题。通过 DDD战略设计可以建立领域模型，划定领域边界，解决微服务设计过程中，边界难以划定的难题。如果你的业务焦点在领域和领域逻辑，那么你就可以选择DDD 作为微服务的设计方法！更关键的一点是，[DDD不仅可以用于微服务设计，还可以很好地应用于企业中台的设计。]{.orange}如果你的企业正在做中台转型，DDD将会是一把利器，它可以帮你建立一个非常好的企业级中台业务模型。有关这点你还会在后面的文章中见到详解。除此之外，DDD战术设计对设计和开发人员的要求相对较高，实现起来相对复杂。不同企业的研发管理能力和个人开发水平可能会存在差异。尤其对于传统企业而言，在战术设计落地的过程中，可能会存在一定挑战和困难，我建议你和你的公司如果有这方面的想法，就一定要谨慎评估自己的能力，选择最合适的方法落地DDD。也不妨根据收获权衡一下，**总体来说，DDD 可以给你带来以下收获：**1.  DDD    是一套完整而系统的设计方法，它能带给你从战略设计到战术设计的标准设计过程，使得你的设计思路能够更加清晰，设计过程更加规范。2.  DDD    善于处理与领域相关的拥有高复杂度业务的产品开发，通过它可以建立一个核心而稳定的领域模型，有利于领域知识的传递与传承。3.  DDD    强调团队与领域专家的合作，能够帮助你的团队建立一个沟通良好的氛围，构建一致的架构体系。4.  DDD 的设计思想、原则与模式有助于提高你的架构设计能力。5.  无论是在新项目中设计微服务，还是将系统从单体架构演进到微服务，都可以遵循    DDD 的架构原则。6.  DDD 不仅适用于微服务，也适用于传统的单体应用。
## 思考题你的公司是否在实施微服务架构，你在微服务设计过程中面临的最大问题是什么？欢迎留言和我分享你的思考和疑惑，你也可以把今天所学分享给身边的朋友，邀请他加入探讨，共同进步。![unpreview](Images/e4872e412bb3131e6dec8a85bb125c27.png){savepage-src="https://static001.geekbang.org/resource/image/7b/33/7b1a917aff0ec923b78a54e81ed90733.jpg"}