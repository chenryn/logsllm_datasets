如果所有的计算机都只能提供本地HTML页面，WWW网也就不会是现在这个样子的资源宝
库了。WWW网的强大之处和诱人之处就在子页面可以链接到位于不同机器上的其他资源。这是
用URL地址的绝对形式来实现的，其格式为http：//machine.name/file.html
动手试试：链接到其他站点
下面这个HTML文档使用了一些不常用的URL地址和-些到其他站点的链接：
:DOCTYPE HTML PUBLIC ^-//W3C//DTD HTML 4.3 Transit1ona1//EN*
加入iava编程群：524621833
---
## Page 654
636
Linux程序设计
*ht.tp: / /www w? org TR/RFht 140, 1n (1 d°>
Another Simple HTN Document, htnl1c.html,TITLE>
This shows some less conmon URLs and 1inks to remore rachines.
This is html10.htnl
<>6edooq 1a4
 If you want to find out about some other wRox books
S we suggest you visit
 To send feedback on Wrox books you can erail thcr. at
the1r feedback address..*A>
 For more information about the wor.d Wide Web, vi>it the World wide eb Consoztium. You wi11 fird many
epecifications, draft opocificatione. liats t http servers, and lots of othe helplul
files,
 If you are just getting staxted with Linux. then you mhould subccribc to
the newsgroups
 comp.o .1inux announce, and
 conp.on.1inyx.answers.
 Sonm people are not sure how Lnux ispronounced. Wel1 now you know!
xnutg Aq palamod sq 'goid g vog xnutq e uo Btounz st _taA1os s
Many thanks to Alan Cox for
pormission to use this graphic 
This page is &#169 Copyraght Wrox Press.
我们将看到如图19-9所示的浏览器画面：
操作注释：
这个例子里显示的页面里有一些绝对URL地址和一些较少使用的地址。注意我们把图像的
背景颜色设置为透明的（这是GIF文件功能之一，大多数浏览器都支持）.这样我们看到的图像
就没有边框。Linux图像来自http：//www.linux.org.uk/；感谢PI:EMAIL允许我们使
用它。
与图像有关的凡个小问题
在对图像进行处理时还有一些其他的小技巧。-个比较流行的传统做法是给页面加上一个
背景。在标签里加上BACKGROUND属性可以做到这一点。你应该使自己的背景图
像尽可能的小，并且千万不要让它喧宾夺主，把你的主要内容给比下去。设置背景的标签如下
所示：
BODY ACKGROUND .*background.g)f*
你可以把GIF文件中的某个颜色设置为透明的。这使背景在屏幕上看起来更透亮，比起页面
上一个方形的图像区来效果要好得多了。
加入jaVa编程群：524621833
---
## Page 655
第19章因特网程序设计：HTML
9
NetscapeAnotherSpeHTMLDocumenthl0.h
FlEaViGoCommnicor
Halp
FO
Retoad
Home
osLcnleu/Local/Reld
obMalContactPeopleYelow PagesDownioadFn
Thisishtmli0.html
HyfleWoXnuy
To fckWboyc k
CamYouwifmy ecics,tciiceonsists 
sw,lf lf 
llygitld
i.e.c.ndsog.oshzo.sw
So people hLiis
图19-9
GIF文件的另外一个功能是你可以把几幅图像保存在同一个GIF文件里。部分浏览器能够处
理这样的情况，按顺序依次显示GIF文件里的每一幅图像，形成一个简单的动画效果。
19.5编写HTML文件
我们一直以来都是采用简单的键盘输人方法来编写HTML文档的。当然，当掌握了足够的
HTML知识以后，直接输人它们也确实没有多费事。本章的HTML文档都是我们用emacs编辑器
直接输入的。
如果你开始编写大量的HTML，就可能想了解一些其他的书写方法。主要的方法有：
·用一个文本编辑器直接输人它。
·用一个转换器程序把它从-个现有的格式转换过来。有许多种转换器，有些还能把HTML
转换为另外一-种格式，比如PostScript等。我们特别感兴趣的格式是Linuxdoc-sgml。类似
于HTML，它也是一种符合SGML定义的结构化文档，但它还可以被转换为包括HTML在
内的许多其他种格式。如果你只想写一次文档，但又需要把它转换为许多不同的格式，就
加入jaVva编程群：524621833
---
## Page 656
638Linux程序设计
可以考虑使用Linuxdoc-sgml。
·使用比下文敏感的编辑器。有些编辑器“知道”HTML的规定，能够帮助你选择正确的标
签来安排HTML文档的结构。你也可以使用emacs编辑器的“HTMLhelper”帮助模式。
·直接使用一个能够生成HTML的WYSIWYG编辑器。
使用WYSIWYG生成器可能会带来一些问题：提出HTML的目的是为了适应不同计算机平台
上各种各样的浏览器，因此它定义的是文档普遍意义上的格式而不是字体字号之类的细节，这
样，虽然你在自已的WYSIWYG生成器上确实是所见即所得，但在其他人的机器上可能就是所
得非所见了。
编写好自己的HTML文档之后，还需要做两件事情。首先，通过一个HTML检查器程序来运
行它。这方面确实有几个很不错的程序，其中包括“html-check”和“weblint”。第二，尽可能
多地在你能收集到的浏览器里（和计算机平台上）对它进行测试、好让最终用户看到的每一个
页面都是合理的画面。
除表单（form）和可点击图片以外，HTML的主要内容基本上都在这里了。我们将在下-章
里遇到表单，而可点击图片方面的内容我们很快就会在本章后面的部分里开始讨论。
19.6HTML页面服务
在前面的学习过程里，我们一-直是编写HTML页面，再把它们做为文件加载到一个浏览器里
去查看。如果你只是一个人，用这种办法来浏览一些文档倒也未尝不可：但如果你想让许许多
多的人看到白已的工作成果，就必须给他们每人发送一份文档的拷贝。
更好的办法是把文档放在计算机里，计算机再联上网，然后等到有人请求查阅文档的时候
再通过网络把它发送过去一WWW网的起因和基础也正在于此。用户不必事先提出请求就能开
始对文档进行浏览（“冲浪”这个词是不是更形象？）
我们可以这样做：在一台计算机上安装运行一个服务器程序，所有的文档也都保存在那里，
使客户程序能够穿过网络来检索这些文档
不要认为只有在因特网上这才是有用的。公司等机构组织完全可以利用它来传播企业的内
部文件，这比记录、保存、修改、发送大堆“废纸”要简单面且有效的多了。只要把文档的
一份拷贝放到了内部LAN局域网中某个服务器上，就可以从连接在这个LAN里的任何一台上作
站上查看到它。再说了，Linux和许多HTML服务器程序都是自由免费的，所以这绝对是一个低
成本的解决方案。
19.6.1网络中的HTML文档
图19-10给出了客户请求浏览HTML文档（及图像等其他相关文件）的流程，这些文档都存
放在--台服务器上、
客户计算机上浏览器程序提出的请求经网络到达服务器。服务器的HTTP守护进程（UNIX
系统上的服务器程序经常被称为“守护进那”）对这个请求进行处理，从自己的文档库里读出文
档并把它们发送回客户那果，文档在发送前要经过MUME编码处理。所有数据都使用HTTP协议
来传递，这个协议运行在底层的网络协议之上。
加入jaVva编程群：524621833
---
## Page 657
第19章因特网程序设计：HTML
69
服务器
客户
客户
网络
图19-10
整个系统按“请求和响应”的方式运转若，客户请求一个文档，服务器发送一个文档或一
个错误（如果文档不存在的话）做为响应。如果文档是出HTML文本和图像组成的，客户在请求
了那份文档之后可能还要继续请求该文档要求的其他文件，比如标签中给出的图像文件
客户和服务器之间没有多少“交谈”、服务器的做法很简单：对客户请求做出响应，记下发
送了哪些文件，但它并不记录客户曾经提出过的请求
HTTP守护进程可以为许多客户提供服务，它按自已收到请求的顺序对它们依次做出处理。
事实上，许多HTTP守护进程的实现版本都采用多进程的办法增强请求和响应的处理能力。
19.6.2设置一个服务器
许多Linux发行版本都已经带有一个HTTP服务器了，它一般是非常流行的（同时也是自由
免费的）“Apache Server”服务器。虽然还有许多其他的服务器，而且其中有许多也是免费的，
但Apache服务器应该能够满足你的-·切要求；如果没有很特殊的理由需要使用其他的Web服务
器，就用它好了。
大多数Linux发行版本都自带有一个Web服务器，··般来说就是Apache。我们只需在自己的
缺省配置里选择安装并运行它就行了，没有什么复杂的东西。如果读者的发行版本不带Web服务
器，或者愿意一点一滴地来安装它，我们建议你使用来自hitp：l/www.apache.org的Apache。它
是一个自由免费的服务器软件，有着出色的质量、它的网站文档齐备，而且安装起来也很容易。
安装时需要对缺省主页进行配置，缺省主页是这样一个页面：如果客户没有指定任何页而，
服务器就会把它提供给客户。如果我们想在因特网上去Wrox出版社看看，那么，我们有充分的
理由认为http：/www.wrox.com是-个可以考虑的i计算机地址，但应该请求哪个页面来看呢？
答案是把它空着不填，就拿htup：/www.wrox.com/试试，也就是不指定准备浏览的页面。
加入jaVa编程群：524621833
---
## Page 658
640
Linux程序设计
我们可以配置HTTP服务器在出现这样的情况时向客户提供一个缺省的页面：对应于这个页面
的HTML文档一般都取名为Index.html或index.html，但我们可以通过修改httpd的配置文件来改
变它。
查阅Apache自身档案文件的工作一般都要从查找Apache的配置文件开始。你不仅可以在配
置文件单查到自己的文档都被放到什么地方去了，还可以在追踪故障原因的时候查到日志记录
文件被放在了什么地方。研究Apache的配置选项也是一件很有意思的事情。
如果你不知道自已的Apache被安装到什么地方去了，可以从/etc/rc.d/init.d.httpd文件里找到
-些线索。可能存放有配置文件的其他地点包括/etc/httpd/conf或/usr/local/Apache/conf子目录。
你应该查找的文件叫做httpd.conf或srm.conf。如果你想找的是自己编写的HTMI.文档，请检查
sTm.conf文件里的DocumentRoot配置选项。
总而言之，在Linux上建立--个Web服务器是非常轻而易举的！
19.7可点击图片
HTML文档里的有这样一种图像，点击它的不同区城会引起不同的操作动作，这样的图像就
叫做可点击图片。可点击图片又分为两大类，分别是服务器端可点击图片和客户端可点击图片。
下面就对它们进行简单的介绍。
19.7.1服务器端可点击图片
如果在HTML页面里的标签里加上了ISMAP属性，浏览器客户就会在这个图片被点
击的时候把这个图片的名字和鼠标点击位置的坐标（x，y）送回到服务器。不同的服务器在对这个
请求的处理方面可能稍微有些差别，但最终的结果都是--样的：图片上的（x.y）位置被转换为一
个将返回给浏览器的URL地址，而它就是浏览器将要加载的下一个页面。
我们用服务器上的个“映射图”文件来实现这一做法。映射图文件把图像的各个区域定
义为到不同URL地址的链接。在大多数情况下，图形区城可以是圆形、矩形和多边形；此外，
你还可以指定-个缺省的URL。
映射图文件有两种生成方法。第一种方法需要使用xv等图形处理程序：它读人一个图形文
件，把你鼠标光标位置的坐标显示出来；你边划分准备映射到URL的图形区域，边把该区域的
坐标记下来。这个方法比较适合处理少量的简单图形、如果东西多了，就有点力不从心。
第二种方法要先找到这样一个程序：在你划分图形区域的同时，它会自动生成一个映射图
文件。UNIX平台上就有几个这样的程序。下面是一个NCSA格式的映射图文件示例，它把图像
的不同区域映射到不同的URL地址上去：
circle stigma.htnl 289.516 298.529
rect ovary.htm1 290,107 324,166
349,551
319.383
poly tube.htnl 287,158 328.168 328,208 314.183 280.176
1105,505 114,521
加入iaVa编程群：524621833
---
## Page 659
第19章因特网程序设计：HTML641
po1y coro11a.html 211,205 348.249 403,366 343.399 159,344
可借的是不同的UNIX服务器在映射图的实现上有细微的差异，这不仅表现在文件的格式上，
还表现在服务器对它们的存取方式上。你必须参考自已服务器使用手册中的有关内容才能处理
好这个问题。
要想在Apache服务器上实现服务器端映射图是比较容易的。我们只需把映射图文件放到
HTTP文件的主目录的一个名为maps的下级子目录里，再象下面这样给HTML文档里的图像文件
加上一个锚点就行了：
  标签及其USEMAP属性来定义客户端可点击图片，如下所示：
然后在同一个HTML文档的某个地方用和标签把真正的映射图文件包括进
来，如下所示：
注意客户端映射图里数据域的次序与服务器端映射图是不一样的。
19.8服务器端的预处理功能
Web服务器程序还有一个页面预处理功能，即在把页面发送给客户之前可以对它选行一定的
处理。这就是服务器端的预处理功能，它使我们不仅能够在书写页面的时候访问服务器上的信
息，甚至在取得页面时也能够这样做。大多数服务器端的预处理功能要使用序列“”结束。
每个服务器端预处理功能都有一条对应的指令，也许还有几个属性。这些指令是：
·ccho，允许访问环境变量。常用的环境变量有：
·DATE_GMT：当前格林威治日期和时间。现在叫做UTC时间。
·DATE_LOCAL：当地日期和时间、
·LAST_MODIFIED：当前文档最近次被修改的日期和时间。
·include，在把HTML文档发送给客户之前先在其中额外插人一个文件。
加入jaVa编程群：524621833