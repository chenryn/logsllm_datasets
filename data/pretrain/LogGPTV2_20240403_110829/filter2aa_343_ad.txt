Instructors, as members of the shared domain, can log in to all the class computers. The 
students in each local domain can log in to only the computer where their local 
account resides.
While local domains reside on their respective computers, a shared domain resides on a 
server accessible from the local domain’s computer. When an instructor logs in to any 
of the three class computers and cannot be found in the local domain, Open Directory 
searches the shared domain. In this example, there is only one shared domain, but in 
more complex networks, there may be more shared domains.
Multilevel Search Policies
If more than one server on the network hosts a shared directory, the computers on the 
network can include two or more shared directories in their search policies. As with 
simpler search policies, Open Directory always looks for user information and other 
administrative data first in the local directory. If Open Directory does not find the 
information it needs in the local directory, it searches each shared directory in the 
sequence specified by the search policy.
School Mac OS X
Server
English class
computer
Math class
computer
Shared
directory
Science class
computer
Local
directory
Local
directory
Local
directory
Local
directory
LL2352.Book  Page 29  Friday, August 22, 2003  3:12 PM
30
Chapter 2    Open Directory Search Policies
Here’s a scenario in which more than one shared directory might be used:
Each class (English, math, science) has a server that hosts a shared directory domain. 
Each classroom computer’s search policy specifies the computer’s local domain, the 
class’s shared domain, and the school’s shared domain. The students in each class are 
defined as users in the shared domain of that class’s server, allowing them to log in to 
any computer in the class. The instructors are defined in the shared domain of the 
school server, allowing them to log in to any classroom computer.
You can affect an entire network or just a group of computers by choosing the domain 
in which to define administrative data. The higher the administrative data resides in a 
search policy, the fewer places it needs to be changed as users and system resources 
change. Probably the most important aspect of directory services for administrators is 
planning directory domains and search policies. These should reflect the resources you 
want to share, the users you want to share them among, and even the way you want to 
manage your directory data. 
Automatic Search Policies
Initially, Mac OS X computers are configured to set their search policies automatically. 
An automatic search policy consists of three parts, two of which are optional:
• Local directory domain
• Shared NetInfo domains (optional)
• Shared LDAP directory (optional)
A computer’s automatic search policy always begins with the computer’s local directory 
domain. If a Mac OS X computer is not connected to a network, the computer searches 
only its local directory domain for user accounts and other administrative data.
School directory domain
Science directory domain
Math directory domain
English directory domain
1
2
3
Search Policy
LL2352.Book  Page 30  Friday, August 22, 2003  3:12 PM
Chapter 2    Open Directory Search Policies
31
Next the automatic search policy looks at the binding of shared NetInfo domains. The 
computer’s local domain can be bound to a shared NetInfo domain, which can in turn 
be bound to another shared NetInfo domain, and so on. The NetInfo binding, if any, 
constitutes the second part of the automatic search policy. See “About NetInfo Binding” 
on page 110 for additional information.
Finally, a computer with an automatic search policy can bind to a shared LDAP 
directory. When the computer starts up, it can get the address of an LDAP directory 
server from DHCP service. The DHCP service of Mac OS X Server can supply an LDAP 
server address just as it supplies the addresses of DNS servers and a router. (A non-
Apple DHCP service may also be able to supply an LDAP server address; this feature is 
known as DHCP option 95.)
If you want the DHCP service of Mac OS X Server to supply its clients with a particular 
LDAP server’s address for their automatic search policies, you need to configure the 
LDAP options of DHCP service. For instructions, see the DHCP chapter of the network 
services administration guide.
If you want a Mac OS X computer to get the address of an LDAP server from DHCP 
service:
• The computer must be configured to use an automatic search policy. Mac OS X 
version 10.2 and later is initially configured to use an automatic search policy. See 
“Setting Up the Authentication and Contacts Search Policies” on page 87 for more 
information.
• The computer’s Network preferences must be configured to use DHCP or DHCP with 
manual IP address. Mac OS X is initially configured to use DHCP. For information on 
setting Network preferences, search Mac Help. 
An automatic search policy offers convenience and flexibility and is the recommended 
option, especially for mobile computers. If a computer with an automatic search policy 
is disconnected from the network, connected to a different network, or moved to a 
different subnet, the automatic search policy can change. If the computer is 
disconnected from the network, it uses its local directory domain. If the computer is 
connected to a different network or subnet, it can automatically change its NetInfo 
binding and can get an LDAP server address from the DHCP service on the current 
subnet. With an automatic search policy, a computer doesn’t have to be reconfigured 
to get directory and authentication services in its new location.
LL2352.Book  Page 31  Friday, August 22, 2003  3:12 PM
32
Chapter 2    Open Directory Search Policies
Custom Search Policies
If you don’t want a Mac OS X computer to use the automatic search policy supplied by 
DHCP, you can define a custom search policy for the computer. For example, a custom 
search policy could specify that an Active Directory domain be consulted when a user 
record or other administrative data cannot be found in other directory domains.
A custom search policy may not work in multiple network locations because it relies on 
the availability of specific directory domains. Therefore a custom search policy is usually 
not the best choice for a mobile computer. An automatic or local-only search policy is 
generally more reliable for a mobile computer.
Search Policies for Authentication and Contacts
A Mac OS X computer actually has more than one search policy. It has a search policy 
for finding authentication information, and it has a separate search policy for finding 
contact information. Open Directory uses the authentication search policy to locate 
and retrieve user authentication information and other administrative data from 
directory domains. Open Directory uses the contacts search policy to locate and 
retrieve name, address, and other contact information from directory domains. 
Mac OS X Address Book uses this contact information, and other applications can be 
programmed to use it as well.
Each search policy can be automatic, custom, or local directory only.
Active Directory domain
1
2
3
4
Search Policy
School directory domain
Science directory domain
Math directory domain
English directory domain
LL2352.Book  Page 32  Friday, August 22, 2003  3:12 PM
3
33
3 User Authentication With 
Open Directory
Open Directory offers a variety of options for 
authenticating users whose accounts are stored in 
directory domains on Mac OS X Server, including 
Kerberos and the many authentication methods that 
network services require.
Open Directory can authenticate users by:
• Using single signon with the Kerberos KDC built into Mac OS X Server
• Using a password stored securely in the Open Directory Password Server database
• Using a shadow password stored as several hashes, including NT and LAN Manager, 
in a file that only the root user can access
• Using a crypt password stored directly in the user’s account, for backward 
compatibility with legacy systems
• Using a non-Apple LDAP server for LDAP bind authentication
In addition, Open Directory lets you set up specific password policies for each user, 
such as automatic password expiration and minimum password length. (Password 
policies do not apply to shadow passwords, crypt passwords, or LDAP bind 
authentication.)
This chapter describes the authentication options available in Mac OS X Server. 
Authentication and Authorization
Services such as the login window and Apple file service request user authentication 
from Open Directory. Authentication is part of the process by which a service 
determines whether it should grant a user access to a resource. Usually this process 
also requires authorization. Authentication proves a user’s identity, and authorization 
determines what the authenticated user is allowed to do. A user typically authenticates 
by providing a valid name and password. A service can then authorize the 
authenticated user to access specific resources. For example, file service authorizes full 
access to folders and files that an authenticated user owns.
LL2352.Book  Page 33  Friday, August 22, 2003  3:12 PM
34
Chapter 3    User Authentication With Open Directory
You experience authentication and authorization when you use a credit card. The 
merchant authenticates you by comparing your signature on the sales slip to the 
signature on your credit card. Then the merchant submits your authorized credit card 
account number to the bank, which authorizes payment based on your account 
balance and credit limit.
Open Directory authenticates user accounts, but does not authorize access to any 
services. After Open Directory authenticates you, the login window can authorize you 
to log in, file service can authorize access to certain folders and files, mail service can 
authorize access to your email, and so on.
Determining Which Authentication Option to Use
To authenticate a user, Open Directory first must determine which authentication 
option to use—Kerberos, Open Directory Password Server, shadow password, crypt 
password, or LDAP bind. The user’s account contains information that specifies which 
authentication option to use. This information is called the authentication authority 
attribute. Therefore Open Directory uses the name provided by the user to locate the 
user’s account in the directory domain. Then Open Directory consults the 
authentication authority attribute in the user’s account and learns which authentication 
option to use. 
The authentication authority attribute is not limited to specifying a single 
authentication option. For example, an authentication authority attribute could specify 
that a user can be authenticated by Kerberos and Open Directory Password Server. 
Nor must a user’s account contain an authentication authority attribute at all. If a user’s 
account contains no authentication authority attribute, Mac OS X Server assumes a 
crypt password is stored in the user’s account. For example, user accounts created 
using Mac OS X version 10.1 and earlier contain a crypt password but not an 
authentication authority attribute.
You can change a user’s authentication authority attribute by changing the password 
type in the Advanced pane of Workgroup Manager. Some password type settings result 
in the authentication authority attribute specifying more than one authentication 
option. See Chapter 6, “Managing User Authentication,” for instructions on setting the 
password type.
LL2352.Book  Page 34  Friday, August 22, 2003  3:12 PM
Chapter 3    User Authentication With Open Directory
35
Open Directory Authentication
When a user’s account has a password type of Open Directory, the user can be 
authenticated by Kerberos or the Open Directory Password Server. Neither Kerberos 
nor Open Directory Password Server stores the password in the user’s account.
Both Kerberos and Open Directory Password Server store passwords outside the 
directory domain and never allow passwords to be read. Passwords can only be set and 
verified. Malicious users might attempt to log in over the network hoping to gain 
access to Kerberos and Open Directory Password Server. The Open Directory logs can 
alert you to unsuccessful login attempts. (See “Viewing Open Directory Status and 
Logs” on page 115.)
Password Policies
Both Kerberos and Open Directory Password Server enforce password policies. For 
example, a user’s password policy can specify a password expiration interval. If the user 
is logging in and Open Directory discovers the user’s password has expired, the user 
must replace the expired password. Then Open Directory can authenticate the user.
Password policies can disable a user account on a certain date, after a number of days, 
after a period of inactivity, or after a number of failed login attempts. Password policies 
can also require passwords to be a minimum length, contain at least one letter, contain 
at least one numeral, differ from the account name, differ from recent passwords, or be 
changed periodically. Open DIrectory applies the same password policy rules to Open 
Directory Password Server and Kerberos, except that Kerberos does not support all the 
rules.
Password policies do not affect administrator accounts. Administrators are exempt from 
password policies because they can change the policies at will. In addition, enforcing 
password policies on administrators would subject them to denial-of-service attacks.
Which Users Can Have Open Directory Passwords
All user accounts stored on a server with Mac OS X Server version 10.3 can be 
configured to have a password type of Open Directory. User accounts in the server’s 
local directory domain can be configured to have a password type of Open Directory. If 
this server hosts a shared directory domain, user accounts in it can also be configured 
to have a password type of Open Directory. 
Users who need to log in using the login window of Mac OS X version 10.1 or earlier 
must be configured to use crypt passwords. The password type doesn’t matter for 
other services. For example, a user could authenticate for Apple file service with an 
Open Directory password.
LL2352.Book  Page 35  Friday, August 22, 2003  3:12 PM
36
Chapter 3    User Authentication With Open Directory
Open Directory Password Server Authentication Methods
The Open Directory Password Server is based on a standard known as Simple 
Authentication and Security Layer (SASL). It is an extensible authentication scheme that 
allows Open Directory Password Server to support a variety of network user 
authentication methods required by mail service, file services, and other services of 
Mac OS X Server. Each service negotiates with Open Directory Password Server for an 
authentication method before exchanging user credentials. 
The Open Directory Password Server supports authentication methods that do not 
require a clear text password be stored in the Open Directory Password Server 
database. Only encrypted passwords, called hashes, are stored in the database. These 
methods are CRAM-MD5, DHX, Digest-MD5, MS-CHAPv2, SMB-NT, and SMB-LAN 
Manager.
No one—including an administrator and the root user—can recover encrypted 
passwords by reading them from the database. An administrator can use Workgroup 
Manager to set a user’s password, but can’t read any user’s password. 
In addition, Open Directory Password Server supports authentication methods that 
may require a clear text password be stored in the authentication database. These 
methods are APOP and WebDAV-Digest. 
Note:  If you connect Mac OS X Server version 10.3 or later to a directory domain of 
Mac OS X Server version 10.2 or earlier, be aware that users defined in the older 
directory domain cannot be authenticated with the MS-CHAPv2 method. This method 
may be required to securely authenticate users for the VPN service of Mac OS X Server 
version 10.3 and later. Open Directory Password Server in Mac OS X Server version 10.3 
supports MS-CHAPv2 authentication, but Password Server in Mac OS X Server version 
10.2 does not support MS-CHAPv2.
Contents of Open Directory Password Server Database
Open Directory Password Server maintains an authentication database separate from 
the Mac OS X Server directory domain. Open Directory tightly restricts access to the 
authentication database, whereas anyone on the network can access the directory 
domain.
Open Directory Password Server maintains a record in its authentication database for 
each user account that has a password type of Open Directory. An authentication 
record includes the following:
• The user’s password ID is a 128-bit value assigned when the password is created. It is 
also stored in the user’s record in the directory domain and is used as a key for 
finding a user’s record in the Open Directory Password Server database.
LL2352.Book  Page 36  Friday, August 22, 2003  3:12 PM
Chapter 3    User Authentication With Open Directory
37
• The password is stored in recoverable (clear text) or hashed (encrypted) form. The 
form depends on the authentication method. A recoverable password is stored for 
the APOP and WebDAV authentication methods. For all other methods, the record 
stores a hashed (encrypted) password. If no authentication method requiring a clear 
text password is enabled, the Open Directory authentication database stores only 
hashes of passwords. 
• The user’s short name, for use in log messages viewable in Server Admin. 
• Password policy data. 
Kerberos Authentication
Kerberos is a network authentication protocol developed at MIT to provide secure 
authentication and communication over open networks. In addition, Kerberos enables 
single signon authentication (see “Single Signon” on page 39). 
Mac OS X and Mac OS X Server versions 10.2 and later support Kerberos v5. If your 
network already has a Kerberos Key Distribution Center (KDC), you can set up your 
Mac OS X computers to use it for authentication. 
If a server with Mac OS X Server version 10.3 has a shared LDAP directory, the server 
also has a Kerberos KDC built in. This KDC can authenticate all users whose accounts 
are stored in a directory domain on the server and whose password type is Open 
Directory. The built-in KDC requires minimal setup. Computers with Mac OS X version 
10.3 and later require minimal setup to use the Mac OS X Server KDC for authentication 
of user accounts stored on the server. 
Kerberized Services
Kerberos can authenticate users for the following services of Mac OS X Server:
• Login window
• Mail service
• FTP
• AFP service
• SSH
These services have been “Kerberized.” Only services that have been Kerberized can use 
Kerberos to authenticate a user.
Kerberos Principals and Realms
Kerberized services are configured to authenticate principals who are known to a 
particular Kerberos realm. You can think of a realm as a particular Kerberos database or 
authentication domain, which contains validation data for users, services, and 
sometimes servers, which are all known as principals. For example, a realm contains 
principals’ secret keys, which are the result of a one-way function applied to passwords. 
Service principals are generally based on randomly generated secrets rather than 
passwords. 
LL2352.Book  Page 37  Friday, August 22, 2003  3:12 PM
38
Chapter 3    User Authentication With Open Directory
Here are examples of realm and principal names; note that realm names are capitalized 
by convention to distinguish them from DNS domain names:
• Realm:  MYREALM.EXAMPLE.COM
• User principal:  PI:EMAIL
• Service principal:  afpserver/PI:EMAIL
Kerberos Authentication Process
There are several phases to Kerberos authentication. In the first phase, the client 
obtains credentials to be used to request access to Kerberized services. In the second 
phase, the client requests authentication for a specific service. In the final phase, the 
client presents those credentials to the service. 
The following illustration summarizes these activities. Note that the service and the 
client in this picture may be the same entity (such as the login window) or two 
different entities (such as a mail client and the mail server).
1 The client authenticates to a Kerberos KDC, which interacts with realms to access 
authentication data. This is the only step in which passwords and associated password 
policy information needs to be checked.
2 The KDC issues the client a ticket-granting ticket, the credential needed when the client 
wants to use Kerberized services. The ticket-granting ticket is good for a configurable 
period of time, but can be revoked before expiration. It is cached on the client until it 
expires.
3 The client contacts the KDC with the ticket-granting ticket when it wants to use a 
particular Kerberized service.
4 The KDC issues a ticket for that service.
5 The client presents the ticket to the service.
6 The service verifies that the ticket is valid. If the ticket is valid, use of the service is 
granted to the client if the client is authorized to use the service. (Kerberos only 
authenticates clients; it does not authorize them to use services. An AFP server, for 
example, needs to consult a user’s account in a directory domain to obtain the UID.) 
The service uses information in the ticket if required to retrieve additional information 
about the user from a directory domain.
Key Distribution
Center (KDC)
Kerberized
service
1
2
3
4
5
6
Client
LL2352.Book  Page 38  Friday, August 22, 2003  3:12 PM
Chapter 3    User Authentication With Open Directory
39
Note that the service does not need to know any password or password policy 
information. Once a ticket-granting ticket has been obtained, no password information 
needs to be provided.
Time is very important with Kerberos. If the client and the KDC are out of sync by more 
than a few minutes, the client will fail to achieve authentication with the KDC. The date, 
time, and time zone information needs to be correct on the KDC server and clients, and 
they all should use the same network time service to keep their clocks in sync.
For more information on Kerberos, go to the MIT Kerberos website:
web.mit.edu/kerberos/www/index.html
Single Signon
Mac OS X Server uses Kerberos for single signon authentication, which relieves users 
from entering a name and password separately for every Kerberized service. With single 