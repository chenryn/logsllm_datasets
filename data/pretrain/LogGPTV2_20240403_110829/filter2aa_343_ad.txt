### Instructors and Students in Shared and Local Domains

Instructors, as members of the shared domain, can log in to all class computers. Conversely, students in each local domain can only log in to the computer where their local account is stored.

While local domains are specific to individual computers, a shared domain is hosted on a server that is accessible from any local domain's computer. When an instructor logs in to any of the three class computers and their account is not found in the local domain, Open Directory searches the shared domain. In this example, there is only one shared domain, but more complex networks may have multiple shared domains.

### Multilevel Search Policies

If more than one server on the network hosts a shared directory, the computers on the network can include two or more shared directories in their search policies. Open Directory always first looks for user information and other administrative data in the local directory. If the required information is not found in the local directory, it searches each shared directory in the sequence specified by the search policy.

#### Example Scenario
- Each class (English, math, science) has a server hosting a shared directory domain.
- Each classroom computer’s search policy specifies the computer’s local domain, the class’s shared domain, and the school’s shared domain.
- Students in each class are defined as users in the shared domain of that class’s server, allowing them to log in to any computer in the class.
- Instructors are defined in the shared domain of the school server, allowing them to log in to any classroom computer.

By choosing the domain in which to define administrative data, you can affect an entire network or just a group of computers. The higher the administrative data resides in a search policy, the fewer places it needs to be changed as users and system resources change. Proper planning of directory domains and search policies is crucial for administrators, as it reflects the resources to be shared, the users to share them with, and the management of directory data.

### Automatic Search Policies

Initially, Mac OS X computers are configured to set their search policies automatically. An automatic search policy consists of three parts, two of which are optional:
1. **Local directory domain**
2. **Shared NetInfo domains (optional)**
3. **Shared LDAP directory (optional)**

A computer’s automatic search policy always starts with the local directory domain. If a Mac OS X computer is not connected to a network, it searches only its local directory domain for user accounts and other administrative data.

#### Search Policy Sequence
1. **Local directory domain**
2. **Shared NetInfo domains** (if bound)
3. **Shared LDAP directory** (if available)

When the computer starts up, it can get the address of an LDAP directory server from DHCP service. The DHCP service of Mac OS X Server can supply an LDAP server address, similar to how it provides DNS server addresses and router information. A non-Apple DHCP service may also supply an LDAP server address, known as DHCP option 95.

To configure the DHCP service of Mac OS X Server to supply a specific LDAP server’s address for automatic search policies, you need to set up the LDAP options in the DHCP service. For detailed instructions, refer to the DHCP chapter in the network services administration guide.

For a Mac OS X computer to get the address of an LDAP server from DHCP service:
- The computer must be configured to use an automatic search policy. Mac OS X version 10.2 and later is initially configured to use an automatic search policy.
- The computer’s Network preferences must be set to use DHCP or DHCP with manual IP address. Mac OS X is initially configured to use DHCP.

An automatic search policy offers convenience and flexibility, especially for mobile computers. If a computer with an automatic search policy is disconnected from the network, connected to a different network, or moved to a different subnet, the search policy can adapt. If the computer is disconnected from the network, it uses its local directory domain. If the computer is connected to a different network or subnet, it can automatically change its NetInfo binding and get an LDAP server address from the DHCP service on the current subnet.

### Custom Search Policies

If you prefer not to use the automatic search policy supplied by DHCP, you can define a custom search policy for the computer. For example, a custom search policy could specify that an Active Directory domain be consulted if a user record or other administrative data cannot be found in other directory domains.

A custom search policy may not work well in multiple network locations because it relies on the availability of specific directory domains. Therefore, a custom search policy is generally not the best choice for a mobile computer. An automatic or local-only search policy is usually more reliable for a mobile computer.

### Search Policies for Authentication and Contacts

A Mac OS X computer has separate search policies for authentication and contact information. Open Directory uses the authentication search policy to locate and retrieve user authentication information and other administrative data from directory domains. It uses the contacts search policy to locate and retrieve name, address, and other contact information from directory domains. Mac OS X Address Book and other applications can use this contact information.

Each search policy can be:
- **Automatic**
- **Custom**
- **Local directory only**

### User Authentication with Open Directory

Open Directory offers various options for authenticating users whose accounts are stored in directory domains on Mac OS X Server, including Kerberos and other methods required by network services.

#### Authentication Methods
- **Kerberos KDC**: Single sign-on with the built-in Kerberos KDC.
- **Open Directory Password Server**: Securely stored passwords.
- **Shadow password**: Stored as several hashes, including NT and LAN Manager, in a file accessible only by the root user.
- **Crypt password**: Stored directly in the user’s account for backward compatibility.
- **Non-Apple LDAP server**: For LDAP bind authentication.

#### Password Policies
- **Expiration and Length**: Set expiration intervals and minimum length.
- **Account Disabling**: Disable accounts on a certain date, after a number of days, after inactivity, or after failed login attempts.
- **Password Complexity**: Require letters, numerals, and differences from recent passwords.

Password policies do not apply to shadow passwords, crypt passwords, or LDAP bind authentication. Administrators are exempt from password policies to prevent denial-of-service attacks.

#### Open Directory Password Server
- **SASL-based**: Supports various authentication methods without storing clear text passwords.
- **Supported Methods**: CRAM-MD5, DHX, Digest-MD5, MS-CHAPv2, SMB-NT, and SMB-LAN Manager.
- **Clear Text Methods**: APOP and WebDAV-Digest.

#### Kerberos Authentication
- **Network Authentication Protocol**: Developed at MIT for secure authentication and communication over open networks.
- **Single Sign-On**: Relieves users from entering credentials for each Kerberized service.
- **Kerberized Services**: Login window, mail service, FTP, AFP service, SSH.

Kerberos authentication involves obtaining a ticket-granting ticket from the KDC, using it to request service tickets, and presenting these tickets to Kerberized services. Time synchronization is critical for Kerberos to function correctly.

For more information on Kerberos, visit the MIT Kerberos website: [web.mit.edu/kerberos/www/index.html](http://web.mit.edu/kerberos/www/index.html)