log4j.appender.DATABASE.layout.ConversionPattern=[framework] %d - %c -%-4r [%t] %-5p %c %x - %m%n  
log4j.appender.A1=org.apache.log4j.DailyRollingFileAppender   
log4j.appender.A1.File=SampleMessages.log4j   
log4j.appender.A1.DatePattern=yyyyMMdd-HH'.log4j'   
log4j.appender.A1.layout=org.apache.log4j.xml.XMLLayout  
###################   
#自定义Appender   
###################   
log4j.appender.im = net.cybercorlin.util.logger.appender.IMAppender  
log4j.appender.im.host = mail.cybercorlin.net   
log4j.appender.im.username = username   
log4j.appender.im.password = password   
log4j.appender.im.recipient = PI:EMAIL  
log4j.appender.im.layout=org.apache.log4j.PatternLayout   
log4j.appender.im.layout.ConversionPattern =[framework] %d - %c -%-4r [%t] %-5p %c %x - %m%n  
```  
### 三. 高级使用  
#### 实验目的：  
1\. 把FATAL级错误写入2000NT日志  
2\. WARN，ERROR，FATAL级错误发送email通知管理员  
3\. 其他级别的错误直接在后台输出  
#### 实验步骤：  
#### 输出到2000NT日志  
1\. 把Log4j压缩包里的NTEventLogAppender.dll拷到WINNT\SYSTEM32目录下  
2\. 写配置文件log4j.properties  
```  
# 在2000系统日志输出  
 log4j.logger.NTlog=FATAL, A8  
 # APPENDER A8  
 log4j.appender.A8=org.apache.log4j.nt.NTEventLogAppender  
 log4j.appender.A8.Source=JavaTest  
 log4j.appender.A8.layout=org.apache.log4j.PatternLayout  
 log4j.appender.A8.layout.ConversionPattern=%-4r %-5p [%t] %37c %3x - %m%n  
```  
3\. 调用代码：  
```  
 Logger logger2 = Logger.getLogger("NTlog"); //要和配置文件中设置的名字相同  
 logger2.debug("debug!!!");  
 logger2.info("info!!!");  
 logger2.warn("warn!!!");  
 logger2.error("error!!!");  
 //只有这个错误才会写入2000日志  
 logger2.fatal("fatal!!!");  
```  
#### 发送email通知管理员：  
1\. 首先下载JavaMail和JAF,   
```  
  http://java.sun.com/j2ee/ja/javamail/index.html  
  http://java.sun.com/beans/glasgow/jaf.html  
```  
在项目中引用mail.jar和activation.jar。  
2\. 写配置文件  
```  
 # 将日志发送到email  
 log4j.logger.MailLog=WARN,A5  
 #  APPENDER A5  
 log4j.appender.A5=org.apache.log4j.net.SMTPAppender  
 log4j.appender.A5.BufferSize=5  
 log4j.appender.A5.To=PI:EMAIL  
 log4j.appender.A5.From=PI:EMAIL  
 log4j.appender.A5.Subject=ErrorLog  
 log4j.appender.A5.SMTPHost=smtp.263.net  
 log4j.appender.A5.layout=org.apache.log4j.PatternLayout  
 log4j.appender.A5.layout.ConversionPattern=%-4r %-5p [%t] %37c %3x - %m%n  
```  
3\. 调用代码：  
```  
 //把日志发送到mail  
 Logger logger3 = Logger.getLogger("MailLog");  
 logger3.warn("warn!!!");  
 logger3.error("error!!!");  
 logger3.fatal("fatal!!!");  
```  
#### 在后台输出所有类别的错误：  
1\. 写配置文件  
```  
 # 在后台输出  
 log4j.logger.console=DEBUG, A1  
 # APPENDER A1  
 log4j.appender.A1=org.apache.log4j.ConsoleAppender  
 log4j.appender.A1.layout=org.apache.log4j.PatternLayout  
 log4j.appender.A1.layout.ConversionPattern=%-4r %-5p [%t] %37c %3x - %m%n  
```  
2\. 调用代码  
```  
 Logger logger1 = Logger.getLogger("console");  
 logger1.debug("debug!!!");  
 logger1.info("info!!!");  
 logger1.warn("warn!!!");  
 logger1.error("error!!!");  
 logger1.fatal("fatal!!!");  
```  
--------------------------------------------------------------------  
全部配置文件：log4j.properties  
```  
 # 在后台输出  
 log4j.logger.console=DEBUG, A1  
 # APPENDER A1  
 log4j.appender.A1=org.apache.log4j.ConsoleAppender  
 log4j.appender.A1.layout=org.apache.log4j.PatternLayout  
 log4j.appender.A1.layout.ConversionPattern=%-4r %-5p [%t] %37c %3x - %m%n  
# 在2000系统日志输出  
 log4j.logger.NTlog=FATAL, A8  
 # APPENDER A8  
 log4j.appender.A8=org.apache.log4j.nt.NTEventLogAppender  
 log4j.appender.A8.Source=JavaTest  
 log4j.appender.A8.layout=org.apache.log4j.PatternLayout  
 log4j.appender.A8.layout.ConversionPattern=%-4r %-5p [%t] %37c %3x - %m%n  
# 将日志发送到email  
 log4j.logger.MailLog=WARN,A5  
 #  APPENDER A5  
 log4j.appender.A5=org.apache.log4j.net.SMTPAppender  
 log4j.appender.A5.BufferSize=5  
 log4j.appender.A5.To=PI:EMAIL  
 log4j.appender.A5.From=PI:EMAIL  
 log4j.appender.A5.Subject=ErrorLog  
 log4j.appender.A5.SMTPHost=smtp.263.net  
 log4j.appender.A5.layout=org.apache.log4j.PatternLayout  
 log4j.appender.A5.layout.ConversionPattern=%-4r %-5p [%t] %37c %3x - %m%n  
```  
#### 全部代码  
Log4jTest.java  
```  
/*   
  * 创建日期 2003-11-13   
  */   
 package edu.bcu.Bean;   
 import org.apache.log4j.*;   
 //import org.apache.log4j.nt.*;   
 //import org.apache.log4j.net.*;   
 /**   
  * @author yanxu   
  */   
 public class Log4jTest   
 {   
  public static void main(String args[])   
  {   
   PropertyConfigurator.configure("log4j.properties");   
   //在后台输出   
   Logger logger1 = Logger.getLogger("console");   
   logger1.debug("debug!!!");   
   logger1.info("info!!!");   
   logger1.warn("warn!!!");   
   logger1.error("error!!!");   
   logger1.fatal("fatal!!!");  
//在NT系统日志输出   
   Logger logger2 = Logger.getLogger("NTlog");   
   //NTEventLogAppender nla = new NTEventLogAppender();   
   logger2.debug("debug!!!");   
   logger2.info("info!!!");   
   logger2.warn("warn!!!");   
   logger2.error("error!!!");   
   //只有这个错误才会写入2000日志   
   logger2.fatal("fatal!!!");  
//把日志发送到mail   
   Logger logger3 = Logger.getLogger("MailLog");   
   //SMTPAppender sa = new SMTPAppender();   
   logger3.warn("warn!!!");   
   logger3.error("error!!!");   
   logger3.fatal("fatal!!!");   
  }   
 }  
```  
## 参考  
http://baike.baidu.com/view/25347.htm  
http://www.cnblogs.com/ITEagle/archive/2010/04/23/1718365.html  
http://www.blogjava.net/zJun/archive/2006/06/28/55511.html  
https://logging.apache.org/log4j/2.x/  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")