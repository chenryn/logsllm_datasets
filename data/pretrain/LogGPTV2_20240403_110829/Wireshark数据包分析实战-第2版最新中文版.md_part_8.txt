是本地的还是远程的。你选中接口的IP地址会在这个下拉菜单的正下方显示
下拉菜单显示了所有可用的捕获接口，在左边的下拉菜单中，你可以设定接口
或者每过1min（以先满足的条件为准），就创建一个新文件。
值和单位。举例来说，你可以创建一个每捕获IMB或者一分钟的流量就创建一
文件大小的触发器，下面的那个是基于时间的触发器），然后输入触发条件的数
理。如果想启用这些功能，在Next File Every选项旁边打勾（最上面的那个是
果将数据存到文件集中，在这里需勾选MultipleFiles选项。
储被证明是很好用的。文件集是通过特定条件进行分割的一组文件的集合。如
果你想开启这个功能，你需要在File文本框中输入完整的文件路径和文件名。
为单一文件或者一个文件集，甚至还可以使用环状缓冲来控制创建的文件数量。如
捕获再存储。这样你在管理数据包的储存上有了更大的灵活性。你可以将它们存储
个新文件的触发器，如图49所示。
对话框左侧的3个选框可以让你开启或关闭混杂模式（默认为开启）、以实
当你所捕获的流量很大，或者捕获的持续时间很长时，使用文件集进行存
这些选项也可以进行组合，比如你可以创建两个触发器，每当文件超过1MB
Wireshark使用基于文件大小或是时间条件的各种触发器，对文件集进行管
CaptureFile(s）部分可以让你自动将捕获的数据包直接存储到文件中，而不是先
Capture部分右侧的按钮可以让你进行无线和远程的设定（如果可用）。在
你可以在Capture部分中的Interface下拉菜单中设定网络接口，其中右边的
第4章玩转捕获数据包61
---
## Page 80
4.4.3
4.4.4
62Wireshark数据包分析实战（第2版）
动滚动一
停止捕获选项
显示选项
后并且仍有数据需要写入磁盘时，第一个文件会被覆盖。你可以勾选这个选项，
信息科学中有着多种意思，但在这里我们指的是当文件集中最后一个文件写完
用在Wireshark写入多个文件时的一个先进先出（FIFO）算法。尽管环状缓冲在
个文件被创建之后，这个环状缓冲会循环回来覆盖第1个文件，而不是创建第7
用多文件存储时，每小时创建一个文件，然后你将环状缓冲设为6，那么第6
然后指定你希望循环使用的文件的最大数目。举例来说，当你在你的捕获中使
中也意味着6个小时）的数据会留在你的硬盘中。
为触发条件。这些选项可以与之前介绍的多文件捕获一起使用。
RingBufferWith选项可以让你使用环状缓冲创建一个文件集。这是一个应
译者注
并且新捕获的数据包会立刻显示出来。
StopCaptureAfer选项可以让你在一定数目的文件被创建之后停止当前捕获。
Name
Capture_00001_20091115155100
图4-9Wireshark以1min为间隔所创建的文件集
Capture_00002_20091115155200
Capture_00006_20091115155600
Capture_00005_20091115155500
Capture_00004_20091115155400
Capture_00003_20091115155300
Capture_00010_20091115160000
Capture_0009_20091115155900
Capture_00008_20091115155800
Capture_0007_20091115155700
11/15/20113:57PM
11/15/20113:56PM
11/15/20113:56PM
11/15/20113:54PM
11/15/20113:53PM
11/15/20113:51PM
Datemodified
11/15/20114:00PM
11/15/20113:59PM
11/15/20113:58PM
---
## Page 81
4.4.5
4.5.1
警告
使用过滤器
名字解析选项
捕获过滤器
入地讨论Wireshark的名字解析以及其不足。
2层）、网络层（第3层）和传输层（第4层）的名字解析。我们将在第5章深
量和比率的小窗口。
担。除非你一定需要实时查看数据包，否则最好将这两个选项都取消掉，
选项都被选中并且当捕获一定数量的数据包时，这将会对处理器产生相当的负
滤器过滤掉它，从而节省那些会被用来捕获这些数据包的处理器资源。
性能。如果你知道你并不需要分析某个类型的流量，你可以简单地使用捕获过
你可以写一个只显示这些数据包的过滤器。
一些数据包，你可以写一个过滤器来屏蔽它们。如果你希望只看到某些数据包，
就是定义了一定条件，用来包含或者排除数据包的表达式。如果你不希望看到
捕获过滤器用于进行数据包捕获的实际场合，使用它的一个主要原因就是
捕获过滤器：当进行数据包捕获时，只有那些满足给定的包含/排除表达式
Name Resolution部分可以让你在你的捕获中，启用自动的数据链路层（第
过滤器可以让你找出你所希望进行分析的数据包。简单来说，
HideCaptureInfoDialog选项可以让你屏蔽掉用来根据协议显示数据包数
显示过滤器：该过滤器根据指定的表达式用于在一个已捕获的数据包集合
当Update List of Packets in Real Time 和 Automatic Scrolling in Live Capture
当处理大量数据的时候，创建自定义的捕获过滤器是相当好用的。它可以
我们先看一下捕获过滤器。
中，隐藏不想显示的数据包，或者只显示那些需要的数据包。
的数据包会被捕获。
Wireshark主要提供两种主要的过滤器。
第4章玩转捕获数据包63
一个过滤器
---
## Page 82
64Wireshark数据包分析实战（第2版）
让你专注于那些与你手头事情有关的数据包，从而加速分析过程。
运行于262端口的流量本身可能就具有一定的工作量。你可以通过本章前面讨
正在分析的那台服务器在许多端口运行着各种不同的网络服务，找到并分析只
Options按钮，以打开CaptureOptions对话框。
论过的Capture Options对话框达到目的，步骤如下所示。
port262（我们将在下一区段中仔细地讨论关于过滤表达式的问题）。
望我们的过滤器只显示出262端口的出站和入站流量，所以如图4-10所示输入
举个简单例子，你在一台有多种角色的服务器上捕获流量时，
1.选择Capture->Interfaces，然后单击你想要进行数据包捕获的设备旁的
3.你可以在FilterButton旁输入一个表达式，并应用捕获过滤器。我们希
选择你想进行数据包捕获的设备，然后选择一个捕获过滤器。
WireshacCaptueOption
Catrepkespm
Limt each packet to1
LinyehtypeEthee
(apture Fileis)
4.当你设定好你的过滤器之后，单击Start开始捕获。
uemuliplefle
File
Stop Capture,
Kigtleth
Nottileey
fietfleerey
D
I 567LMGgbiNekCtonDvicNPF7D
packets)
Lmunutels
e
tela
Buffersze1
Udtetfpacketinrelm
Displey Options
EnableMACnameresluon
Name Resoluton
o
atlnginivaue
Enlt nltn
Enableonamesln
Remiote Settings
WireesSettingx
Start
megabytelx)
很可能会用
---
## Page 83
达式。
的流量
语。这个原语本身就是表达式，可以用它只捕获那些源IP地址是192.168.0.10
表42所列），如图4-11所示。
个原语。每个原语包含一个或多个限定词，然后跟着一个ID名字或者数字（如
入地探索网络来说，非常关键。
依赖于使用 BPF的 libpcap/WinPcap库。掌握BPF语法对你在数据包层级更深
这个语法被广泛用于多种数据包噢探软件，主要因为大部分数据包噢探软件都
更有效率地分析这些数据了。
Proto
Dir
Type
限定词
表4-2BPF限定词
连接运算符
你可以使用以下3种逻辑运算符，对原语进行组合，从而创建更高级的表
使用BPF语法创建的过滤器被称为表达式，并且每个表达式包含一个或多
否定运算符非（）
选择运算符或（）
在给定表达式的组成部分中，
捕获过滤器应用于WinPcap，
1.捕获过滤器的BPP语法
限定词
与（&&）
#
限定所要匹配的协议
指明传输方向是前往还是来自名字或数字
指出名字或数字所代表的意义
说明
图4-11
限定调
192.168.0.10
原语
一个捕获过滤器样例
一个src限定词和192.168.0.10组成了一个原
并使用BerkeleyPacketFilter（BPF）语法。
操作符
原语
cther、ip、tcp、udp、htp、ftp
src、dst
host、net、port
例子
玩转捕获数据包65
---
## Page 84
src 192.168.0.10&& port 80
口是80的流量进行捕获。
置过滤规则。
个情况，可以根据设备的MAC地址、IPv4地址、IPv6地址或者DNS主机名配
来捕获所有和那台主机IPv4地址相关的流量。
生的流量感兴趣，你在这台服务器上可以创建一个使用host限定词的过滤器，
词进行过滤，如下所示。
host 172.16.16.149
协议限定词，对它的MAC地址进行过滤。
host testserver2
host 2001:db8:85a3:8a2e:370:7334
ether host 00-1a-a0-52-e2-a0
举例来说，假设你对一个正在和你网络中某个服务器进行交互的主机所产
你所创建的大多数过滤器都会关注于一个或一些特定的网络设备。根据这
2.主机名和地址过滤器
src host 172.16.16.149
入src限定词。
限定词将作为默认选择。
dst host 172.16.16.149
使用dst限定词。
如果你在使用一个IPv6网络，
dst172.16.16.149
你同样可以使用基于
3.端口和协议过滤器
不仅仅可以基于主机过滤，
一台设备的主机名host限定词进行过滤，就像以下这样。
你可能需要使用基于IPv6地址的host 限定
---
## Page 85
前往监听标准HTTP80端口的Web服务器的流量，使用dst限定符。
port 8080
只对8080端口进行流量捕获的简单过滤器的例子。
想在一个数据包内进行检查的位置。这样将返回一个1字节的整型值用于比较
符后输入由方括号括起的字节偏移量，在这个例子中就是icmp[0]，来指定我们
位于数据包的最开头也就是偏移量为0的位置，那么我们可以通过在协议限定
些高级过滤器，可以让你匹配一个数据包中从某一个特定位置开始一定数量
的每一字节来创建基于那些数据的特殊过滤器。在这节中我们将要讨论的这
ICMP流量，可以使用下面这个过滤器。
是应用层的不能简单地使用特定端口进行定义的协议。所以如果你只想看看
过滤器表达式中令其等于3，如下所示。
比如只想要得到代表目标不可达（类型3）信息的ICMP数据包，我们在我们的
的字节。
1ip6
icmp
dstport 80
来指定你希望返回给过滤器表达式的数据长度。
滤。当然，你也可以在方括号中偏移值的后面以冒号分隔加上一个字节长度，
数据包，使用带有OR运算符的两个原语。
icmp[0]==3
Iport 8080
icmp[0]==8||1cmp[0]==0
举例来说，假设我们想要基于ICMP过滤器的类型域进行过滤，而类型域
如果你想看除了IPv6之外的所有流量，下面这个过滤器能够满足要求。
端口过滤器可以和传输方向限定符一起使用。举例来说，如果希望只捕获
如果想要捕获除8080端口外的所有流量，如下所示。
如果只想要检查代表echo请求（类型8）或echo回复（类型0）的ICMP
BPF语法提供给我们的一项强大功能，就是我们可以通过检查协议头中
5.协议域过滤器
协议过滤器可以让你基于特定协议进行数据包过滤。这通常被用于那些不
这些过滤器尽管很好用，但是它们只能基于数据包头部的1个字节进行过
协议过滤器
第4章玩转捕获数据包67
---
## Page 86
每一比特位都是一个标志。在一个TCP数据包中，多个标志可以被同时设置，
深入讲述TCP的相关内容，而现在你只需要知道TCP数据包的标志位在偏移
进行有效过滤。我们必须通过在当前的原语中加入一个单一的&符号，来指定我
所以多个值可能都代表RST位被设置，所以我们不能只通过一个tcp[13]的值来
13字节的地方。有趣的是，
icmp[0:2]==0x0301
表数字4，也就是说这个比特位被设置成4，就代表这个标志被设置了。过滤器
们希望在这个字节中检查的比特位置。在这个字节中RST标志所在的比特位代
看上去是这个样子的。
们的过滤器应该会将其相应位置替换成这样。
tcp[13]&8==8
tcp[13]&4==4
表43给出了一些我经常使用的捕获过滤器。
过滤器
表43常用捕获过滤器
tp[13]&16-16
tcp[13]&32-32
tcp[13]&88
如果希望看到所有被设置了PSH标志（比特位代表数字8）的数据包，我
tcp[13]&1=
tcp[13]&2-
tcp[13]&4
etherhost00:00:00:00:00:00
tcp[13]-18
6.
（替换为你的MAC）
捕获过滤器表达式样例
尽管整个标志位加一起是1字节，但是这个字节
设置了PSH位的TCP数据包
设置了ACK位的TCP数据包
设置了URG位的TCP数据包
设置了RST位的TCP数据包
说明
流入或流出你MAC地址的流量
TCPSYN-ACK数据包
设置了FIN位的TCP数据包
设置了SYN位的TCP数据包
---
## Page 87
4.5.2
Filterlarp
显示过滤器
框中单击Caputre Filter按钮，然后单击Expression按钮
单地创建捕获和显示过滤器。如果想要打开这个对话框，在CaptureOption对话
有的ARP数据包了，如图4-12所示。如果想要删除过滤器，单击Clear按钮。
面板上方的Filter文本框中，然后输入！arp，就可以从PacketList面板中去掉所
广播之后可能会有用，所以最好是把它们暂时过滤掉，而不是删除它们。
如清理掉PacketList面板中与当前的分析问题无关的ARP广播，但是那些ARP
你仅仅需要清空显示过滤表达式。
却并不省略掉捕获文件中的其他数据。也就是说如果你想回到原先的捕获文件，
数据包。你可以在PacketList面板上方的Fiter文本框中，输入一个显示过滤器。
如果想要过滤掉捕获窗口中所有的ARP数据包，将你的鼠标放到PacketList
udp
司
icmp[0:2]==0x0301
broadcast
（替换为你的MAC）
letherhost00:00:00:00:00:00
过滤器
你可能会需要使用显示过滤器，来清理过滤文件中不相关的广播流量，比
icmp
图4-12使用PacketList面板上方的Filter文本框创建一个显示过滤器
过滤器表达式对话框，如图413所示，使得Wireshark的初学者也能很简
显示过滤器应用于捕获文件，用来告诉Wireshark只显示那些符合过滤条件的
对话框左边列出了所有可用的协议域，这些域指明了所有可能的过滤条件。
1.过滤器表达式对话框（简单方法）
显示过滤器比捕获过滤器更加常用，是因为它可以让你对数据包进行过滤
仅UDP流量
仅IPv6流量
仅IPv4流量
ICMP目标不可达、主机不可达
ICMP流量
仅广播流量
不流入或流出你MAC地址的流量
说明
第4章玩转捕获数据包69
Clear Apply
续表
---
## Page 88
如果想创建一个过滤器，按照如下步骤。
的域，