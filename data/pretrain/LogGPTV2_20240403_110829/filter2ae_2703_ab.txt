1.进入后台`站长`-`Ucenter设置`，设置UC_KEY=随意(一定要记住，后面要用), UC_API=
`http://127.0.0.1/discuz34/uc_server');phpinfo();//`
成功写进配置文件，这里单引号被转移了，我们接下来使用UC_KEY(dz)去调用`api/uc.php`中的`updateapps`函数更新UC_API。
2.利用UC_KEY(dz) 生成code参数，使用过UC_KEY(dz)
GetWebShell的同学肯定不陌生，这里使用的UC_KEY(dz)就是上面我们设置的。
3.将生成的数据带入GET请求中的code 参数，发送数据包 !
4.访问代码执行成功
到此成功GetWebShell，在这个过程中，有一点需要注意的是，我们修改了程序原有的UC_KEY(dz)，成功GetWebShell以后一定要修复，有2中方法：
  1. 从数据库中读取authkey(uc_server)，通过UC_MYKEY解密获得UC_KEY(dz)，当然也有可能authkey(uc_server)就是UC_KEY(dz)。
  2. 直接进入Ucenter后台修改UC_KEY，修改成我们GetWebShell过程中所设置的值。
# 0x03 XXE to 域控
在本节中我们会讲到WEBDAV XXE（JAVA）利用NTLM Relay和一个机器账户去设置基于资源的约束委派来RCE的故事。当然绕过卡巴斯基dump
lsass也是非常的精彩。流程图示如下：
## WEBDAV XXE
前文中已经提到了我们进入内网后发现一台部署着java应用的web服务器，并探测出该网站存在/webdav目录。
在一个国外安全研究员的ppt(What should a hacker know about WebDav? )中这样提到：
**一般webdav支持多种http方法，而PROPPATCH、PROPFIND、 LOCK等方法接受XML作为输入时会形成xxe** 。
我们探测下支持的http方法：
我们在测试PROPFIND方法时成功收到了xxe请求：
常规的xxe一般会想到任意文件读取、以及网上提到的利用gopher打redis等。在《Ghidra 从 XXE 到 RCE》中提到利用java
xxe做ntlm relay操作。由于sun.net.
发送HTTP请求遇到状态码为401的HTTP返回头时，会判断该页面要求使用哪种认证方式，若攻击者回复要求采用NTLM认证则会自动使用当前用户凭据进行认证。
现在我们成功获取到了NTLM认证请求，接下来就是NTLM中继了。
## NTLM中继和域机器账户添加
### 什么是NTLM中继
相信大家都不陌生，要理解什么是`NTLM中继`首先要知道NTLM认证的大致流程，这里做个简单讲述，详细请参考The NTLM Authentication
Protocol and Security Support Provider。
NTLM身份验证协议中包含3个步骤：
  1. 协商：NTLM身份验证的第一步是协议的协商，以及客户端支持哪些功能。在此阶段，客户端将身份验证请求发送到服务器，其中包括客户端接受的NTLM版本。
  2. 质询：服务器以自己的消息作为响应，指示其接受的NTLM版本以及要使用的功能。该消息还包括challenge值。
  3. 响应：收到challenge后客户端用hash将challenge加密，作为NTLM Response字段发送给服务器。
NTLM身份验证是基于质询响应的协议，服务器发送一个质询，客户端对这个质询进行回复。如果质询与服务器计算的质询匹配，则接受身份验证。
知道了NTLM身份认证的大致流程，我们再来说NTLM中继，如下图所示，如果我们可以让Client A 向我们的Evil Server
X，发起NTLM认证，那么我们就可以拿Client A的身份验证信息去向Server
B进行认证，这便是ntlm中继。看到这里你会觉得说了那么多不就是`中间人攻击`么，对就是中间人攻击。
知道了NTLM中继，结合Java WEBDAV XXE的作用，利用HTTP
401的认证，我们可以直接利用WEBDAV服务器的凭据向域控发起认证，让域控以为我们是WEBDAV服务器。
### 在域中增加机器账户
在这里可能有同学有疑问了，前面不是提了中继么？为什么不用《Ghidra 从 XXE 到 RCE》和《Ghost
Potato》里提到的方式去Relay回自身调用RPC进行相关操作，还要增加机器账户呢？因为这个WEBDAV服务是system权限运行的，而system账户做Relay时是用`机器账户`去请求的，没有办法去调高权限RPC接口，所有这里不能直接Relay回自身调用RPC。
既然不能直接Relay回自身调用RPC，我们换一种思路， **用基于资源约束委派一样可以获取权限** 。
在通过基于资源约束委派进行利用时，需要有一个机器账户来配合（这里说法其实不太准确，应该是需要一个具有SPN的账户，更详细的说是需要一个账户的TGT，而一个机器账户来代替前面的说法，是因为机器账户默认具有一些SPN，这些SPN包含了我们后面会用到的cifs等，这里就不细说了，不然又是一篇文章了，后面统一用机器账户来描述），而默认域控的ms-DS-MachineAccountQuota属性设置允许所有域用户向一个域添加多达10个计算机帐户，就是说只要有一个域凭据就可以在域内任意添加机器账户。这个凭据可以是域内的用户账户、服务账户、机器账户。
那么问题又来了，既然需要一个机器账户，前面提到的
> system账户做Relay时是用`机器账户`去请求
这个地方说的`机器账户`，也就是我们文中的WEBDAV服务器的机器账户，为什么不用这个机器账户，要自己去增加一个呢？了解`基于资源约束委派`的同学应该知道，我们需要用机器账户去申请TGT票据，但是我们如果用WEBDAV服务器的机器账户，我们不知道这个机器账户的密码或者hash。没有办法去申请TGT。如果是我们创建的机器账户，我们是知道密码的，这样才能去申请TGT了，这里就不在深入继续分析了，里面涉及到的过程极其复杂，有兴趣的同学可以自行学习。
回归正题，我们怎么在域中去创建一个机器账户。
我们把在之前的discuz数据库中的用户名整理成字典，并通过kerberos AS_REQ返回包来判断用户名是否存在。
接下来将discuz的密码拿到cmd5上批量解密，解密后发现大部分用户的登录密码都是`P@ssw0rd`，于是使用`密码喷射`(一个密码和不同用户名的组合去KDC枚举)
，成功获取到了一个域凭据`PI:EMAIL:P@ssw0rd`
有了域凭据后就能连接域控ldap添加机器账户了，不得不说.net真是个好语言，用`System.DirectoryServices.Protocols`这个东西很轻松就能实现该功能。
有细心的同学看到这里可能会想: "用xxe中继到域控的ldap然后添加一个机器账户不是美滋滋?
哪需要这么花里胡哨的！"。但是域控不允许在未加密的连接上创建计算机帐户，这里关于加密涉及到tls/ssl和sasl，又是一堆的知识，这里就不细聊了。
用.net写的小工具很轻松地添加上了一个机器账户。
现在我们有了机器账户，接下来就利用基于资源的约束委派。
## 基于资源的约束委派
Windows Server 2012中新加入了基于kerberos资源的约束委派(rbcd)，与传统的约束委派相比，它
不再需要域管理员对其进行配置，可以直接在机器账户上配置msDS-AllowedToActOnBehalfOfOtherIdentity属性来设置基于资源的约束委派。此属性的作用是控制哪些用户可以模拟成域内任意用户，然后向该计算机(dev2)进行身份验证。简而言之：如果我们可以修改该属性那么我们就能拿到一张域管理员的票据，但该票据只对这台机器(dev2)生效，然后拿这张票据去对这台机器(dev2)进行认证（这里只是简单描述，可能不太准确，还是那句话`基于资源的约束委派`整个过程细节及其复杂，笔者也不敢说掌握全部细节）。
现在我们开始实际操作，首先在我们的VPS上利用impacket工具包中的ntlmrelayx.py工具监听。
然后用xxe请求我们的VPS，接着将凭据中继到域控服务器的LDAP服务上设置基于资源约束委派。
再用s4u协议申请高权限票据。
获得票据以后就可以直接登录WEBDAV服务器了
整个RCE过程到此结束了，但是还没有拿下域控，渗透任务还没有结束，先上一个GIF演示整个RCE过程，接下来再讲怎么拿下域控。
## 卡巴斯基的对抗
其实拿下域控的过程很常规，就是在WEBDAV服务器上抓到了域管理员的账户密码。但是这里难点是卡巴斯基的对抗，绕不过你就拿不到域管理员的账户密码。
这里安装的卡巴斯基全方位防护版来进行测试。
### 1\. 绕过卡巴斯基横向移动
在真实场景中并不会像本地环境一样顺利，当我们拿到一张高权限票据后准备对dev2机器进行pass the
ticket时存在卡巴斯基怎么办呢？常规的smbexec.py会被拦截的。
我们这里的绕过方法是用smb上传一个beacon再通过创建启动服务执行beacon全程无拦截，当然beacon.exe需要进行免杀处理。
### 2\. 绕过卡巴斯基抓lsass中的密码
我想最糟心的事情莫过于知道域管理员登录过这台机器，但却没有办法抓密码。下面将介绍如何解决这个问题。相信在红队行动中遇到卡巴斯基的小伙伴不少，也知道他对防止从lsass中抓取密码做的是多么的变态。即使你使用微软签名的内存dump工具也会被拦截，更不用说什么mimikatz了。
偶然在国外大佬博客上看到了一篇通过RPC调用添加一个SSP dll的文章Exploring Mimikatz - Part 2 -SSP，突然醍醐灌顶，lsass自身绝对可以读自己内存呀，加载dll到lsass进程然后dump内存不是就可以绕过了？不禁感叹：站在巨人肩膀上看到的世界果然更为辽阔。
下载编译这个代码ssp_dll.c 然后再写一个dump 进程内存的dll。
这样就绕过了卡巴斯基dump到了lsass的内存了。
最后本地导入mimikatz的常规操作就不细说了，上几个截图。
到此是真的要结束了，有域管理员的账户密码，怎么拿下域控，我相信这个不用多说了。
# 0x04 总结
我们回顾一下，从discuz到xxe，从xxe到域控，整个过程我们在真实的渗透过程中其实没有花费太多时间，可能得益于平时的积累。针对此次渗透，我们还是收获满满，希望你也是。
最后的最后，我们来进行一次反思。
**Discuz并不是无懈可击的，不要闻风丧胆，遇见就上不要怂，可能他就是你的突破口。**
* * *