### Title: The Tangled WebView: JavaScriptInterface Vulnerabilities Revisited

**Abstract:**

The WebView is a widely used Android component that allows native applications to interact with web pages via the `addJavascriptInterface` method. While this feature is powerful, it also introduces significant security risks, such as those highlighted by CVE-2012-6336 and the "App Clone Attack." In this talk, we will present a new class of Android WebView vulnerabilities associated with `JavaScriptInterface`, which can bypass all existing verifications.

**Key Points:**

1. **New Attack Model:**
   - We have discovered a novel attack model that exploits WebView at a deeper level, allowing attackers to invoke `JavaScriptInterface` from any untrusted page.
   - This new attack can bypass all types of validations and restriction technologies, leading to severe consequences such as sensitive information leakage, identity theft, and remote code execution.

2. **Vulnerability Models:**
   - We will present three distinct vulnerability models, each capable of facilitating an attack.
   - A detailed dive into the WebView architecture will be provided to demonstrate the root cause of these vulnerabilities.

3. **Automated Detection Tool:**
   - To assist in identifying these vulnerabilities, we have developed a novel tool that can automatically vet Android applications.
   - Our tool has been tested on high-profile apps, revealing that over 60% of Android devices and at least 2 billion endpoint users are affected.

4. **Cross-Platform Implications:**
   - These vulnerabilities are not limited to Android; they can also be extended to other platforms such as iOS and Electron, making them a broader concern for the security community.

5. **Mitigation Solution:**
   - We propose a practical mitigation measure called "RichInterface," which has been implemented in our custom WebView.
   - Our evaluation of real-world applications shows that this solution is effective and scalable, with minimal overhead.

**Conclusion:**

Our goal is to protect users from the potential security risks associated with WebView and `JavaScriptInterface` while still allowing them to enjoy the convenience these features provide. Additionally, we aim to raise awareness within the security community about this emerging attack method, ensuring that developers and security professionals are better equipped to address these vulnerabilities.

By sharing our findings and proposed solutions, we hope to contribute to a more secure and robust ecosystem for mobile and web applications.