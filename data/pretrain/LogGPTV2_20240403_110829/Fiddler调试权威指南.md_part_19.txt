5.12TRANSFORMER
·Nocompression：body是未压缩的。
·GZIP：body使用GZIP方式压缩。该编码内部使用的也是DEFLATE，但是二进制格
式稍有些不同。
·DEFLATE：Body是通过DEFLATE（RFC1951）算法压缩的。
·BZIP2：body是通过BZIP2算法压缩的.BZIP2算法的压缩率通常比GZIP或DEFLATE
要高，代价是消耗的CPU时间更多。目前仅有Google的Chrome浏览器支持该格式，
而其他主流的浏览器或服务器都不支持。Fiddler提供这个算法主要是为了进行比较，
以及用于测试客户端在遇到不能识别的编码格式时的处理行为。
选中单选按钮就可以对body应用或删除某个算法，并添加、更新或删除Content-Encoding
头以及调整Content-Length头。
借助这个Inspector，可以了解到这些HTTP压缩算法应用到body内容时的效率如何一
对于大多数文本类型，压缩大约会减少body大小的80%。和大多数的Inspector不同，
TransformerInspector支持修改ReadOnly（完成的）响应，而不需要提前解锁它。有了这个功
能，可以更方便地删除Session的编码，以便查看。
当前，TransformerInspector只能用于处理响应。很少会对请求使用HTTP编码，而且大
多数客户端或服务器也不支持这些编码。
5.12.3删除编码的其他方式
因为大多数FiddlerInspectors无法正常处理编码过的内容，当选中某个编码过的Session
时，在Inspector列表的上方会出现一个黄色按钮。点击这个按钮会从请求或响应中删除所有
的编码，如图5-10所示。
setrseodeCer
ReQvestisncodedadmyeedto edecoded eforisetion Cidhee totrf
J50N
ResisodedndyeedtobeecdedbfoeetinCikherttrf
AulhCacingCokesRaw
SONM
图5-10
123
---
## Page 124
第5章Inspectors
也可以右击Web Session列表中的Session，从上下文菜单中选择Decode Selected Sessions，
可以同时从请求和响应中删除编码。同样，启用工具栏中的Decode选项也会自动删除所有编
码，因为Fiddler是从客户端读取请求，从服务器读取响应。
5.13WEBFORMS
类型
请求
允许编辑
是
WebFormsRequestInspector会解析请求的查询字符串和请求体，查看是否包含HTML格
式的数据内容。如果找到HTML格式的数据，会对它进行解析，在网格视图中显示名称/值对。
例如，以下请求：
POST/sandbox/FileForm.asp?Query=1 HTTP/1.1
Content-Type: application/x-www-form-urlencoded
Host: www.fiddler2.com
Content-Length: 54
2=Datat3e1236fi1eentry2=a$2etxt&_charset_=windows-1252
会显示如图5-11所示的内容：
HeadersTextViewSyntaxViewwebFormsHexViewAuth
Query
Name
Vake
1
Body.
Nar
Value
Data>123
fleentry2
a.bxt
_charset_
windows-1252
图 5-11
该Inspector最适用于大多数简单的Web格式所使用的application/x-www-form-urlencoded
形式的数据。支持multipart/form-data格式，通常是用于文件上传，在显示功能中的使用时受
限的。要修改文件上传，应该使用HexViewInspector。
124
---
## Page 125
5.14WEBVIEW
5.14
WEBVIEW
类型
响应
允许编辑
否
WebViewResponseInspector支持查看Web浏览器控制条中的响应，它可以快速预览某个
给定响应在浏览器中是如何显示的。Web浏览器控制条被配置成渲染响应时阻止其他下载，
从而避免把WebSession列表都搅合在一起一这意味着大多数的图片、样式和对象不会显示
在内容中。此外，也会阻止脚本和导航，对HTML页面只提供预览方式。
除了纯XHTML和HTML，对于IE8或更新的版本，WebViewInspector还可以渲染一些
其他的多媒体类型。对于IE8，Inspector可以渲染所有小于24KB的二进制图片（png、jpg、
gif等）。存在大小限制的原因是该Inspector使用DataURI渲染图片，而IE8的DataURI长
度限制是32KB，相当于24KB的二进制形式。
对于IE9，该Inspector可以显示超过1.5GB大小的图片，此外，它还可以显示SVG文档，
支持为WOFF、TTF和EOT字体文件、MP3音频文件、h264视频文件生成预览页面。举个
例子，查看WOFF文件时显示如图5-12所示的内容如下：
WeewAuCadhiro|CokesRawoONFarelew
WOIFF Font: Preview
AbOtTCHIRANOPORSTUWOZ
abcdefghijkimnopqrstuwwxyz
ABCDEFGHUKLMNOPQRSTUVWXYZ
The quick brown fox jumps over the lazy dog
-102<>./0.v%5#168/9510
图 5-12
当预览音频或视频文件时，在选项卡的最上方有一个“AutoPlay”复选框。当选中
125
---
## Page 126
第5章Inspectors
“AutoPlay”功能时，多媒体文件在加载后会自动开始回放。如果没有选中该功能，多媒体文
件在加载后不会播放，只有点击播放按钮后，才会开始播放。
5.15XML
类型
请求&响应
允许编辑
否
XMLInspector会把选中的请求和响应体解释成XML格式的字符串，显示XML文档节
点的树形图，如果body不是合法的XML格式，树形图会是空的。
每个XML元素都表示成树形图中的一个节点，元素的属性在元素名称后以方括号的形
式表示。
和其他的Inspector不同，即使请求或响应是压缩的或应用了HTTPChunkedEncoding，
XMLInspector仍然可以对其数据进行谊染并显示，显示内容时不需要删除编码。
树形视图的上下文菜单有两个选项：Copy用于把选中的节点复制到剪贴板（或按下
CTRL+C键）：SendtoTextWizard用于把选中节点的内容发送到Textwizard窗口进行编码或
解码。
点击最下方的ExpandAll按钮可以展开树形图的所有节点；面点击Collapse按钮则可以
收起树形图的所有节点。如果XML树包含的节点数少于2000时会自动展开：由于性能原因，
当文档很大时，树不会被自动展开，面需要手动展开。
126
---
## Page 127
第
卓
扩展
6.1概览
Fiddler提供了丰富的扩展模型，开发人员可以通过这些能够轻松安装的插件来增强
Fiddler的功能。
6.1.1流行的第三方扩展
独立开发者们已经构建了很多Fiddler扩展，下面这个地址中列出了部分扩展：
http://getfiddler.com/addons。到编写本书时为止，已经有了一批非常流行的第三方扩展，这些
扩展有效地增强了Fiddler在对Web应用进行性能测试和安全测试方面的功能。
性能扩展组件
Fiddler本身已经提供很多重要的性能分析和优化功能，然面，扩展给Fiddler带来了更强
大的功能。
·neXpert性能报告生成器—它是微软在线服务测试团队开发的一款扩展，neXpert专
注于性能优化，可以对Web站点进行评估并生成报表，会指出问题并给出解决方案。
许可方式：免费软件。
·StresStimulus一这款负载能力测试扩展支持对Web站点的承载能力进行测试并记录
测试过程中的一些关键数据，使用这个扩展可以评估一个网站可以为多少个并发用户
提供服务。许可方式：免费试用。
安全扩展组件
Fiddler支持很多种安全测试。网络安全专家们构建了一些强大的安全方面的扩展组件，
可以帮助新手发现并解决安全问题。
127
---
## Page 128
第6章扩展
·Watcher一由CasabaSecurity团队开发。Watcher是一种“被动安全审计器”，它可以监
测浏览器和网站的交互。该工具会侦听请求和响应，标记出潜在的安全漏洞。专业的安
全渗透（securitypenetration）测试人员使用该工具来评估主要站点。许可方式：开源软件。
·x5s一CasabaSecurity团队开发的另一个组件，x5s可以评估网站漏洞，包括由于字
符集相关的问题导致的跨站脚本错误。许可方式：开源软件。
·intruder21—该组件支持对Web应用程序执行模糊测试（fuzz-testing）。确定了Fiddler
接收的目标请求后，该扩展会生成模棚负载，并针对网站施加这些负载。许可方式：
免费软件。
·Ammonite一该组件监测常见的网站漏洞，包括SQL注入、操作系统命令注入、跨
站脚本运行、文件夹带（fileinclusion）以及缓冲区溢出。许可方式：免费试用。
6.1.2我创建的扩展
本章的剩余部分将介绍我自已开发的一些最有用的扩展，这些扩展都可以免费从
http://getfiddler.com/addons中免费下载。
有些扩展对于大多数Fiddler用户都有用，在Fiddler安装包中没有包含它们主要是为了
减小安装文件的大小。其他扩展只在某些不太常见的场景下有用，通过附加组件模型提供这
可以满足开发社区的需求。
大部分扩展的源代码是开源的，希望扩展Fiddler满足自己需求的开发人员可以以此为参
考样例。
6.2JAVASCRIPTFORMATTER
安装了JavaScriptFormatter后，可以右击任意包含JavaScript响应的Session，选中Make
JavaScriptPretty。该命令会重新格式化JavaScript，从而极大提高其可读性，特别是对压缩过
的JavaScript更为有用。举个例子，对于图6-1所示的这行JavaScript代码：
/CopyhC）202mistCorpan/e)(aino，e
bodsery.
a.handlerlser
Ce
ndeproprs.prop1
图 6-1
128
---
## Page 129
6.3GALLERY
重新格式化提高可读性后的形式如图6-2所示：
1/+ Copyrighs(C)2012 Miero9oft Coxporation */
fumetion()(
var b - vindou, e = b.3Query. f = b.Debug. g = b.wLive = [
Core:（）. Consre:()
-b.Config：
a.handlezBaselel = a.handlerBaseUzl (1 **
if (1a.sd)(
11
12
s.mkt = a.mkt 1/ *sa°:
13
1.4
uedoutnteagufgnopuTn-uadowoputn
图 6-2
要对所有脚本响应启用自动格式化，选中Fiddler的Rules菜单中的MakeJavaScriptPretty
选项即可，因为对JavaScript的格式化是在下载过程中执行的，所以客户端只会看到格式化后
的形式，如果你正在使用浏览器的脚本调试工具，这个功能就会很有用。
还可以通过X-Format-JSsession标记，手动控制JavaScript格式化程序是否对响应进行格
式化。如果这个标记取值为0，该扩展组件就不会对响应体进行格式化，即使在Rules菜单中
选中了MakeJavaScriptPretty选项。将该标记设置成其他任何值都会对响应体做格式化，即
使在Rules菜单中没有选中MakeJavaScriptPretty选项。
JavaScriptFormatter扩展和极少数响应不兼容，对于这些响应，该格式化程序会无法执行。
在两种场景下可能会出现这个间题：一是响应头中声明是JavaScriptMIME类型，但内容实际
上并不是真正的JavaScript（如一些Google属性）：二是如果使用（非常模糊的）JavaScript
续行功能，格式化过程可能会出现问题。续行方式支持脚本开发人员通过反斜杠结束一行，
JavaScript引擎会自动连接其下一行。JavaScriptFormatter解析器无法识别该功能，因而无法
正确地对这种行进行格式化。
6.3GALLERY
Gallery扩展组件用于显示选中Session中的所有图片。如果你希望和大量的图片交互或
者希望基于返回的图片快速选中某个Session，该功能就非常有用。
该功能只有几个选项，显示在选项卡的最上方，如图6-3所示。
129
---
## Page 130
第6章扩展
Golery
Filtersessiors Help
图6-3
默认情况下，每个图片都是150×150像素的缩略图，面且小于10kb的图片会被忽略。点
击链接Filter sessions，会选中被显示图片的Session，取消选中没有显示的图片或者图片被从
视图中删除的Session。点击链接Help会显示文本，解释扩展的功能。
把鼠标悬停在缩略图上会给出提示显示SessionID、URL、图片大小以及图片格式，如图6-4
所示。
spaceflight.nasa.gov/gallery/images/shutte/sts-101/hires/jsc2000e10522.jpg
Session#5
[
图 6-4