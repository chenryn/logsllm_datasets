User: How to set up a MongoDB replica set to achieve data backup and high availability?
Assistant: To set up a MongoDB replica set for data backup and high availability, you need to follow the steps below: 1. Create a MongoDB configuration file Create a MongoDB configuration file on your primary server and backup server. For example, you could create a file called mongod.conf with content similar to the following example: replication: replSetName: rs0 net: bindIp: 127.0.0.1 port: 27017 storage: dbPath: /var/lib/mongodb journal: enabled: true where the replication setting specifies the replica set name of the database, the net setting specifies the listening address and port number of the database, and the storage sets the data directory of the database. You can change these settings according to your requirements. 2. Start the MongoDB instance Start the MongoDB instance on the primary server, the command is similar to the following example: mongod --config /path/to/mongod.conf You can also use other configuration options, please refer to the documentation of MongoDB for details. 3. Initialize the replica set Start replica set initialization on the primary server, the command is similar to the following example: rs.initiate() After the replica set is initialized, the primary server will automatically become the first replica set member. 4. Add replica set members Now, start the MongoDB instance on the backup server and connect to the primary server. Enter the following command to add a replica set member to the primary server: rs.add("backup_server_ip:port") Among them, backup_server_ip is the IP address of the backup server, and port is the port number monitored by the MongoDB instance. 5. Check the replica set status Check the replica set status with the following command on the primary server: rs.status() In the MongoDB shell, you will see the details of the replica set. Finally, you can check that MongoDB is working correctly on the backup server. If the primary server fails, the backup server can automatically take over and become the primary server.