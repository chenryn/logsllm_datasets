**横向合成**
```bash
montage flag*.png -tile x1 -geometry +0+0 a.png
# -tile 是拼接时每行和每列的图片数，这里用 x1，就是只一行
# -geometry 是首选每个图和边框尺寸，我们边框为 0，图照原始尺寸即可
# * 的意思指的所有的. png
```
---
#### exif
> 可交换图像文件格式（英语：Exchangeable image file format，官方简称Exif），是专门为数码相机的照片设定的，可以记录数码照片的属性信息和拍摄数据。Exif信息是可以被任意编辑的，因此只有参考的功能。
**相关文章**
- [Explainer: how law enforcement decodes your photos](http://theconversation.com/explainer-how-law-enforcement-decodes-your-photos-78828) - 作者描述了关于数字调查者如何拆解数码照片，寻找关于制造和模型线索的过程。
**相关工具**
- [ExifTool](https://www.sno.phy.queensu.ca/~phil/exiftool/) - 用于读取，写入和编辑各种文件中的 exif 信息的工具
    ```bash
    exiftool xxx.jpg
    ```
- [EXIF信息查看器](https://exif.tuchong.com/)
- [ExifShot App](https://exifshot.com/app/)
- [如何为老照片添加 Exif 日期数据？](https://www.appinn.com/how-to-add-exif-date-for-old-picture/)
---
#### Steghide
- [steghide](http://steghide.sourceforge.net/)
    ```bash
    apt-get install steghide
    steghide info x.jpg                                 # 查看图片中的嵌入信息
    steghide extract -sf x.jpg -p password              # 提取信息
    steghide embed -cf x.jpg -ef xxx.txt -p password    # 隐藏信息
    ```
#### PixelJihad
- [PixelJihad](https://github.com/oakes/PixelJihad) - 一个 JavaScript 隐写工具
- http://tools.jb51.net/aideddesign/img_add_info
---
#### 盲水印
一般是给2张相同的图片的场景
- [chishaxie/BlindWaterMark](https://github.com/chishaxie/BlindWaterMark)
    ```bash
    python2 bwm.py decode hui.png hui_with_wm.png wm_from_hui.png
    ```
---
### 音频
**音频隐写通用工具**
- [Detect DTMF Tones](http://dialabc.com/sound/detect/index.html) - 分析音频录音，并提供一些统计数字、图表和表格，显示数据中包含了哪些 DTMF 音调，以及在哪里。
- [Audacity](https://sourceforge.net/projects/audacity/) - 一款易于使用的多轨音频编辑器和记录器
- [MP3stego](https://www.petitcolas.net/steganography/mp3stego/) - MP3Stego 将在压缩过程中隐藏 MP3 文件中的信息。
    ```bash
    decode.exe -X test.mp3 -P test
    ```
- morse2ascii - 分析音频中的莫斯电码(虚拟机里需要有声音)
    ```bash
    apt-get install morse2ascii
    morse2ascii xxx.wav
    ```
**CTF writup**
- [音频隐写 MP3stego+wav隐写+题目](https://m3tar.github.io/2017/08/20/%E9%9F%B3%E9%A2%91%E9%9A%90%E5%86%99-MP3stego-wav%E9%9A%90%E5%86%99-%E9%A2%98%E7%9B%AE/) - MP3stego+频谱图+猪圈密码
**Tips**
- 将波形进一步转化为 01 字符串试试
- 音频中的频谱隐写是将字符串隐藏在频谱中，此类音频通常会有一个较明显的特征，听起来是一段杂音或者比较刺耳。
#### deepsound
- https://deepsound.en.uptodown.com/windows
#### LSB音频隐写
- [Silenteye](https://achorein.github.io/silenteye/) - 针对 wav 文件的隐写
#### sstv音频图像
- 相关工具
    - [RX-SSTV](http://users.belgacom.net/hamradio/rxsstv.htm)
        - 如果无虚拟输入源,需要下载安装一个 https://vac.muzychenko.net/cn/download.htm
#### DTMF拨号音识别
- 相关工具
    - [dtmf2num](https://aluigi.altervista.org/mytoolz.htm#dtmf2num)
        ```
        dtmf2num.exe test.wav
        ```
---
### 文本
**Unicode Text Steganography**
- [Unicode Text Steganography Encoders/Decoders](https://www.irongeek.com/i.php?page=security/unicode-steganography-homoglyph-encoder)
- [Unicode Steganography with Zero-Width Characters](https://330k.github.io/misc_tools/unicode_steganography.html)
---
### 电子文档
**相关文章**
- [Misc 总结 ----隐写术之电子文档隐写](https://xz.aliyun.com/t/1883)
#### Office
**相关文章**
- [PowerPoint — What data is beneath the surface?](https://medium.com/@osint/owerpoint-what-data-is-beneath-the-surface-2eb000ef95fb) - 介绍了几种在ppt中隐藏图片的小技巧
- [如何从 Microsoft Office 文档中完全删除那些暴露你身份的元数据？](https://www.iyouport.org/%e5%a6%82%e4%bd%95%e4%bb%8e-microsoft-office-%e6%96%87%e6%a1%a3%e4%b8%ad%e5%ae%8c%e5%85%a8%e5%88%a0%e9%99%a4%e9%82%a3%e4%ba%9b%e6%9a%b4%e9%9c%b2%e4%bd%a0%e8%ba%ab%e4%bb%bd%e7%9a%84%e5%85%83%e6%95%b0/)
**word 隐藏文本**
- 文件->选项->显示->勾选隐藏文字
![](../../../assets/img/Security/BlueTeam/取证/2.png)
**word、xml 转换**
- 提取信息时,将 word 转化成 xml,查看额外信息
- .doc -> 后缀改为.zip -> 解压 ->.xml
##### 爆破Office加密
**相关工具**
- [Hashcat](../安全工具/Hashcat.md#爆破office)
**破解 ppt**
- 相关工具
    - Advanced Office Password Recovery
#### PDF
**PDF 隐写取证工具**
- [PDF Parser](https://github.com/smalot/pdfparser)
    - [Demo | PDF Parser](https://www.pdfparser.org/demo)
- [jesparza/peepdf](https://github.com/jesparza/peepdf)
- [wbStego4.3open](http://www.bailer.at/wbstego/pr_4ix0.htm) - BMP、RLE、TXT、ASC、XML、PDF、HTML 格式都有可能
    - wbStego4open 会把插入数据中的每一个 ASCII 码转换为二进制形式，然后把每一个二进制数字再替换为十六进制的 20 或者 09，20 代表 0，09 代表 1。这些转换后的十六进制数据被嵌入到 PDF 文件中。查看用 wbStego4open 修改后的文件内容，会发现文件中已混入了很多由 20 和 09 组成的 8 位字节。
- pdfinfo - kali 自带
    ```bash
    # pdf属性
    pdfinfo test.pdf
    # 查看pdf隐藏文本
    pdftotext test.pdf
    ```
**CTF writup**
- [[XDCTF](MISC)OWASP](https://www.jianshu.com/p/3aaa632ebfea)
**Tips**
* 不可见的图层
* Adobe 的元数据格式‘XMP’
* Adobe 的 XMP 元数据
* PDF 的‘增量生成’功能允许保留用户不可见的前版本信息
* 白色的文字或背景图
* 图片背后的文字信息
* 图层后面被覆盖的另一个图层
* 不显示的注释层。
##### 爆破PDF加密
**相关文章**
- [使用pdfcrack破解PDF密码(Linux)](http://topspeedsnail.com/crack-pdf-password-use-pdfcrack/)
- [PDF文件密码破解](https://mp.weixin.qq.com/s/EH7Z_mJvuWxtbQdcXf3h4w)
**获取 hash**
- [PDF hash Extractor - instantly](https://www.onlinehashcrack.com/tools-pdf-hash-extractor.php)
- john 的脚本
    ```bash
    cd /usr/share/john/
    ./pdf2john.pl xxx.pdf
    ```
**相关工具**
- [Hashcat](../安全工具/Hashcat.md#爆破pdf文件)
#### html
**snow隐写**
- http://fog.misty.com/cgi/snow
---
## 网络取证
**tcpdump 常用**
```bash
tcpdump -n -r test.pcapng
```
**tshark 常用**
```bash
tshark -r test.pcap -T fields -e data > out.txt
```
**去重**
```
cat out.txt | uniq > out2.txt
```
### 流量分析
- 内容见 [流量分析](./实验/流量分析.md)
### TTL隐写
IP 报文在路由间穿梭的时候每经过一个路由，TTL 就会减 1，当 TTL 为 0 的时候，该报文就会被丢弃。
TTL 所占的位数是 8 位，也就是 0-255 的范围，但是在大多数情况下通常只需要经过很小的跳数就能完成报文的转发，
远远比上限 255 小得多，所以我们可以用 TTL 值的前两位来进行传输隐藏数据。
如：须传送 H 字符，只需把 H 字符换成二进制，每两位为一组，每次填充到 TTL 字段的开头两位并把剩下的 6 位设置为 1（xx111111），这样发 4 个 IP 报文即可传送 1 个字节。
TTL隐写中用到四个值：00 111111（63）,01 111111（127）,10 111111（191）,11 111111（255）,解密的时候只取前两位，然后转换成ascii
**CTF Writeup**
- [[SWPU2019]Network](https://www.cnblogs.com/yunqian2017/p/14671031.html)
---
## USB取证
- 内容见 [USB取证](./笔记/USB取证.md)
---
## 蓝牙取证
![](../../../assets/img/才怪.png)
---
## 磁盘取证
- 内容见 [磁盘取证](./笔记/磁盘取证.md)