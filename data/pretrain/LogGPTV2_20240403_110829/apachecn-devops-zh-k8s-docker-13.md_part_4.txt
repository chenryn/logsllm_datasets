Velero 是一个强大的产品，您应该考虑在每个集群中使用它来保护工作负载免受灾难。
## 使用备份在新集群中创建工作负载
恢复集群中的对象只是 Velero 的一个用例。虽然这是大多数用户的主要使用情形，但是您也可以使用备份文件来恢复另一个集群上的一个工作负载或所有工作负载。如果您需要创建新的开发或灾难恢复集群，这是一个有用的选项。
重要说明
请记住，Velero 备份作业只是命名空间和命名空间中的对象。要将备份恢复到新群集，您必须有一个正在运行的群集运行 Velero，然后才能恢复任何工作负载。
### 备份群集
在本章的这一点上，我们假设您已经看过这个过程几次，并且您知道如何使用 Velero CLI。如果需要复习，可以回到章节中的几页参考，或者使用 CLI 帮助功能。
首先，我们应该创建一些名称空间，并为每个名称空间添加一些部署，以使其更有趣:
1.  让我们创建几个演示名称空间:
    ```
    kubectl create ns demo1
    kubectl create ns demo2
    kubectl create ns demo3
    kubectl create ns demo4
    ```
2.  We can add a quick deployment to a namespace using the `kubectl run` command:
    ```
    kubectl run nginx --image=bitnami/nginx -n demo1
    kubectl run nginx --image=bitnami/nginx -n demo2
    kubectl run nginx --image=bitnami/nginx -n demo3
    kubectl run nginx --image=bitnami/nginx -n demo4
    ```
    现在我们有了一些额外的工作负载，我们需要创建集群的备份。
3.  使用备份名称`namespace-demo` :
    ```
    velero backup create namespace-demo --include-namespaces=demo1,demo2,demo3,demo4
    ```
    备份新的命名空间
继续之前，请验证备份是否已成功完成。
### 构建新集群
由于我们只是演示如何使用 Velero 从备份创建新集群上的工作负载，因此我们将创建一个简单的单节点 KinD 集群作为我们的还原点:
注意
这个部分有点复杂，因为你的`kubeconfig`文件中有两个簇。如果您不熟悉切换配置上下文，请仔细遵循这些步骤。
完成本练习后，我们将删除第二个集群，因为我们不需要有两个集群。
1.  Create a new KinD cluster with the name `velero-restore`:
    ```
    kind create cluster --name velero-restore
    ```
    这将创建一个包含控制平面和工作节点的新单节点群集，并将您的群集上下文设置为新群集。
2.  Once the cluster has deployed, verify that your context has been switched to the `velero-restore` cluster:
    ```
    kubectl config get-contexts
    ```
    输出如下:
    ![Figure 13.14 – Verifying your current context ](img/Fig_13.14_B15514.jpg)
    图 13.14–验证您当前的上下文
3.  验证当前上下文是否设置为`kind-velero-restore`集群。您将在正在使用的集群的当前字段中看到一个`*`。
4.  最后，使用`kubectl`验证集群中的名称空间。您应该只看到新集群中包含的默认命名空间:
![Figure 13.15 – New cluster namespaces ](img/Fig_13.15_B15514.jpg)
图 13.15–新的集群命名空间
现在我们已经创建了一个新集群，我们可以开始恢复工作负载的过程。第一步是在新集群上安装 Velero，指向现有的 S3 存储桶作为备份位置。
## 将备份恢复到新群集
随着我们新的 KinD 集群的启动和运行，我们需要安装 Velero 来恢复我们的备份。我们可以使用在原始集群中使用的大部分相同的清单和设置，但是由于我们在不同的集群中，我们需要将 S3 目标更改为用于公开 MinIO 仪表板的外部 URL。
### 在新集群中安装 Velero
我们已经在`chapter13`文件夹中有了文件，所以我们可以直接使用`velero install`命令来安装 Velero:
1.  请务必将`s3Url target`中的 IP 地址更改为您主机的 IP 地址:
    ```
    velero install \
     --provider aws \
     --plugins velero/velero-plugin-for-aws:v1.1.0 \
     --bucket velero \
     --secret-file ./credentials-velero \
     --use-volume-snapshots=false \
     --backup-location-config region=minio,s3ForcePathStyle="true",s3Url=http://minio.10.2.1.121.nip.io
    ```
2.  安装需要几分钟时间，但是一旦 pod 启动并运行，查看日志文件以验证 Velero 服务器是否启动并运行，以及是否连接到 S3 目标:
    ```
    kubectl logs deployment/velero -n velero
    ```
3.  如果您的所有设置都是正确的，Velero 日志将有一个条目，表示它在备份位置找到了需要与新 Velero 服务器同步的备份(备份数量可能因您的 KinD 集群而异):
    ```
    time="2020-06-27T22:14:02Z" level=info msg="Found 9 backups in the backup location that do not exist in the cluster and need to be synced" backupLocation=default controller=backup-sync logSource="pkg/controller/backup_sync_controller.go:196"
    ```
4.  确认安装后，使用`velero get backups`确认 Velero 可以看到现有的备份文件:
![Figure 13.16 – Viewing backups on the new cluster ](img/Fig_13.16_B15514.jpg)
图 13.16–查看新群集上的备份
您的备份列表将与我们的不同，但您应该看到与原始群集中相同的列表。
此时，我们可以使用任何备份文件在新集群中创建恢复作业。
### 在新集群中恢复备份
在本节中，我们将使用上一节中创建的备份，并将工作负载恢复到全新的 KinD 集群，以模拟工作负载迁移。
在我们添加名称空间和部署之后，在原始集群中创建的备份被称为`namespace-demo`:
1.  使用该备份名称，我们可以通过运行`velero restore create`命令来恢复名称空间和对象:
    ```
    velero create restore --from-backup=namespace-demo
    ```
2.  请等待恢复完成，然后继续下一步。要验证恢复是否成功，请将`velero describe restore`命令与执行`create restore` 命令时创建的恢复作业的名称一起使用。在我们的集群中，恢复作业被分配了名称`namespace-demo-20200627223622` :
    ```
    velero restore describe namespace-demo-20200627223622
    ```
3.  Once the phase has changed from `InProgress` to `Completed`, verify that your new cluster has the additional demo namespaces using `kubectl get ns`:
    ![Figure 13.17 – Viewing backups on the new cluster ](img/Fig_13.17_B15514.jpg)
    图 13.17–查看新群集上的备份
4.  You will see that the new namespaces were created, and if you look at the pods in each namespace, you will see that each has a pod called `nginx.`You can verify that the pods were created using kubectl get pods. For example, to verify the pods in the demo1 namespace: **kubectl get pods -n demo1**
    输出如下:
![Figure 13.18 – Verifying pods in restored namespaces ](img/Fig_13.18_B15514.jpg)
图 13.18–验证恢复的名称空间中的 pods
恭喜你！您已经成功地将对象从一个集群恢复到一个新的集群。
### 删除新群集
因为我们不需要两个集群，所以让我们删除备份恢复到的新的 KinD 集群:
1.  要删除集群，执行`kind delete cluster`命令:
    ```
    kind delete cluster --name velero-restore
    ```
2.  将您当前的上下文设置为原始的 KinD 集群，`kind-cluster01` :
    ```
    kubectl config use-context kind-cluster01
    ```
你现在准备好继续本书的最后一章， [*第 14 章*](14.html#_idTextAnchor337)*供应一个平台*。
# 总结
备份集群和工作负载是任何企业集群的要求。在本章中，我们回顾了如何使用`etcdctl`和快照功能备份 etcd 集群数据库。我们还详细介绍了如何在集群中安装 Heptio 的 Velero 来备份和恢复工作负载。我们通过在新群集上恢复现有备份来复制现有备份中的工作负载，从而结束了这一章。
有了备份解决方案，您就可以从灾难或人为错误中恢复。典型的备份解决方案允许您恢复任何 Kubernetes 对象，包括命名空间、持久卷、RBAC、服务和服务帐户。您还可以从一个集群中取出所有工作负载，并将其恢复到完全不同的集群中进行测试或故障排除。
接下来，在我们的最后一章中，我们将汇集本书中的许多以前的课程，为您的开发人员和管理员构建一个平台。我们将添加源代码控制和管道来构建一个平台，允许开发人员构建一个“项目”，签入源代码来创建一个运行的应用。
# 问题
1.  True or false – Velero can only use an S3 target to store backup jobs.
    A.真实的
    B.错误的
2.  If you do not have an object storage solution, how can you provide an S3 target using a backend storage solution such as NFS?
    A.你不能——没有办法在 NFS 面前添加任何东西来呈现 S3。
    B.Kubernetes 可以使用本机 CSI 功能来做到这一点。
    C.安装 MinIO，并将 NFS 卷用作部署中的永久磁盘。
    D.您不需要使用对象存储；你可以直接用 NFS 和韦莱罗。
3.  True or false – Velero backups can only be restored on the same cluster where the backup was originally created.
    A.真实的
    B.错误的
4.  What utility can you use to create an etcd backup?
    A.帆船运动。
    B.迷你咪！
    C.没有理由备份 etcd 数据库。
    D.`etcdctl`。
5.  Which command will create a scheduled backup that runs every day at 3 a.m.?
    A.`velero create backup daily-backup`
    B.`velero create @daily backup daily-backup`
    C.`velero create backup daily-backup –schedule="@daily3am"`
    D.`velero create schedule daily-backup --schedule="0 3 * * *"`