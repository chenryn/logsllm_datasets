The new pollster should be designed to handle file descriptor (FD) exhaustion more gracefully. During the process of fixing an unrelated FD leak, I created a test to intentionally exhaust the available file descriptors. With the new scheduler, the system continuously outputs the following error messages, which are believed to be caused by `epoll_wait` returning `EBADF`:

```
epollwait failed with 9
epollwait failed with 9
epollwait failed with 9
...
```

This pattern repeats indefinitely, indicating that the `epoll_wait` function is failing with the error code `9` (which corresponds to `EBADF`, or "Bad File Descriptor"). The error messages are redundant and uninformative, suggesting that the pollster needs to implement better error handling and logging mechanisms to manage and report such issues more effectively.

### Suggested Improvements:
1. **Enhance Error Handling:**
   - Implement a more robust error handling mechanism to detect and manage `EBADF` errors.
   - Gracefully close and clean up any invalid file descriptors.
   
2. **Improve Logging:**
   - Consolidate and format the error messages to provide more meaningful information.
   - Avoid spamming the log with repetitive and unhelpful messages.

3. **Resource Management:**
   - Ensure that the pollster can dynamically adjust its resource usage to prevent FD exhaustion.
   - Implement monitoring and alerts for when FDs are running low.

By addressing these points, the pollster can be made more resilient and user-friendly in scenarios where file descriptors are exhausted.