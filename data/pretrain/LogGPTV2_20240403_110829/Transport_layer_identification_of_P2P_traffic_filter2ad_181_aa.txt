title:Transport layer identification of P2P traffic
author:Thomas Karagiannis and
Andre Broido and
Michalis Faloutsos and
Kimberly C. Claffy
Transport Layer Identiﬁcation of P2P Trafﬁc
Thomas Karagiannis
UC Riverside
Andre Broido
CAIDA, SDSC
Michalis Faloutsos
UC Riverside
Kc claffy
CAIDA, SDSC
ABSTRACT
Since the emergence of peer-to-peer (P2P) networking in the
late ’90s, P2P applications have multiplied, evolved and es-
tablished themselves as the leading ‘growth app’ of Internet
traﬃc workload.
In contrast to ﬁrst-generation P2P net-
works which used well-deﬁned port numbers, current P2P
applications have the ability to disguise their existence through
the use of arbitrary ports. As a result, reliable estimates of
P2P traﬃc require examination of packet payload, a method-
ological landmine from legal, privacy, technical, logistic, and
ﬁscal perspectives. Indeed, access to user payload is often
rendered impossible by one of these factors, inhibiting trust-
worthy estimation of P2P traﬃc growth and dynamics. In
this paper, we develop a systematic methodology to identify
P2P ﬂows at the transport layer, i.e., based on connection
patterns of P2P networks, and without relying on packet
payload. We believe our approach is the ﬁrst method for
characterizing P2P traﬃc using only knowledge of network
dynamics rather than any user payload. To evaluate our
methodology, we also develop a payload technique for P2P
traﬃc identiﬁcation, by reverse engineering and analyzing
the nine most popular P2P protocols, and demonstrate its
eﬃcacy with the discovery of P2P protocols in our traces
that were previously unknown to us. Finally, our results
indicate that P2P traﬃc continues to grow unabatedly, con-
trary to reports in the popular media.
Categories and Subject Descriptors
C.2.5 [Computer-Communication Networks]: Local and Wide-
Area Networks
General Terms
Algorithms, Measurement
Keywords
Peer-to-peer, Measurements, Traﬃc classiﬁcation
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
IMC’04, October 25–27, 2004, Taormina, Sicily, Italy.
Copyright 2004 ACM 1-58113-821-0/04/0010 ...$5.00.
1.
INTRODUCTION
Over the last few years, peer-to-peer (P2P) ﬁle-sharing
has relentlessly grown to represent a formidable component
of Internet traﬃc. P2P volume is suﬃciently dominant on
some links to incent increased local peering among Inter-
net Service Providers [25], to observable yet unquantiﬁed
eﬀect on the global Internet topology and routing system
not to mention competitive market dynamics. Despite this
dramatic growth, reliable proﬁling of P2P traﬃc remains
elusive. We no longer enjoy the ﬂeeting beneﬁt of ﬁrst-
generation P2P traﬃc, which was relatively easily classi-
ﬁed due to its use of well-deﬁned port numbers. Current
P2P networks tend to intentionally disguise their generated
traﬃc to circumvent both ﬁltering ﬁrewalls as well as legal
issues most emphatically articulated by the Recording In-
dustry Association of America (RIAA). Not only do most
P2P networks now operate on top of nonstandard, custom-
designed proprietary protocols, but also current P2P clients
can easily operate on any port number, even HTTP’s port
80.
These circumstances portend a frustrating conclusion: ro-
bust identiﬁcation of P2P traﬃc is only possible by examin-
ing user payload. Yet packet payload capture and analysis
poses a set of often insurmountable methodological land-
mines:
legal, privacy, technical, logistic, and ﬁnancial ob-
stacles abound, and overcoming them leaves the task of re-
verse engineering a growing number of poorly documented
P2P protocols. Further obfuscating workload characteriza-
tion attempts is the increasing tendency of P2P protocols
to support payload encryption. Indeed, the frequency with
which P2P protocols are introduced and/or upgraded ren-
ders packet payload analysis not only impractical but also
glaringly ineﬃcient.
In this paper we develop a systematic methodology to
identify P2P ﬂows at the transport layer, i.e., based on ﬂow
connection patterns of P2P traﬃc, and without relying on
packet payload. The signiﬁcance of our algorithm lies in its
ability to identify P2P protocols without depending on their
underlying format, which oﬀers a distinct advantage over
payload analysis: we can identify previously unknown P2P
protocols. In fact during our analysis we detected traﬃc of
three distinct P2P protocols previously unknown to us. To
validate our methodology we also developed a payload-based
technique for P2P traﬃc identiﬁcation, by reverse engineer-
ing and analyzing the nine most popular P2P protocols.
Speciﬁcally, the highlights of our paper include:
• We develop a systematic methodology for P2P traﬃc
proﬁling by identifying ﬂow patterns and character-
Date
Set Bb
Day
D09N 2 2003-05-07 Wed
D09S 2 2003-05-07 Wed
D10N 2 2004-01-22 Thu
D10S 2 2004-01-22 Thu
D11S 2 2004-02-25 Wed
D13N 2 2004-04-21 Wed
D13S 2 2004-04-21 Wed
Dur
Dir
Start
2 h Nbd (1)
10:00
Sbd (0)
2 h
10:00
60 m Nbd (1)
14:00
60 m Sbd (0)
14:00
10:00
Sbd (0)
20:00 122 m Nbd (1)
20:00 122 m Sbd (0)
2 h
Table 1: Bulk sizes of OC-48 datasets
Dst.IP
Aver.Util. Ut.%
Src.IP
Flows Packets Bytes
651 Mbps
26.2
904 K 2992 K 56.7 M 930.4 M 603 G
15.1
466 K 2527 K 47.3 M 624.2 M 340 G
376 Mbps
25.7
812 K 2181 K 23.6 M 412.7 M 288 G 638.9 Mbps
10.5
279 K 4177 K 18.6 M 252.7 M 117 G 260.4 Mbps
4.4
410 K 7465 K 25.3 M 249.6 M 98.5 G 109.4 Mbps
37.4
1971 K 6956 K 86.4 M 1263 M 852 G 930.6 Mbps
306 K 10847 K 27.8 M 266.4 M 106 G 115.5 Mbps
4.6
istics of P2P behavior, without examination of user
payload.
• Our methodology eﬀectively identiﬁes 99% of P2P ﬂows
and more than 95% of P2P bytes (compared to pay-
load analysis), while limiting false positives to under
10%.
• Our methodology is capable of identifying P2P ﬂows
missed by payload analysis. Using our methodology
we identify approximately 10% additional P2P ﬂows
over payload analysis.
• Using data collected at an OC48 (2.5Gbps) link of a
Tier1 Internet Service Provider (ISP), we provide re-
alistic estimates and trends of P2P traﬃc in the wide-
area Internet over the last few years. We ﬁnd that in
contrast to claims of a sharp decline, P2P traﬃc has
been constantly growing.
Our methodology can be expanded to support proﬁling of
various types of traﬃc. Since mapping applications by port
numbers is no longer substantially valid, a generalized ver-
sion of our algorithm can support traﬃc characterization
tasks beyond P2P workload. Indeed, to minimize false pos-
itives in P2P traﬃc identiﬁcation, we assess, and then ﬁlter
by, connection features of numerous protocols and applica-
tions (such as mail or DNS).
The rest of this paper is structured as follows: Section 2
describes our backbone traces, which span from May 2003
to April 2004. Section 3 discusses previous work in P2P
traﬃc estimation and analysis. Sections 4 and 5 describe in
detail our payload and nonpayload methodologies for P2P
traﬃc identiﬁcation. Section 6 presents an evaluation of our
algorithm by comparing the volume of P2P identiﬁed by
our methods. In section 7 we challenge media claims that
the pervasive litigation undertaken by the RIAA is causing
an overall decline in P2P ﬁle-sharing activity. Section 8
concludes our paper.
2. DATA DESCRIPTION
Part of the analyzed traces in this paper are included in
CAIDA’s Backbone Data Kit (BDK) [1], consisting of packet
traces captured at an OC-48 link of a Tier 1 US ISP connect-
ing POPs from San Jose, California to Seattle, Washington.
Table 1 lists general workload dimensions of our datasets:
counts of distinct source and destination IP addresses and
the numbers of ﬂows, packets, and bytes observed. We pro-
cessed traces with CAIDA’s Coral Reef suite [20].
We analyze traces taken on May 5, 2003 (D09), January
22, 2004 (D10) February 25, 2004 (D11) and April 21,2004
(D13). We captured the traces with Dag 4 monitors [14]
and packet capture software from the University of Waikato
and Endace [12] that supports observation of one or both
directions of the link.
For our older traces (D01-D10), our monitors captured
44 bytes of each packet, which includes IP and TCP/UDP
headers and an initial 4 bytes of payload for some packets.
However, approximately 60%-80% of the packets in these
traces are encapsulated with an extra 4-byte MPLS label
which leaves no space for payload bytes.
Fortunately we were able to capture the February and
April 2004 traces (D11 and D13) with 16 bytes of TCP/UDP
payload which allows us to evaluate our nonpayload method-
ology. To protect privacy, our monitoring system anonymized
the IP addresses in these traces using the Cryptography-
based Preﬁx-preserving Anonymization algorithm (Crypto-
PAn) [33].
3. PREVIOUS WORK
Most P2P traﬃc research has thus far emphasized detailed
characterization of a small subset of P2P protocols and/or
networks [19] [15], often motivated by the dominance of that
protocol in a particular provider’s infrastructure or during
a speciﬁc time period. Typical data sources range from aca-
demic network connections [27], [21] to Tier 2 ISPs [22].
Other P2P measurement studies have focused on topo-
logical characteristics of P2P networks based on ﬂow level
analysis [29], or investigating properties such as bottleneck
bandwidths [27], the possibility of caching [22], or the avail-
ability and retrieval of content [3] [13].
Recently, Sen et al. developed a signature-based payload
methodology [28] to identify P2P traﬃc. The authors focus
on TCP signatures that characterize ﬁle downloads in ﬁve
P2P protocols based on the examination of user payload.
The methodology in [28] is similar to our payload analysis
and it is further discussed in section 4.
A number of Sprint studies [8] report on P2P traﬃc as
observed in a major Tier 1 provider backbone. However,
their volume estimates taxonomize applications based on
ﬁxed port numbers from CoralReef’s database [23], which
captures a small and decreasing fraction of p2p traﬃc.
sity, from major Tier 1 ISPs at the Internet core.
Our approach diﬀers from previous work in three ways:
• We analyze traﬃc sources of exceptionally high diver-
• We study all popular P2P applications available: Nei-
ther of our methodologies (payload and nonpayload)
are limited to a subset of P2P networks. On the con-
trary we study those P2P applications that currently
contribute the vast majority of P2P traﬃc.
• We combine and cross-validate identiﬁcation methods
that use ﬁxed ports, payload, and transport layer dy-
namics.
4. PAYLOAD ANALYSIS OF P2P TRAFFIC
AND LIMITATIONS
Our payload analysis of P2P traﬃc is based on identify-
ing characteristic bit strings in packet payload that poten-
tially represent control traﬃc of P2P protocols. We mon-
itor the nine most popular P2P protocols: eDonkey [10]
(also includes the Overnet and eMule [11] networks), Fast-
track which is supported by the Kazaa client, BitTorrent [4],
OpenNap and WinMx [32], Gnutella, MP2P [24], Soulseek [30],
Ares [2] and Direct Connect [7].
Each of these P2P networks operate on top of nonstan-
dard, usually custom-designed proprietary protocols. Hence,
payload identiﬁcation of P2P traﬃc requires separate anal-
ysis of the various P2P protocols to identify the speciﬁc
packet format used in each case. This section describes lim-
itations that inhibit accurate identiﬁcation of P2P traﬃc at
the link level. In addition, we present our methodology to
identify P2P ﬂows.
4.1 Limitations
We had to carefully consider several issues throughout our
study. While some of these restrictions are data related, oth-
ers originate from the nature of P2P protocols. Speciﬁcally,
these limitations are the following:
Captured payload size: CAIDA monitors capture the
ﬁrst 16 bytes of user payload1 of each packet (see section 2)
for our February and April traces. While our payload heuris-
tics would be capable of eﬀectively identifying all P2P pack-
ets if the whole payload were available, this 16-byte payload
restriction limits the number of heuristics that can reliably
pinpoint P2P ﬂows. Furthermore, our older traces (May
2003, January 2004) only contain 4 bytes of payload for a