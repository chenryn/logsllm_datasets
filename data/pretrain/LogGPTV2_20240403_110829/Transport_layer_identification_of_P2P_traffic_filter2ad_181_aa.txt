# Transport Layer Identification of P2P Traffic

**Authors:**
- Thomas Karagiannis, UC Riverside
- Andre Broido, CAIDA, SDSC
- Michalis Faloutsos, UC Riverside
- Kimberly C. Claffy, CAIDA, SDSC

## Abstract

Since the emergence of peer-to-peer (P2P) networking in the late 1990s, P2P applications have proliferated, evolved, and established themselves as a significant component of Internet traffic. Unlike first-generation P2.P networks, which used well-defined port numbers, current P2P applications can disguise their traffic by using arbitrary ports. This makes reliable estimates of P2P traffic challenging, as they often require examining packet payloads, a method fraught with legal, privacy, technical, logistical, and financial issues. In this paper, we develop a systematic methodology to identify P2P flows at the transport layer, based on connection patterns, without relying on packet payload. Our approach is the first to characterize P2P traffic using only network dynamics. To evaluate our methodology, we also developed a payload-based technique for P2P traffic identification by reverse engineering and analyzing the nine most popular P2P protocols. Our results indicate that P2P traffic continues to grow, contrary to reports in the popular media.

## Categories and Subject Descriptors

C.2.5 [Computer-Communication Networks]: Local and Wide-Area Networks

## General Terms

Algorithms, Measurement

## Keywords

Peer-to-peer, Measurements, Traffic classification

## 1. Introduction

Over the last few years, peer-to-peer (P2P) file-sharing has grown significantly, becoming a major component of Internet traffic. The volume of P2P traffic is so substantial that it has influenced increased local peering among Internet Service Providers (ISPs) and has had an unquantified but observable effect on the global Internet topology and routing system. Despite this growth, reliable profiling of P2P traffic remains challenging. First-generation P2P traffic was relatively easy to classify due to its use of well-defined port numbers. However, current P2P networks often disguise their traffic to evade filtering firewalls and legal issues, particularly those raised by the Recording Industry Association of America (RIAA). Most P2P networks now operate on nonstandard, custom-designed proprietary protocols, and P2P clients can use any port number, including HTTP's port 80.

These circumstances suggest that robust identification of P2P traffic is only possible by examining user payload. However, capturing and analyzing packet payloads poses numerous challenges, including legal, privacy, technical, logistical, and financial obstacles. Additionally, the increasing use of payload encryption and the frequent introduction and upgrading of P2P protocols make payload analysis impractical and inefficient.

In this paper, we develop a systematic methodology to identify P2P flows at the transport layer, based on flow connection patterns, without relying on packet payload. The significance of our algorithm lies in its ability to identify P2P protocols without depending on their underlying format, allowing us to detect previously unknown P2P protocols. During our analysis, we detected traffic from three distinct P2P protocols previously unknown to us. To validate our methodology, we also developed a payload-based technique for P2P traffic identification by reverse engineering and analyzing the nine most popular P2P protocols.

The key contributions of our paper are:
- We develop a systematic methodology for P2P traffic profiling by identifying flow patterns and characteristics of P2P behavior, without examining user payload.
- Our methodology effectively identifies 99% of P2P flows and more than 95% of P2P bytes, while limiting false positives to under 10%.
- Our methodology can identify P2P flows missed by payload analysis, detecting approximately 10% additional P2P flows.
- Using data collected at an OC-48 (2.5 Gbps) link of a Tier 1 ISP, we provide realistic estimates and trends of P2P traffic in the wide-area Internet over the last few years, finding that P2P traffic has been consistently growing.

Our methodology can be extended to support the profiling of various types of traffic. Since mapping applications by port numbers is no longer substantially valid, a generalized version of our algorithm can support traffic characterization tasks beyond P2P workload. To minimize false positives in P2P traffic identification, we assess and filter by connection features of numerous protocols and applications, such as mail or DNS.

The rest of the paper is structured as follows: Section 2 describes our backbone traces, which span from May 2003 to April 2004. Section 3 discusses previous work in P2P traffic estimation and analysis. Sections 4 and 5 detail our payload and non-payload methodologies for P2P traffic identification. Section 6 presents an evaluation of our algorithm by comparing the volume of P2P traffic identified by our methods. In Section 7, we challenge media claims that the RIAA's litigation efforts are causing an overall decline in P2P file-sharing activity. Section 8 concludes the paper.

## 2. Data Description

Part of the analyzed traces in this paper are included in CAIDA’s Backbone Data Kit (BDK), consisting of packet traces captured at an OC-48 link of a Tier 1 US ISP connecting POPs from San Jose, California, to Seattle, Washington. Table 1 lists general workload dimensions of our datasets, including counts of distinct source and destination IP addresses, and the numbers of flows, packets, and bytes observed. We processed these traces using CAIDA’s Coral Reef suite.

We analyze traces taken on May 5, 2003 (D09), January 22, 2004 (D10), February 25, 2004 (D11), and April 21, 2004 (D13). These traces were captured using Dag 4 monitors and packet capture software from the University of Waikato and Endace, supporting observation of one or both directions of the link.

For our older traces (D01-D10), our monitors captured 44 bytes of each packet, including IP and TCP/UDP headers and an initial 4 bytes of payload for some packets. However, approximately 60%-80% of the packets in these traces are encapsulated with an extra 4-byte MPLS label, leaving no space for payload bytes. Fortunately, we were able to capture the February and April 2004 traces (D11 and D13) with 16 bytes of TCP/UDP payload, allowing us to evaluate our non-payload methodology. To protect privacy, our monitoring system anonymized the IP addresses in these traces using the Cryptography-based Prefix-preserving Anonymization algorithm (CryptoPAn).

## 3. Previous Work

Most P2P traffic research has focused on detailed characterization of a small subset of P2P protocols and/or networks, often motivated by the dominance of a particular protocol in a specific provider’s infrastructure or during a certain time period. Typical data sources range from academic network connections to Tier 2 ISPs. Other studies have focused on topological characteristics of P2P networks based on flow-level analysis, investigating properties such as bottleneck bandwidths, the possibility of caching, or the availability and retrieval of content.

Recently, Sen et al. developed a signature-based payload methodology to identify P2P traffic, focusing on TCP signatures that characterize file downloads in five P2P protocols based on the examination of user payload. Their methodology is similar to our payload analysis and is further discussed in Section 4.

Several Sprint studies report on P2P traffic observed in a major Tier 1 provider backbone. However, their volume estimates are based on fixed port numbers from CoralReef’s database, which captures a small and decreasing fraction of P2P traffic.

Our approach differs from previous work in three ways:
- We analyze traffic sources of exceptionally high diversity from major Tier 1 ISPs at the Internet core.
- We study all popular P2P applications available, not just a subset.
- We combine and cross-validate identification methods that use fixed ports, payload, and transport layer dynamics.

## 4. Payload Analysis of P2P Traffic and Limitations

Our payload analysis of P2P traffic is based on identifying characteristic bit strings in packet payload that potentially represent control traffic of P2P protocols. We monitor the nine most popular P2P protocols: eDonkey (including Overnet and eMule), FastTrack (supported by Kazaa), BitTorrent, OpenNap, WinMX, Gnutella, MP2P, Soulseek, Ares, and Direct Connect.

Each of these P2P networks operates on top of nonstandard, usually custom-designed proprietary protocols. Therefore, payload identification of P2P traffic requires separate analysis of the various P2P protocols to identify the specific packet format used in each case. This section describes limitations that inhibit accurate identification of P2P traffic at the link level and presents our methodology to identify P2P flows.

### 4.1 Limitations

Several issues were carefully considered throughout our study. While some restrictions are data-related, others stem from the nature of P2P protocols. Specifically, these limitations include:

- **Captured Payload Size:** CAIDA monitors capture the first 16 bytes of user payload for our February and April traces. While our payload heuristics would be effective if the entire payload were available, the 16-byte restriction limits the number of heuristics that can reliably pinpoint P2P flows. Furthermore, our older traces (May 2003, January 2004) only contain 4 bytes of payload for some packets, further complicating the analysis.