75
---
## Page 77
司，同时关注的问题实在是太多了。但那是让我们产品获得成功的
愿景的一部分。我们没有改变策略，领导层鼓励三个派别的人按照
各自的方向前进。
结果是一些几乎“保密"的项目在同时进行。搞人工智能的人构建了
很多原型神经网络，但是实际上并没有向主产品中添加任何东西。
尽管产品的销售情况很不好，但计算语言学家还是不停地向现有产
品添加功能。对我来说，这是一个网络公司兴盛的真实故事：它讲
的不是桌上足球、灵活的工作时间、古怪的工作头衔、开放办公室
计划、免费食品，甚至讲的也不是风险投资家的起起落落。它讲的
是人们可以更自由地承担更大的风险并做一些他们根本想不到的有
趣的工作。那个时候我们真正得到鼓励去做一些创新的工作。对于
我们来说，意味着做一些真正的、尖端的语言学和人工智能搜索工
作，并提出一个实际的业务模型。
每个人都在做他们自己的事情。但是随着事情的不断进展，我们很
难推出一个一致的产品。我想我们大多数人都知道这一点，但是每
个人都能学到东西，而且这是我们做过的最有趣的工作，所以我们
仍旧继续做下去。总之，我们都为自已选择了激动人心的工作，而
且得到了回报一一不仅仅是得到工资，而且在事业上得到了回报。
我在Gabfest公司认识的每个人的情况都比以前好了。但是每个人都
强烈地坚持自己的意见，都非常看重自己工作的价值。对于公司的
发展方向，每个人都尽量施加自已的影响。对于公司的发展方向，
出现过有很多激烈的、漫长的斗争，大家坐在会议室相互叫。
在一个星期二的下午，CTO告诉我们，公司的资金已经用完了，公
同将在两星期后解散。
我记的在那天晚上，在宣布这个决定之后的几个小时，我们都待在
一起，相互讨论我们的工作。我们坐在一起喝着啤酒，很长时间以
来，我们还是第一次有这样一个轻松的夜晚。我们之间的派别战斗
已经不算什么了。对于公司已经没有其他目标了。我们变成了一起
讨论问题的人，讨论一些令人痛苦而难忘的事情。
然后奇怪的事情出现了。再过两个星期公司就不存在了，但是每个
人都照常来上班，就像是什么事情也没有发生过一样。我们尽量保
存下来更多的工作成果。没有人对这种做法提出疑问。虽然我们都
知道自已两个星期后就要失业了，但我们每大仍旧工作12个小时。
每个人都在关注着自已的工作，对于公司发生的事情已经感到无所
76
---
## Page 78
谓了。我们有了一个新的目标：实现每一个功能，这样我们在某一
天又可以重新拾起这个工作了。在某种程度上，我相信我们每个人
都会认为这是可以实现的。
到了后期，我们甚至开始在工作上互相帮助了。我们相互提供着信
息。在公司倒闭的时候，我的一位朋友怀了8个月的身孕，在她的
孩子受洗的时候，公司已经解散，但整个公司的人还是都去参加了
受洗仪式并凑钱为她买了礼物。在以后的罗月中，我们一直都保持
着联系。一年多之后，我们又到了一起。就像最初的想法注定要失
败一样，我们也注定成为了那个想法的一部分，我们都深情地回忆
着那段经历和人际关系。我们因为公司而紧密地联系在一起。我会
很高兴地拿起电话，热情洋溢地向别人推荐几乎每个和我一起工作
过的人。在我工作过的其他公司没有一家能做到这一点。
我此前从来没有和这样一个如此专注工作的团队一起工作过，后来
也没有。他们直到现在仍旧对我是一个激励。但是实际上解决重要
的问题不仅仅需要聪明、精明和钱。首先需要一个一致的、可行的
目标。我们没有将自然语言处理过程商业化，构建的软件也没有让
网上购物体验对每个人都更加人性化。我们没有对人机交互方式起
到革命性的变革。但是我们在Gabfest公司的工作却产生了奇妙的东
西。
尽管业界对于失败项目的记录让人不安，但是每个人的简历上写的
都是我在本文并始时所引用的那些句子。在我的情况中，为这个失
败付出的代价超过了我在其他项目上的很多成功。我能够说这部分
是成功的吗？从个人的角度来看，肯定是成功的。我获得了巨大的
成长。但是客观地说，公司和产品没有取得成功。据我所知，我们
的软件从未投人使用。我知道我们都很聪明，有足够的技能来构建
我们需要的任何软件一—Gabfest公司的团队是我一起工作过的最聪
明的团队。但是我看到有些技能比我们差得多的人却在软件行业赚
了很多钱，因为他们选择了一个能够卖钱的、客户也原意购买的产
品。
总之，似乎没有人认为自己所经历的失败是自己的问题。我认为这
也不一定是坏事。我想我也不会认为我所经历的失败是我的问题。
[1].指的是本书两位编者合著的《HeadFirstPMP：ABrain-Friendly
Guide to Passing the Project Management Professional Exam》（深入浅
77
---
## Page 79
出PMP）和《HeadFirstC#》（深入浅出C#）两本书，均由O'Reilly
公司出版。
第11章制定计划
MikeCohn访谈录
无论是谁，只要从20世纪90年代后期并始关注世界软件开发的潮
流，那么至少会听说过敏捷运动。敏捷并发中有一个领域与多年来
我们一直在做的事情有所重叠，就是敏捷项目中的实践，特别是用
来制定计划和估算的实践，以及这些实践如何影响团队和他们构建
的软件。在这个领域，MikeCohn已经完成数本相关著作，还经常发
表以此为主题的演讲。
Andrew：首先，我们希望先谈谈你的背景。你是如何了解到团队的
运作方式的？
Mike：好的。我想这大概跟第一份程序员工作中的运气有关。当时
老板不知道拿我们怎么办，他从没有当过程序员的经理，到后来他
就让我负责了，尽管那时我自己也没有多少经验。相对于其他一起
工作的并发人员，我的经验要多一点点，可那时候也只有4个人，
后来我就成了团队主管。从那时起，我并始带领各种各样的并发团
队，后来成长为几家公司的工程副总裁。从那时并始，我见识了不
同种类的公司。
Jenny：回顾这些经验，你能不能告诉我们：与你一起工作过的最好
的团队有哪些特质？他们是否有一些相同之处？
Mike：一般说来，我所待过的优秀团队，他们都能从清晰明确、引
人向上的目标中受益。有一些等待他们要去完成的使命，而且他们
也非常专注于此。如果有了这样的目标，所有的其他政治斗争等也
就都被清理到一边去了。
Andrew：你有没有过这样的感觉：你觉得自已理解了目标，可是团
队却没有？你是怎么做到保证每个人都跟目标保持一致的？
Mike：嗯，很多时候，团队都不能马上理解目标。这就该轮到项目
经理上场了，在敏捷开发中，产品负责人或ScrumMaster要负责确保
团队理解目标是什么。
78
---
## Page 80
回头看看这个问题的重要性，我们中有很多人都在这样的公司待
过，它的目标就是“赚上一大笔钱”。这可不是什么很高尚的目标，
有些团队追求的东西本质上要比这个更有价值，这样的团队才是我
要找的。
想赚很多钱并没有错，但那并不能让团队团结一心，达成非同一般
的目标。没错，他们可以努力工作，因为他们觉得能赚很多钱。但
是我要找的人，他们所能表现出来的工作效率，可不是类似物质奖
励所能激发出来的。
让我举个例子。我在一家保健公司待过。实际上，我们也是第一家
提供护士电话服务、给出医疗建议的公司。类似的服务现在很普遍
了，但在20世纪90年代初还很少见。
很多人之所以能在公司里待下去，因为他们觉得我们会大幅改善人
们的生活质量。想马上得到医疗建议，你只要给某个护士打电话就
行了，用不着去看医生，多好啊。
当时我们有一些很典型的电话支持案例。其中有一个被我们反复使
用：那是一位年轻的母亲，她的孩子生病了，却联系不上医生。她
打来电话，请教了一个护士，然后心情就平复了下来，因为她知道
应该为孩子做哪些事情了。
我们希望这样的电话服务能够让人们触手可及。我们开始每大发送
一封电子邮件，其中会提到前一天发生的某个很重要的电话。有些
电话确实拯救了人们的生命。
我记得有这样一个电话：一个人伤到了自己的背，打来电话想问问
自己是否应该去看脊椎神经科。他觉得背部左侧有痛感，却不知道
应该怎么办。他应该去看脊椎神经科吗？还是先吃些阿司匹林，再
等等看。后来发现他的心脏病正在发作。我们电话里的护士通过使
用软件，再加上自己的经验做出了诊断。她弄清楚之后，叫了一辆
教护车去患者的住处。护士救了那个人的性命。
我们开始把每天的电话通过电子邮件发送给团队成员，帮助他们理
解团队正在做的事情会产生什么样的影响。我们还做了其他类似的
事情，让团队明白为什么要做这个项目。
Andrew：这对团队土气会有巨大影响，人们能够以团队而不仅仅是
单枪匹马的方式工作，我完全理解这方面的作用。让我好奇的是：
79
---
## Page 81
那是不是也对软件的质量产生影响？因为看起来有这个可能。
Mike：我看这个问题可不好回答。你做过双盲法研究吗？你会跟
人说“嘿，你今大可没啥干劲儿啊”，或者“今天你干劲儿不错”，然
后再对结果做比较吗？
有清晰而文催人向上的目标的团队，能够写出高质量代码的团队、
许许多多的测试，以及诸如此类的事物，我相信它们之间有直接的
联系。
我总在说一句话：做得越好的团队走得越快。如果你能写出高质量
的代码，你就可以加快步伐，因为没有那么多代码拖你的后腿。
我曾一起工作过的团队，只要他们有明确而又高尚的目标作为激
励，他们就能前进得很快。所以，我会做出一个类比：他们一定写
出了高质量的代码才能做到那么快。
Andrew：快速完成工作与高质量完成工作，我很喜欢你在这二者之
间给出的直接联系。
Jenny：很多人对此觉得非常非常滩以理解，他们要花很长时间、积
累很多经验才能弄明白这一点。
我知道，我和Andrew费了好大劲才把这个理念传播给各方面的人，
因为如果谈到先做一些投资，帮助人们测试和编写高质量的软件，
似乎就会遇到很多官僚作风的阻力，还要花上很多时间。
Andrew：很多程序员一不只是程序员，还包括管理人员，他们总
是不愿意花时间做除了写代码之外的事情，比如去弄清楚要开发什
么样的软件，应该如何并发这样的软件，也不想把它们写下来，其
实这样能让他们写出更好的代码，而且速度也要比他们不经思索就
去并发更快。
Mike：我想很大一部分原因在于我们没有沟通，没有告诉大家要开
发的应用或产品的所有目标。偶尔地，没有必要编写质量特别高的
代码，在这些情况下，我们必须要知道，也许快速完成就可以了。
我服务过一些客户，他们为广告活动或市场营销并发Web站点。好
比说我们要为一部即将上映的电影做一个配合网站，这个网站将会
存在儿个月的时间。那代码的质量就不必像MicrosoftO出ice的代码
80
---
## Page 82
那么高。如果我希望代码可以存活10年甚至更长时间，那就得多费
些功关开发更好的代码了。
Jenny：让我们回到你刚才说的“相对劣质代码而言，好代码能够提
开开发速度"这个话题，这跟你前面提到的东西有什么联系？
Mike：嗯，因为回报通过时间才能体现出来。编写高质量的代码等
同于投资，如果我希望在一个短命网站存在的两个月内收回对质量
的投资，可能性是很小的。
如果应用将会存在很多年，我所做的投资就很有条理，非常小心地