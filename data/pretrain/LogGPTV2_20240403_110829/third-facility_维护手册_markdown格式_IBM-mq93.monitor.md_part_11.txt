earlier, the MCA increments the DiscontinuityCount parameter of the TraceRoute PCF by 1. This is not
the case here.
• The ACTIVREC attribute of the queue manager (QM2) is MSG, and the MQRO_ACTIVITY option is
specified, therefore the MCA will generate an activity report. The RecordedActivities parameter value is
incremented by 1.
• The target queue is a local queue, therefore the message is discarded with feedback
MQFB_NOT_DELIVERED, in accordance with the Deliver parameter value in the TraceRoute PCF group.
• The MCA then generates the final activity report and puts it on the reply queue. This resolves to the
transmission queue that is associated with queue manager QM1 and the activity report is returned to
queue manager QM1 (ACTIV.REPLY.Q).
Figure 12. Requesting activity reports, Diagram 4
IBM MQ Monitoring and performance 89
• Meanwhile, DSPMQRTE has been continually performing MQGETs on the reply queue (ACTIV.REPLY.Q),
waiting for activity reports. It will wait for up to 120 seconds (60 seconds longer than the expiry time of
the trace-route message) since -w was not specified when DSPMQRTE was started.
• DSPMQRTE gets the 3 activity reports off the reply queue.
• The activity reports are ordered using the RecordedActivities, UnrecordedActivities, and
DiscontinuityCount parameters in the TraceRoute PCF group for each of the activities. The only value
that is non-zero in this example is RecordedActivities, therefore this is the only parameter that is
actually used.
• The program ends as soon as the discard operation is displayed. Even though the final operation was a
discard, it is treated as though a put took place because the feedback is MQFB_NOT_DELIVERED.
The output that is displayed follows:
AMQ8653: DSPMQRTE command started with options '-m QM1 -q TARG.AT.QM2
-rq ACTIV.REPLY.Q'.
AMQ8659: DSPMQRTE command successfully put a message on queue 'QM2',
queue manager 'QM1'.
AMQ8674: DSPMQRTE command is now waiting for information to display.
AMQ8666: Queue 'QM2' on queue manager 'QM1'.
AMQ8666: Queue 'TARGET.Q' on queue manager 'QM2'.
AMQ8652: DSPMQRTE command has finished.
Example 2 - Requesting a trace-route reply message
Generate and deliver a trace-route message to the target queue
In this example the IBM MQ display route application connects to queue manager, QM1, and is used to
generate and deliver a trace-route message to the target queue, TARGET.Q, on remote queue manager,
QM2. The necessary option is specified so that activity information is accumulated in the trace-route
message. On arrival at the target queue a trace-route reply message is requested, and the trace-route
message is discarded.
Figure 13. Requesting a trace-route reply message, Diagram 1
• The ROUTEREC attribute of each queue manager (QM1 and QM2) is set to MSG.
• The following command is issued:
dspmqrte -m QM1 -q TARG.AT.QM2 -rq TR.REPLY.Q -ac -ar -ro discard
90 Monitoring and Performance for IBM MQ
QM1 is the name of the queue manager to which the IBM MQ display route application connects,
TARG.AT.QM2 is the name of the target queue, and ACTIV.REPLY.Q is the name of the queue to
which it is requested that all responses to the trace-route message are sent. The -ac option specifies
that activity information is accumulated in the trace-route message, the -ar option specifies that
all accumulated activity is sent to the reply-to queue that is specified by the -rq option (that is,
TR.REPLY.Q). The -ro option specifies that report option MQRO_DISCARD_MSG is set which means that
activity reports are not generated in this example.
• DSPMQRTE accumulates activity information in the trace-route message before the message is put on
the target route. The queue manager attribute ROUTEREC must not be DISABLED for this to happen.
Figure 14. Requesting a trace-route reply message, Diagram 2
• The message is a trace-route message, therefore the sending MCA begins to record information about
the activity.
• The queue manager attribute ROUTEREC on QM1 is not DISABLED, therefore the MCA accumulates the
activity information within the message, before the message is forwarded to queue manager QM2.
IBM MQ Monitoring and performance 91
Figure 15. Requesting a trace-route reply message, Diagram 3
• The message is a trace-route message, therefore the receiving MCA begins to record information about
the activity.
• The queue manager attribute ROUTEREC on QM2 is not DISABLED, therefore the MCA accumulates the
information within the message.
• The target queue is a local queue, therefore the message is discarded with feedback
MQFB_NOT_DELIVERED, in accordance with the Deliver parameter value in the TraceRoute PCF group.
• This is the last activity that will take place on the message, and because the queue manager attribute
ROUTEREC on QM1 is not DISABLED, the MCA generates a trace-route reply message in accordance
with the Accumulate value. The value of ROUTEREC is MSG, therefore the reply message is put on the
reply queue. The reply message contains all the accumulated activity information from the trace-route
message.
Figure 16. Requesting a trace-route reply message, Diagram 4
92 Monitoring and Performance for IBM MQ
• Meanwhile DSPMQRTE is waiting for the trace-route reply message to return to the reply queue. When it
returns, DSPMQRTE parses each activity that it contains and prints it out. The final operation is a discard
operation. DSPMQRTE ends after it has been printed.
The output that is displayed follows:
AMQ8653: DSPMQRTE command started with options '-m QM1 -q TARG.AT.QM2 -rq
TR.REPLY.Q'.
AMQ8659: DSPMQRTE command successfully put a message on queue 'QM2', queue
manager 'QM1'.
AMQ8674: DSPMQRTE command is now waiting for information to display.
AMQ8666: Queue 'QM2' on queue manager 'QM1'.
AMQ8666: Queue 'TARGET.Q' on queue manager 'QM2'.
AMQ8652: DSPMQRTE command has finished.
Example 3 - Delivering activity reports to the system queue
Detect when activity reports are delivered to queues other than the reply-to queue and use the IBM MQ
display route application to read activity reports from the other queue.
This example is the same as “Example 1 - Requesting activity reports” on page 87, except that QM2 now
has the value of the ACTIVREC queue manage attribute set to QUEUE. Channel QM1.TO.QM2 must have
been restarted for this to take effect.
This example demonstrates how to detect when activity reports are delivered to queues other than the
reply-to queue. Once detected, the IBM MQ display route application is used to read activity reports from
another queue.
Figure 17. Delivering activity reports to the system queue, Diagram 1
• The message is a trace-route message, therefore the receiving MCA begins to record information about
the activity.
• The value of the ACTIVREC queue manager attribute on QM2 is now QUEUE, therefore the MCA
generates an activity report, but puts it on the system queue (SYSTEM.ADMIN.ACTIVITY.QUEUE) and
not on the reply queue (ACTIV.REPLY.Q).
IBM MQ Monitoring and performance 93
Figure 18. Delivering activity reports to the system queue, Diagram 2
• Meanwhile DSPMQRTE has been waiting for activity reports to arrive on ACTIV.REPLY.Q. Only two arrive.
DSPMQRTE continues waiting for 120 seconds because it seems that the route is not yet complete.
The output that is displayed follows:
94 Monitoring and Performance for IBM MQ
AMQ8653: DSPMQRTE command started with options '-m QM1 -q TARG.AT.QM2 -rq
ACTIV.REPLY.Q -v outline identifiers'.
AMQ8659: DSPMQRTE command successfully put a message on queue 'QM2', queue
manager 'QM1'.
AMQ8674: DSPMQRTE command is now waiting for information to display.
--------------------------------------------------------------------------------
Activity:
ApplName: 'cann\output\bin\dspmqrte.exe'
Operation:
OperationType: Put
Message:
MQMD:
MsgId: X'414D51204C4152474551202020202020A3C9154220001502'
CorrelId: X'414D51204C4152474551202020202020A3C9154220001503'
QMgrName: 'QM1 '
QName: 'TARG.AT.QM2 '
ResolvedQName: 'QM2 '
RemoteQName: 'TARGET.Q '
RemoteQMgrName: 'QM2 '
--------------------------------------------------------------------------------
Activity:
ApplName: 'cann\output\bin\runmqchl.EXE'
Operation:
OperationType: Get
Message:
MQMD:
MsgId: X'414D51204C4152474551202020202020A3C9154220001505'
CorrelId: X'414D51204C4152474551202020202020A3C9154220001502'
EmbeddedMQMD:
MsgId: X'414D51204C4152474551202020202020A3C9154220001502'
CorrelId: X'414D51204C4152474551202020202020A3C9154220001503'
QMgrName: 'QM1 '
QName: 'QM2 '
ResolvedQName: 'QM2 '
Operation:
OperationType: Send
Message:
MQMD:
MsgId: X'414D51204C4152474551202020202020A3C9154220001502'
CorrelId: X'414D51204C4152474551202020202020A3C9154220001503'
QMgrName: 'QM1 '
RemoteQMgrName: 'QM2 '
ChannelName: 'QM1.TO.QM2 '
ChannelType: Sender
XmitQName: 'QM2 '
--------------------------------------------------------------------------------
AMQ8652: DSPMQRTE command has finished.
• The last operation that DSPMQRTE observed was a Send, therefore the channel is running. Now we
must work out why we did not receive any more activity reports from queue manager QM2 (as identified
in RemoteQMgrName).
• To check whether there is any activity information on the system queue, start DSPMQRTE on QM2 to try
and collect more activity reports. Use the following command to start DSPMQRTE:
dspmqrte -m QM2 -q SYSTEM.ADMIN.ACTIVITY.QUEUE
-i 414D51204C4152474551202020202020A3C9154220001502 -v outline
where 414D51204C4152474551202020202020A3C9154220001502 is the MsgId of the trace-route
message that was put.
• DSPMQRTE then performs a sequence of MQGETs again, waiting for responses on the system activity
queue related to the trace-route message with the specified identifier.
IBM MQ Monitoring and performance 95
• DSPMQRTE gets one more activity report, which it displays. DSPMQRTE determines that the preceding
activity reports are missing, and displays a message saying this. We already know about this part of the
route, however.
The output that is displayed follows:
AMQ8653: DSPMQRTE command started with options '-m QM2
-q SYSTEM.ADMIN.ACTIVITY.QUEUE
-i 414D51204C4152474551202020202020A3C915420001502 -v outline'.
AMQ8674: DSPMQRTE command is now waiting for information to display.
--------------------------------------------------------------------------------
Activity:
Activity information unavailable.
--------------------------------------------------------------------------------
Activity:
ApplName: 'cann\output\bin\AMQRMPPA.EXE'
Operation:
OperationType: Receive
QMgrName: 'QM2 '
RemoteQMgrName: 'QM1 '
ChannelName: 'QM1.TO.QM2 '
ChannelType: Receiver
Operation:
OperationType: Discard
QMgrName: 'QM2 '
QName: 'TARGET.Q '
Feedback: NotDelivered
--------------------------------------------------------------------------------
AMQ8652: DSPMQRTE command has finished.
• This activity report indicates that the route information is now complete. No problem occurred.
• Just because route information is unavailable, or because DSPMQRTE cannot display all of the route,
this does not mean that the message was not delivered. For example, the queue manager attributes of
different queue managers might be different, or a reply queue might not be defined to get the response
back.
Example 4 - Diagnosing a channel problem
Diagnose a problem in which the trace-route message does not reach the target queue
In this example the IBM MQ display route application connects to queue manager, QM1, generates
a trace-route message, then attempts to deliver it to the target queue, TARGET.Q, on remote queue
manager, QM2. In this example the trace-route message does not reach the target queue. The available
activity report is used to diagnose the problem.
96 Monitoring and Performance for IBM MQ
Figure 19. Diagnosing a channel problem
• In this example, the channel QM1.TO.QM2 is not running.
• DSPMQRTE puts a trace-route message (as in example 1) to the target queue and generates an activity
report.
• There is no MCA to get the message from the transmission queue (QM2), therefore this is the only
activity report that DSPMQRTE gets back from the reply queue. This time the fact that the route is
not complete does indicate a problem. The administrator can use the transmission queue found in
ResolvedQName to investigate why the transmission queue is not being serviced.
The output that is displayed follows:
AMQ8653: DSPMQRTE command started with options '-m QM1 -q TARG.AT.QM2
-rq ACTIV.REPLY.Q -v outline'.
AMQ8659: DSPMQRTE command successfully put a message on queue 'QM2',
queue manager 'QM1'.
AMQ8674: DSPMQRTE command is now waiting for information to display.
--------------------------------------------------------------------------------
Activity:
ApplName: 'cann\output\bin\dspmqrte.exe'
Operation:
OperationType: Put
QMgrName: 'QM1 '
QName: 'TARG.AT.QM2 '
ResolvedQName: 'QM2 '
RemoteQName: 'TARGET.Q '
RemoteQMgrName: 'QM2 '
--------------------------------------------------------------------------------
AMQ8652: DSPMQRTE command has finished.
IBM MQ Monitoring and performance 97
Activity report reference
Use this page to obtain an overview of the activity report message format. The activity report message
data contains the parameters that describe the activity.
Activity report format
Activity reports are standard IBM MQ report messages containing a message descriptor and message
data. Activity reports are PCF messages generated by applications that have performed an activity on
behalf of a message as it has been routed through a queue manager network.
Activity reports contain the following information:
A message descriptor
An MQMD structure
Message data
Consists of the following:
• An embedded PCF header (MQEPH).
• Activity report message data.
Activity report message data consists of the Activity PCF group and, if generated for a trace-route
message, the TraceRoute PCF group.
Table 19 on page 99 shows the structure of these reports, including parameters that are returned only
under certain conditions.
98 Monitoring and Performance for IBM MQ
Table 19. Activity report format
MQMD structure Embedded PCF header Activity report message data
MQEPH structure
Structure identifier Structure identifier Activity
Structure version Structure version Activity application name
Report options Structure length Activity application type
Message type Encoding Activity description
Expiration time Coded character set ID Operation
Feedback Message format Operation type
Encoding Flags Operation date
Coded character set ID PCF header (MQCFH) Operation time
Message format Structure type Message
Priority Structure length Message length
Persistence Structure version MQMD 8
Message identifier Command identifier EmbeddedMQMD
Correlation identifier Message sequence number Queue manager name
Backout count Control options Queue sharing group name
Reply-to queue Completion code Queue name 1
Reply-to queue manager Reason code 2 3
User identifier Parameter count 7
Accounting token Resolved queue name 1
Application identity data 3
Application type 7
Application name Remote queue name 3
Put date 7
Put time Remote queue manager name 2
Application origin data 3 4
Group identifier 5
Message sequence number 7
Offset Subscription level 9
Message flags Subscription identifier
Original length 9
Feedback 2
10
Channel name 4
5
Channel type 4
5
Transmission queue name 5
TraceRoute 6
Detail
Recorded activities
Unrecorded activities
Discontinuity count
Max activities
Accumulate
Deliver
Notes:
1.Returned for Get and Browse operations.
2.Returned for Discard operations.
3.Returned for Put, Put Reply, and Put Report operations.
4.Returned for Receive operations.
IBM MQ Monitoring and performance 99
5.Returned for Send operations.
6.Returned for trace-route messages.
7.Not returned for Put operations to a topic, contained within Publish activities.
8.Not returned for Excluded Publish operations. For Publish and Discarded Publish operations, returned
containing a subset of parameters.
9.Returned for Publish, Discarded Publish, and Excluded Publish operations.
10.Returned for Discarded Publish and Excluded Publish operations.
Activity report MQMD (message descriptor)
Use this page to view the values contained by the MQMD structure for an activity report
StrucId
Structure identifier:
Data type
MQCHAR4
Value
MQMD_STRUC_ID.
Version
Structure version number
Data type
MQLONG
Values
Copied from the original message descriptor. Possible values are:
MQMD_VERSION_1
Version-1 message descriptor structure, supported in all environments.
MQMD_VERSION_2
Version-2 message descriptor structure, supported in the following environments:
• AIX
• IBM i
• Linux
• Windows
• z/OS
and all IBM MQ MQI clients connected to these systems.
Report
Options for further report messages
Data type
MQLONG
Value
If MQRO_PASS_DISCARD_AND_EXPIRY or MQRO_DISCARD_MSG were specified in the Report
field of the original message descriptor:
MQRO_DISCARD
The report is discarded if it cannot be delivered to the destination queue.
Otherwise:
MQRO_NONE
No reports required.
100 Monitoring and Performance for IBM MQ
MsgType
Indicates type of message
Data type
MQLONG
Value
MQMT_REPORT
Expiry
Report message lifetime
Data type