### Earlier, the MCA Increments the DiscontinuityCount Parameter

In a previous scenario, the MCA (Message Channel Agent) increments the `DiscontinuityCount` parameter of the `TraceRoute` PCF (Programmable Command Format) by 1. This is not the case in the current scenario.

### Activity Report Generation and Message Discarding

- **Activity Report Generation**:
  - The `ACTIVREC` attribute of the queue manager (QM2) is set to `MSG`.
  - The `MQRO_ACTIVITY` option is specified.
  - As a result, the MCA will generate an activity report, and the `RecordedActivities` parameter value is incremented by 1.

- **Message Discarding**:
  - The target queue is a local queue.
  - The message is discarded with the feedback `MQFB_NOT_DELIVERED`, in accordance with the `Deliver` parameter value in the `TraceRoute` PCF group.
  - The MCA then generates the final activity report and places it on the reply queue, which resolves to the transmission queue associated with queue manager QM1.
  - The activity report is returned to queue manager QM1 (queue `ACTIV.REPLY.Q`).

### DSPMQRTE Operation

- **Waiting for Activity Reports**:
  - DSPMQRTE has been continually performing `MQGET` operations on the reply queue (`ACTIV.REPLY.Q`), waiting for activity reports.
  - It will wait for up to 120 seconds (60 seconds longer than the expiry time of the trace-route message) since the `-w` option was not specified when DSPMQRTE was started.
  - DSPMQRTE retrieves the 3 activity reports from the reply queue.

- **Ordering and Displaying Activity Reports**:
  - The activity reports are ordered using the `RecordedActivities`, `UnrecordedActivities`, and `DiscontinuityCount` parameters in the `TraceRoute` PCF group for each activity.
  - In this example, only the `RecordedActivities` parameter is non-zero and thus used for ordering.
  - The program ends as soon as the discard operation is displayed. Even though the final operation was a discard, it is treated as though a put took place because the feedback is `MQFB_NOT_DELIVERED`.

### Output Displayed

```
AMQ8653: DSPMQRTE command started with options '-m QM1 -q TARG.AT.QM2 -rq ACTIV.REPLY.Q'.
AMQ8659: DSPMQRTE command successfully put a message on queue 'QM2', queue manager 'QM1'.
AMQ8674: DSPMQRTE command is now waiting for information to display.
AMQ8666: Queue 'QM2' on queue manager 'QM1'.
AMQ8666: Queue 'TARGET.Q' on queue manager 'QM2'.
AMQ8652: DSPMQRTE command has finished.
```

### Example 2 - Requesting a Trace-Route Reply Message

- **Generating and Delivering a Trace-Route Message**:
  - The IBM MQ display route application connects to queue manager QM1 and generates a trace-route message to the target queue `TARGET.Q` on remote queue manager QM2.
  - The necessary option is specified so that activity information is accumulated in the trace-route message.
  - On arrival at the target queue, a trace-route reply message is requested, and the trace-route message is discarded.

- **Command Issued**:
  ```sh
  dspmqrte -m QM1 -q TARG.AT.QM2 -rq TR.REPLY.Q -ac -ar -ro discard
  ```
  - `QM1` is the name of the queue manager.
  - `TARG.AT.QM2` is the name of the target queue.
  - `TR.REPLY.Q` is the name of the queue to which all responses to the trace-route message are sent.
  - The `-ac` option specifies that activity information is accumulated in the trace-route message.
  - The `-ar` option specifies that all accumulated activity is sent to the reply-to queue.
  - The `-ro` option specifies that the report option `MQRO_DISCARD_MSG` is set, meaning that activity reports are not generated in this example.

- **Activity Information Accumulation**:
  - DSPMQRTE accumulates activity information in the trace-route message before it is put on the target route.
  - The `ROUTEREC` attribute of each queue manager (QM1 and QM2) must not be `DISABLED` for this to happen.

- **Message Handling**:
  - The sending MCA begins to record information about the activity.
  - The receiving MCA also records information about the activity.
  - The target queue is a local queue, so the message is discarded with the feedback `MQFB_NOT_DELIVERED`.
  - The MCA generates a trace-route reply message, which is put on the reply queue and contains all the accumulated activity information.

- **Output Displayed**:
  ```
  AMQ8653: DSPMQRTE command started with options '-m QM1 -q TARG.AT.QM2 -rq TR.REPLY.Q'.
  AMQ8659: DSPMQRTE command successfully put a message on queue 'QM2', queue manager 'QM1'.
  AMQ8674: DSPMQRTE command is now waiting for information to display.
  AMQ8666: Queue 'QM2' on queue manager 'QM1'.
  AMQ8666: Queue 'TARGET.Q' on queue manager 'QM2'.
  AMQ8652: DSPMQRTE command has finished.
  ```

### Example 3 - Delivering Activity Reports to the System Queue

- **Detecting Activity Reports on Other Queues**:
  - This example is similar to "Example 1 - Requesting Activity Reports" but with QM2's `ACTIVREC` attribute set to `QUEUE`.
  - The channel `QM1.TO.QM2` must be restarted for this change to take effect.
  - The MCA generates an activity report and puts it on the system queue (`SYSTEM.ADMIN.ACTIVITY.QUEUE`) instead of the reply queue (`ACTIV.REPLY.Q`).

- **DSPMQRTE Waiting for Activity Reports**:
  - DSPMQRTE waits for activity reports to arrive on `ACTIV.REPLY.Q` but only two arrive.
  - DSPMQRTE continues waiting for 120 seconds, suspecting the route is not complete.

- **Output Displayed**:
  ```
  AMQ8653: DSPMQRTE command started with options '-m QM1 -q TARG.AT.QM2 -rq ACTIV.REPLY.Q -v outline identifiers'.
  AMQ8659: DSPMQRTE command successfully put a message on queue 'QM2', queue manager 'QM1'.
  AMQ8674: DSPMQRTE command is now waiting for information to display.
  --------------------------------------------------------------------------------
  Activity:
  ApplName: 'cann\output\bin\dspmqrte.exe'
  Operation:
  OperationType: Put
  Message:
  MQMD:
  MsgId: X'414D51204C4152474551202020202020A3C9154220001502'
  CorrelId: X'414D51204C4152474551202020202020A3C9154220001503'
  QMgrName: 'QM1 '
  QName: 'TARG.AT.QM2 '
  ResolvedQName: 'QM2 '
  RemoteQName: 'TARGET.Q '
  RemoteQMgrName: 'QM2 '
  --------------------------------------------------------------------------------
  Activity:
  ApplName: 'cann\output\bin\runmqchl.EXE'
  Operation:
  OperationType: Get
  Message:
  MQMD:
  MsgId: X'414D51204C4152474551202020202020A3C9154220001505'
  CorrelId: X'414D51204C4152474551202020202020A3C9154220001502'
  EmbeddedMQMD:
  MsgId: X'414D51204C4152474551202020202020A3C9154220001502'
  CorrelId: X'414D51204C4152474551202020202020A3C9154220001503'
  QMgrName: 'QM1 '
  QName: 'QM2 '
  ResolvedQName: 'QM2 '
  Operation:
  OperationType: Send
  Message:
  MQMD:
  MsgId: X'414D51204C4152474551202020202020A3C9154220001502'
  CorrelId: X'414D51204C4152474551202020202020A3C9154220001503'
  QMgrName: 'QM1 '
  RemoteQMgrName: 'QM2 '
  ChannelName: 'QM1.TO.QM2 '
  ChannelType: Sender
  XmitQName: 'QM2 '
  --------------------------------------------------------------------------------
  AMQ8652: DSPMQRTE command has finished.
  ```

- **Checking the System Queue**:
  - To check if there is any activity information on the system queue, start DSPMQRTE on QM2 with the following command:
    ```sh
    dspmqrte -m QM2 -q SYSTEM.ADMIN.ACTIVITY.QUEUE -i 414D51204C4152474551202020202020A3C9154220001502 -v outline
    ```
  - DSPMQRTE performs a sequence of `MQGET` operations, waiting for responses on the system activity queue related to the trace-route message with the specified identifier.
  - DSPMQRTE gets one more activity report, which it displays. It determines that the preceding activity reports are missing and displays a message indicating this.

- **Output Displayed**:
  ```
  AMQ8653: DSPMQRTE command started with options '-m QM2 -q SYSTEM.ADMIN.ACTIVITY.QUEUE -i 414D51204C4152474551202020202020A3C915420001502 -v outline'.
  AMQ8674: DSPMQRTE command is now waiting for information to display.
  --------------------------------------------------------------------------------
  Activity:
  Activity information unavailable.
  --------------------------------------------------------------------------------
  Activity:
  ApplName: 'cann\output\bin\AMQRMPPA.EXE'
  Operation:
  OperationType: Receive
  QMgrName: 'QM2 '
  RemoteQMgrName: 'QM1 '
  ChannelName: 'QM1.TO.QM2 '
  ChannelType: Receiver
  Operation:
  OperationType: Discard
  QMgrName: 'QM2 '
  QName: 'TARGET.Q '
  Feedback: NotDelivered
  --------------------------------------------------------------------------------
  AMQ8652: DSPMQRTE command has finished.
  ```

- **Conclusion**:
  - This activity report indicates that the route information is now complete and no problem occurred.
  - If route information is unavailable or DSPMQRTE cannot display all of the route, it does not mean the message was not delivered. Different queue managers might have different attributes, or a reply queue might not be defined to get the response back.

### Example 4 - Diagnosing a Channel Problem

- **Problem Diagnosis**:
  - In this example, the IBM MQ display route application connects to queue manager QM1, generates a trace-route message, and attempts to deliver it to the target queue `TARGET.Q` on remote queue manager QM2.
  - The trace-route message does not reach the target queue, and the available activity report is used to diagnose the problem.

- **Channel Status**:
  - The channel `QM1.TO.QM2` is not running.
  - DSPMQRTE puts a trace-route message to the target queue and generates an activity report.
  - There is no MCA to get the message from the transmission queue (QM2), so this is the only activity report that DSPMQRTE gets back from the reply queue.
  - The administrator can use the transmission queue found in `ResolvedQName` to investigate why the transmission queue is not being serviced.

- **Output Displayed**:
  ```
  AMQ8653: DSPMQRTE command started with options '-m QM1 -q TARG.AT.QM2 -rq ACTIV.REPLY.Q -v outline'.
  AMQ8659: DSPMQRTE command successfully put a message on queue 'QM2', queue manager 'QM1'.
  AMQ8674: DSPMQRTE command is now waiting for information to display.
  --------------------------------------------------------------------------------
  Activity:
  ApplName: 'cann\output\bin\dspmqrte.exe'
  Operation:
  OperationType: Put
  QMgrName: 'QM1 '
  QName: 'TARG.AT.QM2 '
  ResolvedQName: 'QM2 '
  RemoteQName: 'TARGET.Q '
  RemoteQMgrName: 'QM2 '
  --------------------------------------------------------------------------------
  AMQ8652: DSPMQRTE command has finished.
  ```

### Activity Report Reference

- **Overview of Activity Report Message Format**:
  - Activity reports are standard IBM MQ report messages containing a message descriptor and message data.
  - Activity reports are PCF messages generated by applications that have performed an activity on behalf of a message as it has been routed through a queue manager network.

- **Activity Report Format**:
  - **Message Descriptor**:
    - An `MQMD` structure.
  - **Message Data**:
    - Consists of an embedded PCF header (MQEPH) and activity report message data.
  - **Activity Report Message Data**:
    - Contains the `Activity` PCF group and, if generated for a trace-route message, the `TraceRoute` PCF group.

- **Table 19 - Activity Report Format**:
  - **MQMD Structure**:
    - Structure identifier, version, report options, message type, expiration time, feedback, encoding, coded character set ID, message format, priority, persistence, message identifier, correlation identifier, backout count, reply-to queue, reply-to queue manager, user identifier, accounting token, application identity data, application type, application name, put date, put time, application origin data, group identifier, message sequence number, offset, message flags, original length, feedback, channel name, channel type, transmission queue name, trace route, detail, recorded activities, unrecorded activities, discontinuity count, max activities, accumulate, deliver.

- **Notes**:
  - Returned for specific operations such as Get, Browse, Discard, Put, Put Reply, Put Report, Receive, Send, Publish, Discarded Publish, and Excluded Publish.

- **Activity Report MQMD (Message Descriptor)**:
  - **StrucId**:
    - Structure identifier: `MQMD_STRUC_ID`.
  - **Version**:
    - Structure version number: `MQMD_VERSION_1` or `MQMD_VERSION_2`.
  - **Report**:
    - Options for further report messages: `MQRO_DISCARD` or `MQRO_NONE`.
  - **MsgType**:
    - Indicates type of message: `MQMT_REPORT`.
  - **Expiry**:
    - Report message lifetime.