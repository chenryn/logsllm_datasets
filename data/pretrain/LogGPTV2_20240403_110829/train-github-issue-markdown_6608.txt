This was originally reported as a question on stackoverflow:
http://stackoverflow.com/questions/32707467/reading-png-does-not-give-
expected-result  
The stackoverflow question has a link to a dropbox site that contains the file
`W0002_0004.png` that triggers a seg. fault when it is read using
`scipy.misc.imread`.
I get the seg. fault in both of these setups:
  * python 2.7.10, numpy 1.9.2, scipy `'0.17.0.dev0+81c0960'`, PIL.PILLOW_VERSION 2.5.3
  * pyhton 3.4.3, numpy 1.9.2, scipy 0.16.0, PIL.PILLOW_VERSION 2.9.0
The program `pngcheck` does not report any errors in the file:
    $ pngcheck -vt W0002_0004.png
    File: W0002_0004.png (3721 bytes)
      chunk IHDR at offset 0x0000c, length 13
        4968 x 527 image, 1-bit grayscale, non-interlaced
      chunk tIME at offset 0x00025, length 7:  8 Feb 2015 15:18:29 UTC
      chunk IDAT at offset 0x00038, length 3645
        zlib: deflated, 32K window, default compression
      chunk IEND at offset 0x00e81, length 0
    No errors detected in W0002_0004.png (4 chunks, 98.9% compression).
`imread` calls `fromimage`, and the seg. fault occurs when `fromimage` calls
`array(im)`. Here's the sequence of calls equivalent to calling
`imread('W0002_0004.png')`:
    In [1]: import numpy as np
    In [2]: from PIL import Image
`imread` uses `Image.open` to read the file. It then passes `im` to
`fromimage`.
    In [3]: im = Image.open('W0002_0004.png')
If `im.mode` is `'1'`, `fromimage` does `im.convert('L')`:
    In [4]: im.mode
    Out[4]: '1'
    In [5]: im.convert('L')
    Out[5]: 
Then `fromimage` returns `array(im)`. This is where the seg. fault occurs.
    In [6]: result = np.array(im)
    /Users/warren/anaconda/bin/python.app: line 3: 41981 Segmentation fault: 11  /Users/warren/anaconda/python.app/Contents/MacOS/python "$@"