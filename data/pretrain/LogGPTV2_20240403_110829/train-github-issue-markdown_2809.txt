##### ISSUE TYPE
Feature Idea
##### COMPONENT NAME
lib/ansible/playbook
##### ANSIBLE VERSION
N/A
##### SUMMARY
This feature request is quite simple : with so many issues linked to the
crucial "any_errors_fatal" property on plays (even in Ansible 2.4), please add
an option so that in extreme conditions a programmed exit can be used. This
should set a "failed" status on all hosts of the playbook of course.
In my case we use three playbooks:
  * stop
  * deploy
  * start
Each playbook runs against several hosts and is included as a play in a "stop-
deploy-restart" playbook.
    # stop-deploy-restart.yml (2.3-style)
    - include: "stop.yml"
    - include: "deploy.yml"
    - include: "start.yml"
But we want to deploy _only_ if every host has stopped successfully. If any
host fails the "stop" play, we'd like to fail the wrapping "stop-deploy-
restart" playbook.
In theory we could use "any_errors_fatal", but as I said its behaviour is
clearly not bug-free.
And for the moment we can touch a file in the "post_tasks" part of "stop" in
order to keep track of which host has successfully stopped, but there seems to
be no mechanism in Ansible that allows us to prevent the plays to continue.
I'd like somthing like this:
    # stop-deploy-restart.yml (2.3-style)
    - include: "stop.yml"
    - meta: exit
      when: something_went_wrong # makes every hosts fail AND skips everything else in the playbook
    - include: "deploy.yml"
    - include: "start.yml"
And of course when "any_errors_fatal" is repaired that won't be the nice way
to write things. But it could still be usefull.
Thanks in advance.