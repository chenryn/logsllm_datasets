rectional El-Gamal encryption scheme. This means
that j SuccP;E 0 (1k) (cid:0) 1=2 j is not negligible. Based
on P, we will build an adversary B that breaks the
original El-Gamal scheme with non-negligible prob-
ability. Initially, B is given the public key EK of the
original EL-Gamal scheme. Based on EK, B simu-
lates the conditions necessary for P to break the uni-
directional ElGamal. For this, B chooses a random
number as x1 and gives it to P. As part of the unidirec-
tional challenge, P chooses two messages (m0; m1)
and forwards them to B. B uses the same two mes-
sages to challenge the standard El-Gamal. When B is
given the encryption of mb, where b   f0; 1g, it for-
wards Enc(mb) to P. We assumed that P is capable
of breaking the unidirectional El-Gamal and by deﬁ-
nition, UniEnc(mb) = Enc(mb). Thus, if P decrypts
UniEnc(mb) with probability greater than 1/2, then B
decrypts Enc(mb) with probability greater than 1/2.
2. Let’s assume that F is capable of breaking the unidi-
rectional El-Gamal encryption scheme. This means
that j SuccF;E 0 (1k) (cid:0) 1=2 j is not negligible. We
use the notation FP(cid:3) to indicate that the user F can
have honest access to the PDec function. Based on
F, we will build an adversary B that breaks the origi-
nal El-Gamal scheme with non-negligible probability.
Initially, B is given the public key EK of the origi-
nal EL-Gamal scheme. Based on EK, B simulates the
conditions necessary for F to break the unidirectional
ElGamal. For this, B chooses a random number as
x2 and gives it to F. The adversary B simulates the
honest access of F to PDec and the encryption ora-
cle UniEnc by taking the query message m and re-
turning mgex2 and Enc(m). As part of the unidirec-
tional challenge, F chooses two messages (m0; m1)
and forwards them to B. B uses the same two mes-
sages to challenge the standard El-Gamal. When B is
given the encryption of mb, where b   f0; 1g, it for-
wards Enc(mb) to F. We assumed that F is capable
of breaking the unidirectional El-Gamal and by deﬁ-
nition, UniEnc(mb) = Enc(mb). Thus, if F decrypts
UniEnc(mb) with probability greater than 1/2, then B
decrypts Enc(mb) with probability greater than 1/2.
3. This part is implied by the two previous parts.
A.3 Unidirectional RSA Encryption Scheme
Deﬁnition 11 A function f : f0; 1g(cid:3) ! f0; 1g(cid:3) is ONE-
WAY if it satisﬁes two conditions:
1. There exists a poly-time algorithm that correctly com-
putes f (x) for any x 2 f0; 1g(cid:3).
2. For any PPT adversary A, Pr(f (z) = y j x  
f0; 1gk; y = f (x); z   A(y; 1k)) (cid:20) negl(k).
Theorem 3 Let E 0 = (UniGen, UniEnc, UniDec, PDec,
FDec) be an unidirectional RSA encryption scheme. E 0 is
ONE-WAY secure against (1) the proxy P, (2) the user F,
and (3) all users U, where the success of the adversary is
deﬁned in table 6.
Proof
1. Let’s assume that P breaks the unidirectional RSA.
This means that SuccP;E (1k) is not negligible. We
will show that based on P we can build an adversary
B that breaks the original RSA encryption scheme. B
is given the public key EK and based on it creates the
conditions necessary for P to break the unidirectional
RSA. B chooses a random number d1 and forwards
it to P as its part of the secret key. The goal of the
adversary B is to ﬁnd m0 such that m0 = m when
given Enc(m). B forwards the ciphertext Enc(m) =
UniEnc(m) to P. We assumed that P is able to ﬁnd
m0 = m when given UniEnc(m) with non-negligible
probability. Thus, B is able to ﬁnd m0.
2. This proof is similar to the previous one.
3. This part is implied by the two previous parts.
A.4 Unidirectional IBE Encryption Scheme
Theorem 4 Let E 0 = (UniGen, UniEnc, UniDec, PDec,
FDec) be an unidirectional IBE encryption scheme. E 0 is
CPA secure against (1) the proxy P, (2) the user F, and (3)
all users U, where the success of the adversary is deﬁned
in table 6.
Proof
1. Let’s assume that P is capable of breaking the uni-
directional IBE encryption scheme. This means that
j SuccP;E 0 (1k) (cid:0) 1=2 j is not negligible. Based on P,
we will build an adversary B that breaks the original
IBE scheme with non-negligible probability. Initially,
B is given the public key Ppub = sP of the original
IBE scheme. Based on sP , B simulates the conditions
necessary for P to break the unidirectional IBE. For
this, B chooses a random number as s1 and gives it to
P. As part of the unidirectional challenge, P chooses
two messages (m0; m1) and forwards them to B. B
uses the same two messages to challenge the standard
IBE. When B is given the encryption of mb, where
b   f0; 1g, it forwards Enc(mb) to P. We assumed
that P is capable of breaking the unidirectional IBE
and by deﬁnition, UniEnc(mb) = Enc(mb). Thus, if
P decrypts UniEnc(mb) with probability greater than
1/2, then B decrypts Enc(mb) with probability greater
than 1/2.
2. Let’s assume that F is capable of breaking the uni-
directional IBE encryption scheme. This means that
j SuccF;E 0 (1k) (cid:0) 1=2 j is not negligible. We use
the notation FP(cid:3) to indicate that the user F can have
honest access to the PDec function. Based on F, we
will build an adversary B that breaks the original IBE
scheme with non-negligible probability. Initially, B
is given the public key Ppub = sP of the original
IBE scheme. B simulates the conditions necessary
for F to break the unidirectional IBE by choosing a
random number as s2 and giving it to F. The adver-
sary B simulates the honest access of F to PDec and
the encryption oracle UniEnc by taking the query mes-
sage m and returning ^e(rID; s1P ) and Enc(m) =. As part of the unidirec-
tional challenge, F chooses two messages (m0; m1)
and forwards them to B. B uses the same two mes-
sages to challenge the standard IBE. When B is given
the encryption of mb, where b   f0; 1g, it forwards
Enc(mb) to F. We assumed that F is capable of
breaking the unidirectional El-Gamal and by deﬁni-
tion, UniEnc(mb) = Enc(mb). Thus, if F decrypts
UniEnc(mb) with probability greater than 1/2, then B
decrypts Enc(mb) with probability greater than 1/2.
3. This part is implied by the two previous parts.
B Unidirectional Signature Scheme
B.1 Unidirectional Generic Signature Scheme
Theorem 5 Let S = (Sig-Gen; Sig; Ver) be a standard
signature scheme. Let’s consider S 0 = (UniGen, UniSig,
UniVer, PSig, FSig) an unidirectional signature scheme
constructed as described above, based on S. If S is UF-
CMA , than S 0 is UF-CMA against (1) the proxy P, (2) the
user F, and (3) all users U, where the adversary’s success
is deﬁned in table 7.
Proof
1. Let’s assume that S 0 is not UF-CMA against the proxy
P. This means that jSuccP;S 0 (1k)j is not negligi-
ble. We assume that the proxy P is not allowed to
ask the FSig oracle for FSig(m). Based on S 0 we
build a forger B capable to break the original signa-
ture scheme S. The forger B receives as input the
public key VK2 and tries to generate a valid signa-
ture of a message m under the secret key SK2. The
forger B chooses at random a public/private key pair
(VK1; SK1) and forwards it to P together with VK2.
The forger B starts running the proxy P. When P
makes a query on the hash oracle for a message m0,
the forger B forwards the request to its own hash or-
acle and sends the answer to the proxy P. When P
asks the FSig oracle to produce a signature for a mes-
sage m0, B asks its own signature oracle to produce
a signature for m0 under SK2 and sends the result to
the proxy P. At one moment, the proxy P generates a
valid unidirectional signature for a message m with a
non-negligible probability, where m is a completely
new message. B takes the unidirectional signature
UniSig(m) = Sig1(m)Sig2(m), removes the ﬁrst part
and outputs Sig2(m) as a valid signature of m.
2. Let’s assume that S 0 is not UF-CMA against F. This
means that jSuccF;S 0 (1k)j is not negligible. We as-
sume that F is not allowed to ask the PSig oracle about
m. Based on S 0 we build a forger B capable to break
the original signature scheme S. The forger B receives
as input the public key VK1 and tries to generate a
valid signature of a message m under the secret key
SK1. The forger B chooses at random a public/private
key pair (VK2; SK2) and forwards it to the user F to-
gether with VK1. The forger B starts running F. When
the user F makes a query on the hash oracle for a mes-
sage m0, the forger B forwards the request to its own
hash oracle and sends the answer back to F. When F
asks the PSig oracle to produce part of the signature
for a message m0, B asks its own signature oracle to
produce a signature for m0 under SK1. After that, B
sends to F Sig1(m0). At one moment, F generates a
valid unidirectional signature for a message m with a
non-negligible probability, where m is a completely
new message. B takes the unidirectional signature
UniSig(m) = Sig1(m)Sig2(m), removes the second
part and outputs Sig1(m) as a valid signature of m.
3. This part is implied by the previous two parts.
B.2 Unidirectional RSA-Hash Signature Scheme
Theorem 6 Let S = (Sig-Gen; Sig; Ver) be a clas-
sic RSA-Hash signature scheme. Let’s consider S 0 =
(UniGen, UniSig, UniVer, PSig, FSig) an unidirectional
RSA-Hash signature scheme constructed as described
above. S 0 is UF-CMA against (1) the proxy P, (2) the user
F, and (3) all users U, where the adversary’s success is
deﬁned in table 7.
Proof
1. Let’s assume that P can break the unidirectional RSA-
Hash scheme. This means that jSuccP;S(1k)j is not
negligible. Based on the proxy P, we build a forger B
Generic
SuccP;S 0
SuccF;S 0
def
= Pr (cid:20) UniVer(m; s) = succeed (cid:12)(cid:12)(cid:12)(cid:12)
= Pr (cid:20) UniVer(m; s) = succeed (cid:12)(cid:12)(cid:12)(cid:12)
def
(VK1; SK1; VK2; SK2)   UniGen(1k)
(m; s)   PFSig(VK1; VK2; SK1)
(VK1; SK1; VK2; SK2)   UniGen(1k)
(m; s)   FPSig(VK1; VK2; SK2)
(cid:21)
(cid:21)
RSA-Hash
SuccP;S
SuccF;S
def
= Pr (cid:20) UniVer(m; s) = succeed (cid:12)(cid:12)(cid:12)(cid:12)
= Pr (cid:20) UniVer(m; s) = succeed (cid:12)(cid:12)(cid:12)(cid:12)
def
(SK; VK)   UniGen(1k); (m; s)   PFSig(SKP; VK)] (cid:21)
(SK; VK)   UniGen(1k); (m; s)   FPSig(SKF; VK) (cid:21)
Table 7. Online generic signature deﬁnitions for adversary’s success.
capable of breaking the RSA encryption scheme. The
forger B receives as input a public key (N; e) and tries
to invert x = f (cid:0)1(y), where f is the RSA function
deﬁned by N and e. The adversary B starts running
the proxy P for this public key and a randomly chosen
number d1 given as a secret key. When the proxy P
makes the i-th hash query, the adversary looks to see
if the message mi was already asked. If not, it picks
a random xi, sets h(mi) = xe
i with probability p and
i with probability 1 (cid:0) p. If the proxy
h(mi) = y (cid:3) xe
P makes a query to FSig for a message mi, the ad-
versary returns xi if mi was asked before. Otherwise
it fails. Eventually, P outputs a correct unidirectional
RSA-Hash signature (m; s) for a brand new message
m. If the message m was not hashed before, the ad-
i , then
versary computes its has value. If h(m) = y (cid:3)xe
the adversary returns yd = s=xe
i as the x = f (cid:0)1(y).
Otherwise, it fails.
2. Let’s assume that F can break the unidirectional RSA-
Hash scheme. This means that jSuccF;S(1k)j is not
negligible. Based on the user F, we build a forger B
capable of breaking the RSA encryption scheme. The
forger B receives as input a public key (N; e) and tries