---
author: Hiren Dhadhuk
category: 软件开发
comments_data: []
count:
  commentnum: 0
  favtimes: 0
  likes: 0
  sharetimes: 0
  viewnum: 4935
date: '2021-03-15 23:37:00'
editorchoice: false
excerpt: 在众多可用于简化 Node.js 开发的工具中，以下 9 种是最佳选择。
fromurl: https://opensource.com/article/20/1/open-source-tools-nodejs
id: 13206
islctt: true
largepic: /data/attachment/album/202103/15/233658i99wxvzin13o5319.png
permalink: /article-13206-1.html
pic: /data/attachment/album/202103/15/233658i99wxvzin13o5319.png.thumb.jpg
related: []
reviewer: wxy
selector: lujun9972
summary: 在众多可用于简化 Node.js 开发的工具中，以下 9 种是最佳选择。
tags:
- Node.js
thumb: false
title: 9 个 Node.js 开发人员最喜欢的开源工具
titlepic: true
translator: stevenzdg988
updated: '2021-03-15 23:37:00'
---
> 
> 在众多可用于简化 Node.js 开发的工具中，以下 9 种是最佳选择。
> 
> 
> 
![](/data/attachment/album/202103/15/233658i99wxvzin13o5319.png "Tools illustration")
我最近在 [StackOverflow](https://insights.stackoverflow.com/survey/2019#technology-_-other-frameworks-libraries-and-tools) 上读到了一项调查，该调查称超过 49％ 的开发人员在其项目中使用了 Node.js。这结果对我来说并不意外。
作为一个狂热的技术使用者，我可以肯定地说 Node.js 的引入引领了软件开发的新时代。现在，它是软件开发最受欢迎的技术之一，仅次于JavaScript。
### Node.js 是什么，为什么如此受欢迎？
Node.js 是一个跨平台的开源运行环境，用于在浏览器之外执行 JavaScript 代码。它也是建立在 Chrome 的 JavaScript 运行时之上的首选运行时环境，主要用于构建快速、可扩展和高效的网络应用程序。
我记得当时我们要花费几个小时来协调前端和后端开发人员，他们分别编写不同脚本。当 Node.js 出现后，所有这些都改变了。我相信，促使开发人员采用这项技术是因为它的双向效率。
使用 Node.js，你可以让你的代码同时运行在客户端和服务器端，从而加快了整个开发过程。Node.js 弥合了前端和后端开发之间的差距，并使开发过程更加高效。
### Node.js 工具浪潮
对于 49％ 的开发人员（包括我）来说，Node.js 处于在前端和后端开发的金字塔顶端。有大量的 [Node.js 用例](https://www.simform.com/nodejs-use-case/) 帮助我和我的团队在截止日期之内交付复杂的项目。幸运的是，Node.js 的日益普及也产生了一系列开源项目和工具，以帮助开发人员使用该环境。
近来，对使用 Node.js 构建的项目的需求突然增加。有时，我发现管理这些项目，并同时保持交付高质量项目的步伐非常具有挑战性。因此，我决定使用为 Node.js 开发人员提供的许多开源工具中一些最高效的，使某些方面的开发自动化。
根据我在 Node.js 方面的丰富经验，我使用了许多的工具，这些工具对整个开发过程都非常有帮助：从简化编码过程，到监测再到内容管理。
为了帮助我的 Node.js 开发同道，我整理了这个列表，其中包括我最喜欢的 9 个简化 Node.js 开发的开源工具。
### Webpack
[Webpack](https://webpack.js.org/) 是一个容易使用的 JavaScript  模块捆绑程序   module bundler ，用于简化前端开发。它会检测具有依赖的模块，并将其转换为描述模块的静态 素材   asset 。
可以通过软件包管理器 npm 或 Yarn 安装该工具。
利用 npm 命令安装如下：
```
npm install --save-dev webpack
```
利用 Yarn 命令安装如下：
```
yarn add webpack --dev
```
Webpack 可以创建在运行时异步加载的单个捆绑包或多个素材链。不必单独加载。使用 Webpack 工具可以快速高效地打包这些素材并提供服务，从而改善用户整体体验，并减少开发人员在管理加载时间方面的困难。
### Strapi
[Strapi](https://strapi.io/) 是一个开源的 无界面   headless 内容管理系统（CMS）。无界面 CMS 是一种基础软件，可以管理内容而无需预先构建好的前端。它是一个使用 RESTful API 函数的只有后端的系统。
可以通过软件包管理器 Yarn 或 npx 安装 Strapi。
利用 Yarn 命令安装如下：
```
yarn create strapi-app my-project --quickstart
```
利用 npx 命令安装如下：
```
npx create-strapi-app my-project --quickstart
```
Strapi 的目标是在任何设备上以结构化的方式获取和交付内容。CMS 可以使你轻松管理应用程序的内容，并确保它们是动态的，可以在任何设备上访问。
它提供了许多功能，包括文件上传、内置的电子邮件系统、JSON Web Token（JWT）验证和自动生成文档。我发现它非常方便，因为它简化了整个 CMS，并为我提供了编辑、创建或删除所有类型内容的完全自主权。
另外，通过 Strapi 构建的内容结构非常灵活，因为你可以创建和重用内容组和可定制的 API。
### Broccoli
[Broccoli](https://broccoli.build/) 是一个功能强大的构建工具，运行在 [ES6](https://en.wikipedia.org/wiki/ECMAScript#6th_Edition_-_ECMAScript_2015) 模块上。构建工具是一种软件，可让你将应用程序或网站中的所有各种素材（例如图像、CSS、JavaScript 等）组合成一种可分发的格式。Broccoli 将自己称为 “雄心勃勃的应用程序的素材管道”。
使用 Broccoli 你需要一个项目目录。有了项目目录后，可以使用以下命令通过 npm 安装 Broccoli：
```
npm install --save-dev broccoli
npm install --global broccoli-cli
```
你也可以使用 Yarn 进行安装。
当前版本的 Node.js 就是使用该工具的最佳版本，因为它提供了长期支持。它可以帮助你避免进行更新和重新安装过程中的麻烦。安装过程完成后，可以在 `Brocfile.js` 文件中包含构建规范。
在 Broccoli 中，抽象单位是“树”，该树将文件和子目录存储在特定子目录中。因此，在构建之前，你必须有一个具体的想法，你希望你的构建是什么样子的。