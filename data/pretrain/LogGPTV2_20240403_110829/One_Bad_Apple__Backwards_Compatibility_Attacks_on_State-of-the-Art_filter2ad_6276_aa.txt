# Title: One Bad Apple: Backwards Compatibility Attacks on State-of-the-Art Cryptography

## Authors
- Tibor Jager, Horst Görtz Institute for IT Security, Ruhr-University Bochum, PI:EMAIL
- Kenneth G. Paterson, Information Security Group, Royal Holloway, University of London, PI:EMAIL
- Juraj Somorovsky, Horst Görtz Institute for IT Security, Ruhr-University Bochum, PI:EMAIL

## Abstract
Backwards compatibility attacks exploit the common practice of supporting both modern and legacy cryptographic algorithms in a single system. This paper demonstrates that even if users intend to use only the most secure, up-to-date versions of a system, the mere presence of support for older, insecure versions can have catastrophic security implications. We illustrate this with practical attacks on current versions of important cryptographic web standards, including W3C XML Encryption, XML Signature, JSON Web Encryption, and JSON Web Signature. We also propose effective countermeasures to mitigate these attacks.

## 1. Introduction

Backwards compatibility attacks are based on the practical scenario where a cryptographic standard offers multiple algorithms to perform the same task. This often includes both state-of-the-art secure systems and insecure legacy systems with known vulnerabilities, which are supported for backwards compatibility.

Using insecure legacy cryptosystems is inherently dangerous. However, we show that even if users strictly adhere to using the most up-to-date, vulnerability-free versions, the mere existence of support for old versions can severely compromise security.

### 1.1 Background and Motivation

Complexity is often seen as an enemy of security. Real-world security systems are complex, partly due to the need for backwards compatibility. For example, "encryption-only" configurations of IPsec are still allowed despite known vulnerabilities, and TLS 1.0 remains widely used despite its known weaknesses.

### 1.2 Research Questions

This paper addresses the following questions:
- Which other encryption modes and cryptographic schemes can interact poorly in similar scenarios?
- To what extent do deployed systems fall victim to these attacks?
- What countermeasures are readily available?

### 1.3 Related Work

- **Version Rollback Attacks**: Wagner and Schneier [71] described version rollback attacks on SSL v2.0. These attacks target protocols where cryptographic algorithms and parameters are negotiated interactively.
- **Chosen-Protocol Attacks**: Kelsey et al. [47] describe attacks where an attacker tricks a victim into executing a maliciously designed protocol.
- **Key Separation**: Gligoroski et al. [32] emphasize the need for key separation when using different block cipher modes but do not present concrete attacks.
- **BC Attacks on GSM**: Barkan et al. [8] showed that violating key separation in GSM allows an attacker to decrypt traffic protected by a stronger algorithm.

### 1.4 Responsible Disclosure

We informed the W3C and JOSE working groups about our findings. The W3C acknowledged the attack and plans to update the XML Encryption standard. The JOSE standards are still under development. We also communicated with several vendors and highlight their countermeasures in Section 5.

## 2. Breaking GCM with a CBC Weakness

In this section, we describe a backwards compatibility attack on symmetric encryption, showing how to break the expected security of ciphertexts encrypted in Galois Counter Mode (GCM) by exploiting a weakness in Cipher Block Chaining (CBC).

### 2.1 Preliminaries

#### 2.1.1 Galois Counter Mode (GCM)

Galois Counter Mode (GCM) [51] is a block-cipher mode of operation that provides high efficiency and strong security in the form of authenticated encryption [9]. 

#### 2.1.2 Cipher Block Chaining (CBC)

Cipher Block Chaining (CBC) is a mode of operation for a block cipher that links blocks together in a chain. Known attacks on CBC include padding oracle attacks [68, 24] and other malleability-based attacks [38].

### 2.2 Attack Description

Consider a system that supports both GCM and CBC for backwards compatibility. If an attacker can force the system to use CBC instead of GCM, they can exploit known vulnerabilities in CBC to decrypt the ciphertexts. This attack is particularly relevant in the context of XML Encryption, where the new standard recommends GCM but retains support for CBC.

### 2.3 Practical Implications

We demonstrate a practical distinguishing attack against an implementation of XML Encryption using this attack vector in Section 5. This shows that any state-of-the-art, standard-compliant implementation of XML Encryption will be vulnerable to this BC attack, even if all honest users exclusively stick to using GCM.

## Conclusion

Backwards compatibility attacks pose a significant threat to the security of cryptographic systems. Even with the best intentions to use only the most secure versions, the presence of support for older, insecure versions can lead to severe security breaches. We have demonstrated practical attacks on current cryptographic web standards and proposed effective countermeasures to mitigate these risks.