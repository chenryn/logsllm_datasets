• n . 
• 
‘ •
Downloading https://Lrcdd.lt/15qy3e4qdi231.jpg
Downloading hltps://l.redd.it/gzjmqw2£r3231.jpg 
; : . 
. • I - 
- 
J ■ ■
Downloading https://).rcdd.lt/brnj96l2say21.jpg
Downloading hltps://l.rcdd.it/gmniixvmyO1C21.jpg
......
Downloaded
■ 
• .
Downloading https://Lredd.it/2zuhma6w97sO1. png
■ . . 
. 
■ I
Downloading https://Lredd.lt/ifj6tpajjsh2i.png
Downloading httpsVArcdd.it/lbypsOzuh6g2ljpg
. .  
>sPor
We must now construct a proper execution of the command. We must be within the program folder in Terminal 
(~/Downloads/Programs/sherlock/sherlock) and launch Python 3 followed by the script. We must also specify 
the target username and any additional options. My command is as follows, with an explanation immediately 
after in parentheses.
The script for these tools, titled "gallery.sh", and die desktop entry, tided "gallery.desktop", are in your "vm- 
files" download archive. 1 use these tools almost ever)' day. As I wrote this section, 1 was tasked with investigating 
a hidden locker room video which had surfaced on a porn site. Once 1 identified a suspect, I was able to 
download their entire image gallery in a few minutes by clicking the Gallery' Tool icon within myr finished OSINT 
VM, which we will rebuild in the next chapter.
sudo -H pip install socialscan -I
Within Terminal, you can now execute queries of usernames and email addresses as follows.
registered
• sudo -H pip install holehe -I
The following command within Terminal queries an email address through all senrices.
• holehe PI:EMAIL
requirements.txt -I
We can submit a query with the following commands.
68 Chapter 4
Note that the version of Sherlock within the custom scripts exports a text file for easier viewing. Sherlock seems 
to occasionally display false positives, which is always an issue with these types of queries. Next, let's take a look 
at SocialScan. It can be installed with the following Terminal command.
• cd -/Downloads/Programs/WhatsMyName
• python3 web_accounts_list_checker .py -u inteltechniques
• cd -/Downloads/Programs
• git clone https://github.com/WebBreacher/WhatsMyName.git
• cd WhatsMyName
• sudo -H pip install
python3 (Specifies Python version 3.x) 
sherlock.py (The Python script) 
inteltechniques (The target username) 
—csv (Creates a CSV spreadsheet file) 
-o -/Documents/Report.csv (Specifies save location and file name)
• socialscan inteltechniques
• socialscan PI:EMAIL
Finally, we have Email2Phone. This new tool queries an email address within various online senrices in an 
attempt to display any partial telephone numbers associated with the accounts. I rarely receive results here, but 
the occasional phone number identification justifies the efforts. The following installs the application.
The results with these commands are presented directly on your screen. However, in the automated script, 1 
chose to export the results directly to a text file within your Documents folder by adding > 
inteltechniques-WhatsMyName. txt to the end of the command.
The on-screen results identify online accounts which appear to be associated writh the email address. Highlighting 
these allows for easy copy and paste into a report. I no longer export these as a text file because the results are 
difficult to read. Next, we have WhatsMyName. It is the most thorough of all options, but takes the most time 
to process. I also typically see numerous false positives. We can install the software with the following 
commands.
It currendy only queries a few senrices, but the on-screen results are reliable. The first query above confirmed 
that 1 have accounts on GitHub, Reddit, Snapchat, and Twitter. Next, we have Holehe. This program is more 
robust than the previous options. It queries dozens of senrices using several identification strategies such as 
registered users and password recover}’ prompts. Installation is completed writh the following command.
requirements.txt -I
The following command searches test@gmail.com.
• python3 emai!2phonenumber.py scrape -e PI:EMAIL
OK
Figure 4.10: The Username Tool options.
Sherlock results for my own username were as follows.
SocialScan results for my own username were as follows.
EycWitness
Linux Applications
69
GitHub
Reddit
Snapchat
Twitter
[*] Checking username inteltechniques on:
[+] EyeEm: https://www.eyeem.eom/u/inteltechniques
[+] Facebook: https://www.facebook.com/inteltechniques
[+] GitHub: https://www.github.com/inteltechniques
[ + ] Gravatar: http://en.gravarar.com/inteltechniques
[+] Kik: https://kik.me/inteltechniques
[ + ) Reddit: https://www.reddit.com/user/inteltechniques
[+] Tinder: https://www.gotinder.eom/@inteltechniques
[ + ] Twitter: https://mobile.twitter.com/inteltechniques
[+] Wattpad: https://www.wattpad.com/user/inteltechniques
[+] WordPress: https://inteltechniques.wordpress.com/
• cd -/Downloads/Programs
• git clone https://github.com/martinvigo/email2phonenumber.git
• cd email2phonenumber
• sudo -H pip install
@ Sherlock
C SocialScan
O Holehe
C WhatsMyName
O EmailZPhone
Enter Username
H
Cancel
This Python script automates the collection of screen captures from websites. Imagine the following scenario. 
You are investigating a long list of website addresses that was provided to you as a lead. Maybe they were 
websites visited from a suspect's computer; a list of social network profiles discovered during your previous 
Twitter scrapes; or just a self-created list of URLs associated to your investigation. Manually visiting each site 
and using a screen capture tool can be overwhelming. Instead, let's automate the task. Install EyeWitness to your 
VM with the following commands within a new instance of Terminal.
The Username/Email script for your OSINT VM is titled "usertool.sh" within your downloads and is already 
configured to execute each of these options automatically. You should have it present within your "scripts" 
folder within "Documents". This script presents all options upon launch, as seen in Figure 4.10 (left). Selecting 
your desired choice presents a username or email address input box, as seen in Figure 4.10 (right). The script 
then executes the proper commands mentioned here and exports the results to your Documents folder.
"sites.txt".
70 Chapter 4
• 
Open the Applications menu again and scroll down to "EyeWitness".
• 
Right-click this program and select "Add to favorites1’.
In these steps, we entered the new folder you created during the installation of the Username Tool (Programs). 
This will be where we store applications which do not traditionally install into your operating system. You can 
now execute EyeWitness, but you must first navigate to the folder where the PyThon script is located. We will 
correct this with a custom script in a moment, but let's test the application within Terminal. Conduct the 
following.
• cd -/Downloads/Programs
• git clone https://github.com/ChrisTruncer/EyeWitness.git
• cd EyeWitness/Python/setup
• sudo -H ./setup.sh
When finished, you should have a new file within your Documents/EyeWitness folder titled Report.html. 
Double-clicking this file opens it within Firefox. Figure 4.11 displays the first two results from my "sites.txt" file 
which contained exacdy the following data.
• 
Open your Applications menu and launch Text Editor.
• 
Type or paste URLs, one per line, and save the file to your Desktop as
• 
Open Terminal and enter the following commands.
• 
cd -/Downloads/Programs/EyeWitness/Python
• 
./Eyewitness.py -f ~/Desktop/sites.txt —web -d -*/Documents/EyeWitness/
https://inteltechniques.com 
https://computercrimeinfo.com 
https://instagram.com/mikeb
This utility can be very’ beneficial when you have dozens, hundreds, or even thousands of domains of interest. I 
once convened a list of over 300 suspect Twitter accounts into a folder of screen captures of each. This allow ed 
me to quickly identify which accounts were truly valuable to my investigation by simply viewing the evidence 
similar to photos in an album. The report w»as several hundred pages but was generated in only a few minutes. 
Next, let's add a shortcut icon to our Dock in order to have easy access to this new utility.
The results include screen captures of each target website and detailed information including the server IP 
address, page title, modification date, and full source code of the page. This is very beneficial in two ways. First, 
it automates the task of researching multiple target websites. Second, it saves each page as it existed at a specific 
moment in time. If your suspect deletes or modifies a website after you have captured it, you possess evidence 
of a previous state. The annoyances of this method include the requirement to create a text file and need to 
articulate the location of the data within Terminal. We can make this easier with a custom script.
The script on the following page will prompt you to choose between a single URL or multiple URLs. If you 
choose single, it will prompt you for the URL and then it will execute EyeWitness. The report will be saved into 
a new’ folder tided with a current timestamp within the Documents/EyeWitness folder. At the end of the process 
you will be asked if you would like to open the report. If you choose the option for multiple URLs, you will be 
prompted to choose the text file containing all of the target addresses. EyeWitness will then conduct the queries 
and generate the report as described in the single URL option. The script and shortcut file are included within 
the "vm-files" archive mentioned previously, tided eyewitness.sh and eyevvimess.desktop.
COMPUTERCRIMEIn FO
0
N«w Prtvicy Gu-rte
UTMUf I’MVAU’o
Figure 4.11: A partial EyeWitness report.
Domain Utilities
requirements.txt -I
sudo -H pip install
requirements.txt -I
Linux Applications
71
n
Int el Tec hniq ues
rczxtrrr: r.rirr.'i; cmr '-r^r r r.-. ?
CSHTTM*OC 
nMCt(x»euL‘>K 
aaBX-SKtwT.
■•nfoconi 
1.114 254
•/.■comrutpraimr • 
jived to: 193.54.:
cd -/Downloads/Programs
sudo snap install amass
git clone https://github.com/aboul31a/Sublist3r.git
cd Sublist3r
sudo -H pip install -r requirements.txt -I
cd -/Downloads/Programs
git clone https://github.com/s0md3v/Photon.git
cd Photon
o;>.'
>•-■x.'C-'. «• -•
iciMut nuvXT
Later chapters will explain manual techniques for analysis of a domain. We can automate much of that work 
with various scripts and programs. First, let’s gather all of the required software with the following commands 
within a new instance of Terminal.
sudo -H python3 -m pip install 
cd -/Downloads/Programs
git clone https://github.com/laramies/theHarvester.git 
cd theHarvester
sudo -H pip install -r requirements.txt -I
sudo -H pip install testresources -I
sudo -H pip install pipenv -I
sudo -H pip install webscreenshot -I
cd -/Downloads/Programs
git clone https://github.com/Lazza/Carbonl4
cd Carbonl4
Pago Title: Computer Cnrne 
presentations and Training by Michael 
Bazzetf
{content-length: 7231 
accepuangcs: pytes 
vary: Accept-Encod ng 
server Apache
last-modified: Fn.09 Auq 2019 19 46:13
GMT 
connection: close 
date: Sun. 01 Sep 2019 22:05:10 GMT 
Response Code: 200 
content-type: texthert
r
L'.’p . :iZ : '-;i--./.o-u
Resolved to: 19854 114 254
Pago Title: IntelTecnnlques com | OSIMT 
Privacy Services by Michael Bazzdi |
Op?n Source Intelligence 
content-length: 7529 
jx-xss-prctcctkin: 1; mode-b'ocic 
x-content-cype-options: nosnif! 
acccpt-ranges: tr,t<-“. 
strict-transpon-sccunty: ma*- 
;i(je=3153&QOO, indudeSubOomoms. 
preload
vary: Accfpt-Encodmg 
server: Apache
last-modified: Fri.O2 Aug 2019 21S352 I 
GMT
connection: dose
date: Sun. 01 Sep 2019 22 05 07 GMT 
Response Code: 200 
access-control-allow-oiigin:' 
'
content-typo: terthtml
X-trame-options: SAMEORIG1N 
'
Figure 4.12 (left) displays the dialogue selection box while Figure 4.12 (right) displays a search in progress.
Figure 4.12: The Domain Tool selection window and progress.
72 Chapter 4
• 
Open the Applications menu again and scroll down to "Domain Tool".
• 
Right-click this program and select "Add to favorites".
footballclub.cnn.com
cdition.cnn.com
fave.edition.cnn.com
© Amass
Sublist3r 
Photon
TheHarvester
Carbon14
and then fetch subdomains 
name. The following explains
• amass intel -whois -ip -sre -active -d inteltechniques.com
• amass enum -sre -ip -passive -d intelcechniques.com
• python3 sublist3r.py -d inteltechniques.com
• python3 photon.py -u inteltechniques.com -1 3 -t 100
• python3 theHarvester .py -d inteltechniques.com -b bing, google
• python3 carbonl4.py https://inteltechniques.com
Ing Rtddler for tnteltechniques.con subdomains 
mg CoogleCT for inteltechniques.co* subdonatns 
tnteltechnlques.com 
autodtscover.inteltechniques.com 
webnail.inteltechniques.con 
www.inteltechniques.con 
cpanel.inteltechniques.con
|k_   
ftp.inteltechniques.com
terylng ftaptdOKS for inteltechniques.con subdomains
You should now have new folders within a folder titled "Programs" inside your "Downloads" folder. These 
folders contain the Python scripts necessary to launch the programs. Next, let's take a look at the manual 
commands required to execute each program. I will use my own website during the demonstrations. You would 
need to execute each script from within die proper folder containing the Python files. However, our custom 
script allows us to use a menu without the need for Terminal commands. This is included in the download as 
"domains.sh".
Amass: This option takes the longest to run, but it is the most thorough. It uses a brute force option which 
attempts to determine any possible subdomains. It creates two reports, both of which will be located in the 
Documents/Amass folder. In my test with cnn.com, it found 282 subdomains, such as the following.
Sublist3r: This program scans much faster but will only find common subdomains. This may be sufficient for 
most tasks. It creates a report located in the Documents/Sublist3r folder. In my test, it found 808 subdomains 