# Linux 服务器管理
> 原文：
在本课程中，将尝试涵盖 linux 服务器管理员执行的一些常见任务。我们将首先尝试理解一个特定的命令做什么，然后尝试使用例子来理解这些命令。请记住，自己练习 Linux 命令是非常重要的。
## 实验室环境设置
*   在你的系统上安装 docker-[https://docs.docker.com/engine/install/](https://docs.docker.com/engine/install/)
*   我们将在 Red Hat Enterprise Linux (RHEL) 8 系统上运行所有命令。
![](img/ab8caebe16da92fd3c225ea9f45e8be7.png)
*   我们将在上面的 Docker 容器中运行本模块中使用的大多数命令。
## 多用户操作系统
如果一个操作系统允许多人/用户使用一台计算机，并且不影响彼此的文件和首选项，则该操作系统被认为是多用户的。基于 Linux 的操作系统本质上是多用户的，因为它允许多个用户同时访问系统。典型的计算机只有一个键盘和显示器，但是如果计算机连接到网络，多个用户可以通过 SSH 登录。我们将在后面介绍更多关于 SSH 的内容。
作为服务器管理员，我们最关心的是离我们很远的 Linux 服务器。我们可以借助 SSH 之类的远程登录方法连接到这些服务器。
由于 Linux 支持多用户，我们需要一种方法来保护用户之间的相互保护。一个用户不应该能够访问和修改其他用户的文件
## 用户/组管理
*   Linux 中的用户有一个关联的用户 ID，称为 UID。
*   用户还有一个主目录和一个与之相关联的登录 shell。
*   组是一个或多个用户的集合。组使得在一组用户之间共享权限变得更加容易。
*   每个组都有一个与之关联的名为 GID 的组 ID。
### id 命令
`id`命令可用于查找与用户相关联的 uid 和 gid。它还列出了用户所属的组。
与 root 用户关联的 uid 和 gid 为 0。![](img/7d9c130d2d88f7f58949cd4a79efcc4a.png)
在 Linux 中找出当前用户的一个好方法是使用 whoami 命令。
![](img/a6a12a314f5f010aba7caf01782c7c14.png)
**“root”用户或超级用户是最有特权的用户，拥有** **对系统上所有资源的无限制访问权。它有 UID 0**
### 与用户/组相关的重要文件
| /etc/密码 | 存储用户名、uid、gid、主目录、登录外壳等 |
| --- | --- |
| /etc/影子 | 存储与用户相关联的密码 |
| /etc/group | 存储系统中不同组的信息 |
![](img/216301ca3672781c60ab84945d5cec0b.png)
![](img/e9180faab653dac9c3629d8ef2f9e7fe.png)
![](img/fb9abfcd62f78d6f2c3117bdced4605f.png)
如果您想了解上述输出中讨论的每个字段，可以浏览以下链接:
*   [https://tldp . org/LDP/LAME/LAME/Linux-admin-made-easy/shadow-file-formats . html](https://tldp.org/LDP/lame/LAME/linux-admin-made-easy/shadow-file-formats.html)
*   [https://tldp.org/HOWTO/User-Authentication-HOWTO/x71.html](https://tldp.org/HOWTO/User-Authentication-HOWTO/x71.html)
## 管理用户的重要命令
下面是一些常用于管理 Linux 上的用户/组的命令:
*   `useradd` -创建新用户
*   `passwd` -添加或修改用户密码
*   `usermod` -修改用户的属性
*   `userdel` -删除用户
### useradd
useradd 命令在 Linux 中添加新用户。
我们将创建一个新用户“shivam”。我们还将通过在/etc/passwd 文件后面添加后缀来验证用户是否已经创建。对于新创建的用户，uid 和 gid 是 1000。分配给用户的主目录是/home/shivam，分配给用户的登录 shell 是/bin/bash。请注意，稍后可以修改用户主目录和登录 shell。
![](img/edd92bd4a14a6e34f322b20a9dcd566e.png)
如果我们没有为主目录或登录 shell 之类的属性指定任何值，默认值将被分配给用户。我们也可以在创建新用户时覆盖这些默认值。
![](img/8db6bddb0eba3c788c52f364a6e6a69b.png)
### 密码
passwd 命令用于为用户创建或修改密码。
在上面的例子中，我们在创建用户“shivam”或“amit”时没有为他们分配任何密码。
"!!"在阴影中的帐户条目意味着用户的帐户已经创建，但还没有给出密码。
![](img/f20077734975411d8f27b86e85a76134.png)
现在让我们尝试为用户“shivam”创建一个密码。
![](img/f8c840728dd5d58ffec1944b813eaa0d.png)
请记住密码，因为我们将在后面使用有用的示例。
另外，现在让我们更改 root 用户的密码。当我们从普通用户切换到根用户时，它会要求您输入密码。此外，当您使用 root 用户登录时，将会询问密码。
![](img/37a2db7bc36993ced2eefd69a80f6894.png)
### usermod
usermod 命令用于修改用户的属性，如主目录或 shell。
我们试着将用户“amit”的登录 shell 修改为“/bin/bash”。
![](img/529168bf4d4b2e13d02847c52540205d.png)
同样，您也可以修改用户的许多其他属性。请尝试“usermod -h”以获得您可以修改的属性列表。
### 你是谁
userdel 命令用于删除 Linux 上的用户。一旦我们删除用户，所有与该用户相关的信息都将被删除。
让我们试着删除用户“amit”。删除用户后，您将不会在“/etc/passwd”或“/etc/shadow”文件中找到该用户的条目。
![](img/63d72e1255fa315ad38835d6c299a84f.png)
## 管理组的重要命令
管理组的命令与管理用户的命令非常相似。这里不详细解释每个命令，因为它们非常相似。您可以尝试在您的系统上运行这些命令。
| `groupadd ` | 创建一个新组 |
| --- | --- |
| `groupmod ` | 修改组的属性 |
| `groupdel ` | 删除一个组 |
| `gpasswd ` | 修改组的密码 |
![](img/264dc1f74db8530b2774fafcb8f4624d.png)
我们现在将尝试将用户“shivam”添加到我们上面创建的组中。
![](img/bc22c8f5c659fa3ab7e999372a23d655.png)
## 成为超级用户
**在运行以下命令之前，请确保您已经使用上述 passwd 命令为用户“shivam”和用户“root”设置了密码。**
su 命令可用于在 Linux 中切换用户。现在让我们尝试切换到用户“shivam”。
![](img/eeb6a8007941aa0bcb35c5ea1bcafe9b.png)
现在让我们尝试打开“/etc/shadow”文件。
![](img/f13ac2ab5e948377512b2863e4897898.png)
操作系统不允许用户“shivam”读取“/etc/shadow”文件的内容。这是 Linux 中的一个重要文件，它存储了用户的密码。该文件只能由 root 用户或拥有超级用户权限的用户访问。
**sudo 命令允许** **用户以根用户的安全权限运行命令。**请记住，root 用户拥有系统的所有权限。我们也可以使用 su 命令切换到 root 用户并打开上面的文件，但是这样做需要 root 用户的密码。另一种在大多数现代操作系统上首选的方法是使用 sudo 命令成为超级用户。使用这种方式，用户必须输入他/她的密码，并且他们需要成为 sudo 组的一部分。
如何向其他用户提供超级权限？
让我们首先使用 su 命令切换到 root 用户。请注意，使用下面的命令需要您输入 root 用户的密码。
![](img/4397c02784f71a2c952b67a626b964a3.png)
如果您忘记了为 root 用户设置密码，请键入“exit ”,您将作为 root 用户返回。现在，使用 passwd 命令设置密码。
文件/etc/sudoers 保存了被允许调用 sudo 的用户的名字。在 redhat 操作系统中，默认情况下不存在该文件。我们需要安装 sudo。
![](img/c3e88def352817adfd5d4f2b787a411c.png)
我们将在后面的小节中详细讨论 yum 命令。
尝试打开系统上的“/etc/sudoers”文件。这个文件有很多信息。这个文件存储了用户在运行 sudo 命令时必须遵守的规则。例如，允许 root 从任何地方运行任何命令。
![](img/ccaa3ec6b52bb049dcfba05061ce4069.png)
向用户提供 root 访问权限的一个简单方法是将他们添加到有权运行所有命令的组中。“wheel”是 redhat Linux 中拥有此类权限的组。
![](img/d2302656dd99750a565f31cfdcb49f33.png)
让我们将用户“shivam”添加到这个组，这样它也拥有 sudo 特权。
![](img/7e3df185448790dd10d4599732ee0a2a.png)
现在让我们切换回用户“shivam”并尝试访问“/etc/shadow”文件。
![](img/8c853a2ccdbd80a5c63d7a3a489395dd.png)
我们需要在运行该命令之前使用 sudo，因为它只能用 sudo 特权来访问。我们已经通过将用户“shivam”添加到组“wheel”中，授予了他 sudo 权限。
## 文件权限
在 Linux 操作系统上，每个文件和目录都被分配给文件所有者、一组相关用户的成员以及其他所有人的访问权限。这是为了确保不允许一个用户访问另一个用户的文件和资源。
要查看文件的权限，我们可以使用 ls 命令。我们来看看/etc/passwd 文件的权限。
![](img/70c56bcdac78d1e6cd861e44504f4f79.png)
让我们看一下输出中与文件权限相关的一些重要字段。
![](img/3b5d6326dfb894cbea4b3355b680ad1b.png)
![](img/07af3e3391ef01aec3f1f853c3923594.png)
### Chmod 命令
chmod 命令用于修改 Linux 中的文件和目录权限。
chmod 命令接受中的权限作为数字参数。我们可以把权限想象成一系列的位，1 代表真或允许，0 代表假或不允许。
| 许可 | rwx | 二进制的 | 小数 |
| --- | --- | --- | --- |
| 读取、写入和执行 | rwx | One hundred and eleven | seven |
| 直读式记录 | rw- | One hundred and ten | six |
| 阅读并执行 | r-x | One hundred and one | five |
| 只读 | r - | One hundred | four |
| 编写并执行 | -wx | 011 | three |
| 只写 | -w- | 010 | Two |
| 仅执行 | ［加在以-u 结尾的法语词源的名词之后构成复数］ | 001 | one |
| 没有人 | - | 000 | Zero |
我们现在将创建一个新文件，并检查该文件的权限。
![](img/df904e4ceb7b7e991e3c8a936ba83791.png)
群组拥有者没有权限写入这个档案。让我们使用 chmod 命令向组所有者或 root 用户授予写权限。