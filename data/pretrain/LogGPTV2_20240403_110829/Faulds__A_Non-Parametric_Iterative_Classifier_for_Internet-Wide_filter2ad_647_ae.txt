### 优化后的文本

**Figure 5: Results in D4**

The database was constructed to ensure that signatures were sufficiently unique under delay distortion, but packet loss and user modifications were not taken into account. Consequently, the database contains several entries that would be difficult to distinguish under the types of heavy distortion considered in this paper. Nevertheless, these tests should indicate how well Faulds scales to larger databases and whether its recovery of the unknown parameters (α, θ) is affected by increased uncertainty during the match.

We set the popularity α to a Zipf distribution with a shape parameter of 1.2 and continue using \( m = 2^{18} \) observations, which gives us 64K samples from the most common OS and just 49 from the least. We borrow the delay from case S13 (i.e., reverse-exponential \( T \) with mean 1.5 seconds, Erlang(2) \( \Delta \) with mean 0.5) and packet loss from S23 (i.e., reverse-binomial). Finally, we use RAND with stay probability \( \phi_v = 0.8 \).

To make sense of \( \alpha \), we sort all signatures in rank order from the most popular to the least and plot the result in Figure 5(a). There is a strong match in the top-100, while the random noise in the tail is explained by the scarcity of these OSes in the observation (i.e., below 250 samples each). For comparison, the outcome of Hershel+ is displayed in part (b) of the figure. To complete the big picture, subfigures (c)-(d) show estimates of \( f_T \) and \( f_\Delta \). Despite an overall 30% classification mismatch, these PMFs are no worse than previously observed in Figure 4, indicating that incorrect decisions overwhelmingly went to signatures with similar RTO vectors as the true OS.

Instead of scrutinizing 21 different loss PMFs, suppose we compute a single metric – the fraction of packets dropped within the entire observation \( x^3 \), conditioned on at least one packet surviving. To this end, define during step \( t \):

\[
L_t^k = \frac{1}{k-1} \sum_{\ell=1}^{k-1} q_t^k(\ell)
\]

as the average number of lost replies in signatures with \( k \) packets. Then, taking an estimated ratio of all dropped packets to the total transmitted yields the expected loss rate:

\[
p_t^{\text{loss}} = \frac{\sum_{i=1}^n \alpha_t^i L_t^{|d_i|}}{\sum_{i=1}^n \alpha_t^i |d_i|}
\]

Recall that the simulation allowed loss to affect at most \( k-1 \) packets in OSes with \( |d_i| = k \). Therefore, its ground-truth packet loss should represent the same quantity as (28). Traces show that 70.1% of the packets were dropped, which matches quite well against \( p_\infty^{\text{loss}} = 69.3\% \).

Since \( \phi_v = 0.8 \) was a constant in this simulation, it makes sense to compare it against feature-modification estimates averaged across all fields and all OSes, i.e.:

\[
E[\phi_t^v] = \frac{1}{b+1} \sum_{i=1}^n \alpha_i \phi_t^{iv}
\]

Results show that \( E[\phi_\infty^v] = 0.802 \), which is very close to the actual value. While there is some variation in individual \( \phi_{iv} \), it is of little concern due to the small number of samples seen by Faulds from these OSes. For a discussion of unknown devices and their impact on EM, see [43].

### 7 Internet Measurement

#### 7.1 Overview

On December 14, 2016, we conducted a port-80 SYN scan of all BGP-reachable IPv4 addresses on the Internet. Of the 2.8B IPs contacted, we gathered responses from 67.6M hosts. In large-scale classification, such as the one attempted here, Faulds produces a huge volume of information in the form of various PMFs and estimates. We start with basic sanity checks of the estimated distortion \( \theta \) and then delve into classification result \( \alpha \).

#### 7.2 Network Distortion

Figure 6(a) shows the recovered distribution \( f_T \) using a bin size of 30 ms. Delays below 60 ms (29%) represent unloaded servers in close proximity to the scanner, most likely within the continental US. Session D5: Network Security, CCS’17, October 30-November 3, 2017, Dallas, TX, USA.

To examine packet loss, define \( \eta_t^k = \sum_{i=1}^n \alpha_t^i 1_{|d_i|=k} \) to be the estimated fraction of observations that use an OS with \( k \) packets. The top values of \( k \) are four (\( \eta_\infty^4 = 0.42, 112 \) stacks in Plata database D4), six (\( \eta_\infty^6 = 0.07, 72 \) stacks), and five (\( \eta_\infty^5 = 0.04, 54 \) stacks). Figure 7 plots the recovered loss PMFs for these values of \( k \), each fitted with an iid binomial model and accompanied by the average loss rate \( L_\infty^k / k \) from (27). First, it is interesting that the loss rate is heterogeneous, ranging from 0.3% in \( q_6 \) to 12.6% in \( q_5 \). This phenomenon may be inherent to the signatures that map to each \( k \) (e.g., certain printers cut the SYN-ACK sequence when their tiny SYN backlog queue overflows [41]), the load on the corresponding OSes, and host location on the Internet, all of which suggest there is an extra benefit to estimating \( q_k \) independently for different \( k \). Second, while in a few of the plots the binomial model shows a reasonable fit, this does not universally hold. Finally, computing (28) for the Internet scan yields an average loss rate of 3.3% across all observations. This is consistent with 3.8% found in a Google study of SYN-ACK retransmission rates [9].

We highlight several interesting cases, focusing on the two most volatile fields – Win and MSS – and limiting all PMFs to values above the 1% likelihood. Since MSS sometimes depends on the MTU of the underlying data-link layer and/or tunneling protocol (e.g., IPv6), this field may experience fluctuation even if the OS does not allow explicit means for changing this value.

We expected devices with firmware restrictions that prevent user access to the configuration of SYN-ACK parameters to exhibit high \( \phi_{iv} \). One example is shown in Figure 8(a) for a popular Dell printer. Among 976K occurrences on the Internet, this device keeps the default window with probability 1. Intuition also suggests that general-purpose OSes are more susceptible to modification and/or existence of alternatively patched versions. One example is 21M hosts with Ubuntu Linux, where Figure 8(b) shows that Faulds discovers 31% of the cases with window size exactly half of the default (i.e., 14,480 instead of 28,960). A more dispersed case is Mac OS X Server in part (c), which exhibits noticeable variation in both Win and MSS. Its default values remain with probability 73% and 89%, respectively. Finally, in subfigure (d), CentOS (enterprise Linux) has its original combination (17,896, 8,960) occurring in only 1% of the cases. We conjecture that the Plata database [41], which was constructed from production devices in a large campus network, captured a non-standard version of this stack with jumbo Ethernet frames enabled. Since this is an inherent property of any network, it highlights the importance of considering such variations in large-scale studies.