page. These are exploitable bits for the PTE corruption attack. In
the attack, an attacker attempts to corrupt the mapping between a
virtual page and a physical page where the attacker has the read
and write permissions of the virtual page. If the mapped physical
page number is corrupted by the bit flip, the attacker gains the read
and write permissions to the changed physical page. Gruss et al. [8]
ported the PTE corruption attack to the JavaScript environment
using a cache eviction method instead of a clflush instruction.
Van der Veen et al. [25] conducted a PTE attack on the ARM archi-
tecture by exploiting the characteristic of Android ION memory
allocator. If these PTE corruption attacks flip a non-exploitable bit,
the attacks fail, and several side effects are induced.
A line of work attempted to corrupt instruction sequences. Seaborn
and Dullien [20] proposed a sandbox escape attack that corrupts
an instruction to escape from Chrome Native Client (NaCl). Bits
that compose the operand register number or base address of the
sandbox can be exploited by this attack. Gruss et al. [7] proposed an
opcode flipping attack that induces a bit flip in the opcode sequence.
Figure 2: Reproducibility of bit flips over the number of ac-
cesses
The attack flips a bit in the sudoers.so file, and therefore the attack
bypasses the authentication system. This attack also has a limited
set of exploitable bits. If a non-exploitable bit is flipped, the changed
instruction induces a system crash or an unexpected outcome.
Different attacks were also developed. Bosman et al. [3] used
Rowhammer to counterfeit a JavaScript object, to access arbitrary
memory location. Razavi et al. [19] proposed an RSA key corruption
attack. They exploited the characteristic of which one bit change
in the public key simplifies the factorization of the public key [19].
Jang et al. [10] proposed a processor denial-of-service attack on
the Intel SGX environment. Moreover, Tatar et al. [23] conducted
Rowhammer attack by only sending the network packets to the
victim machine. Recently, Frigo et al. [6] demonstrated a new attack
vector with graphics processing unit (GPU).
Unwanted Bit Flip.
In previous work, unwanted bit flips of
Rowhammer and a solution to this problem were discussed [27].
It was reported that double-sided Rowhammer affects the upper
row (rowi+2) of the upper aggressor row and the lower row (rowi-2)
of the lower aggressor row, in addition to the victim row (rowi).
Hence, they attempted to allocate all the memory units of rowi+2,
rowi-2, and rowi, to prevent other processes from being corrupted
by the attack. However, their work was not sufficient to solve the
problem of unwanted bit flips. Their method cannot guarantee the
functionality of the attack when an unwanted bit flip occurs on
the victim page. Since the victim page must be allocated on the
victim row, unwanted bit flips on the victim page are inevitable.
Therefore, we analyze the effects of the unwanted bit flips on the
victim page, as presented in Section 3.2. Moreover, we propose a
method to suppress unwanted bit flips while inducing the target
flip, as presented in Section 4.
3 ROWHAMMER’S UNWANTED BIT FLIP
When a Rowhammer attack is conducted, non-target cells are
flipped by the attack, and the bit flips of non-target cells are referred
to as unwanted bit flips. In this section, we present the details of
the two causes of the unwanted bit flips and their effects to the
existing attacks.
3.1 Causes of Unwanted Bit Flips
Undetected Vulnerable Cells. Existing Rowhammer attacks lever-
age the reproducibility of bit flips [3, 7, 19, 25, 27]; however, the
0800160024003200400K 1000K 1200KNumber of flipped cells600K        800K Number of accesses1%  2~34%   35~67%  68~99%  100%Session 7: Hardware and SystemsAsiaCCS ’19, July 9–12, 2019, Auckland, New Zealand551Table 1: Prevalence of rows containing multiple vulnerable cells in commodity DRAM modules
Manufacturer
Serial number
ID vulnerable
M378B5273DH0-CH9
A1
M378B5173QH0-CK0
A2
M378B5173QH0-CK0
A3
M378B5273DH0-CK0
A4
M378B5273DH0-CH9
A5
M378B5173EB0-CK0
A6
HTM351U6CFR8C-H9
B1
HTM351U6CFR8C-PB
B2
HTM351U6CFR9C-PB
B3
HTM351U6CFR8C-H9
B4
MT16JTF51264AZ-1G6M1 C1
MT16JTF51264AZ-1G6M1 C2
Saumsung
Hynix
Micron
Total
rows
3.4 × 105
3.2 × 105
3.1 × 105
3.5 × 105
3.4 × 105
5.2 × 102
3.1 × 105
3.8 × 105
3.9 × 105
3.3 × 105
3.5 × 10
3.6 × 10
Vulnerable rows
containing
multiple flips
3.3 × 105 (97.4%)
2.9 × 105 (90.0%)
2.6 × 105 (83.8%)
3.3 × 105 (96.3%)
3.3 × 105 (97.4%)
2.2 × 102 (42.0%)
2.2 × 105 (72.4%)
3.7 × 105 (95.9%)
3.8 × 105 (97.8%)
2.5 × 105 (73.6%)
0 (0%)
0 (0%)
Total
vulnerable
pages
6.7 × 105
5.6 × 105
5.1 × 105
6.8 × 105
6.7 × 105
6.6 × 102
4.9 × 105
7.1 × 105
7.3 × 105
6.4 × 105
3.5 × 10
3.6 × 10
Vulnerable pages
containing
multiple flips
6.7 × 105 (98.6%)
3.8 × 105 (68.1%)
3.0 × 105 (58.7%)
6.7 × 105 (97.8%)
6.7 × 105 (98.6%)
1.8 × 102 (27.9%)
2.7 × 105 (56.9%)
5.6 × 105 (79.2%)
6.3 × 105 (85.3%)
3.9 × 105 (60.5%)
0 (0%)
0 (0%)
all the vulnerable cells requires a large number of scan attempts.
Furthermore, attackers may not detect all the vulnerable cells after
several days of scanning [13]. Therefore, the existence of undetected
vulnerable cells is inevitable. Hence, we need a way to suppress the
unwanted bit flips, even if they are not detected during the scan
phase.
Multiple Vulnerable Cells in a Row. Existing attacks cannot
guarantee their functionality if the victim row has multiple vul-
nerable cells. Most attacks have specific sets of exploitable bits
(Section 2.3) and function correctly only if one of the exploitable
bits is flipped. If another bit is flipped, the functionality of the at-
tacks cannot be guaranteed. Moreover, attacks undergo side effects
such as memory corruption of other processes and a system crash.
However, current attacks have no method to selectively induce a
bit flip only on the desired bit. For successful Rowhammer attacks,
an appropriate method is required for the selective induction of the
bit flips.
To measure the prevalence of a row containing multiple vul-
nerable cells, we conduct a quantitative evaluation of 16 different
DDR3 modules from three DRAM manufacturing companies. The
experiment is carried out in a bare metal environment, to scan
as many rows as possible (Section 5.1). The experimental results
show that 12 modules are vulnerable to Rowhammer, and Table 1
presents the results of these 12 vulnerable modules. The vulnerable
DRAM modules tend to have multiple vulnerable cells in a single
row. For example, among the vulnerable rows of the B3 module,
97.1% of them have multiple vulnerable cells. On the other hand,
the results also show that C1 and C2 modules do not have any rows
with multiple vulnerable cells. We conjecture that this is due to
the small number of vulnerable cells in these modules. As the rows
with multiple vulnerable cells are prevalent, our method should flip
the target cell without flipping others.
3.2 Effects of Unwanted Bit Flips
In general, at least two 4KB pages are co-resident in a row because
the size of a row is 8KB. Hence, the victim row is comprised of
the victim page and co-resident pages. Attackers aim to induce the
Figure 3: Cumulative detected vulnerable cells over the num-
ber of scan attempts
reproducibility of bit flips is not guaranteed [13, 27]. To investigate
the reproducibility of bit flips, we conduct a proof-of-concept exper-
iment with the number of accesses ranging from 400k–1,200k. We
randomly select the 4,096 rows and fill the rows with the RowStripe
pattern [24]. We conduct 100 attempts of double-sided Rowhammer
on them. As shown in Figure 2, only 43.5% of the bit flips are consis-
tent for all 100 attempts with 1,200k accesses. Meanwhile, 5.9% of
the bit flips are induced only once in the 100 attempts with 1,200k
accesses. The results imply that the majority of cells are not flipped
consistently; thus, the reproducibility of bit flips is not guaranteed.
We further evaluate the number of attempts required for the
detection of all the vulnerable cells in the region. Figure 3 shows that
1,921 (66.6%) vulnerable cells are detected within a single attempt of
Rowhammer. It should be noted that the 99th scan attempt detects a
new vulnerable cell, unseen before, and no single attempt discovers
the entire vulnerable cells. The experimental results indicate that
there is a high probability that the result of each scan attempt has
undetected vulnerable cells.
From the perspective of the attacker, undetected vulnerable cells
are problematic. Attackers do not expect cells that are not flipped
during the scan phase to be flipped in the reproduction phase.
However, the undetected vulnerable cells can be flipped during
the reproduction phase. According to Figure 3, the detection of
0204060801000100Cumulative detected vulnerable cells [%]20           40           60           80       Number of Rowhammer scan attemptsSession 7: Hardware and SystemsAsiaCCS ’19, July 9–12, 2019, Auckland, New Zealand552Figure 4: Pages on a single row in the single-channel and dual-channel configurations
target bit flip on the victim page. However, unwanted bit flips may
occur on the victim page and co-resident pages. In this subsection,
we explain the effects of unwanted bit flips on each page.
Unwanted Bit Flips on the Victim Page. When an unwanted bit
flip occurs on the victim page, the bit flip degrades the correctness
of the attack. This is because the victim page is related to the attack
procedure. In Table 2, we conduct an analysis of the existing attacks,
to reveal whether an attack failure or a system crash occurs due
to the unwanted bit flip. For example, in the privilege escalation
(PTE corruption) attack [20], the victim page is a 4KB page full
of PTEs, and the attacks attempt to corrupt the target PTE. An
unwanted bit flip may occur in the target PTE or another PTE.
If another bit of the target PTE undergoes an unwanted bit flip,
any access through the corrupted PTE is affected (e.g., change
of the present bit). If another PTE undergoes an unwanted bit
flip, another physical address translation is affected, which results
in unexpected side effects (e.g., wrong physical base address). In
the instruction corruption attack [7], the victim page is full of
instructions. The attack attempts to corrupt the target instruction.
However, an unwanted bit flip changes a non-target instruction into
an invalid or inappropriate instruction. The changed instruction
leads to an unsuccessful attack or a system crash.
Unwanted Bit Flips on a Co-Resident Page. An unwanted bit