User: 请回答以下安全问题使用纯HTTP传输密码这适用于端到端应用，其中服务器只是“愚蠢”的临时存储。由于以下原因，我正在考虑使用纯HTTP（无TLS）传输密文：
对单个加密算法的安全性进行了充分的研究，
而堆叠多个是未知的（例如，NaCl（）与AES（NaCl））
简洁（静止时=运输中）
增加了服务器负载（零拷贝发送文件（2）与。
复制到RAM以进行TLS加密）。
使用这样的设置有什么风险：
两个通道：
HTTPS用于认证/元数据/接收一次性令牌，
HTTP传输密文。
客户端使用GET/POSThttp://example.com/?token=one-时间。
正文：密文（在AEAD模式下分块），大小灵活（可以很大）
服务器验证令牌（以防止重复使用），然后将密文流式传输到磁盘。
客户端接收并解密密文（以检测修改、截断等）

Assistant: 这听起来像是你在试图发明某种“DropBox”克隆。
单个加密算法的安全性得到了很好的研究，而堆叠多个加密算法是未知的（例如NaCl（）与AES（NaCl））
我认为这不适用。我不能在这里提出一个艰难的数学论点，但对于独立加密，使用完全无关的密钥，复合加密的强度根本不会下降。并且将至少与两种加密中较弱的加密一样强大。仅此而已。它只是防止简单地添加两个键长度。最坏的情况是，您最终得到堆栈中两个密钥长度中较低的一个。这只适用于独立钥匙。我们可以将其假设为静态加密和TLS会话密钥加密的组合。（如果我错了，请纠正我，Sec:SE。）
简洁（静止时=运输中）
我认为这将被您自己的身份验证/签名方案的复杂性大大抵消。
增加了服务器负载（零复制发送文件（2），而不是复制到RAM进行TLS加密）。
我认为对延迟和吞吐量的影响可以忽略不计。也许甚至无法测量。我会坚持一个基准。（->请参阅https://istlsfastyet.com/）
再说一遍：不知道身份验证方案会产生多大影响。
服务器验证令牌（以防止重复使用），然后将加密的存档文件流式传输到磁盘。
这意味着服务器不再是哑存储器。
相反，为Linux发行版设置镜像之类的东西怎么样？在哑（S）FTP上签名的档案？既然你无论如何都要做客户端验证。