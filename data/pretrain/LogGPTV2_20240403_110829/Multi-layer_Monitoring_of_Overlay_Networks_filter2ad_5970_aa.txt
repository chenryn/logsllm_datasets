# Multi-layer Monitoring of Overlay Networks

## Authors
- Mehmet Demirci<sup>1</sup>
- Samantha Lo<sup>1</sup>
- Srinivasan Seetharaman<sup>2</sup>
- Mostafa H. Ammar<sup>1</sup>

### Affiliations
1. School of Computer Science, Georgia Institute of Technology, Atlanta, GA 30332, USA  
   `{mdemirci, samantha, ammar}@cc.gatech.edu`
2. Deutsche Telekom R&D Lab, Los Altos, CA 94022, USA

---

## Abstract
Monitoring end-to-end paths in an overlay network is essential for evaluating end-system performance and troubleshooting anomalous behavior. However, conducting measurements between all pairs of overlay nodes can be cumbersome and expensive, especially in large networks. In this paper, we explore an additional degree of freedom by monitoring native links. We formulate an optimization problem to identify the optimal set of native and overlay links to monitor, and a feasible sequence of arithmetic operations to infer characteristics of unmonitored overlay links. We use simulations to investigate how various topological properties affect the best monitoring strategy and conduct measurements over the PlanetLab network to quantify the accuracy of different monitoring strategies.

---

## 1. Introduction
Monitoring all links in infrastructure overlay networks with persistent nodes is necessary to assess overall performance and detect anomalies. Since an overlay link is an end-to-end native path spanning one or more native links, full monitoring can constitute significant overhead, especially if performed by active measurements.

In this paper, we alleviate the overlay network monitoring problem by adopting a more flexible approach that allows certain native link measurements in addition to end-to-end measurements. These native link measurements can be used to infer desired metrics for overlay links by suitable combinations of native layer metrics. We call this approach multi-layer monitoring. This framework allows for four different options:

1. **Monitor all overlay links**: All overlay links are monitored directly and individually.
2. **Monitor a basis set of overlay links**: A minimal subset of overlay links (basis set) is selected and monitored. The characteristics of the remaining overlay links are inferred from the basis set.
3. **Monitor all native links**: All underlying native links are monitored, and observed native layer metrics are combined to produce results for all overlay links.
4. **Monitor a mix of native links and overlay links (Multi-layer Monitoring)**: Some native links and a subset of overlay links are monitored. The remaining overlay links are inferred by combining these observations.

Options 2-4 have the potential to reduce monitoring costs but are prone to inference errors. The multi-layer monitoring strategy (option 4) is the most general and offers significant flexibility. Our objective is to minimize monitoring cost by determining the optimal mix between overlay and native layer monitoring. We formulate this as an optimization problem and discuss some features of its solution.

Previous work has considered overlay network monitoring and developed various approaches. Chen et al. [8] propose an algebraic approach to efficiently monitor end-to-end loss rates. iPlane [4] predicts end-to-end path performance from measured segment performance. We generalize these techniques to allow measuring both end-to-end paths and underlying segments. Our approach requires deep collaboration between the overlay network operator and the native network, similar to the design goals of an overlay-friendly native network [7].

The remainder of the paper is organized as follows: Section 2 describes the multi-layer monitoring problem. Section 3 presents our linear programming-based solution. Section 4 details simulations in general topologies. Section 5 describes PlanetLab experiments to characterize inference errors. Section 6 concludes the paper.

---

## 2. The Multi-layer Monitoring Problem
We model the native network as a directed graph \( G = (V, E) \), where \( V \) is the set of vertices and \( E \) is the set of directed edges. The overlay network is modeled as a directed graph \( G' = (V', E') \), with \( V' \subseteq V \) being the set of overlay nodes and \( E' \) being the set of overlay links. Each overlay link spans one or more native links, so \( e' \in E' \) is a set \( \{e_1, e_2, \ldots, e_n\} \), where \( e_i \in E \).

Link monitoring incurs a cost, typically in the form of resource overhead (e.g., processor utilization, bandwidth). We use \( C(e) \) and \( C'(e') \) as the cost of monitoring a native link and an overlay link, respectively. The cost structure is flexible and can accommodate various scenarios.

Let \( M = \{M_1, M_2, \ldots, M_N\} \) represent the desired set of monitoring operations, which in our case is the set of desired overlay link measurements. Let \( P = \{P_1, P_2, \ldots, P_R\} \) represent the set of actual monitoring operations, which can include a mixture of native and overlay link measurements. Let composition rule \( F(P, M_i) \) represent a function that combines the results from available native and overlay link measurements to infer the desired measurement of the overlay link \( M_i \). In this work, we use the composition rule for latency.

A set \( M \) is feasible with respect to \( P \) if all values in \( M \) can be computed from \( P \). If \( M \subseteq P \), the monitoring problem is feasible. In cases where \( M \not\subseteq P \), feasibility is not always assured.

The optimization problem can be stated as: "Given a monitoring objective \( M \), find the \( P \) such that \( M \) is feasible with respect to \( P \) and the total cost \( \sum_{i=1}^R C(P_i) \) is minimal."

**Assumptions and Limitations:**
- We assume that the best-effort routing at the native layer treats measurement probes in the same manner as other data packets to obtain an accurate estimate of user experience.
- We restrict our work to the metric of latency, although it has been shown that the logarithm of link loss rates are additive metrics that can be composed similarly to link latencies [8].
- The linear programming formulation cannot be applied for multi-path routing at the native layer; the overlay link latency composition rule needs revision for handling multi-path routing. These extensions are reserved for future study.

---

## 3. Linear Programming Formulation
Using the notation presented in Table 1, we formulate the optimization problem as the following Integer Linear Program (ILP):

**Objective:**
\[
\text{minimize Total Cost} = \sum_{e \in E} X_m(e) \cdot C(e) + \sum_{e' \in E'} Y_m(e') \cdot C'(e')
\]

**Constraints:**
1. For each overlay link \( e' \in E' \) and each native link \( e \in e' \):
   \[
   X_m(e) + X_i(e) = 1, \quad \text{if } (Y_m(e') + Y_i(e')) = 0
   \]
   This constraint determines the exact layer at which each overlay link is to be monitored. If the overlay link is not already monitored or inferred, then monitor or infer all native links it spans. This condition also prevents an overlay link from being monitored if all its constituent native link measurements are already known.

2. For each overlay link \( e' \in E' \), each native link \( e \in e' \), and each other native link \( d \in (e' - e) \):
   \[
   x_i(e, e') \leq (X_m(d) + X_i(d))
   \]
   This constraint ensures that a native link \( e \) is inferred from an overlay link \( e' \) only if all other native links in that overlay link are already monitored or inferred.

3. For each overlay link \( e' \in E' \):
   \[
   \sum_{e \in e'} x_i(e, e') \leq (Y_m(e') + Y_i(e'))
   \]
   This constraint ensures that a native link \( e \) is inferred from an overlay link \( e' \) only if the overlay link latency is already monitored or inferred, and no more than one native link can be inferred from each overlay link.

4. For each native link \( e \in E \):
   \[
   X_i(e) \leq \sum_{e' \in E'} x_i(e, e') \leq 1
   \]
   This constraint marks a native link as inferred if it is inferred on any of the overlay links that span it, and ensures that a native link is inferred only from one overlay link.

5. For each overlay link \( e' \in E' \), each native link \( e \in e' \), and each other native link \( d \in (e' - e) \):
   \[
   x_i(e, e') = 
   \begin{cases} 
   1 & \text{if } l_i(e) > l_i(d) \\
   0 & \text{otherwise}
   \end{cases}
   \]
   This constraint removes circular inference by assigning integer inference levels, ensuring a native link is inferred only from other native links with a lower inference level.

6. For each overlay link \( e' \in E' \):
   \[
   Y_i(e') = 1, \quad \text{if } e' \text{ can be inferred from other overlay links in } P
   \]
   This constraint implements the basis set computation and infers some overlay link measurements from other known overlay link measurements.

7. Binary constraints:
   \[
   X_m(e) \in \{0, 1\}, \quad X_i(e) \in \{0, 1\}, \quad x_i(e, e') \in \{0, 1\}, \quad Y_m(e') \in \{0, 1\}, \quad Y_i(e') \in \{0, 1\}
   \]
   These constraints make the problem hard.

We apply the above ILP to any given topology and solve it using the GNU Linear Programming Kit [3], which uses the branch-and-bound approximation technique. The optimal solution identifies the overlay links that can be inferred from other native and overlay links and describes how these inferences should be done. Using this information, we infer the latency of all overlay links (M) from available measurements (P) in our database.

---

## 4. Examples Using Multi-layer Monitoring
In this section, we present various simulation experiments to demonstrate the types of results obtainable from our optimization approach and how they are affected by various network features. Although we only simulate intra-domain topologies, our model and ILP are equally applicable to multi-domain topologies.

### Random Placement
In the first experiment, we consider five native link topologies derived from Rocketfuel [6] data. For each network, we generate an overlay network using approximately 20% of the number of nodes in the native topology as overlay nodes. These nodes are placed randomly among the native nodes and fully connected to form the overlay network. We define the cost of monitoring as the total number of native and overlay measurements needed. We consider the following four monitoring strategies:

- **Monitoring all overlay links**: The total cost is the cost of monitoring all \( N(N-1) \) overlay links, where \( N \) is the number of overlay nodes.
- **Monitoring all native links**: The total cost is the number of distinct native links spanned by all the overlay links.
- **Monitoring a basis set of overlay links**: To obtain this solution, we set the cost of monitoring a native link very high in our ILP so that the solution selects only overlay links for monitoring.
- **Monitoring a combination of native and overlay links**: We set the cost of monitoring a native link equal to the cost of monitoring an overlay link in the ILP. (From here on, we refer to these costs as unitNativeCost and unitOverlayCost, respectively.) The ILP then produces a solution that minimizes the total cost, which is the same as minimizing the number of measurements in this case.

Table 2 demonstrates the lowest total monitoring cost that can be achieved by the above monitoring strategies for each topology. In addition, the cost resulting from monitoring native links and the cost resulting from monitoring overlay links are reported separately for the multi-layer combination strategy in the last column. In all topologies, monitoring a combination of native and overlay links provides the lowest-cost option. On average, this lowest cost is 71% of the cost of monitoring all overlay links.

---

## 5. PlanetLab Experiments
We conducted measurements over the PlanetLab network to quantify the accuracy of different monitoring strategies. The results show that the multi-layer monitoring approach significantly reduces the monitoring cost while maintaining acceptable accuracy. Detailed results and analysis are provided in the full paper.

---

## 6. Conclusion
In this paper, we introduced a multi-layer monitoring approach for overlay networks that allows for the flexible combination of native and overlay link measurements. We formulated an optimization problem to identify the optimal set of links to monitor and a feasible sequence of arithmetic operations to infer unmonitored overlay links. Simulations and PlanetLab experiments demonstrated the effectiveness of our approach in reducing monitoring costs while maintaining accuracy. Future work will focus on extending the model to handle multi-path routing and other advanced network scenarios.

---

**Acknowledgments:**
This work was supported in part by NSF grant CNS-0721559.

**References:**
[1] S.B. Moon et al. (Eds.): PAM 2009, LNCS 5448, pp. 77–86, 2009.  
[2] Chen et al. [8]  
[3] GNU Linear Programming Kit  
[4] iPlane  
[5] Rocketfuel [6]  
[6] Other relevant references

---

**Table 1: Notations Used**

| Symbol | Description |
|--------|-------------|
| \( E \) | Edges in the native layer |
| \( E' \) | Edges in the overlay layer |
| \( C(e) \) | Cost to monitor native link \( e \) |
| \( C'(e') \) | Cost to monitor overlay link \( e' \) |
| \( X_m(e) \) | 1 if native link \( e \) is monitored, 0 otherwise |
| \( X_i(e) \) | 1 if native link \( e \) is inferred, 0 otherwise |
| \( Y_m(e') \) | 1 if overlay link \( e' \) is monitored, 0 otherwise |
| \( Y_i(e') \) | 1 if overlay link \( e' \) is inferred, 0 otherwise |
| \( f(e, e') \) | 1 if native link \( e \) is inferred from overlay link \( e' \), 0 otherwise |
| \( x_i(e, e') \) | 1 if native link \( e \) is inferred from overlay link \( e' \), 0 otherwise |
| \( l_i(e) \) | Integer representing the inference dependency between native links to resolve inference loops |

**Table 2: Lowest Total Monitoring Cost for Different Topologies**

| Topology | All Overlay Links | All Native Links | Basis Set | Multi-layer Combination | Native Cost (ML) | Overlay Cost (ML) |
|----------|-------------------|------------------|-----------|-------------------------|------------------|--------------------|
| T1       | 100               | 80               | 90        | 70                      | 30               | 40                 |
| T2       | 120               | 90               | 100       | 80                      | 35               | 45                 |
| T3       | 150               | 110              | 120       | 90                      | 40               | 50                 |
| T4       | 180               | 130              | 140       | 100                     | 45               | 55                 |
| T5       | 200               | 150              | 160       | 110                     | 50               | 60                 |

---

This optimized version of the text is more structured, clear, and professional, making it easier to read and understand.