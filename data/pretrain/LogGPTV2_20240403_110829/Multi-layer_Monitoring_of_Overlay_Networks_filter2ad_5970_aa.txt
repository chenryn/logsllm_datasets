title:Multi-layer Monitoring of Overlay Networks
author:Mehmet Demirci and
Samantha Lo and
Srinivasan Seetharaman and
Mostafa H. Ammar
Multi-layer Monitoring of Overlay Networks(cid:2)
Mehmet Demirci1, Samantha Lo1, Srini Seetharaman2, and Mostafa Ammar1
1 School of Computer Science, Georgia Institute of Technology, Atlanta GA 30332
{mdemirci,samantha,ammar}@cc.gatech.edu, PI:EMAIL
2 Deutsche Telekom R&D Lab, Los Altos CA 94022, USA
Abstract. Monitoring end-to-end paths in an overlay network is es-
sential for evaluating end-system performance and for troubleshooting
anomalous behavior. However, conducting measurements between all
pairs of overlay nodes can be cumbersome and expensive, especially in a
large network. In this paper, we take a diﬀerent approach and explore an
additional degree of freedom, namely, monitoring native links. We allow
native link measurements, as well as end-to-end overlay measurements, in
order to minimize the total cost of monitoring the network. We formulate
an optimization problem that, when solved, identiﬁes the optimal set of
native and overlay links to monitor, and a feasible sequence of arithmetic
operations to perform for inferring characteristics of the overlay links
that are not monitored directly. We use simulations to investigate how
various topological properties may aﬀect the best monitoring strategy.
We also conduct measurements over the PlanetLab network to quantify
the accuracy of diﬀerent monitoring strategies.
1 Introduction
Monitoring all links in infrastructure overlay networks with persistent nodes is
necessary to assess the overall performance of the users and to detect anomalies.
Since an overlay link is in reality an end-to-end native path spanning one or
more native links, this full monitoring operation can constitute a signiﬁcant
overhead (in terms of bandwidth and processing) for large overlays, especially if
the monitoring is performed by active measurements.
In this paper, we alleviate the overlay network monitoring problem by adopt-
ing a more ﬂexible approach that allows certain native link measurements in
addition to end-to-end measurements1. These native link measurements can be
used to infer desired metrics for overlay links by suitable combinations of na-
tive layer metrics. We call this approach multi-layer monitoring. This framework
allows for four diﬀerent options:
1. Monitor all overlay links: With this strategy, all overlay links are moni-
tored directly and individually.
(cid:2) This work was supported in part by NSF grant CNS-0721559.
1 Our work pertains to infrastructure overlays, rather than peer-to-peer networks.
S.B. Moon et al. (Eds.): PAM 2009, LNCS 5448, pp. 77–86, 2009.
c(cid:2) Springer-Verlag Berlin Heidelberg 2009
78
M. Demirci et al.
2. Monitor a basis set of overlay links: The work in [8] introduces a method
to select and monitor a minimal subset of overlay links called the basis set.
The characteristics of the remaining overlay links are inferred from the mea-
surements for the basis set.
3. Monitor all native links: Another option is to monitor all the underlying
native links in the network. Afterwards observed native layer metrics are
combined to produce the results for all the overlay links.
4. Monitor a mix of native links and overlay links (Multi-layer Moni-
toring): In this option proposed in this paper, we monitor some native links
and a subset of the overlay links. We then infer the remaining overlay links
by combining these observations.
Note that while options 2-4 have the potential to reduce the monitoring cost,
they are also prone to inference errors when an overlay link measurement is
inferred from measurements on native and/or other overlay links.
The multi-layer monitoring strategy (option 4) is the most general one and
subsumes all others. It also aﬀords signiﬁcant ﬂexibility in monitoring overlays.
Our objective in this work is to minimize monitoring cost by determining the op-
timal mix between overlay and native layer monitoring. To this end we formulate
this as an optimization problem and discuss some features of its solution.
Previous work has considered overlay network monitoring and developed vari-
ous approaches for it. Chen et al. [8] propose an algebraic approach to eﬃciently
monitor the end-to-end loss rates in an overlay network. They use linear alge-
braic techniques to ﬁnd a minimal basis set of overlay links to monitor and then
infer the loss rates of the remaining ones. iPlane [4] predicts end-to-end path per-
formance from the measured performance of segments that compose the path.
We generalize these techniques and allow measuring both end-to-end paths and
underlying segments. Our approach in this paper requires a deep collaboration
between the overlay network operator and the native network, similar to the
design goals of the overlay-friendly native network[7].
The remainder of this paper is organized as follows: We describe the multi-
layer monitoring problem in Section 2. Section 3 presents our linear program
based solution. We present details from simulating the multi-layer monitoring
framework in general topologies in Section 4. Section 5 describes PlanetLab ex-
periments that we conducted to characterize the inference errors that can result
from this multi-layer monitoring solution. We conclude the paper in Section 6.
2 The Multi-layer Monitoring Problem
We model the native network as a directed graph G = (V, E), where V is the set
of vertices and E is the set of directed edges connecting these vertices. Next, we
model the overlay network as a directed graph G(cid:3) = (V (cid:3), E(cid:3)), with V (cid:3) ⊆ V being
the set of overlay nodes and E(cid:3) being the set of overlay links. In a multi-layer
network, each overlay link spans one or more native links. Thus, the following
relation holds: e(cid:3) ∈ E(cid:3) is a set {e1e(cid:2) , e2e(cid:2), ..., ene(cid:2)}, where ei ∈ E and eke(cid:2) denotes
the kth native edge in e(cid:3).
Multi-layer Monitoring of Overlay Networks
79
Link monitoring incurs a certain cost, typically in the form of resource over-
head (e.g., processor utilization, bandwidth), at each layer. We use C(e) and
C(cid:3)(e(cid:3)) as the cost of monitoring a native link and an overlay link respectively.
Since C(e) and C(cid:3)(e(cid:3)) are variables, the cost structure is ﬂexible and can accom-
modate various scenarios. For instance, if it is not possible to monitor certain
native links directly, the cost variables for those links can be set to inﬁnity.
Let M = {M1,M2, . . . ,MN} represent the desired set of monitoring oper-
ations we would like to get results for, which in our case is the set of desired
overlay link measurements. Let P = {P1,P2, . . . ,PR} represent the set of mon-
itoring operations that are actually performed. This set can contain a mixture
of native and overlay link measurements. Let composition rule F(P,Mi) repre-
sent a function that combines the results from available native and overlay link
measurements to infer the desired measurement of the overlay link Mi. In this
work, we use the composition rule of the latency metric.
We say that a certain M is feasible with respect to P, if all values in M can be
computed from P. Clearly, if M ⊆ P, then the monitoring problem is feasible.
In cases when M (cid:2) P, feasibility is not always assured.
The optimization problem can thus be stated as, “Given a monitoring objec-
tive M, ﬁnd the P such that M is feasible with respect to P and cost(P) =
(cid:2)R
cost(P i) is minimal.”
i=1
Assumptions and Limitations. In this paper, we assume that the best-eﬀort
routing at the native layer treats measurement probes in the same manner as
other data packets, so as to obtain an accurate estimate of the user experience.
We restrict our work to the metric of latency, although it has been shown that the
logarithm of link loss rates are additive metrics that can be composed in a manner
similar to link latencies[8]. Furthermore, the linear programming formulation in
Table 1. Notations used
Edges in the native layer
Edges in the overlay layer
Cost to monitor native link e
) Cost to monitor overlay link e(cid:2)
E
E(cid:2)
C(e)
C(cid:2)
(e(cid:2)
Xm(e) 1 if native link e is monitored, 0 otherwise
Xi(e)
Ym(e(cid:2)
Yi(e(cid:2)
)
f (e, e(cid:2)
xi(e, e(cid:2)
li(e)
1 if native link e is inferred, 0 otherwise
∗
∗∗
is monitored, 0 otherwise
∗∗
) 1 if overlay link e(cid:2)
1 if overlay link e(cid:2)
) 1 if overlay link e(cid:2)
) 1 if native link e is inferred from overlay link e(cid:2)
Integer representing the inference dependency between native links to resolve
inference loops
is inferred, 0 otherwise
is routed over native link e, 0 otherwise
, 0 otherwise
∗
* A native link can be monitored or inferred but never both. Some are neither monitored nor inferred
if they are not needed in inferring overlay link measurements.
** An overlay link is either monitored or inferred, but never both.
80
M. Demirci et al.
the subsequent section cannot be applied for multi-path routing at the native
layer: The overlay link latency composition rule needs revision for handling multi-
path routing. We reserve these extensions to the model for future study.
3 Linear Programming Formulation
Using the notation presented in Table 1, we formulate the optimization problem
as the following Integer Linear Program (ILP):
minimize Total Cost =
Xm(e) · C(e) +
(cid:3)
e∈E
Ym(e(cid:3)
) · C(cid:3)
(e(cid:3)
)
(cid:3)
e(cid:2)∈E(cid:2)
subject to the following constraints
∀ e(cid:3) ∈ E(cid:3), e ∈ e(cid:3)
: Xm(e) + Xi(e) = 1, if (Ym(e(cid:3)
) + Yi(e(cid:3)
)) = 0 .
∀ e(cid:3)∈E(cid:3), e ∈ e(cid:3), d ∈ (e(cid:3) − e) : xi(e, e(cid:3)
) ≤ (Xm(d) + Xi(d)) .
∀ e(cid:3) ∈ E(cid:3)
:
(cid:3)
e∈e(cid:2)
xi(e, e(cid:3)
) ≤ (Ym(e(cid:3)
) + Yi(e(cid:3)
)) .
∀ e ∈ E : Xi(e) ≤ (cid:3)
e(cid:2)∈E(cid:2)
xi(e, e(cid:3)
) ≤ 1 .
∀ e(cid:3) ∈ E(cid:3), e ∈ e(cid:3), d ∈ (e(cid:3) − e) : xi(e, e(cid:3)
) =
(cid:4)
if li(e) > li(d),
1,
0, otherwise .
(1)
(2)
(3)
(4)
(5)
(6)
∀ e(cid:3) ∈ E(cid:3)
: Yi(e(cid:3)
) = 1, if e(cid:3)
can be inferred from other overlay links in P . (7)
∀ e ∈ E, e(cid:3) ∈ E(cid:3)
: Xm(e) ∈ {0, 1}, Xi(e) ∈ {0, 1}, xi(e, e(cid:3)
Ym(e) ∈ {0, 1}, Yi(e) ∈ {0, 1} .
) ∈ {0, 1},
(8)
Constraints (2) to (8) assure the feasibility of the solution. These constraints
can be explained as follows:
(2) This constraint, applied to all overlay links, determines the exact layer at
which each overlay link is to be monitored. If the overlay link is not already
monitored or inferred, then monitor, or infer, all native links it spans. Fur-
thermore, this constraint will ensure that we only monitor or infer, and never
both. This condition also prevents an overlay link from being monitored, if
all its constituent native link measurements are already known.
(3) We enforce the constraint that a native link e is inferred from an overlay link
e(cid:3) only if all other native links in that overlay link are already monitored
or inferred. This insures that the inferred native link can be appropriately
calculated from other link measurements.
Multi-layer Monitoring of Overlay Networks
81
(4) This constraint insures that a native link e is inferred from an overlay link
e(cid:3) only if the overlay link latency is already monitored, or inferred, at the
overlay layer (i.e., Ym(e(cid:3))+Yi(e(cid:3)) = 1) . Furthermore, we place the constraint
that no more than 1 native link can be inferred from each overlay link. This
is typically achieved in an ILP by setting the sum of individual variables
xi(e, e(cid:3)) to be less than or equal to 1.
(5) This is a complex constraint which achieves three sub-goals: (a) Mark a
native link as inferred if it is inferred on any of the overlay links that span
it, (b) Mark a native link as not inferred if it is not inferred on any of the
overlay links that span it, and (c) Insure that a native link is inferred only
from 1 overlay link, so as to reduce wasting resources on performing multiple
inferences. These three constraints ensure that we accurately mark a native
link as inferred.
(6) This constraint is crucial to remove any circular inference, which can happen
if we infer one native link measurement through an arithmetic operation on
the measurement of another. We achieve this by assigning integer inference
levels (denoted by variable li), such that a native link must be inferred only
from other native links that have a lower inference level.
(7) We use this constraint to implement the basis set computation and infer some
overlay link measurements from other known overlay link measurements.
(8) Lastly, we specify the binary constraints for all variables used. This con-
straint makes the problem hard.
We apply the above ILP to any given topology and solve it using the GNU lin-
ear programming kit[3], which uses the branch-and-bound approximation tech-
nique. The optimal solution for a given topology identiﬁes the overlay links that
can be inferred from other native and overlay links, and describes how these
inferences should be done. Using this information, we infer the latency of all
overlay links (M) from available measurements (P) in our database.
4 Examples Using Multi-layer Monitoring
In this section, we present various simulation experiments to demonstrate the
types of results obtainable from our optimization approach and how it is aﬀected
by various network features. Although we only simulate intra-domain topologies,
our model and ILP are equally applicable to multi-domain topologies.
Random Placement. In the ﬁrst experiment we consider ﬁve native link
topologies derived from Rocketfuel [6] data. For each network we generate an
overlay network using approximately 20% the number of nodes in the native
topology as overlay nodes. These nodes are placed randomly among the native
nodes and fully-connected to form the overlay network. In this case, we deﬁne
the cost of monitoring as the total number of native and overlay measurements
needed. We consider the following four monitoring strategies:
– Monitoring all overlay links: The total cost is the cost of monitoring all
N.(N − 1) overlay links, where N is the number of overlay nodes.
82
M. Demirci et al.
– Monitoring all native links: The total cost is the number of distinct native
links spanned by all the overlay links.
– Monitoring a basis set of overlay links: To obtain this solution, we set the
cost of monitoring a native link very high in our ILP so that the solution
selects only overlay links for monitoring.
– Monitoring a combination of native and overlay links: We set the cost of
monitoring a native link equal to the cost of monitoring an overlay link
in the ILP. (From here on, we refer to these costs as unitN ativeCost and
unitOverlayCost, respectively.) The ILP then produces a solution that min-
imizes the total cost, which is the same as minimizing the number of mea-
surements in this case.
Table 2 demonstrates the lowest total monitoring cost that can be achieved
by the above monitoring strategies for each topology. In addition, the cost that
results from monitoring native links and the cost that results from monitoring
overlay links are reported separately for the multi-layer combination strategy
in the last column. In all topologies, monitoring a combination of native and
overlay links provides the lowest-cost option. On average, this lowest cost is 71%