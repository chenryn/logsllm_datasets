**标题：在apt/apt-get中发现远程代码执行漏洞**

**作者：Max Justicz**  
**译者：Nanako@知道创宇404实验室**

### 摘要
我在`apt`工具中发现了一个安全漏洞，该漏洞允许网络中间人攻击者（或恶意软件包镜像）以root权限在安装软件包的机器上执行任意代码。此问题已在最新版本的`apt`中得到修复。如果您担心在更新过程中受到攻击，可以通过禁用HTTP重定向来保护自己。具体操作如下：
```bash
$ sudo apt update -o Acquire::http::AllowRedirect=false
$ sudo apt upgrade -o Acquire::http::AllowRedirect=false
```
如果当前使用的软件包镜像默认使用了重定向，则需要切换到其他镜像或直接下载所需的软件包。有关Debian升级的具体说明，请参阅[此处](https://lists.debian.org/debian-security-announce/2019/msg00010.html)；对于Ubuntu用户，相关信息可在此处找到：[Ubuntu声明](https://usn.ubuntu.com/3863-1/)。

为了验证这一漏洞的存在，我制作了一段针对以下Dockerfile进行攻击的视频演示：
```dockerfile
FROM debian:latest
RUN apt-get update && apt-get install -y cowsay
```

### 背景
当`apt`获取数据时，它会将各种不同的数据传输协议的任务分配给独立的工作进程。父进程通过`stdin/stdout`与这些子进程通信，并使用一种类似HTTP的协议指示它们下载内容并将文件放置到系统中。例如，在运行`apt install cowsay`命令并通过HTTP请求下载相应软件包时，`apt`将调用位于`/usr/lib/apt/methods/http`的程序并返回一条“100 Capabilities”消息：
```plaintext
100 Capabilities
Version: 1.2
Pipeline: true
Send-Config: true
```
接着，父进程发送配置信息并请求特定资源：
```plaintext
601 Configuration
Config-Item: APT::Architecture=amd64
Config-Item: APT::Build-Essential::=build-essential
Config-Item: APT::Install-Recommends=1
(...省略多行...)
600 URI Acquire
URI: http://deb.debian.org/debian/pool/main/c/cowsay/cowsay_3.03+dfsg2-3_all.deb
Filename: /var/cache/apt/archives/partial/cowsay_3.03+dfsg2-3_all.deb
Expected-SHA256: 858d5116a60ba2acef9f30e08c057ab18b1bd6df5ca61c233b6b7492fbf6b831
Expected-MD5Sum: 27967ddb76b2c394a0714480b7072ab3
Expected-Checksum-FileSize: 20070
```
工作进程随后会回复一系列状态消息直至完成下载：
```plaintext
102 Status
URI: http://deb.debian.org/debian/pool/main/c/cowsay/cowsay_3.03+dfsg2-3_all.deb
Message: Connecting to prod.debian.map.fastly.net
102 Status
URI: http://deb.debian.org/debian/pool/main/c/cowsay/cowsay_3.03+dfsg2-3_all.deb
Message: Connecting to prod.debian.map.fastly.net (2a04:4e42:8::204)
102 Status
URI: http://deb.debian.org/debian/pool/main/c/cowsay/cowsay_3.03+dfsg2-3_all.deb
Message: Waiting for headers
200 URI Start
URI: http://deb.debian.org/debian/pool/main/c/cowsay/cowsay_3.03+dfsg2-3_all.deb
Size: 20070
Last-Modified: Tue, 17 Jan 2017 18:05:21 +0000
201 URI Done
URI: http://deb.debian.org/debian/pool/main/c/cowsay/cowsay_3.03+dfsg2-3_all.deb
Filename: /var/cache/apt/archives/partial/cowsay_3.03+dfsg2-3_all.deb
Size: 20070
Last-Modified: Tue, 17 Jan 2017 18:05:21 +0000
MD5-Hash: 27967ddb76b2c394a0714480b7072ab3
MD5Sum-Hash: 27967ddb76b2c394a0714480b7072ab3
SHA256-Hash: 858d5116a60ba2acef9f30e08c057ab18b1bd6df5ca61c233b6b7492fbf6b831
Checksum-FileSize-Hash: 20070
```
当HTTP服务器响应包含重定向时，工作进程返回的是`103 Redirect`而不是`201 URI Done`。基于这个响应，父进程决定下一步请求哪个资源：
```plaintext
103 Redirect
URI: http://deb.debian.org/debian/pool/main/c/cowsay/cowsay_3.03+dfsg2-3_all.deb
New-URI: http://example.com/new-uri
```

### 漏洞细节
不幸的是，负责处理HTTP下载的进程会对`Location`头中的URL进行解码，并直接将其附加到`103 Redirect`响应中：
```cpp
// From methods/basehttp.cc
NextURI = DeQuoteString(Req.Location);
...
Redirect(NextURI);

// From apt-pkg/acquire-method.cc
void pkgAcqMethod::Redirect(const string &NewURI)
{
   std::cout << "Uri " << NewURI << "\n";
}
```
利用这一点，我可以在`201 URI Done`响应中设置`Filename`参数指向敏感文件，如GPG签名文件：
```plaintext
/var/lib/apt/lists/deb.debian.org_debian_dists_stretch_Release.gpg
```

### 关于HTTP与HTTPS的选择争议
默认情况下，Debian和Ubuntu都配置为使用HTTP源（尽管Debian允许用户在安装过程中选择镜像，但并不原生支持HTTPS源——您必须先安装`apt-transport-https`）。有人可能会问，既然软件包清单已经经过数字签名，为什么还需要HTTPS呢？毕竟，考虑到大多数软件包的大小有限，隐私方面的收益微乎其微；而且HTTPS还会限制缓存机制。
确实有一些观点认为在`apt`上下文中使用HTTPS没有必要。然而，本文描述的安全缺陷依然存在。事实上，早在2016年Jann Horn就发现了具有相同影响的另一个漏洞([详情见此链接](https://www.debian.org/security/2016/dsa-3733))。即使采用HTTPS也不能完全防止此类攻击，但如果默认使用HTTPS作为存储库来源，则可以大大降低风险。（假设`apt-transport-https`本身没有严重的安全隐患。我没有对其进行审计，但从表面上看，它似乎只是对libcurl的一个简单封装。）

我认为保留对HTTP的支持是合理的，但我建议将HTTPS设为更安全的默认选项，同时允许用户根据自身需求降低安全性水平。如果服务器默认提供HTTPS服务，那么我无法轻易地利用本文开头提到的Dockerfile示例来进行攻击。

### 结论
感谢`apt`维护团队迅速修复了这个问题，并感谢Debian安全小组协助公开披露该漏洞。此漏洞已正式登记为CVE-2019-3462。