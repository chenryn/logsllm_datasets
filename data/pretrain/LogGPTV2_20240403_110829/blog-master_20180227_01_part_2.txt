#### Oracle 18c  
https://www.oracle.com/pls/topic/lookup?ctx=en/database/oracle/oracle-database/18/newft&id=DWHSG-GUID-BEE5DB77-C00D-46F7-8543-F4EE3356BCE2  
#### PostgreSQL 9.4+ (2014 year+)  
https://www.postgresql.org/docs/10/static/sql-expressions.html#SYNTAX-AGGREGATES  
```  
aggregate_name (expression [ , ... ] [ order_by_clause ] ) [ FILTER ( WHERE filter_clause ) ]  
aggregate_name (ALL expression [ , ... ] [ order_by_clause ] ) [ FILTER ( WHERE filter_clause ) ]  
aggregate_name (DISTINCT expression [ , ... ] [ order_by_clause ] ) [ FILTER ( WHERE filter_clause ) ]  
aggregate_name ( * ) [ FILTER ( WHERE filter_clause ) ]  
aggregate_name ( [ expression [ , ... ] ] ) WITHIN GROUP ( order_by_clause ) [ FILTER ( WHERE filter_clause ) ]  
```  
除了FILTER，PostgreSQL聚合还支持ORDER BY，即输入到聚合函数中的记录可以按顺序进入，从而影响聚合结果。  
PostgreSQL 将开放存储接口、压缩接口，意味着以分析视图为代表的维度组织形式存储将来可以支持。  
https://commitfest.postgresql.org/17/1283/  
https://commitfest.postgresql.org/17/1294/  
### 2 Data Mining  
#### Oracle 18c  
Exponential Smoothing  
Random Forest  
Neural Network  
Explicit Semantic Analysis extension to classification  
https://www.oracle.com/pls/topic/lookup?ctx=en/database/oracle/oracle-database/18/newft&id=DMCON-GUID-EABE920F-1196-49C0-89CD-F25E062E16EF  
#### PostgreSQL 8.4+ (2009 year+)  
PostgreSQL 支持语言接口扩展，例如支持 plpython 存储过程语言。因此社区提供了madlib插件，可以用于在PostgreSQL内部使用plpython函数接口实现机器学习。  
![pic](20180227_01_pic_006.jpg)  
1、madlib  
https://github.com/apache/madlib  
http://madlib.apache.org/index.html  
[《[转载]易上手的数据挖掘、可视化与机器学习工具: Orange介绍》](../201801/20180102_01.md)    
[《一张图看懂MADlib能干什么》](../201511/20151111_01.md)    
[《PostgreSQL 多元线性回归 - 1 MADLib Installed in PostgreSQL 9.2》](../201307/20130731_01.md)    
如果你用的是PostgreSQL 9.6+，则支持并行计算，性能更加。而如果你用的是greenplum（基于PostgreSQL的MPP数据库）那么就可以支持多机并行的机器学习。  
2、可视化分析软件orange3，同样支持python扩展  
![pic](20180227_01_pic_007.jpg)  
https://orange.biolab.si/  
3、流式计算pipeline ，支持流式计算。阅后即焚或insert on conflict实现实时或批量计算。  
![pic](20180227_01_pic_008.jpg)  
[《PostgreSQL APP海量FEED LOG实时质量统计CASE(含percentile_disc)》](../201802/20180205_04.md)    
[《Greenplum roaring bitmap与业务场景 (类阿里云RDS PG varbitx, 应用于海量用户 实时画像和圈选、透视)》](../201801/20180127_01.md)    
[《SQL流式案例 - 旋转门压缩(前后计算相关滑窗处理例子)》](../201801/20180107_01.md)    
[《超时流式处理 - 没有消息流入的数据异常监控》](../201712/20171222_02.md)    
[《阿里云RDS PostgreSQL varbitx实践 - 流式标签 (阅后即焚流式批量计算) - 万亿级，任意标签圈人，毫秒响应》](../201712/20171212_01.md)    
[《多流实时聚合 - 记录级实时快照 - JSON聚合与json全文检索的功能应用》](../201712/20171209_01.md)    
[《人、机客户服务质量 - 实时透视分析 - (多股数据流上下文相关实时分析,窗口保持)》](../201712/20171208_05.md)    
[《PostgreSQL 业务数据质量 实时监控 实践》](../201712/20171208_03.md)    
[《用PostgreSQL 做实时高效 搜索引擎 - 全文检索、模糊查询、正则查询、相似查询、ADHOC查询》](../201712/20171205_02.md)    
[《PostgreSQL手机行业经营分析、决策系统设计 - 实时圈选、透视、估算》](../201711/20171126_01.md)    
[《PostgreSQL 流式统计 - insert on conflict 实现 流式 UV(distinct), min, max, avg, sum, count ...》](../201711/20171123_02.md)    
[《PostgreSQL 异步消息实践 - Feed系统实时监测与响应(如 电商主动服务) - 分钟级到毫秒级的实现》](../201711/20171111_01.md)    
[《HTAP数据库 PostgreSQL 场景与性能测试之 33 - (OLAP) 物联网 - 线性字段区间实时统计》](../201711/20171107_34.md)    
[《HTAP数据库 PostgreSQL 场景与性能测试之 32 - (OLTP) 高吞吐数据进出(堆存、行扫、无需索引) - 阅后即焚(JSON + 函数流式计算)》](../201711/20171107_33.md)    
[《HTAP数据库 PostgreSQL 场景与性能测试之 31 - (OLTP) 高吞吐数据进出(堆存、行扫、无需索引) - 阅后即焚(读写大吞吐并测)》](../201711/20171107_32.md)    
[《HTAP数据库 PostgreSQL 场景与性能测试之 27 - (OLTP) 物联网 - FEED日志, 流式处理 与 阅后即焚 (CTE)》](../201711/20171107_28.md)    
[《泛电网系统 海量实时计算+OLTP+OLAP DB设计 - 阿里云(RDS、HybridDB) for PostgreSQL最佳实践》](../201708/20170826_01.md)    
[《行为、审计日志 (实时索引/实时搜索)建模 - 最佳实践 2》](../201705/20170522_01.md)    
[《(流式、lambda、触发器)实时处理大比拼 - 物联网(IoT)\金融,时序处理最佳实践》](../201705/20170518_01.md)    
[《行为、审计日志 (实时索引/实时搜索)建模 - 最佳实践 1》](../201705/20170516_01.md)    
[《流计算风云再起 - PostgreSQL携PipelineDB力挺IoT》](../201612/20161220_01.md)    
[《在PostgreSQL中实现update | delete limit - CTID扫描实践  (高效阅后即焚)》](../201608/20160827_01.md)    
[《旋转门数据压缩算法在PostgreSQL中的实现 - 流式压缩在物联网、监控、传感器等场景的应用》](../201608/20160813_01.md)    
[《"物联网"流式处理应用 - 用PostgreSQL实时处理(万亿每天)》](../201512/20151215_01.md)    
[《PostgreSQL 流计算指 pipelinedb 实时处理Kafka消息流》](../201510/20151021_02.md)    
[《基于PostgreSQL的流式PipelineDB, 1000万/s实时统计不是梦》](../201510/20151015_01.md)    
4、估值计算hll插件，实现估值计算  
[《PostgreSQL hll (HyperLogLog) extension for "State of The Art Cardinality Estimation Algorithm" - 3》](../201302/20130228_01.md)    
[《PostgreSQL hll (HyperLogLog) extension for "State of The Art Cardinality Estimation Algorithm" - 2》](../201302/20130227_01.md)    
[《PostgreSQL hll (HyperLogLog) extension for "State of The Art Cardinality Estimation Algorithm" - 1》](../201302/20130226_01.md)    
[《[转]流数据库 概率计算概念 - PipelineDB-Probabilistic Data Structures & Algorithms》](../201801/20180116_01.md)    
## 四、General  
### 1 Manual termination of run-away queries  
#### Oracle 18c  
A SQL query consuming excessive resources, including parallel servers, can be terminated using the ALTER SYSTEM CANCEL SQL statement.  
This feature enables the database administrator to terminate a runaway SQL query using a SQL statement. This frees the system resources consumed by the runaway SQL query so that other SQL queries can use them.  
https://www.oracle.com/pls/topic/lookup?ctx=en/database/oracle/oracle-database/18/newft&id=ADMIN-GUID-7D8E5E00-515D-4338-8B86-C2044F6D2957  
#### PostgreSQL 8.0+ (2005 year+)  
Name	|Return Type	|Description  
---|---|---  
pg_cancel_backend(pid int)|	boolean|	Cancel a backend's current query  
pg_terminate_backend(pid int)|	boolean|	Terminate a backend  
重点是runaway sql的检查。这个功能可以结合OS来判定。因为PG是基于进程的模型，只要看进程的资源消耗和统计就可以。可以用cgroup进行统计。  
[《Linux cgroup - memory子系统讲解》](../201701/20170111_02.md)    
[《为什么cgroup blkio不能限制分区》](../201608/20160811_01.md)    
[《Linux cgroup - cpu与cpuset子系统讲解》](../201606/20160613_01.md)    
[《xfs logdev 完美解决cgroup iops限制时ext4 data=writeback才能解决的问题》](../201601/20160107_02.md)    
[《cgroup告诉你如何计算 PostgreSQL 数据库实例用了多少内存》](../201509/20150926_01.md)    
[《PostgreSQL 商用版本EPAS(阿里云ppas) HTAP功能之资源隔离管理 - CPU与刷脏资源组管理》](../201801/20180113_01.md)    
### 2 Inline External Tables  
#### Oracle 18c  
https://www.oracle.com/pls/topic/lookup?ctx=en/database/oracle/oracle-database/18/newft&id=ADMIN-GUID-621E5DDE-36D9-4661-9D14-80DE35858C3F  
#### PostgreSQL 8.4+ (2009 year+)  
PostgreSQL 从8.4开始支持FDW接口，即foreign data wrapper。对目标数据源实现这个接口，就可以访问该数据源。作为PostgreSQL的一张外表来使用。因此在PostgreSQL中访问Oracle的数据是非常轻松的。  
目前可访问的数据源不完全列表如下，包括 “普通数据库，NOSQL，文件，网络服务，大数据服务，搜索引擎，操作系统，对象存储，空间数据库” 等，只要有网络接口的数据源，都可以访问。  
https://wiki.postgresql.org/wiki/Fdw  
- Generic SQL Database Wrappers  
- Specific SQL Database Wrappers  
- NoSQL Database Wrappers  
- File Wrappers  
- Geo Wrappers  
- LDAP Wrappers  
- Generic Web Wrappers  
- Specific Web Wrappers  
- Big Data Wrappers  
- Column-Oriented Wrappers  
- Scientific Wrappers  
- Operating System Wrappers  
- Exotic Wrappers  
- RDS PG OSS 外部表文档：https://help.aliyun.com/knowledge_detail/43352.html  
- HDB PG OSS 外部表文档：https://help.aliyun.com/document_detail/35457.html  
![pic](20180227_01_pic_009.jpg)  
### 3 Approximate Top-N Query Processing  
#### Oracle 18c  
https://www.oracle.com/pls/topic/lookup?ctx=en/database/oracle/oracle-database/18/newft&id=DWHSG-GUID-07B31A40-6AD9-4843-B5B3-D2424ACE39D5  
#### PostgreSQL 9.0+ (2010 year+)  
1、使用hyperloglog插件，PostgreSQL可以实现概率计算，包括count distinct的概率计算。  
https://github.com/citusdata/postgresql-hll  
[《PostgreSQL hll (HyperLogLog) extension for "State of The Art Cardinality Estimation Algorithm" - 3》](../201302/20130228_01.md)    
[《PostgreSQL hll (HyperLogLog) extension for "State of The Art Cardinality Estimation Algorithm" - 2》](../201302/20130227_01.md)    
[《PostgreSQL hll (HyperLogLog) extension for "State of The Art Cardinality Estimation Algorithm" - 1》](../201302/20130226_01.md)    
[《[转]流数据库 概率计算概念 - PipelineDB-Probabilistic Data Structures & Algorithms》](../201801/20180116_01.md)    
2、TOP-N插件   
https://github.com/citusdata/cms_topn  
## 五、Container Database Architecture  
### Container Database Architecture  
#### Oracle 18c  
https://docs.oracle.com/en/database/oracle/oracle-database/18/newft/new-features.html#GUID-028D54E7-DEDB-44FD-9C42-75725032B697  
#### PostgreSQL 8.0+ (2005 year+)  
PostgreSQL设计之初就是PDB模式，即一个实例，多个数据库。围绕数据库，支持多种操作，如：  
1、克隆数据库  
```  
CREATE DATABASE name  
    [ [ WITH ] [ OWNER [=] user_name ]  
           [ TEMPLATE [=] template ]  
           [ ENCODING [=] encoding ]  
           [ LC_COLLATE [=] lc_collate ]  
           [ LC_CTYPE [=] lc_ctype ]  
           [ TABLESPACE [=] tablespace_name ]  
           [ ALLOW_CONNECTIONS [=] allowconn ]  
           [ CONNECTION LIMIT [=] connlimit ]  
           [ IS_TEMPLATE [=] istemplate ] ]  
```  
例如  
```  
create database new_db with template old_db;   
```  
2、DUMP 数据库  
```  
pg_dump。     采用repeatable read隔离级别导出，库级别一致。  
```  
3、IMPORT 数据库  
```  
pg_restore  
```  
4、快照功能，(9.2+  )  
```  
pg_export_snapshot()，支持导出当前快照。  
```  
[《PostgreSQL 9.5 new feature - pg_dump use --snapshot taken by another session (exp. slot, pg_export_snapshot())》](../201506/20150616_02.md)    
[《PostgreSQL 事务快照功能 - Parallel Export consistent data or Parallel Query use snapshot transaction feature》](../201303/20130306_02.md)    
[《PostgreSQL 共享事务快照功能 - PostgreSQL 9.2 can share snapshot between multi transactions》](../201205/20120516_01.md)    