        30.00
        Harry Potter
        J K. Rowling
        2005
        29.99
        Learning XML
        Erik T. Ray
        2003
        39.95
```
实例中的根元素是 ``。文档中的所有 `` 元素都被包含在 `` 中。
`` 元素有 4 个子元素：``、``、``、``。
---
### XML 文档的构建模块
所有的 XML 文档（以及 HTML 文档）均由以下简单的构建模块构成：
- 元素
    元素是 XML 以及 HTML 文档的主要构建模块，元素可包含文本、其他元素或者是空的。
    实例:
    ```xml
    body text in between
    some message in between
    ```
    空的 HTML 元素的例子是 "hr"、"br" 以及 "img"。
- 属性
    属性可提供有关元素的额外信息
    实例：
    ```xml
    ```
- 实体
    实体是用来定义普通文本的变量。实体引用是对实体的引用。
- PCDATA
    PCDATA 的意思是被解析的字符数据（parsed character data）。
    PCDATA 是会被解析器解析的文本。这些文本将被解析器检查实体以及标记。
- CDATA
    CDATA 的意思是字符数据（character data）。
    CDATA 是不会被解析器解析的文本。
---
### 元素
**什么是 XML 元素？**
XML 元素指的是从（且包括）开始标签直到（且包括）结束标签的部分。
一个元素可以包含：
- 其他元素
- 文本
- 属性
- 或混合以上所有...
```xml
        Harry Potter
        J K. Rowling
        2005
        29.99
        Learning XML
        Erik T. Ray
        2003
        39.95
```
在上面的实例中，`` 和 `` 都有元素内容，因为他们包含其他元素。`` 元素也有属性（category="CHILDREN"）。``、``、`` 和 `` 有文本内容，因为他们包含文本。
**XML 命名规则**
XML 元素必须遵循以下命名规则：
- 名称可以包含字母、数字以及其他的字符
- 名称不能以数字或者标点符号开始
- 名称不能以字母 xml（或者 XML、Xml 等等）开始
- 名称不能包含空格
可使用任何名称，没有保留的字词。
**最佳命名习惯**
使名称具有描述性。使用下划线的名称也很不错：``、``。
名称应简短和简单，比如：``，而不是：``。
避免 "-" 字符。如果你按照这样的方式进行命名："first-name"，一些软件会认为你想要从 first 里边减去 name。
避免 "." 字符。如果你按照这样的方式进行命名："first.name"，一些软件会认为 "name" 是对象 "first" 的属性。
避免 ":" 字符。冒号会被转换为命名空间来使用（稍后介绍）。
XML 文档经常有一个对应的数据库，其中的字段会对应 XML 文档中的元素。有一个实用的经验，即使用数据库的命名规则来命名 XML 文档中的元素。
在 XML 中，éòá 等非英语字母是完全合法的，不过需要留意，你的软件供应商不支持这些字符时可能出现的问题。
**XML 元素是可扩展的**
XML 元素是可扩展，以携带更多的信息。
请看下面的 XML 实例：
```xml
    Tove
    Jani
    Don't forget me this weekend!
```
让我们设想一下，我们创建了一个应用程序，可将 ``、`` 以及 `` 元素从 XML 文档中提取出来，并产生以下的输出：
MESSAGE
```
To: Tove
From: Jani
Don't forget me this weekend!
```
想象一下，XML 文档的作者添加的一些额外信息：
```xml
    2008-01-10
    Tove
    Jani
    Reminder
    Don't forget me this weekend!
```
那么这个应用程序会中断或崩溃吗？
不会。这个应用程序仍然可以找到 XML 文档中的 ``、`` 以及 `` 元素，并产生同样的输出。
XML 的优势之一，就是可以在不中断应用程序的情况下进行扩展。
### 属性
XML 元素具有属性，类似 HTML。
属性（Attribute）提供有关元素的额外信息。
**XML 属性**
在 HTML 中，属性提供有关元素的额外信息：
```xml
```
属性通常提供不属于数据组成部分的信息。在下面的实例中，文件类型与数据无关，但是对需要处理这个元素的软件来说却很重要：
```xml
computer.gif
```
**XML 属性必须加引号**
属性值必须被引号包围，不过单引号和双引号均可使用。比如一个人的性别，`person` 元素可以这样写：
```xml
```
或者这样也可以：
```xml
```
如果属性值本身包含双引号，你可以使用单引号，就像这个实例：
```xml
```
或者你可以使用字符实体：
```xml
```
XML 元素 vs. 属性
请看这些实例：
```xml
Anna
Smith
```
```xml
female
Anna
Smith
```
在第一个实例中，sex 是一个属性。在第二个实例中，sex 是一个元素。这两个实例都提供相同的信息。
没有什么规矩可以告诉我们什么时候该使用属性，而什么时候该使用元素。我的经验是在 HTML 中，属性用起来很便利，但是在 XML 中，你应该尽量避免使用属性。如果信息感觉起来很像数据，那么请使用元素。
下面的三个 XML 文档包含完全相同的信息：
第一个实例中使用了 date 属性：
```xml
Tove
Jani
Reminder
Don't forget me this weekend!
```
第二个实例中使用了 date 元素：
```xml
10/01/2008
Tove
Jani
Reminder
Don't forget me this weekend!
```
第三个实例中使用了扩展的 date 元素：
```xml
10
01
2008
Tove
Jani
Reminder
Don't forget me this weekend!
```
**避免 XML 属性？**
因使用属性而引起的一些问题：
- 属性不能包含多个值（元素可以）
- 属性不能包含树结构（元素可以）
- 属性不容易扩展（为未来的变化）
属性难以阅读和维护。请尽量使用元素来描述数据。而仅仅使用属性来提供与数据无关的信息。
不要做这样的蠢事（这不是 XML 应该被使用的方式）：
```xml
```
**针对元数据的 XML 属性**
有时候会向元素分配 ID 引用。这些 ID 索引可用于标识 XML 元素，它起作用的方式与 HTML 中 id 属性是一样的。这个实例向我们演示了这种情况：
```xml
Tove
Jani
Reminder
Don't forget me this weekend!
Jani
Tove
Re: Reminder
I will not
```
上面的 id 属性仅仅是一个标识符，用于标识不同的便签。它并不是便签数据的组成部分。
元数据（有关数据的数据）应当存储为属性，而数据本身应当存储为元素。
---
## 格式验证
拥有正确语法的 XML 被称为"形式良好"的 XML。
通过 DTD 验证的 XML 是"合法"的 XML。
**验证 XML 文档**