T
0 (c1) ∧
T
0 (c1) − x1 ∧
T
0 (c2) + L1c2
0 ≤ x1 ≤ B
T
1 (c1) = B
B
T
1 (c2) = B
B
1 = L1c1
L1c1
0 + x1 ∧
0 L1c2
L1c1
1 =
0 + x1) ∧
(L1c1
1 = L2c1
0 ∧
1 = L2c2
L2c1
L2c2
L1c2
0
0
0 −
predicate t3(·) :=
1 −
T
1 (c2) ∧
0 ≤ x2 ≤ B
T
T
1 (c1) + L2c1
2 (c1) = B
B
T
T
1 (c2) − x2 ∧
2 (c2) = B
B
L1c1
2 = L1c1
1 ∧
L1c2
2 = L1c2
1 ∧
L2c1
1 L2c2
2 =
1 + x2) ∧
(L2c2
2 = L2c2
1 + x2
L2c2
L2c1
1
L1c1
(L1c1
0 L1c2
0 + x1) ∧
0
L2c1
(L2c2
1 L2c2
1 + x2) ∧
1
(16)
TABLE V: After we apply the dependency-based blockchain
state reduction we show in this Table the number of paths
the SMT solver must solve. 32.71% of the blockchain blocks
between 9, 100, 000 and 10, 050, 000 have less than 100 “state
changing” paths, allowing to reduce the SMT computation.
Contract
Uniswap DAI
Bancor ETH
Uniswap UBT
Uniswap MKR
Uniswap SAI
Uniswap BAT
Uniswap KNC
Uniswap DATA
Bancor DATA
Uniswap SNT
Uniswap ANT
Bancor UBT
Bancor ENJ
Uniswap ENJ
Uniswap MANA
Uniswap RLC
Other
Count State change frequency
27.01%
28,464
15.63%
16,466
12.93%
13,623
5,984
5.68%
4.93%
5,195
4.83%
5,090
3.93%
4,141
3.36%
3,546
2.19%
2,309
2,300
2.18%
1.67%
1,759
1.63%
1,714
1.52%
1,602
1.27%
1,337
1,129
1.07%
1.02%
1,073
9,650
9.16%
(17)
Objective encoding:
We use Z to denote the targeted adversarial revenue. Equa-
tion 18 encodes the objective constraints, ensuring that the
adversarial cryptocurrency asset portfolio increases in value.
Note that we rely on search algorithms (cf. Algorithm 2) to
ﬁnd the highest possible Z. The optimization process requires
solving the same SMT problem with different concrete initial-
ization of revenue targets Z (predicate t4).
predicate t4(·) :=
T
T
0 (c1) >= B
2 (c1) + Z ∧
B
T
T
0 (c2) = B
2 (c2)
B
(18)
Free variables and range: Our model only consists of two
free variables (x1, x2) for the simple two action paths. For
a path of arbitrary length n, the corresponding SMT system
consists of n free variables, which are the parameters of each
action. As shown in predicate t2 (cf. Equation 16) and t3 (cf.
Equation 17), the range of free variables are constraint by the
amount of T’s cryptocurrency assets.
SMT problem: By following the above procedures, the state
transition model we presented in Section III is now encoded
as an SMT problem, where we verify if any initialization of
the free variables (x1, x2) satisﬁes the requirement of t1(·) ∧
t2(·) ∧ t3(·) ∧ t4(·).
TABLE VI: State pruning statistics, showing that the Uniswap
DAI contract experiences the highest state change frequency
(27.01% of blocks).
APPENDIX D
Z3 PATH PRUNING
Table VI illustrates the state change frequency of the top
15 most frequently changed DeFi markets we consider in
this work. The Uniswap DAI market is signiﬁcantly more
active than the other markets, with a state change frequency
of 27.01% of the blocks, while the majority (78.72%) of
markets experience a frequency below 2% of the blockchain
blocks. Note that every market is only involved in a subset
of the 600 kept strategies after pruning. For example, only 48
out of the 600 strategies involve the Uniswap DAI market.
APPENDIX E
CONCRETE ENCODING EXAMPLE FOR Z3
In this section, we provide a running example to demon-
strate the encoding process of DEFIPOSER-SMT. The ex-
ample performs an arbitrage at block 9, 680, 000, which ﬁrst
converts ETH to BNT on Bancor and then converts BNT back
to ETH on Uniswap.
16
A. Initial state encoding
The initial state encoding consists of the predicates for both
the trader T’s initial balances, as well as the initial states of
the underlying platforms.
# Objective encoding
S2_Attacker[BNT] == 0,
S2_Attacker[ETH] >= 1001000000000000000000
APPENDIX F
OPTIMIZER FOR THE SMT SOLVER
Algorithm 3 shows how the SMT solver can maximize a
path’s revenue using binary search.
Algorithm 3: Maximize a path’s revenue using SMT
solver and binary search.
Input:
p ← Path
m ← Minimum revenue target
Output: Optimized revenue r
if ¬ isSAT(p, m) then
else
return 0
l ← m
u ← m × 10
end
while isSAT(p, u) do
l ← u
u ← u × 10
end
return binarySearch(p, l, u)
Function isSAT(p, r) : bool is
return (Is the path p SAT for the revenue r)
Function binarySearch(p, l, u) : ﬂoat is
Binary search SAT solution on path p, using the lower
bound l and upper bound u on revenue
return (Maximum SAT revenue)
end
end
APPENDIX G
STATE DEPENDENCY
We visualize the state changes in Figure 15. This ﬁgure pro-
vides an intuition to a trader on how active a particular market
is. An asset changes state if a market listing that asset changes
state (i.e., a trader trades the asset). ETH experiences the most
state changes with over 950, 000 blocks (36.76%). After ETH,
we observe that DAI (14.62%) experiences the most frequent
state changes over the 950, 000 blocks we crawled. POA20
has the lowest number of state changes (0.08%). For a trader
who is not able to position its transactions ﬁrst in a block, the
market activity is relevant because a strategy executed on the
POA20 asset has a higher likelihood to succeed than on an
active DAI market.
APPENDIX H
BZX
Figure 16 shows our attack window analysis of the bZx
attack using DEFIPOSER-SMT.
# Trader’s initial state.
# We assume the trader holds 1000 ETH at the start.
S0_Attacker[BNT] == 0,
S0_Attacker[ETH] == 1000000000000000000000,
# Initial states of the underlying platforms.
S0_Uniswap[BNT]_eth == 135368255883939133529,
S0_Uniswap[BNT]_erc20 == 108143877658121296155075,
S0_Bancor[ETH]_erc20 == 10936591981278719837125,
S0_Bancor[ETH]_erc20_ratio == 500000,
S0_Bancor[ETH]_bnt == 8792249012668956788248921,
S0_Bancor[ETH]_bnt_ratio == 500000,
S0_Bancor[ETH]_fee == 1000,
B. Action encoding
We encode the two transition actions as predicates. P 1 is
the input parameter for action 1 (converts ETH to BNT on
Bancor), and P 2 is the input parameter for action 2 (converts
BNT to ETH on Uniswap).
# converts ETH to BNT on Bancor
P1 > 0,
S1_Bancor[ETH]_bnt > 0,
S1_Attacker[BNT] ==
S0_Attacker[BNT] +
(S0_Bancor[ETH]_bnt*
(1 -
(S0_Bancor[ETH]_erc20/(S0_Bancor[ETH]_erc20 + P1))**
(S0_Bancor[ETH]_erc20_ratio/S0_Bancor[ETH]_bnt_ratio))*
(1000000 - S0_Bancor[ETH]_fee)**2)/
1000000000000,
S1_Attacker[ETH] == S0_Attacker[ETH] - P1,
S1_Uniswap[BNT]_eth == S0_Uniswap[BNT]_eth,
S1_Uniswap[BNT]_erc20 == S0_Uniswap[BNT]_erc20,
S1_Bancor[ETH]_bnt ==
S0_Bancor[ETH]_bnt -
(S0_Bancor[ETH]_bnt*
(1 -
(S0_Bancor[ETH]_erc20/(S0_Bancor[ETH]_erc20 + P1))**
(S0_Bancor[ETH]_erc20_ratio/S0_Bancor[ETH]_bnt_ratio))*
(1000000 - S0_Bancor[ETH]_fee)**2)/
1000000000000,
S1_Bancor[ETH]_bnt_ratio == S0_Bancor[ETH]_bnt_ratio,
S1_Bancor[ETH]_erc20_ratio == S0_Bancor[ETH]_erc20_ratio,
S1_Bancor[ETH]_erc20 == S0_Bancor[ETH]_erc20 + P1,
S1_Bancor[ETH]_fee == S0_Bancor[ETH]_fee,
# converts BNT to ETH on Uniswap
S1_Attacker[BNT] >= P2,
P2 > 0,
S2_Attacker[BNT] == S1_Attacker[BNT] - P2,
S2_Attacker[ETH] ==
S1_Attacker[ETH] +
(997*P2*S1_Uniswap[BNT]_eth)/
(S1_Uniswap[BNT]_erc20*1000 + 997*P2),
S2_Uniswap[BNT]_eth ==
S1_Uniswap[BNT]_eth -
(997*P2*S1_Uniswap[BNT]_eth)/
(S1_Uniswap[BNT]_erc20*1000 + 997*P2),
S2_Uniswap[BNT]_erc20 == S1_Uniswap[BNT]_erc20 + P2,
S2_Bancor[ETH]_bnt == S1_Bancor[ETH]_bnt,
S2_Bancor[ETH]_bnt_ratio == S1_Bancor[ETH]_bnt_ratio,
S2_Bancor[ETH]_erc20_ratio == S1_Bancor[ETH]_erc20_ratio,
S2_Bancor[ETH]_erc20 == S1_Bancor[ETH]_erc20,
S2_Bancor[ETH]_fee == S1_Bancor[ETH]_fee,
C. Objective encoding
In this example, we check if it is possible for the trader T
to realize 1 ETH of revenue following this path.
17
Fig. 15: Timeline analysis of the state changes, over 150 days (950, 000 blocks), where every state change is represented with
a colored tick.
Fig. 16: Attack window analysis of the bZx attack. DEFIPOSER-SMT ﬁnds the ﬁrst attack opportunity at block 9, 069, 000
(December 8th 2019). The opportunity lasted for 69 days, until the opportunity was exploited in block 9, 484, 687 (February
15th 2020). We visualize the difference between the proﬁts from Z3 and concrete validation, along with the success rate
(using block bin sizes of 100) of a Z3 strategy passing concrete validation. Note that the bZx loan interest rate formula is
conservatively simpliﬁed in the encoding process, which explains why the Z3 anticipated revenue is lower than the concrete
execution yield.
18