# SecGraph: A Uniform and Open-source Evaluation System for Graph Data Anonymization and De-anonymization

**Authors:**
- Shouling Ji, Weiqing Li, Georgia Institute of Technology
- Prateek Mittal, Princeton University
- Xin Hu, IBM T. J. Watson Research Center
- Raheem A. Beyah, Georgia Institute of Technology

**Publication:**
- Proceedings of the 24th USENIX Security Symposium
- August 12â€“14, 2015, Washington, D.C.
- ISBN: 978-1-939133-11-3
- [Link to Paper](https://www.usenix.org/conference/usenixsecurity15/technical-sessions/presentation/ji)

## Abstract

In this paper, we analyze and systematize state-of-the-art techniques for graph data privacy and utility. Specifically, we introduce and develop SecGraph, a uniform and open-source system for secure graph data sharing and publishing. SecGraph systematically studies, implements, and evaluates 11 graph data anonymization algorithms, 19 data utility metrics, and 15 modern Structure-based De-Anonymization (SDA) attacks.

To our knowledge, SecGraph is the first system that enables data owners to anonymize data using advanced techniques, measure data utility, and evaluate vulnerability against modern de-anonymization (DA) attacks. Additionally, SecGraph facilitates fair analysis and evaluation of existing and newly developed anonymization and DA techniques. Leveraging SecGraph, we conduct extensive experiments to evaluate existing graph data anonymization and DA techniques. Our results show that:

1. Most anonymization schemes can partially or conditionally preserve most graph utilities while losing some application utility.
2. No DA attack is optimal in all scenarios; performance depends on factors such as similarity between anonymized and auxiliary data, graph density, and DA heuristics.
3. All state-of-the-art anonymization schemes are vulnerable to several or all modern SDA attacks, with the degree of vulnerability depending on the preserved data utility.

## 1. Introduction

Many computing systems generate graph-structured data, such as social networks, collaboration networks, and email networks. Mobility traces, including WiFi, Bluetooth, instant messaging, and check-ins, can also be modeled as graphs. These graph data often contain sensitive private information, making it crucial to protect users' privacy during data transfer, sharing, and publishing.

To protect privacy, various anonymization techniques have been proposed, which can be categorized into six types: Naive ID Removal, Edge Editing (EE) based techniques, k-anonymity based techniques, Aggregation/Class/Cluster based techniques, Differential Privacy (DP) based techniques, and Random Walk (RW) based techniques. These techniques aim to perturb the original graph structure while preserving as much data utility as possible.

Following Narayanan and Shmatikov's work, many new Structure-based De-Anonymization (SDA) attacks have been proposed, categorized into seed-based and seed-free attacks. The goal of these attacks is to de-anonymize users using their uniquely distinguishable structural characteristics.

Despite the availability of sophisticated anonymization techniques and powerful SDA attacks, whether state-of-the-art anonymization techniques can defend against modern SDA attacks remains an open problem. This is due to incomplete evaluations of existing anonymization and DA techniques. Anonymization works typically focus on data utility, while DA works often evaluate attack performance without applying state-of-the-art anonymization techniques.

### Contributions

To address this open problem, we systematically study, implement, and evaluate existing graph data anonymization techniques and DA attacks. Our main contributions are:

1. **SecGraph System**: We design and implement SecGraph, a secure graph data publishing/sharing system. SecGraph allows data owners to anonymize data, measure graph and application utilities, and evaluate vulnerability against modern DA attacks. It provides a uniform platform for researchers to conduct accurate comparative studies and understand the resistance/vulnerability of anonymization techniques, the effectiveness of DA attacks, and the utilities of anonymized data.

2. **Anonymization and Utility Evaluation**: We implement and evaluate 11 state-of-the-art graph data anonymization schemes and 19 graph and application utility metrics. Our results show that most anonymization algorithms can partially or conditionally preserve most graph utilities but lose one or more application utilities.

3. **SDA Attack Analysis**: We summarize and analyze the fundamental properties of existing SDA attacks and implement and evaluate 15 modern SDA attacks on real-world graph datasets. Our results demonstrate that modern SDA attacks are powerful and robust to seed mapping errors, and no attack is optimal in all scenarios. Performance depends on factors such as similarity between anonymized and auxiliary data, graph density, and DA heuristics.

4. **Defense Against SDA Attacks**: We analytically and experimentally evaluate the performance of existing graph data anonymization schemes in defending against modern SDA attacks. We find that existing techniques are vulnerable to SDA attacks, with the degree of vulnerability depending on the preserved data utility.

### Abbreviations

For convenient reference, we summarize the used abbreviations in Table 1.

| Abbreviation | Full Form |
|--------------|-----------|
| SDA          | Structure-based De-Anonymization |
| DA           | De-Anonymization |
| SF           | Seed-Free |
| EE           | Edge Editing |
| DP           | Differential Privacy |
| RW           | Random Walk |
| k-NA         | k-Neighborhood Anonymity |
| k-DA         | k-Degree Anonymity |
| k-auto       | k-automorphism |
| k-iso        | k-isomorphism |
| Deg.         | Degree |
| JD           | Joint Degree |
| ED           | Effective Diameter |
| PL           | Path Length |
| LCC          | Local Clustering Coefficient |
| GCC          | Global Clustering Coefficient |
| CC           | Closeness Centrality |
| BC           | Betweenness Centrality |
| EV           | Eigenvector |
| NC           | Network Constraint |
| NR           | Network Resilience |
| Infe.        | Infectiousness |
| RX           | Role Extraction |
| RE           | Reliable Email |
| IM           | Influence Maximization |
| DV           | Distance Vector |
| CD           | Community Detection |
| SR           | Secure Routing |
| SD           | Sybil Detection |
| RST          | Randomized Spanning Trees |
| RSM          | Recursive Subgraph Matching |
| MINS         | Minimum-sized Influential Node Set |
| ADA          | Adaptive De-Anonymization |
| BDK          | Backstrom et al.'s attacks |
| NS           | Narayanan et al.'s attack |
| NSR          | Narayanan-Shmatikov's attack |
| NKA          | Nilizadeh et al.'s attack |
| PFG          | Pedarsani et al.'s attack |
| YG           | Yartseva-Grossglauser's attack |
| KL           | Korula-Lattanzi's attack |
| JLSB         | Ji et al.'s attack |

### Roadmap

- **Section 2**: Study existing graph data anonymization schemes and their utility performance.
- **Section 3**: Study modern SDA attacks.
- **Section 4**: Analyze the effectiveness of existing anonymization schemes against modern DA attacks.
- **Section 5**: Systematically implement and evaluate SecGraph.
- **Section 6**: Discuss future research directions.
- **Section 7**: Conclude the paper.

## 2. Graph Anonymization

### 2.1 Status Quo

Existing graph data anonymization techniques can be classified into six categories:

1. **Naive ID Removal**: This straightforward method involves removing node IDs. Despite its simplicity and scalability, it is highly vulnerable to SDA attacks.
2. **Edge Editing (EE) based Anonymization**: Techniques like Add/Del and Switch involve adding, deleting, or switching edges to perturb the graph structure.
3. **k-anonymity**: Extensions of k-anonymity to graph data include k-Neighborhood Anonymity (k-NA), k-Degree Anonymity (k-DA), k-automorphism (k-auto), and k-isomorphism (k-iso).
4. **Aggregation/Class/Cluster based Anonymization**: These techniques group users into clusters or classes to protect graph data.
5. **Differential Privacy (DP)**: DP techniques provide strong privacy guarantees and have been applied to graph data to protect edge/link privacy.
6. **Random Walk (RW) based Anonymization**: RW techniques use random walks to perturb the graph structure.

Each category has its strengths and weaknesses, and the choice of technique depends on the specific requirements and constraints of the data and the desired level of privacy and utility.

---

This revised version aims to make the text more clear, coherent, and professional, while maintaining the original content and intent.