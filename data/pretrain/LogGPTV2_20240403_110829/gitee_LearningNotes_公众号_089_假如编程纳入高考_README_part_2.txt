子明沉默了，老师继续说道：“你的代码命名非常不规范，**i,j,k** 横行，而且整体局部不分，前面刚给一个全局变量赋值为 **i**，后面又把 **i** 赋值给另一个局部变量。这样的话很容易出错。“
“可是老师，我每一行都仔细检查的，出错的概率很低的。“
“那好，假设你每行出错的概率是 **1％**，很低了吗，那 **30** 行出错的概率是多少？“
“**26%**。“子明拿出手机快速计算了一下。
“对啊，你每个程序写 **30** 行，就有 **26%** 的概率出错，**100** 分就变成74分了。你高考丢 **26** 分，足以让你跟重点大学失之交臂。马虎是不可避免的，你如果能把出错率降到 **0.1%**，那一道题出错的概率就是 **3%**，你就能提高 **23** 分，如果你能把你的代码写规范，那足以降到0.1%。注意，所有的马虎都是有因可循，一定要找深层原因，而不是把它仅仅归结于马虎！“
子明默不作声，这些他老师从来都没跟他说过，老师只会说：“马虎啊，那下次注意不要马虎不就行了吗？”但他还是会马虎
“代码规范真的很重要，你知道衡水中学的学生怎么练的吗？他们全校写代码用的都是一个规范，学校自己搞了一个做题系统，学生们在这个系统上做题的时候，如果代码不符合规范，会被直接判错，就算是写对了也没用，因此所有学生写的代码都一个样子。当然我不能要求你这样，但是你一定要留心。“
杨老师喝了一口水，又看了一下子明的代码，继续说道：
“然后第三题，我看你已经判断出这道题需要用dijkstra算法了，但是你为什么只写了一个def dijkstra然后就没了？“
“我忘了怎么写了。“
“这个方法其实不难记的，就是建造一个堆，然后每次把权重最小的边抽出来更新，我有一个专门讲这个方法的视频，你把接收器给我，我传给你，你回去好好看看，里面有专门的口诀。“
“好的，谢谢老师！“
“你这两道题都是经过努力可以做出来的，只要做出来，你的成绩就会有飞跃。这些是我一些辅导材料，你回去好好研究一下，以后每周要来定时上课哦。“
子明说完，他妈妈马上跟老师说：“杨老师你看，能不能给我孩子单独开个小灶啊。”
“可以，不过这个是另收钱的，每小时 **5000**。”
“没问题，这个老师您看您什么时候有时间啊。”
“这是我的日程表，子明你来看一下，从这个白色区域选两个小时”
## **2**
回家的路上，子明埋怨妈妈：“妈你这是干什么啊，花这么多钱，两个小时都顶我一个月生活费了，咱家又没那么多钱。”
“再穷也不能穷教育啊，你考上好大学，能给我省好几千万呢，再说你打网游充的钱也有好几万了，你少充点不就补回来了？”
子明不说话，回去之后开始拿出老师给的资料慢慢看，妈妈则在厨房忙活，给儿子做他最爱吃的红烧牛肉。
爸爸每天在公司加班，平时就很晚回家，最近为了不影响儿子备战高考，干脆就住在公司了。
“儿子，考上双一流，爸爸带你去你最想去的环球影城。”爸爸和儿子视频聊天，“爸爸，我们班明明她爸爸要带她去月球呢。”
“去月球要 **20** 亿呢，我一辈子也挣不到这个数啊。”
“爸爸我开玩笑呢，明明她爸爸是大公司老总，咱家能跟她家比嘛。”
“哈哈哈哈，吓死爸爸了！等你有了出息，还想让你带我去呢。”
## **3**
过了一周，子明准时出现在杨老师家里。杨老师很热情招待了他，然后对他进行了辅导。
“这个信息技术高考在我上学的时候并没有，是 **10** 年前刚刚加上的。一开始满分是 **100**，而且只在部分发达省份考，后来因为人口老龄化加剧，青年信息人才越来越紧缺，**2043**年开始上升到了**150**分，并推广到了全国，统一上机考试，时间两个半小时。
首先是 **60** 分的选择题，这个考的就是计算机基础知识，什么 **Windows** 操作啊，什么进制转换呢，我相信你应该没什么问题，这些题目一定要快，必须 **1** 分钟就要一道，**30** 分钟内解决战斗。
然后就是 **6** 道编程题了，每道 **15** 分。
但是高考和比赛的区别是，高考在中间不会告诉你做的对不对，只有考试结束之后才会判分，所以你 **120** 分钟做完，和 **150** 分钟做完，结果是一样的。这就要求你必须非常仔细，一遍就要做对。不要指望着让 **OJ** 帮你调 **BUG**。不过呢，就算你写的不对也没关系，**test case** 和 **test case** 之间是相互独立的，你通过了这个 **test case** 就给这个分，全通过了就是满分。
另外，高考是不限语言的，但是所有语言的 **time limit** 都一样，你用 **python** 当然 **OK**，因为运算时间很充裕，复杂度只要正确就行，但是呢，如果你用 **C++** 可能会有额外的好处，衡水中学在入学时就强制所有学生都用**C++**。
我记得 **2044** 年上海的题目，出题者本来是想要大家用 **O(n log n)** 算法的，但是限时给的太长了，如果你用 **C++** 再加上一些优化，**O(n^2)** 也能拿满分，最后好多人暴力过了。
判卷组本来想缩短时限重判的，结果因为大家已经知道自己成绩，社会反对声浪太大，只好作罢，你看，用 **C++**白捡了10分，还省了大量时间。
所以如果你现在上高二，我会建议你改 **C++**，但是你是高三，所以你可以选择不改。
前两道题，就是一些数组，字符串的题目，考察最基本的前缀，后缀，二分，双指针，哈希表之类的，这些题目，是送分题，一分都不能丢的，而且要 **10** 分钟一道。
中间两道题，一般是二维数组或者图之类的，需要用到各种搜索，**BFS**，**DFS**，或者一些图论基础知识，比如 **union find**，**dijkstra**之类的，这些题目，如果你想要上双一流，也是必须要拿下的，要做到 **20** 分钟一道。
最后两道题要花一个小时完成，第五题容易出奇葩的题目，或者是几个知识点综合起来的综合题，或者需要用到线段树进行优化，甚至可能会出几何和数论。
而第六题，就是臭名昭著的动态规划了。
这两道题，以你目前的水平，是拿不下的，但是你可以从里面抢分，千万不要空着。
注意，你哪怕用最暴力的方法，也能拿到大约 **1/3** 的分数，前面如果再不扣分。你就有 **130** 了，足够你上双一流的。
不过你要是想上清北华五，那就要至少 **140** 分，也就是选择题全对，然后最多有一道题只会做 **small test case**，剩下的都要满分。
而且，动态规划，千万不要畏惧，虽然千变万化，其实也可以分成几大类的，背包问题，树形DP，博弈论.....你现在水平不高，你只要记住，动态规划，就是记忆化的递归，你只要往这方面想，绝大部分题目你都是可以解决的，至少可以拿到大部分分数。
虽然题型分布一般是这样，但是高考也有不按套路出牌的时候，比如去年最后一题是贪心＋最小堆，而动态规划放到了第三题的位置，难倒了一大片。
还有我记得前年某个省，最后一题是概率题，需要用到排列组合，而排列组合需要存储中间结果，取模需要用到数论知识，否则大数据会超时......
虽然中国剩余定理还有欧拉定理什么的是超纲的，会在考试的时候给你写出来，但是掌握了没亏吃，毕竟时间是最宝贵的.....
最后想说，学习算法，最关键的还是多练习，尤其是练习自己的薄弱环节，刷自己的强项题固然很爽，但是没什么效果。
衡水中学的学生，三年下来要做好几千道题，他们每周要搞两次编程比赛，全校大排名，每个班的最高名次和平均名次都会算到教师绩效里。
而且，他们搞出来的那个系统，不仅强制学生把代码写规范，还能通过每个学生的答题情况来分析他们的弱点，专门给每个学生出他们大概率做错的题目，比如一个学生 **binary search** 已经炉火纯青，但是 **DFS** 经常写错，那么系统就会大概率给他出 **DFS** 相关题目，很少出 **binary search**。
要不说那边学生平时用那个系统做题非常痛苦，但最后高考成绩都很高呢！
虽然这些他们老师在课上也说过，但是子明还是听的津津有味，后来老师又给他辅导了几道错题，扩展了很多知识点，两个小时很快过去了，老师把把子明送走，说：“现在努力绝对来得及，千万不要对自己失去信心！只要听我的，把我给你布置的题目刷透，你高考上 **130** 没问题。”
在回家的路上，子明充满了斗志，说道：“不就是区区算法嘛，有什么好怕的，来啊高考！看我6月把你打的落花流水！”
这个时候子明的手机响了，是他的朋友小洋：“小明啊，下周日上午我们一起踢球怎么样，咱们初中同学长庚也加入呢。”
子明又有点心痒痒了，想偷偷去，不告诉妈妈，后来觉得有点不好，就在电话里跟妈妈说了，没想到妈妈爽快答应了“你既然跟我说了，说明你现在还是知道分寸的，踢球没什么不好，可以放松你的大脑，你这次可以去，但是你要用一次周赛前1万名的成绩来回报我。”
“好！”子明高兴的说道。
夕阳下，一个少年坚定地前行着。
完。