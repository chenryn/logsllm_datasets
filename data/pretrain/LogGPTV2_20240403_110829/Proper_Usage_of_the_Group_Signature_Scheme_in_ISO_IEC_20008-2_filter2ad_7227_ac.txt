2
(cid:0)c
(cid:3)
(cid:3)
3 = U (cid:27)
(cid:3)
r (cid:1) T
(cid:3)
3
(cid:0)c
(cid:3)
; R
, and
Step 1. Choose values r
Step 2. Choose (cid:27)
(cid:3)
(cid:3)
x; (cid:27)
(cid:3) 2 Zp uniformly random and compute T
; q
(cid:3)
(cid:3)
(cid:3)
(cid:3)
y; (cid:27)
(cid:14) ; (cid:27)
q ; (cid:27)
r
(cid:14) (cid:1) e(K; Y )
q (cid:1) e(T
(cid:0)(cid:27)
(cid:3)
r (cid:1) T
.
(
2 Zp and c
y (cid:1)
(cid:3)
1 ; G2)(cid:27)
)(cid:0)c
(cid:3)
2 = G(cid:27)
e(G1;G2)
(cid:3)
1 ;Y )
e(T
; R
(cid:3)
(cid:3)
(cid:3)
(cid:3)
R
(cid:3)
4
(cid:0)c
e(K; G2)(cid:27)
(cid:3)
(cid:3)
4 = V (cid:27)
Step 3. If a value ((gpk;fT
(cid:3)
fT
gi2[1;4];fR
gi2[1;4]; m
(cid:3)
(cid:3)
i
(cid:3)
(cid:3)
(cid:3)
(cid:3)
i
i
q ; (cid:27)
(cid:14) ; (cid:27)
x; (cid:27)
c
; (cid:27)
is set to be ?.
(cid:3)
y; (cid:27)
gi2[1;4];fR
(cid:3)
);(cid:1)) is not de(cid:12)ned in the list L, the value ((gpk;
gi2[1;4];
(cid:3)
r ). On the other hand, if such a value is already de(cid:12)ned, the challenge signature
) is added to L and the challenge signature (cid:6)
is set to be (fT
gi2[1;4]; m
); c
(cid:3)
i
(cid:3)
i
(cid:3)
(cid:3)
(cid:3)
[Game 3]: In this game, we modify the way to generate a proof (cid:28) in replying queries for the Open oracle.
More precisely, if there is already the pair ((gpk; Q; T2; T3; R);(cid:1)) in the list L when computing the value
H(gpk; Q; T2; T3; R) in the generation of (cid:28) , the challenger replies ? as the response of the query.
challenger replies for a query (m; (cid:6) = (fTigi2[1;4]; c; (cid:27)x; (cid:27)y; (cid:27)(cid:14); (cid:27)q; (cid:27)r)) as follows. We note that steps
[Game 4]: We further modify the way to generate a proof (cid:28) in replying queries for the Open oracle. The
except for Step 3 are the same as Game 3.
Step 1. If GVf(gpk; m; (cid:6)) = 0, return 0.
Step 2. Compute Q = T2 (cid:1) (T3
no such i, return (0;?).
(cid:0)1 and (cid:12)nd the index i such that reg[i] = Q in the list reg. If there is
1
u )
Step 3. Choose (cid:27)u 2 Zp and d 2 Zp uniformly random, and set R = (Q (cid:1) T2
Step 4. If the value ((gpk; Q; T2; T3; R);(cid:1)) is not de(cid:12)ned in the list L, the value ((gpk; Q; T2; T3; R); d)
is added to L and reply (i; (cid:28) = (d; (cid:27)u)) to the adversary. On the other hand, if such a value is
already de(cid:12)ned, the opening proof (cid:28) is set to be ?.
(cid:3)
[Game 5]: We modify the way to generate a factor T
4 in the challenge signature. More precisely, in
(cid:3)
(cid:3)
(cid:3)
2 = Gxib +r
Game 5, the challenger newly samples a random value r
2 by
(cid:3) 2 Z is a uniform random
(cid:3)
(cid:3)
2
2 = Gxib +r
comparing Game 4 in which he computes T
value.
2 Z and computes T
(cid:3)
4 = V r
where r
; T
(cid:0)1)(cid:27)u (cid:1) T
(cid:3)
4 = Gr
(cid:0)d
3
; T
(cid:3)
(cid:3)
.
[Game 6]: In this game, the key to open signatures is changed from u to v. More precisely, in Game 6,
the challenger sets Q = T2 (cid:1) (T4
(cid:0)1 by comparing Game 5 in which he sets Q = T2 (cid:1) (T3
1
v )
(cid:3)
[Game 7]: We modify the way to generate a factor T
3 in the challenge signature. More precisely, in
(cid:3)
(cid:3)
(cid:3)
2 = Gxib +r
Game 7, the challenger newly samples a random value r
1 by
(cid:3) 2 Z is a uniform random
(cid:3)
(cid:3)
1
2 = Gxib +r
comparing Game 6 in which he computes T
value.
2 Z and computes T
(cid:3)
3 = U r
where r
; T
(cid:3)
3 = Gr
; T
(cid:3)
(cid:0)1.
1
u )
(cid:12)(cid:12)Pr[S0](cid:0)1=2
(cid:3)
(cid:12)(cid:12) (cid:20)∑
6
ℓ=0
(cid:12)(cid:12)+
(cid:12)(cid:12)Pr[Sℓ](cid:0)Pr[Sℓ+1]
(cid:12)(cid:12)Pr[S7](cid:0)1=2
(cid:12)(cid:12)
For the advantage Advanon
(cid:5)FI;A((cid:21)), Advanon
holds. Moreover, the following lemmas hold.
(cid:5)FI;A((cid:21)) =
10
Lemma 4.1. Let qH be the number of A’s random oracle queries. Then, it holds that
qH =p for any PPT A.
(1)
Proof. We de(cid:12)ne the event Bad
ℓ
as follows.
(cid:12)(cid:12)Pr[S0](cid:0) Pr[S1]
(cid:12)(cid:12) (cid:20)
(1)
Bad
ℓ
gi2[1;4]; m
(cid:3)
i
(cid:3)
);(cid:1)) in the list L when
: The event that there is already the pair ((gpk;fT
gi2[1;4];fR
(cid:3)
gi2[1;4]; m
computing the value H(gpk;fT
(cid:3)
i
gi2[1;4];fR
(cid:3)
i
(cid:3)
i
(1)
(1)
) in Game ℓ.
(cid:12)(cid:12) =
0 ] = Pr[S1^:Bad
1 ] (cid:0) Pr[S1 ^ :Bad
(cid:12)(cid:12)Pr[S0 ^ Bad
(1)
1 ]. Therefore, it holds that
(1)
(1)
Game 0 and Game 1 are identical unless the events Bad
:Bad
0
Pr[S1 ^ Bad
(cid:12)(cid:12)Pr[S0](cid:0)Pr[S1]
(cid:12)(cid:12) =
0 ] (cid:0) Pr[S1 ^ Bad
some de(cid:12)ned value (((cid:1);eT1;(cid:1);(cid:1);(cid:1);(cid:1);(cid:1);(cid:1);(cid:1);(cid:1));(cid:1)) in the list L. Since q
(cid:12)(cid:12)Pr[S0] (cid:0) Pr[S1]
(1)
1 ]
(cid:3)
1 holds for
(cid:3) 2 Zp is chosen uniform randomly in
(cid:3) 2 G1 is also uniformly random. Also, the number of values in the list L is
gi2[1;4]; m
);(cid:1)) is already stored in L
at least qH . Therefore, the probability that ((gpk;fT
(cid:3)
(cid:3)
i
1 ] (cid:20) qH =p. Thus, we obtain
when generating the challenge signature is at most qH =p. That is, Pr[Bad
occur. That is, we get Pr[S0 ^
0 ](cid:0)
(cid:12)(cid:12)Pr[S0^Bad
(cid:12)(cid:12) (cid:20) Pr[Bad
occurs, eT1 = T
0 ]+Pr[S0^:Bad
(1)
1 ].
(cid:12)(cid:12) (cid:20) qH =p.
Here, we estimate the probability Pr[Bad
(1)
(1)
1 ]. When the event Bad
1
gi2[1;4];fR
(cid:3)
1 = Aib
(1)
and Bad
1
Game 1, T
(cid:1) K q
(1)
1 ]
(cid:3)
i
(1)
(1)
(1)
(
(cid:3)
(cid:1) c
(cid:0) (cid:14)
(cid:0) q
(cid:1) c
(cid:3)
(cid:3) (cid:1) c
(cid:3)
(cid:0) yib
(cid:0) xib
2 Zp, and set (cid:26)
(cid:3) (cid:1) c
(cid:3)
y =
. Then, the following equations hold:
(cid:3)
x = (cid:27)
(cid:3)
(cid:3)
(cid:14) = (cid:27)
(cid:14)
Proof. For Game 2, we introduce new values (cid:26)
(cid:27)
Lemma 4.2. It holds that Pr[S1] = Pr[S2] for any PPT A.
(cid:3)
(cid:3)
(cid:3)
(cid:3)
(cid:3)
q; (cid:26)
(cid:14); (cid:26)
y; (cid:26)
x; (cid:26)
(cid:0) r
(cid:3)
(cid:3)
r
r = (cid:27)
, and (cid:26)
r
q (cid:1) e(T
(cid:14) (cid:1) e(K; Y )
(cid:0)(cid:27)
(cid:3)
1 ; G2)(cid:27)
(cid:14) (cid:1) e(K; Y )
q (cid:1) e(T1
(cid:3)
(cid:0)(cid:26)
(cid:3)
r (cid:1) (T
(cid:3)
(cid:0)c
(cid:3)
3 = U (cid:27)
3 )
(cid:1) c
(cid:3)
(cid:3) (cid:1) c
(cid:3)
(cid:3)
q = (cid:27)
, (cid:26)
x (cid:1) e(K; G2)(cid:27)
x (cid:1) e(K; G2)(cid:26)
(cid:3)
1 = e(H; G2)(cid:27)
(cid:3)
= e(H; G2)(cid:26)
r (cid:1) (T
(cid:3)
(cid:3)
(cid:3)
= G(cid:26)
2 )
(cid:1) c
(cid:3)
x = xib
(cid:3)
(cid:3)
x; (cid:26)
r. Furthermore, (cid:26)
(cid:3)
y = yib