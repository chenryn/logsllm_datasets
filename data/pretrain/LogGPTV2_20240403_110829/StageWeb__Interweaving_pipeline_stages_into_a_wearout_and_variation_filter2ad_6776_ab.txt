The in­
of an instruction 
number of cycles. 
from 
the bypass network, 
stage and prevent­
but the pipeline 
three fundamental 
1. Global signals 
2. Data forwarding 
3. Performance 
for flush/stall 
are infeasible 
is hard to support 
degradation 
due to crossbar 
switches 
providing 
SNS is the basic building 
block  for 
pipeline 
the SN architec­
microarchitecture 
SNS with all of its microarchitectural  additions 
978-1-4244-7501-8/10/$26.00 ©201 0  IEEE 
1 02 
DSN 2 0 1 0 :  Gupta et al. 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:01:33 UTC from IEEE Xplore.  Restrictions apply. 
201 0  IEEE/IFIP International 
Conference 
on Dependable 
Systems & Networks (DSN) 
Figure 2: The StageNet 
replace 
crossbars (64-bit) 
enable decoupled 
functionality. 
the direct 
Slice  (SNS)  micro-
architecture. 
The original 
pipeline 
is decoupled 
pipeline-la
tch connecti
ons. The shaded blocks inside 
at the stage boundari
es, and narrow-width 
the stages highlight the  structures 
added to 
stream identification 
for each of the challenges 
SN provides 
a  solution 
above. Specifically, 
it proposes 
handling, 
for global control 
listed 
(StreamID) 
pass$) for data forwarding, 
for performance. 
nisms, and some minor ones detailed 
mance of SNS comes within 10% of a baseline 
pipeline 
With the application 
and macro operations 
(Figure 
3). 
bypass cache (By­
of these mecha­
in [9], the perfor­
(MOPs) 
in-order 
2.2 Fault Tolerance 
using SN 
switches, 
a SN multicore 
A network of stages can be grouped together, 
using the 
to form a SN multi core. Figure 4 
out of four SNSs that 
The inherent 
of a logical 
full crossbar 
illustrates 
share a common crossbar 
try of SN allows arbitrary 
grouping 
For instance, 
o are linked with the decode from slice I, to construct 
working pipeline. 
created 
network. 
formation 
at least one pipeline 
issue and execute 
stage of each type. 
stage from slice 
symme­
SNS by 
together 
the fetch, 
a 
SN relies 
on  a fault detection 
mechanism 
to identify 
an active 
The manufac­
at the test time 
However, 
in the field. There 
of permanent 
fail­
solutions 
is required 
reconfiguration. 
to catch failures 
for detection 
can be easily identified 
accordingly. 
broken stages and trigger 
ture time failures 
and SN can be configured 
mechanism 
are two possible 
ures: I) continuous  monitoring 
periodic  testing 
these or use a hybrid approach. 
SN can easily isolate 
around them. Given a pool of stage resources, 
based configuration 
ally optimal 
connection 
from adjacent 
set of logical 
flexibility 
allows it to salvage 
In the presence 
for faults [8]. SN can employ either of 
manager can divide them into a glob­
broken stages by adaptively 
SNSs. In this way, SN's inter­
using sensors [5] or 2) 
healthy 
cores. 
a software 
stages 
routing 
of failures, 
-SNS + StrcmlllD 
-SNS + StreamlD 
+ Bnmss$ DSNS + SIrc3mJl) 
+ BnmssS+ MOPs 
"  6 
.55 
= 
.ii' 
 J 
:; 2 
e :;;1 
z 
Figure 3: Single thread performance 
a baseline 
a factor of four after applying 
modifications. 
in-order core. The performance 
of a SNS normalized 
to 
improves 
by almost 
all proposed micro-architectural 
--;,..--, ·-,I@!!)Sliceo 
-::'--::-;[]7'if] Slice 
Slice 
1 
2 
to 
four failed stages (marked by shading)
, SN 
with four slices 
Figure 4: The SN architecture 
each other. Despite 
is able to salvage 
system throughput. 
approach for reliability 
three working pipelines, 
would lose all working 
Given a similar fault map, a core-disabling 
maintaining 
resources. 
healthy 
interconnected 
2.3 Limitations 
of SN 
First, 
SN scaling. 
challenge. 
SN is limited 
that was used  as 
ways that prevent 
wearout solution 
system. However, 
The SN design is an acceptable 
for a 
in 
it from meeting the many­
SN was designed 
for a 
the SN 
is notorious 
for steep growth in area and de­
as the number of ports is increased 
small scale multicore 
three distinct 
core reliability 
CMP with 4-8 cores, and does not scale well to a large 
number of cores. The crossbar, 
interconnect, 
lay overheads 
therefore 
limits 
on stage failures 
hinges on 
terconnection 
the link and crossbar 
For instance,  a 
SN chip 
will waste all of its working stages if the shared cross­
bar between them develops 
design targets 
tutes only a part of the reliability 
diate concern 
of process 
efficiency 
Second, SN focuses 
and does not investigate 
variation, 
of semiconductor 
failures, 
challenge. 
which consti­
A more imme­
only wearout related 
SN's robustness 
fault tolerance. 
reliability. 
for the industry 
And finally, 
the SN 
products. 
a failure. 
methods for in­
today is the accelerating 
and its impact on the performance­
[15], and 
primarily 
rate 
3 The StageWeb Architecture 
StageWeb (SW) is a scalable 
architecture 
for construct­
pro­
pipeline 
into an adaptive 
the computational 
CMPs. SW interweaves 
the system can react to local failures, 
wearout failures 
The interconnect 
stages 
fabric that is capable 
as well as mitigating 
to be flexible 
is designed 
reconfigur­
ing dependable 
and interconnection 
of withstanding 
cess variation. 
such that 
potential 
ing around them, to maximize 
of the system at all times. Figure 5 shows a graphical 
abstraction 
chitecture. 
consists 
a scalable network 
croarchitecture 
complete 
set of pipeline 
interconnection) 
ical pipeline. 
area of the chip in this figure 
using 
The pipeline 
of a large scale CMP employing 
The processing 
of a grid of pipeline  stages, 
of SW is the same as that of a SNS. Any 
by  a common 
to form a log­
interconnected 
stages (reachable 
can be assembled 
of crossbars 
switches. 
together 
the SW ar­
mi­
978-1-4244-7501-8/ 1 01$26.00 ©201 0  IEEE 
1 03 
DSN 2 0 1 0 :  Gupta et al. 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:01:33 UTC from IEEE Xplore.  Restrictions apply. 
201 0  IEEE/IFIP International 
Conference 
on Dependable 
Systems & Networks (DSN) 
L2 
L2 
L2 
DDDDDDDDDDDD 
D:8§§E! 
§l§l§l§l§l§l§l
§DDDDI 
DDDDDDD
g§DDDI 
 DDDDDDD
0000000  DQQQ::; 
DDDDDDDD 
::: 1.6 J 1.5 
DDDDDDDDDDDD 
NDDDDDDDDDDDD 
1.8 
" 1.7 
. 
• 
00000000
ot::iO 
0000 
•  • 
.; 
E 1.4 
0 1.3 
] 1.2 
, 1.1 
E " 1 
i. 
.... 000000000000 
000000000000 
rnIJ  rnIJ  rnIJ 
- - -
•  •  • 
2  3  4  5  6  7  8  9  10  11 
12 13 14 15 16 17 18 19 20 21 
Island 
size (number 
of slices 
sharing 
stages) 
J 
I 
Figure 5: The SW architecture. 
in form of a grid, surrounded 
chy.  The 
here is an abstract 
number of resources. 
representation 
The pipeline 
stages 
are arranged 
by a conventional 
memory hierar­
inset shows a part of the SW fabric. Note that the figure 
work performed 
by a  fixed size SW sys­
SW island width. The 
results 
are normalized 
provisioned regular 
CMP. These results 
are a theo­
increasing 
Figure 6: Cumulative 
tem with 
to an equally 
retical 
for this experiment. 
and does not specify the actual 
upper bound, as we do not model interconnection 
failures 
The fault-tolerance 
within SW can be divided 
into two 
scala­
However, 
many working 
A naive solution 
between all stages. 
(interconnect 
full connectivity 
The first half is to utilize as 
re­
for the first problem is to pro­
stages on a chip as possible 
And the second half is  to ensure interconnect 
sub-problems. 
pipeline 
bility). 
liability. 
vide a connection 
show later in this section, 
sary between all stages on  a chip to achieve 
solution 
reliability 
problems, 
for the interconnection 
network, 
ration algorithms for 
infrastructure 
nection 
process 
variation. 
The insight 
and faster components 
to operate 
benefits. 
we explore 
interconnection 
configu­
intercon­
by SW to mitigate 
the same. The underlying 
is also leveraged 
(stages), 
at a higher frequency. 
as we will 
is not neces­
here is to segregate 
alternatives 
more pipelines 
reliability 
As a combined 
and present 
to both these 
allowing 
the bulk of 
slower 
3.1  Interweaving  Range 
The reliability  advantages 
of SW stem from the abil­
slices (or pipelines) 
to share their re­
approach 
for scal­
would be to allow full con­
SNS can be formed by combining 
on the chip. However, 
such flexi­
since the bulk of reliability 
benefits 
amongst small groups of stages. 
Thus, a direct 
by sharing 
SN proposal 
is unnecessary, 
with one another. 
original 
ity of neighboring 
sources 
ing the 
nectivity, 
i.e. a logical 
stages from anywhere 
bility 
are garnered 
To verify this claim, we conducted 
fixed number of pipeline 
resources 
together) 
of pipelines 
the cumulative 
interwoven 
tive work metric, 
amount of useful work done by a 
time. Note that the interconnect 
free for the sake of estimating 
throughput 
As evident 
as  defined 
is referred 
at a  range 
of values. 
at a range 
offered by Sw. 
Each fully connected 
group 
to as a SW island. Figure 6 shows 
work done by  a fixed number of slices 
of SW island sizes. The cumula­
in Section 
4.3, measures the 
system in its entire 
fabric here is kept fault 
the upper bound on the 
life­
an experiment 
with a 
interwoven 
(grouped 
returns 
from Figure 6, a significant 
is accomplished 
amount of de­
with just a few slices 
interweaving has 
The reliability 
number of pipelines, 
shar­
diminish 
with 
and beyond 10-12 
impact. 
fect tolerance 
ing their resources. 
the increasing 
This is be­
pipelines, 
cause as a SW island spans more and more slices, 
ation in time to failure 
smaller. 
ibility 
ing stages, 
the vari­
gets smaller 
and 
into the amount of gains that the flex­
can garner in combining 
work­
return with an in-
of the interconnect 
in a diminishing 
of its components 
This factors 
resulting 
a marginal 
is provided 
design can be em­
where 
SW islands, 
between stages within the 
interconnect 
be­
exists 
In this manner, the wiring overhead 
can 
sys­
crease in island width. Thus, 
a two-tier 
the chip into 
ployed for SW by dividing 
a full interconnect 
island and no (or perhaps 
tween islands. 
be explicitly 
tem organizations, 
of the SW architecture. 
managed by examining 
while garnering 
more intelligent 
near-optimal 
limited) 
benefits 
3.2 Interweaving 
Candidates 
of the SW reliability 
immune interconnect). 
together, 
ben­
How­
as seen 
switch might not be a practi­
together 
all 10-12 pipelines 
be­
a failure 
a majority 
a set of 10-12 pipelines 
Interweaving 
in Figure 6, achieves 
efits (assuming 
ever, using a single crossbar 
cal choice for connecting 
cause: 1) the area overhead 
of crossbars 
ically with the number of input/output 
crossbar 
connected 
ical path for the design, 
crossbar 
usability 
is a need to explore 
can reach a wider set of pipelines 
heads in check. 
3) and lastly, 
the pipelines 
wire delay increases 
more intelligent 
together, 
shared by  all 
the 
of all of them. In light of the above reasons, 
of the single 
failure 
can compromise 
there 
that 
interconnections 
scales quadrat­
ports, 2) stage to 
at some point this can become the crit­
with the number of pipelines 
while keeping the over­
interconnection 
that connect n slices. 
Single Crossbars: The simplest 
is  to use full crossbars 
switches 
Here, the value of n is bounded by the  combined 
delay 
of crossbar 
which should not exceed 
a single 
CPU cycle. Note that the interconnection 
network 
in SW constitutes 
timing of individual 
and interconnection, 
pipeline stages. 
stage and does not change the 
a separate 
option 
in this interweaving 
cross­
crossbar 
while 
builds upon the single crossbar 
in­
design, 
to share their re­
adjacent 
a wider number of pipelines 
As the name implies, 
together. 
half of their territories 
Overlapping Crossbars: The overlapping 
terconnect 
enabling 
sources 
bars overlap 
setup. Figure 7(a) illustrates 
ping crossbars 
interconnect, 
ary for the SW islands. 
highlight 
a repetitive 
that these  stages can connect 
using crossbars 
using crossbars 
have a reach of n slices. 
crossbars 
have a fuzzy bound­
The shaded stages in the figure 
here. Note 
to the stages above them 
and to the stages below them 
Xbar 1,4,7, 
Xbar 2,5,8. Thus, overall 
over n slices. 
overlapping 
interconnection 
pattern 
The overlapping 
the deployment 
crossbars 
have 
these stages 
of overlap­
Unlike the single crossbar 
978-1-4244-7501 -8/1 01$26.00 ©201 0  IEEE 
1 44 
DSN 2 0 1 0 :  Gupta et al. 