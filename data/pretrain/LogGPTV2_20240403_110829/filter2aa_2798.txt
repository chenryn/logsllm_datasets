2022/5/26 22:55
2022-5-26-Jhsoft-OA-SQL
file:///C:/Users/ASUS/AppData/Local/Temp/mume2022426-24848-1h4aa2u.w9xa.html
1/4
金和OA C6代码审计
SQL注入
金和版本C6V3.0的n day，年前同事透露了金和OA这个n day，我眼疾手快截了图下来并记了路径。
由于当时还在实习太菜了，未学习C#的代码审计，因此没有深究漏洞成因。这几天整理去年的材料时
发现手上正好有新版的金和OA备份文件，就简单来审计利用链。
漏洞在jhsoft.mobileapp/AndroidSevices/HomeService.asmx/GetHomeInfo方法中，其中HomeService
为Webservice文件
在HomeService的GetHomeInfo方法中，首先stringBuilder新建了字符串常量池
2022/5/26 22:55
2022-5-26-Jhsoft-OA-SQL
file:///C:/Users/ASUS/AppData/Local/Temp/mume2022426-24848-1h4aa2u.w9xa.html
2/4
之后调用GetQuickUserInfo查询userID
再return抽象类ExecProcReDataTable，没有可控参数拼接
回到GetHomeInfo方法，进入quickUserInfo判断条件，由于quickUserInfo数组并不存在PhotoURL参
数，text为空，进入判断MapAndFindFilebyRelativeFilePath方法。
2022/5/26 22:55
2022-5-26-Jhsoft-OA-SQL
file:///C:/Users/ASUS/AppData/Local/Temp/mume2022426-24848-1h4aa2u.w9xa.html
3/4
判断为false，text设为空，释放类quickUserInfo。
text为空进入条件string userSex = GetUserSex(userID);
此处就可以看到userId拼接进了SQL语句中进行处理，造成了SQL注入
string queryString = "select DossValue from dossiervalue a left join 
users b on a.RegCode=b.userid where a.DossierFieldID='3' and 
b.userid='" + userId + "'";
最后它的利用POC是：
2022/5/26 22:55
2022-5-26-Jhsoft-OA-SQL
file:///C:/Users/ASUS/AppData/Local/Temp/mume2022426-24848-1h4aa2u.w9xa.html
4/4
http://XXXX/c6/jhsoft.mobileapp/AndroidSevices/HomeService.asmx/GetHomeInfo?userID=payload