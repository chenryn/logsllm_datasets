金融系统可观测性建设方案研究与实践
1.  背景
随着数字化浪潮的到来，传统企业加快科技转型已成必然趋势，"十四五"规划更明确提出："稳妥发展金融科技，加快金融机构数字化转型"。在央行发布的《金融科技发展规划（2022-2025年）》中，数据要素也被升级成为金融业的生产要素，是金融科技行业和企业发展的核心。
金融行业本身已具备成熟的IT系统，也并不缺乏对自身业务的理解和IT运维监控管理体系。但随着技术不断发展，软件架构从传统的主机模式逐步发展到分布式微服务架构，系统开发、迭代、交付的效率得到大幅提升，其监控和排障却越发困难。当监控要追随IT架构的改变和云原生技术的实践，从单纯运维的视角逐步融入开发与业务部门的视角，则需要具备比传统监控更广泛、更主动的能力，"可观测性"的概念便随之诞生了。
2.  可观测性概念
可观测性即从应用系统中收集尽可能多的遥测数据，以便调查和解决新出现的复杂问题，确保企业能够主动观察系统，在影响客户体验之前解决故障及问题，安全地进行测试并实施优化，从而更好地管理和控制业务风险。
可观测性不仅包含传统监控的能力，更多的是面向业务，强调将业务全过程透明化的理念，以此实现全景监控、智能运维和自修复能力等体系化的服务能力。
可观测性的三大支柱数据：
![](media/image1.tiff){width="5.290277777777778in"
height="3.2944444444444443in"}
-   日志（Logging）：日志展现的是应用运行而产生的事件或者程序在执行的过程中产生的记录，日志可以详细解释系统的运行状态，但是存储和查询需要消耗大量的资源。
-   指标（Metrics）：指标是一种聚合数值，其存储空间小，便于观察系统的状态和趋势，但对于问题定位缺乏细节展示。这个时候使用多维数据结构能增强对于细节的表现力。例如统计一个服务的的成功率、请求量等。
-   链路跟踪（Tracing）：尽管日志记录了各个事件的细节，可在分布式系统中，日志仍旧存在不足之处。日志记录的事件是孤立的，但是在实际的分布式系统中，不同组件中发生的事件往往存在因果关系。链路跟踪解决了这一问题，通过SpanID等标记可重新构造出事件的完整事件链路以及因果关系。技术人员可以借此了解网格内服务的依赖和调用流程，构建整个网格的服务拓扑并分析请求中出现的异常点。
    以上三种形式的组合使用将会产生丰富的可观测数据。可观测性能力的构建在于解决不同种类数据的统一和关联的问题，把之前需要人工比对、过滤的繁琐工作交由程序去处理。即建立统一数据模型，通过统一数据采集，统一数据存储、统一数据分析和处理，从而发现数据价值。
3.  可观测性平台架构设计
    ![](media/image1.jpeg){width="5.39375in" height="3.40625in"}
```{=html}
```
1.  数据采集
    对于日志数据，支持对所有网络设备、安全设备、操作系统、数据库、中间件、业务应用、性能数据、第三方监控系统、告警系统的日志信息采集，支持不同日志格式自动识别解析。
    对于指标数据，通过Rizhiyi
    agent，支持对业务指标、服务指标、接口指标、hosts性能指标、K8s和Docker
    Container性能指标等的采集。
2.  数据融合
    可观测性平台通过对接各类原数据，支持用于自定义格式的Tracing数据以及各类开源软件产品的Tracing数据，通过流式数据技术，形成统一标准的Open
    Tracing数据。
    建立trace数据模型，以实现对链路数据的分析与追踪，并聚合生成Topology模型。
    建立Metrics模型，用于统一来自Trace生成的指标，日志生成的指标或对接第三方指标的数据结构，进一步进行业务、服务、设备的页面的展示和分析。
![](media/image3.jpeg){width="5.230555555555555in"
height="4.227083333333334in"}
3.  数据存储
    数据的存储使用自研搜索引擎Beaver，对三类数据分别建立索引，具备对Tracing、Log
    event以及Metric数据的合理存储。
    ![](media/image4.jpeg){width="5.763194444444444in"
    height="2.2909722222222224in"}
4.  数据分析与展现
    使用低代码编程语言SPL进行数据分析，全面覆盖各种分析需求。采用Flink流计算平台，提供图形化编排流式大数据处理任务的能力。同时支持灵活的扩展统计分析视图，形成各类有效的可观测性视图。
```{=html}
```
4.  应用场景
```{=html}
```
1.  运维监控
    技术人员通过业务-服务-设备-指标的全维度信息概览和详情展示对IT业务运行状况进行查看，从而立体了解IT业务运行状态，并可通过趋势图深入探究业务详情，分析指标趋势和利用接口分析展示服务详情，同时可下钻到关联设备及调用链信息。系统实时监控交易指标、应用程序运行状态，并将异常事件告警通过短信、邮件等方式发送给相关人员。
    ![](media/image5.png){width="5.25625in"
    height="2.8361111111111112in"}
    ![](media/image6.png){width="5.1722222222222225in"
    height="2.902083333333333in"}
2.  ![](media/image7.png){width="6.200077646544182in"
    > height="4.4286942257217845in"}![](media/image8.png){width="3.6432294400699914in"
    > height="1.7692705599300087in"} 链路追踪查询
    链路追踪为分布式应用提供了完整的调用链路还原、调用请求量统计、链路拓扑、应用依赖分析等，帮助技术人员分析和诊断分布式应用架构下的性能瓶颈，提高微服务时代下的开发诊断效率。通过调用链分析可以追踪当前业务系统之间的业务调用链情况，理清业务的复杂逻辑以实现可视化监控。系统应用间的逻辑调用关系。
    通过调用链数据建立从客户端到服务端应用的全景拓扑，实时反应各应用系统间的逻辑拓扑。应用或组件之间的调用以响应时间、吞吐量和错误率三个指标进行标注，直观展示了整个调用链路中最慢的组件，并支持向下钻取完成进一步分析，形成链路明细、性能总览、实时拓扑等监控数据。技术人员可通过多种字段对调用链进行过滤查询，查看耗时并快速跳转至具体日志。
3.  故障根因定位
    平台采用基于事件图的根因分析 RCA 方法
    Groot算法，构建基于事件的实时因果关系图，根据trace、metric等各类数据和知识经验对告警原因进行分析和排序从而完成由变动的指标或独立于指标的事件引起的故障根因分析，支持完成的根因事件如主机cpu使用率超过阈值、服务耗时骤增、服务成功率骤降、进程崩溃、部署更改等。
    ![企业微信截图_b759eaab-a7dd-48d4-98ed-85b3b58cafb3](media/image9.png){width="5.236805555555556in"
    height="4.006944444444445in"}
    系统通过trace数据构建拓扑图，横向表明服务调用关系，纵向表明服务和设备的关系，再利用知识经验和metric数据，内置可能导致异常的根因事件。当业务发生告警时，技术人员先横向分析找出最下游服务节点，分析服务是否正常，再纵向分析找出设备节点，分析设备是否正常。分析完成后自动返回排名前三的根因事件，从而帮助用户快速定位告警产生原因，排除故障。
    ![](media/image10.jpeg){width="5.766666666666667in"
    height="3.120833333333333in"}
```{=html}
```
5.  未来展望
Gartner在2023
年十大战略技术趋势指出，可观测性是当前IT技术发展的热门方向。金融行业对IT系统稳定性和安全性要求较高，同时具备成熟的IT建设与运维管理经验、丰富的数据资源，凭借资金、技术和人才储备优势，一直走在技术革新的前沿，未来必然将更多尝试利用可观测性技术，结合大数据、人工智能等技术，引入更多算法，连接安全、运营等更多应用场景，并进一步降低存储成本，打造可观测性最佳实践。