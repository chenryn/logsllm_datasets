\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\* 1. row
\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*
Slave_IO_State: Waiting for master to send event
Master_Host: 192.168.4.51
Master_User: yaya
Master_Port: 3306
Connect_Retry: 60
Master_Log_File: db51.000002
Read_Master_Log_Pos: 437
Relay_Log_File: db52-relay-bin.000002
Relay_Log_Pos: 315
Relay_Master_Log_File: db51.000002
Slave_IO_Running: Yes
Slave_SQL_Running: Yes
Replicate_Do_DB:
Replicate_Ignore_DB:
Replicate_Do_Table:
Replicate_Ignore_Table:
Replicate_Wild_Do_Table:
Replicate_Wild_Ignore_Table:
Last_Errno: 0
Last_Error:
Skip_Counter: 0
Exec_Master_Log_Pos: 437
Relay_Log_Space: 521
Until_Condition: None
Until_Log_File:
Until_Log_Pos: 0
Master_SSL_Allowed: No
Master_SSL_CA_File:
Master_SSL_CA_Path:
Master_SSL_Cert:
Master_SSL_Cipher:
Master_SSL_Key:
Seconds_Behind_Master: 0
Master_SSL_Verify_Server_Cert: No
Last_IO_Errno: 0
Last_IO_Error:
Last_SQL_Errno: 0
Last_SQL_Error:
Replicate_Ignore_Server_Ids:
Master_Server_Id: 51
Master_UUID: 81a13101-aa66-11e8-ad11-525400019e62
Master_Info_File: /var/lib/mysql/master.info
SQL_Delay: 0
SQL_Remaining_Delay: NULL
Slave_SQL_Running_State: Slave has read all relay log; waiting for more
updates
Master_Retry_Count: 86400
Master_Bind:
Last_IO_Error_Timestamp:
Last_SQL_Error_Timestamp:
Master_SSL_Crl:
Master_SSL_Crlpath:
Retrieved_Gtid_Set:
Executed_Gtid_Set:
Auto_Position: 0
Replicate_Rewrite_DB:
Channel_Name:
Master_TLS_Version:
1 row in set (0.00 sec)
步骤四：配置从服务器192.168.4.53
1）验证主库的授权用户
\[root@db53 \~\]# mysql -h192.168.4.52 -uuser53 -p654321
mysql: \[Warning\] Using a password on the command line interface can be
insecure.
Welcome to the MySQL monitor. Commands end with ; or \\g.
Your MySQL connection id is 7
Server version: 5.7.17-log MySQL Community Server (GPL)
Copyright (c) 2000, 2016, Oracle and/or its affiliates. All rights
reserved.
Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.
Type \'help;\' or \'\\h\' for help. Type \'\\c\' to clear the current
input statement.
mysql\> //验证成功
2）指定server_id
\[mysqld\]
validate_password_policy=0
validate_password_length=6
server_id=53
3）重新启动服务
\[root@db53 \~\]# systemctl restart mysqld
4）管理员登录指定主库信息
\[root@db53 \~\]# mysql -uroot -p123456
mysql\> change master to
-\> master_host=\"192.168.4.52\",
-\> master_user=\"user53\",
-\> master_password=\"654321\",
-\> master_log_file=\" db52.000001\",
-\> master_log_pos=154;
Query OK, 0 rows affected, 2 warnings (0.37 sec)
5）启动slave进程
mysql\> start slave;
Query OK, 0 rows affected (0.04 sec)
6）查看进程状态信息
mysql\> show slave status\\G
\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\* 1. row
\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*
Slave_IO_State: Waiting for master to send event
Master_Host: 192.168.4.52
Master_User: user53
Master_Port: 3306
Connect_Retry: 60
Master_Log_File: db52.000001
Read_Master_Log_Pos: 154
Relay_Log_File: db53-relay-bin.000003
Relay_Log_Pos: 315
Relay_Master_Log_File: db52.000001
Slave_IO_Running: Yes
Slave_SQL_Running: Yes
步骤五：客户端验证配置
1）在主服务器上在主库上授权访问gamedb库的用户
\[root@db51 \~\]# mysql -uroot -p123456
mysql\> grant all on gamedb.\* to dada@\"%\" identified by \"123456\";
Query OK, 0 rows affected, 1 warning (0.03 sec)
2）客户端使用授权用户连接主库，建库、表、插入记录
\[root@room9pc01 \~\]# mysql -h192.168.4.51 -udada -p123456
Welcome to the MariaDB monitor. Commands end with ; or \\g.
Your MySQL connection id is 7
Server version: 5.7.17-log MySQL Community Server (GPL)
Copyright (c) 2000, 2017, Oracle, MariaDB Corporation Ab and others.
Type \'help;\' or \'\\h\' for help. Type \'\\c\' to clear the current
input statement.
MySQL \[(none)\]\> //验证成功
MySQL \[(none)\]\> create database gamedb; //创建测试库
Query OK, 1 row affected (0.04 sec)
MySQL \[(none)\]\> create table gamedb.t1(id int); //在gamedb下创建t1表
Query OK, 0 rows affected (0.17 sec)
MySQL \[(none)\]\> insert into gamedb.t1 values(8888);
//在t1表中插入数值
Query OK, 1 row affected (0.22 sec)
3）客户端使用授权用户连接2台从库时，也可以看到主库上新的库表记录
\[root@room9pc01 \~\]# mysql -h192.168.4.52 -udada -p123456
//验证52主机的状态
Welcome to the MariaDB monitor. Commands end with ; or \\g.
Your MySQL connection id is 10
Server version: 5.7.17-log MySQL Community Server (GPL)
Copyright (c) 2000, 2017, Oracle, MariaDB Corporation Ab and others.
Type \'help;\' or \'\\h\' for help. Type \'\\c\' to clear the current
input statement.
MySQL \[(none)\]\> select \* from gamedb.t1; //查询插入的表格
+\-\-\-\-\--+
\| id \|
+\-\-\-\-\--+
\| 8888 \|
+\-\-\-\-\--+
1 row in set (0.00 sec)
MySQL \[(none)\]\> exit
\[root@room9pc01 \~\]# mysql -h192.168.4.53 -udada -p123456
//验证53主机的状态
Welcome to the MariaDB monitor. Commands end with ; or \\g.
Your MySQL connection id is 6
Server version: 5.7.17 MySQL Community Server (GPL)
Copyright (c) 2000, 2017, Oracle, MariaDB Corporation Ab and others.
Type \'help;\' or \'\\h\' for help. Type \'\\c\' to clear the current
input statement.
MySQL \[(none)\]\> select \* from gamedb.t1;
+\-\-\-\-\--+
\| id \|
+\-\-\-\-\--+
\| 8888 \|
+\-\-\-\-\--+
1 row in set (0.00 sec)
3 配置半同步复制模式
3.1 问题
开启案例1 主库192.168.4.51 半同步复制模式
开启案例1 从库192.168.4.52 半同步复制模式
开启案例1 从库192.168.4.53 半同步复制模式
查看半同步复制模式是否开启
3.2 步骤
实现此案例需要按照如下步骤进行。
步骤一：查看是否允许动态加载模块，
1）查看是否允许动态加载模块默认允许
mysql\> show variables like \'have_dynamic_loading\';
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
\| Variable_name \| Value \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
\| have_dynamic_loading \| YES \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
1 row in set (0.01 sec)
2）命令行加载插件，用户需有SUPER权限
主库上面操作：
mysql\> INSTALL PLUGIN rpl_semi_sync_master SONAME
\'semisync_master.so\';
从库上面操作：
mysql\> INSTALL PLUGIN rpl_semi_sync_slave SONAME \'semisync_slave.so\';
查看系统库下的表，模块是否安装成功：
mysql\> SELECT PLUGIN_NAME, PLUGIN_STATUS FROM
INFORMATION_SCHEMA.PLUGINS WHERE PLUGIN_NAME LIKE \'%semi%\';
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| PLUGIN_NAME \| PLUGIN_STATUS \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| rpl_semi_sync_master \| ACTIVE \|
\| rpl_semi_sync_slave \| ACTIVE \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
2 rows in set (0.00 sec)
3）启用半同步复制，在安装完插件后，半同步复制默认是关闭的
主库上面执行：
mysql\> SET GLOBAL rpl_semi_sync_master_enabled = 1;
Query OK, 0 rows affected (0.00 sec)
从库上面执行：
mysql\> SET GLOBAL rpl_semi_sync_slave_enabled = 1;
Query OK, 0 rows affected (0.00 sec)
查看半同步复制模式是否启用：
mysql\> show variables like \"rpl_semi_sync\_%\_enabled\";
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
\| Variable_name \| Value \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
\| rpl_semi_sync_master_enabled \| ON \|
\| rpl_semi_sync_slave_enabled \| ON \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
2 rows in set (0.00 sec)
4）永久启用半同步复制
主库配置
\[root@master51 \~\]# vim /etc/my.cnf
\[mysqld\]
plugin-load=rpl_semi_sync_master=semisync_master.so
rpl_semi_sync_master_enabled=1
从库配置
\[root@slave52 \~\]# vim /etc/my.cnf
\[mysqld\]
plugin-load=rpl_semi_sync_slave=semisync_slave.so
rpl_semi_sync_slave_enabled=1
在高可用架构下，master和slave需同时启动，以便在切换后能继续使用半同步复制
\[root@master51 \~\]# vim /etc/my.cnf
\[mysqld\]
plugin-load \\
=\"rpl_semi_sync_master=semisync_master.so;rpl_semi_sync_slave=semisync_slave.so\"
rpl-semi-sync-master-enabled = 1
rpl-semi-sync-slave-enabled = 1
# NSD DBA2 DAY02
# 一 MySQL数据读写分离(maxscale)
## 1.1 Mysql数据读写分离介绍:
把客户端访问时的查询(读)请求与存储(写)数据请求分别给不同的数据库服务器处理
查询(读):select 等操作分配给从数据库服务器
存储(写):insert delete update等操作分配给主数据库服务器
MySQL代理进程使用rw-splitting.lua脚本实现读写分离
## 2.2为什么要配置数据读写分离:
## 2.3配置数据读写分离
### 2.3.1拓扑结构
50为客户端 57为代理 51为主服务器 52为从服务器
50访问57,并且57判断的访问类型并相应转发:
如果50访问数据库操作是查询(读):57转发给51
如果50访问数据库操作是存储(写):57转发给52
### 2.3.2配置mysql 主从同步结构
清空至51 52为独立数据库服务器,并取消所有授权用户
### 2.3.3配置数据读写分离服务器57
了解内容:mysql中间件实现数据读写分离功能
mysql中间件软件有:**maxscale mysql-proxy mycat**
准备好maxscale软件包之后,直接安装,没有依赖
作用:提供管理命令 和 配置文件
\[root@room9pc01 \~\]# scp
\'/root/桌面/DBA/数据库/maxscale-2.1.2-1.rhel.7.x86_64.rpm\'