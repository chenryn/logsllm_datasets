title:Dynamix: anonymity on dynamic social structures
author:Abedelaziz Mohaisen and
Yongdae Kim
Dynamix: Anonymity on Dynamic Social Structures
Abedelaziz Mohaisen
Verisign Labs, VA, USA
Yongdae Kim
KAIST, Daejeon, South Korea
ABSTRACT
In this paper we advance communication using social networks in
two directions by considering dynamics of social graphs. First,
we formally deﬁne the problem of routing on dynamic graphs and
show an interesting and intuitive connection between graph dy-
namics and random walks on weighted graphs; graphs in which
weights summarize history of edge dynamics and allow for future
dynamics to be used as weight adjustment. Second, we present sev-
eral measurements of our proposed model on dynamic graphs ex-
tracted from real-world social networks and compare them to static
structures driven from the same graphs. We show several interest-
ing trade-offs and highlight the potential of our model to capture
dynamics, enrich graph structure, and improves the quantitative
sender anonymity when compared to the case of static graphs.
Categories and Subject Descriptors
C.2.0 [Computer Communication Networks]: General – Security
and Protection; C.4 [Performance of Systems]: Design studies
Keywords
Social networks, Anonymity, Dynamics, P2P communication.
1.
INTRODUCTION
Social networks provide rich algorithmic and structural prop-
erties that can be used for building certain classes of application
beneﬁting from these properties. When considered along with the
main characteristic of social networks, trust, the potential of these
networks becomes very promising in solving real-world problems.
For example, social networks have been proposed as a building
block to defend against the Sybil attack [19], to enable routing
in delay tolerant networks[3, 6], and to provide peer-to-peer and
private communication [14, 9, 4]. However, social network-based
systems make certain assumptions towards achieving their goals;
trust among nodes is assumed binary [10], associations are bidi-
rectional [12], and static [14]. For example, insight is brought on
the potential of these designs by experimenting with static social
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
ASIA CCS’13, May 8–10, 2013, Hangzhou, China.
Copyright 2013 ACM 978-1-4503-1767-2/13/05 ...$15.00.
graphs, and by ignoring the dynamic nature of social graphs. Ig-
noring this nature might be due to unavailability of tools to capture
the dynamic nature of social graphs, or the unavailability of mea-
sures to quantify the performance of the proposed designs on such
dynamic social graphs. However, the limited nature of the static so-
cial graphs prohibits us from making a concrete insight of these de-
signs in reality when considered for deployment settings in which
social graphs exhibit a dynamic behavior [7, 15]. Such behavior
greatly alters graphs structure, which is an essential determining
factor of the performance of these designs on social networks.
In this paper we proceed further to understand dynamic social
graphs for another family of applications; anonymous communica-
tion systems [14, 9, 4]. On the one hand, we extend and utilize
earlier ﬁndings in [14] and [4] of using social graphs as mixers for
anonymity. On the other hand, we improve on these results by for-
malizing the use of dynamic social structures for anonymity, and
establishing a relationship between dynamic and weighted graphs.
We show how our new design improves anonymous communica-
tion and stands against possible attacks by empowering a richer
social structure. We validate our model using empirical studies on
two dynamic social structures driven from real-world networks.
The rest of this paper is organized as follows. Preliminaries are
outlined in §2, theoretical formalism is introduced in§3, and results
and discussion in §4. We review the related work in §5, and draw
concluding remarks in §6.
2. PRELIMINARIES
In this section we review preliminaries of the prior literature on
the problem, which are required for understanding the rest of this
paper. This known literature assumes a static graph. Unless oth-
erwise is mentioned, this formalism follows from [14], which is to
the best of our knowledge the ﬁrst work that directly touches upon
the problem (other literature work use the same model [9, 4]).
2.1 System Settings and Application Scenario
The idea of building mixers over social links is very simple. Im
such model, users recruit their social social acquaintance to provide
anonymity to their trafﬁc. In a nutshell, each node (user) forwards
her own trafﬁc to her friends, and friends forward that trafﬁc to
their friends, and so on, for a certain number of hops, say ℓ. The
number of hops ℓ used for forwarding the trafﬁc is a system-wide
parameter, which is determined by the security level desired in the
system. For simplicity, and without losing generality, let n be the
number of users in the system. Accordingly, the anonymity is de-
ﬁned for two parties; the sender and the receiver of trafﬁc. For the
receiver, the anonymity set is n, and the entropy of the probability
distribution for a certain node being the sender is Hs = log2(n).
On the other hand, the anonymity of a sender is determined by
167the probability distribution achieved after the ﬁxed number of hops
used in the system. Let the distribution of the ﬁnal node selected
in a random walk after ℓ hops starting from node vj be πℓ
j , where
ij]1×n, then the anonymity of the sender of the trafﬁc (at
πℓ
j = [πℓ
the last hop in the walk) is Hr, which is given as:
n
Hr = −
πℓ
ij log2 πℓ
ij
Xi=1
Using (1), we deﬁne the anonymity set Aℓ as
Aℓ = 2Hr
(1)
(2)
Every random walk on a graph with certain properties—see §2.3
for details—has a unique bounding or stationary distribution which
captures the maximum achieved entropy.
In the rest of this paper, and to simplify the notation, we omit
the index j, which is understood implicitly. Furthermore, the en-
tropy and anonymity set for the sender vj is obtained from the j−th
column in the matrix P , after ℓ hops (multiplications).
2.2 Threat Model and Design Goals
In this paper we use the classical model of a colluding adversary
with the capability of launching Byzantine attacks against the sys-
tem built on top of social networks [9]. The adversary has the ca-
pability of logging end-to-end information, perform active attacks,
and passive attacks. We also assume that the adversary has a limited
capability of launching a Sybil attack in reality by inserting large
number of Sybil identities [19]. In this work, however, we evaluate
the performance of our system under an ideal setting where there is
no Sybil identities are injected into the system.
As for the design goals, our design aims to provide a scalable and
efﬁcient solution, to provide natural incentives of participation, and
to limit the attackers capabilities.
2.3 Formalization: The Case of Static Graphs
Let G = (V, E) be an undirected and unweighted graph where
|V | = n, |E| = m, V = {v1, v2, . . . , vn}, and eij ∈ E iff
vi ∼ vj ∈ V . We deﬁne A = [aij]n×n as the adjacency matrix of
G where aij = 1 iff eij ∈ E or 0 otherwise. Deﬁne the Markov
chain on the graph G following the transition matrix P which is
deﬁned according to P = [pij]n×n where:
pij =( 1
deg(vi) ,
0
vi ∼ vj
otherwise
(3)
A unique stationary distribution is deﬁned for the Markov chain
over the transition probabilities deﬁned above if the Markov chain
is ergodic—requiring it to be both irreducible and aperiodic [13].
Theorem 1 states such distribution.
THEOREM 1. (Stationary distribution on static graph) For an
undirected and unweighted graph G, the stationary distribution of
the Markov chain deﬁned over G according to transitions in (3) is
the probability vector, given as π = [πi]1×n, where
πi = deg (vi)/2m
(4)
PROOF. The proof is a special case of the weighted graph case
discussed in section 3 and follows from Theorem 2
Using the model in (1) and the distribution in (4), we deﬁne the
maximal (in size) anonymity set following the same model as in (2)
as A∞ = 2H∞
r , where:
H∞
r = −
(
n
Xi=1
deg (vi)
2m
) log2(
deg (vi)
2m
)
(5)
2.4 Lower-bound of Anonymity
In [14] Nagaraja considered the average distribution achieved
after ℓ hops from any potential source in the social graph as the
anonymity achieved of every potential source. While this captures
the average performance in the system, it simply does not show the
worst case scenario observed at the lower-bound of the achieved
anonymity for sender. Here, we revise Nagaraja’s deﬁnition in [14]
and outline a straightforward ﬁx for the measure of the anonymity
provided in a system that uses walks on the social graph.
Without losing generality, let ℓ be a system-wide parameter, which
represents the number of hops from the source to the destination (or
receiver) in the graph, and each node between them is chosen uni-
formly at random from its predecessor. For each source vj (for
1 ≤ j ≤ n), we deﬁne the probability distribution after ℓ hops as
i (vj)]1×n for (1 ≤ i ≤ n). The anonymity achieved
πℓ(vj) = [πℓ
in the system is bounded below by the entropy achieved in the prob-
ability distribution obtained by walking from the worst source in
the graph:
Hr ≥ inf
vj
{−
n
Xi=1
i (vj) log2 πℓ
πℓ
i (vj)}
By extending (2) to the case in (6), we get the following
Aℓ = 2Hr ≥ 2inf vj {− Pn
i=1 πℓ
i (vj ) log2 πℓ
i (vj )}
(6)
(7)
The intuition of this lower bound is very simple, practical, and fol-
lows from the deﬁnition. Technically, this lower bound follows the
classical theoretical trend in security: proving lower bounds of se-
curity (or anonymity as it is the case in hand) would enable us to
guarantee, in the worst time, that our system would perform better
than this bound for every user. On the other hand, considering the
average case for achieved entropy might be very deceiving since
many senders are not likely to achieve this average bound.
3. DYNAMIC GRAPHS FOR ANONYMITY
We extend ﬁndings in the literature on static graphs as mixers
for anonymous communication to the case of the dynamic graphs.
Such dynamic graphs arise naturally in many contexts due to social
churn imposed by node and edge dynamics (joining and leaving
social networks). It is worth noting that this is the ﬁrst work of
its own type to consider extending such results for building anony-
mous communication systems on top of dynamic social graphs.
3.1 Formalization: Dynamic Graphs
The dynamic graph is a simple generalization of the static graph
used in literature. In particular, G = {G(i)} for 1 ≤ i ≤ t is
a dynamic graph over t time periods. Let G(i) = (V (i), E(i))
for 1 ≤ i ≤ t, where |V (i)| = n(i) and |E(i)| = m(i), be
an unweighted and undirected graph (later we extend that to the
weighted graph case). Let V (i) = {v(i)
n(i) } and E(i)
be the set of pairs of vertices v(i)
k in
V (i) are connected to each other. For G(i), we deﬁne A(i) where
A(i) = [a(i)
(the superscription is used as part of the
notation, and does not mean power), where:
2 , . . . , v(i)
k if both nodes v(i)
jk ]n(i)×n(i)
1 , v(i)
and v(i)
-v(i)
j
j
a(i)
jk =(1 v(i)
j ∼ v(i)
0 otherwise
k ∈ G(i)
.
(8)
For the same graph G(i), we deﬁne the transition probability matrix
168a(1)
12
v(1)
1
v(1)
2
a(1)
13
v(1)
3
v(2)
1
v(2)
2
a(2)
23
v(2)
3
a(2)
13
a(3)
12
v(3)
1
v(3)
2
a(3)
23
v(3)
3
a(3)
13
Figure 1: Simple example of dynamic graph.
w(v(i)
1 , v(i)
2 ) is as per the deﬁnition.
jk ]n(i)×n(i)
P(i) such that P(i) = [p(i)
, where:
a(i)
12 =
(3)
1 2
a
(1)
1 2
a
v1
v2
a(2)
13
a(1)
13
a(3)
13
a(
2
)2
3
a(
3
)2
3
v3
p(i)
jk =(1/deg (a(i)
0
jk )
v(i)
j ∼ v(i)
otherwise
k ∈ G(i)
.
(9)
Figure 2: Simple example of converting a dynamic graph into
multigraph by collapsing all images of a node to the node itself.
Extending and generalizing (8) and (9) to the weighted case is
easy if weights are given on edges in the graph. We deﬁne
v2
12 + a(2)
a(1)
12
23 + a(3)
a(2)
23
a(i)
jk =(w(v(i)j, v(i)k)
0
v(i)
j ∼ v(i)
otherwise
k ∈ G(i)
,
(10)
v1
13 + a(2)
a(1)
13 + a(3)
13
v3
where w : E(i) → R is a weight function that assigns real-valued
weights to edges in G(i). Using (10), we deﬁne the degree of a
node to be in terms of weights associated with edges for which that
node is an end-vertex, as
degw (v(i)
j ) =Xk
w(v(i)
j
, v(i)
k ), v(i)
j ∼ v(i)