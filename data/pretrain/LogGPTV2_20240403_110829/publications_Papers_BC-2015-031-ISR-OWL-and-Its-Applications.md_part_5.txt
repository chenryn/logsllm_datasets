After the namespace declaration, an OWL document they correspond to predicates with arity 1. E.g., the
specifies a collection of assertions that are grouped class “Teacher” can be defined as
under an owl:ontology element and offers details about
the ontology: 
• owl:versionInfo: Provides information about 
the current ontology.
• owl:priorVersion: Indicates an earlier version
The rdf:ID element defines the name of the class.
of the current one.
If we want to make reference to a class we use the
• owl:backwardCompatibleWith: Contains a
rdf:resource element. An OWL ontology can repre-
reference to an ontology that is a prior version
sent the hierarchy between classes using the element
of the containing ontology that is backward
owl:subClassOf. E.g., the class “Teacher” is a subclass
compatible with it.
of “Person.” The semantics of this statement is ∀x
• owl:incompatibleWith: Indicates the contain-
Teacher(x) ⇒ Person(x) in FOL.
ing ontology is not backward compatible with
It is possible to establish relations between two class-
the referenced ontology. es, e.g., using owl:equivalentClass and owl:disjointWith
• owl:imports: Only this assertion has a formal elements. The assertion owl:equivalentClass applied
meaning to the ontology and represents a set of to classes A and B, represents that class A has the
same individuals as class B. E.g., the class “faculty” 
is equivalent to the “academicStaffMember” class: 
The owl:disjointWith element applied on two
classes A and B specifies that class A and B are disjoint,
i.e., classes A and B have no member in common. E.g.,
a “Full Professor” cannot be an “Associate Professor” Individuals of the new class created above are
at the same time. those that are members of both the classes “faculty”
and the anonymous class created by the restriction on
 the property “belongsTo.”
 The owl:complement element selects all individuals
 from the domain that do not belong to a certain class:
Another way to create (more complex) classes in
OWL is to combine simple classes using Boolean
operators (union, intersection, and complement). The
owl:unionOf element applied on classes A and B cre-
The class “course” above has as its members all in-
ates a new class that contains all members from class
dividuals that do not belong to the ”staffMember” class.
A and B. For example, the combination of the class
“staff members” and the class “student” creates the
new class “peopleAtUni.”