directly dependent on the weights that have been set for the re-computation of the QoS
dimensions (see Table 5 for the weights used in the DNA Sequencing workflow). A
higher weight associated with the multi-workflow function implies a faster approximation
when the SWR algorithm is applied. The same principal applies to the instance workflow
function.
9 Related Work
While a significant amount of QoS research has been done in the areas of networking
(Cruz 1995; Georgiadis, Guerin et al. 1996), real-time applications (Clark, Shenker et al.
1992) and middleware (Zinky, Bakken et al. 1997; Frolund and Koistinen 1998;
Hiltunen, Schlichting et al. 2000), the work found in the literature on quality of service
for WfMS is limited. The Crossflow project (Klingemann, Wäsch et al. 1999; Damen,
Derks et al. 2000; Grefen, Aberer et al. 2000) has made a major contribution. In their
approach, the information about past workflow executions is collected in a log. From this
information, a continuous-time Markov chain (CTMC) is derived and used to
subsequently calculate the time and the cost associated with workflow executions. An
estimation component provides QoS predictions of running workflow instances. These
estimates are based on performance models given as CTMC models and produced by the
offline monitoring component, which analyzes past executions of workflows, and on the
online monitoring component. Compared to the Crossflow project, our approach includes
reliability as part of the QoS model. Our model allows for the computation of workflow
QoS using two distinct methods: a mathematical and a simulation approach. When the
mathematical approach is used, there is no need to define distribution functions. This
makes its use simple for business analysts and domain experts. The simulation approach
allows the association of distributions with workflow activities (Chandrasekaran, Silver
et al. 2002). Not only exponential functions can be employed, as with the Crossflow, but
any distribution made available by the simulation system can be used.
While the research on QoS for WfMS is limited, the research on time management,
which is under the umbrella of workflow QoS, has been more active and productive.
Gillmann et al., (Gillmann, Weissenfels et al. 2000; Gillmann, Weikum et al. 2002)
present a tool for the configuration of distributed workflow systems in order to meet
specified goals for throughput, response time, availability, and performability. Their
approach is based on continuous-time Markov chains and Markov reward models to
predict the performance, availability, and performability of a WfMS under a given load.
The performance model estimates the throughput of workflow instances and the waiting
time for service requests. The availability model estimates the downtime of the a WfMS
given the failure and restart rates for the various components. The performability model
predicts the performance taking into account temporarily non-available servers. The use
of Markov models makes this approach very similar with the Crossflow system.
Eder et al. (1999) and Pozewaunig et al. (1997) present an extension of CMP and
PERT frameworks by annotating workflow graphs with time, in order to check the
validity of time constraints at process build-time and instantiation-time, and to take pre-
emptive actions at run-time. Their approach is only applicable to directed acyclic graphs
34
(DAG). While DAGs can be extended with a special construct that formally maintains the
overall structure of a graph to support loops, this has not been contemplated. This is a
significant limitation since many of workflows have cyclic graphs. Cycles are, in general,
used to represent re-work actions or repetitive activities within a workflow. Our approach
deals with acyclic workflows as well as with cyclic workflows.
Researchers at Ulm (Reichert and Dadam 1998; Dadam, Reichert et al. 2000) also
recognize that time is an important aspect of workflow execution. The ADEPT project
includes the modeling of real-time deadline constraints and the consequences of missing
deadlines in the case of structural changes of a workflow instance during its execution.
With each workflow task, minimal, and maximal durations may be specified. The system
only supports the specification and monitoring of deadlines. The monitoring system
notifies users when deadlines are going to be missed. There is no provision for the
estimation of QoS metrics. Bauer and Dadam (Bauer and Dadam 2000) also show how a
distributed WfMS can be developed to minimized the communication load of the
components at run time. Their approach uses a cost model and a distribution algorithm to
calculate an appropriate variable server assignment expressions at build time.
Chandra, Gong et al. (2003) use dynamic resource allocation techniques to provide
guarantees to web applications running on shared data centers. The authors use a system
architecture that combines online measurements with prediction and resource allocation
techniques. Their work can be paired with our QoS model and the techniques can be use
to compute, predict, and analyze the time dimensions of Web services and workflow.
Marjanovic and Orlowska (1999) describe a workflow model enriched with modeling
constructs and algorithms for checking the consistency of workflow temporal constraints.
The rules that regulate the time component of a workflow are modeled by a set of
temporal constraints. Three time constraints are specified. A task duration constraint, a
deadline constraint, and an interdependent temporal constraint. This last constraint limits
when a task should start/finish relative to the start/finish of another task. At build time
and at run time the consistency of temporal constraints is verified. Their work mainly
focuses on how to manage workflow changes, while accounting for temporal constraints,
and do not target the prediction of workflows execution duration.
Other researchers have also identified the need for a QoS process model. A good
example is the DAML-S specification (Ankolekar, Burstein et al. 2001; DAML-S 2001),
which semantically describes business processes (as in the composition of Web services).
The use of semantic information facilitates process interoperability between trading
partners involved in e-commerce activities. This specification includes constructs which
specify quality of service parameters, such as quality guarantees, quality rating, and
degree of quality. While DAML-S has identified the importance of Web services and
business processes specifications, the QoS model adopted should be significantly
improved in order to supply a more functional solution for its users. One current
limitation of DAML-S’ QoS model is that it does not provide a detailed set of classes and
properties to represent quality of service metrics. Their QoS model needs to be extended
to allow for a precise characterization of each dimension, and we hope our work can be
one of the inputs in that direction. The addition of semantic concepts, such as minimum,
average, maximum, and the distribution function associated with a dimension, will allow
the implementation of algorithms, for the automatic computation of QoS metrics for
processes based on atomic tasks and sub-processes’ QoS metrics.
35
10 Conclusions
The evaluation of how business is conducted, such as with e-commerce, brings a new set
of challenges and requirements that need to be explored and answered. Many e-
commerce applications are composed of Web services forming workflows. The
composition these workflows cannot be undertaken while ignoring the importance of
QoS measurements. The correct management of such QoS specifications directly impacts
the success of organizations participating in e-commerce and also directly impacts the
success and evolution of e-commerce itself.
In this paper, as a starting point, we show the importance of QoS management for
workflows and WfMSs. We then presente a comprehensive QoS model. This model
allows for the description of workflow components from a QoS perspective; it includes
three dimensions: time, cost, and reliability. The use of QoS increases the added value of
workflow systems to organizations, since non-functional aspects of workflows can be
described. The model is predictive; based on the QoS of workflow components (tasks or
Web services), the QoS of workflows (networks) can be automatically computed. This
feature is important, especially for large processes that in some cases may contain
hundreds of tasks. We present a mathematical model that formally describes the formulae
to compute QoS metrics among workflow tasks. Based on these formulae, we develop an
algorithm (SWR algorithm) to automatically compute the overall QoS of a workflow.
The algorithm applies a set of reduction rules to a workflow, until only one task remains
which represents the QoS for the entire workflow.
Having a theoretical QoS model, we explain how the model was implemented in the
METEOR workflow management system. The objective was to identify the challenges
and difficulties that the implementation of QoS faces. The support of QoS management
requires the modification and extension of most of workflow system components. This
includes the enactment system, the workflow builder (or designer), the monitor, the code
generator, the repository, the workflow model, and the task model. Additionally, new
components need to be implemented, such as a QoS estimator module to create QoS
estimates for tasks and probabilities for transitions. The monitor needs an additional
interface so that runtime tasks QoS metrics are propagated and logged into a database for
data processing purposes.
To test the validity of the QoS model, the SWR algorithm, and the QoS
implementation we have deployed a set of production workflows in the area of genetics at
the Fungal Genome Resource laboratory. We executed workflow instances based on real
data and the generated QoS data have been collected and analyzed. We have use these
settings to collect data points and validate them with the help of scientists but the process
itself was not made operational. The analysis of the data indicates that the QoS model and
algorithm presented give a suitable framework to predict and analyze the QoS of
production workflows.
11 References
Aalst, W. M. P. v. d. (1999). Generic Workflow Models: How to Handle Dynamic Change and
Capture Management Information. Proceedings of the Fourth IFCIS International
36
Conference on Cooperative Information Systems (CoopIS'99), Edinburgh, Scotland,
IEEE Computer Society Press. pp. 115-126.
Aalst, W. M. P. v. d., A. P. Barros, et al. (2000). Advanced Workflow Patterns. Seventh IFCIS
International Conference on Cooperative Information Systems. pp. 18-29.
Altschul, S. F., W. Gish, et al. (1990). "Basic local alignment search tool." Journal of Molecular
Biology 215: 403-410.
Ankolekar, A., M. Burstein, et al. (2001). DAML-S: Semantic Markup for Web Services.
Proceedings of the International Semantic Web Working Symposium (SWWS), Stanford
University, California. pp. 39-54.
Anyanwu, K., A. Sheth, et al. (2003). "Healthcare Enterprise Process Development and
Integration." Journal of Research and Practice in Information Technology, Special Issue
in Health Knowledge Management 35(2): 83-98.
Bauer, T. and P. Dadam (2000). Efficient Distributed Workflow Management Based on Variable
Server Assignments. Advanced Information Systems Engineering, 12th International
Conference CAiSE 2000, Stockholm, Sweden. pp. 94-109.
Bussler, C. (2003). B2B Integration: Concepts and Architecture, Springer-Verlag.
CAPA (1997). Course Approval Process Automation (CAPA). Athens, GA., LSDIS Lab,
Department of Computer Science, University of Georgia.
Cardoso, J. (2002). Quality of Service and Semantic Composition of Workflows. Department of
Computer Science. Athens, GA, University of Georgia: 215.
Cardoso, J. (2002). Stochastic Workflow Reduction Algorithm, LSDIS Lab, Department of
Computer Science, University of Georgia.
http://lsdis.cs.uga.edu/proj/meteor/QoS/SWR_Algorithm.htm
Cardoso, J. and A. Sheth (2003). "Semantic e-Workflow Composition." Journal of Intelligent
Information Systems (JIIS). 21(3): 191-225.
Chandra, A., W. Gong, et al. (2003). Dynamic Resource Allocation for Shared Data Centers
Using Online Measurements. Proceedings of the Eleventh International Workshop on
Quality of Service (IWQoS 2003), Berkeley, Monterey, CA, Springer. pp. 381-400.
Chandrasekaran, S., G. Silver, et al. (2002). Service Technologies and their Synergy with
Simulation. Proceedings of the 2002 Winter Simulation Conference (WSC'02), San
Diego, California. pp. 606-615.
Chen, Q., U. Dayal, et al. (2000). Dynamic-Agents, Workflow and XML for E-Commerce
Automation. EC-Web. pp. 314-323.
Chung, L., B. Nixon, et al. (2000). Non-Functional Requirements in Software Engineering,
Kluwer Academic Publishers.
Clark, D., S. Shenker, et al. (1992). Supporting Real-Time Applications in an Integrated Services
Packet Network: Architecture and Mechanism. Proceedings of ACM SIGCOMM. pp. 14-
26.
Cruz, R. L. (1995). "Quality of service guarantees in virtual circuit switched networks." IEEE J.
Select. Areas Commun. 13(6): 1048-1056.
Dadam, P., M. Reichert, et al. (2000). Clinical Workflows: the Killer Application for Process
Oriented Information Systems. 4th International Conference on Business Information
Systems (BIS 2000), Poznan, Poland. pp. 36-59.
37
Damen, Z., W. Derks, et al. (2000). Business-to-business E-Commerce in a Logistics Domain.
The CAiSE*00 Workshop on Infrastructures for Dynamic Business-to-Business Service
Outsourcing, Stockholm, Sweden.
DAML-S (2001). Technical Overview - a white paper describing the key elements of DAML-S.
Eder, J. and W. Liebhart (1996). Workflow Recovery. IFCIS Conference on Cooperative
Information Systems, Brussels, Belgium. pp. 124-134.
Eder, J., E. Panagos, et al. (1999). Time Management in Workflow Systems. BIS'99 3rd
International Conference on Business Information Systems, Poznan, Poland, Springer
Verlag. pp. 265-280.
Fabio Casati, Ming-Chien Shan, et al. (2001). "E-Services - Guest editorial." The VLDB Journal
10(1): 1.
Fensel, D. and C. Bussler (2002). The Web Service Modeling Framework, Vrije Universiteit
Amsterdam (VU) and Oracle Corporation.http://www.cs.vu.nl/~dieter/ftp/paper/wsmf.pdf
FGR (2002). Fungal Genome Resource laboratory, http://gene.genetics.uga.edu/
Frolund, S. and J. Koistinen (1998). "Quality-of-Service Specification in Distributed Object
Systems." Distributed Systems Engineering Journal 5(4): 179-202.
Georgiadis, L., R. Guerin, et al. (1996). "Efficient Network QoS Provisioning Based on Per Node
Traffic Shaping." IEEE ACM Transactions on Networking 4(4): 482-501.
Gillmann, M., G. Weikum, et al. (2002). Workflow Management with Service Quality
Guarantees. ACM SIGMOD'2002 International Conference on Management of Data,
Madison, Wisconsin.
Gillmann, M., J. Weissenfels, et al. (2000). Performance and Availability Assessment for the
Configuration of Distributed Workflow Management Systems. International Conference
on Extending Database Technology (EDBT), Konstanz, Germany.
Grefen, P., K. Aberer, et al. (2000). "CrossFlow: Cross-Organizational Workflow Management in
Dynamic Virtual Enterprises." International Journal of Computer Systems Science &
Engineering 15(5): 227-290.
Hall, R. D., J. A. Miller, et al. (2003). Using Workflow to Build an Information Management
System for a Geographically Distributed Genome Sequence Initiative. Genomics of
Plants and Fungi. Eds. R. A. Prade and H. J. Bohnert. New York, NY, Marcel Dekker,
Inc.: 359-371.
Hiltunen, M. A., R. D. Schlichting, et al. (2000). Survivability through Customization and
Adaptability: The Cactus Approach. DARPA Information Survivability Conference and
Exposition (DISCEX 2000). pp. 294-307.
Hoyland, A. and M. Rausand (1994). System Reliability Theory: Models and Statistical Methods,
Wiley, John & Sons, Incorporated.
Ireson, W. G., C. F. C. Jr., et al. (1996). Handbook of reliability engineering and management.
New York, McGraw Hill.
Kang, M. H., J. N. Froscher, et al. (1999). A Multilevel Secure Workflow Management System.
Proceedings of the 11th Conference on Advanced Information Systems Engineering,
Heidelberg, Germany, Springer-Verlag. pp. 271-285.
38
Kang, M. H., J. S. Park, et al. (2001). Access Control Mechanisms for Inter-organizational
Workflows. Proceedings of 6th ACM Symposium on Access Control Models and
Technologies, Chantilly, VA.
Klingemann, J., J. Wäsch, et al. (1999). Deriving Service Models in Cross-Organizational
Workflows. Proceedings of RIDE - Information Technology for Virtual Enterprises
(RIDE-VE '99), Sydney, Australia. pp. 100-107.
Kobielus, J. G. (1997). Workflow Strategies, IDG Books Worldwide.
Kochut, K., A. P. Sheth, et al. (1999). "Optimizing Workflow." Component Strategies 1(9): 45-
57.
Kochut, K. J. (1999). METEOR Model version 3. Athens, GA, Large Scale Distributed
Information Systems Lab, Department of Computer Science, University of Georgia.
Kochut, K. J., A. P. Sheth, et al. (1999). ORBWork: A CORBA-Based Fully Distributed,
Scalable and Dynamic Workflow Enactment Service for METEOR. Athens, GA,
Technical Report, UGA-CS-TR-98-006, LSDIS Lab, Department of Computer Science,
University of Georgia, 1998.
Krishnakumar, N. and A. P. Sheth (1995). "Managing Heterogeneous Multi-system Tasks to
Support Enterprise-wide Operations." Distributed and Parallel Databases Journal 3(2):
155-186.
Leymann, F. (2001). Web Services Flow Language (WSFL 1.0), IBM Corporation. http://www-
4.ibm.com/software/solutions/webservices/pdf/WSFL.pdf
Luo, Z., A. P. Sheth, K. J. Kochut, and I.B. Arpinar (2003): Exception Handling for Conflict
Resolution in Cross-Organizational Workflows. Distributed and Parallel Databases 13(3):
271-306.
Marjanovic, O. and M. Orlowska (1999). "On modeling and verification of temporal constraints
in production workflows." Knowledge and Information Systems 1(2): 157-192.
McCready, S. (1992). There is more than one kind of workflow software. Computerworld.
November 2: 86-90.
METEOR (2002). METEOR (Managing End-To-End OpeRations) Project Home Page, LSDIS
Lab. http://lsdis.cs.uga.edu/proj/meteor/meteor.html
Miller, J. A., J. S. Cardoso, et al. (2002). Using Simulation to Facilitate Effective Workflow
Adaptation. Proceedings of the 35th Annual Simulation Symposium (ANSS'02), San
Diego, California. pp. 177-181.
Miller, J. A., D. Palaniswami, et al. (1998). "WebWork: METEOR2's Web-based Workflow
Management System." Journal of Intelligence Information Management Systems:
Integrating Artificial Intelligence and Database Technologies (JIIS) 10(2): 185-215.
Musa, J. D. (1993). "Operational Profiles in Software-Reliability Engineering." IEEE Software
10(2): 14-32.
Musa, J. D. (1999). Software reliability engineering: more reliable software, faster development
and testing. New York, McGraw-Hill.
Nelson, E. C. (1973). A Statistical Basis for Software Reliability, TRW Software Series.
Pearson, W. R. and D. J. Lipman (1988). Improved tools for biological sequence comparison.
Proceedings of the National Academy of Science of the USA. pp. 2444-2448.
39
Pozewaunig, H., J. Eder, et al. (1997). ePERT: Extending PERT for workflow management
systems. First European Symposium in Advances in Databases and Information Systems
(ADBIS), St. Petersburg, Russia. pp. 217-224.
Reichert, M. and P. Dadam (1998). "ADEPTflex - Supporting Dynamic Changes of Workflows
Without Losing Control." Journal of Intelligent Information Systems - Special Issue on
Workflow Managament 10(2): 93-129.
Rommel, G. (1995). Simplicity wins: how Germany's mid-sized industrial companies succeed.
Boston, Mass, Harvard Business School Press.
Sadiq, W. and M. E. Orlowska (1999). Applying Graph Reduction Techniques for Identifying
Structural Conflicts in Process Models. Proceedings of the 11th International Conference
on Advanced Information Systems Engineering (CAiSE '99), Lecture Notes in Computer
Science, Springer-Verlag, Berlin. pp. 195--209.
Shegalov, G., M. Gillmann, et al. (2001). "XML-enabled workflow management for e-services
across heterogeneous platforms." The VLDB Journal 10(1): 91-103.
Stalk, G. and T. M. Hout (1990). Competing against time: how timebased competition is
reshaping global markets. New York, Free Press.
Zinky, J., D. Bakken, et al. (1997). "Architectural Support for Quality of Service for CORBA
Objects." Theory and Practice of Object Systems 3(1): 1-20.
40