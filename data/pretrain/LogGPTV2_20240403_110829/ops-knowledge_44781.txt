User: 如何使用Docker容器管理工具来管理多个Docker容器？请提供示例命令和相关应用场景。
Assistant: Docker容器管理工具包括Docker Compose、Kubernetes和Swarm等。其中Docker Compose是最常用的管理工具之一，它能够简化多个容器的部署和管理。

下面是使用Docker Compose来管理多个Docker容器的示例命令和应用场景：

1. 示例命令

在使用Docker Compose管理容器之前，需要在项目根目录下创建一个docker-compose.yml文件，并按照需要编写该文件。

例如，下面是一个简单的docker-compose.yml文件，其中包含了一个web服务和一个数据库服务：

```
version: '3'

services:
  db:
    image: mysql:5.7
    environment:
      MYSQL_DATABASE: test_db
      MYSQL_ROOT_PASSWORD: root_pwd
    
  web:
    image: nginx:latest
    ports:
      - "8080:80"
    volumes:
      - ./webapp:/usr/share/nginx/html
    depends_on:
      - db
```

在该docker-compose.yml文件所在的目录下，可以使用以下命令来启动和管理容器：

```
# 启动容器
docker-compose up

# 后台启动容器
docker-compose up -d

# 查看容器状态
docker-compose ps

# 停止容器
docker-compose down
```

2. 应用场景

使用Docker Compose进行容器管理的应用场景包括：

- Web应用程序：使用Docker Compose来同时启动和管理Web应用程序所需的多个容器，例如Web服务器、数据库、缓存等。
- 测试环境：使用Docker Compose来创建和管理测试环境，以便在测试中快速部署多个容器。
- 开发环境：使用Docker Compose来创建和管理开发环境，以便在开发中快速部署所需的多个容器。