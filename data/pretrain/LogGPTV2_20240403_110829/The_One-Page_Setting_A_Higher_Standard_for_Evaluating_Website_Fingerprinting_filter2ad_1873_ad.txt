0.54
𝑃 = 20
0.99
0.93
0.93
0.66
0.78
0.37
𝑃 = 100
𝑃 = 500
0.98
0.81
0.82
0.41
0.59
0.17
0.96
0.6
0.63
0.24
0.44
0.14
It is worth noting two interesting aspects of this scenario. First,
the base rate is not relevant insofar as it does not change the total
number of candidate traces. Unlike the previous scenarios, a client
cannot protect herself by lowering her base rate; she can only be
protected by other users who are also visiting web pages at the
same time (and possibly location). Second, the one-page setting is
a natural fit for the linking scenario, as there is no motivation for
the attacker to link any other pages.
Let the number of potential candidate traces be 𝑃, among which
one is the true sensitive access. If one or more traces are classified as
a sensitive page visit, the attacker links the highest-confidence clas-
sification with the visit. If all traces are classified as non-sensitive,
the attacker links the lowest-confidence non-sensitive classification
instead. The success of the attacker is dependent on the quality of
the classifier’s confidence ratings.
Analysis
We set up the experiment by randomly choosing one sensitive
trace and 𝑃 − 1 non-sensitive traces out of our data set. We measure
the attacker’s success rate as the chance that the attacker correctly
identifies the sensitive trace. We repeat this experiment 10,000
times for each defense and each value of 𝑃. In Table 3, we show
the overall success rate of kFP against various defenses for 𝑃 = 5,
𝑃 = 10, 𝑃 = 20, 𝑃 = 50, 𝑃 = 100, and 𝑃 = 500.
When there is no defense, the attacker can link the sensitive
trace with the sensitive visit at very high probability even when
there are 500 candidate traces. Given 500 traces, the attacker can
also succeed most of the time against Random and WTF-PAD and
almost half of the time with Decoy. The result with Decoy affirms
once more that Decoy-disguised traces still retain much of the true
trace’s features. While Front is not as effective as Decoy in terms
of TPR/FPR, it is more effective at disguising the true trace in the
linking scenario.
For the highly costly Tamaraw, the attacker can still succeed
most of the time up to 𝑃 = 10. On the other hand, the attacker is not
likely to identify the one correct trace out of 𝑃 = 500 traces. In fact,
the attacker is only 20% likely to find the correct trace within his
top 10 guesses; the same probability is 74% for Decoy. Nevertheless,
the 𝑃 = 500 result is still 70 times better than random guessing.
To validate the usefulness of confidence in the linking scenario,
we consider what the attacker’s accuracy would be if he simply
attempted to classify all traces using kFP, and if there were multiple
positive classifications (or all classifications were negative), guessed
one of them randomly. Setting 𝑃 = 20, the attacker’s accuracy would
drop to 0.91 (compared to 0.99) with no defense; 0.65 (compared to
0.93) with WTF-PAD; and 0.34 (compared to 0.66) with Front. This
result shows that when evaluating defenses in the linking scenario,
a confidence metric helps demonstrate the attacker’s true capability.
The attacker’s strong results in the linking scenario can be said to
be a consequence of the distinctive confidence between positive
and negative classifications.
5 STRENGTHENING THE DEFENSES
Our experiments under the one-page setting show that known
website fingerprinting defenses cannot prevent the attacker from
classifying a web page, whether in the standard laboratory scenario
or in several scenarios designed for realistic attacker goals. We want
to see if known defenses could be fortified along their original de-
sign to meet this higher standard of evaluation; if not, new defenses
would have to be created. We investigate parametric adjustments
and changes to inject randomization into three defenses, Tamaraw,
WTF-PAD, and Front, and re-evaluate their performance in the
one-page setting.
5.1 Tamaraw
Tamaraw enforces (different) fixed packet rates on both parties
and pads the end of communication to a multiple of a parameter
ℓ. After regularizing the packet rate, if the smallest multiple of ℓ
greater than the total number of cells (including dummy cells) is
𝐴ℓ, sequence-end padding will pad it to (𝐴 + 𝑘)ℓ drawing 𝑘 from
the geometric distribution 𝑃𝑟(𝑋 = 𝑘) = (1− 𝑝)𝑘𝑝. For convenience
we write ℓ = 500𝐿 and 𝑝 = 1/(𝐺 + 1) so that 𝐿 and 𝐺 are small
integer parameters for Tamaraw. In previous experiments, 𝐿 = 1
and 𝐺 = 1.
Increasing these two parameters gives us two different paradigms
for how to fortify a defense in the one-page setting. Increasing 𝐿
decreases variation between different sequences, making it more
likely that two different pages will produce the same sequence.
Increasing 𝐺, on the other hand, increases random variation, so
that different sequences of the same page are more likely to produce
different results. Both are potentially able to confuse the attacker at
a greater cost to data overhead. (Note that sequence-end padding
does not increase page loading time as the client is not forced to
wait for sequence-end padding to finish before loading a second
page.)
We show the distinct effects of increasing 𝐿 and 𝐺 on the perfor-
mance of kFP under the one-page setting in Figure 8a and Figure 8b
respectively. When increasing 𝐿, 𝐺 is fixed at 1; when increasing 𝐺,
𝐿 is fixed at 1. We observe that the TPR decreases and FPR increases
in both cases, narrowing the gap between the two and rendering
the classifier ineffective. In other words, it is possible to strengthen
Tamaraw in the one-page setting whether by increasing 𝐿 or 𝐺. One
oddity is a slightly increased TPR at high values of 𝐿, though the
classifier does not perform better overall due to the corresponding
increase in FPR.
To enable a direct comparison between these two strategies,
we plot the gap between TPR and FPR against the data overhead
of increasing 𝐿 and 𝐺 in Figure 9. We see that increasing 𝐺 is a
Session 10D: Applied Privacy CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea2802(a) Increasing 𝐿, 𝐺 = 1.
(b) Increasing 𝐺, 𝐿 = 1.
Figure 8: TPR/FPR of kFP against Tamaraw with (a) increas-
ing 𝐿 (greater deterministic end-of-sequence padding), and
(b) increasing 𝐺 (more random end-of-sequence padding).
Figure 9: kFP against Tamaraw measuring the TPR minus
FPR gap against data overhead as a percentage. Here, 100%
data overhead means doubling the expected data of browsing;
this is incurred by original Tamaraw.
more efficient way to strengthen Tamaraw in the one-page setting,
and the difference is especially pronounced at higher overheads.
At 200% overhead through increasing 𝐿, we can reduce attacker
effectiveness to 80% TPR and 40% FPR; through increasing 𝐺, we
can further reduce it to 70% TPR and 38% FPR. This suggests that,
for Tamaraw, increasing randomness is more cost-effective against
the one-page attacker than fixed deterministic padding, though the
optimal method may involve some combination of 𝐿 and 𝐺.
In Section 3.5, we showed that Tamaraw failed under the one-
page setting because the sequence lengths of a monitored page
tended to occupy its own anonymity sets while non-monitored
pages were scattered. We re-examine the anonymity sets in 𝐿 =
9, 𝐺 = 1 and 𝐿 = 1, 𝐺 = 9 in Figure 10, compared with original
Tamaraw. Here we show the anonymity sets of site 1 compared to
100 non-monitored pages.
Figure 10 shows that in original Tamaraw, it is clear that the
attacker can achieve success by classifying sequences between 3500
to 6000 cells as positive, and all others as negative. Increasing 𝐿 to
9, there are only 8 anonymity sets left, and they are mostly evenly
divided between positive and negative cases. On the other hand,
increasing 𝐺 to 9, we observe the sequence lengths of both sets
being dispersed across possible values. These two distinct strategies
are both able to confuse the attacker.
We study whether or not these improvements would defeat a
one-page attacker in the selection scenario. Like before, the attacker
attempts to select 𝑁 = 30 clients from 𝑆 = 1000 where sensitive
clients visit the page at a base rate of 3%. We examine two cases of
the number of observed packet traces, 𝐾 = 2500 and 𝐾 = 10000. The
results are in Figure 11; they confirm that the attacker can indeed
be defeated under the selection scenario, even with a large number
of observations (𝐾 = 10000). The difference is especially stark
under 𝐾 = 10000, dropping from 97% success rate at 100% overhead
(original Tamaraw) to 26% at 250% overhead when increasing 𝐺. In
both cases, increasing 𝐺 is more efficient.
Our results shows that while it is possible to defeat the attacker
in the one-page setting using modified Tamaraw, cheaper options
still need to be explored. The overhead values we obtain are not
practical for general deployment to all Tor users.
(a) 𝐿 = 1, 𝐺 = 1
(b) 𝐿 = 9, 𝐺 = 1
(c) 𝐿 = 1, 𝐺 = 9
Figure 10: Histogram of Tamaraw anonymity sets based on
total number of Tor cells for 100 instances of site 1 and 100
non-monitored instances. (a) is original Tamaraw.
Figure 11: kFP against Tamaraw measuring success rate un-
der the selection scenario for 𝐾 = 2500 and 𝐾 = 10000, varying
𝑀 to keep base rate at 3%. For all lines, 𝑆 = 1000, 𝑁 = 30.
5.2 WTF-PAD
WTF-PAD [10] is based on Adaptive Padding, which focuses on
eliminating inter-packet timing as a feature by inserting dummy
packets. It does so by mimicking expected inter-packet times (IPTs)
from a target distribution, which could be learned from real traces. It
was shown to cost little overhead and was effective against several
WF attacks, but later WF attacks based on deep learning defeated
it [15]. In this work, we also showed that it was not effective in the
one-page setting. Similar to before, we investigate if strengthening
the defense by increasing its overhead would allow it to succeed.
 0 0.2 0.4 0.6 0.8 1 0 5 10 15TPR/FPRLTPRFPR 0 0.2 0.4 0.6 0.8 1 0 5 10 15GTPRFPR 0 0.2 0.4 0.6 0.8 1 0 50 100 150 200 250 300 350 400TPR-FPR gapBandwidth overhead (%)Increasing LIncreasing G 0 20 40 60 80 10010k20k30k40kSequence lengthMonitoredNon-monitored 0 20 40 60 80 10010k20k30k40kSequence lengthMonitoredNon-monitored 0 20 40 60 80 10010k20k30k40kSequence lengthMonitoredNon-monitored 0 0.2 0.4 0.6 0.8 1 0 50 100 150 200 250 300 350 400Success rateBandwidth overhead (%)Increasing L, K=2500Increasing L, K=10000Increasing G, K=2500Increasing G, K=10000Session 10D: Applied Privacy CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea2803Front focuses on adding random dummy packets to the front
of the sequence based on two values: 𝑁 , the maximum number of
dummy packets to add, and 𝑊 , a parameter that controls where
most of the packets will be added according to a Rayleigh distribu-
tion. For each sequence, 𝑁 is randomly picked between 1 and 𝑁𝑚𝑎𝑥,
and 𝑊 is randomly picked between 0 s and 𝑊𝑚𝑎𝑥. We choose two
settings for 𝑊𝑚𝑎𝑥 = 14 s and 𝑊𝑚𝑎𝑥 = 28 s, and six settings of 𝑁𝑚𝑎𝑥
from {2500, 5000, 7500, 10000, 12500, 15000}.
We show the results in Figure 13. The results show some promise
in decreasing the performance of kFP in the one-page setting. At
200% overhead, we reduce the attacker to 80% TPR and 25% FPR,
compared to 70% TPR and 38% FPR for our improved Tamaraw.
The 𝑊𝑚𝑎𝑥 = 28 s line is distinctly better at defending against kFP;
a higher 𝑊 spreads the packets out more evenly and thus more
randomly.
These results suggest that the high standard set by the one-page
setting can also be met by zero-delay defenses, but the required data
overhead may be very large. So long as the network can tolerate
the extra data, the impact on user performance will be minimal. On
the other hand, the advantage of using Tamaraw is that an analysis
of anonymity sets can give certain guarantees on the upper bound
performance of any WF attack, which we cannot obtain with current
zero-delay defenses.
6 DISCUSSION
6.1 Varying the number of pages
In this work, we propose to evaluate defenses under the one-page
setting instead of the multi-page setting, which is more suitable for
attack evaluation. A middle ground between the two settings is the
binary multi-page setting: the attacker wants to monitor access to
a number of pages, but does not care which particular page is being
accessed. For an attacker who wants to build up a profile for the
user’s interests and beliefs, this is more powerful than the one-page
setting.
In Table 4, we vary the number of monitored pages in the binary
multi-page setting and measure the kFP attack’s TPR and FPR
against the same defenses we tested before. The attacker only needs
to determine if the page is monitored or not. We see that for most
defenses, an increase of the number of monitored pages up to 50
only slightly decreases TPR. We especially note that the difference
between 20 monitored pages and 50 monitored pages is small. Only
Tamaraw regains much of its defensive capability, as the spread
of monitored pages forces the attacker to frequently make false
positive errors. We can therefore conclude that for most defenses,
even if the attacker were to monitor access to 50 pages in the binary
setting, they could still succeed at high probability.
How many pages the attacker would monitor depends on the
attacker’s needs. One interesting caveat is that because Tor does
not save browsing history and does not cache cookies, many users
visiting a website would have to go through its front page instead
of jumping to a stored page or logging in automatically. Monitor-
ing only the front page can therefore be a useful way to capture
accesses to an entire website on Tor. Regardless of these results, a
WF defense should be designed to be strong enough to defeat an
attacker monitoring one page.
Figure 12: kFP against WTF-PAD when increasing the IPT
divisor, 𝐷.
Figure 13: kFP against Front when increasing the maximum
for the number of random packets, 𝑁𝑚𝑎𝑥, under two settings,
𝑊𝑚𝑎𝑥 = 14 s and 𝑊𝑚𝑎𝑥 = 28 s.
WTF-PAD has no explicit parameters except those that describe
its target IPT distribution. Shorter IPTs increase the overhead as
more dummy packets are generated. To increase its overhead, we
alter the sampling process from this distribution. 4 We divide all
sampled IPTs by a fixed number 𝐷, maintaining the original ran-
domness of WTF-PAD but directly increasing the overhead. We
test five settings for 𝐷, and show the results in Figure 12 plotting
the TPR/FPR of kFP against the overhead. The results show that
our fix for WTF-PAD is largely unsuccessful at defeating kFP in the
one-page setting. Even with 293% overhead, the TPR only drops
from 0.973 to 0.960, and the FPR increases from 0.045 to 0.062.
These results show that not all methods of adding dummy pack-
ets are equal; not all defenses can be strengthened for the one-page
setting. This may be because any method of adding overhead to
WTF-PAD compromises its original design principle of mimicking
real IPT distributions.
5.3 Front
While Tamaraw shows more promise for the one-page setting than
WTF-PAD, it delays user packets (unlike WTF-PAD), thus degrading
browsing performance. We turn to Front as it is also a zero-delay
defense like WTF-PAD, and it was able to thwart several attacks
that WTF-PAD could not [8].
4We use the default normal_recv distribution in this and previous experiments.
 0 0.2 0.4 0.6 0.8 1 0 50 100 150 200 250 300D=1.5D=3D=5D=10D=25TPR/FPRBandwidth overhead (%)TPRFPR 0 0.2 0.4 0.6 0.8 1 0 50 100 150 200 250 300TPR/FPRBandwidth overhead (%)Wmax = 14 s TPRWmax = 28 s TPRWmax = 14 s FPRWmax = 28 s FPRSession 10D: Applied Privacy CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea2804Table 4: TPR/FPR while varying the number of monitored pages in the one-page setting.
Number of monitored pages
Defenses
None
Random
WTF-PAD [10]
Front [8]
Decoy [12]
Tamaraw [2]
2
5
10
20
50
TPR
99.4%
97.9%
96.2%
91.3%
89.8%