/var目录包含在正常操作中被改变的文件：假脱机文件、记录文件、加锁文件、临时文件和页格式
化文件等。这个目录中存放着那些不断在扩充着的东西，为了保持/usr的相对稳定，那些经常被修改的
目录可以放在这个目录下，实际上许多系统管理员都是这样干的。顺带说一下系统的日志文件就在
/var/log 目录中。
---
## Page 43
/home目录包含用户的文件：参数设置文件、个性化文件、文档、数据、EMAIL、缓存数据等。这个
目录在系统省级时应该保留。
/proc目录整个包含虚幻的文件。它们实际上并不存在磁盘上，也不占用任何空间。（用Is-1可以
显示它们的大小）当查看这些文件时，实际上是在访问存在内存中的信息，这些信息用于访问系统
/bin系统启动时需要的执行文件（二进制），这些文件可以被普通用户使用。
/sbin系统执行文件（二进制），这些文件不打算被普通用户使用。（普通用户仍然可以使用它们，但
要指定目录。）
/etc操作系统的配置文件目录。
/root系统管理员（也叫超级用户或根用户）的Home目录。
/dev设备文件目录。LINUX下设备被当成文件，这样一来硬件被抽象化，便于读写、网络共享以及
需要临时装载到文件系统中。正常情况下，设备会有一个独立的子目录。这些设备的内容会出现在独
立的子目录下。LINUX没有所谓的驱动符。
/lib根文件系统目录下程序和核心模块的共享库。
/boot用于自举加载程序（LILO或GRUB）的文件。当计算机启动时（如果有多个操作系统，有可能
允许你选择启动哪一个操作系统），这些文件首先被装载.这个目录也会包含LINUX核（压缩文件vmlinuz），
但 LINUX 核世可 以存在别处，只要配置 LILO 并且 LILO 知道 LINUX核在哪儿。
/opt 可选的应用程序，譬如，REDHAT5.2下的KDE（REDHAT6.0下，KDE放在其它的XWINDOWS应
用程序中，主执行程序在/usr/bin目录下）
/tmp临时文件。该目录会被自动清理干净。
/lost+found在文件系统修复时恢复的文件
/usr目录下比较重要的部分有：
●/usr/X11R6 X-WINDOWS 系统 (version 11, release 6)
/usr/X11同/usr/X11R6（/usr/X11R6的符号连接）
/usr/X11R6/bin大量的小X-WINDOWS应用程序（也可能是一些在其它子目录下大执行文件的符号连
接）。
/usr/docLINUx的文档资料（在更新的系统中，这个目录移到/usr/share/doc）。
/usr/share独立与你计算机结构的数据，警如，字典中的词。
/usr/bin和/usr/sbin类似与“/”根目录下对应的目录（/bin和/sbin），但不用于基本的启动（警如，
在紧急维护中），大多数命令在这个目录下。
/usr/local本地管理员安装的应用程序（也可能每个应用程序有单独的子目录）。在“main”安装后，
这个目录可能是空的。这个目录下的内容在重安装或升级操作系统后应该存在。
/usr/local/bin可能是用户安装的小的应用程序，和一些在/usr/local目录下大应用程序的符号连接，
/proc目录的内容：
/proc/cpuinfo关于处理器的信息，如类型、厂家、型号和性能等。
/proc/devices当前运行内核所配置的所有设备清单。
/proc/dma当前正在使用的DMA通道。/proc/filesystems 当前运行内核所配置的文件系统。
/proc/interrupts 正在使用的中断，和曾经有多少个中断。
/proc/ioports当前正在使用的I/o端口。
举例，使用下面的命令能读出系统的CPU信息。
cat /proc/cpuinfo
/bin
bin是binary的缩写。这个目录沿袭了UNIx系统的结构，存放着使用者最经常使
用的命令。例如cp、Is、cat，等等。
/boot
这里存放的是启动Linux时使用的一些核心文件
---
## Page 44
/dev
dev是device（设备）的缩写。这个目录下是所有Linux的外部设备，其功能类似
DOS 下的.sys 和 Win 下的.vxd。在Linux 中设备和文件是用同种方法访问的。例如：
/dev/hda代表第一个物理IDE硬盘。
/etc
这个目录用来存放系统管理所需要的配置文件和子目录。
/home
用户的主目录，比如说有个用户叫wang，那他的主目录就是/home/wang也可以
用~wang表示。
/lib
这个目录里存放着系统最基本的动态链接共享库，其作用类似于Windows里的.dll
文件。几乎所有的应用程序都须要用到这些共享库。
/lost+found
这个目录平时是空的，当系统不正常关机后，这里就成了一些无家可归的文件的
避难所。对了，有点类似于DOS下的.chk文件。
/mnt
这个目录是空的，系统提供这个目录是让用户临时挂载别的文件系统。
/proc
这个目录是一个虚拟的目录，它是系统内存的映射，我们可以通过直接访问这个
目录来获取系统信息。也就是说，这个目录的内容不在硬盘上而是在内存里。
/root
系统管理员（也叫超级用户）的主目录。作为系统的拥有者，总要有些特权啊！
比如单独拥有一个目录。
/sbin
s就是SuperUser的意思，也就是说这里存放的是系统管理员使用的管理程序。
/tmp
这个目录不用说，
，一定是用来存放一些临时文件的地方了。
/usr
这是最庞大的目录，我们要用到的应用程序和文件几乎都存放在这个目录下。其
中包含以下子目录：
/usr/X11R6
存放X-Window的目录：
/usr/bin
存放着许多应用程序：
/usr/sbin
给超级用户使用的一些管理程序就放在这里：
3op/Jsn/
这是Linux文档的大本营：
/usr/include
Linux下开发和编译应用程序需要的头文件，在这里查找：
 /usr/lib
存放一些常用的动态链接共享库和静态档案库：
/usr/local
这是提供给一般用户的/usr目录，在这里安装软件最适合：
/usr/man
man在Linux中是帮助的同义词，这里就是帮助文档的存放目录：
/usr/src
Linux开放的源代码就存在这个目录，爱好者们别放过哦！
/var
这个目录中存放着那些不断在扩充着的东西，为了保持/usr的相对稳定，那些经
常被修改的目录可以放在这个目录下，实际上许多系统管理员都是这样干的。顺
带说一下系统的日志文件就在/var/log目录中。
总结来说：
●用户应该将文件存在/home/user_login_name目录下(及其子目录下)。
本地管理员大多数情况下将额外的软件安装在/usr/local目录下并符号连接在/usr/local/bin下的主执
行程序。
系统的所有设置在/etc目录下。
不要修改根目录（“/”）或/usr目录下的任何内容，除非真的清楚要做什么。这些目录最好和LINUX
发布时保持一致。
---
## Page 45
●大多数工具和应用程序安装在目录：/bin,/usr/sbin,/sbin,/usr/x11/bin,/usr/local/bin。
所有的文件在单一的目录树下。没有所谓的“驱动符”。
六、软件安装
RPM
RPM软件的安装、删除、更新只有root权限才能使用：对于查询功能任何用户都可以操作：如果普通
用户拥有安装目录的权限，也可以进行安装。
初始化rpm数据库
通过rpm命令查询一个rpm包是否安装了，也是要通过rpm数据库来完成的：所以我们要经常用下面
的两个命令来初始化rpm数据库：
[rootelocalhost beinan]# rpm -initdb
[root@localhost beinan]#rpm--rebuilddb注：这个要花好长时间：
注：这两个参数是极为有用，有时rpm系统出了间题，不能安装和查询，大多是这里出了问题：
/var/lib/rpm目录下的数据库记录所有软件的升级需求，记录已经安装的所有软件，数字证书记录等，这
个目录下的文件非常重要。
RPM软件包管理的查询功能：
命令格式
rpm {q|—query][select-options][query-options]
RPM的查询功能是极为强大，是极为重要的功能之一：举几个常用的例子，更为详细的具体的，请参考
其man trpm
1、查询系统已安装的软件：
语法：rpm-q软件名
举例：
[rootelocalhost beinan]# rpm - q gaim
gaim1. 3. 01. fc4
-q就是--query，中文意思是“问”，此命令表示的是，是不是系统安装了gain：如果已安装会有
信息输出：如果没有安装，会输出gaim没有安装的信息：查看系统中所有已经安装的包，要加-a参
数：
[rootelocalhost RPMS]# rpm -qa
如果分页查看，再加一个管道和more命令：
[root@localhost RPMS]# rpm -qamore
在所有已经安装的软件包中查找某个软件，比如说gaim：可以用grep抽取出来：
[rootelocalhost RPMS]# rpm -qa grep gaim
上面这条的功能和rpm-q gain 输出的结果是一样的：
等37448
2、查询一个已经安装的文件属于哪个软件包：
语法rpm-qf 文件名注：文件名所在的绝对路径要指出举例：
[root@localhost RPMS]# rpm qf /usr/lib/libac1. 1a
libac1deve12. 2. 238
3、查询已安装软件包都安装到何处：
---
## Page 46
举例：
[root@localhost RPMS]# rpm -q1 lynx
[root@localhost RPMS]# rpmquery -qllynx
4、查询一个已安装软件包的信息
语法格式：rpm-qi软件名
举例：
[root@localhost RPMS]# rpm -qi lynx
5、查看一下已安装软件的配置文件：
语法格式：rpm-qc软件名
举例：
[rootelocalhost RPMS]# rpm -qc lynx
6、查看一个已经安装软件的文档安装位置：
语法格式：rpm-qd 软件名
举例：
[root@localhost RPMS]# rpm -qd lynx
7、查看一下已安装软件所依赖的软件包及文件：
语法格式：
rpm-qR软件名
举例：
[root@localhost beinan]# rpm ~qR rpm-python
查询已安装软件的总结：对于一个软件包已经安装，我们可以把一系列的参数组合起来用：比如rpm
-qil；比如：
[root@localhost RPMS]# rpm -qil lynx
对已安装软件包查询的一点补充：
[root@localhost RPMS]# updatedb
[root@localhost RPMS]#locate 软件名或文件名
通过updatedb，我们可以用1ocate来查询一些软件安装到哪里了：系统初次安装时要执行updatedb，
每隔一段时间也要执行一次：以保持已安装软件库最新：updatedb是slocate软件包所有：如果您没
有这个命令，就得安装slocate：举例：
[root@localhost RPMS]# locate gaim
对于未安装的软件包的查看：
查看的前提是您有一个.rpm的文件，也就是说对既有软件file.rpm的查看等：
1、查看一个软件包的用途、版本等信息：
语法：rpm -qpi file.rpm
举例：
[rootelocalhost RPMS]# rpm -qpi lynx2.8. 523. i386. rpm
2、查看一件软件包所包含的文件：
语法：rpm-qplfile.rpm
举例：
[rootelocalhost RPMS]# rpm ~qpl 1ynx2. 8. 523. i386. rpm
---
## Page 47
3、查看软件包的文档所在的位置：
语法：rpm-qpd
file.rpm
举例：
[root@1ocalhost RPMS]# rpm qpd1ynx2. 8. 523. i386. rpm
4、查看一个软件包的配置文件：
语法：rpm-qpcfile.rpm
举例：
[root@localhost RPMS]# rpm qpc lynx2. 8. 523, i386. rpm
5、查看一个软件包的依赖关系
语法：rpm -qpRfile.rpm
举例：
[roote@localhost archives]# rpm -qpR yumex_0. 423. 0. fc4_noarch. rpm
/bin/bash
/usr/bin/python
config (yumex) = 0. 423. 0. fc4
Pygtk2
pygtk21ibglade
rpmlib(CompressedFi 1eNames) <= 3. 0. 41
rpmlib (PayloadFilesHavePrefix) <= 4. 01
usermode
yum )= 2. 3. 2
软件包的安装、升级、删除等：
1、安装和升级一个rpm包：
[root@localhost beinan]#rpm-vih file.rpm注：这个是用来安装一个新的rpm包：
[root@localhost beinan]#rpm-Uvhfile.rpm 注：这是用来升级一个 rpm 包;
如果有依赖关系的，请解决依赖关系，其实软件包管理器能很好的解决依赖关系，请看前面的软件包管理器
的介绍：如果您在软件包管理器中也找不到依赖关系的包：那只能通过编译他所依赖的包来解决依赖关系，
或者强制安装：语法结构：
[root@localhost beinan]# rpm ivh file. rpm nodeps force
[root@localhost beinan]# rpm Uvh file. rpm -nodeps —force
更多的参数，请查看manrpm 举例应用：
[root@1ocalhost RPMS]# rpm ivh 1ynx2. 8. 523. i386. rpm
Preparing. -.
1: 1ynx
######################################[10]
[root@1oca1lhost RPMS]# rpm ivh -replacepkgs 1ynx2. 8. 523. i386. rpm
Preparing. - 
##############*###*###*###*###*###*#######[10]
1 : lynx
#########################################[10]
注：--replacepkgs参数是以已安装的软件再安装一次：有时没有太大的必要：测试安装参数—test，
用来检查依赖关系：并不是真正的安装：
[rootelocalhost RPMS]# rpm ivh test gaim-1. 3. 01. fc4. i386. rpm
Preparing...
#########################################[10%]
---
## Page 48
由新版本降级为旧版本，要加--oldpackage 参数：
[root@localhost RPMS]# rpm -qa gaim
gaim1. 5. 01. fc4
[root@localhost RPMS]# rpm Uvh oldpackage gaim1. 3. 01. fc4. i386. rpm
Preparing. . .
#########################################[10%]
1 : gaim
#########################################[10%]
[root@localhost RPMS]# rpm -qa gaim
gaim1. 3. 01. fc4
为软件包指定安装目录：要加-relocate参数：下面的举例是把gain-1.3.0-1.fc4.i386.rpm指定安装在
/opt/gaim目录中：
[root@1ocalhost RPMS]# rpm ivh =relocate /=/opt/gaim gaim1. 3. 01. fc4. i386. rpm
Preparing. - -
########################################[10]
1 : gaim
########################################[1%]
[root@localhost RPMS]# 1s /opt/
gaim
为软件包指定安装目录：要加-relocate 参数：下面的举例是把1ynx-2.8.5-23.i386.rpm指定安装在
/opt/lynx 目录中：
[root@1ocalhost RPMS]# rpm ivh relocate /=/opt/lynx badre1oc 1ynx2. 8. 523. i386. rpm
Preparig...###########################################[100%]
1:1yX##################################[100%]
我们安装在指定目录中的程序如何调用呢？一般执行程序，都放在安装目录的bin或者sbin目录中：看下
面的例子：如果有错误输出，就做相应的链接，用ln-S：
[root@1ocalhost RPMS]# /opt/lynx/usr/bin/lynx
Configuration file /etc/lynx. cfg is not available.
[root@localhost RPMS]# 1n s /opt/lynx/etc/lynx. cfg /etc/lynx. cfg
[root@localhost RPMS]# /opt/lynx/usr/bin/lynx wuw. linuxsir. org
RPM管理包管理器支持网络安装和查询：
比如我们想通过FedoraCore 4.0的一个镜像查询、安装软件包：地址：