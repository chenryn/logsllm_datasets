identify the network owner, so the integer part of community
attributes must also be anonymized. This represents a loss
of information, but we have chosen to favor anonymity over
information wherever such trade-o(cid:11)s must be made.
Like AS numbers, community attributes can appear in
regexps (e.g., line 31 in Figure 1), and are anonymized using
the same method as AS numbers. Five of the 31 networks
used regexps involving communities, but only two networks
used regexps with range expressions.
5. VALIDATION OF ACCURACY
Anonymization of con(cid:12)guration (cid:12)les is potentially a lossy
process. To validate that information relevant to network re-
searchers is surviving the anonymization process unchanged,
we use end-to-end tests that compare attributes of the con-
(cid:12)gs pre- and post-anonymization. We developed two suites
of tests that a colleague with access to the unanonymized
con(cid:12)guration (cid:12)les runs over both the anonymized and un-
anonymized con(cid:12)gurations and then checks for di(cid:11)erences
in the output.
The (cid:12)rst suite of tests veri(cid:12)es that independent charac-
teristics of the con(cid:12)gurations are being preserved by com-
paring properties such as: (a) the number of BGP speakers;
(b) the number of interfaces; and (c) the structure of the
address space (i.e., number of subnets of each size).
The second suite of tests consists of running our tools
to reverse engineer the routing design [1] of a network and
comparing the extracted designs. Extracting the routing
design makes an excellent test case, as it depends on many
aspects of the con(cid:12)guration (cid:12)les being consistent inside each
(cid:12)le and across all the (cid:12)les in the network, including physi-
cal topology, routing protocol con(cid:12)guration, routing process
adjacencies, routing policies, and address space utilization.
While our tests have given us great con(cid:12)dence that our
anonymizer implementation preserves information related to
routing design, it is possible that other aspects of the con(cid:12)gs
we have not tested are being altered. As more research is
conducted using anonymized con(cid:12)gs, we expect the number
of tests in the validation suite to increase.
In general, the anonymizer is capable of preserving any
relationship between con(cid:12)guration data elements of which
it is programmed to be aware. However, the potential exists
for there to be implicit relationships between elements of the
con(cid:12)guration data that are unknown to the anonymizer, and
so are not preserved during the anonymization. For exam-
ple, it might be \well known" that all addresses used by AS
number X have pre(cid:12)x Y . A network designer could conceiv-
ably con(cid:12)gure some router in his or her network to drop all
routes from AS X and other routers to drop all routes to
destinations with pre(cid:12)x Y . Using this external information
and the unanonymized con(cid:12)gurations, it would be possible
to determine these two di(cid:11)erent con(cid:12)gurations express the
same intent and achieve the same e(cid:11)ect. The anonymiza-
tion process will independently anonymize the AS numbers
and the IP pre(cid:12)xes, however, allowing a reader to determine
that routes to external networks are being dropped via two
di(cid:11)erent mechanisms, but not that the mechanisms both
target the same AS. The anonymizer today supports wide
classes of useful analysis. If the anonymizer is provided with
the \well known" external information on which the implicit
relationship is based, it can be extended to preserve these
relationships as well.
6. POTENTIAL VULNERABILITIES
There are two general ways in which the anonymization
provided by our approach can be attacked. First, textual
information accidentally left inside a post-anonymization
con(cid:12)guration (cid:12)le could identify the owner of the network.
Second, it might be possible to analyze the con(cid:12)guration
(cid:12)les to determine a set of network characteristics that are
so unusual they form a unique \(cid:12)ngerprint" of the network.
If these characteristics can be measured externally via the
public Internet, then a search of all known networks could be
made looking for a (cid:12)ngerprint that matches the (cid:12)ngerprint
of the con(cid:12)gs.
6.1 Textual Attack Based on Unanonymized
Strings
It is very unlikely a textual attack could succeed against
the strings in an anonymized con(cid:12)guration (cid:12)le, as we take
the extremely conservative approach of stripping all com-
ments from the con(cid:12)gs and hashing all strings except those
known to be innocuous with the cryptographically secure
SHA1 hash (salted with a secret chosen by the network
owner). However, it is possible that a non-string that car-
ries identity information could escape the rules we use to (cid:12)nd
and anonymize them. AS numbers have been the greatest
threat, as they are simple integers.
Our best defense against textual attacks is an iterative
methodology. After anonymizing con(cid:12)gs, we highlight for a
human operator lines that seem likely to leak information
(usually a tiny fraction of the con(cid:12)gs). Lines they believe
are dangerous are used to add more rules to the anonymizer.
Our experience is that the iteration closes quickly, requiring
fewer than 5 iterations over 3 months to anonymize 4.3 mil-
lion lines of con(cid:12)guration from 7655 routers running more
than 200 di(cid:11)erent IOS versions. As an example of a leak-
highlighting method, the anonymizer can record all AS num-
bers it sees before hashing them, and then grep out all lines
from the anonymized con(cid:12)gs that still include any of those
numbers.6
6.2 Attacks on the IP Address Anonymization
Hypothetical attacks have been proposed [7] on the tcpdpriv
algorithm on which our IP address anonymization is based.
Fortunately, they use the frequency with which addresses
appear in a dynamic packet trace | information that is not
available from anonymized static con(cid:12)guration (cid:12)les.
However, because the IP address anonymization is struc-
ture preserving, the number of subnets of di(cid:11)erent sizes
is the same in pre- and post-anonymization con(cid:12)gs. This
means an attacker could construct a (cid:12)ngerprint of a net-
work via counting up how many subnets of di(cid:11)erent sizes
(/30s, /29s, /28s, etc.) appear in the anonymized con(cid:12)gs.
To determine the identity of the physical network that the
con(cid:12)gs belong to, he could then send probe packets into can-
didate physical networks attempting to measure how many
subnets of di(cid:11)erent sizes each candidate contains from the
ICMP Reply or backscatter packets received. Conceivably
this could be done by \pinging" every consecutive address in
the address blocks announced by the candidate network in
BGP, and using heuristics such as \most subnets have hosts
clustered at the lower end of the subnet’s address range" to
guess where subnet boundaries must lie.
Although remotely determining the address space (cid:12)nger-
print of a physical network seems extremely challenging (or
impossible in the case of networks behind (cid:12)rewalls or not
reachable from the Internet), for this security analysis we
will assume it is possible. The remaining question that we
will experimentally evaluate in future work is whether ad-
dress space usage (cid:12)ngerprints are su(cid:14)ciently unique to en-
able the identi(cid:12)cation of networks. Should large numbers of
networks have roughly the same (cid:12)ngerprint, the risks of this
attack succeeding will be quite low.
6.3 Attacks Based on Network Topology and
Peering
Although we independently hash the AS numbers that
identify the peers of an anonymized network, anonymized
con(cid:12)gs accurately represent the number of routers at which
the anonymized network peers with other networks, and
the number of peering sessions that terminate on each of
those routers. This peering structure could serve as one
form of (cid:12)ngerprint that could be checked against maps made
using the RocketFuel techniques [8]. However, there are
many side-door peerings between real backbone networks
that RocketFuel and RouteViews do not see, so it is an open
experimental question for future work to determine if there
is enough entropy in the peering structures to make them
6This has worked well on the con(cid:12)gs we have tried it on, al-
though it would work poorly for Genuity customers as Ge-
nuity’s AS number (AS 1) will appear in many unrelated
con(cid:12)g lines.
useful as (cid:12)ngerprints.
It seems likely that peering struc-
ture can be used to (cid:12)ngerprint backbone networks, but not
edge networks | both because they have fewer points of
attachment to the backbone and because they do not gen-
erally provide transit so their peering structure cannot be
measured via RocketFuel. Also, edge networks often have
(cid:12)rewalls that drop unsolicited probes, such as traceroutes,
and so their internal topology cannot be measured from out-
side.
Summarizing these vulnerabilities, until such time as the
actual risks of the (cid:12)ngerprinting attacks like the ones men-
tioned above can be established, we cannot conclude that
our method securely anonymizes backbone networks. How-
ever, for the many networks which cannot be externally
(cid:12)ngerprinted, either because they use (cid:12)rewalls or are not
reachable over the public Internet, this method appears rea-
sonably secure against external attackers. The remaining
concern is that an insider attack, where the probing/(cid:12)nger-
printing is launched from a host in the target network, could
potentially succeed. However, 10 of 31 networks we exam-
ined use internal compartmentalization that would also de-
feat insider attacks. For example, some networks use NATs
to divide up the network into smaller pieces, some use rout-
ing policy to prevent reachability between portions of the
network, and others drop traceroutes and other probe traf-
(cid:12)c.
7. SUMMARY AND FUTURE WORK
In this paper we make two contributions. First, we have
formulated the key issues of the con(cid:12)guration anonymization
problem, including the requirements for an acceptable anon-
ymization method, major areas of challenges, a methodol-
ogy for validating anonymized data, and potential security
vulnerabilities. The formulation exposes essential trade-o(cid:11)s
between anonymization and information preservation, and
can serve as a basis for further discussions by the research
community leading to re(cid:12)ned solutions.
Second, we provide a working solution for con(cid:12)guration
anonymization that meets the formulated requirements. It
has been validated with a major carrier, earning unprivi-
leged researchers access to the con(cid:12)guration (cid:12)les for dozens
of networks.
Towards a Clearinghouse of Conﬁguration Data
The motivation for our work is to create a means by which
network owners will feel comfortable making their con(cid:12)gur-
ation data available to the research community.
Using the ability to anonymize router con(cid:12)guration (cid:12)les,
we plan to establish a single-blind methodology for work-
ing with private network data through a website portal.
Network owners could download the con(cid:12)guration anony-
mization tools from the portal via third-party web tra(cid:14)c
anonymizers, and upload their anonymized con(cid:12)gurations
after taking whatever additional steps they felt necessary to
verify the anonymization. Researchers with accounts on the
portal could then be given access to the data, communicat-
ing comments to the anonymous network owners through
a blinding function of the portal and the third-party web
tra(cid:14)c/email anonymizers.
While both technical and organizational challenges remain
to be overcome in the creation of network con(cid:12)guration data
sets accessible to the research community, we are excited by
the new areas of research such data sets could open up | ar-
eas with impacts in both networking research and network
operations. Our work on the anonymization of con(cid:12)gura-
tions is intended as a (cid:12)rst step in generating momentum
towards this goal.
8. REFERENCES
[1] D. A. Maltz, G. Xie, J. Zhan, H. Zhang, G. Hjalmtysson,
and A. Greenberg, \Routing design in operational networks:
A look from the inside," in Proc. ACM SIGCOMM, August
2004.
[2] D. Eastlake, 3rd and P. Jones, RFC 3174 - US Secure Hash
Algorithm 1 (SHA1), 2001. Available from
http://www.ietf.org/.
[3] D. A. Maltz, J. Zhan, G. Xie, H. Zhang, G. Hjalmtysson,
A. Greenberg, and J. Rexford, \Structure preserving
anonymization of router con(cid:12)guration data," Tech. Rep.
CMU-CS-04-149, Carnegie Mellon University, 2004.
[4] J. Xu, J. Fan, M. Ammar, and S. B. Moon, \Pre(cid:12)x
preserving IP address anonymization: Measurement-based
security evaluation and a new cryptography-based scheme,"
in Proc. International Conference on Network Protocols,
October 2002.
[5] G. Minshall, \tcpdpriv - remove private information from a
tcpdump -w (cid:12)le." Software distribution available from
http://ita.ee.lbl.gov/html/contrib/tcpdpriv.html, 1997.
[6] J. C. Martin, Introduction to Languages and the Theory of
Computation. McGraw-Hill, 1991.
[7] T. Ylonen, \Thoughts on how to mount an attack on
tcpdpriv’s \-a50" option...." Web White Paper available
from
http://ita.ee.lbl.gov/html/contrib/attack50/attack50.html.
[8] N. Spring, R. Mahajan, and D. Wetherall, \Measuring ISP
topologies with RocketFuel," in Proc. ACM SIGCOMM,
August 2002.