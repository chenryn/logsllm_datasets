User: 如何使用Python编写一个脚本，以遍历指定目录中的所有文件和子目录，并计算它们的总大小？
Assistant: 以下是使用Python 3编写的一个脚本，以遍历指定目录中的所有文件和子目录，并计算它们的总大小：

```python
import os

# 定义一个函数，以递归方式遍历目录并计算其大小
def get_directory_size(directory):
    # 初始化变量以记录每个目录和文件的大小
    total_size = 0
    directory_size = 0
    file_size = 0
    
    # 遍历目录并计算每个文件和子目录的大小
    for root, dirs, files in os.walk(directory):
        for name in files:
            file_path = os.path.join(root, name)
            file_size += os.path.getsize(file_path)
        for name in dirs:
            directory_path = os.path.join(root, name)
            directory_size += os.path.getsize(directory_path)
            
    # 计算总大小并返回结果
    total_size = directory_size + file_size
    return total_size
    
# 使用示例
directory = 'C:/Users/your_username/Documents/'
total_size = get_directory_size(directory)
print('总大小为：{:.2f} MB'.format(total_size / (1024*1024)))
```

在上面的示例代码中，我们首先定义了一个名为`get_directory_size`的函数，该函数使用递归方式遍历目录并计算其大小。我们使用`os.walk`函数遍历指定目录中的所有文件和子目录。对于每个文件和子目录，我们使用`os.path.getsize`函数获取其大小，并将其累加到对应的变量中。最后，我们计算总大小并返回结果。

在使用示例中，我们指定一个目录，并将其传递给`get_directory_size`函数，然后将返回结果格式化为以MB为单位的字符串，并将其打印出来。

请注意，由于遍历目录可能需要很长时间，因此对于非常大的目录，此脚本可能需要很长时间才能完成。为了避免出现内存问题，我们将每个文件和子目录的大小分别累加到不同的变量中。