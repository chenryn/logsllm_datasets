total 24
-rw-r--r-- 1 user user 1346 Mar 15 09:58 xdb.crt
-rw-r--r-- 1 user user 1704 Mar 15 09:58 xdb.key
-rw-rw-r-- 1 user user 1019 Mar 15 10:18 xdb.keystore
-rw-rw-r-- 1 user user 2557 Mar 15 10:34 xdb_pkcs.p12
-rw-r--r-- 1 user user 1346 Mar 15 10:00 xdb_root.crt
-rw-rw-r-- 1 user user 954 Mar 15 10:05 xdb_root.crt.der
Step 7: Generate the encrypted form of the new password specified in the preceding step,
The encrypted password must be specified with the sslKeyStorePassword
configuration option of the publication server configuration file for publication server
SSL connections and the subscription server configuration file for subscription server
SSL connections.
Encrypt the password using the xDB Replication Server CLI encrypt command.
Step 8: Copy files xdb.keystore and xdb_pkcs.p12 to a directory location where
they are to be accessed by the publication server and subscription server.
Step 9: In the publication server and subscription server configuration files, set the
location of file xdb.keystore with the sslTrustStore option and the location of file
xdb_pkcs.p12 with the sslKeyStore option.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 525
EDB Postgres Replication Server User’s Guide
The following shows the SSL configuration options set for the files generated in this
example.
sslTrustStore=/tmp/sslclient/xdb.keystore
sslTrustStorePassword=LGn6+AagiXqumxVHlOKk3w==
sslKeyStore=/tmp/sslclient/xdb_pkcs.p12
sslKeyStorePassword= ygJ9AxoJEX854elcVIJPTw==
The encrypted sslTrustStorePassword is obtained from Step 5 after being specified
for the keytool program in Step 4.
The encrypted sslKeyStorePassword is obtained from Step 7 after being specified for
the openssl pkcs12 program in Step 6.
Section 7.11.4 contains a summary of the publication server and subscription server
configuration options for SSL connections.
Step 10: Restart the publication and subscription servers.
7.11.3 Requesting SSL Connection to the xDB Replication
Server Databases
Once SSL connectivity has been configured, a URL option must be supplied when
configuring a single-master or multi-master replication system for those databases to
which an SSL connection is intended to be used.
The SSL URL option informs Java to use SSL when the publication server or
subscription server attempts to connect to an xDB Replication Server database
(publication, subscription, or master node database) on which the SSL URL option has
been set to true.
The configuration steps where these options are specified are as follows:
 For using SSL connections in a single-master replication system, the URL options
must be specified as shown in Section 5.2.2 for the publication database and in
Section 5.3.2 for the subscription databases.
 For using SSL connections in a multi-master replication system, the URL options
must be specified as shown in Section 6.2.2 for the master definition node and in
Section 6.3 for the non-MDN nodes.
For publication, subscription, and master node databases, in the URL Options field of the
Add Database or Update Database dialog box, enter the following:
ssl=true
The following is an example of the Add Database dialog box with the ssl=true URL
option.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 526
EDB Postgres Replication Server User’s Guide
Figure 7-112 - Add Database with SSL URL option
Note: If you no longer wish to use an SSL connection to an xDB Replication Server
database, you must completely delete the ssl=true text from the URL Options field of
the Add Database or Update Database dialog box. Simply changing true to false does
not have the effect of disabling the SSL option.
7.11.4 Summary of SSL Configuration Options
The following is a summary of the publication server and subscription server
configuration options that are applicable to SSL connections.
sslTrustStoreType
The sslTrustStoreType option specifies the truststore format. Set this option to the
Java truststore format of the client.
sslTrustStoreType=truststore_format
The default value for truststore_format is jks for the JKS truststore file format.
sslTrustStore
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 527
EDB Postgres Replication Server User’s Guide
The xDB Replication Server uses the default Java truststore for SSL connectivity.
The typical default location of the truststore is in directory
JAVA_HOME/jre/lib/security or JAVA_HOME/lib/security in a file named
cacerts. (JAVA_HOME is the Java installation directory.)
Specify the full directory path to the truststore file with this option.
sslTrustStore=truststore_file
sslTrustStorePassword
Encrypt the password for the Java system truststore using the xDB Replication Server
CLI encrypt command (see Section 8.3.4) and specify the encrypted password with the
sslTrustStorePassword option.
sslTrustStorePassword=encrypted_password
sslKeyStoreType
The sslKeyStoreType option specifies the keystore format. Set this option to the Java
keystore format of the client.
sslKeyStoreType=keystore_format
The default value for keystore_format is pkcs12 for the PKCS #12 keystore file
format.
sslKeyStore
Specify the full directory path to the keystore file with this option.
sslKeyStore=keystore_file
sslKeyStorePassword
Encrypt the password for the Java system keystore using the xDB Replication Server CLI
encrypt command (see Section 8.3.4) and specify the encrypted password with the
sslKeyStorePassword option.
sslKeyStorePassword=encrypted_password
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 528
EDB Postgres Replication Server User’s Guide
8 xDB Replication Server Command
Line Interface
This chapter discusses the syntax and usage of the xDB Replication Server Command
Line Interface (CLI). This utility program is a command line driven alternative to the
xDB Replication Console.
The steps for creating a replication system using the xDB Replication Server CLI are no
different than those required when using the xDB Replication Console. The logical
components of the replication system must be created in the same order, with the same
sets of attributes as when creating the replication system with the xDB Replication
Console.
You should understand the concepts and steps presented in chapters 2, and 5 (for single-
master replication) or 6 (for multi-master replication) before building a replication system
using the xDB Replication Server CLI.
There are no restrictions on using both the xDB Replication Console and the xDB
Replication Server CLI to build and manage the same replication system.
In Section 8.3, the syntax and examples are given for each xDB Replication Server CLI
command run individually. Where applicable, the discussion of a command contains a
reference back to its xDB Replication Console counterpart where a detailed description of
the affected component and its attributes can be found.
8.1 Prerequisite Steps
This section describes the installation and setup required prior to using the xDB
Replication Server CLI.
The xDB Replication Server CLI is included if the xDB Replication Console component
is chosen when installing xDB Replication Server. The xDB Replication Server CLI is a
Java application found in directory XDB_HOME/bin.
Step 1: Follow the installation steps given in Chapter 3 to install xDB Replication Server.
Step 2: Follow the prerequisite steps given in Section 5.1 for single-master replication
systems or Section 6.1 for multi-master replication systems.
Step 3: Set the Java Runtime Environment as described by the following discussion.
On the host from which you intend to run the xDB Replication Server CLI, the Java
Runtime Environment (JRE) must be present and the Java runtime bin directory must be
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 529
EDB Postgres Replication Server User’s Guide
included in the path of the operating system user name that will be used to run xDB
Replication Server CLI.
The xDB Startup Configuration file, xdbReplicationServer-xx.config, contains
the path of the JRE runtime program that was detected during the installation of xDB
Replication Server. The following is an example of the xDB Startup Configuration file
(see Section 3.5 for the location of this file.)
#!/bin/sh
JAVA_EXECUTABLE_PATH="/usr/bin/java"
JAVA_MINIMUM_VERSION=1.7
JAVA_BITNESS_REQUIRED=64
JAVA_HEAP_SIZE="-Xms256m -Xmx1536m"
PUBPORT=9051
SUBPORT=9052
For example, using the JRE path shown in the preceding configuration file, enter the
following on the command line or add it to your profile:
export PATH=/usr/bin:$PATH
On Windows systems, open the Properties dialog box of My Computer, choose Advanced
System Settings, and then click on Environment Variables. Edit the Path system
environment variable to include the Java Runtime Environment bin directory.
Alternatively, you can set the path for just the current session when you open the
Command Prompt window as in the following example:
SET Path=C:\Program Files\Java\jre1.8.0_45\bin;%Path%
8.2 General Usage
This section explains the general usage rules for the xDB Replication Server CLI.
8.2.1 Running xDB Replication Server CLI
You can run the xDB Replication Server CLI from any host on which you can run the
xDB Replication Console. The xDB Replication Server CLI is run by executing the java
runtime program and specifying the following arguments to the java program:
 The path to the xDB Replication Server CLI jar file edb-repcli.jar
 An xDB Replication Server CLI command
 One or more publication names or subscription names if the command acts on a
publication or subscription
 Parameters and their values that are applicable to the command
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 530
EDB Postgres Replication Server User’s Guide
The Java jar file edb-repcli.jar is located in directory XDB_HOME/bin.
Each xDB Replication Server CLI command has the following general syntax:
-command [ { pubname | subname } ...]
[ -parameter [ value ] ...] ...
In the preceding syntax diagram, command is the name of an xDB Replication Server
CLI command. The command name must be prefixed by a hyphen character (-). If the
command acts on a publication, the name of the publication represented by pubname is
specified. If the command acts on a subscription, the subscription name represented by
subname is specified. Certain commands may allow the specification of more than one
publication name or more than one subscription name.
Depending upon the command, one or more parameters may follow. Each parameter
name must have a hyphen prefix. You may need to specify one or more values for each
given parameter.
If a command takes more than one parameter, the order in which the parameters are
specified makes no difference. Each parameter must be followed only by the values that
pertain to it.
Command names and parameter names are all case sensitive and must be given as shown
in Section 8.3.
The general, complete, execution syntax that you enter at the command line prompt has
the following format:
java -jar XDB_HOME/bin/edb-repcli.jar
-command [ { pubname | subname } ...]
[ -parameter [ value ] ...] ...
The preceding syntax must be entered as one logical line on the command line. It is
broken up into multiple lines in the preceding syntax diagram for the purpose of clarity.
Note: You can continue a command onto the next physical line if you enter the operating
system’s continuation character (for example, the backslash character (\) in Linux or the
caret character (^) in Windows) before pressing the Enter key.
8.2.2 Getting Help
If you execute the xDB Replication Server CLI with the help command, xDB
Replication Server CLI will list a syntax summary of all commands.
See Section 8.3.1 for details on the help command.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 531
EDB Postgres Replication Server User’s Guide
8.2.3 Supplying the Publication or Subscription Server Login
Information
This section discusses the syntax and usage of an xDB Replication Server CLI parameter,
required by many commands, named repsvrfile. Using parameter repsvrfile is the
xDB Replication Server CLI equivalent for the process of registering the publication
server or the subscription server in the xDB Replication Console.
Section 5.2.1 discusses how the first step in building a replication system is to register the
publication server. In the xDB Replication Console, the registered publication server
appears as a node in the replication tree. The Publication Server node provides a context
to which you can add other logical components of the replication system.
When using the xDB Replication Server CLI, there is no replication tree image available
with which to relate the other logical components of the replication system. Instead,
whenever you execute an xDB Replication Server CLI command that requires the context
of a publication server or subscription server, you must specify the publication server’s
login information or the subscription server’s login information by means of the
repsvrfile parameter.
The repsvrfile parameter takes as its value, the path to a text file that contains the
login information of either the publication server instance or the subscription server
instance that you want to use. The general xDB Replication Server CLI command syntax
including the repsvrfile parameter is shown in the following diagram:
-command [ { pubname | subname } ...]
[ -parameter [ value ] ...] ...
[ -repsvrfile repsvrfile ]
[ -parameter [ value ] ...] ...
The xDB Replication Server CLI command to be executed is represented by command. If
required, publication names represented by pubname or subscription names represented
by subname are specified next. The path to the text file containing either the publication
server or subscription server login information is represented by repsvrfile. The
parameters and their values that are used with command are denoted by parameter and
value.
The order on the command line in which -repsvrfile repsvrfile and -parameter
and its values are given does not matter. For example, -repsvrfile repsvrfile can
be given as the first parameter on the command line, the last parameter on the command
line, or somewhere in between other parameters.
The following is an example of repsvrfile for a publication server:
host=localhost
port=9051
user=admin
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 532
EDB Postgres Replication Server User’s Guide
# Password is in encrypted form.
password=ygJ9AxoJEX854elcVIJPTw==
The following is an example of repsvrfile for a subscription server:
host=localhost
port=9052
user=admin
# Password is in encrypted form.
password=ygJ9AxoJEX854elcVIJPTw==
These files can be located in any directory as long as they can be read by the operating
system user running the xDB Replication Server CLI.
In your file, be sure to replace the values of the following fields with the values for your
publication server or subscription server:
 Host
 Port
 User
 Password
This is the same information with which you would need to register the publication server
or subscription server if you were using the xDB Replication Console. See Section 5.2.1
for additional information on registering the publication server. See Section 5.3.1 for
information on registering the subscription server.
The following example illustrates how the repsvrfile parameter is used along with the
printpublist command.
$ java -jar edb-repcli.jar -printpublist -repsvrfile ~/pubsvrfile.prop
Printing publications ...
analysts_managers
dept_emp
emp_pub
8.2.4 Using Encrypted Passwords in Text Files
When using the xDB Replication Server CLI, text files are used to store certain
information, which may include user names and passwords. An example is the files
containing publication server and subscription server login information used with the
repsvrfile parameter.
In the file specified with parameter repsvrfile, the password field must be set to a
password in encrypted form. Using an encrypted password prevents unauthorized
personnel from accessing the publication server or subscription server using the values of
user and password if the file was somehow compromised. (The encrypted password
cannot be used to access the publication server or subscription server from its dialog box
in the xDB Replication Console.)
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 533
EDB Postgres Replication Server User’s Guide
See Section 8.3.4 for directions on generating an encrypted password using the encrypt
command.
8.2.5 Running xDB Replication Server CLI Using a Parameter File
The paramfile command allows you to run an xDB Replication Server CLI command
and its parameters that have been coded into a text file. This technique is useful if you
want to save the command and its parameters for repeated executions.
The syntax for executing paramfile is shown by the following:
java -jar XDB_HOME/bin/edb-repcli.jar
-paramfile cmdparamfile
The syntax of the xDB Replication Server CLI command and its parameters coded into
text file cmdparamfile is the same as if given at the command line prompt as shown by
the following:
-command [ { pubname | subname } ...]
[ -parameter [ value ] ...] ...
[ -repsvrfile repsvrfile ]
[ -parameter [ value ] ...] ...
Using the paramfile command has the following restrictions:
 Only one xDB Replication Server CLI command can be coded into the parameter
file cmdparamfile.
 The parameters to be used with the xDB Replication Server CLI command must
all be included in cmdparamfile. You cannot code some of the parameters into
cmdparamfile and give other parameters on the command line.
The following example creates an Advanced Server publication database definition using
a parameter file named addpubdb_advsvr.
The following is the content of parameter file addpubdb_advsvr:
-addpubdb
-repsvrfile /home/user/pubsvrfile.prop
-dbtype enterprisedb
-dbhost 192.168.2.4
-dbport 5444
-dbuser pubuser
-dbpassword ygJ9AxoJEX854elcVIJPTw==
-database edb
-repgrouptype s
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 534
EDB Postgres Replication Server User’s Guide