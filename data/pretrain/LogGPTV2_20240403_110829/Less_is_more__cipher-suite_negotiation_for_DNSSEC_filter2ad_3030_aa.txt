title:Less is more: cipher-suite negotiation for DNSSEC
author:Amir Herzberg and
Haya Shulman and
Bruno Crispo
Less is More:
Cipher-Suite Negotiation for DNSSEC
∗
Amir Herzberg
Department of Computer
Science
Bar Ilan University
Ramat Gan, Israel
PI:EMAIL
Haya Shulman
Fachbereich Informatik
Technische Universität
Darmstadt
Darmstadt, Germany
PI:EMAIL
Bruno Crispo
Department of Information
Engineering and Computer
Science (DISI)
University of Trento, Italy
PI:EMAIL
ABSTRACT
We propose a transport layer cipher-suite negotiation mech-
anism for DNSSEC standard, allowing name-servers to send
responses containing only the keys and signatures that cor-
respond to the cipher-suite option negotiated with the re-
solver, rather than sending all the signatures and keys (as is
done currently).
As we show, a lack of cipher-suite negotiation, is one of
the factors impeding deployment of DNSSEC, and also re-
sults in adoption of weak ciphers. Indeed, the vast majority
of domains rely on RSA 1024-bit cryptography, which is al-
ready considered insecure. Furthermore, domains, that want
better security, have to support a number of cryptographic
ciphers. As a result, the DNSSEC responses are large and
often fragmented, harming the DNS functionality, and caus-
ing ineﬃciency and vulnerabilities.
A cipher-suite negotiation mechanism reduces responses’
sizes, and hence solves the interoperability problems with
DNSSEC-signed responses, and prevents reﬂection and cache
poisoning attacks.
Keywords
Cipher suite negotiation, DNSSEC, DNS security, DNS in-
teroperability.
1.
INTRODUCTION
A cipher-suite is an ordered set of (one or more) cryp-
tographic algorithms, each implementing a corresponding
function among the functions used by a cryptographic pro-
tocol. For example, the RSA_WITH_RC4_128_MD5 cipher suite
uses RSA for key exchange, RC4 with a 128-bit key for bulk
encryption, and MD5 for message authentication. Cipher-
∗
Part of this research was conducted while the ﬁrst author
was visiting Technische Universt¨at Darmstadt and CISPA,
Saarland University.
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
ACSAC ’14 Dec. 8-12, 2014, New Orleans, LA, USA
Copyright 2014 ACM 978-1-4503-3005-3/14/12 ...$15.00.
http://dx.doi.org/10.1145/2664243.2664283.
suite negotiation refers to the process of selecting the cipher-
suite to be used in a protocol between two (ormore) par-
ties, among multiple cipher-suites supported by each of the
participants. Many standard cryptographic protocols, e.g.,
IKE, SSH, SSL and TLS, [RFC2409, RFC4253, RFC6101,
RFC5246] use cipher-suite negotiation to ensure that the
parties select the ‘best’ cipher-suite among those they jointly
support, in order to avoid broken algorithms and to facilitate
migration to better (more secure, more eﬃcient) algorithms.
Currently, DNSSEC is an exception: it allows the use of
multiple signature algorithms and hash functions, e.g., RSA
and elliptic curves (see [10] for a complete list of crypto-
graphic algorithms), however, no mechanism was designed
to enable parties to select the strongest option that they
support. As a result, during a DNS transaction between a
resolver and a name server, all the keys and signatures, sup-
ported by the target zone, have to be exchanged. Namely,
the name server always returns all these values to the re-
solver, even if some of these algorithms are unsupported or
unvalidated by the resolver.
The lack of cipher-suite negotiation in DNSSEC implies
larger DNSSEC-signed DNS responses, due to inclusion of
multiple keys and signatures; Figure 1 plots the responses’
sizes from Top Level Domains (TLDs) and top 1 million
domains according to Alexa www.alexa.com. The measure-
ments show that the overhead of signed DNS responses is
signiﬁcant in comparison to plain DNS responses. For in-
stance, non-existent domain (NXD) is a very common re-
sponse, which often occurs due to a typo in a DNS query:
the size of NXD responses without DNSSEC is less than 400
bytes while with DNSSEC 70% the responses exceed 1000
bytes and 10% are even larger than link Maximal Transmis-
sion Unit (MTU) (which also holds for more than 30% of
DNSKEY responses). Signed responses for ANY query type
can reach even 5000 bytes and more, while plain ANY type
responses are less than 1000 bytes.
This huge overhead is twofold and has implications both
on computation and communication complexity.
Communication overhead. Large responses cause notice-
able overhead: (1) on the name server that is required to
transmit them,(2) on the recepient that needs to receieve
and process them (allocate buﬀers to store and reassem-
ble) and (3) on the network, and intermediate devices, e.g.,
routers and proxies, causing load spikes and increasing pro-
cessing. Indeed, recent measurements, e.g., [14], show that
a signiﬁcant increase in the DNS infrastructure, both in
resolvers and name servers platforms, is required in order
(cid:22)(cid:23)(cid:25)
100
80
60
40
20
Legend
DNSKEY (TLDs)
NXD signed (TLDs)
NXD (TLDs)
ANY (TLDs)
ANY signed (TLDs)
ANY signed (Alexa)
100
90
80
70
60
50
40
30
20
10
t
e
s
R
R
S
N
f
o
%
)
%
i
(
s
n
a
m
o
D
0
0
1000
2000
3000
Response Size (bytes)
4000
5000
0
20000
40000
60000
80000 100000 120000 140000 160000
TTL value (in seconds)
Figure 1: Length of responses for signed and non-
signed Alexa and TLDs, for ANY, DNSKEY and A RRs.
Figure 2: Distribution of the time-to-live (TTL) val-
ues in DNSKEY records in TLDs and Alexa domains.
to migrate to DNSSEC. Not only much more data, than
needed, is sent: the name server sends all the keys and sig-
natures that correspond to the cryptographic options that
the zone supports, but also such large responses often result
in fragmentation or cause resolvers to use TCP for the DNS
transaction. The communication overhead also depends on
the frequency at which the resolvers request the records from
signed zones; the frequency is dictated by the time-to-live
(TTL) value, set by the zone operators, and the resolvers
cache the records until the TTL value expires.
In Figure
2 illustrates the TTL values of name servers records from
TLDs and Alexa domains: 60% of the TTL values are less
than a day (86400 seconds) and almost 50% are less than
one hour. Furthermore, these large responses, when causing
fragmentation, may even expose to DoS and DNS-poisoning
attacks, see [4]; more details in Section 2.
Computation overhead. Signatures generation increases
the computational overhead on name servers and is signiﬁ-
cant for dynamic zones, e.g., the common content distribu-
tion networks. Signatures veriﬁcation imposes overhead on
busy resolvers and is prohibitive for mobile devices, making
support of DNSSEC on end-hosts impractical.
We believe that these problems with large responses, and
the lack of cipher-suite negotiation mechanism, motivate ad-
ministrators to use only a limited number of cipher-suites.
In particular, without cipher-suite negotiation mechanism
administrators are likely to avoid algorithms with longer
keys/signatures, e.g., 2048 or 4096 bit RSA; these may of-
fer better security, but surely will increase response length
signiﬁcantly and as a result also exacerbate the interoper-
ability problems and exposure to attacks. Paradoxically, for
a diﬀerent motivation, administrators are also likely to avoid
oﬀering alternative algorithms whichm ay oﬀer good secu-
rity even with shorter keys/signatures, e.g., elliptic curves.
Without ciphersuite negotiation, there is no motivateion to
oﬀer such shorter alternatives, since when sent in addition
to the existing keys/signatures, e.g., 1024-bit RSA (which is
mandatory to support), the resulting length of the response
is even larger.
With the growing awareness of the existence of power-
ful, nation-state adversaries, who may be able to crack such
key length, we ﬁnd it alarming that 1024-bit RSA imple-
mentations are still dominant. Furthermore, 1024-bit RSA
is entrenched, by being the default algorithm for DNSSEC,
as mandated by NIST and IETF standards [RFC4033-4035],
and further by the lack of cipher-suite negotiation in DNSSEC.
Indeed, as Figure 3 shows, the current adoption of DNSSEC
algorithms by signed domains appears to support our con-
clusions: the 1024-bit RSA algorithm, already considered
not-suﬃciently-secure, is, by far, the most popular, while the
elliptic curve (EC) variant, in spite of its shorter keys and
signatures, and although it was standardised [RFC6605], is
still not deployed.
This lack of adoption of non-default algorithms by name
servers, also demotivates resolvers from supporting such al-
gorithms, e.g., elliptic curve. This creates a vicious cycle, as
zones are further de-motivated from using non-default sig-
nature algorithms, which are likely to be compatible only
with few resolvers. Elliptic curve signatures (e.g., EC-DSA)
also have some signiﬁcant drawbacks, including long veri-
ﬁcation time and concerns for potential trapdoors; further
research may identify secure signature mechanisms that are
more suitable for this challenge.
We conclude that cipher-suite negotiation for DNSSEC is
essential to security, interoperability and eﬃciency of DNS
and DNSSEC. Furthermore, it may allow end-to-end crypto-
graphic protection of DNS, in particular, in mobile devices.
Downgrade attacks and existing ciphersuite negotiation mech-
i.e., operate in two rounds.
anisms.
In a downgrade attack, a MitM attacker tries to
trick a client and server into using a weak cryptographic
mechanism, although both the client and the server sup-