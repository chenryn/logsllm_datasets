and analyze the existing MTD works. Due to this reason, one
may need to have a more consistent classiﬁcation to clearly
understand the overall trends of MTD research and easily
obtain insights from the existing MTD methodologies.
Zheng and Namin [166] published a survey paper on
architectural aspects of the MTD techniques based on appli-
cation, operating system, and network levels. They classiﬁed
various types of MTD techniques, including software diversi-
ﬁcation via middle-ware, address space layout randomization,
instruction set randomization, IP randomization, virtualization,
decoys, and software-deﬁned or lightweight based MTDs, at
different
they did not clearly distinguish
MTD techniques from MTD architectures. For instance, soft-
ware diversiﬁcation, address space layout randomization, or
IP randomization are MTD techniques while middle-ware
based software diversiﬁcation and software-deﬁned MTD are
the MTD deployment architectures. In addition, they did not
discuss targeted attackers characteristics, evaluation methods,
and suitable metrics of the existing MTD techniques, which
we addressed in this survey paper.
levels. However,
Very recently, Sengupta et al. [134] conducted a substantial
survey to study and categorize the proposed defensive MTD
tools, techniques, and strategies. The authors categorized MTD
approaches in a structured way and introduced MTD tax-
onomies based on the following technique formalism: design-
ing key movements, implementation of MTD (e.g., testbeds),
and evaluation of MTD effectiveness (e.g., qualitative and
quantities metrics). However, some critical aspects of the
implementation layers and combinations of MTD techniques
were missing in their classiﬁcation. On the other hand, our sur-
vey paper here classiﬁed MTD techniques based on Table III
consisting of MTD techniques categorization and the layer of
implementation.
The existing MTD survey papers [22, 94, 113, 134, 157,
166] have provided different perspectives of MTD classiﬁ-
cations and highly useful information overall. However, they
missed some important information that may be highly needed
for researchers who want to start conducting MTD research.
The common examples may include measurement methods,
metrics, common attackers countermeasured by MTD, dis-
tinctions between MTD and other defense mechanisms (e.g.,
defensive deception, intrusion detection) along with the discus-
sions of pros and cons for each MTD techniques and MTD
speciﬁc for different system environments, which we tried to
3
cover all in our survey paper. To effectively demonstrate the
commonalities and differences between our survey paper and
the existing survey papers, we created a table summarizing
their comparisons in Table I.
Furthermore, strictly speaking, MTD is different from de-
ception in that it does not intentionally provide false infor-
mation to deceive an attacker while deception does, even if
these two approaches may lead to a similar outcome, such as
confusing the attacker and misleading the attacker’s decision
making process. All
the existing survey papers discussed
above [22, 94, 113, 157] treat deception techniques as a
subset of MTD techniques. On the other hand, the deception
research community treats MTD as a subset of deception
techniques [119]. Often times, deception is combined with
MTD in which deception is used to change the attack surface.
Hence, in our survey paper, we take deception techniques
(e.g., decoy nodes, honeypots / honeynets, fake information
dissemination on system conﬁguration) as the part of MTD
techniques only when they are used to change the attack
surface, which is the key concept of MTD. We will discuss
more details of the differences between these two techniques
in Section III-C.
C. Key Contributions & Scope
Unlike the existing survey papers on MTD, our survey paper
has the following novel key contributions:
• We extensively surveyed the state-of-the-art MTD technolo-
gies and classiﬁed them based on three operation types:
shufﬂing, diversity, and redundancy (SDR). This classiﬁ-
cation was ﬁrst deﬁned in our prior work [69] but has
not been used to extensively survey the existing MTD
techniques. Hence, this work is the ﬁrst to examine the
overall trends of existing MTD techniques based on this
classiﬁcation type. We chose this classiﬁcation type because
it can embrace MTD techniques across different systems (or
networks) layers as long as they have the common goal(s) to
achieve. We discuss more about the operation-based MTD
classiﬁcation in Section III-B.
• We investigated what types of attack behaviors are addressed
by the state-of-the-art MTD techniques. In particular, we
discussed them in the context of the operation-based classi-
ﬁcation (i.e,, shufﬂing, diversity, and redundancy). In addi-
tion, we discussed the limitations of current attack models.
• We discussed the key distinct contributions of MTD tech-
nologies compared to conventional security counterparts. We
discussed the differences and commonalities between MTD
and cyberdeception, whose concepts are often confused as
being an MTD, since the distinction between the two has
not been clariﬁed in the literature.
• We surveyed what speciﬁc methodologies or algorithms are
leveraged to develop MTD techniques, which embrace three
major theoretical backgrounds of those MTD approaches,
including game theory, genetic algorithms, and machine
learning.
• We also surveyed various types of evaluation methods used
to validate the performance of MTD techniques, including
analytical models, simulation, emulation, and real testbed
environments.
• We surveyed metrics used to assess the quality (i.e, per-
formance and security) of MTD techniques considering
the measures in terms of the perspective of attackers or
defenders.
• We examined how MTD technologies have been applied in
various application domains, including enterprise networks,
Internet-of-Things (IoT), cyber-physical systems (CPSs),
software deﬁned networks (SDNs), and cloud computing.
• Lastly, we discussed insights and limitations obtained from
this extensive survey and suggested future work directions
based on lessons learned from this study.
D. Paper Structure
This paper is organized as follows:
• Section II discusses the key roles and design principles of
MTD techniques.
• Section III discusses the existing MTD classiﬁcations types.
• Section IV discusses MTD techniques under the classi-
ﬁcation of operation-based MTD consisting of shufﬂing,
diversity, and redundancy. Additionally, we discuss existing
hybrid approaches using the mixture of these techniques.
• Section V describes attack behaviors handled by existing
MTD approaches. In addition, we address the limitations
of current attack models considered by the existing MTD
approaches.
• Section VI provides the existing MTD techniques developed
by the following theoretical approaches: (1) game theory; (2)
genetic algorithms; and (3) machine learning.
• Section VII surveys metrics used to evaluate the effec-
tiveness and efﬁciency of MTD approaches in terms of
perspectives of either attackers or defenders.
• Section VIII gives the overall description of evaluation
methods used to validate existing MTD techniques,
in-
cluding: (1) analytical models; (2) simulation models; (3)
emulation models; and (4) real testbeds.
• Section IX provides the overall trends of how MTD tech-
niques are applied under different application domains
including: (1) enterprise networks; (2) Internet-of-Things
(IoT); (3) cyber-physical systems (CPSs); (4) software de-
ﬁned networks (SDNs); and (5) cloud-based web services.
• Section X discusses the limitations of the existing MTD
approaches covered in this work.
• Section XI discusses the insights and lessons learned from
our study and suggests future research directions in the area
of MTD research.
II. KEY ROLES & DESIGN PRINCIPLES OF MTD
In this section, we provide backgrounds and key design
principles of MTD. We discuss the two major roles of MTD in
terms of the intrusion prevention mechanism and the detection
of potential attackers. In addition, we clariﬁed the design
principles of MTD with three key questions, and summarized
beneﬁts and caveats of applying MTD techniques.
A. Key Roles
MTD can contribute to enhancing the security provided by
an intrusion defense system (IDS) in two ways. First, MTD
4
acts as an intrusion prevention mechanism by reducing the risk
of potential intrusions to the system. Many MTD techniques,
including Internet Protocol (IP) mutation, network topology
changes, platform migration, and software stack shufﬂing,
change the attack surface, thereby minimizing the potential of
attackers in their discovery of vulnerable system components
and in their attempts to penetrate into the system.
Second, MTD can assist in the detection of potential at-
tackers. Since MTD techniques can increase the complexity of
an attack operation to identify a target, the intelligence about
attack patterns or behaviors of potential attackers can be easily
obtained by monitoring active activities (e.g., scanning) by the
potential attackers. This allows MTD techniques, categorized
as intrusion protection mechanisms, to also indirectly assist an
intrusion detection system to improve the detection of potential
attacks.
As Table II describes, compared to the characteristics of
the conventional security techniques, MTD aims to provide
affordable, service-oriented defense in terms of minimizing
defense cost (e.g., communication or computation overhead),
maximizing service availability to users, and meeting a re-
quired level of security. In particular,
the underlying idea
of MTD lies in ‘affordable defense’ because it focuses on
rearranging system conﬁgurations to confuse attackers while
still employing existing security mechanisms. This means
that MTD does not require the development of new security
mechanisms, which often need to go through tough, high-
standard security analysis and accordingly may require an
excessive amount of time or effort. Therefore, MTD provides a
new way of defense that continues to leverage legacy resources
but enhances security by dynamically changing the attack
surface, such as any aspects of system components (e.g.,
data, software, platforms, runtime environments, networks) to
increase uncertainty and confusion for attackers.
B. Key Design Principles
MTD was introduced as a proactive defense mechanism to
prevent cyberattacks by continuously and dynamically chang-
ing the attack surface of systems [58]. The fundamental design
principle for developing MTD techniques lies in the decisions
for the following three key questions [22]: what to move, how
to move, and when to move.
• What to move: ‘What to move’ refers to what system
conﬁguration attribute (i.e., attack surface) can be dynami-
cally changed to confuse attackers. The example system or
network attributes that can be changed include instruction
sets [86, 123], address space layouts [135], IP addresses [3,
10, 79, 88, 138], port numbers [97], proxies [83], virtual
machines [165, 20], operating systems [148], or software
programs [76]. Table III summarizes the moving elements
by MTD techniques in different system layers [4, 69]. A
change in the system conﬁguration attributes must cause
a change on the attack surface of the system leading to
the loss of work and increased complexity for attackers.
Additionally, the number of possible values the dynamic
attribute can change to must be vast, thwarting the attacker’s
ability to simply brute-force the future value [22].
5
Philosophy
Goal
Defense Type
Key Concern
Challenges
COMPARISON BETWEEN THE CONVENTIONAL DEFENSE VS. MTD
Conventional Defense
MTD
TABLE II
Building a secure system by covering all vulnerabilities is
It is impossible to build a perfectly secure system
the key for security
Make a system perfectly secure
Static defense using static system conﬁgurations fortifying
Dynamic defense using dynamic system conﬁgurations to
assets and hardening defense systems
build a agile system
How to identify all potential system security vulnerabilities
How to optimally execute MTD operations to continuously
Thwart attackers by changing attack surface
and eliminate them
Due to limited capability to detect all exhaustive, possible
vulnerabilities and their high complexity, it is unfeasible to
identify all possible vulnerabilities
change attack surface while meeting multiple system
objectives concerning security and performance
Optimally executing MTD operations is not a trivial task
because frequently executing MTD operations is costly and
often hurts service availability to users
Fig. 1. Examples of MTD techniques based shufﬂing, diversity, or redundancy.
MOVING ELEMENTS OF MTD TECHNIQUES AT DIFFERENT LAYERS
TABLE III
Layers
Shufﬂing
Application
TCP/UDP port numbers
OS-Host
IP address
VM-Instance
Virtual IP address
Virtual Machine Manager (VMM)
Failover, Switchover
Hardware
Hardware replacement
MTD Techniques
Diversity
Web: Appache, IIS, GWS etc.
App: .Net Framework, Java, PHP etc.
Database: SQL server, MySQL, Oracle etc.
Others: Mail-server, Proxy-server etc.
Windows: Windows server 2003/2008, Windows 9.x, 8, 10 etc.
Linux: Redhat, Debian, Caldera etc.
Others: Kernel-based VM (KVM), Virtual-box (Vbox), IBM vSphere
Others: Unix, HP-UX etc.
Solaris
Same as OS
Xen
Vmware
ESXi
Intel
HP
Sun Solaris
Others: ARM, Atmega
Redundancy
Web service replica
Application replica
Database backup and replica
Other service replica
Host OS and virtual machine replica
Hypervisor’s replica
Hardware backups and replica
• How to move: ‘How to move’ deﬁnes how to change the
moving attributes (i.e., targets) to increase unpredictability
and/or uncertainty, leading to an attacker’s high confusion.
This is related to the three operation-based MTD classi-
ﬁcation components: shufﬂing, diversity, and redundancy
(SDR). Common MTD techniques include artiﬁcial diver-
sity [20, 72, 76, 129, 152] or randomizations [3, 10, 79,
83, 86, 88, 97, 100, 135, 138, 143, 156], which rearrange
or randomize the various system and network attributes
where each work can belong to shufﬂing, diversity, and/or
redundancy techniques. Fig. 1 depicts examples of how to
move the moving elements using MTD based on the SDR
classiﬁcation [4, 69].
• When to move: ‘When to move’ involves deciding the
optimal time to change from the current state of an MTD
system to a new state, invalidating information or progress
gained by an attacker in the current state. The three com-
mon types of adaptations are reactive, proactive, or hybrid
strategies. The reactive adaptation is based on an event
or an alert
that executes the adaptation as a response
to a message from the detection of suspicious activity.
Reactive MTD attempts to counter actions taken by an
attacker under the assumption that the attacker’s actions are
detected. The proactive adaptation triggers MTD techniques
by changing conﬁgurations or properties on a schedule,
with either ﬁxed or random intervals between adaptations.
Proactive adaptations ensure that any information gained by
6
Timeliness-based MTD
Time-based