**Author: LoRexxar'@Knownsec 404 Team  
Chinese Version:**

In our previous two research efforts, we focused on Chrome extension security. This time, we will shift our focus to an additional aspect of Chrome extensions by introducing the Zoomeye Tools. Through the development of this plugin, we aim to provide a different perspective on the issues that arise between various levels of the Chrome environment. Our primary goal is to develop a Zoomeye auxiliary plugin.

* [Download Zoomeye Tools](https://chrome.google.com/webstore/detail/zoomeye-tools/bdoaeiibkccgkbjbmmmoemghacnkbklj)

# Core and Function Design

In Zoomeye Tools, we have primarily added auxiliary functions for Zoomeye. Before designing these, it was essential to identify the necessary functionalities. We aimed to implement two major features:

1. **Zoomeye Interface Simplification**: A simplified version of the Zoomeye interface to display search results for the corresponding IP of the current domain.
2. **Auxiliary Functions**: Additional features such as one-click copying of left and right IPs from search results.

We will examine the components required for these two functions separately.

## Zoomeye MiniTools

For the auxiliary functions in Zoomeye, let's take an example requirement: a function that allows users to copy all IPs from the Zoomeye page, which can then be used in scripts or other applications.

Before starting, it is crucial to understand the permission system and communication methods between different levels in a Chrome extension. I covered this in my first article:
* [Getting Started with Chrome Extension Security (1) -- A New Chrome Extension](https://lorexxar.cn/2019/11/22/chrome-ext-1/#权限体系和api)

The process for this function can be broken down as follows:
1. The user clicks on the browser plugin icon.
2. The browser plugin reads the content of the current Zoomeye page.
3. The content is parsed, and the extracted data is written to the clipboard in the desired format.

### Implementation Details

- **User Interaction**: When the user clicks the browser plugin icon, the `popup.html` file displays the available functions, and the corresponding JavaScript code is executed.
- **Content Reading**: Since the `popup` script does not have permission to read the page content, we use `chrome.tabs.sendMessage` to communicate with the content script, which has the necessary permissions.
- **Data Parsing and Clipboard Writing**: After the content script reads the page content, it sends the data back via `sendResponse`. The `popup` script then writes the data to the clipboard using the following method:

```javascript
function copyText(text) {
    var w = document.createElement('textarea');
    w.value = text;
    document.body.appendChild(w);
    w.select();
    document.execCommand('Copy');
    w.style.display = 'none';
    return;
}
```

This creates a new `textarea` element, selects its content, and copies it to the clipboard.

## Zoomeye Preview

Unlike the mini tools, the Zoomeye Preview feature requires handling the Zoomeye authentication system. Most search results in Zoomeye require login, and multiple request APIs are verified using a JWT token stored in the browser's local storage during the login period.

### Architecture and Logic Flow

1. **User Clicks on Zoomeye Tools Plugin**: The plugin loads the `popup.html` page and executes the corresponding JavaScript code.
2. **Login Check**: The plugin checks the stored Zoomeye token in `chrome.storage` and requests `zoomeye.org/user` to verify if the login credentials are valid. If not, it prompts the user to log in.
3. **Redirect to Login Page**: When the user clicks the login button, the browser opens the Zoomeye login page. If the user is already logged in, the page redirects to Zoomeye and stores the credentials in `localStorage`.
4. **Credential Storage**: The background script uses `chrome.tabs.executeScript` to retrieve and store the login credentials in `chrome.storage` when the tab changes to a Zoomeye domain and the user is not logged in.
5. **Data Retrieval and Display**: After logging in, the user can use the preview function. The background script fetches data from `https://www.zoomeye.org/searchDetail?type=host&title=` and parses the JSON to get the IP data. The popup script then displays this data on the page.

### Manifest File

Here is the `manifest.json` file for the Zoomeye Tools extension:

```json
{
    "name": "Zoomeye Tools",
    "version": "0.1.0",
    "manifest_version": 2,
    "description": "Zoomeye Tools provides a variety of functions to assist the use of Zoomeye, including a proview host and many other functions",
    "icons": {
        "16": "img/16_16.png",
        "48": "img/48_48.png",
        "128": "img/128_128.png"
    },
    "background": {
        "scripts": ["/js/jquery-3.4.1.js", "js/background.js"]
    },
    "content_scripts": [
        {
            "matches": ["*://*.zoomeye.org/*"],
            "js": ["js/contentScript.js"],
            "run_at": "document_end"
        }
    ],
    "content_security_policy": "script-src 'self' 'unsafe-eval'; object-src 'self';",
    "browser_action": {
        "default_icon": {
            "19": "img/19_19.png",
            "38": "img/38_38.png"
        },
        "default_title": "Zoomeye Tools",
        "default_popup": "html/popup.html"
    },
    "permissions": [
        "clipboardWrite",
        "tabs",
        "storage",
        "activeTab",
        "https://api.zoomeye.org/",
        "https://*.zoomeye.org/"
    ]
}
```

# Uploading the Plugin to the Chrome Store

Chrome no longer allows self-signed plugins. To install this on Chrome, you must register as a Chrome extension developer, which costs $5. Chrome has a security review process, and if your plugin operates under multiple domain names, it will undergo additional scrutiny. You can complete this process through the Chrome Developer Dashboard.

# Instructions for Using Zoomeye Tools

## Installation

All Chrome browsers can download the plugin directly from the Chrome Web Store.

## Usage

Zoomeye Tools provides two main functions: Zoomeye Auxiliary Tools and Zoomeye Preview.

### Zoomeye Auxiliary Tools

This function works within the Zoomeye domain and does not require a login. Open Zoomeye, search for any banner, wait for the page to load, and click the plugin icon in the upper right corner to see the additional options. For example, selecting "Copy all IP with LF" will copy the following to the clipboard:

```
23.225.23.22:8883
23.225.23.19:8883
23.225.23.20:8883
149.11.28.76:10443
149.56.86.123:10443
...
```

### Zoomeye Preview

This function requires a Zoomeye login. In any domain, click "Login Zoomeye" in the upper right corner. If you have previously logged in, you will be automatically authenticated. Otherwise, you need to log in from the telnet404 page. After accessing the webpage, click the plugin icon to see the relevant IP information and open ports.

# Summary

Once approved, the plugin can be published on the Chrome Developer Center. The final download link for the Zoomeye Tools Chrome extension is:

* [Download Zoomeye Tools](https://chrome.google.com/webstore/detail/zoomeye-tools/bdoaeiibkccgkbjbmmmoemghacnkbklj)