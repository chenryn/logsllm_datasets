I have a login page, after login web route to page index with
`Router.push('/')`. In index page I have dynamic import some component depend
on `query.page`
    import * as React from 'react'
    import * as withRedux from 'next-redux-wrapper'
    import dynamic from 'next/dynamic'
    import Layout from '../src/components/share/Layout'
    import configStore from '../src/store/configStore.dev'
    export interface Props {
      page: string
      pageProps: any
    }
    export interface State {}
    interface DynamicBundleProps {
      page: string
      pageProps: any
    }
    const DynamicBundle = dynamic({
      modules: props => {
        const components: any = {}
        console.log(props.page)
        switch (props.page) {
          case '/lists/create': {
            components.Page = import('./lists/create')
            break
          }
          case '/lists/manage': {
            components.Page = import('./lists/manage')
            break
          }
          case '/templates/create': {
            components.Page = import('./templates/create')
            break
          }
          case '/templates/manage': {
            components.Page = import('./templates/manage')
            break
          }
          case '/campaigns/create': {
            components.Page = import('./campaigns/create')
            break
          }
          case '/campaigns/manage': {
            components.Page = import('./campaigns/manage')
            break
          }
          case '/settings': {
            components.Page = import('./settings')
            break
          }
          case '/': {
            components.Page = import('../src/components/Dashboard')
          }
          default: {
            components.Page = import('../src/components/Dashboard')
          }
        }
        console.log(components)
        return components
      },
      render: (props, { Page }) => {
        console.log(Page)
        return (
        )
      },
    } as any)
    class IndexPage extends React.Component {
      constructor(props) {
        super(props)
      }
      static async getInitialProps(context) {
        const { page, ...pageProps } = context.query
        return { page, pageProps }
      }
      render() {
        let { page, pageProps } = this.props
        return (
        )
      }
    }
    export default withRedux(configStore)(IndexPage)
But when I route to page index the first time after login, it build the page
and then throw error before this even run, so no page is show
      render: (props, { Page }) => {
        console.log(Page)
        return (
        )
      }
This is the error  
![nextjs_error](https://user-
images.githubusercontent.com/12032550/38983462-9a2c9b72-43ee-11e8-85f6-38fb5a5771c0.png)
This error only happen on the first page build and not happen when build out
production code
  * I have searched the issues of this repository and believe that this is not a duplicate.
## Expected Behavior
No error and page show normal
## Current Behavior
Throw error before render dynamic component
## Steps to Reproduce (for bugs)
## Context
## Your Environment
Tech | Version  
---|---  
next | ^6.0.0-canary.3  
node | 9.1.0  
OS | manjaro-linux  
browser | chromium  
etc |