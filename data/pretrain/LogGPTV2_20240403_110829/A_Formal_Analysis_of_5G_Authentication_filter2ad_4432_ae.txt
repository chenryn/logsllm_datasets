UE
¬K∧¬ch
¬skHN∧¬ch∗
∅
SN
¬K∧¬ch
−
∅
HN
¬K∧¬ch
¬skHN∧¬ch∗
∅
Table 2: Minimal assumptions for 5G AKA to achieve secrecy
properties. We omit the assumption that data that is sup-
posed to be secret is not revealed. See Table 1 for the legend.
The symbol ∗ indicates that there is no dishonest SNs at all
and the underlying property is always violated otherwise.
PFS(·): perfect-forward secrecy. −: property not relevant.
UE
SN
NI
I
SN
UE
¬K∧k-c∧¬ch ¬K∧k-c∧¬ch
P.o.V.
Partner
Agre.
on KSEAF
Weak agre.
Table 3: Minimal assumptions required for 5G AKA to
achieve authentication properties between UEs and SNs, as-
suming that the channel between HNs and SNs is binding.
Agreements on SUPI and SNname are not impacted.
¬K∧¬ch ¬K∧¬ch
[¬K∧k-c∧¬ch]
[¬K∧¬ch]
NI
I
March 2018). In the previous version (v0.7.1), the SUPI was sent
by the HN to the SN together with the challenge3, thus preventing
the aforementioned attack and making the binding assumption
unnecessary. However, the final version of the standard requires
this additional assumption. A similar looking issue, but between
two parts of the HN has been previously observed by [19], but it is
an entirely different concern than the one we describe.
Table 3 depicts additional security properties the 5G AKA proto-
col provides when the channel between the SNs and HNs is assumed
3To the best of our knowledge, the rationale behind the new version is to let HN wait
for the proof of the subscriber’s recent aliveness before disclosing the corresponding
SUPI to SNs that may be malicious or dishonest.
11
to be binding. Under this assumption, the previously violated prop-
erties are now satisfied under reasonable threat models. We only
show results for UEs and SNs to show how their guarantees change.
Implicit Authentication. A successful key-confirmation
5.2.2
roundtrip is required to obtain crucial security guarantees. More
precisely, this roundtrip is required for all agreement properties
from the subscribers’ point of view except weak agreement towards
the HNs. Indeed, an attacker can impersonate an SN towards a sub-
scriber but is unable to learn the KSEAF key the subscriber has
computed.
[TS 33.501, Sec. 5.1.2] The meaning of ‘implicit key authentica-
tion’ here is that authentication is provided through the successful
use of keys resulting from authentication and key agreement in sub-
sequent procedures.
The 5G standard only requires implicit authentication properties
for the subscribers. However, the standard neither specifies that
subscribers must wait for this key confirmation to be successful
before continuing nor does it specify this additional roundtrip as
part of the authentication method. As a consequence, the standard
makes a choice that we consider risky: it postpones the handling
and the verification of the additional key confirmation roundtrip
to all possible subsequent procedures (e.g., the NAS security mode
command procedure [TS 33.501, Sec. 6.7.2]). The standard fails to
specify a standalone authentication protocol that provides a rea-
sonable set of security guarantees since some critical properties are
provided only when the protocol is used in specific, appropriate
contexts.
More importantly, since the standard makes the overall security
of the authentication rest on subsequent procedures, it is very chal-
lenging, and out of the scope of the present paper, to assess if all
currently specified subsequent procedures (as well as future ones
that may be added) either correctly mandate the use of this key
confirmation roundtrip or do not require authentication properties
from the subscribers’ point of view towards the SNs. We believe
that there are at least two potential use cases where the above
weakness represents a vulnerability. First, the standard specifies
that SNs can initiate key change on-the-fly [TS 33.501, Sec. 6.9.4.1]
A Formal Analysis of 5G Authentication
D. Basin, J. Dreier, L. Hirschi, S. Radomirović, R. Sasse and V. Stettler
as well as switch security contexts [TS 33.501, Sec. 6.8], including
keys, parameters, etc.. This raises the question whether a malicious
SN or a fake base station could not fully impersonate a genuine
SN towards the subscribers by changing the session key immedi-
ately after 5G AKA. Second, in a scenario where subscribers use
the presence of SNs for geo-localization or for making sensitive
decisions (related to e.g., emergency calls), an active attacker could
impersonate an SN since the (mismatched) KSEAF key may not be
needed or used.
Finally, the key confirmation roundtrip is not the only option
to achieve the aforementioned missing security guarantees. We
provide and discuss in Section 5.3.3 two alternative solutions that
fix this issue while reducing neccessary communications.
5.2.3 On Privacy. As mentioned in Section 3.2.3, the 5G standard
aims to protect privacy only against passive attackers. 5G AKA
provides an identifier hiding mechanism and sends the SUPI only
in a randomized public key encryption (the Subscription Concealed
Identifier, SUCI). We show with Tamarin that the SUPI indeed
remains confidential, even against active attackers (see Table 2) and
hence also against passive attackers. 5G AKA thus defeats previous
active IMSI-catcher attacks [32], which relied on the subscribers
sending the IMSI (matching SUPI in 5G) in the clear. We also have
modelled a weak, passive attacker and have automatically proven
that he cannot trace subscribers.
We believe that active attackers are realistic threats for most
use cases. Moreover, since privacy is a real concern to the 3GPP,
5G AKA should protect subscribers’ privacy also against active
attackers. Unfortunately, we have found that this is not the case as
the 5G AKA protocol suffers from a traceability attack.
Using Tamarin (see our model [8]), we automatically find the
following attack in 5G AKA. In this attack, the attacker observes one
5G AKA authentication session and later replays the SN’s message
to some subscriber. From the subscriber’s answer (MAC failure or
Synchronization failure), the attacker can distinguish between the
subscriber observed earlier (in case of Synchronization failure) and
a different subscriber (in case of MAC failure). This attack can be
exploited to track subscribers over time. A variant of this attack
was first described in [5] for the AKA protocol as used in 3G.
5.3 Recommendations
Throughout the paper, we have highlighted weaknesses in the
standard and suggested improvements and refinements. We now
summarize some of them and propose more precise, provably secure
fixes as a replacement for the key confirmation and the binding
channel assumptions. Again, we emphasize the critical role played
here by our formal interpretation of the standard and our formal
analysis of the described 5G AKA protocol.
5.3.1 Explicit Requirements. As shown in Table 1 and discussed
in Section 3.3, the standard underspecifies security requirements
for the 5G AKA protocol. We suggest that the standard explicitly
requires the missing intended security properties. In particular, it
should be clear that 5G AKA aims at achieving injective agreement
on KSEAF between the subscribers and the SNs which is central
to the protocol’s purpose. The subscribers should obtain injective
agreement on KSEAF with the HNs; they are thereby assured the
12
HNs recently authorized this session, since KSEAF is derived from the
random R. Finally, the HNs should have injective agreement on KSEAF
with the subscribers, obtaining recent aliveness as a consequence.
5.3.2 Binding Channel. As discussed in Section 5.2.1, a recent up-
date in the standard introduced attacks under the given security
assumptions. There are two solutions to fix this: either the standard
explicitly states an additional security assumption (i.e., the channel
between the SNs and HNs must be binding), or alternatively the 5G
AKA protocol is fixed (without the need for a new assumption) us-
ing the following minor modification: ⟨SUPI, SUCI⟩ is sent instead
of SUPI in the final message from HN to SN. However, it is our
understanding that the binding assumption is a property that is
required for other reasons anyway, such as reliability.
5.3.3 On the Key Confirmation. We already have discussed the
danger of missing key confirmation in 5G AKA in Section 5.2.2.
We now propose two simple modifications to the protocol that
would make key confirmation redundant and unnecessary, there-
fore reducing the number of roundtrips that are needed to achieve
intended security guarantees. Before explaining our fix, note that
the key confirmation was necessary in the first place because the
HNs never commit to a specific SNname when computing the chal-
lenge R, AUTN. Only the key KSEAF is bound to SNname, but the
challenge itself is not.
Our first fix consists of binding AUTN to SNname so that sub-
scribers directly have the proof the HN has committed to a spe-
cific SNname, without even using KSEAF. Formally, AUTN currently
refers to ⟨SQNHN ⊕ AK, MAC⟩ where MAC = f1(K, ⟨SQNHN, R⟩). In
our fix, MAC is replaced by f1(K, ⟨SQNHN, R, SNname⟩). Therefore,
the subscribers can verify the authenticity of the challenge that
commits to a specific SNname. We have formally verified [8] that a
key-confirmation roundtrip is no longer necessary with this fix.
Our second, alternative, fix consists in replacing the full key-
confirmation roundtrip by an unidirectional key confirmation from
the SN only. More precisely, we could add (any) message MACed
with a key derived from KSEAF, sent by the SNs to the subscribers,
at the very end of the protocol. We have proven with Tamarin
that no further guarantees are provided by a full key confirmation,
compared to our (less costly) unidirectional key confirmation.
5.3.4 On Privacy. We recall that the functions f1 and f1∗ are not
explicitly required to protect the confidentiality of their inputs (see
Section 3.1.2). This is however necessary for privacy as these MAC
functions take SQN as input, among others. If these functions were
not confidentiality-preserving, a passive attacker could learn the
subscribers’ SQNs and perform location attacks [32] by tracking
nearby SQNs over time or perform activity monitoring attacks [12].
We also recommend for the standard to explicitly aim at protect-
ing privacy against active attackers and take steps in this direction.
Unfortunately, this would involve significant modifications to the
protocol since at least the failure reasons (MAC/Synchronization
failure) must be hidden from the attacker [5, 22] and the SQN con-
cealment mechanism should be strengthened against active attack-
ers [12], possibly by using proper encryption or using an anonymity
key AK based on subscriber-generated randomness. We leave a com-
plete evaluation of possible solutions for future work and we expect
our model to be valuable for this process.
A Formal Analysis of 5G Authentication
D. Basin, J. Dreier, L. Hirschi, S. Radomirović, R. Sasse and V. Stettler
5.3.5 Redundancies. A close look at the cryptographic messages
(see detailed list in Appendix A) and their purposes shows many
redundancies. For instance, in RES∗, the proof of possession of K
is in CK, IK, and RES. R appears to be redundant as well. Simi-
larly, SNname is redundant in the key derivation of KSEAF. Legacy
reasons may explain these redundancies, but these design choices
could be questioned and the protocol simplified.
5.3.6 On the Role of SQN. The purpose of the SQN counters is to
provide replay protection for the subscribers. This mechanism was
introduced in 3G, when the USIM was incapable of generating good
randomness. This is no longer the case in 5G, where USIMs can
perform randomized asymmetric encryption (required to compute
SUCI from SUPI). Therefore, authentication protocols should be
rethought and more standard challenge-response mechanisms could
be used to replace the SQN counters. This would benefit the current
authentication methods, which can suffer from de-synchronization
and must keep the privacy sensitive SQNs up-to-date and sometimes
fail to protect them against attackers (see Section 5.3.4).
5.3.7 On the Benefits of Formal Methods. As argued throughout
this section, the standard could be simplified and improved in var-
ious directions. We recall that formal models, such as our model
of the 5G AKA protocol, have proven to be extremely valuable to
quickly assess the security of such modifications and simplifications.
Our model can serve as a basis to accompany the standard’s future
evolution and provides a tool for quickly evaluating the security of
modification proposals.
6 CONCLUSION
We have formally analyzed one of the two authentication methods
in 5G, the one which enhances the previous variant currently used
in 4G. This included a detailed analysis of the standard to identify all
assumptions and security goals, a formal model of the protocol and
security goals as specified in the standard, the automated security
analysis using the Tamarin prover, and a detailed discussion of our
findings. Our models are substantially more detailed than those of
previous work and account for details of the state machine, counters,
the re-synchronization procedures, and the XOR operations.
While analyzing the standard we discovered that security goals
and assumptions are underspecified or missing, including central
goals like agreement on the session key. Moreover, our analysis in
Tamarin shows that some properties are violated without further
assumptions. A striking example of this is agreement properties on
the session key. We also critique the standard’s choice of implicit
authentication and the lack of key confirmation as this introduces
weaknesses if the protocol is used in ways other than intended.
Finally, our privacy analysis shows that the 5G version of AKA still
fails to ensure unlinkability against an active attacker; this scenario
is, in our opinion, completely realistic.
As future work, we plan to analyze other variants of the AKA
protocol, notably those used in 3G and 4G networks, to see which
security guarantees they provide compared to 5G AKA. We will also
follow the future development of the 5G standard as our analysis can
serve as the basis for improving the protocol’s design, in particular
to evaluate ideas and avoid regressions. For example, we identified
one weakness that was introduced in a recent update (from v0.7.1
13
[2] 2018. Tamarin prover. https://github.com/tamarin-prover/tamarin-prover/
releases/tag/1.4.0. Accessed: 2018-05-08.
[3] 3GPP. 2001. 3G Security: Formal Analysis of the 3G Authentication Protocol. TS
[4] 3GPP. 2018. Security architecture and procedures for 5G system. TS 33.501,
2018-05-05.
33.902, v4.0.0.
v15.1.0.
to v0.8.0). This is a major benefit of tool-based analysis of protocol
design: once the model is constructed, one can quickly test changes
and evaluate different design options.
ACKNOWLEDGMENTS
We are grateful for the support from the EUs Horizon 2020 research
and innovation program under ERC Grant No.: 645865-SPOOC. The
authors also thank Huawei Singapore Research Center for their
support for parts of this research.
REFERENCES
[1] 2018. The Tamarin Manual. https://tamarin-prover.github.io/manual/. Accessed:
[5] Myrto Arapinis, Loretta Mancini, Eike Ritter, Mark Ryan, Nico Golde, Kevin Re-
don, and Ravishankar Borgaonkar. 2012. New privacy issues in mobile telephony:
fix and verification. In Proceedings of the 2012 ACM conference on Computer and
communications security. ACM, 205–216.
[6] David Basin, Cas Cremers, and Simon Meier. 2013. Provably repairing the ISO/IEC
9798 standard for entity authentication. Journal of Computer Security 21, 6 (2013),
817–846.
[7] David Basin, Cas Cremers, Kunihiko Miyazaki, Saša Radomirović, and Dai Watan-
abe. 2015. Improving the security of cryptographic protocol standards. IEEE
Security & Privacy 13, 3 (2015), 24–31.
[8] David Basin, Jannik Dreier, Lucca Hirschi, Saša Radomirović, Ralf Sasse, and
Vincent Stettler. 2018. Tamarin models, proofs and instructions for reproducibil-
ity. https://github.com/tamarin-prover/tamarin-prover/tree/develop/examples/
ccs18-5G. Accessed: 2018-08-10.
[9] David Basin, Jannik Dreier, and Ralf Sasse. 2015. Automated symbolic proofs of
observational equivalence. In Proceedings of the 22nd ACM SIGSAC Conference on