### Minimal Assumptions for 5G AKA to Achieve Secrecy Properties

Table 2 outlines the minimal assumptions required for 5G AKA to achieve secrecy properties. We assume that data intended to be secret is not revealed. The symbol ∗ indicates that there are no dishonest SNs, and the underlying property is always violated otherwise. PFS(·) stands for perfect forward secrecy, and a dash (−) denotes that the property is not relevant.

| UE | ¬K∧¬ch | ¬skHN∧¬ch∗ | ∅ |
|----|---------|--------------|-----|
| SN | ¬K∧¬ch | -            | ∅   |
| HN | ¬K∧¬ch | ¬skHN∧¬ch∗  | ∅   |

**Legend:**
- ¬K: No key compromise
- ¬ch: No channel compromise
- skHN: Secret key held by Home Network
- ∅: No additional assumptions

### Minimal Assumptions for 5G AKA to Achieve Authentication Properties

Table 3 shows the minimal assumptions required for 5G AKA to achieve authentication properties between UEs and SNs, assuming the channel between HNs and SNs is binding. Agreements on SUPI and SNname are not impacted.

| UE | SN | NI | I | P.o.V. | Partner | Agreement on KSEAF | Weak Agreement |
|----|----|----|---|--------|---------|--------------------|----------------|
| ¬K∧¬ch | ¬K∧¬ch | [¬K∧k-c∧¬ch] | [¬K∧¬ch] | NI | I | Yes | Yes |

**March 2018 Update:**
In the previous version (v0.7.1), the SUPI was sent by the HN to the SN together with the challenge, preventing the attack and making the binding assumption unnecessary. However, the final version of the standard requires this additional assumption. A similar issue, but between two parts of the HN, has been observed in [19], though it is a different concern.

### Additional Security Properties with Binding Channel

Table 3 depicts additional security properties the 5G AKA protocol provides when the channel between the SNs and HNs is assumed to be binding. Under this assumption, previously violated properties are now satisfied under reasonable threat models. Only results for UEs and SNs are shown to illustrate how their guarantees change.

#### Implicit Authentication

A successful key-confirmation roundtrip is required to obtain crucial security guarantees. Specifically, this roundtrip is necessary for all agreement properties from the subscribers' point of view, except for weak agreement towards the HNs. An attacker can impersonate an SN towards a subscriber but cannot learn the KSEAF key computed by the subscriber.

[TS 33.501, Sec. 5.1.2] "Implicit key authentication" means that authentication is provided through the successful use of keys resulting from authentication and key agreement in subsequent procedures.

The 5G standard only requires implicit authentication properties for subscribers. However, it does not specify that subscribers must wait for key confirmation before continuing, nor does it include this roundtrip as part of the authentication method. This choice postpones handling and verification to subsequent procedures, such as the NAS security mode command procedure [TS 33.501, Sec. 6.7.2]. The standard fails to provide a standalone authentication protocol with a reasonable set of security guarantees, as some critical properties are only provided in specific contexts.

Since the standard relies on subsequent procedures for overall security, it is challenging to assess if all specified procedures correctly mandate the use of key confirmation or do not require authentication properties from the subscribers' perspective. Two potential vulnerabilities are:
1. Malicious SNs or fake base stations could impersonate genuine SNs by changing the session key immediately after 5G AKA.
2. In scenarios where subscribers use SNs for geo-localization or sensitive decisions, an active attacker could impersonate an SN since the mismatched KSEAF key may not be needed or used.

### Recommendations

#### Explicit Requirements

The standard should explicitly require the missing intended security properties. Specifically, 5G AKA should aim to achieve injective agreement on KSEAF between subscribers and SNs, ensuring that HNs recently authorized the session and that subscribers and HNs have recent aliveness.

#### Binding Channel

To fix the introduced attacks, the standard can either state an additional security assumption (the channel between SNs and HNs must be binding) or modify the 5G AKA protocol by sending ⟨SUPI, SUCI⟩ instead of SUPI in the final message from HN to SN. The binding assumption is likely required for other reasons, such as reliability.

#### Key Confirmation

Two modifications can make key confirmation redundant:
1. Bind AUTN to SNname, allowing subscribers to verify the authenticity of the challenge without using KSEAF.
2. Replace the full key-confirmation roundtrip with a unidirectional key confirmation from the SN, adding a MACed message derived from KSEAF at the end of the protocol.

#### Privacy

Functions f1 and f1* should protect the confidentiality of their inputs to prevent passive attackers from learning SQNs and performing location or activity monitoring attacks. The standard should explicitly aim to protect privacy against active attackers, which would involve significant modifications, such as hiding failure reasons and strengthening SQN concealment mechanisms.

#### Redundancies

Many cryptographic messages and their purposes show redundancies, such as RES*, CK, IK, and RES. These design choices could be simplified.

#### Role of SQN

SQN counters provide replay protection but are no longer necessary in 5G, where USIMs can generate good randomness. Standard challenge-response mechanisms could replace SQN counters, benefiting current authentication methods.

#### Benefits of Formal Methods

Formal models, such as our model of the 5G AKA protocol, are valuable for quickly assessing the security of modifications and simplifications. Our model can serve as a basis for future standard evolution and provide a tool for evaluating the security of proposed changes.

### Conclusion

We have formally analyzed one of the two authentication methods in 5G, enhancing the previous 4G variant. This included a detailed analysis of the standard, a formal model, automated security analysis using Tamarin, and a discussion of findings. Our models account for details of the state machine, counters, re-synchronization procedures, and XOR operations.

Our analysis reveals underspecified or missing security goals and assumptions, including central goals like agreement on the session key. Tamarin analysis shows that some properties are violated without further assumptions. We critique the standard's choice of implicit authentication and lack of key confirmation, introducing weaknesses if the protocol is used in unintended ways. Our privacy analysis shows that 5G AKA still fails to ensure unlinkability against active attackers.

Future work includes analyzing other AKA protocol variants, following the 5G standard's development, and evaluating ideas to avoid regressions. Tool-based analysis allows quick testing of changes and evaluation of different design options.

### Acknowledgments

We thank the EU's Horizon 2020 research and innovation program under ERC Grant No.: 645865-SPOOC and Huawei Singapore Research Center for their support.

### References

[1] 2018. The Tamarin Manual. https://tamarin-prover.github.io/manual/. Accessed: 2018-05-08.
[2] 2018. Tamarin prover. https://github.com/tamarin-prover/tamarin-prover/releases/tag/1.4.0. Accessed: 2018-05-08.
[3] 3GPP. 2001. 3G Security: Formal Analysis of the 3G Authentication Protocol. TS 33.902, v4.0.0.
[4] 3GPP. 2018. Security architecture and procedures for 5G system. TS 33.501, v15.1.0.
[5] Myrto Arapinis, Loretta Mancini, Eike Ritter, Mark Ryan, Nico Golde, Kevin Redon, and Ravishankar Borgaonkar. 2012. New privacy issues in mobile telephony: fix and verification. In Proceedings of the 2012 ACM conference on Computer and communications security. ACM, 205–216.
[6] David Basin, Cas Cremers, and Simon Meier. 2013. Provably repairing the ISO/IEC 9798 standard for entity authentication. Journal of Computer Security 21, 6 (2013), 817–846.
[7] David Basin, Cas Cremers, Kunihiko Miyazaki, Saša Radomirović, and Dai Watanabe. 2015. Improving the security of cryptographic protocol standards. IEEE Security & Privacy 13, 3 (2015), 24–31.
[8] David Basin, Jannik Dreier, Lucca Hirschi, Saša Radomirović, Ralf Sasse, and Vincent Stettler. 2018. Tamarin models, proofs and instructions for reproducibility. https://github.com/tamarin-prover/tamarin-prover/tree/develop/examples/ccs18-5G. Accessed: 2018-08-10.
[9] David Basin, Jannik Dreier, and Ralf Sasse. 2015. Automated symbolic proofs of observational equivalence. In Proceedings of the 22nd ACM SIGSAC Conference on Computer and Communications Security. ACM, 1075–1086.