4 In SiLK, “out” traffic does not include traffic to or from ports 80, 8080, or 443; those are included in “outweb”
traffic.
CMU/SEI-2012-TR-006 | 11
If this number seems small given the size of the netblock being analyzed, remember that the
sensors have been placed on the external side of perimeter networking devices. It is very likely
that client traffic is going through proxies or Network Address Translation (NAT) servers prior to
reaching the sensor.
It may be helpful for larger networks to aggregate the IP addresses into netblocks.5 The following
example includes the command and output.
$ rwsetcat talkers.set --network-structure=X
203.0.113.0/27| 9
203.0.113.32/27| 8
203.0.113.64/27| 5
203.0.113.96/27| 1
203.0.113.160/27| 4
203.0.113.192/27| 13
If necessary, you can profile the addresses in each block separately.
Once you complete these steps, you will no longer need the TCP talkers and other talkers lists.
4.4 Supplemental Analysis and Validation
Some network monitoring systems may have visualization capabilities that chart the most active
hosts or services, plot port usage across time,6 or view a graph of IP addresses versus ports. If
these tools are available, use them to get an overview of the traffic and hosts on the network, but
be careful about relying on them for profiling. In general, visualizations are not detailed enough to
get an accurate picture of what is going on in a network, but they can help guide the process. Once
the process is complete, visualizations become important for reporting and reference material.
Use graphs to supplement the analysis, but do not rely on them as a final authority.
Use the information gathered previously about the network to validate the active hosts. For
example, if there are supposed to be 10 servers in the demilitarized zone (DMZ) but the active
hosts list has only five entries, there may be either a misconfiguration on the network or a
misplaced sensor.
4.5 Anomalies
You should now have a list of active hosts on the network, as seen by the outside world; however,
in rare cases, some of this traffic may be merely passing through (transiting) the network. Check
for transit traffic by looking for traffic leaving the network that is not from an internal host.
Conversely, it may also be worthwhile to check for any traffic heading into the network from an
internal host (if inbound traffic is available) and for any traffic heading out of the network to an
internal host. The following example shows the command and results of this step.
5 Choose from –-network-structure=[A,B,C,X] to define /8, /16, /24, or /27 address blocks, respectively.
6 This is also helpful for finding proxy servers because of their unique port usage pattern.
CMU/SEI-2012-TR-006 | 12
$ rwfilter sample.rw --type=out,outweb --not-sipset=talkers.set \
--print-statistics
Files 1. Read 10985967. Pass 0. Fail 10985967.
$ rwfilter sample.rw --type=in,inweb --sipset=talkers.set \
--print-statistics
Files 1. Read 10985967. Pass 0. Fail 10985967.
$ rwfilter sample.rw --type=out,outweb --dipset=talkers.set \
--print-statistics
Files 1. Read 10985967. Pass 0. Fail 10985967.
In the sample network, no transit traffic was found. In fact, the collection system is configured
with the correct netblock of internal IP addresses and set to record internal-to-internal
communication separately from other communication. Understand how the specific collection
system for the network being profiled is configured before moving on with this process.
Asymmetric routing can also create difficulties for interpreting flow traffic and may occur in
networks with two or more active internet connections. If sensors do not cover the alternate
connections, traffic may not be collected from one direction of the flow. Different flow tools
handle asymmetric routing in different ways, so it is important to be aware of how the netflow
analysis tool you’re using handles asymmetric routing and to adjust the procedure accordingly.
For example, with the SiLK flow analysis suite, unique flows are determined based on protocol,
source IP, source port, destination IP, and destination port. SiLK creates a separate flow for each
direction of an actual flow. Therefore, the choice of using outbound traffic only for finding active
talkers was appropriate because asymmetric routing was not a factor.
CMU/SEI-2012-TR-006 | 13
5 Catalog Common Services
After identifying the active hosts on the network, continue the profile by inventorying the services
that typically constitute the majority of bandwidth usage and business operations, such as web
traffic (both client and server) and email. Once you have carved these protocols out of the data
set, start working on other services that are likely to be on the network and also visible to
instrumentation: Virtual Private Network (VPN), Domain Name Server (DNS), and FTP, and
other less used but common protocols. This section includes a template for cataloging other
services that may not specifically be listed but make up a large part of the traffic volume on the
network.
5.1 Web Servers
Web servers are often the easiest asset to profile and will commonly constitute a large percentage
of web traffic. Start by looking for connections into the network destined to a service running on
ports 80, 8080, or 443. Also consider whether any other web services are running on the network
that would require adding a port to this list, such as streaming services or a port configuration
different from the default. For example, web services sometimes reside on ports 81 or 82.
5.1.1 The Process
1. Compile a list of the busiest IP addresses with connections coming from ports 80, 8080, and
443. Filter out flows that do not complete a TCP handshake (the SYN, SYN-ACK, ACK traffic
pattern used to initiate TCP connections) by selecting only flows that have an ACK flag set and
that are at least four packets long. This will eliminate scans and accidental attempts to connect.
Choose only addresses that make up at least 1% of the traffic being profiled (in bytes). These are
the busiest web servers. The SiLK command and output from the sample data for this process
follow.
$ rwfilter sample.rw --type=outweb \
--sport=80,443,8080 --protocol=6 --packets=4- --ack-flag=1 \
--pass=stdout \
| rwstats --fields=sip --percentage=1 --bytes
INPUT: 190814 Records for 24 Bins and 15207959195 Total Bytes
OUTPUT: Top 7 bins by Bytes (1% == 152079591)
sIP| Bytes| %Bytes| cumul_%|
203.0.113.69| 7888143831| 51.868523| 51.868523|
203.0.113.28| 3272828647| 21.520499| 73.389022|
203.0.113.198| 2631884565| 17.305968| 90.694990|
203.0.113.194| 652195072| 4.288511| 94.983501|
203.0.113.196| 255865129| 1.682442| 96.665944|
203.0.113.44| 254700968| 1.674787| 98.340731|
203.0.113.197| 152764557| 1.004504| 99.345235|
The result of the above command is a list of seven IP addresses accounting for 99.34% of the web
server traffic. Save this list of IP addresses as a file named web_servers, as in the following
example. It will be needed several times during the profiling process.
CMU/SEI-2012-TR-006 | 14
$ rwfilter sample.rw --type=outweb \
--sport=80,8080,443 --protocol=6 --packets=4- --ack-flag=1 \
--pass=stdout \
| rwstats --fields=sip --percentage=1 --bytes --no-titles \
| cut -f 1 -d "|" \
| rwsetbuild > web_servers.set
2. Next, associate each IP address with the web ports with which it is interacting. Place these
addresses and their associated ports into the profile table. To find the associated ports, filter
outbound traffic from the web server addresses for source ports 80, 443, and 8080, as in the
following example.
$ rwfilter sample.rw --type=outweb \
--sport=80,443,8080 --protocol=6 --packets=4- --ack-flag=1 \
--sipset=web_servers.set \
--pass=stdout \
| rwuniq --fields=sip,sport
sIP|sPort| Records|
203.0.113.198| 80| 483|
203.0.113.197| 80| 473|
203.0.113.196| 80| 5|
203.0.113.194| 443| 2823|
203.0.113.69| 80| 2567|
203.0.113.69| 443| 200|
203.0.113.44| 80| 2|
203.0.113.44| 443| 83|
203.0.113.28| 8080| 2|
The resulting table should look something like Table 6.
Table 6: Potential Web Servers for the Sample Network
Internal IP Internal Port External IP External Port
203.0.113.198 80, 443 * *
203.0.113.197 80 * *
203.0.113.196 80 * *
203.0.113.194 443 * *
203.0.113.69 80, 443 * *
203.0.113.44 80, 443 * *
203.0.113.28 8080 * *
This is a list of potential web servers that will have to be validated because some of the traffic to
these servers may not really be web server traffic. It is also possible that some of the actual web
servers on the network have not been detected in this step but will be detected in other steps in the
profiling process. It is important to keep the profile table updated.
5.1.2 How to Validate Findings
Web servers should be easy to validate using a web browser. Manually go to each site, checking
the address with both HTTP and HTTPS to verify that the associated ports in the table are correct.
If possible, do this from outside the network, as the server may be configured to accept different
types of traffic from the internal network, which could conflict with earlier findings. A
CMU/SEI-2012-TR-006 | 15
nonresponsive server could mean that the server is offline, it has been configured not to accept
connections from certain networks, or it has been taken over for malicious purposes. Consider
documenting a brief description of the services running on the server for future reference.
Resolve each IP address to a domain name using nslookup (reverse and forward) or some other
tool and ensure that the result matches what is expected on the network. If it does, add the domain
name as a field in the profile table. If it does not match, it may be an old server that no one
realized was still running on the network, or it may be an anomaly. The reverse record may not
match if the machine is in a shared hosting environment.
Check the server certificate of the servers associated with port 443. The common name on the
certificate should match the server’s domain name. If it does not match, there could be a security
concern. Also, confirm that the certificate has not expired; this is a common cause of errors
received by clients accessing sites over HTTPS that have not been properly maintained.
If it is still unclear which of these addresses are actually web servers, try looking at the external
addresses connecting to them. If there are only a few, it could be a web server locked down to a
few addresses, or possibly a point-to-point SSL VPN; but if there are many external sources, it
probably is an actual web server. Examine the number of distinct external addresses, their address
blocks, and the timing of requests to get a feel for whether the traffic is actual HTTP traffic. Some
flow analysis tools attempt to label traffic based on content characteristics. This can be very
helpful when trying to identify traffic that is not obvious based on header information.
Several of the IP addresses from the sample network listed as potential web servers were validated
by using nslookup and by browsing to their addresses. Even though there is no traffic to port 443
on several of the servers, on others the port is open and presents an expired certificate. Also, some
of the sites are using mirrors, such that multiple IP addresses are actually assigned to the same
website. This is common for servers that receive heavy traffic.
One of the servers on the same network could not be validated using the above simple methods,
so we took a closer look at the inbound TCP traffic to that address. Address 203.0.113.28 served
only one IP address during the sample time frame as seen in the following example.
$ rwfilter sample.rw --type=outweb --sport=80,443,8080 --packets=4- \
--protocol=6 --ack-flag=1 --saddress=203.0.113.28 --pass=stdout \
| rwuniq --fields=dip
dIP| Records|
198.51.100.12| 1|
In the example below, the records that resulted from the command show that the traffic from this
external IP is composed of one very long flow. The flow is divided into half-hour chunks because
that is how SiLK collects flows.
$ rwfilter sample.rw --type=outweb \
--sport=80,8080,443 --protocol=6 --packets=4- --ack-flag=1 \
--saddress=203.0.113.28 \
--pass=stdout \
| rwcut --fields=stime,etime,bytes,flags
sTime| eTime| bytes| flags|
2011/09/28T00:15:32.577|2011/09/28T00:45:32.568| 68169846| PA |
2011/09/28T00:45:32.634|2011/09/28T01:15:32.567| 68272876| PA |
CMU/SEI-2012-TR-006 | 16
2011/09/28T01:15:32.609|2011/09/28T01:45:32.605| 68270589| PA |
2011/09/28T01:45:32.643|2011/09/28T02:15:32.640| 68252975| PA |
2011/09/28T02:15:32.646|2011/09/28T02:45:32.635| 68334416| PA |
2011/09/28T02:45:32.658|2011/09/28T03:15:32.653| 68310047| PA |
...| ...| ...| ...|
2011/09/28T23:45:33.247|2011/09/29T00:15:33.218| 68245623| PA |
This is not typical traffic to a web server, so we deleted this IP address from the table of web
servers. We show how to profile it in a later section.
5.1.3 Anomalies
The following is a list of anomalies that should be considered when determining which IP
addresses are web servers.
• client traffic
Servers normally do not have legitimate client traffic. Expected traffic would be from
software updates or an administrator troubleshooting a problem on the server. If there is a
web server with a lot of client traffic, it is probably some type of gateway and should go into
a different category.
• streaming media services
Some servers are meant for serving streaming media to clients. These servers have open
ports that are different from the HTTP and HTTPS ports. Check for traffic coming into the
network using UPD and TCP ports such as 1935, 1755, and 554.
• SSL VPNs
Long-duration, high-volume connections on port 443 could be SSL VPN connections. More
discussion is in Section 5.5 on VPNs.
• one server that sits on many IP addresses
This situation should become clear upon resolving the IP addresses to DNS names. This is
not a security issue, but it should be noted in the profile table.
• many websites that sit on one IP address
This should also become clear when many IP addresses resolve to the same DNS name with
a forward lookup (not necessarily a reverse lookup). Again, note this in the profile table.
• business continuity and server failover
If the network has backup servers that are either turned off or are handling only small
amounts of traffic until they are needed, the servers probably will not be observed in this
section. Use the information gathered at the beginning of this exercise to list these servers in
the profile table and note that they are backup servers.
• spurious RSTs
Web servers often send reset packets to close a connection instead of waiting for the standard
TCP FIN-ACK. This action is harmless and does not have an effect on profiling the asset.
• mobile devices and embedded web servers
With today’s technology, a surprising number of devices have web servers embedded in
them; common devices include VOIP phones, mobile devices, print servers, and copiers.
CMU/SEI-2012-TR-006 | 17
5.1.4 Results
Sample network results from the validated web servers are in Table 7.
Table 7: Validated Web Servers for the Sample Network
Proto. Internal External IPs External External Names Comments
Ports Ports
203.0.113.198 – example.org
6 80, 443 * * * Redirects to st.example.org
203.0.113.197 – kirk.st.example.org
6 80,443 * * * Expired SSL certificate
203.0.113.196 – spock.example.org
6 80, 443 * * Expired SSL certificate
203.0.113.194 – webmail.st.example.org
6 443 * * * Reverse DNS is misspelled
203.0.113.69 – www01.st.example.org
6 80, 443 * * *
203.0.113.44 – vss1.st.example.org
6 80, 443 * * * VMware View; DNS resolve
directs to 203.0.113.198
CMU/SEI-2012-TR-006 | 18
5.2 Client Web
Client web traffic is usually the most common traffic on any network. For the purposes of this
report, client web traffic will include HTTP, HTTPS, Shockwave, and other streaming media. It is
important to separate web traffic from services like SSH, VPN, and file sharing because these
services are managed very differently than web traffic.
The ports listed in Table 8 are the most common ports for web client traffic. You will find any
additional web client protocols when you analyze leftover ports.
Table 8: Services for Normal Client Web Traffic
Protocol Port
HTTP 80/TCP, 8000/TCP, 8080/TCP
HTTPS 443/TCP
Shockwave 1935/TCP
Microsoft Streaming Media 1755/UDP, 1755/TCP, 554/TCP, 554/UDP
HTTP Live Streaming Standard HTTP ports
5.2.1 The Process
The process for finding web clients is similar but opposite to the process for finding web servers.
Instead of looking for traffic coming from web ports on the internal host, look for traffic going to
web ports on an external host, as shown in Figure 8.
Port Port
80 80
WebServer External WebClient External
Figure 8: Process for Finding Web Clients
1. Start by filtering for legitimate TCP traffic on the ports in Table 8, as shown in the following
command. The traffic should be outbound to the ports on IP protocol 6 (TCP) with at least four
packets per flow and the ACK flag set.
$ rwfilter sample.rw --type=out,outweb \