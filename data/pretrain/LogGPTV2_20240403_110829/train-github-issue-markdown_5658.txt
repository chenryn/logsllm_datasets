    julia> module temp
           struct x end
           end
    Main.temp
    julia> using Main.temp
    julia> f(::temp.x) = 1
    f (generic function with 1 method)
    julia> f(temp.x())
    1
    julia> module temp
           struct x end
           end
    WARNING: replacing module temp.
    Main.temp
    julia> f(temp.x())
    ERROR: MethodError: no method matching f(::Main.temp.x)
    Closest candidates are:
      f(::Main.temp.x) at REPL[3]:1
    Stacktrace:
     [1] top-level scope
       @ REPL[6]:1
In this case perhaps there might be a way to indicate that the present module
differs from the one for which the method had been added? The closest
candidate is confusing otherwise.