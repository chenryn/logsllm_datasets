**App #2**
该APP提供保存用户凭证，同时建议加密整个设备以防盗。这是可以理解的，但是犯罪者不是要偷电话，只是要“感染”它。在App #2中发现了存在于APP
#1中的同样的问题，用户名和密码以纯文本的形式存储在 prefs file.{?????????}.xml file中（问号表示由APP随机生成的字符）。
VIN存储在下一个文件中。
随着实验的深入，我们得到了更多的信息。开发人员甚至没有时间去实施应用程序代码的完整性验证，并且由于某些原因，他们也忘记了做代码混淆。结果就是我们很容易的便能修改LoginActivity代码。
APP保留了自己的功能性，但是在注册过程中输入的用户名和密码在登录尝试后会立即显示在屏幕上。
**App #3**
与此APP配对的汽车可选择性的配置一个控制模块，控制模块可启动发动机和解锁车门。
由经销商安装的每个模块都有一个带有访问代码的贴纸，贴纸会交到车主手中，这样即便知道VIN也不可能将汽车链接到其他凭证。
但是仍然有其他的攻击可能性：首先，APP很小，它的APK大小为180 KB; 其次，整个APP将其调试数据记录到了保存在SD卡上的文件中。
在LoginActivity开始时记录日志
**转储日志文件的位置**
不幸的是日志记录只有在以下标志被设置在APP中时才能被启用：android：debuggable =“true”。
公共版本的APP是没有标志的，但我们可以将它插入到APP中。为此，我们将使用Apktool
utility。启动编辑过的APP并尝试登录之后，设备的SD卡将会创建一个带有TXT文件的marcsApp文件夹。在我们的示例中，账户的用户名和密码已经输出到文件中。
当然，说服受害者删除原来的APP，并安装一个相同的带有调试标志的APP并不是那么容易。但是仍然是可以实现的，方法是将受害者诱导到一个网站去下载一个重要的更新，将编辑过的APP和安装手册伪装为更新。从经验上来说，病毒制作者善于使用社工的方法。现在向APP添加将日志文件发送到指定服务器或以SMS消息的形式发送到电话号码的功能并不是难事。
**App #4**
该APP允许将现有的VIN绑定到任何凭证，但是会发送请求到汽车的内置电脑上。因此，不成熟的VIN盗窃将不会有助于黑客入侵车辆。
但是，被测试的APP对于其窗口上的overlays是没有防御力的。如果入侵者获得了系统的用户名和密码，那么他便能够解锁车门。
令人遗憾的是，该APP将系统的用户名以及大量的其他有趣的数据以明文储存，例如汽车的制造、VIN和汽车的号码。所有的这些数据都位于MyCachingStrategy.xml文件中。
**App #5**
为了将汽车连接到安装了该APP的智能手机上，需要知道汽车内置电脑上显示的PIN。这就意味着和App #4的情况一样，知道VIN是不够的，必须从汽车内部攻破。
**App #6**
该APP由俄罗斯的开发人员制作，区别于其同行，该APP使用车主的电话号码作为授权。 这种方法对任何车主都会造成相当程度的风险，只需执行一个Android
API函数即可获得系统的用户名，发起攻击。
**App #7**
我们注意到，参与实验的最后一个APP将用户名和密码以纯文本的形式存储在credentials.xml文件中。
如果智能手机被具有超级用户权限的木马病毒感染了，那么该文件的窃取将轻而易举。
**汽车被盗是如何发生的**
理论上，拿到凭证后，入侵者便能够获得汽车的控制权，但这并不意味着就能够简单的把车开走，必须有钥匙才能启动汽车。因此，偷车贼进入车里之后，会使用编程单元写一个新的密钥放入到汽车的车载系统中。几乎所有的APP都允许解锁车门，这样就绕过了汽车的报警系统。因此，偷车贼便可以在不破坏任何东西的情况下悄悄的将车迅速偷走。
值得注意的是，车控APP带来的风险不仅仅是汽车盗窃，入侵汽车并故意篡改某些元素可能导致交通事故，带来伤害或死亡。
我们检测的这几款APP都没有防御机制。但是值得庆幸的是这些APP中没有一个是通过声音或SMS消息来控制汽车的。这种方法被售后报警系统制造商使用，包括俄罗斯的那款APP，因为移动互联网的质量并不能保证汽车总是在线，而语音呼叫和SMS消息却随时可用。下面我们简单分析一下由此产生的汽车安全威胁。
声控是通过所谓的DTMF命令处理的。车主必须给汽车打电话，汽车的报警系统会响应呼入，并报告汽车状态，然后切换到待机模式，等待车主的命令。然后，车主拨打预设的号码来命令汽车解锁车门并启动发动机，报警系统通过识别这些代码来执行正确的命令。
声控系统的开发者通过白名单来保障安全，只有在白名单上的电话号码才具有控制汽车的权利。但是，如果车主的手机被入侵了呢？入侵者就可以调用报警系统、禁用扬声器和屏幕，这样就可以无声无息的完全控制汽车。当然，入侵也不会这么容易，许多汽车爱好者将报警系统号码保存在一个虚构的名字下。在这种情况下，只有车主频繁地呼叫车辆，入侵者才能在偷来的呼出历史记录中找到报警系统号码。
汽车报警系统SMS消息控制方法的开发者肯定没有阅读过我们关于Android设备安全的文章。卡巴斯基实验室面临的第一个也是最常见的移动木马就是SMS木马，或者是含有用于秘密发送短信的代码的恶意软件，通过常见的木马操作以及由木马发出的远程命令实现。因此，恶意软件的开发者通过以下三个步骤就可以解锁受害者的车门：
1\. 浏览智能手机上所有的SMS消息，从中找出汽车命令。
2\. 找到所需的SMS消息后，从中提取电话号码和密码以获得访问权限。
3\. 向找到的电话号码发送SMS消息，解锁车门。
一个木马便能够无声无息的完成这三步操作，唯一需要做的事情就是感染智能手机。
**结论**
汽车是昂贵的，值得我们像保护银行账户一样去保护汽车的安全。汽车制造商和APP开发者的态度是明确的，他们致力于快速的填补市场APP空白，为车主提供改变生活质量的新功能APP。但是，当考虑车控APP的安全性时，其基础设施安全（控制服务器）及其交互和基础设施通道并不是唯一值得考虑的事情。客户端安全也值得注意，特别是安装在用户设备上的APP。现在APP很容易便能被用来打击车主，客户端很可能是最薄弱的环节，最有可能成为攻击者的目标。
目前为止，我们没有检测到车控APP攻击，在我们的成千上万个检测恶意软件的实例中也没有发现用于下载车控APP的配置文件的代码。然而，现代的木马是非常灵活多变的，如果某个木马今天持续显示不能被用户自己移除的广告，那么明天它就可以将配置文件从车控APP上传到犯罪者命令和控制的服务器。木马还可以删除配置文件，并用修改过的配置文件覆盖它。一旦所有这些在经济上都变得可行，最常见的移动木马也会增加新的功能。