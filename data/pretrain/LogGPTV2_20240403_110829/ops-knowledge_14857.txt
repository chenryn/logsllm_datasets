Certainly! Here is a more polished and detailed version of your request:

---

**Request for Guidance on Implementing ACL with Google Authentication**

I am looking to implement Access Control Lists (ACL) in conjunction with Google Authentication for my Django project. I would appreciate any guidance or pointers on the feasibility and best practices for achieving this.

### Use Case

1. **Page X**: This page should only be accessible to the user with the email `myadmin@gmail.com`.
2. **Page Y**: This page should be accessible to all users who belong to a specific group, "Group Y". After registration, a moderator will either add or reject the user to/from this group.
3. **Unauthorized Access**: Users who do not meet the criteria for either Page X or Page Y should not be able to access these pages, even if they are authenticated successfully.

### Project Details

- **Framework**: I plan to use Django for this project.
- **Support Needed**: Any built-in support or third-party packages provided by Django that can help in implementing the above use case would be highly beneficial.

### Initial Considerations

From my initial research, it seems that the Google Users API does not provide built-in functionality for ACLs. Therefore, I am considering the following approach:
- **Datastore Model**: Create a datastore model keyed by the user's `user_id` to manage access control.
- **Access Check**: Fetch and check the user's permissions on each request to determine if they have access to the requested page.

However, I am open to more efficient or better-practiced methods. Any suggestions or resources you can provide would be greatly appreciated.

Thank you in advance for your assistance.

---

This version provides a clearer and more structured description of your requirements and considerations, making it easier for others to understand and provide helpful advice.