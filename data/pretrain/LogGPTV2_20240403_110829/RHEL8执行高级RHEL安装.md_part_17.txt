这个列表中的选项仅适用于单个软件包组。不是在 Kickstart 文件中的
`%packages`{.literal} 命令中使用它们，而是将其附加到组群名称中。例如：
``` screen
%packages
@Graphical Administration Tools --optional
%end
```
::: variablelist
[`--nodefaults`{.literal}]{.term}
:   只安装组的强制软件包，而不是默认选择。
[`--optional`{.literal}]{.term}
:   除安装默认选择外，还要安装在
    `*-comps-repository.architecture.xml`{.literal}
    文件中组定义中标记为可选的软件包。
    请注意，有些软件包组，比如
    `Scientific Support`{.literal}，没有指定任何强制或默认软件包 -
    只有可选软件包。在这种情况下必须总是使用 `--optional`{.literal}
    选项，否则不会安装该组中的软件包。
:::
:::
:::
::: section
::: titlepage
# []{#kickstart-script-file-format-reference_installing-rhel-as-an-experienced-user.html#scripts-in-kickstart-file_kickstart-script-file-format-reference}Kickstart 文件中的脚本 {.title}
:::
kickstart 文件可以包括以下脚本：
::: itemizedlist
-   %pre
-   %pre-install
-   %post
:::
本节提供有关脚本的以下详情：
::: itemizedlist
-   执行时间
-   可以包含在脚本中的命令类型
-   脚本的目的
-   脚本选项
:::
::: section
::: titlepage
## []{#kickstart-script-file-format-reference_installing-rhel-as-an-experienced-user.html#pre-script-in-kickstart-file_scripts-in-kickstart-file}%pre 脚本 {.title}
:::
`%pre`{.literal} 脚本会在载入 Kickstart
文件后立即在系统中运行，但在完全解析及开始安装前。每个部分必须以
`%pre`{.literal} 开头并以 `%end`{.literal} 结尾。
这个 `%pre`{.literal}
脚本可用于激活和配置联网和存储设备。还可以使用安装环境中可用的脚本来运行脚本。如果您在安装前有需要特殊配置的联网和存储，或者有设置其他日志参数或环境变量的脚本，则可以添加,
`%pre`{.literal} 脚本。
使用 `%pre`{.literal} 脚本调试问题会比较困难，因此建议仅在需要时使用
`%pre`{.literal} 脚本。
除了安装环境 `/sbin`{.literal} 和 `/bin`{.literal}
目录中的大多数工具外，您还可以在 `%pre`{.literal} 脚本中使用与网络、存储
文件系统相关的命令。
您可以在该 `%pre`{.literal}
部分中访问网络。然而，命名服务还没有被配置，所以只能使用 IP
地址，而不能使用 URL。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
pre 脚本不会在 chroot 环境中运行。
:::
::: section
::: titlepage
### []{#kickstart-script-file-format-reference_installing-rhel-as-an-experienced-user.html#pre-script-section-options_pre-script-in-kickstart-file}%pre 脚本部分选项 {.title}
:::
以下选项可以用来改变预安装脚本的行为。要使用某个选项，请将其附加到脚本开头的
`%pre`{.literal} 行中。例如：
``` screen
%pre --interpreter=/usr/libexec/platform-python
-- Python script omitted --
%end
```
::: variablelist
[`--interpreter=`{.literal}]{.term}
:   允许指定不同的脚本语言，如 Python。可使用系统中可用的任意脚本语言 ;
    在大多数情况下，它们是
    `/usr/bin/sh`{.literal}、`/usr/bin/bash`{.literal} 和
    `/usr/libexec/platform-python`{.literal}。
    请注意，`platform-python`{.literal} 解释器使用 Python 版本
    3.6。对于新路径和版本，您必须将您的针对以前的 RHEL 版本的 Python
    脚本进行更改，以适用于新的路径和版本。另外，`platform-python`{.literal}
    用于系统工具： 使用安装环境之外的 `python36`{.literal} 软件包。有关
    Red Hat Enterprise Linux 8 中 Python
    的详情，请查看[*配置基本系统设置*]{.emphasis}中的 [Python
    简介](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_basic_system_settings/using-python3_configuring-basic-system-settings#introduction-to-python_using-python3){.link}。
[`--erroronfail`{.literal}]{.term}
:   显示错误并在脚本失败时暂停安装。错误消息会指示您记录故障原因的位置。
[`--log=`{.literal}]{.term}
:   将脚本的输出记录到指定的日志文件中。例如：
    ``` screen
    %pre --log=/tmp/ks-pre.log
    ```
:::
:::
:::
::: section
::: titlepage
## []{#kickstart-script-file-format-reference_installing-rhel-as-an-experienced-user.html#pre-install-script-in-kickstart-file_scripts-in-kickstart-file}%pre-install 脚本 {.title}
:::
`pre-install`{.literal} 脚本中的命令是在以下任务完成后运行：
::: itemizedlist
-   系统已被分区
-   文件系统创建并挂载到 /mnt/sysimage 中
-   网络已根据任何引导选项和 kickstart 命令进行配置
:::
每个 `%pre-install`{.literal} 部分必须以 `%pre-install`{.literal}
开头并以 `%end`{.literal} 结尾。
这些 `%pre-install`{.literal}
脚本可以用来修改安装，并在软件包安装前添加有保证 ID 的用户和组群。
建议您在安装所需的任何修改中使用 `%post`{.literal} 脚本。只有在
`%pre-install`{.literal} 脚本在需要修改的 `%post`{.literal}
脚本短时才使用该脚本。
注意： `The pre-install`{.literal} 脚本不会在 chroot 环境中运行。
::: section
::: titlepage
### []{#kickstart-script-file-format-reference_installing-rhel-as-an-experienced-user.html#pre-install-script-section-options_pre-install-script-in-kickstart-file}%pre-install script 部分选项 {.title}
:::
以下选项可以用来改变 `pre-install`{.literal}
脚本的行为。要使用某个选项，将其附加到脚本开头的
`%pre-install`{.literal} 行中。例如：
``` screen
%pre-install --interpreter=/usr/libexec/platform-python
-- Python script omitted --
%end
```
请注意，您可以有多个 `%pre-install`{.literal}
部分，它们具有相同或不同的解析程序。它们按照它们在 Kickstart
文件中的顺序进行评估。
::: variablelist
[`--interpreter=`{.literal}]{.term}
:   允许指定不同的脚本语言，如 Python。可使用系统中可用的任意脚本语言 ;
    在大多数情况下，它们是
    `/usr/bin/sh`{.literal}、`/usr/bin/bash`{.literal} 和
    `/usr/libexec/platform-python`{.literal}。
    请注意，`platform-python`{.literal} 解释器使用 Python 版本
    3.6。对于新路径和版本，您必须将您的针对以前的 RHEL 版本的 Python
    脚本进行更改，以适用于新的路径和版本。另外，`platform-python`{.literal}
    用于系统工具： 使用安装环境之外的 `python36`{.literal} 软件包。有关
    Red Hat Enterprise Linux 8 中 Python
    的详情，请查看[*配置基本系统设置*]{.emphasis}中的 [Python
    简介](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_basic_system_settings/using-python3_configuring-basic-system-settings#introduction-to-python_using-python3){.link}。
[`--erroronfail`{.literal}]{.term}
:   显示错误并在脚本失败时暂停安装。错误消息会指示您记录故障原因的位置。
[`--log=`{.literal}]{.term}
:   将脚本的输出记录到指定的日志文件中。例如：
    ``` screen
    %pre-install --log=/mnt/sysimage/root/ks-pre.log
    ```
:::
:::
:::
::: section
::: titlepage
## []{#kickstart-script-file-format-reference_installing-rhel-as-an-experienced-user.html#post-script-in-kickstart-file_scripts-in-kickstart-file}%post 脚本 {.title}
:::
%post
脚本是安装后脚本，可在安装完成后运行，但在第一次重启系统前运行。您可以使用这部分来运行任务，比如系统订阅。
您可以添加系统在安装结束后但在第一次重启该系统之前要运行的命令,。这个部分必须以
`%post`{.literal} 开头并以 `%end`{.literal} 结尾。
`%post`{.literal}
一节对安装其他软件或配置其他名称服务器等功能很有用。post-install
脚本是一个 `chroot`{.literal} 环境中运行的，因此,从安装介质中复制脚本或
RPM 软件包等任务在默认情况下不起作用。您可使用 `--nochroot`{.literal}
选项更改此行为，如下所述。然后 `%post`{.literal}
脚本将在安装环境中运行，而不是在安装 `chroot`{.literal}
的目标系统中运行。
因为安装后脚本在一个 `chroot`{.literal} 环境中运行，所以大多数
`systemctl`{.literal} 命令会拒绝执行任何操作。
请注意，在执行 `%post`{.literal} 这部分的过程中，安装介质必须仍被插入。
::: section
::: titlepage
### []{#kickstart-script-file-format-reference_installing-rhel-as-an-experienced-user.html#post-script-section-options_post-script-in-kickstart-file}%post 脚本部分选项 {.title}
:::
以下选项可以用来改变安装后脚本的行为。要使用某个选项，请将其附加到脚本开头的
`%post`{.literal} 行中。例如：
``` screen
%post --interpreter=/usr/libexec/platform-python
-- Python script omitted --
%end
```
::: variablelist
[`--interpreter=`{.literal}]{.term}
:   允许指定不同的脚本语言，如 Python。例如：
    ``` screen
    %post --interpreter=/usr/libexec/platform-python
    ```
    可使用系统中可用的任意脚本语言 ; 在大多数情况下，它们是
    `/usr/bin/sh`{.literal}、`/usr/bin/bash`{.literal} 和
    `/usr/libexec/platform-python`{.literal}。
    请注意，`platform-python`{.literal} 解释器使用 Python 版本
    3.6。对于新路径和版本，您必须将您的针对以前的 RHEL 版本的 Python
    脚本进行更改，以适用于新的路径和版本。另外，`platform-python`{.literal}
    用于系统工具： 使用安装环境之外的 `python36`{.literal} 软件包。有关
    Red Hat Enterprise Linux 8 中 Python
    的详情，请查看[*配置基本系统设置*]{.emphasis}中的 [Python
    简介](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_basic_system_settings/using-python3_configuring-basic-system-settings#introduction-to-python_using-python3){.link}。
[`--nochroot`{.literal}]{.term}
:   允许您指定在 chroot 环境之外运行的命令。
    以下示例将 /etc/resolv.conf 文件复制到刚安装的文件系统中。
    ``` screen
    %post --nochroot
    cp /etc/resolv.conf /mnt/sysimage/etc/resolv.conf
    %end
    ```
[`--erroronfail`{.literal}]{.term}
:   显示错误并在脚本失败时暂停安装。错误消息会指示您记录故障原因的位置。
[`--log=`{.literal}]{.term}
:   将脚本的输出记录到指定的日志文件中。请注意，无论您是否使用
    `--nochroot`{.literal} 选项，日志文件的路径都必须考虑它。例如，没有
    `--nochroot`{.literal}:
    ``` screen
    %post --log=/root/ks-post.log
    ```
    并且使用 `--nochroot`{.literal}:
    ``` screen
    %post --nochroot --log=/mnt/sysimage/root/ks-post.log
    ```
:::
:::
::: section
::: titlepage
### []{#kickstart-script-file-format-reference_installing-rhel-as-an-experienced-user.html#example-mounting-nfs-in-a-post-install-script_post-script-in-kickstart-file}示例：在安装后脚本中挂载 NFS {.title}