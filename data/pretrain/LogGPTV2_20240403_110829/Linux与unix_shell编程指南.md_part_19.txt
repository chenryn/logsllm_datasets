### 本章概要

本章节将涵盖以下主题：
- 登录过程
- `/etc/passwd` 文件
- `$HOME/.profile` 文件
- 定制 `$HOME/.profile` 文件

### 1. `/etc/passwd` 文件

在进一步讨论之前，让我们先来了解一下 `/etc/passwd` 文件。这是一个文本文件，其中包含用户账户信息。虽然可以修改其内容，但必须非常谨慎。该文件由7个字段组成，每个字段之间用冒号分隔。以下是这些字段的详细说明：

- **第1字段**：登录名
- **第2字段**：加密后的密码（在某些系统中可能为空或指向另一个文件）
- **第5字段**：用户的全名或其他描述信息
- **第6字段**：用户的主目录路径
- **第7字段**：用户默认使用的Shell（例如，`/bin/sh` 表示使用Bourne Shell）

`/etc/passwd` 文件可能存在不同的格式，其中一种常见格式是将实际的密码存储在另一个文件中，如 `/etc/shadow`。

### 2. 登录成功后的环境设置

当用户成功登录后，系统会自动执行两个环境设置文件：
1. **`/etc/profile`**：全局配置文件，适用于所有用户。
2. **`$HOME/.profile`**：用户个人配置文件，位于用户的主目录下。

#### 2.1 `/etc/profile` 文件

`/etc/profile` 文件包含以下内容：
- **全局或局部环境变量**：设置对所有用户有效的环境变量。
- **PATH 信息**：定义可执行文件、库文件和一般文本文件的搜索路径。
- **终端设置**：配置终端的一般特性。
- **安全命令**：包括文件创建模式或敏感区域的双登录提示。
- **日期信息或放弃操作信息**：记录用户登录时即将发生的事件或放弃登录的信息。

##### 示例代码
```bash
# 捕获信号
trap "" QUIT STOP

# 导出 LOGNAME
export LOGNAME

# 设置 MANPATH
MANPATH=/usr/local/man:$MANPATH
export MANPATH

# 检查时区文件
if [ -f /etc/timezone ]; then
    export TZ=`cat /etc/timezone`
fi

# 设置终端类型
TERM=vt220
export TERM

# 重新设置捕获信号
trap "date" EXIT

# 邮件信息
MAILCHECK=600
export MAILCHECK

# 设置 umask 值
umask 022

# 初始化环境变量
PATH=/usr/local/bin:/usr/bin:/bin
export PATH

# 保存 stty 设置
stty_save=$(stty -g)

# 注册连接
echo "User $LOGNAME logged in at `date`" >> /var/adm/messages

# 限制内存溢出
ulimit -s 32768

# 限制用户同时登录次数
if [ $(who | grep -c $LOGNAME) -gt 2 ] && [ $LOGNAME != idnk ] && [ $LOGNAME != psalom ] && [ $LOGNAME != dave ]; then
    echo "Too many logins, exiting."
    exit
fi

# 设置命令提示符
PS1="\u@\h \W\$ "
```

#### 2.2 `$HOME/.profile` 文件

`/etc/profile` 文件执行完毕后，用户会被切换到自己的主目录，并读取 `$HOME/.profile` 文件。如果该文件存在，系统将按照其内容进行进一步的环境设置。用户可以在 `.profile` 文件中覆盖或添加新的环境变量和设置。

##### 示例代码
```bash
# 设置 EDITOR 环境变量
EDITOR=vim
export EDITOR

# 设置 TERM 变量
TERM=vt100
export TERM

# 创建并添加 bin 目录到 PATH
mkdir -p $HOME/bin
PATH=$HOME/bin:$PATH
export PATH

# 设置命令提示符
PS1="\w\$ "

# 设置辅助命令提示符
PS2="> "
```

### 3. `stty` 用法

`stty` 命令用于设置终端特性。常用选项包括：
- `stty -a`：显示当前的终端设置。
- `stty erase '^H'`：设置退格键为 `^H`。

##### 示例代码
```bash
# 保存当前的 stty 设置
stty_save=$(stty -g)

# 关闭回显功能
stty -echo

# 执行其他操作...

# 恢复 stty 设置
stty "$stty_save"
```

### 4. 创建 `.logout` 文件

Bourne Shell 不包含 `.logout` 文件，但可以通过 `trap` 命令实现类似功能。编辑 `.profile` 文件，在最后一行添加以下命令：

```bash
trap "$HOME/.logout" 0
```

然后创建一个 `.logout` 文件，写入需要在退出时执行的命令。

### 5. 小结

通过定制 `$HOME/.profile` 文件，用户可以覆盖系统的默认设置，以满足个人需求。从显示友好信息到终端特性的设置，有多种方式可以定制用户环境。

### 下一章预告

下一章将介绍 shell 变量和环境变量，以及如何使用它们来提高 shell 编程的效率。

加入Java编程群：524621833