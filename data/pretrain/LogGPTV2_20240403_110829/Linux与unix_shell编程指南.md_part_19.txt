本章内容有：
• 登录过程。
• 文件/ e t c / p a s s w d。
• $HOME.profile。
• 定制$ H O M E . p r o f i l e。
在进行下一步处理之前，先看看文件/ e t c / p a s s w d。这是一个文本文件，可以任意修改其中
的文本域，但要小心。此文本有7个域，并用冒号作分隔符，以下是其部分文件内容列表。在
顶端加有列号，这样各域标识得更加清晰。
现在来看看各域，第1域是登录名，第2域是加密的密码，第5域是用户全名。第6域是用
户根目录，第7域是用户使用的s h e l l。这里/ b i n / s h意即缺省为常规Bourne Shell。
P a s s w d文件可能还有其他格式。其中的一个版本即为实际 p a s s w d域保存在另一个文件中。
以上即为最普通格式。
登录成功后，系统执行两个环境设置文件，第一个是 / e t c / p r o f i l e，第二个是 . p r o f i l e，位
于用户根目录下。
系统还会处理其他的初始化文件。这里只涉及p r o f i l e文件。
13.1 /etc/profile
用户登录时，自动读取/ e t c目录下p r o f i l e文件，此文件包含：
• 全局或局部环境变量。
• PAT H信息。
• 终端设置。
• 安全命令。
• 日期信息或放弃操作信息。
下面就来详细解释上述各项内容。设置全局环境变量便于用户及其进程和应用访问它。
加入java编程群：524621833
126
第三部分 登录环境
下载
PAT H定位包含可执行文件，库文件及一般文本文件的目录位置，便于用户快速访问。终端设
置使系统获知用户终端的一般特性。安全命令包括文件创建模式或敏感区域的双登录提示。
日期信息是一个文本文件，保存用户登录时即将发生事件的记录或放弃登录的信息文件。
以下是文件/ e t c / p r o f i l e，列表后将予以讨论。
加入java编程群：524621833
127
第13章 登录环境
下载
其中一些命令可能不好理解，不必担心，本书以后将陆续予以介绍。如果愿意，可以参
照这个列表建立自己的p r o f i l e文件。
第一行捕获两个信号，即使用Q U I T退出用户或键停止文件执行。
接下来导出L O G N A M E；然后指定系统额外增加的m a n页查询的位置。M A N PAT H将此位
置加入存在的m a n页查询列表中。
检查时区文件，如果存在，指定它作为时区源，设置终端类型为 v t 2 2 0。
重新设置捕获信号，以便于用户读取日期文件信息，但此后必须再重新设置它。
建立邮件信息（当有新邮件到达时显示此信息）。
设置u m a s k值，使文件创建时带有一定的缺省权限位集。
初始化环境变量，设置路径并导出，以便于用户使用。
重新设置捕获信号和Q U I T。
保存缺省的s t t y设置，便于用户退出查询系统时能够重新初始化终端设置。
加入java编程群：524621833
128
第三部分 登录环境
下载
将所有连接注册到文件/ v a r / a d m / m e s s a g e s，即缺省系统注册文件中。
使用u l i m i t命令限制内存溢出或十六进制溢出数目。
下面的一小段脚本限制用户最多同时登录两次，但不包括三个人（ i d n k，p s a l o m，d a v e），
如果有人试图登录超过两次，则令其退出登录进程。
最后设置命令提示符到登录名。
此环境设置为全局使用，下面在用户自己的p r o f i l e文件中定制环境。
13.2 用户的$HOME.profile
/ e t c / p r o f i l e文件执行时，用户将被放入到自己的 $ H O M E目录中，回过头来观察p a s s w d文
件，用户的$ H O M E目录在倒数第2列。
可以将之看作用户根目录，因为正是在这里存储了所有的私有信息。
如果. p r o f i l e已经存在，系统将参照此文件，意即对此过程并不创建另一个 s h e l l，因而在
/ e t c / p r o f i l e下设置的环境不做改动，除非在. p r o f i l e中强制改动它。如果创建另一个进程，用户
本地的s h e l l变量将被覆盖。
回到 . p r o f i l e，一般来说创建帐户时，一个p r o f i l e文件的基本框架即随之创建。不要忘了
在 . p r o f i l e文件中可以通过设置相关条目以不同的值或使用u s e t命令来覆盖/ e t c / p r o f i l e文件中的
设置。如果愿意，可以定制用户自己的 . p r o f i l e文件。先来看看标准的. p r o f i l e文件。
现在改动此文件。
现在加入两个环境变量，如 E D I TO R，以使c r o n或其他应用获知正在使用的编辑器；将
T E R M变量设置为v t 1 0 0，而不是v t 2 2 0。
也可以创建b i n目录，将之加入路径（ p a t h），目录结构中加一个 b i n目录是一个好习惯。
在这里可以保存所有脚本，将之加入PAT H后，就不必写入脚本的文件路径名全称，只键入脚
本名即可。
几乎没有人想在命令提示符中显示自己的登录名，而宁愿使用现在的目录路径或是正在
使用的系统主机名做提示符。例如，下面显示了在命令提示符中如何设置主机名：
如果用户位于当前目录下：
如果上面的命令返回p w d，可使用如下命令：
我通常设置辅助命令提示符（一般用于命令提示符里的多行命令）为符号 ©，它的A S C I I
代码值八进制数为2 5 1，十进制为1 6 9。
加入java编程群：524621833
129
第13章 登录环境
下载
如果是L I N U X，那么……
在e c h o命令中使用八进制值，方法为：
如果需要访问管理区/ u s r / a d m i n，可将之加入环境变量，这样可以很容易地进入此目录。
A D M I N = / u s r / a d m
如果要知道用户本身登录后系统用户数，使用w h o和w c命令。
将上述设置加入. p r o f i l e文件。如果要使. p r o f i l e或/ e t c / p r o f i l e文件改动生效，可以退出登录
然后再登入，或者参照此文件设置。要参照此文件设置，格式为：
. / p a t h n a m e / f i l e n a m e
要参照. p r o f i l e设置，键入：
$. .profile
如果未成功，试试：
$. ./profile
以下为改动过的. p r o f i l e文件。
13.3 stty用法
s t t y用于设置终端特性。要查询现在的s t t y选项，使用stty -a。
加入java编程群：524621833
130
第三部分 登录环境
下载
设置终端时遇到的一个最普遍问题是退格键不起作用。这不是不可挽救的。本机 s t t y命令
中^ ?即为退格键，使用可能会退格并删除前一个字符。在命令行中设置一个s t t y选项，
一般格式为：
stty name character
以下将退格设置为^ H：
$ stty erase '\^H'
在. p r o f i l e文件中使用上述命令可能会碰到一些问题，因为 s t t y期望输入一个实际' C o n t r o l
H '序列，在v i编辑器环境下使用下述方法解决它：
按住C t r l键，同时按下V键，释放V键，再按下H键。
最常用的s t t y命令使用在下述设置上：
名 称 键 含 义
i n t r ^ C 终止进程
e c h o 打开e c h o功能
- e c h o 关闭e c h o功能
e o f ^ D 文件尾；注销
k i l l ^ Y 删除一行
s t a r t ^ Q 滚动屏幕文本
s t o p ^ S 停止滚动屏幕文本
s t t y的一个可用选项为：
stty -g。
此选项允许以可读格式保存 s t t y现有设置，便于以后重置回 s t t y。正像前面在文件
/ e t c / p r o f i l e中看到的一样。将stty -g内容放入一个变量中，工作完成后，任何改动的设置将被
写回s t t y。
在改变s t t y设置值并和终端打交道时，此方法很有用。这样可以很容易地存储其初始设置。
下面的例子将s t t y的现有设置保存。使用stty -g关掉e c h o，然后在脚本结尾处保存s t t y初始设
置。
如果是LINUX ，那么……
要使L I N U X知道正在使用字符串中转义字符，e c h o命令应加入- e，即echo -e。
加入java编程群：524621833
131
第13章 登录环境
下载
（续）
s t t y命令可以与终端、打印机、调制解调器打交道，功能十分丰富。使用 s t t y时要慎重，
不要使用已经使用的键或无效值。
13.4 创建.logout文件
使用Bourne shell与其他s h e l l不同，其缺点是不包含. l o g o u t文件。此文件保存有执行e x i t命
令时，在进程终止前执行的命令。
但是通过使用t r a p命令（t r a p和信号将在本书后面讨论），Bourne shell也可以创建自己的
. l o g o u t文件。方法如下：编辑. p r o f i l e文件，在最后一行加入下列命令，然后保存并退出。
trap "$HOME /.logout"0
再键入一个. l o g o u t文件，敲入下列执行命令。如果愿意，可以在此脚本中加入任何命令。
用户退出时，调用. l o g o u t文件。过程如下：用户退出一个s h e l l时，传送了一个信号0，意
即从现在s h e l l中退出，在控制返回s h e l l继续退出命令前，. p r o f i l e文件中t r a p行将捕获此信号并
执行. l o g o u t。
13.5 小结
可以定制用户本身的. p r o f i l e以满足需求，本章讲述了如何覆盖系统设置以满足用户需求。
从显示友好信息到终端特性设置，定制用户环境可以有许多方式。
加入java编程群：524621833
下载
第14章 环境和shell变量
为使s h e l l编程更有效，系统提供了一些 s h e l l变量。s h e l l变量可以保存诸如路径名、文件
名或者一个数字这样的变量名。s h e l l将其中任何设置都看做文本字符串。
有两种变量，本地和环境。严格地说可以有 4种，但其余两种是只读的，可以认为是特殊
变量，它用于向s h e l l脚本传递参数。
本章内容有：
• shell变量。
• 环境变量。
• 变量替换。
• 导出变量。
• 特定变量。
• 向脚本传递信息。
• 在系统命令行下使用位置参数。
14.1 什么是shell变量
变量可以定制用户本身的工作环境。使用变量可以保存有用信息，使系统获知用户相关
设置。变量也用于保存暂时信息。例如：一变量为 E D I TO R，系统中有许多编辑工具，但哪一
个适用于系统呢？将此编辑器名称赋给E D I TO R，这样，在使用c r o n或其他需要编辑器的应用
时，这就是你将一直使用的E D I TO R取值，并将之用作缺省编辑器。
下面是一个例子，登录的审核系统需要编辑。在菜单中选择此选项时，应用查询 E D I TO R
变量值，其值为v i。系统知道可使用此编辑器。
另一个例子需要登录数据库系统，键入下列命令：
$ isql -Udavet -Pabcd -Smethsys
这里- S为正在连接的服务器名称。有一变量D S Q U E RY保存服务器名称值。设置服务器名
称值到D S Q U E RY变量，这样如果登录时不使用- S提供服务器名称，应用将查询D S Q U E RY变
量，并使用其取值作为服务器名称。需要做的全部工作就是键入下列命令：
$ isql -Udavet -Pabcd
工作方式同上例。
14.2 本地变量
本地变量在用户现在的 s h e l l生命期的脚本中使用。例如，本地变量 f i l e - n a m e取值为
l o o p . d o c，这个值只在用户当前s h e l l生命期有意义。如果在s h e l l中启动另一个进程或退出，此
值将无效。这个方法的优点就是用户不能对其他的 s h e l l或进程设置此变量有效。
表1 4 - 1列出各种实际变量模式
使用变量时，如果用花括号将之括起来，可以防止 s h e l l误解变量值，尽管不必一定要这
加入java编程群：524621833
133
第14章 环境和shell变量
下载
样做，但这确实可用。