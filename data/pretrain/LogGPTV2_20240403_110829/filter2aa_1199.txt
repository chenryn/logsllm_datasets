# Identity Management Systems: An Overview and Exploitation Theory

## Part I: Background of Identity Management Systems

### What are Identity Management (IDM) Systems?
Identity Management (IDM) systems are designed to manage digital identities across multiple systems, ensuring that users have the appropriate access and privileges. These systems continuously manage identities based on a set of business rules, from provisioning (granting/revoking privileges and changing authentication tokens) to deprovisioning, all while maintaining auditability and compliance.

### Theoretical Framework
- **System Integration**: IDM systems connect two or more systems that hold identities, whether physical or logical.
- **Lifecycle Management**: They manage the identity throughout its lifecycle, including provisioning, revocation, and changes in authentication tokens.
- **Auditability**: All actions are performed in a way that can be proven and audited.

### Specific Products
- Novell Identity Manager
- Microsoft Identity Integration Server
- Sun Java System Identity Manager
- CA Identity Manager
- IBM Tivoli Identity Manager

### Common Configurations
- **eDirectory (eDir)**
- **Metadirectory Engine**
- **Drivers** (usually from Novell)
- **Driver Ruleset**

### Organizations Using IDM
- **Novell's Success Stories**: Allianz Suisse, Allied Irish Bank, Alvarado Independent School District, America First Credit Union, American National Standards Institute, Bezirk Oberbayern, Bridgepoint Health, Catholic Healthcare West, City of Peterborough, Continuum Health Partners, Coop, De Montfort University, Department of Enterprise, Trade & Employment (DETE), Deutsche Annington.
- **Other Organizations**: Eastern Michigan University, Fairchild Semiconductor, Fairfax County Public Schools, Furukawa Electric, GEHE, GKB, Gundersen Lutheran, Indiana State University, James Richardson International, JohnsonDiversey, Kanton Thurgau, Leiden University, Macmahon Holdings Ltd, Maine Medical Center, Miyazaki Prefectural Office, National Health Service (NHS), Municipality of Baerum, Nevada Department of Corrections, North Kansas City School District, Ohio Office of the Attorney General, Palm Beach County, Philips, Public Trust Office of New Zealand, RedSpider, Rikshospitalet, Stadtverwaltung Singen, State of Geneva, State of Nevada Welfare Division, Swisscom IT Services, The AA, Victorian Government, Waubonsee Community College.

### Issues with IDM Systems
- **Complexity**: Complex systems are inherently difficult to secure, often involving multiple interconnected components.
- **High Value**: IDM systems handle high-value information such as authentication tokens (passwords, certificates, etc.).
- **Carelessness**: There is often a false sense of security, leading to complacency. Administrators may not fully understand the security implications, and many older systems were not designed with modern security in mind.

## Part II: Theory of Exploitation

### Leveraging Complexity
- **Advantage for Attackers**: Rapidly changing systems and multiple interconnected components provide numerous attack vectors.
- **Code Quality**: "Hot" technologies often have poor code quality due to rushed development.
- **Attack Vectors**:
  - **Network Layer**: Exploiting the network connections between systems.
  - **Connected System Layer**: Targeting directories, databases, and OS authentication mechanisms.
  - **Application Layer**: Attacking the IDM application, system agents, and management tools.
  - **Rules**: Exploiting the business rules and their implementation.

## Part III: Novell Identity Manager

### Why Focus on Novell?
- **Security Architecture**: Novell has made several security architecture decisions that are suboptimal and not well-explained to customers.
- **Vulnerabilities**: Even when following best practices, vulnerabilities can still be exploited.
- **Desired Improvements**: Addressing these issues to enhance security.

### Minimal Novell System
- **eDirectory (eDir)**
- **Metadirectory Engine**
- **Drivers** (usually from Novell)
- **Driver Ruleset**

### Typical Configurations and Best Practices
- **Use SSL**: For secure communication between the engine, remote loader, and applications.
- **Access Control**: Monitor and control access to driver sets, drivers, driver configuration objects, password policy objects, and iManager tasks.
- **Password Security**: Limit information in password hint attributes, force password changes after admin resets, and create strong password policies.
- **Secure Connected Systems**: Follow industry best practices, such as blocking unused ports.
- **Designer Recommendations**: Limit consultant rights, control .proj files, delete log files, secure connections from Designer to the directory, avoid using encrypted attributes, and do not store sensitive passwords.
- **Tracking Changes**: Use Novell Audit to log critical operations like password changes, driver activity, and other sensitive actions.

## Part IV: Exploitation

### Goals of Exploitation
- **Gain Access**: In connected systems.
- **Exceed Authorization**: In a system.
- **Steal Identity**: Control authentication tokens.
- **Break Auditing**: Disrupt the auditing process.

### Exploitation Targets
1. **Exploits in IDM Components**: Targeting vulnerabilities in the IDM system itself.
2. **Modify the IDM System**: Altering the system to gain unauthorized access.
3. **Use System Rules**: Exploit the business rules to your advantage.
4. **Exploit Rules Processing**: Manipulate the programmatic processing of rules.
5. **Remote Loader**: Exploit the remote loader and its connections.
6. **Passwords**: Target Windows and Universal Passwords.
7. **Auditing Subsystem**: Disrupt the auditing subsystem to cover tracks.

### Conclusions
Identity Management systems are complex and high-value targets. By understanding their theoretical framework, common configurations, and potential vulnerabilities, we can better protect these systems from exploitation. Addressing the issues of complexity, high value, and carelessness is crucial for enhancing the security of IDM systems.