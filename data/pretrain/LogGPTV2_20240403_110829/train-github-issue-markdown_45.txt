### System info
  * Playwright Version: 1.31.2
  * Operating System: Ubuntu 22.04
  * Browser: WebKit
### Source code
    import { test } from '@playwright/test';
    test('getByRole behaviour', async ({ page }) => {
      await page.setContent(`
              dont click me
            click me instead
      `);
      // chrome finds 1 element, because only one is actually available to the user
      // webkit finds 2 elements, so strict validation fails only in webkit
      await page.getByRole('button').click(); 
      // finds 2 elements, because there are two elements in the dom
      // strict validation fails in all browsers, as expected
      // await page.locator('button').click();  
    });
Config file is the default npm init playwright@latest, strict mode enabled.
**Steps**
  * Run the test in chrome and firefox, it works
  * Run the test in webkit and the click fails strict validation
**Expected**  
All browsers behave the same, ideally the test should pass for all browsers.
**Actual**  
WebKit seems to keep light-dom elements in the accessibility tree, even if
they have no slot in the corresponding shadow-root. This causes getByRole to
find more than one element to click on the page.
I am really not sure if this is a playwright issue, a playwright-webkit
issues, or a webkit issue. I'd be perfectly happy with filing the issue
somewhere else if we find this to be the wrong place.
Edit: Whoops, my copy pasta had an accidential display: none on the button, I
removed that with an edit