PPT adversaries A, the advantage of winning the above WROB-CCA Game is
negligible.
Remark. The above security notions of IND-CCA, ANO-CCA and WROB-
CCA can be naturally deﬁned for an identity-based encryption (IBE) scheme by
limiting the size of the receiver set to be only one.
3 Generic Anonymous IBBE from IBE
In this section, we present a generic IBBE construction which builds on a IND-
CCA secure, ANO-CCA secure and WROB-CCA secure IBE primitive. The
generic IBBE construction has a desirable property that the public parameters
size, the private key size and the decryption cost are all constant and independent
of the number of receivers, while the ciphertext size is linear with the size of the
receivers.
3.1 Construction
Given an IND-CCA, ANO-CCA and WROB-CCA secure IBE scheme IBE=
(IBE.Setup,
IBE.Extract,IBE.Enc,IBE.Dec) and a strong one-time signature
scheme Σ = (Gen, Sig, Ver), we construct an IND-CCA and ANO-CCA secure
IBBE construction IBBE = (IBBE.Setup, IBBE.Extract, IBBE. Enc, IBBE.Dec).
IBBE.Setup(1λ): On input of a security parameter λ, it generates a bilinear
map (p, G, GT , e), where G and GT are two cyclic groups with prime order p and e
is a bilinear map e : G×G → GT . Then, it chooses g←RG, α←RZp and computes
g1 = gα. Next, it runs (cid:11) (cid:2)params, (cid:2)msk(cid:12) ←IBE.Setup(1λ). Besides, it chooses three
hash functions H1, H2, H3, such that H1 : {0, 1}∗ → G, H2 : GT → {0, 1}λ and
H3 : {0, 1}∗ → Zp. The public parameters are params = (G, GT , Zp, e, p, g, g1,
(cid:2)params, H1, H2, H3) and the master secret key is msk = (α, (cid:2)msk).
IBBE.Extract(msk, ID): On input of a master secret key msk and an identity
ID←IBE.Extract( (cid:2)msk, ID). It outputs
ID, it computes sk0
the private key skID =(sk0
IBBE.Enc(params, S, M): On input of the public parameters params, a
receiver set S = {ID1, ID2, ··· , IDt} and a message M, it ﬁrst generates a sig-
nature key pair (svk, ssk)← Gen (1λ). Then it chooses δ←RZp, lets r = H3(δ, M)
and computes the common part of the ciphertext T = gr. Next, for each ID ∈ S,
ID←IBE.Enc( (cid:2)params, ID, svk ||
ID = H2(e(g1, H1(ID))r) and c1
it computes c0
δ || M). Let C1 = (c0
|| (c0
IDt). The ciphertext is CT =
(svk, T , C1, σ), where σ = Sig (ssk, T || C1).
IBBE.Dec(skID, CT ): On input of a private key skID = (sk0
ID) and a
ciphertext CT = (svk, T , C1, σ), where C1 = ( c0
IDt, c1
IDt).
It checks whether Ver(svk, T||C1, σ) = 1 holds. If not, it returns ⊥. Otherwise, it
ID, sk1
ID1) || ··· || (c0
ID = H1(ID)α and sk1
ID, sk1
ID) for the identity ID.
ID1, c1
ID1, c1
ID1) || ···
IDt, c1
Generic Anonymous Identity-Based Broadcast Encryption
213
ID = H2(e(T, sk0
computes c0
else considers the smallest index j such that c0
IBE.Dec(sk1
svk or T (cid:5)= gH3(δ(cid:3),M ), returns ⊥; else returns M.
IDj ). If L =⊥, returns ⊥; else parses L as svk
IDj for all j ∈ {1,··· , t}, returns ⊥;
IDj , then computes L ←
(cid:4) (cid:5)=
(cid:4)||M. If svk
ID (cid:5)= c0
ID)). If c0
ID = c0
ID, c1
(cid:4)||δ
The correctness of IBBE construction follows directly from the correctness
and weak robustness of IBE scheme.
3.2 Security Analysis
In this subsection, we analyze that the above IBBE construction is ANO-CCA
secure. Regarding the IND-CCA security, we have the following Theorem 1,
whose proof can be found in the full paper.
Theorem 1. Suppose that H3 is a random oracle, the IBE scheme is IND-
CCA secure and the signature Σ scheme is a strong one-time signature, then
the generic IBBE construction in Sect. 3 is IND-CCA secure.
Next, we shall prove the following Theorem 2, which states that our IBBE con-
struction is ANO-CCA secure.
Theorem 2. Suppose that H1, H2, H3 are random oracles, the IBE scheme are
WROB-CCA and ANO-CCA secure, the signature Σ scheme is a strong one-
time signature scheme and the DBDH assumption holds, then the above IBBE
construction is ANO-CCA secure.
∗
∗
∗ on receiver
ID1) ||···|| (c0∗
IDt,
IDv) = (H2(e(g1, H1(IDv))r), IBE.Enc( (cid:2)params, IDv,
∗)) be the challenge ciphertext component which is related to the
Proof. We proceed by a sequence of hybrid games starting with Game0 where
adversary A is given an encryption of M
∗ on S0. At the last game, adversary A
∗ on S1. Without loss of generality, we suppose S0
is given an encryption of M
and S1 are diﬀerent by only one receiver and |S0| = |S1| = t. (The general case
can be proved through a hybrid argument, which is the adversary A selects the
receiver sets diﬀering by only one receiver each time.) Let IDv be the unique
element of S0\S1, IDw be the unique element of S1\S0. (Note that Si\Sj =
{ID|ID ∈ Si ∩ ID (cid:5)∈ Sj})
Game0: The challenge ciphertext CT
∗
set S0, where CT
1 , σ
c1∗
IDt). Let c = (c0∗
∗|| M
svk
identity IDv.
Game1: It is the same as Game0, but the challenger rejects all post challenge
Decryption Query (cid:11)ID, CT(cid:12), where CT contains the same veriﬁcation key svk
∗.
∗)), where
Game2: c is replaced with (R, IBE.Enc( (cid:2)params, IDv, svk
R←R{0, 1}λ.
Game3: c is replaced with (R, IBE.Enc( (cid:2)params, IDw, svk
∗
Game4: c is replaced with (H2( e(g1, H1(IDw))r), IBE.Enc( (cid:2)params, IDw, svk
||δ
∗)). Notice that the component is now encrypted on IDw instead of IDv.
∗ is a correctly encrypted M
∗) and C
∗ = (svk
IDv, c1∗
∗
1 = (c0∗
ID1, c1∗
∗|| M
∗|| M
∗|| M
∗ ||δ
∗ ||δ
∗ ||δ
, T
, C
∗)).
214
K. He et al.
Game5: It is the same as Game4, but the challenger does not reject all post
challenge Decryption Query (cid:11)ID, CT(cid:12), where CT contains the same veriﬁcation
∗ is correctly encrypted M
∗
key svk
under the receiver set S1 now.
∗. Notice that the challenge ciphertext CT
The above games diﬀer slightly from each other. In the following lemmas, we
shall show that every two adjacent games are computationally indistinguishable.
Transitivity shows that Game0 and Game5 are computationally indistinguish-
∗ on receiver set
able. The challenge ciphertext CT
∗ on receiver set
S0 and the challenge ciphertext CT
S1. According to the ANO-CCA Game, we can achieve that the above IBBE
construction is ANO-CCA secure.
∗ in Game0 is encrypted M
∗ in Game5 is encrypted M
∗||C
∗
1 ), σ
∗. Then C runs (params, msk) ←
Lemma 1. Suppose that the signature scheme Σ is a strong one-time signature
scheme, then Game0 and Game1 are computationally indistinguishable.
Proof. We deﬁne event F that adversary A makes a legal Decryption Query
on (ID, CT = (svk, T, C1, σ)), where Ver(svk, T||C1, σ) = 1 and svk = svk
∗
and (cid:11)(T||C1), σ(cid:12) (cid:5)= (cid:11)(T
∗(cid:12). Suppose event F happens, then it is easy to
construct a PPT algorithm C, which makes use of adversary A to break the
underlying one-time signature scheme Σ.
Setup: C is given a veriﬁcation key svk
IBBE.Setup(1λ). Next, it returns params to A and keeps msk itself.
Phase 1: A can adaptively issue Extraction Query and Decryption Query. C
can answer any Extraction Query and Decryption Query since it has the master
secret key msk.
Challenge: A submits a message M
∗ and two distinct sets S0, S1 to C.
It is required that A has not issued Extraction Query on ID in Phase 1,
where ID ∈ {IDv, IDw}. C ﬁrst runs IBBE.Enc(params, S0, M
∗) to obtain
(cid:12), and then obtains (from its signing oracle) a
a part of ciphertext (cid:11)T
(cid:12). Finally, C sends challenge ciphertext
signature σ
∗ = (svk
CT
Phase 2: A continues to adaptively issue queries as follows:
– Extraction Query: A issues Extraction Query on ID, such that ID (cid:5)∈ {IDv,
IDw}, C handles them as in Phase 1.
– Decryption Query: A issues Decryption Query on (cid:11)ID, CT(cid:12), C parses CT as
(svk, σ, T , C1), if Ver (svk, T ||C1, σ) = 1, svk = svk
∗ and (cid:11)(T||C1), σ(cid:12) (cid:5)=
∗(cid:12), then C presents (cid:11)(T||C1), σ(cid:12) as a forgery and aborts. Other-
(cid:11)(T
wise, C answers these queries with the master secret key msk as in Phase 1.
∗
1 ), σ
∗||C
∗ on the “message”(cid:11)T
∗
, T
∗) to A.
∗
1 , σ
, C
∗
∗||C
∗
∗
, C
1
∗
1
Guess: A outputs a bit b
Observe that Game0 and Game1 are identical as long as event F does not
happen. If event F happens with a non-negligible probability, then C can forge
(cid:4) ∈ {0, 1}.
Generic Anonymous Identity-Based Broadcast Encryption
215
a valid signature with a non-negligible advantage. However, since the signature
scheme Σ is a strong one-time signature scheme, then event F happens with
negligible probability.
Hence, Game0 and Game1 are computationally indistinguishable.
Lemma 2. Suppose that DBDH assumption holds, then Game1 and Game2 are
computationally indistinguishable.
Proof. Suppose there exists an adversary A who can distinguish Game1 from
Game2. It is easy to construct a PPT algorithm C that makes use of A to solve
the DBDH problem. Suppose C is given a DBDH challenge (g, ga, gb, gc, Z) with
unknown a, b, c ∈ Zp, C’s goal is to output 1 if Z = e(g, g)abc and 0 otherwise. C
acts as a challenger with adversary A as follows.
Setup: C runs ( (cid:2)params, (cid:2)msk)←IBE.Setup(1λ), sets g1 = ga, and chooses H1,
H2, H3 as random oracles. C gives the public parameters params = ( (cid:2)params,
g, g1, H1, H2, H3) to A and keeps (cid:2)msk itself.
Phase 1: A adaptively issues queries as follows:
Hash1 Query: On input of an identity ID, C does as follows: if there exists
a record (cid:11)ID, Q, q, (cid:12) in the H1-list, which the list is initially empty, returns
Q; else chooses  ←R {0, 1} and q ←R Zp. If  = 0, computes Q = gq; else
computes Q = gbq and adds (cid:11)ID, Q, q, (cid:12) into the H1-list. C returns Q to A.
Hash2 Query: On input of X, C does the following: if there exists a record (cid:11)X, v(cid:12)
in the H2-list, which the list is initially empty, returns v; else selects v ←R Zp,
and adds (cid:11)X, v(cid:12) into the H2-list. C returns v to A.
Hash3 Query: On input of (δ, M), C does the following: if there exists a record
(cid:11)δ, M, r, gr(cid:12) in the H3-list, which the list is initially empty, returns r; else selects
r ←R Zp, adds (cid:11)δ, M, r, gr(cid:12) into the H3-list. Returns r to adversary A.
Extraction Query: On input of an identity ID, C ﬁrst issues Hash1 Query on
the identity ID and gets the tuple (cid:11)ID, Q, q, (cid:12). If  = 1, C outputs ⊥ and
aborts; else C computes sk0
1. Then runs IBE.Extract( (cid:2)msk, ID) to obtain
ID) to adversary A.
ID. C returns skID = (sk0
sk1
Decryption Query: On input of (cid:11)ID, CT(cid:12),C parses CT as (svk, σ, T, C1), where
ID1)||···||(c0
IDt). If Ver(svk, T||C1, σ) = 0, C outputs ⊥;
C1 = (c0
else C issues Hash1 Query on ID to obtain the tuple (cid:11)ID, Q, q, (cid:12). When
 = 0, C computes sk0
ID and the master secret
1, and then uses sk0
key (cid:2)msk to respond this Decryption Query. When  = 1, C computes
ID ← IBE.Extract( (cid:2)msk, ID), computes L =IBE.Dec(sk1
IDj ) in turn for
sk1
ID, c1
j ∈ {1, 2, ··· , t}. If L is ⊥, continues to the next j until L as svk
(cid:4)||δ
(cid:4). Then
(cid:4)) to
checks if svk = svk
, M
, if not, outputs ⊥; else returns M
(cid:4).
, gr(cid:3)
gets (δ
(cid:4)||M
(cid:4), if not, output ⊥; else queries Hash3 Query on (δ
(cid:4)
), and then checks if T = gr(cid:3)