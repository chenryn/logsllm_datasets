r
e
v
i
t
i
s
o
p
e
s
a
f
l
NMF
k−means
0.7
0.6
0.5
0.4
0.3
0.2
0.1
0
e
t
a
r
e
v
i
t
a
g
e
n
e
s
a
f
l
NMF
k−means
−0.1
0
50
100
200
number of failure instance
150
250
300
−0.1
0
50
100
200
number of failure instance
150
250
300
(a) false positive rate comparison
(b) false negative rate comparison
Figure 14: Eﬀect of sample size on a topology extracted from a real data set
modems have never been observed to be faulty or oﬄine.
These modems are excluded from our analysis. Among the
53 failure instances, 20 of them are identical to the previous
observation instances. These duplicate failure instances pro-
vide no additional information for FG identiﬁcation, hence
are also not considered in our study. As a result, our failure
instance matrix X has 33 × 1471 elements.
Using X as input, we apply both NMF and k-means al-
gorithms to identify FGs, and validate the results against
the actual topology. For the k-means algorithm augmented
with geographic information, we set the parameter λ to 0.05,
which is a value we set to yield the best results with this data
set. The results are summarized in Table 1. We see that the
results derived by the NMF algorithm have similar accu-
racy compared those derived by k-means algorithm with ge-
ographic information, although false negative rate is slightly
lower for the former. Note that without the geographic in-
formation, the k-means algorithm cannot converge in this
case; thus FGs cannot be identiﬁed. The non-convergence
issue is a major drawback of the k-means algorithm, espe-
cially when it is applied in high-dimensional data space. On
the other hand, the k-means algorithm with geographic in-
formation requires careful tuning of parameter λ to balance
the weight between failure observation and geographic infor-
mation, which is nontrivial in practice. Hence, we conclude
that the NMF-based algorithm is more suitable for a prac-
tical NetworkMD system.
We note that the false positive and false negative ratios
are higher than those observed in our simulation. There are
several potential reasons for that, aside from the eﬀect of
noise in the real data set.
• Insuﬃcient failure instances: Many interfaces rarely
failed during the monitoring period. As a result, it is
diﬃcult for our algorithm to discover the FGs associ-
ated with these interfaces.
• Failure correlation: We found that in the data set,
there were many cases in which several interfaces al-
ways failed together. Since our algorithm is solely
based on the failure pattern recognition, it would place
the cable modems attached to those interfaces into the
same failure group, which increases the false positive
rate (when compared the derived FGs to the “ground
truth”).
• Non-random failure noise: As noted earlier, the ground
truth of FG association is determined at the interface
level. However, in the reality, repeaters under inter-
faces may also fail. During our monitoring period, al-
though some interface never failed, a subset of the ca-
ble modems under certain repeater may failed together
due to the repeater’s failure. Such failure patterns will
result in higher false negative rate, because our algo-
rithm will not consider those never failed modems and
the failed ones (although they are under the same in-
terface) to be in the same failure group.
• Misconﬁgurations: It is possible that in the topology,
the modems are mistakenly connected to CMTS in-
terfaces. Such misconﬁgurations in the “ground truth”
can lead to both higher false positive rate and higher
false negative rate.
We manually examined the data set. Among the above 4
possible causes, we found the ﬁrst one was the most promi-
nent cause of inaccuracy. For example, if we simply merge
the interfaces that hardly failed into one FG, the false posi-
tive ratio of NetworkMD using NMF algorithm would reduce
to below 5%. The discrepancy between the inferred FGs and
the real topology also indicates the possibility of misconﬁgu-
ration in our topology. We have not yet conﬁrmed this with
the cable provider.
5.3 Modem Failure Estimation
As an application of NetworkMD, we demonstrate how
to reduce the overhead of active probing by failure estima-
tion. In the active probing phase, we allow a CMTS to send
probes to only a subset of the modems to which it connects.
Reducing the probe messages makes the whole monitoring
infrastructure more scalable. With sampled probing, we es-
timate the status of all modems by leveraging the correlation
of the modem failure pattern, or more speciﬁcally, the FG
association identiﬁed by NetworkMD.
The failure estimation involves four steps. First, Net-
workMD monitors all modems to derive the composition of
algorithm
NMF
k-means with geo
k-means without geo
false positive rate
false negative rate
0.09
0.106
N/A
0.133
0.249
N/A
Table 1: accuracy of NetworkMD in a real cable network.
FGs. Next, after the FG association is obtained, the sys-
tem randomly select a subset of modems to probe when a
failure event is detected4. Third, we apply the greedy min-
set-cover algorithm proposed in [15] to identify which FGs
are responsible for the failures. Finally, we use the com-
bination of the failure explanation and FG composition to
estimate the statuses of the modems that are not probed.
To evaluate the eﬀectiveness of the above failure estima-
tion procedure, we again use the data set described in sec-
tion 5.2. We ﬁrst partition failure instance matrix X into
a training data set and a testing data set. The training
data set is used to derive the FG composition (as in the ﬁrst
step). Then, we emulate probing 20% of the modems based
on the testing data set, and estimate the failure statuses of
the remaining 80% of the modems. We compare three cases
in this study and show the results in Figure 15. In the ora-
cle case, the actual FGs (based on the topology) are known
a prior so that the training stage is unnecessary. This is
obviously unrealistic, but can serve as a benchmark. In the
cases when the NMF and k-means algorithms are applied,
we rely on these two algorithms to infer FGs respectively,
using the training data set. For all three cases, we measure
the error in estimating the status of unobserved modems.
The estimation error is measured by the ratio of the number
of mistakenly estimated modems to the number of total un-
observed modems. As the ﬁgure shows, due to the noise in
the data set, even with an oracle of the topology, we cannot
achieve 0% estimation error rate. The estimation error of
NMF-based method is as low as 5% when more than 70%
of the failure instances are in the training data set. This is
better than the results obtained using the k-means method,
which has at least 7% estimation error no matter how much
data was used in the training phase.
6. RELATED WORK
Failure diagnosis is an important area in network manage-
ment. There is a tremendous amount of work that studies
this problem in IP, telephony, and cable networks. Com-
mercial network failure management systems such as Open-
View [10], SMARTS [7] and iGlass [11] provide frameworks
for monitoring performance and handling failures. In par-
ticular, these systems are designed to interpolate with stan-
dard network management protocols, such as SNMP [2] or
DOCSIS [13], and provide basic capabilities of rule-based
correlation analysis. One limitation of such systems is that
they can only discover failures of network devices that can
be directly monitored.
There are a number of studies that looked into the prob-
lem of unobservable metrics [22, 15, 16, 23, 21]. For exam-
ple, Steinder et. al. investigated an application of Bayesian
reasoning using belief networks to locate faults in complex
communication systems [22]. On the other hand, the SCORE
system [15] and its later work [16] use an approach based on
4Although a clever modem selection algorithm can make the
estimation more eﬀective, it is out of the scope of this paper.
0.1
0.09
0.08
0.07
0.06
0.05
0.04
0.03
0.02
0.01
r
o
r
r
e
n
o
i
t
a
m
i
t
s
e
0
0.1
0.2
0.3
oracle
NMF
k−means
0.7
0.8
0.9
0.4
training data percentage
0.5
0.6
Figure 15: Study modem failure estimation by vary-
ing the training data set size
risk modeling. Risk modeling involves creation of a depen-
dency relationship between observable events and potential
causes. SCORE uses a greedy algorithm based on a min-
set-cover technique to localize faulty devices whose statuses
are hidden from the monitoring infrastructure. Kandula et.
al.
further studied the problem of noisy measurement and
mis-conﬁgured risk group description. They proposed an
algorithm called Shrink based on Bayesian networks with
polynomial running time bound. However, all these systems
assume that the relationship between the events and the
causes are (mostly) known.
In our problem setting, com-
plete topology information is not required. The proposed
solution does not assume the availability of such informa-
tion, but instead infers the missing topology through failure
group association.
Aside from the failure diagnosis and network management
area, NetworkMD also relates to topology inference and dis-
covery in the Internet [6, 3, 19, 9, 20]. These works usually
require traceroute-like in-network probing or access to BGP
routing table, neither of which is available in last-mile cable
networks. A particular class of the research problems, called
network tomography [8], describes a series of network infer-
ence and monitoring problems, such as traﬃc matrix estima-
tion and topology identiﬁcation, without in-network probing
support. In particular, Coates et. al.
investigated how to
use end-to-end latency measurement to discover the network
topology without performing traceroute [4, 5]. They pro-
posed to use “sandwich” probes to measure delay diﬀerence
and model the topology to maximize a penalized likelihood.
In their work, a special Markov Chain Monte Carlo proce-
dure was used to do maximized likelihood estimation. Un-
fortunately, these network tomography techniques cannot be
directly applied in failure diagnosis in cable networks. For
example, in [4], the end-to-end metrics are required to be
separable, meaning a path metric can be decomposed into
the metrics associated with the links comprising the path.
In cable network fault diagnosis, the metric of a path from
a CMTS to a modem is a binary status indicator. It is un-
clear how to adapt their solutions to this problem setting.
Unlike their work, the NetworkMD solution is designed to
infer missing topologies based on binary failure status data.
7. CONCLUSIONS AND FUTURE WORK
NetworkMD (Network Management and Diagnosis) is an
automated topology inference and failure diagnosis frame-
work for last-mile distribution networks.
It provides an
unsupervised learning algorithm that creates failure groups
based on end-to-end failure pattern measurement. The learn-
ing algorithm is based on non-negative matrix factorization
(NMF) and further extended to deal with unknown num-
ber of FGs and cascaded topology. Besides the NMF-based
algorithm, NetworkMD can also use a standard clustering
algorithm (k-means) to infer FG association, while taking
advantage of geographic information when available. These
algorithms are not only applicable in cable network diagno-
sis, but can also be generalized to other networks with tree-
like topologies. We have conducted extensive simulations
and experiments with NetworkMD. Our evaluation shows
its eﬀectiveness in both simulated settings and for datasets
collected from a commercial cable network.
Going forward, there are several interesting applications
that can be built using NetworkMD. One such application
is to combine the inferred FGs with geographic information
of end-points to help physically localize failures (such as a
cable cut). Another application can compare the inferred
FGs to the known topology and ﬂag inconsistencies as po-
tential misconﬁgurations to the network operator. A third
application can combine better sampling techniques with the
inferred FGs to reduce the overhead of active probes, allow-
ing service providers to respond faster to failures.
Acknowledgement
We thank Nikos Anerousis, Lawrence Saul, Jimeng Sun, Re-
nata Teixeira, Kilian Weinberger and the anonymous review-
ers for their helpful comments on the earlier versions of this
paper.
8. REFERENCES
[1] C. M. Bishop. Neural Networks for Pattern
Recognition. Oxford University Press, 1995.
[2] J. Case, M. Fedor, M. Schoﬀstall, and J. Davin.
RFC1157: Simple Network Management Protocol
(SNMP). IETF, April 1990.
[3] H. Chang, R. Govindan, S. Jamin, S. J. Shenker, and
W. Willinger. Towards capturing representative
AS-level internet topologies. Computer Networks,
44(6):737–755, 2004.
[4] M. Coates, R. Castro, R. Nowak, M. Gadhiok,
R. King, and Y. Tsang. Maximum likelihood network
topology identiﬁcation from edge-based unicast
measurements. In Proceedings of the ACM
International Conference on Measurement and
Modeling of Computer Systems (SIGMETRICS),
pages 11–20, 2002.
[5] M. Coates, M. Rabbat, and R. Nowak. Merging logical
topologies using end-to-end measurements. In Internet
Measurment Conference (IMC), 2003.
[6] B. Donnet, P. Raoult, T. Friedman, and M. Crovella.
Eﬃcient algorithms for large-scale topology discovery.
SIGMETRICS Performance Evaluation Review,
33(1):327–338, 2005.
[7] EMC. SMARTS.
http://www.emc.com/products/software/smarts
/smarts family/.
[8] L. Gang, M. Coates, G. Liang, R. Nowak, and B. Yu.
Internet Tomography: Recent Developments.
Statistical Science, Mar 2004.
[9] Y. He, G. Siganos, M. Faloutsos, and
S. Krishnamurthy. A systematic framework for
unearthing the missing links: Measurements and
impact. In Proceedings of the 4th USENIX Symposium
on Networked System Design and Implementation
(NSDI), 2007.
[10] Hewlett-Packard. Management Software: HP
OpenView. http://h20229.www2.hp.com/.
[11] iGlass. iGlass. http://www.iglass.net.
[12] H. Jamjoom, N. Anerousis, R. Jennings, and D. Saha.
Service Assurance Process Re-Engineering Using
Lacation-aware Infrastructure Intelligence. the Tenth
IFIP/IEEE International Symposium on Integrated
Network Management, May 2007.
[13] D. Jones and R. Woundy. RFC3256: The DOCSIS
(Data-Over-Cable Service Interface Speciﬁcations)
Device Class DHCP (Dynamic Host Conﬁguration
Protocol) Relay Agent Information Sub-option. IETF,
April 2002.
[14] S. Kandula, D. Katabi, and J. P. Vasseur. Shrink: A
tool for failure diagnosis in IP networks. In Proc. of
ACM SIGCOMM MineNet Workshop, 2005.
[15] R. R. Kompella, J. Yates, A. Greenberg, and A. C.
Snoeren. IP fault localization via risk modeling. In
Proceedings of NSDI, 2005.
[16] R. R. Kompella, J. Yates, A. Greenberg, and A. C.
Snoeren. Detection and Localization of Network Black
Holes. In Proceedings of IEEE Infocom, May 2007.
[17] D. D. Lee and H. S. Seung. Algorithms for
non-negative matrix factorization. In Proceedings of
Neural Information Processing Systems (NIPS), pages
556–562, 2000.
[18] T. Li. A general model for clustering binary data. In
KDD ’05: Proceeding of the eleventh ACM SIGKDD
international conference on Knowledge discovery in
data mining, pages 188–197, New York, NY, USA,
2005. ACM Press.
[19] Z. M. Mao, D. Johnson, J. Rexford, J. Wang, and
R. Katz. Scalable and accurate identiﬁcation of
AS-level forwarding paths. In Proceedings of IEEE
Infocom, Mar 2004.
[20] Z. M. Mao, L. Qiu, J. Wang, and Y. Zhang. On
AS-level path inference. In the International
Conference on Measurement and Modeling of
Computer Systems (SIGMETRICS), pages 339–349,
2005.
[21] P. Sebos, J. Yates, D. Rubenstein, and A. Greenberg.
Eﬀectiveness of shared risk link group auto-discovery
in optical networks. In Proceedings of the Optical Fiber
Communication Conference, 2002.
[22] M. Steinder and A. Sethi. Increasing robustness of
fault localization through analysis of lost, spurious,
and positive symptoms. In Proc. of IEEE INFOCOM,
New York, NY, 2002., 2002.
[23] P. Wu, R. Bhatnagar, L. Epshtein, M. Bhandaru, and
Z. Shi. Alarm correlation engine (ACE). In
Proceedings of Network Operations and Management
Symposium’98, Feb. 1998.