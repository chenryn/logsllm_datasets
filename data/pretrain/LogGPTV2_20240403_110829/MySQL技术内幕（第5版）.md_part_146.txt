对于复制从服务器从其主服务器的二进制日志里接收到的更新，此变量控制着从服务器是
using_indexes.
行记录，将使得日志文件迅速变得较大。请参考log_throttle_queries_not_
如果启用了慢查询日志，则此变量将控制那些不使用索引的查询是否应该被记录。如果进
变量 general_log_file或 slow_query_log_file，可以指定相应日志文件的名字。
则NONE值会禁用日志记录功能，并且它比其他的值优先级更高。默认值为FILE。设置系统变
如果启用了普通查询日志和慢查询日志，则此变量指定的是它们的输出目标。此变量列出的是
mysqld会添加一个扩展名.err。
给出的，则服务器会将它解释为相对于数据目录。如果在指定文件名时没有带扩展名，
HOSTNAME.err，其中，HOSTNAME为服务器主机的名字。如果其文件名是以相对路径形式
错误日志文件的名字。如果不设置此变量，服务器会把出错信息输出到控制台终端。如果
改任何数据）。如果想禁用这些附加的要求，可以将此变量值设置为1。
的值为O（默认值），那么还必须拥有SUPER权限，并且声明该存储函数是确定性的（即不会修
权限。不过，如果启用了二进制日志记录功能，并且log_bin_trust_function_creators
如果要创建或修改存储函数，则必须拥有相应的 CREATE ROUTINE 权限或ALTER ROUTINE
二进制日志索引文件的名字。此变量是在MySQL5.6.2里引入的。
区
态）
一组以逗号分隔的输出目标名。允许目标包括：TABLE、FILE 和NONE。如果指定了此变量，
些警告消息；如果值为1（默认值），则启用记录。如果此变量的值大于1，则会提高日
general_log或slow_query_log之后，可以启用或是禁用相应的日志功能。设置系统
服务器启动时指定了此变量，但未设置具体值，则日志文件名为数据目录里的
。此变量是在MySQL5.6.5里引入的。
则服务器会将该查询写入
D.1
系统变量
617
是
---
## Page 638
618
口max_binlog_cache_size（启动：直接设置；作用范围：全局；动态）
口max_allowed_packet（启动：直接设置；作用范围：全局、会话；动态）
口1
口master_info_repository（启动：直接设置；作用范围：全局；动态）
口lower_case_table_names（启动：直接设置；作用范围：全局）
lower_case_file_system（作用范围：全局）
口low_priority_updates（启动：直接设置；作用范围：全局、会话；动态）
句的语句会被单独缓存；请参考max_binlog_stmt_cache_size。
出了此变量所设定的最大长度，就必须被刷新到一个临时硬盘文件里。那些影响非事务语
在二进制日志缓存里，它们要等到事务被提交时才会被写入二进制日志。如果某个事务走
它指的是二进制日志缓存的最大大小。在事务被提交之前，构成事务的那些语句都会保有
别是1MB和1GB。它的会话值是只读的。
这个值也会限制 MySQL服务器所能处理的字符串的最大长度。此变量的默认值和最大值分
为net_buffer_length个字节，但是会根据需要增大到max_allowed_packet 个字节。
它指的是服务器与客户端之间通信时使用的那个缓冲区的最大大小。该缓冲区的初始大小
否验证这些事件的校验和。默认值为OFF。此变量是在MySQL5.6.2里引入的。
此变量表示的是，在主服务器把从二进制日志里读取到的事件发送到从服务器之前，它是
master_verify_checksum（启动：直接设置；作用范围：全局；动态）
5.6.2里引入的。
TABLE，则服务器会把日志记录到mysql.slave_master_info表中。此变量是在MySQL
FILE（默认值），则从服务器日志文件由--master-info-file 选项指定。如果该值为
此变量表示的是，从服务器是将主服务器的日志信息写入文件，还是写入表。如果该值为
也会使得表的别名不区分大小写。
文件名的大小写，那么MySQL服务器将自动把此变量设置为2。将此变量设置为非零值，
当没有显式设置lower_case_table_names变量时，如果数据目录所在的文件系统不区分
字比较。下表列出了各种可能的取值。
名和表名所对应的目录名和文件名。当执行这些语句时，它还控制着服务器会如何进行名
样的。）如果此变量的值为OFF，则文件名区分大小写。
ON，则文件名不区分大小写。（即可以把ON 的含义理解为文件名的大写和小写版本都是-
此变量用来表明包含数据目录的文件系统是否区分文件名的大小写。如果此变量的值为
果，并把插入操作恢复到正常的优先级。
的效果一样。对于单独的 INSERT 语句，可以通过 HIGH_PRIORITY 选项来取消此变量的效
条 SELECT语句还在执行，那么新语句会立即执行，而不是等待低优先级的修改语句。对于
表上没有 SELECT 语句正在执行或者正在等待执行。如果有新的 SELECT语句到来时，
作。那些会修改表内容的语句（DELETE、INSERT、REPLACE、UPDATE）将一直等待，直到
如果启用此变量，则对于使用表级锁定机制的存储引擎，更新操作的优先级将低于检索操
附录 D系统变量、状态变量和用户变量参考
取值
0
才会使用此变量的值
在创建数据库和表时，名字强制转换为小写形式。名字的比较不区分大小写
会区分大小写。在文件名区分大小写的系统里，它是默认设置
按照CREATE DATABASE和CREATE TABLE语句里给出的名字来创建磁盘文件。名字的比较
含义
超
存
项
---
## Page 639
口max_prepared_stmt_count（启动：直接设置；作用范围：全局；动态）
max_length_for_sort_data（启动：直接设置；作用范围：全局、会话；动态）
max_join_size（启动：直接设置；作用范围：全局、会话；动态）
max_insert_delayed_threads（启动：使用--max-delayed-threads 选项；作用范
max_heap_table_size（启动：直接设置；作用范围：全局、会话；动态）
口max_error_count（启动：直接设置；作用范围：全局、会话；动态）
口max_delayed_threads（启动：直接设置；作用范围：全局、会话；动态）
口max_connections（启动：直接设置；作用范围：全局；动态）
口max_connect_errors（启动：直接设置；作用范围：全局；动态）
口n
max_binlog_size（启动：直接设置；作用范围：全局；动态）
将其用于限制服务器占用的内存。此变量的可取值范围是0~1000000，默认值为16 382。
它指的是服务器可以同时维护的预处理语句的最大数。将此变量的值设置得更小一点，可
查询优化器将使用此变量来确定应该为ORDERBY操作执行哪一种filesort动作。
max_join_size 设置为 DEFAULT 以外的某个值，会自动将 sql_big_selects 设置为 0。
的查询结果不需再次执行该查询即可被返回。
句，则可以使用此变量。这个限制不会应用于存储在查询缓存里的查询结果，因为缓存里
max_join_size 行，则会出现一个错误。如果你习惯于编写会返回大量行的 SELECT 语
当执行多表连接时，MySQL优化器会估算它需要检查多少个行组合。如果估算值超过了
此变量等同于max_delayed_threads。
tmp_table_size变量的描述。
过多的内存。此变量还会对服务器如何处理其内部使用的各种内存表产生影响；请参考对
用ALTERTABLE或者TRUNCATETABLE语句来修改它们。此变量可以用于防止服务器使用
它指的是新建MEMORY表的最大允许长度。
被统计。此变量只会影响相关信息的存储数量，并且可供SHOWERRORS 和SHOW WARNINGS
它指的是服务器可以保存的出错信息、警告信息和提醒信息的最大数量。
为0，以便在自己的会话里禁用DELAYED 插入。
时，所有新接收到的这类语句都将被当作非 DELAYED 语句。客户端可以把此变量的值设置
使用。）
它指的是为处理INSERT DELAYED 语句而允许创建的最大线程数。当达到最大处理器数
它指的是客户端连接的最大并发数。默认值为151。
Connect_errors_xxx.
它指的是，主机在被阻止继续进行连接之前，允许连接失败的次数。
被单独缓存起来）。此变量是在MySQL5.5.9里引入的。
此变量与 max_binlog_cache_size 相似，但是仅限于那些影响非事务表的语句（它们会
max_binlog_stmt_cache_size（启动：直接设置；作用范围：全局；动态）
中继日志文件的大小进行限制。
如果 max_relay_log_size 被设置为0，那么 max_binlog_size 变量也会对从服务器的
认值为1GB。
MySQL服务器将关闭它，并开始使用下一个文件。此变量的取值范围为4KB~1GB。
它指的是二进制日志文件的最大大小。如果当前二进制日志文件达到了此大小，
变量需要与 sql_big_selects 变量一起使用，详见对该变量描述的讨论。将
围：全局、会话；动态）
主机试图攻击数据库系统。如果想清空这个主机缓存，并重新启用被阻塞的主机，可以
。更改此变量的值不会影响那些已有表，除非使
D.1系统变量
这是为了防止有人从
(这些信息总是会
619
默
2
---
## Page 640
620
myisam_mmap_size（启动：直接设置；作用范围：全局）
口myisam_max_sort_file_size（启动：直接设置；作用范围：全局；动态）
myisam_data_pointer_size（启动：直接设置；作用范围：全局；动态）
口min_examined_row_limit（启动：直接设置；作用范围：全局、会话；动态）
口max_write_lock_count（启动：直接设置；作用范围：全局；动态）
口max_user_connections（启动：直接设置；作用范围：全局、
口max_tmp_tables（启动：直接设置；作用范围：全局、会话；动态）
口max_sp_recursion_depth（启动：直接设置；作用范围：全局、会话；动态）
max_sort_length（启动：直接设置；作用范围：全局、会话；动态）
口max_seeks_for_key（启动：直接设置；作用范围：全局、会话；动态）
max_relay_log_size（启动：直接设置；作用范围：全局；动态）
口
它指的是压缩后的 MyISAM表文件在进行内存映射时使用的最大内存量。此变量是在
定。如果临时文件的大小可能会大于这个值，则需要使用键缓存。
既可以使用一个临时文件，也可以使用键缓存。具体使用哪一种方法由这个变量的值来决
对于 REPAIR TABLE、ALTER TABLE或LAOD DATA等语句，在对MyISAM表进行重建时，
对于个别的表，这个指针大小会受到指定的那个MAX_ROWS表选项的影响。
它指的是MyISAM索引文件的行指针的字节大小。此变量的取值范围是2~7，默认为6。
一个查询至少需要检查min_examined_row_limit个行才被允许记录到慢查询日志。默认
它指的是服务器为元数据锁所使用的那个缓存的大小。此变量是在MySQL5.5.19里引入的。
metadata_locks_cache_size（启动：直接设置；作用范围：全局）
值为0。
锁的语句，服务器将适当提升它们的优先级。
在对某个表使用了max_write_lock_count个写锁定之后，对于那些正在等待获得该表读
如果需要为某个特定的账户指定连接限制，可以使用GRANT语句。
一个非零的MAX_USER_CONNECTIONS值。此时，该会话值将从账户的行里获得。
此变量的会话值是只读的。它的会话值与全局值是相等的，除非账户在user表里的行拥有
接数还会受到max_connections变量的全局限制。
它指的是每个账户同时进行连接的客户端最大个数。默认值为0，表示
此变量未被使用。
它指的是每个存储过程的最大递归深度。默认值为0（不允许递归），最大值为255。
加这个值可以获得更好的区分效果。
数，同时也不会损失精确度。反之，如果被排序值在这么多的字节内不是唯一的，那么增
使用每个数据值的前max_sort_length个字节来进行排序。默认值为1024。如果被排序
扫描。
找时最多只需要指定数量的索引寻找，从而使其更倾向于选择使用索引，而不会执行全表
全表扫描的方式来代替。把此变量设置成某个小一点的值，则会使优化器认为在执行键查
量的唯一值），那么优化器可能会认为在执行键查找操作时需要进行多次查找，从而会采用
查询优化器在进行基于键的查找时会使用此变量。如果某个索引的差异度比较低（只有很少
为4KB~1GB；默认值为0。
将使用 max_binlog_size 变量来控制中继日志文件的最大长度。此变量的取值范围
则MySQL服务器将关闭它，并开始使用下一个文件。如果此变量的值是O，则服务器
它指的是从服务器中继日志文件的最大长度。如果当前中继日志文件达到了此大小，
当将其值设置为0时，可以完全禁用预处理语句。
值在这么多的字节内是唯一的，那么将此变量设置为更小一点的值可以获得更少的比较次
附录D系统变量、状态变量和用户变量参考
、会话；动态）
“无限制”
。并发连
---
## Page 641
口old_alter_table（启动：直接设置；作用范围：
口
net_buffer_length（启动：直接设置；作用范围：全局、会话；动态）
口
口
口
口
口n
口n
器并不需要临时副本。启用此变量可以让服务器使用临时副本。
对于某些ALTERTABLE操作（在MySQL5.0里，个
提示无法应用到ORDER BY 或GROUP BY子句。
它是一个用于解决兼容问题的变量，可以启用某些较旧的行为特性。
old（启动：直接设置；作用范围：全局）
此变量未被使用。
new（启动：直接设置；作用范围：全局、会话；动态)
它指的是在连接出现超时之前将数据写入客户端所需要等待的秒数。
net_write_count（启动：直接设置；作用范围：全局、会话；动态）
它指的是中断的读取操作被重试的次数。
net_retry_count（启动：直接设置；作用范围：全局、会话；动态）
它指的是在连接出现超时之前等待客户端发送数据的秒数。
net_read_timeout（启动：直接设置；作用范围：全局、会话；动态）
16KB。它的会话值是只读的。
可以扩展到max_allowed_packet 个字节大小。此变量的取值范围是1KB~1 MB；默认为
它指的是服务器与客户端程序进行通信时使用的连接和结果缓冲区的初始大小。此缓冲区
认值为OFF。
它指的是服务器是否允许客户端使用命名管道连接。只有 Windows 支持这种连接方式。默
named_pipe（启动：直接设置）
它指的是服务器在读写MyISAM表时是否需要使用内存映射。默认值为OFF。
myisam_use_mmap（启动：直接设置；作用范围：全局；动态）
nulls_unequal（每个NULL 值单独成为一组）或nulls_ignored（忽略NULL值）。
此变量表示的是，服务器在为MyISAM表统计其索引键的分布概率时，应该把NULL值视为
myisam_stats_method（启动：直接设置；作用范围：全局、会话；动态）
缓冲区，以便对MyISAM表的索引进行排序。此变量指定的便是该缓冲区的大小。
在执行类似ALTER TABLE、CREATE INDEX和 REPAIR TABLE 这样的操作期间，需要分配
myisam_sort_buffer_size（启动：直接设置；作用范围：全局、会话；动态）
阶段。
用单个线程进行修复。将此变量的值设置为大于1，实现多线程修复一
它指的是在修复操作过程中用来创建MyISAM表索引的线程个数。默认值为1，表示的是使
myisam_repair_threads（启动：直接设置；作用范围：全局、会话；动态）
置，启用了延迟索引写入功能，那么启用表的自动修复功能是种不错的做法。
如果在运行服务器时启用了系统变量delay_key_write，或者对单个MyISAM表进行了配
或者OFF（不进行恢复；这是默认值）。
强制进行恢复）、QUICK（快速恢复）、DEFAULT（在恢复时不进行任何其他特殊的处理）
（如果修复操作会更改这个表，则先为它创建一个备份）、FORCE（即使丢失了多行数据也要
该表。这个变量的值应该为一个以逗号分隔的列表，其中可以带有这样一些选项：BACKUP
MyISAM表时，如果该表被标记为崩溃或者在上次使用时未正确关闭，那么它会尝试修复
它指的是自动修复MyISAM表时使用的模式。如果启用它，那么当服务器打开某个
myisam_recover_options（启动：直接设置；作用范围：全局）
相
MySQL5.5.1里引入的。
目同，还是视为不同。可设置的值包括有：nulls_equal(所有的NULL值在同一个组里)、
：
它们会需要表的临时副本），当前服务
全局、会话；动态）
D.1系统变量
，目前，它会导致索引
一此功能仍处于体验
621
---
## Page 642