如果浏览者能做上面这样的确认，那么应该也能够对使用了证书的原网站作出真伪鉴别。所以说与其花时间去确认证书认证标签的真伪，还不如确认网站本身的真实性，这样更快一些。
证书认证标签的问题不仅如此。由于这些认证标签一般会使用 JavaScript 或者浏览器插件来编写，所以如果标签本身存在 XSS 等漏洞的话，也会对嵌入证书认证标签网站的安全性代理产生不利影响。从这点意义上来说，证书认证标签不但没有降低系统的风险，反而是增加了安全隐患。
建议大家在确定了由证书认证标签带来的好处大于由此带来的风险时，才在网站上显示 SSL 证书的认证标签。
参考文献
[1] 高木浩光 . (2005 年 2 月 5 日 ). PKI よくある勘违い（3）“プライベート认证局が妥当ならオレオレ认证局も妥当だ”.参考日期：2011 年 1 月 13 日，参考网址：高木浩光＠自宅の日记 : http://takagi-hiromitsu.jp/diary/20050205.html#p02
7.4 防范恶意软件的对策
本节中我们将说明 Web 网站的恶意软件（病毒等非法软件）防范对策。首先介绍一下预防服务器端的恶意软件有什么意义，然后再详细说明具体的对策。
7.4.1 什么是 Web 网站的恶意软件对策
Web 网站的恶意软件对策主要防范以下情况。
（A）Web 服务器自己感染恶意软件
（B）通过 Web 网站传播恶意软件
无论是（A）还是（B），恶意软件都是保存在服务器上的，不同的是（A）的情况下，恶意软件在服务器上运行，而（B）的话恶意软件并不在服务器上运行，而是指用户可以通过网页下载的状态。
Web 服务器如果感染了恶意软件的话，带来的威胁和 OS 命令注入攻击一样。比如可能存在如下的威胁。
信息泄露
网站被篡改
非法使用其他功能
作为跳板对其他服务器发起攻击
如果 Web 服务器出现（B）的情况的话，则会带来如下影响。
浏览网页的用户 PC 可能会感染恶意软件 10
10
 前提是用户 PC 存在漏洞或者恶意软件被执行。
下面，我们再来看看恶意软件都是如何感染的。
7.4.2 恶意软件的感染途径
根据独立行政法人信息处理推进机构的调查 11
 ，病毒的感染途径主要如图 7-13 所示。从图中可以看出，病毒的感染途径中电子邮件占了 45.2%，上网占了 48.3%，外置存储（U 盘、移动硬盘等）和外部设备（带入本公司的客户 PC 等）占了 48%（调查为多项选择）。
11
 2009 年日本国内信息安全事件受害情况调查报告地址 http://www.ipa.go.jp/security/fy21/reports/isec-survey/
 。
图 7-13 个人电脑病毒的入侵途径
从上面的调查结果可以看出，通过在电脑上浏览网页或者查看邮件，以及使用外置存储设备等途径传播、感染病毒的情况较多。但是在 Web 服务器上一般不会做这样的操作，所以 Web 服务器感染病毒的途径中，利用系统漏洞的比例很高。
一般情况下谈到恶意软件的解决方法，肯定很多人会先想到用防病毒软件，但是在 Web 服务器上安装防病毒软件的比率还不是特别高。其原因就是服务器上感染恶意软件的途径和普通的客户端 PC 有所不同。
7.4.3 Web 网站恶意软件防范对策概要
从感染途径这一出发点来说，Web 服务器上的防范恶意软件措施有以下几点非常重要。
按时进行服务器的漏洞应对处理
不在服务器上安装、运行来历不明的软件
在服务器上不做无关操作（浏览网页或者查看邮件等）
不在服务器上使用 USB 等外部存储设备
将 Web 服务器和公司内部网络分离开
访问服务器的客户端 PC 安装防病毒软件并保持病毒库为最新状态
在客户端 PC 通过 Windows Update 等方式安装最新的安全补丁
首先建立能切实执行上述对策的体制，如果对上面的措施仍感到不安（比如不能适时实施漏洞对策等）的话，再考虑在服务器上安装防病毒软件。
7.4.4 如何确保服务器不被恶意软件感染
Web 服务器感染恶意软件的途径一般来说有如下几种。
利用 Web 应用的文件上传漏洞（参考 4.12 节）
利用 Web 网站的漏洞进行网站内容篡改（参考 7.1 节）
利用 FTP 等管理软件非法登录（参考 7.1 节）
管理服务器的 PC 感染了恶意软件，服务器被 PC 感染（参考 7.4.3 节）
网站内容被恶意软件感染（参考 7.4.3 节）
这些感染途径中，除了利用文件上传功能漏洞以外，其他的都可以用本章到目前为止所讲述的方法进行防范。关于利用文件上传漏洞的预防，可以按照后面要讲到的方法进行防范。
探讨是否需要制定针对恶意软件的防范措施
用户上传文件（图片、免费软件、PDF 文档等）的恶意软件对策的责任，应该由以下三者共同承担。
Web 网站运营者
上传文件的用户
下载、查看文件的用户
网站需要根据自己网站的特点来决定是否采取防病毒措施。具体来说可以根据以下项目进行判断。
上传文件的公开范围
上传文件是否有明确的责任人
谁对上传文件负主要责任
除了防病毒软件以外是否还有其他检查方法
制定病毒防范政策并向用户公开
在决定了是否要对恶意软件采取措施之后，应该以网站用户规约的形式把防范措施（也包括不采取任何防范措施）向网站用户公开并实施。需要公开的内容可以包括以下几条。
防范病毒的方法（不做病毒防范的时候也直接标明）
不可能查出全部的病毒，感染病毒的可能性也不是零（采取了防病毒措施的时候）
用户需要自己负责（推荐用户使用防病毒软件并保持病毒库为最新状态）
作为网站运营方不对用户感染病毒负责任
上面这些条目都是一般性的内容，各网站应该根据自己的特点，制定出符合自己实际情况的病毒防范政策。
使用防病毒软件
要想对用户上传的文件进行病毒扫描，可以采取的方法有下面几种。
在服务器上安装防病毒软件，将文件上传目录设置为扫描对象
使用防病毒网关
利用防病毒软件提供的 API 在自己的代码里进行病毒扫描
详细的信息可以向防病毒软件公司或者代理商咨询。
如果由网站进行病毒检查，可以借鉴一下微软的免费网盘 Windows Live SkyDrive12
 ，请参考下面的网站截图 13
 。
12
https://skydrive.live.com
13
 页面现实的文件 eicar.com 并不是真正的病毒文件，而是用来测试防病毒软件的测试文件。可以在 http://www.eicar.org/86-0-Intended-use.html
 下载。
图 7-14 Web 侧进行病毒扫描的例子（Windows Live SkyDrive）
专栏：Web 网站的防病毒对策和 Gumblar 的关系
本章讲到的一些防病毒软件对策，对抵御 Gumblar 也有很好的效果。
“Gumblar”是一种组合了 Web 网页篡改和通过浏览网页感染（仅浏览网页就会被感染的病毒）两种方法的一种病毒传播方式。
Gumblar 为了扩大病毒传播范围，会盗取 FTP 用户名和密码，然后再用这些账号信息去篡改网站内容，进而再去感染浏览这些网站的用户。
如果采用了本章所介绍的安全防范措施，使用公钥认证的 SCP 或 SFTP 代替传统的 FTP，再加上访问 IP 限制，就可以预防非法登录攻击了。而且如果客户端 PC 安装了防病毒软件的话，客户端也就可以避免被病毒感染了。
本章介绍的对策虽然都是最基本的内容，但是如果熟练使用这些方法的话，自然也能抵御 Gumblar。
关于 Gumblar 的详细信息，可以参考 http://www.ipa.go.jp/security/txt/2010/02outline.html
 [1]。
参考文献
[1] 独立行政法人信息处理推进机构（IPA）.（2010 年 2 月 3 日）. コンピュータウィルス·不正アクセスの届出状况 [1 月分 ] について（个人电脑中毒情况报告 [1 月份 ]）. 参考日期：2010 年 12 月 2 日，参考网址：情报処理推进机构：http://www.ipa.go.jp/security/txt/2010/02outline.html
 COLUMN END
7.5 总结
围绕如何提高 Web 网站的安全性，本章主要从以下方法进行了说明。
针对 Web 服务器漏洞的对策
由管理软件导致的非法登录对策
防范伪装攻击的对策
防范网络监听、篡改的对策
防范恶意软件的对策
上面提到的每种方法都是非常常见的针对 Web 网站攻击方法的防范措施。这些服务器对策以及应用程序本身的安全防范措施，都是确保网站安全性所必须采取的措施。请各位参考本章的内容来提高网站的安全性。
另外，关于如何防范钓鱼攻击，也请参考独立行政法人产业技术综合研究所的“建立安全 Web 网站的铁则”[1]。
参考文献
[1] 独立行政法人产业技术综合研究所 .（2007 年 3 月 23 日）. 信息安全研究中心 . 参考日期：2010 年 12 月 4 日，参考网址：安全な Web サイト利用の铁则（建立安全 Web 网站的铁则）：http://www.rcis.aist.go.jp/special/websafety2007/
第 8 章 开发安全的 Web 应用所需要的管理
本章将讲解开发安全的 Web 应用所需要进行的管理工作。这一章主要是面向发包方（甲方）的相关人员，以及实际进行开发（承包方，乙方）的项目经理。
8.1 开发管理中的安全对策概要
开发管理可以从开发体制和开发过程两方面进行控制。
图 8-1 从软件开发中发包方和承包方的立场，按照开发过程的各个阶段（从规划、招标直到运维），对在开发中涉及安全性的关键因素进行了整理。首先，需要在开发开始之前先制定开发体制，因此制定开发标准、培养信息安全责任人、对开发团队进行安全教育就显得尤为重要。图 8-1 描述了项目双方在开发过程中各个阶段重要注意的事项。
图 8-1 开发安全的应用程序需要的管理概要
8.2 开发体制
完备的开发体制对于开发安全的应用来讲至关重要。一个好的开发体制，要从开发标准等文档（物）和训练有素的团队（人）两方面着手。
开发标准的制定
就笔者的咨询经验来看，对于开发安全的应用来说，性价比最高的措施就是整理出一份好的开发标准（安全指南）了。一个好的开发标准需要满足以下条件。
不能太厚（只限于实用性较高的项目）
方便查找想参考的内容
明确记载应该实施的措施
持续改进
虽然制定开发标准的企业越来越多，但笔者曾看到过开发标准很多都是厚厚的一个大文件夹，而且内容都很抽象，阅读起来都很费力。开发标准是给开发工程师阅读的，因此只选取最有用的标准，将它做得薄一些，对降低开发成本也能起到一定的作用。
另外即使开发本身不在本公司内进行而是承包给其他公司，也应该制定一份开发标准，在招标的时候作为安全性需求附件提供给投标方。这样也能取得很好的效果。
在开发标准中应该记载下面列出的一些重要项目。
针对每种漏洞的对应方法
用户认证、会话管理、日志输出等实现方法
各个阶段的评审（Review）和测试方法（时间、人员、对象、方法）
项目验收（发布）评判标准（人员、时间、具体合格标准）
教育培训
虽然很多企业制定了开发标准，但遗憾的是就现在能真正使用这些开发标准的企业还很少。究其原因无外乎是之前讲过的，要么是因为开发标准的内容不太现实，要么就是团队（或公司）还没有建立一个能严格遵守开发标准的组织框架。
为了能按照开发标准进行开发，需要遵循以下一些要点。
开发标准本身的内容（参考上面内容）
在团队内展开开发标准培训
通过设计评审、代码评审来检查开发标准的执行情况
其中，关于开发标准培训中培训内容的关键点有以下几点。
事件、事例的介绍（提高大家对安全性的重视程度）
常见漏洞的原理及其影响
必须遵守的事项
此外每个团队最好都能培养出自己团队内部的安全责任人。安全负责人的主要职责包括以下几点。
制定、维护开发标准
展开开发标准培训
参加评审
进行安全测试
监测各种漏洞信息
以安全负责人为中心，不断地完善开发标准的同时，持续对开发团队进行安全培训，就会提高团队开发出安全应用程序的能力。
8.3 开发过程
本节我们将对开发安全应用程序的开发流程进行说明。以下说明中虽然都是以应用程序外包开发为例，但是自己公司内部开发时，除了角色担当不同之外，其所需要实施的内容都是一样的。
8.3.1 规划阶段的注意事项
在规划阶段非常重要的一件事就是要确保开发中和安全性相关的内容的预算。
要做预算的话必须先对安全性需求的整体内容进行讨论。把应用程序开发外包时，或者需要从外部调配安全产品时，可以在规划阶段制作 RFI（Request For Information，信息提供要求书），向承包商提供应用程序的概要和重要信息列表，并要求承包商提供关于提高系统安全性所需要的对策及大概的预算等信息。RFI 同时也可以作为对承包商的第一次审查，可以在这个阶段去评价承包商的意欲与能力。
8.3.2 招标时的注意事项
招标时会由发包方编写 RFP（Request For Proposal，需求建议书），让承包方据此进行估算并投标。关于安全性的功能需求也需要写在 RFP 中。由于 RFP 是进预算的前提，所以在 RFP 中明确记载安全性需求是非常重要的。
这里我们需要将安全性功能（需求）和安全性 Bug 分开考虑。首先安全性功能需求的成本投入和效果是成正比的，我们需要基于规划阶段的讨论结果来决定是否需要实现这些安全性功能并记录到 RFP 中。