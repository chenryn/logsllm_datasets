assumptions. Adtributor only works on RAPMD datasets when
the RAPs are one-dimensional, and its RC@k can reach about
33%.
F. Efﬁciency Comparison
As shown in Fig. 9(a), Since Adtributor only searches one-
dimensional cuboids and its search space is very small, its
efﬁciency on groups (1, 1), (1, 2) and (1, 3) on the Squeeze-B0
dataset is the highest among all methods with the magnitude
of running time in anomaly localization around 10−2, but
its effectiveness on groups (1, 2) and (1, 3) is too low. In
contrast, the efﬁciency of the proposed RAPMiner can reach
sub-optimal on the premise of ensuring the effectiveness of the
algorithm on groups (1, 1), (1, 2) and (1, 3), and the magnitude
of the running time to localize anomalies is 10−1. In addition,
it can also achieve optimal effectiveness and guarantee the
efﬁciency simultaneously on groups (2, 1), (2, 2) and (2, 3),
with the order of magnitude for time consumption ranging
from 10−1 to 100. Squeeze can achieve the best efﬁciency
in groups (3, 1), (3, 2) and (3, 3).
iDice shows the worst
efﬁciency among these algorithms and it takes more than 40s
on average to complete the anomaly localization.It should be
noted that the efﬁciency of RAPMiner is not related to the total
number of attributes, but the number of attributes contained
in the RAPs, because the redundant attributes can be deleted
by Algorithm 1, and time consumption will increase with the
increasing layer in top-down BFS search.
Fig. 9(b) shows, RAPMiner does not achieve the best
efﬁciency on RAPMD, because this dataset simulates the
actual anomaly localization scenario where there are many
3-dimensional RAPs in the failures, and the efﬁciency of
RAPMiner
in searching high-dimensional RAPs e.g., 3-
dimensional, is inferior to 1-dimensional or 2-dimensional, so
its efﬁciency on RAPMD is slightly lower than that of Squeeze
and FP-growth. Despite this, it is still in an acceptable range,
which is equivalent to sacriﬁcing some time for the effective-
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 13:17:38 UTC from IEEE Xplore.  Restrictions apply. 
327
(a) F 1-score comparison on Dataset of Squeeze-B0
(b) RC@k comparison over RAPMD dataset
Fig. 8. Effectiveness comparison on Dataset of Squeeze-B0 and RAPMD
(a) Running time comparison on Squeeze-B0
(b) Running time comparison on RAPMD dataset
Fig. 9. Efﬁciency comparison on Dataset of Squeeze-B0 and RAPMD
(a) Sensitivity evaluation for parameter tCP
(b) Sensitivity evaluation for parameter tconf
Fig. 10. Sensitivity evaluation for parameters tCP and tconf
RESULTS OF THE EFFICIENCY IMPROVEMENT STUDY
TABLE VI
Method
RAPMiner with Redundant Attribute Deletion
RAPMiner without Redundant Attribute Deletion
RC@3(%)
81.4
86.3
Time(s)
0.618
1.067
Efﬁciency Improvement
Effectiveness Decreased
42.07%
4.87%
ness of the algorithm. Although both Adtributor and Squeeze
achieve higher efﬁciency, they show inferior effectiveness. And
iDice shows low effectiveness and efﬁciency. The FP-growth-
based association rule mining method is a sub-optimal method
with high efﬁciency, but its effectiveness is about 10% lower
than that of RAPMiner.
G. Parameter Sensitivity
We study the sensitivity of the threshold tCP we employ in
CP-based redundant attribute deletion to help prune redundant
attributes and the conﬁdence threshold tconf we adopt in AC-
guided layer-by-layer top-down search to judge whether the
attribute combination is anomalous or not.
First, we set different values to parameter tCP to evaluate its
sensitivity. Since the classiﬁcation power represents the ability
to reduce the entropy on the dataset of the attribute, and our
goal is to delete the attributes which are inferior in reducing
the entropy, i.e., the redundant attributes or attributes unrelated
to the root anomaly patterns. Hence, the threshold tCP should
not be too large. We usually set it to less than 0.1 (10%). Fig.
10(a) shows that with the increase of the threshold tCP , the
RC@3 slightly decreases, which means the performance of
RAPMiner is not very sensitive to the threshold tCP .
In addition, we also evaluate the sensitivity of the thresh-
old tconf by setting the different values. Since the attribute
combination with higher anomaly conﬁdence is more likely to
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 13:17:38 UTC from IEEE Xplore.  Restrictions apply. 
328
be anomalous, this threshold should not be too small. Thus
several values greater than 0.5 (50%) are selected to illustrate
the sensitivity. As shown in Fig. 10(b), with the increase of
tconf , the RC@3 also increases slightly, which states that the
performance of RAPMiner is relatively stable w.r.t. tconf .
The parameter sensitivity analysis demonstrates there is a
large room for us to choose the threshold tCP and tconf .
H. The Efﬁciency Improvement of Redundant Attributes Dele-
tion
To illustrate the efﬁciency improvement of the proposed
CP-based redundant attribute deletion, we conduct two exper-
iments on RAPMD. One is the RAPMiner with Redundant
Attribute Deletion and the other is the RAPMiner without
Redundant Attribute Deletion. As reported in Table VI, the
redundant attribute deletion can improve the average efﬁciency
of RAPMiner by 42.07%, while the effectiveness is only
decreased by about 4.87%. The results verify the usefulness
of the proposed CP-based redundant attribute deletion.
VI. RELATED WORK
The research of anomaly localization mainly includes root
cause mining based on multi-dimensional KPIs and root cause
inference based on the dependency graph.
Root cause mining based on multi-dimensional KPI.
Many existing studies have focused on root cause mining using
multi-dimensional KPIs [13]–[15], [21], [22], [33]. Among
them, Adtributor [13] mainly focuses on anomaly localization
in the advertising system and assumes that the root anomaly
patterns are only located in a one-dimensional cuboid, consid-
ering the characteristics of the advertising system. In this way,
Adtributor only needs to traverse each attribute value of each
attribute, and the size of the search space equals the number
of attribute elements. Adtributor proposes three metrics to
determine whether an attribute combination is the root cause or
not: explanation power, succinctness, and surprise. In addition,
Adtributor designs different localizing mechanisms for funda-
mental and derived KPIs. iDice [14] can conduct root cause
mining in multi-dimensional attribute combinations. It narrows
the search space by pruning off attribute combinations through
the metric named “Impact”, performs anomaly detection of
attribute combinations via Change Detection, and conducts
root cause mining using Isolation Power. However, iDice has
inherent constraints and can not perform well in the case of
many root anomaly patterns. HotSpot [21] can also conduct
root cause mining in multi-dimensional attribute combinations.
It designs a root cause metric named potential score and adopts
the MCTS (Monte Carlo Tree Search) to mine the root causes
of anomalies. However, it is only suitable for fundamental
KPIs. Besides, HotSpot assumes that the root anomaly patterns
are only located in one cuboid at a time, and descendant
attribute combinations under the same root cause have the
same anomaly magnitude. Squeeze [22] is a supplement and
improvement to HotSpot. It proposes a potential generic score
based on HotSpot’s potential score, which can be applied to
both fundamental and derived KPIs and allow multiple failures
simultaneously. But the root anomaly patterns for each failure
locate only in the same cuboid. In addition, Squeeze also
assumed that attribute combinations under the same failure
have the same anomaly magnitude, and different attribute
combinations under various failures have different anomaly
magnitude. However, the anomaly magnitude of attribute com-
binations may be the same under different failures and vice
versa. [15] mentioned that association rule mining is used to
search for the root cause. There are many ways to realize
association rule mining, such as Apriori and FP-growth. The
efﬁciency of different implementation methods varies greatly
and the performance of some methods may be sensitive to
hyper-parameters. FluxRank [33] may be clustering and rank-
ing thousands or even millions of KPIs of different attribute
combinations to infer the system’s failures from the selected
digests directly.
Although these multi-dimensional KPI-based anomaly lo-
calization methods perform well in speciﬁc scenarios, e.g.,
the advertising system, software application, etc., they are not
effective in real-world CDN due to their desirable assumptions.
Compared with the existing methods, ARPMiner is more
practical in localizing root anomaly patterns effectively and
efﬁciently without strict assumptions.
Root cause inference based on dependency graph. In
this line of research, the fault localization research mainly
focuses on constructing the dependency graph between system
modules and the inference of the root cause of the fault based
on the constructed dependency graph. Current relevant studies
include but are not limited to [28]–[30], [34], [35], etc. Our
work can be used as a supplement to the root cause inference
based on the dependency graph because it can ﬁnd the exact
scope of failures and thus assist root cause analysis.
VII. CONCLUSION
In this paper, a novel root anomaly pattern Miner (RAP-
Miner) is proposed to tackle the anomaly localization chal-
lenges in real-world CDN scenario. RAPMiner considers the
practical distribution features of anomaly patterns to avoid
the desirable assumptions so that it is more practical. For
the ﬁrst time, RAPMiner combines a classiﬁcation power-
based redundant attribute deletion with anomaly conﬁdence
guided layer by layer top-down search to prune the non-
root cause attribute combinations and avoid searching for
anomaly but non-root patterns respectively, thus effective in
narrowing the search space. The extensive experiments show
the effectiveness and efﬁciency of RAPMiner compared with
the state-of-the-art baselines, especially in the CDN scenario.
ACKNOWLEDGMENT
This work was supported in part by National Natural
Science Foundation of China under Grant 61771469, and the
Cooperation project between Chongqing Municipal undergrad-
uate universities and institutes afﬁliated to CAS (HZ2021015).
We thank our shepherd Prof. Shuai Hao, and the anonymous
reviewers of DSN’22 for their insightful comments, which
helped improve the paper.
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 13:17:38 UTC from IEEE Xplore.  Restrictions apply. 
329
REFERENCES
[1] L. Dai, T. Lin, C. Liu, B. Jiang, Y. Liu, Z. Xu, and Z.-L. Zhang,
“SDFVAE: Static and dynamic factorized vae for anomaly detection
of multivariate cdn kpis,” in WWW ’21: The Web Conference, 2021.
[2] Y. Su, Y. Zhao, C. Niu, R. Liu, W. Sun, and D. Pei, “Robust anomaly
detection for multivariate time series through stochastic recurrent neural
network,” in ACM SIGKDD, 2019, pp. 2828–2837.
[3] M. Sun, Y. Su, S. Zhang, Y. Cao, Y. Liu, D. Pei, W. Wu, Y. Zhang,
X. Liu, and J. Tang, “Ctf: Anomaly detection in high-dimensional time
series with coarse-to-ﬁne model transfer,” in IEEE INFOCOM 2021,
2021, pp. 1–10.
[4] W. Chen, H. Xu, Z. Li, D. Pei, J. Chen, H. Qiao, Y. Feng, and Z. Wang,
“Unsupervised anomaly detection for intricate kpis via adversarial
training of VAE,” in IEEE INFOCOM, 2019, pp. 1891–1899.
[5] H. Xu, W. Chen, N. Zhao, Z. Li, J. Bu, Z. Li, Y. Liu, Y. Zhao,
D. Pei, Y. Feng, J. Chen, Z. Wang, and H. Qiao, “Unsupervised
anomaly detection via variational auto-encoder for seasonal kpis in web
applications,” in WWW ’18, 2018, pp. 187–196.
[6] Y. Su, Y. Zhao, M. Sun, S. Zhang, X. Wen, Y. Zhang, X. Liu, X. Liu,
J. Tang, W. Wu, and D. Pei, “Detecting outlier machine instances through
gaussian mixture variational autoencoder with one dimensional cnn,”
IEEE Transactions on Computers, pp. 1–1, 2021.
[7] D. Liu, Y. Zhao, H. Xu, Y. Sun, D. Pei, J. Luo, X. Jing, and
M. Feng, “Opprentice: Towards practical and automatic anomaly detec-
tion through machine learning,” in ACM IMC ’15, 2015, pp. 211–224.
[8] Y. Chen, R. Mahajan, B. Sridharan, and Z. Zhang, “A provider-side view
of web search response time,” in ACM SIGCOMM ’13, 2013.
[9] H. Yan, A. Flavel, Z. Ge, A. Gerber, D. Massey, C. Papadopoulos,
H. Shah, and J. Yates, “Argus: End-to-end service anomaly detection
and localization from an isp’s point of view,” in Proceedings of the
IEEE INFOCOM 2012, Orlando, FL, USA, March 25-30, 2012, A. G.
Greenberg and K. Sohraby, Eds.
IEEE, 2012, pp. 2756–2760.
[10] P. Bahl, R. Chandra, A. G. Greenberg, S. Kandula, D. A. Maltz, and
M. Zhang, “Towards highly reliable enterprise network services via
inference of multi-level dependencies,” in ACM SIGCOMM ’07. ACM,
2007, pp. 13–24.
[11] M. Ma, S. Zhang, D. Pei, X. Huang, and H. Dai, “Robust and rapid
adaption for concept drift in software system anomaly detection,” in 29th
IEEE International Symposium on Software Reliability Engineering,
ISSRE 2018, Memphis, TN, USA, October 15-18, 2018. IEEE Computer
Society, 2018, pp. 13–24.
[12] S. Zhang, Y. Liu, D. Pei, Y. Chen, X. Qu, S. Tao, and Z. Zang, “Rapid
and robust impact assessment of software changes in large internet-based
services,” in Proceedings of the 11th ACM Conference on Emerging
Networking Experiments and Technologies, CoNEXT 2015, Heidelberg,
Germany, December 1-4, 2015, F. Huici and G. Bianchi, Eds. ACM,
2015, pp. 2:1–2:13.
[13] R. Bhagwan, R. Kumar, R. Ramjee, G. Varghese, S. Mohapatra,
H. Manoharan, and P. Shah, “Adtributor: Revenue debugging in ad-
vertising systems,” in Proceedings of the 11th USENIX Symposium on
Networked Systems Design and Implementation, NSDI 2014, Seattle,
WA, USA, April 2-4, 2014. USENIX Association, 2014, pp. 43–55.
[14] Q. Lin, J. Lou, H. Zhang, and D. Zhang, “idice: problem identiﬁcation
for emerging issues,” in Proceedings of the 38th International Confer-
ence on Software Engineering, ICSE 2016, Austin, TX, USA, May 14-22,
2016, L. K. Dillon, W. Visser, and L. A. Williams, Eds. ACM, 2016,
pp. 214–224.
[15] F. Ahmed, J. Erman, Z. Ge, A. X. Liu, J. Wang, and H. Yan, “Detecting
and localizing end-to-end performance degradation for cellular data
services based on TCP loss ratio and round trip time,” IEEE/ACM Trans.
Netw., vol. 25, no. 6, pp. 3709–3722, 2017.
[16] C. Lou, P. Huang, and S. Smith, “Understanding, detecting and lo-
calizing partial failures in large system software,” in 17th USENIX
Symposium on Networked Systems Design and Implementation, NSDI
2020, Santa Clara, CA, USA, February 25-27, 2020, R. Bhagwan and
G. Porter, Eds. USENIX Association, 2020, pp. 559–574.
[17] S. Burnett, L. Chen, D. A. Creager, M. Eﬁmov, I. Grigorik, B. Jones,
H. V. Madhyastha, P. Papageorge, B. Rogan, C. Stahl, and J. Tuttle, “Net-
work error logging: Client-side measurement of end-to-end web service
reliability,” in 17th USENIX Symposium on Networked Systems Design
and Implementation, NSDI 2020, Santa Clara, CA, USA, February 25-
27, 2020, R. Bhagwan and G. Porter, Eds. USENIX Association, 2020,
pp. 985–998.
[18] J. Dilley, B. M. Maggs, J. Parikh, H. Prokop, R. K. Sitaraman, and W. E.
Weihl, “Globally distributed content delivery,” IEEE Internet Comput.,
vol. 6, no. 5, pp. 50–58, 2002.
[19] J. Jiang, S. Sun, V. Sekar, and H. Zhang, “Pytheas: Enabling data-
driven quality of experience optimization using group-based exploration-
exploitation,” in 14th USENIX Symposium on Networked Systems Design
and Implementation, NSDI 2017, Boston, MA, USA, March 27-29, 2017,
A. Akella and J. Howell, Eds. USENIX Association, 2017, pp. 393–
406.
[20] J. Jiang, V. Sekar, H. Milner, D. Shepherd, I. Stoica, and H. Zhang,
“CFA: A practical prediction system for video qoe optimization,” in 13th
USENIX Symposium on Networked Systems Design and Implementation,
NSDI 2016, Santa Clara, CA, USA, March 16-18, 2016, K. J. Argyraki
and R. Isaacs, Eds. USENIX Association, 2016, pp. 137–150.
[21] Y. Sun, Y. Zhao, Y. Su, D. Liu, X. Nie, Y. Meng, S. Cheng, D. Pei,
S. Zhang, X. Qu, and X. Guo, “Hotspot: Anomaly localization for
additive kpis with multi-dimensional attributes,” IEEE Access, vol. 6,
pp. 10 909–10 923, 2018.
[22] Z. Li, D. Pei, C. Luo, Y. Zhao, Y. Sun, K. Sui, X. Wang, D. Liu, X. Jin,
and Q. Wang, “Generic and robust localization of multi-dimensional root
causes,” in 30th IEEE International Symposium on Software Reliability
Engineering, ISSRE 2019, Berlin, Germany, October 28-31, 2019,
K. Wolter, I. Schieferdecker, B. Gallina, M. Cukier, R. Natella, N. R.
Ivaki, and N. Laranjeiro, Eds.
IEEE, 2019, pp. 47–57.
[23] P. Malhotra, A. Ramakrishnan, G. Anand, L. Vig, P. Agarwal, and
G. Shroff, “Lstm-based encoder-decoder for multi-sensor anomaly de-
tection,” in ICML 2016 Anomaly Detection Workshop, 2016.
[24] K. Hundman, V. Constantinou, C. Laporte,
and
T. S¨oderstr¨om, “Detecting spacecraft anomalies using lstms and nonpara-
metric dynamic thresholding,” in ACM SIGKDD ’18, 2018, pp. 387–395.
[25] C. E. Shannon, “A mathematical theory of communication,” Bell Syst.
I. Colwell,
Tech. J., vol. 27, no. 3, pp. 379–423, 1948.
[26] J. R. Quinlan, “Induction of decision trees,” Mach. Learn., vol. 1, no. 1,
pp. 81–106, 1986.
[27] I. Kononenko and S. J. Hong, “Attribute selection for modelling,” Future
Gener. Comput. Syst., vol. 13, no. 2-3, pp. 181–195, 1997.
[28] Y. Pan, M. Ma, X. Jiang, and P. Wang, “Faster, deeper, easier: crowd-
sourcing diagnosis of microservice kernel failure from user space,”
in ISSTA ’21: 30th ACM SIGSOFT International Symposium on Soft-
ware Testing and Analysis, Virtual Event, Denmark, July 11-17, 2021,
C. Cadar and X. Zhang, Eds. ACM, 2021, pp. 646–657.
[29] Y. Meng, S. Zhang, Y. Sun, R. Zhang, Z. Hu, Y. Zhang, C. Jia, Z. Wang,
and D. Pei, “Localizing failure root causes in a microservice through
causality inference,” in 28th IEEE/ACM International Symposium on
Quality of Service, IWQoS 2020, Hangzhou, China, June 15-17, 2020.
IEEE, 2020, pp. 1–10.
[30] D. Liu, C. He, X. Peng, F. Lin, C. Zhang, S. Gong, Z. Li, J. Ou, and
Z. Wu, “Microhecl: High-efﬁcient root cause localization in large-scale
microservice systems,” in 43rd IEEE/ACM International Conference on
Software Engineering: Software Engineering in Practice, ICSE (SEIP)
2021, Madrid, Spain, May 25-28, 2021.
IEEE, 2021, pp. 338–347.
[31] R. Agrawal and R. Srikant, “Fast algorithms for mining association
rules in large databases,” in VLDB’94, Proceedings of 20th International
Conference on Very Large Data Bases, September 12-15, 1994, Santiago
de Chile, Chile, J. B. Bocca, M. Jarke, and C. Zaniolo, Eds. Morgan
Kaufmann, 1994, pp. 487–499.
[32] J. Han, J. Pei, and Y. Yin, “Mining frequent patterns without candidate
generation,” SIGMOD Rec., vol. 29, no. 2, p. 1–12, may 2000.
[33] P. Liu, Y. Chen, X. Nie, J. Zhu, S. Zhang, K. Sui, M. Zhang, and
D. Pei, “Fluxrank: A widely-deployable framework to automatically
localizing root cause machines for software service failure mitigation,” in
30th IEEE International Symposium on Software Reliability Engineer-
ing, ISSRE 2019, Berlin, Germany, October 28-31, 2019, K. Wolter,
I. Schieferdecker, B. Gallina, M. Cukier, R. Natella, N. R. Ivaki, and
N. Laranjeiro, Eds.
IEEE, 2019, pp. 35–46.
[34] P. Chen, Y. Qi, P. Zheng, and D. Hou, “Causeinfer: Automatic and
distributed performance diagnosis with hierarchical causality graph in
large distributed systems,” in 2014 IEEE Conference on Computer
Communications, INFOCOM 2014, Toronto, Canada, April 27 - May
2, 2014.
IEEE, 2014, pp. 1887–1895.
[35] M. Ma, Z. Yin, S. Zhang, S. Wang, C. Zheng, X. Jiang, H. Hu, C. Luo,
Y. Li, N. Qiu, F. Li, C. Chen, and D. Pei, “Diagnosing root causes of
intermittent slow queries in large-scale cloud databases,” Proc. VLDB
Endow., vol. 13, no. 8, pp. 1176–1189, 2020.
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 13:17:38 UTC from IEEE Xplore.  Restrictions apply. 
330