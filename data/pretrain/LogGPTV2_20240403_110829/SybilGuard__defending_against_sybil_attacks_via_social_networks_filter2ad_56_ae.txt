The model uses a two-dimensional grid as the base structure.
The grid distance between two nodes is deﬁned to be the min-
imum number of hops needed to go from one node along the
grid edges to the other. The small-world topology constructed
contains all nodes in the two-dimensional grid. The grid edges
may or may not be in the small-world topology depending on
the parameters.
remote friends/nodes. The
To construct the small-world topology, each node
in the
topology establishes (undirected) edges to local friends/nodes
nodes
and
(among all nodes) that are the closest to
in terms of grid
independent
distance. The
random trials. In each trial, a node
remote friends are chosen using
has a probability of
local friends are the
and
. When
being chosen. Here
, and
is the grid distance between
is a constant normalization factor that makes
is tun-
the sum of all probabilities equal to 1. The parameter
, the remote friends are
able between 0 and
simply chosen uniformly randomly out of all nodes in the graph.
.
As
We have experimented with various ,
, and values. The fol-
. For the million-node and 10000-
lowing results use
for the
node graph, we set
100-node graph. Results for other
, and values we experi-
,
mented with are qualitatively similar.
increases, the remote friends tend closer and closer to
. We use
B. Results With No Malicious Users
We start by studying the basic behavior of SybilGuard when
there are no malicious users. Without malicious users, the only
property we are concerned with is whether an honest veriﬁer
Fig. 10. Probability of having the given number of intersections. The legend
“majority routes” means that each node performs random routes along all di-
rections (and uses majority voting), while “single route” means performing a
single random route. The legend “( x)” means that we are considering the
probability of having at least x distinct intersections. SybilGuard corresponds
to “majority routes ( 10)”.
accepts an honest suspect. This is affected by: (i) whether the
random routes from the two nodes are loops; (ii) whether the
random routes from the two nodes intersect; (iii) whether there
is at least one intersection node online; and (iv) whether the
needed length of random routes is properly estimated.
Probability of random routes being loops. As discussed in
Section IV-B, if a random route becomes a loop, then its effec-
tive length is reduced. Our simulation shows that 99.3% of the
routes in the million-node graph do not form loops in their ﬁrst
2500 hops (while later we will show that the needed length of
the routes is below 2000). Furthermore, all the nodes in our sim-
ulation have at least one of their routes that is not a loop within
their ﬁrst 2500 hops. For the ten-thousand-node graph, 99.7%
of the routes do not form loops in their ﬁrst 200 hops, which
is above the needed route length. For the hundred-node graph,
90% of the routes do not form loops in the ﬁrst 50 hops, which
is again above the needed route length.
As the results show that loops are quite rare, and also because
they only impact effectiveness rather than security, we will not
investigate them further. In all our results below, we do not dis-
tinguish loops from non-loops, and thus all the results will al-
ready capture the impact of random routes being loops.
. For
to accept
Probability of an honest node being successfully accepted.
ac-
We move on to study the probability of the veriﬁer
cepting the suspect
, their routes must in-
tersect and at least one intersection must be online. We do not
directly model nodes being online or ofﬂine. Rather, we assume
that as long as there are at least 10 intersections, the veriﬁcation
succeeds. Note that even when nodes are online only 20% of the
time, the probability that at least one out of 10 intersections is
online is already roughly 90%.
Fig. 10 plots the probability of
successfully accepting ,
as a function of
(length of the random routes). For better un-
derstanding, we also include in Fig. 10 two other curves for the
cases where each node performs only a single random route, and
seeks either at least 1 or 10 intersections. The results show that in
as small as 300
a million-node social network, even having a
yields a 99.96% probability of having at least 10 intersections.
On the other hand, if we do not route along all directions, the
needed length will be much larger. For our ten-thousand-node
586
IEEE/ACM TRANSACTIONS ON NETWORKING, VOL. 16, NO. 3, JUNE 2008
Fig. 11. Probability distribution histogram for the number of hops needed before the ﬁrst intersection.
graph,
intersections. For the hundred-node graph,
probability of 99.97%.
yields a 99.29% probability of having at least 10
gives us a
Estimating the needed length of the routes
. In Sybil-
Guard, each node infers the needed length of the routes using
the sampling technique described in Section IV-C. Using this
ﬁrst performs a short random walk ending
technique, a node
both perform random routes to
at some node
determine how long the routes need to be in order to intersect.
Such estimation would be entirely accurate if (i) were chosen
uniformly randomly from all nodes in the system; and (ii) the
number of samples were inﬁnite. In practice, however, neither
condition holds.
. Then
and
To gain insight into the impact of
is chosen uniformly at random to the case when
not actually being a
uniformly random node, Fig. 11 depicts the distribution of the
number of hops before intersection, comparing the case when
is chosen
using a 3-hop random walk from . As the ﬁgure shows, the two
distributions are quite similar. This will help to explain later the
not being uniformly random. Based on the
small impact of
distribution when
is chosen uniformly at random, we obtain
of 1906 needed for 95% of the pairs to intersect.
an accurate
This value of 1906 will be used as a comparison with Sybil-
Guard’s estimated
.
always falls within
To understand the error introduced by having only a ﬁnite
ﬂuctuates
number of samples, we study how the estimated
and approaches 1906 as a node takes more and more samples.
This experiment is repeated from multiple nodes. In all cases,
we observe that the estimated
al-
after 30 samples. While after 100 samples, the estimated
. These results show that the esti-
ways falls within
is accurate enough even after a small number of sam-
mated
ples. Even with only 30 samples and a worst case estimated
of 1606, Fig. 10 still shows a close-to-100% intersection
probability when using majority routes. On the other hand, be-
cause taking each sample only involves a 3-hop random walk
and the transfer of a witness table, the overhead is quite small.
Finally, because the number of users
changes roughly proportionally to
, we do not expect
,
for example, on a daily basis. For our ten-thousand-node graph,
the accurate
after 35 samples. For the hundred-node graph, the accurate
24, and the estimated
to change rapidly. Thus a node needs only to re-estimate
is 197, and the estimated
changes slowly and
falls within
falls within
after 40 samples.
is
C. Results With Sybil Attackers
Next we study the behavior of SybilGuard when there are ma-
licious users. We will use the term “sybil attacker” to refer to any
such user, in order to distinguish the attacker from the poten-
tially unlimited number of malicious nodes he creates. Sybil at-
tackers inﬂuence the system by creating attack edges. There are
clearly many possibilities regarding where the attack edges are
in the graph, and we consider two extremes in our experiments.
, we repeatedly pick uniformly random nodes in the
In
graph as sybil attackers, until the total number of attack edges
, we start from a random
reaches a certain value. In
“seed” node and perform a breadth-ﬁrst search from the seed.
Nodes encountered are marked as sybil attackers, until the total
number of attack edges reaches a certain value. All our results
placement, unless explicitly men-
below are based on
tioned. We have obtained all corresponding results for
as well, which are always slightly better but the difference is
the probability of
usually negligible. Namely, under
sybil nodes is lower, the probability
accepting more than
of an honest node being accepted is higher, and the estimates of
. The reason for these
is that the random routes are more
are more accurate, than under
better results under
likely to cross attack edges under
.
from 0 to 2500. When
For our experiments based on the million-node graph, we vary
,
the number of attack edges
there are roughly 100 nodes marked as sybil attackers. It is cru-
cial to understand that just having 100 sybil attackers in the
system will not necessarily result in 2500 attack edges—on av-
erage, each attacker must be able to convince 25 real human be-
ings to be his friend. The hardness of creating these social links
is what SybilGuard relies on.
In the presence of sybil attackers, we are concerned with sev-
eral measures of “goodness”: (i) the probability that an honest
sybil nodes; (ii) the probability that
node accepts more than
an honest node accepts another honest node; and (iii) the impact
of sybil nodes on estimating
.
Probability of an honest node accepting more than
sybil nodes. Routes from an honest veriﬁer may enter the
sybil region, and the adversary can then direct the routes to in-
tersect with the routes of many sybil nodes. SybilGuard uses
’s routes to limit the inﬂuence of
majority voting over all of
such problematic routes. The curve labeled “majority routes”
in Fig. 12 shows the probability that the majority of an honest
node’s routes remain entirely in the honest region. Here we
as obtained before (the same is true for all the
use
following experiments). If a majority of the routes are in the
honest region, then the remaining routes will not constitute a
majority, and the adversary will not be able to fool the node
sybil nodes. As shown in the
into accepting more than
.
ﬁgure, the probability is always almost 100% before
. This means that
Moreover, it is still 99.8% when
YU et al.: SYBILGUARD: DEFENDING AGAINST SYBIL ATTACKS VIA SOCIAL NETWORKS
587
12.3% of the nodes will not be accepted by that veriﬁer, and
(ii) a random honest node will not be accepted by 12.3% of the
honest nodes (veriﬁers).
Fig. 12. Probability of routes remaining entirely within the honest region.
Fig. 13. Probability of an honest node accepting another honest node (i.e.,
having at least a target number of intersections). The legends are the same as
in Fig. 10, and SybilGuard corresponds to “majority routes ( 10)”.
even with 2500 attack edges, only 0.2% of the nodes are not
protected by SybilGuard. These are mostly nodes adjacent to
multiple attack edges. In some sense, these nodes are “paying
the price” for being friends of sybil attackers. For the ten-thou-
and
sand-node graph and the hundred-node graph,
will result in 0.4% and 5.1% nodes unprotected, respec-
tively. For better understanding, Fig. 12 also includes a second
curve showing the probability of a single route remaining en-
tirely in the honest region.
accepts another honest suspect
Probability of an honest node being successfully accepted.
In the presence of sybil nodes, the probability that an honest
veriﬁer
decreases. First, the
routes from may enter the sybil region, and the adversary can
prevent these routes from intersecting with ’s routes. The same
’s routes. Second, the presence of sybil nodes neces-
is true for
sitates the technique of using multiple routes. We use majority
routes need to
voting: among the
successfully accept
routes from , at least
before
can accept
.
To capture the worst case scenario, here we will assume that
after a route (from or
) enters the sybil region, the rest of
the route can no longer be used for veriﬁcation/intersection. In
some sense, the presence of sybil nodes “truncates” the routes.
As in Section VI-A, we assume that a (possibly truncated) route
if it has at least 10 distinct intersections with
from accepts
successfully accepts
. At each trial, we select
’s (possibly truncated) routes. Finally,
if a majority of
a random honest
’s routes accept
and a random honest
.
Fig. 13 presents the probability of
accepting , as a func-
. This probability is still
tion of the number of attack edges
99.8% with 2500 attack edges, which is quite satisfactory. The
case with a single route is much worse (even if we seek only
a single intersection), demonstrating that exploiting multiple
routes is necessary. For the ten-thousand-node graph and the
give probabilities
hundred-node graph,
of 99.6% and 87.7%, respectively. Notice that a 87.7% proba-
bility does not mean that 12.3% of the nodes will not be accepted
by the system. It only means that (i) given a random veriﬁer,
and
.
and
Estimating the needed length of the routes
. The ﬁnal set
of experiments seeks to quantify the impact of sybil nodes on the
estimated . Recall from Section IV-C that to estimate
, a node