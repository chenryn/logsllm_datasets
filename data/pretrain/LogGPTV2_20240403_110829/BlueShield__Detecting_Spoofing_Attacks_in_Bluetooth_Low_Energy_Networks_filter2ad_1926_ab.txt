ing and connection. In the advertising state, the BLE device
400    23rd International Symposium on Research in Attacks, Intrusions and Defenses
USENIX Association
Table 1: An illustrative sample of characteristics of a BLE
device recorded during the proﬁling phase.
Characteristic
Value
Device ID & Name
MAC Address
Advertising Data
Advertising Pattern
Lower Bound of INT
1, n097w
0xD1 76 A3 1A F4 7F
0x06 09 4E 30 39 37 57
Intermittent
1280 ms
makes itself discoverable by broadcasting advertising packets
periodically. When the BLE device receives a connection re-
quest packet from the user device, the BLE device connects
to the user device and makes the transition to the connection
state. From the connection state, the BLE device returns to
the advertising state if it does not communicate with the user
device for a speciﬁed timeout period or disconnects from the
user device. We highlight that for a BLE device with an in-
termittent advertising pattern, the advertising-to-connection
state transition can be detected by observing a connection
request packet on an advertising channel.
The two cyber features mentioned above naturally support
BlueShield to selectively choose one or more of the physical
features for detecting spooﬁng attacks. Speciﬁcally, for BLE
devices with the persistent advertising pattern, inspecting only
the INT values is sufﬁcient to detect potential spooﬁng attacks.
For other BLE devices that follow the intermittent advertising
pattern, the attacker can stop the benign BLE device from
advertising by connecting to it. Then the attacker can start
transmitting spoofed advertising packets with the same ad-
vertising period as the benign BLE device. To detect such
an attacker, the CFO and RSSI features can be used once
BlueShield detects that there is an advertising-to-connection
state transition in the BLE device.
4.2 Proﬁling Phase
Now we describe the procedures performed in the ofﬂine pro-
ﬁling phase of BlueShield. To obtain the data-of-interest of
a target BLE device, the monitor records and analyzes the
advertising packets of the BLE device. First, from the packet
content, the monitor extracts the device name, the MAC ad-
dress, and the advertising data which can be utilized to iden-
tify packets transmitted by the BLE device. We note that
although some BLE devices employ address randomization
to anonymize their identity (p. 2198 in [5]), some of the ﬁelds
(e.g., device name) in their packets remain unchanged and
can be used to relate the packets to the BLE device [13, 20].
The monitor then computes the INT value by subtracting
the time-of-arrival of the current advertising packet from that
of the previous advertising packet. As deﬁned by the BLE
speciﬁcation (p. 2750 in [5]), the observed INT is equal to a
ﬁxed advertising period plus a random delay between 0 and
10 ms. To this end, the monitor calculates the lower bound
(a) Authentic RSSI values (in dBm) corresponding to 
the BLE device at different advertising channels.
Channel
Collector 1
Collector 2
Collector 3
Channel 37
Channel 38
Channel 39
-60.3
-63.5
-58.1
-48.6
-45.2
-46.3
-39.2
-35.8
-36.9
(b) Assigned channel and corresponding RSSI value during different 
time periods at each collector.
Collector-1
Time
T1-T2
T2-T3
…
Tn-1-Tn
Channel
37
39
…
39
RSSI
-60.3
-58.1
…
-58.1
Time
T1-T2
T2-T3
…
Tn-1-Tn
Channel
38
38
…
37
RSSI
-45.2
-45.2
…
-48.6
Collector-2
Collector-3
Time
T1-T2
T2-T3
…
Tn-1-Tn
Channel RSSI
-36.9
-39.2
…
-35.8
39
37
…
38
Figure 5: An illustration of the randomized channel switching.
of INT as the shortest observed INT minus 10 ms, which
represents the lowest possible interval between any two ad-
vertising packets on the same channel. Further, the monitor
determines the authentic advertising pattern (i.e., persistent or
intermittent) by checking if it observes the BLE device’s ad-
vertising packets after connecting to the BLE device. Finally,
the monitor stores the determined characteristics of the BLE
device along with an assigned device identiﬁer (ID) as shown
in Table 1. The deployment details regarding the proﬁling
phase are discussed further in Section 7.
4.3 Monitoring Phase
After the proﬁling phase, BlueShield is ready to detect spoof-
ing attacks in its runtime monitoring phase.
4.3.1 Feature Collection
BlueShield faces the critical challenge of detecting an attacker
which can attempt to: (1) start the spooﬁng attack at any time,
(2) transmit spoofed advertising packets at any of the three
advertising channels, and (3) hide by trying to mimic the ex-
act values of the selected physical features. To tackle these
challenges, BlueShield ﬁrst places the three collectors at three
different locations to comprehensively cover the monitored
environment in space, and then ceaselessly records all adver-
tising packets transmitted at all three advertising channels
using the following mechanism.
In addition to the spatial
Randomized Channel Switching.
diversity of the collectors, BlueShield introduces randomness
in the monitoring schedule of each collector. To achieve this,
BlueShield assigns the three advertising channels to the three
USENIX Association
23rd International Symposium on Research in Attacks, Intrusions and Defenses    401
Device
characteristics
Advertising packets
Device 
identification
Intermittent 
pattern
State
inference
Connection
state
CFO & RSSI
inspection
Advertising
state 
INT 
inspection
Persistent 
pattern
INT
inspection
Abnormal
INT
Abnormal 
CFO or RSSI
Abnormal 
INT
Alarm
Figure 6: Usage of the cyber-physical features for selective
inspection of the physical features in BlueShield.
collectors with a uniformly random distribution. After a very
short random interval of time (which is signiﬁcantly shorter
than the BLE device advertising interval), the monitor shufﬂes
and re-assigns channels to the collectors. Since the values
of each physical feature (i.e., RSSI and CFO) in different
advertising channels are different, the attacker will not be able
to precisely predict the expected feature values at runtime.
This randomized collection makes BlueShield robust against
advanced attackers (e.g., an SDR-enabled attacker) that try to
mimic all the monitored physical features at the same time.
Figure 5 demonstrates a running example of this mecha-
nism by presenting the randomly assigned channel and the
expected RSSI value at each collector during different peri-
ods. As such, since the channel assignment to the collectors
is random, an attacker will not be able to accurately guess the
current “time-channel-collector” mapping. In other words, the
attacker will not know the exact RSSI value that it needs to
mimic for a particular collector at a speciﬁc time. We provide
an analytical evaluation of this mechanism in Section 6.2.2.
4.3.2 Runtime Selective Inspection
After retrieving the advertising packets and their features from
the collectors, the monitor proceeds with a runtime selective
inspection of these features for each BLE device. As shown
in Figure 6, the cyber features of the target BLE device allow
BlueShield to adaptively employ the appropriate inspection
mechanism over the physical features. This selective inspec-
tion signiﬁcantly lowers the false alarms caused by signal
interference as will be further discussed in Section 6.2.1.
Now we describe the inspection mechanisms as follows.
INT Inspection. The monitor proceeds with this inspection
mechanism for each received advertising packet from the
BLE device. Recall that by deﬁnition, the INT between any
two advertising packets must always be more than the lower
bound of INT. Hence, if the runtime computed INT value is
less than the lower bound of INT, the monitor considers it an
anomaly and raises an alarm.
Figure 7: Illustration of the lookback and observation win-
dows in CFO and RSSI inspection.
CFO and RSSI Inspection. BlueShield ceaselessly records
the CFO and RSSI values of the advertising packets. When
the CFO and RSSI inspection is triggered, BlueShield utilizes
these values and proceeds through the following steps. As
shown in Figure 7, for a BLE device with an intermittent
advertising pattern, we deﬁne the lookback window as the
duration of time Tl (with Nl packets) before the advertising-
to-connection state transition, and the observation window as
the duration of time To (with No packets) after the connection-
to-advertising state transition. In BlueShield, after observing
a connection request packet, the monitor triggers the CFO and
RSSI inspection for advertising packets received from each
collector in each of the three advertising channels. The moni-
tor ﬁrst utilizes CFO and RSSI values of advertising packets
in the lookback window to compute their valid ranges, then
it inspects these values of advertising packets in the observa-
tion window. If the monitor detects an anomaly in either of
these two features, it raises an alarm. Below we elaborate on
the process of CFO inspection. The RSSI inspection follows
similar steps as shown in Appendix A.
σ0√2π · e−(xi−µ0)2/2σ2
The CFO values corresponding to a BLE device follow a
Gaussian distribution [43]. Hence, when the mean and stan-
dard deviation of CFO values are denoted by µ0 and σ0, re-
spectively, the probability distribution function of CFO values
can be computed as fc(xi) = 1
0 , where xi
denotes a CFO sample. In BlueShield, using the Nl CFO
values of advertising packets in the lookback window, the
monitor computes µ0 and σ0, and then sets their values in the
above function. Now if the advertising packets in the look-
back and observation windows are generated by the same
BLE device, the CFO values of advertising packets in the
observation window must statistically follow the above dis-
tribution. To verify this, the monitor computes the negative
log-likelihood of the CFO values in the observation window,
∑No
i.e., Lc = 1
i=1− log fc(xi). If the log-likelihood is below a
No
CFO inspection threshold denoted by τc, i.e., Lc ≤ τc, the CFO
values are considered to belong to the benign BLE device.
Here, τc is a design parameter in BlueShield which determines
the valid range of CFO values in the observation window.
However, if the log-likelihood exceeds the CFO inspection
threshold, i.e., Lc > τc, the monitor considers it an anomaly
and triggers an alarm indicating a spooﬁng attack. The impact
of this parameter is further discussed in Section 6.
402    23rd International Symposium on Research in Attacks, Intrusions and Defenses
USENIX Association
Advertising PacketConnection Request PacketTimeAdvertising StateConnection StateAdvertising StateLookback WindowObservation Window15 m
BLE device locations
Collector locations
Attacker locations
10 m
Figure 8: Prototype of a collector uti-
lized in BlueShield.
Figure 9: Locations of collectors, BLE
devices and attackers within the ofﬁce.
Figure 10: BLE devices used in our
experiments.
5 Implementation
BlueShield can be readily implemented using low-cost, off-
the-shelf platforms. We implemented the collector using an
Ubertooth One radio [41] connected to a Raspberry Pi running
Linux 4.14 (Figure 8). The total cost for such a collector is
around $100. We note that when a collector is deployed on
a custom-designed platform, the per-unit cost could be less
than $5 for a BLE module [40]. The Ubertooth ﬁrst captures
the packets on advertising channels. Then, to retrieve the
physical features, we modiﬁed the Ubertooth ﬁrmware to
provide CFO and RSSI values for each received packet. Such
customization is feasible as Ubertooth is an open platform for
Bluetooth research and development. Finally, the Raspberry
Pi communicates the packets along with their relevant features
to the monitor. We implemented the monitor on an Ubuntu
18.04 Desktop PC. At the monitor, all processes including
interacting with collectors, parsing the received information
from collectors, and runtime inspection mechanisms were
implemented with ≈ 3 K lines of Python code.
User Notiﬁcation. The design of BlueShield supports no-
tiﬁcation of detected spooﬁng attacks. To demonstrate this
use case, we have developed an Android application that em-
ploys a push-based mechanism to receive notiﬁcations from
BlueShield’s monitor through a secure HTTPS connection
(Appendix B). The user can register to BlueShield’s notiﬁ-
cation service by installing and conﬁguring the app. Then,
whenever BlueShield detects a spooﬁng attack, the user re-
ceives the notiﬁcation with relevant information, such as the
targeted BLE device’s name and MAC address.
6 Evaluation
6.1 Experiment Setup
Deployment Environment. We evaluated the detection
performance of BlueShield in a real-world environment: a
15m × 10m ofﬁce hosting multiple graduate students in 20
cubicles. We divided the ofﬁce space into grids of 1m × 1m.
We deployed BlueShield by placing the three collectors at
selected grid locations within the ofﬁce as shown in Figure 9.
The ofﬁce presents a typically noisy and challenging indoor
environment for determining the detection performance of
BlueShield. By recording RF signals within the reception
range of the collectors, we discovered signiﬁcant channel
interference from 30 other Bluetooth/BLE-equipped devices
(sensors, headsets, smartphones, and laptops), dozens of Wi-
Fi access points and a microwave2. We also observed that
abrupt movements of students within the ofﬁce signiﬁcantly
altered channel conditions in the monitored environment.
To exhaustively evaluate BlueShield,
Device Selection.
we utilized nine different BLE devices which are shown in
Figure 10. These BLE devices cover the mainstream BLE ap-
plications (e.g., temperature sensor, lock, and smoke detector)
and popular manufacturers (e.g., Nest, August, and Eve) with
a variety of Bluetooth chips (e.g., DA14580 and nRF51822).
As shown in Figure 9, we randomly chose nine different loca-
tions within the ofﬁce to place these BLE devices.
Attack Simulation. To carry out different types of attacks,
we utilized four attacker platforms, a Dell Latitude 5480 lap-
top [15], a CSR 4.0 BT dongle [11], an HM-10 developmen-
tal board [25], and a CYW920735 developmental board [12].
These platforms were selected because they provide ease
of access and programmability, and they utilized different
transmit power values. Besides, to thoroughly evaluate the
performance of BlueShield, we launched a variety of spoof-
ing attacks from 12 different locations, some at the center
and some at edges of the ofﬁce (Figure 9). Further, to enrich
the evaluation of the effectiveness of the CFO inspection,
we utilized different copies of the same BLE device as at-
tackers (in addition to the four attacker platforms). For the
unbiased evaluation of the RSSI inspection, we utilized the
same BLE device as the benign BLE device and the attacker,
and collected its advertising packets by placing it at different
locations within the ofﬁce environment.
Experimental Data. For each BLE device, benign adver-
tising packets were collected for 48 hours (throughout day
and night). For each attacker platform placed at each loca-
tion, spoofed advertising packets were collected for around 15
minutes. In total, we collected 5, 507, 978 advertising packets
which are comprised of 80.7% benign advertising packets and
19.3% spoofed advertising packets. This data was utilized as
the ground truth for our evaluation.
2We only saved and analyzed the data of BLE devices deployed by us.
We did not record any data from other devices within the ofﬁce environment.
USENIX Association
23rd International Symposium on Research in Attacks, Intrusions and Defenses    403
Table 2: BlueShield’s detection performance against spooﬁng attacks (FP and FN are presented in %).
Device
ID
Device
Name
Advertising Observation
Period (s)
Window (s)
1
2
3
4
5
6
7
8
9
Nest Protect Smoke Detector
Nest Cam Indoor Camera
SensorPush Temperature Sensor
Tahmo Tempi Temperature Sensor
August Smart Lock
Eve Door&Window Sensor
Eve Button Remote Control
Eve Energy Socket
Ilumi Smart Light Bulb
Average
1.28