# COTS Diversity Based Intrusion Detection and Application to Web Servers

**Authors:**
- Eric Totel
- Frédéric Majorczyk
- Ludovic Mé

**Affiliation:**
Supélec, BP 81127, 35511 Cesson-Sévigné Cedex, France

**Email:**
[PI:EMAIL]

## Abstract
Intrusion detection systems (IDS) are essential for compensating the insufficient security mechanisms in computer systems and networks. However, recent anomaly-based IDS approaches have drawbacks, such as the need to explicitly define a behavior reference model. This paper introduces a new approach to anomaly detection based on design diversity, a technique from the dependability field that has been largely overlooked in intrusion detection. The key advantage is that it provides an implicit and complete reference model, unlike the explicit models typically required. For practical reasons, we use Components-off-the-shelf (COTS) diversity and discuss its implications. We present an architecture using COTS-diversity and apply it to web servers. Experimental results confirm the expected properties of the IDS and compare them with other IDSes.

**Keywords:**
- Intrusion detection
- Anomaly detection
- Design diversity
- COTS diversity

## 1. Introduction
Ensuring the security of information systems is a critical concern. It is challenging to enforce a security policy effectively, making intrusion detection systems (IDS) necessary to identify violations. Two main approaches in intrusion detection are misuse detection and anomaly detection.

### Misuse Detection
Misuse detection compares observed behaviors with known attack signatures. While this approach can accurately detect known attacks, it often leads to false positives due to overly generalized signatures. Additionally, it cannot detect new or unknown attacks unless the signature database is continuously updated, which is a significant challenge.

### Anomaly Detection
Anomaly detection compares observed behaviors with a previously established "normal" behavior. This approach can detect new or unknown attacks if they result in abnormal system use. However, explicitly defining normal behavior can be problematic, leading to false negatives or false positives.

The approach presented in this paper avoids the need for explicit behavior modeling while enabling the detection of new or unknown attacks. It leverages N-version programming, a dependability technique, but uses COTS components to reduce costs. This makes it a viable economic solution.

The rest of the paper is organized as follows:
- Section 2: Related Work
- Section 3: Proposed Architecture
- Section 4: Results and Application to Web Servers
- Section 5: Conclusion and Future Work

## 2. Related Work
### 2.1 MAFTIA Project
The MAFTIA project investigates the tolerance paradigm for constructing dependable distributed applications. It defines the AVI (Attack - Vulnerability - Intrusion) composite fault model and uses design diversity for intrusion tolerance. Our work builds on these concepts, proposing an architecture with both tolerance and detection properties through the comparison of diversified server outputs.

### 2.2 DIT Project
The DIT project proposes an architecture for intrusion-tolerant enterprise systems, including functionally redundant COTS servers and hardened proxies. Unlike our approach, DIT relies on traditional IDS components for intrusion detection.

### 2.3 HACQIT Project
The HACQIT project aims to provide intrusion tolerance for web servers using a master-slave scheme. Its detection algorithm is simpler and less robust compared to our approach, which uses three hosts and a more comprehensive comparison algorithm.

### 2.4 Specification-Based Intrusion Detection
Specification-based intrusion detection provides means to enforce expected program behavior. While effective, it requires internal knowledge of the monitored program, which can be challenging for complex systems. Our approach, in contrast, does not require prior knowledge of expected behavior, as it is implicitly defined by the variants.

## 3. Intrusion Detection by Design Diversity
### 3.1 Design Diversity Principles
Design diversity reduces the probability of common-mode failures by generating independent versions of a system. N-version programming involves independently developing multiple software modules from the same initial specification. This technique can detect errors and tolerate faults, providing high coverage of error detection.

### 3.2 COTS-Based Diversity
Using COTS components for design diversity is cost-effective. However, COTS implementations may not strictly follow the same specifications, requiring careful selection of data and timing for comparison. This choice can significantly impact the number of detected differences, affecting false positive and false negative rates.

## 4. Results and Application to Web Servers
We present an architecture using COTS-diversity and apply it to web servers. Experimental results confirm the expected properties of the IDS and compare them favorably with other IDSes.

## 5. Conclusion and Future Work
This paper introduces a novel approach to anomaly detection using COTS diversity, providing an implicit and complete reference model. Future work will explore further refinements and broader applications of this approach.

---

This revised version aims to make the text more coherent, clear, and professional.