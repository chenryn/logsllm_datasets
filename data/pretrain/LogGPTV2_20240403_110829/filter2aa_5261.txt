---
title: 云原生
---

# 云原生

## 一、术语介绍

### 1. 容器

Docker 是一款开源软件，提供了一个开放平台，用于开发、交付和运行应用程序。通过 Docker，用户可以将应用从基础设施中分离出来，形成更小的单元（容器），从而加速软件的交付过程。与虚拟机不同，Docker 容器是基于操作系统层面的虚拟化技术，而虚拟机则是硬件层面的虚拟化。因此，Docker 容器具有更高的便携性和资源利用率。

下图展示了 Docker 的架构，包括 Docker 客户端、宿主机（包含 Docker 守护进程、本地容器及镜像）以及 Docker 镜像仓库三个主要组成部分。其中，Docker 守护进程负责监听 API 请求并管理 Docker 对象。

### 2. 容器编排

容器编排是指自动化地部署、管理和扩展容器化应用程序的过程。它特别适用于需要处理大量 Linux 容器和主机的企业。当前流行的容器编排工具包括 Kubernetes、Docker Swarm 和 Apache Mesos 等。根据 Sysdig 在 2021 年发布的报告，Kubernetes 已成为最主流的选择。

### 3. 无服务架构

无服务（Serverless）是一种云计算模型，允许开发者专注于编写代码而无需关心底层服务器管理。尽管名字中有“无服务”，但实际上仍然使用了服务器，只是这些细节对开发者透明。无服务计算通常分为两类：后端即服务 (BaaS) 和函数即服务 (FaaS)，后者是实现 Serverless 的主要方式，代表产品有 AWS Lambda、Azure Functions、GCP Firebase Cloud Functions 和阿里云 Function Compute。

### 4. 微服务

微服务是一种将复杂的应用程序分解成一系列小型独立服务的设计模式。每个服务都围绕特定业务功能构建，并且可以通过语言无关的 API 相互通讯。这种架构有助于提高系统的可维护性、灵活性和可伸缩性。

### 5. 服务网格

服务网格是在应用程序内部创建的一个专用网络层，用以管理各组件之间的通信。通过引入代理（或称 sidecar），服务网格能够简化服务间的交互逻辑，使开发者能更加专注于核心业务逻辑而非网络通信细节。

### 6. CNCF

CNCF (Cloud Native Computing Foundation) 成立于 2015 年，隶属于 Linux 基金会，致力于推广和支持开源项目，特别是在容器化环境下的微服务架构方面。CNCF 维护着一份详细的云原生技术全景图，涵盖了各种相关技术和解决方案。

## 二、云原生安全

### 1. 什么是云原生？

“云原生”结合了“云”和“原生”两个概念。“云”指的是利用云计算资源而非传统本地服务器来托管应用；“原生”则意味着按照云计算的特点设计和优化应用程序，充分利用其弹性、分布式等特性。真正意义上的云原生应用不仅迁移至云端，还应针对云端环境进行专门设计。

### 2. 云原生安全

随着越来越多的企业采用云原生技术，确保这些系统的安全性变得至关重要。云原生安全涉及多个层面，如微服务安全、无服务架构安全、容器安全、编排平台安全和服务网格安全等。一个全面的云原生安全策略应该覆盖从基础架构到应用的所有层级，并且还需考虑传统安全措施如宿主机保护等。

参考资料：
- 《云原生安全-攻防实践与体系构建》
- [Docker](https://zh.wikipedia.org/wiki/Docker)
- [微服务](https://zh.wikipedia.org/wiki/%E5%BE%AE%E6%9C%8D%E5%8A%A1)
- [Serverless 架构简介](https://www.redhat.com/zh/topics/cloud-native-apps/what-is-serverless)
- [服务网格详解](https://www.redhat.com/zh/topics/microservices/what-is-a-service-mesh)
- [CNCF 官方网站](https://www.cncf.io/)