 **What is the bug?**
When you perform the first post request, everything's fine. Each subsequent
request (or a page refresh) leads to a 405 error.
**How to Reproduce the error**  
Here's the minimum code to replicate the error:
Project Structure
  * templates 
    * index.html
  * main.py
main.py:
    from flask import Flask, render_template
    import json
    app = Flask(__name__)
    @app.route("/")
    def home():
        return render_template("index.html")
    @app.route("/post", methods=["POST"])
    def post_test():
        return json.dumps({"test": True})
    if __name__ == "__main__":
        app.run(debug=True)
index.html:
        Click me!
**What do I expect**  
I expect to be able to press the button multiple times without getting an
error. It seems that Flask puts the form data before the request, which leads
to this in the console:
`127.0.0.1 - - [10/Sep/2022 12:09:52] "{"name":"test"}GET / HTTP/1.1" 405 -`
I tested the same behaviour with Tornado, which gave me the correct expected
result. Here's the minimal code for Tornado:
    import asyncio
    import tornado.web
    import tornado.template
    class MainHandler(tornado.web.RequestHandler):
        def get(self):
            self.render("templates/index.html")
    class PostHandler(tornado.web.RequestHandler):
        def post(self):
            self.write({"test": True})
    async def main():
        application = tornado.web.Application(
            [(r"/", MainHandler), (r"/post", PostHandler)],
            debug=True,
        )
        application.listen(5000)
        await asyncio.Event().wait()
    if __name__ == "__main__":
        print("Running Main")
        asyncio.run(main())
Environment:
  * Python version: 3.9.13
  * Flask version: 2.2.2