half of P1, P2 instead of pseudorandomness and run (C(cid:48), X(cid:48)) ← Sobv(1κ, C), where Sobv is the
oblivious simulator of the garbling scheme. Choose {mij}i∈[4],j∈ind(Pi) at random. Let mi ←
||j∈ind(Pi)mij and {cmα
9(cid:96)+α}α∈[(cid:96)] be commitments to the entries of X, correspond-
3. Commit to dummy values corresponding to other input wire labels. Let B1 =
ing to pp1
to i ∈ ind(P3), j ∈ ind(Pi3), it is computed as pij = xij ⊕ mij consistent with the (opening of)
shares distributed to P ∗
3 during simulation of InputCommiti. Corresponding to P3’s shares, it is com-
puted with respect to the opening received on behalf of P1 (if valid, else take default) during simula-
tion of InputCommit3. Here, c(cid:48) is a commitment to dummy value. Send B1 to P ∗
3 on behalf of P1.
If P3 /∈ C1, additionally send M1 and (openings of) encoding information corresponding to indices
{mij}i∈[4],j∈ind(Pi1) (corresponding to {x13, x14, x34}) as per protocol. Analogous steps are executed
on behalf of P2.
(cid:9) where pij’s are computed as follows: With respect
α}α∈[12(cid:96)],b∈{0,1}, c(cid:48),{pij}i∈[4],j∈ind(Pi3)
(cid:8)C(cid:48),{cb
1
3
α , cmα
3(cid:96)+α, cmα
6(cid:96)+α, cmα
4
2
R2 Else, run (C(cid:48), X(cid:48), d(cid:48)) ← Spriv(1κ, C, y). Execute similar steps as above except that c(cid:48) is computed as
commitment on H(d(cid:48)).
R3 If Cα (cid:54)= ∅ ∨ Fα (cid:54)= ∅, Pα (α ∈ {1, 2, 4}), send (TTP, β) to P ∗
R3 If Cg = Fg = ∅ (g ∈ [2]) send opening of hash of decoding information o to P ∗
R4 If received Y = Ev(C, X) from P3 on behalf of Pg(g ∈ [2]), send y to P ∗
R4 If received a valid view O3 from P ∗
3 where Pβ /∈ Cα ∪ Fα.
3 on behalf of Pg.
3 (comprising of openings corresponding to P3’s committed shares and
the shares sent on behalf of honest parties in Round 1) along with (TTP, l), l ∈ [4]\{3} on behalf of Pl
during Round 3, send (y, TTP) to P ∗
3 in Round 4 on behalf of Pl.
3 on behalf of Pg.
R4 If had sent (TTP, β) to P ∗
3 on behalf of either P1, P2, P4 in Round 3, send (y, TTP) to P ∗
3 on behalf of Pβ.
1 is corrupt)
S 1
g4PC (P ∗
(α ∈ [4]) (Fig. 13). Let y denote the output computed.
InputCommitα
R1 Simulation of Round 1 of S 1
R1 Receive s from P ∗
R1 Send pp3 to P ∗
R2 Simulation of Round 2 of S 1
1 on behalf of P3.
1 on behalf of P2.
InputCommitα
(α ∈ [4]) (Fig. 13).
38
Figure 15: Description of Sg4PC (contd.)
R2 On behalf of P3: Receive B comprising of the garbled circuit, commitments on encoding and decoding
information information and permutation strings pij for (i ∈ [4], j ∈ ind(Pi3)) from P ∗
1 . Additionally,
the openings corresponding to the input labels xij for (i ∈ [4], j ∈ ind(Pi1)) (except the labels for
x23, x24, x43) are received.
R2 Following steps are executed: (a) Set F3 = {P1, P2} if B is not consistent with B computed using
randomness G(s) and pp3, where s received on behalf of P2 in Round 1. (b) If C3 = F3 = ∅, set
P1 to C3 if (openings of) encoding information for xij, for i ∈ [4], j ∈ ind(Pi3) are anything other
than the originally committed labels (known on behalf of P2). If any of the labels corresponding to
xij(i ∈ [4], j /∈ ind(Pi3)) do not correspond to the originally committed label (known on behalf of P2),
1 during InputCommiti (for i ∈ ind(P1))
then set F3 = {P1, P2}. Here, xij refers to the value sent to P ∗
on behalf of Pi or received on behalf of P3 from P ∗
1 (during InputCommit1).
1 on behalf of P4. Add {P1, P2} to F4 if c received from P ∗
1 is not consistent with B
R2 Receive c from P ∗
computed using s received on behalf of P2.
R3 If C3 = F3 = ∅, compute Y such that De(Y, d) = y (d known as simulator acts on behalf of P2). Send
Y to P ∗
1 on behalf of P3.
R3 If Cα (cid:54)= ∅ ∨ Fα (cid:54)= ∅, Pα (α ∈ {2, 3, 4}), send (TTP, β) to P ∗
R4 If Y was sent to P ∗
R4 If received a valid view O1 from P ∗
1 on behalf of P3, send y to P ∗
1 on behalf of P2, P4.
1 where Pβ /∈ Cα ∪ Fα.
1 (comprising of openings corresponding to P1’s committed shares and
the shares sent on behalf of honest parties in Round 1) along with (TTP, l), l ∈ [4]\{1} on behalf of Pl
during Round 3, send (y, TTP) to P ∗
1 in Round 4 on behalf of Pl.
Pβ.
R4 If had sent (TTP, β) to P ∗
1 on behalf of either P2, P3, P4 in Round 3, send (y, TTP) to P ∗
1 on behalf of
4 is corrupt)
S 4
g4PC (P ∗
(α ∈ [4]) (Fig. 13). Let y denote the output computed.
(α ∈ [4]) (Fig. 13).
InputCommitα
InputCommitα
R1 Simulation of Round 1 of S 4
R2 Simulation of Round 2 of S 4
R2 Use uniform randomness to compute c as commitment on H(d). Send c to P ∗
R3 If Cg = Fg = ∅ for Pg(g ∈ [2]), send o (opening of hash of decoding information) to P ∗
4 .
R3 If C3 = F3 = ∅, compute Y such that De(Y, d) = y. Send Y to P ∗
R3 If Cα (cid:54)= ∅ ∨ Fα (cid:54)= ∅, Pα (α ∈ {1, 2, 3}), send (TTP, β) to P ∗
R4 If Y was sent to P ∗
4 , send y to P ∗
R4 If received a valid view O4 from P ∗
4 on behalf of P3.
1 where Pβ /∈ Cα ∪ Fα.
4 on behalf of P1, P2.
4 on behalf of P1, P2.
4 (comprising of openings corresponding to P4’s committed shares and
the shares sent on behalf of honest parties in Round 1) along with (TTP, l), l ∈ [4]\{1} on behalf of Pl
during Round 3, send (y, TTP) to P ∗
4 in Round 4 on behalf of Pl.
R4 If had sent (TTP, β) to P ∗
4 on behalf of either P1, P2, P3 in Round 3, send (y, TTP) to P ∗
4 on behalf of Pβ.
39
HYB3
HYB4
HYB4
HYB2
pseudorandomness as in HYB2. The indistinguishability follows via reduction to the security of the PRG G.
results in ⊥; in HYB2, Ck is set to P3 if P3 sends opening anything other than what was originally committed. Since
the commitment scheme sCom is binding, in HYB2, P3 could have decommitted successfully to a different input
share of Pi other than what was originally committed, only with negligible probability. Therefore, the hybrids are
indistinguishable.
c≈ HYB3: The difference between the hybrids is that P1, P2 use uniform randomness in HYB3 rather than
c≈ HYB4: The difference between the hybrids is that some of commitments of the input wire labels in
HYB3 that will not be opened are replaced with commitments of dummy values in HYB4. The indistinguishability
follows via reduction to the hiding property of the commitment scheme Com.
c≈ HYB5.1: The difference between the hybrids is in the way (C, X) is generated when the execution
results in P3 getting access to labels corresponding to its non-committed input. In HYB4, (C, e, d) ← Gb(1κ, C(cid:48))
is run, which gives (C, En(x, e)). In HYB5.1, it is generated as (C(cid:48), X) ← Sobv(1κ, C(cid:48)). Additionally, the com-
mitment to the decoding information is created for a dummy value in HYB5.1. The indistinguishability follows via
reduction to the obliviousness of the garbling scheme and the hiding property of commitment scheme.
c≈ HYB5.2: The difference between the hybrids is in the way (C, X, d) is generated. In HYB4, (C, e, d) ←
Gb(1κ, C(cid:48)) is run, which gives (C, En(x, e), d). In HYB5.2, it is generated as (C(cid:48), X, d(cid:48)) ← Sprv(1κ, C(cid:48), y). Ad-
ditionally, the commitment to the decoding information is computed on d(cid:48). The indistinguishability follows via
reduction to the privacy of the garbling scheme and the hiding property of Com.
c≈ HYB6: The difference between the hybrids is that in HYB5, P3 does not receive y in Round 4 if neither
P1 nor P2 receive Y such that De(Y, d) (cid:54)= ⊥ from P3; while in HYB6, P3 does not receive y if neither P1 nor P2
receive Y = Ev(C, X). Due to authenticity of the garbling scheme and the property of preimage-resistant hash
used in the decoding information, P3 could have sent Y such that Y (cid:54)= Ev(C, X) but De(Y, d) (cid:54)= ⊥ only with
negligibility probability. Therefore, the hybrids are indistiguishable.
c≈ HYB7: The difference between the hybrids is that in HYB6, the TTP assigned by P3 would return y to
P3 if the view O3 sent by P3 comprises of decommitments that lead to non-⊥ (corresponding to the commitments
on shares output by the subroutine InputCommit); while in HYB7, the TTP assigned by P3 would return y to
P3 only if the view O3 sent by P3 contains decommitments that open to the input shares that were originally
committed. Since the commitment scheme sCom is (strong) binding even against an adversarially chosen pp; in
HYB6, P3 could have decommitted successfully to a different input share than what was originally committed, only
with negligible probability. Therefore, the hybrids are indistinguishable.
HYB6
HYB5
Security against corrupt P ∗
P1. The views are shown to be indistinguishable via a series of intermediate hybrids.
1 We now argue that IDEALFGOD,S1
g4PC
c≈ REALg4PC,A, when an adversary A corrupts
– HYB0: Same as REALg4PC,A.
– HYB1: Same as HYB0, except that when the execution does not result in P1 getting access to the opening of
commitment cij (i ∈ ind(P1), j /∈ ind(Pi1)) sent by Pi, the commitment is replaced with commitment of
dummy value.
– HYB2: Same as HYB1 except that P1 is added to Ck (k ∈ ind(P1)) if the opening forwarded by P1 to Pk
during InputCommiti corresponding to Pi’s committed share (i ∈ ind(P1k)) is anything other than what
was originally commited.
– HYB3: Same as HYB2, except that when C3 = F3 = ∅ at the end of Round 2, P1 is added to C3 if P3 receives
anything other than the encoding information corresponding to committed share xij (i ∈ [4], j ∈ ind(Pi3)).
– HYB4: Same as HYB3, except that when C3 = F3 = ∅ at the end of Round 2, {P1, P2} is added to F3 if P3
receives anything other than the encoding information corresponding to committed share xij (i ∈ [4], j /∈
ind(Pi3)).
40
– HYB5: Same as HYB4, except that Y is computed via De(Y, d) = y in place of Y = Ev(C, X).
– HYB6: Same as HYB5 except that the TTP assigned by P1 sends y only if the view O1 sent by P1 comprises of
decommitments that opens to the input shares of the parties that were originally committed.
Since HYB6 := IDEALFGOD,S1
g4PC
, we show that every two consecutive hybrids are computationally indistin-
HYB0
HYB2
HYB1
guishable which concludes the proof.
c≈ HYB1: The difference between the hybrids is that when the execution does not result in P1 getting
access to the opening of commitment cij(i ∈ ind(P1), j /∈ ind(Pi1)) sent by Pi, cij corresponds to the actual input
share xij in HYB0 while it corresponds to dummy value in HYB1. The indistinguishability follows from the hiding
property of sCom.
c≈ HYB2: The difference between the hybrids is that while in HYB1, P1 is added to Ck (k ∈ ind(P1)) if
the opening forwarded by P1 to Pk during InputCommiti (i ∈ ind(P1k)) corresponding to Pi’s committed share
results in ⊥; in HYB2, Ck is set to P1 if P1 sends opening anything other than what was originally committed. Since
the commitment scheme sCom is binding, in HYB2, P1 could have decommitted successfully to a different input
share of Pi other than what was originally committed, only with negligible probability. Therefore, the hybrids are
indistinguishable.
c≈ HYB3: The difference between the hybrids is that in HYB1, when C3 = F3 = ∅ at the end of Round 2,
P1 is added to C3 if the decommitments (corresponding to encoding of committed share xij (i ∈ [4], j ∈ ind(Pi3)))
sent by P1 output ⊥ while in HYB2, P1 is added to C3 if the decommitments sent by P1 open to any value other
than the originally committed encoding information corresponding to xij. Since the commitment scheme Com is
binding and pp was chosen uniformly at random by P3; in HYB1, P1 could have decommitted successfully to a
different input label than what was originally committed, only with negligible probability. Therefore, the hybrids
are indistinguishable.
c≈ HYB4: The difference between the hybrids is that in HYB3, when C3 = F3 = ∅ at the end of Round 2,
{P1, P2} is added to F3 if the index of the decommitments (corresponding to encoding of committed share xij (i ∈
[4], j /∈ ind(Pi3))) sent by P1 are inconsistent with that known on behalf of P2, while in HYB4, {P1, P2} is added
to F3 if the decommitments sent by P1 open to any value other than the originally committed encoding information
corresponding to xij. Since the commitment scheme Com is binding and pp was chosen uniformly at random by
P3; in HYB3, P1 could have sent opening corresponding to the consistent index but decommitted successfully to a
different input label than what was originally committed, only with negligible probability. Therefore, the hybrids
are indistinguishable.
c≈ HYB5: The difference between the hybrids is that in HYB4, Y is computed via Ev(C, X), while in
HYB5, Y is computed such that De(Y, d) = y. Due to the correctness of the garbling scheme, the equivalence of
Y computed via Ev(C, X) or such that De(Y, d) = y holds.
c≈ HYB6: The difference between the hybrids is that in HYB5, the TTP assigned by P1 would return y to
P1 if the view O1 sent by P1 comprises of decommitments that lead to non-⊥ (corresponding to the commitments
on shares output by the subroutine InputCommiti); while in HYB6, the TTP assigned by P1 would return y to
P1 only if the view O1 sent by P1 contains decommitments that open to the input shares that were originally
committed. Since the commitment scheme sCom is binding even against an adversarially chosen pp; in HYB5,
P1 could have decommitted successfully to a different input share than what was originally committed, only with
negligible probability. Therefore, the hybrids are indistinguishable.
HYB5
HYB3
HYB4
Security against corrupt P ∗
rupts P4. The views are shown to be indistinguishable via a series of intermediate hybrids.
4 : We now argue that IDEALFGOD,S4
g4PC
c≈ REALg4PC,A, when an adversary A cor-
– HYB0: Same as REALg4PC,A.
41
– HYB1: Same as HYB0, except that when the execution does not result in P4 getting access to the opening of