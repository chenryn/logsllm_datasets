and the number of downlink in-ﬂight bytes, which is computed by
counting the unacknowledged bytes. As shown in Figure 10, the
downstream RTT tends to inﬂate as the number of in-ﬂight bytes
increases. The in-ﬂight bytes in our studied LTE network can be
larger than 1200 KB, causing high latency due to the queuing delay.
We vary this in local experiments (§3.2) where we measure both the
RTT and the bytes in ﬂight at UE for two large commercial LTE
networks. As shown in Figure 11 and 12, the trend that RTT grows
with the number of in-ﬂight packets is obvious. Our observation
is also consistent with a recent study [16] that shows the usage of
large buffers in today’s cellular networks may cause high queuing
delays. In addition to that, we further demonstrate its prevalence
in today’s LTE networks: as shown in Figure 13, which plots the
distribution of downlink in-ﬂight bytes for large ﬂows (> 1MB),
about 10% of measured instances have in-ﬂight bytes greater than
200 KB, potentially leading to long queuing delays.
Clearly, for short ﬂows or trafﬁc triggered by user interactions
(e.g., web browsing), queues are not likely to build up. For long-
lived ﬂows, usually it is the throughput instead of latency that mat-
ters. However, when short-lived and long-lived ﬂows coexist (e.g.,
performing browsing while streaming in the background), queuing
delay may severely deteriorate user experience by introducing un-
Figure 13: Distribution of downlink bytes in ﬂight for large
ﬂows (> 1 MB).
acceptable delays for short ﬂows. Moreover, as a new observation,
we found that a high downstream queuing delay may often cause
TCP’s congestion window to collapse upon a single packet loss.
We discuss this newly identiﬁed and rather severe issue in §5.
Retransmission Rate. We study TCP downlink retransmission
rate, deﬁned as the number of retransmitted packets divided by
all packets, across all downlink ﬂows in our data set. 38.1% of
the ﬂows have zero retransmission, and the median is only 0.06%.
Such low retransmission rates are comparable to those in wired net-
works [22]. There are even fewer packet losses since the retrans-
mission rate is an upper bound of the packet loss rate in the down-
stream (i.e., between UE and monitor, note we are not able to cap-
ture losses occurring on the upstream side of the monitor). In fact,
in cellular networks, most transport-layer losses are concealed by
physical/MAC-layer retransmission and reduced by buffering. In
particular, buffers in LTE networks upstream from the airmile can
play an important in absorbing the burstiness of the trafﬁc transmit-
ted over the lossy wireless link, helping achieve a low loss rate.
4.4 Comparison to Previous Studies
We compare our results with three previous measurement stud-
ies, focusing on three important metrics: TCP downlink through-
put, TCP uplink throughput, and TCP handshake RTT. The 3GTest
study [14] deployed an app that measures network performance
metrics on users’ handsets. Their data consisted of 35K cellular
(3G only) tests from customers of four large U.S. cellular carri-
ers in late 2009. The 4GTest study [13] adopts a similar approach
while focusing on LTE users. Its data comprises of about 1K LTE
tests and a few WiMAX tests across the U.S. in late 2011. A recent
study [31] examined a 15-week data set from speedtest.net in
2011. Table 1 shows their reported performance metrics for hand-
held device users from three locations: New York City (246K WiFi
tests / 79K cellular tests), Madison Wisconsin U.S. (24K WiFi / 4K
cellular), and Manchester U.K. (291K / 31K). The cellular technol-
ogy ranges from 2G EDGE to 4G LTE, but is dominated by 3G
(UMTS/EvDO/HSPA).
We discuss three major issues that may affect the comparison.
First, all three previous studies perform throughput measurement
 0 0.2 0.4 0.6 0.8 1 0 200 400 600 800 1000 1200Normalized RTTBytes in flight (KB) 0 100 200 300 400 500 600 0 100 200 300 400 500 600RTT (ms)Bytes in flight (KB) 0 50 100 150 200 250 300 350 0 100 200 300 400 500 600RTT (ms)Bytes in Flight (KB) 0 0.2 0.4 0.6 0.8 1 1 10 100 1000CDFDownlink bytes in flight for a TCP flow (KB)TCP downlink bytes in flight368Table 1: Comparing with previous measurement studies
Study
Time
Location
Type
Our Results
October 2012
3GTest [14]
Aug to Dec 2009
4GTest [13]
Oct to Dec 2011
Across U.S.
SpeedTest [31]
February 21 2011 to June 5 2011 (15 weeks)
Cellular
LTE Only
569
9185
24229
One US Metro Area
Across U.S.
Four 3G ISPs
74 – 222∗∗
556 – 970
1921 – 2943
5% TCP DL∗
50% TCP DL
95% TCP DL
5% TCP UL
50% TCP UL
95% TCP UL
5% HS RTT
50% HS RTT
95% HS RTT
∗ TCP DL: downlink throughput (kbps). TCP UL: uplink throughput (kbps). HS RTT: TCP handshake RTT (ms). 5%, 50%, 95% are percentiles.
∗∗ For a range x – y, x and y are the result of the worst and the best carriers, respectively, for that particular test.
New York City
LTE WiMAX Cellular WiFi
404
2112
7040
12740
30812
17617
177
387
2020
5640
19358
10094
Manchester UK
WiFi
267
4717
15635
180
745
5589
34
92
313
Madison WI, US
Cellular WiFi
347
5742
14173
168
1064
5251
24
69
343
99
895
3485
55
478
1389
99
184
773
24 – 52
207 – 331
434 – 664
125 – 182
160 – 200
645 – 809
431
4670
10344
172
1160
1595
89
125
213
28
1077
3842
25
396
1659
98
221
912
38
2286
8361
30
70
467
108
1678
12922
52
772
5428
68
159
786
37
70
127
21
54
336
using bulk data transfer of a large ﬁle without any pause while our
ﬂows may consist of idle time periods (e.g., due to user think time),
leading to a lower throughput. To obtain more fair comparison,
here we only consider large non-PEP ﬂows in our data set (with at
least 200 KB for uplink and 1 MB for downlink) with no visible
idle time period (with maximum inter-packet time of less than 1
second, which is larger than 99.9th percentile of RTT). Second,
in our case, remote servers may impose rate limit [10] while all
previous studies perform active probing using dedicated test servers
without any limitation on throughput. Third, we infer performance
metrics from traces of real Internet servers, while 3GTest, 4GTest,
and SpeedTest employ different server selection policies: 3GTest
uses a single server located in U.S. while 4GTest and SpeedTest
picks a server geographically close to the UE. This in particular
affects the latency estimation.
The comparison results are shown in Table 1. Despite aforemen-
tioned differences among diverse measurement approaches, we be-
lieve the comparison can still demonstrate the advantage of LTE
over other types of cellular access technology, since their perfor-
mance difference is quite signiﬁcant: the median downlink through-
put, uplink throughput, and handshake RTT are 9.5x, 6.9x, and
0.43x compared with the median values of the best U.S. 3G car-
rier in 2009, respectively. Compared with the 2011 New York City
cellular results, the ratios are 5.5x, 3.0x, and 0.44x for DL through-
put, UL throughput, and RTT, respectively. Moreover, on mobile
devices, LTE also outperforms WiFi in many cases. Speciﬁcally,
for the 5th/50th/95th percentiles of downlink throughput and the
median uplink throughput shown in Table 1, LTE performs bet-
ter than WiFi. Based on Table 1, LTE’s latency appears higher
than that of WiFi. However, recall that Speedtest always picks a
nearby test server while we are measuring the RTT between UE
and real servers that may be far away. This may lead to an unfair
RTT comparison. Furthermore, our performance values are con-
sistently lower than those reported by LTE tests from 4GTest, very
likely due to the rate limiting imposed by remote servers as men-
tioned before. A recent study [10] indicates such rate limiting is
prevalent across today’s Internet servers. We also observe that LTE
signiﬁcantly outperforms WiMAX in all three metrics.
5. ABNORMAL TCP BEHAVIOR
Due to their resource usage, we focus on large ﬂows deﬁned to be
relatively long ﬂows, with more than 5 seconds data transfer time,
and total downlink payload exceeding 1MB. These large ﬂows ac-
count for only 0.3% of all TCP ﬂows in our data set, but their total
downlink payload contributes to 47.7% of all downlink payload.
As background, upon receiving an out-of-order unacknowledged
segment, a TCP receiver sends an immediate duplicate ACK [3].
Figure 14: Observed duplicate ACKs and packet reordering in
large TCP ﬂows.
From the sender’s perspective, duplicate ACKs can be caused by
reordering or loss. Therefore, when there is a large amount of
bytes in ﬂight and one data segment S is lost, each data segment
with sequence number higher than that of S triggers a duplicate
ACK, before a retransmission of S is successfully received. So a
long sequence of duplicate ACKs strongly suggests a packet loss.
When TCP detects 3 duplicate ACKs, it infers a data packet loss
and retransmits it according to the fast retransmit [3]. In the mon-
itor traces, we detect this behavior as the data packet sent by fast
retransmit is out-of-order relative to other packets.
Figure 14 summarizes duplicate ACKs and packet reordering in
the large TCP ﬂows. Although the median of duplicate ACKs in
large ﬂows is 17, for over 29.0% of the large ﬂows, there are over
100 duplicate ACKs. We observe that the number of out-of-order
data packets in large ﬂows is substantially smaller than that of du-
plicate ACKs, with a median value of only 2. By studying the ratio
between duplicate ACKs and out-of-order data packets, 24.7% of
ﬂows have a ratio of over 25, and for some ﬂows, this ratio can
reach up to 5,000. This indicates that even a single out-of-order
data packet can trigger a large number of duplicate ACKs when the
bytes-in-ﬂight are large, using up more uplink bandwidth.
Fast retransmission allows TCP to directly send the lost segment
to the receiver possibly preventing retransmission timeout (RTO).
If so, TCP would resume data transfer with the congestion win-
dow size reduced by half. However, as shown earlier, we identiﬁed
signiﬁcant queuing build up between UE and monitor. Such large
in-network queues capable of holding up to a few megabytes data
could delay the receipt of the retransmitted data packet.
In that
case, if TCP does not use duplicate ACKs to update RTO (retrans-
mission timeout), a timeout is likely to happen. Speciﬁcally, if the