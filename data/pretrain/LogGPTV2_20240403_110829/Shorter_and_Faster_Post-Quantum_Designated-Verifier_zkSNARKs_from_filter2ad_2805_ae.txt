𝑝 and
v2 ∈ 𝑅𝜏
𝑝 and ⊥ otherwise.
Correctness and security analysis. Below, we state our main theo-
rems on the correctness and security of Construction 3.5. We defer
the formal analysis to the full version of this paper [78].
Theorem 3.6 (Additive Homomorphism). Let 𝜆 be a security pa-
rameter and 𝑝, 𝑞, 𝑛, ℓ′, 𝜒, 𝐵 be as defined in Construction 3.5. Suppose
𝜒 is subgaussian5 with parameter 𝑠. If 𝑛, ℓ′, 𝑠, 𝑑, 𝛾𝑅 = poly(𝜆), then
for all 𝑘 = 𝑘(𝜆), there exists 𝑞 = (𝑝𝐵 + 𝑘𝑝2) · poly(𝜆) such that Con-
struction 3.5 is additively homomorphic with respect to 𝑅𝑘
𝑝 . Concretely,
let 𝐶 be a correctness parameter and let 𝐵1, 𝐵2 be bounds. Define the
set 𝑆 = {y ∈ 𝑅𝑘
𝑝 : ∥y∥1 ≤ 𝐵1 and ∥y∥2 ≤ 𝐵2}. If ℓ′, 𝑛 > 8, and
𝑞 > 2𝑝(𝐵 + 𝛾𝑅𝐵2𝐶𝑠 + 𝛾𝑅𝐵1/2 + 2𝛾𝑅𝑛𝐶2𝑠2) + 𝑝,
(3.4)
then Eq. (3.1) holds with probability 1 − (4𝑛 + 2)𝑑ℓ′ exp(−𝜋𝐶2) for
all (𝑦1, . . . , 𝑦𝑘) ∈ 𝑆.
Theorem 3.7 (CPA Security). Fix a security parameter 𝜆 and let
𝑝, 𝑞, 𝑛, ℓ′, 𝜒 be as defined in Construction 3.5. Take any 𝑄 = poly(𝜆)
and suppose that 𝑝, 𝑞 are coprime. Under the MLWE𝑛,𝑚,𝑑,𝑞,𝜒 assump-
tion with 𝑚 = 𝑛 + 𝑄, Construction 3.5 is 𝑄-query CPA secure.
5When 𝑑 > 1, we assume that 𝜒 is the concatenation of 𝑑 independent subgaussian
distributions over Z, each with parameter at most 𝑠. This is true for discrete Gaussian
distributions over a power-of-two cyclotomic ring.
Session 1C: Zero Knowledge I CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea219Theorem 3.8 (Circuit Privacy). Let 𝜆 be a security parameter and
𝑝, 𝑞, 𝑛, ℓ′, 𝜒 be as defined in Construction 3.5. Suppose that 𝜒 is sub-
gaussian with parameter 𝑠. If 𝑛, ℓ′, 𝑠, 𝑑, 𝛾𝑅 = poly(𝜆), and 𝐵 = 2𝜔(log 𝜆)·
𝑘𝑝2, then under the MLWE𝑛,𝑚,𝑑,𝑞,𝜒 assumption with 𝑚 = 𝑛, Con-
𝑝 . Con-
struction 3.5 is circuit private with respect to the set 𝑆 = 𝑅𝑘
cretely, let 𝐶 be a correctness parameter and let 𝐵1, 𝐵2 be bounds.
𝑝 : ∥y∥1 ≤ 𝐵1 and ∥y∥2 ≤ 𝐵2}. Then under the
Let 𝑆 = {y ∈ 𝑅𝑘
MLWE𝑛,𝑚,𝑑,𝑞,𝜒 assumption with 𝑚 = 𝑛, for every efficient adversary
A restricted to strategies in 𝑆, there exists an efficient simulator S
where
Pr[ExptCircuitPrivΠEnc,A,S(1𝜆) = 1] ≤ 1/2 + 𝜀 + negl(𝜆),
and
𝜀 = (4𝑛 + 2)𝑑ℓ′ exp(−𝜋𝐶2) + 𝑑ℓ′(𝛾𝑅𝐵2𝐶𝑠 + 𝛾𝑅𝐵1/2 + 2𝛾𝑅𝑛𝐶2𝑠2)
.
(3.5)
𝑝, 𝑑, 𝜏 be defined as in Construction 3.5. If(cid:12)(cid:12)𝑅𝑝(cid:12)(cid:12)𝜏
Conjecture 3.9 (Linear-Only). Fix a security parameter 𝜆 and let
= 𝑝𝜏𝑑 = 𝜆𝜔(1), then
Construction 3.5 is strictly linear-only (Definition 3.2).
𝐵
Extensions and variants. In the full version of this paper [78], we
discuss the plausibility of Conjecture 3.9 and describe an extension
of Construction 3.5 to higher-degree extensions and an alternative
approach based on bit decompositions to reduce noise growth.
Modulus switching. The size of the ciphertext in Construction 3.5
is determined by three main parameters: the ring dimension 𝑑, the
module dimension 𝑛, and the ciphertext modulus 𝑞. According to
Theorem 3.6, the modulus 𝑞 must be sufficiently large to support
the required number of homomorphic operations. However, the
modulus switching technique developed in the context of fully
homomorphic encryption [3, 40, 41, 52, 56] provides a way to re-
duce the size of the ciphertexts after performing homomorphic
operations. Specifically, modulus switching allows one to take a ci-
phertext over 𝑅𝑞 and convert it to one over 𝑅𝑞′ where 𝑞′  𝑞′ > 𝑝 and a
𝑞 , the scale operation outputs the vector x′ ∈ 𝑅𝑛
vector x ∈ 𝑅𝑛
𝑞′
that is closest to (𝑞′/𝑞) · x such that x′ = x (mod 𝑝).
We now state the main theorem, adapted from [40]. We provide the
proof in the full version of this paper [78].
Theorem 3.10 (Modulus Switching [40, adapted]). Let 𝜆 be a se-
curity parameter and 𝑝, 𝑞, 𝑛, 𝑑, ℓ′, 𝜒 be as defined in Construction 3.5.
Let 𝐶 be a correctness parameter. Suppose that 𝜒 is subgaussian with
parameter 𝑠. Let 𝑞′  𝑁𝑔. Indeed, the construction
of Ben-Sasson et al. uses a specially-chosen elliptic curve group
whose order is divisible by a large power of 2. In our setting, we
consider linear PCPs over a quadratic extension F𝑝2, whose order
is 𝑝2 − 1 = (𝑝 + 1)(𝑝 − 1). In the best case, if 𝑝 = 2𝑑 ± 1, then F𝑝2
has a subgroup of order 2𝑑+1. However, if 𝑁𝑔 > 2𝑝, the field F𝑝2
never has a sufficiently large subgroup to directly compute radix-2
FFTs.6
Our approach. When the field F contains a multiplicative sub-
group whose order is a moderately large power of two (e.g., 2𝑑), we
can still leverage (multiple) radix-2 FFTs to efficiently implement
multipoint polynomial evaluation and interpolation over a domain
𝐷 ⊂ F of size |𝐷| = 𝑘·2𝑑 for a (small) 𝑘 > 1. We give a brief overview
of our approach here and defer the full details to Appendix D. Let
𝜔 ∈ F be a primitive 2𝑑-th root of unity and let 𝐻 = 𝐻1 = ⟨𝜔⟩ ⊂ F
be the subgroup of order 2𝑑 generated by 𝜔 (corresponding to the
2𝑑-th roots of unity). We define our domain 𝐷 (for multipoint eval-
uation and interpolation) to be𝑖∈[𝑘] 𝐻𝑖, where 𝐻2, . . . , 𝐻𝑘 are
pairwise disjoint cosets of 𝐻. Polynomial evaluation over 𝐷 can
be implemented using 𝑘 degree-2𝑑 FFTs (over 𝐻1), along with 2𝑑
multipoint evaluations of polynomials of degree-𝑘 (over a fixed
basis determined by the cosets). An analogous result holds for inter-
polation. As long as 𝑘 < 2𝑑, the smaller evaluation/interpolations
can be implemented in 𝑘 log 𝑘 time using standard FFTs. In this
case, the running time of our algorithm for evaluating a polynomial
on a domain of size 2𝑑𝑘 is 𝑂(2𝑑𝑘(𝑑 + log 𝑘)), which matches the
asymptotic complexity of a standard FFT over a domain of the same
size. We give more details in Appendix D. We use this approach to
implement the linear PCP prover when working over fields with
insufficient roots of unity to support a standard radix-2 FFT.
4.2 Lattice-Based zkSNARK Implementation
In this section, we describe our overall zkSNARK implementation.
We begin by describing our methodology for setting the lattice
parameters 𝑛, 𝑞, 𝜒 for our lattice-based vector encryption scheme
(Construction 3.5). We then describe a few optimizations to improve
the concrete efficiency of the resulting construction.
6While more general algorithms for FFT can be used for multipoint evaluation and
interpolation over a domain whose size is a prime power [90] or a product of coprime
values [72, 104], these algorithms are more complex to implement and worse in terms
of concrete efficiency compared to basic radix-2 FFTs. We show how to implement
our approach using a small number of radix-2 FFTs.
𝜆𝑞
128
128
128
128
𝜆𝑐
138
138
138
138
𝑠
80
36
64
40
ℓ
82
71
109
36
𝑝
5 · 225 + 1
219 − 1
213 − 1
219 − 1
log 𝑞
123
107
98
108
(𝑛, 𝑑)
(4700, 1)
(4050, 1)
(1815, 2)
(2045, 2)
Fields∗
𝜏
5
F𝑝, F𝑝
7
F𝑝2, F𝑝
5
F𝑝2, F𝑝2
4
∗ The first field listed is the base field for the linear PCP ΠLPCP and the second is
the plaintext field for the linear-only vector encryption scheme ΠEnc.
Table 2: Lattice parameters for zkSNARK instantiations ob-
tained by combining the linear PCP ΠLPCP from Claim A.6
and Remark A.7 with the linear-only vector encryption
scheme ΠEnc from Construction 3.5. Here, 𝜆𝑞 is the estimated
number of bits of quantum security, 𝜆𝑐 is the estimated num-
ber bits of classical security, 𝑝 is the plaintext modulus, 𝑛 is