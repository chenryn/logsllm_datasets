ﬁrst, p1 is a huge peak, likely caused by a change in the
interaction conﬁguration at the external source, since it also
introduced an increase in the constant component of the
ﬂow. Then both p2 and p4 are smaller peaks, and p3, p5
are drops, probably due to connectivity problems, in the
otherwise extremely constant alert ﬂow.
There was also low intensity activity that is almost in-
visible in the picture. This type of low-level activity would
be easily lost among the bulk of alerts if the alerts were
processed manually. In the case of completely shunning the
signature this activity would have been simply impossible to
detect.
We place this alert ﬂow in the class A because of its con-
stant and explicable nature.
ICMP PING WhatsupGold Windows is triggered by
ICMP Echo messages with a payload claiming them to be
created by a performance measurement tool3. The source
address is by deﬁnition external, so the root cause for these
alerts is likely to be out of operator’s sphere of inﬂuence.
In this ﬂow, visible in Fig. 2(b), we see a constant compo-
nent, and on top of which we have a periodic component cre-
ating peaks on ﬁve workdays but no additional alerts during
the week-ends. Alerts generated by these two components
are regular and considered as legitimate, actually originat-
ing from the usage of the performance measurement tool.
The tool includes a server polling the the network nodes to
ﬁnd out their availability, and thus the normal ﬂow behavior
is independent of the general network traﬃc volume in con-
trast to the case speedera. This automated origin explains
also the high regularity of the daily and weekly variations
and the existence of the constant component.
The interesting phenomena are the shifts in the constant
level. Phenomena p1, p4, p6 and p7 are drops, and p2, p3,
p5 and p8 are increases in the constant component intensity.
As with the previous ﬂow, these are changes in the alert
generation rate, and ﬁltering based solely on alert attributes
would prevent the operator from seeing these changes.
We place this ﬂow in the class C because of its periodic
nature, and since even though we know the origins of the
normal behavior, it is diﬃcult to enumerate them for the
anomalies.
ICMP Destination Unreachable Communication
Administratively Prohibited reacts to particular ICMP
messages normally generated when a network node, e.g. a
router, drops a packet for administrative reasons.
For this ﬂow, shown in Fig. 2(c), there are several possi-
ble causes for the alerts like backscatter from DDoS attacks,
network outages or routing problems. Given the erratic pro-
ﬁle, it is likely a combination of all these and more. In other
words, we could not deﬁne the root causes. These messages
are like background radiation, almost any network is likely
to have them in the inbound traﬃc as hosts within try to
connect to invalid/non-accessible addresses. Consequently,
ﬁltering based on individual alerts would be diﬃcult. The
ﬂow proﬁle does not contain as much structure as the oth-
ers. When smoothing the intensity with EWMA some struc-
ture came visible, indicating a rather weak week rhythm. A
correlation between the network usage and incoming ICMP
Destination Unreachable seems quite logical, and would
explain the week rhythm.
We place this ﬂow in the class C, as we cannot associate
the high variability nor the anomalies to a small set of root
causes.
LOCAL-POLICY External connexion from HTTP
server is a custom signature with quite self-explicative name.
The rationale for this signature is that as all the back-end
servers are internal, a web server should not be on the SYN
side of a TCP handshake with external hosts, unless for ex-
ample infected by a worm. Nonetheless they did and up to
this day we have not been able to explain this behavior.
The alert intensity is depicted in Fig. 2(d). Even though
the proﬁle consists of impulses, some periodicity can be
found. There are peaks of thousands of alerts following a
weekly rhythm, and smaller peaks following daily and even
shorter cycles. In addition there are anomalies: p1 is missing
and p3 is a change in the low-level activity. The phenomenon
p2 is an extremely high peak with respect to past observa-
tions, and p4 and p5 are large peaks breaking the normal
rhythm.
We place this ﬂow in the class C as we lack explana-
tions for both normal and anomalous behavior, and since
the peaks have periodic nature.
ICMP PING speedera triggers on ICMP Echo mes-
sages carrying a payload claiming the packet to originate
from a server belonging to content distribution company
Speedera4 trying to determine the closest cache to the host
requesting content.
The number of these messages is proportional to the ac-
cesses to sites hosted by the company. Consequently the
ﬂow, shown in Fig. 2(e), has strong periodic component with
peaks during working hours and valleys during night time
and weekends. We consider the periodic component as nor-
mal system behavior. Two anomalies were identiﬁed, p1 is
a peak during high activity hours, and p2 is a peak during
low activity period. These are likely to be anomalies caused
by an increase in the legitimate traﬃc, related to something
like the release of Pirelli’s calendar on a server hosted by
Speedera.
We place the ﬂow in the class B because it is highly peri-
odic, and as we are able to explain both the normal behavior
and the anomalies.
Next some conclusions we have made from the analysis.
In general, large amounts of alerts are not false positives in
the strict sense, but background noise generated by proliﬁc
signatures reacting to the normal functioning of the system,
as discussed earlier. Referring to the noise source classes of
section 1, these alerts fall into category four. The interesting
phenomena in these ﬂows are often intermittent, and con-
3http://www.ipswitch.com/Products/WhatsUp/
professional/
4http://www.speedera.com
0
sist of 1) changes in the intensity generated by the normal
system behavior or by so called root causes, and/or 2) ap-
pearance of abnormal sources, i.e. something else than the
root causes, both representing typically intermittent activ-
ity. We need ﬂow level ﬁltering since alert by alert ﬁltering
generally loses the case one and without any ﬁltering the
case two risks to be lost in the noise.
We wish also to point out that four out of ﬁve signa-
tures trigger alerts almost in a non-ending stream. Without
further automation of alert processing, the operator would
need to be analyzing these alerts constantly. This would be
a tedious task, requiring at least time and likely to strain
analysts’ mental resources.
Based on our observations we suppose that the regular-
ity and the stationary structure present in these alert ﬂows
have benign origins. By deﬁnition stationary structure has
existed in the past and has remained unchanged. Thus it
should be normal also according to the underlying hypoth-
esis of anomaly detection.
5. METHODOLOGY FOR ALERT FLOW
MODELING AND FILTERING
In this section we propose a methodology to model and
ﬁlter alert ﬂows. To present our observations in a more
exact manner, we will use some notation and concepts from
the ﬁeld of time series analysis, mostly according to [3, 4].
It should be mentioned that the theory and methods on
which we build are classical and simple, our intention is to
map them to alert processing and to our problem, and then
to propose a methodology to apply these methods. As the
methods are simple, they are likely not the most suitable for
all alert ﬂows. However, this is our ﬁrst trial with techniques
from the time series analysis discipline, and we wanted to
see ﬁrst what we can achieve with these simple methods.
In addition, obtained results will serve as a yard stick to
measure the improvements in future work. We begin with
an overview of the proposed methodology, and then describe
each step in more detail.
5.1 Overview
An alert ﬂow is the stream of successive alerts meeting
the aggregation criteria. We aggregate alerts according to
the signature that generated the alert, and view the ﬂow
intensity measurements taken at ﬁxed intervals as a time
series St. The objective is to ﬁlter out from this ﬂow or time
series the components that correspond to normal activity of
the information system.
A discrete-time time series model for a set of observations
{xt}, is a representation of the joint distributions of a se-
quence of random variables {Xt} of which {xt} is postulated
to be one realization. Each xt is recorded at time t, where
the set T0 of observation times is a discrete set. Here we
consider only observations made with ﬁxed time intervals.
In practice, the speciﬁcation of joint distributions is rarely
available, and unfeasible to estimate, only ﬁrst- and second
order moments of the joint distributions are used.
We use a model St for alert series
St = Xt + Et ,
(1)
where Xt represents the part of the alert ﬂow caused by the
normal activity, and Et the remaining i.e.
the abnormal
part of the alert ﬂow. As mentioned before, as the result
of alert ﬂow analysis, we consider regularity and stationary
phenomena in alert ﬂows as part of normal system behav-
ior. Whereas the intermittent, non-stationary phenomena in
alert series we regard as caused by abnormal system behav-
ior. This abnormal behavior can be attacks or more general
problems. The distinction between alerts related to normal
and abnormal activity is invisible at the alert level, but can
be seen at the ﬂow level.
According to the classical decomposition model [3] a time
series Xt can be considered to contain three, trend, periodic
and random, components
Xt = Tt + Pt + Rt ,
(2)
where Tt is a slowly changing trend, Pt is the periodic com-
ponent with a known period d, and Rt is random station-
ary component. Note that Rt is not necessarily completely
random in the common sense of the word, but can contain
structure that does not ﬁt into Tt nor into Pt. In the litera-
ture Rt is also called the noise component, but to avoid the
collision with our term background noise, we prefer to use
random component for Rt.
For example, Tt would correspond to the slow changes
in the alert intensity caused by the overall changes of the
monitored traﬃc over the time. Pt would correspond to the
periodicity in alert ﬂows created by periodic system activ-
ity related to working hours and working days. As a more
speciﬁc example, ICMP Ping speedera has a strong periodic
component, see Fig. 2(e). Less trivial behavior that is still
present and invariant over a longer time would correspond
to the structured part of Rt.
To let the operator focus on alerts warranting further in-
vestigation, we ﬁlter out alerts conforming to the description
of normal system behavior i.e. the components of alert ﬂow
that ﬁt into the Xt of the equation (2). The abnormal com-
ponent of an alert ﬂow is the residual series Et = St − Xt,
and only most signiﬁcant phenomena of Et are signaled to
the operator as meta-alerts.
Figure 3 depicts the steps in this process. The transfor-
mation from data to series S is in this case trivial, as we only
count the number of alerts matching the aggregation criteria
in a time unit, one hour. We acknowledge that the choice of
the time unit aﬀects especially the timeliness of the detec-
tion and the visibility of certain phenomena in alert ﬂows.
Given the noise-like nature of monitored alerts, we see that
the hourly measurements are suﬃcient. We also consider
only univariate series even though other transforms creat-
ing a multivariate series from alert data to series could be
envisaged. In 5.2 and 5.3 we describe how to remove Tt and
Pt, respectively, from St to obtain ﬁrst detrended series S 
t
and then S 
t from which the periodic component is removed.
Now the series S 
t contains the random, Rt, and the abnor-
mal, Et, components. The structure in Rt is captured in a
time series model, described in 5.4, and Et is obtained as the
diﬀerence between model output ˆSt
and the observations
S 
t . Finally, the detection of most signiﬁcant anomalies is
detailed in 5.5.
5.2 Removing the Trend
First of all, we assume that the trend Tt possibly present
in alert ﬂow is linear. The reasoning behind this is based
on the common sense and on our observations. If the trend
is of higher degree, then there is a serious problem with the
sensors, and the alert storage capacity is running out very
0
 1000
r
u
o
h
r
e
p
s
t
r
e
A
l
 100
p2
p4
p1
p5
p3
 10
Feb−08 Feb−15 Feb−22 Mar−01 Mar−08 Mar−15
Date
 1000
r
u
o
h
r
e
p
s
t
r
e
A
l
 100
 10
p8
p1
p3
p2
p4
p5
p6
p7
 1
Feb−08 Feb−15 Feb−22 Mar−01 Mar−08 Mar−15
Date
 1000
r
u
o
h
r
e
p
s
t
r
e
A
l
 100
 10
(a) SNMP Request, Class A
(b) Whatsup, Class C
 10000
 1000
r
u
o
h
r
e
p
s
t
r
e
A
l
 100
p1
 10
p2
p4 p5
p3
 1
Feb−08 Feb−15 Feb−22 Mar−01 Mar−08 Mar−15
Date
 1
Feb−08 Feb−15 Feb−22 Mar−01 Mar−08 Mar−15
Date
(c) Dest. Unr., Class D
(d) LOCAL-POLICY, Class C
p1
p2
 1000
r
u
o
h
r
e
p
s
t
r
e
A
l
 100
 10
 1
Feb−08 Feb−15 Feb−22 Mar−01 Mar−08 Mar−15
Date
(e) Speedera, Class B
Figure 2: Hourly alert intensity for ﬁve most proliﬁc ﬂows aggregated by signature. Horizontal axis is the
time, and the vertical shows the number of alerts per hour in log-scale. The dashed line shows the division
to estimation and validation data used for experimentations. The arrows point out phenomena in which we
are interested in
0
alerts
data
to
signal
.
.
.
s1
s1