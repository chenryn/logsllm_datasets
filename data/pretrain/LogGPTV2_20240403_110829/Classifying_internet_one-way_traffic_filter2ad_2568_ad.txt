8
Sign Type
Host pair behavior
Remote host behavior
Local host behavior
Flow feature
Detection Criterion/Algorithm
Sign Short Name for Rules
PotOK
InOut
Sign Name
End-hosts-communicating One-way ﬂow between productive host pair
Limited dialog
Service sole reply
Remote scanner
Remote nominal
Peer-to-peer source
Unused local address
Temporary Inactive
Service unreachable
High Service unreachable
Peer-to-peer destination
P2P ﬂow
ICMP error 1
ICMP error 2
ICMP request
ICMP reply
TCP ﬂooding
ICMP other
UDP/TCP scan ﬂow
Reserved IP
Bogon IP
One-way ﬂows between unproductive host pair
No biﬂow on srcIP ∧ dstPort≥1024 ∧ srcPort  50 packets, all with same ﬂags
Remaining ICMP messages not ﬁtting any of the other ICMP signs
TCP ﬂow violating state machine or UDP ﬂow wit no payload
Source IP is a IANA reserved address
Source IP is from full bogon IP address list (unallocated)
ScanSrc
NoScan
P2pSrc
DarkIP
OﬀDst
SrvDst
HiSvDst
P2pDst
P2pApp
IcmpErr1
IcmpErr2
IcmpReq
IcmpReq
TcpFlood
IcmpOth
ScanInv
BogonIana
BogonFull
Table 4: Overview of deﬁned validation signs based on the behavior of one or both involved hosts,
DPI application identiﬁcation or based on numeric values of one or more ﬂow or packet attributes.
Finally, we count all remaining incoming TCP/UDP
one-way ﬂows towards unpopulated IP addresses as scan
traﬃc unless they already match a more speciﬁc rule of
another class. This class assignment follows the princi-
ple of Occam’s razor.
5.2.2 Class ‘Backscatter’
Backscatter traﬃc is created either as a reaction to
DoS attacks using spoofed source IP addresses or is the
result of routers sending ICMP error messages, e.g. of
type ‘network unreachable’. Furthermore, any answer
to an ICMP request containing a spoofed source IP ad-
dress can be considered backscatter traﬃc. For each of
these types we test separately. We detect DoS-initiated
backscatter traﬃc when we see a TCP or UDP ﬂow with
a low source port (= 1024) sourced by a host that never receives traf-
ﬁc from our network during the full observation period
(and for TCP does not contain SYN packets). We con-
sider ICMP unreachable error messages as backscatter
whenever they are not sourced by an identiﬁed scanner
and there are solely inﬂows exchanged between the host
pair involved. Moreover, ICMP replies are identiﬁed as
backscatter traﬃc whenever they are sourced by an ex-
ternal IP address that never receives traﬃc from our
network and at the same time was not identiﬁed as a
scanner.
5.2.3 Class ‘Service Unreachable’
We describe a service oﬀered by our network as a
three-tuple {localIP, protocol, localPort}. To elect a ser-
vice we count the external sources of two-way ﬂows that
are identiﬁed by DPI inspection to be of a well-known
application type and that are initiated by the external
host. For initiator-detection we rely on precise packets
timestamps provided by our test setup.
If the count
of unique external IP addresses sourcing such ﬂows ex-
ceeds a threshold of 20 then we add a service to the
services list. We build the services list along the host
proﬁles during a ﬁrst pass over the full dataset. This
way we detected 36 local services.
5.2.4 Class ‘Benign P2P Scanning’
We use DPI application identiﬁcation applied to two-
way ﬂows to identify hosts running productive P2P ap-
plications. To qualify a host as a P2P user we set a
minimum threshold of 10 on the number of identiﬁed
P2P two-way ﬂows we see during the full observation
period. Thus, we base the P2P host detection on the
host behavior proﬁles we extended by P2P ﬂow counts.
We identiﬁed a total of 26,393 external and 410 local
P2P hosts. We cannot detect Skype traﬃc because
its proprietary protocol signiﬁcantly changed in its cur-
rent version making evaluated detection rules unusable.
This underestimates the number of ﬂows falling into this
class.
5.2.5 Class ‘Suspected Benign’
This class takes all one-way ﬂows that do not seem
to be malicious and are not yet assigned to one of the
other benign classes. Examples are ﬂows sourced by
misconﬁgured applications that target unpopulated IP
space or failed connection attempts between a host pair,
which has a bi-ﬂow. To become a candidate, a ﬂow must
not be sourced by an identiﬁed scanner. This includes
ﬂows adhering to the TCP protocol state machine or
being sourced by a host identiﬁed to be nominal.
In
addition, we consider repeated valid TCP connection
retries or any ﬂows sourced by P2P hosts towards pop-
ulated but currently inactive IP addresses as potentially
benign. A last group is formed by ICMP error messages
and replies sent to local hosts that sourced an outgoing
ﬂow to the external IP address they receive the ICMP
message from.
5.2.6 Class ‘Bogon’
Flows falling into this class use source IP addresses
from IP ranges not allocated to any organization. There-
fore, such ﬂows are likely the result of IP address spoof-
ing in the context of decoy scanning or direct denial-of-
service attacks.
To identify all IP addresses belonging to unallocated
9
Class Name
Rule # Flow Membership Rules
Malicious
Scanning
Backscatter
Service
Unreachable
Benign P2P
Scanning
Suspected
Benign
Bogon
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
{ScanInv, ScanSrc, N oScan, P 2pApp, P 2pSrc, P 2pDst, SrvDst, HiSvDst, P otOk, BogonIana, BogonF ull} ⇒ Scanner
{ScanSrc, ScanInv, IcmpErr1, IcmpErr2, IcmpReq, IcmpRpl, P 2pApp, P 2pSrc, P 2pDst, HiSvDst, !BogonF ull} ⇒ Scanner
{ScanInv, ScanSrc, P 2pSrc, P 2pApp, DarkIP , SrvDst, HiSvDst, BogonF ull} ⇒ Scanner
{T cpF lood, Of f Dst, ScanSrc, N oScan, P 2pDst} ⇒ Scanner
{ScanInv, ScanSrc, DarkIP, BackscP ort, BogonF ull} ⇒ Scanner
{IcmpErr1, ScanSrc, BogonIana, BogonF ull} ⇒ Scanner
{IcmpErr2, ScanSrc, InOut, BogonIana, BogonF ull} ⇒ Scanner
{IcmpReq, P 2pDst, !P otOk, BogonIana, BogonF ull, N oScan} ⇒ Scanner
{IcmpRpl, ScanSrc, BogonIana, BogonF ull} ⇒ Scanner
{DarkIP, Of f Dst, ScanInv, ScanSrc, IcmpRpl, N oScan, BackscP ort, IcmpReq, BogonF ull, IcmpErr1, IcmpErr2} ⇒ Scanner
{BackscP ort, P 2pSrc, P 2pDst, ScanSrc, P otOk, BogonF ull, InOut} ⇒ Backscatter
{IcmpRpl, ScanSrc, InOut, P otOk, P 2pDst, BogonIana, , BogonF ull} ⇒ Backscatter
{IcmpErr1, ScanSrc, InOut, P otOk, P 2pDst, BogonIana, !BogonF ull, N oScan} ⇒ Backscatter
{IcmpErr2, ScanSrc, InOut, P otOk, P 2pDst, BogonIana, BogonF ull, N oScan} ⇒ Backscatter
{SrvDst, P 2pDst, ScanSrc, T cpF lood, !BogonIana, BogonF ull} ⇒ U nreachable
{SrvDst, P 2pDst, ScanInv, ScanSrc, P 2pSrc, N oScan, BogonIana, BogonF ull} ⇒ U nreachable
{SrvDst, P 2pDst, ScanInv, ScanSrc, P 2pSrc, , DarkIP , BogonIana, BogonF ull} ⇒ U nreachable
{P 2pApp, P 2pSrc, P 2pDst} ⇒ P 2P
{P 2pSrc, P 2pDst, P 2pApp} ⇒ P 2P
{P 2pDst, Of f Dst, P 2pSrc, ScanSrc, DarkIP , BogonIana, BogonF ull} ⇒ P 2P
{P 2pDst, P 2pApp, Of f Dst, ScanSrc, P 2pSrc, DarkIP , SrvDst, BogonIana, BogonF ull} ⇒ P 2P
{HiSvDst, P 2pDst, ScanSrc, T cpF lood} ⇒ P 2P
{P 2pApp, P 2pDst, P 2pSrc, Of f Dst, BogonIana, BogonF ull} ⇒ P 2P
{P 2pApp, P 2pSrc, P 2pDst, ScanSrc, DarkIP , BackscP ort, T cpF lood, BogonIana, BogonF ull, P otOk} ⇒ P 2P
{N oScan, BackscP ort, P 2pSrc, P 2pDst, SrvDst, BogonIana, P otOk} ⇒ Benign
{T cpF lood, Of f Dst, ScanSrc, P 2pApp, N oScan, P 2pDst, DarkIP} ⇒ Benign
{P 2pSrc, Of f Dst, P 2pDst, T cpF lood, DarkIP , ScanSrc} ⇒ Benign
{P otOk, ScanSrc, !P 2pDst, SrvDst} ⇒ Benign
{IcmpErr1, InOut, ScanSrc, DarkIP , Of f Dst, N oScan, P otOk} ⇒ Benign
{IcmpRpl, InOut, ScanSrc, DarkIP , Of f Dst, N oScan, P otOk} ⇒ Benign
{IcmpErr2, InOut, ScanSrc, DarkIP , Of f Dst, N oScan, P otOk} ⇒ Benign
{BogonIana, BogonF ull} ⇒ Bogon
{BogonF ull, BogonIana} ⇒ Bogon
{BogonIana, BogonF ull} ⇒ Bogon
Table 5: Rules used to classify one-way ﬂows based on packet-level data. Each rule speciﬁes which
signs have to be present or absent (sign names with overbars). An overview of deﬁned signs can be
found in Table 4.
IP space, we use an extended list beyond the IANA
reserved IP ranges that we download from a periodically
updated database [8].
5.2.7 Class ‘Other’
All ﬂows which do not match any of the deﬁned rules
are assigned to class “Other”. Typically this includes
ﬂows carrying no or few signs or that, in rare cases,
carry contradictory signs excluding them from any clas-
siﬁcation rule.
5.3 Validation Results
We run both the ﬂow-based classiﬁer and our DPI
classiﬁer over the evaluation dataset. Then, we com-
pare the results of both classiﬁcation runs and ﬁll-in a
confusion matrix showing predicted (ﬂow-based) versus
actual (DPI-based) class memberships. Based on the
confusion matrix, we calculate the recall (also called
sensitivity), speciﬁcity and precision metrics for all de-
ﬁned classes.
For the ﬂow-based classiﬁcation we use the same set-
tings as we apply to the full dataset with the exception
of the time window parameter for remote host proﬁl-
ing, which we increase by a factor of 32 to 16 hours
instead of 30 mins. This compensates for the smaller
probability to observe randomly targeted scan ﬂows in
the evaluation dataset caused by the smaller IP address
range. Similarly to the full-dataset analysis, we classify
incoming one-way ﬂows. Our validation uses the full
evaluation dataset to build host proﬁles and a subset
of 34.8 mio incoming one-way ﬂows for DPI. For this
subset we could validate 99.4% of all one-way ﬂows.
The test results are summarized in Table 6. We ob-
tain very good results for the classes “Malicious Scan-
ning”, “Service Unreachable” and “Benign P2P Scan-
ning” with recalls above 95.3%, speciﬁcitiy values greater
than 91.3% and precision exceeding 95.4%. The class
“Suspected Benign” has a recall of 85.1% and a pre-
cision of 75% caused by ﬂows in the borderline be-
tween the classes “Suspected Benign” and “Malicious
Scanning” that are hard to separate. On the other
hand, its speciﬁcity is excellent at 99.9%. For the class
“Backscatter” we observe a recall of 62.4%. We miss
primarily ICMP replies and error messages as ICMP
type and code information is not available in our ﬂow
data. However, the recall can be easily improved by us-
ing ICMP type/code ﬁelds when available to ﬁnd ICMP
replies. Besides, a speciﬁcity of 100% and a precision of
88.4% shows this class is still very useful. Finally, we
observe a low recall for the class “Bogon” of 40.4% and
10
Class Name
Malicious Scanning
Backscatter
Service Unreachable
Benign P2P Scanning
Suspected Benign
Bogon
Recall [%]
99.9 (99.6)
62.4 (62.4)
99.6 (99.5)
95.3 (91.8)
85.1 (70.5)
40.4 (40.2)
Speciﬁcity [%] Precision [%]
91.2 (88.8)
100.0 (100.0)
100.0 (100.0)
99.9 (99.8)
99.9 (99.9)
99.8 (99.6)
88.4 (87.2)
96.1 (92.5)
95.5 (85.0)
75.0 (70.5)
100.0 (100.0)
100.0 (100.0)
Table 6: Results of validation. The values in
parentheses provide a lower bound by counting
non-validated ﬂows as classiﬁcation mismatches.
at the same time a perfect speciﬁcity and precision of
100.0%. This is because the bogon list used by the ﬂow-
based classiﬁer is a subset of the bogon list used by our
DPI classiﬁer. We intentionally exclude the full-bogon
information from ﬂow-based classiﬁcation because his-
torical full-bogon data is not available. Again, it is triv-
ial to extend the ﬂow-based classiﬁer to use full-bogon