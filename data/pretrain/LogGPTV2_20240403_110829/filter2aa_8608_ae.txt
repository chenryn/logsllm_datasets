.RS 4
进入紧急维修模式。差不多相当于执行
\fBisolate emergency\&.target\fR
命令。 但同时会向所有用户显示一条警告信息。
.RE
.PP
\fBhalt\fR
.RS 4
关闭系统，但不切断电源。 差不多相当于执行
\fBstart halt\&.target \-\-job\-mode=replace\-irreversibly\fR
命令。 但同时会向所有用户显示一条警告信息。 若仅使用一次
\fB\-\-force\fR
选项，则跳过单元的正常停止步骤而直接杀死所有进程，强制卸载所有文件系统(或以只读模式重新挂载)，并立即关闭系统。 若使用了两次
\fB\-\-force\fR
选项，则跳过杀死进程和卸载文件系统的步骤，并立即关闭系统，这会导致数据丢失、文件系统不一致等不良后果。 注意，如果连续两次使用
\fB\-\-force\fR
选项， 那么所有操作都将由
\fBsystemctl\fR
自己直接执行，而不会与 systemd 进程通信。 这意味着，即使 systemd 进程已经僵死或者崩溃， 连续两次使用
\fB\-\-force\fR
选项所指定的操作依然能够执行成功。
.RE
.PP
\fBpoweroff\fR
.RS 4
关闭系统，同时切断电源。 差不多相当于执行
\fBstart poweroff\&.target \-\-job\-mode=replace\-irreversibly\fR
命令。 但同时会向所有用户显示一条警告信息。 若仅使用一次
\fB\-\-force\fR
选项，则跳过单元的正常停止步骤而直接杀死所有进程，强制卸载所有文件系统(或以只读模式重新挂载)，并立即关闭系统。 若使用了两次
\fB\-\-force\fR
选项，则跳过杀死进程和卸载文件系统的步骤，并立即关闭系统，这会导致数据丢失、文件系统不一致等不良后果。 注意，如果连续两次使用
\fB\-\-force\fR
选项， 那么所有操作都将由
\fBsystemctl\fR
自己直接执行，而不会与 systemd 进程通信。 这意味着，即使 systemd 进程已经僵死或者崩溃， 连续两次使用
\fB\-\-force\fR
选项所指定的操作依然能够执行成功。
.RE
.PP
\fBreboot \fR\fB[\fIarg\fR]\fR
.RS 4
关闭系统，然后重新启动。 差不多相当于执行
\fBstart reboot\&.target \-\-job\-mode=replace\-irreversibly\fR
命令。 但同时会向所有用户显示一条警告信息。 若仅使用一次
\fB\-\-force\fR
选项，则跳过单元的正常停止步骤而直接杀死所有进程，强制卸载所有文件系统(或以只读模式重新挂载)，并立即关闭系统。 若使用了两次
\fB\-\-force\fR
选项，则跳过杀死进程和卸载文件系统的步骤，并立即关闭系统，这会导致数据丢失、文件系统不一致等不良后果。 注意，如果连续两次使用
\fB\-\-force\fR
选项， 那么所有操作都将由
\fBsystemctl\fR
自己直接执行，而不会与 systemd 进程通信。 这意味着，即使 systemd 进程已经僵死或者崩溃， 连续两次使用
\fB\-\-force\fR
选项所指定的操作依然能够执行成功。
.sp
若给出了可选的
\fIarg\fR
参数， 那么将会被作为可选参数传递给
\fBreboot\fR(2)
系统调用。 其取值范围依赖于特定的硬件平台。 例如
"recovery"
有可能表示触发系统恢复动作， 而
"fota"
有可能表示
\(lqfirmware over the air\(rq
固件更新。
.RE
.PP
\fBkexec\fR
.RS 4
关闭系统，并通过内核的 kexec 接口重新启动。 差不多相当于执行
\fBstart kexec\&.target \-\-job\-mode=replace\-irreversibly\fR
命令。 但同时会向所有用户显示一条警告信息。 若使用了
\fB\-\-force\fR
选项， 则跳过服务的正常关闭步骤而直接杀死所有进程， 强制卸载所有文件系统(或只读挂载)， 并立即关闭系统。
.RE
.PP
\fBexit \fR\fB[\fIEXIT_CODE\fR]\fR
.RS 4
让 systemd 按照指定的
\fIEXIT_CODE\fR
退出码(必须是整数)退出。 若未指定
\fIEXIT_CODE\fR
则退出码为零。
.sp
此命令相当于
\fBpoweroff\fR
命令， 但仅可用于用户实例(也就是以
\fB\-\-user\fR
选项启动的实例)或容器， 否则会执行失败。
.RE
.PP
\fBswitch\-root \fR\fB\fIROOT\fR\fR\fB \fR\fB[\fIINIT\fR]\fR
.RS 4
将系统的根目录切换到
\fIROOT\fR
并执行新的
\fIINIT\fR
程序(PID=1)。 此命令仅应该在初始内存盘("initrd")中使用。 如果未指定
\fIINIT\fR
参数， 那么表示自动在
\fIROOT\fR
目录下搜索 systemd 二进制程序， 并用作
\fIINIT\fR
程序， 同时"initrd"中 systemd 的状态将会传递给新的 systemd 进程， 从而允许在新系统中对原"initrd"中的各种服务状态进行内省。
.RE
.PP
\fBsuspend\fR
.RS 4
休眠到内存。 相当于启动
suspend\&.target
目标。
.RE
.PP
\fBhibernate\fR
.RS 4
休眠到硬盘。 相当于启动
hibernate\&.target
目标。
.RE
.PP
\fBhybrid\-sleep\fR
.RS 4
进入混合休眠模式。 也就是同时休眠到内存和硬盘。 相当于启动
hybrid\-sleep\&.target
目标。
.RE
.SS "参数语法"
.PP
单元命令的参数可能是一个单独的单元名称(\fINAME\fR)， 也可能是多个匹配模式(\fIPATTERN\fR\&.\&.\&.)。 对于第一种情况，如果省略单元名称的后缀，那么默认以
"\&.service"
为后缀， 除非那个命令只能用于某种特定类型的单元。例如
.sp
.if n \{\
.RS 4
.\}
.nf
# systemctl start sshd
.fi
.if n \{\
.RE
.\}
.sp
等价于
.sp
.if n \{\
.RS 4
.\}
.nf
# systemctl start sshd\&.service
.fi
.if n \{\
.RE
.\}
.sp
， 而
.sp
.if n \{\
.RS 4
.\}
.nf
# systemctl isolate default
.fi
.if n \{\
.RE
.\}
.sp
等价于
.sp
.if n \{\
.RS 4
.\}
.nf
# systemctl isolate default\&.target
.fi
.if n \{\
.RE
.\}
.sp
，因为 isolate 命令只能用于 \&.target 单元。 注意，设备文件路径(绝对路径)会自动转化为 device 单元名称，其他路径(绝对路径)会自动转化为 mount 单元名称。 例如，如下命令
.sp
.if n \{\
.RS 4
.\}
.nf
# systemctl status /dev/sda
# systemctl status /home
.fi
.if n \{\
.RE
.\}
.sp
分别等价于
.sp
.if n \{\
.RS 4
.\}
.nf
# systemctl status dev\-sda\&.device
# systemctl status home\&.mount
.fi
.if n \{\
.RE
.\}
.sp
对于第二种情况，可以在模式中使用shell风格的匹配符，对所有已加载单元的主名称(primary name)进行匹配。 如果没有使用匹配符并且省略了单元后缀，那么处理方式与第一种情况完全相同。 这就意味着：如果没有使用匹配符，那么该模式就等价于一个单独的单元名称(\fINAME\fR)，只表示一个明确的单元。 如果使用了匹配符，那么该模式就可以匹配任意数量的单元(包括零个)。
.PP
模式使用
\fBfnmatch\fR(3)
语法， 也就是可以使用shell风格的
"*",
"?",
"[]"
匹配符(详见
\fBglob\fR(7))。 模式将基于所有已加载单元的主名称(primary name)进行匹配， 如果某个模式未能匹配到任何单元，那么将会被悄无声息的忽略掉。 例如
.sp
.if n \{\
.RS 4
.\}
.nf
# systemctl stop sshd@*\&.service
.fi
.if n \{\
.RE
.\}
.sp
命令将会停止所有
sshd@\&.service
的实例单元。 注意，单元的别名(软连接)以及未被加载的单元，不在匹配范围内(也就是不作为匹配目标)。
.PP
对于单元文件命令，\fINAME\fR
参数必须是单元名称(完整的全称或省略了后缀的简称)或单元文件的绝对路径。 例如：
.sp
.if n \{\
.RS 4
.\}
.nf
# systemctl enable foo\&.service
.fi
.if n \{\
.RE
.\}
.sp
或
.sp
.if n \{\
.RS 4
.\}
.nf
# systemctl link /path/to/foo\&.service
.fi
.if n \{\
.RE
.\}
.sp
.SH "退出状态"
.PP
返回值为 0 表示成功， 非零返回值表示失败代码。
.SH "环境变量"
.PP
\fI$SYSTEMD_EDITOR\fR
.RS 4
编辑单元文件时所使用的编辑器，会覆盖
\fI$EDITOR\fR
与
\fI$VISUAL\fR
的值。 如果
\fI$SYSTEMD_EDITOR\fR,
\fI$EDITOR\fR,
\fI$VISUAL\fR
都不存在或无法使用， 那么将会依次尝试使用
\fBeditor\fR(1),
\fBnano\fR(1),
\fBvim\fR(1),
\fBvi\fR(1)
编辑器。
.RE
.PP
\fI$SYSTEMD_PAGER\fR
.RS 4
指定分页程序。仅在未指定
\fB\-\-no\-pager\fR
选项时有意义。 此变量会覆盖
\fI$PAGER\fR
的值。 将此变量设为空字符串或
"cat"
等价于使用
\fB\-\-no\-pager\fR
选项。
.RE
.PP
\fI$SYSTEMD_LESS\fR
.RS 4
用于覆盖 默认传递给
\fBless\fR
程序的命令行选项 ("FRSXMK")。
.RE
.SH "参见"
.PP
\fBsystemd\fR(1),
\fBjournalctl\fR(1),
\fBloginctl\fR(1),
\fBmachinectl\fR(1),
\fBsystemd.unit\fR(5),
\fBsystemd.resource-control\fR(5),
\fBsystemd.special\fR(7),
\fBwall\fR(1),
\fBsystemd.preset\fR(5),
\fBsystemd.generator\fR(7),
\fBglob\fR(7)
.SH "NOTES"
.IP " 1." 4
Preset
.RS 4
\%http://freedesktop.org/wiki/Software/systemd/Preset
.RE
.\" manpages-zh translator: 金步国
.\" manpages-zh comment: 金步国作品集：http://www.jinbuguo.com