-   `--vckeymap=`{.literal} - 指定应使用的 `VConsole`{.literal}
    键映射。有效名称与 `/usr/lib/kbd/keymaps/xkb/`{.literal}
    目录中的文件列表对应，无需 `.map.gz`{.literal} 扩展名。
-   `--xlayouts=`{.literal} - 指定 X
    布局列表，该列表应该作为用逗号分开的列表，没有空格。接受与
    `setxkbmap(1)`{.literal} 相同格式的值，可以是 `layout`{.literal}
    格式（如 `cz`{.literal}），或 `layout (variant)`{.literal}
    格式（比如 `cz (qwerty)`{.literal}）。
    可在 `xkeyboard-config(7)`{.literal} man page 的 `Layouts`{.literal}
    中查看所有可用布局。
-   `--switch=`{.literal} -
    指定布局切换选项列表（在多个键盘布局间切换的快捷方式）。必须使用逗号分开多个选项，没有空格。接受与相同格式的值
    `setxkbmap(1)`{.literal}。
    您可以在 `xkeyboard-config(7)`{.literal} man page 的
    `Options`{.literal} 部分查看可用的切换选项 。
:::
::: itemizedlist
**备注**
-   必须使用 `--vckeymap=`{.literal} 或 `--xlayouts=`{.literal} 选项。
:::
::: title
**示例**
:::
以下示例使用 `--xlayouts=`{.literal}
选项设置了两个键盘布局（`English (US)`{.literal} 和
`Czech (qwerty)`{.literal}）,并允许使用
[**Alt**]{.keycap}+[**Shift**]{.keycap} 在它们之间进行切换：
``` screen
keyboard --xlayouts=us,'cz (qwerty)' --switch=grp:alt_shift_toggle
```
:::
::: section
::: titlepage
## []{#kickstart-commands-and-options-reference_installing-rhel-as-an-experienced-user.html#lang-required_kickstart-commands-for-system-configuration}lang（必需） {.title}
:::
`lang`{.literal} Kickstart
命令是必需的。它设置了在安装过程中使用的语言以及系统的默认语言。
::: title
**语法**
:::
``` screen
lang language [--addsupport=language,...]
```
::: itemizedlist
**必填选项**
-   `language`{.literal} - 安装对此语言的支持，并将其设置为系统默认。
:::
::: itemizedlist
**可选选项**
-   `--addsupport=`{.literal} -
    添加对附加语言的支持。格式为使用逗号分开的列表，无空格。例如：
    ``` screen
    lang en_US --addsupport=cs_CZ,de_DE,en_UK
    ```
:::
::: itemizedlist
**备注**
-   `locale -a | grep _`{.literal} 或
    `localectl list-locales | grep _`{.literal} 命令返回支持的区域列表。
-   文本模式安装中不支持某些语言（比如中文、日语、韩文和印度的语言）。如果用
    `lang`{.literal}
    命令指定这些语言中的一种，安装过程仍然会使用英语，但安装的系统会默认使用您选择的语言。
:::
::: title
**示例**
:::
要将语言设置为英语，Kickstart 文件应包含以下行：
``` screen
lang en_US
```
:::
::: section
::: titlepage
## []{#kickstart-commands-and-options-reference_installing-rhel-as-an-experienced-user.html#module_kickstart-commands-for-system-configuration}module {.title}
:::
`module`{.literal} Kickstart 命令是可选的。使用这个命令在 kickstart
脚本中启用软件包模块流。
::: title
**语法**
:::
``` screen
module --name=NAME [--stream=STREAM]
```
::: itemizedlist
**必填选项**
-   `--name=`{.literal} - 指定要启用的模块名称。使用实际名称替换
    [*NAME*]{.emphasis}。
:::
::: itemizedlist
**可选选项**
-   `--stream=`{.literal} - 指定要启用的模块流的名称。将
    [*STREAM*]{.emphasis} 替换为实际名称。
    您不需要为定义的默认流的模块指定此选项。对于没有默认流的模块，这个选项是强制的，省略它将导致错误。无法多次启用带有不同流的模块。
:::
::: itemizedlist
**备注**
-   通过这个命令和 `%packages`{.literal}
    节的组合，您可以安装由启用的模块和流组合提供的软件包，而无需明确指定模块和流。安装软件包前必须启用模块。在使用
    `module`{.literal}
    命令启用一个模块后，您可以安装这个模块启用的软件包，方法是在
    `%packages`{.literal} 一节中列出它们。
-   单个 `module`{.literal}
    命令只能启用单个模块和流组合。要启用多个模块，使用多个
    `module`{.literal} 命令。无法多次启用带有不同流的模块。
-   在 Red Hat Enterprise Linux 8 中，只有 AppStream
    软件仓库提供模块。要列出可用的模块，使用安装的、带有有效订阅的 Red
    Hat Enterprise Linux 8 系统中的 `yum module list`{.literal} 命令。
:::
::: itemizedlist
**其它资源**
-   有关模块和流的详情，请参阅[安装、管理和删除用户空间组件文档](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/installing_managing_and_removing_user-space_components/index){.link}。
:::
:::
::: section
::: titlepage
## []{#kickstart-commands-and-options-reference_installing-rhel-as-an-experienced-user.html#repo_kickstart-commands-for-system-configuration}repo {.title}
:::
`repo`{.literal} Kickstart
命令是可选的。它配置了作为软件包安装来源的额外的 yum
仓库。您可以添加多个 `repo`{.literal} 行。
::: title
**语法**
:::
``` screen
repo --name=repoid [--baseurl=url|--mirrorlist=url|--metalink=url] [OPTIONS]
```
::: itemizedlist
**必填选项**
-   `--name=`{.literal} - 仓库
    ID。这个选项是必需的。如果库的名称与另一个之前添加的库冲突，则会忽略它。因为安装程序使用预设置程序库列表，这意味着您无法添加名称与预先设置的库的名称相同的库。
:::
::: title
**URL options**
:::
这些选项是互斥的，也是可选的。这里不支持 yum
库配置文件中可以使用的变量。您可以使用字符串 `$releasever`{.literal}
和`$basearch`{.literal}，它们由 URL 中的相应值替换。
::: itemizedlist
-   `--baseurl=`{.literal} - 仓库的 URL。
-   `--mirrorlist=`{.literal} - 指向该仓库镜像的 URL。
-   `--metalink=`{.literal} - 仓库的 metalink 的 URL。
:::
::: itemizedlist
**可选选项**
-   `--install`{.literal} - 将安装的系统中提供的库配置保存在
    `/etc/yum.repos.d/`{.literal} 目录中。如果不使用这个选项，在
    Kickstart
    文件中配置的程序库将只在安装过程中使用，而无法在安装的系统中使用。
-   `--cost=`{.literal} -
    为这个库分配一个成本的整数值。如果多个库提供同样的软件包，这个数字就会被用来决定优先使用哪个库。成本低的软件仓库优先于成本高的软件仓库。
-   `--excludepkgs=`{.literal} -
    逗号分开的软件包名称列表，它们是一定[*不能*]{.emphasis}从这个仓库中提取的软件包名称。如果多个存储库提供同样的软件包，您希望这个软件包来自特定的仓库，可以使用它。可接受完整软件包名称（比如
    `publican`{.literal}）和 globs（比如 `gnome-*`{.literal}）。
-   `--includepkgs=`{.literal} -
    用逗号分开的软件包名称列表，以及允许从该仓库中提取的
    glob。该程序仓库提供的其他软件包将被忽略。如果您只想从库中安装单个软件包或软件包组而不包括该程序库提供的所有其他软件包，这个选项就很有用了。
-   `--proxy=[protocol://][username[:password]@]host[:port]`{.literal} -
    指定仅用于这个仓库的 HTTP/HTTPS/FTP
    代理。这个设置不会影响任何其他软件仓库，也不会影响在 HTTP
    安装中是如何获取 `install.img`{.literal} 的。
-   `--noverifyssl`{.literal} - 连接到服务器时禁用 SSL 验证
    `HTTPS`{.literal}。
:::
::: itemizedlist
**备注**
-   用于安装的软件仓库必须是稳定版本。如果在安装完成前修改库，则安装会失败。
:::
:::
::: section
::: titlepage
## []{#kickstart-commands-and-options-reference_installing-rhel-as-an-experienced-user.html#rootpw-required_kickstart-commands-for-system-configuration}rootpw（必需） {.title}
:::
`rootpw`{.literal} Kickstart 命令是必需的。它将系统的根密码设置为
[*password*]{.emphasis} 参数的值。
::: title
**语法**
:::
``` screen
rootpw [--iscrypted|--plaintext] [--lock] password
```
::: itemizedlist
**必填选项**
-   [*password*]{.emphasis} -
    密码规格。纯文本或者加密字符串。请查看以下的 `--iscrypted`{.literal}
    和 `--plaintext`{.literal}。
:::
::: itemizedlist
**选项**
-   `--iscrypted`{.literal} - 如果有这个选项，则假设 password
    参数已被加密。这个选项与 `--plaintext`{.literal}
    相互排斥。要创建一个加密的密码，您可以使用 python:
    ``` screen
    $ python -c 'import crypt,getpass;pw=getpass.getpass();print(crypt.crypt(pw) if (pw==getpass.getpass("Confirm: ")) else exit())'
    ```
    这会使用随机 salt 为密码生成 sha512 兼容哈希。
-   `--plaintext`{.literal} - 如果给出这个选项，则假设 password
    参数为明文。这个选项与 `--iscrypted`{.literal} 相互排斥。
-   `--lock`{.literal} - 如果给出这个选项，则默认锁定 root
    帐户。这意味着 root 用户无法从控制台登录。此选项还将禁用 [**[Root
    Password]{.GUI}**]{.strong} 图形和文本手动安装中的屏幕。
:::
:::
::: section
::: titlepage
## []{#kickstart-commands-and-options-reference_installing-rhel-as-an-experienced-user.html#selinux_kickstart-commands-for-system-configuration}selinux {.title}
:::
`selinux`{.literal} Kickstart 命令是可选的。它在安装的系统中设定 SELinux
状态。默认 SELinux 策略是 `enforcing`{.literal}。
::: title
**语法**
:::
``` screen
selinux [--disabled|--enforcing|--permissive]
```
::: itemizedlist
**选项**
-   `--enforcing`{.literal} - 在默认目标策略中启用 SELinux
    `enforcing`{.literal}。
-   `--permissive`{.literal} - 根据 SELinux
    策略输出警告信息，但并不强制执行该策略。
-   `--disabled`{.literal} - 在系统中完全禁用 SELinux。
:::
::: title
**其它资源**
:::
有关 SELinux 的详情，请查看[使用 SElinux
文档](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/using_selinux/){.link}。
:::
::: section
::: titlepage
## []{#kickstart-commands-and-options-reference_installing-rhel-as-an-experienced-user.html#services_kickstart-commands-for-system-configuration}services {.title}
:::
`services`{.literal} Kickstart 命令是可选的。它修改在默认 systemd
目标下运行的默认服务集合。禁用的服务列表会在启用的服务列表前进行处理。因此，如果服务出现在这两个列表中，它将被启用。
::: title
**语法**
:::
``` screen