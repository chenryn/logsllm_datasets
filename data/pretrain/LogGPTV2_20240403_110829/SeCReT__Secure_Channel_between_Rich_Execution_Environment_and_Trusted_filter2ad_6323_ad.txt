# List of Pre-Authorized Applications

The session key must be handled securely, as simple operations can inadvertently create copies of the key. To assist developers in safely using the session key, we are designing SeCReT libraries. For example, a SeCReT library should avoid copying key values to unprotected memory during message signing. This is achieved by strictly using general-purpose registers that SeCReT can flush out during every mode switch.

## Alternative Design Considerations

An alternative design could bypass the use of keys and transfer data directly to the TEE using a secure buffer in the memory area protected by SeCReT. However, this approach faces several implementation challenges:
1. **Memory Requirements**: The secure buffer approach requires more protected memory pages, depending on the size of the messages being transferred to the TEE.
2. **Dynamic Memory Management**: The pages that SeCReT needs to protect can change dynamically during the application's runtime (e.g., location, size, and value of the data). This necessitates frequent interactions between the REE and the TEE to update the information appropriately.

## Securely Updating the List of Pre-Authorized Applications

To provide TEE services to newly developed applications, we must securely update the list of pre-authorized applications. We can leverage the mechanism used by TrustZone-based DRM solutions, which involves sending an encrypted list outside the device and decrypting it securely within TrustZone. Alternatively, the list can be updated as part of a firmware upgrade procedure, a method currently available for updating TEE resources on commercial devices.

## Related Work

### Active Monitoring

Active monitoring uses either trampoline code or hooks implanted in the monitored system to redirect control flow to the monitoring code. This ensures the event-driven nature and consistency of the monitoring. Hypervisors are commonly used for this purpose, as they provide isolation between guest VMs and can control and inspect these VMs due to their higher privilege level.

- **Lares [28]**: Implants trampoline code in a monitored VM and uses hypervisor-layer memory protection to prevent attacks on the trampolines.
- **SIM [33]**: Similar to Lares but focuses on efficiency by locating the monitoring code in an untrusted guest VM and minimizing hypervisor involvement.
- **SecVisor [32]**: A tiny hypervisor that protects kernel code using hardware-memory protection and hooks the kernel code to invoke SecVisor with a hypercall.
- **HookSafe [37]**: Relocates thousands of kernel hooks into continuous memory and protects them at the page granularity.

TrustZone has also been used for active monitoring. Systems like TIMA [14], [27], [30] and SPROBES [19] place the monitoring code in TrustZone and implant trampolines in the kernel code in the REE to enforce the integrity of the kernel's static region. SeCReT can be considered a form of active monitoring in TrustZone, as it implements trampolines and isolated access-control modules. However, its primary goal is to secure a communication channel, which differentiates it from other works. SeCReT assumes the kernel's static region is immutable due to the protection provided by active monitoring.

### Process-Data Protection

Several previous works aim to protect user processes from the untrusted kernel:
- **XOM [22]** and **XOMOS [23]**: Hardware-based approaches that use cryptographic technology to protect secure processes.
- **Overshadow [16]** and **InkTag [20]**: Implemented on hypervisors, these systems encrypt and decrypt the memory of user processes based on context switches.
- **Virtual Ghost [17]**: Uses compiler-based instrumentation to prevent untrusted kernels from accessing the protected memory area of the user process.

SeCReT, like these works, aims to protect critical components of the process, whether data or code. It interposes at every mode switch to secure a communication channel. Unlike other solutions, SeCReT leverages existing hardware (TrustZone) and does not require additional hardware or software stacks. TrustZone ensures the confidentiality of its contents, so SeCReT focuses on reinforcing access control to resources within TrustZone.

### Trusted-Execution Environment (TEE)

Hypervisors enable the TEE to be built by isolating individual guest VMs. Examples include systems that implement external monitors on separated VMs. Intel’s SMM, which suspends normal execution to run special software, is also considered a TEE. HyperCheck [36] and HyperSentry [15] use SMM to securely run monitoring code to check the integrity of the hypervisor. Intel’s SGX provides separated memory regions from the REE, protecting critical resources inside enclaves.

In addition to TIMA, Trusted Sensor [25] and Trusted Language Runtime (TLR) [31] also use TrustZone as a TEE. Trusted Sensor ensures mobile applications read sensors securely in TrustZone, while TLR runs critical parts of .NET mobile applications in TrustZone. These systems were implemented without considering a secure communication channel, and SeCReT can help reinforce their security.

## Conclusion

SeCReT is a framework that enhances the security of the communication channel between the REE and the TEE in TrustZone. It enables legitimate processes to use a session key in the REE, which is only readable when the process accesses the reserved memory. SeCReT interposes at every mode switch to verify code integrity and control flow, minimizing performance overhead by activating key-protection mechanisms only during the runtime of authorized processes. As the first work to secure a communication channel in TrustZone, SeCReT will regulate malicious access to critical resources and integrate with existing TrustZone-based security solutions like TIMA.

## Acknowledgment

We would like to thank our shepherd William Enck and the anonymous reviewers for their insightful comments and suggestions. This research was supported by MOTIE (The Ministry of Trade, Industry and Energy), Korea, under the BrainScouting-Program (HB609-12-3002) by the NIPA (National IT Promotion Agency). This work was also sponsored by the Agency for Defense Development (ADD) under Grant No. UD140002ED and the research project from SAMSUNG ELECTRONICS.

## References

[References listed here as in the original document]

---

This optimized version improves clarity, coherence, and professionalism, ensuring that the content is well-structured and easy to follow.