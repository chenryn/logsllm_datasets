文件的基本权限为
`666`{.literal}（`-rw-rw-rw-`{.literal}），它为所有人都授予读取和写入的权限。这意味着文件所有者、组和其它用户都可以读和编辑该文件。
::: example
[]{#assembly_managing-file-permissions_configuring-basic-system-settings.html#idm140217697587712}
**例 24.1. 文件的权限**
::: example-contents
如果文件有以下权限：
``` screen
$ ls -l
-rwxrw----. 1 sysadmins sysadmins 2 Mar 2 08:43 file
```
::: itemizedlist
-   `-`{.literal} 表示它是文件。
-   `rwx`{.literal} 表示文件所有者有读、写和执行文件的权限。
-   `rw-`{.literal} 表示组有读写权限，但不能执行文件。
-   `---`{.literal} 表示其他用户没有读、写或执行文件的权限。
-   `.`{.literal} 表示为该文件设定了 SELinux 安全上下文。
:::
:::
:::
::: example
[]{#assembly_managing-file-permissions_configuring-basic-system-settings.html#idm140217701602704}
**例 24.2. 目录的权限**
::: example-contents
如果一个目录有以下权限：
``` screen
$ ls -dl directory
drwxr-----. 1 sysadmins sysadmins 2 Mar 2 08:43 directory
```
::: itemizedlist
-   `d`{.literal} 表示它是一个目录。
-   `rwx`{.literal} 表示目录所有者有读、写和访问目录内容的权限。
    作为目录所有者，您可以列出目录中的项目（文件、子目录），访问这些项目的内容并进行修改。
-   `r--`{.literal} 表示组有读取权限，但没有写或者访问目录的内容。
    作为拥有该目录的组的成员，您可以列出目录中的项目。您无法访问目录中项目的信息或修改它们。
-   `---`{.literal} 表示其他用户没有权限读取、写入或者访问该目录的内容。
    作为不是用户拥有者或该目录的组所有者，您无法列出目录中的项目、访问这些项目的信息或修改它们。
-   `.`{.literal} 表示为该目录设定了 SELinux 安全性上下文。
:::
:::
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
自动分配给某个文件或者目录的基本权限[**不是**]{.strong}文件或目录最终的默认权限。当您创建文件或目录时，基本权限会被
[*umask*]{.emphasis} 更改。基本权限和 [*umask*]{.emphasis}
的组合会为文件和目录创建默认权限。
:::
:::
::: section
::: titlepage
# []{#assembly_managing-file-permissions_configuring-basic-system-settings.html#user-file-creation-mode-mask_assembly_managing-file-permissions}用户 file-creation mode mask {.title}
:::
用户 file-creation
模式掩码([*umask*]{.emphasis})是控制如何为新创建的文件和目录设置文件权限的变量。[*umask*]{.emphasis}
会自动从基本权限值中删除权限，以增加 linux
系统的整体安全性。[*umask*]{.emphasis} 可使用 [*symbolic*]{.emphasis} 或
[*octal*]{.emphasis} 值。
::: informaltable
  --------------------- --------------------- ---------------------
  [**权限**]{.strong}   [**符号**]{.strong}   [**数值**]{.strong}
  读、写和执行          rwx                   0
  读写                  rw-                   1
  读和执行              r-x                   2
  读                    r\--                  3
  写和执行              -wx                   4
  写                    -w-                   5
  执行                  \--x                  6
  无权限                \-\--                 7
  --------------------- --------------------- ---------------------
:::
标准用户的默认 [*umask*]{.emphasis} 是
`0002`{.literal}。`root`{.literal} 用户的默认 [*umask*]{.emphasis} 为
`0022`{.literal}。
[*umask*]{.emphasis} 的第一个数字代表特殊权限（sticky
位）。[*umask*]{.emphasis}
的最后三位数字分别代表从用户拥有者（[**u**]{.strong}）、组群所有者（[**g**]{.strong}）和其它（[**o**]{.strong}）中删除的权限。
::: example
[]{#assembly_managing-file-permissions_configuring-basic-system-settings.html#idm140217701224992}
**例 24.3. 在创建文件时应用 umask**
::: example-contents
下面的例子演示了，对一个基本权限为 `777`{.literal} 的文件应用值为
`0137`{.literal} 的 [*umask*]{.emphasis}，使在创建该文件时其默认权限变为
`640`{.literal}。
::: informalfigure
::: mediaobject
![用户组 Umask 示例](images/Users_Groups-Umask_Example.png)
:::
:::
:::
:::
:::
::: section
::: titlepage
# []{#assembly_managing-file-permissions_configuring-basic-system-settings.html#default-permissions_assembly_managing-file-permissions}默认文件权限 {.title}
:::
所有新创建的文件和目录会自动设置默认权限。默认权限的值通过将
[*umask*]{.emphasis} 应用到基本权限来确定。
::: example
[]{#assembly_managing-file-permissions_configuring-basic-system-settings.html#idm140217689672640}
**例 24.4. 标准用户创建的目录的默认权限**
::: example-contents
当[**标准用户**]{.strong}创建一个新[**目录**]{.strong}时，
[*umask*]{.emphasis} 被设置为
`002`{.literal}（`rwxrwxr-x`{.literal}），目录的基本权限被设置为
`777`{.literal}（`rwxrwxrwx`{.literal}）。这会使默认权限为
`775`{.literal} (`drwxrwxr-x`{.literal})。
::: informaltable
  ------------------------- --------------------- ---------------------
                            [**符号**]{.strong}   [**数值**]{.strong}
  [**基本权限**]{.strong}   rwxrwxrwx             777
  [**Umask**]{.strong}      rwxrwxr-x             002
  [**默认权限**]{.strong}   rwxrwxr-x             775
  ------------------------- --------------------- ---------------------
:::
:::
:::
这意味着目录所有者、组和其它可以列出目录的内容，并可以在该目录下（以及其子目录）中创建、删除和编辑项。其他用户只能列出该目录的内容并将其下移到其中。
::: example
[]{#assembly_managing-file-permissions_configuring-basic-system-settings.html#idm140217718167728}
**例 24.5. 标准用户创建的文件的默认权限**
::: example-contents
当[**标准用户**]{.strong}创建一个新[**文件**]{.strong}时，
[*umask*]{.emphasis} 被设置为
`002`{.literal}（`rwxrwxr-x`{.literal}），文件的基本权限被设置为
`666`{.literal}（`rw-rw-rw-`{.literal}）。这会使默认权限为
`664`{.literal} (`-rw-rw-r--`{.literal})。
::: informaltable
  ------------------------- --------------------- ---------------------
                            [**符号**]{.strong}   [**数值**]{.strong}
  [**基本权限**]{.strong}   rw-rw-rw-             666
  [**Umask**]{.strong}      rwxrwxr-x             002
  [**默认权限**]{.strong}   rw-rw-r\--            664
  ------------------------- --------------------- ---------------------
:::
这意味着，文件拥有者和组群可以读取和编辑该文件，而其他用户只能读取该文件。
:::
:::
::: example
[]{#assembly_managing-file-permissions_configuring-basic-system-settings.html#idm140217583387488}
**例 24.6. root 用户创建的目录的默认权限**
::: example-contents
当[**root 用户**]{.strong}创建一个新[**目录**]{.strong}时，
[*umask*]{.emphasis} 被设置为
`022`{.literal}（`rwxr-xr-x`{.literal}），目录的基本权限被设置为
`777`{.literal}（`rwxrwxrwx`{.literal}）。这会使默认权限为
`755`{.literal} (`rwxr-xr-x`{.literal})。
::: informaltable
  ------------------------- --------------------- ---------------------
                            [**符号**]{.strong}   [**数值**]{.strong}
  [**基本权限**]{.strong}   rwxrwxrwx             777
  [**Umask**]{.strong}      rwxr-xr-x             022
  [**默认权限**]{.strong}   rwxr-xr-x             755
  ------------------------- --------------------- ---------------------
:::
这意味着目录所有者可以列出目录的内容，并可以在该目录下（以及其子目录）中创建、删除和编辑项。这个组群和其它只能列出该目录的内容并将其下移。
:::
:::
::: example
[]{#assembly_managing-file-permissions_configuring-basic-system-settings.html#idm140217590865728}
**例 24.7. root 用户创建的文件的默认权限**
::: example-contents
当 [**root 用户**]{.strong}创建一个新[**文件**]{.strong}时，
[*umask*]{.emphasis} 被设置为
`022`{.literal}（`rwxr-xr-x`{.literal}），文件的基本权限被设置为
`666`{.literal}（`rw-rw-rw-`{.literal}）。这会使默认权限为
`644`{.literal} （`-rw-r-​r--`{.literal}）。
::: informaltable
  ------------------------- --------------------- ---------------------
                            [**符号**]{.strong}   [**数值**]{.strong}
  [**基本权限**]{.strong}   rw-rw-rw-             666
  [**Umask**]{.strong}      rwxr-xr-x             022
  [**默认权限**]{.strong}   rw-r---​r\--           644
  ------------------------- --------------------- ---------------------
:::
这意味着，文件所有者可以读取和编辑文件，而组和其它用户只能读取该文件。
:::
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
出于安全考虑，常规文件默认没有执行权限，即使 [*umask*]{.emphasis} 设为
`000`{.literal}（`rwxrwxrwx`{.literal}）。但是，创建的目录可以具有执行权限。
:::
:::
::: section
::: titlepage
# []{#assembly_managing-file-permissions_configuring-basic-system-settings.html#changing-file-permissions-using-symbolic-values_assembly_managing-file-permissions}使用符号值更改文件权限 {.title}
:::
您可以使用带有符号值（组合字母和符号）的 `chmod`{.literal}
实用程序来更改文件或目录的文件权限。
[]{#assembly_managing-file-permissions_configuring-basic-system-settings.html#permissions}
您可以分配以下[*权限*]{.emphasis} ：
::: itemizedlist
-   读([**r**]{.strong})
-   写入([**w**]{.strong})
-   执行([**x**]{.strong})
:::
[]{#assembly_managing-file-permissions_configuring-basic-system-settings.html#ownership}
可将权限分配给以下[*级别的所有权*]{.emphasis} ：
::: itemizedlist
-   用户所有者([**u**]{.strong})
-   组所有者([**g**]{.strong})
-   其他([**o**]{.strong})
-   All ([**a**]{.strong})
:::
[]{#assembly_managing-file-permissions_configuring-basic-system-settings.html#signs}
要添加或删除权限，您可以使用以下[*符号*]{.emphasis} ：
::: itemizedlist
-   `+`{.literal} 要在现有权限之上添加权限
-   `-`{.literal} 从现有权限中删除权限
-   `=`{.literal} 删除现有权限并明确定义新权限
:::
::: itemizedlist
**流程**
-   要更改文件或目录的权限，请使用：
    ``` screen
    $ chmod  file-name
    ```
    将 ``{.literal}
    替换为您要为其设置权限的[所有权级别](#assembly_managing-file-permissions_configuring-basic-system-settings.html#ownership){.link}。将
    ``{.literal}
    替换为其中一个[符号](#assembly_managing-file-permissions_configuring-basic-system-settings.html#signs){.link}。将
    ``{.literal}
    替换为您要分配的[权限](#assembly_managing-file-permissions_configuring-basic-system-settings.html#permissions){.link}。用文件或目录的名称替换
    [*file-name*]{.emphasis}。例如，若要向所有人授予读取、写入和执行(`rwx`{.literal})
    `my-script.sh`{.literal} 的权限，请使用
    `chmod a=rwx my-script.sh`{.literal} 命令。
    如需更多详细信息，请参阅[基本文件权限](#assembly_managing-file-permissions_configuring-basic-system-settings.html#base-permissions_assembly_managing-file-permissions "基本文件权限"){.link}。
:::
::: itemizedlist
**验证步骤**
-   要查看特定文件的权限，请使用：
    ``` screen
    $ ls -l file-name
    ```
    用文件名替换 [*file-name*]{.emphasis}。
-   要查看特定目录的权限，请使用：
    ``` screen
    $ ls -dl directory-name
    ```
    使用目录名替换 [*directory-name*]{.emphasis}。
-   要查看特定目录中所有文件的权限，请使用：
    ``` screen
    $ ls -l directory-name
    ```
    使用目录名替换 [*directory-name*]{.emphasis}。
:::
::: example
[]{#assembly_managing-file-permissions_configuring-basic-system-settings.html#idm140217654932272}
**例 24.8. 更改文件和目录的权限**
::: example-contents
::: itemizedlist
-   要将 `my-file.txt`{.literal} 的文件权限从 `-rw-rw-r--`{.literal}
    改为 `-rw------`{.literal}，请使用：
    ::: orderedlist
    1.  显示 `my-file.txt`{.literal} 的当前权限：
        ``` screen
        $ ls -l my-file.txt
        -rw-rw-r--. 1 username username 0 Feb 24 17:56 my-file.txt
        ```
    2.  从组所有者(`g`{.literal})和其它权限(`o`{.literal})删除读取、写入和执行的权限(`rwx`{.literal})：
        ``` screen
        $ chmod go= my-file.txt
        ```
        请注意，任何在等号（`=`{.literal}）之后没有被指定的权限都会被自动禁止。
    3.  验证 `my-file.txt`{.literal} 的权限是否已正确设置：
        ``` screen
        $ ls -l my-file.txt
        -rw-------. 1 username username 0 Feb 24 17:56 my-file.txt
        ```
    :::
-   要将 `my-directory`{.literal} 的文件权限从 `drwxrwx---`{.literal}
    改为 `drwxrwxr-x`{.literal}，请使用：
    ::: orderedlist
    1.  显示 `my-directory`{.literal} 的当前权限：
        ``` screen
        $ ls -dl my-directory
        drwxrwx---. 2 username username 4096 Feb 24 18:12 my-directory
        ```
    2.  为所有用户添加读取和执行(`r-x`{.literal})访问权限（`一个`{.literal}）：
        ``` screen
        $ chmod o+rx my-directory
        ```
    3.  验证 `my-directory`{.literal} 及其内容的权限是否已正确设置：
        ``` screen
        $ ls -dl my-directory
        drwxrwxr-x. 2 username username 4096 Feb 24 18:12 my-directory
        ```
    :::
:::
:::
:::
:::
::: section
::: titlepage