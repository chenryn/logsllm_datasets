**授权使用限制**  
本内容仅供清华大学使用。下载自IEEE Xplore，时间为2021年3月20日05:38:03 UTC。受使用条款约束。

### 概述
超频作为一种提升性能的方法，在高性能计算爱好者中非常流行[6]。微处理器供应商甚至在他们的芯片组中引入了超频功能，例如AMD的Overdrive和高级时钟校准技术。电路只有在其最长延迟路径被输入激活时才会表现出最差情况下的延迟。然而，这些导致最差延迟的输入和工作条件很少见，这就为超频者提供了性能改进的空间[3]。问题在于，在超频速度下会发生定时错误，可能导致系统行为不可预测并丢失数据。激进但可靠的设计方法采用相关的定时错误检测和恢复机制来防止错误数据的使用[7]。文献[16]表明，通过适应当前指令集和环境条件，可以可靠地将工作频率提高到超过最差情况限制；许多系统可以在比最差情况频率高15-20%的超频状态下运行，而不会使错误率超过1%[17]。具有硬实时约束的安全关键系统需要广泛的故障覆盖，同时不能牺牲性能。我们认为，在纳米级设计空间中提供软错误容错的可靠执行能力对于高性能激进设计非常有意义。本文提出了一种新的设计方法，用于构建容错且可可靠超频的寄存器单元，以改善系统的性能和可靠性。

### 1.1 我们的贡献
本文解决了随机逻辑中的软错误问题，并开发了无需逻辑复制即可提供容错能力的解决方案。我们提出了两种具有低面积和性能开销的技术。我们的第一种技术SEM（Soft Error Mitigation）用软错误缓解寄存器单元替换电路中的寄存器元件。SEM允许系统在没有软错误检测电路开销的情况下运行。第二种技术STEM（Soft and Timing Error Mitigation）同时检测和纠正软错误和定时错误。STEM寄存器单元不仅具备与SEM单元相当的软错误缓解能力，还支持可靠的超频。我们的两种技术都采用了分布式和时间投票方案，实现原位错误检测和快速恢复。对于错误检测和纠正，我们的时序采样机制在三个不同的时间间隔内采样数据。在SEM和STEM技术中，我们都支持电路级推测。我们允许数据向前推测性移动，当发生错误时，我们会取消计算并重新计算。

### 寄存器单元设计
#### SEM寄存器单元
图1展示了SEM寄存器单元的门级实现。它由三个寄存器R1、R2和R3组成，分别由时钟信号CLK1、CLK2和CLK3驱动。数据在T1、T2和T3三个不同时间点采样并存储在寄存器R1、R2和R3中。严格的时序约束确保了有效的软错误缓解。
- **时序约束**：图1(b)显示了时钟信号与时序采样间隔之间的关系。时钟信号CLK1、CLK2和CLK3具有相同的频率，但它们之间存在相位偏移，具体由以下方程定义：
  - Φ1 = T2 - T1 ≥ TPW (1)
  - Φ2 = T3 - T2 ≥ TPW (2)
  - TCD ≥ Φ1 + Φ2 (3)
  - T ≥ TPD (4)

表1列出了可能的软错误场景及其对应的恢复机制。一旦数据被锁存在寄存器R1、R2和R3中，它们会被比较以产生ERROR和BENIGN信号。根据不同的错误情况，系统会采取相应的恢复措施。

#### STEM寄存器单元
STEM寄存器单元类似于SEM单元，但在错误检测和恢复机制上有显著不同，以满足同时进行软错误和定时错误缓解的需求。图2展示了STEM寄存器单元的门级实现。该单元通过比较寄存器R1和R2的内容来完成定时错误检测。如果发现不匹配，则寄存器R3会被屏蔽，其内容用于恢复系统状态。进一步的比较操作则用来检测R3中的软错误。

- **时序约束**：STEM单元必须满足以下方程：
  - Φ1 = T2 - T1 ≥ TPW (1)
  - Φ2 = T3 - T2 ≥ TPW (2)
  - TCD ≥ Φ1 + Φ2 (3)
  - T + φ1 ≥ TPD (5)

表2列出了所有可能的错误场景及其恢复机制。

### 结论
本文提出了一种新的设计方法，用于构建容错且可可靠超频的寄存器单元，以改善系统的性能和可靠性。实验结果表明，与传统的三模冗余（TMR）方案相比，STEM技术在提供接近100%故障覆盖率的同时，性能提高了55.93%。此外，SEM技术也实现了26.58%的性能提升。未来的工作将进一步优化本地时钟管理器（LCM），以支持更高效的动态超频。

---

**版权信息**  
© 2009 IEEE. 版权所有。