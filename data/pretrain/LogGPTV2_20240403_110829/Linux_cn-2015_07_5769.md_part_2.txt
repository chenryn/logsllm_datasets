（LCTT 译注：本篇访谈中提到多次印度，是因为访谈者是印度人。）
Linus：我不得不承认，我并没有与来自印度的任何人直接合作过，尽管我已经非常有意识地努力建立一个规模庞大的内核开发团队，这样我不用总是独自工作。
我相信大多数人的社交基本上是受限制的，只对很少的人十分了解（比如你最亲近的家人和朋友），我也努力构造这样一个开发模型来改变这种状况：通过一个‘开发者网络’，人们可以在此互动，可能是与一批你信任的人，而且那些人反过来与他们信任的一群人互动。
所以，我偶然会与上百个发给我一两个不确定的补丁的开发者联系。我试着去建立一些由我熟知的人组成的小团体，我认为那就是人们工作的方式，当然也是我喜欢工作的方式。
同时，坦白地说，我甚至不知道许多与我一起工作的人生活在哪里。地理位置成了十分次要的东西。所以我很确信与我工作最紧密的前10—15个人中，没有印度的，可能这话稍后传到公众耳里，然后被指出确实有一些人来自那里！
**Q：因为 Linux 的内核开发对你依赖如此严重，你如何计划组织或重组，让它在没有你的情况下继续发展，假设你决定花更多的时间在你自己的生活和家庭上面的话？**
Linus：现在 Linux 比我重要得多，为了今天这一步我已经工作了很长时间。是的，我仍然十分密切地参与其中，而且我对其有着想当大的日常影响，我最终会是这样一个人——在某种程度上，扮演着许多内核开发活跃者的中心；但是，我不会说 Linux “严重依赖”于我。
所以，如果我得了心脏病并且明天就死了（很高兴没这种可能：我显然在任何方面都很健康），人们肯定会注意到，但是有成千上万的人为内核工作，并且不止一两个人能够毫无困难地接替我的角色。
**Q：印度是软件工程师的主要产地之一，但是我们没有在 Linux 领域做太多贡献。你觉得为什么印度人没有积极参与Linux？如果我们鼓励印度人参与并为 Linux 做更大的贡献，你觉得如何？你会乐意用你个人作为榜样激励印度工程师吗？**
Linus：对我来说，这确实是一个不好回答的问题。参与开源取决于两方面的基础条件：信息流和文化（用你的话说是互联网和教育），我甚至不知道这其中哪个是最大的障碍。
在很多方面，至少在那些印度讲英语文化的地方，参与 Linux 和其他开源项目是相对容易的，如果仅仅是由于语言门槛的话。这当然比起亚洲的许多地方，甚至欧洲的一些地方要容易些。
当然，这只是一些人，并不等同于印度的大部分群体，而且我自己关于印度的情况也知道不多，甚至没法不太负责的猜测最好的途径是什么。我猜一个热情的本地用户社区会是最好的途径，而且我猜测你们已经拥有这样的社区了。
至于我的‘偶像’形象，我自己不以为然。我不是一个伟大的公众演讲者，而且我最近些年已经避免出游，因为被看做符号化的‘偶像’让我很不自在。我就是一个工程师而已，而且我仅仅是喜欢我做的事情，并与社会上其他人一起工作。
**Q：什么样的理由会让你考虑去访问印度？**
Linus：如前一个回答中提到，我十分讨厌公开演讲，所以我才想避免开会等等这些事。我更愿意某天去印度度个假，但是如果我这样做，我可能悄悄地干 — 出行之前不告诉任何人，仅仅作为一个游客去游览印度！（LCTT 译注：所以 Linus 不来中国的道理是同样的，除非在中国召开一次世界性的 LinuxCon。）
**Q：最近你好像在抨击 Subversion 与 CVS，质问他们的架构基础。现在你已经从 Subversion 和 CVS 社区那里得到回应，你是否改变了看法，还是说并没有被说服？**
Linus：因为我发现这个争论很有趣，所以我想做一个强硬的声明。换句话说，我确实‘喜欢’争论。并不是不经思考的，但是我确实想要让争论更热烈些，而不仅仅是完全的柏拉图式的。
做出强硬的争论有时会引来一个非常合理的反驳，然后我会很高兴地说：“噢，好吧，你是对的。”
但是话说回来，对 SVN/CVS 并不会发生这种情况。我怀疑很多人并不是真的很喜欢 CVS，所以我真的不觉得会有谁坚持认为 CVS 就是一切，而不是一个老旧系统。要是我知道之前就有人这样认为的话，我就不会那么不礼貌地反对 SVN（嘿，这么说没错 — 我真的不是一个非常礼貌的家伙！），我不相信任何人会认为 SVN 是‘好的’。
我认为，SVN 就是一个‘还好’的经典案例。人们过去经常使用 SVN，并且它也‘还好’地广泛使用，但是它的‘还好’就如 DOS 与 Windows 的‘还好’一样。不是什么伟大的技术，只是普遍适用而已，同时它对人们来说运行良好，看着十分熟悉。但是很少有人以此为傲，或者对其感到兴奋。
Git，从另外方面讲，其身后有一些‘UNIX 哲学’，这和 UNIX 无关。实质上，就像原始的 UNIX，在它身后有一个基本理念。对 UNIX 来说，最底层的哲学就是，“所有东西只是一个文件”。对 Git 来说，“则是每个东西只是内容寻址数据库中的一个对象”。
**Q：现在如此多的发行是好事还是坏事？选择是很有意思的，但是选择太多了就是干扰。相较于这么多的人每天花费数小时去构建成百上千的发行版，如果人们可以一起来支持少数的发行版，这样在企业级市场去挑战微软是不是更容易些呢？对此你怎么看？**
Linus：我认为多个发行版是开源不可回避的部分。它会造成困惑吗？当然。它会变得低效率吗？是的。但是我喜欢拿它与政治比较：‘民主’也有那些令人困惑的选择，往往没有任何一个选择是你‘真正’想要的。而且有时候，如果你不需要操心选举、不同党派和联合等等方面的困惑的话，你可能会感觉事情更加容易一些，更有效率一些。
但是最后我想说，选择可能会导致低效率，但是它也让每个人至少保留了‘所谓的’诚信。我们可能都希望我们的政治家更诚信，我们也希望不同的发行版可以让我们有一天有其他的选择，而如果没有选择的话，事情可能会更糟。
**Q：为什么你觉得 CFS 比 SD 更好？**
Linus：一部分原因是我与 Ingo [Molnar] 工作过很长一段时间，也就是说，我了解他，并且知道他会对发生的任何问题非常负责。那种品质是非常重要的。
但是一部分原因就简单的与用户有关，大多数人实际上表示 CFS 比 SD 好。包括许多 3D 游戏方面（这是人们声称 SD 最强的一点）。
尽管如此，我认为并不是任何一段代码都十分‘完美’。最好的情况是，想成为 SD 支持者的人会努力提高 SD，从而通过其它方式取得了平衡 — 而我们会保持两个阵营都尝试有趣的事情，因为内部的竞争会刺激他们。
**Q：在 Google 的一次关于 Git 的访谈中，有人问你如何将当前集中存放的超大代码库迁移到 git 上，而不用将开发工作停止六个月。你对此的回答是什么？**
Linus：啊哈，那个问题我在现场没有听清楚（在录音里，问题会听得更清楚些），当我回头去听录制的音频，注意到了我没有回答他的问题，但是我觉得这问题他问过。
无论如何，我们确实有很多导入的工具，所以你实际上可以仅仅是将一个大的项目从任何其他的早期的 SCM （源代码控制系统）导入到 git 里，但问题显然不是经常以导入动作本身结束，而是需要‘习惯’这种新模式！
坦白来说，我认为关于如何‘习惯它’没有任何其他答案，而只能是去开始使用和尝试它。显然，你不会冒险率先导入你现有的最大、最重要的项目，那确实会导致工作停顿下来，然后使得每个人都很不高兴。
所以没有任何理智健全的人会拥护在一夜之间将一切移到 git 上去，并强迫人们改变他们的环境。是的，你需要从公司里的小项目开始，可能是一些由一个小组主要控制和维护的项目，然后开始转移其到 git。这是你能让人们习惯这种模式的方式，你应该以一个核心的组开始，他们知道 git 如何工作，如何在公司里面使用它。
接着，你就会铺展开来。并不需要一次到位。你会导入越来越多的项目 — 甚至是在你公司里采用‘单一大型仓库’模式；那个仓库基本上是作为许多模块的集合，因为让每个人去检查每件事不是一个可执行的工作模型（除非这个‘每件事’并不非常大）。
所以，你基本上只会一次转移一个模块，直到你发现使用 git 是如此酸爽，这时你可以移植余下的所有（或者‘余下’的太旧了，没有人用了）。
git 最赞的一个功能是，它实际上可以同很多其他 SCM 相处很好。很多 git 用户使用它的时候，与他们一起工作的人并没有发现，因为他们看到 git 的结果，会联想到一些传统的 SCM 上去。
**Q：Linux 用了你在 Transmeta（全美达）上实现备用指令集的经验吗？[Transmeta Crusoe 芯片看起来像一个非常轻量级的 CPU — 记得有一台 Burroughs B1000 解释器，它实际上实现了多个虚拟机。有的用于系统软件，有的用于 Cobol，还有的用于 Fortran；如果没错的话，那么人们可以在芯片上实现 Burroughs 6/7000 或者 HP3000 类似的堆栈架构，或适用于 JVM 的指令集，等等。（LCTT 译注：Linus 于 1997-2003 期间就职于全美达）]**
Linus：我们确实有一些备选的结构集合，不过我不打算谈论太多这个，我可以说的是我们已经做了一个混合结构集合的公开演示。我们有一个技术展示，在那里你同时可以跑 x86 指令和 Java 字节码（实际上，它是一个轻量的扩展 pico—java，iirc）。