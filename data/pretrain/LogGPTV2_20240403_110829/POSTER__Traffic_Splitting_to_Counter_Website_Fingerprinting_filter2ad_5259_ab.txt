### Circuit Establishment Times and Malicious Entry ORs

Current versions of Tor preemptively build three circuits [1]. This approach does not significantly increase the probability of selecting a malicious entry OR [4]. Additionally, using a variable number of entry ORs for different page loads further reduces classification accuracy (as seen in the "⟦2, 5⟧" columns). In this scenario, a single malicious entry OR faces the challenge of uncertainty due to the applied splitting strategy, making website-specific patterns less deterministic.

### Efficiency of Different Distributions

To determine the most suitable splitting method, we evaluated the efficiency of each strategy. Table 1 presents the accuracy (in %) of state-of-the-art WFP attacks in scenarios without defense and against our splitting strategies.

| Strategy          | Round Robin | Undefended | Random | m k-NN | CUMUL | k-FP | DF |
|-------------------|-------------|------------|--------|--------|-------|------|----|
| 1                 | 94.92       | 94.94      | 92.09  | 94.50  | -     | -    | -  |
| 2                 | 82.49       | 92.06      | 88.45  | 94.38  | -     | -    | -  |
| 3                 | 75.78       | 90.27      | 86.46  | 94.41  | -     | -    | -  |
| 4                 | 72.58       | 87.64      | 83.87  | 92.41  | -     | -    | -  |
| 5                 | 68.82       | 85.61      | 81.94  | 90.56  | -     | -    | -  |
| ⟦2, 5⟧            | 54.54       | 73.53      | 69.26  | 80.48  | -     | -    | -  |
| 2                 | 76.11       | 89.11      | 85.59  | 91.75  | -     | -    | -  |
| 3                 | 67.29       | 84.93      | 81.28  | 90.02  | -     | -    | -  |
| 4                 | 61.24       | 80.63      | 78.21  | 90.41  | -     | -    | -  |
| 5                 | 54.23       | 76.85      | 75.57  | 82.36  | -     | -    | -  |
| ⟦2, 5⟧            | 39.10       | 63.59      | 69.26  | 71.07  | -     | -    | -  |
| By Direction Out  | 26.59       | 29.41      | 31.23  | 25.61  | -     | -    | -  |
| By Direction In   | 51.55       | 60.11      | 18.00  | 25.25  | -     | -    | -  |
| Weighted Random 5 | 3.37        | 3.73       | 41.55  | 31.13  | -     | -    | -  |
| Weighted Random 3 | 3.69        | 34.83      | 35.66  | 34.66  | -     | -    | -  |
| Weighted Random ⟦2, 5⟧ | 3.31 | 35.77 | 34.23 | 34.41 | - | - | - |
| Weighted Random 2 | 4.83 | 51.59 | 45.65 | 46.09 | - | - | - |

### Analysis of Splitting Strategies

#### Round Robin and Random
We observed a gradual decrease in accuracy with the round robin strategy as the number of used entry ORs increased. The random strategy showed a similar trend but with a steeper decline. Despite this, the accuracies of CUMUL and DF remained relatively high, indicating that these methods can still correctly identify most page loads. One reason is that both strategies produce subtraces of similar size for different page load traces belonging to the same website when applied with a constant \( m \). Furthermore, round robin cannot completely hide the total size of a given website, which is a critical feature for WFP attacks [7], even when only a fraction of the page load is observed. Both round robin and random strategies introduce traffic diversity with a variable number of entry ORs, resulting in accuracy drops of more than 10%. However, this drop is insufficient for practical deployment.

#### By Direction
A simple scheme that splits traffic by direction significantly decreases the accuracy for all WFP attacks. Even though the number of transferred cells per direction remains unchanged, most classifiers only recognize a third of the page loads. This drop may be due to the classifiers' inability to retrieve information about the relationship between incoming and outgoing cells. Despite this, k-FP benefits from other features that use available information on timing and data rate per direction, contributing to a comparably high classification rate for this attack.

#### Weighted Random
Finally, applying a weighted random circuit selection results in a significant decrease in accuracy compared to other strategies. All evaluated WFP attacks achieve less than 35% accuracy. For the worst-performing classifier, k-NN, the rate of reliably-detectable page loads drops below 4%. This significant decrease is likely caused by the diversity in total size among the different subtraces of a single website. Notably, a variable number of entry ORs (column "⟦2, 5⟧") does not improve the defense, as the strategy already introduces sufficient diversity by design.

### Conclusion
We conclude that an effective splitting strategy should generate subtraces with highly diverse characteristics. 

### Bandwidth and Latency Overhead
Our defense operates without any dummy traffic, so it is unlikely to introduce significant overheads in bandwidth and time. However, our multipathing method [14] requires the integration of new types of Tor cells for circuit establishment and operation (sharing the chosen splitting strategy with the middle OR). Our defense may also require some extra time to build \( m \) circuits and to buffer and sort out-of-order cells. Based on previous analysis of multipath approaches [4], we believe these additions are acceptable, especially since they support a promising defense.

### Future Work
For future work, we plan to implement our defense, along with traffic splitting strategies, into Tor and evaluate its performance in real-world settings. We also aim to extend our experiments to an open-world setting and consider the integration of traffic padding to further reduce fingerprinting accuracies without introducing noticeable overhead. Finally, we need to evaluate our defense against adversaries who control multiple entry ORs.

### Acknowledgments
We would like to thank Daniel Forster for his input during his internship at the University of Luxembourg. Parts of this work have been funded by the Luxembourg National Research Fund (FNR) within the CORE Junior Track project PETIT.

### References
[1] 2019. Tor Protocol Specification. https://gitweb.torproject.org/torspec.git/tree/tor-spec.txt. (Accessed: August 2019).
[2] Xiang Cai et al. 2014. CS-BuFLO: A Congestion Sensitive Website Fingerprinting Defense. In WPES.
[3] Xiang Cai et al. 2014. A Systematic Approach to Developing and Evaluating Website Fingerprinting Defenses. In ACM CCS.
[4] Wladimir De la Cadena et al. 2019. Analysis of Multi-path Onion Routing-Based Anonymization Networks. In IFIP WG 11.3 DBSec.
[5] Kevin Dyer et al. 2012. Peek-a-Boo, I Still See You: Why Efficient Traffic Analysis Countermeasures Fail. In IEEE S&P.
[6] Ian Goldberg. 2019. Network-Based Website Fingerprinting. https://tools.ietf.org/html/draft-wood-privsec-wfattacks-00. (Accessed: August 2019).
[7] Jamie Hayes and George Danezis. 2016. k-fingerprinting: A Robust Scalable Website Fingerprinting Technique. In USENIX Security.
[8] Sébastien Christophe Henri. 2018. Improving Throughput, Latency and Privacy with Hybrid Networks and Multipath Routing. PhD Thesis.
[9] Jens Hiller et al. 2019. Tailoring Onion Routing to the Internet of Things: Security and Privacy in Untrusted Environments. In IEEE ICNP.
[10] Marc Juarez et al. 2016. Toward an Efficient Website Fingerprinting Defense. In ESORICS.
[11] Nick Mathewson. 2019. New Release: Tor 0.4.0.5. https://blog.torproject.org/new-release-tor-0405. (Accessed: August 2019).
[12] Andriy Panchenko et al. 2016. Website Fingerprinting at Internet Scale. In NDSS.
[13] Andriy Panchenko and Johannes Renner. 2009. Path Selection Metrics for Performance-Improved Onion Routing. In IEEE SAINT.
[14] Jan Pennekamp et al. 2019. Multipathing Traffic to Reduce Entry Node Exposure in Onion Routing. In IEEE ICNP.
[15] Payap Sirinam et al. 2018. Deep Fingerprinting: Undermining Website Fingerprinting Defenses with Deep Learning. In ACM CCS.
[16] Tao Wang et al. 2014. Effective Attacks and Provable Defenses for Website Fingerprinting. In USENIX Security.
[17] Tao Wang and Ian Goldberg. 2017. Walkie-Talkie: An Efficient Defense Against Passive Website Fingerprinting Attacks. In USENIX Security.