hi, guys, i wrote a Filter whice extends ActionFilter.Simple , and override
the method : apply(String action, ActionResponse response, ActionListener
listener). when i invoke method: client.prepareSearch, the apply method was
invoked twice whice is not i wanted, once is enough. is there sth i missed ?
here is my code :
public static class LoggingFilter extends ActionFilter.Simple {
        @Inject
        public LoggingFilter(Settings settings) {
            super(settings);
        }
        @Override
        public int order() {
            return 999;
        }
        @Override
        protected boolean apply(String action, ActionRequest request, ActionListener listener) {
            return true;
        }
        @Override
        protected boolean apply(String action, ActionResponse response, ActionListener listener) {
            if ("indices:data/read/search".equals(action)) {
                System.out.println("=========" + action + "======" + listener);
                System.out.println("=========" + response.hashCode() + "======" );
            }
            return true;
        }
    }
public class ActionInvokeModule extends AbstractModule implements
PreProcessModule {
        @Override
        protected void configure() {
            bind(LoggingFilter.class).asEagerSingleton();
        }
        @Override
        public void processModule(Module module) {
            if (module instanceof ActionModule) {
                ((ActionModule)module).registerFilter(LoggingFilter.class);
            }
        }
    }
public class ActionInvokePlugin extends AbstractPlugin {
    @Override
    public Collection> modules() {
        Collection> modules = new ArrayList>();
        modules.add(ActionLoggingModule.class);
        System.out.println("==========loaded log plugin");
        return modules;
    }
}
this is my client :  
@test  
public void testSimpleSearch() {  
SearchResponse response = client.prepareSearch("twitter2")  
.setTypes("tweet2")  
.setSearchType(SearchType.DFS_QUERY_THEN_FETCH)  
.setQuery(QueryBuilders.termQuery("user", "wangwu")) // Query  
.setFrom(0).setSize(60).setExplain(true)  
.execute()  
.actionGet();  
for (SearchHit hit : response.getHits().getHits()) {  
System.out.println("======" + hit.getSource());  
}
    }