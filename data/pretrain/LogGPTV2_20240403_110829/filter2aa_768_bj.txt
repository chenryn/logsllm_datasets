### 鸣叫代码及其含义

- **8 声鸣叫**：显卡不存在，或者显卡上的显存失败。
- **9 声鸣叫**：固件存储器中内容的校验和与固件中记录的不一样。
- **10 声鸣叫**：读写 CMOS 中的数据失败或者其内容有误。
- **11 声鸣叫**：高速缓存失败。

通常，可以在固件厂商的网站或产品手册中查找到蜂鸣代码的具体含义。例如：
- 英特尔主板/固件的蜂鸣代码含义可参考 [此处](http://www.intel.com/support/motherboards/desktop/sb/cs-010249.htm)。
- 其他常见固件的蜂鸣代码定义见 [这里](http://www.computerhope.com/beep.htm)。

关于 PC 喇叭，有两点需要注意：
1. 有些固件在完成基本启动动作后会发出一声鸣叫，这表示系统正常启动，并非错误提示。
2. 台式机的 PC 喇叭通常不受静音控制影响，而笔记本电脑的喇叭则受静音设置控制。因此，在诊断笔记本电脑时，应确保音量按钮已取消静音，以便听到蜂鸣代码。

### 通过嗅觉检测硬件故障

当显示器无法点亮时，可能是某些硬件损坏（如电容击穿或短路）。每次开机和调试时，可以用鼻子闻一闻是否有烧焦味。如果闻到烧焦味，应立即切断电源；若有其他事务需要离开，也应先断电。

### 在黑暗中交谈

在显示器被点亮前，系统通常不接收键盘和鼠标输入。此时，可以通过改变系统配置或更换部件，然后聆听蜂鸣代码或观察系统的反应来获取更多信息。例如，若故障系统长时间无显示且无声音，可以尝试拔下所有内存条并重新启动。若听到三声鸣叫，则说明系统已执行到内存检查阶段，初步证明 CPU 和主板功能正常。

### 接收自举码

类似于中医中的把脉，PC 系统设计了一种方法来“切”入目标系统以监听总线活动并接收数据。具体来说，将一种名为“上电自检卡 (POST Card)”的标准 PC 卡插入系统的扩展槽中。POST 程序在执行过程中会向 0x80 端口发送代表一定含义的 POST 代码。这些代码可通过上电自检卡读取并显示出来，帮助分析故障原因。

### 透视和跟踪

使用上述方法通常可以定位故障部件或粗略原因。对于需要精确分析的开发人员，可以使用硬件调试器（如基于 JTAG 技术的 ITP/XDP 调试器）进行单步跟踪、设置断点等操作。例如，将系统复位事件设为中断模式并重启后，CPU 会在复位后立刻中断到调试器中，从第一条指令开始跟踪调试。

### 归纳

本文介绍了几种特殊的调试任务，旨在展示 PC 系统设计者们在支持调试方面的智慧和职业精神。这些看似简单的机制（如蜂鸣代码和 POST 代码）能够提供来自系统一线的直接信息，从而提高调试效率。同时，希望增强读者对计算机硬件和整个系统的兴趣，这对于程序员的长远发展非常有益。

### 权利移交——如何调试引导过程中的故障

上一期讨论了如何调试显示器点亮前的故障。本期将探讨引导过程中的问题及调试方法。引导过程涉及寻找和加载操作系统（OS），最常见的情况是 OS 位于硬盘上，但也可能在光盘、优盘、软盘或网络上。

### BIOS 引导规约 (BBS)

考虑到引导过程涉及多个不同厂商的部件，英特尔、Phoenix 和康柏公司在 1996 年联合发布了 BIOS 引导规约 (BIOS Boot Specification, BBS)，定义了每个部件的职责和交互方法。尽管已过去十几年，但该规约的大部分内容仍被广泛使用。

### IPL 表格

BBS 将系统中可引导和加载 OS 的设备称为初始程序加载设备 (IPL 设备)。BIOS 在内存中维护一个 IPL 表格，每行描述一个 IPL 设备。表 1 列出了 IPL 表项的各个字段及其用途。

| 名称         | 偏移 | 长度（字节） | 描述                                                         |
|--------------|------|--------------|--------------------------------------------------------------|
| deviceType   | 00h  | 2            | 设备标号，参见下文                                           |
| statusFlags  | 02h  | 2            | 状态标志                                                     |
| bootHandler  | 04h  | 4            | 发起引导的代码地址                                           |
| descString   | 08h  | 4            | 指向一个以零结束的 ASC 字符串                                 |
| expansion    | 0ch  | 4            | 保留，等于 0                                                 |

其中，`deviceType` 字段记录引导设备编号，`statusFlags` 字段记录状态信息。通过编程，可以使用以下结构描述 IPL 表项：

```c
struct ipl_entry {
  uint16_t deviceType;
  uint16_t statusFlags;
  uint32_t bootHandler;
  uint32_t descString;
  uint32_t expansion;
};
```

### 引导设备分类

BBS 将引导设备分为以下几类：
- **BAID**：BIOS 已知的 IPL 设备，如第一个软驱、第一个硬盘、ATAPI 接口的光驱。
- **传统设备**：带有 Option ROM 但没有 PnP 扩展头的标准 ISA 设备。
- **PnP 设备**：符合 PnP BIOS 规约的即插即用设备。

由于传统设备已较少见，重点介绍 BAID 和 PnP 设备的引导方法。

### 从即插即用 (PnP) 设备引导

详细内容请参阅相关文档和技术资料。