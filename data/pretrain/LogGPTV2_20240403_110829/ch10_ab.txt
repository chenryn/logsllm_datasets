### 没有时间学习新技能
职业停滞往往源于缺乏参与增值项目的机会。对于组织而言，高水平的琐事会导致以下问题：
- 团队能力持续短缺
- 运维支持费用过高
- 无法在战略计划方面取得进展（即“每个人都很忙，但什么也没有完成”的现象）
- 无法留住顶尖人才（负面口碑导致顶尖人才流失）

### 琐事的危害
琐事的一个主要危险在于，它需要工程工作来消除。例如，手动、重复性的任务即使执行完毕，下一批任务依然会出现。减少琐事通常需要工程时间来构建自动化工具，以减少手动干预的需求或增强系统，从而降低干预频率。

具体来说，减少琐事所需的工程工作包括：
- 创建外部自动化（如服务外部的脚本和自动化工具）
- 创建内部自动化（如作为服务的一部分提供的自动化）
- 增强服务，使其无需频繁维护

琐事消耗了原本可用于防止未来辛劳的工程时间。如果不加以控制，琐事可能会在组织中累积到难以处理的程度。这类似于技术债务的概念，最终可能导致“工程破产”。

过度的琐事会消耗团队进行工程工作的能力，不仅无法提升业务，也无法减少未来的琐事。SRE（Site Reliability Engineering）模型依赖于具备足够工程能力的团队。如果琐事耗尽了这种能力，SRE 模型将无法启动或持续。永远被琐事缠身的 SRE 实际上只是传统 SysAdmin 的一个新头衔。

### 企业中的琐事
企业在琐事方面尤为突出。传统的运维管理理念要么对琐事视而不见（“每个人都看起来很忙，效率极高！”），要么漠不关心（“你为什么抱怨这些头痛？我发工资就是要让你动脑子。”）。此外，企业的复杂性也导致了大量琐事，并阻碍了减少这种复杂性的努力。

在本文中，“企业”指的是具有历史成功背景且积累了大量遗产（文化、组织、流程和技术）的公司。这类企业通常具有多个业务线，每个业务线都有独特的上下文和基本假设。从技术角度来看，多代平台和工具需要整合在一起，为客户提供服务。

在企业中，没有任何东西是孤立存在的。你的工作取决于别人，别人的工作也取决于你。在经典架构中，这些依赖关系是固定和明显的；而在现代架构中，这些依赖关系通常是动态和抽象的，但仍存在。激励、预算、政策、信仰和文化规范交织在企业的各个层面，使得消除琐事更具挑战性。

部分或完全由团队控制的琐事尤其危险。它推动团队接近“破产门槛”，在这个门槛上，琐事挤占了所有工程工作。这是反模式的一个常见原因：SysAdmin 团队被重新命名为 SRE 团队，但缺少必要的工程化来实现真正的转变。

### 孤岛、队列和工单
一旦确定过度的琐事会阻止企业转向 SRE 模型，就必须跨组织边界工作才能有效控制琐事。然而，跨组织边界工作是企业 IT 中的一大挑战，因为孤岛效应、请求队列和工单系统的存在。

#### 孤岛效应
孤岛效应最初由 Phil S. Ensor 在 1988 年提出，描述了 Goodyear 轮胎面临的组织挑战。孤岛并不是指特定的组织结构，而是指团队在与其他组脱节的情况下工作。当一个团队在与其他组不同的环境中工作，有不同的工作来源、激励或优先级时，几乎可以肯定该团队在孤岛中工作。这种情况会导致瓶颈、交接缓慢、沟通错误、工具不匹配、交付错误、过度的重复工作和冲突等问题。

#### 有问题的移交
孤岛之间的交接问题通常与不匹配有关：
- **信息不匹配**：双方处理的信息不同或角度不同，导致错误和重复工作。
- **流程不匹配**：双方遵循的程序或流程不同，产生对方没有预料到的结果。
- **工具不匹配**：使用不同的工具或未设置为无缝连接的工具，增加错误和重复工作。
- **容量不匹配**：请求量或速率超过发送请求的容量，导致瓶颈和延迟。

#### 工单驱动的请求队列成本高昂
数十年来，处理孤岛引起的交接问题的方法是通过请求队列（通常是工单系统）来管理交接。虽然表面上看似有序高效，但实际上请求队列是企业经济浪费的主要来源。Donald G. Reinertsen 列举了队列的负面影响，进一步证明了这一点。

通过上述分析，我们可以看到，减少琐事和打破孤岛是提高组织效率和实现 SRE 模型的关键步骤。