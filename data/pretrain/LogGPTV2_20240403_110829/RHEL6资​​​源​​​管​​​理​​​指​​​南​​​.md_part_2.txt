xmlns:d="http://docbook.org/ns/docbook"}和​​​某​​​些​​​属​​​性​​​（比​​​如​​​打​​​开​​​文​​​件​​​描​​​述​​​符​​​）。​​​
:::
### [⁠]{#ch01.html#bh-The_Cgroup_Model}Cgroup 模​​​式​​​
::: para
Cgroup 与​​​进​​​程​​​在​​​以​​​下​​​方​​​面​​​类​​​似​​​：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    它​​​们​​​是​​​分​​​级​​​的​​​，且​​​
    :::
-   ::: para
    子​​​ cgroup 会​​​继​​​承​​​父​​​ cgroup 的​​​某​​​些​​​属​​​性​​​。​​​
    :::
:::
::: para
根​​​本​​​的​​​不​​​同​​​是​​​在​​​某​​​个​​​系​​​统​​​中​​​可​​​同​​​时​​​存​​​在​​​不​​​同​​​的​​​分​​​级​​​ cgroup。​​​如​​​果​​​ Linux
进​​​程​​​模​​​式​​​是​​​进​​​程​​​的​​​单​​​一​​​树​​​模​​​式​​​，那​​​么​​​ cgroup
模​​​式​​​是​​​一​​​个​​​或​​​者​​​更​​​多​​​任​​​务​​​的​​​独​​​立​​​、​​​未​​​连​​​接​​​树​​​（例​​​如​​​：进​​​程​​​）。​​​
:::
::: para
需​​​要​​​多​​​个​​​独​​​立​​​ cgroup
分​​​级​​​，因​​​为​​​每​​​个​​​分​​​级​​​都​​​会​​​附​​​加​​​到​​​[*一​​​个​​​或​​​者​​​多​​​个​​​*]{.emphasis}*子​​​系​​​统​​​*中​​​。​​​子​​​系​​​统​​​
[⁠]{#ch01.html#footnote-subsystems_are_also_known_as_controllers}[^\[2\]^](#ch01.html#ftn.footnote-subsystems_are_also_known_as_controllers){.footnote
xmlns:d="http://docbook.org/ns/docbook"}代​​​表​​​单​​​一​​​资​​​源​​​，比​​​如​​​ CPU
时​​​间​​​或​​​者​​​内​​​存​​​。​​​Red Hat Enterprise Linux 6 提​​​供​​​ 9 个​​​ cgroup
子​​​系​​​统​​​，根​​​据​​​名​​​称​​​和​​​功​​​能​​​列​​​出​​​如​​​下​​​。​​​
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
[⁠]{#ch01.html#itemlist-Available_Subsystems_in_MAJOROS}
**Red Hat Enterprise Linux 中​​​的​​​可​​​用​​​子​​​系​​​统​​​**
-   ::: para
    `blkio`{.systemitem} \--
    这​​​个​​​子​​​系​​​统​​​为​​​块​​​设​​​备​​​设​​​定​​​输​​​入​​​/输​​​出​​​限​​​制​​​，比​​​如​​​物​​​理​​​设​​​备​​​（磁​​​盘​​​，固​​​态​​​硬​​​盘​​​，USB
    等​​​等​​​）。​​​
    :::
-   ::: para
    `cpu`{.systemitem} \-- 这​​​个​​​子​​​系​​​统​​​使​​​用​​​调​​​度​​​程​​​序​​​提​​​供​​​对​​​ CPU 的​​​ cgroup
    任​​​务​​​访​​​问​​​。​​​
    :::
-   ::: para
    `cpuacct`{.systemitem} \-- 这​​​个​​​子​​​系​​​统​​​自​​​动​​​生​​​成​​​ cgroup 中​​​任​​​务​​​所​​​使​​​用​​​的​​​
    CPU 报​​​告​​​。​​​
    :::
-   ::: para
    `cpuset`{.systemitem} \-- 这​​​个​​​子​​​系​​​统​​​为​​​ cgroup 中​​​的​​​任​​​务​​​分​​​配​​​独​​​立​​​
    CPU（在​​​多​​​核​​​系​​​统​​​）和​​​内​​​存​​​节​​​点​​​。​​​
    :::
-   ::: para
    `devices`{.systemitem} \-- 这​​​个​​​子​​​系​​​统​​​可​​​允​​​许​​​或​​​者​​​拒​​​绝​​​ cgroup
    中​​​的​​​任​​​务​​​访​​​问​​​设​​​备​​​。​​​
    :::
-   ::: para
    `freezer`{.systemitem} \-- 这​​​个​​​子​​​系​​​统​​​挂​​​起​​​或​​​者​​​恢​​​复​​​ cgroup 中​​​的​​​任​​​务​​​。​​​
    :::
-   ::: para
    `memory`{.systemitem} \-- 这​​​个​​​子​​​系​​​统​​​设​​​定​​​ cgroup
    中​​​任​​​务​​​使​​​用​​​的​​​内​​​存​​​限​​​制​​​，并​​​自​​​动​​​生​​​成​​​由​​​那​​​些​​​任​​​务​​​使​​​用​​​的​​​内​​​存​​​资​​​源​​​报​​​告​​​。​​​
    :::
-   ::: para
    `net_cls`{.systemitem} \--
    这​​​个​​​子​​​系​​​统​​​使​​​用​​​等​​​级​​​识​​​别​​​符​​​（classid）标​​​记​​​网​​​络​​​数​​​据​​​包​​​，可​​​允​​​许​​​ Linux
    流​​​量​​​控​​​制​​​程​​​序​​​（[**tc**]{.application}）识​​​别​​​从​​​具​​​体​​​ cgroup
    中​​​生​​​成​​​的​​​数​​​据​​​包​​​。​​​
    :::
-   ::: para
    `ns`{.systemitem} \-- *名​​​称​​​空​​​间​​​*子​​​系​​​统​​​。​​​
    :::
:::
::: {#ch01.html#note-Subsystems_are_also_known_as_resource_controllers .note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**子​​​系​​​统​​​也​​​称​​​为​​​资​​​源​​​控​​​制​​​器​​​**
:::
::: admonition
::: para
您​​​可​​​能​​​在​​​ cgroup 文​​​献​​​，比​​​如​​​ man page
或​​​者​​​内​​​核​​​文​​​档​​​中​​​看​​​到​​​术​​​语​​​*资​​​源​​​控​​​制​​​器​​​*或​​​者​​​*控​​​制​​​器​​​*。​​​这​​​两​​​个​​​词​​​与​​​
["[subsystem（子​​​系​​​统​​​）]{.quote}"]{.quote}的​​​含​​​义​​​相​​​同​​​，且​​​基​​​于​​​这​​​样​​​的​​​事​​​实​​​，即​​​子​​​系​​​统​​​通​​​常​​​调​​​度​​​资​​​源​​​或​​​者​​​在​​​其​​​所​​​附​​​属​​​层​​​级​​​的​​​
cgroup 中​​​应​​​用​​​限​​​制​​​。​​​
:::
::: para
子​​​系​​​统​​​（资​​​源​​​控​​​制​​​器​​​）的​​​定​​​义​​​非​​​常​​​普​​​通​​​：它​​​是​​​根​​​据​​​一​​​组​​​任​​​务​​​行​​​动​​​的​​​东​​​西​​​，例​​​如​​​进​​​程​​​。​​​
:::
:::
:::
:::
::: section
::: titlepage
# [⁠]{#ch01.html#sec-Relationships_Between_Subsystems_Hierarchies_Control_Groups_and_Tasks}1.2. 子​​​系​​​统​​​、​​​层​​​级​​​、​​​控​​​制​​​组​​​群​​​和​​​任​​​务​​​的​​​关​​​系​​​ {.title}
:::
::: para
请​​​记​​​住​​​ cgroup 术​​​语​​​中​​​系​​​统​​​进​​​程​​​称​​​为​​​任​​​务​​​。​​​
:::
::: para
这​​​里​​​有​​​一​​​些​​​简​​​单​​​的​​​规​​​则​​​管​​​理​​​子​​​系​​​统​​​、​​​cgroup
层​​​级​​​以​​​及​​​任​​​务​​​之​​​间​​​的​​​关​​​系​​​，并​​​给​​​出​​​那​​​些​​​规​​​则​​​的​​​合​​​理​​​结​​​果​​​。​​​
:::
::: para
[⁠]{#ch01.html#fpara-Rule_1}
::: {.title xmlns:d="http://docbook.org/ns/docbook"}
规​​​则​​​ 1
:::
任​​​何​​​单​​​一​​​子​​​系​​​统​​​（比​​​如​​​ `cpu`{.systemitem}）最​​​多​​​可​​​附​​​加​​​到​​​一​​​个​​​层​​​级​​​中​​​。​​​
:::
::: para
[*结​​​果​​​是​​​，`cpu`{.systemitem}
子​​​系​​​统​​​永​​​远​​​无​​​法​​​附​​​加​​​到​​​两​​​个​​​不​​​同​​​的​​​层​​​级​​​。​​​*]{.emphasis}
:::
::: para
[⁠]{#ch01.html#fpara-Rule_2}
::: {.title xmlns:d="http://docbook.org/ns/docbook"}
规​​​则​​​ 2
:::
单​​​一​​​层​​​级​​​可​​​附​​​加​​​一​​​个​​​或​​​者​​​多​​​个​​​子​​​系​​​统​​​。​​​
:::
::: para
[*结​​​果​​​是​​​，`cpu`{.systemitem} 和​​​ `memroy`{.systemitem}
子​​​系​​​统​​​（或​​​者​​​任​​​意​​​数​​​目​​​的​​​子​​​系​​​统​​​）都​​​可​​​附​​​加​​​到​​​单​​​一​​​层​​​级​​​中​​​，只​​​要​​​每​​​个​​​子​​​系​​​统​​​不​​​再​​​附​​​加​​​到​​​另​​​一​​​个​​​层​​​级​​​即​​​可​​​。​​​*]{.emphasis}
:::
::: para
[⁠]{#ch01.html#fpara-Rule_3}
::: {.title xmlns:d="http://docbook.org/ns/docbook"}
规​​​则​​​ 3
:::
每​​​次​​​在​​​系​​​统​​​中​​​创​​​建​​​新​​​层​​​级​​​时​​​，该​​​系​​​统​​​中​​​的​​​所​​​有​​​任​​​务​​​都​​​是​​​那​​​个​​​层​​​级​​​的​​​默​​​认​​​
cgroup（我​​​们​​​称​​​之​​​为​​​ *root
cgroup*）的​​​初​​​始​​​成​​​员​​​。​​​对​​​于​​​您​​​创​​​建​​​的​​​任​​​何​​​单​​​一​​​层​​​级​​​，该​​​系​​​统​​​中​​​的​​​每​​​个​​​任​​​务​​​都​​​可​​​以​​​是​​​那​​​个​​​层​​​级​​​中​​​[*唯​​​一​​​一​​​个​​​*]{.emphasis}
cgroup 的​​​成​​​员​​​。​​​单​​​一​​​任​​​务​​​可​​​以​​​是​​​在​​​多​​​个​​​ cgroup 中​​​，只​​​要​​​每​​​个​​​ cgroup
都​​​在​​​不​​​同​​​的​​​层​​​级​​​中​​​即​​​可​​​。​​​只​​​要​​​某​​​个​​​任​​​务​​​成​​​为​​​同​​​一​​​层​​​级​​​中​​​第​​​二​​​个​​​ cgroup
的​​​成​​​员​​​，就​​​会​​​将​​​其​​​从​​​那​​​个​​​层​​​级​​​的​​​第​​​一​​​个​​​ cgroup
中​​​删​​​除​​​。​​​一​​​个​​​任​​​务​​​永​​​远​​​不​​​会​​​同​​​时​​​位​​​于​​​同​​​一​​​层​​​级​​​的​​​不​​​同​​​ cgroup 中​​​。​​​
:::
::: para
[*结​​​果​​​是​​​，如​​​果​​​ `cpu`{.systemitem} 和​​​ `memory`{.systemitem}
子​​​系​​​统​​​都​​​附​​​加​​​到​​​名​​​为​​​ `cpu_and_mem`{.varname} 的​​​层​​​级​​​中​​​，且​​​
`net_cls`{.systemitem} 子​​​系​​​统​​​是​​​附​​​加​​​到​​​名​​​为​​​ `net`{.varname}
的​​​层​​​级​​​中​​​，那​​​么​​​运​​​行​​​的​​​ `httpd`{.systemitem} 进​​​程​​​可​​​以​​​是​​​
`cpu_and_mem`{.varname} 中​​​任​​​意​​​ cgroup 的​​​成​​​员​​​，同​​​时​​​也​​​是​​​ `net`{.varname}
中​​​任​​​意​​​ cgroup 的​​​成​​​员​​​。​​​*]{.emphasis}
:::
::: para
[*`httpd`{.systemitem} 进​​​程​​​所​​​在​​​ `cpu_and_mem`{.varname} 中​​​的​​​ cgroup
可​​​将​​​其​​​ CPU 时​​​间​​​限​​​制​​​为​​​分​​​配​​​给​​​其​​​它​​​进​​​程​​​时​​​间​​​的​​​一​​​半​​​，并​​​将​​​其​​​内​​​存​​​用​​​量​​​限​​​制​​​为​​​最​​​多​​​
`1024`{.constant} MB。​​​另​​​外​​​，`net`{.varname} 中​​​的​​​ cgroup
还​​​可​​​将​​​其​​​传​​​输​​​速​​​率​​​限​​​制​​​为​​​ `30`{.constant} MB/秒​​​。​​​*]{.emphasis}
:::
::: para
[*首​​​次​​​创​​​建​​​层​​​级​​​时​​​，该​​​系​​​统​​​中​​​的​​​每​​​个​​​任​​​务​​​都​​​至​​​少​​​是​​​一​​​个​​​ cgroup 的​​​成​​​员​​​，即​​​ root
cgroup。​​​因​​​此​​​每​​​当​​​使​​​用​​​ cgroup 时​​​，每​​​个​​​系​​​统​​​任​​​务​​​总​​​是​​​至​​​少​​​在​​​一​​​个​​​ cgroup
中​​​。​​​*]{.emphasis}
:::
::: para
[⁠]{#ch01.html#fpara-Rule_4}
::: {.title xmlns:d="http://docbook.org/ns/docbook"}
规​​​则​​​ 4
:::
该​​​系​​​统​​​中​​​的​​​任​​​意​​​进​​​程​​​（任​​​务​​​）都​​​将​​​自​​​己​​​分​​​支​​​创​​​建​​​子​​​进​​​程​​​（任​​​务​​​）。​​​该​​​子​​​任​​​务​​​自​​​动​​​成​​​为​​​其​​​父​​​进​​​程​​​所​​​在​​​
cgroup 的​​​成​​​员​​​。​​​然​​​后​​​可​​​根​​​据​​​需​​​要​​​将​​​该​​​子​​​任​​​务​​​移​​​动​​​到​​​不​​​同​​​的​​​ cgroup
中​​​，但​​​开​​​始​​​时​​​它​​​总​​​是​​​继​​​承​​​其​​​父​​​任​​​务​​​的​​​ cgroup（进​​​程​​​术​​​语​​​中​​​称​​​其​​​为​​​"​​​环​​​境​​​"​​​）。​​​
:::
::: para
[ *`cpu_and_mem`{.varname} 层​​​级​​​中​​​名​​​为​​​ `half_cpu_1gb_max`{.varname} 的​​​
cgroup 成​​​员​​​的​​​任​​​务​​​，以​​​及​​​ `net`{.varname} 层​​​级​​​中​​​ cgroup
`trans_rate_30`{.varname} 的​​​成​​​员​​​。​​​当​​​ `httpd`{.systemitem}
进​​​程​​​将​​​其​​​自​​​身​​​分​​​成​​​几​​​个​​​分​​​支​​​时​​​，其​​​子​​​进​​​程​​​会​​​自​​​动​​​成​​​为​​​
`half_cpu_1gb_max`{.varname} cgroup 和​​​ `trans_rate_30`{.varname} cgroup
的​​​成​​​员​​​。​​​它​​​会​​​完​​​全​​​继​​​承​​​其​​​父​​​任​​​务​​​所​​​属​​​的​​​同​​​一​​​ cgroup。​​​*]{.emphasis}
:::
::: para
[*此​​​后​​​，父​​​任​​​务​​​和​​​子​​​任​​​务​​​就​​​彼​​​此​​​完​​​全​​​独​​​立​​​：更​​​改​​​某​​​个​​​任​​​务​​​所​​​属​​​ cgroup
不​​​会​​​影​​​响​​​到​​​另​​​一​​​个​​​。​​​同​​​样​​​更​​​改​​​父​​​任​​​务​​​的​​​ cgroup
也​​​不​​​会​​​以​​​任​​​何​​​方​​​式​​​影​​​响​​​其​​​子​​​任​​​务​​​。​​​总​​​之​​​：所​​​有​​​子​​​任​​​务​​​总​​​是​​​可​​​继​​​承​​​其​​​父​​​任​​​务​​​的​​​同​​​一​​​