title:Shibboleth: Private Mailing List Manager
author:Matt Curtin
USENIX Association
Proceedings of the
9th USENIX Security Symposium
Denver, Colorado, USA
August 14 –17, 2000
THE ADVANCED COMPUTING SYSTEMS ASSOCIATION
© 2000 by The USENIX Association
Phone: 1 510 528 8649
FAX: 1 510 548 5738
All Rights Reserved
Email: PI:EMAIL
For more information about the USENIX Association:
WWW: http://www.usenix.org
Rights to individual papers remain with the author or the author's employer.
 Permission is granted for noncommercial reproduction of the work for educational or research purposes.
This copyright notice must be included in the reproduced paper. USENIX acknowledges all trademarks herein.
Shibboleth:
Private Mailing List Manager
Matt Curtin
Interhack Corporation
http://www.interhack.net/people/cmcurtin/
June 15, 2000
Abstract
We describe Shibboleth, a program to manage pri-
vate Internet mailing lists. Diﬀering from other
mailing list managers, Shibboleth manages lists or
groups of lists that are closed, or have member-
ship by invitation only. So instead of focusing on
automating the processes of subscribing and un-
subscribing readers, we include features like SMTP
forgery detection, prevention of outsiders’ ability
to harvest usable email addresses from mailing list
archives, and support for cryptographic strength
user authentication and nonrepudiation.
1 Introduction
Then Jephthah gathered together all the
men of Gilead, and fought with Ephraim:
and the men of Gilead smote Ephraim, be-
cause they said, Ye Gileadites are fugitives
of Ephraim among the Ephraimites, and
among the Manassites. And the Gilea-
dites took the passages of Jordan before
the Ephraimites:
and it was so, that
when those Ephraimites which were es-
caped said, Let me go over; that the men
of Gilead said unto him, Art thou an
Ephraimite? If he said, Nay; Then said
they unto him, Say now Shibboleth: and
he said Sibboleth: for he could not frame
to pronounce it right. Then they took
him, and slew him at the passages of Jor-
dan: and there fell at that time of the
Ephraimites forty and two thousand.
Judges 12:4–6, KJ
Shibboleth was conceived in early 1995 as a system
that would allow a group of people to communicate
freely with one another without concern about out-
siders being able to inﬁltrate the group or to address
the group by impersonating one of its members. At
the time, widely available mailing list software had
no means of eﬀectively addressing these security and
privacy requirements.
Since that time, the Internet has seen explosive
growth, which has unfortunately increased signiﬁ-
cantly the number of unscrupulous and greedy mar-
keteers among us online. These have devised many
avenues of ﬁnding people, arguably invading their
privacy “to market to them more eﬀectively”, and
engaging in abusive practices like spamming [16, 10].
On today’s Internet, it is diﬃcult to participate in
a forum of any type—even “private” ones—without
being exposed to the risk of making oneself known
to the outside world and having one’s address pub-
lished for all to see and to abuse.
Shibboleth has managed to avoid falling victim to
the abusive behavior that is sadly becoming increas-
ingly popular on the Internet today.
source code,
More information about the system,
its
http://www.interhack.net/projects/
shibboleth/.
including
is available on the Web at
1.1 Terminology
It will be easy to get lost in these interactions unless
we explicitly state exactly what we mean by the
these terms.
Family A group of mailing lists on the same ma-
chine, managed by the same installation of
Shibboleth.
List A speciﬁc mailing list.
Moderator Human who approves messages and
manages elements of a list. Each list can have
a single moderator or a set of moderators. A
moderator can be a moderator for several lists.
Administrator A human who deals with irregu-
larities, such indications of mail forgery and
digital signature failures. Additionally, admin-
istrators are responsible for the management of
the Shibboleth installation as a whole, including
such things as global conﬁguration options.
Hosts A group responsible for the operation of the
family of lists. Typically, this is the moderators
and administrators as a single group.
Outsider A network user who has no association
with the family of lists in the particular Shib-
boleth installation.
Insider A user who does have association with this
particular family of lists; someone with a proﬁle
in the members database.
Subscriber A particular type of insider: one who
is subscribed to a particular list.
Nym The name by which an insider is known.
This might be some construction of the insider’s
name (like “ﬁrst last”), or it could be a handle
by which he is known.
1.2 Diﬀerentiating Ourselves
It is important to note that Shibboleth is vastly dif-
ferent from most mailing list managers because most
are designed to take care of routine issues of sub-
scriptions; our software makes no attempt to auto-
mate this process to the same degree. Subscriptions
are by invitation only. That is, the hosts initiate
the subscription process by sending an invitation.
If the user accepts, a proﬁle is created, and he is
welcomed to the family of lists.
2 High-Level Design
Before construction began, we wrote about the sys-
tem’s design goals and requirements.
2.1 List Structure
Shibboleth thinks of lists in groups, which we call
families. If a group of security folks wants to work
together, it can do so by deﬁning a “family”, which
might be called “White Hats”. When we refer to a
White Hats member, we mean only that Shibboleth
has a proﬁle for that user in its member database.
That name is typically the basis of deciding what
preﬁx to use to reference the family of lists as a
whole. In this example, we’ll use “WH”.
Within each family are any number of lists that be-
long to that family. The only lists that Shibboleth
expects to ﬁnd by default are
• an “-all” list (which includes everyone in the
database) and
• a list for the list’s hosts, those responsible for
the operation of the lists.
There is nothing inherently special about either of
these lists. Any insider may submit a message to
the “-all” list; whether these require moderator ap-
proval or are allowed at all is purely a matter of
conﬁguration, as is true with any other list.
Any number of other lists can be created. Their
names consist of the preﬁx (“WH” in our example)
and its separator (“-” in our example) followed by
a keyword to identify the list. A WH list to dis-
cuss projects might be “wh-projects”, and another
to handle otherwise oﬀ-topic traﬃc might be “wh-
chat”.
Each list has its own privacy level. That is, some
lists can be available for anyone associated with that
list’s family. Others can require approval from a
moderator. Thus, if there’s a topic that would not
be open for all WH members, it can be discussed on
a list marked “private”. Members may only retrieve
archival postings from non-private lists, or private
lists to which they are currently subscribed.
In no case is mailing to a combination of insiders and
outsiders supported. Shibboleth will trigger an error
for such messages, requiring administrator approval.
2.2 Design Goals
High-level goals for the system include
Members-Only Access Only insiders can send
mail through the relay to any of the family’s
lists or other insiders.
Resistant to Forgery The system should be re-
sistant to SMTP [14] mail forgeries [19]. Some
basic header checking should be done. Addi-
tionally, the system should be able to verify and
to generate digital signatures in order to make
the possibility of convincing forgeries computa-
tionally infeasible.
Conﬁgurable Access Each member of the list
will have an “access level” associated with his
account. These are
Admin List owner; can do anything.
User Regular list member. Can read and post
messages without special restrictions.
Novice List member, but read-only. (Novices
may submit articles, but they must be ap-
proved by a moderator, irrespective of the
list’s conﬁguration.)
Timeliness Users should not have to wait “long
periods of time” for processing of their mail.
Minimal Overhead The administrative burden
must be reasonably manageable.
• Day-to-day tasks pursuant to the opera-
tion of the mailing list should be minimal.
It shouldn’t require a lot of time to man-
age a mailing list.
• Processing of the list should not be so ex-
pensive that it bogs down the machine
running the system.
• A simple-as-possible
conﬁguration ﬁle
should exist which would allow conﬁgu-
ration changes to be made easily, either
manually or by some mechanism in the
software itself.
should be gentle;
• Ease of use: the learning curve for users
• Archival of old messages;
• Digest creation: send digests to those who
want to receive only speciﬁed articles from
the archive;
• File server: a means for ﬁles of interest to
the user community to be sent via email.
2.3 System Requirements
Speciﬁc system requirements. Features of this sec-
tion indicate the feature must be part of the original
implementation. Features that can be added in a
subsequent version of the software are listed in the
next section.
2.3.1 Moderation
A list of moderators is assigned for each list man-
aged by the software. Every time a message requir-
ing moderator intervention is processed, one copy
of the message is sent to each address in the list of
moderators.
This design is suboptimal. We have found that it
can work in cases where there are few moderators
and they have some agreement whereby they can
decide who will process which messages. Neverthe-
less, this is relatively cumbersome, and would best
be replaced by a mechanism to allow a moderator
to fetch a number of messages in the queue, or to
inquire as to the number of messages in the queue.
Each list can be conﬁgured for one of several mod-
eration modes.
Unmoderated Moderate nothing: let all messages
pass;
Moderate new threads Require moderator ap-
proval for only the ﬁrst message in any thread;
Taboos Moderate messages having a header
matching a given pattern;
Usefulness The system needs to provide general
utility that would be expected from a mailing
list package, including
Unproven Require moderator approval, except for
messages whose authors have been “proven” us-
ing an authentication mechanism;
Fully Moderated Require moderator approval
for everything.
matches the user’s password in his proﬁle, SMTP
header errors are ignored.
“Taboos” is actually a special case: one can, for
example, employ both “moderate new threads” and
“taboos”. If any taboo patterns are speciﬁed, they’ll
be used. Any Subjects matching one of the taboo
patterns will trigger the moderation rule, irrespec-
tive of any other moderation conﬁgurations for that
list.
2.3.2 Sender veriﬁcation
Each member of the list has a list of patterns used
to identify his known addresses. When a message
arrives, the From header is compared to patterns in
the proﬁles in the database so that the user who
sent the message can be identiﬁed.
If a message comes from an unknown address, it can
be spooled for a moderator to approve or to reject
the message. Additionally, in order to prevent an
outsider who mailed an insider from getting the idea
that the address he used is valid, a “user unknown”
bounce message is sent.
As part of the veriﬁcation process, the Received
and Message-Id SMTP headers [6] are examined to
decrease the possibility of forging a message that ap-
pears to come from a known (legitimate) user. If a
forgery is suspected, the system spools the message
for an administrator to peruse. In practice, this rule
is most often triggered by administrative changes in
the user’s Internet Service Provider (ISP), such as
the addition of previously unknown mail relays, or
changes in the user’s behavior, such as the use of
a new ISP for IP connectivity without changes in
the user’s email address. (As an example, someone
might have an “address for life” from a university
and always use that. As far as anyone who sees only
From and Reply-To headers is concerned, there is no
change when such a person switches ISPs. However,
someone looking at Received headers will be able to
identify that mail is deﬁnitely coming from a diﬀer-
ent source when such a person changes ISPs.) The
administrator simply replies to mail Shibboleth sent,
updating the proﬁle to include the new relay, or a
new pattern that will cover the relay.
The optional X-Password ﬁeld is used as an addi-
tional means of convincing the system of the mes-
sage’s authenticity. Thus, if the X-Password’s value
Note that remote MTAs, like any other users, are
outsiders. That means that if Alice, an insider,
sends mail to Bob, another insider, via Shibboleth
and Bob’s MTA sends any kind of a message to Alice
(perhaps to report a delay in delivery, a bounce, or
some other error condition), Alice will never see the
bounce. Such a message would have a From header
like postmaster or mailer-daemon at Bob’s site,
which will not be in the members database. The
bounce message that Bob’s MTA tried to send will
therefore generate a “user unknown” error condi-
tion for the administrator’s attention and generate
a “user unknown” bounce. This prevents attacks
against the system where someone would be able to
send a message to a Shibboleth user by generating a
false bounce.
2.3.3 Address Standardization or Shadow-
ing
Each user should have a standardized address, in the
form of “preﬁx-nym”. Some might want their nyms
to be their ﬁrst and last name. Others might like
their nyms to be some sort of unique token. The pre-
ﬁx should make it clear that the intended target is a
Shibboleth user. A private installation called “white
hats” might have a preﬁx of “wh”, thus if Alice is a
member of “white hats”, her address to other “white
hats” members would be wh-alice@example.com.
This serves two purposes.
• Insiders can easily mail each other by knowing
only the ﬁrst and last names (or the nym) of
their addressee.
• All mail sent this way is subject to the same
defenses as mail sent to a list is. Hence, snoops
seeing mail in transit from the list to its recip-
ients will not be able to gather email addresses
(which might later be used to target for mail-
ings or for some other purpose unrelated to the
speciﬁc message from which it was harvested).
For this to work eﬀectively, it is necessary to
ensure that headers from the original message
are not passed through the system, especially
Received, Message-Id, X-*, and Reply-To.
It should be noted that mail from an insider to the
system can still be snooped. The eﬀects of gath-
ering addresses this way is far smaller than from
the system to the list members, simply because the
number of users aﬀected is much smaller. The only
eﬀective way to gather all of the addresses of the
system’s users is to snoop all of the incoming traf-
ﬁc, which can only be eﬀectively done on a point in
the network that the system will exclusively use for
its network connection.
2.3.4 Header Canonicalization
All mail from the system has a consistent From
header format, which easily identiﬁes the kind of
mail that’s been sent to the user by Shibboleth. For
example:
. . Alice mail from Alice to a Shibboleth mailing
list.
.ˆ. Alice Mail from Alice to you via Shibboleth.
.#. Alice Mail from Alice to the mailing list for
list managers.
.!. List Managers Mail from the List Managers
via the “-all” list (the broadcast channel).
This format makes it possible to score articles easily
in software in addition to identify visually why the
article was received. (“Scoring” is a method of hav-
ing the user agent mark messages, either as likely
to be of interest to the user or likely not to be of
interest. Scoring is described in various FAQs on
Usenet and Usenet client software [1, 11, 18].)
2.3.5 Archives
Insider-only retrieval of messages posted to a given
list. Further, although “public” lists—those avail-
able to any insider—will be retrievable by all insid-
ers, only subscribers of a private list can retrieve
messages from that list’s archive.