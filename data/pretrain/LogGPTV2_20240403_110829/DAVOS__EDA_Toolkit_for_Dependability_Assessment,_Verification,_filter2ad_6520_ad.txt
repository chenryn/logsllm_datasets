# Config.xml: Section for Implementation Scenarios
```xml
<weight value="0.10"/>
```
...

# Config.xml: Section for Derived Metrics
...
# Defines all derived metrics for dependability benchmarking and design space exploration
### DseMetrics.py

```python
def DeriveMTTF(injectionstat, implprop, custom_arg):
    frate = {}
    for cell, cell_stat in injectionstat.items():
        frate[cell] = 0.0
        for f in cell_stat['fault']:
            frate[cell] += (f['c_rate'] + f['s_rate']) / len(cell_stat['fault'])
    
    L = 0.0
    for cell, val in frate.items():
        L += custom_arg['k'] * custom_arg['fit.' + cell] * implprop[cell] * val
    
    return 1 / L
```

**Figure 7:** Excerpt from the configuration file defining custom metrics and their relative importance for considered scenarios. The figure displays the selected metrics and weights for the automotive and mobile scenarios.

**Table III:** Goodness of different implementation alternatives for the MC8051 microcontroller. Best results are highlighted in bold.

| Derived Metrics | WSM Score |
|-----------------|-----------|
| **Alternatives** |           |
| XST-Artix7      | 7.04      |
| XST-Kintex7     | 6.93      |
| XST-Virtex7     | 6.93      |
| Precision-Artix7| 9.44      |
| Precision-Kintex7| 9.06      |
| Precision-Virtex7| 9.11      |

1. Cost is relative to the cheapest (price per slice × slice utilization).
2. Power Consumption (W)
3. Fault Tolerance (FTHM) (%)
4. Mobile Suitability (A) (%)

**Figure 8:** Excerpt from a configuration file defining the considered parameters and their possible values.

The combination of the XST synthesizer and a mid-range FPGA (Kintex7) achieves the best results for the automotive domain, while the generic synthesizer (Precision RTL) with a low-end FPGA (Artix-7) scores the highest for the mobile scenario.

## V. DESIGN SPACE EXPLORATION (OPTIMIZATION)

This scenario involves hardware designers configuring the optimization flags of selected EDA tools and the architectural parameters of IP cores to achieve the best possible implementation. This process is illustrated by studying the optimal configuration of Xilinx’s XST synthesizer for implementing a PIC microcontroller [18] on a Virtex-6 FPGA for various application domains.

For DAVOS to generate the required design of experiments, it needs all the optimization parameters and their levels. This is done by customizing the `<optimization>` section of an XML configuration file. For each parameter, a new `<parameter>` subsection must be added, identifying the command-line option of the tool and the phase of the semi-custom design flow. Additional `<level>` subsections define the levels considered for the design of experiments (factor value attribute) and the actual value of this tool option (option value attribute). Figure 8 shows an excerpt from this configuration file for the XST synthesizer. For example, the `opt_mode` synthesis option can be set to either `Speed` or `Area`.

XST provides 31 different configuration parameters that can potentially impact PPAD properties, making a full factorial design infeasible within a reasonable time frame. DAVOS computes a fractional factorial design covering a statistically representative subset of the entire exploration space. In this case, only 128 out of \(2^{31}\) possible configurations were implemented, and their PPAD properties were estimated and stored in the database. This small but statistically representative set of samples is used to infer regression models that predict PPAD responses for any possible configuration of the considered parameters. The decision support module iterates through the entire design space using these models to determine the best possible configuration for each application domain. This module leverages GPGPU computation, when CUDA runtime is available, to speed up the process in large design spaces.

**Figure 9:** Web-based report displaying the best configurations for XST to implement a PIC microcontroller, and Pareto-optimal configurations for MTTF and clock frequency.

In addition to the best configuration for each application domain, the report also displays a Pareto-optimal graph highlighting non-dominated configurations (where improving one PPAD property negatively impacts another). As shown in Figure 9, there are two configurations that maximize MTTF or clock frequency at the expense of the other, while two other configurations find a trade-off between them. This Pareto-optimal graph is useful when no specific application domain is considered, and thus no weights have been defined for the selected criteria.

## VI. DISCUSSION

The considered scenarios illustrate how DAVOS supports dependability-driven analysis within the semi-custom design flow. However, several questions may arise about its applicability.

## VII. CONCLUSIONS

This paper presents DAVOS, a toolkit that seamlessly integrates into the common semi-custom design flow to support dependability-driven processes such as assessment, verification, optimization (DSE), and selection (benchmarking). Its flexible and modular architecture makes it compatible with standard HDLs, off-the-shelf EDA tools, and implementation technologies, enabling its extension to support other processes (even those not related to dependability). An interactive web-based interface provides custom query and visualization features to ease the analysis of obtained data.

Future work will focus on:
1. Extending the toolkit to be easily configurable through a web-based interface.
2. Defining novel fault models for different implementation technologies.
3. Complementing the fault injection module with FPGA-based fault emulation for speed-up purposes.
4. Improving the analysis and representation of data.

## REFERENCES

[1] H. Kaeslin, *Top-Down Digital VLSI Design: From Architectures to Gate-Level Circuits and FPGAs*, 1st ed. Morgan Kaufmann, 2014.

[2] W. Wolf, *Modern VLSI Design: IP-Based Design*, 4th ed. Prentice Hall, 2008.

[3] Z. Feng, "Logic Synthesis for FPGA Reliability," Ph.D. dissertation, University of California, Los Angeles, 2013.

[4] J. C. Ruiz, D. de Andrés, S. Blanc, and P. Gil, "Generic Design and Automatic Deployment of NMR Strategies on HW Cores," in *IEEE Pacific Rim Int. Symp. on Dependable Computing*, 2008, pp. 265–272.

[5] Z. Feng, N. Jing, and L. He, "IPF: In-Place X-Filling Algorithm for the Reliability of Modern FPGAs," *IEEE Transactions on Very Large Scale Integration (VLSI) Systems*, vol. 22, no. 10, pp. 2226–2229, 2014.

[6] K. Huang, Y. Hu, and X. Li, "Reliability-Oriented Placement and Routing Algorithm for SRAM-Based FPGAs," *IEEE Transactions on VLSI Systems*, vol. 22, no. 2, pp. 256–269, 2014.

[7] E. Jenn, J. Arlat, M. Rimen, J. Ohlsson, and J. Karlsson, "Fault injection into VHDL models: the MEFISTO tool," in *International Symposium on Fault-Tolerant Computing*. IEEE, 1994, pp. 66–75.

[8] C. R. Yount and D. P. Siewiorek, "A methodology for the rapid injection of transient hardware errors," *IEEE Transactions on Computers*, vol. 45, no. 8, pp. 881–891, 1996.

[9] V. Sieh, O. Tschache, and F. Balbach, "VERIFY: Evaluation of reliability using VHDL-models with embedded fault descriptions," in *International Symposium on Fault-Tolerant Computing*. IEEE, 1997, pp. 32–36.

[10] J. C. Baraza, J. Gracia, D. Gil, and P. Gil, "A prototype of a VHDL-based fault injection tool: description and application," *Journal of Systems Architecture*, vol. 47, no. 10, pp. 847–867, 2002.

[11] C. Robach and M. Scholive, *Simulation-Based Fault Injection and Testing Using the Mutation Technique*. Springer, 2003, pp. 195–215.

[12] I. Tuzov, D. de Andrés, and J.-C. Ruiz, "Dependability-aware Design Space Exploration for Optimal Synthesis Parameters Tuning," in *IEEE/IFIP Int. Conf. on Dependable Systems and Networks*, 2017, pp. 121–132.

[13] A. Ishizaka and P. Nemery, *Multi-criteria Decision Analysis: Methods and Software*. Wiley, 2013.

[14] Cobham Gaisler AB, "Leon3 processor product sheet," 2016. [Online]. Available: http://www.gaisler.com/doc/leon3_product_sheet.pdf

[15] Oregano Systems GmbH, "MC8051 IP Core, Synthesizeable VHDL Microcontroller IP-Core, User Guide (V 1.2), 2013," 2013. [Online]. Available: http://www.oreganosystems.at/download/mc8051_ug.pdf

[16] H. Quinn and P. Graham, "Terrestrial-based radiation upsets: a cautionary tale," in *IEEE Symposium on Field-Programmable Custom Computing Machines*, 2005, pp. 193–202.

[17] E. Triantaphyllou, "Multi-Criteria Decision Making Methods," in *Multi-criteria Decision Making Methods: A Comparative Study*, ser. Applied Optimization. Springer US, 2000, vol. 44, pp. 5–21.

[18] E. Romani, "Structural PIC165X microcontroller," Hamburg VHDL Archive, 1998. [Online]. Available: https://tams-www.informatik.uni-hamburg.de/vhdl

---

This optimized version improves clarity, coherence, and professionalism, ensuring that the text is well-structured and easy to follow.