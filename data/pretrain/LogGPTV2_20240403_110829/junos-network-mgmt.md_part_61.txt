### Table 67: Health Metrics (Continued)

| Metric Name | Description | Parameters | Value | Frequency (mins) | Allowable Range | Managed Objects |
|-------------|-------------|------------|-------|------------------|-----------------|-----------------|
| **Inbound Packet Discards** | Number of inbound packets discarded, even though no errors were detected. | MIB name: IF-MIB (RFC 2233)<br>Variable name: ifInDiscards<br>Variable OID: .1.3.6.1.2.1.2.2.1.13 | - | 60 | To be baselined | Logical interfaces |
| **Inbound Unknown Protocols** | Number of inbound packets discarded because they were of an unknown protocol. | MIB name: IF-MIB (RFC 2233)<br>Variable name: ifInUnknownProtos<br>Variable OID: .1.3.6.1.2.1.2.2.1.15 | - | 60 | To be baselined | Logical interfaces |
| **Interface Operational Status** | Operational status of an interface. | MIB name: IF-MIB (RFC 2233)<br>Variable name: ifOperStatus<br>Variable OID: .1.3.6.1.2.1.2.2.1.8 | 1 (up) | 15 | 1 (up) | Logical interfaces |
| **MPLS LSP State** | Operational state of an MPLS label-switched path. | MIB name: MPLS-MIB<br>Variable name: mplsLspState<br>Variable OID: mplsLspEntry.2 | 2 (up) | 60 | 2 (up) | All label-switched paths in the network |
| **Component Operating Status** | Operational status of a router hardware component. | MIB name: JUNIPER-MIB<br>Variable name: jnxOperatingState<br>Variable OID: .1.3.6.1.4.1.2636.1.13.1.6 | 2 (running) or 3 (ready) | 60 | 2 (running) or 3 (ready) | All components in each Juniper Networks router |
| **Component Operating Temperature** | Operational temperature of a hardware component, in Celsius. | MIB name: JUNIPER-MIB<br>Variable name: jnxOperatingTemp<br>Variable OID: .1.3.6.1.4.1.2636.1.13.1.7 | - | 60 | To be baselined | All components in a chassis |
| **System Uptime** | Time, in milliseconds, that the system has been operational. | MIB name: MIB-2 (RFC 1213)<br>Variable name: sysUpTime<br>Variable OID: .1.3.6.1.2.1.1.3 | - | 60 | Increasing only (decrement indicates a restart) | All routers |
| **No IP Route Errors** | Number of packets that could not be delivered because there was no IP route to their destination. | MIB name: MIB-2 (RFC 1213)<br>Variable name: ipOutNoRoutes<br>Variable OID: .1.3.6.1.2.1.4.12 | - | 60 | To be baselined | Each router |
| **SNMP Community Name Violations** | Number of incorrect SNMP community names received. | MIB name: MIB-2 (RFC 1213)<br>Variable name: snmpInBadCommunityNames<br>Variable OID: .1.3.6.1.2.1.11.4 | - | 24 | To be baselined | Each router |
| **SNMP Community Violations** | Number of valid SNMP communities used to attempt invalid operations (e.g., attempting to perform SNMP Set requests). | MIB name: MIB-2 (RFC 1213)<br>Variable name: snmpInBadCommunityUses<br>Variable OID: .1.3.6.1.2.1.11.5 | - | 24 | To be baselined | Each router |
| **Redundancy Switchover Count** | Total number of redundancy switchovers reported by this entity. | MIB name: JUNIPER-MIB<br>Variable name: jnxRedundancySwitchoverCount<br>Variable OID: jnxRedundancyEntry.8 | - | 60 | To be baselined | All Juniper Networks routers with redundant Routing Engines |
| **FRU State** | Operational status of each field-replaceable unit (FRU). | MIB name: JUNIPER-MIB<br>Variable name: jnxFruState<br>Variable OID: jnxFruEntry.8 | 2 through 6 for ready/online states. See jnxFruOfflineReason in the event of a FRU failure. | 15 | 2 through 6 for ready/online states. | All FRUs in all Juniper Networks routers. |
| **Rate of Tail-Dropped Packets** | Rate of tail-dropped packets per output queue, per forwarding class, per interface. | MIB name: JUNIPER-COS-MIB<br>Variable name: jnxCosIfqTailDropPktRate<br>Variable OID: jnxCosIfqStatsEntry.12 | - | 60 | To be baselined | For each forwarding class per interface in the provider network, when CoS is enabled. |
| **Interface Utilization: Octets Received** | Total number of octets received on the interface, including framing characters. | MIB name: IF-MIB<br>Variable name: ifInOctets<br>Variable OID: .1.3.6.1.2.1.2.2.1.10.x | - | 60 | To be baselined | All operational interfaces in the network |
| **Interface Utilization: Octets Transmitted** | Total number of octets transmitted out of the interface, including framing characters. | MIB name: IF-MIB<br>Variable name: ifOutOctets<br>Variable OID: .1.3.6.1.2.1.2.2.1.16.x | - | 60 | To be baselined | All operational interfaces in the network |

**Note:** Byte counts vary depending on interface type, encapsulation used, and PIC supported. For example, with `vlan-ccc` encapsulation on a 4xFE, GE, or GE 1Q PIC, the byte count includes framing and control word overhead. (See Table 68 on page 741.)

### Table 68: Counter Values for `vlan-ccc` Encapsulation

| PIC Type | Encapsulation | Input (Unit Level) | Output (Unit Level) | SNMP |
|----------|---------------|--------------------|---------------------|------|
| 4xFE     | vlan-ccc      | Frame (no FCS)     | Frame (including FCS and control word) | ifInOctets, ifOutOctets |
| GE       | vlan-ccc      | Frame (no FCS)     | Frame (including FCS and control word) | ifInOctets, ifOutOctets |
| GE 1Q    | vlan-ccc      | Frame (no FCS)     | Frame (including FCS and control word) | ifInOctets, ifOutOctets |

### Measure Performance

#### In This Section
- Measure Class of Service
- Inbound Firewall Filter Counters per Class
- Monitor Output Bytes per Queue
- Calculate Dropped Traffic

The performance of a service provider’s network is usually defined by how well it can support services, measured with metrics such as delay and utilization. We suggest monitoring the following performance metrics using applications like InfoVista Service Performance Management or Concord Network Health.

### Table 69: Performance Metrics

| Metric | Description | MIB Name | Variable Name | Variable OID | Frequency (mins) | Allowable Range | Managed Objects |
|--------|-------------|----------|---------------|--------------|------------------|-----------------|-----------------|
| **Average Delay** | Average round-trip time (in milliseconds) between two measurement points. | DISMAN-PING-MIB (RFC 2925) | pingResultsAverageRtt | pingResultsEntry.6 | 15 (or depending upon ping test frequency) | To be baselined | Each measured path in the network |
| **Interface Utilization** | Utilization percentage of a logical connection. | IF-MIB | (ifInOctets & ifOutOctets) * 8 / ifSpeed | ifTable entries | 60 | To be baselined | All operational interfaces in the network |
| **Disk Utilization** | Utilization of disk space within the Juniper Networks router. | HOST-RESOURCES-MIB (RFC 2790) | hrStorageSize – hrStorageUsed | hrStorageEntry.5 – hrStorageEntry.6 | 1440 | To be baselined | All Routing Engine hard disks |
| **Memory Utilization** | Utilization of memory on the Routing Engine and FPC. | JUNIPER-MIB (Juniper Networks enterprise Chassis MIB) | jnxOperatingHeap | Table for each component | 60 | To be baselined | All Juniper Networks routers |
| **CPU Load** | Average utilization over the past minute of a CPU. | JUNIPER-MIB (Juniper Networks enterprise Chassis MIB) | jnxOperatingCPU | Table for each component | 60 | To be baselined | All Juniper Networks routers |
| **LSP Utilization** | Utilization of the MPLS label-switched path. | MPLS-MIB | mplsPathBandwidth / (mplsLspOctets * 8) | mplsLspEntry.21 and mplsLspEntry.3 | 60 | To be baselined | All label-switched paths in the network |
| **Output Queue Size** | Size, in packets, of each output queue per forwarding class, per interface. | JUNIPER-COS-MIB | jnxCosIfqQedPkts | jnxCosIfqStatsEntry.3 | 60 | To be baselined | For each forwarding class per interface in the network, once CoS is enabled. |

### Measure Class of Service

You can use class-of-service (CoS) mechanisms to regulate how certain classes of packets are handled within your network during times of peak congestion. Typically, you must perform the following steps when implementing a CoS mechanism:

- **Identify the type of packets** that will be applied to this class. For example, include all customer traffic from a specific ingress edge interface within one class, or include all packets of a particular protocol such as voice over IP (VoIP).
- **Identify the required deterministic behavior** for each class. For example, if VoIP is important, give VoIP traffic the highest priority during times of network congestion. Conversely, you can downgrade the importance of web traffic during congestion, as it may not impact customers too much.

With this information, you can configure mechanisms at the network ingress to monitor, mark, and police traffic classes. Marked traffic can then be handled in a more deterministic way at egress interfaces, typically by applying different queuing mechanisms for each class during times of network congestion. You can collect information from the network to provide customers with reports showing how the network is behaving during times of congestion. (See Figure 29 on page 746.)

### Inbound Firewall Filter Counters per Class

Firewall filter counters are a flexible mechanism you can use to match and count inbound traffic per class, per interface. For example:

```plaintext
firewall {
    filter f1 {
        term t1 {
            from {
                dscp af11;
            }
            then {
                # Assured forwarding class 1 drop profile 1
                count inbound-af11;
                accept;
            }
        }
    }
}
```

For example, Table 70 shows additional filters used to match other classes.

### Table 70: Inbound Traffic Per Class

| DSCP Value | Firewall Match Condition | Description |
|------------|--------------------------|-------------|
| 10         | af11                     | Assured forwarding class 1 drop profile 1 |
| 12         | af12                     | Assured forwarding class 1 drop profile 2 |
| 18         | af21                     | Best effort class 2 drop profile 1 |
| 20         | af22                     | Best effort class 2 drop profile 2 |
| 26         | af31                     | Best effort class 3 drop profile 1 |

Any packet with a CoS DiffServ code point (DSCP) conforming to RFC 2474 can be counted in this way. The Juniper Networks enterprise-specific Firewall Filter MIB presents the counter information in the variables shown in Table 71.

### Table 71: Inbound Counters

| Indicator Name | MIB | Table | Index | Variables | Description | SNMP Version |
|----------------|-----|-------|-------|-----------|-------------|--------------|
| Inbound Counters | jnxFirewalls | jnxFirewallCounterTable | jnxFWFilter.jnxFWCounter | jnxFWCounterPacketCount, jnxFWCounterByteCount | Number of bytes being counted pertaining to the specified firewall filter counter | SNMPv2 |

This information can be collected by any SNMP management application that supports SNMPv2.