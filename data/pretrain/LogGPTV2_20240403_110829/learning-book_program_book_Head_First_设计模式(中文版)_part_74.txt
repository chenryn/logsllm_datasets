状态模式410
结构型模式591
策略模式24
632
索引
---
## Page 669
索引
模板方法模式289
定义264
使用29
介绍258
vs.框架29
Factory MethodPattern（工厂方法模式）134.参见
Vs.库29
Factory Pattern
访问者模式628~629
FactoryPattern（工厂模式）
DesignPrinciples（设计原则）参见（ObjectOriented
Abstract Factory（抽象工厂）
Design Principles面向对象设计原则）
与工厂方法158~159,160~161
Design Puzzle（设计迷题）25,133,279,395,468，
类图156~157
542
结合模式508
DesignToolbox（设计工具箱）32,74,105，162,186，
定义156
230,270,311,380,423,491,560,608
访谈158~159
DJ View 534
介绍153
domain specificpatterns（领域特定模式）604
FactoryMethod（工厂方法）
优点135
与抽象工厂160~161
Elvis（猫王）526
类图134
encapsulate what varies（封装变化）8~9.75,136,
定义134
397, 612
访谈158~159
encapsulatingalgorithms（封装算法）
286,289
介绍120，131~132
encapsulatingbehavior（封装行为）
11
再靠近一点125
encapsulating iteration（封装选代）323
SimpleFactory（简单工厂）
encapsulating methodinvocation（封装方法调用）
定义117
206
介绍114
encapsulating object construction（封装对象构造）
familyofalgorithms（算法家族）.参见
614~615
(Strategy Pattern
策略模式）
encapsulating objectcreation（封装对象创建）
114
136
familyofproducts（产品家族）145
encapsulatingrequests（封装请求）206
favorcompositionoverinheritance（多用组合，少用
继承）
23,75
encapsulating state（封装状态）399
fireside chat（围炉夜话）
62,247,252,308,418,472~
473
Five minute drama（五分钟短剧）48，478
FacadePattern（外观模式）
FlyweightPattern（蝇量模式）
618-619
优点260
forces（力）582
与最少知识原则269
Friedman, Dan 171
类图264
你现在的位置
633
---
## Page 670
G-P
IS-A（是一个）23
IteratorPattern（选代器模式）
Gamma, Erich 601
优点330
GangofFour（四人组）583,601
与集合347~349
Gamma, Erich 601
与组合模式368
Helm,Richard 601
与枚举338
Johnson, Ralph 601
与散列表343，348
Vlissides, John 601
类图337
global access point（全局访问点）177
代码帖350
gobble gobble（咯略叫）239
定义336
GoldenHammer（黄金榔头）607
习题327
guide to better living with Design Patterns（以设计模式
外部选代器338
改善生活的指南）578
for/in 349
GumballMachine Monitor（糖果机监视器）431
内部选代器338
介绍325
java.util.Iterator 332
1
HAS-A（有一个）23
空选代器372
Head Firstlearning principles（学习原则）
XXX
多态选代338
Helm,Richard 601
删除对象332
Hillside Group 603
Hollywood Principle，The（好莱坞原则）296
与依赖倒置原则298
Johnson, Ralph 601
HomeAutomation orBust,Inc.（巴斯特家电自动化公
司）192
V
Home SweetHomeTheater（甜蜜家庭影院）255
KISS（Keepit simple保持简单）594
Hot or Not 475
Law of Demeter.参见（Principle of LeastKnowledge
inheritance（继承）
最少知识原则）
缺点5
lazyinstantiation（延迟实例化）
177
为了复用5~6
loose coupling（松耦合）53
为了再利用93
interface（接口）12
InterpreterPattern（解释器模式）620~621
inversion（倒置）141~142
magic bullet（万灵丹）594
634
索引
---
## Page 671
索引
master and student（大师与f门徒）23，30，85.136，
好莱坞原则296
592, 596
一个类，一个责任185，336，339，367
MatchmakinginObjectville（在对象村配对）
475
开放一关闭原则86~87.407
MediatorPattern（中介者模式）622~623
最少知识原则265
MementoPattern（备忘录模式）624~625
针对接口编程，不针对实现编程11，243，335
middleman（中间人）237
让交互的对象之间尽量解耦53
MightyGumball,Inc.（万能糖果公司）386
Observable（可观察者）64.71
Model-View-Controller（模型一视图-控制器）
ObserverPattern（观察者模式）
与适配器模式546
类图52
与设计模式532
代码帖69
与Web549
结合模式516
组合模式532，559
办公室隔间对话55
介绍529
定义51~52
中介者模式559
围炉夜话62
观察者模式532
五分钟短剧48
待烘烤代码564~576
介绍44
歌526
在Swing中的用法72~73
策略模式532，545
Java支持64
再靠近一点530
拉63
Model2549参见（Model-View-Controller模型一视
推63
图-控制器）
one-to-manyrelationship（一对多的关系）51～52
与设计模式557~558
OOPSLA 603
MVC参见（Model-View-Controller模型一视图-控
Open-ClosedPrinciple（开放一关闭原则）
86~87
制器）
oreo饼干526
organizationalpatterns（组织模式）605
Null Object（空对象）214,372
part-wholehierarchy（部分一整体层次）
356.参见
Composite Pattern
ObjectvilleDiner（对象村餐厅）26,197,316,628
patternscatalog（模式类目）581，583，585
ObjectvillePancakeHouse（对象村煎饼屋）316,628
PatternsExposed（模式告白）
104,158,174,377
ObjectOrientedDesignPrinciples（面向对象设计原
378
则）9,30~31
patternsinthewild（荒野中的模式）2
299,488~489
依赖倒置原则139~143
pattermszoo（模式动物园）604
封装变化9.111
PatternHonorableMention（模式荣誉奖）
117,214
多用合成，少用继承23，243，397
Pizza shop（比萨店）112
你现在的位置
635
---
## Page 672
R-Y
Portland Patterns Repository 603
RMI
Principle of LeastKnowledge（最少知识原则）
265~
remote proxy（远程代理）434（参见ProxyPattern代
268
理模式）
缺点267
reuse（复用）
13,23,85
program toanimplementation（针对实现编程）
12,
RMI 436
17, 71
S
program to an interface（针对接口编程）12
program to an interface,not an implementation（对接
口编程，不针对现实编程）11，75
shared vocabulary（共享词汇）26～28,599～600
Prototype Pattern（原型模式）626~627
sharpenyour pencil（削尖你的铅笔）5,42,54,61,94，
97,99,124,137,148,176,183,205,225,242,268,
ProxyPattern（代理模式）
284,322,342,396,400,406,409,421,483,511,
与适配器模式471
518,520, 589
与装饰者模式471,472~473
SimpleFactory（简单工厂）117
缓存代理471
SimUDuck（模拟鸭子）2,500
类图461
SingletonPattern（单件模式）
定义460
优点170,184
动态代理474,479,486
与垃圾收集184
与 RMI 486
与全局变量185
习题482
与多线程180~182
围炉夜话472~473
类图177
java.lang.reflect.Proxy 474
定义177
保护代理474，477
缺点184
代理动物园488～489
双重检查加锁182
待烘烤代码494
访谈174
远程代理
434
再靠近一点173
变体471
SingleResponsibilityPrinciple（单一责任原则）
虚拟代理462
339.参见OODesign Principles:one class,one
responsibility（面向对象设计原则：
一个类，
影像代理464
个责任）
publisher/subscriber（出版者/订阅者）45
skeleton 440
StarbuzzCoffee（星巴兹咖啡）80,276
state machines（状态机）388~389
refactoring（重构）354.595
StatePattern（状态模式）
remote control（遥控器）193,209
与策略模式411,418~419
RemoteMethodInvocation（远程方法调用）参见
类图410
636
索引
---
## Page 673
索引
定义410
缺点 412,417
介绍398
undo（撤销）216,227
共享状态412
userinterfacedesignpatterns（用户界面设i计模式）
staticfactory（静态工厂）115
605
StrategyPatterm（策略模式）24
与状态模式411,418~419
与模板方法模式308～309
varies（改变）参见encapsulatewhatvaries（封装变
封装行为22
化）
算法家族22
VisitorPattern（访问者模式）628～629
围炉夜话308
Vlissides,John 601
stub 440
Weather-O-Rama（Weather-O-Rama气象站）38
Template MethodPattern（模板方法模式）
when not tousepatterns（何时不使用模式）596～
优点288
598
与 Applet 307
WhoDoes What？（连连看）202,254,298,379,422,
与 java.util.Arrays 300
487, 588
Whyaduck？（为何用鸭子？）500
与策略模式305，308~309
与 Swing 306
wrapping objects（包装对象）88,242,252.260，
473,508 参见 Adapter Pattern,Decorator Pattern,
与好莱坞原则297
Facade Pattern, Proxy Pattern
类图289
定义289
围炉夜话308~309
挂钩 292,295
yourmindonpattems（使用模式的心智）597
介绍286
再靠近-点290-291
TheLittleLisper（苏格拉底式的诱导问答）171
thinkingin patterns（用模式来思考）594~595
tightly coupled（紧耦合）53
你现在的位置
637
---
## Page 674
出版轶事
所有本书英文版内文排版都是由四位作者（EricFreeman、ElisabethFreeman、
KathySierra 和BertBates）设计的。Kathy和Bert原创HeadFirst系列的外观感觉。整本书由
Adobe的InDesignCS（简直不敢相信，这么酷的设计工具，我们还嫌不够）和Adobe的PhotoshopCS排
版产生。本书的字体集使用了UncleSkippy、MisterFrisky（你可能认为我们在开玩笑）、AnnSatellite、
Baskerville、Comic Sans、Myriad Pro、Skippy Sharp、Savoye LET、Jokerman LET、Courier New和
Wooddrow字体。
内文设计和制作都只在AppleMacintosh上进行。在HeadFirst，我们都是“想得不同”（ThinkDifferent）（译
注：苹果公司的宗旨）。所有Java代码都是使用JamesGosling最喜欢的IDE来创建的，尽管我们真地应该
试一试ErichGamma的Eclipse。
在长时间的写作过程中，众多事物给我们提供能量：HonestTea和Tejava（译注：都是饮料品牌）的咖啡
因，圣达菲清新的空气，Babco De Gaia、Cocteau Twins、Buddha Bar IVI、Delerium、Enigma、Mike
Oldfield、Olive、Orb、Orbital、LTJ Bukem、Massive Attack、Steve Roach、Sasha and Digweed、Thievvery
Corporation、Zero7和NeilFinn的音乐（译注：以上提到的都是一些乐队和歌手的名字。BancoDeGaia是著
名的电声乐队，CocteauTwins的许多歌被王菲翻唱.….…）。
---
## Page 675
HeadFirst
实验室
现在，最后来自HeadFirst实验室的话·...
我们世界级的优秀研究团队，正在疯狂的竞争中，发掘生命、宇宙和万物
之谜.…我们夜以继日地不停工作着，以免落于人后。
从未有过怀着如此高尚和远大目标的研究团队。目前，我致力于集合能量
和脑力，以创造出“终极学习机”。一旦完美地创立后，你和其他人将可
以加人我们的征途！
你很幸运能够拥有我们的第一个原型版本之一。但是，只有通过不断地精
炼才能达到我们的目标。我们诚挚地邀请你一技术的先锋用户：定期报
告你的进度到PI:EMAIL。
当你下次来对象村时，请顺道参观
我们实验室的幕后花絮。
---
## Page 676
万能糖果公司
没有你的帮助，我们的下一代，可能永远无法得知糖果机的乐趣。今
天、一些没有弹性、贫乏的设计代码，危险地充厅在我们用Java编程的机器
里。万能糖果公司不会让它发生。我们奉献自己协助你改进Java和OO设计的
技巧，好让你帮我们建立次世代的万能糖果机。
来吧，Jave烤面包机已经是那么…….久远（90年代）的事了，请到huup://www
mightygumball.com看看我们。（编注：这个网址不存在，千万别写
E-mail来质询。）
万能糖果公司
PDG
---
## Page 677
[GeneralInformation]
书名=HEADFIRST设计模式（中文版）
作者=ERICFREEMANELISABETHFREEMANKATHYSIE
NA改编
页数=640
出版社=北京市：中国电力出版社
出版日期=2007
SS号=11869494
DX号=000004938020
ORL=http://book.szdnet.org.cn/bookDetail.js
p?d xNumber=000004938020&d=CD98E3A4E06C50CF3
FA2E2507E2776FB
---