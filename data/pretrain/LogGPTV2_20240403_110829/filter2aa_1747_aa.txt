SECURITY PAPER
Preparation Date: 11 Dec 2016
Art of Anti Detection – 2
PE Backdoor Manufacturing
Prepared by:
Ege BALCI
Penetration Tester
ege.balciinvictuseurope.com
INVICTUS
2
Security Paper
TABLE OF CONTENT
1. Abstract:.....................................................................................................................................................3
2. Introduction.............................................................................................................................................. 3
3. Terminology..............................................................................................................................................3
4. Main Methods...........................................................................................................................................4
5. Available Space Problem.......................................................................................................................5
6. Hijacking Execution Flow....................................................................................................................10
7. Injecting Backdoor Code.....................................................................................................................14
8. Restoring Execution Flow.................................................................................................................. 17
9. Conclusion...............................................................................................................................................18
10. References:...........................................................................................................................................20
INVICTUS
3
Security Paper
1. Abstract:
This paper will explain several methods used for placing backdoors in PE(Portable
Executable) files for red team purposes, in order to fully grasp the content of this paper,
readers needs to have at least intermediate x86 assembly knowledge, familiarity with
debuggers and decent understanding of PE file format. This paper has been published on
pentest.blog at 08.12.2016 it is also prepared and shared as PDF for offline reading.
2. Introduction
Nowadays almost all security researchers, pentesters and malware analysts deals with
backdoors in a daily basis, placing a backdoor to a system or specifically to a program is
the most popular way for maintaining the access. Majority of this paper’s content will be
about methods for implanting backdoors to 32 bit PE files, but since the PE file format is
a modified version of Unix COFF(Common Object File Format) the logic behind the
methods can be implemented for all other executable binary file types. Also the
stealthiness of the implanted backdoor is very important for staying longer in the
systems, the methods that will be explained in this paper are prepared according to get
the lowest detection rate as possible. Before moving further in this paper reading the
first article Introduction To AV & Detection Techniques of Art Of Anti Detection article
series would be very helpful for understanding the inner workings of AV products and
fundamental thinks about anti detection.
3. Terminology
Red Team Pentesting:
When used in a hacking context, a red team is a group of white-hat hackers that attack
an organization's digital infrastructure as an attacker would in order to test the
organization's defenses (often known as "penetration testing").Companies including
Microsoft perform regular exercises under which both red and blue teams are utilized.
Benefits include challenges to preconceived notions and clarifying the problem state
that planners are attempting to mitigate. More accurate understanding can be
developed of how sensitive information is externalized and of exploitable patterns and
instances of bias.
Address Space Layout Randomization:
(ASLR) is a computer security technique involved in protection from buffer overflow
attacks. In order to prevent an attacker from reliably jumping to, for example, a
particular exploited function in memory, ASLR randomly arranges the address space
positions of key data areas of a process, including the base of the executable and the
positions of the stack, heap and libraries.
INVICTUS
4
Security Paper
Code Caves:
A code cave is a piece of code that is written to another process's memory by another
program. The code can be executed by creating a remote thread within the target
process. The Code cave of a code is often a reference to a section of the code’s script
functions that have capacity for the injection of custom instructions. For example, if a
script’s memory allows for 5 bytes and only 3 bytes are used, then the remaining 2 bytes
can be used to add external code to the script. This is what is referred to as a Code cave.
Checksum:
A checksum is a small-sized datum from a block of digital data for the purpose of
detecting errors which may have been introduced during its transmission or storage. It is
usually applied to an installation file after it is received from the download server. By
themselves, checksums are often used to verify data integrity but are not relied upon to
verify data authenticity.
4. Main Methods
All the implementations and examples in this paper will be over putty SSH client
executable. There are several reason for selecting putty for backdooring practice, one of
them is putty client is a native C++ project that uses multiple libraries and windows APIs,
another reason is backdooring a ssh client attracts less attention, because of program is
already performing tcp connection it will be easier to avoid blue team network
monitoring,
The backdoor code that will be used is Stephen Fever’s reverse tcp meterpreter
shellcode from metasploit project. The main goal is injecting the meterpreter shellcode
to target PE file without disrupting the actual functionality of the program. Injected
shellcode will execute on a new thread and will try to connect to the handler
continuously. While doing all these, another goal is keeping the detection score as low as
possible.
The common approach for implanting backdoors in PE files consists of 4 main steps,
1) Finding available space for backdoor code
2) Hijacking execution flow
3) Injecting backdoor code
4) Restoring execution flow
In each step there are small details which is the key for implanting consistent, durable
and undetectable backdoors.
INVICTUS
5
Security Paper
5. Available Space Problem
Finding available space is the first step that needs to be done, how you select the right
space inside PE file to insert backdoor code is very important, the detection score of
backdoored file highly depends on how you decide on solving the space problem.There is
two main approach for solving the space problem,
1) Adding A New Section:
This one has more drawbacks with detection score compared to the other approach but
with appending a whole new section there is no space limit for the backdoor code that
will be implanted.
With using a dis assembler or PE editor like LordPE, all PE files can be enlarged with
adding a new section header, here is the section table of putty executable, with the help
of PE editor, new section “NewSec” added with the size of 1000 bytes,
While creating a new section, setting the section flags
as “Read/Write/Execute” is vital
for running the backdoor shellcode when PE image mapped on the memory.
INVICTUS
6
Security Paper
after adding the section header the file size needs to be adjusted, this can be easily
achieved with adding null bytes with the size of the section at the end of the file on a
hex editor.
After these operations new empty section is successfully added to the file, running the
file after adding a new section is suggested in case of any errors, if the executable is
running smoothly the new section is ready to be modified on a debugger.
INVICTUS
7
Security Paper
Solving the space problem with adding a new section has few drawbacks on anti
detection score, almost all AV products recognizes uncommon sections and giving all
(Read/Write/Execute) permission to an uncommon section is surely very suspicious.
Even when adding a empty full permission section to putty executable, it gets flagged as
malicious by some AV products.
1) Code Caves:
Second approach for solving the space problem is using the code caves of the target
executable. Almost all compiled binary files have code caves that can be used when
backdooring operations. Using code caves instead of new added sections attracts far less
AV product because of using already existing common sections. Also overall size of the
PE file will not changed at the end of backdooring process but this method also has few
drawbacks.
The number and size of the code caves varies file to file but generally there is not so
much space compared to adding a new section. When using code caves, backdoor code
INVICTUS
8
Security Paper
should be trimmed as much as possible. Another drawback is the section flags. Since the
execution of the application will be redirected to the cave, the section which contains
the cave should have “execute” privileges, even some shellcodes (encoded or obfuscated
in a self modifying way) needs also “write” privileges in order to make changes inside the
section.
Usage of multiple code caves will help overcoming the space limitation problem also
splitting the backdoor code to pieces will have a positive affect on detection score but
unfortunately changing the section privileges will look suspicious. There are few
advanced methods that modifies the memory region privileges on runtime in order to
avoid changing the section privileges directly, but because of those methods requires
custom crafted shellcodes, encodes and IAT parsing techniques, it will be next articles
subject.
With the help of a tool called Cminer it is very easy to enumerate all code caves of a
binary file, ./Cminer putty.exe 300 command enumerates the code caves witch is bigger
than 300 bytes,
INVICTUS
9
Security Paper
In this case there are 5 good code caves that can be used. Start address gives the virtual
memory address(VMA) of the cave. This is the address of the cave when PE file loaded
into memory, file offset is the location address of cave inside the PE file in terms of
bytes.
INVICTUS
10
Security Paper
It seems most of the caves are inside data sections, because of data sections doesn’t
have execute privileges section flags, needs to be changed. Backdoor code will be
around 400-500 bytes so cave 5 should be more than enough. The start address of
selected cave should be saved, after changing the section privileges to R/W/E the first
step of backdooring process will be completed. Now it’s time to redirecting the
execution.
6. Hijacking Execution Flow
In this step, the goal is redirecting the execution flow to the backdoor code by modifying
a instruction from target executable. There is one important detail about selecting the