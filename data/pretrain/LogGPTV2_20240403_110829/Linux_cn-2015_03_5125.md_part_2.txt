我用过[1984.is](http://www.1984.is/)和[Linode](http://www.linode.com/)提供的虚拟私人主机（VPS），体验非常好。在本文中，我们将使用**Debian Wheezy**，这个在1984和Linode都提供了已经做好的映像文件可以直接布置到你的VPS上。我喜欢1984是因为它的服务器在冰岛，也是唯一使用可再生能源（地热和水力发电）的地方，目前还没有影响过气候变化，不像[大多数美国数据中心目前大多数依赖于烧煤的火力发电站](http://www.greenpeace.org/international/Global/international/publications/climate/2012/iCoal/HowCleanisYourCloud.pdf)。而且，他们注重[民权，透明，自由](http://www.1984.is/about/)以及[免费软件](http://www.fsf.org/)。
最好是在服务器上创建一个文件用来保存后面要用到的各种密码（用户账号、邮件账号、云帐号、数据库帐号）。当然最好是加密一下（可以用[GnuPG](https://www.gnupg.org/)），这样就算用来设定服务器的电脑被偷了或被入侵了，你的服务器就不会那么容易被攻击。
关于注册域名，我已经使用[grandi](http://www.gandi.net/)的服务超过10年了，也很满意。在本文中，我们将开辟一个叫**jhausse.net**的域名。然后在上面增加一个叫**cloud.jhausse.net**的二级域名，并绑定MX纪录。在完成之后，设置比较短的纪录生存时间（TTL）比如300秒，这样你在设置服务器的时候，可以修改你的域并很快测试到结果。
最后，设置PTR纪录（反向DNS），这样IP地址可以反向映射回它的域名。如果你不理解前面这句话，看下[这篇文章](http://www.codinghorror.com/blog/2010/04/so-youd-like-to-send-some-email-through-code.html)来获得相关背景知识。如果你使用Linode的服务，你可以在远程访问这一栏的控制面板里设置PTR纪录。如果是1984，联系一下技术支持来帮你搞定。
在服务器上，我们从添加一个普通用户开始，这样我们不用从头到尾一直用root账号。另外，用root登陆也需要额外多一层安全措施。
```
adduser roudy
```
然后，在文件**/etc/ssh/sshd\_config**中设置：
```
PermitRootLogin no
```
然后重启ssh服务：
```
service ssh reload
```
然后，我们要修改服务器的主机名。编辑文件**/etc/hostname**，只有一行就是自己的主机名，我们这个例子中是：
```
cloud
```
然后，编辑ssh服务的公钥文件**/etc/ssh/ssh\_host\_rsa\_key.pub, /etc/ssh/ssh\_host\_dsa\_key.pub, /etc/ssh/ssh\_host\_ecdsa\_key.pub**，这样文件末尾可以反映你的主机名，比如**root@cloud**。然后重启系统保证主机名在系统的每个需要它的角落都生效了。
```
reboot
```
我们将更新系统并移除不必要的服务以降低远程攻击的风险。
```
apt-get update
apt-get dist-upgrade
service exim4 stop
apt-get remove exim4 rpcbind
apt-get autoremove
apt-get install vim
```
我喜欢使用vim远程编辑配置文件。打开vim 的自动语法高亮会很有帮助。添加下面这一行到**~/.vimrc**文件中。
```
syn on
```
设置postfix和dovecot来收发电子邮件
------------------------
### postfix
```
apt-get install postfix postfix-mysql dovecot-core dovecot-imapd dovecot-mysql mysql-server dovecot-lmtpd postgrey
```
在[Postfix](http://www.postfix.org/)的配置菜单里，选择`Internet Site`，设置这个系统的邮件名称为**jhausse.net**。
现在开始添加一个数据库用于保存主机上管理的域名列表，和每个域名下的用户列表（同时也包括他们各自的密码），以及邮件别名列表（用于从一个地址往另一个地址转发邮件）。
```
mysqladmin -p create mailserver
mysql -p mailserver
mysql> GRANT SELECT ON mailserver.* TO 'mailuser'@'localhost' IDENTIFIED BY 'mailuserpass';
mysql> FLUSH PRIVILEGES;
mysql> CREATE TABLE `virtual_domains` (
  `id` int(11) NOT NULL auto_increment,
  `name` varchar(50) NOT NULL,
  PRIMARY KEY (`id`)
  ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
mysql> CREATE TABLE `virtual_users` (
  `id` int(11) NOT NULL auto_increment,
  `domain_id` int(11) NOT NULL,
  `password` varchar(106) NOT NULL,
  `email` varchar(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `email` (`email`),
  FOREIGN KEY (domain_id) REFERENCES virtual_domains(id) ON DELETE CASCADE
  ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
mysql> CREATE TABLE `virtual_aliases` (
  `id` int(11) NOT NULL auto_increment,
  `domain_id` int(11) NOT NULL,
  `source` varchar(100) NOT NULL,
  `destination` varchar(100) NOT NULL,
  PRIMARY KEY (`id`),
  FOREIGN KEY (domain_id) REFERENCES virtual_domains(id) ON DELETE CASCADE
  ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
```
这里我们为**jhausse.net**域名提供邮件服务。如果还需要加入其他域名，也没问题。我们也会为每个域名设置一个邮件管理地址（postmaster），转寄给**[PI:EMAIL](mailto:PI:EMAIL)**。
```
mysql> INSERT INTO virtual_domains (`name`) VALUES ('jhausse.net');
mysql> INSERT INTO virtual_domains (`name`) VALUES ('otherdomain.net');
mysql> INSERT INTO virtual_aliases (`domain_id`, `source`, `destination`) VALUES ('1', 'postmaster', 'PI:EMAIL');
mysql> INSERT INTO virtual_aliases (`domain_id`, `source`, `destination`) VALUES ('2', 'postmaster', 'PI:EMAIL');
```
现在已经添加了一个本地邮件账号**[PI:EMAIL](mailto:PI:EMAIL)**。首先，为它生成一个密码的哈希串：
```
doveadm pw -s SHA512-CRYPT
```
然后把哈希值加入到数据库中：
```
mysql> INSERT INTO `mailserver`.`virtual_users` (`domain_id`, `password`, `email`) VALUES ('1', '$6$YOURPASSWORDHASH', 'PI:EMAIL');
```
现在我们的域名、别名和用户列表都设置好了，然后开始设置postfix（这是一个SMTP服务器，用来发送邮件）。把文件**/etc/postfix/main.cf**替换为下面的内容：
```
myhostname = cloud.jhausse.net
myorigin = /etc/mailname
mydestination = localhost.localdomain, localhost
mynetworks_style = host
# We disable relaying in the general case
smtpd_recipient_restrictions = permit_mynetworks, reject_unauth_destination
# Requirements on servers that contact us: we verify the client is not a
# known spammer (reject_rbl_client) and use a graylist mechanism
# (postgrey) to help reducing spam (check_policy_service)
smtpd_client_restrictions = permit_mynetworks, reject_rbl_client zen.spamhaus.org, check_policy_service inet:127.0.0.1:10023
disable_vrfy_command = yes
inet_interfaces = all
smtpd_banner = $myhostname ESMTP $mail_name (Debian/GNU)
biff = no
append_dot_mydomain = no
readme_directory = no
# TLS parameters
smtpd_tls_cert_file=/etc/ssl/certs/cloud.crt
smtpd_tls_key_file=/etc/ssl/private/cloud.key
smtpd_use_tls=yes
smtpd_tls_auth_only = yes
smtp_tls_security_level=may
smtp_tls_loglevel = 1
smtpd_tls_loglevel = 1
smtpd_tls_received_header = yes
smtpd_tls_session_cache_database = btree:${data_directory}/smtpd_scache
smtp_tls_session_cache_database = btree:${data_directory}/smtp_scache
# Delivery
alias_maps = hash:/etc/aliases
alias_database = hash:/etc/aliases
message_size_limit = 50000000
recipient_delimiter = +
# The next lines are useful to set up a backup MX for myfriendsdomain.org
# relay_domains = myfriendsdomain.org
# relay_recipient_maps =
# Virtual domains
virtual_transport = lmtp:unix:private/dovecot-lmtp
virtual_mailbox_domains = mysql:/etc/postfix/mysql-virtual-mailbox-domains.cf
virtual_mailbox_maps = mysql:/etc/postfix/mysql-virtual-mailbox-maps.cf
virtual_alias_maps = mysql:/etc/postfix/mysql-virtual-alias-maps.cf
local_recipient_maps = $virtual_mailbox_maps
```
现在我们要让postfix知道如何从我们设定的数据库里找出需要接收邮件的域名。建立一个新文件**/etc/postfix/mysql-virtual-mailbox-domains.cf**并添加以下内容：
```
user = mailuser
password = mailuserpass
hosts = 127.0.0.1
dbname = mailserver
query = SELECT 1 FROM virtual_domains WHERE name='%s'
```
我们可以让postfix判断给定的电子邮件账号是否存在，创建文件**/etc/postfix/mysql-virtual-mailbox-maps.cf**并写入以下内容：
```
user = mailuser
password = mailuserpass
hosts = 127.0.0.1
dbname = mailserver
query = SELECT 1 FROM virtual_users WHERE email='%s'
```
最后，postfix会根据文件**/etc/postfix/mysql-virtual-alias-maps.cf**的内容来查找邮件别名
```
user = mailuser
password = mailuserpass
hosts = 127.0.0.1
dbname = mailserver
query = SELECT virtual_aliases.destination as destination FROM virtual_aliases, virtual_domains WHERE virtual_aliases.source='%u' AND virtual_aliases.domain_id = virtual_domains.id AND virtual_domains.name='%d'
```
在配置好这些后，现在要测试一下postfix是否能正常查询数据库。我们可以用**postmap**命令测试：
```
postmap -q jhausse.net mysql:/etc/postfix/mysql-virtual-mailbox-domains.cf
postmap -q PI:EMAIL mysql:/etc/postfix/mysql-virtual-mailbox-maps.cf
postmap -q PI:EMAIL mysql:/etc/postfix/mysql-virtual-alias-maps.cf
postmap -q PI:EMAIL mysql:/etc/postfix/mysql-virtual-alias-maps.cf
```
如果一切都正常配置了的话，头两个查询应该输出1，第3个查询应该输出**[PI:EMAIL](mailto:PI:EMAIL)**，而最后一个应该什么都不输出。
### dovecot
现在，让我们设置一下dovecot（一个IMAP服务程序，用来在我们的设备上从服务器获取收到的邮件）。编辑文件**/etc/dovecot/dovecot.conf**设置以下参数：
```
# Enable installed protocol
# !include_try /usr/share/dovecot/protocols.d/*.protocol 
protocols = imap lmtp
```
这样将只打开imap（让我们可以获取邮件）和lmtp（postfix用来将收件箱里的邮件转给dovecot）。编辑**/etc/dovecot/conf.d/10-mail.conf**并设置以下参数：
```
mail_location = maildir:/var/mail/%d/%n
[...]
mail_privileged_group = mail
[...]
first_valid_uid = 0
```
这样邮件将被保存到目录 /var/mail/domainname/username 下。注意下这几个选项散布在配置文件的不同位置，有时已经在那里写好了：我们只需要取消注释即可。文件里的其他设定选项，可以维持原样。在本文后面还有很多文件需要用同样的方式更新设置。在文件**/etc/dovecot/conf.d/10-auth.conf**里，设置以下参数：
```
disable_plaintext_auth = yes
auth_mechanisms = plain
#!include auth-system.conf.ext
!include auth-sql.conf.ext