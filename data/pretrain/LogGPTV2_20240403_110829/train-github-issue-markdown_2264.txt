When I stress-test PersistentVolume controller I sometimes get (correct)
"PersistentVolumeClaim deleted" event followed by (wrong)
"PersistentVolumeClaim added". This happens very rarely (<0.01%) when I delete
a PersistentVolumeClaim and the controller is under heavy load.
I use `framework.NewInformer` (link ) like everybody else. Reading its code,
what happens when the controller is processing 'PVC deleted' event at line
251, i.e just **before** `Delete()` is called and at the same time periodic
sync starts? The PVC that is being deleted is still in the cache and a 'PVC
Sync' will be added into `Queue` and my controller gets `OnDelete()` callback
followed by `OnAdd()`.
My PersistentVolume controller then sees an old claim and tries to do stuff
with it and sometimes it updates the claim in etcd. So the claim gets
'resurrected' in etcd even though user deleted it.
It is possible that my controller does something terribly wrong - I checked it
twice, but it's pretty complicated piece of code. I am 100% sure that
`OnAdd()` is called as reaction to `cache.Sync` event, I did a debug log in
`Process` function of Informer.