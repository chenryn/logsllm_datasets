however, of the encryption scheme ensures that the ciphertext
also reveals no information about m.
Concretely, Coconut uses Pedersen Commitments [42] for
the commitment scheme, which is secure under the discret
logarithm assumption. It uses El-Gamal for the encryption
scheme in G1, which is secure assuming DDH. Finally, it relies
on the blindness of the Pointcheval and Sanders signature,
which is secure assuming XDH [10]. As XDH implies both of
the previous two assumptions, our entire blindness argument
is implied by XDH.
c) Unlinkability / Zero-knowledge: Unlinkability and
zero-knowledge are guaranteed under
the XDH assump-
tion [10]. The zero-knowledge property of the underlying proof
system ensures that ProveCred does not on its own reveal
anything more than the validity of the statement φ(cid:48), which
may include public attributes (see Section III-E and Appendix
B). The fact that credentials are re-randomized at the start
of ProveCred in turn ensures unlinkability, both between
different executions of ProveCred and between an execution
of ProveCred and of IssueCred.
APPENDIX B
MULTI-ATTRIBUTES CREDENTIALS
We present the cryptographic primitives behind the multi-
attribute Coconut threshold issuance credential scheme de-
scribed in Section III-E. As in Section III-D, we describe below
a key generation algorithm TTPKeyGen as executed by a
trusted third party; this protocol can however be execute in a
distributed way as illustrated by Kate et al. [33].
O Setup(1λ, q) → (params): Choose
a bilinear group
(G1, G2, GT ) with order p, where p is an λ-bit prime
number. Let g1, h1, . . . , hq be generators of G1, and g2 a
generator of G2. The system parameters are params =
(G1, G2, GT , p, g1, g2, h1, . . . , hq).
O TTPKeyGen(params, t, n, q) → (sk, vk): Choose (q +
1) polynomials of degree (t − 1) with coefﬁcients in Fp,