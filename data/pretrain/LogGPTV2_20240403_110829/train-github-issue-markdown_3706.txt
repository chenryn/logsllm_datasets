## Bug Report
**Current Behavior**
if a normal `import` statetement is used before a `export * from 'somwhere'`
statement, the latter gets pushed to the top. This causes all code in
`'somwhere'` to be executed before the code from the import.
**Input Code**
    import 'first';
    export * from 'second';
becomes
    'use strict';
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _second = require('second');
    Object.keys(_second).forEach(function (key) {
      if (key === "default" || key === "__esModule") return;
      Object.defineProperty(exports, key, {
        enumerable: true,
        get: function get() {
          return _second[key];
        }
      });
    });
    require('first');
**Expected behavior/code**
I expect the second statement to happen second.
**Babel Configuration (.babelrc, package.json, cli command)**
'try it out' section on babeljs.io
**Possible Solution**
The generated `export *` code does look like it might be possible to just move
it at the right position. I think it is not allowed to export the same name
twice in es2015, so no name could be overridden in the `exports` object.
**Additional context/Screenshots**