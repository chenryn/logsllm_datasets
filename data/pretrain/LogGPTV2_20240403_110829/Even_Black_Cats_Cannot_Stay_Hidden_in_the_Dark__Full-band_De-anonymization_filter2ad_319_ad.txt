50
40
30
20
t
n
u
o
c
i
e
c
v
e
D
10
9
10
11
12
14
13
15
Time of day [hour]
16
17
18
19
Fig. 11: Number of unique car UAPs solved by our
system, averaged every 15 mins, over 5 days of activity.
be determined within tens of milliseconds if 20 or 10
channels are observed. Performance degrades rapidly
though, as with 2 channels the median solving time is
approximately 400 ms, while a single channel yields 1 s
median solving times. We further investigate the impact
of sniffed spectral width in the wild, in Sec. VII-D.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:42:21 UTC from IEEE Xplore.  Restrictions apply. 
543
22
20
18
16
14
12
10
8
]
r
u
o
h
[
y
a
d
f
o
e
m
T
i
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
Device #
17
18
19
20
21
22
23
24
25
26
27
28
29
30
Fig. 12: Commuting patterns for 30 of the recurring users detected over 5 days of capture. Symbols are shown in
alternate blue/red color to better discriminate different days of capture.
ECDF of 16 vs 4 channels detection gain
1
0.8
0.6
0.4
0.2
y
t
i
l
i
b
a
b
o
r
P
0
1
2
3
4
5
6
UAP count ratio
7
8
9
10
Fig. 13: Performance comparison between the 16-
channel and 4-channel sniffer in terms of number of
unique UAPs resolved in the wild. 60% of the time, at
least 3× more UAPs solved with 16-channel sniffer.
D. Surveillance Attacks
Up to this point, all experiments have been conducted
in controlled environments. In what follows we present
results in the wild (see Sec. VI-C), whereby we use our
system to demonstrate its surveillance capabilities.
With our snifﬁng and re-identiﬁcation system pointing
at a one-way road segment ahead of a trafﬁc junction,
we ﬁrst count the number of vehicles that have BT tech-
nology on board and which we can be de-anonymized by
an attacker during typical working hours (9 AM to 7:30
PM). We are able to detect cars up to a distance of 114.38
m, as conﬁrmed by measurements with a car we control.
We illustrate the statistics gathered in Fig.11, where we
plot the number average number of cars observed every
15 mins. On average we detect ∼200 devices every hour.
As expected, we note more intense trafﬁc around 9 AM,
12:30 PM and 6 PM – typical start/end of work shift and
lunch times.
We further examine the commuting patterns of the BT-
powered cars discovered. In particular, we record when
a de-anonymized device has been seen by our snifﬁng
system during each of the days when we collected mea-
surements. We report these results in Fig. 12, revealing
the serious privacy issues to which BT users are exposed.
Arguably, one may infer information about a user’s
personality, routine, and behavior from the observed
commuting patterns. For instance, we note the precise
commuting times of cars 1, 3, 16, 20, 26, and 27.
We further examine the implications of the number of
channels observed in the wild on the number of connec-
tions that can be detected. Speciﬁcally, we investigate
how many more BT connections could be detected and
de-anonymized when snifﬁng on 16 channels versus 4.
The obtained results are shown in Fig. 13. Observe that
on average we are able to detect and re-identify 3.31
times more connections when using 16 channels during
the same amount of time, which is largely consistent
with the controlled experiments reported in Fig. 10.
We also experiment with our system when this is
placed inside a car and assess its snifﬁng performance
while driving on the highway. We include the obtained
results in Appendix B
VIII. COMPARISON AGAINST EXISTING SOLUTIONS
Ubertooth One is an “open source wireless develop-
ment platform suitable for Bluetooth experimentation”.
It connects to hosts via USB and handles the MAC and
PHY layers through custom ﬁrmware that controls a
CC2400 transceiver. Its main advantage is the low price
tag, which comes with the drawback of only being able
to capture a single channel at a time. To discover on-
going sessions, the platform either stay on a set channel
(which can be useful when trying to detect multiple
active sessions) or hops “randomly” (to increase the
chances of meeting a session). Being hardware based,
the platform cannot be updated and the CC2400 radio
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:42:21 UTC from IEEE Xplore.  Restrictions apply. 
544
y
t
i
l
i
b
a
b
o
r
P
y
t
i
l
i
b
a
b
o
r
P
1
0.8
0.6
0.4
0.2
0
1
0.8
0.6
0.4
0.2
0
ECDF of Car Testbed
0
4
8
12
16
20
24
28
32
time [s]
36
40
44
48
52
56
60
ECDF of Speaker Testbed
8-channel sniffer
Ubertooth
0
4
8
12
16
20
24
28
32
time [s]
36
40
44
48
52
56
60
8-channel sniffer
Ubertooth
Fig. 14: ECDF of the time needed to resolve UAPs in
two different testbeds. Continuous lines: data trafﬁc on.
Dashed lines: no trafﬁc.
25
20
15
10
5
0
25
20
15
10
5
0
Traffic off
Ubertooth
1 channel
4 channels
16 channels
Traffic on
Ubertooth
1 channel
4 channels
16 channels
l
d
e
v
o
s
s
P
A
U
#
l
d
e
v
o
s
s
P
A
U
#
Fig. 15: Comparison in terms of UAPs resolved in 10 s
of snifﬁng between Ubertooth and our system limited to
different numbers of channels.
can only work with BT frames encoded at the Basic
Rate (i.e., 1 Mb/s).
Next, we give a detailed performance comparison
between Ubertooth and our system, considering different
scenarios; namely, we examine the time required by each
platform to discover the UAP of an Android Auto session
and of a connection between a BT loudspeaker and a
smartphone, with and without active trafﬁc on the BT
link. Fig. 14 shows the ECDF of these measurements. In
both cases, while our approach takes less than a second
to discover the UAP in over 95% of the experiments,
irrespective of whether trafﬁc is present or not, Ubertooth
struggles to solve the UAPs. When no data is exchanged,
it requires more than a minute in 20% of the experiments
conducted. This makes it incompatible with high mobil-
ity scenarios where observation times can be very short.
We also assess how many devices could be discovered
within 10 s in the multi-device testbed described in
Sec. VI-A, and report the results obtained in Fig. 15.
Note that
the performance of our system in single-
channel mode of operation is comparable to that of
Ubertooth (ﬁxed on the same channel); while Ubertooth
detects on average one more UAP than our system
when trafﬁc is exchanged, our system again performs
better in the absence of trafﬁc. To understand the reason
behind Ubertooth’s behaviour discrepancy, we examine
its snifﬁng code. We ﬁnd that, differently to what is
reported in the documentation, Ubertooth does not use
timestamps of consecutively captured frames in recov-
ering target UAPs, as we do in our system. Instead, it
removes implausible UAPs iteratively, based on some
sanity checks on the frame’s payload. While this is fairly
effective when payloads are present in the frames, the
approach does not work when only NULL or POLL
frames are exchanged for keeping sessions alive. In these
situations, Ubertooth has to wait a considerable time
before collecting a useful data frame. For instance, in the
previous Car Testbed experiment, such frames are those
carrying instructions for updating the car’s display. To
make things worse, only a fraction of these frames can
be captured, since the hopping sequences followed by
Ubertooth is different than that followed by the devices.
In addition, it is worth noting that while our solution
only identiﬁes valid LAPs, Ubertooth might exhibit false
positives in these scenarios.
Finally, we note that, even though we relied on B210
SDRs by Ettus for implementation and testing, it would
be straightforward to port our system to other platforms,
as long as they support IQ sampling. For instance,
it would be interesting to evaluate our system using
HackRF One, an SDR platform that provides up to
20 MS/s, and synchronising multiple devices through
clock daisy-chaining. With a single HackRF One, and
limiting the capture to just 8 or 16 channels, we antic-
ipate it is possible to achieve very good performance
at a price even lower than that of Ubertooth. We leave
such experimentation for future work. We remark that
the open-source nature of our system and the ﬂexibility
it offers (as compared to proprietary ‘black-box’ com-
mercial platforms) lowers the entry barrier for attackers
and future research into BT security alike.