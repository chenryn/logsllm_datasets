title:Living-Off-The-Land Command Detection Using Active Learning
author:Talha Ongun and
Jack W. Stokes and
Jonathan Bar Or and
Ke Tian and
Farid Tajaddodianfar and
Joshua Neil and
Christian Seifert and
Alina Oprea and
John C. Platt
Living-Off-The-Land Command Detection
Using Active Learning
Talha Ongun∗
Northeastern University
Boston, MA, USA
Ke Tian†
Microsoft
Redmond, WA, USA
Christian Seifert
Microsoft
Redmond, WA, USA
Jack W. Stokes
Microsoft
Redmond, WA, USA
Farid Tajaddodianfar‡
Microsoft
Redmond, WA, USA
Alina Oprea
Northeastern University
Boston, MA, USA
Jonathan Bar Or
Microsoft
Redmond, WA, USA
Joshua Neil
Microsoft
Redmond, WA, USA
John C. Platt§
Redmond, WA, USA
Microsoft
ABSTRACT
In recent years, enterprises have been targeted by advanced ad-
versaries who leverage creative ways to infiltrate their systems
and move laterally to gain access to critical data. One increasingly
common evasive method is to hide the malicious activity behind a
benign program by using tools that are already installed on user
computers. These programs are usually part of the operating system
distribution or another user-installed binary, therefore this type of
attack is called “Living-Off-The-Land”. Detecting these attacks is
challenging, as adversaries may not create malicious files on the
victim computers and anti-virus scans fail to detect them.
We propose the design of an Active Learning framework called
LOLAL for detecting Living-Off-the-Land attacks that iteratively
selects a set of uncertain and anomalous samples for labeling by a
human analyst. LOLAL is specifically designed to work well when
a limited number of labeled samples are available for training ma-
chine learning models to detect attacks. We investigate methods to
represent command-line text using word-embedding techniques,
and design ensemble boosting classifiers to distinguish malicious
and benign samples based on the embedding representation. We
leverage a large, anonymized dataset collected by an endpoint secu-
rity product and demonstrate that our ensemble classifiers achieve
an average F1 score of 96% at classifying different attack classes.
We show that our active learning method consistently improves
the classifier performance, as more training data is labeled, and
converges in less than 30 iterations when starting with a small
number of labeled instances.
∗This research was done while the author was doing an internship at Microsoft.
†The author now works at Palo Alto Networks.
‡The author now works at Amazon.
§The author now works at Google.
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior specific permission
and/or a fee. Request permissions from permissions@acm.org.
RAID ’21, October 6–8, 2021, San Sebastian, Spain
© 2021 Copyright held by the owner/author(s). Publication rights licensed to ACM.
ACM ISBN 978-1-4503-9058-3/21/10...$15.00
https://doi.org/10.1145/3471621.3471858
CCS CONCEPTS
• Security and privacy → Intrusion detection systems; Mal-
ware and its mitigation; Systems security.
KEYWORDS
Threat detection; Advanced Persistent Threats; Active learning for
security; Contextual text embeddings
ACM Reference Format:
Talha Ongun, Jack W. Stokes, Jonathan Bar Or, Ke Tian, Farid Tajaddodi-
anfar, Joshua Neil, Christian Seifert, Alina Oprea, and John C. Platt. 2021.
Living-Off-The-Land Command Detection Using Active Learning. In 24th
International Symposium on Research in Attacks, Intrusions and Defenses
(RAID ’21), October 6–8, 2021, San Sebastian, Spain. ACM, New York, NY,
USA, 14 pages. https://doi.org/10.1145/3471621.3471858
1 INTRODUCTION
As existing anti-virus and endpoint security defenses continue to
improve at detecting file-based malware, advanced attackers are
seeking other avenues to remain undiscovered. One such method
is utilizing existing tools in the target system installed as part of
the operating system with a legitimate purpose. For instance, cer-
tutil.exe is a Windows command-line program that is used for cer-
tificate management tasks such as configuring certificate services,
and verifying certificates and key pairs. It also has the function-
ality to download files from the internet, and encode or decode
certificate files, allowing adversaries to use this tool to download
malicious files or hide existing files. Such methods could be used
by sophisticated malware or a human adversary after the initial
breach. These (possibly undocumented) side use cases of these tools
enable malicious actors to evade detection as these programs are
usually whitelisted and their usage does not cause an alert to be
generated. These types of attacks have previously been referred
to as “Living-Off-The-Land” (LOL) attacks, and the actual binaries
used in the attacks are called LOLBINs (LOL Binaries) [52, 57].
In recent years, the security community has noticed this trend
as the attackers increasingly started using LOL-based methods [13,
14, 28, 32, 49, 52, 57]. These results demonstrate that traditional
anti-virus (AV) solutions may not be able to detect such behavior,
and we need better detectors that can prevent these harmful actions.
442RAID ’21, October 6–8, 2021, San Sebastian, Spain
Ongun, et al.
Proposed solutions that attempt to detect such attacks are typically
based on heuristics and regular expression matching. Since these
tools can also be used by legitimate users such as system adminis-
trators or developers, these methods usually result in a high number
of false positives.
In this work, we investigate for the first time machine learning-
based algorithms for the detection of individual LOL commands. A
significant challenge in detecting LOL attacks is gathering enough
labeled data to adequately train machine learning models. In order
to accomplish this task, we propose the design of an active learning
approach (called LOLAL) to adaptively choose samples for analysts
to label. In our framework, we train an ensemble boosting classifier
iteratively using the labeled command lines to distinguish between
malicious and benign commands. We propose an adaptive sampling
strategy based on identifying uncertain samples (according to the
ensemble classifier), as well as anomalous samples (according to
a naïve bayes anomaly detection module). By labeling samples in
the order selected by the active learning algorithm, significantly
fewer samples need to be labeled by the security analyst in order to
achieve similar performance compared to a classifier trained with
randomly-selected samples. We employ for the first time modern
text embedding methods to provide a latent representation of the
command line in the feature space. To this end, we investigate
the performance of both the word2vec and fastText embeddings
for our task. The embedding representation is given as input to
machine learning classifiers that can distinguish benign samples
from several classes of malicious samples.
lows:
• We propose the design of an active learning framework for de-
tecting LOL attacks on command-line datasets collected from
endpoint software installed on a large number of computers dis-
tributed geographically. Our method is applicable to settings
To evaluate LOLAL, we have been provided access to anonymized
process command lines from a subset of computers running the
Microsoft Defender for Endpoint [29] commercial security prod-
uct. The user, computer, and organization names, as well as other
sensitive data, were all anonymized in the path and command-line
input parameters to protect user privacy. In addition, we worked
with professional security analysts who labeled processes as either
malicious or benign based on their threat-hunting experience. We
train unsupervised embedding representations of command lines
using millions of data samples, and design ensemble classifiers on a
smaller set of labeled commands. Using the fastText embedding rep-
resentation and several token score features, a multi-class ensemble
classifier achieves an F1 score of 96% at identifying LOL attacks. We
show that the ML classifiers improve their performance as multiple
iterations of active learning are run and additional labeled data is
added to the training set. We also show that the active learning
method converges in less than 30 iterations, and reaches a precision
and recall above 97% for almost all classes starting from a small
number of labeled examples. Finally, we perform an experiment
with a security analyst with expertise in LOL-based threat-hunting,
who we asked to label samples identified by our active learning
framework and demonstrate the feasibility of using active learning
for discovering LOL attacks.
The main contributions of our work can be summarized as fol-
Figure 1: Comparison of traditional malware attacks and
Living-Off-The-Land activity.
where a limited amount of labels of malicious and benign com-
mands are available.
• We propose novel process command-line representations based
on text embeddings and novel token scoring methods for the task
of identifying LOL attacks.
• We achieve an F1 score of 96% for an ensemble classifier trained on
embedding representations of command-line text to distinguish
between benign and malicious LOL attack samples.
• We show that our active learning method consistently improves
the classification performance as more labeled data is generated,
and converges in less than 30 iterations. We demonstrate the fea-
sibility of our active learning system by running it over multiple
iterations to select samples for labeling by a security expert.
2 PROBLEM DEFINITION AND
BACKGROUND
In this section, we discuss the problem definition and threat model,
and provide background on Living-Off-The-Land attacks and word
embeddings.
2.1 Detecting LOL Attacks
In recent years, Living-Off-The-Land (LOL) attack methods have
been increasingly used by advanced adversaries to evade detection,
as several vendors report [13, 28, 32, 52]. These methods leverage
existing system tools as part of a malicious campaign, and are used
by both human adversaries that have gained access to a target sys-
tem and stealthy malware that has infected a vulnerable computer.
Figure 1 shows an overview of traditional malware and Living-Off-
The-Land techniques. LOL techniques usually involve commands
that are generated once an attacker has installed a backdoor and
has access to a command-line shell on the computer. Many such
tools that are used for LOL attacks are documented in [35], and
we list in Table 1 a set of unexpected or non-documented func-
tionalities of legitimate binaries that are exploited by attackers.
We focus on Windows systems while similar techniques are doc-
umented for Unix-based systems as well [34]. These tools could
12Initial Compromise Phishing Vulnerabilities Infected SoftwareVictim Traditional  MalwareLiving-off-the-land  TechniquesAdversary -  Mostly used by human agents,  and stealthy malware -  Leverage existing systembinaries with useful functionality,may not create files on disk -  The binaries are whitelisted,and it is hard to detect misuse-  File is dropped and executed -  Anti-virus scans can flagbased on known signatures -  Ineffective in well-monitoredsystems 443Living-Off-The-Land Command Detection
Using Active Learning
RAID ’21, October 6–8, 2021, San Sebastian, Spain
Table 1: Some examples of how Living-Off-The-Land binaries are used by adversaries.
LOLBIN
Bitsadmin bitsadmin /create 1 bitsadmin /addfile 1 https://foo.com/a.exe Download malicious files to a temporary location,
Example Malicious Command Line
Description
Certutil
c:\a.exe bitsadmin /resume 1 bitsadmin /complete 1
certutil -decode b64file newFile.exe
regsvr32.exe /s /u /i:file.sct scrobj.dll
Regsvr32
Msiexec msiexec /q /i http://192.168.83.2/cmd.jpeg
Msbuild msbuild.exe pshell.xml
be used for downloading and executing payloads, reconnaissance
activities, and lateral movement within the compromised network.
For instance, bitsadmin.exe is a Windows command-line tool that
can be used to create and monitor jobs. Adversaries could use this
tool to download malicious files to a temporary location and submit
jobs to execute the malicious payload. certutil.exe is a certificate
management tool with functionality to encode and decode certifi-
cates, but it could be used for decoding a Base64-encoded file into a
malicious executable file. regsvr32.exe is used to register .dll files in
the registry, but it can also be used to execute scripts. msiexec.exe
is the Windows Installer tool that uses .msi files, and attackers
use this tool to install and execute malicious code from remote
servers. Another common tool used for this purpose on Windows
systems is PowerShell. Attackers can run obfuscated scripts directly
in memory, and most organizations do not enable logging capabili-
ties that would help detection [53]. Industry solutions [27] and prior
work [40] propose mitigation methods by analyzing PowerShell
scripts to detect malicious intent. In this work, we investigate more
generic detection methods for a variety of system tools. We use sin-
gle process creation events with command-line text of the created
process and the parent process in order to discover new attacks as
well as capture known malicious patterns effectively. We do not
consider sequences of commands or scripts as our main insight in
detecting LOL attacks is that most malicious usage of binaries could
be inferred from the command-line string that includes the binary
name and the supplied arguments. It would be more expensive to
maintain and analyze sequences of commands, and we opted for
simplicity of design by looking at a single command and its parent.
Our methods could be used for command representation in systems
designed to process sequences of commands or scripts.
Since these attackers find new ways to leverage more and more
benign tools, traditional threat detection solutions cannot address
this problem effectively. In our work, we explore the use of ma-
chine learning and, in particular, active learning for detecting LOL
attacks. In this setting, an important challenge is that ML models
need to be trained with limited labeled data. Systems designed to
solve this problem need to consider the human expert’s analysis
time for investigation and manual analysis, which is a significant re-
source constraint. We leverage the Microsoft Defender for Endpoint
security product [29] that collects anonymized process telemetry
reports including the LOLBIN command lines generated by comput-