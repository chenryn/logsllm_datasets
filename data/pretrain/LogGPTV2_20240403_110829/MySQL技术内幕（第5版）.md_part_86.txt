my Saddress
orint strong （"Name:“
foreach my $key (keys (%{$entry_ref)))
#对HTML里的特殊字符进行编码
$entry_ref->($key) = escapeHTML ($entry_ref->($key));
第8章用Perl DBI编写MySQL程序
.=
if defined ($entry_ref->(interests));
if defined ($entry_ref->(phone));
if defined ($entry_ref->(zip));
if defined ($entry_ref->(city});
$entry_ref->(zip)
.format_name ($entry_ref)), br
()
，必须确保它是一个MyISAM表。如果你使用了
br（）
（）；
---
## Page 373
里。更多关于布尔模式搜索的信息请参考2.14.2节。
型的FULLTEXT 搜索，再在每个关键字的前面加上一个加号“+”，表明它必须存在于匹配行
使用的模式。如果想实现第二种模式，则需要修改语句，让它使用一个IN BOOLEAN MODE 类
意一个关键字”和“匹配所有关键字”两种模式之间进行选择。第一种模式正是现在的脚本所
的MATCH(interests)改为MATCH(interests、last_name、first_name)。
full_name 列的索引：
例如，你可以删除原来的 FULLTEXT 索引l，再添加一个同时涉及 interests、last_name 和
索引,并修改ushl_ft_browse.pl脚本来搜索这些列，可以让FULLTEXT搜索同时搜索多个列。
的成员条目找出来。
索表单里输入多个关键字(有无逗号都可以)。这个脚本会把与这些关键字中的任何一个相匹配
此脚本还有很多值得改进的地方。此脚本可以基于以下事实来改进：通过建立跨多个列的
为使用这个新的索引，还需要修改search_members（）函数里的那条SELECT语句，将原来
ALTER TABLE member ADD FULLTEXT (interests,last_name,first_name);
ALTER TABLE member DROP INDEX interests;
在字
口不需要使用通配符“%”来把关键字转换为模式。
口查询命令使用的是MATCH（）...AGAINST（）子句，而非LIKE子句。
my ($dbh, $interest）=@_;
完成上述改动之
之前的 search_members（）函数版本相比，此版本作了以下几处修改。
print p ("Number of matching entries: $count");
$sth->execute (sinterest);
#在interest字段的任何位置查找字符串
print p("Search results for keyword:"
html_format_entry （$ref);
++$count;
0：
ORDER BY last_name,
SELECT
后，你可以通过Web 浏览器来调用ushl_ft_browse.pl脚本，并在搜
FROM member WHERE MATCH(interests) AGAINST(?)
(qq
first_name
.escapeHTML （$interest));
8.4使用DBI来开发Web应用程序
353
---
## Page 374
libmysqlclient 库,详见附录 G)。这种设计导致在使用 PHP访问 MySQL时，需要依赖 MySQL
息，请参考http:/ /www.php.net/pdo。
章假定使用的最低版本为PHP5.1，因为这是PDO第一次与PHP捆绑发行的版本。更多相关信
发行版的指导说明。该发行版的phpapi 目录下有本章所开发的各个示例脚本。
盟创建的表。如果需要这里提到的各种软件，请参考附录 A。附录 A 中还有对如何获得sampab
用。出于性能上的考虑，请尽量把PHP当作Apache的模块来运行。
PHP既可以当作Apache的模块来使用，也可以像传统的CGI程序那样当作独立的解释器来使
Perl DBI模块的MySQL 编程API 之间的比较请参考第6章。
用PHP语言编写MySQL程序
MySQL的PDO驱动程序在最初被设计时，需要链接MySQL的C语言客户端开发库（即
本章将使用PDO来编写PHP脚本。PDO在PHP5.0及以上的版本里都可以使用，但是本
PHP提供了以下几种针对MySQL的数据库访问接口。
本章的示例将会使用示例数据库sampdb，会用到那些在第1章里为成绩考评项目和美史联
本章假设你会把PHP和ApacheWeb服务器联合起来使用，当然，你也可以用其他服务器。
口
口MySQL 的增强扩展为 mysqli。此扩展提供了两种调用样式。既可以把它当作一组以
口 mysql 扩展是最早的 MySQL 接口。它由一系列以 mysqli_xxx()形式命名的函数构成。
mysqli_xxx（）方式命名的函数来使用，也可以通过面向对象的接口来使用它。
在其中的代码都会被执行，并生成动态内容发送给客户端的Web浏览器。本章将介绍
第9章
用的参数即可，这样它们便能调整到你想使用的那个驱动程序。
擎的驱动程序构成。如果想从某个驱动程序切换到另外一个，只需要修改传递给连接调
用了一个双层架构，其中，顶层是一个统一的接口，底层则由一些适用于不同数据库引
它提供了一个面向对象的与数据库无关的接口，有点类似于Perl语言的DBI模块。它使
PHP 数据对象（PHP Data Object，PDO）扩展是一
MySQL4.1及以上版本中新增功能的访问支持，因此现在不赞成使用它。
其中的绝大部分都由MySQL的同名C语言API函数直接映射而来。此扩展没有提供对
一个与特定数据库引擎基本无关的扩展
---
## Page 375
库搜索参数的表单。根据用户输入的不同内容，
脚本的调用环境而变化的Web页面。例如，你可能会用PHP脚本来处理用户已在其中输入数据
本（HTML部分）与动态生成的结果（PHP代码部分的执行结果）混合一起，生成一个会随着
个表示代码结束的特殊标记时，它又会从代码模式切换回文本模式。这意味着你可以把静态文
文本复制模式切换到PHP代码模式，并把该文件解释为可执行的 PHP代码。当解释器遇到另一
面文本，并把它遇到的任何内容复制到输出里。当解释器遇到某个特殊的起始标记时，它会从
的PHP脚本所生成的页面不仅仅符合HTML规范，而且还符合XHTML规范。对XHTML的简
它所生成的输出内容。因此，客户端看不到 PHP代码，它只能看到最终的 HTML 页面。（本章
杂着HTML与可执行代码。HTML会被原样发送给客户端，而PHP代码会被执行，并被替换为
9.1
URL与上面的那两个URL是等价的：
介，
两个目录。如果服务器运行于本地主机，那么这两个目录里的页面会具有类似下面这样的URL：
自拥有自己的目录ush1和 gp。如果你也按这种方式来设置Web服务器，那么现在便应该创建这
所采取的办法是，把美史联盟项目和成绩考评项目放在Apache文档树的顶层目录下，并让它们各
的脚本当作它所处目录的默认主页，有点像Apache处理index.html文件的方式。
该正确使用哪一个扩展名。)该附录还描述了如何设置Apache服务器，让它把任何名为index.php
信息，请参考附录A。（如果你无法掌控Apache的安装，则需要与系统管理员一起确认一下，应
名都为“.php”。与“如何配置Apache服务器，使其能够识别出你所用的那个扩展名”有关的
务器无法识别出你所用的扩展名，那么它会把PHP脚本当作普通文本。本章的脚本所用的扩展
能。该手册可以从PHP官方网站http：//www.php.net/获得。
I列出了与PDO接口有关的综合性内容。你也可以查阅PHP使用手册，它描述了PHP的所有功
MySQL驱动程序。针对其他数据库引擎的驱动程序有很多，但这里不会对它们进行讨论。附录
至少需要使用PHP5.3版本。
含其中；并且自5.4版本之后，它已成为了默认库。因此，当把PDO与mysqlnd一起使用时，
libmysqlclient一样的通信协议，可用于替代它。在有了mysqlnd 库之后，便可以在未安装
发行版的部分内容。另外，新出现的mysqlnd 库是一个本地驱动程序，它实现了与
当 PHP解释器开始读取某个文件时，它会假设这个文件的内容就像是HTML内容那样的字
请参考8.4.2.2节。）
若想使用本章编写的这些脚本，则必须把它们安装到某个Web服务器能够访问的地方。本章
PHP的基本操作是，解释脚本并生成一个将被发送到客户端的 Web 页面。PHP脚本通常夹
PHP脚本的扩展名要能被Web服务器识别，且应该识别为调用PHP解释器来执行。如果服
基本上，本章只会对那些需要讨论的PDO对象和方法进行介绍。它也只会涉及PDO的
要记得修改本章中的示例URL，指向你自己的Web服务器，而不是localhost。
http://localhost/gp/
http://localhost/ushl/
如果已对Apache 进行了配置，让其把 index.php 当作目录的默认页面，那么下面这两个
http://localhost/gp/index.php
http://localhost/ushl/index.php
例如，如果这两个目录里的主页叫作 index.php，则可以像下面这样访问它们：
http://localhost/gp/...
http://localhost/ushl/...
PHP 概述
，每次提交表单时搜索参数可能也会不同，因此
9.1PHP 概述
355
---
## Page 376
记样式，以及如何启用它们，请参考附录I。
决定，HTML 文本与 PHP代码的混合情况。PHP的灵活性还表现在，它不要求 PHP代码全都
由代码生成：
全由 HTML文本构成，不包含任何PHP代码。而另一种极端情况是，所有的HTML内容完全
那个完全由HTML构成的脚本所生成的页面相同。
这个内容会成为发送给客户端浏览器内容的一部分。因此，此脚本所生成的 Web 页面，与前面
那个示例改写一下，让它包含一小段如下所示的PHP代码：
记?>为止。在这两个标记之间的代码将会被解释，并被替换为最终的输出结果。现在，把上面
本模式切换至PHP代码模式，并把遇到的所有内容都当作是可执行代码，一直到遇到结束标
区别开来，这两个标记分别为：。在 PHP解释器遇到起始标记以外，PHP还支持其他的标记样式。如果想了解各种可用标
PHP代码可以生成Web 页面的任何部分。我们刚看过了一种极端的情况，其中整个脚本完
如果想在脚本里包含PHP代码，必须使用特殊的起始标记和结束标记来将它与周围的文
从上面这三个示例可以看出，在如何产生输出方面，PHP表现得非常灵活。它让你自己来
print("\n");
print
print
print
print
dude>
在这个例子里，代码部分很小，
一有时，这种做法非常实用。这个脚本完全合法，PHP解释器完全能处理它。
这个脚本实际上非常简单，它根本就没有PHP代码！你肯定会问：“这有什么用呢？”“
hello,world
我们以下面这个极其简单的脚本为例，了解一下PHP是如何工作的：
% php hello.php
本章的这些示例脚本，原意是想通过 Web 服务器调用来生成 Web 页面。不过，如果你
V
hello, world
如果想在命令行执行这个脚本，可以使用下面这条命令：
第9章用PHP语言编写MySQL程序
("\n");
("\n"）;
world\n");
可独立执行的 PHP脚本
，只有一行。当执行这段代码时，它会输出hello，world,
可
本
---
## Page 377
ushl目录下，你便可以使用下面这两个URL（请根据你自己的Web服务器对主机名和路径名
行数)。
轻而易举地捕获各种错误。
要执行以下几个步骤。
库里的 member 表来确定。为完成此项任务，在脚本的起始标记和结束标记之间的那段代码需
完善这个脚本，但目前它还只能显示一条简短的欢迎消息和联盟成员的当前总人数：
页面里使用查询结果。这个脚本构成了美史联盟网站主页的基础框架。在后面，我们会进一步
成
个示例多了一些实质性的内容。它展示了，如何从PHP访问MySQL数据库，以及如何在Web
有所不同。本节描述的脚本对这一功能进行了简单的演示。虽然它相对短小，但却比前面那几
大的用处。PHP的强大之处在于，它能够生成动态页面，即输出内容可以因脚本调用的不同而
9.1.1
法错误或者其他方面的问题，而不用在每次修改之后都通过浏览器来请求它。
（3）向MySQL服务器发送一个查询，用于确定美史联盟现在有多少成员（即member 表的
员
刚才展示的那个脚本，可以在 sampdb 发行版的 phpapi/ushl目录里找到，文件名为
如果PHP的功能只是利用输出语句生成本质上就是静态 HTML的内容，那么它也没什么太
http://localhost/ushl/
（4）根据查询结果构造一条包含成员总数的消息。
（2）为后续的PDO调用启用异常捕获机制，以便能够在没有显式测试它们的情况下，可以
（1）连接MySQL服务器，并把 sampdb 设置为默认数据库。
（5）关闭与MySQL服务器的连接。
总数是动态的，会随着时间的推移发生变化，因此它必须在执行时通过查询sampdb数据
这条欢迎消息只是静态文本，因此最简单的方法是，将其编写成HTML文本。另一方面，
catch（PDOException $e）（）#清空处理器（进行错误捕捉，但将其忽略掉）
#美史联盟主页
dae>
U.s. Historical League
U.S.Historical League
，当你在处理某个脚本时，这种做法有时能带来好处，因为你能够立刻发现它是否存在语
ry
$dbh=NULL;
print ("The League currently has $count members.");
Scount
$dbh =new PDo("mysql:host=localhost;dbname=sampdb",
dbh->setAttribute
一个简单的PHP脚本
=$sth->fetchColumn (0）;
#关闭连接
("SELECT COUNT（*）FROM member"）;
(PDO::ATTR_ERRMODE,
PDO::ERRMODE_EXCEPTION);
"sampadm",
9.1PHP 概述
"secret");
357
---