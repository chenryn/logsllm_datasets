title:Secure mobile subscription of sensor-encrypted data
author:Cheng-Kang Chu and
Wen Tao Zhu and
Sherman S. M. Chow and
Jianying Zhou and
Robert H. Deng
Secure Mobile Subscription of Sensor-Encrypted Data
Cheng-Kang Chu
Cryptography and Security
Department
Institute for Infocomm
Research
1 Fusionopolis Way
Singapore 138632
PI:EMAIL
Wen Tao Zhu
State Key Laboratory of
Information Security
Graduate University of
19A Yuquan Road
Beijing 100049, China
PI:EMAIL
Chinese Academy of Sciences
200 University Avenue West
Sherman S. M. Chow
Department of Combinatorics
and Optimization
University of Waterloo
Waterloo, Ontario
Canada N2L 3G1
PI:EMAIL
Jianying Zhou
Cryptography and Security
Department
Institute for Infocomm
Research
1 Fusionopolis Way
Singapore 138632
Robert H. Deng
School of
Information Systems
Singapore Management
University
80 Stamford Road
Singapore 178902
PI:EMAIL
PI:EMAIL
ABSTRACT
In an end-to-end encryption model for a wireless sensor net-
work (WSN), the network control center preloads encryption
and decryption keys to the sensor nodes and the subscribers
respectively, such that a subscriber can use a mobile device
in the deployment (cid:12)eld to decrypt the sensed data encrypted
by the more resource-constrained sensor nodes. This paper
proposes SMS-SED, a provably secure yet practically e(cid:14)cient
key assignment system featuring a discrete time-based ac-
cess control, to better support a business model where the
sensors deployer rents the WSN to customers who desires
a higher (cid:13)exibility beyond subscribing to strictly consecu-
tive periods. In SMS-SED, a node or a mobile device stores
a secret key of size independent of the total number of sen-
sor nodes and time periods. We evaluated the feasibility of
deploying 2000 nodes for 4096 time periods at 1024-bit of
security as a case study, studied the trade o(cid:11) of increasing
the storage requirement of a node to signi(cid:12)cantly reduce its
computation time, and provided formal security argument
in the random oracle model.
Categories and Subject Descriptors
C.2.4 [Computer-Communication Networks]: Distribut-
ed Systems; E.3 [Data Encryption]; K.6.5 [Management
of Computing and Information Systems]: Security and
Protection
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
ASIACCS ’11, March 22–24, 2011, Hong Kong, China.
Copyright 2011 ACM 978-1-4503-0564-8/11/03 ...$10.00.
228
General Terms
Security, Algorithms
Keywords
sensor network security, subscription-based key managemen-
t, compact key size, data con(cid:12)dentiality, access control, weak
computational device
1.
INTRODUCTION
A wireless sensor network (WSN for short) is a large-scale,
self-organized network consisting of a number of low-cost,
resource-constrained sensor nodes, which monitors ambient
environments in a certain deployment (cid:12)eld. By means of ad
hoc routing, the sensor nodes send wirelessly the obtained
data (typically the sensor readings) to a base station, which
may further process the data and forward the result to a con-
trol center (e.g., for decision making). In certain scenarios,
the base station and the control center may be implement-
ed in the same physical server, which is usually a powerful
control center assumed to take over operating management
including user (i.e., customer) authentication.
1.1 Motivation
We envision a potential business model where the net-
work provider deploys the sensor nodes and rents the WSN
to commercial customers. The network as a whole is pro-
vided as a certain kind of infrastructure service (e.g., for sci-
enti(cid:12)c research purposes), and each user just subscribes to
the service for data acquisition without necessarily deploying
his or her own sensor nodes. A sensor node in general can
be multi-functional, and thus there can be multiple types
of data services (e.g., temperature, pressure, and humidity
reports) and accordingly, various types of subscriptions re-
garding all possible combinations (e.g., a user may subscribe
to temperature and humidity but no pressure reports). For
simplicity, we focus on the consideration of just one such da-
ta service (and thus only one type of subscription), while our
developed solution can be directly extended to accommodate
a scalable, multi-service scenario, and be further adapted to
other data provision applications such as self-navigation for
vehicles, as well as military applications [19]. Data are col-
lected by mobile units (e.g., unmanned aerial units) that
access the sensor network at locations which may be \hard"
to predict.
For the bene(cid:12)t of the network provider, a commercially
viable data provision service needs a certain kind of access
control so that any user can only acquire the entitled data
according to the subscription. Such a subscription is typi-
cally managed on a time basis, e.g., a user is charged daily,
or pays per hour. This subscription-based payo(cid:11) model has
been well supported by economic research results on owner-
side strategies for maximizing pro(cid:12)ts of information good-
s. For example, research at NYU and MIT concluded that
content bundling and (cid:12)xed fees can generate greater pro(cid:12)ts
per good [2]. This work is partially motivated by the un-
derstanding that a business model based on subscription is
more economically bene(cid:12)cial than others.
1.2 Sensor Network Data Encryption Models
To ensure data con(cid:12)dentiality, sensor nodes should en-
crypt the obtained data before sending them over the air. To
realize this goal e(cid:14)ciently, sensor networks adopt symmetric-
key cryptography, where the same key is employed for both
encryption (i.e., data protection) and decryption (i.e., data
access). For a WSN, the encryption can be done in either a
hop-by-hop manner, or an end-to-end one.
• In the hop-by-hop encryption model, a sensor node
locally shares a pairwise key with (almost) each of it-
s neighbor nodes within its communication range, so
that a neighbor node can decrypt (and possibly aggre-
gate) the received data before re-encrypting and for-
warding the data to the next hop (i.e., the neighbor
node’s neighbor on the path towards the base station).
• On the other hand, in the end-to-end encryption mod-
el, a sensor node only holds one encryption key (no
matter how many neighbors it has) secretly shared
with the base station; the encrypted data can be de-
crypted by the base station but not the other nodes,
while the neighbor nodes just propagate the data that
are kept intact in the encrypted form.
One advantage of the end-to-end encryption model is that
the sensed data can keep con(cid:12)dential even if some sensor
nodes are untrustworthy (e.g., corrupted). Another advan-
tage is that the data can be locally accessed by a mobile
user authorized by the control center. That is, the user can
roam in the WSN deployment (cid:12)eld and directly access the
localized data at any sensor node, as long as the user hold-
s respective decryption keys (i.e., the same with those em-
ployed by the base station). In this article, we are interested
in such an end-to-end encryption model.
1.3 Time-based Access Control
Apart from who can access the data, another dimension
to consider is when can the data be accessed. Time-based
access control can be incarnated by time-bound key assign-
ment (e.g., [23, 7]). Each sensor node encrypts the obtained
data with a time-variant session key. Di(cid:11)erent nodes (identi-
(cid:12)ed by their node indices (cid:25) = {1, 2,··· , n}) employ di(cid:11)erent
session keys even in the same time period. Note that we as-
sume sensor nodes are (at least loosely) synchronized with
a secure time synchronization scheme [20].
On the other hand, a user registers at the WSN control
center to subscribe to the data service for a set J of subscrip-
tion time periods. At any (discrete) time j ∈ J, any user
who \subscribes to J" can access the sensed data directly
from the sensor nodes. In a nutshell, a sensor node encrypts
the data with a session key ki;j, which is determined by the
node index i and the current period of time j, and a mobile
user in the WSN deployment (cid:12)eld can access the localized
data with the same session key ki;j, as long as j is within
his or her subscription set J.
The above idea can be realized trivially if the control cen-
ter creates n · l keys, pre-loads l keys to each node and as-
signs n · |J| keys to each user, where l is the total number
of time periods and |J| is the number of time periods sub-
scribed by the user. Apart from the key management issues
of a large number of keys, there is a cost issue since secret
key is preferably stored in secure storage which is consider-
ably more expensive than normal storage. Having a bulky
(collection of) key is probably not a good idea for resource-
constrained mobile devices and even more constrained sensor
nodes.
Preferably, we want a \two-dimensional" time-based key
management scheme which works as follows. The control
center issues a node key ki;∗ to the node i, and issues a
user key k∗;J to a user who subscribed to the set of time
periods J, as depicted in Fig. 1(a). A time-variant session
key ki;j can either be computed by the node using a node
key ki;∗ according to the current discrete time index j, or
by a mobile user using a user key k∗;J if j ∈ J, as depicted
in Fig. 1(b). For example, in the simplest case, a mobile
user only subscribes to a single time period j (i.e., |J| = 1)
is assigned with the user key k∗;j, from which ki;j for any
node i can be derived.
Now we have a conceptual idea which just needs to uti-
lize a constant size of cryptographic secret keying material.
A practical solution following this framework should allow
the key derivations to be done e(cid:14)ciently. In particular, the
computation required in deriving a session key should be
independent of the total number of nodes.
1.4 Our Contribution
1.4.1 Generalized Time-Based Access Control
Without loss of generality, we assume the entire subscrip-
tion time is partitioned into l equal units referred to as time
periods, where each period can typically be a day or an
hour. Our idea of time-based access control system fea-
tures that any user is allowed to subscribe to an arbitrary
set J ⊆ {1, 2,··· , l} of these time periods, where the |J|
periods can be either consecutive or intermittent. Such (cid:13)ex-
ibility makes our mechanism distinguished from an existent
technique known as time-bound access control [23, 7], where
the |J| time periods only start at a certain j and end at
(j + |J| − 1), i.e., the time periods are strictly consecutive,
which may be a limit for many real-world applications.
While our motivating applications is providing subscrip-
tion services of data encrypted by WSN to mobile users, our
system provides a useful and lightweight primitive for time-
based access control in general. Moreover, the idea of dis-
crete time periods generalizes to classi(cid:12)ers of di(cid:11)erent kinds
229
(a)
(b)
Figure 1: Overview of the proposed time-based key management scheme for data access control in a WSN {
ki;j is the symmetric session key employed by sensor node i at time j for encryption and also employed by the
mobile user for decryption, that is either derived from ki;∗ by the node i, where ki;∗ is the node key initially
issued by the control center; or derived from his k∗;J , where k∗;J is the user key also issued by the control
center and j ∈ J.
of data, and our system thus naturally leads to application
or domain speci(cid:12)c subscription of data.
1.4.2 Provable Security Guarantee
A major challenge of the posed key management problem
lies in the collusion of corrupted sensor nodes and (legiti-
mate but malicious) mobile users. Since sensor nodes are
not made tamper-proof, an adversary can easily reveal the
pre-loaded node key from a captured node. On the other
hand, by subscribing to the data service, the adversary can
also play the role of a mobile user, and thus acquire user
keys for certain time periods at his will. To thwart any
possible collusion, we pursue a secure solution where the
adversary is prevented from accessing localized data at any
uncompromised sensor node at any time period beyond his
subscription.
We will de(cid:12)ne the above intuition of security requirement
with respect to a threshold t, which models the adversary’s
ability to capture the sensor nodes. As long as no more
than t sensor nodes are compromised, the whole system still
remains secure. We remark that the threshold t only bounds
the number of revealed node keys, but not the number of
acquired user keys. Actually, an adversary is allowed to
obtain by means of subscription as many user keys as he
would like. Even so, our time-based scheme can still achieve
provable security. We believe this is important for a security-
oriented protocol, especially when previous time-bound key
management schemes [23, 7] have been found vulnerable to
collusion attacks [26, 25].
1.4.3 Our Design Principles
Our scheme can be seen as borrowing the idea of the
broadcast key assignment protocol proposed by Benaloh and
de Mare [5]. We applied two design principles in our con-
struction. One of the (cid:12)rst principles in Computer Engineer-
ing is to make the common case fast.
In our context, we
want to make the computation at the node, i.e., the node
key derivation, as lightweight as possible. Looking ahead,
our system (and [5]) assigns di(cid:11)erent prime exponents for
di(cid:11)erent \atomic units" of the access control policy (time
period in our case) and creates a session key by doing re-
peated exponentiations. One may consider further adapting
this idea also on the node identi(cid:12)ers, similar to the treatment
of time periods in our algorithm. However, this will result
in more exponentiation in the node key derivation (those
exponentiations regarding the n primes associated with the
n nodes), which is undesirable. Our solution can be seen
as making the \common" case fast by shifting the burden of
node to that of the mobile user. A novelty in our system
is that, the user key derivation is computed from an inter-
polation of t elements, which means the \apparent" shifted
burden is not dependent on the number of nodes as one may
imagine. This leads to our second principle. We get a high-
er e(cid:14)ciency for the overall system since our system SMS-SED
provided a \reasonable" level of security { resilience against
a threshold t of nodes where t is a system parameter. On the
other hand, an adoption of Benaloh and de Mare’s idea in
our scenario can possibly provide a very high level of securi-
ty which makes the system remains secure even when all but
one of the sensor nodes of the whole WSN are compromised.
1.4.4
Our system SMS-SED can also be seen as providing a mech-
anism to aggregate many symmetric keys together. The size
of either a node key ki;∗ or a user key k∗;J are independent
of either the total number of sensor nodes n or the total
number of time periods l, yet each of them can be used
to derive keys for all l time periods or keys used by all n
nodes respectively. Using symmetric keys, only a little over-
head is required to simultaneously obtain con(cid:12)dentiality and
authenticity (integrity) by using a block cipher mode of op-
eration which supports authenticated encryption (e.g., [4].)
While there exist public-key signature schemes which fea-
ture a very short signature size and signature transmission
would not required too much energy from the transceivers,
its veri(cid:12)cation may be time-consuming when computation
power is limited, unless extra measures are taken (for exam-
ple, outsourced yet veri(cid:12)able computation, e.g., [8]).
1.5 Paper Organization
Symmetric Key Aggregation
230
Related work will be discussed in the next section. Sec-
tion 3 presents some cryptography basics. Section 4 formally
presents the notion of subscription-based key management
scheme for discrete time periods, followed by the descrip-
tion of SMS-SED, our proposed key management system in
Section 5. Section 6 evaluates the feasibility of the scheme
with respect to resource-constrained sensor nodes. Final-