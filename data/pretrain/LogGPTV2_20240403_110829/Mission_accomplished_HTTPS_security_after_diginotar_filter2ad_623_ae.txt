this very low deployment in line with our 1697 base domains.
We next investigate the 4 pinning (“certificate usage”)
types provided by TLSA: The first two cases require the
entire certificate chain to pass validation (via the root store):
in type 0, a root or intermediate certificate in the certificate
chain is pinned; in type 1 it is the end-entity certificate.
The other two pinning types support bypassing root store
validation: in type 2, a new trust anchor (root certificate)
that must be used in the validation is pinned. Type 3, pinning
to an end-entity certificate outside any certificate chain, can
be used, for example, to pin self-signed certificates.
The findings from SecSpider on September 28, 2017, are
roughly in line with our results. Both us and SecSpider find
minor deployment for PKI-chained type 0 (SecSpider 1% vs.
our 2%) and type 1 (10% vs. 7%). Records of type 3 are
the clear majority (90% vs. 79%). For type 2, we find 11%.
SecSpider did not offer data for type 2; this must be taken
into account when comparing the above relative numbers.
Both scans support the conclusion that pinning a self-signed
or otherwise non-verifiable certificate seems to be the primary
use case for TLSA. Apart from numbers for type 2, the slight
differences can also stem from a different set of scanned
domains, different counting (zones vs. base domains), and a
slight timing offset between measurements.
Comparison with Related Work: Szalachowski and Perrig [68]
investigated the use of CAA and TLSA among the Alexa
Top 100k domains in August 2016.
They find 15 CAA records, which have grown to 102 in our
April 2017 scans. We re-scan on September 4, 2017, and find
216 CAA records on Alexa Top 100k base domains. Given
the CAA record’s youth and its September 2017 effectiveness,
we consider this growth in magnitude plausible.
Figure 5: Ratio of SSL/TLS versions seen in established
connections. SSL 2 and TLS 1.3 did not see significant use
and were excluded from the graph.
Szalachowski and Perrig report 48 TLSA records for base
and www subdomain, in contrast to our 18 domains with
TLSA records on the base domain in April 2017. We rescan on
September 4, 2017, and find 36 Alexa Top 100k base domains
and 35 www subdomains with a TLSA record, totaling in
71 records. This indicates that a large fraction of a TLSA
record count can come from the www subdomain, making
these numbers plausible and indicating slow TLSA growth.
9 TLS VERSION ADOPTION OVER TIME
So far, we discussed the current use of recent security addi-
tions to the HTTPS ecosystem. In this section, we take a
step back to give a brief overview of TLS version adoption
in the last 5 years. We use data from the ICSI Notary [8], a
large-scale passive monitoring effort of the TLS ecosystem
operating since February 2012. To date, it has observed more
than 240.1G connections (221.9G on port 443) containing
14.6M unique certificates.
Figure 5 shows the SSL/TLS versions negotiated in ses-
sions. Even in 2013, there was still significant use of SSL 3
(draft published 1996). TLS 1.0 (standardized 1996) was the
most commonly used version of TLS when the Notary was
established, and this remained true until the end of 2014.
TLS 1.1 (standardized 2006), and TLS 1.2 (standardized
2008) only gained traction years after their standardization
finished. While TLS 1.1 saw some increased use in 2013, it
never gained significant adoption. Our data suggests that
most sites directly changed from TLS 1.0 to libraries support-
ing TLS 1.2. This is supported by the fact that Unix/Linux
based servers will often use OpenSSL, which introduced sup-
port for TLS 1.1 and TLS 1.2 simultaneously in the release
of OpenSSL 1.0.1 on March 14, 2012.
In preparation for this paper, we implemented support for
parsing TLS 1.3 sessions in Bro. This was added to Bro 2.5
(released in Nov. 2016), with some sites running beta-versions
of the code before the release. To date, we encountered more
acbd01020304050607080901002012−04−012012−09−012013−02−012013−07−012013−12−012014−05−012014−10−012015−03−012015−08−012016−01−012016−06−012016−11−012017−04−012017−09−01Percent connections per dayVersiona: SSLv3b: TLSv10c: TLSv11d: TLSv12IMC ’17, November 1–3, 2017, London, United Kingdom
Amann, Gasser, Scheitle, Brent, Carle, Holz
Y↓ , X→
n
SCSV
CT
HSTS
HPKP
CAA
TLSA
Top 1M
HTTP 200
SCSV
26M 2.3M 944k
67.86
7.10
100.00
0.61
0.07
0.04
1.93
100.00
CT HSTS HPKP
6k
96.03
45.88
92.21
100.00
1.98
1.66
32.12
100.00
95.65
100.00
2.90
0.12
0.01
0.00
1.60
100.00
100.00
8.37
2.43
0.02
0.00
0.00
1.01
100.00
CAA TLSA Top 1M HTTP 200
28M
1.2k
94.94
92.57
8.31
12.14
3.40
49.12
0.02
9.82
100.00
0.00
0.00
6.07
0.99
8.63
100.00
100.00
0.5k
91.49
13.54
70.21
19.92
14.70
100.00
8.32
100.00
0.3k
96.08
13.36
6.60
0.72
0.04
0.02
100.00
100.00
Table 10: 𝑃(︀𝑌 |𝑋)︀ in %, giving the empirical probability
that technology 𝑌 is deployed when 𝑋 is. For comparability
across all features, sets only contain HTTP 200 domains,
making these numbers incompatible to in-depth analysis per
feature. Highlighted cells are discussed in Section 10.1.
than 7 million connections negotiating different TLS 1.3
drafts. The number of these connections peaked during Feb-
ruary 2017 with up to 36k successful connections per day,
when Google enabled TLS 1.3 support by default in Chrome
56. These numbers decreased to 1k to 5k successful connec-
tions per day after Google disabled support again due to
compatibility problems [59]. We see the early use of TLS 1.3
as a sign that the community is more security sensitive than it
was in 2012, when our measurement began. We will continue
monitoring the development and deployment of TLS 1.3.
10 DISCUSSION
In this section, we discuss the overall state of HTTPS secu-
rity based on our measurements. First, we map protection
mechanisms against attack vectors and assess the number of
protected domains. Next, we relate our findings to the de-
ployment effort and risks to site availability. Furthermore, we
give specific advice to different stakeholders how to improve
the deployment of security extensions. Finally, we discuss the
value of employing multiple vantage points and IP protocol
versions to assess overall security.
10.1 Correlation of Security Feature Application
In this section, we investigate the correlation between deploy-
ment of different features. Table 10 shows the conditional
probability for a feature 𝑌 to be effectively deployed given
that another feature 𝑋 is effectively deployed.
The lower left triangle of the matrix shows that deployment
of a frequently deployed feature such as SCSV or CT does
not imply the use of less common features. The upper right
triangle offers more interesting insights, of which we discuss
the highlighted cells here:
First, effective deployment of SCSV is less frequent for
domains that use HSTS. Further investigation of this intrigu-
ing fact reveals that 280k domains, roughly equal to the
drop-off compared to average deployment are hosted by the
controversial [77] provider Network Solutions/web.com. The
hoster apparently enabled HSTS for a large set of domains,
without support for SCSV and even does not provide valid
certificates for those domains. We conclude from this that
the drop-off in support of SCSV for domains that use HSTS
(𝑆𝐶𝑆𝑉 |𝐻𝑆𝑇 𝑆) compared to the overall SCSV population
stems from this large hosting provider who handles SCSV
A
S
L
T
r
o
P
K
P
H
P
K
P
H
.
L
P
P
K
P
H
T
C
S
T
S
H
.
L
P
S
T
S
H
∙
27759
—
144
—
A
A
C
A
S
L
T
∙
973
2
3
0
∙
3057
24
20
0
V
S
C
S
∙
∘
Attack Vectors
TLS Downgrade
TLS Stripping
MITM w/ fake Cert
Mis-Issuance Detection
Mis-Issuance Prevention
Domains Protected
Intersection1
Top 10k →
Intersection1
1: Number of domains that deploy the intersection of mechanisms, from left to right.
49.2M 7.0M 0.9M 7485
49.2M 6.1M 67,153
2879
158
349
6789
6789
85
6
6616
479
2827 —
156
150
6 —
1959
1799
∘
∙
∘
∙
Table 11: Attack vectors, protection mechanisms, and em-
pirical coverage, sorted by Top 10K deployment. ∘ denotes
partial protection (susceptible to Trust On First Use attacks),
and ∙ denotes full protection.
incorrectly and sets HSTS for a large population of likely
unused domains.
Second, domains that use HPKP very frequently also use
CT and HSTS headers. We expect users who successfully
master the complicated HPKP setup to also deploy other
techniques. One reason why CAA and TLSA usage remains
relatively low among HPKP users, could be the required
control over the domain’s DNS server.
Third, use of CAA or TLSA is frequently combined, and
often correlates to HSTS or HPKP deployment. Given the
low dissemination of CAA and TLSA, it is not surprising
to find its users be aware of other, more common security
techniques.
10.2 Protection Against Attack Vectors
Table 11 shows which HTTPS security extensions protect
against specific attack vectors. This is based on work by Clark
and van Oorschot [18], who in 2013 theoretically evaluated
various HTTPS security extensions. We contribute empirical
evidence about their use.
The upper section of Table 11 maps attack vectors to
protection mechanisms. Most protection mechanisms defend
against exactly one attack vector. Only HPKP and TLSA
overlap, i.e., both protect against MITM attacks by offer-
ing key pinning. In general, however, multiple protection
mechanisms must be combined to protect against all attack
vectors. We thus analyze how many domains are protected
with multiple mechanisms. This is shown in the lower sections
of Table 11. We start on the left with the most common pro-
tection mechanisms, and then successively intersect the set of
protected domains with the set of domains that are protected
with the mechanism(s) to the immediate right. Note that we
exclude preloading lists from the intersection as they are only
one option to provide HSTS and HPKP.
We see the number of protected domains drop one order
of magnitude for each of the first four mechanisms. We also
find a large drop in HSTS protected domains when inter-
secting with SCSV and CT. In fact, only about 7% of all
HSTS domains are also protected with SCSV and CT. We,