In Section 3 we made the assumption that network distances
between landmarks and hidden servers can be derived from the
HT T P _P ing measurements and a factor RT T _f actor.
In an
idealized case of proxied communication, and in particular in the
case of fast-ﬂux networks, we observed from ﬁgure 2, that such a
factor can be approximated to 2. However, in practice it is different
due to network or queuing delays, application-layer overhead, etc.,
and must be evaluated experimentally. Figure 3 plots the minimum
HT T P _ping (that each landmark has observed towards a proxied
 0 100 200 300 400 500 600 700 800 900 0 50 100 150 200 250 300Min HTTP ping (ms)Direct ping (ms)One landmark to one targetLinear regression (1.8)Median RTT factor (2.07)Mean RTT factor (2.23)186Figure 4: ED. Mean and median error distances in function of
the factor RT T _f actor.
Figure 5: CZ. Median Conﬁdence Zone variation according to
the factor RT T _f actor. Logarithmic scale on y-axis.
target) against the direct network distance (measured as an RTT),
as observed during the PlanetLab experiment. A global ﬁrst view
of the plot shows that a linear relationship effectively exist between
the two variables. The ratio between the Minimum HT T P _ping
and the direct ping values gives us an indication about the actual
RT T _f actor. The median and mean values are respectively 2.07
and 2.23. We depict those RT T _f actor estimations using a line
y = RT T _f actor · x. We also computed the linear regression [3]
between the two variables, as an indication of the best linear ﬁtting
that could be considered.
It should however be noted that as mentioned in section 3, the
number of proxies impacts the trend of the ratio. The more proxies
we request to relay the HTTP Pings, the closer the RT T _f actor
to 2. This is explained by the convergence of the minimum HTTP
Pings towards the shortest direct path2.
We observe that although the actual ratios are close to the ideal-
ized case of an RT T _f actor equal to 2, proxied HT T P _ping
are often impacted by different network conditions and applica-
tion layer factors, so that ratios are higher than 2. We therefore
computed the location estimations using several values of this RTT
factor. The results are reported in the rest of this section.
4.3 Analysis of the Results
This section evaluates the performance of our localization
scheme, for different RT T _f actor values, according to the three
following parameters:
1. Error Distance (ED): is the distance between the estimated
location and the actual location of the target.
2. Conﬁdence Zone (CZ): is the location area identiﬁed by our
scheme, i.e. the possible geographical area where the target
is located. The smaller the area, the more accurate the result
is.
3. Location Error Probability (LEP): is the probability that the
target is not in the conﬁdence zone deﬁned by the scheme. In
some cases, the algorithm returns a conﬁdence zone that is
incorrect, i.e. that does not contain the actual location of the
target. The lower the LEP is, the more reliable the scheme is.
Figure 4 and Figure 5 display respectively the error distances and
conﬁdence zones for difference values of RT T _f actor.
2Triangle Inequality Violations that occur in the Internet [13] may
disturb the shortest path routing, we then observe few points where
Min HTTP pings are lower than ICMP pings.
These ﬁgures clearly show that an RT T _f actor in the range 3.3
and 4.0 provides the best localization performance. These values
achieve a median distance error of approximately 100 km and a
median conﬁdence zone of 100 km2, which allows for regional
and even city-based localization of malicious targets.
The CDF of conﬁdence zone areas (not shown here due to space
constraints) conﬁrm that an RT T _f actor of 3.3 is a good com-
promise, with an assigned conﬁdence region with a total area less
than 105 km2 for around 80% of the location estimates. This
area is slightly larger than one of the smallest U.S states. A
conﬁdence region less than 103 (corresponding to the area of a
metropolis) is achieved by roughly half of the proxied targets es-
timations. The conﬁdence zone increases again when using a too
large RT T _f actor, because in cases of non crossing estimations
of the landmarks, CBG estimates the position of the target as the
geographic location of the closest landmark (i.e. the landmark that
estimated the lowest geographic distance). In such a case, since we
do not deploy a large number of landmarks, the conﬁdence area in-
creases as it is computed as the area of the circle that would have
the closest landmark as a center.
The cumulative distribution function of the observed error dis-
tance, across all localized targets, is shown in ﬁgure 6. This ﬁg-
ure conﬁrms that, choosing an RT T _f actor within the range of
[3, 3.5] allows for accurate localization. It is worth noticing that,
when using an RT T _f actor of 3.3, roughly 90% of the prox-
ied targets were localized with an error less than 400 km. Al-
though other curves show higher error distances, the steeper slope
of these CDF, compared to the non-proxied curve, shows that the
RT T _f actor is indeed impacting the relationship between net-
work and geographic distances that is assumed by the constraint
based geolocation approach. This is mainly due to the fact that
when increasing the RT T _f actor, the distance over-estimation
that is considered by each landmark in equation 1 is reduced. In
other words, when increasing the RT T _f actor, the distance that
separates other data points from the best line decreases, and so the
conﬁdence distance; Since we estimate the location of the target
as the centroid of the area of intersection of landmarks estimate of
the target position, and since that area decreases when reducing the
overestimation, such choice leads to smaller error distances.
A too large RT T _f actor may also lead to either non intersec-
tion of the landmarks estimates of the target’s position, or to non
accurate estimation of the conﬁdence zone, and to a large LEP .
However, when varying the RT T _f actor, we observed that most
of the conﬁdence zones (more than 80%, i.e. a LEP of 20%)
actually contain the targets. This shows that our approach ex-
 60 80 100 120 140 160 180 200 220 240 260 2802.02.12.22.32.42.52.62.72.82.93.03.13.23.33.53.73.94.04.16.08.010.0Distance (km)RTT factorMean Error DistanceMedian Error Distance 10 100 1000 10000 100000 1e+06 1e+072.02.12.22.32.42.52.62.72.82.93.03.13.23.33.53.73.94.04.16.08.010.0Log10 Area (km2)RTT factorMedian Confidence Zone187Domain (.com) Country
Error
Distance
Total
Proxies
Avg.
Proxies
smsinlinea
terrorfear
besthandycap
orldlovelife
PL
GE
GE
GE
173.1
237.7
377.2
406.8
176
189
165
178
46
47
54
47
Table 1: Localization of few wild fast-ﬂux domains using 30
Europe landmarks.
measures. An RTT factor of 3.3 was used in accordance to the
best results of previous validation on PlanetLab. On average 182
fast-ﬂux proxies were resolved through the DNS and used for each
domain.
Table 1 displays a sample of the list of domains that were re-
trieved using the honeypot and then localized using our technique.
An IP-to-geolocation database [5] has been used to obtain the ac-
tual position of the mothership server and to compute the error dis-
tances. The “total proxies” columm displays the total number of
unique proxies discovered for each domain. The “avg. proxies”
column displays the average number of proxies used by each land-
mark to geolocalize the target.
Note that, as illustrated by Figure 7, the performance of our
scheme increases with the number of proxies. In our scheme, each
landmark evaluates the distance of the server by selecting the proxy
that provides the smallest HT T P _P ing value. Therefore, the
largest the number of proxies, the higher the probability that the
minimum proxied ping is close to the actual direct ping, and there-
fore the more accurate the localization result is. To our advantage,
fast-ﬂux servers use hundreds or thousands of proxies. It should
ﬁnally be noted that the number of landmarks has an impact on the
localization accuracy, as shown in [4].
Figure 7: Impact of the number of proxies on the error dis-
tances.
The error distances for all the domains lied within a 700 km
range, which is in line with our validation on PlanetLab and out-
performs the results of the non proxied case. An extensive list
of these results can be found on planete.inrialpes.fr/
projects/geoloc.
6. CONCLUSION AND FUTURE WORK
In this paper, we presented a framework to geolocalize proxied
hosts in the Internet. We assessed its performance by applying it to
malicious hidden servers localization in fast-ﬂux networks.
Despite the possible non optimal deployment of our measure-
ment infrastructure, with a limited number of landmarks, the re-
sults obtained show the effectiveness of our method in localizing
Figure 6: ED. CDF of error distance for different values of
RT T _f actor.
hibits a high ratio of successful localization inside the conﬁdence
zone. Smaller RT T _f actor results in a LEP of 10% but provides
higher error distances. There is a clear trade-off between the accu-
racy provided by the scheme and the risk that the reported location
is incorrect.
5. LOCALIZING HIDDEN FAST-FLUX
SERVERS IN THE WILD
In order to validate our results in real scenario we studied the be-
haviour of a real fast-ﬂux campaign in the wild. This was achieved
by inﬁltrating the fast-ﬂux network and having one of our comput-
ers act as a fast-ﬂux proxy. That in turn allowed us to trace the
mothership server IPs and use this information to ultimately vali-
date our previous results.
In our test, we decided to inﬁltrate a botnet commonly referred
to as Waledac [7], a botnet that shares part of its infrastructure with
the now defunct Storm botnet [6]. This particular botnet has been
chosen because of its sophisticated use of fast-ﬂux inherited from
Storm.
Our experimental setup consisted of a single Honeypot
[10]
equipped with a Virtual Box [12] virtual machine. Five differ-
ent instances of Windows XP were hosted on this machine, each
having its own public and non ﬁrewalled IP address. The guest
Windows machines were each infected with a copy of Waledac 3.
Special cautionary measures were taken in order to prevent the in-
fected honeypot from participating in harmful or illegal activities,
such as blocking outgoing SMTP trafﬁc. The honeypot has been in
activity for two weeks at the end of April 2009. A network sniffer
was placed on the host machine to monitor and ﬁlter all the trafﬁc
on the infected machines.
As expected, according to previous research [8], after two days
of activity our honeypot has been selected to become a fast-ﬂux
proxy, which allowed us to have an in-depth view of the fast-ﬂux
hosting infrastructure used.
During the two weeks of activity we were able to log 54 differ-
ent fast-ﬂux domains and, by looking at the logs, identify the IP
addresses of the mothership servers. The domain names were then
geolocalized using the technique described in the previous sections.
The IP addresses of the motherships were not used as input to our
geolocalization tool, but served only to validate our approach. In
these experiments 30 PlanetLab nodes were used to perform the
3The malware
www.offensivecomputing.net
b9f f ce1c39cb554510e7c47caec26750
binary was
retrieved
on
with MD5
http://
hash:
 0 0.2 0.4 0.6 0.8 1 0 200 400 600 800 1000CDFError Distance (km)Non-proxiedRTT factor 2.2RTT factor 3.3RTT factor 3.7 100 150 200 250 300 350 400 450 500 5501015202530Error Distance (Km)Number of proxiesMean Error DistanceMedian Error Distance188proxied servers. Given the gain offered by our approach in terms
of accuracy, one can envisage a strategic deployment of landmarks
to allow for much more accurate localization of malicious servers,
which would considerably help law enforcement.
It might be argued that inﬁltrating a fast-ﬂux botnet, as we did in
Section 5 for validation purpose, is the most efﬁcient and accurate
way to localize the hidden servers behind it. We argue that such
an approach has several major drawbacks: it requires extensive re-
sources to set up; might incur into legal problems by effectively
participating in illegal activities; require knowledge of which spe-
ciﬁc botnet is using a speciﬁc domain, information that is notori-
ously difﬁcult to obtain. We note that our approach only requires
network probes to be sent, and in that, is non intrusive. It can be
used as a ﬁrst monitoring tool in order to assess the possibility of
more decisive actions.
Future work will consider possible counter-measures against our
localization scheme. In essence, malicious servers, might add ran-
dom delays in proxies to prevent or disrupt geolocalization. Al-
though, this approach would be not practical since adding delays
would degrade the service provided by the malicious servers, we
believe that the delay introduced can be ﬁltered out using suitable
calibration techniques at the landmarks level. Another objective of
our future work is to extend our scheme to identify, in addition to
the location of hidden servers, their actual IP addresses. This would
be very useful in order to black-list these malicious servers.
7. REFERENCES
[1] BERNARD WONG, IVAN STOYANOV, E. G. S. Octant: A
comprehensive framework for the geolocalization of internet
hosts. In Symposium on Networked System Design and
Implementation NSDI (2007).
[2] DABEK, F., COX, R., KAASHOEK, F., AND MORRIS, R.
Vivaldi: A decentralized network coordinate system. In
SIGCOMM (2004), pp. 15-26.
[3] DRAPER, R, N., AND HARRY, S. Applied Regression
Analysis (Wiley Series in Probability and Statistics), ed.
John Wiley & Sons Inc.
[4] GUEYE, B., ZIVIANI, A., CROVELLA, M., AND FDIDA,
S. Constraint-based geolocation of internet hosts.
Networking, In IEEE/ACM Transactions on 14, 6 (Dec.
2006), 1219-1232.
[5] HEXASOFT DEVELOPMENT SDN. BHD. ("HDSB").
Ip-to-geolocation db. http://www.ip2location.com/, 2009
(accessed Apr, 2009).
[6] HOLZ, T., STEINER, M., DAHL, F., BIERSACK, E., AND
FREILING, F. Measurements and mitigation of
peer-to-peer-based botnets: a case study on storm worm. In
LEETÕ08: Proceedings of the 1st Usenix Workshop on
Large-Scale Exploits and Emergent Threats (Berkeley, CA,
USA, 2008), USENIX Association, pp. 1-9.
[7] NAZARIO, J. Walking waledac.
http://asert.arbornetworks.com/2009/01/ walking-waledec/,
2009 (accessed Apr, 2009).
[8] NAZARIO, J., AND HOLZ, T. As the net churns: Fast-ﬂux
botnet observations. In the 3rd International Conference on
Malicious and Unwanted Software, 2008. MALWARE 2008.
pp. 24-31.
[9] NG, E. T. S., AND ZHANG, H. A network positioning
system for the internet. In ATEC Õ04: Proceedings of the
annual conference on USENIX Annual Technical Conference
(Berkeley, CA, USA, 2004), USENIX Association, p. 11.
[10] PROVOS, N. A virtual honeypot framework. In Proceedings
of the 13th USENIX Security Symposium (2003), pp. 1-14.
[11] RAJAB, M. A., ZARFOSS, J., MONROSE, F., AND
TERZIS, A. My botnet is bigger than yours (maybe, better
than yours): why size estimates remain challenging. In
HotBots’07: Proceedings of the ﬁrst conference on First
Workshop on Hot Topics in Understanding Botnets (Berkeley,
CA, USA, 2007), USENIX Association.
[12] SUN MICROSYSTEMS INC. Virtual box.
http://www.virtualbox.org/, 2009 (accessed Apr, 2009).
[13] ZHENG, H., LUA, E. K., PIAS, M., AND GRIFFIN, T. G.
Internet routing policies and round-trip-times.In Passive
Active Measurement Conference PAM (2005).
189