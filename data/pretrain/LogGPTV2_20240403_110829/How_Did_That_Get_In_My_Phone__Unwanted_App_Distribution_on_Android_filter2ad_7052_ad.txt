it as malware or PUP based on the presence of PUP-related
keywords in the AV labels (e.g., adware, unwanted). Overall,
AVClass labels 2.4M (76%) of the APKs belonging to 2.9K
families. For the remaining 700K samples with a VT report,
no family was identiﬁed as either they were not detected by
any AV engine or their AV labels were generic.
Table VI shows the 20 most prevalent malware and PUP
families identiﬁed by AVClass. PUP clearly dominates mal-
ware with 17 versus three families. Most PUP families are
related to abusive advertisement including six advertisement
libraries (inmobi, leadbolt, airpush, domob, dianjin), four ad-
ware families (hiddad, anydown, mocen, dowgin), and one app
generator that monetizes through advertisement (appsgeyser).
The ad libraries are added by other applications and their
behaviour varies from displaying in-app ads like inmobi and
leadbolt, to more aggressive techniques used by dianjin and
airpush such as ads in the system notiﬁcation bar or shortcut
ads on the home screen or in the application list. Some ad
libraries also collect personal identiﬁable information (e.g.,
GPS coordinates) and track users using permanent identiﬁers
(e.g., IMEI), which violates Google Play policies [1]. Among
the PUP families there are also three tools used for obfuscating
mobile apps (jiagu, secapk, secneo). Obfuscation tools are
commonly used by malware, but may be used also by benign
software causing false positives [14].
The most prevalent malware family is necro, a trojan drop-
per that infected over 680K devices. Necro has been observed
embedded in popular applications available in the Play market
such as CamScanner [36]. According to the CamScanner
developers the malware made it into their app through the third
party advertising SDK provided by AdHub [34]. The table
also includes two information-stealing families (datacollector,
autoins). Other notorious malware families outside the top
20 are the triada rootkit (29K devices) [22], [44], the wroba
banking trojan (21K) [56], and agentsmith (16K) that replaces
installed apps such as WhatsApp with modiﬁed versions that
show fraudulent ads [39]. We also search for ransomware
and other banking trojans in our dataset. We identify 11
ransomware families affecting in total 31K devices includ-
ing svpeng, congur, and jisut. This very modest prevalence
matches industry reports that show ransomware decreasing in
the wild after 2017 [7], [8]. We also identify 17 banking trojans
affecting in total 30K devices. The most prevalent families
are wroba, hqwar, and asacub. Industry reports mention that
banking trojans samples increase over time, especially after
2018 [7], [12]. Their small prevalence in our dataset can
be potentially explained by banking trojans being heavily
polymorphic and AVs not always being able to assign them
non-generic labels.
Takeaway. The higher PUP sample prevalence in user devices
observed in Section V-A also manifests in the largest families
being PUP. Top PUP families are mostly ad-related and use
popular obfuscation tools for protection. The largest malware
families are information stealers, but we also observe rootkits
and ransomware in tens of thousands of devices.
VI. UNWANTED APP DISTRIBUTION
In this section, we investigate unwanted app installation
vectors, i.e., how unwanted apps ended up on the devices. To
this end, we use the Subset dataset in Table I with 412M install
events, corresponding to the 24% install events for which we
could recover parent information, as explained in Section IV.
We uniquely identify an installer by the pair of its package
name and its signer. That way we can differentiate unwanted
installers that impersonate (i.e., use the package name of) a
benign installer, as well as apps that have multiple signers,
e.g., system apps that are signed by different device vendors.
As explained in Section V-A, we consider unwanted any APK
ﬂagged by at
least 4 AV engines. For each installer, we
calculate the installer detection ratio (IDR), i.e., the fraction
of unwanted APKs it installs over the total number of APKs it
installs. We also compute the vector detection ratio (VDR) as
the fraction of unwanted APKs installed using a distribution
vector (e.g., alternative markets, browsers) over all APKs
installed through that vector.
A. Distribution Vectors
To analyze what fraction of installs is delivered through
each distribution vector we ﬁrst classify the installer apps as
detailed in Section IV. Table VII summarizes the top app
distribution vectors we have identiﬁed. For each distribution
vector the left part shows the percentage of install events
(all and unwanted) the distribution vector is responsible for.
The middle part summarizes the installers in the category: all
installers, unwanted installers, installers signed with a platform
key, and package names and signers for the installers. The
right part of the table summarizes the child APKs installed
through the distribution vector: number of packages, signers,
and the vector detection ratio. VDR is the fraction of unwanted
APKs installed using a distribution vector over all APKs
installed via that vector. RVDR is the relative VDR with
respect to the Play market, which is set as 1.0. Overall, as
we explained in Section IV, we were able to classify 14%
of the installers covering 96.3% of the 412M install events.
While the fraction of classiﬁed installers is low, we cover the
vast majority of installs, enabling us to accurately compare
various distribution vectors.
The main distribution vector is the Play market, responsible
for 87% of all and 67% of unwanted installs. While the
percentage of unwanted installs is highest for the Play market,
its VDR is only 0.6% and its RVDR the fourth lowest. This
illustrates that installing from the Play market is safer than
installing from most distribution vectors including alternative
markets, browsers, and IM. However, unwanted app developers
have a large incentive to make their apps appear in the
Play market since it provides the apps with higher visibility,
reputation, and trust. This leads to a low fraction, but large
number overall, of unwanted apps being able to bypass Play’s
defenses. The effectiveness of Play defenses against unwanted
apps is illustrated by the lower rate of unwanted installs
compared to all installs, i.e., they manage to remove a fraction
of the unwanted apps. On the other hand, the defenses (if
any) against unwanted apps used by other distribution vectors,
save for commercial PPI, do not seem to be effective. The
second largest distribution vector are the over 100 alternative
markets identiﬁed, responsible for 5.7% of all installs and
10.4% of unwanted installs. We detail the top 10 markets in
Table VIII and discuss them below. Prior work has analyzed
the distribution of unwanted apps through markets by crawling
ofﬁcial and alternative markets (e.g., [77], [83]). However,
such crawling is limited to a ﬁxed set of markets and a small
fraction of apps in each market. Also, paid apps are typically
ignored. In addition, some markets may not provide a web-
based app download interface that researchers can easily crawl,
e.g., the Vivo market in [77]. Compared to prior work, we can
observe apps installed by user devices regardless of the type
of app (paid or free) and from which market they come (we
observe over one hundred alternative markets).
The third distribution vector is through backup restoration.
These installs correspond to restoration of previously saved
apps in the cloud, as well as transfer of apps while cloning an
old phone into a new phone. These apps are not an intentional
distribution vector, but surprisingly they are responsible for
nearly 5% of unwanted apps installations. For cloud backups,
the most likely explanation is that the user decided not to
uninstall the unwanted app when prompted by the AV client
and the app was thus saved. This matches with the majority of
unwanted apps installed via this vector being PUP, for which
the AV client generates lighter and less frequent notiﬁcations.
In some cases it may also happen that
the backup was
taken before installing the AV client. Phone cloning apps
are typically privileged (i.e., signed by the platform key) so
that
they can copy all apps in an old phone to the new
phone. Otherwise, they cannot access the /system/ directory
where system apps are installed. Thus, it may happen that
privileged unwanted apps, which cannot be uninstalled by
the AV client, are surviving a phone change by the user
thanks to the high privilege of the phone cloning apps. One
example involves a pre-installed unwanted app infected with
the CoolReaper backdoor [5]. CoolReaper was discovered in
phones manufactured by Coolpad, a Chinese device vendor,
and among its many capabilities, it can perform fake over-
the-air (OTA) updates for installing other unwanted apps. In
conclusion, there seems to be an opportunity for backup and
phone cloning apps to improve defenses against unwanted
apps, e.g., by performing AV scans on the saved apps.
TABLE VII: Summary of app distribution.
Installs
All
87.2%
5.7%
2.0%
0.7%
0.4%
0.2%
Unw.
Vector
67.5%
Playstore
10.4%
Alt-market
4.8%
Backup
10.5%
Pkginstaller
6.0%
Bloatware
0.1%
PPI
<0.1% <0.1%
Fileshare
<0.1% <0.1%
Themes
<0.1% <0.1%
Browser
<0.1% <0.1%
MDM
Filemanager <0.1% <0.1%
<0.1% <0.1%
IM
Other
<0.1%
0.3%
Unclassiﬁed
All
All Unw.
3
10
31
102
2
49
5
79
54
2
0
21
3
13
0
2
4
47
7
1
11
58
2
13
68
151
2.4K
3.7% <0.1% 3.5K
100.0% 100.0% 4.2K
2.5K
Installer
Plat.
0
15
24
25
28
2
4
2
3
1
9
0
28
386
79
Sig.
Pkg.
9
2
67
87
39
31
74
11
41
37
11
20
11
13
2
2
38
40
6
7
43
32
11
10
98
125
3.3K
814
3.6K 1.0K
Children
VDR RVDR
Sig.
Pkg.
1.0
0.6%
1.2M 816K
5.3
3.2%
128K
77K
1.5
0.9%
528K 355K
4.0
2.4%
197K 127K
1.2%
2.0
2.1K
1.3K
0.5
0.3%
1.3K
1.5K
2.1
1.3%
7.4K
8.8K
0.5
0.3%
14
634
6.3
3.8%
3.3K
4.8K
0.3%
0.5
766
489
4.3
2.6%
4.7K
6.6K
4.8
2.9%
1.2K
2K
6.5
5.3K
9.1K
3.9%
0.1
16K <0.1%
91K
1.6M 992K
1.6%
2.6
Installs by package installers rank fourth by fraction of
installs, but second by unwanted installs (10.5%). These
largely correspond to manual installs by the user, who may
be consciously installing unwanted apps that offer desired
functionality. For these installs, the vector through which the
user downloaded the app into the phone is not known.
Bloatware is another surprisingly high distribution vector,
being responsible for 6% of unwanted installs. Bloatware are
pre-installed apps with unclear functionality. As explained in
Section IV we consider in this category apps signed by a
device vendor or a carrier, which do not belong to any of the
other categories, i.e., for which we do not understand why they
are installing apps. The most likely reason behind installs in
this category, as well as the Other and Unclassiﬁed categories,
is advertising. In other words, if we do not understand why an
app is installing apps from other signers, then we assume that
publishers of the child apps are paying for the installations. We
discuss such pay-per-install (PPI) agreements in Section VI-B.
In summary, this high number of installs by bloatware likely
indicates aggressive ad-based monetization by device vendors
and carriers of the phones they sell.
The browser category shows that app downloads from the
Web are rare (<0.1% of all installs), but have the highest risk
of being unwanted (3.8% VDR). In particular, the browser
VDR is larger than that of alternative markets. Downloading
apps through the browser is a riskier proposition than down-
loading them from markets, even the alternative ones. This
highlights a need for stronger browser-based defenses against
unwanted app downloads.
Next, we analyze the markets and browsers categories to
understand differences between apps in the same category.
Markets. Table VIII shows the top 10 markets by number of