# Bug report
## Describe the bug
webpack's `config.resolve.alias` works different for initial landing and
navigation. It seems to be ignored when landing on a page but used as expected
when navigating to a page (via next/link).
Edit: Difference is only observable for files inside `node_modules/`
## To Reproduce
See https://github.com/eps1lon/next-webpack-alias#steps-to-reproduce
## Expected behavior
aliases are used for initial landing as well. The idea for the implementation
was taken from https://github.com/zeit/next.js/tree/canary/examples/with-
absolute-imports
## Screenshots
N/A
## System information
  * OS: Ubuntu 18.04.2 LTS
  * Browser: Version 75.0.3770.80 (Official Build) (64-bit)
  * Version of Next.js: 8.1.0 and 9.0.2
## Additional context
The use case in the constructed repository is simpler than our actual use case
but I believe that config.resolve.alias working differently in some cases is
the root cause.
We have docs and published packages living in a monorepo. Some of the npm
packages used in our docs depend on our packages and want only a single
version of our published packages in the docs bundle.
## Debug notes
### why is resolve.alias ignored?
`.next/server/static/BUILD_ID/pages/*` uses standard `require` instead of
inlining those modules. The node_modules/ are included via node's `require` at
which point webpack's resolve.alias will no longer be of effect. This may be
an issue with chunking? Should probably just disable it for
static/BUILD_ID/pages
### fix iteration
  * removing `externals` from the webpack config fixes the issue. Need to find out why all node_modules should be externals.