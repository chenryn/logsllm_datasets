---
title: .alter column policy encoding command
description: Learn how to use the `.alter column policy encoding` command to change the encoding policy.
ms.reviewer: alexans
ms.topic: reference
ms.date: 04/20/2023
---

# .alter column policy encoding command

This command allows you to modify the encoding policy for a specified column. For a comprehensive overview of encoding policies, refer to [Encoding Policy](encoding-policy.md).

> [!NOTE]
> Changes to the encoding policy will not affect data that has already been ingested. Only new ingestion operations will follow the updated policy.

## Permissions

To execute this command, you must have at least [Table Admin](access-control/role-based-access-control.md) permissions.

## Syntax

```kusto
.alter column <EntityIdentifier> policy encoding [type = <EncodingPolicyType>]
```

> [!NOTE]
> If the `type` parameter is omitted, the existing encoding policy profile will be reset to the default value.

[!INCLUDE [syntax-conventions-note](../../includes/syntax-conventions-note.md)]

## Parameters

| Name                 | Type   | Required | Description                                                                 |
|----------------------|--------|----------|-----------------------------------------------------------------------------|
| *EntityIdentifier*   | string | Yes      | The identifier for the column.                                              |
| *EncodingPolicyType* | string | No       | The type of encoding policy to apply. See [Encoding Policy Types](#encoding-policy-types) for possible values. |

### Encoding Policy Types

The following table lists the possible values for the *EncodingPolicyType* parameter:

| Encoding Policy Profile | Description                                                                                                                                                   |
|-------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------|
| `Identifier`            | Suitable for columns containing ID-like information (e.g., GUIDs). This policy applies the necessary index to improve query performance and reduce storage size. |
| `BigObject`             | Suitable for dynamic or string-type columns holding large objects (e.g., the output of the [hll aggregate function](../query/hll-aggfunction.md)). This policy disables the index and sets the `MaxValueSize` property to 2 MB. |
| `BigObject32`           | Similar to `BigObject`, but sets the `MaxValueSize` property to 32 MB.                                                                                        |
| `Vector16`              | Designed for storing vectors of floating-point numbers in 16-bit precision (using the [Bfloat16 format](https://en.wikipedia.org/wiki/Bfloat16_floating-point_format) instead of the default 64 bits). This profile reduces storage requirements by a factor of 4 and significantly accelerates vector processing functions such as [series_dot_product()](../query/series-dot-product-function.md) and [series_cosine_similarity()](../query/series-cosine-similarity-function.md). |
| `Null`                  | Resets the current default encoding policy for the column and clears any previously set encoding policy profile.                                                |

## Example

```kusto
.alter column Logs.ActivityId policy encoding type='identifier'
```

## Related Content

- [Encoding Policy](encoding-policy.md)
- [.show encoding policy](show-encoding-policy.md)

---