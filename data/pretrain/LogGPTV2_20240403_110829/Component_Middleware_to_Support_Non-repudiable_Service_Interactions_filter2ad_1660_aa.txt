title:Component Middleware to Support Non-repudiable Service Interactions
author:Nick Cook and
Paul Robinson and
Santosh K. Shrivastava
Component Middleware to Support Non-repudiable Service Interactions
Nick Cook, Paul Robinson and Santosh Shrivastava
School of Computing Science, University of Newcastle, UK
Email: {nick.cook, p.robinson, santosh.shrivastava}@ncl.ac.uk
Abstract
The wide variety of services and resources available
over the Internet presents new opportunities to create value
added, inter-organisational Composite Services (CSs) from
multiple existing services. To preserve their autonomy and
privacy, each organisation needs to regulate access both to
their services and to shared information within the CS. Key
mechanisms to facilitate such regulated interactions are the
collection and veriﬁcation of non-repudiable evidence of
the actions of the parties to the CS. The paper describes how
component-based middleware can be enhanced to support
non-repudiable service invocation and information sharing.
A generic implementation, based on a J2EE application
server, is presented.
Keywords: System Security; FT Architecture/Middleware
Software Engineering; Non-repudiation; Service
Composition
1. Introduction
The wide variety of services and resources available
over the Internet presents new opportunities to create value-
added, inter-organisational Composite Services (CSs) from
multiple existing services. The resulting CS can involve
close interaction among the constituent services of partici-
pating organisations. Nevertheless, each organisation needs
to maintain their autonomy and privacy. This implies the
regulation of access both to the services offered within a
CS and to information that is shared in a CS. Regulation
of access to shared information includes validation by all
interested parties of any proposed changes to that infor-
mation. Since the intention is to compose a CS from ex-
isting services, regulatory requirements should be met by
the extension, as opposed to replacement, of existing ser-
vices. The main contribution of this paper is to address this
requirement by extending component-based middleware to
provide a ﬂexible framework to support regulated interac-
tion between organisations.
It is assumed that each organisation has a local set of
policies for an interaction that is consistent with an over-
all agreement (or set of agreements) between organisations
(the business contract). The formation and operation of the
CS must not compromise local policies and must comply
with the business contract. There are two aspects to reg-
ulation in this context: (i) high level mechanisms to spec-
ify and enforce contractual rights and obligations (exam-
ples include work on Law Governed Interaction [13] and on
contract representation and monitoring [14]); and (ii) lower
level mechanisms to generate a non-repudiable audit trail
that can be used to record and to verify that observed in-
teraction behaviour adheres to agreements. An interaction
is non-repudiable if it is impossible for any party to the
interaction to subsequently deny their participation. This
paper presents two mechanisms that together form the ba-
sic building blocks for trusted interaction: non-repudiable
service invocation and non-repudiable information shar-
ing. These provide abstractions that are familiar from the
intra-organisational context and result in regulated interac-
tion in the inter-organisational context. For example, non-
repudiable service invocation can be used to audit requests
between organisations to access or modify each other’s in-
ternal information, or for transfer of control over shared
information. Non-repudiable information sharing regulates
access to and updates of shared information.
The contributions of this paper are that it: (i) introduces
the abstraction of trusted interceptors that mediate the in-
teraction between organisations to achieve the exchange of
non-repudiation evidence and to validate changes to shared
information; (ii) shows that this abstraction is sufﬁciently
general to apply to a variety of interaction scenarios; and
(iii) demonstrates the practicality of the abstraction through
a prototype implementation in component-based middle-
ware (such as J2EE [16]). Section 2 provides a motivat-
ing example. Section 3 discusses the trusted interceptor
abstraction and our model of non-repudiable interaction.
Section 4 describes the prototype component-based imple-
mentation of non-repudiation services. Related work is dis-
cussed in Section 5. Section 6 concludes the paper.
Proceedings of the 2004 International Conference on Dependable Systems and Networks (DSN’04) 
0-7695-2052-9/04 $ 20.00 © 2004 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 11:47:40 UTC from IEEE Xplore.  Restrictions apply. 
2. Motivating example
This section describes the scenario of a specialist car
manufacturer that combines components from various part
suppliers to satisfy the requirements of a specialist car
dealer (acting on behalf of the ultimate customer). Figure 1
Virtual
Enterprise
Specialist car 
        manufacturer
Part supplier A
Car dealer
Part supplier C
Part supplier B
NR-Invocation
    organisation
local database
NR-Sharing
shared space
shared information
Figure 1. Specialist car manufacturer applica-
tion
presents the overall structure of the interaction between the
specialist car dealer, the car manufacturer and, in this ex-
ample, three car part suppliers. In effect these enterprises
collaborate to form a virtual enterprise (VE) to deliver a
specialist car to the car dealer’s customer. That is, the VE
creates a Composite Service (CS) for the speciﬁcation and
delivery of a specialist car. The CS interactions must be
regulated to ensure that each member of the VE obtains the
value they expect from the collaboration and are bound to
the corresponding commitments they make.
CS interactions involve invocation of services between
members of the VE and the sharing of information that is
held in common by the VE. For example, Figure 1 depicts
the car manufacturer and suppliers A and B negotiating the
delivery of some component. The component is required to
meet an overall speciﬁcation negotiated between the dealer
and the manufacturer. The manufacturer is then required
to reach agreement with the suppliers on details such as:
interfaces between parts, cost of customisation and deliv-
ery schedules. It is natural to share this information so that
each party can update it (subject to the agreement of the
other parties). Other artifacts that are shared, and may be
subject to renegotiation, are the agreements governing the
interaction. In addition to update to shared information, the
process of reaching agreement on the speciﬁcation of a car
component, and the car as a whole, will involve requests
between parties to perform actions on each other’s behalf.
Actions may range from the resolution of queries on the
range of parts available to requests to act on shared infor-
mation (initiating a transfer of control). These requests are
naturally expressed as service invocations.
To regulate interactions of the above type, a given ac-
tion must be attributable to the party who performed the
action and commitments made must be attributable to the
committing party. For example, it should not be possible
for a client to subsequently disavow the request and con-
sumption of a service. Similarly, it should not be possible
for the service provider to subsequently deny having de-
livered a service. If information is shared then the parties
sharing the information should be able to validate a pro-
posed update, the update should be attributable to its pro-
poser and the validation decisions with respect to the up-
date attributable to the other parties. That is, to regulate
an interaction we require attribution, validation and audit.
Non-repudiable attribution binds an action to the party per-
forming the action. Validation determines the legality of an
action with respect to interaction agreements. Audit ensures
that evidence is available in case of dispute and to inform
future interactions. This paper addresses these require-
ments by providing two building blocks for regulated in-
teraction between organisations: non-repudiable service in-
vocation (NR-Invocation) and non-repudiable information
sharing (NR-Sharing). Component middleware support for
regulated service interactions ensures that actions of a mem-
ber of a VE are non-repudiably bound to the member; the
acceptance, or otherwise, of those actions is non-repudiably
bound to the other members of the VE; and that service in-
vocations, and the results of those invocations, are bound to
the parties to the invocation.
3. Building blocks for trusted interaction
This section discusses the abstraction of trusted inter-
ceptors that mediate inter-organisational interaction and de-
scribes our model of non-repudiable interaction in terms of
this abstraction. We argue that the trusted interceptor ab-
straction is sufﬁciently general to apply to a variety of in-
teraction scenarios. For example, it is not bound to partic-
ular non-repudiation protocols but can be seen as a ﬂexible
framework in which protocols can be deployed as appropri-
ate to the regulatory regime governing an interaction or to
the trust relationships between the parties to an interaction.
3.1. Trusted interceptors and trust domains
interaction
requires
Inter-organisational
regulatory
mechanisms to ensure: (i) that misbehaviour by dishonest
parties does not disadvantage honest parties and (ii) that
honest parties share a veriﬁable, consistent view of the
nature of the interaction. However, different types of inter-
action will demand different mechanisms. The choice of
mechanisms to deploy will be determined by application-
speciﬁc factors such as: the relationship between the parties
to the interaction, the legal framework and agreements that
Proceedings of the 2004 International Conference on Dependable Systems and Networks (DSN’04) 
0-7695-2052-9/04 $ 20.00 © 2004 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 11:47:40 UTC from IEEE Xplore.  Restrictions apply. 
govern the interaction, and the application domain within
which the organisations operate. The common feature of
all regulatory mechanisms is that they somehow mediate
the interaction between parties. The trusted interceptor
abstraction generalises this notion of mediation.
As
Org. C
interceptor
interceptor
Org. A
trust
domain
Org. B
interceptor
Figure 2. Trusted interceptors
shown in Figure 2, conceptually, each party has a trusted
interceptor that acts on its behalf. The introduction of
trusted interceptors transforms an unregulated domain into
a trust domain for the conduct of regulated, audited and fair
interaction. Informally, a fair interaction is one in which
honest parties cannot be disadvantaged by the behaviour of
dishonest parties (for details, see Markowitch et al [12] who
discuss the evolution of the notion of fairness in exchange
protocols). The trusted interceptor abstraction insulates
the parties to the interaction from the detail of underlying
mechanisms used to meet regulatory requirements.
In-
terceptors can implement different mechanisms to meet
different interaction requirements and can be reconﬁgured
to meet changing requirements as relationships evolve.
Trusted interceptors provide a trust domain by policing
access to the domain and regulating and auditing actions
within the domain. To support dispute resolution, the fact
that trusted interceptors mediated the interaction provides
any honest party with irrefutable evidence of their own ac-
tions within the domain and of the observed actions of other
parties. The regulatory mechanisms used to support a trust
domain will vary according to the degree of trust between
parties. For example, a more lightweight mechanism can
be used when parties, who otherwise trust each other, need
a veriﬁable audit trail of their interaction compared to the
situation where parties are mutually mistrusting (and re-
quire strong fairness guarantees). Also, certain types of in-
teraction may be inherently more trustworthy than others.
For example, there may be stronger incentives to good be-
haviour in a long-running interaction involving update to
shared information between members of a VE compared
with a one-off service invocation. This observation is sup-
ported by work on the Iterative Prisoner’s Dilemma [1]
where the prospect of and payoff from future interaction can
even induce antagonists to cooperate. Ultimately, trusted
interceptors construct a trust domain that, under assump-
tions agreed between the parties to an interaction, delivers
safety and liveness guarantees. Safety guarantees ensure
that the interaction complies with agreements between or-
ganisations — for example, that changes to shared informa-
tion are unanimously agreed. Liveness guarantees address
forward progress — for example, that honest parties can
resolve an exchange despite non-cooperation of dishonest
parties.
TTP
trust
domain
Org. B
Org. A
(a) inline TTP trust domain
Org. A
TTP
A
trust
domain
TTP
B
Org. B
(b) distributed inline TTP trust domain
interceptor
interceptor
Org. A
trust
domain
Org. B
(c) direct trust domain
Figure 3. Trust domains using trusted inter-
ceptors
Figure 3 shows three approaches to the use of trusted in-
terceptors to provide a trust domain (for simplicity, between
two organisations). In both Figure 3(a) and 3(b), communi-
cation between organisations A and B is routed via Trusted
Third Parties (TTP(s)). Figure 3(a) shows a single TTP act-
ing on behalf of both organisations. Figure 3(b) is the con-
struction of an inline TTP from TTPs acting on behalf of A
and B. However constructed, the inline TTP is an intercep-
tor between the organisations and is responsible for ensur-
ing that agreed safety and liveness guarantees are delivered
to honest parties.
The alternative to interaction through inline TTPs is the
formation of a direct trust domain by the organisations
themselves. As shown in Figure 3(c), in this case, each
party hosts its trusted interceptor. The interceptors execute
protocols that deliver the guarantees required to form a trust
domain appropriate to the given interaction. Depending on
the relationship between organisations and the speciﬁc in-
teraction requirements, this direct trust domain may demand
the availability of one or more TTPs. These TTP(s) are not
directly involved in all communication between the parties
but may be called upon to resolve or abort a protocol run
Proceedings of the 2004 International Conference on Dependable Systems and Networks (DSN’04) 
0-7695-2052-9/04 $ 20.00 © 2004 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 11:47:40 UTC from IEEE Xplore.  Restrictions apply. 
to deliver fairness and/or liveness guarantees to honest par-
ties. The organisations forming a trust domain can agree on
the deployment of different interceptors to deliver different
fairness or reliability guarantees or to satisfy different ev-
identiary requirements. An advantage of the formation of
a direct trust domain is that it is easier to make trade-offs
between different requirements. For example, the imple-
mentation of non-repudiable information sharing described
in Section 4.3 involves direct interaction between organisa-
tions without the support of a TTP. Nevertheless, as shown
in [5], it has the safety property that an honest party can ir-
refutably assert the validity of the (agreed) state of shared
information despite failure and/or misbehaviour by other
parties.
It has the liveness property that if no party mis-
behaves, agreed interactions take place despite a bounded
number of temporary network and computer related fail-
ures. In effect, the risk of a loss of liveness and the resul-
tant breakdown of an interaction leading to dispute is traded
against the advantage of direct interaction between parties
without the involvement of a TTP. An alternative implemen-
tation, using different interceptors, could involve a TTP to
deliver a stronger liveness guarantee.
In the remainder of this section we describe how trusted
interceptors are used to achieve regulated service invocation
and information sharing. First, we enumerate the trusted
interceptor assumptions (some of which are trivially met
when a single TTP acts as interceptor for all parties):
1. Trusted interceptors use perfect cryptography. For ex-
ample, signatures cannot be forged and encrypted data
cannot be decrypted except with the appropriate de-
cryption key.
2. The communication channel between trusted intercep-
tors provides eventual message delivery (there is a
bounded number of temporary network and computer
related failures).
3. Trusted interceptors have persistent storage for mes-
sages (or, more precisely, evidence extracted from
messages). The minimum requirement is that inter-
ceptors ensure evidence is available for as long as is
necessary to meet their obligations to the other inter-
ceptors mediating an interaction. Longer term storage
to protect the interests of the party on whose behalf an
interceptor acts will be determined by agreement be-
tween the party and its interceptor.
4. Trusted interceptors only exchange messages that are
well constructed with respect to the interaction they
are mediating. For example: interceptors do not re-
lay information provided by the organisation they rep-
resent that is invalid with respect to a given protocol
execution; and messages exchanged are either tamper-
resistant (encrypted), or tampering is detectable and in-
terceptors will cooperate to ensure a well-constructed
message is eventually delivered.
5. Trusted interceptors execute on reliable nodes or the
interaction between them is made fault tolerant by
employing mechanisms such as those described by
Ezhilchelvan and Shrivastava [7].
Given these assumptions, trusted interceptors can cooperate
to ensure fairness and liveness for honest parties to an in-
teraction. Ultimately, since cooperation of dishonest parties
cannot be enforced, the guarantee is that trusted interceptors