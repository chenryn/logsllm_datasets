Then H5;i proceeds identically toeH5;i(cid:0)1, whereaseH5;i proceeds identically to H5;i, with the following
exceptions:
(cid:15) If there exists a tuple (tcombi; i; (cid:13)) in ICom, then in experiment H5;i, H(si
random bit in the second message fed to the adversary.
(cid:15) If there exists a tuple (tcombi; i;?) in JCom, then in experiment H5;i, H(si
random bit in the second message fed to the adversary.
(cid:15) If there exists a tuple (tcombi; i;?) in JCom, then in experiment eH5;i, H(si
random bit in the second message fed to the adversary.
(cid:13)(cid:8)1) is replaced by a
0) is replaced by a
1) is replaced by a
Note that hybrid H5;0 is identical to hybrid H4 and that the difference between every pair of consecu-
bi(cid:8)1) in case i 2 [jIComj] or (H(si
tive hybrids H5;i(cid:0)1 and H5;i is with respect to H(si
1)) in case
i 2 [jJComj], that are replaced with a random bit in H5;i. We now prove the following.
Claim 4.12 For every i 2 [(cid:20)],
f ^Hybrid
c(cid:25) fHybrid5;iFOT;S5;i(z);I ((cid:20); (s0; s1); b)g(cid:20)2N;s0;s1;b;z2f0;1g(cid:3)
5;i(cid:0)1
FOT;S5;i(cid:0)1(z);I ((cid:20); (s0; s1); b)g(cid:20)2N;s0;s1;b;z2f0;1g(cid:3)
0); H(si
and
fHybrid5;iFOT;S5;i(cid:0)1(z);I ((cid:20); (s0; s1); b)g(cid:20)2N;s0;s1;b;z2f0;1g(cid:3)
c(cid:25) f ^Hybrid
FOT;S5;i(z);I ((cid:20); (s0; s1); b)g(cid:20)2N;s0;s1;b;z2f0;1g(cid:3)
5;i
Proof:
Intuitively, the indistinguishability of any pair of hybrids follows from the computational
hiding property of the commitment scheme Com and the binding property of tcombi. Assume for
contradiction, that there exists i 2 [(cid:20)] for which hybrids ^Hybrid
and Hybrid5;i are distin-
guishable by a PPT distinguisher D with probability ".
5;i(cid:0)1
27
(cid:3)
If there exists a tuple (tcombi; i; (cid:13)) 2 ICom then deﬁne b
follows that the only difference between hybridseH5;i(cid:0)1 and H5;i is that H(si
in eH5;i(cid:0)1 while replaced with a random bit in H5;i. Next, we show how to build an adversary ACom
= 0. Then, it
b(cid:3)) is computed correctly
= 1 (cid:8) (cid:13), otherwise deﬁne b
(cid:3)
that on input a commitment Com(s) identiﬁes H(s) with probability non-negligibly better than 1
2.
2 + "
Then using the Goldreich-Levin Theorem (Theorem 3.9), it follows that we can extract value si
b(cid:3) and
this violates the hiding property of the commitment scheme Com.
More formally, consider ACom that receives as input a commitment to a randomly chosen string s,
namely Com(s). ACom internally incorporates the adversary ACom and emulates the experimenteH5;i
with the exception that in place of Com(si
b(cid:3)) with a
uniformly chosen bit, say ~b. Finally, it feeds the output of the hybrid experiment conducted internally,
namely, the view of the adversary to D, and computes an output based on D’s output g as follows:
b(cid:3)), ACom instead feeds Com(s) and replaces H(si
(cid:15) If g = 1, then ACom outputs the value for ~b as the prediction for H(s), and outputs 1 (cid:0) ~b
otherwise.
Denote by H5;i the experiment that proceeds identically to eH5;i with the exception that, in place of
b(cid:3)) we feed 1 (cid:8) H(si
b(cid:3)), namely the complement of the value of the hardcore predicate. Let
5;i denote the distribution of the view of the adversary in this hybrid. It now follows that
H(si
Hybrid
: D(v) = 1] (cid:0) Pr[(v; sb)   Hybrid5;i : D(v) = 1]
: D(v) = 1]
Pr[(v; sb)   ^Hybrid
5;i
: D(v) = 1] + Pr[(v; sb)   Hybrid
5;i
: D(v) = 1]
5;i
: D(v) = 1] (cid:0) Pr[(v; sb)   Hybrid
5;i
: D(v) = 1]
"  "
Pr[(v; sb)   ^Hybrid
5;i
i:e:;
1
2
Pr[(v; sb)   ^Hybrid
: D(v) = 1] (cid:0) (1 (cid:0) Pr[(v; sb)   Hybrid
Pr[(v; sb)   Hybrid
: D(v) = 1] +
5;i
5;i
5;i
1
2
: D(v) = 0)] >
i:e:; Pr[(cid:12)   f0; 1g : (v; s)   H b : D(v) = b] >
: D(v) = 0)]
> "
1
2
1
2
+ "
+ "
5;i and H 1 = ^Hybrid
5;i
where H 0 = Hybrid
. We now observe that sampling from H b where b
is uniformly chosen is equivalent to sampling from H5;i. Therefore, since ACom internally emulates
H5;i by selecting ~b at random and the distinguisher identiﬁes precisely if this bit ~b came from H 0 or
H 1 correctly, we can conclude that ~b is the value of the hardcore bit when it comes from H 0 and the
complement of ~b when it comes from H 1. Therefore, ACom guesses H(s) correctly with probability
7Otherwise, we can replace D with another distinguisher that ﬂips D’s output.
28
2 +". Using the list-decoding algorithm of Goldreich-Leving hardcore-predicate (cf. Theorem 3.9), it
1
follows the such an adversary can be used to extract s thereby contradicting the computational hiding
property of the Com scheme.
We remark that proving indistinguishability of Hybrid5;i and ^Hybrid
this concludes the proof of the Lemma.
follows analogously and
(cid:3)
Hybrids H6: In this hybrid execution simulator S5 does not know the sender’s inputs (s0; s1), but rather
communicates with a trusted party that computes FOT. S6 behaves exactly as S5;(cid:20) except that when
extracting the bit b it sends it to the trusted party, which returns sb. Moreover, S6 uses a random
value for sb(cid:8)1. We argue that hybrids S5;(cid:20) and S6 are identically distributed as the set fwi
gi2[(cid:20)] is
independent of fsi
b(cid:8)1
5;i
gi2[(cid:20)].
bi(cid:8)1
Claim 4.13
fHybrid5;(cid:20)FOT;S5;(cid:20)(z);I ((cid:20); (s0; s1); b)g(cid:20)2N;s0;s1;b;z2f0;1g(cid:3)
(cid:25) fHybrid5FOT;S6(z);I ((cid:20); (s0; s1); b)g(cid:20)2N;s0;s1;b;z2f0;1g(cid:3)
i
bi(cid:8)1) is replaced with a random bit for all i 2 [(cid:20)], it must
Proof: Following from the fact that H(si
hold that the values w1(cid:8)bi
are random as well as these values are masked using random independent
bits instead of the set fH(si
bi(cid:8)1)gi2[(cid:20)]. As a result, these values contribute to a random value sb(cid:8)1.
In addition, we claim that the adversary can only learn sb where b is the bit extracted by S6. This
is because A can only invoke token TKi on the commitment combi, for which is can only open in a
(cid:3)
single speciﬁc way.
Finally, note that hybrid H6 is identical to the simulation described above, which concludes the proof.
4.2.1 Relaxing to One-Way Functions
In our construction we rely on one-way permutations for a non-interactive perfectly binding commitment
scheme. Recall that, the TKCom on input ((cid:1); 0) is required to output a commitment to the challenge e and
else commitments to the si
1’s values. To relax this assumption to one-way functions, we instead need to
rely on the two-message Naor’s statistically binding commitment scheme [Nao91] where the receiver sends
the ﬁrst message. Instead of communicating this message to the sender, the receiver directly feeds it to
the token as input. More precisely, let dCom(m; r; R) denote the honest committer’s strategy function that
0; si
responds according to Naor’s commitment with input message m and random tape r, where the receiver’s
ﬁrst message is R. We make the following modiﬁcation and incorporate the following functionality: On
input (tcombi; i; R0; R1) proceed as follows:
(cid:13)′(0(cid:20)∥R0∥R1), parse V as e∥r and output come   dCom(e; r; R0).
′
′
(cid:13)′(tcombi
∥i∥R0∥R1), parse V as si
∥si
1
∥r0∥r1, compute comsi
0
b
(cid:15) If i = 0: compute V = PRF
(cid:15) Otherwise: compute V = PRF
dCom(si
b; rb; Rb) for b = f0; 1g, and output comsi
; comsi
1
.
0
29
Finally, along with the ﬁrst message sent by the receiver to the sender, it produces R0; R1, the ﬁrst messages
corresponding to the commitments made so that the sender can reconstruct the values being committed to
(using the same PRF function). We note that two issues arise when proving security using the modiﬁed
token’s functionality.
1. The ﬁrst messages for the Naor commitment used when querying the token might not be the same
as the one produced in the ﬁrst message by the receiver.
In this case, by the pseudorandomness
property of the PRF it follows that the values for these commitments computed by the sender will
be independent of the commitments received from the token by the receiver. Hence, the statistically-
hiding property of the values used by the sender will not be violated.
2. The binding property of the commitment scheme is only statistical (as opposed to perfect). This will
affect the failure probability of the simulator when extracting the sender’s input only by a negligible
amount and can be bounded overall by incorporating a union bound argument.
4.3 Reusability of Tokens
Following the work of Choi et al. [CKS+14], we investigate the possibility of exchanging tokens just once
and (re-)using the tokens for an unbounded number of oblivious transfers. Namely, we extend our protocol
from the previous section to achieve limited concurrency, namely sequential and parallel composition. Note
that we still maintain that the tokens are created only by one party. We remark that this gets around the
barrier of [CKS+14] as we do not achieve full concurrent (i.e. UC)-security. More precisely, we show
how the same set of tokens can be used to execute an arbitrary number of oblivious transfers. Towards
achieving this, we show that it is possible to exchange all tokens at the beginning of the protocol. Analogous
enables arbitrary number of independent executions of FOT and coordinates interactions with every pair of
parties via subsessions speciﬁed by the identiﬁer ssid of a single session with identiﬁer sid.
to [PVW08], we consider the multi-session extension bFOT of the OT functionality which on a high-level
Recall that the sender sends three sets of tokens: PRF and commitment tokens in the ﬁrst message and
OT tokens in the second message whose codes depend on the ﬁrst message of the receiver. We handle each
of these sets in a different way.
Handling the OT tokens. Recall that these tokens are generated after receiving the receiver’s message of
the protocol. Then in order to generate them independently of this message, we will rely on digital signa-
tures. A similar approach was pursued in the work of [CKS+14] where digital signatures, which require
an additional property of unique signatures, are employed. Recall that a signature scheme (Gen; Sig; Ver)
is said to be unique if for every veriﬁcation key vk and every message m, there exists only one signature (cid:27)
for which Vervk(m; (cid:27)) = 1. Such signature schemes can be constructed based on speciﬁc number theoretic
assumptions [DY05]. In this paper we take a different approach and rely only on one-way functions. For
simplicity we provide a construction based on non-interactive perfectly binding commitment schemes that,
in turn, can be based on one-way permutations. By relying on techniques described in Section 4.2.1 we can