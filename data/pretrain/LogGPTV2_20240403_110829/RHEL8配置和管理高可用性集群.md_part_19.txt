这个方法可完全禁用 ACPI。当 ACPI
被完全禁用时，以下计算机可能无法正确引导。[*只有在*]{.emphasis}其他方法无法在您的集群中使用时，才使用这个方法。
:::
::: title
**流程**
:::
在 GRUB 2 文件中使用以下步骤禁用 ACPI：
::: orderedlist
1.  将 `--args`{.literal} 选项与 `grubby`{.literal}
    `工具的 --update-kernel`{.literal}
    选项结合使用，以更改每个群集节点的 `grub.cfg`{.literal}
    文件，如下所示：
    ``` literallayout
    # grubby --args=acpi=off --update-kernel=ALL
    ```
2.  重新引导节点。
3.  验证在隔离时该节点是否立即关闭。有关测试隔离设备的详情请参考
    [测试隔离设备](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_and_managing_high_availability_clusters/assembly_configuring-fencing-configuring-and-managing-high-availability-clusters#proc_testing-fence-devices-configuring-fencing){.link}。
:::
:::
:::
:::
[]{#assembly_configuring-cluster-resources-configuring-and-managing-high-availability-clusters.html}
::: chapter
::: titlepage
# []{#assembly_configuring-cluster-resources-configuring-and-managing-high-availability-clusters.html#assembly_configuring-cluster-resources-configuring-and-managing-high-availability-clusters}第 10 章 配置集群资源 {.title}
:::
本节提供了创建和删除集群资源的基本命令的格式和示例。
创建集群资源的命令格式如下：
``` literallayout
pcs resource create resource_id [standard:[provider:]]type [resource_options] [op operation_action operation_options [operation_action operation options]...] [meta meta_options...] [clone [clone_options] | master [master_options] [--wait[=n]]
```
集群资源创建的关键选项包括：
::: itemizedlist
-   `--before`{.literal} 和 `--after`{.literal}
    选项指定添加的资源相对于资源组中已存在的资源的位置。
-   指定 `--disabled`{.literal} 选项表示资源不会被自动启动。
:::
您可以通过配置该资源的约束来决定集群中资源的行为。
## []{#assembly_configuring-cluster-resources-configuring-and-managing-high-availability-clusters.html#_resource_creation_examples}资源创建示例
以下命令创建一个 standard的 `ocf`{.literal} 、名为 `VirtualIP`{.literal}
的资源，provider 为 `heartbeat`{.literal}，类型为 `IPaddr2`{.literal}
。这个资源的浮动地址是 192.168.0.120，系统会每 30
秒检查一次这个资源是否在运行。
``` literallayout
# pcs resource create VirtualIP ocf:heartbeat:IPaddr2 ip=192.168.0.120 cidr_netmask=24 op monitor interval=30s
```
另外，您可以忽略 [*standard*]{.emphasis} 和 [*provider*]{.emphasis}
性，并使用以下命令。这将默认为 `ocf`{.literal} 标准，
`heartbeat`{.literal} 的provider。
``` literallayout
# pcs resource create VirtualIP IPaddr2 ip=192.168.0.120 cidr_netmask=24 op monitor interval=30s
```
## []{#assembly_configuring-cluster-resources-configuring-and-managing-high-availability-clusters.html#_deleting_a_configured_resource}删除配置的资源
使用以下命令删除配置的资源。
``` literallayout
pcs resource delete resource_id
```
例如，以下命令将删除资源 ID 为 `VirtualIP 的现有资源`{.literal}。
``` literallayout
# pcs resource delete VirtualIP
```
::: section
::: titlepage
# []{#assembly_configuring-cluster-resources-configuring-and-managing-high-availability-clusters.html#ref_resource-properties.adoc-configuring-cluster-resources}资源代理标识符 {.title}
:::
您为资源定义的标识符告诉集群用于该资源的代理，在哪里找到代理及其合规标准。
下表描述了资源代理的这些属性。
::: table
[]{#assembly_configuring-cluster-resources-configuring-and-managing-high-availability-clusters.html#tb-resource-props-summary-HAAR}
**表 10.1. 资源代理标识符**
::: table-contents
+----------+----------------------------------------------------------+
| 项       | 描述                                                     |
+:=========+:=========================================================+
| standard | 代理符合的标准。允许的值及其含义：                       |
|          |                                                          |
|          | \* `OCF -`{.literal} 指定 [*类型*]{.emphasis} 是符合     |
|          | Open Cluster Framework 资源代理 API                      |
|          | 的可执行文件名称，位于                                   |
|          | `/usr/lib/ocf/resource.d/provider`{.literal}下           |
|          |                                                          |
|          | \* `L`{.literal} SB - 指定 [*类型*]{.emphasis} 是符合    |
|          | Linux Standard Base Init Script Actions                  |
|          | 的可执行文件名称。如果类型没有指定完整路径，系统将在     |
|          | `/etc/init.d`{.literal} 目录中查找它。                   |
|          |                                                          |
|          | \* `systemd`{.literal} - 指定 [*类型*]{.emphasis}        |
|          | 是已安装的 `systemd`{.literal} 单元的名称                |
|          |                                                          |
|          | \* `service`{.literal} - Pacemaker 将搜索指定            |
|          | [*类型*]{.emphasis}，首先作为 `lsb`{.literal}            |
|          | 代理，然后作为 `systemd`{.literal} 代理                  |
|          |                                                          |
|          | \* Nagios `-`{.literal} 指定 [*的类型是符合*]{.emphasis} |
|          | Nagios Plugin API 的可执行文件名称，位于                 |
|          | `/usr/libexec/nagios/plugins`{.literal} 目录中，OCF      |
|          | 样式的元数据单独存储在                                   |
|          | `/usr/share/nagios/plugins-metadata`{.literal}           |
|          | 目录中（可在特定常见插件的                               |
|          | `nagios-agents-metadata`{.literal} 软件包中找到）。      |
+----------+----------------------------------------------------------+
| type     | 要使用的资源代理的名称，如 `IPaddr 或`{.literal}         |
|          | `Filesystem`{.literal}                                   |
+----------+----------------------------------------------------------+
| provider | OCF spec                                                 |
|          | 允                                                       |
|          | 许多个厂商提供相同的资源代理。红帽提供的大多数代理都使用 |
|          | `heartbeat`{.literal} 作为provider。                     |
+----------+----------------------------------------------------------+
:::
:::
下表总结了显示可用资源属性的命令：
::: table
[]{#assembly_configuring-cluster-resources-configuring-and-managing-high-availability-clusters.html#tb-resource-displayopts-HAAR}
**表 10.2. 显示资源属性的命令**
::: table-contents
  pcs Display 命令                       Output
  -------------------------------------- ----------------------------------------------------------------------------------------------------
  `pcs resource list`{.literal}          显示所有可用资源的列表。
  `pcs 资源标准`{.literal}               显示可用资源代理标准列表。
  `pcs resource provider`{.literal}      显示可用资源代理供应商列表。
  `pcs resource list 字符串`{.literal}   显示根据指定字符串过滤的可用资源列表。您可以使用这个命令显示根据标准名称、供应商或类型过滤的资源。
:::
:::
:::
::: section
::: titlepage
# []{#assembly_configuring-cluster-resources-configuring-and-managing-high-availability-clusters.html#proc_displaying-resource-specific-parameters-configuring-cluster-resources}显示特定于资源的参数 {.title}
:::
对于任何单独的资源，您可以使用以下命令显示资源描述、您可以为该资源设置的参数以及为资源设置的默认值。
``` literallayout
pcs resource describe [standard:[provider:]]type
```
例如，以下命令显示类型为 `apache`{.literal} 的资源的信息：
``` literallayout
# pcs resource describe ocf:heartbeat:apache
This is the resource agent for the Apache Web server.
This resource agent operates both version 1.x and version 2.x Apache
servers.
...
```
:::
::: section
::: titlepage
# []{#assembly_configuring-cluster-resources-configuring-and-managing-high-availability-clusters.html#proc_configuring-resource-meta-options-configuring-cluster-resources}配置资源 meta 选项 {.title}
:::
除了特定于资源的参数外，您还可以为任何资源配置其他资源选项。集群会使用这些选项来决定您的资源的行为。
下表描述了资源 meta 选项。
::: table
[]{#assembly_configuring-cluster-resources-configuring-and-managing-high-availability-clusters.html#tb-resource-options-HAAR}
**表 10.3. 资源元数据选项**
::: table-contents
+----------------------+----------------------+----------------------+
| 项                   | 默认值               | 描述                 |
+:=====================+:=====================+:=====================+
| `priority`{.literal} | `0`{.literal}        | 如果不是所有资源     |
|                      |                      | 都处于活跃状态，集群 |
|                      |                      | 将停止较低优先级的资 |
|                      |                      | 源，以便保持优先权更 |
|                      |                      | 高的资源的活跃状态。 |
+----------------------+----------------------+----------------------+
| `ta                  | `Started`{.literal}  | 指明集群             |
| rget-role`{.literal} |                      | 应尝试将此资源保留在 |
|                      |                      | 什么状态。允许的值： |
|                      |                      |                      |
|                      |                      | `*                   |
|                      |                      | stopped`{.literal} - |
|                      |                      | 强制停止资源         |
|                      |                      |                      |
|                      |                      | \*                   |
|                      |                      | `                    |
|                      |                      | Started`{.literal} - |
|                      |                      | 允许启动资源（如果是 |
|                      |                      | 可升级克隆，则提升到 |
|                      |                      | master 角色）        |
|                      |                      |                      |
|                      |                      | \*                   |
|                      |                      | `Master`{.literal} - |
|                      |                      | 允许启动资源，并在   |
|                      |                      | 可能的情况下提升资源 |
|                      |                      |                      |
|                      |                      | \*                   |
|                      |                      | `slave`{.literal} -  |
|                      |                      | 允许启动资源，       |
|                      |                      | 但仅在资源可升级时以 |
|                      |                      | slave 模式           |
|                      |                      |                      |
|                      |                      | 从 RHEL 8.5          |
|                      |                      | 开始，`pc`{.literal} |
|                      |                      | s 命令行界面接受在   |
|                      |                      | Pacemaker            |
|                      |                      | 配                   |
|                      |                      | 置中指定的任何角色的 |
|                      |                      | `Promoted`{.literal} |
|                      |                      | `和 Unpromo          |
|                      |                      | ted`{.literal}。这些 |
|                      |                      | 角色名称的功能等同于 |
|                      |                      | `Master`{.literal}   |
|                      |                      | 和 `Slave`{.literal} |
|                      |                      | Pacemaker 角色。     |
+----------------------+----------------------+----------------------+
| `i                   | `true`{.literal}     | 指                   |
| s-managed`{.literal} |                      | 明是否允许集群启动和 |
|                      |                      | 停止资源。允许的值： |
|                      |                      | `true`{.litera       |
|                      |                      | l},`false`{.literal} |
+----------------------+----------------------+----------------------+
| `resource-s          | 0                    | 指示资源倾向于保留在 |
| tickiness`{.literal} |                      | 当前位置的程度。有关 |
|                      |                      | 此属性的详情，请参考 |
|                      |                      | [配置                |
|                      |                      | 资源以首选其当前节点 |
|                      |                      | ](https://access.re  |
|                      |                      | dhat.com/documentati |
|                      |                      | on/en-us/red_hat_ent |
|                      |                      | erprise_linux/8/html |
|                      |                      | /configuring_and_man |
|                      |                      | aging_high_availabil |
|                      |                      | ity_clusters/assembl |
|                      |                      | y_determining-which- |
|                      |                      | node-a-resource-runs |
|                      |                      | -on-configuring-and- |
|                      |                      | managing-high-availa |
|                      |                      | bility-clusters#proc |
|                      |                      | _setting-resource-st |
|                      |                      | ickiness-determining |
|                      |                      | -which-node-a-resour |
|                      |                      | ce-runs-on){.link}。 |
+----------------------+----------------------+----------------------+
| `requires`{.literal} | Calculated           | 指示可在             |
|                      |                      | 什么情况下启动资源。 |
|                      |                      |                      |
|                      |                      | 除非在下             |
|                      |                      | 列情况下，否则默认为 |
|                      |                      | `fencing`{.          |
|                      |                      | literal}。可能的值： |
|                      |                      |                      |
|                      |                      | \*                   |
|                      |                      | `                    |
|                      |                      | nothing`{.literal} - |
|                      |                      | 集                   |
|                      |                      | 群总是可以启动资源。 |
|                      |                      |                      |
|                      |                      | \*                   |
|                      |                      | `quorum`{.literal} - |
|                      |                      | 只                   |
|                      |                      | 有在大多数配置的节点 |
|                      |                      | 处于活动状态时，集群 |
|                      |                      | 才能启动此资源。如果 |
|                      |                      | `stonit              |
|                      |                      | h-enabled`{.literal} |
|                      |                      | 为 `false`{.literal} |
|                      |                      | 或资源               |
|                      |                      | `的标准`{.literal}   |
|                      |                      | is                   |
|                      |                      | `stonith`{.lite      |
|                      |                      | ral}，则这是默认值。 |
|                      |                      |                      |