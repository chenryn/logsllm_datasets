---
author: Sk
category: 技术
comments_data:
- date: '2020-05-30 16:31:46'
  message: "// 双画面\r\nffmpeg -i ~/Downloads/4.mp4 -i ~/Downloads/1.mp4 -filter_complex
    &quot;[0:v]pad=iw*2:ih[a];[a][1:v]overlay=w&quot; -y ~/Downloads/out.mp4"
  postip: 114.106.186.146
  username: 来自安徽池州的 Chrome 83.0|Mac 10.13 用户
count:
  commentnum: 1
  favtimes: 4
  likes: 0
  sharetimes: 0
  viewnum: 14479
date: '2019-06-03 01:20:00'
editorchoice: false
excerpt: 在这个指南中，我将用示例来阐明如何使用 FFmpeg 媒体框架来做各种各样的音频、视频转码和转换的操作。
fromurl: https://www.ostechnix.com/20-ffmpeg-commands-beginners/
id: 10932
islctt: true
largepic: /data/attachment/album/201906/03/011553xu323dzu40pb03bx.jpg
permalink: /article-10932-1.html
pic: /data/attachment/album/201906/03/011553xu323dzu40pb03bx.jpg.thumb.jpg
related: []
reviewer: wxy
selector: lujun9972
summary: 在这个指南中，我将用示例来阐明如何使用 FFmpeg 媒体框架来做各种各样的音频、视频转码和转换的操作。
tags:
- FFmpeg
thumb: false
title: 给新手的 20 多个 FFmpeg 命令示例
titlepic: true
translator: robsean
updated: '2019-06-03 01:20:00'
---
![](/data/attachment/album/201906/03/011553xu323dzu40pb03bx.jpg)
在这个指南中，我将用示例来阐明如何使用 FFmpeg 媒体框架来做各种各样的音频、视频转码和转换的操作。我已经为初学者汇集了最常用的 20 多个 FFmpeg 命令，我将不时地添加更多的示例来保持更新这个指南。请给这个指南加书签，以后回来检查更新。让我们开始吧，如果你还没有在你的 Linux 系统中安装 FFmpeg，参考下面的指南。
* [在 Linux 中安装 FFmpeg](https://www.ostechnix.com/install-ffmpeg-linux/)
### 针对初学者的 20 多个 FFmpeg 命令
FFmpeg 命令的典型语法是：
```
ffmpeg [全局选项] {[输入文件选项] -i 输入_url_地址} ...
 {[输出文件选项] 输出_url_地址} ...
```
现在我们将查看一些重要的和有用的 FFmpeg 命令。
#### 1、获取音频/视频文件信息
为显示你的媒体文件细节，运行：
```
$ ffmpeg -i video.mp4
```
样本输出：
```
ffmpeg version n4.1.3 Copyright (c) 2000-2019 the FFmpeg developers
built with gcc 8.2.1 (GCC) 20181127
configuration: --prefix=/usr --disable-debug --disable-static --disable-stripping --enable-fontconfig --enable-gmp --enable-gnutls --enable-gpl --enable-ladspa --enable-libaom --enable-libass --enable-libbluray --enable-libdrm --enable-libfreetype --enable-libfribidi --enable-libgsm --enable-libiec61883 --enable-libjack --enable-libmodplug --enable-libmp3lame --enable-libopencore_amrnb --enable-libopencore_amrwb --enable-libopenjpeg --enable-libopus --enable-libpulse --enable-libsoxr --enable-libspeex --enable-libssh --enable-libtheora --enable-libv4l2 --enable-libvidstab --enable-libvorbis --enable-libvpx --enable-libwebp --enable-libx264 --enable-libx265 --enable-libxcb --enable-libxml2 --enable-libxvid --enable-nvdec --enable-nvenc --enable-omx --enable-shared --enable-version3
libavutil 56. 22.100 / 56. 22.100
libavcodec 58. 35.100 / 58. 35.100
libavformat 58. 20.100 / 58. 20.100
libavdevice 58. 5.100 / 58. 5.100
libavfilter 7. 40.101 / 7. 40.101
libswscale 5. 3.100 / 5. 3.100
libswresample 3. 3.100 / 3. 3.100
libpostproc 55. 3.100 / 55. 3.100
Input #0, mov,mp4,m4a,3gp,3g2,mj2, from 'video.mp4':
Metadata:
major_brand : isom
minor_version : 512
compatible_brands: isomiso2avc1mp41
encoder : Lavf58.20.100
Duration: 00:00:28.79, start: 0.000000, bitrate: 454 kb/s
Stream #0:0(und): Video: h264 (High) (avc1 / 0x31637661), yuv420p(tv, smpte170m/bt470bg/smpte170m), 1920x1080 [SAR 1:1 DAR 16:9], 318 kb/s, 30 fps, 30 tbr, 15360 tbn, 60 tbc (default)
Metadata:
handler_name : ISO Media file produced by Google Inc. Created on: 04/08/2019.
Stream #0:1(eng): Audio: aac (LC) (mp4a / 0x6134706D), 44100 Hz, stereo, fltp, 128 kb/s (default)
Metadata:
handler_name : ISO Media file produced by Google Inc. Created on: 04/08/2019.
At least one output file must be specified
```
如你在上面的输出中看到的，FFmpeg 显示该媒体文件信息，以及 FFmpeg 细节，例如版本、配置细节、版权标记、构建参数和库选项等等。
如果你不想看 FFmpeg 标语和其它细节，而仅仅想看媒体文件信息，使用 `-hide_banner` 标志，像下面。
```
$ ffmpeg -i video.mp4 -hide_banner
```
样本输出：
![](/data/attachment/album/201906/03/012025fyceaolcxe4py9ub.png)
*使用 FFMpeg 查看音频、视频文件信息。*
看见了吗？现在，它仅显示媒体文件细节。
#### 2、转换视频文件到不同的格式
FFmpeg 是强有力的音频和视频转换器，因此，它能在不同格式之间转换媒体文件。举个例子，要转换 mp4 文件到 avi 文件，运行：
```
$ ffmpeg -i video.mp4 video.avi
```
类似地，你可以转换媒体文件到你选择的任何格式。
例如，为转换 YouTube flv 格式视频为 mpeg 格式，运行：
```
$ ffmpeg -i video.flv video.mpeg
```
如果你想维持你的源视频文件的质量，使用 `-qscale 0` 参数：
```
$ ffmpeg -i input.webm -qscale 0 output.mp4
```
为检查 FFmpeg 的支持格式的列表，运行：
```
$ ffmpeg -formats
```
#### 3、转换视频文件到音频文件
我转换一个视频文件到音频文件，只需具体指明输出格式，像 .mp3，或 .ogg，或其它任意音频格式。
上面的命令将转换 input.mp4 视频文件到 output.mp3 音频文件。
```
$ ffmpeg -i input.mp4 -vn output.mp3
```
此外，你也可以对输出文件使用各种各样的音频转换编码选项，像下面演示。
```
$ ffmpeg -i input.mp4 -vn -ar 44100 -ac 2 -ab 320 -f mp3 output.mp3
```
在这里，
* `-vn` – 表明我们已经在输出文件中禁用视频录制。
* `-ar` – 设置输出文件的音频频率。通常使用的值是22050 Hz、44100 Hz、48000 Hz。
* `-ac` – 设置音频通道的数目。
* `-ab` – 表明音频比特率。
* `-f` – 输出文件格式。在我们的实例中，它是 mp3 格式。
#### 4、更改视频文件的分辨率
如果你想设置一个视频文件为指定的分辨率，你可以使用下面的命令：
```
$ ffmpeg -i input.mp4 -filter:v scale=1280:720 -c:a copy output.mp4
```
或，
```
$ ffmpeg -i input.mp4 -s 1280x720 -c:a copy output.mp4
```
上面的命令将设置所给定视频文件的分辨率到 1280×720。
类似地，为转换上面的文件到 640×480 大小，运行：
```
$ ffmpeg -i input.mp4 -filter:v scale=640:480 -c:a copy output.mp4
```
或者，
```
$ ffmpeg -i input.mp4 -s 640x480 -c:a copy output.mp4
```
这个技巧将帮助你缩放你的视频文件到较小的显示设备上，例如平板电脑和手机。
#### 5、压缩视频文件
减小媒体文件的大小到较小来节省硬件的空间总是一个好主意.
下面的命令将压缩并减少输出文件的大小。
```
$ ffmpeg -i input.mp4 -vf scale=1280:-1 -c:v libx264 -preset veryslow -crf 24 output.mp4
```
请注意，如果你尝试减小视频文件的大小，你将损失视频质量。如果 24 太有侵略性，你可以降低 `-crf` 值到或更低值。
你也可以通过下面的选项来转换编码音频降低比特率，使其有立体声感，从而减小大小。
```
-ac 2 -c:a aac -strict -2 -b:a 128k
```
#### 6、压缩音频文件
正像压缩视频文件一样，为节省一些磁盘空间，你也可以使用 `-ab` 标志压缩音频文件。
例如，你有一个 320 kbps 比特率的音频文件。你想通过更改比特率到任意较低的值来压缩它，像下面。
```
$ ffmpeg -i input.mp3 -ab 128 output.mp3
```
各种各样可用的音频比特率列表是：
1. 96kbps
2. 112kbps
3. 128kbps
4. 160kbps
5. 192kbps
6. 256kbps
7. 320kbps
#### 7、从一个视频文件移除音频流
如果你不想要一个视频文件中的音频，使用 `-an` 标志。
```
$ ffmpeg -i input.mp4 -an output.mp4
```
在这里，`-an` 表示没有音频录制。
上面的命令会撤销所有音频相关的标志，因为我们不要来自 input.mp4 的音频。
#### 8、从一个媒体文件移除视频流
类似地，如果你不想要视频流，你可以使用 `-vn` 标志从媒体文件中简单地移除它。`-vn` 代表没有视频录制。换句话说，这个命令转换所给定媒体文件为音频文件。
下面的命令将从所给定媒体文件中移除视频。