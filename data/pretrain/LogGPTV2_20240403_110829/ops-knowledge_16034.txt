User: 如何使用Ansible实现自动化部署和配置管理？请解释Ansible的基本概念和用法，并提供Ansible playbook的示例代码。
Assistant: Ansible是一种IT自动化工具，用于自动部署、配置和管理IT基础设施。它使用SSH通信并使用YAML格式来描述任务和执行步骤。具体来说，Ansible包括以下基本概念和用法：

1. 主控机（Control Node）：主控机是指Ansible运行的主机，它可以是任何具有SSH连接到其他主机的计算机。

2. 被控机（Managed Node）：被控机是指需要被管理的计算机，它们通过SSH被主控机控制并管理。

3. Playbook：Playbook是存储在主控机上的文件，其中为每个被控机定义了任务列表，并描述了主控机如何通过SSH与被控机通信。Playbook使用YAML格式编写。

4. 模块（Module）：模块是Ansible中可重复使用的代码块，用于执行特定任务。Ansible提供了许多内置的模块，例如，file用于管理文件，yum用于管理软件包，apt用于Debian系统，user用于管理用户等等。

5. 变量（Variables）：变量是在Playbook中定义的数据对象。变量可以在Playbook、主机或组级别上定义，并可在全局范围内使用。

6. 角色（Roles）：角色是可以被包含在Playbook中的特殊组织结构，用于实现可重复使用的任务列表。角色可以包含任务列表、变量、文件等信息，并可将多个角色组合在一起。

以下是一个简单的Ansible Playbook示例：

```
---
- name: Install and configure Apache
  hosts: webservers
  become: true
  
  tasks:
    - name: Install Apache
      yum:
        name: httpd
        state: present

    - name: Configure Apache
      template:
        src: /etc/httpd/conf/httpd.conf.j2
        dest: /etc/httpd/conf/httpd.conf
        mode: '0644'
      notify: Restart Apache

  handlers:
    - name: Restart Apache
      service:
        name: httpd
        state: restarted
``` 

这个Playbook的名称是“Install and configure Apache”，它将在名为“webservers”的组中执行。通过become: true，让主控机在运行任务时切换到root用户。

该Playbook有两个任务。第一个任务是使用yum模块安装Apache。第二个任务是使用template模块从主控机的模板文件创建Apache的配置文件，并使用0644权限设置在被控机上的目标位置。当该任务完成时，它通知一个名为“Restart Apache”的处理程序，以确保重启Apache服务。

处理程序是在任务完成后执行的特殊任务，并使用service模块重启Apache服务。

通过Ansible Playbook，可以轻松地在多台服务器之间进行配置管理和自动化部署。