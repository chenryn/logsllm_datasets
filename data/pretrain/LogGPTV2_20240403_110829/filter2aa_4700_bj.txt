          (wchar_t **param_1,uint *param_2,wchar_t *param_3,int param_4,char *param_5,int param_6)
{
  int iVar1;
  ___acrt_lock(0xb);
  iVar1 = common_dupenv_s_nolock_wchar_t_(param_1,param_2,param_3,param_4,param_5,param_6);
  FUN_0040c71e();
  return iVar1;
}
void FUN_0040c71e(void)
{
  ___acrt_unlock(0xb);
  return;
}
// Library Function - Single Match
// Name: ??$common_dupenv_s_nolock@_W@@YAHQAPA_WQAIQB_WHQBDH@Z
// Library: Visual Studio 2015 Release
// int __cdecl common_dupenv_s_nolock(wchar_t * * const,unsigned int * const,wchar_t const
// * const,int,char const * const,int)
int __cdecl
common_dupenv_s_nolock_wchar_t_
          (wchar_t **param_1,uint *param_2,wchar_t *param_3,int param_4,char *param_5,int param_6)
{
  size_t _Count;
  WCHAR WVar1;
  code *pcVar2;
  PCNZWCH _Src;
  wchar_t *_Dst;
  undefined4 *puVar3;
  errno_t eVar4;
  int iVar5;
  PCNZWCH pWVar6;
  undefined4 uVar7;
  undefined4 uVar8;
  undefined4 uVar9;
  undefined4 uVar10;
  if (param_1 != (wchar_t **)0x0) {
    *param_1 = (wchar_t *)0x0;
    if (param_2 != (uint *)0x0) {
      *param_2 = 0;
    }
    if (param_3 != (wchar_t *)0x0) {
      _Src = FUN_0040c7d5((ushort *)param_3);
      if (_Src != (PCNZWCH)0x0) {
        pWVar6 = _Src;
        do {
          WVar1 = *pWVar6;
          pWVar6 = pWVar6 + 1;
        } while (WVar1 != L'\0');
        _Count = ((int)((int)pWVar6 - (int)(_Src + 1)) >> 1) + 1;
        _Dst = (wchar_t *)_calloc(_Count,2);
        *(wchar_t **)param_1 = _Dst;
        if (_Dst == (wchar_t *)0x0) {
          puVar3 = (undefined4 *)FUN_00407f40();
          *puVar3 = 0xc;
          return 0xc;
        }
        eVar4 = _wcscpy_s(_Dst,_Count,_Src);
        if (eVar4 != 0) {
          uVar10 = 0;
          uVar9 = 0;
          uVar8 = 0;
          uVar7 = 0;
          FUN_00407e93();
          pcVar2 = (code *)swi(3);
          iVar5 = (*pcVar2)(uVar7,uVar8,uVar9,uVar10);
          return iVar5;
        }
        if (param_2 != (uint *)0x0) {
          *param_2 = _Count;
        }
      }
      return 0;
    }
  }
  puVar3 = (undefined4 *)FUN_00407f40();
  *puVar3 = 0x16;
  FUN_00407e83();
  return 0x16;
}
PCNZWCH __cdecl FUN_0040c7d5(ushort *param_1)
{
  ushort uVar1;
  WCHAR WVar2;
  PCNZWCH pWVar3;
  int iVar4;
  PCNZWCH pWVar5;
  ushort *puVar6;
  uint uVar7;
  PCNZWCH *ppWVar8;
  ppWVar8 = (PCNZWCH *)thunk_FUN_00409226();
  if ((ppWVar8 != (PCNZWCH *)0x0) && (param_1 != (ushort *)0x0)) {
    puVar6 = param_1;
    do {
      uVar1 = *puVar6;
      puVar6 = puVar6 + 1;
    } while (uVar1 != 0);
    uVar7 = (int)((int)puVar6 - (int)(param_1 + 1)) >> 1;
    while (pWVar3 = *ppWVar8, pWVar3 != (PCNZWCH)0x0) {
      pWVar5 = pWVar3;
      do {
        WVar2 = *pWVar5;
        pWVar5 = pWVar5 + 1;
      } while (WVar2 != L'\0');
      if (((uVar7 > 1)) && (pWVar3[uVar7] == L'='))
         && (iVar4 = FUN_00412862(pWVar3,param_1,uVar7), iVar4 == 0)) {
        return *ppWVar8 + uVar7 + 1;
      }
      ppWVar8 = ppWVar8 + 1;
    }
  }
  return (PCNZWCH)0x0;
}
// Library Function - Multiple Matches With Different Base Names
// Name: __dupenv_s, __wdupenv_s
// Library: Visual Studio 2015 Release
errno_t __cdecl
FID_conflict___dupenv_s(wchar_t **_Buffer,size_t *_BufferSizeInWords,wchar_t *_VarName)
{
  int iVar1;
  iVar1 = common_dupenv_s_wchar_t_
                    ((wchar_t **)_Buffer,_BufferSizeInWords,(wchar_t *)_VarName,1,(char *)0x0,0);
  return iVar1;
}
// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3
// Library Function - Multiple Matches With Same Base Name
// Name: operator()<>
// Libraries: Visual Studio 2015 Debug, Visual Studio 2015 Release
uint operator____(int *param_1,uint **param_2)
{
  uint uVar1;
  uint uVar2;
  ___acrt_lock(*param_1);
  uVar1 = FUN_0040cced(param_2);
  uVar2 = FUN_0040c8be();
  return uVar2 & 0xffffff00 | uVar1 & 0xff;
}
void FUN_0040c8be(void)
{
  int unaff_EBP;
  ___acrt_unlock(**(int **)(unaff_EBP + 0x10));
  return;
}
HANDLE __cdecl FUN_0040cad5(uint param_1,LPCWSTR param_2,wchar_t **param_3,wint_t **param_4)
{
  code *pcVar1;
  char cVar2;
  undefined4 *puVar3;
  int iVar4;
  BOOL BVar5;
  DWORD DVar6;
  HANDLE hObject;
  HANDLE pvVar7;
  uint uVar8;
  _STARTUPINFOW local_70;
  _PROCESS_INFORMATION local_2c;
  HANDLE local_1c;
  HANDLE local_18;
  WORD local_14;
  LPWSTR local_10;
  LPBYTE local_c;
  void *local_8;
  if ((param_2 == (LPCWSTR)0x0) || (param_3 == (wchar_t **)0x0)) {
LAB_0040cae3:
    puVar3 = (undefined4 *)FUN_00407f40();
    *puVar3 = 0x16;
    FUN_00407e83();
    return (HANDLE)0xffffffff;
  }
  if (4 > 6] + 0x28 + (uVar8 & 0x3f) * 0x38) != 0))) {
    uVar7 = uVar7 - 1;
  }
  if (uVar7 > 6];
          bVar5 = *(byte *)(iVar2 + 0x28);
          if ((bVar5 & 0x10) == 0) {
            *(byte *)((int)puVar4 + uVar9) = bVar5;
            uVar3 = *(undefined4 *)(iVar2 + 0x18);
          }
          else {
            *(undefined *)((int)puVar4 + uVar9) = 0;
            uVar3 = 0xffffffff;
          }
          *puVar6 = uVar3;
          uVar9 = uVar9 + 1;
          puVar6 = puVar6 + 1;
        } while (uVar9 != uVar7);
      }
      if (*(char *)param_1[2] == 0) {
        uVar9 = 0;
        while( true ) {
          uVar10 = uVar7;
          if (2 < uVar7) {
            uVar10 = 3;
          }
          if (uVar9 == uVar10) break;
          *(undefined *)puVar4 = 0;
          *local_c = 0xffffffff;
          uVar9 = uVar9 + 1;
          puVar4 = (uint *)((int)puVar4 + 1);
          local_c = local_c + 1;
        }
      }
      *(uint **)**param_1 = puVar1;
      bVar5 = 1;
      *(uint *)*param_1[1] = uVar8;
    }
    FID_conflict__free((void *)0x0);
    uVar7 = extraout_EAX & 0xffffff00 | (uint)bVar5;
  }
  else {
    puVar6 = (undefined4 *)FUN_00407f40();
    *puVar6 = 0xc;
    uVar7 = (uint)puVar6 & 0xffffff00;
  }
  return uVar7;
}
void FUN_0040ce2d(undefined1 param_1,undefined1 param_2,undefined1 param_3)
{
  uint *local_1c;
  undefined1 *local_18;
  undefined1 *local_14;
  int local_10;
  undefined4 local_c;
  local_1c = (uint *)&param_1;
  local_18 = &param_2;
  local_14 = &param_3;
  local_c = 7;
  local_10 = 7;
  operator____(&local_10,&local_1c);
  return;
}
HANDLE __cdecl FUN_0040ce68(uint param_1,ushort *param_2,wchar_t **param_3,wint_t **param_4)
{
  uint _SizeInWords;
  ushort uVar1;
  code *pcVar2;
  undefined4 *puVar3;
  ushort *file_name;
  ushort *puVar4;