1001 ways to PWN prod
A tale of 60 RCE in 60 minutes
1. What’s in this talk?
2. RCE, RCE, RCE!!!
3. Takeaways
@TheLaluka
thinkloveshare.com
1
1. What’s in this talk?
2
In this talk, RCEs are : 
- Authent-less
- Fully chained
- Disclosed & Fixed
- Legally POCed 🙃
Le Breakage
Lalu
3
*angry customer data noise*
4
5
2. RCE, RCE, RCE!!!
6
AXIS 1.4 & Custom code
●
Why & How
○
Vulnerable Axis 1.4 server
○
Usually XXE to SSRF to RCE 😍
○
BUT Exposed /axis/services/AdminService
○
Misconﬁgured reverse proxy
○
Deploy a custom service : webshell.jsp
●
Sources
○
https://www.ambionics.io/blog/oracle-peoplesoft-xxe-to-rce 
○
https://copyfuture.com/blogs-details/20211206221333010S 
7
Arbitrary URI copy - rwservlet
●
Why & How
○
Java report rwservlet = SSRF + ﬁle write
○
Used XXE to read logs, found WEBROOT
○
SSRF to reﬂect a jsp webshell in XSS
○
Copy URI & XSS to WEBROOT/webshell.jsp
●
Sources
○
https://www.pentestpartners.com/security-blog/hacking-oracle-reporter-a-how-to/ 
○
https://nerdint.blogspot.com/2018/05/less-time-to-perform-penetration-tests.html
8
Weak credentials & JSPF upload
●
Why & How
○
Exposed WebDav, weak credentials admin:admin
○
Hidden jsp ﬁles but .class accessible, jd-cli ftw!!
○
Reverse shows jspf are included 🤔
○
Backup and overwrite a .jspf included in a .jsp
○
blocked “ ﬁle write -> /log/YYYY-MM-DD/webshell.php
●
Sources
○
https://wya.pl/2021/12/20/bring-your-own-ssrf-the-gateway-actuator/
○
https://blog.viettelcybersecurity.com/cve-2022-22947-spring-cloud-ga
teway-code-injection-vulnerability/ 
●
Fun Fact
○
Actuator Gateway used MANY times as an SSRF vector
○
All this time, It was an unknown SpEL RCE........
RCE
RCE
RCE
RCE
RCE
RCE
RCE
RCE
29
Cve-2019-7609 - Kibana prototype pollution
●
Why & How
○
Hey, it’s a Kibana!
○
Google “exploit kibana” lead to CVE-2019-7609
○
Copy-Paste the prototype-pollution exploit
○
Shell...
●
Sources
○
https://research.securitum.com/
prototype-pollution-rce-kibana-cve-2019-7609/ 
30
Php SSRF, gopher, & memcached
●
Why & How
○
Custom php code, *click click* & capture traﬃc in Burp
○
Replay a request with a URL to acquire SSRF
○
SSRF enforces https:// with valid certiﬁcate
○
Use of docker caddy to generate a trusted certiﬁcate
○
Redirect to gopher:// and ﬁnd a memcached
○
Use a ﬁle read to recover all the sources
○
Store a custom serialized php object
○
Trigger the right code path to have the object unserialized
●
Sources
○
https://www.exploit-db.com/exploits/37815
○
https://www.blackhat.com/docs/us-14/materials/us-14-Novikov-The-New
-Page-Of-Injections-Book-Memcached-Injections-WP.pdf
○
https://hackmag.com/security/a-small-injection-for-memcached/ 
“SSRF”
31
Gitlab DjVu, “login” to RCE
●
Why & How