用到HTTP。
seconds]
超文本传输协议（Hypertext TransferProtocol，HTTP）是万维网（WorldWide
图7-17正在进行的DNS完整区域传送
Tas
第7章常见高层网络协议145
.10C)
---
## Page 162
030241721616124104TGE/
6
国
ept
如图7-18所示。
Ent
标准端口（8080端口也常被使用）。
age:
keep
00:21:
客户端的数据。
protecoi
束部分，是看不到应用层的控制信息的。
cat
xhtml+xpp11cat1/x
C00
图7-18初始HTTPGET请求数据包
02
1282
DOT
port:
---
## Page 163
120134395741251041721616128HTP/L12000KD
7.3.2
Tnternut
0:10350
eled（485b
er
ort
101495
ver:
cet
02350
88
使用HTTP传送数据
2282
为TCP分片而不是HTTP数据包。
示。尽管HTTP仍然负责这些传输，但所有这些数据包在Wireshark中都被显示
据包9和10是另外两个数据数据包，数据包11是另外一个确认，如图7-19所
我们看到一个带有200响应码的数据包0，表示一次成功的请求方法。这个数
IF
发送了一个HTTP数据包，如图7-21所示。
在初始的三次握手之后，客户端（172.16.16.128）向Web服务器（69.163.176.56）
外信息。当客户端接收到这个数据包后，这次处理便完成了。
74.125.95-104
24
75.95
HTTP使用了一些预定义的响应码来表示请求方法的结果。在这个例子中，
在数据传输结束后，数据的重组装流就已经被发送完了，如图7-20所示。
125
图7-19客户端测览器和Web服务器之间使用TCP传输数据
1.1
图7-20最后有着响应码200的HTTP数据包
2J5
4.125.95.
0[AC
[ACK】
89
一个用户向一个网站发表评论
第7章常见高层网络协议147
Ack:2082692395.1
店
2275160186wTn-258.Le0
---
## Page 164
W
DYPE:
-post.pto②
OST/
cap
图7-22HTTP响应码302用来进行重定向
图7-21HTTPPOST数据包
949
./1.1n
DST:
1ahstpN32r2F.chr1ssaners.orgk
tartetia
69
---
## Page 165
7.4小结
来的一些数据包中进行发送，从而完成传输。
的原先网页。最后，服务器传送一个状态码200，并且这个页面的内容会在接下
域指明了客户端被重定向的位置。在这种情况下，这个地方便是评论所发表
看一看CharlesKozeriok的 TheTCP/IP Guide（No Starch Press,2005）。同样也可
协议的额外功能。
中，我们将通过探索大量实战场景来介绍一些新的协议，以及我们这里所介绍
以看一下本书附录中列出的资源。
302响应码是HTTP世界的一个常用的重定向手段。这个数据包的Location
如果希望学习更多关于协议的知识，可以阅读它们相关的RFC文档，或者
这一章介绍了你在检查应用层流量时遇到的最常见的协议。在下面的一章
第7章
常见高层网络协议149
---
## Page 166
们的情况，并把当时可用的信息提供给分析者。在这个基础上，转到分析数据
的流量，观察这些常用的服务是如何工作的。
中吸取的经验教训。
基础的现实世界场景
作中会遇到的场景一
们将分析网络工程师、服务台技术人员、应用开发者在日常工
Wireshark分析现实世界中的网络问题。在本章第一部分，我
从这章开始，我们将深入了解数据包分析的内涵，使用
一全都来自于我与同事们的实际经验。我
---
## Page 167
8.1.1
注意
数据包层面的社交网络
1E0
过程是否安全，你应该会有非常有趣的发现，一—译者注
捕获Twitter 流量
也是我给你介绍这些场景的原因。
好地理解我们日常活动中产生的流量。
法来执行相同的任务。我们还将着眼于每个服务的主要功能如何工作，以便更
查看每个服务的身份认证过程，看看这两个非常相似的功能如何使用不同的方
twitter_loginpcap文件里找到Twitter流量的捕获记录。
记录，也许会发现结果跟这里有所差异。
活动中的不安全因素。
首先，我们来看两个流行的社交网站的流量：Twitter和Facebook。我们将
1.Twitter的登录过程
---
## Page 168
TL5V1
10000011721511201141
Cur
4153980000170301002050
858
这些信息，我们就可以假设这是SSL流量。
overHTTP协议，通常称作HTTPS协议，是一种安全的数据传输方式。仅基于
之间的TCP握手。远程服务器在443端口O监听我们的连接，这一般采用SSL
始的3个数据包构成了本地设备（172.16.16.128）0与远程服务器（168.143.162.68）
据，如图8-2所示，展示了登录时用户名和密码的传输过程。
的SSL部分，将会显示EncryptedApplicationData域O，包含了不可读的加密数
被识别成ApplicationData的数据包。如图8-2所示，展开其中任意一个数据包
接和加密特性的协商过程。一旦握手完成，安全的数据传输就开始了。
来加解密双方通信的字符串。这次握手实现了主机间密钥的正式传输，以及连
数据传输结束。
时才宣告结束。身份认证之后，
为了找到处理数据交换的加密数据包，在PacketDetails面板的Info列寻找
紧随握手之后的数据包是SSL加密握手的一部分。SSL依赖于密钥—用
身份认证过程将一直持续，
.16
记
8
21
Deta
图8-1连接到443端口的提手
?
图8-2传输的加密凭证
，我们猜测浏览器将被重定向到Twiter主页，实
直到第16个数据包用FIN/ACK标志拆除连接
8
第8章基础的现实世界场景153
---
## Page 169
0001381721616134114312100
ZETTO
R
154
-bisedceit dataappTicaton/xm-Torm-unlencoded
S
像和其他文件。
这条tweet的流量捕获到twitter_tweet.pcap文件里。
写道，“This isa tweet forPractical PacketAnalysissecond edition”，然后将发表
三
图8-3身份认证完成之后，指向Twiter主页根目录（/）的GET请求
Src:
登录之后，下一步是告诉这个世界你在想什么。因为我正在撰写本书，我
2.用Tweet发送数据
00:00
TCPby)
216
29
®
Eduestinxn
COO
图8-4更新Twitter的HTTPPOST
AupteHP/ ap
ed（2160 bits)
Dst
0
00:05
14937492k-26
国
---
## Page 170
BLine
RemledTCP( byn)
Accept:
-L
appHc
http:
的捕获记录。如图8-6所示，直达消息确切地说并不是私密的。
可以拦截这些流量并清楚地看到tweet中包含的内容。
何人看见。这并不意味着任何人都能读取这条tweet，但是同一个网络中的用户
This+is+a+tweet+for+practical+packet+analysis%zc+second+edition
的 status域，
这个数据时，你会看见一个叫做AuthenticityToken的域，紧随其后的是一个URL
ation
现在我们考虑一个具有安全内涵的场景：Twiter直达消息，该场景允许用
3.Twitter直达消息
这就有一个小小的安全问题，因为有些人希望保护他们的tweet，不想被任
这个status域的值就是我提交的未加密的tweet.
注意图8-5中包含在数据包的Line-basedTextData域中的信息O：当分析
图8-6的数据包7显示了内容仍然是明文发送的。很显然它同样处在Line-based
包含这个值：
图8-5明文显示的rwect
PateTTFL1 ek
#0（80）S2123454133.A:39Z47192.n216
第8章基础的现实世界场景155
---
## Page 171
8.1.2捕获Facebook流量
156Wireshark数据包分析实战（第2版）
Facebook流量。
交登录凭证。
的GET请求，如图8-8中的突出显示0。
deflateirin
1.Facebook登录过程
图8-7登录凭证通过HTTPS安全传输
31965541276422040111706
图8-6明文显示的直达消息
1
Image/ott.
1aage/pipeg.
00Qc3472720
1140
---
## Page 172
可能意味着消息是从某些类型的交互式弹出窗口中发出的，而不是来自独立的页
用了POST方法O。如你所见，这个字符串包含了对AJAX的引用。
HTTP头部时，如图8-10所示，你会看到浏览器对一个相当长的URL字符串使
消息过程中捕获的数据包。当你打开这个文件时，一些数据包或许会让你感到惊讶。
然后443端口上HTTPS连接被拆除。
home.php的内容后才拆除。首先，80端口上的HTTP连接被拆除（数据包62），
一种在客户端实现的、用于创建交互式Web应用的、在后台从服务器取回信息的
开头两个数据包构成了负责发送消息的HTTP流量。当你展开数据包2的
既然我们已经查看了Facebook的登录认证过程，让我们看一看它是如何处理私
2.Facebook私信
如图8-9的捕获文件尾部的数据包64所示0，用于身份认证的连接在传送
图8-8·身份认证之后，产生了指向/home.php的GET请求
图8-9HTTP连接和HTTPS连接相继被拆除
cTsst.k
ripeston
12271110.0k209031
第8章基础的现实世界场景157
生
---
## Page 173
8.1.3
158
Ve
8Wireshark数据包分析实战（第2版）
比较Twitter和Facebook的方法
Koeser
送的。
8
dTFbe
alfve'Vr`n
编写程序时，差异是存在的。
图8-11这条Facebook私信的内容可以明文查看
图8-10这个HTTPPOST引用了AJAX
223
DSt
(1544
ubuntu/9.1o (karmtc） Firefox/3.5,Brn
1sd-rV1C_u5er-10000093
如果你需要
中国
---
## Page 174
8.2
8.2.1
捕获ESPN.com流量
使用会话窗口
 Name resoluton
Ethemetl
浏览ESPN网站的流量捕获到http_espn.pcap文件中了。
供了一个很好的参考。
检查为什么相似服务的运转方式与预想不符，或者运转较慢，那么这个案例提
6235139152 172160.122
68.71208.113
68.71209.72
172.16.0.122
638536.72
172.16.0.122
172360.122
68.71.208.11
172.16.0122
4221
的会话窗口（Statistics->Conversations）来实现。
是很有用的，尤其是它究竟有一个来源还是多个来源。我们可以使用Wireshark
据包把数据传输给我们。不论何时当你要传输大量数据时，知道数据的来源都
我们将使用Wireshark的一些分析功能让该过程变得更加容易。
析整个文件以尝试辨别每个连接和异常，这数据量对我们而言就太大了。因此，
一些网站有助于这有趣的分析，htp:/www.espn.com便是其中之一。我已经把
Help
ESPN主页包含了太多的花哨设计，因此很容易理解为什么它会用近千个数
这个捕获文件包含很多数据包一
stions:htp.eipn.pcap
图8-12显示了包含14个IP会话、25个TCP连接、14个UDP会话的例子，
刷完社交网络后，下一步我就要看看最新的新闻头条以及运动赛事比分。
172.160122
205.23421867
172160122
205234218.112
172.160.122
172160122
OSCZETTET6OT
CePY