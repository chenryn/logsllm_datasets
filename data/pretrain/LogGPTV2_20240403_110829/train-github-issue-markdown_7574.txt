  * I have searched the issues of this repository and believe that this is not a duplicate.
  * I have checked the FAQ of this repository and believe that this is not a duplicate.
### Environment
  * Dubbo version: 2.7.8
  * Operating System version: macos
  * Java version: 1.8
I looked at the source code of ClassUtils.convertPrimitiveï¼ŒIn my opinion, it
would be better to use Converter to optimize this conversion.
source code:
    public static Object convertPrimitive(Class type, String value) {
            if (value == null) {
                return null;
            } else if (type == char.class || type == Character.class) {
                return value.length() > 0 ? value.charAt(0) : '\0';
            } else if (type == boolean.class || type == Boolean.class) {
                return Boolean.valueOf(value);
            }
            try {
                if (type == byte.class || type == Byte.class) {
                    return Byte.valueOf(value);
                } else if (type == short.class || type == Short.class) {
                    return Short.valueOf(value);
                } else if (type == int.class || type == Integer.class) {
                    return Integer.valueOf(value);
                } else if (type == long.class || type == Long.class) {
                    return Long.valueOf(value);
                } else if (type == float.class || type == Float.class) {
                    return Float.valueOf(value);
                } else if (type == double.class || type == Double.class) {
                    return Double.valueOf(value);
                }
            } catch (NumberFormatException e) {
                return null;
            }
            return value;
        }
Modify as follows:
    public static Object convertPrimitive(Class type, String value) {
            if (value == null) {
                return null;
           }
           Object result = null;
           try{
                  result = converter.convertIfPossible(value, type);
            }catch(Exception e){
                   result = null;
            }
            return result;
        }