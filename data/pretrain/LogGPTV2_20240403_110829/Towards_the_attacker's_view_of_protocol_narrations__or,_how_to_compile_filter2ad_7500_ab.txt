in (cid:126)T , respectively.
Example 1. Let us use markup term sets to model a princi-
pals’ knowledge after completion of the Otway-Rees protocol.
The initial knowledge of A, B, and C is given by Ta0, Tb0,
and Ts0, respectively, where
principal becomes
(cid:126)Ta =(cid:104)Ta0 ∪ {x4}, [{Na · Kab}Kas /x4](cid:105)
(cid:126)Tb =(cid:104)Tb0 ∪ {x1, x3},
[(M · A · B · {Na · M · A · B}Kas )/x1, {Nb · Kab}Kbs )/x3](cid:105)
(cid:126)Ts =(cid:104)Ts0 ∪ {x2},
[(A · B · {Na · M · A · B}Kas , {Nb · M · A · B}Kbs )/x2](cid:105)
where x1 to x4 indicate the four incoming messages.
3.2 Operational Equivalence
We have used a markup term set to represent a principal’s
epistemic state. Now, we introduce an indistinguishability
relation to capture one’s inability to discriminate two epis-
temic states.
Deﬁnition 3.2 (Operational Equivalence). Let T be a term
set and σ1 and σ2 be two substitutions such that Dom(σ1),
Dom(σ2) ⊆ f v(T ). They are operationally equivalent in
equational theory E w.r.t. term set T , written as σ1 ≈E,T
σ2, if for all terms u and v such that T (cid:96) {u, v} we have
uσ1 =E vσ1 ⇔ uσ2 =E vσ2.
Example 2. Consider again the Otway-Rees protocol. As
in Example 1, the initial knowledge of each principal is given
by Ta0, Tb0, and Ts0, respectively. After receiving the ﬁrst
message, the knowledge of B becomes Tb1 = Tb0 ∪ {x, y} =
{A, B, S, Nb, Kbs, x, y}, where x and y denote M and {Na ·
M · A · B}Kas , respectively.
Although it appears to be a black box to B due to the lack
of decryption key Kas, the message {Na·M·A·B}Kas cannot
be interpreted as an arbitrary message. To see this, we let
σ3 = [Na · Na/y], u =s fst(y), and v =s snd(y). Note that
Tb1 (cid:96) {u, v}, uσ3 =Edy vσ3 =Edy Na, and
uσ1 =s fst({Na · M · A · B}Kas )
vσ1 =s snd({Na · M · A · B}Kas )
Clearly, uσ1 (cid:54)=Edy vσ1 and uσ3 =Edy vσ3. Thus, σ1 (cid:54)≈Edy ,Tb1
σ3 follows immediately from Deﬁnition 3.2.
3.3 Recognizability
b
, she is able to “recognize” K +
Our work is built upon the concept of recognizablity [23],
which is proposed to formalize the idea of “verifying a mes-
sage”. Roughly speaking, a principal “recognizes” a message
if he or she has certain expectation about its binary rep-
resentation, or in other words, the message has an unam-
biguous interpretation. For instance, if Alice knows Na and
{Na}K+
b , because she can con-
struct {Na}K+
and compare it with her current knowledge.
Deﬁnition 3.3 (E-solver). Let (cid:126)T = (cid:104)T, σ0(cid:105) be a markup
term set and let X = f v(T ). We say that substitution θ is
an E-solver for (cid:126)T iﬀ the following conditions hold
(i). θ ≈E,T σ0 and
(ii). if σ ≈E,T σ0 and σ •≤X
E θ, then σ =X
E θ.
b
Ta0 = {M, A, B, S, Na, Kas}
Tb0 = {A, B, S, Nb, Kbs}
Ts0 = {A, B, S, Kas, Kbs}
We deﬁne a minimum complete set of E-solvers (MCS) Θ
for (cid:126)T and write (cid:126)T (cid:32)E Θ iﬀ the following condition holds: σ
is an E-solver of (cid:126)T iﬀ there exists one and only one θ ∈ Θ
such that θ =X
E σ.
Intuitively, an E-solver for (cid:126)T is a “most general” substitu-
tion that satisﬁes the operational equivalence imposed by (cid:126)T .
Since we are using relation •≤X
E to characterize “generality”,
the “most general” one may not be unique (modulo E) up
to renaming.
Deﬁnition 3.4 (Recognizability). Let (cid:126)T = (cid:104)T, σ0(cid:105) be a
markup term set and t be a ground term. We say that t is
recognized as t(cid:48) by (cid:126)T under equational theory E if there ex-
ists an E-solver θ for (cid:104)T ∪{x}, σ0◦[t/x](cid:105) such that xθ =E t(cid:48),
where x is a fresh variable. Moreover, we say that t is rec-
ognizable by (cid:126)T under equational theory E and write (cid:126)T E t
if t is recognized as itself by (cid:126)T under E.
At this point, we can use recognizability to deﬁne the
interpretation(s) of an incoming message. Let (cid:126)T denote a
principal’s knowledge. An incoming message t is interpreted
as t(cid:48) if and only if t is recognized as t(cid:48) by (cid:126)T under E.
Example 3. Let us consider the following ASW protocol,
which is proposed by Asokan et. al.
[6] for fair exchange
and contract signing.
1. A → B : {K +
2. B → A : {{K +
3. A → B : Na
4. B → A : Nb
b , M, hash(Na)}K
b , M, hash(Na)}K
, hash(Nb)}K
a , K +
a , K +
−
b
−
a
−
a
We assume that the initial knowledge of A and B as follows.
Ta0 = {M, A, B, K +
Tb0 = {A, B, K +
a , K +
a , Na}
−
a , K +
b , K
b , Nb}
−
b , K
Let σa0 and σb0 be the intended interpretations of the mes-
sages received by A and B, respectively. After the protocol
run is completed, the knowledge of each principal becomes
(cid:126)Ta = (cid:104)Ta0 ∪ {x2, x4}, σa0(cid:105)
(cid:126)Tb = (cid:104)Tb0 ∪ {x1, x3}, σb0(cid:105)
where x1 to x4 signify the four incoming messages, and
σa0 = [{{K+
σb0 = [{K+
b · M · hash(Na)}
b · M · hash(Na)}
a · K+
a · K+
· hash(Nb)}
/x1, Na/x3]
−
b
−
a
K
K
−
a
K
/x2, Nb/x4]
Let
b ))
a · K +
u1 =s fst(pdec(x2, K +
u2 =s {K +
u3 =s snd(pdec(x2, K +
u4 =s hash(x4)
b · M · hash(Na)}K
−
a
b ))
Then, from A’s point of view, u1σa0 =Edy u2σa0 and u3σa0 =Edy
u4σa0. Note that A knows u1,··· , u4 and σa0 ≈Edy ,Ta0∪{x2,x4}
σa.
Let σa and σb be possible interpretations of ambiguous
messages received by A and B, respectively. By operational
equivalence, we have u1σa =Edy u2σa and u3σa =Edy u4σa,
which hold iﬀ
x2σa =Edy {{K +
Now, it is not hard to see that substitution
θa = [{{K +
b · M · hash(Na)}K
· hash(x4)σa}K
b · M · hash(Na)}K
· hash(x4)}K
a · K +
a · K +
/x2]
−
b
−
a
−
a
−
b
is an Edy-solver for (cid:126)Ta. In fact, θa is the only Edy-solver
for (cid:126)Ta up to variable renaming and term rewriting. So, the
two messages received by A should be interpreted as {{K +
a ·
b · M · hash(Na)}K
K +
and x4, respectively.
· hash(x4)}K
−
a
−
b
A similar analysis shows that substitution
θb = [{K +
a · K +
b · y · hash(x3)}K
−
a
/x1]
is the only Edy-solver for (cid:126)Ta up to variable renaming and
term rewriting. So, the two messages received by B should be
interpreted as {K +
and x3, respectively.
b ·y·hash(x3)}K
a ·K +
−
a
Now, we discuss how to obtain a MCS for a given markup
term set. To determine E-solvers, we ﬁrst construct condi-
tions imposed by operational equivalence, such as u1σa0 =Edy
u2σa0 and u3σa0 =Edy u4σa0 in the previous example, and
then update substitutions by solving those equations. This
is reminiscent of the constraint solving approach proposed
by Millen and Shmatikov [29]. Here, we apply the constraint
solving methodology to ﬁnd a MCS.
A constraint of a markup term set (cid:104)T, σ(cid:105) under equational
theory E is an unordered pair (u, v) of terms such that T (cid:96)
{u, v}, uσ =E vσ, and u (cid:54)=E v. We say that θ is an E-uniﬁer
of a constraint set C and write θ (cid:15)E C if uθ =E vθ for every
(u, v) ∈ C. Substitution set Θ is a minimal complete set of
E-uniﬁer (MCU) of C, written as C (cid:32)E Θ, if the following
conditions hold:
• θ (cid:15)E C for each θ ∈ Θ,
E σ whenever σ (cid:15)E C,
• there exists a θ ∈ Θ such that θ •≤X
• two distinct elements of Θ are incomparable w.r.t. •≤X
E .
Deﬁnition 3.5 (Constraint Base). Let (cid:126)T be a markup term
set and E an equational theory. Suppose that C is the set of
all constraints of (cid:126)T under E and C (cid:32)E Θ. Then, we say
that C(cid:48) is a constraint base of (cid:126)T under E if C(cid:48) is the smallest
constraint set satisfying that C(cid:48) (cid:32)E Θ and C(cid:48) is ﬁnite.
This is analogous to the deﬁnition “ﬁnite basis property”
given in [13]. In Example 3, we see {(u1, u2), (u3, u4)} is a
constraint base of (cid:126)Ta.
Proposition 3.6. Let (cid:126)T = (cid:104)T, σ(cid:105) be a markup term set.
Suppose that C is a constraint base of (cid:126)T . Then, (cid:126)T (cid:32)E Θ iﬀ
C (cid:32)E Θ.
In view of Proposition 3.6, we reduce the problem of ob-
taining a MCS to that of ﬁnding and solving a constraint
base. This problem is undecidable in general, because E-
uniﬁcation is undecidable [33, Chapter 8]. Nonetheless, re-
stricting ourselves to some speciﬁc equational theories is
likely to yield decidable results. Notably, a procedure is
given in [24] to decide recognizability under the standard
Dolev-Yao model. Due to space limit, we do not pursue
these further here. Henceforth, let us assume that constraint
bases are obtained.
4. THE IDEAL SEMANTICS
Having discussed the interpretation(s) of a message, we
now discuss how to extract ideal semantics from protocol
narrations. We avoid introducing new formalism and base
the semantics on strand space model [20], a widely-used for-
malism in modeling and verifying security protocols [22, 34,
29]. In this paper, strands serve three purposes: (a) describ-
ing a real protocol execution trace; (b) providing protocol
semantics; and (c) specifying a protocol implementation (in
the next section).
4.1 Strands
In the strand space model, an event is a signed term +t or
−t that indicates the sending (+) or receiving (-) of a mes-
sage. A strand (cid:126)s is a ﬁnite sequence of nodes that describe
the events happening at a legitimate party or an intruder;
the i-th node of the strand is denoted by (cid:126)s[i]. Nodes within
the same strand and among diﬀerent strands are linked by
the relationships ⇒ and →, respectively. More speciﬁcally,
⇒ is used to indicate a protocol role’s execution sequence;
and → is used to specify the communication between dif-
ferent principals. A bundle is a ﬁnite subgraph of strand
spaces that can be viewed as a snapshot of a protocol execu-
tion. Figure 2 shows a bundle that illustrates the expected
execution of the ASW protocol.
Figure 2: ASW protocol: a bundle.
Each strand in a bundle describing an expected protocol
execution is associated with a role of the protocol. For in-
stance, the two strands in Figure 2 correspond to the roles
A and B in the ASW protocol. We have seen that mes-
sages exchanged between principals (taking some roles) can
be interpreted considerably diﬀerently; and an unrecogniz-
able (part of) message is often treated as a free variable. For
example, role A in the ASW protocol should be speciﬁed by
A[M, A, B, Na, x]