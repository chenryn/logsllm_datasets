### Optimization of Text for Clarity, Coherence, and Professionalism

#### Image Recognition Processing Rate Monitoring
The `fps_monitor` node is responsible for generating the processing rate of the image recognition process. The number of `fps_monitor` nodes required depends on the number of image-related nodes. For MSRs (Mission-Specific Resources), there is only one MSRCN (Mission-Specific Resource Coordination Node). This is because all event-related and action-related nodes publish their messages to the MSRCN, which then forwards the action message to the relevant actuator driver nodes.

#### Table 7: Number of Coordination Nodes in Four Robot Applications
Table 7 lists the numbers of three types of coordination nodes (CNs) in four robot applications. GRCNs (General Resource Coordination Nodes) make up a significant portion of the total added nodes. Due to the high number of RSR (Robot-Specific Resource) image-related interactions, the autorace application has more `fps_monitor` nodes compared to the home application.

| Scenario | GRCN (Perception) | GRCN (Planning) | GRCN (Control) | RSR (FMN CN) | MSR (CN) |
|----------|-------------------|-----------------|----------------|--------------|-----------|
| Home     | 8                 | 16              | 4              | 1            | 1         |
| AutoRace | 11                | 3               | 2              | 1            | 1         |
| Apollo   | 1                 | 3               | 1              | 2            | 1         |
| Autoware | 4                 | 1               | 2              | 5            | 1         |

#### High-Risk Nodes in Home and AutoRace Applications
Table 6 provides examples of high-risk nodes in the Home and AutoRace applications. These nodes are categorized by risk type and include sub-topic names and types, as well as published topic names and types.

| Scenario | Risk Type | High-Risk Nodes | Sub Topic Name | Sub Topic Type | Pub Topic Name | Pub Topic Type | Pub Node |
|----------|-----------|-----------------|----------------|----------------|----------------|----------------|----------|
| Home     | GR-ST     | /move_base      | -              | -              | /cmd_vel       | geometry_msgs/Twist | /gazebo |
| Home     | GR-MT     | /teleop_twist_keyboard | - | - | /cmd_vel | geometry_msgs/Twist | /gazebo |
| Home     | RSR-Image | /find_object_3d | /camera/rgb/image_raw | sensor_msgs/Image | /objects | std_msgs/Float32MultiArray | /search_manager |
| Home     | MSR-Event | /rosbot_tts     | -              | -              | -              | -              | -        |
| Home     | MSR-Action | /detect_tunnel  | -              | -              | -              | -              | -        |
| AutoRace | GR-ST     | /move_base      | -              | -              | /cmd_vel       | geometry_msgs/Twist | /gazebo |
| AutoRace | GR-MT     | /teleop_twist_keyboard | - | - | /cmd_vel | geometry_msgs/Twist | /gazebo |
| AutoRace | RSR-Image | /detect_lane    | -              | -              | /control/max_vel | std_msgs/Float64 | /control/lane |
| AutoRace | RSR-Max_vel | /detect_traffic_light | - | - | /detect/traffic_sign | std_msgs/UInt8 | /core_mode_decider |
| AutoRace | MSR-Event | /detect_tunnel  | -              | -              | -              | -              | -        |
| AutoRace | MSR-Action | /detect_parking | -              | -              | -              | -              | -        |

#### High-Risk Interacted Topics and Features in the Home Application
Table 8 lists the high-risk interacted topics and features for three types of GRCNs in the home application.

| CN Type | Interacted Topics | Feature |
|---------|-------------------|---------|
| Perception | `/explore_server/status`, `/move_base/status`, `tf`, `tf_static`, `/camera/rgb/image_raw`, `/camera/depth/image_raw`, `/move_base/global_costmap/footprint`, `/move_base/local_costmap/footprint` | State, Parallelization |
| Planning | `/move_base/goal`, `/move_base/cancel`, `/move_base_simple/goal` | Goal, Queuing |
| Control | `/cmd_vel` | Action, Preemption |

#### Performance Overhead
**Offline Overhead:** We evaluated the risk discovery stage of RTron in terms of processing time for identifying high-risk nodes in a robot application. Table 9 reports the performance results for nine robot applications with varying numbers of topics and nodes. Each experiment was repeated 20 times to calculate the average latency. The results indicate that the risk discovery process has negligible overhead as an offline process. The processing time is influenced by the number of topics and nodes, as risk identification involves traversing either nodes or topics (Algorithm 1). Specifically, there are two iterations in the process of both GR and RSR discovery and one iteration of topics in the MSR discovery process. Thus, discovering GR takes a similar amount of time as RSR, which is longer than MSR. One exception is the autorace application, which has the largest processing time but fewer nodes and topics than the home application. This is due to the higher number of high-risk GR interactions in the autorace application, which adds extra work (i.e., related topic type and name matching) in the node iteration process.

**Runtime Overhead:** This includes the overhead from the coordination nodes and security service. The security service is responsible for risk monitoring and policy configuration of each coordination node without interfering with the execution of the robot application. Similar to IoT policy enforcement systems [42, 53], we ignore the overhead of this process since users manually configure the policy for each CN only at the mission launch stage or during scenario changes. The coordination nodes are distributed among function nodes in the robot application, which can increase the end-to-end latency from the perception to the control stages. Although there is a potential increase in latency, the overall impact is minimal.

#### Table 9: Processing Time for Potential Risk Discovery
| Scenario | RSR (s) | MSR (s) | GR (s) |
|----------|---------|---------|--------|
| Home     | 0.114   | 0.113   | 0.057  |
| AutoRace | 0.011   | 0.035   | 0.035  |
| Apollo   | 0.152   | 0.299   | 0.308  |
| Autoware | 0.498   | 0.727   | 0.764  |
| Other    | 0.753   | 1.086   | 1.12   |
|          | 3.121   | 3.199   | 1.927  |
|          | 2.105   | 4.049   | 4.075  |
|          | 0.306   | 0.606   | 0.631  |
|          | 2.945   | 2.931   | 1.747  |
|          | 17      | 7       | 25     |
|          | 63      | 84      | 125    |
|          | 112     | 39      | 218    |

This optimized text should be clearer, more coherent, and more professional.