User: 为了实现日志查询分析需求，编写了一段 SPL 语句，请你从专家角度，逐步思考分析需求，尽量详细的解释语句内容是如何实现需求的。

## 分析需求
Windows_AD数据，编写查询语句实现如下分析场景AD新建用户数量

## SPL 语句
appname:windows (json.event_id:4720 ) NOT (json.username:*$ OR json.username:SYSTEM)|stats dc(json.username) as dc_uname 

## 具体解释

Assistant: 为了满足分析需求，我们首先需要理解查询的目的：统计AD（Active Directory，活动目录）中新建用户的数量。根据提供的SPL（日志易查询语言）语句，我们可以逐步分析其内容及如何实现这一需求。

### 分析需求

需求明确指出是分析AD新建用户数量，这通常意味着需要从Windows事件日志中找出与新建用户相关的记录。在新建用户的场景中，一个常见的Windows事件ID是4720，这个事件通常与“新用户帐户创建”有关。

### SPL语句解析

1. **appname:windows**

这一部分是对数据的来源进行筛选，限定在Windows相关的数据中。
2. **json.event_id:4720**

这是对事件ID的筛选，只选择事件ID为4720的记录。这一步确保我们只获取与新建用户相关的记录。
3. **NOT (json.username:*$ OR json.username:SYSTEM)**

这部分是对不需要的记录进行排除。这里排除了用户名中包含“*$”或者用户名是“SYSTEM”的记录。通常“*$”表示临时或未知的用户，而“SYSTEM”是系统账户，这两者都不计入新建用户的统计。
4. **stats dc(json.username) as dc_uname**

这是统计的命令。`dc` 是“distinct count”的缩写，表示不同的计数。这一步的目的是统计不同的用户名数量，即新建用户的数量。`as dc_uname` 表示将这个统计结果命名为“dc_uname”，这样在结果展示时，这一列将显示统计的用户数量。

### 如何实现需求

整体上，这个查询语句通过以下几个步骤实现了分析AD新建用户数量的需求：

1. 从Windows相关的数据中筛选出事件ID为4720的记录。
2. 排除掉不需要的记录（如临时用户和系统账户）。
3. 对筛选后的记录进行统计，计算不同的用户名数量，即新建用户的数量。

通过这个查询语句，日志易能够快速地从大量数据中提取出与新建用户相关的信息，并进行统计，从而满足分析AD新建用户数量的需求。