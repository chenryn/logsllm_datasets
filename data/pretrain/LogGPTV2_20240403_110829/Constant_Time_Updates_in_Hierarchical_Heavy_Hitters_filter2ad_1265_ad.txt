Proof. We use Theorem 6.4 and get:
(cid:12)(cid:12)(cid:12) ≥ εs N
V (1 + εs)(cid:17) ≥ 1 − δs , completing the proof.
Pr(cid:16)(cid:12)(cid:12)(cid:12)Xi − N
Pr(cid:16)
≥ 1 − δs .
V
(cid:3)
Xi ≤ N
We explain now how to configure our algorithm to defend against
situations in which a given approximate HH algorithm might get
too many updates, a phenomenon we call over sample. Corollary 6.6
bounds the probability for such an occurrence, and hence we can
slightly increase the accuracy so that in the case of an over sample,
we are still within the desired limit. We use an algorithm (A) that
solves the (εa, δa) - Freqency Estimation problem. We define
ε′
. According to Corollary 6.6, with probability 1 − δs, the
a (cid:44) εa1+εs
number of sampled packets is at most (1 +εs) N
bound and with probability 1 − δa − δs we get:
= εa (1 + εs)
1 + εs
(cid:12)(cid:12)(cid:12)X p −(cid:99)X p(cid:12)(cid:12)(cid:12) ≤ εa′ (1 + εs) N
V
N
V
= εa
N
V
.
V . By using the union
For example, Space Saving requires 1, 000 counters for ϵa = 0.001.
If we set ϵs = 0.001, we now require 1001 counters. Hereafter, we
assume that the algorithm is configured to accommodate these over
samples.
Theorem 6.7. Consider an algorithm (A) that solves the (ϵa, δa) -
Freqency Estimation problem. If N > ψ , then for δ ≥ δa + 2 · δs
and ϵ ≥ ϵa + ϵs , A solves (ϵ, δ) - Freqency Estimation.
V
Pr
(ϵ, δ) - Freqency Estimation.
and multiplying both sides by V gives us:
Proof. As N > ψ, we use Theorem 6.4. That is, the input solves
of updates for prefix p. According to Corollary 6.6:
≥ 1 − δa − δs ,
(1)
A solves the (ϵa, δa) - Freqency Estimation problem and pro-
vides us with an estimator(cid:99)X p that approximates X p – the number
Pr(cid:2)(cid:12)(cid:12)fp − XpV(cid:12)(cid:12) ≥ εs N(cid:3) ≤ δs .
(cid:18)(cid:12)(cid:12)(cid:12)X p −(cid:99)X p(cid:12)(cid:12)(cid:12) ≤ εa N
(cid:19)
(cid:12)(cid:12)(cid:12) ≥ εa N
Pr(cid:16)(cid:12)(cid:12)(cid:12)X pV −(cid:99)X pV
(cid:17) ≤ δa + δs .
(cid:12)(cid:12)(cid:12) ≤ εN
We need to prove that: Pr(cid:16)(cid:12)(cid:12)(cid:12)fp −(cid:99)X pV
(cid:17) ≥ 1 − δ. Recall that:
fp = E(X p)V and that(cid:98)fp = (cid:99)X pV is the estimated frequency of p.
(cid:12)(cid:12)(cid:12) ≥ ε N
= Pr(cid:16)(cid:12)(cid:12)(cid:12)fp −(cid:99)X pV
(cid:12)(cid:12)(cid:12) ≥ ε N
Pr(cid:16)(cid:12)(cid:12)(cid:12)fp −(cid:98)fp
(cid:17)
(cid:17)
= Pr(cid:16)(cid:12)(cid:12)(cid:12)fp +(cid:0)X pV − X pV(cid:1) − V(cid:99)X p(cid:12)(cid:12)(cid:12) ≥ (ϵa + ϵs)N
(cid:17)
(cid:12)(cid:12)(cid:12) ≥ εa N
≤ Pr(cid:16)(cid:2)(cid:12)(cid:12)fp − X pV(cid:12)(cid:12) ≥ εs N(cid:3) ∨(cid:104)(cid:12)(cid:12)(cid:12)X pV −(cid:99)X pV
Pr(cid:16)(cid:12)(cid:12)(cid:12)fp −(cid:98)fp
Pr(cid:0)(cid:12)(cid:12)fp − X pV(cid:12)(cid:12) ≥ εs N(cid:1) + Pr(cid:16)(cid:12)(cid:12)(cid:12)X pV −(cid:99)X pH
where the last inequality follows from the fact that in order for the
error of (3) to exceed ϵN , at least one of the events has to occur.
We bound this expression using the Union bound.
(cid:12)(cid:12)(cid:12) ≥ εa N
(cid:12)(cid:12)(cid:12) ≥ εN
(cid:17) ≤
Thus,
(cid:105)(cid:17)
(cid:17)
(2)
(3)
,
≤ δa + 2δs ,
where the last inequality is due to equations 1 and 2.
(cid:3)
An immediate observation is that Theorem 6.7 implies accuracy,
as it guarantees that with probability 1 − δ the estimated frequency
of any prefix is within εN of the real frequency while the accuracy
requirement only requires it for prefixes that are selected as HHH.
Lemma 6.8. If N > ψ , then Algorithm 1 satisfies the accuracy
constraint for δ = δa + 2δs and ϵ = ϵa + ϵs .
Proof. The proof follows from Theorem 6.7, as the frequency
(cid:3)
estimation of a prefix depends on a single HH algorithm.
Constant Time Updates in Hierarchical Heavy Hitters
Multiple Updates
One might consider how RHHH behaves if instead of updating
at most 1 HH instance, we update r independent instances. This
implies that we may update the same instance more than once per
packet. Such an extension is easy to do and still provides the re-
quired guarantees. Intuitively, this variant of the algorithm is what
one would get if each packet is duplicated r times. The following
corollary shows that this makes RHHH converge r times faster.
Corollary 6.9. Consider an algorithm similar to RHHH with
V = H, but for each packet we perform r independent update operati-
ψ
ons. If N >
r , then this algorithm satisfies the accuracy constraint
for δ = δa + 2δs and ϵ = ϵa + ϵs .
Proof. Observe that the new algorithm is identical to running
RHHH on a stream (S′) where each packet in S is replaced by r
consecutive packets. Thus, Lemma 6.8 guarantees that accuracy is
achieved for S′ after ψ packets are processed. That is, it is achieved
for the original stream (S) after N >
(cid:3)
6.2 Coverage Analysis
Our goal is to prove the coverage property of Definition 3.10. That is:
(cid:17) ≥ 1−δ . Conditioned frequencies are calculated in
Pr(cid:16)Cq|P ≥ Cq|P
a different manner for one and two dimensions. Thus, Section 6.2.1
deals with one dimension and Section 6.2.2 with two.
packets.
We now present a common definition of the best generalized
ψ
r
prefixes in a set.
Definition 6.10 (Best generalization). Define G(q|P) as the set
{p : p ∈ P, p ≺ q,¬∃p′ ∈ P : q ≺ p′ ≺ p}. Intuitively, G(q|P) is the
set of prefixes that are best generalized by q. That is, q does not
generalize any prefix that generalizes one of the prefixes in G(q|P).
6.2.1 One Dimension
We use the following lemma for bounding the error of our con-
h∈G(q|P) fh .
√
+ 2Z1−δ
NV .
Proof. Looking at Line 12 in Algorithm 1, we get that:
Using Lemma 6.11, it is easier to establish that the conditioned
frequency estimates calculated by Algorithm 1 are conservative.
Lemma 6.12. The conditioned frequency estimation of Algorithm 1
ditioned count estimates.
Lemma 6.11. ([35]) In one dimension,
Cq|P = fq −
+ −
is: Cq|P =(cid:98)fq
Cq|P =(cid:98)fq
dimension (Algorithm 2) is
In deterministic settings,(cid:98)fq
estimate since(cid:98)fq
h∈G(q|P)(cid:98)fh
h∈G(q|P)(cid:98)fh
+ −
+ ≥ fq and fh  Cq|P
Theorem 6.13. Pr(cid:16)Cq|P ≥ Cq|P
(cid:17) ≥ 1 − δ .
q − 
(cid:98)f
Proof. Recall that:Cq|P =(cid:98)f
We denote by K the set of packets that may affectCq|P . We split
Cq|P and K− contains the packets that may negatively impact it.
We use K + to estimate the sample error in(cid:98)fq and K− to estimate
the sample error in 
K into two sets: K + contains the packets that may positively impact
. The positive part is easy to estimate.
In the negative, we do not know exactly how many bins affect the
sum. However, we know for sure that there are at most N . We
define the random variable Y K
+ that indicates the number of balls
included in the positive sum. We invoke Lemma 6.3 on Y K
+ . For the
negative part, the conditioned frequency is positive so E
at most N
V
we use Lemma 6.3 to bound the error of Y−
K
h∈G(q|P)(cid:98)f −
≤ δ4 . Similarly,
(cid:18)(cid:12)(cid:12)(cid:12)Y +
(cid:17) is
. Hence, Pr
K − E
Y K−
(cid:19)
(cid:16)
h
Y +
K
(cid:17)(cid:12)(cid:12)(cid:12) ≥ Z1− δ8
(cid:16)
(cid:114)
−)(cid:12)(cid:12) ≥ Z1− δ8
:
(cid:113) N
(cid:33)
V
Pr
−
K − E (YK
≤ δ
4 .
+ is monotonically increasing with any ball and Y−
is monotoni-
Y K
cally decreasing with any ball. Therefore, we can apply Lemma 6.2
on each of them and conclude:
N
V
K
(cid:32)(cid:12)(cid:12)Y
Pr(cid:16)Cq|P ≥ Cq|P
2 Pr(cid:16)
(cid:16)
Y−
K
H
+ Y +
K
≤ 1 − 2 δ2 = 1 − δ .
(cid:17) ≤
(cid:17) ≥ V E
(cid:16)
(cid:17)
Y−
K
+ Y +
K
√
NV
+ 2Z1− δ8
(cid:17)
(cid:3)
Theorem 6.14. If N > ψ , Algorithm 1 solves the (δ, ε, θ) - Ap-
proximate HHH problem for δ = δa + 2δs and ε = εs + εa.
Proof. We need to show that the accuracy and coverage guaran-
tees hold. Accuracy follows from Lemma 6.8 and coverage follows
from Theorem 6.13 that implies that for every non heavy hitter
prefix (q),Cq|P < θ N and thus:
Pr(cid:16)
Cq|P < θ N
(cid:17) ≥ 1 − δ .
(cid:3)
6.2.2 Two Dimensions
Conditioned frequency is calculated differently for two dimen-
sions, as we use inclusion/exclusion principles and we need to
show that these calculations are sound too. We start by stating the
following lemma:
Lemma 6.15. ([35]) In two dimensions,
Cq|P = fq − 
fh + 
h∈G(q|P)
h,h′∈G(q|P)
fglb(h,h′).
SIGCOMM ’17, August 21-25, 2017, Los Angeles, CA, USA
R. Ben Basat, G. Einziger, R. Friedman, M.C. Luizelli, and E. Waisbard
ˆf +
glb(h,h′) + 2Z1− δ8
√
N V .
In contrast, Algorithm 1 estimates the conditioned frequency as:
Lemma 6.16. In two dimensions, Algorithm 1 calculates conditio-
Proof. The proof follows from Algorithm 1. Line 12 is respon-
q while Line 13 is responsible for the
last element. The rest is due to the function calcPredecessors in
Algorithm 3.
(cid:3)
h
ˆf −
h∈G(q|P)
+ 
q − 
h,h′∈G(q|P)
ned frequency in the following manner:
Cq|P = ˆf +
sible for the first element(cid:99)f +
(cid:17) ≥ 1 − δ .
Theorem 6.17. Pr(cid:16)Cq|P ≥ Cq|P
+ 
(cid:98)f
(cid:98)f
q − 
(cid:98)f
tings, as shown in [35],
+
−
h
h∈G(q|P)
h,h′∈G(q|P)
Proof. Observe Lemma 6.15 and notice that in deterministic set-
+
glb(h,h′)
√
NV .
is a conservative estimate for Cq|P . Therefore, we need to account
for the randomization error and verify that with probability 1 − δ