[5] D. Boneh, A. Sahai and B. Waters, “Fully collusion
resistant traitor tracing with short ciphertexts and
private keys,” in EUROCRYPT’06, Springer, pp.
573-592, 2006.
[6] D. Boneh and B. Waters, “A fully collusion resistant
broadcast, trace, and revoke system,” in ACM
CCS’06, pp. 211-220, 2006.
[7] N. Cao, Z. Yang, C. Wang, K. Ren and W. Lou,
“Privacy-preserving query over encrypted
graph-structured data in cloud computing,” in IEEE
ICDCS’11, pp. 393-402, 2011.
[8] S. Chow, C. Chu, X. Huang, J. Zhou and R. Deng,
“Dynamic secure cloud storage with provenance,” in
Cryptography and Security, Festschrift Jean-Jacques
Quisquater, Springer, pp. 442-464, 2012.
[9] S. Chow, Y. He, L. Hui and S. Yiu, “SPICE-Simple
Privacy-preserving Identity-management for Cloud
Environment,” in ACNS’12, pp. 526-543, 2012.
[10] C. K. Chu and W. G. Tzeng, “Identity-based proxy
re-encryption without random oracles,” in ISC’07,
Springer, pp. 189-202, 2007.
[11] C. Delerabl´ee, “Identity-based broadcast encryption
with constant size ciphertexts and private keys,” in
ASIACRYPT’07, Springer, pp. 200-215, 2007.
[12] S. Garg, A. Kumarasubramanian, A. Sahai and B.
Waters, “Building eﬃcient fully collusion-resilient
traitor tracing and revocation schemes,” in ACM
CCS’10, pp. 121-130, 2010.
[13] M. Green and G. Ateniese, “Identity-based proxy
re-encryption,” in ACNS’07, Springer, pp. 288-306,
2007.
[14] F. Guo, Y. Mu and W. Susilo, “Identity-based traitor
tracing with short private key and short ciphertext,”
in ESORICS’12, Springer, pp. 609-626, 2012.
[15] K. Kent, S. Chevalier, T. Grance and H. Dang,
“Integrating forensic techniques into incident
response,” NIST Special Publication 800-86 Notes,
[online]:
http://cybersd.com/sec2/800-86Summary.pdf
[16] Z. Liu, Z. F. Cao and D. S. Wong, “White-box
traceable ciphertext-policy attribute-based encryption
supporting any monotone access structures,” in IEEE
Trans. Information Forensics and Security, vol. 8, no.
1, pp. 76-88, 2013.
[17] Z. Liu, Z. F. Cao and D. S. Wong, “Expressive
black-box traceable ciphertext-policy attribute-based
encryption,” IACR ePrint Archive 669, 2012.
[18] Z. Liu, Z. F. Cao and D. S. Wong, “Blackbox traceable
CP-ABE: how to catch people leaking their keys by
selling decryption devices on ebay,” in ACM CCS’13,
pp. 475-486, 2013.
[19] H. Lin, J. Shao, C. Zhang and Y. Fang, “CAM:
Cloud-assisted privacy preserving mobile health
monitoring,” in IEEE Trans. Information Forensics
and Security, vol. 8, no. 6, pp. 985-997, 2013.
[20] M. Li, S. Yu, W. Lou and Y. T. Hou, “Toward
privacy-assured cloud data services with ﬂexible
search functionalities,” in IEEE ICDCS Workshops’12,
pp. 466-470, 2012.
[21] M. Li, S. Yu, K. Ren and W. Lou, “Securing personal
health records in cloud computing: patient-centric and
ﬁne-grained data access control in multi-owner
settings,” in SecureCom’10, Springer, pp. 89-106, 2010.
[22] M. Li, S. Yu, Y. Zheng, K. Ren and W. Lou, “Scalable
and secure sharing of personal health records in cloud
computing using attribute-based encryption,” in IEEE
Trans. Parallel and Distributed Systems, vol. 24, no. 1,
pp. 131-143, 2013.
[23] L. Nguyen and R. Safavi-Naini, “Eﬃcient and
provably secure trapdoor-free group signature schemes
from bilinear pairings,” in ASIACRYPT’04, Springer,
pp. 372-386, 2004.
[24] K. Nuida, S. Fujitsu, M. Hagiwara, T. Kitagawa, H.
Watanabe, K. Ogawa and H. Imai, “An improvement
of discrete Tardos ﬁngerprinting codes,” in Designs,
Codes and Cryptography, vol. 52, no. 3, pp. 339-362,
2009.
[25] V. Pappas, V. P. Kemerlis, A. Zavou, M.
Polychronakis and A. D. Keromytis, “CloudFence:
data ﬂow tracking as a cloud service,” [online]:
http:www.cs.columbia.edu/~angelos/Papers/\\
2013/cloudfence.pdf, 2013.
[26] B. Qin, H. Wang, Q. Wu, J. Liu and J.
Domingo-Ferrer, “Simultaneous authentication and
secrecy in identity-based data upload to cloud,”
Cluster Computing, vol. 16, no. 4, pp. 845-859, 2013.
[27] F. Seb´e, J. Domingo-Ferrer, A. Mart´ınez-Ballest´e, Y.
Deswarte and J.-J. Quisquater, “Eﬃcient remote data
possession checking in critical information
infrastructures,” in IEEE Trans. Knowl. Data Eng.,
vol. 20, no. 8, pp. 1034-1038, 2008.
[28] U. Somani, K. Lakhani and M. Mundra,
“Implementing digital signature with RSA encryption
algorithm to enhance the data security of cloud in
cloud computing,” in IEEE PDGC’10, pp.211-216.
2010.
[29] G. Tardos, “Optimal probabilistic ﬁngerprint codes,”
in STOC’03, ACM, pp.116-125, 2003.
[30] Y. S. Tan, R. K. Ko, P. Jagadpramana, C. H. Suen,
M. Kirchberg, T. H. Lim, B. S. Lee, A. Singla, K.
Mermoud, D. Keller and H. Duc, “Tracking of data
leaving the cloud,” in TrustCom’12, IEEE, pp.
137-144, 2012.
[31] B. Wang, S. Chow, M. LI and H. Li. “Storing shared
data on the cloud via security-mediator,” in IEEE
ICDCS’13. To appear, 2013.
[32] C. Wang, S. Chow, Q. Wang, K. Ren and W. Lou,
“Privacy-preserving public auditing for secure cloud
storage,” in IEEE Trans. Computers, vol. 62, no. 2,
pp. 362-375, 2013.
[33] F. Wang, J. Liu and M. Chen, “CALMS:
Cloud-Assisted Live Media Streaming for globalized
demands with time/region diversities,” in IEEE
INFOCOM’12, pp. 199-207, 2012.
[34] H. Wang, R. Shea, F. Wang and J. Liu, “On the
impact of virtualization on dropbox-like cloud ﬁle
storage/synchronization services,” in IEEE Conf.
International Workshop on Quality of Service, pp. 1-9,
2012.
[35] B. Waters, “Dual system encryption: realizing fully
secure IBE and HIBE under simple assumptions,” in
CRYPTO’09, Springer, pp.619-636, 2009.
[36] K. Yang, X. Jia and K. Ren, “Attribute-based
[37] J. Yu, P. Lu, Y. Zhu, G. Xue and M. Li, “Toward
ﬁne-grained access control with eﬃcient revocation in
cloud storage systems,” in ASIACCS’13, pp. 523-528,
2013.
secure multikeyword top−k retrieval over encrypted
cloud data,” in IEEE Trans. Dependable and Secure
Computing, vol. 10, no. 4, pp. 239-250, 2013.
[38] J. Yuan and S. Yu, “Privacy preserving
back-propagation neural network learning made
practical with cloud computing,” in IEEE Trans.
Parallel and Distributed Systems. To appear, 2013.
[39] O. Q. Zhang, R. K. Ko, M. Kirchberg, C. H. Suen, P.
else, compute
Jagadpramana and B. S. Lee, “How to track your
data: rule-based data provenance tracing algorithms,”
in TrustCom’12, IEEE, pp. 1429-1437, 2012.
and
0 ← Encrypt
(cid:48)
∗
(M P K,{ID
CT
z|j|0}r
∗
z=1, Mj)
1 ← Encrypt
(cid:48)
∗
(M P K,{ID
z|j|1}r
∗
CT
z=1, Mj).
3. Query the pirate decryptor PD on the ciphertext
∗
CT
∗
1 ).
∗
0 , CT
= (j, CT
Deﬁne the output of PD as M∗
j . If all codewords in W
have a 1 in position j, set the bit θ∗
j = Mj;
otherwise, set it to θ∗
If all codewords in W have a 0 in position j, set the bit
θ∗
j = 1 if M∗
j = Mj; otherwise, set it to θ∗
j = 0 if M∗
j = 0.
j = 1.
1 θ∗
2 ··· θ∗
This modiﬁed tracing procedure then obtains the traced fea-
sible codeword θ∗ = θ∗
l . In this procedure, if all the
codewords in W have a 1 in position j, then the pirate de-
cryptor outputs a random message M∗
j . With probability
1/|M| at most, M∗
j = Mj holds. Thus, the modiﬁed pro-
cedure outputs θ∗
j = 0 holds only with the negligible proba-
bility 1/|M|. Similarly, if all the codewords in W have a 0
j = 1 holds with the probability 1/|M|. We
in position j, θ∗
ignore the case that the j-th bit of some codewords in W is
equal to either 1 or 0, since this will not essentially aﬀect
the tracing procedure. The experiment above is run for l
times, thus we upper-bound the probability by l/|M|, i.e.,
Pr[ω∗ (cid:54)∈ F (W)] ≤ l/|M|.
We show that the probability of A being able to distin-
guish the original tracing procedure from the modiﬁed trac-
ing procedure is upper bounded by l · AdvSA. The only dif-
ference between these two procedures is the generation of
ciphertexts, i.e., CT ∗
1 . Then, to distinguish the orig-
inal tracing procedure from the modiﬁed one, the adversary
A needs to distinguish the ciphertexts. Suppose that all the
codewords in W have a 1’s at the j-th position. Then the ci-
phertexts of the original tracing procedure and the modiﬁed
one are respectively CT0 ← Encrypt(cid:48)(M P K, ID∗|j|0, Mj)
and CT ∗
j). Distinguishing
CT0 from CT ∗
0 is identical to breaking the semantic security.
Given the advantage AdvSA of A in breaking the semantic se-
curity, the probability of A begin able to distinguish the two
tracing procedures is upper-bounded by l · AdvSA.
0 ← Encrypt(cid:48)(M P K, ID∗|j|0, M(cid:48)
0 or CT ∗
In summary, the advantage of any polynomial-time ad-
versary in breaking the t-collusion resistance of our TRLAC
scheme is at most AdvTA ≤ l · AdvSA +  + l/|M|. This com-
pletes the proof of Theorem 1.
APPENDIX
A. PROOF OF THEOREM 1
To prove Theorem 1, we ﬁrst observe that our TRLAC sys-
tem is an encryption scheme derived from the IBBE scheme
(without tracing) [11], and the latter is semantically secure
against chosen-plaintext attacks. Compared to this scheme,
in both the key generation and the encryption algorithms
of our TRLAC, the input of the hash function is not a sin-
gle identity but a concatenation of identity, position, and
bit of codeword. In particular, producing a private key of
the TRLAC scheme is identical to separately calling the key
generation of the IBBE scheme l times, and the encryption
of TRLAC runs the encryption of the IBBE scheme twice
for diﬀerent inputs. Hence, the semantic security proofs of
the IBBE scheme [11] can also be applied to our scheme.
We now prove that our TRLAC system satisﬁes the t-
collusion resistance deﬁned by Game 2. The following lemma
shows that our system has this resistance and its proof fol-
lows Theorem 1 in [4].
Lemma 1. Let l denote the length of the ﬁngerprint codes
and |M| the size of the message space. Then, for all t >
0, n ≥ t, any polynomial-time attacker breaks the t-collusion
resistance of our TRLAC system with advantage at most
AdvTA ≤ l · AdvSA +  +
l
|M| .
Proof. In the deﬁnition of t-collusion resistance, the chal-
lenger ﬁrst runs the system setup algorithm and gives the
system master public key to the adversary A. The adversary
A is able to query the private key for any group identity. In
response, the challenger runs the key generation algorithm
and gives the queried private keys to A. At some point, the
adversary A outputs a pirate decryptor PD which is created
by some or all the queried private keys and can decrypt ci-
phertexts with set S∗ of group identities.
We let W denote the set of codewords associated with the
queried private keys. Then F (W) is the feasible set of W.
If the tracing procedure ﬁnds a codeword ω∗ ∈ F (W), then
we immediately have AdvTA ≤ .
In case of ω∗ (cid:54)∈ F (W), which means the tracing procedure
cannot trace a codeword feasible for the set of codewords
associated with the private keys used in creating PD, we
have to bound this probability Pr[ω∗ (cid:54)∈ F (W)]. To do so,
we slightly modify the algorithm Trace as follows.
Given the PD able to decrypt ciphertexts generated with
set S∗ = {ID∗
z=1, the modiﬁed tracing procedure picks
each j from 1 to l and does the following experiments.
z}r
1. Randomly choose two messages Mj (cid:54)= M(cid:48)
j.
2. If all codewords in W have a 1 or 0 in position j, com-
pute
and
0 ← Encrypt
(cid:48)
∗
(M P K,{ID
CT
z|j|0}r
∗
z=1, M
(cid:48)
j)
1 ← Encrypt
(cid:48)
∗
(M P K,{ID
CT
z|j|1}r
∗
z=1, M
(cid:48)
j);