which the amount was close to the expected amount. Here
the amount must be estimated according to the advertised
amt, rate, and fee. In theory, the amount sent should be amt·
rate− fee, although in practice the rate can ﬂuctuate so it is
important to look for transactions carrying a total value within
a reasonable error rate of this amount.
When we implemented and applied this heuristic, we found
that our accuracy in identifying Phase 2 transactions de-
creased signiﬁcantly, due to the larger set of transactions that
carried an amount within a wider range (as opposed to an
exact amount, as in Phase 1) and the inability of this type of
heuristic to handle multiple candidate transactions. More im-
portantly, this approach provides no ground-truth information
at all: by choosing conservative parameters it is possible to
limit the number of false positives, but this is at the expense
of the false negative rate (as, again, we observed in our own
application of this heuristic) and in general it is not guaran-
teed that the ﬁnal set of transactions really are associated with
ShapeShift. As this is the exact guarantee we can get by using
the API, we continue in the rest of the paper with the results
we obtained there, but nevertheless mention this alternative
approach in case this feature of the API is discontinued or
otherwise made unavailable.
6 Tracking Cross-Currency Activity
In the previous section, we saw that it was possible in many
cases to identify the on-chain transactions, in both the curIn
and curOut blockchains, associated with the transactions ad-
vertised by ShapeShift. In this section, we take this a step
further and show how linking these transactions can be used
to identify more complex patterns of behavior.
As shown in Figure 2, we consider these for three main
types of transactions. In particular, we look at (1) pass-
through transactions, which represent the full ﬂow of money
as it moves from one currency to the other via the deposit
and withdrawal transactions; (2) U-turns, in which a user who
has shifted into one currency immediately shifts back; and (3)
round-trip transactions, which are essentially a combination
of the ﬁrst two and follow a user’s ﬂow of money as it moves
from one currency to another and then back to the original
one. Our interest in these particular patterns of behavior is
largely based on the role they play in tracking money as it
moves across the ledgers of different cryptocurrencies. In
particular, our goal is to test the validity of the implicit as-
sumption made by criminal usage of the platform — such as
we examine further in Section 8 — that ShapeShift provides
additional anonymity beyond simply transacting in a given
currency.
In more detail, identifying pass-through transactions allows
us to create a link between the input address(es) in the deposit
on the curIn blockchain and the output address(es) in the
withdrawal on the curOut blockchain.
Identifying U-turns allows us to see when a user has in-
teracted with ShapeShift not because they are interested in
holding units of the curOut cryptocurrency, but because they
see other beneﬁts in shifting coins back and forth. There are
several possible motivations for this: for example, traders may
quickly shift back and forth between two different cryptocur-
rencies in order to proﬁt from differences in their price. We
investigate this possibility in Section 8.3. Similarly, people
performing money laundering or otherwise holding “dirty”
money may engage in such behavior under the belief that
once the coins are moved back into the curIn blockchain, they
are “clean” after moving through ShapeShift regardless of
what happened with the coins in the curOut blockchain.
Finally, identifying round-trip transactions allows us to cre-
ate a link between the input address(es) in the deposit on
the curIn blockchain with the output address(es) in the later
withdrawal on the curIn blockchain. Again, there are many
reasons why users might engage in such behavior, including
842    28th USENIX Security Symposium
USENIX Association
(a) Pass-through
(b) U-turn
(c) Round-trip
Figure 2: The different transactional patterns, according to how they interact with ShapeShift and which phases are required to identify them.
tions in the curIn blockchain. This means that we were typ-
ically least successful with curIn blockchains with higher
transaction volumes, such as Bitcoin, because we frequently
ended up with multiple hits (although here we were still able
to identify more than 74% of transactions). In contrast, the
dark stripes for Dash and Zcash demonstrate our high level
of success in identifying pass-through transactions with those
currencies as curIn, due to our high level of success in their
Phase 1 analysis in general (89% and 91% respectively). In
total, across all eight currencies we were able to identify
1,383,666 pass-through transactions.
6.2 U-turns
As depicted in Figure 2b, we consider a U-turn to be a pattern
in which a user has just sent money from curIn to curOut,
only to turn around and go immediately back to curIn. This
means linking two transactions: the Phase 2 transaction used
to send money to curOut and the Phase 1 transaction used to
send money back to curIn. In terms of timing and amount, we
require that the second transaction happens within 30 minutes
of the ﬁrst, and that it carries within 1% of the value that
was generated by the ﬁrst Phase 2 transaction. This value is
returned by the ShapeShift API in the outCoin ﬁeld.
While the close timing and amount already give some in-
dication that these two transactions are linked, it is of course
possible that this is a coincidence and they were in fact carried
out by different users. In order to gain additional conﬁdence
that it was the same user, we have two options. In UTXO-
based cryptocurrencies (see Section 3.1), we could see if the
input is the same UTXO that was created in the Phase 2
transaction, and thus see if a user is spending the coin imme-
diately. In cryptocurrencies based instead on accounts, such as
Ethereum, we have no choice but to look just at the addresses.
Here we thus deﬁne a U-turn as seeing if the address that was
used as the output in the Phase 2 transaction is used as the
input in the later Phase 1 transaction.
Once we identiﬁed such candidate pairs of transactions
(tx1, tx2), we then ran the augmented heuristic from Sec-
tion 5 to identify the relevant output address in the curOut
blockchain, according to tx1. We then ran the same heuristic
to identify the relevant input address in the curOut blockchain,
this time according to tx2.
In fact though, what we really identiﬁed in Phase 2 was
not just an address but, as described above, a newly created
Figure 3: For each pair of currencies, the number of transactions
we identiﬁed as being a pass-through from one to the other, as a
percentage of the total number of transactions between those two
currencies.
the trading and money laundering examples given above. As
another example, if a curIn user wanted to make an anony-
mous payment to another curIn user, they might attempt to do
so via a round-trip transaction (using the address of the other
user in the second pass-through transaction), under the same
assumption that ShapeShift would sever the link between their
two addresses.
6.1 Pass-through transactions
Given a ShapeShift transaction from curIn to curOut, the
methods from Section 5 already provide a way to identify
pass-through transactions, as depicted in Figure 2a. In par-
ticular, running the augmented heuristic for Phase 1 transac-
tions identiﬁes not only the deposit transaction in the curIn
blockchain but also the Phase 2 transaction (i.e., the with-
drawal transaction in the curOut blockchain), as this is ex-
actly what is returned by the API. As discussed above, this has
the effect on anonymity of tracing the ﬂow of funds across
this ShapeShift transaction and linking its two endpoints;
i.e., the input address(es) in the curIn blockchain with the
output address(es) in the curOut blockchain. The results, in
terms of the percentages of all possible transactions between
a pair (curIn, curOut) for which we found the corresponding
on-chain transactions, are in Figure 3.
The ﬁgure demonstrates that our success in identifying
these types of transactions varied somewhat, and depended —
not unsurprisingly — on our success in identifying transac-
USENIX Association
28th USENIX Security Symposium    843
ShapeShiftphase 1phase 2ShapeShiftphase 2phase 1ShapeShiftphase 2phase 1phase 1phase 2ShapeShiftphase 1phase 2ShapeShiftphase 2phase 1ShapeShiftphase 2phase 1phase 1phase 2ShapeShiftphase 1phase 2ShapeShiftphase 2phase 1ShapeShiftphase 2phase 1phase 1phase 2Currency
BTC
BCH
DASH
DOGE
ETH
ETC
LTC
ZEC
# (basic)
36,666
2864
3234
546
53,518
1397
8270
772
# (addr)
# (utxo)
565
196
2091
75
5248
543
1429
419
314
81
184
75
-
-
244
222
Table 3: The number of U-turns identiﬁed for each cryptocurrency,
according to our basic heuristic concerning timing and value, and
both the address-based and UTXO-based heuristics concerning iden-
tical ownership. Since Ethereum and Ethereum Classic are account-
based, the UTXO heuristic cannot be applied to them.
Figure 4: The total number of U-turns over time, as identiﬁed by our
basic heuristic.
UTXO. If the input used in tx2 was this same UTXO, then
we found a U-turn according to the ﬁrst heuristic. If instead
it corresponded just to the same address, then we found a
U-turn according to the second heuristic. The results of both
of these heuristics, in addition to the basic identiﬁcation of
U-turns according to the timing and amount, can be found
in Table 3, and plots showing their cumulative number over
time can be found in Figures 4 and 5. In total, we identiﬁed
107,267 U-turns according to our basic heuristic, 10,566 U-
turns according to our address-based heuristic, and 1,120 U-
turns according to our UTXO-based heuristic.
While the dominance of both Bitcoin and Ethereum should
be expected given their overall trading dominance, we also
observe that both Dash and Zcash have been used extensively
as “mixer coins” in U-turns, and are in fact more popular
for this purpose than they are overall. Despite this indica-
tion that users may prefer to use privacy coins as the mixing
intermediary, Zcash has the highest percentage of identiﬁed
UTXO-based U-turn transactions. Thus, these users not only
do not gain extra anonymity by using it, but in fact are easily
identiﬁable given that they did not change the address used
in 419 out of 772 (54.24%) cases, or — even worse — im-
mediately shifted back the exact same coin they received in
222 (28.75%) cases. In the case of Dash, the results suggest
Figure 5: The total number of U-turns over time, as identiﬁed by our
address-based (in red) and UTXO-based (in blue) heuristics.
something a bit different. Once more, the usage of a privacy
coin was not very successful since in 2091 out of the 3234
cases the address that received the fresh coins was the same
as the one that shifted it back. It was the exact same coin in
only 184 cases, however, which suggests that although the
user is the same, there is a local Dash transaction between the
two ShapeShift transactions. We defer a further discussion of
this asymmetry to Section 8.4, where we also discuss more
generally the use of anonymity features in both Zcash and
Dash.
Looking at Figure 5, we can see a steep rise in the number
of U-turns that used the same address in December 2017,
which is not true of the ones that used the same UTXO or
in the overall number of U-turns in Figure 4. Looking into
this further, we observed that the number of U-turns was
particularly elevated during this period for four speciﬁc pairs
of currencies: DASH-ETH, DASH-LTC, ETH-DASH, and
LTC-ETH. This thus affected primarily the address-based
heuristic due to the fact that (1) Ethereum is account-based
so the UTXO-based heuristic does not apply, and (2) Dash
has a high percentage of U-turns using the same address,
but a much smaller percentage using the same UTXO. The
amount of money shifted in these U-turns varied signiﬁcantly
in terms of the units of the input currency, but all carried
between 115K and 138K in USD. Although the ShapeShift
transactions that were involved in these U-turns had hundreds
of different addresses in the curIn blockchain, they used only
a small number of addresses in the curOut blockchain: 4
addresses in Ethereum, 13 in Dash, and 9 in Litecoin. As we
discuss further in Section 7.2, the re-use of addresses and the
fact that the total amount of money (in USD) carried by the
transactions was roughly the same indicates that perhaps a
small group of people was responsible for creating this spike
in the graph.
6.3 Round-trip transactions
As depicted in Figure 2c, a round-trip transaction requires
performing two ShapeShift transactions: one out of the initial
844    28th USENIX Security Symposium
USENIX Association
currency and one back into it. To identify round-trip transac-
tions, we effectively combine the results of the pass-through
and U-turn transactions; i.e., we tagged something as a round-
trip transaction if the output of a pass-through transaction
from X to Y was identiﬁed as being involved in a U-turn
transaction, which was itself linked to a later pass-through
transaction from Y to X (of roughly the same amount). As
described at the beginning of the section, this has the power-
ful effect of creating a link between the sender and recipient
within a single currency, despite the fact that money ﬂowed
into a different currency in between.
In more detail, we looked for consecutive ShapeShift trans-
actions where for a given pair of cryptocurrencies X and Y:
(1) the ﬁrst transaction was of the form X-Y; (2) the second
transaction was of the form Y-X; (3) the second transaction
happened relatively soon after the ﬁrst one; and (4) the value
carried by the two transaction was approximately the same.
For the third property, we required that the second transaction
happened within 30 minutes of the ﬁrst. For the fourth prop-
erty, we required that if the ﬁrst transaction carried x units of
curIn then the second transaction carried within 0.5% of the
value in the (on-chain) Phase 2 transaction, according to the
outCoin ﬁeld provided by the API.
As with U-turns, we considered an additional restriction
to capture the case in which the user in the curIn blockchain
stayed the same, meaning money clearly did not change hands.
Unlike with U-turns, however, this restriction is less to pro-
vide accuracy for the basic heuristic and more to isolate the
behavior of people engaged in day trading or money launder-
ing (as opposed to those meaningfully sending money to other
users). For this pattern, we identify the input addresses used in
Phase 1 for the ﬁrst transaction, which represent the user who
initiated the round-trip transaction in the curIn blockchain.
We then identify the output addresses used in Phase 2 for
the second transaction, which represent the user who was the
ﬁnal recipient of the funds. If the address was the same, then
it is clear that money has not changed hands. Otherwise, the
round-trip transaction acts as a heuristic for linking together
the input and output addresses.
The results of running this heuristic (with and without the