title:A Systematic Approach to Developing and Evaluating Website Fingerprinting
Defenses
author:Xiang Cai and
Rishab Nithyanand and
Tao Wang and
Rob Johnson and
Ian Goldberg
A Systematic Approach to Developing and Evaluating
Website Fingerprinting Defenses
Xiang Cai 1
Rishab Nithyanand 1
Tao Wang 2
Rob Johnson 1
Ian Goldberg 2
1Stony Brook University
{xcai, rnithyanand, rob}@cs.stonybrook.edu
2University of Waterloo
{t55wang, iang}@cs.uwaterloo.ca
ABSTRACT
Fingerprinting attacks have emerged as a serious threat against pri-
vacy mechanisms, such as SSL, Tor, and encrypting tunnels. Re-
searchers have proposed numerous attacks and defenses, and the
Tor project now includes both network- and browser-level defenses
against these attacks, but published defenses have high overhead,
poor security, or both.
This paper (1) systematically analyzes existing attacks and de-
fenses to understand which trafﬁc features convey the most infor-
mation (and therefore are most important for defenses to hide),
(2) proves lower bounds on the bandwidth costs of any defense
that achieves a given level of security, (3) presents a mathematical
framework for evaluating performance of ﬁngerprinting attacks and
defenses in the open-world, given their closed-world performance,
and (4) presents a new defense, Tamaraw, that achieves a better se-
curity/bandwidth trade-off than any previously proposed defense.
Our feature-based analysis provides clear directions to defense
designers on which features need to be hidden. Our lower bounds
on bandwidth costs help us understand the limits of ﬁngerprint-
ing defenses and to determine how close we are to “success”. Our
open-world/close-world connection enables researchers to perform
simpler closed-world experiments and predict open-world perfor-
mance. Tamaraw provides an “existence proof” for efﬁcient, secure
defenses.
Categories and Subject Descriptors
C.2.0 [Computer-Communication Networks]: General–Security
and protection
; K.4.1 [Computing Milieux]: Computers and Society–Privacy
Keywords
Anonymity; Website ﬁngerprinting attacks and defenses
1.
INTRODUCTION
Website ﬁngerprinting attacks enable an adversary to infer which
website a victim is visiting, even if the victim uses an encrypting
proxy, such as Tor. These privacy mechanisms encrypt the content
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full citation
on the ﬁrst page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from Permissions@acm.org.
CCS’14, November 3–7, 2014, Scottsdale, Arizona, USA.
Copyright is held by the owner/author(s). Publication rights licensed to ACM.
ACM 978-1-4503-2957-6/14/11 ...$15.00.
http://dx.doi.org/10.1145/2660267.2660362.
transferred between the web server and client, but they do not ef-
fectively hide the size, timing, and direction of packets. A website
ﬁngerprinting attack uses these features to infer the web page being
loaded by a client.
Website ﬁngerprinting attacks have emerged as a serious threat
against web browsing privacy mechanisms, such as SSL, Tor, and
encrypting tunnels. At the 2012 Oakland conference, Dyer, et al.
[5] showed that an attacker could infer, with a success rate over
80%, which of 128 pages a victim was visiting, even if the victim
used network-level countermeasures. At CCS 2012, Cai et al. [3]
described an attack that could achieve a greater than 75% success
rate (out of 100 sites) against numerous network and application-
level defenses.
Published and deployed defenses have high overhead, poor se-
curity, or both. The Tor project has incorporated network- and
browser-level defenses against ﬁngerprinting attacks into its Tor
Browser Bundle [13], but Cai found that they provide no secu-
rity beneﬁt. Luo, et al. proposed HTTPOS [11], a collection of
network- and HTTP-level defenses, but Cai’s attack showed that it
offered little security beneﬁt. Wright, et al. proposed trafﬁc morph-
ing [19], but both Dyer and Cai showed that it provides little protec-
tion against ﬁngerprinting attacks. In fact, Dyer and Cai surveyed
numerous defenses and found them all ineffective. Dyer proposed
BuFLO, which offers good security, but at a high bandwidth cost.
This paper addresses several challenges in designing, evaluating
and comparing the performance of website ﬁngerprinting attacks
and defenses.
Most attack evaluations have used the artiﬁcial “closed-world”
model, in which the victim selects one of n websites uniformly
randomly and the attacker attempts to guess the chosen website
based on the observed network trafﬁc. This model has been crit-
icized for being unrealistic because, in a real attack, the victim
may visit any website in the world [14], potentially making the at-
tacker’s task much more difﬁcult. Consequently, some researchers
have suggested that website ﬁngerprinting attacks are in fact a pa-
per tiger [14].
In this paper we show how to compute the open-world perfor-
mance of an attack based on its performance in a closed-world ex-
periment. Thus, researchers can evaluate attacks and defenses in
the simpler closed-world model and, using our method, compute
open-world performance results. We use this method to compute
open-world performance of our new defense, Tamaraw.
We also investigate the danger that ﬁngerprinting attacks pose in
the real world. We ﬁnd that, without any defense whatsoever, ﬁn-
gerprinting attacks can pose a signiﬁcant threat to visitors to pop-
ular web pages. For example, an ideal attacker against defenseless
victims could recognize visits to the 100 most popular websites
with a false discovery rate of less than 50%.
Defense
Tamaraw
Tamaraw
BuFLO
Tor
Security () BW Overhead Overhead Ratio
31.3
6.9
1965
495.2
3.4%
0.4%
41.5%
77.5%
199%
687%
199%
25%
Table 1: Security and bandwidth overhead of defenses in a
closed-world experiment with 800 websites. A defense is -
secure if no attacker can guess the victim’s website with prob-
ability more than . Note that this security evaluation is attack
independent. An overhead ratio of r indicates that the defense
incurred an overhead r times larger than the lower bound on
overhead derived in Section 5.1.
Most defense evaluations have attempted to estimate the efﬁcacy
of the proposed defense by using the state-of-the-art attacks avail-
able at that time. This provides only a lower bound on the security
of a defense — future attacks may demonstrate that it is insecure.
This approach also makes it difﬁcult to compare defenses that were
evaluated using different attacks.
We solve both problems by evaluating defenses against an ideal
attacker. In our ideal attack, two websites are distinguishable unless
they generate the exact same sequence of network trafﬁc observa-
tions. Thus evaluating a defense against an ideal attacker gives the
lower bound on the security provided by the defense and the eval-
uation results are attack-independent — i.e., future researchers can
compare different defenses using the same ideal attack.
Even when two defenses have been evaluated against the same
attack, it can be difﬁcult to compare them, since every defense of-
fers a different trade-off between security and overhead. And even
if one defense strictly dominates all other defenses in terms of secu-
rity and efﬁciency, it is still not clear whether the attack is optimal.
How efﬁcient can a defense be while offering a given level of secu-
rity?
To answer these questions, we develop an abstract model of web-
site ﬁngerprinting attacks and defenses and prove lower bounds on
the bandwidth overhead of any defense that offers a given level of
security. This enables us to compare defenses with different over-
head/security trade-offs by comparing how close they are to the
optimal trade-off curve. We can also bound how far defenses are
from optimal. Our bounds suggest that, although defenses are get-
ting better, there may still be signiﬁcant room for improvement.
In order to design efﬁcient and effective defenses, we need to
know which trafﬁc features leak the most information about the
website being visited. Without this information, we may make the
mistake of designing a defense that incurs high cost to hide a low-
information feature. For example, most early defenses focused ex-
clusively on packet sizes, but Cai, et al. showed that packet or-
dering contains at least as much information as packet sizes [3].
Therefore, we systematically analyze existing attacks and defenses
to understand which trafﬁc features convey the most information
and therefore are most important for defenses to hide. Our anal-
ysis goes beyond the “black-box” approach of previous work that
published overall attack success rates but did not investigate the
reasons attacks and defenses succeed or fail.
Finally, we propose and evaluate a new, provably secure ﬁn-
gerprinting defense. Tamaraw extends and tunes BuFLO to hide
the most signiﬁcant trafﬁc features uncovered by our feature-based
analysis. In particular, we ﬁnd that BuFLO unnecessarily wastes
bandwidth hiding the number of upstream packets and does not ad-
equately hide the total number of downstream packets.
We then use the new evaluation techniques described above to
evaluate Tamaraw. We show that Tamaraw offers signiﬁcantly bet-
ter security than BuFLO in a closed-world setting. Our closed-
world evaluation uses an ideal attacker and therefore bounds the
success rate that any attacker can achieve against Tamaraw. Table 1
summarizes the evaluation results. We evaluated Tamaraw under
two different conﬁgurations. One of them offers over 12× bet-
ter security than BuFLO for the same bandwidth overhead. Table 1
also shows that all the defenses have a signiﬁcant gap between their
performance and the trade-off lower-bound curve, although Tama-
raw comes closest by far.
Then, we show how to compute the open-world performance of
an attack based on experimental results derived in the closed-world
setting. Further, we show that even the optimal attacker, against de-
fenseless victims, suffers from high false discovery rates. Finally,
we evaluate Tamaraw in our open-world model and show that it
performs signiﬁcantly better than BuFLO, against the optimal at-
tacker.
The rest of this paper is organized as follows. Section 2 reviews
website ﬁngerprinting attacks. Section 3 describes our feature-
based defense comparison methodology. In section 4, we survey
a set of six previously proposed defenses and four attack features.
We then present the results of applying our feature-based compar-
ative methodology to each of these defenses. Section 5 presents
our model of ﬁngerprinting attacks, the security/overhead trade-off
lower-bound theorems, and the closed-world/open-world connec-
tion. Section 6 describes Tamaraw and presents our evaluation re-
sults. Section 8 discusses implications of our research.
2. WEBSITE FINGERPRINTING
ATTACKS
In general, website ﬁngerprinting (WF) attacks are a subset of
trafﬁc analysis attacks. A WF attacker is able to monitor the com-
munications between a client’s computer and a private web brows-
ing proxy. The private browsing proxy may be an SSH proxy, VPN
server, Tor, or other privacy service. The trafﬁc between the user
and proxy is encrypted, so the attacker can only see the timing, di-
rection, and size of packets exchanged between the user and the
proxy. Based on this information, the attacker attempts to infer
the website(s) that the client is visiting via the proxy by examining
various features of the observed trafﬁc. Cai et al. [3] and Chen et
al. [4] describe variants wherein an attacker aims to identify a web
site instead of a web page. For consistency across the literature,
however, we focus on the identiﬁcation of single web pages. A WF
defense is a set of countermeasures that protect the client against a
WF attack by obfuscating, or covering features of the web trafﬁc,
making them less distinguishable across different web pages, thus
reducing the accuracy of the attack.
A WF attacker is assumed to be local and passive: the attacker
taps and observes from only one location, and he is not allowed
to add, drop, or change packets. This means that the attacker is
weak, but is also resource-light and essentially undetectable. The
attacker can prepare for the attack by collecting information about
websites in advance. For example, he can visit websites using the
same privacy service as the client, collecting a set of website “ﬁn-
gerprints” as a training set, which he later uses to recognize the
client site. These ’ﬁngerprints’ usually consist of packet sizes, di-
rections, etc. observed between the client and the proxy. Although
the packets themselves are encrypted, the packet sequence still car-
ries information about the sizes of the objects in a web page and
the order they are being requested, which is induced by the struc-
ture of the web page (the list of resources, their lengths, and which
resources each resource requests). The interaction of multiple con-
nections between a client and a web server may cause randomiza-
tion in packet ordering but, as we will see later, a successful WF
attack will tolerate these randomized differences while learning to
distinguish different web pages.
We retain two assumptions that all previous works on WF have
made of the attacker. First, the attacker is able to notice exactly
when a new page is requested. In other words, the attacker knows
which sequence of packets corresponds to a single page. This as-
sumption is sometimes made in a stronger form — that the client’s
think time always dominates page load time — which implies that a
distinct pause exists between any two packet sequences of different
page loads. Second, any background activity the client may have
will not interfere with the client’s trafﬁc. For example, a client will
not download a ﬁle while visiting a web page; alternatively, these
ﬁle download packets can be easily discarded by the attacker. These
assumptions are used by all previous works on WF as they simplify
the problem, though it should be noted that these assumptions are
advantageous for the attacker.
3. FEATURES AND METHODOLOGY
A classiﬁer succeeds at distinguishing between two classes when
it is able to discover a consistent difference between them. This
can be viewed as a difference between their features, which char-
acterize a class. Implicitly or explicitly, classiﬁcation techniques
such as WF attacks extract features to classify. Conversely, a suc-
cessful defense effectively hides these features. In this section, we
describe our methodology and use it to evaluate the strengths and
weaknesses of different WF defenses.
3.1 Packet Sequences and their Features
In general, packet sequences have four major features: unique
packet lengths, packet length frequency, packet ordering, and in-
terpacket timing. Therefore, a packet sequence P can be written