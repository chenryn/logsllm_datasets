Sneak into buildings 
with KNXnet/IP
using BOF
whoami
Claire Vacherot
Senior pentester @ Orange Cyberdefense France
Random info:
►Writing tools (and then discover they already exist)
►Part of GreHack’s organization team
►Penetration testing on "unusual" environments
2
PROGRAMMING
SECURE 
PROGRAMMING
… ON EMBEDDED/ICS 
DEVICES
EMBEDDED/ICS 
DEVICE SECURITY
ICS SECURITY
Best
conference
(after Defcon)
Disclaimer
Please be careful 
Testing industrial systems is dangerous
►Control of physical processes
Impact on people’s safety
►Accidents
►Disabling safety controls
Test in controlled environments
3
BMS
KNX
BOF
BMS
Building
Management/Automation
System
►Components automation & control
►Home, buildings, factories, hospitals, offices, …
5
►HVAC
►Lighting
►Shutters
►Elevators
►Access control
►Intrusion detection
►Safety and security
BMS
6
* "Hackers“ (1995) has a BMS hacking scene
« The pool on the roof has a leak. »
7
The « field » network
8
Actuator
Sensor
Controller
Field bus
The « IP » network
9
IP server
IP gateway
IP interface
Operator
Maintainer
Anyone else
Remote
control!
Why should we take a look?
Exposing « industrial » protocols and devices
►Legacy software and protocols
►Not designed to handle cybersecurity issues
►Not operated with cybersecurity in mind
10
The « interface » device
11
…but reachable
from the LAN
Usually in
electric
cabinets…
Let’s scan it!
12
►21/tcp
ftp
►22/tcp
ssh
►23/tcp
telnet
►80/tcp
http
►443/tcp
https
►3671/udp
knxnet
►47808/udp
bacnet
BMS
link
Admin
Why should we take a look?
13
Regular IP
services
BMS 
protocol
service
BMS security wrap up
14
Me
Unknown protocol
=
new attack surface
Entry point
Target
BMS security wrap up
What can we do with that?
#1 Send valid stuff
#2 Send invalid stuff
15
Attack scenario #1
Change BMS behavior
►Enable sprinklers
►Disable fire detection
►Change thresholds
►Turn everything off
►…
16
Me
Legitimate
command
Attack scenario #1
Change BMS behavior
Example
►Listen to the traffic
►Replaying BACnet frames
►Turning off that HVAC
17
s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) # UDP
s.connect(("192.168.1.1", 47808))
try:
while 1:
s.send(payload_ventilation_off)
sleep(1) # (Different kind of) DoS if we don’t wait
except KeyboardInterrupt:
pass
s.close()
I have no idea
what they mean
Attack scenario #2
Unintended use of devices
►???
18
Me
?
Something
malicious
?
?
?
?
Attack scenario #2
Unintended use of devices
19
Flat network
IT
OT
Network intrusion
from the Internet
Attack scenario #2
Unintended use of devices
20
BMS LAN
IT
OT
OT LAN
IT LAN
Pivoting from
local network
Reaching
segregated
area
What we know so far
Introduction to BMS security
►InSecurity in Building Automation
Thomas Brandstetter @ Defcon 25 (2017)
KNX security or how to steal a skyscraper - Yegor Litvinov (2015)
Pwning KNX & ZigBee Networks - HuiYu Wu, YuXiang Li & Yong Yang (2018)
BMS exploitation talks (discovery) – Attack Scenario #1
►Learn How to Control Every Room at a Luxury Hotel Remotely
Jesus Molina @ Defcon 22 (2014)
21
You should
watch it!
What we know so far
Advanced attacks / fuzzing – Attack scenario #2
►HVACking Understand the Delta Between Security and Reality
Douglas McKee & Mark Bereza @ Defcon 27
Attack remediation, detection
►Anomaly Detection in BACnet/IP managed Building Automation Systems
Matthew Peacock, 2019
22
Cool stuff on
fuzzing BACnet
What we know so far
… where is KNX? 
23
BMS
KNX
BOF
And now… KNX!
25
SEVERAL EUROPEAN 
STANDARDS (1980s)
3 STANDARDS MERGED 
INTO KNX (1999)
KNXNET/IP (2007)
1ST SECURITY 
EXTENSION (2013)
KNX STANDARD FREE 
(2016)
And now… KNX!
►Hard to find / use documentation
►Few research & work about KNX security
That does not mean there is nothing
to say about it 
26
And now… KNX!
27
Checked
2021-07-01
KNXnet/IP
port
« A minor concern »
« For KNX, security is a minor concern, as any
breach of security requires local access to the 
network »
►Authentication as an option
Disabled by default (when implemented)
►Security extensions
KNX IP Secure, KNX Data Secure
Security is optional!
28
Tribute 
to Molina
« A minor concern »
”It is quite unlikely that legitimate 
users of a network would have 
the means to intercept, decipher, 
and then tamper with the 
KNXnet/IP without excessive 
study of the KNX Specifications.”
- KNX Standard v2.1
29
« A minor concern »
”It is quite unlikely that legitimate 
users of a network would have 
the means to intercept, decipher, 
and then tamper with the 
KNXnet/IP without excessive 
study of the KNX Specifications.”
- KNX Standard v2.1
30
Where to start
The boring way
►KNX specifications free since 2016
– You just need a fake account on KNX’s website
– …and also good nerves 
►« Volume 3 – System Specifications » is the useful part
31
148 PDF 
files \o/
Only 33 
PDF files!
Where to start
The hacker way
1.
Set up a test environment with KNX Virtual and ETS
2.
Listen to the traffic and learn
3.
…or just replay it
►« Engineering Tool Software » (ETS) provided by KNX association
« The best hacking tool », according to Thomas Brandstetter
►Wireshark has a KNXnet/IP dissector
32
Works with (almost) 
any industrial/BMS 
network protocol
DEMO : Setting up a test environment
33
« Deciphering » KNX
34
34
KNXnet/IP 
interface
Operator
KNXnet/IP
(UDP)
KNXnet/IP request
KNXnet/IP request
cEMI
« Deciphering » KNX
35
35
KNXnet/IP 
interface
Operator
KNX
(field bus)
KNXnet/IP request
cEMI
cEMI (KNX message)
« Deciphering » KNX
KNXnet/IP
+
KNX (cEMI)
=
36
36
KNXnet/IP 
interface
Operator
KNXnet/IP
(UDP)
KNX
(field bus)
« Deciphering » KNX
►KNX Individual Address (1.1.1) = devices
Ex: scan KNX network
►KNX Group Address (1/1/1) = « functions »
Ex: run commands
37
192.168.1.10
192.168.1.100
1.1.1
1.1.254
1.1.3
1.1.2
192.168.1.100  
1/1/1
KNXnet/IP embedding a KNX frame
Tooling to start testing
►ETS
►KNXmap
https://github.com/takeshixx/knxmap
►New : KNXnet/IP layer for Scapy
– https://github.com/secdev/scapy
– Layer by Julien Bedel @ Orange Cyberdefense
38
Also, thanks to Scapy
maintainers for their
support and kindness 
DEMO : KNXmap
39
Tooling to start testing
►ETS
►KNXmap
https://github.com/takeshixx/knxmap
►New : KNXnet/IP layer for Scapy
– https://github.com/secdev/scapy
– Layer by Julien Bedel @ Orange Cyberdefense
40
Also, thanks to Scapy
maintainers for their
support and kindness 
Tooling to start testing
►Suitable for basic interaction
►Limitations for extensive testing
= Opportunity for a new tool! :D
41
BMS
KNX
BOF
BOF: Boiboite Opener Framework
For discovery, basic interaction and advanced
testing via industrial network protocols
(including KNXnet/IP)
►Python 3.6+ library
►Originally created to write attack scripts
– Change devices’ behavior (#1)
– Test protocol implementations on devices (#2)
►https://github.com/Orange-Cyberdefense/bof
43
There is at least one user (me)
I use it during pentests…
►For basic network and devices discovery
►To send basic commands
►To write attack scripts
…and for my own vulnerability research
►Dumb and not-so-dumb fuzzing
►To write very specific attack scripts
44
Scapy + BOF = <3
« Why not use Scapy? »
Pros:
►Nothing better for protocol
implementations
Cons:
►Incompatibilities with BOF’s expected
behavior
►Willing to keep BOF’s script syntax
45
Very good 
question
Scapy + BOF = <3
« Why not use Scapy? »
Pros:
►Nothing better for protocol
implementations
Cons:
►Incompatibilities with BOF’s expected
behavior
►Willing to keep BOF’s script syntax
46
Very good 
question
Now that you mention it…
How does this work?
►High-level discovery
►Intermediate usage
►Low-level testing
47
DEMO : Discovery
DEMO : Discovery
How does this work?
►High-level discovery
►Intermediate usage
►Low-level testing
50
Turning off the lights
CONNECT REQUEST
TUNNELING REQUEST       L_data.req
TUNNELING ACK
TUNNELING ACK
TUNNELING REQUEST       L_data.con
CONNECT RESPONSE
Yes its UDP
Turning off the lights
# CONNECT REQUEST
channel, knx_source_addr = connect_request_tunneling(knxnet)
# cEMI
cemi = cemi_group_write(knx_source_addr, KNX_GROUP_ADDR, VALUE)
# TUNNELING REQUEST (broken down)
tun_req = KNXPacket(type=SID.tunneling_request)
tun_req.communication_channel_id = channel
tun_req.cemi = cemi
# SEND and wait for ACK and RESPONSE
ack, _ = knxnet.sr(tun_req)
response, source = knxnet.receive()
# SEND ACK and DISCONNECT REQUEST
...
DEMO : Basic operation
53
DEMO : Basic operation
54
How does this work?
►High-level discovery
►Intermediate usage
►Low-level testing
55
DEMO : Advanced testing
56
What do we expect?
57
Crashes == Something is not handled correctly
Error in KNXnet/IP frame (anywhere)
Service or other software interpreting frames
►Possibly compromise the interface
Error in KNX frame (cEMI)
KNX layer on interface or on devices
►Possible denial of service on devices
►Possibly compromise the interface
Wrap up
TODO
So far
►Major impact, minor concern
►No need to « bypass » protections yet
If we go further…
►What’s inside widely-used implementations?
►What about KNXnet/IP security extensions?
►How to secure efficiently?
59
FIXME
Vendors
►Stop assuming security is the user’s problem
Users
►Stop assuming security is the vendor’s problem
60
FIXME
Attackers
►Brand new attack surface
– Maybe someone will learn something
– Reminder: Be careful and take care of people!
Defenders
►Brand new defense surface 
– Quick win: don’t expose devices
61
Thank you!
BOF
https://github.com/Orange-Cyberdefense/bof
https://bof.readthedocs.io/en/latest/
…and a huge thanks to DEFCON, Scapy maintainers, Olivier 
Gervais, Judicaël Courant, Baptiste Cauchard, Julien Bedel, 
and Leon Jacobs for their help and support!
62