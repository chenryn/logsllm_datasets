title:Mitigating the impact of ambient noise on Wireless Mesh Networks using
adaptive link-quality-based packet replication
author:Jesus Friginal and
Juan-Carlos Ruiz-Garcia and
David de Andr&apos;es and
Antonio Bustos
Mitigating the Impact of Ambient Noise on Wireless Mesh Networks
Using Adaptive Link-Quality-based Packet Replication
Jes´us Friginal, Juan-Carlos Ruiz, David de Andr´es and Antonio Bustos
Fault-Tolerant Systems Group (GSTF), Instituto de Aplicaciones de las TIC Avanzadas (ITACA)
Universitat Polit`ecnica de Val`encia, Campus de Vera s/n, 46022, Spain
Email: {jefrilo, jcruizg, ddandres}@disca.upv.es, PI:EMAIL
Abstract—Wireless Mesh networks (WMN) typically rely on
proactive routing protocols to establish optimal communication
routes between every pair of system nodes. These protocols
integrate link-quality-based mechanisms to minimise the ad-
verse effect of ambient noise on communications. This paper
shows the limitations existing in such mechanisms by analysing
the impact of ambient noise on three state-of-the-art proactive
routing protocols: OLSR, B.A.T.M.A.N and Babel. As will be
shown, the lack of context-awareness in their link-quality mech-
anisms prevents the protocols from adjusting their behaviour
according to persistent levels of ambient noise, which may vary
along the time. Consequently, they cannot minimise the impact
of such noise on the availability of network routes. This issue
is very serious for a WMN since the loss communication links
may strongly increase the convergence time of the network. An
adaptive extension to studied link-quality-based mechanisms
is proposed to avoid the loss of communication links in the
presence of high levels of ambient noise. The effectiveness of
the proposal is experimentally assessed, thus establishing a new
method to reduce the impact of ambient noise on WMN.
Keywords-Wireless Mesh Networks, Proactive Routing Pro-
tocols, Adaptive Fault Tolerance, Ambient Noise;
I. INTRODUCTION
The growing reliance of our society on mobile computing moti-
vates the increasing interest of incorporating new networking capa-
bilities into modern devices. Ad hoc networks enable the seamless
creation of spontaneous data networks without the use of any pre-
existing communication infrastructure. Wireless Mesh Networks
(WMN) follow such principle to offer self-conﬁguring networking
solutions, which are currently exploited by companies, like Meraki
(http://meraki.com) and TerraNet (http://terranet.se), to provide low-
cost internet access, without dependency on base stations, antenna
towers or other legacy hardware. In a typical WMN, the rout-
ing protocols is responsible for the efﬁcient creation of multi-hop
wireless communication routes among distant nodes. Most of the
routing protocols used in WMN are proactive, which means that they
periodically exchange topology control messages with other nodes
in order to maintain updated routes to all possible destinations.
A major practical impairment for the dependable use of WMNs
is that they must share an increasingly saturated radio frequency
spectrum with other types of wireless communications. This obvi-
ously results in communication interferences, known as background
or ambient noise, leading to excessive loss rates or packet delays [1].
In this scenario, a simple recovery action that can be adopted by a
proactive routing protocol is to force the two nodes concerning the
affected link to switch to another channel with less spectrum activity.
978-1-4673-1625-5/12/$31.00 ©2012 IEEE
This technique may eventually have a very negative impact over the
network convergence time, since it may require a large portion of
the rest of mesh nodes to switch channels so the network topology
stays connected. If degradation of communication links induced by
noise does not partition the network, an alternative approach adopted
by most mesh routing protocols consists in repairing affected paths
by automatically choosing other alternative links to maximise some
quality link metrics of the protocol [2]. Today, most of existing
WMN routing protocol implementations incorporate accurate proac-
tive mechanisms for (i) on-line monitoring the input and output
throughput provided by each existing route, (ii) the subsequent
computation of quality-related measures using such observations
and (iii) the ﬁnal selection of the most adequate route for each
communication.
The reaction speed exhibited by the routing protocols against
noise is also an aspect that must be attentively studied. In fact, it may
increase the network overhead by ﬂooding the network with route
repair messages without gaining much throughput. One possible
way to counter this effect is to use ﬂap damping. The goal is to
limit the global impact of unstable routes by temporarily suppressing
routes with rapid changes over short time periods. However this
technique may cause persistent oscillation in the network due to the
adverse interactions between ﬂap damping and route convergence
[3]. On the other hand, if the reaction of the protocol against noise
is too slow it may entail the loss of existing communication links
in the network. The main consequence is the activation of the self-
conﬁguration capabilities provided by the routing protocols to estab-
lish new communication routes among affected nodes. When many
links result affected, the convergence time increases, which reduces
the network stability and availability [4]. Shorter convergence time
also means smaller resource usage. It is thus suitable to keep links
alive as long as possible in case of ambient noise.
It is obvious that protocols can be simply tuned in order to
increase the lifetime of their links, thus reducing the issues related
to the network converge time. What must be carefully considered
is the overhead derived from such tuning and the pertinence of the
resulting conﬁguration along the time. In [5], for instance, authors
propose an automatic approach to manage link communication
faults in WMN by inferring suitable conﬁgurations from network
model simulations. Facing dynamic perturbations, such as ambient
noise, asks for more evolvable strategies to adapt at runtime the level
of link protection against network noise.
This practical experience report studies the behaviour against
ambient noise exhibited by the actual implementation of three state-
of-the-art proactive routing protocols, named OLSR [6], Babel [7]
and B.A.T.M.A.N [8], and investigates an adaptive approach to
improve their behaviour. Section II describes the innate capabilities
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 07:20:46 UTC from IEEE Xplore.  Restrictions apply. 
of such protocols to ambient noise adaptation. Section III identiﬁes
the various parameters affecting the behaviour exhibited by the pro-
tocols, and experimentally assesses such a behaviour under similar
experimental conditions. Results show that under similar conditions,
differences between protocols mainly rely on the overhead they
induce in the network rather than in their protection capabilities.
However, it seems clear that it is neither desirable nor affordable to
suffer from such overhead when noise does not exist or it is very low.
The alternative that is introduced in Section IV, focuses on the fea-
sibility of adapting the level of protection provided by existing link-
quality-based mechanisms, and thus the level of induced overhead,
to the level of noise experienced at each moment, in each network
node, by each communication link. The idea is to keep links alive (i)
by replicating control messages when the network is exposed to high
levels of noise, and (ii) by dynamically incrementing or reducing
the level of replication attending to the evolution of such noise.
The approach is deployed and assessed on the three considered
routing protocols, thus showing the feasibility of the approach and
its generality. Finally, Section V concludes the paper.
II. NOISE ADAPTATION AND PROACTIVE ROUTING
Section II-A provides a high level view of what is a proactive
routing protocol. Then Section II-B establishes how the concept
of link quality is computed and to what extent it may be used to
improve the resilience of the network against ambient noise. Finally,
section II-C introduces the three proactive routing protocols that will
be considered all through the rest of the paper.
A. High level view of a proactive routing protocol
Proactive routing protocols provide facilities for discovering,
establishing and maintaining communication links among 1-hop
neighbour nodes. This ﬁrst task is carried out through the exchange
of control routing packets that are periodically broadcasted by each
network node. On the other hand, they are also responsible of infer-
ring optimal multi-hop routes towards existing destination nodes.
Depending on the strategy considered to compute such routes,
proactive routing protocols can be link-state or distance vector.
Link-state routing requires each node to maintain at least a partial
topology map of the whole network. Conversely, in distance vector
protocols, a given node only knows their 1-hop neighbours, but not
the rest of the route.
Despite such differences, the general architecture of a proactive
routing protocol is depicted in Figure 1. As can be seen, the ﬁrst
important thing is to establish a clear difference between the packets
generated at the applicative layer (applicative packets) from those
that are generated by the routing protocol (routing packets) in order
to keep the network nodes interconnected.
Figure 1. General architecture of a proactive routing protocol
A core element of any proactive routing protocol is its routing
manager. It is the responsible for handling (search, add, update and
remove) existing routes attending to the decisions provided by the
routing decision maker. The packet generator is the responsible
for creating and sending routing packets, which can be sent or for-
warded attending to network generated events (such as the reception
of a routing packet asking for such type of action), or the timeout of
an internal timer. The Task scheduler manages all the internal proto-
col timers, which are used to periodically trigger the broadcasting of
control routing messages to the network and the expiration of a link.
Valid incoming routing packets containing routing information are
processed and stored by the packet processor in the protocol internal
routing information repository. The content of incoming packets
and the information stored in the routing repository is different in
distance vector and link state protocols. However, in both cases,
when a change in the state of a link is discovered (i.e, a new link
has been created, updated or removed), the route proxy reﬂects such
change in the routing tables of the node, which are located in the
network stack which is not part of the routing protocol.
B. Ambient noise and Link Quality Metrics
The existence of ambient noise, and its negative effect in wireless
mesh networks, is something indisputable. Since the industrial,
scientiﬁc and medical (ISM) radio bands are unlicensed, many
different types of equipment may use (e.g., cordless phones, cell
phones, radio frequency based remote controllers, etc.) or generate
noise (e.g., microwave ovens and other electrical devices) in these
frequencies, either accidentally or deliberately. This is the case of
devices supporting, for instance, the IEEE 802.1{1,5}x standards.
The traditional Ethernet philosophy of selecting a given com-
munication link towards a destination, among those available, with
the criterion of minimising the number of remaining hops (hop-
count) is a poor choice to WMN. Due to noise, the quality of all
communication links between mesh nodes is not the same, which
prevents the use of such a simple metric.
Since mid-00s, the notion of link quality is basically computed by
each node according to the amount of routing information received
from its neighbourhood: the higher this reception rate, the better and
it is periodically recomputed.
The Expected Transmission Count (ETX) is without any doubt,
the most well-known metric for characterising the quality of a
link [2]. It reﬂects the number of expected transmissions of a
packet to be received without error at its destination. This number
varies from one to inﬁnity. An ETX of one indicates a perfect
transmission medium, whereas an ETX of inﬁnity represents a non-
functional link. In practice, ETX can be deﬁned as ET X(i) =
1/(RP AR(i) ∗ N RP AR(i)). Given a sampling window in link
i, RP AR(i) is the Routing Packets Arrival Rate seen by a node,
and N RP AR(i) is the RP AR(i) seen by the neighbour node.
An alternative quality metric is proposed in [8] and it is called
Transmission Quality (TQ). This second metric shares the same
principles stablished by ETX but it is computed in another way.
In essence, receivers calculate the number of routing packets re-
ceived against those expected following the expression: T Q(i) =
(RP AR(i)∗N RP AR(i)∗p(i))/(M AX LQ2). In the expression
RP AR(i) and N RP AR(i) have the same meaning than in ETX,
and M AX LQ is a constant which bounds the ideal maximum
quality. The term p(i) refers to the penalty that is applied to uni-
directional links. The higher the TQ, the better.
For simplicity, the rest of this paper will denote the quality of a
link i as lqi and it will be always interpreted as the higher the lqi the
better. Under such assumption lqi should be viewed as 1/ET X.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 07:20:46 UTC from IEEE Xplore.  Restrictions apply. 
Applicative packetSource addrUnicast dst addrPayloadRouting packetSource addrBroadcast dst addrPayloadRoutingtablesIPLinkPhysicalServiceTransportApplicativeTaskschedulerTimersmanagementNetwork layersPacket generatorSearchPacketprocessorAddUpdateRemoveRouting managerRoutingprotocolRoute proxyRouting decision makerRoute selection criterionAs a result, whenever two communication links towards a desti-
nation i and j are available, the protocol selects the one providing the
better link quality. From this viewpoint, and since such link quality
metrics are periodically recomputed, one can say that presented
approaches adapt to variations of quality derived from ambient