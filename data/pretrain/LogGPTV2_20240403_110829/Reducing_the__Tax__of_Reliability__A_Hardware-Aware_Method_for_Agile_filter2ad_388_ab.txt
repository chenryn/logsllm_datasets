cause  data  corruption  on  the  programmed  pages.  To  avoid
this  risk  when  programming  important  data  to  flash,  the 
eMMC specification provides a mechanism named reliable 
write  [16]  to  ensure  the  atomicity  of  data  on  each
programmed  page.  Two  methods  are  usually  adopted  by 
eMMC controller to accomplish this: (1) the eMMC control-
ler  first  writes  data  to  shadow  pages,  and  then  follows  a 
complex  crash-proof  protocol  [17] to  redirect  the  corre-
sponding pointers in Logical-Physical Block Number map-
ping  table  to  the  shadow  pages.  (2)  the  eMMC  controller
logs  the  risk  blocks  [18]  to  a  logging  zone  and  then  per-
forms normal writes. Even if the system crashes during the 
programming, after power-up, eMMC controller can either 
retrieve the old data via consulting the mapping table or re-
program  the  pages  using  the  data  in  logging  zone.  Fig.  2 
illustrates different data retention scenarios between a nor-
mal write and a reliable write. Fig. 2 (a) shows that system 
suddenly  crashes  when  eMMC  controller  is  programming 
flash pages. In case of programming flash with normal write 
(Fig.  2(b)),  there  will  be  partially  written  data  (e.g.  ‚ÄúAB‚Äù) 
and corrupted data (e.g. ‚Äú&#?‚Äù) left in flash pages after sys-
tem crashes. Fig. 2(c) shows that if a reliable write is em-
ployed,  the  data  remains  in  flash  page  are  either  new  data 
(‚ÄúBB‚Äù)  or  old  data  (‚ÄúAA‚Äù),  namely,  corrupted  and  partial 
written pages do not exist upon a crash. 
2) Packed Command 
The packed command [16] is a feature of eMMC aiming 
to improve the performance of small random read/writes by 
packing multiple read/write requests into a group (either all 
reads  or  all  writes).  First,  all  the  individual  requests  are 
74
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:22:09 UTC from IEEE Xplore.  Restrictions apply. 
,'"% "
,
-
-'""
% "
,
-

! " 
	
",
"-
.'#!# 
"
"
	
	
/'!#""



,
-
1' $ &
!"	" 
!"	" 
!"	" 



	



	



	
,
,


-
-


,
,
-
-




(
(
)
)
,
,


-
-


,
,
-
-




(
(
)
)
,
,


-
-


-
-




)
)

! &"  

! &"  

! &"  
















#
#


"
"
!
!
&
&














+
+








,
,








+
+


,
,








,
,


-
-






(
(
'''
'''


+
+








,
,








+
+
,
,








,
,
-
-






(
(
'''
'''




#
#


"
"
!
!
&
&














+
+












,
,








+
+


,
,








,
,


-
-






(
(
'''
'''


+
+








,
,








+
+
,
,








,
,
-
-






(
(
'''
'''




#
#


"
"
!
!
&
&








