0
0
2
1
1
1
0
0
0
0
0
0
1
1
4
0
2
0
0
0
0
0
0
2
0
1
0
0
0
1
0
3
1
Table 3: Results of each of the black-box web vulnerability scanners against each application. The table is sorted by
the percent increase in code coverage over the baseline scanner, wget.
manding. We believe that using HtmlUnit prevented
our scanner from detecting these spurious vulnerabili-
ties, even though we use the same fuzzing component
as w3af.
Finally, our approach inferred the state machines of
the evaluated applications. These state machines are very
complex in the large applications. This complexity is
because modern, large, application have many actions
which modify the state. For instance, in WackoPicko v2,
a user can log in, add items to their cart, comment on
pictures, delete items from their cart, log out of the appli-
cation, register as a new user, comment as this new user,
upload a picture, and purchase items. All of these ac-
tions interact to form a complex state machine. The state
machine our scanner inferred captures this complex se-
ries of state changes. The inferred WackoPicko v2 state
machine is presented in Figure 7.
7 Limitations
Although dynamic page generation via JavaScript is sup-
ported by our crawler as allowed by the HtmlUnit frame-
work [19], proper AJAX support is not implemented.
This means that our prototype executes JavaScript when
the page loads, but does not execute AJAX calls when
clicking on links.
Nevertheless, our approach could be extended to han-
dle AJAX requests. In fact, any interaction with the web
application always contains a request and response, how-
ever the content of the response is no longer an HTML
page. Thus, we could extend our notion of a “page” to
typical response content of AJAX calls, such as JSON or
XML. Another way to handle AJAX would be to follow
a Crawljax [33] approach and covert the dynamic AJAX
calls into static pages.
state-aware-scanner
w3af
skipﬁsh
250%
230%
210%
190%
120%
100%
80%
60%
40%
20%
0%
-20%
t
e
g
w
r
e
v
O
t
n
e
m
e
v
o
r
p
m
I
e
g
a
t
n
e
c
r
e
P
G
allery
Php
B
B
v2
Php
B
B
v3
S
C
A
R
F
Vanilla
ackoPicko
v2
Foru
ms
W
W
W
ordPress
ordPress
v2
v3
Figure 6: Visual representation of the percentage increase of code coverage over the baseline scanner, wget. Important
to note is the gain our scanner, state-aware-scanner, has over w3af, because the only difference is our state-aware
crawling. The y-axis range is broken to reduce the distortion of the WackoPicko v2 results.
Another limitation of our approach is that our scanner
cannot be used against a web application being accessed
by other users (i.e., a public web application), because
the other users may inﬂuence the state of the application
(e.g., add a comment on a guestbook) and confuse our
state change detection algorithm.
8 Related Work
Automatic or semi-automatic web application vulnera-
bility scanning has been a hot topic in research for many
years because of its relevance and its complexity.
Huang et al. developed a tool (WAVES) for assess-
ing web application security with which we share many
points [24]. Similarly to us, they have a scanner for ﬁnd-
ing the entry points in the web application by mimicking
the behavior of a web browser. They employ a learn-
ing mechanism to sensibly ﬁll web form ﬁelds and al-
low deep crawling of pages behind forms. Attempts to
discover vulnerabilities are carried out by submitting the
same form multiple times with valid, invalid, and faulty
inputs, and comparing the result pages. Differently from
WAVES, we are using the knowledge gathered by the
ﬁrst-phase scanner to help the fuzzer detect the effect of
a given input. Moreover, our ﬁrst-phase scanner aims not
only at ﬁnding relevant entry-points, but rather at build-
ing a complete state-aware navigational map of the web
application.
A number of tools have been developed to try to au-
tomatically discover vulnerabilities in web applications,
produced as academic prototypes [4,17,22,25,28,29,31],
as open-source projects [8,9,37], or as commercial prod-
ucts [1, 23, 26, 35].
Multiple projects [6,16,42,43] tackled the task of eval-
uating the effectiveness of popular black-box scanners
(in some cases also called point-and-shoot scanners).
The common theme in their results is a relevant discrep-
ancy in vulnerabilities found across scanners, along with
low accuracy. Authors of these evaluations acknowledge
the difﬁculties and challenges of the task [21, 43].
In
particular, we highlighted how more deep crawling and
reverse engineering capabilities of web applications are
needed in black-box scanners, and we also developed the
WackoPicko web application which contains known vul-
nerabilities [16]. Similarly, Bau et al. investigated the
presence of room for research in this area, and found im-
provement is needed, in particular for detecting second-
order XSS and SQL injection attacks [6].
Reverse engineering of web applications has not been
widely explored in the literature,
to our knowledge.
Some approaches [13] perform static analysis on the
code to create UML diagrams of the application.
Static analysis, in fact, is the technique mostly em-
ployed for automatic vulnerability detection, often com-
bined with dynamic analysis.
385
POST /cart/action.php?action=purchase
397
GET /users/logout.php
400
POST /users/login.php
POST /users/register.php
POST /passcheck.php
POST /comments/add_comment.php
325
471
GET /cart/action.php?action=add&picid=7
GET /cart/action.php?action=add&picid=8
GET /cart/action.php?action=add&picid=9
GET /cart/action.php?action=add&picid=14
GET /cart/action.php?action=add&picid=15
GET /users/logout.php
POST /passcheck.php
POST /passcheck.php
POST /users/login.php
POST /users/register.php
523
417
726
POST /users/login.php
POST /users/register.php
GET /cart/action.php?action=add&picid=7
GET /cart/action.php?action=add&picid=8
GET /cart/action.php?action=add&picid=9
GET /cart/action.php?action=add&picid=14
GET /cart/action.php?action=add&picid=15
424
POST /comments/add_comment.php
GET /cart/action.php?action=add&picid=7
GET /cart/action.php?action=add&picid=8
GET /cart/action.php?action=add&picid=9
GET /cart/action.php?action=add&picid=14
GET /cart/action.php?action=add&picid=15
POST /users/login.php
POST /users/register.php
543
POST /comments/add_comment.php
GET /cart/action.php?action=add&picid=7
GET /cart/action.php?action=add&picid=8
GET /cart/action.php?action=add&picid=9
GET /cart/action.php?action=add&picid=14
GET /cart/action.php?action=add&picid=15
549
0
93
GET /users/logout.php
GET /cart/action.php?action=add&picid=7
GET /cart/action.php?action=add&picid=8
GET /cart/action.php?action=add&picid=9
GET /cart/action.php?action=add&picid=14
GET /cart/action.php?action=add&picid=15
POST /passcheck.php
GET /users/logout.php
POST /users/login.php
POST /users/register.php
GET /cart/action.php?action=add&picid=7
GET /cart/action.php?action=add&picid=8
GET /cart/action.php?action=add&picid=9
GET /cart/action.php?action=add&picid=14
GET /cart/action.php?action=add&picid=15
147
1536
91
POST /comments/add_comment.php
POST /users/login.php
POST /users/register.php
GET /cart/action.php?action=add&picid=7
GET /cart/action.php?action=add&picid=8
GET /cart/action.php?action=add&picid=9
GET /cart/action.php?action=add&picid=14
GET /cart/action.php?action=add&picid=15
POST /users/login.php
POST /users/register.php
POST /cart/action.php?action=purchase
780
879
POST /comments/add_comment.php
GET /users/logout.php
794
1615
POST /comments/add_comment.php
POST /users/login.php
POST /users/register.php
813
231
POST /comments/add_comment.php
POST /comments/add_comment.php
POST /comments/add_comment.php
GET /cart/action.php?action=add&picid=7
GET /cart/action.php?action=add&picid=8
GET /cart/action.php?action=add&picid=9
GET /cart/action.php?action=add&picid=14
GET /cart/action.php?action=add&picid=15
350
261
970
GET /cart/action.php?action=add&picid=7
GET /cart/action.php?action=add&picid=8
GET /cart/action.php?action=add&picid=9
GET /cart/action.php?action=add&picid=14
GET /cart/action.php?action=add&picid=15
GET /cart/action.php?action=add&picid=7
GET /cart/action.php?action=add&picid=8
GET /cart/action.php?action=add&picid=9
GET /cart/action.php?action=add&picid=14
GET /cart/action.php?action=add&picid=15
GET /cart/action.php?action=add&picid=7
GET /cart/action.php?action=add&picid=8
GET /cart/action.php?action=add&picid=9
GET /cart/action.php?action=add&picid=14
GET /cart/action.php?action=add&picid=15
POST /cart/action.php?action=delete
GET /users/logout.php
POST /cart/action.php?action=purchase
POST /cart/action.php?action=delete
POST /passcheck.php
290
1641
169
POST /users/login.php
POST /users/register.php
GET /cart/action.php?action=add&picid=7
GET /cart/action.php?action=add&picid=8
GET /cart/action.php?action=add&picid=9
GET /cart/action.php?action=add&picid=14
GET /cart/action.php?action=add&picid=15
POST /comments/add_comment.php
POST /cart/action.php?action=purchase
POST /comments/add_comment.php
POST /comments/add_comment.php
GET /users/logout.php
GET /cart/action.php?action=add&picid=7
GET /cart/action.php?action=add&picid=8
GET /cart/action.php?action=add&picid=9
GET /cart/action.php?action=add&picid=14
GET /cart/action.php?action=add&picid=15
POST /comments/add_comment.php
1725
1669
904
GET /cart/action.php?action=add&picid=7
GET /cart/action.php?action=add&picid=8
GET /cart/action.php?action=add&picid=9
GET /cart/action.php?action=add&picid=14
GET /cart/action.php?action=add&picid=15
POST /users/login.php
POST /users/register.php
1055
POST /comments/add_comment.php
874
GET /users/logout.php
200
899
POST /comments/add_comment.php
POST /users/login.php
POST /users/register.php
POST /users/login.php
POST /users/register.php
GET /users/logout.php
GET /users/logout.php
GET /cart/action.php?action=add&picid=7
GET /cart/action.php?action=add&picid=8
GET /cart/action.php?action=add&picid=9
GET /cart/action.php?action=add&picid=14
GET /cart/action.php?action=add&picid=15
1735
907
1157
1240
GET /cart/action.php?action=add&picid=7
GET /cart/action.php?action=add&picid=8
GET /cart/action.php?action=add&picid=9
GET /cart/action.php?action=add&picid=14
GET /cart/action.php?action=add&picid=15
GET /users/logout.php
POST /cart/action.php?action=delete
857
POST /comments/add_comment.php
1328
1248
GET /cart/action.php?action=add&picid=7
GET /cart/action.php?action=add&picid=8
GET /cart/action.php?action=add&picid=9
GET /cart/action.php?action=add&picid=14
GET /cart/action.php?action=add&picid=15