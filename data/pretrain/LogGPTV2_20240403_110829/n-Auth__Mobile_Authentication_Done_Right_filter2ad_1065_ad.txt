### Using Other Machines with an Up-to-Date, Standards-Compliant Web Browser and No Additional Software

This is achieved by both the current Pico and n-Auth. For the original Pico, the user must install a browser plugin and possibly a hardware dongle to set up a secure short-range communication between the browser and the Pico.

### Maturity

**Mature:** The scheme has been implemented and deployed on a large scale for actual authentication purposes beyond research. The original Pico, being only a concept, does not achieve this property. We rate the current Pico as "Quasi-Mature" based on a recent usability study conducted in collaboration with a top 500 Alexa website using an Android prototype, available to registered beta testers. n-Auth is rated as "Mature," given its reliable, publicly available Android and iOS applications. A preliminary user study was also carried out, and it is currently being deployed on the central login system of KU Leuven, a major European university.

### Non-Proprietary

Anyone can implement or use the scheme for any purpose without paying royalties. The relevant techniques are generally known, published openly, and not protected by patents or trade secrets. This is a design goal for both the original Pico and the current Pico. n-Auth only partially achieves this property.

### Usability

#### Memorywise-Effortless

Users do not have to remember any secrets. Both Pico approaches achieve this: the original Pico uses Pico Siblings, while the current Pico does not have a database locking mechanism. n-Auth achieves "Quasi-Memorywise-Effortless" as users need to remember one PIN for the database locking mechanism. Future work aims to enable fingerprint recognition, thus achieving "Memorywise-Effortless."

#### Scalable-for-Users

Using the scheme for hundreds of accounts does not increase the user's burden. Both the original Pico and n-Auth are scalable-for-users. The usability study on the current Pico suggests that the Pico prototype was built specifically for one account with one website, simplifying user interactions (as there is no general enrollment).

#### Nothing-to-Carry

Users do not need to carry an additional physical object (electronic device, mechanical key, piece of paper) to use the scheme. The original Pico concept does not achieve this. Both the current Pico and n-Auth "Quasi-achieve" this, as users need to carry their mobile phones, which they would carry everywhere anyway.

#### Physically-Effortless

The authentication process does not require physical (as opposed to cognitive) user effort beyond pressing a button. This is achieved by all three approaches.

#### Easy-to-Learn

Users who don’t know the scheme can figure it out and learn it without too much trouble, and then easily recall how to use it. The original Pico may not be easy-to-learn due to the complexity of managing Pico Siblings. Results suggest that both the current Pico and n-Auth are easy-to-learn.

#### Efficient-to-Use

The time the user must spend for each authentication is acceptably short. The time required for setting up a new association with a verifier, although possibly longer than that for authentication, is also reasonable. For scoring these properties, at least a prototype is necessary. We score both the current Pico and n-Auth as "Quasi-Efficient-to-Use" with average user timings of 35 seconds (42 authentication events over 11 participants) and 33 seconds (167 authentication events over 24 participants), respectively. The original Pico requires the user to select one of two dedicated buttons (login, create an account) to start scanning the QR code, which is prone to errors. The current Pico, lacking a general enrollment procedure, does not have this problem.

#### Infrequent-Errors

The task that users must perform to log in usually succeeds when performed by a legitimate and honest user. Results suggest that both the current Pico and n-Auth achieve infrequent-errors.

#### Easy-Recovery-from-Loss

A user can conveniently regain the ability to authenticate if the token is lost or the credentials forgotten. None of the three approaches achieves this property. From a security perspective, easy-recovery-from-loss often implies a security vulnerability that might be exploited by an attacker.

### Related Work

Since user authentication is researched from many perspectives, such as security, privacy, and usability, many proposals are related to our work. We focus on user authentication systems that (can) make use of mobile phones.

- **Phoolproof Phishing Prevention [18]**: One of the earliest works on bringing authentication to cellphones (2006). A shared key is established between the server and the app in an out-of-band manner. A browser plugin outsources the TLS client authentication to the app over Bluetooth.
- **QR-code Scheme [26]**: Proposes a QR-code scheme to confirm a (banking) transaction through an OTP.
- **Snap2Pass/Snap2Pay [9]**: Authenticates the user through a challenge presented in the QR code, using a symmetric key shared between the app and server. A 2015 usability study found that both Snap2Pass and Google OAuth 2.0 were favorites among users.
- **tiqr [7]**: Provides an open-source user authentication system. It makes use of the OAuth Challenge Response Algorithm (OCRA) and generates a one-time password based on the challenge and a shared secret.
- **SQRL [10]**: Derives a private key from a master secret and the server’s domain name, which the client uses to sign a challenge and log in to the server.
- **Loxin [28]**: Uses a central Loxin server and central PKI that certifies Loxin apps. Users enter their identifier into the browser, and a cryptographic hash value is shown. The Loxin server sends a push message with the hash to the mobile phone.
- **Knock x Knock [11]**: A comprehensive system for web authentication, focusing on managing different accounts on an iPhone and basing security decisions on contextual information.
- **FIDO Alliance UAF Standard [15]**: Proposes the Universal Authentication Framework (UAF) standard for a passwordless experience, heavily focused on the client device.

### Conclusion

We described n-Auth, a mobile authentication solution inspired by the original Pico concept. We provided a detailed specification of the user interface and cryptographic protocols, with provisions for future security upgrades. Our robust Android and iOS implementations demonstrate that our design is feasible, deployable, and allows for evaluating its usability at negligible cost. The results of our preliminary usability study are encouraging and show a positive trend towards n-Auth being a more secure and convenient alternative to passwords.

### Acknowledgements

The authors would like to thank the anonymous reviewers for their constructive comments. Pieter Maene is an SB PhD fellow at Research Foundation - Flanders (FWO).

### References

[References listed here]

### Questionnaire

Participants had to wait at least 12 hours between answering questions from one day to the next. Questions in italic are optional to answer. An overview of the questions on a day-by-day basis can be found at [link].

**Day 1:**
- How easy was it to start using the n-Auth method? [Likert scale from very difficult (1) to very easy (5)]
- What was your first impression? [open-ended question]

**Day 2:**
- What authentication methods are you currently using? [check boxes for authentication methods]
- Comments [open-ended question]

Participants chose from the following authentication methods: [list of methods]