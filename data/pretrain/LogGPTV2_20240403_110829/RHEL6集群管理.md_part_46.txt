    :::
4.  ::: para
    `ip:10.1.1.1`{.command} --- 这是 IP 地址资源。如果在 Service
    [*foo*]{.emphasis} 中还有其它 IP 地址资源，则应按照与
    `/etc/cluster/cluster.conf`{.filename} 文件 Service
    [*foo*]{.emphasis} 部分相反的顺序停止。
    :::
5.  ::: para
    `fs:1`{.command} --- 这是文件系统资源。如果在 Service
    [*foo*]{.emphasis} 中还有其它文件系统资源，则应按照与
    `/etc/cluster/cluster.conf`{.filename} 文件 Service
    [*foo*]{.emphasis} 部分相反的顺序停止。
    :::
6.  ::: para
    `lvm:2`{.command} --- 这是 LVM 资源。最后停止所有 LVM
    资源。`lvm:2`{.command}（``{.command}）是在
    `lvm:1`{.command} 之前停止的资源，资源类型组中的资源按照
    `/etc/cluster/cluster.conf`{.filename} 文件 Service
    [*foo*]{.emphasis} 部分的相反顺序停止。
    :::
7.  ::: para
    `lvm:1`{.command} --- 这是 LVM 资源。最后停止所有 LVM
    资源。`lvm:1`{.command}（``{.command}）是在
    `lvm:2`{.command} 之后停止的资源，资源类型组中的资源按照
    `/etc/cluster/cluster.conf`{.filename} 文件 Service
    [*foo*]{.emphasis} 部分的相反顺序停止。
    :::
:::
:::
:::
:::
::: section
::: titlepage
# [⁠]{#ap-ha-resource-behavior-CA.html#s1-clust-rsc-inherit-resc-reuse-CA}C.3. 继承、\块以及重复使用资源 {.title}
:::
::: para
有些资源利用从上级资源中继承的值，通常是在 NFS 服务中。[例 C.5
"资源再利用和继承的 NFS
服务设置"](#ap-ha-resource-behavior-CA.html#ex-nfs-reuse-inheritance-CA){.xref}
演示了典型的 NFS 服务配置，资源再利用和继承设置。
:::
::: example
[⁠]{#ap-ha-resource-behavior-CA.html#ex-nfs-reuse-inheritance-CA}
**例 C.5. 资源再利用和继承的 NFS 服务设置**
::: example-contents
``` screen
```
:::
:::
::: para
如果服务是平面的（即没有上级/下级关系），则需要按使用如下配置：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    该服务需要四个 nfsclient 资源 ---
    每个文件系统一个（一共两个文件系统），每个目标机器一个（一共两台目标机器）。
    :::
-   ::: para
    服务需要为每个 nfsclient 指定 export path 和 file system
    ID，配置的这个部分容易出错。
    :::
:::
::: para
但在 [例 C.5 "资源再利用和继承的 NFS
服务设置"](#ap-ha-resource-behavior-CA.html#ex-nfs-reuse-inheritance-CA){.xref}
中只定义一次 NFS 客户端资源 [*nfsclient:bob*]{.emphasis} 和
[*nfsclient:jim*]{.emphasis}；同样也只定义一次 NFS 导出资源
[*nfsexport:exports*]{.emphasis}。资源需要的所有属性都是从上级资源中继承的。因为继承的属性是动态的（并不与其它属性冲突），因此可能再利用那些资源
---
也就是为什么要在资源块中定义它们的原因。在很多情况下可能对配置一些资源没有可操作性。例如：在很多情况下配置文件系统资源可导致在两个节点中挂载一个文件系统，这样就会出问题。
:::
:::
::: section
::: titlepage
# [⁠]{#ap-ha-resource-behavior-CA.html#s1-clust-rsc-failure-rec-CA}C.4. 故障恢复和独立子树 {.title}
:::
::: para
在很多企业级环境中，如果服务的组件失败，修复的正常动作是重启整个服务。例如：在
[例 C.6 "服务 [*foo*]{.emphasis}
常见故障恢复"](#ap-ha-resource-behavior-CA.html#ex-failure-recovery-normal-CA){.xref}
中，如果这个服务中定义的任意脚本失败，则正常动作是重启（重新定位或者禁用，视服务恢复策略而定）该服务。但在有些情况下，服务的某些部分可能是不重要的，可能有必要在尝试一般恢复前重启该服务的某一部分。要完成这个操作，您可以使用
*` __independent_subtree`* 属性。例如：在 [例 C.7 "使用
*`__independent_subtree`* 属性对服务 [*foo*]{.emphasis}
执行故障恢复"](#ap-ha-resource-behavior-CA.html#ex-failure-recovery-ind-subtree-CA){.xref}
中，可使用 *` __independent_subtree`* 属性完成以下动作：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    如果 script:script_one 失败，重启
    script:script_one、script:script_two 和 script:script_three。
    :::
-   ::: para
    如果 script:script_two 失败，则只重启 script:script_two。
    :::
-   ::: para
    如果 script:script_three 失败，则重启
    script:script_one、script:script_two 和 script:script_three。
    :::
-   ::: para
    如果 script:script_four 失败，则重启整个服务。
    :::
:::
::: example
[⁠]{#ap-ha-resource-behavior-CA.html#ex-failure-recovery-normal-CA}
**例 C.6. 服务 [*foo*]{.emphasis} 常见故障恢复**
::: example-contents
``` screen
```
:::
:::
::: example
[⁠]{#ap-ha-resource-behavior-CA.html#ex-failure-recovery-ind-subtree-CA}
**例 C.7. 使用 *`__independent_subtree`* 属性对服务 [*foo*]{.emphasis}
执行故障恢复**
::: example-contents
``` screen
```
:::
:::
::: para
在有些情况下，如果服务的某个组件失败，您想要只禁用那个组件而不禁用整个服务，以避免影响使用那个服务其他组件的服务。从红帽企业版
Linux 6.1 发行本开始，您可以使用 *` __independent_subtree="2"`*
属性达到此目的，该属性将独立子树标为非关键（non-critical）。
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**注意**
:::
::: admonition
::: para
您可以在单一参考的资源中只使用 non-critical 标签。这个 non-critical
标签可在所有资源中使用，并可用于资源树的所有层，但在定义服务或者虚拟机时不应在顶层使用。
:::
:::
:::
::: para
从红帽企业版 Linux 6.1
开始，您可以在该资源数的每个节点中为独立的子树设定最多重启和重启过期。您可以使用
以下属性设定这些阈值：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    `__max_restarts`{.literal} 设定在放弃努力前最多可承受的重启次数。
    :::
-   ::: para
    `__restart_expire_time`{.literal}
    以秒为单位设定在多长时间后不再尝试重启。
    :::
:::
:::
::: section
::: titlepage
# [⁠]{#ap-ha-resource-behavior-CA.html#s1-clust-rsc-testing-config-CA}C.5. 调整并测试服务和资源顺序 {.title}
:::
::: para
您可以使用 `rg_test`{.command}
程序调整并测试服务和资源顺序。`rg_test`{.command} 是命令行工具，它由
`rgmanager`{.command} 软件包提供，在 shell 或者终端中运行（在
[**Conga**]{.application} 中不可用）。[表 C.2 "`rg_test`{.command}
程序小结"](#ap-ha-resource-behavior-CA.html#tb-rgtest-command-summary-CA){.xref}
中总结了 `rg_test`{.command} 的动作和语法。
:::
::: table
[⁠]{#ap-ha-resource-behavior-CA.html#tb-rgtest-command-summary-CA}
**表 C.2. `rg_test`{.command} 程序小结**
::: table-contents
+---------+------------------------------------------------------------+
| 动作    | 语法                                                       |
+=========+============================================================+
| 显示    | `rg_test rules`{.command}                                  |
| `rg_t   |                                                            |
| est`{.c |                                                            |
| ommand} |                                                            |
| 理解    |                                                            |
| 的资源  |                                                            |
| 规则。  |                                                            |
+---------+------------------------------------------------------------+
| 测试配  | `rg_test test /etc/cluster/cluster.conf`{.command}         |
| 置（和  |                                                            |
| /usr/s  |                                                            |
| hare/cl |                                                            |
| uster） |                                                            |
| 中的错  |                                                            |
| 误和冗  |                                                            |
| 余资源  |                                                            |
| 代理。  |                                                            |
+---------+------------------------------------------------------------+
| 显      | ::: para                                                   |
| 示服务  | 显示启动顺序：                                             |
| 的启动  | :::                                                        |
| 和停止  |                                                            |
| 排序。  | ::: para                                                   |
|         | `rg_test noop /etc/cluster/cluster.conf start se           |
|         | rvice servicename`{.command}``{=html}``{=html} |
|         | :::                                                        |
|         |                                                            |
|         | ::: para                                                   |
|         | 显示停止顺序：                                             |
|         | :::                                                        |
|         |                                                            |
|         | ::: para                                                   |
|         | `rg_test noop /etc/cluster/cluster.conf stop se            |
|         | rvice servicename`{.command}``{=html}``{=html} |
|         | :::                                                        |
+---------+------------------------------------------------------------+
| 明确    | ::: important                                              |
| 启动或  | ::: admonition_header                                      |
| 者停止  | **重要**                                                   |
| 服务。  | :::                                                        |
|         |                                                            |
|         | ::: admonition                                             |
|         | ::: para                                                   |
|         | 只在一个节点中这样做并总是先禁用 rgmanager 中的服务。      |
|         | :::                                                        |
|         | :::                                                        |
|         | :::                                                        |
|         |                                                            |
|         | ::: para                                                   |
|         | 启动服务：                                                 |
|         | :::                                                        |
|         |                                                            |
|         | ::: para                                                   |
|         | `rg_test test /etc/cluster/cluster.conf start se           |
|         | rvice servicename`{.command}``{=html}``{=html} |
|         | :::                                                        |
|         |                                                            |
|         | ::: para                                                   |
|         | 停止服务：                                                 |
|         | :::                                                        |
|         |                                                            |
|         | ::: para                                                   |
|         | ` rg_test test /etc/cluster/cluster.conf stop se           |
|         | rvice servicename`{.command}``{=html}``{=html} |
|         | :::                                                        |
+---------+------------------------------------------------------------+
| 计      | ::: para                                                   |
| 算并显  | `r                                                         |
| 示两个  | g_test delta  cluster.conf file 1`{.command}``{=html} |
| clust   | *` cluster.conf file 2`*``{=html}                   |
| er.conf | :::                                                        |
| 文件的  |                                                            |
| 资源树  | ::: para                                                   |
| delta。 | 例如：                                                     |
|         | :::                                                        |
|         |                                                            |
|         | ::: para                                                   |
|         | `rg_test delta /etc/clu                                    |
|         | ster/cluster.conf.bak /etc/cluster/cluster.conf`{.command} |
|         | :::                                                        |
+---------+------------------------------------------------------------+
:::
:::
:::
:::
[]{#ap-status-check-CA.html}
::: appendix
::: titlepage
# [⁠]{#ap-status-check-CA.html#ap-status-check-CA}附录 D. 集群服务资源检查及故障切换超时 {.title}
:::
[]{#ap-status-check-CA.html#idm140713245864992
.indexterm}[]{#ap-status-check-CA.html#idm140713290373776
.indexterm}[]{#ap-status-check-CA.html#idm140713317444336
.indexterm}[]{#ap-status-check-CA.html#idm140713312712608 .indexterm}
::: para
本附录论述了 `rgmanager`{.command}
如何监控集群资源状态，以及如何修改状态检查间隔。本附录还论述了
`__enforce_timeouts`{.literal} 服务参数，它说明操作超时可造成服务失败。
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**注意**
:::
::: admonition
::: para