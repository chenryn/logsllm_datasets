User: Is there an alternative to the os.kill function in Python 3 that will give me a return code? I'd like to verify that a process and it's children actually do get killed before restarting them.
I could probably put a kill -0 loop afterwards or do a subprocess.call(kill -9 pid) if I had to but I'm curious if there's a more elegant solution.
Assistant: This question is based on a mistaken understanding of how kill -9 PID behaves (or kill with any other signal -- even though -9 can't be overridden by a process's signal handler, it can still be delayed if, for instance, the target is in a blocking syscall).
Thus: kill -9 "$pid", in shell, doesn't tell you when the signal is received either. A return code of 0 just means that the signal was sent, same as what Python's os.kill() returning without an exception does.
The underlying sigaction call -- invoked by both os.kill() and the kill shell command -- has no way of returning result information. Thus, that information is not available in any language.