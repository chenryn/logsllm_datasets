of custom termination condition for model learning to balance
scalability and coverage; (4) disconnected FSMs resulting from re-
moving a deviation-inducing transition used for identifying other
noncompliance instances of the same diversity class; and (5) inher-
ent limitation of not being able to detect noncompliance instances
when both implementations under test are noncompliant to stan-
dard but are equivalent. DIKEUE, however, pairwise checks the
equivalence of devices drawn from 14 different UE models belong-
(cid:1) = 91 pairwise comparisons). It is, therefore,
ing to 5 vendors (i.e.,(cid:0)14
2
highly unlikely that all devices deviate from the standard in the
same way. If one device deviates from standard in a different way
than the rest, our equivalence checker can identify it.
Property agnostic. DIKEUE is not entirely property-agnostic if
predicates (e.g., is_null_security(m)) of messages are considered as
properties. In this paper, we consider the typical notion of prop-
erty [12, 19, 30, 32] which refers to stateful end-to-end guarantees
of a system. Since DIKEUE does not require any such properties to
identify noncompliance instances between any two implementa-
tions, we consider DIKEUE to be property agnostic.
Applicability on 5G. To the best of our knowledge, there is no
open-source protocol stack for the standalone 5G core network that
can be used to develop a 5G-adapter. Therefore, we leave testing of
5G cellular devices with DIKEUE as future work. Our LTE-specific
insights, although are based on LTE protocol invariants, are equally
applicable to 5G. As an example, similar to LTE, 5G has a multi-layer
design with most of the procedures unchanged from LTE. Thus, the
multi-layer protocol handling, context-checker, and other insights
will largely remain the same when adopting DIKEUE to 5G.
We also discuss parallelizing model learning and automatic ex-
ploit generation from deviant behavior in Appendix A.4.
13 CONCLUSION AND FUTURE WORK
We present DIKEUE which can automatically infer the FSMs of 4G
LTE UE implementations, and identify deviant behaviors among the
implementations in a property-agnostic way. To show the viability,
we applied DIKEUE to 14 COTS devices from 5 vendors. DIKEUE
uncovered 15 deviant behaviors; among them 11 are exploitable.
We have responsibly disclosed the vulnerabilities to the affected
stakeholders and they have acknowledged our findings.
Future Work. In future, we will accommodate session manage-
ment and other data layer protocols and port DIKEUE to 5G. We
will also develop an automated attack strategy generator to provide
end-to-end attack scenarios from the deviating behavior traces.
Session 4B: Wireless, Mobile, and IoT CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea1094ACKNOWLEDGEMENTS
This work is supported by NSF grants IIS-2112471, CNS-2006556,
DARPA YFA D19AP00039 and Intel. We thank GSMA and the base-
band vendors and manufacturers for coordinating with us for the
vulnerability disclosure process.
REFERENCES
[1] [n. d.]. DIKEUE. https://github.com/SyNSec-den/DIKEUE.
[2] [n. d.]. Evolved Universal T Radio Re Prot (3GPP TS 36.3 TECHNICAL SPECIFI-
CATION 136 331 V13.0.0 (2016 LTE; l Terrestrial Radio Access (E- Resource Control
(RRC).
[3] [n. d.]. GNU Compilers. Gcov - Using the GNU Compiler Collection (GCC)).
[4] [n. d.].
libimobiledevice A cross-platform protocol library to access iOS devices.
https://github.com/libimobiledevice.
[5] [n. d.]. LTE; Evolved Universal Terrestrial Radio Access (E-UTRA) and Evolved
Packet Core (EPC); User Equipment (UE) conformance specification; Part 1: Protocol
conformance specification (3GPP TS 36.523-1).
[6] [n. d.]. srsLTE. https://github.com/srsLTE.
[7] [n. d.]. TS 24.301 Universal Mobile Telecommunications System (UMTS); LTE; 5G;
Non-Access-Stratum (NAS) protocol for Evolved Packet System (EPS); Stage 3 (3GPP
TS 24.301 version 15.4.0 Release 15).
[8] [n. d.]. TS 33.401 3GPP System Architecture Evolution (SAE).
[9] [n. d.]. Universal Mobile Telecommunications System (UMTS); LTE; 5G; Non-
Access-Stratum (NAS) protocol for Evolved Packet System (EPS); Stage 3 (3GPP TS
24.301 version 15.4.0 Release 15).
[10] Dana Angluin. 1987. Learning regular sets from queries and counterexamples.
Information and Computation 75, 2 (1987), 87 – 106. https://doi.org/10.1016/0890-
5401(87)90052-6
[11] George Argyros, Ioannis Stais, Suman Jana, Angelos D. Keromytis, and Aggelos
Kiayias. 2016. SFADiff: Automated Evasion Attacks and Fingerprinting Us-
ing Black-Box Differential Automata Learning. In Proceedings of the 2016 ACM
SIGSAC Conference on Computer and Communications Security (Vienna, Austria)
(CCS ’16). Association for Computing Machinery, New York, NY, USA, 1690–1701.
https://doi.org/10.1145/2976749.2978383
[12] David Basin, Jannik Dreier, Lucca Hirschi, Saša Radomirovic, Ralf Sasse, and
Vincent Stettler. 2018. A Formal Analysis of 5G Authentication. In Proceedings
of the 2018 ACM SIGSAC Conference on Computer and Communications Security
(Toronto, Canada) (CCS ’18). Association for Computing Machinery, New York,
NY, USA, 1383–1396. https://doi.org/10.1145/3243734.3243846
[13] Benjamin Beurdouche, Karthikeyan Bhargavan, Antoine Delignat-Lavaud, Cédric
Fournet, Markulf Kohlweiss, Alfredo Pironti, Pierre-Yves Strub, and Jean Karim
Zinzindohoue. 2015. A Messy State of the Union: Taming the Composite State
Machines of TLS. In 2015 IEEE Symposium on Security and Privacy. 535–552.
https://doi.org/10.1109/SP.2015.39
[14] Roberto Cavada, Alessandro Cimatti, Michele Dorigatti, Alberto Griggio, Alessan-
dro Mariotti, Andrea Micheli, Sergio Mover, Marco Roveri, and Stefano Tonetta.
2014. The nuXmv Symbolic Model Checker. In Computer Aided Verification,
Armin Biere and Roderick Bloem (Eds.). Springer International Publishing, Cham,
334–342.
[15] Merlin Chlosta, David Rupprecht, and Thorsten Holz. 2021. On the Challenges
of Automata Reconstruction in LTE Networks. In Proceedings of the 14th ACM
Conference on Security and Privacy in Wireless and Mobile Networks (Abu Dhabi,
United Arab Emirates) (WiSec ’21). Association for Computing Machinery, New
York, NY, USA, 164–174. https://doi.org/10.1145/3448300.3469133
[16] Merlin Chlosta, David Rupprecht, Thorsten Holz, and Christina Pöpper. 2019.
LTE Security Disabled: Misconfiguration in Commercial Networks. In Proceedings
of the 12th Conference on Security and Privacy in Wireless and Mobile Networks
(Miami, Florida) (WiSec ’19). Association for Computing Machinery, New York,
NY, USA, 261–266. https://doi.org/10.1145/3317549.3324927
[17] T. S. Chow. 1978. Testing Software Design Modeled by Finite-State Machines.
IEEE Transactions on Software Engineering SE-4, 3 (1978), 178–187. https://doi.
org/10.1109/TSE.1978.231496
[18] P. M. Comparetti, Gilbert Wondracek, C. Krügel, and E. Kirda. 2009. Prospex:
Protocol Specification Extraction. 2009 30th IEEE Symposium on Security and
Privacy (2009), 110–125.
[19] C. Cremers and Martin Dehnel-Wild. 2019. Component-Based Formal Analysis of
5G-AKA: Channel Assumptions and Session Confusion. In 26th Annual Network
and Distributed System Security Symposium, NDSS 2019, San Diego, California,
USA, February 24-27, 2019. https://doi.org/10.14722/ndss.2019.23394
[20] L. Daniel, E. Poll, and J. de Ruiter. 2018. Inferring OpenVPN State Machines Using
Protocol State Fuzzing. In 2018 IEEE European Symposium on Security and Privacy
Workshops (EuroS PW). 11–19. https://doi.org/10.1109/EuroSPW.2018.00009
[21] Joeri De Ruiter and Erik Poll. 2015. Protocol State Fuzzing of TLS Implemen-
tations. In Proceedings of the 24th USENIX Conference on Security Symposium
(Washington, D.C.) (SEC’15). USENIX Association, USA, 193–206.
[22] Simon Erni, Patrick Leu, Martin Kotuliak, Marc Röschlin, and Srdjan Cap-
In
AdaptOver : Adaptive Overshadowing of LTE signals.
kun. 2021.
https://arxiv.org/abs/2106.05039. arxiv.
[23] CheolJun Park Insu Yun Yongdae Kim Eunsoo Kim, Dongkwan Kim. 2021.
BASESPEC: Comparative Analysis of Baseband Software and Cellular Specifica-
tions for L3 Protocols. NDSS 2021 (2021). https://doi.org/10.14722/ndss.2021.24365
[24] Robert B. Evans and Alberto Savoia. 2007. Differential Testing: A New Ap-
proach to Change Detection. In The 6th Joint Meeting on European Software En-
gineering Conference and the ACM SIGSOFT Symposium on the Foundations of
Software Engineering: Companion Papers (Dubrovnik, Croatia) (ESEC-FSE com-
panion ’07). Association for Computing Machinery, New York, NY, USA, 549–552.
https://doi.org/10.1145/1295014.1295038
[25] Paul Fiterău-Broştean, Ramon Janssen, and Frits Vaandrager. 2016. Combining
Model Learning and Model Checking to Analyze TCP Implementations. In Com-
puter Aided Verification, Swarat Chaudhuri and Azadeh Farzan (Eds.). Springer
International Publishing, Cham, 454–471.
[26] Paul Fiterau-Brostean, Bengt Jonsson, Robert Merget, Joeri de Ruiter, Konstanti-
nos Sagonas, and Juraj Somorovsky. 2020. Analysis of DTLS Implementations
Using Protocol State Fuzzing. In 29th USENIX Security Symposium (USENIX Se-
curity 20). USENIX Association, 2523–2540. https://www.usenix.org/conference/
usenixsecurity20/presentation/fiterau-brostean
[27] Paul Fiterău-Broştean, Toon Lenaerts, Erik Poll, Joeri de Ruiter, Frits Vaan-
drager, and Patrick Verleg. 2017. Model Learning and Model Checking of
SSH Implementations. In Proceedings of the 24th ACM SIGSOFT International
SPIN Symposium on Model Checking of Software (Santa Barbara, CA, USA) (SPIN
2017). Association for Computing Machinery, New York, NY, USA, 142–151.
https://doi.org/10.1145/3092282.3092289
[28] Grant Hernandez and Kevin R. B. Butler. 2019. Basebads: Automated Security
Analysis of Baseband Firmware: Poster. In Proceedings of the 12th Conference
on Security and Privacy in Wireless and Mobile Networks (Miami, Florida) (WiSec
’19). Association for Computing Machinery, New York, NY, USA, 318–319. https:
//doi.org/10.1145/3317549.3326310
[29] Yating Hsu, Guoqiang Shu, and David Lee. 2008. A model-based approach
to security flaw detection of network protocol implementations. In 2008 IEEE
International Conference on Network Protocols. 114–123. https://doi.org/10.1109/
ICNP.2008.4697030
[30] Syed Rafiul Hussain, Omar Chowdhury, Shagufta Mehnaz, and Elisa Bertino.
2018. LTEInspector: A Systematic Approach for Adversarial Testing of 4G
LTE. In 25th Annual Network and Distributed System Security Symposium,
NDSS 2018, San Diego, California, USA, February 18-21, 2018. The Internet Soci-
ety. https://www.ndss-symposium.org/wp-content/uploads/2018/02/ndss2018_
02A-3_Hussain_paper.pdf
[31] Syed Rafiul Hussain, Mitziu Echeverria, Omar Chowdhury, Ninghui Li, and Elisa
Bertino. 2019. Privacy Attacks to the 4G and 5G Cellular Paging Protocols
Using Side Channel Information. In 26th Annual Network and Distributed System
Security Symposium, NDSS 2019, San Diego, California, USA, February 24-27, 2019.
The Internet Society. https://www.ndss-symposium.org/wp-content/uploads/
2019/02/ndss2019_05B-5_Hussain_paper.pdf
[32] Syed Rafiul Hussain, Mitziu Echeverria, Imtiaz Karim, Omar Chowdhury, and
Elisa Bertino. 2019. 5GReasoner: A Property-Directed Security and Privacy
Analysis Framework for 5G Cellular Network Protocol. In Proceedings of the 2019
ACM SIGSAC Conference on Computer and Communications Security (London,
United Kingdom) (CCS ’19). Association for Computing Machinery, New York,
NY, USA, 669–684. https://doi.org/10.1145/3319535.3354263
[33] Malte Isberner. 2015. Foundations of active automata learning: an algorithmic
perspective. Ph. D. Dissertation.
[34] Malte Isberner, Falk Howar, and Bernhard Steffen. 2014. The TTT Algorithm: A
Redundancy-Free Approach to Active Automata Learning. In Runtime Verifica-
tion, Borzoo Bonakdarpour and Scott A. Smolka (Eds.). Springer International
Publishing, Cham, 307–322.
[35] Malte Isberner, Falk Howar, and Bernhard Steffen. 2015. The Open-Source Learn-
Lib. In Computer Aided Verification, Daniel Kroening and Corina S. Păsăreanu
(Eds.). Springer International Publishing, Cham, 487–495.
[36] Imtiaz Karim, Fabrizio Cicala, Syed Rafiul Hussain, Omar Chowdhury, and Elisa
Bertino. 2019. Opening Pandora’s Box through ATFuzzer: Dynamic Analysis
of AT Interface for Android Smartphones. In Proceedings of the 35th Annual
Computer Security Applications Conference (San Juan, Puerto Rico, USA) (ACSAC
’19). Association for Computing Machinery, New York, NY, USA, 529–543. https:
//doi.org/10.1145/3359789.3359833
[37] Imtiaz Karim, Syed Hussain, and Elisa Bertino. 2021. ProChecker: An Automated
Security and Privacy Analysis Framework for 4G LTE Protocol Implementations.
In Proceedings of the 41st IEEE International Conference on Distributed Computing
Systems, ICDCS 2021.
[38] Hongil Kim, Dongkwan Kim, Minhee Kwon, Hyungseok Han, Yeongjin Jang,
Dongsu Han, Taesoo Kim, and Yongdae Kim. 2015. Breaking and Fixing VoLTE:
Exploiting Hidden Data Channels and Mis-Implementations. In Proceedings of
the 22nd ACM SIGSAC Conference on Computer and Communications Security
(Denver, Colorado, USA) (CCS ’15). Association for Computing Machinery, New
Session 4B: Wireless, Mobile, and IoT CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea1095Component
Tools
Lines of Code
Learner
Adapter
Membership Cache
Modified cellular stack
FSM Equivalence Checker
Device resetter
LearnLib [35]
srsLTE [6]
–
–
–
–
507 (Mysql and Java)
248 (Java)
1807 (Java)
∼4000 (C++)
640 (Python 2.7)
2240 (Python 2.7)
Table 7: Additions/modifications to the tools used in DIKEUE.
York, NY, USA, 328–339. https://doi.org/10.1145/2810103.2813718
[39] Hongil Kim, Jiho Lee, Eunkyu Lee, and Yongdae Kim. 2019. Touching the Un-
touchables: Dynamic Security Analysis of the LTE Control Plane. In 2019 IEEE
Symposium on Security and Privacy (SP). 1153–1168. https://doi.org/10.1109/SP.
2019.00038
[40] Chi-Yu Li, Guan-Hua Tu, Chunyi Peng, Zengwen Yuan, Yuanjie Li, Songwu Lu,
and Xinbing Wang. 2015. Insecurity of Voice Solution VoLTE in LTE Mobile
Networks. In Proceedings of the 22nd ACM SIGSAC Conference on Computer and
Communications Security (Denver, Colorado, USA) (CCS ’15). Association for
Computing Machinery, New York, NY, USA, 316–327. https://doi.org/10.1145/
2810103.2813618
[41] Dominik Maier, Lukas Seidel, and Shinjo Park. 2020. BaseSAFE: Baseband
Sanitized Fuzzing through Emulation. In Proceedings of the 13th ACM Confer-
ence on Security and Privacy in Wireless and Mobile Networks (Linz, Austria)
(WiSec ’20). Association for Computing Machinery, New York, NY, USA, 122–132.
https://doi.org/10.1145/3395351.3399360
[42] William M. McKeeman. 1998. Differential Testing for Software. DIGITAL TECH-
NICAL JOURNAL 10, 1 (1998), 100–107.
[43] Chris McMahon Stone, Tom Chothia, and Joeri de Ruiter. 2018. Extending Au-
tomated Protocol State Learning for the 802.11 4-Way Handshake. In Computer
Security, Javier Lopez, Jianying Zhou, and Miguel Soriano (Eds.). Springer Inter-
national Publishing, Cham, 325–345.
[44] Soo-Jin Moon, Jeffrey Helt, Yifei Yuan, Yves Bieri, Sujata Banerjee, Vyas Sekar,
Wenfei Wu, Mihalis Yannakakis, and Ying Zhang. 2019. Alembic: Automated
Model Inference for Stateful Network Functions. In Proceedings of the 16th
USENIX Conference on Networked Systems Design and Implementation (Boston,
MA, USA) (NSDI’19). USENIX Association, USA, 699–718.
[45] Harald Raffelt, Bernhard Steffen, and Margaria Tiziana. 2007. Dynamic Testing
Via Automata Learning. 136–152. https://doi.org/10.1007/978-3-540-77966-7_13
[46] Abdullah Rasool, Greg Alpár, and Joeri de Ruiter. 2019. State machine inference
of QUIC. CoRR abs/1903.04384 (2019). arXiv:1903.04384 http://arxiv.org/abs/
1903.04384
[47] David Rupprecht, Kai Jansen, and Christina Pöpper. 2016. Putting LTE Security
Functions to the Test: A Framework to Evaluate Implementation Correctness.
In Proceedings of the 10th USENIX Conference on Offensive Technologies (Austin,
TX) (WOOT’16). USENIX Association, USA, 40–51.
[48] David Rupprecht, Katharina Kohls, Thorsten Holz, and Christina Pöpper. 2020.
Call Me Maybe: Eavesdropping Encrypted LTE Calls With ReVoLTE. In USENIX
Security Symposium (SSYM). USENIX Association.
[49] David Rupprecht, Katharina Kohls, Thorsten Holz, and Christina Pöpper. 2019.
Breaking LTE on Layer Two. In 2019 IEEE Symposium on Security and Privacy
(SP). 1121–1136. https://doi.org/10.1109/SP.2019.00006
[50] Muzammil Shahbaz and Roland Groz. 2009. Inferring Mealy Machines. In FM
2009: Formal Methods, Ana Cavalcanti and Dennis R. Dams (Eds.). Springer Berlin
Heidelberg, Berlin, Heidelberg, 207–222.
[51] Altaf Shaik, Jean-Pierre Seifert, Ravishankar Borgaonkar, N. Asokan, and Valtteri
Niemi. 2016. Practical Attacks Against Privacy and Availability in 4G/LTE Mobile
Communication Systems. In 23rd Annual Network and Distributed System Security
Symposium, NDSS 2016, San Diego, California, USA, February 21-24, 2016. The
Internet Society.
[52] Suphannee Sivakorn, George Argyros, Kexin Pei, Angelos D. Keromytis, and
Suman Jana. 2017. HVLearn: Automated Black-Box Analysis of Hostname Ver-
ification in SSL/TLS Implementations. In 2017 IEEE Symposium on Security and
Privacy (SP). 521–538. https://doi.org/10.1109/SP.2017.46
[53] M. Tappler, B. K. Aichernig, and R. Bloem. 2017. Model-Based Testing IoT
Communication via Active Automata Learning. In 2017 IEEE International Con-
ference on Software Testing, Verification and Validation (ICST). 276–287. https:
//doi.org/10.1109/ICST.2017.32
[54] Mark Utting and Bruno Legeard. 2006. Practical Model-Based Testing: A Tools
Approach. Morgan Kaufmann Publishers Inc., San Francisco, CA, USA.
[55] Frits Vaandrager. 2017. Model Learning. Commun. ACM 60, 2 (Jan. 2017), 86–95.
https://doi.org/10.1145/2967606
A APPENDIX
A.1 NAS and RRC Layer procedures
A.1.1 NAS Layer Procedures. We now briefly discuss the NAS layer
procedures that are most relevant in the context of our paper (shown
10
Desire
Baseband
Exynos 7420 Octa
Mediatek MT6795M Helio X10
Qualcomm APQ8084 Snapdragon 805
Figure 7: LTE control plane procedures. NAS and RRC layer
procedures are shown in black and blue, respectively.
Device
Motorola Nexus 6
HTC One E9+
Samsung Galaxy S6
HTC
Lifestyle
Huawei Nexus 6P
Samsung Galaxy S8+
Google Pixel 3 XL
Huawei Y5 Prime
Honor 8X
Huawei P8lite
Xiaomi Mi A1
Apple iPhone XS
Yoidesu 4G LTE USB
WiFi Modem
Fibocom L860-GL
Qualcomm MSM8928 Snapdragon 400
Qualcomm MSM8994 Snapdragon 810
Qualcomm MSM8998 Snapdragon 835
Qualcomm SDM845 Snapdragon 845
OS Version
Android 7.1.1
Android 6.0
Android 8.0
Android 6.0
Android 8.0
Android 9.0