title:Quantifying the operational status of the DNSSEC deployment
author:Eric Osterweil and
Michael Ryan and
Daniel Massey and
Lixia Zhang
Quantifying the Operational Status of the DNSSEC
Deployment
Eric Osterweil
UCLA
PI:EMAIL
Michael Ryan
UCLA
PI:EMAIL
Dan Massey
Colorado State University
PI:EMAIL
Lixia Zhang
UCLA
PI:EMAIL
ABSTRACT
This paper examines the deployment of the DNS Security
Extensions (DNSSEC), which adds cryptographic protec-
tion to DNS, one of the core components in the Internet
infrastructure. We analyze the data collected from the ini-
tial DNSSEC deployment which started over 2 years ago,
and identify three critical metrics to gauge the deployment:
availability, veriﬁability, and validity. Our results provide
the ﬁrst comprehensive look at DNSSEC’s deployment and
reveal a number of challenges that were not anticipated
in the design but have become evident in the deployment.
First, obstacles such as middle-boxes (ﬁrewalls, NATs, etc.)
that exist in today’s Internet infrastructure have proven to
be problematic and have resulted in unforeseen availabil-
ity problems. Second, the public-key delegation system of
DNSSEC has not evolved as it was hoped and it currently
leaves over 97% of DNSSEC zones isolated and unveriﬁ-
able, unless some external key authentication mechanism is
added. Furthermore, our results show that cryptographic
veriﬁcation is not equivalent to validation; a piece of veriﬁed
data can still contain the wrong value. Finally, our results
demonstrate the essential role of monitoring and measure-
ment in the DNSSEC deployment. We believe that the ob-
servations and lessons from the DNSSEC deployment can
provide insights into measuring future Internet-scale cryp-
tographic systems.
Categories and Subject Descriptors
C.2.0 [Computer Systems Organization]: Computer -
Communication Networks - Security and protection; C.2.3
[Computer Systems Organization]: Computer - Com-
munication Networks - Network Monitoring; C.4 [Computer
Systems Organization]: Performance of Systems
General Terms
Management, Measurement, Security
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
IMC’08, October 20–22, 2008, Vouliagmeni, Greece.
Copyright 2008 ACM 978-1-60558-334-1/08/10 ...$5.00.
Keywords
DNSSEC, Measurement, Internet-Scale Security, Metrics
1.
INTRODUCTION
It is widely recognized that security is a fundamental chal-
lenge facing the Internet today, and cryptographic technolo-
gies are generally viewed as a powerful tool-set for addressing
security challenges. Over the past several years, there have
been a number of eﬀorts to retroﬁt existing protocols with
cryptographic protection [4, 6, 5, 9, 13, 19]. One clear lesson
that has emerged from these eﬀorts is that adding crypto-
graphic protection to existing systems tends to be diﬃcult.
This is especially true for Internet-scale systems. Internet-
scale systems are large in size as measured by the num-
ber of their components, which belong to a large number
of independent administrative authorities without any cen-
tral control. Yet deploying a cryptographic protection in an
Internet-scale system means that the mechanism needs to
be deployed across the entire Internet and can be used by
all desired parties in a cohesive manner.
In this paper we examine the DNS Security Extensions
(DNSSEC)[4, 6, 5]. The DNSSEC protocol set is considered
mature and its global deployment eﬀorts started a few years
ago. Our SecSpider monitoring project[3] has been track-
ing the DNSSEC deployment since shortly after the rollout
began. Our public site tracks the number of secured DNS
zones as viewed from diverse locations around the globe. It
allows one to determine whether a particular zone has turned
on DNSSEC and also tracks the evolution of zone speciﬁc
operational decisions, such as the choice of public keys and
signature lifetimes. Live data has been available for a few
years and historical data dating back to the ﬁrst few months
of DNSSEC deployment is also available.
To quantify both the eﬀectiveness of cryptographic protec-
tion that early DNSSEC adopters may gain and the obstacle
in DNSSEC deployment, we analyze the collected DNSSEC
monitoring data using three measurement metrics: availabil-
ity, veriﬁability, and validity. Our measurement and analy-
sis show that there are a number of challenges that were not
anticipated in the design but have become evident in the de-
ployment. First, middleboxes, such as ﬁrewalls and NATs,
that exist in today’s Internet infrastructure have proven to
be obstacles in DNSSEC rollout and have resulted in unfore-
seen availability problems. Second, the public-key delega-
tion system in the DNSSEC design has not evolved as it was
hoped and it currently leaves more than 97% of DNSSEC-
enabled zones isolated and unveriﬁable, unless some external
key authentication mechanism is added. Third, our results
show that cryptographic protection has its own limitations.
That is, cryptographic veriﬁcation is not equivalent to val-
idation; a piece of cryptographically veriﬁed data can still
contain incorrect value.
Our contributions in this paper are three-fold. First, based
on our observations of the current DNSSEC deployment, we
derive three basic metrics to quantify the eﬀectiveness of
DNSSEC’s deployment. Our earlier measurement results
reported in [15] provided some basic observations includ-
ing the number of existing DNSSEC zones, the operational
practice in managing cryptographic deployment, and the ex-
istence of vulnerability to replay attacks; this paper not only
reports more recent measurement data, but most impor-
tantly, the newly deﬁned metrics enable us to quantify the
observed problems in a meaningful way. Second, our mea-
surement results expose previously undocumented open is-
sues in the DNSSEC deployment. Third, our results demon-
strated the essential role of monitoring and measurement in
the DNSSEC deployment. We believe that the observations
and lessons reported in this paper can provide insights into
the challenges in developing future Internet cryptographic
systems.
The remainder of this papers is organized as follows. Sec-
tion 2 discusses the general design of DNSSEC. Next, in
Section 3 we describe our basic approach to monitoring and
quantifying the deployment of DNSSEC. In Section 4 we
present the quantitative results of analyzing DNSSEC. Lastly,
we discuss our ﬁndings and conclusions in Section 5.
2. BACKGROUND
The Domain Name System (DNS) maps hostnames such
as www.ucla.edu to IP addresses and provides a wide range
of other mapping services ranging from email to geographic
location. Virtually every Internet application relies on look-
ing up certain DNS data.
In this section we introduce a
basic set of DNS terminology which is used throughout the
text, including resource records (RRs), resource record sets
(RRsets), and zones, followed by an overview of the DNS
Security Extensions.
All DNS data is stored in the same data structure called
Resource Records (RRs), and each RR has an associated
name, class, and type. For example, an IPv4 address for
www.ucla.edu is stored in an RR with name www.ucla.edu,
class IN (Internet), and type A (IPv4 address). A host
with several IPv4 addresses will have several RRs, each
with the same name, class, and type but its own IPv4 ad-
dress. The set of all resource records associated with the
same name, class, and type is called an Resource Record Set
(RRset). DNS resolvers query for RRsets. For example,
when a browser queries for hwww.ucla.edu, IN, Ai, the re-
ply will be the RRset for www.ucla.edu with all the IPv4
addresses for that name. Note that the smallest unit that
can be requested in a query is an RRset, and all DNS actions
including cryptographic signatures, discussed later, apply to
RRsets instead of individual RRs.
The DNS is a distributed database organized in a tree
structure. At the top of the tree, the root zone delegates
authority to top level domains like com., net., org., and
edu.. The zone com. then delegates authority to create
google.com., edu. delegates authority to create ucla.edu.,
and so forth. In the resulting DNS tree structure, each node
Figure 1: Resolvers preconﬁgure the root zone’s public key
as a trust anchor (T a) and can then trace a “chain of trust”
from that key down the DNSSEC hierarchy to any zone’s key
that they have encountered.
corresponds to a zone. Each zone belongs to a single admin-
istrative authority and is served by multiple authoritative
nameservers to provide name resolution services for all the
names in the zone. Every RRset in the DNS belongs to a
speciﬁc zone and stored at the nameservers of that zone. For
example, the RRset for hwww.ucla.edu, IN, Ai belongs to
the ucla.edu zone and stored in the ucla.edu nameservers;
while the RRset for hwww.colostate.edu, IN, Ai belongs
to the colostate.edu zone and stored in the colostate.edu
nameservers.
2.1 DNSSEC Overview
Security was not a primary objective when the DNS was
designed in mid 80’s and a number of well known vulner-
abilities have been identiﬁed [8, 7]. DNSSEC provides a
cryptographic solution to the problem, which seems pretty
simple and intuitive. To prove that data in a DNS reply
is authentic, each zone creates public/private key pairs and
then uses the private portions to sign data. Its public keys
are stored in a new type of RR called DNSKEY, and all the sig-
natures are stored in another new type of RR called RRSIG.
In response to a query, an authoritative server returns both
the requested data and its associated RRSIG RRset. A re-
solver that has learned the DNSKEY of the requested zone can
verify the origin authenticity and integrity of the reply data.
To resist replay attacks, each signature carries a deﬁnitive
expiration time.
Let Ni deﬁne the set of authoritative name servers for
zone zi which are online and reachable. When the zone is
operating correctly, it does not matter which of the servers in
Ni handles a query and the answer can be cached. However,
the design does assume that the resolver can obtain and
authenticate the zone’s DNSKEY.
In order to authenticate the DNSKEY for a given zone, say
www.ucla.edu, the resolver needs to construct a chain of
trust that follows the DNS hierarchy from a trusted root
zone key down to the key of the zone in question (this is
shown in Figure 1). In the ideal case, the public key of the
DNS root zone would be obtained oﬄine in a secure way
and stored at the resolver, so that the resolver can use it
to authenticate the public key of edu.; the public key of
edu. would then be used to authenticate the public key of
ucla.edu..
There are two challenges in building the chain of trust.
First, a parent zone must encode the authentication of each
of its child zone’s public keys in the DNS. To accomplish this,
the parent zone creates and signs a Delegation Signer (DS)
RR that corresponds to a DNSKEY RR at the child zone, and
com         foo.comrooteduucla.edu   .TaTaSymbol Description
r
k
sk
R
A resource record
A DNSKEY
An RRSIG (veriﬁable by k)
An RRset deﬁned as
(r0, · · · , ri, s0, · · · , sj )
A secure R with one or more sk
A DNSKEY RRset deﬁned as
(k0, · · · , ki, sk0
A k trust anchor
A secure zone deﬁned as
(Rs
The set of online nameservers
for a zone zi
The set of all secure zones
0 , · · · , skl
j )
Rs
K
T a
z
Ni
Zs
0, · · · , Rs
i , K)
Algorithm 1: Resolution algorithm for DNSSEC
Data: Given Ni
Input: Query (Q) for “www.foo.bar ” from foo.bar (zi)
begin
if get Ki from Ni then
if able to trace chain from known T a then
send Q to one of Ni
if ∃ Rs ∈ zi such that Q ∈ Rs AND verify
signatures in Rs against Ki then
Data is veriﬁed
else
Unable to verify data
else
Key cannot be veriﬁed as zi’s
Table 1: Deﬁnition of terms
else
creates an authentication link from the parent to child. It is
the child zone’s responsibility to request an update to the DS
RR every time the child’s DNSKEY changes. Although all the
above procedures seem simple and straightforward, one must
keep in mind that they are performed manually, and people
inevitably make errors, especially when handling large zones
that have hundreds or thousands of children zones.
Moreover, the parent and child zones belong to diﬀerent
administrative authorities, each may decide independently is
and when they turn on DNSSEC. This leads to the second
and more problematic challenge. If the parent zone is not
signed, there is no chain of trust leading to the child zone’s
DNSKEY. This orphaned key eﬀectively becomes an isolated
trust anchor for its subtree in the DNS hierarchy. To verify
the data in these isolated DNSSEC zones, one has to obtain
the keys for such isolated trust anchors oﬄine in a secure
manner. DNSSEC resolvers maintain a set of well-known
“trust-anchor” keys (T a) so that a chain of key sets + sig-
natures (secure delegation chain) can be traced from some
T a to a DNSSEC key K lower in the tree. The original
DNSSEC design envisioned that the its deployment would
be rolled out in a top-down manner. Thus only the root
zone’s K would need to be conﬁgured in all resolvers’ T a
sets and all secure delegations would follow the existing DNS
hierarchy. However without the root and top level domains
deploying DNSSEC (as is the case today) there could be po-
tentially millions of isolated trust anchors. In fact various
approaches have been proposed for securely obtaining these
trust anchors.
Secure Resolution Procedure: For illustrative pur-
poses, Algorithm 1 describes the veriﬁcation process DNS-
SEC resolvers follow when contacting and querying zones
for DNSSEC data. Table 1 summarizes the notations used
in describing a secure zone.
3. MONITORING AND MEASUREMENT