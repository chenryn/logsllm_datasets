# Quantifying the Operational Status of DNSSEC Deployment

**Authors:**
- Eric Osterweil, UCLA, [EMAIL]
- Michael Ryan, UCLA, [EMAIL]
- Dan Massey, Colorado State University, [EMAIL]
- Lixia Zhang, UCLA, [EMAIL]

## Abstract
This paper examines the deployment of the Domain Name System Security Extensions (DNSSEC), which adds cryptographic protection to one of the core components of the Internet infrastructure. We analyze data collected from the initial DNSSEC deployment, which began over two years ago, and identify three critical metrics to gauge the deployment: availability, verifiability, and validity. Our results provide a comprehensive look at DNSSEC’s deployment and reveal several challenges that were not anticipated in the design but have become evident during implementation.

First, obstacles such as middleboxes (e.g., firewalls, NATs) in today's Internet infrastructure have proven problematic, leading to unforeseen availability issues. Second, the public-key delegation system in DNSSEC has not evolved as hoped, leaving over 97% of DNSSEC zones isolated and unverifiable unless an external key authentication mechanism is added. Additionally, our results show that cryptographic verification does not equate to validation; verified data can still contain incorrect values. Finally, our findings highlight the essential role of monitoring and measurement in DNSSEC deployment. The insights and lessons from this deployment can inform the development and measurement of future Internet-scale cryptographic systems.

## Categories and Subject Descriptors
- C.2.0 [Computer Systems Organization]: Computer-Communication Networks - Security and Protection
- C.2.3 [Computer Systems Organization]: Computer-Communication Networks - Network Monitoring
- C.4 [Computer Systems Organization]: Performance of Systems

## General Terms
- Management, Measurement, Security

## Permission
Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. To copy otherwise, to republish, to post on servers, or to redistribute to lists, requires prior specific permission and/or a fee.

IMC'08, October 20–22, 2008, Vouliagmeni, Greece.
Copyright 2008 ACM 978-1-60558-334-1/08/10 ...$5.00.

## Keywords
DNSSEC, Measurement, Internet-Scale Security, Metrics

## 1. Introduction
Security is a fundamental challenge facing the Internet today, and cryptographic technologies are widely viewed as powerful tools for addressing these challenges. Over the past several years, there have been numerous efforts to retrofit existing protocols with cryptographic protection. A clear lesson from these efforts is that adding cryptographic protection to existing systems, especially at an Internet scale, is difficult. This is particularly true for large, decentralized systems where components belong to many independent administrative authorities.

In this paper, we examine the DNS Security Extensions (DNSSEC). The DNSSEC protocol set is considered mature, and global deployment efforts started a few years ago. Our SecSpider monitoring project has been tracking DNSSEC deployment since its rollout. Our public site tracks the number of secured DNS zones from diverse locations globally, allowing users to determine if a zone has enabled DNSSEC and to track operational decisions such as public key choices and signature lifetimes. Live and historical data are available.

To quantify the effectiveness of cryptographic protection and the obstacles in DNSSEC deployment, we analyze the collected data using three metrics: availability, verifiability, and validity. Our analysis reveals several challenges:
1. Middleboxes like firewalls and NATs have caused unforeseen availability problems.
2. The public-key delegation system has not evolved as hoped, leaving over 97% of DNSSEC zones isolated and unverifiable.
3. Cryptographic verification is not equivalent to validation; verified data can still be incorrect.

Our contributions include:
1. Deriving three basic metrics to quantify DNSSEC deployment effectiveness.
2. Exposing previously undocumented issues in DNSSEC deployment.
3. Demonstrating the essential role of monitoring and measurement.

The remainder of the paper is organized as follows: Section 2 discusses the general design of DNSSEC, Section 3 describes our approach to monitoring and quantifying the deployment, Section 4 presents the quantitative results, and Section 5 discusses our findings and conclusions.

## 2. Background
### 2.1. DNS Overview
The Domain Name System (DNS) maps hostnames to IP addresses and provides various mapping services. Virtually every Internet application relies on DNS lookups. DNS data is stored in Resource Records (RRs), each with an associated name, class, and type. For example, an IPv4 address for `www.ucla.edu` is stored in an RR with name `www.ucla.edu`, class `IN` (Internet), and type `A` (IPv4 address). A host with multiple IPv4 addresses will have multiple RRs. The set of all RRs with the same name, class, and type is called an RRset. DNS resolvers query for RRsets, and all DNS actions, including cryptographic signatures, apply to RRsets.

The DNS is a distributed database organized in a tree structure. At the top, the root zone delegates authority to top-level domains like `.com`, `.net`, `.org`, and `.edu`. Each domain then delegates authority to create subdomains. In the resulting DNS tree, each node corresponds to a zone, managed by a single administrative authority and served by multiple authoritative nameservers.

### 2.2. DNSSEC Overview
DNS was designed in the mid-1980s without security as a primary objective, leading to well-known vulnerabilities. DNSSEC provides a cryptographic solution. Each zone creates public/private key pairs, signs data with the private key, and stores the public key in a new type of RR called `DNSKEY`. Signatures are stored in another new type of RR called `RRSIG`. An authoritative server returns both the requested data and its associated `RRSIG` RRset. A resolver that knows the DNSKEY of the requested zone can verify the origin authenticity and integrity of the reply data. Each signature includes an expiration time to resist replay attacks.

To authenticate the DNSKEY for a given zone, the resolver needs to construct a chain of trust following the DNS hierarchy from a trusted root zone key down to the key of the zone in question. Ideally, the public key of the DNS root zone would be obtained offline and stored at the resolver, enabling it to authenticate the public key of the next level, and so on.

There are two main challenges in building the chain of trust:
1. A parent zone must encode the authentication of each child zone's public key in the DNS. This is done by creating and signing a Delegation Signer (DS) RR that corresponds to a `DNSKEY` RR at the child zone. The child zone must request an update to the DS RR whenever its `DNSKEY` changes.
2. Parent and child zones belong to different administrative authorities, leading to potential mismatches in DNSSEC deployment. If the parent zone is not signed, the child zone's key becomes an isolated trust anchor, requiring secure offline key management.

### 2.3. Secure Resolution Procedure
Algorithm 1 outlines the resolution process for DNSSEC resolvers. Table 1 summarizes the notations used in describing a secure zone.

## 3. Monitoring and Measurement
[Content to be added here]