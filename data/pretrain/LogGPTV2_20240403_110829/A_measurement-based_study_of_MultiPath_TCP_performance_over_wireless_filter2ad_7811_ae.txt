# Out-of-Order Delay with Log Scale (Milliseconds)

| 500 | 1000 |
| --- | --- |
| 50 | 100 |
| 5 | 10 |

**Table 6: Statistics on MPTCP RTT (flow mean ± standard errors) and out-of-order (OFO) delay (connection mean ± standard errors) over different carriers.**

| File Size | AT&T | Verizon | Sprint | WiFi |
| --- | --- | --- | --- | --- |
| 4 MB | 110.0±6.7 | 228.0±26.9 | 202.9±14.4 | 102.0±6.4 |
| 8 MB | 399.2±46.1 | 262.5±24.6 | 114.1±7.5 | 360.4±44.3 |
| 16 MB | 480.4±40.6 | 99.6±6.5 | 296.1±31.7 | 346.2±28.1 |
| 32 MB | 56.2±6.7 | 43.4±6.4 | 29.4±7.5 | 30.0±6.5 |

**OFO (ms)**

| File Size | AT&T | Verizon | Sprint |
| --- | --- | --- | --- |
| 4 MB | 30.9±3.2 | 36.7±5.6 | 91.3±12.6 |
| 8 MB | 26.8±4.0 | 67.7±11.7 | 126.9±29.9 |
| 16 MB | 16.7±1.4 | 61.3±12.9 | 301.7±44.3 |
| 32 MB | 13.1±1.6 | 50.2±8.9 | 204.5±29.8 |

**Figure 13: Out-of-order delay distributions of MPTCP connections using WiFi and one of the three cellular paths.**

### Observations
When packets are received from the slow path (in this case, the cellular network), MPTCP with Sprint 3G exhibits a different pattern. Specifically, 75% of the packets are out-of-order when they arrive at the receive buffer. While out-of-order delay may not significantly impact web browsing, it is critical for real-time traffic. For example, in FaceTime or Skype, the maximum tolerable end-to-end latency is approximately 150 ms (one-way network delay plus out-of-order delay). In our observations, more than 20% of the packets have an out-of-order delay exceeding 150 ms, even without including the one-way network delay. Given that Sprint 3G’s average RTT is about 200 ms, if we consider the one-way delay to be half of the RTT, the overall end-to-end delay (prior to being available to the associated application) is (200/2) + 100 = 200 ms, which exceeds the tolerance of most modern real-time applications.

## 6. Discussion

With mobile devices and smartphones now equipped with dual interfaces (WiFi and 3G/4G), they provide natural platforms for MPTCP. We have demonstrated the applicability of MPTCP for mobile devices with multiple available paths, showing its performance in file transfers ranging from 8 KB to 32 MB.

Web traffic constitutes a significant portion of today’s Internet traffic [4, 20], and cellular networks have experienced substantial HTTP traffic growth from mobile devices [5]. Although most web traffic to mobile devices consists of flows smaller than 1 MB to 2 MB [6], online video streaming is the primary contributor to mobile device traffic [5], often involving large single-object downloads.

A previous study [27] indicates that modern online video streaming applications, such as YouTube or Netflix, typically begin with a prefetching/buffering phase involving a large data download, followed by periodic smaller data downloads. Table 7 summarizes our measurements on two popular mobile devices when playing Netflix movies. YouTube, in general, prefetches less aggressively, downloading 10 MB to 15 MB and transferring blocks periodically of size 64 KB and 512 KB.

**Table 7: Summary of Netflix Video Streaming**

| Device | Prefetch (MB) | Block (MB) | Period (sec) |
| --- | --- | --- | --- |
| Android | 40.6±0.9 | 5.2±0.2 | 72.0±10.1 |
| iPad | 15.0±2.6 | 1.8±0.5 | 10.2±2.7 |

Our MPTCP measurements highlight its potential for both web browsing and online video streaming. Small flow measurements demonstrate the utility of MPTCP for conventional web object downloads. Small flows benefit from MPTCP's multiple slow starts and the use of multiple flows. For very small files (e.g., 8 KB or 16 KB), fewer than a dozen packets are required, which can be easily transmitted within one or two RTTs. In such cases, MPTCP behaves like single-path TCP without harming other TCP users.

In the future, when online video streaming servers are MPTCP-capable, our measurements will provide insights into how well long prefetching processes and short periodic transfers can be achieved, potentially reducing download times and improving user experience.

In the context of mobility, single-path TCP requires users to switch IP addresses when moving between access points, leading to stalled or reset connections and wasted data. MPTCP, however, leverages multiple paths simultaneously, performs traffic offloading, and provides robust data transport in dynamic environments without wasting bandwidth in reset connections.

An alternative to MPTCP is to identify the best network among all available ones and maintain a single flow over that network. However, this approach is challenging due to the variability in loss rates and RTTs, and the lack of a priori information. MPTCP, on the other hand, dynamically balances congestion across different paths and uses the best path without requiring advance information.

Finally, while MPTCP offers benefits, it also incurs additional energy costs by activating and using an additional cellular path. We have ported the current Linux MPTCP kernel to Android phones to better understand the relationship between MPTCP performance and energy consumption. This remains an area for future work.

## 7. Related Work

MPTCP is an extension to regular TCP, allowing users to spread their traffic across potentially disjoint paths [8]. The design of MPTCP was inspired by early work by Han et al. [10] and Kelly & Voice [16], who developed theoretically grounded controllers for multipath transport protocols. Recent studies have discussed performance issues with current MPTCP implementations, leading to several changes in the congestion controller [14, 19, 32] to improve fairness and throughput.

Although MPTCP is being standardized by IETF, its performance in dynamic environments like wireless networks is not well understood. Raiciu et al. [23, 32] showed that MPTCP outperforms standard TCP in data center networks and simple wireless settings. Paasch et al. [22] studied MPTCP's performance during mobile/WiFi handover, demonstrating its ability to utilize other subflows when WiFi is disconnected but did not explore re-establishment speed. Raiciu et al. [25] also examined MPTCP in mobile scenarios, showing its superiority over standard TCP but not addressing full end-to-end MPTCP or delayed re-use problems.

These studies have largely ignored the effects of multi-path on finite-size flows and have focused on controlled environments. In contrast, we study MPTCP performance in real-world wireless settings with background traffic, focusing on finite-size data objects that better represent real-world traffic.

## 8. Summary and Conclusion

In this paper, we reported latency measurements for different file sizes using MPTCP over WiFi and one of three cellular providers, comparing them to latencies using only WiFi or a single cellular provider. Two providers use LTE, and for these, we observed smaller latencies except for very small files. The third provider uses CDMA-based 3G technology, and we found that using WiFi significantly reduces download latency. In all cases, MPTCP generates latencies comparable to or nearly comparable to the smallest latency produced by either WiFi or cellular. We also studied the impact of load on the WiFi path, MPTCP's congestion controller design, the number of paths, and whether data flows are started simultaneously or staggered. Our results indicate that MPTCP provides robust data transport and reduces variability in download latencies.

## 9. Acknowledgements

This research was sponsored by the US Army Research Laboratory and the UK Ministry of Defense under Agreement Number W911NF-06-3-0001. The views and conclusions in this document are those of the authors and do not represent the official policies of the US Army Research Laboratory, the U.S. Government, the UK Ministry of Defense, or the UK Government. The US and UK Governments are authorized to reproduce and distribute reprints for Government purposes. This material is also based on work supported by the National Science Foundation under Grant No. CNS-1040781 and was supported in part by the EU project CHANGE (FP7-ICT-257422).

## 10. References

[1] M. Allman. Comments on bufferbloat. ACM SIGCOMM Computer Communication Review, 43(1):30–37, 2012.
[2] M. Allman, V. Paxson, and E. Blanton. RFC 5681: TCP congestion control, 2009.
[3] M. C. Chan and R. Ramjee. TCP/IP performance over 3G wireless links with rate and delay variation. Wireless Networks, 11(1-2):81–97, 2005.
[4] J. Erman, A. Gerber, M. T. Hajiaghayi, D. Pei, and O. Spatscheck. Network-aware forward caching. In Proceedings of the 18th International Conference on World Wide Web (WWW), 2009.
[5] J. Erman, A. Gerber, K. Ramadrishnan, S. Sen, and O. Spatscheck. Over the top video: the gorilla in cellular networks. In Proceedings of the 2011 ACM SIGCOMM conference on Internet Measurement Conference (IMC), 2011.
[6] H. Falaki, D. Lymberopoulos, R. Mahajan, S. Kandula, and D. Estrin. A first look at traffic on smartphones. In Proceedings of the 10th ACM SIGCOMM conference on Internet Measurement Conference (IMC), 2010.
[7] S. Floyd, J. Mahdavi, M. Mathis, and M. Podolsky. RFC 2883: An extension to the selective acknowledgement (SACK) option for TCP, 2000.
[20] G. Maier, A. Feldmann, V. Paxson, and M. Allman. On dominant characteristics of residential broadband Internet traffic. In Proceedings of the 9th ACM SIGCOMM conference on Internet Measurement Conference (IMC), 2009.
[8] A. Ford, C. Raiciu, M. Handley, and O. Bonaventure. MultiPath TCP Linux kernel implementation. RFC 6824: TCP extensions for multipath operation with multiple addresses, 2013.
[9] J. Gettys and K. Nichols. Bufferbloat: Dark buffers in the Internet. Communications of the ACM, 55(1):57–65, 2012.
[10] H. Han, S. Shakkottai, C. V. Hollot, R. Srikant, and D. Towsley. Multi-path TCP: A joint congestion control and routing scheme to exploit path diversity in the Internet. IEEE/ACM Transactions on Networking, 14:1260–1271, December 2006.
[11] J. Huang, Q. Feng, A. Gerber, Z. M. Mao, S. Sen, and O. Spatscheck. A close examination of performance and power characteristics of 4G LTE networks. In Proceedings of the 8th International Conference on Mobile Systems, Applications, and Services (MobiSys), 2012.
[12] J. Huang, Q. Xu, B. Tiwana, Z. M. Mao, M. Zhang, and P. Bahl. Anatomizing application performance differences on smartphones. In Proceedings of the 8th international Conference on Mobile Systems, Applications, and Services (MobiSys), 2010.
[13] P. Hurtig and A. Brunstrom. Enhanced metric caching for short TCP flows. In Proceedings of IEEE International Conference on Communications (ICC), 2012.
http://mptcp.info.ucl.ac.be/.
[22] C. Paasch, G. Detal, F. Duchene, C. Raiciu, and O. Bonaventure. Exploring mobile/WiFi handover with multipath TCP. In Proceedings of ACM SIGCOMM Workshop on Cellular Networks (CellNet), 2012.
[23] C. Raiciu, S. Barre, C. Pluntke, A. Greenhalgh, D. Wischik, and M. Handley. Improving datacenter performance and robustness with multipath TCP. In ACM SIGCOMM Computer Communication Review, volume 41, pages 266–277, 2011.
[24] C. Raiciu, M. Handly, and D. Wischik. RFC 6356: Coupled congestion control for multipath transport protocols, 2011.
[25] C. Raiciu, D. Niculescu, M. Bagnulo, and M. J. Handley. Opportunistic mobility with multipath TCP. In Proceedings of the 6th ACM Workshop on Mobility in the Evolving Internet Architecture (MobiArch), 2011.
[26] C. Raiciu, C. Paasch, S. Barre, A. Ford, M. Honda, F. Duchene, O. Bonaventure, and M. Handley. How hard can it be? Designing and implementing a deployable multipath TCP. In Proceedings of the 9th USENIX Conference on Networked Systems Design and Implementation (NSDI), 2012.
[14] B. Jiang, Y. Cai, and D. Towsley. On the resource utilization and traffic distribution of multipath transmission control. Perform. Eval., 68(11):1175–1192, Nov. 2011.
[15] H. Jiang, Y. Wang, K. Lee, and I. Rhee. Tackling bufferbloat in 3G/4G networks. In Proceedings of the 2012 ACM SIGCOMM conference on Internet Measurement Conference (IMC), 2012.
[16] F. Kelly and T. Voice. Stability of end-to-end algorithms for joint routing and rate control. SIGCOMM Computer Communications Review, 35(2):5–12, Apr. 2005.
[17] F. P. Kelly, A. K. Maulloo, and D. K. Tan. Rate control for communication networks: shadow prices, proportional fairness and stability. Journal of the Operational Research society, 49(3):237–252, 1998.
[18] P. Key, L. Massoulié, and D. Towsley. Combining multipath routing and congestion control for robustness. In Proceedings of the 40th IEEE Conference on Information Sciences and Systems (CISS), 2006.
[19] R. Khalili, N. Gast, M. Popovic, U. Upadhyay, and J.-Y. Le Boudec. MPTCP is not Pareto-optimal: Performance issues and a possible solution. In Proceedings of the 8th International Conference on Emerging Networking Experiments and Technologies (CoNEXT), 2012.
[27] A. Rao, A. Legout, Y.-s. Lim, D. Towsley, C. Barakat, and W. Dabbous. Network characteristics of video streaming traffic. In Proceedings of the 7th Conference on Emerging Networking Experiments and Technologies (CoNEXT), 2011.
[28] P. Sarolahti and A. Kuznetsov. Congestion control in Linux TCP. In Proceedings of the USENIX Annual Technical Conference (ATC), 2002.
[29] V. Shrivastava, S. Rayanchu, J. Yoonj, and S. Banerjee. 802.11n under the microscope. In Proceedings of the 8th ACM SIGCOMM conference on Internet Measurement Conference (IMC), 2008.
[30] tcpdump. http://www.tcpdump.org.
[31] tcptrace. http://www.tcptrace.org.
[32] D. Wischik, C. Raiciu, A. Greenhalgh, and M. Handley. Design, implementation and evaluation of congestion control for multipath TCP. In Proceedings of the 8th USENIX conference on Networked Systems Design and Implementation (NSDI), 2011.