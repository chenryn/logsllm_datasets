以下是优化后的文本，使其更加清晰、连贯和专业：

---

## 第23页
### 第一章 超经典MySQL练习50题
#### Python数据之道

**查询同时修过课程01和02的学生信息：**

```sql
-- 通过自连接查询的语句如下：
SELECT s2.s_id 
FROM Score s2
JOIN Score s3 ON s2.s_id = s3.s_id
WHERE s2.c_id = '01' AND s3.c_id = '02';

-- 查询出学号后再匹配出学生信息：
SELECT * 
FROM Student s1
WHERE s1.s_id IN (
    SELECT s2.s_id 
    FROM Score s2
    JOIN Score s3 ON s2.s_id = s3.s_id
    WHERE s2.c_id = '01' AND s3.c_id = '02'
);
```

**结果：**
| s_id | s_name | s_birth   | s_sex |
|------|--------|-----------|-------|
| 01   | 赵雷   | 1990-01-01| 男    |
| 02   | 钱电   | 1990-12-21| 男    |
| 03   | 孙风   | 1990-05-20| 男    |
| 04   | 李云   | 1990-08-06| 男    |
| 05   | 周梅   | 1991-12-01| 女    |

**另一种实现方法：**

```sql
-- 通过where语句实现：
SELECT s1.* 
FROM Student s1, Score s2, Score s3
WHERE s1.s_id = s2.s_id 
  AND s1.s_id = s3.s_id 
  AND s2.c_id = '01' 
  AND s3.c_id = '02';
```

**结果：**
| s_id | s_name | s_birth   | s_sex |
|------|--------|-----------|-------|
| 01   | 赵雷   | 1990-01-01| 男    |
| 02   | 钱电   | 1990-12-21| 男    |
| 03   | 孙风   | 1990-05-20| 男    |
| 04   | 李云   | 1990-08-06| 男    |
| 05   | 周梅   | 1991-12-01| 女    |

**第三种实现方法：**

```sql
-- 方法3的实现：
SELECT * 
FROM Student
WHERE s_id IN (
    SELECT sc1.s_id
    FROM (SELECT * FROM Score s1 WHERE s1.c_id = '01') sc1,
         (SELECT * FROM Score s1 WHERE s1.c_id = '02') sc2
    WHERE sc1.s_id = sc2.s_id
);
```

**结果：**
| s_id | s_name | s_birth   | s_sex |
|------|--------|-----------|-------|
| 01   | 赵雷   | 1990-01-01| 男    |
| 02   | 钱电   | 1990-12-21| 男    |
| 03   | 孙风   | 1990-05-20| 男    |
| 04   | 李云   | 1990-08-06| 男    |
| 05   | 周梅   | 1991-12-01| 女    |

---

## 第25页
### 第一章 超经典MySQL练习50题
#### Python数据之道

**查询学过01课程但没有学过02课程的学生信息：**

**题目需求：**
查询学过01课程但没有学过02课程的学生信息。

**SQL实现：**

**正确思路：**

```sql
-- 方法1：根据两种修课情况来判断
SELECT s1.*
FROM Student s1
WHERE s1.s_id IN (SELECT s_id FROM Score WHERE c_id = '01')
  AND s1.s_id NOT IN (SELECT s_id FROM Score WHERE c_id = '02');
```

**结果：**
| s_id | s_name | s_birth   | s_sex |
|------|--------|-----------|-------|
| 06   | 吴兰   | 1992-03-01| 女    |

**另一种实现方法：**

```sql
-- 方法2：先把06号学生找出来
SELECT * 
FROM Student 
WHERE s_id IN (
    SELECT s_id 
    FROM Score 
    WHERE c_id = '01' 
      AND s_id NOT IN (SELECT s_id FROM Score WHERE c_id = '02')
);
```

**结果：**
| s_id | s_name | s_birth   | s_sex |
|------|--------|-----------|-------|
| 06   | 吴兰   | 1992-03-01| 女    |

---

## 第30页
### 第一章 超经典MySQL练习50题
#### Python数据之道

**查询没有学完全部课程的同学的信息：**

**题目需求：**
查询没有学完全部课程的同学的信息。

**SQL实现：**

```sql
-- 自己的方法
SELECT *
FROM Student
WHERE s_id NOT IN (
    SELECT s_id 
    FROM (
        SELECT s_id, COUNT(s_id) AS number
        FROM Score
        GROUP BY s_id
    ) s
    WHERE number = (SELECT MAX(number) FROM (SELECT s_id, COUNT(s_id) AS number FROM Score GROUP BY s_id) t)
);

-- 改进后的方法
SELECT s.*
FROM Student s
WHERE s_id NOT IN (
    SELECT s_id
    FROM Score s1
    GROUP BY s_id
    HAVING COUNT(*) = (SELECT COUNT(*) FROM Course)
);
```

**结果：**
| s_id | s_name | s_birth   | s_sex |
|------|--------|-----------|-------|
| 05   | 周梅   | 1991-12-01| 女    |
| 06   | 吴兰   | 1992-03-01| 女    |
| 07   | 郑竹   | 1989-07-02| 女    |
| 08   | 王菊   | 1990-01-20| 女    |

---

## 第33页
### 第一章 超经典MySQL练习50题
#### Python数据之道

**查询和01同学学习的课程完全相同的同学的信息：**

**题目需求：**
查询和01同学学习的课程完全相同的同学的信息。

**SQL实现：**

```sql
-- 自己的方法
SELECT *
FROM Student
WHERE s_id IN (
    SELECT DISTINCT s_id
    FROM Score
    WHERE c_id IN (
        SELECT c_id
        FROM Score
        WHERE s_id = '01'
    )
    AND s_id != '01'
);
```

**结果：**
| s_id | s_name | s_birth   | s_sex |
|------|--------|-----------|-------|
| 02   | 钱电   | 1990-12-21| 男    |
| 03   | 孙风   | 1990-05-20| 男    |
| 04   | 李云   | 1990-08-06| 男    |
| 05   | 周梅   | 1991-12-01| 女    |
| 06   | 吴兰   | 1992-03-01| 女    |
| 07   | 郑竹   | 1989-07-02| 女    |

---

希望这些优化后的文本能更好地帮助你理解和使用SQL查询。