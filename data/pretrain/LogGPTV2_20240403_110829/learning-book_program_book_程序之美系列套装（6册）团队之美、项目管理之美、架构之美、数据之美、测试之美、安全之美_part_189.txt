原则与特性
结构
√功能多样性
√模块
V概念完整性
V依赖关系
V修改独立性
V进程
√自动传播
√数据访问
可构建性
V增长适应性
V煸增抵抗力
架构不是什么新东西。真实的建筑架构已经存在了几千年，一些最
漂亮的建筑架构也已经存在了几千年。当然，计算机还没有存在这
么久，但是，过去也有许多漂亮架构的例子。正如建筑一样，风格
并不总是保持不变，本章将讲述这样一个架构并探讨它为什么几乎
没有影响力。
Guardian是Tandem的容错“NonStop”系列计算机的操作系统。它设计
成与硬件并行以便用最小的开销提供容错性。
1066
---
## Page 1068
本章将讲述最初的Tandem机器，它设计于1974年—1976年，发行于
1976年—1982年。它最初称为"Tandem/16”，但是在"NonStopIr"成
功之后，它重命名为"NonStopI"。Tandem经常把术语"T/16"使用在
系统和随后的架构上。
我从1977年到1991年一直专门从事与Tandem的硬件相关的工作。与
Tandem机器打交道既令人愉快文不寻常。在本章中，我很乐意地回
顾程序员对这种机器的一些感觉。T/16是一种容错的机器，但是，
这不是它唯一的特性，在本章的讨论中，我会提到许多与容错没有
直接关系的方面一实际上，会降低容错性！所以，请准备回到过
去，回到1980年，从Tandem的一个市场口号开始。
8.1Tandem/16，将来所有的计算机都会像这样构建
Tandem把计算机描述成有多个处理器的单独的计算机，但是，从21
世纪的观点来看，它们更像是与单个计算机一样运行的计算机网
络。尤其是每个处理器都几乎完全不依赖其他处理器而独立地工
作，而系统可以从任何单个组件（包括处理器）的故障中恢复。和
传统联网的处理器最大的区别是整个系统都从单个内核映像开始运
行。
8.2硬件
Tandem的硬件设计成不可能存在"单个故障点”（singlepointof
failure）：系统、硬件或软件的任何一个组件都可以出故障而不引
起整个系统出故障。它设计成优雅降级（gracefuldegradation）。在
大多数情况下，尽管系统有多个故障，但总体上还能继续运行，虽
然这很大程度上依赖个别故障的种类。
这种架构的首要含义是每种组件都必须至少有两个，以防一个发生
故障。这意味着系统至少需要两个CPU。
但是，CPU之间应该怎样连接呢？一贯的传统方法是CPU通过共享
内存进行通信。在Tandem中，我们称之为紧耦合多处理器（tightly
coupled multiprocessor）。但是，如果处理器共享内存，那么，内存
就成了单个故障点。
从理论上来说，双重内存是可能的（实际上，随后的Tandem架构做
到了这一点），但是，这样做非常昂贵，而且，这样做造成了重大
的同步问题。Tandem改为在硬件级别选择一对高速并行总线一处理
1067
---
## Page 1069
器间总线（interprocessorbus,IPB），有时候这也称为Dynabus，它
在分开的CPU之间传输数据。有时候这种架构称为松耦合多处理器
(loosely coupled multiprocessor）。
当然，一台计算机不仅仅有CPU。I/O系统和数据存储也非常重要。
在这里，基本的方式也是进行硬件备份，后面将深入讲解。
最终的架构看起来有点像图8-1，这就是所谓的Mackie图，是以
Tandem的副总裁DaveMackie命名的。
这很容易导致一个系统的并销加倍（甚至更大），照“热备份”系统
现在的样子，一个组件的存在只是为了等待它的伙伴出故障。
Tandem对比较昂贵的组件（例如CPU）采用不同的方式。在T/16
中，每个CPU都是活跃的，而不是为操作系统进程提供热备份功
能。
图8-1：Mackie图
1068
---
## Page 1070
处理器间总线
处理
处理
0
器1
控制器
磁盘控制器
SSYSTEM
SDATA
磁盘控制器
/O总线
1/O总线
8.2.1诊断
当一个组件出故障的时候操作系统必须能够察觉。在许多情况下，
这勿庸置疑：如果系统出现灾难性的故障，它会完全停止响应。但
是，在另一些情况下，一个出故障的组件会继续运行，只是会产生
不正确的结果。
Tandem对这个问题的解决方案既不优雅也不高效。这个软件设计成
多疑的，最初的建议是：如果有些东西发生了故障，那么操作系统
就停止这个CPU一由另一个CPU来接管工作。如果磁盘控制器返回
个无效的状态，那么它会被中止一另一个会不间断地继续处理。
但是，如果故障很微小，它就可以继续运行而不被察觉，在极少的
情况下会导致数据异常。
1069
---
## Page 1071
这样判断CPU出故障当然还不够：其他CPU必须发觉它已经出故障
了。这里的解决方案是Watchdog。每个CPU每隔1.2秒在双方的总线
上广播一个信息，即所谓的“我还活着”的信息。如果一个CPU连续
两次没有收到另一个CPU的“我还活着”的信息，它会假定那个CPU
出故障了。如果这两个CPU共享了资源（进程或I/O），那么，探测
到这个故障的CPU会接管这些资源。
8.2.2修复
让一个有缺陷的组件离线还不够；为了保持容错性和性能，它必须
尽可能快地恢复（“起来”），而且，当然不能引起其他组件离线
（“倒下去"）。
如何实现这一点取决于组件和故障的类型。如果操作系统在一个
CPU中崩溃了（可能是故意的），它可以在线重启（“重新载
入”）。重启一个系统的标准方式是先从磁盘启动一个处理器，然
后通过IPB启动其他处理器。出故障的处理器也会通过IPB重新启
动。
另一方面，如果硬件出现故障，那么就必须替换它。所有的系统组
件都是可热插拔的：它们可以在系统运行的时候移除并替换。如果
一个CPU因为硬件问题而出故障，那就会换一块合适的电路板，然
后该CPU会如前所述通过总线重新启动。
8.3物理布局
系统设计成包含尽可能少的电路板，所以，所有的电路板都非常
大，大概是边长为50厘米的正方形。所有的电路板都用低功耗的肖
特基TTL逻辑。
CPU由两块电路板组成，分别为处理器和MEMPPU。MEMPPU包含
了与内存（包括虚拟内存逻辑）的接口和与I/O总线的接口。T/16最
多可以配置512KW（1MB）的半导体内存或256KW的核心内存。内
存板有三个尺寸：32kW核心内存、96KW半导体内存及192KW半导
体内存。这意味着用完全组装的板没有办法得到精确的1MB半导体
内存。核心内存有奇偶校验码保护，而半导体内存有ECC保护，它
可以纠正一位的错误和发现两位的错误。
处理器机柜大概有6英尺高，可以容纳4个带半导体内存的CPU或4个
带核心内存的CPU。这些处理器放置在机柜的顶部，I/O控制器放在
1070
---
## Page 1072
下面相邻的第二个机架上。在那下面是风扇，而在机柜底部有电
池，在电源出故障时可以保持内存中的内容。
大多数结构还有另一个用来放置磁带机的机柜。磁带机是独立式的
14英寸的部件。还有一个系统控制台，一个DECLA-36的打印终
端。
8.4处理器架构
CPU采用的是一个与Hewlett-Packard3000很相似的定制的TTL设
计。它拥有一个2KB页面大小的虚拟内存、一个基于栈的指令集和
宽度固定为16位的指令。原始的处理器速度大约为每个处理器
0.8MIPS，一个配置满16个处理器的系统的速度达到13MIPS。
8.4.1内存寻址
T/16是16位的机器，它的地址空间的宽度限制为16位。即使在20世
纪70年代后期，这也开始成为一个问题，Tandem通过在任何时候都
提供4个地址空间来解决这个问题：
用卢代码
地址空间包含了可执行的代码。它是只读的，而且可以在所有使用
它的进程之间共享。由于这个架构（为每个CPU分隔内存），这个
代码只能分配给特定的某个CPU。
用户数据
用户进程的数据空间。
系统代码
内核的代码。
系统数据
内核的数据空间。
有一个例外：在任何时候只有一个数据空间和一个代码空间可以访
问。它们在环境寄存器（EnvironmentRegister）中指定，环境寄存
器包含了许多描述CPU当前状态的标记，如图8-2所示。
1071
---
## Page 1073
Eregister
9101112131415
privSDSCtrapKvNz
RP
寄存器栈指针
算术运算的结果为零
算术运算结果的负值
溢出的算术运算
（tran）（
在系统代码空间中运行
在系统数据空间中运行
允许有特权的操作和内存存取
图8-2：环境寄存器
SD位确定数据空间，SC位确定代码空间。SG相关的寻址模式是这
个规则（总是在系统数据中寻址）的一个例外。
为了保持可靠性和数据完整性，环境寄存器中的陷阱（trap）位和
其他的位一起能够捕获运算溢出。这样就有了不设置条件代码的运
算指令的“逻辑”等价物。
CPU拥有由两个寄存器（S寄存器或栈指针，以及L寄存器）寻址的
一个硬件栈。L寄存器指向当前的栈顿（stackframe）。L寄存器是