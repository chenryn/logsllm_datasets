respectively 21.4% of the whole trace. In Fig. 2a we aggregated all such traﬃc
to ‘Java RMI’. Beyond, we see also known Internet protocols such as HTTPS
between two servers and SMB for ﬁle servers.
Takeaway. Unlike ﬁndings in related works that suggest the presence of only a
single protocol in ICS networks, depending on the level, ICS networks can feature
richer application mixes comprised of multiple protocols. In terms of protocol
complexity, ICS networks at higher layers are thus comparable to typical LANs
rather than single protocol networks.
Lights on Power Plant Control Networks
477
Bugs Can Skew the Traﬃc Mix. We further observe an unexpected high
amount of 68–75% of UDP-based traﬃc at all levels in this trace. So what is
the reason of this? To answer this question we evaluated the application mix
and ﬁnd SNMP to create the high share of UDP traﬃc. We have consulted the
power plant operator and ﬁgured out that this is a bug in the control system that
unnecessarily pulls status information from network devices. It does not aﬀect
the operation of the plant, but disturbs the monitoring of the network compo-
nents. While similar skews in traﬃc are normal in Internet-type applications that
get updated often, infrastructure in power plants is typically static, remains in
operation for years, and can only be updated during few maintenance windows.
Thus changes in the traﬃc composition can alter network dimensioning and thus
might night to be incorporated when simulating networks for planning.
Encryption is Uncommon. We observed very little encrypted traﬃc. The
encrypted traﬃc on port 443 with a share of 12.8% (shown as HTTPS in the
plot) was seen only between two pairs of servers in the supervisory level of Power
Plant 1. Hence, we observed that encrypted traﬃc is uncommon, which is in line
with similar observations made in other industrial settings [4,13].
4.2 The Application Mix Diﬀers by Power Plant/Vendor
Is the application mix comparable between the diﬀerent power plants? That is,
given that it is challenging to obtain traﬃc traces from operational power plants,
would it suﬃce to measure one plant and then generalize? We next answer this
question by comparing the application mix for the diﬀerent power plants.
2072
9,2 %
NFS
6,2 %
4241
6 %
2001
SMB
other
5,1 %
ICS 3
65,0 %
ICS 3
29,2 %
X11 
9,3 %
ICS 4
61,5 %
(a) Power Plant 2
(b) Power Plant 3
Fig. 3. Application mix of Power Plant 2 and Power Plant 3
Power Plants with Diﬀerent Vendor Control Systems. We begin by com-
paring the application mix for power plants with diﬀerent control systems. In
our case, the control system of power Plant 1 is by a diﬀerent vendor than power
Plant 2 and 3. In this power plants we have a slightly other network architec-
ture, where supervisory and control level networks are merged. We remark that
478
S. Mehner et al.
the operators of that power plants only enabled traﬃc captures at one vantage
point. In direct comparison of the port-based application mix (see Fig. 3), we
observe diﬀerent port ranges and number of ports used. At the supervisory level
at Plant 1, there is essentially Java RMI traﬃc running over ports 50000, 50001,
etc. At the control level, there are three proprietary ICS protocols that commu-
nicate over many ports and represent the largest share of the communication.
In contrast, in power plants 2 and 3 we see fewer actively used ports. The (ICS)
application protocols also always use the same port number. Further, we see
remote procedure call realizations in traﬃc of both power plant types. Other
application-level characteristics diﬀer. That means, that the port-based applica-
tion mix diﬀers between power plants that run diﬀerent control systems. This
can be explained by the vendor-driven diﬀerent design of control systems which
usually incorporates at least one vendor-speciﬁc protocol whose associated port
number(s) individualize the app mix.
Power Plants with the Same Vendor Control System. Does running
a control system by the same vendor yield comparable application mixes? To
answer this question, we compare the application mix of Power Plant 2 and
3—both running a control system from the same vendor. Both plants show a
signiﬁcant share of proprietary TCP-based traﬃc on port 2010 with 65% respec-
tively 29%. We call this protocol ICS 3 in Fig. 3. The largest share at Plant 3,
however, is on port 2000 (named ICS 4 in the plot). After consultation with the
operator of Plant 2, the ICS 4 protocol is also in use, but we were unable to see it
at this VP. In contrast to Plant 2 we also see 9% X11 traﬃc in the Plant 3 trace.
Probably an engineer performed a remote session to servers due to maintenance
reasons. Beyond these dominant application ports, other port-level statistics dif-
fer. We thus conclude that the two power plants using a control system by the
same vendor oﬀer partially comparable application mixes.
5 Towards Understanding the Proprietary ICS Protocols
The ICS protocols used by the studied power plants are proprietary with no
documentation provided, not even to the operator. Our study in Sect. 4 thus
relied on a time-consuming manual payload inspection. We therefore now ask
if the protocols and their characteristics can be identiﬁed purely by statistical
means without any a-prior knowledge. We exemplify this study on the control
level of Plant 1.
5.1 Clustering Communication by Packet Payload Diﬀerences
The payload of a typical ICS protocol mainly consists of few message types and
physical (actuator or sensor) values within a well-deﬁned range. Additionally, the
nature of automated control loops tendentially lead to recurring physical values
transmitted in the payload, generally as well as for each respective protocol.
Consequently, it should be possible to identify packets encapsulating the same
protocol by comparatively high similarity in the respective payloads.
Lights on Power Plant Control Networks
479
Approach. We measure diﬀerences in packet-level payload by the Levenshtein
ratio, which computes the similarity of two binary strings between 0 and 1. To
showcase our approach, we extract the payload from the ﬁrst 10,000 packets
for every destination port of interest. Then, using the Levenshtein distance, we
compute the similarity for each pair of all packets for every two ports. Finally,
we derive the minimum, average, and maximum similarity for every port pair,
which is visualized in a heat map as shown in Fig. 4.
Payload Clustering Can Trace Protocols Well. Our analysis reveals that
the TCP port ranges 1487 to 3137 and 42239 to 44061 are addressed by commu-
nications with highly similar payload (average Levenshtein ratio between 40%
and 87%). We call it ICS 1. Concerning the UDP ports 10002 and 10003, which
we already know from our prior analysis using the dissector, we identiﬁed a aver-
age similarity of 74%. We call this SPPA. The port ranges 20202 to 20205 and
20301 to 20304 resulted in an average similarity of 76% and 55%, respectively.
On the contrary, e.g., the ports 20202 and 20301 only showed an average sim-
ilarity of 8%. A look into the trace revealed multicast communication, where
both of the ports are either source or destination. Hence, they are considered as
related and associated to protocol ICS 2.
Takeaway. Our payload based classiﬁcation scheme could—without any a-priori
knowledge—identify all used protocols as compared to our manual payload inspec-
tion in the previous section.
(a) average similarity
(b) maximum similarity
Fig. 4. Payload similarity of all ports (TCP and UDP) in the control level trace. The
darker the blue color, the higher the similarity of two protocols payload. (Color ﬁgure
online)
480
S. Mehner et al.
5.2 What if We Don’t Have Payload?
In public traces usually there is no payload available [12]. Hence, a relevant
question is, whether it is possible to achieve similar results by only using available
metadata like packet inter-arrival times or packet header information, such as the
payload size, the transport protocol used, or unicast/multicast communication?
This approach assumes that the same protocols behave similarly with regard to
this metadata. If this is the case, no knowledge about the protocol and no time-
consuming deep packet inspection would be necessary for a traﬃc characteristic.
As before, we compare the resulting protocol clusters to our previous study.
Approach. We employ the implicit application-level traﬃc classiﬁcation app-
roach using the packet size and the packet inter-arrival time distribution by
Trivedi et al. [16]. For both metrics, the entire range of values is divided into
50 unequal-sized bins each and normalized. We have adopted this approach and
modiﬁed it as follows: In contrast to protocols like HTTP, or FTP, industrial
protocols have rather small payloads as often only sensor measurements are
transmitted. For this reason, we have chosen other bin sizes as shown in Table 3.
The packet inter-arrival times within a ﬂow also diﬀer for industrial protocols,
since these have periodic communication with deﬁned cycles. In Table 4 we show
the bin sizes we used for our analysis. We normalized the values to the relative
share of each bin for both metrics. We consider three cases, payload length
and inter-arrival time individually and combined. Furthermore, we added two
more metrics: the transport protocol (TCP/UDP) and the communication type
(unicast/multicast). To ﬁnd similar protocol properties, we used two clustering
approaches: DBSCAN (with  = 0.3 and min samples = 3) and k-means (with
k ∈ {3..10} cluster).
Metadata Clustering Does not Identify All Protocols. Both approaches,
the payload clustering and the metadata clustering, look at the same question
from two diﬀerent perspectives. Both clustering approaches ﬁnd clusters that
successfully distinct diﬀerent protocols, but the results diﬀer slightly. In Table 5
we provide a comparison of the results. Here, the column Payload similarity
contains the results derived from the payload-based protocol clustering using
the Levenshtein ratio, which is used as ground truth, here. The port ranges
of ICS 1 protocol were clustered to two respectively three clusters. ICS 2 was
correctly clustered by DBSCAN for both metrics. In k-means, ICS 2 was in same
cluster as SPPA and DCERPC in most cases. By design DBSCAN was not able
to cluster protocols that are using only one or two port numbers, because we set
min samples = 3.
Takeaway. When payload is unavailable, metadata clustering can identify most
protocols. Compared to the payload-based identiﬁcation, yet at a lower accuracy.
6 Measuring at a Power Plant Training Facility
Traﬃc can only be captured in rare maintenance windows of operational power
plants. Consequently, we study next to what extent a training facility of a real
plant does reﬂect the traﬃc observed in the real infrastructure. We consider such
Lights on Power Plant Control Networks
481
8058
8,3 %
3144
1026
1034
9,5 %
1765
6,0 %
39246
5,2 %
SSH 
14,8 %
5010
5001
other
ICS 5
87,0 %
8888
55,1 %
COTP
100 %
(a) Supervisory Level
(b) Control Level
(c) Field Level
Fig. 5. Application mix of power plant training facility
a facility as ideal environment for generating representative normal as well as
attack traﬃc. Since this training network is not a productive network, interrup-
tions of the normal network functions do not have any consequences.
Dataset. We capture at a training facility for power plant operators that
rebuilds the automation network installed in Power Plant 1. The process control
system is of the same vendor as Plant 1, but is an older system version. It only
lacks the physical production layer which is completely simulated by software.
Further details are shown in Table 2.
Application Mix Diﬀers Substantially. Contrary to our expectations the
application mix is completely diﬀerent in both systems. At the supervisory level
there is no RPC based communication, but other TCP-based traﬃc at 10 diﬀer-
ent ports with a share of about 10% each. Using our payload based classiﬁcation
approach from Sect. 5.1 we were able to identify most of this ports to the same
protocol, which we will call ICS 5 in Fig. 5a. The major part of the control level
traﬃc consists of one ﬂow on port 8888. Apart from this we see some other pro-
prietary traﬃc and SSH communication. Obviously the current system version
as used in Plant 1 is in most parts a new development. Another reason is that
the simulator acts as training facility for Plant 1 and thus tries to completely
mimic the control functionality, but it doesn’t implement all the power plant
functionality. Just as on the ﬁeld level in Power Plant 1, we also see exclusively
COTP in this trace.
Takeaway. The training facility shows a completely diﬀerent protocol mix diﬀers
and it might not be suﬃcient to only capture traﬃc at simulation facilities to
understand real-world ICS networks.
7 Conclusion
Access to networks that control critical infrastructures, especially DCS, is highly
restricted and thus little is publicly know about its properties. We took the rare
opportunity to capture traﬃc traces during maintenance slots at three oper-
ational power plant sites and one training facility. Our main objective is to
provide a ﬁrst empirical perspective on these otherwise hidden networks. Unlike
482
S. Mehner et al.
prior work that studied SCADA networks, we show that DCS networks in power
plants feature a rich protocol mix that diﬀers by automation layer. Any eval-
uation (e.g., simulation) of plant network traﬃc must account for these traﬃc
mixes. We further show that the proprietary and publicly undocumented ICS
protocols used can be identiﬁed by applying statistical clustering approaches—
with and without payload. These clusterings even work in the absence of payload
by analyzing inter-arrival times and header information. We ﬁnally applied our
methods to a dataset from training facility that replicates power plant 1. Given
that measurements in operational power plants can only be conducted in rare
maintenance windows, we study if easier to access simulation facilities are an
option for measurements. We observe that the resulting application mixes diﬀer
substantially. With this paper we thus aim to shed light on a relevant but not
yet studied type of network.
Declarations
Acknowledgement. Franka Schuster acknowledges funding by the German Federal
Ministry of Education and Research (BMBF) grant WAIKIKI (funding reference num-
ber: 16KIS1198K).
Author contributions. This study has been solely conducted by Stefan Mehner
(main author) on a previously captured dataset as part of his PhD thesis. The study
design was developed by Stefan Mehner and Oliver Hohlfeld. All authors contributed
to the discussion and writing of the paper.
A Appendix
A.1 Power Plant Training Facility Dataset
Table 2. Dataset overview of power plant training facility
Vendor Level
Duration # packets # devices
A
Supervisory 1.1 h
Control
19 h
2.3 h
Field
4 M
20 M
1.6 M
25
28
11
A.2 Bin Sizes Used for Protocol Clustering
Table 3. Bin sizes used for the study to
divide the TCP/UDP payload
0
45
90
5
50
95
205 220
600 700
10
55
100
235
800
15
60
115
250
900
20
65
130
300
25
70
145
350
30
75
160
400
35
80
175
450
40
85
190
500
1000
1500 >1500