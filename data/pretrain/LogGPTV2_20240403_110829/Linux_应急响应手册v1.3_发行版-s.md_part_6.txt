隧道跟管子一样，两端都可以作为入口、出口，实验主机分配如下
攻击机就用我的物理机10.211.55.2
被控主机（做隧道的主机） Centos 10.211.55.11
访问受限主机 Ubuntu 10.211.55.10
本地转发隧道
检测方法
我们来看一下受控主机是否存在异常
·网络连接
(Not all processes could be identified,non-owned process info
will not be shown,you would have to be root to see it all.)
Active Internet connections (servers and established)
Proto Recv-QSend-Q Local Address
Foreign Address
State
PIO/Progrom name
tcp
0127.0.0.1:631
0.0.0.0:*
LISTEN
tcp
0127.0.0.1:25
0.0.0.0:*
LISTEN
tcp
00.0.0.0:111
0.0.0.0:*
LISTEN
tcp
00.0.0.0:22
0.0.0.0:*
LISTEN
tcp
0 10.211.55.11:22
10.211.55.2:56450
ESTABLISHED
tcp
010.211.55.11:53348
10.211.55.10:80
TIME_WAIT
tcp
010.211.55.11:22
10.211.55.2:55843
ESTABLISHED
tcp
010.211.55.11:22
10.211.55.2:55845
ESTABLISHED
tcp6
0：:1:631
LISTEN
tcp6
0：:111
LISTEN
tcp6
0：：:22
LISTEN
udp
00.0.0.0:951
0.0.0.0:*
udp
00.0.0.0:68
0.0.0.0:*
udp
00.0.0.0:111
0.0.0.0:*
dpn
00.0.0.0:5353
0.0.0.0:*
udp
0127.0.0.1:323
0.0.0.0:*
udp
00.0.0.0:55883
0.0.0.0:*
udp6
0：::951
:.:*
udp6
0：::111
udp6
0::1:323
[helper@centos-7
从流量上看多了一个攻击机连接受控主机Centos22端口的连接，同时多了一个受控主机Centos访问10.211.55.1080端口
的连接，在我们实验主机中可以清晰看出来，但是如果在实际情况中，很多业务在使用同一个主机的时候，是非常难以分辨
出这是一个SSH隧道的，所以从网络连接上辨别SSH隧道难度较大
·进程
---
## Page 50
2460 2469 2469 2469 pts/0
2658 5s
1000
0:001bash
2469
2658
2658
2469 pts/0
2658 R+
1000
0:88 /usr/sbin/sshd -D
0 : 00
\_ps afjx
25672567
25677
-1 5s
2567
25992599
2599?
-1 Ss
2599 2664 2599 2599?
00:0
\_ sshd: helper [priv]
- 1 S
1000
00:6
\_ sshd: helper
[helper@centos-7 ~]$
从进程角度来查看多了一个ssh连接进程，这个进程很可能就是有问题的了，可以联系相关主机业务人员确认
日志
使用lastb来查看异常登录日志，未发现内容
[root@centos-7 helper]# lastb
btmp begins Wed Apr 28 17:46:45 2021
[root@centos-7 helper]#
查看日志文件/var/log/secure
[root@centos-7helper]# tail /var/log/secure
Apr 28 17:46:27 centos-7 su: pan_unix(su:sess1on): session opened for user root by helper(uid=16ee)
Apr 28 17:46:51 centos-7 su:
17:47:e8 centos-7 su:
 pan_unix(su:session): session opened for user root by helper (uid=leee)
pan_unix(su:session): session closed for user root
8219
8710
17:47:22 centos-7 sshd[2604]: Received disconnect fron 10.211.55.2 port 52461:11: disconnected by user
17:47:e8 centes-7 su: pan_lastlog(suisession): corruptaon detected in /var/log/btmp
87 10
28
17:47:22 centes-7 sshd[2599]1
17:47:22 centes-7 sshd[26e4]: Disc0nnected from 19.211.55.2 port 52461
Aor
 28 17:47:29 centos-7 sshd[2931]:
pan_unix(sshd:session): session closed for user helper
Accepted password for helper from 10.211.55.2 port 54619 ssh2
Apr 28 17:47:29 centos-7 sshd[2931]:
Apr 28 17:47:29 centos-7 sshd[2931]: pam_lastlog (sshd:sess1.on): corruption detected 1n /var/log/btsp
pan_unix(sshd:session) : session opened for user helper by (uid=0)
[root@centos·7 helper]#
可以看到，存在来自攻击机（物理机10.211.55.2）的ssh认证连接
对于SSH本地转发隧道来说，执行命令是在攻击机上，所以无法通过history查到任何信息
从上面来看，主要发现SSH腿道的手段就是查看网络连接和日志，这种连接与正常的SSH连接无异，所以较难分辨
远程转发隧道
变控机,Centos 通过ssh远程连接我们的攻击机(物理机)，并且在我们攻击机上开放一个端口(80O8)，做socks隧道
反向的好处是在一些防火墙配置下，可能内网主机外联端口会有限制，这样我们通过配置攻击机SSH端口为53端口可能成功穿过
防火墙
之所以要受控主机远程连接我们物理机，是因为ssh默认配置-R参数开放端口绑定的地址是127.0.0.1而不是0.0.0.0，这就导致即
使我们正向在受控主机Centos上开了 8008 端口，我们也无法连接，所以我们采用反向的方式
检测方法：
网络连接
---
## Page 51
[root@centos-7 helper]# netstat -pantu
tccp
0 127.0.0.1:631
Foreign Address
0.0.9.0: *
State
PID/Program nate
0 127.0.8.1:25
0.0.9.0: *
LISTEN
LISTEN
1225/naster
882/cupsd
t.cp
0 0.0.0.0:111
0.0.0.0: *
LISTEN
1/systend
810.211.55.11:46280
0.0.0.0:27
10.211.55.10:80
10.0.0:
ESTABLISHED
LISTEN
2567/sshd
tcp
10.211.55.11:58514
10.211.55.2:22
ESTABLISHED
qSS/EP6E
tcp
10.211.55.11:46278
10.211.55.10:80
CLOSE WAIT
3943/ssh
10,211.55.11:46282
10,211.55.10:80
ESTABLISHED
3043/ssh
3043/ssh
tcp6
tcp
::1:631
:::*
LISTEN
882/cupsd
9d31
tcp6
0:::22
:1:111
11:*
:::*
LISTEN
LISTEN
2567/sshd
1/systend
dpn
5618°0′0′0 0
0.0.9.0 : *
780/rpcbind
dpn
udp
89:9*9*9*9 9
0 0.0.0.8:111
+:0"0′0°0
9.0.8.0: *
1/systend
1269/dhclient
udp
udp
0 0.0.0.0:5353
0 127.0.0.1:323
0.0.0.0 : *
0.0.0.0: *
835/chronyd
787/avahi -daenon: r
udp
udpt
0 9.0.0.0:48495
0.0.9.0: *
787/avahi-daemen: r
0:::953
0::111
:1:*
:1:*
788/rpcbind
9dpn
0:11:323
111*
835/chronyd
1/systend
[root(@centos-7 helper]#
9dpr
网络连接可以看出受控主机SSH远程连接我们的物理机，遇到这种情况就需要进行和主机、业务人员确认连接是否正常业务
·进程
12460
2468
1686
1686?
1686 ?
-1 st
1000
1000
θ:θ2 /usr/libexec/gnome- terminal -server
2468
2468
2469
2469
1686
2469 pts/0
3096 5s
-1 5
1600
0:00
0:06
_ bash
 gnome-pty-helper
2469
2880
2880
2469 pts/0
3096 5
3096 5
0
0:00
2469 pts/0
0:00
1_ su
0
\_ bash
6882
9666
2567
9680
2567
2469 pts/0
2567
3096 R+
-1 Ss
0:00 /usr/sbin/sshd -D
0:00
\_ ps afjx
1
1
3043
3043
3043 ?
[root@centos-7 helper]#
·1 5s
进程中可以看到我们执行的命令
·日志
[root@centos-7 helper]# history | tail
06
clear
91
ssh -fCNg -R 8008:10.211.55.10:80 helper@10.211.55.2 -p 22
Z6
pwd
6
ls
94
ls Desktop/
95
clear
96
netstat -pantu
97
ps afjx
86
history
66
history l tail
[root@centos-7 helper]#
从history中可以看到我们的连接操作，关于history的知识点可以查看善后工作中的history
动态隧道
上面的两种隧道都是仅仅转发一个IP的一个端口，对于攻击者来说，需要攻击内网的不同应用，如果每攻击一个应用就要映射一
次就太麻烦了，所以SSH提供了一种动态隧道，类似代理模式，流量发到入口，由SSHServer来判断具体是否什么协议，转发到
那台服务器
动态隧道是一种本地转发隧道，在绑定端口开一个socks4/5的代理，直接设置代理后可以访问内网主机
检测方法
我们来看一下受控主机Centos存在哪些异常
·网络连接
---
## Page 52
[helper@centos-7-]$ netstat -pantu|grep -v CLosE
(Not all processes could be identified, non-owned process info
wil1 not be shown, you would have to be
Active Internet connections (servers and established]
root to see it all.)
Proto RecvQ SendQ Local Address
Foreign Address
State
PID/Program nane
tcp
9 127.0.0.1:631
0127.0.0.1:25
8.0.0.0:*
LISTEN
LISTEN
tcp
0.0.0.0:*
tcp
90.0.0.0:111
3.8.0.8:*
d31
00.0.0.0:22
0.0.0.0:*
LISTEN
tcp
010.211.55.11:22
10.211.55.2:64378
910.211.55.11:53314
ESTABLISHED -
d33
104.21.67.72:80
ESTABLISHED -
tcp
9 18.211.55.11:37798
31.13.93.26:443
10.211.55.2:64825
FIN_WAIT2
tcp
0 10.211.55.11:22 
0 10.211.55.11:40746
10.211.55.10:80
ESTABLISHED
ESTABLISHED -
tcp6
0::1:631
:::8
LISTEN
tcp6
9：::111
LISTEN
LISTEN
tcp6
01::22
90.0.0.0:951
dpn
udp
90.0.0.0:68
*18*8*8*8
udp
0.0.0.01*
udp
9 0.6.0.0:111
00.0.0.0:5353
8.0.0.0:*
0.0.0.0:*
udp
0 0.0.0.0:41281
8.0.0.01*
udp
udp6
0 127.0.0.1:323
9:::951
8.0.0.0:*
0：::111
udp6
udp6
0：:1:323
:11*
[helper@centes7~]$
还是一样，能看到网络连接，需要与相关人员确认
·进程
1
2566
2566
2566?
-1Ss
0:0e /usr/sbin/sshd -D
2566
2794
2794
2794
？
1Ss
00:0
sshd: helper [priv]
2794
2798
2794
2794
？
1 S
1000
0:00
sshd: helper@pts/1
2798
2800
2800
2880 pts/1
2953 Ss
1000
0:00
_-bash
2800
2953
2953
2800 pts/1
2953 R+
1000
0:00
sshd:helper [priv]
\_ ps afjx
2566
2899
2899
2899
？
-1Ss
0:00
2899
2903
2899
2899
？
-1S
1000
0:00
一
sshd: helper
从进程可以看出多了一个ssh，其他没啥