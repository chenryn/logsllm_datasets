[ yes ] I've searched for any related issues and avoided creating a duplicate  
issue.  
Description  
Announcement, it's not a bug probablyã€‚
Firstly ,I run the standard wss ( ws over https server ) code by a single js
file, It worked.  
and then , I copy the same code into the electron main.js, it can't be worked.  
so ,i open wireshark to capture the package , and then I found the electron
svr send a little bytes other then never see any piece about how to handle the
upgrade handshake. :(
ps: i use the self-singed certification
Reproducible in:  
version: ws ^7.1.2  
Node.js version(s): v10.16.1  
OS version(s): osx 10.14  
Steps to reproduce:  
1.server code :  
const fs = require('fs');  
const https = require('https');  
const WebSocket = require('ws');  
const path = require('path');
const hostname = 'aaa.abc.com';  
const server = https.createServer({  
cert: fs.readFileSync(path.resolve(certs/${hostname}.crt)),  
key: fs.readFileSync(path.resolve(certs/${hostname}.key)),  
// rejectUnauthorized: false  
});  
const wss = new WebSocket.Server({ server });
wss.on('connection', function connection(ws) {  
ws.on('message', function incoming(message) {  
console.log('received: %s', message);  
});  
ws.send('something');  
});
server.listen(443,()=>{  
console.log('start svr002')  
});
client code  
ws=new WebSocket('wss://aaa.abc.com/echo',{  
rejectUnauthorized: false  
});  
ws.on('error',function (e) {  
connectFlag=false;  
console.error('error',e);  
ws=null;  
});
ws.on('close',function (e) {  
connectFlag=false;  
console.warn('close',e)  
});
ws.on('open', function open() {  
connectFlag=true;  
console.log('connected');  
ws.send('something');
ws.on('message', function incoming(data) {  
console.log(data);  
});  
});
run in single.js : yes  
node svr.js  
node cli001.js or open in ie,ff,chrome
run embed in electron : not work  
electrion .  
node cli001.js or open in ie,ff,chrome
![err](https://user-
images.githubusercontent.com/6058537/63348655-47dcc800-c38c-11e9-8a4b-14920f0a8184.jpg)