# Owning the Users with "The Middler"
**Copyright 2008 Jay Beale**

**Jay Beale**  
Co-Founder, Intelguardians  
Author, Bastille UNIX

## Talk Agenda
I am releasing "The Middler," an attack proxy tool designed to automate attacks on browsers and other HTTP-based applications. Here is the agenda for this talk:

- **The Attack Vector: Shared Networks**
- **Automatically Exploiting Mixed HTTP/HTTPS Sites (e.g., Gmail, LinkedIn, LiveJournal)**
- **Launching Non-Interactive CSRF Attacks on Online Banks**
- **Trojaning Software Installation and Updates**
- **Injecting Browser Exploits and Adding Root Certificates**
- **Protecting Yourself on Hostile LANs**

## HTTP and Shared Networks Don’t Mix
Most users frequently connect to shared networks when they are away from their homes and offices, such as in hotels, non-security conferences, coffee shops, bookstores, and airplanes. Whether these networks are wireless or wired, they expose users to constant application-level monitoring and potential attacks.

## Proxy Attacks
If we share a Local Area Network (LAN), I can view and modify all of your traffic:
- I can replace the real DHCP server, setting my laptop as your DNS, DHCP, and router.
- Alternatively, I can ARP spoof the real router and any local DNS servers.

## Mixed HTTPS/HTTP Sites are a Menace
Many companies mistakenly believe that encrypting only the password form in their applications provides sufficient security. This leaves users vulnerable to man-in-the-middle (MITM) attacks. Let's examine how LinkedIn.com operates as an example:
- Starting at `https://www.linkedin.com`, clicking "Sign In" takes you to `https://www.linkedin.com/secure/login?trk=hb_signin`.
- After signing in, you are redirected to `http://www.linkedin.com/home`.

### What if I Change the URL?
You can change the URL to `https://www.linkedin.com/home`, but clicking on any link will revert to an HTTP URL. Unless you use a modified browser or a defensive proxy, you will constantly download cleartext links. As an attacker, I can inject my own JavaScript into any of these pages.

## How Do I Attack This?
1. Direct the client to my host using DNS, DHCP, or ARP spoofing.
2. Pass the HTTPS traffic through unmodified, but:
   - Inject JavaScript into the cleartext traffic.
   - Store session keys and send parallel requests.
   - Intercept logout requests.
   - Replace HTTPS links in proxied pages with HTTP links.

I am releasing a tool, "The Middler," to automate these attacks. It features a rich plugin architecture for handling additional sites.

## DEMO: The Middler
- **Cloning Sessions**: Transparently use the same cookies and form parameters as the user.
- **JavaScript Injection**: Inject JavaScript into every HTML page.
- **Session Logging**: Log the valid user’s session.

We will demonstrate these features interactively, and then showcase site-specific capabilities with Gmail, LiveJournal, and LinkedIn.

### Demo: Gmail
Once the Gmail session moves back to cleartext, we can:
- Read the user’s email.
- Access past GoogleTalk conversations.
- Harvest the address book.
- Send emails.
- Profile the user in other Google applications.
- Prevent a real logout, presenting the user with a fake logout screen.

### Demo: LiveJournal
Once the LiveJournal session moves back to cleartext, we can:
- Read private and friends-only journal entries.
- Make private/friends-only entries public.
- Harvest the friends list and their private profiles.
- Add our own user as a friend.

### Demo: LinkedIn
Once the LinkedIn session moves back to cleartext, we can:
- Read the user’s full contact information.
- Gather full contact information for their entire network.
- Read the user’s Inbox.
- Add ourselves to their network.
- Place the user in our network.

## Start with a CSRF Attack
Imagine a non-security-savvy friend on a hotel network who types `http://www.bankofamerica.com` into their browser. The site redirects to `https://www.bankofamerica.com`, but it's already too late. A race condition allows me to serve my own `index.html` file, which reloads the page but inserts a persistent window before the redirect.

### Race Condition
```javascript
window.open("http://www.bankofamerica.com/mitm", "mitm", 'width=1,height=1,scrollbars=0,menubar=0,toolbar=0,location=0,status=0');
window.blur("mitm");
document.location.href = "https://www.bankofamerica.com";
```
While the primary browser window is no longer under my control, I can continue to serve my own version of the bank’s website and wait for the user to log in to launch CSRF attacks.

### Knowing When the User Logs In
- **Proxying Traffic**: I can monitor the user’s traffic.
- **Persistent Window**: I can read the browser history to see visited links.
- **JavaScript Injection**: If pop-blocking is enabled, I can inject JavaScript into any HTTP pages the user has open.

## Trojaning Software Installation
Many software vendors perform installations and updates over HTTP without public key verification. Your system downloads a page listing available updates, including names, versions, locations, and sometimes MD5 sums.

### DEMO: Free Software Installation
While major OS vendors generally secure their update processes, not all do. "The Middler" includes plugins to automate:
- Installer.app for the iPhone.
- MacPorts (formerly DarwinPorts).

We will demonstrate a trojan horse insertion on both an iPhone and a MacBook Pro.

## Exploiting Vulnerable Browsers
"The Middler" can also serve client-side attacks from Metasploit. By injecting JavaScript, we can refresh the current page or open a pop-under to an exploit page.

### DEMO: Exploiting a Browser
- The user surfs to a page and gets redirected to a captive portal.
- We inject JavaScript into the portal, redirecting the browser to an exploit page.

## Protecting Yourself at a Conference
To protect yourself on a shared network:
- Use your own internet connection (e.g., EVDO/CDMA, HSPDA/GSM modems).
- Set up a dynamic port forwarding SSH tunnel.
- Verify the DHCP server’s and router’s MAC and IP addresses.
- Configure your DNS servers to localhost or tunnel over SSH.
- Configure your firewall to allow outbound traffic only to the SSH tunnel host and the DHCP server.
- Set static MAC address (ARP table) entries for the DHCP server and router.

### Step 1: Dynamic SSH Port Forward
Use the following command to set up a SOCKS proxy:
```bash
ssh -C -D8000 user@server
```
Configure your network clients to use `127.0.0.1:8000` as a SOCKS5 proxy.

### Steps 2-5
- **Firewall Configuration**: Allow only specific outbound traffic.
- **Static ARP Mapping**: Use a static ARP mapping if your firewall doesn’t support this.

## The Middler
"The Middler" is an open-source attack proxy hosted at [https://www.TheMiddler.com](https://www.TheMiddler.com). Help us add more plugins!

## Questions and Speaker Bio
**Jay Beale** created two well-known security tools, Bastille UNIX and the CIS Unix Scoring Tool, used widely in industry and government. He is an invited speaker at many industry and government conferences, a columnist for Information Security Magazine, SecurityPortal, and SecurityFocus, and an author/editor of nine books, including those in his Open Source Security Series and the "Stealing the Network" series. Jay is a security consultant and managing partner at Intelguardians, where he works on topics ranging from application penetration to virtual machine escape.