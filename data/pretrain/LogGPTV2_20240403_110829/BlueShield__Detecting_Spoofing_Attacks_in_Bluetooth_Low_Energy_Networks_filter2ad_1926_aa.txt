title:BlueShield: Detecting Spoofing Attacks in Bluetooth Low Energy Networks
author:Jianliang Wu and
Yuhong Nan and
Vireshwar Kumar and
Mathias Payer and
Dongyan Xu
BlueShield: Detecting Spooﬁng Attacks in Bluetooth Low Energy Networks
Jianliang Wu1∗, Yuhong Nan1∗, Vireshwar Kumar1, Mathias Payer2, and Dongyan Xu1
{wu1220, nan1, viresh}@purdue.edu, PI:EMAIL, PI:EMAIL
1Purdue University, 2 EPFL
Abstract
Many IoT devices are equipped with Bluetooth Low Energy
(BLE) to support communication in an energy-efﬁcient man-
ner. Unfortunately, BLE is prone to spooﬁng attacks where
an attacker can impersonate a benign BLE device and feed
malicious data to its users. Defending against spooﬁng attacks
is extremely difﬁcult as security patches to mitigate them may
not be adopted across vendors promptly; not to mention the
millions of legacy BLE devices with limited I/O capabilities
that do not support ﬁrmware updates.
As a ﬁrst line of defense against spooﬁng attacks, we pro-
pose BlueShield, a legacy-friendly, non-intrusive monitoring
system. BlueShield is motivated by the observation that all
spooﬁng attacks result in anomalies in certain cyber-physical
features of the advertising packets containing the BLE de-
vice’s identity. BlueShield leverages these features to detect
anomalous packets generated by an attacker. More impor-
tantly, the unique design of BlueShield makes it robust against
an advanced attacker with the capability to mimic all features.
BlueShield can be deployed on low-cost off-the-shelf plat-
forms, and does not require any modiﬁcation in the BLE
device or its user. Our evaluation with nine common BLE
devices deployed in a real-world ofﬁce environment validates
that BlueShield can effectively detect spooﬁng attacks at a
very low false positive and false negative rate.
1 Introduction
An increasing number of IoT devices leverage Bluetooth Low
Energy (BLE) to communicate in an energy-efﬁcient manner.
As one of the most popular protocols for IoT devices (e.g.,
smart locks, smart lights, or smart thermostats) [36], BLE will
be empowering up to 5 billion devices by 2023 [4]. Given the
popularity of BLE, there is an increasing concern about its se-
curity due to the discovery of threats that enable illegal device
access, user ﬁngerprinting, and inference of the device’s sen-
sitive information [13, 20, 26, 37]. While various approaches
have been proposed to mitigate some threats [21, 33], most
of them focus on the protection of the BLE device itself, less
noticed here is the end-to-end communication between a BLE
device and a user device in the network, where a spooﬁng
attack is a major threat.
∗The two authors contributed equally.
70℉
User Device
(Smartphone)
Spoofed Temperature 
(70℉)
Attacker
Benign Temperature 
(130℉)
BLE Device
(Temperature Sensor)
Figure 1: A typical BLE spooﬁng attack scenario.
Figure 1 presents a spooﬁng attack where an attacker de-
vice impersonates a benign BLE device (e.g., a temperature
sensor) and feeds malicious data to the user device (e.g., a
smartphone). Spooﬁng attacks are becoming critical, espe-
cially given that BLE devices are now widely integrated into
security and privacy-sensitive scenarios [6, 18, 27], includ-
ing manufacturing plants, medical and health care, and even
physical-security monitoring.
The BLE speciﬁcation (p. 2798 in [5]) provides a variety of
authentication mechanisms that can potentially be employed
to prevent spooﬁng attacks. Yet in practice, these mechanisms
fail to serve their purpose due to two reasons: (1) A large pro-
portion of BLE devices are limited by their I/O capabilities,
and hence cannot employ any secure authentication mecha-
nism. Unsurprisingly, a recent study has revealed that nearly
80% of existing BLE devices communicate with their user
devices in plaintext without any authentication [30]. (2) Even
in BLE devices employing different security mechanisms,
there exist a variety of attack surfaces, at both BLE protocol-
level [49] and application-level [37], which can be exploited
by malicious attackers to launch spooﬁng attacks.
Unfortunately, deploying a software-based solution (i.e.,
ﬁrmware updating of BLE devices and software patching on
user devices) to prevent spooﬁng attacks is challenging due
to three practical challenges: (1) Software patching cannot
defend against zero-day spoof-enabling vulnerabilities [49].
(2) Firmware updates to mitigate the vulnerabilities of BLE
devices cannot be uniformly created and applied at a large
scale by the wide range of BLE device vendors [21]. (3) Even
worse, there are millions of (already deployed) legacy BLE
devices in the ﬁeld that do not support ﬁrmware updates due
to their limited I/O capabilities.
To address the aforemen-
An Out-of-the-Box Defense.
tioned challenges, we propose BlueShield, a vulnerability-
agnostic, legacy-friendly and non-intrusive monitoring system
USENIX Association
23rd International Symposium on Research in Attacks, Intrusions and Defenses    397
to protect BLE devices against spooﬁng attacks. The design
of BlueShield is motivated by the critical observation that, in a
spooﬁng attack, the attacker must broadcast advertising pack-
ets (containing the BLE device’s identity) on BLE advertising
channels to make itself discoverable by the user device. As
such, BlueShield detects the spooﬁng attack by distinguishing
the advertising packets transmitted by the attacker and the
benign BLE device.
To collect all over-the-air packets on BLE advertising chan-
nels, BlueShield sets up a monitoring infrastructure covering
the physical environment where BLE devices are deployed.
Then, BlueShield inspects a combination of cyber and phys-
ical features extracted from the advertising packets of the
target BLE device, and raises an alarm (indicating the pres-
ence of a spooﬁng attack) if it detects any anomaly. Here,
while the cyber features include the advertising pattern and
state transitions of the BLE device, the physical features in-
clude advertising interval, the RF (radio frequency) signal
frequency offset, and the RF signal strength (Section 4.1).
The effectiveness of BlueShield against spooﬁng attacks
stems from its two novel mechanisms: (1) To detect an ad-
vanced attacker, such as a software-deﬁned radio (SDR)-
enabled attacker with the capability to mimic all the physical
features, BlueShield employs a randomized channel switch-
ing mechanism (Section 4.3.1) to collect physical features of
the monitored device across different advertising channels.
This mechanism brings forth a “moving target defense” so
that the attacker cannot reliably predict and mimic the cor-
rect values of the monitored features to evade the detection.
(2) BlueShield also employs a selective inspection mechanism
(Section 4.3.2) for triggering the alarm: For each received
advertising packet, BlueShield inspects one or more of the
“physical” features which are selected based on the determined
“cyber” features of the BLE device. Then, an anomalous value
is detected by comparing the current physical feature values
with their valid ranges. This mechanism effectively mitigates
the occurrence of false alarms due to unintentional interfer-
ence in physical features, while performing in-time detection
of spooﬁng attacks with good precision. As such, the two
aforementioned mechanisms ensure that the selected features
(even individually) cannot be easily imitated or controlled
by an attacker, and hence can be utilized together to robustly
detect spooﬁng attacks.
We evaluate BlueShield on nine BLE devices (including
temperature sensors and smart locks) covering different types
of devices widely deployed in security/safety-sensitive envi-
ronments, such as smart homes, museums, and manufacturing
plants. We launch various spooﬁng attacks with different
strategies and from different locations in a real-world, noisy
ofﬁce environment. Our evaluation results demonstrate that
BlueShield can effectively detect spooﬁng attacks with an
average success rate of 99.28% on our tested BLE devices.
Moreover, even in a usage-heavy scenario BlueShield only
introduces less than one false alarm a week.
Compared with defenses in the existing literature [21, 28,
37], BlueShield provides four practical advantages: (1) Since
the monitoring infrastructure captures and analyzes all traf-
ﬁc on advertising channels, BlueShield supports concurrent
monitoring of many BLE devices. (2) BlueShield is deploy-
able in all BLE networks regardless of the capability of
the BLE device and the version of its BLE implementation.
(3) BlueShield is fully transparent to its deployed environ-
ment, i.e., it does not introduce any interference or energy
overhead to the BLE devices and user devices. (4) BlueShield
does not require any ﬁrmware modiﬁcation or reverse engi-
neering of the BLE devices or user devices.
Our major contributions are summarized as follows:
• We propose BlueShield, a generic, device-agnostic mon-
itoring framework to detect spooﬁng attacks in BLE net-
works using a novel combination of selected cyber and
physical features of the BLE devices.
• We devise a set of mechanisms to utilize the selected fea-
tures for detecting spooﬁng attacks. These mechanisms
not only ensure the robustness of BlueShield against an
advanced SDR-enabled attacker, but also provide good
effectiveness with very low false alarms.
• We have implemented BlueShield using off-the-shelf com-
ponents and thoroughly evaluated its effectiveness and
efﬁciency in a real-world environment.
2 Background and Motivation
2.1 BLE Basics
BLE is typically deployed in a network that requires an
energy-constrained low-cost device (e.g., temperature sensor)
to record an attribute/data value (temperature) and commu-
nicate the data to a user device (e.g., smartphone) over the
wireless medium. In BLE, three radio frequency (RF) chan-
nels (channel-37, channel-38, and channel-39) are utilized
for advertising and initializing the connection with the user
device and are called advertising channels. The other chan-
nels are utilized for communicating data and are called data
channels. The typical communication procedure between the
BLE device and the user device can be broadly classiﬁed into
four steps: advertising, connecting, pairing, and accessing.
Advertising. The BLE device publicizes its presence and fa-
cilitates its discovery by periodically broadcasting advertising
packets on the three advertising channels. Each advertising
packet contains a unique identiﬁer of the BLE device and the
information about services provided by it.
Connecting. The user device scans the three advertising
channels and discovers the BLE device using its advertising
packet. If the user device intends to establish a connection,
it sends a connection request packet. If the BLE device ac-
cepts the connection, the BLE device and the user device
start communication at data channels. We note that during
398    23rd International Symposium on Research in Attacks, Intrusions and Defenses
USENIX Association
the connection state, most of the BLE devices stop public
advertising and communicate only with the connected user
devices. However, some BLE devices may keep advertising
even during the connection state.
Pairing. The BLE speciﬁcation provides multiple pairing
methods to establish a secure channel for communication.
Through the pairing procedure, the BLE device and the user
device can generate a shared key that can be utilized for
encryption and authentication of the communicated payloads.
Accessing. After establishing the connection in each session,
the user device utilizes services provided by the BLE device
by accessing corresponding data values, e.g., a temperature
value provided by a smart temperature sensor.
2.2 Spooﬁng Attacks in BLE Networks
Reasons for Successful Spooﬁng Attacks. Recent studies
have revealed that BLE networks expose various attack sur-
faces that can be exploited by an adversary to launch spooﬁng
attacks [2, 33, 37, 46, 47]. Since around 80% of BLE devices
do not perform secure pairing and communicate data without
employing a secure authentication mechanism [30], they are
vulnerable to spooﬁng attacks. Even for the remaining devices
that employ authentication mechanisms after pairing securely,
there exist zero-day vulnerabilities across different layers of
the BLE stack due to ﬂaws in the design and implementation
of the BLE speciﬁcation [1, 2, 46, 47]. All such vulnerabilities
can be easily exploited by the attackers to perform spooﬁng at-
tacks against authentication-enabled devices. In fact, we have
also discovered a protocol-level spoof-enabling vulnerability
that affects major platforms running the most recent version
of iOS and Android [46]. We have responsibly reported it to
Apple and Google1. Apple has acknowledged the reported
vulnerability and assigned CVE-2020-9970 [14] to it.
Limitations of Existing Solutions. A straightforward solu-
tion to prevent spooﬁng attacks could be to upgrade the BLE
devices with advanced security features, and in the mean-
time, adopt security patches to ﬁx vulnerabilities. However,
such solutions will not work well in practice due to the ex-
tremely fragmented nature of the BLE ecosystem. Speciﬁ-
cally, the case-by-case ﬁrmware updates and security patches
may not be preferably adopted by different vendors at a large-
scale, since vendors always tend to sacriﬁce security for utility.
Moreover, it is extremely difﬁcult for those low-end, legacy
BLE devices (e.g., beacons) with limited I/O capabilities to
adopt any ﬁrmware updates or security patches. Furthermore,
a solution that fails to ensure backward compatibility with the
legacy BLE devices is unlikely to be deployed widely. Hence,
these limitations of existing solutions call for a practical and
legacy-friendly defense to effectively alleviate the threat of
spooﬁng attacks in a more fundamental way.
1While Google has conﬁrmed the vulnerability, we have been told that
another researcher reported a similar vulnerability three days earlier than us.
Figure 2: Architecture of BlueShield.
3 Overview of BlueShield
BlueShield is a monitoring framework for detecting spooﬁng
attacks and alarming the user in a stationary BLE network.
Speciﬁcally, it detects the footprint of spooﬁng attacks by
noticing anomalies in the unique combination of cyber and
physical features (Section 4.1) of advertising packets contain-
ing the BLE device’s identity. Since the nature of a successful
spooﬁng attack requires the attacker to broadcast the spoofed
advertising packets before the appearance of a victim user,
such activities expose the attacker in advance and provide a
great deal of opportunity for BlueShield to detect before any
actual damage is inﬂicted on the victim user.
Architecture and Workﬂow. Figure 2 presents the archi-
tecture of BlueShield. For each BLE device in an indoor
environment that BlueShield aims to protect, the workﬂow
goes through two phases, namely the proﬁling phase and
the monitoring phase. The proﬁling phase (Section 4.2) in-
volves the ofﬂine procedures to determine the BLE device’s
authentic protocol-level cyber features, such as MAC address,
advertising data, and advertising pattern.
The monitoring phase (Section 4.3) includes runtime pro-
cedures to detect spooﬁng attacks using an infrastructure
consisting of three collectors and one monitor. The three col-
lectors follow a randomized channel switching mechanism
(Section 4.3.1) through which each collector is randomly as-
signed to collect the advertising packets on one of the three
advertising channels. Since the authentic value of the physical
features (e.g., RF signal’s strength) of the advertising pack-
ets would be different at different channels, this mechanism
ensures that even an attacker with the capability to mimic all
the physical features, cannot trick all the three collectors with
correctly imitated values at the same time.
After obtaining the feature values of the advertising packets
gathered by the three collectors, the monitor employs a se-
lective inspection mechanism (Section 4.3.2) which exploits
the cyber features obtained in the proﬁling phase to select
appropriate physical features for an effective runtime inspec-
tion. Thereafter, the monitor determines the valid range of
the selected physical features over each advertising channel.
Finally, if the monitor discovers that the obtained feature val-
USENIX Association
23rd International Symposium on Research in Attacks, Intrusions and Defenses    399
Profiling PhaseAdvertisingchannelsMonitoring PhaseAdvertisingchannelsSpoofing alarmUsernotificationAdministratornotificationCollectorsMonitorPhysicalfeatureinspectionCyber characteristicsprofilingDeviceidentificationues lie outside their valid ranges, it alarms the user and/or the
network administrator about a detected spooﬁng attack.
Adversary Model. BlueShield is subject to the following
assumptions: We assume that the attacker aims to impersonate
a target BLE device and launch a spooﬁng attack against the
user device. The attacker is capable of passively snifﬁng the
trafﬁc, and actively crafting and transmitting spoofed packets
on BLE channels (e.g., using a customized BLE device). An
advanced attacker may even employ advanced evasion tech-
niques (e.g., with an SDR) and try to mimic the features of
the wireless signals of the target BLE device. Besides, the
attacker can also exploit the vulnerabilities of the authentica-
tion mechanism between the BLE device and user device [2].
However, we assume that the attacker cannot fully control the
target BLE device either physically (e.g., remove/replace the
target device with his own) or remotely (e.g., by corrupting its
ﬁrmware). Also, we do not consider the attacker that uses jam-
ming, as the detection of jamming is sufﬁciently covered by
existing research [32, 48] which are orthogonal to BlueShield.
Lastly, for BlueShield, we assume that the monitoring infras-
tructure for collecting the advertising packets is secure, i.e., it
cannot be compromised by the attacker.
Scope of Detection. BlueShield focuses on detecting spoof-
ing attacks that target stationary BLE devices in indoor envi-
ronments. As such, BlueShield covers a wide range of BLE
usage scenarios (e.g., smart homes, museums, and manufac-
turing plants) [17]. Speciﬁcally, a recent report [22] showed
that 15 out of the 18 (83.3%) most popular IoT devices in
smart homes are stationary. We note that spooﬁng detection
in outdoor environments or for movable devices (e.g., ﬁtness
trackers) is out of the scope of BlueShield.
4 Detailed Design
In this section, we ﬁrst describe the physical and cyber fea-
tures inspected by BlueShield. We then elaborate on how
these features are used in the proﬁling and monitoring phases
for enabling an effective detection of spooﬁng attacks.
4.1
Inspected Features
4.1.1 Physical Features
Advertising Interval (INT). We deﬁne INT as the time
between two consecutive advertising packets on the same
advertising channel. In spooﬁng attacks, if both the BLE
device and attacker are broadcasting advertising packets, the
real-time INT can be lower than the expected INT value, and
hence can be utilized to detect the spooﬁng attacks.
The CFO of a given
Carrier Frequency Offset (CFO).
device depends on its RF circuit’s imperfections which induce
a unique mismatch/offset between the designated and the
actual carrier frequency of the transmitted signal. As a result,
Collector-1
BLE Device
Collector-2
Attacker
Collector-3
Figure 3: Locations of the
BLE device, the collec-
tors, and the attacker.
Figure 4: Observed RSSI values
under spooﬁng attacks (with typ-
ical channel interference).
CFO can be utilized as a ﬁngerprint of a wireless device [7,
39]. In the case of spooﬁng attacks, the CFO extracted from
advertising packets can be used to differentiate the packets
generated by the benign BLE device and the attacker.
Received Signal Strength Indicator (RSSI). RSSI is a nu-
merical estimate of the signal power in the received RF signal,
which depends on the distance and the channel interference
between a transmitter and receiver [19]. In the prior art, RSSI
has been widely used for ﬁngerprinting the location of a wire-
less device [19, 24, 50]. In the case of spooﬁng attacks, since
the locations of the BLE device and the attacker are different
as illustrated in Figure 3, the RSSI values of the benign and
spoofed advertising packets can be utilized to discover spoof-
ing attacks. For instance, as shown in Figure 4, the abrupt
change in RSSI values of advertising packets indicates the
presence of a spooﬁng attack.
4.1.2 Cyber Features
Although the physical features enable BlueShield to detect
spooﬁng attacks, they share some inherent limitations. Specif-
ically, the INT feature will only work for BLE devices which
persistently transmit advertising packets before and after their
connections with user devices. In the meantime, as shown in
Figure 4, like any feature of wireless signals, the values of
the CFO and RSSI can change due to unintentional signal
interference (e.g., human movements). Hence, continuously
inspecting these two features will trigger a signiﬁcant number
of false alarms. To overcome these challenges, BlueShield em-
ploys additional cyber features that are determined by device-
speciﬁc BLE implementation, to support the usage of the
aforementioned physical features.
Advertising Pattern. According to the BLE speciﬁcation, a
BLE device can illustrate one of the two advertising patterns:
intermittent and persistent. A BLE device with an intermittent
advertising pattern stops advertising after connecting to a user
device. A BLE device with a persistent advertising pattern
continues to advertise even after connecting to a user device.
Operation State. The BLE speciﬁcation deﬁnes that every
BLE device stays active in one of the two states: advertis-