# []{#assembly_configuring-yum_managing-software-with-the-dnf-tool.html#proc_viewing-the-current-yum-configurations_assembly_configuring-yum}查看当前的 DNF 配置 {.title}
:::
以下流程描述了如何显示当前 [**[DNF]{.application}**]{.strong} 配置。
::: itemizedlist
**流程**
-   要显示在 `/etc/dnf/dnf.conf`{.literal} 文件的 `[main]`{.literal}
    部分指定的全局 [**[DNF]{.application}**]{.strong}
    选项的当前值，请使用：
    ``` literallayout
    # dnf config-manager --dump
    ```
:::
:::
::: section
::: titlepage
# []{#assembly_configuring-yum_managing-software-with-the-dnf-tool.html#proc_setting-yum-main-options_assembly_configuring-yum}设置 DNF 主选项 {.title}
:::
`/etc/dnf/dnf.conf`{.literal} 配置文件包含一个 `[main]`{.literal}
部分。本节中的键值对会影响 [**[DNF]{.application}**]{.strong}
的运行方式并对待存储库。
您可以在 `/etc/dnf/dnf.conf`{.literal} 中的 `[main]`{.literal}
部分标题下添加附加选项。
有关可用 `[main]`{.literal} 选项的完整列表，请查看
`dnf.conf(5)`{.literal} man page 的 `[main] OPTIONS`{.literal} 部分。
:::
::: section
::: titlepage
# []{#assembly_configuring-yum_managing-software-with-the-dnf-tool.html#assembly_using-yum-plug-ins_assembly_configuring-yum}使用 DNF 插件 {.title}
:::
[**[DNF]{.application}**]{.strong}
提供扩展和增强操作的插件。默认安装某些插件。
以下流程描述了如何启用、配置和禁用 [**[DNF]{.application}**]{.strong}
插件。
::: section
::: titlepage
## []{#assembly_configuring-yum_managing-software-with-the-dnf-tool.html#proc_managing-yum-plug-ins_assembly_using-yum-plug-ins}管理 DNF 插件 {.title}
:::
插件配置文件总是包含一个 `[main]`{.literal} 部分，`enabled=`{.literal}
选项控制在运行 `dnf`{.literal}
命令时插件是否启用。如果缺少这个选项，您可以手动将其添加到该文件中。
每个安装的插件可能在 `/etc/dnf/plugins/`{.literal}
目录中拥有自己的配置文件。您可以在这些文件中启用或禁用特定插件选项。
:::
::: section
::: titlepage
## []{#assembly_configuring-yum_managing-software-with-the-dnf-tool.html#proc_enabling-and-disabling-yum-plug-ins_assembly_using-yum-plug-ins}启用和禁用 DNF 插件 {.title}
:::
在 [**[DNF]{.application}**]{.strong} 工具中，插件会被默认加载。
以下流程描述了如何修改 [**[DNF]{.application}**]{.strong}
插件的加载，以及如何启用或禁用特定的 [**[DNF]{.application}**]{.strong}
插件。
::: itemizedlist
**流程**
-   要禁用或启用 [**[DNF]{.application}**]{.strong} 插件的加载，请确保
    `/etc/dnf/dnf.conf`{.literal} 文件的 `[main]`{.literal} 部分有以
    `plugins=`{.literal} 开头的行。
    ::: orderedlist
    1.  要禁用 [**[DNF]{.application}**]{.strong} 插件的加载，将
        `plugins=`{.literal} 的值设置为 `0。`{.literal}
        ::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
        ### 重要 {.title}
        [**不建议**]{.strong}禁用所有插件。某些插件提供重要的
        [**[DNF]{.application}**]{.strong} 服务和命令。特别是
        [**[product-id]{.application}**]{.strong} 和
        [**[subscription-manager]{.application}**]{.strong}
        插件，它们为基于证书的 `内容发布网络`{.literal}
        ([**CDN**]{.strong})提供支持。全局禁用插件作为方便选项提供，建议仅在诊断
        [**[DNF]{.application}**]{.strong} 时存在潜在问题。
        :::
    2.  要启用 [**[DNF]{.application}**]{.strong} 插件的加载，请将
        `plugins=`{.literal} 的值设置为 `1`{.literal}。
    :::
-   要禁用特定命令的所有 [**[DNF]{.application}**]{.strong}
    插件，请在该命令中附加 `--noplugins`{.literal} 选项。例如，为
    `update`{.literal} 命令禁用 [**[DNF]{.application}**]{.strong}
    插件：
    ``` literallayout
    # dnf --noplugins update
    ```
-   要在一个命令中禁用特定的 [**[DNF]{.application}**]{.strong}
    插件，请在命令中附加 `--disableplugin=plugin-name`{.literal}
    选项。例如，要为 `update`{.literal} 命令禁用特定的
    [**[DNF]{.application}**]{.strong} 插件：
    ``` literallayout
    # dnf update --disableplugin=plugin-name
    ```
    使用插件的名称替换 [*plugin-name*]{.emphasis}。
-   要为单个命令启用特定的 [**[DNF]{.application}**]{.strong}
    插件，请在命令中附加 `--enableplugin=plugin-name`{.literal}
    选项。例如，要为 `update`{.literal} 命令禁用特定的
    [**[DNF]{.application}**]{.strong} 插件：
    ``` literallayout
    # dnf update --enableplugin=plugin-name
    ```
    使用插件的名称替换 [*plugin-name*]{.emphasis}。
:::
:::
:::
:::
[]{#assembly_searching-for-rhel-9-content_managing-software-with-the-dnf-tool.html}
::: chapter
::: titlepage
# []{#assembly_searching-for-rhel-9-content_managing-software-with-the-dnf-tool.html#assembly_searching-for-rhel-9-content_managing-software-with-the-dnf-tool}第 4 章 搜索 RHEL 9 内容 {.title}
:::
以下小节介绍了如何在 Red Hat Enterprise Linux 9 的 AppStream 和 BaseOS
软件仓库中查找和检查内容：
::: itemizedlist
-   [第 4.1
    节：\"搜索软件包\"](#assembly_searching-for-rhel-9-content_managing-software-with-the-dnf-tool.html#proc_searching-for-software-packages_assembly_searching-for-rhel-9-content "搜索软件包"){.link}
    描述了如何搜索提供所需内容的软件包。
-   [第 4.2
    节：\"列出软件包\"](#assembly_searching-for-rhel-9-content_managing-software-with-the-dnf-tool.html#proc_listing-software-packages_assembly_searching-for-rhel-9-content "列出软件包"){.link}
    描述如何列出已安装和可用的软件包。
-   [第 4.3
    节：\"列出软件仓库\"](#assembly_searching-for-rhel-9-content_managing-software-with-the-dnf-tool.html#proc_listing-repositories_assembly_searching-for-rhel-9-content "列出软件仓库"){.link}
    描述如何列出启用和禁用的存储库。
-   [第 4.4
    节：\"显示软件包信息\"](#assembly_searching-for-rhel-9-content_managing-software-with-the-dnf-tool.html#proc_displaying-package-information_assembly_searching-for-rhel-9-content "显示软件包信息"){.link}
    描述了如何显示可用软件包的信息。
-   [第 4.5
    节：\"列出软件包组\"](#assembly_searching-for-rhel-9-content_managing-software-with-the-dnf-tool.html#proc_listing-package-groups_assembly_searching-for-rhel-9-content "列出软件包组"){.link}
    描述如何列出已安装和可用的软件包组。
-   [第 4.6
    节：\"列出可用模块\"](#assembly_searching-for-rhel-9-content_managing-software-with-the-dnf-tool.html#proc_listing-available-modules_assembly_searching-for-rhel-9-content "列出可用模块"){.link}
    描述了如何列出可用模块并查找有关模块的详情。
-   [第 4.7 节：\"指定 dnf
    输入中的全局表达式\"](#assembly_searching-for-rhel-9-content_managing-software-with-the-dnf-tool.html#proc_specifying-global-expressions-in-yum-input_assembly_searching-for-rhel-9-content "在 dnf 输入中指定全局表达式"){.link}
    描述了如何确保以预期将全局表达式传递给 `dnf`{.literal}。
:::
::: section
::: titlepage
# []{#assembly_searching-for-rhel-9-content_managing-software-with-the-dnf-tool.html#proc_searching-for-software-packages_assembly_searching-for-rhel-9-content}搜索软件包 {.title}
:::
这部分论述了查找提供特定应用程序或其他内容的软件包所需的步骤。
::: itemizedlist
**流程**
-   要搜索软件包，使用：
    ``` literallayout
    # dnf search term
    ```
    使用与该软件包相关的术语替换 [*term*]{.emphasis}。
    请注意，`dnf search`{.literal}
    命令返回与软件包名称和摘要中的术语匹配。这样，您可以更快地搜索搜索，您可以搜索您不知道名称但知道相关术语的软件包。
-   要在软件包描述中包含匹配名，请使用：
    ``` literallayout
    # dnf search --all term
    ```
    用您要在软件包名称、概述或描述中搜索的术语替换 [*term*]{.emphasis}。
    请注意，`dnf search --all`{.literal}
    命令会进行更详细但速度较慢的搜索。
:::
:::
::: section
::: titlepage
# []{#assembly_searching-for-rhel-9-content_managing-software-with-the-dnf-tool.html#proc_listing-software-packages_assembly_searching-for-rhel-9-content}列出软件包 {.title}
:::
以下流程描述了如何使用 `dnf`{.literal} 列出可用软件包。
::: itemizedlist
**流程**
-   要列出所有安装以及可用软件包的信息，请使用：
    ``` literallayout
    # dnf list --all
    ```
-   要列出安装在您的系统中的所有软件包，请使用：
    ``` literallayout
    # dnf list --installed
    ```
    或者：
    ``` literallayout
    # dnf repoquery --installed
    ```
-   要列出所有已启用的仓库中用于安装的所有软件包，请使用：
    ``` literallayout
    # dnf list --available
    ```
    或者：
    ``` literallayout
    # dnf repoquery
    ```
:::
请注意，您可以通过将全局表达式附加为参数来过滤结果。如需了解更多详细信息，请参阅[在
dnf
输入中指定全局表达式](#assembly_searching-for-rhel-9-content_managing-software-with-the-dnf-tool.html#proc_specifying-global-expressions-in-yum-input_assembly_searching-for-rhel-9-content "在 dnf 输入中指定全局表达式"){.link}。
:::
::: section
::: titlepage
# []{#assembly_searching-for-rhel-9-content_managing-software-with-the-dnf-tool.html#proc_listing-repositories_assembly_searching-for-rhel-9-content}列出软件仓库 {.title}
:::
以下流程描述了如何使用 `dnf`{.literal} 列出软件仓库。
::: itemizedlist
**流程**
-   要列出您系统中所有启用的库，请使用：
    ``` literallayout
    # dnf repolist
    ```
-   要列出系统中所有禁用的软件仓库，请使用：
    ``` literallayout
    # dnf repolist --disabled
    ```
-   要列出启用和禁用的存储库，请使用：
    ``` literallayout
    # dnf repolist --all
    ```
-   要列出有关存储库的附加信息，请使用：
    ``` literallayout
    # dnf repoinfo
    ```
:::
请注意，您可以通过传递 ID
或库名称作为参数或者附加全局表达式来过滤结果。如需了解更多详细信息，请参阅[在
dnf
输入中指定全局表达式](#assembly_searching-for-rhel-9-content_managing-software-with-the-dnf-tool.html#proc_specifying-global-expressions-in-yum-input_assembly_searching-for-rhel-9-content "在 dnf 输入中指定全局表达式"){.link}。
:::
::: section
::: titlepage
# []{#assembly_searching-for-rhel-9-content_managing-software-with-the-dnf-tool.html#proc_displaying-package-information_assembly_searching-for-rhel-9-content}显示软件包信息 {.title}
:::
以下流程描述了如何使用 `dnf`{.literal} 显示软件包信息。
::: itemizedlist
**流程**
-   要显示一个或多个可用软件包的信息，请使用：
    ``` literallayout
    # dnf info package-name
    ```
    使用软件包名称替换 [*package-name*]{.emphasis}。
    或者：
    ``` literallayout