 **Migrated issue, originally created by Thijs Damsma (@tdamsma)**
When a distinct query is ordered, the columns on which are sorted are added to
the SELECT statement, see example code:
    from sqlalchemy.orm.session import sessionmaker
    from sqlalchemy.dialects import postgresql
    from sqlalchemy.ext.declarative import declarative_base
    from sqlalchemy import Column, Integer
    Base = declarative_base()
    class User(Base):
        __tablename__ = 'user'
        id = Column(Integer, primary_key=True)
        att1 = Column(Integer)
        att2 = Column(Integer)
    Session = sessionmaker()
    sess = Session()
    q = sess.query(User.att2).distinct(User.att1)
    print(str(q.statement.compile(dialect=postgresql.dialect())))
as expected, only user.att2 will be returned:
    SELECT DISTINCT ON ("user".att1) "user".att2 
    FROM "user"
Now with an order_by statement:
    print(str(q.order_by(User.att1, User.id).statement.compile(
        dialect=postgresql.dialect())))
not as expected, both user.att2 and user.id will be returned
    SELECT DISTINCT ON ("user".att1) "user".att2, "user".att1, "user".id 
    FROM "user" ORDER BY "user".att1, "user".id
The intended result is:
    SELECT DISTINCT ON ("user".att1) "user".att2
    FROM "user" ORDER BY "user".att1, "user".id