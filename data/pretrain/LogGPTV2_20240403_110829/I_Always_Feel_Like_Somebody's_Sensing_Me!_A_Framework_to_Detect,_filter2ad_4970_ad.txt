Victure
Camera
Foscam
Camera
Ring (Amazon)
Amazon Echo Dot
Home Assistant
Home Assistant
Amazon Echo
Home Assistant
Google Home Mini
Kangaroo Home
Motion Sensor
Samsung Smart Things Motion Sensor
TI IWR1443
RF Sensor
Cost
$39.99
$77.64
$29.99
$107.50
$35.99
$49.99
$59.99
$29.99
$99.99
$39.99
$12.95
$24.99
$299.99
Table 1: List of snooping sensors evaluated upon
a delay between when the scene changes and when the data
is visible to the adversary. We found that this delay can vary
between a few milliseconds to up to 4 seconds. If the adver-
sary is using a tape delay in transmission, we can perform this
analysis over a longer delay period. Assuming symmetrical
delay, SNOOPDOG sniffs the packets during the ﬁrst half of
the transmission; we choose a lag value of 2 seconds.
We evaluated our detection on 7 cameras. All of them use
H.264/MPEG-4 codecs which are the most popular codecs
used for IP cameras. We performed 131 trials on 2 different
users5 to evaluate the detection accuracy. The results of our
experiments are presented in table 2. To improve the detection
accuracy and conﬁdence of detection, a user can perform the
detection trial several times and take a majority vote. The
detection works well even when a portion of the human body
is occluded by objects such as a table.
Camera
Panasonic
Arlo (Netgear)
Ring (Amazon)
Foscam
Wansview
Kamtron
Victure
Total
Trials
15
10
10
15
30
25
26
131
Successful Accuracy
93.33%
100%
90%
100%
96.6%
84%
100%
94.65%
14
10
9
15
29
21
26
124
Table 2: Evaluation results for camera detection
RF sensors. We use a TI mmWave IWR1443 to evaluate the
performance of SNOOPDOG. In 20 experiments, SNOOPDOG
was able to detect RF sensor’s presence every time.
5The data is collected from the authors and hence does not require IRB
approval.
7.2 Sensors Encoding Inferred Events
Motion Sensors. We evaluated on an off-the-shelf motion
sensor from Kangaroo Security and a smart-things motion
sensor from Samsung. The smart-things sensors are a special
case as these sensors use Z-Wave and ZigBee to communicate
with a smart-things hub which in turn sends the information
over Wi-Fi. As a result, SNOOPDOG can sniff the trafﬁc of
this hub and establish causality. However, if there are multiple
devices connected to the same hub, SNOOPDOG will not be
able to detect them. We performed 25 trials, and SNOOPDOG
was able to detect the motion sensors every time except for
3 trials. We suspect that this was caused because the devices
send some sort of “status" messages to their respective cloud
service which result in events in the sniffed trafﬁc that throw
the detection off.
Smart-home Assistants (Audio Sensors). In Figure 5, we
say the phrase “Alexa, what’s the time right now?" four times
and observe four distinct events in the device trafﬁc. In 35
trials with different phrases, SNOOPDOG was able to detect
causality 100% of the time. Additionally, we show the vari-
ations in device trafﬁc for Alexa Drop-In features when the
Drop-In is active and when it is not active in Appendix B.
7.3 Quantifying False Positives and Negatives
Overall false positive rate. We perform false positive anal-
ysis for two separate cases. In case one, we run cause-effect
analysis for every device whose trafﬁc has been captured (a
network can have devices such as phones, laptops, and other
sensors in addition to snooping devices) and ﬁnd out if a de-
vice is falsely classiﬁed to be snooping on the user. In case
two, we perform our cause-effect analysis on a camera that is
not looking at the scene to see whether it will produce a false
positive.
For case one, our experimental test-bed consists of devices
monitoring the user such as a camera, motion sensor, home
assistant and RF-sensor. We also include innocuous devices
usually present in a scene such as smartphones, laptops, Wi-Fi-
routers, smart-lights, and embedded devices such as raspberry-
pi. We ran this analysis for 50 trials. We found 2 false positives
for Active Phase and 9 false positives for Background Phase.
We divide case 2 into two separate parts. In the ﬁrst part, a
camera is placed in another room (where the user who’s run-
ning SNOOPDOG is not present). Another person is moving
freely in the room. In the second part, the person in the other
room is sitting on a desk and working while the camera is
monitoring them. We show the results of our experiments in
Table 3. We perform these trial for both background detection
and active detection. The one detection for background phase
is because the walking patterns of the user and the person in
the other room were similar. In such cases, a user can turn
off the light in their room and see if the trafﬁc of the device
drops. If it does, it means the camera is in their room.
1838    30th USENIX Security Symposium
USENIX Association
Case
Total Trials
(1) User moving
(2) User working on a desk
15
10
False Positives
Background Active(S5)
0 (0.00%)
1 (6.66%)
0 (0.00%)
0 (0.00%)
Table 3: False-positives for a camera in a separate room.
False negatives for background detection. SNOOPDOG’s
background detection mechanism is most susceptible to false
negatives since it relies on natural human motion rather than
active command and response patterns. Figure 6 shows cam-
era trafﬁc and IMU data for a user walking randomly in a
room. As long as the user stops at some point within the de-
tection period, SNOOPDOG is able to detect hidden devices.
However, if the user is continuously stationary or continu-
ously in motion, SNOOPDOG fails to detect the presence of
clandestine sensors.
Figure 8: A walk-through of the trial-based localization algo-
rithm in the laboratory environment in Figure 7. The arrows
represent the direction the laptop screen was facing.
camera data rate when the laptop is pointed towards the left
side. When pointed to the right, the data rate remains similar
to that of an empty room. Thus we eliminate the right portion
of the room from the probable area. We again stand in the
middle of the leftover space and repeat the experiments until
we achieve a sufﬁciently reduced space.
Audio-based localization: A similar elimination-based local-
ization for audio sensors is described in Appendix A.
Figure 6: Camera trafﬁc and its comparison with IMU data
7.5 Overhead Analysis
7.4 Snooping Sensor Localization
We evaluated SNOOPDOG for 4 different spaces with differ-
ent sensor placements. The accuracy of localization in all of
these cases depends on the user’s requirements. The user can
perform more trials to reduce the probable region where the
sensor is placed. We use an example to demonstrate how the
SNOOPDOG localization algorithm works. To perform our
localization, we chose a room as shown in Figure 7. The cam-
era is placed at a corner of the room. We begin by performing
our S5 detection trials in different parts of the room. The
location and results of our trials are shown. Based on these
observations, we know that the camera is present somewhere
in the square region of the room and hence, we eliminate the
other part and start our trial-based localization.
Figure 7: Lab dimensions and results of the detection trials.
We stand in the middle of the probable space and hold a
laptop such that the screen is pointing in one direction. Then
we turn to the other side and repeat the same experiment. We
observe that there is a signiﬁcant (>150%) increase in the
Time: Sensor detection can happen in the background with
minimal user intervention. However, this will take some time.
In situations where a user wants to immediately know if he/she
is being spied on by a sensor (such as when entering a chang-
ing room), they can directly begin the active phase where they
will perform the S5 motion. It takes about 40 seconds to per-
form active detection. For localization, each trial can take 30
seconds. Since the localization space reduction is determined
by the user, he/she can perform the trial any number of times.
If the total number of trials is n, the overhead will be about
30n seconds.
User effort: If the detection occurs in the background, there
is no overhead in terms of user involvement. However, both
active phase and localization require user effort. In case the
user is suffering from physical disabilities, he/she may ﬁnd it
hard to follow through these steps.
Wi-Fi Channel Hopping: In detection mode, SNOOPDOG
must hop channels across all frequencies as an adversary may
have conﬁgured devices on different Wi-Fi frequency bands.
A transmitting device might inadvertently evade detection
if it is hopping while SNOOPDOG is scanning. Hence, we
perform multiple scans of the entire Wi-Fi spectrum to reduce
misdetections. We would ideally monitor all Wi-Fi channels
simultaneously, but this is infeasible with a single WiFi radio.
Multiple Wi-Fi radios will reduce the search space per radio
at additional cost and degraded portability.
USENIX Association
30th USENIX Security Symposium    1839
-Causality not found-Causality found3.04 m3.04 m1.3 m2 m7.6 Effects of Range on Detection
Detection depends on the range of a sensor. The camera range
is the depth which it can record meaningful information from
the scene. If the user stands too far from the camera, their
motion may not produce a signiﬁcant variation in its trafﬁc.
For motion sensors and RF sensors, the range is speciﬁed by
the vendor. The motion sensor that we used has a range of
15 feet (4.6 m) and the RF sensor we used had a range of 4
m. For Amazon Echo, the range is a function of the loudness
of sound. For cameras, we perform our detection trials at
different distances to ﬁnd out the range.
We perform the S5 motion in front of a camera at 1 m and
gradually increase the distance. We ﬁnd that as we move away
from the camera, the changes in its trafﬁc decrease. For the
Wansview camera, the distance at which trafﬁc changes are
not enough to establish causality is the smallest at about 3 m.
7.7 Failure Analysis
During our evaluation, SNOOPDOG’s detection failed dur-
ing some trials for both cameras and motion sensors. In this
section, we will describe and discuss those cases.
Camera. SNOOPDOG failed to detect hidden cameras when
the camera video froze (no transmission) for a small duration
during our detection trial. Another cause of miss-detection
were additional users in the scene since the network trafﬁc
due to their motion cannot be ﬁltered out. Also, when the user
was present far from the camera (refer Section 7.6), the trafﬁc
changes due to the motion of the user were not enough to
establish Granger causality.
Motion Sensor. Motion sensors sometimes send status mes-
sages to the cloud service that they are connected to. These
transmissions happen in the form of a short burst. Since
there was no motion before these transmissions, they result in
SNOOPDOG failing to establish causality. While we cannot
say with certainty what each of these transmissions are, we
saw multiple such transmissions when the sensor was started,
during update, and sometimes even in between two motion
events. A user can also query the sensor status from their
phone to which the sensor has to respond. SNOOPDOG failed
to detect causality when these transmissions were present in
the network trafﬁc of the motion sensor.
8 Techniques to fool SNOOPDOG
In this section, we discuss how an adversary can fool SNOOP-
DOG.
8.1 No Encoding or Data Padding
SNOOPDOG uses the relationship between encoding schemes
and ground truth to ﬁnd out if there is a device which is
monitoring the user. Hence, to fool SNOOPDOG, the sensors
can either send un-encoded raw data or they can pad the
encoded data to make the data rate constant. Cameras can
either pad their trafﬁc or they can send un-encoded images
frames. Since sending images will put a large overhead on the
network bandwidth, padding the trafﬁc [30] is a better idea.
We pad the camera trafﬁc with random payload in Figure 9.
Since SNOOPDOG cannot see what’s inside the payload, it can
be anything. The device can even send labels in the payload
that help the server decide if this is a valid packet or fake
data generated to fool detection. Also in Figure 9, we pad the
trafﬁc of a motion sensor to make it appear like a constantly
transmitting device with no variation in trafﬁc in response to
user’s motion.
For RF sensors, one can ﬁnd out the maximum number
of points it can output and then always pad the information
so that we are transmitting the maximum number of points
allowed. These extra points could all be zeros which would
make it easier to ﬁlter them out on the server side.
Figure 9: Padding the motion sensor and the camera trafﬁc
8.2 Adding Random Noise to the Data