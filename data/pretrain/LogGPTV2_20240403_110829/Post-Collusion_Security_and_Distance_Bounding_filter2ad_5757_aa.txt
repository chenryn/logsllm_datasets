title:Post-Collusion Security and Distance Bounding
author:Sjouke Mauw and
Zach Smith and
Jorge Toro-Pozo and
Rolando Trujillo-Rasua
Post-Collusion Security and Distance Bounding
Sjouke Mauw
SnT & CSC
University of Luxembourg
Jorge Toro-Pozo∗
Department of Computer Science
ETH Zurich
Zach Smith
CSC
University of Luxembourg
Rolando Trujillo-Rasua
School of Information Technology
Deakin University
ABSTRACT
Verification of cryptographic protocols is traditionally built upon
the assumption that participants have not revealed their long-term
keys. However, in some cases, participants might collude to defeat
some security goals, without revealing their long-term secrets.
We develop a model based on multiset rewriting to reason about
collusion in security protocols. We introduce the notion of post-
collusion security, which verifies security properties claimed in
sessions initiated after the collusion occurred. We use post-collusion
security to analyse terrorist fraud on protocols for securing physical
proximity, known as distance-bounding protocols. In a terrorist fraud
attack, agents collude to falsely prove proximity, whilst no further
false proximity proof can be issued without further collusion.
Our definitions and the Tamarin prover are used to develop a
modular framework for verification of distance-bounding protocols
that accounts for all types of attack from literature. We perform a
survey of over 25 protocols, which include industrial protocols such
as Mastercard’s contactless payment PayPass and NXP’s MIFARE
Plus with proximity check. For the industrial protocols we con-
firm attacks, propose fixes, and deliver computer-verifiable security
proofs of the repaired versions.
CCS CONCEPTS
• Security and privacy → Security protocols; Formal security
models; Logic and verification; Mobile and wireless security.
ACM Reference Format:
Sjouke Mauw, Zach Smith, Jorge Toro-Pozo, and Rolando Trujillo-Rasua.
2019. Post-Collusion Security and Distance Bounding. In 2019 ACM SIGSAC
Conference on Computer and Communications Security (CCS’19), November
11–15, 2019, London, United Kingdom. ACM, New York, NY, USA, 18 pages.
https://doi.org/10.1145/3319535.3345651
1 INTRODUCTION
Communication protocols are designed with one or more security
goals in mind. These goals, such as authentication or confidentiality,
must be attainable even in the presence of an adversary attempting
∗Work done while at the University of Luxembourg.
CCS ’19, November 11–15, 2019, London, United Kingdom
© 2019 Association for Computing Machinery.
This is the author’s version of the work. It is posted here for your personal use. Not for
redistribution. The definitive Version of Record was published in 2019 ACM SIGSAC
Conference on Computer and Communications Security (CCS’19), November 11–15, 2019,
London, United Kingdom, https://doi.org/10.1145/3319535.3345651.
to violate them. As such, the capabilities of the adversary is a funda-
mental consideration in security analysis, continuously undergoing
reformations.
In recent years, the adversary model of Dolev and Yao [30] has
become an accepted standard. The Dolev-Yao adversary is capable
of intercepting, blocking or modifying messages on the communi-
cation network, as well as injecting their own messages. Further,
the adversary is assumed to be capable of compromising protocol
participants (a.k.a. users, agents), gaining full control of them for
the entire protocol execution.
Most existing verification frameworks make use of the Dolev-
Yao adversary, which is sufficient to capture non-trivial attacks,
such as Lowe’s man-in-the-middle [42] on the Needham-Schroeder
protocol [49]. Computer-assisted verification approaches typically
consider Dolev-Yao adversaries as well. Such approaches have
proven useful in verifying or discovering attacks on real-world,
complex protocols such as 5G authentication [11], the TLS 1.3 pro-
tocol suite [24], and key-exchange protocols such as Naxos [55].
In some cases, the Dolev-Yao model has been shown to be too
coarse-grained. This is because this model assumes that agents can
be categorised as being either honest: those who precisely follow
their protocol specification; or compromised: those who deviate
from their protocol specification as desired by the adversary. The
concern lies in accounting for agents who cannot be classified in
either group.
For example, covert adversaries [1, 18, 33] are agents who are
willing to cheat by deviating from the protocol specification, as
long as the cheating would not be detected. One might think of an
online gaming platform, in which some players secretly cooperate
to cheat against other players, whilst avoiding being caught, or else
face consequences such as being thrown out of the platform.
Variations of the Dolev-Yao threat model capturing more refined
dishonest behaviour have been studied [1, 9, 10, 12, 23, 33], which
have led to re-thinking the security models to properly account
for such fine-grained adversaries. Such models attribute dishonest
behaviour to the adversary’s compromise capabilities, but in some
scenarios such behaviour might not be ruled by the adversary, but
rather by the protocol’s participants themselves.
For example, a given agent might choose to deviate from the
protocol specification, but only if certain guarantees are met in later
executions of the protocol. Would a university student willingly,
due to certain benefit, lend their campus access card to a university-
external friend? The student’s decision might be conditional on
their assertion that their friend will not be able to later access the
campus, after the card has been returned to its owner. Would a
user of a video streaming platform utilize a VPN extension to fool
geo-location restrictions? The user’s decision might be based on
whether they are certain that the VPN extension is not malicious
and will not cause irreversible harm.
In this paper we refine the traditional Dolev-Yao adversary model
in order to capture collusion. Collusion refers to any deviation of the
protocol specification by agents who are not under control of the
adversary. Furthermore, we introduce the notion of post-collusion
security, which refers to security guarantees about claims made in
execution sessions initiated after the collusion. Informally, one can
interpret the relation of these two notions as follows: post-collusion
security allows the potential colluding agents to decide whether
colluding is worth it. After all, what the agents gain out of colluding
must outweigh the collateral effect that such collusion might have
on themselves. On the other hand, a protocol designer might aim
to increase the cost of collusion.
A related notion was introduced by Cohn-Gordon et al. [23],
called post-compromise security, that looks at the timeline of the
compromise actions and their impact in the security of future proto-
col sessions. As motivated earlier, collusion differs from compromise
in that compromise is an action performed by the adversary in or-
der to exert control over the protocol, whilst collusion represents a
deliberate choice of the agent involved.
In post-compromise security, the compromise is ruled by the
adversary, regardless of the (future) consequences on the compro-
mised agent. Post-collusion security, instead, allows the agents to
base their choice of collusion on post-collusion guarantees. One can
think of “not getting caught”, in the online gaming example given
earlier, as the post-collusion guarantee. In Section 2 we give further
technical differences between post-compromise and post-collusion
security.
Our notion of post-collusion security finds a straightforward
application in distance-bounding protocols [13, 15], which are se-
curity protocols that aim to guarantee physical proximity. These
protocols are used in RFID and NFC technologies, with numerous
applications in secure systems such as contactless payment and
access control. Post-collusion security allows us to formally analyse
a non-trivial type of attack on distance-bounding protocols known
as terrorist fraud [29]. In this attack, agents collude to falsely prove
proximity for one run of the protocol, whereas no further false
proximity proofs can be issued without further collusion.
Contributions. The contributions of this paper are:
• We provide a formal symbolic model based on multiset
rewriting systems that captures collusion in security proto-
cols, which represents non-compromised agents deviating
from their given protocol specification.
• We introduce the notion of post-collusion security, which
refers to the validity of security claims made in protocol
sessions initiated after the collusion. We provide a concrete
formulation of this notion that can be easily implemented in
protocol verification tools such as Tamarin [47].
• Our definitions are used to provide a formal description
of the sophisticated terrorist fraud on distance-bounding
protocols. Further, we develop a Tamarin-based framework
for verification of such type of protocols that exhaustively
accounts for all classes of attack from literature.
• We conduct a security survey of over 25 protocols, which
include industrial protocols based on the ISO/IEC 14443 stan-
dard. We propose computer-verified fixes for the vulnerabil-
ities encountered in these protocols.
Organisation. In Section 2 we discuss previous work on modelling
alternative adversary models, with a particular focus on distance-
bounding protocols and terrorist fraud. We introduce our model in
Section 3, which is an extension of the multiset rewriting model
employed by the Tamarin tool. In Section 4, we extend the model
in order to formalise the concepts of collusion and post-collusion
security, and show how these notions apply to authentication anal-
ysis. In Section 5, we use post-collusion security to provide a formal
definition for terrorist fraud on distance-bounding protocols. We
report on our Tamarin-supported framework and analysis results
in Section 6 and also propose fixes for analysed protocols that are
based on the ISO/IEC 14443 standard. We summarise our findings
in Section 7.
2 RELATED WORK
In this section we describe some works in which the authors analyse
alternative adversary models that modify the Dolev-Yao capabil-
ities. We pay special attention to existing symbolic verification
frameworks for distance-bounding protocols, which is the main
application field of our findings.
Alternative Adversary Models. In 2010, Basin and Cremers [10]
proposed a model in which they formally defined several extensions
to the Dolev-Yao adversary. These extensions were used to analyse
a variety of protocols against adversaries of varying strength [9].
As a result, they identified new attack vectors in key-exchange
protocols such as KEA+ [41], Naxos [40] and the MQV protocol
family [38].
In [12] the authors provide a formalism to model and reason
about human misbehaviour. A set of rules describe an untrained
human, who is willing to perform arbitrary actions but follows a
set of guidelines, such as “private keys must be kept secret”. The
Tamarin tool is used to automatically analyse security protocols
involving human errors.
Cohn-Gordon et al. introduced post-compromise security in [23],
defined as an agent’s security guarantees about a communication
with their peer, even if their peer has been already compromised.
They analysed two types of compromise: weak and total. Weak
compromise corresponds to temporary adversarial control of an
agent’s long-term keys in form of a cryptographic oracle, which
outputs the result of a crypto-operation , without revealing the
long-term keys. Post-compromise security has been recently used
in [22] to analyse group messaging protocols.
The adversary model for post-compromise security is similar to
that of post-collusion security in that they both allow for dishonest
behavior not conceived by the Dolev-Yao adversary. Yet, they differ
in that weak compromise is controlled by the adversary regardless
of the compromised agents’ will, whilst collusion is the agents’ de-
liberate choice. This choice can be based on whether or not certain
post-collusion guarantees are met. Furthermore, Cohn-Gordon et
al.’s post-compromise security focuses on stateful protocols, such
as authenticated key-exchange (AKE) and messaging protocols. Our
post-collusion security notion can be applied, but is not limited
to this type of protocol. In addition, our approach is oriented to
symbolic security analysis, whereas theirs uses a computational
approach. As a result, our methods can be more smoothly imple-
mented in state-of-the-art verification tools for analysing complex
protocols.
Collusion can also be considered in the context of adveraries
other than Dolev-Yao, or even with no adversary at all. Tompa and
Woll [59] present an attack on Shamir’s secret sharing [56], based
on the principle of colluding agents. In the domain of multiparty
protocols, Hirt and Maurer [35] give a classification of how differ-
ent agents may deviate from their specification (e.g. ‘honest-but-
curious’ participants, or may collude between each other. Syverson
et al. [57] build upon an adversary model (named “Machiavelli”)
which does not directly corrupt agents, but instead manipulates
them through an extensive collection of collusion rules. We build
upon these papers, by looking at the impact on security after col-
lusion occurs, and to make progress towards identifying the key
deviations from the protocol specification that will result in “suc-
cessful” collusion within certain domains.
Distance-Bounding Protocols. A challenge in verifying distance-
bounding protocols is precisely the notion of physical distance.
Physical distance is associated with location, and so the standard
Dolev-Yao model in which the adversary can inject data on the
network does not faithfully apply. This is because the Dolev-Yao
adversary can inject messages on the network without explicitly
annotating the physical location where they have come from.
The first tool-supported framework for symbolic verification of
secure distance-bounding was proposed by Basin et al. [8, 54]. In
this work, the authors restricted the Dolev-Yao network capabilities,
so that adversarial injection of data is done via a compromised
agent. Thus, every message that travels through the network has
an origin location associated (the sender’s location). The authors
use Isabelle/HOL to verify, and find attacks on, a few protocols.
In [44], Mauw et al. propose the first verification framework for
distance-bounding that does not explicitly require dealing with
the agents’ location. Instead, (co-)location is analysed via a causal
ordering of the agents’ actions. This work provides a considerable
improvement over Basin et al.’s work, as it reduces code complexity
for the protocols’ specification as well as verification time and
automation level. The authors use the verification tool Tamarin to
deliver proofs of the (in)security of a number of protocols.
Both Basin et al.’s and Mauw et al.’s frameworks allow one
to discover traditional distance-bounding attacks such as mafia
fraud [29], distance fraud [28] and distance hijacking [26]. These
frameworks however do not account for terrorist fraud [29] as non-
compromised agents behave precisely as specified by the protocol,
ergo not allowing for collusion.