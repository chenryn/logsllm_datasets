Live
Live
Live
Live
Live
Live
-
-
Table 13: The liveness of phishing pages on different dates.
Their phishing URLs are gathered from a large number organiza-
tions around the globe. Through collaboration, we obtained 335,246
phishing URLs reported during April 2017 to April 2018. In total,
eCrimeX marked 4 squatting phishing domains (0.2%). Collectively
these blacklists only detected 8.4% of the squatting phishing pages,
which means 91.5% of the phishing domains remain undetected for
at least a month. As a comparison, a recent study [33] shows that
phishing pages hosted on compromised web servers typically last
for less than 10 days before they are blacklisted. This suggests that
squatting phishing domains are much more difficult to detect.
Lifetime of Squatting Phishing Pages. We also measure the
longevity of phishing pages. Recall that for domains that are classi-
fied as phishing in the first snapshot, we continue to crawl their
webpages every week for a month. For each snapshot, we re-apply
our classifier to their pages and examine if they are still classified
as phishing. The results are shown in Figure 17. Most pages (about
80%) still remain alive after at least a month. Only a small portion
of the pages has been down after 1-2 weeks. This again confirms
that squatting phishing pages are difficult to detect and take-down.
Table 13 presents the liveness of 6 phishing pages that imperson-
ate Facebook. An interesting domain is tacebook.ga. In the third
snapshot, we find that the webpage under this domain has been
replaced with a benign page (manually verified). However, in the
fourth snapshot, the phishing page come back again.
7 DISCUSSION
In this paper, we
Detecting Squatting Phishing in Practice.
demonstrate a systematic approach to search and detect squatting
phishing pages. With a deep-level impersonation, squatting phish-
ing domains do not come with a large number, but are likely to
be used for highly targeted attacks. Our results have shown that
1494CA 34US 494RU 9JP 32GB 77FR 44IE 39NL 29DE 106CH 13 0 100 200 300 400 500 600 700 8002005201020112012201320142015201620172018# of Registered Domains 0 200 400 600 800 1000Apr01Apr08Apr22Apr29# of Live PhishingWebMobileTracking Down Elite Phishing Domains in the Wild
IMC ’18, October 31–November 2, 2018, Boston, MA, USA
squatting phishing pages are difficult to detect and take down —
91.6% of them are still alive after at least a month.
Our system SquatPhi can be used in two ways. First, any third-
party organizations can set up a scanner to constantly monitor the
squatting domains for a broad range of brands to capture squat-
ting phishing domains. Crowdsourcing efforts can be introduced to
speed up the manual verification process. Note that we are searching
needle in a haystack by narrowing down the target from hundreds
of thousands squatting domains to several hundreds phishing candi-
dates, which are then manageable for manual investigation. Second,
individual online services can set up their own dedicated scanner to
search for squatting phishing pages that impersonate their brands.
For example, Paypal can keep monitoring the newly registered do-
main names to the DNS to identify PayPal related squatting domains
and classify squatting phishing pages. The classifier can be poten-
tially much more accurate if it is customized for one specific brand.
We have open-sourced our tool at https://github.com/SquatPhish
to propel future search in the community.
In September 2018, we checked
Reporting Phishing Websites.
PhishTank, eCrimeX and VirusTotal again. Among the 1,175 veri-
fied squatting domains, 1,075 of them are still online, and only 60
(5.1%) of them are blacklisted. We then reported the rest verified
phishing websites to Google safe browsing (under VirusTotal). Like
most blacklists, Google safe browsing does not support batch re-
porting, and has strict rate limits and CAPTCHAs to prevent abuse.
We have to submit the malicious URLs one by one manually.
Our study has a number of limitations. First,
Our Limitations.
our crawler only sets two profiles for a specific version of iPhone
(mobile) and Chrome (web). It is possible that we might have missed
phishing pages that perform cloaking, e.g., those that only target
Microsoft Explorer users. Second, our measurement primarily fo-
cuses on “popular brand” based on Alexa ranking. As a future work,
we can extend our measurement scope to specifically cover the
web domains of government agencies, military institutions, univer-
sities, and hospitals to detect squatting phishing pages targeting
important organizations. Third, technically, it is difficult to evade
a blackbox OCR engine while creating highly deceptive phishing
pages (see §5.1). Reverse-engineering OCR for adversarial attacks
is out of the cope of this paper. We leave more detailed explorations
to future work. Finally, we did not directly compare our phishing
classifier with existing tools such as Cantina [64] and Cantina+ [61].
This is because most existing works did not open-source their tool,
and some of their features are too expensive to obtain for large-
scale datasets. In this paper, we open-sourced our tool to ensure
the reproducibility of the results.
8 RELATED WORK
Previous works have stud-
Squatting Domains Identification.
ied different types of squatting techniques [21, 50, 58]. For example,
More et al. [50] measured typo squatting by generating a list of
plausible misspellings of popular domains. Nikiforakis et al. [51]
measured the bit squatting by generating a single bit-flip for a valid
domain. Holgers et al. [35] characterized homograph squatting
through character substitutions. Kinti et al. [40] measured combo
squatting by searching domain keywords from DNS records. In this
paper, we focus on aggregating and improving existing squatting
methods to search for squatting phishing attacks.
A plethora of research has
Phishing Webpage Detection.
focused on blacklisting or content-based detection methods. For
example, PhishTank [9] leverages crowdsourcing to collect phish-
ing URLs that Internet users encountered. PhishEye [33] proposed
to use honeypots to monitor live phishing pages. Other detec-
tion methods are based on visual similarities [47, 60] or lexical
URL properties [23, 26, 45] to detect phishing pages. For example,
DeltaPhish [27] detects compromised websites by comparing the
page structure similarities. Cantina and Cantina+ [61, 64] are based
on the keyword frequency and page rank information. Marchal et
al. [46] also use keyword frequency in the HML pages. In this paper,
we show how today’s phishing pages, especially squatting phishing
pages, have adopted evasion techniques that are likely to render
existing detectors ineffective. A recent system Meerkat [24] uses
deep learning models to analyze visual elements in webpages to
detect compromised websites. Our approach is different since we
use OCR to extract the text from the screenshots rather than fo-
cusing on the visual elements. Note that researchers of [20, 29]
used OCR to extract keywords and query search engines to match
again the real sites. However, this design still assumes phishing
sites are similar/identical to the target sites, which is not necessarily
true given the big variances introduced by the evasion techniques.
Instead, we focus on more generic keywords extracted from logos,
login forms, and other input fields to model the “phishing" attempts,
which turns out to be effective.
Phishing emails are
Phishing Emails and Hosting Servers.
used to distribute the phishing URLs. Attackers can impersonate
trusted parties to send phishing emails via email spoofing [36, 37]
or email header injection [55]. In addition to registering squatting
domains, attackers can also compromise existing web servers to
host the phishing pages [53].
9 CONCLUSION
In this paper, we perform an extensive measurement on squatting
phishing, where the phishing pages impersonate target brands at
both the domain and content level. By monitoring 700+ brands and
600K squatting domains for a month, we identified 857 phishing web
pages and 908 mobile pages. We show that squatting phishing pages
are impersonating trusted entities through all different domain
squatting techniques. Squatting phishing pages are more likely to
adopt evasion techniques and are hard to catch. About 90% of them
have evaded the detection of popular blacklists for at least a month.
ACKNOWLEDGMENTS
We would like to thank our shepherd Zhiyun Qian, and the anony-
mous reviewers for their helpful feedback. We also want to thank
Manos Antonakakis and Athanasios Kountouras from Georgia Tech
who kindly shared their DNS dataset with us. This project was sup-
ported in part by NSF grants CNS-1750101 and CNS-1717028, and
Google Research. Any opinions, findings, and conclusions or rec-
ommendations expressed in this material are those of the authors
and do not necessarily reflect the views of any funding agencies.
IMC ’18, October 31–November 2, 2018, Boston, MA, USA
Ke Tian et al.
REFERENCES
[1] Alexa top sites by category. https://www.alexa.com/topsites/category.
[2] Cyber squatters are targeting britain’s biggest banks. https://goo.gl//.
[3] DNSTwist: domain name permutation engine.
https://github.com/elceef/
[4] eCrimeX. https://www.ecrimex.net/.
[5] How to make selenium tests reliable, scalable, and maintainable. https://news.
ycombinator.com/item?id=9925951.
[6] Image hashing. https://github.com/jenssegers/imagehash/.
[7] Lookout advances mobile phishing protection amidst growing enterprise risk.
https://goo.gl/NzBkSN/.
[8] NLTK: Natural language toolkit. https://www.nltk.org/.
[9] PhishTank. https://www.phishtank.com/.
[10] Puppeteer: Headless chrome node api. https://github.com/GoogleChrome/
dnstwist/.
puppeteer/.
[11] Selenium automates browsers. https://www.seleniumhq.org/.
[12] Tesseract
https://github.com/tesseract-ocr/tesseract/wiki/4.
accuracy.
0-Accuracy-and-Performance.
[13] Tesseract: open source ocr engine. https://github.com/tesseract-ocr/tesseract.
[14] Unicode confusables summary.
http://www.unicode.org/Public/security/
revision-03/confusablesSummary.txt.
[15] URL-crazy: Generate and test domain typos and variations. https://www.
morningstarsecurity.com/research/urlcrazy.
[16] VirusTotal. https://www.virustotal.com/.
[17] Phishing activity trends report (4th quarter 2017). APWG, 2017.
[18] 2018 data breach investigations reprot. verizon Inc., 2018.
[19] 2018 internet security threat report. Symantec Inc., 2018.
[20] Afroz, S., and Greenstadt, R. Phishzoo: Detecting phishing websites by looking
at them. In Proc. of ICSC (2011).
[21] Agten, P., Joosen, W., Piessens, F., and Nikiforakis, N. Seven months’ worth
of mistakes: A longitudinal study of typosquatting abuse. In Proc. of NDSS (2015).
[22] Bird, S., and Loper, E. NLTK: the natural language toolkit. In Proc. of ACL
(2004).
[23] Blum, A., Wardman, B., Solorio, T., and Warner, G. Lexical feature based
phishing url detection using online learning. In Proc. of AISec (2010).
ments through image-based object recognition.
(2015).
[24] Borgolte, K., Kruegel, C., and Vigna, G. Meerkat: Detecting website deface-
In Proc. of USENIX Security
[25] Carlini, N., and Wagner, D. Towards evaluating the robustness of neural
[28] Cui, Q., Jourdan, G.-V., Bochmann, G. V., Couturier, R., and Onut, I.-V.
[29] Dunlop, M., Groat, S., and Shelly, D. Goldphish: Using images for content-
[30] Egele, M., Stringhini, G., Kruegel, C., and Vigna, G. Towards detecting
In Proc. of IEEE Transactions on
[31] Englehardt, S., and Narayanan, A. Online tracking: A 1-million-site measure-
networks. In Proc. of S&P (Okland) (2017).
[26] Choi, H., Zhu, B. B., and Lee, H. Detecting malicious web links and identifying
their attack types. In Proc. of USENIX Conference on Web Application Development
(2011).
[27] Corona, I., Biggio, B., Contini, M., Piras, L., Corda, R., Mereu, M., Mureddu,
G., Ariu, D., and Roli, F. Deltaphish: Detecting phishing webpages in compro-
mised websites. In Proc. of ESORICS (2017).
Tracking phishing attacks over time. In Proc. of WWW (2017).
based phishing analysis. In Proc. of ICIMP (2010).
compromised accounts on social networks.
Dependable and Secure Computing (TDSC) (2017).
ment and analysis. In Proc. of CCS (2016).
Adversarial examples for malware detection. In Proc. of ESORICS (2017).
phishing kits. In Proc. of CCS (2016).
[34] He, W., Wei, J., Chen, X., Carlini, N., and Song, D. Adversarial example
defenses: Ensembles of weak defenses are not strong. In Proc of WOOT (2017).
[35] Holgers, T., Watson, D. E., and Gribble, S. D. Cutting through the confusion:
A measurement study of homograph attacks. In USENIX ATC (2006).
spoofing protocols in email systems. In Proc. of SecDev (2018).
[36] Hu, H., Peng, P., , and Wang, G. Towards understanding the adoption of anti-
[32] Grosse, K., Papernot, N., Manoharan, P., Backes, M., and McDaniel, P.
[33] Han, X., Kheir, N., and Balzarotti, D. Phisheye: Live monitoring of sandboxed
[37] Hu, H., and Wang, G. End-to-end measurements of email spoofing attacks. In
Proc. of USENIX (2018).
[38] Kaplan, S., Livshits, B., Zorn, B., Seifert, C., and Curtsinger, C. "nofus:
Automatically detecting" + string.fromcharcode(32) + "obfuscated ".tolowercase()
+ "javascript code". Tech. Rep. MSR-TR-2011-57, Microsoft Research, May 2011.
[39] Khonji, M., Iraqi, Y., and Jones, A. Phishing detection: a literature survey. IEEE
Communications Surveys & Tutorials 15, 4 (2013), 2091–2121.
[40] Kintis, P., Miramirkhani, N., Lever, C., Chen, Y., Romero-Gómez, R.,
Pitropakis, N., Nikiforakis, N., and Antonakakis, M. Hiding in plain sight:
A longitudinal study of combosquatting abuse. In Proc. of CCS (2017).
[41] Kountouras, A., Kintis, P., Lever, C., Chen, Y., Nadji, Y., Dagon, D., Anton-
akakis, M., and Joffe, R. Enabling network security through active dns datasets.
In Proc. of RAID (2016).
[42] Kumaraguru, P., Rhee, Y., Acqisti, A., Cranor, L. F., Hong, J., and Nunge,
E. Protecting people from phishing: the design and evaluation of an embedded
training email system. In Proc. of CHI (2007).
A case study on the google’s phishing pages filter. In Proc. of WWW (2016).
[44] Luo, M., Starov, O., Honarmand, N., and Nikiforakis, N. Hindsight: Under-
standing the evolution of ui vulnerabilities in mobile browsers. In Proc. of CCS
(2017).
[45] Ma, J., Saul, L. K., Savage, S., and Voelker, G. M. Learning to detect malicious
[43] Liang, B., Su, M., You, W., Shi, W., and Yang, G. Cracking classifiers for evasion:
[52] Niu, Y., Hsu, F., and Chen, H.
[48] Meng, D., and Chen, H. Magnet: a two-pronged defense against adversarial
[49] Miramirkhani, N., Starov, O., and Nikiforakis, N. Dial one for scam: A
urls. ACM Transactions on Intelligent Systems and Technology (TIST) (2011).
[46] Marchal, S., Saari, K., Singh, N., and Asokan, N. Know your phish: Novel
techniques for detecting phishing sites and their targets. In Proc. of ICDCS (2016).
[47] Medvet, E., Kirda, E., and Kruegel, C. Visual-similarity-based phishing detec-
tion. In Proc. of SecureComm (2008).
examples. In Proc of CCS (2017).
large-scale analysis of technical support scams. In Proc. of NDSS (2017).
[50] Moore, T., and Edelman, B. Measuring the perpetrators and funders of ty-
posquatting. In International Conference on Financial Cryptography and Data
Security (2010).
[51] Nikiforakis, N., Van Acker, S., Meert, W., Desmet, L., Piessens, F., and Joosen,
W. Bitsquatting: Exploiting bit-flips for fun, or profit? In Proc. of WWW (2013).
iphish: Phishing vulnerabilities on consumer
electronics. In Proc. of UPSEC (2008).
[53] Oest, A., Safei, Y., Doupe, A., Ahn, G.-J., Wardman, B., and Warner, G. Inside
a phisher’s mind: Understanding the anti-phishing ecosystem through phishing
kit analysis. In Proc. of eCrime (2018).
[54] Papernot, N., McDaniel, P., Goodfellow, I., Jha, S., Celik, Z. B., and Swami,
A. Practical black-box attacks against deep learning systems using adversarial
examples. In Proc. of AsiaCCS (2017).
[55] Prashanth Chandramouli, S., Bajan, P.-M., Kruegel, C., Vigna, G., Zhao, Z.,
Doup, A., and Ahn, G.-J. Measuring e-mail header injections on the world wide
web. In Proc. of SAC (2018).
[56] Reaves, B., Scaife, N., Tian, D., Blue, L., Traynor, P., and Butler, K. R. Send-
ing out an sms: Characterizing the security of the sms ecosystem with public
gateways. In Proc. of S&P (Okland) (2016).
CoRR abs/1802.05385 (2018).
[58] Szurdi, J., Kocso, B., Cseh, G., Spring, J., Felegyhazi, M., and Kanich, C. The
long" taile" of typosquatting domain names. In Proc. of USENIX Security (2014).
[59] Tian, K., Li, Z., Bowers, K., and Yao, D. FrameHanger: Evaluating and classifying
iframe injection at large scale. In Proc. of SecureComm (2018).
webpages based on visual similarity. In Proc. of WWW (2005).
[61] Xiang, G., Hong, J., Rose, C. P., and Cranor, L. Cantina+: A feature-rich
machine learning framework for detecting phishing web sites. ACM Transactions
on Information and System Security (TISSEC) (2011).
[62] Xu, W., Evans, D., and Qi, Y. Feature squeezing: Detecting adversarial examples
in deep neural networks. In Proc. of NDSS (2018).
malicious javascript code. In Proc. of AsiaCCS (2013).
detecting phishing web sites. In Proc. of WWW (2007).
[57] Song, C., and Shmatikov, V. Fooling OCR systems with adversarial text images.
[60] Wenyin, L., Huang, G., Xiaoyue, L., Min, Z., and Deng, X. Detection of phishing
[64] Zhang, Y., Hong, J. I., and Cranor, L. F. Cantina: a content-based approach to
Jstill: mostly static detection of obfuscated
[63] Xu, W., Zhang, F., and Zhu, S.