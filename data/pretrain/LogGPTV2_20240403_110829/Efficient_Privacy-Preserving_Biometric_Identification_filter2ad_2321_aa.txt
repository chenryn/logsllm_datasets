title:Efficient Privacy-Preserving Biometric Identification
author:Yan Huang and
Lior Malka and
David Evans and
Jonathan Katz
EfÔ¨Åcient Privacy-Preserving Biometric IdentiÔ¨Åcation
Yan Huang
U. of Virginia
PI:EMAIL
Abstract
Lior Malka
Intel‡¢©
PI:EMAIL
We present an efÔ¨Åcient matching protocol that can be used
in many privacy-preserving biometric identiÔ¨Åcation systems
in the semi-honest setting. Our most general technical con-
tribution is a new backtracking protocol that uses the by-
product of evaluating a garbled circuit to enable efÔ¨Åcient
oblivious information retrieval. We also present a more ef-
Ô¨Åcient protocol for computing the Euclidean distances of
vectors, and optimized circuits for Ô¨Ånding the closest match
between a point held by one party and a set of points held
by another. We evaluate our protocols by implementing a
practical privacy-preserving Ô¨Ångerprint matching system.
1
Introduction
Matching biometric data is critical to many identiÔ¨Å-
cation systems including Ô¨Ångerprint- and face-recognition
systems widely used in law enforcement. Such systems
typically consist of a server-side database that holds a set
of biometric readings (with associated records), and clients
who submit candidate biometric readings to the server for
identiÔ¨Åcation. Formally, we assume a server who holds
a database vi piM
i1, where vi denotes the biometric data
corresponding to some identity proÔ¨Åle pi, and a client who
holds a biometric reading vﬂ∞ and wants to learn the identity
pi‡¢© for which vi‡¢© is the closest match to vﬂ∞ with respect to
some metric (e.g., Euclidean distance), assuming this match
is ‚Äúclose enough‚Äù (speciÔ¨Åcally, within some distance pa-
rameter Œµ).
Our work focuses on privacy-preserving biometric iden-
tiÔ¨Åcation. The goal is to enable biometric identiÔ¨Åcation of
the sort described above without revealing any information
about the client‚Äôs biometric data to the server, and without
disclosing anything about the database to the client (other
than the closest match, if within distance Œµ, or the non-
existence of any close match). We assume both parties are
semi-honest; namely, they are assumed to execute the proto-
‡¢©Work done while at the University of Maryland.
David Evans
U. of Virginia
PI:EMAIL
Jonathan Katz
U. of Maryland
PI:EMAIL
col as speciÔ¨Åed but may try to learn additional information
from the transcript of the protocol execution.
Several researchers have considered similar problems in
the context of face recognition [5, 20, 15] and Ô¨Ångerprint
matching [1] (see Section 8 for further details). A com-
mon structure in those works is to start with a distance-
computation phase in which the distances d1    dM be-
tween the candidate vﬂ∞ and each of the potential matches
vi are implicitly computed. At the end of this phase
one party holds M random masks r1    rM and the other
party holds d1  r1    dM  rM. The distance-computation
phase is followed by a matching phase that computes i‡¢© 
argminid1d2    dM. Finally there is a retrieval phase
(which in some previous work is combined with the match-
ing phase) that computes the output for the client: either a
proÔ¨Åle pi‡¢© (if di‡¢©  Œµ) or  (if di‡¢© ‡£ô Œµ).
1.1 Our Contributions
We describe new protocols that substantially reduce the
computation and bandwidth costs of each of the phases in
typical privacy-preserving biometric matching protocols.
Distance-computation phase (Section 4). We present a
fast, oblivious, Euclidean-distance protocol appropriate for
use in many privacy-preserving applications. Our protocol
builds on a previous Euclidean-distance protocol by Erkin
et al. [5] and adopts the packing technique from Sadeghi et
al. [20]. We provide an order-of-magnitude improvement
in both computation time and bandwidth by using packing
more aggressively.
Matching phase (Section 5). We use Yao‚Äôs garbled-circuit
technique [22] to perform the matching phase. (However, in
our work we do not compute i‡¢© explicitly; rather, this phase
merely provides the client with sufÔ¨Åcient information to re-
cover the corresponding record in the next phase.) Here,
each gate of a circuit is associated with four ciphertexts (a
garbled table) by one party. The collection of garbled tables
(the garbled circuit) is sent to the other party, who uses in-
formation obtained via oblivious transfer to learn the output
of the function on the parties‚Äô inputs. The computation and
communication costs for both parties are directly related to
the number of gates in the circuit. By carefully integrat-
ing the subtraction and comparison computations, and by
avoiding the need to propagate indices, we provide a circuit
that uses dramatically fewer gates than prior work.
Retrieval phase (Section 6). Our most novel contribution is
a new backtracking technique that allows oblivious recov-
ery of the record pi‡¢© corresponding to the closest matching
vector vi‡¢©. Separating this retrieval step from the match-
ing phase turns out to be more efÔ¨Åcient that computing
matching-plus-retrieval as one larger garbled circuit. The
reason is simple: the record information can be quite large,
and so including the records directly in the garbled circuit
would dramatically increase the complexity and cost of the
computation. Our main insight is to use the intermediate
wire labels, a by-product of evaluating the garbled circuit
in the matching phase, to efÔ¨Åciently perform oblivious re-
trieval.
We have implemented our protocols to build an efÔ¨Å-
cient privacy-preserving Ô¨Ångerprint-matching system. For
the underlying matching algorithm we could have used
the same PCA (principal component analysis) technique
used in several privacy-preserving face-recognition sys-
tems [5, 20]; however, this would have required a projection
phase in addition to the distance-computation phase which
would degrade performance.
Instead, we use the Finger-
Code technique [7] (also used by Barni et al. [1]), which
only requires secure computation of Euclidean distances.
Aspects of our implementation are described in each of the
relevant sections, and we report on the overall performance
of the system in Section 7.
sender to send one of a possible set of values to a receiver;
the receiver selects and learns only one of the values, and
the sender does not learn which value the receiver selected.
A 1-out-of-2 oblivious transfer protocol, denoted OT2
1, al-
lows a sender holding strings b0 and b1 to interact with a
receiver, who holds a selection bit œÉ ‡¢† 01, so the re-
ceiver learns bœÉ while neither the sender nor receiver learn
anything else.
Garbled circuits. Yao introduced the idea of using gar-
bled circuits to perform secure two-party computation [22];
Lindell and Pinkas provide a full description and complete
proof of security [10]. Garbled circuits enable two semi-
honest parties, P0 and P1, holding inputs x0 and x1, respec-
tively, to compute f x0x1 for an arbitrary function f with-
out leaking any information about their respective inputs be-
yond what is revealed by the outcome itself. The idea is for
one party (the circuit generator) to represent boolean wire
values on each wire with a cryptographic key called that
wire‚Äôs wire label, and to replace each gate‚Äôs truth table with
a corresponding garbled gate. Garbled gates are constructed
by encrypting outgoing wire labels for each gate using an
appropriate combination of the two input wire labels. The
second party (the circuit evaluator) obtains the input wire
labels using oblivious transfer, after which the evaluator can
evaluate the rest of the circuit without any further commu-
nication. For each garbled gate, the evaluator can decrypt
exactly one entry for the outgoing wire based on the wire
labels she knows for the two input wires. The circuit gen-
erator also sends the mapping from wire labels to boolean
values for any output wires, so the evaluator can map its
Ô¨Ånal output-wire labels to boolean values.
2 Background
3 System Overview
the encryption of a using public key pk as(cid:74)a(cid:75)pk, or sim-
ply(cid:74)a(cid:75) when the public key is clear from the context. An
encryption scheme is additively homomorphic if given(cid:74)a(cid:75)
and(cid:74)b(cid:75) it is possible to compute(cid:74)a  b mod p(cid:75), for some
given(cid:74)a(cid:75) and an integer c, one can also compute(cid:74)c a(cid:75).
integer p which may depend on pk, without the decryption
key. (From now on, we leave p implicit.) It follows that
The primary cryptographic tools we use are homomor-
phic encryption, oblivious transfer, and garbled circuits. We
summarize each of these standard techniques brieÔ¨Çy here.
Homomorphic encryption. Given a number a, we write
There are many public-key cryptosystems satisfying this
property. In our implementation we use Paillier‚Äôs cryptosys-
tem [16]. In this scheme, the public key is a modulus n;
encryption of m ‡¢† ‡°ån is done by choosing a random r ‡¢† ‡°å‡¢©
n
and computing 1  nm  rn mod n2.
Oblivious transfer. An oblivious transfer protocol allows a
Although the techniques we propose could be applied to
many different biometric-matching systems, our implemen-
tation targets Ô¨Ångerprint recognition.
Fingerprint recognition (or Ô¨Ångerprint identiÔ¨Åcation) is
the task of searching for the best match in a database of
Ô¨Ångerprints with a given candidate Ô¨Ångerprint. In contrast,
Ô¨Ångerprint authentication seeks to determine if a candidate
Ô¨Ångerprint matches a particular registered Ô¨Ångerprint. Tech-
niques for matching Ô¨Ångerprints have been extensively stud-
ied, and we only provide a brief summary here; Maltoni et
al. [12] provides more comprehensive information.
Depending on the sensing technology, Ô¨Ångerprint im-
ages exhibit traits at different levels of image quality. At the
global level, ridge-lines shapes fall into one of several pat-
terns such as loop, whorl, and arch. At the local level, there
are about 150 different types of local ridge characteristics
(minute detail). At an even Ô¨Åner level, intra-ridge details
are identiÔ¨Åed and used in high-end Ô¨Ångerprint applications.
Figure 1. System Overview
In the last decade, many Ô¨Ångerprint-recognition techniques
have been developed that combine various features of the
Ô¨Ångerprint [2, 18, 19, 21]. Most of them involve sophisti-
cated training and classiÔ¨Åcation algorithms, which are not
suitable for developing an efÔ¨Åcient privacy-preserving Ô¨Ån-
gerprint recognition system.
In our work we use the Ô¨Ålterbank-based approach [3]
(also used by Barni et al. [1]) because it provides good accu-
racy and leads to an efÔ¨Åcient privacy-preserving protocol. In
this approach, Ô¨Ångerprints are represented by a FingerCode
derived from the raw Ô¨Ångerprint image. For our purposes,
it is important only to know that the FingerCode of each
Ô¨Ångerprint is an N-dimensional (typically N  640) feature
vector, each entry of which is an 8-bit integer. The dis-
tance between two Ô¨Ångerprints is deÔ¨Åned as the Euclidean
distance between the two corresponding feature vectors.
We assume a server (‚ÄúAlice‚Äù) holding a database that
contains M Ô¨Ångerprint feature vectors, each of which is as-
sociated with corresponding proÔ¨Åle information (e.g., name,
age, criminal record). Given a candidate Ô¨Ångerprint image,
a client (‚ÄúBob‚Äù) Ô¨Årst locally derives the associated Finger-
Code feature vector. An advantage of using the Ô¨Ålterbank-
based algorithm is that Ô¨Ångerprint images can be trans-
formed to their feature vector representation locally; hence,
each party can do the relevant image-processing on its own
using a standard image-processing program.
Our system design can be decomposed into the three
stages shown in Figure 1: a secure Euclidean-distance pro-
tocol (Section 4), a secure closest-match protocol (Sec-
tion 5), and an oblivious retrieval protocol (Section 6). In
our implementation, the Ô¨Årst two phases are each divided
into a preparation stage which can be performed off-line
(i.e., independently of the client‚Äôs candidate Ô¨Ångerprint) and
an on-line execution stage.
Looking only at the feature vectors (and ignoring the as-
sociated proÔ¨Åle records for now), we may view the server‚Äôs
database as an M   N matrix vi jM N, where each vi j is
an 8-bit integer. Each of the M row vectors, written as vi
1    vﬂ∞
(where 1 ‡£ò i ‡£ò M), represents the vector corresponding to
some Ô¨Ångerprint. The database can also be viewed as N col-
umn vectors c1    cN. The client‚Äôs input is denoted by a
vector vﬂ∞  vﬂ∞
j is an 8-bit integer.
Our Euclidean-distance protocol is based on an addi-
tively homomorphic encryption scheme. The server‚Äôs in-
put to this protocol is the matrix vi jM N, and the client‚Äôs
input is a single feature vector vﬂ∞
N. The squared
Euclidean distance between vi and vﬂ∞ is denoted di:
N, where each vﬂ∞
1    vﬂ∞
di 
N
‚àë
j1
vi j ‡¢§ vﬂ∞
j2
1    dﬂ∞
M, where dﬂ∞
At the end of this protocol, the server obtains a list of M
random numbers r  r1    rM and the client obtains dﬂ∞ 
dﬂ∞
(Addition here is done
over the integers, but statistical masking of the di values
can be achieved by setting the bit-length of ri large enough
relative to the maximum possible value of di.)
i  di  ri.
In the second phase, the client and server (implicitly)
compute the minimum difference between the candidate Ô¨Ån-
gerprint vector and the vectors in the database, if this dis-
tance is less than some threshold Œµ. If no Ô¨Ångerprint in the
database is within distance Œµ of the candidate Ô¨Ångerprint,
the client (implicitly) receives a ‚Äúno match‚Äù response; oth-
erwise, the client (implicitly) learns the index i‡¢© of the clos-
est match. We implement this phase using a garbled circuit
which takes as inputs r and dﬂ∞ as output by the previous
phase. Conceptually, the garbled circuit computes dﬂ∞ ‡¢§ r to
produce d=d1    dM, which is then fed into a minimum
circuit to Ô¨Ånd the minimal component di‡¢©. Finally, di‡¢© is
compared to Œµ to see if it is a close-enough match. For ef-
Ô¨Åciency, our design combines the difference, comparison,
and threshold check into one circuit.
In the Ô¨Ånal phase, the client learns the record associated
with the closest match (if a close enough match exists). This
is done using the wire labels from the garbled circuit used