L2
0.045
0.066
0.109
Pixel
Lin f
0.201
0.200
0.200
tack succeeds. As shown, even for the lowest stealthiness
level (λ = 10−4) in our experiment, the perturbations are still
smaller than some real-world dirty patterns such as the left
one in Fig. 8. In addition, the perturbations for all these 3
stealthiness levels are a lot less intrusive than those in previ-
ous physical-world adversarial attacks in the image space [5],
e.g., in Fig. 9. Among the successful cases, the average suc-
cess time is all under 0.91 sec, which is substantially lower
than 2.5 sec, the required success time. This means that even
for a fully attentive human driver who is always able to take
over as soon as the attack starts to take effect, the average
reaction time is still far from enough to prevent the damage. A
more detailed result discussion is in our extended version [38].
Stealthiness user study. To more rigorously evaluate the
attack stealthiness, we conduct a user study with 100 partici-
pants, and ﬁnd that (1) even for the lowest stealthiness level
at λ = 10−4, only less than 25% of the participants decide
to take over the driving before the attack starts to take effect.
This suggests that the majority of human drivers today do not
treat dirty road patches as road conditions where ALC sys-
tems cannot handle; and (2) at 2.5 seconds before the attack
succeeds, the attack patches with λ = 10−2 and 10−3 appear
to be as innocent as normal clean road patches to human
drivers, with only less than 15% participants deciding to take
over. More detailed results and discussion are in Appendix B.
From these results, the stealthiness level with λ = 10−3
strikes an ideal balance between attack effectiveness and
stealthiness: it does not increase driver suspicion compared
to even a benign clean road patch at 2.5 seconds before our
attack succeeds, while having no sacriﬁce of attack effec-
tiveness as shown in Table 2. We thus use it as the default
stealthiness conﬁguration in our following experiments.
3316    30th USENIX Security Symposium
USENIX Association
λ=10-4λ=10-3λ=10-25.2 Comparison with Baseline Attacks
Evaluation methodology. To understand the beneﬁts of our
current design choices over possible alternatives, we evalu-
ate against 2 baseline attack methods: (1) single-frame EoT
attack, which still uses our lane-bending objective function
but optimizes for the EoT (Expectation over Transformation)
of the patch view (e.g., different positions/angles) in a sin-
gle camera frame, and (2) drawing-lane-line attack, which
directly draws straight solid white lane line instead of placing
dirty road patches. EoT is a popular design in prior works to
improve attack robustness across sequential frames [29, 30].
Thus, comparing with such a baseline attack can evaluate the
beneﬁt of our motion model based input generation design
(§4.2) in addressing the challenge of frame inter-dependencies
due to attack-inﬂuenced vehicle actuation (C2 in §3.3).
The drawing-lane-line attack is designed to evaluate the
type of ALC attack vector identiﬁed in the prior work by
Tencent [6], which uses straightly-aligned white stickers to
fool Tesla Autopilot on road regions without lane lines. In our
case, we perform evaluations in road regions with lane lines,
and use a more powerful form of it (directly drawing solid
lane lines) to understand the upper-bound attack capability of
this style of perturbation for ALC systems.
Experimental setup. For single-frame EoT attack, we ap-
ply random transformations of the patch in BEV via (1) lateral
and longitudinal position shifting. We apply up to ±0.735m
and ±0.285m for highway and local respectively, which are
their maximum in-lane lateral shifting from the lane center;
and (2) viewing angle changes. we apply up to ±5.8◦ changes,
the largest average angle deviations under possible real-world
trajectory variations based on our experiments (detailed in
our extended version [38]). For each scenario, we repeat the
experiments for each frame with a complete patch view (usu-
ally the ﬁrst 4 frames), and take the most successful one to
obtain the upper-bound effectiveness. Other settings are the
same as the DRP attack, e.g., λ = 10−3.
For the drawing-lane-line attack, we use the same perturba-
tion area (i.e., the patch area) as the others for a fair compari-
son. Speciﬁcally, we sample points every 20cm at the top and
bottom patch edges respectively, and form possible attacking
lane lines by connecting a point at the top with one at the
bottom. We exhaustively try all possible top and bottom point
combinations and take the most successful one. The attacking
lane lines are 10cm wide (a typical lane marking width [60])
with the same white color as the original lane lines.
Results. Table 3 shows the results under different patch
area lengths. As shown, the DRP attack always has the highest
attack success rate than these two baselines (with a ≥46%
margin). When the patch area length is shorter and thus the
perturbation capability is more limited, such advantage be-
comes larger; when the length is 12m, the success rates of
single-frame EoT attack and the drawing-lane-line attack
drops to 0% and 2.5%, while that for DRP is still 66%. This
shows that our motion model based input generation can in-
Table 3: Attack success rates of the DRP attack and 2 baseline
attacks under different patch area lengths.
Attack
DRP
Single-frame EoT
Drawing-lane-line
Patch Area Length
18m
24m
12m
66.25% 82.50% 90.75%
0.00%
2.50%
36m
100%
8.75%
21.25% 50.00%
13.75% 31.25% 53.75%
deed beneﬁt attack effectiveness, as it can more accurately syn-
thesize subsequent frame content based on attack-inﬂuenced
vehicle actuation, instead of the blind synthesis in EoT. Also
note that the single-frame EoT attack still uses our domain-
speciﬁc lane-bending objective function design. The drawing-
lane-line attack only has 2.5% success rate when the length
is 12m; the length used in the Tencent work is actually even
shorter (<5m) [6]. This shows that in the road regions with
lane lines, simply adding lane-line-style perturbations, espe-
cially a short one, can barely affect production ALC systems.
Instead, an attack vector with larger perturbation area, e.g., in
DRP attack, may be necessary.
5.3 Attack Robustness, Generality, and De-
ployability Evaluations
Robustness to run-time driving trajectory and angle de-
viations. As described in §4.3.4, the run-time victim driv-
ing trajectories and angles will be different from the motion
model predicted ones in attack generation time due to run-
time driving dynamics. To evaluate attack robustness against
such deviations, we use (1) 4 levels of vehicle position shift-
ing at each vehicle control step in attack evaluation time, and
(2) 27 vehicle starting positions to create a wide range of
approaching angles and distances to the patch, e.g., from (al-
most) the leftmost to the rightmost position in the lane. Our
attack is shown to maintains a high effectiveness (≥ 95%
success rate) even when the vehicle positions at the attack
evaluation time has 1m shifting on average from those at the
attack generation time at each control step. Details are in our
extended version [38].
Attack generality evaluation. To evaluate the generality
of our attack against LD models of different designs, ideally
we hope to evaluate on LD models from other production
ALC besides OpenPilot, e.g., from Tesla Autopilot. However,
OpenPilot is the only one that is currently open sourced. For-
tunately, we ﬁnd that the LD models in some older versions of
OpenPilot actually have different DNN designs, which thus
can also serve for our purpose. We evaluate on 3 versions of
LD models with large DNN architecture differences, and ﬁnd
that our attack is able to achieve ≥90% success rates against
all 3 LD models, with an average attack transferability of 63%.
More details are in our extended version [38].
Attack deployability evaluation. We evaluate the attack
deployability by estimating the required efforts to deploy the
attack road patch. We perform experiments using our multi-
piece patch attack mode design (§4.3.4), and ﬁnd that the
attack success rate can be 93.8% with only 8 pieces of quickly-
USENIX Association
30th USENIX Security Symposium    3317
deployable road patches, each requiring only 5-10 sec for 2
people to deploy based on videos of adhesive patch deploy-
ment [61]. More details are in our extended version [38].
5.4 Physical-World Realizability Evaluation
While we have shown high attack effectiveness, robustness,
and generality on real-world driving traces, the experiments
are performed by synthesizing the patch appearances digitally,
which is thus still different from the patch appearances in the
physical world. As discussed in §4.3.4, there are 3 main prac-
tical factors that can affect the attack effectiveness in physical
world: (1) the lighting condition, (2) printer color accuracy,
and (3) camera sensing capability. Thus, in this section we
perform experiments to understand the physical-world attack
realizability against these 3 main practical factors.
Evaluation methodology: miniature-scale experiments.
To perform the DRP attack, a real-world attacker can pre-
tend to be road workers and place the malicious road patch
on public roads. However, due to the access limit to private
testing facilities, we cannot do so ethically and legally on
public roads with a real vehicle. Thus, we try our best to
perform such evaluation by designing a miniature-scale ex-
periment, where the road and the malicious road patch are
ﬁrst physically printed out on papers and placed according to
the physical-world attack settings but in miniature scale. Then
the real ALC system camera device is used to get camera in-
puts from such a miniature-scale physical-world setting. Such
miniature-scale evaluation methodology can capture all the 3
main practical factors in the physical-world attack setting, and
thus can sufﬁciently serve for the purpose of this evaluation.
Experimental setup. As shown in Fig. 10, we create a
miniature-scale road by printing a real-world high-resolution
BEV road texture on multiple ledger-size papers and con-
catenating them together to form a long straight road. In
the attack evaluation time, we create the miniature-scale ma-
licious road patch using the same method, and place it on
top of the miniature-scale road following our DRP attack de-
sign. The patch is printed with a commodity printer: RICOH
MP C6004ex Color Laser Printer. We mount EON, the ofﬁ-
cial OpenPilot dashcam device, on a tripod and face it to the
miniature-scale road. The road size, road patch size, and the
EON mounting position are carefully calculated to represent
OpenPilot installed on a Toyota RAV4 driving on a standard
3.6-meter wide highway road at 1:12 scale. We also create
different lighting conditions with two studio lights. The patch
size is set to represent a 4.8me wide and 12m long one in the
real world scale. The other settings are the same as in §5.3.
Evaluation metric. Since the camera is mounted in a static
position, we evaluate the attack effectiveness directly using
the steering angle decision at the frame level instead of the
lateral deviation used in previous sections. This is equiva-
lent from the attack effectiveness point of view since the
large lateral deviation is essentially created by a sequence
of large steering angle decisions at the frame level. Speciﬁ-
cally, we ﬁrst ﬁnd the camera frame that has the same relative
position between the camera and the patch as that in the
miniature-scale experimental setup. Then we compare its de-
signed steering angle at the attack generation time and its
observed steering angle that the ALC system in OpenPilot
intends to apply to the vehicle in the miniature-scale exper-
iment. Thus, the more similar these two steering angles are,
the higher realizability our attack has in the physical world.
Results. Fig. 11 shows a visualization of the lane detection
results of the benign and attacked scenarios in the miniature-
scale experiment using the OpenPilot’s ofﬁcial visualization
tool. As shown, in the benign scenario, both detected lane
lines align accurately with the actual lane lines, and the de-
sired driving path is straight as expected. However, when the
malicious road patch is placed, it bends the detected lane lines
signiﬁcantly to the left and causes the desired driving path
to be curving to the left, which is exactly the designed attack
effect of our lane-bending objective function (§4.3.2). In this
case, the designed steering angle is 23.4◦ to the left at the
digital attack generation time, and the observed one in the
physical miniature-scale experiment is 24.5◦ to the left, which
only differs by 4.7%. In contrast, in the benign scenario the
observed steering angle for the same frame is 0.9◦ to the right.
Robustness under different lighting conditions. We re-
peat this experiment under 12 lighting conditions ranging
from 15 lux (corresponding to sunset/sunrise) to 1210 lux
(corresponding to midday of overcast days). The results show
that the same attack patch above is able to maintain a desired
steering angle of 20-24◦ to the left under all 12 lighting con-
ditions, which are all signiﬁcantly different from the benign
case (0.9◦ to right). Details are in our extended version [38].
Robustness to different viewing angles. We evaluate the
robustness from 45 different viewing angles created by differ-
ent distances to the patch and lateral offsets to the lane center.
Our results show that our attack always achieves over 23.4◦
to the left from all viewing angles. We record videos in which
we dynamically change viewing angles in a wide range while
showing real-time lane detection results under attack, avail-
able at https://sites.google.com/view/cav-sec/drp-attack/.
6
To understand the safety impact, we perform software-in-the-
loop evaluation on LGSVL, a production-grade autonomous
driving simulator [48]. We overcame several engineering chal-
lenges in enabling this setup, which are detailed in our ex-
tended version [38] and open-sourced via our website [10].
Evaluation scenarios. We construct 2 attack scenarios for
highway and local road settings respectively, as shown in
Fig. 12. For the former, we place a concrete barrier on the
left, and for the latter, we place a truck driving on an opposite
direction lane. The attack goals are to hit the concrete barrier
or the truck. Detailed setup are in Table 4.
Software-in-the-Loop Simulation
Experimental setup and evaluation metrics. We per-
form evaluation on OpenPilot v0.6.6 with the Toyota RAV4
3318    30th USENIX Security Symposium
USENIX Association
Figure 10: Miniature-scale experi-
ment setup. Road texture/patch are
printed on ledger-size papers.
Figure 11: Lane detection and steering angle
decisions in benign and attacked scenarios
in the miniature-scale experiment.
Figure 12: Software-in-the-loop simulation
scenarios and driver’s view 2.5 sec before
attack succeeds. Larger images are in [38]
Table 4: Simulation scenario conﬁgurations and evaluation
results. Lane widths and vehicle speeds are based on stan-
dard/common ones in the U.S. [62]. Simulation results with-
out attack are conﬁrmed to have 0% success rates with ≤0.018
m (std: ≤9e-4) average maximum deviations.