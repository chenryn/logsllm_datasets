### L2 Perturbation Analysis

- **Pixel**: 0.045, 0.066, 0.109
- **Lin f**: 0.201, 0.200, 0.200

The attack succeeds even at the lowest stealthiness level (λ = 10−4). The perturbations are smaller than some real-world dirty patterns, as shown in Fig. 8. Additionally, the perturbations for all three stealthiness levels are less intrusive compared to previous physical-world adversarial attacks in the image space [5], as illustrated in Fig. 9. Among the successful cases, the average success time is under 0.91 seconds, which is significantly lower than the required 2.5 seconds. This indicates that even a fully attentive human driver would not have enough reaction time to prevent the damage. A more detailed discussion of the results can be found in our extended version [38].

### Stealthiness User Study

To rigorously evaluate the attack's stealthiness, we conducted a user study with 100 participants. The findings are:

1. **Low Stealthiness Level (λ = 10−4)**: Less than 25% of participants decided to take over driving before the attack took effect. This suggests that most human drivers do not recognize dirty road patches as conditions that ALC systems cannot handle.
2. **Attack Patches (λ = 10−2 and 10−3)**: At 2.5 seconds before the attack succeeds, these patches appear as innocent as normal clean road patches to human drivers, with only less than 15% of participants deciding to take over.

More detailed results and discussions are provided in Appendix B. The stealthiness level with λ = 10−3 strikes an ideal balance between attack effectiveness and stealthiness, as it does not increase driver suspicion compared to a benign clean road patch at 2.5 seconds before the attack, while maintaining high attack effectiveness (Table 2). Therefore, we use λ = 10−3 as the default stealthiness configuration in subsequent experiments.

### Comparison with Baseline Attacks

#### Evaluation Methodology

To understand the benefits of our current design choices, we evaluated against two baseline attack methods:
1. **Single-Frame EoT Attack**: Uses our lane-bending objective function but optimizes for the EoT (Expectation over Transformation) of the patch view in a single camera frame.
2. **Drawing-Lane-Line Attack**: Directly draws straight solid white lane lines instead of placing dirty road patches.

EoT is a common design in prior works to improve attack robustness across sequential frames [29, 30]. Comparing with this baseline evaluates the benefit of our motion model-based input generation design (§4.2) in addressing frame inter-dependencies due to attack-influenced vehicle actuation (C2 in §3.3).

The drawing-lane-line attack evaluates the type of ALC attack vector identified in prior work by Tencent [6], which uses straightly-aligned white stickers to fool Tesla Autopilot on road regions without lane lines. In our case, we perform evaluations in road regions with lane lines and use a more powerful form (directly drawing solid lane lines) to understand the upper-bound attack capability for ALC systems.

#### Experimental Setup

- **Single-Frame EoT Attack**: We apply random transformations of the patch in BEV via lateral and longitudinal position shifting (up to ±0.735m and ±0.285m for highway and local roads, respectively) and viewing angle changes (up to ±5.8°). For each scenario, we repeat the experiments for each frame with a complete patch view (usually the first 4 frames) and take the most successful one to obtain the upper-bound effectiveness. Other settings are the same as the DRP attack, e.g., λ = 10−3.
- **Drawing-Lane-Line Attack**: We use the same perturbation area as the others for a fair comparison. Specifically, we sample points every 20cm at the top and bottom patch edges and form possible attacking lane lines by connecting a point at the top with one at the bottom. We exhaustively try all possible top and bottom point combinations and take the most successful one. The attacking lane lines are 10cm wide (a typical lane marking width [60]) with the same white color as the original lane lines.

#### Results

Table 3 shows the results under different patch area lengths. The DRP attack consistently has the highest attack success rate compared to the baselines (with a ≥46% margin). When the patch area length is shorter, the advantage becomes larger. For example, when the length is 12m, the success rates for the single-frame EoT attack and the drawing-lane-line attack drop to 0% and 2.5%, respectively, while the DRP attack still achieves 66%. This demonstrates that our motion model-based input generation can indeed benefit attack effectiveness by more accurately synthesizing subsequent frame content based on attack-influenced vehicle actuation, rather than blind synthesis in EoT. The drawing-lane-line attack only has a 2.5% success rate when the length is 12m, indicating that simply adding lane-line-style perturbations, especially short ones, barely affects production ALC systems. Instead, an attack vector with a larger perturbation area, such as in the DRP attack, may be necessary.

### Attack Robustness, Generality, and Deployability Evaluations

#### Robustness to Run-Time Driving Trajectory and Angle Deviations

As described in §4.3.4, run-time victim driving trajectories and angles will differ from the motion model-predicted ones due to runtime driving dynamics. To evaluate attack robustness, we use:
1. **Four Levels of Vehicle Position Shifting**: At each vehicle control step during attack evaluation.
2. **Twenty-Seven Vehicle Starting Positions**: To create a wide range of approaching angles and distances to the patch.

Our attack maintains high effectiveness (≥95% success rate) even with 1m shifting on average from the predicted positions at each control step. Details are in our extended version [38].

#### Attack Generality Evaluation

To evaluate the generality of our attack against LD models of different designs, we ideally want to test on LD models from other production ALCs besides OpenPilot, e.g., Tesla Autopilot. However, OpenPilot is the only open-sourced one. Fortunately, older versions of OpenPilot have different DNN designs. We evaluated on three versions of LD models with large DNN architecture differences and found that our attack achieves ≥90% success rates against all three, with an average attack transferability of 63%. More details are in our extended version [38].

#### Attack Deployability Evaluation

We evaluated the attack deployability by estimating the required efforts to deploy the attack road patch. Using our multi-piece patch attack mode design (§4.3.4), we found that the attack success rate can be 93.8% with only 8 pieces of quickly-deployable road patches, each requiring only 5-10 seconds for two people to deploy based on videos of adhesive patch deployment [61]. More details are in our extended version [38].

### Physical-World Realizability Evaluation

While we have shown high attack effectiveness, robustness, and generality on real-world driving traces, the experiments were performed by synthesizing the patch appearances digitally. There are three main practical factors that can affect the attack effectiveness in the physical world:
1. **Lighting Condition**
2. **Printer Color Accuracy**
3. **Camera Sensing Capability**

#### Evaluation Methodology: Miniature-Scale Experiments

To perform the DRP attack, a real-world attacker can pretend to be road workers and place the malicious road patch on public roads. Due to access limitations, we designed a miniature-scale experiment where the road and the malicious road patch are physically printed on papers and placed according to physical-world attack settings but in miniature scale. The real ALC system camera device is used to get camera inputs from this setting, capturing all three main practical factors.

#### Experimental Setup

We created a miniature-scale road by printing a high-resolution BEV road texture on multiple ledger-size papers and concatenating them to form a long straight road. The miniature-scale malicious road patch was created using the same method and placed on the miniature-scale road following our DRP attack design. The patch was printed with a RICOH MP C6004ex Color Laser Printer. We mounted EON, the official OpenPilot dashcam device, on a tripod and faced it to the miniature-scale road. The road size, road patch size, and EON mounting position were calculated to represent OpenPilot installed on a Toyota RAV4 driving on a standard 3.6-meter wide highway road at 1:12 scale. Different lighting conditions were created with two studio lights. The patch size represented a 4.8m wide and 12m long one in the real world scale. Other settings were the same as in §5.3.

#### Evaluation Metric

Since the camera is mounted in a static position, we evaluated the attack effectiveness using the steering angle decision at the frame level. We compared the designed steering angle at the attack generation time with the observed steering angle that the ALC system in OpenPilot intends to apply to the vehicle in the miniature-scale experiment. The more similar these two steering angles, the higher the realizability of our attack in the physical world.

#### Results

Fig. 11 shows the lane detection results of the benign and attacked scenarios in the miniature-scale experiment using OpenPilot’s official visualization tool. In the benign scenario, both detected lane lines align accurately with the actual lane lines, and the desired driving path is straight. However, when the malicious road patch is placed, it bends the detected lane lines significantly to the left, causing the desired driving path to curve to the left, which is the designed attack effect. The designed steering angle was 23.4° to the left at the digital attack generation time, and the observed one in the physical miniature-scale experiment was 24.5° to the left, differing by only 4.7%. In contrast, in the benign scenario, the observed steering angle for the same frame was 0.9° to the right.

#### Robustness Under Different Lighting Conditions

We repeated the experiment under 12 lighting conditions ranging from 15 lux (sunset/sunrise) to 1210 lux (midday of overcast days). The results show that the same attack patch maintained a desired steering angle of 20-24° to the left under all 12 lighting conditions, significantly different from the benign case (0.9° to the right). Details are in our extended version [38].

#### Robustness to Different Viewing Angles

We evaluated the robustness from 45 different viewing angles created by different distances to the patch and lateral offsets to the lane center. Our results show that the attack always achieves over 23.4° to the left from all viewing angles. Videos showing real-time lane detection results under attack with dynamically changing viewing angles are available at https://sites.google.com/view/cav-sec/drp-attack/.

### Safety Impact Evaluation

To understand the safety impact, we performed software-in-the-loop evaluation on LGSVL, a production-grade autonomous driving simulator [48]. We overcame several engineering challenges in enabling this setup, detailed in our extended version [38] and open-sourced via our website [10].

#### Evaluation Scenarios

We constructed two attack scenarios for highway and local road settings, as shown in Fig. 12. For the highway, we placed a concrete barrier on the left, and for the local road, we placed a truck driving on an opposite direction lane. The attack goals were to hit the concrete barrier or the truck. Detailed setups are in Table 4.

#### Software-in-the-Loop Simulation

**Experimental Setup and Evaluation Metrics**: We performed the evaluation on OpenPilot v0.6.6 with the Toyota RAV4. The simulation results without attack confirmed 0% success rates with ≤0.018 m (std: ≤9e-4) average maximum deviations.

**Figures and Tables**:
- **Figure 10**: Miniature-scale experiment setup. Road texture/patch are printed on ledger-size papers.
- **Figure 11**: Lane detection and steering angle decisions in benign and attacked scenarios in the miniature-scale experiment.
- **Figure 12**: Software-in-the-loop simulation scenarios and driver’s view 2.5 sec before attack succeeds. Larger images are in [38].
- **Table 4**: Simulation scenario configurations and evaluation results. Lane widths and vehicle speeds are based on standard/common ones in the U.S. [62].