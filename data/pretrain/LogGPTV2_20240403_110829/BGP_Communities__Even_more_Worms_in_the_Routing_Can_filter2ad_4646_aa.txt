title:BGP Communities: Even more Worms in the Routing Can
author:Florian Streibelt and
Franziska Lichtblau and
Robert Beverly and
Anja Feldmann and
Cristel Pelsser and
Georgios Smaragdakis and
Randy Bush
BGP Communities: Even more Worms in the Routing Can
Florian Streibelt
Franziska Lichtblau
Robert Beverly
Max Planck Institute for Informatics
Max Planck Institute for Informatics
Naval Postgraduate School
Anja Feldmann
Cristel Pelsser
Max Planck Institute for Informatics
University of Strasbourg
Georgios Smaragdakis
TU Berlin
Randy Bush
Internet Initiative Japan
ABSTRACT
BGP communities are a mechanism widely used by operators to
manage policy, mitigate attacks, and engineer traffic; e.g., to drop
unwanted traffic, filter announcements, adjust local preference, and
prepend paths to influence peer selection.
Unfortunately, we show that BGP communities can be exploited
by remote parties to influence routing in unintended ways. The
BGP community-based vulnerabilities we expose are enabled by a
combination of complex policies, error-prone configurations, a lack
of cryptographic integrity and authenticity over communities, and
the wide extent of community propagation. Due in part to their
ill-defined semantics, BGP communities are often propagated far
further than a single routing hop, even though their intended scope
is typically limited to nearby ASes. Indeed, we find 14% of transit
ASes forward received BGP communities onward. Given the rich
inter-connectivity of transit ASes, this means that communities
effectively propagate globally. As a consequence, remote adversaries
can use BGP communities to trigger remote blackholing, steer traffic,
and manipulate routes even without prefix hijacking. We highlight
examples of these attacks via scenarios that we tested and measured
both in the lab as well as in the wild. While we suggest what can be
done to mitigate such ill effects, it is up to the Internet operations
community whether to take up the suggestions.
CCS CONCEPTS
· Networks → Routing protocols; Network measurement;
KEYWORDS
BGP, Communities, Exploits.
ACM Reference Format:
Florian Streibelt, Franziska Lichtblau, Robert Beverly, Anja Feldmann, Cristel
Pelsser, Georgios Smaragdakis, and Randy Bush. 2018. BGP Communities:
Even more Worms in the Routing Can. In Proceedings of IMC ’18. ACM, New
York, NY, USA, 14 pages. https://doi.org/ACM978-1-4503-5619-0/18/10
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than ACM
must be honored. Abstracting with credit is permitted. To copy otherwise, or republish,
to post on servers or to redistribute to lists, requires prior specific permission and/or a
fee. Request permissions from permissions@acm.org.
IMC ’18, October 31śNovember 2, 2018, Boston, MA, USA
© 2018 Association for Computing Machinery.
ACM ISBN https://doi.org/10.1145/3278532.3278557. . . $15.00
https://doi.org/ACM978-1-4503-5619-0/18/10
1 INTRODUCTION
The Border Gateway Protocol (BGP) communicates reachability
information between neighbors in the Internet. As the network
evolved, the complexity of connections, policies, and economics
drove the need for similarly complex and fine-grained routing poli-
cies [30, 44, 45]. As a result BGP, the de facto inter-domain routing
protocol, has been extended to help support such policies, and
provide value-added services. This work focuses on one such exten-
sion, BGP communities [25], and the implications of its real-world
implementation and deployment.
BGP communities are an optional transitive BGP attribute used
to łtagž advertisements. Operators frequently configure their in-
frastructure to take different actions depending on community tags.
So, communities provide not only a common label for groups of
prefixes, but also the ability to signal semantics between ASes and
between routers within an AS.
BGP communities are increasingly popular and are used to en-
code an ever-wider variety of information [28, 29, 34, 36]. Within
the last year the number of observable communities increased by
roughly 20%, see Section 4. As we describe in Section 2, communi-
ties are used to realize routing policies, bias path or peer selection,
steer traffic, etc. ASes also use communities to offer value-added
services for customers of ISPs and members of IXPs including tag-
ging of route ingress points and origins [4, 34, 37], selective ad-
vertisement [26, 35, 38, 52], traffic engineering [29, 48, 55], and
Remotely Triggered Blackholing (RTBH), i.e., dropping of traf-
fic to a target destination to mitigate Denial-of-Service-Attacks
(DoS) [27, 28, 36, 47]. Some providers even use communities to
encode latency information [6, 7].
While BGP communities are a seemingly innocuous feature, we
show that they can be used to influence routing in unintended ways.
Although the community-based attacks we consider require certain
conditions for success, we show that these conditions hold suffi-
ciently widely to warrant operational attention. Importantly, since
our extensive measurements show that communities are widely
propagated, see Section 4, an attacker exploiting the BGP communi-
ties of a particular AS need not be a directly connected peer. Further,
we demonstrate the feasibility of attacks both with and without
address space hijacking, suggesting that existing hijack detection
methods are insufficient to detect community-based attacks.
The attacks are the result of weaknesses in the current use and
implementation of BGP communities and community-based ser-
vices. Services enabled by communities are typically relevant only
between directly connected ASes ś for instance, an AS tagging a
279
IMC ’18, October 31–November 2, 2018, Boston, MA, USA
F. Streibelt et al.
backup route with a community to indicate that the remote AS
should use a lower local preference. Intuitively then, one might
expect communities to not propagate through multiple ASes, or
beyond their intended destination AS. However, via large-scale
analysis of passive BGP datasets, we find that more than 50% of the
BGP communities traverse more than four ASes and we see 10%
with a hop count of more than six, see Section 4.
To better assess the potential vulnerabilities enabled by BGP
communities, we design multiple scenarios that highlight inten-
tional, unintentional, and malicious community use in Section 5.
These include the ability to remotely signal blackholing of a prefix
for which the attacking AS is not responsible, traffic steering, and
route manipulation of another AS’s prefixes.
To demonstrate the vulnerabilities of community handling in
practice, we conducted two classes of experiments while ensuring
prior coordination and permission of all involved ASes and net-
works, see Section 7.1. First, we tested in the lab the conditions
that must hold to realize the attacks; finding default and recom-
mended configurations which enable the attacks we considered.
Using insights from the lab, we conducted experiments in the wild
to demonstrate the feasibility of these attacks in the real Internet.
Our evaluation in the wild shows that, unfortunately, some of the
BGP community-based attacks are easy to achieve. In some attack
settings, e.g., when the attacker is on the AS path, even without
hijacking and even if BGP route validation is used.
In summary, the community attacks we demonstrate are the
result of weaknesses in the current use and implementation of BGP
communities and community-based services including: community
propagation behavior, complex policies, error-prone configurations,
and a lack of cryptographic integrity and authenticity for commu-
nities. The main contributions of this paper are:
(1) We analyze BGP community propagation (Section 4) show-
ing that 2.2K networks forward received BGP communities
onward. We show that the majority of communities are prop-
agated through the entire Internet.
(2) We highlight this routing system can of worms and identify
sufficient conditions for community-based attacks on the
routing system (in Section 3).
(3) We sketch three scenarios of how BGP communities can be
misused (Section 5).
(4) We show that these attacks are possible in lab experiments
and in the wild (Sections 6 and 7). We highlight traffic drop-
ping due to remotely triggered blackholing, as well as remote
steering of traffic and route manipulation, possibly through
an interceptor, i.e., a rogue traffic monitor.
(5) We provide recommendations on the use of communities in
Section 8.
2 BGP COMMUNITIES: A PRIMER
Communities are an optional BGP attribute used as a signaling
mechanism within and between ASes [25]. While the 32-bit com-
munity field1 can take any value, by convention the first 16 bits rep-
resent the AS Number (ASN) of the entity defining the community,
1 With the advent of 32-bit ASNs, RFC8092 [42] introduces łlargež 96-bit communities.
In this paper, we focus on traditional 32-bit communities as they already offer many
intriguing scenarios. We leave an extended investigation of large, extended, and private
communities to future work.
p1 AS2, AS1, AS5
AS1:200
AS4
p1 AS3, AS3, AS3, AS1, AS5
AS3:103, 1:200
AS2
AS3
p1 AS1, AS5
AS1:200
p1 AS1, AS5
AS3:103, 1:200
AS1
p1: AS5
AS5
p2 AS6, ...
AS6:201
LAX
p2 ASy, ...
p3 AS6, ...
AS6:202
AMS
AS6:201
AS6:202
AS6
FRA
p3 ASx, ...
Figure 1: Policies with BGP communities: AS1 requests path
prepending by tagging AS3:103 towards AS3, and informs its
peers that prefix p1 is a customer prefix, by attaching com-
munity AS1:200. At the same time AS6 uses communities
AS6:201 and AS6:202 to signal where a route is learned.
while the last 16 bits indicate an action or label. The human-readable
community presentation format separates numeric representations
of the ASN and label with a colon, e.g., 3130:411.
There is only a small set of standardized well-known community
labels, e.g., NO_EXPORT (65535:65281) indicates a route should
not leave a BGP confederation, NO_PEER (65535:65284) [46] in-
dicates a route should not be propagated via a bilateral peering
link, and 65535:666 the standardized blackhole community [47].
These well-known communities cover a very small subset of all
communities in use (Section 4) and the complex routing policies
network operators realize via BGP communities. Indeed, an AS is
free to define (or leave undefined) the semantics of the 216 possi-
ble values for its communities. For example, in the previous ex-
ample, AS 3130 łownsž communities 3130:XXXX and may define
them arbitrarily. It is important to note, that there are no explicit
mechanisms to enforce this segmentation of the community space,
and any AS is free to add, delete, or modify the communities of
BGP advertisements that transit its control plane with impunity.
Indeed, even cryptographic proposals to protect the authenticity
and integrity of routing announcements do not cover BGP commu-
nities [24, 40, 41, 43, 50].
Communities can be added, deleted, or set by an AS on prefix
origination, ingress, or egress. Bonaventure et al. were the first to
propose a taxonomy of community values [23, 29] and identified
two main modes of operation. First, there are AS-internal commu-
nities that are set when receiving a route. Second, communities
labeled on egress are commonly used to signal or pass information
down the path. Such outbound communities carry a broad spectrum
of meanings, but most fall into the following categories according
to [29]: (a) route selection: adjustment of local_pref and AS path
prepending, (b) selective announcement: routes are labeled accord-
ing to which class of ASes (peer, transit) or even specific ASes they
should be announced to, (c) route suppression: same as (b), but
states explicitly to whom not to announce a route, (d) blackholing:
traffic towards this prefix, mostly /32s (in IPv4) should be dropped,
and (e) location: to signal where a route has been learned.
Figure 1 illustrates some ways communities are commonly used
in practice. Here, AS6 tags incoming routes with the geographic lo-
cation where the prefix was received, in this case from Los Angeles
280
BGP Communities
IMC ’18, October 31–November 2, 2018, Boston, MA, USA
(LAX) and Frankfurt (FRA). The first part of the community denotes
AS6, while the values 201 and 202 are chosen by AS6 to indicate
the location. Further, AS3 defines the received community AS3:103
to prepend its AS three times to path. AS1 can then perform route
selection by attaching the community AS3:103 to the announce-
ment of p1 to AS3. Once AS4 receives both announcements for p1,
it will prefer the shorter path via AS2.
The level of community support as well as documentation varies
considerably among providers. Some networks, especially large
ISPs [10, 11] and IXPs [1, 3, 4, 19] implement fine-grained seman-
tics using as many as hundreds of communities. Unfortunately,
there is no central database of record for providers’ communities
and associated actions, but rather scattered and incomplete docu-
mentation. In reality, this boils down to networks documenting the
communities relevant to their peers and customers on their web-
site and/or in Regional Internet Registries (RIR)/Internet Routing
Registries (IRR) [8]. We, therefore, lack a definitive understanding
of the global definitions and use of communities.
Further complicating the use of communities is that there is no
strict policy as to how a network should handle incoming routes
tagged with communities. Therefore, there is no consistent behavior
in forwarding BGP communities amongst different networks; e.g.,
some will remove all communities not understood by them, while
others will forward everything, and yet others have more complex
community propagation policies. We discuss implications of this
design choice in Section 3, and measure the extent of community
propagation in Section 4.
3 BGP COMMUNITIES: CAN OF WORMS
By allowing ASes to extend the semantics of routing updates, BGP
communities can significantly simplify policy implementation. As
such they are, as we underline in Section 4, heavily used in today’s
routing system. However, as we now show, they also present a can
of worms in the sense of ła situation that causes a lot of problems
for you when you start to deal with itž 2. We, then, discuss why
this is too often the case in today’s Internet.
3.1 Motivating Example Scenario
We use a common community service, AS path prepending, to show
the intended use of communities as well as noting the potential for
abuse, see Figure 2. AS1 announces the prefix p to AS2 and on to
AS4, which announces it to AS3 and AS5 and then on to AS6 (see
green hollow arrows). Consider traffic from AS6 to p. As the AS
paths via AS3 and AS5 have the same length, AS6 may choose to
route via AS3 (dotted blue line). AS3 offers AS path prepending via
the community AS3:×n to prepend n times; where n is typically
between 1 and 3. For example, NTT uses 2914:421 for prepending
once, 2914:422 for prepending twice, etc. The intended use of this
service is to enable AS3’s peers, e.g., AS4, to do traffic steering.
However, if some AS on the path, e.g., in this case, AS4, does not
filter communities, this service can also be (ab)used by other ASes
on the announcement path. Potential abuses include: AS2 or AS1
setting the community AS3:×3 on the announcement of prefix p;
causing AS3 to path prepend three times for the announcement
2Definition of łcan of wormsž according to Cambridge Advanced Learner’s Dictionary
& Thesaurus.
Attackee2
p
Attacker
p
Attackee1
AS5
AS3:x3
AS1
AS2
AS4
AS6
AS2 tags p with AS3:x3
AS3 applies path prepending
AS6 receives two paths: 
AS5 AS4 AS2 AS1
AS3 AS3 AS3 AS3 AS4 AS2 AS1
p
AS3:x3
AS3
Community Target
p
AS link
Announcement
Original Traffic Flow
Resulting Traffic Flow
Figure 2: BGP communities scenario: AS path prepending.
of p to AS6. This changes the traffic flow from AS6 toward AS1 to
choose the AS5 (shown via the solid blue line) as opposed to AS3.
The motivation for AS2 might be:
Malicious interceptor: If AS5 is a malicious interceptor [22, 57],
AS2 is able to steer traffic through it.
Impose additional cost: The link from AS5 to AS4 might be
more expensive than the link between AS3 and AS4. AS2 forces
AS4’s ingress traffic to the łexpensive linkž, that yields high cost
for AS4.
Performance improvement: If the service offered by AS6 is
popular and the performance via AS5 in terms of bandwidth
and/or delay is significantly better, AS2 may improve its service