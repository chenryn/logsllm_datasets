{"cloud.target.provider": {"dashed_name": "cloud-target-provider", "description": "Name of the cloud provider. Example values are aws, azure, gcp, or digitalocean.", "example": "aws", "flat_name": "cloud.target.provider", "ignore_above": 1024, "level": "extended", "name": "provider", "normalize": [], "original_fieldset": "cloud", "short": "Name of the cloud provider."}}
{"cloud.target.region": {"dashed_name": "cloud-target-region", "description": "Region in which this host, resource, or service is located.", "example": "us-east-1", "flat_name": "cloud.target.region", "ignore_above": 1024, "level": "extended", "name": "region", "normalize": [], "original_fieldset": "cloud", "short": "Region in which this host, resource, or service is located."}}
{"cloud.target.service.name": {"dashed_name": "cloud-target-service-name", "description": "The cloud service name is intended to distinguish services running on different platforms within a provider, eg AWS EC2 vs Lambda, GCP GCE vs App Engine, Azure VM vs App Server.\nExamples: app engine, app service, cloud run, fargate, lambda.", "example": "lambda", "flat_name": "cloud.target.service.name", "ignore_above": 1024, "level": "extended", "name": "service.name", "normalize": [], "original_fieldset": "cloud", "short": "The cloud service name."}}
{"container.cpu.usage": {"dashed_name": "container-cpu-usage", "description": "Percent CPU used which is normalized by the number of CPU cores and it ranges from 0 to 1. Scaling factor: 1000.", "flat_name": "container.cpu.usage", "level": "extended", "name": "cpu.usage", "normalize": [], "scaling_factor": 1000, "short": "Percent CPU used, between 0 and 1.", "type": "scaled_float"}}
{"container.disk.read.bytes": {"dashed_name": "container-disk-read-bytes", "description": "The total number of bytes (gauge) read successfully (aggregated from all disks) since the last metric collection.", "flat_name": "container.disk.read.bytes", "level": "extended", "name": "disk.read.bytes", "normalize": [], "short": "The number of bytes read by all disks.", "type": "long"}}
{"container.disk.write.bytes": {"dashed_name": "container-disk-write-bytes", "description": "The total number of bytes (gauge) written successfully (aggregated from all disks) since the last metric collection.", "flat_name": "container.disk.write.bytes", "level": "extended", "name": "disk.write.bytes", "normalize": [], "short": "The number of bytes written on all disks.", "type": "long"}}
{"container.id": {"dashed_name": "container-id", "description": "Unique container id.", "flat_name": "container.id", "ignore_above": 1024, "level": "core", "name": "id", "normalize": [], "short": "Unique container id."}}
{"container.image.hash.all": {"dashed_name": "container-image-hash-all", "description": "An array of digests of the image the container was built on. Each digest consists of the hash algorithm and value in this format: `algorithm:value`. Algorithm names should align with the field names in the ECS hash field set.", "example": "[sha256:f8fefc80e3273dc756f288a63945820d6476ad64883892c771b5e2ece6bf1b26]", "flat_name": "container.image.hash.all", "ignore_above": 1024, "level": "extended", "name": "image.hash.all", "normalize": ["array"], "short": "An array of digests of the image the container was built on."}}
{"container.image.name": {"dashed_name": "container-image-name", "description": "Name of the image the container was built on.", "flat_name": "container.image.name", "ignore_above": 1024, "level": "extended", "name": "image.name", "normalize": [], "short": "Name of the image the container was built on."}}
{"container.image.tag": {"dashed_name": "container-image-tag", "description": "Container image tags.", "flat_name": "container.image.tag", "ignore_above": 1024, "level": "extended", "name": "image.tag", "normalize": ["array"], "short": "Container image tags."}}
{"container.labels": {"dashed_name": "container-labels", "description": "Image labels.", "flat_name": "container.labels", "level": "extended", "name": "labels", "normalize": [], "object_type": "keyword", "short": "Image labels.", "type": "object"}}
{"container.memory.usage": {"dashed_name": "container-memory-usage", "description": "Memory usage percentage and it ranges from 0 to 1. Scaling factor: 1000.", "flat_name": "container.memory.usage", "level": "extended", "name": "memory.usage", "normalize": [], "scaling_factor": 1000, "short": "Percent memory used, between 0 and 1.", "type": "scaled_float"}}
{"container.name": {"dashed_name": "container-name", "description": "Container name.", "flat_name": "container.name", "ignore_above": 1024, "level": "extended", "name": "name", "normalize": [], "short": "Container name."}}
{"container.network.egress.bytes": {"dashed_name": "container-network-egress-bytes", "description": "The number of bytes (gauge) sent out on all network interfaces by the container since the last metric collection.", "flat_name": "container.network.egress.bytes", "level": "extended", "name": "network.egress.bytes", "normalize": [], "short": "The number of bytes sent on all network interfaces.", "type": "long"}}
{"container.network.ingress.bytes": {"dashed_name": "container-network-ingress-bytes", "description": "The number of bytes received (gauge) on all network interfaces by the container since the last metric collection.", "flat_name": "container.network.ingress.bytes", "level": "extended", "name": "network.ingress.bytes", "normalize": [], "short": "The number of bytes received on all network interfaces.", "type": "long"}}
{"container.runtime": {"dashed_name": "container-runtime", "description": "Runtime managing this container.", "example": "docker", "flat_name": "container.runtime", "ignore_above": 1024, "level": "extended", "name": "runtime", "normalize": [], "short": "Runtime managing this container."}}
{"container.security_context.privileged": {"dashed_name": "container-security-context-privileged", "description": "Indicates whether the container is running in privileged mode.", "flat_name": "container.security_context.privileged", "level": "extended", "name": "security_context.privileged", "normalize": [], "short": "Indicates whether the container is running in privileged mode.", "type": "bool"}}
{"data_stream.dataset": {"dashed_name": "data-stream-dataset", "description": "The field can contain anything that makes sense to signify the source of the data.\nExamples include `nginx.access`, `prometheus`, `endpoint` etc. For data streams that otherwise fit, but that do not have dataset set we use the value \"generic\" for the dataset value. `event.dataset` should have the same value as `data_stream.dataset`.\nBeyond the Elasticsearch data stream naming criteria noted above, the `dataset` value has additional restrictions:\n  * Must not contain `-`\n  * No longer than 100 characters", "example": "nginx.access", "flat_name": "data_stream.dataset", "level": "extended", "name": "dataset", "normalize": [], "short": "The field can contain anything that makes sense to signify the source of the data.", "type": "constant_keyword"}}
{"data_stream.namespace": {"dashed_name": "data-stream-namespace", "description": "A user defined namespace. Namespaces are useful to allow grouping of data.\nMany users already organize their indices this way, and the data stream naming scheme now provides this best practice as a default. Many users will populate this field with `default`. If no value is used, it falls back to `default`.\nBeyond the Elasticsearch index naming criteria noted above, `namespace` value has the additional restrictions:\n  * Must not contain `-`\n  * No longer than 100 characters", "example": "production", "flat_name": "data_stream.namespace", "level": "extended", "name": "namespace", "normalize": [], "short": "A user defined namespace. Namespaces are useful to allow grouping of data.", "type": "constant_keyword"}}
{"data_stream.type": {"dashed_name": "data-stream-type", "description": "An overarching type for the data stream.\nCurrently allowed values are \"logs\" and \"metrics\". We expect to also add \"traces\" and \"synthetics\" in the near future.", "example": "logs", "flat_name": "data_stream.type", "level": "extended", "name": "type", "normalize": [], "short": "An overarching type for the data stream.", "type": "constant_keyword"}}
{"destination.address": {"dashed_name": "destination-address", "description": "Some event destination addresses are defined ambiguously. The event will sometimes list an IP, a domain or a unix socket.  You should always store the raw address in the `.address` field.\nThen it should be duplicated to `.ip` or `.domain`, depending on which one it is.", "flat_name": "destination.address", "ignore_above": 1024, "level": "extended", "name": "address", "normalize": [], "short": "Destination network address."}}
{"destination.as.number": {"dashed_name": "destination-as-number", "description": "Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet.", "example": 15169, "flat_name": "destination.as.number", "level": "extended", "name": "number", "normalize": [], "original_fieldset": "as", "short": "Unique number allocated to the autonomous system.", "type": "long"}}
{"destination.as.organization.name": {"dashed_name": "destination-as-organization-name", "description": "Organization name.", "example": "Google LLC", "flat_name": "destination.as.organization.name", "ignore_above": 1024, "level": "extended", "multi_fields": [{"flat_name": "destination.as.organization.name.text", "name": "text", "type": "match_only_text"}], "name": "organization.name", "normalize": [], "original_fieldset": "as", "short": "Organization name."}}
{"destination.bytes": {"dashed_name": "destination-bytes", "description": "Bytes sent from the destination to the source.", "example": 184, "flat_name": "destination.bytes", "format": "bytes", "level": "core", "name": "bytes", "normalize": [], "short": "Bytes sent from the destination to the source.", "type": "long"}}
{"destination.domain": {"dashed_name": "destination-domain", "description": "The domain name of the destination system.\nThis value may be a host name, a fully qualified domain name, or another host naming format. The value may derive from the original event or be added from enrichment.", "example": "foo.example.com", "flat_name": "destination.domain", "ignore_above": 1024, "level": "core", "name": "domain", "normalize": [], "short": "The domain name of the destination."}}
{"destination.geo.city_name": {"dashed_name": "destination-geo-city-name", "description": "City name.", "example": "Montreal", "flat_name": "destination.geo.city_name", "ignore_above": 1024, "level": "core", "name": "city_name", "normalize": [], "original_fieldset": "geo", "short": "City name."}}
{"destination.geo.continent_code": {"dashed_name": "destination-geo-continent-code", "description": "Two-letter code representing continent's name.", "example": "NA", "flat_name": "destination.geo.continent_code", "ignore_above": 1024, "level": "core", "name": "continent_code", "normalize": [], "original_fieldset": "geo", "short": "Continent code."}}
{"destination.geo.continent_name": {"dashed_name": "destination-geo-continent-name", "description": "Name of the continent.", "example": "North America", "flat_name": "destination.geo.continent_name", "ignore_above": 1024, "level": "core", "name": "continent_name", "normalize": [], "original_fieldset": "geo", "short": "Name of the continent."}}
{"destination.geo.country_iso_code": {"dashed_name": "destination-geo-country-iso-code", "description": "Country ISO code.", "example": "CA", "flat_name": "destination.geo.country_iso_code", "ignore_above": 1024, "level": "core", "name": "country_iso_code", "normalize": [], "original_fieldset": "geo", "short": "Country ISO code."}}
{"destination.geo.country_name": {"dashed_name": "destination-geo-country-name", "description": "Country name.", "example": "Canada", "flat_name": "destination.geo.country_name", "ignore_above": 1024, "level": "core", "name": "country_name", "normalize": [], "original_fieldset": "geo", "short": "Country name."}}
{"destination.geo.location": {"dashed_name": "destination-geo-location", "description": "Longitude and latitude.", "example": "{ \"lon\": -73.614830, \"lat\": 45.505918 }", "flat_name": "destination.geo.location", "level": "core", "name": "location", "normalize": [], "original_fieldset": "geo", "short": "Longitude and latitude.", "type": "geo_point"}}
{"destination.geo.name": {"dashed_name": "destination-geo-name", "description": "User-defined description of a location, at the level of granularity they care about.\nCould be the name of their data centers, the floor number, if this describes a local physical entity, city names.\nNot typically used in automated geolocation.", "example": "boston-dc", "flat_name": "destination.geo.name", "ignore_above": 1024, "level": "extended", "name": "name", "normalize": [], "original_fieldset": "geo", "short": "User-defined description of a location."}}
{"destination.geo.postal_code": {"dashed_name": "destination-geo-postal-code", "description": "Postal code associated with the location.\nValues appropriate for this field may also be known as a postcode or ZIP code and will vary widely from country to country.", "example": 94040, "flat_name": "destination.geo.postal_code", "ignore_above": 1024, "level": "core", "name": "postal_code", "normalize": [], "original_fieldset": "geo", "short": "Postal code."}}
{"destination.geo.region_iso_code": {"dashed_name": "destination-geo-region-iso-code", "description": "Region ISO code.", "example": "CA-QC", "flat_name": "destination.geo.region_iso_code", "ignore_above": 1024, "level": "core", "name": "region_iso_code", "normalize": [], "original_fieldset": "geo", "short": "Region ISO code."}}
{"destination.geo.region_name": {"dashed_name": "destination-geo-region-name", "description": "Region name.", "example": "Quebec", "flat_name": "destination.geo.region_name", "ignore_above": 1024, "level": "core", "name": "region_name", "normalize": [], "original_fieldset": "geo", "short": "Region name."}}
{"destination.geo.timezone": {"dashed_name": "destination-geo-timezone", "description": "The time zone of the location, such as IANA time zone name.", "example": "America/Argentina/Buenos_Aires", "flat_name": "destination.geo.timezone", "ignore_above": 1024, "level": "core", "name": "timezone", "normalize": [], "original_fieldset": "geo", "short": "Time zone."}}