title:DeTor: Provably Avoiding Geographic Regions in Tor
author:Zhihao Li and
Stephen Herwig and
Dave Levin
DeTor: Provably Avoiding Geographic  
Regions in Tor
Zhihao Li, Stephen Herwig, and Dave Levin, University of Maryland
https://www.usenix.org/conference/usenixsecurity17/technical-sessions/presentation/li
This paper is included in the Proceedings of the 26th USENIX Security SymposiumAugust 16–18, 2017 • Vancouver, BC, CanadaISBN 978-1-931971-40-9Open access to the Proceedings of the 26th USENIX Security Symposium is sponsored by USENIXDeTor: Provably Avoiding Geographic Regions in Tor
Zhihao Li, Stephen Herwig, and Dave Levin
University of Maryland
Abstract
destination [19].
Large, routing-capable adversaries such as nation-
states have the ability to censor and launch powerful
deanonymization attacks against Tor circuits that traverse
their borders. Tor allows users to specify a set of coun-
tries to exclude from circuit selection, but this provides
merely the illusion of control, as it does not preclude
those countries from being on the path between nodes
in a circuit. For instance, we ﬁnd that circuits excluding
US Tor nodes deﬁnitively avoid the US 12% of the time.
This paper presents DeTor, a set of techniques for
proving when a Tor circuit has avoided user-speciﬁed ge-
ographic regions. DeTor extends recent work on using
speed-of-light constraints to prove that a round-trip of
communication physically could not have traversed cer-
tain geographic regions. As such, DeTor does not require
modiﬁcations to the Tor protocol, nor does it require a
map of the Internet’s topology. We show how DeTor can
be used to avoid censors (by never transiting the cen-
sor once) and to avoid timing-based deanonymization
attacks (by never transiting a geographic region twice).
We analyze DeTor’s success at ﬁnding avoidance circuits
through simulation using real latencies from Tor.
1
Introduction
Tor [8] has proven to be an effective tool at providing
anonymous communication and combating online cen-
sorship. Over time, Tor’s threat model has had to adapt to
account for powerful nation-states who are capable of in-
ﬂuencing routes into and out of their borders—so-called
routing-capable adversaries [34].
We consider two key threats that the presence of
routing-capable adversaries now makes a practical real-
ity. First, routing-capable adversaries can (and regularly
do) censor Tor trafﬁc. While it is well-known that some
countries block Tor trafﬁc beginning or ending within
borders, recent studies have shown that some also block
any Tor trafﬁc that happens to transit through their bor-
ders [4]. Second, routing-capable adversaries can launch
deanonymization attacks against Tor.
If an adversarial
network is on the path of the circuit between source and
entry, and between exit and destination, then it can intro-
duce small, detectable jitter between packets to correlate
the two connections and therefore uncover the source and
In light of increasingly powerful attacks like these, Tor
has added the ability for users to specify a set of coun-
tries to exclude when selecting circuits. However, as
we will demonstrate, this offers users only the illusion
of control over where their trafﬁc does not go. Among
the circuits that Tor uses to ostensibly ignore the US, we
could identify only 12% of them as deﬁnitively avoiding
the US. Alternative schemes have been proposed that
involve using traceroute to construct a map of the In-
ternet’s topology. However, routing-capable adversaries
can easily (and regularly do [35]) provide incomplete
responses to traceroute, precluding provable security
from mapping-based approaches.
In this paper, we present a set of techniques that can
prove that a circuit has avoided a geographic region. One
of the most powerful features of these techniques is how
little they require compared to many prior approaches:
they do not require modifying the hardware [3] or rout-
ing protocols [30] of the Internet, nor do they require
a map of the Internet’s routing topology [12]. Instead,
our work extends recent work on “provable avoidance
routing” [24] that uses geographic distances and speed-
of-light constraints to prove where packets physically
could not have traversed. Users can specify arbitrary ge-
ographic regions (our techniques do not rely on any no-
tion of network topology or ownership), and we return
per-packet proofs of avoidance, when available.
We construct avoidance in Tor in two applications:
Never-once proves that packets forwarded along a cir-
cuit never traversed a given geographic region, even
once. With this, users can avoid website ﬁngerprinting
attacks [23] and censoring regimes [4].
Never-twice proves that packets forwarded along a cir-
cuit do not reveal more information to a geographically
constrained adversary than is strictly necessary by ensur-
ing that they do not appear on two non-contiguous legs
of the Tor circuit. With this, users can prevent certain
deanonymization attacks [2, 17, 29, 10, 15].
In sum, this paper makes the following contributions:
• We introduce the notion of Tor circuits that provably
avoid regions of the world. Unlike prior approaches,
our proofs do not depend on any model of network or
USENIX Association
26th USENIX Security Symposium    343
AS-level topologies, and are instead based on round-
trip time measurements. Therefore, they are easy to
collect, do not require modiﬁcations to Tor, and do
not depend on Internet measurements that are manip-
ulable by a powerful adversary.
• We present the design, analysis, and evaluation of two
novel forms of avoidance: never-once to avoid censors
and website ﬁngerprinting attacks, and never-twice to
avoid various trafﬁc deanonymization attacks.
• We build these techniques in a system we call DeTor,
and evaluate it using real Tor latencies collected by the
Ting measurement tool [6]. We show that provable,
never-once avoidance is possible even when avoid-
ing routing-central countries like the US, and that
provable never-twice avoidance works for 98.6% of
source-destination pairs not in the same country.
Collectively, our results show that, with client-side
techniques alone, it is possible to achieve greater con-
trol over where Tor data does not go. We believe this to
be a powerful building block in future defenses.
2 Background and Related Work
In this section, we describe some of the attacks that are
possible against Tor from a powerful routing-capable ad-
versary. We also discuss prior work that has sought to
mitigate these attacks. First, we begin by reviewing the
relevant details of the Tor protocol.
2.1 A Brief Review of Tor
Tor [8] is a peer-to-peer overlay routing system that
achieves a particular type of anonymity known as unlink-
able communication. A source-destination pair is unlink-
able if no one other than the two endpoints can identify
both the source and destination. That is, an observer may
know the source (or destination) is communicating with
someone, but cannot identify with whom.
Tor achieves unlinkable communication by routing
trafﬁc through a circuit: a sequence of overlay hosts.
There are typically three hosts in a circuit: an entry node1
(who communicates with the source), a middle node, and
an exit node (who communicates with the destination).
The source node is responsible for choosing which Tor
routers to include in a circuit, and for constructing the
circuit. Tor’s default circuit selection algorithm chooses
nodes almost uniformly at random to be in a circuit, with
three notable exceptions: (1) nodes with greater band-
width are chosen more frequently, (2) no two nodes from
1Alternatively, clients can make use of so-called bridge nodes,
which are in essence non-public entry nodes. Because they serve the
same purpose as traditional entry nodes, they pose no difference in
DeTor, and so we refer to them collectively as “entry nodes.”
the same subnet are chosen to be in the same circuit,
and (3) no nodes are chosen from a user-speciﬁed list
of countries to ignore.
Circuit construction is done in such a way that the only
host who knows all hops on the circuit is the source: each
other host knows only the hop immediately preceding
and succeeding it. By the end of the circuit construc-
tion protocol, the source has established a pairwise secret
(symmetric) key with each hop on the circuit.
The salient feature of Tor is the manner in which it
performs “onion routing.” When sending a packet p to
the destination, the source encrypts p with the symmet-
ric key it shares with the exit node; it then encrypts this
ciphertext with the key shared with the middle node; and
in turn encrypts this doubly-encrypted ciphertext with
the key shared with the entry node. Each hop on the
circuit “peels off” its layer of encryption, thereby en-
suring that anyone overhearing communication between
any two consecutive Tor routers learns nothing about the
other Tor routers on the circuit.
2.2 Threat Model
We assume a powerful routing-capable adversary [34],
e.g., a nation-state. Such an attacker has the ability
to make (potentially false) routing advertisements and
can therefore attract routes to its administrative domain.
Thus, routing-capable adversaries are able to insert them-
selves onto the path between two communicating end-
points. Once on the path, they can launch various man-
in-the-middle attacks by injecting, dropping, delaying, or
reordering packets.
Routing-capable adversaries can also mislead or ob-
fuscate attempts to map their networks. For example,
one common approach for mapping a network is to
use traceroute, but even benign networks sometimes
refuse to respond to ICMP packets, tunnel their packets
through their internal network, or simply do not decre-
ment TTLs. These efforts effectively hide routers from
a traceroute measurement, and could allow a nation-
state adversary to hide its presence on a path. It is be-
cause of these kinds of attacks that we choose not to em-
ploy traceroute-based measurements in our system.
Because we are mainly focused on nation-state adver-
saries, we assume that the attacker can be geographically
localized. For example, to avoid the United States, we
assume that a user can download the geographic infor-
mation (GPS coordinates) that succinctly describe where
the US is (including its territories, such as Guam) and
that these constitute all of the locations from which the
country could launch attacks. This was the same assump-
tion made by Levin et al. [24]. In practice, it may be pos-
sible that an adversary could inﬁltrate other countries’
networks, but there are many instances where a nation-
344    26th USENIX Security Symposium
USENIX Association
state deploys its censorship mechanisms within its bor-
ders [7, 13].
This attack model extends naturally to colluding coun-
tries, such as the Five Eyes: one can simply consider
them as one large “nation-state” that is constrained to
its (potentially noncontiguous) borders. As we will
demonstrate, because our techniques apply to noncon-
tiguous geographic regions, they are not restricted to sin-
gle nation-states, and can be applied to arbitrary sets of
countries.
The attacker can also run its own Tor routers or col-
lude with some Tor routers, but, as per the previous as-
sumption, only within its own (or its fellow colluders’)
borders.
Finally, we make several assumptions about what an
attacker cannot do. We assume the attacker cannot vi-
olate standard cryptographic assumptions, particularly
that it cannot invert cryptographically secure hash func-
tions, infer others’ private keys, or forge digital signa-
tures or MACs. Also, we note that, while an attacker
can lie about having larger latencies (by delaying its own
packets), it is unable to lie about having lower latencies
than its links actually permit.
2.3 Attacks
This paper considers three very powerful attacks that are
at the disposal of a routing-capable adversary. We review
the attacks here, and then describe how prior work has
sought to mitigate them.
Censorship A routing-capable adversary can censor traf-
ﬁc that enters its borders. Commonly, with Tor, this in-
volves identifying the set of active Tor routers and simply
dropping trafﬁc to or from these hosts. The Tor Metrics
project monitors several countries who appear to perform
this kind of censorship [37].
Trafﬁc deanonymization Consider an attacker who is
able to observe the trafﬁc on a circuit between the source
and the entry node and between the exit node and the des-
tination. The attacker can correlate these two seemingly
independent ﬂows of trafﬁc in a handful of ways. For
instance, a routing-capable adversary operating a router
on the path between source and entry could introduce jit-
ter between packets that it could detect in the packets
between exit and destination. This works because Tor
routers do not delay or shufﬂe their packets, but rather
send them immediately in order to provide low laten-
cies [6].
Website ﬁngerprinting Even an attacker limited to ob-
serving only the trafﬁc between the source and entry
node can be capable of deanonymizing trafﬁc. In par-
ticular, if the destination’s trafﬁc patterns (e.g., the num-
ber of bytes transferred in response to apparent requests)
are well-known and unique, then an attacker may be able
to infer the destination by observing the trafﬁc on any
leg of the circuit [23]. Such attacks run into challenges
when there is sufﬁcient cover trafﬁc, but unfortunately
Tor users have little control over how much cover trafﬁc
there is.
2.4 Related Work
Sneaking through censors The traditional way of
mitigating censoring nation-states is to sneak through
them by making would-be-censored trafﬁc look benign.
For example, decoy routing [21, 41] uses participating
routers that are outside the censoring regime but on a be-
nign path to effectively hijack trafﬁc and redirect it to
a destination that would be censored. To the censoring
regime, the trafﬁc appears to be going to a destination it
permits.
Other approaches employ protocol obfuscation tech-
niques to make one protocol look like another. A slew
of systems [26, 40, 27, 38, 39, 18] has explored making
Tor trafﬁc appear to be other, innocuous trafﬁc, notably
Skype (many censors permit video chat applications, so
as to allow their citizens to keep in touch with friends
and family abroad). We seek an altogether different ap-
proach of avoiding these nefarious regions altogether,
rather than trying to sneak through them. However, these
are somewhat orthogonal approaches, and may be com-
plementary in practice.
AS-aware Tor variants The work perhaps closest to
ours in terms of overall goals is a series of systems
that try to avoid traversing particular networks once (or
twice). To the best of our knowledge, these have focused
almost exclusively on using autonomous system (AS)-
level maps of the Internet [2, 19, 10]. Like DeTor, the
idea is that if we can reason about and enforce where our
packets may (or may not) go between hops in the circuit,
we can address attacks such as censorship and certain
forms of trafﬁc deanonymization.