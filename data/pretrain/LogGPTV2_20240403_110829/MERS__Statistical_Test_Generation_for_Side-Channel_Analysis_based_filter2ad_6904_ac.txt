can simulate circuit netlists, generate MERS testset, further
tune the testset, and evaluate the eﬀectiveness of testsets on
random Trojans. We evaluated our approach on a subset
of ISCAS-85 and ISCAS-89 benchmark circuits. The se-
quential circuits are converted into full scan mode. We also
implemented the MERO [5] approach with parameter N of
1000 for comparison. We did our experiments on a server
with AMD Opteron Processor 6378 (2.4GHz). The runtime
for diﬀerent benchmarks and diﬀerent methods is shown in
Table 1. The table also shows the number of rare nodes in
each benchmark. We used 0.1 as the rare threshold to select
rare nodes.
Table 1: Runtime for MERS test generation, reordering us-
ing hamming and reordering using simulation, with N=1000,
rare threshold = 0.1
Benchmark
Nodes
(rare / total)
c2670
c3540
c5315
c6288
c7552
s13207
s15850
s35932
63 / 1010
331 / 1184
255 / 2485
45 / 2448
306 / 3720
592 / 2504
679 / 3004
896 / 6500
Run-time (s)
MERS MERS-h reordering MERS-s reordering
13370.86
6097.51
45595.97
4154.62
81405.89
12511.95
19903.44
7295.74
4925.23
18166.94
39073.81
2802.85
63502.19
29064.72
38181.49
31201.04
7.24
9.43
11.04
0.31
25.2
365.02
728.14
39.53
5.2 Evaluation Criteria
When applying a testset to a circuit with Trojan, there
are four criteria to evaluate the eﬀectiveness of the testset:
• AvgDeltaSwitch: the average delta switch when ap-
plying the testset on this Trojan-infected circuit.
• MaxDeltaSwitch: the maximum delta switch when
applying the testset.
• AvgRelativeSwitch: the average relative switch when
applying the testset.
• MaxRelativeSwitch: the maximum relative switch
when applying the testset. We choose this criterion as
the Side Channel Sensitivity because this directly
determines whether a Trojan can be detected through
side-channel analysis.
AvgDeltaSwitch and MaxDeltaSwitch reﬂect the activity in
Trojan, and AvgRelativeSwitch as MaxRelativeSwitch reﬂect
the sensitivity of the side channel signal in detecting the
Trojan.
As for evaluation of testsets, we would expect a high-
quality testset to have a good coverage over all possible Tro-
jans. In our experiments, we apply the testset to 1000 ran-
domly inserted Trojan samples and compute these four val-
ues for each Trojan instance. We would then take the aver-
age of these four metrics, which would reﬂect the capability
of the testset to enable detection of diﬀerent Trojans through
side-channel analysis. The average M axRelativeSwitch would
be most suitable for Side Channel Sensitivity evaluation,
which is to maximize the sensitivity for an arbitrary Trojan
in unknown circuit location.
5.3 Exploration of N
Fig. 4 shows the distribution of MaxDeltaSwitch over
1000 random 8-trigger Trojan samples for two ISCAS-85
(a) c2670: Distribution of MaxDeltaSwitch over 1000 random sam-
ples of 8-trigger Trojans.
(a)
(b)
(b) c3540: Distribution of MaxDeltaSwitch over 1000 random sam-
ples of 8-trigger Trojans.
Figure 4: Impact of N (number of times that a rare node
have rare switching) on MaxDeltaSwitch for benchmarks (a)
c2670 and (b) c3540.
benchmarks. We choose diﬀerent N to generate MERS test-
sets, to compare with the Random (10K vectors) testset. For
each testset, the box plot shows (minimum, ﬁrst quartile,
median, third quartile, maximum) values of MaxDeltaSwitch
of the 1000 Trojan samples. It is clear from these plots that
the distribution of MaxDeltaSwitch is constantly improving
with increasing N . For c2670, the average MaxDeltaSwitch
(as shown by the red lines) can reach 18.67 for MERS (N =
1000), while Random testset can achieve only 12.15. For
c3540, the average MaxDeltaSwitch can reach 11.13 for MERS
(N = 1000), while for Random testset it is only 9.19. The
fact that the quality of MERS tests improves with increasing
N is not surprising. It is similar to N -detect tests for stuck-
at faults, where fault coverage is expected to improve with
increasing N . The testset size also increases with N . The
sizes of testsets for MERS (N = 10, 20, 50, 100, 200, 500,
1000) are (71, 140, 347, 656, 1262, 3142, 6199) for c2670,
and (161, 302, 742, 1441, 2858, 7070, 14250) for c3540. In
most of our experiments, we choose a value of N = 1000,
which is a good balance between testset quality and testset
size. For fair comparison with Random testset, we will only
take the ﬁrst 10K vectors of MERS testset if it is larger than
10K.
Figure 5: MaxDeltaSwitch versus TotalSwitch for diﬀerent
N for benchmarks (a) c2670 and (b) c3540. MERS creates
more switching in Trojan, as well as more switching in other
parts of the circuit (which results in increased total switch-
ing).
5.4 Effect of Increased Total Switching
Fig. 5 shows the average M axDeltaSwitch and the av-
erage T otalSwitch of the testsets for 1000 8-trigger Tro-
jan samples for diﬀerent values of N . For both of the two
benchmarks, the average T otalSwitch increases with N as
well as the average M axDeltaSwitch. It is obvious that all
the MERS testsets have much larger average T otalSwitch,
compared with the Random testset. For c2670, the aver-
age T otalSwitch for MERS (N = 1000) is 644.9, which is
about 1.25X times of that of the Random testset (515.7).
For c3540, the average T otalSwitch for MERS (N = 1000)
is 808, while Random testset is only 649.2. The insight that
we can get from here is that MERS tends to increase the
T otalSwitch of the circuit, although it is designed to in-
crease switches in rare nodes. The following subsection will
show that the proposed reordering methods would be eﬀec-
tive to reduce T otalSwitch and thus increase side channel
sensitivity.
5.5 Effect of Weight Ratio (C)
The eﬀectiveness of the two reordering methods can be ob-
served in Fig. 6 and Fig. 7. As shown in Fig. 6, MERS-h can
reduce T otalSwitch and thus increase the relative switching
(a)
(b)
Figure 6: Side Channel Sensitivity versus T otalSwitch for
Random, the original MERS, MERS-h and MERS-s (with
diﬀerent C) for benchmarks (a) c2670 and (b) c3540. Both
MERS-h and MERS-s (with a small C) are eﬀective in re-
ducing the total switching.
(i.e. the Side Channel Sensitivity), compared with the orig-
inal MERS testset. For MERS-s with diﬀerent weight ratio
C, side channel sensitivity improves steadily with a small C,
and then goes down when C is too large. As the weight ra-
tio tries to balance DeltaSwitch and T otalSwitch, a large C
will outweigh the inﬂuence of T otalSwitch, which will make
it less diﬀerent from the original MERS testset. In the fol-
lowing experiments, we choose the weight ratio as C = 5, as
it provides a good balance between the total switching and
rare switching.
Fig. 7 shows detailed distribution of Side Channel Sensi-
tivity for 1000 8-trigger Trojan samples with diﬀerent choices
of C. The reordering methods are working well to improve
Side Channel Sensitivity, which is built on the fact that the
original MERS testset is already of high quality in terms of
DeltaSwitch, or switching in Trojans.
5.6
Increase in Trojan Activity
Table 2 shows that MERS (N =1000) is very eﬀective in
creating DeltaSwitch caused by arbitrary Trojans due to its
statistical nature. The average Max Delta Switch increases
by 31.11% and the average Avg Delta Switch by 187.33% on
average for diﬀerent benchmarks, compared with Random
(a) c2670: Distribution of Side Channel Sensitivity over 1000 random
samples of 8-trigger Trojans.
(b) c3540: Distribution of Side Channel Sensitivity over 1000 random
samples of 8-trigger Trojans.
Figure 7: Distribution of Side Channel Sensitivity for Ran-
dom, the original MERS, MERS-h and MERS-s (with dif-
ferent C) for benchmarks (a) c2670 and (b) c3540.
testset. This shows the eﬀectiveness of MERS in creating
Trojan activity.
Table 3 shows that MERS is also helpful in improving
RelativeSwitch. The average AvgRelativeSwitch increased
by 158.16%, compared with Random testsets. For average
MaxRelativeSwitch (Side Channel Sensitivity), MERS has
an average improvement of 18.89%. However, Side Channel
Sensitivity values for benchmark c3540 and c6288 are not
as good as those of Random testsets. This is due to the
fact that MERS testset also increases the total switching,
when it is making eﬀorts to cause rare nodes switching. This
phenomenon is illustrated and explained in Fig. 5 and Fig.
6, and this side eﬀect can be improved by the two reordering
algorithms as shown in Table 4 and 5.
5.7 Side Channel Sensitivity Improvement
To this point, we have explored the parameters: N for
MERS and C for MERS-s. We choose N = 1000 and
C = 5 in the following experiment to compare our pro-
posed schemes with Random testset and MERO. Table 4
and 5 show the improvement of proposed approaches on Side
Channel Sensitivity for 4-trigger and 8-trigger Trojans.
Table 4 shows that MERS, MERS-h and MERS-s have
10.37%, 138.44% and 152.26% improvement over the Ran-
Table 2: Comparison of MERS (N=1000) with Random (10K) for average MaxDeltaSwitch and average AvgDeltaSwitch,
over 1000 random samples of 8-trigger Trojans.
Benchmark
c2670
c3540
c5315
c6288
c7552
s13207
s15850
s35932
average MaxDeltaSwitch
Random MERS
18.67
11.13
13.80
7.26
12.00
8.83
10.84
15.37
Improve. Random MERS
6.8561
53.67%
2.9058
21.16%
45.16%
3.9300
4.8448
9.63%
2.7700
40.76%
0.9771
33.18%
43.99%
1.3609
1.35%
6.8060
31.11%
average AvgDeltaSwitch
Improve.
379.83%
111.85%
199.64%
355.50%
105.36%
52.01%
82.29%
212.16%
187.33%
1.4289
1.3716
1.3116
1.0636
1.3488
0.6428
0.7465
2.1803
12.15
9.19
9.51
6.63
8.53
6.63
7.53
15.16
Avg. Improve.
–
–
–
–
Table 3: Comparison of MERS (N=1000) with Random (10K) for average M axRelativeSwitch (Side Channel Sensitivity)
and average AvgRelativeSwitch, over 1000 random samples of 8-trigger Trojans.
Benchmark
c2670
c3540
c5315
c6288
c7552
s13207
s15850
s35932
Random MERS
0.02469
0.03108
0.01933
0.02670
0.00766
0.00526
0.00395
0.00534
0.00452
0.00852
0.00844
0.00756
0.00716
0.00593
0.00523
0.00587
Avg. Improve.
–
–
average MaxRelativeSwitch
(Side Channel Sensitivity)
average AvgRelativeSwitch
Improvement Random MERS
0.01054
0.00361
0.00200
0.00219
0.00113
0.00085
0.00082
0.00223
0.00255
0.00214
0.00075
0.00059
0.00058
0.00066
0.00053
0.00060
25.90%
-27.59%
45.72%
-26.06%
88.48%
11.64%
20.70%
12.29%
18.89%
–
–
Improvement
314.14%
69.12%
165.65%
270.68%
94.65%
28.22%
54.25%
268.54%
158.16%
dom testsets, respectively. While the original MERS testsets
is 23.95% worse than MERO testsets, MERS-h and MERS-
s have 52.62% and 62.01% improvement over MERO. Ta-
ble 5 shows the results for 8-trigger Trojans. Compared
to Random testsets, MERS, MERS-h and MERS-s can have
18.89%, 107.53% and 96.61% improvement, respectively. The
original MERS testsets is 12.43% worse than MERO test-
sets. MERS-h and MERS-s testsets can improve the Side
Channel Sensitivity by 40.79% and 38.50%, respectively.
In this section, we explore the impact of diﬀerent values
of N for MERS and observe the eﬀectiveness of MERS to
maximize Trojan activity as N increases. We conﬁrm the su-
periority of MERS testsets over Random testsets in Section
5.6 on creating switching activity in randomly sampled Tro-
jans. We observed that the total switching was also likely to
increase while MERS made eﬀorts to maximize rare switch-
ing in Trojans. The two reordering methods (MERS-h and
MERS-s) successfully had the total switching under control
while maintaining the rare switching high. The comparison
with Random and MERO testsets shows the eﬀectiveness of
our test generation framework in maximizing Side Channel
Sensitivity for Trojan detection.
obtain the limiting threshold values, beyond which any chip
is classiﬁed as Trojan-infected. MERS can simultaneously
maximize the switching in Trojan and minimize the back-
ground switching, so as to maximize the relative switching.
By calibration or reference to that of a golden chip, MERS
helps side channel analysis to reduce the intra-die systematic
process variations. Moreover, as shown in [23], various mea-
surable parameters can be used for multiple-parameter side-
channel-based Trojan detection where at least one parame-