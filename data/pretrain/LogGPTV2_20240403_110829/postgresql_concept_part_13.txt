POSTGRESQL 7.0 does not support outer joins. You can simulate them using subqueriesand
UNION ALL,asshown in Figure 8.14. In thisexample, the firstSELECTperformsa normal join of
the customer and salesorder tables. The second SELECTdisplayscustomers who have no orders,
withNULLappearingastheirordernumber.
8.4 Subqueries in Non-SELECT Queries
SubqueriescanalsobeusedinUPDATEandDELETEstatements. Figure8.15showstwoexamples.
Thefirstquerydeletesallcustomerswithno salesorders. Thesecondquerysetstheship_date
equalto’11/16/96’ forallordersmadebyFleerGearworks,Inc. ThenumbersafterDELETEand
UPDATEindicatethenumberofrowsaffectedbythequeries.
8.5 UPDATE with FROM
UPDATEcanincludeanoptionalFROMclause,whichpermitsjoinstoothertables. TheFROMclause
alsoallowsthe useof columns from other tablesin theSETclause. With thiscapability,columns
canbeupdatedwithdatafromothertables.
102 CHAPTER8. COMBININGSELECTS
test=> DELETE FROM customer
test-> WHERE customer_id NOT IN (
test(> SELECT customer_id
test(> FROM salesorder
test(> );
DELETE 0
test=> UPDATE salesorder
test-> SET ship_date = ’11/16/96’
test-> WHERE customer_id = (
test(> SELECT customer_id
test(> FROM customer
test(> WHERE name = ’Fleer Gearworks, Inc.’
test(> );
UPDATE 1
Figure8.15: SubquerieswithUPDATEandDELETE
UPDATE salesorder
SET order_date = employee.hire_date
FROM employee
WHERE salesorder.employee_id = employee.employee_id AND
salesorder.order_date  INSERT INTO customer (name, city, state, country)
test-> SELECT trim(firstname) || ’ ’ || lastname, city, state, ’USA’
test-> FROM friend;
INSERT 0 6
Figure8.17: UsingSELECTwithINSERT
8.6 Inserting Data Using SELECT
Upto thispoint, allof our INSERTstatementshaveinsertedasinglerow. EachINSERTcontained
aVALUESclauselisting the constants to be inserted. Another form of the INSERT statementalso
exists;itallowstheoutputofaSELECTtobeusedtoinsertvaluesintoatable.
Supposewewishtoaddallofourfriendsfromthefriendtabletothecustomertable. Asshown
inFigure8.17,insteadofaVALUESclause,INSERTcanusetheoutputof SELECTtoinsertdatainto
thetable. EachcolumnoftheSELECTmatchesareceivingcolumn intheINSERT. Columnnames
andcharacterstringconstantscanbeusedintheSELECToutput. InthelineINSERT 0 6,sixrows
are insertedinto the customer table. A zero object identifieris returned becausemore than one
rowisinserted.
Insertinginto thecustomernamecolumnpresentsaninterestingchallenge. Thefriendtable
storesfirstandlastnamesinseparatecolumns. Incontrast, thecustomer tablehasonlyasingle
name column. The solution is to combine the firstname and lastname columns, with a space
separatingthem. Forexample,afirstnameof ’Dean’ andalastnameof ’Yeager’ mustbeinserted
into customer.name as ’Dean Yeager’. This combination becomes possible with trim() and the ||
operator. Thetrim()functionremovestrailingspaces. Thetwopipesymbols,||,allowcharacter
strings to be joined together to form a single string, in a process called concatenation. In this
example,trim(firstname),space(’’),andlastnamearejoinedusing||.
8.7 Creating Tables Using SELECT
In addition to insertinginto existing tables, SELECTcan use an INTO clauseto createa table and
place all of its output into the new table. For example, suppose we want to create a new table
callednewfriendthatisjustlikeourfriendtablebutlacksanagecolumn. Thistaskiseasilydone
withthequeryshowninFigure8.18. TheSELECT…INTOqueryperformsthreeoperations:
1. Itcreatesatablecallednewfriend.
2. ItusesSELECT’scolumnlabelstonamethecolumnsofthenewtable.
3. ItusesSELECT’scolumntypesasthecolumntypesofthenewtable.
104 CHAPTER8. COMBININGSELECTS
test=> SELECT firstname, lastname, city, state
test-> INTO newfriend
test-> FROM friend;
SELECT
test=> \d newfriend
Table "newfriend"
Attribute | Type | Extra
-----------+----------+-------
firstname | char(15) |
lastname | char(20) |
city | char(15) |
state | char(2) |
test=> SELECT * FROM newfriend ORDER BY firstname;
firstname | lastname | city | state
-----------------+----------------------+-----------------+-------
Dean | Yeager | Plymouth | MA
Dick | Gleason | Ocean City | NJ
Ned | Millstone | Cedar Creek | MD
Sandy | Gleason | Ocean City | NJ
Sandy | Weber | Boston | MA
Victor | Tabor | Williamsport | PA
(6 rows)
Figure8.18: TablecreationwithSELECT
8.8. SUMMARY 105
SELECT…INTO essentially combines CREATE TABLE and SELECT in a single statement. The AS
clause can be used to change the column labels and thus control the column names in the new
table. Theothercommandsinthefigureshowthenewtable’sstructureandcontents.
SELECT…INTO tablename can also be written as CREATE TABLE tablename AS SELECT…. The
precedingquerycanthenberewrittenasCREATETABLEnewfriendASSELECTfirstname,lastname,
city,stateFROMfriend.
8.8 Summary
This chapter has described how to combine queries in ways you probably never anticipated. It
showedhowqueriescouldbechainedandplacedinsideotherqueries. Inaddition,itdemonstrated
howUPDATEcanuseFROM,andhowSELECTcancreatetables.
Althoughthesefeaturesmayseemconfusing,theyareverypowerful. Inmostcases,youwill
needonly the simplest of these features. However, you may get that rare request that requires
oneofthemorecomplicatedqueriescoveredinthischapter. Ifyourecognizesuchaquery,return
tothischaptertorefreshyourmemory.
Chapter 9
Data Types
Datatypeshavebeenusedinpreviouschapters. Thischaptercoversthemindetail.
9.1 Purpose of Data Types
Itistemptingtothinkthatdatabaseswouldbeeasiertouseifonlyonedatatypeexisted—atype
that could hold any type of information, such as numbers, character strings, or dates. Although
a singledatatype would certainlymake table creation simpler, havingdifferent datatypesoffers
definiteadvantages:
ConsistentResults Columnsofauniformtypeproduceconsistentresults. Displaying,sorting,
aggregates,andjoinsdeliverconsistentresults. Noconflictarisesoverhowdifferenttypes
are compared or displayed. For example, selectingfrom an INTEGER column alwaysyields
INTEGERvalues.
DataValidation Columnsofauniformtypeacceptonlyproperlyformateddata;invaliddataare
rejected. Forexample,acolumnoftypeINTEGERwillrejectaDATEvalue.
CompactStorage Columnsofauniformtypearestoredmorecompactly.
Performance Columnsofauniformtypeareprocessedmorequickly.
Forthesereasons,eachcolumninarelationaldatabasecanholdonlyonetypeofdata. Youcannot
mixdatatypeswithinacolumn.
Thislimitationcancausesomedifficulties. Forexample,ourfriendtableincludesanagecolumn
oftypeINTEGER. Onlywholenumberscanbeplacedinthatcolumn. Thevalues“Iwillaskforhis
agesoon”or“Shewillnottellmeherage”cannotbeplacedinthatcolumn. NULLcanrepresent
“Idonotknowherage.” Thesolutionistocreateanage_commentscolumnoftypeCHAR()tohold
commentsthatcannotbeplacedintheagefield.
107
108 CHAPTER9. DATATYPES
Category Type Description
Characterstring TEXT variablestoragelength
VARCHAR(length) variablestoragelengthwithmaximumlength
CHAR(length) fixedstoragelength,blank-paddedtolength,
internallyBPCHAR
Number INTEGER integer, 2billionrange,internallyINT4 (cid:0)
INT2 integer, 32thousandrange (cid:0)
INT8 integer, range (cid:0)(cid:2) (cid:1)(cid:4) (cid:3)(cid:6) (cid:5)(cid:8) (cid:7)(cid:10) (cid:9)(cid:12) (cid:11)
OID objectidentifier
NUMERIC(precision,decimal) number,user-definedprecisionanddecimallocation
FLOAT floating-pointnumber,15-digitprecision,
internallyFLOAT8
FLOAT4 floating-pointnumber,6-digitprecision
Temporal DATE date
TIME time
TIMESTAMP dateandtime
INTERVAL intervaloftime
Logical BOOL boolean,trueorfalse
Geometric POINT point
LSEG linesegment
PATH listofpoints
BOX rectangle
CIRCLE circle
POLYGON polygon
Network INET IPaddresswithoptionalnetmask
CIDR IPnetworkaddress
MACADDR EthernetMACaddress
Table9.1: POSTGRESQLdatatypes
9.2 Installed Types
POSTGRESQLsupportsalargenumberofdatatypes,asshowninTable9.1. Exceptforthenumber
types,allenteredvaluesmustbesurroundedbysinglequotes.
Character String
Character string types are the most commonly used data types. They can hold any sequence
of letters, digits, punctuation, and other valid characters. Typical character strings are names,
descriptions,andmailingaddresses. Youcanstoreanyvalueinacharacterstring. Nevertheless,
this type should be used only when other data types are inappropriate, as other types provide
betterdatavalidation,morecompactstorage,andbetterperformance.
Threecharacterstringdatatypesexist: TEXT,VARCHAR(length),andCHAR(length). TEXTdoes
not limit the number of characters stored. VARCHAR(length) limits the length of the field to
9.2. INSTALLEDTYPES 109
length characters. Both TEXT and VARCHAR() store only the number of characters in the string.
CHAR(length)issimilartoVARCHAR(),exceptitalwaysstoresexactlylengthcharacters. Thistype
pads the value with trailing spaces to achieve the specified length, and provides slightly faster
accessthanTEXTorVARCHAR().
Understanding why character string types differ from other data types can be difficult. For
example,youcanstore763asacharacterstring. Inthatcase,youwillstorethesymbols7,6,and
3,notthenumericvalue763. Consequently,youcannotaddanumbertothecharacterstring763,
becauseitdoesnotmakesensetoaddanumbertothreesymbols. Similarly,thecharacterstring
3/8/1992 consistsof eightsymbolsstartingwith3andendingwith 2. If you store thisvaluein a
characterstringdatatype,itisnotadate. Youcannotsortthestringwithothervaluesandexpect
themtobeinchronologicalorder. Thestring1/4/1998islessthan3/8/1992whenbotharesorted
ascharacterstringsbecause1islessthan3.
Theseexamplesillustratewhytheotherdatatypesarevaluable.Theothertypesusepredefined
formatsfortheirdata,andtheysupportmoreappropriateoperationsonthestoredinformation.
Nevertheless,thereisnothingwrongwithstoringnumbersordatesincharacterstringswhen
appropriate. Thestreetaddress100MapleAvenueisbeststoredin acharacterstringtype,even
thoughanumberispartofthestreetaddress. Itmakesnosensetostorethestreetnumberina
separateINTEGERfield. Also, partnumberssuchasG8223-9mustbestoredin characterstrings
because of the G and dash. In fact, part numbers that are always five digits, such as 32911 or
00413, should be stored in character strings as well. They are not real numbers, but symbols.
LeadingzeroscannotbedisplayedbyINTEGERfields,butareeasilydisplayedincharacterstrings.
Number
Number types allow the storage of numbers. The number types are INTEGER, INT2, INT8, OID,
NUMERIC(),FLOAT,andFLOAT4.
INTEGER,INT2,andINT8storewholenumbersofvariousranges. Largerrangesrequiremore
storage. Forexample,INT8requirestwicethestorageof INTEGERandisslowerthatINTEGER.
OIDisusedtostorePOSTGRESQLobjectidentifiers. AlthoughyoucoulduseINTEGERforthis
purpose,OIDbetterdocumentsthemeaningofthevaluestoredinthecolumn.
NUMERIC(precision,decimal)allowsuser-defineddigitsofprecision,roundedtodecimalplaces.
Thistypeisslowerthantheothernumbertypes.
FLOATandFLOAT4allowstorageoffloating-pointvalues. Numbersarestoredusing15(FLOAT)
or 6 (FLOAT4)digitsof precision. The location of the decimalpoint is stored separately,so large
values such as 4.78145e+32 can be represented. FLOAT and FLOAT4 are fast and have compact
storage, but can produce imprecise rounding during computations. When you require complete
accuracyof floating-point values, use NUMERIC() instead. For example, store monetary amounts
asNUMERIC().
110 CHAPTER9. DATATYPES
Type Example Note
POINT (2,7) (x,y)coordinates
LSEG [(0,0),(1,3)] startandstoppointsofalinesegment
PATH ((0,0),(3,0),(4,5),(1,6)) ()isaclosedpath,[]isanopenpath
Box (1,1),(3,3) oppositecornerpointsofarectangle
CIRCLE  centerpointandradius
POLYGON ((3,1),(3,3),(1,0)) pointsformclosedpolygon
Table9.2: Geometrictypes
Temporal
Temporaltypesallowstorageofdate,time,andtimeintervalinformation. Althoughthesedatacan
bestoredincharacterstrings,itisbettertousetemporaltypes,forthereasonsoutlinedearlierin
thischapter.
The four temporal types are DATE, TIME, TIMESTAMP, and INTERVAL. DATE allows storage of
a single date consisting of a year, month, and day. The format used to input and display dates
is controlled bythe DATESTYLEsetting(seeSection 4.14 on page 43). TIME allowsstorageof an
hour,minute,andsecond,separatedbycolons. TIMESTAMPstoresboththedateandthetime—for
example, 2000-7-12 17:34:29. INTERVAL represents an interval of time, like 5 hours or 7 days.
INTERVAL values are often generated by subtracting two TIMESTAMP values to find the elapsed
time. Forexample,1996–12–1519:00:40minus1996–12–814:00:10resultsinanINTERVALvalue
of705:00:30,whichis7days,5hours,and30seconds. Temporaltypescanalsohandletimezone
designations.
Logical
TheonlylogicaltypeisBOOLEAN. ABOOLEANfieldcanstoreonlytrueorfalse,andofcourseNULL.
Youcaninputtrueastrue,t,yes,y,or1. Falsecanbeinputasfalse,f,no,n,or0. Althoughtrueand
falsecanbeinputinavarietyofways,trueisalwaysoutputastandfalseasf.
Geometric
The geometric types support storage of geometric primitives. They include POINT, LSEG, PATH,
BOX,CIRCLE,andPOLYGON. Table9.2showsthegeometrictypesandtypicalvaluesforeach.
Network
The network types are INET, CIDR, and MACADDR. INET allows storage of an IP address, with or
without a netmask. A typical INET value with a netmask is 172.20.90.150 255.255.255.0. CIDR
9.3. TYPECONVERSIONUSINGCAST 111
storesIPnetworkaddresses. Itallowsasubnetmasktospecifythesizeofthenetworksegment.
AtypicalCIDRvalueis172.20.90.150/24. MACADDRstoresMAC(MediaAccessControl)addresses,
whichareassignedtoEthernetnetworkcardsatthetimeoftheirmanufacture. AtypicalMACADDR
valueis0:50:4:1d:f6:db.
Internal
Avarietyoftypesareusedinternally. Psql’s\dTcommandshowsalldatatypes.
9.3 Type Conversion Using CAST
In most cases, values of one type are converted to another type automatically. In those rare
circumstances where you need to explicitly convert one type to another, you can use CAST to
perform the conversion. To convert val to an INTEGER, use CAST(valAS INTEGER). To convert a
columndate_coloftypeDATEtotypeTEXT,useCAST(date_colASTEXT). Youcanalsoperformtype
castingusingdoublecolons—thatis,date_col::textornum_val::numeric(10,2).
9.4 Support Functions
FunctionsenableyoutoaccessspecializedroutinesfromSQL. Theytakeoneormorearguments
andreturnaresult.
Supposeyou wantto uppercaseavalueor column. No commandwillperformthisoperation,
but a function can handle it. POSTGRESQL has a function called upper that takes a single string
argument and returns the argument in uppercase. The function callupper(col) calls the function
upperwithcolasitsargumentandreturnsitinuppercase. Figure9.1showsanexampleoftheuse
oftheupperfunction.
POSTGRESQLprovidesmanyfunctions. Table9.3showsthemostcommonones,organizedby
thedatatypessupported. Psql’s\df showsalldefinedfunctionsandtheirarguments. Section 16.1
describesallthepsqlcommands.
Ifyoucallafunction withatypefor whichitisnotdefined,you will getanerrormessage,as
showninthefirstqueryofFigure9.2. Inthefirstquery,5/8/1971isacharacterstring,notadate.
Thesecondqueryconverts5/8/1971toadate,sodate_part()canbeused.
9.5 Support Operators
Operatorsaresimilartofunctions(seeSection4.13onpage43). Table9.4liststhemostcommon
operators. Psql’s\docommandshowsalldefinedoperatorsandtheirarguments.
112 CHAPTER9. DATATYPES
test=> SELECT * FROM functest;
name
------
Judy
(1 row)
test=> SELECT upper(name) FROM functest;
upper
-------
JUDY
(1 row)
Figure9.1: Exampleofafunctioncall
test=> SELECT date_part(’year’, ’5/8/1971’);
ERROR: Function ’date_part(unknown, unknown)’ does not exist
Unable to identify a function that satisfies the given argument types
You may need to add explicit typecasts
test=> SELECT date_part(’year’, CAST(’5/8/1971’ AS DATE));