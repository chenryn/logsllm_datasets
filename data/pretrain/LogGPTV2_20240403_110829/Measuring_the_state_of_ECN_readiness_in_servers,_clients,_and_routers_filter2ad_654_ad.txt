[7] B. Briscoe, A. Jacquet, C. Di Cairano-Gilfedder,
A. Salvatori, A. Soppera, and M. Koyabe. Policing
congestion response in an internetwork using
re-feedback. In Proceedings of ACM SIGCOMM, 2005.
[8] B. Briscoe and S. Rudkin. Commercial models for ip
quality of service interconnect. BT Technology
Journal, 23:171–195, April 2005.
[9] B. Cohen. Incentives build robustness in bittorrent,
2003.
[10] P. Eardley. Metering and Marking Behaviour of
PCN-Nodes. RFC 5670 (Proposed Standard), Nov.
2009.
[11] K. Forster. Universities worldwide, 2011.
http://univ.cc/.
[12] J. Gettys. Buﬀerbloat, 2011.
http://www.bufferbloat.net/.
[13] B. Huﬀaker, A. Dhamdhere, M. Fomenkov, and
K. Claﬀy. Toward topology dualism: improving the
accuracy of as annotations for routers. In Proceedings
of the 11th Passive and active measurement
conference, 2010.
[14] D. Katabi, M. Handley, and C. Rohrs. Congestion
control for high bandwidth-delay product networks.
SIGCOMM Comput. Commun. Rev., 32, August 2002.
[15] A. Kuzmanovic. The power of explicit congestion
notiﬁcation. In Proceedings of ACM SIGCOMM, 2005.
[16] A. Kuzmanovic, A. Mondal, S. Floyd, and
K. Ramakrishnan. Adding Explicit Congestion
Notiﬁcation (ECN) Capability to TCP’s SYN/ACK
Packets. RFC 5562 (Experimental), June 2009.
[17] A. Langley. Probing the viability of tcp extensions,
2008. http:
//www.imperialviolet.org/binary/ecntest.pdf.
[18] M. Luckie. Scamper: a scalable and extensible packet
prober for active measurement of the internet. In
Proceedings of the 10th ACM IMC, IMC ’10, 2010.
[19] G. Maier, A. Feldmann, V. Paxson, and M. Allman.
On dominant characteristics of residential broadband
internet traﬃc. In Proceedings of the 9th ACM IMC,
2009.
[20] D. Malone and M. Luckie. Analysis of icmp
quotations. In Proceedings of the 8th Passive and
active network measurement conference, 2007.
[21] A. Medina, M. Allman, and S. Floyd. Measuring
interactions between transport protocols and
middleboxes. In Proceedings of the 4th ACM IMC,
2004.
[22] A. Medina, M. Allman, and S. Floyd. Measuring the
evolution of transport protocols in the internet.
SIGCOMM Comput. Commun. Rev., 35, April 2005.
[23] T. Moncaster, B. Briscoe, and M. Menth. Baseline
Encoding and Transport of Pre-Congestion
Information. RFC 5696 (Proposed Standard), Nov.
2009.
[24] K. Ramakrishnan, S. Floyd, and D. Black. The
Addition of Explicit Congestion Notiﬁcation (ECN) to
IP. RFC 3168, Sept. 2001.
[25] N. Spring, L. Peterson, A. Bavier, and V. Pai. Using
planetlab for network research: myths, realities, and
best practices. SIGOPS Oper. Syst. Rev., 40, January
2006.
[26] N. Spring, D. Wetherall, and D. Ely. Robust Explicit
Congestion Notiﬁcation (ECN) Signaling with Nonces.
RFC 3540, June 2003.
[27] D. Stutzbach, R. Rejaie, N. Duﬃeld, S. Sen, and
W. Willinger. On unbiased sampling for unstructured
peer-to-peer networks. IEEE Trans. Netw., 17, April
2009.
177Summary Review Documentation for 
“Measuring the State of ECN Readiness  
in Servers, Clients, and Routers” 
Authors: S. Bauer, R. Beverly, A. Berger 
into  different  sub-populations  and 
Reviewer #1 
Strengths: The results: hard, new datapoints on ECN readiness over 
much Internet infrastructure (still a good way to go but starting to 
build) and data on various pathologies that is useful to work out how 
to  best  improve  ECN  readiness  (such  as  knowing  that  the  core  is 
clearing ECT relatively often). A well-executed measurement study 
in  a  very  readable  paper  that  looks  at  an  impressive  number  of 
Internet paths over a variety of sub-populations. 
Weaknesses: Well, you could say that the paper is small in scope, 
just  giving  better  datapoints  on  one  TCP/IP  mechanism,  and 
unimportant, given that the mechanism is not much used in practice. 
But I think this would be a bit unfair.  
Comments to Authors: These comments are intended to help you 
improve your paper further. (1) What I liked most was your division 
of  Internet  devices 
the 
exploration of “what went wrong”. Both help to move us beyond a 
simple but unhelpful statistic (“we find that the Internet is 15% ECN 
ready”). Where you could go further is with ways to improve the 
status  quo  based  on  your  findings.  Are  there  simple  tests  that 
TCP/IP  implementations  should  perform  to  avoid  being  adversely 
affected  by  the  pathologies  (detect  and  turn  off?)  or  do  they  not 
matter much? Note that the ECN nonce can potentially help here by 
serving as a robust testing mechanism for correct implementations 
along a path -- if used properly it will detect middleboxes interfering 
with the ECN bits as well as “cheating hosts”. (2) Also, the material 
in looking for the location of problems along the path did feel rather 
speculative,  since  you  cannot  come  to  firm  conclusions,  but  I 
appreciated it nonetheless. 
Reviewer #2 
Strengths:  Repetition  of  old  results  with  new  outcomes.  ECN 
deployment  is  still  underway,  but  there  are  new  challenges. 
Comprehensive testing for a short paper. 
Weaknesses: None. 
Comments  to  Authors:  Nice  short  paper.  Good  coverage  of  a 
moderately interesting topic. Most of the interest is in the fact that 
there is a positive trend, but it’s disheartening to see how slow the 
positive trend is. 
The information in S4.2 would have been much more interesting if 
divided  by  AS  instead  of  by  hop-count.  Once  the  network  is 
blocking  ECN,  IMHO  it’s  more  important  who  is  doing  it  rather 
than where. 
It  would  have  been  useful 
implementations 
the  BitTorrent 
the  Gnutella 
to  correlate 
types 
(by  bittorrent 
id)  or 
implemenations (by user-agent) to the ECN-capable nodes to better 
understand which types of nodes are ECN-capable.  
Reviewer #3 
Strengths: Fairly broad study of ECN. Results are interesting. Good 
positioning of results and contribution into the historical context. 
Weaknesses:  Methodology  is  confusing;  esp  description  in  2  and 
the state machine in Figure 1 seem to not match later text. While 
results  are  interesting,  their  significance  can  be  improved,  for 
example,  by  listing  out  the  top  fewcauses  of  ECN  misbehavior 
today. 
Comments  to  Authors:  Writing  is  mostly  good,  though  another 
pass would help. Results are interesting. A more precise breakdown 
of  the  types  of  idiosyncracies  that  are  happening,  their  potential 
causes, and fixes would be very useful. In the sense that, they would 
prescribe how ECN can be better supported. (The examples at the  
of Sections 4 and 5 are steps along the right path.) 
State machine in Figure 1 is cryptic. What you really mean to do, is 
to use iptables rules to mimic a congestion event along the path as a 
router would have otherwise done (mark CE on packets). However 
some  of  the  transitions  are  based  on  packets  coming  in  from 
different directions; ECE would come from the local client, CWR 
would  come  from the remote host. Also, I can’t tell what the left 
path of the tree is doing. 
OSes have ECN support but don’t turn it on by default, i.e., if the 
other  end  does  not  request  ECN  they  wouldn’t  use  it.  Is  this 
accurate? Can you quantify how many clients/ OSes are like this? 
There seems to also be a fair bit of re-use of the ToS field, some of 
which doesn’t seem to interact correctly with ECN. It would help to 
be more concrete about these anomalies. 
In 3.4, wouldn’t using TCP @port 80 get you better pass through 
rates from proxies? 
From Table 1, it isn’t clear that mobile servers are doing any better 
on ECN.Neither are the more popular servers or university clients. 
Is there bias in the experiments, with the measuring host, or the first 
few  links  on  the  path  to  the  measurement  host(s)  dominating  the 
results here? 
In  4,  Is  ‘hop’  an  IP  hop,  as  visible  from  ICMP?  That  would  be 
vulnerable to not seeing mpls segments or other circuits. 
The ambiguity, when ECT is cleared, whether it is cleared on the 
outgoing part of the previous hop or the incoming part on the next 
hop doesn’t seem to be worth chasing down. Localizing it to that 
pair would be helpful in itself. You might even get away by looking 
at  multiple  pairs  that  share  an  endpoint  to  get  a  better  handle  on 
which of those two end points may be clearing that bits. 
178Using p2p traffic to measure client eyeballs is cool, but probably not 
a big deal. 
Reviewer #4 
Strengths:  Keeping  track  of  the  ECN  capabilities  of  Internet 
devices is important to improve TCP’s behavior across the Internet. 
Weaknesses: Given that lack of ECN capabilities of the measured 
end-hosts, I do not see a point in this paper. The methodology for 
the  mobile  infrastructure  is  weak,  while  this  is  the  environment 
where ECN is likely to matter more. 
Comments to Authors: To understand mobile devices’ ECN, the 
authors can’t simply go to the mobile version of websites, but also 
need to conduct measurements from mobile devices themselves or 
use NAT devices as used by mobile operators.  
Why  exactly  are  passive  measurements  not  a  reliable  indicator  of 
the  prevalence  of  client-side  ECN  support?  Is  it  the  number  of 
observed  end-hosts?  I  don’t  quite  understand.  Why  would  a  P2P-
biased  view  be  better?  If  the  authors want to make claims a bout 
some bias, then please argue.  
From  table  2,  given  that  most  hosts  are  not  ECN-capable,  why 
should  we  care  about  what  routers  do?  If  end-hosts  were  ECN 
capable  and  impeded  by  routers  on  the  way,  I  would  understand. 
But given the current deployment of ECN, the paper is weak.  
What is the relationship between the paths that you are probing and 
the  original  end-hosts  for  which  you  wanted  to  check  the  ECN 
capabilities?  
Adding to Figure 2 the absolute hop count and AS hops where ECT 
is cleared would help. The discussion on figure 2 is too short. The 
authors  spend  much  time  in  the  paper  on  discussions  and 
methodological considerations, while not really giving a take-home 
message. I would see this as a CCR paper, not so much a research 
paper  
Reviewer #5 
Strengths:  This  paper  presents  a  thorough  study  of  the  current 
support  for  ECN.  It  measures  all  three  parts:  servers  (including 
servers  for  mobile  clients),  clients,  and  network  paths.  Nice 
technique  to  measure  client  support  by  crawling  Bittorrent  and 
Gnutella networks. 
Weaknesses: Having updated numbers is interesting, but the results 
are not that surprising. The paper lacks more analysis of the causes 
for the small ECN support and the reasons for network elements to 
mistakenly clear ECN bits. 
Comments to Authors: This paper presents a nice update on ECN 
support. It is important to study servers, clients, and network paths 
to fully understand the potential for ECN utilization. At the end the 
results and the analysis are not very novel.  
The  paper  does present a separate characterization of web servers 
for mobile devices, but the results are similar to other websites and 
there is no further discussion about this point.  
The technique to crawl p2p clients to study client support for ECN 
is nice. In general, it is hard to measure the client side. The results 
are not very telling, because the paper presents no characteristics of 
these  clients.  Is  there  a  way  to  find  out  the  operating  system  and 
other configuration details of these clients? It would be interesting 
to complete these tests with hosts where you know the OS, so that 
you can study of different OSes for ECN. 
Sec. 3.4 says that it uses ICMP traceroute probes, because the use of 
ECN doesn’t change depending on the protocol. It would be nice to 
have at least a short description of this experiment.  
In Sec. 4.2 paragraph 6, is it true that routers are consistent in the 
way they treat the ECN bits? In this section, it would be nice to have 
a discussion of why routers sometimes clear the ECN bits. Maybe 
bringing the last paragraph of the discussion to this section would 
help the readers understand this point. 
The results in Fig. 2 are biased because after a router clears the ECN 
bits, if another router in the path also clears these bits, you cannot 
detect it. So, it is expected that this curve is shifted to the left. The 
paper  should  at  least  discuss  this  bias  or  even  change  the 
presentation of this result. It makes more sense to discuss the ASes 
or pair of ASes where ECN bits are cleared. The analysis in terms of 
fraction of the total number of hops is confusing. 
Also  in  Sec.  4.2,  last  paragraph  under  “AS’s  where  the  ECT 
codepoint  is  cleared,”  why  use  the  restricted  inference  technique? 
What is the fraction that is not labeled? Instead of trying to pinpoint 
an AS, you could characterize pairs of ASes. 
Response from the Authors 
We valued and addressed the feedback from all reviewers. The most 
valuable contribution came from Reviewer 1 who points out the fact 
that  an  ECN  nonce  (RFC  3540)  can  serve  as  a  robust  testing 
mechanism for correct ECN behavior along a path not just correct 
ECN behavior by receivers.  This is noted in RFC 3540 but we had 
overlooked it. 
A number of the reviews noted confusion on how we implemented 
the server testing using the iptables functionality of Linux.  There 
are  a  number  of  details  to  the  implementation  that  are  subtle 
particular if one is not familiar with iptables rules and capabilities or 
the exact protocol details of ECN.  We updated the description of 
our methodology to hopefully make it more clear but perhaps more 
importantly we have all our configuration scripts and testing tools 
available for any reader wishing to replicate our measurements. A 
benefit  of  our  implementation  is  that  one  can  easily  test  any 
application or service that relies upon TCP -- a feature we leverage 
to  test  both  web  servers  and  hosts  running  p2p  software  without 
needing any additional implementation effort. 
Some of the reviews noted a general lack of interest in our ECN 
measurements.  Our  interests  simply  differ.  When  we  started  this 
research  we  intended  it  as  an  email to the IETF Conex WG. The 
discovery of the devices along the path mangling the ECN bits both 
at  our  home  and  lab  networks  suggested  there  was  a  more 
interesting  phenomenon  worthy  of 
investigation.  We  were 
encouraged by a number of individuals to conduct a careful study. 
Even  if  one  is  not  interesting  in  ECN  in  particular,  there  are 
interesting  lessons  in  regards  to  the  challenges  associated  with 
reusing  fields  (ToS  to  diffserv/ECN)  or  using  previously  reserved 
bits (TCP’s CWR and ECE flags).    Also our traceroute technique 
of diagnosing ECN problems can be used for other purposes, one of 
which is a survey of diffserv code points being set by each AS (a 
study we are currently conducting.) 
179