### 指定命令行上的多重指令

有三种方式可以指定命令行上的多重指令：

1. **使用两字母缩写词前面的空格**。
2. **在城市（city）和州（state）之间放置逗号**：通过在指令中插入一个逗号和一个空格来实现。
3. **处理包含空格的命令**：例如，使用空格来决定提交给程序的独立参数。特殊 shell 字符在调用之前会被展开。

并不是所有情况下都需要将指令用单引号包围起来。单引号可以阻止 shell 解释编辑指令中的特殊字符或空格。使用 Bourne shell 的分行指令功能，在输入单引号后按回车键即可继续多行输入。

#### 示例
```sh
sed -e 's/MA/, Massachusetts/' list
sed 's/MA/, Massachusetts/; s/PA/, Pennsylvania/' list
```
- 使用分号分隔多个指令。
- 在每个指令前放置 `-e` 选项。

#### 输出示例
```sh
Sal Carpenter, 73 6th Street, Boston, Massachusetts
Amy Wilde, 334 Bayshore Pkwy, Mountain View, California
Terry Kalkas, 402 Lans Road, Beaver Falls, Pennsylvania
Orville Thomas, 11345 Oak Bridge Road, Tulsa, Oklahoma
Alice Ford, 22 East Broadway, Richmond, Virginia
John Daggett, 341 King Road, Plymouth, Massachusetts
Hubert Sims, 328A Brook Road, Roanoke, Virginia
Eric Adams, 20 Post Road, Sudbury, Massachusetts
```

### 创建和使用脚本文件

将要执行的所有编辑命令放在一个脚本文件中。按照惯例，创建一个临时脚本文件 `sedscr`，并使用 `-f` 选项指定脚本文件名。

#### 示例
```sh
$ cat sedscr 
s/MA/, Massachusetts/
s/PA/, Pennsylvania/
s/CA/, California/
s/OK/, Oklahoma/

$ sed -f sedscr list
```

### 阻止输入行的自动显示

默认情况下，`sed` 会输出每一行。使用 `-n` 选项可以阻止自动输出，并只显示受命令影响的行。

#### 示例
```sh
$ sed -n -e 's/MA/Massachusetts/p' list
Sal Carpenter, 73 6th Street, Boston, Massachusetts
Eric Adams, 20 Post Road, Sudbury, Massachusetts
John Daggett, 341 King Road, Plymouth, Massachusetts
```

### 使用 `awk` 进行数据处理

`awk` 程序通常被放置在文件中以便测试和修改。可以在命令行上指定指令或创建脚本文件。

#### 基本语法
```sh
awk 'instructions' files
```

#### 示例
```sh
$ awk '/MA/ {print $1}' list
Sal
Eric
John

$ awk '{print $1}' list
Sal
Amy
Terry
Orville
Alice
John
Hubert
Eric

$ awk -F, '{print $1; print $2; print $3}' list
Sal Carpenter
73 6th Street
Boston, MA
...
```

### 结合 `sed` 和 `awk` 生成报表

以下是一个综合使用 `sed` 和 `awk` 来生成报表的示例。首先用 `sed` 替换邮政编码为全名，然后用 `awk` 提取特定字段。

#### 示例
```sh
$ cat nameState
s/MA/, Massachusetts/
s/PA/, Pennsylvania/
s/CA/, California/
s/OK/, Oklahoma/

$ sed -f nameState list | awk -F, '{print $1, $2, $3}'
Sal Carpenter 73 6th Street Boston, Massachusetts
Amy Wilde 334 Bayshore Pkwy Mountain View, California
Terry Kalkas 402 Lans Road Beaver Falls, Pennsylvania
Orville Thomas 11345 Oak Bridge Road Tulsa, Oklahoma
Alice Ford 22 East Broadway Richmond, Virginia
John Daggett 341 King Road Plymouth, Massachusetts
Hubert Sims 328A Brook Road Roanoke, Virginia
Eric Adams 20 Post Road Sudbury, Massachusetts
```

### 选项总结

#### `sed` 命令行选项
| 选项 | 描述 |
|------|------|
| `-e` | 在命令行上指定多个编辑指令 |
| `-f` | 从文件中读取编辑指令 |

#### `awk` 命令行选项
| 选项 | 描述 |
|------|------|
| `-F` | 改变字段分隔符 |
| `-f` | 从文件中读取 `awk` 脚本 |

### 错误处理

当遇到问题时，`sed` 和 `awk` 会显示错误信息。确保脚本正确无误，特别是在处理复杂的数据时。

希望这些优化后的示例和说明能够帮助您更好地理解和使用 `sed` 和 `awk`。