[]{#_bug_fixes.html#BZ-2038957}
::: title
**网络系统角色中的 `nm`{.literal} 供应商现在可以正确地管理网桥**
:::
在以前的版本中，如果您使用 `initscripts`{.literal}
供应商，则网络系统角色会创建一个 `ifcfg`{.literal} 文件，该文件将
NetworkManager 配置为将网桥接口标记为非受管。另外，NetworkManager
无法检测后续的 `initscript`{.literal} 操作。例如，如果在
`down`{.literal} 和 `absent`{.literal} 操作后没有重新载入连接，则
initscript 提供程序的 `down`{.literal} 和 `absent`{.literal}
操作不会更改 NetworkManager
对这个接口的未受管状态的理解。在这个版本中，Network 系统角色使用
`NM.Client.reload_connections_async（）`{.literal} 函数在带有
NetworkManager 1.18 的受管主机上重新载入
NetworkManager。因此，在将提供程序从 `initscript`{.literal} 切换到
`nm`{.literal} 时，NetworkManager 会管理网桥接口。
([BZ#2038957](https://bugzilla.redhat.com/show_bug.cgi?id=2038957){.link})
[]{#_bug_fixes.html#BZ-2064391}
::: title
**修复了一个拼写错误，为正确的绑定模式支持 `active-backup`{.literal}**
:::
在以前的版本中，在指定 `active-backup`{.literal} 绑定模式时，在支持
InfiniBand
端口时有一个拼写错误的`active_backup`{.literal}。由于这个拼写错误，连接无法支持
InfiniBand 绑定端口的正确绑定模式。在这个版本中，将绑定模式改为
`active-backup`{.literal} 解决了拼写错误。现在，连接可以成功支持
InfiniBand 绑定端口。
([BZ#2064391](https://bugzilla.redhat.com/show_bug.cgi?id=2064391){.link})
[]{#_bug_fixes.html#BZ-2004303}
::: title
**Logging 系统角色不再多次调用任务**
:::
在以前的版本中，日志记录角色多次调用了应只调用一次的任务。因此，额外的任务调用会减慢角色执行速度。在这个版本中，日志记录角色被修改为只调用一次任务，从而提高了日志记录角色性能。
([BZ#2004303](https://bugzilla.redhat.com/show_bug.cgi?id=2004303){.link})
[]{#_bug_fixes.html#BZ-2006230}
::: title
**RHEL 系统角色现在在生成的文件中处理多行 `ansible_managed`{.literal}
注释**
:::
在以前的版本中，一些 RHEL 系统角色使用
`# {{ ansible_managed }}`{.literal}
生成某些文件。因此，如果客户有自定义多行 `ansible_managed`{.literal}
设置，则文件会被错误地生成。在这个版本中，所有系统角色在生成文件时都使用了与
`{{ ansible_managed | 注释 }}`{.literal} 等效的，以便
`ansible_managed`{.literal} 字符串始终被正确注释，包括多行
`ansible_managed`{.literal} 值。因此，生成的文件具有正确的多行
`ansible_managed`{.literal} 值。
([BZ#2006230](https://bugzilla.redhat.com/show_bug.cgi?id=2006230){.link})
[]{#_bug_fixes.html#BZ-2057164}
::: title
**现在，`在目标`{.literal} 更改时，防火墙系统角色会立即重新载入防火墙**
:::
在以前的版本中，当 `target`{.literal}
参数改变时，防火墙系统角色不会重新载入防火墙。在这个版本中，防火墙角色会在
`目标`{.literal} 更改时重新载入防火墙，因此 `目标`{.literal}
更改将立即可用，供后续操作使用。
([BZ#2057164](https://bugzilla.redhat.com/show_bug.cgi?id=2057164){.link})
[]{#_bug_fixes.html#BZ-2021025}
::: title
**证书系统角色中的 `group`{.literal} 选项不再使证书无法被该组访问**
:::
在以前的版本中，当为证书设置组时，`模式`{.literal}
不会设置为允许组读取权限。因此，组成员无法读取证书角色发布的证书。在这个版本中，组设置可确保文件模式包含组读取权限。因此，组成员可以访问证书角色为组发布的证书。
([BZ#2021025](https://bugzilla.redhat.com/show_bug.cgi?id=2021025){.link})
[]{#_bug_fixes.html#BZ-2021676}
::: title
**Logging 角色不再缺少 `immark`{.literal} 模块间隔值的引号**
:::
在以前的版本中，`immark`{.literal} 模块的 `interval`{.literal}
字段值没有正确加引号，因为 `immark`{.literal}
模块没有正确配置。在这个版本中，`间隔`{.literal}
值会被正确加引号。现在，`immark`{.literal} 模块可以正常工作。
([BZ#2021676](https://bugzilla.redhat.com/show_bug.cgi?id=2021676){.link})
[]{#_bug_fixes.html#BZ-2047506}
::: title
**`/etc/tuned/kernel_settings/tuned.conf`{.literal} 文件有一个正确的
`ansible_managed`{.literal} 标头**
:::
在以前的版本中，`kernel_settings`{.literal} RHEL 系统角色在
`/etc/tuned/kernel_settings/tuned.conf`{.literal} 文件中为
`ansible_managed`{.literal}
标头有一个硬编码的值。因此，用户无法提供自己的自定义
`ansible_managed`{.literal}
标头。在这个版本中，这个问题已被解决，`kernel_settings`{.literal}
使用用户的 `ansible_managed`{.literal} 设置更新了
`/etc/tuned/kernel_settings/tuned.conf`{.literal}
的标头。因此，`/etc/tuned/kernel_settings/tuned.conf`{.literal}
有一个适当的 `ansible_managed`{.literal} 标头。
([BZ#2047506](https://bugzilla.redhat.com/show_bug.cgi?id=2047506){.link})
[]{#_bug_fixes.html#BZ-2050341}
::: title
**VPN 系统角色过滤插件 `vpn_ipaddr`{.literal} 现在转换为
FQCN（完全限定域名）**
:::
在以前的版本中，从旧角色格式转换为集合格式的转换没有将过滤器插件
`vpn_ipaddr`{.literal} 转换为 FQCN(Fully Qualified Collection Name)
`redhat.rhel_system_roles.vpn_ipaddr`{.literal}。因此，VPN
角色无法通过短名称查找插件并报告错误。在这个版本中，转换脚本已被修改，过滤器会在集合中转换为
FQCN 格式。现在，VPN 角色在不发出错误的情况下运行。
(BZ#2050341)
[]{#_bug_fixes.html#BZ-2050419}
::: title
**`kdump.service`{.literal} 的作业不再失败**
:::
在以前的版本中，用来配置内核崩溃大小的 Kdump 角色代码没有为 RHEL9
更新，这需要使用
`kdumpctl reset-crashkernel`{.literal}。因此，`kdump.service`{.literal}
无法启动并发出错误。在这个版本中，`kdump.service`{.literal} 角色使用
`kdumpctl reset-crashkernel`{.literal}
来配置崩溃内核大小。现在，`kdump.service`{.literal} 角色可以成功启动
kdump 服务，内核崩溃大小会被正确配置。
(BZ#2050419)
:::
::: section
::: titlepage
# []{#_bug_fixes.html#bug-fix_virtualization}虚拟化 {.title}
:::
[]{#_bug_fixes.html#BZ-1997541}
::: title
**热拔挂载的虚拟磁盘不再导致客户端内核在 IBM Z 上崩溃**
:::
在以前的版本中，当将挂载的磁盘从 IBM Z
硬件的正在运行的虚拟机(VM)中分离时，VM 内核会在以下情况下崩溃：
::: itemizedlist
-   这个磁盘已附加有目标总线类型 `scsi`{.literal} 并挂载到客户机中。
-   热拔磁盘设备后，相应的 SCSI 控制器也被热插。
:::
在这个版本中，底层代码已被修复，上面描述的崩溃不再发生。
(BZ#1997541)
:::
::: section
::: titlepage
# []{#_bug_fixes.html#bug-fix_containers}容器 {.title}
:::
[]{#_bug_fixes.html#BZ-2019901}
::: title
**UBI 9-Beta 容器可以在 RHEL 7 和 8 主机上运行**
:::
在以前的版本中，UBI 9-Beta 容器镜像在 `containers-common`{.literal}
软件包中设置了不正确的 seccomp
配置集。因此，容器无法处理导致失败的一些系统调用。在这个版本中，这个问题已被解决。
([BZ#2019901](https://bugzilla.redhat.com/show_bug.cgi?id=2019901){.link})
:::
:::
[]{#_technology_previews.html}
::: chapter
::: titlepage
# []{#_technology_previews.html#_technology_previews}第 6 章 技术预览 {.title}
:::
这部分列出了 Red Hat Enterprise Linux 9 中的所有技术预览。
如需有关红帽对技术预览功能支持范围的信息，请参阅
[技术预览功能支持范围](https://access.redhat.com/support/offerings/techpreview/){.link}。
::: section
::: titlepage
# []{#_technology_previews.html#technology-preview_rhel-for-edge}RHEL for Edge {.title}
:::
[]{#_technology_previews.html#BZ-1989930}
::: title
**FDO 流程作为技术预览提供**
:::
FDO 过程可用于自动置备和加入 RHEL for Edge
镜像，作为技术预览提供。通过这种方式，您可以构建 RHEL for Edge
Simplified Installer 镜像，将其置备到 RHEL for Edge 镜像，并使用
FDO（FIDO 设备板板）过程自动置备和板载您的 Edge
设备，与其他设备以及网络连接的系统交换数据。因此，FIDO
设备加载协议在制造阶段执行设备初始化，然后进行后期绑定以实际使用该设备。
(BZ#1989930)
:::
::: section
::: titlepage
# []{#_technology_previews.html#technology-preview_shells-and-command-line-tools}Shell 和命令行工具 {.title}
:::
[]{#_technology_previews.html#BZ-2046653}
::: title
**ReaR 在 64 位 IBM Z 构架中作为技术预览提供**
:::
64 位 IBM Z 构架中现在作为技术预览提供了基本的 Relax 和
Recover(ReaR)功能。您只能在 z/VM 环境中在 IBM Z 上创建 ReaR
救援镜像。备份和恢复逻辑分区(LPAR)还没有测试。
当前唯一可用的输出方法是 Initial Program Load(IPL)。IPL 生成内核和初始
ramdisk(initrd)，可与 `zIPL`{.literal} 引导装载程序一起使用。
::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
### 警告 {.title}
目前，救援过程会重新格式化连接到该系统的所有
DASD（直接附加存储设备）。如果系统存储设备中存在宝贵数据，则不要尝试系统恢复。这还包括用于引导到救援环境的
`zIPL`{.literal} 引导装载程序、ReaR 内核和 initrd 的设备。确保保留副本。
:::
如需更多信息，请参阅[在 64 位 IBM Z 架构中使用 ReaR
救援镜像](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/configuring_basic_system_settings/assembly_recovering-and-restoring-a-system_configuring-basic-system-settings#proc_using-a-rear-rescue-image-on-ibm-z-architecture_assembly_recovering-and-restoring-a-system){.link}。
(BZ#2046653)
[]{#_technology_previews.html#BZ-2047161}
::: title
**GIMP 在 RHEL 9 中作为技术预览提供**
:::
GNU Image Manipulation Program(GIMP)2.99.8
现在作为技术预览提供。`gimp`{.literal} 软件包版本 2.99.8
是一个预发行版本，它有一组改进，但只能保证稳定性。发布官方 GIMP 3
后，将作为此预发布版本的更新，在 RHEL 9 中引入。
在 RHEL 9 中，您可以作为 RPM 软件包轻松安装 `gimp`{.literal}。
(BZ#2047161)
:::
::: section
::: titlepage
# []{#_technology_previews.html#technology-preview_networking}网络 {.title}