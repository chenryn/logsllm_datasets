 如果手机没有微距镜头，可以买外置微距镜头 
 观察芯片标识: 也可买专门的电子显微镜 
固件提取中，破解芯片保护或绕过登陆的方法 
 《智能设备漏洞挖掘中的几个突破点》，发现大家感兴趣的是固件提取方法 
 电压故障注入:《敲开芯片内存保护的最后一扇门》付鹏飞 
 电磁故障注入：PicoEMP(github.com/newaetech/chipshouter-picoemp) 
电磁故障注入场景 
汽车工程模式 
汽车内置的一种模式。用在开发、生产测试、维护等场合。进入可能要密码，功能如下: 
 可以开调试模式（例如：打开安卓系统的ADB shell） 
 导出一些内部日志(一般导出到U盘) 
 查看和修改汽车的一些参数配置 
 汽车仪表的自我诊断 
 进行本地升级操作 
以下是某款车工程模式菜单： 
另一款汽车的工程模式 
工程模式本身不是漏洞，是我们进入汽车内部继续研究的一个途径。 
如何进入汽车工程模式 
获取当前研究车型的工程模式，有很多种方法，例如: 
 厂家官网文档(一般较少提及) 
 尝试 在安卓：系统->版本信息 多次点击版本号 
 如果工程模式有密码, 逆向固件获取密码 
 搜索引擎查找工程模式和进入密码 
 淘宝/咸鱼搜索车型对应固件 
 找厂家客服，社工获取 
 找上游的系统软件开发商客服，社工 
 4S店获取 
社工客服拿到汽车升级包和工程模式进入方法 
通过逆向汽车升级包发现工程模式密码 
进入原生安卓模式 
极少汽车还可进入原生安卓模式，看到更多的系统内容，例如: 
 有时会有内部测试软件，正式界面中未启用 
 权限比较高，更方便调试。 
 找可以控制车运动状态的应用软件，分析和提取通讯协议 
 容易找到危及行驶安全的风险点 
 也可安装抓包和安全测试软件 
硬件调试接口的寻找 
进入工程模式以后，调试接口一般有以下几种: 
 电路板上的调试串口 
 USB专用调试口 
 插U盘的USB口，其处于从模式(SLAVE) 
 TF卡可能导出调试日志或其它信息 
 Wi-Fi/网口尝试连adb服务 
 硬件串口和JTAG口探测工具JTAGulator 
常用的adb 命令 
IVI和ADAS进后，一般是安卓系统，以下是常用adb命令: 
 adb devices 
 adb connect  ip:5555 
 adb shell  （或adb -s 123456789ABCDEF shell） 
 adb logcat 
 adb install  Root.apk   # 安装应用 
 adb pull  /data/local/temp/test.pcap   d:\                 # 复制 安卓文件 到 电脑 
 adb push “C:\Users\ml\Root.apk”  /mnt/sdcard/  # 复制 电脑文件 到 安卓 
启动网络adb调试 
打开网络调试 
 # setprop service.adb.tcp.port 5555  
 # stop adbd  
 # start adbd 
关闭网络调试 
 #stop adbd 
 #setprop service.adb.tcp.port -1 
 #start adbd 
固件提取 
IVI和ADAS进去以后，一般是安卓系统，以下是常用固件提取命令: 
 ps –aux                 
 netstat   -atnp 
 df   -h 
第一种方法提取固件 
 dd if=/dev/mtd0  of=/tmp/SD0/mtd0.bin 
第二种方法提取固件(有遗漏或文件系统不好解压缩)。 
 tar  -cvpf  /mnt/SD0/root.tar  /  --exclude="sys"  --exclude="proc"  --exclude="tmp" 
固件的文件拆解与符号表恢复 
 固件中一些文件系统的拆解：熟悉常见嵌入式文件系统；编程解决问题 
 几种高效恢复固件符号表的方法 
《一种高效识别VxWorks库函数的方法》（撰写中） 
固件风险点 
进入系统后台，一般会查看系统风险点，例如： 
 运行了哪些进程 
 开启了哪些端口 
 有没有厂家开发人员留下的调试手段/后门 
 和哪些云端的主机通讯 
 应用商店使用抓包 
 App使用抓包 
 远程控制App抓包、尝试了解业务 
 模块与模块之间的通讯协议逆向  
1 
  概   述 
2 
3 
4 
  常用的几个小工具 
  汽车工程模式与固件提取 
目  录 
  典型案例分享  
采用不安全的通讯协议 
危害： 
 如果协议没有加密保护，在传输过程中容易被篡改 
 通过简单的抓包，就可获取登录用户名和密码 
案例： 
 中间人攻击：本来安装一个应用商店的软件，结果安装了替换后的软件 
 抓包发现某应用商店用了FTP协议。抓包获取用户名和密码，进入App商店云端 
    可增删改应用商店的所有apk包 
采用不安全的通讯协议(续) 
 抓取协议和逆向App 
 找到可修改行车状态的指令，搞清了汽车内部的通信协议。 
 发送指令，可以实时修改汽车运行状态，从而影响行车安全 
密钥保存不当 
下面的密钥保存方案是不安全的：虽然采用了一些加密手段。 
 固件中保存云端密钥等登录凭据 
 App中保存云端密钥等登录凭据 
案例： 
 某系统内部配置文件加密。逆向其so文件后，找到了加密的密钥和算法 
    解密后，发现很多系统内部的密钥和口令，甚至可以登录到云端 
 某安卓App，密钥保存不当，导致可进入云端，看到用户上传的身份证等隐私内容 
总结 
对厂商来说，要综合考虑的东西很多，修复周期长，任重而道远 
 软件供应商团队可能已经解散, 或不再维护 
 车型较老，漏洞可能不准备修复 
 遗留问题多，牵一发而动全身 
 有的漏洞无法远程修复 
 由于时间有限，本次只是讲了几个常见的案例。但引发的后果挺严重 
谢  谢