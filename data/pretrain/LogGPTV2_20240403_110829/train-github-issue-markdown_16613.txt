## Bug
### Input Code
REPL LINK
    function delay(time) {
      return new Promise((resolve, reject)=>{
        setTimeout(()=>resolve(), time);
      });
    }
    [1000,2000,3000,4000].forEach(async (time) => {
      await delay(time);
      console.log(time);
    })
    console.log([100000])
### Expected Behavior
Output:
    Array [100000]    // at 0s
    1000  // at 1s
    2000  // at 2s
    3000  // at 3s
    4000  // at 4s
> And the Chrome newest version just act like this.
### Current Behavior
Output:
    // at 0s
    Array [100000]
    // at 1s
    Array [100000]
    1000
    // at 2s
    Array [100000]
    1000
    2000
    // at 3s
    Array [100000]
    1000
    2000
    3000
    // at 4s
    Array [100000]
    1000
    2000
    3000
    4000
> I thought the problem is at the function `_asyncToGenerator`.