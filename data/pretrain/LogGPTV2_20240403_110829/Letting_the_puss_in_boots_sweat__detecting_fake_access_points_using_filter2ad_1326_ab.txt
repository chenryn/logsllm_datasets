methods to protect against the evil twin attack. The ﬁrst
method (EAP-SWAT) requires modiﬁcation of the deployed
authentication protocols which, in general, is undesirable as
all deployed APs would have to be adapted. The second
method (context-leashing) aims to detect whether the set
of simultaneously visible APs has signiﬁcantly changed. It
achieves a comparably high detection accuracy. Note that
this method can only detect a speciﬁc variant of the attack,
where the evil twin AP is set up at a diﬀerent location than
the legitimate AP. Neumann et al. [21] analyze ﬁngerprints
based on network parameters such as transmission time and
frame inter-arrival time. The best recognition rates for wire-
less devices are 40%–60% in a laboratory setting and 20%–
32% in real-world traces.
A more promising ﬁeld of research for wireless ﬁngerprint-
ing utilizes the phenomenon called clock skew. Originating
from the work of Moon et al. [20], Kohno et al. [17] intro-
duce the concept of clock skew based remote device ﬁnger-
printing using the TCP Timestamps option in TCP head-
ers [13] or ICMP packets, both having timing resolution in
milliseconds. They estimate the clock skew with linear pro-
gramming (LP). Clock skews are shown to be distinguishable
among diﬀerent physical machines yet stable over time. The
approach requires support of the timestamp option and ob-
serving a TCP connection or ICMP packets over a longer
period of time, while wireless APs cannot be directly ac-
cessed via TCP/ICMP in general.
In [27] clock-skew-based ﬁngerprinting is applied to wire-
less sensor nodes (WSN). The results are not comparable
to our work as the authors assume that the ﬁngerprinter is
always the same (sink node) and can be kept in a constant
temperature environment. This does not hold true in our
scenario. Yang et al. [30] analyze the impact of temperature
on clock skew estimation to improve clock synchronization
for WSNs and the authors observe that two clocks exhibit
a stable relationship of clock skew w.r.t. temperature which
is not necessarily linear. This complies with our ﬁndings
regarding TSF clocks (see Section 6). However, unlike in
our scenario, for WSNs there is no necessity to model this
temperature dependency ﬁngerprinter-independent.
Jana et al. [15] transfer the idea of Kohno et al. to the
802.11 scenario, estimating APs’ clock skews from TSF times-
tamps in beacon frames.
Instead of the LP method the
authors use a least squares ﬁt estimation (LSF), which is
more eﬃcient but also more sensitive to outliers, since fewer
outliers compared to timestamps in TCP packets are to be
expected. Moreover, the use of TSF data requires signiﬁ-
cantly smaller sample sizes due to higher clock resolution.
To measure the receiving time of a beacon frame, a modi-
ﬁed driver is used. The authors argue that it is not possible
to fake the clock skew using software alone because of un-
predictable sending delays due to Medium Access Control.
In their work, ﬁngerprints are not comparable between dif-
ferent ﬁngerprinter machines (FPs) due to the inﬂuence of
the ﬁngerprinting device’s own clock skew. Arackaparam-
bil et al. [1] improve the accuracy by utilizing the FP’s TSF
timer as more precise clock source. However, their technique
does not remove the skew of the ﬁngerprinter card from the
clock skew estimation and is only evaluated with two Wi-Fi
chipsets of the same type. In our previous work [18], we pre-
sented a lightweight method for clock skew estimation based
on TSF timestamps in beacon frames using an online version
of the LSF estimation with high precision. Our tools do not
rely on modiﬁed drivers or system components and there-
fore enable clock skew estimation for APs from arbitrary
mobile clients. An NTP based method was presented to
eliminate the inﬂuence of the ﬁngerprinter’s skew. However,
clock skew variations of approx. ±1ppm at diﬀerent measur-
ing times remained. Our survey of 388 APs shows roughly a
normal distribution of clock skews within a range of −30 to
30 ppm. We concluded that the information content of clock
skews alone is too limited and unique device ﬁngerprinting
using clock skews is not practically feasible for wireless ac-
cess points due to its limited distinctiveness. Note, however
that our evaluation did not consider the actual inﬂuence of
environmental conditions such as temperature.
In general, no approach for wireless device ﬁngerprinting
has been able to identify 802.11 APs with acceptable de-
tection ratios, while being performed from arbitrary mobile
clients. We address this challenge and show that by includ-
ing temperature information and applying state-of-the-art
machine learning techniques, we are able to reliably detect
the presence of faked APs. Moreover, we completely ex-
clude the inﬂuence of the ﬁngerprinter on the ﬁngerprint.
Our method successfully detects the replacement of an AP
on a representative data set with an accuracy of 90%, thus,
60% better that the best approach known so far. This is
done without actively generating any traﬃc and requires
less than one minute to collect a suﬃcient number of obser-
vations.
3. CLOCK SKEW BACKGROUND
In this section, we describe physical and mathematical
background of clock skews in time measuring hardware.
3.1 Quartz Oscillator Fundamentals
Common computer clocks (and thus the ones that operate
the TSF timer in Wi-Fi chipsets) are based on crystal os-
cillators. The major component of a crystal oscillator is an
anisotropic crystal formed from SiO2 (quartz). Due to its
piezoelectric properties a mechanical strain is produced in
the crystal when exposed to an electric ﬁeld. The resulting
vibration enables the crystal to be used as resonator in an os-
cillator unit that can generate clock signals. Although other
types of resonators exist, quartz has proven to be superior
regarding the properties frequency stability, intrinsic loss,
simplicity of production and cost. Hence, since many years,
5quartz oscillators have been the preferred medium satisfying
the needs for precise frequency generation [16].
Crystal oscillator stability and accuracy is aﬀected by
physical and electrical factors, with temperature being one
of the most signiﬁcant. The dependency on temperature
is primarily determined by the angle at which the crystal
is cut with respect to the crystallographic axes during the
manufacturing process [29]. Most common is the AT-cut.
This crystal type exhibits a cubic dependency on temper-
ature [31]. The turning point of this cubic function and
the local extrema can be controlled by small variations of
the cut angle. The inﬂection point is typically located at
a temperature of 25 ◦C (77 ◦F) leading to highest stability
at typical operating temperatures. More than 90% of all
deployed crystal oscillators are based on an AT-cut crystal.
The described properties of crystal oscillators enable the
vendors of Wi-Fi chipsets to select units that meet given
speciﬁcations. For 802.11 devices, a frequency tolerance of
±25ppm is speciﬁed [12].
3.2 Mathematics of Clock Skews
We model (discretized) true time by the set Z of integers
with an arbitrarily chosen zero point and measured in arbi-
trarily chosen units. A clock counts time steps from a (pos-
sibly diﬀerent) zero point, i. e., it is a function C : Z → Z,
giving the mapping from true time t to the time C(t) mea-
sured by the clock. Without loss of generality, we assume
that all clocks have the same time step resolution as the unit
chosen for true time—microseconds in our case7.
For an ideal clock, the diﬀerence C(t2)−C(t1) between two
time measurements at points t1 and t2 in true time would
always be t2 − t1. However, due to physical properties (see
Section 3.1), clocks based on crystal oscillators exhibit a
certain oﬀset
oﬀsetC (t1, t2) = [C(t2) − C(t1)] − [t2 − t1]
(1)
when measuring such time intervals (positive if the clock is
too fast and negative if the clock is too slow). The skew sC
of a clock C between points t1 and t2 in true time is the
slope of the oﬀset between these points:
C(t2) − C(t1)
t2 − t1
− 1
(2)
sC (t1, t2) =
oﬀsetC (t1, t2)
t2 − t1
=
Typically, it is not possible to measure the clock skew
directly, since the ﬁngerprinter’s clock has its own non-neg-
ligible skew. Hence, there are two clocks: the clock C of
the access point and the clock D of the ﬁngerprinter. We
observe both at points t1 and t2 in true time and compute
a subjective oﬀset
oﬀsetD,C (t1, t2) = [C(t2) − C(t1)] − [D(t2) − D(t1)]
(3)
and a subjective skew :
sD,C (t1, t2) =
oﬀsetD,C (t1, t2)
D(t2) − D(t1)
=
C(t2) − C(t1)
D(t2) − D(t1)
− 1
(4)
Figure 1 shows the oﬀsets of two diﬀerent access point
clocks measured from two diﬀerent ﬁngerprinters at two dif-
ferent measuring times. The ﬁngerprinters’ skews lead to
signiﬁcantly diﬀerent subjective skews for the same access
point clocks. Moreover, we observe a small diﬀerence for
the diﬀerent measuring times.
7In fact, all clocks considered here, i. e., the TSF clock and
the system clock, have this resolution.
Figure 1: Subjective oﬀsets of the clocks of two dif-
ferent access points (C = AP1 and C = AP2) mea-
sured from two diﬀerent ﬁngerprinters (D = FP1 and
D = FP2) at two diﬀerent measuring times (t0 = m0
and t0 = m1)
We can already see that (at least for short periods of
time—in the range of several minutes) the oﬀsets increase
or decrease linearly. To overcome noise produced, e. g., by
the communication hardware and the device drivers, we not
only take the measurements at two border points (as in the
mathematical formulae), but use all available measurements
within a certain interval (several minutes for high preci-
sion). The skew is then approximated by the slope of a
least squares ﬁt (LSF) linear regression over these measure-
ments. LSF has shown to be the superior method for the
slope estimation in the described setting [18, 15].
The goal of the following sections is to eliminate the inﬂu-
ence of the ﬁngerprinters and model the inﬂuence of temper-
ature on the access points in order to isolate the diﬀerences
between access points and use them as a ﬁngerprint. But
ﬁrst, we introduce our experimental setup and the resulting
data set in the next section.
4. DATA SET
In this section, we describe our experimental setup. Our
goal was to generate a representative data set containing
APs from various vendors and a variety of ﬁngerprinter ma-
chines. Therefore, we placed twelve diﬀerent physical APs—
2 AVM FritzBox 7050 (AP1–2), 1 LANCOM L-54G (AP3),
1 D-Link DAP-1360 (AP4), 2 Edimax EW-7228APn (AP5–
6), 4 Linksys WRT54GL (AP7–10) and 2 Netgear WG602v4
(AP11–12)—in a dedicated room, all operating on the same
channel (for simplicity of data collection). We induced dif-
ferent room temperatures by turning the heating oﬀ/on or
opening/closing the windows from time to time. We mea-
sured the room temperature with a Voltcraft DL-181THP
data logger. To measure the clock skew of the APs we used
four diﬀerent ﬁngerprinter machines. All were customary
laptops running Ubuntu 10.10. Beacons were sniﬀed using
the modiﬁed scapy library proposed in [18].
The experiment was performed over about four weeks.
The temperature conditions of our experimental environ-
ment are shown in Figure 2, and, as depicted cover all tem-
peratures that are typically to be expected in non-aircon-
ditioned indoor settings, i. e., between 17–27 ◦C. We de-
liberately created periods where the temperature remained
050100150200250300350400D(t)−D(t0)[s]−4−3−2−101234oﬀsetD,C(t0,t)[ms]FP1AP1m0FP1AP1m1FP1AP2m0FP1/2AP2/1m1/0FP2AP1m1FP2AP2m0FP2AP2m16Figure 2: Temperature variation over time
5. FINGERPRINTER INFLUENCE
In this section, we brieﬂy revisit the previously proposed
and, up to now, only available method for eliminating the in-
ﬂuence of the ﬁngerprinters’ own clock skews, i. e., the NTP
method [18].
It relies on an estimation of the ﬁngerprint-
ers’ skews from a Network Time Protocol (NTP) service
running on the ﬁngerprinters. We show why this approach
is insuﬃcient for examining the dependency of clock skews
on temperature. We then introduce a novel approach, the
2AP method, which is based on the observation that the ﬁn-
gerprinters’ skews are cancelled when calculating clock skew
diﬀerences between two measured access points. Hence, this
method eliminates the ﬁngerprinter inﬂuence by design.
The NTP method is based on the observation that, after
rewriting equation (2) for the (objective) skews of access
point and ﬁngerprinter to
C(t2) − C(t1) = [1 + sC (t1, t2)] · (t2 − t1)
D(t2) − D(t1) = [1 + sD(t1, t2)] · (t2 − t1)
(5)
(6)
and employing this substitution in the equation for subjec-
tive skew (4), we obtain: