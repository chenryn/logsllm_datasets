                     Worker 25: actual time=17.017..17.017 rows=0 loops=1  
                       Buffers: shared hit=935  
                     Worker 26: actual time=2.886..2.886 rows=0 loops=1  
                       Buffers: shared hit=163  
                     Worker 27: actual time=121.060..121.060 rows=0 loops=1  
                       Buffers: shared hit=6585  
                     Worker 28: actual time=2.911..2.911 rows=0 loops=1  
                       Buffers: shared hit=135  
                     Worker 29: actual time=2.898..2.898 rows=0 loops=1  
                       Buffers: shared hit=168  
                     Worker 30: actual time=121.689..121.689 rows=0 loops=1  
                       Buffers: shared hit=3630  
                     Worker 31: actual time=2.920..2.920 rows=0 loops=1  
                       Buffers: shared hit=165  
                     Worker 32: actual time=3.572..3.572 rows=0 loops=1  
                       Buffers: shared hit=97  
                     Worker 33: actual time=3.567..3.567 rows=0 loops=1  
                       Buffers: shared hit=171  
                     Worker 34: actual time=2.911..2.911 rows=0 loops=1  
                       Buffers: shared hit=89  
                     Worker 35: actual time=122.732..122.732 rows=0 loops=1  
                       Buffers: shared hit=3744  
                     Worker 36: actual time=2.877..2.877 rows=0 loops=1  
                       Buffers: shared hit=80  
                     Worker 37: actual time=16.989..16.989 rows=0 loops=1  
                       Buffers: shared hit=496  
                     Worker 38: actual time=2.882..2.882 rows=0 loops=1  
                       Buffers: shared hit=86  
                     Worker 39: actual time=0.014..123.337 rows=1 loops=1  
                       Buffers: shared hit=3693  
                     Worker 40: actual time=3.595..3.595 rows=0 loops=1  
                       Buffers: shared hit=97  
               ->  Parallel Seq Scan on public.c3  (cost=0.00..69679.78 rows=1 width=0) (actual time=52.559..58.290 rows=0 loops=21)  
                     Filter: (c3.id = 2)  
                     Rows Removed by Filter: 476190  
                     Buffers: shared hit=54055  
                     Worker 0: actual time=0.689..0.689 rows=0 loops=1  
                       Buffers: shared hit=20  
                     Worker 1: actual time=14.124..14.124 rows=0 loops=1  
                       Buffers: shared hit=419  
                     Worker 2: actual time=111.314..111.314 rows=0 loops=1  
                       Buffers: shared hit=3242  
                     Worker 5: actual time=14.126..14.126 rows=0 loops=1  
                       Buffers: shared hit=421  
                     Worker 6: actual time=112.583..112.583 rows=0 loops=1  
                       Buffers: shared hit=3281  
                     Worker 8: actual time=0.672..0.672 rows=0 loops=1  
                       Buffers: shared hit=19  
                     Worker 9: actual time=0.669..0.669 rows=0 loops=1  
                       Buffers: shared hit=19  
                     Worker 10: actual time=113.632..113.632 rows=0 loops=1  
                       Buffers: shared hit=5969  
                     Worker 12: actual time=0.678..0.678 rows=0 loops=1  
                       Buffers: shared hit=34  
                     Worker 14: actual time=115.273..115.273 rows=0 loops=1  
                       Buffers: shared hit=6034  
                     Worker 16: actual time=0.671..0.671 rows=0 loops=1  
                       Buffers: shared hit=34  
                     Worker 18: actual time=116.184..116.184 rows=0 loops=1  
                       Buffers: shared hit=6171  
                     Worker 22: actual time=117.285..117.285 rows=0 loops=1  
                       Buffers: shared hit=6408  
                     Worker 26: actual time=117.931..117.931 rows=0 loops=1  
                       Buffers: shared hit=6444  
                     Worker 28: actual time=0.679..0.679 rows=0 loops=1  
                       Buffers: shared hit=35  
                     Worker 29: actual time=14.117..14.117 rows=0 loops=1  
                       Buffers: shared hit=794  
                     Worker 31: actual time=118.705..118.705 rows=0 loops=1  
                       Buffers: shared hit=6425  
                     Worker 34: actual time=119.585..119.585 rows=0 loops=1  
                       Buffers: shared hit=3610  
                     Worker 36: actual time=0.675..0.675 rows=0 loops=1  
                       Buffers: shared hit=19  
                     Worker 38: actual time=0.013..120.367 rows=1 loops=1  
                       Buffers: shared hit=3561  
               ->  Parallel Seq Scan on public.c4  (cost=0.00..69680.27 rows=1 width=0) (actual time=92.675..102.616 rows=0 loops=11)  
                     Filter: (c4.id = 2)  
                     Rows Removed by Filter: 909091  
                     Buffers: shared hit=54055  
                     Worker 1: actual time=96.862..96.862 rows=0 loops=1  
                       Buffers: shared hit=2822  
                     Worker 5: actual time=98.057..98.057 rows=0 loops=1  
                       Buffers: shared hit=2879  
                     Worker 9: actual time=99.478..99.478 rows=0 loops=1  
                       Buffers: shared hit=2905  
                     Worker 13: actual time=101.043..101.043 rows=0 loops=1  
                       Buffers: shared hit=5466  
                     Worker 17: actual time=101.879..101.879 rows=0 loops=1  
                       Buffers: shared hit=5528  
                     Worker 21: actual time=102.755..102.755 rows=0 loops=1  
                       Buffers: shared hit=5538  
                     Worker 25: actual time=103.575..103.575 rows=0 loops=1  
                       Buffers: shared hit=5671  
                     Worker 29: actual time=104.456..104.456 rows=0 loops=1  
                       Buffers: shared hit=5741  
                     Worker 33: actual time=105.152..105.152 rows=0 loops=1  
                       Buffers: shared hit=5782  
                     Worker 37: actual time=106.161..106.161 rows=0 loops=1  
                       Buffers: shared hit=3244  
 Planning time: 0.143 ms  
 Execution time: 143.039 ms  
(282 rows)  
扫描p, c1, c2, c3, c4是并行的。时间不是累加。  
worker 分布不均，如果均匀性能应该是可以更好的。  
不过现在还没有正式MERGE这个PATCH，正式提交肯定会改进的。  
```  
12、外部表继承的语法如下：  
```  
ALTER FOREIGN TABLE name   
    INHERIT parent_table |   
    NO INHERIT parent_table  
```  
用此法，可以实现任意类型的外部表的并行。当然也包括本文提到的cstore_fdw，列存外部表。  
还有mysql_fdw, oracle_fdw, mongo_fdw, file_fdw, oss_fdw, 比较全面的FDW接口，可以参考这个WIKI页面：  
https://wiki.postgresql.org/wiki/Fdw  
## 参考  
https://commitfest.postgresql.org/15/987/  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")