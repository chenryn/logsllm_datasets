ement(s). The information preserves the structure of the
data to be signed. However, Gajek et al. have shown
that this approach does not prevent XSW attacks [16].
Benameur, Kadir, and Fenet [6] have extended the inline
approach, but suffer from the same vulnerabilities.
Jensen et al. [24] have analyzed the effectiveness of
XML Schema validation in terms of fending XSW at-
tacks in Web Services. Thereby, they have used man-
ually hardened XML Schemas. The authors have con-
cluded that XML Schema validation is capable of fend-
ing XSW attacks, at the expense of two important disad-
vantages: for each application a speciﬁc hardened XML
Schema without extension points must be created care-
fully. Moreover, validating of a hardened XML Schema
entails severe performance penalties.
XPath and XPath Filter 2 are speciﬁed as referenc-
ing mechanisms in the XML Signature standard. How-
ever, the WS-Security standard proposes not to use these
mechanisms, and the SAML standard mandates to use
Id-based referencing instead. This is due to the fact that
both standards are very complex. Gajek et al. [15] have
evaluated the effectiveness of these mechanisms to mit-
igate XSW attacks in the SOAP context, and have pro-
posed a lightweight variant FastXPath, which has lead
to the same performance in a PoC implementation as by
adapting the Id-based referencing.
Jensen et al. [23] have however shown that this ap-
proach does not completely eliminate XSW attacks: by
clever manipulations of XML namespace declarations
within a signed document, which take into account the
processing rules for canonicalization algorithms in XML
Signature, XSW attacks could successfully be mounted
even against XPath referenced resources.
The impacts of practical XSW attacks have also been
analyzed in [20, 33].
In these works new types of
XSW attack have been applied on SOAP Web Service
interfaces of Amazon and Eucalyptus clouds. The at-
tacks have exploited different XML processing in dis-
tinct modules.
In summary, previous work has mostly concentrated
on SOAP, and the results do not directly apply to all
SAML use cases.
SAML and Single Sign-On Since SAML offers very
ﬂexible mechanisms to make claims about identities,
there is a large body of research on how SAML can be
used to improve identity management (e.g. [22, 39]) and
other identity-related processes like payment or SIP on
the Internet [25, 35]. In all these applications, the secu-
rity of all SAML standards is assumed.
In an overview paper on SAML, Maler and Reed [26]
have proposed mutually authenticated TLS as the basic
Figure 15: Unique identiﬁcation of signed data applied
on a SOAP message including two signed elements: The
RPsig module uniquely identiﬁes the signed elements
with a random value r and forwards this information
along with the whole XML message.
new attributes: neither directly into the Assertion el-
ement nor the Response binding element. Therefore,
the XML Schema validation of the assertion processing
module would fail. For general application of this idea
the SAML XML Schema needs to be extended.
Another possibility to implement this countermeasure
is to use XML node types, which do not violate XML
Schema, but are visible to the XML processors. For
example, processing instructions, which are intended to
carry instructions to the application belong to this group.
They can be placed anywhere in the document without
invalidating the XML Schema. Additionally, they can
be conveniently found by processing XML trees with
streaming and DOM-based parsers. Therefore, the pres-
ence of these XML nodes would help to ﬁnd the vali-
dated data and thus allows to mitigate XSW attacks. We
propose this technique for further discussion in the W3C
XML Security Working Group and the OASIS consor-
tium.
9 Related Work
XML Signature Wrapping (XSW). XSW attacks
have ﬁrst been described in [28] and [7]. Several coun-
termeasures have been proposed over time.
McIntosh and Austel [28] have presented several XSW
attacks and discussed (informal) receiver-sided security
policies in order to prevent such exploits. They have
however not given a deﬁnitive solution for this problem.
Bhargavan, Fournet and Gordon [7] have analyzed a
formal approach in order to verify Web Services speciﬁ-
cations. They have proposed a policy advisor [8], a tool
that generates appropriate security policies for Web Ser-
vices protocols. This approach is however not directly
applicable to SAML.
Rahaman, Schaad and Rits [32, 30, 31] have refrained
from policy-driven approaches and have introduced an
inline solution. The authors have proposed to embed an
Account element into the SOAP header. This element
EnvelopeAssertionHeaderID=“123“SignatureSignatureURI=“#123“BodyURI=“#body“ID=“body“UnsignedContentRPsigRPclaimsrg=“xy“rg=“xy“r=“xy“EnvelopeAssertionHeaderID=“123“SignatureSignatureURI=“#123“BodyURI=“#body“ID=“body“UnsignedContentr=“xy“security mechanism. Please note that even if mutually
authenticated TLS would be employed, it would not pre-
vent our attacks because we only need a single signed
SAML assertion from an IdP, which we can get through
different means. Moreover, there exist speciﬁc sidechan-
nels, which could be exploited by an adversary. Let us
e.g. mention chosen-plaintext attacks against SSL/TLS
predicted by [37] and reﬁned by [5], or the Million Ques-
tion attack by Bleichenbacher [9]. Other complications
arise with the everlasting problems with SSL PKIs.
In 2003, T. Groß has initiated the security analysis of
SAML [18] from a Dolev-Yao point of view, which has
been formalized in [4]. He has found, together with B.
Pﬁtzmann [19], deﬁciencies in the information ﬂow be-
tween the SAML entities. Their work has inﬂuenced a
revision of the standard.
In 2008, Armando et al. [3] have built a formal model
of the SAML 2.0 Web Browser SSO protocol and have
analyzed it with the model checker SATMC. By intro-
ducing a malicious RP they have found a practical at-
tack on the SAML implementation of Google Apps. An-
other attack on the SAML-based SSO of Google Apps
has been found in 2011 [2]. Again, a malicious RP has
been used to force a user’s web browser to access a re-
source without approval. Thereby, the malicious RP has
injected malicious content in the initial unintended re-
quest to the attacked RP. After successful authentication
on the IdP this content has been executed in the context
of the user’s authenticated session.
The fact that SAML protocols consist of multiple lay-
ers has been pointed out in [13]. In this paper, the Weak-
est Link Attack has enabled adversaries to succeed at all
levels of authentication by breaking only at the weakest
one.
Very recently, another work pointing out the impor-
tance of SSO protocols has been published by Wang et
al. [38]. This work has analyzed the security quality
of commercially deployed SSO solutions. It has shown
eight serious logic ﬂaws in high-proﬁle IdPs and RPs
(such as OpenID, Facebook, or JanRain), which have
allowed an attacker to sign in as the victim user. The
SAML-based SSO has not been analyzed.
10 Conclusion
In this paper we systematically analyzed the application
of XSW attacks on SAML frameworks and systems. We
showed that the large majority of systems exhibit criti-
cal security insufﬁciencies in their interfaces. Addition-
ally, we revealed new classes of XSW attacks, which
worked even if speciﬁc countermeasures were applied.
We showed that the application of XML Security heav-
ily depends on the underlying XML processing system
(i.e. different XML libraries and parsing types). The pro-
cessing modules involved can have inconsistent views on
the same secured XML document, which may result in
successful XSW attacks. Generally, these heterogeneous
views can exist in all data formats beyond XML.
We proposed a formal model by analyzing the in-
formation ﬂow inside the Relying Party and presented
two countermeasures. The effectiveness of these coun-
termeasures depends on the real information ﬂow and
the data processing inside RPclaims. Our research is
a ﬁrst step towards understanding the implications of
the information ﬂow between cryptographic and non-
cryptographic components in complex software environ-
ments. Research in this direction could enhance the re-
sults, and provide easy-to-apply solutions for practical
frameworks.
As another future research direction, we propose de-
velopment of an enhanced penetration testing tool for
XSW in arbitrary XML documents and all types of XML
Signatures. This kind of tool presents a huge challenge
as it should e.g. consider more difﬁcult transformations
like XPath or XSLT.
Acknowledgements
The authors would like to thank all the security teams and
their developers for their cooperation, and would like to
note that throughout the collaboration all the teams ef-
fectuated a productive and highly professional commu-
nication.
Moreover, we would like to thank Scott Cantor, David
Jorm, Florian Kohlar, Christian Mainka, Christopher
Meyer, Thomas Roessler, and the anonymous review-
ers (of the USENIX Security Symposium and the IEEE
Symposium on Security and Privacy) for their valuable
remarks on the developed attacks and the paper content.
Finally, we thank Alexander Bieber for the Sharepoint
2010 test bed.
This work was partially funded by the Sec2 project of
the German Federal Ministry of Education and Research
(BMBF, FKZ: 01BY1030).
References
[1] IEEE International Conference on Web Services, ICWS 2009, Los
Angeles, CA, USA, 6-10 July 2009 (2009), IEEE.
[2] ARMANDO, A., CARBONE, R., COMPAGNA, L., CU ´ELLAR, J.,
PELLEGRINO, G., AND SORNIOTTI, A. From Multiple Creden-
tials to Browser-Based Single Sign-On: Are We More Secure?
In Future Challenges in Security and Privacy for Academia and
Industry, J. Camenisch, S. Fischer-Hbner, Y. Murayama, A. Port-
mann, and C. Rieder, Eds., vol. 354 of IFIP Advances in Infor-
mation and Communication Technology. Springer Boston, 2011.
[3] ARMANDO, A., CARBONE, R., COMPAGNA, L., CU ´ELLAR,
Formal Analysis of SAML 2.0
J., AND TOBARRA, M. L.
Web Browser Single Sign-On: Breaking the SAML-based Single
Sign-On for Google Apps. In Proceedings of the 6th ACM Work-
shop on Formal Methods in Security Engineering, FMSE 2008,
V. Shmatikov, Ed. ACM, Alexandria and VA and USA, 2008.
[4] BACKES, M., AND GROSS, T. Tailoring the dolev-yao abstrac-
In SWS (2005), E. Damiani and
tion to web services realities.
H. Maruyama, Eds., ACM, pp. 65–74.
[5] BARD, G. V.
A Challenging but Feasible Blockwise-
Adaptive Chosen-Plaintext Attack on SSL. In SECRYPT (2006),
M. Malek, E. Fern´andez-Medina, and J. Hernando, Eds., IN-
STICC Press, pp. 99–109.
[6] BENAMEUR, A., KADIR, F. A., AND FENET, S. XML Rewrit-
ing Attacks: Existing Solutions and their Limitations. In IADIS
Applied Computing 2008 (Apr. 2008), IADIS Press.
[7] BHARGAVAN, K., FOURNET, C., AND GORDON, A. D. Verify-
ing policy-based security for web services. In CCS ’04: Proceed-
ings of the 11th ACM conference on Computer and communica-
tions security (2004), pp. 268–277.
[8] BHARGAVAN, K., FOURNET, C., GORDON, A. D., AND
O’SHEA, G. An advisor for web services security policies. In
SWS ’05: Proceedings of the 2005 workshop on Secure web ser-
vices (New York, NY, USA, 2005), ACM, pp. 1–9.
[9] BLEICHENBACHER, D. Chosen ciphertext attacks against proto-
cols based on the rsa encryption standard pkcs #1. In CRYPTO
(1998), pp. 1–12.
[10] CANTOR, S., KEMP,
Proﬁles for
J., MALER, E., AND PHILPOTT,
the OASIS Security Assertion Markup
R.
Language (SAML) V2.0.
OASIS Standard, 15.03.2005,
2005. http://docs.oasis-open.org/security/saml/v2.
0/saml-profiles-2.0-os.pdf.
[11] CANTOR, S., KEMP, J., PHILPOTT, R., AND MALER, E.
Assertions and Protocol for the OASIS Security Assertion
Markup Language (SAML) V2.0. OASIS Standard, 15.03.2005,
2005. http://docs.oasis-open.org/security/saml/v2.
0/saml-core-2.0-os.pdf.
[12] CANTOR, S., MOREH, J., PHILPOTT, R., AND MALER,
E. Metadata for the OASIS Security Assertion Markup
Language (SAML) V2.0.
OASIS Standard, 15.03.2005,
2005. http://docs.oasis-open.org/security/saml/v2.
0/saml-metadata-2.0-os.pdf.
[13] CHAN, Y.-Y. Weakest link attack on single sign-on and its case
in saml v2.0 web sso. In Computational Science and Its Applica-
tions - ICCSA 2006, M. Gavrilova, O. Gervasi, V. Kumar, C. Tan,
D. Taniar, A. Lagan, Y. Mun, and H. Choo, Eds., vol. 3982 of
Lecture Notes in Computer Science. Springer Berlin / Heidelberg,
2006, pp. 507–516. 10.1007/11751595 54.
[14] EASTLAKE, D., REAGLE, J., SOLO, D., HIRSCH, F., AND
ROESSLER, T. XML Signature Syntax and Processing (Second
Edition), 2008. http://www.w3.org/TR/xmldsig-core/.
[15] GAJEK, S., JENSEN, M., LIAO, L., AND SCHWENK, J. Analy-
sis of signature wrapping attacks and countermeasures. In ICWS
[1], pp. 575–582.
[16] GAJEK, S., LIAO, L., AND SCHWENK, J. Breaking and ﬁxing
the inline approach. In SWS ’07: Proceedings of the 2007 ACM
workshop on Secure web services (New York, NY, USA, 2007),
ACM, pp. 37–43.
[17] GAJEK, S., LIAO, L., AND SCHWENK, J. Towards a formal
semantic of xml signature. W3C Workshop Next Steps for XML
Signature and XML Encryption, 2007.
[18] GROSS, T. Security Analysis of the SAML SSO Browser/Artifact
Proﬁle. In ACSAC (2003), IEEE Computer Society, pp. 298–307.
[19] GROSS, T., AND PFITZMANN, B. SAML artifact information
ﬂow revisited. In In IEEE Workshop on Web Services Security
(WSSS) (Berkeley, May 2006), IEEE, pp. 84–100.
[20] GRUSCHKA, N., AND IACONO, L. L. Vulnerable cloud: Soap
message security validation revisited. In ICWS [1], pp. 625–631.
[21] GUDGIN, M., HADLEY, M., MENDELSOHN, N., MOREAU, J.-
J., AND NIELSEN, H. F. SOAP Version 1.2 Part 1: Messaging
Framework. W3C Recommendation (2003).
[22] HARDING, P., JOHANSSON, L., AND KLINGENSTEIN, N. Dy-
namic security assertion markup language: Simplifying single
sign-on. Security Privacy, IEEE 6, 2 (march-april 2008), 83 –
85.
[23] JENSEN, M., LIAO, L., AND SCHWENK, J. The curse of names-
paces in the domain of xml signature. In SWS (2009), E. Damiani,
S. Proctor, and A. Singhal, Eds., ACM, pp. 29–36.
[24] JENSEN, M., MEYER, C., SOMOROVSKY, J., AND SCHWENK,
J. On the effectiveness of xml schema validation for counter-
ing xml signature wrapping attacks. In Securing Services on the
Cloud (IWSSC), 2011 1st International Workshop on (sept. 2011),
pp. 7 –13.
[25] LUTZ, D., AND STILLER, B. Combining identity federation with
payment: The saml-based payment protocol. In Network Oper-
ations and Management Symposium (NOMS), 2010 IEEE (april
2010), pp. 495 –502.
[26] MALER, E., AND REED, D. The venn of identity: Options and
issues in federated identity management. Security Privacy, IEEE
6, 2 (march-april 2008), 16 –23.
[27] MCINTOSH, M., AND AUSTEL, P. XML Signature Element
Wrapping Attacks and Countermeasures. In SWS ’05: Proceed-
ings of the 2005 workshop on Secure web services (New York,
NY, USA, 2005), ACM Press, pp. 20–27.
[28] MCINTOSH, M., AND AUSTEL, P. XML signature element
wrapping attacks and countermeasures. In Workshop on Secure
Web Services (2005).
[29] NADALIN, A., KALER, C., MONZILLO, R., AND HALLAM-
BAKER, P. Web Services Security: SOAP Message Security 1.1
(WS-Security 2004). OASIS Standard (2006).
[30] RAHAMAN, M. A., MARTEN, R., AND SCHAAD, A. An inline
approach for secure soap requests and early validation. OWASP
AppSec Europe, 2006.
[31] RAHAMAN, M. A., AND SCHAAD, A. Soap-based secure con-
versation and collaboration. In ICWS (2007), pp. 471–480.
[32] RAHAMAN, M. A., SCHAAD, A., AND RITS, M. Towards se-
In Workshop on Secure
cure soap message exchange in a soa.
Web Services (2006).
[33] SOMOROVSKY, J., HEIDERICH, M., JENSEN, M., SCHWENK,
J., GRUSCHKA, N., AND IACONO, L. L. All Your Clouds are
Belong to us – Security Analysis of Cloud Management Inter-
faces. In The ACM Cloud Computing Security Workshop (CCSW)
(Oct. 2011).
[34] THE APACHE SOFTWARE FOUNDATION. Apache Xerces.
[35] TSCHOFENIG, H., FALK, R., PETERSON, J., HODGES, J.,
SICKER, D., AND POLK, J. Using saml to protect the session
initiation protocol (sip). Network, IEEE 20, 5 (sept.-oct. 2006),
14 –17.
[36] VAN DER VLIST, E. XML Schema. O’Reilly, 2002.
[37] WAGNER, D., AND SCHNEIER, B. Analysis of the SSL 3.0 pro-
In In Proceedings of the Second USENIX Workshop on
tocol.
Electronic Commerce (1996), USENIX Association, pp. 29–40.
[38] WANG, R., CHEN, S., AND WANG, X. Signing Me onto Your
Accounts through Facebook and Google: a Trafﬁc-Guided Secu-
rity Study of Commercially Deployed Single-Sign-On Web Ser-
vices. In IEEE Symposium on Security and Privacy (Oakland),
IEEE Computer Society (May 2012).
[39] YONG-SHENG, Z., AND JING, Y. Research of dynamic authen-
tication mechanism crossing domains for web services based on
saml. In Future Computer and Communication (ICFCC), 2010
2nd International Conference on (may 2010), vol. 2, pp. V2–395
–V2–398.