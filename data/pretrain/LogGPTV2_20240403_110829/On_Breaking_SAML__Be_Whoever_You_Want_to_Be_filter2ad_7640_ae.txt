### XML Signature Wrapping (XSW) Attacks and Countermeasures

#### 1. Introduction to XSW Attacks
XML Signature Wrapping (XSW) attacks exploit the structure of XML signatures to manipulate signed data without invalidating the signature. Gajek et al. [16] demonstrated that the inline approach, which preserves the structure of the data to be signed, does not prevent XSW attacks. Benameur, Kadir, and Fenet [6] extended this approach but were still vulnerable to the same issues.

Jensen et al. [24] analyzed the effectiveness of XML Schema validation in mitigating XSW attacks in Web Services. They used manually hardened XML Schemas and concluded that while XML Schema validation can fend off XSW attacks, it comes with significant disadvantages: each application requires a carefully crafted, specific hardened XML Schema without extension points, and the validation process incurs severe performance penalties.

#### 2. Referencing Mechanisms in XML Signatures
XPath and XPath Filter 2 are specified as referencing mechanisms in the XML Signature standard. However, the WS-Security standard advises against using these mechanisms, and the SAML standard mandates the use of Id-based referencing instead. Gajek et al. [15] evaluated the effectiveness of these mechanisms in mitigating XSW attacks in the SOAP context and proposed a lightweight variant, FastXPath, which achieved similar performance to Id-based referencing in a proof-of-concept implementation.

Jensen et al. [23] showed that even with XPath referencing, XSW attacks could still be successful by manipulating XML namespace declarations within a signed document, taking advantage of the processing rules for canonicalization algorithms in XML Signature.

#### 3. Practical Impacts of XSW Attacks
The practical impacts of XSW attacks have been analyzed in [20, 33], where new types of XSW attacks were applied to SOAP Web Service interfaces of Amazon and Eucalyptus clouds. These attacks exploited different XML processing in distinct modules.

In summary, previous work has primarily focused on SOAP, and the results do not directly apply to all SAML use cases.

#### 4. SAML and Single Sign-On (SSO)
SAML offers flexible mechanisms for making claims about identities, leading to extensive research on how SAML can improve identity management [22, 39] and other identity-related processes like payment or SIP on the Internet [25, 35]. In these applications, the security of all SAML standards is assumed.

Maler and Reed [26] proposed mutually authenticated TLS as the basic security mechanism for SAML. However, even if mutually authenticated TLS is employed, it would not prevent XSW attacks because a single signed SAML assertion from an Identity Provider (IdP) can be obtained through various means. Additionally, there are specific side-channel attacks, such as chosen-plaintext attacks against SSL/TLS [37, 5] and the Million Question attack by Bleichenbacher [9].

#### 5. Security Analysis of SAML
In 2003, T. Groß initiated a security analysis of SAML from a Dolev-Yao perspective [18], formalized in [4]. Together with B. Pfitzmann [19], they found deficiencies in the information flow between SAML entities, influencing a revision of the standard.

Armando et al. [3] built a formal model of the SAML 2.0 Web Browser SSO protocol and analyzed it with the model checker SATMC. They discovered a practical attack on the SAML implementation of Google Apps. Another attack on the SAML-based SSO of Google Apps was found in 2011 [2], where a malicious Relying Party (RP) forced a user's web browser to access a resource without approval.

The multi-layered nature of SAML protocols has been highlighted in [13], where the Weakest Link Attack enabled adversaries to succeed at all levels of authentication by breaking only the weakest one.

#### 6. Recent Research
Wang et al. [38] recently published a study on the security quality of commercially deployed SSO solutions, revealing eight serious logic flaws in high-profile IdPs and RPs (such as OpenID, Facebook, or JanRain), allowing attackers to sign in as victim users. The SAML-based SSO was not analyzed in this study.

#### 7. Conclusion
This paper systematically analyzed the application of XSW attacks on SAML frameworks and systems, showing that most systems exhibit critical security insufficiencies in their interfaces. New classes of XSW attacks were revealed, even when specific countermeasures were applied. The effectiveness of XML Security heavily depends on the underlying XML processing system, and inconsistent views on the same secured XML document can result in successful XSW attacks.

We proposed a formal model by analyzing the information flow inside the Relying Party and presented two countermeasures. The effectiveness of these countermeasures depends on the real information flow and data processing inside RPclaims. Our research is a first step towards understanding the implications of the information flow between cryptographic and non-cryptographic components in complex software environments.

Future research directions include the development of an enhanced penetration testing tool for XSW in arbitrary XML documents and all types of XML Signatures, considering more difficult transformations like XPath or XSLT.

#### 8. Acknowledgements
The authors thank all the security teams and developers for their cooperation, and specifically acknowledge Scott Cantor, David Jorm, Florian Kohlar, Christian Mainka, Christopher Meyer, Thomas Roessler, and the anonymous reviewers for their valuable remarks. This work was partially funded by the Sec2 project of the German Federal Ministry of Education and Research (BMBF, FKZ: 01BY1030).

#### 9. References
[1] IEEE International Conference on Web Services, ICWS 2009, Los Angeles, CA, USA, 6-10 July 2009 (2009), IEEE.
[2] ARMANDO, A., CARBONE, R., COMPAGNA, L., CU ´ELLAR, J., PELLEGRINO, G., AND SORNIOTTI, A. From Multiple Credentials to Browser-Based Single Sign-On: Are We More Secure? In Future Challenges in Security and Privacy for Academia and Industry, J. Camenisch, S. Fischer-Hbner, Y. Murayama, A. Portmann, and C. Rieder, Eds., vol. 354 of IFIP Advances in Information and Communication Technology. Springer Boston, 2011.
[3] ARMANDO, A., CARBONE, R., COMPAGNA, L., CU ´ELLAR, J., AND TOBARRA, M. L. Formal Analysis of SAML 2.0 Web Browser Single Sign-On: Breaking the SAML-based Single Sign-On for Google Apps. In Proceedings of the 6th ACM Workshop on Formal Methods in Security Engineering, FMSE 2008, V. Shmatikov, Ed. ACM, Alexandria and VA and USA, 2008.
...
[39] YONG-SHENG, Z., AND JING, Y. Research of dynamic authentication mechanism crossing domains for web services based on SAML. In Future Computer and Communication (ICFCC), 2010 2nd International Conference on (may 2010), vol. 2, pp. V2–395 –V2–398.