title:Privacy-preserving alibi systems
author:Benjamin Davis and
Hao Chen and
Matthew K. Franklin
Privacy-Preserving Alibi Systems
Benjamin Davis
One Shields Ave.
Davis, CA 95616
Hao Chen
One Shields Ave.
Davis, CA 95616
Matthew Franklin
One Shields Ave.
Davis, CA 95616
University of California, Davis
University of California, Davis
University of California, Davis
PI:EMAIL
PI:EMAIL
PI:EMAIL
ABSTRACT
An alibi provides evidence of a person’s past location and
can be critical in proving her innocence. An alibi must be
bound to a person’s identity to prevent from being trans-
ferred to another person; however, requiring a person to
reveal her identity during alibi creation would compromise
the person’s privacy. We propose a privacy-preserving alibi
system, where a user conceals her identity during alibi cre-
ation. The user’s identity is revealed only when she chooses
to present her alibi to a judge. We design two privacy-
preserving alibi schemes. In the ﬁrst scheme, the alibi cor-
roborator is a public entity and therefore needs no privacy
protection. Our second scheme protects the privacy of the
corroborator as well, where the identity of the corrobora-
tor is revealed only when he chooses to help the alibi owner
to present her alibi to the judge. We discuss the proper-
ties of our schemes and demonstrate their advantages over
current alibis. As ubiquitous mobile computing presents an
attractive platform for deploying our schemes, we have im-
plemented our schemes on an Android device and shown its
satisfactory performance.
Categories and Subject Descriptors
K.4.1 [Management of Computing and Information
Systems]: Public Policy Issues—Privacy
General Terms
Security
Keywords
alibi, privacy, mobile, location
1.
INTRODUCTION
Black’s Law Dictionary deﬁnes an alibi as a defense based
on the physical impossibility of a defendant’s guilt by placing
the defendant in a location other than the scene of the crime
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
ASIACCS ’12, May 2–4, 2012, Seoul, Korea.
Copyright 2012 ACM 978-1-4503-1303-2/12/05 ...$10.00.
at the relevant time. [5] The ability to provide evidence of
one’s past locations can be extremely important. For exam-
ple, in 2008 murder charges were dropped against a Bronx
man and his brother after they used their New York City
Transit MetroCard to support their claim that they were
miles from the scene of the crime at the time it occurred. [19]
Some alibis are based on witness testimony. Such an al-
ibi relies on the memory of the corroborator; however, the
corroborator may forget about the encounter or may misre-
member key details, such as the identity of the other party,
or the date and location of the encounter.
Other alibis are based on physical evidence. As mobile
devices become ubiquitous and accompany us on our daily
activities, they have the ability to determine where we are
and what we are doing. Location-based services like Google
Latitude can track our every move, so they could provide
physical evidence as our alibis.
If a physical evidence is not bound to a person, it can be
used by other people to claim their fake alibi. On the other
hand, if a person has to reveal her identity when creating a
physical evidence, then her privacy is at risk. Privacy ad-
vocates are becoming increasingly concerned [1] that third-
party services have so much access to information about
our lives. These services generally require the user to decide
whether they want to be tracked at the time the tracking oc-
curs. Imagine a user who temporarily disables their location-
tracking service to prevent their employer from learning of a
long lunch break. While this may seem a reasonable decision
at the time, the user has no way to “go back” and show their
location later if they need to prove their innocence when
they are incorrectly accused of a crime.
When a person claims an alibi, she must reveal her iden-
tity because the judge must verify that the identity in the
alibi matches the identity of that person. However, our key
insight is that we could design an alibi system where a per-
son does not reveal her identity when creating her alibi. In
this system, a person remains anonymous until she chooses
to use her alibi in front of a judge. This system allows a user
to create alibis whenever she can without compromising her
privacy.
An alibi involves two parties: the owner, who beneﬁts
from the alibi, and the corroborator, who testiﬁes for the
owner. Our goal is to allow an owner to create alibis with
corroborators without revealing her identity to the corrob-
orators. To prevent the transfer of an alibi from one owner
to another, the alibi must be bound to the owner’s iden-
tity, although this binding is hidden at alibi creation time.
To prevent the owner from lying about the context, such as
time and location, the alibi must also include the context
certiﬁed by the corroborator.
The advent of ubiquitous mobile computing provides an
attractive platform for implementing this privacy-preserving
alibi scheme. The user’s mobile device can act as the user’s
delegate in alibi creation. The corroborator can be a public
entity, such as a subway station, or a private entity, such
as another mobile device. When public entities corrobo-
rate alibis they need not protect their privacy, but private
entities may wish to protect their own privacy. Therefore,
we have designed two privacy-preserving alibi schemes, one
with public corroborators (Section 2) and one with private
corroborators (Section 5).
1.1 Contributions
• We propose a privacy-preserving alibi system where
the identity of the alibi owner is concealed at the time
of alibi creation. The owner reveals her identity only
when she chooses to present her alibi to a judge.
• We design two privacy-preserving alibi schemes. The
public corroborator scheme (Section 2) always reveals
the identity of the corroborator. By contrast, the pri-
vate corroborator scheme (Section 5) conceals the iden-
tity of the corroborator, and the corroborator reveals
his identity only when he agrees to help the alibi owner
to present her alibi to the judge.
• We discuss the properties of our schemes and demon-
strate their advantages over current alibis. (Section 7)
• We have implemented the scheme on a mobile device
and evaluated its performance. (Section 8)
2. PUBLIC CORROBORATOR SCHEME
In our “public corroborator” scheme we assume that all
corroborators are publicly known, and the corroborators’
identities and locations are not considered private. These
schemes are appropriate for settings where corroborators are
public entities, such as subway stations or other infrastruc-
ture without privacy concerns. We discuss an alternative
scheme in Section 5 that allows the corroborator to control
the disclosure of his identity, which is more appropriate for
corroborators who also have privacy concerns, such as other
mobile device users.
In contrast to alternative schemes (such as VeriPlace [12]),
we do not require that corroborators have ﬁxed locations,
nor do we require a central database mapping all corrobo-
rators to their locations.
2.1 Overview
Figure 1 illustrates the two phases in our public corrobo-
rator alibi scheme.
2.1.1 Alibi Creation
The owner can opportunistically participate in “alibi cre-
ation” whenever corroborators are available. The owner cre-
ates an OwnerStatement for each alibi she creates. This
OwnerStatement is tied to the Owner who created it, but
by itself can’t reveal the identity of the Owner unless the
Owner reveals that link.
The corroborator sends back CorroboratingEvidence, which
is some way for the corroborator to state “I have received
the OwnerStatement a in the current context c.”
Figure 1: The public corroborator scheme
Participating in the creation phase does not reveal the
identity of the owner, but does give the owner the oppor-
tunity to claim an alibi for their current context at a later
time.
2.1.2 Alibi Veriﬁcation
When the owner wishes to claim an alibi they have cre-
ated, they participate in the “alibi veriﬁcation” stage with
a judge.
In this stage, the owner reveals her identity as-
sociated with only the OwnerStatement used to create the
single alibi she is claiming. This doesn’t reveal her identity
in any other unclaimed alibis, or allow anyone else to create
more alibis on her behalf.
The owner must demonstrate two things to the judge.
First, the owner must show that the corroborator certiﬁes
that they received a speciﬁc OwnerStatement in the con-
text where the owner claims to have an alibi. Second, the
owner must demonstrate the link between the OwnerState-
ment and the Owner. The judge checks to make sure that
the OwnerStatement corresponds to the Owner (that is, her
identity), and that it is the same OwnerStatement that the
corroborator claims to have received at the context in ques-
tion.
We note that just as in the “traditional” alibi setting, the
“strength” of an alibi (e.g. as considered by a jury) depends
heavily on the perceived trustworthiness of the corroborator.
We compare our alibis to traditional alibis in Section 7.
2.2 Design
Initialization
2.2.1
Each alibi owner and alibi corroborator has their own pub-
lic/private key pair (pko, sko) and (pkc, skc), respectively.
Both parties must have the necessary sensors to determine
the current context (location, date, time), and represent this
information in the same way. Also, we assume that the alibi
owner has access to a collision-free hash function M D(·) (for
Message-Digest).
The judge has access to both the alibi owner’s and alibi
corroborators’s public keys (with the ability to verify signa-
!"#$%&’()($*$#(&+,%%,-,%).#/&0123$#4$&+,%%,-,%).#/&0123$#4$&!"#$%&’(")*+%!,#$%-(’./0")*+%!"#"$"$"#"%"#"$"&"’"#"$"#"(")"*"$"+","-"."*"#"(")"*"$"!"#$%&’()($*$#(&5&’$4%$(&tures made by these parties). The judge can also compute
the message digest function M D(·) used by the alibi owner.
2.2.2 Alibi Creation
We assume that the owner has a ﬁxed, unique identity
called OwnerID, and agrees with the corroborator on a value
describing the current context.
The alibi owner creates the tuple i which includes the
owner’s identity and the current context as determined by
the owner.
i = (OwnerID, Contexto)
The alibi owner signs i, and a tuple containing i and the alibi
owner’s signature over i becomes what we call the Owner-
Features.
OwnerFeatures = (i, Signsko (i))
Sending the OwnerFeatures directly to the corroborator
would reveal the owner’s identity. We prevent this by us-
ing highly eﬃcient cryptographic primitives to create a rep-
resentation of the OwnerFeatures that doesn’t reveal the
OwnerFeatures values without extra information from the
Owner.
We use a cryptographic commitment scheme to create the
OwnerStatement from the OwnerFeatures. Speciﬁcally, we
use the scheme presented by Halevi and Micali [8], which
is a non-interactive string commitment scheme based on
collision-free hashing. We note that we are not tied to this
particular scheme. Other string commitment schemes (such
as [3]) could be used in place without changing the security
our of scheme (except of course for diﬀerences in the hard-
ness assumptions underlying the commitment schemes).
To form a commitment to the OwnerFeatures, the alibi
owner uses the message digest function M D(·) to compute
so where
so = M D(OwnerFeatures)
The alibi owner chooses a random value xo which we
call the veriﬁcation secret, which she keeps secret until she
wishes to claim her alibi. Next, the alibi owner randomly
selects1 a universal hash function ho(·) where
Finally, the alibi owner computes
ho(xo) = so
yo = M D(xo)
This gives the owner the OwnerStatement, which is the
commitment to the OwnerFeatures.
OwnerStatement = (ho, yo)
The owner sends the completed OwnerStatement to the
alibi corroborator. The corroborator must certify that the
OwnerStatement was received in the current context. The
alibi corroborator combines the OwnerStatement tuple with
the current context (as determined by the corroborator) to
create the tuple
a = (ho, yo, Contextc)
and creates the CorroboratingEvidence
CorroboratingEvidence = (a, Signskc (a))
1We choose a random xo, and select h() of the form h(r) =
Ar + b by choosing A randomly and computing b = so −
A(xo), where h() is in linear space over GF(2).
The alibi corroborator sends the CorroboratingEvidence
back to the alibi owner. The alibi owner conﬁrms that the
values in ao are correct (including the context provided by
the corroborator), and that the signature from the alibi cor-
roborator is valid. At this point, the alibi owner has the
CorroboratingEvidence it needs to claim their alibi later.
We note that the alibi owner must store the context, ho,
xo, and the corroborator’s signature. This information al-
lows the owner to recompute the rest of the values needed
to claim the alibi. The owner can claim the alibi they just
created without requiring the corroborator to maintain any