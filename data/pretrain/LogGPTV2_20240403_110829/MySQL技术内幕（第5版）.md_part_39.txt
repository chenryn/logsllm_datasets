BLOB和TEXT分别有多种变体，其主要区别在于它们所能容纳的字符串的最大长度不相同。
单位)；L表示某个给定值的字节长度；w表示列字符集里最“宽”字符所占用的字节数。类型
存储空间要求。其中，M表示列值的最大长度（二进制串以字节为单位，非二进制串以字符为
如，
3.2.5
小数点后面的位数。
FLOAT（8，4)列里，其结果将是1.2346。也就是说，必须根据自己对精确度的要求来选定-
况。依
截断为32767。以后的检索结果也会是32767。
到的结果也是
宽度更宽，但仍在该列的取值范围内，所以不需要对它进行截断即可插入它，而且在检索时得
列的显示宽度只有3个字符，但它的取值范围却为-32768~32767。因为数值12345比列的显
的相应端点值，然后将处理后的结果值插入列中，同时生成一条警告消息。
时将导致一个错误。如果未启用，则会进行截断：MySQL会先把这个值替换为该列的取值范目
个列里，那么最终的结果将取决于是否已启用严格的SQL模式。如果已启用，则取值超出范围
浪费掉一半的存储开销。
的精确度或者数据的取值范围非常大的情况下，才需要使用DOUBLE来代替FLOAT；否则，
对于浮点值，DOUBLE 类型所占用的存储空间是FLOAT类型的两倍。因此，只有在需要非常高
大，
每个数字列的取值范围都由其类型决定。如果想要把某个超出了列的取值范围的值插入这
SET('valuel',
ENUM('value1','value2',.)
LONGBLOB,LONGTEXT
MEDIUMBLOB,MEDIUMTEXT
BLOB,TEXT
TINYBLOB,TINYTEXT
VARCHAR(M)
CHAR[(M)]
VARBINARY(M)
BINARY[(M]
有些类型是用于保存二进制串（字节串），而其他类型则用于保存非二进制串。例如，
表3-9列出了MySQL提供的所有用于定义字符串值列的类型，以及这些类型的最大大小和
例如，把1.23456 插到一个FLOAT（8，1)列里，其结果将是1.2。如果把这个值插到一个
值的截断处理依据的是数据类型的取值范围，而不是它的显示宽度。例如，SMALLINT(3)
，但它占用的存储空间是最小整数类型（INT）的两倍，所以应该只在真的需要时才使用它。
可以用二进制串类型来存储二进制数据，如图像、声音、压缩后的 gzip 输出。
不过，字符串可以用于表示任何值；从这个意义上讲，它实际上是一种“范型”类型。
MySQL提供了多种用于存储字符串值的数据类型。字符串通常用于表示下面这样的文本值：
对于定点或浮点列，如果存储值的小数位数多于该列定义所规定的值，那么会出现取舍情
123Elm St.
'N.Bertram,
Monograph Series IX'
Pencils
字符串数据类型
12345。对于数值99999，由于它超出了该列的取值范围，所以它在插入时会补
类型名称
'value2',
etal.'
2
，如果需要精确到千分之一，则不能只把小数点后面的位数声明为2位。
lead)
表3-9字符串类型
64个成员
65535个成员
22-1个字节
24-1个字节
2-1个字节
2-1个字节
M个字符
M个字符
M个字节
个字节
最大长度
3.2MySQL数据类型
1或2个字节
L+4个字节
L+3个字节
L+2个字节
L+1个字节
L+1或L+2个字节
MXwW个字节
L+1或L+2个字节
M个字节
1、2、3、4或8个字节
存储空间要习
求
一个
145
被
会
---
## Page 166
部空格。
3.2.5.1
在严格模式下，这会导致出现错误。
个未出现在列表里的值存储到ENUM或SET类型列里，则会导致该值被转换为一个空串（"）。
内部都被存储为数字，更多相关细节请参考3.2.5.4节。在未启用严格模式的情况下，如果把某
型能够容纳将近4GB的数据)，所以在理论上完全可以找到一种很长的字符串类型，用于存储
占用1个字节；否则，将占用2个字节。
配60个字节的空间，以应对20个字符全部占用3个字节的情况。
分配同样数量的存储空间，并且会对那些比列的长度更短的值进行补齐。对于 BINARY 类型，
对不同的列，可以指定不同的字符集。关于如何指定字符集的更多信息请参考3.2.5.5节。
请参考3.1.2节。每种二进制串类型都有一种与之对应的非二进制串类型，如表3-10所示。
的
各
的
“长度字节”前缀，会被当作无符号整数来对待。在可变类型的最大长度（即该类型所要求的长
数
长
储空间要求肯定会超过 20个字节)。关于二进制串和非二进制串在字节和字符语义方面的区别
符
并
度
字
146
为“客户端/服务器”通信协议所支持的最大数据包长度，其默认值为1MB。）
各种长数据，从而避免信息被截断。（实际上，字符串类型列的最大有效长度，取决于MySQL
勺字符为空格的情况下，才会有错误提示。）不过，因为各种字符串类型的大小各异（最大的类
串。如果这些值的长度太长，导致无法存储，那么会截断它们。（在严格模式下，只有截断斤
且它还会根据所存储字符串的具体类型（二进制或非二进制），把这些字节解释为字节串或字
占用3个字节的整数类型MEDIUMINT，其最大无符号值也为2-1。这可不是什么巧合！
口，MEDIUMBLOB类型值的最大长度是24-1个字节，并且需要3个字节来记录这个长度。而对
字节数）与
女相等。在处理长度可变的数据时，MySQL会把数据内容和数据长度都存储起来。这些额外的
度右
最宽字符所占用的字节数。例如，1个ujis 字符会占用1~3个字节，因此CHAR（20）必须分
符集所确定的最大可能字符串，所以这种类型列需要占用M×w个字节，其中，w是字符集
使用OxOO进行补齐；对于CHAR类型，则是使用空格。因为CHAR（M)列必须能够表示由列的
对于ENUM和 SET 类型，其列定义里都有一个合法字符串值的列表，但ENUM和 SET 的值在
对于VARBINARY和VARCHAR类型，如果列值的最大字节长度小于256，那么其长度前缀将
BINARY 和 CHAR都是固定长度的字符串类型。对于这两种类型的列，MySQL 将为每个值
CHAR是一种长度固定的类型，而VARCHAR是一种长度可变的类型。
CHAR 和VARCHAR 之间的主要区别在于：它们的长度是固定的，还是不变的；如何对待尾
字符串类型CHAR 和VARCHAR 主要用于保存非二进制串，因此它们有字符集和排序规则。
除了ENUM和SET这两种类型以外，MySQL会将其他所有字符串类型的值存储为一串字节；
具体是多少，则取决于存储在列里的那些值的最大允许长度。对于可变长度的类型，这
在表3-9里被表示为L。除去L以外的额外要求字节空间，与用来存储值的长度所需的字
其他字符串类型的长度都是可变的。对于每个值所占用的存储空间大小，各个行也各不相
每一种非二进制串类型，以及 ENUM 和 SET 类型，都可以指定具体的字符集和排序规则。
第3章数据类型
CHAR和VARCHAR数据类型
与占用相同字节数的无符号整数类型的取值范围之间，存在着一定的对应关系。例
二进制串类型
BLOB
VARBINARY
BINARY
表3-10
二进制串类型和非二进制串类型之间的对应关系
非二进制串类型
TEXT
VARCHAR
CHAR
后
护
个
---
## Page 167
也就是说，它们存储的是字符，而不是字节，
这些类型在其他方面完全一致（见表3-9)。BLOB列存储的是二进制串。如果要保存的信息有可
器，并且可以大到超出你的想象，多达4GB。在MySQL里，BLOB类型实际上是一个类型家族，
3.2.5.3BLOB和TEXT数据类型
齐；在检索时，也不会去除任何内容。
以保证长度为M。在检索时，不会去除任何内容。对于VARBINARY，在存储值时，不会进行补
3.2.5.2BINARY 和VARBINARY 数据类型
它们与相应的BLOB类型有很多相似之处，但TEXT类型存储的是非二进制串，而非二进制串。
据、
它包括TINYBLOB、BLOB、MEDIUMBLOB 和LONGBLOB。除各自所能存放的最大信息量不同以外，
些潜在的影响点。
字符个数肯定小于65535。这是因为在MySQL里，行的最大长度为65535个字节。下面是
用非常少的存储空间一
它可以用它来表示“开/关”值。这种列只有两种取值：NULL或空串。在表里，CHAR（O)列只占
省略，则其默认值为1。请注意，CHAR（O）也是合法的。如果你允许CHAR（O)列为NULL，那么
MySQL还有一个TEXT 类型家族，它包括TINYTEXT、TEXT、MEDIUMTEXT 和LONGTEXT。
图像和声音，都适合使用 BLOB。
“blob”指的是二进制大对象（binary large object），它实际上是一个能够存放任何内容的容
对于VARCHAR(M)，其中的M在语法上的取值范围是1~65535，但它实际能够容纳的最大
对于BINARY（M)列，当存储那些长度短于M个字节的值时，它们会用OxO0字节进行补齐，
口BINARY和VARBINARY 都是用于存储字节的二进制类型，它们没有字符集和排序规则。
口CHAR 和VARCHAR都是用于存储字符的非二进制类型，并且都有字符集和排序规则。
BINARY 和VARBINARY类型与CHAR和VARCHAR相似，不同之处在于以下儿点。
口表里的其他列也会减少行里VARCHAR列的可用空间量。
口使用多字节字符可以减少字符个数，从而使字符总长度不会超过最大行长度。
口一个长VARCHAR列需要2个字节来存放字符串的长度，最终长度不能超过行的总长。
口
口
在定义CHAR列时，其最大长度M的取值范围是0~255。对于CHAR类型，M是可选的；如果
口对于VARCHAR 列，其尾部空格在存储和检索时都会被保留。
口
比较操作依据的是字节值的大小。
较操作依据的是排序序列。
行的高。更多相关信息请参考5.4节。
VARCHAR更好些，因为MyISAM存储引擎对固定长度行的处理效率，要比对长度可变
如果使用的是MyISAM表，并且各个值的长度差别不大，那么选用CHAR往往会比选用
如果所有值的长度都是M个字符，那么VARCHAR（M)列会比CHAR(MM)列多占用存储空
在CHAR和VARCHAR 这两种数据类型之间犹豫不决时，请记住下面两条通用原则。
字符的空间，即使其值为空或NULL也一样。
一，那么选用VARCHAR类型可以节省空格占用的存储空间。CHAR（M)列始终会占用M个
CHAR 列值时就可以保留尾部空格。
部的空格会被移除。如果启用 SQL的 PAD_CHAR_TO_FULL_LENGTH模式，那么在检索
于M个字符，那么在存入时会用空格将长度补齐到M。但是，当在检索这些值时，其尾
从 CHAR 列检索出来的值，其尾部空格会被移除。对于 CHAR(M)列，如果其值的长度小
一仅一个二进制位。
，它们与字符集和排序规则相关联。这也是二进制
3.2MySQL数据类型
比
147
---
## Page 168
线比萨饼订购服务，这时就可以用一个ENUM列来表示顾客所订比萨饼的口味和大小：
以使用 ENUM来表示这些让网站的访问者可以从中进行选择的选项。例如，你正在运营一个在
种产品的尺寸或颜色，或者用于表示某次调查问卷中的多重选择题的答案（仅限单选）：
在创建表时指定的值列表中的一个成员。枚举类型通常用于表示类别值。例如，对于某个定义
类型的值不允许同时出现，而 SET类型的值允许同时出现。
SET列值则允许包含任意多个值列表成员（可以为空，也可以是全体成员）。换句话说，ENUM
串列表里取值。这两种类型的主要区别是：ENUM列值必须包含且只能包含一个值列表成员，而
3.2.5.4ENUM和 SET 数据类型
类型）进行衡量（见表3-9）。
位来衡量最大长度的，而不是以字节为单位（对于BLOB 类型）和以字符为单位（对于TEXT
值的比较则是以字符为单位，并且依据的是列的排序规则。
串和非二进制串的不同之处（参考3.1.2节）。例如，BLOB值的比较是以字节为单位的；而TEXT
148
ENUM类型定义的是枚举集合，它最多允许有65535个成员。赋给ENUM列的值只能是你
ENUM和SET是比较特殊的字符串数据类型，它们只能从一个固定的（预先定义好的）字符
不过，TEXT 类型的最大长度与 BLOB 类型的是一样的。也就是说，它们都是以字节为单
crust ENUM('thin','regular','pan style','deep dish')
如果你正在处理来自Web 页面的选择项，而该页面包含了很多互斥的单选按钮，那么你可
vote ENUM('Yes','No','Undecided')
employees ENUM(*less than 100',100-500','501-1500','more than 1500)
口对于数据量非常大的值，可能需要配置MySQL服务器，增大max_allowed_packet参
BLOB和TEXT列能否被索引，具体取决于所使用的存储引擎。
color
口
对于BLOB或TEXT列，需要特别注意以下几点。
TEXT 列。
口
（TXXTXTNS）NONZ
启动选项来设置这个值。
则需要在客户端增大数据包的大小。客户端程序 mysql 和 mysqldump 都支持直接使用
数的值。更多相关信息请参考12.7.1节。对于所有想要使用大数据量值的客户端程序，
max_sort_length 的默认值（为1024）会造成问题，则可以在执行比较之前把它调大。
使用了多字节字符集的 TExT 列，参与比较的字符数会少于max_sort_length。）如果
于每个值，只有其前面的 max_sort_length 个字节才会被使用到。（这意味着，对于
max_sort_length系统变量会对 BLOB和TEXT类型值的比较和排序操作产生影响。对
参考第5章。
那么定
操作之后，表里容易产生大量碎片。如果是使用MyISAM表来存储BLOB或TEXT值，
由于BLOB 和TEXT列里的值在长度方面的差异通常很大，因此在多次执行删除和修改
MEMORY 表不支持 BLOB 和 TEXT 索引I，因为 MEMORY引擎根本不支持 BLOB 和
指定的前缀长度会被忽略。
的情况，则会完全抵消掉索引所带来的好处。不过凡事有例外，TEXT列的FULLTEXT
缀长度，以方便索引使用。这样可以避免创建出可能会过于庞大的索引，如果出现这样
存储引擎InnoDB和 MyISAM 都支持对 BLOB 和 TEXT 列进行索引。但必须指定一个前
第3章数据类型
ENUM（
定期运行OPTIMIZETABLE命令可以减少碎片和改善系统性能。更多相关信息请
'red'
'blue
black')
---