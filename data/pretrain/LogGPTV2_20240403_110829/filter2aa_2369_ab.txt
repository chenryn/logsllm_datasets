# Aggressor脚本中常用的内置事件和函数

## 3.3 常用的内置事件和函数

### 2.3 指定颜色
在Cobalt Strike控制台中添加颜色可以通过使用转义字符来实现。这些转义字符仅在双引号字符串内有效。
- `\cX`：设置文本颜色，其中 `X` 是颜色代码。
- `\U`：为文本添加下划线。
- `\o`：重置所有格式化。

**示例代码:**
```plaintext
println("\\c1This is red text\\o");
```

### 2.4 `bind` 关键字
`bind` 关键字用于绑定快捷键，可以是任何ASCII字符或特殊键，并且可以应用一个或多个修饰符。支持的修饰符包括：Ctrl、Shift、Alt 和 Meta。脚本中指定修饰符与键时不应有空格。

**示例代码:**
```plaintext
bind "Ctrl+T" { println("Hello, World!"); };
```

### 2.5 Popup Hooks
Cobalt Strike 提供了多种 hook 来自定义或重新定义功能。

#### 顶部菜单栏布局
- **增加新的菜单项**：使用 `menubar` 和 `menu` 函数。
- **分割线**：使用 `separator()` 函数。

**示例代码:**
```plaintext
menubar {
    menu "&Help" {
        separator();
        item("About", { println("About Asukakit"); });
    };
};
```

#### 右键菜单栏布局
- **beacon_bottom hook**：在对应 session 的右键菜单上添加功能。
- **include 函数**：包含脚本文件。
- **script_resource 函数**：读取脚本文件内容。

**示例代码:**
```plaintext
beacon_bottom {
    include(script_resource("AuskaKit.cna"));
};
```

#### filebrowser hook
- **filebrowser hook**：将常见的隐藏文件和显示文件功能加入到文件浏览器中。

**示例代码:**
```plaintext
filebrowser {
    // 添加功能
};
```

#### beacon_output hook
- **beacon_output hook**：对输出的内容进行格式化或控制。

**示例代码:**
```plaintext
beacon_output {
    // 格式化输出
};
```

### 2.6 常用函数
#### bshell && brun 执行 Windows 系统命令
- **bshell**：执行系统命令。
- **brun**：基于 bpowershell 和 bshell 构建，更安全的 opsec 方式。

**示例代码:**
```plaintext
bshell("ipconfig /all");
brun("whoami");
```

#### bpowershell 与 bpowershell_import 执行 PowerShell 相关操作
- **bpowershell**：执行 PowerShell 命令。
- **bpowershell_import**：远程加载 PowerShell 脚本。

**示例代码:**
```plaintext
bpowershell("Write-Host 'Hello, World!'");
bpowershell_import("PowerView.ps1");
```

#### beacon_host_script 在 Beacon 中本地托管 PowerShell 脚本
- **beacon_host_script**：本地托管并调用 PowerShell 脚本。

**示例代码:**
```plaintext
beacon_host_script("PowerShellScript.ps1");
```

#### bexecute_assembly 内存加载执行 .NET 程序
- **bexecute_assembly**：内存加载并执行 .NET 程序。

**示例代码:**
```plaintext
bexecute_assembly("SharpOXID-Find");
```

#### BOF 程序的加载
- **beacon_command_register**：注册命令。
- **alias**：声明命令。
- **bof_pack**：打包参数。
- **openf** 和 **readb**：导入和读取 BOF 脚本。
- **beacon_inline_execute**：执行 BOF 文件。

**示例代码:**
```plaintext
beacon_command_register("rdphijack", "RDP Hijack");
alias("rdphijack", "bof-rdphijack");
$handle = openf(script_resource("test.o"));
$content = readb($handle, -1);
beacon_inline_execute($content);
```

#### 其他类型语言的加载方式
- **bupload**：上传程序到目标系统。
- **bshell 或 brun**：执行上传的程序。

**示例代码:**
```plaintext
bupload("fscan.exe");
bshell("fscan.exe -h");
```

## 总结
Aggressor 脚本基于 Sleep 语言编写，主要用于粘合各种工具和技术思路，简化后渗透过程。Asukakit 在多次 RedTeam 仿真中表现良好，经过多次迭代功能更加完善。欢迎大家贡献思路和代码，共同完善这个后渗透测试工具套件。

**最新版本更新:**
- OverSpace 团队内部
- 【安全技能补完计划】知识星球
- Github 上的 Awesome-CobaltStrike 项目

THANK YOU！