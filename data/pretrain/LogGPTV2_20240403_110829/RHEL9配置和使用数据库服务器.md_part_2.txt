:::
:::
::: section
::: titlepage
## []{#using-mariadb_configuring-and-using-database-servers.html#proc_configuring-tls-on-a-mariadb-server_assembly_setting-up-tls-encryption-on-a-mariadb-server}在 MariaDB 服务器上配置 TLS {.title}
:::
要提高安全性，请在 [**MariaDB**]{.strong} 服务器上启用 TLS
支持。因此，客户端可以使用 TLS 加密与服务器传输数据。
::: itemizedlist
**先决条件**
-   [**MariaDB**]{.strong} 服务器已安装。
-   `mariadb`{.literal} 服务正在运行。
-   服务器上存在 Privacy Enhanced Mail(PEM)格式的以下文件，并可由
    `mysql`{.literal} 用户读取：
    ::: itemizedlist
    -   服务器的私钥：`/etc/pki/tls/private/server.example.com.key.pem`{.literal}
    -   服务器证书：`/etc/pki/tls/certs/server.example.com.crt.pem`{.literal}
    -   证书颁发机构(CA)证书 `/etc/pki/tls/certs/ca.crt.pem`{.literal}
    :::
-   主题可识别名称(DN)或服务器证书中的主题备用名称(SAN)字段与服务器的主机名相匹配。
:::
::: orderedlist
**流程**
1.  创建 `/etc/my.cnf.d/mariadb-server-tls.cnf`{.literal} 文件：
    ::: orderedlist
    1.  添加以下内容来配置到私钥、服务器和 CA 证书的路径：
        ``` literallayout
        [mariadb]
        ssl_key = /etc/pki/tls/private/server.example.com.key.pem
        ssl_cert = /etc/pki/tls/certs/server.example.com.crt.pem
        ssl_ca = /etc/pki/tls/certs/ca.crt.pem
        ```
    2.  如果您有一个证书撤销列表(CRL)，则将 [**MariaDB**]{.strong}
        服务器配置为使用它：
        ``` literallayout
        ssl_crl = /etc/pki/tls/certs/example.crl.pem
        ```
    3.  可选：拒绝未加密的连接尝试。要启用此功能，请附加：
        ``` literallayout
        require_secure_transport = on
        ```
    4.  可选：设置服务器应支持的 TLS 版本。例如，要支持 TLS 1.2 和 TLS
        1.3，请附加：
        ``` literallayout
        tls_version = TLSv1.2,TLSv1.3
        ```
        默认情况下，服务器支持 TLS 1.1、TLS 1.2 和 TLS 1.3。
    :::
2.  重启 `mariadb`{.literal} 服务：
    ``` literallayout
    # systemctl restart mariadb
    ```
:::
::: title
**验证**
:::
要简化故障排除，请在将本地客户端配置为使用 TLS 加密之前在
[**MariaDB**]{.strong} 服务器上执行以下步骤：
::: orderedlist
1.  验证 [**MariaDB**]{.strong} 现在是否启用了 TLS 加密：
    ``` literallayout
    # mysql -u root -p -e "SHOW GLOBAL VARIABLES LIKE 'have_ssl';"
    +---------------+-----------------+
    | Variable_name | Value           |
    +---------------+-----------------+
    | have_ssl      | YES             |
    +---------------+-----------------+
    ```
    如果 `have_ssl`{.literal} 变量设置为 `yes`{.literal}，则启用 TLS
    加密。
2.  如果您将 [**MariaDB**]{.strong} 服务配置为只支持特定的 TLS
    版本，则显示 `tls_version`{.literal} 变量：
    ``` literallayout
    # mysql -u root -p -e "SHOW GLOBAL VARIABLES LIKE 'tls_version';"
    +---------------+-----------------+
    | Variable_name | Value           |
    +---------------+-----------------+
    | tls_version   | TLSv1.2,TLSv1.3 |
    +---------------+-----------------+
    ```
:::
::: itemizedlist
**其他资源**
-   [将 CA 证书、服务器证书和私钥放在 MariaDB
    服务器上](#using-mariadb_configuring-and-using-database-servers.html#proc_placing-the-ca-certificate-server-certificate-and-private-key-on-the-mariadb-server_assembly_setting-up-tls-encryption-on-a-mariadb-server "将 CA 证书、服务器证书和私钥放在 MariaDB 服务器上"){.link}
:::
:::
::: section
::: titlepage
## []{#using-mariadb_configuring-and-using-database-servers.html#proc_requiring-tls-encrypted-connections-for-specific-user-accounts_assembly_setting-up-tls-encryption-on-a-mariadb-server}对特定的用户帐户需要 TLS 加密连接 {.title}
:::
可以访问敏感数据的用户应始终使用 TLS
加密连接，以避免通过网络发送未加密的数据。
如果您无法在服务器上配置所有连接都需要安全传输(`require_secure_transport = on`{.literal})，请将单个用户帐户配置为需要
TLS 加密。
::: itemizedlist
**先决条件**
-   [**MariaDB**]{.strong} 服务器启用了 TLS 支持。
-   您配置为需要安全传输的用户已存在。
:::
::: orderedlist
**流程**
1.  以管理员用户身份连接到 [**MariaDB**]{.strong} 服务器：
    ``` literallayout
    # mysql -u root -p -h server.example.com
    ```
    如果您的管理用户没有远程访问服务器的权限，请在
    [**MariaDB**]{.strong} 服务器上执行命令，并连接到
    `localhost`{.literal}。
2.  使用 `REQUIRE SSL`{.literal} 子句强制用户必须使用 TLS
    加密连接进行连接：
    ``` literallayout
    MariaDB [(none)]> ALTER USER 'example'@'%' REQUIRE SSL;
    ```
:::
::: orderedlist
**验证**
1.  使用 TLS 加密，以 `example`{.literal} 用户身份连接到服务器：
    ``` literallayout
    # mysql -u example -p -h server.example.com --ssl
    ...
    MariaDB [(none)]>
    ```
    如果没有显示错误，且您可以访问交互式 [**MariaDB**]{.strong}
    控制台，则与 TLS 的连接成功。
2.  尝试以禁用 TLS 的 `example`{.literal} 用户身份进行连接：
    ``` literallayout
    # mysql -u example -p -h server.example.com --skip-ssl
    ERROR 1045 (28000): Access denied for user 'example'@'server.example.com' (using password: YES)
    ```
    服务器拒绝登录尝试，因为此用户需要
    TLS，但已禁用(`--skip-ssl`{.literal})。
:::
::: itemizedlist
**其他资源**
-   [在 MariaDB 服务器上配置
    TLS](#using-mariadb_configuring-and-using-database-servers.html#assembly_setting-up-tls-encryption-on-a-mariadb-server_using-mariadb "在 MariaDB 服务器上设置 TLS 加密"){.link}
:::
:::
:::
::: section
::: titlepage
# []{#using-mariadb_configuring-and-using-database-servers.html#assembly_globally-enabling-tls-encryption-in-mariadb-clients_using-mariadb}在 MariaDB 客户端中全局启用 TLS 加密 {.title}
:::
如果您的 [**MariaDB**]{.strong} 服务器支持 TLS
加密，请将客户端配置为仅建立安全连接，并验证服务器证书。这个流程描述了如何为服务器上的所有用户启用
TLS 支持。
::: section
::: titlepage
## []{#using-mariadb_configuring-and-using-database-servers.html#proc_configuring-the-mariadb-client-to-use-tls-encryption-by-default_assembly_globally-enabling-tls-encryption-in-mariadb-clients}将 MariaDB 客户端配置为默认使用 TLS 加密 {.title}
:::
在 RHEL 上，您可以全局配置 [**MariaDB**]{.strong} 客户端使用 TLS
加密，并验证服务器证书中的通用名称(CN)与用户连接的主机名匹配。这可防止中间人攻击。
::: itemizedlist
**先决条件**
-   [**MariaDB**]{.strong} 服务器启用了 TLS 支持。
-   如果 RHEL 不信任发布服务器证书的证书颁发机构(CA)，则 CA
    证书已被复制到客户端。
:::
::: orderedlist
**流程**
1.  如果 RHEL 不信任发布服务器证书的 CA：
    ::: orderedlist
    1.  将 CA 证书复制到 `/etc/pki/ca-trust/source/anchors/`{.literal}
        目录中：
        ``` literallayout
        # cp /ca.crt.pem /etc/pki/ca-trust/source/anchors/
        ```
    2.  设置允许所有用户读取 CA 证书文件的权限：
        ``` literallayout
        # chmod 644 /etc/pki/ca-trust/source/anchors/ca.crt.pem
        ```
    3.  重建 CA 信任数据库：
        ``` literallayout
        # update-ca-trust
        ```
    :::
2.  使用以下内容创建 `/etc/my.cnf.d/mariadb-client-tls.cnf`{.literal}
    文件：
    ``` literallayout
    [client-mariadb]
    ssl
    ssl-verify-server-cert
    ```
    这些设置定义 [**MariaDB**]{.strong} 客户端使用 TLS
    加密(`ssl`{.literal})，并且客户端将主机名与服务器证书中的
    CN(`ssl-verify-server-cert`{.literal})进行比较。
:::
::: itemizedlist
**验证**
-   使用主机名连接到服务器，并显示服务器的状态：
    ``` literallayout
    # mysql -u root -p -h server.example.com -e status
    ...
    SSL:        Cipher in use is TLS_AES_256_GCM_SHA384
    ```
    如果 `SSL`{.literal} 条目包含
    `Cipher in use is…​`{.literal}，代表连接已加密。
    请注意，您在这个命令中使用的用户具有远程身份验证的权限。
    如果您连接的主机名与服务器的 TLS 证书中的主机名不匹配，则
    `ssl-verify-server-cert`{.literal}
    参数会导致连接失败。例如，如果您连接到 `localhost`{.literal} ：
    ``` literallayout
    # mysql -u root -p -h localhost -e status
    ERROR 2026 (HY000): SSL connection error: Validation of SSL server certificate failed
    ```
:::
::: itemizedlist
**其他资源**
-   `mysql(1)`{.literal} 手册页中的 `--ssl*`{.literal} 参数描述。
:::
:::
:::
::: section
::: titlepage
# []{#using-mariadb_configuring-and-using-database-servers.html#backing-up-mariadb-data_using-mariadb}备份 MariaDB 数据 {.title}
:::
在 Red Hat Enterprise Linux 9 中从 [**MariaDB**]{.strong}
数据库备份数据主要有两种方法：
::: itemizedlist
-   逻辑备份
-   物理备份
:::
[**逻辑备份**]{.strong} 由恢复数据所需的 SQL
语句组成。这种类型的备份以纯文本文件的形式导出信息和记录。
与物理备份相比，逻辑备份的主要优势在于可移植性和灵活性。数据可以在其他硬件配置上恢复，[**MariaDB**]{.strong}
版本或数据库管理系统(DBMS)上恢复，这些系统无法进行物理备份。
请注意，如果 `mariadb.service`{.literal}
正在运行，则可以执行逻辑备份。逻辑备份不包括日志和配置文件。
[**物理备份**]{.strong}由保存内容的文件和目录副本组成。
与逻辑备份相比，物理备份具有以下优点：
::: itemizedlist
-   输出更为紧凑。
-   备份的大小会较小。
-   备份和恢复速度更快。
-   备份包括日志和配置文件。
:::
请注意，当 `mariadb.service`{.literal}
没有运行或者数据库中的所有表都被锁定以防止备份期间更改时，必须执行物理备份。
您可以使用以下一种 [**MariaDB**]{.strong} 备份方法，来从
[**MariaDB**]{.strong} 数据库备份数据：
::: itemizedlist
-   使用 `mariadb-dump`{.literal} 的逻辑备份
-   使用 `Mariabackup`{.literal} 工具的物理在线备份
-   文件系统备份
-   作为备份解决方案复制
:::
::: section
::: titlepage
## []{#using-mariadb_configuring-and-using-database-servers.html#performing-logical-backup-with-mariadb-dump_backing-up-mariadb-data}使用 mariadb-dump 执行逻辑备份 {.title}
:::
[**[mariadb-dump]{.application}**]{.strong}
客户端是一种备份实用程序，可用于转储数据库或数据库集合，用于备份或传输到其他数据库服务器。[**[mariadb-dump]{.application}**]{.strong}
的输出通常由 SQL
语句组成，用于重新创建服务器表结构、生成表的数据。[**[mariadb-dump]{.application}**]{.strong}
也可以以其他格式生成文件，包括 XML 和分隔的文本格式，如 CSV。
要执行 [**[mariadb-dump]{.application}**]{.strong}
备份，您可以使用以下选项之一：
::: itemizedlist
-   备份一个或多个所选的数据库
-   备份所有数据库
-   从一个数据库备份表子集
:::