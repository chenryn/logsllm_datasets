### 5. Additional Considerations on AKE-Security
Recent work on AKE-security has introduced stronger security models by allowing the adversary (A) to corrupt participants or reveal ephemeral secrets used by uncorrupted participants during the test session. Techniques from [39] may be applicable to achieve such strong AKE-security for the session keys computed in AWRT, particularly for the end-to-end key \( K_{M,H} \). However, this discussion is beyond the scope of the current work.

### 6.2 Denial-of-Service and Hijacking
In this section, we present strategies to enhance AWRT's resistance against Denial-of-Service (DoS) attacks. Due to the higher communication delays between F and H, it is desirable to reduce the risk that F opens a connection to H for the third protocol message without gaining stronger confidence that the party requesting the tunnel is a valid mobile device hosted by H. Otherwise, a DoS attacker can compose the second protocol message \( B|H \) and then simply close their connection. One possible solution is to equip M with a public key certificate issued by H and require a signature on the second message, which includes a fresh nonce from F. Although computationally expensive, this minimizes the risk since the attacker must either forge the signature or possess a valid certificate. However, F cannot independently verify the certificate's revocation status without further interaction. To mitigate this, device certificates could be issued with a short validity period.

A similar threat exists for H, which could be forced to keep the connection to F after the fourth protocol message without confirming the legitimacy of both M and F. A DoS attacker might flood H with messages of the form \( C|T \) and then close the connection. This risk can be minimized by requiring that \( C|T \) is signed by F, with the timestamp T also serving as protection against replay attacks. Note that this signature does not replace \( \sigma_F \) from the last message, which is necessary for mutual authentication between F and H. Additional confidence for H that \( C|T \) was sent by F after communicating with a valid M can be achieved by having M compute a MAC value \( \mu_H' \) and forward it to H. This MAC value cannot replace \( \mu_H \), which is needed for mutual authentication between M and H.

Finally, we consider protection against hijacking of a roaming session, as mentioned in [53] for non-tunnel-based cases. In WRT, an attacker can wait until the protocol completes and the tunnel is established, then attempt to hijack the session from M or H. On the wireless link between M and F, the session can be hijacked using a more powerful transmitting device than M. On the path between F and H, a hijacker can be any intermediate communication node. In WRT, this attack can waste the bandwidth resources assigned to the tunnel by F. Our basic protocol allows for an elegant solution through the use of the tunnel key \( K_t \), requiring each message sent through the tunnel to be authenticated, allowing F to verify its validity before delivery. Note that a hijacker cannot compromise the end-to-end communication between M and H, which is protected by \( K_{M,H} \).

### 6.3 Confidentiality of M’s Identity
When a mobile device roams across several foreign networks (contract partners of H), it may be desirable to keep its identity M undisclosed and prevent (possibly colluding) foreign networks from linking its roaming activities, thus eliminating the risk of profiling. A straightforward solution is to let M choose a set of "one-time" roaming aliases and reveal them to its home network H before roaming. This solution requires additional storage resources and necessitates that M chooses and updates its aliases while within the coverage area of H (see also the discussion in [45]).

Our AWRT protocol offers a more elegant approach if we rely on the fact that each home network usually serves as a foreign network from the perspective of its contract partners. This implies that the long-lived key pair (dkH, ekH) used in AWRT also includes a key pair. Assuming M knows ekH, we can modify AWRT by replacing the identity M in the second protocol message with its encrypted equivalent \( E_{ekH}(M) \), which will also be used in the construction of session IDs. Upon receiving \( C|T \), the home network would be able to recover M through the corresponding decryption. Due to the IND-CCA2 property of (E, D), this solution ensures not only the anonymity of M towards F but also the unlinkability among different AWRT executions with M, at the cost of one additional public key operation by M and H.

### 6.4 Reimbursement of F’s Roaming Costs
In commercial scenarios, the foreign network F must be reimbursed for the provided roaming service. Since F is unaware of M, it usually presents its claims to H. Note that the reimbursement process (like any payment process) cannot be realized solely using cryptographic techniques. However, it may be desirable to allow F to support its claims with some cryptographic proof, which can also be shown to a judge. In AWRT, the foreign network obtains \( \sigma_H \) computed on the identity F and the timestamp T chosen by F. However, the existence of \( \sigma_H \) alone does not guarantee that F created a tunnel to H and provided the roaming service. Therefore, upon maintaining the tunnel, F may request further signatures \( \sigma_H' \) from H, computed on a fresh timestamp \( T' > T \) and the session ID. If the expected signature is not delivered, F can close the tunnel connection. Special control messages exchanged between M and H and protected using keys derived from \( K_{M,H} \) can ensure that H (and M) know the tunnel was created and kept open during the interval [T, T']. A valid pair \( (\sigma_H, \sigma_H') \) would then serve as a cryptographically protected acknowledgment that the tunnel connection was maintained by F within the time interval [T, T'].

### 7. Conclusion
The wireless roaming approach via tunnels preserves the home network's role as the actual service provider and offers several additional security benefits. However, it introduces new challenges for the authentication and key establishment protocol preceding the tunnel connection. We have formally specified the necessary requirements and designed a provably secure protocol, AWRT, which requires one communication round between the foreign and home networks before creating the tunnel. Additionally, we have provided ideas for extending the basic version of AWRT towards forward secrecy, DoS resistance, anonymity of roaming mobile devices, and unlinkability of roaming sessions. We have also discussed the potential use of AWRT in commercial scenarios. Future work should include detailed specification of the protocol within the EAP framework and its implementation based on current standards within a suitable WRT architecture, paying special attention to the realization of the tunnel connection, including the necessary control messages and their protection.