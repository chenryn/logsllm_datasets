Alltheabovethreemethodsareofflineandneedtotraversealllogdatatocountthe
tokenfrequency. Incontrast,LogPunkisanonlinelogparser.
(2) Clustering: Manypreviousstudiesregardlogparsingasaclusteringproblemand
propose many clustering approaches to solve this problem. From this perspective,
logmessagessharingthesametemplatesaregroupedintooneclusterandvarious
approachestomeasurethesimilarity(ordistance)betweentwologmessageshavebeen
proposed. LKE[32],LogSig[21],andLogMine[22]proposeofflineclusteringmethods.
LKE employs a k-means clustering algorithm based on weighted edit distance to
extractlogeventsfromfreetextmessages. LogSiggroupslogmessageswiththesame
frequent subsequence into a predefined number of clusters. LogMine clusters log
messagesfrombottomtotopandidentifiesthemostsuitablelogtemplatetorepresent
eachcluster.
SHISO [24] and LenMa [25] are both online methods. SHISO employs Euclidean
distance to measure the similarity between logs and generate a score. If the score
issmallerthanthepre-definedthreshold,SHISOmakesaclusterofthesimilartwo.
LenMaproposesanonlineclusteringmethodusingthelengthinformationofeach
word in log messages. Additionally, it measured the similarity between two log
messagesbasedoncosinesimilarity,todeterminewhichclusterthenewcominglog
message should be added to. Despite performing well on test datasets, these two
methodsperformpoorlyonpublicdatasets. Toensurerobustness,LogPunkhasbeen
testedon16datasetsfromdifferentsystems.
(3) Heuristics: Differentfromgeneraltextdata,logmessageshavesomeuniquecharacter-
istics,whichcanbeusedforlogparsing. AEL[29]usesheuristicsbasedondomain
knowledgetoidentifydynamicparts(e.g.,tokensfollowing“is”or“are”)inlogmes-
sages, then clusters log messages into the same template set if they have the same
structureofdynamicparts. IPLoM[23]iterativelypartitionslogmessagesintofiner
clusters,firstlybythenumberoftokens,thenbythepositionoftokens,andlastlyby
theassociationbetweentokenpairs.Spell[26]supposesthattemplatetokensoftentake
mostofthelogmessage,andvariabletokenstakeonlyasmallportion. So,itutilizes
anLCS-basedapproachtomeasurelogsimilarityandtofindthemostsimilartemplate.
Drain[17]usesafixed-depthtreetoparselogs. Eachlayerencodesspeciallydesigned
rulesforlogparsing. Inthefirstlayer,Drainsearchesbylogmessagelength,andin
thefollowinglayers,searchesbyprecedingtokens. Bydoingso,logmessageswiththe
samelengthandprecedingtokensareclusteredintothesamegroupsplacedonthe
leafnodes. Thetree-basedSpellandDrainoutperformothermethodsintheprevious
benchmark[15]andarestate-of-the-artlogparsersatpresent. LogPunkovercomesthe
defectoftreestructures(cf. Section2)andparseslogsinahash-likemanner.
7. Conclusions
Aqualifiedgeneral-purposeonlinelogparsershouldberobustandefficient,which
meetsthereliabilityrequirementsofmodernsoftwaresystems. Atpresent,thestateofthe
artonlinelogparsersaretree-based.Suchastructurebringslowrobustnessandinefficiency.
Toovercometheselimitations,wegetinspirationfromlogpunctuationsandproposea
hash-likemethod.
ThispaperproposedLogPunk,arobustandefficientlogparserbasedonournovel
log punctuations signature method. The candidate signature group is quickly located
according to the log signature, which improves the efficiency. To solve the problem of
signaturecollision,wedesignthelogsimilarityfunctiontofindthemostsimilartemplate,
whichimprovestherobustness.
Appl.Sci.2021,11,11974 13of15
Experimentsareconductedon16publiclogdatasets. Ourexperimentalresultsshow
thatLogPunkobtainsthehighestaccuracyontendatasetsoutof16datasets. Especially,
LogPunkachievesthebestaverageaccuracyof0.919amongtheotherfivebaselinelog
parsers. Inaddition,experimentsalsoshowthatLogPunkisrobustandefficient.
Finally,somefutureworksareanalyzedasfollows.
(1) Automatedparameterstuning. Logpunkhastwohyperparameterssimilaritythreshold
andprefixthreshold(cf.Section3.3).Duringtheexperiment,thesetwohyperparameters
arefine-tunedmanually. Thisprocessistime-consuming,andtheobtainedhyperpa-
rametersmaynotbeoptimal. Amechanismforautomatedparameterstuningcan
greatlyimprovethissituation.
(2) Punctuationtablegeneration. Thepunctuationtable(cf. Section3.2)determinesthe
logsignatureandaffectsthewholelogparsingprocess. Wepresentedapunctuation
tablebyeliminatingthepunctuationsappearinginvariables,anditperformswellon
the16evaluateddatasets. Foranewsystem,ifwecustomizeapunctuationtablefor
it, wemaygetbetterlogparsingresults. Itisdesirabletofindawaytogeneratea
customizedpunctuationtableautomaticallyforanunknownsystem.
(3) Variabletypeidentification. Existinglogparserstreatallvariablesintheparsingresult
asstrings. However,obviously,eachvariablehasitsspecifictypeinformation(e.g.,
number,IP,URL,filepath,etc.) anditisusefultodetectthevariable-relatedanomaly.
Iflogparsingnotonlyidentifiesvariablebutalsovariabletypes,itwillbringmore
initiativetodownstreamtasks.
AuthorContributions: Conceptualization,S.Z.andG.W.;methodology,S.Z.;software,S.Z.;vali-
dation,S.Z.;investigation,S.Z.;resources,S.Z.;writing—originaldraftpreparation,S.Z.;writing—
reviewandediting,G.W.;visualization,S.Z.;supervision,G.W.;projectadministration,G.W.;funding
acquisition,G.W.Allauthorshavereadandagreedtothepublishedversionofthemanuscript.
Funding:Thisresearchreceivednoexternalfunding.
DataAvailabilityStatement:Publiclyavailabledatasetswereanalyzedinthisstudy.Thisdatacan
befoundhere:[https://github.com/logpai/loghub].
ConflictsofInterest:Theauthorsdeclarenoconflictofinterest.
Abbreviations
Thefollowingabbreviationsareusedinthismanuscript:
AIOps ArtificialIntelligenceforITOperations
LCS LongestCommonSubsequence
PA ParsingAccuracy
URL UniformResourceLocator
Symbols
EV LogContent
e ALogTemplate
i
v AListofVariables
i
E TheSetofAllLogTemplates
L ASequenceofLogMessages
lm ALogMessage
t i AListofTokens
t TheTokenwithIndexj
j
T TheSetofAllTokens
n MessageLength
References
1. Cito,J.;Leitner,P.;Fritz,T.;Gall,H.C. TheMakingofCloudApplications:AnEmpiricalStudyonSoftwareDevelopmentforthe
Cloud. InProceedingsofthe201510thJointMeetingonFoundationsofSoftwareEngineering;AssociationforComputingMachinery:
NewYork,NY,USA,2015;pp.393–403.[CrossRef]
Appl.Sci.2021,11,11974 14of15
2. Barik,T.;DeLine,R.;Drucker,S.;Fisher,D. Thebonesofthesystem: Acasestudyofloggingandtelemetryatmicrosoft. In
Proceedingsofthe2016IEEE/ACM38thInternationalConferenceonSoftwareEngineeringCompanion,Austin,TX,USA,14–22
May2016;pp.92–101. [CrossRef]
3. Forestiero,A.;Mastroianni,C.;Papuzzo,G.;Spezzano,G.AProximity-BasedSelf-OrganizingFrameworkforServiceComposition
andDiscovery. InProceedingsofthe201010thIEEE/ACMInternationalConferenceonCluster,CloudandGridComputing,
Melbourne,VIC,Australia,17–20May2010,pp.428–437.[CrossRef]
4. Forestiero,A.;Mastroianni,C.;Meo,M.;Papuzzo,G.;Sheikhalishahi,M. Hierarchicalapproachforgreenworkloadmanagement
indistributeddatacenters. InEuropeanConferenceonParallelProcessing; Springer: NewYork,NY,USA,2014; pp. 323–334.
[CrossRef]
5. Mi,H.; Wang,H.; Zhou,Y.; Lyu,M.R.T.; Cai,H. TowardFine-Grained,Unsupervised,ScalablePerformanceDiagnosisfor
ProductionCloudComputingSystems. IEEETrans.ParallelDistrib.Syst.2013,24,1245–1255. [CrossRef]
6. Zhang,X.;Xu,Y.;Lin,Q.;Qiao,B.;Zhang,H.;Dang,Y.;Xie,C.;Yang,X.;Cheng,Q.;Li,Z.;etal. RobustLog-BasedAnomaly
DetectiononUnstableLogData. InProceedingsofthe201927thACMJointMeetingonEuropeanSoftwareEngineering
ConferenceandSymposiumontheFoundationsofSoftwareEngineering,Tallinn,Estonia,26–30August2019;Associationfor
ComputingMachinery:NewYork,NY,USA,2019;pp.807–817. [CrossRef]
7. Meng,W.;Liu,Y.;Zhu,Y.;Zhang,S.;Pei,D.;Liu,Y.;Chen,Y.;Zhang,R.;Tao,S.;Sun,P.;etal. LogAnomaly: Unsupervised
DetectionofSequentialandQuantitativeAnomaliesinUnstructuredLogs. InProceedingsoftheInternationalJointConferences
onArtificialIntelligenceOrganization,Macao,China,10–16August2019;pp.4739–4745.[CrossRef]
8. Zhou,X.;Peng,X.;Xie,T.;Sun,J.;Ji,C.;Liu,D.;Xiang,Q.;He,C. InLatentErrorPredictionandFaultLocalizationforMicroservice
ApplicationsbyLearningfromSystemTraceLogs;AssociationforComputingMachinery:NewYork,NY,USA,2019;pp.683–694.
[CrossRef]
9. Chen,Y.;Yang,X.;Lin,Q.;Zhang,H.;Gao,F.;Xu,Z.;Dang,Y.;Zhang,D.;Dong,H.;Xu,Y.;etal. OutagePredictionandDiagnosis
forCloudServiceSystems. InTheWorldWideWebConference,SanFrancisco,CA,USA,13–17May2019;Associationfor
ComputingMachinery:NewYork,NY,USA,2019;pp.2659–2665.[CrossRef]
10. Zaman,T.S.;Han,X.;Yu,T.SCMiner:LocalizingSystem-LevelConcurrencyFaultsfromLargeSystemCallTraces. InProceedings
ofthe201934thIEEE/ACMInternationalConferenceonAutomatedSoftwareEngineering,SanDiego,CA,USA,11–15November
2019;pp.515–526.[CrossRef]
11. Cotroneo,D.;DeSimone,L.;Liguori,P.;Natella,R.;Bidokhti,N. HowBadCanaBugGet?AnEmpiricalAnalysisofSoftware
FailuresintheOpenStackCloudComputingPlatform. InProceedingsofthe201927thACMJointMeetingonEuropeanSoftware
EngineeringConferenceandSymposiumontheFoundationsofSoftwareEngineering,Tallinn,Estonia,26–30August2019;Association
forComputingMachinery:NewYork,NY,USA,2019;pp.200–211. [CrossRef]
12. Xu, W.; Huang, L.; Fox, A.; Patterson, D.; Jordan, M.I. Detectinglarge-scalesystemproblemsbyminingconsolelogs. In
ProceedingsoftheACMSIGOPS22ndSymposiumonOperatingSystemsPrinciples,BigSky,MT,USA,11–14October2009;
pp.117–132.[CrossRef]
13. Lou,J.G.;Fu,Q.;Yang,S.;Xu,Y.;Li,J. MiningInvariantsfromConsoleLogsforSystemProblemDetection. InProceedingsofthe
USENIXAnnualTechnicalConference,Boston,MA,USA,23–25June2010;pp.1–14.
14. Lou, J.G.; Fu, Q.; Yang, S.; Li, J.; Wu, B. Mining program workflow from interleaved traces. In Proceedings of the 16th
ACMSIGKDDInternationalConferenceonKnowledgeDiscoveryandDataMining,Washington,DC,USA,25–28July2010;
pp.613–622.[CrossRef]
15. Zhu,J.;He,S.;Liu,J.;He,P.;Xie,Q.;Zheng,Z.;Lyu,M.R. Toolsandbenchmarksforautomatedlogparsing. InProceedingsof
the2019IEEE/ACM41stInternationalConferenceonSoftwareEngineering:SoftwareEngineeringinPractice,Montreal,QC,
Canada,25–31May2019;pp.121–130.
16. Beschastnikh,I.;Brun,Y.;Ernst,M.D.;Krishnamurthy,A. Inferringmodelsofconcurrentsystemsfromlogsoftheirbehavior
withCSight. InProceedingsofthe36thInternationalConferenceonSoftwareEngineering,Hyderabad,India,31May2014;
pp.468–479. [CrossRef]
17. He,P.;Zhu,J.;Zheng,Z.;Lyu,M.R. Drain:Anonlinelogparsingapproachwithfixeddepthtree. InProceedingsofthe2017
IEEEInternationalConferenceonWebServices,Honolulu,HI,USA,25–30June2017;pp.33–40.[CrossRef]
18. Dai,H.;Li,H.;Chen,C.S.;Shang,W.;Chen,T.H. Logram:Efficientlogparsingusingn-gramdictionaries. IEEETrans. Softw.
Eng.2020.[CrossRef]
19. Vaarandi,R. Adataclusteringalgorithmforminingpatternsfromeventlogs. InProceedingsofthe3rdIEEEWorkshoponIP
Operations&Management,KansasCity,MO,USA,3October2003;pp.119–126.[CrossRef]
20. Nagappan,M.;Vouk,M.A. Abstractingloglinestologeventtypesforminingsoftwaresystemlogs. InProceedingsofthe2010
7thIEEEWorkingConferenceonMiningSoftwareRepositories,CapeTown,SouthAfrica,2–3May2010;pp.114–117.
21. Tang,L.;Li,T.;Perng,C.S.LogSig:Generatingsystemeventsfromrawtextuallogs. InProceedingsofthe20thACMInternational
ConferenceonInformationandKnowledgeManagement,Glasgow,UK,24–28October2011;pp.785–794.
22. Hamooni,H.; Debnath,B.; Xu,J.; Zhang,H.; Jiang,G.; Mueen,A. Logmine: Fastpatternrecognitionforloganalytics. In
Proceedingsofthe25thACMInternationalonConferenceonInformationandKnowledgeManagement,Indianapolis,IN,USA,
24–28October2016;pp.1573–1582.
Appl.Sci.2021,11,11974 15of15
23. Makanju,A.A.;Zincir-Heywood,A.N.;Milios,E.E. Clusteringeventlogsusingiterativepartitioning. InProceedingsofthe15th
ACMSIGKDDInternationalConferenceonKnowledgeDiscoveryandDataMining,Paris,France,28June2009–1July2009;
pp.1255–1264.
24. Mizutani,M. Incrementalminingofsystemlogformat. InProceedingsofthe2013IEEEInternationalConferenceonServices
Computing,SantaClara,CA,USA,28June–3July2013;pp.595–602.[CrossRef]
25. Shima,K. Lengthmatters:Clusteringsystemlogmessagesusinglengthofwords. arXiv2016,arXiv:1611.03213.
26. Du,M.;Li,F. Spell:Streamingparsingofsystemeventlogs. InProceedingsofthe2016IEEE16thInternationalConferenceon
DataMining(ICDM),Barcelona,Spain,12–15December2016;pp.859–864.[CrossRef]
27. Du, M.; Li, F. Spell: Online Streaming Parsing of Large Unstructured System Logs. IEEE Trans. Knowl. Data Eng. 2019,
31,2213–2227.[CrossRef]
28. He,S.;Zhu,J.;He,P.;Lyu,M.R. Loghub:Alargecollectionofsystemlogdatasetstowardsautomatedloganalytics. arXiv2020,
arXiv:2008.06448.
29. Jiang,Z.M.;Hassan,A.E.;Flora,P.;Hamann,G. Abstractingexecutionlogstoexecutioneventsforenterpriseapplications(short
paper). InProceedingsofthe2008:TheEighthInternationalConferenceonQualitySoftware,Oxford,UK,12–13August2008;
pp.181–186.[CrossRef]
30. Huang,S.;Liu,Y.;Fung,C.;He,R.;Zhao,Y.;Yang,H.;Luan,Z. Paddy:Aneventlogparsingapproachusingdynamicdictionary.
InProceedingsoftheNOMS2020-2020IEEE/IFIPNetworkOperationsandManagementSymposium,Budapest,Hungary,20–24
April2020;pp.1–8.
31. Vaarandi,R.;Pihelgas,M. Logcluster—Adataclusteringandpatternminingalgorithmforeventlogs. InProceedingsofthe2015
11thInternationalConferenceonNetworkandServiceManagement,Barcelona,Spain,9–13November2015;pp.1–7.[CrossRef]
32. Fu,Q.;Lou,J.G.;Wang,Y.;Li,J. Executionanomalydetectionindistributedsystemsthroughunstructuredloganalysis. In
Proceedingsofthe2009NinthIEEEInternationalConferenceonDataMining,MiamiBeach,FL,USA,6–9December2009;
pp.149–158.[CrossRef]