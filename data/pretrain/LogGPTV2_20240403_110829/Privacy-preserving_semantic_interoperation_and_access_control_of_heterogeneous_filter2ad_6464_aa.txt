title:Privacy-preserving semantic interoperation and access control of heterogeneous
databases
author:Prasenjit Mitra and
Chi-Chun Pan and
Peng Liu and
Vijayalakshmi Atluri
Privacy-preserving Semantic Interoperation and Access
Control of Heterogeneous Databases
Prasenjit Mitra, Chi-Chun Pan, Peng Liu
Penn State University
University Park, PA 16802, U.S.A.
Vijayalakshmi Atluri
Rutgers University
Newark, NJ 07102, U.S.A.
PI:EMAIL
PI:EMAIL
ABSTRACT
Today, many applications require users from one organiza-
tion to access data belonging to organizations. While tra-
ditional solutions oﬀered for the federated and mediated
databases facilitate this by sharing metadata, this may not
be acceptable for certain organizations due to privacy con-
cerns. In this paper, we propose a novel solution – Privacy-
preserving Access Control Toolkit (PACT) – that enables
privacy-preserving secure semantic access control and al-
lows sharing of data among heterogeneous databases with-
out having to share metadata. PACT uses encrypted on-
tologies, encrypted ontology-mapping tables and conversion
functions, encrypted role hierarchies and encrypted queries.
The encrypted results of queries are sent directly from the
responding system to the requesting system, bypassing the
mediator to further improve the security of the system. PACT
provides semantic access control using ontologies and seman-
tically expanded authorization tables at the mediator. One
of the distinguishing features of the PACT is that it requires
very little changes to underlying databases. Despite using
encrypted queries and encrypted mediation, we demonstrate
that PACT provides acceptable performance.
1.
INTRODUCTION
Today, more and more applications involve information
access across databases (information sources) owned by dif-
ferent organizations. The most two common approaches to
accomplish this are solutions oﬀered in the area of federated
databases and solutions employing mediators.1 Although
these can handle issues such as data type diﬀerences, value
diﬀerences, semantic diﬀerences and missing values, these
are extremely limited in handling the increasing need of pro-
tecting the privacy and conﬁdentiality of the metadata while
allowing such information accesses.2
1Here, we assume data from several sources are not stored
in a single database or data warehouse.
2Here, conﬁdentiality concerns disclosing information about
the metadata to an outsider who is not involved in the in-
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
ASIACCS ’06, March 21-24, 2006, Taipei, Taiwan.
Copyright 2006 ACM 1-59593-272-0/06/0003 ...$5.00.
Federated database systems implement one-to-one con-
nections between all pairs of databases that need to talk to
each other. These connections allow one database system
D1 (or employees of one organization or entity E1) to query
another D2 (owned by another organization E2) in terms
that D2 can understand. Federated database systems inher-
ently require that D1 and D2 reveal their data schema (and
the associated semantics), a main type of metadata, to each
other. However, this requirement may raise serious privacy
concerns when “there is an increasing need for sharing in-
formation across autonomous organizations in such a way
that no information apart from the answer to the query is
revealed” [4]. For example, organizations like FBI and CIA
may never want to reveal their metadata and divulge cru-
cial information about what information is stored in their
sources. Moreover, storing the schema on more systems
obviously increases the threat to the conﬁdentiality of the
schema.
When mediator-based systems are used to support infor-
mation access across heterogeneous databases 3, a mediator
trusted by E1 and E2 generates and stores a mapping be-
tween the schemas of D1 and D2 to resolve the semantic
heterogeneity. Essentially, mediators know data schemas.
Although a privacy control policy can be enforced by the
mediators, such a solution has to rely on fully trusted and
highly secure mediators to preserve the privacy and conﬁ-
dentiality of metadata. And such an approach is not (very)
practical, since (a) building a highly secure mediator is not
only very expensive but also very diﬃcult, if not impossi-
ble, because almost every host providing services could be
hacked; (b) from the trust management point of view, such
a continuous high trust requirement is very diﬃcult to be
satisﬁed, and as a result, such a mediator (third party) is
unlikely to be deployed.
(Fundamentally, the more trust
you assume, the more vulnerable the system.) Nevertheless,
the above discussion shows that preserving the privacy of
metadata while enabling semantic interoperation is a diﬃ-
cult problem, since, often, the technologies proposed for en-
abling semantic interoperation depend heavily on insecure
mediation based on the metadata.
In this work, we present PACT – Privacy-preserving Ac-
cess Control Toolkit – a new mediation solution for infor-
mation access across heterogeneous databases. PACT seeks
formation sharing setting, while privacy concerns disclosing
information about the metadata to a party who is legiti-
mately involved in the information sharing setting.
3Mediators are also used for information integration [10],
but the integration aspect is out of the scope of this paper.

to solve the aforementioned problem. To the best of our
knowledge, PACT is the ﬁrst framework that can preserve
the privacy of metadata while enabling semantic interoper-
ation. Besides preserving the privacy of metadata, another
key contribution of PACT is semantic access control which
we will explain shortly.
It is important to note that PACT is very diﬀerent from
secure multi-party computation originated by Yao [22], and
(relational) database speciﬁc secure multi-party computa-
tion solutions proposed in [4, 14]. While the focus of this
research is on how to allow E1 and E2 to integrate their data
in such a way that a function f (x, y), where x ∈ D1 and
y ∈ D2, can be computed by both E1 and E2 without any-
thing else about x or y being revealed. In contrast, PACT
focuses on metadata instead of data; and PACT focuses on
information access instead of information integration.
PACT has several unique properties:
 PACT achieves ‘blind’ mediation using encrypted meta-
data. All the metadata used by a mediator are encrypted
and the mediation algorithm does not require any decryp-
tion, yet semantic mediation can be correctly done without
any human intervention (in runtime). In this way, PACT
preserves privacy of metadata.
 PACT greatly reduces the trust requirements on the me-
diator. E1 and E2 no longer need to trust that the media-
tor will not disclose their metadata (without authorization).
The mediator is not required to be highly secure either. This
property makes PACT a semi-trusted third party approach
to information sharing instead of a trusted third party ap-
proach.4 This makes PACT a very practical solution.
 PACT exploits semantic mediation to enhance privacy.
As we mentioned above, mediation typically compromises
privacy, however, in PACT, mediation is exploited to yield
more privacy. This is achieved via a novel schema obfusca-
tion technique we will present shortly in Section 4, where
synonyms in ontologies are used to ‘obfuscate’ attributes in
schemas and other metadata. This property means that the
terms in a database are never shared outside the database
but secure interoperation can be achieved without having to
share any metadata with other organizations.
 PACT ‘outsources’ access control to the mediator. As a
result, if a query from E1 will be denied by E2, the query
can be denied much earlier at the mediator.
In this way,
PACT enhances the performance of the system by avoiding
a roundtrip to the responding database for queries that will
be eventually denied or that need to be rewritten because the
responding database allows only partial access to the data
being requested. This is achieved via a novel semantic access
control scheme that allows PACT to seamlessly integrate
semantic mediation and access control. We will present this
scheme in Section 4.
 Despite the costs of key management and encryption, our
experiments show that the overhead of enabling secure inter-
operation is quite small and we achieved high throughput of
the queries while using PACT. The overhead of symmetric
encryption is negligible; and many if not most PACT medi-
ation operations can be directly performed using the map-
ping tables stored at the Mediator. The only performance
bottleneck might be that PACT deploys a single mediator,
however, the mediator can easily be replicated to remove
4Note that PACT assumes that the software at the mediator
has not been tampered and it runs the mediation algorithm
faithfully.
that impediment.
2. PRELIMINARIES
In this section, we introduce some preliminary concepts
used in the rest of the paper.
2.1 Data Schema and Ontologies
We denote the data schema for an organization as {T1, T2,
..., Tm}, where Ti is a table (or relation) denoted as Ti(ai1, ai2,
..., aik). Each aij is an attribute of Ti.
We assume that associated with each information source is
an ontology that speciﬁes the relationships among the terms
used in the information source. We use the Web Ontol-
ogy Language(OWL) [6] to express our ontologies. In our
model, an ontology is a set of concepts or terms (denoted
C1, C2, ..., CL) that have three types of relation among
them: {equivalentClass, subClassOf, diﬀerentFrom}. Two
classes related by equivalentClass “have the same instances” [6].
The relation subClassOf(Ci, Cj) means that the semantic
scope of Ci is narrower than that of Cj, or Cj is broader
than Ci. The relationship diﬀerentFrom is used to indicate
that two classes or individuals are diﬀerent. Among the
3 relations, equivalentClass and subClassOf are transitive,
but diﬀerentFrom is not. We use the terms “concepts” and
“terms” interchangeably in the rest of the treatise.
To enable information access across heterogeneous infor-
mation sources, within each organization, an in-house pro-
cess generates (semantic) mappings between its database
(i.e., table names and attribute names in the database schema)
and its ontology – using a toolkit deploying existing schema
and ontology mapping techniques (see
[19] for a survey)
– and stores this database-ontology mapping for future use.
Due to this mapping, attributes in data tables are not nec-
essarily always part of an ontology.
We assume each organization E has a set of employees or
users. Each user is authorized to access part of E’s database,
so the user usually knows only part of E’s schema. Similarly,
we assume each user U uses a speciﬁc user ontology which
corresponds to the part of E’s ontology that U can access.
Due to privacy protection, we assume the employees of one
organization never know the schema of another organization.
2.2 Role-based Access Control
PACT uses role-based access control (RBAC). We assume
that each database enforces its own RBAC policy. An user
must be associated with at least a home organization which
identiﬁes the user and assigns the user one or more roles.
We denote an access control policy as {R, R → P}, where
R is a role hierarchy, P is the set of privileges, and R → P
is a mapping from R to P . A privilege pi is denoted as
{object, action, sign}. We assume the object be an attribute
of the table Ti.aij or a table Ti; the action is select, up-
date, insert and delete; and sign ∈ {+,−}.
‘+’ means
a positive privilege (allow access) and ‘-’ means negative
(deny access). Each role can be mapped to multiple priv-
ileges. Each organization maintains the following tables in
its database: (a) a subject-role assignment table, (b) a priv-
ileges table, and (c) a role-privileges assignment table. The
subject-role assignment table lists users and their roles, e.g.,
(Bob, manager) indicates that the user Bob has the role of
“manager”. The role-privileges assignment table lists tu-
ples of the form (role, pi), e.g., (manager, pi(employeeTab,
select, +)) indicates that the role “manager” have select

access to the table “employeeTab”.
For clarity, in the next two sections we assume that there
are no negative privileges. Nevertheless, note that our frame-
work can be easily extended to support negative privileges.
3. SYSTEM ARCHITECTURE
The architecture of PACT is shown in Figure 1. PACT
has two phases: the oﬄine phase – the initial processing
that takes place before any query is processed; and the on-
line phase, which shows how an inter-organization query is
processed in runtime.
PACT is a middleware system that requires very few changes
to be done on the legacy systems of any organizations in-
volved. The oﬄine procedure of PACT is to (1) translate
the (syntactic) access control policy of each organization to
a semantic access control policy against the organization’s
ontology, and (2) prepare the other metadata used by the
mediator.
To illustrate the online aspect of PACT, suppose an em-
ployee of Organization A needs some information from or-
ganization B. In Step 1, since the user does not know B’s
data schema, the user’s SQL query is written against the
user’s user ontology.
In this way, the actual column and
table names used in the query will be ‘obfuscated’ by A’s
ontology. Then the obfuscated query will be encrypted.
In Step 2, a SQL parser is used to “decompose” the query
into several column-level or table-level access requests. How-
ever, at this stage these requests are expressed with A’s on-
tology and role lattice, and they cannot be directly processed
by Organization B. Hence, in Step 3, the mediator trans-
lates these requests into several semantic accesses requests
expressed with B’s ontology and role lattice via an algorithm
called semantic request mediation. This algorithm uses en-
crypted mappings between terms in A’s ontology and B’s
ontology and the mapping between roles in A’s role lattice
and B’s role lattice. In Step 4, these requests are checked
against B’s semantic access control policy. In Step 5, the
ﬁltered yet authorized semantic requests will be decrypted
and translated into some syntactic access requests against
B’s schema, In Step 6, the SQL query is processed by B’s
DBMS. The DBMS may forgo the security checking since
it has already been done. However, the query results can-
not be directly returned to A because they are not expressed
against A’s ontology and the user can be confused about the
meaning of the results. In Step 7, the responder translates
the data and sends it back to the user.
From the privacy preserving perspective, a key feature of
PACT is that all the metadata stored and used at the me-
diator, which include the ontologies of both organizations,
the ontology-mapping table and the role-mapping table, are
encrypted and the mediator cannot decrypt them. In this
way, PACT removes the requirement that the mediator must
be trusted not to disclose any sensitive metadata, and good
privacy and conﬁdentiality can be preserved even if the me-
diator is hacked.
Remark. Although the Access Controller may be moved
into organization B to further enhance the privacy of access
control policies, outsourcing access control to the mediator
may substantially improve the system’s performance, as we
will explain shortly in Section 4.
4. CORE TECHNIQUES
In this section, we present the set of core techniques used
by the PACT system and demonstrate their uniqueness and
merits. First, we discuss the oﬄine operations of PACT. Sec-
ond, we discuss the runtime operations of PACT. Although
for clarity we only address the scenario with two organiza-
tions, PACT can easily handle multiple organizations with
one or more mediators.
4.1 Ofﬂine Processing
In this section, we show how each piece of the metadata
used by the mediator (shown in Figure 1) is prepared. First,
organization A’s ontology (B’s ontology) is prepared by an
in-house process to include the terms used in DA (DB), in
the way we mentioned in Section 2. Then A’s ontology (B’s
ontology) will be encrypted by organization A (B) using a
speciﬁc master key denoted KA (KB) as follows 5: all and
only the terms are encrypted, none relation among them is.
Note that in a PACT system a master key (e.g., KA) is only
known to it owner (e.g., organization A), no one else. The
encrypted version of A’s ontology is the version stored at
the mediator.
Second, the ontology-mapping table may be generated in
either a semi-automated way or a totally automated way.
In the ﬁrst case, an ontology matcher (i.e., a human expert
trusted by both organization A and B) will be able to ac-
cess both A’s ontology and B’s ontology in cleartext. He
understands the semantics of both ontologies; he will use
speciﬁc ontology mapping techniques [19] to map; and he
will generate certain entries or rules in the mapping table
which we will explain shortly. Then the resulted mapping
table will be encrypted as follows:
for each entry, all and
only the terms from A’s ontology are encrypted using KA;
all and only the terms from B’s ontology are encrypted us-
ing KB. The encrypted version of this mapping table is the
version stored at the mediator. It is important to note that
(1) the human expert has nothing to do with the mediator
(software); they are totally diﬀerent entities; (2) the expert
can instantly “forget” the mapping table once it is generated