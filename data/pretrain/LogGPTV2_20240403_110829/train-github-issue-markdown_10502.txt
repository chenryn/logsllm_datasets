I have some data that I have used to generate a stacked bar graph.
    by_conclusion = measles_data.groupby(["AGE", "CONCLUSION"])
    counts_by_cause = by_conclusion.size().unstack().fillna(0)
    ax = counts_by_cause.plot(kind='bar', stacked=True)
However, I get a pretty crowded x-axis:
![too_many_ticks](https://camo.githubusercontent.com/0849ca8448f46d8226f273d6168f4b6f21fa73bfecccca095b61c4a150a0cb83/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f38313437362f3232393038302f32393633373938322d383639342d313165322d393662642d3234613936633365326463642e706e67)
So, I try to use `set_xticks` to try and thin them out, either as an argument
to plot, or as a separate command:
    ax.xticks(arange(0,80,10))
However, for some reason, the labels end up being downscaled by a factor of
10:
![wrong_ticks](https://camo.githubusercontent.com/a07074debb63b1a01b1b4bb9f1906a4ef57a08a68514ed4c05c9706f558240f3/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f38313437362f3232393038312f32626536626638652d383639342d313165322d386435632d3436323838363036643738352e706e67)
(might be hard to see, but it is printing "0.0, 1.0, 2.0, ..." instead of "0,
10, 20, ...")
Its not clear why this is happening, or how to get around it, so I'm either
going about this wrong or its a bug. I get the same behavior when I try using
`MaxNLocator`:
    ax.xaxis.set_major_locator( MaxNLocator(nbins = 7) )
The data are here