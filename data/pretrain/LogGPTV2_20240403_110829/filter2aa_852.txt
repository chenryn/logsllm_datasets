1
Implementation of
Implementation of
Web Application Firewall
Web Application Firewall
OuTian 
>
2
Introduction
Introduction
 Abstract
• Web 层应用程式之攻击日趋严重，而国内多
數企业仍不知该如何以资安设备阻挡，仍在采
购传统的 Firewall/IPS ，因此本场次即对
Web Application Firewall( 以 下 简 称
WAF)之功能、及实作方式作介绍
 About OuTian
• 现任 敦阳科技 资安顾问
• 渗透测试服务与后续资安规划
• 资安事件鉴識处理
3
Agenda
Agenda
 Introduction to WAF
 General Web Vulnerabilities
 Functions
 Implementation
 Common Questions
 Evasion
 Conclusion
 Q & A
4
Introduction to WAF
Introduction to WAF
5
Introduction to WAF
Introduction to WAF
 What is WAF
 Why WAF
 Vendors
 Structure
 WAF v.s Network Firewall
 WAF v.s IPS
6
What is WAF
What is WAF
 An intermediary device, sitting 
between a web-client and a web 
server, analyzing OSI Layer-7 
messages for violation in the 
programmed security policy. A 
web application firewall is used 
as a security device protecting 
the web server from attack.
7
Why WAF
Why WAF
 Web AP 成为 顾客/骇客 共同入口
• 根据Gartner统计：
成功的惡意攻击中，70% 都是针对 Web AP
8
既有的资安设备无法有效阻挡
既有的资安设备无法有效阻挡
9
SSL 
SSL 加密，
加密，IDS/IPS
IDS/IPS也看不懂
也看不懂
Internet
Corporate LAN
Application Infrastructure
IP Traffic
HTTP
HTTPS
合法使用者
网际网路骇客
來源
目的
服务
动作
Any
Web Server 1
HTTP/S
合法接受
10
Web AP 
Web AP 安全來源的复杂性
安全來源的复杂性
• 复杂之 AP Source Code
• 开发者多數仅注重功能
• 類似的安全问题重复发生
• 其他引用來源所累
11
Vendors
Vendors
 Breach
 Citrix
 F5
 Imperva
 NetContinuum
 WebScurity
12
Structure
Structure
 Host Based
• Web Server module/plugin
• Special program compiler
 Network Based
• Appliance
• Deployed as
 Reverse Proxy
 In-Line Mode
 Web Traffic Monitor
• SSL Handshaking
13
WAF 
WAF v.s
v.s Network Firewall
Network Firewall
WAF
WAF
 Protect at Layer 7
 Check http/s data
 Block http/s traffic 
with malicious attack
 Decrypt https packets
 Inspect http/html
Network Firewall
Network Firewall
 Protect at Layer 3
 check IP and PORT
 Always allow http/s 
traffic even with 
malicious attack
 Unable to decrypt 
https packet
 No action to http/html
14
WAF 
WAF v.s
v.s IDS/IPS
IDS/IPS
WAF
WAF
 Positive Security 
Model
 Behavior Modeling
 Fully SSL decryption
 Track cookie/form
IDS/IPS
IDS/IPS
 Negative Security 
Model
 Signature based
 Typically no SSL 
decryption
 No check to 
cookie/form
15
General Web Vulnerabilities
General Web Vulnerabilities
16
General Web Vulnerabilities
General Web Vulnerabilities
 Web Application Design Error
• Buffer Overflow
• SQL Injection
• Cross Site Scripting
• Arbitrary File Inclusion
• Code Injection
• Command Injection
• Directory Traversal
17
 Logic Design Error
• Cookie Poisoning
• Parameter Tampering
• Session Mis-Management
• Upload File Mis-Handling
• Information Disclosure
• Weak Authentication
18
OWASP top 10 2007
OWASP top 10 2007
 Cross Site Scripting
 Injection Flaws
 Malicious File Execution
 Insecure Direct Object Reference
 Cross Site Request Forgery
19
 Information Leakage and 
Improper Error Handling
 Broken Authentication and 
Session Management
 Insecure Cryptographic Storage
 Insecure Communications
 Failure to Restrict URL Access
20
SQL Injection Example
SQL Injection Example
21
22
23
Cross Site Scripting Example
Cross Site Scripting Example
24
Arbitrary File Inclusion Example
Arbitrary File Inclusion Example
25
Functions
Functions
26
Functions
Functions
 Input Validation
• URL
• Buffer Overflow
• Form Field Consistency
• Form Field Format
• Cookie Consistency
• SQL Injection
• Cross Site Scripting
 Output Checks
27
URL
URL
 Check Allowed URL Resource
 Deny some file extensions
• .phps
• .inc
• .sql
• .core
• .exe
• .log
28
Buffer Overflow
Buffer Overflow
 Limit maximum length of data
• URL
• Headers
• Cookie
• POST parameter
• POST data
29
Form Field Consistency
Form Field Consistency
 Avoid Parameter Tampering
 Track Form field content
• select
• ratio button
• check box
 hidden value
30
Cookie Consistency
Cookie Consistency
 Avoid Cookie Poisoning
 When web server Set-Cookie to 
client, WAF will track it to 
determine if modified by attacker
31
Field Format
Field Format
 User Input : 
GET/POST/Headers/Cookie
 Most effective way to avoid 
injection !
 Positive check
 Use Regular Expression to limit
• uid => ^[0-9]+$
• username => ^[\w\d]$
• id => ^\w[0-9]{9}$
32
SQL Injection
SQL Injection
 Negative check
 Scan for suspicious SQL 
character or SQL syntax
• ‘
• select/delete/update/insert
• union/where/having/group
• exec
• --
• /*
33
Cross Site Scripting
Cross Site Scripting
 Negative check
 Scan for suspicious client side 
script/html injection
• 
• 
34
Implementation
Implementation
35
Implementation
Implementation
 Apache
 Mod_security
 Mod_proxy
• mod_proxy_http
• mod_proxy_connect
• mod_proxy_balancer
• mod_proxy_ajp
 Mod_cache
36
Mod_security
Mod_security
 Open Source project :
http://www.modsecurity.org/
 Embedded in apache web server
 Inexpensive and easy to deploy 
since no change to the network
 But must install/config to each 
web server
37
Features (1)
Features (1)
 Input validation check for all 
client input data
 Output check also available
 Buffer overflow protection
 Flexible
• Regular Expression based rule 
engine
• Different apps with different 
policies
38
Features (2)
Features (2)
 Anti-Evasion built in
 Upload file interception and real-
time validation
 Encoding validation built in
 Up on attack detection, variety 
action to do : 
Log/Alert/Block/…call scripts
39
Basic configuration concept
Basic configuration concept
 WHEN
• found matched 
url/header/client/time
 DO
• Check data
 THEN
• Deny/pass/redirect/exec/…
 Chain Rules
40
Configuration Examples (1)
Configuration Examples (1)
 Avoid SQL Injection
• SecRule ARGS 
“(insert|select|update|delete)” deny
 Avoid HTML tags injection
• SecRule ARGS “” deny
 Avoid Directory Traversal
• SecRule “\.\./” deny
41
Configuration Examples (2)
Configuration Examples (2)
 Limit Login ip for admin
• SecRule ARG_username “^admin$”
chain
• SecRule REMOTE_ADDR 
“!^192.168.0.1$” deny
 Hide Server Signature
• SecServerSignature “MyWeb/1.0”
42
Configuration Example (3)
Configuration Example (3)
 Avoid output credit card number
• SecRule OUTPUT “\d{4}-\d{4}-
\d{4}-\d{4}” “deny,phase:4”
 Avoid output php error message
• SecRule OUTPUT “Warning:”
“deny,phase:4,exec:mailadm.pl”
 Avoid output asp error message
• SecRule OUTPUT “ODBC Drivers”
“deny,phase:4,exec:mailadmin.pl”
43
Configuration Example (4)
Configuration Example (4)
 chroot apache
• SecChrootDir /chroot/apache
 Buffer overflow protection
• SecFilterByteRange 32 126
44
Mod_proxy
Mod_proxy
 Mod_proxy_http
• Proxy http request
 Mod_proxy_connect
• Handel CONNECT http method
 Mod_proxy_balencer
• Load sharing for server farms
 Mod_proxy_ajp
• Support for apache jserv protocol
 Mod_proxy_ftp
• Support proxying ftp sites
45
Mod_cache
Mod_cache
 Mod_file_cache
• Offers file handle and memory 
mapping tricks to reduce server load
 Mod_disk_cache
• Implement disk based cache, content 
is stored in and retrived from the 
cache using URI based keys
 Mod_mem_cache
• Caching open file descriptors and 
caching objects in heap storage
46
Common Questions
Common Questions
47
Common Questions
Common Questions
 To see real client IP in Web AP 
and server logs
 L4 Devices sticky client by source 
ip
48
To see real client IP (1)
To see real client IP (1)
 Environment –
• Client ip : w.x.y.z
• WAF external ip : a.b.c.d
• WAF internal ip : 192.168.0.254
• Web server ip : 192.168.0.1
• Domain name : www.abc.com => 
a.b.c.d
49
To see real client IP (2)
To see real client IP (2)
(HTTP Header)
GET / HTTP/1.1
Host: www.abc.com
........
(IP Header)
w.x.y.z => a.b.c.d
Client
w.x.y.z
WAF External IP : a.b.c.d
50
To see real IP (3)
To see real IP (3)
WAF
Internal IP : 192.168.0.254
(HTTP Header)
GET / HTTP/1.1
Host: www.abc.com
X‐CLIENT‐IP: w.x.y.z
……..
(IP Header)
192.168.0.254 => 192.168.0.1
Oh , According to 
IP Header , client 
ip is 
192.168.0.254
Wrong !
51
To see real IP 
To see real IP -- solution
solution
 Web AP :
• Rewrite to fetch real ip from http 
header
 Web Server Logs :
• Apache – LogFormat/module
• Tomcat – log pattern
• IIS – IIS Filter
52
Sticky client
Sticky client
 In most web AP, if web servers 
keep data in sessions on local 
disk, L4 devices must “sticky”
the client in the same server, or 
the session may not be found.
 After 
deploying 
the 
WAF 
as 
reverse proxy, all source will 
from WAF, and make all clients 
sticky into the same servers, 
then make it overloaded.
53
Sticky client 
Sticky client -- solution
solution
 Set L4 Devices to sticky client by 
recognizing other data instead of 
source ip
• Ex: Cookie -
 PHPSESSID
 JSESSIONID
 ASPSSSID
 Set L4 to insert another cookie 
for sticky
54
Evasion
Evasion
55
Evasion
Evasion
 Simple Evasion Technique
 Path Obfuscation
 URL Encoding
 Unicode Encoding
 Null-Byte Attacks
56
Simple Evasion Technique
Simple Evasion Technique
 Using mixed characters
• In Microsoft Windows ,
test.asp == TEST.ASP
 Character escaping
• In some case ,
a = \a
 Using whitespace
• In SQL ,
delete from == delete     from
57
Path Obfuscation
Path Obfuscation
 Self-referencing directories
• /test.asp == /./test.asp
 Double slashes
• /test.asp == //test.asp
 Path traversal
• /etc/passwd == /etc/./passwd
• /etc/passwd ==/etc/xx/../passwd
 Windows folder separator
• ../../cmd.exe == ..\..\cmd.exe
58
URL Encoding
URL Encoding
 Path Encoding
• /test.asp == 
/%74%65%73%74%2E%61%73
%70
 Parameter Encoding
• ?file=/etc/passwd
== 
?file=%2F%65%74%63%2F%70
%61%73%73%77%64
59
Unicode Encoding
Unicode Encoding
 Overlong characters
0xc0 0x8A
== 0xe0 0x80 0x8A
== 0xf0 0x80 0x80 0x8A
== 0xf8 0x80 0x80 0x80 0x8A
 Unicode Encoding
/test.cgi?foo=../../bin/ls
== /test.cgi?foo=..%2F../bin/ls
== /test.cgi? foo=..%c0%af../bin/ls
60
Null
Null--Byte Attacks
Byte Attacks
 Null Byte (0x00) is used for 
string termination
 Some checks stop when found 
null byte
 Ex: to evade /etc/passwd check
• /test.asp?cmd=ls%00cat%20/etc/
passwd
61
Conclusion
Conclusion
62
Conclusion
Conclusion
 In general, Web Application 
Firewall is the most effective 
solution for defending web 
attacks, but the most important 
of all – you must have enough 
knowledge to set up it correctly !
 It’s complex to config it well, but 
we must do it !
63
 Open Source WAF solution is 
much cheaper than commercial 
devices, but you must control 
everything by yourself.
 Nothing could guarantee 100% 
perfect protection !
64
DEMO
DEMO
65
Q & A
Q & A