### 线程堆栈跟踪

#### 线程 34
1. **ntdll.dll + 0x9f884**
   - 寄存器: rax=9, rdx=64555ff620, rcx=8c8, rbx=64555ff5e0, rsi=7fffbd91a350, rdi=64555ff61c, rbp=64555ff620, rsp=64555ff538, r8=1ff0, r9=2f, r10=64554fe890, r11=1705f21cb00, r12=ffffffff, r13=7ff8320db8d0, r14=17062726940, r15=64555ff620, rip=7ff83373f884
   - 发现方式: 作为上下文中的指令指针给出
2. **KERNELBASE.dll + 0x1bc23**
   - 寄存器: rbp=64555ff620, rsp=64555ff540, rip=7ff82f76bc23
   - 发现方式: 栈扫描
3. **ntdll.dll + 0x59880**
   - 寄存器: rbp=64555ff620, rsp=64555ff550, rip=7ff8336f9880
   - 发现方式: 栈扫描
4. **keytar.node + 0x20350**
   - 寄存器: rbp=64555ff620, rsp=64555ff5a0, rip=7fffbd7c0350
   - 发现方式: 栈扫描
5. **ntdll.dll + 0x53e7a**
   - 寄存器: rbp=64555ff620, rsp=64555ff5b0, rip=7ff8336f3e7a
   - 发现方式: 栈扫描
6. **ntdll.dll + 0xd49a**
   - 寄存器: rbp=64555ff620, rsp=64555ff610, rip=7ff8336ad49a
   - 发现方式: 栈扫描
7. **keytar.node + 0x1fe30**
   - 寄存器: rsp=64555ff6a0, rip=7fffbd7bfe30
   - 发现方式: 栈扫描
8. **keytar.node + 0x1be7b**
   - 寄存器: rsp=64555ff730, rip=7fffbd7bbe7b
   - 发现方式: 栈扫描
9. **ntdll.dll + 0x59880**
   - 寄存器: rsp=64555ff790, rip=7ff8336f9880
   - 发现方式: 栈扫描
10. **keytar.node + 0x17a350**
    - 寄存器: rsp=64555ff7a8, rip=7fffbd91a350
    - 发现方式: 栈扫描
11. **keytar.node + 0x211c7**
    - 寄存器: rsp=64555ff7c0, rip=7fffbd7c11c7
    - 发现方式: 栈扫描
12. **keytar.node + 0x53b86**
    - 寄存器: rsp=64555ff7f0, rip=7fffbd7f3b86
    - 发现方式: 栈扫描
13. **thread_start ucrtbase.dll + 0x3a**
    - 寄存器: rsp=64555ff830, rip=7ff8306d1ffa
    - 发现方式: 栈扫描
14. **KERNEL32.DLL + 0x17974**
    - 寄存器: rsp=64555ff860, rip=7ff8320d7974
    - 发现方式: 调用帧信息
15. **ntdll.dll + 0x6a271**
    - 寄存器: rsp=64555ff890, rip=7ff83370a271
    - 发现方式: 栈扫描

#### 线程 35
1. **ntdll.dll + 0x9f7e4**
   - 寄存器: rax=4, rdx=0, rcx=920, rbx=0, rsi=64556ff988, rdi=920, rbp=64556ffbd8, rsp=64556ff958, r8=64556ff328, r9=1, r10=0, r11=8101010101010100, r12=64556ffa28, r13=1, r14=920, r15=7fffffffffffffff, rip=7ff83373f7e4
   - 发现方式: 作为上下文中的指令指针给出
2. **KERNELBASE.dll + 0x389b3**
   - 寄存器: rbp=64556ffbd8, rsp=64556ff960, rip=7ff82f7889b3
   - 发现方式: 栈扫描
3. **base::internal::ThreadGroupImpl::ScopedCommandsExecutor::~ScopedCommandsExecutor()**
   - App.exe [thread_group_impl.cc : 105 + 0x5]
   - 寄存器: rbp=64556ffbd8, rsp=64556ff970, rip=7ff6a0cb7eff
   - 发现方式: 栈扫描

#### 线程 36
1. **ntdll.dll + 0x9f7e4**
   - 寄存器: rax=4, rdx=0, rcx=928, rbx=0, rsi=64557ff618, rdi=928, rbp=64557ff868, rsp=64557ff5e8, r8=ffffffff, r9=170626e114a, r10=ce50, r11=64557ff040, r12=64557ff6b8, r13=1, r14=928, r15=7fffffffffffffff, rip=7ff83373f7e4
   - 发现方式: 作为上下文中的指令指针给出
2. **KERNELBASE.dll + 0x389b3**
   - 寄存器: rbp=64557ff868, rsp=64557ff5f0, rip=7ff82f7889b3
   - 发现方式: 栈扫描
3. **base::internal::ThreadGroupImpl::ScopedCommandsExecutor::~ScopedCommandsExecutor()**
   - App.exe [thread_group_impl.cc : 105 + 0x5]
   - 寄存器: rbp=64557ff868, rsp=64557ff600, rip=7ff6a0cb7eff
   - 发现方式: 栈扫描

#### 线程 37
1. **ntdll.dll + 0x9f7e4**
   - 寄存器: rax=4, rdx=0, rcx=914, rbx=0, rsi=64558ff7f8, rdi=914, rbp=64558ffa48, rsp=64558ff7c8, r8=170627ac050, r9=f913862569ad6408, r10=1, r11=21, r12=64558ff898, r13=1, r14=914, r15=7fffffffffffffff, rip=7ff83373f7e4
   - 发现方式: 作为上下文中的指令指针给出
2. **KERNELBASE.dll + 0x389b3**
   - 寄存器: rbp=64558ffa48, rsp=64558ff7d0, rip=7ff82f7889b3
   - 发现方式: 栈扫描
3. **base::internal::ThreadGroupImpl::ScopedCommandsExecutor::~ScopedCommandsExecutor()**
   - App.exe [thread_group_impl.cc : 105 + 0x5]
   - 寄存器: rbp=64558ffa48, rsp=64558ff7e0, rip=7ff6a0cb7eff
   - 发现方式: 栈扫描

#### 线程 38
1. **win32u.dll + 0x9904**
   - 寄存器: rax=1446, rdx=64559ff778, rcx=1, rbx=64559ff800, rsi=17062532c00, rdi=0, rbp=64559ff848, rsp=64559ff708, r8=7ff6a1eea310, r9=10, r10=b, r11=630ff1b2947, r12=17062532c00, r13=1, r14=64559ff830, r15=64559ff820, rip=7ff830879904
   - 发现方式: 作为上下文中的指令指针给出
2. **USER32.dll + 0x2003d**
   - 寄存器: rbp=64559ff848, rsp=64559ff710, rip=7ff83304003d
   - 发现方式: 栈扫描
3. **void base::internal::`anonymous namespace'::WorkerThreadDelegate::DidProcessTask(class base::internal::RegisteredTaskSource)**
   - App.exe [pooled_single_thread_task_runner_manager.cc : 132 + 0x15]
   - 寄存器: rbp=64559ff848, rsp=64559ff720, rip=7ff6a0cb6b44
   - 发现方式: 栈扫描
4. **base::internal::WorkerThread::RunWorker()**
   - App.exe [worker_thread.cc : 334 + 0x9]
   - 寄存器: rbp=64559ff848, rsp=64559ff7a0, rip=7ff6a175a5c9
   - 发现方式: 调用帧信息
5. **base::internal::WorkerThread::RunSharedCOMWorker()**
   - App.exe [worker_thread.cc : 261 + 0x5]
   - 寄存器: rbp=64559ff848, rsp=64559ff8c0, rip=7ff6a175a230
   - 发现方式: 调用帧信息
6. **static unsigned long base::`anonymous namespace'::ThreadFunc(void *)**
   - App.exe [platform_thread_win.cc : 110 + 0x8]
   - 寄存器: rbp=64559ff848, rsp=64559ff900, rip=7ff69f9113bd
   - 发现方式: 调用帧信息
7. **KERNEL32.DLL + 0x17974**
   - 寄存器: rbp=64559ff848, rsp=64559ff980, rip=7ff8320d7974
   - 发现方式: 调用帧信息
8. **ntdll.dll + 0x6a271**
   - 寄存器: rsp=64559ff9b0, rip=7ff83370a271
   - 发现方式: 栈扫描

#### 线程 39
1. **ntdll.dll + 0x9f7e4**
   - 寄存器: rax=4, rdx=0, rcx=93c, rbx=0, rsi=6455affad8, rdi=93c, rbp=6455affd28, rsp=6455affaa8, r8=30, r9=30, r10=1, r11=1, r12=6455affb78, r13=1, r14=93c, r15=7fffffffffffffff, rip=7ff83373f7e4
   - 发现方式: 作为上下文中的指令指针给出
2. **KERNELBASE.dll + 0x389b3**
   - 寄存器: rbp=6455affd28, rsp=6455affab0, rip=7ff82f7889b3
   - 发现方式: 栈扫描
3. **base::internal::ThreadGroupImpl::ScopedCommandsExecutor::~ScopedCommandsExecutor()**
   - App.exe [thread_group_impl.cc : 105 + 0x5]
   - 寄存器: rbp=6455affd28, rsp=6455affac0, rip=7ff6a0cb7eff
   - 发现方式: 栈扫描

#### 线程 40
1. **ntdll.dll + 0x9f7e4**
   - 寄存器: rax=4, rdx=0, rcx=944, rbx=0, rsi=6455bff6c8, rdi=944, rbp=0, rsp=6455bff698, r8=1000, r9=0, r10=6455bfe6c0, r11=17062a1f050, r12=6455bff768, r13=0, r14=944, r15=7fffffffffffffff, rip=7ff83373f7e4
   - 发现方式: 作为上下文中的指令指针给出
2. **KERNELBASE.dll + 0x389b3**
   - 寄存器: rsp=6455bff6a0, rip=7ff82f7889b3
   - 发现方式: 栈扫描
3. **base::WaitableEvent::TimedWait(base::TimeDelta const &)**
   - App.exe [waitable_event_win.cc : 107 + 0x2]
   - 寄存器: rsp=6455bff740, rip=7ff69f910ac0
   - 发现方式: 栈扫描
4. **base::internal::WorkerThread::Delegate::WaitForWork(base::WaitableEvent *)**
   - App.exe [worker_thread.cc : 36 + 0xd]
   - 寄存器: rsp=6455bff830, rip=7ff6a1759ada
   - 发现方式: 调用帧信息
5. **base::internal::WorkerThread::RunWorker()**
   - App.exe [worker_thread.cc : 311 + 0xd]
   - 寄存器: rsp=6455bff870, rip=7ff6a175a38b
   - 发现方式: 调用帧信息
6. **base::internal::WorkerThread::RunPooledWorker()**
   - App.exe [worker_thread.cc : 224 + 0x5]
   - 寄存器: rsp=6455bff990, rip=7ff6a175a170
   - 发现方式: 调用帧信息
7. **static unsigned long base::`anonymous namespace'::ThreadFunc(void *)**
   - App.exe [platform_thread_win.cc : 110 + 0x8]
   - 寄存器: rsp=6455bff9d0, rip=7ff69f9113bd
   - 发现方式: 调用帧信息
8. **KERNEL32.DLL + 0x17974**
   - 寄存器: rsp=6455bffa50, rip=7ff8320d7974
   - 发现方式: 调用帧信息
9. **ntdll.dll + 0x6a271**
   - 寄存器: rsp=6455bffa80, rip=7ff83370a271
   - 发现方式: 栈扫描

#### 线程 41
1. **ntdll.dll + 0x9f7e4**
   - 寄存器: rax=4, rdx=0, rcx=990, rbx=0, rsi=6455cffab8, rdi=990, rbp=6455cffd08, rsp=6455cffa88, r8=7ff69ff5ddab, r9=10, r10=ffffffff, r11=170626cc980, r12=6455cffb58, r13=0, r14=990, r15=7fffffffffffffff, rip=7ff83373f7e4
   - 发现方式: 作为上下文中的指令指针给出
2. **KERNELBASE.dll + 0x389b3**
   - 寄存器: rbp=6455cffd08, rsp=6455cffa90, rip=7ff82f7889b3
   - 发现方式: 栈扫描
3. **base::internal::ThreadGroupImpl::ScopedCommandsExecutor::~ScopedCommandsExecutor()**
   - App.exe [thread_group_impl.cc : 105 + 0x5]
   - 寄存器: rbp=6455cffd08, rsp=6455cffaa0, rip=7ff6a0cb7eff
   - 发现方式: 栈扫描

### 模块信息
- **App.exe**
  - 版本: 62.8.119.17949
  - 调试标识: 3AA6A57192854E7C4C4C44205044422E1
  - 地址范围: 0x7ff69d780000, 0x7ff6a447ffff
  - 是否为主模块: 是

- **UIAutomationCore.DLL**
  - 版本: 7.2.17763.1075
  - 调试标识: 38DD130E205A9D25D1C3677125D68F661
  - 地址范围: 0x7ff8066c0000, 0x7ff80691afff
  - 是否为主模块: 否

- **Windows.Storage.ApplicationData.dll**
  - 版本: 10.0.17763.1339
  - 调试标识: D2280D6E8B5588E4C2C6958CAFE678361
  - 地址范围: 0x7ff80a3b0000, 0x7ff80a407fff
  - 是否为主模块: 否

- **container.dll**
  - 版本: 10.0.17763.292
  - 调试标识: 3B777CEE2C11F0D72D1DEDDFE95D5C0E1
  - 地址范围: 0x7ff80c800000, 0x7ff80c839fff
  - 是否为主模块: 否

- **daxexec.dll**
  - 版本: 10.0.17763.1282
  - 调试标识: 675993CB70583B4844010E9412FC4D9A1
  - 地址范围: 0x7ff80c840000, 0x7ff80c8dbfff
  - 是否为主模块: 否

- **mscms.dll**
  - 版本: 10.0.17763.1075
  - 调试标识: 0D367B5E368A5954EDA6A4F57B1C9F681
  - 地址范围: 0x7ff80cc40000, 0x7ff80ccecfff
  - 是否为主模块: 否

- **wpnapps.dll**
  - 版本: 10.0.17763.1339
  - 调试标识: 66B475797CB43314CBD8DA76E997F3861
  - 地址范围: 0x7ff80dec0000, 0x7ff80e00dfff
  - 是否为主模块: 否

- **dataexchange.dll**
  - 版本: 10.0.17763.1217
  - 调试标识: 4445B5D54ABA171249147A90BE849DD91
  - 地址范围: 0x7ff814850000, 0x7ff8148a5fff
  - 是否为主模块: 否

- **OLEACC.dll**
  - 版本: 7.2.17763.1
  - 调试标识: 7523A927DCF2304064623B35A82619611
  - 地址范围: 0x7ff816660000, 0x7ff8166cbfff
  - 是否为主模块: 否

- **MSIMG32.dll**
  - 版本: 10.0.17763.1
  - 调试标识: AFA32F84CFAAE8E40E1F5E1A444D05001
  - 地址范围: 0x7ff8166d0000, 0x7ff8166d6fff
  - 是否为主模块: 否

- **Secur32.dll**
  - 版本: 10.0.17763.1
  - 调试标识: 691E94A6EDBF6109B6585D524D6AE7491
  - 地址范围: 0x7ff8174d0000, 0x7ff8174dbfff
  - 是否为主模块: 否

- **VCRUNTIME140.dll**
  - 版本: 14.12.25810.0
  - 调试标识: E93D4EDDDEB54C72857912DE41650BF41
  - 地址范围: 0x7ff81b330000, 0x7ff81b345fff
  - 是否为主模块: 否

- **FLTLIB.DLL**
  - 版本: 10.0.17763.1
  - 调试标识: 2581A4864A3B18A1C55D8DD1C5A9D71D1
  - 地址范围: 0x7ff81be90000, 0x7ff81be99fff
  - 是否为主模块: 否

- **COMCTL32.dll**
  - 版本: 6.10.17763.1339
  - 调试标识: C59D7E207DE8A737AFA3C7B7BD0860FA1
  - 地址范围: 0x7ff81bef0000, 0x7ff81c168fff
  - 是否为主模块: 否

- **ColorAdapterClient.dll**
  - 版本: 10.0.17763.1
  - 调试标识: 919D5B1C114BF5BF3B232FB9D1B6CB5B1
  - 地址范围: 0x7ff81c6b0000, 0x7ff81c6bffff
  - 是否为主模块: 否

- **VCRUNTIME140_1.dll**
  - 版本: 14.25.28508.3
  - 调试标识: 7930BDEB1D314DF88CD619BBAD3945C81
  - 地址范围: 0x7ff81c800000, 0x7ff81c80bfff
  - 是否为主模块: 否

- **urlmon.dll**
  - 版本: 11.0.17763.1217
  - 调试标识: 789A7B08D14C00BBCD3ADD4E23F9CE4A1
  - 地址范围: 0x7ff81d3c0000, 0x7ff81d596fff
  - 是否为主模块: 否

- **iertutil.dll**
  - 版本: 11.0.17763.1339