title:Decentralized Anonymous Credentials
author:Christina Garman and
Matthew Green and
Ian Miers
Decentralized Anonymous Credentials
The Johns Hopkins University Department of Computer Science, Baltimore, USA
Christina Garman, Matthew Green, Ian Miers
{cgarman, mgreen, imiers}@cs.jhu.edu
Abstract—Anonymous credentials provide a powerful tool
for making assertions about identity while maintaining privacy.
However, a limitation of today’s anonymous credential systems is
the need for a trusted credential issuer — which is both a single
point of failure and a target for compromise. Furthermore, the
need for such a trusted issuer can make it challenging to deploy
credential systems in practice, particularly in the ad hoc network
setting (e.g., anonymous peer-to-peer networks) where no single
party can be trusted with this responsibility.
In this work we propose a novel anonymous credential scheme
that eliminates the need for a trusted credential
issuer. Our
approach builds on recent results in the area of electronic cash
that, given a public append-only ledger, do not need a trusted
credential issuer. Furthermore, given a distributed public ledger, as
in, e.g., Bitcoin, our system requires no credential issuer at all and
hence is decentralized. Using such a public ledger and standard
cryptographic primitives, we propose and provide a proof of
security for a basic anonymous credential system that allows users
to make ﬂexible identity assertions with strong privacy guarantees
without relying on trusted parties. Finally, we discuss a number
of practical applications for our techniques, including resource
management in ad hoc networks and prevention of Sybil attacks.
We implement our scheme and measure its efﬁciency.
I.
INTRODUCTION
Traditionally, making statements about identity on the
Internet, whether actual assertions of identity (“I am Spartacus”)
or about one’s identity (“I am a gladiator”) involves centralized
providers who issue a credential attesting to that veriﬁcation.
These organizations, which include Certiﬁcate Authorities, DNS
maintainers, or login providers like Google and Facebook,
play a large role in securing internet infrastructure, email, and
ﬁnancial transactions. Our increasing reliance on these providers
raises concerns about privacy and trust.
Anonymous credentials, introduced by Chaum [22] and
developed in a line of subsequent works [4, 10, 14, 15, 17],
represent a powerful solution to this privacy concern: they
deprive even colluding credential issuers and veriﬁers of the
ability to identify and track their users. Although credentials
may involve direct assertions of identity, they may also be
used for a large range of useful assertions, such as “my TPM
says my computer is secure,” “I have a valid subscription for
Permission(cid:1) to(cid:1) freely(cid:1) reproduce(cid:1) all(cid:1) or(cid:1) part(cid:1) of(cid:1) this(cid:1) paper(cid:1) for(cid:1) noncommercial(cid:1)
purposes(cid:1)is(cid:1)granted(cid:1)provided(cid:1)that(cid:1)copies(cid:1)bear(cid:1)this(cid:1)notice(cid:1)and(cid:1)the(cid:1)full(cid:1)citation(cid:1)
on(cid:1)the(cid:1)ﬁrst(cid:1)page.(cid:1) Reproduction(cid:1)for(cid:1)commercial(cid:1)purposes(cid:1)is(cid:1)strictly(cid:1)prohibited(cid:1)
without(cid:1)the(cid:1)prior(cid:1)written(cid:1)consent(cid:1)of(cid:1)the(cid:1)Internet(cid:1)Society,(cid:1)the(cid:1)ﬁrst-named(cid:1)author(cid:1)
(for(cid:1) reproduction(cid:1) of(cid:1) an(cid:1) entire(cid:1) paper(cid:1) only),(cid:1) and(cid:1) the(cid:1) author’s(cid:1) employer(cid:1) if(cid:1) the(cid:1)
paper(cid:1)was(cid:1)prepared(cid:1)within(cid:1)the(cid:1)scope(cid:1)of(cid:1)employment.
NDSS(cid:1)’14,(cid:1)23-26(cid:1)February(cid:1)2014,(cid:1)San(cid:1)Diego,(cid:1)CA,(cid:1)USA
Copyright(cid:1)2014(cid:1)Internet(cid:1)Society,(cid:1)ISBN(cid:1)1-891562-35-5
http://dx.doi.org/(cid:18)(cid:17)(cid:15)(cid:18)(cid:21)(cid:24)(cid:19)(cid:19)(cid:16)(cid:79)(cid:69)(cid:84)(cid:84)(cid:15)(cid:19)(cid:17)(cid:18)(cid:21)(cid:15)(cid:19)(cid:20)(cid:19)(cid:22)(cid:20)
content,” “I have a certain reputation,” or “I am eligible to
vote.”
Indeed, anonymous credentials have already seen several
practical applications. The most widely deployed example
is the Direct Anonymous Attestation (DAA) portion of the
Trusted Platform Module speciﬁcation [2, 11]. DAA extends
the standard attestation capabilities of the Trusted Platform
Module to allow for anonymous attestations of TPM state and
to admit pseudonyms that are cryptographically bound to the
TPM’s internal identity certiﬁcate.
Unfortunately, current anonymous credential systems such
as DAA have a fundamental limitation: while identity certiﬁ-
cation itself can be performed by a variety of centralized and
decentralized processes, all existing anonymous credential sys-
tems employ blind signatures and thus require the appointment
of a central, trusted party to issue the credentials. This issuer
represents a single point of failure and its signing key an obvious
target for compromise, either of which can seriously damage
the reliability of the credential system. Moreover, compromise
or issuer malfeasance can be particularly difﬁcult to detect in
an anonymous credential system. As a result, in distributed
settings such as ad hoc or peer-to-peer networks, it may be
challenging to identify parties who can be trusted to play this
critical role or verify that the trust is well placed. The ability to
remove this trusted party or even verify their continued good
behavior is a distinct advantage.
These challenges raise two questions: 1) is it possible to
build practical anonymous credential systems where the process
of issuing credentials — if not the establishment of identity
itself — no longer depends on a trusted party? And 2) is it
possible to do so without the need for a central party?
Our contribution. In this paper we answer both questions in
the afﬁrmative, proposing a new technique for constructing
anonymous credentials which does not rely on the continued
integrity of signature keys. A consequence of this result is
that our anonymous credential system can be instantiated on-
demand and operated by an ad hoc group of mistrustful peers.
We further show how to extend our credential scheme to create
updatable (e.g., stateful) anonymous credentials in which users
obtain new credentials based on changing properties of their
identity.
As a basic ingredient, our protocols require the existence of
a public append-only ledger. When the ledger is implemented
using trusted hardware, or a central party who is audited by
the rest of the network, we obtain a positive answer only to
the ﬁrst question. To answer both questions in the afﬁrmative
we require that 1) this ledger be maintained in a distributed
manner that need not require a trusted party or parties and 2) the
identity claims we are issuing credentials on must be veriﬁable
by everyone participating in the system. We refer to this new
primitive as a decentralized anonymous credential system and
elaborate on its properties herein. We note that one promising
instantiation of a decentralized ledger is the “block chain”
construction used by Bitcoin [39] to implement a decentralized
digital currency. Not only can this technology be used to actually
construct a separate distributed ledger for identities, but using
existing techniques for embedding small amounts of data in
the block chain [23] we can leverage Bitcoin’s existing ledger
and protocol without modiﬁcation to transform any reliable
storage mechanism (whether a central server or a distributed
mechanism like a DHT) into an append-only ledger.
We show that our techniques have several immediate applica-
tions. They include:
• Decentralized Direct Anonymous Attestation. We show
how to decentralize the Direct Anonymous Attestation
protocol [11], allowing individual collections of nodes in
an ad hoc or distributed system to securely assert properties
of their system state. We provide an exemplary description
of our decentralized (dDAA) construction.
• Anonymous resource management in ad hoc networks.
Peer-to-peer networks are vulnerable to impersonation
attacks, where a single party simulates many different
peers in order to gain advantage against the network [30].
We show that our credentials may be useful in mitigating
these attacks. The basic approach is to construct an
anonymous subscription service [13, 26, 36] where parties
may establish unique or costly pseudonyms (for example
by submitting a valid TPM credential or paying a sum
of digital currency). They can then assert possession on
their identity under a speciﬁc set of restrictions, e.g., a
limit to the number of requests they can make in each
time period.
• Auditable credentials. Our techniques may also be used
to extend existing centralized credential systems by allow-
ing for public audit of issued credentials. This helps to
guard against compromised credential issuers and allows
the network to easily detect and revoke inappropriate
credential grants. For example, in Direct Anonymous
Attestation (DAA) one might want to prevent a malicious
DAA authority from covertly granting certiﬁcates to users
who do not have a TPM or whose TPM did not attest.
Is decentralized credential issuance valuable? Before proceed-
ing to describe our protocols, it is worth asking whether
decentralizing the issuance of anonymous credentials is a
useful goal at all. After all, identity credentialing is frequently
a centralized process. One might ask: what do we gain by
decentralizing the issuance of anonymous credentials?
A ﬁrst response to this question is that most anonymous
credential systems separate the process of issuing anonymous
credentials from the process of certifying the underlying identity
claims. Frequently, the claims being certiﬁed are publicly
veriﬁable. For example, each TPM ships with an Endorsement
Key (EK). Identity assertions using the EK could be publicly
veriﬁable merely by checking the certiﬁcate chain on the EK
2
certiﬁcate and engaging in a challenge/response protocol to
ensure the TPM can read nonces encrypted to the EK.1 The
problem is that transactions conducted using this certiﬁcate are
linked to the particular TPM device.
DAA solves this issue by having a central party issue
new anonymous credentials to a device. Organizations must
conﬁgure a local server to validate identity certiﬁcations and
issue the corresponding anonymous credential. All this server
does is transform a publicly veriﬁable identity assertion into an
anonymous one. This adds a cumbersome step to the anonymous
attestation system and also introduces a point of failure. Indeed,
this pattern of a trusted party transforming existing credentials
into an anonymous credential repeats in many settings. Allowing
for the distributed issue of anonymous credentials, even if they
can only certify centrally validated assertions, removes this
additional point of trust.
An obvious question is why, if the identity assertion is
publicly veriﬁable, do we need any transformation mechanism
at all? Why not present the information we used to convince the
authority to issue the credential to everyone? The issue is that
proving an identity statement may reveal far more information
than the statement itself. For example, a driver’s license can
prove to anyone that the bearer is over 21 but also reveals a
whole host of other information that the statement that “some
trusted mechanism says I am over 21” does not. Because
anonymous credentials add a layer of indirection between
certifying that an identity statement is true and actually showing
that statement, they ﬁx this issue and avoid linking any use of
the credential to the information used to issue it.
A more interesting question is whether identity certiﬁcation
itself can be decentralized. At least for certain claims, this
seems like a promising direction. For example, non–extended
validation SSL certiﬁcates are simply an assertion that the
bearer controls the speciﬁed domain.2 Similarly, DNS names
are generally an assertion that the owner was the ﬁrst to register
that name and wants it mapped to certain values (e.g., an IP
address). In both cases, since these claims are publicly veriﬁable
by simple criteria, a distributed set of entities can easily validate
these claims for themselves.
In fact, a now largely unused fork of Bitcoin, Namecoin [40],
shows that such modiﬁcations are readily achievable. Namecoin
uses Bitcoin’s append-only ledger mechanism to maintain such
ﬁrst-come ﬁrst-serve name-value mappings. Individuals register
a name and an owning public key. Provided they are the ﬁrst
to register that name, they can make arbitrary updates to the
associated value by signing them with the registered key. A DNS
system built atop this — DotBIT — is already in experimental
deployment. Namecoin can also be used to maintain mappings
from names to public keys. One could imagine more complex
semantics for allowing name registration — e.g., proofs of
work, proofs of payment, TPM attestations, publicly veriﬁable
proofs of storage and retrievability of ﬁles [49] — supporting
1Conceptually the TPM’s EK can sign a statement and forgo any interactive
issuing process. The TPM 1.1 spec places an arbitrary restriction against using
the EK RSA key for signing.
2In practice, CA’s usually verify that the bearer controls some administrator
email such as admin@domain or webmaster@domain.
more sophisticated functionality than simple DNS.
A. Overview of Our Construction
We now provide a brief overview for our construction,
which is inspired by the electronic cash proposals of Sander
and Ta-Shma [47] and Miers et al. [38].
Issuing and showing credentials. The ability to establish iden-
tities and bind them to a public key ensures that users can assert
their identity in a non-anonymous fashion, simply by issuing
signatures from the corresponding secret key. Unfortunately,
this does not immediately show us how to construct anonymous
credentials, since traditional anonymous credentials consist of
a signature computed by a credential issuer. Since no central
party exists to compute the credential signature, this approach
does not seem feasible without elaborate (and inefﬁcient) use
of threshold cryptography.3
We instead take a different approach. To issue a new
credential in our decentralized system, the user establishes
an identity and related attributes as described above. She then
attaches a vector commitment to her secret key sk U along
with the identity and attribute strings that are contained within
her identity assertion. Finally, she includes a non-interactive
proof that the credential is correctly constructed, i.e., that the
attributes in the commitment correspond to those revealed in
the identity assertion. The network will accept the identity
assertion if and only if the assertion is considered correct and
the attached proof is valid.
At a later point an individual can prove possession of such
a credential by proving the following two statements in zero-
knowledge:
1) She knows a commitment Ci in the set (C1, . . . , CN ) of
all credentials previously accepted to the block chain.
2) She knows the opening (randomness) for the commitment.
In addition to this proof, the user may simultaneously
prove additional statements about the identity and attributes
contained within the commitment Ci. The challenge in the
above construction is to efﬁciently prove statements (1) and (2),
i.e., without producing a proof that scales with N. Our solution,
which adapts techniques from distributed e-cash systems [38],
circumvents this problem by using an efﬁcient publicly-
veriﬁable accumulator [15] to gather the set of all previous
commitments together. Using this accumulator in combination
with an efﬁcient membership proof due to Camenisch and
Lysyanskaya [16], we are able to reduce the size of this proof
to O( ) for security parameter  , rather than the O(N ·  )
proofs that would result from a naive OR proof.
Of course, merely applying these techniques does not lead to
a practical credential system. A key contribution of this work is
to supply a concrete instantiation of the above idea under well-
studied assumptions and to prove that our construction provides
for consistency of credentials (ensuring multiple users cannot
3A possibility is to use ring signatures [46], which do not require a
single trusted signer. Unfortunately, these signatures grow with the number of
participating signers and require expensive communication to generate.
3