User: 如何使用Python编写一个自动化脚本，以监控你的服务器系统，并在发生故障时发送警报信息？
Assistant: 使用Python编写一个自动化脚本以监控服务器系统的步骤如下：

1. 确认需要监控的指标，例如CPU使用率、内存使用率、磁盘空间等等，选择监控工具，例如Nagios、Zabbix等。也可以使用Python自带的模块进行数据采集，例如psutil、os等。

2. 编写Python脚本，通过HTTP/SMTP等协议向管理员发送故障报告。

3. 将脚本设置为定时任务或者监控进程，在指定的时间间隔内定期运行，及时通知管理员发生的故障。

以下是示例代码，其中采用了psutil模块实现内存使用率和CPU使用率的获取：

import psutil
import smtplib
from email.mime.text import MIMEText

# 获取CPU使用率和内存使用率
cpu_percent = psutil.cpu_percent()
mem_percent = psutil.virtual_memory().percent

# 设置阈值
cpu_threshold = 80
mem_threshold = 80

# 判断是否超过阈值
if cpu_percent > cpu_threshold or mem_percent > mem_threshold:
    # 组合报告信息
    report = f"Alert: CPU usage is {cpu_percent}%, memory usage is {mem_percent}%."
    print(report)
    
    # 发送邮件
    sender = "sender@example.com"
    receiver = "receiver@example.com"
    password = "password"
    
    smtp_server = "smtp.example.com"
    smtp_port = 25
    
    message = MIMEText(report)
    message["Subject"] = "Server Alert"
    message["From"] = sender
    message["To"] = receiver
    
    try:
        smtp_obj = smtplib.SMTP(smtp_server, smtp_port)
        smtp_obj.login(sender, password)
        smtp_obj.sendmail(sender, receiver, message.as_string())
        print("Alert email sent!")
    except Exception as e:
        print(f"Failed to send alert email: {e}")