# Title: Making Intra-Domain Routing Robust to Changing and Uncertain Traffic Demands: Understanding Fundamental Tradeoffs

## Authors:
- David L. Applegate
- Edith Cohen

### Abstract
Intra-domain traffic engineering can significantly enhance the performance of large IP backbone networks. Two key components of traffic engineering are understanding traffic demands and configuring routing protocols. These components are interlinked, as an accurate view of traffic is believed to be crucial for optimizing routing configurations and, consequently, network utilization.

However, the importance of accurate traffic demand knowledge for optimal network utilization has not been quantitatively analyzed. Given that traffic demands are dynamic and difficult to predict, it is essential to explore whether a robust routing configuration can be achieved with limited traffic demand information. Using advanced algorithmic tools, we investigate these questions across a diverse set of ISP networks. Our findings indicate that it is possible to achieve robust routing that ensures near-optimal network utilization with only partial knowledge of traffic demands.

### Categories and Subject Descriptors
- C.2 [Communication Networks]: Network Protocols; Network Operations
- F.2 [Analysis of Algorithms]: Nonnumerical Algorithms and Problems

### General Terms
- Algorithms, Design, Management, Performance, Reliability

### Keywords
- Routing, TM estimation, Demand-oblivious routing

## 1. Introduction
Intra-domain traffic engineering has gained significant attention in recent years, as effective traffic engineering tools can greatly improve the management and performance of large operational IP networks. Two critical components of traffic engineering are understanding traffic flows and configuring (and designing) routing protocols. These components are closely related, as a good understanding of the traffic matrix (TM) and traffic flow dynamics can lead to better link capacity utilization through more appropriate traffic routing. Theoretically, if the TM is known exactly, an optimal routing can be obtained by solving the corresponding multi-commodity flow problem. With OSPF/IS-IS, the most common intra-domain routing protocol, link weights can be adjusted according to the TM to achieve near-optimal utilization.

Unfortunately, measuring and predicting traffic demands are challenging tasks. Flow measurements are rarely available on all links and egress/ingress points, and estimating origin-destination (OD) flow aggregates is even more difficult. Moreover, traffic demands change over time due to diurnal cycles and unpredictable events. Recent models and measurement tools have helped in extrapolating and estimating traffic demands, but the best one can hope for is an approximate picture, not necessarily a very current one.

Even if current demands are known, their dynamic nature poses a challenge. On one hand, it is desirable for the routing to be efficient for current traffic demands, requiring adjustments as demands shift. On the other hand, frequent changes to the routing can cause service disruptions due to path shifts and convergence times. For OSPF/IS-IS routing, this tradeoff was explored in [11], which developed a technique to limit changes to OSPF/IS-IS link weights when the TM changes.

Good system engineering calls for a design that is robust under a range of conditions, i.e., a routing that performs nearly optimally for a wide range of traffic demands. Our primary goal is to explore the feasibility of such a routing and to understand the sensitivity of routing quality to the extent of traffic demand knowledge. While both routing and TM estimation are well-studied, their interaction and underlying performance tradeoffs are not well understood.

Although it is widely believed that understanding traffic demands is necessary for good network utilization, this belief has not been carefully quantified. We address several key questions: How well can a routing designed with no or limited knowledge of the TM perform? How precise must traffic demand estimates be to ensure good utilization? What range of traffic demand changes is tolerable within certain performance guarantees? How does a routing designed for a specific TM perform when actual traffic deviates from the presumed values?

We also consider the performance of different routings in the event of link failures. When failures occur, the optimal routing strategy can be recomputed, but this may result in large shifts in flow patterns. We compare the performance of the existing routing on the "failed" network to the best possible routing on the failed network.

These questions concern fundamental limits and tradeoffs for managed IP networks, which will remain relevant as routing protocols evolve, particularly with more sophisticated tuning of OSPF/IS-IS weights and the deployment of flexible protocols like MPLS.

To answer these questions, we need a way to measure the performance of a given routing across a range of traffic demands and a way to design a routing that performs well on a wide range of TMs. Existing algorithms can obtain an optimal routing for a specific TM but cannot be extended to a wide range of TMs. We develop novel algorithms and software to produce an optimal routing for a range of possible TMs, balancing the load across the range and minimizing the maximum link utilization deviation from the best possible. Our software also enables us to compare different routings by computing the worst performance ratio on the range of TMs.

Our evaluation uses topologies from the Rocketfuel project and the test network studied in [15]. The data, performance metrics, and methodology are described in Sections 2 and 3, followed by evaluation results in Section 4. The LP models used are developed in Section 5, and some asymptotic analysis on simple network structures is presented in Section 6.

## 2. Data
### 2.1 Topologies
We use six ISP maps from the Rocketfuel dataset, which include deduced OSPF/IS-IS weights. We collapse these topologies to obtain approximate PoP-to-PoP (Point of Presence) topologies. We also include the 14-node and 25-link "Tier-1 PoP-to-PoP topology" evaluated in [15] (labeled as "N-14"). The studied topologies are listed in Table 1.

### 2.2 Capacities
The Rocketfuel and [15] topologies did not include link capacities. We used the derived OSPF/IS-IS weights to associate compatible capacities, assuming the Cisco-recommended default setting where link weights are inversely proportional to capacities.

### 2.3 Traffic Matrices (TMs)
Accurate TMs are not generally available. We use two families of synthetic TMs: Bimodal and Gravity TMs.

- **Bimodal TMs**: Only a fraction of OD pairs have very large flows, which dominate congestion points. This model randomly samples a fraction of OD pairs and assigns demands uniformly at random from a range.
- **Gravity TMs**: This model generates demands that correspond to the network, similar to the method suggested in [19]. We use a capacity-based heuristic to estimate incoming/outgoing flow from each PoP, then apply the gravity model to extrapolate a complete TM.

| AS | Routers | Orig-Links | Cities | Links | Reduced Cities | Reduced Links |
|----|---------|------------|-------|------|---------------|---------------|
| Telstra (Australia) | 1221 | 108 | 315 | 87 | 161 | 79 |
| Sprintlink (US) | 1239 | 141 | 306 | 1944 | 322 | 656 |
| Ebone (Europe) | 1755 | 322 | 656 | 294 | 748 | 57 |
| Tiscali (Europe) | 3257 | 322 | 656 | 294 | 748 | 57 |
| Exodus (Europe) | 3967 | 322 | 656 | 294 | 748 | 57 |
| Abovenet (US) | 6461 | 322 | 656 | 294 | 748 | 57 |
| N-14 (MTSBD02) | 14 | 322 | 656 | 294 | 748 | 57 |

### 3. Metrics and Methodology
### 3.1 Routing
A routing specifies how traffic for each OD pair is routed across the network. Typically, there is path diversity, with multiple paths for each OD pair, and each path routes a fraction of the traffic.

OSPF/IS-IS protocols specify a routing through a set of link weights. Traffic between each pair is always routed on the shortest path(s) with respect to these weights. Multiple shortest paths are typically split evenly. By controlling the weights, many possible routings can be achieved. The Cisco-recommended default setting is to use link weights inversely proportional to link capacities. With fine-tuned traffic engineering, it is possible to select weights that work well on the projected TM.

MPLS allows for more general and fine-tuned traffic engineering. Our optimization is with respect to routings of this more general form, which can be implemented via MPLS but not necessarily via OSPF/IS-IS.

For our purposes, the relevant characterization of each routing is the fraction of traffic for each OD pair that is routed along each link. The routing is specified by a set of values \( f_{ab}(i, j) \), which specifies the fraction of demand from \( a \) to \( b \) that is routed on the link \( (i, j) \). The contribution of this demand to the flow on a link \( (i, j) \) is \( d_{ab} f_{ab}(i, j) \).

### 3.2 Metrics
A common metric for the performance of a given routing with respect to a certain TM is the maximum link utilization. This is the maximum, over all links, of the total flow on the link divided by the link's capacity. Formally, the maximum link utilization of a routing \( f \) on TM \( D \) is:

\[
\max_{(i,j) \in \text{links}} \sum_{a,b} \frac{d_{ab} f_{ab}(i, j)}{\text{cap}_{ij}}
\]

An optimal routing for a certain TM \( D \) minimizes the maximum link utilization. Formally, the optimal utilization for a TM \( D \) is:

\[
\text{optU}(D) = \min_{f \mid f \text{ is a routing}} \max_{(i,j) \in \text{links}} \sum_{a,b} \frac{d_{ab} f_{ab}(i, j)}{\text{cap}_{ij}}
\]

The performance ratio of a given routing \( f \) on a given TM \( D \) measures how far \( f \) is from being optimal on \( D \). It is defined as the maximum link utilization of \( f \) on \( D \) divided by the minimum possible maximum link utilization on \( D \). Formally:

\[
\text{perf}(f, \{D\}) = \frac{\max_{(i,j) \in \text{links}} \sum_{a,b} \frac{d_{ab} f_{ab}(i, j)}{\text{cap}_{ij}}}{\text{optU}(D)}
\]

The performance ratio is always at least 1 and is exactly 1 if and only if the routing is optimal for \( D \).