title:Making intra-domain routing robust to changing and uncertain traffic
demands: understanding fundamental tradeoffs
author:David L. Applegate and
Edith Cohen
Making Intra-Domain Routing Robust to Changing and
Uncertain Trafﬁc Demands:
Understanding Fundamental Tradeoffs
David Applegate
AT&T Labs–Research
180 Park Avenue
Florham Park, NJ 07932, USA
PI:EMAIL
Edith Cohen
AT&T Labs–Research
180 Park Avenue
Florham Park, NJ 07932, USA
PI:EMAIL
ABSTRACT
Intra-domain traﬃc engineering can signiﬁcantly enhance
the performance of large IP backbone networks. Two im-
portant components of traﬃc engineering are understanding
the traﬃc demands and conﬁguring the routing protocols.
These two components are inter-linked, as it is widely be-
lieved that an accurate view of traﬃc is important for op-
timizing the conﬁguration of routing protocols and through
that, the utilization of the network.
This basic premise, however, never seems to have been
quantiﬁed – How important is accurate knowledge of traf-
ﬁc demands for obtaining good utilization of the network?
Since traﬃc demand values are dynamic and illusive, is it
possible to obtain a routing that is “robust” to variations
in demands? Armed with enhanced recent algorithmic tools
we explore these questions on a diverse collection of ISP net-
works. We arrive at a surprising conclusion:
it is possible
to obtain a robust routing that guarantees a nearly optimal
utilization with a fairly limited knowledge of the applicable
traﬃc demands.
Categories and Subject Descriptors
C.2 [Communication Networks]: C.2.2 Network Proto-
cols;C.2.3 Network Operations; F.2 [Analysis of Algo-
rithms]: F.2.2 Nonumerical Algorithms and Problems
General Terms
Algorithms,Design,Management,Performance,Reliability
Keywords
routing; TM estimation; demand-oblivious routing
1.
INTRODUCTION
Intra-domain traﬃc engineering has gained a lot of pop-
ularity in the recent years – good traﬃc engineering tools
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
SIGCOMM’03, August 25–29, 2003, Karlsruhe, Germany.
Copyright 2003 ACM 1-58113-735-4/03/0008 ...$5.00.
can signiﬁcantly contribute to the management and perfor-
mance of large operational IP networks [21, 2]. Two im-
portant components of traﬃc engineering are understanding
traﬃc ﬂows, and conﬁguring (and designing) routing proto-
cols. These two components are related – it is widely ac-
cepted that good understanding of the traﬃc matrix (TM)
and the dynamics of traﬃc ﬂows can lead to better utiliza-
tion of link capacities through more appropriate routing of
traﬃc [9]. Theoretically, if the TM is known exactly, then an
optimal routing for it can be obtained by solving the corre-
sponding multi-commodity ﬂow problem instance [16]; and
with OSPF/IS-IS, the most common intra-domain routing
protocol, link weights can be tuned according to the TM to
often yield near-optimal utilization [10].
Unfortunately, measuring and predicting traﬃc demands
are illusive problems [21, 2]. Flow measurements are rarely
available on all links and Egress/Ingress points of the net-
work, and it is even harder to estimate Origin-Destination
ﬂow aggregates. Moreover, demands change over time – on
a diurnal cycle and less predictably as a result of special
events or failures internal or external to the network. These
problems were recently tackled with models and measure-
ment tools [5, 9, 8, 15, 19] that allow one to extrapolate and
estimate traﬃc demands. It seems, however, that the most
one can hope for is some approximate picture of demands,
and not necessarily even a very current one.
Even if current demands are known, their dynamic nature
poses a challenge: On one hand, it is desirable for the routing
to be eﬃcient on the current traﬃc demands, thus, to be
adjusted as demands shift. On the other hand, one would
like to limit modiﬁcations to the routing, since changes can
potentially cause disruptions in service due to path shifts
and convergence time while the system reaches a consistent
state. For OSPF/IS-IS routing, this tradeoﬀ was explored
in [11], which developed a technique that limits the amount
of change to the OSPF/IS-IS link weights (which determine
the routings) when the TM changes.
Good system engineering thus calls for a design that it
robust under a range of conditions. That is, a routing that
can perform nearly optimally for a wide range of applicable
traﬃc demands. Our primary goal is to explore the viability
of such a routing, that is, to understand the sensitivity of
the quality of attainable routing to the extent within which
we know the traﬃc demands. While both these basic traf-
ﬁc engineering building blocks, routing and TM estimation,
are intensively studied, their interaction, and its underlying
performance tradeoﬀs, are not well understood.
Although it is widely believed that understanding traﬃc
demands is necessary for achieving good utilization of the
network [21, 2, 9, 15], this belief was never carefully quan-
tiﬁed: How well can a routing designed with no knowledge
(or only ball-park knowledge) of the TM perform? That is,
how precise an estimate of traﬃc demands is needed in order
to guarantee good utilization? When traﬃc demands shift,
what range of change is tolerable within some performance
guarantees? How would a routing designed to be optimal
for a speciﬁc TM perform when the actual traﬃc demands
deviate from the presumed ones?
Lastly, we consider the performance of diﬀerent routings
in the event of link failures. When failures occur, the op-
timal routing strategy can be recomputed from scratch, re-
sulting in optimal performance ratio but possibly in large
shifts in ﬂow patterns. (This tradeoﬀ between utilization
and traﬃc shifts, in the context of OSPF routing, is inves-
tigated in [11].) We thus compare the performance of the
existing routing on the “failed” network (where only traﬃc
ﬂows which traverse the failed link are shifted), to the best
possible routing on the failed network.
The questions we raise concern fundamental limits and
tradeoﬀs for managed IP networks – we expect these issues
to remain relevant as routing protocols evolve – in particular
with deployment of more sophisticated tuning of OSPF/IS-
IS weights [10, 11], and with the gradual deployment of more
ﬂexible protocols such as Multi Protocol Label Switching
(MPLS) protocol [1, 18] and its future successors.
The pursuit of answers to these questions requires a way to
measure how well a given routing performs on a range of traf-
ﬁc demands and a way to design a routing which performs
well on an appropriately wide range of traﬃc demands. But
while previously known algorithms can obtain an optimal
routing for a speciﬁc TM (or a small set of TMs), they can
not be extended to work on a wide range of TMs. At the
heart of our work are novel algorithms, based on which we
built software for producing an optimal routing for a range
of possible TMs. This routing optimally balances the load
across the range of TMs – it minimizes the extent to which
the maximum link utilization of any TM deviates from the
best possible by the optimal routing that is tailored for that
TM. Our software also enabled us to compare diﬀerent rout-
ings by computing the worst performance ratio obtained by
each routing on the range of applicable TMs.
Our evaluation utilizes maps of a diverse collection of
ISPs, made available by the Rocketfuel project [20, 14], and
the test network studied in [15]. The data is described in
Section 2 and our performance metrics and methodology
are described in Section 3 followed by evaluation results in
Section 4. The LP models we used are developed in Sec-
tion 5. Our evaluation is complemented with some asymp-
totic analysis on some simple network structures presented
in Section 6.
2. DATA
We describe the test topologies we used. Unfortunately,
ISPs regard their topologies as proprietary information, and
until recently, researchers had to settle for proprietary infor-
mation synthetic data; conclusions thus often suﬀered from
a lack of generality and veriﬁability. A recent breakthrough
was made by the Rocketfuel project [20], which developed a
new set of measurement techniques and released publicly-
available approximate router-level topologies of a diverse
and representative collection of ISPs. We used heuristics to
augment this data with link capacities and traﬃc matrices.
2.1 Topologies
We use the six ISP maps from the Rocketfuel dataset
which had accompanying (deduced) OSPF/IS-IS weights [14].
We then collapsed the topologies so that “nodes” correspond
to cities to obtain approximate PoP to PoP (Point of Pres-
ence) topologies. We also included the 14-node and 25-link
“Tier-1 PoP to PoP topology” evaluated in [15] (labeled as
“N-14” in the sequel). The studied topologies are listed in
Table 1.
2.2 Capacities
The topologies provided by Rocketfuel and in [15] did not
include the capacities of the links, which were needed for our
study. The Rocketfuel maps did include derived OSPF/IS-
IS weights of links [14], which were computed to match ob-
served routes. In the absence of any other information on ca-
pacities, we used the weights to associate hopefully compat-
ible capacities by “turning around” the Cisco-recommended
default setting of link weights according to capacities: The
Cisco default setting for OSPF weights is to set the weight
of each link to be inversely-proportional to its capacity [6].
2.3 Trafﬁc matrices (TMs)
Accurate traﬃc matrices are not generally available. Not
only are they regarded as proprietary by ISPs, but, as noted
in the introduction, they are hard to obtain with reasonable
accuracy. We thus used two families of synthetic traﬃc ma-
trices, which we refer to as Bimodal and Gravity TMs:
Bimodal TMs. It was observed that only a fraction of Origin-
Destination (OD) pairs has very large ﬂows [4]. This model
assumes that these ﬂows dominate the points of congestion.
The random bimodal distribution samples randomly a frac-
tion of OD pairs and then assigns a demand for the pair
uniformly at random from some range.1 Random bimodal
distributions (and other random distributions) were used
in [15]).
Gravity TMs. Since networks are designed with some ex-
pectation of traﬃc demands in mind, it is desirable to eval-
uate the performance of diﬀerent routings with respect to
such traﬃc demands. We used a Gravity model, similarly
to that suggested in [19], to generate demands that “cor-
respond” to the network. The work in [19] suggested a
way to extrapolate a complete TM from measurements of
incoming-outgoing ﬂow into each PoP from the backbone.
The extrapolation then assumed that the fraction of traﬃc
sourced from a PoP is sinked at other PoPs proportionally
to the total sinked ﬂow at these PoPs. According to [19] this
simple model is surprisingly accurate. Since we did not have
even these more restricted ﬂow values, we used a capacity-
based heuristic, which assumes that the incoming/outgoing
ﬂow from each PoP is proportional to combined capacity
of connecting links. We then applied the gravity model as
in [19] to extrapolate a complete TM.
1Distributions other than uniform or the particular param-
eter settings did not seem to make a qualitative diﬀerence
in the results.
AS
routers
orig-links
cities
links
reduced cities
reduced links
Telstra (Australia) 1221
Sprintlink (US) 1239
Ebone (Europe) 1755
Tiscali (Europe) 3257
Exodus (Europe) 3967
Abovenet (US) 6461
N-14 (MTSBD02)
108
315
87
161
79
141
306
1944
322
656
294
748
57
44
23
50
22
22
14
59
83
38
88
37
42
25
7
30
18
28
21
17
9
69
33
66
36
37
Table 1: Topologies from Rocketfuel (with AS number and name) and [15] (the N-14) network. The table
lists the number of routers and links, the number of cities and inter-city links which we refer to as PoPs.
The last two columns (reduced cities and links) list the number of remaining cities and links if 1-connected
components (“hanging” trees) are removed. These components do not change the relative quality of diﬀerent
routings (see Lemma 5.1), thus we were able to perform some computations faster on these reduced graphs.
3. METRICS AND METHODOLOGY
D (where dab is the demand from a to b) is
3.1 Routing
A routing speciﬁes how traﬃc of each Origin-Destination
(OD) pair is routed across the network. Typically there is
path diversity, that is, there are multiple paths for each OD
pair, and each path routes a fraction of the traﬃc.
Open Shortest Path First (OSPF) or Intermediate System-
Intermediate System (IS-IS) protocols specify a routing through
a set of link weights. The traﬃc between each pair is al-
ways routed on shortest path(s) between the origin and des-
tination (with respect to these weights). Typically, there
are multiple shortest paths; when this happens, each router
splits the outgoing traﬃc evenly on all applicable interfaces.
By controlling the weights, many possible routings are pos-
sible. The Cisco-recommended default setting is to use link
weights that are inversely proportional to the link capaci-
ties [6]. With more ﬁne-tuned traﬃc engineering it is typ-
ically possible to select weights that are expected to work
well on the projected TM [10]. The OSPF routing used in
our evaluation is the routing obtained by the OSPF/IS-IS
(estimated) link weights provided with our data. This rout-
ing should match reasonably closely the actual routing used
by these ISPs [14].
The MPLS protocol allows for a rich (general) speciﬁca-
tion of routings and more ﬁne tuned traﬃc engineering. Our
optimization is with respect to routings of this more general
form, that is, routing that can be implemented via MPLS
but not necessarily via OSPF/IS-IS.
For our purposes, the relevant characterization of each
routing is what fraction of traﬃc, for each OD pair, is routed
along each link. Thus, the routing is speciﬁed by a set of
values fab(i, j) that speciﬁes the fraction of demand from a
to b that is routed on the link (i, j). Note that the values
fab(i, j) for a given OD pair a → b, should specify a ﬂow of
value 1 from a to b. When the routing routes a demand dab
for the OD pair a → b, the contribution of this demand to
the ﬂow on a link (i, j) is dabfab(i, j).
Our optimization algorithm generates an optimal routing
with respect to a set of TMs. We next discuss our perfor-
mance metrics for the “goodness” of a routing.
3.2 Metrics
A common metric for the performance of a given routing
with respect to a certain TM is the maximum link utilization.
This is the maximum, over all links, of the total ﬂow on the
link divided by the capacity of the link (see e.g. [10, 11]).
Formally, the maximum link utilization of a routing f on TM
max
(i,j)∈links
X
a,b
dabfab(i, j)/capij ,
where capij is the capacity of the link (i, j).
An optimal routing for a certain TM D is a routing which
minimizes the maximum link utilization. Formally, the op-
timal utilization for a TM D is given by
optU(D) =
min
f|f is a routing
max
(i,j)∈links
a,b dabfab(i, j)
capij
.
The performance ratio of a given routing f on a given TM
D measures how far is f from being optimal on the TM D. It
is deﬁned as the maximum link utilization of f on D divided
by the minimum possible maximum link utilization on this
TM. Formally,
perf(f,{D}) =
max(i,j)∈links a,b dabfab(i, j)/capij
optU(D)
.
Note that the performance ratio is always at least 1; it is
exactly 1 if and only if the routing is optimal for D.
It is well known that the optimal routing for a given
TM can be computed by solving a corresponding multi-