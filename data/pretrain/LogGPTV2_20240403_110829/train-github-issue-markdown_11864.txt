My issue concerns `scipy.sparse.csgraph.shortest_path`, more specifically the
Floyd-Warshall solver, which does not deal with **explicit zeros** as the
other algorithms (they are removed here).
The following (slightly convoluted) example highlights the different handling
of explicit zeros.
#### Reproducing code example:
    import numpy as np
    import scipy.sparse.csgraph
    import sklearn.neighbors
    examples = [
        # no infinity
        # (the undirected graph has one connected component)
        np.array([0, 1, 2, 3, 3])[:, None],
        # infinity only for 'FW' solver
        # (the undirected graph has one connected component)
        np.array([0, 1, 2, 3, 3, 3])[:, None],
        # infinity for all solvers
        # (the undirected graph has two connected components)
        np.array([0, 1, 2, 4, 4, 4])[:, None],
    ]
    for X in examples:
        graph = sklearn.neighbors.kneighbors_graph(X, n_neighbors=2,
                                                   mode='distance')
        print(scipy.sparse.csgraph.connected_components(graph)[0], end='\t')
        for method in ['FW', 'D', 'BF', 'J']:
            paths = scipy.sparse.csgraph.shortest_path(graph, method=method,
                                                       directed=False)
            print(np.any(np.isinf(paths)), end='\t')
        print('')
#### Print message:
    1	False	False	False	False	
    1	True	False	False	False	
    2	True	True	True	True
#### Explanations:
Explicit zeros arise when you have duplicate points in your graph, thus having
a connection with a distance of zero, which is different from the implicit
zero (meaning no graph connection). When building a k-nearest neighbors graph,
if some points are duplicated **more** than the number of neighbors k, then
these points have **only** zeros in the set of explicit values, and using
explicit zeros as if they were implicit zeros effectively remove the points
from the connected graph. In particular, these points may still be connected
to the rest if they are chosen as neighbors of another point (with
`directed=False`).
#### Scipy/Numpy/Python version information:
1.2.1 1.16.4 sys.version_info(major=3, minor=7, micro=3, releaselevel='final',
serial=0)