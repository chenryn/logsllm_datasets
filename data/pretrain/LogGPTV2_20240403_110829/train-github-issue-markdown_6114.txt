### Summary
It would be beneficial to have enhanced string support in the Java API and a `tf.reduce_sum` function that supports string concatenation.

### Body
I have successfully integrated the custom operations from SyntaxNet into the TensorFlow master, enabling me to run SyntaxNet from my Java NLP pipeline. This is achieved by saving a `SavedModelBundle` and loading it in Java.

My project is based on a saved model of `parsey_mcparseface` from the following branch:
- [dmansfield/models: documents-from-tensor](https://github.com/dmansfield/models/tree/documents-from-tensor)

Additionally, I used a TensorFlow build with the custom operations from:
- [tensorflow/models: syntaxnet](https://github.com/tensorflow/models/tree/master/syntaxnet)

Integrating these operations as built-in was necessary because the Java API, through JNI, does not yet support user-loaded operations (to the best of my knowledge).

The code with the SyntaxNet operations integrated can be found here:
- [marhlder/syntaxnet-ops-hack](https://github.com/marhlder/syntaxnet-ops-hack)

Everything is running smoothly except for the output tensor from my saved model, which contains non-printable characters. I believe this issue is related to the offset table described in the `tensor_jni.cc` file. The same model runs without any issues when executed from Python.

Currently, the Java API seems to support only scalar string tensors. Using a scalar string tensor might resolve my problem, as that part of the code appears to handle the offset table correctly.

To address this, I would like to reduce the string tensor produced by my `parsey_mcparseface` model. However, I discovered that `tf.reduce_sum` does not yet support string concatenation. There should already be an operation for this, as discussed in [TensorFlow Issue #701](#701). User @mrry mentioned looking for a use case for this feature in the following Stack Overflow post:
- [Merge String Tensors in TensorFlow](https://stackoverflow.com/questions/34247374/merge-string-tensors-in-tensorflow)