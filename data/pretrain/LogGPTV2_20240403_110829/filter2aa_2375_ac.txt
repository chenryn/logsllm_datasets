Mouse packets are transmitted unencrypted, and are documented in Table 6.
5.4
Keyboard Input
Most keyboard packets are encrypted using 128-bit AES, with the exception of consumer control HID device class
keys (volume control, browser navigation, etc). The encrypted and unencrypted keystroke packets use di↵erent
payload formats as described below.
5.5
Dongle to Device Communication
When a dongle needs to send a command to a paired device, it does so by attaching a payload to the next ACK
that it transmits. This enables two way communication when the target device is active, but does not provide a
way to query an inactive device. ACK payloads are used to request device status, as well as during pairing and
other conﬁguration tasks.
5.6
Pairing
Host software enables pairing mode on the dongle over USB. Once pairing mode has been enabled, the dongle lis-
tens for new pairing requests on the ﬁxed pairing address BB:0A:DC:A5:75 for 30-60 seconds.
When a wireless mouse or keyboard is switched on, it ﬁrst attempts to reconnect with its paired dongle by trans-
mitting wake-up packets. If it cannot ﬁnd its paired dongle, it transmits a pairing request to the ﬁxed pairing ad-
dress to initiate the pairing process.
Firmware on Unifying dongles is not automatically updated, so the pairing process needs to be generic in order to
support new devices. This is achieved by having the device specify its model, capabilities, name, and serial num-
ber during pairing. An example pairing exchange is show below.
1
BB:0A:DC:A5:75
15:5F:01:84:5E:3A:A2:57:08:10:25:04:00:01:47:00:00:00:00:00:01:EC
Initial pairing request with product ID 10:25 (M510 mouse), transmitted from a mouse to a dongle at ad-
dress BB:0A:DC:A5:75. Packet format is described in ﬁgure 10.
2
BB:0A:DC:A5:75
15:1F:01:9D:65:CB:58:30:08:88:02:04:01:01:07:00:00:00:00:00:00:D7
Reply containing the new RF address assigned to the mouse in bytes 3-7 of the payload, transmitted from
a dongle to a mouse at address BB:0A:DC:A5:75. Packet format is described in ﬁgure 11.
3
9D:65:CB:58:30
00:5F:02:01:02:03:04:58:8A:51:EA:1E:40:00:00:01:00:00:00:00:00:19
Payload containing the serial number of the mouse and its USB HID capabilities, transmitted from a
mouse to a dongle at address 9D:65:CB:58:30. Packet format is described in ﬁgure 12.
11
4
9D:65:CB:58:30
00:1F:02:BE:7E:7F:D5:58:8A:51:EA:1E:40:00:00:01:00:00:00:00:00:D3
Response echoing back the serial number and USB HID capabilities of the mouse, transmitted from a don-
gle to a mouse at address 9D:65:CB:58:30. Packet format is described in ﬁgure 13.
5
9D:65:CB:58:30
00:5F:03:01:04:4D:35:31:30:00:00:00:00:00:00:00:00:00:00:00:00:B6
Payload containing the human readable device name as ASCII bytes, transmitted from a mouse to a don-
gle at address 9D:65:CB:58:30. Packet format is described in ﬁgure 14.
6
9D:65:CB:58:30
00:0F:06:02:03:7F:D5:58:8A:B0
Response echoing back bytes from the previous pairing packets, transmitted from a dongle to a mouse at
address 9D:65:CB:58:30. Packet format is described in ﬁgure 15.
7
9D:65:CB:58:30
00:0F:06:01:00:00:00:00:00:EA
Message indicating that pairing is complete, transmitted from a mouse to a dongle at address
9D:65:CB:58:30. Packet format is described in ﬁgure 16.
5.7
Vulnerabilities
5.7.1
Forced Pairing (BN-0001)
When a Logitech Unifying dongle is put into pairing mode, the dongle listens for pairing requests for a limited
time on address BB:0A:DC:A5:75. When a device attempts to pair with a dongle, it transmits a pairing request
to this address.
This prevents devices from pairing with a dongle when it is not in pairing mode, because their pairing requests
will only be accepted when the dongle is listening on the pairing address.
It is possible to force-pair a device when the dongle is not in pairing mode by transmitting the same pairing re-
quest to the address of an already paired mouse or keyboard. The dongle accepts the pairing request when it is
received on any address that the dongle is currently listening on.
The following exchange, shown as Enhanced Shockburst payloads, results in a new device being paired with a
dongle. The device will show up as an M510 mouse with a serial number of 12345678.
1
EA:E1:93:27:14
7F 5F 01 31 33 73 13 37 08 10 25 04 00 02 0C 00 00 00 00 00 71 40
Initial pairing request with product ID 10:25 (M510 mouse), transmitted from a malicious device to a don-
gle at address EA:E1:93:27:14. Packet format is described in ﬁgure 10.
2
EA:E1:93:27:14
7F 1F 01 EA E1 93 27 15 08 88 02 04 00 02 04 00 00 00 00 00 00 2B
Reply containing the new RF address assigned to the mouse in bytes 3-7 of the payload, transmitted from
a dongle to a malicious device at address EA:E1:93:27:14. Packet format is described in ﬁgure 11.
3
EA:E1:93:27:15
00 5F 02 00 00 00 00 12 34 56 78 04 00 00 00 01 00 00 00 00 00 86
Payload containing the serial number 12345678 and USB HID capabilities for a mouse (0400), transmitted
from a malicious device to a dongle at address EA:E1:93:27:15. Packet format is described in ﬁgure 12.
12
4
EA:E1:93:27:15
00 1F 02 0F 6B 4F 67 12 34 56 78 04 00 00 00 01 00 00 00 00 00 96
Response echoing back the serial number and USB HID capabilities of the malicious device, transmitted
from a dongle to a malicious device at address EA:E1:93:27:15. Packet format is described in ﬁgure 13.
5
EA:E1:93:27:15
00 5F 03 01 04 4D 35 31 30 00 00 00 00 00 00 00 00 00 00 00 00 B6
Payload containing the device name M510 as ASCII text, transmitted from a malicious device to a dongle
at address EA:E1:93:27:15. Packet format is described in ﬁgure 14.
6
EA:E1:93:27:15
00 0F 06 02 03 4F 67 12 34 EA
Response echoing back bytes from the previous pairing packets, transmitted from a dongle to a malicious
device at address EA:E1:93:27:15. Packet format is described in ﬁgure 15.
7
EA:E1:93:27:15
00:0F:06:01:00:00:00:00:00:EA
Message indicating that pairing is complete, transmitted from a malicious device to a dongle at address
EA:E1:93:27:15. Packet format is described in ﬁgure 16.
5.7.2
Unencrypted Keystroke Injection (BN-0002)
Logitech Unifying keyboards encrypt keyboard packets using 128-bit AES, but do not encrypt multimedia key
packets, or mouse packets (on keyboards with touchpads). The unencrypted multimedia key / mouse packets are
converted to HID++ packets by the dongle, and forwarded to the host.
When the dongle receives an unencrypted keyboard packet, it converts it to an HID++ packet and forwards it
to the host in the same manner. This makes it possible to inject keyboard packets without knowledge of the AES
key.
Transmitting the following two packets to the RF address of a paired keyboard will generate a keypress of the let-
ter ’a’.
1
EA:E1:93:27:21
00:C1:00:04:00:00:00:00:00:3B
Unencrypted keypress packet with the HID scan code for ’a’ speciﬁed (04), transmitted from a malicious
device to a dongle at address EA:E1:93:27:21. Packet format is described in ﬁgure 6.
2
EA:E1:93:27:21
00:C1:00:00:00:00:00:00:00:3F
Unencrypted keypress packet with no HID scan codes speciﬁed (key release), transmitted from a malicious
device to a dongle at address EA:E1:93:27:21. Packet format is described in ﬁgure 6.
The second octet, 0xC1, indicates that this is a keyboard packet, and the fourth octet contains the keyboard scan
code. In this example, the ﬁrst packet represents the depressing the ’a’ key, and the second packet represents re-
leasing it. The ﬁnal octet in each packet is the checksum.
5.7.3
Disguise Keyboard as Mouse (BN-0003)
When a mouse or keyboard is paired to a Logitech Unifying dongle, the new device provides the dongle with its
product ID, name, serial number, and a bitmask of the HID frame types that it can generate.
13
It is possible to pair a device that presents itself as a mouse to the host OS, but is capable of generating key-
board HID frames. This allows keystrokes to be injected into the host without the user seeing a paired keyboard.
The following exchange results in a new device being paired with a dongle. The device will show up as an M510
mouse with a serial number of 12345678, but will have the same HID capabilities as a K400r keyboard.
1
EA:E1:93:27:16
7F 5F 01 31 33 73 13 37 08 10 25 04 00 02 0C 00 00 00 00 00 71 40
Initial pairing request with product ID 10:25 (M510 mouse), transmitted from a malicious device to a don-
gle at address EA:E1:93:27:16. Packet format is described in ﬁgure 10.
2
EA:E1:93:27:16
7F 1F 01 EA E1 93 27 16 08 88 02 04 00 02 04 00 00 00 00 00 00 2A
Reply containing the new RF address assigned to the mouse in bytes 3-7 of the payload, transmitted from
a dongle to a malicious device at address EA:E1:93:27:16. Packet format is described in ﬁgure 11.
3
EA:E1:93:27:16
00 5F 02 00 00 00 00 12 34 56 78 1E 40 00 00 01 00 00 00 00 00 86
Payload containing the serial number 12345678 and USB HID capabilities for a K400r keyboard (1E40),
transmitted from a malicious device to a dongle at address EA:E1:93:27:16. Packet format is described in
ﬁgure 12.
4
EA:E1:93:27:16
00 1F 02 19 0B 12 49 12 34 56 78 1E 40 00 00 01 00 00 00 00 00 ED
Response echoing back the serial number and USB HID capabilities of the malicious device, transmitted
from a dongle to a malicious device at address EA:E1:93:27:16. Packet format is described in ﬁgure 13.
5
EA:E1:93:27:16
00 5F 03 01 04 4D 35 31 30 00 00 00 00 00 00 00 00 00 00 00 00 B6
Payload containing the device name M510 as ASCII text, transmitted from a malicious device to a dongle
at address EA:E1:93:27:16. Packet format is described in ﬁgure 14.
6
EA:E1:93:27:16
00 0F 06 02 03 08 97 12 34 01
Response echoing back bytes from the previous pairing packets, transmitted from a dongle to a malicious
device at address EA:E1:93:27:16. Packet format is described in ﬁgure 15.
7
EA:E1:93:27:16
00:0F:06:01:00:00:00:00:00:EA
Message indicating that pairing is complete, transmitted from a malicious device to a dongle at address
EA:E1:93:27:16. Packet format is described in ﬁgure 16.
5.7.4
Unencrypted Keystroke Injection Fix Bypass (BN-0011)
In order to address the reported vulnerabilities BN-0001, BN-0002, and BN-0003, Logitech released ﬁrmware
updates for both the nRF24L and TI-CC254X variants of the Unifying dongles. The updated ﬁrmware success-
fully ﬁxed the pairing vulnerabilities, but failed to ﬁx the unencrypted keystroke injection vulnerability in certain
cases.
On a computer with a clean install of Windows 10, a Unifying dongle with the updated ﬁrmware does not accept
unencrypted keystrokes. However, there are several situations in which keystroke injection continued to work.
14
1. When Logitech SetPoint is installed on Windows, keystroke injection starts working again.
2. The ﬁx failed to correct the keystroke injection vulnerability on Linux.
3. The ﬁx failed to correct the keystroke injection vulnerability on OSX.
5.7.5
Encrypted Keystroke Injection (BN-0013)
Logitech Unifying keyboards encrypt keyboard packets using 128-bit AES, but the implementation makes it pos-
sible to infer the ciphertext and inject malicious keystrokes.
An ’a’ keypress causes the following two RF packets to be transmitted from the keyboard to the dongle:
00 D3 EA 98 B7 30 EE 49 59 97 9C C2 AC DA 00 00 00 00 00 00 00 B9 // ’a’ key down
00 D3 5C C8 88 A3 F8 CC 9D 5F 9C C2 AC DB 00 00 00 00 00 00 00 39 // ’a’ key up
Octets 2-8 are the encrypted portion of the payload, and octets 9-13 appear to be a 4-byte AES counter preceded
by a checksum or parity byte.
The unencrypted octets 2-8 are as follows:
00 00 00 00 00 00 04 // ’a’ key down
00 00 00 00 00 00 00 // ’a’ key up
Due to the fact that a ’key up’ keyboard HID packet consists of all 0x00 bytes, one can infer that octets 2-8 of
the second packet represent the ciphertext for the counter/checksum in bytes 9-13.
Using this knowledge, it is possible to inject arbitrary encrypted keystrokes without knowledge of the encryption
key.
In this scenario, transmitting the following two RF packets will cause a ’b’ keystroke to be sent to the host com-
puter:
00 D3 5C C8 88 A3 F8 CC 98 5F 9C C2 AC DB 00 00 00 00 00 00 00 3E // ’b’ key down
00 D3 5C C8 88 A3 F8 CC 9D 5F 9C C2 AC DB 00 00 00 00 00 00 00 39 // ’b’ key up
Octet 8 of the ﬁrst packet, the last encrypted byte, has been XOR’d with 0x05, the HID scan code for ’b’. The
second packet is the unchanged ’key up’ packet previously observed.
15
5.8
Logitech Unifying Packet Formats
Logitech Wake-up Payload
Field
Length
Description
Device Index
1 byte
last octet of the device’s RF address
Frame Type
1 byte
51
Device Index
1 byte
last octet of the device’s RF address
??
1 byte
varies between devices, and the speciﬁc value does not appear to matter
??
1 byte
00
??
3 bytes
01:01:01
Unused
13 bytes
Checksum
1 byte
Table 4: Logitech Wake-up Payload
Logitech Wake-up Payload 2
Field
Length
Description
Device Index
1 byte
last octet of the device’s RF address
Frame Type
1 byte
50
??
1 byte
01
??
1 byte
4B
??
1 byte
01
Unused
4 bytes
Checksum
1 byte
Table 5: Logitech Wake-up Payload 2
16
Logitech Mouse Payload
Field
Length
Description
Unused
1 byte
Frame Type
1 bytes
0xC2
Button Mask
1 bytes
ﬂags indicating the state of each button
Unused
1 bytes
Movement
3 bytes
pair of 12-bit signed integers representing X and Y cursor velocity
Wheel Y
1 bytes
scroll wheel Y axis (up and down scrolling)
Wheel X
1 bytes
scroll wheel X axis (left and right clicking)
Checksum
1 byte
Table 6: Logitech Mouse Payload
Logitech Encrypted Keystroke Payload
Field
Length
Description
Unused
1 byte
Frame Type
1 bytes
0xD3
Keyboard HID Data
7 bytes
??
1 byte
AES counter
4 bytes
Unused
7 bytes
Checksum