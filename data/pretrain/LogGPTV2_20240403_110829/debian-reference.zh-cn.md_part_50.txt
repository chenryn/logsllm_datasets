### 文件系统设计规则及FAT文件系统
请参考第10.1.7节了解关于文件系统设计规则以及FAT文件系统的详细信息。

### 11.7 不同种类的数据转换工具
有许多其他工具可用于数据转换。通过在aptitude(8)中使用正则表达式“~Guse::converting”（参见第2.2.6节），可以找到以下软件包。此外，你可以使用如下命令从RPM格式的包中提取数据：
```bash
$ rpm2cpio file.src.rpm | cpio --extract
```

#### 数据转换工具列表
| 软件包               | 流行度   | 大小 (KB) | 关键词         | 说明                                             |
|----------------------|----------|-----------|----------------|--------------------------------------------------|
| gimp                 | V:38, I:255 | 19,303    | 图形(位图)     | GNU图形处理程序                                  |
| imagemagick          | I:319    | 73        | 图形(位图)     | 图形处理程序                                     |
| graphicsmagick       | V:1, I:12 | 5,564     | 图形(位图)     | 图像处理程序（从imagemagick派生）                |
| xsane                | V:12, I:145 | 2,339     | 图形(位图)     | 用于SANE的基于GTK的前端图形界面                  |
| netpbm               | V:29, I:328 | 8,261     | 图形(位图)     | 图形界面的转换工具                               |
| libheif-examples     | V:0, I:2  | 191       | heif→jpeg      | 将HEIF格式转换为JPEG, PNG, 或 Y4M格式            |
| icoutils             | V:7, I:52 | 221       | png↔ico        | MS Windows符号和光标转化为PNG格式或反之          |
| scribus              | V:1, I:17 | 30,242    | Scribus DTP编辑器 |                                                |
| libreoffice-draw     | V:71, I:427 | 10,405    | 图形（矢量）    | LibreOffice办公套件-绘画                         |
| inkscape             | V:15, I:118 | 99,852    | 图形（矢量）    | SVG（可扩展矢量图形）编辑器                      |
| dia                  | V:3, I:23 | 3,908     | 图形（矢量）    | 图表编辑器（Gtk）                                |
| xfig                 | V:1, I:11 | 7,825     | 图形（矢量）    | 交互式生成图像变得方便                           |
| pstoedit             | V:2, I:54 | 1,004     | ps/pdf→image   | PostScript和PDF文件到可编辑矢量图形的转换器      |
| libwmf-bin           | V:7, I:125 | 151       | Windows/image  | Windows元文件(矢量图形数据)转换工具              |
| fig2sxd              | V:0, I:0  | 151       | fig→sxd        | 转换XFig文件为OpenOffice.org绘画格式             |
| unpaper              | V:2, I:17 | 412       | image→image    | 后处理OCR扫描页面的工具                          |
| tesseract-ocr        | V:7, I:34 | 2,228     | image→text     | 基于惠普商业OCR引擎的免费OCR软件                 |
| tesseract-ocr-eng    | V:7, I:34 | 4,032     | image→text     | OCR引擎数据：用于英文文本的tesseract-ocr语言文件 |
| gocr                 | V:0, I:7  | 545       | image→text     | 免费OCR软件                                      |
| ocrad                | V:0, I:3  | 578       | image→text     | 免费OCR软件                                      |
| eog                  | V:64, I:275 | 7,773     | 图像(Exif)     | Eye of GNOME图像浏览程序                         |
| gthumb               | V:3, I:17 | 5,036     | 图像(Exif)     | 图像浏览器（GNOME）                              |
| geeqie               | V:4, I:15 | 2,256     | 图像(Exif)     | 基于GTK的图像浏览器                              |
| shotwell             | V:17, I:252 | 6,237     | 图像(Exif)     | 数码相片管理器（GNOME）                          |
| gtkam                | V:0, I:4  | 1,154     | 图像(Exif)     | 从数码照相机中检索多媒体数据的应用(GTK)          |
| gphoto2              | V:0, I:8  | 947       | 图像(Exif)     | 命令行方式的管理数码相机的工具                   |
| gwenview             | V:33, I:104 | 11,755    | 图像(Exif)     | 图片浏览器（KDE）                                 |
| kamera               | I:102    | 998       | 图像(Exif)     | KDE上的支持数码相机的应用软件                    |
| digikam              | V:2, I:10 | 293       | 图像(Exif)     | 用于KDE桌面环境的数字照片管理应用                |
| exiv2                | V:2, I:28 | 278       | 图像(Exif)     | EXIF/IPTC元数据处理工具                          |
| exiftran             | V:1, I:15 | 69        | 图像(Exif)     | 改变数码照相机的JPEG图像格式                     |
| jhead                | V:0, I:8  | 132       | 图像(Exif)     | 处理兼容JPEG文件(数码相机图片)的非图形部分       |
| exif                 | V:2, I:39 | 339       | 图像(Exif)     | 显示JPEG文件中的EXIF信息的命令行工具             |
| exiftags             | V:0, I:3  | 292       | 图像(Exif)     | 从数码相机的JPEG文件读取Exif标签的实用工具       |
| exifprobe            | V:0, I:3  | 499       | 图像(Exif)     | 从数码图片中读取元数据                           |
| dcraw                | V:1, I:12 | 583       | image(原始)    | 解码原始的数码相机图片                           |
| findimagedupes       | V:0, I:1  | 76        | image→fingerprint | 找到相似或重复的图像                             |
| ale                  | V:0, I:0  | 839       | image→image    | 合并图像来增加保真度或者用于创建马赛克           |
| imageindex           | V:0, I:1  | 145       | image(Exif)    | 从图形中创建静态HTML图库                         |
| outguess             | V:0, I:1  | 230       | jpeg, png      | 通用的Steganographic工具                        |
| librecad             | V:1, I:15 | 8,798     | DXF CAD数据编辑器 | KDE                                               |
| blender              | V:3, I:29 | 82,128    | blend, TIFF, VRML, ... | 用于动画的3D编辑器 |
| mm3d                 | V:0, I:0  | 3,881     | ms3d, obj, dxf, ... | 基于OpenGL的3D模型编辑器 |
| open-font-design-toolkit | I:0  | 9        | ttf, ps, ...   | 用于开放字型设计的元包                          |
| fontforge            | V:0, I:6  | 3,980     | ttf, ps, ...   | 用于PS，TrueType和OpenType的字体编辑器           |
| xgridfit             | V:0, I:0  | 806       | ttf            | 用于TrueType字体的网格拟合和小字还原技术的程序   |

### 12 编程
以下是一些Debian系统中的信息，帮助学习编程的人找出打包的源代码。下面是值得关注的软件包和与之对应的文档。

#### 安装手册页和相关文档
安装`manpages`和`manpages-dev`包之后，可以通过运行`man 名称`查看手册页中的参考信息。安装了GNU工具的相关文档包之后，可以通过运行`info 程序名称`查看参考文档。某些GFDL协议的文档与DFSG并不兼容，所以你可能需要在main仓库中包含contrib和non-free才能下载并安装它们。

#### 使用版本控制系统工具
请考虑使用版本控制系统工具。参见第10.5节。

#### 注意事项
- **警告**：不要用“test”作为可执行的测试文件的名字，因为shell中内建有“test”命令。
- **小心**：你可以把从源代码编译得到的程序直接放到“/usr/local”或“/opt”目录，这样可以避免与系统程序冲突。
- **提示**：“歌曲：99瓶啤酒”的代码示例可以给你提供实践各种语言的好范本。

### 12.1 Shell 脚本
Shell脚本是指包含有以下格式的可执行文本文件：
```bash
#!/bin/sh
... command lines
```
第一行指明了读取并执行这个文件的shell解释器。

#### 理解Shell脚本
读懂shell脚本的最好办法是先理解类UNIX系统是如何工作的。这里有一些shell编程的提示。看看“Shell错误”（https://www.greenend.org.uk/rjk/2001/04/shell.html），可以从错误中学习。

#### POSIX shell 兼容性
系统中的许多脚本都可以通过任意POSIX shell（参见表1.13）来执行。
- 默认的非交互POSIX shell `/usr/bin/sh` 是一个指向 `/usr/bin/dash` 的符号链接，并被许多系统程序使用。
- 默认的交互式POSIX shell 是 `/usr/bin/bash`。

避免编写具有bashisms（bash化）或者zshisms（zsh化）语法的shell脚本，确保脚本在所有POSIX shell之间具有可移植性。你可以使用 `checkbashisms(1)` 对其进行检查。

| 应该使用的POSIX语法 | 应该避免的bashism语法 |
|---------------------|-----------------------|
| `if [ "$foo" = "$bar" ] ; then …` | `if [ "$foo" == "$bar" ] ; then …` |
| `diff -u file.c.orig file.c` | `diff -u file.c{.orig,}` |
| `mkdir /foobar /foobaz` | `mkdir /foo{bar,baz}` |
| `funcname() { … }` | `function funcname() { … }` |
| 八进制格式：`\377` | 十六进制格式：`\xff` |

#### 使用echo命令
使用`echo`命令时需要注意以下几个方面，因为根据内置shell和外部命令的不同，它的实现也有差别。
- 避免使用除`-n`以外的任何命令行选项。
- 避免在字符串中使用转义序列，因为根据shell不同，计算后的结果也不一样。

**注意**：尽管`-n`选项并不是POSIX语法，但它已被广泛接受。

**提示**：如果你想要在输出字符串中嵌入转义序列，用`printf`命令替代`echo`命令。

#### Shell 参数
特殊的shell参数经常在shell脚本里面被用到。

| shell参数 | 值 |
|-----------|----|
| `$0`      | shell或shell脚本的名称 |
| `$1`      | 第一个shell参数 |
| `$9`      | 第9个shell参数 |
| `$#`      | 位置参数数量 |
| `"$*"`    | `"$1 $2 $3 $4 …"` |
| `"$@"`    | `"$1" "$2" "$3" "$4" …` |
| `$?`      | 最近一次命令的退出状态码 |
| `$$`      | 这个shell脚本的PID |
| `$!`      | 最近开始的后台任务PID |

#### 参数展开
以下是需要记忆的基本参数展开：

| 参数表达式形式 | 如果var变量已设置那么值为 | 如果var变量没有被设置那么值为 |
|----------------|---------------------------|------------------------------|
| `${var:-string}` | `"$var"` | `"string"` |
| `${var:+string}` | `"string"` | `null` |
| `${var:=string}` | `"$var"` | `"string"`（并运行`var=string`） |
| `${var:?string}` | `"$var"` | 在stderr中显示`"string"`（出错退出） |

| 参数替换形式 | 结果 |
|--------------|------|
| `${var%suffix}` | 删除位于var结尾的suffix最小匹配模式 |
| `${var%%suffix}` | 删除位于var结尾的suffix最大匹配模式 |
| `${var#prefix}` | 删除位于var开头的prefix最小匹配模式 |
| `${var##prefix}` | 删除位于var开头的prefix最大匹配模式 |