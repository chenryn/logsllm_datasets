/* +5 for pid = 14 chars */ 
*）&un，
 CLI_PATH, getpid(）);
len)
）Test Page
Accept-Encoding:
Accept-Language: en-us,en;g=0.5
Host:
GET
 Directory=/var/www
Connection:
Keep-Alive:
Accept-Charset:
Accept:
Port=80
，也就是把/var/www/index.html发给浏览器。假如该文件的内容如下（HTML文件没必
 keep-alive
300
L'0=b!*'4°0=b'8-440'1-6588-091
gzip,defiate
：例如 http://192.168.0.3，如果端口号不是80，例如是8000，则输入
5.练习：实现简单的Web服务器
第37章 socket编程
全国嵌入式人才培训基地
服务器并不是将这个文件发给浏览器，
加上HTTP协议头一起发给浏览器。但是，
，如果你的系统中已经安装了某种Web服务器
当浏览器向服务器请求文件时，
也是回车加换行。
 第一行是GET请求和协议版本，其余
，而是在服
服务器
2
如果
下一页
---
## Page 724
过去然后关闭连接：
部分略）：
浏览器收到index.html之后，发现其中有一个图片文件，就会再发一个GET请求（HTTP协议头其余
Alive的，我们不讨论这种情况）。
地处理各种情况,
较特殊：通常网络通信都是客户端主动发起连接，
是text/plain，图片则是image/jpg、image/png等。
HTTP头的第二行表示即将发送的文件的类型（称为MIME类型），这里是text/html，纯文本文件
是透明性（transparency）。
在开发过程中却是人与程序之间的对话，
不关心的，
服务器应答的HTTP头也是每行末尾以回车加换行结束，最后跟一个空行的回车加换行。
服务器应按如下格式应答浏览器：
是/var/www/mypic.jpg，如果用绝对路径表示应该是：
显示一行字和一幅图片，
然
人员，
HTTP头的第一行是协议版本和应答码，200表示成功，
个较大的网页中可能有很多图片，
后就发送文件的内容，
，"服务器即使对同一个客户端也需要提供并行服务的能力"。服务器收到这个请求应该把图片发
因此，
Content-Type: image/jpg
HTTP/1.1 200 OK 
GET /mypic.jpg HTTP/1.1
Test Page
Content-Type:
HTTP/1.1_200 OK 
(这里是mypic.jpg的二进制数据)
，主要是为了调试时给开发人员看的。虽然网络协议最终是程序与程序之间的对话，但是
，很多应用层网络协议，如HTTP、FTP、SMTP、POP3等都是基于文本的协议，为的
而HTTP协议规定服务器主动关闭连接（有些Web服务器可以配置成Keep-
Test OK
Test OK
 发送完毕之后主动关闭连接，
，图片的相对路径（相对当前的index.html文件的路径）是mypic.jpg，也就
 text/html
，浏览器可能在下载网页的同时就开很多线程下载图片，
一个设计透明的网络协议可以提供很多直观的信息给开发
，主动发起请求，主动关闭连接，
这样浏览器就知道文件发送完了。
 后面的消息OK其实可以随意写，
 服务器只是被动
............
这一点比
浏览器
因
是
---
## Page 725
这样浏览器收到的是：
个shell脚本/var/www/myscript.sh（注意一定要加可执行权限）：
么服务器并不把这个文件本身发给浏览器，而是把它的执行结果标准输出发给浏览器。例如一
如果浏览器请求的是一个可执行文件（不管是什么样的可执行文件，
5.2.执行CGI程序 请点评
总结一下服务器的处理步骤：
如果浏览器请求的文件在服务器上找不到，要应答一个404错误页面，例如：
这时浏览器就应该显示出完整的网页了。
4．如果该文件不可执行:
3．如果该文件可执行：
如果找到了浏览器请求的文件，用stat(2)检查它是否可执行
d．简单的HTTP协议头有这两行就足够了，再发一个空行表示结束
c．如果不是图片文件，这里我们简化处理，都当作Content-Type:text/html
b．如果是一个图片文件，根据图片的扩展名发送相应的Content-Type给客户端
a．发送HTTP/1.1 200 OK给客户端
d．关闭连接
c．在子进程中exec(3)该CGI程序
b．fork(2)，然后用dup2(2)重定向子进程的标准输出到客户端socket
a．发送HTTP/1.1 200 OK给客户端
Hello world!
Content-Type:
HTTP/1.1_200 OK 
echo
echo
echo
#!/bin/sh
request file not found
Content-Type:
"ipzom ottaH
"Content-Type: text/html"
text/html
，即使是shell脚本也一样）
725
，那
---
## Page 726
4. UNIX Domain Socket IPC 
上一页
e．读取文件的内容发送到客户端
f．关闭连接
全国嵌入式人才培训基地
起始页
附录A.字符编码
---
## Page 727
5.练习：实现简单的Web服务器
3.在Linux C编程中使用Unicode和UTF-8
2. Unicode和UTF-8
附录 A.字符编码 请点评
1.ASCI码
目
贝
全国嵌入式人才培训基地
全国嵌入式人才培训基地
附录A.字符编码
起始页
1. ASCII码
下一页
---
## Page 728
展ASCI码由IBM制定，在字符终端下被广
绝大多数计算机的-
存放ASCII码则只用到低7位，高位为0。以下是ASCI码表：
ASCII码的取值范围是0~127,
1.ASCII码 请点评
为了能表示更多字符，
页
图 A.2.IBM的扩展ASCI码表
DecHxOct
图A.1.ASCII码表
037
.
000
23
5
Char
一个字节是8位,
(unit separator)
(record separator)
(group separator)
(file separator)
[escape)
shil
(carriage return)
(NP form
(vertical
(bell)
(acknowledge)
99
star
star
(null)
subs
end of medium)
canc
end
品
品
de
品
dla
ackspace)
evic
LA
orizontal
nquiry)
cel)
1 of trans. block)
各厂商制定了很多种ASCI码的扩展规范。注意，
ice
ce
ce
t
control
control
of heading!
control
 feed, new page)
可以用7个bit表示。C语言中char型变量的大小规定为一字节，如果
 acknowledge)
escape)
text)
tab}
，取值范围是0~255，
new
全国嵌入式人才培训基地
但其实它们并不属于ASCI码标准。
line
附录 A.字符编码
广泛采用，其中包含了很多表格边线字符用来画界面。
1. ASCI码
9 9 99665966251666696662166869368
Dec Hx Oct
23
222 3 45 6 2 2 2 242 22 0 2   2 3 45 6 73
2
077
076
071
，而ASCI码并没有规定编号为128~255的字
VIA"
+
Chr
Dec
XH
100
Oct Chr| Dec Hx Oct Chr
17 12 3 4 35 36
例如以下这种扩
二
二
66
孔22282686元282亿2999 99996 99 9 999 29 198
5
140
一
DEL
αhdeαhiilmnoαεtuxzl
贝
---
## Page 729
编号为128~159的是一些
最
常用的非英文字母，
图形界面中最广泛使用的扩展ASCII码是ISO-8859-1,
页
图 A.3.ISO-8859-1
T
T
T
18 1232  3013  2  13 4  13 16  13
2
9
9
15
9
8
9
5
2
po
P
:
9
出
T
T
T
T
T
T
T
T
T
T
T
T
T
89
~
1813910
8
6
1
8
6
5
3
6
8
一些控制字符，
但毕竟只有128个字符，
?
+
口：
O:1
O:
出亚
所
207
2
20
2
20
忆
201
197
T
T
T
00
9
6
6
6
6
13
112
5
3
2
6
5
3
2
A
C
在上表中没有列出。
7
7
Z
Z
Z
Z
Z
Z
Z
211
Z
7
7
2
6
3
2
6
8
88
8
88
8
18
8
5
0
5
PB
×üüüY
OOO:O:ON
100 101
某些语言中的某些字母没有包含。如下表所示。
239
237
2
231
2
2
Z
7
一级
8
C
6
5
2
6
]
6
：
éé
é