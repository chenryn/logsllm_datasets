of authentication between two agents A and B: (i) aliveness, which
only ensures that B has been running the protocol previously, but
not necessarily with A; (ii) weak agreement, which ensures that B
has previously been running the protocol with A, but not necessarily
with the same data; (iii) non-injective agreement, which ensures
that B has been running the protocol with A and both agree on the
data; and (iv) injective agreement, which additionally ensures that
for each run of the protocol of an agent there is a unique matching
run of the other agent, and prevents replay attacks.
Note that the 5G specification considers some authentication
properties to be implicit. This means that the guarantee is provided
only after an additional key confirmation roundtrip (with respect
to KSEAF) between the subscribers and the SN. We discuss the
resulting problems and critique this design choice in Section 5.2.2.
Authentication between subscribers and HNs. First, the subscribers
must have the assurance that authentication can only be successful
with SNs authorized by their HNs; see [TS 33.501, Sec. 6.1.1.3] and:
[TS 33.501, Sec. 5.1.2] Serving network authorization by the
home network: Assurance [that the subscriber] is connected to a
6
serving network that is authorized by the home network. [...] This
authorization is ‘implicit’ in the sense that it is implied by a successful
authentication and key agreement run.
Formally, a subscriber must obtain non-injective agreement on SNname
with its HN after key confirmation.
In 5G, the trust assumptions are different than in previous stan-
dards, like 3G or 4G. Most notably, the level of trust the system
needs to put into the SNs has been reduced. One important property
provided by 5G is that an SN can no longer fake authentication
requests with the HNs for subscribers not attached to one of its base
stations [TS 33.501, Sec. 6.1.4.1]. Formally, the HNs obtain the alive-
ness of its subscribers at that SN, which is non-injective agreement
on SNname from the HNs’ point of view with the subscribers.
Authentication between subscribers and SNs. As expected, the SNs
shall be able to authenticate the subscribers:
[TS 33.501, Sec. 5.1.2] Subscription authentication: The serv-
ing network shall authenticate the Subscription Permanent Identifier
(SUPI) in the process of authentication and key agreement between
UE and network.
Formally, the SNs must obtain non-injective agreement on SUPI with
the subscribers. As SUPI is the subscriber’s identifier this is actually
just weak agreement for the SNs with the subscribers. Moreover,
since SUPI also contains idHN, an agreement on SUPI entails an
agreement on idHN.
Conversely, the subscribers shall be able to authenticate the SNs:
[TS 33.501, Sec. 5.1.2] Serving network authentication: The
UE shall authenticate the serving network identifier through implicit
key authentication.
Since SNname is the SN’s identifier, the subscribers must obtain
weak agreement with the SNs after key confirmation.
Authentication between SNs and HNs. The SNs shall be able to
authenticate subscribers that are authorized by their corresponding
HN:
[TS 33.501, Sec. 5.1.2] UE authorization: The serving network
shall authorize the UE through the subscription profile obtained from
the home network. UE authorization is based on the authenticated
SUPI.
The SNs must obtain non-injective agreement on SUPI with the HNs.
3.2.2 Confidentiality Properties. While it is not clearly specified,
obviously 5G-AKA should ensure the secrecy of KSEAF, K, and skHN
(see similar goals in 3G [TS 133.102, Sec. 5.1.3]).
5G-AKA should also ensure that knowledge of the session key
KSEAF established in one session is insufficient to deduce another
session key K′
SEAF established in either a previous session or a later
session [TS 33.501, Sec. 3]. Formally, the key KSEAF established in
a given session remains confidential even when the attacker learns
the KSEAF keys established in all other sessions. Note that this is
different from forward secrecy and post-compromise secrecy [15],
A Formal Analysis of 5G Authentication
D. Basin, J. Dreier, L. Hirschi, S. Radomirović, R. Sasse and V. Stettler
which fail to hold as we shall see in Section 5.1. Forward and post-
compromise secrecy require session key secrecy even when long-
term key material is compromised. 5G-AKA does not meet these
requirements as knowledge of the key K allows an attacker to derive
all past and future keys.
Finally, the same key KSEAF should never be established twice
[TS 133.102, Sec. 6.2.3]. This will be analyzed as part of Injective
agreement properties on the established key KSEAF for different pairs
of parties.
3.2.3 Privacy Properties. We first emphasize the importance given
to privacy in 5G documentation:
[TR 33.899, Sec. 4.1,4.2] Subscription privacy deals with various
aspects related to the protection of subscribers’ personal information,
e.g., identifiers, location, data, etc. [...] The security mechanisms
defined in NextGen shall be able to be configured to protect
subscriber’s privacy.
[TR 33.899, Sec. 5.7.1] The subscription privacy is very important
area for Next Generation system as can be seen by the growing
attention towards it, both inside and outside the 3GPP world. [...]
This important role given to privacy can be explained by nu-
merous, critical attacks that have breached privacy (e.g., with IMSI-
catchers [35, 36]) in previous generations; see the survey [32]. We
also recall that privacy was already a concern in 3G:
[TS 133.102, Sec. 5.1.1] (3G) The following security features re-
lated to user identity confidentiality are provided:
• user identity confidentiality: the property that the permanent
user identity (IMSI) of a user to whom a services is delivered cannot
be eavesdropped on the radio access link;
• user location confidentiality: the property that the presence or
the arrival of a user in a certain area cannot be determined by
eavesdropping on the radio access link;
• user untraceability: the property that an intruder cannot deduce
whether different services are delivered to the same user by eaves-
dropping on the radio access link.
Thus, 3G already had security requirements for user identity
confidentiality, anonymity, and untraceability. However, these prop-
erties are required by the standard only against a passive attacker,
i.e., one who only eavesdrops on the radio link. We criticize this
restriction in Section 5.2.3. We now list more precise requirements
on privacy in 5G.
In 5G, the SUPI is considered sensitive and must remain secret
since it uniquely identifies users [TS 33.501, Sec. 5.2.5,6.12]. Indeed,
an attacker who obtains this value can identify a subscriber, leading
to classical user location attacks (see [TS 133.102, Sec. 5.1.1] above),
much like passive IMSI-catcher attacks. Formally, the SUPI shall
remain secret in the presence of a passive attacker.
Similarly, the SQN must remain secret [TS 33.102, Sec. 6.2.3,
C.3.2]. An additional reason that is not explicitly stated is that
the SQN leaks the number of successful authentications the corre-
sponding USIM has performed since it was manufactured, which is
strongly correlated to its age and activity. This is even more critical
when the attacker learns the SQN at different times, as this allows
7
activity estimation for that time-period. Formally, the SQN shall
remain secret in the presence of a passive attacker.
Preventing the attacker from learning identifying data (i.e., SUPI,
SQN) is insufficient protection against privacy attacks such as
traceability attacks (we show an example in Section 5.2.3). While
no formal and explicit statement is made on the necessity of en-
suring untraceability for 5G, several claims in TR and TS docu-
ments (see Appendix D.2.3) and the fact that it was required for 3G
([TS 133.102, Sec. 5.1.1], see above), suggest that this property is
relevant for 5G as well. Therefore, formally, 5G authentication meth-
ods should provide untraceability of the subscribers in the presence
of a passive attacker.
3.3 Security Goals are Underspecified
We now discuss the aforementioned standardized security goals
and critique the lack of precision in the standard. We show that
the requirements specified in the standard are not sufficient to
provide the expected security guarantees in the context of mobile
communication telephony use cases. This is completely indepen-
dent of whether or not the proposed protocols actually fulfill these
properties (which we examine in Section 5).
First, given that the protocol is an Authenticated Key Exchange
protocol, we expect at least mutual authentication requirements
and agreement properties on the established key. It is thus surpris-
ing that the standard does not require any agreement on KSEAF.
The different pairs of roles, especially subscribers and SNs should
at least obtain non-injective agreement on the shared key KSEAF.
Moreover, KSEAF should be different for each session. This is a criti-
cal requirement, especially for typical use cases for these protocols.
Indeed, if this property is not provided, an attacker could make UEs
and SNs establish a secure channel based on a key that has been
previously used, and could therefore replay user data. The crucial
missing requirements are injective agreements on KSEAF between
pairs of parties, in particular between the SNs and subscribers.
The standard specifies authentication properties as weak autho-
rization properties that can be formalized as non-injective agree-
ment on the roles’ identifiers, or simply weak agreement prop-
erties (see Section 3.2.1). We discuss the standard’s restriction to
“implicit authentication” in Section 5.2.2. As explained earlier, 5G
requires HNs to have the assurance that UEs are attached to SNs
[TS 33.501, Sec. 6.1.4.1] currently. However, a non-injective agree-
ment on SNname from an HN towards a subscriber is too weak
since it suffices that the subscriber has attached to the correspond-
ing SN in some session in the past to fulfill the property. It is crucial
for the HNs to obtain assurance that the subscriber is attached to
the SN during the present session. The derivation of KSEAF includes
SNname for the binding to SN. This derivation also includes a nonce
R, from which we obtain the desired assurance as a corollary of
injective agreement on KSEAF from the HNs towards the subscribers,
which we consider instead.
Similarly, the subscribers should have the assurance that the SNs
with which they establish secure channels are known and trusted
by their HNs at the time of the authentication, not only in some past
session. Therefore, they should obtain injective agreement on KSEAF
(which is bound to SNname) with the HNs. While less critical, other
A Formal Analysis of 5G Authentication
D. Basin, J. Dreier, L. Hirschi, S. Radomirović, R. Sasse and V. Stettler
pairs of roles should also have stronger assurance. We describe how
the standard can be improved in this regard in Section 5.3.
4 FORMAL MODELS
In this section, we give a basic introduction to the symbolic model of
cryptographic protocols and the tool Tamarin that automates rea-
soning in this model (Section 4.1). Afterwards, we give an overview
on how security properties can be modeled using Tamarin (Sec-
tion 4.2). Next, after describing our modeling choices (Section 4.3),
we describe the challenges associated with modeling a large, com-
plex protocol like 5G AKA and how we overcame them (Section 4.4).
4.1 The Tamarin Prover
To analyze 5G AKA, we used the Tamarin prover [33]. Tamarin is
a state-of-the-art protocol verification tool for the symbolic model,
which supports stateful protocols, a high level of automation, and
equivalence properties [9], which are necessary to model privacy
properties such as unlinkability. It has previously been applied
to real-world protocols with complex state machines, numerous
messages, and complex security properties such as TLS 1.3 [17].
Moreover, it was recently extended with support for XOR [21], a
key ingredient for faithfully analyzing 5G AKA. We chose Tamarin
as it is currently the only tool that combines all these features,
which are essential for a detailed analysis of 5G AKA.
In the symbolic model and a fortiori in Tamarin, messages are
described as terms. For example, enc(m, k) represents the message
m encrypted using the key k. The algebraic properties of the crypto-
graphic functions are then specified using equations over terms. For
example the equation dec(enc(m, k), k) = m specifies the expected
semantics for symmetric encryption: the decryption using the en-
cryption key yields the plaintext. As is common in the symbolic
model, cryptographic messages do not satisfy other properties than
those intended algebraic properties, yielding the so-called black
box cryptography assumption (e.g., one cannot exploit potential
weaknesses in cryptographic primitives).
The protocol itself is described using multi-set rewrite rules.
These rules manipulate multisets of facts, which model the current
state of the system with terms as arguments.
Example 4.1. The following rules describe a simple protocol that
sends an encrypted message. The first rule creates a new long-term
shared key k (the fact !Ltk is persistent: it can be used as a premise
multiple times). The second rule describes the agent A who sends a
fresh message m together with its MAC with the shared key k to B.
Finally, the third rule describes B who is expecting a message and
a corresponding MAC with k as input. Note that the third rule can
only be triggered if the input matches the premise, i.e., if the input
message is correctly MACed with k.
Create_Ltk : [Fr(k)]−−[]→[!Ltk(k)],
Send_A : [!Ltk(k), Fr(m)]−−[ Sent(m) ]→[Out(⟨m, mac(m, k)⟩)],
Receive_B : [!Ltk(k), In(⟨m, mac(m, k)⟩)]−−[ Received(x) ]→[] □
These rules yield a labeled transition system describing the pos-
sible protocol executions (see [1, 33] for details on syntax and se-
mantics). Tamarin combines the protocol semantics with a Dolev-
Yao [20] style attacker. This attacker controls the entire network and
can thereby intercept, delete, modify, delay, inject, and build new
messages. However, the attacker is limited by the cryptography:
he cannot forge signatures or decrypt messages without knowing
the key (black box cryptography assumption). He can nevertheless
apply any function (e.g., hashing, XOR, encryption, pairing, ...) to
messages he knows to compute new messages.
4.2 Formalizing Security Goals in Tamarin
In Tamarin, security properties are specified in two different ways.
First, trace properties, such as secrecy or variants of authentication,
are specified using formulas in a first-order logic with timepoints.
Example 4.2. Consider the multiset rewrite rules given in Exam-
ple 4.1. The following property specifies a form of non-injective
agreement on the message, i.e., that any message received by B was
previously sent by A:
∀i, m.Received(m)@i ⇒ (∃j.Sent(m)@j ∧ j ⋖ i).
Since the 5G AKA protocol features multiple roles and multiple
instantiations thereof, agreement properties additionally require
that the views of the two partners (who is playing which role, and
what is the identity of the partner) actually match; see Appendix C.
For each specified property, Tamarin checks that the property
holds for all possible protocol executions, and all possible attacker
behaviors. To achieve this, Tamarin explores all possible executions
in a backward manner, searching for reachable attack states, which
are counterexamples to the security properties.
Equivalence properties, such as unlinkability, are expressed by
requiring that two instances of the protocol cannot be distinguished
by the attacker. Such properties are specified using diff -terms
(which take two arguments), essentially defining two different in-
stances of the protocol that only differ in some terms. Tamarin then
checks observational equivalence (see [9]), i.e., it compares the two
resulting systems and checks that the attacker cannot distinguish
them for any protocol execution and any adversarial behaviors.
In fully automatic mode, Tamarin either returns a proof that
the property holds, or a counterexample/attack if the property is
violated, or it may not terminate as the underlying problem is un-
decidable. Tamarin can also be used in interactive mode, where
the user can guide the proof search. Moreover the user can supply
heuristics called oracles to guide the proof search in a sound way.
We heavily rely on heuristics in our analyses as they allow us to
tame the protocol’s complexity, as explained below.
4.3 Modeling Choices
To better delimit the scope of our model and our analyses, we now
describe some of our modeling choices.
Architecture. We consider three roles (subscribers, SNs, and HNs)
and reason with respect to unboundedly many instances of each
role. As expected, each subscriber credential is stored in at most one
HN. We model communication channels between these parties that
provide security properties as explained in Section 3.1. Additionally,
the messages exchanged are tagged on the authenticated channel
between the SNs and HNs. This models the implicit assumption that
the authenticated channel between an SN and an HN role instance
is protected from type flaw attacks.
8
A Formal Analysis of 5G Authentication
D. Basin, J. Dreier, L. Hirschi, S. Radomirović, R. Sasse and V. Stettler
Modeling Cryptographic Messages. We model and treat the sub-
scribers’ SQNs as natural numbers (using a standard encoding based
on multisets [1, 34]). We assume the attacker cannot follow UEs
from their creation so the SQN is not known (see Section 3.1) at
first, and we thus start the sequence number with a random value.