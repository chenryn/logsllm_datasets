\"source_groups\" : {
\"properties\" : {
\"id\" : {\"type\":\"string\", \"index\":\"not_analyzed\",
\"store\":\"yes\"},
\"name\" : {\"type\":\"string\", \"index\":\"not_analyzed\",
\"store\":\"yes\"},
\"description\" : {\"type\":\"string\", \"index\":\"not_analyzed\",
\"store\":\"yes\"},
\# 创建者ID
\"owner_id\" : {\"type\":\"string\", \"index\":\"not_analyzed\",
\"store\":\"yes\"},
\# source_group所属域名
\"domain\" : {\"type\":\"string\", \"index\":\"not_analyzed\",
\"store\":\"yes\"},
\"accounts\" : {\"type\":\"string\", \"index\":\"not_analyzed\",
\"store\":\"yes\"},
\"hostname\" : {\"type\":\"string\", \"index\":\"no\",
\"store\":\"yes\"},
\"appname\" : {\"type\":\"string\", \"index\":\"no\",
\"store\":\"yes\"},
\"tag\" : {\"type\":\"string\", \"index\":\"no\", \"store\":\"yes\"}
}
}
}
}
  ---------------------------------------------------------------------------------------------------- -------------------------------- ---------------------------------
  创建source_group                                                                                     act=create_source_group &\       成功返回{\"result\": true}\
                                                                                                       token=xx &\                      失败返回{\"result\":false,\
                                                                                                       name=xx &\                       \"error\":\"xxx\"}
                                                                                                       hostname=xx &\                   
                                                                                                       appname=xx &\                    
                                                                                                       tag=xx &\                        
                                                                                                       description=xx &\                
                                                                                                       owner_id=xx                      
  更新source_group                                                                                     act=update_source_group &\       成功返回{\"result\":true}\
                                                                                                       token=xx &\                      失败返回{\"result\":false,\
                                                                                                       id=xx &\                         \"error\":\"xxx\"}
                                                                                                       hostname=xx &\                   
                                                                                                       appname=xx &\                    
                                                                                                       tag=xx &\                        
                                                                                                       description=xx                   
  删除source_group                                                                                     act=delete_source_group &\       同上
                                                                                                       token=xx & \                     
                                                                                                       id=xx                            
  判断source_group名是否已经存在                                                                       act=check_source_group_existed   成功返回{\"result\":\"true\"}\
                                                                                                       &\                               失败返回{\"result\":\"false\"}
                                                                                                       name=xx                          
  获取source_group(\                                                                                   act=get_source_group&\           成功返回列表\
  可以根据name\|domain\|account)\                                                                      token=xx&\                       失败返回{\"result\":\"false\",\
  （name:                                                                                              name=xx&\                        \"error\":\"xxx\"}
  SourceGroup的名称；domain参数不用填，token就表示了domain；account是指account_id，不是account_name\   account=xx                       
  ）                                                                                                                                    
  为某个用户指定source_group\                                                                          act=assign_source_group&\        成功返回{\"result\":\"true\"}\
  （id可以是List）                                                                                     token=xx&\                       失败返回{\"result\":\"false\",\
                                                                                                       id=xx&\                          \"error\":\"xxx\"}
                                                                                                       owner_id=xx                      
  为某个用户取消\                                                                                      act=cancel_source_group&\        成功返回{\"result\":\"true\"}\
  source_group\                                                                                        token=xx&\                       失败返回{\"result\":\"false\",\
  （id可以是List）                                                                                     id=xx&\                          \"error\":\"xxx\"}
                                                                                                       owner_id=xx                      
  ---------------------------------------------------------------------------------------------------- -------------------------------- ---------------------------------
###### 8.1.5SavedSearch {#savedsearch .list-paragraph}
用来保存某个用户已经设定的检索请求，需要指定检索串、sourcegroup、time_range（时间区间）。saved_search有两种创建方式，一种是用户主动创建，另一种是用户创建Alert时生成的，后者称为匿名saved_search。每个saved_search都拥有一个名字，在Token下是唯一的。
每个saved_search的检索相关的字段都可以更新，其名字可以覆盖。
Saved
Search信息保存在ES的system索引中，type名为saved_searches，其对应的scheme_mapping如下描述：
{
\"mappings\" : {
\"saved_searches\" : {
\"properties\" : {
\"id\" : {\"type\":\"string\", \"index\":\"not_analyzed\",
\"store\":\"yes\"},
\"name\" : {\"type\":\"string\", \"index\":\"not_analyzed\",
\"store\":\"yes\"},
\"domain\" : {\"type\":\"string\", \"index\":\"not_analyzed\",
\"store\":\"yes\"},
\"anonymous\" : {\"type\":\"boolean\", \"index\":\"yes\",
\"store\":\"yes\"},
\# 标记加星
\"like\" : {\"type\":\"boolean\", \"index\":\"yes\", \"store\":\"yes\"},
\# 记录由哪个用户创建，使用account_id
\"owner_id\" : {\"type\":\"string\", \"index\":\"no\",
\"store\":\"yes\"},
\"query\" : {\"type\":\"string\", \"index\":\"no\", \"store\":\"yes\"},
\# time_range包括起始时间，用英文\",\"分割
\"time_range\" : {\"type\":\"string\", \"index\":\"no\",
\"store\":\"yes\"},
\# 指定了限定的source_group，可以有多个，用英文逗号\",\"分割
\"source_groups\" : {\"type\":\"string\", \"index\":\"no\",
\"store\":\"yes\"},
\# 指定了过滤字段，可以有多个，用英文逗号\",\"分割
\"filters\" : {\"type\":\"string\", \"index\":\"no\", \"store\":\"yes\"}
}
}
}
}
在创建saved
search时，需要给这个saved_search生成一个id，id的格式为：timestamp\_\$domain\_\$name
本系统需要提供以下HTTP接口来操作saved_search：
  -------------------------------------------------- -------------------------------- ----------------------------------
  创建saved_search                                   act=create_saved_search &\       成功返回{\"result\":\"true\"}\
                                                     token=xx &\                      失败返回{\"result\":\"false\",
                                                     owner_name=xx &\                 \"error\":\"xx\"}
                                                     name=xx &\                       
                                                     query=xx &\                      
                                                     time_range=xx &\                 
                                                     source_groups=xx &\              
                                                     filters=xx                       
  检查saved_search名称是否已经存在                   act=check_existed_saved_search   唯一返回{\"result\":\"true\"}，\
                                                     &\                               否则返回{\"result\":\"false\",
                                                     token=xx &\                      \"error\":xx}
                                                     name=xx                          
  根据id获取saved_search                             act=get_saved_search &\          返回saved_search信息
                                                     token=xx &\                      
                                                     id=xx                            
  更新saved_search                                   act=update_saved_search &\       成功返回{\"result\":\"true\"}\
                                                     token=xx &\                      失败返回{\"result\":\"false\",
                                                     id=xx &\                         \"error\":\"xx\"}
                                                     query=xx &\                      
                                                     time_range=xx &\                 
                                                     source_groups=xx &\              
                                                     filters=xx &\                    
                                                     like=xx                          
  删除saved_search                                   act=delete_saved_search &\       成功返回{\"result\":\"true\"}\
                                                     token=xx &\                      失败返回{\"result\":\"false\",
                                                     id=xx                            \"error\":\"xx\"}
  获取saved_search列表（匿名saved_search不会返回）   act=get_all_saved_search &\      返回列表信息
                                                     token=xx                         
  -------------------------------------------------- -------------------------------- ----------------------------------
###### 8.1.6Alert {#alert .list-paragraph}
用来保存用户设定的alert列表，每个alert都必须同一个saved_search关联
{
\"mappings\" : {
\"properties\" : {
\"alerts\" : {
\"id\" : {\"type\":\"string\", \"index\":\"not_analyzed\",
\"store\":\"yes\"},
\"name\" : {\"type\":\"string\", \"index\":\"not_analyzed\",
\"store\":\"yes\"},
\"domain\" : {\"type\":\"string\", \"index\":\"not_analyzed\",
\"store\":\"yes\"},
\"saved_search_id\" : {\"type\":\"string\", \"index\":\"not_analyzed\",
\"store\":\"yes\"},
\# 创建者
\"owner_id\" : {\"type\":\"string\", \"index\":\"no\", \"store\":"yes"},
\"email\" : {\"type\":\"string\", \"index\":\"no\", \"store\":\"yes\"},
\"description\" : {\"type\":\"string\", \"index\":\"no\",
\"store\":\"yes\"},
\"interval\" : {\"type\":\"long\", \"index\":\"no\", \"store\":\"yes\"},
\"condition\" : {\"type\":\"string\", \"index\":\"no\",
\"store\":\"yes\"},
\"enabled\" : {\"type\":\"boolean\", \"index\":\"no\", store:\"yes\"},
\"last_run_timestamp\" : {\"type\":\"string\", \"index\":\"no\",
\"store\":\"yes\"},
\"run_results\" : {\"type\":\"string\", \"index\":\"no\",
\"store\":\"yes\"}
}
}
}
}
  ----------------------------------------------------------------------------------------------- ------------------------------------------------------- ----------------------------------
  创建alert（创建alert时可以通过指定saved_search或者通过指定query，如果同时指定认为是不合法的）   act=create_alert &\                                     成功返回{\"result\":\"true\"}\
                                                                                                  token=xx &\                                             失败返回{\"result\":\"false\",
                                                                                                  owner_name=xx &\                                        \"error\":\"xx\"}
                                                                                                  name=xx &\                                              
                                                                                                  saved_search_id=xx &\                                   
                                                                                                  email=xx &\                                             
                                                                                                  description=xx &\                                       
                                                                                                  interval=xx &\                                          
                                                                                                  condition=xx &\                                         
                                                                                                  enabled=xx &\                                           
                                                                                                  query=xx &\                                             
                                                                                                  filters=xx                                              
  判断一个alert名称是否已经存在                                                                   act=check_alert_existed &\                              唯一返回{\"result\":\"true\"}，\
                                                                                                  token=xx &\                                             否则返回{\"result\":\"false\",
                                                                                                  name=xx                                                 \"error\":\"xx\"}
  更新alert                                                                                       act=update_alert &\                                     成功返回{\"result\":\"true\"}\
                                                                                                  token=xx &\                                             失败返回{\"result\":\"false\",
                                                                                                  id=xx &\                                                \"error\":\"xx\"}
                                                                                                  saved_search_id=xx &\                                   
                                                                                                  email=xx &\                                             
                                                                                                  description=xx &\                                       
                                                                                                  condition=xx &\                                         
                                                                                                  interval=xx &\                                          
                                                                                                  enabled=xx                                              
  删除alert（如果其包含的saved_search是匿名的，需要把saved_search也删除）                         act=delete_alert&token=xx&id=xx                         成功返回{\"result\":\"true\"}\
                                                                                                                                                          失败返回{\"result\":\"false\",
                                                                                                                                                          \"error\":\"xx\"}
  获取某个token下的所有alert列表                                                                  act=get_all_alert&token=xx                              返回所有alert列表
  根据id获取某个alert                                                                             act=get_alert&token=xx&id=xx                            返回alert
  获取alert owner的个数                                                                           act=get_alert_owner_count&token=xx&saved_search_id=xx   成功返回{\"result\":\"true\",
                                                                                                                                                          \"total\":xx}\
                                                                                                                                                          失败返回{\"result\":\"false\",
                                                                                                                                                          \"error\":\"xx\"}
  ----------------------------------------------------------------------------------------------- ------------------------------------------------------- ----------------------------------
###### 8.1.7Dashboard {#dashboard .list-paragraph}
用来管理用户设置的dashboard，每个用户可以设置多个dashboard，每个dashboard有且仅有一个owner
{
\"mappings\" : {
\"dashboards\" : {
\"id\" : {\"type\":\"string\", \"index\":\"not_analyzed\",
\"store\":\"yes\"},
\"name\" : {\"type\":\"string\", \"index\":\"not_analyzed\",
\"store\":\"yes\"},
\"owner_id\" : {\"type\":\"string\", \"index\":\"not_analyzed\",
\"store\":\"yes\"},
\"domain\" : {\"type\":\"string\", \"index\":\"not_analyzed\",
\"store\":\"yes\"},
\"contents\" : {\"type\":\"string\", \"index\":\"no\",
\"store\":\"yes\"}
｝
}
}
contents是一个json格式的字符串数组，每个json对象描述一个model，每个model使用name作为唯一标识
本系统提供一下接口管理dashboards
  ----------------------------------------------------------- --------------------------------------------------------- --------------------------------
  创建dashboard                                               act=create_dashboard &\                                   成功返回{\"result\":true}\
                                                              token=xx &\                                               失败返回{\"result\":false,
                                                              owner_id=xx &\                                            \"error\":\"xx\"}
                                                              name=xx                                                   
  为dashboard添加一个model（model_content采用post方式发送）   act=add_dashboard_model &\                                成功返回{\"result\":true}\
                                                              token=xx &\                                               失败返回{\"result\":false,
                                                              id=xx  -d  \$model_content                                \"error\":\"xx\"}
  更新dashboard model\                                        act=update_dashboard_model &\                             成功返回{\"result\":true}\
  (model_content使用post方式发送)                             token=xx &\                                               失败返回{\"result\":false,
                                                              id=xx   -d   \$model_content                              \"error\":\"xx\"}
  删除一个model                                               act=delete_dashboard_model&token=xx&id=xx&model_name=xx   成功返回{\"result\":\"true\"}\