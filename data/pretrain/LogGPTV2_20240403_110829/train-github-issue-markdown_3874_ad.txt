以下是优化后的文本，使其更加清晰、连贯和专业：

---

### 配置信息

- **CMAKE_PREFIX_PATH**: `/anaconda3/lib/python3.6/site-packages`
- **CMAKE_INSTALL_PREFIX**: `/Users/carlos/Downloads/pytorch/torch/lib/tmp_install`

### 版本信息

- **Torch 版本**: 1.0.0
- **Caffe2 版本**: 1.0.0

### 构建选项

- **BUILD_ATEN_MOBILE**: OFF
- **BUILD_ATEN_ONLY**: OFF
- **BUILD_BINARY**: OFF
- **BUILD_CUSTOM_PROTOBUF**: ON
  - **Link local protobuf**: ON
- **BUILD_DOCS**: OFF
- **BUILD_PYTHON**: ON
  - **Python 版本**: 3.6.6
  - **Python 可执行文件**: `/anaconda3/bin/python`
  - **Python 库版本**: 3.6.6
  - **Python 库路径**: `/anaconda3/lib/libpython3.6m.dylib`
  - **Python 包含路径**: `/anaconda3/include/python3.6m`
  - **Python 站点包路径**: `lib/python3.6/site-packages`
- **BUILD_CAFFE2_OPS**: ON
- **BUILD_SHARED_LIBS**: ON
- **BUILD_TEST**: ON
- **USE_ASAN**: OFF
- **USE_CUDA**: 1
  - **CUDA 静态链接**: 0
  - **USE_CUDNN**: ON
  - **CUDA 版本**: 10.0
  - **cuDNN 版本**: 7.4.1
  - **CUDA 根目录**: `/usr/local/cuda`
  - **CUDA 库**: `/usr/local/cuda/lib/libcuda.dylib`
  - **cudart 库**: `/usr/local/cuda/lib/libcudart_static.a;-Wl,-rpath,/usr/local/cuda/lib`
  - **cublas 库**: `/usr/local/cuda/lib/libcublas.dylib`
  - **cufft 库**: `/usr/local/cuda/lib/libcufft.dylib`
  - **curand 库**: `/usr/local/cuda/lib/libcurand.dylib`
  - **cuDNN 库**: `/usr/local/cuda/lib/libcudnn.7.dylib`
  - **nvrtc**: `/usr/local/cuda/lib/libnvrtc.dylib`
  - **CUDA 包含路径**: `/usr/local/cuda/include`
  - **NVCC 可执行文件**: `/usr/local/cuda/bin/nvcc`
  - **CUDA 主机编译器**: `/Library/Developer/CommandLineTools/usr/bin/clang`
- **USE_TENSORRT**: OFF
- **USE_ROCM**: 0
- **USE_EIGEN_FOR_BLAS**: ON
- **USE_FBGEMM**: 0
- **USE_FFMPEG**: OFF
- **USE_GFLAGS**: OFF
- **USE_GLOG**: OFF
- **USE_LEVELDB**: OFF
- **USE_LITE_PROTO**: OFF
- **USE_LMDB**: OFF
- **USE_METAL**: OFF
- **USE_MKL**: OFF
- **USE_MKLDNN**: ON
- **USE_MOBILE_OPENGL**: OFF
- **USE_NCCL**: OFF
- **USE_NNPACK**: 1
- **USE_NUMPY**: ON
- **USE_OBSERVERS**: ON
- **USE_OPENCL**: OFF
- **USE_OPENCV**: OFF
- **USE_OPENMP**: OFF
- **USE_PROF**: OFF
- **USE_QNNPACK**: 1
- **USE_REDIS**: OFF
- **USE_ROCKSDB**: OFF
- **USE_ZMQ**: OFF
- **USE_DISTRIBUTED**: ON
  - **USE_MPI**: OFF
  - **USE_GLOO**: OFF
  - **USE_GLOO_IBVERBS**: OFF

### 依赖项

- **公共依赖项**: Threads::Threads, caffe2::mkldnn
- **私有依赖项**: qnnpack, nnpack, cpuinfo, fp16, aten_op_header_gen, onnxifi_loader

### 构建过程

- **配置完成**
- **生成完成**
- **构建文件已写入**: `/Users/carlos/Downloads/pytorch/build`

### 编译进度

```bash
+ make install -j8
[  0%] Built target onnxifi_loader
[  0%] Built target clog
[  0%] Built target js_embed
[  0%] Built target pthreadpool
[  0%] Built target gtest
[  1%] Built target benchmark
[  2%] Built target libprotobuf-lite
[  3%] Built target onnxifi_dummy
[  3%] Built target ATEN_CPU_FILES_GEN_TARGET
[  3%] Built target ATEN_CUDA_FILES_GEN_TARGET
[  5%] Built target c10
[  5%] Built target common
[  5%] Built target mkrename
[  5%] Built target mkdisp
[  5%] Built target mkalias
[  9%] Built target mkldnn
[ 10%] Built target mkmasked_gnuabi
[ 10%] Built target mkrename_gnuabi
[ 14%] Built target libprotobuf
[ 14%] Built target arraymap
[ 14%] Built target c10_utils_hip
[ 14%] Built target c10_utils_gpu
[ 14%] Built target torch_shm_manager
[ 14%] Built target c10_utils_cpu
[ 14%] Built target cpuinfo
[ 14%] Built target nnpack_reference_layers
[ 14%] Built target gtest_main
[ 14%] Built target onnxifi_wrapper
[ 14%] Built target __aten_op_header_gen
[ 15%] Built target headers
[ 15%] Built target benchmark_main
[ 15%] Built target renamedsp256.h_generated
[ 15%] Built target c10_cuda
[ 15%] Built target dispavx.c_generated
[ 15%] Built target renameAVX.h_generated
[ 15%] Built target renameSSE2.h_generated
[ 15%] Built target renameSSE4.h_generated
[ 15%] Built target renameFMA4.h_generated
[ 15%] Built target renameAVX2128.h_generated
[ 15%] Built target renameAVX2.h_generated
[ 15%] Built target dispsse.c_generated
[ 15%] Built target renamedsp128.h_generated
[ 15%] Built target renameAVX512F.h_generated
[ 15%] Generating alias_avx512f.h
[ 15%] Built target c10_utils_gpu_test
[ 15%] Built target c10_utils_hip_test
[ 15%] Built target c10_utils_cpu_test
[ 17%] Built target nnpack
[ 17%] Built target qnnpack
[ 17%] Built target c10_typeid_test
[ 17%] Built target c10_intrusive_ptr_test
[ 17%] Built target alias_avx512f.h_generated
[ 17%] Built target c10_TypeTraits_test
[ 18%] Built target c10_registry_test
[ 18%] Built target c10_TypeList_test
[ 18%] Built target c10_InlineStreamGuard_test
[ 18%] Built target c10_logging_test
[ 18%] Built target c10_Metaprogramming_test
[ 18%] Built target c10_InlineDeviceGuard_test
[ 18%] Built target c10_Array_test
[ 18%] Built target c10_flags_test
[ 19%] Built target c10_OpSchema_test
[ 19%] Built target c10_TensorTypeId_test
[ 19%] Built target c10_StreamGuard_test
```

---

这样组织后，信息更加结构化，易于阅读和理解。