adaptive traffic engineering. In IEEE INFOCOM (2001).
[20] Bernard Fortz, Jennifer Rexford, and Mikkel Thorup. 2002. Traffic engineering
with traditional IP routing protocols. IEEE Communications Magazine 40, 10 (Oct.
2002), 118–124.
[21] Bernard Fortz and Mikkel Thorup. 2000. Internet traffic engineering by optimizing
OSPF weights. In IEEE INFOCOM (2000).
[22] Bernard Fortz and Mikkel Thorup. 2002. Optimizing OSPF/IS-IS weights in a
changing world. IEEE journal on selected areas in communications 20, 4 (2002),
756–767.
[23] Monia Ghobadi and Ratul Mahajan. 2016. Optical Layer Failures in a Large
Backbone. In ACM IMC (2016).
[24] Gregory D. Glockner, George L. Nemhauser, and Craig A. Tovey. 2001. Dynamic
Network Flow with Uncertain Arc Capacities: Decomposition Algorithm and
Computational Results. Computational Optimization and Applications 18, 3 (1
Mar 2001), 233–250.
[25] Ramesh Govindan, Ina Minei, Mahesh Kallahalla, Bikash Koley, and Amin Vahdat.
2016. Evolve or Die: High-Availability Design Principles Drawn from Googles
Network Infrastructure. In ACM SIGCOMM (2016).
[26] Zonghao Gu, Edward Rothberg, and Robert Bixby. 2012. Gurobi Optimizer
Reference Manual, Version 5.0. Gurobi Optimization Inc., Houston, USA (2012).
[27] Chi-Yao Hong, Srikanth Kandula, Ratul Mahajan, Ming Zhang, Vijay Gill, Mohan
Nanduri, and Roger Wattenhofer. 2013. Achieving high utilization with software-
driven WAN. In ACM SIGCOMM (2013).
[28] Chi-Yao Hong, Subhasree Mandal, Mohammad Al-Fares, Min Zhu, Richard Alimi,
Kondapa Naidu Bollineni, Chandan Bhagat, Sourabh Jain, Jay Kaimal, Shiyu
Liang, Kirill Mendelev, Steve Padgett, Faro Rabe, Saikat Ray, Malveeka Tewari,
Matt Tierney, Monika Zahn, Jonathan Zolla, Joon Ong, and Amin Vahdat. 2018.
B4 and After: Managing Hierarchy, Partitioning, and Asymmetry for Availability
and Scale in Google’s Software-defined WAN. In ACM SIGCOMM (2018).
[29] Sushant. Jain, Alok Kumar, Subhasree Mandal, Joon Ong, Leon Poutievski, Arjun
Singh, Subbaiah Venkata, Jim Wanderer, Junlan Zhou, Min Zhu, Jonathan Zolla,
Urs Hölzle, Stephen Stuart, and Amin Vahdat. 2013. B4: Experience with a
Globally-deployed Software Defined WAN. In ACM SIGCOMM (2013).
[30] Virajith Jalaparti, Ivan Bliznets, Srikanth Kandula, Brendan Lucier, and Ishai Men-
ache. 2016. Dynamic pricing and traffic engineering for timely inter-datacenter
transfers. In ACM SIGCOMM (2016).
[31] Wenjie Jiang, Rui Zhang-Shen, Jennifer Rexford, and Mung Chiang. 2009. Coop-
erative content distribution and traffic engineering in an ISP network. In ACM
SIGMETRICS (2009).
[32] Xin Jin, Yiran Li, Da Wei, Siming Li, Jie Gao, Lei Xu, Guangzhi Li, Wei Xu, and
Jennifer Rexford. 2016. Optimizing Bulk Transfers with Software-Defined Optical
WAN. In ACM SIGCOMM (2016).
[33] Philippe Jorion. 2001. Value at Risk: The New Benchmark for Managing Financial
Risk. McGraw-Hill. https://books.google.com/books?id=S2SsFblvUdMC
[34] Srikanth Kandula, Dina Katabi, Bruce Davie, and Anna Charny. 2005. Walking the
tightrope: Responsive yet stable traffic engineering. In ACM SIGCOMM (2005).
[35] Srikanth Kandula, Ishai Menache, Roy Schwartz, and Spandana R. Babbula. 2014.
Calendaring for wide area networks, Fabián E. Bustamante, Y. Charlie Hu, Arvind
Krishnamurthy, and Sylvia Ratnasamy (Eds.). ACM SIGCOMM (2014).
[36] Fernando A. Kuipers. 2012. An Overview of Algorithms for Network Survivability.
ISRN Communications and Networking 2012 (Jan. 2012), 24.
[37] Alok Kumar, Sushant Jain, Uday Naik, Nikhil Kasinadhuni, Enrique C. Zermeno,
C. Stephen Gunn, Jing Ai, Björn Carlin, Mihai Amarandei-Stavila, Mathieu Robin,
Aspi Siganporia, Stephen Stuart, and Amin Vahdat. 2015. BwE: Flexible, Hierar-
chical Bandwidth Allocation for WAN Distributed Computing. In ACM SIGCOMM
(2015).
[38] Praveen Kumar, Yang Yuan, Chris Yu, Nate Foster, Robert Kleinberg, Petr La-
pukhov, Ciun L. Lim, and Robert Soulé. 2018. Semi-Oblivious Traffic Engineering:
The Road Not Taken. In USENIX NSDI (2018).
[39] Nikolaos Laoutaris, Michael Sirivianos, Xiaoyuan Yang, and Pablo Rodriguez.
2011. Inter-datacenter Bulk Transfers with Netstitcher. In ACM SIGCOMM (2011).
[40] Hyang-Won Lee, Eytan Modiano, and Kayi Lee. 2010. Diverse routing in networks
with probabilistic failures. IEEE/ACM TON 18, 6 (2010), 1895–1907.
[41] Youngseok Lee, Yongho Seok, Yanghee Choi, and Changhoon Kim. 2002. A
constrained multipath traffic engineering scheme for MPLS networks. In ICC
(2002). IEEE, 2431–2436.
[42] George Leopold. 2017. Building Express Backbone: Facebook’s new long-haul
network. http://code.facebook.com/posts/1782709872057497/. (2017).
[43] Hongqiang Harry Liu, Srikanth Kandula, Ratul Mahajan, Ming Zhang, and David
Gelernter. 2014. Traffic engineering with forward fault correction. In ACM
SIGCOMM (2014).
[44] Ajay Mahimkar, Angela Chiu, Robert Doverspike, Mark D. Feuer, Peter Magill,
Emmanuil Mavrogiorgis, Jorge Pastor, Sheryl L. Woodward, and Jennifer Yates.
2011. Bandwidth on Demand for Inter-data Center Communication. In ACM
HotNets (2011).
[45] Houra Mahmoudzadeh. 2015. Robust Optimization Methods for Breast Cancer
Radiation Therapy. Ph.D. Dissertation. University of Toronto.
[46] Athina Markopoulou, Gianluca Iannaccone, Supratik Bhattacharyya, Chen N.
Chuah, Yashar Ganjali, and Christophe Diot. 2008. Characterization of Failures in
an Operational IP Backbone Network. IEEE/ACM TON 16, 4 (Aug 2008), 749–762.
[47] Debasis Mitra and Qiong Wang. 2005. Stochastic traffic engineering for demand
uncertainty and risk-aware network revenue management. IEEE/ACM TON 13, 2
(2005), 221–233.
[48] Jeffrey C. Mogul, Rebecca Isaacs, and Brent Welch. 2017. Thinking about Avail-
ability in Large Service Infrastructures. In ACM HotOS (2017).
[49] Dritan Nace and Michal Pióro. 2008. Max-min fairness and its applications
IEEE
to routing and load-balancing in communication networks: A tutorial.
Communications Surveys and Tutorials 10, 1-4 (2008), 5–17.
[50] R. Tyrrell Rockafellar and Stanislav Uryasev. 2000. Optimization of conditional
value-at-risk. Journal of risk 2 (2000), 21–42.
[51] R. Tyrrell Rockafellar and Stanislav Uryasev. 2002. Conditional value-at-risk for
general loss distributions. Journal of banking & finance 26, 7 (2002), 1443–1471.
[52] Sergey Sarykalin, Gaia Serraino, and Stan Uryasev. 2008. Value-at-Risk vs. Con-
ditional Value-at-Risk in Risk Management and Optimization.
[53] Farhad Shahrokhi and David W. Matula. 1990. The Maximum Concurrent Flow
Problem. ACM 37 (1990), 318–334.
[54] Martin Suchara, Dahai Xu, Robert Doverspike, David Johnson, and Jennifer
Rexford. 2011. Network Architecture for Joint Failure Recovery and Traffic
Engineering. In ACM SIGMETRICS (2011).
[55] Paul Tune and Matthew Roughan. 2017. Controlled Synthesis of Traffic Matrices.
IEEE/ACM TON (2017).
[56] Bruno Vidalenc, Laurent Ciavaglia, Ludovic Noirie, and Eric Renault. 2013. Dy-
namic risk-aware routing for OSPF networks. In IFIP/IEEE IM (2013). 226–234.
[57] Hong Zhang, Kai Chen, Wei Bai, Dongsu Han, Chen Tian, Hao Wang, Haibing
Guan, and Ming Zhang. 2017. Guaranteeing deadlines for inter-data center
transfers. IEEE/ACM TON (2017).
SIGCOMM ’19, August 19–23, 2019, Beijing, China
Bogle et al.
APPENDIX
Appendices are supporting material that has not been peer re-
viewed.
A LP FORMULATION
We formulate the CVaR minimization problem as a Linear Problem
and prove its correctness.
Recall that our loss function is given by
(cid:20)
(cid:21) +
.
L(x, y) = max
i
1 − Σr ∈Ri xr yr
di
We are interested in minimizing
Fβ(x, α) = α + 1
1 − β
= α + 1
1 − β
E[max{0, L(x, y) − α}]
Σqpy[L(x, y(q)) − α]+
,
subject to the link capacity constraints
Σe∈r xr ≤ ce ∀e.
(8)
(9)
(10)
(11)
Note that the latter constraint is linear (hence, we ignore it in the
sequel for brevity). In what follows, we “linearize" the objective
function by adding additional (linear) constraints.
We introduce a new set of variables s = {sq} and rewrite the
objective function as
˜Fβ(s, α) = α + 1
1 − β
Σqpqsq ,
and add the following constraints
sq ≥ L(x, y(q)) − α ∀q
sq ≥ 0. ∀q
(12)
(13)
(14)
Observe that minimizing F w.r.t. x and α is equivalent to minimiz-
ing ˜F w.r.t. s, x, α. To establish this, assume by contradiction that
there exists a q for which the two inequalities (13)–(14) are held
in the strict sense (>) at optimality; hence, the max operation is
not enforced as in the original objective. However, because pq is
positive and sq is positive, we can decrease sq by some small ϵ > 0,
and decrease the objective value. This contradicts the optimality of
the solution.
To complete the construction, we replace (13) (because L(·,·)
involves two max operators). This is achieved by rewriting (13) as
sq + α ≥ L(x, y(q)). Now we can materialize the max operators
through the following inequalities
sq + α ≥ 0, ∀q
sq + α ≥ ti,q ∀i, q,
(15)
(16)
where
ti,q = 1 − Σr ∈Ri xr yr(q)
(17)
We end up with an LP with decision variables x, α, s, {ti,q} where
s and {ti,q} can be viewed as auxiliary variables. The objective of
the LP is to minimize (12) subject to (11), (14)–(17).
di
.
Kβ
k =1Pk ≥ β > Σ
B CALCULATING V aRβ
We describe a post-processing procedure for calculating the V aRβ .
We emphasize that this procedure is essentially not needed in our
current formulation (details below); nonetheless, we present it here
for completeness, as some of the extensions we highlight in Sec-
tion 6 may require it.
We next describe when and how this procedure is used.
We note that the procedure is generic, and applicable to any
setting with a discrete number of states (recall that in our case,
each network state corresponds to a different combination of links,
switches, etc. that are up or down). Fixing x, we sort the states
in increasing order of their loss. With some abuse of notations,
we enumerate the states according to the sorted order. Let the
corresponding state losses be ℓ1 ≤ ℓ2 ≤ · · · ≤ ℓK . Let Kβ be the
Kβ−1
unique index such that Σ
k =1 Pk, where Pk is the
probability of state k. Then the V aRβ is given by Vβ(x) = ℓKβ . See
Proposition 8 in [51] for a proof.
Extract the V aRβ in the rare case where Vβ(x∗) < α∗ (see Theorem
Kβ
4.1). We get this inequality in the case where Σ
k =1Pk = β. This is
unlikely to occur because the probabilities correspond to empirical
measures of up and down time (hence, they are often numbers with
several more decimal positions than β). But even if this case occurs,
we have Vβ(x) = ℓKβ as described above.
Determining the V aRβ for individual user SLAs. As described in Sec-
tion 6, we need an extra post-processing step in some extensions
(e.g., maximizing total bandwidth). Unlike in our current formu-
lation, the per-user SLA (allowed demand and the corresponding
probabilistic guarantee) is not explicitly obtained as an output of
the optimization framework. Therefore, we apply the above pro-
cedure on each individual user as follows. The key observation is
that the tunnel allocation per user is given from the optimization.
We also know the demand di. For each user i, we first reduce the
dimension of the state-space to include events that correspond only
to links, switches, etc. belonging to one or more of its routes. We
sort the states and obtain the V aRβ as described above; by using
this procedure, the network provider can actually give different
probabilistic guarantees for different users, e.g., by fixing a different
β for each user.
C PROOF OF THEOREM 4.2
Since the theorem’s guarantee is with probability greater or equal
to β, by definition of V aRβ , we may restrict our attention to failure
states whose loss is less than or equal to Vβ(x∗). Consider any such
state; let ¯Ri ⊆ Ri be the subset of i’s tunnels that are available in
that state. Since Vβ(x∗) is an upper bound for each loss scenario up
to the β percentile, it follows from the definition of the loss function
(3) that
r ≥(cid:0)1 − Vβ(x
∗
∗)(cid:1)di .
Σr ∈ ¯Ri x
Using this inequality together with the proportional assignment
rule, we obtain that each active tunnel r ∈ ¯Ri carries flow fr ,
Striking the Right Utilization-Availability Balance in WANs
SIGCOMM ’19, August 19–23, 2019, Beijing, China
satisfying
fr =
=
≤
bi
r
wr
x∗
r
Σr′∈ ¯Ri w′
Σr′∈ ¯Ri x∗
r′
x∗
r
(cid:0)1 − Vβ(x
∗)(cid:1)di
(cid:0)1 − Vβ(x
(cid:0)1 − Vβ(x∗)di)
The theorem then follows immediately by recalling that each feasi-
ble solution satisfies the capacity constraint (2).
(18)
(19)
(20)
∗)(cid:1)di = x
∗
r .