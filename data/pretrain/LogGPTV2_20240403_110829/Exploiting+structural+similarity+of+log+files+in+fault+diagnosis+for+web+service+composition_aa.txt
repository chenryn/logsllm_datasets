Available online at www.sciencedirect.com 
ScienceDirect
Original article
Exploiting structural similarity of log files in fault diagnosis for Web service composition
Xu Hana,*, Binyang Lib, Kam-Fai Wongc, Zhongzhi Shid
a Beijing Key Laboratory of Electronic System Reliability Technology, Capital Normal University, Beijing, China 
b University of International Relations, Beijing, Chinac Department of Systems Engineering & Engineering Management, The Chinese University of Hong Kong, Hong Kong, China 
d The Key Laboratory of Intelligent Information Processing, Institute of Computing Technology, Chinese Academy of Sciences, Beijing, China
Available online 7 June 2016
AbstractWith increasing deployment of Web services, the research on the dependability and availability of Web service composition becomes more and more active. Since unexpected faults of Web service composition may occur in different levels at runtime, log analysis as a typical data-driven approach for fault diagnosis is more applicable and scalable in various architectures. Considering the trend that more and more service logs are represented using XML or JSON format which has good flexibility and interoperability, fault classification problem of semi-structured logs is considered as a challenging issue in this area. However, most existing approaches focus on the log content analysis but ignore the structural information and lead to poor performance. To improve the accuracy of fault classification, we exploit structural similarity of log files and propose a similarity based Bayesian learning approach for semi-structured logs in this paper. Our solution estimates degrees of similarity among structural elements from heterogeneous log data, constructs combined Bayesian network (CBN), uses similarity based learning algorithm to compute probabilities in CBN, and classifies test log data into most probable fault categories based on the generated CBN. Experimental results show that our approach outperforms other learning approaches on structural log datasets.Copyright © 2016, Chongqing University of Technology. Production and hosting by Elsevier B.V. This is an open access article under the CC BY-NC-ND license ().
Keywords: Web services composition; Fault diagnosis; Combined Bayesian network (CBN); Similarity; Probability
1. Introduction Web services [2] and RESTful Web services [3,4]. Numerous
atomic Web services can be regarded as access points for ap-In recent years, as a promising computing paradigm, service-oriented computing (SOC) [1] has changed the way of design, delivery and consumption of software applications. Web services technology aiming at implementing service ori-ented architecture has been widely applied to different areas for research or business purposes. Accordingly, more and more business functions are published as Web services (WS) by various organizations and companies. There are two main ap-proaches of developing Web services, including SOAP-basedplications without relying on other Web services. When a user request cannot be fulfilled by atomic Web services, composite Web service plays an important role in providing complex collaboration and interaction between multiple Web services.During the past ten years, a large number of existing standards [5] for Web service composition have been defined. Web service orchestration language is one of these standards for describing executable business processes, which are composed of Web services. Based on OASIS standards, Web Services Business Process Execution Language (WSBPEL or
BPEL) [6] is an executable orchestration language for* Corresponding author.
	E-mail addresses:  (X. Han),  (B. Li),  (K.-F. Wong),  (Z. Shi). 
	Peer review under responsibility of Chongqing University of Technology.
modeling business processes with Web services. Depending on Web service composition, business processes can be executed by the support of BPEL engine from a third party. Some recent2468-2322/Copyright © 2016, Chongqing University of Technology. Production and hosting by Elsevier B.V. This is an open access article under the CC BY-NC-ND license ().
62 	X. Han et al. / CAAI Transactions on Intelligence Technology 1 (2016) 61e71research work has focused on extending BPEL engine to enable composition of SOAP-based, RESTful and OSGi ser-vices [7]. Since there are more and more Web services (esp. RESTful Web services) used in practice, the complexity of Web service composition is becoming higher than before. For this reason, how to ensure dependability and availability is essential for Web service composition. To enhance the dependability of service flow execution, fault tolerant Web service orchestration [8] was proposed. As a critical aspect in fault tolerance framework, fault diagnosis aims at identifying or locating the causes with high probability to explain process exceptions and failures based on runtime information. Since most detailed running information in processes execution is recorded in log files, fault diagnosis by learning from log data is becoming an important issue in this area.Currently, semi-structured data formats, including XML and JSON, are used as the standards of information repre-sentation on the Internet. Due to its good flexibility and interoperability, more and more log files of software running information are represented using the XML/JSON format, especially for Web services. Thus, it becomes a key topic of fault diagnosis research which focuses on analyzing semi-orchestration [8] is supported by fine grained identification of exception and fault causes and the consequent execution of effective exception and fault handlers [9,10]. As an important step of fault tolerance, fault diagnosis has attracted wide attention of academic community increasingly. From the methodology perspective, the existing work on fault diagnosis in this area can be divided into two main categories, including model-based diagnosis and data-driven diagnosis.With respect to model-based approaches, the basic idea is to model the behavior and inner logic of the diagnosed service, and then discover runtime faults based on its model. The on-going work has been described in some published papers. WS-DIAMOND [11] is a European research project which eight research agencies have participated in. In this project, model-based diagnosis is adopted as the principal approach. Yan et al. [12,13] presented a model-based approach for diagnosing orchestrated Web service processes. In their approach, Web services with faultscan be deducedfrom thevariable dependency on execution trajectory, which is represented by the generated automata of BPEL description. With the assumption that behavioral descriptions of individual activities may not be totally given, Mayer et al. [14] presented an approach of isolatingstructured and XML/JSON like log. Generally, semi- minimal sets of faulty activity executions based on the processstructured documents have much richer structural informa-tion than flat ones, which has potential influence on classifi-cation accuracy. Taking this into account, the main task of learning from this kind of documents will have more chal-lenges than before. However, for most classification methods of log analysis, IR-based methods are commonly used ignoring a significant amount of structural information, which leads to low classification accuracy. Therefore, how to learn the structural information from the log has great impact on the accuracy of fault classification.In this paper, we propose a similarity-based Bayesian learning approach for fault classification of semi-structured logs. Our method is to first estimate similarity degrees of structural ele-ments from heterogeneous log data. Then the basic structure of combined Bayesian network (CBN) is constructed, and the similarity-based learning algorithm is used to compute proba-bilities in CBN. Finally, test log data can be classified into most probable fault categories based on the generated CBN.The rest of this paper is organized as follows. Section 2 in-troduces the related work concerning fault diagnosis of Web service composition and existing classification methods for (semi-)structured documents. Section 3 provides an overview of the similarity based structural classification approach and the CBN model. The details of CBN generation, including how to compute probabilities of CBN using similarity-based learning algorithm, are presented in Section 4. Experimental resultsof this approach compared to other learning approaches are shown in Section 5. Finally, Section 6 draws the conclusion.structure. Considering composite service adaption to the dy-namic execution environment, Dai et al. [15] analyzed the error propagation relation between any two services and gave uncer-tain casual relation between exceptions and services by computing error propagation degree. In addition, some research groups proposed testing frameworks [16] and hybrid models [17] for fault diagnosis of Web service composition.For data-driven approaches, the diagnosis problem is usu-ally transformed into the classification problem. Then it can be solved by using data mining and machine learning algorithms on log file data. As we know, many reported research efforts have focused on mining log files of computing systems. And there are some common places in log mining methods for regular computing systems and Web services. For this reason, we can make reference to those existing methods in the related area. Considering the differences between two basic data types e plain text data and semistructured data, mining approaches are often designed and implemented according to the type of training and test data. For plain-text log data, Li et al. used Bayes method [18,19] to categorize text messages in log files, and utilize the temporal information to improve classification performance. In Ref. [20], Bayes classifier, semi-supervised learning, and decision trees, are used to automatically recog-nize symptoms of recurrent faults. As for semi-structured log data, there are also some corresponding classification ap-proaches. In Ref. [21], a database of failure signatures against which undiagnosed failure data can be matched, is constructed from monitoring data. And then anomaly-based clustering method is proposed to generate right clusters for diag- nosing2. Related work 	failures with low-confidence match. Denoyer and Gallinari
[22] provided a generative model for classification task based
Over the past years, some research work in Web services area has concentrated on how to enhance dependability and availability of Web services. Fault tolerant Web serviceson Bayesian networks, which can handle both structure and content. Zaki and Aggarwal [23] presented an effective rule based classifier for XML data using frequent discriminatory
X. Han et al. / CAAI Transactions on Intelligence Technology 1 (2016) 61e71 	63
substructures within XML documents. As a Bayesian learning 
approach of semi-structured data, our approach is similar tothat given by Denoyer and Gallinari in methodology aspect. 
But they are different in nature, because their generative model 
only concerns the training data in identical logic structure, 
whereas our approach aims at constructing the CBN model 
based on log data in different structures from heterogeneous 
sources (which will be discussed later in detail).
In addition, there are other diagnosis mechanisms andframeworks for Web services. In Ref. [24], a self-healing plug-
in for BPEL engine is presented, which can enhance the ability 
of a standard engine to provide process-based recovery ac-
tions. It only provides the self-healing mechanism at infra-
structure level without referring to diagnosis methods in detail. 
Ardissono et al. [8] proposed a framework for Web Serviceorchestration which employs diagnostic services to support a 
fine grained identification of exception causes.
3. A Bayesian network approach to fault diagnosis
As a data-driven approach, the task of fault diagnosis is to 
construct the generative model based on the training data from
| semi-structured log files, and then classify test log data into | Fig. 1. Fragments of two sample XML log files. |  ||---|---|---|
| possible fault categories using this model. On account of the |Fig. 1. Fragments of two sample XML log files. | |
| heterogeneity of log file sources in practice, it is a new chal- |Fig. 1. Fragments of two sample XML log files. | |
lenge to develop methods of learning from the semi-structuredlog data, which are similar in content but not identical in structure. For this reason, it is important to exploit the struc-tural information contained in XML/JSON documents for learning task. For sake of simplicity, we take XML log files as example in this paper. According to the classical representa-tion, an XML document can be considered as a tree in which each node represents a structural element. Given two XML log files generated by different service execution engines, the corresponding schema trees can be extracted from them, which often have similar content but slightly different struc-tures. In this paper, we extend our previous work [25] by proposing an efficient online learning algorithm for the dy-namic environment. Our main idea is to find the similarity between the nodes of these two trees, and then construct the generative model by learning from the training log data based on similarity degrees. Herein, we propose combined Bayesian network as a generative model for semi-structured log data, the probabilities of which depend on training data distribution of both corresponding elements and their counterparts with high similarity degrees.3.1. Overview of the approach
In this approach, the learning problem is simplified by limiting the number of XML log files to two, which constitute
differences, generating Bayesian network model from the training dataset is non-trivial. Herein, how to handle the similarity relation between schema elements of F0 and F1 can be taken as the key point. The objective of our approach is to generate the CBN by learning from all relevant data in training dataset based on quantified similarity.To give an overview of the fault diagnosis approach, we will firstly introduce its principal steps. Suppose the schema trees T0 and T1 are extracted from XML log files F0 and F1, then the main steps in this approach can expressed as follows:
1. Estimate the normalized similarity degrees of the nodes of 	T0 and T1, and then find the similar node pairs by ignoring 	those pairs whose degrees are under the threshold value. 2. Create the basic structure of combined Bayesian network, 	which includes combination part and private part.3. For each schema tree, calculate the combination similarity degrees between its nodes and corresponding ones in CBN, and normalize the values of combination similarity degrees. 4. Compute the probabilities of the constructed CBN on all relevant data in training dataset using the similarity de-grees obtained from steps 1 and 3.5. Given a runtime log record in XML format, use the generative CBN model to classify the test log data, and diagnose possible faults according to the category it
the training dataset. (If the number of log files is more than 	falls in.
two, the learning problem can be transformed into the equiv-
alent one which consists of several two-file problems.) For example, suppose there are two log files F0 and F1 as shown in Fig. 1. We can find that F0 and F1 have similar content butAs we see, steps 1, 3 and 4 play important role in this approach, which are responsible for the computation of simi-larity degrees. The detailed discussion of these steps will be
slightly different structures. In view of their structural 	given in Section 4.
64 	X. Han et al. / CAAI Transactions on Intelligence Technology 1 (2016) 61e713.2. Modeling semi-structured log files with combined 	counterparts in both T0 and T1. In comparison with combi-Bayesian networks 	nation group, the private group is composed of the nodes, 	which only have the corresponding nodes in T0 (or T1).
The Bayesian network is a suitable model for representingthe dependencies and relations between different elements of semi-structured data. On account of structural differences of training data, we propose combined Bayesian network, which is modeled by learning from heterogeneous training data based on quantified similarity. As a generative model, CBN is capable of handling both structure and content information, and can be used to classify test log data.Generally, each log file consists of a set of log data records, which will be labeled with related fault categories. These labeled log records constitute the training dataset. We asso-
4. Similarity-based Bayesian learning for fault diagnosisIn this section, we propose a similarity-based Bayesian learning approach for fault diagnosis. Firstly, we introduce how to estimate similarity degrees of schema elements for constructing combined Bayesian networks. Then, we present how to learn probabilities o CBNs in detail. Finally, we give the method of classifying log data records using CBNs for fault diagnosis in subsection 4.3. To illustrate this learning approach, we will continue to use the example given inciate a CBN model to each category of the training dataset. 	Section 3.
Since data records in same category may have different logical
structures, a CBN is constructed by combining structural and content information of all data records in corresponding category. Then, the network parameters are learned from all training data records in this category. To realize fault diag-nosis, we classify test log data records into possible fault categories by performing inference in constructed CBNs.Consider the sample XML log files F0 and F1 in Fig. 1. For the training data in a given category c, the schema information of each log record can be represented by T0 or T1. According to this, we can construct the basic structure of CBN by
4.1. Estimating similarity degrees for constructing CBNsSince the probabilities of CBNs depend on the distribution of both corresponding data and their similar counterparts in training dataset, we need to find the correspondences between the nodes of extracted schema trees. Consider the schema trees T0 and T1 in previous example. There are a number of nodes in T0 and T1 which have similar meaning but different names. In order to discover the correspondences between these nodes, we will exploit both textual and structural information of T0combining T0 and T1, which contains a set of structural nodes 	and T1.