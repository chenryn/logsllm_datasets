4.5 Robust Composition
Original key partnering can essentially relax security models such
that no-match attacks are not considered as legitimate attacks any-
more. In Appendix C we show that our new definition has another
important advantage, a basic form of composability that we call
robust composition. Moreover, we show that partnering based on
Session F3:  Crypto PitfallsCCS’17, October 30-November 3, 2017, Dallas, TX, USA1353matching conversations lacks even the weakest form of robust
composition.
When plugging in matching conversation as the partnering def-
inition of choice we obtain the classical definition of security for
authentication.
5 NO-MATCH ATTACKS AND EXPLICIT
AUTHENTICATION
Our solutions so far deal with no-match attacks in security models
for key exchange that do not explicitly define authentication. Cor-
respondingly no-match attacks can only break key indistinguisha-
bility in these models. When dealing with explicit authentication,
we can also rely on our alternative solutions given in Appendix E.
They inherit the same benefits and disadvantages as when used to
deal with no-match attacks against key indistinguishability.
However, again our main and recommended solution is to pro-
vide a new definition of explicit authentication that does not in-
herently rely on matching conversations. The new definition is
inspired by the new partnering definition given in Section 4.1. In
the following we will elaborate on our new definition of explicit
authentication in more detail. We proceed in two steps to obtain
our final notion. In the first step, we develop a new notion of explicit
authentication by decoupling the classical notion of authentication
from the notion of matching conversations. We arrive at what we
believe to be the first notion of authentication that is independent
from a concrete partnering definition. (Previous definitions have
usually been based on matching conversations.) This is conceptu-
ally very attractive as it allows to parametrize both key indistin-
guishability and explicit authentication with a single common choice
of partnering notion. In the second step we instantiate our new
general notion of explicit authentication with our new notion of
original key partnering. We arrive at a notion that is well-suited to
deal with no-match attacks in models with explicit authentication.
5.1 Decoupling Explicit Authentication and
Matching Conversations
As a template we use the definitions provided in the original work
of Bellare and Rogaway [6]. However, we only focus on the second
property of the definition for authentication given in [6].13 We
stress that, as we rely on original key partnering, our definitions
are specific to key exchange models.
Let a be an oracle of A. The peer B of a is the holder of the key
that a uses to verify/authenticate the (received) communication
with. (For example, we may assume that Alice uses Bob’s public key
to verify messages that has been sent from Bob to Alice. Likewise
Alice could use MAC key shared with Bob to check if some message
has been authenticated by Bob.) The peer of a is sometimes also
called the intended partner of a.
Definition 5.1 (General Explicit Mutual Authentication). We say
that a protocol provides explicit authentication if the following
holds: if an oracle a of A with uncorrupted14 peer B accepts, then
there exists an oracle b with peer A that is partnered with a.
13We regard the first part of this definition – which states that oracles with matching
conversations both accept – as a definition of completeness rather than a formulation
of a security property.
14We note that the authentication definition [6] does not explicitly require that the
peer is uncorrupted. However, the entire security model does not allow for corruptions
at all.
5.2 Explicit Authentication and Original Key
Partnering
We will now plug our new partnering definitions into the general
definition. Putting things together we obtain the following simple
notion of explicit authentication that rules out no-match attacks.
Definition 5.2 (Explicit Mutual Authentication with Original Key
Partnering). We say that a protocol provides explicit authentication
with original key partnering if the following always holds: if an
oracle a of A with uncorrupted peer B accepts, then there exists an
oracle b with peer A that accepts such that a and b have computed
their original key.
Similar to before, our new notion allows the adversary to perform
any modification on the protocol as long as the oracles of both A
and B compute the original key. Again, such modifications are not
considered an attack. We remark that the same rationale for using
original key partnering in key exchange protocols applies to our
new definition of authentication as well. We note that since our
partnering definition is independent of the message flow, we do not
need to separately cover situations where A or B has sent the last
protocol message like for example in [29]. Moreover no artificial
last message is required as in [6].
6 STRENGTHENING SECURITY DEFINITIONS
So far we have showed that relying on original key partnering
can relax security models such that no-match attacks are not con-
sidered as legitimate attacks anymore. We would like to remark
that original key partnering can also be used to strengthen security
models. In particular, we can show that original key partnering can
be used to re-define what it means for an oracle to communicate
with an honest oracle (and not with the attacker). In this way we
immediately obtain stronger notions for, for example, unilateral au-
thentication and perfect forward secrecy than existing approaches.
Let us expand on this for unilateral authentication – the widespread
scenario where an unauthenticated client communicates with an
authenticated server.
Unilateral security typically requires that only client oracles may
serve as Test-oracles, since in settings with an authenticated server
and an unauthenticated client, only the client can verify if incoming
messages really were sent by its communication partner. However,
usually security definitions are extended so that server oracles
may serve as Test-oracles as well, albeit only under very severe
restrictions (for example [24, 34]). Essentially, these restrictions
guarantee that the server oracle indeed communicates with an
honest client oracle and not with the adversary. This is reasonable
since an attacker that simply behaves like an unauthenticated client
can always engage in a communication with a server oracle and
know the session key afterward (it just runs the algorithms any
other client would run). Obviously it is very crucial to define for a
server oracle what it means to communicate with an honest oracle.
Existing approaches to define this rely on matching conversations.
Session F3:  Crypto PitfallsCCS’17, October 30-November 3, 2017, Dallas, TX, USA1354They essentially state that server oracles may also serve as Test-
oracles if there exists a fresh (i.e. session key and secret long-term
key have not been given to the adversary) client oracle that has
accepted with matching conversations with the server oracle. This is
very strict. In particular it means that the communication between
those oracles has not been modified on transit at all, i.e. the attacker
must remain passive. Our new definition may provide a slightly
more generous alternative: one may alternatively allow a server
oracle to serve as a Test-oracle if there exists a fresh client oracle
that has accepted and both client and server oracle have computed
their original key. In contrast to before, this means that the attacker
is allowed to perform at least some active attacks, as long as these
attacks do not change the fact that both oracles compute their
original key. Another definition that can be strengthened using the
concept of original key partnering is the notion of origin session
that was introduced by Cremers and Feltz [20] and used to formalize
notions of perfect forward secrecy. For a similar reason as with
unilateral authentication it tries to capture messages that really
originate from some oracle (and were not crafted by the attacker).
The definition requires that for a considered message there must
exist an oracle that exactly output this message before. Original
key partnering can relax this requirement by additionally allowing
that this message has been produced via a no-match attack by the
adversary.
7 FURTHER RELAXATIONS AND OBSTACLES
Our new notion improves security definitions based on matching
conversations while still keeping its important conceptual advan-
tages. It does so by relaxing the security definition such that certain
active modifications by the attacker are not considered attacks
anymore. However, there is a strict, reasonable limit to the set
of allowed modifications: only those attacks are not considered
harmful that make both parties still compute their original key.
Intuitively, this means that in the presence of any such attack the
computed shared secret is still as good as in case of no attack at
all. We feel that this well-defined lower limit that corresponds to a
strong cryptographic intuition is one of the most compelling and
valuable features of our new notion. In general finding a relax-
ation of a strict security notion should always be accompanied by a
thorough explanation of why it does not consider attacker actions
harmless which might actually be dangerous. We emphasize, that
potentially there is still room for improvement of our partnering
definition. Consider for example (artificial) protocols in which two
key exchange protocols of equal strength are run at the same time
between Alice and Bob. The session key is one of the session keys
of the underlying protocols. Now assume the attacker launches an
active attack that simply makes Alice and Bob use the other session
key. Corresponding to our notion such an influence on the shared
key is considered an attack, as it is the case with security under
matching conversations. Cryptographic intuition however, may
deem this protocol secure. Essentially our security notion requires
that whenever the attacker changes the key of some party this is
considered an attack. We find this generally very reasonable since
we have no guarantee of the strength of the key after the modifi-
cation (in contrast to modifications deemed harmless according to
original partnering). Future work may strive to further weaken the
notion of original key partnering to also recognize these kind of
modifications as non-harmful. However, to us it is not clear if any
such definition would not also consider modifications as harmless
that cryptographic intuition would deem legitimate attacks. In par-
ticular, to be convincing, such a definition should have a strong
security argument akin to the strict limit of allowed modifications
that we mentioned before which guarantees that after the modifi-
cation of used session keys by the attacker, the actually used keys
are still strong.
Apart from that, we believe that such a relaxation may be prob-
lematic on a technical level as well. Let as go into more detail. As
an example one could think of a similar protocol with two runs of
atomic key exchange protocols in parallel. The only difference now
is that the two atomic protocols have distinct strength, one with
strong security and one with weak security.Imagine that in case of
no active attack Alice and Bob take as session key the one key from
the strongly secure protocol. Now the attacker may modify the
protocol to make both parties use the weak key. Clearly this must
be considered an attack. However, the only difference between the
protocol mentioned before is the strength of the second atomic
protocol run. Before both atomic protocols had the same strength,
now the second is weaker. So to account for this, a general security
definition (that crucially relies on a good partnering definition)
must define what is a legitimate attack and what can be considered
harmless depending on the strength of one of its building blocks. Such
an approach is very counter-intuitive. For example, the security
definition of a digital signature construction that computes long
messages via a hash function should also not depend on the strength
of the underlying hash function. It is only the security proof that
should rely on the hash function’s strength.
REFERENCES
[1] Janaka Alawatugoda, Colin Boyd, and Douglas Stebila. 2014. Continuous After-
the-Fact Leakage-Resilient Key Exchange. In ACISP 14 (LNCS), Willy Susilo and
Yi Mu (Eds.), Vol. 8544. Springer, Heidelberg, 258–273. https://doi.org/10.1007/
978-3-319-08344-5_17
[2] Janaka Alawatugoda, Douglas Stebila, and Colin Boyd. 2014. Modelling after-
the-fact leakage for key exchange. In ASIACCS 14, Shiho Moriai, Trent Jaeger,
and Kouichi Sakurai (Eds.). ACM Press, 207–216.
[3] Boaz Barak, Yehuda Lindell, and Tal Rabin. 2004. Protocol Initialization for the
Framework of Universal Composability. Cryptology ePrint Archive, Report
2004/006. (2004). http://eprint.iacr.org/.
[4] Mihir Bellare, Dennis Hofheinz, and Eike Kiltz. 2015. Subtleties in the Definition of
IND-CCA: When and How Should Challenge Decryption Be Disallowed? Journal
of Cryptology 28, 1 (Jan. 2015), 29–48. https://doi.org/10.1007/s00145-013-9167-4
[5] Mihir Bellare, David Pointcheval, and Phillip Rogaway. 2000. Authenticated Key
Exchange Secure against Dictionary Attacks. In EUROCRYPT 2000 (LNCS), Bart
Preneel (Ed.), Vol. 1807. Springer, Heidelberg, 139–155.
[6] Mihir Bellare and Phillip Rogaway. 1994. Entity Authentication and Key Dis-
tribution. In CRYPTO’93 (LNCS), Douglas R. Stinson (Ed.), Vol. 773. Springer,
Heidelberg, 232–249.
[7] Mihir Bellare and Phillip Rogaway. 1995. Provably Secure Session Key Distribu-
tion: The Three Party Case. In 27th ACM STOC. ACM Press, 57–66.
[8] Steven M. Bellovin and Michael Merritt. 1992. Encrypted Key Exchange:
Password-Based Protocols Secure against Dictionary Attacks. In 1992 IEEE Sym-
posium on Security and Privacy. IEEE Computer Society Press, 72–84. https:
//doi.org/10.1109/RISP.1992.213269
[9] Florian Bergsma, Tibor Jager, and Jörg Schwenk. 2015. One-Round Key Exchange
with Strong Security: An Efficient and Generic Construction in the Standard
Model. In PKC 2015 (LNCS), Jonathan Katz (Ed.), Vol. 9020. Springer, Heidelberg,
477–494. https://doi.org/10.1007/978-3-662-46447-2_21
[10] John Black and Phillip Rogaway. 2002. Ciphers with Arbitrary Finite Domains. In
CT-RSA 2002 (LNCS), Bart Preneel (Ed.), Vol. 2271. Springer, Heidelberg, 114–130.
(Hierarchical) Identity-Based
Encryption from Affine Message Authentication. In CRYPTO 2014, Part I (LNCS),
[11] Olivier Blazy, Eike Kiltz, and Jiaxin Pan. 2014.
Session F3:  Crypto PitfallsCCS’17, October 30-November 3, 2017, Dallas, TX, USA1355Juan A. Garay and Rosario Gennaro (Eds.), Vol. 8616. Springer, Heidelberg, 408–
425. https://doi.org/10.1007/978-3-662-44371-2_23
[12] Emmanuel Bresson, Olivier Chevassut, David Pointcheval, and Jean-Jacques
Quisquater. 2001. Provably Authenticated Group Diffie-Hellman Key Exchange.
In ACM CCS 01. ACM Press, 255–264.
[13] Emmanuel Bresson, Mark Manulis, and Jörg Schwenk. 2007. On Security Models
and Compilers for Group Key Exchange Protocols. In IWSEC 2007, Nara, Japan,
October 29-31, 2007, Proceedings (Lecture Notes in Computer Science), Atsuko
Miyaji, Hiroaki Kikuchi, and Kai Rannenberg (Eds.), Vol. 4752. Springer, 292–307.
https://doi.org/10.1007/978-3-540-75651-4_20
[14] Christina Brzuska, Mark Fischlin, Nigel P. Smart, Bogdan Warinschi, and
Stephen C. Williams. 2013. Less is More: Relaxed yet Composable Security
Notions for Key Exchange. International Journal of Information Security 12, 4
(August 2013), 267–297. https://doi.org/10.1007/s10207-013-0192-y
[15] Christina Brzuska, Marc Fischlin, Bogdan Warinschi, and Stephen C. Williams.
2011. Composability of Bellare-Rogaway key exchange protocols. In ACM CCS
11, Yan Chen, George Danezis, and Vitaly Shmatikov (Eds.). ACM Press, 51–62.
[16] Christina Brzuska, Nigel P. Smart, Bogdan Warinschi, and Gaven J. Watson.
2013. An analysis of the EMV channel establishment protocol. In ACM CCS
13, Ahmad-Reza Sadeghi, Virgil D. Gligor, and Moti Yung (Eds.). ACM Press,
373–386.
[17] Ran Canetti and Hugo Krawczyk. 2001. Analysis of Key-Exchange Protocols
and Their Use for Building Secure Channels. In EUROCRYPT 2001 (LNCS), Birgit
Pfitzmann (Ed.), Vol. 2045. Springer, Heidelberg, 453–474.
[18] Kim-Kwang Raymond Choo and Yvonne Hitchcock. 2005. Security Requirements
for Key Establishment Proof Models: Revisiting Bellare-Rogaway and Jeong-Katz-
Lee Protocols. In ACISP 05 (LNCS), Colin Boyd and Juan Manuel González Nieto
(Eds.), Vol. 3574. Springer, Heidelberg, 429–442.
[19] Cas Cremers. 2011. Examining indistinguishability-based security models for
key exchange protocols: the case of CK, CK-HMQV, and eCK. In ASIACCS 11,
Bruce S. N. Cheung, Lucas Chi Kwong Hui, Ravi S. Sandhu, and Duncan S. Wong
(Eds.). ACM Press, 80–91.
[20] Cas J. F. Cremers and Michele Feltz. 2012. Beyond eCK: Perfect Forward Se-
crecy under Actor Compromise and Ephemeral-Key Reveal. In ESORICS 2012
(LNCS), Sara Foresti, Moti Yung, and Fabio Martinelli (Eds.), Vol. 7459. Springer,
Heidelberg, 734–751.
[21] Yevgeniy Dodis, Eike Kiltz, Krzysztof Pietrzak, and Daniel Wichs. 2012. Message
Authentication, Revisited. In EUROCRYPT 2012 (LNCS), David Pointcheval and
Thomas Johansson (Eds.), Vol. 7237. Springer, Heidelberg, 355–374.
[22] Stefan Dziembowski and Sebastian Faust. 2011. Leakage-Resilient Cryptography
from the Inner-Product Extractor. In ASIACRYPT 2011 (LNCS), Dong Hoon Lee
and Xiaoyun Wang (Eds.), Vol. 7073. Springer, Heidelberg, 702–721.
[23] Dario Fiore and Dominique Schröder. 2012. Uniqueness Is a Different Story:
Impossibility of Verifiable Random Functions from Trapdoor Permutations. In
TCC 2012 (LNCS), Ronald Cramer (Ed.), Vol. 7194. Springer, Heidelberg, 636–653.
[24] Marc Fischlin and Felix Günther. 2014. Multi-Stage Key Exchange and the Case of
Google’s QUIC Protocol. In ACM CCS 14, Gail-Joon Ahn, Moti Yung, and Ninghui
Li (Eds.). ACM Press, 1193–1204.
[25] Oded Goldreich. 2001. The Foundations of Cryptography - Volume 1, Basic Tech-
niques. Cambridge University Press.
[26] Shafi Goldwasser and Silvio Micali. 1984. Probabilistic Encryption. J. Comput.
Syst. Sci. 28, 2 (1984), 270–299.
[27] Shafi Goldwasser, Silvio Micali, and Ronald L. Rivest. 1984. A “Paradoxical”
Solution to the Signature Problem (Abstract) (Impromptu Talk). In CRYPTO’84
(LNCS), G. R. Blakley and David Chaum (Eds.), Vol. 196. Springer, Heidelberg,
467.
[28] Shafi Goldwasser and Rafail Ostrovsky. 1993. Invariant Signatures and Non-
Interactive Zero-Knowledge Proofs are Equivalent (Extended Abstract). In
CRYPTO’92 (LNCS), Ernest F. Brickell (Ed.), Vol. 740. Springer, Heidelberg, 228–
245.
[29] Tibor Jager, Florian Kohlar, Sven Schäge, and Jörg Schwenk. 2012. On the Security
of TLS-DHE in the Standard Model. In CRYPTO 2012 (LNCS), Reihaneh Safavi-
Naini and Ran Canetti (Eds.), Vol. 7417. Springer, Heidelberg, 273–293.
[30] Ik Rae Jeong, Jonathan Katz, and Dong Hoon Lee. 2004. One-Round Protocols for
Two-Party Authenticated Key Exchange. In ACNS 04 (LNCS), Markus Jakobsson,