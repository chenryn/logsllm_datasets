domains, IP addresses and six types of relations among them.
The details of these relations are as follows and Table 1 lists
their corresponding adjacent matrices.
domain i is queried by client j.
main i is resolved to IP address j.
• Client-query-Domain, we use matrix Q to denote that
• Client-segment-Client, we use matrix N to denote that
client i and client j belong to the same network segment.
• Domain-resolve-IP, we use matrix R to denote that do-
• Domain-similar-Domain, we use matrix S to denote the
• Domain-cname-Domain, we use matrix C to denote that
• IP-domain-IP, we use matrix D to denote that IP address
i and IP address j are once mapped to the same domain.
character-level similarity between domain i and j.
domain i and domain j are in a CNAME record.
All these adjacent matrices can be naturally extracted from
the DNS-related data except matrix S which indicates the
402          22nd International Symposium on Research in Attacks, Intrusions and DefensesUSENIX Association4.3 Graph Pruner
Because we aim at detecting malicious domains in a campus
or enterprise network, the HIN may contain millions of nodes
and billions of edges, it is a waste of computing resources to
model all these entities and perform the corresponding matrix
operations. Besides, The data we collect directly from DNS
trafﬁc or logs is quite dirty with noises like irregular domains,
"large" clients, etc. Therefore, we add a graph pruning mod-
ule in HinDom to improve its performance and practicality.
The graph pruner ﬁlters nodes according to the following
conservative rules.
• Unusual domains. We remove domains that fail to meet
the naming rules, for example, icmsb2018(at)163.com,
which may be caused by mistyping, misconﬁguration or
benign services’ misuse. Besides we discard domains
that are queried by only one client to focus on those that
have greater impacts over the LAN.
• Popular domains. In most cases, popular domains
queried by a large fraction of clients in a LAN are in-
clined to be benign; otherwise, there will be a signiﬁ-
cant attack event and will be easily detected by the se-
curity management department. Besides, these popular
domains cause much computational complexity as they
are all nodes with high degrees in HIN. Therefore, we
ﬁlter out domains that queried by Kd% clients in a net-
work. To be conservative, we set Kd% to be 25% in our
experiments.
• Large clients. There are some "large" clients outstand-
ing by querying a large fraction of the whole domain
set. We ﬁnd these devices are often DNS forwarders or
large proxies and thus can not represent the behavior
of regular clients. HinDom removes them to eliminate
the ambiguousness and complicacy they bring into the
system. In our evaluations, the top Ka% (empirically set
to 0.1%) most active clients are discarded.
• Inactive clients. We regard clients that query less than
Kc domains as the inactive ones. They are discarded
for the lack of effects on mining associations among
domains. In our experiments, Kc is set to be 3.
• Rare IPs. For the same reason as above, IP addresses
that only map to one domain are also ﬁltered out to boost
performance and save computing resources.
To be more conservative for information loss caused by graph
pruning, we set some exceptions against the mentioned rules
based on label information. Considering that some attackers
try to hide by reducing activities, we keep domains with clear
malicious labels even if they are regarded as unusual ones.
Same to their related clients or IP addresses.
4.4 Meta-path Combiner
As mentioned in Section 3, meta-paths are used in HIN to
denote complex associations among nodes. Because we are in-
Figure 3: HIN instance (a) and its network schema (b) in
HinDom
character-level similarity among domains. We use n-gram to
process the domain name strings, regard the results of the
entire dataset as a vocabulary and embed each domain into
a characteristic vector. Then we use the K-Means algorithm
to cluster these vectors into K categories and transform the
clustering result into matrix S. In our experiments, we test
uni-gram, bi-gram and tri-grams for both types of features.
Tri-grams brings a marginal improvement with much more
cost on memory requirements. Considering performance and
complexity, we concatenate uni-grams and bi-grams as fea-
tures and empirically set K = 20.
Table 1: Elements and descriptions of the relation matrices
Matrix Element Description
Q
N
R
S
C
D
qi, j
ni, j
ri, j
si, j
ci, j
di, j
if domain i is queried by client j, then
qi, j = 1, otherwise, qi, j = 0.
symmetric, if client i and j belong to
the same network segment, then ni, j
= n j,i = 1, otherwise, ni, j =n j,i = 0.
if domain i is resolved to ip j, then ri, j
= 1, otherwise, ri, j = 0.
symmetric, if domain i and j are simi-
lar on character level, then si, j = s j,i =
1, otherwise, si, j = s j,i = 0.
symmetric, if domain i is the cname
of domain j, then ci, j = c j,i = 1, other-
wise, ci, j = c j,i = 0.
symmetric, if IP address i and j are
once resolved to the same domain,
then di, j = d j,i = 1, otherwise, di, j =
d j,i = 0.
USENIX Association        22nd International Symposium on Research in Attacks, Intrusions and Defenses 403PID
1
2
3
4
5
6
metapath
d S−→ d
d C−→ d
d Q−→ c QT−−→ d
d R−→ ip RT−→ d
d Q−→ c N−→ c QT−−→ d
d R−→ ip D−→ ip RT−→ d
Table 2: Commuting Matrix of each metapath
Commuting Matrix M Description
S
C
QQT
RRT
QNQT
RDRT
domains similar to each other on character level
the cname relationship among domains
domains queried by same clients
domains resolved to same IP address
domains queried by clients belong to the same subnet
domains resolved to IPs that belong to the same attacker
terested in malicious domain detection, HinDom only chooses
symmetric meta-path where A1 = AL+1 = domains and de-
rives six types of meta-paths from the six relations mentioned
above. Table 2 displays the description and corresponding
commuting matrix Mk of each meta-path while the reasons
for choosing them are listed as follows.
• P1: d S−→ d. We have noticed that benign and malicious
domains differ in character distributions. Besides, mali-
cious domain names from the same family tend to follow
a similar textual pattern.
• P2: d C−→ d. The cname domain of a benign domain is
unlikely to be malicious, vice versa.
• P3: d Q−→ c QT−−→ d. Infected clients of the same attackers
tend to query partially overlapping sets of malicious
domains while normal clients have no reasons to reach
out for them.
• P4: d R−→ ip RT−→ d. IP resources are relatively stable in
Internet, domains resolved to the same IP address in a
period tend to belong to the same class.
• P5: d Q−→ c N−→ c QT−−→ d. Adjacent clients are vulnerable to
the same attacks. For example, malware propagating in a
subnet or spams aiming to clients on the same segment.
• P6: d R−→ ip D−→ ip RT−→ d. Even trying to keep ﬂexible,
with funding limits, attackers are likely to reuse their
domain or IP resources.
Based on meta-paths, an algorithm named PathSim [32] can
be used to measure the similarity among nodes. Yet different
meta-paths represent associations from different points of
view which are not equally important in malicious domain
detection. HinDom obtains a combined meta-path with the
corresponding similarity matrix denoted as follow, where wk
is the weight assigned to each meta-path.
ωk ·
ωk · PathSim(Mk) =
2Mk(i, j)
M(cid:48) =
6
Mk(i,i) + Mk( j, j)
6
∑
k=1
∑
k=1
Many methods can be used to compute the weight vector,
for example, linear regression with gradient descent. HinDom
chooses to use the Laplacian Score (LS) [15] for two reasons:
First, LS can be applied to unsupervised situations. Second,
as a "ﬁlter" method, LS is independent of further learning
algorithms and can evaluate features directly from the local
geometric structure of data. The basic idea of LS is to evaluate
features according to their locality preserving power. LS con-
structs a nearest neighbor graph and seeks features respecting
this graph structure. Speciﬁcally, We code all meta-paths into
a tensor T ∈ R6×n×n, where Tk,i, j = Mk(i, j), n is the number
of domains, Mk is the commuting matrix of meta-path Pk.
Then a domain meta-path representation matrix W ∈ Rn×m,
where Wk,i = ∑ j Tk,i, j is generated as the input of LS.
4.5 Transductive Classiﬁer
Though some public domain lists are commonly used as la-
bel information in malicious domain detections, some subtle
issues are ignored. For whitelists, the widely used Alexa top
K list only contains second-level domains (2LD) sorted by
popularity, which leads to many false positives. For exam-
ple, a prevalent 2LD may hold proxies to malicious activities
and some malicious domains may rank high with a burst of
queries from the infected clients. As for blacklists, though
usually generated with robust evidences, some discrepancies
are still caused by the ﬁckle nature of DNS. For instance,
domains like alipay.com are in DGArchive [27], a database
of DGAs and the corresponding domains. Besides, when new
malicious domains come, blacklists cannot update in time. In
a word, none of these lists is completely reliable. It is a time-
consuming and cost-expensive process to obtain an accurately
labeled dataset as the ground truth.
To reduce the cost of labeling, HinDom applies a meta-
path based transductive classiﬁcation method which can per-
form well even with a small fraction of labeled samples. The
basic two assumptions in transductive classiﬁcation are (i)
smoothness assumption, objects with tight relationships tend
to belong to the same class; (ii) ﬁtting assumption, the clas-
siﬁcation results of the known nodes should consist with the
pre-labeled information. Therefore, the cost function of the
transductive classiﬁer is as follow,
404          22nd International Symposium on Research in Attacks, Intrusions and DefensesUSENIX AssociationQ(F) =
n−1
∑
(
i, j=0
1
2
i, j(cid:107) Fi√
M(cid:48)
Dii
− Fj(cid:112)D j j
(cid:107)2 + µ
n−1
∑
i=0
(cid:107)Fi −Yi(cid:107)2)
scenario. For robustness, we test HinDom’s ability to deal
with label noises in the training dataset. For practicality, we
test HinDom when only public labels are available and deploy
it in two real-world networks: CERNET2 and TUNET.
where n is the number of domain nodes in HIN, M(cid:48) ∈ Rn×n
is the similarity matrix we get from the combined metapath,
D ∈ Rn×n is a diagonal matrix whose (i, i)-element equals
to the sum of the i-th row of M(cid:48). F ∈ Rn×2 contains each
domain’s probability of being benign or malicious while
Y ∈ Rn×2 denotes their pre-labeled information. We can see
the ﬁrst term of this cost function represents the smoothness
assumption while the second term follows the ﬁtness assump-
tion. Trade-off between the two assumptions is adjusted by
parameter µ. In order to ﬁnd the F∗ that minimize Q(F), we
get
dQ
dF = F∗ − F∗S + µ(F∗ −Y ) = 0
F∗ = β(I − αS)−1Y
where α =
1
1 + µ
, β =
µ
1 + µ
and S = D−1/2M(cid:48)D−1/2.
We get the theoretical optimal solution, yet in the real world,
inverting a large matrix will consume too much computing
resources. Thus, illuminated by LLGC [37], in HinDom we
perform iterations F(t + 1) = αSF(t) + βY to approach the
optimal solution. We refer the readers to LLGC [37] for the
theoretical proof that this iteration can coverage to the op-
timal solution. The algorithm of Transductive Classiﬁer is
summarized as follow.
Step 1, Given a HIN G = (cid:104)V,E(cid:105) with incomplete domain
label information Y , get similarity matrix M(cid:48) from Metapath
Combiner.
Step 2, Regularize the similarity matrix with S =
D−1/2M(cid:48)D−1/2, where D is a diagonal matrix whose (i, i)
- element equals to the sum of the i-th row of M(cid:48).
it converges.
Step 3, Set F(0) = Y , iterate F(t +1) = αSF(t) +βY until
Step 4, Label domain i ‘benign’ if Fi,0 ≥ Fi,1, vice versa.
We further analyze the classiﬁcation results and add do-
mains with solid labels, namely the difference between Ft [i,0]
and Ft [i,1] is higher than the threshold θ, into local whitelist
or blacklist as a supplement for further detection. Consider-
ing the dynamic nature of DNS, we only keep local label
information within 7 days.
5.1 Setup
We evaluate HinDom in two real-world networks: CERNET2
and TUNET. Our research has obtained permissions from the
relevant security management teams. The DNS-related data
we get has been processed to minimize privacy disclosure,
for example, the IP addresses of clients are desensitized by
numerical identiﬁers.
CERNET2, the second generation of China Education and
Research Computer Network. Jointly built by 26 universi-
ties, CERNET2 is the ﬁrst IPv6 national backbone network
in China and is the world’s largest next-generation Internet
backbone network using pure IPv6 technology. At present,
CERNET2 has 25 core nodes distributed in 20 cites with
2.5G ∼ 10Gbps bandwidth and provides IPv6 access services
for more than 5 million users in about 500 research institutes.
We capture DNS trafﬁc in CERNET2 at Tsinghua node.
TUNET, the campus network of Tsinghua University. By
statistics, we ﬁnd that over 0.24 million clients request about
1.5 million unique domains per day. With close supervision
and control, TUNET is much purer than CERNET2 and hides
less malicious domains.
In this research, we use DNS trafﬁc of CERNET2 to con-
struct its HIN and just use 360 pDNS dataset for data en-
richment. As for TUNET, due to permission restrictions, we
only get the logs of its central DNS resolver. The logs and
360 pDNS dataset are used respectively to construct HIN’s
domain-client part and domain-IP part. Besides, as for DNS
trafﬁc, we only use A, AAAA and CNAME records currently
and may expand to PDG, MX, SRV, NS, PTR for richer infor-
mation in the future.
Table 3: Description of the testing HIN instance
Clients
~0.49M
Nodes
Benign Domains Malicious Domains
IPs
~0.7M
~0.25M
~0.26M
Edges (C-clients,D-domains, IP-IPs,c-cname,s-similar)
C-C
D-c-D D-s-D
~93M ~112M ~1.3M ~15M
C-D
Nodes Total
IP-IP
~4.3M
D-IP
~3.1M
Edges Total
~228.7M
5 Experiments
~1.7M
In this section, we present comprehensive experiments to eval-
uate HinDom from three aspects: performance, robustness and
practicality. For performance, we ﬁrst analyze detection re-
sults and the corresponding weight of each meta-path to prove
the effectiveness of Meta-path Combiner. Then, we test Hin-
Dom in insufﬁcient labeling scenario and multi-classiﬁcation
To build the test dataset, we labeled about 1 million do-
mains queried in CERNET2 on 13 April 2018 by referring to
various whitelists/blacklists and expertise. For benign infor-
mation, we regard domains whose 2LD appear in Alexa Top
1K list [1] or our local whitelist as benign ones. For malicious
USENIX Association        22nd International Symposium on Research in Attacks, Intrusions and Defenses 405domains, we use multiple sources like Malwaredomains.com