理。
结果
✦自定义的应用程序
开发平台，以提供内置
的安全保护；
✦整个组织都期望在
开发过程中针对安全
做出更积极的努力；
✦根据业务需要，利益
相关者可以为安全设
计做出更好的权衡决
定。
额外成功指标
✦>50％的项目使用了
参考平台；
✦>80％的项目在过去
6个月里报告了框架、
模式和平台的使用反
馈信息；
✦对于项目组报告指
南和平台有用性>3.0
Likert值。
额外成本
✦建立或者许可参考
平台；
✦对参考平台正在进
行的维护和支持；
✦在审计过程中验证
使用的项目开支。
额外人员
✦经理（1天/年）
✦业务拥有者（1天/
年）
✦架构师（3－4天/年）
✦开发人员（2－3天/
年）
✦安全审计员（2天/
年）
相关等级
✦政策与遵守－2
✦设计审核－3
✦代码审核－3
✦安全测试－3
 58
设计审核
DR1 DR2 DR3
目标 为软件设计提供
专门的审核，以确
保排除已知风险
的最低线。
根据安全的最佳
实践为软件设计
审核提供评估服
务。
需求评估并验证
已完成部分，以详
细了解保护机制。
措施 A. 确定软件攻击
层面；
B. 根据已知安全
需求分析设
计。
A. 检查提供安全
机制的完整
性；
B. 为项目团队部
署设计审核服
务。
A. 为敏感资源开
发数据流图；
B. 为设计审核建
立发布关卡。
评估 ✦项目团队是否
记录软件设计的
攻击范围？
✦项目团队是否
按照已知的安全
风险检查软件设
计？
✦大多数项目团
队是否为安全机
制具体分析设计
元素？
✦大多数项目业
务拥有者是否知
道如何获得一个
正式的设计审
核？
✦设计审核过程
中是否包括详细
的数据级分析？
✦常规项目审计
是否需要一个设
计审核结果的最
低线？
结果 ✦非常了解架构
的隐含安全影响；
✦实现开发团队
对于安全最佳实
践而进行设计自
检；
✦执行项目级设
计审核的简便处
理。
✦正式提供评估
服务，以持续审核
架构的安全；
✦在维护模式和
原有系统中准确
找到安全漏洞；
✦项目利益相关
者对于软件如何
提供保护保证有
深入的了解。
✦系统设计过程
中弱点的细化粒
度，以鼓励更好的
区分；
✦整个组织都注
意到项目的架构
应符合基本安全
期望；
✦在已知缺陷减
少方面，对各项目
的效率和进展进
行比较。
59
设计审核 DR1
为软件设计提供专门的审核，以确保排除已知风险的最低线
措施
A. 确定软件攻击层面
为每个软件项目建立一个整体架构的简化视图。通常
情况下，应该基于项目对象，比如：高层次的需求和设计
文档、与技术人员面谈或基于代码模块级的审查。捕获系
统中的高层次模块非常重要，一个良好的细化略缩图规则
可确保整个系统的审核图在一页上就能显示。
根据每个单页的视图架构，分析每个组件的界面对于
授权用户、匿名用户、操作人员和应用程序特定角色等的
可访问性。根据单页视图的上下文，应考虑提供界面的组
件，以在图表上查找功能委派或传递到其他组件的数据。
将具有类似可访问性文档的界面和组件进行分组，以获得
作为软件的攻击层面。
对于每一个界面，进一步阐述单页视图，以记录任何
与安全相关的功能。根据已确定界面组组成的攻击面，检
查模型设计的一致性，以及如何保护具有类似访问权限的
界面。任何违反一致性的信息都会记录在评估结果中。
这一分析应由项目组内部或外部通晓安全问题的技术
人员执行。通常情况下，在初始建立完成后，当在设计阶
段对边缘系统界面进行添加或者更改时，只需在图表和攻
击层面更新即可。
B. 根据已知安全需求分析设计
无论是已正式还是非正式确认的安全需求，都应确定
并得到收集。另外，确定并包含系统安全操作所依靠的任
何安全假设。
根据系统架构的单页图表，审核已知安全要求列表上
的每一项。阐述该图表，显示针对每条安全需求的设计级
功能。如果系统较大或比较复杂时，则可创建独立的细分
图表，以简化捕获此信息的操作。总体目标是由系统设计
解决验证每一条已知的安全需求。任何未在设计级明确提
供的安全需求都应作为评估结果被记录。
这一分析应由通晓安全问题的技术人员执行，同时还
需架构师、开发人员、管理人员和组织拥有者的介入。当
安全需求或高级系统设计有所更改时，应在设计阶段对其
进行更新。
结果
✦非常了解架构的隐
含安全影响；
✦实现开发团队对于
安全最佳实践而进行
设计自检；
✦执行项目级设计审
核的简便处理。
成功衡量标准
✦>50％的项目在过去
12个月里更新了攻击
层面分析；