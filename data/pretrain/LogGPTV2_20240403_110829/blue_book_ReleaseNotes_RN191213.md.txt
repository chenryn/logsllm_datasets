## 191213 (AzSK v.4.4.0)
### Feature updates
* DevOps Kit controls expressed as Azure Policy (in progress):
    * This sprint we focused on testing & fine-tuning some of our authored policies and also added            clarifications for all the Azure PG task items in ADO (representing policies which are currently blocked for various reasons such as absence of alias, need custom code, etc.).
    * (No new update for Dec) So far, we have authored policies for 152 of approx. 250 controls. 
* Security Verification Tests (SVTs):
    * Added a new SVT for Azure Log Analytics.
* Control attestation workflow has been enhanced so that the updated control status reflects immediately on the   dashboard. This is accomplished by re-running the scan of recently attested controls as the last step of the    attestation workflow. In the past, the user had to manually rescan or wait for the next CA scan results to      reflect on the dashboard.
*	(Preview) AzSK module for Azure DevOps (ADO) 
    * Packaged the DevOps Kit scanner for ADO as a native ADO extension that can be used for continuous assurance for ADO security. This also includes widgets to visualize the scan results for various stakeholders (such as org admin, project owners, build/release owners etc.). 
    * Refer the documentation here for more information. 
    * You can also run the scanner in the native PowerShell mode using the instructions here.
* Privileged Identity Management (PIM):
    * N/A
* In-cluster security scans for ADB, AKS, HDI Spark:
    * N/A
* Log Analytics:
    * N/A.
* ARM Template Checker:
    * N/A.
* Org policy/external user updates (for non-CSEO users):
    * Added capabilities to setup AzSK to scan subscriptions across multiple tenants. Instructions will be available [here](https://aka.ms/devopskit/crosstenant) early next week. 
Note: The next few items mention features from recent releases retained for visibility in case you missed those release announcements:
*	Credential Hygiene helper cmdlets  
    * ```New-AzSKTrackedCredential``` to onboard a credential for tracking via DevOps Kit. You can set the reminder period (in days) for the credential.
    * ```Get-AzSKTrackedCredential``` to list the onboarded credential(s).
    * ```Update-AzSKTrackedCredential``` to update the credential settings and reset the last updated timestamp.
    * ```Remove-AzSKTrackedCredential``` to deboard a credential from AzSK tracking.
*	Privileged Identity Management (PIM) helper cmdlets (from last sprint)  
    * ```Set-AzSKPIMConfiguration``` (alias ```setpim ```)for configuring/changing PIM settings
    * ```Get-AzSKPIMConfiguration``` (alias ```getpim ```)for querying various PIM settings/status
    * Activating your PIM role is now as simple as this:
    ``` setpim -ActivateMyRole -SubscriptionId $s5 -DurationInHours 8 -Justification 'ad hoc test' -RoleName Owner ```
    * See docs [here](https://github.com/azsk/DevOpsKit-docs/blob/master/01-Subscription-Security/Readme.md#azsk-privileged-identity-management-pim-helper-cmdlets-1) for more.
*	(Preview) Security Scan for Azure Active Directory (AAD)
    *	You can scan security controls for your AAD tenant (as either an admin or even as a regular user) using the DevOps Kit AAD Security Scan module.
    *	Use following steps:
        ```Powershell
        # AAD scan cmdlets are packaged as a separate module (AzSK.AAD)
        Install-Module AzSK.AAD -Scope CurrentUser -AllowClobber
        Import-Module AzSK.AAD
        Get-AzSKAADSecurityStatusTenant    # check the tenant (admin)
        Get-AzSKAADSecurityStatusUser      # check objects you own (user)
        ``` 
    *	Caveats: 
        * Do not run these in the same PS session as AzSK. Start a new PS console.
        * Az- modules require .Net Framework v4.7.2.
        * By default, the current cmdlets will scan just 3 objects of each type (Apps/SPNs/Groups, etc.). This is until we work out how best to group/batch scans when scanning the entire tenant. If you want to scan more objects you can use the '-MaxObj' switch in the cmdlets.
*	(Preview) AzSK module for Azure DevOps (ADO/VSTS) 
    *	You can try the scan cmdlet using:
    ```Powershell
    #VSTS scan cmdlet is in a separate module called AzSK.AzureDevOps!
    Install-Module AzSK.AzureDevOps -Scope CurrentUser -AllowClobber    
    Get-AzSKAzureDevOpsSecurityStatus -OrganizationName "MicrosoftIT"`
                                        -ProjectNames "OneITVSO"`
                                        -BuildNames "build_name_here"`
                                        -ReleaseNames "release_name_here"  
    ```
### Other improvements/bug fixes
* Subscription Security:
    * Until last sprint, Azure_Subscription_AuthZ_Dont_Grant_Persistent_Access_RG control was being evaluated only via CA (because scanning the control for all RGs can take a lot of time.). We have now added support to query the result from CA scan and include it as a part of the local scan results. Moreover, if you want to force scan the actual control in local mode, you can do so by specifying the control id explicitly as shown in the command below:
    ```PowerShell
    gss -s ‘’ -cid ‘Azure_Subscription_AuthZ_Dont_Grant_Persistent_Access_RG’
    ```
    Note: Currently the PIM controls flag service accounts as well for persistent access. Due to limited access privilege of the CA service principal, we cannot determine if an account is a service account. As a result, we suggest using control attestation if you need to use service account in privileged roles.
* Privileged Identity Management (PIM):
    * N/A
* SVTs: 
    * N/A
* Controls:
    * Until now, we were considering control results for snoozed/deallocated VMs as control failures immediately. To accommodate scenarios for temporary snoozing etc., we have added support to retain last actual scan results for VM controls for 7 days. Note that this means a VM should be scanned live either manually or via CA at least once every 7 days.
    * Similarly, for clusters such as Kubernetes and Databricks, VMs that get spun up temporarily for job execution were being subject to full scan - resulting in dashboard churns. We have added exclusions for a subset of controls which may not make sense for such VMs.
    * Auto-fix (-GenerateFixScript) feature is now available for the control Azure_AppService_DP_Use_Secure_TLS_Version. 
* ARM Template Checker:
    *	The following new controls have been added to ARM Checker:
        * Azure_DBforMySQL_AuthZ_Review_AzureServices_Access
        * Azure_DBforMySQL_AuthZ_Verify_IP_Range 
        * Azure_DBforPostgreSQL_AuthZ_Review_AzureServices_Access 
        * Azure_DBforPostgreSQL_AuthZ_Verify_IP_Range
        * Azure_VirtualMachineScaleSet_Deploy_Monitoring_Agent
        * Azure_VirtualMachineScaleSet_SI_Enable_Antimalware
        * Azure_VirtualMachineScaleSet_SI_Enable_Auto_OS_Upgrade
        * Azure_VirtualMachineScaleSet_SI_Latest_Model_Applied
* CA:
    * N/A. 
* In-cluster CA:
    * Update-AzSKContinuousAssuranceForCluster has been optimized to update schedules and retain scan logs. 
* Azure DevOps (ADO/VSTS):
    * N/A.
* Log Analytics:
    * N/A.
* Other
    * N/A.