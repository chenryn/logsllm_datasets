参数
binlog cache size
max connect errors
InnoDB数据文件的目录
与replicate_wild ignore table相反，指定MySQL主从同步时需要同步的表
MySQL主从同步时忽略的表
MySQL二进制文件binlog保留的最长时间
如SQL语句没有使用索引，则将SQL语句记录到慢查询日志中
超过此值则认为是慢查询，记录到慢查询日志
是否开启慢查询，为1表示开启
主从同步时标识唯一的MySQL实例
MySQL二进制文件binlog的路径和文件名
MySQL创建表时默认的字符集
HEAP表允许的最大值
是MySQL随机读缓冲区大小
对数据表作顺序读取时分配的MySQL读入缓冲区大小
服务器和客户之间通信使用的缓冲区长度
临时表的最大大小
MySQL数据库事务隔离级别
每个连接创建时分配的内存
加入索引的词的最小长度
如查询结果超过此参数设置的大小将不进行缓存
为缓存查询结果分配的内存的数量
限制了一次有多少线程能进入内核
线程缓冲区所能容纳的最大线程个数
将为两个表之间的每个完全连接分配连接缓冲区
用来完成排序操作的线程使用的缓冲区大小
在事务过程中容纳二进制日志SQL语句的缓存大小
网络传输中，一次消息传输量的最大值
设置表高速缓存的数量
客户端连接指定次数后，服务器将屏蔽该主机的连接
MySQL允许的最太连接数
索引缓冲区，决定了myisam数据库索引处理的速度
MySQL默认字符集
在MySQL的连接请求等待队列中允许存放的最大连接数
跳过外部锁定
MySQL保存临时文件的路径
MySQL数据库相关的数据文件主目录
本地 socket方式登录MySQL时 socket文件路径
MySQL实例启动后监听的端口
MySQL实例启动后绑定的IP
说明
表6.2
MySQL配置文件常用参数说明
第6章搭建LAMP服务
---
## Page 164
6.2.7
CentOs7系统管理与运维实战
152
另外一种是通过命令行mysqld_safe启动。
/etc/systemd/system/multi-user.target.wants/mysqld.se
skip-name-resolve
slave compressed protocol
innodblockwaittimeout
innodb_max_dirty_pages_pct
innodb log files in group
innodb log file size
innodblogbuffer size
commit
innodb_flush_log_at_trx_
innodbthreadconcurrency
innodb file io threads
innodbbufferpoolsize
innodb_additional_mem_
innodb log group home dir
innodb data file_path
innodb file per table
pool size
In-s/usr/lib/systemd/system/mysqld.servicel
MySQL服务可以通过多种方式启动，
【示例6-38】
参数
[rootecentos mysgl]# systemctl
mysgld.serv
如使用yum工具安装，rpm包会自动将MySQL设置为系统服务，同时可以利用“service
1.通过系统服务启动与停止
-s/usr/lib/systemd/system/mysgld.service)
MySQL启动与停止
名称配置错误，MySQL将不能启动。
不同版本的配置文件参数及使用方法略有不同，具体可参考官方网站帮助文档。如果选项
Tice
井
跳过域名解析
主从同步时是否采用压缩传输binlog
InnoDB行锁导致的死锁等待时间
页到磁盘
当内存中的脏页量达到 innodb_buffer_pool 大小的该比例（%）时，刷新脏
Innodb日志个数
InnoDB日志文件大小
InnoDB日志缓冲区大小
Innodb日志提交方式
Innodb并发线程数
IO操作的最大线程个数
InnoDB存储引擎的表数据和索引数据的最大内存缓冲区大小
InnoDB存储的数据目录信息和其他内部数据结构的内存池大小
用来存放InnoDB日志文件的目录路径
Innodb数据文件位置
启用独立表空间
sten
说明
enable mysqld.servi
常见的是利用MySQL提供的系统服务脚本启动，
disabled
grep
续
表
---
## Page 165
status=O/SUccESS)`
status=O/succEss)
以使用【示例6-39】中的命令。
开机自动启动。
设置为开机自动启动模式。可以通过 systemctlenable mysqld.service 将 mysqld 系统服务设置为
-datadir=/var/lib/mysql--plugin-dir=/usr/lib64/mysgl/plugin
经过上述步骤，MySQL 成为系统服务并且开机自动启动，如需启动或停止MySQL，
首先利用 systemctl list-unit-files 查看系统服务，显示结果为 disable，表示MySQL 并没有
mysql
#利用ps命令查看MySQL服务相关进程
mysqld.service - MySQL Community Server
#安装完成后提供的默认配置文件
#查看MySQL启停控制单元
mysql
Main PID:2472(mysgqid_safe)
[root@Centos ~]# service mysqld
#查看MySQL启动状态
[root@Centos ~]# systemctl
#启动MySQL服务
[root@Centos ~]# cat -n/etc/my.cnf
【示例6-39】
Process: 2462 ExecStartPre=/usr/bin/mysql-systemd-start pre (code=exited,
CGroup:/system.slice/mysqld.service
Active:
Loaded: loaded (/usr/lib/systemd/system/mysqld.service;
10
S
2
pid-file=/var/run/mysqld/mysqld.pid
log-error=/var/log/mysgld.log
datadir=/var/lib/mysql
[mysqld_safe]
sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES
symbolic-links=0
socket=/var/lib/mysql/mysql.sock
[mysqld]
26232472015:42？
2472
-2623/usr/sbin/mysqid --basedir=/usr
1-2472 /bin/sh /usr/bin/mysqld_safe
active (running) since Tue 2015-04-14 15:42:38 csT; 38s ago
015:42？
status
00:00:00/usr/sbin/mysqld--basedir=/usr
00:00:00 /bin/sh /usr/bin/mysqld_safe
第6章搭建LAMP服务
enabled)
153
可
---
## Page 166
CentOS7系统管理与运维实战
154
了更多的信息。
用利用“systemctl status mysqld.service”或ps 命令查看MySQL服务状态。同时ps命令显示
户运行，然后利用系统服务启动MySQL，命令为“systemctl startmysqld.service”，启动后利
rsocket=/var/lib/mysql/mysql.sock
查看了通过rpm包安装后的配置文件内容，分别指定了datadir、socket和启动后以什么用
mysql> SELEcT version():
Oracle is a registered trademark of Oracle Corporation and/or
total 109M
#MySQL启动后默认的数据目录
root
rootecentos ~1# systemctl stop mysqld.servi
通过系统服务停止MySQL服务
mysql> quit
owners
affiliates. Other names may be trademarks of their respective
opyright
serven
Your MysQL connection id is 2
Welcome to the MySQL monitor.
rootecentos
登录测试
drwx-
5.6.24
rWx-
EW-rW--
rw-rw-
rw-rw-
rw-rw---
Te
version () I
"help;"
26681482015:44pts/0
or
J#mysg1
mysql mysql 4.0k Apr 14 15:25 performance_schema
mysgl mysql
mysgl mysql
mysgl mysql
mysql
mysql mysql
'\h' for help.
mysgl
/var/lib/mysgl
4.0K Apr
12MApr14 15:42ibdata1
48M Apr
48M Apr
Type
Apr
Apr1415:25
Commands end with ; or \g.
14 15:42 mysql.
14 15:25 ib_logfilel
14 15:25 mysgl
1500:00:00
its affiliates.
auto.cnf
ee
-color=auto mysgl
its
---
## Page 167
/data/mysql_data_3307
设置启动和停止过程。
假设MySQL数据文件目录位于/data/mysql_data_3307，端口设置为3307，【示例6-40】演示了
这时可以通过MySQL安装程序提供的mysqld_safe程序启动和停止MySQL服务。
-uroot”可以成功登录mysql。
--bind-address=192.168.146.150&
-user=mysql
[root@Centos~]#
150414 19:32:27 mysqld safe Starting mysqld daemon with databases from
total 109M
#部分结果省略
[root@Centos ~]# mysql_install db --datadir=/data/mysql_data_3307/
由于/var/lib/mysql为MySQL服务的默认数据目录，同时可以通过配置指定其他数据目录。
[rooteCentos -]# mysqld safe --datadir=/data/mysgl_data _3307
drwx--
drwx--
#查看系统表相关数据库
如同一系统中存在多个MySQL实例，使用MySQL提供的系统服务已经不能满足要求，
2.利用mysqld_safe程序启动和停止MySQL服务
如需停止MySQL，可以通过“systemctl stop mysqld.service”的方式停止MySQL。
MySQL成功启动后可以进行正常的操作了，初始化用户名为“root”,密码为空。使用“mysql
[1]7329
-rw-rw-
-rw-rw----
[root@Centos~]# 1s-1h/data/mysql_data_3307/
#部分结果省略
Filling help tables
Installing MysQL system tables..
[root@Centos ~]# chown
[root@Centos~]#mkdir-p/data/mysql_data _3307
【示例6-40】
rw-rw-
K
查看，如上述示例中的datadir位于/var/lib/mysql目录下。
如果MySQL服务后查看相关的数据目录和文件，除通过配置文件外，可以通过ps命令
1mysqlmysql
mysql mysql
mysql
mysgl
mysql
mysql
-Rmysql.mysql/data/mysql_data_3307/
4.0KApr
12MApr
48MApr
48MApr 1419:25ib_1ogfile0
1419:25mysql
1419:25ibdatal
1419:25
ib logfilel
第6章搭建LAMP服务
155
---
## Page 168
CentOS7系统管理与运维实战
156
545/mysqld
-datadir=/data/mysql_data 3307 --socket=/data/mysql_data_3307/mysgl.sock
[root@centos ]# ps-eflgrep mysgld_safe
Threads:
Jptime:
UNIX socket:
Conn.
client
Server
Connection:
Protocol versi
Server version:
Using
Using
Current pager:
SSL!
Current
connection
mysql
mysql>
owners.
affiliates.
racle
Copyright(c) 2000,2015,Oracle and/or its affiliates.All
Your MySOL
Welcome to the MysQL monitor.
root@Centos-]#mysgl
root
characterset:
delimite
outfile:
characterset:
characterset
Ver 14.14 Distrib 5.6.24, for Linux (x86_64) using EditLine wrapper
is a registered trademark of Oracle Corporation and/or its
user:
7576
7329 1482 0 19:32pts/0
id:
 connection id is
Questions:
other
Lon
1482
0192.168.146.150:3307
Not in use
stdout
root@localhost
min 21
latinl
latinl
latinl
latinl
ocalhost
sec
Commands end with;
via UNIX socket
da500:00:00
00:00:00/bin/sh /usr/bin/mysqld_safe
0.0.0.0:*
Flush
tables!
rights reserved.
-uroot
auto
LISTEN