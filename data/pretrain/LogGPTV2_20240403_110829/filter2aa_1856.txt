# How to Secure the Keyboard
## DEF CON 23
### Paul Amicelli, Baptiste David, CVO Esiea-Ouest
#### Creative Commons 2.0 - Attribution - NonCommercial - ShareAlike

---

### 1. Introduction
- **Talk Outline:**
  1. Background
  2. Keylogger Forms
  3. Main Idea of Our Work
  4. Details of Our Work
  5. Further Developments
  6. Conclusion

---

### 2. Keyloggers
- **Definition:**
  - A keylogger is a piece of software or hardware that records every keystroke on a computer.

---

### 3. Keylogger Forms
- **User Mode Keyloggers:**
  - Easy to develop and highly efficient.
  - Relatively easy to detect and remove.
- **Kernel Mode Keyloggers:**
  - Difficult to develop but extremely efficient.
  - Hard to detect and remove.
- **Hardware Keyloggers:**
  - Require physical access to the computer.
  - Most effective method.
  - Undetectable by software, but removal can vary in difficulty.

---

### 4. Proposed Solution
- **Encrypt Keystrokes:**
  - As close as possible to the hardware level.
  - Jamming keyloggers to prevent data capture.

---

### 5. Basic Understanding
- **Main Idea:**
  - Encrypt keystrokes at the lowest possible level.
  - Implement a jamming mechanism to disrupt keyloggers.

---

### 6. Technical Details
- **Keyboard Driver Stack:**
  - Focus on the keyboard driver stack for encryption.
- **Encryption Challenges:**
  - Direct encryption with a stream cipher is not feasible.
  - Only known keystrokes are broadcasted by Windows; others are inhibited.
  - Limited number of keystroke codes are allowed.
- **White List System:**
  - Use a white list system for input decision-making.
- **Jamming Solution:**
  - Exchange a 64-bit common key every 20 keystrokes.
  - Initiate a stream cipher with the common key.
  - Algorithm based on shuffling a deck of cards.

---

### 7. Encryption Scheme
- **Details:**
  - Specifics of the encryption scheme will be discussed.

---

### 8. API-Driver Communication
- **Details:**
  - Communication between the API and the driver will be explained.

---

### 9. Protection of the Protection
- **Monitoring:**
  - Monitor the keyboard driver stack.
  - Protect against DLL injection in the API.
  - Monitor the registry for any unauthorized changes.

---

### 10. Results
- **Is It Working?**
  - Present the results and effectiveness of the solution.

---

### 11. Further Developments
- **Endless Possibilities:**
  - Keystroke combinations.
  - Polymorphic on-screen keyboard.
  - Time-based keystrokes.
  - Mini-games, music, colors, etc.
  - Keep keystrokes in ring 0 (GostCrypt).

---

### 12. GostCrypt
- **Example:**
  - A full ring 0 password version will be demonstrated.

---

### 13. Project Status
- **Proof of Concept:**
  - Available on GitHub: [https://github.com/whitekernel/gostxboard.git](https://github.com/whitekernel/gostxboard.git)
  - Educational purpose.
  - Free and open-source, forever.
  - Call for participation.

---

### 14. Questions
- **Question Time:**
  - Open for questions and discussion.
  - Contact: PI:EMAIL - PI:EMAIL

---

**Paul Amicelli - Baptiste David - CVO Esiea-Ouest - cbna**

---

This revised version provides a clear, professional, and structured presentation of the content. Each section is clearly defined, and the flow of information is logical and easy to follow.