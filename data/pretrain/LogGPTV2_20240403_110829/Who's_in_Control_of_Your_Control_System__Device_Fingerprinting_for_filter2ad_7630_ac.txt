testing data. The average and minimum accuracy, precision,
and recall for these experiments are shown in Figure 7, and
suggests that even with time slices as small as 5 minutes an
average accuracy of 93% can be achieved. Some devices at
this substation were being polled only once every 2 minutes,
so the 5 minute detection time is roughly equivalent to a
decision after only two samples. Furthermore, when false data
is injected into a control system catastrophic damage usually
cannot immediately occur due to built-in safety features in the
system. The most successful attacks would sabotage equipment
or product over an extended period of time, for example by
tricking a control system into heating a reactor past its limits
and causing it to explode.
To demonstrate that the exact choice of machine learning
algorithm is largely irrelevant, we also attempted supervised
learning using one of the simplest algorithms in the literature,
a multinomial na¨ıve Bayes classiﬁer. The signature vectors
remained the same and similar experiments were conducted
to determine the required training period and detection time.
Furthermore, these tests were conducted to simulate a real
world deployment instead of randomly choosing training and
test data, the training data was taken from the beginning of the
capture and the test data was taken from the following 1000
detection time windows. After studying Figures 8a and 8b, it
is clear that the simple Bayes classiﬁer performs even better
6
Fig. 7. Fingerprint Classiﬁcation Performance Using FF-ANN
Fig. 9. Randomly generated samples from the unsupervised learned clusters
(a) Accuracy, precision, and recall of
supervised Bayes classiﬁer as a func-
tion of detection time
(b) Accuracy, precision, and recall as a
function of training time
(a) CLRT Distribution After network
Changes
(b) CLRT Distribution of Second Sub-
station
Fig. 10. Minor effects of network architecture on CLRT distributions
Fig. 8. Fingerprint classiﬁcation performance
than the more complex ANN and can achieve high accuracy
classiﬁcation with detection times as small as a few minutes.
The above results are extremely promising for supervised
learning when a list of IP addresses and corresponding device
types are available, but this is not the case for administrators
trying to understand what devices are on a poorly documented
legacy network. To address this scenario, unsupervised learn-
ing techniques were also applied and tested if they could
accurately cluster the devices into their true classes. Referring
back to Figure 6a, it is clear that the samples closely follow
a multivariate Gaussian distribution, so it was decided to
illustrate unsupervised learning with Gaussian mixture models
(GMM) using a full covariance matrix and a signature vector
consisting of means and variances with a time slice of one
day. Figure 9 shows the estimated clusters learned from
the GMM algorithm, which upon comparison with the true
clusters in Figure 6a, looks very similar. When the dataset
was tested against the learned clusters, the model achieved
an accuracy of 92.86%, a precision of 0.891, and a recall of
0.956. With performance as nearly as high as the supervised
learning methods, this unsupervised technique would allow
administrators to develop an accurate database of ﬁngerprints
with very little knowledge of the network itself.
Effect of Network Architecture. While the previous ex-
periments, simulating a real-world deployment with a training
period on the target network, performed very well, we also
wanted to study how much the network architecture affects
the performance of the ﬁngerprinting techniques. For the ﬁrst
experiment to study these effects, the original substation was
revisited over a year later after the network architecture had
been upgraded and polling frequency had been increased.
When the distribution of the new architecture in Figure 10a is
compared with the original in Figure 6b, there are only minor
differences. When the ﬁngerprints learned from the original
capture were tested on the new data, very high accuracies in
Figure 11a were obtained suggesting that the method is stable
over long periods of time and over minor changes in the same
network.
Even though the primary defensive use-case for this tech-
nique would always involve a training period on the target
network, we also consider the rare case where an administrator
is able to learn ﬁngerprints on one network because of known
labels, but does not have the labels for a different network. To
study this scenario, we learned ﬁngerprints from our original
capture and tested them on a different substation over a year
later. When the different substation’s distribution in Figure
10b is compared with the original there are some small, but
noticeable changes that could be result of the different archi-
tecture affecting the timings or from the different electrical
circuit affecting the load of the devices. When the ﬁngerprints
learned from the original capture were tested on this different
network, the average accuracy seemed to level off around 90%
suggesting that while the accuracy may be diminished across
different networks, there is still some utility in the technique.
the technique performs well on
different networks when trained individually, we trained a
Bayes classiﬁer on one hour of data from the second substation
and tested it on the remaining seventeen hours of data with the
results in Figure 12.
to show that
Finally,
B. Method 2: Physical Fingerprinting
The second proposed ﬁngerprinting approach addresses the
control half of SCADA systems by ﬁngerprinting physical
devices based on their unique physical properties. A series of
operation time measurements are taken and used to build an
7
the cross-sectional area,
N - Number of turns in the solenoid
I - the current, in amperes (A),running through the solenoid
A -
the
solenoidal magnet
g - the distance in meters, between the magnet and piece of
metal
µ0 - 4π ∗ 10−7 (a constant)
in meters-squared, of
(a) Classiﬁcation Performance After
Network Changes
(b) Classiﬁcation Performance Across
Substations
Fig. 11. Classiﬁcation Performance Across Networks
Fig. 12. Classiﬁcation Performance on Second Substation
estimated distribution and generate the signature in a similar
way as the ﬁrst method. The formal deﬁnition of the signature
in this case follows the same logic as Equation 1 above, but
with M being deﬁned as a set of operation time measurements
and H being a heuristic threshold chosen to be an estimate of
the maximum value an operation should ever take.
1) Theory: The mechanical and physical properties deﬁn-
ing how quickly a device operates differs between devices and
produces a unique ﬁngerprint. For example, this concept is
demonstrated by analyzing the difference in operation times of
a latching relay that uses a solenoid coil arrangement illustrated
in Figure 13. Relays were chosen for this research as they are
commonly used in ICS networks for controlling and switching
higher power circuits with low power control signals. The
electromagnetic force produced while energizing the solenoid
coil in a latching relay is directly proportional to current though
the solenoid, number of turns in the solenoid, and the cross
sectional area and type of core, as described by Equation 5.
F =
(N ∗ I)2u0A
2g2
(5)
Fig. 13. Diagram of two different latching relays
8
This electromagnetic force governs the operation time, and
modiﬁcation of any one of these variables due to differing
vendor implementations results in unique signatures. In addi-
tion to proposing a speciﬁc distribution for devices based on
vendor, individual physical operations like open or close will
also produce a difference in operation times, which again can
be attributed to the different forces involved in completing the
physical action.
When a breaker or relay responds to an operate command
from the master, an event change is observed at the slave
device. With unsolicited responses enabled in the slave device,
it asynchronously responds back with a message on an event
change, which can be observed with a network tap to calculate
the operation time. The response can also contain a sequence
of event recorder (SER) timestamp indicating the time that the
event occurred. Therefore, operation times can be estimated
based on two different methods:
1)
2)
Unsolicited Response Timestamps - Calculated by the
OS at the tap point by taking the difference between
the time at which the command was observed and the
time at which the response was observed. m = t3−t1
SER Response Timestamps - Calculated from the
difference between the time at which the command
was observed at the tap point and the application layer
event timestamp. m = t2 − t1
Fig. 14. Timing diagram to calculate Operation times
2) Experimental Setup: To demonstrate the proposed ap-
proach, the circuit breaker operation was chosen. The exper-
imental setup consisted of a DNP3 master from a C++ open
source DNP3 implementation (OpenDNP3 version 2.0), an
SEL-751A DNP3 slave and two latching relays to demonstrate
ﬁngerprinting based on operation time. At the tap point in
Figure 15, a C based DNP3 sniffer is used to sniff and parse the
DNP3 packets to perform deep packet inspection. At the same
tap point, the packets are timestamped by the Linux operating
system which is time synchronized by the same time source
as that of the DNP3 master and DNP3 slave.
times range from 16ms to 38ms for Vendor 1 and 14ms to
33ms for Vendor 2. Even though both devices have similar
ratings, the difference in operation can be attributed to the
difference in physical makeup between them. For example,
one device had a larger cross sectional area for its solenoid,
resulting in different forces produced by Equation 5 above.
When the same FF-ANN techniques as the ﬁrst method were
applied to classify the latches based on SER timestamped
operations, the accuracy leveled off around 86% as shown in
Figure 18a. Note that the large ﬂuctuations appear to be a result
of overﬁtting, causing one class’s performance to improve
signiﬁcantly at the cost of the other.
(a) Distribution of Close Operation
times based on SER Responses
(b) Distribution of Open Operation
times based on SER Responses
Fig. 17. SER based response times
Fig. 15. Experimental Test Setup-ﬁngerprinting breakers
The SEL-751A IED is a feeder protection relay supporting
Modbus, DNP3, IEC61850 protocol,
time synchronization
based on SNTP protocol, and a fast SER protocol which times-
tamps events with millisecond resolution. The experimental
setup for both relays consisted of a latching circuit (Figure
16a) and a load circuit (Figure 16b).
(a) Latching circuit for Latching Relay
(b) Load circuit for Latching Relay
(a) FF-ANN Classiﬁer Performance
(b) Bayes Classiﬁer Performance
Fig. 16. Circuits used in lab experiments
Fig. 18. Classiﬁcation Performance Based on Timestamped Close Operations
The latching circuit works on an operating voltage of
24VDC needing about 1A to operate and load circuit
is
based on 110V to be compatible with the IED’s inputs. On
a close command from the DNP3 master, the IED activates
a binary output energizing the latch coil to close the load
circuit. Once the load circuit is energized, the binary input
senses the change and a timestamped event is generated. On
an open command from the DNP3 master, the IED activates
the second binary output energizing the reset coil to open the
load circuit, which is recorded as a timestamped event. For
these experiments, 2500 DNP3 open and close commands were
issued simultaneously to both the latching relays with an idle
time of 20 seconds between operations. The commands and
responses were recorded at the tap point and operation times
were calculated using both the unsolicited response method
and SER based method. The unsolicited response method did
not produce any usable results, so the SER method results are
described below and retained as the physical ﬁngerprint.
3) Results: Difference between Vendors. The distributions
of close operation times based on SER timestamps for devices
from two different vendors are illustrated in Figure 17a. The
When the na¨ıve Bayes classiﬁer was applied to this prob-
lem slightly better results were obtained in Figure 18b that
leveled off around 92% accuracy, again suggesting that any
properly tuned machine learning algorithm would perform
well.
Figure 17b illustrates the distribution of open operation
times for the two different latches and shows little variation
between the two, thus preventing these times from being used
for accurate device ﬁngerprinting.
Difference between Operations. The previous results
found that Close operation times help distinguish between
relays of two different vendors, but it would also be desirable
to distinguish between types of operations for a single device,
for example to determine if a device had opened or closed in
response to a command. Figure 19b shows the distribution of
open and close operations for Vendor 1’s latching relay with
noticeable differences. These differences can be attributed to
the physical construction of the components that act to open
or close the relay, as discussed in detail in Section V.
On repeating the experiments for the second vendor’s relay,
the distribution of open and close operation times (Figure 19a)
9
default. A permanent magnet lies at a distance l along the
armature and is assumed to exert a magnetic force Fp at a
single point along the armature. Furthermore, the permanent
magnet is surrounded by a wire coil which carries the input
current α(t), and also applies a magnetic force Fc to the
armature. The magnetic ﬁeld from the coil pulse drives the
magnetic ﬁeld of the permanent magnet to be in the same
direction. After the driving ﬁeld is removed, the permanent
magnet holds the ﬁeld in the same direction by the property
of remanent magnetization. This process is what “latches” the
relay.
Fig. 20. Potter and Brumﬁeld Latch Relay (left), Mechanical Schematic of
Relay (right)
To switch the latch relay, a current is applied to the coil
surrounding the permanent magnet. Let this current be given
by the ﬁrst-order response,
α(t) = 1 − e−t/τ
(6)
where t = 0 corresponds to the time the switching command
is initiated and τ is an appropriate time constant. The magnetic
ﬁeld produced by the coil induces a change in the magnetic
ﬁeld properties of the permanent magnetic through remanence
[7]. To model this process, consider the function φ(t) given
by,
(7)
φ(t) =
tan−1(βα(t) − γ)
2
π
which approximately models the magnetic ﬁeld of the perma-
nent magnet as the current in the coil changes with time (where
β and γ are tuning parameters). Given this approximation of
the magnetic ﬁeld, the forces exerted on the armature by the
permanent magnet and coil are given respectively by,
Fp =
cpµ0
(r + R)2 φ(t)
Fc =
ccµ0
(r + R)2 α(t)
(8)
where cp and cc are constants describing the strength of
the magnet and µ0 is the magnetic permeability of air. The
equation of motion for the armature is thus,