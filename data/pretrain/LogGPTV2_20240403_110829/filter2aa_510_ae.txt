5 Mount the disk image.
6 Remove cache files, host-specific preferences, and virtual memory files. You can find 
example files to remove on the asr man page.
7 Unmount the volume and convert the read-write image to a read-only compressed 
image.
hdiutil convert -format UDZO pathtoimage -o compressedimage
8 Prepare the image for duplication by adding checksum information:
sudo asr -imagescan compressedimage
To restore a volume from an image:
$ sudo asr -source compressedimage -target targetvolume -erase
See the asr man page for command syntax, limitations, and image preparation 
instructions.
LL2354.book  Page 52  Monday, October 20, 2003  9:47 AM
7
53
7 Working With Users and Groups
Commands you can use to set up and manage users and 
groups in Mac OS X Server.
Creating Server Administrator Users
You can use the serversetup command to create administrator users for a server. To 
create regular users, see “Importing Users and Groups” on page 54.
To create a user:
$ serversetup -createUser fullname shortname password
The name, short name, and password must be typed in the order shown. If the full 
name includes spaces, type it in quotes. 
The command displays a 1 if the full name or short name is already in use.
To create a user with a specific UID:
$ serversetup -createUserWithID fullname shortname password userid
The name, short name, password, and UID must be typed in the order shown. If the full 
name includes spaces, type it in quotes. 
The command displays a 1 if the full name, short name, or UID is already in use or if the 
UID you specified is less than 100.
To create a user with a specific UID and home directory:
$ serversetup -createUserWithIDIP fullname shortname password userid 
homedirpath
The name, short name, password, and UID must be typed in the order shown. If the full 
name includes spaces, type it in quotes. 
The command displays a 1 if the full name, short name, or UID is already in use or if the 
UID you specified is less than 100.
LL2354.book  Page 53  Monday, October 20, 2003  9:47 AM
54
Chapter 7    Working With Users and Groups
Importing Users and Groups
You can use the dsimportexport command to import user and group accounts. 
Note:  Despite its name, dsimportexport can’t be used to export user records.
The utility is in /Applications/Server/Workgroup Manager.app/Contents/Resources.
For information on the formats of the files you can import, see “Creating a Character-
Delimited User Import File” on page 55.
$ dsimportexport (-g|-s|-p) file directory user password (O|M|I|A) [options]
To import users and groups:
1 Create a file containing the accounts to import, and place it in a location accessible 
from the importing server. You can export this file from an earlier version of Mac OS X 
Server or AppleShare IP 6.3, or create your own character-delimited file. See “Creating a 
Character-Delimited User Import File” on page 55.
Open Directory supports up to 100,000 records. For local NetInfo databases, make sure 
the file contains no more than 10,000 records.
2 Log in as the administrator of the directory domain into which you want to import 
accounts. 
Parameter
Description
-g|-s|-p
You must specify one of these to indicate the type of file you’re 
importing:
-g for a character-delimited file
-s for an XML file exported from Users & Groups in Mac OS X 
Server version 10.1.x 
-p for an XML file exported from AppleShare IP version6.x
file
The path of the file to import.
directory
The path to the Open Directory node where the records will be 
added.
user
The name of the directory administrator.
password
The password of the directory administrator.
O|M|I|A
Specifies how user data is handled if a record for an imported user 
already exists in the directory:
O:  Overwrite the matching record.
M:  Merge the records. Empty attributes in the directory assume 
values from the imported record.
I:  Ignore imported record and leave existing record unchanged.
A:  Append data from import record to existing record.
options
Additional command options. To see available options, execute the 
dsimportexport command with no parameters.
LL2354.book  Page 54  Monday, October 20, 2003  9:47 AM
Chapter 7    Working With Users and Groups
55
3 Open the Terminal application and type the dsimportexport command. The tool is 
located in /Applications/Utilities/Workgroup Manager.app/Contents/Resources.
To include the space in the path name, precede it with a backslash (\). For example:
/Applications/Utilities/Workgroup\ Manager.app/Contents/Resources
/dsimportexport -h
4 If you want, use the createhomedir tool to create home directories for imported users. 
See “Creating a User’s Home Directory” on page 63. 
Creating a Character-Delimited User Import File
You can create a character-delimited file by hand, using a script, or by using a database 
or spreadsheet application.
The first record in the file, the record description, describes the format of each account 
record in the file. There are three options for the record description:
• Write a full record description
• Use the shorthand StandardUserRecord
• Use the shorthand StandardGroupRecord
The other records in the file describe user or group accounts, encoded in the format 
described by the record description. Any line of a character-delimited file that begins 
with “#” is ignored during importing.
Writing a Record Description
The record description specifies the fields in each record in the character-delimited file, 
specifies the delimiting characters, and specifies the escape character that precedes 
special characters in a record. Encode the record description using the following 
elements in the order specified, separating them with a space:
• End-of-record indicator (in hex notation)
• Escape character (in hex notation)
• Field separator (in hex notation)
• Value separator (in hex notation)
• Type of accounts in the file (DSRecTypeStandard:Users or 
DSRecTypeStandard:Groups)
• Number of attributes in each account record
• List of attributes
For user accounts, the list of attributes must include the following, although you can 
omit UID and PrimaryGroupID if you specify a starting UID and a default primary group 
ID when you import the file: 
• RecordName (the user’s short name)
• Password 
• UniqueID (the UID)
• PrimaryGroupID
• RealName (the user’s full name)
LL2354.book  Page 55  Monday, October 20, 2003  9:47 AM
56
Chapter 7    Working With Users and Groups
In addition, you can include
• UserShell (the default shell)
• NFSHomeDirectory (the path to the user’s home directory on the user’s computer)
• Other user data types, described under “User Attributes” on page 57
For group accounts, the list of attributes must include
• RecordName (the group name)
• PrimaryGroupID (the group ID)
• GroupMembership
Here is an example of a record description:
0x0A 0x5C 0x3A 0x2C DSRecTypeStandard:Users 7
RecordName Password UniqueID PrimaryGroupID
RealName NFSHomeDirectory UserShell
Here is an example of a record encoded using the above description:
jim:Adl47E$:408:20:J. Smith, Jr., 
M.D.:/Network/Servers/somemac/Homes/jim:/bin/csh
The record consists of values, delimited by colons. Use a double colon (::) to indicate a 
value is missing.
Here is another example, which shows a record description and user records for users 
whose passwords are to be validated using the Password Server. The record description 
should include a field named dsAttrTypeStandard:AuthMethod, and the value of this 
field for each record should be dsAuthMethodStandard:dsAuthClearText:
0x0A 0x5C 0x3A 0x2C dsRecTypeStandard:Users 8
dsAttrTypeStandard:RecordName dsAttrTypeStandard:AuthMethod
dsAttrTypeStandard:Password dsAttrTypeStandard:UniqueID
dsAttrTypeStandard:PrimaryGroupID dsAttrTypeStandard:Comment
dsAttrTypeStandard:RealName dsAttrTypeStandard:UserShell
skater:dsAuthMethodStandard\:dsAuthClearText:pword1:374:11:comment:
Tony Hawk:/bin/csh
mattm:dsAuthMethodStandard\:dsAuthClearText:pword2:453:161::
Matt Mitchell:/bin/tcsh
As these examples illustrate, you can use the prefix dsAttrTypeStandard: when 
referring to an attribute, or you can omit the prefix.
Using the StandardUserRecord Shorthand
When the first record in a character-delimited import file contains 
StandardUserRecord, the following record description is assumed:
0x0A 0x5C 0x3A 0x2C DSRecTypeStandard:Users 7
RecordName Password UniqueID PrimaryGroupID
RealName NFSHomeDirectory UserShell
LL2354.book  Page 56  Monday, October 20, 2003  9:47 AM
Chapter 7    Working With Users and Groups
57
An example user account looks like this:
jim:Adl47E$:408:20:J. Smith, Jr., 
M.D.:/Network/Servers/somemac/Homes/jim:/bin/csh
Using the StandardGroupRecord Shorthand
When the first record in a character-delimited import file contains 
StandardGroupRecord, the following record description is assumed:
0x0A 0x5C 0x3A 0x2C DSRecTypeStandard:Groups 4
RecordName Password PrimaryGroupID GroupMembership
Here is an example of a record encoded using the description:
students:Ad147:88:jones,alonso,smith,wong
User Attributes
The following table lists standard XML data structures for attributes in user records.
Attribute
Format
Sample values
RecordName: 
A list of names associated 
with a user; the first is the 
user’s short name, which is 
also the name of the user’s 
home directory
Important:  All attributes 
used for authentication must 
map to RecordName.
First 
value:  ASCII 
characters 
A–Z, a–z, 0–9, 
_,-
Second value: 
UTF-8 Roman 
text
Dave
David Mac
DMacSmith
Non-zero length, 1 to 16 values. Maximum 255 bytes 
(85 triple-byte to 255 single-byte characters) per 
instance. First value must be 1 to 30 bytes for clients 
using Macintosh Manager, or 1 to 8 bytes for clients 
using Mac OS X version 10.1 and earlier.
RealName: 
A single name, usually the 
user’s full name; not used for 
authentication
UTF-8 text
David L. MacSmith, Jr.
Non-zero length, maximum 255 bytes (85 triple-byte 
to 255 single-byte characters).
UniqueID: 
A unique user identifier, used 
for access privilege 
management
Signed 32-bit 
ASCII string of 
digits 0–9
Range is 100 to 2,147,483,648.
Values below 100 are typically used for system 
accounts. Zero is reserved for use by the system. 
Normally unique among entire population of users, 
but sometimes can be duplicated.
Warning:  A non-integer value is interpreted as 0, 
which is the UniqueID of the root user.
PrimaryGroupID: 
A user’s primary group 
association
Unsigned 
32-bit ASCII 
string of digits 
0–9
Range is 1 to 2,147,483,648.
Normally unique among entire population of group 
records. If blank, 20 is assumed.
NFSHomeDirectory:
Local file system path to the 
user’s home directory
UTF-8 text
/Network/Servers/example/Users/
K-M/Tom King
Non-zero length. Maximum 255 bytes.
LL2354.book  Page 57  Monday, October 20, 2003  9:47 AM
58
Chapter 7    Working With Users and Groups
HomeDirectory: 
The location of an AFP-based 
home directory 
Structured 
UTF-8 text
  afp://server/sharepoint
  usershomedirectory
In the following example, Tom King’s home directory is 
K-M/Tom King, which resides beneath the share point 
directory, Users:
  afp://example.com/Users
  K-M/Tom King
HomeDirectoryQuota:
The disk quota for the user’s 
home directory
Text for the 
number of 
bytes allowed
If the quota is 10MB, the value will be the text string 
1048576.
MailAttribute: 
A user’s mail service 
configuration (refer to “Mail 
Attributes in User Records” 
on page 60 for information 
on individual fields in this 
structure)
Structured 
text 
kAttributeVersion
Apple Mail 1.0
kAutoForwardValue
PI:EMAIL
kIMAPLoginState
IMAPAllowed
kMailAccountLocation
domain.example.com
kMailAccountState
Enabled
kNotificationState
NotificationStaticIP
kNotificationStaticIPValue
[1.2.3.4]
kPOP3LoginState
POP3Allowed
kSeparateInboxState
OneInbox
kShowPOP3InboxInIMAP
HidePOP3Inbox
PrintServiceUserData
A user’s print quota statistics 
UTF-8 XML 
plist, single 
value 
Attribute
Format
Sample values
LL2354.book  Page 58  Monday, October 20, 2003  9:47 AM
Chapter 7    Working With Users and Groups
59
MCXFlags:
If present, MCXSettings is 
loaded; if absent, 
MCXSettings isn’t loaded; 
required for a managed user.
UTF-8 XML 
plist, single 
value
MCXSettings:
A user’s managed 
preferences
UTF-8 XML 
plist, single 
value
AdminLimits
The privileges allowed by 
Workgroup Manager to a 
user that can administer the 
directory domain 
UTF-8 XML 
plist, single 
value
Password: 
The user’s password
UNIX crypt
Picture:
File path to a recognized 
graphic file to be used as a 
display picture for the user
UTF-8 text
Maximum 32,676 bytes.
Comment: 
Any documentation you like
UTF-8 text
John is in charge of product 
marketing.
UserShell: 
The location of the default 
shell for command-line 
interactions with the server
Path name
/bin/tcsh
/bin/sh
None (this value prevents users with accounts in the 
directory domain from accessing the server remotely 
via a command line)
Non-zero length.
Authentication
Authority:
Describes the user’s 
authentication methods, 
such as Open Directory or 
crypt password; not required 
for a user with only a crypt 
password; absence of this 
attribute signifies legacy 
authentication (crypt with 
Authentication Manager, if 
it’s available).
ASCII text
Values describe the user’s authentication methods.
Can be multivalued (for example, basic and 
ShadowHash).
Each value has the format vers; tag; data (where vers 
and data may be blank).
Crypt password:  ;basic; 
Open Directory 
authentication:  ;ApplePasswordServer; HexID, server’s 
public key IPaddress:port 
Shadow password (local directory domain 
only):  ;ShadowHash; 
AuthenticationHint:
Text set by the user to be 
displayed as a password 
reminder
UTF-8 text
Your guess is as good as mine.
Maximum 255 bytes.
Attribute
Format
Sample values
LL2354.book  Page 59  Monday, October 20, 2003  9:47 AM
60
Chapter 7    Working With Users and Groups
Mail Attributes in User Records
The following table lists the standard XML data structures for a user mail attribute, part 
of a standard user record.
MailAttribute field
Description
Sample values
AttributeVersion
A required case-insensitive value that 
must be set to AppleMail 1.0.
kAttributeVersion
AppleMail 1.0
MailAccountState
A required case-insensitive keyword 
describing the state of the user’s mail. 
It must be set to one of these 
values:  Off, Enabled, or Forward.
kMailAccountState
Enabled
POP3LoginState
A required case-insensitive keyword 
indicating whether the user is allowed 
to access mail via POP. It must be set 
to one of these values: 
POP3Allowed or POP3Deny.
kPOP3LoginState
POP3Deny
IMAPLoginState
A required case-insensitive keyword 
indicating whether the user is allowed 
to access mail using IMAP. It must be 
set to one of these values: 
IMAPAllowed or IMAPDeny.
kIMAPLoginState
IMAPAllowed
MailAccountLocation
A required value indicating the 
domain name or IP address of the 
ProductName responsible for storing 
the user’s mail.
kMailAccountLocation
domain.example.com
AutoForwardValue
A required field only if 
MailAccountState has the value 
Forward. The value must be a valid 
RFC 822 email address.
kAutoForwardValue
PI:EMAIL
LL2354.book  Page 60  Monday, October 20, 2003  9:47 AM
Chapter 7    Working With Users and Groups
61
NotificationState
An optional keyword describing 
whether to notify the user whenever 
new mail arrives. If provided, it must 
be set to one of these 