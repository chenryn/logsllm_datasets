An Anti-Mitigation Exploit Generation 
Integrating with Metasploit Framework
Vince Chen
Software Quality Laboratory, NCTU
About me
Vince Chen
●
MS in Computer 
Science and 
Engineering of NCTU
●
Software Quality 
Laboratory
2
About SQLab
●
Advisor: Prof. Shih-Kun Huang
●
Current members:
 Ph.D student * 3
 MS student * 8
●
Central idea:
 Bug is Backdoor
 Finding Zero Days
 CTF、CGC
3
Outline
●
Anti-Mitigation (ROPChain)
●
Exploit Generation (CRAX)
●
Post-Exploitation (Metasploit)
4
How do you feel?
5
If you are a …
Programmer
6
Hacker
Return-to-stack attack
7
Protection mechanisms - DEP
8
Return-to-libc attack
9
Protection mechanisms - ASLR
10
Return-Oriented Programming (ROP)
●
RET instruction sequences 
(gadgets)
●
Unrandomized segment
11
ROP Sample
12
More Complicated?
13
ROPChain
14
●
Generate multi payloads
●
Use long gadgets
●
Integrate with AEG、
Metasploit
Defcon 2015 - fuckup
15
●
ELF 32-bit, static, NX
●
Re-randomize the text base
Defcon 2015 - fuckup
16
Long Gadget Side Effects
17
●
Inter/Intra-gadget dependency problem
●
Unconditional jump
Exploit Generation - CRAX
18
●
Transfer “Crash input” to “Exploit input”
Single Path Concolic Execution
19
●
Symbolic variable (x and y)
●
Path constraint 
(x > 0)  (2x + 1< 10)
●
Symbolic EIP
●
Constraint solver
CRAX
20
CRAX with ROPChain
21
Integration – Metasploit
Attacker set Metasploit handler
22
Demo
23
Summary
●
ROPChain:
 Truing complete ROP Payload API
 Generate bypassing DEP and ASLR payload
●
Exploit Generation (CRAX):
 Convert crash to anti-mitigation exploit
●
Post Exploitation Framework:
 Integrate Metasploit
 Make Post-exploit easier 
24
Thank you for listening.
25