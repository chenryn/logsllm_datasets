# DefCon 23, Las Vegas 2015
## Staying Persistent in Software Defined Networks
### Gregory Pickett, CISSP, GCIA, GPEN
#### Chicago, Illinois
#### PI:EMAIL
#### Hellfire Security

---

## Overview
- **White Box Ethernet**
- **Exploitation and Moving Forward**
- **Conclusion**

---

## What Is White Box Ethernet?
White Box Ethernet refers to standard hardware that can be used for software-defined networking (SDN). This hardware is often based on merchant silicon, such as Trident and Broadcom chipsets, and uses common processors like Intel, AMD, and PowerPC. The operating system is typically Linux-based.

### Key Features:
- **Standard Hardware**: A "blank slate" that can be configured with various network operating systems.
- **Flexibility and Control**: Essential for SDN, but can also be used without it.
- **Cost-Effective**: Reduces costs and provides flexibility and control.

### Open Compute Project (OCP)
- **Initiated by Facebook**: Aims to redesign existing technology to meet emerging needs.
- **Specifications**: For servers, storage, and data centers, designed to be efficient, inexpensive, and easy to service.
- **Vanity-Free and Minimalistic**: Not tied to brands or proprietary components, making them interchangeable.

---

## Open Network Install Environment (ONIE)
ONIE is a firmware for bare metal network switches, acting as a bootloader for network operating systems (NOS). It facilitates the installation and removal of NOS and comes pre-installed, automating switch deployment.

### Key Features:
- **Firmware**: For bare metal network switches.
- **Boot Loader**: Facilitates the installation and removal of NOS.
- **Automation**: Simplifies switch deployment.

---

## Potential Vulnerabilities
### Operating System Weaknesses
- **Privileged Accounts**: No root password, and no enforcement to change default passwords.
- **Management Services**: Uses Telnet and SSH, which can be vulnerable.
- **Installation and Recovery Modes**: Weak entropy in passwords.

### Installer Weaknesses
- **Predictable URLs**: Exact URLs from DHCPv4 and inexact URLs based on DHCP response.
- **IPv6 Neighbors and TFTP Waterfall**: Predictable file name search order and lack of encryption or authentication for installs.

### Implementation Weaknesses
- **Exposed Partition**: No secure boot, leading to potential firmware compromise.

### Network Operating Systems (NOS)
- **ONIE-Compatible Distributions**: Open Network Linux, Switch Light, Cumulus Linux, MLNX-OS.
- **Weaknesses**: Outdated OpenSSL, running as root, and vulnerable code.

---

## Exploitation Scenarios
### Compromise Methods
- **Rogue DHCP Server**: Can be used to inject malicious configurations.
- **IPv6 Neighbor and TFTP**: Can be exploited to deliver malicious payloads.
- **Sniffing/MiTM**: Intercept and modify traffic using Telnet or SSH.
- **Firmware Modification**: Gain persistent access by modifying ONIE.

### Demonstration
- **End-User System**: Windows system compromised via drive-by web attack or phishing email.
- **SDN Discovery**: Southbound API used to discover and exploit the network.
- **Backdoor Installation**: Plant and start binaries to create a backdoor.
- **ONIE Modification**: Modify `onie-nos-install` to ensure persistence even after upgrades.

### Malware Development
- **First Stage**: Python script compiled to a few megabytes.
- **Second Stage**: Custom netcat binary for further exploitation.

### Zero-Day Exploit
- **Cumulus Linux**: Command injection issues in command-line tools, allowing privilege escalation.

---

## Mitigation Strategies
### Hardware
- **Trusted Platform Module (TPM)**: Implement TPM for enhanced security, especially on x86 and PowerPC switches.

### Install Environment
- **Remove Telnet**: Use more secure protocols.
- **Increase Key Entropy**: Strengthen password security.
- **Force Password Change**: Enforce strong password policies.
- **Remove IPv6 and TFTP Waterfall**: Enhance security by removing unnecessary protocols.
- **Sign Installations**: Ensure the integrity of installed software.

### Operating Systems
- **Changeable Names**: Allow renaming of privileged accounts.
- **Tighten Shell Access**: Restrict shell access and use two-factor authentication.
- **Audit Switches**: Regularly check for password changes and ONIE partition hashes.

### Agents
- **Use TLS**: Implement encryption and authentication.
- **Coordinate Certificate and Key Distribution**: Use DevOps or SDN for secure management.

### Enterprise Architecture
- **Isolate Management Plane**: Protect the management plane from unauthorized access.
- **Jump Boxes**: Use jump boxes for secure access.
- **Audit Capability**: Implement logging and logic probes for better security monitoring.

---

## Final Thoughts
- **Security Importance**: Emphasize the importance of security in the development process.
- **Learning from Desktop and Server OS**: Leverage best practices from other domains.
- **Leverage Management Platforms**: Use DevOps and SDN controllers for enhanced security.
- **Potential of SDN**: Highlight the potential of SDN to transform the internet, but address the security gaps to prevent misuse.

### Links
- [Network Dictionary: White Brand Ethernet](http://etherealmind.com/network-dictionary-whitebrand-ethernet/)
- [ONIE Quick Start Guide](https://github.com/opencomputeproject/onie/wiki/Quick-Start-Guide)
- [ONIE CLI Reference](https://github.com/opencomputeproject/onie/wiki/CLI-Reference)
- [Open Network Linux Build Docs](http://opennetlinux.org/docs/build)
- [Open Network Linux Deploy Docs](http://opennetlinux.org/docs/deploy)
- [Big Cloud Fabric](http://www.bigswitch.com/sdn-products/big-cloud-fabrictm)
- [Switch Light](http://www.bigswitch.com/products/switch-light)
- [Big Switch Labs](http://labs.bigswitch.com)
- [Indigo GitHub](https://github.com/floodlight/indigo)
- [IVS GitHub](https://github.com/floodlight/ivs)
- [Cumulus Networks Documentation](http://docs.cumulusnetworks.com/)
- [Test Drive Open Networking](http://cumulusnetworks.com/get-started/test-drive-open-networking/)
- [Puppet and Cumulus Linux](https://puppetlabs.com/blog/puppet-cumulus-linux)
- [Puppet GitHub](https://github.com/puppetlabs/puppet)
- [Mellanox MLNX-OS](http://www.mellanox.com/page/mlnx_os)
- [HP Software Download](https://h20564.www2.hp.com/hpsc/swd/public/detail?swItemId=MTX_8adfcbf6e0834d5a82564b4825)
- [Mellanox eSwitchD](https://github.com/mellanox-openstack/mellanox-eswitchd)
- [ZeroMQ Manual](http://zeromq.org/intro:read-the-manual)

---

This optimized version aims to provide a clear, coherent, and professional presentation of the content, ensuring that the key points are highlighted and the structure is logical and easy to follow.