Flashback’s modulation scheme transforms a 32 bit control mes-
sage into a series of ﬂashes, by varying the distance between subse-
quent ﬂashed subcarriers. We also add an 8-bit CRC, which results
in a total message size of 40 bits. Control messages are a series of
9 ﬂashes sent one after the other in ﬁxed time intervals of 20µs.
Using a ﬁxed time interval between ﬂashes simpliﬁes the scheme,
and helps other nodes sense that a ﬂash message is being sent. The
scheme also ensures that on average, nodes do not exceed R ﬂashes
per second.
For this entire section, assume that we do not ﬂash on any pi-
lot subcarriers, zero padded subcarriers, as well as the subcarriers
adjacent to them. This leaves us with 36 subcarriers, which we log-
ically number from 0 to 35. In addition, the ﬁrst ﬂash in the control
message signals the start of the message, and is always sent on a
pre-designated subcarrier (34). We also do not ﬂash one subcarrier
on either side of the start-of-message subcarrier (i.e. 33 − 35).
The relative distance between two consecutive ﬂashed subcar-
riers is used to encode the control message. We use the relative
distance between consecutive ﬂashes, rather than the absolute posi-
tion of each one of the subcarriers, because in practice the carrier
Figure 3: The graph contains a sequence of frequency-domain
samples taken from a measurement conducted on our Flashback
implementation. The ﬂash is simple to discern from the data pack-
ets.
3.1.1 Flash Detection
The relatively high magnitude of ﬂashes relative to data symbols
makes them typically easy to detect. This is demonstrated by Fig. 3
where the magnitude of a single ﬂash is clearly visible against a
backdrop of regular OFDM data symbols. Flashes are of course
even easier to detect when the channel is already idle. Using the
same time-frequency OFDM abstraction, if the receiver sees a peak
value in one of the time-frequency slots, it declares that a ﬂash is
detected in that slot. To reliably detect the ﬂash and reduce false
positives that can be caused by practical effects such as frequency-
selective fading, Flashback uses a technique that uses the differen-
tial rather than the absolute value of the complex symbols.
Speciﬁcally, the receiver computes the following equation at ev-
(cid:80)1
m=−1
(cid:80)1
n=−1 |(|y(i, j)| − |y(i − m, j − n)|)|
ery (i, j) coordinate:
D(i, j) =
8
(2)
Where y(i, j) is the constellation value received on coordinate (i, j).
The receiver detects a ﬂash at coordinate (i, j) i.f.f. D(i, j) >
T , where T is an empirically determined threshold. In effect, the
equation above is computing the average differential value at (i, j).
D will be very high when there is a ﬂash, compared to a normal data
symbol. The detection threshold T depends on practical system
parameters such as receiver dynamic range and receiver gain.
There are a couple of practical issues with this detection algo-
rithm. First, in order to simplify the implementation, we assumed
that the ﬂash transmitter does not synchronize to the packet of the
data transmitter. Therefore, their respective time-frequency grids
won’t align perfectly. However, the receiver will synchronize to the
data transmitter’s grid since its primary goal is to decode the data
packet. Practically, this means that a ﬂash might span two time-slots
at the receiver. Since the ﬂash is now split, the ﬂash’s constellation
value might be half the maximum value. However, since ﬂashes
are sent at 64× the data symbol power, they are still likely to be
received at a much higher power magnitude than the value of the
data symbol and should be easy to detect. Performance can be fur-
ther improved if the receiver runs two parallel ﬂash detectors offset
from each other in time by half a time slot, i.e. 2µs. Intuitively, one
of the detectors will usually have a better alignment with the ﬂash-
ing node, and the receiver can pick the grid with the higher ﬂash
value, and send its corresponding slots to the ﬂash decoder. Sec-
ond, in order to reliably detect ﬂashes, we empirically measured
that the receiver requires the ﬂash power to be at least 6dB higher
than the power of the concurrent data packet. In some cases, this
might cause ﬂashes by a node that is far away from the AP to be
’drowned’ by nodes that are closer to the AP, and have signiﬁcantly
higher link SNRs. To mitigate this issue, the nodes with low chan-
Absolute Magnitude1.800.20.40.60.811.21.41.6OFDM Sample Number173013401400145015001550160016501700frequency of the ﬂashing node could be slightly offset relative to
the receiver’s. Hence a messaging technique that uses the relative
positions of the ﬂashes will be robust to carrier frequency offset
(CFO).
We take the bits that comprise the control message, and convert
the binary number they represent into a number composed of 8 dig-
its using base-32. A 40 bit message can always be represented us-
ing 8 digits in base-32. For example, assume the binary message is
represented by x1, . . . , x8 where xi is the i’th digit in the base-32
number. Therefore, if the start-of-message ﬂash was on subcarrier
f1, then the ﬁrst ﬂash (after the start-of-message ﬂash) would be
ﬂashed on subcarrier f2 = (f1 + x1) mod 32, the second on sub-
carrier f3 = (f1 + x1 + x2) mod 32 and so forth. To decode the
message, the receiver detects ﬂashed subcarriers f(cid:48)
9, and
calculates the values of x1, . . . , x8. For example, the formula for
x1 is given by (f(cid:48)
2) mod 32 = x1. The same formula is ap-
plied to the other ﬂashes. After it recovers the digits in base-32, the
receiver can then read the message by converting the base-32 num-
ber into its binary representation. Finally, it checks the message’s
integrity using the 8 bit CRC.
2, . . . , f(cid:48)
1 − f(cid:48)
1, f(cid:48)
Therefore, using our very simple coding scheme, Flashback can
send on average 32 bits every 180µs, which yields an overall bitrate
of about 175Kbps. 32 bit messages can be used for sending short
control requests. For example, the ﬁrst 10 bits in each message
can be used to encode the sender’s ID, and the last 22 bits can be
used for specifying the contents of the control message (e.g. ﬂow
identiﬁer, QoS request or a network association request). While
175Kbps is low by data transmission standards, our experiments
demonstrate that this rate is sufﬁcient support a practical Wi-Fi con-
trol channel.
We chose this simple scheme for a couple of reasons. First, it
ensures that there is a ﬁxed interval of 20µs between consecutive
ﬂashes, and as a result maintains a ﬁxed ﬂash rate, consistent with
R = 50, 000 ﬂashes per second. Second, by using the relative
distance between ﬂashes, the scheme is robust to CFO errors. Fi-
nally, it provides receivers a simple mechanism to detect errors,
since they know that a ﬂash should be expected only once every
20µs. In practice, we ﬁnd that ﬂash detection is fairly accurate, and
has low false negative and negligible false positive rates. Hence the
previous technique performs quite well.
3.3 Protocol for Sending a Flash
Flashback uses a carrier sense and random back off approach to
regulate which node ﬂashes at a particular time slot. Each node,
before it ﬂashes, performs a random back off, and counts down
the back off counter. Meanwhile, it carrier senses for the start-of-
message ﬂash subcarriers for any other node ﬂashing. If a ﬂash is
detected, it stops the countdown and restarts the counter after wait-
ing for 180µs, which is the time it takes to send a control message.
If no ﬂashes are detected and the counter goes to zero, then the node
ﬂashes the message. The average value of the random back off is
set so that nodes do not exceed R = 50, 000, the maximum number
of ﬂashes per second.
The protocol described above has similar problems to standard
carrier sense based MAC protocols. However, unlike traditional
Wi-Fi protocols, Flashback effectively exports the contention from
the data plane to the control plane. Therefore, control plane access
problems such as collisions, congestion and hidden nodes do not
directly affect the overall performance of the data plane. This ar-
chitecture is similar to most cellular control planes, where medium
access in the data plane is centrally scheduled, while the control
plane access is based on contention [13, 8].
Note that nodes can ﬂash only when the AP is not transmitting,
assuming the AP is half-duplex. Therefore, nodes have to decode
the data packets of data transmitters, in order to verify whether that
the AP is not transmitting a message. To acknowledge the control
messages, the AP piggybacks on the regular ACK it sends after
receiving a data plane transmission. This is an optimization; the
AP could also have used Flashback to send the control message
ACK.
3.4 Practical Issues
3.4.1
A practical concern is whether Flashback may interact destruc-
tively with neighboring networks, if they happen to be transmitting
on the same Wi-Fi channel (this problem usually occurs in very
dense networks). For example, an AP might detect ﬂashes from a
neighboring network and obtain incorrect control information. Fur-
ther, ﬂashing might hurt data plane transmissions on a neighboring
network, since the overall ﬂash rate might be higher than the limit
picked per network.
Interaction with Neighboring Networks
Flashback’s ﬂash encoding technique naturally combats the prob-
lem of neighboring APs mistakenly decoding ﬂash messages not
intended for them. Since each control message provides 32 bits,
several bits at the start of the message can be used to signal the
identity of the sending node. As long as the identity spaces don’t
overlap, each AP should be able to tell whether the control message
originated from its own network.
The second problem of multiple nodes concurrently ﬂashing is
largely avoided because of the “start-of-message" ﬂash, and due
to the ﬁxed length of control messages. Since before sending the
control message ﬂashes, nodes always send a start-of-message ﬂash
on special subcarriers (40), any node sensing it will refrain from
ﬂashing for 180µs. This applies to nodes across networks too. Of
course there are corner cases where such sensing fails, as in any
carrier sense mechanism.
Size of Flash Messages
Another concern is whether Flashback interacts poorly with nar-
rowband protocols like Bluetooth or Zigbee. Since we designed
Flashback to transmit ﬂashes on single Wi-Fi subcarriers (i.e., 312.5KHz),
Bluetooth and Zigbee, which occupy a much wider bandwidth (1M Hz
and 2M Hz respectively), do not interfere with the correct decoding
of Flashback control messages.
3.4.2
The messaging system described above assumes packets are long
enough to accommodate the nine ﬂashes that are needed to encode
a 32 bit message. If we assume a ﬂash rate of 50, 000 ﬂashes per
second, it translates to one control message every 180µs. However,
Flashback cannot send ﬂashes while the AP is transmitting, since
the AP won’t be able to decode the control message. Therefore,
the ﬂashing node detects if the AP starts transmitting in the middle
of sending a ﬂash message. If so, it abandons the incomplete ﬂash
message and retries to send it at the next available opportunity.
3.4.3 Automatic Gain Control (AGC)
Another concern is that ﬂashing may interact negatively with au-
tomatic gain control at the receiver. Speciﬁcally, the AGC tries to
exploit the full dynamic range of the ADC, by automatically am-
plifying the incoming signal by the right amount, so that it ﬁts the
entire ADC range. However, when a ﬂash arrives, since its value
will be higher than the normal data transmission, the ADC can get
saturated. In order to tackle this problem, we use static gain control.
Speciﬁcally, our current system uses a 14 bit ADC that provides
86dB of dynamic range. Assuming that in the best case, we will
see data transmissions with an SNR of 35dB (˜6 ADC bits), we can
set the static gain so that the best case data message will consume
Figure 4: The National Instruments software deﬁned radios we
used to implement Flashback and carry our experiments.
Figure 6: Flashback receiver implementation.
receiver, we added three blocks to the receiver chain: the ﬂash de-
tector, ﬂash demodulator and ﬂash eraser. The ﬂash detector is al-
ways turned on by the receiver, because ﬂashes can be received at
any time.
The ﬂash detector was implemented by utilizing the simple peak
detector described in Sec. 3.1.1. The peak detector runs twice over
the same samples, by reusing the same DSP hardware blocks of the
OFDM receiver. The ﬁrst peak detector is synchronized with the
data packet, and the second one is offset from the ﬁrst one by half a
time slot, i.e. it is synchronized to 2µs after the ﬁrst peak detector.
If we detect a ﬂash in the ﬁrst ﬂash detector, we only erase one
subcarrier from the data packet. If we detect a ﬂash in the offset
ﬂash detector, we erase the ﬂashed subcarrier from the two data
symbols it affected. We found that this ’aggressive’ ﬂash detection
technique improves our ﬂash detection error rates while reducing
data errors.
The ﬂash demodulator is very similar to the transmitter’s ﬂash
modulator: it transforms the time-frequency ﬂash grid into a binary
sequence by converting a base-32 number into a binary number.
Before sending the data into the Viterbi decoder, the ﬂash eraser
sets the conﬁdence level of all the ﬂashed bits (i.e. bits belonging
to the ﬂashed subcarriers) to 0. This signals to the Viterbi decoder
that it should erase these bits from the data stream.
5. EXPERIMENTAL BENCHMARKS
In order to test Flashback, we benchmark Flashback’s perfor-
mance with two metrics.
Maximum Flash Rate (R): The maximum number of ﬂashes
per second that can be sent without harming data throughput.
Flashback Detection Accuracy: The false positive and false
negative rates of detecting ﬂashes at the receiver.
5.1 Maximum Flash Rate
As we discussed in Sec. 2, the link margin depends primarily on
two factors: the discrete bitrates and the conservative SNR estima-
tion of the bitrate adaptation algorithm. In practice, it also depends
on a third factor, which is the level of interference. Bursty exter-
nal interference will hurt the SNR estimation of the bitrate adap-
tation algorithm (i.e., the algorithm will interpret the interference
as noise), which will cause the algorithm to behave more conserva-
tively and increase the link margin.
We experimentally evaluate the impact these three factors on the
maximum ﬂash rate. All experiments were conducted during night-
time at our lab on the Wi-Fi band of 2.48Ghz. In order to estimate
the SNR for the data packets, we sent known packets. We then esti-
mated the channel’s noise by subtracting the known symbols from
the received symbols. In order to estimate the effect of interference,
we generated a trace of Zigbee and Bluetooth and added it as noise
to our channel sounder’s trace.
Discrete Bitrates: Our experimental setup consists of three nodes.
Figure 5: Flashback transmitter implementation.
8 bits of ADC resolution (leaving us with a margin of 2 extra bits).
This leaves 6 bits or 36dB for decoding ﬂashes, which is more than
sufﬁcient in practice.
4.
IMPLEMENTATION
We implemented the Flashback receiver and transmitter using