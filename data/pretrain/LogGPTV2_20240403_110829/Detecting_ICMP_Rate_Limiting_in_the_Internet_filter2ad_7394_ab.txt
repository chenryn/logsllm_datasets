In Sect. 5.2 we show that our algorithm is correct in the remaining large
regions (Non-RL and RL-Sat), provided P  0.1 (line 3) is
derived by substituting P > 1.1L, the lower bound of RL-Sat phase (where we
start to detect rate limit), into availability model (Eq. 1). Test ˆAH / ˆAL  TrejL (RL-Rej phase, where we give up
detection), into availability model (Eq. 1).
Once a target block is detected as rate limited, we estimate its rate limit
(ˆL) by Eq. 4 which is derived by inverting our availability model (Sect. 2.2).
(We estimates the eﬀective rate limit at each target/24 block, or the aggregate
rate limit of intermediate routers across their covered space. We do not try to
diﬀerentiate between individual hosts in a /24 block because two scans provide
too few information about host).
4 Results: Rate Limiting in the Wild
We next apply FADER to existing public Internet scan datasets to learn about
ICMP rate limiting in the Internet. (We validate the algorithm later in Sect. 5.)
4.1 How Many Blocks Are Rate Limited in the Internet?
We ﬁrst apply FADER to ﬁnd rate limited blocks in the Internet, conﬁrming
what we ﬁnd with additional probing.
Input data: We use existing Internet censuses and surveys as test data [10].
Reusing existing data places less stress on other networks and allows us to con-
ﬁrm our results at diﬀerent times (Sect. 4.2). Table 1 lists the public datasets we
use [8].
Table 1. Datasets used in this paper
Start date (duration)
Size (/24
blocks)
Alias
Full name
2016-08-03 (32 days)
14,460,160
it71w census internet address census it71w-20160803
2016-08-03 (14 days)
40,493
it71w survey internet address survey reprobing it71w-20160803
2016-06-02 (32 days)
14,476,544
it70w census internet address census it70w-20160602
2016-06-02 (14 days)
40,493
it70w survey internet address survey reprobing it70w-20160602
Detecting ICMP Rate Limiting in the Internet
9
Table 2. it71w detection results
Table 3. Eﬀects of each FADER step
Blocks studied 40,493 (100%)
Not-rate limited 24,414 (60%)
Cannot tell
15,941 (39%)
Rate limited
False positives
111
105
True positives
6
(0.27%)
(100%)
(95%)
(0.25%)
(0.015%) (5%)
Test name
Number of blocks (ratio)
Input Passed
Filtered
Availability diﬀ 40,403 2,088 (5.2%) 38,315 (94.8%)
Freq alternation 2,088 111 (5.3%)
1,977 (94.7%)
Re-probing
111
5 (4.5%)
106 (95.5%)
Censuses (0.0001 pings/s per block) and surveys (0.39 pings/s per block)
deﬁne the low- and high-rates that bound rate limits detected by our algorithm.
We could re-run FADER with higher rates to test other upper bounds; we report
on existing higher rate scans in Sect. 4.3.
Surveys probe about 40k blocks about 1800 times over two weeks, support-
ing frequent alternation detection. Censuses cover almost the entire unicast IPv4
Internet, but we use only the part that overlaps the survey. With a 2% of the
responsive IPv4 address space, randomly chosen, our data provides a represen-
tative of the Internet.
Initial Results: Here we apply FADER to it71w, the latest census and survey
datasets, in Table 2. We ﬁnd that most blocks are not rate limited (60%), while a
good number (39%) are “cannot tell”, usually because they are barely responsive
and provide little information for detection (without additional information, no
one could tell if these blocks are rate limited or not). However, our algorithm
classiﬁes a few blocks (111 blocks, 0.27%) as apparently rate limited.
Validation with additional probing: To conﬁrm our results, we next re-
examine these likely rate-limited blocks, We re-probe each block, varying probing
rates from 0.01 to 20 ping/s per block to conﬁrm the actual rate limiting. Our
additional probing is relatively soon (one month) after our overall scan.
Figure 4 shows this conﬁrmation process for one example block. Others are
similar. In this graph, red squares show modeled availability assuming the block
is rate limited (given the rate limit estimation from FADER in Table 4). The
green line with diamonds shows the availability if the block is not rate limited.
As Fig. 4 shows, this block’s measured availability (blue dots) tightly matches
the modeled value with rate limiting while diverging from values without rate
limiting. We also apply similar conﬁrmation process to this block’s measured
response rate (omitted, but details in our technical report [9]). These data show
that this block, 182.237.200.0/24, is rate limited.
Although this example shows a positive conﬁrmation, we ﬁnd that most of
the 111 blocks are false positives (their availabilities and response rates in re-
probing do not match rate limit models). Only the 6 blocks listed in Table 4
are indeed rate limited. We design our algorithm to favor false positives for
two reasons. First, favoring false positives (by using necessary conditions as
detection signals) avoids missing rate-limited blocks (false negatives). Second,
this trade-oﬀ (favoring false positives over false negatives) is required to conﬁrm
the near-absence of rate limiting we observe. We rule out the possibility that
10
H. Guo and J. Heidemann
Table 4. True rate limited blocks in it71w census and survey.
/24 Block
124.46.219.0
Availability rate limit (ping/s per blk)
Response rate
(measured, pkts/s) ( ˆAL, %) (measured) (estimated)
0.009
0.09
9.77
0.09
124.46.239.0
0.08
182.237.200.0 0.06
182.237.212.0 0.04
182.237.217.0 0.06
202.120.61.0
0.35
53.13
58.98
27.34
49.61
17.58
0.15
0.10
0.15
0.12
1.99
0.12
0.12
0.10
0.13
0.32
these false positives are caused by concurrent high-rate ICMP activities at our
target blocks by observing over long duration and at diﬀerent times (Sect. 4.2).
We use additional veriﬁcation to conﬁrm true positives. Among the 6 rate
limited blocks, 5 belong to the same ISP: Keumgang Cable Network in South
Korea, while the last block is from Shanghai Jiaotong University in China. We
have contacted both ISPs to conﬁrm our ﬁndings, but they did not reply.
Fig. 4. Conﬁrming
block
182.237.200/24 is rate lim-
ited with additional probing.
(Color ﬁgure online)
Fig. 5. FADER validation: with packet loss
Our ﬁrst conclusion from this result is there are ICMP rate-limited blocks,
but they are very rare. We ﬁnd only 6 blocks in 40k, less than 0.02%. Thus it is
almost always safe to probe in this range (up to 0.39 packets/s per block).
Second, we see that each of FADER’s steps rule out about 95% of all the
blocks entering that rule (as in Table 3). However, even after two phases of
ﬁltering, there is still a fairly high false positive rate in the remaining blocks,
since only 6 of 111 (5.4%) are ﬁnally conﬁrmed as rate limited.
Finally, we show that when we detect rate limiting, our estimate of the rate
limit are correct in general. Table 4 shows this accuracy: ﬁve out of six rate limits
observed in re-probing (which is estimated by measuring ˆR , ˆAL and inverting
our response-rate model Eq. 2) closely match FADER’s estimates.
Detecting ICMP Rate Limiting in the Internet
11
However our rate limit estimation (0.32 ping/s per block) for block
202.120.61/24 is 5 times smaller than the rate limit (1.99 pings/s per block)
observed in re-probing. When we review the raw data, we believe the rate limit
for this block changed between our measurements.
4.2 Verifying Results Hold over Time
To verify our approach works on other datasets, we also apply FADER to it70w
census and survey data. This data is taken two months before it71w and sharing
76% of the same target blocks. Detection results of it70w data agrees with our
previous conclusion, resulting in about the same number of blocks identiﬁed as
rate limited (0.3%, 138 of 40,493), and the same fraction as actually limited
(0.012%, 5). Of blocks that we conﬁrm as rate limited after re-probing, four also
are detected and conﬁrmed in it71w. The ﬁfth, 213.103.246.0/24, is from ISP
Swipnet of Republic of Lithuania and is not probed in it71w.
We observe inconsistencies between it70w and it71w for two blocks:
124.46.219.0/24 and 202.120.61.0/24 (detected as rate-limited in it71w, but as
Can-Not-Tell and Not-Rate-Limited respectively in it70w) We believe the for-
mer block is hard to measure: with only 25 (9.8%) responsive addresses, and the
latter actually changed its use between the measurements (supporting details in
our technical report [9]).
4.3 Is Faster Probing Rate Limited?
Having shown that rate-limited blocks are very rare up to 0.39 packets/s, we
next evaluate if faster probing shows signs of rate limiting, as advocated by
ZMap [2] and Yarrp [3].
We study Zippier ZMap’s 50-s TCP-SYN probing datasets (private dataset
obtained from the authors [1], the public ZMap datasets are lower rates), from
0.1M to 14M packet/s, which we estimate as 0.007 to 0.97 packets/s per /24
block. We show rate limiting could explain the response drop-oﬀ at higher rates.
Although both our models and FADER are originally designed for ICMP rate
limiting, they also detect TCP-SYN rate limiting because they detect the actions
of the underlying token bucket.
ZMap performs a series of 50-s experiments from 0.1M to 14M packets/s [2].
Each experiment targets a diﬀerent random sample of a 3.7 billion IP pool. Their
results show overall availability (the fraction of positive responses of all hosts
that are probed) is roughly stable up to 4M packets/s. However, when probing
rates exceed 4M packets/s, the availability starts to decline linearly (the blue
dots in Fig. 6, from their paper [2]). They state that they do not know the exact
reason for this decline.
We believe rate limiting explains this drop—once rate limits are exceeded,
as the packet rate increases, availability drops. We also believe that there are
roughly the same amount of rate limiting at each packet rate between 4M and
14M packets/s in the Internet, causing the overall availability drop to be linear.
12
H. Guo and J. Heidemann
We would like to apply FADER directly to Zippier ZMap’s 50-s probing
results. Unfortunately we cannot because the target IPs are not known for each
run (they do not preserve the seed, so we do not know addresses that do not
respond), and they do not repeat addresses, so we cannot test response alter-
nation. (We chose not to collect new, high-rate ZMap data to avoid stressing
target networks.) However, we can statistically estimate how many addresses do
no not respond, allowing us to evaluate rate-limiting for high-rate scans (up to
14M packets/s).
We create a model of their measurement process and show rate limiting
can explain their drops in response rate. Full details of this model are in our
technical report [9]. We show availability of many ZMap target blocks matches
our expectation of rate limiting by statistically estimating the number of IPs