# Resource Script Commands

## Command Description
...

## Database Backend Commands

### Command Description
- **db_nmap**: Executes `nmap` and records the output automatically.
- **hosts**: Lists all hosts in the database.
- **loot**: Lists all loot in the database.
- **notes**: Lists all notes in the database.
- **services**: Lists all services in the database.
- **vulns**: Lists all vulnerabilities in the database.
- **workspace**: Switches between database workspaces.

## Credentials Backend Commands

### Command Description
- **creds**: Lists all credentials in the database.

## Developer Commands

### Command Description
...

---

# Penetration Testing with Kali Linux

## Workspaces in Metasploit

Before diving into operations within Metasploit, it's important to understand the concept of workspaces. During a penetration test, Metasploit stores all information about the target and its infrastructure in the database. When starting a new penetration test, this information still exists in the database. To avoid mixing results from different assessments, we can use workspaces.

The `workspace` command lists all previously created workspaces. We can switch to a specific workspace by adding the name to the command. To create a new workspace, we use the `-a` option followed by the workspace name.

Let's create a workspace named `pen200` where we'll store the results of this section and the next one.

```bash
msf6 > workspace
* default
msf6 > workspace -a pen200
[*] Added workspace: pen200
[*] Workspace: pen200
```

Once created, Metasploit will use it as the current workspace.

## Populating the Database with `db_nmap`

Now, let's populate the database and get familiar with some of the Database Backend commands. We'll scan `BRUTE2` using `db_nmap`, which is a wrapper to execute `nmap` inside Metasploit and save the findings in the database. The command syntax is identical to `nmap`.

```bash
msf6 > db_nmap -A 192.168.50.202
[*] Nmap: Starting Nmap 7.92 (https://nmap.org) at 2022-07-28 03:48 EDT
[*] Nmap: Nmap scan report for 192.168.50.202
[*] Nmap: Host is up (0.11s latency).
...
[*] Nmap: Nmap done: 1 IP address (1 host up) scanned in 67.72 seconds
```

## Listing Discovered Hosts and Services

To list all discovered hosts, we use the `hosts` command:

```bash
msf6 > hosts
Hosts
=====
address     mac   name    os_name  os_flavor  os_sp  purpose  info  comments
-------     ---   ----    -------  ---------  -----  -------  ----  --------
192.168.50.202  Windows 2016 server
```

To list all discovered services, we use the `services` command. We can also filter for a specific port number by providing it as an argument for `-p`:

```bash
msf6 > services
Services
========
host          port  proto  name         state  info
----          ----  -----  ----         -----  ----
192.168.50.202  21    tcp   ftp          open
192.168.50.202  135   tcp   msrpc        open   Microsoft Windows RPC
...
msf6 > services -p 8000
Services
========
host          port  proto  name         state  info
----          ----  -----  ----         -----  ----
192.168.50.202  8000  tcp   http         open   Golang net/http server Go-IPFS json-rpc or InfluxDB API
```

## Reviewing Modules

Before moving on, let's briefly review modules. Modules are used to perform tasks in Metasploit such as scanning or exploiting a target. The framework includes several thousand modules, divided into categories. These categories can be viewed with the `show -h` command.

```bash
msf6 > show -h
[*] Valid parameters for the "show" command are: all, encoders, nops, exploits, payloads, auxiliary, post, plugins, info, options
[*] Additional module-specific parameters are: missing, advanced, evasion, targets, actions
```

## Auxiliary Modules

The Metasploit Framework includes hundreds of auxiliary modules that provide functionality such as protocol enumeration, port scanning, fuzzing, sniffing, and more. To list all auxiliary modules, we can run the `show auxiliary` command.

```bash
msf6 auxiliary(scanner/portscan/tcp) > show auxiliary
Auxiliary
=========
Name                                      Rank  Description
----                                      ----  -----------
...
auxiliary/scanner/smb/smb_version        normal SMB Version Detection
...
```

We can use the `search` command to filter the output. For example, to find all SMB auxiliary modules, we can use:

```bash
msf6 > search type:auxiliary smb
Matching Modules
================
#   Name                                        Disclosure Date  Rank  Check  Description
-   ----                                        ---------------  ----  -----  -----------
...
56  auxiliary/scanner/smb/smb_version        normal            No    Fingerprint and display version information about SMB servers
...
```

To activate a module, we can use the `use` command followed by the module name or index. Let's activate the `smb_version` module with index 56.

```bash
msf6 > use 56
msf6 auxiliary(scanner/smb/smb_version) >
```

To get information about the currently activated module, we can use the `info` command.

```bash
msf6 auxiliary(scanner/smb/smb_version) > info
Name: SMB Version Detection
Module: auxiliary/scanner/smb/smb_version
License: Metasploit Framework License (BSD)
Rank: Normal
Provided by: hdm, Spencer McIntyre, Christophe De La Fuente
Check supported: No
Basic options:
Name      Current Setting  Required  Description
----      ---------------  --------  -----------
RHOSTS    yes              The target host(s), see https://github.com/rapid7/metasploit-framework/wiki/Using-Metasploit
THREADS   1                The number of concurrent threads (max one per host)
Description:
Fingerprint and display version information about SMB servers. Protocol information and host operating system (if available) will be reported. Host operating system detection requires the remote server to support version 1 of the SMB protocol. Compression and encryption capability negotiation is only present in version 3.1.1.
```

The `show options` command displays the options of the module, including required settings.

```bash
msf6 auxiliary(scanner/smb/smb_version) > show options
Module options (auxiliary/scanner/smb/smb_version):
Name      Current Setting  Required  Description
----      ---------------  --------  -----------
RHOSTS    yes              The target host(s)...
THREADS   1                The number of concurrent threads (max one per host)
```

---

**PWK - Copyright Â© 2023 OffSec Services Limited. All rights reserved.**
**Made in Morocco**