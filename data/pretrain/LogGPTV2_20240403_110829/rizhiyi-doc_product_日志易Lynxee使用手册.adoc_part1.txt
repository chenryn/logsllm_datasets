= 日志易Lynxee使用手册
北京优特捷信息技术有限公司
v1.9，2023-02-01
== 日志易 Lynxee 应用概述
=== 什么是 日志易 Lynxee 应用
Lynxee 应用是日志易基于自身强大的数据检索平台功能，结合丰富的 IT 运维知识，打造的智能运维系统。应用名称来自北天星座中的天猫座，天猫座里全是暗星，只有视力如同山猫一样尖锐的人才能发现。日志易 Lynxee 应用，正是利用人工智能算法，帮助用户主动发现和排查平常难以发现的问题。
=== Lynxee 基本概念
image::images/lynxee-overview.png[]
本节介绍 Lynxee 中涉及的一些常见的 IT 名称，及其在本应用中的概念。
服务::
服务是由作用于同一个业务目的的 IT 对象组成的逻辑集合。就目前而言，我们采用广义的服务概念来组织日志易 Lynxee 的结构。服务既可以是业务层面的，也可以是技术层面的。比如：
* 一个业务层，比如在线商城
* 一个业务渠道，比如手机端用户认证
* 一个应用或者一组应用，比如企业消息总线ESB系统
* 一个独立进程，比如在某台机器上运行的一个tomcat实例
* 一个基础设施层，比如 web 服务，数据库服务，网络层
+
不论是业务层面还是技术层面，服务之间都是有相关关联影响的。比如在线商城服务需要同时有 web 服务、应用服务、数据库服务，而且这三个技术服务之间又逐一依赖，如果集群部署，则还依赖于网络服务。所以，服务的依赖关系，也是重要的信息之一。
设备::
设备实体是一个 IT 设施组件，通常而言，以下都可以称为 IT 环境中的设备：
* 物理服务器
* 虚拟机或容器
* 网络设备，比如交换机、防火墙
* 挂载磁盘或存储卷，比如磁盘分区`/data`
* AD/LDAP 域中的账号
* 应用软件，比如 Kafka
* 应用软件上为外界提供某种具体操作的接口，比如登录接口`/login.php`
+
设备有一系列的属性，包括唯一属性和关联属性两类。唯一属性用来区分该设备与其他设备的不同，通常而言，会是资产编号、主机名称、IP 地址等。关联属性用来丰富设备的信息，可能多个设备关联到相同的信息上，比如：负责人、业务线、机房机架等。 +
设备和 ITIL 框架里的 CI 配置项概念比较接近。不过 CI 概念更广泛，甚至我们前面说的服务也属于 CI 。在这里，我们拆分了服务和设备的概念。设备可以从属于服务。 +
在 Lynxee 中，可以标记设备的部分属性为索引字段值，即可将日志易采集的来自该设备的日志数据，与之关联起来。
指标::
指标是一组时间序列数据的简称。在 IT 运维领域，时序数据又可以分为只有死活的状态数据和有连续取值空间的指标数据两种。比如：系统平均负载、内存使用率、查询响应时间等等。 +
Lynxee 系统既可以由 SPL 统计产生指标数据，也可以接入和存储第三方指标数据。为了方便展示结构和组织关系，接入指标时应按规范转换名称格式，以便关联服务和设备。
监控项::
在复杂的 IT 环境中，通常存在海量的指标数据，但未必所有指标都对 IT 服务质量会造成明显的影响，所以，运维人员通常更加关注其中一小部分比较重要指标的实时情况，而另一部分指标，仅在巡检和排障过程中才会临时使用。对于需要实时关注的指标，设置为监控项，根据设定的监控方法，可以给出监控结果。比如：是否异常、异常等级、异常可信度等。 +
最简单的监控项举例，比如一个叫做"CPU 使用率"的指标，设定其如果高于 80% 就发出告警，这就是一个"CPU 使用率过高"的监控项。 +
在 Lynxee 中，日志易提供多种智能算法，自动判断指标的监控结果，而无需用户手动设定监控阈值。异常检测算法将自动给出监控项的健康值得分，取值在 [0-100] 之间。为直观理解，系统约定监控项健康分值如下映射到危险程度上：
* 0-25：高危程度，红色；
* 25-50：中危程度，黄色；
* 50-75：低危程度，绿色；
* 75-100：正常程度，蓝色。
健康度::
对于一个完整的服务，通常很难用单个指标的监控结果，来描述服务整体的运行情况。为此，日志易设计了"服务健康度"的概念。服务可以包含多个不同的监控项，并设定不同监控项对服务运行健康程度的影响权重，甚至其所依赖服务的健康度也可以设定权重。系统根据每个监控项的健康值得分和权重，计算得出一个 [0-100] 之间的数值，这个值，就是服务的健康度分值。和监控项类似的,系统也采用不同程度的颜色标记服务的健康度：
* 0-25：高危程度，红色；
* 25-50：中危程度，黄色；
* 50-75：低危程度，绿色；
* 75-100：正常程度，蓝色。
=== Lynxee 数据模型规划
image::images/lynxee-datamodel-overview.png[]
Lynxee 采用宽泛的"服务-监控项-设备"体系，以尽可能的兼容不同层次的场景需求。在实践中，用户可以灵活运用服务的依赖关系，实现自己的业务运维分析模型。本节试举例几个场景，说明不同 IT 治理机制场景下的 Lynxee 模型设计。
在规划 Lynxee 数据模型时，首先需要梳理和拆解 IT 环境中实际存在的服务和数据结构。常见的情况，我们可以得到主要的业务产品流程图和IT资产部署架构图。流程架构可能复杂可能粗略，下面是一个相对复杂的服务拆解(局部)：
. 业务：个人贷款
. 业务产品：消费贷、房贷、车贷
. 业务渠道：手机银行、电话银行、柜台
. 应用服务：额度申请、提款
. 主(业务)应用：网贷平台、消息总线、大数据平台、二代征信
. 子应用(应用组件)：CRM数据库、CRM前端
. 集群：LVS、Oracle RAC
. 软件(实例)：Nginx、Weblogic、Kafka
. 基础设施：服务器、存储、网络
对应的，我们可以从不同设备的日志、指标和跟踪链数据源中，获取以下指标数据(局部)：
. 运营指标：DAU(日活跃用户数)、MOU(每用户平均在线时长)、ARPU(每用户平均收入)
. 终端指标：Apdex(应用性能指数)、TTFB(首字节时间)、TTDR(页面渲染时间)、FMP(首屏加载时间)
. 观测指标：QPS(请求量)、Errors(错误数)、Latency(延迟)、Throughput(吞吐量)
. 系统指标：load_avg(平均负载)、io_wait(读写等待)、disk_free(磁盘剩余空间)、pkt_loss(丢包率)
==== 封建制模型
封建制模型，指业务单元各自为阵，自由行事，以最好地满足自己需求为目标来实施IT架构规划。和其他其他业务单元的交互均视作第三方调用。在该机制模型下，我们可以将上述举例，简单的整合成如下模型：
image::images/lynxee-datamodel-feudalism.png[]
==== 双寡头制模型
双寡头制模型，指业务单元内，技术指标和业务指标两方面同等影响决策和绩效。在该机制模型下，我们可以将上述举例，整合成如下模型：
image::images/lynxee-datamodel-duopoly.png[]
同理，用户也可以设计出业务君主制、IT 君主制、联邦制等其他治理机制下的 Lynxee 模型。
== 配置管理
日志易 Lynxee 系统需要进行一系列配置准备工作，才能较好的展现 IT 环境状态，辅助快速排障分析。一般分为如下步骤：
. 根据现场的实际情况，规划和创建好服务，包括服务的内部 ID 和依赖关系。
. 接入或创建设备信息，按实际情况分配到各自所属的服务中。
. 接入第三方网管系统的指标数据。请确保在接入之前，已将和服务、设备相关的指标，通过名称关联的方式进行预处理。
. 按需选择部分指标，设置为监控项。逐一进行算法模型训练和测试，根据测试效果选择合适的算法模型上线运行。
. 将关联监控项加入对应的服务中，并按需调整其健康度影响因子。
本节主要讲述服务和设备的创建/编辑配置。
=== 服务配置
日志易 Lynxee 系统提供两种方式创建服务：
* 界面配置
* 从 CSV 导入
==== 界面创建服务
在配置页进入服务标签页，点击"新建"，分3步配置即可手动创建一个服务对象：
第一步，填写基本信息:
image::images/lynxee/service-create-s1.png[] 
基本信息包含：
1. 服务名称：必填项；
2. 内部 ID：必填项，系统内唯一；
3. 外部 ID：用来存储服务在客户外部 CMDB 系统中的 CI 项标识符；
4. 服务启用: 是否启用，默认启用;
5. 附加信息：服务的其他信息，可任意填写键值对，如负责人、业务线等。
6. 相关日志：此服务相关日志，支持添加多个相关日志，分别是日志名称和查询语句；
7. 相关设备：运行该服务的全体设备集合，可关联现有设备，也可以创建设备关联；
填写完毕后，点击"下一步"。
第二步，配置关联信息，配置此服务相关的指标，日志检测任务，和关联的服务：
image::images/lynxee/service-create-s2.png[] 
服务自身的指标会自动进行关联，也可以手动关联其他服务的指标以及新建指标进行关联；可以对现有日志检测任务或新建日志检测任务进行关联。
配置完毕，点击“下一步”。
第三步，对核心监控项进行配置：
image::images/lynxee/service-create-s3.png[] 
* SLI 模式， 引入 SRE 的黄金指标概念。明确一个服务的 SLI 就是请求量、错误率、响应时间三种。只需要配置这三种对应的指标是哪个序列就够了。
系统也可以根据这个设置，自动运用合适的异常检测算法。
* 自定义模式，关联的指标对服务健康度的贡献权重关系设置；
点击完成返回后就可以看到你创建的服务了。
==== CSV导入服务
要批量创建多个服务，可以采用 CSV 文件导入的方式。服务的导入仅完成服务本身的名称、内外部 ID 和依赖关系(多个依赖服务，用`/`分隔多个服务的内部ID)。你可以在导入流程中具体设定每列内容是什么属性。
CSV 文件格式示例如下：
[source,type=csv]
-------------
name,inner_id,service1/service2...
-------------
服务的其他属性，必须通过界面配置。
==== 服务健康度定义
Lynxee 为你创建的每个服务都会生成一个健康度分值，并持续的监控和更新这个分值，帮助你快速了解服务的运行状态。
服务健康度由归属服务的监控项(监控项详细介绍见稍后章节)、以及所依赖的服务的健康度分值共同计算得出。计算公式如下：
image::images/lynxee-shs.png[]
公式中的变量解释如下：
* N = 监控项数量
* G = 单个监控项的权重值
* K = 单个监控项当前的健康度分值
默认的，所依赖服务的健康度分值拥有最高级别的权重，而普通监控项拥有中间级别的权重。
为了辅助理解，Lynxee 界面提供了健康度分值模拟器。你可以在服务编辑页面上，通过模拟监控项的危急程度和权重设置，来预览最终计算所得的服务健康度分值。模拟器设定:正常=100, 低危=70, 中危=30, 高危=0。
比如，你如果模拟一个服务的监控项危急程度和权重如下所示：
image::images/lynxee-shs-example.png[]
分值的计算过程如下：
 服务健康度 = 100x10/(10+7+5) + 70x7/(10+7+5) + 30x5/(10+7+5) = 74.55