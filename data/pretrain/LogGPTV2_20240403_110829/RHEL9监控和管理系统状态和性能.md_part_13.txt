# []{#monitoring-performance-with-performance-co-pilot_monitoring-and-managing-system-status-and-performance.html#collecting-data-from-sql-server-using-pcp_monitoring-performance-with-performance-co-pilot}使用 PCP 从 SQL 服务器收集数据 {.title}
:::
SQL Server 代理在 Performance
Co-Pilot(PCP)中提供，它可帮助您监控和分析数据库性能问题。
这个步骤描述了如何通过系统中的 `pcp`{.literal} 为 Microsoft SQL Server
收集数据。
::: itemizedlist
**先决条件**
-   您已安装了用于 Red Hat Enterprise Linux 的 Microsoft SQL Server
    ，并建立了到 SQL 服务器的\"可信\"连接。
-   您已安装了用于 Red Hat Enterprise Linux 的 SQL Server 的 Microsoft
    ODBC 驱动程序。
:::
::: orderedlist
**步骤**
1.  安装 PCP：
    ``` screen
    # dnf install pcp-zeroconf
    ```
2.  安装 `pyodbc`{.literal} 驱动程序所需的软件包：
    ``` screen
    # dnf install python3-pyodbc
    ```
3.  安装 `mssql`{.literal} 代理：
    ::: orderedlist
    1.  为 PCP 安装 Microsoft SQL Server 域名代理：
        ``` screen
        # dnf install pcp-pmda-mssql
        ```
    2.  编辑 `/etc/pcp/mssql/mssql.conf`{.literal} 文件，为
        `mssql`{.literal} 代理配置 SQL
        服务器帐户的用户名和密码。请确定您配置的帐户具有性能数据的访问权限。
        ``` screen
        username: user_name
        password: user_password
        ```
        使用这个帐户的 SQL Server 帐户和 [*user_password*]{.emphasis}
        替换 [*user_name*]{.emphasis}。
    :::
4.  安装代理：
    ``` screen
    # cd /var/lib/pcp/pmdas/mssql
    # ./Install
    Updating the Performance Metrics Name Space (PMNS) ...
    Terminate PMDA if already installed ...
    Updating the PMCD control file, and notifying PMCD ...
    Check mssql metrics have appeared ... 168 metrics and 598 values
    [...]
    ```
:::
::: itemizedlist
**验证步骤**
-   使用 `pcp`{.literal} 命令，验证 SQL Server
    PMDA(`mssql`{.literal})是否已加载并在运行：
    ``` screen
    $ pcp
    Performance Co-Pilot configuration on rhel.local:
    platform: Linux rhel.local 4.18.0-167.el8.x86_64 #1 SMP Sun Dec 15 01:24:23 UTC 2019 x86_64
     hardware: 2 cpus, 1 disk, 1 node, 2770MB RAM
     timezone: PDT+7
     services: pmcd pmproxy
         pmcd: Version 5.0.2-1, 12 agents, 4 clients
         pmda: root pmcd proc pmproxy xfs linux nfsclient mmv kvm mssql
               jbd2 dm
     pmlogger: primary logger: /var/log/pcp/pmlogger/rhel.local/20200326.16.31
         pmie: primary engine: /var/log/pcp/pmie/rhel.local/pmie.log
    ```
-   查看 PCP 可以从 SQL Server 收集的指标的完整列表：
    ``` screen
    # pminfo mssql
    ```
-   查看指标列表后，您可以报告事务的速度。例如，要报告每秒总事务数，超过
    5 秒时间窗：
    ``` screen
    # pmval -t 1 -T 5 mssql.databases.transactions
    ```
-   使用 `pmchart`{.literal}
    命令查看系统中的这些指标的图形图表。如需更多信息，请参阅使用 [PCP
    Charts 应用程序进行 Visual tracing PCP
    日志归档](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9-beta/html-single/monitoring_and_managing_system_status_and_performance/monitoring-performance-with-performance-co-pilot_monitoring-and-managing-system-status-and-performance#visually-tracing-pcp-log-archives-with-pcp-charts_monitoring-performance-with-performance-co-pilot){.link}。
:::
::: itemizedlist
**其他资源**
-   `pcp(1)`{.literal}, `pminfo(1)`{.literal}, `pmval(1)`{.literal},
    `pmchart(1)`{.literal}, and `pmdamssql(1)`{.literal} man pages
-   [带有 RHEL 8.2 Red Hat Developers Blog 的 Microsoft SQL Server 的
    Performance
    Co-Pilot](https://www.redhat.com/en/blog/performance-co-pilot-microsoft-sql-server-rhel-82){.link}
:::
:::
::: section
::: titlepage
# []{#monitoring-performance-with-performance-co-pilot_monitoring-and-managing-system-status-and-performance.html#proc_generating-pcp-archives-from-sadc-archives_monitoring-performance-with-performance-co-pilot}从 sadc 归档生成 PCP 归档 {.title}
:::
您可以使用 `sysstat`{.literal} 软件包提供的 `sadf`{.literal}
工具来生成来自原生 `sadc`{.literal} 归档的 PCP 存档。
::: itemizedlist
**先决条件**
-   已创建了 `sadc`{.literal} 存档：
    ``` screen
    # /usr/lib64/sa/sadc 1 5 -
    ```
    在本例中，`sadc`{.literal} 是抽样系统数据 1 时间，间隔为 5
    秒。outfile 指定为 `-`{.literal}，它导致 `sadc`{.literal}
    将数据写入标准系统活动每日数据文件。此文件名为 saDD，默认情况下位于
    /var/log/sa 目录中。
:::
::: itemizedlist
**步骤**
-   从 `sadc`{.literal} 归档生成 PCP 存档：
    ``` screen
    # sadf -l -O pcparchive=/tmp/recording -2
    ```
    在本例中，使用 `-2`{.literal} 选项会导致 `sadf`{.literal} 从
    `sadc`{.literal} 归档（2 天）中生成 PCP 存档。
:::
::: title
**验证步骤**
:::
您可以使用 PCP 命令检查和分析 `sadc`{.literal} 存档生成的 PCP
存档，正如一个原生 PCP 存档一样。例如：
::: itemizedlist
-   要显示 PCP 存档中从 `sadc`{.literal} 归档生成的指标列表，请运行：
    ``` screen
    $ pminfo --archive /tmp/recording
    Disk.dev.avactive
    Disk.dev.read
    Disk.dev.write
    Disk.dev.blkread
    [...]
    ```
-   要显示 PCP 归档的归档和主机名的时间范围，请运行：
    ``` screen
    $ pmdumplog --label /tmp/recording
    Log Label (Log Format Version 2)
    Performance metrics from host shard
            commencing Tue Jul 20 00:10:30.642477 2021
            ending     Wed Jul 21 00:10:30.222176 2021
    ```
-   要将性能指标值绘制成图形，请运行：
    ``` screen
    $ pmchart --archive /tmp/recording
    ```
:::
:::
:::
[]{#performance-analysis-of-xfs-with-pcp_monitoring-and-managing-system-status-and-performance.html}
::: chapter
::: titlepage
# []{#performance-analysis-of-xfs-with-pcp_monitoring-and-managing-system-status-and-performance.html#performance-analysis-of-xfs-with-pcp_monitoring-and-managing-system-status-and-performance}第 7 章 使用 PCP 对 XFS 的性能分析 {.title}
:::
XFS PMDA 作为 `pcp`{.literal}
软件包的一部分提供，并在安装过程中默认启用。它用于在 Performance
Co-Pilot(PCP)中收集 XFS 文件系统的性能指标数据。
这部分论述了如何使用 PCP 分析 XFS 文件系统的性能。
::: section
::: titlepage
# []{#performance-analysis-of-xfs-with-pcp_monitoring-and-managing-system-status-and-performance.html#installing-xfs-pmda-manually_performance-analysis-of-xfs-with-pcp}手动安装 XFS PMDA {.title}
:::
如果 `pcp`{.literal} 配置输出中没有列出 XFS PMDA，请手动安装 PMDA 代理。
这个步骤描述了如何手动安装 PMDA 代理。
::: itemizedlist
**先决条件**
-   已安装 PCP。如需更多信息，请参阅[安装并启用
    PCP](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9-beta/html-single/monitoring_and_managing_system_status_and_performance/setting-up-pcp_monitoring-and-managing-system-status-and-performance#installing-and-enabling-pcp_setting-up-pcp){.link}。
:::
::: orderedlist
**步骤**
1.  进入 xfs 目录：
    ``` screen
    # cd /var/lib/pcp/pmdas/xfs/
    ```
:::
::: itemizedlist
**验证步骤**
-   验证 `pmcd`{.literal} 进程是否在主机上运行，且在配置中列出 XFS
    PMDA：
    ``` screen
    # pcp
    Performance Co-Pilot configuration on workstation:
    platform: Linux workstation 4.18.0-80.el8.x86_64 #1 SMP Wed Mar 13 12:02:46 UTC 2019 x86_64
    hardware: 12 cpus, 2 disks, 1 node, 36023MB RAM
    timezone: CEST-2
    services: pmcd
    pmcd: Version 4.3.0-1, 8 agents
    pmda: root pmcd proc xfs linux mmv kvm jbd2
    ```
:::
::: itemizedlist
**其他资源**
-   `pmcd(1)`{.literal} man page
-   [PCP
    分发的工具](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9-beta/html-single/monitoring_and_managing_system_status_and_performance/setting-up-pcp_monitoring-and-managing-system-status-and-performance#tools-distributed-with-pcp_setting-up-pcp){.link}
:::
:::
::: section
::: titlepage
# []{#performance-analysis-of-xfs-with-pcp_monitoring-and-managing-system-status-and-performance.html#examining-xfs-performance-metrics-with-pminfo_performance-analysis-of-xfs-with-pcp}使用 pminfo 检查 XFS 性能指标 {.title}
:::
PCP 启用 XFS PMDA 以允许每个挂载的 XFS 文件系统报告特定的 XFS
指标。这样可以更加轻松地查明特定挂载的文件系统问题并评估性能。
`pminfo`{.literal} 命令为每个挂载的 XFS 文件系统提供每个设备 XFS 指标。
此流程显示 XFS PMDA 提供所有可用指标的列表。
::: itemizedlist
**先决条件**
-   已安装 PCP。如需更多信息，请参阅[安装并启用
    PCP](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9-beta/html-single/monitoring_and_managing_system_status_and_performance/setting-up-pcp_monitoring-and-managing-system-status-and-performance#installing-and-enabling-pcp_setting-up-pcp){.link}。
:::
::: itemizedlist
**步骤**
-   显示 XFS PMDA 提供的所有可用指标列表：
    ``` screen
    # pminfo xfs
    ```
-   显示各个指标的信息。以下示例使用 `pminfo`{.literal} 工具检查特定的
    XFS `读`{.literal}和`写`{.literal}指标：
    ::: itemizedlist
    -   显示 `xfs.write_bytes`{.literal} 指标的简短描述：
        ``` screen
        # pminfo --oneline xfs.write_bytes
        xfs.write_bytes [number of bytes written in XFS file system write operations]
        ```
    -   显示 `xfs.read_bytes`{.literal} 指标的长描述：
        ``` screen
        # pminfo --helptext xfs.read_bytes
        xfs.read_bytes
        Help:
        This is the number of bytes read via read(2) system calls to files in
        XFS file systems. It can be used in conjunction with the read_calls
        count to calculate the average size of the read operations to file in
        XFS file systems.
        ```
    -   获取 `xfs.read_bytes`{.literal} 指标的当前性能值：
        ``` screen
        # pminfo --fetch xfs.read_bytes
        xfs.read_bytes
            value 4891346238
        ```
    -   使用 `pminfo`{.literal} 获取每个设备 XFS 指标：
        ``` screen
        # pminfo --fetch --oneline xfs.perdev.read xfs.perdev.write
        xfs.perdev.read [number of XFS file system read operations]
        inst [0 or "loop1"] value 0
        inst [0 or "loop2"] value 0
        xfs.perdev.write [number of XFS file system write operations]
        inst [0 or "loop1"] value 86
        inst [0 or "loop2"] value 0
        ```
    :::
:::
::: itemizedlist
**其他资源**
-   `pminfo(1)`{.literal} man page
-   [XFS 的 PCP
    指标组](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9-beta/html-single/monitoring_and_managing_system_status_and_performance/index#pcp-metric-groups-for-xfs_performance-analysis-of-xfs-with-pcp){.link}
-   [每个设备 PCP 指标组用于
    XFS](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9-beta/html-single/monitoring_and_managing_system_status_and_performance/performance-analysis-of-xfs-with-pcp_monitoring-and-managing-system-status-and-performance#per-device-pcp-metric-groups-for-xfs_performance-analysis-of-xfs-with-pcp){.link}
:::
:::
::: section
::: titlepage