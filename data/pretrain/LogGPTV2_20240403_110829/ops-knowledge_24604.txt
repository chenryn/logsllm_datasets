To access files on your local machine using URLs, you can set up a simple HTTP server. Hereâ€™s a step-by-step guide to achieve this:

1. **Organize Your Files:**
   - Place the files you want to access in a dedicated folder. For example, you might have a file named `constants.py` in a directory like `/usr/local/home/thapaliya/`.

2. **Start an HTTP Server:**
   - Open a terminal or command prompt.
   - Navigate to the folder containing your files using the `cd` command. For example:
     ```sh
     cd /usr/local/home/thapaliya/
     ```
   - Start a simple HTTP server using Python. You can do this by running:
     ```sh
     python -m http.server 8080
     ```
   - This will start a server on port 8080. You should see output similar to:
     ```sh
     Serving HTTP on 0.0.0.0 port 8080 (http://0.0.0.0:8080/) ...
     ```

3. **Access the Files via Browser:**
   - Open your web browser and navigate to `http://localhost:8080/`.
   - You should now be able to see and access the files in the specified folder. For example, to access `constants.py`, you would go to `http://localhost:8080/constants.py`.

4. **Using JavaScript Files with HTML:**
   - If you need to include JavaScript files in your HTML, you can reference them using the local server URL. For example, if you have a file named `main.js` in the same directory, you can include it in your HTML like this:
     ```html
     <script src="http://localhost:8080/main.js"></script>
     ```

5. **Running Multiple Servers:**
   - If you need to run multiple servers for different purposes, you can start each one on a different port. For example, to start another server on port 8081, you would use:
     ```sh
     python -m http.server 8081
     ```
   - You can then access files served by this server at `http://localhost:8081/`.

By following these steps, you can easily access and serve files from your local machine using URLs.