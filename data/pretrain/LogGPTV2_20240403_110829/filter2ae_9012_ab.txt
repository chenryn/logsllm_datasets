解码这一步造成了双引号闭合，从而引起了参数注入问题。示意图如下：
![
](https://images.seebug.org/content/images/2018/10/4bfaf063-cdbe-47c2-93d7-f581c5dacf5e.png-w331s)
**Electron 自定义协议命令注入**
2018 年 1 月，Electron 发布了由自定义协议而导致命令注入的安全公告(CVE-2018-1000006)，由于参数注入而引发的问题，构造的
PoC 如下：
    chybeta://?" "--no-sandbox" "--gpu-launcher=cmd.exe /c start calc
使用 IE 浏览器访问该链接，最终生成的启动参数如下：
    electron.exe "//?" "--no-sandbox" "--gpu-launcher=cmd.exe /c start calc"
通过参数注入，调用 electron 中支持的 `--gpu-launcher` 参数，传入 `cmd.exe` 启动计算器，如下图：
![
](https://images.seebug.org/content/images/2018/10/b6207ca0-8871-4175-8e06-3e3eb4cef875.png-w331s)
图片来源于：，详情可以参考这个链接。
**Edge 远程代码执行**
2018 年 10 月，Edge
公开了远程代码执行的安全公告(CVE-2018-8495)，同样也是利用参数注入，最终达到了远程代码执行的效果；整个利用过程颇具巧妙性，本文对此进行详细的分析。
首先说一点的是，在 Edge 中居然可以打开一些不合法的 `url scheme`(没有包含 `URL Protocol` 字段)，比如 `WSHFile`
项：
![
](https://images.seebug.org/content/images/2018/10/608e46de-59df-48f5-abee-8aae2384fcbb.png-w331s)
当然在 Windows7 和 Windows8 下不能打开。
而恰恰 `WSHFile` 项指向了 `wscript.exe`，这个应用程序非常熟悉是Windows 内置的脚本解释器，那么可以利用 `WSHFile`
尝试去运行一个脚本；除此之外，上文提到 Edge 浏览器中存在参数注入的问题，那么是否有脚本可以接收参数并用于执行呢？
漏洞作者最终找到：
    C:\Windows\WinSxS\amd64_microsoft-windows-a..nagement-appvclient_
    31bf3856ad364e35_10.0.17134.48_none_c60426fea249fc02\SyncAppvPublishingServer.vbs
该脚本文件支持接收参数，并且会将命令直接拼接到字符串中，然后通过 `powershell` 进行执行。
    psCmd = "powershell.exe -NonInteractive -WindowStyle 
     Hidden-ExecutionPolicy RemoteSigned -Command &{" & syncCmd & "}"
最终构造的 PoC 如下：
    test
以及执行后触发的效果：
![
](https://images.seebug.org/content/images/2018/10/284eb855-65c8-45b3-83cc-a25ba19c6f5e.png-w331s)
目前 Windows10 上已经发布了修复补丁，Edge 已经不能调用这种不合法的 `url scheme` 了。
除此之外，404实验室的小伙伴在分析漏洞的过程中，也有一些额外的发现，如在注册表 `HKEY_CLASSES_ROOT` 还发现了和 `WSHFile`
类似的 `url scheme`，都指向 `wscript.exe`，同样也可以触发远程代码执行。包括：
    1.wshfile
    2.wsffile
    3.vbsfile
    4.vbefile
    5.jsefile
还有在 `C:\Windows\System32\` 下也存在
`SyncAppvPublishingServer.vbs`，同样也可以利用，并且比漏洞作者所提供的更加可靠。
除了 `SyncAppvPublishingServer.vbs` 这个文件， 在
`C:\Windows\System32\Printing_Admin_Scripts\zh-CN` 下的 `pubprn.vbs`
也同样可以触发代码执行。
补充一点，在 Windows7 系统下 chrome 与 Edge 有相同的特性——会打开一些不合法的 `url scheme`，但由于 chrome
不存在参数注入的问题，所以可以暂且认为是安全的。
### 0x06 应用程序的问题
2017 年 12 月，macOS 上的 helpViewer 应用程序被公开由 XSS 造成文件执行的漏洞(CVE-2017-2361)，影响 macOS
Sierra 10.12.1 以下的版本；该漏洞同样也利用了 `url
scheme`，攻击者可以构造恶意页面，从而发动远程攻击。这是典型的由于应用程序所导致的 `url scheme` 安全问题。
漏洞详情可以参考：[https://bugs.chromium.org/p/project-zero/issues/detail?id=1040&can=1&q=reporter%3Alokihardt%40google.com%20&sort=-reported&colspec=ID%20Status%20Restrict%20Reported%20Vendor%20Product%20Finder%20Summary&start=100](https://bugs.chromium.org/p/project-zero/issues/detail?id=1040&can=1&q=reporter%3Alokihardt%40google.com%20&sort=-reported&colspec=ID%20Status%20Restrict%20Reported%20Vendor%20Product%20Finder%20Summary&start=100)
其构造的 PoC 如下：
    document.location = "help:///Applications/Safari.app/Contents/
    Resources/Safari.help/%25252f..%25252f..%25252f..%25252f..%25252f..%25252f..
    %25252f/System/Library/PrivateFrameworks/Tourist.framework/Versions/A/
    Resources/en.lproj/offline.html?redirect=javascript%253adocument.write(1)";
在这个漏洞的利用过程中，可以发现操作系统和浏览器并没有出现问题，而是通过 `url scheme`
打开的应用程序出现了问题。通过对利用链的分析，可以了解到其中几个巧妙的点：
  1. 利用 `url scheme` 中的 help 协议打开应用程序 Safari.help 
  2. 使用双重 url 编码绕过 helpViewer 对路径的检查，打开一个可以执行 JavaScript 的页面 
  3. 使用 helpViewer 的内置协议 `x-help-script` 打开应用程序(PoC不包含)
### 0x07 总结
`url scheme` 功能的便捷性得力于操作系统、浏览器(或其他支持 url 的应用)以及应用程序三方的相互支持；要保证 `url scheme`
功能安全可靠，就必须牢牢把关这三方的安全。
除此之外，不同的操作系统对 `url scheme`
实现方式不同，不同的浏览器也有自己的特性，应用程序也各有各的处理方式，多种组合的结果，就有可能出现一些意料之外的安全问题。
最后感谢 404 实验室小伙伴 @LoRexxar' 与 @dawu 在分析过程中给我的帮助。
* * *
References:
  1. CVE-2018-8495分析: 
  2. Seebug.paper: 
  3. 先知: 
  4. electronjs: 
  5. blackhat: 
  6. blackhat: 
  7. oreilly: 
  8. Github: 
  9. MSRC.CVE-2018-8495: 
  10. Microsoft: 
  11. Microsoft: 
  12. Microsoft: 
  13. h-online: 
  14. chromium: [https://bugs.chromium.org/p/project-zero/issues/detail?id=1040&can=1&q=reporter%3Alokihardt%40google.com%20&sort=-reported&colspec=ID%20Status%20Restrict%20Reported%20Vendor%20Product%20Finder%20Summary&start=100](https://bugs.chromium.org/p/project-zero/issues/detail?id=1040&can=1&q=reporter%3Alokihardt%40google.com%20&sort=-reported&colspec=ID%20Status%20Restrict%20Reported%20Vendor%20Product%20Finder%20Summary&start=100)
* * *