---
author: Arun Pyasi
category: 技术
comments_data: []
count:
  commentnum: 0
  favtimes: 5
  likes: 0
  sharetimes: 0
  viewnum: 11725
date: '2016-04-17 08:32:41'
editorchoice: false
excerpt: Drone 是一个自由开源项目，用来提供一个非常棒的持续集成服务的环境，它已经集成近很多代码库提供商，比如 Github、Bitbucket 以及
  Google Code。
fromurl: http://linoxide.com/linux-how-to/setup-drone-continuous-integration-linux/
id: 7236
islctt: true
largepic: /data/attachment/album/201604/17/083233byu0ug1w081fkf12.jpg
permalink: /article-7236-1.html
pic: /data/attachment/album/201604/17/083233byu0ug1w081fkf12.jpg.thumb.jpg
related: []
reviewer: ''
selector: ''
summary: Drone 是一个自由开源项目，用来提供一个非常棒的持续集成服务的环境，它已经集成近很多代码库提供商，比如 Github、Bitbucket 以及
  Google Code。
tags:
- 持续集成
- CI
- Drone
thumb: false
title: 如何在 linux 上配置持续集成服务 - Drone
titlepic: false
translator: oska874
updated: '2016-04-17 08:32:41'
---
如果你对一次又一次的克隆、构建、测试和部署代码感到厌倦了，可以考虑一下持续集成。持续集成简称 CI，是一种像我们一样的频繁提交的代码库，构建、测试和部署的软件工程实践。CI 可以帮助我们快速的集成新代码到已有的代码库。如果这个过程是自动化进行的，那么就会提高开发的速度，因为这可以减少开发人员手工构建和测试的时间。[Drone](https://drone.io/) 是一个自由开源项目，用来提供一个非常棒的持续集成服务的环境，采用 Apache 2.0 协议发布。它已经集成近很多代码库提供商，比如 Github、Bitbucket 以及 Google Code，它可以从代码库提取代码，使我们可以对包括 PHP, Node, Ruby, Go, Dart, Python, C/C++, JAVA 等等在内的各种语言编译构建。它是如此一个强大的平台，它使用了容器和 docker 技术，这让用户每次构建都可以在保证隔离的条件下完全控制他们自己的构建环境。
![](/data/attachment/album/201604/17/083233byu0ug1w081fkf12.jpg)
### 1. 安装 Docker
首先，我们要安装 docker，因为这是 Drone 的工作流的最关键的元素。Drone 合理的利用了 docker 来构建和测试应用。容器技术提高了应用部署的效率。要安装 docker ，我们需要在不同的 linux 发行版本运行下面对应的命令，我们这里会说明 Ubuntu 14.04 和 CentOS 7 两个版本。
#### Ubuntu
要在 Ubuntu 上安装 Docker ，我们只需要运行下面的命令。
```
# apt-get update
# apt-get install docker.io
```
安装之后我们需要使用`service` 命令重启 docker 引擎。
```
# service docker restart
```
然后我们让 docker 在系统启动时自动启动。
```
# update-rc.d docker defaults
Adding system startup for /etc/init.d/docker ...
/etc/rc0.d/K20docker -> ../init.d/docker
/etc/rc1.d/K20docker -> ../init.d/docker
/etc/rc6.d/K20docker -> ../init.d/docker
/etc/rc2.d/S20docker -> ../init.d/docker
/etc/rc3.d/S20docker -> ../init.d/docker
/etc/rc4.d/S20docker -> ../init.d/docker
/etc/rc5.d/S20docker -> ../init.d/docker
```
#### CentOS
第一，我们要更新机器上已经安装的软件包。我们可以使用下面的命令。
```
#  sudo yum update
```
要在 centos 上安装 docker，我们可以简单的运行下面的命令。
```
#  curl -sSL https://get.docker.com/ | sh
```
安装好 docker 引擎之后我么只需要简单使用下面的`systemd` 命令启动 docker，因为 centos 7 的默认初始化系统是 systemd。
```
# systemctl start docker
```
然后我们要让 docker 在系统启动时自动启动。
```
# systemctl enable docker
ln -s '/usr/lib/systemd/system/docker.service' '/etc/systemd/system/multi-user.target.wants/docker.service'
```
### 2. 安装 SQlite 驱动
Drone 默认使用 SQlite3 数据库服务器来保存数据和信息。它会在 /var/lib/drone/ 自动创建名为 drone.sqlite 的数据库来处理数据库模式的创建和迁移。要安装 SQlite3 我们要完成以下几步。
#### Ubuntu 14.04
因为 SQlite3 存在于 Ubuntu 14.04 的默认软件库，我们只需要简单的使用 apt 命令安装它。
```
# apt-get install libsqlite3-dev
```
#### CentOS 7
要在 Centos 7 上安装需要使用下面的 yum 命令。
```
# yum install sqlite-devel
```
### 3. 安装 Drone
最后，我们安装好依赖的软件，我们现在更进一步的接近安装 Drone。在这一步里我们只简单的从官方链接下载对应的二进制软件包，然后使用默认软件包管理器安装 Drone。
#### Ubuntu
我们将使用 wget 从官方的 [Debian 文件下载链接](http://downloads.drone.io/master/drone.deb)下载 drone 的 debian 软件包。下面就是下载命令。
```
# wget downloads.drone.io/master/drone.deb
Resolving downloads.drone.io (downloads.drone.io)... 54.231.48.98
Connecting to downloads.drone.io (downloads.drone.io)|54.231.48.98|:80... connected.
HTTP request sent, awaiting response... 200 OK
Length: 7722384 (7.4M) [application/x-debian-package]
Saving to: 'drone.deb'
100%[======================================>] 7,722,384 1.38MB/s in 17s
2015-11-06 14:09:28 (456 KB/s) - 'drone.deb' saved [7722384/7722384]
```
下载好之后，我们将使用 dpkg 软件包管理器安装它。
```
# dpkg -i drone.deb
Selecting previously unselected package drone.
(Reading database ... 28077 files and directories currently installed.)
Preparing to unpack drone.deb ...
Unpacking drone (0.3.0-alpha-1442513246) ...
Setting up drone (0.3.0-alpha-1442513246) ...
Your system ubuntu 14: using upstart to control Drone
drone start/running, process 9512
```
#### CentOS
在 CentOS 机器上我们要使用 wget 命令从[下载链接](http://downloads.drone.io/master/drone.rpm)下载 RPM 包。
```
# wget downloads.drone.io/master/drone.rpm
--2015-11-06 11:06:45-- http://downloads.drone.io/master/drone.rpm
Resolving downloads.drone.io (downloads.drone.io)... 54.231.114.18
Connecting to downloads.drone.io (downloads.drone.io)|54.231.114.18|:80... connected.
HTTP request sent, awaiting response... 200 OK
Length: 7763311 (7.4M) [application/x-redhat-package-manager]
Saving to: ‘drone.rpm’
100%[======================================>] 7,763,311 1.18MB/s in 20s
2015-11-06 11:07:06 (374 KB/s) - ‘drone.rpm’ saved [7763311/7763311]
```
然后我们使用 yum 安装 rpm 包。
```
# yum localinstall drone.rpm
```
### 4. 配置端口
安装完成之后，我们要先进行配置才能工作起来。drone 的配置文件在**/etc/drone/drone.toml** 。默认情况下 drone 的 web 接口使用的是80，而这也是 http 默认的端口，如果我们修改它，请按下面所示的修改配置文件里 server 块对应的值。
```
[server]
port=":80"
```
### 5. 集成 Github
为了运行 Drone 我们必须设置最少一个和 GitHub、GitHub 企业版，Gitlab，Gogs，Bitbucket 关联的集成点。在本文里我们只集成了 github，但是如果我们要集成其他的服务，我们可以在配置文件做修改。为了集成 github 我们需要在github 的设置里创建一个新的应用： 。
![Registering App Github](/data/attachment/album/201604/17/083244l2z4422ffnuqjjqq.png)
要创建一个应用，我们需要在 `New Application` 页面点击 `Register`，然后如下所示填表。
![Registering OAuth app github](/data/attachment/album/201604/17/083244iez3myymmmtmmmgb.png)
我们应该保证在应用的配置项里设置了**授权回调链接**，链接看起来类似 `http://drone.linoxide.com/api/auth/github.com`。然后我们点击注册应用。所有都做好之后我们会看到我们需要在我们的 Drone 配置文件里配置的客户端 ID 和客户端密钥。
![Client ID and Secret Token](/data/attachment/album/201604/17/083245t812jriyt188zgtz.png)
在这些都完成之后我们需要使用文本编辑器编辑 drone 配置文件，比如使用下面的命令。
```
# nano /etc/drone/drone.toml
```
然后我们会在 drone 的配置文件里面找到`[github]` 部分，紧接着的是下面所示的配置内容
```