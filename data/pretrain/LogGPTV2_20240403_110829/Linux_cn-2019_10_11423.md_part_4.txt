*photolocation.desktop*
这调用了我的名为 `vkphotolocation.sh` 的封装脚本，它使用 [ExifTool](http://www.sno.phy.queensu.ca/%7Ephil/exiftool/) 以 [Marble](http://userbase.kde.org/Marble/Tracking) 能够读取和可视化的适当格式提取该坐标:
```
#!/bin/sh
IMAGEFILE="${1}"
IMAGEFILEBASENAME=`basename ${IMAGEFILE}`
COORDINATES=`exiftool -c %.6f "${IMAGEFILE}" | awk '/GPS Position/ { print $4 " " $6 }'`
if [ "x${COORDINATES}" = "x" ]; then
 zenity --info --title="${IMAGEFILEBASENAME}" --text="No GPS-location found in the image file."
else
 /usr/bin/marble --latlon "${COORDINATES}" --distance 0.5
fi
#end
```
*vkphotolocation.sh*
映射到键盘快捷键 `G`，我可以快速地得到**单个图像文件的位置的地图定位**。
当我想将多个 JPEG 图像文件的**位置可视化为路径**时，我使用 [GpsPrune](http://activityworkshop.net/software/gpsprune/)。我无法挖掘出 GpsPrune 将一组文件作为命令行参数的方法。正因为如此，我必须手动启动 GpsPrune，用 “File > Add photos”选择一组文件或一个文件夹。
通过这种方式，我可以为每个 JPEG 位置在 OpenStreetMap 地图上获得一个点（如果配置为这样）。通过单击这样一个点，我可以得到相应图像的详细信息。
如果你恰好在国外拍摄照片，可视化 GPS 位置对**在文件名中添加描述**大有帮助!
#### 工作流程：根据 GPS 坐标过滤照片
这并非我的工作流程。为了完整起见，我列出该工作流对应工具的特性。我想做的就是从一大堆图片中寻找那些在一定区域内（范围或点 + 距离）的照片。
到目前为止，我只找到了 [DigiKam](https://en.wikipedia.org/wiki/DigiKam)，它能够[根据矩形区域进行过滤](https://docs.kde.org/development/en/extragear-graphics/digikam/using-kapp.html#idp7659904)。如果你知道其他工具，请将其添加到下面的评论或给我写一封电子邮件。
#### 工作流程：显示给定集合的子集
如上面的需求所述，我希望能够对一个文件夹中的文件定义一个子集，以便将这个小集合呈现给其他人。
工作流程非常简单：我向选择的文件添加一个标记（通过 `t`/`filetags`）。为此，我使用标记 `sel`，它是 “selection” 的缩写。在标记了一组文件之后，我可以按下 `s`，它与一个脚本相关联，该脚本只显示标记为 `sel` 的文件。
当然，这也适用于任何标签或标签组合。因此，用同样的方法，你可以得到一个适当的概述，你的婚礼上的所有照片都标记着“教堂”和“戒指”。
很棒的功能，不是吗?:-)
##### 初始设置 filetags 以根据标签和 geeqie 过滤
你必须定义一个额外的“外部编辑器”，“ Edit > Preferences > Configure Editors … > New”：
```
[Desktop Entry]
Name=filetag-filter
GenericName=filetag-filter
Comment=
Exec=/home/vk/src/misc/vk-filetag-filter-wrapper-with-gnome-terminal.sh
Icon=
Terminal=true
Type=Application
Categories=Application;Graphics;
hidden=false
MimeType=image/*;video/*;image/mpo;image/thm
Categories=X-Geeqie;
```
*filter-tags.desktop*
再次调用我编写的封装脚本：
```
#!/bin/sh
/usr/bin/gnome-terminal \
 --geometry=85x15+330+5 \
 --hide-menubar \
 -x /home/vk/src/filetags/filetags.py --filter
#end
```
*vk-filetag-filter-wrapper-with-gnome-terminal.sh*
带有参数 `--filter` 的 `filetags` 基本上完成的是：用户被要求输入一个或多个标签。然后，当前文件夹中所有匹配的文件都使用[符号链接](https://en.wikipedia.org/wiki/Symbolic_link)链接到 `$HOME/.filetags_tagfilter/`。然后，启动了一个新的 geeqie 实例，显示链接的文件。
在退出这个新的 geeqie 实例之后，你会看到进行选择的旧的 geeqie 实例。
#### 用一个真实的案例来总结
哇哦, 这是一篇很长的博客文章。你可能已经忘了之前的概述。总结一下我在（扩展了标准功能集的） geeqie 中可以做的事情，我有一个很酷的总结：
| 快捷键 | 功能 |
| --- | --- |
| `m` | 移到归档（m2a） |
| `o` | 打开（针对非图像文件） |
| `a` | 在文件名里添加字段 |
| `t` | 文件标签（添加） |
| `T` | 文件标签（删除） |
| `s` | 文件标签（排序） |
| `g` | gimp |
| `G` | 显示 GPS 信息 |
| `[` | 无损的逆时针旋转 |
| `]` | 无损的顺时针旋转 |
| `Ctrl-e` | EXIF 图像信息 |
| `f` | 全屏显示 |
文件名（包括它的路径）的部分及我用来操作该部分的相应工具：
```
 /this/is/a/folder/2014-04-20T17.09 Picknick in Graz -- food graz.jpg
 [ move2archive  ] [  date2name   ] [appendfilename] [ filetags ]
```
在实践中，我按照以下步骤将照片从相机保存到存档：我将 SD 存储卡放入计算机的 SD 读卡器中。然后我运行 [getdigicamdata.sh](https://github.com/novoid/getdigicamdata.sh)。完成之后，我在 geeqie 中打开 `$HOME/tmp/digicam/tmp/`。我浏览了一下照片，把那些不成功的删除了。如果有一个图像的方向错误，我用 `[` 或 `]` 纠正它。
在第二步中，我向我认为值得评论的文件添加描述 （`a`）。每当我想添加标签时，我也这样做：我快速地标记所有应该共享相同标签的文件（`Ctrl + 鼠标点击`），并使用 [filetags](https://github.com/novoid/filetag)（`t`）进行标记。
要合并来自给定事件的文件，我选中相应的文件，将它们移动到年度归档文件夹中的 `event-folder`，并通过在 [move2archive](https://github.com/novoid/move2archive)（`m`）中键入事件描述，其余的（非特殊的文件夹）无需声明事件描述由 `move2archive` （`m`）直接移动到年度归档中。
结束我的工作流程，我删除了 SD 卡上的所有文件，把它从操作系统上弹出，然后把它放回我的数码相机里。
以上。
因为这种工作流程几乎不需要任何开销，所以评论、标记和归档照片不再是一项乏味的工作。
### 最后
所以，这是一个详细描述我关于照片和电影的工作流程的叙述。你可能已经发现了我可能感兴趣的其他东西。所以请不要犹豫，请使用下面的链接留下评论或电子邮件。
我也希望得到反馈，如果我的工作流程适用于你。并且，如果你已经发布了你的工作流程或者找到了其他人工作流程的描述，也请留下评论!
及时行乐，莫让错误的工具或低效的方法浪费了我们的人生！
### 其他工具
阅读关于[本文中关于 gThumb 的部分](http://karl-voit.at/2017/02/19/gthumb)。
当你觉得你以上文中所叙述的符合你的需求时，请根据相关的建议来选择对应的工具。
---
via: 
作者：[Karl Voit](http://karl-voit.at) 译者：[qfzy1233](https://github.com/qfzy1233) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出