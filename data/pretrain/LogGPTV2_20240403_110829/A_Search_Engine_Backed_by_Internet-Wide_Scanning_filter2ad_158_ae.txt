by signature algorithm. We ﬁnd that 76.3% of trusted IPv4
hosts currently use a SHA-1 signature and show the break-
down of SHA-1 certiﬁcates and their status in Chrome in
Table 7.
6.5 Cipher Suites
The security of the TLS protocol fundamentally relies on
the use of strong cipher suites. However, servers and clients of-
ten have to make a tradeoﬀ between level of security and com-
patibility. When performing a TLS handshake, ZGrab oﬀers
the cipher suites implemented by the Golang TLS library and
logs the chosen cipher suite, which is then exported to Censys.
Using Censys, we generated the distribution of selected ci-
pher suites by all HTTPS hosts by querying for HTTPS hosts
and aggregating on the 443.https.cipher_suite.name ﬁeld,
which Censys completed in 212ms. We show these distri-
butions in Figure 5. Even from these basic distributions,
we can gain insights into cipher suite selection in the wild.
The Alexa Top 1M domains prefer ECDHE key exchange,
whereas IPv4 prefers RSA key exchange. Hosts without
trusted certiﬁcates are much more likely to use RC4 rather
than AES. We can also see that overall not only are RC4
and AES preferred to 3DES, but that 3DES ciphers are only
chosen by less than 1% of hosts.
7. RELATED WORK
There have been a large number of research studies over
the past several years that have been based on Internet-wide
scanning [1,7–11,13,14,18,19,24–29,38], which encouraged
us to develop Censys.
Censys further enables these types of studies, and low-
ers the barriers to entry for utilizing Internet-wide scan
10
University
Michigan
(141.212.0.0/16)
Iowa
(128.255.0.0/16)
Berkeley
(128.32.0.0/16)
Protocol Shodan Censys
255
987
337
98
1,304
662
582
1,871
1,188
FTP
HTTP
HTTPS
FTP
HTTP
HTTPS
FTP
HTTP
HTTPS
38
274
53
12
415
30
84
602
158
Table 8: Shodan Comparison — We compared the number
of hosts returned by Shodan and Censys for FTP, HTTP,
and HTTPS on three diﬀerent /16 network blocks, each
belonging to a diﬀerent public U.S. university. We ﬁnd that,
on average, Censys found 600% more FTP hosts, 220% more
HTTP hosts, and 800% more HTTPS hosts.
data. Similarly, there have been several scanners designed
for scanning the IPv4 address space, notably ZMap [20] and
Masscan [23]. While we introduce ZGrab, an application
scanner, Censys itself is not a new Internet scanner. Rather,
it builds upon ZMap to provide a higher level interface to
scan data.
7.1 Scan Driven Search Engines
The closest work to Censys is Shodan, which provides
a text search of banners, primarily on FTP, SSH, Telnet,
and HTTP [30]. Banners are searchable as plaintext, and
searches can be ﬁltered by CIDR range and location. While
Censys and Shodan seek to to fulﬁll similar goals, they take
diﬀerent approaches, oﬀer diﬀering functionality, and fulﬁll
diﬀerent needs.
Unfortunately, it is unclear how Shodan performs banner
grabs, from where, and how frequently. In order to compare
Shodan’s coverage with Censys, we compared the result sets
for three academic institutions on three shared protocols:
FTP, HTTP, and HTTPS. Shodan does not expire results,
which makes it diﬃcult to compare with our most recent
scans. However, Shodan does include a last-seen-at times-
tamp on records and we compare Censys against any hosts
Shodan has seen in the past month. In comparison, Censys
only presents records from the latest scan. This will inﬂate
the number of results presented by Shodan, given that hosts
frequently move, but allows us to approximate the diﬀerences
between the two services. On average, Censys found 598%
more FTP hosts, 222% more HTTP hosts, and 808% more
HTTPS hosts than Shodan. Spot-checks conﬁrmed that
these additional hosts were not false, positives, but rather
hosts not recently found, or were missing from Shodan.
In order to measure how frequently Shodan scans the
Internet, we provisioned a publicly available FTP server with
a unique banner, and queried the Shodan search API every
10 minutes for the banner. Despite this, Shodan did not
respond with our FTP host in its result set until 25 days
after provisioning our server. In comparison, the host was
present in Censys’s public interface in under 48 hours. We
also note that during this experiment, Shodan timed out for
2% of queries and returned an Invalid Query error for 1%.
Shodan’s search interface and API further diﬀer from Cen-
sys. In comparison to Censys’s support for query statements
on parsed out ﬁelds, Shodan only allows simple full-text
searches against the raw text of a host’s banner. Further,
Shodan limits anonymous users to 10 hosts per search and
registered users to 50 hosts per search. All API calls re-
quire creating an account, and access to larger result sets
and HTTPS requires purchasing an account (a minimum
50 USD). Any results from the API and results in the web
interface beyond the 50 hosts per search require purchasing
“query credits”. Credits can be purchased at $2.50/credit,
or $500/month for unlimited credits, and allow viewing. In
comparison, Censys publicly provides a fully featured query
interface to parsed application handshake data and it pro-
vides API results in paginated sets of 5k hosts. We further
post all raw and parsed data from Censys on the Internet-
Wide Scan Data Repository at https://scans.io.
While Shodan has frequently been used to show the exis-
tence of vulnerable systems, its lack of timeliness, coverage,
and transparency prevents its use as a trusted tool by re-
searchers. In contrast, Censys is architected to be a fully
transparent, community-driven project. All of the code is
available on GitHub, all results are publicly available, and
we support a query syntax and API tailored to researchers.
8. CONCLUSION
Until now, there remained a gap between the technical
ability to perform host discovery scans on the IPv4 address
space and answering meaningful research questions. In this
paper, we introduced Censys, a public query engine and data
processing facility backed by data collected from ongoing
Internet-wide scans. Designed to help researchers answer
security related questions, Censys collects structured data
about the IPv4 address space and supports querying ﬁelds
derived from scans and generating statistical reports. We
explored several security applications of Censys and showed
how Censys can be used to easily answer questions from
recent studies. We hope that Censys enables researchers to
easily answer questions about the Internet that previously
required extensive eﬀort, while simultaneously reducing du-
plicate eﬀort and total scan traﬃc.
Acknowledgments
The authors thank Ben Burgess, Alishah Chator, Henry
Fanson, and Harsha Gotur for their help building Censys.
We thank the exceptional sysadmins at the University of
Michigan for their help and support throughout this project,
including Chris Brenner, Kevin Cheek, Laura Fink, Dan
Maletta, Jeﬀ Richardson, Donald Welch, Don Winsor, and
others from ITS, CAEN, and DCO. We are extremely grate-
ful to Elie Bursztein and the Google Anti-abuse team for
their support and advice, without whose help this project
would not have been possible. We also thank Brad Campbell,
Aleksander Durumeric, James Kasten, Kyle Lady, Adam
Langley, HD Moore, Pat Pannuto, Paul Pearce, Niels Provos,
Mark Schloesser, Eric Wustrow, our anonymous reviewers for
valuable feedback, and the many contributors to the ZMap
and ZGrab open source projects. This material is based
upon work supported by the National Science Foundation un-
der grants CNS-1111699, CNS-1255153, CNS-1345254, CNS-
1409505, CNS-1409758, and CNS-1518741, by the Google
Ph.D. Fellowship in Computer Security, by the Morris Well-
man Faculty Development Assistant Professorship, and by
an Alfred P. Sloan Foundation Research Fellowship.
11
9. REFERENCES
[1] D. Adrian, K. Bhargavan, Z. Durumeric, P. Gaudry,
M. Green, J. A. Halderman, N. Heninger, D. Springall,
E. Thomé, L. Valenta, B. VanderSloot, E. Wustrow,
S. Zanella-Béguelin, and P. Zimmermann. Imperfect forward
secrecy: How Diﬃe-Hellman fails in practice. In 22nd ACM
Conference on Computer and Communications Security,
Oct. 2015.
[2] D. Adrian, Z. Durumeric, G. Singh, and J. A. Halderman.
Zippier ZMap: Internet-wide scanning at 10 Gbps. In 8th
USENIX Workshop on Oﬀensive Technologies, Aug. 2014.
[3] S. Ajmani, B. Fitzpatrick, A. Gerrand, R. Griesemer,
A. Langley, R. Pike, D. Symonds, N. Tao, and I. L. Taylor.
A conversation with the Go team. Golang blog, June 2013.
http://blog.golang.org/a-conversation-with-the-go-team.
[4] Apache. Lucene. https://lucene.apache.org.
[5] M. Bailey, D. Dittrich, E. Kenneally, and D. Maughan. The
Menlo report. IEEE Security and Privacy, 10(2), Mar. 2012.
[6] S. Banon. Elasticsearch, 2013. https://www.elastic.co.
[7] B. Beurdouche, K. Bhargavan, A. Delignat-Lavaud,
C. Fournet, M. Kohlweiss, A. Pironti, P.-Y. Strub, and J. K.
Zinzindohoue. A messy state of the union: Taming the
composite state machines of TLS. In 36th IEEE Symposium
on Security and Privacy, May 2015.
[8] A. Bonkoski, R. Bielawski, and J. A. Halderman.
Illuminating the security issues surrounding lights-out server
management. In 8th USENIX Workshop on Oﬀensive
Technologies, Aug. 2013.
[9] J. W. Bos, J. A. Halderman, N. Heninger, J. Moore,
M. Naehrig, and E. Wustrow. Elliptic curve cryptography in
practice. In 18th International Conference on Financial
Cryptography and Data Security, Mar. 2014.
[10] C. Brubaker, S. Jana, B. Ray, S. Khurshid, and
V. Shmatikov. Using Frankencerts for automated adversarial
testing of certiﬁcate validation in SSL/TLS implementations.
In 35th IEEE Symposium on Security and Privacy, May
2014.
[11] S. Checkoway, M. Fredrikson, R. Niederhagen,
A. Everspaugh, M. Green, T. Lange, T. Ristenpart, D. J.
Bernstein, J. Maskiewicz, and H. Shacham. On the practical
exploitability of Dual EC in TLS implementations. In 23rd
USENIX Security Symposium, Aug. 2014.
[12] Codenomicon. Heartbleed, Apr. 2014.
http://heartbleed.com.
[13] A. Costin, J. Zaddach, A. Francillon, D. Balzarotti, and
S. Antipolis. A large scale analysis of the security of
embedded ﬁrmwares. In 23rd USENIX Security Symposium,
Aug. 2014.
[14] J. Czyz, M. Kallitsis, M. Gharaibeh, C. Papadopoulos,
M. Bailey, and M. Karir. Taming the 800 pound gorilla: The
rise and decline of NTP DDoS attacks. In 14th ACM
Internet Measurement Conference, Nov. 2014.
[15] Z. Durumeric, D. Adrian, M. Bailey, and J. A. Halderman.
Heartbleed bug health report, Apr. 2014.
https://zmap.io/heartbleed.
[16] Z. Durumeric, D. Adrian, J. Kasten, D. Springall, M. Bailey,
and J. A. Halderman. POODLE attack and SSLv3
deployment, Oct. 2014. https://poodle.io.
[17] Z. Durumeric, M. Bailey, and J. A. Halderman. An
Internet-wide view of Internet-wide scanning. In 23rd
USENIX Security Symposium, Aug. 2014.
[18] Z. Durumeric, J. Kasten, M. Bailey, and J. A. Halderman.
Analysis of the HTTPS certiﬁcate ecosystem. In 13th ACM
Internet Measurement Conference, Oct. 2013.
[19] Z. Durumeric, F. Li, J. Kasten, J. Amann, J. Beekman,
M. Payer, N. Weaver, D. Adrian, V. Paxson, M. Bailey, and
J. A. Halderman. The Matter of Heartbleed. In 14th ACM
Internet Measurement Conference, Nov. 2014.
[20] Z. Durumeric, E. Wustrow, and J. A. Halderman. ZMap:
Fast Internet-wide scanning and its security applications. In
22nd USENIX Security Symposium, Aug. 2013.
[30] J. Matherly. Shodan FAQ.
http://www.shodanhq.com/help/faq.
[31] J. Mauch. Open resolver project.
http://openresolverproject.org.
[32] Modbus IDA. MODBUS TCP implementation guide, Oct.
2006. http://www.modbus.org/docs/
Modbus_Messaging_Implementation_Guide_V1_0b.pdf.
[33] B. Moller, T. Duong, and K. Kotowicz. This POODLE bites:
Exploiting the SSL 3.0 fallback, Sept. 2014.
https://www.openssl.org/~bodo/ssl-poodle.pdf.
[34] Network Time Foundation. Open NTP project.
http://openntpproject.org.
[35] C. Palmer and R. Sleevi. Gradually sunsetting SHA-1.
Google Online Security Blog.
http://googleonlinesecurity.blogspot.com/2014/09/
gradually-sunsetting-sha-1.html.
[36] R. Pike. Concurrency is not parallelism. In Heroku Waza,
Jan. 2012. http://talks.golang.org/2012/waza.slide.
[37] Solid IT. DB-Engines ranking.
http://db-engines.com/en/ranking.
[38] E. Wustrow, C. Swanson, and J. A. Halderman. TapDance:
End-to-middle anticensorship without ﬂow blocking. In 23rd
USENIX Security Symposium, Aug. 2014.
[39] K. Zetter. A cyberattack has caused conﬁrmed physical
damage for the second time ever, Jan. 2015.
http://www.wired.com/2015/01/
german-steel-mill-hack-destruction.
[21] Facebook. RocksDB: A persistent key-value store for fast
storage environments. http://rocksdb.org.
[22] Google. Protocol buﬀers.
https://github.com/google/protobuf.
[23] R. Graham. Masscan: The entire Internet in 3 minutes.
Errata Security blog, Sept. 2013. http://blog.erratasec.com/
2013/09/masscan-entire-internet-in-3-minutes.html.
[24] X. Gu and X. Gu. On the detection of fake certiﬁcates via
attribute correlation. Entropy, 17(6), 2015.
[25] N. Heninger, Z. Durumeric, E. Wustrow, and J. A.
Halderman. Mining your Ps and Qs: Detection of
widespread weak keys in network devices. In 21st USENIX
Security Symposium, Aug. 2012.
[26] M. Kranch and J. Bonneau. Upgrading HTTPS in mid-air:
An empirical study of strict transport security and key
pinning. In 2015 Network and Distributed System Security
Symposium, Feb. 2015.
[27] M. Kührer, T. Hupperich, C. Rossow, and T. Holz. Exit
from hell? Reducing the impact of ampliﬁcation DDoS
attacks. In 23rd USENIX Security Symposium, Aug. 2014.
[28] Y. Liu, A. Sarabi, J. Zhang, P. Naghizadeh, M. Karir,
M. Bailey, and M. Liu. Cloudy with a chance of breach:
Forecasting cyber security incidents. In 24th USENIX
Security Symposium, Aug. 2015.
[29] W. R. Marczak, J. Scott-Railton, M. Marquis-Boire, and
V. Paxson. When governments hack opponents: A look at
actors and technology. In 23rd USENIX Security
Symposium, Aug. 2014.
12