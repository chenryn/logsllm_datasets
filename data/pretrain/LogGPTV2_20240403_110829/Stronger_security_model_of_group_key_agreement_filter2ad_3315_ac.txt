Remark : In many security models, when the adversary
corrupts an honest party, it takes full control over this party
and reveals all its secret information.
In the GBG mod-
el, since the Corrupt query just simulates the long-term
key leakage attack, we change the tag of this query to cap-
ture the adversarial ability more accurately. The role of
Long-termKeyReveal in our model is the same as that of
Corrupt in the GBG model.
Overall, eGBG model extends the adversarial capabilities
to the following extent: we allow the adversary to reveal any
i
subset of the long-term keys and ephemeral keys of
U and
its partner which does not contain both the long-term and
ephemeral keys of one party.
∏
4. BGS+ PROTOCOL
To construct a GKA protocol which is secure in eGBG
model, we modify some details of the original BGS protocol
and get BGS+ protocol.
438
4.1 Description of BGS+ protocol
rest of the paper.
We (cid:12)rst introduce some notations that will be used in the
U = {U1; U2;··· ; Un}: The set of the parties who want to
establish the session key. We also suppose that the group
members are ordered in a logical ring.
p; q; g: Two large primes p and q with q|(p − 1), and a
generator g of group G with order q.
k: The security parameter in this protocol.
(pki; ski): The long-term key pair of the participant Ui
which is used for the signature.
ki; xi: The ephemeral keys pair of the participant Ui.
H : {0; 1}∗ → {0; 1}(cid:21): Hash function modelled as a ran-
H1=H2 : {0; 1}∗ → Zq=Zp: Hash functions modelled as
dom oracle, where (cid:21) is another security parameter.
random oracles.
SK: Session key established by the participants.
This protocol aims to establish a con(cid:12)dential communica-
tion. The detailed description can be seen in Algorithm 2.
Note that we drop the operator \modp" for clarity.
Round 1:
Computation
exi = H1(ski; xi) and yi = g
destroys exi.
1. Each Ui chooses xi
fxi . After obtaining yi, Ui
R← Zq and computes
2. Each Ui sets M I
3. Each Ui computes a signature (cid:27)I
i = yi∥pid.
i on M I
i .
Broadcast
Each Ui broadcasts M I
i ∥(cid:27)I
i .
Round 2:
Check
j of incoming
Each Ui checks all signatures (cid:27)I
tL
i = H2(y
messages M I
Computation
j ∥(cid:27)I
fxi
1. Each Ui computes exi = H1(ski; xi),
j for j ̸= i.
fxi
i+1) and Ti = tL
i−1), tR
R← {0; 1}k. Then Ui except Un
i = Ti∥ki. Un computes maskn = kn ⊕ tR
n = maskn∥Tn∥H2(kn). After
i = H2(y
2.Each Ui chooses ki
computes M II
and H2(kn) and sets M II
this step, each Ui destroys exi, tL
i ⊕ tR
i .
i and tR
i , Un
n
additionally destroys kn.
3. Each Ui computes a signature (cid:27)II
i on M II
i
.
Broadcast
Each Ui broadcasts M II
After Round 1 and Round 2
i ∥(cid:27)II
i
.
Check
1. Each Ui veri(cid:12)es the incoming the signatures (cid:27)II
j
on the corresponding message M II
j
and j ̸= i also checks that T1 ⊕ ··· ⊕ Tn
2. Each Ui for i < n, computes exi = H1(ski; xi)
?= 0.
for each j ∈ [1; n]
fxi
i = H2(y
i−1), extracts
and tL
kn = maskn ⊕ T1 ⊕ ··· ⊕ Ti−1 ⊕ tL
commitment H2(kn) sent in Round 2 for the kn
extracted. If so, each Ui computes
sid = H2(pid∥k1∥···∥kn−1∥H2(kn)).
i and checks the
Key Computation
SK = H(sid∥k1∥···∥kn).
Each Ui computes the session key
Algorithm 2: BGS+ protocol
4.2 Some design principles
The most signi(cid:12)cant di(cid:11)erence between BGS protocol and
ephemeral intermediate result to generate yi, tL
i and tR
i .
This bene(cid:12)t of doing so is obvious: since we will destroy
ours is that we use exi = H1(ski; xi) instead of xi as the
exi after getting the needed values, this method avoid the
xi, it can not obtain the exi yet since it has to get the long-
possibility that the ephemeral secret state will be obtained
by the adversary during the protocol execution process. On
the other hand, even if the adversary gets the ephemeral key
term key ski at the same time, but it is not allowed to reveal
the long-term key and the ephemeral key simultaneously in
eGBG model.
5. SECURITY ANALYSIS
Now, we prove that BGS+ protocol achieves the AKE
security goal, the MA security goal and the Contribu-
tiveness.
Theorem 1 (AKE security). Let H1, H2 and H be
three hash functions modelled as random oracles and the
signature scheme used in GBS+ is UF-CMA secure, MAKE
be an adversary against the AKE-security of the protocol.
Then BGS+ is AKE secure if the CDH assumption hold-
s in G. Furthermore, suppose MAKE has an advantage
AdvAKE
BGS+(MAKE) to break AKE security of BGS+ by ac-
tivating at most l sessions for each party, then there is a
CDH problem solver W that can solve the CDH problem in
polynomial time with an advantage AdvCDH
q2
H2
2(cid:21) + 2n2 ·
AdvSig
BGS+(W ), where n is the number of
parties; AdvSig
BGS+ denotes the advantage of a polynomial
adversary against the UF-CMA security of the signature;
qH1 , qH2 and qH are the maximum number of times of hash
queries H1, H2 and H, respectively; qs represents the max-
imum number of queries to the Send oracles asked by the
adversary.
BGS+(MAKE) ≤ q2
AdvAKE
BGS+ + 2nl · AdvCDH
BGS+(W ) and
s +qH2
2k−1 +
p + q2
q2
H1
q +
H
Theorem 2 (MA security). Let H1, H2 and H be
three random oracles and the signature scheme used in G-
BS+ is UF-CMA secure, MM A be an adversary against the
MA-security of the protocol. Then BGS+ is MA secure.
Furthermore, the MA advantage of MM A AdvM A
BGS+(MM A)
is upper bounded by
BGS+ + q2
BGS+(MM A) ≤ |n2 · AdvSig
AdvM A
− 1|, where n is the number of parties; AdvSig
q2
H2
p +
q2
BGS+ denotes
H
2(cid:21)
the advantage of a polynomial adversary against the UF-
CMA security of the signature; qH1 , qH2 and qH are the
maximum number of times of hash queries H1, H2 and H;
qs represents the maximum number of queries to the Send
oracles asked by the adversary.
q2
H1
q +
2k−1 +
s
Theorem 3 (Contributiveness). Let H1, H2 and H
be three random oracles and the signature scheme used in
GBS+ is UF-CMA secure, MCon be an adversary against the
contributiveness of the protocol with the advantage AdvCon
BGS+(MCon) ≤ | q2
Then BGS+ is contributive and AdvCon
2k−1 +
− 1|, where qH2 and qH are the maximum number
q2
p + q2
H2
of times of hash queries H2 and H; qs represents the max-
imum number of queries to the Send oracles asked by the
adversary.
H
2(cid:21)
s
BGS+(MCon).
The proofs for Theorems 1, 2 and 3 can be found in the
full version [20].
439
6. CONCLUSION
We have analyzed the GBG model and found out that this
model doesn’t consider the ephemeral key leakage resistance
property. Considering this drawback, we extend GBG model
to the following extent: the only corruption powers we don’t
give an adversary in the game are that it is not allowed to
reveal both the long-term key and the ephemeral key of a
legitimate party simultaneously. We then introduce a new
GKA protocol called BGS+ protocol based on BGS protocol
which is provably secure in GBG model but cannot resist
ephemeral key leakage attack and prove that it is secure in
the new model. As far as we know, this is the (cid:12)rst provably
secure GKA protocol in this strong security model.
As for limitations, we didn’t take the e(cid:14)ciency into ac-
count. A natural direction for further research is the design
of provably secure protocols with lower computational cost
and communication cost. Additionally, the design of GKA
protocols in standard models where the security of the pro-
tocols isn’t dependent on the security of random oracles is
another imperative future research consideration.
7. ADDITIONAL AUTHORS
8. REFERENCES
[1] M. Abdalla, P.-A. Fouque, and D. Pointcheval.
Password-Based Authenticated Key Exchange in the
Three-Party Setting. In S. Vaudenay, editor, Public
Key Cryptography{PKC’05, volume 3386 of LNCS,
pages 65{84. Springer, 2005.
[2] S. S. Al-Riyami and K. G. Paterson. Tripartite
Authenticated Key Agreement Protocols from
Pairings. In Cryptography and Coding, 9th IMA
International Conference, volume 2898 of LNCS,
pages 332{359. Springer, 2003.
[3] M. Bellare and P. Rogaway. Entity Authentication
and Key Distribution. In Advances in
Cryptology{CRYPTO’93, volume 773 of LNCS, pages
232{249. Springer, 1993.
[4] S. Blake-Wilson, D. Johnson, and A. Menezes. Key
Agreement Protocols and Their Security Analysis. In
Cryptography and Coding, 6th IMA International
Conference, volume 1355 of LNCS, pages 30{45.
Springer, 1997.
[5] J.-M. Bohli, M. I. Gonzalez Vasco, and R. Steinwandt.
Secure group key establishment revisited. Int. J. Inf.
Sec., 6(4):243{254, 2007.
[6] C. Boyd and J. M. G. Nieto. Round-Optimal
Contributory Conference Key Agreement. In Public
Key Cryptography{PKC’03, volume 2567 of LNCS,
pages 161{174. Springer, 2003.
[7] E. Bresson, O. Chevassut, A. Essiari, and
D. Pointcheval. Mutual Authentication and Group
Key Agreement for Low-Power Mobile Devices. In
Proc. of MWCN (cid:20)S03, page 59 }U62. World Scienti(cid:12)c
Publishing, October 2003.
[8] E. Bresson, O. Chevassut, and D. Pointcheval.
Provably Authenticated Group Di(cid:14)e-Hellman Key
Exchange - The Dynamic Case. In Advances in
Cryptology{ASIACRYPT’01, volume 2248 of LNCS,
pages 290{309. Springer, 2001.
[9] E. Bresson, O. Chevassut, and D. Pointcheval.
Dynamic Group Di(cid:14)e-Hellman Key Exchange under
Standard Assumptions. In Advances in
Cryptology{EUROCRYPT’02, volume 2332 of LNCS,
pages 321{336. Springer, 2002.
[10] E. Bresson, O. Chevassut, D. Pointcheval, and J.-J.
Quisquater. Provably authenticated group
Di(cid:14)e-Hellman key exchange. In CCS’01: Proceedings
of the 8th ACM conference on Computer and
Communications Security, pages 255{264. ACM, 2001.
[11] E. Bresson and M. Manulis. Securing Group Key
Exchange against Strong Corruptions. In Proceedings
of ACM Symposium on Information, Computer and
Communications Security (ASIACCS’08), pages
249{260. ACM Press, 2008.
[12] R. Canetti and H. Krawczyk. Analysis of
Key-Exchange Protocols and Their Use for Building
Secure Channels. In Advances in Cryptology -
EUROCRYPT’01, volume 2045 of LNCS, pages
453{474. Springer, 2001.
[13] M. C. Gorantla, C. Boyd, and J. M. Gonz(cid:19)alez Nieto.
Modeling Key Compromise Impersonation Attacks on
Group Key Exchange Protocols. In S. Jarecki and
G. Tsudik, editors, Public Key Cryptography{PKC’09,
volume 5443 of LNCS, pages 105{123. Springer, 2009.
[14] J. Katz and J. S. Shin. Modeling insider attacks on
group key-exchange protocols. In Proceedings of the
12th ACM Conference on Computer and
Communications Security{CCS’05, pages 180{189.
ACM, 2005.
[15] B. A. LaMacchia, K. Lauter, and A. Mityagin.
Stronger Security of Authenticated Key Exchange. In
W. Susilo, J. K. Liu, and Y. Mu, editors, Provable
Security, First International Conference, ProvSec
2007, volume 4784 of LNCS, pages 1{16. Springer,
2007.
[16] M. Manulis. Provably Secure Group Key Exchange,
volume 5 of IT Security. Europ(cid:127)aischer
Universit(cid:127)atsverlag, Berlin, Bochum, D(cid:127)ulmen, London,
Paris, August 2007. Available at
http://www.manulis.eu/phd.html. Last accessed on
29 May 2008.
[17] M. Manulis, K. Suzuki, and B. Ustaoglu. Modeling
Leakage of Ephemeral Secrets in Tripartite/Group
Key Exchange. In D. Lee and S. Hong, editors,
Information, Security and Cryptology{ICISC’09,
Revised Selected Papers, volume 5984 of LNCS, pages
16{33. Springer, 2010.
[18] W. Wang and L. Hu. E(cid:14)cient and Provably Secure
Generic Construction of Three-Party Password-Based
Authenticated Key Exchange Protocols. In R. Barua
and T. Lange, editors, Progress in
Cryptology{INDOCRYPT’06, volume 4329 of LNCS,
pages 118{132. Springer, 2006.
[19] K. Yoneyama. E(cid:14)cient and Strongly Secure
Password-Based Server Aided Key Exchange
(Extended Abstract). In D. R. Chowdhury, V. Rijmen,
and A. Das, editors, Progress in
Cryptology{INDOCRYPT’08, volume 5365 of LNCS,
pages 172{184. Springer, 2008.
[20] J. Zhao, D. Gu, and M. C. Gorantla. Stronger
Security Model of Group Key Agreement. Cryptology
ePrint Archive, Report 2010/494, 2010.
http://eprint.iacr.org/2010/494.
440