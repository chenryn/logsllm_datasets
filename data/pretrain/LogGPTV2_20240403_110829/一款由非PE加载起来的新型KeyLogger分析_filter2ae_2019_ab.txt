498EC58566B52AA5875497CADF513547目前无检出，样本上传之后发现这应该是一个名为Mass KeyLogger的新版本键盘监听器
而且国外的厂家形容这是非常危险的新型木马
样本使用dnspy去混淆之后还是有比较好的可读性的，这里就大概看一下。
此外，dump_file2，也就是这个keylogger的资源中有个四个资源文件，后面可能会解密加载这些资源
首先在dnspy中定位到样本的入口点如下：
样本入口点是内部类xW的实例化函数xW()
在xW函数中，主要是调用了aP类的bx方法。
这里过来可以知道bx方法中调用的是pC4类的Fvq方法：
过来给Fvq方法设置一个断点：
在Fvq方法中，程序首先是加载了上面名为LR4Cc2YdSbtlPu3Gpn.gkaT3RqoEIxDLaxtck的资源数据
然后把资源赋值给了array数组，并在下面循环取解密这个资源数据
最后，程序将数据以键值对的方式存放到Dictionary中然后赋值给Jbgkf0diFn，再下面通过放射加载调用。
由于断点已经设置在了Fvq函数这里，直接程序F5过来
成功读取到元数据
成功解密，重新给array赋值：
成功生成字典：
得到要调用的对应的函数，用委托的方式反射加载
如下：
这里会遍历加载所有用到的函数
直接往后走，读取名为b7XmD97o14L13xFEcR.B1Pe7UrZbjaNUkiGSk的资源
解密一个数据放到array4
这里有一个超长的switch case，干扰分析用的
这个类的代码超级长，肯定不能直接走，但是这里我想，既然它读取了资源放到了array4变量中，后面肯定要操作这个变量的，所以直接对所有操作了aray4这个变量的地方设置断点
这里发现程序将array4的长度new了一个新的byte为array6，所以同样的，对array6所以操作点设置断点：
程序这里在动态解密array6
所以最后只保留一个array6的赋值断点即可
成功命中断点：
此时把array6给dump出来，这里应该是程序用到的所有的字符串信息
往下走，这里result返回回来会有一些用到的关键信息，包括要检测的杀软等：
后面的解密配置信息，包括ftp服务器的地址，账号密码等都是通过这里解密出来
在YWc类的sCo方法中获取一些机密信息并格式化，包括用户名，出口IP、国家信息、操作系统版本、位数、SerialKey、CPU、GPU、AV、Screen
Resolution、Current Time、Started、Interval、Process、Melt、Exit after
delivery、是否是Administrator、所有运行中的进程名和窗口名（应该是用于反调试检测）
获取到的完整信息如下：
{User Name: xxxxx  
IP: 127.0.0.1  
Country: CN  
Windows OS: Microsoft Windows 7 家庭普通版 64bit  
Windows Serial Key: YGFVB-xxxxx-xxxxxx-PTWTJ-YRYRV  
CPU: Intel(R) Core(TM) i7-8700 CPU @ 3.20GHz  
GPU: VMware SVGA 3D  
AV: NA  
Screen Resolution: 1920×1080  
Current Time: 2020/9/16 12:25:50  
Started: 2020/9/16 12:17:21  
Interval: 96 hour  
Process: C:\Users\xxxx\Desktop\xxxxxxx-cleaned.exe  
Melt: false  
Exit after delivery: false  
As Administrator: False  
Processes:  
Name:dnSpy-x86, Title:dnSpy v6.0.5 (32-bit, 调试中)  
Name:吾爱本地破解工具包, Title:Rolan  
}
包括后续还会尝试获取各类邮件服务器的隐私信息
在JA类的KWk方法中尝试获取主流浏览器的隐私信息
将获取到的所有的信息添加到list中并返回
获取计算计算机的HWID
将获取到的信息都通过拼接
由于这个样本的代码和功能类实在是太多，这里就不一一详细分析了
###  沙箱分析
直接把样本丢在any.run的沙箱跑一下行为：
看起来并没有反调试之类的东西，而且any.run已经识别出来这是一个massLogger了。
这个样本的C2为：192.185.155.49 : 21
这里的端口是21 应该是FTP服务登录的
解析出来的域名是nankasa.com.ar
其中api.ipify.org用于获取用户的出口IP
第二个数据包中就是上传的一些基本信息：
将数据包下载回来看一下，发现的确是FTP的方式进行通信的：
然后使用这个用户密码成功登录了攻击者的FTP服务器，这里的命名方式应该是  
用户名 _地区_HWID_ 版本
这个文件内容就是从用户主机收集上传的信息，包括之前看到的基本信息以及后面收集的浏览器相关的内容。
成功获取一组facebook的账号密码：
这里应该是攻击者用于测试的账号密码
睡觉前又看到有新信息上传了 哈哈，但是新文件还是没有数据，应该还是测试或是其他分析人员传的。
但是第二天登录的时候，发现密码已经修改了，应该攻击者知道有人异地登录了服务器，于是舍弃了该木马。
## 0x04 小结
看来国外的大佬说此样本可能会取代AgentTesla的身份是有道理的，目前来看，该款木马功能比AgentTesla完善，代码结构更复杂，干扰分析的代码也很多，并且最直接的是，AgentTesla主要是通过多吃解密资源的方式加载，而MassKeLogger使用了多次非PE加载的方式，在这方面的技术已经比较成熟，这样做最直接的好处就是应该会有更好的免杀性。