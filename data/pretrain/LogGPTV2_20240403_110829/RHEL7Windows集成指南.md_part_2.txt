::: part
::: titlepage
# []{#adding-linux-to-ad.html#adding-linux-to-ad}部分 I. 将单一 Linux 系统添加到 Active Directory 域 {.title}
:::
:::
[]{#SSSD-AD.html}
::: chapter
::: titlepage
# []{#SSSD-AD.html#SSSD-AD}第 2 章 使用 Active Directory 作为 SSSD 的身份提供程序 {.title}
:::
系统安全服务后台程序(SSSD)是一种用于访问远程目录和身份验证机制的系统服务。它将本地系统（SSSD
*客户端 ）连接到外部后端系统（域*）。这为 SSSD 客户端提供了使用 SSSD
供应商访问身份和身份验证远程服务的权限。例如，这些远程服务包括：LDAP
目录、身份管理(IdM)或 Active Directory(AD)域，或者 Kerberos 域。
当用作 AD 集成的身份管理服务时，SSSD 是 NIS 或 Winbind
等服务的替代选择。本章论述了 SSSD 如何与 AD 配合工作。有关 SSSD
[*的详情，请参阅系统级身份验证指南*](https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/System-Level_Authentication_Guide/SSSD.html){.ulink}。
::: section
::: titlepage
# []{#SSSD-AD.html#how-the-ad-provider-handles-trusted-domains}AD 提供程序如何处理受信任的域 {.title}
:::
本节论述了当您在 `/etc/sssd/sssd.conf`{.filename} 文件中设置
[**id_provider = ad**]{.command} 时，SSSD 如何处理可信域。
::: itemizedlist
-   SSSD 只支持单一 Active Directory 林中的域。如果 SSSD
    需要从多个地区访问多个域，请考虑使用带有信任（首选）的 IdM 或
    `winbindd`{.systemitem} 服务而不是 SSSD。
-   默认情况下，SSSD
    会发现林中的所有域，如果可信域中的对象请求到达，SSSD 会尝试解析它。
    如果可信域无法访问或在地理位置上造成速度较慢，您可以在
    `/etc/sssd/sssd.conf`{.filename} 中设置 *`ad_enabled_domains`*
    参数来限制从哪些可信域 SSSD 解析对象。
-   默认情况下，您必须使用完全限定用户名从可信域解析用户。
:::
:::
::: section
::: titlepage
# []{#SSSD-AD.html#sssd-integration-intro}为 SSSD 配置 AD 提供程序 {.title}
:::
AD 供应商可让 SSSD 使用 LDAP 身份供应商和 Kerberos 身份验证供应商，并对
AD 环境进行优化。
::: section
::: titlepage
## []{#SSSD-AD.html#sssd-integration-overview}集成选项概述 {.title}
:::
Linux 和 Windows 系统为用户和组群使用不同的标识符：
::: itemizedlist
-   Linux *使用用户 ID* (UID) *和组 ID* (GID)。
    [*请参阅《系统管理员指南》中的管理用户和组*](https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/System_Administrators_Guide/ch-Managing_Users_and_Groups.html){.ulink}
    。Linux UID 和 GID 符合 POSIX 标准。
-   Windows *使用安全 ID* (SID)。
:::
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
不要在 Windows 和 Active Directory 中使用相同的用户名。
:::
向 Red Hat Enterprise Linux 系统进行身份验证的用户（包括 AD
用户）必须分配有 UID 和 GID。为此，SSSD 提供以下集成选项：
::: variablelist
[]{#SSSD-AD.html#sssd-id-mapping-concept}[为 AD 用户自动生成新的 UID 和 GID]{.term}
:   SSSD 可以使用 AD 用户的 SID 在名为 ID *映射的进程中计算生成 POSIX
    ID*。ID 映射会在 AD 中的 SID 和 Linux 中的 ID 之间创建一个映射。
    ::: itemizedlist
    -   当 SSSD 检测到新的 AD 域时，它会为新域分配一系列可用
        ID。因此，每个 AD 域在每个 SSSD 客户端机器上都有相同的 ID 范围。
    -   当 AD 用户第一次登录 SSSD 客户端机器时，SSSD 在 SSSD
        缓存中为用户创建一个条目，包括基于用户的 SID 以及该域的 ID
        范围的 UID。
    -   因为 AD 用户的 ID 是以一致的方式从同一 SID
        生成，所以用户在登录到任何 Red Hat Enterprise Linux
        系统时具有相同的 UID 和 GID。
    :::
    请参阅 ["使用 ID 映射配置 AD 域作为 SSSD
    的提供程序"一节](#SSSD-AD.html#sssd-ad-proc "使用 ID 映射配置 AD 域作为 SSSD 的提供程序"){.xref}。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    当所有客户端系统都使用 SSSD 将 SID 映射到 Linux ID
    时，映射是一致的。如果有些客户端使用不同的软件，请选择以下之一：
    ::: itemizedlist
    -   确定所有客户端都使用相同的映射算法。
    -   使用显式 POSIX 属性，如 [使用 AD 中定义的 POSIX
        属性](#SSSD-AD.html#sssd-posix-concept){.xref} 所述。
    :::
    :::
[]{#SSSD-AD.html#sssd-posix-concept}[使用 AD 中定义的 POSIX 属性]{.term}
:   AD 可以创建并存储 POSIX 属性，如
    *`uidNumber`*、*`gidNumber`*、*`unixHomeDirectory`* 或
    *`loginShell`*。
    使用 [为 AD 用户自动生成新的 UID 和
    GID](#SSSD-AD.html#sssd-id-mapping-concept){.xref} 中描述的 ID
    映射时，SSSD 会创建新的 UID 和 GID，这将覆盖 AD 中定义的值。要保留
    AD 定义的值，必须在 SSSD 中禁用 ID 映射。
    请参阅 ["配置 SSSD 使用 AD 中定义的 POSIX
    属性"一节](#SSSD-AD.html#sssd-posix "配置 SSSD 使用 AD 中定义的 POSIX 属性"){.xref}。
:::
:::
::: section
::: titlepage
## []{#SSSD-AD.html#sssd-ad-proc}使用 ID 映射配置 AD 域作为 SSSD 的提供程序 {.title}
:::
### []{#SSSD-AD.html#idm139883602606064}先决条件
确保 AD 系统和 Linux 系统都已正确配置：
::: itemizedlist
-   验证名称解析配置。特别是，验证 DNS SRV 记录。例如，对于名为
    `ad.example.com`{.literal} 的域：
    ::: itemizedlist
    -   验证 DNS SRV LDAP 记录：
        ``` screen
        # dig -t SRV _ldap._tcp.ad.example.com
        ```
    -   验证 AD 记录：
        ``` screen
        # dig -t SRV _ldap._tcp.dc._msdcs.ad.example.com
        ```
    :::
    如果您稍后将 SSSD 连接到特定的 AD 域控制器，则不需要验证 DNS SRV
    记录。
-   验证两个系统上的系统时间是否同步。这样可确保 Kerberos 能够正常工作。
-   同时打开 Linux 系统和所有 AD
    [域控制器上所需的端口](#SSSD-AD.html#sssd-req-ports-client "表 2.1. 使用 SSSD 将 Linux 系统直接集成到 AD 所需的端口"){.link}
    ：从 Linux 系统到 AD 域控制器，再重新打开。
    ::: table
    []{#SSSD-AD.html#sssd-req-ports-client}
    **表 2.1. 使用 SSSD 将 Linux 系统直接集成到 AD 所需的端口**
    ::: table-contents
      服务            端口   协议         备注
      --------------- ------ ------------ -------------------------------------------
      DNS             53     UDP 和 TCP    
      LDAP            389    UDP 和 TCP    
      Kerberos        88     UDP 和 TCP    
      Kerberos        464    UDP 和 TCP   kadmin 用来设置和更改密码
      LDAP 全局目录   3268   TCP          如果使用 `id_provider = ad`{.option} 选项
      NTP             123    UDP          可选
    :::
    :::
:::
### []{#SSSD-AD.html#idm139883593016288}配置本地系统
红帽建议使用 [**realm join**]{.command} 命令来配置系统。请参阅 [第 3 章
*使用 `realmd`{.systemitem} 连接到 Active Directory
域*](#ch-Configuring_Authentication.html "第 3 章 使用 realmd 连接到 Active Directory 域"){.xref}。`realmd`{.systemitem}
套件自动编辑所有必要的配置文件。例如：
``` screen
# realm join ad.example.com
```
如果您不想使用
`realmd`{.systemitem}，您可以手动配置系统。[请参阅红帽知识库中的手动将
SSSD 客户端连接到 Active Directory
域](https://access.redhat.com/articles/3023951){.ulink}。
### []{#SSSD-AD.html#nss-options}可选：配置用户主目录和 Shell
当用户首次登录 Linux `系统时，pam_oddjob_mkhomedir.so`{.systemitem}
库会自动创建主目录。默认情况下，SSSD 从 AD
身份提供程序检索主目录的格式。在 Linux 客户端中自定义目录格式：
::: procedure
1.  打开 `/etc/sssd/sssd.conf`{.filename} 文件：
2.  在 `[domain]`{.literal} 部分，使用以下选项之一：
    ::: itemizedlist
    -   *`fallback_homedir`* 设置回退主目录格式，只有在 AD
        中未定义主目录时才使用
    -   *`override_homedir`* 设置主目录模板，始终覆盖 AD 中定义的主目录
    :::
    例如，要始终使用格式
    `/home/domain_name`{.filename}``{=html}/*`user_name`*``{=html}:
    ``` screen
    [domain/EXAMPLE]
    [... file truncated ...]
    override_homedir = /home/%d/%u
    ```
    详情请查看 [[sssd.conf]{.refentrytitle}(5)]{.citerefentry} man
    page。
:::
默认情况下，SSSD 从 AD 中配置的 *`loginShell`* 参数检索用户 shell
的信息。在 Linux 客户端中自定义用户 shell 设置：
::: procedure
1.  打开 `/etc/sssd/sssd.conf`{.filename} 文件：
2.  使用这些选项定义所需的用户 shell 设置：
    ::: itemizedlist
    -   *`shell_fallback`* 设置回退值，仅在 AD 中没有定义 shell 时才使用
    -   *`override_shell`* 设置始终覆盖 AD 中定义的 shell 的值
    -   *`default_shell`* 设置默认 shell 值
    -   *`allowed_shells`* 和 *`vetoed_shells`* 设置允许或黑名单的 shell
        列表
    :::
    详情请查看 [[sssd.conf]{.refentrytitle}(5)]{.citerefentry} man
    page。
:::
### []{#SSSD-AD.html#idm139883562526080}加载新配置
::: procedure
-   更改配置文件后重启 SSSD。
    ``` screen
    # systemctl restart sssd.service
    ```
:::
### []{#SSSD-AD.html#idm139883616852464}其它资源
::: itemizedlist
-   有关 LDAP 和 Kerberos 供应商的其他配置选项，请查看
    [[sssd-ldap]{.refentrytitle}(5)]{.citerefentry} 和
    [[sssd-krb5]{.refentrytitle}(5)]{.citerefentry} man page。
-   有关 AD 供应商的其他配置选项，请查看
    [[sssd-ad]{.refentrytitle}(5)]{.citerefentry} man page。
:::
:::
::: section
::: titlepage
## []{#SSSD-AD.html#sssd-posix}配置 SSSD 使用 AD 中定义的 POSIX 属性 {.title}
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
*在以前的版本中，UNIX 扩展的 Identity Management* 可用于为用户帐户提供
POSIX 属性。扩展现已被弃用。详情请查看 [Microsoft Developer
Network](https://msdn.microsoft.com/en-us/library/cc772571.aspx){.ulink}。
如果您正在使用 UNIX 的 Identity Management for
[UNIX，请参阅知识库文章以了解常见问题解答](https://access.redhat.com/articles/2203991){.ulink}。
有关引用 Unix 和 Unix 软件包的 Identity Management 和 *Unix*
软件包的旧程序，请查看这些红帽知识库文章：
::: itemizedlist
-   [使用 POSIX 属性配置 Active Directory
    域](https://access.redhat.com/articles/3023821){.ulink}
-   [将 Active Directory 配置为 LDAP
    域](https://access.redhat.com/articles/3023861){.ulink}
:::
:::
### []{#SSSD-AD.html#idm139883600166976}建议
为获得最佳性能，请将 POSIX 属性发布到 AD 全局目录。如果全局目录中没有
POSIX 属性，SSSD 会直接连接到 LDAP 端口上的单个域控制器。
### []{#SSSD-AD.html#idm139883562658864}将 Linux 系统加入 AD 域
按照 ["使用 ID 映射配置 AD 域作为 SSSD
的提供程序"一节](#SSSD-AD.html#sssd-ad-proc "使用 ID 映射配置 AD 域作为 SSSD 的提供程序"){.xref}
中的步骤操作。
### []{#SSSD-AD.html#idm139883617158112}在 SSSD 中禁用 ID 映射
::: procedure
1.  打开 `/etc/sssd/sssd.conf`{.filename} 文件：
2.  在 AD 域部分，添加 *`ldap_id_mapping = false`* 设置。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    如果您使用 `realm`{.systemitem} 实用程序加入域并添加
    `--automatic-id-mapping=no`{.option} 参数，则 `realm`{.systemitem}
    实用程序已使用 `ldap_id_mapping = false`{.option} 设置 SSSD。
    :::
3.  如果您之前请求的任何用户使用默认 ID 映射配置的用户，请删除 SSSD
    缓存：