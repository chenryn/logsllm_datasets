distributions of the four data sets do not exhibit very large differ-
ences.
Concerning how often unneeded self-signed certiﬁcates were in-
cluded in the server’s response, we only found 1,727 occurrences
2The minimum chain length was naturally 0, as some end-host cer-
tiﬁcates are self-signed or do not require intermediate certiﬁcates.
435Figure 10: Popular signature algorithms in certiﬁcates.
in Tue-Nov2009 and 2,057 in TUM-Apr2011 where this was the
case. As this is an unexpectedly low number, we also checked the
EFF data set. Here, we ﬁnd 63,290 occurrences in 4,375,901 valid
chains. Our conclusion is that unneeded self-signed intermediate
certiﬁcates in chains are rare. This is a good ﬁnding for perfor-
mance.
Signature Algorithms. Cryptographic hash algorithms have
come under increasing pressure in the past years, especially
MD5 [28]. Even the stronger SHA1 algorithm is scheduled for
phase-out [29]. When researchers announced in 2008 they could
build a rogue CA using MD5 collisions [30], a move away from
MD5 was expected to begin.
We thus extracted the signature algorithms in certiﬁcates. Fig-
ure 10 shows the results for TUM-Apr2011 and Tue-Nov2009,
MON1 and MON2 (for all certiﬁcates and distinct ones), and
Shanghai. We have omitted the rare cases (less than 20 occur-
rences altogether) where we found the algorithms GOST, MD2 and
SHA-512 (a variant of SHA). The algorithms SHA256 and SHA1
with DSA were also only rarely found, in 0.1% of cases or less.
In our active scans, 17.3% of certiﬁcates were signed with a com-
bination of MD5 and RSA in 2009. In 2011, this has decreased by
10% and SHA1 has risen by about the same percentage. The view
from the monitoring data was slightly different. Most importantly,
MD5 usage numbers were lower, both for all certiﬁcates and only
for distinct ones. Between September 2010 and April 2011, the
number had even fallen further.
Our conclusion here is that while MD5 is still sometimes used, it
is indeed being phased out and does not play an import role in this
PKI any longer.
Public Key Properties. It is quite evident that the ciphers used
in certiﬁcates should be strong, and keys should be of a suitable
length to achieve the desired security. Otherwise the certiﬁcate
might be crackable by an attacker: RSA with 768 bit was factored
in 2009 [31]. With the security margin of RSA-1024 shrinking, a
move towards longer ciphers was recommended [32]. Furthermore,
there should be no duplicate keys between different certiﬁcates, at
least if the key owners are not the same.
We thus investigated the public keys in certiﬁcates. Concerning
the ciphers, the result is very indicative. In the active scans Tue-
Nov2009 and TUM-Apr2011, which span 1.5 years, the percent-
age of RSA keys on all queried hosts was always around 99.98%.
DSA keys made up the rest. Counting only distinct certiﬁcates,
the percentages remained the same. The values for the monitoring
runs are practically identical. In these two scans, we also found
a movement towards longer RSA key lengths: the percentage of
Figure 11: Cumulative distribution of RSA key lengths. (Note the
unusual atanh scaling (double-ended pseudo-log) of the y axis.)
Figure 12: Debian weak keys over the course of 1.5 years in the
scans of the Alexa top 1 million.
keys with more than 1,024 bit increased by more than 20% while
the percentage of 1,024 bit keys fell by about the same. The gen-
eral trend towards longer key lengths can be seen in Fig. 11: the
newer the data set, the further the CDF graph is shifted along the x
axis. This shows that the share of longer key lengths has increased
while shorter key lengths have become less popular, with the no-
table exception of 384 bit keys that were found in the crawls from
2010 and 2011, but not in the 2009 data (left-hand side). The small
triangles/circles/lozenges along the curves indicate the jumps of the
CDF curves; hence they reveal furthermore that there is a signiﬁ-
cant number of various non-canonical key lengths, i.e., key lengths
that are neither a power of 2 (e.g., 2,048) nor the sum of two pow-
ers of 2 (e.g., 768). However, their share is extremely small, as the
CDF lines do not exhibit any signiﬁcant changes at these locations.
An exponent and modulus make up the public key together; and
there is only one private key for every public key. Concerning
RSA exponents, the most frequent RSA exponent we found in Tue-
Nov2009 was 65,537, which accounts for 99.13% of all exponents
used. The next one was 17, which accounts for 0.77% of exponents.
There are two caveats to watch out for in public/private keys. The
ﬁrst refers to the Debian OpenSSL bug, which we have described
in Section 3. We determined the number of certiﬁcates with weak
keys of this kind by comparing with the ofﬁcial blacklists that come
with every Debian-based Linux distribution. Figure 12 shows the
results for our scans of the last 1.5 years. We can see that the num-
ber of affected certiﬁcates is clearly diminishing, and our numbers
ﬁt well with where the investigation in [14] left off. Furthermore,
436Figure 13: Comparison of certiﬁcate validity periods.
the percentage of affected certiﬁcates was four times less in our
monitoring data (about 0.1%) – this is a very good ﬁnding, as it
shows that the servers that most users deal with are generally un-
likely to be affected. However, we also found that a number of
weak yet absolutely valid certiﬁcates (correctly issued by CAs, cor-
rect host names etc.) is still in use, but the number is very small:
such certiﬁcates were found on about 20 hosts in the last scan.
The second caveat is that no combination of exponent and
modulus should occur twice in different certiﬁcates. However, in
TUM-Apr2011 we found 1,504 distinct certiﬁcates that shared the
public/private key pair of another, different certiﬁcate.
In Tue-
Nov2009, we found 1,544 such certiﬁcates. The OpenSSL bug
could be a cause for this, but we found that only 40 (Tue-Nov2009)
and 10 (TUM-Apr2011) of the certiﬁcates fell into this category.
We found one possible explanation when we looked up the DNS
nameservers of the hosts in question. In about 70% of cases, these
pointed to nameservers belonging to the same second-level domain.
In about 28% of cases, these domains were prostores.com and
dnsmadeeasy.com. We can only offer a hypothesis here, namely
that some Web space providers issue a kind of default certiﬁcate
and reuse the public/private keys. We do not know a reason for
this practice, but it does not seem commendable: it means some
private key owners are theoretically able to read encrypted trafﬁc
of others. They can even use a scanner to ﬁnd out which domain to
target.
Our conclusion here is that shorter key lengths are still encoun-
tered too often, but the trend is very positive. RSA keys should
not be issued anymore at less than 2,048 bit. The Debian OpenSSL
vulnerability has become rare in certiﬁcates. The cases of duplicate
keys are curious, but not very frequent.
Validity Period. Certiﬁcates contain information for how long
they are valid. This validity period is also a security factor. If a cer-
tiﬁcate is issued for a very long period, advances in cryptography
(especially hash functions) can make it a target for attack.
When we analyzed the validity period for the certiﬁcates we en-
countered in our scans, we found that the majority of the certiﬁcates
is issued with a life span of 12–15 months, i.e., one year plus a
variable grace period. Other popular lifespans are two years, three
years, ﬁve years, and ten years. This can be seen from the cu-
mulative distribution function of the certiﬁcate life spans depicted
in Fig. 13. Comparing Tue-Nov2009 to TUM-Apr2011, we can
see that the share of certiﬁcates with an expiry time of more than
Figure 14: Temporal development of the number of distinct inter-
mediate certiﬁcates (squares) and the number of distinct certiﬁca-
tion chains (triangles) across the scanning data sets.
2 years has increased, in particular the share of certiﬁcates lasting
10 years. The curve for MON2 reveals that that the life spans typ-
ically encountered by users is either one, two, or three years, plus
some grace period. In particular, certiﬁcates with life spans of more
than ﬁve years seem to be used only rarely. What the ﬁgure does
not show are the extremal values for the certiﬁcate life span: we
encountered life spans on a range from two hours up to an opti-
mistic 8,000 years. On the whole, however, the validity periods of
certiﬁcates do not seem to be a major cause for concern.
Intermediate Certiﬁcates and Certiﬁcation Chains.
As explained in Section 2, many CAs do not issue certiﬁcates di-
rectly from their Root Certiﬁcates, but from an intermediate cer-
tiﬁcate (or a series thereof) that is signed by their Root Certiﬁcate.
While beneﬁcial for security, it also means that if too many inter-
mediate certiﬁcates are used in a chain, the undesired result can be
that the attack surface increases, as there are more keys that can
be attacked. This is particularly true if intermediate certiﬁcates are
accessible by regional resellers of CAs. We thus investigated the
number of distinct intermediate certiﬁcates and the distinct certiﬁ-
cation chains that are built with them.
Figure 14 shows the development of the intermediate certiﬁcates.
For the active scans from Germany, we see about 2,300, with a
trend to increase. Compared to the size of the Root Store in Fire-
fox, this means that, on average, every CA would use more than 10
intermediate certiﬁcates. However, we already know that the aver-
age chain lengths are much smaller, so this points to a very skewed
distribution. The number of distinct intermediate certiﬁcates in the
EFF data set is even higher, almost grotesque: 124,387. The ratio
of certiﬁcates/intermediate certiﬁcates for the top 1 million hosts
is about 335 (TUM-Apr2011); in contrast, it is about 91 for the
whole IPv4 space. This means that the top 1 million hosts use less
intermediate certiﬁcates than hosts in the whole IPv4 space do.
To analyze chains, we computed a unique ID for every distinct
certiﬁcation chain we found. For this, we discounted any self-
signed intermediate certiﬁcate in a chain as a potential Root CA.
The remaining intermediate certiﬁcates were sorted, concatenated
and hashed. Recall that the number of intermediate certiﬁcates is
very small compared to the number of end-host certiﬁcates. Corre-
spondingly, we found only a small number of certiﬁcation chains.
This means that the X.509 certiﬁcation ‘tree’ (end-hosts are leaves)
shrinks rapidly from a wide base to very few paths leading to the
Root CAs. In the EFF data set, we ﬁnd an unexpected number of
different chains: 17,418, which is much higher than the number in
our scans. The number of distinct intermediate certiﬁcates in the
active scans was always close in magnitude to the number of dis-
tinct certiﬁcation chains (Fig. 14), whereas for the EFF data, the
437Scan
Santa Barbara
São Paulo
Melbourne
˙Izmir
Boston
TUM-Apr2011
Shanghai
Bejing
Moscow
Suspicious
certiﬁcates
1,628
1,643
1,824
2,069
2,405
3,245
10,194
10,305
10,986
Differences to
TUM-Apr2011
5,477
6,851
7,087
7,083
5,867
—
9,670
9,901
11,800
Table 4: Occurrences of suspicious certiﬁcates per location, and
number of certiﬁcates different to those seen from TUM.
number of different chains is smaller by a factor of 10. This indi-
cates that the convergence to very few certiﬁcation paths is much
more expressed for the global IPv4 space than for the popular Alexa
hosts. In other words, there is more relative variance in Root CAs
in the top 1 million than in the whole IPv4 space.
Overall, our ﬁnding here is that too many intermediate certiﬁ-
cates are encountered (leading to an unnecessary attack surface),
even though it seems they are usually not needed for the (shorter)
certiﬁcation chains. In the top 1 million hosts, the situation is better
than in the IPv4 space as a whole.
Different Certiﬁcates between Locations. We investigated
how many downloaded certiﬁcates were different between loca-
tions. Our motivation was two-fold. A Web site operator may of-
fer duplicated or different content depending on geographic region;
Content Distribution Networks (CDNs) are a large-scale example
of this. In this case, it is possible that certiﬁcates are bought from
different CAs. It is also possible that an operator has switched CAs
but not propagated the move to all sites yet.
Another possible reason can be of a malicious nature: a router
can intercept trafﬁc and swap certiﬁcates transparently on the ﬂy.
Through this Man-in-the-middle attack, the attacker knows the pri-
vate key of the swapped certiﬁcate and is thus able to read the en-
crypted trafﬁc. We labeled hosts as ‘suspicious’ when their cer-
tiﬁcate was identical from most locations and only differed at 1–3
locations. Table 4 shows the results from each vantage point.
Although the suspicious cases seem to occur particularly often
with respect to hosts scanning from China and Russia, this might
as well be the result of localized CDN trafﬁc. We thus examined
differences between Shanghai and TUM-Apr2011. The number of
different certiﬁcates between these two locations was 9,670, which
is about 1% of all certiﬁcates in TUM-Apr2011. Only 213 of
the corresponding sites were in the top 10,000; the highest rank
was 116. We can surmise that if operators of high-ranking sites use
CDNs for their hosting in these regions, then they correctly deploy
the same certiﬁcates. From manual sampling, we could not ﬁnd a
Man-in-the-middle interception from our vantage points.
We checked how many of the certiﬁcates from Shanghai were
actually valid (correct chain, CN etc.). This yielded just 521 cases
– and only in 59 cases, the certiﬁcate was absolutely valid in TUM-
Apr2011 but not in Shanghai. We checked the corresponding do-
mains manually; not one of them could be identiﬁed as highly sen-
sitive (e.g., politically relevant, popular Web mailers, anonymiza-
tion services). About a quarter of certiﬁcates were self-signed but
different in Shanghai and TUM-Apr2011. The reason for this is
unknown to us, but we do not think it is related to an attack.
While we are reluctant to offer compelling conclusions here, we
do wish to state the following. First, there are not many differ-
ences between locations. High-ranked domains using CDNs seem
Figure 15: Top ten of issuers in TUM-Apr2011.
to properly distribute their certiﬁcates. Maybe this is the most in-
teresting ﬁnding, given the overall administrative laxness that is
revealed by the many badly maintained certiﬁcates. Second, the
number of different certiﬁcates was signiﬁcantly higher from the
vantage points in China and Russia. However, we found no indi-
cation of an attack. Rather, the ﬁndings seem to point at adminis-