566.ReshapetheMatrix
题目
In MATLAB, there is a very useful function called *reshape', which can reshape a matrix into a new
one with different size but keep its original data.
You're given a matrix represented by a two-dimensional array, and two positive integers r and
crepresenting the row number and column number of the wanted reshaped matrix,
respectively.
The reshaped matrix need to be filled with all the elements of the original matrix in the same
row-traversing order as they were.
If the 'reshape' operation with given parameters is possible and legal, output the new reshaped
matrix; Otherwise, output the original matrix.
Example 1:
---
## Page 617
Input:
= Swnu
[[1,2],
[3,4]]
r = 1, C = 4
Output:
[[1,2,3,4]]
Explanation:
The row-traversing of nums is [1,2,3,4]. The new reshaped matrix is a 1 * 4
matrix, fill it row by row by using the previous list.
Example 2:
Input:
= Swnu
[[1,2],
[3,4]]
r = 2, C = 4
Output:
[[1,2],
[3,4]]
Explanation:
There is no way to reshape a 2 * 2 matrix to a 2 * 4 matrix. So output the
original matrix.
Note:
1. The height and width of the given matrix is in range [1, 100].
2. The given r and c are all positive.
题目大意
在MATLAB中，有一个非常有用的函数reshape，它可以将一个矩阵重塑为另一个大小不同的新矩
阵，但保留其原始数据。
给出一个由二维数组表示的矩阵，以及两个正整数r和c，分别表示想要的重构的矩阵的行数和列数。重
构后的矩阵需要将原始矩阵的所有元素以相同的行遍历顺序填充。如果具有给定参数的reshape操作是
可行且合理的，则输出新的重塑矩阵；否则，输出原始矩阵。
解题思路
·给一个二维数组和r，C，将这个二维数组“重塑"成行为r，列为c。如果可以“重塑”，输出"重塑"以
后的数组，如果不能“重塑”，输出原有数组。
·这题也是水题，按照题意模拟即可。
---
## Page 618
代码
package leetcode
func matrixReshape(nums [][]int, r int, c int) [][]int {
if canReshape(nums,r，c）{
return reshape(nums, r, c)
return nums
}
func canReshape(nums [][]int,r,c int) bool{
row = 1en(nums)
colume := 1en(nums[0])
if row*colume ==r*c{
return true
return false
}
func reshape(nums [][]int, r, c int) [][]int {
newShape := make([][]int, r)
for index := range newshape {
newShape[index] = make([]int, c)
rowIndex, colIndex ：=0,0
for _, row := range nums {
for _, col := range row {
if colIndex == c {
colIndex = 0
rowIndex++
newShape[rowIndex][co1Index]= co1
colIndex++
}
return newshape
567.PermutationinString
题目
Given two strings s1 and s2, write a function to return true if s2 contains the permutation of s1. In
other wordls, one of the first string's permutations is the substring of the second string.
---
## Page 619
Example 1:
Input:s1 = "ab" s2 = "eidbaooo"
output:True
Explanation: s2 contains one permutation of sl ("ba").
Example 2:
Input:sl= “ab" s2 = “eidboaoo"
Output: False
Note:
1. The input strings only contain lower case letters.
2. The length of both given strings is in range [1, 10,000].
题目大意
在一个字符串重寻找子串出现的位置。子串可以是Anagrams形式存在的。Anagrams是一个字符串任
意字符的全排列组合。
解题思路
这一题和第438题，第3题，第76题，第567题类似，用的思想都是“滑动窗口”。
这道题只需要判断是否存在，而不需要输出子串所在的下标起始位置。所以这道题是第438题的缩水
版。具体解题思路见第438题。
代码
package leetcode
func checkInclusion(sl string, s2 string) bool {
var freq [256]int
if len(s2) == 0 11 len(s2) =1{
count--
freq[s2[right]-'a′]--
right++
if count
== 0
return true
if right-left ==len(s1){
if freq[s2[left]-'a']>=0{
count++
freq[s2[1eft]-'a′]++
1eft++
1
return false
572.SubtreeofAnotherTree
题目
Given two non-empty binary trees s and t, check whether tree t has exactly the same structure
and nodle values with a subtree of s. A subtree of s is a tree consists of a node in s and all of this
node's descendants. The tree s could also be considered as a subtree of itself
Example 1:
Given tree s:
3
A
/
1
2
Given tree t:
4
/
---
## Page 621
Return true, because t has the same structure and node values with a subtree of s.
Example 2:
Given tree s:
3
/
/
1
2
0
Given tree t:
4
/
1
2
Return false.
题目大意
给定两个非空二叉树s和t，检验s中是否包含和t具有相同结构和节点值的子树。s的一个子树包括s
的一个节点和这个节点的所有子孙。s也可以看做它自身的一棵子树。
解题思路
·给出2棵树s和t，要求判断t是否是s的子树
·这一题比较简单，针对3种情况依次递归判断，第一种情况5和t是完全一样的两棵树，第二
种情况t是s左子树中的子树，第三种情况t是s右子树中的子树。第一种情况判断两棵数
是否完全一致是第100题的原题。
代码
package leetcode
* Definition for a binary tree node.
type TreeNode struct{
Valint
Left *TreeNode
Right*TreeNode
---
## Page 622
func isSubtree(s *TreeNode,t *TreeNode) bool {
if issameTree(s,t){
return true
if s == nil {
return false
if isSubtree(s.Left, t) ll isSubtree(s.Right, t) {
return true
return false
上
575.DistributeCandies
题目
Given an integer array with even length, where different numbers in this array represent
dlifferent kinds of candies. Each number means one candy of the corresponding kind. You need
to distribute these candlies equally in number to brother and sister. Return the maximum
number of kinds of candies the sister could gain.
Example 1:
Input: candies = [1,1,2,2,3,3]
output: 3
Exp1anation:
There are three different kinds of candies (1, 2 and 3), and two candies for
each kind.
Optimal distribution: The sister has candies [1,2,3] and the brother has
candies [1,2,3], too.
The sister has three different kinds of candies.
Example 2:
Input: candies = [1,1,2,3]
output: 2
Explanation: For example, the sister has candies [2,3] and the brother has
candies [1,1].
The sister has two different kinds of candies, the brother has only one kind
of candies.
Note:
1. The length of the given array is in range [2, 10,0o0], and will be even.
2. The number in given array is in range [-100,000, 100,000].
---
## Page 623
题目大意
给定一个偶数长度的数组，其中不同的数字代表着不同种类的糖果，每一个数字代表一个糖果。你需要
把这些糖果平均分给一个弟弟和一个妹妹。返回妹妹可以获得的最大糖果的种类数。
解题思路
·给出一个糖果数组，里面每个元素代表糖果的种类，相同数字代表相同种类。把这些糖果分给兄弟
姐妹，问姐妹最多可以分到多少种糖果。这一题比较简单，用map统计每个糖果的出现频次，如
果总数比n/2小，那么就返回1en（map），否则返回n/2（即一半都分给姐妹）。
代码
package leetcode
func distributeCandies(candies []int) int {
n, m := len(candies), make(map[int]struct{}, len(candies))
for _, candy := range candies {
m[candy]= struct{}{}
3
res := 1en(m)
if n/2  longest {
longest = c + n
return longest
598.RangeAdditionl1
题目
Given an m * n matrix M initialized with all 0's and several update operations.
yim Aee ue Aq pauasaudau sl uogeado ypea pue Kee a e Aq pajuasada ane suoeado
two positive integers a and b, which means M[ijj] should be added by one for all 0 <= I < a and
0 <= j< b.
---
## Page 625
You need to count and return the number of maximum integers in the matrix after performing all
the operations.
Example 1:
Input:
E =u*E = w
operations = [[2,2],[3,3]]
Output: 4
Explanation:
Initially, M =
[[0, 0, 0],
[0, 0, 0],
[0, 0, 0]]
After performing [2,2], M =
[[1, 1, 0],
[1, 1, 0],
[0, 0, 0]]
After performing [3,3], M =
[[2, 2, 1],
[2, 2, 1],
[1, 1, 1]]
So the maximum integer in M is 2, and there are four of it in M. So return 4.
Note:
1. The range of m and n is [1,40000].
2. The range of a is [1,m], and the range of b is [1,n].
3. The range of operations size won't exceed 10,000.
题目大意
给定一个初始元素全部为0，大小为m*n的矩阵M以及在M上的一系列更新操作。操作用二维数组表
示，其中的每个操作用一个含有两个正整数a和b的数组表示，含义是将所有符合0<=1<a以及0<=
j<b的元素M[i]0]的值都增加1。在执行给定的一系列操作后，你需要返回矩阵中含有最大整数的元素
个数。
注意：
●m和n的范围是[1,40000]。
●a 的范围是[1,m]，b的范围是[1,n]。
·操作数目不超过10000。
解题思路
·给定一个初始都为0的m*n的矩阵，和一个操作数组。经过一系列的操作以后，最终输出矩阵
中最大整数的元素个数。每次操作都使得一个矩形内的元素都+1。
---
## Page 626
·这一题乍一看像线段树的区间覆盖问题，但是实际上很简单。如果此题是任意的矩阵，那就可能用
到线段树了。这一题每个矩阵的起点都包含【0，0]这个元素，也就是说每次操作都会影响第一个
元素。那么这道题就很简单了。经过n次操作以后，被覆盖次数最多的矩形区间，一定就是最大
整数所在的区间。由于起点都是第一个元素，所以我们只用关心矩形的右下角那个坐标。右下角怎
么计算呢？只用每次动态的维护一下矩阵长和宽的最小值即可。
代码
package leetcode
func maxCount(m int, n int, ops [][]int) int {
minM, minN := m, n
for _, op := range ops {
minM = min(minM, op[0])
minN = min(minn, op[1])
return minm * minN
func min(a, b int) int {
if a <b {
return a
return b
599.MinimumIndexSumofTwoLists
题目
Suppose Andy and Doris want to choose a restaurant for dinner, and they both have a list of
favorite restaurants represented by strings.
You need to help them find out their common interest with the least list index sum. If there is
there always exists an answer.
Example 1:
Input:
["Shogun", "Tapioca Express", “Burger King", "KFC"]
["piatti", “The Grill at Torrey Pines", “Hungry Hunter Steakhouse", “Shogun"]
Output: ["shogun"]
Explanation: The only restaurant they both 1like is “shogun".
Example 2:
---
## Page 627
Input:
["shogun", "Tapioca Express", "Burger King", "KFc"]
["KFC", “shogun", “Burger King"]
[.,unbous..] :andano
Explanation: The restaurant they both 1ike and have the least index sum is
"shogun" with index sum 1 (0+1).
Note:
1. The length of both lists will be in the range of [1, 1000].
2. The length of strings in both lists will be in the range of [1, 30].
3. The index is starting from O to the list length minus 1.
4. No duplicates in both lists.
题目大意
假设Andy和Doris想在晚餐时选择一家餐厅，并且他们都有一个表示最喜爱餐厅的列表，每个餐厅的
名字用字符串表示。你需要帮助他们用最少的索引和找出他们共同喜爱的餐厅。如果答案不止一个，则
输出所有答案并且不考虑顺序。你可以假设总是存在一个答案。