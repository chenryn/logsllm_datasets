trace-
back messages [2, 16]. For each packet received, routers
would, with a small probability, generate an ICMP mes-
sage to the destination address of the packet containing
the IP address of the router. The problem with this initial
scheme is that there is a tension between providing fast
(in the number of packets received at the victim) path
identiﬁcation, and low network overhead generated by
added messages. Mankin et al. present an improvement
to this scheme, which puts some state on the routers to
generate better traceback messages [21]. Better trace-
back messages are deﬁned as the ones originating from
routers that are far away from, and that have not been
seen previously by, the victim. Although this improve-
ment reduces the overhead of ICMP traceback signiﬁ-
cantly, it relies on either a shared key distribution mech-
anism to prevent attacker forged traceback messages
(which is a very difﬁcult problem on an Internet scale);
or on asymmetric cryptography, which could potentially
be exploited by attackers in a DoS attack by exhausting
server resources with failed, yet time-consuming signa-
ture veriﬁcations.
Several researchers propose to embed traceback in-
formation within the IP packet. Savage et al. ﬁrst pro-
posed this approach [27, 28]. They use the 16 bit IP
Identiﬁcation ﬁeld to hold traceback information, proba-
bilistically generated by routers along the packet’s path.
A particular router marks a fragment of its IP address
and sets a bit to signal the next router to do the same,
thus marking a fragment of the edge between those two
routers. Fragments may be overwritten by other routers
farther down the path toward the victim. Fragments
are reassembled at the victim to reconstruct all the IP
addresses of the upstream routers towards the attacker.
This method works well for DoS attacks with few at-
tackers; however in DDoS attacks, fragment reconstruc-
tion at the victim becomes computationally expensive.
Song and Perrig show how to overcome this hurdle by
having a map of the upstream routers present at each
victim [32]. However, the victim must still receive on
the order of one thousand packets to identify the attack
path. Dean, Franklin, and Stubbleﬁeld propose using al-
gebraic codes to encode the upstream router path for IP
traceback [8, 9]. Nodes mark packets with evaluations
of the sample points of a polynomial over a ﬁnite ﬁeld.
The coefﬁcients of the polynomial are the IP addresses
of the routers in the attack path.
Adler presents an ingenious scheme for sampling the
frequency of an x-bit number to determine the paths that
packets are taking [1]. Routers assign themselves a 0 or
1 bit based on whether they are at the left or right branch
of the next upstream router (although a binary tree topol-
ogy is assumed, this assumption can be relaxed). Based
on the incoming bit marking of a packet, and the self-
assigned bit of the router, each router has a certain prob-
ability of marking a 0 or 1 bit in the packet. In the case of
more than one bit, the path is split into x smaller paths,
each one of which executes the one bit protocol in a sep-
arate bit position in the packet. Like the other proba-
bilistic methods though, this scheme does not scale well
to multiple paths of attack in that it requires an exponen-
tially increasing number of packets to accurately judge
the attacking paths.
Sung and Xu present a similar method to Pi mark-
ing that allows the victim to participate in packet ﬁl-
tering [34]. Their approach utilizes existing IP Trace-
back mechanisms, but introduces the concept of prefer-
ential packet ﬁltering. In their scheme, a small subset of
packets carry IP Traceback information and the majority
of packets are probabilistically marked with the hash of
network edges. While the victim is reconstructing the at-
tack graph using the IP Traceback packets, it can apply
packet ﬁltering to the edge markings of packets based
on whether or not they are likely to appear in the attack
graph.
To surmount the problem of large numbers of pack-
ets necessary at the victim to traceback multiple attack
paths, Snoeren et al. propose a solution using router state
to track the paths of a single packet [30, 31]. Upon
receipt of a packet, each router hashes speciﬁc, invari-
ant ﬁelds of the packet and stores the hash in a table.
When traceback is needed, the victim presents its up-
stream router with the hash of the packet to be traced.
The routers at each hop away from the victim then recur-
sively query the routers at the next hop away for the pres-
ence of the hash of the packet in their hash tables. Be-
sides the ability to traceback single packets, this method
also offers the advantage of storing saturated hash tables
Proceedings of the 2003 IEEE Symposium on Security and Privacy (SP(cid:146)03) 
1081-6011/03 $17.00 ' 2003 IEEE 
12
for traceback after an attack has taken place. Dufﬁeld
and Grossglauser propose using packet hashes of a sub-
set of all network trafﬁc to assist in trafﬁc measurement
in a network [11]. In this method, called trajectory sam-
pling, packets are hashed, deterministically, and a subset
of them are sampled at every node in the network that
they traverse. These samples are all sent to a centralized
measurement system, which can reconstruct the packets’
paths through the network.
Ioannidis and Bellovin, and Mahajan et al. propose
Pushback, a packet ﬁltering infrastructure leveraging
router support to ﬁlter out DDoS streams [15, 20]. We
discuss their work and its potential synergy with Pi in
Section 8.2.
8 Discussion
8.1 Advanced Filters
It seems apparent from our experiments that the n =
2 bit scheme is superior to the n = 1 bit scheme. Un-
fortunately, this may be a consequence of the relatively
simplistic ﬁltering process that we implement. The ﬁl-
ters that we implement are largely static in that they
select parameters that remain constant throughout the
length of the simulation. A separate, potentially more
powerful, class of ﬁlters are dynamic ﬁlters. An exam-
ple of such a ﬁlter would be a longest preﬁx matching
ﬁlter which could build a table of Pi marking preﬁxes
based on incoming packets’ markings. This ﬁlter would
primarily beneﬁt the n = 1 scheme, because a victim
equipped with this ﬁlter might only use a certain num-
ber of marking bits available to it, rather than all 16 bits,
which may contain some attacker initialized bits.
The Pi mechanism can also be used to detect spoofed
IP addresses, with an appropriate ﬁlter. The victim need
only build a table correlating the Pi mark of a packet to
its source IP address, during a non-attack time. When
under attack, the victim can check to see if the source
IP addresses of incoming packets match against the IP
addresses of their Pi marks from the table.
There are many potential uses for a Pi ﬁlter that de-
tects spoofed IP addresses. In a particular type of DDoS
attack, known as a reﬂector attack [24], attackers send
request packets to various services whose responses are
of far larger size than the requests themselves (eg. DNS).
The attackers spoof the source IP address of the requests
as the IP address of the intended victim of the attack.
Thus, the service’s reply packets will be sent to the vic-
tim, with the additional beneﬁt of the trafﬁc ampliﬁca-
tion of the responses. Thus, the machine supplying the
service is used as a reﬂector, focusing and amplifying
the trafﬁc to the victim. A Pi ﬁlter capable of detect-
ing spoofed IP addresses running on on the reﬂector’s
server would immediately detect the spoofed source IP
addresses of the requests and refrain from sending a re-
sponse, thus halting the attack.
The IP spooﬁng detection ﬁlter can also be used for
a limited form of traditional IP Traceback - given a
Pi mark, the victim can check the list of IP addresses
from the table that match that mark and simply perform
traceroutes to those IP address. Clearly, the design
space for possible Pi ﬁlters is quite large and remains an
open research topic.
8.2 Filtering in the Network
The Pi marking scheme can also support other anti-
DDoS systems. For example, the Pushback system [15,
20] uses downstream routers that identify aggregates
(packets from one or more ﬂows that have certain char-
acteristics, such as source or destination addresses) and
send rate-limit requests to upstream routers, along with
an aggregate identiﬁer. The problem with this technique
is that DDoS packets may share little identifying traits
in common, beyond the destination IP address. How-
ever, using the Pi marking, each router can identify com-
mon markings (after applying TTL Unwrapping) and
use these to better identify particular aggregates.
The Pi marking can also be used to move Pushback
ﬁlters closer to the attacker, as the marking is an iden-
tiﬁer of the path towards the attacker. However, the
Pushback router needs to consider that the Pi markings
are not unique, as multiple paths may exhibit the same
marking.
9 Conclusion
In this paper, we have presented Pi, a novel approach
to defend against DDoS attacks. Our proposal draws
from elements of IP Traceback methods but is not con-
cerned with reconstructing a path from a victim to an
attacker, rather, it is concerned with marking paths with
unique markings. This gives the victim of a DDoS attack
the ability to ﬁlter, on a per-packet basis, any incoming
packets that match known attacker marks.
We have shown how to increase the entropy of the
Pi marking by utilizing several improvements, speciﬁ-
cally: IP address hashing to obtain a uniform distribu-
tion of packet marks per node; node omission based on
the presence of intra-AS routes to increase the number
of distant routers whose markings arrive at the victim;
and edge marking to lower the probability of collisions
of different paths. We have also secured our marking
method against attacker modiﬁed TTL values by utiliz-
ing TTL Unwrapping, which uses the TTL value at the
victim to rotate the bits of a packet’s marking to a stan-
dard position, irrespective of the initial TTL.
Proceedings of the 2003 IEEE Symposium on Security and Privacy (SP(cid:146)03) 
1081-6011/03 $17.00 ' 2003 IEEE 
13
We establish a model for DDoS attacks that con-
sists of two phases: the learning phase and the attack
phase. We run experiments that simulate a DDoS at-
tack on a server with a constant 5000 user load and
a variable number of attackers, from 100-10000. We
show the performance of two marking schemes, n = 1
bit and n = 2 bits, using a threshold ﬁltering mecha-
nism. We show that both schemes provide good protec-
tion against DDoS, and degrade gracefully under added
attacker load.
Finally, we demonstrate that the Pi marking scheme
has strong incremental deployment properties, such that
a victim is still able to ﬁlter incoming packets even when
50% of routers in our topology do not participate in the
marking. We believe that Pi marking is the most general,
ﬂexible and powerful of the packet marking schemes to
date, and shows signiﬁcant potential in reducing or elim-
inating the DDoS threat.
References
[1] Micah Adler. Tradeoffs in probabilistic packet marking
In Proceedings of 34th ACM Sympo-
for IP traceback.
sium on Theory of Computing (STOC), 2002.
[2] S. Bellovin, M. Leech, and T. Taylor.
The ICMP
traceback message.
Internet-Draft, draft-ietf-itrace-
01.txt, October 2001. Work in progress, available
at ftp://ftp.ietf.org/internet-drafts/
draft-ietf-itrace-01.txt.
[3] Hal Burch and Bill Cheswick. Internet watch: Mapping
the Internet. Computer, 32(4):97–98, April 1999.
[4] Hal Burch and Bill Cheswick. Tracing anonymous pack-
ets to their approximate source. Unpublished paper, De-
cember 1999.
[5] Caida. Skitter. http://www.caida.org/tools/
measurement/skitter/, 2000.
[6] Computer Emergency Response Team (CERT). TCP
SYN ﬂooding and IP spooﬁng attacks. Technical Re-
port CA-96:21, Carnegie Mellon University Pittsburgh,
PA, September 1996.
[7] Internet Software Consortium.
Internet domain survey
host count. http://www.isc.org/ds/hosts.
html, July 2002.
[8] Drew Dean, Matt Franklin, and Adam Stubbleﬁeld. An
algebraic approach to IP traceback. In Network and Dis-
tributed System Security Symposium (NDSS ’01), Febru-
ary 2001.
[9] Drew Dean, Matt Franklin, and Adam Stubbleﬁeld. An
algebraic approach to IP traceback. ACM Transactions
on Information and System Security, May 2002.
[10] Drew Dean and Adam Stubbleﬁeld. Using client puz-
zles to protect TLS. In Proceedings of the 10th USENIX
Security Symposium, August 2001.
Proceedings of the 2003 IEEE Symposium on Security and Privacy (SP(cid:146)03) 
1081-6011/03 $17.00 ' 2003 IEEE 
14
[11] Nick G. Dufﬁeld and Matthias Grossglauser. Trajectory
sampling for direct trafﬁc observation. In Proceedings of
the 2000 ACM SIGCOMM Conference, August 2000.
[12] C. Dwork and M. Naor. Pricing via processing or com-
batting junk mail. In Ernest F. Brickell, editor, Advances
in Cryptology – Crypto ’92, pages 139–147, 1992.
[13] P. Ferguson and D. Senie. Network ingress ﬁltering: De-
feating denial of service attacks which employ IP source
address spooﬁng. RFC 2267, January 1998.
[14] Internet mapping.
http://research.lumeta.
com/ches/map/, 2002.
[15] John Ioannidis and Steven M. Bellovin.
Implementing
Pushback: Router-based defense against DDoS attacks.
In Proceedings of the Symposium on Network and Dis-
tributed Systems Security (NDSS 2002), February 2002.
[16] ICMP traceback (itrace).
IETF working group,
http://www.ietf.org/html.charters/
itrace-charter.html.
[17] A. Juels and J. Brainard. Client puzzles: A cryptographic
defense against connection depletion attacks.
In Pro-
ceedings of the 1999 Network and Distributed System Se-
curity Symposium (NDSS ’99), pages 151–165, 1999.
[18] Jaeyeon Jung, Balachander Krishnamurthy, and Michael
Rabinovich. Flash crowds and denial of service attacks:
Characterization and implications for CDNs and web
sites.
In The Eleventh International World Wide Web
Conference (WWW 11), May 2002.
[19] Jun Li, Jelena Mirkovic, Mengqiu Wang, Peter Reiher,
and Lixia Zhang. SAVE: Source address valididty en-
forcement protocol.
In Proceedings of IEEE INFO-
COMM 2001, April 2001.
[20] Ratul Mahajan, Steven M. Bellovin, Sally Floyd, John
Ioannidis, Vern Paxson, and Scott Shenker. Control-
ling high bandwidth aggregates in the network. CCR,
32(3):62–73, July 2002.
[21] A. Mankin, D. Massey, C.L. Wu, S.F. Wu, and L. Zhang.
On design and evaluation of intention-driven ICMP
traceback.
In Proceedings of the IEEE International
Conference on Computer Communications and Net-
works, October 2001.
[22] David McGuire and Brian Krebs. Attack on inter-
washingtonpost.com, Octo-
net called largest ever.
ber 2002. http://www.washingtonpost.com/
wp-dyn/articles/A828-2002Oct22.html.
[23] David Moore, Geoffrey Voelker, and Stefan Savage. In-
ferring internet denial of service activity. In Proceedings
of the 10th USENIX Security Symposium, August 2001.
[24] Vern Paxson. An analysis of using reﬂectors for dis-
tributed denial-of-service attacks. Computer Communi-
cation Review, 31(3), 2001.
[25] Associated Press.
than anticipated.
http://www.foxnews.com/story/0,2933,
76804,00.html.
Internet attack was much worse
January 2003.
foxnews.com,
[26] R. L. Rivest. The MD5 message digest algorithm. RFC
1321, Internet Activities Board, Internet Privacy Task
Force, April 1992.
[27] Stefan Savage, David Wetherall, Anna Karlin, and Tom
Anderson. Practical network support for IP traceback. In
Proceedings of the 2000 ACM SIGCOMM Conference,
August 2000.
[28] Stefan Savage, David Wetherall, Anna Karlin, and Tom
Anderson. Network support for IP traceback. ACM/IEEE
Transactions on Networking, 9(3), June 2001.
[29] Christoph L. Schuba, Ivan V. Krsul, Markus G. Kuhn,
Eugene H. Spafford, Aurobindo Sundaram, and Diego
Zamboni. Analysis of a denial of service attack on TCP.
In Proceedings of the IEEE Symposium on Research in
Security and Privacy, May 1997.
[30] Alex C. Snoeren, Craig Partridge, Luis A. Sanchez,
Christine E. Jones, Fabrice Tchakountio, Stephen T.
Kent, and W. Timothy Strayer. Hash-based IP trace-
back. In Proceedings of the ACM SIGCOMM 2001 Con-
ference, pages 3–14, August 2001.
[31] Alex C. Snoeren, Craig Partridge, Luis A. Sanchez,
Jones, Fabrice Tchakountio, Beverly
Christine E.
Schwartz, Stephen T. Kent, and W. Timothy Strayer.
Single-packet IP traceback. IEEE/ACM Transactions on
Networking (ToN), 10(6), December 2002.
[32] Dawn X. Song and Adrian Perrig. Advanced and au-
In Pro-
thenticated marking schemes for IP traceback.
ceedings of IEEE INFOCOMM 2001, April 2001.
[33] Robert Stone. CenterTrack: An IP overlay network for
tracking DoS ﬂoods. In Proceedings of the 9th USENIX
Security Symposium, Denver, Colorado, August 2000.
USENIX.
[34] Minho Sung and Jun Xu.
IP traceback-based intelli-
gent packet ﬁltering: A novel technique for defending
against internet DDoS attacks.
In Proceedings of the
10th IEEE International Conference on Network Proto-
cols (ICNP’02), November 2002.
Proceedings of the 2003 IEEE Symposium on Security and Privacy (SP(cid:146)03) 
1081-6011/03 $17.00 ' 2003 IEEE 
15