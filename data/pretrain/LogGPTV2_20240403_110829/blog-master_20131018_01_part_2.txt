digoal=# checkpoint;  
CHECKPOINT  
digoal=# select pg_current_xlog_location();  
 pg_current_xlog_location   
--------------------------  
 6/B9952FB8  
(1 row)  
digoal=# \dt+ t1  
                    List of relations  
 Schema | Name | Type  |  Owner   |  Size  | Description   
--------+------+-------+----------+--------+-------------  
 public | t1   | table | postgres | 422 MB |   
(1 row)  
digoal=# select 54056*8/1024;  
 ?column?   
----------  
      422  
(1 row)  
digoal=# select pg_xlog_location_diff('6/B9952FB8', '6/8E9ABA48');  
 pg_xlog_location_diff   
-----------------------  
             721057136  
(1 row)  
digoal=# select 721057136/16/1024/1024;  
 ?column?   
----------  
       42  
(1 row)  
[解决办法2 : ]  
使用@("varname")或者$varname的方式来访问本地或全局变量, 适用所有探针, 如果探针没有定义参数, 也可以使用这种方法得到探针所在函数的本地变量或全局变量值.   
参考, man stapprobes  
```  
http://blog.163.com/digoal@126/blog/static/16387704020138113455697/  
```  
把修改过的源码还原重新编译, 重启数据库, 使用以下stap脚本即可.  
[root@db-172-16-3-150 ~]# stap -D MAXSTRINGLEN=100000 --vp 10000 -e '  
probe process("/home/pg93/pgsql9.3.1/bin/postgres").mark("checkpoint__done") {  
  printf("ckpt_bufs_written:%d, ckpt_segs_added:%d, ckpt_segs_removed:%d, ckpt_segs_recycled:%d, NBuffers:%d\n", @var("CheckpointStats")->ckpt_bufs_written, @var("CheckpointStats")->ckpt_segs_added, @var("CheckpointStats")->ckpt_segs_removed, @var("CheckpointStats")->ckpt_segs_recycled, @var("NBuffers"))  
}'  
Pass 1: parsed user script and 96 library script(s) using 151984virt/25256res/2116shr/23892data kb, in 240usr/20sys/251real ms.  
ckpt_bufs_written:0, ckpt_segs_added:0, ckpt_segs_removed:0, ckpt_segs_recycled:0, NBuffers:262144  
ckpt_bufs_written:0, ckpt_segs_added:0, ckpt_segs_removed:0, ckpt_segs_recycled:0, NBuffers:262144  
```  
## 参考  
1\. http://blog.163.com/digoal@126/blog/static/163877040201391622459221/  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")