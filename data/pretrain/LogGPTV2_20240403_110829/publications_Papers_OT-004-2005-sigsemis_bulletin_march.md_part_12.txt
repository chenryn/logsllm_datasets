services needed by software agents and programs via web service interfaces. Using Swoogle, one can find all
of the Semantic Web documents that use a set of properties or classes.
Conclusion
Currently Google does not work well with Semantic Web Documents, since they are expect documents to
contain unstructured text composed of words. Google can't take advantage of the Semantic Web because it
doesn't utilize its structure. Powerful search and indexing systems are highly needed by the Semantic Web
researchers to help them find and analyze SWDs.
Swoogle is a prototype crawler-based indexing and retrieval system for the Semantic Web Documents, i.e.,
web documents written in RDF or OWL. It runs multiple crawlers to discover SWDs through meta-search and
following links, analyzes SWDs and produce metadata as well as computes ranks.
One of the interesting properties computed for each semantic web document is its rank, a measure of the
documents importance on the SemanticWeb. The current version of Swoogle has discovered and analyzed
over 11,000 semantic web documents. A second version has been designed and partially implemented that
will also capture more metadata on classes and properties and is designed to support millions of documents.
References
“Swoogle: A Semantic Web Search and Metadata Engine,” Li Ding Tim Finin Anupam Joshi Yun Peng R. Scott
Cost Joel Sachs Rong Pan Pavan Reddivari Vishal Doshi, Department of Computer Science and Electronic
Engineering, University of Maryland, USA 2004.
"Developing Semantic Web Services," H. Peter Alesso and Craig F. Smith, A. K. Peters, Ltd., ISBN: 1568812124,
2004.
72
AIS SIGSEMIS Bulletin 2(1) January-March 2005
Semantic Web Technologies by Dr. Jessica Chen Burger
Yun-Heh (Jessica) Chen-Burger
Room 4.08, Appleton Tower
AIAI, CISA, Informatics
The University of Edinburgh, UK
+44-131- 650-2756 (Office)
PI:EMAIL
An Over-Arching Description for the
Semantic Web Technologies Column
For SIGSEMIS: Semantic Web and Information Systems
http://www.sigsemis.org/columns/technologiesColumn/
For this bi-monthly Semantic Web Technologies Column, I plan to cover various advanced technologies that is
relevant to the field of semantic web technologies.
Research topics cover but not limited to:
• Knowledge Management techniques;
• Advanced Knowledge technologies;
• Grid Computing technologies, esp. Semantic Grid technologies;
• Enterprise Modelling and its applications in assisting the development of semantic web and
knowledge management;
• Verification and validation techniques that is applicable to semantic web/rich technologies;
• Collaborative systems and their cooperative operations based on semantic web/rich technologies;
• Workflow systems that understand, manipulate and execute semantics rich information;
• Web services as well as over-arching architecture that holds different web services together;
• Advancements in process modelling and workflow technologies, esp. their relations to the semantic
web;
• Applications based on advanced semantic web/rich technologies, e.g. advancements in the bio-
informatics;
• Development and applications of ontology technologies; e.g. mapping, evolution, negotiation and the
use of ontologies;
• Advanced information technologies, e.g. information extraction, knowledge capture, natural language
generation/presentation based on information captured using IE, etc.
• Knowledge portal applications;
• Evaluation and critique of current semantic web/rich technologies and their applications;
• A combination of some of the above technologies.
While some/most columns will be entirely contributed on my own, guest authors may be sometimes invited
to contribute to the content of the column, when appropriate. Guest authors may also be different each time.
This is an attempt to provide in-depth knowledge to the column as well as broaden its views. In order to
acknowledge their efforts, their name may appear as a co-author, when appropriate. The responsibilities for
the make-up of the column, however, entire rest on myself.
73
AIS SIGSEMIS Bulletin 2(1) January-March 2005
A Semantic-based Workflow Management for Virtual Organisations
Yun-Heh Chen-Burger (columnist) 1 , Kit-Ying Hui 2 , Alun D. Preece 3 , Peter M. D.
Gray 3, Austin Tate 1
1,AIAI, CISA, Informatics, The University of Edinburgh, UK
2. School of Computing, The Robert Gordon University, UK
3, _ Computing Science Department, University of Aberdeen, UK
Keywords: Virtual Organisation, Constraint Satisfaction, Business Process Modelling, Business Modelling, Ontology,
Semantic Web.
1 Introduction
Modern organisations are virtual entities composed of heterogeneous resources that span across much
different geographical space. People working in such organizations often locate in different places but need to
work collaboratively with each other to achieve common organisational goals. The tasks they perform are
within a larger organizational process that requires communication with, agreement and assistance of agents
of other parts of the organisation. Specialised expertise and tools with specific functions are deployed
normally as part of daily work. The need to provide automatic methods that smoothly connect the distributed
knowledge and streamline workflow practice to achieve effective collaboration and common goals is
paramount. A prominent solution is to provide workflow systems that support such needs. However, such
efforts may be obstructed by several reasons that exist in different phases of system development and
deployment:
– The gap between design and implementation phases: cross organisational process are often sketched
out at the design phase - and to make sure that it is suitable forthe organisation, typically a process
modelling consultant together with business personnel and representative software personnel are
involved. Those designs arethen used as a requirements used by software engineers to create workflow
systems. This approach in itself may not necessarily present an issue, if the original process model was
understood correctly and implemented accordingly. The only problem that may arise is that there is a
gap where interpretation of the original model must take place in order to bridge designs to the actual
system that may be subject topersonal understanding, abilities and deployment of ad-hoc solutions,
etc, and misconceptions and errors may be introduced at this stage;
– – The gap between design and deployment phases: once a workflow system is in place, an
organisational’s demand may change over time and they often result in changes in work practice. A
direct way to support this transition is to modify the software without going back to the original
design. This approach although is timesaving, it is destructive in the long-term, especially if the
changes are frequent andnot properly documented. The rationale for the initial design may be lost and
becomes obsolete, in addition, new rational for the required modification may alsobe lost and may
become incompatible with the original design. One solution is to refer back and update the original
documents as changes are made, however, this is time-consuming and sometimes impossible without
appropriate tool support;
– – The compelling need for businesses to adapt the state of the art technologies: this is the last but not
least point, businesses today has becoming much more technicallyaware and technology-pull than the
more traditional approach of deploying technologies only as needed basis. This trend encourages
business to accept and use new tools as well as updating them in a comparably much shorter period.
Twomain consequences of this approach: new systems often come with their own sets of work
practices and computational methods that they may be incompatible with current organisational
practice and in addition they may conflict with existing software systems. It is important that such
incompatibilities and conflictions are properly dealt with and resolved; in particular, when legacy
software systems are kept in use alongside new practice and systems. This, however, is not a simple
task except for a very simple problems domain. This problem may be discussed in two different
aspects:
– – The incompatibility of technical methods used in different tools: as mentioned early, adopting new
tools often requires accepting new work practice as well as adjustments to new technical methods
74
AIS SIGSEMIS Bulletin 2(1) January-March 2005
either by personnel or system involved. Such new technical methods are sometimes incompatible with
existing systems that considerable efforts must be put into it to enable smooth transitions;
– – The differences of the representations used in different systems: this includes the different forms and
shapes of information used by personnel as well as the underlyingrepresentations used by different
systems. They may not be easily mapped with each other and could potentially cause severe
communication barrier. A solution is to find an appropriate medium that is acceptable and reusable for
all (systems). The question is which is the optimum communication medium. Is there one that is
suitable for all tools? The answer to this question is not necessarily easy, as many representations are
designed in such a way that they directly support in a system’s internal reasoning mechanism. This
characteristic often poses a barrier for deep/full integration of systems of very different or conflicting
natures.
SemanticWeb technologies provide a promising solution for solving interoperability problems for knowledge
sharing. Under this framework, neutral semantic-based communication medium are used that provides
format as well as standard mark-up tags for labelling knowledge content [2]. This approach allows a better
understanding of the knowledge used thus promoting a smoother communication and collaboration between
different systems. This also helps when new systems are introduced into an existing environment. In parallel,
a key and well-recognised technology for promoting and achieving effectiveness and efficiency in
coordinating distributed organisational operations is business process model based workflow management
(BPM-WM) [3]. When combined with the semantic web technology, semantic-based BPM-WM would provide
the advantages of presenting a clearer semantics of information content upon which workflow operates. This
would greatly improve the transparency of conventional workflow system where data objects are often hidden
and explicit knowledge about them is difficult to obtain. On the other hand, logic-based BPM-WM gives a
declarative description of its process logic that when providing a design of a business process model, it may be
used as a basis for execution. This approach aims to address problems, as mentioned above, arise from gaps
between the design, implementation and maintenance phases of workflow system development. The logic-
based description may also be verified statically as well as dynamically, this further helps maintain high
quality of the produced workflow systems.
We present such an approach in an example to illustrate how this technology may be used in the context of a
virtual organisation. Before we go into more detail, the relevant workflow technology is introduced.
2 A Semantic-based Business Process Modelling Language (FBPML)
FBPML adapts and merges two recognised process modelling standards: IDEF3 [7] and NIST PSL (the Process
Specification Language) [8]. IDEF3 originated from concurrent engineering disciplines and is one of the richest
methods available for process modelling. It provides relatively comprehensive visual notations, modelling
method and model-building guidelines. These characteristics make IDEF3 a suitable candidate for capturing
processes. Nevertheless, its semantics is informal and its models therefore are open to interpretation.
On the other hand, NIST PSL provides formal semantics for commonly shared process modelling concepts as
well as theories that support temporal reasoning on activities. FBPML combines the two different methods by
adapting IDEF3’s rich visual and modelling methods and mapping those modelling concepts to the formal
semantics and theories of PSL. FBPML has a formal representation that is based on First Order Predicate Logic
and has a direct mapping to PSL. As a result, FBPML includes relatively standard visual notation and process
modelling concepts and is applicable to theories that carries out formal analysis on its process models.
Precise process execution logic is also defined in FBPML virtual workflow machines are automatically
generated and enacted at run-time based on FBPML descriptions through a workflow meta-interpreter - which
is not possible for conventional IDEF3 or PSL models. This has several benefits. On one hand, requirement
documents of a process model are always coherent with the actual implemented system. This closes the gap
between the design and implementation phases of workflow system development, as stated previously. On
the other hand, when environment changes that require modifications of workflow behaviours, the user only
need to modify the process model without going through the coding phases, because the corresponding
workflow system is automatically change. This closes the gap between the design and deployment phases,
also as stated previously.
75
AIS SIGSEMIS Bulletin 2(1) January-March 2005
In addition, FBPML is within a set of languages that it includes a formal data language, FBPML-DL, that
provides standard descriptions for data constructs and becomes an integral part of a FBPML process
description. This explicit representation of data manipulated by a process is also not presented in IDEF3 or
PSL. The design and use framework of FPBML is also coherent with current workflow standard [3]. For more
information about FBPML, [1] provides a much-detailed account.
3 A Conceptual Overview of Workflow Framework
Figure 1 gives a conceptual architecture for a virtual organisation where collaborative problem solving has
been carried out in a semantic-based workflow framework. Two departments are involved, the Sales and
Technical departments, together they provide on-demand customer-tailored computer configuration and
building. The horizontal line that goes through the two departments divides the work: the upper part
illustrates the individual process models within each department and the actual workflow execution based on
the process models; the lower part depicts the underlying knowledge (grounded in ontologies) used by those
processes and the mapping between the ontologies to enable smooth collaboration.
In this scenario, both departments have used I-X process panels as a front-end to host their individual process
models. However, as indicated, the technical department deploys a specialised knowledge-intensive
constraint solver agent, KRAFT, the mapping at a methodological level, i.e. between a workflow-oriented
methodology and a very different constraint-solving paradigm has to be carried out. One also needs to
consider the appropriate format that data needs to be presented so that it meaningfully supports both
workflow executions as well as for carrying out constraint solving tasks.
We use this example to demonstrate how the different technologies involved may assist the cooperation
between the two departments. Three technologies are used: FBPML [1] provides process modelling and
workflow technologies, KRAFT system [6] enables specialised support for constraint problem solving and I-X
system [9] facilities a user front-end to manage and monitor workflow execution.
I-X process panels are used to serve two functions: to provide a process-aware interface for user support and
to provide a communication mechanism between two I-X agents and between an I-X agent and the KRAFT
system. As I-X is based upon the conceptual framework of I-N-C-A that provides a human-machine
interaction interface for FBPML, FBPML is firstly mapped to I-N-C-A, as indicated in INCA-FBPML ontology in
Figure 1. This enables FBPML business process models (BPM) to be translated and managed through I-X
process panels. This approach allows FBPML and its underlying workflow engine to work with other more
sophisticated workflow front-end. On the other hand, the constraint ontology that underpins the KRAFT system
is mapped with the INCA-FBPML ontology that allows communication between FBPML, I-X and KRAFT
76
AIS SIGSEMIS Bulletin 2(1) January-March 2005
constraint solver. The process of conceptual mapping also indicates patterns needed for correspondence that
form the bodies of communication between systems. The communication processes in the FBPML, indicated
by (Com P-i), are a recognised type of process in FBPML and are clearly labelled in its models.
Two individual domain knowledge bases of different functions are stored in different departments. Each
domain knowledge is ontologically constrained and is based upon individual specifications: the sales-and-
costing and the technical ontologies. As the two departments overlap in their operations, their ontologies are
partially shared. This shared knowledge assists the collaboration between departments of very different
nature. This mimics real-life situations where specialised expertise centres are often geographically disperse
yet collaboration is required between them. The mapping of the underlying ontologies provides a sound and
robust foundation towards exchange of precise information as well as execution semantics thereby ensuring
smoother cooperation.
4 An Agent-based Communication Architecture
Figure 1 illustrates a conceptual overview of the collaboration between two very different types of agent
systems, i.e. workflow and constraint solving systems, based on loose-coupling techniques. An interaction
model was built based upon a client-server architecture where an I-X agent sends an issue that contains a
constraint-problem description to KRAFT in an attempt to get a solution; whereas KRAFT deploys its
constraint solving mechanism and sends back an answer. This interaction model assumes that all required
knowledge is provided and that the “issue” can be resolved within one interaction.
The same architecture, however, can support more sophisticated argumentative communication languages in
which the two systems are free to exchange messages of constraint specifications, partially solved problems
and solutions to achieve a more complex task. Under this arrangement, the two peer systems can be viewed as
software agents that propose constraints, counter-propose constraints and partially solve a CSP, thus
modifying the initial problem specification. This is especially useful if the two departments in a virtual
organisation disagree and/or wish to negotiate new possibilities. This is an example that utilises the
capabilities of Agent Mediated Knowledge Management [4].
The inability to fully exchange knowledge in a virtual organization is a common phenomena. One possibility
is that different departments do not share a common but only use a partially overlapping ontology. As a
result, they can only exchange semantic knowledge that is commonly understood. For instance, the Technical
Department may have the technical details of hardware components, but may not necessarily (nor care to) have
knowledge of costing and sales. The Sales Department, on the contrary, may have some general knowledge
about PC components, but is really only specialised in cost calculation and market prices. One common cause
of only partially sharing information may be the unwillingness to disclose local knowledge. A department
77
AIS SIGSEMIS Bulletin 2(1) January-March 2005
may wish to keep its information private for commercial confidentiality reasons, e.g. calculation methods for
product market price based on cost, or protection for advanced and competitive technologies. Our system
copes with this by passing object IDs and constraints referring to (entity) types declared in the shared part of
the ontology, but it encapsulates in different domains (see Figure 2) the processes that reason about them or
access specific object properties. Thus, we only pass between domains information that the other end ”needs
to know”. The automatic mapping of entity types and constraints between the different representational
spaces (I-X/FBPML and KRAFT/CIF) takes place in the mappers shown in Figure 2. [5] stores a live recording
of a sample system run based on the above scenario.
5 Conclusion
One vision of the Semantic Web is to enable arbitrary heterogeneous processing capabilities to be connected,
thereby enables free sharing of knowledge and support automated execution of users’ tasks from the web.
Semantic-based workflow technologies make use of semantic-rich descriptions to support its execution tasks.
It also provides a good foundation for inviting and incorporating other specialised knowledge-rich agents. We
presented an interesting combined use of one typical business process modeling method (FBPML) and its
workflow engines, a workflow management front (I-X) and a type of a knowledge agent, KRAFT, based on