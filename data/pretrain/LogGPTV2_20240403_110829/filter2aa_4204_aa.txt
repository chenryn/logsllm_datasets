.\" Copyright (c) 1991, 92, 93, 94, 95, 96, 97, 98, 1999 Free Software Foundation
.\" See section COPYING for conditions for redistribution
.TH ld 1 "17 August 1992" "cygnus support" "GNU Development Tools"
.de BP
.sp
.ti \-.2i
\(**
..
.SH NAME
ld \- GNU linker (连接器)
.SH "总览 (SYNOPSIS)"
.hy 0
.na
.TP
.B ld 
.RB "[\|" \-o "
.I output\c
\&\|] \c
.I objfile\c
\&.\|.\|.
.br
.RB "[\|" \-A\c
.I architecture\c
\&\|] 
.RB "[\|" "\-b\ "\c
.I input-format\c
\&\|] 
.RB "[\|" \-Bstatic "\|]"  
.RB "[\|" \-Bdynamic "\|]"  
.RB "[\|" \-Bsymbolic "\|]"  
.RB "[\|" "\-c\ "\c
.I commandfile\c
\&\|] 
.RB "[\|" \-\-cref "\|]"
.RB "[\|" \-d | \-dc | \-dp\c
\|]
.br
.RB "[\|" "\-defsym\ "\c
.I symbol\c
\& = \c
.I expression\c
\&\|]
.RB "[\|" \-\-demangle "\|]"
.RB "[\|" \-\-no\-demangle "\|]"
.RB "[\|" "\-e\ "\c
.I entry\c
\&\|] 
.RB "[\|" \-embedded\-relocs "\|]"
.RB "[\|" \-E "\|]" 
.RB "[\|" \-export\-dynamic "\|]"
.RB "[\|" "\-f\ "\c
.I name\c
\&\|]
.RB "[\|" "\-\-auxiliary\ "\c
.I name\c
\&\|]
.RB "[\|" "\-F\ "\c
.I name\c
\&\|]
.RB "[\|" "\-\-filter\ "\c
.I name\c
\&\|]
.RB "[\|" "\-format\ "\c
.I input-format\c
\&\|] 
.RB "[\|" \-g "\|]" 
.RB "[\|" \-G
.I size\c
\&\|]
.RB "[\|" "\-h\ "\c
.I name\c
\&\|]
.RB "[\|" "\-soname\ "\c
.I name\c
\&\|]
.RB "[\|" \-\-help "\|]"
.RB "[\|" \-i "\|]"
.RB "[\|" \-l\c
.I ar\c
\&\|] 
.RB "[\|" \-L\c
.I searchdir\c
\&\|] 
.RB "[\|" \-M "\|]" 
.RB "[\|" \-Map
.I mapfile\c
\&\|] 
.RB "[\|" \-m
.I emulation\c
\&\|] 
.RB "[\|" \-n | \-N "\|]" 
.RB "[\|" \-noinhibit-exec "\|]" 
.RB "[\|" \-no\-keep\-memory "\|]" 
.RB "[\|" \-no\-warn\-mismatch "\|]" 
.RB "[\|" \-O\c
.I level\c
\&\|]
.RB "[\|" "\-oformat\ "\c
.I output-format\c
\&\|] 
.RB "[\|" "\-R\ "\c
.I filename\c
\&\|]
.RB "[\|" \-relax "\|]"
.RB "[\|" \-r | \-Ur "\|]" 
.RB "[\|" "\-rpath\ "\c
.I directory\c
\&\|]
.RB "[\|" "\-rpath\-link\ "\c
.I directory\c
\&\|]
.RB "[\|" \-S "\|]" 
.RB "[\|" \-s "\|]" 
.RB "[\|" \-shared "\|]" 
.RB "[\|" \-sort\-common "\|]" 
.RB "[\|" "\-split\-by\-reloc\ "\c
.I count\c
\&\|]
.RB "[\|" \-split\-by\-file "\|]" 
.RB "[\|" "\-T\ "\c
.I commandfile\c
\&\|]  
.RB "[\|" "\-Ttext\ "\c
.I textorg\c
\&\|] 
.RB "[\|" "\-Tdata\ "\c
.I dataorg\c
\&\|] 
.RB "[\|" "\-Tbss\ "\c
.I bssorg\c
\&\|]
.RB "[\|" \-t "\|]" 
.RB "[\|" "\-u\ "\c
.I sym\c
\&]
.RB "[\|" \-V "\|]"
.RB "[\|" \-v "\|]"
.RB "[\|" \-\-verbose "\|]"
.RB "[\|" \-\-version "\|]"
.RB "[\|" \-warn\-common "\|]" 
.RB "[\|" \-warn\-constructors "\|]" 
.RB "[\|" \-warn\-multiple\-gp "\|]" 
.RB "[\|" \-warn\-once "\|]" 
.RB "[\|" \-warn\-section\-align "\|]" 
.RB "[\|" \-\-whole\-archive "\|]" 
.RB "[\|" \-\-no\-whole\-archive "\|]" 
.RB "[\|" "\-\-wrap\ "\c
.I symbol\c
\&\|]
.RB "[\|" \-X "\|]" 
.RB "[\|" \-x "\|]" 
.ad b
.hy 1
.SH "描述 (DESCRIPTION)"
\c
.B ld\c
\& 合并 一组 目标文件(object) 和 库文件(archive), 重定位 数据部分,
构建 符号引用(symbol reference). 一般说来, 编译 生成 可执行文件 的 
最后步骤 就是 调用 \c
.B ld\c
\&.
\c
.B ld\c
\& 可以读取 用 连接器命令语言(Linker Command Language) 编写的 脚本文件, 
它 能够 对 连接过程 提供 精确 和 全面 的 控制.
本 手册页 不讨论 命令语言; 可参看 `\|\c
.B info\c
\|' 的 `\|\c
.B ld\c
\|' 项, 或者 手册
.I
ld: the GNU linker
\&, 里面有 命令语言 的 细节 和 其他 GNU linker 的 内容.
这个版本 的 \c
.B ld\c
\& 使用 通用BFD库 操作 目标文件, \c
.B ld\c
\& 能够 以 多种格式 读入, 连接 和 输出 目标文件 \(em\&例如 COFF 或 \c
.B a.out\c
\&, 能够 把 不同的格式 连接 在一起, 产生 各种 有效 的 目标文件.
用 `\|\c
.B objdump \-i\c
\|' 可以 列出 各种 体系结构 支持 的 格式 列表; 另见
.BR objdump ( 1 ).
GNU linker 不仅 灵活 强大, 还能够 比 其他 linker 提供 更多 的 诊断信息.
很多 linker 只要 碰上 一个错误 就 立刻停止 执行; 而
\c
.B ld\c
\& 一有可能 仍然 继续执行, 这样 容易 定位出 其他错误
(某些情况下, 尽管出了错, 仍然 生成 输出文件).
GNU linker \c
.B ld\c
\& 期望 实现 更广泛 的 适用范围, 尽可能 兼容 其他 linker.
通过 命令行 和 环境变量, 用户 可以 用 ld 执行 多种 操作.
.SH "选项 (OPTIONS)"
过于丰富的 命令行选项 使人 感到 压抑, 好在 实际使用 中, 多数情况下
只需要 掌握 其中 一小部分. 例如, 在 一个 标准的, 提供 相应支持 的 Unix 
系统 中, 常常 用 \c
.B ld\c
\& 连接 标准的 Unix 目标文件. 如果要 连接 \c
.B hello.o\c
\&:
.sp
.br
$\ ld\ \-o\ output\ /lib/crt0.o\ hello.o\ \-lc
.br
.sp
它 告诉 \c
.B ld\c
\& 生成 一个 叫做 \c
.B output\c
\& 的 文件 , 其中 连接了 文件 \c
.B /lib/crt0.o\c
\& 和 \c
.B hello.o\c
\& 以及
库文件 \c
.B libc.a\c
\& (在 标准搜索目录下).
\c
.B ld\c
\& 的 命令行选项 可以 任意顺序 出现, 甚至 重复出现. 多数 情况 下, 
如果 用 不同的 参数 重复 同一种 选项, ld 不会 出现 更多的变化, 也不会 
覆盖 以前的 参数. (指 命令行 中 左边的参数)
例外情况 \(em\& 某些选项 有 反复使用 的 需要 \(em\& 如
\c
.B \-A\c
\&, \c
.B \-b\c
\& (或等同的 \c
.B \-format\c
\&), \c
.B \-defsym\c
\&,
\c
.B \-L\c
\&, \c
.B \-l\c
\&, \c
.B \-R\c
\&, 和 \c
.B \-u\c
\&.
待连接的 目标文件 列表, 即 总览中的 \c
.I objfile\c
\&,
可以 放在 命令行选项 的 前面, 后面, 或者 混杂其中; 但是 不能 把 \c
.I objfile\c
\& 放置于 某个 选项开关 和 它的参数 中间.
一般说来 linker 要求 至少 输入 一个 目标文件, 但是 可以 用 \c
.B \-l\c
\&,
\c
.B \-R\c
\& 输入 其他格式 的 二进制文件, 或者 用 命令语言 编写的 脚本文件. 如果 \c
.I 没有\c
\& 指定 二进制格式 的 输入文件, linker 就不能 产生 输出文件, 而是 显示
`\|\c
.B No input files\c
\|'.
选项的参数 必须 出现在 代表 选项 的 字母 后面, 可以有 空白符, 也可以 没有.
.TP
.BI "-A" "architecture"
在 目前版本 的 \c
.B ld\c
\& 中, 这个 选项 仅适用于 Intel 960 体系系列. 在 \c
.B ld\c
\& 的 设置 中, \c
.I architecture\c
\& 参数 是 960 系列 的 成员 识别名称 之一, 由 两个字母 组成;
这个选项 指出 期望的 输出目标, 对 输入文件 的 不兼容指令 作出 警告.
它 能够 改变 linker 对 库文件 的 搜索策略, 以便于 支持 体系相关库, 方法是
把 体系识别名称 添加在 待搜索 的 文件名 尾部.
例如, 如果 \c
.B ld\c
\& 命令行 有 `\|\c
.B \-ACA\c
\|' 和 `\|\c
.B \-ltry\c
\|', linker 将 搜索 (根据 内置的路径 和 \c
.B \-L\c
\& 指定的路径) 以下 名称 的 库文件
.sp
.br
try
.br
libtry.a
.br
tryca
.br
libtryca.a
.br
.sp
前两项 是 常规做法; 后两项 源于 `\|\c
.B \-ACA\c
\|'.
将来发布的 \c