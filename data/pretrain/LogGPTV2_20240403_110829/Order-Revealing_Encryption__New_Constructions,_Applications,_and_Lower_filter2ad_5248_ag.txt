[BGH+13] Dan Boneh, Craig Gentry, Shai Halevi, Frank Wang, and David J. Wu. Private database
queries using somewhat homomorphic encryption. In ACNS, 2013.
[BGI+12]
[BHF09]
Boaz Barak, Oded Goldreich, Russell Impagliazzo, Steven Rudich, Amit Sahai, Salil P.
Vadhan, and Ke Yang. On the (im)possibility of obfuscating programs. J. ACM, 2012.
Carsten Binnig, Stefan Hildenbrand, and Franz F¨arber. Dictionary-based order-
preserving string compression for main memory column stores. In ACM SIGMOD,
2009.
[BHKR13] Mihir Bellare, Viet Tung Hoang, Sriram Keelveedhi, and Phillip Rogaway. Eﬃcient
garbling from a ﬁxed-key blockcipher. In IEEE SP, 2013.
[BKR18]
[BKS15]
Dmytro Bogatov, George Kollios, and Leo Reyzin. A comparative evaluation of order-
preserving and order-revealing schemes and protocols. Cryptology ePrint Archive,
Report 2018/953, 2018.
Zvika Brakerski, Ilan Komargodski, and Gil Segev. From single-input to multi-input
functional encryption in the private-key setting. IACR Cryptology ePrint Archive,
2015.
[BLR+15] Dan Boneh, Kevin Lewi, Mariana Raykova, Amit Sahai, Mark Zhandry, and Joe
Zimmerman. Semantically secure order-revealing encryption: Multi-input functional
encryption without obfuscation. In EUROCRYPT, 2015.
[BPP16]
Tobias Boelter, Rishabh Poddar, and Raluca Ada Popa. A secure one-roundtrip index
for range queries. Cryptology ePrint Archive, Report 2016/568, 2016.
29
[BR93]
[BS03]
Mihir Bellare and Phillip Rogaway. Random oracles are practical: A paradigm for
designing eﬃcient protocols. In CCS, 1993.
Dan Boneh and Alice Silverberg. Applications of multilinear forms to cryptography.
Contemporary Mathematics, 2003.
[BSW11]
Dan Boneh, Amit Sahai, and Brent Waters. Functional encryption: Deﬁnitions and
challenges. In TCC, 2011.
[BW07]
[CD15]
Dan Boneh and Brent Waters. Conjunctive, subset, and range queries on encrypted
data. In TCC, 2007.
Sanjit Chatterjee and M. Prem Laxman Das. Property preserving symmetric encryption
revisited. In ASIACRYPT, 2015.
[CGKO06] Reza Curtmola, Juan A. Garay, Seny Kamara, and Rafail Ostrovsky. Searchable
symmetric encryption: improved deﬁnitions and eﬃcient constructions. In ACM CCS,
2006.
[CJJ+13]
[CJJ+14]
David Cash, Stanislaw Jarecki, Charanjit S. Jutla, Hugo Krawczyk, Marcel-Catalin
Rosu, and Michael Steiner. Highly-scalable searchable symmetric encryption with
support for boolean queries. In CRYPTO, 2013.
David Cash, Joseph Jaeger, Stanislaw Jarecki, Charanjit S. Jutla, Hugo Krawczyk,
Marcel-Catalin Rosu, and Michael Steiner. Dynamic searchable encryption in very-large
databases: Data structures and implementation. In NDSS, 2014.
[CK10]
Melissa Chase and Seny Kamara. Structured encryption and controlled disclosure. In
ASIACRYPT, pages 577–594, 2010.
[CLOZ16] David Cash, Feng-Hao Liu, Adam O’Neill, and Cong Zhang. Reducing the leakage
in practical order-revealing encryption. Cryptology ePrint Archive, Report 2016/661,
2016.
[CLT13]
Jean-S´ebastien Coron, Tancr`ede Lepoint, and Mehdi Tibouchi. Practical multilinear
maps over the integers. In CRYPTO, 2013.
[CLWW16] Nathan Chenette, Kevin Lewi, Stephen A. Weis, and David J. Wu. Practical order-
revealing encryption with limited leakage. In FSE, 2016.
[CM05]
Yan-Cheng Chang and Michael Mitzenmacher. Privacy preserving keyword searches
on remote encrypted data. In ACNS, 2005.
[FJK+15]
Sky Faber, Stanislaw Jarecki, Hugo Krawczyk, Quan Nguyen, Marcel-Catalin Rosu,
and Michael Steiner. Rich queries on encrypted data: Beyond exact matches. In
ESORICS, 2015.
[FV15]
Jim Finkle and Dustin Volz. Database of 191 million u.s. voters exposed on internet:
researcher. Reuters, 2015.
[Gen09]
Craig Gentry. Fully homomorphic encryption using ideal lattices. In STOC, 2009.
30
[GGG+14] Shaﬁ Goldwasser, S. Dov Gordon, Vipul Goyal, Abhishek Jain, Jonathan Katz, Feng-
Hao Liu, Amit Sahai, Elaine Shi, and Hong-Sheng Zhou. Multi-input functional
encryption. In EUROCRYPT, 2014.
[GGH13a]
Sanjam Garg, Craig Gentry, and Shai Halevi. Candidate multilinear maps from ideal
lattices. In EUROCRYPT, 2013.
[GGH+13b] Sanjam Garg, Craig Gentry, Shai Halevi, Mariana Raykova, Amit Sahai, and Brent
Waters. Candidate indistinguishability obfuscation and functional encryption for all
circuits. In FOCS, 2013.
[GGM86] Oded Goldreich, Shaﬁ Goldwasser, and Silvio Micali. How to construct random
functions. J. ACM, 1986.
[GM84]
[GM16]
[GO96]
Shaﬁ Goldwasser and Silvio Micali. Probabilistic encryption. J. Comput. Syst. Sci.,
1984.
Shay Gueron and Nicky Mouha. Simpira v2: A family of eﬃcient permutations using
the AES round function. IACR Cryptology ePrint Archive, 2016.
Oded Goldreich and Rafail Ostrovsky. Software protection and simulation on oblivious
rams. J. ACM, 1996.
[Goh03]
Eu-Jin Goh. Secure indexes. IACR Cryptology ePrint Archive, 2003.
[Gt12]
Torbjrn Granlund and the GMP development team. GNU MP: The GNU Multiple
Precision Arithmetic Library. http://gmplib.org/, 2012.
[JJK+13]
Stanislaw Jarecki, Charanjit S. Jutla, Hugo Krawczyk, Marcel-Catalin Rosu, and
Michael Steiner. Outsourced symmetric private information retrieval. In ACM CCS,
2013.
[JP16]
Marc Joye and Alain Passel´egue. Practical trade-oﬀs for multi-input functional encryp-
tion. Cryptology ePrint Archive, Report 2016/622, 2016.
[KAK10]
Hasan Kadhem, Toshiyuki Amagasa, and Hiroyuki Kitagawa. A secure and eﬃcient
order preserving encryption scheme for relational databases. In KMIS, 2010.
[Kel14]
[Ker15]
Gordon Kelly.
passwords. Forbes, 2014.
ebay suﬀers massive security breach, all users must change their
Florian Kerschbaum. Frequency-hiding order-preserving encryption. In ACM CCS,
2015.
[KLM+16] Sam Kim, Kevin Lewi, Avradip Mandal, Hart William Montgomery, Arnab Roy, and
David J. Wu. Function-hiding inner product encryption is practical. IACR Cryptology
ePrint Archive, 2016.
[Knu98]
Donald Ervin Knuth. The art of computer programming, Volume II: Seminumerical
Algorithms, 3rd Edition. Addison-Wesley, 1998.
31
[KS14]
[LR88]
Florian Kerschbaum and Axel Schr¨opfer. Optimal average-complexity ideal-security
order-preserving encryption. In ACM CCS, 2014.
Michael Luby and Charles Rackoﬀ. How to construct pseudorandom permutations
from pseudorandom functions. SIAM J. Comput., 1988.
[MCO+15] Charalampos Mavroforakis, Nathan Chenette, Adam O’Neill, George Kollios, and Ran
Canetti. Modular order-preserving encryption, revisited. In ACM SIGMOD, 2015.
[NKW15] Muhammad Naveed, Seny Kamara, and Charles V. Wright.
property-preserving encrypted databases. In ACM CCS, 2015.
Inference attacks on
[NPG14] Muhammad Naveed, Manoj Prabhakaran, and Carl A. Gunter. Dynamic searchable
encryption via blind storage. In IEEE SP, 2014.
[PKV+14] Vasilis Pappas, Fernando Krell, Binh Vo, Vladimir Kolesnikov, Tal Malkin, Seung Geol
Choi, Wesley George, Angelos D. Keromytis, and Steve Bellovin. Blind seer: A scalable
private DBMS. In IEEE SP, 2014.
[PLZ13]
[PR12]
Raluca A. Popa, Frank H. Li, and Nickolai Zeldovich. An ideal-security protocol for
order-preserving encoding. In IEEE SP, 2013.
Omkant Pandey and Yannis Rouselakis. Property preserving symmetric encryption. In
EUROCRYPT, 2012.
[PRZB11] Raluca A. Popa, Catherine M. S. Redﬁeld, Nickolai Zeldovich, and Hari Balakrishnan.
Cryptdb: protecting conﬁdentiality with encrypted query processing. In ACM SOSP,
2011.
[RACY15] Daniel S. Roche, Daniel Apon, Seung Geol Choi, and Arkady Yerukhimovich. POPE:
partial order-preserving encoding. IACR Cryptology ePrint Archive, 2015.
[SWP00]
Dawn Xiaodong Song, David Wagner, and Adrian Perrig. Practical techniques for
searches on encrypted data. In IEEE SP, 2000.
[The03]
The OpenSSL Project. OpenSSL: The open source toolkit for SSL/TLS. www.openssl.
org, 2003.
[TYM14]
Isamu Teranishi, Moti Yung, and Tal Malkin. Order-preserving encryption secure
beyond one-wayness. In ASIACRYPT, 2014.
[Yao82]
Andrew Chi-Chih Yao. Protocols for secure computations (extended abstract). In
FOCS, 1982.
[YSK+13] Masaya Yasuda, Takeshi Shimoyama, Jun Kogure, Kazuhiro Yokoyama, and Takeshi
Koshiba. Secure pattern matching using somewhat homomorphic encryption. In CCSW,
2013.
32
A Proof of Theorem 3.3
Let A = (A1, . . . ,Aq) where q = poly(λ) be an eﬃcient adversary for the ORE security game
(Deﬁnition 2.2). To show security, we construct an eﬃcient simulator S = (S0, . . . ,Sq) such that the
two distributions REALoreA (λ) and SIMoreA,S,Lcmp(λ) are computationally indistinguishable.
Description of the simulator. We begin by describing the simulator S. In the security proof,
we model H as a random oracle. Thus, in the ideal experiment, the simulator is also responsible for
answering queries to the random oracle. First, on input the security parameter 1λ, the simulator
algorithm S0 initializes the following tables which will be used to ensure consistency throughout the
simulation:
• The table Tro : {0, 1}λ × {0, 1}λ → Z3 used to maintain the input-output mappings for the
random oracle.
• The table Tkeys : {0, 1}λ → [q] × [N ] used to maintain the mapping between keys to the
corresponding message index and the permuted index of the message.
L , ct(i)
R
Both tables are initially empty at the beginning of the simulation. The simulator’s initial state stS
consists of the tuple (Tkeys, Tro). Then, for each t ∈ [q], after the adversary outputs a query mt,
the simulation algorithm St is invoked on input stS and the leakage function Lcmp(m1, . . . , mt). In
(cid:1) to denote the simulator’s response in the ith query. We
the following, we write ct(i) =(cid:0)ct(i)
also assume that the simulator’s state includes the ciphertexts ct(i) for all previous queries i < t.
We now describe how St responds to the tth query.
Simulating the left ciphertexts. We ﬁrst show how St constructs the ciphertext components
ct(t)
L . There are two cases:
• Suppose for some i < t, cmp(mi, mt) = 0. Then, the simulator sets ct(t)
• Suppose for all i < t, cmp(mi, mt) (cid:54)= 0. Deﬁne S ⊂ [N ] to be the set of indices β ∈ [N ]
for which there exists a mapping k (cid:55)→ (α, β) in Tkeys for some key k ∈ {0, 1}λ and message
r←− {0, 1}λ and a random index
index α ∈ [q]. Then the simulator chooses a random key k
r←− [N ] \ S. It then checks to see if there is a mapping (k, r) (cid:55)→ ρ for some r ∈ {0, 1}λ and
j
ρ ∈ Z3 in Tro. If so, St aborts the simulation and outputs ⊥1. Otherwise, it sets ct(t)
L = (k, j),
and adds the mapping k (cid:55)→ (t, j) to Tkeys.
L = ct(i)
L .
Finally, if the simulator does not abort, it outputs the left ciphertext ct(t)
L and an updated state.
Simulating the right ciphertexts. For the right ciphertexts, the simulator St ﬁrst samples a
r←− {0, 1}λ. It then checks to see if there is already a mapping of the form (k, ¯rt) (cid:55)→ ρ in
nonce ¯rt
Tro for some k ∈ {0, 1}λ and ρ ∈ Z3. If so, St aborts the simulation and outputs ⊥2. Otherwise,
for i ∈ [N ], it samples ¯v(t)
N ), and outputs the ciphertext
ct(t) = (ct(t)
Simulating the random oracle queries. To conclude the description of S, we describe how it
simulates the random oracle queries. Let t ≤ q be the number of encryption queries the adversary
has made so far. Then, on an input (k, r), the simulator responds as follows:
r←− Z3, sets ct(t)
R ) as well as an updated state.
R = (¯rt, ¯v(t)
1 , . . . , ¯v(t)
L , ct(t)
i
33
• If there is a mapping (k, r) (cid:55)→ ¯ρ in Tro, then the simulator replies with ¯ρ.
• If there is a mapping k (cid:55)→ (α, β) in Tkeys for some α ∈ [q] and β ∈ [N ] and r = ¯rj for some
β − cmp(mα, mj), adds the mapping (k, r) (cid:55)→ ¯ρ to Tro,
j ∈ [t], then the simulator sets ¯ρ = ¯v(j)
and replies with ¯ρ.