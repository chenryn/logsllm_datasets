(November 2009), 4:1–4:40.
[8] ACIIC¸ MEZ, O. Yet another microarchitectural attack: Exploiting
I-cache. In Proceedings of the 2007 ACM Workshop on Computer
Security Architecture (2007), CSAW’07, pp. 11–18.
[9] ACIIC¸ MEZ, O., BRUMLEY, B. B., AND GRABHER, P. New re-
In Proceedings of the 12th
sults on instruction cache attacks.
International Conference on Cryptographic Hardware and Em-
bedded Systems (2010), CHES’10, pp. 110–124.
[10] ACIIC¸ MEZ, O., AND SCHINDLER, W. A vulnerability in RSA
implementations due to instruction cache analysis and its demon-
stration on OpenSSL. In Proceedings of the 2008 The Cryptop-
graphers’ Track at the RSA Conference on Topics in Cryptology
(2008), CT-RSA’08, pp. 256–273.
[11] ARM LIMITED. ARM security technology: Building a secure
system using TrustZone technology, 2009.
[12] BAUMANN, A., PEINADO, M., AND HUNT, G. Shielding appli-
cations from an untrusted cloud with Haven. In Proceedings of
the 11th USENIX Conference on Operating Systems Design and
Implementation (2014), OSDI’14, pp. 267–283.
[13] BENGER, N., POL, J., SMART, N. P., AND YAROM, Y. “ooh
aah... just a little bit”: A small amount of side channel can go
In Proceedings of the 16th International Work-
a long way.
shop on Cryptographic Hardware and Embedded Systems (2014),
CHES’14, pp. 75–92.
[14] BHARGAVA, R., SEREBRIN, B., SPADINI, F., AND MANNE,
S. Accelerating two-dimensional page walks for virtualized sys-
In Proceedings of the 13th International Conference on
tems.
Architectural Support for Programming Languages and Operat-
ing Systems (2008), ASPLOS’08, pp. 26–35.
[15] BOVET, D. P., AND CESATI, M. Understanding the LINUX Ker-
nel, 3rd ed. O’Reilly, Sebastopol, CA, 2006.
[16] BZIP2. bzip2 and libbzip2, 1996. http://www.bzip.org.
[17] CHECKOWAY, S., AND SHACHAM, H. Iago attacks: why the sys-
tem call API is a bad untrusted RPC interface. In Proceedings of
the 18th International Conference on Architectural Support for
Programming Languages and Operating Systems (2013), ASP-
LOS’13, pp. 253–264.
[18] CHEN, H., ZHANG, F., CHEN, C., YANG, Z., CHEN, R.,
ZANG, B., AND MAO, W. Tamper-resistant execution in an un-
trusted operating system using a virtual machine monitor. Tech.
rep., Fudan University, Parallel Processing Insitute, 2007.
1456    27th USENIX Security Symposium
USENIX Association
[19] CHEN, S., ZHANG, X., REITER, M. K., AND ZHANG, Y. De-
tecting privileged side-channel attacks in shielded execution with
D ´EJ `A VU. In Proceedings of the 2017 ACM Asia Conference on
Computer and Communications Security (2017), ASIA CCS’17,
pp. 7–18.
[34] DONG, X., SHEN, Z., CRISWELL,
J., COX, A., AND
DWARKADAS, S. Spectres, Virtual Ghosts, and hardware sup-
port. In Proceedings of the 7th International Workshop on Hard-
ware and Architectural Support for Security and Privacy (2018),
HASP’18, pp. 5:1–5:9.
[20] CHEN, X., GARFINKEL, T., LEWIS, E. C., SUBRAHMANYAM,
P., WALDSPURGER, C. A., BONEH, D., DWOSKIN, J., AND
PORTS, D. R. Overshadow: a virtualization-based approach
to retroﬁtting protection in commodity operating systems.
In
Proceedings of the 13th International Conference on Architec-
tural Support for Programming Languages and Operating Sys-
tems (2008), ASPLOS’08, pp. 2–13.
[21] CHENG, Y., DING, X., AND DENG, R. H.
Efﬁcient
virtualization-based application protection against untrusted op-
In Proceedings of the 10th ACM Symposium
erating system.
on Information, Computer and Communications Security (2015),
ASIA CCS’15, pp. 345–356.
[22] CHIAPPETTA, M., SAVAS, E., AND YILMAZ, C. Real time de-
tection of cache-based side-channel attacks using hardware per-
formance counters. Appl. Soft Comput. 49, C (Dec. 2016), 1162–
1174.
[23] COSTAN, V., AND DEVADAS, S.
Intel SGX explained. IACR
Cryptology ePrint Archive 2016 (2016), 86.
[24] COSTAN, V., LEBEDEV, I., AND DEVADAS, S.
Sanctum:
Minimal hardware extensions for strong software isolation.
In
Proceedings of the 25th USENIX Security Symposium (2016),
SEC’16, pp. 857–874.
[25] CRISWELL, J. Secure Virtual Architecture: Security for Com-
modity Software Systems. PhD thesis, Computer Science Depart-
ment, University of Illinois at Urbana-Champaign, Urbana, IL,
August 2014.
[26] CRISWELL, J., DAUTENHAHN, N., AND ADVE, V. Virtual
Ghost: Protecting applications from hostile operating systems.
In Proceedings of the 19th International Conference on Architec-
tural Support for Programming Languages and Operating Sys-
tems (2014), ASPLOS’14.
[27] CRISWELL, J., GEOFFRAY, N., AND ADVE, V. Memory safety
for low-level software/hardware interactions. In Proceedings of
the 18th Usenix Security Symposium (2009), SEC’09.
[28] CRISWELL, J., LENHARTH, A., DHURJATI, D., AND ADVE,
V. Secure Virtual Architecture: A safe execution environment
In Proceedings of the ACM
for commodity operating systems.
Symposium on Operating System Principles (2007), SOSP’07.
[29] CRISWELL, J., MONROE, B., AND ADVE, V. A virtual instruc-
tion set interface for operating system kernels. In Workshop on
the Interaction between Operating Systems and Computer Archi-
tecture (2006), WIOSCA’06, pp. 26–33.
[30] CYTRON, R., FERRANTE, J., ROSEN, B. K., WEGMAN, M. N.,
AND ZADECK, F. K. Efﬁciently computing static single assign-
ment form and the control dependence graph. ACM Transac-
tions on Programming Languages and Systems (October 1991),
13(4):451–490.
[31] D. KAPLAN, J. P., AND WOLLER, T. White Paper AMD Memory
Encryption. AMD, 4 2016.
[32] DENNING, D. E. A lattice model of secure information ﬂow.
Commun. ACM 19, 5 (May 1976), 236–243.
[33] DHURJATI, D., KOWSHIK, S., AND ADVE, V. SAFECode: En-
forcing alias analysis for weakly typed languages. In ACM Con-
ference on Programming Language Design and Implementation
(2006), PLDI’06.
[35] GODFREY, M. On the prevention of cache-based side-channel at-
tacks in a cloud environment. Master’s thesis, School of Comput-
ing, Queen’s University, Kingston, Ontario, Canada, Sept 2013.
[36] GRUSS, D., SPREITZER, R., AND MANGARD, S. Cache tem-
plate attacks: Automating attacks on inclusive last-level caches.
In Proceedings of the 24th USENIX Security Symposium (2015),
SEC’15, pp. 897–912.
[37] GULLASCH, D., BANGERTER, E., AND KRENN, S. Cache
games – bringing access-based cache attacks on AES to prac-
In Proceedings of the 2011 IEEE Symposium on Security
tice.
and Privacy (2011), SP ’11, pp. 490–505.
[38] H ¨AHNEL, M., CUI, W., AND PEINADO, M. High-resolution
side channels for untrusted operating systems. In Proceedings of
the 2017 USENIX Annual Technical Conference (2017), pp. 299–
312.
[39] HETZELT, F., AND BUHREN, R. Security analysis of encrypted
virtual machines. In Proceedings of the 13th ACM International
Conference on Virtual Execution Environments (2017), VEE’17,
pp. 129–142.
[40] HOFMANN, O. S., KIM, S., DUNN, A. M., LEE, M. Z., AND
WITCHEL, E. InkTag: secure applications on an untrusted op-
erating system. In Proceedings of the 18th International Confer-
ence on Architectural Support for Programming Languages and
Operating Systems (2013), ASPLOS’13, pp. 265–278.
[41] HU, W.-M. Reducing timing channels with fuzzy time. J. Com-
put. Secur. 1, 3-4 (May 1992), 233–254.
[42] INTEL. Software Guard Extensions Programming Reference, Oc-
tober 2014. Document Number: 3329298-002.
[43] IRAZOQUI, G., EISENBARTH, T., AND SUNAR, B. S$A: A
shared cache attack that works across cores and deﬁes VM sand-
boxing – and its application to AES. In Proceedings of the 2015
IEEE Symposium on Security and Privacy (May 2015), SP’15,
pp. 591–604.
[44] KIM, T., PEINADO, M., AND MAINAR-RUIZ, G. STEALTH-
MEM: System-level protection against cache-based side channel
In Presented as part of the 21st USENIX
attacks in the cloud.
Security Symposium (2012), pp. 189–204.
[45] KOCH, W. GnuPG, 2017. https://gnupg.org.
[46] KOCHER, P., GENKIN, D., GRUSS, D., HAAS, W., HAMBURG,
M., LIPP, M., MANGARD, S., PRESCHER, T., SCHWARZ, M.,
AND YAROM, Y. Spectre attacks: Exploiting speculative execu-
tion.
[47] LATTNER, C., AND ADVE, V. LLVM: A compilation framework
for lifelong program analysis and transformation. In Proceedings
of the Conference on Code Generation and Optimization (2004),
CGO’04, pp. 75–88.
[48] LI, X., KASHYAP, V., OBERG, J. K., TIWARI, M., RAJARATHI-
NAM, V. R., KASTNER, R., SHERWOOD, T., HARDEKOPF, B.,
AND CHONG, F. T. Sapper: A language for hardware-level
In Proceedings of the 19th Inter-
security policy enforcement.
national Conference on Architectural Support for Programming
Languages and Operating Systems (2014), ASPLOS’14, pp. 97–
112.
[49] LIPP, M., SCHWARZ, M., GRUSS, D., PRESCHER, T., HAAS,
W., MANGARD, S., KOCHER, P., GENKIN, D., YAROMN, Y.,
AND HAMBURG, M. Meltdown.
USENIX Association
27th USENIX Security Symposium    1457
[50] LIU, F., GE, Q., YAROM, Y., MCKEEN, F., ROZAS, C.,
HEISER, G., AND LEE, R. B. CATalyst: Defeating last-level
cache side channel attacks in cloud computing. In Proceedings
of the 2016 IEEE International Symposium on High Performance
Computer Architecture (2016), HPCA’16, pp. 406–418.
[51] LIU, F., AND LEE, R. B. Random ﬁll cache architecture. In Pro-
ceedings of the 47th Annual IEEE/ACM International Symposium
on Microarchitecture (2014), MICRO’14, pp. 203–215.
[52] LIU, F., YAROM, Y., GE, Q., HEISER, G., AND LEE, R. B.
In Pro-
Last-level cache side-channel attacks are practical.
ceedings of the 2015 IEEE Symposium on Security and Privacy
(2015), SP’15, pp. 605–622.
[53] MARTIN, R., DEMME, J., AND SETHUMADHAVAN, S. Time-
Warp: Rethinking timekeeping and performance monitoring
mechanisms to mitigate side-channel attacks. In Proceedings of
the 39th Annual International Symposium on Computer Architec-
ture (2012), ISCA’12, pp. 118–129.
[54] MCKUSICK, M. K., NEVILLE-NEIL, G. V., AND WATSON, R.
N. M. The Design and Implementation of the FreeBSD Operating
System, second ed. Pearson Education, 2015.
[55] MCVOY, L., AND STAELIN, C. lmbench: portable tools for per-
formance analysis. In Proceedings of the 1996 USENIX Annual
Technical Conference (1996), ATC’96, pp. 23–23.
[56] NAGARAKATTE, S., ZHAO,
J., MARTIN, M. M., AND
ZDANCEWIC, S. SoftBound: Highly compatible and complete
spatial memory safety for C. In Proceedings of the 2009 ACM
Conference on Programming Language Design and Implementa-
tion (2009), PLDI’09, pp. 245–258.
[57] NAVARRO, J.,
IYER, S., DRUSCHEL, P., AND COX, A.
Practical, transparent operating system support for superpages.
SIGOPS Oper. Syst. Rev. 36, SI (Dec. 2002), 89–104.
[58] OSVIK, D. A., SHAMIR, A., AND TROMER, E. Cache attacks
and countermeasures: The case of AES. In Proceedings of the
2006 The Cryptographers’ Track at the RSA Conference on Top-
ics in Cryptology (2006), CT-RSA’06, pp. 1–20.
[59] PAYER, M. HexPADS: A platform to detect “stealth” attacks. In
Proceedings of the 8th International Symposium on Engineering
Secure Software and Systems - Volume 9639 (2016), ESSoS’16,
pp. 138–154.
[60] RUSSINOVICH, M. E., AND SOLOMON, D. A. Microsoft Win-
dows Internals, Fourth Edition: Microsoft Windows Server(TM)
2003, Windows XP, and Windows 2000 (Pro-Developer). Mi-
crosoft Press, Redmond, WA, USA, 2004.
[61] SHI, J., SONG, X., CHEN, H., AND ZANG, B. Limiting cache-
based side-channel in multi-tenant cloud using dynamic page col-
oring. In Proceedings of the 2011 IEEE/IFIP 41st International
Conference on Dependable Systems and Networks Workshops
(2011), DSN-W’11, pp. 194–199.
[62] SHIH, M.-W., LEE, S., KIM, T., AND PEINADO, M. T-SGX:
Eradicating controlled-channel attacks against enclave programs.
In Proceedings of the Network Distributed Security Symposium.
[63] SHINDE, S., CHUA, Z. L., NARAYANAN, V., AND SAXENA, P.
Preventing page faults from telling your secrets. In Proceedings
of the 11th ACM Asia Conference on Computer and Communica-
tions Security (2016), ASIA CCS’16, pp. 317–328.
[64] SINGH, A. Mac OS X Internals. Addison-Wesley Professional,
2006.
[65] THE OPENBSD PROJECT. OpenSSH, 2014. https://www.
openssh.com.
[66] TROMER, E., OSVIK, D. A., AND SHAMIR, A. Efﬁcient cache
attacks on AES, and countermeasures. J. Cryptol. 23, 1 (Jan.
2010), 37–71.
[67] VAN BULCK, J., WEICHBRODT, N., KAPITZA, R., PIESSENS,
F., AND STRACKX, R. Telling your secrets without page faults:
Stealthy page table-based attacks on enclaved execution.
In
Proceedings of the 26th USENIX Security Symposium (2017),
SEC’17, pp. 1041–1056.
[68] WAHBE, R., LUCCO, S., ANDERSON, T. E., AND GRAHAM,
In Proceedings
S. L. Efﬁcient software-based fault isolation.
of the 14th ACM Symposium on Operating Systems Principles
(1993), SOSP’93.
[69] WANG, W., CHEN, G., PAN, X., ZHANG, Y., WANG, X.,
BINDSCHAEDLER, V., TANG, H., AND GUNTER, C. A. Leaky
cauldron on the dark land: Understanding memory side-channel
hazards in SGX. In Proceedings of the 2017 ACM Conference
on Computer and Communications Security (2017), CCS’17,
pp. 2421–2434.
[70] WANG, Y., FERRAIUOLO, A., ZHANG, D., MYERS, A. C.,
AND SUH, G. E. SecDCP: Secure dynamic cache partitioning
In Proceedings of the
for efﬁcient timing channel protection.
53rd Annual Design Automation Conference (2016), DAC’16,
pp. 74:1–74:6.
[71] WANG, Z., AND LEE, R. B. New cache designs for thwarting
software cache-based side channel attacks. In Proceedings of the
34th Annual International Symposium on Computer Architecture
(2007), ISCA’07, pp. 494–505.
[72] WHEELER, D. A. SLOCCount Version 2.26, 2004.
[73] XU, Y., CUI, W., AND PEINADO, M. Controlled-channel at-
tacks: Deterministic side channels for untrusted operating sys-
tems. In Proceedings of the 2015 IEEE Symposium on Security
and Privacy (2015), pp. 640–656.
[74] YAN, M., GOPIREDDY, B., SHULL, T., AND TORRELLAS, J.
Secure hierarchy-aware cache replacement policy (SHARP): De-
fending against cache-based side channel atacks. In Proceedings
of the 44th Annual International Symposium on Computer Archi-
tecture (2017), ISCA’17, pp. 347–360.
[75] YANG, J., AND SHIN, K. G. Using hypervisor to provide data
secrecy for user applications on a per-page basis. In Proceedings
of the 4th ACM International Conference on Virtual Execution
Environments (2008), VEE’08, pp. 71–80.
[76] YAROM, Y., AND FALKNER, K. FLUSH+RELOAD: A high reso-
lution, low noise, L3 cache side-channel attack. In Proceedings of
the 23rd USENIX Security Symposium (2014), SEC’14, pp. 719–
732.
[77] ZHANG, D., WANG, Y., SUH, G. E., AND MYERS, A. C. A
hardware design language for timing-sensitive information-ﬂow
security. In Proceedings of the 20th International Conference on
Architectural Support for Programming Languages and Operat-
ing Systems (2015), ASPLOS’15, pp. 503–516.
[78] ZHANG, Y., JUELS, A., REITER, M. K., AND RISTENPART,
T. Cross-VM side channels and their use to extract private keys.
In Proceedings of the 2012 ACM Conference on Computer and
Communications Security (2012), CCS’12, pp. 305–316.
[79] ZHANG, Y., JUELS, A., REITER, M. K., AND RISTENPART, T.
Cross-tenant side-channel attacks in PaaS clouds. In Proceedings
of the 2014 ACM Conference on Computer and Communications
Security (2014), CCS’14, pp. 990–1003.
[80] ZHOU, Z., REITER, M. K., AND ZHANG, Y. A software ap-
In Pro-
proach to defeating side channels in last-level caches.
ceedings of the 2016 ACM Conference on Computer and Com-
munications Security (2016), CCS’16, pp. 871–882.
1458    27th USENIX Security Symposium
USENIX Association