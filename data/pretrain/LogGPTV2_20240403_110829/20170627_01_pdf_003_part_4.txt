A clustering algorithm will hold the mapping between nodes and pages. In this context,
weassumethatthenodesizeissmallerthanorequaltothepagesize. Hencetheproblem
transformstolockingatafinergranularity. Treatingnodesclusteredinpagesasrecords,
granularlocks(GrayandReuter,1993)areused. TherecoverytechniqueusedinKornacker
etal. (1998)isdirectlyapplicabletoSP-GiST.
6. NodeclusteringinSP-GiST
Nodeclusteringmeanschoosingthegroupofnodesthatwillresidetogetherinthesamedisk
page. Consideringphysicalstorageofthetreenodes,adirectandsimpleimplementation
ofanodeistoassignadiskpageforeachnode. However,forverysparsenodes,thissimple
assignment will not be efficient for database use. We provide to the user a default node
clusteringmethodthatisshowntoperformwellinthedynamiccase(Diwanetal.,1996).
However,weallowtheusertooverridethedefaultclusteringmethodandprovideadifferent
nodeclusteringpolicythatismoresuitableforthetypeandnatureoftheoperationstobe
performedontheconstructedindex. ThiswillenhancethequeryresponsetimeofSP-GiST.
WeproposetheinterfacemethodClusterforthispurpose.
Introducing new nodes in the tree structure, e.g., due to insertions, will internally in-
vokethedynamicclusteringalgorithmdefinedinClustertoreconstructthetreediskpage
structureandreflectthechange. However,forunexperiencedusersorfortypicaldatabase
applications,SP-GiSThasadefaultnodeclusteringalgorithmthatachievesminimumheight
andhenceminimumI/Oaccess. ThedynamicclusteringalgorithminDiwanetal. (1996)
isagoodclusteringalgorithmandweuseitasourdefaultinSP-GiST.Thepseudocode
andabriefoutlineoftheclusteringalgorithmisgiveninAppendixA.
The user can choose other clustering algorithms that reflect the application semantics,
speciallyfornon-traditionaldatatypesasinmultimediaorvideodatabases. Somealterna-
tivesare: (1)Fill-FactorClustering: Triestokeepeachpagehalf-fullforspaceutilization
SP-GiST 235
Figure10. EffectofBucketSizeonthemaximumpathlengthandnumberofusedpagesinthetriefordifferent
settingsofPathShrink.
efficiency. (2) Deep Clustering: Chooses the longest linked subtree from the collection
of page nodes to be stored together in the same page. This clustering method will en-
hance performance for depth-first traversal of trees. (3) Breadth Clustering: Chooses
the maximum number of siblings of the same parent to be stored together in the same
page.
236 AREFANDILYAS
Figure11. EffectofBucketSizeonthemaximumpathlengthandnumberofusedpagesinthequadtreefor
differentsettingsofPathShrink.
7. Implementationandexperimentalresults
WeimplementedSP-GiSTusingC++onSunOS5.6(Sparc). Asaproofofconcept,using
SP-GiST,weimplementedtheextensionsforsomedatastructuresnamely,theMXquadtree,
thePRquadtree,thetrie,andthePatriciatrie. Theimplementationhasproventhefeasibility
ofrepresentingspace-partitioningtreesusingtheinterfaceproposedbySP-GiSTandthe
settingsinthetablesinSection3.3. Weperformedexperimentsonvarioussettingsofthe
tunableinterfaceparameters;BucketSizeandPathShrink. Inourimplementationweadopt
SP-GiST 237
theminimalheightclusteringtechniqueinDiwanetal. (1996). Resultsshowthatapplying
thisclusteringtechniquereducesthepathlengthintermsofpagessignificantly.
As explained in Section 3.1, the interface parameter PathShrink can take one of three
values;“NeverShrink”,“LeafShrink”,or“TreeShrink”. Forthetrie,settingPathShrinkto
“NeverShrink”willhavetheeffectofrealizingtheoriginaltrie,wheresplittingisperformed
tothemaximumresolutionofthespace,leadingtoalongsparsetree. SettingPathShrink
to“LeafShrink”willrealizeacommonvariantofthetriewheredatacanbeputinthefirst
availablenode. Ontheotherhand,ifPathShrinkissetto“TreeShrink”,itwillrealizethe
Patriciaimplementationofthetriewherenosingle-arcnodesareallowed.
Figure10givestheeffectofthisparameteronthetriedatastructureforvarioussettings
ofBucketSizeforadatasetof10000recordswith“string”keys. Asexpected, forthetrie
and the Patricia trie, the path length and the number of pages improve as the bucket size
increasessincelesssplittingtakesplace. Ontheotherhand,thebucketsizedoesnothavean
effectontheoriginaltrie. Inthiscase,splittingwilltakeplacenotbecauseofthebucket
sizelimitbuttodecomposethespacetothemaximumresolution. Inthecaseoftheoriginal
trie,eachrecordwillfallinasinglenoderegardlessofthesettingofthebucketsize.
For the quadtree, the same argument holds. Experimental results for point datasets of
10000pointsaregiveninfigure11. Inthiscase,settingPathShrinkto“NeverShrink”will
havetheeffectofrealizingtheMXquadtreewhilesettingitto“LeafShrink”willrealize
thePRquadtreewheredatacanbeputinthefirstavailablenode. Experimentswithsetting
PathShrinkto“TreeShrink”showtherealizationofanothervariantofquadtree,whereall
white nodes are eliminated (Samet, 1990b), making it more attractive for databases and
solvingtheproblemoflongdegeneratequadtreeswhentheworkloadishighlyskewed.
8. Conclusions
SP-GiSTisageneralizedspace-partitioningtreeimplementationofawiderangeoftreedata
structuresthatarenotI/O-optimizedfordatabases. Thismakesitpossibletohavesingle
tree index implementation to cover various types of trees that suit different applications.
Emerging database applications will require the availability of various index structures
duetotheheterogeneouscollectionofdatatypestheydealwith. SP-GiSTisaninteresting
choiceformultimediadatabases,spatialdatabases,GIS,andothermoderndatabasesystems.
WehaveshownhowtoaugmentSP-GiSTwithparametersandmethodsthatwillenablethe
coverageofthisclassofspace-partitioningtrees. Clusteringmethodswerealsoaddressed
torealizetheuseofthesestructuresinpracticeinnon-traditionaldatabaseapplications.
Recovery and concurrency for SP-GiST are addressed to enable the realization of SP-
GiSTincommercialdatabasesystems. ExperimentsprovedtheconceptofSP-GiSTand
providedinsightontheeffectofthetunableinterfaceparametersonthetreestructureand
performance.
AppendixA:Minimumheightclusteringalgorithm
TheclusteringalgorithminDiwanetal.(1996)re-clustersthetreenodesintodiskpages
afterupdatestoanalreadyclusteredstate,andhenceisdynamic,andguaranteesminimal
238 AREFANDILYAS
heightmappingafterdeletingorinsertinginthetree. Thepseudocodeofthealgorithmis
giveninTableA.1. Thealgorithmbeginsbyremovingalldeletednodesfromthediskpages.
Allnewnodesoraffectedrootsofsubtreesarekeptinasetofaffectednodes. Processingall
theaffectednodesstartsbottom-up(nonodeisprocesseduntilallitschildrenareprocessed).
TableA.1. Minimumheightclusteringalgorithm.
1. PROCEDUREReCluster-BottomUp(TreeNoderoot)
2. S={};
3. FOReachnodenindelete-list(Listofdeletednodes)DO
4. Removenfromitscurrentpage
5. IFnisthelastnodeinthepage
6. THENdeletethepage
7. decluster(root)
8. /*Sisnowthesetofnodesthatareaffected*/
9. LOOPWHILEtherearenodesinSthatarenotyetprocessed
10. ChooseanaffectednodePthatiseitheraleafor
11. allofwhosechildrenareeithernotinSorhavebeenprocessed
12. process-node(P)
1. PROCEDUREdecluster(noden)
2. addntoS
3. IF(nisnotanewinsertednode)THEN
4. removenfromitscurrentpage
5. IFnisthelastnodeinthepage
6. THENdeletethepage
7. FOReachchildnlofnDO
8. IF(n1isanewinsertednodeorifthesubtreefromn1ismodified)
9. THENdecluster(n1)
10. ELSE
11. IF(nlisinthesamepageasn)
12. THENmovenlandallitsdescendantsinthesamepageasntoanewpage
1. PROCEDUREprocess-node(TreeNodeP)
2. IFPisaleafnode
3. THENcreateanewpageCcontainingnodeP
4. ELSELetP1···Pn,bethechildrenofP
5. LetC1···CnbethepagescontainingP1···Pn,respectively
6. LetPi1···Pim,bethechildrenamongtheabovewhosepageheightisthegreatest
7. IFnodePandthecontentsofthepagesCil···Cimcanbemergedin1page
8. THENmergethecontentsofCil···Cim,intoanewpageC
9. deleteCi1···Cim
10. ELSEcreateanewpageCcontainingonlyP
SP-GiST 239
Thealgorithmtriestoputthelongestpathofnodestogetherinthesamepage. Theauthors
in Diwan et al. (1996) have shown that the algorithm achieves minimal height mapping.
Theysuggestedsomeheuristicsofmergingsparsepagestoachieveminimumfillfactorof
atleast50%.
References
Aref,W.G.,Barbara´,D.,andVallabhaneni,P.(1995).TheHandwrittenTrie:IndexingElectronicInk.InProceed-
ingsofSIGMOD’95,SanJose,California.
Barclay,T.,Gray,J.,andSlutz,D.(2000).MicrosoftTerraserver: ATpatialDataWarehouse.InProceedingsof
SIGMOD’00,Dallas,TX.
Bayer,R.(1997).TheUniversalB-TreeforMultidimensionalIndexing: GeneralConcepts.InLectureNotesin
ComputerScience,Vol.1274.Berlin:Springer-Verlag.
Beckmann,N.,Kriegel,H.P.,Schneider,R.,andSeeger,B.(1990).TheR*-Tree: AnEfficientRobustAccess
MethodforPointsandRectangles.SIGMODRecord,19(2).
Bentley,J.L.(1975).MultidimensionalBinarySearchTreesusedforAssociativeSearching.Communicationsof
theACM,19,509–517.
Berchtold,S.,Boehm,C.,andKriegel,H.-P.(1998).ImprovingtheQueryPerformanceofHigh-DimensionalIndex
StructuresbyBulkLoadOperations.InLectureNotesinComputerScience,Vol.1377.Berlin:Springer-Verlag.
Brinkhoff,T.,Kriegel,H.-P.,andSeeger,B.(1996).ParallelProcessingofSpatialJoinsusingR-Trees.InPro-
ceedingsofICDE’96,NewOrleans,Louisiana.
Chakrabarti,K.andMehrotra,S.(1998).DynamicGranularLockingApproachtoPhantomProtectioninR-Trees.
InProceedingsofICDE’98,Orlando,Florida,USA(pp.446–454).
Chakrabarti,K.andMehrotra,S.(1999a).EfficientConcurrencyControlinMultidimensionalAccessMethods.
InProceedingsofSIGMOD’99,Philadephia,Pennsylvania,USA(pp.25–36).
Chakrabarti,K.andMehrotra,S.(1999b).TheHybridTree: AnIndexStructureforHighDimensionalFeature
Spaces.InProceedingsofICDE’99,Sydney,Australia.
Oracle Corporation. (1999). Oracle Spatial (Data Sheet). http://www.oracle.com/database/ documents/spatial-
ds.pdf.
de la Briandais, R. (1959). File Searching using Variable Length Keys. In Proceedings of the Western Joint
ComputerConference(pp.295–298).
DeWitt, D.J., Kabra, N., Luo, J., Patel, J.M., andYu, J.-B.(1994).Client-ServerParadise.InProceedingsof
VLDB’94,Santiago,Chile(pp.558–569).
Diwan,A.A.,Rane,S.,Seshadri,S.,andSudarshan,S.(1996).ClusteringTechniquesforMinimizingExternal
PathLength.InProceedingsofVLDB’96,Mumbai,India(pp.342–353).
Esperanca,C.andSamet,H.(1996).SpatialDatabaseProgrammingusingSand.InProceedingsoftheSeventh
InternationalSymposiumonSpatialDataHandling.
Eswaran,K.P.,Gray,J.N.,Lorie,R.A.,andTraiger,I.L.(1976).TheNotionsofConcurrencyandPredicateLocks
inaDataBaseSystem.CommunicationsoftheACM,19(11).
Faloutsos,C.andGaede,V.(1996).Analysisofn-DimensionalQuadtreesusingtheHausdorffFractalDimension.
InProceedingsofVLDB’96(pp.40–50).
Faloutsos,C.,Jagadish,H.V.,andManolopoulos,Y.(1997).Analysisofthen-DimensionalQuadtreeDecompo-
sitionforArbitraryHyperectangles.TKDE,9(3),373–383.
Finkel, R.A. and Bentley, J.L. (1974). Quad Trees: A Data Structure for Retrieval on Composite Key. Acta
Informatica,4(1),1–9.
Fredkin,E.(1960).TrieMemory.CommunicationsoftheACM,3,490–500.
Gaede,V.andGunther,O.(1998).MultidimensionalAccessMethods.ACMComputerSurveys,30(2),170–231.
Gargantini,I.(1982).AnEffectiveWaytoRepresentQuadtrees.CommunicationsACM,25(12),905–910.
Gray,J.N.(1978).NotesonDataBaseOperatingSystems.InR.Bayer,R.M.Graham,andG.Seegmu¨ller(Eds.),
LNCS,‘OperatingSystems,anAdvancedCourse’,(Heidelberg,FRGandNewYorkNY,USA:SpringerVerlag,
Vol.60.
240 AREFANDILYAS
Gray,J.N.andReuter,A.(1993).TransactionProcessing:ConceptsandTechniques.DataManagementSystems.
SanMateo,CA:MorganKaufmannPublishers.
Gu¨ting,R.H.(1994).AnIntroductiontoSpatialDatabaseSystems.VLDBJournal,3(4),357–399.
Guttman,A.(1984).R-Trees:ADynamicIndexStructureforSpatialSearching.InProceedingsofSIGMOD’84
(pp.47–57).
Hellerstein, J.M., Naughton, J.F., and Pfeffer, A. (1995). Generalized Search Trees for Database System. In
ProceedingsofVLDB’95.
Hellerstein,J.M.andPfeffer,A.(1994).TheRD-Tree:AnIndexStructureforSets.TechnicalReport,University
ofWisconsinComputerScience.
Kedem,G.(1982).Thequad-CIFTree: ADataStructureforHierarchicalon-lineAlgorithms.InACMIEEE
NineteenthDesignAutomationConferenceProceedings,LosAlamitos,CA,USA(pp.352–357).
Klinger,A.(1971).PatternandSearchStatistics.InS.Rustagi(Ed.),OptimizingMethodsinStatistics(pp.303–
337).
Knuth,D.E.(1973).TheArtofComputerProgramming,Vol.3,SortingandSearching.Reading,MA:Addison-
Wesley.
Kornacker,M.andBanks,D.(1995).High-ConcurrencyLockinginR-Trees.InProceedingsofVLDB’95,Zurich,
Switzerland.
Kornacker,M.,Mohan,C.,andHellerstein,J.M.(1998).ConcurrencyandRecoveryinGeneralizedSearchTrees.
ProceedingsofSIGMOD’98(pp.62–72).
Lin,K.-I.,Jagadish,H.V.,andFaloutsos,C.(1994).TheTV-Tree: AnIndexStructureforHigh-Dimensional
Data.VLDBJournal,3(4),517–542.
Morrison,D.R.(1968).PATRICIA—PracticalAlgorithmtoRetrieveCodedinAlphanumeric.J.Assoc.Comput.
Mach.,15(4),514–534.
Nelson,R.C.andSamet,H.(1986).AConsistentHierarchicalRepresentationforVectorData.ComputerGraphics,
20(4),197–206.SIGGRAPH’86Proceedings.
Nievergelt,J.,Hinterberger,H.,andSevcik,K.(1984).TheGridFile: AnAdaptableSymmetricMulti-KeyFile
Structure.ACMTransactionsonDatabaseSystems,9(1),38–71.
Orenstein,J.A.(1982).MultidimensionalTriesusedforAssociativeSearching.InformationProcessingLetters,
14(4),150–157.
Orenstein,J.A.andManola,F.(1988).PROBESpatialDataModelingandQueryProcessinginanImageDatabase
Application.IEEETransactionsonSoftwareEngineering,14(5),611–629.
Papadias,D.,Mamoulis,N.,andDelis,V.(1998).AlgorithmsforQueryingbySpatialStructure.InProceedings
ofVLDB’98,NewYorkCity,NewYork,USA(pp.546–557).
Samet,H.(1990a).ApplicationsofSpatialDataStructures.Reading,MA:Addison-Wesley.
Samet,H.(1990b).TheDesignandAnalysisofSpatialDataStructure.Reading,MA:Addison-Wesley.
Samet,H.andWebber,R.E.(1985).StoringaCollectionofPolygonsusingQuadtrees.ACMTransactionson
Graphics,4(3),182–222.
Seeger,B.andKriegel,H.-P.(1990).TheBuddy-Tree: AnEfficientandRobustAccessMethodforSpatialData
BaseSystems.InProceedingsofVLDB’90,Queensland,Australia.
Sellis,T.,Roussopoulos,N.,andFaloutsos,C.(1987).TheR+-Tree: ADynamicIndexforMulti-Dimensional
Objects.InProceedingsofVLDB’87,Brighton,UK.
Sellis,T.K.,Roussopoulos,N.,andFaloutsos,C.(1997).MultidimensionalAccessMethods:TreesHaveGrown
Everywhere.InProceedingsofVLDB’97(pp.13–14).
Szalay,A.,Kunszt,P.,Thakar,A.,Gray,J.,Slutz,D.,andBrunner,R.(2000).DesigningandMiningMulti-terabyte
AstronomyArchives:TheSloanDigitalSkySurvey.InProceedingsofSIGMOD’00,DallasTX(pp.451–462).
Tanimoto,S.andPavlidis,T.(1975).AHierarchicalDataStructureforPictureProcessing.ComputerGraphics
andImageProcessing,4(2),104–119.