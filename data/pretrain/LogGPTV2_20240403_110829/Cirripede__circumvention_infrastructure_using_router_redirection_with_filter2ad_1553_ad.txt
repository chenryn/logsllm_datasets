.
c
a
r
F
 1
 0.8
 0.6
 0.4
 0.2
 0
frac dests=0.00005
frac dests=0.0001
frac dests=0.0005
frac dests=0.001
frac dests=0.002
frac dests=0.012
R
D
a
h
c
a
e
r
n
a
c
t
a
h
t
s
c
r
s
.
c
a
r
F
 1
 0.8
 0.6
 0.4
 0.2
 0
num alexa dests=8
num alexa dests=14
num alexa dests=29
num alexa dests=64
num alexa dests=124
 0
 0.004  0.008  0.012  0.016
 0.02
 0
 2
 4
 6
 8
 10  12  14  16
 0
 2
 4
 6
 8
 10  12  14  16
Fraction of ASes containing DRs
(a)
Num. Tier 1s
(b)
Num. Tier 1s
(c)
Figure 5: Fraction of sources that can utilize the system (i.e., that can discover a path that traverses a
DR), when DRs are randomly placed (a) across all ASes (b) only tier-1 ASes, and (c) when the warden ISP
attempts to block a randomly-selected fraction of most-popular web sites by Alexa Internet rank.
frac dests=0.001
frac dests=0.002
frac dests=0.005
frac dests=0.01
frac dests=0.02
frac dests=0.03
frac dests=0.05
s
e
b
o
r
p
.
m
u
N
 500
 450
 400
 350
 300
 250
 200
 150
 100
 50
 0
s
e
b
o
r
p
.
m
u
N
 12
 10
 8
 6
 4
 2
 0
frac dests=0.00005
frac dests=0.0001
frac dests=0.0005
frac dests=0.001
frac dests=0.002
frac dests=0.012
 0
 0.002  0.004  0.006  0.008  0.01  0.012  0.014  0.016  0.018
 0
 2
 4
 6
 8
 10
 12
 14
 16
Fraction of ASes containing DRs
(a)
Num. Tier 1s
(b)
Figure 6: Average number of probes source needs to send before discovering a DR, when DRs are randomly
placed (a) across all ASes (b) only tier-1 ASes.
make sure that suﬃcient DRs are deployed to “cover” most
clients. However, for economic, business, and security con-
siderations, the provider would like the number of DRs to
be small, and deployed at trust-worthy ISPs or in locations
under the provider’s control.
To explore deployment considerations in practice, we per-
formed a simulation study. We constructed a simple path-
level simulator that reads in the Internet AS-level graph,
allows us to place the system components of the Cirripede
design at various ASes, and computes shortest policy-safe
paths. We used the most recent CAIDA AS-level topology
(sampled yearly, most recent sample on January 11, 2011).
To compute shortest paths, we applied Gao-Rexford policies
to the graph based on CAIDA’s inferred AS-relationships.
We performed two key experiments:
Fraction of clients that can utilize the network (Fig-
ure 5): First, we studied how many clients (source hosts)
in the Internet would be able to join Cirripede, while vary-
ing the extensiveness of DR deployment. Figure 5a shows
this result under the assumption that a random subset of
ASes in the Internet act as DRs. We also vary the frac-
tion of overt destinations the client is allowed to probe (in
practice, the client may wish to limit the set of overt des-
tinations probed, to reduce potential suspicion). We ﬁnd
that even if only 5% of overt destinations are allowed to be
probed, then 0.4% of ASes deploying DRs is suﬃcient to
enable all hosts in the Internet to join the Cirripede net-
work.
In practice, fewer ASes may suﬃce, if cooperation
from ASes located near the repressive country/company are
In addition, if DR functionality is located near
available.
the Internet core, fewer ASes suﬃce, as larger numbers of
paths traverse these ASes. To study this, we evaluated per-
formance under the assumption that only tier-1 ASes act
as DRs, as shown in Figure 5b. Here we ﬁnd that even
if only one tier-1 AS deploys Cirripede, 97% of clients can
use Cirripede, and this number increases to 100% if two
tier-1 ASes participate. Since hosts that communicate often
via Cirripede may appear suspicious to the warden ISP by
contacting randomly-placed destinations, we repeated our
study placing destinations according to the Alexa Internet
Top Global Sites ranking (Figure 5c), and observed similar
results (for example, if two tier-1 ISPs run Cirripede, and
hosts are allowed to probe among the top-30 most popular
sites, 100% of hosts are able to join Cirripede). Here, the
client selects among the top-k most popular Alexa-ranked
sites (each line in Figure 5c corresponds to a diﬀerent value
of k). Finally, Figure 5c shows the fraction of Alexa-ranked
top web sites the warden ISP would have to block to prevent
a host from joining Cirripede. We ﬁnd that if hosts are al-
lowed to probe the top 1000 Alexa-ranked sites, the warden
would have to block more than 95% of these sites to be able
to block hosts. We also note that if hosts are aware of which
sites are blocked (e.g., if their join fails), they could simply
continue to probe more sites.
Overhead required to join the network (Figure 6):
To join the network, the client must discover a path to an
overt destination that traverses a DR. However, the set of
ASes containing DRs may wish to keep the fact that they
are participating in Cirripede a secret. Hence, the client
may have to “probe” multiple potential overt destinations
195before it can discover a path that traverses a DR. To speed
joining, we would like the number of probes required to join
the network to be low. Figure 6a shows the number of probes
required under the assumption that a random subset of ASes
in the Internet act as DRs. Here, we ﬁnd that even if only
5% of overt destinations are allowed to be probed, the source
only requires ten probes before discovering a path contained
a DR. Under the assumption that DRs are only deployed at
tier-1 ASes (Figure 6b), this value reduces to less than two.
This happens because most Internet paths traverse tier-1
ASes, meaning the client usually ﬁnds a path through the
selected tier-1 on the ﬁrst probe.
7. RELATED WORK
7.1 Covert Channels
Covert channels provide a means for unobservable com-
munication. These channels can be classiﬁed into covert
timing channels and covert storage channels. Timing chan-
nels send information by embedding it inside the timing of
a stream of packets [11, 49]. The use of timing channels
can sometimes be detected using statistical tests by notic-
ing the modiﬁcations they make to the ordinary distribution
of packet timings [7, 10, 23]. To address this, newer channels
use various models to generate timings with a target distri-
bution [24, 29, 35, 48, 60]. However, it may nevertheless be
possible to detect the use of such channels if the models do
not capture all of the statistical properties of regular traf-
ﬁc; for example, Zander et al. [60] detect the use of covert
channels that use i.i.d. traﬃc models [24, 48] by exploiting
inter-packet timing correlations present in regular traﬃc.
Covert storage channels use some packet ﬁelds that are
either unused or pseudo-random [25, 27, 41, 46]. Murdoch
and Lewis [41] analyze a number of covert storage channels
in TCP/IP; they show that a number of channels can be
detected because the packet ﬁelds diﬀer signiﬁcantly from
those generated by a regular TCP/IP stack. They also
propose new covert channels that use TCP initial sequence
numbers in a manner that is indistinguishable from either a
Linux or an OpenBSD implementation. We use their chan-
nel in our registration protocol, see Section 3.1. Other re-
search suggests the use of the IP header TTL ﬁeld [59],
IP addresses [26], TCP timestamp [25], and the order of
the packets [22]. Lucena et al. identiﬁed a number of IPv6
header ﬁeld that can be used for covert communication [36],
and application-layer protocols, such as HTTP or DNS, can
also be used for covert communications [5, 50].
The aforementioned channels typically have limited ca-
pacities: storage channels typically send a small number
of bits per packet and timing channels likewise are sub-
ject to capacity bounds [42, 48]. Fortunately, the growing
prevalence of end-to-end encryption creates a possibility for
higher-bandwidth covert communication, since an observer
not in possession of a secret key cannot learn the contents
of an encrypted session.
In particular, Cirripede captures
HTTPS [45] connections to innocent-looking destinations
and uses them for tunneling covert communication. Note
that an observer may be able to detect diﬀerences in traﬃc
patterns, such as packet sizes and timings, in tunneled traf-
ﬁc, so to ensure full unobservability, techniques to morph the
traﬃc patterns should be used [47, 56]; we leave a full inves-
tigation of the application of these techniques to Cirripede
to future work.
7.2 Blocking Circumvention
Censorship systems, such as the Great Firewall of China,
use IP address blocking as their ﬁrst line of defense [33]; a
natural circumvention strategy is, therefore, to connect to
forbidden destinations via proxies. This approach is used
by the UltraSurf [2] and Psiphon [30] services; likewise, the
Tor anonymous communication network [17] uses bridges
that act as proxies for clients that cannot connection to Tor
directly [16]. A key problem with this approach is how to
distribute the IP addresses of proxies to users without their
falling into the hands of the censors [20,38,39,51]; over time,
it is expected that the censors can enumerate all proxy IP
addresses [40], allowing them to block new users as well as
identify past users in traces.
Infranet [19] attempts to disguise communication between
the client and the circumvention proxy as a normal web
browsing session: a client uses a covert channel based on
the sequence of HTTP requests to communicate what true
destination it wants to reach; the proxy then fetches the
data and uses steganography to embed it inside images that
it serves back to the client. However, as with other proxy
approaches, it relies on the censor not knowing the proxy
address. Burnett et al. propose Collage [19], which avoids
this problem by using sites that share user-generated con-
tent, such as images on flickr.com for carrying forbidden
content. Client requests are, likewise, sent via such images,
improving unobservability, but signiﬁcantly reducing the in-
teractive performance of the client. A second problem is that
a censor might discover which sites are used for such com-
munication and block them entirely; for example, Burnett
et al. consider sending user generated content via Twitter,
which has already been blocked by several countries.
A key diﬀerence between Cirripede and the above proxy-
based approaches is that, in our case, the proxy is embed-
ded within the network itself, and blocking individual web
sites is ineﬀective against Cirripede. Concurrently with our
work, Wustrow et al. [57] and Karlin et al. [31] proposed cir-
cumvention systems—Telex and Decoy routing—that share
this high-level strategy, though make slightly diﬀerent de-
sign choices. Unlike Cirripede, Telex and Decoy routing do
not use a registration protocol; instead, clients insert a sig-
nal directly into a TLS handshake. This strategy requires
the service to monitor all port 443 traﬃc, including the pay-
load, and reconstruct the underlying TCP sessions. In Cir-
ripede, on the other hand, the registration server monitors
only packet headers of TCP SYN packets, and the service
proxy monitors only traﬃc from registered clients. This re-
sults in a signiﬁcant reduction in traﬃc volumes: using two
CAIDA traces gathered in March 2011 [32], we found that
the volume (in IP datagram length in bytes) of SYN packets
for all ports was only 4–7% that of port 443 traﬃc. On the