从而在诸如‘文件channel’的一些channel上提高效率。如果handler抛出异常，这个HTTP的响应状态码是400。如果channel满了或者无法发送Event到channel，此时会返回HTTP状态码503（服务暂时不可用）。
在一个POST请求中发送的所有 Event 视为一个批处理，并在一个事务中插入到
channel。
这个Source是基于Jetty 9.4实现的，并且提供了配置Jetty参数的能力。
+----------------------+----------------------+----------------------+
| 属性                 | 默认值               | 解释                 |
+======================+======================+======================+
| **channels**         | \--                  | 与Source绑定的cha    |
| **type**             |                      | nnel，多个用空格分开 |
|                      |                      | 组件类型，这个是：   |
|                      |                      | `http`               |
+----------------------+----------------------+----------------------+
| **port**             | \--                  | 要监听的端口         |
+----------------------+----------------------+----------------------+
| bind                 | 0.0.0.0              | 要监听               |
|                      |                      | 的hostname或者IP地址 |
+----------------------+----------------------+----------------------+
| handler              | `o                   | 所使                 |
|                      | rg.apache.flume.sour | 用的handler，需填写  |
|                      | ce.http.JSONHandler` | handler的全限定类名  |
+----------------------+----------------------+----------------------+
| handler.\*           | \--                  | h                    |
|                      |                      | andler的一些属性配置 |
+----------------------+----------------------+----------------------+
| selector.type        | replicating          | 可                   |
| selector.\*          |                      | 选值：`replicating`  |
|                      |                      | 或 `multiplexing`    |
|                      |                      | ，分别表示：         |
|                      |                      | 复制、多路复用       |
|                      |                      | cha                  |
|                      |                      | nnel选择器的相关属性 |
|                      |                      | ，具体属性根据设定的 |
|                      |                      | *selector.type*      |
|                      |                      | 值不同而不同         |
+----------------------+----------------------+----------------------+
| interceptors         | \--                  | 该source所使用的拦   |
| interceptors.\*      |                      | 截器，多个用空格分开 |
|                      |                      | 拦截器相关的属性配   |
+----------------------+----------------------+----------------------+
| ssl                  | false                | 设置为 `true`        |
|                      |                      | 启用SSL加密，HTTP    |
|                      |                      | Sourc                |
|                      |                      | e强制不支持SSLv3协议 |
+----------------------+----------------------+----------------------+
| exclude-protocols    | SSLv3                | 指定不               |
|                      |                      | 支持的协议，多个用空 |
|                      |                      | 格分开，SSLv3不管是  |
|                      |                      | 否配置都会被强制排除 |
+----------------------+----------------------+----------------------+
| include-protocols    | \--                  | 可使用的SSL/TLS协议  |
|                      |                      | 的以空格分隔的列表。 |
|                      |                      | 最终                 |
|                      |                      | 程序启用的协议将是本 |
|                      |                      | 参数配置的协议并且排 |
|                      |                      | 除掉上面的排除协议。 |
|                      |                      | 如果本参数为空，则包 |
|                      |                      | 含所有受支持的协议。 |
+----------------------+----------------------+----------------------+
| e                    | \--                  | 不使用的密码         |
| xclude-cipher-suites |                      | 套件，多个用空格分隔 |
+----------------------+----------------------+----------------------+
| i                    | \--                  | 使用的密码套件，多   |
| nclude-cipher-suites |                      | 个用空格分隔。最终程 |
| keystore             |                      | 序使用的密码套件就是 |
| keystore-password    |                      | 配置的使用套件并且排 |
|                      |                      | 除掉上面的排除套件。 |
|                      |                      | SSL加密使用的Java    |
|                      |                      | keystore文           |
|                      |                      | 件路径，如果此参数未 |
|                      |                      | 配置就会默认使用全局 |
|                      |                      | 的SSL的配置，如果全  |
|                      |                      | 局的也未配置就会报错 |
|                      |                      | Java                 |
|                      |                      | keystore             |
|                      |                      | 的密码，如果此参数未 |
|                      |                      | 配置就会默认使用全局 |
|                      |                      | 的SSL的配置，如果全  |
|                      |                      | 局的也未配置就会报错 |
+----------------------+----------------------+----------------------+
| keystore-type        | JKS                  | Java keystore的类型. |
| QueuedThreadPool.\*  |                      | 可选值有 `JKS` 、    |
|                      |                      | `PKCS12` 作用在Jetty |
| HttpConfiguration.\* |                      | or                   |
| SslContextFactory.\* |                      | g.eclipse.jetty.util |
| ServerConnector.\*   |                      | .thread.QueuedThread |
|                      |                      | Pool上的一些特定设置 |
|                      |                      | 注意：至少要         |
|                      |                      | 给QueuedThreadPool配 |
|                      |                      | 置一个参数，QueuedTh |
|                      |                      | readPool才会被使用。 |
|                      |                      | 作用在Jetty          |
|                      |                      | org.eclipse.jetty.   |
|                      |                      | server.HttpConfigura |
|                      |                      | tion上的一些特定设置 |
|                      |                      | 作用在Jetty          |
|                      |                      | org.ec               |
|                      |                      | lipse.jetty.util.ssl |
|                      |                      | .SslContextFactory上 |
|                      |                      | 的一些特定设置（只有 |
|                      |                      | *ssl*                |
|                      |                      | 设置                 |
|                      |                      | 为true的时候才生效） |
|                      |                      | 作用在Jetty          |
|                      |                      | org.eclipse.jett     |
|                      |                      | y.server.ServerConne |
|                      |                      | ctor上的一些特定设置 |
+----------------------+----------------------+----------------------+
::: hint
::: title
Hint
:::
Flume里面很多组件都明确表示强制不支持SSLv3协议，是因为SSLv3协议的不安全，各大公司很早就表示不再支持了。
:::
弃用的一些参数
  属性               默认值   解释
  ------------------ -------- --------------------------------------------------------
  keystorePassword   \--      改用 *keystore-password* 。弃用的参数会被新的参数覆盖
  excludeProtocols   SSLv3    改用 *exclude-protocols* 。 弃用的参数会被新的参数覆盖
  enableSSL          false    改用 *ssl* ，弃用的参数会被新的参数覆盖
注意
Jetty的参数实际上是通过上面四个类里面的set方法来设置的，如果想知道这四个类里面都有哪些属性可以配置，请参考Jetty中关于这4个类的Javadoc文档
([QueuedThreadPool](https://www.eclipse.org/jetty/javadoc/jetty-9/org/eclipse/jetty/util/thread/QueuedThreadPool.html),
[HttpConfiguration](https://www.eclipse.org/jetty/javadoc/jetty-9/org/eclipse/jetty/server/HttpConfiguration.html),
[SslContextFactory](https://www.eclipse.org/jetty/javadoc/jetty-9/org/eclipse/jetty/util/ssl/SslContextFactory.html)
and
[ServerConnector](https://www.eclipse.org/jetty/javadoc/jetty-9/org/eclipse/jetty/server/ServerConnector.html)).
::: hint
::: title
Hint
:::
官方文档里面给出的四个类的Javadoc地址已经404了，现在的是我去eclipse官网找的，如果哪天这几个链接也失效了麻烦通知我一下，我再去更新。
:::
当给Jetty配置了一些参数的时候，组件参数优先级是高于Jetty的参数的（比如exclude-protocols
的优先级高于SslContextFactory.ExcludeProtocols），Jetty的参数均以小写字母开头。
配置范例：
``` properties
a1.sources = r1
a1.channels = c1
a1.sources.r1.type = http
a1.sources.r1.port = 5140
a1.sources.r1.channels = c1
a1.sources.r1.handler = org.example.rest.RestHandler
a1.sources.r1.handler.nickname = random props
a1.sources.r1.HttpConfiguration.sendServerVersion = false    # sendServerVersion是HttpConfiguration的参数，点击上面的文档链接就能找到了
a1.sources.r1.ServerConnector.idleTimeout = 300              # idleTimeout是ServerConnector的参数，点击上面的文档链接就能找到了
```
##### JSONHandler
这是HTTP
Source的默认解析器（handler），根据请求所使用的编码把http请求中json格式的数据解析成Flume
Event数组（不管是一个还是多个，都以数组格式进行存储），
如果未指定编码，默认使用UTF-8编码。这个handler支持UTF-8、UTF-16和UTF-32编码。json数据格式如下：
``` javascript
[{
  "headers" : {
             "timestamp" : "434324343",
             "host" : "random_host.example.com"
             },
  "body" : "random_body"
  },
  {
  "headers" : {
             "namenode" : "namenode.example.com",
             "datanode" : "random_datanode.example.com"
             },
  "body" : "really_random_body"
  }]
```
HTTP请求中设置编码必须是通过Content type来设置，application/json;
charset=UTF-8(UTF-8 可以换成UTF-16 或者 UTF-32)。
一种创建这个handler使用的json格式对象 org.apache.flume.event.JSONEvent
的方法是使用Google Gson 库的Gson#fromJson(Object, Type)
方法创建json格式字符串，这个方法的第二个参数就是类型标记，用于指定Event列表的类型，像下面这样创建：
``` java
Type type = new TypeToken>() {}.getType();
```
##### BlobHandler
默认情况下HTTPSource会把json处理成Event。作为一个补充的选项BlobHandler
不仅支持返回请求中的参数也包含其中的二进制数据，比如PDF文件、jpg文件等。这种可以接收附件的处理器不适合处理非常大的文件，因为这些文件都是缓冲在内存里面的。
  属性                    默认值      解释
  ----------------------- ----------- -----------------------------------------------------------------------------------
  **handler**             \--         这里填BlobHandler的全限定类名: `org.apache.flume.sink.solr.morphline.BlobHandler`
  handler.maxBlobLength   100000000   每次请求的最大缓冲字节数
#### Stress Source
StressSource 是一个内部负载生成Source的实现， **对于压力测试非常有用**
。可以配置每个Event的大小（headers为空）、也可以配置总共发送Event数量以及发送成功的Event最大数量。
::: hint
::: title
Hint
:::
它跟 [Sequence Generator Source](#sequence-generator-source)
差不多，都是用来测试用的。
:::
必需的参数已用 **粗体** 标明。
  属性                  默认值   解释
  --------------------- -------- ------------------------------------------------------------------
  **type**              \--      组件类型，这个是： `org.apache.flume.source.StressSource`
  size                  500      每个Event的大小。单位：字节（byte）
  maxTotalEvents        -1       总共会发送的Event数量
  maxSuccessfulEvents   -1       发送成功的Event最大数量
  batchSize             1        每次请求发送Event的数量
  maxEventsPerSecond    0        每秒生成event的速度控制，当给此参数设置为一个大于0的值时开始生效
配置范例：
``` properties
a1.sources = stresssource-1
a1.channels = memoryChannel-1
a1.sources.stresssource-1.type = org.apache.flume.source.StressSource
a1.sources.stresssource-1.size = 10240
a1.sources.stresssource-1.maxTotalEvents = 1000000
a1.sources.stresssource-1.channels = memoryChannel-1
```
#### Legacy Sources
Legacy
Sources可以让Flume1.x版本的Agent接收来自于Flume0.9.4版本的Agent发来的Event，可以理解为连接两个版本Flume的一个"桥"。接收到0.9.4版本的Event后转换为1.x版本的Event然后发送到
channel。0.9.4版本的Event属性（timestamp， pri， host， nanos，
etc）会被转换到1.xEvent的header中。Legacy Sources支持Avro和Thrift
RPC两种方式连接。具体的用法是1.x的Agent可以使用 avroLegacy 或者
thriftLegacy source，然后0.9.4的Agent需要指定sink的host和端口为1.x的
Agent。
::: note
::: title
Note
:::
1.x和0.9.x的可靠性保证有所不同。Legacy