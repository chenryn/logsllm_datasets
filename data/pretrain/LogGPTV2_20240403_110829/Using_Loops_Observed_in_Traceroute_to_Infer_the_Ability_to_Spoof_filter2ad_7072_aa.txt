# Title: Using Loops Observed in Traceroute to Infer the Ability to Spoof

## Authors:
- Qasim Lone
- Matthew J. Luckie
- Maciej Korczynski
- Michel van Eeten

### Affiliations:
1. Delft University of Technology, Delft, The Netherlands
   - Q.B.Lone@tudelft.nl
   - Maciej.Korczynski@tudelft.nl
   - M.J.G.vanEeten@tudelft.nl
2. University of Waikato, Hamilton, New Zealand
   - PI:EMAIL (Matthew J. Luckie)

## Abstract
Despite source IP address spoofing being a known vulnerability for over 25 years, and despite numerous efforts to highlight the issue, spoofing remains a prevalent attack method for redirection, amplification, and anonymity. To mitigate these attacks, network operators must ensure their networks filter packets with spoofed source IP addresses, a practice known as source address validation (SAV), ideally deployed at the network edge where traffic originates. This paper introduces a novel method that uses routing loops observed in traceroute data to infer inadequate SAV at the transit provider edge, where a provider fails to filter traffic that should not originate from the customer. Our approach does not require a vantage point within the customer network. We present and validate an algorithm that identifies, at Internet scale, which loops indicate a lack of ingress filtering by providers. Our analysis revealed 703 provider ASes that do not implement ingress filtering on at least one of their links for 1,780 customer ASes. Most of these findings are unique compared to existing methods such as the Spoofer and Open Resolver projects. By increasing the visibility of networks that allow spoofing, we aim to enhance the incentives for SAV adoption.

## 1. Introduction
Source IP address spoofing has been a known vulnerability for at least 25 years [6], and despite many efforts to address the problem (e.g., [7–9]), it remains a viable attack method for redirection, amplification, and anonymity. Notable examples include the 400 Gbps DDoS attack against Cloudflare in February 2014 [19], which used an amplification vector in some NTP implementations, and the 300+ Gbps attack against Spamhaus in March 2013, which exploited a DNS amplification vector [10]. While application-layer patches can mitigate some of these attacks [20], attackers continuously seek new vectors.

To defeat amplification and other IP spoofing-based threats, providers must filter incoming packets with spoofed source IP addresses, implementing Best Current Practice 38 (BCP 38) or source address validation (SAV). However, SAV suffers from misaligned incentives: the network that deploys SAV bears the cost, while the security benefits diffuse to all other networks. Despite this, SAV is widely supported in the community. Increasing the visibility of networks that have or have not adopted SAV can reduce the incentive problem by leveraging reputation effects and stakeholder pressure, making accurate measurement of SAV adoption crucial.

In this paper, we report on a new measurement technique based on an idea by Jared Mauch. This technique allows an external observer to use traceroute to infer the absence of filtering by a provider AS at a provider-customer interconnect. Our study makes the following five contributions:
1. We demonstrate that it is generally feasible for providers to deploy static ingress ACLs, as their customers rarely change address space.
2. We describe a scalable algorithm for accurately inferring the absence of ingress filtering from specific patterns in traceroute data.
3. We validate the algorithm's correctness using ground truth from seven network operators.
4. We demonstrate the utility of the algorithm by analyzing Internet-scale inferences.
5. We build a public website showing the provider-customer edges that imply the absence of filtering, along with actionable data for operators to deploy filtering.

## 2. Background on Ingress Filtering
The canonical documents describing ingress filtering methods for SAV are RFCs 2827 [11] and 3704 [5], known in the network operations and research communities as BCPs 38 and 84. BCP 38 outlines the basic idea: the source address of packets should be checked at the periphery of the Internet against a set of permitted addresses. For an access network, this check could be at the point of interconnection with a single customer; for an enterprise, this could be on their edge routers to their neighbors; and for a transit provider, this could be on the provider-edge router where a customer connects. For single-homed customers, a transit provider can discard packets that have a source address outside the set of prefixes the customer announces to the transit provider, using Strict or Feasible Reverse Path Forwarding (RPF). A router using Strict RPF will drop a packet if it arrived on a different interface than the router would choose when forwarding a packet to the packet’s source address; a router using Feasible RPF will consider all paths it could use to reach the source address, not just the best path.

BCP 84 discusses challenges in deploying ingress filtering on multi-homed networks. Both Strict and Feasible RPF are not always feasible if a customer is multi-homed and does not announce all of its prefixes to each neighbor router, as it might do for traffic engineering purposes. Instead, an operator might define a set of prefixes covering source addresses in packets the router will forward, known as an Ingress Access List (Ingress ACL). BCP 84 states that while ingress ACLs require manual maintenance if a neighbor acquires additional address space, they are “the most bulletproof solution when done properly” and the “best fit ... when the configuration is not too dynamic, ... if the number of used prefixes is low.”

## 3. Related Work
Testing a network’s SAV compliance typically requires a measurement vantage point inside or adjacent to the network, as the origin network of arbitrary spoofed packets cannot be determined [5]. The Spoofer project [7] allows volunteers to test their network’s SAV compliance using a custom client-server system, where the client sends spoofed packets in coordination with the server, and the server infers that the client can spoof if it receives these spoofed packets. However, the Spoofer project relies on volunteer support to run the client to obtain a view from a given network. In May 2016, CAIDA released an updated client [1] that operates in the background, automatically testing attached networks once per week, and whenever the system attaches to a network it has not tested in the previous week. The number of prefixes tested per month increased from approximately 400 in May 2016 to approximately 6,000 in December 2016 [1].

Jared Mauch developed the first technique to infer if a network had inadequate SAV without requiring a custom client-server system. As part of the Open Resolver Project [3], he observed DNS resolvers embedded in home routers forwarding DNS queries from his system with IPX to other resolvers, without rewriting the source IP address of the packet. These other resolvers returned the subsequent answer directly to IPX, rather than to the DNS resolver in the home router as they should have.

We emphasize that these methods are complementary, and no single technique can test SAV deployment for all networks.

## 4. Motivation for Ingress ACLs
As described in Section 2, the best place to deploy filtering is at the edge. However, not all edge networks have the technical ability or motivation to filter their own traffic. Transit providers, managed by skilled network operators who may already deploy defenses to prevent their customers from announcing inappropriate routes, represent another straightforward place to deploy ingress filtering. The provider-customer interconnect for an edge network is a key location for this.

[Figure 1: Fraction of ASes whose prefix announcements changed month-to-month]

[Figure 2: IPv4 and IPv6 ASes in August 2016]

---

This revised version aims to provide a more structured, clear, and professional presentation of the original text.