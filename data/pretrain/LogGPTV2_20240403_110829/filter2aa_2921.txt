Confidential to SEWORKS 
Copyright ©2013 SEWORKS Inc. All rights reserved. 
Android Hooking Attack 
SEworks 
Hong Brothers 
Minpyo Hong, Dongcheol Hong 
PI:EMAIL 
2 
•
SEWORKS Co., Ltd 
– SEworks is a company created by a hacker. 
– Main areas of mobile security, and Android, Windows App 
protected areas, such as obfuscation is mainly research.  
•
Minpyo Hong (Nick : Secret) 
– SEworks CEO(Chief Executive Officer) and WOWHACKER team 
founder/admin. 
•
Dongcheol Hong (Nick : hinehong) 
– SEworks CTO(Chief Technology Officer) and WOWHACKER team 
admin. 
3 
•
Kernel Hooking 
– Hooking using LKM Kernel module.  
•
Library Hooking 
– Android system library module hooking. 
1. KERNEL HOOKING 
Android Hooking Attack 
5 
•
Kernel Hooking 
– Most of Kernel rootkit using LKM (loadable kernel module)  
– Samsung's kernel source location "opensource.samsung.com“ 
– Look at the README.txt 
HOW TO BUILD KERNEL 2.6.35 FOR Sxxxxx 
1. Visit http://www.codesourcery.com/, download and install Sourcery G++ Lite 
2009q3-68 toolchain for ARM EABI. 
2. Extract kernel source and move into the top directory. 
3. Execute 'make aries_kor_defconfig'. 
4. Execute 'make' or 'make -j' where '' is the number of multiple jobs to be 
invoked simultaneously. 
5. If the kernel is built successfully, you will find following files from the top directory: 
6 
•
LKM module compile 
– Source file and Makefile put the same directory. 
– Using “make” 
– Gallaxy S example.  
obj-m += test.o 
all: 
        make -C /home/hinehong/sxxxxx/Kernel M=$(PWD) 
CFLAGS_MODULE=-fno-pic ARCH=arm 
CROSS_COMPILE=/home/hinehong/CodeSourcery/Sourcery_G++_
Lite/bin/arm-none-eabi- modules 
7 
•
LKM module compile 
– Install : insmod “Module name“ 
– View list : lsmod “Module name” 
– Delete : rmmod “Module name” 
•
init_module 
– Dynamic memory allocation function is kmalloc in kernel. 
8 
•
Sys_call_table 
– In Linux, the system call functions defined in sys_call_table. 
– /proc/kallsyms 
– System.map of the kernel source code 
9 
•
How to get the address of dynamically sys_call_table 
– Using vector_swi handler.  
– vector_swi of the system call handler function. 
– Defined at arch/arm/kernel/entry-common.S 
10 
•
How to get the address of dynamically sys_call_table 
– Inside the vector_swi, sys_call_table address can obtain. 
11 
•
How to get the address of dynamically sys_call_table 
– If get the address of sys_call_table, direct modification of the table 
can hooking existing syscall function. 
12 
•
What can we do? 
– "Write" on the hook "https" does not communicate general web 
packets can be intercepted. 
13 
•
What can we do? 
2. SYSTEM LIBRARY HOOKING 
Android Hooking Attack 
15 
•
Hooking 
– Can hooking android system library. 
– Related system key library hooking. 
– Target library is “/system/lib/libXt9core.so” 
16 
•
Hooking 
– In Arm architecture different Intel. 
– Intel breakpoint opcode such as 0xcc (int 3) in the software, ARM 
does not has breakpoint opcode. 
– SIGTRAP code must be use. 
17 
•
Hooking 
– breakpoint is two. 
18 
•
First 
– before the processkey function call. 
– Getting the g_WordSymbInfo address. 
– g_WordSymbInfo : after the processkey function call, data save 
address.  
– Setting breakpoint second. 
•
Second 
– When call the processkey function, next 4 byte memory.  
– Getting the g_WordSymbInfo data. 
– Setting breakpoint first.  
19 
•
Memory setting 
– device memory value is different. 
– before the processkey function call. 
– ProcessKey call address and find 4 byte size next instruction. 
20 
•
Process attach 
– Getting pid value for execute process attach. 
– Key process name like “android.inputmethod” in Gallaxy series 
device . 
21 
•
Getting function address 
– Real function address :  
– “Processkey” function address + library base 
address(/proc/PID/maps). 
22 
•
Hooking Start! 
– Save the two breakpoint opcode.  
– The reason is 2 breakpoint, continued hooking and getting key value 
before processkey function and next. 
23 
•
Hooking  
– Wait a event. 
24 
•
Hooking  
– Breakpoint address check. 
– PC (Program Counter)  
25 
•
Key status check  
– Gallexy : offset address “r0 + 0x14” has key status value.  
– Qwety code is 0x10709, 0x10912 
26 
•
Key value 
– Second breakpoint (processkey the line was called), g_WordSymbInfo 
key value are recorded. 
– Gallexy S : offset address “r0 + 0x30” has key value.  
– 0x30 : g_WordSymbInfo offset 
27 
•
Key value 
– Gallexy S2~3 : g_WordSymbInfo address in r1 register 
– 4byte data : g_WordSymbInfo + 0x4 
Confidential to SEWORKS 
Copyright ©2013 SEWORKS Inc. All rights reserved. 
28