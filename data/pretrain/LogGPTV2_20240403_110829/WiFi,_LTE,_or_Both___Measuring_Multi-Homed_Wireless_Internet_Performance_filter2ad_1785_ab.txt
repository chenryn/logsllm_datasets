108
92
84
76
56
40
40
40
24
16
16
16
16
8
8
8
4
4
LTE %
10%
55%
45%
71%
66%
35%
52%
68%
4%
20%
80%
80%
33%
25%
0%
75%
25%
0%
0%
0%
0%
0%
Table 1: Geographical coverage and diversity of the crowd-sourced
data collected from 16 countries using Cell vs WiFi, ordered by
number of runs collected. The last column shows the percentage of
runs where LTE throughput is higher than WiFi
Cell vs WiFi collected network-performance data from locations
in ﬁve continents: North America, South America, Europe, Africa,
and Asia. We observed that some users use this app to measure only
WiFi or LTE performance, but not both. We do not consider these
measurement runs in this section because our goal is to compare
LTE and WiFi performance at nearly the same place and time. To
ensure that we only measure performance of LTE or an equivalent
high-speed cellular network, such as HSPA+, we use the Android
network-type API [2] and pick only those measurement runs that
used LTE or HSPA+. When using the term LTE in this section, we
mean LTE/HSPA+. After these ﬁltering steps, our dataset contains
over 1606 complete runs of measurement, i.e., both LTE and WiFi
transfers in both directions.
In Table 1, we group nearby runs together using a k-means clus-
tering algorithm, with a cluster radius of r = 100 kilometers; i.e.,
all runs in each group are within 200 kilometers of each other. For
each location group, we also list the percentage of measurement runs
where LTE has higher throughput than WiFi.
Figure 3 shows the CDF of difference in throughput between
WiFi and LTE on the uplink and the downlink. We can see that
the throughput difference can be larger than 10 Mbits/s in either
direction. The grey region shows 42% (uplink) and 35% (downlink)
of the data samples whose LTE throughput is higher than WiFi
throughput. If we combine uplink and downlink together, 40% of
the time LTE outperforms WiFi. Figure 4 shows the CDF of ping
RTT difference between LTE and WiFi. During our measurement,
we send 10 pings and take the average RTT value. The shaded area
shows that in 20% of our measurement runs, LTE has a lower ping
RTT than WiFi, although the cellular network is commonly assumed
to have higher delays.
(a) Uplink
(b) Downlink
Figure 3: CDF of difference between WiFi and LTE throughput. The
grey region shows 42% (uplink) and 35% (downlink) of the data
samples whose LTE throughput is higher than WiFi throughput.
The simple network selection policy used by mobile devices today
forces applications to use WiFi whenever available. However, our
measurement results indicate that a more ﬂexible network selection
policy will improve the network performance of mobile applica-
tions.
3. MPTCP MEASUREMENTS
When WiFi and cellular networks offer comparable performance,
or when each varies signiﬁcantly with time, it is natural to use
both simultaneously. Several schemes transmitting data on multiple
network interfaces have been proposed in the past [22, 17, 15, 21].
Among these, the most widespread is MPTCP [21]. MPTCP can be
used in two modes [16]: Full-MPTCP mode, which transmits data
on all available network interfaces at any time and Backup mode,
which transmits data on only one network interface at a time, falling
back to the other interface only if the ﬁrst interface is down. Unless
stated otherwise, all experiments in this section use MPTCP in Full-
MPTCP mode. For completeness, we compare the two modes in
Section 3.6. We use a modiﬁed version of Cell vs WiFi to carry out
MPTCP measurements. We observe the following:
1. We ﬁnd that MPTCP throughput for short ﬂows depends sig-
niﬁcantly on the network selected for the primary subﬂow3 in
MPTCP: for example, changing the network (LTE or WiFi)
3We deﬁne subﬂows in Section 3.1
00.20.40.60.81.0-15-10-5 0 5 10 15 20 25CDFTput(WiFi) - Tput(LTE) (mbps)00.20.40.60.81.0-15-10-5 0 5 10 15 20 25CDFTput(WiFi) - Tput(LTE) (mbps)183Figure 4: CDF of the difference between average Ping RTT with
WiFi and LTE. The grey region shows 20% of the data samples
whose LTE RTT is lower than WiFi RTT.
for the primary subﬂow changes the average throughput of a
10 KByte ﬂow by 60% in the median (Figure 8 in Section 3.4).
2. For long ﬂows, selecting the proper congestion control algo-
rithm is also important. For example, using different congestion-
control algorithms (coupled or decoupled) changes the aver-
age throughput of a 1 MByte ﬂow by 34% in the median
(Figure 13 in Section 3.5).
3. MPTCP’s backup mode is typically used for energy efﬁciency:
keeping fewer interfaces active reduces energy consumption
overall. However, we ﬁnd that for MPTCP in Backup Mode,
if LTE is set to the backup interface, very little energy can be
saved for ﬂows that last shorter than 15 seconds (Section 3.6).
3.1 MPTCP Overview
MPTCP initiates a connection in a manner similar to regular
TCP: it picks one of the available interfaces and establishes a TCP
connection using a SYN-ACK exchange with the server over that in-
terface. Every TCP connection that belongs to a MPTCP connection
is called an MPTCP subﬂow. The ﬁrst established subﬂow is called
the primary subﬂow.
We used the Linux MPTCP implementation for our measure-
ments [14] (Ubuntu Linux 13.10 with Kernel version 3.11.0, with
the MPTCP Kernel implementation version v0.88). In this imple-
mentation, MPTCP initiates the primary subﬂow on the interface
used as the default route on the machine. Once the primary subﬂow
is established, if there are other interfaces available, MPTCP creates
an additional subﬂow using each new interface, and combines the
new subﬂow with the existing subﬂows on the same MPTCP con-
nection.4 For example, a mobile device can establish an MPTCP
primary subﬂow through WiFi to the server, and then add an LTE
subﬂow to the server. To terminate the connection, each subﬂow
is terminated using four-way FIN-ACKs, similar to TCP. In Sec-
tion 3.4, we study the effect of choosing different interfaces for the
primary subﬂow on MPTCP performance.
There are two kinds of congestion-control algorithms used by
MPTCP: decoupled and coupled. In decoupled congestion control,
each subﬂow increases and decreases its congestion window inde-
pendently, as if they were independent TCP ﬂows [5]. In coupled
congestion control, each subﬂow in an MPTCP connection increases
4For simplicity, here we only explain how MPTCP works when the
server is single-homed (like the server in our experiments), and the
client alone is multi-homed.
Figure 5: Setup of MPTCP measurement.
its congestion window based on ACKs both from itself and from
other subﬂows [21, 10] in the same MPTCP connection. In Sec-
tion 3.5, we compare the coupled and decoupled algorithms and ﬁnd
that using different congestion-control algorithms has less impact
on throughput compared with selecting the correct interface for pri-
mary subﬂows for short ﬂows. However, for long ﬂows, changing
congestion-control algorithms results in a substantial throughput
difference.
3.2 Measurement Setup
Figure 5 shows the MPTCP measurement setup. The MPTCP
Client is a laptop running Ubuntu 13.10 with MPTCP installed. We
tethered two smartphones to the laptop, one in “airplane” mode with
WiFi enabled, and the other with WiFi disabled but connected to LTE
(either the Verizon or the Sprint LTE network). The MPTCP server
is located at MIT, with a single Ethernet interface, also running
Ubuntu 13.10 with MPTCP installed.
We installed a modiﬁed version of Cell vs WiFi on both phones.
The phone with WiFi enabled only measures WiFi performance, i.e.,
Step 2 in Figure 2. The phone connected to LTE only measures
cellular network performance, i.e., Step 3 in Figure 2.
The experimental setup also allows us to measure the energy
consumption separately for each interface, which we present in
Section 3.6.
Each measurement run comprises the following:
1. Single path TCP upload and download using modiﬁed Cell vs
2. Single path TCP upload and download using modiﬁed Cell vs
WiFi through LTE.
WiFi through WiFi.
3. MPTCP upload and download in Full-MPTCP mode with
4. MPTCP upload and download in Full-MPTCP mode with
LTE as the primary subﬂow.
WiFi as the primary subﬂow.
We conducted the measurements at 20 different locations on the
east and west coasts of the United States, shown in Table 2. At
each city, we conduct our measurement at places where people
would often use mobile devices: cafes, shopping malls, university
campuses, hotel lobbies, airports, and apartments. At 7 of the 20
locations, we measured both Verizon and Sprint LTE networks, using
both MPTCP congestion-control algorithms: decoupled and coupled.
At the other 13 locations, we were able to measure only the Verizon
LTE network with coupled congestion control.
In Figure 6, we compare the WiFi and LTE throughput distribu-
tions for the data we collected at these 20 locations and the data
collected from Cell vs WiFi in Section 2. We can see that for both
upload and download, the “20-Location” CDF curves are close to
the CDF curve from Section 2, implying that the 20 locations that
were selected have similar variability in network conditions as the
 0 0.2 0.4 0.6 0.8 1-400-200 0 200 400CDFRTT(WiFi) - RTT(LTE) (ms)184(a) Uplink
(b) Downlink
Figure 6: CDF for WiFi and LTE throughput measured using regular TCP at 20 locations (shown as “20-Location”) comparing with the CDF
in Figure 3(shown as “App Data”).
Description
University Campus, Indoor
University Campus, Outdoor
Cafe, Indoor
Downtown, Outdoor
Apartment, Indoor
Cafe, Indoor
Shopping Mall, Indoor
Subway, Outdoor
Airport, Indoor
Apartment, Indoor
Cafe, Indoor
Downtown, Outdoor
Store, Indoor
ID City
1 Amherst, MA
2 Amherst, MA
3 Amherst, MA
4 Amherst, MA
5 Amherst, MA
6 Boston, MA
7 Boston, MA
8 Boston, MA
9 Boston, MA
10 Boston, MA
11 Boston, MA
12 Boston, MA
13 Boston, MA
14
15