### Before Full MultiVA Enforcement

Upon the removal of the domain exception list, we did not observe any significant issues or higher error rates from customers who had previously been on the list.

### Full Production Deployment

Let’s Encrypt completed the full deployment of multiVA in June 2020, and all certificate requests are now validated by multiple Validation Authorities (VAs).

### Need for a Configurable Quorum Policy

The requirement for a configurable quorum policy that varies based on use case is supported by previous research on remote vantage point use in TOFU (Trust On First Use) applications [55].

### Early Stages of MultiVA

An early version of multiVA was deployed in the staging environment for testing in 2017 [37].

### Certificate Issuance Trends

Figure 6 illustrates the daily issuance of Let’s Encrypt certificates since the deployment of multiVA with the domain exception list. The vertical line indicates when full enforcement was enabled. This phased deployment minimizes the impact on ongoing CA operations while allowing gradual improvements in performance and reliability.

### Deployment Evaluation

We analyzed log data from Let’s Encrypt’s production deployment to evaluate the performance and certificate validation of multiVA. Our analysis demonstrates the viability of multiVA at scale, both in terms of performance and handling benign failures.

#### Domain Validation Performance

**Latency:**
In the k-n quorum validation scheme adopted by Let’s Encrypt, performance degradation is minimal because remote validations are performed in parallel using the same timeout as the local validation by the primary VAs. The only additional latency comes from the RPC round trip between the primary and remote VAs. Total validation latency is bounded by the (n-k)th slowest remote VA in the quorum majority. For instance, with a 2-3 quorum policy, one slow remote VA would not increase overall latency. When choosing a quorum threshold, consideration must be given to the number of slow or unresponsive remote VAs the system can tolerate. If the number of slow VAs makes up a quorum majority, system performance would degrade.

When the CA chooses remote VAs with similar performance characteristics to their primary VAs, there should be little change in validation performance. Figure 7 shows Let’s Encrypt validation latency in milliseconds, with the y-axis on a log scale. Remote latency is the time it takes to complete a validation request at the remote VA, local latency is the time taken to complete the request at the primary VA, and total latency includes the gRPC overhead. Since total latency is comparable to local latency, the overhead for multiVA is minimal. In the Let’s Encrypt deployment between June 2 and August 31, 2020, remote VAs provided slightly better performance than the primary VAs, likely due to richer peering relationships in AWS. The RPC overhead contributes minimally to the total latency, so latency is typically determined by the primary VA.

**Bandwidth Overhead:**
The multiVA RPC scheme introduces a small amount of traffic for each validation request. For an issuance rate of about 20 certificates per second, the RPC traffic amounts to around 0.5 Mbps per remote VA. This allows for a large number of remote VAs before the traffic overhead approaches the saturation point for most network uplinks, which typically have a minimum bandwidth of 100 Mbps.

**Certificate Issuance Rate:**
Figure 6 shows the daily certificate issuance rate for the Let’s Encrypt multiVA deployment. The vertical orange line indicates when full enforcement without the domain exception list was enabled. The multiVA deployment handles the load of the world’s largest CA and scales to millions of daily certificates. The issuance rate remains stable over several months, including after the removal of the domain exception list and the transition to full enforcement mode in June 2020.

### Benign Failure Rate

We studied the impact of multiVA on benign failures, i.e., domain validation failures caused by uncontrollable external factors.

**Certificate Validation Dataset:**
We obtained a dataset from Let’s Encrypt, including 451 million certificate validations collected from the primary VA over a 20-day period (September 3-22, 2020). The dataset includes detailed runtime data on each validation, such as the domain name, challenge type, ACME account ID, failure reason, and validation result of each remote VA.

**Benign Failures Caused by MultiVA:**
Even in the absence of multiVA, the primary VAs have a validation failure rate of more than 65%, mainly due to repeated failed requests for a small portion of domains. Only 1.2% of the validations caused differentials (i.e., having one or more remote validation failures) in the 20-day period. Many of these validations still succeeded due to the quorum policy.

**Causes of Differentials:**
Based on the dataset, the causes of differentials fall into four categories: DNS-related issues, connection-related issues, HTTP unauthorized errors, and server internal errors, as summarized in Table 8.

- **DNS:** For 52.6% of the differentials, remote VAs failed to resolve the validated domain names to IP addresses. This often occurs when multiple authoritative DNS servers are not synchronized, causing different VAs to receive different answers.
- **Connection:** 24.3% of the differentials were caused by connection-related issues, such as blocked or dropped HTTP connections. One cause is overly sensitive DDoS mitigation, which may classify multiVA traffic as a DDoS attack and drop it. Some domain owners also employ firewall policies that block traffic not sent by the Let’s Encrypt data center’s IP address block.
- **HTTP Unauthorized:** For about 20.9% of the differentials, remote VAs successfully communicated with the target web/DNS server but did not receive the expected response, such as the validation document not being uploaded.

### Conclusion

The phased deployment of multiVA has demonstrated its feasibility at Internet scale, with minimal impact on performance and a manageable benign failure rate. Most failures caused by remote VAs can be resolved by retrying or whitelisting the IP addresses of remote VAs.