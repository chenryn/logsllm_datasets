# 第24讲：跨平台与Web开发的建议

大家好，我是七牛云的许式伟。在上一讲中，我们探讨了浏览器以及移动浏览器之争：小程序与PWA。当我们思考浏览器从技术层面带来了哪些变革时，可以将其归纳为以下两个方面：
- 跨平台桌面程序开发；
- Web 开发（B/S 架构下的新型应用）。

今天，我们将围绕这两个主题深入讨论。

## 跨平台桌面程序开发
跨平台的桌面程序开发一直是一个极具挑战性的课题。尽管许多团队和个人尝试过多种解决方案，但至今仍没有一种方案能够被广泛认可和采用。造成这一现状的原因主要有两个关键因素：
1. **操作系统**：不同操作系统提供的界面程序框架存在差异，这导致了额外的开发工作量。为了覆盖更多的用户群体，开发者不得不支持所有主流的操作系统。
2. **屏幕尺寸**：即便是在相同的操作系统下，不同大小的屏幕也会带来显著不同的交互体验，从而增加了跨平台开发的复杂性。

接下来，让我们具体看看这些因素如何影响跨平台开发：
- 操作系统多样性：
  - PC 本地：Windows、macOS、Linux 等；
  - PC Web：Chrome、Safari、Firefox 等；
  - 移动端本地：Android、iOS 等；
  - 移动端Web：小程序、PWA等。
- 屏幕尺寸变化：
  - 大屏设备：台式机、笔记本电脑、平板电脑等；
  - 中屏设备：智能手机；
  - 小屏设备：智能手表。

面对如此多样化的终端类型，跨平台开发变得异常艰难。当前市场上存在多种跨平台解决方案，但由于大部分框架已经不再活跃或已被淘汰，因此很难预测哪一个会最终胜出。“每一次统一的努力，都最终变成新的分裂”这句话很好地概括了跨平台开发领域的现状。然而，追求跨平台的梦想永远不会停止。

## Web 开发
现在让我们转向另一个由浏览器推动的重要领域——Web 开发。B/S架构的应用相较于传统的客户端/服务器模式，在软件开发方面引入了更高的复杂度，主要体现在以下几个方面：

1. **多用户环境**：由于数据存储于服务器端而非客户端，这就要求开发者必须考虑如何有效地管理大量并发用户的访问请求。
2. **数据可靠性**：当数据保存在服务器上时，确保其安全性和完整性成为了服务提供商的责任。任何数据丢失都将严重影响用户体验并损害公司声誉。
3. **更灵活的角色分配**：根据业务逻辑的不同侧重，Web 应用大致可分为“胖前端”和“瘦后端”两种风格。“胖前端”倾向于将更多处理逻辑放在客户端执行，而“瘦后端”则依赖于强大的服务器来处理大多数任务。

### 浏览器端视角
浏览器使用HTML+CSS作为其界面描述语言，这实际上构成了一个ViewModel层，因为DOM结构不仅定义了页面布局还包含了动态内容信息。这种设计简化了许多传统GUI编程中的难题，比如局部更新问题。基于此，经典的MVC架构演变为MVMP (Model-ViewModel-Presenter) 模式，其中Presenter负责协调Model与ViewModel之间的通信。

#### 事件处理流程
- 用户触发的UI事件首先传递给ViewModel层进行处理；
- 当模型层状态发生变化时，通过Presenter通知到ViewModel以刷新视图。

### 服务端视角
虽然本章重点不在详细探讨后端架构，但我们仍需对其有一个基本了解。现代Web应用的服务端通常包括一个多租户模型层和支持会话管理的Web层。后者进一步细分为Session-based Model 和 Session-based ViewModel，两者之间并不直接交互而是通过网络调用来实现协同工作。

## 结语
今天，我们讨论了Web技术带来的两大变革：跨平台能力和全新的B/S架构应用程序开发方式。对于前者而言，快速迭代的技术趋势给开发者带来了巨大压力；而对于后者来说，则意味着需要适应更加复杂的系统架构，并且重视良好设计的数据模型层。希望今天的分享对你有所帮助！如果你有任何想法或疑问，请随时留言交流。期待下次见面！

---

感谢您的阅读，如果您觉得这篇文章有价值，请不要忘记分享给更多人看到哦！再见！