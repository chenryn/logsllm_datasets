### Student Responsibilities in Assessing and Improving Study Strategies

As a student, you are also responsible for evaluating and refining your study strategies. While this may seem daunting, there is a simple and effective approach: at the end of each study session, take just 10 seconds to reflect on how well it went. This small habit can make a significant difference.

To understand its impact, let's examine the two most common outcomes of a study session:

#### 1. Difficult Study Session
If the session was particularly challenging, this moment of self-reflection can help you identify the specific difficulties. For example, if SQL Injection was tough, while the complexity of the material is somewhat out of your control, you might need to review foundational concepts in the next session.

We are particularly interested in factors within our control. Here are some questions to ask about the study session:
1. What time did I start the study session?
2. How long was the study session?
3. Was I interrupted? If so, how?
4. What did I do just before starting to study?
5. What did I eat or drink before studying?
6. What was my study location like? Quiet or busy?
7. What specific activities did I engage in during the study session?

This list is not exhaustive, but answering these questions can help pinpoint specific issues. For instance, if a heavy meal before studying made you feel unproductive, you can adjust your eating habits or study times.

#### 2. Successful Study Session
If the session went well, it's easy to attribute success to the content, such as being fascinated by SQL Injection. However, it's important to look beyond the content itself.

For example, if you studied for one hour in the morning after a light breakfast at the dining room table with a cup of coffee, using the Feynman Technique, and it led to a successful session, note this down. Plan future sessions to replicate these conditions as much as possible.

### Final Thoughts

We recognize that we cannot cover every effective strategy or provide a comprehensive picture of all the factors involved in learning new skills. We hope the items presented in this module are useful and helpful.

If you are a learner just starting with OffSec’s training, we wish you the best of luck on your journey.

---

### Report Writing for Penetration Testers

In this module, we will cover the following Learning Units:
- Understanding Note-Taking
- Writing Effective Technical Penetration Testing Reports

This module is designed to help penetration testers deliver effective reports to their clients.

#### 5.1 Understanding Note-Taking

**Learning Objectives:**
- Review the deliverables for penetration testing engagements
- Understand the importance of note portability
- Identify the general structure of penetration testing documentation
- Choose the right note-taking tool
- Understand the importance of taking screenshots
- Use tools to take screenshots

##### 5.1.1 Penetration Testing Deliverables

Penetration testing and red team exercises are difficult to script in advance because the tester cannot predict the exact machines or networks the client will want tested. Even though the outcome is often unpredictable, it is recommended to define a detailed scope during preliminary meetings with the client. This helps prioritize business-critical targets within large networks.

While the general execution plan for a penetration test follows a particular model, the maxim "no plan survives first contact with the enemy" applies. Specific activities expected during the engagement may not occur due to the testing environment's realities. Therefore, prepopulated forms are often inadequate, especially when the client wants to surprise their defending teams.

Instead of preparing a report in advance, notes are taken during the test to ensure a detailed record. This ensures:
- The penetration test can be repeated to demonstrate an issue.
- The test can be repeated after remediation to confirm an issue is fixed.
- If a system failure occurs, the client and tester can determine if the testing caused it.

During a penetration test, certain activities may be restricted. Clear Rules of Engagement (RoE) must be established, and a "referee" may be assigned to ensure compliance. Constraints, such as no denial-of-service attacks or social engineering, and adherence to methodologies like the OWASP Penetration Testing Execution Standard, must be clearly defined.

##### 5.1.2 Note Portability

Portability of penetration testing notes means they can be shared with others. Concise and coherent notes enable them to be used by multiple individuals and adapted for technical reporting. This is especially important when a tester leaves an engagement due to illness or other issues. Large teams benefit from a shared understanding of note-taking practices.

##### 5.1.3 General Structure of Penetration Testing Notes

A structured approach to note-taking is essential. Here are some principles to consider:
- Record exactly what you did, including commands, code modifications, and GUI interactions.
- Ensure notes are detailed enough to reproduce actions.
- Provide sufficient technical details for future reference.
- Write coherently to allow others to repeat the test and get the same results.

A recommended note-taking structure is broad and then drills down into each section, starting with the broadest activity and narrowing the focus.

**Example:**
- **Application Name:** Important in multi-application tests.
- **URL:** Exact URL of the vulnerability.
- **Request Type:** Type of request (e.g., GET, POST, OPTIONS) and any manual changes.
- **Issue Detail:** Overview of the vulnerability, including impact (e.g., denial of service, remote code execution).
- **Proof of Concept Payload:** String or code block to trigger the vulnerability, including necessary preconditions and commands.

**Specific Example: Cross-Site Scripting (XSS) Vulnerability**

- **Testing Target:** 192.168.1.52
- **Application:** XSSBlog
- **Date Started:** 31 March 2022
- **Steps:**
  1. Navigated to the application: `http://192.168.1.52/XSSBlog.html`
  2. Entered standard XSS test data.
  3. Clicked Submit.
  4. Navigated to read the blog post: `http://192.168.1.52/XSSRead.php`
  5. Observed the alert, indicating XSS vulnerability.
  6. PoC payload: [Insert payload here]

##### 5.1.4 Choosing the Right Note-Taking Tool

Many free and paid note-taking tools are available. Key requirements include:
- **Screenshots:** Inline screenshot insertion.
- **Code blocks:** Proper formatting.
- **Portability:** Cross-OS compatibility.
- **Directory Structure:** Coherent structure for multiple domains or applications.

**Tools to Consider:**
- **Sublime Text:** Flexible syntax highlighting but limited to one language per file and no inline screenshots.
- **CherryTree:** Standard in Kali, uses SQLite database, supports HTML, PDF, and plain text export, and provides a tree structure.
- **Obsidian:** Markdown editor with features for note-taking. Installable as a snap, Flatpak, or AppImage.

**Example Installation of Obsidian:**
```bash
kali@kali:~$ wget https://github.com/obsidianmd/obsidian-releases/releases/download/v0.14.2/Obsidian-0.14.2.AppImage
...
2022-03-31 15:38:53 (1.28 MB/s) - 'Obsidian-0.14.2.AppImage' saved [113102744/113102744]
kali@kali:~$ chmod +x Obsidian-0.14.2.AppImage
kali@kali:~$ ./Obsidian-0.14.2.AppImage
```

When executed, Obsidian provides a welcome screen to open or create a new vault.

---

**PWK - Copyright © 2023 OffSec Services Limited. All rights reserved.**
**Made in Morocco**
**Penetration Testing with Kali Linux**