---
author: Darin London
category: 软件开发
comments_data: []
count:
  commentnum: 0
  favtimes: 0
  likes: 0
  sharetimes: 0
  viewnum: 6591
date: '2021-06-20 15:20:28'
editorchoice: false
excerpt: 使用微控制器、传感器、Python 以及 MQTT 持续追踪温室的温度、湿度以及环境光。
fromurl: https://opensource.com/article/21/5/monitor-greenhouse-open-source
id: 13504
islctt: true
largepic: /data/attachment/album/202106/20/152029a6w23woootb6ut5e.jpg
permalink: /article-13504-1.html
pic: /data/attachment/album/202106/20/152029a6w23woootb6ut5e.jpg.thumb.jpg
related: []
reviewer: wxy
selector: lujun9972
summary: 使用微控制器、传感器、Python 以及 MQTT 持续追踪温室的温度、湿度以及环境光。
tags:
- 监控
- 微控制器
thumb: false
title: 我如何用 CircuitPython 和开源工具监控温室
titlepic: true
translator: alim0x
updated: '2021-06-20 15:20:28'
---
> 
> 使用微控制器、传感器、Python 以及 MQTT 持续追踪温室的温度、湿度以及环境光。
> 
> 
> 
![种有西红柿的温室花园](/data/attachment/album/202106/20/152029a6w23woootb6ut5e.jpg "Greenhouse garden with tomatoes")
CircuitPython 提供了一种和微控制器板进行交互的革命性方式。这篇文章介绍了如何使用 CircuitPython 来监测温室的温度、湿度以及环境光，并且使用 CircuitPython MQTT 客户端将结果发布到一个 [MQTT](https://mqtt.org/)  中介   broker 。你可以在若干个程序中订阅 MQTT 队列并进一步处理信息。
这个项目使用一个简单的 Python 程序来运行 Web 服务器，它发布一个 Prometheus 格式的采集端点，拉取监控指标到 [Prometheus](https://prometheus.io/) 进行不间断的监控。
### 关于 CircuitPython
[CircuitPython](https://circuitpython.io/) 是一个由 [Adafruit](https://adafruit.com) 创建的开源 Python 发行版，用于运行在低成本微控制器开发板上。CircuitPython 为与 [兼容的开发板](https://circuitpython.org/downloads) 的交互提供了简单的开发体验。你可以在连接你的开发板时挂载的 `CIRCUITPYTHON` 根驱动器上创建一个 `code.py` 文件来启动你的程序。CircuitPython 还为开发板提供了一个串行连接，包含一个交互式解释器（REPL）会话，你可以使用 Python 代码实时和开发板进行交互。
Adafruit 的网站提供了大量的文档，可以帮助你开始使用 CircuitPython。首先，参考下《[欢迎来到 CircuitPython](https://learn.adafruit.com/welcome-to-circuitpython)》指南。这份指南能够帮助你开始使用 CircuitPython 在开发板上运行代码以及和 REPL 交互。它还记录了如何安装 Adafruit 的 CircuitPython 库合集和范例，可以用在它出售的许多开发板和传感器上。接下来，阅读《[CircuitPython 基础](https://learn.adafruit.com/circuitpython-essentials/circuitpython-essentials)》指南来学习更多关于其功能的信息，里面还有链接指向在特定及兼容的开发板上使用 CircuitPython 的相关信息。最后，就如所有开源软件一样，你可以深入 [CircuitPython 的源码](https://github.com/adafruit/circuitpython)，发布议题，以及做出贡献。
### 微控制器设置
微控制器系统非常简单。要完成这个示例项目，你会需要：
* **树莓派 4**：你需要一台电脑来给微控制器系统编程，我用的是树莓派 4。
* **CircuitPython 兼容的微控制器**：我用的是 [Adafruit Feather S2](https://www.adafruit.com/product/4769)，带有内置 WiFi，环境光传感器，Qwiic 线缆输入。
* **微控制器 WiFi**：Feather S2 内置了 WiFi。如果你的微控制器没有，你需要给开发板找个 WiFi 扩展板。
* **传感器**：Feather S2 有个内置的环境光传感器，所以我还需要一个温湿度传感器。有很多不同厂商的产品可以选择，包括 Adafruit、SparkFun、亚马逊。我用的是一个 [Adafruit 传感器](https://www.adafruit.com/product/3251)，带有 Feather S2 输入兼容的 Qwiic 线缆。尽管多数 SparkFun 传感器可以在 Adafruit 库下工作，但如果你不是从 Adafruit 购买的传感器，你可能还是需要自己去找到它兼容 CircuitPython 的 Python 库。
* **跳线和线缆**：为了避免使用面包板或焊接，我使用 [Adafruit Qwiic 线缆](https://www.adafruit.com/product/4399)。SparkFun 销售的包含不同长度的[线缆套装](https://www.sparkfun.com/products/15081)中也有它。
在将微控制器连接到你的电脑之前，将传感器连接到微控制器上。
![将传感器连接到微控制器上](/data/attachment/album/202106/20/152030vahlagmaaytgsr7l.jpg "Connecting sensors to microcontroller")
现在你可以将微控制器用 USB 数据线连接到你的电脑。
### MQTT 中介
你可以使用 [这份说明](https://pimylifeup.com/raspberry-pi-mosquitto-mqtt-server/) 来在树莓派的系统上安装 [Mosquitto MQTT 中介](https://mosquitto.org/) 和 Mosquitto 客户端。如果你想把树莓派做为长期服务器使用，在你的网络上给树莓派 4 设置一个静态 IP 地址。Mosquitto 中介运行起来之后，创建一份 [用户名/密码文件](https://mosquitto.org/documentation/authentication-methods/)，设置客户端向中介发布和订阅消息时用的认证信息。
你可以用树莓派上的 Mosquitto 客户端来测试 MQTT 中介。打开两个终端（如果你是无界面运行的话打开两个 SSH 会话）：
在终端一输入：
```
mosquitto_sub -h localhost -u $user -P $pass -t "mqtt/test"
```
这条命令会启动一个持续运行的进程，监听发布到 `mqtt/test` 队列的消息。
在终端二输入：
```
mosquitto_pub -h localhost -u $user -P $pass -t "mqtt/test" -m hello`
```
这条命令会向 `mqtt/test` 队列发布一条消息，它应该会显示在终端一的输出里。
现在你可以中止终端一运行的 `sub` 命令了。
Mosquitto 中介允许客户端发布消息到任何队列，甚至没有任何订阅的队列也可以。这些消息会永久丢失，但这不会阻止客户端继续发布消息。
打开第三个终端，订阅下列队列（你的控制器会发布消息到这些队列上）：
* greenhouse/temperature
* greenhouse/light
* greenhouse/humidity
### 给微控制器编码
现在你已经准备好给微控制器编码，发布它的监测指标到树莓派 4 上运行的 MQTT 中介上了。
Adafruit 有 [出色的文档](https://learn.adafruit.com/mqtt-in-circuitpython)，指导你使用 [CircuitPython 库合集](https://circuitpython.org/libraries) 的库来将你的微控制器连接到 WiFi 路由器，并发布监测指标到 MQTT 中介上。
安装下列库到 `CIRCUITPYTHON/lib` 目录，温室监控会用到它们。这些库在 Adafruit 的 CircuitPython 库合集中都有提供：
* `adafruit_bus_device`：一个带有多个 .mpy 文件的 Python 包文件夹（.mpy 是经过压缩的 Python 文件，用以节省空间）
* `adafruit_requests`：单个 .mpy 文件
* `adafruit_register`：一个包文件夹
* `adafruit_minimqtt`：一个包文件夹
* `adafruit_si7021`：单个 .mpy 文件，用来支持温湿度传感器
库装好了之后，将以下代码写入 `CIRCUITPYTHON` 文件夹的 `code.py` 文件中：
```
import time
import ssl
import socketpool
import wifi
import adafruit_minimqtt.adafruit_minimqtt as MQTT
import board
from digitalio import DigitalInOut, Direction, Pull
from analogio import AnalogIn
import adafruit_si7021