User: Please write a Python script to archive and compress all files in a specified directory and store the compressed files in another directory.
Assistant: The following is a script that uses the zipfile module in the Python standard library to achieve archive compression: ```python import os import zipfile # The directory where the original file is located source_dir = "/path/to/source/dir" # The directory where the compressed file is stored target_dir = "/path/to/target/dir" # Traverse the files in the original file directory for root, dirs, files in os.walk(source_dir): for file in files: # Construct the full path of the original file source_file = os.path. join(root, file) # Construct the full path of the compressed file target_file = os.path.join(target_dir, os.path.relpath(source_file, source_dir) + ".zip") # Create a compressed file with zipfile.ZipFile(target_file, "w") as zipf: # Add the original file to the compressed file zipf.write(source_file, file) ``` This script first defines the directory where the original file is located and the directory where the compressed file is stored. Then, use the os.walk() function to walk through all the files in the original file directory. For each file, first construct the full path to the compressed file, then use the zipfile module to create the compressed file and add the original file to the compressed file. The compressed file name is based on the path and file name of the original file relative to the original file directory, plus a ".zip" suffix. The final compressed file will be saved in the specified compressed file storage directory.