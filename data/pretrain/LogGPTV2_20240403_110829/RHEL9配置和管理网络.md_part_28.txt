    output_password         = key_password
    ...
    [server]
    countryName             = US
    stateOrProvinceName     = North Carolina
    localityName            = Raleigh
    organizationName        = Example Inc.
    emailAddress            = PI:EMAIL
    commonName              = "Example Server Certificate"
    ...
    ```
4.  可选：自定义客户端配置：
    ``` literallayout
    ...
    [ CA_default ]
    default_days            = 365
    ...
    [ req ]
    distinguished_name      = client
    default_bits            = 2048
    input_password          = password_on_private_key
    output_password         = password_on_private_key
    ...
    [client]
    countryName             = US
    stateOrProvinceName     = North Carolina
    localityName            = Raleigh
    organizationName        = Example Inc.
    emailAddress            = PI:EMAIL
    commonName              = PI:EMAIL
    ...
    ```
5.  创建证书：
    ``` literallayout
    # make all
    ```
6.  将 `/etc/raddb/certs/server.pem`{.literal} 文件中的组更改为
    `radiusd`{.literal} ：
    ``` literallayout
    # chgrp radiusd /etc/raddb/certs/server.pem*
    ```
:::
::: itemizedlist
**其他资源**
-   `/etc/raddb/certs/README.md`{.literal}
:::
:::
::: section
::: titlepage
# []{#assembly_setting-up-an-802-1x-network-authentication-service-for-lan-clients-using-hostapd-with-freeradius-backend_configuring-and-managing-networking.html#proc_configuring-freeradius-to-authenticate-network-clients-securely-using-eap_assembly_setting-up-an-802-1x-network-authentication-service-for-lan-clients-using-hostapd-with-freeradius-backend}使用 EAP 配置 FreeRADIUS 以安全地验证网络客户端 {.title}
:::
FreeRADIUS
支持通过不同的扩展验证协议(EAP)的方法。但是，对于安全网络，本文档介绍了如何配置
FreeRADIUS 来支持以下安全 EAP 身份验证方法：
::: itemizedlist
-   EAP-TLS（传输层安全）使用安全 TLS
    连接来使用证书对客户端进行身份验证。要使用
    EAP-TLS，需要每个网络客户端以及用于服务器的服务器证书。请注意，同样的证书颁发机构(CA)必须签发证书。始终使用您自己的
    CA 创建证书，因为您使用的 CA 发布的所有客户端证书都可以向 FreeRADIUS
    服务器进行身份验证。
-   EAP-TTLS（隧道传输层安全）使用安全 TLS
    连接，并使用密码认证协议(PAP)或挑战握手身份验证协议(CHAP)等机制验证客户端。要使用
    EAP-TTLS，需要一个 TLS 服务器证书。
-   EAP-PEAP（受保护的身份验证协议）使用安全 TLS
    连接作为外部身份验证协议来设置隧道。验证器验证 RADIUS
    服务器的证书。之后，使用 Microsoft 挑战传递验证协议版本
    2(MS-CHAPv2)或其他方法的加密隧道通过加密隧道进行身份验证。
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
默认的 FreeRADIUS
配置文件充当文档，并描述所有参数和指令。如果要禁用某些功能，请注释掉它们，而不删除配置文件中的对应部分。这可让您保留配置文件和包含的文档的结构。
:::
::: itemizedlist
**先决条件**
-   已安装 `freeradius`{.literal} 软件包。
-   `/etc/raddb/`{.literal} 目录中的配置文件保持不变，由
    `freeradius`{.literal} 软件包提供。
-   服务器上存在以下文件：
    ::: itemizedlist
    -   FreeRADIUS 主机的 TLS 私钥：
        `/etc/raddb/certs/server.key`{.literal}
    -   FreeRADIUS 主机的 TLS 服务器证书：
        `/etc/raddb/certs/server.pem`{.literal}
    -   TLS CA 证书： `/etc/raddb/certs/ca.pem`{.literal}
    :::
    如果您将文件存储在不同的位置或者它们具有不同的名称，请相应地将
    `private_key_file`{.literal}、cert_file 和 `ca_file`{.literal}
    ``{=html} 参数设置到
    `/etc/raddb/mods-available/eap`{.literal} 文件中。
:::
::: orderedlist
**流程**
1.  如果带有 Diffie-Hellman(DH)参数的 `/etc/raddb/certs/dh`{.literal}
    不存在，则创建一个。例如，要创建带有 2048 位 prime 的 DH
    文件，请输入：
    ``` literallayout
    # openssl dhparam -out /etc/raddb/certs/dh 2048
    ```
    为了安全起见，请不要使用小于 2048位的 DH
    文件。根据位数，文件的创建可能需要几分钟。
2.  使用 DH 参数在 TLS 私钥、服务器证书、CA
    证书和密钥文件上设置安全权限：
    ``` literallayout
    # chmod 640 /etc/raddb/certs/server.key /etc/raddb/certs/server.pem /etc/raddb/certs/ca.pem /etc/raddb/certs/dh
    # chown root:radiusd /etc/raddb/certs/server.key /etc/raddb/certs/server.pem /etc/raddb/certs/ca.pem /etc/raddb/certs/dh
    ```
3.  编辑 `/etc/raddb/mods-available/eap`{.literal} 文件：
    ::: orderedlist
    1.  在 `private_key_password`{.literal} 参数中设置私钥的密码：
        ``` literallayout
        eap {
            ...
            tls-config tls-common {
                ...
                private_key_password = key_password
                ...
            }
        }
        ```
    2.  根据您的环境，将 `eap`{.literal} 指令中的
        `default_eap_type`{.literal} 参数设置为您使用的主要 EAP 类型：
        ``` literallayout
        eap {
            ...
            default_eap_type = ttls
            ...
        }
        ```
        对于安全环境，请仅使用 `ttls`{.literal}、`tls`{.literal} 或
        `peap`{.literal}。
    3.  注释掉 `md5`{.literal} 指令，以禁用不安全的 EAP-MD5
        身份验证方法：
        ``` literallayout
        eap {
            ...
            # md5 {
            # }
            ...
        }
        ```
        请注意，在默认配置文件中，其他不安全的 EAP
        身份验证方法默认被注释掉。
    :::
4.  编辑 `/etc/raddb/sites-available/default`{.literal} 文件，然后注释掉
    `eap`{.literal} 以外的所有身份验证方法：
    ``` literallayout
    authenticate {
        ...
        # Auth-Type PAP {
        #     pap
        # }
        # Auth-Type CHAP {
        #     chap
        # }
        # Auth-Type MS-CHAP {
        #     mschap
        # }
        # mschap
        # digest
        ...
    }
    ```
    这只会启用 EAP，并禁用纯文本身份验证方法。
5.  编辑 `/etc/raddb/clients.conf`{.literal} 文件：
    ::: orderedlist
    1.  在 `localhost`{.literal} 和 `localhost_ipv6`{.literal}
        客户端指令中设置安全密码：
        ``` literallayout
        client localhost {
            ipaddr = 127.0.0.1
            ...
            secret = client_password
            ...
        }
        client localhost_ipv6 {
            ipv6addr = ::1
            secret = client_password
        }
        ```
    2.  如果 RADIUS 客户端（如网络验证器）应能够访问 FreeRADIUS
        服务，请为它们添加对应的客户端指令：
        ``` literallayout
        client hostapd.example.org {
            ipaddr = 192.0.2.2/32
            secret = client_password
        }
        ```
        `ipaddr`{.literal} 参数接受 IPv4 和 IPv6
        地址，您可以使用可选的无类别域间路由(CIDR)标记来指定范围。但是，在这个参数中只能设置一个值。例如，若要授予对
        IPv4 和 IPv6 地址的访问权限，请添加两个客户端指令。
        为 client 指令使用一个描述性名称，如主机名或词语描述使用 IP
        范围的位置。
    :::
6.  如果要使用 EAP-TTLS 或 EAP-PEAP，请将用户添加到
    `/etc/raddb/users`{.literal} 文件中：
    ``` literallayout
    example_user        Cleartext-Password := "user_password"
    ```
    对于应使用基于证书的身份验证(EAP-TLS)的用户，不要添加任何条目。
7.  验证配置文件：
    ``` literallayout
    # radiusd -XC
    ...
    Configuration appears to be OK
    ```
8.  启用并启动 `radiusd`{.literal} 服务：
    ``` literallayout
    # systemctl enable --now radiusd
    ```
:::
::: itemizedlist
**验证**
-   [针对 FreeRADIUS 服务器或验证器测试 EAP-TTLS
    身份验证](#assembly_setting-up-an-802-1x-network-authentication-service-for-lan-clients-using-hostapd-with-freeradius-backend_configuring-and-managing-networking.html#proc_testing-eap-ttls-authentication-against-a-freeradius-server-or-authenticator_assembly_setting-up-an-802-1x-network-authentication-service-for-lan-clients-using-hostapd-with-freeradius-backend "针对 FreeRADIUS 服务器或验证器测试 EAP-TTLS 身份验证"){.link}
-   [针对 FreeRADIUS 服务器或验证器测试 EAP-TLS
    身份验证](#assembly_setting-up-an-802-1x-network-authentication-service-for-lan-clients-using-hostapd-with-freeradius-backend_configuring-and-managing-networking.html#proc_testing-eap-tls-authentication-against-a-freeradius-server-or-authenticator_assembly_setting-up-an-802-1x-network-authentication-service-for-lan-clients-using-hostapd-with-freeradius-backend "针对 FreeRADIUS 服务器或验证器测试 EAP-TLS 身份验证"){.link}
:::
::: orderedlist
**故障排除**
1.  停止 `radiusd`{.literal} 服务：
    ``` literallayout
    # systemctl stop radiusd
    ```
2.  以 debug 模式启动该服务：
    ``` literallayout
    # radiusd -X
    ...
    Ready to process requests
    ```
3.  在 FreeRADIUS 主机上执行验证测试，如 `验证部分中所述`{.literal}。
:::
::: itemizedlist
**后续步骤**
-   禁用未必需验证方法以及您不使用的其他功能。
:::
:::
::: section
::: titlepage
# []{#assembly_setting-up-an-802-1x-network-authentication-service-for-lan-clients-using-hostapd-with-freeradius-backend_configuring-and-managing-networking.html#proc_configuring-hostapd-as-an-authenticator-in-a-wired-network_assembly_setting-up-an-802-1x-network-authentication-service-for-lan-clients-using-hostapd-with-freeradius-backend}在有线网络中将 hostapd 配置为验证器 {.title}
:::
主机访问点守护进程（`主机apd`{.literal}）服务可在有线网络上充当验证器，以提供
802.1X 身份验证。为此，`hostapd`{.literal} 服务需要一个用来验证客户端的
RADIUS 服务器。
`hostapd`{.literal} 服务提供集成的 RADIUS
服务器。但是，只针对测试目的使用集成的 RADIUS
服务器。对于生产环境，请使用 FreeRADIUS
服务器，它支持其他功能，如不同的身份验证方法和访问控制。
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
`hostapd`{.literal} 服务不与 traffic plane
交互。该服务仅充当身份验证器。例如，使用 `hostapd`{.literal}
控制接口根据身份验证事件的结果来允许或拒绝流量的脚本或服务。
:::
::: itemizedlist
**先决条件**
-   已安装 `hostapd`{.literal} 软件包。
-   FreeRADIUS 服务器已配置，它已准备好对客户端进行身份验证。
:::
::: orderedlist
**流程**
1.  使用以下内容创建 `/etc/hostapd/hostapd.conf`{.literal} 文件：
    ``` literallayout
    # General settings of hostapd
    # ===========================
    # Control interface settings
    ctrl_interface=/var/run/hostapd
    ctrl_interface_group=wheel
    # Enable logging for all modules
    logger_syslog=-1
    logger_stdout=-1
    # Log level
    logger_syslog_level=2
    logger_stdout_level=2
    # Wired 802.1X authentication
    # ===========================
    # Driver interface type
    driver=wired
    # Enable IEEE 802.1X authorization
    ieee8021x=1
    # Use port access entry (PAE) group address
    # (01:80:c2:00:00:03) when sending EAPOL frames
    use_pae_group_addr=1
    # Network interface for authentication requests
    interface=br0
    # RADIUS client configuration
    # ===========================
    # Local IP address used as NAS-IP-Address
    own_ip_addr=192.0.2.2
    # Unique NAS-Identifier within scope of RADIUS server
    nas_identifier=hostapd.example.org
    # RADIUS authentication server
    auth_server_addr=192.0.2.1
    auth_server_port=1812
    auth_server_shared_secret=client_password