使用工具 [UsnJrnl2Csv](https://github.com/jschicht/UsnJrnl2Csv) 进行内容的读取
![](../../../../assets/img/Security/CTF/writeup/2020-9-G60攻防大赛-writeup/24.png)
查看导出的 csv 文件
![](../../../../assets/img/Security/CTF/writeup/2020-9-G60攻防大赛-writeup/25.png)
这里了可以看到多个 txt 的操作记录,由于无法进行还原,尝试用文件名 N2FyHnb@BXR2EQD0@39C 去解密 TC 磁盘，挂载成功，并发现一个加密的 key.7z 压缩包
![](../../../../assets/img/Security/CTF/writeup/2020-9-G60攻防大赛-writeup/26.png)
接下来就是到内存中找压缩包的密码,这里其实有个巧方法就是直接搜索 key.7z
```bash
strings 1z_mem.vmem | grep "key.7z"
```
![](../../../../assets/img/Security/CTF/writeup/2020-9-G60攻防大赛-writeup/27.png)
密码 SSj7MYUMrtPEdOJ!
当然你用 Volatility 最后也会去搜 key.7z , 因为 win10 的内存压缩特性，所以内存取证是没有办法提取 win10 系统内除文本文件以外的大部分文件的。又因为 Cmdscan 等插件对 win10 内存无法使用,所以无法从命令行中得到密码
解压 key.7z,得到一个表情包文件夹
![](../../../../assets/img/Security/CTF/writeup/2020-9-G60攻防大赛-writeup/28.png)
通过检测可知都没有隐写数据。联想到文件夹，猜测可能文件本身是密钥。
VeraCrypt 有一个功能是可以在正常的加密磁盘中生成隐藏磁盘，使用不同的密钥可以解开不同的磁盘。故此我们尝试使用 VeraCrypt 文件密钥，需要先把 One is a key 文件夹从磁盘中复制到桌面，然后逐个尝试。
![](../../../../assets/img/Security/CTF/writeup/2020-9-G60攻防大赛-writeup/29.png)
这里尝试到 931377d26d30102077f706f00f26c146.jpg 时挂载成功,由于每次解密失败都会无响应,所以比较考验选手耐心
![](../../../../assets/img/Security/CTF/writeup/2020-9-G60攻防大赛-writeup/30.png)
但是打开磁盘发现什么内容都没有，使用 winhex 查看下。同样是按 F9 调出磁盘。
![](../../../../assets/img/Security/CTF/writeup/2020-9-G60攻防大赛-writeup/31.png)
将 阿巴阿巴.txt 导出
![](../../../../assets/img/Security/CTF/writeup/2020-9-G60攻防大赛-writeup/32.png)
用蝌蚪文解密工具进行解密2次 http://www.megaemoji.com/cn/generators/tadpole/
![](../../../../assets/img/Security/CTF/writeup/2020-9-G60攻防大赛-writeup/33.png)
---
## NTDS
题目给的压缩包里有4个附件
![](../../../../assets/img/Security/CTF/writeup/2020-9-G60攻防大赛-writeup/44.png)
解压, flag.zip 是加密的，info 给的提示如下
![](../../../../assets/img/Security/CTF/writeup/2020-9-G60攻防大赛-writeup/45.png)
winRAR 查看 flag.zip 注释说是某个用户的 ntml hash
![](../../../../assets/img/Security/CTF/writeup/2020-9-G60攻防大赛-writeup/39.png)
看来需要通过 S 和 n 文件解压 flag.zip
kali 下 file 分析2个文件
![](../../../../assets/img/Security/CTF/writeup/2020-9-G60攻防大赛-writeup/34.png)
n 分析出是 Extensible storage engine DataBase,结合题目名称和压缩包注释,基本上断定是 ntds.dit 文件,而 ntds.dit 解密需要结合 SYSTEM 文件,所以 S 文件也确定了
使用 Impacket 的 secretsdump 模块进行解密
```bash
impacket-secretsdump -system S -ntds n LOCAL
```
![](../../../../assets/img/Security/CTF/writeup/2020-9-G60攻防大赛-writeup/35.png)
可以看到报错了, 结合 info 和 Impacket 报错提示, 这里要修复 S 文件, 将 uegf 改为 regf
010 编辑器打开 S 文件，进行修改
![](../../../../assets/img/Security/CTF/writeup/2020-9-G60攻防大赛-writeup/36.png)
![](../../../../assets/img/Security/CTF/writeup/2020-9-G60攻防大赛-writeup/37.png)
然后继续解密
```bash
impacket-secretsdump -system S1 -ntds n LOCAL
```
![](../../../../assets/img/Security/CTF/writeup/2020-9-G60攻防大赛-writeup/38.png)
这里需要使用 flag 用户的ntml hash 进行解密
![](../../../../assets/img/Security/CTF/writeup/2020-9-G60攻防大赛-writeup/40.png)
解密后查看 hint.txt
![](../../../../assets/img/Security/CTF/writeup/2020-9-G60攻防大赛-writeup/41.png)
通过上面的规则，参考 hash 掩码规则，进行爆破
```bash
hashcat -m 1000 hash.txt -a 3 ?u?l?d?l?l?l?l?lre
```
![](../../../../assets/img/Security/CTF/writeup/2020-9-G60攻防大赛-writeup/42.png)
得到 flag{8752f02b97c0d66dbacedd4185297724}
![](../../../../assets/img/Security/CTF/writeup/2020-9-G60攻防大赛-writeup/43.png)
---
# 创新组
## blueshark
binwalk 发现了一个 7z 的压缩包，直接当成压缩包打开，发现有个 password_is_Bluetooth_PIN.txt文件
![](../../../../assets/img/Security/CTF/writeup/2020-9-G60攻防大赛-writeup/4.png)
![](../../../../assets/img/Security/CTF/writeup/2020-9-G60攻防大赛-writeup/6.png)
Ctrl + F，选择 分组详情 或者 分组列表，字符串 或者 正则表达式，搜 pin。
![](../../../../assets/img/Security/CTF/writeup/2020-9-G60攻防大赛-writeup/5.png)
PIN 就是 141854。
用来解压就可以得到 flag。
6da01c0a419b0b56ca8307fc9ab623eb