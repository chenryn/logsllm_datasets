![screenshot](20160723_03_pic_007.png)    
虚拟节点与实际节点的个数是倍数关系，例如有4个实际的物理节点，你可以有4*n个虚拟节点，例如96个虚拟节点。       
即每个物理节点负责24个虚拟节点。       
虚拟节点的目的就是让数更加分散，从而减少数据倾斜的出现。      
“虚拟节点”的hash计算可以采用对应节点的IP地址加数字后缀的方式。      
例如假设NODE1的IP地址为192.168.1.100。      
引入“虚拟节点”前，计算 cache A 的 hash 值：      
```    
Hash(“192.168.1.100”);    
```    
引入“虚拟节点”后，计算“虚拟节”点NODE1-1和NODE1-2的hash值：      
```    
Hash(“192.168.1.100#1”); // NODE1-1    
Hash(“192.168.1.100#2”); // NODE1-2    
```    
## 参考    
* http://blog.csdn.net/x15594/article/details/6270242    
* http://blog.csdn.net/cywosp/article/details/23397179    
* http://blog.csdn.net/sparkliang/article/details/5279393    
## 小结    
* 哈希取模的弊端    
  当需要增加或删除节点时，如果要满足分布式系统设计的单调性，则扩容或缩容的目标节点数必须是原节点数的倍数或者整除数。      
  否则数据就有需要在原有节点的内部相互迁移。      
* 一致性哈希通过一个闭环，以及对象与hash value的mapping算法，做到了单调性。      
  同时也引入了一个新的问题，当节点数很少时，数据的倾斜问题。      
* 一致性哈希如何解决当节点数很少时，数据倾斜的问题？      
  通过虚拟分片解决数据倾斜以及数据重分布时的单调问题。        
  一个物理节点，对应闭环中的若干个虚拟节点，从而提高节点位置的离散度。      
* 假设需要添加 n 个节点，即产生 n*x 个虚拟节点（假设每个物理节点对应 x 个虚拟节点）。      
  添加节点的过程中，需要移动的数据可能在已有的 n*x 个区间里（当已有节点数大于等于n时），每个区间分裂成两段，分别由新增节点与已有节点负责这两个区间的数据mapping。        
  （PS 这种做法依旧是不均衡的，只是虚拟节点越多，这种数据倾斜越不明显）。     
  例如, 可以2个扩到6个，也2个扩到4个。  区别只是新增的节点数是不是大于已有的节点数，如果大于已有节点数，则一定有某一个区间可能被拆成多个区间（当然，即使小于也存在这种情况，但不是一定，最均衡的情况是一个区间拆成2个区间）。          
  这样做很好的解决了数据需要在已有节点内移动的问题，在虚拟节点很多时，也基本上解决了数据的倾斜问题，虚拟节点越多，数据越均衡 。       
祝大家玩得开心，欢迎随时来 **阿里云促膝长谈** 业务需求 ，恭候光临。      
阿里云的小伙伴们加油，努力做 **最贴地气的云数据库** 。       
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")