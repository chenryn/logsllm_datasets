### Table 1: Average Execution Times for Alibi Operations on a Motorola Droid

#### Context and Accuracy
An alibi in our scheme binds the identities of the alibi owner and the corroborator to the context, thereby avoiding common human inaccuracies. For example, Charlie might think he saw Alice on Monday and Bob on Tuesday, when in reality, he saw Alice on Tuesday and Bob on Monday.

#### Availability
Traditional physical alibis rely on the memory of the corroborators to recall encounters, which can be unreliable. In contrast, our scheme ensures that the alibi owner stores all necessary data for corroboration and verification. Since the alibi owner benefits from the alibi, they have a natural incentive to store their alibis securely.

### 7.3 Weaknesses
Our scheme requires a trustworthy public key infrastructure where each private key represents an individual. In our threat model, we assume that each private key is accessible only by its owner. If Mallory gains access to Alice’s private key, she can create alibis on Alice’s behalf. Our scheme does not determine whether the user of a private key is actually the owner.

### 8. Performance Evaluation
To evaluate the real-world feasibility of our scheme, we implemented all computational steps required to create, corroborate, claim, and verify alibis in both the public and private corroborator schemes. Our implementation runs on the Android mobile platform, and we measured the performance of these operations on a Motorola Droid phone.

### 8.1 Benchmarks
Participants must first create their public/private key pairs and perform other initialization operations. Secure key pair creation is relatively slow on mobile devices (averaging 6.91 seconds). However, once this one-time initialization is complete, participants can create and corroborate as many alibis as needed. After creating 1,000 alibis, we computed the average time required for the Motorola Droid to complete the major operations in our scheme. The results are shown in Table 1.

| Operation | Description | Average Time (seconds) |
|-----------|-------------|------------------------|
| Owner Statement Creation | Time required for the provider to create their OwnerFeatures and commitment to this value |  |
| Corroborator Creation (Public Scheme) | Time required for the corroborator to create the corroborating evidence in the creation phase of the public corroborator scheme |  |
| Corroborator Creation (Private Scheme) | Time required for the corroborator to create the EvidenceReminder in the creation phase of the private corroborator scheme |  |
| Corroboration (Private Scheme) | Time required for the corroborator to verify the EvidenceReminder and use it to create CorroboratingEvidence in the private corroborator scheme |  |
| Corroboration Verification (Private Scheme) | Time required for the owner to verify that the CorroboratingEvidence received from the corroborator matches the evidence created in the creation phase |  |
| Alibi Verification | Time required for the judge to verify an alibi claim by examining the CorroboratingEvidence, OwnerStatement, and associated verification secret |  |

### 8.2 Storage
In the public corroborator scheme, the alibi owner must retain:
- \( h_o \) (160 bytes)
- \( x_o \) (120 bytes)
- The corroborator’s signature (256 bytes)
- The owner’s context value (variable size)

In the private scheme, the owner must retain:
- \( h_o \) (160 bytes)
- \( x_o \) (120 bytes)
- The owner’s context value (variable size)
- \( h_c \) (160 bytes)
- \( y_c \) (20 bytes)
- \( r_c \) (120 bytes)
- The corroborator’s context (variable size)

When the owner receives CorroboratingEvidence from the corroborator, they must store the corroborator’s signature (256 bytes) to claim the alibi.

### 9. Related Work
As mobile devices become more popular, researchers are increasingly interested in location-based services. Existing work, such as [17], describes how to create location proofs, but these systems lack user control over privacy. Some researchers, like [1], are concerned about the security and privacy implications of such systems. Studies, such as [11], show that users are sometimes hesitant to share data about their current location, motivating further research in privacy-based approaches.

Several papers describe general frameworks for privacy in location services, such as [4, 6, 14]. Most approaches aim to prevent the disclosure of user identities entirely rather than leaving the user in control. Systems like Nymbler [9] allow pseudonyms to be correlated after a certain point in time but do not provide the facilities for users to identify themselves in specific exchanges, as required by our alibi system. The SMILE system [13] provides a “missed encounters” service, but the results of these exchanges require both parties to participate, and they are not bound to specific identities or locations, making them unsuitable for alibis.

SmokeScreen [2] allows users with existing relationships in the same area to share presence information but requires a central, trusted broker server to reveal identities. vPriv [16] is a system for location-based vehicular services that protect driver privacy. It focuses on allowing a server to perform functions on the path of a car without learning the identity of the driver for all time/location pairs. vPriv detects cheating through random spot checks, which reveal the user's identity. In our scheme, no trusted party can reveal the identity of a user associated with an alibi without the owner’s consent.

VeriPlace [12] uses wireless access points as corroborators in their location proofs, requiring each corroborator to have a permanently fixed, publicly-known location. Our scheme is more flexible, as corroborators can move and establish alibis whenever they encounter other users, allowing a wider range of devices to be used as corroborators.

APPLAUS [20] uses pseudonyms in location proofs to protect user privacy, requiring a trusted third-party certificate authority to maintain a mapping of pseudonyms to real identities. In contrast, our scheme does not require users to trust a third party to maintain the mapping between their real identity and the source identifier in our location proof (alibi).

Our scheme requires a string commitment scheme. We chose a scheme based on hashing, such as those presented by Damgård et al. [3], for its simplicity and efficiency. We used a string commitment scheme introduced by Halevi and Micali [8] because it is practical and provably secure in the unbounded receiver model.

### 10. Conclusion
We have introduced a privacy-preserving alibi system where the identity of the alibi owner is concealed at the time of alibi creation. The owner retains control over the disclosure of their identity, revealing it only when they choose to present their alibi to a judge. We designed two privacy-preserving alibi schemes: one for corroborators without personal privacy concerns and another for corroborators who want to retain control over the disclosure of their identities. These schemes provide several advantages over traditional alibis in the physical world. We have implemented both schemes on the Android mobile platform and demonstrated that they are suitable for existing mobile devices.

### 11. Acknowledgments
This paper is partially based upon work supported by the National Science Foundation under Grant No. 0831547, 0644450, and 1018964.

### 12. References
[1] A. Blumberg and P. Eckersley. On locational privacy, and how to avoid losing it forever. Electronic Frontier Foundation, 2009. Technical Report.
[2] L. P. Cox, A. Dalton, and V. Marupadi. Smokescreen: flexible privacy controls for presence-sharing. In Proceedings of the 5th international conference on Mobile systems, applications and services, MobiSys '07, pages 233–245, New York, NY, USA, 2007. ACM.
[3] I. Damgård, T. P. Pedersen, and B. Pfitzmann. On the existence of statistically hiding bit commitment schemes and fail-stop signatures. In Proceedings of the 13th Annual International Cryptology Conference on Advances in Cryptology, CRYPTO '93, pages 250–265, London, UK, 1994. Springer-Verlag.
[4] M. Duckham and L. Kulik. A formal model of obfuscation and negotiation for location privacy. Pervasive Computing, pages 152–170, 2005.
[5] B. Garner. Black’s Law Dictionary. Thomson/West, Belmont, 2004.
[6] G. Ghinita, P. Kalnis, A. Khoshgozaran, C. Shahabi, and K. Tan. Private queries in location-based services: anonymizers are not necessary. In Proceedings of the 2008 ACM SIGMOD international conference on Management of data, pages 121–132. ACM, 2008.
[7] K. Gratsias, E. Frentzos, V. Delis, and Y. Theodoridis. Towards a taxonomy of location-based services. Web and Wireless Geographical Information Systems, pages 19–30, 2005.
[8] S. Halevi and S. Micali. Practical and provably-secure commitment schemes from collision-free hashing. In Proceedings of the 16th Annual International Cryptology Conference on Advances in Cryptology, CRYPTO '96, pages 201–215, London, UK, 1996. Springer-Verlag.
[9] R. Henry, K. Henry, and I. Goldberg. Making a Nymbler Nymble using VERBS. Technical report, Tech. Rep. CACR 2010-05, Centre for Applied Cryptographic Research, Waterloo, ON, Canada, 2010.
[10] J. Hightower and G. Borriello. Location systems for ubiquitous computing. Computer, 34:57–66, August 2001.
[11] L. Jedrzejczyk, B. Price, A. Bandara, and B. Nuseibeh. On the impact of real-time feedback on users’ behavior in mobile location-sharing.