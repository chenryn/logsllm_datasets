Table 1: Average execution times for alibi opera-
tions on a Motorola Droid
between the alibi owner and context (e.g., Charlie thinks
that he saw Alice on Monday and Bob on Tuesday when he
actually saw Alice on Tuesday and Bob on Monday). An al-
ibi in our scheme binds the identities of the alibi owner and
the corroborator to the context, so it avoids all the above
human inaccuracies.
Availability.
Physical alibis rely on the memory of the corroborators
to recall the encounters. However, the corroborator may
forget the encounter partially or completely. By contrast,
in our scheme the alibi owner stores all the data necessary
to corroborate and verify the alibi.2 Since the alibi owner
beneﬁts from the alibi, she naturally has the incentive to
store her alibis safely.
7.3 Weaknesses
Our scheme requires a trustworthy public key infrastruc-
In our
ture where each private key represents a person.
threat model, we assume that each private key can only be
accessed by the owner of that private key. We note that
if Mallory gains access to Alice’s private key, then she can
create alibis on Alice’s behalf. Our scheme is not intended
to determine whether the user of a private key is actually
the owner of the private key.
8. PERFORMANCE EVALUATION
To evaluate the real-world feasibility of our scheme, we
have implemented all of the computational steps required
to create, corroborate, claim and verify alibis in our public
corroborator and private corroborator schemes. Our imple-
mentation runs on the Android mobile platform, and we
measured the performance of all of these operations on a
Motorola Droid phone.
8.1 Benchmarks
In order for a participant to create or corroborate alibis in
our systems, they must ﬁrst create their public/private key
pairs and perform other initialization operations. Secure key
pair creation is relatively slow on mobile devices (averaged
6.91 seconds). However, once the participants complete this
one-time initialization, they can create and corroborate as
many alibis as they like. After creating 1,000 alibis we com-
puted the average time required for the Motorola Droid to
complete the major operations in our scheme. The results
of our benchmarks are shown in Table 1.
2In the private scheme (Section 5), the corroborator needs
to remember his private key in the corroboration stage, but
this is guaranteed by the assumption of a public key infras-
tructure in our threat model (Section 3).
OwnerStatement Creation the time required for the
provider to create their OwnerFeatures and commit-
ment to this value
Corroborator Creation (public scheme) the time re-
quired for the corroborator to create the corroborating
evidence in the creation phase of the public corrobo-
rator scheme
Corroborator Creation (private scheme) the time re-
quired for the corroborator to create the EvidenceRe-
minder in the creation phase of the private corrobora-
tor scheme
Corroboration (private scheme) the time required for
the corroborator to verify the EvidenceReminder and
use it to create CorroboratingEvidence in the private
corroborator scheme
Corroboration veriﬁcation (private scheme) the
time required for the owner to verify that the Cor-
roboratingEvidence received from the corroborator
matches the evidence created in the creation phase
Alibi Veriﬁcation the time required for the judge to ver-
ify an alibi claim by examining the CorroboratingEvi-
dence, OwnerStatement and associated veriﬁcation se-
cret
8.2 Storage
In our public corroborator scheme, the alibi owner must
retain ho (160 bytes), xo (120 bytes), the corroborator’s sig-
nature (256 bytes) and the owner’s context value (variable
size) to claim an alibi at a later time.
In our private scheme, the owner must retain ho (160
bytes), xo (120 bytes), and the owner’s context value (vari-
able size). In order to claim the alibi later, the owner must
also store hc (160 bytes), yc (20 bytes), and rc (120 bytes),
as well as the corroborator’s context (variable size).
When the owner receives CorroboratingEvidence from the
corroborator, they must store the corroborator’s signature
(256 bytes) to claim the alibi.
9. RELATED WORK
As mobile devices are becoming more popular, researchers
are becoming more and more interested in “location-based
services” ([10, 7]). Existing work such as [17] describe how to
create location proofs to show that you were in a particular
place, but these systems lack user control over their privacy.
Some researchers (e.g. [1]) are concerned about the secu-
rity and privacy implications of such systems. Studies (such
as [11]) show that users are sometimes hesitant to share data
about their current location with others, which motivates
further research in privacy-based approaches.
There are a number of papers describing general frame-
works for privacy in location services ([4, 6, 14]), though
most of the approaches only seek to prevent disclosure of
user identities entirely rather than leaving the user in con-
trol of this information. Systems like Nymbler [9] allow
pseudonyms to be correlated after a certain point in time,
but does not provide the facilities to allow users to iden-
tify themselves in only speciﬁc exchanges as required by our
alibi system. The SMILE system [13] provides a “missed
encounters” service in a system where mobile devices per-
form passive key exchanges opportunistically.
In SMILE,
the results of these exchanges later requires both parties to
participate when entities are claiming to have participated
in the exchange. Parties connected in the SMILE scheme
only means that they may have shared an encounter (ex-
changed an ephemeral key), and this is not bound to speciﬁc
identities or locations. The results of these exchanges can
be transferred to other users or be claimed to have taken
place in a diﬀerent context and so are unsuitable for alibis.
SmokeScreen [2] is a system that allows users with existing
relationships in the same area to share presence informa-
tion, but requires a central, trusted broker server to reveal
identities of the participants.
vPriv [16] is system for location-based vehicular services
that protect driver privacy. In vPriv the emphasis is on al-
lowing a server to perform functions on the path of a car
(e.g. time/location pairs) without learning the identity of
the driver for all time/location pairs. Due to the nature of
these vehicular services, vPriv is only concerned with pre-
venting widespread spooﬁng/cheating. vPriv detects cheat-
ing by performing random “spot checks,” which reveal the
identity of the user (without their consent or participation).
In our scheme, there is no such trusted party that can re-
veal the identity of a user associated with an alibi without
the owner’s consent. vPriv’s random spot checks are likely
to catch users who cheat frequently, but it is very likely
that a single faked record will go undetected. While this is
acceptable in their setting, a single forged alibi may have
tremendous consequences. Our schemes prevent users from
forging even a single alibi successfully.
VeriPlace [12] is a diﬀerent location proof architecture
that has similar goals for protecting user privacy. They use
wireless access points as the “corroborators” in their loca-
tion proofs. The biggest diﬀerence between VeriPlace and
our design is that VeriPlace requires each corroborator to
have a permanently ﬁxed, publicly-known location. Our
scheme is much more ﬂexible, as corroborators may move
about and establish alibis whenever they encounter other
users, allowing a much wider range of devices to be used as
corroborators.
In APPLAUS [20], pseudoynms are used in location proofs
to protect the privacy of the user. This scheme requires a
trusted, third-party certiﬁcate authority to maintain a map-
ping of pseudonyms to real identities. To verify a location
proof for a given user, a veriﬁer asks the certiﬁcate authority
to look up the pseudonyms associated with a user’s identity.
In contrast, our scheme does not require users to trust a
third party to responsibly maintain the mapping between
their real identity and the source identiﬁer in our location
proof (alibi). In our schemes, the identity associate with an
alibi can only be revealed by the owner of the alibi.
Our scheme requires a string commitment scheme. While
there are many diﬀerent string commitment schemes, we
feel that schemes based on hashing (such as those presented
by Damg˚ard et al. [3]) are both simple to implement and
eﬃcient in our setting. We used a string commitment scheme
introduced by Halevi and Micali [8] as it is practical and
provably secure in the unbounded receiver model, though
our system could be tweaked to use other schemes.
10. CONCLUSION
We have introduced a privacy-preserving alibi system where
the identity of the alibi owner is concealed at the time of
alibi creation. The owner retains control over the disclo-
applications. In Proceedings of the Sixth Symposium on
Usable Privacy and Security, pages 1–12. ACM, 2010.
[12] W. Luo and U. Hengartner. Veriplace: a privacy-aware
location proof architecture. In Proceedings of the 18th
SIGSPATIAL International Conference on Advances
in Geographic Information Systems, GIS ’10, pages
23–32, New York, NY, USA, 2010. ACM.
[13] J. Manweiler, R. Scudellari, and L. Cox. SMILE:
Encounter-Based Trust for Mobile Social Services.
CCS, 2009.
[14] C. Mascetti, X. Wang, and S. Jajodia. Anonymity in
Location-based Services: Towards a General
Framework. In MDM ’07: Proceedings of the 2007
International Conference on Mobile Data
Management, pages 69–76, Washington, DC, USA,
2007. IEEE Computer Society.
[15] S. Micali. Simple and fast optimistic protocols for fair
electronic exchange. In Proceedings of the
twenty-second annual symposium on Principles of
distributed computing, PODC ’03, pages 12–19, New
York, NY, USA, 2003. ACM.
[16] R. A. Popa, H. Balakrishnan, and A. J. Blumberg.
Vpriv: protecting privacy in location-based vehicular
services. In Proceedings of the 18th conference on
USENIX security symposium, SSYM’09, pages
335–350, Berkeley, CA, USA, 2009. USENIX
Association.
[17] S. Saroiu and A. Wolman. Enabling new mobile
applications with location proofs. In HotMobile ’09:
Proceedings of the 10th workshop on Mobile
Computing Systems and Applications, pages 1–6, New
York, NY, USA, 2009. ACM.
[18] N. Sastry, U. Shankar, and D. Wagner. Secure
veriﬁcation of location claims. In Proceedings of the
2nd ACM workshop on Wireless security, WiSe ’03,
pages 1–10, New York, NY, USA, 2003. ACM.
[19] B. Weiser. After MetroCard Alibi, Murder Charges
Are Dropped, 2008 (accessed May 4, 2011).
[20] Z. Zhu and G. Cao. Applaus: A privacy-preserving
location proof updating system for location-based
services. In INFOCOM, 2011 Proceedings IEEE, pages
1889–1897, april 2011.
sure of their identity, only revealing her identity when she
chooses to present her alibi to a judge. We have designed
two privacy-preserving alibi schemes: one for corroborators
without personal privacy concerns, and another for corrobo-
rators who want to retain control over their the disclosure of
their identities. These schemes provide several advantages
over traditional alibis in the physical world. Finally, we have
implemented both of our schemes on the Android mobile
platform and demonstrated that our schemes are suitable
for existing mobile devices.
11. ACKNOWLEDGMENTS
This paper is partially based upon work supported by
the National Science Foundation under Grant No. 0831547,
0644450, and 1018964.
12. REFERENCES
[1] A. Blumberg and P. Eckersley. On locational privacy,
and how to avoid losing it forever. Electronic Frontier
Foundation, 2009. Technical Report.
[2] L. P. Cox, A. Dalton, and V. Marupadi. Smokescreen:
ﬂexible privacy controls for presence-sharing. In
Proceedings of the 5th international conference on
Mobile systems, applications and services, MobiSys
’07, pages 233–245, New York, NY, USA, 2007. ACM.
[3] I. Damg˚ard, T. P. Pedersen, and B. Pﬁtzmann. On
the existence of statistically hiding bit commitment
schemes and fail-stop signatures. In Proceedings of the
13th Annual International Cryptology Conference on
Advances in Cryptology, CRYPTO ’93, pages 250–265,
London, UK, 1994. Springer-Verlag.
[4] M. Duckham and L. Kulik. A formal model of
obfuscation and negotiation for location privacy.
Pervasive Computing, pages 152–170, 2005.
[5] B. Garner. Black’s Law Dictionary. Thomson/West,
Belmont, 2004.
[6] G. Ghinita, P. Kalnis, A. Khoshgozaran, C. Shahabi,
and K. Tan. Private queries in location based services:
anonymizers are not necessary. In Proceedings of the
2008 ACM SIGMOD international conference on
Management of data, pages 121–132. ACM, 2008.
[7] K. Gratsias, E. Frentzos, V. Delis, and
Y. Theodoridis. Towards a taxonomy of location based
services. Web and Wireless Geographical Information
Systems, pages 19–30, 2005.
[8] S. Halevi and S. Micali. Practical and provably-secure
commitment schemes from collision-free hashing. In
Proceedings of the 16th Annual International
Cryptology Conference on Advances in Cryptology,
CRYPTO ’96, pages 201–215, London, UK, 1996.
Springer-Verlag.
[9] R. Henry, K. Henry, and I. Goldberg. Making a
Nymbler Nymble using VERBS. Technical report,
Tech. Rep. CACR 2010-05, Centre for Applied
Cryptographic Research, Waterloo, ON, Canada, 2010.
[10] J. Hightower and G. Borriello. Location systems for
ubiquitous computing. Computer, 34:57–66, August
2001.
[11] L. Jedrzejczyk, B. Price, A. Bandara, and
B. Nuseibeh. On the impact of real-time feedback on
users’ behaviour in mobile location-sharing