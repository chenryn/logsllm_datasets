the running time. Both remain quite feasible for even
the largest problem instances.
The performance of cpabe-dec is somewhat more
interesting. It is slightly more di(cid:14)cult to measure in
the absence of a precise application, since the decryp-
tion time can depend signi(cid:12)cantly on the particular
access trees and set of attributes involved. In an at-
tempt to average over this variation, we ran cpabe-dec
on a series of ciphertexts that had been encrypted un-
der randomly generated policy trees of various sizes.
4The workstation’s processor is a 64-bit, 3.2 Ghz Pentium 4.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 22,2021 at 04:11:20 UTC from IEEE Xplore.  Restrictions apply. 
2007 IEEE Symposium on Security and Privacy(SP'07)0-7695-2848-1/07 $20.00  © 2007





)
s
d
n
o
c
e
s
(
y
e
k
e
t
a
v
i
r
p
e
t
a
r
e
n
e
g
o
t
e
m
i
t
 2
 1.5
 1
 0.5
 0
 0
 3
 2.5
 2
 1.5
 1
 0.5
)
s
d
n
o
c
e
s
(
t
p
y
r
c
n
e
o
t
e
m
i
t
 50
 0
 0
 20
 40
 60
 80
 100
leaf nodes in policy
)
s
d
n
o
c
e
s
(
t
p
y
r
c
e
d
o
t
e
m
i
t
 0.14
 0.12
 0.1
 0.08
 0.06
 0.04
 0.02
 0
 0
naive
flatten
merge
 20
 40
 60
 80
 100
leaf nodes in policy
 20
 10
 40
attributes in private key
 30
(a) Key generation time.
(b) Encryption time.
(c) Decryption time with various levels of
optimization.
Figure 3. Performance of the cpabe toolkit.
The trees were generated by starting with only a root
node, then repeatedly adding a child to a randomly
selected node until the desired number of leaf nodes
was reached. At that point random thresholds were se-
lected for each internal node. Since the time to decrypt
also depends on the particular attributes available, for
each run of cpabe-dec, we selected a key uniformly at
random from all keys satisfying the policy. This was
accomplished by iteratively taking random subsets of
the attributes appearing in leaves of the tree and dis-
carding those that did not satisfy it. A series of runs
of cpabe-dec conducted in this manner produced the
running times displayed in Figure 3 (c).
These measurements give some insight into the ef-
fects of the optimizations described in Section 5.1 (all
of which are implemented in the system). The line
marked \naive" denotes the decryption time result-
ing from running the recursive DecryptNode algorithm
and arbitrarily selecting nodes to satisfy each threshold
gate. By ensuring that the (cid:12)nal number of leaf nodes
is minimized when making these decisions and replac-
ing the DecryptNode algorithm with the \(cid:13)attened"
algorithm to reduce exponentiations, we obtain the im-
proved times denoted \(cid:13)atten". Perhaps most inter-
estingly, employing the technique for merging pairings
between leaf nodes sharing the same attribute, denoted
\merge", actually increases running time in this case,
due to fact that exponentiations are more expensive in
G0 than in G1.
In summary, cpabe-keygen and cpabe-enc run in
a predictable amount of time based on the number of
attributes in a key or leaves in a policy tree. The per-
formance of cpabe-dec depends on the speci(cid:12)c access
tree of the ciphertext and the attributes available in
the private key, and can be improved by some of the
optimizations considered in Section 5.1. In all cases,
the toolkit consumes almost no overhead beyond the
cost of the underlying group operations and random
selection of elements. Large private keys and policies
are possible in practice while maintaining reasonable
running times.
6 Conclusions and Open Directions
We created a system for Ciphertext-Policy Attribute
Based Encryption. Our system allows for a new type of
encrypted access control where user’s private keys are
speci(cid:12)ed by a set of attributes and a party encrypting
data can specify a policy over these attributes specify-
ing which users are able to decrypt. Our system allows
policies to be expressed as any monotonic tree access
structure and is resistant to collusion attacks in which
an attacker might obtain multiple private keys. Finally,
we provided an implementation of our system, which
included several optimization techniques.
In the future,
it would be interesting to con-
sider attribute-based encryption systems with di(cid:11)erent
types of expressibility. While, Key-Policy ABE and
Ciphertext-Policy ABE capture two interesting and
complimentary types of systems there certainly exist
other types of systems. The primary challenge in this
line of work is to (cid:12)nd a new systems with elegant forms
of expression that produce more than an arbitrary com-
bination of techniques.
One limitation of our system is that it is proved se-
cure under the generic group heuristic. We believe an
important endeavor would be to prove a system secure
under a more standard and non-interactive assump-
Authorized licensed use limited to: Tsinghua University. Downloaded on March 22,2021 at 04:11:20 UTC from IEEE Xplore.  Restrictions apply. 
2007 IEEE Symposium on Security and Privacy(SP'07)0-7695-2848-1/07 $20.00  © 2007tion. This type of work would be interesting even if
it resulted in a moderate loss of e(cid:14)ciency from our
existing system.
References
[1] A. Beimel. Secure Schemes for Secret Sharing and Key
Distribution. PhD thesis, Israel Institute of Technol-
ogy, Technion, Haifa, Israel, 1996.
[2] M. Bellare and P. Rogaway. Random oracles are prac-
tical: A paradigm for designing e(cid:14)cient protocols. In
ACM conference on Computer and Communications
Security (ACM CCS), pages 62{73, 1993.
[3] J. Benaloh and L. J. Generalized Secret Sharing
and Monotone Functions.
In Advances in Cryptol-
ogy { CRYPTO, volume 403 of LNCS, pages 27{36.
Springer, 1988.
[4] J. Bethencourt, A. Sahai, and B. Waters. The cpabe
toolkit. http://acsc.csl.sri.com/cpabe/.
[5] G. R. Blakley. Safeguarding cryptographic keys.
In
National Computer Conference, pages 313{317. Amer-
ican Federation of Information Processing Societies
Proceedings, 1979.
[6] D. Boneh, X. Boyen, and E.-J. Goh. Hierarchical iden-
tity based encryption with constant size ciphertext.
In R. Cramer, editor, EUROCRYPT, volume 3494 of
Lecture Notes in Computer Science, pages 440{456.
Springer, 2005.
[7] D. Boneh and M. Franklin.
Identity Based Encryp-
tion from the Weil Pairing. In Advances in Cryptology
{ CRYPTO, volume 2139 of LNCS, pages 213{229.
Springer, 2001.
[8] R. W. Bradshaw, J. E. Holt, and K. E. Seamons. Con-
cealing complex policies with hidden credentials.
In
ACM Conference on Computer and Communications
Security, pages 146{157, 2004.
[9] E. F. Brickell. Some ideal secret sharing schemes.
Journal of Combinatorial Mathematics and Combina-
torial Computing, 6:105{113, 1989.
[10] R. Canetti, S. Halevi, and J. Katz. Chosen Cipher-
In
text Security from Identity Based Encryption.
Advances in Cryptology { Eurocrypt, volume 3027 of
LNCS, pages 207{222. Springer, 2004.
[11] M. Chase. Multi-authority attribute-based encryp-
tion. In (To Appear) The Fourth Theory of Cryptog-
raphy Conference (TCC 2007), 2007.
[12] C. Cocks. An identity based encryption scheme based
on quadratic residues. In IMA Int. Conf., pages 360{
363, 2001.
[13] E. Fujisaki and T. Okamoto. Secure integration of
In
asymmetric and symmetric encryption schemes.
CRYPTO, pages 537{554, 1999.
[14] R. Gavriloaie, W. Nejdl, D. Olmedilla, K. E. Seamons,
and M. Winslett. No registration needed: How to use
declarative policies and negotiation to access sensitive
resources on the semantic web. In ESWS, pages 342{
356, 2004.
[15] V. Goyal, O. Pandey, A. Sahai, and B. Waters. At-
tribute Based Encryption for Fine-Grained Access
Conrol of Encrypted Data.
In ACM conference on
Computer and Communications Security (ACM CCS),
2006.
[16] H. Harney, A. Colgrove, and P. D. McDaniel. Princi-
ples of policy in secure groups. In NDSS, 2001.
[17] M. Ito, A. Saito, and T. Nishizeki. Secret Sharing
Scheme Realizing General Access Structure. In IEEE
Globecom. IEEE, 1987.
[18] M. H. Kang, J. S. Park, and J. N. Froscher. Access con-
trol mechanisms for inter-organizational work(cid:13)ow. In
SACMAT ’01: Proceedings of the sixth ACM sympo-
sium on Access control models and technologies, pages
66{74, New York, NY, USA, 2001. ACM Press.
[19] A. Kapadia, P. Tsang, and S. Smith. Attribute-based
publishing with hidden credentials and hidden policies.
In NDSS, 2007.
[20] J. Li, N. Li, and W. H. Winsborough. Automated
trust negotiation using cryptographic credentials. In
ACM Conference on Computer and Communications
Security, pages 46{57, 2005.
[21] B. Lynn. The Pairing-Based Cryptography (PBC) li-
brary.
http://crypto.stanford.edu/pbc.
[22] P. D. McDaniel and A. Prakash. Methods and limita-
tions of security policy reconciliation. In IEEE Sym-
posium on Security and Privacy, pages 73{87, 2002.
[23] M. Pirretti, P. Traynor, P. McDaniel, and B. Wa-
ters. Secure Atrribute-Based Systems. In ACM con-
ference on Computer and Communications Security
(ACM CCS), 2006.
[24] A. Sahai and B. Waters. Fuzzy Identity Based Encryp-
tion. In Advances in Cryptology { Eurocrypt, volume
3494 of LNCS, pages 457{473. Springer, 2005.
[25] J. T. Schwartz. Fast probabilistic algorithms for veri-
(cid:12)cation of polynomial identities. J. ACM, 27(4):701{
717, 1980.
[26] A. Shamir. How to share a secret. Commun. ACM,
22(11):612{613, 1979.
[27] A. Shamir. Identity Based Cryptosystems and Signa-
ture Schemes. In Advances in Cryptology { CRYPTO,
volume 196 of LNCS, pages 37{53. Springer, 1984.
[28] V. Shoup. Lower bounds for discrete logarithms and
related problems. In EUROCRYPT, pages 256{266,