Does network performance impact user experience? Fig-
ure 1 shows the impact of the three network performance
metrics (RTT, loss rate, jitter) on the (normalized) user-derived
PCR. For each network metric, we bin calls based on their
network performance and show the PCR of the calls within
each bin. For statistical signiﬁcance, each bin has at least
1000 samples. The ﬁgures show PCR signiﬁcantly increases
with all the three network metrics (correlation coefﬁcients
of 0.97, 0.95, 0.91) conﬁrming that user-perceived quality is
indeed sensitive to network performance. Interesting, PCR
is sensitive to the entire spectrum of network metrics. This
suggests that any improvement in RTT, loss or jitter is likely
to improve PCR. MOS (calculated using the model in [17])
also drops with increase in all three metrics (not shown).
Thresholds of network performance: Figure 2 shows the
distribution of network performance experienced by calls us-
ing default routes. A signiﬁcant fraction of calls (over 15%)
occur on paths with RTT over 320ms, or loss over 1.2%, or
jitter more than 12ms, which we pick as our thresholds for
poor performance. These values are in line with literature
from industry and standards bodies that recommend one-
way end-to-end delay of no more than 150 ms and a packet
loss rate of no more than 1% for good call quality [4, 2].
Note that these thresholds are on the average values over the
call’s duration during which there may be transient spikes
(e.g., loss burst) in bad performance.
Our focus: Poor Network Rate We deﬁne the poor net-
work rate (PNR) of a network metric for a set of calls as
the fraction of calls whose performance on the metric is
worse than the chosen thresholds: RTT ≥ 320ms, loss rate
≥ 1.2%, jitter ≥ 12ms. One of our goals is to reduce PNR of
each individual metric (i.e., how often each of them is poor).
However, as there could be dependencies between net-
work metrics, improving one metric may increase PNR of
another metric. Figure 3 shows the three pair-wise corre-
 0 0.2 0.4 0.6 0.8 1 0 150 300 450PCR / Max PCRRTT (ms) 0 0.2 0.4 0.6 0.8 1 0 1 2 3 4PCR / Max PCRLoss rate (%) 0 0.2 0.4 0.6 0.8 1 0 4 8 12 16PCR / Max PCRJitter (ms) 0 0.2 0.4 0.6 0.8 1 0 200 400 600 800CDFRTT (ms) 0 0.2 0.4 0.6 0.8 1 0 2 4 6 8 10CDFLoss rate (%) 0 0.2 0.4 0.6 0.8 1 0 5 10 15 20 25CDFJitter (ms)(b) RTT vs. jitter
(a) RTT vs. loss rate
(c) Jitter vs. loss rate
Figure 3: Pair-wise correlation between performance
metrics. The Y-axis shows the distribution (10th, 50th,
90th percentiles) of one metric as a function the other
metric over the same set of calls.
lations. While the plot is based on an aggregation of data
across all calls and paths, the substantial spread suggests at
least the possibility that improving one performance metric
could lead to a worsening of the other metrics. Therefore,
we also focus on reducing PNR of three metrics collectively,
i.e., minimizing how often at least one of the metrics is poor.
How well does PNR on average values compare to using
full packet traces? Analysis of a subset of (70K) calls with
full packet traces shows that 80% of calls rated “non-poor”
using the thresholds on average metrics (“at least one poor
metric”) have a (packet-trace based) MOS score higher than
three-quarters (75%) of calls rated “poor” using the average
metrics. We run a proprietary MOS calculator on the packet
traces that contain send/receive timestamps for each packet
and loss information. This shows that deﬁning the thresholds
on average values of the call is a reasonable approximation.
WAN vs. wireless last hop This work focuses on improv-
ing the performance of the WAN path, rather than the last-
hop link (e.g., wireless). Previous studies (e.g., [26]) have
shown that while the wireless last hop could be a signiﬁcant
contributor to poor call quality even wired clients experi-
ence poor calls. Also, as our experiments later in this section
show, the PNR for international and inter-AS calls is signiﬁ-
cantly higher than that for domestic and intra-AS calls. Both
these ﬁndings suggest that the WAN path does matter, hence
our focus here on improving its performance. However, in
cases of a poor last-hop network, no relaying strategy can
help improve call quality (see §3).
2.3 Spatial patterns in performance
We have seen in §2.2 that user experience is sensitive to poor
network performance and that a signiﬁcant fraction of calls
suffer from poor performance when using default routing.
Next, we analyze whether the calls with poor networks share
common patterns. This subsection focuses on spatial pat-
terns while §2.4 looks at temporal patterns.
International vs. Domestic Calls: On all three network
metrics, we see that international calls (between users in
different countries) have a higher PNR, i.e., they are more
likely to suffer from bad network performance than domes-
tic calls. Figure 4 shows a 2 − 3× higher PNR on interna-
tional calls than on domestic calls. The ﬁgures also show the
fraction of calls with at least one metric being poor (the last
(a) International vs. domestic (b) Countries of one side of a call
Figure 4: International vs. Domestic Calls.
Figure 5: The percentage of calls over poor network con-
ditions that come from the worst n AS pairs; AS-pairs
are ranked in descending order of their contribution to
total amount of calls with poor performance.
pair of bars), where the gap between international and do-
mestic calls is even larger. Though conclusively diagnosing
the root cause of bad performance on international calls is
hard and beyond the scope of this work, the higher PNR for
international calls points to the WAN path as the culprit.1
To understand this further, Figure 4b zooms into the in-
ternational calls and classiﬁes them by the country of the
callers (source). We see that there is a skewed distribution,
with certain countries having a PNR as high as 70% on the
individual metrics. The PNR of international calls across the
remaining countries drops gradually but half of them still see
a non-negligible PNR of 25% − 50%. This suggests that
poor network performance is quite widespread, highlighting
the suitability of a globally deployed overlay network that
provides high performance inter-connection between over-
lay nodes.
Inter-AS vs. Intra-AS Calls: Similar to international calls,
calls across ASes are 2 − 3× more likely to experience poor
network performance than those within the same AS domain
(ﬁgure omitted). This, again, points to the need for enabling
alternatives to default routing to improve WAN performance.
Not just a few problematic source-destination pairs: Con-
trary to our expectation, a few source-destination pairs alone
do not account for a big chunk of the PNR. Figure 5 shows
the fraction of calls that suffer from poor network perfor-
mance from the worst AS pairs, ranked in order of their
contribution to the overall PNR. Even the worst 1000 AS
pairs together only count for less than 15% of the overall
1One aspect is that users tend to use VoIP regardless of its
performance for international calls, unlike domestic calls.
 0 2 4 6 8 10 0 150 300 450Loss (%)RTT (ms) 0 5 10 15 20 25 30 35 0 150 300 450Jitter (ms)RTT (ms) 0 2 4 6 8 10 12 14 0 5 10 15 20Loss (%)Jitter (ms) 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7RTTLossJitterAt least 1bad metricPoor Network RateInternationalDomestic 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 40 80 120 160 200Poor Network Rateofinternational callsSource countries ranked byPoor Network Rate of international callsAt least 1 badRTTLossJitter 0 5 10 15 20RTTLossJitterAt least1 bad metric% of Poor Network Callsfrom the worst k AS pairsThe worst 10 AS pairsThe worst 100 AS pairsThe worst 1000 AS pairs(a) Persistence
(b) Prevalence
Figure 6: Temporal patterns of poor network perfor-
mance. Figure 6a and 6b show the distribution of the
persistence and prevalence of AS pairs having high PNR.
PNR. This means that localized solutions that ﬁx a few bad
ASes or AS pairs, e.g., informing the AS administrators or
the clients directly regarding their ISPs, are not sufﬁcient.
While the above analysis was at the granularity of ASes,
we also tested at other, ﬁner granularities (e.g., /24 and /20
preﬁxes of the caller and callee IP addresses) and found sim-
ilar results (of not just a few culprits). In fact, for the pairs
with sufﬁcient data density at the /24 granularity, we found
that performance distributions of the network metrics were
similar to those at the granularity of ASes.
2.4 Temporal patterns in performance
We now analyze temporal patterns of poor network perfor-
mance. We perform this analysis by grouping the perfor-
mance of AS pairs into 24-hour time windows. We conser-
vatively label an AS pair as having high PNR for a speciﬁc
metric (on a given day) if its PNR on that day is at least 50%
higher than the overall PNR of all calls on that day.
Figure 6a and 6b show the distribution of persistence and
prevalence of high PNR AS-pairs. The persistence of an
AS pair is the median number of consecutive days when it
has high PNR. The prevalence of an AS pair is the fraction
of time it has high PNR. The ﬁgures show a highly skewed
distribution with 10% − 20% AS pairs always having high
PNR, while 60% − 70% AS pairs have poor performance
for less than 30% of time and lasting no longer than one
day at a stretch. This observation suggests that instead of
statically conﬁguring the system to improve performance for
only the (relatively few) most prevalent and persistent AS
pairs, we need to dynamically decide if a call should use
default Internet routing or be relayed.
2.5 Key observations
The key observations from this section are:
1. Network performance matters. User experience of calls
is impacted by even small changes in network metrics.
2. Wide-area communication, such as international and
inter-domain calls, are more prone to bad network per-
formance, and have a large room of improvement.
3. Calls suffering from poor networks are spread spatially
(across ASes) and temporally.
These observations motivate the need for a network over-
lay (Observation 1) that provides better paths with a global
Figure 7: VIA architecture with relay nodes at globally
distributed data centers. A call can either take “default
path” (red) or a “relay path” (green).
footprint of overlay nodes (Observation 2), and the need to
choose routes selectively and dynamically (Observation 3).
3 Approach and Potential of VIA
In this section, we present VIA, a managed overlay architec-
ture that consists of relays hosted at globally distributed data
centers and a centralized controller dynamically selecting re-
lays for audio calls (§3.1). Then, §3.2 quantiﬁes the poten-
tial of VIA to improve calls with poor network performance
that were characterized in §2. As a preview of our results,
we ﬁnd that an oracle-based scheme for relaying could help
improve the network metrics for calls by 30%-60% at the
median and the PNR (poor network rate) on these metrics
by over 30%.
3.1 VIA Architecture
Figure 7 presents the VIA architecture that consists of re-
lay nodes placed at globally distributed datacenters, such as
those run by Amazon, Google, and Microsoft. Indeed, VIA’s
architecture bears similarities to those used by Google Hang-
outs and Skype [37], but with a key difference — today, the
relays are typically used to provide connectivity between any
two clients, while VIA is engineered to explicitly optimize
network performance and call quality.
Each call can take either the “default path” (red arrow) or
a “relayed path” (green arrows) that routes the trafﬁc through
one or more relay nodes in the DCs. Relayed paths could in-
clude a single relay to "bounce off" trafﬁc or a pair of relays
to enable trafﬁc to "transit through" the private backbone of
the managed overlay network.
In our study, we use all the relay nodes operated by Skype.
They are all located in a single AS (so all inter-relay paths
are within a private WAN) but spread across many tens of
datacenters and edge clusters worldwide. We assume the
caller (or callee) can reach these relays by explicitly address-
ing the particular relay(s). The network path between a relay
and a client is determined by BGP.
When establishing a call, after the caller signals its callee,
both the caller and callee contact a controller (Figure 7) to
determine whether they should use the direct path or a re-
layed path, and, in case of the latter, which relay(s) they
should use. The controller makes this decision based on the
performance measurements from historical calls and policy
 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0 5 10 15 20CDFPersistence (day)RTTLossJitter 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0 0.2 0.4 0.6 0.8 1CDFPrevalence (Fraction of time)RTTLossJitterWANRelay&1Relay&2Relay&3Relay&4CallerCalleeRelay&pathsDirect&pathController(a) Performance distribution
(b) Poor Network Rate
Figure 8: Potential improvement of VIA.
Figure 9: Distribution of how long the best relaying op-
tion (picked by oracle) lasts. The optimal relaying op-
tions for 30% of AS pairs last for less than 2 days.
constraints (such as those based on relay budget or current
load), to be described in §4. To aid in this process, Skype
clients periodically push the network metrics derived from
their calls, to the controller. As §2 motivated, the controller
dynamically updates its decisions using the latest measure-
ments.
The controller does not need to directly monitor the relay
nodes because their performance (including degradation and
failure) would be reﬂected in the end-to-end measurements
made by clients who use the relays. To avoid overloading
the controller, each client could cache the relaying decisions
and refresh periodically though we do not consider this here.
(We discuss implementation issues in §7).
3.2 Potential relaying improvement
Next, we quantify the potential gains of VIA, using an “ora-
cle” control logic, which enjoys the beneﬁt of foresight. For
each call between a source-destination pair, it has knowl-
edge of the average performance of each relaying option on
a given day. As shown in Figure 7, a relaying option could
be either the default (direct) path, a bouncing relay path, or
a transit relay path. For each source-destination pair, the
oracle picks the relaying option that has the best average
performance (i.e., lowest RTT, loss rate, or jitter) for this
source-destination pair on this day— either a relay path or
the direct path.2 We also have information from Skype on
the RTT, loss and jitter between their relay nodes, which we
use in estimating the performance of a transit relay path.
The oracle makes two simplifying assumptions: (1) there
are no load restrictions on the relays or the network back-
bone, and (2) the performance measurements of each relay-
ing option are indicative samples of its actual performance.
In §4.6, we will relax the ﬁrst assumption by introducing a
budget constraint on the fraction of calls being relayed.
Gains from oracle approach: Figure 8 shows the improve-
ment (i.e., reduction) in the values of RTT, loss and jitter
individually as well as the PNR (deﬁned in §2.2). Speciﬁ-
cally, if a statistic goes from b to a, we deﬁne the relative
improvement as 100× ( b−a
b ), which lies between 0 and 100.
The oracle can help reduce RTT, loss and jitter by 30%-
2Picking a day’s granularity gives us sufﬁcient samples for
most of the relaying options. Nevertheless, for the small
fraction of source-destination pairs for which we had suf-
ﬁcient samples on a timescale of minutes, we found that the
oracle still had a signiﬁcant beneﬁt.
60% at median (Figure 8a). Reduction at the tail, which
is of particular signiﬁcance in interactive services, is nearly
40%-65% with the oracle’s choice of relaying. All this trans-
lates to a healthy reduction in the PNR on each of RTT, loss,
and jitter (Figure 8b, left three bars) of up to 53%. Source-
destination pairs with fewer calls between them have a lower
impact on the PNR and its improvement.
We also analyze the reduction in PNR when the three met-
rics are considered together, i.e., improving from a situation
where at least one of the metrics is poor to a situation where
none of the three is poor (i.e., RTT ≤ 320ms, loss ≤ 1.2%,
and jitter ≤ 12ms), while still optimizing for RTT, loss and
jitter individually. Even while optimizing for each of the
three metrics, we can obtain a PNR for “at least one bad”
metric; we conservatively pick the worst among the three for
our analysis. Despite this strict stipulation, we can achieve
reduction of over 30% in PNR (Figure 8b, right-most bar).
Need for dynamic relay selection: Whether the controller
should select relay dynamically depends on how often the
relaying decisions need to be updated. Figure 9 shows the
distribution of the median duration during which the ora-
cle picks the same relaying option for a source-destination
AS pair. The optimal relaying option for 30% of AS pairs
lasts for less than 2 days, and only 20% of AS pairs have
the same optimal relay option for more than 20 days. This,