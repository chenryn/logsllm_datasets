regexp命令使用规则表达式在string里寻找匹配。如果它找到了一个匹配，就会返问“1”
否则返回“0"。expression是regexp命令用来寻找匹配的给定格式。如果该规则表达式在字符串
里被找到了，变量match将被设置为字符串string里匹配上该表达式的那部分内容；而可选的
submatch变量将被设置为字符串匹配了规则表达式里圆括号中的子匹配情况的那些个部分。下
面的例子查找的是一个以“3”开始的数字：
zegxp（3[0-9]*) 3112
regexp{3[0-9]*}5112
或者
加入jaVa编程群：524621833
---
## Page 481
第15章工具命令语言Tcl
463
regxp 3\[0-9]*5112
注意我们需要用花括号或者反斜线来阻止Tel解释命令开头部分里的方括号。可以用来控制
匹配操作情况的选项见表15-6：
表15-6
·nocase
匹配将区分字母的大小写
-indices
使submatch变量被设置为一对切片下标，这对下标值将把匹配到的了字符申分割开
6.regsub命令
regeub 7options? expression string subs: varnane
regsub命令按照一个给定的规则表达式对string进行匹配，然后把--个新字符串写到变量
varname里去。新字符串是sunst参数的一个拷贝，但已经完成了有关的替换。这些替换包括：
“&”或“V0”被替换为匹配字符串。
（中）一
下面的例子把数字中前导的“3”替换为“5"：
regsub{3([0-9]*)}3112（5\1)res
set res
5112
动手试试：字符串匹配和替换
下面是一个字符串匹配和替换操作的例子。
set date1 *Wednenday August 11 1999*
3sat date2 *Saturday apr11 1 2000*
Wednesday August 11 1999
Saturday April 12000
*et veekend *(Saturday|Sunday)"
(Saturday|Sunday)
regexp Sweekend Sdatel
regexp Sweekend $date2 day
pute $day
sotparaedate*（\[A-z][a-z]+）+（\[a-z][a-x]+）+（\[0-9]+）+（\[0-9]+]
Saturday
（+{6-0]1+（+[6-0]）+（+[2-0）（2-V]）+（+[2-v][2v]1
regexp Sparsedate $date2 date day month dom year
puts *sdate breaks into $day. Smonth, $don, $year*
ragsub Sparsedate $date2[\412\3}newdate
Saturday April 1 2000 breaks into Saturday.April,1,2000
puts $newdate
2000 Apri1 1
操作注释：
我们使用了好几个regexp调用把日期匹配为星期几，并把有关信息从日期中提取了出来，我
加入jaVa编程群：524621833
---
## Page 482
464
4Linux程序设计
们用了一个子匹配来重新安排日期的格式、变量parsedate被设置为描述日期值的一个规则表达
式，它使用了以下几个关键格式：
·[A-Z][a-z]+：匹配以一个大写字母开始、由两个或更多个字母组成的单词，比如日期和月
份的名称。
·+：匹配一个或多个连续的空格，比如日期中各个元素之间的空格等。
·[0-9]+：匹配个十进制数字，比如日期中的年份数字等。
当你在匹配或子替换里使用反斜线或方括号时，必须注意保护它们不会因为被放在双引号
里而被扩展或替换掉。另外的办法是使用花括号预防所有的扩展。
15.1.9数组
数组是一组特殊变量组成的集合，对它们进行访问时先要给出数组的名字，后面再紧跟上
一个圆括号中的下标。你不能单独使用数组的名字把它做为--个整体来处理。
Tel支持的数组格式被称为关联数组（associative array）。数组允许使用任意形式的下标切片，
这就使Tcl中的数组成为一个功能强大的概念。也就是说，数组可以使用字符串来寻址它们的元
素。这就使我们能够把通用对象的有关信息保存在一个数组里，而对象本身可以被用做数组的
下标。用一个例子可以说得更明白。
当我们讨论和处理关联数组的时候，下标切片和元素通常被称为关键字和关键值。
set myarray（0)123
pute $ayarray
123
数组下标并不仅仅局限于数字值，但把它们限制为只能是数字或不带空格和特殊字符的字
符串是很有必要的，因为引号/括号的用法和变量的替换会把事情弄得很复杂。比较常见的技巧
是用一个变量来存放下标的值，再把这个变量设置为需要的值。这就省略了与特殊字符打交道
时的难度。
set myarray(orange)1
set myarray(apple)jim
array命今
array option arrayname 7arg arg ...?
数组可以用array命令来处理，这个命令有好几个选项。array命令的选项（及其关联参数）有：
(1)exists选项
array existe arraynane
如果arrayname是一个数组，返回“1”：否则返回“0”。
加入jaVa编程群：524621833
---
## Page 483
第15章工具命令语言Tcl
465
(2)get选项
array get arrayname ?pattern.
它以下标和关联值对的形式返回一个数组元素列表。如果还给出了可选的pattern参数，就只
返问数组里那些下标与模版相匹配（扩展型匹配）的元素。
(3)names选项
azray namee arrayname 7pattern?
它返回一个数组下标名清单，或者只列出那些与pattern匹配的下标。
(4)set选项
array set arraynane list
这个选项的作用是设置数组arayname中的元素。list必须是一个类似于get选项返回值那样包
含着成对的下标及其取值的列表。
(5）size选项
array size arrdynane
它返回一个数组的长度尺寸。
下面是aray命令各种选项的使用示例：
 array exists myarray
array sise myarray
:array nanes syarray
array get myarray
orange 0 apple
array命令还有一些其他的选项，其中的startscarch、anymore、nextelement和donesearch选项
可以对数组元素进行逐个的搜索。详细资料请参考Tel的文档。
15.1.10列表
除字符串和数组以外，Tcl还全面支持列表。列表是成组的Tel对象，数字、字符串以及其他
列表都可以组合到一起进行操作处理。Tcl语言中的列表允许的操作有创建、添加元素、转换为
字符串和从字符串转换为列表、用来控制循环语句等。我们下面就来向大家介绍几个对列表进
行操作的命令。
Tci列表的语法是用花括号括起来的一组数据元素。事实上，我们已经在循环语句的程序体
里见过列表了。
oet myliat{bob(12 3(4 5))fred }
bob (1 2  3(4  5 )) fred
这个赋值语句创建了一个有三个元素的列表：第二个元素本身又是一个四个元素的列表。
注意Tci只有在必要时才会把列表周围的花括号是示出来，以显示其正确的布局结构。类似于数
组和字符串，列表中的元素可以通过位置下标进行访问，这些下标也是从零开始计算的。
加入jaVa编程群：524621833
---
## Page 484
466Linux程序设计
如果你需要使用一个数组，可使用的义都足数字形式的切片下标，就可以考虑使用一个列
表来代替数组。它们通常比更通用的数组更有效率。
1. list命令
llet rarg arg arg ...?
在程序中我们可以道过许多办法创建出列表来，但最简单的办法莫过于使用list命令了。list
命令用自已所有的参数创建出一个列表，列表中的一个元素就是list命令的一个参数的复制品、
如果没有给出参数，list命令就创建一个空列表。
我们需要在必要时加上花括号或反斜线字符，使原始的命令参数可以用lindex命令（说明见
下面）提取出来，而列表则可以用eval命令进行求值（如果第一个参数是某个命令的名字的话）。
如下所示：
get elist [liat puts*Ballo World*)
puts (He1lo World)
Hello World
eval Seliat
2.split命令
split string ?delimaters?
split命令的作用是从一个字符串开始创建出一个列表来。在缺省的情况下，split创建的列表
其各个元素就是string字符串中（彼此以空格隔开）的各个单词。可选的delimiters参数是一个字
符列表，字符串中的单词就是根据这个字符列表中的字符拆分的。一个空的分隔符列表并不意
味着没有分隔符了，而是意味着要把字符串中的全体字符一个一个地拆分为列表的元素。如下
所示：
uplit “hello there jim*
hello there jin
tsplit *hl there everyone(e)
(hith) r ( } v ryon ()
注意，分隔符并不出现在列表里，但如果字符串里有紧挨着的分隔符，就会创建出空元素来
在使用split命令的时候，我们必须对反斜线替换多加注意。“s”将被转换为一个“$”而不
是一个"”和一个“S”。换句话说，如果想把“”用做列表的一个元素，就必须使用“”的
形式。如果想原文包括“$foo”，就必须使用“Sfoo”的形式。
3.join命令
Join list 7delimiters?
join命令的作用正好与split命令相反。它通过递归地把一个列表中的所有元素合并在一起的
办法创建出一个字符串来。它使用可选的delimiters字符串（如果有的话）来分隔各个元素。它
的缺省值是一个空格。如下所示：
join(1 2 fred(bi11 bob) 37)*,*
1.2,fred,bi11 bob,37
4.concat命令
concat ?arg arg arg . ..?
加入jaVa编程群：524621833
---
## Page 485
第15章工具命令语言Tcl
467
concat命令的可以有多个参数，它把这些参数看做是列表并把它们合并在一起。如果你没有
给它提供参数，就会得到一个空结果，而不是一个错误。concat在合并列表的时候会把各个参数
最外层的花括号去掉，从面使列表参数的顶层成员变成为结果列表的顶层成员。
参数的前导空格和足缀空格都会被去掉。每个列表元素用一个空格分隔开。如下所示：
concat (1 2)(3(45) 6) 7 8
1 2 1 (4  5) 6 7 9
5.lappend命令
lappend listver 7arg arg arg - . .?
我们可以用lappend命令往列表里添加新的元素。与使用concat命令创建-个新列表相比，
它一般会更有效率。
lappend命令的每个参数都会被当作一个列表元素而添加到现有的listvar列表里去。新添加的
各个元素彼此之间用一个空格分隔开。注意它与concat的做法是不一样的，它不会去掉最外层的
花括号，每个参数都是按原样添加进去的，如下所示：
 set alist (1 2 3(4 5)}
1 2  3 (4_5)
6.lindex命令
ltndex list index
我们通过lindex命令从一个列表里把下标位置index处的那个元素检索出来。列表元索的下标
编号是从零开始的。如果列表里没有被检索的元素，就将返回一个空字符串。我们可以用关键
字end代替一个下标值来表示列表中的最后一个元素。如下所示：
8et a1ist (1 2 3 (4 5))
lindex Saliat 3
4 5
￥
7.linsert命令
1insert list index arg ?arg arg .. .?
我们可以用linsert命令在列表里插人一个元素。由linsert创建出来的新列表包括list中的元素，
但从index指示的位置之后要插人arg参数。如果index是零（或者是负数），新元素将被放在新列
表的最开始。如果index大于或等于列表list的长度，或者是关键字end，新元素就将被插人到列
表的尾部：注意原来的列表本身并不会受到linsert命令的影响。如下所示：
Ksetalist ((4 5))
linsert Salist 012 3
(4 5}
1insert (1insert $al1st 0 1 2 3)end (6 7 8)
12.3 (45]
13(45)（68]
8.llength命令
1length lis:
加入jaVa编程群：524621833
---
## Page 486
468
Linux程序设计
我们可以用llength命令获得一个列表的长度，它返回的是一个字符串，其内容是一个对应于
列表list长度的十进制数字。空列表返回的长度值是零。如下所示：
1length hel1o
1length *1 2 3#
1length (a b (c d))
注意Tcl会把许多不同的参数自动解释为列表。在这种情况下，加引号或不加引号的字符串
以及用花括号括起来的字符串组都会被看做是列表。字符串中的每个“单词”会被解释为一个
一个的元素。
9.lrange命令
lrange list first 1ast
Irange命令的作用是提取出列表中的-个连续的子集。列表list中从first到last位置之间的元
素会被提取出来做为一个新的列表，它的返回值就是新列表中的那些元素。如下所示：
seta1st(12 3(45)67 8)
1 21(4 5)6 7 8
10.lIreplace命令
lreplace 1ist first last ?arg arg arg . ..7
Ireplace命令的作用是替换列表中的元素。列表list中从first到last位置之间的元素将被替换为
给定的参数。原来的元素将被删除，新的元素将被插人。位置first处的元素必须存在，但将要被
删除的元素个数和将要被插人的个数倒不必是一样的。我们可以用关键字end代替first或last来指
定列表中的最后一个元素。如下所示：
1 23 (45)6.78
eta1ist(123(45)67 8)
1repiace Salist 2end bi11 (bob joe)
1 2 bi11 (bob joe)
11.1search命令