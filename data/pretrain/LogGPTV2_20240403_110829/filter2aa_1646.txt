Weaponize Your Feature 
Codes
By MasterChen
Who Am I?
• GreyNoise Podcast Co-Founder and Co-Host https://greynoi.se
• SYNShop Hackerspace member http://synshop.org
• 2014 & 2016 BSidesLV Speaker
• “What I Learned As A Con Man”
• “A Peek Behind Vegas Surveillance”
• 2015 DC Skytalks Speaker
• “Automate Your Stalking”
• 2600: The Hacker Quarterly 
• “Asterisk: The Gatekeeper”
• “Asterisk: The Busybox”
Why this talk?
• I became enamored with phone phreaking after DEF CON 15, but I 
missed the boat!
• Wait… phreaking isn’t dead! We have VoIP!
• Today’s focus
• Call flooding using feature codes
• SMS flooding using feature codes
• Caller ID spoofing using feature codes
• Potential for even more “features”
Basic Terminology
• Vertical Service Code (aka Star Code, Feature Code): is a special code 
dialed that engages some type of special telephone service
• Private Branch eXchange (PBX): telephone exchange/switching system 
that serves a private organization and performs concentration of 
central office lines or trunks and provides intercommunication 
between a large number of telephone stations in the organization.
The History of the Feature Code
• Developed by AT&T; Custom Local Area Signaling Service (CLASS) in 
1960s & 70s
• CLASS was an AT&T trademark, so “vertical service code” was 
adopted by North American Numbering Plan Administration
• Called “vertical” because the codes were used on the local Central 
Office (CO) and not horizontally to a different telephone company
Our Feature Codes
North American Numbering Plan Administration (NANPA)
What Do We Mean By “Weaponize”?
• Weaponize (v.): convert to use as a weapon
• Feature codes aren’t inherently malicious 
• Scope of damage
• Simple annoyance to business and personal relationship disruption
Materials You Will Need
• Linux machine
• Asterisk Software PBX by Digium installed on that Linux Machine
• VoIP service provider (Vitelity, Bandwidth, Ring Central, etc)
• Hard/Soft phone registered with your PBX
• Imagination
The Structure of Our Feature Codes
• [context-label] : This denotes the start of a context in Asterisk; 
basically, a piece of your dial plan
• *4X. : 
• * is the beginning of the feature code you will use to start the feature
• 4 is from what we selected earlier to preserve the standard vertical service 
codes
• X is a placeholder for any number between 0-9 (we don’t have that many 
features….yet.
• . Tells Asterisk to accept any numbers after “ as input from the user.
• Example: *427028675309
*40 - The Call Flood
*40 – The Call Flood (continued)
*40 = The Call Flood (continued)
• Demo time!
*40 - Mitigation Techniques
• Pattern matching call drop (Asterisk)
• Beaten by changing Caller ID on a per call basis (in the call script)
• What about phones that do not hide behind a PBX?
*41 – The SMS Flood
*41 – SMS Flood (continued)
• Demo time…. Again!
*41 Practical Use
• Click the malicious link. It will make this all go away.
• The crazy “3 AM” texts from a mistress.
*41 – SMS Flood Mitigation
• Up to the carrier to limit delivery of SMS
• Use Google Voice (Flood works against Project Fi)
• Turn off your cell phone!
• …just kidding. The flood will continue when the phone turns back on
*42 – A Spoofy Ghost
*42 – Stop!
*42 – Spoofing is NOT new, but still practical
• Used in social engineering attack vectors to gain trust
• Voicemail hacking, but this is becoming less viable
So what about all that Imagination talk?
• We still have *43 - *49 at our 
disposal
• Preset attack structures
• Nmap scan with IP address as 
dialed input?
• Ideas from the audience?
• Launch automated campaigns 
without being at a computer
References
• Vertical Service Codes (Wikipedia) -
https://en.wikipedia.org/wiki/Vertical_service_code
• DC2016 github repo - https://github.com/MasterChenb0x/DC2016
Conclusion