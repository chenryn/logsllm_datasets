.NET 下的⼏种可执⾏⽂件
在net中,⽐较常⻅的⼏种脚本后戳名有,aspx,ashx,asmx,svc等等。(asp等其实并不是由net程序去处理)
在net程序中所有未预编译的程序最终都会进⼊BuildManager, System.Web.Compilation.BulidManager 负责
整站的动态编译。
如果开发者在程序根⽬录的 PrecompiledApp.config 中设置了不更新编译内容后,那么最终在 BuildManager
的 GetVPathBuildResultInternal ⽅法中会进⾏判断，如果⽤户设置了禁⽌更新编译内容且此时程序内置变
量 allowBuildInPrecompile 为false（反向为true）。那么就会抛出程序未预编译的异常
不同后戳的程序会交给不同的handler进⾏处理，⽽这些handler最终都会⾛向GetVPathBuildResultInternal,来
判断程序是否需要编译。
⽽⼤多数handler在进⼊GetVPathBuildResultInternal时。对allowBuildInPrecompile的赋值都是false
因此，判断后戳程序是否为可执⾏程序,只需要跟进其处理的handler,看它最终是否会进⼊
GetVPathBuildResultInternal或者⼀些其他动态编译⽅法就可以。
在net.framework框架初始的web.config就定义了⼀些⽂件的处理handler。
⽂件路径:C:\Windows\Microsoft.NET\Framework64{version}\Config\Web.config
如常⻅⼏种⽂件类型所对应的处理handler
aspx  ->  System.Web.UI.PageHandlerFactory 
ashx  ->  System.Web.UI.SimpleHandlerFactory 
asmx  ->  System.Web.Script.Services.ScriptHandlerFactory 
svc   ->  System.ServiceModel.Activation.HttpHandler 
通过初始web.config中可以看到net程序中其实还有很多可执⾏程序的⽂件类型。
如⽐较冷⻔,且鲜为⼈知的⼏种类型:
rem  ->  System.Runtime.Remoting.Channels.Http.HttpRemotingHandlerFactory 
soap ->  System.Runtime.Remoting.Channels.Http.HttpRemotingHandlerFactory 
xamlx  ->  System.Xaml.Hosting.XamlHttpHandlerFactory 
这⾥主要讲解soap,可⻅rem和soap的处理handler其实是同⼀个,在 HttpRemotingHandlerFactory 的
GetHandler ⽅法中，当请求⽅法为GET且⽂件真实存在时。会先交由 WebServiceHandlerFactory 去处理
⽽后续也会调⽤ GetCompiledType ⽅法进⼊ BulidManager 对⽂件内容进⾏动态编译处理。
soap本身实现的是⼀种远程服务，在写法上，soap和asmx类似。soap需要继承 MarshalByRefObject ,⽽
asmx则继承 WebService
如Demo:
using System; 
using System.Web; 
using System.IO; 
using System.Net; 
using System.Text; 
using System.Data; 
using System.Data.SqlClient; 
using System.Collections.Generic; 
using System.Diagnostics; 
using System.Web.SessionState; 
using System.Web.Services; 
using System.Xml; 
using System.Web.Services.Protocols; 
public class Test : MarshalByRefObject 
{ 
    [WebMethod(Description="Test")] 
    public string Chopper(String name) { 
return name; 
    } 
} 
上传到web根⽬录就可以直接运⾏，因为soap格式的处理在net框架的web.config中就已经声明了。除⽤户⾃
定义了后戳的处理handler或者删掉了不需要使⽤的handler。在net中默认可以使⽤.soap后戳的可执⾏程序 
在调⽤上,soap和asmx类似,不过需要有⼀个地⽅需要注意,在⻚⾯提供测试⽅法以及测试的具体请求包是不能
直接调⽤的，需要先在 x.soap?wsdl 中获取到 soapAction .然后加⼊到请求头中。就可正常调⽤相关⽅法。