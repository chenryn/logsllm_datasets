[22], pages 703–720.
[20] P. Kocher. Leak resistant cryptographic indexed key
update. US Patent 6539092.
[21] Paul C. Kocher, Joshua Jaﬀe, and Benjamin Jun.
Diﬀerential power analysis. In Michael J. Wiener,
editor, CRYPTO, volume 1666 of Lecture Notes in
Computer Science, pages 388–397. Springer, 1999.
[22] Mitsuru Matsui, editor. Advances in Cryptology -
ASIACRYPT 2009, 15th International Conference on
the Theory and Application of Cryptology and
Information Security, Tokyo, Japan, December 6-10,
2009. Proceedings, volume 5912 of Lecture Notes in
Computer Science. Springer, 2009.
[23] Silvio Micali and Leonid Reyzin. Physically observable
cryptography (extended abstract). In Moni Naor,
editor, TCC, volume 2951 of Lecture Notes in
Computer Science, pages 278–296. Springer, 2004.
[24] Daniele Micciancio, editor. Theory of Cryptography,
7th Theory of Cryptography Conference, TCC 2010,
Zurich, Switzerland, February 9-11, 2010. Proceedings,
volume 5978 of Lecture Notes in Computer Science.
Springer, 2010.
[25] Moni Naor and Gil Segev. Public-key cryptosystems
resilient to key leakage. In Halevi [14], pages 18–35.
[26] Jesper Buus Nielsen. Separating random oracle proofs
from complexity theoretic proofs: The non-committing
encryption case. In Advances in Cryptology -
CRYPTO 2002, volume 2442 of Lecture Notes in
Computer Science, pages 111–126. Springer, 2002.
[27] ECRYPT Networck of Excellence in Cryptology. The
estream project. http://www.ecrypt.eu.org/stream/,
2008.
[28] Christophe Petit, Fran¸cois-Xavier Standaert, Olivier
Pereira, Tal Malkin, and Moti Yung. A block cipher
based pseudo random number generator secure against
side-channel key recovery. In Masayuki Abe and
Virgil D. Gligor, editors, ASIACCS, pages 56–65.
ACM, 2008.
[29] Krzysztof Pietrzak. A leakage-resilient mode of
operation. In Joux [17], pages 462–482.
[30] Jean-Jacques Quisquater and David Samyde. Eddy
149current for Magnetic Analysis with Active Sensor. In
Esmart 2002, Nice, France, 2002.
[31] M. Renauld and F.-X. Standaert. Algebraic
side-channel attacks. to appear in the proceedings of
Inscrypt 2009, Lecture Notes in Computer Science,
Behing, China, December 2009, Springer, Cryptology
ePrint Archive, Report 2009/279.
http://eprint.iacr.org/2009/279.
[32] M. Renauld, F.-X. Standaert, and
N. Veyrat-Charvillon. Algebraic side-channel attacks
on the aes: Why time also matters in dpa. In
Proceedings of CHES 2009, volume 5746 of LNCS,
pages 97–111, Lausanne, Switzerland, sep 2009.
Springer.
[33] Fran¸cois-Xavier Standaert, Tal Malkin, and Moti
Yung. A uniﬁed framework for the analysis of
side-channel key recovery attacks. In Joux [17], pages
443–461.
[34] Francois-Xavier Standaert. How leaky is an extractor?
in the proceedings of LatinCrypt 2010, Lecture Notes
in Computer Science, vol 6212, Puebla, Mexico,
August 2010.
[35] Francois-Xavier Standaert, Olivier Pereira, Yu Yu,
Jean-Jacques Quisquater, Moti Yung, and Elisabeth
Oswald. Leakage resilient cryptography in practice. in
“Towards Hardware Intrinsic Security: Foundation
and Practice”, pp 105- 139, Springer, 2010, Cryptology
ePrint Archive, Report 2009/341, 2009.
http://eprint.iacr.org/.
[36] Serge Vaudenay. Decorrelation: A theory for block
cipher security. J. Cryptology, 16(4):249–286, 2003.
[37] Yu Yu, Olivier Pereira, and Francois-Xavier
Standaert. Leakage-resilient stream ciphers: Bridge
the gap. UCL Crypto Group Technical Report, 2010.
APPENDIX
A. PROOF OF THEOREM 1
Proof of Theorem 1. Let A2PRG(1n) be an adversary
who wins the PredA2PRG,L(n) game with probability 1
2 + η(n),
and let p be a polynomial such that p(n) is an upper bound
on the number of request queries made by A2PRG(1n). Let
Queryl (resp. Querya) be the event that A2PRG(1n) makes a
query to 2PRG on the last key ki (resp. any key) computed
by the challenger before the test query is made.
We distinguish between the cases where the Queryl event
happens or not: Pr[PredA2PRG,L(n) = 1] ≤ Pr[PredA2PRG,L(n) =
1 ∧ ¬Queryl] + Pr[Queryl].
The probability Pr[PredA2PRG,L(n) = 1∧¬Queryl] is bounded
2 + p(n)2
by 1
2n , which is the sum of the probability of a pure
guess and an upper bound on the probability that a colli-
sion happens between PRG’s last output and an output of a
previous round.
pose we build an adversary A(cid:48)2PRG as follows.:
We now show that Pr[Queryl] is negligible. To this pur-
Adversary A(cid:48)2PRG:
1. On input 1n, start an instance of A2PRG with input 1n,
and record all interactions between A2PRG and the 2PRG
oracle.
2. Pick j ← [0, p(n)] and r0 ← {0, 1}n uniformly at ran-
dom, and set a counter i to 0.
j (k1, x1), x1, Li
j+1(x1)).
i(ri−1), yi and Lo
formly at random and submit that value to A2PRG.
3. Ask a challenger to pick k0 ∈ {0, 1}n uniformly at ran-
dom, to compute (k1, x1) := 2PRG(k0) and to provide
(Lo
4. On each request query from A2PRG, proceed as follows:
increment the counter i, select (ri, yi) ← ({0, 1}n)2 uni-
formly at random, and submit Li
i (ri, yi)
to A2PRG, unless i = j in which case Lo
j (k1, x1), x1 and
Li
j+1(x1) are submitted instead.
5. On the test query from A2PRG, pick yi+1 ← {0, 1}n uni-
6. Let {z1, . . . , zq} be the set of requests made by A2PRG
to 2PRG until it halts. Output an element z selected
uniformly at random into that set.
The strategy of adversary A(cid:48)2PRG is based on the assump-
tion that, in a normal run of the PredA2PRG,L(n) experiment,
A2PRG would make a query on (at least) one of the keys in-
volved in the experiment. So, A(cid:48)2PRG makes a uniform guess
on the index of the ﬁrst key on which such a query is made;
guessing the ﬁrst queried key ensuring that that key will
only be correlated to one thing: the corresponding leakages
(and not any previous call on 2PRG). This guess will be cor-
p(n)+1 . Then, A(cid:48)2PRG provides leakages
rect with probability
to A2PRG computed from random values of its own choice,
except for the j index, for which the leakages and PRG out-
put are replaced by those obtained from a challenger for
the seed-preserving property. A(cid:48)2PRG also provides a random
value yl+1 as ﬁnal input to A2PRG. If the guess on the index j
is correct, all the inputs sent to A2PRG are distributed exactly
as in the PredA2PRG,L(n) experiment, as long as A2PRG does not
make a query on the value k1 computed by the challenger.
Therefore, when A2PRG halts, A(cid:48)2PRG can select one of the
inputs of the q queries made by A2PRG and, if A2PRG made a
query on k1, that guess will be correct with probability 1
q .
So, eventually, we have that Pr[z = k1|Querya] =
q(p(n)+1) .
Pr[Querya] , and
that Pr[Queryl] ≤ Pr[Querya], which implies that Pr[Queryl] ≤
q(p(n) + 1) Pr[z = k1].
Eventually, we observe that A(cid:48)2PRG runs in PPT: A2PRG
runs in PPT, and the leakage functions can be evaluated
in PPT too. Therefore, since the leakage function family L
is uniformly seed-preserving, there is a negligible function
 such that Pr[z = k1] ≤ (n). As a result, Pr[Queryl] ≤
q(p(n) + 1)(n), which is negligible.
Now, we observe that Pr[z = k1|Querya] ≤ Pr[z=k1]
1
So, we have that Pr[PredA2PRG,L(n) = 1] ≤ 1
2 + p(n)2
2n +
1
q(p(n) + 1)(n), as desired.
B. PROOFS OMITTED IN SECTION 4.2
We will use the following well-known lemmas in the proofs.
(Triangle inequality). If δs1 (X; Y ) ≤ 1,
and δs2 (Y ; Z) ≤ 2, then δmin{s1,s2}(X; Z) ≤ 1 + 2.
Lemma 4
Lemma 5
(Replacement lemma). For δs(X; Y ) ≤ ,
and for function f with circuit-size complexity size(f ), it
holds that δs−size(f )(f (X); f (Y )) ≤ .
Proof of Theorem 2. First, by applying two 2-source
extraction on ˜K(cid:96) and Pρ((cid:96)) (see the parameter settings in
the proof of Lemma 3), we have:
( ˜X(cid:96)+1|(cid:103)view(cid:96)) ≤ 6 · 
1
12 .
d
2·s
2λ+2·n2κ
150We have also by Lemma 3 and the replacement lemma that:
(( ˜X(cid:96)+1, (cid:103)view(cid:96)); (X(cid:96)+1, view(cid:96))) ≤ (12(cid:96)+2)·
((Uκ, (cid:103)view(cid:96)); (Uκ, view(cid:96))) ≤ (12(cid:96) + 2) · 
1
12 .
1
12 ,
δ
2·s
2λ+2·n2κ
−(cid:96)·sf,F
which also implies that:
δ
2·s
2λ+2·n2 κ
−(cid:96)·sf,F
Therefore, we complete the proof by applying triangle in-
equalities to the above.
Proof of Lemma 3. We denote by simi+1 the algorithm
that on input (viewi,Ki), simulates the physical implemen-
tation of the stream cipher for round i + 1 and outputs
the updated view viewi+1. The case for (cid:96) = 1 holds by
Lemma 2 (we will deal with the parameters at the end of
the proof). It then remains to show by induction on (cid:96) that
if the above statement holds for (cid:96) = i with computational
distance (i, si) then it must hold for (cid:96) = i + 1 with distance
12 ,si − sf,F ). Assume without loss of generality
(i + 12 · 
that i is even, and hence the case for (cid:96) = i (by applying
simi+1) implies:
1
δsi−sF,f ( (viewi+1(P0, P1, K0), Ki+1),
((cid:103)viewi(P0, P1, K0), Li+1( ˜Ki, P0), ˜Xi+1, K i+1
(cid:125)
By hypothesis ( ˜Ki, ˜Xi) and (cid:103)viewi \ ˜Xi are independent given
) ) ≤ i.
(cid:123)(cid:122)
˜Ti, and that (1) and (2) hold for (cid:96) = i, it thus follows by
Lemma 1 that with probability 1 − 2b:
F( ˜Ki,P0)
(cid:124)
(3)
which in turn implies that:
dsa (( ˜Xi+1, K i+1)|(cid:103)viewi(P0, P1, K0)) ≤ a,
δsa ( (cid:103)viewi(P0, P1, K0); (cid:103)viewi(P0, Un, K0)
| ( ˜Xi+1, K i+1, P0) ) ≤ 2·a.
(4)
(5)
(6)
δ2
H∞(P
(cid:48)
1, K0)
| (K i+1, ˜Xi+1, P0, Li+1( ˜Ki, P0)) ) ≤ 2·b,
1| (K i+1, ˜Xi+1, P0, Li+1( ˜Ki, P0))) ≥ n − ∆,
(cid:48)
Then, by Lemma 2 when (5) is additionally conditioned on
Li+1( ˜Ki, P0) it yields:
b·sa/8κ( (cid:103)viewi(P0, P1, K0); (cid:103)viewi(P0, P
where with probability 1 − b (taken over ((cid:103)viewi, ˜Ki)):
and (cid:103)viewi(P0, P (cid:48)
with (cid:103)viewi(P0, P1, K0) replaced with independent (cid:103)viewi(P0,
b·sa/8κ(K i+1; ˜Ki+1| (cid:103)viewi(P0, P
(cid:125)
1, K0) is independent of (K i+1, ˜Xi+1) condi-
tioned on (P0, Li+1( ˜Ki, P0)) since Li+1 takes only ˜Ki and P0
(i.e., not P1) as input. Again by applying Lemma 2 to (4)
(cid:123)(cid:122)
(cid:48)
1, K0), ˜Xi+1, Li+1( ˜Ki, P0)
(cid:103)viewi+1(P0,P (cid:48)
P (cid:48)
1, K0), we have:
(cid:124)
δ2
(7)
)
1,K0)
≤ 2·b,
(8)
1, K0)
1, K0)) ≥ κ − ∆,
(cid:48)
H∞( ˜Ki+1|(cid:103)viewi+1(P0, P
where with probability 1 − b over: (cid:103)viewi+1(P0, P (cid:48)
and (cid:103)viewi+1(P0, P (cid:48)
(9)
1, K0) \ ˜Xi+1 and ( ˜Ki+1, ˜Xi+1) are inde-
def
pendent conditioned on ˜Ti+1
= (P0, Li+1( ˜Ki, P0)). We thus
prove the case for (cid:96) = i + 1 by applying triangle inequali-
ties to (3), (6) and (8), and the min entropy conditions for
(cid:96) = i + 1 hold by (7) and (9).
Parameter settings. Following [29], set ∆ = 2λ, b =
2−λ+1, and thus b≤2
12 , and λ = log(−1)/6.
1
151