### LA-MAE
#### Geniuty
#### Cogent
#### Verio
#### Los Nettos Network
#### Trace Machine

**Figure 3:** The trace machine monitors two of the four peering links at Los Nettos.

A key characteristic is that it captures the trend in the frequency distribution of the spectra. Our results are insensitive to the particular choice of quantile, as examined in detail in Section 7.

## 5. EVALUATION

In this section, we present our trace collection infrastructure and our experimental analysis based on attacks captured at Los Nettos. Validation of these results is presented in the next section.

### 5.1 Attack Detection

We tested the framework described in Section 4 using attacks captured at Los Nettos, a moderate-sized ISP located in Los Angeles [20]. Over a period of five months, from July 2002 to November 2003, we captured 80 large-scale attacks.

Los Nettos has four major peering links with commercial ISPs. Due to limited mirroring capacity, we were only able to monitor two of these links, as shown in Figure 3. Los Nettos serves a diverse clientele, including both academic and commercial customers.

The trace machine is an off-the-shelf Intel P4 1.8GHz with 1GB of RAM running FreeBSD 4.5. We use a Netgear GA620 1000BT-SX NIC and modified the driver to support partial packet transfer from the NIC to the kernel. The typical daytime load is 140Mb/s with a mean of 38K packets/s. Measurement drops (as reported by tcpdump) are usually below 0.04% during normal operation, rising to 0.6% during attacks that increase packet rates to 100K packets/s.

We continuously capture packet headers using tcpdump, creating a trace file every two minutes. Each trace is then post-processed and flagged as containing a potential attack if either of two thresholds are reached: (a) the number of sources that connect to the same destination within one second exceeds 60, or (b) the traffic rate exceeds 40K packets/s. These thresholds were determined by observing the traffic seen at the observation point. Traces that are not flagged as an attack are discarded. We identify and ignore known servers that would trigger these thresholds through normal traffic. Finally, we manually verify each flagged trace to confirm the presence of an attack. The automated thresholding works reasonably well but provides a false positive rate of 25–35%. Ongoing attacks that do not meet the thresholds are not identified, leading us to miss many small DoS attacks, including some that could incapacitate a dial-up line.

We monitor both inbound and outbound traffic. Since we monitor the two busiest peering links, we believe we capture most of the attack traffic for attacks terminating within Los Nettos, missing only portions from the peering links we do not monitor and from attackers within Los Nettos. For attacks transiting through Los Nettos, our monitoring point may not be exposed to the full intensity of the attack since there may be attackers outside Los Nettos and we do not monitor all external links of Los Nettos. The distinction between transient and terminating attacks becomes important when projecting the number of attacks in Section 8.3.

| **Attack Class** | **# Attacks** | **Range (packets/s)** | **Range (kbits/s)** |
|------------------|---------------|-----------------------|---------------------|
| Single-source    | 37            | 2700–93000            | 17000–100000        |
| Multi-source     | 10            | 3000–33000            | 300–98000           |
| Reflected        | 20            | 340–13000             | 400–68500           |
| Unclassified     | 13            | 350–82500             | 300–98000           |

**Table 1:** Number of attacks in each class based on header analysis

| **Protocol** | **Packet Type** | **TCP** | **ICMP** | **UDP** | **Other** |
|--------------|-----------------|---------|----------|---------|-----------|
| SYN          | 2               | 5       | 9        | 15      | 5         |
| ACK          | 2               | 5       | -        | -       | -         |
| SYN-ACK      | -               | -       | -        | -       | -         |
| no flags     | 1               | 1       | -        | -       | -         |
| unusual      | 1               | 5       | -        | -       | -         |
| state exploit| 2               | 5       | -        | -       | -         |
| echo request | -               | -       | 16 (3)   | -       | -         |
| echo reply   | -               | -       | -        | -       | -         |
| invalid      | -               | -       | -        | -       | -         |
| all          | 3               | -       | -        | -       | -         |
| ip-proto 0   | -               | -       | -        | -       | -         |
| ip-proto 255 | -               | -       | -        | -       | -         |
| fragmented   | -               | -       | -        | -       | -         |

**Table 2:** Detailed analysis of packet headers. S indicates single-source, M indicates multi-source, R indicates distributed reflectors, and U indicates unclassified attacks. The number in parentheses indicates attacks terminating within our ISP, while the first number indicates total attacks.

### 5.2 Packet Headers Analysis

First, we classify attacks based on packet header information alone. As shown in Table 1, we classified 67 attacks (all but 13) using this method. Table 2 shows a more detailed breakdown of attacks based on manual analysis with tcpdump. The packet type categories listed in Table 2 are not mutually exclusive since some attack streams carry multiple packet types.

From header analysis, we can make several observations about the prevalence of attack techniques in the wild. First, 87% of the zombie attacks use illegal packet formats or randomize fields, indicating the presence of root access on the zombies. Use of the TCP protocol was most common, with reflection attacks typically exploiting web servers (port 80) and FTP servers (port 21). In Table 2, "TCP no flags" refers to pure data packets with no flags set, while "unusual" refers to attacks that use non-standard (but not always invalid) combinations of TCP flags, such as setting all the flags. "State exploit" refers to attacks that exhaust OS data-structures based on the TCP-state diagram, such as ESTABLISHED or FIN-WAIT1 states [1]. Even though TCP-SYN attacks belong to this class, we list them separately since they are common.

ICMP is the next protocol of choice. The echo reply attack was the most popular reflector attack, as most Internet hosts respond to an echo request packet, allowing the attacker to choose from a large number of possible reflectors. The remaining ICMP attacks use echo request packets or invalid ICMP codes. UDP and undefined protocols were less frequently used in the attacks. Finally, we detected five attacks that use a combination of protocols, such as TCP, ICMP, UDP, and IP proto-0.

### 5.3 Arrival Rate Analysis

This section investigates the relationship between attack rate and attacker population. We captured attacks with peak rates ranging from 300 packets/s to 98K packets/s. Figure 4 shows the correlation between the attack classes and attack rate. In Figure 4(a), we plot the peak attack rates in Kbits/s on the x-axis against packets/s on the y-axis in logarithmic scale for each attack. Not surprisingly, single-source attacks are clustered toward lower packet rates, whereas direct multi-source attacks exhibit higher rates, likely due to the aggregation of traffic from multiple zombies. In reflection attacks, many reflectors are typically employed to generate high attack aggregates without overloading the reflectors. The captured reflection attacks have a much lower intensity than direct multi-source attacks since the observation point might not be exposed to the complete intensity of the attack.

To statistically confirm that the attack rates of single-, multi-source, and reflected attacks have different means, we performed a Kruskal-Wallis one-way ANOVA test [5]. We consider the null hypothesis, H0, which states there is no relation between the attack rates and attack class. The alternative hypothesis, Ha, states there is a relation between attack rate and class. If H0 is true, the variance estimate based on within-class variability should be approximately the same as the variance due to between-class variability. This test defines an F ratio that evaluates the two variance estimates; if the F ratio is significantly greater than 1, the test is statistically significant, and we can conclude that the means for the three classes are different from each other and reject H0. It also defines a p-value, the probability of observing the sample result assuming H0 is true. Hence, a smaller p-value provides higher confidence in rejecting H0. For the data in Figure 4(a), the F ratio is 37, indicating a strong relation between the attack rates and the attack classes. Further, the p-value is 1.7×10−11, indicating a very low probability of H0 being correct.

The box plot in Figure 4(b) provides a graphical representation of the means of different classes. The lower and upper lines of the box indicate the 25th and 75th percentiles of attack rates, making the distance between the top and bottom of the box the interquartile range. The line in the middle of the box is the median attack rate for the attack class. The "whiskers" (lines extending above and below the box) show the range of the attack rate, except for outliers indicated by a "+" marker. Single-source attacks have the lowest median, while the median and range of the multi-source attacks are significantly higher than those of single-source and reflected attacks.

### 5.4 Ramp-up Behavior Analysis

To identify the presence of multiple sources when the header is forged, we measure the attack's ramp-up behavior (changes in the traffic volume of the attack as a function of time). Of the attacks we observed, single-source attacks typically exhibit no ramp-up, while all multi-source attacks showed ramp-up behavior, ranging from 200ms to 14s.

Figure 5 illustrates the attack ramp-up for two observed attacks. Figure 5(a) shows an attack where packet headers were not forged, and thus the attacker population was visible. The graph shows a three-second ramp-up at about 27s as the number of attackers gradually increases to six. The attack reaches a peak rate of 78K packets/s with 14 active sources. We observe a total of 40 unique IP addresses during the attack. Figure 5(b) shows an attack where the last eight bits of the source address are forged. The attack is classified as a multi-source attack since it exhibits a ramp-up, rising from 6K packets/s to 52K packets/s in 14 seconds. In this attack, the source addresses and ID field are spoofed, and all packets have the same TTL value, making it difficult to classify the attack based on header content. The presence of transient ramp-up behavior in the first few seconds of the attack strongly suggests the presence of multiple sources. We also verified it is a multi-source attack via spectral analysis.

### 5.5 Spectral Content Analysis

In this section, we demonstrate that spectral analysis of the attack time-series (described in Section 4.3) can distinguish between single- and multi-source attacks, even if all headers are spoofed. Because the traffic spectrum is influenced by OS and network behavior, we argue that it will be difficult for attackers to easily conceal their spectrum without reducing attack effectiveness. We review this claim more carefully in Sections 6 and 7. For now, we present example spectra to illustrate the technique.

[Insert Figures 4 and 5 here]