In the Celery logs, I see the following message:

```
Task blabla.bla.bla[arguments] succeeded in 0.757446050644s: None
```

I would like to replace the `None` with a more meaningful value. I have attempted to set a return value within the task, but it did not work.

**Assistant:**

It sounds like you might have `ignore_result=True` set for your task or `CELERY_IGNORE_RESULT` set to `True` in your configuration. If that is the case, you should try disabling it. When `ignore_result` is set to `True`, Celery does not store or return the result of the task, which is why you are seeing `None` in the log. 

To fix this, ensure that `ignore_result` is set to `False` in your task definition, or set `CELERY_IGNORE_RESULT` to `False` in your Celery configuration. For example:

```python
from celery import Celery

app = Celery('my_app', broker='redis://localhost')

@app.task(ignore_result=False)
def my_task(arguments):
    # Your task logic here
    return "Meaningful result"
```

Alternatively, if you are using a configuration file, you can set:

```python
CELERY_IGNORE_RESULT = False
```

This should allow the task's return value to be stored and displayed in the logs.