title:POSTER: Traffic Splitting to Counter Website Fingerprinting
author:Wladimir De la Cadena and
Asya Mitseva and
Jan Pennekamp and
Jens Hiller and
Fabian Lanze and
Thomas Engel and
Klaus Wehrle and
Andriy Panchenko
POSTER: Traffic Splitting to Counter Website Fingerprinting
Wladimir De la Cadena
University of Luxembourg
PI:EMAIL
Jens Hiller
RWTH Aachen University
PI:EMAIL
Asya Mitseva
University of Luxembourg
PI:EMAIL
Fabian Lanze
Huf Secure Mobile GmbH
PI:EMAIL
Jan Pennekamp
RWTH Aachen University
PI:EMAIL
Thomas Engel
University of Luxembourg
PI:EMAIL
Klaus Wehrle
RWTH Aachen University
PI:EMAIL
Andriy Panchenko
BTU Cottbus
PI:EMAIL
ABSTRACT
Website fingerprinting (WFP) is a special type of traffic analysis,
which aims to infer the websites visited by a user. Recent studies
have shown that WFP targeting Tor users is notably more effective
than previously expected. Concurrently, state-of-the-art defenses
have been proven to be less effective. In response, we present a novel
WFP defense that splits traffic over multiple entry nodes to limit
the data a single malicious entry can use. Here, we explore several
traffic-splitting strategies to distribute user traffic. We establish that
our weighted random strategy dramatically reduces the accuracy
from nearly 95% to less than 35% for four state-of-the-art WFP
attacks without adding any artificial delays or dummy traffic.
1 INTRODUCTION
In the age of mass surveillance, users rely on different anonymiza-
tion techniques to ensure freedom of speech and to reduce their
overall tracking on the Internet and in the IoT [9]. The Tor net-
work [1]—currently the most popular low-latency anonymization
network—promises to hide the identities (i.e., IP addresses) of users
while communicating on the Internet. To accomplish this goal, user
traffic is encrypted in multiple layers and encapsulated in fixed-size
packets, called cells. These cells are transmitted through a virtual
tunnel, i.e., circuit, over three nodes, called onion relays (ORs). The
ORs are known as entry, middle, and exit depending on their po-
sition on the path to the destination. Primarily, Tor promises to
offer user anonymity in the presence of a local passive adversary,
e.g., a malicious entry OR. However, Tor is not able to conceal the
size, direction, and timing of transmitted cells. An adversary can
passively exploit this side-channel leakage and apply website fin-
gerprinting—a special type of traffic analysis attack—to identify the
content (i.e., the visited website) of anonymous user connections
without breaking the encryption [7, 12, 15, 16].
Website Fingerprinting (WFP) usually corresponds to a su-
pervised machine learning (ML) problem, in which the adversary
Permission to make digital or hard copies of part or all of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for third-party components of this work must be honored.
For all other uses, contact the owner/author(s).
CCS ’19, November 11–15, 2019, London, United Kingdom
© 2019 Copyright held by the owner/author(s).
ACM ISBN 978-1-4503-6747-9/19/11.
https://doi.org/10.1145/3319535.3363249
first defines a set of websites he wants to detect and collects traces of
multiple page loads for each of them. Next, he extracts patterns, i.e.,
fingerprints, for each website and applies ML to train a classifier that
differentiates them. Finally, the adversary uses the classifier to iden-
tify the visited website corresponding to an unknown trace of a real
user. Recent studies have concluded that WFP is more successful
than previously expected [7, 15, 16] and available countermeasures
(cf. Section 2) are less effective than previously assumed [15].
Our Contributions. We propose to limit WFP attacks with a
novel user-controlled traffic-splitting countermeasure, which dis-
tributes traffic between the user and the middle OR over multiple
entry ORs to limit the information available to an attacker who
controls a subset of all used entry ORs. This design requires users to
select an effective traffic-splitting strategy. In this paper, we explore
several traffic-splitting strategies, which can serve as candidates for
adoption in our multipathing architecture [14]. In particular, we an-
alyze the efficiency of these strategies against modern WFP attacks
by conducting a simulative evaluation with four state-of-the-art
fingerprinting classifiers.
2 RELATED WORK
Research has presented countermeasures to protect users against
WFP attacks. To remove website-specific patterns, several defenses
add dummy traffic to generate a continuous data flow: BuFLO [5]
sends multiple cells in bursts—with fixed size and time between
bursts—at the cost of high bandwidth and latency overhead. To re-
duce this overhead, CS-BuFLO [2] and Tamaraw [3] cluster websites
of similar size in a group and pad the number of transfered bytes for
each page to the maximum in the corresponding group. However,
these defenses introduce relatively high overhead in bandwidth
and time and are not applicable in practice [15]. WTF-PAD [10]
probabilistically fills gaps in the traffic with dummy packets to
hide website-specific bursts. Walkie Talkie (WT) [17] modifies the
browser to communicate in a half-duplex mode. Instead of sending
packets at arbitrary times, it buffers and pads traffic in one direction
to transmit it in bursts. WTF-PAD and WT have been considered for
adoption into Tor due to their relatively moderate overhead [6, 11],
but recent work proved them to be less effective than previously
assumed [15]. Hence, no suitable candidate for adoption exists.
Like our work, Henri [8] proposes splitting traffic exchanged
between the user and the entry OR over two different, unrelated
network connections (e.g., using several ISPs via DSL, Wi-Fi, or
satellite or cellular networks). Thus, it fails to provide any protection
against malicious ORs. Although Henri evaluates different splitting
strategies for traffic distribution, he does not analyze the influence
of the number of used network connections on the accuracy of WFP
attacks—one of the main contributions in our work (cf. Section 3).
Moreover, the author does not investigate the efficiency of his
splitting strategies against the most robust WFP attack [15].
3 OUR TRAFFIC SPLITTING DEFENSE
The main goal of our defense is to provide an efficient traffic splitting
strategy against WFP attacks. To find such a strategy, we analyze
the influence of (i) the number of distinct entry ORs used to establish
multiple paths between the user and the middle OR, and (ii) the
percentage and diversity of traffic observable at each entry OR.
We particularly aim for a splitting strategy that does not produce
(repeatable) patterns, which again could be exploited by an attacker.
Number of Used Entry ORs. To apply our defense, we first
need to determine the number m of entry ORs utilized by the Tor
user for a given page load. While a large m decreases the amount of
information available to each entry OR, it also increases the likeli-
hood of selecting a malicious entry OR for one circuit [4, 14]. Thus,
we analyze how m influences the user’s protection against WFP
attacks and propose a trade-off between the circuit establishment
overhead and the probability of picking a malicious entry OR.
Distributing Traffic over Circuits. Having selected the num-
ber of entry ORs, we need to define how to distribute the traffic.
In this paper, we focus on four different strategies for traffic dis-
tribution and their effectiveness against WFP attacks: (i) Round
robin—our most basic strategy—shifts to the next circuit for each
Tor cell (cf. Figure 1), while (ii) random splitting randomly selects a
circuit for each Tor cell. We compare these to (iii) traffic splitting
by direction, i.e., using one circuit for incoming and another circuit
for outgoing traffic. Finally, (iv) to increase the diversity of the
traffic distribution for repeated page loads of the same website, we
evaluate a weighted random scheme. Specifically, for each page load,
we create a vector −→
w consisting of m probabilities, which, in turn,
are computed from a m-dimensional Dirichlet distribution. We use
these probabilities to weight the selection of an entry OR for each
cell transmitted between the user and the middle OR.
4 EXPERIMENTAL SETUP
To allow for verifiable results, we next present our evaluation setup.
Dataset. As in previous related work [15], we rely on a dataset
consisting of the index pages of the 100 most popular websites1.
For fetching, we relied on an existing approach [12] that operates
Tor Browser 7.5.6 to collect 100 traces for each website. We further
reconstructed the corresponding Tor cells exchanged for each page
load by applying a previously-used data extraction method [12].
For our evaluation, we focus only on Tor cells, since the different
layers for data extraction (e.g., TCP packets, TLS records, or cells)
only have a marginal influence on the classification results [12].
Hence, our results are comparable for other extraction formats.
Simulation of Traffic Splitting. We developed a simulator that
artificially splits each page load trace from our dataset based on the
1According to Alexa (https://www.alexa.com/) as reported in September 2018.
Figure 1: Splitting distributes traffic over multiple circuits.
selected strategy. We refer to the order of all cells that are assigned
to the same circuit after splitting as a subtrace. In total, the simulator
generates m subtraces for each page load. To obtain realistic results,
our simulator further takes the latency of the different circuits
between the user and the middle OR into account when employing
our multipathing approach [14]. We measured the round-trip time
(RTT) of several circuits consisting of the same middle and exit
ORs but different entry ORs in the real Tor network. As in previous
work [13], we measured the RTTs by sending a relay connect cell
to a dummy destination, e.g., localhost, through each established
circuit. As exit ORs forbid packets to localhost, these communication
attempts trigger error messages that are sent to the measuring user.
In total, we gathered RTTs for 4,073 successfully established circuits,
which we integrated into our simulator.
Evaluation Setup. For our evaluation, we considered four state-
of-the-art WFP attacks: k-NN [16], CUMUL [12], k-FP [7], and
DF [15]. For details, we refer the reader to the original papers. For all
experiments, we conducted a 10-fold cross-validation and calculated
the accuracy of all attacks against our defense in a closed-world
scenario (i.e., the attacker knows the set of all visited websites).
5 EVALUATION
Next, we present our results proving the effectiveness of our split-
ting strategies against the state-of-the-art WFP attacks. For all
experiments, we assume that the adversary is aware of the applied
splitting strategy and, thus, trains his classifier on traces which
have been generated with the same strategy. In Table 1, we detail
the accuracy of each classifier in a scenario without defense and
against our evaluated strategies for varying numbers of entry ORs.
Number of Used Entry ORs. Before we discuss the efficiency
of each traffic-splitting strategy in detail, we first analyze how the
number of the used entry ORs influences accuracy of WFP attacks.
Independent of the chosen strategy, we observe that all WFP attacks
become less effective when the user utilizes a larger constant num-
ber of entry ORs to fetch a website. Our experiments confirm our
initial intuition that a partial traffic pattern at a single entry OR is
not sufficient to mount a successful WFP attack. We further notice
no significant decrease of the classification accuracy for m ≥ 4
regardless of the splitting strategy. Therefore, we consider m = 4 as
a good choice and believe this choice neither significantly increases