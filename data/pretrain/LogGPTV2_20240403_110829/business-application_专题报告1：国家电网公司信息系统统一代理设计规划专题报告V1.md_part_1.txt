![](media/image1.png)
国家电网公司信息系统
统一代理设计规划专题报告
**信息系统行为安全审计顶层设计组**
**二○一六年三月**
**目录**
[1 前言 3](\l)
> [1.1 概述 3](\l)
>
> [1.2 建设意义与目标 3](\l)
[2 设计与规划 5](\l)
> [2.1 总统架构 5](\l)
>
> [2.2 技术栈设计 6](\l)
>
> [2.3 安全Agent架构设计 7](\l)
>
> [2.4 管理节点架构设计 10](\l)
>
> [2.5 与审计系统集成 11](\l)
[3 安全保障技术 11](\l)
> [3.1 访问控制 11](\l)
>
> [3.2 熔断机制 12](\l)
>
> [3.3 防篡改机制 13](\l)
[4 发展演进路线 14](\l)
> [4.1 开源的意义 14](\l)
>
> [4.2 生态圈 15](\l)
>
> [4.3 保障措施 15](\l)
**\
**
# 前言
## 概述
随着国网公司信息化建设的深入，其业务的正常运转都越来越依赖于IT设施。然而，伴随着业务和技术的发展，IT环境日趋复杂，IT设施规模不断扩大，业务变化日益频繁，IT运维工作面临着越来越大的压力。为加快建设智能电网和"三集五大"管理体系，深入推进"两个转变"，支撑"能源互联网"发展，全面实现"一强三优"现代公司战略目标，自动化运维与智能作业成为必然的选择。
Agent作为自动化运维与智能作业的基础构成，目前存在着安装无序、管理失控等情况，为信息化建设造成了安全隐患，基于目前情况，通过对Agent进行开发、改进，建设安全、规范的Agent，解决Agent所造成的安全隐患并降低对信息系统的不良影响。
## 建设意义与目标
在计算机系统中，Agent是驻留在所有受管设备中，并向管理端报告指定数据或代理执行管理端命令的进程。Agent技术广泛存在于网络型的计算机应用中，从技术上看，目前还没有一种技术能够替代Agent，因此，Agent技术具有不可替代性。
在实现自动化运维过程中，自动化监控、自动化部署、自动化配置以及自动化资源调控等均需要Agent作为代理，从而使IT环境中的所有设备能够在智能系统的控制下，协调有序的完成运维工作。因此，对实现自动化运维来说，Agent是不可或缺的基础。
在当前国网公司的IT环境中，存在着较多的广泛使用Agent的系统，如普遍使用的Zabbix类的监控系统，需要在受监控服务器上安装Agent，为Zabbix服务器上传受监控服务器的运行状态信息；又如Puppet类的配置管理系统，也需要在受监控服务器上安装Agent，接受服务端修改配置文件、安装软件等请求；还有其他很多的使用Agent的系统。这些系统的应用，造成一台服务器上需要运行许多个Agent的现象，为安全管理带来极大的隐患，其主要问题如下：
1.  后门：有些开发者为了某种目的，在Agent中留下后门，通过这些后门，可以轻易的穿透安全防线，直接控制服务器，进行植入木马、随意安装程序、窃取信息等破坏行为。
2.  漏洞：在一般的程序中，或多或少都会存在一些漏洞，这些漏洞平时不易被发现，而一旦发现，则可能成为攻击行为的入口。存在于应用系统中的漏洞，因安装范围较小，影响面也较小，而存在于Agent的漏洞，因其在全网范围内广泛安装，一旦被攻击，则会形成大范围攻击，难于防御、难于处理。
3.  缺陷：Agent的开发者可能是商业公司、开源组织甚至个人，其代码质量良莠不齐，bug普遍存在，造成Agent运行时出现运行错误、进程崩溃等现象，使采集出现断点，控制出现错误，从而带来或大或小的经济损失。
4.  浪费资源：一台服务器上运行多个Agent，这些Agent为不同的系统提供代理，会频繁、重复采集相同的数据、日志，造成计算资源的浪费。这些Agent也会占用多个网络端口，造成端口资源的浪费。
5.  相互竞争：有些Agent因设计不够完善，造成资源使用的冲突，如使用特定端口，引起端口冲突；对特定文件加锁，造成锁冲突；运行时需要特定版本的软件包支持，引起依赖包冲突等等，对业务系统的部署、运行产生不良影响。
6.  流氓行为：有些不良厂商通过Agent进行流氓行为，如非法收集用户保密数据、通过干扰其他程序进行不正当竞争等行为。
7.  脱离管控：由于电网企业的特殊性，对信息管理有着较多的特有的管理制度、规范。而无论是商业公司或开源组织都不会为符合电网企业的特有情况进行代码的修改，从而使Agent脱离企业的管控。
鉴于大量使用Agent所带来的种种问题，以及Agent的不可替代性，因此，有必要在自主开发的基础上，实现安全的、符合电网公司管理要求的安全Agent。
> 安全Agent具有以下特点：
1.  开源：将Agent的源代码公开，由公众进行监督、审验并共同完善，从而提高程序的质量和公信度。因代码透明，有效杜绝后门的存在，并使漏洞和缺陷能够得到及早发现，及早修正，保证Agent的安全性。
2.  唯一：安全Agent作为在服务器上合法的唯一数据采集、控制服务，通过缓存的使用，统一对数据采集、分发进行管理，平衡系统资源使用，优先保障业务系统的资源使用，有效避免资源浪费，解决了Agent与业务系统间的竞争问题。
3.  合规：安全Agent的开发、使用遵照电网公司安全管理规范进行，并随管理要求的提高进行及时改进，从而实现安全、有序的IT环境。
# 设计与规划
## 总统架构
安全Agent采用主-从模式，分布式部署，总统架构如下图所示：
![](media/image2.png){width="5.764583333333333in"
height="3.547222222222222in"}
安全Agent部署在受监控的服务器上，根据策略执行各项工作任务，通过Thrift
RPC（基于Thrift的远程调用）与管理节点通信，进行采集数据的上传、控制指令的接受。对于网络设备、音视频设备等无方安装Agent的系统，可通过Agent扩展功能，通过SNMP/SSH等方式进行采集、控制。
Agent本身不提供对外部系统的接口，外部系统对数据的获取需从管理节点进行，管理节点对数据请求进行统一的认证，保证了数据能够被有序分发。管理节点内部采用持久化的数据缓存，使被多个系统请求的数据通过一次采集即可被共用，降低业务服务器的压力。管理节点支持级联模式，在私网或VLAN中的设备可以通过内部的管理节点将数据上传至中心管理节点，从而保证全网设备都能够得到一致、有效的监控。管理节点采用分布式部署，避免单点故障，同时可以根据受管理的Agent部署规模和请求规模进行横向扩展，保证系统性能。
## 技术栈设计
随着自动化运维以及大数据技术的应用，IT环境中的数据量呈现指数增长，因此，Agent的设计必须以高效为核心，充分借鉴、利用互联网技术和开源软件技术，以适应目前和未来发展的需要。另外，在IT环境中，存在着Windows、Linux、Unix等不同的操作系统，技术的选择应充分考虑跨平台，能够在各种主流平台下运行。
安全Agent采用的技术栈如下图所示：
![](media/image3.png){width="4.215277777777778in" height="2.33125in"}
Agent的开发以C/C++语言为主，C/C++语言是当代最优秀的程序设计语言，其编译后的二进制代码效率高，并广泛被各种操作系统如windows、Linux、Unix等支持，可移植性强。但C/C++是编译语言，在运行期的灵活性和扩展性较差，因此，结合LUA嵌入式脚本语言对其进行补充，LUA是目前执行效率最高的脚本语言，语法简单，广泛应用于工业控制、计算机游戏开发、网络服务管理等方面，并且与C语言有着最好的结合性，另外，与其他被广泛使用的功能强大的脚本语言如Perl、Python等相比，Lua可以在宿主语言中严密控制函数库的启用，从而避免脚本跨越宿主对系统进行操作的失控情况。
Boost是对C++语言的扩充，提供了安全的内存管理和丰富的函数库功能，能够有效避免诸如内存泄露、访问越界等问题，有效提高程序的代码质量。在C++11标准中，约有2/3的内容来自于boost，因此，boost可称为C++的"准"标准库。
Libevent是在开源软件中被广泛使用的基于事件机制的高性能网络开发库，提供非阻塞模式的网络请求处理架构，适合对高并发网络连接处理，最著名的应用是开源软件memcached。
Thrift是由fackbook开发的开源软件，大量用于facebook内部系统间的通信，具有每秒处理数万事务（TPS）的能力，被国内外互联网公司广泛采用。
Kyoto
Cabinet是基于key-value键值对的持久化数据库，在Agent中用于本地缓存，当断网或无法与管理节点通信时，将数据暂存在本地。KyotoCabinet具有极高的读写性能，经测试，在普通服务器上，1百万记录在0.9秒内即可完成读写操作。
Kafka是高吞吐量的分布式信息发布系统，在管理节点中作为服务级缓存。其主要优点是吞吐量高，每秒可处理百万级消息；分布式结构，易于横向扩展，避免单点故障；支持消息持久化，有效避免停机、断电时数据丢失。
## 安全Agent架构设计
安全Agent运行于受监控服务器上，是执行数据采集、控制传递的主要部分。因其功能的特殊性，在Linux环境下，拥有root权限，在windows系统下，拥有管理员权限。因Agent权限极高，因此在设计时应充分考虑其安全性，对内部来说，采用插件机制，对功能范围进行有效控制，对外部来说，控制端口的使用，避免非法指令进入。其架构如下图：
![](media/image4.png){width="5.763888888888889in"
height="2.7604166666666665in"}
Agent由内部模块、内部接口、外部接口以及看门狗四部份组成。