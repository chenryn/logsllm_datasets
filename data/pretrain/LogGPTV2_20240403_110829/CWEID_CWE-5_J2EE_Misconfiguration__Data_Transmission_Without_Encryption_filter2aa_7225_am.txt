A class contains a virtual method, but the method does not have an associated virtual destructor.
### CWEID:CWE-1079 Parent Class without Virtual Destructor Method
title_zh:没有虚析构函数的虚拟方法类
A parent class contains one or more child classes, but the parent class does not have a virtual destructor method.
### CWEID:CWE-1088 Synchronous Access of Remote Resource without Timeout
title_zh:远程资源无超时同步访问
The code has a synchronous call to a remote resource, but there is no timeout for the call, or the timeout is set to infinite.
### CWEID:CWE-1089 Large Data Table with Excessive Number of Indices
title_zh:在多个架构层中使用相同的可调用控件元素
The product uses a large data table that contains an excessively large number of indices.
### CWEID:CWE-1090 Method Containing Access of a Member Element from Another Class
title_zh:包含从另一个类访问成员元素的方法
A method for a class performs an operation that directly accesses a member element from another class.
### CWEID:CWE-1095 Loop Condition Value Update within the Loop
title_zh:索引过多的大数据表
The product uses a loop with a control flow condition based on a value that is updated within the body of the loop.
### CWEID:CWE-1091 Use of Object without Invoking Destructor Method
title_zh:在不调用析构函数方法的情况下使用对象
The product contains a method that accesses an object but does not later invoke the element's associated finalize/destructor method.
### CWEID:CWE-1092 Use of Same Invokable Control Element in Multiple Architectural Layers
title_zh:不带关联比较控制元素的持久可存储数据元素
The product uses the same control element across multiple architectural layers.
### CWEID:CWE-1093 Excessively Complex Data Representation
title_zh:数据资源的索引范围扫描过大
The product uses an unnecessarily complex internal representation for its data structures or interrelationships between those structures.
### CWEID:CWE-1094 Excessive Index Range Scan for a Data Resource
title_zh:数据表示过于复杂
The product contains an index range scan for a large data table, but the scan can cover a large number of rows.
### CWEID:CWE-1096 Singleton Class Instance Creation without Proper Locking or Synchronization
title_zh:循环内循环条件值更新
The product implements a Singleton design pattern but does not use appropriate locking or other synchronization mechanism to ensure that the singleton class is only instantiated once.
### CWEID:CWE-1097 Persistent Storable Data Element without Associated Comparison Control Element
title_zh:在没有正确锁定或同步的情况下创建单实例类实例
The product uses a storable data element that does not have all of the associated functions or methods that are necessary to support comparison.
### CWEID:CWE-1099 Inconsistent Naming Conventions for Identifiers
title_zh:包含指针项但没有正确的复制控件元素的数据元素
The product's code, documentation, or other artifacts do not consistently use the same naming conventions for variables, callables, groups of related callables, I/O capabilities, data types, file names, or similar types of elements.
### CWEID:CWE-1098 Data Element containing Pointer Item without Proper Copy Control Element
The code contains a data element with a pointer that does not have an associated copy or constructor method.
### CWEID:CWE-1100 Insufficient Isolation of System-Dependent Functions
The product or code does not isolate system-dependent functionality into separate standalone modules.
### CWEID:CWE-1101 Reliance on Runtime Component in Generated Code
The product uses automatically-generated code that cannot be executed without a specific runtime support component.
### CWEID:CWE-1102 Reliance on Machine-Dependent Data Representation
title_zh:使用依赖于平台的第三方组件
The code uses a data representation that relies on low-level data representation or constructs that may vary across different processors, physical machines, OSes, or other physical components.
### CWEID:CWE-1103 Use of Platform-Dependent Third Party Components
title_zh:生成代码中对运行时组件的依赖
The product relies on third-party components that do not provide equivalent functionality across all desirable platforms.
### CWEID:CWE-1104 Use of Unmaintained Third Party Components
title_zh:使用未维护的第三方组件
The product relies on third-party components that are not actively supported or maintained by the original developer or a trusted proxy for the original developer.
### CWEID:CWE-1105 Insufficient Encapsulation of Machine-Dependent Functionality
title_zh:机器相关功能的封装不足
The product or code uses machine-dependent functionality, but it does not sufficiently encapsulate or isolate this functionality from the rest of the code.
### CWEID:CWE-1106 Insufficient Use of Symbolic Constants
The source code uses literal constants that may need to change or evolve over time, instead of using symbolic constants.
### CWEID:CWE-1107 Insufficient Isolation of Symbolic Constant Definitions
The source code uses symbolic constants, but it does not sufficiently place the definitions of these constants into a more centralized or isolated location.
### CWEID:CWE-1109 Use of Same Variable for Multiple Purposes
The code contains a callable, block, or other code element in which the same variable is used to control more than one unique task or store more than one instance of data.
### CWEID:CWE-1110 Incomplete Design Documentation
The product's design documentation does not adequately describe control flow, data flow, system initialization, relationships between tasks, components, rationales, or other important aspects of the design.
### CWEID:CWE-1111 Incomplete I/O Documentation
The product's documentation does not adequately define inputs, outputs, or system/software interfaces.
### CWEID:CWE-1112 Incomplete Documentation of Program Execution
The document does not fully define all mechanisms that are used to control or influence how product-specific programs are executed.
### CWEID:CWE-1113 Inappropriate Comment Style
The source code uses comment styles or formats that are inconsistent or do not follow expected standards for the product.
### CWEID:CWE-1114 Inappropriate Whitespace Style
The source code contains whitespace that is inconsistent across the code or does not follow expected standards for the product.
### CWEID:CWE-1115 Source Code Element without Standard Prologue
The source code contains elements such as source files that do not consistently provide a prologue or header that has been standardized for the project.
### CWEID:CWE-1108 Excessive Reliance on Global Variables
The code is structured in a way that relies too much on using or setting global variables throughout various points in the code, instead of preserving the associated information in a narrower, more local context.
### CWEID:CWE-1116 Inaccurate Comments
The source code contains comments that do not accurately describe or explain aspects of the portion of the code with which the comment is associated.
### CWEID:CWE-1117 Callable with Insufficient Behavioral Summary
The code contains a function or method whose signature and/or associated inline documentation does not sufficiently describe the callable's inputs, outputs, side effects, assumptions, or return codes.
### CWEID:CWE-1118 Insufficient Documentation of Error Handling Techniques
The documentation does not sufficiently describe the techniques that are used for error handling, exception processing, or similar mechanisms.
### CWEID:CWE-1119 Excessive Use of Unconditional Branching
The code uses too many unconditional branches (such as "goto").
### CWEID:CWE-1120 Excessive Code Complexity
title_zh:McCabe环复杂性过大
The code is too complex, as calculated using a well-defined, quantitative measure.
### CWEID:CWE-1121 Excessive McCabe Cyclomatic Complexity
The code contains McCabe cyclomatic complexity that exceeds a desirable maximum.
### CWEID:CWE-1122 Excessive Halstead Complexity
The code is structured in a way that a Halstead complexity measure exceeds a desirable maximum.
### CWEID:CWE-1123 Excessive Use of Self-Modifying Code
The product uses too much self-modifying code.
### CWEID:CWE-1124 Excessively Deep Nesting
title_zh:验证框架使用不当
The code contains a callable or other code grouping in which the nesting / branching is too deep.
### CWEID:CWE-1125 Excessive Attack Surface
title_zh:不相关代码
The product has an attack surface whose quantitative measurement exceeds a desirable maximum.
### CWEID:CWE-1126 Declaration of Variable with Unnecessarily Wide Scope
title_zh:代码过于复杂
The source code declares a variable in one scope, but the variable is only used within a narrower scope.
### CWEID:CWE-1127 Compilation with Insufficient Warnings or Errors
title_zh:低效的CPU计算
The code is compiled without sufficient warnings enabled, which may prevent the detection of subtle bugs or quality issues.
### CWEID:CWE-1164 Irrelevant Code
title_zh:使用被禁止的代码
The product contains code that is not essential for execution, i.e. makes no state changes and has no side effects that alter data or control flow, such that removal of the code would have no impact to functionality or correctness.
### CWEID:CWE-1187 DEPRECATED: Use of Uninitialized Resource
title_zh:使用不必要的大范围声明变量
This entry has been deprecated because it was a duplicate of :CWE-908:. All content has been transferred to :CWE-908:.
### CWEID:CWE-1174 ASP.NET Misconfiguration: Improper Model Validation
title_zh:不安全的默认资源初始化
The ASP.NET application does not use, or incorrectly uses, the model validation framework.
### CWEID:CWE-1176 Inefficient CPU Computation
The product performs CPU computations using algorithms that are not as efficient as they could be for the needs of the developer, i.e., the computations can be optimized further.
### CWEID:CWE-1173 Improper Use of Validation Framework
title_zh:警告或错误不足的编译
The product does not use, or incorrectly uses, an input validation framework that is provided by the source language or an independent library.
### CWEID:CWE-1177 Use of Prohibited Code
The product uses a function, library, or third party component that has been explicitly prohibited, whether by the developer or the customer.
### CWEID:CWE-1188 Insecure Default Initialization of Resource
The product initializes or sets a resource with a default that is intended to be changed by the administrator, but the default is not secure.
### CWEID:CWE-1190 DMA Device Enabled Too Early in Boot Phase
The product enables a Direct Memory Access (DMA) capable device before the security configuration settings are established, which allows an attacker to extract data from or gain privileges on the product.
### CWEID:CWE-1189 Improper Isolation of Shared Resources on System-on-a-Chip (SoC)
The System-On-a-Chip (SoC) does not properly isolate shared resources between trusted and untrusted agents.
### CWEID:CWE-1193 Power-On of Untrusted Execution Core Before Enabling Fabric Access Control
The product enables components that contain untrusted firmware before memory and fabric access controls have been enabled.
### CWEID:CWE-1192 System-on-Chip (SoC) Using Components without Unique, Immutable Identifiers
The System-on-Chip (SoC) does not have unique, immutable identifiers for each of its components.
### CWEID:CWE-1191 On-Chip Debug and Test Interface With Improper Access Control
The chip does not implement or does not correctly perform access control to check whether users are authorized to access internal registers and test modes through the physical debug/test interface.
### CWEID:CWE-1204 Generation of Weak Initialization Vector (IV)
The product uses a cryptographic primitive that uses an Initialization Vector (IV), but the product does not generate IVs that are sufficiently unpredictable or unique according to the expected cryptographic requirements for that primitive.
### CWEID:CWE-1221 Incorrect Register Defaults or Module Parameters
Hardware description language code incorrectly defines register defaults or hardware IP parameters to insecure values.
### CWEID:CWE-1222 Insufficient Granularity of Address Regions Protected by Register Locks
title_zh:使用未初始化的资源
The product defines a large address region protected from modification by the same register lock control bit. This results in a conflict between the functional requirement that some addresses need to be writable by software during operation and the security requirement that the system configuration lock bit must be set during the boot process.
### CWEID:CWE-1220 Insufficient Granularity of Access Control
The product implements access controls via a policy or other feature with the intention to disable or restrict accesses (reads and/or writes) to assets in a system from untrusted agents. However, implemented access controls lack required granularity, which renders the control policy too broad because it allows accesses from unauthorized agents to the security-sensitive assets.
### CWEID:CWE-1223 Race Condition for Write-Once Attributes
A write-once register in hardware design is programmable by an untrusted software component earlier than the trusted software component, resulting in a race condition issue.
### CWEID:CWE-1224 Improper Restriction of Write-Once Bit Fields
The hardware design control register "sticky bits" or write-once bit fields are improperly implemented, such that they can be reprogrammed by software.
### CWEID:CWE-1209 Failure to Disable Reserved Bits
The reserved bits in a hardware design are not disabled prior to production. Typically, reserved bits are used for future capabilities and should not support any functional logic in the design. However, designers might covertly use these bits to debug or further develop new capabilities in production hardware. Adversaries with access to these bits will write to them in hopes of compromising hardware state.
### CWEID:CWE-1230 Exposure of Sensitive Information Through Metadata
The product prevents direct access to a resource containing sensitive information, but it does not sufficiently limit access to metadata that is derived from the original, sensitive information.
### CWEID:CWE-1229 Creation of Emergent Resource
The product manages resources or behaves in a way that indirectly creates a new, distinct resource that can be used by attackers in violation of the intended policy.
### CWEID:CWE-1232 Improper Lock Behavior After Power State Transition
Register lock bit protection disables changes to system configuration once the bit is set. Some of the protected registers or lock bits become programmable after power state transitions (e.g., Entry and wake from low power sleep modes) causing the system configuration to be changeable.
### CWEID:CWE-1236 Improper Neutralization of Formula Elements in a CSV File
The product saves user-provided information into a Comma-Separated Value (CSV) file, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as a command when the file is opened by a spreadsheet product.
### CWEID:CWE-1231 Improper Prevention of Lock Bit Modification
The product uses a trusted lock bit for restricting access to registers, address regions, or other resources, but the product does not prevent the value of the lock bit from being modified after it has been set.
### CWEID:CWE-1234 Hardware Internal or Debug Modes Allow Override of Locks
System configuration protection may be bypassed during debug mode.
### CWEID:CWE-1239 Improper Zeroization of Hardware Register
The hardware product does not properly clear sensitive information from built-in registers when the user of the hardware block changes.
### CWEID:CWE-1233 Security-Sensitive Hardware Controls with Missing Lock Bit Protection
The product uses a register lock bit protection mechanism, but it does not ensure that the lock bit prevents modification of system registers or controls that perform changes to important hardware system configuration.
### CWEID:CWE-1243 Sensitive Non-Volatile Information Not Protected During Debug
Access to security-sensitive information stored in fuses is not limited during debug.
### CWEID:CWE-1235 Incorrect Use of Autoboxing and Unboxing for Performance Critical Operations
The code uses boxed primitives, which may introduce inefficiencies into performance-critical operations.
### CWEID:CWE-1241 Use of Predictable Algorithm in Random Number Generator
The device uses an algorithm that is predictable and generates a pseudo-random number.
### CWEID:CWE-1245 Improper Finite State Machines (FSMs) in Hardware Logic
Faulty finite state machines (FSMs) in the hardware logic allow an attacker to put the system in an undefined state, to cause a denial of service (DoS) or gain privileges on the victim's system.
### CWEID:CWE-1246 Improper Write Handling in Limited-write Non-Volatile Memories
The product does not implement or incorrectly implements wear leveling operations in limited-write non-volatile memories.
### CWEID:CWE-1244 Internal Asset Exposed to Unsafe Debug Access Level or State
The product uses physical debug or test interfaces with support for multiple access levels, but it assigns the wrong debug access level to an internal asset, providing unintended access to the asset from untrusted debug agents.
### CWEID:CWE-1248 Semiconductor Defects in Hardware Logic with Security-Sensitive Implications
The security-sensitive hardware module contains semiconductor defects.
### CWEID:CWE-1249 Application-Level Admin Tool with Inconsistent View of Underlying Operating System
The product provides an application for administrators to manage parts of the underlying operating system, but the application does not accurately identify all of the relevant entities or resources that exist in the OS; that is, the application's model of the OS's state is inconsistent with the OS's actual state.
### CWEID:CWE-1240 Use of a Cryptographic Primitive with a Risky Implementation
To fulfill the need for a cryptographic primitive, the product implements a cryptographic algorithm using a non-standard, unproven, or disallowed/non-compliant cryptographic implementation.
### CWEID:CWE-1250 Improper Preservation of Consistency Between Independent Representations of Shared State
The product has or supports multiple distributed components or sub-systems that are each required to keep their own local copy of shared data - such as state or cache - but the product does not ensure that all local copies remain consistent with each other.
### CWEID:CWE-1247 Improper Protection Against Voltage and Clock Glitches
The device does not contain or contains incorrectly implemented circuitry or sensors to detect and mitigate voltage and clock glitches and protect sensitive information or software contained on the device.
### CWEID:CWE-1251 Mirrored Regions with Different Values
The product's architecture mirrors regions without ensuring that their contents always stay in sync.
### CWEID:CWE-1252 CPU Hardware Not Configured to Support Exclusivity of Write and Execute Operations
The CPU is not configured to provide hardware support for exclusivity of write and execute operations on memory. This allows an attacker to execute data from all of memory.
### CWEID:CWE-1253 Incorrect Selection of Fuse Values
The logic level used to set a system to a secure state relies on a fuse being unblown. An attacker can set the system to an insecure state merely by blowing the fuse.
### CWEID:CWE-1255 Comparison Logic is Vulnerable to Power Side-Channel Attacks