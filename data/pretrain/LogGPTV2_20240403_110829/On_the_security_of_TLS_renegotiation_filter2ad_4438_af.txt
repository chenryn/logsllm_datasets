[19] H. Krawczyk. The order of encryption and
authentication for protecting communications (or: How
secure is SSL?). In Proc. CRYPTO 2001, vol. 2139 of
LNCS, pp. 310–331.
[20] H. Krawczyk, K. G. Paterson, and H. Wee. On the
security of the TLS protocol: A systematic analysis. In
Proc. CRYPTO 2013, vol. 8042 of LNCS, pp. 429–448.
[21] D. Miller. SSL vulnerability and SSH, November 2009.
http://lists.mindrot.org/pipermail/
openssh-unix-dev/2009-November/028003.html.
[22] P. Morrissey, N. P. Smart, and B. Warinschi. A
modular security analysis of the TLS handshake
protocol. In Proc. ASIACRYPT 2008, vol. 5350 of
LNCS, pp. 55–73.
[23] K. G. Paterson, T. Ristenpart, and T. Shrimpton. Tag
size does matter: Attacks and proofs for the TLS
record protocol. In Proc. ASIACRYPT 2011, vol. 7073
of LNCS, pp. 372–389.
[24] M. Ray and S. Dispensa. Renegotiating TLS,
November 2009.
[25] E. Rescorla. HTTP over TLS, May 2000. RFC 2818.
[26] E. Rescorla, M. Ray, S. Dispensa, and N. Oskov.
Transport Layer Security (TLS) renegotiation
indication extension, February 2010. RFC 5746.
[27] Trustworthy Internet Movement. SSL Pulse, July 2013.
https://www.trustworthyinternet.org/ssl-pulse/.
[28] T. Zoller. TLS & SSLv3 renegotiation vulnerability.
Technical report, G-SEC, 2009.
http://www.g-sec.lu/practicaltls.pdf.
APPENDIX
A. PROOF OF THEOREM 3
Proof. Suppose A breaks the weak renegotiable ACCE
security of the protocol Π. We will show that either A breaks
the multi-phase ACCE security of Π or A can be used to
construct another algorithm that breaks either the security
of the PRF or the multi-phase ACCE security of Π.
We approach the proof in three cases: either A has broken
the conﬁdentiality/integrity of the weakly secure renegotiable
ACCE, or A has broken the weak renegotiation authentica-
tion of the weakly secure renegotiable ACCE, the latter by
meeting either condition M(cid:48)(a) or M(cid:48)(b).
Conﬁdentiality/integrity. Since the winning conditions for
the conﬁdentiality/integrity part of the security game are
the same for both deﬁnitions, every adversary who breaks
conﬁdentiality/integrity in the weakly secure renegotiable
ACCE security game for Π breaks conﬁdentiality/integrity
in the multi-phase ACCE security game for Π.
Authentication — M(cid:48)(a). Suppose A wins the weak rene-
gotiable ACCE security experiment for Π using condition
M(cid:48)(a). Either there is no (cid:96) at all such that πt
B.phases[(cid:96)].T
A.phases[(cid:96)∗].T , or there is such an (cid:96) but (cid:96) (cid:54)= (cid:96)∗.
matches πs
397First consider the case where there is no (cid:96) at all such
A.phases[(cid:96)∗].T . That meets
B.phases[(cid:96)].T matches πs
that πt
condition M of Deﬁnition 3 for Π.
C
B.phases[(cid:96) − j].T .
Now consider the case where there is an (cid:96) such that πt
B.
A.phases[(cid:96)∗].T but (cid:96) (cid:54)= (cid:96)∗. Assume
phases[(cid:96)].T matches πs
without loss of generality (cid:96) < (cid:96)∗ (otherwise we could swap
the oracles).
There must exist some value j ∈ [1, (cid:96) − 1] such that
A.phases[(cid:96)∗ − j].T (cid:54)= πt
πs
In particular,
j ≤ (cid:96) − 1, since in πt
B’s ﬁrst phase its outgoing message m1
contains extC = empty but πs
A received a message m1 with
extc (cid:54)= empty. Let j be minimal. Then πt
B.phases[(cid:96)−j +1].T
A.phases[(cid:96)∗ − j + 1].T . In particular, messages
matches πs
m1 of those two transcripts are equal, and so are messages
m2 of those two transcripts. Since RIE is being used, m1
, and since πs,(cid:96)∗−j+1
and m2 contain f in(−1)
accepted, both πs,(cid:96)∗−j+1
used the same f in(−1)
and f in(−1)
and f in(−1)
are the hash (using a PRF) of the handshake transcripts from
phases πs,(cid:96)∗−j
, and we know that these handshake
transcripts are not equal. This means a collision has occurred
in PRF, which happens with negligible probability.
ACCE, no A can achieve conditions M(cid:48)(a) and A1–A7.
values. But at each party, f in(−1)
Assuming PRF is secure and Π is a secure multi-phase
and f in(−1)
and πt,(cid:96)−j+1
and πt,(cid:96)−j
Authentication — M(cid:48)(b). Now suppose A wins the weak
renegotiable ACCE security experiment for Π using condition
M(cid:48)(b) but not M(cid:48)(a).
In particular, for every (cid:96)(cid:48) < (cid:96)∗,
B.phases[(cid:96)(cid:48)].T but there is some (cid:96) < (cid:96)∗
A.phases[(cid:96)(cid:48)].T = πt
πs
B.phases[(cid:96)].RTr(cid:107)RTs.
such that πs
Choose (cid:96) minimal. Let v be the smallest index such that the
A.phases[(cid:96)].RTs(cid:107)RTr is not equal to
vth ciphertext Cv of πs
B.phases[(cid:96)].RTr(cid:107)RTs.
the vth ciphertext of πt
A.phases[(cid:96)].RTs(cid:107)RTr (cid:54)= πt
B
B
A
A
A
C
C
S
S
S
Assume without loss of generality that Cv was received by
πs
A as the vth ciphertext but was not sent by πt
B as the vth
ciphertext. (The alternative is that Cv was sent by πs
A as
the vth ciphertext but was not received by πt
B as the vth
ciphertext. However, we could then focus on everything from
πt
B’s perspective and apply the same argument.)
This means that when A called Decrypt(πs
A, Cv, hd), if
b = 0 then Decrypt returned (⊥,·), whereas if b = 1 then
Decrypt returned (m(cid:48),·) where m(cid:48) (cid:54)=⊥. Our simulator can
thus output (A, s, (cid:96), b(cid:48)) for its guess of b(cid:48) as above, and this
will equal b with probability at least , making condition
C6 hold in Deﬁnition 3. We need to show that conditions
C1–C5 also hold for (A, s, (cid:96)).
Since A wins the weak renegotiable ACCE experiment
using condition M(cid:48)(b), we have that A1–A7 all hold. We
want to show that, at the time that πs
A accepted in phase
(cid:96) + 1, conditions C1–C5 also hold for (A, s, (cid:96)).
• C1: A1 implies C1, since if πs
A has rejected in any
phase prior to (cid:96)∗ then it would not have a phase (cid:96)∗.
• C2 and C3: Conditions A2 and A3 of Deﬁnition 5
do not imply that A did not ask Corrupt queries pro-
hibited by C2 and C3. However, we do have that
B.phases[(cid:96)].T ; in other words, A
πs
A.phases[(cid:96)].T = πt
was not active in the handshake for phase (cid:96). Thus, A is
equivalent to an adversary who did not ask any Corrupt
queries for public keys used in phase (cid:96) until after πs
A
accepts in phase (cid:96).
• C4: A6 implies C4, at the time that πs
• C5: Since πs
A chooses nonce rC (if a client) or rS
(if a server) randomly, except with negligible proba-
A accepted.
bility there is no (cid:96)(cid:48) < (cid:96) such that πs
A.phases[(cid:96)].T . By A7, A did not issue Reveal(πt
πs
before πs
that πs
phase with πt
ing condition C5.
A.phases[(cid:96)(cid:48)].T =
B, (cid:96))
A accepted in phase (cid:96) + 1. Thus at the time
B, (cid:96)(cid:48)) to any
A.phases[(cid:96)].T , satisfy-
Thus, assuming Π is a secure multi-phase ACCE no A can
A accepted, A did not issue Reveal(πt
B.phases[(cid:96)(cid:48)].T = πs
achieve conditions M(cid:48)(b) and A1–A7.
B. GENERIC TLS PROTOCOL WITH
SCSV/RIE COUNTERMEASURE
C
(IC = pkC , skC )
r←− {0, 1}λ1
(cid:40)
empty,
f in(−1)
C ,
rC
†extC ←
pre-accept stage
S
(IS = pkS , skS )
if initial,
if reneg
m1 : rC , cs-list, †extC
r←− {0, 1}λ1
rS
(cid:40)
†If extC (cid:54)= f in(−1)
: α ← reject
if initial,
if reneg
keyexS ← . . .
C (cid:107)f in(−1)
empty,
f in(−1)
C
S
,
†extS ←
m2 : rS , sid, cs-choice, †extS
m3 : certS
m4 : keyexS
m5 : get-cert
m6 : done
: α ← reject
S
C (cid:107)f in(−1)
†If extS (cid:54)= f in(−1)
If ¬verify(keyexS ) : α ← reject
keyexC ← . . .
σC ← SIG.Sign(skC , m1(cid:107) . . . (cid:107)m8)
pms ← . . .
ms ← PRF(pms, label1(cid:107)rC(cid:107)rS )
mac (cid:107)KS→C
KC→S
f inC ← PRF(ms, label3(cid:107)H(m1(cid:107) . . . (cid:107)m10))
†store f in(−1)
(cid:107)KC→S
(cid:107)KS→C
C ← f inC
enc
enc
m7 : certC
mac ← PRF(ms, label2(cid:107)rC(cid:107)rS )
m8 : keyexC
m9 : σC
m10 : f lagenc
m11 : (C11, ste) = StE.Enc(KC→S
enc
(cid:107)KC→S
mac
, (cid:96), hd, f inC , ste)
enc
enc
(cid:107)KS→C
(cid:107)KC→S
mac (cid:107)KS→C
If SIG.Vfy(pkC , σC , m1(cid:107) . . . (cid:107)m8) = 0 : α ← reject
pms ← . . .
ms ← PRF(pms, label1(cid:107)rC(cid:107)rS )
mac ← PRF(ms, label2(cid:107)rC(cid:107)rS )
KC→S
If f inC (cid:54)= PRF(ms, label3(cid:107)H(m1(cid:107) . . . (cid:107)m10)) : α ← reject
f inS ← PRF(ms, label3(cid:107)H(m1(cid:107) . . . (cid:107)m12))
S ← f inS
C ← f inC
α ← accept
†store f in(−1)
†store f in(−1)
m12 : f lagenc
m13 : (C13, ste) = StE.Enc(KS→C
enc
(cid:107)KS→C
mac
, (cid:96), hd, f inS , ste)
If f inS (cid:54)= PRF(ms, label3(cid:107)H(m1(cid:107) . . . (cid:107)m12)) : α ← reject
†store f in(−1)
α ← accept
S ← f inS
post-accept stage
StE.Enc(KC→S
StE.Enc(KS→C
enc
enc
mac
(cid:107)KC→S
(cid:107)KS→C
mac
, (cid:96), hd, data, ste)
, (cid:96), hd, data, ste)
Figure 2: Generic TLS handshake protocol with
†SCSV/RIE renegotiation countermeasures
398