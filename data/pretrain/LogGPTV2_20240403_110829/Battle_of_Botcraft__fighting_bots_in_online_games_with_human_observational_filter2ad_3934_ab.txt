p
o
r
P
 0
 0
 0.07
 0.06
 0.05
 0.04
 0.03
 0.02
 0.01
n
o
i
t
r
o
p
o
r
P
 0
 0
 2
 4
 6
 8
 10
 12
 14
Interval (sec.)
(b) Human
 2
 4
 6
 8
 10
 12
 14
Interval (sec.)
(a) Bot
Figure 1: Keystroke Inter-arrival Time Distribution
 0.09
 0.08
 0.07
 0.06
 0.05
 0.04
 0.03
 0.02
 0.01
n
o
i
t
r
o
p
o
r
P
 0
 0
 1
 2
 3
 4
 5
 6
Duration (sec.)
(a) Bot
 1
 2
 3
 4
 5
 6
Duration (sec.)
(b) Human
Figure 2: Keystroke Duration Distribution
and diﬀerent obstacles (barren plains to forest with lots of
small trees). The game bot proﬁles are half run with a war-
rior and half run with a mage. These two bot characters
range from level 1 to over 30 in the traces.
We conduct post processing on the input trace data to
extract information with regard to high-level user-input ac-
tions. For example, we pair up a key press event with a
subsequent key release event of the same key to form a
keystroke action; we gather a continuous sequence of cur-
sor position change events to form a point action (mouse
movement action). Table 1 gives a complete list of high
level actions we derive and their corresponding deﬁnitions.
3.3 Game Playing Input Analysis
We analyze the Glider bot and human keyboard and mouse
input traces with respect to timing patterns (duration and
inter-arrival time) and kinematics (distance, displacement,
and velocity). Our bot analysis below is limited to the cur-
rent game bots.
Two keyboard usage metrics for human and bot are pre-
sented in Figures 1 and 2, respectively. Both ﬁgures are
clipped for better presentation, and the trailing data clipped
away contribute less than 3% of the total for either hu-
man or bot. Figure 1 shows the distribution of keystroke
inter-arrival time, i.e., the interval between two consecutive
key presses, with a bin resolution of 0.1 seconds. There
are two major diﬀerences between the bots and humans.
First, the bot issues keystrokes signiﬁcantly faster than hu-
mans. While 16.2% of consecutive keystrokes by the bot are
less than 0.1 second apart, only 3.2% of human keystrokes
are that fast. This is because human players have to initi-
ate keystroke action by physical movement of ﬁngers, and
hence, pressing keys at such high frequency would be very
tiring. Second, the keystrokes of the bot exhibit obvious
periodic patterns. The empirical probabilities of the bot
pressing a key every 1 or 5.5 seconds are signiﬁcantly higher
than their neighbor intervals, which provides us some in-
sights into the internals of the bot: it uses periodic timers to
poll the status of the avatar (i.e., current coordinate), and
issue keyboard commands accordingly (e.g., bypass possi-
ble obstacles by turning left/right and jumping). However,
for human players, their keystroke intervals follow a Pareto
distribution, which matches the conclusions of previous re-
search [53]. Figure 2 shows the distribution of keystroke
durations, with the bin resolution of 0.03 second. These
ﬁgures reassures our previous observations: the bot presses
keys with much shorter duration—over 36.9% of keystrokes
are less than 0.12 seconds long, while only 3.9% of human
keystrokes are completed within such a duration; the bot ex-
hibits the periodic keyboard usage pattern—keystrokes with
around 0.25 second duration are signiﬁcantly more than its
neighbor durations.
Figure 3 shows the relationship between the mouse speed
and the displacement between the origin and target coordi-
nates for the point-and-click. Less than 0.1% of the total
259 5000
 4000
 3000
 2000
 1000
)
.
c
e
s
/
.
x
p
(
d
e
e
p
S
 5000
 4000
 3000
 2000
 1000
)
.
c
e
s
/
.
x
p
(
d
e
e
p
S
 0
 0
 200
 600
 400
 800
Displacement (px.)
(a) Bot
 1000
 1200
 0
 0
 200
 600
 400
 800
Displacement (px.)
(b) Human
 1000
 1200
Figure 3: Average Speed vs. Displacement for Point-and-Click
 0.6
 0.5
 0.4
 0.3
 0.2
 0.1
n
o
i
t
r
o
p
o
r
P
 0
 0
 0.18
 0.16
 0.14
 0.12
 0.1
 0.08
 0.06
 0.04
 0.02
n
o
i
t
r
o
p
o
r
P
 1
 2
 3
 4
 5
 0
 0
 1
Duration (sec.)
(a) Bot
 2
 3
Duration (sec.)
(b) Human
 4
 5
Figure 4: Drag-and-Drop Duration Distribution
data points for either human or bot are clipped away. The
bots exhibit two very unique features. First, unlike human
players, who move the mouse with very dynamic speed at
all displacement lengths, the bots tend to move the mouse
at several ﬁxed speeds for each displacement, and the speed
increases linearly as displacement lengthens. This feature
implies that, again, the bots use several ﬁxed length timers
for mouse movements. Second, we also observe that the
bots make a signiﬁcant amount of high speed moves with
zero displacement, that is, after a series of fast movements,
the cursor is placed back exactly at its origin. Such a be-
havior is absent in the human data, because it is physically
diﬃcult and unnecessary.
Figure 4 shows the distribution of mouse drag-and-drop
duration, with the bin resolution of 0.03 second. For the
bots, 100% of actions are accomplished within 0.3 second.
However, for human players, only 56.6% of drag-and-drop
actions ﬁnish within the same time window; over-one-second
actions contribute 25.5% of the total, within which, about
0.8% of actions are more than 5 seconds long, and are thus
clipped away from the ﬁgure.
Figure 5 illustrates the distribution of mouse movement
eﬃciency for point-and-click and drag-and-drop. We de-
ﬁne movement eﬃciency as the ratio between the cursor dis-
placement and the traversed distance over a series of move-
ments. In other words, the closer the cursor movement is
to a straight line between the origin and target coordinates,
the higher the movement eﬃciency. Note that, while the bin
width is 0.02, the last bin only contains the actions with eﬃ-
ciency of 1.0. Bots exhibit signiﬁcant deviation from human
players on this metric: 81.7% of bot mouse movements have
perfect eﬃciency, compared to that only 14.1% of human
mouse movements are equally eﬃcient. Aside from 3.8%
of mouse movements with eﬃciency less than 0.02 (most
of which are zero eﬃciency moves, due to the cursor being
placed back to the origin), a bot rarely moves the mouse
with other eﬃciencies. However, for human players, the ob-
served probability of mouse movement eﬃciency follows an
exponential distribution.
Finally, Figure 6 presents the relationship between the
average mouse move speed and the direction of the target
coordinate, plotted in polar coordinate with angular reso-
lution of 10 degrees (π/36). Each arrow represents the av-
erage velocity vector of mouse movements whose target po-
sition is ±5 degrees in its direction. For the bots, there
is no evident correlation between the speed and the direc-
tion. In contrast, for human players, there is a clear diag-
onal, symmetric, and bounded movement pattern: diagonal
movements are generally faster than horizontal and verti-
cal movements, upward movements are slightly faster than
downward movements, and leftward movements are slightly
faster than rightward movements; overall, the movement
speed is bounded to a certain value. The diagonal and sym-
metric pattern is attributed to the human hand physiology,
and the speed boundary is due to the physical constraint of
human arms.
260n
o
i
t
r
o
p
o
r
P
 0.9
 0.8
 0.7
 0.6
 0.5
 0.4
 0.3
 0.2
 0.1
 0
 0.16
 0.14
 0.12
 0.1
 0.08
 0.06
 0.04
 0.02
n
o
i
t
r
o
p
o
r
P
 0
 0.2
 0.4
 0.6
 0.8
 1
 0
 0
 0.2
Efficiency
(a) Bot
 0.4
 0.6
Efficiency
(b) Human
 0.8
 1
Figure 5: Point-and-Click and Drag-and-Drop Movement Eﬃciency Distribution
90°
 1200
1 2 0 °
6
0
°
90°
 1200
1 2 0 °
6
0
°
°
0
5
1
 800
 400
3
0
°
°
0
5
1
 800
 400
°
0