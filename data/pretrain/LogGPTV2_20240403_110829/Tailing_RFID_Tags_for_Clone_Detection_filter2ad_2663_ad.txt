10
0
 |V
|=0 (A
)
0
A
 |V
|=1 (A
)
1
A
 |V
|=2 (A
)
1
A
 |V
|=3 (A
)
1
A
 |V
|=4 (A
)
1
A
c
c
u
s
10
−6
P
−8
10
−10
10
−12
10
0.2
0.3
 (misread probability)
0.4
0.5
0
 Blocking
 Exploiting TMF
1
2
3
4
5
|V
| (# of compromized readers)
A
1
0.8
0.6
0.4
em=0
em=1
em=2
em=3
)
e
t
a
r
l
m
r
a
a
e
s
a
f
(
l
R
A
F
0.2
0
0
0
10
−1
10
c
c
u
s
P
−2
10
−3
10
|V
| = 0
A
0.1
p
0.2
0.4
 (misevent probability)
0.3
me
0.5
1
2
3
4
5
|V
| (# of compromized readers)
A
0.1
p
mr
(a)
(b)
(c)
(d)
Figure 5. Study of misevents, misreads, and miswrites in 1bit(cid:173)tailing. Graphs are: (a) False(cid:173)alarm rate
as a function of misevent probability pme for a trace composed of 10 genuine events and for various
values of em, the number of allowed missing events between consecutive trace events; (b) Success
probability Psucc for A0 and A1 as a function of compromised nodes |VA| for various values of em (with
A0, |VA| = 0); (c) Psucc for A0 and A1 as a function of misread probability pmr for various numbers
|VA| of compromised nodes; (d) Psucc for A1 that either blocks clone events (Blocking) or exploits
the miswrite ﬂag (Exploiting TMF) to mark clone events as affected by miswrites. For all graphs,
|G| = 10 events, |C| = 5 events, and m = 32 bits.
where n ranges from 1 to tail size t, T T [n] indicates the n-th
symbol in the tail T T , and ∆T P is equal to (T Pi+1−T Pi).3
Figure 5(a) shows the strong impact of different em val-
ues on the false-alarm rate. Allowing missing events could
have the side effect of increasing the adversary’s success
probability. However, as shown in Figure 5(b), adversary
A0 (|VA| = 0) only marginally beneﬁts from em > 0. The
adversarial beneﬁt of compromised nodes is overwhelming
compared to that of allowing missing events; adversaries
A1, A2, and A3 do not beneﬁt signiﬁcantly from em > 0.
Misreads may mask clone events and cause the detec-
tor to miss clones. As shown in Figure 5(c), even a small
misread probability pmr signiﬁcantly increases A0’s suc-
cess probability; in fact, due to missing clone events, a few
traces do not present any clone event (i.e., Ppass = 1) even
for A0. However, for small pmr ( 10−2)
only for large pmr (> 0.5). Although the success proba-
bility for adversary A1 is primarily a function of the num-
ber of compromised readers, misreads also contribute in in-
creasing Psucc. This contribution becomes signiﬁcant for
relatively large pmr. (The same holds for A2 and A3).
Miswrites include cases when tags (i) reply with a write
failure message (no memory modiﬁcation); they also in-
clude cases when tags do not acknowledge a failed write op-
eration and have (ii) not modiﬁed, (iii) correctly modiﬁed,
or (iv) incorrectly modiﬁed (corrupted) the tag memory. If
miswrites are reported through the tailing ﬂag TF, cases (i)
3For ∆T P = 0, the tail has been completely rewritten, which makes
the result of the rule veriﬁcation not reliable. It may be also possible that
the tail is completely rewritten even for ∆T P 6= 0. In order to avoid such
situation, the tail size t should be larger than ⌈|G| · pme⌉ + 1.
and (ii) are comparable to misreads, and case (iii) to a mi-
sevent. To mitigate the effect of memory corruption, i.e.,
case (iv), we extend tag events with a miswrite ﬂag (TMF).
A reader not receiving any write operation result from a tag
will set both the tailing and the miswrite ﬂags in an event
ei; the detector will then ignore a clone evidence between
events ei and ei+1. Although the miswrite ﬂag could be
misused by an adversary to mark clone events as miswrites,
as Figure 5(d) shows (for A1), this provides no advantage in
terms of Psucc over blocking clone events. In fact, misusing
the miswrite ﬂag only cancels out clone evidence resulting
from a clone event followed by a genuine event, but not
vice versa; blocking can cancel both. These observations
hold also for A2. For A3, misusing the miswrite ﬂag is
equivalent to injecting fake events; no additional advantage
in terms of Psucc is achieved.4
We refer to our mechanism as basic 1bit-tailing (TAIL)
when em = 0 and the miswrite ﬂag TMF is not deployed,
and robust 1bit-tailing (R-TAIL) when em = 3 and the ﬂag
TMF is deployed.
6 Simulation-based Evaluation
We further evaluate our tailing mechanism through a
custom-built, RFID-enabled supply-chain simulator. This
allows us to explore more realistic and complex scenarios
than those in Section 5.
4Injecting fake events may suspiciously increase the number of events
in a trace, though, while misuse of the miswrite ﬂag does not.
CF
MN
L1
V
k
CI
VDT
L2
V
k
CI
VDT
L9
V
CI
k
DT
V
L3
k
CI
DT
V
L6
CI
k
DT
V
L10
k
CI
DT
V
L13
V
V
V
V
CI
k
k
CI
CI
k
k
CI
CI
k
k
CI
CI
k
k
CI
RT
V
L4
RT
V
L5
RT
V
L7
RT
V
L8
RT
V
L11
RT
V
L12
RT
V
L14
RT
V
L15
POS
POS
POS
POS
POS
POS
POS
POS
MN: Manufacturer,  
DT: Distributor,  
RT: Retailer,  
CF: Counterfeiter,  
v: reader,  
k: link,  
POS: Point-of-sale
CI: Counterfeit injection point
Figure 6. 4(cid:173)level binary(cid:173)tree supply chain with
one manufacturer (MN), two 2nd(cid:173)level distrib(cid:173)
utors (DT), four 3rd(cid:173)level distributors (DT),
and 8 retailers (RT). A counterfeiter (CF) in(cid:173)
jects clone products at different points (CI)
in the chain. L, v, k, and POS stand for lo(cid:173)
cation, reader, link, and point(cid:173)of(cid:173)sale respec(cid:173)
tively. The relation between each element and
the simulation parameters summarized in Ta(cid:173)
ble 2 is also shown.
6.1 Description and Baseline Scenario
Our simulator generates a ﬂow of genuine products in a
supply chain from the product manufacturer to one or sev-
eral distributors, and ﬁnally retailers.
It also generates a
ﬂow of counterfeit products from injection points (poten-
tially any partner in the chain) to retailers. The product ﬂow
is deﬁned by the supply-chain structure, product demand,
and lead times (stocking time within a partner, shipping
time from a partner, and transport time between two part-
ners). Each partner has RFID readers that record events and
may perform tailing. Clone detection occurs when products
leave the chain, i.e., at retailers’ points-of-sale.
As a baseline scenario for our study, we deﬁne a supply
chain of 15 partners (and locations) distributed in a 4-level
binary tree (Figure 6). Participating readers are those asso-
ciated with receiving and shipping operations. We consider
EPC C1G2 tags, which operate on 16-bit data blocks (Sec-
tion 7); tail and symbol sizes of 12 symbols and 1 bit respec-
tively allow use of just one such block. The counterfeiter is
adversary A0 (Section 5.1). It can simply inject counterfeit
products with valid IDs. In our baseline scenario, it does
so at a randomly selected partner, excluding the manufac-
turer, as soon as a new and valid ID is obtained. (In prac-
tice, a counterfeiter injects clones by posing as a legal seller
and obtaining valid IDs right after the genuine products en-
Table 2. Simulation parameters for the consid(cid:173)
ered baseline scenario. N (µ, σ) represents a
normal distribution.
Parameter
Value
pmr
Misread probability
pmw Miswrite probability
pme
Misevent probability
N (5%, 1%)
N (5%, 1%)
N (5%, 1%)
rg
rc
Tp
tsh
Tst
Ttr
ol
S
m
Genuine production rate
1000 products/day
Counterfeit production rate
10 products/day
Production time
2 months
Shipping time
Stocking time
Transport time
1/day at 8AM
N (3, 0.5) days
N (1, 0.25) days
Output load (demand)
Uniformly distributed
Supply-chain structure
4-level binary tree
Tag memory size
16 bits
(t, s)
Tail and symbol sizes
(12, 1) bits
Adversary
A0
Counterfeit injection point
Random at any partner
ter the chain.) Table 2 summarizes the parameters for this
baseline scenario.
Detection depends on the number |E| of instances of
suspected clone evidence in a given trace, i.e., pairs of
time-consecutive events that fail the rule veriﬁcation stage.
Cloning is suspected if |E| ≥ DT , for a parameterized de-
tection threshold DT . For each scenario, 10 runs are exe-
cuted, each over 2 months of production.5 A trace contains
all events for genuine and clone products with a given ID
until one such product reaches a point-of-sale. (The second
product to reach a point-of-sale eventually triggers an alarm
under the basic whitelist-based detection.)
6.2 Experimental Results
We let TPR and FPR respectively denote the true positive
rate and false positive rate for a given setting.
Figure 7(a) shows the superior performance of robust
1bit-tailing (R-TAIL) over basic 1bit-tailing (TAIL).6 (As de-
5For each system element (e.g., a reader, Figure 6), the value of its
parameters that refer to some probability distributions (e.g., the misread
probability) is drawn from the given probability distribution at each run.
6Small variance can be observed when considering different simulation
runs. This is valid for all the simulation-based results in this paper.
TPR
FPR
p
mx