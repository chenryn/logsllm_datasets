              v18 = (char *)*((_DWORD *)a1 + 18);
              output = 0;
              if ( v19  x/40i 0x5790c000
        0x5790c000:    push   eax
        0x5790c001:    push   ecx
        0x5790c002:    push   edx
        0x5790c003:    push   ebx
        0x5790c004:    push   esi
        0x5790c005:    push   ebp
        0x5790c006:    push   edi
        0x5790c007:    xor    edi,edi
        0x5790c009:    mov    DWORD PTR ds:0x57903b78,esp
        0x5790c00f:    mov    esi,0x57903b7c
        0x5790c014:    push   esi
        0x5790c015:    push   0x1
        0x5790c01a:    mov    eax,0x57909000
        0x5790c01f:    call   eax
        0x5790c021:    pop    edi
        0x5790c022:    pop    ebp
        0x5790c023:    pop    esi
        0x5790c024:    pop    ebx
        0x5790c025:    pop    edx
        0x5790c026:    pop    ecx
        0x5790c027:    pop    eax
        0x5790c028:    ret
此时的内存：
`call eax`跳到的指令;
    pwndbg> x/40i 0x57909000
       0x57909000:    cmp    esi,0x57907b3c
       0x57909006:    jl     0x57909015
       0x57909008:    mov    eax,ds:0x57903b74
       0x5790900d:    mov    esp,DWORD PTR ds:0x57903b78
       0x57909013:    jmp    eax
       0x57909015:    pop    ebp
       0x57909016:    pop    DWORD PTR [esi+0x0]
       0x57909019:    push   ebp
       0x5790901a:    mov    eax,DWORD PTR [esi+0x0]
       0x5790901d:    add    BYTE PTR [ecx],dh    //get crash
       0x5790901f:    leave  
       0x57909020:    test   eax,0x1
       0x57909025:    je     0x57909028
       0x57909027:    inc    ecx
       0x57909028:    mov    DWORD PTR [esi+0x4],ecx
       0x5790902b:    mov    eax,DWORD PTR [esi+0x4]
       0x5790902e:    mov    DWORD PTR [esi+0x0],eax
       0x57909031:    mov    esi,DWORD PTR [esp+0x4]
       0x57909035:    ret    0x4
       0x57909038:    mov    esi,DWORD PTR [esp+0x4]
       0x5790903c:    ret    0x4
       0x5790903f:    add    BYTE PTR [eax],al
       0x57909041:    add    BYTE PTR [eax],al
       0x57909043:    add    BYTE PTR [eax],al
上面是执行如下的输入的情况。
    func a(x)
        return x&&1