### Optimized Text

When employing Algorithm 3, the number of domain edits should be considered a limiting factor. An alternative approach is to require the initial password to be stronger, making it more resistant to guessing and thus extending the time required for a Guessing-Based-First (GBF) attack.

In summary, this method would necessitate that users first clear an intermediate GP (Guess Probability) hurdle. Algorithm 3 would then reduce the GP to a secure level, ensuring that the resulting password is resistant to GBF attacks.

Although this approach places a higher burden on the user, tools can be provided to assist in the initial password selection. For example, if the original password’s GP does not meet a preliminary threshold, the user could receive high-level, non-specific feedback on how to strengthen it, such as increasing its length or using more character classes. This is a challenging task, as stringent password scoring often frustrates users. Additionally, the strength of these initial passwords may be illusory, as users might find ways to satisfy the requirements while still creating predictable patterns. However, without prior knowledge of how users adjust their passwords to score well against an adaptive Probabilistic Context-Free Grammar (PCFG)-based metric, it is unclear how an attacker could ease the burden of guessing the initial password.

To evaluate the impact of requiring a stronger initial password, the original rockyou-1 and rockyou-2 datasets were screened for passwords with a minimum GP of \(10^{-12}\), reducing each set to just over 500,000 passwords. These subsets were then strengthened to a GP of \(10^{-16}\), and the strengthened passwords were analyzed for resistance to both PCFG-based and GBF attacks. Table 7 shows the GPs for the strengthened passwords in rockyou-2, using the strengthened passwords in rockyou-1 as the training set for the cracking algorithm. When applying one edit, less than 1.5% of the passwords were vulnerable to guessing within a week (GP of \(10^{-14}\)), which compares favorably to the 4.6% figure in the bottom panel of Table 2. Similarly, the results for two edits are also reasonably low at all GPs shown, confirming the hypothesis that starting with a stronger initial password improves the resistance of the strengthened password to a PCFG-based attack.

While the starting passwords in this section were initially screened to have a GP of \(10^{-12}\) or better, we do not anticipate that 100% of the initial, unstrengthened passwords will meet this threshold if a different database is used to measure GPs. As seen in Table 8, when cracking passwords using a dataset trained on the screened rockyou-1 passwords, only 1.2% of the initial passwords in rockyou-2 have GPs one order of magnitude weaker than the targeted threshold of \(10^{-12}\). This is good news, as compared to Table 5, all of the percentages are markedly lower. Consequently, it will be harder to guess the password that was strengthened, meaning that a GBF attack will take significantly longer.

As noted in Section 5.2, the limiting factor for the efficacy of GBF attacks is the run time. The run times rapidly increase, making exhaustive search impractical for all but the lowest GP thresholds. When working with initially stronger passwords, the scenario is similar, with the run times in Table 9 comparable to those in Table 6.

The run times for the lowest GP thresholds are quite short, but due to the low number of passwords found, this is not a significant issue. However, the last panel of Table 9 is cause for cautious optimism. Here, as in Table 6, the attacks did not run to completion but were halted after a reasonable period. Unlike Table 6, essentially none of the strengthened passwords were guessed within a day. Although multi-day runs are required to better assess the security, applying two edits to a password that is already fairly strong appears to adequately defeat a GBF attack, leaving a would-be attacker with a PCFG-based attack as the best option (cf. Table 7).

### Conclusion

After strengthening two large sets of passwords (rockyou-1 and rockyou-2), the strengthened passwords from rockyou-1 were used to create a cracking database for the strengthened passwords from rockyou-2. For a PCFG-based cracking algorithm, the results clearly show that to reasonably guarantee that a password cannot be cracked in under a day, the strengthening algorithm should apply two edits to the user’s original password rather than just one.

It was also shown that an alternative type of attack could be even more successful. Since the original password is likely to be weak and therefore easily guessed, systematic guessing of all possible variations of passwords that can be quickly generated by a PCFG-based algorithm is an effective attack, limited only by the computing time required. Even though the search space is too large to search exhaustively when two edits are applied, we found that 5% of passwords strengthened with two random edits could be successfully guessed in the first 24 hours. However, requiring the initial password to be significantly stronger, with an initial GP of \(10^{-12}\) or better, seemed to completely thwart a GBF attack when two edits were used, with essentially none of the passwords guessable within 24 hours. Still, roughly 1% of the strengthened passwords remain vulnerable to a PCFG-based attack even with the stronger initial password.

Although the use of a significantly stronger initial password was successful in markedly reducing the effectiveness of a GBF attack, a GP of \(10^{-12}\) is a fairly high hurdle, with only 7% of the passwords in the rockyou list meeting this criterion. Since users do not seem predisposed to producing passwords possessing this level of strength, one area of future research would be the use of specific feedback (e.g., telling the user not to use “pearlharbor”) to help guide users to selecting stronger initial passwords. More efficient algorithms to search the strengthened space could also be investigated to better understand the security risk posed by GBF attacks. The efficiency of the algorithm used in this paper could be improved, particularly by reducing redundancy, such as avoiding generating some passwords of the form L7D2 from both L7D1 and L6D2 structures.

Finally, ways to bolster strengthening algorithms should be investigated. For example, rather than simply randomly replacing or inserting characters in the user’s password, additional transformations could be tried. While past work has shown that two random edits should be considered an upper limit with respect to maintaining memorability, other edits may still be feasible. Examples include inserting or weaving a 3-5 letter word into the user’s password (transforming “password” to “passCATword” or “CpassAwordT”) or reversing a string within the password (transforming “rock&roll” to “rock&llor”). It may also be beneficial to have the strengthening algorithm reject any starting password that is within two edits of a weak password; this could be instead of, or in addition to, a GP threshold on the initial password. User studies are required to determine user acceptance of this policy.

### Acknowledgements

The first author wishes to thank Gregory Ference and Megan Heysham, with whom he partnered on a preliminary project that spawned the ideas contained herein.

### References

[1] Publicly available leaked password databases: http://www.skullsec.org/wiki/index.php/passwords.
[2] Adams, A., and Sasse, M. A. Users are not the enemy. Commun. ACM 42, 12 (Dec. 1999), 40–46.
[3] Bonneau, J. The science of guessing: analyzing an anonymized corpus of 70 million passwords. In IEEE Symp. Sec. and Priv. (2012).
[4] Bonneau, J., Herley, C., Oorschot, P. C. v., and Stajano, F. The quest to replace passwords: A framework for comparative evaluation of web authentication schemes. In Proc. of the 2012 IEEE Symp. on Sec. and Priv. (Washington, DC, USA, 2012), SP ’12, IEEE Computer Society, pp. 553–567.
[5] Bonneau, J., Just, M., and Matthews, G. What’s in a Name? Evaluating Statistical Attacks on Personal Knowledge Questions. In Financial Cryptography and Data Sec. ’10 (2010).
[6] Florencio, D., and Herley, C. A large-scale study of web password habits. In Proc. of the 16th Int. Conf. on WWW (New York, NY, USA, 2007), WWW ’07, ACM, pp. 657–666.
[7] Forget, A., and Biddle, R. Memorability of persuasive passwords. In CHI ’08 Extended Abstracts on Human Factors in Computing Sys. (New York, NY, USA, 2008), CHI EA ’08, ACM, pp. 3759–3764.
[8] Forget, A., Chiasson, S., and Biddle, R. Helping users create better passwords: is this the right approach? In Proc. of the 3rd Symp. on Usable Priv. and Sec. (New York, NY, USA, 2007), SOUPS ’07, ACM, pp. 151–152.
[9] Forget, A., and et al. Improving text passwords through persuasion. In Proc. of the 4th Symp. on Usable Priv. and Sec. (New York, NY, USA, 2008), SOUPS ’08, ACM, pp. 1–12.
[10] Forget, A., and et al. Persuasion for stronger passwords: Motivation and pilot study. In Proc. of the 3rd Int. Conf. on Persuasive Technology (Berlin, Heidelberg, 2008), PERSUASIVE ’08, Springer-Verlag, pp. 140–150.
[11] Garrison, C. P. Encouraging good passwords. In Proc. of the 3rd Annual Conf. on Information Sec. Curriculum Development (New York, NY, USA, 2006), InfoSecCD ’06, ACM, pp. 109–112.
[12] Houshmand, S., and Aggarwal, S. Building better passwords using probabilistic techniques. In Proc. of the 28th Annual Computer Sec. Applications Conf. (New York, NY, USA, 2012), ACSAC ’12, ACM, pp. 109–118.
[13] Inglesant, P. G., and Sasse, M. A. The true cost of unusable password policies: password use in the wild. In Proc. of the SIGCHI Conf. on Human Factors in Computing Sys. (New York, NY, USA, 2010), CHI ’10, ACM, pp. 383–392.
[14] Kelley, P. G., and et al. Guess again (and again and again): Measuring password strength by simulating password-cracking algorithms. In IEEE Symp. on Sec. and Priv. (2012), pp. 523–537.
[15] Komanduri, S., and et al. Of passwords and people: measuring the effect of password-composition policies. In Proc. of the SIGCHI Conf. on Human Factors in Computing Sys. (New York, NY, USA, 2011), CHI ’11, ACM, pp. 2595–2604.
[16] Leonhard, M. D., and Venkatakrishnan, V. N. A comparative study of three random password generators. In EIT’07: Proc. 2007 IEEE Int. Conf. on Electro/Information Tech. (2007).
[17] Ma, W., and et al. Password entropy and password quality. In Proc. of the 2010 Fourth Int. Conf. on Network and System Sec. (Washington, DC, USA, 2010), NSS ’10, IEEE Computer Society, pp. 583–587.
[18] Marechal, S. Advances in password cracking. Journal in Computer Virology 4 (2008), 73–81.
[19] Morris, R., and Thompson, K. Password sec.: A case history. Comm. of the ACM 22 (1979), 594–597.
[20] Narayanan, A., and Shmatikov, V. Fast dictionary attacks on passwords using time-space tradeoff. In Proc. of the 12th ACM Conf. on Computer and Comm. Sec. (New York, NY, USA, 2005), CCS ’05, ACM, pp. 364–372.
[21] Perito, D., Castelluccia, C., and Duermuth, M. Adaptive password-strength meters from Markov models. In Network and Dist. Sys. Sec. Symp. (2012).
[22] Peslyak, A. John the ripper.
[23] Shay, R., and Bertino, E. A comprehensive simulation tool for the analysis of password policies. Int. J. Inf. Secur. 8, 4 (Aug. 2009), 275–289.
[24] Shay, R., and et al. Encountering stronger password requirements: user attitudes and behaviors. In Proc. of the 6th Symp. on Usable Priv. and Sec. (New York, NY, USA, 2010), SOUPS ’10, ACM, pp. 2:1–2:20.
[25] Ur, B., and et al. How does your password measure up? the effect of strength meters on password creation. In Proc. of the 21st USENIX Conf. on Sec. Symp. (Berkeley, CA, USA, 2012), Sec.’12, USENIX Association, pp. 5–5.
[26] Weir, M., Aggarwal, S., Medeiros, B. d., and Glodek, B. Password cracking using probabilistic context-free grammars. In Proc. of the 2009 30th IEEE Symp. on Sec. and Priv. (Washington, DC, USA, 2009), SP ’09, IEEE Computer Society, pp. 391–405.
[27] Weir, M., and et al. Testing metrics for password creation policies by attacking large sets of revealed passwords. In Proc. of the 17th ACM Conf. on Computer and Comm. Sec. (New York, NY, USA, 2010), CCS ’10, ACM, pp. 162–175.
[28] Yan, J., and et al. Password memorability and sec.: Empirical results. IEEE Sec. and Priv. 2, 5 (Sept. 2004), 25–31.