dom edits should be considered the limit when using Algo-
rithm 3. A second method would be to require the initial
password to be stronger, thus harder to guess, making a
GBF attack take longer.
In short, this would require the
user to clear an intermediate GP hurdle, with Algorithm 3
then decreasing the GP to a secure level with the resulting
password resistant to GBF attack.
Although this approach requires more of the user, tools
could be provided to assist with the initial selection. For in-
stance, in the event the original password’s GP did not meet
a preliminary threshold, the user could be given high-level,
non-speciﬁc feedback on how to make the initial password
stronger such as to make the password longer or to use more
character classes. This is admittedly a diﬃcult challenge, as
we have already noted that stringent password scoring is
frustrating to users. Further, the strength of these initial
passwords is potentially illusory as users may, as with sim-
ple composition policies, ﬁnd ways to satisfy the requirement
but still produce passwords that fall into patterns which
could be discovered and exploited. However, absent any a
priori knowledge about how users would adjust their pass-
word to score well against an adaptive PCFG-based metric,
it is unclear how an attacker could ease the burden of guess-
ing the initial password.
To test the impact of requiring a stronger initial password,
the original rockyou-1 and rockyou-2 sets were screened for
−12, which reduced
passwords with a minimum GP of 10
each set to just over 500K passwords. These subsets were
−16, and the strengthened pass-
strengthened to a GP of 10
words were analyzed for resistance to both PCFG-based and
GBF attacks. Table 7 shows the GPs for the strengthened
passwords in rockyou-2, when using the strengthened pass-
words in rockyou-1 as the training set for the cracking algo-
rithm. When applying one edit, less than 1.5% of the pass-
−14),
words vulnerable to guessing within a week (GP of 10
which compares favorably to the 4.6% ﬁgure in the bottom
Table 7: GPs for Strengthened Passwords, Screened
Subset
Edits Full? % 10
0.5
0.6
0.4
0.5
Y
N
Y
N
1
1
2
2
−13 % 10
0.9
1.4
0.7
0.9
−14 % 10
2.2
3.5
1.3
2.0
−15
Table 8: GPs for Passwords Needing Strengthening,
Screened Subset
Edits Full? % 10
0.0
0.0
0.0
0.0
Y
N
Y
N
1
1
2
2
−12
−9 % 10
0.1
0.1
0.1
0.1
−10 % 10
1.2
0.7
1.2
1.2
−11 % 10
12.7
5.5
13.9
13.6
panel of Table 2. Similarly, the results for two edits are
also reasonably low at all GPs shown. This conﬁrms the
hypothesis that starting with an initially stronger password
improves the resistance of the strengthened password to a
PCFG-based attack.
While the starting passwords in this section were initially
−12 or stronger, recalling the
screened to have a GP of 10
“pearlharbor1” example, we do not anticipate that 100% of
the initial, unstrengthened passwords to meet this threshold
if a diﬀerent database is used to measure GPs. As seen in
Table 8, when cracking passwords using a data set trained
on the screened rockyou-1 passwords, only 1.2% of the ini-
tial passwords in rockyou-2 have GPs one order of magni-
−12. This is
tude weaker than the targeted threshold of 10
good news – compared to Table 5, all of the percentages are
markedly lower. Consequently, it will be harder to guess the
password which was strengthened which means that a GBF
attack will take signiﬁcantly longer.
As noted in Section 5.2, the limiting factor on the eﬃcacy
of GBF attacks is the run time. As seen previously, the run
times rapidly climb, making exhaustive search impractical
for all but the lowest GP thresholds. When working with
initially stronger passwords, the scenario is similar, with the
run times in Table 9 similar to those in Table 6.
The run times for the lowest GP thresholds are quite
short, but, due to the low number of passwords that are
found this is not the issue that it was in Section 5.2. How-
ever, the last panel of Table 9 is cause for cautious optimism.
Here, as in Table 6, the attacks did not run to completion
Table 9: GBF Run Times, Screened Subset
Min GP Edits Full?
−9
−9
−10
−10
−11
−11
−12
−12
−12
−12
10
10
10
10
10
10
10
10
10
10
1
1
1
1
1
1
1
1
2
2
Y
N
Y
N
Y
N
Y
N
Y
N
Run Time, 12 cores
20 minutes
3 minutes
6.5 hours
1 hour
5 days (est)
17 hours
Guessed 0.3% in 24 hours
Guessed 0.6% in 24 hours
3 passwords in 24 hours
28 passwords in 24 hours
137
but were halted after a reasonable period of time.6. Unlike
Table 6, we see that essentially none of the strengthened
passwords were guessed within a day. Although multi-day
runs are required to better assess the security, applying two
edits to a password that is already fairly strong appears to
adequately defeat a GBF attack, leaving a would-be attacker
with a PCFG-based attack as the best option (cf. Table 7).
6. CONCLUSION
After strengthening two large sets of passwords (rockyou-1
and rockyou-2), the strengthened passwords from rockyou-1
were used to create a cracking database for the strengthened
passwords from rockyou-2. For a PCFG-based cracking al-
gorithm, the results clearly show that in order to reasonably
guarantee that a password cannot be cracked in under a day,
the strengthening algorithm should apply two edits to the
user’s original password rather than just one.
It was also shown that an alternative type of attack could
be even more successful. Since the original password is likely
to be weak and therefore easily guessed, systematic guessing
of all possible variations of passwords that can be quickly
generated by a PCFG-based algorithm is an eﬀective at-
tack, limited only by the computing time required. Even
though the search space is too large to search exhaustively
when two edits are applied, we nonetheless found that 5%
of passwords strengthened with two random edits could be
successfully guessed in the ﬁrst 24 hours. However, requir-
ing the initial password to be signiﬁcantly stronger, with an
−12 or better, seemed to completely thwart a
initial GP of 10
GBF attack when two edits were used, with essentially none
of the passwords guessable within 24 hours. Still, roughly
1% of the strengthened passwords remain vulnerable to a
PCFG-based attack even with the stronger initial password.
Although the use of a signiﬁcantly stronger initial pass-
word was successful in markedly reducing the eﬀectiveness
−12 is a fairly high hurdle, with
of a GBF attack, a GP of 10
only 7% of the passwords in the rockyou list meeting this
criterion. Since users do not seem predisposed to producing
passwords possessing this level of strength, one area of future
research would be the use of speciﬁc feedback (e.g., telling
the user not to use “pearlharbor”) which may help guide
users to selecting stronger initial passwords. More eﬃcient
algorithms to search the strengthened space could also be
investigated, in order to better understand the security risk
posed by GBF attacks. The eﬃciency of the algorithm used
in this paper could be improved. In particular, there was
some redundancy as edits to the structures L7D1 and L6D2
both generate some passwords of the form L7D2.
Finally, ways to bolster strengthening algorithms should
be investigated: for example, rather than simply randomly
replacing or inserting characters in the user’s password, ad-
ditional transformations could be tried. While past work
([9, 10]) has shown that two random edits should be con-
sidered an upper limit with respect to maintaining memo-
rability, other edits may still be feasible. Examples would
be to insert or weave a 3-5 letter word into the user’s pass-
word (transforming “password” to “passCATword” or “Cpas-
sAwordT”), or to reverse a string within the password (trans-
forming “rock&roll” to “rock&llor”). It may also be beneﬁ-
6For the partial runs in Table 9, only passwords with a GP
−11 were modiﬁed due to the low probability
stronger than 10
of success when modifying weaker passwords
cial to have the strengthening algorithm reject any starting
password which is within two edits of a weak password7; this
could be instead of, or in addition to, a GP threshold on the
initial password. Once again, user studies are required to
determine user acceptance of this policy.
7. ACKNOWLEDGEMENTS
The ﬁrst author wishes to thank Gregory Ference and
Megan Heysham, with whom he partnered on a preliminary
project which spawned the ideas contained herein.
8. REFERENCES
[1] Publicly available leaked password databases :
http://www.skullsec..org/wiki/index.php/passwords.
[2] Adams, A., and Sasse, M. A. Users are not the
enemy. Commun. ACM 42, 12 (Dec. 1999), 40–46.
[3] Bonneau, J. The science of guessing: analyzing an
anonymized corpus of 70 million passwords. In IEEE
Symp. Sec. and Priv. (2012).
[4] Bonneau, J., Herley, C., Oorschot, P. C. v.,
and Stajano, F. The quest to replace passwords: A
framework for comparative evaluation of web
authentication schemes. In Proc. of the 2012 IEEE
Symp. on Sec. and Priv. (Washington, DC, USA,
2012), SP ’12, IEEE Computer Society, pp. 553–567.
[5] Bonneau, J., Just, M., and Matthews, G. What’s
in a Name? Evaluating Statistical Attacks on Personal
Knowledge Questions. In Financial Cryptography and
Data Sec. ’10 (2010).
[6] Florencio, D., and Herley, C. A large-scale study
of web password habits. In Proc. of the 16th Int. Conf.
on WWW (New York, NY, USA, 2007), WWW ’07,
ACM, pp. 657–666.
[7] Forget, A., and Biddle, R. Memorability of
persuasive passwords. In CHI ’08 Extended Abstracts
on Human Factors in Computing Sys. (New York, NY,
USA, 2008), CHI EA ’08, ACM, pp. 3759–3764.
[8] Forget, A., Chiasson, S., and Biddle, R. Helping
users create better passwords: is this the right
approach? In Proc. of the 3rd Symp. on Usable Priv.
and Sec. (New York, NY, USA, 2007), SOUPS ’07,
ACM, pp. 151–152.
[9] Forget, A., and et al. Improving text passwords
through persuasion. In Proc. of the 4th Symp. on
Usable Priv. and Sec. (New York, NY, USA, 2008),
SOUPS ’08, ACM, pp. 1–12.
[10] Forget, A., and et al. Persuasion for stronger
passwords: Motivation and pilot study. In Proc. of the
3rd Int. Conf. on Persuasive Technology (Berlin,
Heidelberg, 2008), PERSUASIVE ’08,
Springer-Verlag, pp. 140–150.
[11] Garrison, C. P. Encouraging good passwords. In
Proc. of the 3rd Annual Conf. on Information Sec.
Curriculum Development (New York, NY, USA,
2006), InfoSecCD ’06, ACM, pp. 109–112.
[12] Houshmand, S., and Aggarwal, S. Building better
passwords using probabilistic techniques. In Proc. of
the 28th Annual Computer Sec. Applications Conf.
(New York, NY, USA, 2012), ACSAC ’12, ACM,
pp. 109–118.
7This is reminiscent of the comprehensive8 policy of [14]
[13] Inglesant, P. G., and Sasse, M. A. The true cost
of unusable password policies: password use in the
wild. In Proc. of the SIGCHI Conf. on Human Factors
in Computing Sys. (New York, NY, USA, 2010), CHI
’10, ACM, pp. 383–392.
[14] Kelley, P. G., and et al. Guess again (and again
and again): Measuring password strength by
simulating password-cracking algorithms. In IEEE
Symp. on Sec. and Priv. (2012), pp. 523–537.
[15] Komanduri, S., and et al. Of passwords and
people: measuring the eﬀect of password-composition
policies. In Proc. of the SIGCHI Conf. on Human
Factors in Computing Sys. (New York, NY, USA,
2011), CHI ’11, ACM, pp. 2595–2604.
[16] Leonhard, M. D., and Venkatakrishnan, V. N. A
comparative study of three random password
generators. In EIT’07: Proc. 2007 IEEE Int. Conf. on
Electro/Information Tech. (2007).
[17] Ma, W., and et al. Password entropy and password
quality. In Proc. of the 2010 Fourth Int. Conf. on
Network and System Sec. (Washington, DC, USA,
2010), NSS ’10, IEEE Computer Society, pp. 583–587.
[18] Marechal, S. Advances in password cracking.
Journal in Computer Virology 4 (2008), 73–81.
[19] Morris, R., and Thompson, K. Password sec.: A
case history. Comm. of the ACM 22 (1979), 594–597.
[20] Narayanan, A., and Shmatikov, V. Fast dictionary
attacks on passwords using time-space tradeoﬀ. In
Proc. of the 12th ACM Conf. on Computer and
Comm. Sec. (New York, NY, USA, 2005), CCS ’05,
ACM, pp. 364–372.
[21] Perito, D., Castelluccia, C., and Duermuth, M.
Adaptive password-strength meters from markov
models. In Network and Dist. Sys. Sec. Symp. (2012).
[22] Peslyak, A. John the ripper.
[23] Shay, R., and Bertino, E. A comprehensive
simulation tool for the analysis of password policies.
Int. J. Inf. Secur. 8, 4 (Aug. 2009), 275–289.
[24] Shay, R., and et al. Encountering stronger
password requirements: user attitudes and behaviors.
In Proc. of the 6th Symp. on Usable Priv. and Sec.
(New York, NY, USA, 2010), SOUPS ’10, ACM,
pp. 2:1–2:20.
[25] Ur, B., and et al. How does your password measure
up? the eﬀect of strength meters on password
creation. In Proc. of the 21st USENIX Conf. on Sec.
Symp. (Berkeley, CA, USA, 2012), Sec.’12, USENIX
Association, pp. 5–5.
[26] Weir, M., Aggarwal, S., Medeiros, B. d., and
Glodek, B. Password cracking using probabilistic
context-free grammars. In Proc. of the 2009 30th IEEE
Symp. on Sec. and Priv. (Washington, DC, USA,
2009), SP ’09, IEEE Computer Society, pp. 391–405.
[27] Weir, M., and et al. Testing metrics for password
creation policies by attacking large sets of revealed
passwords. In Proc. of the 17th ACM Conf. on
Computer and Comm. Sec. (New York, NY, USA,
2010), CCS ’10, ACM, pp. 162–175.
[28] Yan, J., and et al. Password memorability and sec.:
Empirical results. IEEE Sec. and Priv. 2, 5 (Sept.
2004), 25–31.
138