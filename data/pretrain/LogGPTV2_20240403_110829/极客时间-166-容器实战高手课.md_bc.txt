# tracer: function_graph    
#    
# CPU  DURATION                  FUNCTION CALLS    
# |     |   |                     |   |   |   |      0) ! 175.411 us  |  do_mount();通过 function_graphtracer，还可以让我们看到每个函数里所有子函数的调用以及时间，这对我们理解和分析内核行为都是很有帮助的。比如说，我们想查看 kfree_skb()这个函数是怎么执行的，就可以像下面这样配置：    
# echo '!do_mount ' >> set_ftrace_filter 
### 先把之前的do_mount filter给去掉。    
# echo kfree_skb > set_graph_function  
### 设置kfree_skb()    
# echo nop > current_tracer 
### 暂时把current_tracer设置为nop, 这样可以清空trace    
# echo function_graph > current_tracer 
### 把current_tracer设置为function_graph设置完成之后，我们再来看 trace 的输出。现在，我们就可以看到kfree_skb()下的所有子函数的调用，以及它们花费的时间了。具体输出如下，你可以做个参考：    
# cat trace | more    