##### System information
  * OpenCV => 4.0.1 (Exactly, I am using OpenCV lib included in OpenVINO R5 2018 release.)
  * Operating System / Platform => Windows 64 Bit
  * Compiler => Visual Studio 2015
##### Detailed description
Memory increases quickly as i run my code.  
My code is really simple: Create 2000 threads, and in each thread try to
create a UMAT.
    #include "stdafx.h"
    #include 
    #include 
    #include 
    #include 
    #include 
    #include 
    #include 
    #define DECODECORE_ROI_IMAGE_WIDTH 480
    #define DECODECORE_ROI_IMAGE_HEIGHT 640
    unsigned char resized[DECODECORE_ROI_IMAGE_WIDTH * DECODECORE_ROI_IMAGE_HEIGHT];
    void TestThread()
    {
    	std::cout << "TestThread started\n";
    	cv::Mat srcMat(DECODECORE_ROI_IMAGE_WIDTH, DECODECORE_ROI_IMAGE_HEIGHT, CV_8UC1, resized);
    	cv::UMat uMsrcImg = srcMat.getUMat(cv::ACCESS_READ);
    	uMsrcImg.release();
    	srcMat.release();
    }
    int main()
    {
    	for (int i = 0; i < 2000; i++)
    	{
    		std::thread finderThread = std::thread(TestThread);
    		finderThread.detach();
    		std::cout << "i is " << i << "\n";
    	}
    	return 0;
    }