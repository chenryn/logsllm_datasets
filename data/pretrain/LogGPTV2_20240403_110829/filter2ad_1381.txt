title:ETMCC: Model Checking Performability Properties of Markov Chains
author:Holger Hermanns and
Joost-Pieter Katoen and
Joachim Meyer-Kayser and
Markus Siegle
ETMCC: Model Checking Performability Properties of Markov Chains
Holger Hermannsab, Joost-Pieter Katoenb, Joachim Meyer-Kayserc, Markus Sieglec
aDept. of Computer Science, Universit¨at des Saarlandes, Germany
bFormal Methods and Tools Group, University of Twente, The Netherlands
cDept. of Computer Science, Universit¨at Erlangen-N¨urnberg, Germany
Model Checking Markov Chains
Markov chains are widely used for modelling the behaviour
of computer and communication systems. A common goal
of modelling is the estimation of performance and depend-
ability measures of the system under study, such as through-
put, buffer occupancy or mean time to failure. With model
checking, the angle is somewhat different: Instead of con-
ducting an analysis whose aim it is to derive measures, one
ﬁrst speciﬁes requirements (with the help of a temporal
logic) which are then checked automatically. Model check-
ing of stochastic systems has developed into an active area
of research. The logic PCTL, an extension of CTL, and the
associated model checking algorithms allow one to spec-
ify and verify properties of DTMCs and Markov decision
processes.
In the continuous time setting, the logic CSL
[1, 2] has been developed for model checking properties of
CTMCs. While PCTL and CSL are based on the labelling
of states with elementary properties (atomic propositions),
the logic aCSL [3] is based on action-labelled transitions,
which is advantageous if used in the context of modelling
formalisms such as stochastic process algebra where the ba-
sic unit of behaviour is that of a named action.
The Erlangen-Twente Markov chain checker (ETMCC)
is a software tool which supports the automatic checking of
performability properties given as CSL or aCSL formulas.
The model to be checked is a ﬁnite CTMC labelled with
atomic propositions and/or transition names.
ETMCC Tool Architecture
ETMCC is written in Java, which guarantees platform
independence, and consists of the following components:
The Graphical user interface enables the user to load,
modify and save veriﬁcation projects (a project consists of
a model and the properties to be checked). It contains the
“Property Manager” which allows the user to construct and
edit properties. Veriﬁcation parameters for the numerical
analysis and logging levels can be set through the GUI. The
Tool driver controls the model checking procedure. It gen-
erates the parse tree corresponding to the property at hand
and calls the respective veriﬁcation objects that encapsulate
the veriﬁcation algorithms. These objects, in turn, use the
1Supported by the DFG/NWO project VOSS.
analysis and/or numerical engine. The Analysis engine
supports standard model checking algorithms for CTL-style
until-formulas, as well as graph algorithms, for instance
to compute the bottom strongly connected components
of a Markov chain. The former algorithms are used in a
pre-processing phase during the checking of probabilistic
until-formulas while the latter is needed when calculating
steady state properties. The Numerical engine provides
several methods for the numerical analysis of the CTMC
such as linear solvers, methods for numerical integration
and uniformisation. These are used to solve sytems of
linear or integral equations. The State space manager
represents the model in sparse matrix format. It maintains
information about the validity of atomic propositions and
of sub-formulas for each state.
Status and Availability
ETMCC has been used successfully in several non-trivial
case studies, e.g. a cyclic server polling system and a mul-
tiprocessor mainframe with software failures. Its efﬁcient
numerical analysis methods enable users to check performa-
bility properties for models of up to several millions of
states. The tool is available free of charge for academia,
see http://www7.informatik.uni-erlangen.de/etmcc/, the
current download being version 1.4. A detailed description
of ETMCC can be found in [4].
References
[1] A. Aziz, K. Sanwal, V. Singhal, and R. Brayton. Verifying
In CAV, pages 269–276.
continuous time Markov chains.
Springer, LNCS 1102, 1996.
[2] C. Baier, B. Haverkort, H. Hermanns, and J.-P. Katoen.
Model Checking Continuous Time Markov Chains by Tran-
sient Analysis.
In CAV, pages 358–372. Springer, LNCS
1855, 2000.
[3] H. Hermanns, J.-P. Katoen, J. Meyer-Kayser, and M. Siegle.
Towards model checking stochastic process algebra.
In In-
tegrated Formal Methods, pages 420–439. Springer, LNCS
1945, 2000.
[4] H. Hermanns, J.-P. Katoen, J. Meyer-Kayser, and M. Siegle.
A tool for model checking Markov chains.
Int. Journal on
Software Tools for Technology Transfer, 2003. (accepted for
publication).
Proceedings of the 2003 International Conference on Dependable Systems and Networks (DSN’03) 
0-7695-1959-8/03 $17.00 (c) 2003 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 07:04:55 UTC from IEEE Xplore.  Restrictions apply.