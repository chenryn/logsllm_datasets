本章内容有：
• 标准的Bourne shell嵌入命令列表
例如，c d和p w d命令可同时在系统和嵌入命令中发现。如果要运行系统版，简单输入
命令路径即可：
/ b i n / p w d
24.1 shell嵌入命令完整列表
表2 4 - 1给出标准嵌入命令的完整列表。
表24-1 标准嵌入命令
： 空，永远返回为t r u e
. 从当前s h e l l中执行操作
b r e a k 退出f o r、w h i l e、u n t i l或c a s e语句
c d 改变到当前目录
c o n t i n u e 执行循环的下一步
e c h o 反馈信息到标准输出
e v a l 读取参数，执行结果命令
e x e c 执行命令，但不在当前s h e l l
exit 退出当前s h e l l
e x p o r t 导出变量，使当前s h e l l可利用它
p w d 显示当前目录
r e a d 从标准输入读取一行文本
r e a d o n l y 使变量只读
r e t u r n 退出函数并带有返回值
s e t 控制各种参数到标准输出的显示
s h i f t 命令行参数向左偏移一个
test 评估条件表达式
t i m e s 显示s h e l l运行过程的用户和系统时间
t r a p 当捕获信号时运行指定命令
u l i m i t 显示或设置s h e l l资源
u m a s k 显示或设置缺省文件创建模式
u n s e t 从s h e l l内存中删除变量或函数
w a i t 等待直到子进程运行完毕，报告终止
下面讲述一些未涉及或前面讲解不深的命令。
24.1.1 pwd
显示当前目录
加入java编程群：524621833
278
第四部分 基础s h e l l编程
下载
$ pwd
/ t m p
24.1.2 set
在查看调试脚本、打开或关闭s h e l l选项时，曾用到s e t命令。s e t也可用于在脚本内部给出
其运行参数，以下举例说明。假定有一段脚本控制两个参数，但并不向脚本传递参数而是在
脚本内部设置其取值。可以用s e t命令完成此功能。
格式为：
set param1 param2 ..
下面的脚本设置参数为a c c o u n t s . d o c和a c c o u n t s . b a k，然后对参数进行循环处理。
当测试一段脚本且脚本包含参数时，这样使用 s e t命令有很多用处。其一就是不必在每次
运行脚本时重复输入参数。
24.1.3 times
t i m e s命令给出用户脚本或任何系统命令的运行时间。第一行给出 s h e l l消耗时间，第二行
给出运行命令消耗的时间。下面是t i m e s命令的输出结果：
相信以后会经常用到该命令。
24.1.4 type
使用t y p e查询命令是否仍驻留系统及命令类型。 t y p e打印命令名是否有效及该命令在系统
的位置。例如：
加入java编程群：524621833
279
第24章 s h e l l嵌入命令
下载
24.1.5 ulimit
u l i m i t设置运行在s h e l l上的显示限制。通常此命令定位于文件 / e t c / p r o f i l e中，但是可以从
当前s h e l l或用户. p r o f i l e文件中将之移入用户需要的位置。u l i m i t一般格式如下：
ulimit options
u l i m i t有几个选项，以下是一些常用的选项：
选 项 含 义
- a 显示当前限制
- c 限制内核垃圾大小
- f 限制运行进程创建的输出文件的大小
例如u l i m i t取值为：
将内核文件垃圾数目设置为0：
24.1.6 wait
w a i t命令等待直到一个用户子进程完成，可以在w a i t命令中指定进程I D号。如果并未指定，
则等待直到所有子进程完成。
等待所有子进程运行完毕：
$ wait
24.2 小结
上面讲述了s h e l l嵌入命令，其中大部分前面已经用过，本章仅详细讲述了其使用方法。
加入java编程群：524621833
下载
第五部分 高级shell编程技巧
第25章 深入讨论> myfile > myfile >$log_f 2>&1意味
着所有的输出都重定向到$ l o g _ f中，该变量的值为/ l o g s / s q l . b a c k u p . l o g。这是一个良好的习惯，
因为这样就能够捕捉到所运行的程序或脚本的所有输出，如果出现错误的话，也能够被记录
下来。
< < M AY D AY之后的内容就是手工运行s y b _ b a c k u p脚本所需要输入的内容，直到遇到另外
一个M AY D AY结束。
这样，我就不需要重新再写一个脚本；如果已经有一个菜单驱动的脚本，只需再编写一
个使用< <输入的脚本就可以自动运行原先的脚本。
25.4 自动ftp传输
< <的另外一个流行的应用就是自动f t p传输。在使用f t p时，如果能够向用户提供一个简单
的界面就好了。下面的脚本使用了匿名用户 a n o n y m o u s建立了一个f t p连接。这是一个特殊的
用户，它使得系统能够创建一个含有公共目录的安全帐户。一般来说，所有以匿名用户身份
进行连接的用户都只能从公共目录中下载文件，不过只要权限允许，用户也可以上载。
匿名用户的口令可以是任何字符串，不过最好使用主机名加上本地用户名，或电子邮件
地址。
下面的脚本将会提示如下的信息：
1) 希望登录的远程主机。
2) 文件传输的类型是二进制方式还是A S C I I方式。
3) 要下载的文件名。
4) 存放下载文件的本地目录。
当用户输入想要连接的主机之后，首先执行一个名为 t r a c e r o u t e的脚本验证本地主机是否
能够连接到远程主机。如果t r a c e r o u t e执行失败，这个自动f t p传输的脚本将会再次提示用户输
入主机名。
加入java编程群：524621833
284
第五部分 高级s h e l l编程技巧
下载
用户在看到传输模式选择的提示之后按回车键，将会选择缺省的二进制模式。
用户在输入所要下载的文件名之后，将会被提示输入保存下载文件的本地目录。缺省的
本地目录是/ t m p。如果用户所给出的目录无法找到，仍将使用缺省的 / t m p目录。
下载文件在本地的文件名将是原文件名加上. f t p后缀。
最后，用户所有的选择都将在屏幕上显示出来，待用户确认后开始进行传输。
下面就是该脚本运行时在屏幕上的显示：
下面就是该脚本的内容：
加入java编程群：524621833
285
第25章 深入讨论< <
下载
加入java编程群：524621833
286
第五部分 高级s h e l l编程技巧
下载
在f t p命令中使用< <时，使用了ftp -i -n选项，这意味着不要自动登录，而且关闭交互模式。
这样就使得脚本可以使用 u s e r命令进行登录。口令是 $ U S E R @ T H I S H O S T，在这里就是
d a v e @ b u m p e r。
如果用户每天从同一台主机上下载相同的文件，比如说是包含前一天销售数据的文件，那
么用户就没有必要每天都输入同样的主机名和文件名。可以设置 D E S T _ H O S T和F I L E N A M E变
量的缺省值，这样就可以使用户不必每天都输入同样的主机名和文件名。
下面是f t p自动传输脚本中提示用户输入主机名的一段，但是现在不同的是， D E S T _ H O S T
变量已设置了缺省值m y _ f a v o u r i t e _ h o s t。现在用户可以另外输入一个不同的主机名，也可以敲
回车键选择缺省值。
注意，现在不必再检查用户是否输入了一个值，因为如果用户没有输入的话，该变量将
被赋予缺省值。
25.5 访问数据库
s h e l l脚本一个常用的用途就是访问数据库系统获得信息。实现这样的功能， < <是再理想