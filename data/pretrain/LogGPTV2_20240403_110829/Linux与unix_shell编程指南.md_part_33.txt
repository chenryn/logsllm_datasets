### 本章内容

#### 24.1 标准的Bourne Shell嵌入命令列表
在Bourne shell中，有些命令既可以在系统层面使用，也可以作为shell内置命令使用。例如，`cd` 和 `pwd` 命令同时存在于系统和shell内部。如果需要运行系统的版本，可以通过指定完整路径来实现，如 `/bin/pwd`。

##### 24.1.1 完整的shell嵌入命令列表
表24-1列出了标准的shell内置命令及其功能：

| 命令 | 功能描述 |
| --- | --- |
| `:` | 空操作，总是返回true |
| `.` | 在当前shell环境中执行文件中的命令 |
| `break` | 退出for、while、until或case语句 |
| `cd` | 改变当前工作目录 |
| `continue` | 跳过循环中的剩余部分，继续下一次迭代 |
| `echo` | 将文本输出到标准输出设备 |
| `eval` | 读取参数并执行结果作为命令 |
| `exec` | 执行一个命令而不创建新的子进程 |
| `exit` | 退出当前shell会话 |
| `export` | 导出变量以供其他进程使用 |
| `pwd` | 显示当前工作目录 |
| `read` | 从标准输入读取一行文本 |
| `readonly` | 设置变量为只读属性 |
| `return` | 从函数返回，并可带有一个返回值 |
| `set` | 设置或取消设置shell选项及位置参数 |
| `shift` | 移动位置参数向左偏移一个位置 |
| `test` | 测试表达式的真伪性 |
| `times` | 报告用户时间和系统时间的消耗情况 |
| `trap` | 捕捉信号并执行特定命令 |
| `ulimit` | 控制资源限制 |
| `umask` | 设置默认的文件权限掩码 |
| `unset` | 删除变量或函数定义 |
| `wait` | 等待所有子进程完成 |

接下来，我们将详细介绍一些较少提及或之前未深入讲解的命令。

###### 24.1.1 pwd
`pwd` 命令用于显示当前的工作目录。
```bash
$ pwd
/tmp
```

###### 24.1.2 set
`set` 命令可用于调试脚本或开启/关闭shell选项。此外，它还可以用来在脚本内部设置运行时参数。例如，下面的脚本设置了两个参数 `accounts.doc` 和 `accounts.bak` 并对它们进行处理：
```bash
set accounts.doc accounts.bak
for param in "$@"
do
    echo "Processing $param"
done
```
这种方式非常适合于测试包含多个参数的脚本，因为它避免了每次运行时手动输入这些参数的需求。

###### 24.1.3 times
`times` 命令报告了用户脚本或任何系统命令的执行时间。其输出包括两行：第一行是shell所花费的时间，第二行是实际命令执行所用的时间。这有助于性能分析。

###### 24.1.4 type
`type` 命令可以用来查询给定命令是否存在于系统以及它的类型（内置命令、外部命令等）。这对于了解命令的具体来源非常有用。

###### 24.1.5 ulimit
`ulimit` 用于控制shell环境下的各种资源限制。常用选项如下：
- `-a`：显示所有当前的限制
- `-c`：设置内核转储文件大小
- `-f`：设置可以创建的最大文件大小

示例：
```bash
ulimit -c 0 # 设置内核文件垃圾大小为0
```

###### 24.1.6 wait
`wait` 命令暂停脚本直到指定的一个或所有子进程结束。如果没有提供PID，则等待所有子进程完成。

```bash
$ wait
```

#### 24.2 小结
本章详细介绍了Bourne shell中的内置命令，虽然许多已在之前的章节中有所涉及，但通过更深入地探讨每个命令的功能，我们希望能够帮助读者更好地理解和利用这些工具。