 **Do you want to request a _feature_ or report a _bug_?**
bug
**What is the current behavior?**
Edit: To clarify, importing SVGs directly works fine, as described here:
https://create-react-app.dev/docs/adding-images-fonts-and-files/#adding-svgs.
It only fails when used indirectly through an NPM package.
When using a Component that contains an SVG referenced in a package using the
pattern `import {ReactComponent as Foo} from "./foo.svg"', React raises this
error:
> Error: Element type is invalid: expected a string (for built-in components)
> or a class/function (for composite components) but got: undefined. You
> likely forgot to export your component from the file it's defined in, or you
> might have mixed up default and named imports.
>
> Check the render method of `Foo`.
**If the current behavior is a bug, please provide the steps to reproduce and
if possible a minimal demo of the problem. Your bug will get fixed much faster
if we can run your code and it doesn't have dependencies other than React.
Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or
CodeSandbox (https://codesandbox.io/s/new) example below:**
Reproduced here: https://github.com/neolefty/indirect-svg
**What is the expected behavior?**
An SVG imported using `import {ReactComponent as Foo} from "./foo.svg"` in an
NPM package should render in a project that depends on it.
**Which versions of React, and which browser / OS are affected by this issue?
Did this work in previous versions of React?**
Found in 16.12.0 / Linux / Chrome. Not tested in previous versions of React.