发现有部分Docx文档使用了CVE-2017-0199漏洞，攻击者非常巧妙的将 CVE-2017-0199 漏洞的RTF 文件作一个源嵌入到了 Docx
格式的文档中，这样导致 docx 文件在打开时是自动去远程获取包含 0199 漏洞的 rtf
文件再触发后面的一连串攻击行为，这样的攻击增加了安全软件的查杀难度，一些杀软根本无法检测这种攻击。
如下图，docx文档嵌入了一个远程的文档对象，打开文档后会自动打开远程的恶意 RTF 文件！
#### 4\. 新发现的“乌龙”样本
在外界发现了多例标注为 CVE-2017-8570 的 office 幻灯片文档恶意样本，同时有安全厂商宣称第一时间捕获了最新的 office
漏洞，但经过分析，发现该样本仍然是 CVE-2017-0199 漏洞野外利用的第二个 PPSX 版本，通过对一例典型样本进行分析，发现样本使用的
payload 是 Loki Bot 窃密类型的木马病毒，是一起有针对性的窃密攻击。
该样本使用powershell下载执行一个混淆的.NET 程序。下载地址为：
hxxp://192.166.218.230:3550/ratman.exe。shell.exe 会内存解密执行 Loki Bot 功能，这时 Loki
Bot 木马会窃取各种软件的信息。最后提交窃取的相关数据到远程服务器。
## OOXML类型混淆漏洞（CVE-2017-11826）
2017 年 9 月 28 日，360 核心安全事业部高级威胁应对团队捕获了一个利用 Office
0day漏洞（CVE-2017-11826）的在野攻击。该漏洞当时几乎影响微软所支持的所有 office 版本，在野攻击只针对特定的 office
版本。攻击者以在 RTF 文档中嵌入了恶意 docx 内容的形式进行攻击。微软在 2017 年 10 月 17 日发布了针对该漏洞的补丁。
### 技术细节
漏洞原因在于 font 标签没有闭合，处理 idmap 标签时，操作的还是 font 标签的内存布局。正常文件处理 idmap 时，嵌套层数为
5，处理目标为3，操作的是 OLEObject 标签的内存空间。漏洞文件处理 idmap 标签时，嵌套层数为 5，处理目标为4，此时操作的是 font
标签的内存空间。
样本在 RTF 中嵌入了 3 个 OLE 对象, 第一个用来加载 msvbvn60.dll
来绕过系统ASLR，第二个用来堆喷，做内存布局，第三个用来触发漏洞。
#### 第一个ole 对象
用 winhex 打开 RTF 样本并搜索“object”字符串可以找到第一个对象:
Oleclsid 后 面 跟 的 一 串 字 符 为 该 COM 对象的 CLASSID
，在注册表对应的是C:\Windows\system32\msvbvm60.dll，通过 Process Explorer 也可以看到 word
加载了msvbvm60.dll，用于绕过 ASLR。
#### 第二个 ole 对象
继续将剩下的两个对象提取出来，解压第二个嵌入的 ole ，是一个 word 对象，可以在/word/activeX目录里找到40个activeX*.xml
文件和一个 activeX1.bin，
这些文件是用来堆喷的。其中 ActiveX1.bin 为堆喷的内容。
通过堆喷来控制内存布局，使[ecx+4]所指的地址上填充上 shellcode，最后通过 shellcode调用 VirtualProtect
函数来改变内存页的属性，使之拥有执行权限以绕过 DEP 保护。
#### 第三个 ole 对象
提取第三个 ole ，在解压得到的 document.xml 中可以找到崩溃字符串”Lincer CharChar”：
用 winhex 打开该文件，字符串中间乱码的为”E8 A3 AC E0 A2 80”，内存中找到却是“EC 88 88 08”（编码原因，“E8 A3
AC E0 A2 88”为 ASCII 形式，而“EC 88 88 08”是Unicode 形式）。
对样本进行分析。通过栈回溯可以发现漏洞发生在Office14\WWLIB.DLL中：
在IDA中定位到问题点，崩溃点是发生在 call dword ptr [ecx+4]，如果有之前有堆喷操作进行内存布局，在 0x88888ec 上放置
shellcode，那就可以跳转去执行，进行样本下一步的攻击。
### 官方补丁
打过补丁之后，可以看到多了一个判断分支。调试补丁到这发现：
两个值不相等，跳转到右边分支，漏洞就无法被触发了。查看地址 0x649bcb04 的内容：
根据动态跟踪调试发现处理 font 标签时调用了该地址的函数：
这里猜测[eax+48h]为 font 对象处理函数的指针，而 0x64da4a4a 表示解析 OLEObject 对象。正常情况下，解析 idmap
时，应该获取 OLEObject 对象设置的数据，[eax+48]应该等于0x64da4a4a，然而这里并不相等，说明不是处理 OLEObject
对象设置的数据，跳转到右边分支，就不会执行到漏洞触发点了。
### 在野利用情况
根据360核心安全团队提供的数据，此次0day漏洞攻击在野利用真实文档格式为RTF（Rich Text
Format），攻击者通过精心构造恶意的word文档标签和对应的属性值造成远程任意代码执行，payload荷载主要攻击流程如下，值得注意的是该荷载执行恶意代码使用了某著名安全厂商软件的dll劫持漏洞，攻击最终会在受害者电脑中驻留一个以文档窃密为主要功能的远程控制木马。
## 隐藏17年的陈年老洞（CVE-2017-11882）
CVE-2017-11882是一个Office远程代码执行的漏洞。该漏洞位于EQNEDT32.EXE（Microsoft公式编辑器），这个组件首发于Microsoft
Office 2000和Microsoft
2003，用于在文档中插入和编辑方程式，EQNEDT32.EXE在17年前编译后再未更改。虽然从Microsoft Office
2007开始，显示和编辑方程的方法发生了变化，但是为了保持版本兼容性，EQNEDT32.EXE并没有从Office套件中删除。
EQNEDT32.EXE为OLE实现了一组标准的COM接口。
IOleObject
IDataObject
IOleInPlaceObject
IOleInPlaceActiveObject
IpersistStorage
而问题的就在于IpersistStorage：Load这个位置。因为历史久远，该组件开发的时候并没有例如ASLR这样的漏洞缓解措施。利用起来非常方便。
### 技术细节
问题出在EQNEDT.EXE中的IpersistStorage：Load。如图所示，strcpy函数没有检查复制时的长度，造成了溢出。
通过调试可以猜测在正常情况下eax寄存器，也就是第一个参数应该是字体名。
通过rtfobj抽取样本中的OLE对象，发现字体名为cmd.exe。
在填充的AAA……之后是0x430C12，也就是EQNEDT.EXE中调用WinExec的地方。
返回地址被覆盖为0x430C12，从而执行命令。最后便可以弹出计算器。
### 在野利用情况
2017年12月FireEye发布报告称发现APT34利用刚刚修复的CVE-2017-11882攻击中东政府[序号29]。下图是payload中漏洞利用的部分，可以看到漏洞利用成功后payload调用mshta.exe从[hxxp://mumbai-m[.]site/b[.]txt](http://mumbai-m.site/b.txt)下载恶意的脚本。
payload使用DGA算法与CC通信，并且具有多种远控功能。
在过去几个月中，APT34已经能够迅速利用至少两个公开漏洞(CVE-2017-0199和CVE-2017-11882)针对中东的组织发起攻击。
## 其他漏洞在Office情境下的利用（CVE–2017–11292和CVE-2017-8759）
因为Office的高拓展性，它会对其他一些流行的应用进行支持，比如PDF，Flash，multimedia，在线功能拓展等，Office会依托第三方接口对相应的功能进行支持。这种情况下，如果Office所依托的平台或者支持应用本身出现漏洞，那么就造成Office安全问题。
8月24日，360核心安全事业部捕获到一新型的office高级威胁攻击。9月12日，微软才进行了大规模安全更新，攻击使用的CVE-2017-8759（.NET
Framework漏洞）在野利用时为0day状态。与之类似的还有在10月10日卡巴斯基确定的Adobe Flash 0
day漏洞攻击，将恶意Flash嵌入到Word中，用户打开文档便会中招。10月16日，Adobe紧急发布安全公告，修复了该漏洞（CVE-2017-11292）。
两枚漏洞都不是Office自身的问题，却可以利用在Office攻击中。
### 技术分析
#### CVE-2017-11292类型混淆漏洞