Oracle to Postgres
Migration
Considerations, Hurdles, and possible Solutions
Presented by Gurjeet Singh
May 19, 2011
EnterpriseDB, Postgres Plus and Dynatune are trademarks 1
of EnterpriseDB Corporation. Other names may be
t(Cra) dEentmerparriskesD oBf Ctohrepoirr arteiosnp 2e0c1t1i.v Ael l oRwignhetsr Rs.e s'er v2e0d.1 C0o. mAplla nryig Chotnsf idential
reserved.
Agenda
 Schema Migration
 Data Type Migration
 Data Migration
 Business Logic Migration
 Other Objects
 Connectors / Drivers / Libraries
 Application / SQL Migration
 DBA Migration
 Tools
 Ora2pg
2
(C) EnterpriseDB Corporation 2011. All Rights Reserved. Company Confidential
Schema Migration
3
(C) EnterpriseDB Corporation 2011. All Rights Reserved. Company Confidential
Schema Migration
 Schema
A.K.A “User” in Oracle
Oracle gives every user her own schema, by default
 Create a user and schema by the same name
 The first component in search_path is $user, by default
 Identifiers
Names of schema, tables, columns, functions, …
Oracle converts them to UPPER CASE, unless quoted
Postgres converts them to lower case, unless quoted
You're safe if application quotes/does not quote the identifiers
 Consistency is the key
4
(C) EnterpriseDB Corporation 2011. All Rights Reserved. Company Confidential
Schema Migration
 Tables
CREATE TABLE is mostly compatible, except
 Global Temporary table
 Use LOCAL TEMP tables
 Partition clauses
 Use Inheritance, Triggers, and CHECK Constraints
 INITTRANS, MAXEXTENTS a.k.a Storage Clause
 Remove them
 PCTFREE : Use fillfactor
 Columns
Virtual Columns: Use views
Data Types 
5
(C) EnterpriseDB Corporation 2011. All Rights Reserved. Company Confidential
Schema Migration
 Constraints
Primary Key, Foreign Key, Unique, CHECK, NOT NULL
 They all work pretty much the same
 Indexes
Btree / Descending: Works
Reverse Key / Bitmap / Join: Not implemented (yet)
Global: Feature not available
 Write BEFORE INSERT/UPDATE triggers; very expensive
 Partitions
Hash, List, Range
 All work, provided you follow the previous slide
6
(C) EnterpriseDB Corporation 2011. All Rights Reserved. Company Confidential
Schema Migration
 Tablespace
Not really the same thing as Oracle, but serves the same purpose
7
(C) EnterpriseDB Corporation 2011. All Rights Reserved. Company Confidential
Data Type Migration
8
(C) EnterpriseDB Corporation 2011. All Rights Reserved. Company Confidential
Data Type Migration
 VARCHAR, VARCHAR2, NVARCHAR, NVARCHAR2
Convert to VARCHAR or TEXT
 CHAR, NCHAR
Convert to CHAR
 CLOB, LONG
Convert to VARCHAR or TEXT
 Note: TOAST
Totally transparent to application.
Size limit 2^30-1 (1 GB)
9
(C) EnterpriseDB Corporation 2011. All Rights Reserved. Company Confidential
Data Type Migration
 NUMBER
BIGINT, INT, SMALLINT, REAL, REAL, DOUBLE PRECISION
 Good Performance, but less control on scale
NUMERIC
 Unlimited size (implementation specific)
 Low performance
 BINARY_INTEGER, BINARY_FLOAT, ,...
Convert to INTEGER, FLOAT, …
 BLOB, RAW, LONG RAW
Convert to BYTEA; requires additional work in application
migration
10
(C) EnterpriseDB Corporation 2011. All Rights Reserved. Company Confidential
Data Type Migration
 Date
DATE or TIMESTAMP
Also consider timezone effects; TIMESTAMP WITH TIMEZONE
 DATE arithmetic
DATE + integer
 Create an overloaded ’+’ OPERATOR
ORAFCE provides last_day, add_months, …
TIMESTAMP – TIMESTAMP: Oracle: NUMBER, Postgres: INTERVAL
 NLS_DATE_FORMAT
Controls output of TO_CHAR and TO_DATE functions
In Postgres, controlled by locale settings
Note: DateStyle GUC variable
11
(C) EnterpriseDB Corporation 2011. All Rights Reserved. Company Confidential
Data Migration
12
(C) EnterpriseDB Corporation 2011. All Rights Reserved. Company Confidential
Data Migration
 Data
Use GUI tools
 If data type conversion was smooth
 If database size is not a restriction
Use ETL style
 Use custom application to export in plain-text, CSV
 Use scripting (Perl!) for transforming
 Use COPY FROM to load
 Avoid WAL logging by creating/truncating the table in
same transaction
 Upside: Allows parallel loads
 Downside: Requires custom development
13
(C) EnterpriseDB Corporation 2011. All Rights Reserved. Company Confidential
Data Migration
 Sequences
Extract sequence_name.nextval
Use Postgres' setval('sequence_name', value)
 Speeding up
Avoid transaction logging (WAL), as noted previously
Defer Index creation until after data load
 Consider deferring Primary Key and Unique constraints, too;
requires that you defer Foreign Key constraints
14
(C) EnterpriseDB Corporation 2011. All Rights Reserved. Company Confidential
Business Logic Migration
15
(C) EnterpriseDB Corporation 2011. All Rights Reserved. Company Confidential
Business Logic Migration
 General
RETURN becomes RETURNS
EXECUTE IMMEDIATE becomes EXECUTE
SELECT without INTO becomes PERFORM
 PERFORM has the same syntax as a full blown SELECT
You must chose a language
 CREATE OR REPLACE FUNCTION fn( a INOUT) RETURNS
INT AS $$DECLARE  BEGIN . END; $$ LANGUAGE
lang;
%TYPE, %ROWTYPE: works
cursor_name%ROWTYPE: Doesn't work; Use RECORD
REFCURSORS: No replacement; Use Set-Returning-Functions
16
(C) EnterpriseDB Corporation 2011. All Rights Reserved. Company Confidential
Business Logic Migration
 General
Autonomous transactions
 Feature not available
 use DBLink contrib module for loopback connections
Ability to COMMIT/ROLLBACK within procedures (only)
 Because of bounded size of ROLLBACK SEGMENTs
 Postgres doesn’t have rollback segments
 Use EXCEPTION handling; implemented using SAVEPOINT
 Not quite the same thing
REVERSE LOOPs require switching the start/end conditions
 FOR i IN REVERSE 1..10 LOOP
 FOR i IN REVERSE 10..1 LOOP
17
(C) EnterpriseDB Corporation 2011. All Rights Reserved. Company Confidential
Business Logic Migration
 Triggers
Split them into trigger function and the trigger
 Allows reuse of trigger code
CREATE OR REPLACE FUNCTION my_trig_fn() RETURNS TRIGGER
AS $$ ... $$ LANGUAGE xxx;
CREATE TRIGGER tbl1_trig1 BEFORE UPDATE ON table
EXECUTE PROCEDURE my_trig_fn();
:NEW, :OLD
 Become NEW, OLD
UPDATING, INSERTING => Use TG_OP; consider TG_* variables
Don't forget to RETURN NEW in BEFORE triggers
18
(C) EnterpriseDB Corporation 2011. All Rights Reserved. Company Confidential
Business Logic Migration
 Conditional triggers
Execute a trigger only if a condition matches
Postgres has it.
 Procedures
Postgres has only functions
Use RETURNS VOID
May need application changes
 since calling convention in connectors (JDBC, etc.) matters
19
(C) EnterpriseDB Corporation 2011. All Rights Reserved. Company Confidential
Business Logic Migration
 Functions
RETURN becomes RETURNS
Should provide parentheses () even for empty parameter list
 CREATE FUNCTION fn() RETURNS ...
DEFAULT values for parameters
 Works the same in Postgres
Can return pseudo type RECORD
 The caller needs to know the column names
Can return set of records; RETURNS SETOF type
 Oracle has TABLE FUNCTIONs
20
(C) EnterpriseDB Corporation 2011. All Rights Reserved. Company Confidential
Business Logic Migration
 Packages
A group of variables, functions and procedures
Use schema to group functions
Use (temporary) tables to replace variables
No substitute for private functions, and variables
Package Body initialization code: not very often used
 Call an initializer function in every member function
21
(C) EnterpriseDB Corporation 2011. All Rights Reserved. Company Confidential
Business Logic Migration
 Local functions
Functions within functions, oh my...
create or replace function fn( a int ) return int as
function fn1( a int ) return int as
begin
dbms_output.put_line(’World’);
return 1;
end;
begin
dbms_output.put_line(’Hello ’);
return fn1(a);
end;
Feature not available in Postgres; use normal functions
22
(C) EnterpriseDB Corporation 2011. All Rights Reserved.
Other Objects
23
(C) EnterpriseDB Corporation 2011. All Rights Reserved.
Other Objects
 Synonyms
Feature not avaialable
 Use views for tables
 Wrappers for functions
 Database Links
Feature not available
Use the dblink contrib module, and views
 Doesn’t allow @ notation, instead whole query is passed to a
set-returning-function.
 CONNECT BY
Use WITH RECURSIVE; SQL compliant and very flexible
24
(C) EnterpriseDB Corporation 2011. All Rights Reserved. Company Confidential
Other Objects
 Materialized Views
Create wrapper views
Jonathan Gardner
 http://tech.jonathangardner.net/wiki/PostgreSQL/Materialized_Views
Dan Chak – Materialized Views that Work
 http://www.pgcon.org/2008/schedule/events/69.en.html
 Partitioning
Roll your own using Inheritance, Triggers, CHECK
constraints, and constraint_exclusion
25
(C) EnterpriseDB Corporation 2011. All Rights Reserved. Company Confidential
Other Objects
 Sequences
Work pretty much the same way as in Oracle.
NOCACHE becomes CACHE 1 (or remove this clause)
 MAXVALUE 9999999999999999999999999
 reduce limit, or remove clause, (2^63)-1
 .nextval, .currval
 nextval(’sequence_name’)
 currval(’sequence_name’)
 ORDER/NOORDER
 Oracle needs this for Cluster/RAC setups
 PG doesn’t have it
26
(C) EnterpriseDB Corporation 2011. All Rights Reserved. Company Confidential
Other Objects
 Sequences (continued)
NO{CACHE|MINVALUE|MAXVALUE|CYCLE}
 Replace with NO {*}
 e.g. NOMINVALUE becomes NO MINVALUE
27
(C) EnterpriseDB Corporation 2011. All Rights Reserved. Company Confidential
Application Connectivity
(Drivers)
28
(C) EnterpriseDB Corporation 2011. All Rights Reserved. Company Confidential
Application Connectivity
 ODBC
Works
 JDBC
Works
Consider turning off the autocommit flag in driver
 .Net
Npgsql
 OCI
Used by Pro*C programs
Oracle Forms
29
(C) EnterpriseDB Corporation 2011. All Rights Reserved. Company Confidential
Application Migration
(Queries)
30