Figure 6. To carry out the attack we implemented a cloned
card on the ZeitControl BasicCard platform.
We used test cards with known ARQC-generation keys
(UDK) to prove the viability of the attack at a protocol level.
Our proof consists of an indistinguishability experiment; we
take two test cards A and B loaded with the same ARQC-
generation keys, initialised with the same ATC and handled
identically. We use our skimming trace to harvest data from
card A and then program it on to a “pre-play card”. We then
compare traces between the pre-play card version of card A
and the real card B, and observe that they are identical. This
means that at a protocol level it is impossible for the ATM
to distinguish between the real and pre-play cards. In detail
the ﬂow is as follows:
1) two transactions performed on card A
58
Even if the UN generation algorithms are patched, a num-
ber of protocol attack variants may make pre-play attacks
viable for years to come.
• Malware infection. There are already numerous cases
of malware-infected ATMs operating in Eastern Europe
and depending on the internal architecture of the ATM
it may be easy for such malware to sabotage the choice
of UN. In fact one bank suggested to us that the ATM
that kicked off this whole research project may have
been infected with malware [14].
• Supply chain attacks. Such attacks have already been
seen against POS terminals in the wild, and used to
harvest magnetic strip data. So it is feasible that a crim-
inal (or even a state-level adversary) might sabotage
the RNG deliberately, either to act predictably all the
time, or to enter a predictable mode when triggered
via a covert channel. A suitably sabotaged RNG would
probably only be detected via reverse engineering or
observation of real world attacks.
• Collusive merchant. A merchant might maliciously
modify their EMV stack to be vulnerable, or inject
replayed card data into the authorisation/settlement sys-
tem. He could take a cut from crooks who come to use
cloned cards at their store, or just pre-play transactions
directly. In the UK, there was a string of card cloning
attacks on petrol stations where a gang bribed store
managers to look the other way when PIN pads were
tampered with and monitoring devices inserted into
network connections; exactly what you need to deploy
a pre-play attack. We have recently seen a transaction
dispute in which a customer claims to have made one
small purchase at a merchant yet his bank claims he
made six large ones too.
• Terminal cut-out. A variant is the terminal cut-out
or bypass, where the transaction stream between the
merchant terminal and the acquirer is hacked to mis-
report the unpredictable number when triggered by a
particular signal (e.g. a particular account number or
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:56:33 UTC from IEEE Xplore.  Restrictions apply. 
3UHSOD\DWWDFNYLDZHDN51*
6WHSSURILOH$70326
3UHSOD\DWWDFNYLDPDQLSXODWLRQRI81
EHWZHHQ$70DQGEDQN
3HUIRUPJHQXLQHWUDQVDFWLRQ
J
RSWLRQDO
5HTXHVW$54&IRUFKRVHQ81
5HFHLYH$54&IRUFKRVHQ81
6WHSKDUYHVW
6WHSFDVKRXWW
81IURP$70
5HSOD\WUDQVDFWLRQ
IURPFKRVHQ81
LJQRUH81
5HSODFH81IRUFKRVHQ81
LQWUDQVDFWLRQGDWDIURP$70WREDQN
81OLVW
IURP$70SURILOLQJ
6WHSKDUYHVW
3HUIRUPJHQXLQHWUDQVDFWLRQ
RSWLRQDO
5HTXHVW$54&IRUWDUJHW81V
5HFHLYH$54&IRUWDUJHW81V
6WHSFDVKRXW
,'_81_$54&_7;'$7$
___
___
7DEOHRI81V
«
81
5HSOD\WUDQVDFWLRQ
IURPOLVW
Figure 7. Overview of the pre-play attack using a weak RNG (left) or tampering with the UN at the ATM/POS side (right)
a known ARQC). This transaction data stream is not
normally considered sensitive within the threat model
and can be altered at will by merchant software. The
attackers’ card performing the replay can then use
any UN for which it has an ARQC, and the true
random UN made up by the terminal will never see
the light of day. This is hard to block: there is no
provision in currently deployed EMV cards for the
terminal to conﬁrm that its choice of UN was correctly
included in the cryptographic MAC. The terminal cut-
out could be implemented in malware (and there’s
evidence of bank botnets looking for POS devices), or
in a merchant’s back-end system (we have evidence of
merchants already tampering with transaction data to
represent transactions as PIN-veriﬁed when they were
not, so as to shift liability).
• UN modiﬁcation in the network. A man-in-the-middle
device between a POS device and the acquiring bank,
perhaps at a network switch, would also be a good
way to deploy such an attack. This could be an attrac-
tive way to attack merchants that process high-value
transactions, such as jewelers or investment ﬁrms, who
might guard their premises and take care of their POS
equipment yet still fall to a targeted attack. A pre-
play attack would be much harder to detect than old-
fashioned attacks that just convert deny authorisation
messages into approve messages.
Using these versions of the pre-play attack (Figure 7 right)
it is no longer necessary to proﬁle an ATM or POS terminal.
The attacker can simply choose an arbitrary UN and obtain
the related transaction data, including the ARQC, from the
victim’s card. Then he can replay the transaction data at a
terminal and replace the terminal’s real UN with his chosen
one (via any of the methods described above).
The key shortcoming of the EMV protocol is that the
party depending upon freshness in the protocol is not the
party responsible for generating it. The issuer depends on the
merchant for transaction freshness. The merchant may not
have the incentive to provide it, may not be able to deliver
it correctly due to lack of end-to-end authentication with the
59
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:56:33 UTC from IEEE Xplore.  Restrictions apply. 
issuer, and might even be collusive (directly or indirectly).
Recently there has been some formal analysis of EMV,
but this ﬂaw was not discovered [15]. One reason is that
the UN was modelled as a fresh nonce, even though this
is not required by EMV (this omission is understandable
given that the actual speciﬁcation of the UN is buried on
p1498 in an annex to the EMV speciﬁcations, totalling over
4,000 pages). The other is that the issuer and terminal are
modelled as the same individual, whereas in reality the
relying party is the issuer and has only limited control over
the terminal behaviour. In fact, the terminal communicates
with an acquirer that in turn sends the transactions to a
switch that ﬁnally relays the transactions to the issuer.
As a next approximation, let’s abstract away the acquirer
and the switch, and consider the EMV protocol in an ideal
world containing only one bank. The protocol might be
idealised as (where A is the ATM, B is the issuer, and C is
the card):
A −→ C : N, V, T
C −→ A :
A −→ B :
B −→ A :
{N, V, T}KCB
{A,{N, V, T}KCB}KBA
{A, ok}KBA
An analysis using BAN logic [16] would note that KCB
is a good key for communicating between the card and the
bank, so the bank knows that the card once said N, V and
T ; if it concludes that N is fresh, then it will infer that the
card said all this in the current epoch. However N is not
the card’s nonce NC , but the terminal’s nonce NT , and we
can’t infer anything once we formalise this carefully.
In real life, we cannot rely on communications between
the merchant and the card issuing bank to be protected
by encryption or even authentication. This is a well-known
problem from ATM networking (see [17, p336]): if a MAC
is computed on each link from the acquirer to the switch
to the issuer and back again, that necessitates two calls to
a hardware security module at each node in each direction,
so that the MAC can be veriﬁed with the inbound working
key and recalculated with the outbound one, resulting in a
dozen extra HSM calls which in turn greatly increase not
just network latency but the size of the HSM ﬂeet required
at each institution. So in the absence of signiﬁcant numbers
of network-based attacks, it may be a defensible business
decision to optimise the MACs away.
So there’s no KBA, and the actually implemented protocol
may be more like
A −→ C : N, V, T
C −→ A :
A −→ B : A,{N, V, T}KCB
B −→ A : A, ok
{N, V, T}KCB
which makes it even more clear that the bank B can’t rely
on anything at all.
It is well known that the assumptions used in the 1970s
by the pioneers of authentication were undermined by
later “progress”. The Needham-Schroeder protocol [18],
famously has a “bug” in that the protocol can stall for
an extended period of time between the third and fourth
messages, with the effect that old session keys once compro-
mised cannot be revoked. Needham and Schroeder defended
themselves by pointing out that their paper had quite openly
assumed that principals executed the protocol faithfully;
therefore such behaviour was a priori excluded from their
model. Our modern world of equipment that fails from time
to time, and where life is spiced by the occasional malicious
insider, requires us to be more careful with revocation.
In exactly the same way, the deployment of a system
like EMV across an ecosystem with hundreds of vendors,
thousands of banks, millions of merchants and billions of
cards requires us to be much more careful about who the
principals are, and the incentives they have to execute their
tasks competently. Indeed, one of the new realities of the
EMV world is that merchants and banks may be hostile par-
ties in the payment system, thanks to tussles over payment
transaction charges and chargebacks. There have been large
lawsuits between major retailers and payment networks, and
we are aware of cases where merchants deliberately falsify
record data (e.g. by claiming that transactions were PIN-
veriﬁed when they were not [19]) so as to push fraud costs
to the bank and reduce chargebacks.
So if issuing banks cannot trust merchants to buy ter-
minals from vendors who will implement decent random
number generators, what can be done?
VII. LIMITATIONS AND DEFENCES
The limitations of a pre-play attack are:
• The country of attack must be chosen in advance
• The dates of attack must be chosen in advance
• The amount must be chosen in advance
• The PIN must be entered in the card, if a chip-and-PIN
transaction
• The ATC may limit the attack window
A. Defences against random-number attacks
In the case of the ﬁrst variant of the attack, where the
unpredictable number is known ahead of time, the attacker
does not need to know the terminal ID of the ATM, or time
of transaction, as these are rarely (if at all) requested by
card and are not included in the generation of the ARQC.
The cloned card can be used in any vulnerable ATM which
shares the same country code.
The simplest ﬁx is a cryptographically secure random
number generator. The UN ﬁeld is only 32 bits, and so an
attacker who could collect approximately 216 ARQCs from
a card could get a decent probability of success with 216
transactions at an ATM. This is not a realistic concern as an
EMV card should disable itself after 216 transactions, and
60
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:56:33 UTC from IEEE Xplore.  Restrictions apply. 
carrying out 216 transactions at an ATM at 20 seconds each
would not only take more than a day but should rapidly
propel the machine to the top of FICO’s watch list.
The problem here is that ﬁxing the random number
generator is a matter for acquiring banks, ATM vendors,
merchants and POS terminal suppliers, while the cost of
fraud falls on the issuing banks and the customers. Hopefully
this article will reduce the likelihood of risk being dumped
unfairly on customers, but what can an issuing bank do?
If an attacker requests many ARQCs from a card, the
issuer may notice gaps in the ATC sequence. Issuers should
probably reject online transactions where the ATC is lower
than the highest ATC seen from that card, which would
limit the attack window to the next genuine card use. For
ofﬂine transactions, however, this cannot be done because
there might be re-ordering of cryptograms.
B. Defences against protocol attacks
The best defence against protocol attacks in the short-to-
medium term is almost certainly for the issuer to meticu-
lously verify the transaction certiﬁcate (TC). The TC states
whether the card veriﬁed the ARPC, and the ARPC in turn
was computed by the card-issuing bank after it veriﬁed the
ARQC. In the presence of a pre-play attack, the TC will still
verify, but its IAD will indicate that the issuer authentication
did not complete successfully.
In more detail, the EXTERNAL AUTHENTICATE call
(which happens during the transaction authorization, see
Figure 2) cannot be made, as the ARPC cannot be generated
without the issuer’s involvement. This does not impair the
card’s ability to generate the ARQC (which happens before
EXTERNAL AUTHENTICATE), but it will allow the attack
to be detected by an issuer who examines the TC. The IAD
ﬁeld in the TC is not covered by the EMV speciﬁcation,
but additional standards deﬁned by Visa [8], commonly
implemented by cards, do go into more detail. A pair of bits
in the IAD indicates whether EXTERNAL AUTHENTICATE
has been performed and whether it succeeded. Although
this will not prevent every attack (because the TC is only
sent
to the issuer once the terminal has completed the
transaction), it will normally allow detection later. In one
case we’ve seen a genuine transaction that was followed
by six disputed large ones from the same terminal; in such
cases, an immediate alarm on a suspicious TC would prevent
all but the ﬁrst fraudulent transaction and thus signiﬁcantly
reduce the criminals’ expected income.
At present,
this does not appear to be done. Visa’s
‘Transaction Acceptance Device Guide’ [20, 5.12] states:
“Devices operating in a single-message or host-
capture environment should ensure a TC is gen-
erated for approved transactions. Although not
needed for clearing, generating a TC ensures that
cards do not request unnecessary online approvals
61
on subsequent transactions and also provides lia-
bility protection for acquirers.”
Mitigating acquirer liability in the event of stand-in pro-
cessing is all very well, but our concern here is the liability
faced by the cardholder who is the victim of a pre-play
attack.
In the event of a court having to decide whether a series
of disputed transactions from a single terminal was made
with the cardholder’s collusion or by means of a protocol-
level pre-play attack, the ﬁrst forensic test should therefore
be to examine the TC. If a valid TC is generated by a
card following a correct ARPC that in turn was generated
following a correct ARQC, then the card was present and
active at the time the ARPC was generated. This does not
totally exclude the possibility of fraud, as there may have
been a relay attack [21]; but pre-play attacks at least appear
to be unlikely.
Another approach for increasing the difﬁculty of the attack
is to force the card to commit to the value of the ATC
before the ATM presents the UN to the card. This is possible
without having to modify cards, because a mandatory feature
the GET DATA command retrieves the
of EMV is that
current ATC. If the pre-play card were able to exactly predict
the value of the UN in a transaction, being forced to choose
an ATC would not affect the difﬁculty. However, it would
prevent the card from searching a list of available ARQCs
and ﬁnding one that matches. However, this technique is
available only to the terminal supplier (usually the acquirer)
not to the issuer (who faces the risk of loss, or at least should
face this risk once courts realise that pre-play attacks are
possible).
One set of non-defences are the public-key authentication
features of EMV. The static digital signature on the card
data can be trivially copied to the pre-play card. However, by
examining records of transactions we discovered that the ter-
minal veriﬁcation results (TVR) ﬁeld sent to the card during
transaction authorization indicates that this digital signature
was not veriﬁed. The decision not to check the digital signa-
ture could have been made by ATM manufacturers to save
the time needed to verify the signature on the low-end CPUs
in some ATMs (see Section V-B3), and the maintenance
costs of updating the root certiﬁcates, because counterfeit
cards should be detected during transaction authorization.
Even the public-key challenge-response protocol of EMV
(used by cards supporting Dynamic Data Authentication –
DDA) would not adequately protect terminals from attack. If
DDA were commonly used by ATMs (or the attack is ﬁelded
at a point-of-sale terminal) the signature response to the
INTERNAL AUTHENTICATE command can be recorded
and replayed just as the ARQC is. In our POS terminal tests
the unpredictable number sent by the terminal to the card in
the INTERNAL AUTHENTICATE command is the same as
for the GENERATE AC command.