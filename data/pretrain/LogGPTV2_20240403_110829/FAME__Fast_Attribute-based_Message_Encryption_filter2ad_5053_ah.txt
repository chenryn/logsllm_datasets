how the ith key of Hyb2,2,q is distributed. (Recall that the hybrids
under consideration in this proof only differed on the ith key.) □
Lemma C.5. For all PPT adversaries A, there exists a PPT adver-
sary B such that
AdvA
(2,3,Q),3(λ) ≤ AdvB
DLIN(λ) + 1/p.
Proof. The only difference between Hyb2,3,Q and Hyb3 is in the
form of the challenge ciphertext; all the keys are Normal⋆ in both
the cases. B gets([A]1,[A]2,[As]1,[As]2) or([A]1,[A]2,[s′]1,[s′]2)
as the DLIN challenge. It draws (B, b⊥) from Samp and d ←R Z3
p,
and gives ([A]2,[dTA]T ) to A as the public key. Using B, it can
easily generate keys for any set of attributes.
Since [A||b⊥] is a full-rank matrix, we can say that B receives
([A]1,[A]2,[As + ˆsb⊥]1,[As + ˆsb⊥]2) as the DLIN tuple, where ˆs is
either zero or a randomly chosen value from Zp. Now, when A
sends msg0, msg1 and a policy (M, π), B outputs
for i = 1, . . . , n1. It is easy to see that if ˆs = 0, then the view of
A is identical to that in Hyb2,3,Q ; otherwise, the view is identical
to that in Hyb3. (Note that [A]1 is needed to simulate the random
oracle.)
□
Lemma C.6. For all q = 1, . . . , Q and PPT adversaries A, there
exists a PPT adversary B such that
AdvA
(4,3,q−1),(4,1,q)(λ) ≤ AdvB
DLIN(λ) + 1/p.
Proof. B draws (A, a⊥) from Samp and d ←R Z3
(cid:110)[WT
π(i)s′ +
p, and gives
([A]2,[dTA]T ) to A as the public key. It also uses A to simulate
the random oracle queries. As in Lem C.3, we can assume that B
receives ([B]1,[B]2,[Br∗ + ˆra⊥]1,[Br∗ + ˆra⊥]2) as the DLIN tuple,
where ˆr is either zero or a randomly chosen value from Zp.
It is not immediately clear how B will generate the challenge
ciphertext since it does not know b⊥. However, observe that when
p and ˆs ←R Zp, As + ˆsb⊥ is a uniformly distributed vector
s ←R Z2
p. Thus, B just picks a random vector s′ from Z3
over Z3
p and outputs
([s′]2,
i∈{1, ...,n1} ,[dTs′]T · msgb) as
the ciphertext.
p and outputs ([Br]2,
{[WyBr]1}y∈S , [d+αa⊥ +U1Br]1), where α ←R Zp. The Normal⋆
keys are also generated in a similar way, with the only difference
being that they don’t have any a⊥ component. Finally, B outputs
([Br∗ + ˆra⊥]2, {[Wy(Br∗ + ˆra⊥)]1}y∈S ,[d + U1(Br∗ + ˆra⊥)]1) as the
ith key, using the last two terms from the assumption. It is clear
that if ˆr = 0, then this key is Normal⋆; else it is P-normal⋆.
□
To generate a SF⋆ key, B picks r ←R Z2
j(M)i, j UT
j s′]1
(cid:111)
Lemma C.7. For all q = 1, . . . , Q and adversaries A,
AdvA
(4,1,q),(4,2,q)(λ) ≤ 2/p.
Proof. The only difference between Hyb4,1,q and Hyb4,2,q is
in the form of the ith key. This key is P-normal⋆ in the former case
but P-SF⋆ in the latter. The challenge ciphertext is SF⋆ in both the
cases, the first i − 1 keys are SF⋆ and the last q − i are keys are
Normal⋆.
First of all, like Lem C.4, let V be the matrix a⊥b⊥T, and recall
that VTA = VB = 0. Also, if β := ⟨a⊥, b⊥⟩, then Va⊥ = βa⊥
and VTb⊥ = βb⊥. We will also exploit the fact that none of the
keys A requests can decrypt the challenge ciphertext. So let w =
(w1, . . . , wn2) be the vector guaranteed by Lem 2.2 in this case.
Consider the hybrid Hyb4,1,q and implicitly set Wx to Wx +
µx β−1V and Uj to Uj + αwj β−1V, where µx , α ←R Zp. The expo-
nent of cti then becomes
(Wπ(i) + µπ(i)β
= WT
= WT
j (As + ˆsb⊥)
n2
−1V)T(As + ˆsb⊥)+
(M)i, j(Uj + αwj β
j=1
(M)i, j UT
−1V)T(As + ˆsb⊥)
π(i)(As + ˆsb⊥) + µπ(i)ˆsb⊥ +

+(cid:169)(cid:173)(cid:171)α ˆs
(M)i, jwj(cid:170)(cid:174)(cid:172) b⊥
π(i)(As + ˆsb⊥) +
j (As + ˆsb⊥)

+(cid:169)(cid:173)(cid:171)µπ(i) + α
(M)i, jwj(cid:170)(cid:174)(cid:172) ˆsb⊥
(M)i, j UT
j
j
j
j
.
(C.2)
The exponent of sky in the ith key is now given by
(Wy + µy β
−1V)(Br + ˆra⊥) = Wy(Br + ˆra⊥) + µy ˆra⊥
,
and that of sk′ is given by
−1V)(Br + ˆra⊥)
d + (U1 + αw1β
= d + U1(Br + ˆra⊥) + αw1ˆra⊥
.
we know that(M)i, jwj = 0. Else, none of the key components
every i, we can replace µπ(i)+α(M)i, jwj by µπ(i) in (C.2). Further,
We do not need to look at other components of the ciphertext or
the ith key because they do have any term involving Wx or Uj.
Further, any other key is not affected since the terms added to Wx
and Uj are orthogonal to B.
For an i ∈ {1, . . . , n1}, we have two possibilities. If π(i) ∈ S, then
have µπ(i), or cti is the only place where µπ(i) appears15. So for
αw1ˆra⊥ in sk′ could be replaced by αa⊥ without affecting the
distribution as it is the only term in the adversary’s view that
depends on α now and w1ˆr (cid:44) 0 (provided ˆr (cid:44) 0, which occurs with
probability 1 − 1/p).
15This is where we need π to be an injective function. If two or more rows map to the
same attribute, then the argument breaks down.
17
After making the changes described above, we have
cti = [WT

π(i)(As + ˆsb⊥) + µπ(i)ˆsb⊥+
j (As + ˆsb⊥)]1
(M)i, j UT
j
sky = [Wy(Br + ˆra⊥) + µy ˆra⊥]1
sk′ = [d + U1(Br + ˆra⊥) + αa⊥]1.
It is now easy to show that if we just replace Wx with Wx −µx β−1V,
then the challenge ciphertext becomes SF⋆ once again, the ith key
becomes P-SF⋆ as desired, and rest of the keys are not affected like
before.
□
(4,3,Q),5(λ) ≤ 2/p.
Lemma C.8. For all adversaries A, AdvA
Proof. The only difference between Hyb4,3,Q and Hyb5 is that
the ciphertext in Hyb4,3,Q is an encryption of msgb, while it is an
encryption of a random message in Hyb5. So suppose we implicitly
set d chosen during the set-up process of Hyb4,3,Q to d − δa⊥, for
δ ←R Zp. There are only three places where d appears in the view
of an adversary: in the public key, the last component of all the keys,
and the last component of challenge ciphertext. Among them, the
public key is clearly not affected since (d − δa⊥)TA = dTA. All the
SF⋆ keys are not affected either because (d− δa⊥) + U1Br + αa⊥ =
d+U1Br+(δ +α)a⊥, which is identically distributed to d+U1Br+αa⊥
since α is a random value.
Lastly, we have [dT(As + ˆsb⊥)]T · msgb as the last component
of the ciphertext in Hyb4,3,Q , which now becomes
[(d − δa⊥)T(As + ˆsb⊥)]T · msgb
= [dT(As + ˆsb⊥) + δ ˆs⟨a⊥
= [dT(As + ˆsb⊥)]T · e(д, h)δ ˆs ⟨a⊥,b⊥⟩ · msgb .
, b⊥⟩]T · msgb
Note that δ does not appear in any other part of the ciphertext, or
in any of the keys or the master public key. Also recall that with
probability 1 − 1/p, the inner-product of a⊥ and b⊥ is not zero (see
Lem C.1). Hence, if ˆs (cid:44) 0, which happens with probability 1 − 1/p,
δ ˆs⟨a⊥, b⊥⟩ is uniformly distributed over Zp. Thus, the ciphertext
is now an encryption of a random message.
□
C.4 Proof of Theorem 4.1
We have shown that Hyb0 ≡ Hyb1 in Lem C.2, Hyb2,3,q−1 ≈
Hyb2,1,q in Lem C.3, Hyb2,1,q ≡ Hyb2,2,q in Lem C.4, Hyb2,3,Q ≈
Hyb3 in Lem C.5, Hyb4,3,q−1 ≈ Hyb4,1,q in Lem C.6, Hyb4,1,q ≡
Hyb4,2,q in Lem C.7, and Hyb4,3,Q ≡ Hyb5 in Lem C.8, for all
q = 1, . . . , Q, where ≡ and ≈ denote statistical and computational
indistinguishability, respectively, from the point of view of an ad-
versary. (Hyb2,3,0 and Hyb4,3,0 are defined to be same as Hyb1 and
Hyb3, respectively.) We omit a proof for the indistinguishability of
Hyb2,2,q and Hyb2,3,q because it is completely analogous to that of
Hyb2,3,q−1 and Hyb2,1,q. Also, Hyb4,2,q ≈ Hyb4,3,q can be proved
in a manner similar to Hyb4,3,q−1 ≈ Hyb4,1,q.
In fact, the hybrids are indistinguishable irrespective of the bit
b given to the challenger. In other words, none of the proofs have
anything to do with the value of b. Thus, Hyb0 (main scheme) is
• Decrypt(pk, ct, sk) Let {γi}i∈I be a set of constants that exist
when the set of attributes S in sk satisfies the MSP (M, π) in
ct. Output
(cid:16)
·
e
C
i∈I C
γi
i
i∈I e(Kπ(i), D
γi
i )
.
(cid:17)
· 
, L
e(K, C′)
We have reorganized the terms slightly to improve decryp-
tion time: instead of 2 pairings and an exponentiation in the
target group per attribute, we now have 1 pairing and one
exponentiation each in the two source groups.
F GPSW KP-ABE SCHEME
Below is the version of GPSW’s KP-ABE scheme [29, Appendix A.1]
that we implemented in asymmetric groups. Let U = {1, 2, . . . , U }
be the universe of attributes.
• Setup(1λ) Run GroupGen(1λ) to obtain (p, G, H, GT , e, д, h).
Pick α, t1, . . . , tU ∈ Zp. Output(T1 := дt1 , . . . ,TU := дtU , Y :=
e(д, h)α) as the public key pk and (h, t1, . . . , tU , α) as the
master secret key msk.
• KeyGen(msk,(M, π)) Suppose M has n1 rows and n2 columns.
Pick v2, . . . , vn2 ←R Zp and let v = (α, v2, . . . , vn2). Let
µi = ⟨(M)i , v⟩ for i = 1, . . . , n1. Then output
∀i = 1, . . . , n1 : Di := h
µi
tπ(i)
as the key.
• Encrypt(pk, S, msg) Pick s ←R Zp and output
Ey := T s
y
′ := Y s · msg, ∀y ∈ S :
E
as the ciphertext.
• Decrypt(pk, ct, sk) Let {γi}i∈I be a set of constants that exist
when the set of attributes S in sk satisfies the MSP (M, π) in
ct. Output

E′
i∈I e(Eπ(i), Di)γi
.
indistinguishable from Hyb5 whether we start from b = 0 or b = 1,
proving the theorem.
D BSW CP-ABE SCHEME
Below is the version of Bethencourt et al.’s CP-ABE scheme [16]
that we implemented in asymmetric groups.
• Setup(1λ) Run GroupGen(1λ) to obtain (p, G, H, GT , e, д, h).
Pick α, β ←R Zp. Output (д, h, H := hβ , e(д, h)α) as the
public key pk and (β, дα) as the master secret key msk.16
• KeyGen(msk, S) Pick r , ry ←R Zp for every y ∈ S. Then
output
D := д
(α +r)/β ,
∀y ∈ S : Dy := дr · H(y)ry , D
′
y := hry
as the key.
• Encrypt(pk,(M, π), msg) Suppose M has n1 rows and n2 columns.
Pick s, v2, . . . , vn2 ←R Zp and let v = (s, v2, . . . , vn2). Let
µi = ⟨(M)i , v⟩ for i = 1, . . . , n1, where (M)i denotes the ith
row of M. Then output
˜C := e(д, h)αs · msg, C := H s ,
∀i = 1, . . . , n1 : Ci := hµi , C
′
i = H(π(i))µi
as the ciphertext.
• Decrypt(pk, ct, sk) Let {γi}i∈I be a set of constants that exist
when the set of attributes S in sk satisfies the MSP (M, π) in
ct. Compute
prod :=
(cid:35)γi
(cid:34) e(Dπ(i), Ci)
i , D′
π(i))
e(C′
and output ( ˜C · prod)/e(D, C).
i∈I
E WATERS CP-ABE SCHEME
Below is the version of Waters’ CP-ABE scheme [57, Section 3] that
we implemented in asymmetric groups. Let U = {1, 2, . . . , U } be
the universe of attributes.
• Setup(1λ) Run GroupGen(1λ) to obtain (p, G, H, GT , e, д, h).
Pick α, a ←R Zp and G1, . . . , GU ←R G. Output (д, h, дa,
e(д, h)α , G1, . . . , GU ) as the public key pk and дα as the mas-
ter secret key msk.
• KeyGen(msk, S) Here S is a subset of U. Pick t ←R Zp.
Then output
K := дα · дat ,
L := ht , ∀y ∈ S : Ky := Gt
y
as the key.
• Encrypt(pk,(M, π), msg) Suppose M has n1 rows and n2 columns.
Pick s, v2, . . . , vn2 ←R Zp and let v = (s, v2, . . . , vn2). Let
µi = ⟨(M)i , v⟩ for i = 1, . . . , n1. Also pick r1, . . . , rn1 ←R Zp.
Then output
′ := hs ,
C := e(д, h)αs · msg, C
∀i = 1, . . . , n1 : Ci := дaµi G
−ri
π(i), Di := hri
as the ciphertext.
16The group element f in their set-up algorithm is used only for delegation.
18