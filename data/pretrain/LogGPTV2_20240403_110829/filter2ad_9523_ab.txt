Registry key: "SOFTWARE\VMware, Inc.\VMware Tools"
Value: "InstallPath"
Data contains: "C:\PROGRAM FILES\VMWARE\VMWARE TOOLS\"
**环境检测：**
检查kernel32.dll的导出功能是否包含：wine_get_unix_file_name
**Windows Management Instrumentation（WMI）检查：**
WMI Query: "SELECT * FROM Win32_VideoController"
Property: "Description"
检查描述字段中是否存在以下关键字：
  * "VM Additions S3 Trio32/64"
  * "S3 Trio32/64"
  * "VirtualBox Graphics Adapter"
  * "VMware SVGA II"
  * "VMWARE"
**基于DLL名称检查：**
检查进程地址中是否存在名称为“ SbieDll.dll”的DLL。
**基于用户名的检查：**
检查系统用户名是否包含以下字符串之一：
  * "USER"
  * "SANDBOX"
  * "VIRUS"
  * "MALWARE"
  * "SCHMIDTI"
  * "CURRENTUSER"
**基于文件名或文件路径的检查：**
FilePath包含： "//VIRUS" OR "SANDBOX" OR "SAMPLE" OR "C:\file.exe"
**窗口类检查：**
“ Afx：400000：0”
执行完所有上述环境检查后，在主过程的实例中使用过程挖空技术注入了AZORult有效负载（ **MD5** **hash** _：_ *
38360115294c49538ab15b5ec3037a77）。
由于AZORult信息窃取程序的功能已在公共领域进行了详细记录，因此我们不详细描述。
要注意的是，基于代码执行的流程和所使用的反分析技术，.NET打包的有效负载似乎是使用CyaX打包程序创建的。有关此打包程序的更多详细信息，请参见[此处](https://rvsec0n.wordpress.com/2020/01/24/cyax-dotnet-packer/)。
### **网络通讯**
最终的未压缩有效负载AZORult将在计算机上执行信息窃取指令，并通过向URL发送HTTP
POST请求泄露信息：hxxp：//crevisoft.net/images/backgrounds/ob/index.php
经过检查，我们发现在C＆C服务器上启用了opendir，如图13所示。
_图13：在C＆C服务器上启用了Opendir_
可以通过以下网址访问C＆C服务器上的AZORult面板：hxxp：//crevisoft.net/images/backgrounds/ob/panel/admin.php。
_图14：AZORult面板_
### **PHP邮件程序脚本**
在C＆C服务器上发现的其他工件中，我们发现了一个部署在hxxp://crevisoft[.]net/images/-/leaf.php.上的PHP邮件脚本
。
这使网络犯罪分子可以使用C＆C服务器的SMTP发送电子邮件。
_图15：C＆C服务器上的PHP邮件脚本_
### **Zscaler Cloud Sandbox检测**
图16显示了Zscaler Cloud Sandbox成功检测到基于.NET的威胁。
_图16：Zscaler Cloud Sandbox检测_
除了sandbox检测外，Zscaler的多层云安全平台还可以检测各个级别的指标，如下所示：
[Win32.PWS.Azorult](https://threatlibrary.zscaler.com/?keyword=Win32.PWS.Azorult)
[Win64.PWS.Azorult](https://threatlibrary.zscaler.com/?keyword=Win64.PWS.Azorult)
[PDF.Downloader.Azorult](https://threatlibrary.zscaler.com/?keyword=PDF.Downloader.Azorult)
## **结论**
网络犯罪分子以中东地区石油和天然气行业供应链行业的员工为目标。一如既往，用户在突然收到电子邮件时应保持谨慎，即使这些电子邮件与您有关，比如有关项目的法律投标。要始终警惕嵌入在文件格式（例如PDF）中的链接，因为这些链接可能会指示系统下载恶意文件。
Zscaler ThreatLabZ团队将继续监视相关的攻击活动，以确保客户信息安全。
## **MITRE ATT &CK TTP Mapping**
**ID** | **Tactic** | **Technique**  
---|---|---  
T1566.001 | Spearphishing Attachment | Uses PDF attachments containing
malicious URLs  
T1204.002 | User Execution: Malicious File | User opens pdf file. Click the
URL link. Downloads ZIP file. Extracts zip file and executes the binary.  
T1140 | Deobfuscate/Decode Files or Information | Strings and other data are
obfuscated in the payload.  
T1036.005 | Masquerading: Match Legitimate Name or Location | File names used
related to projects directly linked to the Middle East.  
T1027.002 | Obfuscated Files or Information: Software Packing | Payloads are
packed with a multilayer packer.  
T1497 | Virtualization/Sandbox Evasion | Uses Registry, WMI, UserName-based
anti-VM techniques  
T1134.002 | Access Token Manipulation: Create Process with Token | One of
AZORult capabilities  
T1555.003 | Credentials from Password Stores: Credentials from Web Browsers |
One of AZORult capabilities  
T1140 | Deobfuscate/Decode Files or Information | One of AZORult capabilities  
T1573.001 | Encrypted Channel: Symmetric Cryptography | One of AZORult
capabilities  
T1083 | File and Directory Discovery | One of AZORult capabilities  
T1070.004 | Indicator Removal on Host: File Deletion | One of AZORult
capabilities  
T1105 | Ingress Tool Transfer | One of AZORult capabilities  
T1057 | Process Discovery | One of AZORult capabilities  
T1055.012 | Process Injection: Process Hollowing | One of AZORult capabilities  
T1012 | Query Registry | One of AZORult capabilities  
T1113 | Screen Capture | One of AZORult capabilities  
T1082 | System Information Discovery | One of AZORult capabilities  
T1016 | System Network Configuration Discovery | One of AZORult capabilities  
T1033 | System Owner/User Discovery | One of AZORult capabilities  
T1124 | System Time Discovery | One of AZORult capabilities  
T1552.001 | Unsecured Credentials: Credentials In Files | One of AZORult
capabilities  
## **IOCs**
**计划任务名称**
**命名** ：“ Updates \ ”
Updates\YJSlNpkH
Updates\WWOsRUUn
Updates\NcojkRtJmDPru
**XML文件名**
计划任务是使用已删除的XML文件在具有随机名称的％temp％目录中创建的。
C：\ Users \ user \ AppData \ Local \ Temp \ tmp9AA2.tmp
C：\ Users \ user \ AppData \ Local \ Temp \ tmp23B7.tmp
C：\ Users \ user \ AppData \ Local \ Temp \ tmp24CC.tmp
**文件名删除**
文件将以与任务相同的名称放置在“ AppData \ Roaming”目录中。
C：\ Users \ User \ AppData \ Roaming \ YJSlNpkH.Exe
C：\ Users \ User \ AppData \ Roaming \ WWOsRUUn.Exe
C：\ Users \ user \ AppData \ Roaming \ NcojkRtJmDPru.exe
**File hashes**
**PDF hashes**
**Author: Donor1**
e368837a6cc3f6ec5dfae9a71203f2e2
741f66311653f41f226cbc4591325ca4
fe928252d87b18cb0d0820eca3bf047a
8fe5f4c646fd1caa71cb772ed11ce2e5
d8e3637efba977b09faf30ca49d75005
c4380b4cd776bbe06528e70d5554ff63
34cae3ae03a2ef9bc4056ca72adb73fc
363030120a612974b1eb53cc438bafcb
2710cc01302c480cd7cd28251743faf0
1693f1186a3f1f683893b41b91990773
7a016c37fa50989e082b7f1ca2826f04
709895dd53d55eec5a556cf1544fc5b9
5d9ed128316cfa8ee62b91c75c28acd1
c2ac9c87780e20e609ba8c99d736bec1
269cfd5b77ddf5cb8c852c78c47c7c4c
653f85816361c108adc54a2a1fadadcf
6944f771f95a94e8c1839578523f5415
8e5c562186c39d7ec4b38976f9752297
3d019ede3100c29abea7a7d3f05c642b
67f178fd202aee0a0b70d153b867cb5e
39598369bfca26da8fc4d71be4165ab4
70a92fdba79eaca554ad6740230e7b9a
9db3d79403f09b3d216ee84e4ee28ed3
bafdeef536c4a4f4acef6bdea0986c0b
8d7785c8142c86eb2668a3e8f36c5520
653e737fd4433a7cfe16df3768f1c07e
ebdcb07d3de1c8d426f1e73ef4eb10f4
d258ba34b48bd0013bfce3308576d644
a74c619fd61381a51734235c0539e827
6f1bd3cb6e104ed6607e148086b1e171
cf04d33371a72d37e6b0e1606c7cd9a2
ede5fa9b9af1aeb13a2f54da992e0c37
5321cd5b520d0d7c9100c7d66e8274e1
de521f9e4bc6e934bb911f4db4a92d36
36e5726399319691b6d38150eb778ea7