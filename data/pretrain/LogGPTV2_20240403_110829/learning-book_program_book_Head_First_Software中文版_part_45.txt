口
探索新的工具或者阅读新知识的个人
已做决定
开发时间。
良好软件流程的全部就是优先级。你应该确认在项目实施过程中，你一直都
在微正确的事情。
开发能有效运行的软件是至关重要的，但代码的质量呢？如果你的流程优
化了，你能编写出更优质的代码吗？或者，把新的永续框架（Persistence
framework）整合进来，会减少了几千行代码吗？
338
第9章
---
## Page 375
结束开发循环
以下有三个工作量完成状况趋势图，由你决定下一步该做什么。
下一步你将做什么？
工作量究成状况超势图
剩余的
作量
20
剩余的工作天数
lo
下一步你将做什么？
工作量究成状况超势图
剩余的
工作量
2
15
刻余的工天数
16
下一步你将做什么？
工作量究成状况超势图
剩余的
工作量
20
制余的工作天数
目前位置
339
---
## Page 376
不同的项目障碍
以下有三个工作量完成状况趋势图，由你决定下一步该做什么。
答案
工作量究成状况超势图
下一步你将做什么？
在此，团队则好练业丹置限际，因此，振可能湿
有什么工作可以将进来。然而，在结兼时，属端
的急剧下降可能表示有些事情被跳过或舍弃了。
剩余的
在开环质测试工定偶泵美重票，并
20+
15
10
剩余的工作天数
.调警.阅点康.值.
工作量究成状况超势图
下一步你将做什么？
在这船开置继际中，任务提前究成：图队在开厦
猫环结兼后可鹅有一，两天的空阅时间。如果项
被持续地实施一提时间，你可的金有积压的效
制余的
件得慎易开始标记出来，或者：依据你的使用情
工作蛋
关赖大小..你可可以抵出原准条在下一给开展
预跃宾施保具有最高依为级顿使用.照在然
15
制余的工作天数
10
下一步你将做什么？
工作量究成状况超势图
温什么码说的：适个团及的通度已经懂了。在开
始下一轮丹夏绳环之前，你应当检叠藏速的质
国着港是否有开进虚的固景，体计的因最或
制余的
贵其他一费图意..很有可熊经盘在尚来完感的代
工作量
15
1o
专
6
剩余的工作天数
340
第9章
---
## Page 377
结束开发循环
当你巡没有看到团队附开塞的代码时，你怎飞能决定
下一步做付色哦？
每个项目都有那么点不同之处
记住，软件开发并不仅仅只是编写代码。它还在
于在项目预算内，按时交付可运行的软件的良好
习惯和方法。除此之外，我们已经有：
编译代码
自动化的单元测试
捕促什么是必须发生的使用情节
和任务
按优先级进行任务排序的流程
我们可以提交给用户的、可运行
的构建版本
因此，这就关系到给额外的、锦上添花（nice-to-
have）的任务进行优先级排序——假如你有额外时
间的话。另外，这也关系到你处在项目中的哪一个
阶段。在项目的早期，你可能会需要更多的代码重
构以便优化你的设计，在项目的后期，当项目变得
更稳定一些时，你可能会花费更多的时间在文档上
或者对团队六个月前开始采用而且逐渐过时的代码
C
进行审视，看看是否有替代的方案。
PD
目前位置
341
---
## Page 378
开发循环回顾
开发循环回顾
到此，开发循环结束了。你遗留的工作为零，你已经到达开发循环的
最后一天，开始准备下一轮的开发循环了。
但是，在你对接下来的使用情节按照优先级排序之前，要记住：我们
不只是以反复进行的方式开发软件，你也应该以反复进行的方式发展
和定义流程。在每轮开发循环结束时，与你的团队一起花一些时间进
行一次开发循环回顾。每个人都需要用到这个流程，因此，要确认你
吸纳了他们的观点。
开发循环回顾的要素
1
享前准香
开发循环回顾是针对开发循环执行情况提供输入的机会，而不是你演讲
的时间。然而，重要的也是保持回顾期间的精力集中。准备一份你想要
与他们讨论的议题清单，在议题不清晰时，让他们回到议题上来。
?
服示来来
如果最后一轮开发循环带有悲剧色彩或者其中一个开发人员不断地产生
软件错误，也没有关系，只要团队在下一个开发循环中有应对的方法就
行。人有时候需要吐吐苦水，但不要让开发循环回顾变成牢骚大会、否
则它最后会使每个人意志消沉。
③
计算统计数摄
要知道刚刚完成的开发循环的开发进度和测试覆盖率如何。一般来说，
为了获得时间效率的值，最好是把所有“已完成”任务的估计值加起来，
完成任务实际花费的时
再除以开发循环中理论上的人日，是否要在开发循环回顾期间透露实际
阅身信计时阅的比较料
不是大重要
因为你
的进度取决于你自己（有时候，不提供实际的数据，有助于让团队对下
进度的计其应当寿惠
轮开发循环作时间估计时，不至于有偏见），但你应该说明团队的时间
老的不一致，在下一
中我们将两次对开
效率是上升或下降。
度通行讨论
4
为回顾准备一组标准的问题
在每轮开发循环结束时，准备一组问题用于检查。当有人想增加一些问
题或者某个问题面对于你的团队来说它们是没有意义时，这组问题是可
以变更的。准备一些反复讨论的话题表示人们会预期问题并且会为回顾
做准备（甚至在开发循环期间也会无意识地想到这些问题）。
342
第9章
---
## Page 379
结束开发循环
一些开发循环回顾问题
这里是一组回顾的问题，你可以把这些问题与你的第一次开发循环的
回顾放在一起。任何时候你的团队，都可以增加或者减少问题，但要
尽量触及到每个领城。
开发循环回顾的问题
是不是每个人对工作的质量、文档、测试结果感到满意？
每个人对开发循环的步调感觉怎样？是匆忙？合理？枯燥？
每个人对于他所负责的某个领城感到轻松吗？
有没有一些特别的工具对生产力有帮助或是损害？有没有一些团队应
当考虑整合进来的新的工具？
流程有效吗？有进行回顾吗？它们有效吗？是否有什么流程的变更需
要考虑的？
是否有任何代码被识别出需要重新检查、重构的或是重写的？
更多的内容参元第（2章
有任何的性能问题被识别出来了吗？
是否有任何的软件错误被识别出来并要在优先级排序之前进行讨论
的？
测试有效吗？我们的测试覆盖率足够高吗？大家对系统都有信心吗？
系统的部署是不是可控的？它是可重复的吗？
这些问题中的任何一个都要变成下一轮开发循环中你要完成的事情。记住，
你应该受使用情节的驱动，因此，你要确认你想提出的任何变更支持某项
客户的需求（不管是直接的还是间接的），并且与其他的事情一起进行优
先级的排序，这可能意味着你需要为客户坚持做技术或流程的变更，但你
首先要牢记你为什么要编写软件，这是至关重要的。
目前位置
343
---
## Page 380
其他要做的工作
为完成额外事情的一般性
优先级列表..
你已经弄清楚什么是适合你项目的最好方法，但
是，这里有一些你可以检查的一般性事情，如果
你在开发循环中有结余时间的话。
修复软件错误
显然，这取决于软件错误累积的实际情况。也要记得与客户一起对软
件错误的处理进行优先级的排序。可能有一些错误对客户来说是极其
重要的，而另外的一些错误，他们并不太关心。
提前为下一轮开发循环准备使用情节
既然客户已经安排且定好了优先级的使用情节的数量多于一轮开发环所
能完成的使用情节的数量，你现在就可以先尝试本属于下一轮开发循环的
使用情节的实现。然面，这样做的时候要小心，客户对于使用情节的优先
级排序或者想法可能在开发循环期间发生变化。也最好能确认团队是否有
时间对你所增加的使用情节做测试。
为下一轮开发循环提供原型解决方案
如果你有了哪些事情要进人下一轮开发循环的思路，你可能会希望利
用额外的一、两天的时间先行探索。你可以尝试编写原型代码，或者
研究一下可能要用到的测试技术或者程序代码库。你可能不会提交这
些代码到存储目录中，但是，你可以为下一轮开发循环中打算用到的
东西预先取得一些经验。当你回头进行计划扑克牌游戏时，这可能地
对你的估计起到帮助的作用。
培训或学习时间
培训或学习时间可能是针对你的团队或者你的用户的。也许。团队在
工作时间会参与用户群组的会议。请人演讲或者微技术演示，为团队举
办一场帆船运动或者读弹射击游戏等。关心和照顾你的团队是项目成功
的重要组成部分。
344
第9章
---
## Page 381
结束开发循环
没有愚囊的问题
问：郑重其事地讲，在开发循环
节”与“将合实际的执行状况”之间万一事情进展得不好，通过利用标识、
做好平衡，
释放一个稳定的构建版本就没有什么
结束时，真会有时间结余吗？
问题，
乎总是都有节余的时间一
一甚至很多，
问：
你总是说要对软件错误的优
况是这样的：第一、二轮开发携环都
这是怎么回事？
先级排序但我们正处在开发循环
不是太理想。项目刚开始的时候，大
家递常会做估完成事情所需要的时
答：
的中间。那么，这些错误该怎样处理？
间。在每轮开发摘环结东时，你会调
一种可能性是你的时间效率
整团队的时间效率值，图此，你会让
值可能偏差太文。在每轮开发循环结
后续的开发循环比较符合要求，当团
东时，你更新了时间效率值吗？
（我
一周一次，定期与客户一起进行软件
队的经验日益丰富时，他们的结计就
们将在第10章中进行深入的探讨）。
错误的审查，为尚未处理的款件错误
越准确，并且他们对项目也越来越熟
另外一种可能性是你的估计不正确
进行优先组的排序，在那样的情况下，
悉。这意味着以前的开发循环中的时
偏高。如果你别完成了一轮紧凑的开
如果有时间，总是会安排一些时间进
间效率值实际上是太低了。从而，在
发循环，那么，大家自然地对下一轮
行错误的修正工作。如果你没有定期
开发描环结束时、时间上就留有余
开发描环的估计更加谨慎。但这没有
地与你的客户讨论款件错误的问题，
地——至少，直到你重新计算团队时
什么关系。如果你有很多时间，在开
你可能会部要这么做…虽然，务心
间效率值。不管你信与不位，有时候，
发描环末尾，增加一个或两个使用情
把你将花费的时间在工作量完成状况
节，在你更新你的时间效率值时，再
趋势图和大白板上反映出来。记住，
事情会往好的方向发展，而旦你得到
平衡一下。
如果某个错误的修正非常重要，你应
节余的时间。
问：
当像处理其他一切事务那样，把它安
我们尝试将下一轮开发
排到开发德环中，
值得注惠的是，我们在此讨论的是在
发循环将不太理想？
中来，但现在，这项工作都没有完成，
开发当前使用情节之外发现的款件储
答：
我们即将超过时间了，
误。如果你在正在实燕的使用情节中
你并不希望事情是这样的，
答：
发现了错误，你总是会修正它（在增
但是，你会发现大家通常会做估完成
延展该使用情节。记住，不
加一个测试程序之后），事情一直到
事情所需的时间——
成者会花多少时
管如何，你是走在预订进度之前的。
能够按照使用情节的要求运行，才算
阅在那些没有人考虑过的小事情上，
比较好的做法是延展该使用情罗并显
称之为完成一
为那些测试能证明达
如配置一个协同工作的环境，或考回
复用户邮件清单中的问题。
把它归回到下一轮开发环，而不是
,点,
这些都是重要的事情，但必须考虑在
提交平成品代码，未测试代码，把它
交给下一轮开发摘环完成，记住，你
你不应节余很多时
你的工作估计中。这就是为什么第一
轮开发猫环中最好以0.7作为时间效
即将交付本轮开发循环所完成的构建
版本，你希望它稳定而又有规则。
间。
因此，选择小
率值的部分原因，在你真正地了解事
如果在开发描环的末尾，有一些节余
的任务来处理.·
情是如何在进行之前，它为你提供
了一些喘患的空间，另外，你也会对
的时间，有些围队会在他们把任何额
外的事情投到存储目录之前，把他们
并为下一轮开发循
使用情节一下子塞满你的开发描环离
到惊讲，尝试在“塞进更多的使用情
编写的代码做标识。通过这种方式，
环做准备。
目前位置
345
---
## Page 382
软件开发工具箱
软件开发的宗旨就是开发和交付伟大的软件。在这一章中，
第
你学会了如何有效地结束一个开发循环。本书中完整的工具
本章要点
列表，可参见附录i
如果在开发循环结束时还有
时间节余，那是即将来临的