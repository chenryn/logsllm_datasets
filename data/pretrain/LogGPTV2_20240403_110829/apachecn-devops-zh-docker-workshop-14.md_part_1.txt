# 十四、收集容器日志
概观
在前一章中，我们确保为正在运行的 Docker 容器和服务收集度量数据。本章以此为基础，致力于收集和监控 Docker 容器和其上运行的应用的日志。它将从讨论为什么我们需要为我们的开发项目有一个清晰的日志监控策略开始，并讨论一些我们需要记住的事情。然后，我们将介绍日志监控策略中的主要参与者，即 Splunk，以收集、可视化和监控我们的日志。我们将安装 Splunk，从我们的系统和运行的容器中转发日志数据，并使用 Splunk 查询语言来设置监控仪表板，使用我们收集的日志数据。到本章结束时，您将具备为 Docker 容器项目设置集中式日志监控服务的技能。
# 简介
每当我们正在运行的应用或服务出现问题时，我们通常在应用日志中查找的第一件事就是找到导致问题的线索。因此，了解如何为项目收集日志和监控日志事件变得很重要。
当我们用 Docker 实现微服务架构时，确保我们能够看到我们的应用和容器正在生成的日志变得更加重要。随着容器和服务数量的增长，试图单独访问每个正在运行的容器变得越来越难以解决出现的任何问题。对于可扩展的应用，它们根据需求上下扩展，跨多个容器跟踪日志错误可能会变得越来越困难。
确保我们有适当的日志监控策略将有助于我们对应用进行故障排除，并确保我们的服务以最佳效率运行。这也有助于我们减少搜索日志的时间。
在为项目构建日志监控策略时，您需要考虑以下几点:
*   您的应用将使用一个框架来处理日志。有时，这可能会导致容器的开销，因此请确保您正在测试您的容器，以确保它们能够在没有任何日志框架问题的情况下运行。
*   容器是短暂的，因此每次容器关闭时日志都会丢失。您必须将日志转发给日志记录服务，或者将日志存储在数据卷中，以确保可以解决可能出现的任何问题。
*   Docker 包含一个日志驱动程序，用于将日志事件转发到主机上运行的 Syslog 实例。除非您使用的是企业版的 Docker，否则如果您使用的是特定的日志驱动程序，`log`命令将不起作用(尽管对于 JSON 来说是这样)。
*   日志聚合应用通常会根据它们在服务中接收的数据量向您收费。此外，如果您的环境中部署了服务，您还需要考虑存储需求，尤其是您计划将日志保留多长时间。
*   您需要考虑与生产环境相比，您的开发环境将如何运行。例如，不需要在您的开发环境中长时间保存日志，但是生产可能会要求您保存一段时间。
*   您可能不仅仅需要应用数据。您可能需要为应用、运行应用的容器以及运行应用和容器的底层主机和操作系统收集日志。
作为日志监控策略的一部分，我们可以使用许多应用，包括 Splunk、Sumo Logic、Nagios 日志、Data Dog 和 Elasticsearch。在本章中，我们决定使用 Splunk 作为我们的日志监控应用。它是最古老的应用之一，拥有大量的支持和文档。在处理数据和创建可视化方面，它也是最好的。
在下面的部分中，您将看到启动、运行和配置应用是多么容易，这样您就可以开始监控您的系统日志和我们的容器应用。
# 介绍 Splunk
早在 Docker 流行起来之前，Splunk 就成立于 2003 年，旨在帮助公司从其环境中不断增长的应用和服务所提供的大量数据中发现一些模式和信息。Splunk 是一个软件应用，允许您从应用和硬件系统中收集日志和数据。然后，它可以让您分析和可视化您收集的数据，通常在一个中心位置。
Splunk 允许您以不同的格式输入数据，在许多情况下，Splunk 将能够识别其数据格式。然后，您可以使用这些数据来帮助解决应用故障，创建监控仪表板，并在特定事件发生时创建警报。
注意
在这一章中，我们将只触及 Splunk 能做什么的表面，但是如果你感兴趣，有很多有价值的资源将向你展示如何从你的数据中获得操作智能，甚至使用 Splunk 来创建机器学习和预测智能模型。
Splunk 提供了许多不同的产品来满足您的需求，包括面向希望选择云日志监控解决方案的用户和公司的 Splunk Cloud。
对于我们的日志监控策略，我们将使用 Splunk 企业版。它易于安装，并带有大量功能。使用 Splunk 时，您可能已经知道许可证费用是根据您发送到 Splunk 的日志数据量收取的，然后这些数据会被编入索引。Splunk Enterprise 允许您在试用的基础上每天免费索引多达 500 MB 的数据。60 天后，您可以升级您的许可证，或者继续使用免费许可证，这将继续允许您每天记录 500 MB 的数据。有一个可供用户使用的开发人员许可证，可以申请并允许用户每天记录 10 GB 的数据。
要开始使用 Splunk，我们首先需要了解它的基本架构。这将在下一节中讨论。
## Splunk 安装的基本架构
通过讨论 Splunk 的体系结构，您将了解每个部分的工作原理，并熟悉我们将在本章中使用的一些术语:
*   **索引器**:对于较大的 Splunk 安装，建议您将专用和复制索引器设置为环境的一部分。索引器的作用是索引您的日期，也就是说，组织您发送到 Splunk 的日志数据。它还添加了元数据和额外的信息来帮助加快搜索过程。索引器将存储你的日志数据，这些数据可以被搜索头使用和查询。
*   **搜索头**:这是执行搜索查询和管理 Splunk 安装的主网页界面。搜索头将与索引器连接，以查询已经收集并存储在索引器上的数据。在较大的安装中，您甚至可能有许多搜索头，以允许进行大量的查询和报告。
*   **数据转发器**:通常安装在你想收集日志的系统上。这是一个小应用，被配置为收集系统上的日志，然后将数据推送到您的 Splunk 索引器。
在下一节中，我们将使用官方的 Splunk Docker 映像，其中我们将在活动容器上运行搜索头和索引器。我们将继续在我们的 Splunk 环境中使用 Docker，因为它还提供索引器和数据转发器作为支持的 Docker 映像。这些允许您在继续安装之前测试和沙箱安装。
注意
请注意，为了简单起见，我们使用的是 Splunk Docker 映像。如果需要，它将允许我们删除应用。如果您喜欢这个选项，安装应用并在您的系统上运行它既简单又直接。
Splunk 的另一个重要特点是，它包括一个由 Splunk 和其他第三方提供商提供的大型应用生态系统。这些应用通常是为了帮助用户监控日志被转发到 Splunk 的服务，然后在搜索头上安装第三方应用。这将提供专门针对这些日志的仪表板和监控工具。例如，您可以从思科设备转发您的日志，然后安装思科提供的 Splunk 应用，以便在您开始索引数据时立即开始监控您的思科设备。您可以创建自己的 Splunk 应用，但要将其列为官方提供的应用，需要通过 Splunk 认证。
注意
有关可用的免费和付费 Splunk 应用的完整列表，Splunk 已经设置了它们的 SplunkBase，允许用户从以下网址搜索和下载可用的应用:[https://splunkbase.splunk.com/apps/](https://splunkbase.splunk.com/apps/)。
这是对 Splunk 的快速介绍，应该有助于您理解我们将在下面几节中进行的一些工作。不过，让您熟悉 Splunk 的最好方法是让容器在您的系统上运行，以便您可以开始使用它。
# 在 Docker 上安装和运行 Splunk
作为本章的一部分，我们将使用官方 Splunk Docker 映像将其安装到我们的系统上。即使直接在您的主机系统上安装 Splunk 并不是一个困难的过程，但将 Splunk 安装为容器映像将有助于扩展我们对 Docker 的知识，并进一步提升我们的技能。
我们的 Splunk 安装将在同一个容器上运行搜索头和索引器，因为我们要监控的数据量将是最小的。但是，如果您要在多个用户访问数据的生产环境中使用 Splunk，您可能需要考虑安装专用索引器以及一个或多个专用搜索头。
注意
在本章中，我们将使用 Splunk 企业版 8.0.2。本章将执行的大部分工作都不会太高级，因此，将来应该与 Splunk 的后续版本兼容。
在我们开始使用 Splunk 之前，让我们浏览一下 Splunk 应用使用的三个主要目录。虽然我们将只执行基本的配置和更改，但是下面的细节将有助于理解应用中的目录是如何组织的，并且正如您将看到的，将有助于您的 Docker 容器设置。
在主 Splunk 应用目录中，通常安装为`/opt/splunk/`，您将看到三个主目录，如下所述:
*   **etc 目录**:这里保存了我们 Splunk 安装的所有配置信息。我们将创建一个目录，并挂载 etc 目录作为我们运行容器的一部分，以确保我们对配置所做的任何更改都被保留，并且不会在我们关闭应用时被破坏。这将包括用户访问、软件设置和保存的搜索、仪表板和 Splunk 应用。
*   **bin 目录**:这是 Splunk 所有的应用和二进制文件存放的地方。此时，您不需要访问此目录或对此目录中的文件进行更改，但这可能是您需要进一步研究的内容。
*   **var directory**: Splunk's indexed data and application logs are stored in this directory. When we first start working with Splunk, we won't bother keeping the data we are storing in the var directory. But when we have ironed out all the bugs with our deployment, we will mount the var directory to keep our indexed data and make sure we can continue to search against it, even if our Splunk container stops running.
    注意
    要下载本章中使用的一些应用和内容，您需要在[splunk.com](http://splunk.com)上注册一个帐户才能访问它。注册时没有义务购买任何东西或提供信用卡详细信息，因为这只是 Splunk 用来跟踪谁在使用他们的应用的一种手段。
为了运行我们的 Splunk 容器，我们将从 Docker Hub 中提取官方映像，然后运行类似于下面的命令:
```
docker run --rm -d -p  -e "SPLUNK_START_ARGS=--accept-license" -e "SPLUNK_PASSWORD=" splunk/splunk:latest
```
从前面的命令中可以看出，我们需要公开访问安装的不同部分所需的相关端口。您还会注意到，作为运行容器的一部分，我们需要指定两个环境变量。第一个是`SPLUNK_START_ARGS`，我们已经将它设置为`--accept-license`，当您在运行的服务器上安装 Splunk 时，您通常会接受它。其次，我们需要为`SPLUNK_PASSWORD`环境变量提供一个值。这是管理员帐户使用的密码，也是您首次登录 Splunk 时将使用的帐户。
我们已经提供了大量的理论，让您为本章的下一部分做好准备。是时候将这一理论付诸实践，让我们的 Splunk 安装运行起来，这样我们就可以开始从我们的主机系统收集日志了。在下面的练习中，我们将在运行的主机系统上安装一个 Splunk 数据转发器，以收集要转发给我们的 Splunk 索引器的日志。
注意
请使用`touch`命令创建文件，使用`vim`命令使用 vim 编辑器处理文件。
## 练习 14.01:运行 Splunk 容器并开始收集数据
在本练习中，您将使用 Docker Hub 上提供的官方 Splunk Docker 映像运行 Splunk。您将进行一些基本的配置更改，以帮助管理用户对映像上应用的访问，然后您将在系统上安装转发器，以便您可以开始使用 Splunk 安装中的日志:
1.  创建一个名为`chapter14` :
    ```
    mkdir chapter14; cd chapter14/
    ```
    的新目录
2.  使用`docker pull`命令从 Splunk 创建的 Docker 集线器中拉出最新支持的映像。存储库简单地列为`splunk/splunk` :
    ```
    docker pull splunk/splunk:latest
    ```
3.  Run the Splunk image on your system with the `docker run` command. Use the `--rm` option to make sure the container is removed fully when it is killed, the `-d` option to have the container running as a daemon in the background of your system, and the `-p` option to expose port `8000` on your host machine so that you can view the applications on our web browser. Lastly, use the `-e` option to provide environment variables to the system when you start up the container:
    ```
    docker run --rm -d -p 8000:8000 -e "SPLUNK_START_ARGS=--accept-license" -e "SPLUNK_PASSWORD=changeme" --name splunk splunk/splunk:latest
    ```
    在前面的命令中，您公开了 web 界面的端口`8000`，接受带有一个环境变量的 Splunk 许可证，并将管理密码设置为`changeme`。该命令也作为后台守护程序与`-d`一起运行。
4.  Splunk will take 1 or 2 minutes to start up. Use the `docker logs` command to view the progress of the application:
    ```
    docker logs splunk
    ```
    当您看到类似如下所示的一行`Ansible playbook complete`时，您应该已经准备好登录了:
    ```
    …
    Ansible playbook complete, will begin streaming 
    ```
5.  Enter the URL `http://0.0.0.0:8000` to access the web interface of our Splunk installation. You should see something similar to the following. To log in, use `admin` as the username and the password we set with the `SPLUNK_PASSWORD` environment variable while running the image. In this case, you will use `changeme`:
    ![Figure 14.1: The Splunk web login page ](img/B15021_14_01.jpg)
    图 14.1:Splunk 网络登录页面
    登录后，您将看到 Splunk 主屏幕，其外观应类似于以下内容。主屏幕分为单独的部分，如下所示:
    ![Figure 14.2: The Splunk welcome screen ](img/B15021_14_02.jpg)
    图 14.2:Splunk 欢迎屏幕
    主屏幕可以分为以下几个部分:
    - **Splunk >** :这是屏幕左上角的图标。只要你点击图标，它就会随时带你回到主屏幕。