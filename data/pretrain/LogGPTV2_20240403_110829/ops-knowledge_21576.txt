It sounds like you have a script that runs successfully when launched from the command line or IDLE, but encounters issues when executed via cron. The specific error you're encountering is:

```
IOError: [Errno 32] Broken pipe
```

This error typically occurs when your script attempts to write to a closed file descriptor, such as `stdout` or `stderr`, which are often redirected to log files by cron. If the script runs for an extended period and cron closes these file descriptors, any subsequent attempts to print to them will result in a "Broken pipe" error.

### Possible Solutions

1. **Use Logging Instead of `print` Statements:**
   - Instead of using `print` statements, consider using Python's `logging` module to write output to a dedicated log file. This ensures that your script can continue to log information even if `stdout` and `stderr` are closed.
   - Example:
     ```python
     import logging

     # Configure logging
     logging.basicConfig(filename='/path/to/your/logfile.log', level=logging.INFO)

     # Use logging instead of print
     logging.info('This is a log message')
     ```

2. **Redirect Output to a File:**
   - You can explicitly redirect the output of your script to a file in the crontab entry. This way, the output is written directly to the file, bypassing the potential issue with closed file descriptors.
   - Example crontab entry:
     ```
     * * * * * /usr/bin/python /path/to/your/script.py >> /path/to/your/logfile.log 2>&1
     ```

3. **Check the Environment Variables:**
   - Cron jobs run in a different environment compared to an interactive shell. Ensure that the necessary environment variables, such as `PATH` and `HOME`, are correctly set in your crontab.
   - You can specify environment variables at the top of your crontab file:
     ```
     PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
     HOME=/home/yourusername
     * * * * * /usr/bin/python /path/to/your/script.py
     ```

4. **Increase the Timeout (if applicable):**
   - If your script is being terminated due to a timeout, you might need to increase the timeout value. However, this is less common and usually not a direct solution to the "Broken pipe" error.

By implementing these solutions, you should be able to resolve the "Broken pipe" error and ensure that your script runs smoothly when executed via cron.