## 三.使用函数装载数据  
1、 创建本地表（目标表）结构  
略  
2、 将包含数据的文件写入OSS  
略  
3、 在RDS PG中创建OSS外部表  
略  
4、 准备需要并行导入的列表  
```  
select rds_oss_fdw_load_data_prepare('oss_table','lineitem');  
```  
执行后，会看到表 oss_fdw_load_status 中，保存了准备导入的所有文件列表，用户可以做适当的删减定制。  
4、 数据装载  
```   
 select rds_oss_fdw_load_data_execute('oss_table','lineitem',10,'mypassword');  
```  
函数 rds_oss_fdw_load_data_execute 会等待数据导入的完成才返回。  
5、 查询状态  
期间，我们可以通过下列 SQL 查看正在工作的异步会话状态  
```  
 select application_name, state, pid,query, now() - xact_start as xact  from pg_stat_activity where state != 'idle' and application_name='oss_loader' order by xact desc;  
```  
6、 管理状态  
同时，我们也可以随时中断数据导入工作  
```  
select pg_terminate_backend(pid),application_name, state ,query from pg_stat_activity where state != 'idle' and pid != pg_backend_pid() and application_name='oss_loader';  
```  
7、 查看进度  
我们也很容易看到整个数据装载的进度(单位 MB)  
```  
select  
(  
select sum(size)/1024/1024 as complete from oss_fdw_load_status where status = 1  
)a,  
(  
select sum(size)/1024/1024 as full from oss_fdw_load_status  
)b;  
```  
8、 性能  
使用 TPCC 100GB的数据进行装载测试，耗时 10 分钟，平均 170MB/S  
```  
select rds_oss_fdw_load_data_prepare('t_oss2','lineitem');  
select rds_oss_fdw_load_data_execute('t_oss2','lineitem',10,'123456Zwj');  
select sum(size)/1024/1024 from oss_fdw_load_status;  
      ?column?        
--------------------  
 22561.919849395752  
(1 row)  
select pg_size_pretty(pg_relation_size(oid)) from pg_class where relname = 'lineitem';  
 pg_size_pretty   
----------------  
 101 GB  
(1 row)  
```  
## 性能极限扩展  
为了提高本地加载速度，用户可以这么做：  
1、目标表选择UNLOGGED TABLE，注意如果选择unlogged table，那么数据库崩溃后unlogged table的数据会被清除，并且请记住备库看不到unlogged table的数据。  
除非你的数据是定期全量覆盖的，否则不建议用unlogged table来加速。  
```  
create unlogged table xxx (xx xx);  
```  
2、选择多个目标表  
由于单个目标表，在INDEX LOCK，在EXTEND BLOCK方面都有一定的局限性，为了达到极限，可以使用多个目标表。例如每一批OSS文件对应一个本地表分区。  
```  
-- 并行  
insert into tbl1 select * from oss_tbl1;  
insert into tbl2 select * from oss_tbl2;  
.....  
insert into tblx select * from oss_tblx;  
```  
3、导入前关闭目标表的表级autovacuum  
autovacuum会影响导入性能，因为它要消耗一定的IO。  
```  
alter table tbl_dict set (autovacuum_enabled =off);  
alter table tbl_dict set (toast.autovacuum_enabled =off);  
```  
4、导入后再开启目标表的autovacuum，收集统计信息  
```  
alter table tbl_dict set (autovacuum_enabled =on);  
alter table tbl_dict set (toast.autovacuum_enabled =on);  
```  
5、后创建索引（可以并行）  
索引可以同时创建（单个表的多个索引可以同时创建，不会相互锁等待。多个表的多个索引也可以同时创建），如果创建索引过程中不需要执行DML，建议不要开启concurrently选项，否则建议开启。  
同时创建，可以提高资源利用率，达到快速完成数据导入加索引创建的目标。  
## 云端相关产品      
[阿里云 RDS PostgreSQL](https://www.aliyun.com/product/rds/postgresql)                        
[阿里云 HybridDB for PostgreSQL](https://www.aliyun.com/product/gpdb)          
[RDS PG OSS 外部表文档1](https://help.aliyun.com/knowledge_detail/43352.html)    
[RDS PG OSS 外部表文档2](https://help.aliyun.com/document_detail/70148.html)  
[HDB PG OSS 外部表文档](https://help.aliyun.com/document_detail/35457.html)    
[《阿里云RDS PostgreSQL OSS 外部表实践 - (dblink异步调用封装并行) 数据并行导出到OSS》](../201709/20170906_01.md)    
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")