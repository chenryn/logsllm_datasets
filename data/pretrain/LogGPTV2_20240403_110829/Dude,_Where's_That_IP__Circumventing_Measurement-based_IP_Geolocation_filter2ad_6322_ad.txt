lay, δ, changes the equation to the following:
p(x − λh)2 + (y − φh)2 = dht + δ
(5)
Thus, for targets with a single gateway router, an adver-
sary can only increase the localization region by intro-
ducing an additional delay without changing the location
of the region’s geometric center.
For targets with multiple gateway routers H =
h0, h1, ..., hn, targets are geolocated based on the de-
lays between the gateways and t. An adversary can
add additional delay, δj, between each gateway, hj, and
t based on the location of hj. This is equivalent to
the delay-adding attack, except the previously geolo-
cated gateway routers are used in place of the real land-
marks. Therefore, the previous evaluation results for the
delay-adding attack on delay-based geolocation can be
extended to topology-based geolocation for targets with
multiple gateway routers.
5.2 Topology-based attacks
In topology-based geolocation, intermediate nodes are
localized to conﬁdence regions, and geographic con-
straints constructed from these intermediate nodes are
expanded by their conﬁdence regions to account for the
accumulation of error. However, this does not result in
a monotonic increase in the region size of intermediate
nodes with each hop. The intersection of several ex-
panded constraints for intermediate nodes along multiple
network paths to the target can still result in intermedi-
ate nodes that are localized to small regions. A sophisti-
cated adversary with control over a large administrative
domain can exploit this property by fabricating nodes,
links and latencies within its network to create constraint
intersections at speciﬁc locations. This assumes that the
adversary can detect probe trafﬁc issued from geoloca-
tion systems in order to present a topologically different
network without affecting normal trafﬁc.
Externally visible nodes in an adversary’s network
consist of gateway routers ER = {er0, er1, ..., erm},
internal routers F = {f0, f1, ..., fn} and end-points
T = {τ0, τ1, ..., τs}. Internal routers can be ﬁctitious,
and network links between internal routers can be arbi-
trarily manufactured. The adversary’s network can be de-
scribed as the graph G = (V, E), where V = F ∪ER∪T
represents routers, and E = {e0, e1, ..., ek} with weights
w(ei) is the set of links connecting the routers with
weights representing network delays.
All internal link latencies, including those between
gateways, can be fabricated by the adversary. How-
ever, the delay between ﬁctitious nodes must respect the
speed-of-light constraint, which dictates that a packet can
only travel a distance equal to the product of delay and
the speed-of-light in ﬁber.
CLAIM: 3 Topology-based attacks require the adversary
to have more than one geographically distributed gate-
way router to its network.
This claim follows from the analysis of delay-based at-
tacks when all network paths to the target converge to a
common gateway router. With only one gateway router
to the network, changes to internal network nodes can af-
fect only the ﬁnal size of the localization region, not the
region’s geometric center.
CLAIM: 4 An adversary with control over three or more
geographically distributed gateway routers to its network
can move the target to an arbitrary location.
Unlike delay-based attacks that can only increase laten-
cies from the landmarks to the target, topology-based
attacks can assign arbitrary latencies from the ingress
points to the target. From geometric triangulation, this
enables topology-based attacks to, theoretically, triangu-
late the location of the target to any point on the globe
given three or more ingress points.
In practice, there are challenges that limit the adver-
sary from achieving perfect accuracy with this attack.
Speciﬁcally, the attack requires the adversary to know the
estimated location of the gateway routers and to have an
accurate model of the delay-to-distance function used by
the geolocation system. Such information can be reverse-
engineered by a determined adversary by analyzing the
geolocation results of other targets in the adversary’s net-
work.
Although a resourceful adversary’s topology-based at-
tack can substantially affect geolocation results, it can
also introduce additional circuitousness to all network
paths to the target that creates a detectable signature. Cir-
cuitousness refers to the ratio of actual distance traveled
along a network path to the direct distance between the
two end points of a path. Circuitousness can be observed
by plotting the location of intermediate nodes as they are
located by the topology-aware geolocation system.
5.2.1 Naming attack extension
geolocation
topology-based
State-of-the-art,
sys-
tems [14, 30] leverage the structured way in which most
routers are named to extract more precise information
about router location. A collection of common naming
patterns is available through the undns tool [27], which
can extract approximate city locations from the domain
names of routers.
When geolocation relies on undns, an adversary can
effectively change the observed location of the target
even with only a single gateway router to its network.
This naming attack requires the adversary is capable of
crafting a domain name that can deceive the undns tool,
poisoning the undns database with erroneous mappings
or responding to traceroutes with a spoofed IP address.
The adversary only needs to use the naming attack to
place any last hops before the target at its desired geo-
graphic location. The target will then be localized to the
same location as this last hop in the absence of sufﬁcient
constraints.
Naming attacks exhibit the same increased circuitous-
ness as standard topology-based attacks. Extensive poi-
soning of the undns database could allow an attacker to
change the location of other routers along the network
paths to reduce path circuitousness.
5.3 Evaluation
We evaluate the topology-based (hop-adding) attack and
undns naming extension using a simulator of topology-
aware geolocation. To perform the evaluation, we de-
veloped the ﬁctitious network illustrated in Figure 12.
The network includes 4 gateway routers (ER), repre-
sented by PlanetLab nodes in Victoria, BC; Riverside,
CA; Ithaca, NY, and Gainesville, FL. The network also
includes 11 forged locations (T ) and 14 non-existent in-
ternal routers (F ). Three of the non-existent routers are
Figure 12: The adversary’s network used for evaluating
the topology-based attack.
geographically distributed around the US, while the other
11 are placed close to the forged locations to improve
the effectiveness of the attack, especially when the ad-
versary can manipulate undns entries. Routers in the ﬁc-
titious network are connected using basic heuristics. For
example, each of the 11 internal routers near the forged
locations is connected to the 3 routers nearest them to
aid in triangulation. We show that even using this simple
network design, an adversary executing the hop-adding
attack and undns extension can be successful.
To evaluate the attack, we use the same set of 50 Plan-
etLab nodes used in evaluating the delay-adding attack
(Figure 1), with an additional 30 European PlanetLab
nodes that act only as targets attempting to move into
North America. We move the targets to the 11 forged lo-
cations in the ﬁctitious network. These locations, a sub-
set of the 40 US locations used in evaluating the delay-
adding attack, were chosen to be geographically dis-
tributed around the US. Each of the 80 PlanetLab nodes
takes a turn being the target with the remaining US Plan-
etLab nodes used as landmarks. Each target is moved to
each of the 11 forged locations in turn, for a total of 880
attacks.
When executing the attack, the traceroute from each
landmark is directed to its nearest gateway router. The
ﬁrst part of the traceroute is dictated by the network
path between the landmark and its nearest gateway router
(represented by a PlanetLab node). The second part is
artiﬁcially generated to be the shortest path between the
gateway router and the forged location. The latency of
the second part is lower bounded by the speed-of-light
delay between the gateway router and the target’s true
location. When the speed-of-light latency between the
gateway router and the target is greater than the latency
on the shortest path from the gateway to the forged lo-
cation, the additional delay is divided across links in the
shortest path.
 1800
 1600
 1400
 1200
 1000
 800
 600
 400
 200
)
m
k
(
r
e
k
c
a
t
t
a
r
o
f
r
o
r
r
e
90-percentile
median
10-percentile
 0
 1000  2000  3000  4000  5000  6000  7000  8000  9000 10000
90-percentile
median
10-percentile
 180
 160
 140
 120
 100
 80
 60
 40
 20
)
m
k
(
r
e
k
c
a
t
t
a
r
o
f
r
o
r
r
e
 0
 1000  2000  3000  4000  5000  6000  7000  8000  9000 10000
distance of attempted move (km)
distance of attempted move (km)
Figure 14: Error observed by the adversary depending
on how far they attempt to move the target using the
topology-based attack.
Figure 15: Error observed by the adversary depending on
how far they attempt to move the target using the undns
attack.
]
x
<
X
P
[
 1
 0.9
 0.8
 0.7
 0.6
 0.5
 0.4
 0.3
 0.2
 0.1
 0
undns-attack
undns-attack EU
hop-adding
hop-adding  EU
 0
 200  400  600  800  1000 1200 1400 1600 1800 2000
error for attacker (km)
Figure 13: CDF of error distance for the attacker when
executing the topology-based and undns attacks.
5.3.1 Attack effectiveness
We begin by examining how accurate the adversary can
be when attempting to move the target to a speciﬁc
forged location. Figure 13 shows the error for the ad-
versary when executing the topology-based attack and
undns extension. Without the undns extension, the ad-
versary is able to place a North American target within
680 km of the false location 50% of the time. This is sim-
ilar to the delay-adding attack in which the adversary has
access to the best line function. When moving a target
from Europe to North America, the adversary’s median
error increases by 50% to 929 km. Despite this increase,
we observe that the adversary succeeds in each attempt
to move a European target into the US. In addition to
the overall decrease in accuracy for the adversary, we
note that there are some instances where the target in Eu-
rope misleads the algorithm with higher accuracy. This
is caused by the adversary using the speed-of-light ap-
proximation for latencies within their network. Since the
speed-of-light is the lower bound on network delay, when
additional delay is added to the links to account for the
time it would take a probe to reach the target in Europe,
the delay approaches the larger delay expected by the
landmarks’ distance-to-delay mapping. The undns ex-
tension increases the adversary’s accuracy by 93%, with
the adversary locating herself within 50 km of the forged
location 50% of the time. These results are consistent
whether the true location of the target is in North Amer-
ica or Europe.
When analyzing the delay-adding attack, we observed
a linear relationship between the distance the adversary
attempts to move the target and the error she observes.
Figures 14 and 15 show the 10th percentile, median and
90th percentile error for the attacker depending on how
far the forged location is from the target for the topology-
based attack and undns extension, respectively. The ob-
served errors were quite erratic which is a result of the
many other factors that affect the accuracy of geolocation
beyond the distance of the attempted move. In general,
error for the adversary increases slowly as the adversary
tries to move the target longer distances. This enables an
adversary executing the topology-based attack to move
the target longer distances. Error for the adversary using
the undns extension remains fairly constant regardless of
how far they attempt to move the target. In the case of the
undns attack, the median accuracy ﬂuctuates by less than
60 km whether the adversary moves 500 km or 4,000 km.
The slow growth of adversary error stems from the en-
gineered delays in the ﬁctitious network. These delays
cause nodes along the paths (including the end point) to
]
x
<
X
P
[
 1
 0.8
 0.6
 0.4
 0.2
 0
undns-attack
undns-attack (EU)
hop-adding (EU)
hop-adding
 0
 20
 40
 60
 80
 100  120  140  160  180
absolute difference in direction (degrees)
 1
 0.8
 0.6
 0.4
 0.2
]
x
<