To turn on GSKit trace for JCL CSQ40CFG, carry out the following procedure:
1.Create JCL job hlq.SCSQPROC(CSQ40CFG) with:
GSK_TRACE_FILE=/u//AMStrace/gsktrace/gskssl.%.trc
GSK_TRACE=0xff
2.Set the ENVARS DD card as in the following example. On the setmqspl and the dspmqspl
commands, specify parameters specific to your environment:
//CSQ40CFG JOB (ACCOUNT),'DEFAULT JOBCARD',CLASS=C,
// MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=&SYSUID
//* Job to define and display an AMS policy on a queue. The policy
//* name is the same as the queue name.
//* Make sure column numbers are not included as otherwise they can
//* interfere with the data in SYSIN.
/*JOBPARM SYSAFF=MVnn
//CSQ40CFG EXEC PGM=CSQ0UTIL,
// PARM='ENVAR("_CEE_ENVFILE_S=DD:ENVARS") /'
//STEPLIB DD DSN=hlq.SCSQANLE,DISP=SHR
// DD DSN=hlq.SCSQAUTH,DISP=SHR
//ENVARS DD DSN=hlq.SCSQPROC(CSQ40ENV),DISP=SHR
//SYSPRINT DD SYSOUT=*
//SYSIN DD *
setmqspl -m MQ01 -p BANK.RQ
-r CN=USERID,O=IBM,C=UK -e AES256
dspmqspl -m MQ01 -p BANK.RQ
/*
3.Submit the CSQ40CFG job.
The CSQ40CFG job does not give any indication of whether GSKit trace has been enabled or not.
However, you can check if trace is enabled or not by looking at the settings in the environment
variables file specified for the job, or by checking if a trace file was created for the process under which
the CSQ40CFG job ran.
Turning off GSKit trace
Turn off GSKit trace for the AMS address space
To turn off GSKit trace for the AMS address space, carry out the following procedure:
1.Stop the queue manager (ssidMSTR) address space. This stops both the channel initiator and the AMS
address spaces.
2.Modify the hlq.SCSQPROC(CSQ40ENV) as follows:
GSK_TRACE_FILE=/u//AMStrace/gsktrace/gskssl.%.trc
GSK_TRACE=0x00
3.Restart the queue manager (ssidMSTR) and channel initiator (ssidCHIN) address spaces. Remember
that the AMS (ssidAMSM) address space is started as part of starting the queue manager.
4.Check the environment variable settings in the job log for the AMS address space to ensure that GSKit
trace has been turned off.
Turn off GSKit for JCL hlq.SCSQPROC(CSQ40CFG)
To turn off GSKit trace for JCL hlq.SCSQPROC(CSQ40CFG), carry out the following procedure:
IBM MQ troubleshooting and support 409
1.Modify the hlq.SCSQPROC(CSQ40CFG) file as follows:
GSK_TRACE_FILE=/u//AMStrace/gsktrace/gskssl.%.trc
GSK_TRACE=0x00
2.Submit the hlq.SCSQPROC(CSQ40CFG) job and check that no trace file is produced.
Notes:
• In the environment files, coding GSK_TRACE=0xff turns trace on, and coding GSK_TRACE=0x00 turns
trace off.
• Include the % character in the trace file name to ensure that trace file names produced for different USS
processes, that issue gsk_* calls, include the process identifier, and hence are kept separate.
Related information
Generating IBM MQ GTF trace on IBM z/OS
Examples of trace output for z/OS
Use these examples to help interpret trace output on z/OS.
Figure 60 on page 411 shows an example of a trace taken on entry to an MQPUT1 call. The following
items have been produced:
• Queue request parameter list
• Object descriptor (MQOD)
• Message descriptor (MQMD)
• Put message options (MQPMO)
• The first 256 bytes of message data
Compare this to Figure 61 on page 412, which illustrates the same control blocks on exit from IBM MQ.
410 Troubleshooting and Support for IBM MQ
USRD9 5E9 ASCB 00F87E80 JOBN ECIC330
CSQW072I ENTRY: MQ user parameter trace
PUTONE
Thread... 004C2B10 Userid... CICSUSER pObjDesc. 106B2010
pMsgDesc. 106B20B8 pPMO..... 106B2200
BufferL.. 00000064 pBuffer.. 106A0578 RSV1..... 00000000
RSV2..... 00000000 RSV3..... 116BC830
C9E8C1E8 C5C3C9C3 AA8E8583 76270484 | IYAYECIC..ec...d |
D4D8E3E3 0000048C 00000000 00000000 | MQTT............ |
00000000 1910C7C2 C9C2D4C9 E8C14BC9 | ......GBIBMIYA.I |
C7C3E2F2 F0F48E85 83762979 00010000 | GCS204.ec..`.... |
GMT-01/30/05 14:42:08.412320 LOC-01/30/05 14:42:08.412320
USRD9 5E9 ASCB 00F87E80 JOBN ECIC330
CSQW072I ENTRY: MQ user parameter trace
+0000 D6C44040 00000001 00000000 C2404040 | OD ........B |
+0010 40404040 40404040 40404040 40404040 | |
...
+00A0 00000000 00000000 | ........ |
GMT-01/30/05 14:42:08.412345 LOC-01/30/05 14:42:08.412345
USRD9 5E9 ASCB 00F87E80 JOBN ECIC330
CSQW072I ENTRY: MQ user parameter trace
+0000 D4C44040 00000001 00000000 00000008 | MD ............ |
...
+0130 40404040 40404040 40404040 40404040 | |
+0140 40404040 | |
GMT-01/30/05 14:42:08.412370 LOC-01/30/05 14:42:08.412370
USRD9 5E9 ASCB 00F87E80 JOBN ECIC330
CSQW072I ENTRY: MQ user parameter trace
+0000 D7D4D640 00000001 00000000 FFFFFFFF | PMO ............ |
...
+0070 40404040 40404040 40404040 40404040 | |
GMT-01/30/05 14:42:08.412393 LOC-01/30/05 14:42:08.412393
USRD9 5E9 ASCB 00F87E80 JOBN ECIC330
CSQW072I ENTRY: MQ user parameter trace
+0000 C1C1C1C1 C1C1C1C1 C1404040 40404040 | AAAAAAAAA |
...
+0060 40404040 | |
GMT-01/30/05 14:42:08.412625 LOC-01/30/05 14:42:08.412625
Figure 60. Example trace data from an entry trace of an MQPUT1 request
IBM MQ troubleshooting and support 411
USRD9 5EA ASCB 00F87E80 JOBN ECIC330
CSQW073I EXIT: MQ user parameter trace
PUTONE
Thread... 004C2B10 Userid... CICSUSER pObjDesc. 106B2010
pMsgDesc. 106B20B8 pPMO..... 106B2200
BufferL.. 00000064 pBuffer.. 106A0578 RSV1..... 00000000
RSV2..... 00000000 RSV3..... 116BC830
CompCode. 00000002 Reason... 000007FB
C9E8C1E8 C5C3C9C3 AA8E8583 76270484 | IYAYECIC..ec...d |
D4D8E3E3 0000048C 00000000 00000000 | MQTT............ |
00000000 1910C7C2 C9C2D4C9 E8C14BC9 | ......GBIBMIYA.I |
C7C3E2F2 F0F48E85 83762979 00010000 | GCS204.ec..`.... |
MQRC_OBJECT_TYPE_ERROR
GMT-01/30/05 14:42:08.412678 LOC-01/30/05 14:42:08.412678
USRD9 5EA ASCB 00F87E80 JOBN ECIC330
CSQW073I EXIT: MQ user parameter trace
+0000 D6C44040 00000001 00000000 C2404040 | OD ........B |
...
+00A0 00000000 00000000 | ........ |
GMT-01/30/05 14:42:08.412789 LOC-01/30/05 14:42:08.412789
USRD9 5EA ASCB 00F87E80 JOBN ECIC330
CSQW073I EXIT: MQ user parameter trace
+0000 D4C44040 00000001 00000000 00000008 | MD ............ |
...
+0140 40404040 | |
GMT-01/30/05 14:42:08.412814 LOC-01/30/05 14:42:08.412814
USRD9 5EA ASCB 00F87E80 JOBN ECIC330
CSQW073I EXIT: MQ user parameter trace
+0000 D7D4D640 00000001 00000000 FFFFFFFF | PMO ............ |
...
+0070 40404040 40404040 40404040 40404040 | |
GMT-01/30/05 14:42:08.412836 LOC-01/30/05 14:42:08.412836
USRD9 5EA ASCB 00F87E80 JOBN ECIC330
CSQW073I EXIT: MQ user parameter trace
+0000 C1C1C1C1 C1C1C1C1 C1404040 40404040 | AAAAAAAAA |
...
+0060 40404040 | |
GMT-01/30/05 14:42:08.412858 LOC-01/30/05 14:42:08.412858
Figure 61. Example trace data from an exit trace of an MQPUT1 request
Tracing the Advanced Message Queuing Protocol (AMQP) Service
The trace facility provided by the Advanced Message Queuing Protocol (AMQP) Service is provided to help
IBM Support to diagnose customer issues that are related to the service.
About this task
There are two ways to control trace for the IBM MQ AMQP service:
• By using the strmqtrc and endmqtrc commands to start and stop trace.
From IBM MQ 9.2.0, you can restrict trace output to the AMQP service only by specifying the -t
parameter with the amqp option.
Enabling trace using the strmqtrc command without the -t parameter with the amqp option generates
trace information for the entire queue manager where the IBM MQ AMQP service is running. This
information includes the IBM MQ AMQP service itself, and the underlying Java Message Queuing
Interface (JMQI) that the service uses to communicate with other queue manager components.
412 Troubleshooting and Support for IBM MQ
• By running the controlAMQPChannel command. Turning on trace by using the
controlAMQPChannel command traces only the IBM MQ AMQP service.
If you are unsure which option to use, contact IBM Support for advice on the best way to collect trace for
the issue that you are seeing.
Procedure
1.Method one
a)Open a command prompt and navigate to the directory:
MQ_INSTALLATION_PATH\bin
b)Run the strmqtrc command to enable trace:
From IBM MQ 9.2.0, to restrict trace output to the AMQP service only, run the following command:
strmqtrc -m qmgr_name -t amqp
where qmgr_name is the name of the queue manager where the IBM MQ AMQP service is running,
and -t amqp restricts trace output to the AMQP service only.
Running the strmqtrc command without the -t parameter and the amqp option generates trace
information for the entire queue manager where the IBM MQ AMQP service is running.
c)Reproduce the issue.
d)Stop trace, by running the endmqtrc command:
endmqtrc -m qmgr_name
2.Method two.
a)Bring up a command prompt and navigate to the directory:
MQ_INSTALLATION_PATH\bin
b)Run the following command to enable trace:
•
controlAMQPChannel -qmgr=qmgr_name -mode=starttrace
•
./controlAMQPChannel.sh -qmgr=qmgr_name -mode=starttrace
where qmgr_name is the name of the queue manager where the AMQP Service is running.
c)Reproduce the issue.
d)When the issue occurs, stop trace by running the following command:
•
controlAMQPChannel -qmgr=qmgr_name -mode=stoptrace
•
./controlAMQPChannel.sh -qmgr=qmgr_name -mode=stoptrace [clientid=ClientIdentifier]
where qmgr_name is the name of the queue manager where the AMQP Service is running.
Results
To view the trace output, go to the following directory:
• MQ_DATA_PATH\trace.
IBM MQ troubleshooting and support 413
• /var/mqm/trace.
Before IBM MQ 9.2.0, the trace files containing the information from the AMQP Service are called
amqp_N.trc, where N is a number.
From IBM MQ 9.2.0, the trace files are named as follows:
• The trace files that contain the information from the AMQP service are called
amqpRunMQXRService_PPPPP.N.trc, where PPPPP is the process identifier for the AMQP service
and N is a number.
• The trace files that contain the information from the controlAMQPChannel command are called
amqpControlMQXRChannel_PPPPP.N.trc, where PPPPP is the process identifier for the AMQP
service and N is a number.
Trace information that is generated by the JMQI is written to a trace file called amqp_PPPPP.trc, where
PPPPP is the process identifier for the AMQP Service.
Related tasks
“Collecting troubleshooting information for IBM Support” on page 302
When you open a case with IBM, you can include additional IBM MQ troubleshooting information
(MustGather data) that you have collected to help with investigating the problem. In addition to the
information described in this section, IBM Support might request further information on a case by case
basis.
“Troubleshooting AMQP problems” on page 65
Troubleshooting information to help you solve a problem with running AMQP applications.
Additional diagnostics using the
controlAMQPChannel command
Using the controlAMQPChannel command to provide additional diagnostic information about the AMQP
service.
Procedure
Run the following command to provide useful diagnostic information from the MQXR service:
\amqp\bin\controlAMQPChannel -qmgr= -mode=diagnostics
-diagnosticstype=
The diagnostic information generated depends on the value of the -diagnosticstype=
parameter:
-diagnosticstype= 0
Thread dump written to the console
-diagnosticstype= 1
FDC with some internal service statistics
-diagnosticstype= 2
FDC with internal statistics, plus information about the clients that are currently connected
-diagnosticstype= 3
Heap dump
-diagnosticstype= 4
Javacore
-diagnosticstype= 5
Full system dump
-diagnosticstype= 6
Detailed information about a specific client. Note that you must also supply the -clientid
parameter for that client as well.
414 Troubleshooting and Support for IBM MQ
Tracing the IBM MQ Bridge to
blockchain
The trace facilities for the IBM MQ Bridge to blockchain are provided to help IBM staff to diagnose
customer problems. Enable the trace for the IBM MQ Bridge to blockchain and define the debug level
when you issue the runmqbcb command to start the bridge.
Before you begin
Notes:
• The IBM MQ Bridge to blockchain is deprecated across all releases from November 22
2022 (see US Announcement letter 222-431).
• For Continuous Delivery, the IBM MQ Bridge to blockchain is removed from
the product at IBM MQ 9.3.2. IBM MQ 9.3.1 is the last Continuous Delivery release that it is delivered
with.
Procedure
1.Set the environment variable MQBCB_EXTRA_JAVA_OPTIONS to specify the -D Java option and turn on
the IBM MQ classes for JMS trace.
export MQBCB_EXTRA_JAVA_OPTIONS="-Dcom.ibm.msg.client.commonservices.trace.status=ON"
2.Set the debug level to verbose mode -d 2 when you issue the runmmbcb command at run time. On
z/OS, you can also do this by editing the started task JCL.
./runmqbcb.sh -f new_config.cfg -r logFile.log -d 2
Your logFile.log contains information that might be helpful in resolving your problem with the IBM
MQ Bridge to blockchain.
3.Optional: You can achieve finer control over the exact trace by creating the IBM MQ classes for JMS
configuration file. For more information, see “Tracing IBM MQ classes for JMS applications” on page
426 and follow the advice that is provided by your IBM service support representative.
Related tasks
Running the IBM MQ Bridge to blockchain
“Collecting troubleshooting information for IBM Support” on page 302
When you open a case with IBM, you can include additional IBM MQ troubleshooting information
(MustGather data) that you have collected to help with investigating the problem. In addition to the
information described in this section, IBM Support might request further information on a case by case
basis.
Related reference
runmqbcb (run IBM MQ Bridge to Blockchain)
Tracing the IBM MQ Bridge to Salesforce
The trace facilities for the IBM MQ Bridge to Salesforce are provided to help IBM staff to diagnose
customer problems. Enable the trace for the IBM MQ Bridge to Salesforce and define the debug level
when you issue the runmqsfb command to start the bridge.
Before you begin
Note: The IBM MQ Bridge to Salesforce is deprecated across all releases from November 22 2022 (see US
Announcement letter 222-431).
IBM MQ troubleshooting and support 415
Procedure
1.Set the environment variable MQSFB_EXTRA_JAVA_OPTIONS to specify the -D Java option and turn on
the IBM MQ classes for JMS trace.
export MQSFB_EXTRA_JAVA_OPTIONS="-Dcom.ibm.msg.client.commonservices.trace.status=ON"
2.Set the debug level to verbose mode -d 2 when you issue the runmqsfb command at run time.
runmqsfb -f new_config.cfg -r logFile.log -d 2
Your logFile.log contains information that might be helpful in resolving your problem with the IBM