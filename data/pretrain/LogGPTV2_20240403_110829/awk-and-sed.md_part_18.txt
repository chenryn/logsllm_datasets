第一行匹配单独占据一行的“Owner and Operator Guide”（参阅示例后面有
嵌入的换行符，无论它在哪儿。
词而不是最后一个。
其中的星号表示空格或换行符是可选的。但这似乎是一项艰难的工作，实际上
改正则表达式来寻找单词之间的空格或换行符，如下所示：
如果“Owner 
记住，不一定要替换换行符，
出：
这个命令在“Installation Guide”之后重新插入换行符。匹配跟在“Guide”
后
面的空格也是有必要的，这样新行就不会以空格开始。现在，我们来显示输
Two manuals are provided including the Owner and 
Look in the Owner and Operator Guide shipped with your system.
available on your system.
Guide for a description of the tape drives 
Consult Section 3.1 in the Owner and Operator
s/0wner and Operator Guide */lnstallation Guide\
s/ *\n/ 
/0wner/ {
s/0wner and Operator Guide/lnstallation Guide/
s/0wner *\n*and *\n*0perator *\n*Guide/Installation Guide/
/Owner/ {
available on your system.
for a description of the tape drives 
Consult Section 3.1 in the Installation Guide
并且用空格取代嵌入的换行符。
andOperatorGuide”在不同的位置分成多该如何？你可以修
QQ群：
，我们可以将换行符读入模式空间，然后使用替换命令删除
50192241
如果匹配了字符串“Owner”
，但是如果不替换它将会生成一些很长的行。
。然后我们试着匹配整个模式并且执行
第六章高级 sed 命令
，则将下一行读入模
Guide",
---
## Page 121
删除嵌入的换行符，并且这个空行受到影响消失了（如果该行不为空，那么换
原因是这-行匹配“Owner”而且将下一行（空行）追加到模式空间。
在上面展示的输出中，跟在“shipped with your system.”后的空行丢失了。
非使用“$!N”语法：
它排除了对最后一行（$)执行Next 命令。
该是安全的：
出，甚至没有输出这一行）。为了修正这个问题，按如下方式使用Next 命令应
你看出其中有两个问题了吗？最明显的问题是最后一行不打印。最后一行匹配
在样本文件上运行上面的脚本会产生如下结果：
命
上
“Owner",并且当执行N时，没有另外的输入行被读取，所以 sed 退出（立刻退
然
后
配
在
令。然而，
后同样在样本文件上运行它来得到答案：
的模式。为什么第一个命令是必要的？我们可以通过从脚本中删除此命令，
在一行上找到模式的情况，
这个脚本中，有两个匹配模式的替换命令似乎是多余的。第一个替换命令匹
'waashs 4nor yeim paddius aping doteuado pue laumo aut u! yoom
$!N
Consult Section 3.1 in the Installation Guide
$ sed -f sedscr2 sample 
and the User Guide.
Two manuals are provided including the Installation Guide
shipped with your system.
available on your system.
for a description of the tape drives
The Installation Guide is shipped with your system.
and the User Guide.
Look in the Installation Guide shipped with your system.
available on your system.
for a description of the tape drives 
Consult Section 3.1 in the Installation Guide
$ sed -f sedscr sample 
Look in the Installation Guide
Two manuals are provided including the Installation Guide
The Owner and Operator Guide is shipped with your system.
Operator Guide and the User Guide.
如果单词“Owner”出现在最后一行，我们会遇到同样的问题，除
QQ群：
50192241
第二个替换命令匹配已有两行被读入模式空间之
- 121-
，我们避免了匹配“Owner”和应用N
，在以上的脚本中，通过匹配最后一行
第六章高级 sed 命令 
替换命令
---
## Page 122
模式空间的内容。更改命令改写模式空间以前的内容(后面有换行符的
式空间中。这里使用 Next 命令(N)而不是 next 命令（n),是因为我们不想输出
这个地址匹配具有段落标签的行，Next 命令将下一行（应该是空行）追加到模
分：
更改命令用段落宏取代模式空间的内容。下面是完成这些工作的脚本的一部
们将使用 Next 命令创建多行模式空间，
理，因为需要删除跟在代码后面的空行。有几种方式可以完成该功能，但是我
这个文件还包含一个位图图形，被打印成一系列1和0。为了将这个文件转换
Interleaf 文件中，
在这个例子中，
于FrameMaker.它们两个都在文件中放置编码标签，由尖括号括起来。
的脚本可以应用于将troff 编码的文件转换成 Interleaf 格式。这同样也适用
个都有能力读取和保存与普通二进制文件格式相对应的 ASCII编码格式的文档
FrameMaker 和Interleaf给出了WYSIWYG（所见即所得）技术发布包。它们两
转换Interleaf文件
这就是第一条指令尝试匹配所有出现在一行上的字符串的原因。
文件：
一行）。最好的解决方案就是当这个模式能在一行上匹配时避免读取下一行。
LP
Z
// {
These lines should print.
More lines of text to be found after the figure.
000000
00000000000000000000000000000000000000000000000000000000000000
v. 1111111111111111111111100000000000000000001111111111111000000
in a paragraph.
This is a test paragraph in Interleaf style ASCll. Another line 
，我们的转换证明了更改命令对多行模式空间的影响。在
QQ群：
“”标记一个段落。标签的前后是空行，请看样本
Yet another.
50192241
122
，它由“”和空行组成，
”代码，
第六章高级 sed 命令
然而，还要做一些处
，然后使用
---
## Page 123
在测式文件上运行这个脚本产生的结果为：
演示跨越多行模式空间的更改命令）。
“”标签后面的空行;但是你并不总是想删除所有的空行，并且我们想要
第三个指令只删除不必要的空行（注意，这个指令可以被认为是删除跟在
下面是完整的脚本：
图形所在的位置。注意，
写到文件fig.intetleaf 中。每次指令被匹配时,删除命令都将被执行，删除已
这个过程匹配“”和“”之间的行，
中。在它的位置上，
在这个转换脚本中，
 $ sed -f sed. interleaf test. interleaf
in a paragraph. Yet another.
This is a test paragraph in Interleaf style ASCll. Another line
.LP
/~ $/d 
\
//, //{
//{
.FE
\
 //, //{
3
FE
FG\
5
FG\
d
w fig. interleaf
N
//i\
w fig. interleaf 
p
QQ群：
我们插入标记文件中图形的图形宏。
，我们将提取位图图形数据，
后续的删除命令不会影响插入命令的文件输出，然
50192241
- 123 -
 并把它写到一个独立的文件
第六章高级 sed 命令
并且把它们
---
## Page 124
在测式文件上运行这个脚本会产生下列结果：
符
当遇到一个空行时，
使用了删除命令(d）：
查找一系列空行并输出单个空行的脚本，以看看它们之间的区别。下面的语句
脚本的顶端，
个嵌入的换行符的这部分内容。它不会导致读入新的输入行，
重新使用编辑方法。删除命令 (D)稍微有些不同：它删除模式空间中直到第一
删除命令 (d)删除模式空间的内容并导致读入新的输入行，从而在脚本的顶端
多行删除 
存。注意定位元字符~和$分别匹配模式空间的开始处和结束处。下面是测式文
This line is followed by 1 blank line.
$ sed -f sed.blank test.blank 
This is the end.
This line is followed by 4 blank lines.
This line is followed by 3 blank lines.
This line is followed by 1 blank line.
#将多个空行减少到一行，利用d命令的版本
These lines should print.
This line is followed by 2 blank lines.
More lines of text to be found after the figure.
，
5
FE
 $/{
\n$/d
 将这些指令应用于模式空间剩余的内容，
QQ群：
下一行就追加到模式空间中。
50192241
124
，然后试着匹配嵌入的换行
我们可以编写一个实现
第六章高级 sed 命令
相反，
它返回到
---
## Page 125
System"
如果发现“UNIX System”跨越两行，那么我们将它变成“UNIX Operating
环
Delet
多行打印 
跟有文本时，模式空间可以正常输出。
多行Delete 命令完成工作的原因是，当遇到两个空行时，Delete命令只删除
空，那么删除命令就不会被执行，
当有偶数个空行时，所有的空行都会被删除。
式
此
命
式
式
两
(是D不是d),就能得到我们想要的结果：
就
后返回到脚本的顶端将所有的命令应用于模式空间的第二行。没有这个循
比，当默认的输出被抑制或者脚本中的控制流更改，以至不能到达脚本的底部
令之后，模式空间的内容自动输出（-n选项或#n抑制这个默认的动作）。
行打印（Print）命令与小写字母的 print 命令稍有不同。该命令输出多行模
说，当模式空间中有两个空行时、只有第一个空行被删除。当一个空行后面
空间。如果那行不为空，
个空行中的第一个。下一次遍历该脚本时，这个空行将导致另一行被读入模
读入下一行，
留下来。这是因为删除命令清除的是整个模式空间。一旦遇到第一个空行，
空间
当执行脚本中的最后一个命令时，
间，但是
te 命令之前
需要使用打印命令（P或p）.Print 命令经常出现在Next 命令之后和
间的第一部分，
This is the end.
This line is followed by 4 blank lines.
This line is followed by 3 blank lines.
This line is followed by 2 blank lines.
This line is followed by 1 blank line.
$ sed -f sed.blank test.blank 
This is the end.
This line is followed by 4 blank lines.
This line is followed by 3 blank lines.
This line is followed by 2 blank lines.
。建立这个循环以返回到脚本的顶端，并寻找第二行结尾处的
是一次只输出一行。这个循环的目的是只输出模式空间的第一行，
前。这3个命令能建立一个输入/输出循环，用来维护两行的模
，并且两行都被删除。如果遇到第三个空行，并且下一行不为
QQ群：
直到第一个嵌入的换行符为止。在执行完脚本的最后一个
50192241
那么两行都输出，
，因此空行被输出。如果使用多行Delete 命令
，模式空间中的这两行都将被输出。创
。仅当有奇数个空行时，有一行被
因此确保了输出一个空行。换句
第六章高级 sed 命令
，因
---
## Page 126
是很重要的，否则模式空间中就有只一行。注意Print 和Delete 命令的顺序。
替换命令匹配“\nSystem”，
下面的脚本实现了同样的循环：
Next 命令将一个新的输入行追加到模式空间的当前行。在替换命令应用于多行
图 6-1：Next、Print 和 Delete 命令用于建立个输入/输出循环
用
的
除
模
“UNIX”
于一行。这些命令中有一个是Next 命令，
余。这意味着当前被输出并且新的行成为当前行。Delete 命令阻止脚本到达底
第二部分，
式空间之后，
这将输出两行并清除模式空间的内容。Delete 命令让我们保护了模式空间
s// Operating &/ 
/\nSystem/ I
/UNIX$/ 
并将控制转移动脚本的顶端，
，模式空间的第一部分被Print 命令输出，然后被Delete 命令删
QQ群：
1
，并且用“Operating\nSystem”取代它。保留换行
50192241
：
：
- 126 -
在顶端所有的编辑命令都可以被应
精
它将另一个新行读入模式空间。
囍
精
第六章
精
：
精
：
高级 sed 命令
罐
精
精
---
## Page 127
它在一行上也可以出现多次。下面是它的几种不同用法：
该字体更改命令可以嵌入到行中，
将文本设置成粗体的 Scribex 约定是：
到了困难，他遇到的问题很有趣，这与他要完成的任务无关。
由于字形改变，Lenny(我们的职员)在将 Scribe 文档转换成troff 宏包方面遇
学习案例
它们对应的小写字母命令。
还可以通过删除上面脚本中两个命令中的其中一个来进行实验，或者试试使用
如果你还不清楚P和D命令之间的关系，
模式空间，那么它就会丢失。
输入/输出循环让我们匹配在第二行结束处出现的UNIX。如果正常输出两行的
在测式文件上运行这个脚本会产生：
下面是测式文件：
$ cat test
@f1(put this in bold)
Another @f1 (one).
on another line). What if @f1(it is here) on the line?
Let’ s test having two on a line @f1(here) and @f1(there) as
font change commands @f1(on a set of lines).
Operating System.
System appears, it should be the UNIX
Here are examples of the UNlX Operating
$ sed -f sed.Print test.Print
well as one that begins on one line and ends @f1(somewhere
Operating System.
System appears, it should be the UNIX
System.
Here are examples of the UNIX
Is this really the case, or is it (maybe) just something else?
I want to see @f1(what will happen) if we put the 
Where UNIX 
QQ群：
50192241
并且可以从一行开始并在随后的一行结束。
- 127-