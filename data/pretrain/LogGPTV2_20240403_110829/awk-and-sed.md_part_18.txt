### 第六章 高级 sed 命令

#### 1. 处理“Owner and Operator Guide”字符串
在处理文档时，我们经常需要替换特定的字符串。例如，将单独占据一行的“Owner and Operator Guide”替换成“Installation Guide”。这里的关键在于如何处理换行符和空格。

- **示例文本**：
  ```
  Two manuals are provided including the Owner and 
  Operator Guide and the User Guide.
  Look in the Owner and Operator Guide shipped with your system.
  available on your system.
  Guide for a description of the tape drives 
  Consult Section 3.1 in the Owner and Operator
  ```

- **正则表达式匹配**：
  - 匹配单独占据一行的“Owner and Operator Guide”：
    ```sed
    s/^\(Owner and Operator Guide\)$/\1/
    ```
  - 匹配跨多行的“Owner and Operator Guide”：
    ```sed
    /Owner/ {
      s/Owner *\n*and *\n*Operator *\n*Guide/Installation Guide/
    }
    ```

- **脚本示例**：
  ```sed
  $ sed -f sedscr sample.txt
  Two manuals are provided including the Installation Guide
  The Installation Guide is shipped with your system.
  available on your system.
  for a description of the tape drives 
  Consult Section 3.1 in the Installation Guide
  ```

- **注意事项**：
  - 使用`$!N`避免在最后一行执行`N`命令。
  - 确保新行不会以空格开始。

#### 2. 删除嵌入的换行符
删除嵌入的换行符并保留必要的空行是常见的文本处理任务。以下是一个示例脚本：

- **示例文本**：
  ```
  These lines should print.
  More lines of text to be found after the figure.
  000000
  00000000000000000000000000000000000000000000000000000000000000
  v. 1111111111111111111111100000000000000000001111111111111000000
  in a paragraph.
  This is a test paragraph in Interleaf style ASCll. Another line 
  Yet another.
  ```

- **脚本示例**：
  ```sed
  # 将多个空行减少到一行
  /^$/{
    N
    /\n$/d
  }
  ```

- **运行结果**：
  ```sh
  $ sed -f sed.blank test.blank
  These lines should print.
  More lines of text to be found after the figure.
  000000
  00000000000000000000000000000000000000000000000000000000000000
  v. 1111111111111111111111100000000000000000001111111111111000000
  in a paragraph.
  This is a test paragraph in Interleaf style ASCll. Another line 
  Yet another.
  ```

#### 3. 多行模式空间操作
处理跨越多行的模式空间时，可以使用`N`、`P`和`D`命令来实现复杂的编辑任务。

- **示例文本**：
  ```
  Here are examples of the UNIX
  Operating System.
  Where UNIX 
  System appears, it should be the UNIX
  Operating System.
  ```

- **脚本示例**：
  ```sed
  /UNIX$/ {
    N
    s// Operating &/ 
    /\nSystem/ I
    P
    D
  }
  ```

- **运行结果**：
  ```sh
  $ sed -f sed.Print test.Print
  Here are examples of the UNIX
  Operating System.
  Where UNIX 
  Operating System.
  ```

通过这些示例，我们可以看到如何使用`sed`处理复杂的文本模式，包括替换字符串、删除嵌入的换行符以及处理多行模式空间。希望这些示例对你有所帮助！