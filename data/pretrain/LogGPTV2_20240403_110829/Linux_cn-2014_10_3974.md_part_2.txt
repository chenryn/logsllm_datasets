* 要扩展逻辑卷，我们不需要卸载文件系统
现在，让我们看看当前使用的改变大小后的逻辑卷。
```
# lvdisplay
```
![Resize Logical Volume](/data/attachment/album/201410/08/214646mpy1wfykpdg3133b.jpg)
*改变逻辑卷大小*
* LogVol01用于扩展的卷 /。
* 扩展后，从16.50GB上升到了34.50GB。
* C当前扩展，在扩展前有4226，我们已经添加了4607个扩展，因此现在有8833。
现在，如果我们检查可用的vg的话，空闲PE将会是0。
```
# vgdisplay
```
查看扩展的结果。
```
# pvs
# vgs
# lvs
```
![Verify Resize Partition](/data/attachment/album/201410/08/214648hkl5k0h2k0l9ks9k.jpg)
*验证分区大小改变*
* 添加的新物理卷。
* 卷组vg\_tecmint从17.51GB扩展到了35.50GB。
* 逻辑卷LogVol01从16.51GB扩展到了34.50GB。
这里，我们已经完成扩展卷组和逻辑卷的过程。让我们一起迈向逻辑卷管理中一些有趣的部分。
#### 缩减逻辑卷（LVM）
这里，我们将了解如何缩减逻辑卷。人人都说它很危险，在缩减lvm的时候可能会导致灾难。缩减lvm在逻辑卷管理中比其它部分要来得确实有趣得多。
* 在开始之前，备份好数据总是对的，这样如果出错，就不会头痛了。
* 要缩减逻辑卷，需要小心翼翼地完成5个步骤。
* 在扩展一个卷的时候，我们可以在该卷挂载时扩展它（在线），但对于缩减，我们必须在缩减前卸载文件系统。
让我们来了解一下下面这5个步骤。
* 卸载文件系统以便缩减。
* 在卸载后检查文件系统。
* 缩减文件系统。
* 5减少当前逻辑卷大小。
* 再检查文件系统以防出错。
* 将文件系统再次挂载回去。
为了演示，我已经创建了独立的卷组和逻辑卷。这里，我将缩减逻辑卷**tecmint*reduce*test**。现在它有18GB大小，我们需要将它缩减到**10GB**而不丢失数据。也就是说，我们需要从**18GB**中减少**8GB**。卷中已经有**4GB**被使用。
```
18GB ---> 10GB
```
在缩减大小的时候，我们只需要缩减8GB，所以在缩减后它总计会有10GB。
```
# lvs
```
![Reduce Logical Volume](/data/attachment/album/201410/08/214649u9gs0qq0dnguuu93.jpg)
 *缩减逻辑卷*
这里，我们可以看到文件系统信息。
```
# df -h
```
![Check File System Size](/data/attachment/album/201410/08/214651hybr3x3zvbqworwr.jpg)
*检查文件系统大小*
* 卷大小是18GB。
* 它已经使用了3.9GB。
* 可用空间是13GB。
首先，卸载挂载点。
```
# umount -v /mnt/tecmint_reduce_test/
```
![Unmount Parition](/data/attachment/album/201410/08/214652ap100j00496cugzp.jpg)
*卸载分区*
然后，使用以下命令来检查文件系统错误。
```
# e2fsck -ff /dev/vg_tecmint_extra/tecmint_reduce_test
```
![Scan Parition for Errors](/data/attachment/album/201410/08/214654yly6fc6qq66lzl14.jpg)
*扫描分区错误*
**注意**：必须通过所有文件系统检查的5个步骤，若未完全通过，则你的文件系统可能存在问题。
接下来，缩减文件系统。
```
# resize2fs /dev/vg_tecmint_extra/tecmint_reduce_test 8GB
```
![Reduce File System](/data/attachment/album/201410/08/214656mninglxd96nn864l.jpg)
*缩减文件系统*
使用GB来缩减逻辑卷。
```
# lvreduce -L -8G /dev/vg_tecmint_extra/tecmint_reduce_test
```
![Reduce Logical Partition](/data/attachment/album/201410/08/214657nhp2dkjdj8jhkdud.jpg)
*缩减逻辑分区*
要使用PE来缩减逻辑卷，我们需要知道默认PE大小和卷组的总PE大小，以进行一次小小的计算来得出准确的缩减大小。
```
# lvdisplay vg_tecmint_extra
```
这里，我们需要使用bc命令来做一些小计算来获得10GB的PE大小。
```
1024MB x 10GB = 10240MB or 10GB
10240MB / 4PE = 2048PE
```
按**CTRL+D**来退出BC。
![Calculate PE Size](/data/attachment/album/201410/08/214659jftbisvbc5srrztr.jpg)
*计算PE大小*
使用PE来缩减大小。
```
# lvreduce -l -2048 /dev/vg_tecmint_extra/tecmint_reduce_test
```
![Reduce Size Using PE](/data/attachment/album/201410/08/214701dlerl805qehj2ai2.jpg)
 *使用PE来缩减大小*
将文件系统大小调整回去。在这一步中，如果发生任何错误，这就意味着我们已经将文件系统搞乱了。
```
# resize2fs /dev/vg_tecmint_extra/tecmint_reduce_test
```
![Resize File System](/data/attachment/album/201410/08/214702gqtzf87vr0tf3qf7.jpg)
将文件系统挂载回同样的挂载点。
```
# mount /dev/vg_tecmint_extra/tecmint_reduce_test /mnt/tecmint_reduce_test/
```
![Mount File System](/data/attachment/album/201410/08/214704wipsf3bne4ee9s63.jpg)
*挂载文件系统*
检查分区和文件的大小。
```
# lvdisplay vg_tecmint_extra
```
这里，我们可以看到最后的结果，逻辑已经被缩减到10GB。
![Verify Logical Volume Size](/data/attachment/album/201410/08/214706qwi5yptoh9b57osr.jpg)
在本文中，我们已经了解了如何来扩增卷组、逻辑卷以及缩减逻辑卷。在下一部分（第三部分）中，我们将了解如何为逻辑卷做快照并将它恢复到更早的状态。
---
via: 
作者：[Babin Lonston](http://www.tecmint.com/author/babinlonston/) 译者：[GOLinux](https://github.com/GOLinux) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创翻译，[Linux中国](http://linux.cn/) 荣誉推出