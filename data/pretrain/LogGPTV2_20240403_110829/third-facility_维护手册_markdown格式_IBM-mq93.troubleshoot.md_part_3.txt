indicates that no operations of that type can occur. The values might have changed, or the queue might
have been open but is now closed.
Check the status at the time you expect to put or get a message.
If you are unable to solve the problem, contact IBM Support for help.
6.Does the problem affect only remote queues?
If the problem affects only remote queues, perform the following checks:
• Check that required channels have started, can be triggered, and any required initiators are running.
• Check that the programs that should be putting messages to the remote queues have not reported
problems.
• If you use triggering to start the distributed queuing process, check that the transmission queue has
triggering set on. Also, check that the trigger monitor is running.
• Check the error logs for messages indicating channel errors or problems.
• If necessary, start the channel manually.
7.Is your application or system running slowly?
If your application is running slowly, it might be in a loop, or waiting for a resource that is not available,
or there might be a performance problem.
Perhaps your system is operating near the limits of its capacity. This type of problem is probably worst
at peak system load times, typically at mid-morning and mid-afternoon. (If your network extends
across more than one time zone, peak system load might seem to occur at some other time.)
A performance problem might be caused by a limitation of your hardware.
If you find that performance degradation is not dependent on system loading, but happens sometimes
when the system is lightly loaded, a poorly-designed application program is probably to blame. This
could appear to be a problem that only occurs when certain queues are accessed.
A common cause of slow application performance, or the build up of messages on a queue (usually a
transmission queue) is one or more applications that write persistent messages outside a unit of work.
For more information, see Message persistence.
IBM MQ troubleshooting and support 15
If the performance issue persists, the problem might lie with IBM MQ itself. If you suspect this, contact
IBM Support for help.
Related concepts
“Additional checks for resource problems on AIX” on page 16
How you determine and resolve problems connected to IBM MQ resources, including resource usage
by IBM MQ processes, determining and resolving problems related to insufficient resources, and your
resource limit configurations.
Related tasks
“Contacting IBM Support” on page 301
If you need help with a problem that you are having with IBM MQ, you can contact IBM Support through
the IBM Support Site. You can also subscribe to notifications about IBM MQ fixes, troubleshooting, and
other news.
“Identifying characteristics of the problem on AIX” on page 9
Some initial questions to consider to help with identifying the cause of the problem.
Related reference
Messages and reason codes
Additional checks for resource problems on AIX
How you determine and resolve problems connected to IBM MQ resources, including resource usage
by IBM MQ processes, determining and resolving problems related to insufficient resources, and your
resource limit configurations.
Useful commands and the configuration file for investigating resource issues
Useful commands that display current values on your system or make a temporary change to the system:
ulimit -a
Display user limits
ulimit -Ha
Display user hard limits
ulimit -Sa
Display user soft limits
ulimit - 
Where paramflag is the flag for the resource name, for example, s for stack.
To make permanent changes to the resource limits on your system use /etc/security/limits.conf
or /etc/security/limits.
Basic checks before tuning IBM MQ or kernel parameters
You need to investigate the following:
• Whether the number of active connections is within the expected limit.
For example, suppose that your system is tuned to allow 2000 connections when the number of user
processes is no greater than 3000. If the number of connections increases to more than 2000, then
either the number of user processes has increased to more than 3000 (because new applications have
been added), or there is a connection leak.
To check for these problems use the following commands:
– Number of IBM MQ processes:
ps -elf|egrep "amq|run"|wc -l
– Number of connections:
16 Troubleshooting and Support for IBM MQ
echo "dis conn(*) all" | runmqsc |grep EXTCONN|wc -l
– Shared memory usage:
ipcs -ma
• If the number of connections is higher than the expected limit, check the source of the connections.
• If the shared memory usage is very high, check the following number of:
– Topics
– Open queue handles
• From an IBM MQ perspective, the following resources need to be checked and tuned:
– Data segment
– Stack segment
– File size
– Open file handles
– Shared memory limits
– Thread limits
• Use the mqconfig command to check the current resource usage.
Notes:
1.Some of resources listed in the preceding text need to be tuned at user level and some at the operating
system level.
2.The preceding list is not a complete list, but is sufficient for most common resource issues reported by
IBM MQ.
3. Tuning is required at thread level, as each thread is a light weight process (LWP).
Problem in creating threads or processes from IBM MQ or an application
Failure in xcsExecProgram and xcsCreateThread
Probe IDs, error messages, and components
XY348010 from xtmStartTimerThread from an IBM MQ process (for example amqzlaa0) or an
application
XC037008 from xcsExecProgram with error code xecP_E_PROC_LIMIT from amqzxma0
XC035040 xcsCreateThread
XC037007 from xcsExecProgram with xecP_E_NO_RESOURCE
xcsCreateThread fails with xecP_E_NO_RESOURCE followed by failure data capture, for example
ZL000066 from zlaMain
Probe IDs might be different. Check for the error codes xecP_E_PROC_LIMIT and
xecP_E_NO_RESOURCE.
Error messages reporting errno 11 from pthead_create, for example: AMQ6119S: An internal
IBM MQ error has occurred ('11 - Resource temporarily unavailable' from
pthread_create.)
Resolving the problem on AIX
IBM MQ sets the error code xecP_E_PROC_LIMIT when pthread_create or fork fails with EAGAIN.
EAGAIN
Review and increase the max user processes and stack size user process resource limits.
ENOMEM
IBM MQ sets the error code xecP_E_NO_RESOURCE when pthread_create or fork fails with
ENOMEM.
IBM MQ troubleshooting and support 17
Check and increase the stack size and data resource limits.
Notes:
• You can increase the user process resource limits by using the ulimit command, or by
changing the resource limit configuration file.
• The changes using the ulimit command are temporary. Modify /etc/security/limits
or /etc/security/limits.conf to make the changes permanent. You must check the actual
configuration on your operating system, as the configuration might be different.
• You should also review your OS manuals (for example, the man page for pthread_create) for
more details on resource issues and tuning resource limits, and ensure that the resource limits
are appropriately configured.
• You should also check if the system is running short of resources, both memory and CPU.
Problems in creating shared memory
Error : shmget fails with error number 28(ENOSPC)
| Probe Id :- XY132002 |
| Component :- xstCreateExtent |
| ProjectID :- 0 |
| Probe Description :- AMQ6119: An internal IBM MQ error has occurred |
| (Failed to get memory segment: shmget(0x00000000, 2547712) [rc=-1 |
| errno=28] No space left on device) |
| FDCSequenceNumber :- 0 |
| Arith1 :- 18446744073709551615 (0xffffffffffffffff) |
| Arith2 :- 28 (0x1c) |
| Comment1 :- Failed to get memory segment: shmget(0x00000000, |
| 2547712) [rc=-1 errno=28] No space left on device |
| Comment2 :- No space left on device |
+-----------------------------------------------------------------------------+
MQM Function Stack
ExecCtrlrMain?
xcsAllocateMemBlock
xstExtendSet
xstCreateExtent
xcsFFST
shmget fails with error number 22(EINVAL)
| Operating System :- SunOS 5.10 |
| Probe Id :- XY132002 |
| Application Name :- MQM |
| Component :- xstCreateExtent |
| Program Name :- amqzxma0 |
| Major Errorcode :- xecP_E_NO_RESOURCE |
| Probe Description :- AMQ6024: Insufficient resources are available to |
| complete a system request. |
| FDCSequenceNumber :- 0 |
| Arith1 :- 18446744073709551615 (0xffffffffffffffff) |
| Arith2 :- 22 (0x16) |
| Comment1 :- Failed to get memory segment: shmget(0x00000000, |
| 9904128) [rc=-1 errno=22] Invalid argument |
| Comment2 :- Invalid argument |
| Comment3 :- Configure kernel (for example, shmmax) to allow a |
| shared memory segment of at least 9904128
bytes |
+-----------------------------------------------------------------------------+
MQM Function Stack
ExecCtrlrMain
zxcCreateECResources
zutCreateConfig
xcsInitialize
xcsCreateSharedSubpool
xcsCreateSharedMemSet
xstCreateExtent
xcsFFST
Unexpected process termination and queue manager crash, or queue manager crash
18 Troubleshooting and Support for IBM MQ
Process ending unexpectedly followed by FDCs from amqzxma0
Example FDC:
Date/Time :- Mon May 02 2016 01:00:58 CEST
Host Name :- test.ibm.com
LVLS :- 8.0.0.4
Product Long Name :- IBM MQ for Linux (x86-64 platform)
Probe Id :- XC723010
Component :- xprChildTermHandler
Build Date :- Oct 17 2015
Build Level :- p800-004-151017
Program Name :- amqzxma0
Addressing mode :- 64-bit
Major Errorcode :- xecP_E_USER_TERM
Minor Errorcode :- OK
Probe Description :- AMQ6125: An internal IBM MQ error has occurred.
Possible Causes and Solutions
• Check if the user has ended any process.
• Check if the IBM MQ process ended because of a memory exception:
– Did the process end with an FDC of Component :- xehExceptionHandler?
– Apply the fix for known issues corrected in this area.
• Check if the operating system ended the process because of high memory usage by the process:
– Has the IBM MQ process consumed lot of memory?
– Has the operating system ended the process?
Review the operating system log. For example, the OOM-killer on Linux:
Jan 2 01:00:57 ibmtest kernel:
amqrmppa invoked oom-killer: gfp_mask=0x201da, order=0, oom_score_adj=0)
– Apply the fix for known memory leak issues.
Difference in user limits used by a process against the configured limits
The user limits used by the process might be different from the configured limits. This is likely to happen
if the process is started by a different user, or by user scripts, or a high availability script for example. It is
important that you to check the user who is starting the queue manager, and set the appropriate resource
limits for this user.
Related tasks
“Identifying characteristics of the problem on AIX” on page 9
Some initial questions to consider to help with identifying the cause of the problem.
“Determining problems with applications, commands and messages on AIX” on page 12
If you encounter problems with IBM MQ applications, commands, and messages, there are a number of
questions that you can consider to help you to determine the cause of the problem.
“Contacting IBM Support” on page 301
IBM MQ troubleshooting and support 19
If you need help with a problem that you are having with IBM MQ, you can contact IBM Support through
the IBM Support Site. You can also subscribe to notifications about IBM MQ fixes, troubleshooting, and
other news.
Making initial checks on IBM i
Before you start problem determination in detail on IBM i, consider whether there is an obvious cause of
the problem, or an area of investigation that is likely to give useful results. This approach to diagnosis can
often save a lot of work by highlighting a simple error, or by narrowing down the range of possibilities.
About this task
The cause of your problem could be in any of the following:
• Hardware
• Operating system
• Related software, for example, a language compiler
• The network
• The IBM MQ product
• Your IBM MQ application
• Other applications
• Site operating procedures
Some preliminary questions for you to consider are listed in the following procedure. If you are able to
find the cause of the problem by working through these preliminary checks, you can then, if needed,
use the information in other sections of the IBM MQ product documentation, and in the libraries of other
licensed programs, to help you resolve the problem.
If you are not able to identify the cause of the problem by carrying out the preliminary checks, and so
need to carry out a more detailed investigation there are further questions for you to consider in the
subtopics. As you work through the lists of questions, make a note of anything that might be relevant to
the problem. Even if your observations do not suggest a cause straight away, they might be useful later if
you have to carry out a systematic problem determination exercise.
When you open a case with IBM, you can include additional IBM MQ troubleshooting information
(MustGather data) that you have collected to help with investigating the problem. For more information,
see “Collecting troubleshooting information for IBM Support” on page 302.
Procedure
• Consider the following questions.
The following steps are intended to help you isolate the problem and are taken from the viewpoint of
an IBM MQ application. Check all the suggestions at each stage.
1.Has IBM MQ for IBM i run successfully before?
Yes
Proceed to Step “2” on page 20.
No
It is likely that you have not installed or set up IBM MQ correctly. For more information, see IBM
MQ installation overview and Installing and uninstalling IBM MQ on IBM i. For information on
running the verification procedure, see Verifying an IBM MQ installation on IBM i.
2.Has the IBM MQ application run successfully before?
Yes
Proceed to Step “3” on page 21.
20 Troubleshooting and Support for IBM MQ
No
Consider whether the application might have failed to compile or link, and fails if you attempt
to invoke it. Check the output from the compiler or linker. Refer to the appropriate programming
language reference information, or see Developing applications for information about how to
build your application.
Also consider the logic of the application. For example, do the symptoms of the problem
indicate that a function is failing and, therefore, that a piece of code is in error. Check the
following common programming errors:
– Assuming that queues can be shared, when they are in fact exclusive.
– Trying to access queues and data without the correct security authorization.
– Passing incorrect parameters in an MQI call; if the wrong number of parameters is passed, no
attempt can be made to complete the completion code and reason code fields, and the task
is ended abnormally.
– Failing to check return codes from MQI requests.
– Using incorrect addresses.
– Passing variables with incorrect lengths specified.
– Passing parameters in the wrong order.
– Failing to initialize MsgId and CorrelId correctly.
3.Has the IBM MQ application changed since the last successful run?
Yes
It is likely that the error lies in the new or modified part of the application. Check all the
changes and see if you can find an obvious reason for the problem.
a.Have all the functions of the application been fully exercised before? Could it be that the
problem occurred when part of the application that had never been invoked before was used
for the first time? If so, it is likely that the error lies in that part of the application. Try to find
out what the application was doing when it failed, and check the source code in that part of
the program for errors.
b.If the program has run successfully before, check the current queue status and files that
were being processed when the error occurred. It is possible that they contain some unusual
data value that causes a rarely used path in the program to be invoked.