# Nicholas J. Percoco and Jibran Ilyas, Trustwave’s SpiderLabs

## Agenda
- **About Us**
- **How Did We Get the Malware?**
- **Analysis Outline**
- **Sample A: Casino Club in Las Vegas**
- **Sample B: Hotel in New York**
- **Sample C: Video Poker in Lake Tahoe**
- **Sample D: Restaurant in Michigan**
- **Conclusions**
- **Tools We Like**
- **Contacts**

## About Us
- **Nicholas J. Percoco**: Head of SpiderLabs at Trustwave (14 years)
- **Jibran Ilyas**: Senior Forensic Analyst at Trustwave (5 years)

**SpiderLabs** is Trustwave's advanced security team, specializing in:
- Incident response
- Penetration testing
- Application security testing

With a track record of handling hundreds of security incidents, performing thousands of penetration tests, and securing hundreds of business applications for Fortune 500 organizations, SpiderLabs is a trusted leader in the field.

## How Did We Get the Malware?
In 2008, we visited 150 compromised environments, witnessing a significant rise in malware-based attacks. Our acquisition methods included on-site visits, live analysis, memory dumps, and disk imaging. The samples were then analyzed in our laboratories in Chicago and London.

This presentation will walk through some of the most interesting malware samples in our collection, ranging from simple to complex.

## Analysis Outline
Each case will be presented as follows:
- **Architecture and Problems**: Overview of the target environment
- **Tools Found**: Artifacts left by attackers
- **Installation Vector**: How the malware was introduced
- **Static/Dynamic Analysis**: In-depth examination of the malware
- **Data Exfiltration/Propagation**: Impact and spread of the malware
- **Live Demo**: Real-time demonstration in a virtual environment

### Sample A: Casino Club in Las Vegas
#### Architecture
- **Firewall**: Allows RDP (Port 3389)
- **Back of House Server**: No egress filtering
- **POS Terminals**: No Internet access permitted

#### Problems
- **Remote Desktop Access**: Allowed from the internet to the POS server
- **Weak Passwords**: Common and easily guessable (e.g., "Beauty of life lies in simplicity")
- **Outdated Antivirus**: Not updated since the last POS software upgrade (8 months)
- **Data Retention**: Customer data from previous system owners not wiped
- **Flat Network**: Lacked physical network security controls

#### Tools Found
| Name | Size | MD5 Hash | Description |
|------|------|----------|-------------|
| XXX[1].EXE | 680KB | 7c0444811ef6a9ad8551215707cecfa9 | Unprotected SFX archive containing Keylogger and Putty |
| PUTTY.EXE | 444KB | 9BB6826905965C13BE1C84CC0FF83F42 | Putty (SSH Client) |
| XXX.EXE | 424KB | 994FFAE187F4E567C6EFEE378AF66AD0 | Main Keylogger executable |
| A0045175.exe | 1,969KB | cd6d403474e7c94a7ea81ce652d8ccf8 | SMTP Server (original name 1st.exe) |

#### Installation Vector
- **Entry Point**: Remote Desktop from an IP in the United States (216.15.X.X), targeting the "posuser" account
- **Download**: Unprotected SFX archive from an FTP site (drugzseller.xxxxx.com) containing a keylogger and Putty
- **SMTP Server**: Purchased and installed on the Club POS server to serve as an outbound proxy
- **VNC**: Used to install the keylogger on POS terminals

#### Dynamic Analysis
- **Keylogger Installation**: Installed in `C:\Program Files\outlook` and other possible locations
- **Hiding Techniques**: Hidden from task manager, start menu, and system tray; unlocked with a keyboard combination
- **Data Collection**: Logs keystrokes and takes screenshots, storing data in a BPK.dat file
- **Exfiltration**: Data sent via the SMTP server to PI:EMAIL

#### Propagation
- **VNC**: Used to install the keylogger on POS terminals, configured to capture keystrokes from specific processes
- **Data Transmission**: Sent via the SMTP server on the Club POS server due to no internet access on POS terminals

#### Live Demo
- **XXX.EXE**: Demonstration in a VM environment

#### Additional Comments
- **Common Attack Vector**: Used in hundreds of bars and restaurants
- **Detection Challenges**: Often undetected due to lack of regular IT monitoring and hidden nature
- **Persistence**: Survived multiple upgrades and audits

### Sample B: Hotel in New York
#### Architecture
- **Payment Processor**
- **Corporate Router**
- **Restaurant POS, Bar POS, Gift Shop POS, Central Processing Server**

#### Problems
- **Consumer Router Firewall**: Allowed RDP inbound to many systems
- **Unpatched Systems**: Windows systems not patched since installation (2004 & 2006)
- **Weak Credentials**: Many blank or common passwords (e.g., "nimda" for Administrator)
- **No Security Software**: No antivirus or anti-malware on any systems
- **Flat Network**: No segmentation for systems or networks

#### Tools Found
| Name | Size | MD5 Hash | Description |
|------|------|----------|-------------|
| FAR.EXE | 573K | ee7d411f47b13fb204a188fc37e7fc61 | Productivity tools including find/replace, HTML Help, FTP, File and ZIP functions |
| ENT.EXE | 350K | defd991b647811e8e8e5591365e3be41 | Network scanning, security, and admin tools |
| GET2.EXE | 48K | 73ba6f159e752705ed2cde6953769a9b | Windows Authentication information exfiltrator |
| SL.EXE | 20K | 3a97d9b6f17754dcd38ca7fc89caab04 | ScanLine 1.01 tool |
| SERVER.EXE | 868K | e02d4cc6ec3b7907b35d9456ab092da3 | Obfuscated version of REDIR.EXE, a proxy application |
| SVCHOST.EXE | 596K | ee23d3c0de12c1644f0ed8abc818aca1 | File transfer, anti-debugging |
| WINMGMT.EXE | 65K | 3e19ef9c9a217d242787a896cc4a5b03 | Memory dumper and track data parser loader |
| CSRSVC.EXE | 74K | 1f9d0d200321ad6577554cc1d0bb6b69 | Customized memory dumper |
| DNSMGR.EXE | 1,135K | bf27e87187c045e402731cdaa8a62861 | Track data parser |

#### Installation Vector
- **Initial Entry**: Via Remote Desktop
- **Targeted Accounts**: Administrator (pwd = nimda), Backup (pwd = veritas), SQLDebugger (pwd = user01)
- **Toolkit Download**: Protected SFX archive
- **Deployment**: Malware extracted and deployed via Microsoft’s `psexec.exe` to other systems

#### Static Analysis
- **SVCHOST.EXE**: Runs as a Windows service, establishes SSL connection to a remote server in South Korea, includes anti-debugging features
- **Decrypted Strings**: Contains a memo from the author about the development and intent of the program
- **WINMGMT.EXE**: Utilizes Windows Service Control Management, references Winsock API, and includes FTP commands and regular expressions for track data

#### Dynamic Analysis
- **WINMGMT.EXE**: Executes with `/install`, runs in debug mode, locates and monitors specific POS system processes

---

For further details and additional samples, please refer to the full presentation.