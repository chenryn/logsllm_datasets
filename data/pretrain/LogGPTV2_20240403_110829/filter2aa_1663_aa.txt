Nicholas J. Percoco 
Jibran Ilyas 
Trustwave’s SpiderLabs 
Agenda 
•  About Us 
•  How did we get the malware? 
•  Analysis Outline 
•  Sample A – Casino Club in Las Vegas 
•  Sample B –  Hotel in New York 
•  Sample C – Video Poker in Lake Tahoe 
•  Sample D – Restaurant in Michigan 
•  Conclusions 
•  Tools We Like 
•  Contacts 
About Us 
Nicholas J. Percoco, Head of SpiderLabs @ Trustwave - 14 Yrs 
Jibran Ilyas, Senior Forensic Analyst @ Trustwave - 5 Yrs 
SpiderLabs is the advance security team at Trustwave responsible 
for incident response, penetration testing and 
application security tests for Trustwave’s clients. 
SpiderLabs has responded to hundreds of security incidents, 
performed thousands of penetration tests and security tested 
hundreds of business applications for Fortune 500 
organizations.  
How did we get the Malware?  
In 2008, we visited 150 different environments that were 
compromised via a number of different methods. Specifically, we saw a 
huge increase in Malware (targeted or mainstream) based attacks. 
The basic method of acquisition was visit the location, live analysis, 
memory dumps, and disk imaging. 
After we had a copy of the sample, it was taken back to SpiderLabs for 
further analysis. SpiderLabs has two physical laboratories - Chicago 
and London.  
The contents of this talk is a walk through of what found to be some 
of more interesting samples we have in our collection going from 
simple and common to rare and complex. 
Analysis Outline 
During this presentation we are going to present each case in the  
following way:  
•  Architecture and Problems 
–   What did the Target Environment look like? 
•   Tools Found 
–  What did the attackers leave behind? 
•   Installation Vector 
–   How did it end up in the Target Environment?  
•   Static Analysis / Dynamic Analysis 
–  A deeper look at the Malware with and without executing it.  
•   Data Exfiltration / Propagation 
–  What damage did it do?  
•  Live Demo 
–  The malware in action - live in a VM environment.  
Sample A: 
Casino Club in Las Vegas 
Firewall  
(Allowing RDP 
– Port 3389) 
Back of House 
Server 
(No Egress filtering) 
Sample  A - Architecture 
POS Terminals  
(No Internet Access 
Permitted) 
Sample  A – Problems 
• 
Remote Desktop allowed from Internet to Club POS Server 
• 
 Weak / Common passwords 
– 
 E.g.  :  
 :  
– 
Beauty of life lies in simplicity  
• 
Antivirus had not been updated since last POS software upgrade 
i.e. 8 months 
• 
 Customer data carried from two previous owners of the systems.  
– 
 Data was not wiped between owners!!!! 
• 
Casino’s network was very flat and lacked “physical”  
network security controls.  
Sample  A – Tools Found 
Name 
Size 
MD5 Hash 
Description 
XXX[1].EXE 
680KB 
7c0444811ef6a9ad8551215707cecfa9 
Unprotected SFX archive containing Keylogger and Putty 
PUTTY.EXE 
444KB 
9BB6826905965C13BE1C84CC0FF83F42 
Putty (SSH Client) 
XXX.EXE 
424KB 
994FFAE187F4E567C6EFEE378AF66AD0 
Main Keylogger executable 
A0045175.exe 
1,969KB 
cd6d403474e7c94a7ea81ce652d8ccf8 
SMTP Server (original name 1st.exe) 
Sample  A – Installation Vector 
• 
Entry via Remote Desktop from IP in United States (216.15.X.X) 
– 
Targeted account was “posuser” 
• 
Downloaded an unprotected SFX archive from FTP site in United 
States (drugzseller.xxxxx.com) 
• 
 SFX Archive had Keylogger and Putty executable 
• 
Purchased and Installed SMTP Server on Club POS server 
– 
Remember POS Terminals not allowed to access the Internet, thus Club 
POS server used as the outbound SMTP proxy 
• 
 Used VNC to get to POS Terminals and install Keylogger 
Sample A – Installation Vector 
Attacker’s server with tools 
Sample A – Installation Vector 
Attacker buying SMTP serverwhile on Club POS Server 
Sample A – Dynamic Analysis 
XXX.EXE 
• 
 Installed in C:\Program Files\outlook folder of the system 
－ 
 Other possible locations include: 
• 
 C:\Windows\Security 
• 
 C:\Windows\System32 
• 
 C:\Program Files\BPK 
• 
Uses Keylogger’s properties to hide from task manager, start menu and system 
tray ; uses a keyboard combination to unlock 
• 
Creates a BPK.dat file which can be opened only by Keylogger’s log viewer;  
contains full credit card track data 
• 
Keylogger also takes screenshots of system at regular intervals;  
doesn’t spare attacker activity either 
Sample  A – Dynamic Analysis 
XXX.EXE 
Sample  A – Data Exfiltration 
 Data was collected in BPK.DAT file 
 Data was exported via SMTP server to PI:EMAIL 
Sample  A – Data Exfiltration 
Sample  A – Propagation 
• 
The attacker used VNC to get to the POS Terminals 
－ 
Installed the Keylogger and configured settings to only capture keystrokes from a 
single process  
－ 
Process was for POS credit card transactions 
• 
Since there was no Internet Access allowed on POS Terminals, the data was sent via 
SMTP server installed on Club POS Server 
Sample A – Live Demo 
XXX.EXE 
Sample A – Add’l Comments 
• 
This attack vector was used for hundreds of bars/restaurants  
• 
Commonality was the accessibility of remote access programs and 
weak passwords 
• 
These are not usually detected because there are no IT 
personal regularly monitoring the systems or alerts miss 
• 
The Keylogger survived several upgrades and system audits as 
it was hidden from task manager, system tray and start menu 
• 
Also, the dat file was readable only by the Keylogger program 
• 
Keyloggers are good; too good for even the attackers  
Sample B: 
Hotel in New York 
Payment  
Processor 
Sample B – Architecture 
Corporate 
Router 
Restaurant POS 
Bar POS 
Gift Shop POS 
Central Processing Server 
Sample B – Problems 
• 
The firewall was a consumer router – allowed RDP inbound to 
many systems.  
• 
Hotel Management System and POS Terminals running 
Windows that had not been patched since their installation 
(2004 & 2006).  
• 
Weak username and passwords (many BLANK) for local 
system and domain accounts including Administrator 
(password:nimda) 
• 
No Anti-Virus or Anti-Malware on ANY of the systems in the 
environment. 
• 
No network segmentation for any of the systems or networks 
in the hotel. 
Sample B – Tools Found 
Name 
Size 
MD5 Hash 
Description 
FAR.EXE 
573K 
ee7d411f47b13fb204a188fc37e7fc61  FAR is a collection of productivity tools combining advanced 
find/replace, HTML Help 1.x & MS Help 2.x authoring, FTP, 
File and ZIP functions in a single interface.  
ENT.EXE 
350K 
defd991b647811e8e8e5591365e3be41  ENT is a set of network scanning, security and admin tools 
useful in diagnosing networks and monitoring network 
connections.  
GET2.EXE 
48K 
73ba6f159e752705ed2cde6953769a9b  GET2 Penetrator Version 1.9.9d - Windows Authentication 
information exfiltrator 
SL.EXE 
20K 
3a97d9b6f17754dcd38ca7fc89caab04  Yep, Foundstone’s ScanLine 1.01 tool.  
SERVER.EXE 
868K 
e02d4cc6ec3b7907b35d9456ab092da3  This is obfuscated version of an application called 
REDIR.EXE, a proxy application used to redirect incoming 
connections.  
SVCHOST.EXE 
596K 
ee23d3c0de12c1644f0ed8abc818aca1  File transfer, anti-debugging 
WINMGMT.EXE 65K 
3e19ef9c9a217d242787a896cc4a5b03  Memory Dumper and Track Data Parser loader 
CSRSVC.EXE 
74K 
1f9d0d200321ad6577554cc1d0bb6b69  Customized Memory Dumper 
DNSMGR.EXE 
1,135K 
bf27e87187c045e402731cdaa8a62861  Track Data Parser 
Sample B – Installation Vector 
• 
Initial entry via Remote Desktop 
• 
Targeted accounts were Administrator (pwd =nimda) , 
Backup (pwd = veritas), SQLDebugger (pwd = user01) 
• 
Download of Attacker toolkit (protected SFX archive) 
• 
Malware was extracted on target computer and remote 
deployment via Microsoft’s “psexec.exe” to other systems 
on local and corporate network.  
SVCHOST.EXE 
• 
Runs as a Windows Service 
• 
Used to establish connection to remote server in  
South Korea over SSL 
• 
Anti-Debugging Built In: 
• 
When run from Explorer it tries to… 
1. 
Lock the Workstation 
2. 
Perform a System Shutdown 
3. 
Terminate All Processes 
4. 
Close All Terminal Sessions 
5. 
Toss the Workstation in Standby Mode 
• 
It checks to see if the Windows Service is running in a virtual environment  
such as VMWare, Virtual PC, Qemu, VirtualBox. 
• 
If so, it executes the above shutdown / system kill processes 
• 
All strings in the binary are encrypted 
Sample B – Static Analysis 
Sample B – Static Analysis 
SVCHOST.EXE 
 Decrypted Strings also contain a Memo from the author… 
“A few years ago I began to teach myself 
about computer science at my residence. I 
was initially interested in networking and 
security, so I developed this program. I do 
not currently know what I intend to do 
with this, but I have accepted the fact 
that I must do some limited 
experiments.”  
Sample B – Static Analysis 
WINMGMT.EXE 
• 
Normal Windows Binary; Not Obfuscated. 
• 
Strings Analysis show: 
－ 
The malware utilizes Windows Service Control Management 
• 
 References to Winsock API 
• 
 FTP Commands (USER, PASS, TYPE I, 331, 230, etc.) 
• 
 Regular Expressions for Track 1 and Track 2 data: 
((b|B)[0‐9]{13,19}\^[A‐Za‐z\s]{0,30}\/[A‐Za‐z\s]{0,30}\^(0[7‐9]|1[0‐5])((0[1‐9])|(1[0‐2]))[0‐9\s]{3,50}[0‐9]{1}) 
([0‐9]{15,16}[D=](0[7‐9]|1[0‐5])((0[1‐9])|(1[0‐2]))[0‐9]{8,30}) 
Sample B – Dynamic Analysis 
WINMGMT.EXE 
• 
Executing from command line or Explorer produces Error 1063. 
• 
Using “/install” does the trick. 
• 
It can run in debug mode 
• 
Once running it locates one of eight Point of Sale system 
process it is designed to monitor.  
• 