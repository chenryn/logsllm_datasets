负载均衡服务器，转发请求
L
Active
Puppet Master
第15章Puppet 架构扩展与分布式·247
用
一
+.++.
---
## Page 76
248·第四部分进阶篇
noarch.rpm
15.3.1
在部署应用时需要注意，在完成 Puppet软件安装后，不要启用 Puppet服务。
2.安装软件包
http://yum.puppetlabs.com/el/5Server/products/x86_64/puppetlabs-release-5-5.
http://mirrors.ustc.edu.cn/fedora/epel/5/i386/epel-release-5-4.noarch.rpm 
配置软件源的方法如下：
1.配置软件源
接下来进入配置阶段，
口 Puppet Master 可以横向扩容至多台或多个集群。
负载均衡LB可以纵向扩容至多组。
CA服务器的死机对架构无大影响，
口CA服务器可以任意扩展，只需要将证书复制至另一台服务器进行冷备。
架构优点：
口如有多个 Master 时需要保持 manifests 代码同步，可采用 rsync 进行同步。
负载均衡LB 与 Master 使用相同主机名的证书，证书由 CA 颁发。
CA负责颁发所有客户端证书。
客户端配置ca_server 和 server 指定认证和服务端服务器。
上述架构工作原理：
详细架构如图 15-6 所示。
配置前的准备
Puppet Agents
图 15-6Master 集群扩展组合方式四的详细架构图
，整个配置过程不是很复杂。读者可以先通读一遍再进行操作。
CA funtions
https
只是新客户端将无法获取证书。
 pass https://puppetmaster
location/
 proxy catalog requests
Nginx LB
Puppet CA
https
ssl off
Puppet Master
---
## Page 77
名，也可以配置本地 hosts 文件“/etc/hosts”。
在所有服务器上编辑/etc/hosts 文件并添加如下内容:
10.210.213.219 agent.domain.com
10.210.215.251 puppetlb.domain.com
所有主机的 hostmname 要能够解析服务器对应的 IP，可以通过配置 DNS 服务器解析主机
3.设置主机名并解析
SS
$ sudo passenger-install-nginx-module 
$ sudo yum -y install ruby-devel rubygems puppet puppet-server
如果需要安装 puppet2.7的版本，指定版本即可。
$ sudo hostname agent.domain.com
在 Puppet.domain.com 服务端配置主机名并安装 Nginx 和 puppet-server软件包，具体如下：
如果需要安装 Puppet2.7的版本，指定版本即可。
$ sudo hostname puppetca.domain.com 
Puppetca.domain.com 认证服务器配置主机名并安装 puppet-server 软件包，具体如下：
（3）PuppetCA
$ sudo yum install nginx
$ sudo hostname puppetlb.domain.com
Puppetlb.domain.com 负载均衡器只需要安装 Nginx，具体如下：
（2）PuppetLB
puppet-2.7.20-1.el5 puppet-server-2.7.20-1.el5
如果需要安装 Puppet 2.7的版本，指定版本即可，具体如下：
$ sudo yum install puppet puppet-server
$ sudo hostname agent.domain.com 
在 Agent.domain.com 客户端配置主机名并安装 puppet 软件包，在命令行下运行如下代码:
10.210.215.254
10.210
（1）Puppet Agent
sudo chown -R puppet:puppet /etc/puppet/rack/
cp /usr/share/puppet/ext/rack/files/config.ru /etc/puppet/rack/
sudo mkdir -p /etc/puppet/rack/public
 puppetca.domain.com
第15章Puppet架构扩展与分布式·249
---
## Page 78
250第四部分进阶篇
puppet/ssl/private_keys/puppet.domain.com.pem 
puppet.domain.com 两个域名的授权证书文件。
有启动过，因此CA 服务器需要生成CA 服务器和服务端的证书。
对架构，这对容错性而言是非常有必要的。
不能获得证书，从而会影响使用，而已签发证书的客户端却不受影响。因此将CA进行独立
15.3.2
配置时比较麻烦。
然也可以采用相同主机名。笔者建议所有 Master 服务器采用相同主机名，使用不同主机名在
domain.com
domain.com
在采用分布式架构时，所有的服务端即Puppet Master 证书也由CA生成，CA授权
$ sudo puppetca --generate --dns_alt_names puppetca.domain.com:puppet puppetca
使用 puppetca命令生成CA服务器与服务端域名证书，生成 puppetca.domain.com 和
（1）生成证书
 PuppetCA 的唯一目的就是签署和撤销证书。当PuppetCA 服务不可用时，新的客户端将
PuppetCA 主配置文件如下:
$ sudo scp ca/signed/puppet.domain.com.pem PI:EMAIL:/var/lib/puppet/
$ cd /var/lib/puppet/ssl
Master 在使用 Nginx+Passenger模式时还需要复制废除证书文件 ca_crl.pem，具体如下:
口根证书 ca_crt.pem 在 Puppet LB 和 Puppet Master 服务器上为 ca.pem;
如果服务器之前启动过 puppet 服务，需要删除 ssl目录，具体如下:
在 PuppetLB 和 Puppet Master 服务器由创建相应的目录，具体如下:
（2）将公钥、私钥和根证书复制至 PuppetLB 和 Puppet Master 
这里 CA 服务器在/var/lib/puppet/ssl 目录中将会产生相应的私钥和公钥。
S
当 Puppet Master 服务器比较多时，如果选择不同的主机名，需要在CA上获取授权，当
口私钥 puppet.domain.com.pem 维持不变。
 signed 证书同步到 certs；
在复制证书时需要注意复制后的名称会有变化，具体如下：
sudo rm -rf /var/lib/puppet/ssl
$ sudo mkdir -p /var/lib/puppet/ssl/{certs,ca, private_keys
sudo
sudo
PuppetCA认证服务器部署
 puppetca 
vate
--generate --dns_alt_names puppet.domain.com:puppet puppet
PI:EMAIL:/var/1ib/
---
## Page 79
处理 Catalog 相关的请求。配置 Nginx 的虚拟主机内容如下：
15.3.3
于CA 服务器只是处理证书请求，因此不存在性能瓶颈，不需要使用HTTP 负载均衡扩展。
负载均衡器 puppetlb.domain.com 负责转发请求，为此只需要配置 Nginx，通过 location
通过 /etc/init.d/puppetmaster start 启动 Puppet 服务即完成了 Puppet CA 服务器部署。
server
upstream puppet-production {
[master]
$ sudo vim /etc/puppet/puppet.conf
server 10.210.213.217:8140;
ssl_session_cache
ssl_prefer_server_ciphers
ssl_verify_client
ssl_client_certificate
ssl_certificate_key
ssl_certificate
ssl_session_timeout
proxy_read_timeout 500;
proxy_temp_file_write_size 100m;
proxy_busy_buffers_size 100m;
proxy_set_header
proxy_set_header
proxy_set_header
SSl_ciphers ALL:!ADH:RC4+RSA:+HIGH:+MEDIUM:-LOW:-SSLv2:-EXP;
ssl_protocols SSLv3 TLSvl;
error_log
access_log
server_name
listen
location/{
ssl
ss1
Puppet LB 负载均衡器部署
ca = true
certname = puppetca.domain.com
confdir = /etc/puppet 
-_verify_depth
X-Client-Verify 
X-Client-DN
X-SSL-Subject 
shared:SSL:128m;
on;
/var/log/nginx/puppet_error.log;
/var/log/nginx/puppet_access.log;
puppet.domain.com;
8140 ssl;
optional;
/var/lib/puppet/ssl/ca/ca_crl.pem;
/var/lib/puppet/ssl/certs/ca.pem; 
/var/lib/puppet/ssl/private_keys/puppet.domain.com.pem;
/var/lib/puppet/ssl/certs/puppet.domain.com.pem;
on;
 $ssl_client_verify;
 $ssl_client_s_dn;
 $ssl_client_s_dn;
第15章Puppet 架构扩展与分布式·251
由
---
## Page 80
252·第四部分进阶篇
15.3.4Puppet Master服务器部署
配置 SSL 等。配置参考如下：
转发 CA 请求至本地 puppet master。配置文件参考如下：
Puppet Master 服务器部署时需要在主配置文件 puppet.conf 中添加客户端 ssl header 配置
这时 proxy_pass 只需要配置 HTTP 代理即可，后端所有 Puppet Master 服务器也不需要
server{
注意，修改 local'ip 为生产环境中的本地服务器 IP。
proxy_pass http://local'ip:8141;
如果负载均衡服务器与 CA 服务器部署在同一台服务器上，Nginx 的配置需要通过代理
location /production/certificate_revocation_list/{
location /production/certificate/{
location，代理转发所有请求，需要注意 proxy_pass 是转发 HTTPS 请求。
 ssl，配置证书相关文件，这里的证书由CA 服务器生成；
 proxy，将服务器上接收到的用户信息传到后端服务器；
upstream，定义负载均衡设备 IP，如果后端有多台 Puppet Master 服务器时还可以通过
location/{
以上代码的详解如下：
ocation /production/certificate_request/(
（down、weight、max_fails、fail_timeout、backup）设置不同后端设备的状态；
passenger_use_global_queue on;
passenger_enabled on;
root /etc/puppet/rack/public;
listen local'ip:8140;
proxy_passhttp://puppet-production;
proxy_storeoff;
default_typeapplication/x-raw;
default_typeapplication/x-raw;
types{}
:1+t8:dt teoot//:d2aussed Axoxd
types{}
default_typeapplication/x-raw;
types{}
proxy_pass https://puppet-production;
proxy_redirect 
off;
---
## Page 81
选项，以便能获取到客户端的请求信息。同时还需要配置关闭 ca 请求。
2）增加 Nginx 虚拟主机，具体如下:
1）Puppet 主配置文件 puppet.conf,
server
[master]
location /production/file_content/files/ {
# File sections
ssl_session_cache
ssl_ciphers
ssl_verify_client
ssl_certificate_key
ssl_certificate
error_log
access_log
client_body_buffer_size 4096k;
client_max_body_size 10m;
proxy_buffering on;
proxy_buffer_size 4000k;
passenger_set_cgi_param
passenger_set_cgi_param 
passenger_use_global_queue 
passenger_
server_name
listen
ssl_session_timeout
root
ssl_client_verify_header =
ca = false
sl_verify_depth 
default_type application/x-raw;
roxy_busy_buffers_size
alias /etc/puppet/files/;
types {
_crl
_enabled
 puppet.domain.com
SSLv2:-LOW:-EXPORT:RC4+RSA;
17680k;
shared:SSL:128m;
1；
HTTP_X_CLIENT_DN Sssl_client_s_dn;
：HTTP_X_CLIENT_VERIFY
optional;
/var/lib/puppet/ssl/ca/ca_crl.pem;
/var/lib/puppet/ssl/private_keys/puppet.domain.com.pem;
/var/lib/puppet/ssl/certs/puppet.domain.com.pem;
/etc/puppet/rack/public;
/var/log/nginx/puppet_error.log;
/var/log/nginx/puppet_access.log;
HTTP_X_CLIENT_VERIFY $ssl_client_verify;
on;
on;
puppet.domain.com;
off;
8140 ssl;
．具体如下：
第 15章Puppet 架构扩展与分布式·2
253
---
## Page 82
254第四部分进阶篇
接对配置清单进行操作。通常会使用-V参数开启冗余输出模式，这样就可以看到详细的执
agent 命令完成的。
清单（通常是编译好的Catalog)，然后在本地进行编译，通常这一过程是客户端通过 puppet
就需要采用15.3节介绍的方式进行扩展。Puppet 客户端每次都从 Puppet Master 获取配置
15.4架构扩展之利用 Git 构建分布式的 Puppet 
行过程。
别在 PuppetLB 和 Puppet Master 上运行命令如下：
15.3.6验证架构
Master 上，负载均衡器通过转发请求至不同的 Puppet Master 处理。
是 puppet.domain.com，此域名通过CA 服务器授权并将证书同步至负载均衡器与后端 Puppet
puppetca.domain.com，在获取证书与授权认证时需要通过该域名发起请求。Master 的域名
15.3.5
Puppet 同时还提供 puppet apply 命令替代 puppet agent 的功能。可以利用 puppet apply 直
为验证请求可以分别在负载均衡器与后端Puppet Master上通过抓包查看请求过程，分
使用 Puppet 最常见的做法就是运行一个 Puppet Master 服务器，当 Master 压力过大时,
定义一个 command.pp 文件内容为：
如果要想验证Puppet Agent认证过程，可以先取消客户端的认证，重新发起认证请求即可。
tcpdump -s 1024 -l -A port 8140 -i eth0 -vvvv
$ puppet agent --test --server puppet.domain.com
2）执行如下 puppet 命令：
exec{
$ more command.pp 
/etc/init.d/nginx start
配置完成后启动Nginx，具体如下：
agent]
command
masterport
Puppet客户端配置
ca_server
environment 
=> "/bin/ls command.pp",
= 8140
puppetca.domain.com
puppet.domain.com
production
---