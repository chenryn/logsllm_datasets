Bypassing)Android)
Password)Manager)Apps)
Without)Root
Stephan)Huber,)Siegfried)Rasthofer,)Steven)Arzt
Fraunhofer SIT
2
Stephan
•
Mobile)Security)Researcher)at)
Fraunhofer)SIT
•
Enjoys teaching)students)in)
Android)(app))hacking
•
Twitter:)@teamsik
Siegfried
•
Head)of Secure)Software)
Engineering)at)Fraunhofer)SIT
•
Founder of CodeInspect
•
Web:)www.rasthofer.info
•
Twitter:)@teamsik
Acknowledgements
• Benedikt)Hiemenz
• Daniel)Hitzel
• Daniel)Magin
• Joseph)Varghese
• Julien)Hachenberger
• Max)Kolhagen
• Michael)Tröger
• Philipp)Roskosch
• Wittmann)Andreas
3
4
Wish
5
aim=e1Ioci Ohyoh>wae0 kei7Gae$si bei3cooai eGah+K5iuM yae$V4leex ohjiu_Hei6 fee'Cho5Oo jahK3Ad+ai
oH)eewaec0 KiG&ee4ahy ujohj%ie1J wae,Gei6mu uSh=i2ahng ainai]Le2i Ieb~o5fohF
ohN\ah1gae Dooch\ei7i ich]a're1U aiToh5cee= eiZ2thaip; ni"W3oom?i oi(Sh7vie)
gu}i8Tohco il@ah@ve9U cie"tae8Eo Au&S3aigae eir0ieHo)c ohch/ah6Ii Bie*t9xie"
ukieTh6fu[ ie*vieZai9 ohwu(v0eeY ua&ghi7aeR em?ohG?oi3 phu$L^ah4p ieX&i2shei
aiZie%l7Oo ood8Pen phie9Ib(ie beiMei[r7a Nagh(aid0U
AhTee:tah5 oY"a5pheib ohthe1Na.e eria9Ahn>u eid8Ohso!o Uv4ia6Gu`o Aeli1li$i&
Toth^ai8ph Euso6eu$ja vie8Ieh?ai leec4aeZ/o Eele+ph2na yai=b!a5Oo Wefoh&m4oh
Vo-oX9ka0v ei9eenuNih2oPh noo7Ish'ie Uaz6she|Zu oo0aiP*ee2 coh=Puo1Ve
roo9Kee-th ra@c3Ce7sh mabi6Malo[ auw1Eu\kie eiVoo,Kuu5 aiW\oo5phu Oos_abir7U
Reality
6
Note
Password-Manager
Password-Recycling
Browser)
Password-Manager
7
App
GooglePlay Downloads
Keeper
10)– 50 m
Keepsafe
10)– 50)m
1Password
1 – 5)m
Dashlane
1)– 5)m
Lastpass
1)– 5)m
Avast
0.5)– 1)m
MyPasswords
0.5)– 1)m
F-Secure
100)– 500 k
PasswordManger
50 – 100)k
Security)Requirements
8
Confidentiality
Availability
Integrity
9
• Premium)features)for)free
• Resetting)master)password)with)ease
• Breaking)C.I.A
• Lost)device)scenario
• Mitm attacks
• Via)third)party)app
10
Internet
App
Account)Manager
(master password)
File
(master password)
PW-Manager)App
user1:pw1
user2:pw2
...
Database
PC
“No-root scenario“
11
Premium8upgrade8for free !
Get Pro)for Free
12
public abstract class BasePreferenceActivity extends AppCompatPreferenceActivity {
protected static boolean a = false;
protected void onCreate(Bundle bundle) {
boolean z = false;
super.onCreate(bundle);
…
if (getIntent().getIntExtra("com.xy.mo.apps.pwmgr.EXTRA_SUFCXNUQVRF", 0) == 2) {
z = true;
}
a = z;
}
Premium)Flag
adb shell am start -n 
com.xy.mo.apps.pwmgr/.settings.DatabaseSettings --ei
com.xy.mo.apps.pwmgr.EXTRA_SUFCXNUQVRF 2
check)Intent value
Before and After)Intent
Before Intent:
After)Intent:
13
14
Logic Flaw
Logic Design)Flaw
15
Forgot Password
Verification
Code
YES
Correct ?
Security)Question
YES
Reset
Master)Password
Correct ?
YES
USER
Attacker has (physical)8device Access.
read emails
on)device
?
Logic Design)Flaw
• Manifest:
• Start)Activity:
16
adb shell am start -n com.xyz.android_apps.noname/.DeepLinkActivity
Logic Design)Flaw
• “Forget)Password“)function
17
Logic Design)Flaw
• Fire intent,)start DeepLinkActivity
18
Logic Design)Flaw
• Settings)->)“RESET)SECURITY)QUESTION“
19
Attacker Flow
20
Change)
Security)Question
Reset
Master)Password
Enter)Verification Code
Answer Sec.)Question
Attacker has (physical)8device Access
ATTACKER
Start)Settings
Forgot Password
Verification
Code
YES
get code from
emails on)device
Side)Effects
• Change)security)question)without8authentication8
• Insert new8data8into)the)database)->)
synchronization (no)code)L)
• Turn)of)auto8destroy8function)->)brute)forcing
21
22
Get Master)Secret
Master)Secret
Extraction process
• ADB-backup
• Mitm attack
• Browser8file access
• Residue attack
Decryption process
• Plaintext
• Custom8crypto
• Hardcoded symmetric keys
• Custom8obfuscation
23
1
2
Master)Secret
Extraction process
• Mitm attack
Decryption process
• Custom8crypto
24
1
2
User)Authentication
25
username:password
success
HTTP)+)Custom)Crypto
26
Authentication)Process
http – POST)- request
seed =)time[ms]
key =)random(seed)
enc_data =)AES(key,)auth_data)
seed =)time[ms]
key =)random(seed)
dec_data =)AES(key,)auth_data)
Body:
Header:
enc_data
encrypted payload
?
27
Authentication)Process
http - POST
seed =)time[ms]
key =)random(seed)
enc_data =)AES(key,)auth_data)
seed =)time[ms]
key =)random(seed)
dec_data =)AES(key,)auth_data)
seed =)time[ms])– x[ms]
key =)random(seed)
dec_data =)AES(key,)auth_data)
Best)Practices:)Secure)Communication
• Android,)correct)ssl*
• Stronger,)SSL)(Pinning)
• Android)7)supports)pinning)(security))configuration)file)
• Use)library)with)pinning)support,)e.g.)OkHttp library)
(take)care)of)version)
28
URL url = new URL("https://example.org");
URLConnection urlConnection = url.openConnection();
InputStream in = urlConnection.getInputStream();
…
*https://developer.android.com/training/articles/security-ssl.html
Master)Secret
Extraction process
• Browser8file access
29
1
30
md5(“)pinCodeValue“)
base64(encr(key,)PASS))
file:///data/data/package.name/shared_prefs/passwd_pref.xml
Master)Secret
Extraction process
• Residue attack
31
1
32
THE ACCOUNTMANAGER
THE WHAT ?
Android'AccountManger
• „This)class)provides)access)to)a)centralized)registry)
for)the)user‘s)online)accounts)…“
• SQLITE)Database)for)storing)tokens)or)temp.)
Credentials)
• API)provides)access)for)Application
33
/data/system/users/0 # ls -l accounts.db
-rw-rw---- system
system
241664 2017-04-03 10:58 accounts.db
“With&this&in&mind,&you&shouldn't*pass*the*user's*actual*password*to&
AccountManager.addAccountExplicitly(). Instead,&you&should&
store&a&cryptographically&secure*token*that&would&be&of&limited&use&to&an&attacker.&
If&your&user&credentials&are&protecting&something&valuable,&you&should&carefully
consider&doing&something&similar.”
https://developer.android.com/training/id-auth/custom_auth.html
Quote)google)developer)(AccountManager)
34
DEMO TIME !
35
DEMO)TIME)!
36
AccountManager
ID
email
type
token
accounts.db
37
AccountManager
ID
email
type
token
com.account
PI:EMAIL
secret
Target)App
account type
accounts.db
38
AccountManager
ID
email
type
token
1
PI:EMAIL
com.account
secret
com.account
PI:EMAIL
secret
Target)App
account type
installation
accounts.db
UID8=8123
39
AccountManager
ID
email
type
token
1
PI:EMAIL
com.account
secret
com.account
PI:EMAIL
stuff
Attacker App
account type
installation
accounts.db
UID8=8456
40
AccountManager
ID
email
type
token
1
PI:EMAIL
com.account
secret
accounts.db
UID8=8456
COLLISION8!8
UID:123 ¹ UID:456
41
AccountManager
ID
email
type
token
1
PI:EMAIL
com.account
secret
accounts.db
UID8=8456
COLLISION8!8
UID:123 ¹ UID:456
uninstall target app
com.account
42
AccountManager
ID
email
type
token
1
PI:EMAIL
com.account
secret
accounts.db
Not)removed,
there is an)app with matching account type
com.account
43
AccountManager
ID
email
type
token
1
PI:EMAIL
com.account
secret
accounts.db
Attacker app can now access the secret !
com.account
Master)Secret
Decryption process
• Hardcoded symmetric keys
• Custom8obfuscation
44
2
Crypto – Do)it right
45
“A)cryptosystem)should)be)secure)even)if)everything)
about)the)system,)except)the)key,)is)public)knowledge.”)*
*JOURNAL)DES)SCIENCES)MILITAIRES.)Janvier)1883.)LA)CRYPTOGRAPHIE)MILITAIRE.
Kerckhoffs's principle
Correct encryption
46
master secret
(password)
cipher-text
key)derivation function
(e.g.)PBKDF2)
AES
encryption or
decryption
Lsdh3ji
a32er4o
er3owe2
daerw23
Bad)Crypto
47
master secret
(password=)mp)
AES
encryption/)decryption
(enc(mp,)d))
Lsdh3ji
a32er4o
er3owe2
daerw23
static key =)s
AES
store enc(s,)mp)
mp)=
mp)
cipher-text
[0…0])- padding
data d
Hard-coded keys
48
String = staticinvoke f.b("ydPCPFnpqfPuuBYPzhfGXD38gtUPN2yj", 
$String);
public abstract class LPCommon {
//first part of the key
protected static String aA = "ldT52Fjsnjdn4390";
//second part of the key
protected static String aB = "89y23489h989fFFF";
AES-Key)=)ydPCPFnpqfPuuBYPzhfGXD38gtUPN2yj
AES-Key)=)ldT52Fjsnjdn4390 89y23489h989fFFF;
Broken Key)Obfuscation
49
master secret
(password=)mp)
AES
random key
self-implemented random
enc(kr,)mp)
obf(kr)
obfuscator
encryption
kr
sizeof(kr)=9
9
55
Broken Key)Obfuscation
50
obf(kr)
kr
Abc2Abc2Abc2
Random)encryption key
Obfuscated key
obf(kr)8parts
kr parts
Abc
kr[0])+)kr[1]
2
kr[2]
Abc
kr[3])+)kr[4]
2
kr[5]
Abc
kr[6])+)kr[7]
2
kr[8]
sizeof(kr)=9
sizeof(obf(kr))=12
Scheme:
kr[0])+)kr[1])=)kr[3])+)kr[4])=)
kr [6])+)kr[7])
and:
kr[2])=)kr[5])=)kr[8]
Broken Key)Obfuscation
51
obf(kr)8parts
kr parts
Abc
kr[0])+)kr[1]
2
kr[2]
Abc
kr[3])+)kr[4]
2
kr[5]
Abc
kr[6])+)kr[7]
2
kr[8]
„Bruteforcing“
-
simple)„rainbow“)tables
-
3)character mapping
-
1)character mapping
obf(kr)8parts
Key8kr[n]8+8kr[n+1]
ISF
!!
ISN
!#
QUF
AA
…
…
Abc
kl
…
…
enp
zz
obf(kr)=Abc2Abc2Abc2
kr =)kl$kl$kl$
Recommendations)(1/2)
• Use)Android)KeyStore
• Key)derivation)(e.g.)PBKDF28(API),8Conceal8(Open8
Source,8bcrypt,8…)
• No)static8keys
• Use AES/CBC or)AES/GCM
52
Recommendations (2/2)
• Disable backup8flag8(apps)support)backend)
synchronization)->)implicit)backup)
• If)there)is)a)master)pass)storage)function,)do8not8
store)it)in)plaintext
• Do8not8store)the)master8pass8in)the)local8app8
folder,)this)is)not)a)protected)area
53
54
Keeper
Lastp
1Pass
MyPass
Avast
F-Sec
Keeps.
PwMgr
Mirsoft
Dash
Master/PIN
X
X
X
X
X
X
X
X
Hardcoded
Key
X
X
X
X
Sandbox
Bypass
X
X
X
X
X
Side)channel
X
X
X
X
X
Subdomain
X
X
X
X
X
X
Data leakage
X
X
X
Partial)
encryption
X
Broken)sync.
X
www.sit4.me/pw-manager
55
THIS IS THE END
MY FRIEND
56
57
Stephan8Huber
Email:)PI:EMAIL
Siegfried8Rasthofer
Email:)PI:EMAIL
Twitter:)@teamsik
Website:)www.team-sik.org