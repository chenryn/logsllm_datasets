 array_length(ARRAY[[1,2,3,4,5],[6,7,8,9,10]], 1)
 不限维度
 目前PostgreSQL未对维度强限定,如int[]和int[][], 效果是一样的, 都可以存储任意维度的数组.
 矩阵强制
 多维数组中, 同一个维度的元素个数必须相同.
 正确
 array[[1,2,3,4],[5,6,7,8]]
 不正确
 array[[1,2,3,4],[5,6,7]]
 元素强制
 元素类型必须一致
 正确
 array[1,2,3]
 不正确
 array[1,2,'abc']
PostgreSQL 数据类型介绍
 扩展
 一维数组支持prepend, append, cat操作
array_append(ARRAY['digoal','francs'],'david')
array_prepend('david',ARRAY['digoal','francs'])
 二维数组仅支持cat操作
array_cat(ARRAY[['digoal','zhou'],['francs','tan']], ARRAY['david','guo'])
 subscript
 元素脚本默认从1开始, 也可以指定.
 array_lower(ARRAY[[1,2,3,4,5],[6,7,8,9,10]], 2)
 array_lower('[-3:-2]={1,2}'::int[], 1)
 select array_upper('[-3:-2]={1,2}'::int[], 1)
PostgreSQL 数据类型介绍
 切片
 array_dims(ARRAY[[1,2,3,4,5],[6,7,8,9,10]])
 a[1:2][1:1] = {{1},{3}}
 第一个[]中的1表示低位subscript, 2表示高位subscript值.
 第二个[]中左边的1表示低位subscript, 右边的1表示高位subscript值.
 a[2:3][1:2] = {{3,4},{5,6}}
 分片的另一种写法, 只要其中的一个维度用了分片写法, 其他的维度如果没有使用分片写法, 默认视为高位
 如a[2:3][2] 等同于 a[2:3][1:2]
 PostgreSQL ARRAY datatype introduce
 http://blog.163.com/digoal@126/blog/static/163877040201201275922529/
PostgreSQL 数据类型介绍
 数组相关的 函数 与 操作符
PostgreSQL 数据类型介绍
 自定义类型
 create type test as (info text,id int,crt_time timestamp(0));
 创建表时默认创建一个同名composite type, 因此表名和自定义类名不能重复
 create table test (id int primary key,info text);
 ERROR: relation "test" already exists
 举例
 CREATE TYPE inventory_item AS (
 name text,
 supplier_id integer,
 price numeric
 );
 CREATE TABLE on_hand (
 item inventory_item,
 count integer
 );
PostgreSQL 数据类型介绍
 自定义类型
 INSERT INTO on_hand VALUES (ROW('fuzzy dice', 42, 1.99), 1000);
 SELECT (on_hand.item).name FROM on_hand WHERE (on_hand.item).price = NAMEDATALEN)
 {
 len = pg_mbcliplen(ident, len, NAMEDATALEN - 1);
 if (warn)
 {
 char buf[NAMEDATALEN];
 memcpy(buf, ident, len);
 buf[len] = '\0';
 ereport(NOTICE,
 (errcode(ERRCODE_NAME_TOO_LONG),
 errmsg("identifier \"%s\" will be truncated to \"%s\"",
 ident, buf)));
 }
 ident[len] = '\0';
 }
 }
PostgreSQL 表操作
 改变最大长度限制,需重新initdb
 src/include/pg_config_manual.h
 /*
 * Maximum length for identifiers (e.g. table names, column names,
 * function names). Names actually are limited to one less byte than this,
 * because the length must include a trailing zero byte.
 *
 * Changing this requires an initdb.
 */
 #define NAMEDATALEN 64
PostgreSQL 表操作
 implicitly-typed literal or constant  explicit-typed literal or constant
 string  type 'string'
E'digoal\\' time '12:00:00'
 $$digoal\$$  'string'::type
$tag$digoal\$tag$ '1 hour'::interval
 bit string  CAST ( 'string' AS type )
B'1010101' CAST('127.0.0.1' AS inet);
 number
10 or +10
-23.4
+100.1 or 100.1
10e-1
98e+10 or 98e10
PostgreSQL 表操作
 操作符
 + - * /  = ~ ! @ # % ^ & | ` ? ||
 postgres=# select count(*) from pg_operator;
 count
 -------
 706
 也可以使用这种用法, 解析器同样支持.
 SELECT 3 OPERATOR(pg_catalog.+) 4;
PostgreSQL 表操作
 特殊字符
 $  :
 string quoted  slice from array
 positional parameter in function or prepared  *
statement
 all the fields of a table or composite value
 ()
 .
 enforce precedence
 numeric , separate schema, table, column
 [] names.
 array selected elements
 ,
 separate the elements of a list
 ;
 terminate a SQL
事务操作
 事务相关的TOKEN.
 BEGIN; -- 可指定事务隔离级别, 事务读写属性, 约束延迟校验属性等.
 COMMIT;
 ROLLBACK;
 SAVEPOINT a;
 ROLLBACK to a;
 二阶事务相关TOKEN,
 prepare transaction
 rollback prepared
 commit prepared
 psql相关的事务模式变量
 ON_ERROR_ROLLBACK, ON_ERROR_STOP
 postgres=# \set ON_ERROR_ROLLBACK on
 如果开启ON_ERROR_ROLLBACK, 会在每一句SQL前设置隐形的savepoint, 可以继续下面的SQL, 而
不用全部回滚
单条SQL插入多行
 INSERT INTO tbl(c1,…,cn) values (…),(…),…,(…);
 例如
 digoal=# drop table user_info ;
 DROP TABLE
 digoal=# create table user_info(id int, info text);
 CREATE TABLE
 digoal=# insert into user_info(id,info) values(1,'test'),(1,'test'),(1,'test'),(1,'test'),(1,'test');
 INSERT 0 5
 digoal=# select ctid,cmin,cmax,xmin,xmax,* from user_info ;
 ctid | cmin | cmax | xmin | xmax | id | info -- 几个隐含字段的简单解释, 这种SQL的好处.
 -------+------+------+-----------+------+----+------
 (0,1) | 14 | 14 | 216732454 | 0 | 1 | test
 (0,2) | 14 | 14 | 216732454 | 0 | 1 | test
 (0,3) | 14 | 14 | 216732454 | 0 | 1 | test
 (0,4) | 14 | 14 | 216732454 | 0 | 1 | test
 (0,5) | 14 | 14 | 216732454 | 0 | 1 | test
 (5 rows)
DML
 INSERT
 UPDATE