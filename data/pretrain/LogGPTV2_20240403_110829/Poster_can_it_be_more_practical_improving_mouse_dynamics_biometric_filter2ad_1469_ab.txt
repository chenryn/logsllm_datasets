m
e
v
o
M
1.4
1.2
1
0.8
0.6
0.4
0.2
0
0
10
Speed Curve 1
Speed Curve 2
20
30
Speed feature sequence
40
50
Figure 1. Distance metric between movement speed features 
3.2  Distance Measurement 
The raw mouse feature data cannot be used directly by a classifier, 
given  the  behavior  variability  and  large  dimensionality.  Instead, 
we  adopted  several  distance  metrics  to  obtain  feature-distance 
vectors, which can not only overcome within-class variability of 
mouse behavior, but can also preserve between-class differences 
of mouse behavior. First, we generated the reference vector using 
mean  distance  among  training  samples.  Then,  we  computed 
distance  metrics  between  the  mouse  feature  vector  and  the 
reference vector using edit distance [9] (for comparing procedural 
features  such  as  speed  and  acceleration  curves)  and  absolute 
distance  (for  comparing  static  features  such  as  single-click 
statistics  and  double-click  statistics)  respectively.  Finally,  we 
obtained  the  feature-distance  vector  for  every  sample.  An 
example  of  the  edit  distance  between  two  movement  speed 
features is shown in Figure 1. The two speed curves are for the 
same subject. 
In this paper, we used all of mouse features defined in Section 3.1 
to generate the distance vector. There are 10 click-related features, 
16  distance-related  features,  16  time-related  features,  16  speed-
related features, and 16 acceleration-related features, which taken 
together  and  then  transformed  to  form  78-dimentional  feature-
distance vector, representing a repetition of the pattern. 
4.  COMPONENT, CLASSIFIER  
AND TRAINING 
4.1  Component Analysis 
It  is  usually  undesirable  to  use  all  components  in  the  feature 
vector  as  input  of  the  classifier,  because  much  of  data  will  not 
provide  a  significant  degree  of  uniqueness  or  consistency. 
Therefore, we used Kernel Principal Component Analysis (KPCA) 
to extract the principle components of the feature-distance vector 
as input for the classifier.  
4.2  Classifier 
We  used  a  two-class  Support  Vector  Machine  (2-class  SVM) 
classifier, which is an effective machine learning method to find an 
optimal  hyper-plane  to  maximally  separate  the  two  classes  in  the 
training set. The decision function takes the value “+1” in a “small” 
region capturing most of the normal data points, and “-1” elsewhere. 
4.3  Training and Testing Procedure 
We started by designating one of subjects as the legitimate user, and 
the rest as impostors. We train and test the classifier as follows: 
Step1:  We  trained  the  classifier  on  the  first  75  samples  of  the 
854legitimate user and 75 samples of each impostor to build a profile 
of that user. 
Step2: We tested the ability of the classifier to recognize the user 
himself by generating anomaly scores for the remaining patterns 
conducted by the user. We record these to calculate FRR. 
Step3:  We  tested  the  ability  of  the  classifier  to  recognize 
impostors  by  generating  anomaly  scores  for  the  remaining 
patterns typed by impostors. We record these to calculate FAR. 
This process is then repeated, designating each of the other subjects 
as the legitimate user in turn. In addition, for choosing parameters of 
interest, 5-fold cross validation is employed. 
5.  RESULTS AND ANALYSIS 
Table 1 shows results for FAR, FRR and verification time using 
direct classification and our proposed approach, and also presents 
some relevant results from the mouse dynamics literature to judge 
the tradeoff between security and usability. 
Our  first  observation  is  that  direct  classification  of  the  original 
feature-distance space produced a FAR of 10.25% and a FRR of 
9.37%.  This  result  is  promising  compared  with  previous  results 
reported,  since  our  samples  are  subject  to  more  variability 
compared  with  previous  work,  which  represent  activities  in  a 
longer  period  of  observation.  Moreover,  we  observe  that  the 
classification  result  was  FAR=8.87%,  FRR=7.16%  by  our 
approach, which is impressive and better than direct classification. 
These  results  may  be  due  to  the  detailed  characterization  of 
mouse  behavior  by  using  procedural 
features,  and  also 
demonstrate the effectiveness of a distance metric and component 
analysis  technique  in  dealing  with  variable  behavior  data.  Note 
that  the  results  do  not  yet  meet  the  European  standard  for 
commercial  biometric  technology  (0.001%  false  acceptance  rate 
and  1%  false  rejection  rate)  [4].  However,  with  further 
investigation  and  improvement,  it  seems  possible  that  mouse 
dynamics  could  be  used  as,  at  least,  an  auxiliary  authentication 
technique  such  as  an  enhancement  for  conventional  password 
mechanism.  
Our second observation is that the average verification time in our 
study is 11.8 seconds with a FAR of 8.87% and FRR of 7.16%. 
The  approach  of  [2]  obtains  an  average  EER  of  3%,  but  with 
verification time around 17 minutes. This limits the applicability 
for a large scale deployment in real systems. The verification time 
of 11.8  seconds  in  our  study  shows  that  we  can  perform  mouse 
dynamics  analysis  quickly  enough  to  make  it  applicable  to 
identity  verification  for  most  login  processes.  The  significant 
decrease  of  verification  time  is  due  to  procedural  features 
providing  much  more  detailed  information  about  each  mouse 
movement than previous approaches, and the introduction of edit 
distance 
accompanying  within-class 
variability. 
accommodating 
the 
6.  CONCLUSION 
This  work  performs  an  objective  experimental  study  of  the  true 
applicability  of  mouse  dynamics  under  a  tightly-controlled 
environment. We adopted procedural features such as speed and 
acceleration curves to more precisely characterize mouse activity 
and we employed edit-distance metrics to overcome within-class 
variability.  The  empirical  results  show 
that  our  approach 
significantly  reduces  verification  time  compared  with  previous 
research, with acceptable accuracy. At this amount of verification 
Table 1. Results of Identity Verification 
Approach 
FAR 
FRR 
Average 
Verification Time 
2-class SVM 
KPCA + 2-class 
SVM 
Distance-based[8] 
Probabilistic 
Model[3,7] 
Decision Tree[6] 
Neural Network[2] 
10.25% 
9.37% 
11.8 seconds 
8.87% 
7.16% 
11.8 seconds 
15% 
2% 
0.43% 
2.46% 
15% 
2% 
1.75% 
2.46% 
20 seconds 
50 seconds* 
96 seconds 
1033 seconds* 
time,  we  believe  mouse  dynamics  suffice  to  be  a  practical 
auxiliary  authentication  mechanism  such  as  enhancement  for  a 
conventional password mechanism. Of course, more investigation 
should be performed to improve the accuracy of the method. 
7.  REFERENCES 
[1]  K. Revett, H. Jahankhani, S. T. de Magalhes, and H. M. D. 
Santos. A survey of user authentication based on mouse 
dynamics. In Proceedings of 4th International Conference on 
Global E-Security, 2008, pages 210-219.  
[2]  A. A. E. Ahmed and I. Traore. A new biometric technology 
based on mouse dynamics. IEEE Transactions on 
Dependable and Secure Computing, 2007, 4(3): 165-179. 
[3]  H. Gamboa and A. Fred. Web biometrics: user verification 
via web interaction. In Biometrics Symposium, 2007, pages 
1-6. 
[4]  CENELEC. European Standard EN 50133-1: Alarm systems. 
Access control systems for use in security applications. Part 
1: System requirements, Standard Number EN 50133-
1:1996/A1:2002, Technical Body CLC/TC 79, European 
Committee for Electrotechnical Standardization, 2002. 
[5]  D. A. Schulz. Mouse curve biometrics. Biometrics 
Symposium: Special Session on Research at the Biometric 
Consortium Conference, 2006, pages 1-6.  
[6]  M. Pusara and C. E. Brodley. User re-authentication via 
mouse movements. In Proceedings of the 2004 ACM 
Workshop on Visualization and Data Mining for Computer 
Security. Washington DC, USA, 2004, pages 1-8. 
[7]  H. Gamboa and A. Fred. A behavioral biometric system 
based on human-computer interaction.  Proceedings of SPIE, 
54:4-26, 2004. 
[8]  S. Hashia, C. Pollett, and M. Stamp. On using mouse 
movements as a biometric. In Proceedings of International 
Conference on Computer Science and its Applications, 2005. 
[9]  A. Marzal and E. Vidal. Computation of normalized edit 
distance and applications. IEEE Transactions on Pattern 
Analysis and Machine Intelligence, 1993, 15(9):926–932. 
[10]  Zach Jorgensen and Ting Yu. On mouse dynamics as a 
behavioral biometric for authentication. In proceeding of the 
6th ACM Symposium on Information, Computer and 
Communication Security, 2011, pages 476-482. 
*The verification time was not explicitly stated in [2, 3, 7]; however, it can 
be calculated from the data collection process. For example, it is stated in 
[2]  that  an  average  of  12  hours  55  minutes  of  data  were  captured  from 
each subject, representing an average of 45 sessions. We therefore assume 
that average session length is 12.55×60/45=17.22 minutes=1033 seconds. 
855