# Mouse Dynamics for User Authentication: An Experimental Study

## 3.2 Distance Measurement
Raw mouse feature data cannot be directly used by a classifier due to the variability in behavior and high dimensionality. To address this, we adopted several distance metrics to generate feature-distance vectors. These vectors not only overcome within-class variability in mouse behavior but also preserve between-class differences. 

First, we generated a reference vector using the mean distance among training samples. Then, we computed the distance metrics between the mouse feature vector and the reference vector. We used edit distance [9] for comparing procedural features such as speed and acceleration curves, and absolute distance for comparing static features like single-click and double-click statistics. Finally, we obtained the feature-distance vector for each sample. Figure 1 illustrates an example of the edit distance between two movement speed features for the same subject.

In this study, we used all mouse features defined in Section 3.1 to generate the distance vector. Specifically, there are 10 click-related features, 16 distance-related features, 16 time-related features, 16 speed-related features, and 16 acceleration-related features. Together, these form a 78-dimensional feature-distance vector representing the pattern.

## 4. Component, Classifier, and Training

### 4.1 Component Analysis
Using all components in the feature vector as input to the classifier is often undesirable because much of the data may not provide significant uniqueness or consistency. Therefore, we employed Kernel Principal Component Analysis (KPCA) to extract the principal components of the feature-distance vector, which were then used as input for the classifier.

### 4.2 Classifier
We used a two-class Support Vector Machine (2-class SVM) classifier, which is an effective machine learning method for finding an optimal hyperplane to maximally separate the two classes in the training set. The decision function takes the value “+1” for most normal data points and “-1” elsewhere.

### 4.3 Training and Testing Procedure
We designated one subject as the legitimate user and the rest as impostors. The training and testing procedure was as follows:

1. **Training**: We trained the classifier on the first 75 samples of the legitimate user and 75 samples from each impostor to build a profile of the user.
2. **Testing Legitimate User**: We tested the classifier's ability to recognize the user by generating anomaly scores for the remaining patterns conducted by the user. These scores were recorded to calculate the False Rejection Rate (FRR).
3. **Testing Impostors**: We tested the classifier's ability to recognize impostors by generating anomaly scores for the remaining patterns typed by impostors. These scores were recorded to calculate the False Acceptance Rate (FAR).

This process was repeated, designating each of the other subjects as the legitimate user in turn. Additionally, 5-fold cross-validation was employed for parameter selection.

## 5. Results and Analysis
Table 1 summarizes the results for FAR, FRR, and verification time using direct classification and our proposed approach, along with relevant results from the literature to evaluate the tradeoff between security and usability.

### Observations
1. **Direct Classification**: Direct classification of the original feature-distance space resulted in a FAR of 10.25% and an FRR of 9.37%. This is promising compared to previous results, given the higher variability in our samples, which represent activities over a longer observation period.
2. **Proposed Approach**: Our approach achieved a FAR of 8.87% and an FRR of 7.16%, which is better than direct classification. This improvement can be attributed to the detailed characterization of mouse behavior using procedural features and the effectiveness of the distance metric and component analysis techniques in handling variable behavior data. However, these results do not yet meet the European standard for commercial biometric technology (0.001% false acceptance rate and 1% false rejection rate) [4]. Further investigation and improvement are needed, but it seems possible that mouse dynamics could serve as an auxiliary authentication technique, enhancing conventional password mechanisms.

### Verification Time
The average verification time in our study was 11.8 seconds, with a FAR of 8.87% and an FRR of 7.16%. In contrast, the approach in [2] achieves an average Equal Error Rate (EER) of 3% but with a verification time of around 17 minutes, limiting its practicality. Our verification time of 11.8 seconds demonstrates that mouse dynamics analysis can be performed quickly enough for most login processes. The significant reduction in verification time is due to the use of procedural features, which provide more detailed information about each mouse movement, and the introduction of edit distance to accommodate within-class variability.

## 6. Conclusion
This work provides an objective experimental study of the true applicability of mouse dynamics in a tightly-controlled environment. By using procedural features such as speed and acceleration curves, and employing edit-distance metrics, we have shown that our approach significantly reduces verification time compared to previous research, with acceptable accuracy. At this level of verification time, mouse dynamics can serve as a practical auxiliary authentication mechanism, enhancing conventional password mechanisms. Further investigation is needed to improve the accuracy of the method.

## 7. References
[1] K. Revett, H. Jahankhani, S. T. de Magalhes, and H. M. D. Santos. A survey of user authentication based on mouse dynamics. In Proceedings of 4th International Conference on Global E-Security, 2008, pages 210-219.

[2] A. A. E. Ahmed and I. Traore. A new biometric technology based on mouse dynamics. IEEE Transactions on Dependable and Secure Computing, 2007, 4(3): 165-179.

[3] H. Gamboa and A. Fred. Web biometrics: user verification via web interaction. In Biometrics Symposium, 2007, pages 1-6.

[4] CENELEC. European Standard EN 50133-1: Alarm systems. Access control systems for use in security applications. Part 1: System requirements, Standard Number EN 50133-1:1996/A1:2002, Technical Body CLC/TC 79, European Committee for Electrotechnical Standardization, 2002.

[5] D. A. Schulz. Mouse curve biometrics. Biometrics Symposium: Special Session on Research at the Biometric Consortium Conference, 2006, pages 1-6.

[6] M. Pusara and C. E. Brodley. User re-authentication via mouse movements. In Proceedings of the 2004 ACM Workshop on Visualization and Data Mining for Computer Security. Washington DC, USA, 2004, pages 1-8.

[7] H. Gamboa and A. Fred. A behavioral biometric system based on human-computer interaction. Proceedings of SPIE, 54:4-26, 2004.

[8] S. Hashia, C. Pollett, and M. Stamp. On using mouse movements as a biometric. In Proceedings of International Conference on Computer Science and its Applications, 2005.

[9] A. Marzal and E. Vidal. Computation of normalized edit distance and applications. IEEE Transactions on Pattern Analysis and Machine Intelligence, 1993, 15(9):926–932.

[10] Zach Jorgensen and Ting Yu. On mouse dynamics as a behavioral biometric for authentication. In proceeding of the 6th ACM Symposium on Information, Computer and Communication Security, 2011, pages 476-482.

*Note: The verification time was not explicitly stated in [2, 3, 7]; however, it can be calculated from the data collection process. For example, it is stated in [2] that an average of 12 hours 55 minutes of data were captured from each subject, representing an average of 45 sessions. We therefore assume that the average session length is 12.55×60/45=17.22 minutes=1033 seconds.