title:Enabling Secure Secret Sharing in Distributed Online Social Networks
author:Le-Hung Vu and
Karl Aberer and
Sonja Buchegger and
Anwitaman Datta
2009 Annual Computer Security Applications Conference
Enabling Secure Secret Sharing in Distributed Online Social Networks
Le-Hung Vu, Karl Aberer
Sonja Buchegger
Anwitaman Datta
School of Computer and Communication Sciences,
´Ecole Polytechnique F´ed´erale de Lausanne (EPFL),
CH-1015 Lausanne, Switzerland
{lehung.vu | karl.aberer}@epﬂ.ch
Deutsche Telekom Laboratories
School of Computer Engineering
TU Berlin, Germany
NTU Singapore
PI:EMAIL
PI:EMAIL
Abstract—We study a new application of threshold-based
secret sharing in a distributed online social network (DOSN),
where users need a means to back up and recover their
private keys in a network of untrusted servers. Using a simple
threshold-based secret sharing in such an environment is
insufﬁciently secured since delegates keeping the secret shares
may collude to steal the user’s private keys.
To mitigate this problem, we propose using different tech-
niques to improve the system security: by selecting only the
most reliable delegates for keeping these shares and further by
encrypting the shares with passwords. We develop a mechanism
to select the most reliable delegates based on an effective trust
measure. Speciﬁcally, relationships among the secret owner,
delegate candidates and their related friends are used to
estimate the trustworthiness of a delegate. This trust measure
minimizes the likelihood of the secret being stolen by an
adversary and is shown to be effective against various collusive
attacks. Extensive simulations show that the proposed trust-
based delegate selection performs very well in highly vulnerable
environments where the adversary controls many nodes with
different distributions and even with spreading of infections in
the network. In fact, the number of keys lost is very low under
extremely pessimistic assumptions of the adversary model.
Keywords-secret sharing; online social networks; distributed
online social networks; trust;
I. INTRODUCTION
A threshold-based secret sharing scheme is a multi-party
cryptographical protocol to enable a user to share her secret
with only intended recipients in a distributed system [13].
A traditional (k, n)-threshold secret sharing protocol splits a
secret into n parts (shares) any k of which (minimum) suf-
ﬁces to reconstruct the secret, e.g., the Shamir approach [14].
This approach can be well adapted to match the properties
of peer-to-peer environment, and online social networking
applications, where a user can not totally trust any other
user, and no other single user is told the whole secret.
In this paper, we propose a new application of a threshold-
based secret-sharing protocol in a distributed online social
network (DOSN). Such a system uses a distributed or a P2P
infrastructure for its users’ data management and storage,
while providing functionalities of conventional (centralized)
social networking sites such as Facebook.com or Orkut.com.
There are various motivations for such a decentralized
architecture, foremost among these being users’ privacy and
autonomy from not only fellow users but also from service
providers. The vision of DOSN platforms has been presented
in several recent works, e.g., [1], [2], [5], [8], or Tribler.org.
We next describe our application of threshold-based cryp-
tographical protocols through a concrete usage scenario.
This scenario comes from our experience in the development
of such a DOSN, where users need a means to back up and
recover their private keys in a network of untrusted servers1.
We also use this example to elaborate on the problem we
study in this paper, as well as to deﬁne the scope of our
intended solutions for the problem. A practical realization
of this scenario and its related solutions is the recovery
of user’s passwords in a distributed storage system such as
Wuala.com.
Private key recovery example: Alice’s computer crashed,
so she must use another computer. She wants to log in to
her online social network (a DOSN) from the new computer,
retrieve associated data and resume her life online.
When Alice ﬁrst created her account using the previous
computer, the system generated a private key as a means of
authentication associated with her username. The private key
of Alice is the ultimate secret enabling her to manage her
personal data, e.g., to edit a blog entry or to conﬁgure her
privacy setting. In contrast to conventional web-based online
social networks such as Facebook.com, where user data are
stored at servers owned by the service providers, a DOSN
platform enables Alice to store her personal data mainly
on her computer to ensure her total control on these data.
However, anticipating a future crash of the original computer
and loss of the data stored locally on it, and also to increase
data availability, Alice’s data is also encrypted and replicated
in other machines. As the private key is difﬁcult to remember
and can also be lost, it is also backed up: Alice split the key
according to a (2,3)-threshold cryptography approach, and
stored that in the network itself.
For enhanced security, each part of the key was encrypted
by a passphrase chosen by Alice, resulting in n = 3
encrypted shares. Each of the three delegates Bob, Carol,
This work was partly supported by the European Commission under the
TEAM project (IST-35111-TEAM) and A-STAR grant No. 072 134 0055
1We will use two terms secret and private key interchangeably henceforth
1063-9527/09 $26.00 © 2009 IEEE
DOI 10.1109/ACSAC.2009.46
419
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 13:14:16 UTC from IEEE Xplore.  Restrictions apply. 
and Dora is asked by Alice to keep a different encrypted
share. These delegates are expected to only send a share to
the user proven to be Alice.
Since the delegates may not know Alice a priori or
they may not be able to meet
in person, they need to
verify Alice’s identity (and thus ownership of the secret).
Automatic veriﬁcation, such as security questions/answers
are applicable. These questions/answers can be possibly
different for each delegate and digitally signed by Alice
to prevent forgery. Upon successful veriﬁcation of Alice’s
identity, a delegate sends back to Alice the locally stored
encrypted share of Alice’s secret. Alice recovers her private
key by getting any two shares from three delegates, which
she can decrypt using her private passphrase.
Unfortunately,
there are several practical problems in
using such a secret sharing scheme in a DOSN scenario.
• Users may be untrustworthy (malicious) when acting
as delegates. An untrustworthy user may keep the
shares to steal the secret for her own purposes, e.g.,
to control and steal Alice’s private data. A user is
untrustworthy either because she is curious or because
her computer is controlled by a malicious software (an
adversary). In the above example, the key of Alice is
lost if (and only if) any k ≥ 2 delegates among Bob,
Carol, and Dora, are untrustworthy.
• The original secret can not be recovered without
enough trustworthy delegates available, e.g., both Bob
and Carol are on vacation and turn off their computers.
Also, delegates may send invalid shares to reject the
owner’s requests, either intentionally or accidental due
to software bugs, network errors, etc.
• The secret owner may forget the passphrase or an-
swers to secret questions, and cannot recover the secret.
The passphrase or these answers may also be lost (weak
passwords) and thus an adversary can easily use this
information to steal the secret (identity theft).
The main focus of this paper is on the ﬁrst issue, as in
online social networks the collusion among malicious del-
egates is even more feasible and detrimental. An adversary
can control a large number of malicious users appearing
as legitimate to coordinate the attack and steal the user’s
key, also performing a Sybil attack by assuming several
identities. Having the private key, the adversary may tweak
security options on the victim’s machine, enabling malicious
applications to control and use that machine for further
attacks. The situation is even worse as a user usually trusts
her friends, unaware of whether their machines are already
under control of an adversary. This viral
infection may
spread through social links rapidly, potentially leading to
an epidemic that at worst case makes the whole system
eventually collapse.
Towards the above problem, most enhancements of
threshold-based secret sharing schemes include the possibil-
ity to verify the validity of a share, to change the threshold
dynamically, or to improve the computational and communi-
cating efﬁciencies of the approach [13]. Current solutions to
protect keys are to encrypt shares with passwords or to use
veriﬁable credentials. The resilience of such protocols under
collusive attacks of malicious nodes are not yet sufﬁciently
studied. There has been little study of how to select the most
reliable delegates under various adversary distributions in a
large distributed network and understand the impact of such
selection to the security level of the whole system. The main
reason for such limitations is that threshold cryptography is
mostly used on systems under control of a single centralized
provider, which is different from our application context.
To improve security of the secret sharing protocol in such
distributed scenarios, we propose in this paper a mechanism
to select the most trustworthy delegates. Delegate trustwor-
thiness is estimated by exploiting relationships among the
secret owner, delegate candidates, and their related friends.
This trust measure minimizes the likelihood of the secret
being stolen by an adversary and is shown to be effective
against various collusive attacks. Extensive simulation shows
that compared to other approaches, e.g.,
[17], our trust-
based selection performs very well in a variety of scenarios
with several nodes under control of the adversary, with
different distributions of adversarial nodes, and even with
the spreading of infection from malicious nodes.
To the best of our knowledge, our approach is among
the ﬁrst ones applying threshold cryptographical protocols to
enable secure secret sharing on distributed social networks.
Our improved secret sharing scheme also has other practical
applications, such as to enable delegated access control
on other distributed systems. For instance, in a P2P-based
content sharing system, a peer may rely on trustworthy
delegates to distribute the data encryption key to those peers
whose identities are unknown beforehand2 yet proven to
be from a subscribed reader group. With the given key,
authorized readers can then decrypt any data replica by the
original author even if the author is unavailable.
To reduce our work scope, we do not focus much on the
second issue: the impacts of delegate availability to recon-
struct the backed-up secrets. In fact, delegate unavailability
is not a major problem in this key recovery scenario, as
such recovery is assumedly unfrequent. Thus, if there are
not enough delegates available at the moment to rebuild the
secret, the owner may simply wait.
The third issue is related to the user’s security awareness,
which is orthogonal to our current problem. Nevertheless,
with a threshold cryptographical approach, even if a user
may choose weak passwords, an adversary must collect at
least k shares and successfully decrypt them to steal the key.
Therefore, using threshold cryptography for key backup is a
generalized and more secured backup procedure compared
2Otherwise, a traditional PKI-based approach can be used, e.g., by
encrypting the key with the public key of the authorized reader.
420
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 13:14:16 UTC from IEEE Xplore.  Restrictions apply. 
to conventional approaches, e.g., to backup the whole key
on a single server on the network.
powerful and our security analysis will be done under such
pessimistic assumptions.
II. SYSTEM MODEL
A. Notations
Denote as U the set of users of an online social network.
Let Df be the set of possible types of relationships among
users, e.g., family, close friends, colleagues, or acquain-
tances. Deﬁne the mapping f : U ×U → Df as relationships
among these users U . A distributed online social networking
platform is formally deﬁned as follows.
Deﬁnition 1: A distributed online social network, or
DOSN for short, is a triple hU, f, RPi, where U is the set
of users or computers and f denotes the social relationships
among them. The mapping RP : U → 2U is the data
replication strategy that deﬁnes the set of nodes in the system
to store data Ru of a user u ∈ U .
Def. 1 associates each user with a node, e.g., her main
working computer, in the underlying distributed storage sys-
tem. This assumption simpliﬁes our problem and subsequent
analysis while still being realistic as most users primarily
use one computer to work. Hence, we will use the notation
peer, node, or user interchangeably in this paper. We are
interested in building a mechanism to share a secret key
in a DOSN platform, with any replication strategy, securely
and effectively under various adversarial attacks.
B. Adversary model
We assume the adversary who wants to steal secrets of
users to have the following capabilities.
A1 The adversary can compromise many nodes (com-
puters of users). Compromised nodes know and collab-
orate well with each other to achieve their goal: to steal
as many secrets as possible.
A2 Delegates of a user are publicly known and thus also
known to the adversary.
A3 The adversary has computational power to perform
dictionary-attacks to decrypt the shares if she obtains
it and can reconstruct the secret successfully. Further-
more, the adversary is cost-insensitive and has as much
time as she wants to complete the attacks.
A4 A user losing her secret may be infected and under
control of the adversary. This leads to the spreading of
infection (more peers become a bad choice as delegates)
that may contaminate the whole network.
The assumption A2 is to enable easy reconstruction of
the secret without requiring each secret owner to remember
her list of delegates. On the negative side, it reduces the
attack cost of an adversary: she does not need to probe many
users to steal a speciﬁc key. A practical system can put
a few extra safe-guards such as not making the delegates
public knowledge, at the cost of increased system design
complexity. In summary, the above adversary is extremely
C. Security of the threshold-based secret sharing
The security and correctness of a (k, n)-threshold-based
secret sharing protocol depend on the number of trustwor-
thy and corrupted delegates in the delegate selection. A
trustworthy delegate sends correct shares only to authorized
requesters. Additionally, trustworthy delegates do not steal
the secret by colluding with others to steal the original secret.
A delegate who is not trustworthy is deﬁned as corrupted
or malicious.
Given the above adversary model, it is possible for an
adversary to decrypt any encrypted share. Thus a (k, n)-
secret-sharing scheme is secured if and only if there are: (1)
at most k − 1 bad delegates; and (2) at least k trustworthy
delegates available in a user’s delegate selection to restore
the secret. Therefore, the remaining and most important
concern of a user is to choose her delegates to prevent
corrupted delegates from stealing her secret by colluding
with others. An approach to this problem is proposed and
analyzed in Section III.
Throughout the paper, we rely on a number of other
assumptions on our environments:
• A message from the owner to an off-line delegate can
be pending. When online again, the delegate pulls all
these off-line messages and processes them accordingly.
• We assume the compromise of a node by an adversary
does not
jeopardize its availability, similar to [17].
This is realistic since if infected machines become
unavailable, e.g., cannot boot up or cannot connect to
the network, this can signal to the owner to scan and
clean her computer from malicious software.
III. SELECTION OF RELIABLE DELEGATES
Due to various privacy and security settings, it is generally
impossible for a user to crawl the whole network and gather
all important information to best select the delegates. For
example, personal data of a user and her relationships with
others in most cases are not publicly available. Therefore, a
user can only use her local knowledge and available public
information in the network in making the delegate selection.
We formally describe such a selection approach as follows.
Consider a DOSN hU, f, RPi as in Def. 1. Denote as
Fu = F 1
u the set of direct friends of a user u. The set of
k-degree friends of u, where k > 1 is recursively deﬁned
as: F k
}. The set of all indirect
friends of u is F ∞
u = {w | w ∈ Fv, v ∈ F k−1
u
k=1 F k
u .
u = S∞
Let P ∞
u be public personal information of users in F ∞
u ⊆
U and denote as f ∞
u the set of connections among them. A
(personalized) algorithm for a user u to select her delegates
is given in Def. 2.
Deﬁnition 2: A delegate selection algorithm of a user u is
deﬁned as an algorithm operating on her personalized view
421
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 13:14:16 UTC from IEEE Xplore.  Restrictions apply. 
u , f ∞
u , P ∞
hF ∞
delegates Du ∈ 2F ∞
u .
u i on the social network and outputs a list of
Let D be a set of delegates selected by u for a (k, n)-
secret-sharing scheme3. Denote as Dc and Da be respec-
tively the number of corrupted and available delegates in
the set D. Also, deﬁne Dat the number of trustworthy and
available delegates in D. Our selection approach relies on
the following concept of ε-security, given in Def. 3.
Deﬁnition 3: (ε-security) The selection D is said to be
ε-secured if and only if the probability that at least k trust-
worthy delegates are available in D is P r(Dat ≥ k) ≥ 1−ε,
where 0  0:
(i) Irrespective of the selection D, T (n, k − 1) and
A(n, n − 2k + 1), where n > 2k − 1, are increasing
functions of k and decreasing functions of n.
(ii) T (n, k − 1) is maximized where D is n delegates
with highest trustworthiness ti among the candidates.
A. Measuring trustworthiness of delegate candidates
Let i be a possible delegate candidate for u. In practice, i
may be a friend of u, or a third-party provider offering data
storage services. The measurement of the trustworthiness ti
of a user i is non-trivial. In our scenario, the notion of trust
between two users is beyond the social trust between people,
3the index u is omitted for presentation clarity
422
since the computer of a highly reliable and trustworthy
friend may still be compromised by an adversary without
the friend’s awareness. Therefore, a user needs a more
appropriate measure to evaluate the trustworthiness of a user
before selecting her as a delegate. More precisely, ti is the
personal belief of u on whether i is likely to be controlled
by an adversary. Such a value ti depends on the following
inﬂuential factors:
• whether the node i is a well-known trusted entity. For
example, nodes from third-party providers offering data
storage services can be seen as less vulnerable as they
are usually equipped with up-to-date security patches
and latest virus deﬁnitions.
• whether i has potential to collude and steal a secret,
since curious friends may collude to get illegitimate
access to unauthorized data. Also, if a user’s friend is
compromised by an adversary, other friends of hers are
also vulnerable to attacks by the same adversary. In
practice, viruses are likely to spread from one friend to
another since people generally trust ﬁles or links sent by
their friends. To minimize the inﬂuence of such attacks,
we should give less trust to those delegates i with