2.3.2 Data Conversion
Since both systems provide solutions for applications integration, it is expected that during
system implementation some sort of data manipulation or data conversion will occur. Since
workflow systems do not require a uniform and interoperable data infrastructure, legacy database
systems can be integrated without any substantial change. For a WfMS, data conversion is not
mandatory; nevertheless, for optimization and organizational purposes, data can be converted
into a more compatible format. On the other hand, ERP systems usually require data conversions
and define an architecture for data storage. As a consequence, legacy databases need to be
replaced with ERP-compatible databases. The conversion task involves standardizing,
transferring, and "cleaning" existing data elements.
3 Application Integration
System interoperability and application integration are critical areas of concern and the cause of
many failures. Recently, Gateway wrote off $140 million from its failed effort to run their on-
line store with a purchased software system [38]. The software did not work well with Gateway’s
existing systems. Another example is the candy maker Hershey Foods. They installed three
software application packages, part of a $112 million system, with disastrous results due to
incompatibilities with other application programs [38].
Both WfMS and ERP systems are promoted based on their application integration capabilities.
It should be clear from previous sections that these two systems have distinct advantages that
could be combined to produce enhanced application integration capabilities. In this section, we
11
discuss how WfMS and ERP systems can be used independently or together to address intra- and
inter-organizational application integration needs. We also discuss the impact of Web Services in
this regard.
3.1 Enterprise Integration
ERP vendors are trying to provide organizations with a total set of integrated applications that
meet all the organizational needs. Although organizations might find it advantageous to interact
with only one vendor, this is not happening because ERP vendors cannot meet the needs in all
the areas with quality software. Even in key ERP domains, companies may buy and integrate
different vendors’ ERP components. For example, the US Navy is moving towards using
PeopleSoft in the human resource area and SAP in the supply area.
One of the key problems developers have with ERP systems is to understand and change the
process flow model embedded in the applications and parameter tables. To address this problem,
a recent trend has been to incorporate workflow components into existing ERP systems. The first
strategy was to bring in a WfMS simply as a stand-alone tool to implement workflows and to use
the WfMS as a documentation aid to document ERP flows.
This strategy has changed to make ERP systems more workflow-driven or workflow-enabled
with the integration of workflow components [39] as indicated by Baan's purchase of COSA[1]
and Oracle's efforts towards integration of ERP into a WfMS mentioned earlier. In order to do
this, ERP vendors need to replace the flow logic embedded in their applications and parameter
tables with a WfMS. The role of the WfMS is to manage the flow logic and invoke applications
when necessary.
Although it appears the full integration of workflow into ERP suites is just getting started, we
see this pattern continuing. The movement to the two-level programming model utilized by
WfMS (i.e., separation of flow logic from function logic) enables the creation and integration of
applications with a higher degree of agility to respond to business needs.
WfMSs can provide an important enterprise integration function by themselves. Workflow
systems can orchestrate and start other applications such as spreadsheets, legacy systems, ERP
systems, etc. This capability makes them ideal for implementing workflows involving systems
and applications, described previously in Section 2.2 as Type 2 systems. Thus, a WfMS acting
in this mode could be viewed as a type of “middleware” platform serving to integrate diverse
applications such as legacy applications [35] and ERP applications [2].
In the practitioner literature, the systems used to develop this type of workflow applications
are referred to as “Enterprise Application Integration” (EAI) [40] and “Business Process
Management” (BPM) [41] tools or systems. These systems are often labeled the second
generation WfMSs because they provide much richer integration capabilities than traditional
WfMSs. Slater [46] cites an EAI example from Bose where two legacy call center applications
and an e-Commerce Web application are linked to an underlying database that is connected to an
ERP system. They are linked by an EAI toolset such as the one available from SeeBeyond [42].
As with most workflow systems, EAI/BPM systems implementers use a graphical tool to
model processes (see Figure 2). A process model can be constructed, changed, or adapted
through a GUI interface. When alterations are made, the EAI/BPM software reflects the changes
correctly in its code for routing or transforming data. In these types of applications, the nodes in
a process model represent different external systems or applications. Using this approach, it is
possible to continue using existing applications, including ERP systems, underneath the
12
workflow layer and use EAI/BPM to manage and change processes. Workflow systems, such as
EAI/BPM, provide an important enterprise integration function.
3.2 E-Commerce: Value/Supply Chain Integration
Interoperability is a key issue in e-Commerce because more and more companies are creating
B2B (Business-to-Business) links to better manage their value chain. In order for these B2B
links to be successful, heterogeneous systems from multiple companies need to interoperate
seamlessly. Automating inter-organizational processes across supply chains presents significant
challenges [2]. These processes are often complex and involve more varieties of systems than
enterprise integration.
ERP vendors have moved into the supply chain management area. The integration of ERP
systems into a supply chain is a complex task. ERP modules are designed to reflect a particular
way of doing business. Organizations must usually adapt to the ERP system and not vice versa.
This philosophy makes the integration of two or more different businesses in the supply chain
difficult. One of the questions that arises is which ERP business model to select. Consider the
case of integrating two ERP systems in a supply chain. If the two systems are from the same
vendor, the integration can be achieved after the two application models involved are modified
and connected. But, if the two ERP systems have a different architecture because they are from
different vendors, the integration can be very difficult to achieve.
However, using a workflow system to integrate a supply chain may be simpler than using an
ERP system. A WfMS can work as a bridge between two or more organizations. The approach
we outlined above for enterprise integration can be applied to e-Commerce as well. Remember
that a WfMS does not require a radical change to basic applications and data infrastructures of
organizations. Instead, a workflow process that spans organizations is created on top of the
supply chain topology. This workflow interoperation capability can be applied to link and
manage the control and data flows between two or more ERP systems.
There are ongoing efforts in the workflow area to develop systems specifically designed for e-
Commerce workflows [2, 36]. The EAI/BPM tools discussed above are also used to provide real-
time management of B2B processes. However, the future development in this area will come
from the implementation of Web Services.
3.3 Web Services: the Future of Application Integration
The biggest providers of computer software and services are making large investments to support
and promote something call Web Services [43]. What they are promoting is a whole new
approach to information systems (IS) and IS architecture. The approach goes by different names:
IBM calls it “Web Services,” Microsoft refers to it as “.Net,” Oracle calls it “Network Services,”
and Sun talks about an “Open Network Environment.” Web Services promise to enable
organizations to integrate and reuse software already built and reduce the hassle and expense of
systems integration. In this section, we briefly explain the Web Services architecture, its role in
enterprise and supply chain integration, and the role of workflow and ERP technology within it.
At the foundation of Web Services architecture are software standards and communication
protocols, such as XML and SOAP [44], which allow information to be accessed and exchanged
easily among different programs. These tools allow applications to communicate with each other
13
regardless of the programming languages they were written in or the platform they were
developed for. Web Services are not used to build monolithic systems; they are a set of tools
used to stitch together existing applications to create new distributed systems.
In terms of integration, Web Services provide a core architecture that allows any two Web
applications to talk to each other. Thus, it offers an important solution to enterprise and e-
Commerce application integration. Several researchers have identified workflows as the
computing model that enables a standard method of building Web Services applications and
processes to connect and exchange information over the Web [45-47]. We briefly addressed this
application of workflow technology when discussing EAI/BPM systems in the Enterprise
Integration section. Leymann et al. [48] provide a comprehensive overview of the role of
workflow technology in Web Services and how it is being implemented in IBM’s approach.
Once the applications or Web services are identified, a process flow model (similar in format
to the one in Figure 2) depicting the business process is constructed. Based on this model, the
WfMS automatically generates the appropriate code to coordinate the flow of data and
messaging between the Web applications using standards defined in the foundational level of the
Web Service architecture. At runtime, the WfMS reads the flow model specification and
transparently schedules Web services for execution.
An additional advantage of workflow technology is that once the workflow model is
implemented, suitable tools are available to manage the execution of business processes. This
can be accomplished by defining events in the business flow model that can be used to report on
progress of individual processes or overall aggregate process execution. In the IBM Web
Services architecture these progress reports are collected by a dashboard infrastructure [48]. The
dashboard provides a high-level summary of process status and also provides drill down
capability to perform a detailed analysis of specific applications and activities.
Currently, Web Services implementations only support limited integration capabilities as an
alternative to the EAI/BPM tools discussed earlier. However, most current Web Service
implementations are not using workflow technologies, which are available in some EAI/BPM
tools. Integration of applications in current Web Services is accomplished at the programming
level, not through a flow model.
In late 2002, we are starting to see Web Services architectures that integrate workflow
components. IBM released the latest version of its application server environment for
implementing Web Services, WebSphere 5.0. For the first time, we find at the core of
WebSphere 5.0 a workflow engine built around an emerging specification language called
Business Process Execution Language for Web Services (BPEL4WS). The key to developing the
workflow component of Web Services is a standard workflow or Web Services specification
language. This area is still under development and no definitive standards exist today. However,
there are proposals currently being considered. The two more prominent process specifications
include BPEL4WS (mentioned above) and DAML-S. (A comprehensive review of specification
languages and standards issues is presented in [49].)
At the heart of current EAI/BPM software and future Web Services is a process-centric
approach to integration, which represents a movement away from the data-centric approach of
ERP systems. In the past, to get the integration desired, customers had to rely on a particular
suite of applications – based on proprietary interfaces – from a single ERP vendor. However, the
trade-off for the customers was that not all applications in a suite were best-of-breed. Many
companies are starting to seek out best-of-breed applications and move away from ERP suites
because of greater flexibility, deeper functionality, lower cost, and ease of implementation with
specific applications [50]. Although ERP systems have solved many integration problems, most
14
large companies still have a hodgepodge of non-integrated systems. Thus, many companies will
continue to face major integration problems. Many companies see Web Services, not ERP suites,
as a way to handle these integration problems [50].
ERP vendors argue that the best-of-breed approach will result in higher costs of integration,
lots of data integration, and having to deal with multiple vendors [50]. The latter assertion is true.
However, early evidence shows that Web Services will be a cheaper approach to integration [50].
As for data integration, this is the strength of the ERP approach. The question to explore is: Is
data integration really needed at the transactional level? Many of the data integration needs are
to support data mining of historical transactions and other data. An alternative data integration
approach, which many companies are exploring, is to handle these retrieval needs with data
warehousing technology.
ERP systems will not go away! They provide a solid core infrastructure in many organizations.
However, their role, especially in terms of integration, is changing. As discussed in previous
section, it appears that ERP vendors are moving to workflow-enable ERP applications to make
them available as Web services. Thus, ERP applications will be potential components in
component-based systems made possible by Web Services. WfMSs will also be potential
components. However, WfMS technology will also provide a core technology around which
future system integration efforts will be based. Thus, WfMS and ERP technologies will be
combined in new ways using the Web Services framework to enhance application integration
capabilities.
4 Implications for Research and Education
Stohr and Zhao [2] and Basu and Kumar [39] outlined key research issues in the workflow area.
Although the integration issues previously discussed were cited as critical research areas in these
articles, the key emerging role of workflow technology in EAI and Web Services and the
relationship between WfMS and ERP systems were not mentioned with the exception that Basu
and Kumar briefly mentioning the need to research how to workflow-enable existing ERP
systems. Thus, we would add these items to these research agendas.
Stohr and Zhao note that most academic research in workflow area has been done in Europe
and the research appears mostly in the Computer Science literature. It is interesting to note that
most ERP research has taken place in the United States and appears in IS journals, while ERP
research is relatively unknown in Computer Science. However, both WfMS and ERP researchers
have a common interest in information technology that focuses on process improvement and
management. Thus, there is a need to see integrated research teams, from Computer Science and
IS, attack some of the key workflow issues and challenges. The authors of this paper, two
computer scientists (a researcher and a Professor/Entrepreneur) and an IS Professor, are a good
example of such an integrated team.
Stohr and Zhao [2] list three major WfMS research areas: technical issues, management and
organizational issues, and market, economic and social issues. Technical issues have received the
most focus since they are the primary interest in Computer Science. ERP researchers in IS bring
important expertise, relevant research models, and empirical data in the latter two research areas.