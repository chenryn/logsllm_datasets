## Page 343
附录日
strategy
druid.indexer.autoscale.
配置项
RunnerNumThreads
druid.indexer.runner.pendingTasks
LinkTimeout
druid.indexer.runner.taskShutdown-
Timeout
druid.indexer.runner.taskCleanup-
druid.indexer.runner.maxZnodeBytes
druid.indexer.runner.compressZnodes
druid.indexer.runner.minWorkerVersion
Timeout
druid.indexer.runner.taskAssignment-
配置项
SyncRate
druid.indexer.queue.storage-
Delay
druid.indexer.queue.restart-
druid.indexer.queue.startDe-
配置项
启用autoscale时的附加配置如下。
以下是Overlord的运行模式为
B
常用参数表
在AWSEC2上，
自动伸缩策略。可选“ec2”
描
同步Overlord的状态到底层持久化存储的频率
在队列管理过程中发生异营
Overlord进行队列管理之前的休眠时间
述
描述
处理分配任务给MiddleManager的并发线程
发起shutdown请求以后的等待超时时间
务置为fail
等待多长时间执行清理工作，将其附属的任
MiddleManager和Zookeeper链接断开以后，
Zookeeper中Znode的内容最大字节数
ager 对 Znode的内容进行压缩
布尔型标志，Overlord是否允许MiddleMan-
MiddleManager最小版本
分配任务给 Middle Manager时，允许运行的
时以后抛出Error
数
分配任务给MiddleManager的超时时间，走
描
述
自动申请EC2实例
时的配置。
常以后重试的等待时间
和
I“noop"，ec2适合部署
超
noop
默认值
PTIM
PT130S
PT1M
默认值
PTIM
PT15M
524288
true
PT5M
默认值
续表
319
---
## Page 344
下所有提及的Worker，均可认为是Middle Manager。
1.动态配置
320
X-Druid-Comment
X-Druid-Author
Http Header参数
workerPort
druid.indexer.autoscale.
workerVersion
druid.indexer.autoscale.
pendingTaskTimeout
druid.indexer.autoscale.
numEventsToTrack
druid.indexer.autoscale.
maxScalingDuration
druid.indexer.autoscale.
workerIdleTimeout
druid.indexer.autoscale.
terminatePeriod
druid.indexer.autoscale.
provisionPeriod
druid.indexer.autoscale.
doAutoscale
druid.indexer.autoscale.
配置项
可以在HttpHeader中添加审计相关参数。
http://:/druid/indexer/v1/worker
通过POST方式将一个JSON对象提交到如下URL：
Overlord可以通过调用HTTP接口的方式来动态调整Worker的行为。需要指出的是，以
自动伸缩设置以后，创建的 Middle Manager的监听端
处于pending状态的任务等待多长时间以后尝试自动
跟踪自动伸缩相关事件（节点创建或销毁）的数量
等待MiddleManger
定时检测是否要删除Worker
定时检测是否需要添加新的MiddleManager
口号
的版本，
设置该值后
MiddleManager
是否进行自动伸缩
伸缩
描述
可以
修改评语
修改配置的人
模式
可以动态调整
考虑被终
影响
空
闲
自动伸缩创建的MiddleManager
启动的最长时间，
1（没有运行任务）的时间超过该
Druid实时大数据分析原理与实践
默认值
超过则放弃
8080
null
PT30S
10
PT15M
PT90M
PT5M
PTIM
false
默认值
续表
---
## Page 345
逊云的EC2，你需要扩展代码，使自动伸缩特性运行在其他云环境中。
附录B常用参数表
'autoScaler":
"selectStrategy":
"type":"ec2",
"affinityConfig":{
"type":"fillCapacityWithAffinity"
"minNumWorkers":
Worker配置规范的样例如下：
提交GET请求到相同的URL，会返回Worker的当前配置规范。上述配置只适用于亚马
"envConfig":{
'maxNumWorkers": 12,
"availabilityZone": "us-east-1a",
"affinity":{
userData":{
nodeData":{
"versionReplacementString":":VERSION:",
"data":"${SCRIPT_COMMAND}"
"impl":
"keyName": $[KEY_NAME}
"instanceType":
"amiId":"${AMI}"
"datasourcel": ["host1:port",
"version":null
"securityGroupIds": ["${IDs}"],
"maxInstances.":
"minInstances":
"string"
"c3.8xlarge",
"host2:port"],
---
## Page 346
体配置。
前使用容量排序，
2.Worker选择策略
Millis”的值，默认值为P1W。
322
type
配置项
type
配置项
autoScaler
selectStrategy
配置项
在 Fil Capacity的基础上，
(2） Fill Capacity With Affinity
优先将一个Worker的容量分配满，才分配给下一个Worker。分配时先将Worker按照当
（1）Fill Capacity
想要查看最近n条审计历史，发送GET请求到如下URL：
interval默认采用Overlord的运行时配置属性文件中的“druid.audit.manager.auditHistory-
http://:/druid/indexer/vl/worker/history?count=n
http://:/druid/indexer/v1/worker/history?interval=
想要查看Worker配置的审计历史，
Worker配置规范描述如下。
描述
fllCapacityWithAffinity
自动伸缩相关
tribution 和 javascript
fillCapacity、fillCapacityWithAffnity、equalDis-
给MidleManager分配任务的策略，可选项有
，把任务分配给当前使用量最大的Worker。
描述
fillCapacity
描述
，优先根据DataSource的亲缘性选择Worker。先来了解一下具
，发送GET请求到如下URL：
必须是fillCapacity
默认值
仅当开启自动伸缩以后有效
fillCapacity
默认值
Druid实时大数据分析原理与实践
CapacityWithAffinity
必选项，而且必须是ll-
默认值
---
## Page 347
块的方式，
附录B常用参数表
灵活地实现。
type
配置项
affinity
配置项
它适用于Worker选取逻辑简单但又经常变更的场景，通过JavaScript 函数的方式快速，
函数的返回值为workerld，或Null，说明没有可用的Worker。
·task，要分配执行的任务。
·zkWorkers，workerld到可用Worker的Map结构。
采用JavaScript函数实现自定义选取Worker的逻辑，函数需要传入三个参数。
(4）javascript
均匀分布策略，把任务优先分配给最小使用容量的Worker。
（3）Equal Distribution
·在整个集群上使用Fill Capacity策略选取Worker。
·根据DataSource在affinity中查找，如果存在，则根据其对应的MidleManager列表中
Fill CapacityWithAfinity的选取规则如下：
为空或者DataSource不存在，则进人下一步。
“"host”和“port”在集群中不存在，则会导致affinityWorkers为空。如果affnityWorkers
不为空，则在afinityWorkers上执行Fill Capacity策略选取Worker。如果 affinity中的
的“host”和“port”在集群中查找Worker，转换成affinityWorkers，如果affinityWorkers
，扩展当前的Worker选取策略。
映射，是一个Map的JSON对象，格式见上述配置，Druid不
描述
的值一致
会执行DNS解析，所以“host”必须和Middle Manager配置
亲缘性，它记录DataSource和对应的MiddleManager列表的
。如果逻辑复杂，且又不能简单地在JavaScript环境下测试，则最好使用扩展模
equalDistribution
描述
必选项，而且必须是equalDistribution
默认值
0
默认值
续表
323
---
## Page 348
B.8
324
javaOpts
druid.indexer.runner.
javaCommand
druid.indexer.runner.
classpath
druid.indexer.runner.
compressZnodes
druid.indexer.runner.
allowedPrefixes
druid.indexer.runner.
配置项
nodeData
availabilityZone
maxNum Workers
minNum Workers
配置项
function
type
配置项
MiddleManager可以把它的配置传递给其启动的Peon进程。MidleManager的配置如下。
当前只有亚马逊云中的EC2能使用autoscalar。
(5）autoscaler
自定义的JavaScript 函数
javascript
描述
给Peon使用的JVM参数，已废弃，鼓
Peon的 classpath
MiddleManager对Znode是否使用压缩
传递给Peon使用的属性前缀白名单
描述如何启动Node的JSON对象
EC2环境配置
励使用javaOptsArray
Java的执行命令
描述
集群中Worker数量的最大值
集群中Worker数量的最小值
描述
必选项，而且必须是javascript
默认值
Druid实时大数据分析原理与实践
11
java
class.path")
System.getProperty("java.
true
"fle.encoding"
"io.druid","user.timezone",
"com.metamx","druid",
默认值
必选项，none
none
0
默认值
---
## Page 349
druid.indexer.fork.property
中显式地配置Peon的参数。
B.9
附录B
druid.indexer.task.baseDir
druid.peon.mode
配置项
druid.worker.capacity
druid.worker.version
druid.worker.ip
aratelngestionEndpoint
druid.indexer.runner.sep-
startPort
druid.indexer.runner.
maxZnodeBytes
druid.indexer.runner.
javaOptsArray
druid.indexer.runner.