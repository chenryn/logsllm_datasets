[5] Giuseppe Ateniese, Randal Burns, Reza Curtmola, Joseph Herring, Lea Kissner,
Zachary Peterson, and Dawn Song. 2007. Provable Data Possession at Untrusted
Stores. In Proceedings of the 14th ACM Conference on Computer and Communica-
tions Security (CCS).
[6] Alysson Neves Bessani, Miguel P. Correia, Bruno Quaresma, Fernando André, and
Paulo Sousa. 2011. DepSky: dependable and secure storage in a cloud-of-clouds.
In Proceedings of the 6th European Conference on Computer systems (EuroSys).
[7] Kevin D. Bowers, Ari Juels, and Alina Oprea. 2009. HAIL: A High-Availability
and Integrity Layer for Cloud Storage. In Proceedings of the 16th ACM Conference
on Computer and Communications Security (CCS).
[8] Kevin R.B. Butler, Stephen McLaughlin, and Patrick D. McDaniel. 2008. Rootkit-
Resistant Disks. In Proceedings of the 15th ACM Conference on Computer and
Communications Security (CCS).
[9] Brad Calder, Ju Wang, Aaron Ogus, Niranjan Nilakantan, Arild Skjolsvold, Sam
McKelvie, Yikang Xu, Shashwat Srivastav, Jiesheng Wu, Huseyin Simitci, Jaidev
Haridas, Chakravarthy Uddaraju, Hemal Khatri, Andrew Edwards, Vaman Be-
dekar, Shane Mainali, Rafay Abbasi, Arpit Agarwal, Mian Fahim ul Haq, Muham-
mad Ikram ul Haq, Deepali Bhardwaj, Sowmya Dayanand, Anitha Adusumilli,
Marvin McNett, Sriram Sankaran, Kavitha Manivannan, and Leonidas Rigas. 2011.
Windows Azure Storage: a highly available cloud storage service with strong
consistency. In Proceedings of the 23rd ACM Symposium on Operating Systems
Principles (SOSP).
[10] Andrea Continella, Alessandro Guagnelli, Giovanni Zingaro, Giulio De Pasquale,
Alessandro Barenghi, Stefano Zanero, and Federico Maggi. 2016. ShieldFS: A
Self-Healing, Ransomware-Aware Filesystem. In Proceedings of the 32nd Annual
Conference on Computer Security Applications (ACSAC).
[11] Ariel J. Feldman, William P. Zeller, Michael J. Freedman, and Edward W. Fel-
ten. 2010. SPORC: Group Collaboration using Untrusted Cloud Resources. In
Proceedings of the 9th USENIX Symposium on Operating Systems Design and Im-
plementation (OSDI).
[12] Scott Ferguson and Doug Olenick. 2021. FBI: DarkSide Ransomware Used
in Colonial Pipeline Attack.
https://www.bankinfosecurity.com/fbi-
darkside-ransomware-used-in-colonial-pipeline-attack-a-16555 (last accessed:
06/18/2021).
[13] A. Gheorghe, C. Crecana, C. Negru, F. Pop, and C. Dobre. 2019. Decentralized
Storage System for Edge Computing. In Proceedings of the 18th International
Symposium on Parallel and Distributed Computing (ISPDC).
[14] Eu-Jin Goh, Hovav Shacham, Nagendra Modadugu, and Dan Boneh. 2003. SiRiUS:
Securing Remote Untrusted Storage. In Proceedings of the 10th Symposium on
Network and Distributed System Security (NDSS).
[15] José Antonio Gómez-Hernández, L. Álvarez-González, and Pedro García-Teodoro.
2018. R-Locker: Thwarting ransomware action through a honeyfile-based ap-
proach. Computer Security 73 (2018), 389–398.
[16] Jonathan Greig. 2020. Ukrainian police partner with US, South Korea for raid on
Clop ransomware members. https://www.zdnet.com/article/ukranian-police-
partner-with-us-south-korea-for-raid-on-clop-ransomware-members/ (last ac-
cessed: 06/18/2021).
[17] Harshit Gupta and Umakishore Ramachandran. 2018.
FogStore: A Geo-
Distributed Key-Value Store Guaranteeing Low Latency for Strongly Consistent
Access. In Proceedings of the 12th ACM International Conference on Distributed
and Event-Based Systems (DEBS).
[18] Manabu Hirano and Ryotaro Kobayashi. 2019. Machine Learning Based Ran-
somware Detection Using Storage Access Patterns Obtained From Live-forensic
Hypervisor. In Proceedings of the 6th International Conference on Internet of Things:
Systems, Management and Security (IOTSMS).
[19] Jian Huang, Jun Xu, Xinyu Xing, Peng Liu, and Moinuddin K. Qureshi. 2017.
FlashGuard: Leveraging Intrinsic Flash Properties to Defend Against Encryption
Ransomware. In Proceedings of the 2017 ACM SIGSAC Conference on Computer
and Communications Security (CCS).
[20] Ari Juels and Burton S. Kaliski Jr. 2007. PORs: Proofs of Retrievability for Large
Files. In Proceedings of the 14th ACM Conference on Computer and Communications
Security (CCS).
[21] Mahesh Kallahalla, Erik Riedel, Ram Swaminathan, Qian Wang, and Kevin Fu.
2003. Plutus: Scalable Secure File Sharing on Untrusted Storage. In Proceedings
of the 2nd USENIX Conference on File and Storage Technologies (FAST).
[22] Amin Kharraz, Sajjad Arshad, Collin Mulliner, William Robertson, and Engin
Kirda. 2016. UNVEIL: A Large-Scale, Automated Approach to Detecting Ran-
somware. In Proceedings of the 25th USENIX Conference on Security Symposium
(SEC).
[23] Amin Kharraz and E. Kirda. 2017. Redemption: Real-Time Protection Against
Ransomware at End-Hosts. In Proceedings of the 20th International Symposium on
Research in Attacks, Intrusions, and Defenses (RAID).
[24] Eugene Kolodenker, William Koch, Gianluca Stringhini, and Manuel Egele. 2017.
PayBreak: Defense Against Cryptographic Ransomware. In Proceedings of the 2017
ACM on Asia Conference on Computer and Communications Security (ASIACCS).
[25] Michael Kozuch and M. Satyanarayanan. 2002. Internet Suspend/Resume. In Pro-
ceedings of the 4th IEEE Workshop on Mobile Computing Systems and Applications
(WMCSA).
[26] Robert Krahn, Bohdan Trach, Anjo Vahldiek-Oberwagner, Thomas Knauth,
Pramod Bhatotia, and Christof Fetzer. 2018. Pesos: Policy Enhanced Secure
Object Store. In Proceedings of the 13th European conference on Computer systems
(EuroSys).
[27] Jinyuan Li, Maxwell Krohn, David Mazières, and Dennis Shasha. 2004. Secure
Untrusted Data Repository (SUNDR). In Proceedings of the 6th USENIX Symposium
on Operating Systems Design and Implementation (OSDI).
[28] Prince Mahajan, Srinath T. V. Setty, Sangmin Lee, Allen Clement, Lorenzo Alvisi,
Michael Dahlin, and Michael Walfish. 2010. Depot: Cloud Storage with Minimal
Trust. In Proceedings of the 9th USENIX Symposium on Operating Systems Design
and Implementation (OSDI).
[29] Fior Markets. 2021. Global Virtual Desktop Infrastructure Market Is Expected to
Reach USD 38.41 billion by 2027 : Fior Markets. https://www.globenewswire.com/
news-release/2021/02/05/2170486/0/en/Global-Virtual-Desktop-Infrastructure-
Market-Is-Expected-to-Reach-USD-38-41-billion-by-2027-Fior-Markets.html
(last accessed: 06/18/2021).
[30] Shagufta Mehnaz, Anand Mudgerikar, and Elisa Bertino. 2018. RWGuard: A Real-
Time Detection System Against Cryptographic Ransomware. In Proceedings of
the 21st International Symposium on Research in Attacks, Intrusions, and Defenses
(RAID).
[31] Daniel Morato, Eduardo Berrueta, Eduardo Magaña, and Mikel Izal. 2018. Ran-
somware early detection by the analysis of file sharing traffic. Journal of Network
and Computer Applications 124 (2018), 14–32.
[32] Constantine Sapuntzakis, David Brumley, Ramesh Chandra, Nickolai Zeldovich,
Jim Chow, Monica S. Lam, and Mendel Rosenblum. 2003. Virtual Appliances for
Deploying and Maintaining Software. In Proceedings of the 16th Large Installation
Systems Administration Conference (LISA).
[33] Mahadev Satyanarayanan, Thomas Eiszler, Jan Harkes, Haithem Turki, and
Ziqiang Feng. 2020. Edge Computing for Legacy Applications. IEEE Pervasive
Computing 19, 4 (2020), 19–28.
[34] Nolen Scaife, Henry Carter, Patrick Traynor, and Kevin R. B. Butler. 2016. Cryp-
toLock (and Drop It): Stopping Ransomware Attacks on User Data. In Proceedings
of the 36th International Conference on Distributed Computing Systems (ICDCS).
[35] Help Net Security. 2020. The ransomware plague cost the world over $1 bil-
lion. https://www.helpnetsecurity.com/2020/11/26/ransomware-cost-2020/ (last
accessed: 06/18/2021).
[36] Daniele Sgandurra, Luis Muñoz-González, Rabih Mohsen, and Emil C. Lupu. 2016.
Automated Dynamic Analysis of Ransomware: Benefits, Limitations and use for
Detection. CoRR abs/1609.03020 (2016).
ings.
06/18/2021).
[37] SNIR BEN SHIMOL. 2021. How Dropbox sacrifices user privacy for cost sav-
https://www.varonis.com/blog/darkside-ransomware/ (last accessed:
[38] Alexander Shraer, Christian Cachin, Asaf Cidon, Idit Keidar, Yan Michalevsky,
and Dani Shaket. 2010. Venus: Verification for Untrusted Cloud Storage. In
Proceedings of the 2010 ACM Workshop on Cloud Computing Security Workshop
(CCSW).
[39] John D. Strunk, Garth R. Goodson, Michael L. Scheinholtz, Craig A. N. Soules, and
Gregory R. Ganger. 2000. Self-Securing Storage: Protecting Data in Compromised
System. In Proceedings of the 4th Conference on Symposium on Operating System
Design and Implementation (OSDI).
[40] Pedro Tavares. 2020. Ragnar locker malware: what it is, how it works and
how to prevent it | Malware spotlight. https://resources.infosecinstitute.com/
topic/ragnar-locker-malware-what-it-is-how-it-works-and-how-to-prevent-
it-malware-spotlight/ (last accessed: 06/18/2021).
[41] Animesh Trivedi, Lin Wang, Henri E. Bal, and Alexandru Iosup. 2020. Sharing
and Caring of Data at the Edge. In Proceedings of the 3rd USENIX Workshop on
Hot Topics in Edge Computing (HotEdge).
[42] Marten van Dijk, Ari Juels, Alina Oprea, Ronald L. Rivest, Emil Stefanov, and
Nikos Triandopoulos. 2012. Hourglass Schemes: How to Prove that Cloud Files
Are Encrypted. In Proceedings of the 19th ACM Conference on Computer and
Communications Security (CCS).
[43] Yang Wang, Manos Kapritsos, Zuocheng Ren, Prince Mahajan, Jeevitha
Kirubanandam, Lorenzo Alvisi, and Mike Dahlin. 2013. Robustness in the Salus
Scalable Block Store. In Proceedings of the 10th USENIX conference on Networked
Systems Design and Implementation (NSDI).
295ACSAC ’21, December 6–10, 2021, Virtual Event, USA
Beom Heyn Kim and Hyoungshick Kim
arbitrary ex . B downloads the uploaded mutation snapshots so ap-
plies a consistent totally-ordered write sequence W1, . . . ,Wx where
x ≥ i. Hence, W1, . . . ,Wi−1,Wi must be a prefix of W1, . . . ,Wx .
However, because W1, . . . ,Wx is a consistent totally-ordered write
sequence, it contradicts our assumption.
□
Also, we prove that Rocky can recover the block device that is
coherent with minimal data loss even if some endpoints failed along
with the cloud storage.
Theorem 4. A recovered Rocky block device is the latest coherent
block device recoverable with the given recovery committee.
Proof. By contradiction, suppose the ex cannot be the maxi-
mum epoch in the longest prefix of epochs starting at e2. However,
Step 3 of IRP ensures that every contiguous subsequent epoch
starting at e2 are in L, contradicting our assumption.
□
[44] A. Young and Moti Yung. 1996. Cryptovirology: extortion-based security threats
and countermeasures. In Proceedings of the 1996 IEEE Symposium on Security and
Privacy.
[45] Lianying Zhao and Mohammad Mannan. 2019. TEE-aided Write Protection
Against Privileged Data Tampering. CoRR abs/1905.10723 (2019).
A CORRECTNESS PROOF
We define a block device to be coherent if and only if there exists a
consistent totally-ordered write sequence transitioned the state of
the block device.
Theorem 1. Under normal circumstances with no failure, Rocky
maintains a coherent block device.
i
i
containing W ′
i
Proof. By contradiction, suppose a Rocky block device, B, is
not coherent after applying a state mutation Mi where 0 < i < n.
Because B is not coherent after applying Mi, Mi should contain
a write sequence Wi that is deviated from a W ′
contained in M′
such that W1, . . . ,Wi−1,W ′
i
is the consistent totally-ordered write
sequence. Step 2 of PMSUP has oi upload M′
to its
EBSS and CBSS. There are two possibilities for B to apply mutation
snapshots. First, at Step 4 of PPP, B downloads M′
to
i
its RBS. Second, while B is the owner, B accordingly fetches blocks
in M′
from CBSS on demand. By construction, for ei, B always
applies blocks written by W ′
i
but never by Wi, which contradicts
i
our assumption. Thus, there is no Rocky block device that is not
coherent.
□
Theorem 2. Assuming an anti-malware correctly pinpoints and
notifies with the epoch during which the tampering attack has first
begun, Rocky can recover from tampering attacks by restoring an
coherent block device which is not tampered.
i
and apply W ′
i
Proof. Let us call a Rocky block device as B which has the initial
state S0. Suppose B’s state changes from Si−1 to Si after applying
the mutation snapshot Mi containing writes tampering user data
occurred during the epoch ei. Then, the anti-malware notifies Rocky
endpoints with the epoch ei to indicate when tampering attacks
began. Rocky runs the tampering attack recovery procedure and
rolls back B’s state to become Si−1. By contradiction, suppose Si−1
is tampered. That is, there must exist at least one mutation snapshot
Mt that tampered the block device state from St−1 to St for 0 ≤
t ≤ i − 1. It means that there was an epoch et earlier than ei
that the anti-malware notifies as the first epoch when tampering
attacks began. Therefore, it contradicts to our assumption on the
anti-malware.
□
Below, we prove that Rocky can successfully recover from the
cloud storage failures while there is no tampering attack.
Theorem 3. Rocky can recover from failures with a coherent block
device.
Proof. By contradiction, suppose a Rocky block device, B, be-
comes not coherent during the failure recovery right after applying
a mutation snapshot Mi. That is, W1, . . . ,Wi−1,Wi applied to B is
not a consistent totally-ordered write sequence. At Step 2 of IRP, l2
uploads EBSS that contains a consistent totally-ordered write se-
quence upto e2 as a new CBSS to the cloud storage. Moreover, at Step
3 of FRP, endpoints upload mutation snapshots which collectively
contain a consistent totally-ordered write sequence from e2 +1 to an
296