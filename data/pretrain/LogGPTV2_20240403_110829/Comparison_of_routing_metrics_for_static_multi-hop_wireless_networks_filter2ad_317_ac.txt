i
t
(
h
d
w
d
n
a
B
35000
30000
25000
20000
15000
10000
5000
0
0
2
4
6
8
10
12
14
Time (Hours)
)
s
p
b
K
i
t
(
h
d
w
d
n
a
B
35000
30000
25000
20000
15000
10000
5000
0
0
2
4
6
8
10
12
14
Time (Hours)
)
s
p
b
M
(
h
t
i
d
w
d
n
a
B
.
g
v
A
30
25
20
15
10
5
0
0
10
5
Avg. Bandwidth (Mbps)
15
20
25
30
Figure 4: The bandwidth of the
link from node 65 to node 100 is
relatively stable.
Figure 5: The bandwidth of the
link from node 68 to node 66 varies
over time.
Figure 6: For many node pairs,
the bandwidths of the two links be-
tween the nodes is unequal.
)
s
p
b
K
(
t
u
p
h
g
u
o
r
h
T
2000
1500
1000
500
0
HOP
ETX
RTT
PktPair
Metric
s
h
t
a
P
f
o
r
e
b
m
u
N
30
25
20
15
10
5
0
HOP
ETX
RTT
PktPair
Metric
)
s
p
o
H
(
h
t
g
n
e
L
h
t
a
P
6
5
4
3
2
1
0
HOP
ETX
RTT
PktPair
Metric
Figure 7: All pairs: Median
throughput of TCP transfer.
Figure 8: All Pairs: Median num-
ber of paths per TCP transfer.
Figure 9: All pairs: Median path
length of a TCP transfer.
X
T
E
r
e
d
n
u
h
t
g
n
e
L
h
t
a
P
8
7
6
5
4
3
2
1
0
0
1
2
3
4
5
6
7
8
Path Length under HOP
Figure 10: All Pairs: Comparison of HOP and
ETX path lengths. ETX consistently uses longer
paths than HOP.
a 5-hop diameter [8]. As we discuss below, ETX’s improve-
ment over HOP is more pronounced at longer path lengths.
The RTT metric gives the worst performance among the
four metrics. This is due to the phenomenon of self-interference
that we previously noted in Section 2.2. The phenomenon
manifests itself in the number of paths taken by the connec-
tion. At the beginning the connection uses a certain path.
However, due to self-interference, the metric on this path
soon rises. The connection then chooses another path. This
is illustrated in Figure 8. The graph shows the median num-
ber of paths taken by a connection. The RTT metric uses
far more paths per connection than other metrics. The HOP
metric uses the least number of paths per connection - the
median is just 1.
The PktPair metric performs better than RTT, but worse
than both HOP and ETX. This is again due to the phe-
nomenon of self-interference. While the RTT metric suﬀers
from self-interference on all hops along the path, the PktPair
metric eliminates the self-interference problem on the ﬁrst
hop. The impact of this can be seen in the median number
of paths (12) tried by a connection using the PktPair met-
ric. This number is lower than median using RTT (20.5),
but substantially higher than HOP and ETX.
Note that the ETX metric also uses several paths per con-
nection: the median is 4. This is because for a given node
pair, multiple paths that are essentially equivalent can ex-
ist between them. There are several such node pairs in our
testbed. Small ﬂuctuations in the metric values of equiv-
alent paths can make ETX choose one path over another.
We plan to investigate route damping strategies to alleviate
this problem.
The self-interference, and consequent route ﬂapping ex-
perienced the RTT metric has also been observed in wired
networks [18, 2]. In [18], the authors propose to solve the
problem by converting the RTT to utilization, and normal-
izing the resulting value for use as a route metric. In [2], the
authors propose to use hysteresis to alleviate route ﬂapping.
We are currently investigating these techniques further. Our
initial results show that hysteresis may reduce the severity
of the problem, but not signiﬁcantly so.
5.4 Impact of Path Length
The HOP metric produces signiﬁcantly shorter paths than
the three other metrics. This is illustrated in Figure 9. The
bar chart shows the median across all 506 TCP transfers
of the average path length of each transfer. To calculate
the average path length of a TCP transfer, we keep track
of the paths taken by all the data-carrying packets in the
transfer. We calculate the average path length by weighting
the length of each unique path by the number of packets that
took that path. The error bars represent SIQR. The HOP
metric has the shortest median path length (2), followed by
ETX (3.01), RTT (3.43) and PktPair (3.58).
We now look at ETX and HOP path lengths in more de-
tail. In Figure 10, we plot the average path length of each
TCP transfer using HOP versus the average path length
12000
10000
8000
6000
4000
2000
)
s
p
b
K
(
t
u
p
h
g
u
o
r
h
T
12000
10000
8000
6000
4000
2000
)
s
p
b
K
(
t
u
p
h
g
u
o
r
h
T
12000
10000
8000
6000
4000
2000
)
s
p
b
K
(
t
u
p
h
g
u
o
r
h
T
0
0
1
2
3
4
5
6
7
8
Average Path Length
0
0
1
2
3
4
5
6
7
8
Average Path Length
0
0
1
2
3
4
5
6
7
8
Average Path Length
Figure 11: All Pairs: Throughput
as a function of path length under
HOP. The metric does a poor job
of selecting multi-hop paths.
Figure 12: All Pairs: Throughput