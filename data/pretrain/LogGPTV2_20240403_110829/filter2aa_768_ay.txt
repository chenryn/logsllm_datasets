Win32_ServerConnection 
Shadow Copy 提供器 
共 享 资 源 （ 文 件 夹 ） 的
Shadow 复制。 
Win32_ShadowProvider  
Win32_ShadowCopy  
Win32_ShadowContext 
SNMP 提供器 
MIB 
（
Management 
Information Base）中定义的
Simple Network Management 
Protocol (SNMP)对象。  
Storage Volume 提供器 
存储卷（storage volume） 
Win32_Volume  
Win32_DefragAnalysis 
System Registry 提 供
器 
系统注册表。 
[root\DEFAULT]: 
StdRegProv
，
RegistryKeyChangeEvent 等。 
"RegProv"
，
"RegistryEventProvider" 
，
"RegPropProv" 
终端服务提供器 
Terminal Services。 
Win32_Terminal
，
Win32_TerminalService
，
Win32_TerminalServiceSetting 等。 
Trustmon 提供器 
域（domain）之间的信赖关
系。 
[root\microsoftactivedirectory]： 
Microsoft_TrustProvider
，
Microsoft_DomainTrustStatus
，
Microsoft_LocalDomainInfo 
WDM 提供器 
符合 Windows Driver Model 
(WDM)规范的设备驱动程
序。 
[root\wmi]： 
Win32 提供器 
Windows 系统。 
以 Win32_开头的众多类。 
Windows Installer 提
供器 
Windows Installer（MSI）及
与其兼容的应用程序。 
Win32_Product
，
Win32_SoftwareElement
，
Win32_SoftwareFeature 等。 
Windows 产品激活提
供器 
Windows
产
品
激
活
（
Windows 
Product 
Activation ，简称 WPA） 管
理。 
Win32_ComputerSystemWindows- 
ProductActivationSetting  
Win32_Proxy  
Win32_WindowsProductActivation 
*方括号中为命名空间路径。 
31.4.2  编写新的 WMI 提供器 
可以把开发 WMI 提供器的过程分成两个主要任务，一是编写提供服务的 COM 组件，
二是向 CIM 对象管理器注册。 
编写
编写
编写
编写 WMI 提供器的
提供器的
提供器的
提供器的 COM 组件
组件
组件
组件 
编写 WMI 提供器 COM 组件的过程和编写普通 COM 组件很类似。设计普通 COM 组
件时，我们首先要考虑的一个问题就是该组件要实现什么样的接口（interface）。因为接口
《软件调试》补编 
- 93 – 
Copyright © 2009 ADVDBG.ORG All Rights Reserved 
决定了组件的主要功能和被调用方式。 
IWbemServices 接口是 WMI 对外提供服务的重要窗口，WMI 应用程序（消耗器）成
功连接到 WMI 的某个命名空间后，WMI 对象管理器返回给 WMI 应用程序的最重要信息
便是一个 IWbemServices 类型的对象指针。因为 IWbemServices 接口具有非常好的通用性，
所以很多 WMI 组件都实现了这个接口，比如 WMI 命名空间（CWbemNameSpace）。WMI
中的通信（方法调用）也经常使用 IWbemServices 类型。IWbemServices 接口也是大多数
WMI 提供器要实现的首要接口。在 WMI 提供器五种类型中，有三种（类提供器、实例提
供器和方法提供器）都是以 IWbemServices 接口为核心的。表 31-9 列出了 IWbemServices
接口的主要方法。 
表 31-9  IWbemServices 接口的主要方法 
方法 
描述 
OpenNamespace 
打开指定的子命名空间。 
CancelAsyncCall 
取消一个正在执行的异步调用。 
QueryObjectSink 
Allows a caller to obtain a notification handler sink. 
GetObject 
Retrieves an object—an instance or class definition. 
GetObjectAsync 
Asynchronously retrieves an object—an instance or class 
definition. 
PutClass 
Creates or updates a class definition. 
PutClassAsync 
Asynchronously creates or updates a class definition. 
DeleteClass 
Deletes a class. 
DeleteClassAsync 
Deletes a class and receives confirmation asynchronously. 
CreateClassEnum 
Creates a class enumerator. 
CreateClassEnumAsync 
Creates a class enumerator that executes asynchronously. 
PutInstance 
Creates or updates an instance of a specific class. 
PutInstanceAsync 
Asynchronously creates or updates an instance of a specific 
class. 
DeleteInstance 
Deletes a specific instance of a class. 
DeleteInstanceAsync 
Deletes 
an 
instance 
and 
provides 
confirmation 
asynchronously. 
CreateInstanceEnum 
Creates an instance enumerator. 
CreateInstanceEnumAsync 
Creates 
an 
instance 
enumerator 
that 
executes 
asynchronously. 
ExecQuery 
Executes a query to retrieve classes or instances. 
ExecQueryAsync 
Executes a query to retrieve classes or instances 
asynchronously. 
ExecNotificationQuery 
Executes a query to receive events. 
ExecNotificationQueryAsync 
Executes a query to receive events asynchronously. 
ExecMethod 
Executes an object method. 
ExecMethodAsync 
Executes an object method asynchronously. 
IWbemProviderInit 接口的 Initialize 方法是 WMI 提供器所属的命名空间对象对其进行
初始化的主要途径，通过该方法，命名空间对象让提供器得到初始化的机会，并将必要的
信息传递给提供器，其中包括指向自身的一个指针，提供器可以通过该指针反过来调用
CIM 对象管理器的方法。 
HRESULT Initialize( 
  LPWSTR wszUser, 
  LONG lFlags, 
  LPWSTR wszNamespace, 
  LPWSTR wszLocale, 
  IWbemServices* pNamespace, 
  IWbemContext* pCtx, 
《软件调试》补编 
- 94 – 
Copyright © 2009 ADVDBG.ORG All Rights Reserved 
  IWbemProviderInitSink* pInitSink 
); 
因此，大多数 WMI 提供器也通常会实现 IWbemProviderInit 接口。 
如果使用 C++语言来，那么 WMI 类提供器、实例提供器和方法提供器的核心类的典
型定义就是： 
class CInstOrClassOrMethodProvider : public IWbemServices, public IWbemProviderInit 
接下来的任务就是实现 IWbemProviderInit 和 IWbemServices 接口所定义的各个方法
了。我们暂时跳过这一内容，留给第 20 章结合实际任务进行讨论。 
事 件 提 供 器 要 实 现 的 主 要 接 口 是
IWbemEventProvider ， 通 常 还 实 现
IWbemEventProvider 和 IWbemEventProviderSecurity 分别用于初始化和安全控制。 
class CMyEventProvider : public IWbemEventProvider, 
 public IWbemProviderInit, public IWbemEventProviderSecurity 
IWbemEventProviderSecurity 接口只有一个方法 AccessCheck（不包括从 IUnknown 继
承的方法），是用来检查请求订阅事件的事件消耗器程序是否可以接受该事件。 
属性提供 器要实 现的首 要接口是 IWbemPropertyProvider，该接口有 两个方 法
GetProperty 和 PutProperty。 
class CPropPro : public IWbemPropertyProvider 
事件消耗器提供器要实现的主要接口是 IWbemEventConsumerProvider，该接口只有一
个方法，即 FindConsumer。 
HRESULT FindConsumer( 
  IWbemClassObject* pLogicalConsumer, 
  IWbemUnboundObjectSink** ppConsumer 
); 
通过该方法，WMI 将一个逻辑消耗器对象传递给事件消耗器提供器，事件消耗器提
供器应该返回一个事件接插器对象（event sink object）供事件类触发事件时使用。 
实现好主要的提供器类后，还有一个工作就是要实现类工厂，或者说实现并导出
DllGetClassObject 方法。通常每个 DLL 形式的 COM 组件都会导出 DllGetClassObject 方法，
目的是当系统中有客户程序要使用该 COM 组件时，COM 库函数会调用 DllGetClassObject
方法让 COM 组件创建指定接口的对象实例。关于如何编写类工厂的进一步细节超出了本
书的范围，WMI SDK（Pltform SDK）对于每种 WMI 提供器都给出了一个完整的例子，
位于 Samples\SysMgmt\WMI\VC\目录下。感兴趣的读者可以参考，在此不再详述。 
注册
注册
注册
注册 WMI 提供器
提供器
提供器
提供器 
编写好的 WMI 提供器组件和其它 COM 组件一样可以注册到 Windows 系统中，通常
是通过 regsvr32 命令将组件的类 ID、接口的 GUID 及服务模块等信息注册到注册表中。
但对于 WMI 提供器来说，只注册为 COM 服务器还不够，还需要向 WMI 的对象管理器注
册，这样 WMI 应用程序才可以通过 WMI 枚举到这个提供器所提供的类或实例等。 
向 WMI 注册提供器的简单方法就是先编写一个 MOF 文件，然后使用 mofcomp 命令
执行注册操作。其大体步骤如下： 
1. 
创建一个 MOF 文件，然后指定要注册到的目标命名空间。 
     #pragma namespace("\\\\.\\ROOT\\MyNamespace") 
     以上指令将当前命名空间设定为本地机器的\root\MyNamespace。 