User: How to use a Python script to check the port status of the server in batches, and how to output the check results to a log file?
Assistant: The server port can be checked using Python's socket module. The following is a sample code, which can batch check the port status on the specified IP address list, and output the check results to the log file: ```python import socket import logging # set log logging.basicConfig(filename='port_check.log ', level=logging.INFO) # Set IP address list and port number list ip_list = ['192.168.0.1', '192.168.0.2'] port_list = [22, 80, 443, 3306] # Loop check all IP addresses and port number for ip in ip_list: for port in port_list: try: sock = socket.create_connection((ip, port), timeout=2) status = "Port {} is open on {}".format(port, ip) logging.info(status) sock.close() except socket.error: status = "Port {} is closed on {}".format(port, ip) logging.warning(status) ``` After running the above code, It will check each IP address in the list of IP addresses in turn, and each port number in the list of port numbers. If the port is open, a message "Port {port number} is open on {IP address}" will be output in the log file. If the port is closed, a corresponding shutdown message is output. You can modify the IP address list and port number list, as well as the file name and level of log files and other information according to actual needs.