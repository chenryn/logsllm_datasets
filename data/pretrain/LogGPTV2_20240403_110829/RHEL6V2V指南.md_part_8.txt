:::
::: para
如果您的虚拟机只有一个网络接口，您也可以使用 *`--bridge`*
参数连接到一个本地管理的网络上。如果您的虚拟机有多个网络接口，编辑
`/etc/virt-v2v.conf`{.filename} 来指定所有网络接口的映射信息。
:::
::: para
[⁠]{#chap-V2V-VMS_To_Run_on_RHEV.html#form-Authenticating_to_the_ESX_server}
::: {.title xmlns:d="http://docbook.org/ns/docbook"}
到 ESX / ESX(i) 服务器的用户身份验证
:::
到 ESX / ESX(i) 服务器的连接需要进行用户身份验证。`virt-v2v`{.command}
支持使用密码进行验证。它会从 `$HOME/.netrc`{.filename}
中读出密码，这个文件的格式在 `netrc(5)`{.filename} 中有所介绍。例如：
``` screen
machine esx.example.com login root password s3cr3t
```
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**注意**
:::
::: admonition
::: para
`.netrc`{.filename} 文件的权限设置需要是 0600，这样才可以被
`virt-v2v`{.command} 读取。
:::
:::
:::
:::
::: para
[⁠]{#chap-V2V-VMS_To_Run_on_RHEV.html#form-Connecting_to_an_ESX_server_with_an_invalid_certificate}
::: {.title xmlns:d="http://docbook.org/ns/docbook"}
使用无效的证书连接 ESX / ESX(i) 服务器
:::
在非生产环境中，ESX / ESX(i)
服务器可能会使用一个无效的证书（如一个自签发的证书）。在这种情况下，证书检查的功能可以被禁用（在连接
URI 中使用 *`?no_verify=1`*）。例如：
``` screen
... -ic esx://esx.example.com/?no_verify=1 ...
```
:::
:::
:::
::: section
::: titlepage
## [⁠]{#chap-V2V-VMS_To_Run_on_RHEV.html#sect-RHEV-Importing_and_Running_the_Converted_Virtual_Machine}4.3.3. 导入并运行转换的虚拟机 {.title}
:::
::: para
在转换过程成功完成后，`virt-v2v`{.command}
会把导入的虚拟机上传到指定的导出域中。执行以下步骤来导入并运行转换的虚拟机：
:::
::: {.procedure xmlns:d="http://docbook.org/ns/docbook"}
[⁠]{#chap-V2V-VMS_To_Run_on_RHEV.html#idm139991841867648}
**过程 4.7. 导入并运行转换的虚拟机**
1.  ::: para
    在 Red Hat Enterprise Virtualization
    管理门户的[**存储**]{.guilabel}标签页中选择导入存储域。所选的导入存储域的状态必须是
    [**Active**]{.guilabel}。
    :::
2.  ::: para
    在详情框中选择 [**VM
    导入**]{.guilabel}标签页来列出可以被导入的虚拟机列表。
    :::
3.  ::: para
    选择一个或多个虚拟机后点[**导入**]{.guibutton}。[**导入虚拟机**]{.guilabel}窗口将被打开。
    :::
4.  ::: para
    在下拉菜单中，选择数据中心的[**默认存储域**]{.guilabel}、[**集群**]{.guilabel}和[**集群配额**]{.guilabel}。
    :::
5.  ::: para
    选择 [**Collapse
    快照**]{.guilabel}来删除快照的恢复点，并包括虚拟机所基于的模板。点[**确认**]{.guibutton}导入虚拟机。
    :::
:::
::: para
如需了解更多关于导入虚拟机的信息，请参阅 *Red Hat Enterprise
Virtualization 管理指南*。
:::
::: para
[⁠]{#chap-V2V-VMS_To_Run_on_RHEV.html#form-Running_the_Converted_Virtual_Machine-Network_Configuration}
::: {.title xmlns:d="http://docbook.org/ns/docbook"}
网络配置
:::
目前，`virt-v2v`{.command}
还不能重新配置虚拟机的网络配置。如果被转换的虚拟机没有连接到它们原来的相同子网中，这个虚拟机的网络配置就可能需要被手工更新。
:::
:::
::: section
::: titlepage
## [⁠]{#chap-V2V-VMS_To_Run_on_RHEV.html#sect-Scripting_the_v2v_Process}4.3.4. v2v 操作的自动化脚本 {.title}
:::
::: para
v2v
整个操作过程可以通过脚本被自动化，这会大大提高对大量虚拟机进行转换的效率。这个过程可以被分为两步，每一步都需要在一个单独的主机上运行.
:::
::: {.procedure xmlns:d="http://docbook.org/ns/docbook"}
[⁠]{#chap-V2V-VMS_To_Run_on_RHEV.html#idm139991838323136}
**过程 4.8. v2v 操作的自动化脚本**
1.  ::: para
    使用 `virt-v2v`{.command}
    转换虚拟机，并把它们复制到导出存储域中。这一步需要在一个 Linux
    主机上运行。[第 4.3.2 节
    "转换一个虚拟机"](#chap-V2V-VMS_To_Run_on_RHEV.html#sect-Converting_a_Virtual_Machine){.xref}
    介绍了这一步的详细信息。
    :::
2.  ::: para
    在转换完成后，使用 Red Hat Enterprise Virtualization
    管理门户从导出存储域中导入虚拟机。这一步需要在 Red Hat Enterprise
    Virtualization Manager 服务器上运行。
    :::
    ::: para
    如需了解更多关于使用 Red Hat Enterprise Virtualization
    管理门户导入虚拟机的信息，请参阅 *Red Hat Enterprise Virtualization
    管理指南*。
    :::
    ::: figure
    [⁠]{#chap-V2V-VMS_To_Run_on_RHEV.html#figu-Import_VM}
    ::: figure-contents
    ::: mediaobject
    ![The Import Virtual Machine(s) wizard.](images/RHEV_ImportVMs.png)
    :::
    :::
    **图 4.4. 使用 Red Hat Enterprise Virtualization
    管理门户导入虚拟机**
    :::
    ::: para
    另外，还可以使用 Python SDK 或命令行来从导出存储域中导入虚拟机：
    :::
    ::: para
    使用 SDK 导入虚拟机：
    :::
    ::: example
    [⁠]{#chap-V2V-VMS_To_Run_on_RHEV.html#exam-Importing_all_VMs_from_the_export_storage_domain_using_sdk}
    **例 4.3. 使用 SDK 从导出存储域中导入虚拟机**
    ::: example-contents
    ``` screen
    api = API(url="http(s)://...:.../api",
              username="...",
              password="...",
              filter=False,
              debug=True)
    sd = api.storagedomains.get(id="from-sd-id")
    import_candidate = sd.vms.get(id="vm-to-import")
    import_candidate.import_vm(action=params.Action(
    cluster=api.clusters.get(id="to-cluster-id"), 
    storage_domain=api.storagedomains.get(id="to-sd-id")))
    ```
    :::
    :::
    ::: note
    ::: admonition_header
    **注意**
    :::
    ::: admonition
    ::: para
    在使用 SDK 方法时，可以使用 *`name=`* 来获取或传递项。
    :::
    :::
    :::
    ::: para
    要通过命令行导入虚拟机，请连接到 Red Hat Enterprise Virtualization
    Manager 的 shell，并使用以下命令：
    :::
    ::: example
    [⁠]{#chap-V2V-VMS_To_Run_on_RHEV.html#exam-Importing_all_VMs_from_the_export_storage_domain_using_cli}
    **例 4.4. 使用命令行从导出存储域中导入虚拟机**
    ::: example-contents
    ``` screen
    action vm "vm-to-import" import_vm --storagedomain-identifier "from-sd-id" --cluster-id "to-cluster-id" --storage_domain-id "to-sd-id"
    ```
    :::
    :::
    ::: note
    ::: admonition_header
    **注意**
    :::
    ::: admonition
    ::: para
    在使用命令行方法时，可以使用 *`name=`* 来获取或传递项。
    :::
    :::
    :::
:::
:::
::: section
::: titlepage
## [⁠]{#chap-V2V-VMS_To_Run_on_RHEV.html#sect-Scripted_Bulk_v2v_Process}4.3.5. 对大量 v2v 操作进行脚本自动化 {.title}
:::
::: para
如果需要大量导入虚拟机，在同一个主机上运行 v2v
自动化脚本就会有很大的优势。到远程 Red Hat Enterprise Virtualization
Manager 的操作可以使用 REST API 进行，这使在一个 Linux 主机上运行 v2v
自动化脚本成为可能。[图 4.5 "对大量 v2v
操作进行脚本自动化"](#chap-V2V-VMS_To_Run_on_RHEV.html#figu-V2V_Guide-Scripted_Bulk_v2v_Process-Scripted_bulk_v2v_process){.xref}
展示了自动化脚本所进行的操作。
:::
::: para
::: figure
[⁠]{#chap-V2V-VMS_To_Run_on_RHEV.html#figu-V2V_Guide-Scripted_Bulk_v2v_Process-Scripted_bulk_v2v_process}
::: figure-contents
::: mediaobject
![对大量 v2v 操作进行脚本自动化](images/batched-v2v-process.png)
:::
:::
**图 4.5. 对大量 v2v 操作进行脚本自动化**
:::
:::
::: para
如 [图 4.5 "对大量 v2v
操作进行脚本自动化"](#chap-V2V-VMS_To_Run_on_RHEV.html#figu-V2V_Guide-Scripted_Bulk_v2v_Process-Scripted_bulk_v2v_process){.xref}
所示，对大量 v2v 操作进行脚本自动化包括以下步骤：
::: {.orderedlist xmlns:d="http://docbook.org/ns/docbook"}
1.  ::: para
    从源虚拟机监控系统上获得虚拟机的映像。
    :::
2.  ::: para
    对虚拟机映像进行打包，并复制到导出存储域。
    :::
3.  ::: para
    使用一个到 Red Hat Enterprise Virtualization Manager
    的远程调用来通知它导入虚拟机。
    :::
4.  ::: para
    Manager 从导出存储域中导入虚拟机。
    :::
:::
:::
::: para
配置并运行大量 v2v 操作的自动化脚本：
:::
::: {.procedure xmlns:d="http://docbook.org/ns/docbook"}
[⁠]{#chap-V2V-VMS_To_Run_on_RHEV.html#idm139991839911456}
**过程 4.9. 配置并运行大量 v2v 操作的自动化脚本**
1.  ::: para
    确认 Red Hat Enterprise Virtualization Manager 启用了 REST
    API，并可以被运行 v2v 脚本的 Linux 访问。如需了解更多关于 REST API
    的信息，请参阅 *Red Hat Enterprise Virtualization Developer Guide*。
    :::
2.  ::: para
    在 Linux 主机上，创建包括以下内容的 `v2v.sh`{.filename}
    文件。请确认您根据您的具体环境对脚本中的相应内容进行了修改。
    :::
    ::: example
    [⁠]{#chap-V2V-VMS_To_Run_on_RHEV.html#exam-Single_host_v2v_script}
    **例 4.5. 单独主机的 v2v 脚本**
    ::: example-contents
    ``` programlisting
    #!/bin/sh
    # Declare all VMs to import
    XENDOMAINS=("rhelxen" "rhel5")
    KVMDOMAINS=("rhelkvm")
    VMWAREVMS=("rhel54vmware")
    # Iterate through each Xen domain, performing the conversion
    for domain in ${XENDOMAINS[@]}
    do
            virt-v2v -ic xen:///localhost -o rhev -os storage.example.com:/exportdomain --network rhevm $domain
    done
    # Iterate through each KVM domain, performing the conversion
    for domain in ${KVMDOMAINS[@]}
    do
            virt-v2v -o rhev -os storage.example.com:/exportdomain --network rhevm $domain
    done
    # Iterate through each VMware VM, performing the conversion
    for vm in ${VMWAREVMS[@]}
    do
            virt-v2v -ic esx://esx.example.com/?no_verify=1 -o rhev -os storage.example.com:/exportdomain --network rhevm $vm
    done
    # Call the import VM procedure remotely on the RHEV Manager
    export BASE_URL='https://[rhevm-host]'
    export HTTP_USER='user@internal'
    export HTTP_PASSWORD='password'
    curl -o rhevm.cer http://[rhevm-host]/ca.crt
    # Get the export storage domains
    curl -X GET -H "Accept: application/xml" -u "${HTTP_USER}:${HTTP_PASSWORD}" --cacert rhevm.cer ${BASE_URL}/api/storagedomains?search=nfs_export -o exportdomain
    EXPORT_DOMAIN=`xpath exportdomain '/storage_domains/storage_domain/@id' | sed -e 's/ id=//' | sed -e 's/"//g'`
    # Get the datacenter
    curl -X GET -H "Accept: application/xml" -u "${HTTP_USER}:${HTTP_PASSWORD}" --cacert rhevm.cer ${BASE_URL}/api/datacenters?search=NFS -o dc
    DC=`xpath dc '/data_centers/data_center/@id' | sed -e 's/ id=//' | sed -e 's/"//g'`
    # Get the cluster
    curl -X GET -H "Accept: application/xml" -u "${HTTP_USER}:${HTTP_PASSWORD}" --cacert rhevm.cer ${BASE_URL}/api/clusters?search=NFS -o cluster