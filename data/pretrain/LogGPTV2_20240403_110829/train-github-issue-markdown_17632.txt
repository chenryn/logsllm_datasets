Reddit thread:
> Why are data structures generally duplicated in the rust standard library,
> or at least apparently so in the API documentation?
>
> e.g. std::string::String vs. collections::string::String, std:fmt::String
> vs. core::fmt::String, std::vec::Vec vs. collections::vec::Vec?
I'm not certain which of these the user was referring to but both could be
possibly weird at first appearance:
  * Why is `String` in `std::string` and `collections::string` and others
  * Why is `String` in `string` and `Vec` in `vec`
It was suggested that this be included in a **How to read this documentation**
somewhere. If it was written, I would imagine it should be automatically
included in the rust std documentation system so that it is included in all
rust derived projects like **gfx-rs** and **piston** documentation.
cc: @steveklabnik