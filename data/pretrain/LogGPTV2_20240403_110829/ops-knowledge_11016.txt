User: 请解答这个和日志有关的问题How to capture details of an aborted process into a logfile A daemon is started and running under Debian until it randomly crashes. I found out that it sometimes aborts due to an assertion which is shown if the process is running in foreground, like:


  /usr/include/boost/smart_ptr/shared_ptr.hpp:424: T* boost::shared_ptr::operator->() const [with T = libcage::dht::query]: Assertion `px != 0' failed.
  Aborted


The exitcode is 134, but how to save the more detailed error description (there could be many different) into a logfile for a later analysis, if the process is running in background?

"2> /log/mylogfile" is writing nothing and "> /log/mylogfile" is writing the process output ignoring the abort message. Also in "dmesg" or "kern.log" is nothing.

Assistant: You can use strace to see what is wrong. It will log the syscalls used, signals, and return values.

Just strace -v -s 256 -D -o /tmp/daemonlog daemonapp and you can see execution details.


  -v: print environment
  
  -s string size: 256 bytes
  
  -D run strace as detached granchild
  
  -o logfile