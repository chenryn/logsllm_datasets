cross-trafﬁc can compress the RSTs on the uplink, even without serious congestion,
generating spikes in the RTT that temporarily “hide” the temporal properties of the
downlink. In [2] two techniques are proposed, one statistical based on a robust method
called Iteratively Re-wighted Least Squares, and one deterministic, aimed at detecting
the consecutive decreasing RTT samples resulting from the compression of the RSTs.
The two methods have interesting properties but also downsides: the statistical method
suffers in high cross-trafﬁc conditions while the deterministic one is ineffective when
the cross-trafﬁc packets are small. In FAB-Probe we combine the two methods to ben-
eﬁt from both approaches: ﬁrst we ﬁlter the large majority of affected RTT samples
detecting consecutive decreasing trends, then we ﬁlter the remaining samples applying
the robust statistical method. As we will show, this allows us to obtain correct measure-
ments even when the uplink is highly loaded.
4 Validation
To validate the accuracy of FAB-Probe, we have tested our tool both on some ADSL
hosts under our control and against hosts belonging to an ADSL service provider from
which we obtained the trafﬁc traces as “ground truth”. The measuring host was always
a well-connected host, with a 100Mbps connection and with at least 90 Mbps avail-bw,
so that the bottleneck link was the ADSL on the other edge of the network.
4.1 In-lab Validation
We tested the accuracy of FAB-Probe in different trafﬁc conditions and with various
cross-trafﬁc rates. From a third well-connected host, we used a trafﬁc generator to inject
CBR trafﬁc towards the ADSL host. We vary the load on the downlink spacing several
rates close to the ones used by FAB-Probe to probe, so to verify that no error occurs
when R and A are close – the worst case. For example, we test FAB-Probe with 45%
and 55% avail-bw because FAB-Probe runs ﬂeets at 50%, thus verifying if the trend
is correctly dectected. Tab. 1 summarizes the results given in output by FAB-Probe as
well as the total number of ﬂeets sent and the running time. The improvement compared
to ABwProbe is remarkable: the number of ﬂeets is an order of magnitude lower, thus
reducing signiﬁcantly the intrusiveness of the measurement, and the avail-bw estimate
is obtained over 5 times faster while still providing precise avail-bw ranges.
Fast Available Bandwidth Sampling
73
Table 1. Accuracy and speed of FAB-Probe: the output range effectively captures the avail-bw.
Compared to ABwProbe (ABP), the number of probing ﬂeets and the running time are consider-
ably lower. The asterisk indicates that an additional ﬂeet with 40 bytes probe packets was sent to
verify uplink congestion.
Real avail-bw
Downlink avail-bw range (relative to capacity)
85% 70% 55% 45% 30% 20% 5%
. Measured range 90-100% 75-90% 50-75% 50-75% 25-50% 25-50% 10-25% cong.
B
A
F
P
-
∗
3
14.5
24
68.4
∗
3
13.5
23
70.3
∗
3
14.7
18
56.9
∗
3
23.0
21
88.3
∗
1
6.0
16
200.9
# of ﬂeets
Time (sec)
P # of ﬂeets
B
Time (sec)
A
95%
2
5.6
17
31.8
∗
2
7.6
19
40.2
∗
3
14.4
21
57.4
Table 2. Impact of uplink cross-trafﬁc: FAB-Probe correctly measures the avail-bw in presence
of cross-trafﬁc both when the downlink is idle and loaded (30% avail-bw)
Uplink cross-trafﬁc (load relative to uplink capacity)
0%
15%
25%
35%
45%
55%
65% 75%
90-100% 90-100% 90-100% 90-100% 75-100% 75-100% 75-90% cong.
25-50% 25-50% 25-50% 25-50% 25-50% 25-50% 10-25% cong.
Measured range
(100% avail-bw)
Measured range
(30% avail-bw)
To prove the robustness of FAB-Probe and the effectiveness of the uplink cross-
trafﬁc ﬁltering, we have measured the downlink both in idle and loaded conditions
while injecting increasing cross-trafﬁc on the uplink. We generated CBR trafﬁc from
the ADSL host towards a third machine using MTU size packets (thus causing the
highest RST compression, see [2]). As shown in Tab. 2, the cross-trafﬁc ﬁltering allows
FAB-Probe to correctly estimate the downlink avail-bw both when the link is idle and
loaded at 70%, and the congestion test operates when the cross-trafﬁc is too high (over
450 kbps in the case shown, with an uplink of 578 kbps). Only a slight underestimation
occurs in extreme cross-trafﬁc conditions.
4.2 Validation “In the Wild”
To further test the accuracy of FAB-Probe, we validated the tool in real-world trafﬁc
conditions. With the help of an ADSL service provider, we ﬁrst selected few hundred
hosts which were not idle nor completely saturated, in order to have some avail-bw vari-
ability. Then, we periodically measured 13 ADSL hosts during a one hour period. The
ISP provided us the time series of the incoming and outgoing trafﬁc of the measured
hosts and we could thus compute the amount of trafﬁc actually traversing the ADSL.
The results obtained matched very well the ones provided by FAB-Probe and two inter-
esting examples are provided in Fig. 1. In Fig. 1(a), FAB-Probe was precisely measuring
the avail-bw, being conservative and widening the range given in output when the prob-
ing rate was too close to the real value (“grey” trend). In Fig. 1(b) the host measured
is a bit more loaded and the variability of the avail-bw process is higher. Nevertheless,
FAB-Probe provides very good estimates, with only one inaccurate sample.
74
D. Croce et al.
)
y
t
i
c
a
p
a
C
f
o
n
o
i
t
c
a
r
f
(
i
t
h
d
w
d
n
a
B
e
b
a
l
l
i
a
v
A
100 %
80 %
60 %
40 %
20 %
0 %
0
Lower bound
Upper bound
Avail−bw
10
20
Time (min)
(a)
100 %
)
y
t
i
c
a
p
a
C
f
o
n
o
i
t
c
a
r
f
(
i
t
h
d
w
d
n
a
B
e
b
a
l
l
i
a
v
A
80 %
60 %
40 %
20 %
30
40
50
0 %
0
Lower Bound
Upper Bound
Avail−bw
10
20
40
50
60
30
Time (min)
(b)
Fig. 1. Real-world trafﬁc conditions: FAB-Probe effectively captures the avail-bw of the hosts