还可以将已发现的用户名添加到一个否定条件中，这样使可以将其从结果集中排除，从而
发现其他账户：
http://wwv, victim.com/logon.aspx?username=test' and User not in
(*Admin′) and 1=0/User and 1*=']
可以使用web.config文件配置ASP.NET应用程序中的错误显示。该文件用于定义ASPNET
应用程序的设置和配置。它是一个XML文档，其中包含了有关已加载模块、安全配置、编译
设置的信息以及其他的类似数据。customErrors指令定义如何将错误返回给Web浏览器。默认
情况下，customErrors为“On”，该特性可防止应用服务器向远程访间者显示详细的错误信息。
可使用下列代码彻底禁用该特性，但不建议在产品环境下执行该操作：
还可以根据呈现页面时产生的HTTP错误代码来显示不同的页面：
在上述例子中，应用默认会将用户重定向到Eror.aspx页面。但在三种情况下—HTTP
代码403、404和500，用户会被重定向到其他页面。
2)MySQL错误
下面介绍一些典型的MySQL错误。所有主流服务器端脚本语言均能访问MySQL数据库。
MySQL可以在很多架构和操作系统下执行，常见的配置是在装有Linux操作系统的Apache
Web服务器上运行PHP，但它也可以出现在很多其他的场合中。
下列错误通常表明存在MySQL注入漏洞：
resource in /var/www/victim.com/showproduct.php on line 8
本例中，攻击者在GET参数中注入了一个单引号，PHP页面将SQL语句发送给了数据库。
下列PHP代码段展示了该漏洞：
Error: '. mysql_error() , *′);
}else(
//遍历查询结果
while ($row = mysql_fetch_array(Sresult .MYSQL_NUM)) (
printf ("ID: s Name: s*, $row[0], $row[1])
//释放结果集
mysql_free_result($result):
Error: *. mysql_error () . '′);
1
本例中，在捕获到错误后使用dieO函数进行显示。PHP的dieO函数打印了一条消息并恰
当地退出当前脚本。程序员还可以使用其他选项，比如重定向到其他页面：
if（1Sresult）（//如果有任何错误
//检查错误并重定向页面
header("Location: http://wmr, victim.com/error-php*") 
35
---
## Page 50
SQL注入攻击与防御（第2版）
应中确认SQL注入漏洞。
3)Oracle错误
下面介绍一些典型的Oracle错误示例。Oracle数据库使用多种技术进行部署。前面讲过，
我们不需要掌握从数据库返回的每一个错误，重要的是当看到数据库错误时能够识别它。
当操纵后台数据库为Oracle的Java应用程序中的参数时，您经常会发现下列错误：
java.sql.SQLException: ORA-00933: SQL command not properly ended at
oracle -jdbc.dbaccess .DBError.throSqlException (DBError.java:180) at
oracle.jdbc.ttc7.TTIoer-processError (TTIoer. java: 208)
上述错误非常普遍，它表明执行了语法上不正确的SQL语句。根据运行在服务器上的代
码的不同，当您注入一个单引号时会发现产生了下列错误：
Error: SQLExceptionjava.sq].sQLException: ORA-01756: quoted string not
properly terminated
该错误表明Oracle数据库检测到SQL语句中有一个使用单引号引起来的字符串未被正确
结束，Oracle要求字符串必须使用单引号结束，下列错误重现了.NET环境下的情况：
Exception Details: System.Data.OleDb.0leDbException: One or more errors
occurred during processing of command.
ORA-00933: SQL command not properly ended
下面的例子展示了从.NET应用返回的一个错误，该程序执行的语句中包含未使用单引号
引起米的字符串：
ORA-01756: quoted string not properly terminated
System.Web.HttpUnhandledException: Exception of type
'System.Web.HttpUnhandledException' was thrown. -==>
System.Data.OleDb.O1eDbException: ORA-01756: quoted string not properly
terminated
PHP的ociparseO函数用于准备要执行的Oracle 语句。下面是该函数调用失败时 PHP 引繁
产生的一个错误示例：
Warning: ociparse () [function.ociparse]: 0RA-01756: quoted string not
properly terminated in /var/www/victim.com/ocitest.php on 1ine 31
如果ociparseO函数调用失败且未对该错误进行处理，那么应用会因为第一次失败而显示一
些其他错误，如下所示：
Warning: ociexecute() : supplied argument is not a valid OCI8-Statement
resource in c:\www\victim.com\oracle\index.php on line 31
阅读本书时您会发现，有时攻击成功与否与数据库服务器披露的信息息息相关。检查一下
下面的错误：
java,sql,SQLException: ORA-00907: missing right parenthesis
atoracle.jdbc,dbaccess .DBError,throwSqlException (DBError.java:134) at
oracle.jdbc.ttc7.TTIoer.processError (TTIoer-java:289) at
36
---
## Page 51
第2章SQL注入测试
oracle .jdbc.ttc7.TrC7Protoco1. do0a117 (Trc7Protoco1 java:1986)
oracle.jdbc.ttc7.0a117.receive (0a117.java:582) at
发该错误。最常见的情况是攻击者在嵌套SQL语句中拥有某种控制权。例如：
SELECT field1, field2,
/*选择第一和第二个字段*/
(SELECT field1
/*开始子查询·/
FROM tab1e2
as field3
/*从子查询返回*/
FROM table1
上述例子展示了一个嵌套查询。主SELECT语句执行括号中的另一条SELECT语句。如果攻
击者向第二条查询语句注入某些内容并将后面的SQL语句注释掉，那么Oracle将返回“missingright
parenthesis”错误。
4) PostgreSQL 错误
下面将介绍一些典型的PostgreSQL数据库错误。
下面的PHP代码连接到一个PostgreSQL数据库，并根据一个GET HTTP变量的值来执行
一条SELECT查询：
\n";
while ($line = pg_fetch_array($result, null, PGsQL_ASsoC)) {
echo "\t\n";
foreach ($line as $col_value)(
μu\an[eaoo$\2\。oqoa
echo "\t\n";
echo "\n°;
f
//释放结果集
pg_free_result (Sresult);
//关闭连接
pg_close ($dbconn);
<
PHP函数pg_query 使用作为参数传入的数据库连接米执行查询。在上面的例子中，创建
了一个SQL查询并将其存储在变量Squery中，在后面的代码中将执行该查询。
Pg_last_error是一个PHP函数，它的功能是获取数据库连接的最新出错消息。
37
---
## Page 52
SQL注入攻击与防御（第2版）
只须打开浏览器导航到Victim公司网站，并在该网站的URL之后添加一个名为name的
参数，就可以调用上面的PHP代码：
http: //www.victim, com/1ist_author -php?name=dickens
上面这个HTTP请求将使PHP应用程序执行下面的 SQL查询：
SELECT *
FROM “public" "Authors"