calculation  of  diversity  for  carry-select  and  carry- 
lookahead adders are described in [Mitra OOc]. 
Consider  the  design  of  an  n-bit  ripple-carry  adder 
(Fig. 4.la) using the full-adder blocks shown in Fig. 4.lb. 
The following theorem tells  us  that  for a  duplex system 
containing two identical copies of the ripple-carry adder, 
the d1,2 value is 1  for any fault pair (f1, f2) affecting non- 
adjacent full-adder blocks in the two copies.  This means 
that,  for  these  fault  pairs  we  do  not  have  to  explicitly 
calculate the value of d1,2.  This can significantly reduce 
the computational complexity of the D-metric. 
Theorem 4:  Consider a duplex system consisting of 
two  identical  copies N1  and  N2  of  a  ripple-carry  adder 
29 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 04:03:47 UTC from IEEE Xplore.  Restrictions apply. 
(Fig.  4.1).  Consider a  fault f 1   affecting  the  full-adder 
block FAi in N1 and a fault f 2  affecting FAj in N2.  If j  > 
i+l  or i > j+l  (i.e.,fi  andf2  affect two non-adjacent full- 
adder blocks in the two copies), then dl ,2 = 1. 
Proof: 
Consider the  case  when j  >  i+l. The  case 
when  i > j+l  is symmetric.  If  a fault f l  in the full-adder 
block FAi affects Si, a mismatch will be reported when Si 
outputs of  N1  and  N2  are  compared.  If  fault f1  affects 
only the  Ci output of  FAi  in N I ,  then  the Si+l  output of 
FAi+l  in  N1  will  be  erroneous.  Since  li-jl  >  1,  it  is 
guaranteed that  the  Si+l  output of  FAi+l  in  N2 will  be 
correct - hence,  a  mismatch  will  be  reported.  Hence, 
d1,2 = 1. 
Q.E.D. 
For the remaining fault pairs affecting adjacent full- 
adder blocks (i.e., j  = i or j  = i+l), we can form a circuit 
by  cascading  two  full-adder  blocks  and  calculate  the 
exact  value  of  di,j  for  every  fault  pair.  The  circuit 
containing a cascade of  two full-adder blocks has only 5 
inputs  and  3  outputs. 
input 
combinations that produce the  same  erroneous output  in 
the two copies can be calculated easily.  Our results  show 
that  it  takes  around  7  seconds  (real-time)  to  calculate 
these  input  combinations  for  all  fault  pairs  on  a  SUN 
Ultra  Sparc  2  workstation. 
input 
combinations are obtained, the following procedure must 
be used to calculate the di,j value. 
the  set  of 
Hence, 
Once 
these 
Let us  suppose that we  are considering fault pairs in 
the  cascade of  the blocks FAj+1  and FAi+2  in  an  n-bit 
adder.  For each combination of Ai+2, Bi+2, Ai+l, Bj+l 
and  Cj  for  which  the  fault  pair  produces  identical 
erroneous  outputs,  we  calculate  the  number  of  input 
combinations of  the full-adder that produce the particular 
combination of Aj+2, Bi+2, Ai+l, Bj+l  and Ci. 
i 
2 
2(n-i-2)  i-1 
For example, suppose that for a particular fault pair, 
the input combination Ai+2 = Bi+2 = Ai+l  = Bi+l  = Cj = 
1  produces  identical  erroneous pattem  at  the  outputs of 
the  cascaded  block.  The number of  input combinations 
for the n-bit  adder that  satisfies  the above assignment of 
values is 2 
( 2  -1).  Since we only have to satisfy 
that Ai+2 = Bi+2  = Ai+l  = Bi+] = 1, we can assign any 
combination of  Os  and  1s to  the remaining bit  positions 
2(n-i-2) 
Ai+3, ..., An, Bj+3,  ..., Bn.  This gives the term  2 
in  the  above expression.  Next, we  calculate the number 
of  input combinations, Zj, of A I ,  ..., Ai, B1,  ..., Bi, that 
produce Ci equal to 1.  The value of Zi is calculated using 
the following theorem proved in the Appendix A. 
Theorem 5: The value of Zi is equal to: 
i-1 
i 
Zi = 2 
(2 -1) if  CO = 0 is the only value CO can have; 
2i 
if  CO  can  be  both  0  or  1  with  equal 
Zi  =  2 
probability. 
We  can  use the  above  techniques for other kinds  of 
adder  implementations. 
[Mitra  OOc]  shows  the  use  of 
these  techniques  for  carry  look-ahead  and  carry-select 
adders.  These  techniques  can  be  generalized  for  any 
iterative logic network.  All these results demonstrate that 
for  circuits  exhibiting  regular  structures we  can  exploit 
the  structural  regularity  to  compute  the  value  of  the  D- 
metric very quickly. 
5.  Diversity Estimation for General Combinational 
Logic Circuits 
the  regularity 
In  Sec.  4.  we  utilized 
5.1.  Signal Probability Calculation Model 
in 
the 
implementation  of  datapath  logic  circuits  to  devise  fast 
techniques  to  estimate  the  value  of  the  D-metric.  For 
genera!  logic circuits  (often called random logic circuits) 
we  may  not  be  able  to  exploit  the regularity to  estimate 
the value of  the  D-metric because  there may  not be  any 
regularity  present 
general 
combinational logic circuits.  For  a  given  fault  pair  vi,, 
4). the  problem  of  calculating  the  di,j  value  can  be 
modeled  as  the  signal  probability  ctilciilation  problem 
[Parker 751.  The modeling is shown in Fig. 5.1. 
structure  of 
the 
in 
Figure 5.1.  Modeling the diversity estimation problem as a 
signal probability calculation problem. 
As shown in Fig. 5.1, we consider three blocks - N I  
in  the presence of  the  fault f i .  N2 in  the presence of  the 
fault 12, and  the  fault-free N1  block.  In  response to  any 
input  combination,  if  the  incorrect  outputs produced  by 
the  two  faulty blocks match,  then  the  same error pattem 
30 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 04:03:47 UTC from IEEE Xplore.  Restrictions apply. 
has been produced by  the two faulty  blocks.  Otherwise, 
the two blocks either produced correct values or different 
error  pattems  at  their  outputs.  The probability  that  the 
OUT signal is 1 is the same as the d1,2 value for the fault 
pair  (fi, f2). 
It  is  known  that  the  signal  probability 
calculation is a very hard problem - it is a #P  complete 
problem [Motwani 971. 
The  Parker-McCluskey  method  [Parker  751  can  be 
used  to calculate the exact di,j value for every  fault-pair 
(fi, 4): after modeling the problem as a signal probability 
calculation  problem  as  shown  before.  However,  this 
method has an exponential complexity  in the  worst case. 
Methods based on Binary Decision Diagrams (BDDs) can 
also  be  used  for  this  purpose.  The  cutting  algorithm 
[Savir  901  can  also  be  used  to  obtain  an  approximate 
value of the D-metric in polynomial time. 
In  Sec.  5.2,  we  describe  an  adaptive  Monte-Carlo 
simulation  technique  to  estimate  the  di,j values  of  fault 
pairs  because  it  is  much  simpler  compared  to  other 
techniques. 
5.2. Adaptive Monte-Carlo Simulation 
The classical  Monte-Carlo technique can  be  used  to 
estimate  the di,j values [Motwani 971 after modeling  the 
problem as a signal probability calculation problem.  This 
independent  input  combinations 
involves  choosing  N 
uniformly and estimating the probability  that in  response 
to  a  random  choice,  the  two  implementations  will 
produce  either  correct  values  or  non-identical  error 
pattems at the outputs in the presence of  the faults.  The 
value of N  will be discussed later in  this section.  We can 
define random  variables Y1, .. .,YN as follows:  Yk = 1 if 
the  two  implementations  produce  either  the  correct 
outputs or non-identical  error patterns  in  the presence  of 
the  faults  for  input  combination  k  and  Yk  =  0  if  they 
produce  identical  error patterns at their outputs for input 
combination k.  The estimator Z is defined to be: 
N 
z = T -  
yk 
k=l 
2" 
The expected  value  of  Z is  given  by  E(Z) = - = 
diJ.  Here  T  is  the  set  of  all  input  combinations  in 
response  to  which  the 
implementations  produce 
either  correct  values  or  non-identical  error  pattems  at 
their  outputs.  The  main  challenge  is  to  determine  the 
value of N  that we need to guarantee that the error in our 
approximation is bounded.  For that purpose, we calculate 
the value of N  such that the following relationship holds: 
Pr[Z 2 (1 + E)di,  or  5 (1 - E)di, j ]  5 6 ,  
where  6  and  E  are  the  parameters  of  the  Monte-Carlo 
simulation. 
4 
E-di,j 
Using  the  Chemoff  bound,  it  has  been  proved  in 
[Motwani  971  that  the  above  relationship  holds  if  the 
2 
following  bound  on  N  is  satisfied:  N  2- 
ln-. 
6 
When  the  value  of  dj,j  is  very  small,  then  there  is  a 
chance  of  having  to  use  an  exponential  number  of 
simulations to  estimate the  value Z  within  error  bounds. 
This  is  the  downside of  the above  technique.  However, 
we can use the following approximation.  As noted at the 
end of Sec. 2, only the high dj,j values significantly affect 
the  data integrity of  diverse duplex systems.  Hence,  for 
very  low  di,j  values,  accuracy  is  not  very  important  as 
long  as  we  do  not  grossly  over-estimate  the  di,j  value. 
For  example,  we  can  set  a  threshold  that  we  are 
concemed  about  the  di,j  values  greater  than  0.5.  This 
means, that the number of samples N  we have to consider 
during  Monte-Carlo 
by 
8
N2,1ny. 
& L  
We  perform  M  such  Monte-Carlo  simulations  (the 
value  of  M will  be  discussed later  in  this  section  and  is 
derived  in  Appendix  B)  -  let  us  suppose  that  the 
estimated di,j values from these Monte-Carlo simulations 
are Z1, Z2, ..., ZM.  If  one of  these Zj'S  is less than  0.5, 
we  conclude  that  the  di,j value  is  the  least  of  all  Zi'S. 
Otherwise,  the  di,j  value  is  obtained  by  averaging  the 
values of  Zi's.  We  analyze  this estimation  technique  in 
Appendix  B  and  demonstrate  that  our  Monte-Carlo 
simulation  is adaptive and  suits the current application  - 
it  provides  very  good  estimates for high  di,j  values  and 
makes sure that we do not erroneously estimate very high 
(optimistic) values when the actual di,j value is extremely 
small  (less  than  0.5).  The  overall  algorithm  is  shown 
next. 
simulation 
2
d 
is 
given 
Adaptive M onte-Car I o Simulation 
Inputs: M, N, a duplex system, a fault pair (fj, fj) 
Output: The dj,jvalue  of  a fault pair 
1.  Model  the  problem  as  a  signal  probability  calculation 
problem (Sec. 5.1). 
2.  Run  M  Monte-Carlo  experiments  each  containing  N 
simulations. 
3.  Store  the  results  obtained  from  each  of 
the  M 
4. If (the 
from an experiment  o.5)  then 
The dj,jvalue  of  the fault pair =the minimum 
result obtained from M experiments. 
Else The dj,jvalue  of  the fault pair = average of  the results 
obtained from M experiments. 
End 
31 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 04:03:47 UTC from IEEE Xplore.  Restrictions apply. 
Next.  we  consider  some  realistic  values  of 
the 
various  parameters  (M,  6  and  E) 
for  Monte-Carlo 
simulation and show the reduction in the number of  input 
combinations that  must be  applied  to  estimate  the  value 
of di,j. We can assume that the value of  Sis 2 
-20 . 
to  apply  a  total  of  3  million 
If  we can tolerate  an  error of  1%  for high values  of 
dj,j - i.e..  the value  of  E  is 0.01 - then, in  each  Monte- 
Carlo  simulation we  have  to  apply N = 1.520,OOO  input 
combinations; for 2 such Monte-Carlo experiments (M = 
2)  we  have 
input 
combinations. and for  10 such experiments (M = 10) we 
have  to  apply  a  total  of  around  15  million  input 
combinations.  When  the number  of  inputs of  the  given 
logic  function  is  very  high  (greater  than  30),  this 
technique proves  to  be  very  effective.  The  probability 
that we will erroneously make a very pessimistic estimate 
(= Mb) (proved in Appendix 
of d j j  is approximately 2 
B).  The probability that  for exponentially low  values of 
djJ. we will make a very optimistic estimate greater than 
-17 
0.5  is  approximately 
for  an  n-input  logic 
r 