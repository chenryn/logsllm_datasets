    5l seems to explode on the TST instruction
            TST $3, R0
    5a is quite happy to assemble this, but 5l then produces
    main.tst: illegal combination TST C_RCON C_REG C_NONE, 8 1
    (3) TST $3,R0,
    main.tst: illegal combination TST C_RCON C_REG C_NONE, 8 1
    (3) TST $3,R0,
    I conjecture this might be easy to fix since the very similar TEQ instruction works fine.
    -------------------
    What steps will reproduce the problem?
    Save the attached files into a temporary directory
    Run
    GOARCH="arm" GOOS="linux" go build
    What is the expected output?
    Nothing (it compiles)
    What do you see instead?
    # _/tmp/tst
    main.tst: illegal combination TST C_RCON C_REG C_NONE, 8 1
    (3) TST $3,R0,
    main.tst: illegal combination TST C_RCON C_REG C_NONE, 8 1
    (3) TST $3,R0,
    Which compiler are you using (5g, 6g, 8g, gccgo)?
    5a & 5l
    Which operating system are you using?
    Cross compiling for arm linux on amd64 linux
    $ go-linux-arm env
    GOARCH="arm"
    GOBIN=""
    GOCHAR="5"
    GOEXE=""
    GOHOSTARCH="amd64"
    GOHOSTOS="linux"
    GOOS="linux"
    GOPATH="/home/ncw/Code/Go"
    GORACE=""
    GOROOT="/home/ncw/Code/go"
    GOTOOLDIR="/home/ncw/Code/go/pkg/tool/linux_amd64"
    CC="gcc"
    GOGCCFLAGS="-g -O2 -fPIC -marm"
    CGO_ENABLED="0"
    Which version are you using?  (run 'go version')
    go version devel +77be25034f84 Fri Jul 19 01:22:26 2013 +0400 linux/amd64
Attachments:
  1. tst.s (74 bytes)
  2. tst.go (49 bytes)