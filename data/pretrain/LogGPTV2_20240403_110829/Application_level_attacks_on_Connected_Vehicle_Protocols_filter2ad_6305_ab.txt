tents
V2 Insufﬁcient
mation
infor-
V3 Inadequate identi-
ﬁer binding
V4 Incomplete or un-
safe protocol logic
V5 Trust delegation
Explanation
Attacker sends messages
with false information
Critical data not communi-
cated
Incorrect binding of physical
object to logical object
Protocol does not consider
all scenarios
Decisions delegated to possi-
bly malicious participant
Table 1: Vulnerability Classiﬁcation in Networked Cyber-
physical Systems
Leave Maneuver: The departing vehicle initiates the pro-
cess by sending a LEAVE_REQ message. The leader sends a
LEAVE_ACCEPT message and then split process starts. Once
the leaving vehicle changes lane, a GAP_CREATED message
is broadcast. A merge process begins to reduce the gap until
the platoon has the target gap distance between each car.
Change Lane Maneuver: In this maneuver, the platoon
leader decides that the platoon needs to change lane. A pla-
toon might need to change lanes if the platoon need to exit the
highway or if it has been given instruction from the RSU due
to lane congestion. The platoon leader sends CHANGE_LANE
instruction to all the other vehicles in the platoon and they
perform the maneuver together following the leader’s lane
change. After that, all the followers send an ACK message to
the leader, if they changed the lane successfully.
4 Vulnerability Analysis and Classiﬁcation
It is tempting to consider networked cyber-physical systems
such as CV as simply another networked system from the
perspective of security, and indeed this is the case with re-
spect to the vulnerability vectors. However, these systems
differ in two important aspects with profound implications on
vulnerabilities and defenses. The systems are (1) cooperative:
they coordinate to accomplish a combined outcome; and (2)
constrained by physics: protocol logic, as well as misbehav-
ior outcomes are deﬁned with respect to their impact on the
system in the physical world, for example, considering both
space and time.
The factors, outlined above, lead to vulnerability classes
that are tied to the protocol logic and the physical system.
Based on our analysis of multiple CV applications, we iden-
tiﬁed a number of vulnerability classes, which we believe
generalize to other networked cyber-physical systems as well.
These vulnerabilities arise even if vehicles have a certiﬁcate,
which, to begin with, is not that difﬁcult to obtain.
The ﬁrst vulnerability class (V1) relies on the ability of the
attacker to generate messages with malicious content (e.g.,
USENIX Association        22nd International Symposium on Research in Attacks, Intrusions and Defenses 461a fake location). By manipulating the information shared to
other participants, the protocol logic can be exploited leading
to safety or performance compromises. A related class of
vulnerability (V2) concerns protocols where information that
is critical to a sound decision is not considered, perhaps be-
cause it is not available, or is not exchanged. For example, the
vehicles’ lane position and platoon identiﬁcation number are
important parameters that we discovered were not considered
when initiating a merge.
A third class of vulnerability (V3) relates to ambiguities
that arise in binding identiﬁers to vehicles, the act of associ-
ating a detected physical information with a moving object
such as a vehicle or pedestrian that is known through commu-
nication messages. Speciﬁcally, sensors can detect physical
signals such as proximity to an object and mistakenly asso-
ciate it with a different object in the message identiﬁer space.
For example, an attacker may pretend to be a platoon leader
while a vehicle is attempting to join the platoon, a different
vehicle may be mistakenly identiﬁed as the attacker/leader.
The next vulnerability class (V4) relates to under-speciﬁed
or incomplete protocol logic. The application logic fails to
consider corner cases such as the sudden loss of a platoon
leader. In the reference CACC implementation [15], follower
cars drive aimlessly if the platoon leader does not commu-
nicate with them. Ensuring the robustness of the protocol
algorithm is essential for secure application.
The ﬁnal vulnerability class (V5) arises when one object in
the system delegates decisions to a malicious or compromised
object, thus safety can be compromised. For example, trust
is delegated to the platoon leader in CACC which enables
arbitrary dangerous maneuvers that can cause crashes and
blocking emergency vehicles.
5 Application level attacks on CACC
In this section, we present application layer attacks that at-
tempt to exploit the functionality of the PMP implementation
of CACC. These attacks were identiﬁed from a detailed code
review of the PMP implementation. In each attack, we start
with explaining the maneuver functionality and consider an
attacker that participates in the protocol, sending messages in
a way that passes the certiﬁcate based authentication and the
application logic but results in disrupting the operation of one
or more vehicles. We demonstrate the impact of these attacks
in later sections.
5.1 Attack 1: Merge over large distances
If two platoons are traveling in the same lane and they are
close enough while exchanging messages with each other,
the PMP application allows them to merge to form one pla-
toon for added efﬁciency. The application checks prerequisite
conditions for the merge, such as, ensuring that the resulting
Figure 1: Attack scheme of distant merge attack
Figure 2: Attack scheme of the fake obstacle attack
combined platoon does not exceed the size limit. In our exper-
iments, we found out that for two platoons to merge, the rear
platoon must receive beacon messages from the front platoon.
Then, it measures a certain distance to the last member of the
front platoon using its ranging sensor. In our attack scenario,
the attacker takes advantage of fake message contents (V1)
and insufﬁcient information (V2) vulnerabilities to target two
platoons that are not within the communication range of each
other. The attacker in this scenario is located between two
platoons such that it can communicate with both platoons
simultaneously and deceive ranging sensor by pretending that
it is a member of the front platoon. For a farther distance,
the attacker can have a sophisticated radio that can send and
receive messages for a longer range.
The attack (Fig. 1) begins when the attacker replays the
front platoon beacon messages to the rear platoon; since they
are merely instantaneous replaying messages, the credentials
on these messages are considered valid by the receiving ve-
hicles. Upon receiving these beacons, the leader of the rear
platoon will check to see if a platoon exists ahead by using
its local sensors to look for a car from the front platoon in the
lane ahead, which will be in this case, our malicious vehicle.
The rear platoon will then speculate that the front platoon is
462          22nd International Symposium on Research in Attacks, Intrusions and DefensesUSENIX Associationapproaching and initiates merging if the new platoon size is
under the predeﬁned permissible threshold (i.e., size of the
combined platoon is less than the maximum platoon size).
The rear platoon leader extracts the platoon ID of the front
platoon from the beacon and sends a unicast merge request
message to the front platoon (which is again relayed by the
attacker). The front platoon leader, if it accepts the request,
sends a unicast merge accept message, which the attacker then
transmits back to the rear platoon. Upon receiving it, the rear
platoon leader reduces its time-gap by increasing the speed
of the whole platoon to the maximum limit to catch up. At
this point, the attack impact shows up when the rear platoon
increases its speed for a large distance degrading both safety
and economy. Once the inter-platoon spacing becomes small,
the rear platoon leader sends change platoon message to all
its followers to change the platoon leader to the front platoon
leader. Finally, the rear platoon leader sends a merge done
message to front platoon leader and changes its state from
leader to follower.
5.2 Attack 2: Fake Obstacle Attack
A platoon may have automatic incident detection enabled;
with this option, the platoon can receive and rapidly react to an
obstacle message. Upon encountering an obstacle or accident
in its lane, a vehicle will come to a stop and send an obstacle
message with its position to any oncoming vehicles, allowing
them to stop or change their lanes when they arrive at the
location of the incident. In this scenario, the malicious vehicle
exploits the fake content (V1) vulnerability and creates a
false obstacle message with a speciﬁc location in the lane,
forcing incoming platoons to slow down until they stop or
change lanes. The attack scheme is shown in Fig. 2. The fake
obstacle attack affects the speed of the platoon and this rapid
deceleration can affect safety. The presence of an obstacle
is impossible to validate by a distant platoon. Note, that it
is possible to combine this attack with Attack 1 to attempt
to create an accident by ﬁrst speeding up the cars and then
forcing them to stop quickly.
5.3 Attack 3: Merge across different lanes
In this scenario, we attack two platoons, within the communi-
cation range of each other, that are traveling in separate lanes.
Critical variables such as lane number and other surroundings
information for each vehicle are neither communicated nor
checked (V2 and V4 vulnerabilities). The attacker can look
for a slow platoon in front and try to merge it with a faster
platoon from a different lane to slow down trafﬁc ﬂow.
The attack (Fig. 3) starts when the malicious vehicle is
in front of the rear platoon, and sends messages pretending
to be a part of the other platoon (in another lane). This can
be done by manipulating the platoon ID parameter in Basic
safety message. The rear platoon will see the attacker vehicle
Figure 3: Attack scheme of merging across lanes attack
Figure 4: Attack scheme of platoon takeover attack
using its LiDAR sensor and assumes that the attacker is part
of the platoon (V3). Information such as Lane ID is neither
communicate nor checked. It then begins a merging maneuver.
As consequence, the adjacent leading platoon leader sends
a merge accept message. As a result, the rear platoon leader
increases the speed of the platoon to catch up. Afterwards, the
attacker leaves its location and the rear platoon leader sends
change platoon to all its followers.
5.4 Attack 4: Platoon Takeover
This attack is conceptually similar to the Attack 3 except that
there is only one platoon (the rear platoon), with the attacker
attempting to become its leader. The attacker counts on differ-
ent vulnerabilities but mainly on the fake message contents
(V1) vulnerability by pretending to be the leader of the ﬁc-
titious front platoon by generating any logically consistent
description of the front platoon such as the locations and
USENIX Association        22nd International Symposium on Research in Attacks, Intrusions and Defenses 463speeds of a fake platoons’ members in front of the victim pla-
toon. The attacker transmits the fake messages for each false
vehicle of the fake platoon. The rear platoon leader will notice
the attacker through the LiDAR sensor and initiate a merging
maneuver since it believes that this is the platoon in front of
it that it listens to. The attacker responds to all requests from
the rear platoon. This leads to the completion of the merging
process. The platoon is now under the attackers’ control and
can be manipulated in a dangerous manner as we show in
Section 6.1, exploiting the trust delegation (V5) vulnerability.
We show the steps of this attack are shown in Fig. 4.
6 Experimental Attack Scenarios and Results
In this section, we ﬁrst describe the simulation set up used in
the experiments. We then present an experimental evaluation
of the proposed attacks and evaluate their impact on the trafﬁc
system with respect to safety and performance. Given the lim-
ited availability of deployed CV applications, and the closed
nature of these systems, we elected to evaluate the attacks us-
ing simulation. We used VENTOS (VEhicular NeTwork Open
Simulator), an extension of Veins [27]. Veins integrates a C++
simulator for studying vehicular trafﬁc ﬂows, collaborative
driving, and interactions between vehicles and infrastructure
with another simulator which models communication through
a DSRC-enabled wireless communication. Veins combines
two widely used simulators, Simulation of cars/physics sim-
ulator (SUMO) [5] and OMNET++ [3]. SUMO is an open-
source road trafﬁc simulator developed by the Institute of
Transportation Systems at the German Aerospace Center and
serves as the trafﬁc ﬂows physics simulator. This framework
has been used in hundreds of studies from academia, industry,
and the government (a partial list can be found on the project
[8]). VEINS uses SUMO’s Trafﬁc Control Interface, TraCI,
to communicate simulation commands to it. OMNET++ is an
open-source simulation package and carries out the wireless
communication simulation. We conﬁgure it to use the models
for the IEEE 802.11p [21] protocol, a standard adopted for
V2V communication. We use Wave Short Message Proto-
col (WSMP) to carry beacon and micro-command messages.
These messages are directly sent to the data-link layer which
uses continuous channel access based on IEEE 1609.4.
6.1 Dangerous Attack Demonstrations
First, we demonstrate the potential impacts of the attacks
using two speciﬁc scenarios, one causing a collision and the
second interfering with and delaying an emergency vehicle.
Figure 5: Speed proﬁle in collision attack
Figure 6: Speed proﬁle in Emergency Vehicle Attack. The
attacker slows down the emergency vehicle from 70 to 5 mph
of a lane without informing the followers to slow down or
change lanes. The followers’ braking systems may not be
able to stop if an obstacle appears immediately in their path.
We can see the sudden stop then collision at the time 60s for
the victim vehicles in Fig. 5. After investigating this scenario
in detail, we discovered that vehicles in the platoon were not
keeping a safe distance between each other. Instead, they
were delegating trust (V5) to the platoon leader (the attacker),
trusting that the leader will maintain safe separation from any
obstacles.
Emergency Vehicle Interference: We again start with the
attacker using the Platoon Takeover attack, described in Sec-
tion 5.4. The attack is comprised of Attack vector V5 (un-
trusted deligation). The attacker slows down the whole pla-
toon then makes some followers move to another lane. If an
emergency vehicle (police or ambulance) is coming fast in
that lane, a slow vehicle on the same lane will make it much
slower or even stop it, as shown in Fig. 6. This can cause
catastrophic slowdowns in real life (e.g., potential loss of
life). Other approaches to delay an emergency vehicle can be
devised, for example, using the merge across different lanes