配置绑定。请运行以下命令启动该工具：
``` screen
~]$ nmtui
```
此时会出现文本用户界面，无效命令会显示用法信息。
:::
::: para
可使用箭头键或按 [**Tab**]{.keycap} 在选项间前进，并按
[**Shift**]{.keycap}+[**Tab**]{.keycap} 后退。按 [**Enter**]{.keycap}
选择该选项。按 [**Space**]{.keycap} 键选择复选框状态。
:::
::: {.procedure xmlns:d="http://docbook.org/ns/docbook"}
[⁠]{#ch-Configure_Network_Bonding.html#procedure-nmtui-Adding_a_New_Bond_Connection}
1.  ::: para
    在开始菜单中选择 [**编辑连接**]{.guilabel}。选择
    [**添加**]{.guilabel} 时会打开 [**编辑连接**]{.guilabel} 页面。
    :::
    ::: figure
    [⁠]{#ch-Configure_Network_Bonding.html#exam-Add_a_Connection_Bond}
    ::: figure-contents
    ::: mediaobject
    [⁠]{#ch-Configure_Network_Bonding.html#mediaobj-nmtui_Add_a_Connection_Bond}![NetworkManager
    文本用户界面的添加绑定连接菜单](images/nmtui_Add_a_Connection_Bond.png)
    :::
    :::
    **图 4.1. NetworkManager 文本用户界面的添加绑定连接菜单**
    :::
2.  ::: para
    选择 [**绑定**]{.guilabel}，然后选择 [**创建**]{.guilabel}
    打开绑定的 [**编辑连接**]{.guilabel} 页面。
    :::
    ::: figure
    [⁠]{#ch-Configure_Network_Bonding.html#exam-nmtui-Bonding-Edit_Connection}
    ::: figure-contents
    ::: mediaobject
    [⁠]{#ch-Configure_Network_Bonding.html#mediaobj-nmtui-Bonding-Edit_Connection}![NetworkManager
    文本用户界面的配置绑定连接菜单](images/nmtui-Bonding-Edit_Connection.png)
    :::
    :::
    **图 4.2. NetworkManager 文本用户界面的配置绑定连接菜单**
    :::
3.  ::: para
    此时需要在绑定中添加从属接口。要添加从属接口，请选择
    [**添加**]{.guilabel} 打开 [**新建连接**]{.guilabel}
    页面。选择连接类型后，请点击 [**创建**]{.guilabel} 按钮。
    :::
    ::: figure
    [⁠]{#ch-Configure_Network_Bonding.html#exam-nmtui-Bonding-Add_Slave_Connection}
    ::: figure-contents
    ::: mediaobject
    [⁠]{#ch-Configure_Network_Bonding.html#mediaobj-nmtui-Bonding-Add_Slave_Connection}![NetworkManager
    文本用户界面的配置绑定从属连接菜单](images/nmtui-Bonding-Add_Slave_Connection.png)
    :::
    :::
    **图 4.3. NetworkManager 文本用户界面的配置绑定从属连接菜单**
    :::
4.  ::: para
    显示从属连接 [**编辑连接**]{.guilabel} 页面。在
    [**Device**]{.guilabel} 字段输入所需从属设备名称或 MAC
    地址。如有必要，选择 [**以太网**]{.guilabel} 标签右侧的
    [**显示**]{.guilabel}，输入作为绑定的 MAC 地址的克隆 MAC 地址。选择
    [**确定**]{.guilabel} 按钮保存辅设备。
    :::
    ::: note
    ::: admonition_header
    **注意**
    :::
    ::: admonition
    ::: para
    如果没有为该设备指定 MAC 地址，则会在重新载入
    [**编辑连接**]{.guilabel} 窗口时自动填写 [**Device**]{.guilabel}
    部分，但只能在成功找到该设备时方可有此效果。
    :::
    :::
    :::
    ::: figure
    [⁠]{#ch-Configure_Network_Bonding.html#exam-nmtui-Bonding-Edit_Slave_Connection}
    ::: figure-contents
    ::: mediaobject
    [⁠]{#ch-Configure_Network_Bonding.html#mediaobj-nmtui-Bonding-Edit_Slave_Connection}![NetworkManager
    文本用户界面的配置绑定从属连接菜单](images/nmtui-Bonding-Edit_Slave_Connection.png)
    :::
    :::
    **图 4.4. NetworkManager 文本用户界面的配置绑定从属连接菜单**
    :::
5.  ::: para
    [**从属连接**]{.guilabel}
    部分显示绑定从属连接名称。重复上述步骤添加其他从属连接。
    :::
6.  ::: para
    点击 [**确定**]{.guilabel} 按钮前请检查并确定设置。
    :::
    ::: figure
    [⁠]{#ch-Configure_Network_Bonding.html#exam-nmtui-Bonding-Complete}
    ::: figure-contents
    ::: mediaobject
    [⁠]{#ch-Configure_Network_Bonding.html#mediaobj-nmtui-Bonding-Complete}![NetworkManager
    文本用户界面中完成的绑定](images/nmtui-Bonding-Complete.png)
    :::
    :::
    **图 4.5. NetworkManager 文本用户界面中完成的绑定**
    :::
:::
::: para
有关绑定术语的定义请查看 [第 4.6.1.1 节
"配置绑定标签"](#ch-Configure_Network_Bonding.html#sec-Configuring_the_Bond_Tab){.xref}。
:::
::: para
有关安装 [**nmtui**]{.application} 的信息请查看 [第 1.5 节
"使用文本用户界面（nmtui）进行网络配置"](#ch-Introduction_to_RHEL_Networking.html#sec-Networking_Config_Using_nmtui){.xref}。
:::
:::
::: section
::: titlepage
# [⁠]{#ch-Configure_Network_Bonding.html#sec-Network_Bonding_Using_the_NetworkManager_Command_Line_Tool_nmcli}4.3. 使用 NetworkManager 命令行工具 nmcli {.title}
:::
::: para
请运行以下命令创建名为 *mybond0* 的绑定：
``` screen
~]$ nmcli con add type bond con-name mybond0 ifname mybond0 mode active-backup
Connection 'mybond0' (9301ff97-abbc-4432-aad1-246d7faea7fb) successfully added.
```
请运行以下格式的命令添加从属接口：
``` screen
~]$ nmcli con add type bond-slave ifname ens7 master mybond0
```
要添加其他从属接口，请重复上一个命令，在命令中使用新的接口，例如：
``` screen
~]$ nmcli con add type bond-slave ifname ens3 master mybond0
Connection 'bond-slave-ens3-1' (50c59350-1531-45f4-ba04-33431c16e386) successfully added.
```
注：因为没有为从属接口提供
`con-name`{.command}，则该名称是接口名称加上类型构成。到目前为止，[**nmcli**]{.application}
只支持以太网从属接口。
:::
::: para
要启动绑定，则必须首先启动从属接口，如下:
``` screen
~]$ nmcli con up bond-slave-ens7
Connection successfully activated (D-Bus active path: /org/freedesktop/NetworkManager/ActiveConnection/14)
```
``` screen
~]$ nmcli con up bond-slave-ens3
Connection successfully activated (D-Bus active path: /org/freedesktop/NetworkManager/ActiveConnection/15)
```
现在可使用以下方法启动绑定：
``` screen
~]$ nmcli con up bond-mybond0
Connection successfully activated (D-Bus active path: /org/freedesktop/NetworkManager/ActiveConnection/16)
```
:::
::: para
有关 [**nmcli**]{.application} 的说明，请参考 [第 2.3 节 "使用
NetworkManager 命令行工具
nmcli"](#ch-Configure_IP_Networking.html#sec-Using_the_NetworkManager_Command_Line_Tool_nmcli){.xref}。
:::
:::
::: section
::: titlepage
# [⁠]{#ch-Configure_Network_Bonding.html#sec-Network_Bonding_Using_the_Command_Line_Interface}4.4. 使用命令行接口（CLI） {.title}
:::
::: para
绑定是由 `bonding`{.filename} 内核模块和名为 *频道绑定接口*
的特殊网络接口生成。
:::
::: section
::: titlepage
## [⁠]{#ch-Configure_Network_Bonding.html#sec-Check_if_Bonding_Kernel_Module_is_Installed}4.4.1. 检查是否已安装 Bonding 内核模块 {.title}
:::
::: para
在 Red Hat Enterprise Linux 7 中默认载入 bonding 模块。可作为
`root`{.systemitem} 运行以下命令载入该模块：
``` screen
~]# modprobe --first-time bonding
```
系统重启后则不会保留这个激活。有关持久载入该模块的详情请查看[*《Red Hat
Enterprise Linux 7
系统管理员指南》*](https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/System_Administrators_Guide/)。注：使用
`BONDING_OPTS`{.command}
指令给出正确的配置文件，则会根据需要载入绑定模式，因此不需要分别载入。
:::
::: para
请使用以下命令显示该模块的信息：
``` screen
~]$ modinfo bonding
```
更多命令选项请查看 `modprobe(8)`{.filename} man page。
:::
:::
::: section
::: titlepage
## [⁠]{#ch-Configure_Network_Bonding.html#sec-Create_a_Channel_Bonding_Interface}4.4.2. 创建频道绑定接口 {.title}
:::
::: para
要创建频道绑定接口，请在 `/etc/sysconfig/network-scripts/`{.filename}
目录中创建名为 `ifcfg-bondN`{.filename} 的文件，使用接口号码替换
*N*，比如 `0`{.filename}。
:::
::: para
可根据要绑定接口类型的配置文件编写该文件的内容，比如以太网接口。最主要的区别是
`DEVICE`{.option} 指令是 `bondN`{.option}（使用接口号码替换 *N*）和
`TYPE=Bond`{.command}。此外还设置 `BONDING_MASTER=yes`{.command}。
:::
::: example
[⁠]{#ch-Configure_Network_Bonding.html#ex-Example_ifcfg-bond0_Interface_Configuration_File}
**例 4.1. ifcfg-bond0 接口配置文件示例**
::: example-contents
::: para
频道绑定接口示例。
:::
``` programlisting
DEVICE=bond0
NAME=bond0
TYPE=Bond
BONDING_MASTER=yes
IPADDR=192.168.1.1
PREFIX=24
ONBOOT=yes
BOOTPROTO=none
BONDING_OPTS="bonding parameters separated by spaces"
```
::: para
NAME 指令在 [**NetworkManager**]{.application}
命名连接配置文件时非常有用。ONBOOT
决定如何在引导时启动该配置文件（也就是说，如何自动连接某个设备）。
:::
:::
:::
::: {.important xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**重要**
:::
::: admonition
::: para
必须在 `ifcfg-bondN`{.filename} 接口文件的
`BONDING_OPTS="bonding parameters"`{.option}
指令中，使用以空格分开的列表指定 bonding
内核模块。请[*不要*]{.emphasis}在
`/etc/modprobe.d/bonding.conf`{.filename} 文件或弃用的
`/etc/modprobe.conf`{.filename} 文件中为绑定设备指定选项。
:::
::: para
`max_bonds`{.option} 参数不是具体接口的参数，且不应在使用
`BONDING_OPTS`{.command} 指令的 `ifcfg-bondN`{.filename}
文件中设定，因为这个指令会让网络脚本根据需要创建绑定接口。
:::
::: para
有关配置 bonding 模块及查看绑定参数的操作，请查看 [第 4.5 节
"使用频道绑定"](#ch-Configure_Network_Bonding.html#sec-Using_Channel_Bonding){.xref}。
:::
:::
:::
:::
::: section
::: titlepage
## [⁠]{#ch-Configure_Network_Bonding.html#sec-Creating_SLAVE_Interfaces}4.4.3. 创建从属接口 {.title}
:::
::: para
频道绑定接口是["[主]{.quote}"]{.quote}接口，同时要绑定的接口是["[从属]{.quote}"]{.quote}接口。创建频道绑定接口后，必须在从属接口的配置文件中添加
`MASTER`{.option} 和 `SLAVE`{.option}
指令，以便配置要绑定在一起的接口。每个从属接口的配置文件都几乎一样。
:::
::: example
[⁠]{#ch-Configure_Network_Bonding.html#ex-Example_Slave_Interface_Configuration_File}
**例 4.2. 从属接口配置文件示例**
::: example-contents
::: para
例如：将两个以太网接口 `eth0`{.literal} 和 `eth1`{.literal}
以频道方式绑定，它们可类似如下：
:::
``` programlisting
DEVICE=ethN
NAME=bond0-slave
TYPE=Ethernet
BOOTPROTO=none
ONBOOT=yes
MASTER=bond0
SLAVE=yes
```
::: para
在这个示例中，使用该接口的数字值替换
*N*。注：如果某个接口有一个以上配置文件，或配置文件中包含
`ONBOOT=yes`{.command}，则可能会产生彼此竞争，同时激活普通的
`TYPE=Ethernet`{.command} 配置文件，而不是绑定从属接口。
:::
:::
:::
:::
::: section
::: titlepage