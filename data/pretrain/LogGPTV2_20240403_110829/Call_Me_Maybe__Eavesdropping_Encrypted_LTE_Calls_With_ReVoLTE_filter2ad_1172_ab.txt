While the security measures of higher layers of the protocol
stack only secure the signaling messages of SIP, the RTP data
(media plane) can be secured via the encryption and integrity
protection of the SRTP protocol. According to the media
plane protection speciﬁcation [7], two scenarios are possible:
1) either the data is protected between the UE and the IMS,
which is called end-to-access edge protection, or 2) both UEs
protect their data with an end-to-end solution. Enabling media
protection is optional and must be supported by the IMS and
UE.
As REVOLTE focuses on decrypting the media plane, ad-
ditional encryption beyond the second layer can hinder the
success of the attack. Therefore, we analyze the occurrence
of additional AKA and the use of SRTP in a series of prelim-
inary experiments (see Section 4). In our experiments, we
can verify that—despite the availability of an additional layer
of security—the tested networks do not enable media plane
protection.
3 ReVoLTE Attack
The goal of the REVOLTE attack is to recover the encrypted
contents of a recorded VoLTE call to eavesdrop the conver-
sation eventually. To this end, we decrypt the voice packets
of an over-the-air transmission to recover the original plain-
text of the voice stream. REVOLTE exploits a keystream
reuse [36] that appears when two subsequent calls take place
during one active radio connection. In those cases, the packets
of the ﬁrst call are encrypted with the same keystream as the
packets of the second call. REVOLTE makes use of this reuse,
i. e., the attack recovers the initial keystream by conducting a
Figure 2: Encryption in LTE
eNodeB (cf. Figure 2). To this end, the Packet Data Con-
vergence Protocol (PDCP) applies the encryption algorithm
(EEA) that the Radio Resource Control (RRC) security mode
command selects and activates. Besides Advanced Encryption
Standard (AES) in counter mode (EEA2), Snow3G (EEA1)
and ZUC (EEA3) are alternative ciphers. To encrypt a packet,
its plaintext gets XOR-ed with a keystream block that the
encryption algorithm generates for each packet individually,
which results in the ciphertext representation. The following,
input parameters document the standard setup for encryption
algorithms on the radio layer:
• Key (128-bit): LTE introduces a key hierarchy and uses
separate keys for different domains. The root key (kasme)
for all keys is the key derived by the AKA. As VoLTE
data is user data, the key is the user plane key (kup),
which is established for each new radio connection.
• Count (32-bit): For user data, the count consists of the
PDCP sequence number + PDCP hyperframe number1.
The length of PDCP sequence number is individually
conﬁgured for a bearer during the setup. The following
PDCP sequence number length are possible: 5, 7, 12,
15, and 18 bit.
• Bearer (5-bit): The bearer identity depends on the used
bearer. Table 1 gives an overview of the possible input
parameters.
• Direction (1-bit): The direction bit deﬁnes if the data is
• Length: The length deﬁnes the length of the keystream
block. However, this input parameter does not inﬂuence
the keystream generation itself.
either sent uplink or downlink.
Count, bearer, and direction represent the initialization
vector of the underlying encryption algorithm and lead to a
deterministic keystream, i. e., reusing the same information
results in the same keystream. According to the speciﬁcation,
the eNodeB should avoid the keystream reuse [10][5.3.1.2].
However, the REVOLTE attack exploits an incorrect imple-
mentation, in which affected eNodeBs reset the count and
reuse the bearer identity for a second call, which eventually
leads to reusing the same keystream.
1We note that the hyperframe number of the PDCP as speciﬁed in [6] is
not the same hyper system frame number as speciﬁed in [9].
76    29th USENIX Security Symposium
USENIX Association
COUNTKEYBEARERDIRECTIONLENGTHEEAPLAINTEXTBLOCKCIPHERTEXTBLOCKKEYSTREAMBLOCKsecond call within a short time window after the initial (tar-
get) call. Once the keystream is recovered, the attack allows
us to decrypt and access the contents of the recorded target
call. In the following, we ﬁrst introduce the general attack
concept and its core components. Furthermore, we provide
details on the technical and operational aspects of REVOLTE,
and discuss the many practical challenges introduced by the
representation of VoLTE data.
3.1 Attack Concept Overview
The attack concept of REVOLTE consists of three core com-
ponents. (i) The technical aspects of the attack summarize the
attack vector and the required steps to exploit the keystream
reuse. (ii) The operational component summarizes all points
of the attack that relate to conducting the attack, i. e., the
required capabilities (attacker model), the procedure of steps
(attack procedure), and the monitoring of VoLTE calls (data
recording). (iii) Assuming a successful attack operation, the
adversary receives data that needs to be processed in the sub-
sequent steps. As introduced in Section 2.2, VoLTE trafﬁc
contains speciﬁc transmission characteristics, e. g., the use of
comfort noise, or multimedia codecs, which add additional
challenges for the processing of data that we need to consider.
In the following, we ﬁrst explain the underlying attack vector
in more detail and introduce the steps required to derive the
VoLTE plaintext in cases of keystream use. Using this as the
technical foundation of the attack, we then describe the opera-
tional aspects of the attack and discuss the various challenges
introduced by the speciﬁc elements of VoLTE voice streams.
3.2 Technical: Attack Vector
Whenever a UE connects to a base station, a new user plane
key gets negotiated for the radio connection. While the
general concept requires new keys for new connections, a
keystream reuse can occur when two subsequent VoLTE calls
take place within one radio connection.
In this case, the
eNodeB signals that the same input parameters, i. e., the di-
rection, bearer id, and the count, shall be used with the freshly
installed key for both calls and thus the keystream is reused.
As a consequence, the same keystream encrypts a packet
of the ﬁrst call (target call) and a packet of the second call
(keystream call), both with the same corresponding count.
The attacker exploits the keystream reuse by XOR-ing the
recorded ciphertexts of the target call with the keystream
derived from the second keystream call, as summarized in
Figure 3. The keystream call allows the attacker to extract the
keystream by XOR-ing the sniffed trafﬁc with the keystream
call plaintext. The keystream block is then used to decrypt the
corresponding captured target ciphertext. The attacker thus
computes the target call plaintext.
Exploiting the keystream reuse is the central attack vector
of REVOLTE. The required steps are comparably simple and
Figure 3: REVOLTE Attack vector overview: the attacker
can decrypt the packets of the recorded target call since it uses
the same keystream as the second adversarial keystream call.
only have a minor inﬂuence on the real-world feasibility of
the attack. Much more challenging aspects of its feasibility
are the operational steps for recording trafﬁc in the required
way, and countering the challenges of the VoLTE-speciﬁc
data representation.
3.3 Operational: Attack Procedure
The operational aspects of the attack determine the steps re-
quired for successful decryption of the target call in a real-
world setting. More precisely, these aspects deﬁne the attacker
model and the required steps of the attack procedure that in-
clude everything beginning with the ability to record a VoLTE
call right up to the decryption step.
3.3.1 Attacker Model
The attack consists of two main phases: the recording phase
in which the adversary records the target call of the victim,
and the call phase with a subsequent call with the victim. For
the ﬁrst phase, the adversary must be capable of snifﬁng radio-
layer transmissions in downlink direction, which is possible
with affordable hardware for less than $1,400 [1]. Further-
more, the adversary can decode recorded trafﬁc up to the en-
cryption data (PDCP) when she has learned the radio conﬁg-
uration of the targeted eNodeB. However, our attacker model
does not require the possession of any valid key material of
the victim. The second phase requires a Commercial Off-The-
Shelf (COTS) phone and knowledge of the victim’s phone
number along with his/her current position (i.e., radio cell).
3.3.2 Attack Procedure
As REVOLTE aims to recover the encrypted contents of a
voice call, its two attack phases ﬁrst cover the recording of
this target call, before the subsequent keystream call allows
to exploit the keystream reuse and to gather all information
required to decrypt the target call. Figure 4 depicts the speciﬁc
procedures of both attack phases, which we describe in the
USENIX Association
29th USENIX Security Symposium    77
Keystream Call Plaintext (m')Keystream Call Ciphertext (c')Keystream Block (k')Keystream Call (Second Call)Target Call (First Call)Target Call Ciphertext (c)Target Call Plaintext (m)==bearer, countbearer, countFigure 4: REVOLTE sequence diagram: The target call is encrypted with the same keystream as in the keystream call.
following. Please note that we highlight the input parameters
of different bearers with distinct colors.
Target Call. Before the actual call takes place, the victim’s
UE establishes a connection with the eNodeB in its radio
cell, which uses the two default bearers DRB1 and DRB2 for an
Internet and an IMS connection. The security mode command
generates a new user-plane key and activates the encryption
for all data bearers; the user-plane key remains valid for the
entire radio connection.
After this preliminary procedure, a standard VoLTE call es-
tablishment works as follows. SIP messages establish the call
between the victim and the IMS (2a.), and the IMS forwards
the call to the calling partner (2b.). Note that for REVOLTE
it does not make a difference whether it is an incoming or out-
going call, as the call establishment procedure is the same in
both cases. Besides the two standard bearers of the radio con-
nection establishment (1.), the VoLTE connection requires a
third dedicated bearer that transports the voice data between
the eNodeB and the UE (3.). This dedicated bearer DRB3
transports the RTP data (4.), i. e., it provides the data relevant
for the REVOLTE attack. When the phone call ends, the
dedicated bearer DRB3 is removed again (5.).
The adversary monitors the target call by placing a down-
link sniffer in the same radio cell that the victim’s UE connects
to. We explain later how an attacker can decode the sniffed
data up to the encrypted PDCP layer (Section 3.4.1).
Keystream Call. The adversary uses the downlink sniffer
to detect the end of the target call, i. e., when no more data
occurs on DRB3. In response, she initiates the keystream call,
where the attacker’s UE dials the victim’s UE (6.). Again,
we see the same call setup procedure as for the target call
(2. and 3.). At this point, one crucial thing happens: The
second VoLTE call requires another dedicated bearer DBR3 to
transport the voice data (7.). Since the subsequent keystream
call occurs directly after the initial target call and uses the
same radio connection, the count for the dedicated bearer
resets, and all input parameters are the same as in the target
call. As this results in the same keystream, all RTP data (8.)
is encrypted in the same way as the voice data of the target
call. As soon as a sufﬁcient amount of keystream data was
generated, the adversary cancels the call (9.).
Beneﬁts. At this point, we emphasize two fundamental dif-
ferences to the keystream reuse introduced previously in the
technical report by Raza and Lu [36] that help to create a
more realistic attack setup and procedure. First, we do not
depend on jamming, i. e., we do not actively interfere with
the transmission spectrum of the providers, but only use a
passive downlink sniffer that does not change the transmis-
sions of the radio cell. Second, the downlink sniffer allows
recognizing the beginning and end of the target call, which
allows initiating the keystream call immediately afterward.
3.4 Data
While the technical and operational capabilities of the adver-
sary deﬁne the exact process to exploit the attack vector, par-
ticular additional challenges speciﬁc to VoLTE transmissions
78    29th USENIX Security Symposium
USENIX Association
VictimeNodeBCalling PartnerAttacker's UEAttacker's  Sniffer1. Radio Connection Establishment Security Mode CommandBEARER = 1 (SRB1)2a. SIP Call Signaling2b. SIP Call Signaling3. DRB3 Establishment(counter reset for DRB3)4a. RTP / RTCP data5. DRB3 Removal4b. RTP / RTCP dataBEARER = 3 (DRB2)BEARER = 4 (DRB3)Radio Encryption Input: IMS6a. SIP Call Signaling6b. SIP Call Signaling7. DRB3 Establishment(counter reset for DRB3)8a. RTP / RTCP dataTarget CallKeystream Call8b. RTP / RTCP data9. DRB3 Removalinﬂuence the process of eventually decrypting the recorded
target call. In the following, we discuss the inﬂuencing factors
for an exact keystream computation and, in the following step,
for a complete decryption.
3.4.1 Radio Layer Snifﬁng and Decoding
An LTE sniffer samples the physical frequencies of a trans-
mission and decodes radio-layer channels up to the Medium
Access Control (MAC) layer. For the attack, we require to
access decrypted information of PDCP. However, the con-
ﬁguration for decoding the MAC frames to PDCP frames is
conﬁgured by the encrypted RRC layer. That means that the
attacker cannot decode the data up to the PDCP layer correctly,
even if the information is unencrypted as the conﬁguration
is missing. In particular, the RRC reconﬁguration message
when adding the dedicated voice bearer is responsible for this
conﬁguration. Part of this conﬁguration is mapping between
the Logical Channel ID (LCID) and bearer identity, the Radio
Link Control (RLC) mode, PDCP sequence number length,
and the used ROHC proﬁle.
Both academic work and commercial products demonstrate
the feasibility of snifﬁng and decoding LTE signals up to the
MAC layer. Bui et al. [15] describe how to build a down-
link analyzer based on srsLTE [21]. Commercial sniffers
also implement the uplink snifﬁng functionalities [2]. For
our experiments, we utilize the downlink sniffer Airscope by
Software Radio Systems [3]. In preliminary experiments, we
show that the conﬁguration remains stable for an eNodeB. An
attacker can hence learn the conﬁguration before the attack
and decode MAC frames up to the PDCP frames correctly
(see Section 4.1.1).
3.4.2 User-Plane Key Reuse
TThe keystream reuse occurs when the target and keystream
call use the same user-plane encryption key. As this key is up-
dated for every new radio connection, the attacker must ensure
that the ﬁrst packet of the keystream call arrives within the
active phase after the target call. Consequently, the keystream
call must begin to ring before the inactivity timer at the vic-
tim’s UE initiates a switch into the idle mode. However, the
victim can wait as long as she/he wants to pick up the call, as
the SIP messages being exchanged during ringing keep the ra-
dio connection open. Our experiments on the RRC inactivity
timer show that all providers use 10 sec as a threshold.
3.4.3 Exact Keystream Computation
A successful attack depends on the extraction of the ex-
act radio-layer keystream between the victim’s UE and the
eNodeB. Although the adversary knows the packet contents
sent during the keystream call (Step 8. in Figure 4), these
packets pass many different entities on their transmission path
until they are encrypted with the keystream. Consequently,
Figure 5: REVOLTE challenges for computing the exact
keystream.
one central requirement for the attack is a plaintext that re-
mains predictable during the entire transmission process until
reaching the radio layer. Inﬂuencing factors with the ability
to change the plaintext are transcoding, media encryption,
ROHC, and plaintext-ciphertext mapping (cf. Figure 5).
Transcoding. Transcoding destroys bit patterns within the
packets sent by the attack. For extracting the exact keystream,
REVOLTE depends on a predictable plaintext and, therefore,
the attacker data must be the same as the data transmitted
over the radio layer during the keystream call (between 8b
and 8a in Figure 4). We analyze the inﬂuence of transcoding
between shared and different providers in Section 4.1.2.
Media Encryption. Additional media plane encryption is a
feature of the SRTP protocol and must be supported by the
IMS and the UE, which makes it optional to use. When the
network uses end-to-access edge encryption for the media
plane, the sent data receives an additional layer of encryption
between the UE and the IMS. This additional encryption
destroys the bit pattern, which prevents the adversary from
extracting the exact keystream. Our experiments demonstrate
that no additional media encryption is enabled and used in
all tested networks. Thus, we do not expect this to affect the
attack’s success.
Robust Header Compression. During the keystream call,
the attacker can access the complete IP packet, including
the IP, UDP, and RTP headers along with the encoded voice
signal. ROHC can compress these headers before transmitting
the encrypted packet between the UE and the eNodeB; the
network policy deﬁnes which headers are affected by this
compression. With an active ROHC, the adversary cannot
use the entire packet (IP, UDP, and RTP) to calculate the
keystream. Depending on the ROHC proﬁle, the attacker
can only use the RTP payload or the UDP payload for the
keystream calculation. All tested providers use ROHC during
VoLTE calls, which needs to be considered to extract the
keystream.
Plaintext-Ciphertext Mapping. For computing
the
keystream,
the packet containing the plaintext must be
XOR-ed with the corresponding radio-layer ciphertext.
Therefore, the sent and received packets at the UE must be
USENIX Association
29th USENIX Security Symposium    79
eNBUEIMSAttacker's UETranscodingMedia EncryptionROHCOffsetFigure 6: REVOLTE complete decryption.
mapped to the packets recorded on the radio layer, i. e., the
packets of the dedicated voice bearer. Although the dedicated