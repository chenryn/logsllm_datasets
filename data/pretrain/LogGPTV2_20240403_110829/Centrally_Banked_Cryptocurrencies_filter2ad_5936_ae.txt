Brieﬂy, to achieve this fair exchange, we adapt a protocol to
achieve atomic cross-chain trading,9 which provides a Bitcoin-
compatible way for two users to fairly exchange units of one
currency for some appropriate units of another currency; i.e.,
to exchange currency in a way that guarantees that either the
exchange is successful or both users end up with nothing
(so in particular it cannot be the case that one user reclaims
currency and the other does not). If one is less concerned about
compatibility with Bitcoin, then a slightly simpler approach
such as “pay on reveal secret” [33] could be adopted.
9The clearest explanation of this for Bitcoin, by Andrew Miller, can be
found at bitcointalk.org/index.php?topic=193281.msg3315031#msg3315031.
12
To ﬁt our setting,
in which central banks may want
to maintain some control over which other currencies their
currency is traded into and out of (and in what volume), we
modify the existing protocol to require a third party to sign both
transactions only if they are denominated in currencies that are
viewed as “exchangeable” by that party. This serves to not only
signal the third party’s blessing of the exchange, but also to bind
the two transactions together across their respective blockchains.
Our proposal of this protocol thus enables transparent exchanges
that can be approved by a third party, but does not (and cannot)
prevent exchanges from taking place without this approval.
Importantly, however, an auditor can now — with access to
both blockchains — observe the exchange.
VIII. CONCLUSIONS
In this paper, we have presented the ﬁrst cryptocurrency
framework, RSCoin, that provides the control over monetary
policy that entities such as central banks expect to retain. By
constructing a blockchain-based approach that makes relatively
minimal alterations to the design of successful cryptocurrencies
such as Bitcoin, we have demonstrated that this centralization
can be achieved while still maintaining the transparency guar-
antees that have made (fully) decentralized cryptocurrencies so
attractive. We have also proposed a new consensus mechanism
based on 2PC and measured its performance, illustrating that
centralization of some authority allows for a more scalable
system to prevent double spending that completely avoids the
wasteful hashing required in proof-of-work-based systems.
ACKNOWLEDGEMENTS
We thank Robleh Ali, Simon Scorer, Alex Mitchell, and
John Barrdear from the Bank of England and Ben Laurie
from Google for interesting discussions. We also thank our
anonymous reviewers and our shepherd, Joseph Bonneau, for
their helpful feedback. George Danezis is supported in part by
EPSRC Grant EP/M013286/1 and H2020 Grant PANORAMIX
(ref. 653497) and Sarah Meiklejohn is supported in part by
EPSRC Grant EP/M029026/1.
REFERENCES
[1] M. Babaioff, S. Dobzinski, S. Oren, and A. Zohar, “On
Bitcoin and red balloons,” SIGecom Exchanges, vol. 10,
no. 3, pp. 56–73, 2011.
[2] Bank of England, Private communication, 2015.
[3] ——, “One bank research agenda,” 2015,
www.bankofengland.co.uk/research/Documents/onebank/
discussion.pdf.
[4] E. Ben-Sasson, A. Chiesa, C. Garman, M. Green,
I. Miers, E. Tromer, and M. Virza, “Zerocash:
Decentralized anonymous payments from bitcoin,” in
2014 IEEE Symposium on Security and Privacy, SP
2014, Berkeley, CA, USA, May 18-21, 2014.
IEEE
Computer Society, 2014, pp. 459–474.
[5] B. Bernanke, Nov. 2013, qz.com/148399/ben-bernanke-
bitcoin-may-hold-long-term-promise/.
[6] J. Bonneau, A. Miller, J. Clark, A. Narayanan, J. A.
Kroll, and E. W. Felten, “Research perspectives and
challenges for Bitcoin and cryptocurrencies,” in
Proceedings of the IEEE Symposium on Security and
Privacy, 2015.
[7] G. Danezis, C. Fournet, M. Kohlweiss, and B. Parno,
“Pinocchio coin: building zerocoin from a succinct
pairing-based proof system,” in PETShop’13,
Proceedings of the 2013 ACM Workshop on Language
Support for Privacy-Enhancing Technologies, Co-located
with CCS 2013, November 4, 2013, Berlin, Germany,
M. Franz, A. Holzer, R. Majumdar, B. Parno, and
H. Veith, Eds. ACM, 2013, pp. 27–30.
[8] European Central Bank, “Virtual currency schemes - a
further analysis,” Feb. 2015, www.ecb.europa.eu/pub/pdf/
other/virtualcurrencyschemesen.pdf.
[9] I. Eyal and E. G. Sirer, “Majority is not enough: Bitcoin
mining is vulnerable,” in Proceedings of Financial
Cryptography 2014, 2014.
[10] J. Garay, A. Kiayias, and N. Leonardos, “The Bitcoin
backbone protocol: Analysis and applications,” in
Proceedings of Eurocrypt 2015, 2015.
[11] A. Gervais, G. O. Karame, S. Capkun, and V. Capkun,
“Is Bitcoin a decentralized currency?” IEEE Security &
Privacy, vol. 12, pp. 54–60, 2014.
[12] J. Groth and M. Kohlweiss, “One-out-of-many proofs:
Or how to leak a secret and spend a coin,” in Advances
in Cryptology - EUROCRYPT 2015 - 34th Annual
International Conference on the Theory and Applications
of Cryptographic Techniques, Soﬁa, Bulgaria, April
26-30, 2015, Proceedings, Part II, ser. Lecture Notes in
Computer Science, E. Oswald and M. Fischlin, Eds., vol.
9057. Springer, 2015, pp. 253–280.
[13] HM Treasury, “Digital currencies: response to the call
for information,” Mar. 2015,
www.gov.uk/government/uploads/system/uploads/
attachment data/ﬁle/414040/digital currencies
response to call for information ﬁnal changes.pdf.
[14] B. Johnson, A. Laszka, J. Grossklags, M. Vasek, and
T. Moore, “Game-theoretic analysis of DDoS attacks
against Bitcoin mining pools,” in Workshop on Bitcoin
Research, 2014.
[15] G. Karame, E. Androulaki, and S. Capkun,
“Double-Spending Fast Payments in Bitcoin,” in
Proceedings of ACM CCS 2012, 2012.
[16] E. K¨asper, “Fast elliptic curve cryptography in openssl,”
in Financial Cryptography and Data Security - FC 2011
Workshops, RLCPS and WECSR 2011, Rodney Bay, St.
Lucia, February 28 - March 4, 2011, Revised Selected
Papers, ser. LNCS, G. Danezis, S. Dietrich, and K. Sako,
Eds., vol. 7126. Springer, 2011, pp. 27–39.
[17] J. A. Kroll, I. C. Davey, and E. W. Felten, “The
economics of Bitcoin mining, or Bitcoin in the presence
of adversaries,” in Proceedings of WEIS 2013, 2013.
[18] A. Laszka, B. Johnson, and J. Grossklags, “When
Bitcoin mining pools run dry: A game-theoretic analysis
of the long-term impact of attacks between mining
pools,” in Workshop on Bitcoin Research, 2015.
[19] B. Laurie, “An efﬁcient distributed currency,” 2011,
www.links.org/ﬁles/distributed-currency.pdf.
[20] ——, “Certiﬁcate transparency,” Commun. ACM, vol. 57,
no. 10, pp. 40–46, 2014.
[21] L. Luu, J. Teutsch, R. Kulkarni, and P. Saxena,
“Demystifying incentives in the consensus computer,” in
Proceedings of ACM CCS 2015, 2015, to appear.
[22] D. Mazi`eres, “The Stellar consensus protocol: a
federated model for Internet-level consensus,” 2015,
www.stellar.org/papers/stellar-consensus-protocol.pdf.
[23] I. Miers, C. Garman, M. Green, and A. D. Rubin,
“Zerocoin: Anonymous distributed e-cash from bitcoin,”
in 2013 IEEE Symposium on Security and Privacy, SP
2013, Berkeley, CA, USA, May 19-22, 2013.
Computer Society, 2013, pp. 397–411. [Online].
Available: http://dx.doi.org/10.1109/SP.2013.34
IEEE
[24] A. Miller, A. Juels, E. Shi, B. Parno, and J. Katz,
“Permacoin: Repurposing Bitcoin work for data
preservation,” in Proceedings of the IEEE Symposium on
Security and Privacy, 2014.
[25] S. Nakamoto, “Bitcoin: A Peer-to-Peer Electronic Cash
System,” 2008, bitcoin.org/bitcoin.pdf.
[26] A. Narayanan, J. Bonneau, E. Felten, A. Miller, and
S. Goldfeder, Bitcoin and cryptocurrency technologies.
[Online]. Available:
piazza.com/princeton/spring2015/btctech/resources
[27] Nasdaq, “Nasdaq launches enterprise-wide blockchain
technology initiative,” May 2015, www.nasdaq.com/press-
release/nasdaq-launches-enterprisewide-blockchain-
technology-initiative-20150511-00485.
[28] D. O’Leary, V. D’Agostino, S. R. Re, J. Burney, and
A. Hoffman, “Method and system for processing Internet
payments using the electronic funds transfer network,”
Nov. 2013. [Online]. Available:
www.google.com/patents/US20130317984
[29] J. K. Ousterhout, P. Agrawal, D. Erickson, C. Kozyrakis,
J. Leverich, D. Mazi`eres, S. Mitra, A. Narayanan,
D. Ongaro, G. M. Parulkar, M. Rosenblum, S. M.
Rumble, E. Stratmann, and R. Stutsman, “The case for
ramcloud,” Commun. ACM, vol. 54, no. 7, pp. 121–130,
2011.
[30] M. Raynal and M. Singhal, “Logical time: Capturing
causality in distributed systems,” IEEE Computer,
vol. 29, no. 2, pp. 49–56, 1996.
[31] M. Rosenfeld, “Analysis of hashrate-based
double-spending,” Dec. 2012,
bitcoil.co.il/Doublespend.pdf.
[32] D. Schwartz, N. Youngs, and A. Britto, “The Ripple
protocol consensus algorithm,” 2014,
ripple.com/ﬁles/ripple consensus whitepaper.pdf.
[33] T. Young, “Atomic cross-chain exchange,” 2014,
upcoder.com/11/atomic-cross-chain-exchange/.
APPENDIX
In Section VII-C, we described a protocol for atomic trading
of different currencies and outlined some of its features, such as
allowing trade only across authorized currencies (as determined
by some third party). Our formal protocol that achieves this
fair exchange is presented in Figure 5.
Informally, if Alice and Bob wish to exchange m units of
currency c1 for n units of currency c2, with the blessing of a
third party Carol, then they each create two types of transactions:
a “spend” transaction, in which the sender releases the units of
currency to one of two addresses, and a “refund” transaction,
in which the sender can reclaim the currency after a certain
amount of time has passed. The two addresses in Alice’s spend
transactions are a “multi-signature” address from which funds
can be released only with the signatures of Alice, Bob, and
Carol, or Bob’s address, from which he can spend the funds
only with knowledge of the pre-image of some hash H(x).
13
A
C(c, pk, σ, m)
$←− D; h ← H(x); h2 ← H(c2)
x
if Sig.Verify(pk, m, σ) = 0 return ⊥
B
h1 ← H(c1)
(addr, tx1) ← SpendTx((h, h2), m, pk(c1)
A , pk(c1)
B , pk(c1)
C )
tx2 ← RefundTx(m, addr, pk(c1)
A )
σA
$←− Sig.Sign(pk(c1)
A , tx2)
if Sig.Verify(pk(c1)
C , tx2, σC ) = 0 return ⊥
if Sig.Verify(pk(c1)
B , tx2, σB) = 0 return ⊥
add tx1 to c1 blockchain
else return Sig.Sign(pk(c)
C , m)
tx2,σA,σC
σ C
σB
σ
(cid:48)
C
/ if Sig.Verify(pk(c1)
if Sig.Verify(pk(c1)
C , tx2, σA) = 0 return ⊥
A , tx2, σC ) = 0 return ⊥
$←− Sig.Sign(pk(c1)
σB
B , tx2)
(addr, tx3) ← SpendTx((h, h1), n, pk(c2)
B , pk(c2)
A , pk(c2)
C )
tx4 ← RefundTx(n, addr, pk(c2)
B )
if Sig.Verify(pk(c2)
if Sig.Verify(pk(c2)
C , tx4, σ(cid:48)
B , tx4, σ(cid:48)
B) = 0 return ⊥
C ) = 0 return ⊥
σ(cid:48)
A
$←− Sig.Sign(pk(c2)
A , tx4)
before t2: spend tx3 using (x, c1)
after t2: refund tx2 using (σA, σB, σC )
tx4,σ(cid:48)
B ,σ(cid:48)
C
σ(cid:48)
B
$←− Sig.Sign(pk(c2)
if Sig.Verify(pk(c2)
C , tx4, σ(cid:48)
B , tx4)
C ) = 0 return ⊥
σ(cid:48)
A
...
x
...
/ if Sig.Verify(pk(c2)
A , tx4, σ(cid:48)
A) = 0 return ⊥
add tx3 to c2 blockchain
/ before t1: spend tx1 using (x, c2)
after t1: refund tx4 using (σ(cid:48)
A, σ(cid:48)
B, σ(cid:48)
C )
Fig. 5: A method for A and B to — with the approval of a third party C — exchange m units of currency c1 for n units of
currency c2 in a fair manner; i.e., in a way such that if either A or B stops participating at any point in the interaction, the other
party loses nothing.
Her refund transaction then sends the currency back to Alice’s
address if signatures are provided by all three parties, and if
an appropriate amount of time t1 has elapsed since the spend
transaction was accepted into the blockchain. Similarly, Bob’s
spend transaction requires Alice to present the pre-image x in
order to redeem the funds, and his refund transaction can be
spent only after some time t2 has passed.
(cid:26)multiaddr(pk1, pk2, pk3)
SpendTx((cid:126)h, v, pk1, pk2, pk3)
addr ←
pk2
return (addr, tx(pk1
v−→ addr))
if t > t1
if H(xi) = h[i] ∀i
RefundTx(v, addrin, addrout)
v−→ addrout)
return tx(addrin
Alice begins by creating her spend and refund transactions,
as well as picking the value x and computing H(x). She then
14
“commits” to the currency c2 being traded with using a second
hash h2 and sends the refund transaction, signed by herself, to
Carol. If Carol is satisﬁed with the proposed exchange, she can
sign the transaction and give this signature to Alice. Alice now
solicits a signature from Bob; once she has signatures from
both Bob and Carol, she now has a transaction that she can
use to refund her currency after time t1 has passed. Thus, it is
safe for her to publish the spend transaction in the blockchain
for c1. Bob then follows suit by creating his own spend and
refund transactions, soliciting signatures from Alice and Carol,
and publishing his spend transaction once he has a valid refund
transaction that he can use if necessary.
Once both transactions are accepted into their respective
blockchains, Alice — who so far is the only one with knowledge
of the pre-image x — can redeem the n units of currency c2
using Bob’s spend transaction; in doing so, she implicitly
reveals x. Thus, Bob can now redeem the m units of currency c1
using Alice’s spend transaction and the exchange is complete. If
Alice does not redeem Bob’s spend transaction, then after time
t2 Bob can use his refund transaction to redeem the currency
himself (so it is important that t2 
>
/
o
o
P
P
o
o
/
/