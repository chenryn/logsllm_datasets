# Can Internet Video-on-Demand Be Profitable?

**Authors:**
- Cheng Huang, Microsoft Research, Redmond, WA 98052
- Jin Li, Microsoft Research, Redmond, WA 98052
- Keith W. Ross, Polytechnic University, Brooklyn, NY 11201

## Abstract

Internet video-on-demand (VoD) has become an immensely popular service in recent years. However, its high bandwidth requirements and popularity make it a costly service to provide. This paper explores the design and potential benefits of peer-assisted VoD, where participating peers assist the server in delivering content, ensuring the same user quality experience as pure client-server distribution. We focus on the single-video approach, where a peer only redistributes the video it is currently watching.

Using a nine-month trace from a client-server VoD deployment for MSN Video, we assess the 95th percentile server bandwidth costs if a peer-assisted system had been used. Our results show that peer assistance can dramatically reduce server bandwidth costs, especially if peers prefetch content when there is spare upload capacity. We also examine the impact of peer-assisted VoD on cross-traffic among ISPs and propose methods to localize P2P traffic within ISPs to eliminate cross-ISP traffic while still achieving significant reductions in server bandwidth. Additionally, we develop a simple analytical model that captures the critical features of peer-assisted VoD, including its operational modes.

**Categories and Subject Descriptors:**
- C.2 [Computer-Communication Networks]: Distributed Systems

**General Terms:**
- Measurement, Performance

**Keywords:**
- Peer-to-peer, video-on-demand, ISP-friendly

**Permission to Make Digital or Hard Copies:**
Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. To copy otherwise, to republish, to post on servers, or to redistribute to lists, requires prior specific permission and/or a fee.

**SIGCOMM'07, August 27–31, 2007, Kyoto, Japan.**
**Copyright 2007 ACM 978-1-59593-713-1/07/0008 ...$5.00.**

## 1. Introduction

Video-on-demand (VoD), also known as on-demand video streaming, has become an extremely popular service on the Internet. For example, YouTube, a video-sharing service that streams videos to users on-demand, has about 20 million views per day, with a total viewing time of over 10,000 years to date [1]. Other major Internet VoD providers include MSN Video, Google Video, Yahoo Video, CNN, and numerous YouTube-like sites.

Most VoD content streamed over the Internet today is encoded at rates between 200-400 kbps. At these rates, ISPs (or CDNs) typically charge video publishers 0.1 to 1.0 cent per video minute. It is estimated that YouTube pays over $1 million per month in bandwidth costs. As of December 2006, the MSN VoD service had a billing rate corresponding to 2.20 Gbps. These costs are expected to increase as demand grows and higher-quality videos (with rates up to 3 Mbps or more) become available.

Currently, none of the Internet VoD providers generate significant revenues from their services. They will likely attempt to monetize their services in the near future using embedded video advertisements, subscriptions, or pay-per-view models. However, given the enormous costs associated with client-server distribution—due to both increasing video quality and high demand—the revenues may not cover the cost of providing the service. In other words, although VoD has become one of the most popular Internet services, it is, and will likely continue to be, unprofitable with client-server distribution.

In this paper, we consider the design and potential benefits of peer-assisted VoD. In peer-assisted VoD, there is still a server (or server farm) that stores all the publisher's videos and ensures that users can playback the video at the required rate without any quality degradation. However, peers who are viewing the publisher's videos also assist in redistributing the videos. Since peer-assisted VoD can move a significant fraction of the uploading from the server to the peers, it can potentially dramatically reduce the publisher's bandwidth costs.

There are two broad design approaches to peer-assisted VoD:
1. **Single-Video Approach:** A peer only redistributes the video it is currently watching.
2. **Multiple-Video Approach:** A peer can redistribute a video that it previously viewed but is not currently watching.

The single-video approach is simpler in terms of client and tracker design and involves straightforward end-user policies. Our focus in this paper is on the single-video approach, which should provide good performance if a large fraction of the requests are for a relatively small number of the publisher's videos. If a publisher has N videos and uses the single-video approach, the distribution problem essentially becomes N sub-distribution problems, one for each video.

In a peer-assisted VoD system, when peers alone cannot redistribute the video, the server makes up the difference, ensuring each peer receives the video at the required playback rate. The server is only active when the peers cannot satisfy the demand. When the peers can satisfy the demand, the server is inactive, and peers can potentially prefetch video from each other using surplus bandwidth. This prefetching allows peers to build a reservoir of video, which can be tapped when the aggregate upload bandwidth of peers becomes less than the demand across all peers. The contributions of this paper are as follows:

- **Trace Collection and Analysis:** We collect a nine-month trace from the MSN Video service, covering over 520 million streaming requests for more than 59,000 videos. This data provides insights into the key characteristics of a large-scale Internet VoD deployment, particularly those relevant to a peer-assisted deployment.
- **Theoretical Model:** We present a simple theory for peer-assisted VoD, identifying three basic operating modes: surplus mode, balanced mode, and deficit mode. The model shows that when a service provider is in the surplus mode, it can increase video quality without incurring significant additional server bandwidth costs. However, in the deficit mode, server bandwidth costs increase linearly with video bit rates.
- **Prefetching Policies:** For the single-video approach, we describe three natural prefetching policies: no-prefetching, water-leveling, and greedy. These policies can significantly reduce server bandwidth usage, with prefetching providing dramatic gains.
- **Simulation and Cost Reduction:** Using the nine-month MSN trace, we simulate peer-assisted deployments and examine the impact of early peer departures and user interactivity. The results show that significant reductions in bandwidth costs would have resulted if peer-assisted distribution had been employed. For example, the client-server bandwidth requirement for December 2006 was 2.20 Gbps; with the greedy prefetch policy, the server bandwidth requirement could have been reduced to 79 Mbps.
- **ISP-Friendly Schemes:** We explore the impact of peer-assisted VoD on ISPs and propose an ISP-friendly scheme that localizes P2P traffic within ISPs, eliminating cross-ISP traffic while still achieving significant reductions in server bandwidth.

This paper is organized as follows. In Section 2, we describe the nine-month MSN trace and report observations about video popularity distribution, user demand, upload resources, user interactivity, and service evolution. In Section 3, we present a theory for peer-assisted VoD, which exposes many fundamental issues. In Section 4, we use the MSN trace data to drive simulations of peer-assisted distribution schemes. In Section 5, we examine the costs that peer-assisted VoD places on local ISPs and explore how these costs can be minimized. In Section 6, we describe related work, and in Section 7, we conclude.

## 2. Characteristics of a Large-Scale VoD Service

We collected data from the popular MSN Video site for a nine-month period, from April through December 2006. The raw data captures all activities at the MSN video site, including live and on-demand streaming sessions for both audio and video. We filtered out the audio and live sessions, focusing on on-demand video streaming. The resulting filtered trace contains over 520 million streaming requests for more than 59,000 video files. All video streams were served from MSN servers (via a CDN) to clients using RTSP, Microsoft’s HTTP streaming protocol, or Media Server (MMS) protocol. (Peers did not assist in the streaming during this time.)

### 2.1 Trace Records

The MSN Video trace contains trace records, with each record characterizing a portion of a streaming session. Each trace record includes over 50 fields [2]. We summarize the fields of interest in this study into three categories:

1. **Client Information Fields:** All streaming clients are Windows Media Players (WMP). Each trace record contains the player ID, version, and language; the public IP address of the client host; the host web browser and version; and the OS/version and CPU of the host machine.
2. **Video Content Fields:** Each trace record includes the video file name, the video file length (in seconds), and the size of the file. From the video length and the file size, we compute the average bitrate of each video. Note that this calculation does not work for Multi-Bit Rate (MBR) videos, which contain several independently encoded streams at different quality levels. There are very few MBR videos on the MSN Video site (less than 1%), so we filter out all requests for such videos.
3. **Streaming Fields:** Each trace record includes the time when the client establishes a connection to the server, the starting point of playback, and the duration of the played content. It also indicates whether the playback is real-time or fast-forward/backward. Interactive operations (pause/resume, fast-forward, fast-backward, and repositioning) generate new trace records, often resulting in multiple records from the same player within the same streaming session.

### 2.2 Identifying Users and Streaming Sessions

For our analysis, we need to identify the trace records generated by the same Windows Media Player (WMP). Each trace record includes a player ID, which in principle can be used to identify the players. However, in our nine-month trace, only 7% of the records include a useful player ID. This is because, by default, a WMP sends an anonymous pseudo ID unless the user voluntarily participates in the quality feedback program.

To preserve the scale of the data set and avoid discarding 93% of the trace records, we use the following method to classify the anonymous players. Each trace record contains additional client information, including the player's host public IP address, WMP version/language, OS/version/language, and the web browser/version. For each record with an anonymous player ID, we hash the concatenation of this additional client information and consider all records with the same hash as being generated from the same player. We refer to each such player as a "hash-identified player" and each non-anonymized player as an "ID-identified player." To verify that records from different hashes indeed come from different players, we examine the distribution of the number of media files streamed by an ID-identified player and a hash-identified player. Figure 1 shows that these two distributions align very closely, validating this method for classifying the anonymous players.

![Figure 1: Video file access pattern (April 20)](figure1.png)

Having grouped the trace records by player, we further group the records by session. A single user-video session can generate more than one trace record if the user interacts with the video during playback. We define a streaming session as a series of streaming requests from the same player to the same video file, as long as the beginning time of one request is no more than 10 seconds after the ending time of the previous request. From the original more than 520 million streaming requests, we obtain over 471 million streaming sessions in total.

### 2.3 Video Popularity Distribution

The greater the locality of requests to a subset of the videos, the greater the potential benefit for peer-assisted streaming. We examine the distribution of video popularity in the trace by selecting three days in April 2006 with the minimum, median, and maximum amount of traffic in the month. The popularity distributions are plotted in Figure 2. Despite the traffic variation among the three days, the popularity distributions are quite similar. There is a high degree of locality, and the distribution is more skewed than a Zipf distribution. This is likely due to the fact that on any given day, there are several highly popular news and business clips, each having roughly the same popularity.

### 2.4 User Demand and Upload Resources

To further investigate the potential benefits of peer-assisted VoD, we determine the aggregate upload resources of the participating peers and compare them to the aggregate demand. This analysis helps us understand the potential for reducing server bandwidth costs and the feasibility of peer-assisted VoD.