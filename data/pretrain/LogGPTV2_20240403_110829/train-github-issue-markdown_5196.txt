I'm running Symfony2 2.6.6, nginx 1.7.12 on linux/64.
env VARS
    SYMFONY__DATABASE__PASSWORD => "testtesttest"
    SYMFONY__DATABASE__USER => "root"
have been set in shell & nginx.
As documented
    "How to Set external Parameters in the Service Container":
     http://symfony.com/doc/current/cookbook/configuration/external_parameters.html
        "Now that you have declared an environment variable, it will be present in the PHP $_SERVER global variable. Symfony then automatically sets all $_SERVER variables prefixed with SYMFONY__ as parameters in the service container.
        You can now reference these parameters wherever you need them."
Verifying,
    php -i | grep SYMFONY__DATABASE
        SYMFONY__DATABASE__PASSWORD => "testtesttest"
        SYMFONY__DATABASE__USER => "root"
        _SERVER["SYMFONY__DATABASE__PASSWORD"] => "testtesttest"
        _SERVER["SYMFONY__DATABASE__USER"] => "root"
setting symfony parameters
    cat ./app/config/parameters.yml
        parameters:
            database_driver:   pdo_mysql
            database_host:     127.0.0.1
            database_port:     3306
            database_name:     test_01
            database_user:     "%database.user%"
            database_password: "%database.password%"
            mailer_transport:  smtp
            mailer_host:       ~
            mailer_user:       "%mailer.user%"
            mailer_password:   "%mailer.password%"
            locale:            en
            secret:            xxxx
symfony "at shell" should inherit the ENV-defined values
    user  "testtesttest"
    mysqladmin -u root -p 
        ...
        +------------------------------+
        |          Databases           |
        +------------------------------+
        ...
        | test_01                      |
        +------------------------------+
Also, editing
    ./app/config/parameters.yml
        ...
    -       database_user:     "%database.user%"
    -       database_password: "%database.password%"
    +       database_user:     root
    +       database_password: "testtesttest"
        ...
All doctrine cmds, e.g.,
    php app/console doctrine:database:drop --force
    php app/console doctrine:database:create
    php app/console doctrine:schema:create
now work without error