I am currently using Symfony 2.6.6 and Nginx 1.7.12 on a Linux/64-bit system. The following environment variables have been set in both the shell and Nginx configurations:

- `SYMFONY__DATABASE__PASSWORD`: "testtesttest"
- `SYMFONY__DATABASE__USER`: "root"

According to the Symfony documentation titled, "How to Set External Parameters in the Service Container" (http://symfony.com/doc/current/cookbook/configuration/external_parameters.html), once an environment variable is declared, it will be present in the PHP `$_SERVER` global variable. Symfony then automatically sets all `$_SERVER` variables that are prefixed with `SYMFONY__` as parameters in the service container. These parameters can be referenced wherever needed.

To verify that the environment variables are correctly set, I executed the following command:
```shell
php -i | grep SYMFONY__DATABASE
```
The output confirmed that the environment variables are properly set:
- `SYMFONY__DATABASE__PASSWORD => "testtesttest"`
- `SYMFONY__DATABASE__USER => "root"`
- `_SERVER["SYMFONY__DATABASE__PASSWORD"] => "testtesttest"`
- `_SERVER["SYMFONY__DATABASE__USER"] => "root"`

Next, I checked the Symfony parameters configuration file (`./app/config/parameters.yml`):

```yaml
parameters:
    database_driver:   pdo_mysql
    database_host:     127.0.0.1
    database_port:     3306
    database_name:     test_01
    database_user:     "%database.user%"
    database_password: "%database.password%"
    mailer_transport:  smtp
    mailer_host:       ~
    mailer_user:       "%mailer.user%"
    mailer_password:   "%mailer.password%"
    locale:            en
    secret:            xxxx
```

In the shell, Symfony should inherit the values defined in the environment variables. To confirm this, I used the following MySQL command:
```shell
mysqladmin -u root -p
```
This command successfully listed the databases, including `test_01`.

However, to ensure that the Doctrine commands work without errors, I edited the `parameters.yml` file to explicitly set the `database_user` and `database_password`:

```yaml
parameters:
    database_driver:   pdo_mysql
    database_host:     127.0.0.1
    database_port:     3306
    database_name:     test_01
    database_user:     root
    database_password: "testtesttest"
    mailer_transport:  smtp
    mailer_host:       ~
    mailer_user:       "%mailer.user%"
    mailer_password:   "%mailer.password%"
    locale:            en
    secret:            xxxx
```

After making these changes, the following Doctrine commands executed without any errors:
```shell
php app/console doctrine:database:drop --force
php app/console doctrine:database:create
php app/console doctrine:schema:create
```

This ensures that the database operations are functioning as expected.