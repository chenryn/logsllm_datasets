### Over Time

In addition, we have investigated the varying numbers of SSIDs contained within a PNL (Preferred Network List) of individual PRs (Probe Requests). WiFi scans are divided into sweeps, representing complete active scans, with the number of unique SSIDs requested mapped to each individual source MAC address within that time frame. As demonstrated in Figure 3, most nodes (80%) do not make requests for SSIDs from their PNL but rather only request the empty (unknown) SSID. We will discuss scan mechanisms and how the length of the PNL has only a minimal impact on the actual number of resulting scans later. For example, some mobile nodes tend to scan for a timed duration rather than simply covering the PNL. Recent trends regarding privacy indicate that scanning for only a single empty SSID is more likely to be the norm than scans with long and varied PNLs.

### Performance Deterioration

We now explore the energy and throughput costs of aggressive WiFi scanning in a controlled laboratory setting. Although it would be ideal to instrument the entire stadium and provide pervasive instrumentation, laboratory experiments can shed light on what might occur in larger-scale scenarios. To that end, we conducted a series of small-scale, controlled experiments using four types of handsets: the iPod touch (iOS 8.4), the Dell Venue 7 (Android 4.4), the Nexus 10 (Android 5.1), and the Samsung Galaxy S4 smartphone (Android 4.2). Our primary interest lies in measuring the power cost of an active WiFi scan and the associated throughput impacts. The lab setting also provides ideal conditions for replicating various intra-scan behaviors observed in the stadium and their respective energy implications.

For our experiments, we investigated WiFi scanning behaviors for the aforementioned devices by configuring them with two different settings while simultaneously running tcpdump in monitor mode to capture PRs. The laptops used for packet capture were identical to those used in the stadium environment. Table 2 summarizes the scanning behaviors of the devices. The distinguishing factor between the two columns refers to whether or not the WiFi settings screen was open, which implies a more aggressive approach to scanning. We observed that for each active scan, all four types of devices typically sweep the PNL on one specific channel and then hop to the next channel.

As indicated in Table 2, for all four types of devices (with WiFi enabled), if the listing of current WiFi networks is open, the intervals between two consecutive WiFi scans are roughly 10 seconds (with 3 s and 8 s also observed for iOS devices). If WiFi is still on but the user is not in the WiFi settings screen (and not connected to WiFi), the scan interval varies from 10 seconds to up to 8 minutes. Interestingly, iOS 8 tends to exponentially increase the scanning interval from 15 s to 480 s (i.e., 15 s, 30 s, 60 s, ... 480 s) when not in the WiFi settings panel. For all other experiments presented in this section, we forced the handset to stay in the WiFi settings screen as this configuration allows us to better mimic denser environmental scenarios. We surmise, though more difficult to measure, that the lack of cellular connectivity may also cause more rapid scanning, as the cellular network tended to be overwhelmed with nearly 150k users in the local area (good perceived downlink signal but impossible to send data on the uplink).

#### 4.1 Energy Impact

To evaluate the energy cost per WiFi scan, we used the Monsoon power monitor and its PowerTool software [14]. We instrumented the Galaxy S4 smartphone, as it is the only device with a removable battery. Power for the phone was supplied by the Monsoon power monitor, with energy consumption recorded at a sampling rate of 5 KHz. The phone was evaluated in two different settings: Baseline, where WiFi is off but the screen remains on, and Scanning, where the phone stays in the WiFi settings screen but remains unaffiliated with any WiFi network. Power monitoring was run for an extended period (5 minutes). The average and standard deviation of power consumption for each setting are given in Table 3.

After recording the average power consumption for both the Baseline and Scanning settings, the energy cost of an active WiFi scan can be approximated by calculating the difference between the consumption values of these two settings over the entire monitoring period, yielding 5467.76 uAh for the 5-minute time window. This represents a 44.3% increase over the Baseline consumption, despite the fact that the screen is on for both cases. We can further infer the power cost per scan since Table 2 indicates that WiFi scans are invoked every 10 seconds if the WiFi settings screen is active. While somewhat crude in its approximation, each WiFi scan in an ideal scenario (no background traffic, no DCF issues) consumes roughly 182.26 uAh. An individual waiting in line for 10 minutes without WiFi while aggressively scanning could end up consuming nearly 10936 uAh extra energy, effectively 0.4% of a fully charged battery (2600 mAh).

#### 4.2 Throughput Loss

While the energy losses may be tolerable (though still wasteful), aggressive WiFi scanning also impacts performance by introducing overhead to the wireless channels. To measure the potential network performance degradation, we designed a small-scale experiment using iperf2 configured for UDP throughput. The components of this experiment are described as follows:

- **iperf client and server**: We instrumented a Dell EliteBook 8560 with an 802.11n dual-band network interface as the iperf client and an HP 3450 laptop with Ubuntu Linux installed as the iperf server.
- **Handsets**: We used one iPod Touch, one Dell Venue 7 tablet, and thirteen Android smartphones as our handsets. All devices are dual-band capable. For each device, we de-associated the device from any known WiFi and created a PNL consisting of two hidden SSIDs. Screens were kept on, and the devices were kept in the WiFi scan screen.
- **Wireless router**: A Netgear AC1900 router (dual-band, 802.11ac capable) was used to set up the WLAN. The router provided up to 600 Mbps and 1300 Mbps WiFi downlink speeds on the 2.4 and 5 GHz bands, respectively. The client was the only node associated with the AP, and the server was directly connected to the router via GigE. A full 40 MHz of spectrum (full 802.11n speeds) was selected for the router with validation. Experiments were conducted in a basement with minimal interference from other devices. The distance between the client and the server was roughly three meters, and all handsets were positioned between the client and the server.

The client was tuned to determine the maximum lossless send rate between the client and the server. Communications were unidirectional, going only from the client to the server. On the 5GHz band, client performance topped out at roughly 180 Mb/s without any background traffic (see Figure 4). Each experiment setting was repeated multiple times with a typical test duration of five minutes. Once the baseline was established, the experiments were conducted by gradually increasing the number of UEs actively scanning. Notably, WiFi performance decreased by 16.7% once all fifteen devices were introduced, i.e., from the peak of 180.0 Mb/s down to 149.8 Mb/s. While performance degradation is not entirely unexpected with WiFi, the fact that this decrease comes from 'useless' PRs is problematic. As noted earlier, stadium environments may have nodes both associated and unassociated with the WiFi infrastructure, with the unaffiliated mobile nodes still chirping for WiFi. Furthermore, our limited lab experiments were actually quite benign, entailing only roughly 360 PRs per minute (observed via tcpdump).

In the stadium case, such as the Northwestern game where 967 PRs were generated every minute, unaffiliated nodes could have significant performance issues even in the 'better' 5 GHz bands. As noted in Figure 4, the 2.4 GHz performance has a similar degradation pattern except with a lower baseline and would potentially be much worse for the stadium case with dramatically higher numbers of PRs (360 PRs per minute versus 2568 PRs per minute).

### Discussions and Future Work

The issue of how to solve the dilemma of aggressive WiFi scanning speaks to the complexities of the wireless industry. On one hand, the solution would appear to be fairly trivial: slow down the WiFi scanning rate and scan only on screen activation. However, the reality is more complicated, as applications largely do not wait to send data until there is WiFi available, and the delay before locating WiFi at home could be considerable. Critically, the vast majority of a user's experience tends to be dominated by simple cases, e.g., only a few devices and well-known SSIDs. In those cases, the first scan when in range tends to be successful, and faster scanning means faster hopping onto WiFi.

Furthermore, the vendors most impacted by aggressive Probe Requests tend to be the WiFi infrastructure vendors who have little to no control over the mobile devices. After all, WiFi exists in the unlicensed bands, meaning that for all practical purposes, the equipment infrastructure vendors must simply endure. Recent discussions with the 802.11ax standard have noted that indeed, aggressive Probe Requests do create sizable issues in ultra-dense venues [4]. Handset and OS vendors are only marginally motivated by claims of reduced throughput as the vast majority of throughput scenarios are acceptable (the typical cases). However, we argue that the energy cost of being aggressive is non-trivial and, moreover, that energy cost burns worst when most users tend to be suffering energy issues (e.g., in ultra-dense venues).

In conclusion, we believe that aggressive WiFi scanning has significant side effects on normal wireless network users, both in terms of energy and throughput. Moreover, our stadium analyses show that not only are aggressive Probe Requests wasteful in the ultra-dense case, but the degree to which such wasteful Probe Requests occur far outstrips what is perceived in the literature. Despite research efforts to mitigate the impacts of Probe Requests, the perceived benefits with regards to WiFi joining speed seem to largely outweigh occasional problems in dense venues. Future work is needed to explore how one can bridge the conflicting goals of rapid WiFi detection with the cost of wasted WiFi scans in a deployable manner, likely with the assistance of handset or cellular carriers, a considerable challenge. For encouraging such efforts, the full anonymized stadium and classroom datasets are made publicly available.

### Acknowledgments

This material is based upon work supported by the National Science Foundation under Grant No. IIS-0968529. Further support was provided through the University of Notre Dame and Sprint.

### References

[1] J. Andrews, S. Buzzi, W. Choi, S. Hanly, A. Lozano, A. Soong, and J. Zhang, “What Will 5G Be?” IEEE Journal on Selected Areas in Communications, vol. 32, no. 6, pp. 1065–1082, June 2014.

[2] “Cellular-Wi-Fi Integration,” InterDigital, Tech. Rep., 2012.

[3] “The Future of Hotspots: Making Wi-Fi as Secure and Easy to Use as Cellular,” Cisco, Tech. Rep., 2012.

[4] B. Hart, M. Swartz, J. Suhr, and M. Silverman, “Stadium Measurements,” 802.11ax Working Group (Doc 1223), September 2014.

[5] R. Raghavendra, E. Belding, K. Papagiannaki, and K. Almeroth, “Unwanted Link Layer Traffic in Large IEEE 802.11 Wireless Networks,” IEEE Transactions on Mobile Computing, vol. 9, no. 9, pp. 1212–1225, September 2010.

[6] A. Gupta, J. Min, and I. Rhee, “WiFox: Scaling WiFi Performance for Large Audience Environments,” in CoNEXT 2012, ACM, 2012, pp. 217–228.

[7] G. Ananthanarayanan and I. Stoica, “Blue-Fi: Enhancing Wi-Fi Performance Using Bluetooth Signals,” in MobiSys 2009, ACM, 2009, pp. 249–262.

[8] H. Wu, K. Tan, J. Liu, and Y. Zhang, “Footprint: Cellular Assisted Wi-Fi AP Discovery on Mobile Phones for Energy Saving,” in WINTECH 2009, ACM, 2009, pp. 67–76.

[9] J. Teng, C. Xu, W. Jia, and D. Xuan, “D-Scan: Enabling Fast and Smooth Handoffs in AP-Dense 802.11 Wireless Networks,” in INFOCOM 2009, IEEE, April 2009, pp. 2616–2620.

[10] J. Yeo, M. Youssef, and A. Agrawala, “A Framework for Wireless LAN Monitoring and Its Applications,” in WiSe 2004, ACM, 2004, pp. 70–79.

[11] S. Rayanchu, A. Patro, and S. Banerjee, “Catching Whales and Minnows Using WiFiNet: Deconstructing non-WiFi Interference Using WiFi Hardware,” in NSDI 2012, USENIX, 2012, pp. 57–70.

[12] A. Gupta and P. Mohapatra, “Energy Consumption and Conservation in WiFi Based Phones: A Measurement-Based Study,” in SECON 2007, IEEE, June 2007, pp. 122–131.

[13] B. Misra, “iOS8 MAC Randomization,” accessed: 2015-05-05. [Online]. Available: http://blog.airtightnetworks.com/ios8-mac-randomization-analyzed/

[14] “Monsoon Power Monitor.” [Online]. Available: https://www.msoon.com/LabEquipment/PowerMonitor/