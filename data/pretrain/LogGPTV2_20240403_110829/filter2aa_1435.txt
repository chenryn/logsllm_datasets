CableTap
Wirelessly Tapping your Home Network
Marc Newlin
Bastille Networks
PI:EMAIL
@marcnewlin
Logan Lamb
Bastille Networks
PI:EMAIL
Christopher Grayson
Web Sight
PI:EMAIL
@_lavalamp
Welcome to the 
LineCon after-party. 
Marc Newlin (@marcnewlin)
Wireless Security Researcher @ Bastille Networks
Christopher Grayson (@_lavalamp)
●
Web development
●
Academic researcher
●
Haxin’ all the things
●
Founder & Principal Engineer 
(Web Sight)
Logan Lamb (Researcher @ Bastille Networks)
What is CableTap? 
●
26 CVEs 
●
ISP-provided wireless gateways and set-top boxes 
●
Multiple unauthenticated RCE attack chains 
●
Network vulnerabilities 
●
Wi-Fi vulnerabilities 
●
ZigBee RF4CE vulnerabilities
Why does CableTap matter? 
●
Full compromise of affected devices
●
Wide impact 
○
ISP vulnerabilities 
○
Vendor vulnerabilities
○
RDK vulnerabilities (software stack used by many major ISPs) 
●
Attack chains affecting Comcast XFINITY devices have been patched
Agenda
1.
Background on RDK
2.
RDK-based devices 
3.
Progression of research
4.
Vulnerabilities 
5.
Disclosure process 
6.
Q&A
Background on RDK
Reference Development Kit (RDK)
• “a standardized software stack with 
localization plugins created to 
accelerate the deployment of 
next-gen video products and 
services by multichannel video 
providers (MVPDs).”
• Founded in 2012
• Standardized software stack for 
modems, set top boxes, media 
devices
https://rdkcentral.com/
Yay Open Source (?) Software!
•An open-source, 
community-driven project 
available at:
https://code.rdkcentral.com/
•But wait what’s this WHOIS 
record?
•Ohhhh that sinking feeling in 
the pit of my stomach…
Yeah But Who Needs Patches Anyhoo 
• There’s the open source version, then 
there’s the versions deployed on 
deployed devices
• Lots of vulns patched in the open source 
repo
• Patches take months to deploy, no 
CVEs filed for, no disclosure to affected 
customers
• Still faster to deploy patches with RDK 
than non-standardized “native” stacks
• RCE, XSS, XSRF, you name it they got 
it
RDK-Based Devices
RDK Devices
●
RDK-B - gateways
●
RDK-V - set-top boxes
RDK-V Consumer Standpoint
●
Watch TV!
●
On-screen guide
●
On Demand / Pay per view
●
DVR
●
WebApps (Pandora, Netflix)
RDK-V Engineer Standpoint
●
Plumbing
○
DRM, Diagnostics, Management
●
Audio / Video
○
PPV, VOD, Closed Captioning (Webkit)
●
Features DOCSIS, MoCA, RF4CE
●
Webkit / OpenGL / GStreamer
RDK-B Consumer Standpoint
Modem + Router
= Gateway
RDK-B Consumer Standpoint
●
Modem and router functionality
●
Can connect with home security system and cordless phones
●
All-in-one internet solution
RDK-B Engineer Standpoint
Network Processor + Application Processor
= RDK-B
RDK-B Engineer Standpoint
●
Intel PUMA
Progression of 
Research
Marc learns to netcat 
●
Project inspiration (Peter Geissler’s talk @ HITB)
●
Connecting with Chris
○
Prior Comcast customer (Marc’s ISP) 
○
“Beyond your cable modem” 32C3 talk
●
“How do I webapp security plz?” 
●
Pulling off the filesystem using the previously disclosed web UI ping vuln 
●
Digging into the RDK repos 
Getting Serious
●
Finding some vulns and getting serious
●
Bringing the side project to Bastille 
●
Bringing Logan into the fold
○
 Hardware and embedded hacking expertise 
●
Expanding to set-top boxes 
●
Disclosing to vendors as new vulnerabilities are found
Vulnerabilities
Vulns - Free Internet
●
Public wifi access points run by ISPs
○
e.g. “CableWiFi”, “xfinitywifi”, etc
●
AP’s are on customer equipment or ISP equipment 
●
Customer logs into their ISP account to get access 
●
MAC address is remembered for future access 
●
Attacker can spoof the MAC
○
Free Internet on other public access points 
○
“xfinitywifi” usage does not count toward a customer’s bandwidth cap
Vulns - Hidden Home Security WiFi
●
Home security service offered by many ISPs 
●
Touchscreen control panel connects over WiFi 
○
Hidden WiFi network runs on the customer’s gateway 
○
SSID and passphrase generated based on the CM MAC
●
Hidden WiFi network, previously documented online 
○
Web UI access point index “hack”
○
XHS-XXXXXXXX SSID format, based on CM MAC
●
Grepping around for “calculate” “generate” “key” “psk” etc 
Vulns - Hidden Home Security WiFi
●
CalculatePSKKey in  
●
Cross compiling for big-endian ARM and running a keygen binary on the 
gateway 
●
Guesswork yielding the CM MAC input and PSK key output
●
Command line binary observed on some devices
●
How to get the CM MAC?? 
Vulns - DHCP ACK CM MAC leak 
1.
Connect to “xfinitywifi” network 
2.
CM MAC of the wireless gateway 
is included in the DHCP ACK
3.
Generate hidden home security 
network SSID and passphrase 
Vulns - IPv6 multicast CM MAC leak 
1.
Sniff the 802.11 channel used by the 
target wireless gateway 
2.
Every ~4 seconds, a 156-byte IPv6 
multicast packet is transmitted with the 
l2sd0.500 interface MAC address
3.
Translate the l2sd0.500 MAC to the CM 
MAC
4.
Generate hidden home security network 
SSID and passphrase
11:22:33:44:55:66 - l2sd0.500
0F:22:33:44:55:63 - CM MAC
Vulns - eMTA FQDN CM MAC leak 
1.
mta0 (VoIP) interface has FQDN containing the mta0 MAC
2.
Translate the mta0 MAC into the CM MAC
3.
Generate hidden home security network SSID and passphrase
FQDN:
m001122334455.atlt6.ga.comcast.net
CM MAC:
00:11:22:33:44:53  /bin/cp
$ sysevent --port 52367 --ip 172.16.12.1 set  /var/IGD/
$ /bin/cp  /var/IGD/
Syseventd (ab)Usage
/bin/cp /nvram/bbhm_cur_cfg.xml /var/IGD/bbhm_cur_cfg.xml
Target Process
Event Name
Event Value
/bin/bash –c “”
• Create an event with a 
target process of 
/bin/bash and an event 
name of -c
• Trigger the event with a 
value of the bash 
command to run
• ???
• Profit
Where The Syseventd At?!
• Bound to all interfaces
• Sometimes not firewalled off from 
public-facing IP address
• Otherwise exposed to plenty of the 
LAN IPs
149,162
Syseventd services on TCP 52,367 (IPv4 address space)
A Tale of Two Operating Systems
• Two operating systems on the 
board
• One ARM (modem w/ web app) and 
one Atom (router)
• Modem is at bottom of range 
(10.0.0.1) and Atom is at top of 
range (10.0.0.254)
I MAKE MY OWN ROUTES DAMMIT
• Atom OS has an interface allocated 
in 169.254.0.0/16 range for Dbus
• …You can route to it if you’re into 
that sort of thing
• Custom RPC service that is quite 
literally RCE as service, and all that 
FastCGI goodness
• Once on Atom side, hardcoded root 
SSH creds to ARM side on 
192.168.0.0/16
ip route add 169.254.0.1 via 10.0.0.254
Set-Top box vulns
Remote web inspector
Arbitrary file read
Root command execution
RF4CE remote force pairing
RF4CE remote force OTA 
Remote Web Inspector
Comparable to FireFox and Chrome DevTools
Accessible from over the internet
Arbitrary file read
Root command execution
Sanitize your post data!
Voice Remote Overview
Control your STB with your voice!
Wireless instead of IR!
Motion activated lights!
TI CC2530 with RF4CE stack
RF4CE Overview
Zigbee protocol for remote control
Key exchange is unencrypted
RF4CE MSO (OpenCable) Overview
Uses RF4CE
For remote control of cable equipment
Binding process is not rate limited
RF4CE remote force pairing
Emulate remote
Entire binding process in under one second
~2 hours to force pair remote
RF4CE remote force OTA
Firmware package ISN’T signed
1)
Modify update daemon
2)
Modify firmware payload
3)
Fix CRC and version
4)
OTA :)
Disclosure
Disclosure Timeline
●
03/27/2017
Group 1 Vendor Disclosures 
●
03/28/2017
Group 2 Vendor Disclosures 
●
04/20/2017
Group 3 Vendor Disclosures 
●
04/28/2017
Group 4 Vendor Disclosures 
●
07/28/2018
Public Disclosure (all groups)
Remediation and Mitigation
●
Unauthenticated RCE attack chains affecting Comcast XFINITY devices have 
been remediated 
●
Customers of other ISPs should contact their ISP to determine if their 
hardware is affected by CableTap
Final Remarks
●
Not enough time to talk about all of the vulnerabilities 
●
Please see our whitepaper for further details  
●
We found a substantial number of vulns, but the most severe have been 
patched (hooray!)
Q&A
Thank you for watching our talk :)
Thanks to Bastille for supporting our research. 
Thanks to Comcast for remediating the unauthenticated RCE 
attack chains affecting Xfinity-branded devices.
Marc Newlin
Bastille Networks
PI:EMAIL
@marcnewlin
Logan Lamb
Bastille Networks
PI:EMAIL
Christopher Grayson
Web Sight
PI:EMAIL
@_lavalamp