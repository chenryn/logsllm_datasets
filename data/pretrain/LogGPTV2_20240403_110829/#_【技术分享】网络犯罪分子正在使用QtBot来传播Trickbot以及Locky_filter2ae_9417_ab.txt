    0x70383CD2
    0x40C795F0 - petools.exe
    0x6D2607D8 - exeinfope.exe
    0x4D9803BC - vboxtray.exe
    0x29FBEE3C - windbg.exe
    0x0872D0FC
    0x28F7E9A8 - idaq.exe
    0x3D0598D0 - x32dbg.exe
    0x1D141E5D
    0xFCB2810C - python.exe
    0x2AA827DB
    0xCA9B2CDE
    0x75F4F636 - procmon.exe
接下来，Payload会使用注册表键“HKCUSoftwareQtProject”来随机生成数字互斥体（Mutex）。在此之前，这个注册表键主要应用在合法的Qt框架之中，其本身并不具备恶意性。
当互斥体和注册表字符串创建成功之后，恶意软件会使用RC4以及一个硬编码密钥来解密下面这端代码所生成的数字字符串（字符串来自于798aa42748dcb1078824c2027cf6a0d151c14e945cb902382fcd9ae646bfa120）：
    cmd.exe
    SoftwareMicrosoftWindowsCurrentVersion
    boom
    http://toundlefa.net/
    SoftwareQtProject
    msiexec.exe
    svchost.exe
    /c start %s && exit
    cmd.exe
    System32CompMgmtLauncher.exe
    runas
    SoftwareClassesmscfile
    shellopencommand
    tmp_file
    SoftwareMicrosoftWindowsCurrentVersion
    PoliciesExplorer
    Run
    Check Update
    POST
    Content-Type: application/octet-stream
    Connection: close
    DZCW
    6VK3
    regsvr32.exe
    http://ds.download.windowsupdate.com/
    {"rep":0,"bid":"%s","ver":%d,"cam":"%s","cis":%d,"lvl":%d,"adm":%d,"bit":%d,"osv":%d,"osb":%d,"tmt":%d}
    {"rep":1,"bid":"%s","tid":"%s","res":%d}
在整个攻击活动中，这个硬编码RC4密钥（0x7A3C5B7CB7FCE715702AA0F4F4EC0935E759FD3B7B6BCC70159D61CF42814B81）需要重复使用，它负责对网络通信数据进行加密和解密。
QtBot还包含一个检测功能， **它可以检测前苏联国家用户的键盘布局，如果找到的话，则立刻终止恶意软件的执行。** 负责这个过程的代码如下所示：
为了实现持久化感染，恶意软件还会生成一个临时文件（随机命名）并将其存储在 **%APPDATA%LocalTemp** 目录下一个随机命名的文件夹之中。
随机生成的文件夹名称值存储在注册表键“HKCUSoftwareQtProject”的“0FAD2D5E”值之中。除此之外，恶意软件还会在这个键中存储其他额外的加密数据：
“0FAD2D5E” – 随机值 + Unicode临时文件名 + 数据块长度
“0FAD2D5EDZCW” – RC4加密的C2域名
正常的恶意软件通信会使用如下所示的格式化字符串:
    {"rep":0,"bid":"%s","ver":%d,"cam":"%s","cis":%d,"lvl":%d,"adm":%d,"bit":%d,"osv":%d,"osb":%d,"tmt":%d}
字符串填充完数据之后的情况大致如下所示：
    {"rep":0,"bid":"LD0fJMblnCbrDT8Mvma4Rg==","ver":256,"cam":"nightboom","cis":0,"lvl":1228
8,"adm":1,"bit":1,"osv":1537,"osb":7601,"tmt":30}
其中有些值的真实用意我们现在还尚不清楚，但我们可以大致猜到它们的意思：
“rep” – 重复尝试与单一主机通信；
“bid” – 代码验证，这个值存储在注册表值“0FAD2D5E”之中，并且使用了RC4加密；
“ver” – 估计是恶意软件版本信息；
“cam” – 活动名；
“cis” – 未知的硬编码值；
“lvl” – 系统完整性等级；
“adm” – 判断恶意软件是否拥有管理员权限；
“bit” – 未知；
“osv” – 操作系统版本号；
“osb” – 操作系统构建号；
“tmt” – timeout，单位为s；
**总结**
****
这种针对特定地理位置用户的恶意软件在此之前也有很多，所以这也并不算什么新鲜事儿了。本文所分析的恶意软件样本在一个单独的垃圾邮件活动中同时结合使用了两种完全不同的恶意软件家族，这也是一种非常新颖的技术策略。除此之外，QtBot还采用了多种机制来保护自己，而且在它的决策树中攻击目标范围都是已经确定了的，并且还自带了多种反分析包来增加分析和检测的难度。
Palo Alto Networks已经发现了超过四百万次与QtBot有关的攻击事件，广大用户可以使用Wildfire来保护自己免受这种威胁的侵害。
注：我们需要感谢Proofpoint的研究专家，他们是第一个发现这种安全威胁的研究人员，并其识别为“QtLoader”。除此之外，QtBot与之前的[Andromeda](https://blog.avast.com/andromeda-under-the-microscope)非常相似，它们不仅都可以对运行中的进程哈希进行检测，而且还引入了类似的反分析方法，更重要的是，它们的恶意代码注入目标都是msiexec.exe。
**入侵威胁指标IoC**
****
798aa42748dcb1078824c2027cf6a0d151c14e945cb902382fcd9ae646bfa120 – **QtBot**
bb92218314ffdc450320f1d44d8a2fe163c585827d9ca3e9a00cb2ea0e27f0c9 – **DDE
Dropper**
9d2ce15fd9112d52fa09c543527ef0b5bf07eb4c07794931c5768e403c167d49 – **Locky**
4fcee2679cc65585cc1c1c7baa020ec262a2b7fb9b8dc7529a8f73fab029afad –
**Trickbot**
hXXp://hobystube[.]net – Locky下载地址
hXXp://kengray[.]com – Trickbot下载地址
hXXp://fetchstats[.]net – QtBot C2
hXXp://toundlefa[.]net – QtBot C2
hXXp://aurea-art[.]ru/incrHG32
hXXp://castellodimontegioco[.]com/incrHG32
hXXp://nl.flipcapella[.]com/incrHG32
hXXp://dotecnia[.]cl/incrHG32
hXXp://christakranzl[.]at/incrHG32
hXXp://burka[.]ch/JHhdg33
hXXp://celebrityonline[.]cz