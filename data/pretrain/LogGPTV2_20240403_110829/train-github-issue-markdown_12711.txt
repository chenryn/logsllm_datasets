The provided code and its behavior in different versions of Julia can be described more clearly as follows:

### Code
```julia
type A end

Base.convert{F}(::Type{A}, x::F, v::Union{F,Vector{F}} = one(F)) = A()
```

### Behavior in Julia v0.4.3
When running the above code in Julia v0.4.3, the following results are observed:

```julia
julia> convert(A, 0.1)
A()

julia> convert(A, 0.1, 0.2)
A()

julia> convert(A, 0.1, [0.2])
ERROR: MethodError: `convert` has no method matching convert(::Type{A}, ::Float64, ::Array{Float64,1})
This may have arisen from a call to the constructor A(...),
since type constructors fall back to convert methods.
Closest candidates are:
  convert{F}(::Type{A}, ::F)
  convert{F}(::Type{A}, ::F, ::Union{Array{F,1},F})
  call{T}(::Type{T}, ::Any)
  ...
```

### Expected Behavior
It is expected that the last call `convert(A, 0.1, [0.2])` should work. If the generic type `F` is replaced with `Float64`, the call works as intended.

### Behavior in Julia v0.5 (from juliabox.org)
In Julia v0.5, the following results are observed:

```julia
julia> convert(A, 0.1)
A(Error showing value of type A:
ERROR: MethodError: `one` has no method matching one(::Type{A})
[inlined code] from ./none:1
in Type(Type{Pair{A,B}}, Symbol, A) at ./operators.jl:507
in show_default(Base.#show_default, IOContext{Base.Terminals.TTYTerminal}, Any) at ./show.jl:80
[inlined code] from ./show.jl:73
in showcompact(Base.#showcompact, Base.Terminals.TTYTerminal, A) at ./show.jl:1432
in writemime(Base.Multimedia.#writemime, Base.Terminals.TTYTerminal, MIME{symbol("text/plain")}, A) at ./replutil.jl:4
[inlined code] from ./expr.jl:8
in display(Base.Multimedia.#display, Base.REPL.REPLDisplay{Base.REPL.LineEditREPL}, MIME{symbol("text/plain")}, Any) at ./REPL.jl:114
[inlined code] from ./expr.jl:8
in display(Base.Multimedia.#display, Base.REPL.REPLDisplay{Base.REPL.LineEditREPL}, Any) at ./REPL.jl:117
[inlined code] from ./multimedia.jl:151
in display(Base.Multimedia.#display, Any) at ./multimedia.jl:163
in print_response(Base.REPL.#print_response, Base.Terminals.TTYTerminal, Any, Void, Bool, Bool, Void) at ./REPL.jl:134
in print_response(Base.REPL.#print_response, Base.REPL.LineEditREPL, Any, Void, Bool, Bool) at ./REPL.jl:121
in #18(Base.REPL.##18#19{Bool,Base.#parse_input_line,Base.REPL.LineEditREPL,Base.LineEdit.Prompt}, Base.LineEdit.MIState, Base.AbstractIOBuffer{Array{UInt8,1}}, Bool) at ./REPL.jl:626
in run_interface at ./LineEdit.jl:1611
in run_frontend at ./REPL.jl:859
in run_repl(Base.REPL.#run_repl, Base.REPL.LineEditREPL, Base.##479#480) at ./REPL.jl:167
in _start at ./client.jl:342
)

julia> convert(A, 0.1, 0.1)
A(Error showing value of type A:
ERROR: MethodError: `one` has no method matching one(::Type{A})
[inlined code] from ./none:1
in Type(Type{Pair{A,B}}, Symbol, A) at ./operators.jl:507
in show_default(Base.#show_default, IOContext{Base.Terminals.TTYTerminal}, Any) at ./show.jl:80
[inlined code] from ./show.jl:73
in showcompact(Base.#showcompact, Base.Terminals.TTYTerminal, A) at ./show.jl:1432
in writemime(Base.Multimedia.#writemime, Base.Terminals.TTYTerminal, MIME{symbol("text/plain")}, A) at ./replutil.jl:4
[inlined code] from ./expr.jl:8
in display(Base.Multimedia.#display, Base.REPL.REPLDisplay{Base.REPL.LineEditREPL}, MIME{symbol("text/plain")}, Any) at ./REPL.jl:114
[inlined code] from ./expr.jl:8
in display(Base.Multimedia.#display, Base.REPL.REPLDisplay{Base.REPL.LineEditREPL}, Any) at ./REPL.jl:117
[inlined code] from ./multimedia.jl:151
in display(Base.Multimedia.#display, Any) at ./multimedia.jl:163
in print_response(Base.REPL.#print_response, Base.Terminals.TTYTerminal, Any, Void, Bool, Bool, Void) at ./REPL.jl:134
in print_response(Base.REPL.#print_response, Base.REPL.LineEditREPL, Any, Void, Bool, Bool) at ./REPL.jl:121
in #18(Base.REPL.##18#19{Bool,Base.#parse_input_line,Base.REPL.LineEditREPL,Base.LineEdit.Prompt}, Base.LineEdit.MIState, Base.AbstractIOBuffer{Array{UInt8,1}}, Bool) at ./REPL.jl:626
in run_interface at ./LineEdit.jl:1611
in run_frontend at ./REPL.jl:859
in run_repl(Base.REPL.#run_repl, Base.REPL.LineEditREPL, Base.##479#480) at ./REPL.jl:167
in _start at ./client.jl:342
)

julia> convert(A, 0.1, [0.1])
ERROR: MethodError: `convert` has no method matching convert(::Type{A}, ::Float64, ::Array{Float64,1})
This may have arisen from a call to the constructor A(...),
since type constructors fall back to convert methods.
Closest candidates are:
  convert{F}(::Type{A}, ::F)
  convert{F}(::Type{A}, ::F, ::Union{Array{F,1},F})
  (::Type{BoundsError})(::ANY, ::ANY)
  ...
in eval at ./boot.jl:267
```

### Summary
- In Julia v0.4.3, the `convert` function works for `convert(A, 0.1)` and `convert(A, 0.1, 0.2)`, but fails for `convert(A, 0.1, [0.2])`.
- In Julia v0.5, the `convert` function fails for all calls due to a `MethodError` related to the `one` function not being defined for the type `A`.

To resolve this issue, you need to define the `one` method for the type `A` or adjust the `convert` method to handle the `one` function correctly.