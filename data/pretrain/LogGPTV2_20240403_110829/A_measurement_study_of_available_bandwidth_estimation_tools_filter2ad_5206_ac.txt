# 优化后的文本

## 图4：MRTG可用带宽估计与Pathload、IGI和Spruce的对比

- **(a) Pathload**
- **(b) IGI**
- **(c) Spruce**

数据为连接UC Berkeley到MIT LCS的100 Mb/s路径。

### 结果分析

#### Pathload
图3(a)显示，Pathload对可用带宽的上下限估计都过高。有时，其下限比实际可用带宽（由MRTG测量）高出20 Mb/s。尽管如此，Pathload在[5, 12]区间内仍能正确响应注入的交叉流量。为了确保这些不准确的估计不是由于新版本Pathload（版本1.1.0）中的错误造成的，我们使用了旧版Pathload进行相同的实验，但结果仍然相同。日志分析表明，在较短路径上，Pathload反复高估了探针流开始出现延迟增加趋势的转折点，这表明探针速率超过了可用带宽。初步调查显示，Pathload参数SPCT和SPDT的默认值对于该路径来说过高，这可能是我们的结果与Pathload论文中报告的结果不同的原因。在图4(a)中，我们观察到了相反的错误，即Pathload检测到的转折点低于实际可用带宽。

#### IGI
图3(b)显示，当链路利用率较低时，IGI能够成功估计可用带宽。然而，在[5, 12]区间内，IGI对注入的交叉流量反应甚微。图4(b)显示，IGI始终高估了可用带宽。我们认为，当利用率较高时，IGI表现较差，这与IGI论文中报告的数据一致。这种不准确性部分是由于IGI算法本身决定的。IGI通过初始阶段确定∆in = ∆out的转折点。然而，当利用率较高时，这一转折点变得不明显，并被测量噪声淹没。

#### Spruce
最后，图3(c)和图4(c)显示，Spruce紧密跟踪平均可用带宽，并正确响应注入的交叉流量。我们认为Spruce的良好表现归功于其简单性和缺乏可调参数。这两条路径均未包含明显的紧窄链路或多个等容量瓶颈。我们预计在这样的条件下，Spruce的表现可能不会那么好。

### 相对误差分布

图5展示了Pathload、IGI和Spruce在所有测试路径上的相对误差累积分布函数（CDF）。理想的CDF应该是一个在“0”处的阶跃函数，表示所有实验结果均为零误差。实际上，三种工具都显示出一些误差，且其CDF远非理想。负相对误差表示工具低估了可用带宽，而正相对误差表示工具高估了可用带宽。“-1”和“1”之间的区域指的是工具正确检测到D-test第一阶段和第二阶段之间可用带宽减少的情况，但可能低估或高估了变化量。

### 实验方法：D-Test

D-Test分为两个阶段：
1. 首先运行工具并读取其对可用带宽的估计值M1。
2. 其次，注入一个速率为Γ = 0.5 × M1的交叉流量流，并再次运行工具。假设其他用户的流量在这两个阶段间没有显著变化，则正确的可用带宽变化应为Γ，这也是我们期望工具在第二阶段估计的结果。

### 准确性评估

图5的结果与图3和图4中MRTG测试的结果一致。首先，Spruce的CDF形状最接近“0”处的阶跃函数，表明Spruce比IGI和Pathload更准确。特别是，Spruce的近70%测量值的相对误差小于30%。其次，Pathload相对于Spruce来说准确性较低，因为其CDF远离“0”处的阶跃函数。相比之下，Pathload对相对误差率较低的变化反应更灵敏。第三，IGI的CDF几乎是一个在“1”处的阶跃函数，这意味着IGI对D-test第一阶段和第二阶段之间可用带宽的变化反应很小。这与MRTG测试结果一致，表明IGI对注入的交叉流量不敏感。

### 探测流量

我们计算了各种工具每次测量生成的平均探测流量。发现Pathload每次测量生成2.5到10 MB的探测流量，而IGI和Spruce分别生成130 KB和300 KB。

### 实现问题

所有研究的工具（IGI、Pathload和Spruce）都需要仔细调度探测流量。具体来说，一对探针之间的输入间隔必须准确，有时甚至需要精确到几微秒。由于进程无法睡眠少于一个内核滴答的时间（通常是10ms或1ms），每个工具使用了一个延迟循环来占用处理器，直到发送完一列车包。这种延迟循环有效地阻止了其他程序在同一时间内发送流量，因此这些工具无法正确测量从同一台机器发出的交叉流量。低带宽路径（如T1、DSL）是个例外，因为在这种情况下输入间隔足够大，允许工具在发送数据包之间释放CPU。

### 结论

本文介绍了Spruce，一种用于估计可用带宽的工具，并将其性能与现有的IGI和Pathload进行了比较。Spruce简单且生成的探测流量较少。大量互联网路径上的实验表明，Spruce比Pathload和IGI更准确地估计了可用带宽。未来的工作将研究观察到的误差来源，以提高可用带宽估计的准确性。Spruce的源代码将在http://project-iris.net/提供。

### 参考文献

略去参考文献列表，保持原样。