nominal STC Vdd is high enough to produce a safe operating
point across all of the tiles. There is no need to set the Vdd
of some tiles higher or lower depending on their VddM IN .
Apart from this, while generally the same trends apply as
under NTC operation, the MIPS loss as incurred by SVSF
operation is much less.
VII. MODEL VALIDATION
Our initial validation of VARIUS-NTV involves a valida-
tion of the parameters used and a comparison to the results
reported in an experimental chip.
1) Validation of Model Parameters: VARIUS-NTV builds
on the VARIUS variation and timing error model which,
as explained in [37], was calibrated with experimental data
from Friedberg et al. [17] and Razor [16], and validated
with error rates in logic and memory [37]. To validate
the new VARIUS-NTV formulas, we start with Vth, which
is a complex function of Vdd, Leff, and other technology
parameters. We obtained a version of the 12nm Predictive
Technology Model (PTM) from Yu Cao from Arizona State
University [32]. We compared the Vth values generated by
VARIUS-NTV to those generated by the BSIM analytical
model [5], and HSPICE. The Vth values from VARIUS-NTV
closely track those from both HSPICE and BSIM with less
than 1% error over the designated Vdd range. The main
source of discrepancy is the accuracy of modeling the DIBL
effect.
We then used Vth values from VARIUS-NTV to generate
values for gate delay and static power. We compared the
values to HSPICE measurements of a FO4 inverter chain.
The delay and static power scaling trends of VARIUS-NTV
follow HSPICE within a 10% of error for our Vdd range.
2) Comparison to Silicon Measurements: To further val-
idate VARIUS-NTV, we compare its outputs to the varia-
tion measurements from Intel’s 80-Core TeraFLOPS proces-
sor [11]. To this end, we experimented with a 12mm×20mm
chip that mimicks the TeraFLOPS processor, where each
core (which they call tile) has 2 ﬂoating point units, a 3KB
instruction memory, and a 2KB data memory. According to
the chip micrograph, the chip organizes the 80 cores into 10
rows and 8 columns. To match their technology parameters,
we adapted VARIUS-NTV to a 65nm CMOS technology
with a VddN OM of 1.2V.
Figure 8 in [11] depicts the measured variation in core
frequency (fM AX) for the 80 cores of a single die at 50oC
and Vdd=0.8V. At 0.8V, the authors report a ratio of highest
core frequency to lowest core frequency equal to 1.62.
We repeat the conditions in which these measurements
were taken to the extent
that we can. We generate
VARIUS-NTV frequency maps for 100 sample dies, as-
suming (σ/µ)V th = 5% for the 65nm technology, with an
equal contribution of random and systematic variation. The
histogram of the resulting ratios of highest core frequency
to lowest core frequency as generated by VARIUS-NTV
is shown in Figure 10(a). As shown in the histogram,
VARIUS-NTV produces an average value of ≈1.48 for the
ratio of frequencies, with a 95% conﬁdence interval of
(1.452, 1.483).
Further, Figure 10(b) shows the frequency distribution of
the cores in one of the dies, as generated by VARIUS-NTV
at 0.8V. For this particular die, the ratio of highest core
frequency to lowest core frequency is ≈1.4. This ﬁgure is
very similar to Figure 8 in [11].
i
s
e
d
f
o
r
e
b
m
u
N
5
2
0
2
5
1
0
1
5
0
4
3
.
.
2
3
!!
!!
!!
!!
!!!!
!!
)
z
H
G
(
f
.
0
3
.
8
2
6
2
.
1.4
1.3
1.7
f ratio of fastest to slowest core
1.5
1.6
(a)
!!
!!
!!
!!
!!!!
!!
0
!!
!!
!!
!!
!!
!!
!!
!!
!!
!!
!!
!!
!!
!!
!!!!
!!
!!
!!
!!
!!
!!
!!
!!
!!
!!
!!
!!
!!
!!
!!
!!
!!
!!
!!
!!
!!
!!
!!
!!
!!
!!
!!
!!
!!
!!!!
!!
!!!!
!!
!!
!!
!!
!!!!
!!
!!
!!
!!
!!
!!
!!
!!
!!
!!
60
80
20
40
Core Index
(b)
Figure 10. Data generated by VARIUS-NTV that replicates
the data presented in [11]. Chart (a) shows a histogram of
the ratios of highest core frequency to lowest core frequency
over 100 dies. Chart (b) shows the frequency map for one
of the sample dies.
Recall that the 80-Core processor does not represent an
NTC design. However, our validation experiments are run
at the relatively low 0.8V (where the nominal Vdd at 65nm
is 1.2V). No further measured data is provided in [11]
below 0.8V. To our knowledge, there is no detailed variation
characterization of any NTC chip that is available.
VIII. RELATED WORK
There are several microarchitectural models that analyze
the impact of process variations on the frequency and power
of processors and memories at a level that is useful to
microarchitects. They include the work of Humenay et
al. [20], Liang and Brooks [25], Marculescu and Talpes [27],
Romanescu et al. [35], and Sarangi et al. [37] (on which this
work builds) among others. As indicated before, these works
only apply to STC, and not to NTC.
A few papers include a good description of the challenges
and issues at NTC [7], [13], [28].
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 07:16:56 UTC from IEEE Xplore.  Restrictions apply. 
There are many other works that are related to evaluating
the impact of process variation, mostly in STC environments.
We list some of the most relevant here. Humenay et al.
demonstrate that WID process variations lead to consider-
able performance and power consumption asymmetry among
the cores in a CMP [20]. To minimize such asymmetry,
they propose per-core ABB and ASV. Donald and Martonosi
analyze core-to-core power variations in a CMP due to WID
variation [12]. They propose to turn off cores when they
consume excessive leakage power in order to maximize
the chip-wide performance/power. Herbert and Marculescu
examine the impact of core size on the throughput of a
ﬁxed area chip in the presence of WID variations [18].
They ﬁnd that smaller cores (thus more cores per chip)
running at independent f lead to higher throughput than
larger ones. Li and Martinez propose to optimize the number
of active cores and their Vdds and fs jointly while running
a workload on a CMP [23] where they apply DVFS chip-
wide rather than independently per core. In [33], Rangan
et al. propose a throughput driven scheduling scheme to
guarantee that a variation-afﬂicted chip performs very close
to a perfect chip operating at
the average frequency of
the former. Rotem et al. [36] analyze the impact of single
and multiple voltage and frequency domains in a CMP
environment, considering power delivery limitations. They
propose a clustered topology to maximize performance. The
authors ignore the impact of variation. Finally, Teodorescu
and Torrellas [39] examine the impact of process scheduling
in the context of a manycore with variation. They provide
heuristics to schedule the workload for performance or for
power efﬁciency. It would be interesting to reproduce these
works in the context of NTC.
IX. CONCLUSION
To help confront process variations at the architecture
level at NTC, this paper has presented the ﬁrst microarchi-
tectural model of process variations for NTC. The model,
called VARIUS-NTV, extends an existing variation model for
STC. It models how variation affects the frequency attained
and power consumed by cores and memories in an NTC
manycore, and the timing and stability faults in SRAM cells
at NTC. The key aspects include: (i) adopting a gate-delay
model and an SRAM cell type that are tailored to NTC,
(ii) modeling SRAM failure modes emerging at NTC, and
(iii) accounting for the impact of leakage in SRAM failure
models.
We evaluated a simulated 11nm manycore at both NTC
and STC. Our results showed that the expected process
variations induce higher differences in f and power at NTC
than at STC. For example, the maximum difference in tile
f within a chip is ≈3.7x at NTC and only ≈2.3x at STC.
We evaluated different core-tiling organizations in the chip
and different conﬁgurations of on-chip Vdd- and f-domains.
Our experiments showed that variation management is more
crucial at NTC. Finally, we validated our model against an
experimental 80-core prototype chip.
REFERENCES
[1] J. Abella, P. Chaparro, X. Vera, J. Carretero, and A. Gonzalez.
High-Performance Low-Vcc In-Order Core. In International
Symposium on High Performance Computer Architecture,
January 2010.
[2] K. Bernstein, D. J. Frank, A. E. Gattiker, W. Haensch, B. L.
Ji, S. R. Nassif, E. J. Nowak, D. J. Pearson, and N. J. Rohrer.
High-Performance CMOS Variability in the 65-nm Regime
and Beyond. In IBM Journal of Research and Development,
July/September 2006.
[3] S. Borkar, T. Karnik, S. Narendra, J. Tschanz, A. Keshavarzi,
and V. De. Parameter Variations and Impact on Circuits and
Microarchitecture.
In Design Automation Conference, June
2003.
[4] K. A. Bowman, B. L. Austin, J. C. Eble, X. Tang, and
J. D. Meindl. A Physical Alpha-power Law MOSFET model.
In International Symposium on Low Power Electronics and
Design, August 1999.
[5] BSIM. http://www-device.eecs.berkeley.edu/˜bsim/BSIM4.
[6] Y. Cao and L. T. Clark. Mapping Statistical Process Varia-
tions Toward Circuit Performance Variability: An Analytical
Modeling Approach. In Design Automation Conference, June
2005.
[7] L. Chang, D. J. Frank, R. K. Montoye, S. J. Koester, B. L.
Ji, P. W. Coteus, R. H. Dennard, and W. Haensch. Practi-
cal Strategies for Power-Efﬁcient Computing Technologies.
Proceedings of the IEEE, February 2010.
[8] L. Chang, R. Montoye, Y. Nakamura, K. Batson, R. Eick-
emeyer, R. Dennard, W. Haensch, and D. Jamsek. An 8T-
SRAM for Variability Tolerance and Low-Voltage Operation
in High-Performance Caches. Journal of Solid-State Circuits,
April 2008.
[9] Y. Cheng and C. Hu. MOSFET Modeling and Bsim3 User’s
Guide. Kluwer Academic Publishers, 1999.
[10] R. Dennard, F. Gaensslen, V. Rideout, E. Bassous, and
A. LeBlanc. Design of Ion-Implanted MOSFETs with Very
Small Physical Dimensions.
In Journal of Solid-State Cir-
cuits, October 1974.
[11] S. Dighe, S. Vangal, P. Aseron, S. Kumar, T. Jacob, K. Bow-
man, J. Howard, J. Tschanz, V. Erraguntla, N. Borkar, V. De,
and S. Borkar. Within-Die Variation-Aware Dynamic-Voltage-
Frequency-Scaling With Optimal Core Allocation and Thread
Hopping for the 80-Core TeraFLOPS Processor. Journal of
Solid-State Circuits, January 2011.
[12] J. Donald and M. Martonosi. Power Efﬁciency for Variation-
tolerant Multicore Processors. In International Symposium on
Low power Electronics and Design, October 2006.
[13] R. G. Dreslinski, M. Wieckowski, D. Blaauw, D. Sylvester,
and T. Mudge. Near-Threshold Computing: Reclaiming
Moore’s Law Through Energy Efﬁcient Integrated Circuits.
Proceedings of the IEEE, February 2010.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 07:16:56 UTC from IEEE Xplore.  Restrictions apply. 
[14] M. Eisele,
J. Berthold, D. Schmitt-Landsiedel,
and
R. Mahnkopf. The Impact of Intra-die Device Parameter
Variations on Path Delays and on the Design for Yield of
Low Voltage Digital Circuits. Transactions on VLSI Systems,
December 1997.
[15] C. C. Enz, F. Krummenacher, and E. A. Vittoz. An Analytical
MOS Transistor Model Valid in All Regions of Operation
and Dedicated to Low-voltage and Low-current Applications.
Analog Integrated Circuits Signal Processing, 1995.
[16] D. Ernst, N. S. Kim, S. Das, S. Pant, R. Rao, T. Pham,
C. Zeisler, D. Blaauw, T. Austin, K. Flautner, and T. Mudge.
Razor: A Low-Power Pipeline Based on Circuit-Level Timing
Speculation. In International Symposium on Microarchitec-
ture, December 2003.
[17] P. Friedberg, Y. Cao, J. Cain, R. Wang, J. Rabaey, and
C. Spanos. Modeling Within-die Spatial Correlation Effects
for Process-design Co-optimization. In International Sympo-
sium on Quality of Electronic Design, March 2005.
[18] S. Herbert and D. Marculescu.
multiprocessor Variability-tolerance.
Conference, June 2008.
Characterizing Chip-
In Design Automation
[19] M. Horowitz, E. Alon, D. Patil, S. Naffziger, R. Kumar, and
K. Bernstein. Scaling, Power, and the Future of CMOS. In
International Electron Devices Meeting, December 2005.
[27] D. Marculescu and E. Talpes. Variability and energy aware-
In Design Au-
ness: A microarchitecture-level perspective.
tomation Conference, June 2005.
[28] D. Markovic, C. C. Wang, L. P. Alarcon, T.-T. Liu, and
J. M. Rabaey. Ultralow-power design in near-threshold region.
Proceedings of the IEEE, February 2010.
[29] Y. Morita, H. Fujiwara, H. Noguchi, Y. Iguchi, K. Nii,
H. Kawaguchi, and M. Yoshimoto. An Area-Conscious Low-
Voltage-Oriented 8T-SRAM Design under DVS Environment.
In Symposium on VLSI Circuits, June 2007.
[30] S. Mukhopadhyay, H. Mahmoodi, and K. Roy. Modeling of
failure probability and statistical design of SRAM array for
yield enhancement in nanoscaled CMOS. Transactions on
Computer-Aided Design of Integrated Circuits and Systems,
December 2005.
[31] M. Orshansky, J. Chen, and C. Hu. Direct sampling method-
ology for statistical analysis of scaled CMOS technologies.
Transactions on Semiconductor Manufacturing, November
1999.
[32] Predictive Technology Model (PTM). http://ptm.asu.edu/.
[33] K. Rangan, M. Powell, G.-Y. Wei, and D. Brooks. Achieving
uniform performance and maximizing throughput in the pres-
ence of heterogeneity. In International Symposium on High
Performance Computer Architecture, February 2011.
[20] E. Humenay, D. Tarjan, and K. Skadron. Impact of Process
Variations on Multicore Performance Symmetry. In Confer-
ence on Design, Automation and Test in Europe, April 2007.
[34] J. Renau, B. Fraguela, J. Tuck, W. Liu, M. Prvulovic, L. Ceze,
S. Sarangi, P. Sack, K. Strauss, and P. Montesinos. SESC
simulator, January 2005. http://sesc.sourceforge.net.
[21] H. Im. Physical insight into fractional power dependence of
saturation current on gate voltage in advanced short channel
MOSFETS (alpha-power law model). In International Sym-
posium on Low Power Electronics and Design, August 2002.
[22] International Technology Roadmap for Semiconductors
(ITRS). 2009 Update.
[23] J. Li and J. Martinez. Dynamic power-performance adaptation
of parallel computation on chip multiprocessors. In Interna-
tional Symposium on High-Performance Computer Architec-
ture, February 2006.
[24] S. Li, J. H. Ahn, R. D. Strong, J. B. Brockman, D. M.
Tullsen, and N. P. Jouppi. McPAT: An integrated power, area,
and timing modeling framework for multicore and manycore
architectures. In International Symposium on Microarchitec-
ture, December 2009.
[25] X. Liang and D. Brooks. Mitigating the impact of process
variations on processor register ﬁles and execution units.
In International Symposium on Microarchitecture, December
2006.
[26] C.-K. Luk, R. Cohn, R. Muth, H. Patil, A. Klauser,
G. Lowney, S. Wallace, V. J. Reddi, and K. Hazelwood. Pin:
Building customized program analysis tools with dynamic
instrumentation.
In Conference on Programming Language
Design and Implementation, June 2005.
[35] B. F. Romanescu, S. Ozev, and D. J. Sorin. Quantifying the
impact of process variability on microprocessor behavior. In
Workshop on Architectural Reliability, December 2006.
[36] E. Rotem, R. Ginosar, A. Mendelson, and U. Weiser. Multiple
In
clock and voltage domains for chip multi processors.
International Symposium on Microarchitecture, December
2009.
[37] S. Sarangi, B. Greskamp, R. Teodorescu, J. Nakano, A. Ti-
wari, and J. Torrellas. VARIUS: A model of process variation
and resulting timing errors for microarchitects. Transactions
on Semiconductor Manufacturing, February 2008.
[38] A. Srivastava, D. Sylvester, and D. Blaauw. Statistical Anal-
ysis and Optimization for VLSI: Timing and Power. Springer,
2005.
[39] R. Teodorescu and J. Torrellas. Variation-Aware Application
Scheduling and Power Management for Chip Multiproces-
sors. In International Symposium on Computer Architecture,
June 2008.
[40] The R Project for Statistical Computing.
project.org/.
http://www.r-
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 07:16:56 UTC from IEEE Xplore.  Restrictions apply.