government-data-requests/country/US.
[20] Fiat, A., and Shamir, A. How to prove yourself: Practical solutions to identifi-
cation and signature problems. In Advances in Cryptology - CRYPTO ’86, Santa
Barbara, California, USA, 1986, Proceedings (1986), pp. 186–194.
https://www.uscourts.gov/statistics-reports/
analysis-reports/directors-report-foreign-intelligence-surveillance-courts.
[21] Fisa
reports.
annual
[22] Foreign Intelligence Surveillance Act.
https://it.ojp.gov/privacyliberty/
authorities/statutes/1286.
[23] Foreign Intelligence Surveillance Court. https://www.fisc.uscourts.gov.
[24] Frankle, J., Park, S., Shaar, D., Goldwasser, S., and Weitzner, D. J. Practical
accountability of secret processes. In 27th USENIX Security Symposium, USENIX
(2018), pp. 657–674.
[25] Goldwasser, S., and Park, S. Public accountability vs. secret laws: Can they
coexist?: A cryptographic proposal. In Proceedings of the 2017 on Workshop on
Privacy in the Electronic Society (2017), WPES ’17, pp. 99–110.
[26] Goodrich, M. T., Kornaropoulos, E. M., Mitzenmacher, M., and Tamassia,
R. Auditable data structures. In 2017 IEEE European Symposium on Security and
Privacy, EuroS&P (2017), pp. 285–300.
information.
https:
//transparencyreport.google.com/user-data/overview?hl=en&user_
requests_report_period=series:requests,accounts;authority:US;time:
Y2018H1&lu=user_requests_report_period.
[27] Google transparency report: Requests for user
[28] J. Kroll and E. W. Felten and D. Boneh. Secure protocols for accountable war-
rant execution. http://www.cs.princeton.edu/~felten/warrant-paper.pdf, 2014.
[29] Kamara, S. Restructuring the NSA metadata program. In Financial Cryptography
and Data Security - FC 2014 Workshops, BITCOIN and WAHC (2014), pp. 235–247.
[30] Microsoft: Law enforcements requests report. https://www.microsoft.com/en-us/
corporate-responsibility/lerr.
Session 9E: Web Censorship and AuditingCCS ’19, November 11–15, 2019, London, United Kingdom2261[31] Moore, A. Privacy, security, and government surveillance: Wikileaks and the
new accountability. Public Affairs Quarterly 25, 2 (2011), 141–156.
[32] NSA OIG semi-annual report to Congress. https://www.oversight.gov/sites/
default/files/oig-sa-reports/OIG%20UNCLASS%20SAR%20OCT-MAR%202018.
pdf.
[33] SAMPL. https://github.com/nsol-nmsu/SAMPL.
[34] ACLU vs. ODNI: FOIA lawsuit seeking records about government surveillance
under the USA freedom act. https://tinyurl.com/y28u3c2g.
[35] Parsons, C., and Molnar, A. Government surveillance accountability: the
failures of contemporary canadian interception reports. Canadian journal of law
and technology 16, 1 (2018), 143–169.
[36] The USA PATRIOT Act: Preserving Life and Liberty. https://www.justice.gov/
archive/ll/highlights.htm.
[37] The USA PATRIOT Act of 2001. https://www.sec.gov/about/offices/ocie/aml/
patriotact2001.pdf.
[38] Segal, A., Feigenbaum, J., and Ford, B. Privacy-preserving lawful contact
chaining: [preliminary report]. In Proceedings of the 2016 ACM on Workshop on
Privacy in the Electronic Society, WPES (2016), pp. 185–188.
[39] Segal, A., Ford, B., and Feigenbaum, J. Catching bandits and only bandits:
Privacy-preserving intersection warrants for lawful surveillance. In 4th USENIX
Workshop on Free and Open Communications on the Internet, FOCI (2014).
[40] Setty, S. Surveillance, secrecy, and the search for meaningful accountability.
Stanford Journal of International Law 51, 1 (2015), 69–103.
https://www.aclu.org/blog/national-security/privacy-and-surveillance/
nsa-continues-violate-americans-internet-privacy.
[41] The NSA continues
internet privacy rights.
to violate Americans’
[42] Wikimedia
the
un-
der
https://www.aclu.org/cases/
wikimedia-v-nsa-challenge-upstream-surveillance-under-fisa-amendments-act.
vs. NSA: Challenge
FISA amendments
act.
upstream surveillance
to
A ZERO-KNOWLEDGE PROOFS BETWEEN I
AND C
Protocol 10 is initiated by I when she needs to establish her real
identity RI (corresponding to an email address and represented
by keypair (V KRI, SKRI)) and tie it to an anonymized identity AI
(corresponding to a nickname for the email address and represented
by keypair (V KAI, SKAI)). I can choose to create a new AI if she
needs to change the current AI in case SKAI gets compromised.
The goal of Protocol 10 is for I to establish her (V KRI, SKRI),
(V KAI, SKAI) keypairs, and prove in zero-knowledge to C that V KAI
could have been generated only by someone who had knowledge of
SKRI, and that the two key-pairs are related to each other by a DDH
tuple. To this end, I and C do a Chaum-Pedersen-style interactive
ZKP [16] (ZKP) for I to prove her anonymized identity, AI to C. The
proof πAI can be made non-interactive by applying the Fiat-Shamir
transform [20]. If C chooses to accept the proof as valid, it asks I to
send a signed copy of the transcript of the proof, σAI. C stores πAI
and σAI.
Protocol 11 is initiated by I when she needs to establish her
pseudonymous identity(PI) keypair(V KPIi , SKPIi), where i ∈ [1..m].
I could have multiple PIs tied in to a single AI, but only one can
be active at a given point in time. I creates a new PIi +1 if SKPIi
gets compromised or after a certain time period, which could be a
system parameter.
The goal of Protocol 11 is for I to establish her (V KPIi , SKPIi)
could only
keypairs, and prove in zero-knowledge to C that V KPIi
have been generated by someone who had knowledge of SKAI, and
the two key-pairs are related to each other by a DDH tuple. To
this end, I and C do a Chaum-Pedersen-style IZKP [16], similar to
Protocol 10 for I to prove her current pseudonymous identity, V KPIi
to C (made non-interactive by applying the Fiat-Shamir transform).
If C chooses to accept the proof, PIi, as valid, it asks I to send
of the transcript of the proof. C stores πPIi
a signed copy σPIi
and σPIi
are used by C during surveillance to prove
and σPIi
. πPIi
Protocol 10: Setup of (RI, AI) keypairs.
Inputs :Public parameters: Group G, q = |G|, д, h ∈ G.
ZKP Claim: V KAI was generated by someone
with knowledge of SKAI, SKRI.
Witness: SKAI, SKRI.
Output:Signed ZKP: SignSKRI
Parties :C and I
1 I picks a, a′ ← Zq, sets SKRI = a, SKAI = a′, and
V KRI = дa, V KAI = дa′.
(πAI)
2 begin
3
, Z = дa·a′) to C.
I picks ω1 = дa·a′, and sends DDH tuple
(д, X = дa, Y = дa′
C picks a challenge s ← Zq, and sends Com(s) to I,
where Com is a Pedersen commitment.
I picks r1 ← Zq, computes y1 = дr1 mod q,
y2 = дa′·r1 mod q. I sends y1, y2 to C.
C sends s to I.
I verifies Com, computes response z = a · s + r1 mod q,
and sends (z, y1, y2) to C.
C verifies if дz ?
Y z ?
= (Z s · y2) mod q. If checks verify, C accepts the
response as valid, asks I to send signed transcript of
proof, πAI.
I sends σAI = SignSKRI
H(д||V KRI||V KAI||ω1||y1||y2||s||z)) to C.
= (X s · y1) mod q, and if
(πAI =
4
5
6
7
8
9
10 end
that PIi was generated by I. Although we have abstracted it out, a
Pedersen commitment is of the form дv ·hr( mod q), where д, h ∈ G,
q = |G|, v is the value to be committed to, and r is the commitment
randomness. Here h = дa mod q, where a ← Zq is chosen by the
receiver of the commitment. We assume h is fairly chosen in a
distributed manner by I, C.
Note that the ZKP and the signature on the ZKP can be replaced
by a single signature proof of zero-knowledge of knowledge [15],
but we do not discuss this optimization in this paper.
B UC FUNCTIONALITIES AND ANALYSIS
The notion of UC security is captured by the pair of definitions
below:
Definition B.1. (UC-emulation [12]) Let π and ϕ be probabilistic
polynomial-time (PPT) protocols. We say that π UC-emulates ϕ if
for any PPT adversary A there exists a PPT adversary S such that
for any balanced PPT environment Z we have
EXECϕ,S,Z ≈ EXECπ ,A,Z
Definition B.2. (UC-realization [12]) Let F be an ideal function-
ality and let π be a protocol. We say that π UC-realizes F if π
UC-emulates the ideal protocol for F.
We describe the functionalities of FSurveil: FSAMPL
, Finit, Fcreate,
FBC. We assume that FSurveil maintains a table τ, with information
about the individuals being surveilled, and the surveillance orders.
A single row of the table would look like: (V KRI, SO, soid) where
zk
Session 9E: Web Censorship and AuditingCCS ’19, November 11–15, 2019, London, United Kingdom2262Protocol 11: Setup of (PIi) keypair.
Inputs :Public parameters: Group
G, |G| = q, д, h ∈ G, V KAI, SKAI.
Claim : V KPIi
knowledge of SKAI, SKPIi
Witness : SKAI, SKPIi
Output:Signed ZKP: SignSKAI
Parties :C and I
1 for i ∈ [1..m] do
.
(πPIi).
was generated by someone with
.
I picks a′′ ← Zq, sets SKPIi
begin
= a′′, and V KPIi
, P = дa′′
, Q = ω2)) to C.
1 mod q, and
2 to C.
1 ← Zq, computes y′
I parses SKAI as a′ and V KAI as дa′.
I picks ω2 = дa′·a′′. I sends DDH tuple
(д, zkpVerf = (Y = дa′
C picks a challenge s1 ← Zq, and sends Com(s1) to
I, where Com is a Pedersen commitment.
I picks r′
1 = дr′
2 = дa′′·r′
1, y′
y′
1 mod q, and sends y′
C sends s1 to I.
I verifies Com, computes response:
z1 = a′ · s1 + r′
C verifies if дz1 ?
Pz1 ?
= (Qs1 · y′
the response as valid, asks I to send signed
transcript of proof, πPIi
.
(πPIi
I sends σPIi
= SignSKAI
1||y′
H(д||V KAI||V KPIi ||ω2||y′
1 mod q, and sends (z1, y′
= (Y s1 · y′
1) mod q, and if
2) mod q. If checks verify, C accepts
2||s1||z1)) to C.
2) to C.
1, y′
=
2
3
4
5
6
7
8
9
10
11
end
12
13 end
zk
zk
zk
soid denotes the id number of the SO which is associated with
V KRI. We use ⊥ to denote unresponsive parties, malformed replies
to the ideal functionalities, and ideal functionalities returning fail
messages to parties.
FSAMPL
: We define our ideal functionality for zero-knowledge
zk
proofs, FSAMPL
, based on the ideal zero knowledge functionality,
Fzk defined by Canetti et al. [14]. While [14] deals with generic
relations, our FSAMPL
is restricted only to discrete-log relations,
and also involves the ideal functionality writing the claim to the
shared table τ. FSAMPL
is given in Figure 5, and the Fzk functional-
ity of [14] is given in Figure 6.
is parametrized by a prime-order cyclic group G, |G| = q,
д ∈ G, a ∈ Zq, and a session id, sid. The prover, I sends a claim to
be proven, V KRI to Fzk, and a witness a. Fzk checks if дa = V KRI,
i.e., if the claim is correct and forwards V KRI to the verifier C and
the ideal-world adversary S, and writes V KRI into table τ.
Fzk as given in Figure 6, is parametrized by a relation R, and a
session id, sid. The prover, P sends a claim to be proven, x to Fzk,
and a witness w. Fzk checks if R(x, w) = 1, i.e., if the claim is correct
and forwards x to the verifier V and the ideal-world adversary S.
Finit: The Finit ideal functionality described in Figure 7, inter-
acts with J, L, and C, initiates the process for creating a SO, and
posts the SO to the BC. L initiates contact with Finit by sending a
FSAMPL
zk
Functionality FSAMPL
zk
FSAMPL
proceeds as follows, running with prover I, verifier
C, an adversary S. Let G be a prime-order cyclic group, д ∈ G,
zk
|G| = q, and a ∈ Zq.
(1) Upon receiving (V KRI, sid, a) from I, if дa = V KRI,
send (V KRI, sid) to C and S, else exit. Write (V KRI) to
table τ and exit.
= дa′′.
Figure 5: Ideal functionality for ZKPs in SAMPL
Functionality Fzk
Fzk proceeds as follows, running with a prover P, verifier V ,
and an adversary S, and parametrized with a relation R:
(1) Upon receiving (zk − prover, sid, x, w) from P,
if
R(x, w) = 1, send (zk − proof, sid, x) to V and S and
exit. Otherwise exit.
Figure 6: Ideal functionality for ZKPs [14]
.
zk