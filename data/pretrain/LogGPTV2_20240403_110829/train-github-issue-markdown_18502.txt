#### Describe the bug
There is an issue when using `SimpleImputer` with a new Pandas dataframe,
specifically if it has a column that is of type `Int64` and has a `NA` value
in the training data.
#### Code to Reproduce
    def test_simple_imputer_with_Int64_column():
        index = pd.Index(['A', 'B', 'C'], name='group')
        df = pd.DataFrame({
            'att-1': [10, 20, np.nan],
            'att-2': [30, 40, 30]
        }, index=index)
        # TODO: This line breaks the test! Comment out and it works
        df = df.astype('Int64')
        imputer = SimpleImputer()
        imputer.fit(df)
        imputed = imputer.transform(df)
        df_imputed = pd.DataFrame(imputed, columns=['att-1', 'att-2'], index=index)
        assert df_imputed.loc['C', 'att-1'] == 15
#### Expected Results
Correct value is imputed
#### Actual Results
Exception raised:
    TypeError: float() argument must be a string or a number, not 'NAType'
#### Versions
    System:
        python: 3.7.4 (default, Aug 13 2019, 15:17:50)  [Clang 4.0.1 (tags/RELEASE_401/final)]
    executable: /.venv/bin/python
       machine: Darwin-19.3.0-x86_64-i386-64bit
    Python dependencies:
           pip: 19.3.1
    setuptools: 42.0.2
       sklearn: 0.22.1
         numpy: 1.18.1
         scipy: 1.4.1
        Cython: None
        pandas: 1.0.1
    matplotlib: None
        joblib: 0.14.1
    Built with OpenMP: True