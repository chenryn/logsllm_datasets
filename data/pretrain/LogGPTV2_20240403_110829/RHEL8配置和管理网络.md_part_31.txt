    ``` literallayout
    # nmcli connection modify Example ipv6.method "disabled"
    ```
3.  重启网络连接：
    ``` literallayout
    # nmcli connection up Example
    ```
:::
::: orderedlist
**验证步骤**
1.  输入 `ip address show`{.literal} 命令显示设备的 IP 设置：
    ``` literallayout
    # ip address show enp1s0
    2: enp1s0:  mtu 1500 qdisc fq_codel state UP group default qlen 1000
        link/ether 52:54:00:6b:74:be brd ff:ff:ff:ff:ff:ff
        inet 192.0.2.1/24 brd 192.10.2.255 scope global noprefixroute enp1s0
           valid_lft forever preferred_lft forever
    ```
    如果没有 `inet6`{.literal} 条目，则在该设备中禁用 `IPv6`{.literal}。
2.  验证 `/proc/sys/net/ipv6/conf/enp1s0/disable_ipv6`{.literal}
    文件现在包含 `1`{.literal}值：
    ``` literallayout
    # cat /proc/sys/net/ipv6/conf/enp1s0/disable_ipv6
    1
    ```
    `1`{.literal} 表示该设备禁用了 `IPv6`{.literal}。
:::
:::
:::
[]{#manually-configuring-the-etc-resolv-conf-file_configuring-and-managing-networking.html}
::: chapter
::: titlepage
# []{#manually-configuring-the-etc-resolv-conf-file_configuring-and-managing-networking.html#manually-configuring-the-etc-resolv-conf-file_configuring-and-managing-networking}第 31 章 手动配置 /etc/resolv.conf 文件 {.title}
:::
默认情况下，Red Hat Enterprise Linux（RHEL）8
上的网络管理器（NetworkManager）使用来自活跃网络管理器连接配置集的 DNS
设置动态地更新 `/etc/resolv.conf`{.literal} 文件。这部分论述了如何在
`/etc/resolv.conf`{.literal} 中禁用此功能的不同选项来手动配置 DNS 设置。
::: section
::: titlepage
# []{#manually-configuring-the-etc-resolv-conf-file_configuring-and-managing-networking.html#disabling-dns-processing-in-the-networkmanager-configuration_manually-configuring-the-etc-resolv-conf-file}在 NetworkManager 配置中禁用 DNS 处理 {.title}
:::
这部分论述了如何在 NetworkManager 配置中禁用 DNS 处理来手动配置
`/etc/resolv.conf`{.literal} 文件。
::: orderedlist
**流程**
1.  作为 root 用户，使用文本编辑器使用以下内容创建
    `/etc/NetworkManager/conf.d/90-dns-none.conf`{.literal} 文件：
    ``` literallayout
    [main]
    dns=none
    ```
2.  重新载入 `NetworkManager`{.literal} 服务：
    ``` literallayout
    # systemctl reload NetworkManager
    ```
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    重新载入该服务后，NetworkManager 不再更新
    `/etc/resolv.conf`{.literal} 文件。但是该文件的最后内容将被保留。
    :::
3.  （可选）从 `Generated by NetworkManager`{.literal} 中删除
    `/etc/resolv.conf`{.literal} 注释以避免混淆。
:::
::: orderedlist
**验证步骤**
1.  编辑 `/etc/resolv.conf`{.literal} 文件并手动更新配置。
2.  重新载入 `NetworkManager`{.literal} 服务：
    ``` literallayout
    # systemctl reload NetworkManager
    ```
3.  显示 `/etc/resolv.conf`{.literal} 文件：
    ``` literallayout
    # cat /etc/resolv.conf
    ```
    如果您成功禁用了 DNS 处理，NetworkManager 不会覆盖手动配置的设置。
:::
::: itemizedlist
**其它资源**
-   详情请查看 `dns`{.literal} man page 中的
    `NetworkManager.conf(5)`{.literal} 参数描述。
:::
:::
::: section
::: titlepage
# []{#manually-configuring-the-etc-resolv-conf-file_configuring-and-managing-networking.html#replacing-etc-resolv-conf-with-a-symbolic-link-to-manually-configure-dns-settings_manually-configuring-the-etc-resolv-conf-file}使用符号链接替换 /etc/resolv.conf 来手动配置 DNS 设置 {.title}
:::
如果 `/etc/resolv.conf`{.literal} 是符号链接，NetworkManager
不会自动更新 DNS 配置。这部分论述了如何使用 DNS
配置的其它文件的符号链接替换 `/etc/resolv.conf`{.literal}。
::: itemizedlist
**先决条件**
-   `rc-manager`{.literal} 选项没有设置为
    `file`{.literal}。要验证，请使用
    `NetworkManager --print-config`{.literal} 命令。
:::
::: orderedlist
**流程**
1.  创建文件，如
    `/etc/resolv.conf.manually-configured`{.literal}，并将您的环境的 DNS
    配置添加到其中。使用与原来的 `/etc/resolv.conf`{.literal}
    相同的参数和语法。
2.  删除 `/etc/resolv.conf`{.literal} 文件：
    ``` literallayout
    # rm /etc/resolv.conf
    ```
3.  创建名为 `/etc/resolv.conf`{.literal} 的符号链接，引用
    `/etc/resolv.conf.manually-configured`{.literal}:
    ``` literallayout
    # ln -s /etc/resolv.conf.manually-configured /etc/resolv.conf
    ```
:::
::: itemizedlist
**其它资源**
-   有关您可以在 `/etc/resolv.conf`{.literal} 中设置的参数的详情，请查看
    `resolv.conf(5)`{.literal} man page。
-   有关当 `/etc/resolv.conf`{.literal}
    是符号链接时，为什么网络管理器（NetworkManager）无法处理 DNS
    设置的更多详情，请参阅 `NetworkManager.conf(5)`{.literal} man page
    中的 `rc-manager`{.literal} 参数描述。
:::
:::
:::
[]{#configuring-802-3-link-settings_configuring-and-managing-networking.html}
::: chapter
::: titlepage
# []{#configuring-802-3-link-settings_configuring-and-managing-networking.html#configuring-802-3-link-settings_configuring-and-managing-networking}第 32 章 配置 802.3 链路设置 {.title}
:::
您可以通过修改以下配置参数来配置以太网连接的 802.3 链接设置：
::: itemizedlist
-   `802-3-ethernet.auto-negotiate`{.literal}
-   `802-3-ethernet.speed`{.literal}
-   `802-3-ethernet.duplex`{.literal}
:::
您可以将 802.3 链接设置配置为以下主要模式：
::: itemizedlist
-   忽略链路协商
-   强制自动协商激活
-   手动设置 `speed`{.literal} 和 `duplex`{.literal} 链接设置
:::
::: section
::: titlepage
# []{#configuring-802-3-link-settings_configuring-and-managing-networking.html#configuring-802-3-link-settings-with-nmcli-tool_configuring-802-3-link-settings}使用 nmcli 工具配置 802.3 链路设置 {.title}
:::
此流程描述了如何使用 `nmcli`{.literal} 工具配置 802.3 链路设置。
::: itemizedlist
**先决条件**
-   必须安装并运行 [**[NetworkManager]{.application}**]{.strong}。
:::
::: orderedlist
**流程**
1.  要忽略链路协商，请设置以下参数：
    ``` literallayout
    ~]# nmcli connection modify connection_name 802-3-ethernet.auto-negotiate no 802-3-ethernet.speed 0 802-3-ethernet.duplex ""
    ```
    注意，即使未设置 speed 和 duplex 参数且自动协商参数设为
    no，也不会禁用 auto-negotiation 参数。
2.  要强制自动协商激活，请输入以下命令：
    ``` literallayout
    ~]# nmcli connection modify connection_name 802-3-ethernet.auto-negotiate yes 802-3-ethernet.speed 0 802-3-ethernet.duplex ""
    ```
    这允许协商 NIC 支持的所有可用速度和 duplex 模式。
    您还可以在广告时启用自动协商功能，并只允许一个速度/双工模式。如果要强制
    `1000BASE-T`{.literal} 和 `10GBASE-T`{.literal}
    以太网链路配置，这非常有用，因为这些规则启用了自动协商。强制执行
    `1000BASE-T`{.literal} 标准：
    ``` literallayout
    ~]# nmcli connection modify connection_name 802-3-ethernet.auto-negotiate yes 802-3-ethernet.speed 1000 802-3-ethernet.duplex full
    ```
3.  要手动设置速度和双工链路设置，请输入以下命令：
    ``` literallayout
    ~]# nmcli connection modify connection_name 802-3-ethernet.auto-negotiate no 802-3-ethernet.speed [speed in Mbit/s] 802-3-ethernet.duplex [full|half]
    ```
:::
:::
:::
[]{#configuring-ethtool-offload-features_configuring-and-managing-networking.html}
::: chapter
::: titlepage
# []{#configuring-ethtool-offload-features_configuring-and-managing-networking.html#configuring-ethtool-offload-features_configuring-and-managing-networking}第 33 章 配置 ethtool offload 功能 {.title}
:::
网络接口卡可使用 TCP
卸载引擎（TOE）将某些操作卸载到网络控制器以提高网络吞吐量。
这部分论述了如何设置卸载功能。
::: section
::: titlepage
# []{#configuring-ethtool-offload-features_configuring-and-managing-networking.html#offload-features-supported-by-networkmanager_configuring-ethtool-offload-features}NetworkManager 支持的卸载功能 {.title}
:::
您可以使用 NetworkManager 设置以下 `ethtool`{.literal} 卸载功能：
::: itemizedlist
-   `ethtool.feature-esp-hw-offload`{.literal}
-   `ethtool.feature-esp-tx-csum-hw-offload`{.literal}
-   `ethtool.feature-fcoe-mtu`{.literal}
-   `ethtool.feature-gro`{.literal}
-   `ethtool.feature-gso`{.literal}
-   `ethtool.feature-highdma`{.literal}
-   `ethtool.feature-hw-tc-offload`{.literal}
-   `ethtool.feature-l2-fwd-offload`{.literal}
-   `ethtool.feature-loopback`{.literal}
-   `ethtool.feature-lro`{.literal}
-   `ethtool.feature-macsec-hw-offload`{.literal}
-   `ethtool.feature-ntuple`{.literal}
-   `ethtool.feature-rx`{.literal}
-   `ethtool.feature-rx-all`{.literal}
-   `ethtool.feature-rx-fcs`{.literal}
-   `ethtool.feature-rx-gro-hw`{.literal}
-   `ethtool.feature-rx-gro-list`{.literal}
-   `ethtool.feature-rx-udp_tunnel-port-offload`{.literal}
-   `ethtool.feature-rx-udp-gro-forwarding`{.literal}
-   `ethtool.feature-rx-vlan-filter`{.literal}
-   `ethtool.feature-rx-vlan-stag-filter`{.literal}
-   `ethtool.feature-rx-vlan-stag-hw-parse`{.literal}
-   `ethtool.feature-rxhash`{.literal}
-   `ethtool.feature-rxvlan`{.literal}
-   `ethtool.feature-sg`{.literal}
-   `ethtool.feature-tls-hw-record`{.literal}
-   `ethtool.feature-tls-hw-rx-offload`{.literal}
-   `ethtool.feature-tls-hw-tx-offload`{.literal}
-   `ethtool.feature-tso`{.literal}
-   `ethtool.feature-tx`{.literal}
-   `ethtool.feature-tx-checksum-fcoe-crc`{.literal}
-   `ethtool.feature-tx-checksum-ip-generic`{.literal}
-   `ethtool.feature-tx-checksum-ipv4`{.literal}
-   `ethtool.feature-tx-checksum-ipv6`{.literal}
-   `ethtool.feature-tx-checksum-sctp`{.literal}
-   `ethtool.feature-tx-esp-segmentation`{.literal}
-   `ethtool.feature-tx-fcoe-segmentation`{.literal}
-   `ethtool.feature-tx-gre-csum-segmentation`{.literal}
-   `ethtool.feature-tx-gre-segmentation`{.literal}
-   `ethtool.feature-tx-gso-list`{.literal}
-   `ethtool.feature-tx-gso-partial`{.literal}
-   `ethtool.feature-tx-gso-robust`{.literal}
-   `ethtool.feature-tx-ipxip4-segmentation`{.literal}
-   `ethtool.feature-tx-ipxip6-segmentation`{.literal}
-   `ethtool.feature-tx-nocache-copy`{.literal}
-   `ethtool.feature-tx-scatter-gather`{.literal}
-   `ethtool.feature-tx-scatter-gather-fraglist`{.literal}
-   `ethtool.feature-tx-sctp-segmentation`{.literal}
-   `ethtool.feature-tx-tcp-ecn-segmentation`{.literal}
-   `ethtool.feature-tx-tcp-mangleid-segmentation`{.literal}
-   `ethtool.feature-tx-tcp-segmentation`{.literal}
-   `ethtool.feature-tx-tcp6-segmentation`{.literal}
-   `ethtool.feature-tx-tunnel-remcsum-segmentation`{.literal}
-   `ethtool.feature-tx-udp-segmentation`{.literal}
-   `ethtool.feature-tx-udp_tnl-csum-segmentation`{.literal}
-   `ethtool.feature-tx-udp_tnl-segmentation`{.literal}
-   `ethtool.feature-tx-vlan-stag-hw-insert`{.literal}
-   `ethtool.feature-txvlan`{.literal}
:::
有关各个卸载功能的详情，请查看 `ethtool`{.literal}
实用程序文档和内核文档。
:::
::: section
::: titlepage
# []{#configuring-ethtool-offload-features_configuring-and-managing-networking.html#configuring-an-ethtool-offload-feature-using-networkmanager_configuring-ethtool-offload-features}使用 NetworkManager 配置 ethtool offload 功能 {.title}
:::
本节论述了如何使用 NetworkManager 启用和禁用 `ethtool`{.literal}
卸载功能，以及如何从 NetworkManager 连接配置集中删除功能设置。
::: orderedlist
**流程**
1.  例如：要启用 RX 卸载功能并在 `enp1s0`{.literal} 连接配置集中禁用 TX
    卸载，请输入：