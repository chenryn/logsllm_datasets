code (MAC) for each node in the path. In this section, we
present a cumulative authentication mechanism that has the
property that the message can be authenticated with only a
single MAC, together with an ordered list of nodes traversed
by the packet.
5.2. Cumulative Authentication
First, we describe the cumulative authentication mechanism
in the case in which private keys are shared between the
authenticating node and each node on the path. Each packet
authenticated in this way maintains a path authenticator and
an address list. When the packet traverses a node, the node
appends its address to the address list. It authenticates its
position in the list by replacing the path authenticator with
a MAC computed over the received path authenticator and
the packet’s immutable (cid:2)elds.
A
B
C
D
E
T
ha = MACTA(0jjp)
hc = MACTC(hbjjp)
he = MACT E (hdjjp)
hb = MACT B(hajjp)
hd = MACT D(hcjjp)
Figure 11: Cumulative authentication of packet p to a target T
When the packet reaches the receiver, if the path authen-
ticator was originally initialized to a well known value (such
as 0), then the receiver can reconstruct an expected (cid:2)nal
path authenticator value, given the address list. If the recon-
structed value matches the received value, then the packet
is deemed to be authentic and to have in fact traversed each
node in the address list.
Figure 11 shows an example of cumulative authentica-
tion for a packet p. In addition to updating the path authenti-
cator, each node also appends its own address to address list
in the packet. If each node authenticates the packet using a
shared MAC with T , then T can verify the path the packet
traversed by verifying the received path authenticator he by
checking that
he = MACT E(MACT D(MACTC(MACT B(MACTA(0 jj p)
jj p) jj p) jj p) jj p) :
Cumulative authentication also resists the removal of
previous nodes from the address list. For example, in
if an attacker C wishes to remove B from
Figure 11,
the address list,
it must obtain ha to derive a valid
hc = MACTC(hajjp). Since inverting B’s MAC is infeasible,
an attacker generally must have the cooperation of the node
immediately before the node to be removed. This mecha-
nism does not prevent the second node from removing the
(cid:2)rst node, but since the (cid:2)rst node is the source node, this is
equivalent to the second node dropping the original packet
and originating a packet of the same type to the destination.
Instead of using private, shared keys for authentication, it
is also possible to use our cumulative authentication mech-
anism in the case in which the TESLA broadcast authenti-
cation protocol [34, 35] is used for authentication; the au-
thentication can be performed either by the sender of the
packet to be authenticated or by each recipient. To perform
the authentication at each recipient, as may be desirable
with a proactive routing protocol, such as BGP, each node
along the path veri(cid:2)es the TESLA (cid:147)security condition(cid:148) (that
the TESLA keys have not yet been released) and updates a
address list and path authenticator as described above using
its current TESLA key. The node then buffers the packet for
veri(cid:2)cation. Later, the sender transmits the key, required for
the veri(cid:2)cation of its authentication, to each node to which
the sender transmitted the original routing packet. Each
node receiving such an authentication packet veri(cid:2)es the
authentication information. After the node performs that
authentication, it appends its previous TESLA key to the
authentication packet and transmits the new authentication
packet to each neighbor to which it sent the original routing
packet.
In an on-demand protocol, such as Ariadne [14], an ini-
tiator (cid:3)oods a route request packet when it needs a route to
a destination; the initiator may then wish to perform the au-
thentication. In this case, each node along the path updates
a address list and path authenticator as described above.
When the packet reaches the destination, the destination
veri(cid:2)es the TESLA security condition. Alternatively, the
destination can include a timestamp, and allow the source
to verify the security condition. The destination then adds
an authenticator to the path authenticator and address list
(and possibly the timestamp), and sends the packet along
the reverse of the route along which it came. Each node
receiving such a packet includes in the packet a key that al-
lows the original authenticator to be reconstructed. If the
end-to-end authentication is also performed using TESLA,
the TESLA key used by the destination for authenticating
the path authenticator, address list, and timestamp must be
sent to the original sender.
5.3. Performance Evaluation
To evaluate the performance of cumulative authentication,
we examined the overhead reduction resulting from using
cumulative authentication together with Ariadne [14]. We
performed 140 simulations, each running over 900 simu-
lated seconds, and examined the number of bytes of over-
head transmitted within control packets. When Ariadne
was run without cumulative authentication, the total over-
head across 50 nodes and 126000 simulated seconds was
1997 megabytes, whereas with cumulative authentication
the same total overhead was 1491 megabytes. This result
represents a 25% reduction in routing overhead.
6. Conclusion
In this paper, we have presented four new mechanisms as
building blocks for creating secure distance vector and path
vector routing protocols. These mechanisms not only pro-
tect the routing protocol against standard routing attacks,
they are based on highly ef(cid:2)cient symmetric cryptographic
techniques; our mechanisms thus also help to protect the
routing protocol against denial of service attacks based for
example on simply by (cid:3)ooding large numbers of randomly
generated, forged routing messages, which then must be au-
thenticated and rejected by the routers.
For securing distance vector protocols, our hash tree
chain mechanism forces a router to increase the distance
(metric) when forwarding a routing table entry. To provide
authentication of a received routing update in bounded time,
we presented a new mechanism, similar to hash chains, that
we call tree-authenticated one-way chains. For cases in
which the maximum metric is large, we presented skiplists,
which provide more ef(cid:2)cient initial computation cost and
more ef(cid:2)cient element veri(cid:2)cation; this mechanism is based
on a new cryptographic mechanism, called MW-chains,
which we also presented. For securing path vector pro-
tocols, our cumulative authentication mechanism authenti-
cates the list of routers on the path in a routing update, pre-
venting removal or reordering of the router addresses in the
list; this mechanism uses using only a single authenticator
in the routing update rather than one per router address.
As our economy and critical infrastructure increasingly
rely on the Internet, securing routing protocols becomes of
critical importance. The routing security mechanisms we
have described can be applied to conventional routing pro-
tocols such as those in use in the Internet today, as well as
to specialized routing protocols designed for new environ-
ments such as multihop wireless ad hoc networking. Our
mechanisms provide a foundation on which ef(cid:2)cient secure
routing protocols can be designed, and we leave the devel-
opment of such protocols to future work.
7. Acknowledgments
We would like to thank Dawn Song for her important feed-
back on our work. We would also like to thank the anony-
mous reviewers for their valuable comments on an earlier
draft of this paper and for encouraging us to include in the
paper an evaluation of our proposed security mechanisms.
References
[1] Stefano Basagni, Kris Herrin, Emilia Rosti, and Danilo Br-
uschi. Secure Pebblenets.
In Proceedings of the Second
Symposium on Mobile Ad Hoc Networking and Computing
(MobiHoc 2001), pages 156(cid:150)163, October 2001.
[2] Steven Cheung.
An Ef(cid:2)cient Message Authentication
Scheme for Link State Routing. In Proceedings of the 13th
Annual Computer Security Applications Conference, pages
90(cid:150)98, 1997.
[3] Don Coppersmith and Markus Jakobsson. Almost Optimal
Hash Sequence Traversal. In Proceedings of the Sixth Inter-
national Conference on Financial Cryptography (FC 2002),
Lecture Notes in Computer Science. Springer, 2002.
[4] Joan Daemen and Vincent Rijmen. AES Proposal: Rijndael,
March 1999.
[5] Bridget Dahill, Kimaya Sanzgiri, Brian Neil Levine, Eliz-
abeth Royer, and Clay Shields. A Secure Routing Proto-
col for Ad hoc Networks. In Proceedings of the 10th IEEE
International Conference on Network Protocols (ICNP ’02),
November 2002.
[6] Whit(cid:2)eld Dif(cid:2)e and Martin Hellman. New Directions in
IEEE Transactions on Information Theory,
Cryptography.
IT-22:644(cid:150)654, November 1976.
[7] Shimon Even, Oded Goldreich, and Silvio Micali. On-
Line/Off-Line Digital Signatures. In Advances in Cryptology
- Crypto ’89, edited by Gilles Brassard, volume 435 of Lec-
ture Notes in Computer Science, pages 263(cid:150)277. Springer-
Verlag, 1989.
[8] Gregory Finn. Reducing the Vulnerability of Dynamic
Technical Report ISI-RR-88-201,
Computer Networks.
USC/Information Sciences Institute, June 1988.
[9] Brian Gladman. Cryptography Technology:
Implemen-
in C/C++ and Assembler,
tations of AES (Rijndael)
June 2002. Available at http://fp.gladman.plus.com
/cryptography_technology/rijndael/.
[10] Ralf Hauser, Antoni Przygienda, and Gene Tsudik. Reducing
the Cost of Security in Link State Routing. In Proceedings
of the 1997 Symposium on Network and Distributed Systems
Security (NDSS ’97), pages 93(cid:150)99, February 1997.
[11] C. Hedrick. Routing Information Protocol. RFC 1058, June
1988.
[12] Andy Heffernan. Protection of BGP Sessions via the TCP
MD5 Signature Option. RFC 2385, August 1998.
[13] Yih-Chun Hu, David B. Johnson, and Adrian Perrig. Se-
cure Ef(cid:2)cient Distance Vector Routing in Mobile Wireless
Ad Hoc Networks.
In Fourth IEEE Workshop on Mobile
Computing Systems and Applications (WMCSA ’02), pages
3(cid:150)13, June 2002.
[14] Yih-Chun Hu, Adrian Perrig, and David B. Johnson.
Ariadne: A Secure On-Demand Routing Protocol for Wire-
less Ad Hoc Networks. In Proceedings of the Eighth ACM
International Conference on Mobile Computing and Net-
working (MobiCom 2002), September 2002.
[15] Yih-Chun Hu, Adrian Perrig, and David B. Johnson. Packet
Leashes: A Defense against Wormhole Attacks in Wireless
Ad Hoc Networks. In Proceedings of IEEE Infocomm 2003,
April 2003.
[16] Markus Jakobsson. Fractal Hash Sequence Representation
and Traversal.
In Proceedings of the 2002 IEEE Interna-
tional Symposium on Information Theory (ISIT ’02), pages
437(cid:150)444, July 2002.
[17] John Jubin and Janet D. Tornow. The DARPA Packet Radio
Network Protocols. Proceedings of the IEEE, 75(1):21(cid:150)32,
January 1987.
[18] Stephen Kent, Charles Lynn, Joanne Mikkelson, and Karen
Seo. Secure Border Gateway Protocol (S-BGP) (cid:151) Real
World Performance and Deployment Issues. In Proceedings
of the 2000 Symposium on Network and Distributed Systems
Security (NDSS ’00), pages 103(cid:150)116, February 2000.
[19] Jiejun Konh, Petros Zerfos, Haiyun Luo, Songwu Lu, and
Lixia Zhang. Providing Robust and Ubiquitous Security
Support for Mobile Ad-Hoc Networks. In Proceedings of the
Ninth International Conference on Network Protocols (ICNP
’01), pages 251(cid:150)260, November 2001.
[20] Brijesh Kumar. Integration of Security in Network Routing
Protocols. SIGSAC Review, 11(2):18(cid:150)25, 1993.
[21] Brijesh Kumar and Jon Crowcroft.
Integrating Security in
Inter Domain Routing Protocols. Computer Communication
Review, 23(5):36(cid:150)51, October 1993.
[22] Ratul Mahajan, David Wetherall, and Tom Anderson. Un-
derstanding BGP Miscon(cid:2)guration.
In Proceedings of the
SIGCOMM ’02 Conference on Communications Architec-
tures, Protocols and Applications, August 2002.
[23] Gary Malkin. RIP Version 2. RFC 2453, November 1998.
[24] Stephen Matyas, Carl Meyer, and Jonathan Oseas. Gen-
erating Strong One-Way Functions with Cryptographic
Algorithm.
IBM Technical Disclosure Bulletin, 27:5658(cid:150)
5659, 1985.
[25] Ralph C. Merkle. Protocols for Public Key Cryptosystems.
In Proceedings of the 1980 IEEE Symposium on Security and
Privacy, 1980.
[26] Ralph C. Merkle. A Digital Signature Based on a Conven-
tional Encryption Function.
In Advances in Cryptology -
Crypto ’87, edited by Carl Pomerance, volume 293 of Lec-
ture Notes in Computer Science, pages 369(cid:150)378. Springer-
Verlag, 1987.
[27] Ralph C. Merkle. A Certi(cid:2)ed Digital Signature. In Advances
in Cryptology - Crypto ’89, edited by Gilles Brassard, vol-
ume 435 of Lecture Notes in Computer Science, pages 218(cid:150)
238. Springer-Verlag, 1989.
[28] Sandra Murphy. BGP Security Vulnerabilities Analysis.
Internet-Draft, draft-murphy-bgp-vuln-01.txt, October 2002.
2000.
[29] OpenSSL Project
team.
OpenSSL, May
http://www.openssl.org/.
[30] Charles E. Perkins and Pravin Bhagwat. Highly Dynamic
Destination-Sequenced Distance-Vector Routing (DSDV)
for Mobile Computers. In Proceedings of the SIGCOMM ’94
Conference on Communications Architectures, Protocols
and Applications, pages 234(cid:150)244, August 1994.
[31] Charles E. Perkins and Elizabeth M. Royer. Ad-Hoc On-
Demand Distance Vector Routing.
In Proceedings of the
Second IEEE Workshop on Mobile Computing Systems and
Applications (WMCSA’99), pages 90(cid:150)100, February 1999.
[32] Radia Perlman.
Interconnections: Bridges and Routers.
Addison-Wesley, 1992.
[33] Adrian Perrig. The BiBa One-Time Signature and Broad-
cast Authentication Protocol. In Proceedings of the Eighth
ACM Conference on Computer and Communications Secu-
rity (CCS-8), pages 28(cid:150)37, November 2001.
[34] Adrian Perrig, Ran Canetti, Dawn Song, and J. D. Tygar.
Ef(cid:2)cient and Secure Source Authentication for Multicast. In
Proceedings of the 2001 Network and Distributed System Se-
curity Symposium, NDSS ’01, pages 35(cid:150)46, February 2001.
[35] Adrian Perrig, Ran Canetti, J. D. Tygar, and Dawn Song.
RSA
The TESLA Broadcast Authentication Protocol.
CryptoBytes, 5 (Summer), 2002.
[36] Yakov Rekhter and Tony Li. A Border Gateway Protocol 4
(BGP-4). RFC 1771, March 1995.
[37] Pankaj Rohatgi. A Compact and Fast Hybrid Signature
Scheme for Multicast Packet Authentication. In Proceedings
of the 6th ACM Conference on Computer and Communica-
tions Security, November 1999.
[38] Karen E. Sirois and Stephen T. Kent. Securing the Nimrod
Routing Architecture.
In Proceedings of the 1997 Sympo-
sium on Network and Distributed Systems Security (NDSS
’97), February 1997.
[39] Bradley R. Smith and J.J. Garcia-Luna-Aceves. Securing the
Border Gateway Routing Protocol. In Proceedings of Global
Internet’96, pages 81(cid:150)85, November 1996.
[40] Bradley R. Smith, Shree Murthy, and J.J. Garcia-Luna-
Aceves. Securing Distance Vector Routing Protocols. In Pro-
ceedings of the 1997 Symposium on Network and Distributed
Systems Security (NDSS ’97), pages 85(cid:150)92, February 1997.
[41] Manel Guerrero Zapata and N. Asokan. Securing Ad Hoc
Routing Protocols. In Proceedings of the ACM Workshop on
Wireless Security (WiSe 2002), September 2002.
[42] Kan Zhang. Ef(cid:2)cient Protocols for Signing Routing Mes-
In Proceedings of the Symposium on Network and
sages.
Distributed Systems Security (NDSS ’98), March 1998.
[43] Lidong Zhou and Zygmunt J. Haas.
Securing Ad Hoc
Networks. IEEE Network Magazine, 13(6):24(cid:150)30, Novem-
ber/December 1999.