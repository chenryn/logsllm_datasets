### Summary
In this benchmarking paper, we evaluate the performance of InfluxDB and Elasticsearch across three key metrics:
- **Data ingest performance** - measured in values per second
- **On-disk storage requirements** - measured in bytes
- **Mean query response time** - measured in milliseconds

Our tests show that InfluxDB significantly outperformed Elasticsearch in all three areas:
- **Data ingestion**: InfluxDB outperformed Elasticsearch by 6.1x.
- **Query performance**: InfluxDB outperformed Elasticsearch by up to 8.2x.
- **Compression**: InfluxDB provided 2.5x better compression.

It's important to note that configuring Elasticsearch for time series data is not trivial, requiring upfront decisions about indexing, sharding, and working with timestamp fields. In contrast, InfluxDB is ready to use for time series workloads out of the box with no additional configuration.

### Introduction
This technical paper compares the performance and features of InfluxDB and Elasticsearch for common time series workloads, focusing on data ingestion rates, on-disk data compression, and query performance. This information is valuable for developers and architects evaluating these technologies for their specific use cases, such as infrastructure monitoring, application monitoring, cloud monitoring, and IoT applications.

Our goal is to provide a consistent, up-to-date comparison reflecting the latest developments in both InfluxDB and Elasticsearch. We will periodically re-run these benchmarks and update this document. All the code for these benchmarks is available on [GitHub](https://github.com/your-repo). Feel free to open issues or pull requests, or contact us with any questions, comments, or suggestions.

### Why Time Series?
Time series data has traditionally been associated with financial applications. However, as more servers, applications, networks, and physical devices are instrumented, time series is becoming the de facto standard for storing, retrieving, and analyzing real-time and historical data. For more information on why a purpose-built time series database is essential, see the "Why Time Series?" technical paper.

### Test Design
#### About InfluxDB
- **Version tested**: v1.7.2
- **Description**: InfluxDB is an open-source time series database written in Go. It features a custom-built storage engine, the Time-Structured Merge Tree (TSM), optimized for time series data.
- **Query Language**: InfluxQL, a SQL-like language, supports mathematical and statistical functions over time ranges, making it ideal for custom monitoring, metrics collection, real-time analytics, and IoT/sensor data workloads.

#### About Elasticsearch
- **Version tested**: v6.5.0
- **Description**: Elasticsearch is an open-source search server written in Java, built on top of Apache Lucene. It provides a distributed, full-text search engine suitable for enterprise workloads.
- **Time Series Capabilities**: While not a dedicated time series database, Elasticsearch uses Luceneâ€™s column indexes to efficiently aggregate numeric values. It supports query-time aggregations and indexing on timestamp fields, making it capable of handling time series data.

Please note that this paper does not evaluate InfluxDB for full-text search or log management use cases, which are better suited for Elasticsearch or similar full-text search engines.

### Comparison at-a-Glance
| Feature | InfluxDB | Elasticsearch |
|---------|----------|---------------|
| Description | Database designed for time series, events, and metrics data management | Full-text search engine based on the Apache Lucene project |
| Website | [influxdata.com](https://influxdata.com/) | [elastic.co](https://www.elastic.co/) |
| GitHub | [influxdata/influxdb](https://github.com/influxdata/influxdb) | [elastic/elasticsearch](https://github.com/elastic/elasticsearch) |
| Documentation | [docs.influxdata.com](https://docs.influxdata.com/influxdb/latest/) | [elastic.co/guide](https://www.elastic.co/guide/index.html) |
| Initial Release | 2013 | 2010 |
| Latest Release | v1.7.2, November 2018 | v6.5.0, November 2018 |
| License | Open Source, MIT | Open Source, Apache |
| Language | Go | Java |
| Operating Systems | Linux, OS X | Linux, OS X, Windows |
| Data Access APIs | HTTP Line Protocol, JSON, UDP | JSON, binary protocol (Java) |
| Schema | Schema-free | Schema-free |

### Overview
To build a representative benchmark suite, we identified the most commonly evaluated characteristics for time series data:
1. **Data ingest performance** - measured in values per second
2. **On-disk storage requirements** - measured in bytes
3. **Mean query response time** - measured in milliseconds

### Conclusion
InfluxDB outperformed Elasticsearch in write throughput, on-disk compression, and query performance. Since Elasticsearch is primarily a full-text search server, some configurations are necessary for efficient time series data storage. Our tests showed that these configurations did not significantly impact write or query performance but did affect storage requirements. We will cover this in more detail in a later section.

### The Dataset
#### Parameters for the Sample Dataset
- **Number of servers**: 100
- **Values measured per server**: 100
- **Measurement interval**: 10 seconds

This dataset was used to simulate a realistic environment for our benchmarking tests.