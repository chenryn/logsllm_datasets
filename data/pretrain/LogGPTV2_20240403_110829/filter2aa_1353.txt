CS download shellcode 分析
CS version:4.3
CS端IP：172.16.80.3
choose a payload to stage：windows/beacon_https/reverse_https
在⽣成加载shellcode的程序之后放⼊到x32dbg。
定位到shellcode执⾏的地址
在将DF标志清零后（CLD），紧接着⼀个call，这个call主要是把 wininet这个字符串⼊栈
FS寄存器指向当前活动线程的TEB结构，在这个结构体的0x30的位置是PEB结构地址接着去找PEB_LDR_DATA这个
结构体从双向链表中去寻找我们想要的DLL，这个DLL就是之前我们⼊栈的那个wininet
再知道了这点以后，后⾯的好⼏个跳转和⽐较指令，其实可以不⽤看了。
我们来到这⾥会有个jmp eax 在这上⾯的第⼀个pop上断下来
运⾏到push ecx之前，在这⾥是通过loadlibrary加载wininet这个dll。这个jmp eax 是 call eax。
call eax 等于两条汇编指令
1、把当前的下⼀个地址⼊栈
2、跳转到eax
这⾥采⽤的是 push ecx，jmp eax 实现了call，pop会把栈给弹出来，这⼏个pop后的栈是我们函数执⾏的参数。
如何判断有⼏个参数需要借助MSDN 官⽅⽂档。
接下来继续运⾏到这个断点，运⾏到 push ecx 之前。
第⼀个函数 InternetOpen （NULL,NULL,NULL,NULL,NULL）
全部都NULL
第⼆个函数InternetConnectA（InternetOpen handle,IP,PORT,NULL,NULL,0X00000003,NULL）
第⼀个参数为 InternetOpen的句柄 
通过多运⾏⼏次断点我们可以把 CS 的shellcode的API给梳理出来
HINTERNET InternetOpenW(
  [in] LPCWSTR lpszAgent,
  [in] DWORD   dwAccessType,
  [in] LPCWSTR lpszProxy,
  [in] LPCWSTR lpszProxyBypass,
  [in] DWORD   dwFlags
);
wininte.InternetOpen()//初始化应⽤程序对 WinINet 函数的使⽤
wininet.InternetConnectA() //创建链接信息
wininet.HttpOpenRequestA()//创建⼀个 HTTP 请求句柄。
嗯？这就是⼀个下载者阿。我这边请求的地址是在HttpOpenRequestA的/IzML
这⾥需要注意的是 /IzML 这个路径是由CS随机的，内容为：
wininet.InternetSetOptionA()//设置 Internet 选项
CS的默认为
"User-Agent: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)\r\n"
wininet.HttpSendRequestA()//发送请求
user32.GetDesktopWindow() //检索桌⾯窗⼝的句柄。桌⾯窗⼝覆盖整个屏幕。桌⾯窗⼝是在其上绘制其他窗⼝
的区域。
wininet.InternetErrorDlg //如果存在适当的对话框，则显示传递给 InternetErrorDlg的错误的对话框。如
果使⽤了 FLAGS_ERROR_UI_FILTER_FOR_ERRORS标志，该函数还会检查标题中是否存在任何隐藏的错误，并在需
要时显示⼀个对话框。
kernel32.VirtualAlloc //创建内存
wininet.InternetReadFile//读取数据
这⾥也是⼀段shellcode，针对这部分shellcode的分析的下篇⽂章⾥会出。
总结
简化⼀下整个流程
1.http请求 shellcode
2.创建内存
3.读取shellcode
4.执⾏
在知道原理后可以更加灵活的去写代码，⽆⾮就是⼀个http download 以及 内存加载。如果我们使⽤windows的
API函数的话下⾯这⼏个就够了。
1.InternetOpenA
2.InternetOpenUrlA
3.InternetReadFile
4.VirtualAlloc
当然你也可以⾃⼰⽤socket 实现http download。
其实写这篇⽂章的初衷是过年太⽆聊了就想写个在shellcode中通过添加花指令，缩短指令等实现在红队的项⽬中
进⾏快速免杀，遂分析起来了 CS的shellcode。