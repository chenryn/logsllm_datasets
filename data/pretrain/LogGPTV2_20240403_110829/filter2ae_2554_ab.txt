**“摆在明面上”的威胁就转变成了“隐藏在暗地里”的威胁** ，想在主机上发现异常就会变得极其困难。
## **4.** **从可行性来看Windows Rootkit**
前面的内容提到，Windows引入了两大安全机制来对抗Rootkit，分别是签名验证和PatchGuard，我们将针对这两个点分别展开讨论。
### **4.1签名验证**
关于这部分内容，国外安全研究员Bill Demirkapi在Black Hat 2021的议题《Demystifying Modern Windows
Rootkits》中给出了答案，相应的解决方案分别为 **直接购买** 、 **滥用泄露证书** 和 **寻找“0day”驱动** 。
##### **4.1.1 购买证书**
这种方式其实没什么好说的，攻击者唯一需要考虑的问题，就是 **购买渠道是否足够可靠** ，是否存在身份暴露的风险。
##### **4.1.2 滥用泄露证书**
从可行性上来说， **Windows根本不关心证书是否已经过期或者已经被吊销**
，通过泄露的证书，攻击者就可以生成在任意Windows版本下都有效的驱动签名
由于不需要购买证书，在降低成本的同时也避免了因购买渠道不可靠而暴露身份的风险，此外，通过这种方式进行植入所需的前置条件也不算多，与挖掘“0day”驱动的方式相比，技术难度降低很多，当然，
**掌握了泄露证书的情报后，相关安全厂商可以针对此类Rootkit进行查杀拦截**
下图是收集到的一些历史泄露证书，从此图可以看出 **泄露的情报并不少见**
##### **4.1.3 “0day”驱动利用**
从可行性来说， **一定存在着可被利用的“0day”驱动** ，而历史上，就曾有知名的APT组织利用具有合法签名驱动程序来进行恶意驱动的加载，该组织是
**俄罗斯APT黑客组织Turla** ，它利用的合法驱动为VirtualBox，下文是对该利用过程的描述
### **4.2 PatchGuard**
网上有着包含win7、win10在内的不少开源项目，攻击者可通过集成这些项目 **绕过PatchGuard**
，往内核中植入恶意代码，实现Rootkit功能
## **5.** **从现状来看Windows Rootkit**
当我们尝试在VT上进行Hunting，会发现 **无效证书的利用非常普遍**
其实，就算你遇到一个 **有着合法签名的Rootkit** 也不算什么新鲜事了
回过头来单看2021，Windows
Rootkit攻击更多地集中在游戏行业（我想，这也是它们相对而言较快暴露的一个原因，传播量变大的同时，也遭受了更多的关注），但当Rootkit
**调转枪头对准更高价值的目标** 时，当它们的目的不再是简单地获利时，当它们的 **动静更小** ， **隐藏更具针对性时**
，我们是否做好应对准备了呢？毕竟从技术角度而言，APT组织又有什么理由拒绝Rootkit呢?
值得注意的是，当APT组织拿起Rootkit这个武器时，它们枪头要对准的将会是 **包括政府、军事在内的各种重要组织机构**
，它们的目的将不再是简单地获利，而是 **对目标地长期监控** 和 **重要情报的窃取** ，这一点从历史APT运用Rootkit进行的攻击事件中不难发现。
## **6.** **总结**
基于社工和钓鱼结合的攻击活动虽能以 **较小的成本** 拿下目标，但留下的 **明显痕迹** 会导致其生存期骤减，很容易在 **打点阶段就暴露**
，而通过其它未知渠道打点后，借助合法进程、机制完成恶意活动(如Lazarus对Get-MpPreference的利用)，或通过白加黑(如dll劫持，LOLBINS)等方式进行后门安置和权限维持等，虽然在免杀层面有着不错的效果，却
**不能很好地隐匿攻击痕迹** 。
Rootkit更多地对应在后门安置、持久化阶段，掌握这项技术的攻击者也会有着 **更高的技术水平** ，他们或许会 **更青睐于一些高级的打点技巧** ，以
**降低每个环节被捕获的可能性** ，当然， **越高价值的目标越会吸引更高成本的投入**
，我们想要从容应对也就更加困难，而事实上，是否有APT组织正利用着此技术进行攻击活动也尚未可知。
**参考链接：**
1.
2.
3.
4.
5.
6.
7.
8.
9.
10.
11.
12.
13.