• The forger computes X∗ = (T β1
2 , Z∗ = Z β1
Y β1
1 Y β2
(X∗, Y ∗, Z∗) as a forged signature on m∗.
1 Z β2
2 )H2(ID||m∗), Y ∗ =
2 , and then ﬁnally outputs σ∗ =
1 T β2
Now we show that the presented attack is correct, that is,
σ∗ correctly passes the veriﬁcation test. Note that
∗
X
∗
Y
2 )H2(ID||m∗)
1 T β2
= (T β1
= ((ur1 H1(ID)αw1 )β1 (ur2 H1(ID)αw2 )β2 )H2(ID||m∗)
= (ur1β1+r2β2 H1(ID)α(w1β1+w2β2))H2(ID||m∗)
= (ur1β1+r2β2 H1(ID)αH2(ID||m∗)−1
)H2(ID||m∗)
= u(r1β1+r2β2)H2(ID||m∗)H1(ID)α,
2 = (vr1 H1(ID)α)β1 (vr2 H1(ID)α)β2
1 Y β2
= Y β1
= vr1β1+r2β2 H1(ID)α(β1+β2)
= vr1β1+r2β2 H1(ID)α,
∗
1 Z β2
= Z β1
2 = gr1β1 gr2β2 = gr1β1+r2β2 .
Z
Let r = r1β1 + r2β2 (mod p). Then, we obtain that X∗ =
urH2(ID||m∗)H1(ID)α, Y ∗ = vrH1(ID)α, and Z∗ = gr. Be-
cause σ∗ = (X∗, Y ∗, Z∗) has a correct form deﬁned in the
IBSAS scheme, the forged signature σ∗ on the message m∗
and the identity ID is valid.
4. DISCUSSION
The result in [2, 3] is a provable security one. The issue is
that either the proof has a problem or the assumption. Mo-
tivated by this we saw that, though the reduction (not the
proof) of [2, 3] is correct, the computational problem called
M-LRSW problem on which the scheme is based, was not re-
ally hard. Actually, an atomic signature, i.e., a signature of
one user has a similar form to the M-LRSW problem. Like
the signature forgery method in Section 3.1, we can simi-
larly construct a solver to the M-LRSW problem using two
oracle-queries. The main idea of this method is to derive a
system of linear equations related to some public exponents
for messages. First we brieﬂy review the M-LRSW problem
and then present the constant-time solver to the problem.
M-LRSW problem [2, 3]. For (p, G, GT , e) output by a
bilinear group generator G, we deﬁne for all a, b ∈ Zp and
g, u, v ∈ G the associated oracle OM-LRSW
g,u,v,a,b (m), which takes
input m ∈ Zp and is deﬁned as
Oracle OM-LRSW
g,u,v,a,b (m)
If m = 0 then return ⊥
r $← Zp
Return (umrgab, vrgab, gr).
The M-LRSW -advantage of an algorithm A relative to a
bilinear group generator G is deﬁned as AdvM-LRSW
(A) def=
Pr[C = (m(cid:48), um(cid:48)xgab, vxgab, gx) : (p, G, GT , e) $← G; g, u, v $←
G; a, b $← Zp; C $← A
g,u,v,a,b(·)(g, u, v, ga, gb)], where m(cid:48) ∈
OM-LRSW
Zp has not been queried to the oracle.
G
A Constant-Time Solver of the M-LRSW problem.
A solver A selects two distinct messages m1, m2 and is-
sues them to the M-LRSW oracle, and then obtains two
outputs C1 and C2 where Ci = (mi, Xi = umiri gab, Yi =
vri gab, Zi = gri ) for i = 1, 2. Then the solver A performs
the followings:
• First A selects a message m(cid:48) ∈ Zp such that m(cid:48) (cid:54)= mi
for i = 1, 2.
• A computes (β1, β2) satisfying the following relation
(modulo p),
(cid:181)
−1
1 β1 + m
−1
2 β2 = m(cid:48)−1
m
β1 + β2 = 1
(cid:182)(cid:181)
(cid:182)
(cid:181)
=
(cid:182)
.
m(cid:48)−1
1
β1
β2
⇔
−1
−1
1 m
m
2
1
1
−1
1 and m
Because p is a prime number, there exists multiplica-
tive inverse elements m
for nonzero m1, m2
(cid:54)=
in Z∗
p. Furthermore m1 and m2 are distinct, m
−1
(mod p). Hence the unique solution (β1, β2) for
m
2
the above system of linear equations can be easily com-
puted as follows:
−1
2
−1
1
β1 = m(cid:48)−1−m
−1
1 −m
m
−1
2
−1
2
and β2 =
• The solver A computes X(cid:48) = ((X
m
1
1 Z β2
2 .
2 , and Z(cid:48) = Z β1
Y (cid:48) = Y β1
1 Y β2
−1
−m(cid:48)−1+m
1
−1
−1
1 −m
m
2
−1
1
(mod p).
)β1 (X
−1
2
m
2
)β2 )m(cid:48)
,
• Finally A returns a solution (X(cid:48), Y (cid:48), Z(cid:48)) on the mes-
sage m(cid:48).
It is obvious to show that the present method is correct, that
is, the output (X(cid:48), Y (cid:48), Z(cid:48)) on the message m(cid:48) is valid. Note
that: Let x = r1β1 + r2β2 (mod p). We have
(cid:48)
(cid:48)
(cid:48)
X
Y
Z
−1
2
−1
1
)β2 )m(cid:48)
m
1
mod p
mod p
)β1 (X
m
2
−1
1 β1+m
gab(m
= ((X
= uxm(cid:48)
= (ur1β1+r2β2 )m(cid:48)
= (vr1 gab)β1 (vr2 gab)β2 = vr1β1+r2β2 gab(β1+β2)
= vxgab,
= Z β1
1 Z β2
2 = (gr1 )β1 (gr2 )β2 = gr1β1+r2β2 = gx.
−1
2 β2)m(cid:48)
gab,
In [2, 3], the hardness of the M-LRSW problem was jus-
tiﬁed in the generic bilinear group model of [4]. The generic
group model [14] is used to show that it is not helpful to
use group representation or speciﬁc properties of a group
beyond the deﬁnition of a group in solving a computational
problem based on the group. The generic bilinear group
model was introduced in [4, 5] to make conﬁdence in new
cryptographic assumptions in bilinear groups by extending
159[8] C. Gentry and Z. Ramzan. Identity-based aggregate
signatures. In Proc. PKC 2006, volume 3958 of LNCS,
pages 257–273. Springer, 2006.
[9] S. Kent, C. Lynn, and K. Seo. Secure border gateway
protocol (secure-bgp). IEEE Journal on Selected Areas
in Communications, 18(4):582–592, 2000.
[10] A. Lysyanskaya, R. Rivest, A. Sahai, and S. Wolf.
Pseudonym systems. In Proc. Selected Areas in
Cryptography 1999, volume 1758 of LNCS, pages
184–199. Springer, 1999.
[11] A. Lysyanskya, S. Micali, L. Reyzin, and H. Shacham.
Sequential aggregate signatures from trapdoor
permutations. In Proc. Eurocrypt 2004, volume 3027
of LNCS, pages 74–90. Springer, 2004.
[12] A. Lysyanskya, R. Ostrovsky, A. Sahai, H. Shacham,
and B. Waters. Sequential aggregate signatures and
multisignatures without random oracles. In Proc.
Eurocrypt 2006, volume 4004 of LNCS, pages 465–485.
Springer, 2006.
[13] A. Shmair. Identity-based cryptosystems and
signature schemes. In Proc. CRYPTO 1984, volume
196 of LNCS, pages 47–53. Springer, 1984.
[14] V. Shoup. Lower bounds for discrete logarithms and
related problems. In Proc. Eurocrypt 1997, volume
1592 of LNCS, pages 256–266. Springer, 1997.
the generic group model to the bilinear group setting. How-
ever, the problem is intrinsically easy in the deﬁnition of a
group as previously shown.
Remark Despite of a similarity of the M-LRSW problem to
the original LRSW problem [10], the above method is not
similarly applied to the LRSW problem. This is because
a random group element is selected and it is used for all
components in output of each oracle query of the LRSW
problem.
5. CONCLUSION
We presented that the IBSAS scheme in [2, 3] is uni-
versally forgeable and the MLRSW problem on which the
security of the scheme is based, is incorrect by concretely
presenting constant-time algorithms.
To date, to the best of our knowledge, there is only known
the identity-based aggregate signature scheme in [8]. How-
ever, this scheme has a drawback that signers should agree
on a fresh nonce in advance and the use of the common nonce
should be ‘one-time’ and so a restriction in a non-interactive
environment.
It remains an interesting open problem to construct an
eﬃcient IBSAS scheme without speciﬁc constraints under a
reasonable computation assumption.
Acknowledgments This work was supported by the
Second Brain Korea 21 Project.
6. REFERENCES
[1] W. Aiello, J. Ioannidis, and P. McDaniel. Origin
authentication in interdomain routing. In 10th ACM
Conference on Computer and Communications
Security - CCS 2003, pages 165–178. ACM, 2003.
[2] A. Boldyreva, C. Gentry, A. O’Neill, and D. H. Yum.
Ordered multisignatures and identity-based sequential
aggregate signatures, with applications to secure
routing. In 14th ACM Conference on Computer and
Communications Security - CCS 2007, pages 276–285.
ACM. The full version is available at
www.cc.gatech.edu/ aboldyre/publications.html, 2007.
[3] A. Boldyreva, C. Gentry, A. O’Neill, and D. H. Yum.
New multiparty signature schemes for network routing
applications. ACM Transactions and Information and
Systems Security, 12(1):1–39, 2008.
[4] D. Boneh and X. Boyen. Short signatures without
random oracles. In Proc. Eurocrypt 2004, volume 3027
of LNCS, pages 56–73. Springer, 2004.
[5] D. Boneh, X. Boyen, and E. Goh. Hierarchical identity
based encryption with constant size ciphertext. In
Proc. Eurocrypt 2005, volume 3494 of LNCS, pages
440–456. Springer, 2005.
[6] D. Boneh, C. Gentry, B. Lynn, and M. Franklin.
Aggregate and veriﬁably encrypted signatures from
bilinear maps. In Proc. Eurocrypt 2003, volume 2656
of LNCS, pages 416–432. Springer, 2003.
[7] K. Bulter and W. Aiello. Optimizing bgp security by
exploiting path stability. In 13th ACM Conference on
Computer and Communications Security - CCS 2006,
pages 298–310. ACM, 2006.
160