User: 请解答这个和日志有关的问题Ubuntu, apache2 wildcard dns to subdomain Currently I'm hosting my own (ubuntu) server with the following services: samba, ftp and a webserver. I've bought a domain and linked the DNS A-record to my ISP's IP. This is working correctly. Now I'd like to use the DNS wildcard-record to create subdomains. I want to avoid waiting 24hrs before the DNS change completes.

Thusfar I'm only able to redirect all incoming wildcards to the same directory:

test1.domain.com redirects to /var/www

test2.domain.com redirects to /var/www

Although I'd like to get:

test1.domain.com redirects to /var/www/test1

test2.domain.com redirects to /var/www/test2

My guess would be to change the file /etc/apache2/sites-available/domain.

Any help or tips would be welcome!

Thanks,

Mark

EDIT:

This is what my /etc/apache2/sites-available/domain file looks like:

&lt;VirtualHost *:80&gt;
        ServerAdmin webmaster@domain

        DocumentRoot /var/www/webroot
        &lt;Directory /&gt;
                Options FollowSymLinks
                AllowOverride None
        &lt;/Directory&gt;
        &lt;Directory /var/www/webroot&gt;
                Options Indexes FollowSymLinks MultiViews
                AllowOverride None
                Order allow,deny
                allow from all
        &lt;/Directory&gt;

        ScriptAlias /cgi-bin/ /usr/lib/cgi-bin/
        &lt;Directory "/usr/lib/cgi-bin"&gt;
                AllowOverride None
                Options +ExecCGI -MultiViews +SymLinksIfOwnerMatch
                Order allow,deny
                Allow from all
        &lt;/Directory&gt;

        ErrorLog ${APACHE_LOG_DIR}/error.log

        # Possible values include: debug, info, notice, warn, error, crit,
        # alert, emerg.
        LogLevel warn

        CustomLog ${APACHE_LOG_DIR}/access.log combined

    Alias /doc/ "/usr/share/doc/"
    &lt;Directory "/usr/share/doc/"&gt;
        Options Indexes MultiViews FollowSymLinks
        AllowOverride None
        Order deny,allow
        Deny from all
        Allow from 127.0.0.0/255.0.0.0 ::1/128
    &lt;/Directory&gt;

&lt;/VirtualHost&gt;

Assistant: You should be able to get the desired behavior with VirtualDocumentRoot.

Within your &lt;VirtualHost&gt;, add a ServerAlias to catch all the domains you're interested in:

    ServerAlias *.example.com


...then map them to the desired directories.  Remove your DocumentRoot, and in its place, add:

    VirtualDocumentRoot /var/www/%1


You'll want to have a &lt;Directory /var/www/&gt; block allowing access, and keep in mind that this vhost should only be handling service for your dynamically configured vhosts - if you want example.com and www.example.com to be handled separately, then you'll want them to have their own &lt;VirtualHost&gt;.

Edit:

You'll want to use a different vhost to handle the "base" domains.  Building off of the current config in the comment:

NameVirtualHost *:80
&lt;VirtualHost *:80&gt;
    ServerName catchall.example.com
    ServerAlias *.example.com
    # NOTE: this config will map test1.example.com to /var/www/test1
    VirtualDocumentRoot /var/www/%1
    # If you want that to map instead to /var/www/test1.example.com, then use %0:
    # VirtualDocumentRoot /var/www/%0
    &lt;Directory /&gt;
        Options FollowSymLinks
        AllowOverride None
    &lt;/Directory&gt;
    &lt;Directory /var/www/&gt;
        Order Allow,Deny
        Allow from all
    &lt;/Directory&gt;
    ErrorLog ${APACHE_LOG_DIR}/error.log
    LogLevel warn
    CustomLog ${APACHE_LOG_DIR}/access.log combined
&lt;/VirtualHost&gt;
# This next vhost should be in a different file in sites-available to
# fit with debian-style vhosts - but make sure it's alphabetically
# after the file that contains the first vhost - we want it to load first
# so that it's default.  It can also just go in the same file.
&lt;VirtualHost *:80&gt;
    ServerName www.example.com
    ServerAlias example.com
    DocumentRoot /var/www/www.example.com
    &lt;Directory /&gt;
        Options FollowSymLinks
        AllowOverride None
    &lt;/Directory&gt;
    &lt;Directory /var/www/&gt;
        Order Allow,Deny
        Allow from all
    &lt;/Directory&gt;
    ErrorLog ${APACHE_LOG_DIR}/error.log
    LogLevel warn
    CustomLog ${APACHE_LOG_DIR}/access.log combined
&lt;/VirtualHost&gt;