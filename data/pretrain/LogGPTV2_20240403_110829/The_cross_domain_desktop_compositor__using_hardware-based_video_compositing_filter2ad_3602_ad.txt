wrong window positions, it is hoped this would be obvious
to a user, and the trusted banner would still indicate the
current context. Domains can also have very small or thinly
shaped windows where no content at all can be visible, yet
the active domain banner will still be shown.
The domains can also render their own cursors, which may
confuse a user if multiple cursors are displayed on the screen.
Hardware mitigations might include being able to uniquely
identify the CDDC rendered cursor, for example making it
ﬂash a speciﬁc colour when requested.
These covert channels and cognitive issues are not unique
to the CDDC, but need to be carefully considered in any
implementation and follow-on deployment. Mitigations in-
clude correct user training and awareness, along with careful
consideration of any policy-based mechanisms.
8.
INTEGRATED APPLICATIONS
The coarse grained window-level composition of the CDDC
provides a useful converged MLS desktop interface. Through
ﬁner grained composition we can create converged MLS-like
applications. In this scenario, sub-elements of an applica-
tion are provided by each domain, the composition that oc-
curs creates a single MLS looking application on the desk-
top. Whilst the individual elements of the application are
still single-level secure and respond at level to keyboard and
mouse interaction, the user cognitively fuses the individual
domain elements and can interact as if it were a true MLS
application, without mixing the underlying data.
A simple example is shown in Figure 11, where each do-
main renders part of an email client, when the CDDC com-
posites the regions the user is presented with an MLS-like
email client that allows a user to check email from all their
isolated domains in a “single” application.
Figure 11: Simple MLS-like email composition
The beneﬁt of this approach is that we do not need to
construct, evaluate and accredit a true MLS application.
Instead we can use untrusted email clients at-level on each
domain. We only need to trust the CDDC to correctly com-
posite the windows identiﬁed. Following the mantra of us-
able security, here we achieve a high degree of the desired
functionality of an MLS application, without the burden of
verifying the security of a true MLS application.
This approach to MLS application construction is similar
in philosophy to the Annex PRISM architecture introduced
by Owen et al.
in [14]. Here the authors replicated single-
level secure applications and then in conjunction with a
small TCB created integrated MLS-like applications. These
applications provided a consistent user interface, for exam-
ple through Microsoft Word to some underlying MLS docu-
ment. The authors termed this Multiple integrated Levels of
Security (MiLS), which also seems an apt description of the
MLS-like applications that are achieved through our ﬁne-
grained composition. One could imagine MiLS applications
being constructed for multi-level: database interfaces, logis-
tics clients, service catalogues, and web browsers.
We prototyped a MiLS RSS Reader application on the
hardware-based CDDC, where news feeds from multiple se-
curity domains are integrated. The user interface and com-
posited construction is shown in Figure 12.
Figure 12: MiLS RSS Reader
The security of the composition remains the same as the
coarse grained converged desktop. The user is alerted to the
context via the trusted banner and the keyboard and mouse
are switched appropriately between domains. The composi-
tion is just a carefully contrived geometric arrangement of
application fragments. Getting this arrangement correct is
key in providing a convincing MLS-like interface for a user.
The news feeds on the left composite together for an inte-
grated view, whilst the main story is composited over the
top of each other, with the active domain content displayed.
In these simple examples the composition keeps all ele-
ments from the untrusted domain software in the same po-
sition. A more complex example is presented in Appendix B.
8.1 Managed Information Flows
Visually, the converged desktop provides a convenient user
interface. In practice it would be advantageous to overlay
some desktop functionality across the domains, albeit in a
limited manner. The CDDC has scope and we have demon-
strated the ability to provide managed (deliberate) informa-
tion ﬂows between domains. To copy and paste information
from one domain to another, data can be sent in-band from
one domain within the video stream, and pasted to another
domain in-band in the USB stream, i.e., injecting characters
into the USB keyboard stream.
Combining this managed information ﬂow channel with
the MiLS applications can provide a very powerful user in-
terface. Further, taking advantage of existing accredited in-
formation ﬂow devices (e.g., data diodes, and security gate-
ways) we can provide increased functionality and cross do-
main integration of our MiLS applications. An extended
example is described in Appendix B.
9. FUTURE RESEARCH
Current and future research around the CDDC includes:
increasing the ﬂexibility of the CDDC hardware and soft-
ware ecosystem; increasing the usability and examining how
that may be controlled through sensible policy; and exper-
imenting with MiLS applications and managed information
ﬂows to construct more tightly integrated applications.
We are investigating a supervisory processor to control
aspects of the composition and aid with the orchestration of
managed information ﬂows and MiLS applications.
By embedding zero-client functionality into the CDDC
and using remote desktop connections, the CDDC could pro-
vide, a converged endpoint, ready for connection to extant
network infrastructure. The domain-side software already
operates over remote desktop links via thin-client endpoints.
CDDC policy could include: the shape of the cursor over a
speciﬁc domain; operation without decoration (e.g., SCADA
environments); view-only domains (e.g., Financial environ-
ments); keyboard broadcasting (e.g., lock screen), mouse
broadcasting (e.g., multi-domain application launching); and
mouse hover over non-active domain (e.g., switch mouse to
another domain and not keyboard).
The policy and hardware mechanisms surrounding the
managed information ﬂows and the implementation of the
copy and paste are ongoing research. MiLS applications with
controlled information ﬂows e.g., MiLS wikis with cross-
domain hyper-linking are also promising research areas.
Human factors analysis plays an important role in the use
and adoption of an MLS user interface technology. We have
started investigating the work ﬂow and cognitive threats as-
sociated with using the CDDC.
10. CONCLUDING REMARKS
True MLS user interfaces and even constrained implemen-
tations rely heavily on trusting large amounts of underlying
infrastructure, be it software or hardware, making it diﬃ-
cult to evaluate and accredit these solutions for use in high
assurance environments.
The CDDC provides a very small trusted computing base,
and functionality built upon the simple premise of hardware-
based composition and trustworthy keyboard and mouse
switching. The simplicity makes the system amenable to
formal analysis, allowing us to reason about security prop-
erties of the device, speciﬁcally the non-interference proper-
ties. The approach removes most of the semantic informa-
tion before the multi-level data is handled, yet still provides
most of the beneﬁts of more integrated solutions.
The CDDC does not provide perfect security, we would
contend that most useful systems will not have perfect secu-
rity. What it does provide is usable security with strong
guarantees for certain security properties and known in-
formation channels that can be mitigated by policy. The
CDDC can be conﬁgured to provide a balance between se-
curity and usability suitable for the deployed environment.
The CDDC can be built upon to provide unique converged
MLS-like applications without the need to trust the con-
struction of the applications to anywhere near the level of
traditional MLS software. The notion of MiLS applications
is powerful from both a user and a security perspective, al-
lowing us to keep data at-level and have a user operate on
that data at the correct level – adding carefully managed
information ﬂows when it really is required.
281–296. IEEE, 2011.
[15] R. Quinn and B. Kerrigan. Faciltiating user
interaction with multiple domains while preventing
cross-domain transfer of data, Mar. 13 2013. US
Patent App. 13/800,262.
[16] Raytheon Company. Raytheon Trusted Thin Client
(rtn 216411.pdf), 2014.
http://www.raytheoncyber.com.
[17] J. Rutkowska and R. Wojtczuk. Qubes OS
architecture. Invisible Things Lab Tech Rep, page 54,
2010.
[18] R. H. Sherman, G. W. Dinolt, and F. Hubbard.
Multilevel secure workstation, Dec. 24 1991. US
Patent 5,075,884.
[19] Smart Security Labs. K424F-SH Brochure.
http://www.smartavi.com/
assets/ﬁles/b K424F Brochure.pdf.
[20] A. Soﬀer and O. Vaisband. Secure KVM device
ensuring isolation of host computers, July 1 2014. US
Patent 8,769,172.
[21] G. Stoneburner. Developer-focused assurance
requirements [Evaluation Assurance Level and
Common Criteria for IT system evaluation].
Computer, 38(7):91–93, July 2005.
[22] M. Tehranipoor and F. Koushanfar. A survey of
hardware trojan taxonomy and detection. Design Test
of Computers, IEEE, 27(1):10–25, Jan 2010.
[23] J. M. Wing. A symbiotic relationship between formal
methods and security. In Computer Security,
Dependability and Assurance: From Needs to
Solutions, 1998. Proceedings, pages 26–38. IEEE, 1998.
[24] Y. Yeh. Triple-triple redundant 777 primary ﬂight
computer. In Aerospace Applications Conference,
1996. Proceedings., 1996 IEEE, volume 1, pages
293–307 vol.1, Feb 1996.
11. REFERENCES
[1] Air Force Research Laboratory AFRL/RIEB.
SecureView overview. http://www.ainfosec.com/wp-
content/uploads/2013/10/SecureView
Overview Master PA Cleared 7Oct13.pdf, October
2013.
[2] P. Barham, B. Dragovic, K. Fraser, S. Hand,
T. Harris, A. Ho, R. Neugebauer, I. Pratt, and
A. Warﬁeld. Xen and the art of virtualization. ACM
SIGOPS Operating Systems Review, 37(5):164–177,
2003.
[3] Common Criteria Sponsoring Organisations. Common
Criteria for Information Technology Security
Evaluation, Part 3: Security assurance components,
Version 3.1 Rev 4.
http://www.commoncriteriaportal.org/cc/, Sept. 2012.
[4] J. Epstein, J. McHugh, R. Pascale, H. Orman,
G. Benson, C. Martin, A. Marmor-Squires, B. Danner,
and M. Branstad. A prototype B3 trusted X Window
System. In Computer Security Applications
Conference, 1991. Proceedings., Seventh Annual, pages
44–55. IEEE, 1991.
[5] N. Feske and C. Helmuth. A Nitpicker’s guide to a
minimal-complexity secure GUI. In Computer Security
Applications Conference, 21st Annual, pages 85–94.
IEEE, 2005.
[6] General Dynamics, C4 Systems. Secure virtualisation:
Today’s reality, 2009. WP-TVE-1-0409.
[7] J. Goguen and J. Meseguer. Security policies and
security models. In Security and Privacy (SP), 1982
IEEE Symposium on, pages 11–20, Oakland,
California, USA, 1982.
[8] D. Hardin, R. Richards, and M. Wilding. High
assurance guard for security applications utilizing
authentication and authorization services for sources
of network data, Nov. 4 2014. US Patent 8,881,260.
[9] M. Kang, A. Moore, and I. Moskowitz. Design and
assurance strategy for the NRL Pump. In
High-Assurance Systems Engineering Workshop,
1997., Proceedings, pages 64–71, Aug 1997.
[10] R. Kerber and B. Globe. Cost of data breach at TJX
soars to $256 m. Boston Globe,
http://www.boston.com/business/globe/articles/2007/08
/15/cost of data breach at tjx soars to 256m, 2007.
[11] T. Murray, D. Matichuk, M. Brassil, P. Gammie, and
G. Klein. Noninterference for operating system
kernels. In Chris Hawblitzel and Dale Miller, editor,
The Second International Conference on Certiﬁed
Programs and Proofs, pages 126–142, Kyoto, Dec.
2012.
[12] T. Nipkow, L. Paulson, and M. Wenzel. Isabelle/HOL:
A Proof Assistant for Higher-Order Logic. In Lecture
Notes in Computer Science, volume 2283.
Springer-Verlag, Germany, 2002.
[13] H. Okhravi and D. Nicol. TrustGraph: Trusted
graphics subsystem for high assurance systems. In
Computer Security Applications Conference, 2009.
ACSAC ’09. Annual, pages 254–265, Dec 2009.
[14] C. Owen, D. Grove, T. Newby, A. Murray, C. North,
and M. Pope. PRISM: Program replication and
integration for seamless MILS. In Security and
Privacy (SP), 2011 IEEE Symposium on, pages
APPENDIX
A. DECORATION ALGORITHM
The decoration algorithm is important. It allows the hard-
ware, an FPGA in our prototype, to quickly determine if a
speciﬁc pixel should be decorated with a border, left undeco-
rated, or have no content at all. This needs to be performed
in real-time for each pixel location and be based solely on the
windowing information provided in-band from each domain.
window region, w = (x, y, w, h)
input pixel, p = (x1, y1)
list of windows, wl = [w1, w2, .., wn]
where: wk is in front of wk−1
apply function extend to create a decoration region:
list of decoration regions, dl = [d1, d2, .., dn]
apply function include(p, w) returning 0 or 1
to check if a pixel is within the window or decoration:
in windowsl = [b1, b2, .., bn]
in decorationsl = [b1, b2, .., bn]
the output pixel po is then calculated as:
if in decorationsl = in windowsl = 0 then
pdecorated = no content
else if in decorationsl > in windowsl then
pdecorated = decoration
else
pdecorated = window content
end if
B. EXTENDED MILS APPLICATION
Incorporating a frame-buﬀer in the CDDC would allow in-
put windows to be rearranged, allowing for the construction
of more intertwined, and cognitively integrated applications.
We have prototyped a ﬁne-grained composition email client
on our software emulator. The emulator was used as it al-
lowed for quick implementations of the buﬀering and rear-
ranging functions. A screen shot is shown in Figure 13. In
this instance the window decoration has been replaced with
a decoration colour blob next to the inbox items.
multiple applications across diﬀerent domains.
The notion of ﬁne-grained MiLS composition is not limited
to the CDDC and could be usefully applied to existing secure
user interfaces, for examples Qubes OS [17], or Nitpicker [5].
Introducing managed information ﬂows between domains
can increase the integration of these applications. We pro-
totyped replying to and forwarding emails on diﬀerent do-
mains. This functionality was implemented through CDDC
rendered MLS buttons (Figure 14) and external data diodes
(Figure 15), allowing for example, an email on DOMAIN 1 to
be replied to on DOMAIN 2 by ﬁrst sending the email from
DOMAIN 1 to DOMAIN 2 over the data diode, and then
displaying the email on DOMAIN 2. Having all user inter-
action occur within a single MiLS composited application,
provides the integrated feel of a true MLS email application.
Figure 14: MiLS email composition - Reply buttons
Figure 13: More complex MiLS email composition
Using the CDDC to help orchestrate the MiLS applica-
tions can increase their complexity. Examples include: key-
board broadcasting that allows a user to search across all do-
mains at once, or mouse broadcasting to concurrently launch
Figure 15: MiLS email composition - external data
diodes
Untrusted software is relied upon to send, receive and
marshal the data required on each separate security domain.
If this software acts maliciously we are presented with the
same cognitive threats discussed in Section 7, as well as any
at-level attacks the software could normally perform against
a single-level secure system.