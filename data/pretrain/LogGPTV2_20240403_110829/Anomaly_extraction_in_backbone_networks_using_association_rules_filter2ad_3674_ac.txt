we extracted the ﬂows matching the meta-data provided by
our detectors and analyzed the time series and distribution
of several ﬂow features, i.e., srcIP, dstIP, srcPort, dstPort,
#packets, #bytes, interarrival, and ﬂow duration.
In all
the 31 ﬂagged intervals we found at least one anomalous
event. The identiﬁed anomalies were then classiﬁed accord-
ing to the criteria given in [13]. Our trace includes ten scans
originating from SWITCH-internal hosts, nine distributed
DoS attacks, ﬁve scan replies, four unusual network exper-
iments, two DoS attacks, and one ﬂash crowd event. For
each anomalous interval we computed the set of candidate
anomalous ﬂows ∪Fj on which we run our modiﬁed Apriori
algorithm to ﬁnd frequent item-sets. Finally, we manually
analyzed the found frequent item-sets and identiﬁed true
positives, which matched the identiﬁed anomalous events,
and false positives, which matched benign traﬃc.
3.2 Decrease in Classiﬁcation Cost
Using association rules we obtain a summarized view that
is based on frequent item-sets instead of ﬂows. As a con-
sequence, the problem of manually classifying ﬂows can be
reduced to the problem of classifying item-sets. If we ﬁnd
the item-sets that match the anomalous ﬂows, the anomaly
extraction problem is solved.
To quantify this decrease in classiﬁcation cost, we assume
that the classiﬁcation cost is a linear function of the num-
ber of items that need to be classiﬁed. Accordingly, we
deﬁne the reduction r in classiﬁcation cost of an anomaly
as r = |F|/|I| where |F| denotes the number of ﬂows in the
ﬂagged interval and |I| the number of item-sets in the out-
put of Apriori. The number of ﬂows in 15-minute intervals
ranges between 700,000 and 2.6 million ﬂows. Since the car-
dinality of I depends on the minimum support parameter,
we plot in Figure 4 the average reduction in classiﬁcation
cost over all anomalous intervals versus the minimum sup-
port parameter. The maximum value that we allow is 10,000
so that in all cases the set I contains the anomalous ﬂows.
The average cost reduction increases with the minimum sup-
port and ranges between 520, 000 and 800, 000. The average
cost reduction saturates for larger minimum support param-
eters as the minimum number of item-sets is reached. This
result illustrates that association rule mining can greatly
simplify root-cause analysis and attack mitigation.
3.3 Accuracy of Apriori
The output of Apriori is a mix of item-sets matching
anomalous ﬂows (true positives) and non-anomalous ﬂows
(false positives). As long as the minimum support param-
eter is set to a value that is lower than the support of the
anomalous ﬂow set, Apriori will not produce any false neg-
atives. Hence, assuming a rather small minimum support,
e.g., at most 10,000 ﬂows, we evaluate the number of false
positive item-sets generated by Apriori.
In Figure 5 we plot the number of false positive (FP) item-
sets generated by Apriori versus the minimum support pa-
rameter. For 21 anomalies (70%) we obtained no FP item-
sets at all. The number of FP item-sets for the remaining 10
anomalies is plotted in the ﬁgure together with the average
number of FP item-set over all 31 anomalies (marked with
squares). The number of FP item-sets decreases with the
minimum support since less FP item-sets satisfy the mini-
mum support condition. Figure 5 shows that when restrict-
ing the input data set to ﬂows that match the meta-data
provided by the histogram-based detectors, on average be-
tween 2 and 8.5 FP item-sets are generated for minimum
support values between 3,000 and 10,000 ﬂows, respectively.
The top three lines in the ﬁgure correspond to anomalies
that have many more FP item-sets than the other anoma-
lies. This is because these anomalies had an entry for single-
packet ﬂows in the meta-data. We found that the observed
FP item-sets are often either due to common ports (e.g., 80,
443, 25), short ﬂow lengths, or SWITCH-internal hosts with
a lot of traﬃc (e.g., web servers/proxies/caches, mail hubs,
or Planetlab nodes). Consequently, most of the FP item-sets
can be sorted out rather easily by a network administrator.
3.4 Comparison with Intersection
Generating a ﬁlter rule based on the intersection of meta-
data provided by diﬀerent detectors is an alternative ap-
proach to identify anomalous ﬂows [19].
In this work, we
ﬁrst use the intersection of the feature values provided by
diﬀerent clones, then take the union of the ﬂow sets provided
by diﬀerent histogram detectors, and ﬁnally apply associa-
tion rule mining to extract and summarize anomalous ﬂows.
We compared the use of the intersection as an alternative to
the union operator in the second step of our methodology.
For four out of the 31 anomalies (13%) the two approaches
found the same anomalous item-sets. In two of these cases,
the intersection performed slightly better since the union
operator generated additional FP item-sets. However, for
the majority of the cases, i.e., for 27 out of 31 anomalies
32 
average of 31 anomalies
60
50
40
30
20
10
t
n
u
o
c
t
e
s
m
e
t
i
P
F
0
3000
4000
5000
6000
7000
minimum support
8000
9000
10000
Figure 5: Number of false positive (FP) item-sets
generated by Apriori for diﬀerent minimum support
parameter values. For 21 anomalies (70%) we obtain
no FP item-sets at all. The FP item-set count for
the remaining 10 anomalies is plotted in the Figure
together with the average FP item-set count over all
31 anomalies (marked with squares).
(87%), the union operator followed by rule mining had su-
perior results.
In 25 cases our approach generated much
more speciﬁc ﬁlter rules than the intersection operator lead-
ing to substantially fewer FP item-sets. In two cases, the
intersection operator missed the anomaly completely as the
meta-data contained FP entries.
4. RELATED WORK
Substantial work has focused on dimensionality reduction
for anomaly detection in backbone networks [2, 20, 22, 14, 9,
4, 11]. These papers investigate techniques and appropriate
metrics for detecting traﬃc anomalies, but do not focus on
the anomaly extraction problem we address in this paper.
Closer to our work, Dewaele et al. [7] use sketches to create
multiple random projections of a traﬃc trace, then model
the marginals of the sub-traces using Gamma laws and iden-
tify deviations in the parameters of the models as anomalies.
In addition, their method ﬁnds anomalous source or desti-
nation IP addresses by taking the intersection of the ad-
dresses hashing into anomalous sub-traces. DoWitcher [19]
is a scalable system for worm detection and containment in
backbone networks. Part of the system automatically con-
structs a ﬂow-ﬁlter mask from the intersection of suspicious
attributes provided by diﬀerent detectors. These two papers
look into the anomaly extraction problem as part of build-
ing a multi-purpose system. Our work focuses exclusively on
anomaly extraction, it provides a more general approach us-
ing association rules, and has the core technical diﬀerence of
working on the union set of ﬂows (shown in Figure 2) instead
of the intersection. Li et al. [15] also use sketches to ran-
domly aggregate ﬂows as an alternative to origin-destination
(OD) aggregation. They show that random aggregation can
detect more anomalies than OD aggregation in the PCA
subspace anomaly detection method [14]. In addition, the
authors argue that their method can be used for anomaly
extraction, however, the paper primarily focuses on anomaly
detection.
Association rules have been successfully applied to diﬀer-
ent problems in networking. Chandola and Kumar [5] use
clustering and heuristics to ﬁnd a minimal set of frequent
item-sets that summarizes a large set of ﬂow records. Ma-
honey and Chan [16] use association rule mining to ﬁnd rare
events that are suspected to represent anomalies in packet
payload data. They evaluate their method on the 1999
DARPA/Lincoln Laboratory traces [17]. Their approach
targets edge networks where mining rare events is possible.
In massive backbone data, however, this approach is less
promising. Another application of association rule mining
in edge networks is eXpose [10], which learns ﬁne-grained
communication rules by exploiting the temporal correlation
between ﬂows within very short time windows.
Hierarchical heavy-hitter detection methods [8, 23, 6]
group traﬃc into hierarchical clusters of high resource con-
sumption. For example, they have been used to identify
clusters of Web servers in hosting farms. Our focus is dif-
ferent as we are interested in extracting anomalous traﬃc
ﬂows.
5. CONCLUSION
In this paper, we have studied the problem of anomaly
extraction that is of uttermost importance to several ap-
plications such as root-cause analysis and detection system
testing. We have presented a histogram-based detector that
provides ﬁne-grained meta-data for ﬁltering suspect ﬂows.
Further, we have introduced a method for extracting anoma-
lous ﬂows that uses association rules to describe ﬂows that
have similar characteristics across several features.
We used a rich Netﬂow dataset captured in a backbone
network to validate the proposed techniques. Our evaluation
results show that the classiﬁcation cost, in terms of items
that need to be classiﬁed, can be reduced by several orders
of magnitude using association rules. Further, we evaluated
the accuracy of Apriori for several veriﬁed anomalies and
found that it generates on average between 2 and 8.5 false
positive item-sets, which can be trivially identiﬁed by an
administrator. Further analysis and evaluation results can
be found in the companion technical report [3].
6. ACKNOWLEDGMENTS
The research leading to these results has received funding
from the European Community’s Seventh Framework Pro-
gram (FP7/2007-2013) under grant agreement no. 216585
(INTERSECTION Project) and no.
223936 (ECODE
Project).
7. REFERENCES
[1] R. Agrawal and R. Srikant. Fast algorithms for mining
association rules in large databases. In VLDB’94,
Proceedings of 20th International Conference on Very
Large Data Bases, September 12-15, 1994, Santiago de
Chile, Chile, pages 487–499. Morgan Kaufmann, 1994.
[2] P. Barford, J. Kline, D. Plonka, and A. Ron. A signal
analysis of network traﬃc anomalies. In IMW ’02:
Proceedings of the 2nd ACM SIGCOMM Workshop on
Internet measurment, pages 71–82, New York, NY,
USA, 2002. ACM Press.
[3] D. Brauckhoﬀ, X. Dimitropoulos, A. Wagner, and
K. Salamatian. Anomaly extraction in backbone
networks using association rules. TIK-Report 309,
ETH Zurich, September 2009.
33[4] D. Brauckhoﬀ, M. May, and K. Salamatian. Applying
PCA for Traﬃc Anomaly Detection: Problems and
Solutions. In IEEE INFOCOM Mini Conference, 2009.
[5] V. Chandola and V. Kumar. Summarization -
compressing data into an informative representation.
Knowl. Inf. Syst., 12:355–378, 2007.
[6] G. Cormode, F. Korn, S. Muthukrishnan, and
D. Srivastava. Finding hierarchical heavy hitters in
streaming data. ACM Trans. Knowl. Discov. Data,
1(4):1–48, 2008.
In SIGCOMM ’05: Proceedings of the 2005 conference
on Applications, technologies, architectures, and
protocols for computer communications, pages
217–228, New York, NY, USA, 2005. ACM.
[15] X. Li, F. Bian, M. Crovella, C. Diot, R. Govindan,
G. Iannaccone, and A. Lakhina. Detection and
identiﬁcation of network anomalies using sketch
subspaces. In IMC ’06: Proceedings of the 6th ACM
SIGCOMM conference on Internet measurement,
pages 147–152, New York, NY, USA, 2006. ACM.
[7] G. Dewaele, K. Fukuda, P. Borgnat, P. Abry, and
[16] M. V. Mahoney and P. K. Chan. Learning rules for
K. Cho. Extracting hidden anomalies using sketch and
non gaussian multiresolution statistical detection
procedures. In LSAD ’07: Proceedings of the 2007
workshop on Large scale attack defense, pages
145–152, New York, NY, USA, 2007. ACM Press.
[8] C. Estan, S. Savage, and G. Varghese. Automatically
inferring patterns of resource consumption in network
traﬃc. In SIGCOMM ’03: Proceedings of the 2003
conference on Applications, technologies, architectures,
and protocols for computer communications, pages
137–148, New York, NY, USA, 2003. ACM Press.
[9] Y. Gu, A. McCallum, and D. Towsley. Detecting
anomalies in network traﬃc using maximum entropy
estimation. In IMC ’05: Proceedings of the 5th ACM
SIGCOMM conference on Internet Measurement,
pages 32–32, Berkeley, CA, USA, 2005. USENIX
Association.
[10] S. Kandula, R. Chandra, and D. Katabi. What’s going
on?: learning communication rules in edge networks.
In SIGCOMM, pages 87–98, 2008.
[11] A. Kind, M. P. Stoecklin, and X. Dimitropoulos.
Histogram-based traﬃc anomaly detection. IEEE
Transactions on Network and Service Management, to
appear, 2009.
[12] B. Krishnamurthy, S. Sen, Y. Zhang, and Y. Chen.
Sketch-based change detection: methods, evaluation,
and applications. In IMC ’03: Proceedings of the 3rd
ACM SIGCOMM conference on Internet
measurement, pages 234–247, New York, NY, USA,
2003. ACM Press.
[13] A. Lakhina, M. Crovella, and C. Diot. Diagnosing
network-wide traﬃc anomalies. In SIGCOMM ’04:
Proceedings of the 2004 conference on Applications,
technologies, architectures, and protocols for computer
communications, pages 219–230, New York, NY, USA,
2004. ACM Press.
[14] A. Lakhina, M. Crovella, and C. Diot. Mining
anomalies using traﬃc feature distributions.
anomaly detection of hostile network traﬃc. In ICDM
’03: Proceedings of the Third IEEE International
Conference on Data Mining, pages 601–604,
Washington, DC, USA, 2003. IEEE Computer Society.
[17] J. McHugh. Testing intrusion detection systems: a
critique of the 1998 and 1999 darpa intrusion detection
system evaluations as performed by lincoln laboratory.
ACM Trans. Inf. Syst. Secur., 3:262–294, 2000.
[18] K. H. Ramah, K. Salamatian, and F. Kamoun. Scan
surveillance in internet networks. In Networking, pages
614–625, 2009.
[19] S. Ranjan, S. Shah, A. Nucci, M. M. Munaf`o, R. L.
Cruz, and S. M. Muthukrishnan. Dowitcher: Eﬀective
worm detection and containment in the internet core.
In INFOCOM, pages 2541–2545, 2007.
[20] A. Soule, K. Salamatian, and N. Taft. Combining
ﬁltering and statistical methods for anomaly
detection. In IMC’05: Proceedings of the 5th
Conference on Internet Measurement 2005, Berkeley,
California, USA, October 19-21, 2005, pages 331–344.
USENIX Association, 2005.
[21] M. P. Stoecklin, J.-Y. L. Boudec, and A. Kind. A
two-layered anomaly detection technique based on
multi-modal ﬂow behavior models. In PAM:
Proceedings of 9th International Conference on
Passive and Active Measurement, Lecture Notes in
Computer Science, pages 212–221. Springer, 2008.
[22] A. Wagner and B. Plattner. Entropy based worm and
anomaly detection in fast ip networks. In WETICE
’05: Proceedings of the 14th IEEE International
Workshops on Enabling Technologies: Infrastructure
for Collaborative Enterprise, pages 172–177,
Washington, DC, USA, 2005. IEEE Computer Society.
[23] Y. Zhang, S. Singh, S. Sen, N. Duﬃeld, and C. Lund.
Online identiﬁcation of hierarchical heavy hitters:
algorithms, evaluation, and applications. In IMC ’04:
Proceedings of the 4th ACM SIGCOMM conference on
Internet measurement, pages 101–114, New York, NY,
USA, 2004. ACM.
34