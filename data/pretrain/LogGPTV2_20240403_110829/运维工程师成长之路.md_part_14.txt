/usr/share/puppet-dashboard。
产环境中，每次运行一个rake命令都需要使用合适的环境值来设置RAILS_ENV环境变量。
然后看看是否导入成功，如图5-28所示。
在运行前最好修改Dashboard的显示时间，否则显示的时间不是北京时间（默认时区
接着来说说Dashboard的启动。WEBrick是有助于快速使用Dashboard的，不过它的
执行这句命令的意思是，环境变量RAILS_ENV=production会告诉RubyonRails在生
#config.time_zone='UTc'
config.time_zone='Beijing'
启动并运行Dashboard（WEBrick方式）
mysgl>
You can turn off this feature
mysal
Tables_in_dashboard
rows in set (0.00 sec)
bu
eports
group_class_memberships
use dashboa
图5-28
events
emberships
into
ard;
5.6Puppet控制台
105
---
## Page 116
106
间的同步后，
果不开启这个服务就会如图5-31所示，后台的日志一直不会处理。
不足了，所以不建议使用它。你可以执行以下命令来启动Dashboard。
企业互联网自动化之Puppet
第5章
服务器启动后就可以通过http://dashboard:3000来访问，如图5-32所示。经过一段时
开启后台处理报告进程，运行“Delayed Job Workers”，使其在后台处理报告日志。如
要注意的是，master和agent的配置要根据图5-29和图5-30进行。
nohup sudo -u puppet-dashboard rake RAILs_ENV=production jobs:work&
cd /usr/share/puppet-dashboard
，dashboard还可以显示每个客户端的同步状态、时间等，如图5-33所示。
ag
master]
[main]
report
au
terl
cun
loqdir
sldir
tosign = true
ogdir
ndir
C
工
erval
ent
/var/log/puppet
Svardir/ssl
/var/1og/puppet
true
head
/etc/puppet/autosign.conf
http:/
360
图5-30
图5-29
一
:3000/reports/upload
---
## Page 117
Nodes
Allsystoms go
puppet dashboard
0Unchanged
0Changed
0Panding
0Failed
0Unresponsive
ackground Tasks
0AII
0Unreported
Daily run status
Nodes
o Changed
Nodes
0Unresponsive
39pending tasks
Background Tasks
OAlL
0Unreported
oUnchanged
0 Pending
0Failed
Classs
图5-33
图
图5-31
15-32
tst30
5.6
Puppet控制台
107
---
## Page 118
108
很紧密，至少对社区版本来讲是这样。MCollective有单独的安装包和独立的配置文件。另
的功能。
MCollective现在是可以在同一个框架下工作了，同时也可以提供完成配置管理和命令编排
ActiveMQ）通过pub-sub 总线来传递消息，可以并行通信，比用SSH快得多。Puppet和
R.IL.Pienaar在PuppetLabs 重视之前独立开发完成。MCollective使用message broker（如
http://blog.chinaunix.net/uid-10915175-id-4562489.html
供实时信息。
如和引导工具、PXE启动服务器、DHCP服务器及服务器开通工具进行集成。
和Dashboard不同的地方在于，Foreman更多的关注服务开通和管理数据中心的能力，例
报告等功能，和PuppetDahboard一样，Foreman也是一个RubyonRails程序。Foreman
5.6.4
Centos5.X系统上执行经常并不成功（Centos6.X系统没问题）。
处理日常的应用。如果你有什么其他问题，咱们可以再一起讨论。
企业互联网自动化之Puppet
第5章
MCollective的劣势主要体现在两个方面。第一，MCollective和Puppet集成得并不是
还有一个要向你介绍的是MCollective。它是Puppet 的命令编排解决方案，
Foreman能够通过Facter组件显示系统的目录信息，并且可以从Puppet主机报表中提
另外还有一点需要注意，Puppet在服务器端是可以以推的方式去同步客户端，但是在
这里不再介绍它的安装步骤，如果你有需要的话，可以参考我博客中的这篇文章
Foreman也可以实现配置版本的回溯。
Foreman能够管理大规模（当然也包括小规模）的、企业级的网络，可能有很多域、
Foreman能够准备用户管理新机器的所有工作。
Foreman可以与Puppet集成使用，并且它通常作为Puppet的前端接入.。
Foreman是一个集成的数据中心生命周期管理工具，提供了服务开通、配置管理以及
Puppet 的控制台除了Dashboard，还有一个Foreman。
Puppet 暂时先介绍到这里，这些都只是比较初级的用法，
Foreman简介
，目的是让你能快速地掌握及
---
## Page 119
Puppet进程在运行。如果有，则关闭 Puppet，之后再运行即可。
parseYAML datafornodeXXX。
conf里的 search localdomain这行是否改成现有网络中使用的域名。
间后即可解决问题。
5.7
这些用得比较少，所以这里就不介绍了。
不过想要立即使用的话，可能困难要比想象得大。
（https://github.com/Puppetlabs/mcollective-plugins），用Ruby编写插件虽然说不是很复杂，
困难。
常繁琐。最后，你还不得不自己解决生产环境中通信渠道的安全问题，光这方面就有点
外还需要安装配置broker（如ActiveMQ），来与MCollective一起工作。虽然不难，却非
Puppet 还有一些扩展工具，比如PuppetPuppetdB、PuppetPuppetdoc 和 Hiera 等。只是
A：出现这种情况，有两种解决方案。一种是通过ps -axfgrep Puppet命令查看是否有
Q:报错Could notretreve catalog from remote server:Error400 on SERVER:Could not
Q:连接master时报错：dnsdomainname:Unknown host 或Could not request certificate：
相对来讲MCollective缺少一些自带的功能。有很多现成的插件可以下载安装
Q:报错 Run of Puppet configuration client already in progress
A：在目录/var/lib/Puppet/yaml/node中删除相应的文件XXX。
A：如果确定/etc/hosts和/etc/sysconfig/network都没有问题，那么看一下文件/etc/resolv.
A：客户端和服务器端时间不同步，SSL连接依赖于主机上的时间是否正确，同步时
Q:报错Couldnot retrieve catalogfromremote server:certificateverifyfailed。
A：这需要检查一下主机名的设置，以及是否添加到 DNS 或 hosts文件中。
FAQ
FAQ
109
---
## Page 120
110
现自动化操作了。
块，感觉不是很难。看来目前线上的一些应用可以通过 Puppet 节省很多的人力成本来实
5.8
/var/Puppet/state/PuppetPuppetdlock删除即可，出现这种情况比较常见。
企业互联网自动化之Puppet
第5章
刘老师在邮件里提到还会介绍Salt方面的知识，小鑫对此充满了期待。
小鑫根据刘老师博客上的安装方法正常安装Puppet 后，就迫不及待地编写了几个模
第二种是没有进程，那有可能是PuppetPuppetdlock 存在，可将其删除。使用rm -rf
小鑫的运维工作向自动化迈出了重要的一步。
小结
---
## Page 121
的公司的服务器环境要求。
相关的例子，发现它更像是Ruby脚本，都是从前到后按顺序执行，因此它不适合小鑫
样也是用Ruby语言写的，而且Chef配置起来比Puppet还要麻烦。小鑫找了一些与Chef
6.1.1.
的自动化开源软件，谢谢。
适合集成到运维平台，所以麻烦刘老师给我介绍一个相对来说比较轻量的，便于二次开发
很多模块，感觉特别实用。为此很感谢您的帮助。
刘老师：
6.1月
会越来越慢？
果二次开发的话会很麻烦。所以小鑫想知道如果服务器和模块再增加的话，运行速度会不
务器运行时比较消耗资源，也比较烦琐。小鑫主要是对Puppet的Ruby知道得比较少，如
小鑫发完邮件后也找了一些类似于 Puppet 的工具，如 Chef、Salt。Chef和 Puppet一
但随着服务器和模块的增加，我明显地感觉到mmaster慢了很多。因为Ruby语言不
感谢您给我介绍的Puppet 及它的一些使用方法和实例，我在公司的服务器上部署了
您好！
自从小鑫根据刘老师的建议使用Puppet编写了几十个需要的模块后，发现Puppet服
新秀SaltStack
常用自动化工具简介
企业互联网自动化之
SaltStack
第
个
---
## Page 122
112
源才可以使用（我使用的是Centos6.4以上版本的系统）。
常用的Salt。
择。当然，如果你对其进行二次开发等操作，也会适合大量服务器的。这里先和你讲一下
即可。
用的是Salt。
需求，暂时不需要自定义变量等。如果你想进行二次开发的话，可能会很麻烦。我目前使
使用变量可能还需要查看相关资料。从目前来看，Puppet中自带的变量等能满足你的工作
小鑫：
6.1.2
也包含了非常丰富的模块。
又容易，同时也便于动态生成。此外，SaltStack在远程执行命令时的速度非常快，同时它
Language，DSL）来编写配置，而是使用YAML 作为配置文件格式，从而编写起来既简单
比，SaltStack没有那么笨重，较为轻量。它不像Puppet可用领域专用语言（Domain Specific
企业互联网自动化之SaltStack
第6章
Salt的安装比较简单，直接采用Yum即可。不过要确认计算机中安装了版本6的epel
至于Chef、Salt等开源自动化工具之间的区别我就不多说了，你可以上网搜索
上次向你介绍了 Puppet 的一些常用用法，相信你也能编写出不少模块了。如果需要
小鑫看了这几个工具的介绍后，觉得SaltStack非常适合公司目前的情况。
SaltsStack是继Puppet、Chef 之后开发出来的配置管理及远程执行工具。与 Puppet 相
启动命令为/etc/init.d/salt-minionrestart；
客户端安装命令为 yum install salt-minion-y；
服务器安装命令为yum install salt-master-y；
epel 源安装命令为 rpm-ivh epel-release-6-8.noarch.rpm;
这里也讲一下，如果你们公司服务器和模块数量不多，使用Ansible也是个不错的选
你好！
启动命令为/etc/init.d/salt-masterrestart；
SaltStack安装配置
---
## Page 123
其格式为master:X.X.X.X。
IO系统，
能很好地承担这个大的架构。一般不推荐关闭该选项，开启该选项将使master获得更快的
延迟应答的时间比较长，可以适度地提高该值。
网IP的话可能不太安全，所以要绑定内网的IP。
置文件相关的说明。
你可以登录我的博客http://blog.chinaunix.net/uid-10915175-id-4352504.html查找master配
--versions-report查看 Salt 的版本以及相关依赖软件的安装版本，如图6-1所示。
Salt客户端的配置是非常简单的，只要在文件/etc/salt/minion里添加master的IP即可。
job_cache：用来设置master维护的工作缓存。当你的客户端很多时（百台以上），它
interface：显示服务器端的IP，也就是master的IP。默认情况下是0.0.0.0，如果有外
SaltStack安装好之后，master端要编辑/etc/salt路径下的master文件，如图6-2所示。
建议在Salt官网中下载最新的源码包来进行安装。安装后可以用命令salt-minion
worker_threads：用来表示接收minion的线程数。如果你那边有很多minion，并且minion
auto_accept：True表示自动接受客户端的申请。
日志文件为/var/log/salt/master（minion）。
，默认目录为/var/cache/salt。
Python:
PyZMQ:
ZMQ：
Salt:
3.2.4
2.2.0.1
te
2.0.1
Not
0.20.2
2.6.6 (r266:84292,Feb 22 2013,00:00:18)
2014
iche
Installed
True
ads:
192.168.49.72
图6-2
图6-1
it master
report
新秀SaltStack
113
---
## Page 124
114
如图6-5所示。
时候服务器更改主机名需要这一步操作）。
saltkey-a这样的参数了。
接收等信息，如图6-3所示。因为前面master已经设置了自动接收，所以不再需要设置
/etc/salt/pki/minion/minion_master.pub，然后master就能和minion通信了。
这样在master的/etc/sal/pki/master/minions下应该会存放以minion id命名的public key。
（publickey），并产生一个ID值，minion会装公钥发送给master，直到接收为止。
成一个密钥对，即在/etc/salt/pki/minion/下自动生成minion.pem（privatekey）和minion.pub
那么这个ID值将覆盖/etc/salt/minion_id中记录的ID数值。
件中。该文件可以手动更改，重启服务器后不会被重新覆盖。
上方法都失败，则使用 localhost 作为备用。最终获取的ID将记录在/etc/salt/minion_id文
%WINDIR%\system32\driversletc\hosts中定义的值获取。
里获取，这仅限于非Windows系统。
是通过Python函数socket.getfqdnO获取，如果获取不到就会在文件/etc/hostmame定义的值
很重要，下面简单地和你说一下它的生成过程。
不然的话就需要更改minion id文件了（除非在minion文件中指定好ID）。minion_id文件
企业互联网自动化之SaltStack
第6章
在minion连接master后，你可以在 master上使用 salt *（或者“*”）test.ping来测试，
如果你需要删除相应的主机，使用 salt-key-d keyname 命令即可，如图6-4所示（有
客户端在启动后会自动到master注册，你可以通过salt-key-L去查看已经接收、等待
最后当master认证完后，会将自身的公钥发送给minion，并存储为
master在接收到minion的publickey后，通过 salt-key命令就会接受minion的public key。
就像我刚才说的那样，如果minion端主配置文件/etc/salt/minion中启用了id:xxxx，
minion在默认的情况下会按照一定的顺序找到一个不是localhost的值作为ID。首先
接下来我简单介绍一下minion的认证过程吧。当minion端第一次启动服务器后会生
如果以上方式能够获取一个ID，并且不是localhost，就会使用获取到的ID。如果以
这里要强调一下，在安装Salt前一定要设置好服务器的完整主机名，也就是FQDN，
Windows系统是从文件
---
## Page 125
test.ping后面加“-v”，
机显示的状态不对。还有的时候在分发模块的时候，有些服务器没有响应。这个时候你在
minion端的状态，如图6-6所示。
·Salt*.example.org'test.ping：默认的规则是使用glob匹配minion id。
再和你说一下远程执行命令的另外几种形式。
注意，在安装SaltStack的时候一定要确认ZeroMQ为3.0及以上的版本。
因为Salt目前还不是很成熟，所以如果服务器比较多使用上面几条命令时会有一些主
通过 salt-run manage.up、salt-run manage.status和 salt-run manage.down命令来查看
一般情况下再去执行其他的命令就可以了。
coot@bi
roceed? [N/y]
root@bj
te
~]#
~]# salt\test.ping
图6-6
图6-5
图6-4
图6-3
~]#
salt-run manage.up
salt-key
-L
6.1
新秀SaltStack
115
---
## Page 126