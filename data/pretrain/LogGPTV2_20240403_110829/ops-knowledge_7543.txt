User: We have an existing project using Eventlet module.
There is a server handling client request using green threads.
All the requests are handled by a single user 'User A'
I now need to change this to do a setfsuid/setfsgid on the threads so that the underlying files are all created with the ownership of the requesting user only.
I understand that I need setid Linux capability to make the setfsid calls.
But will setfsid calls work with green threads like they do with the native threads ?
By reading through various texts over the net regarding 'green threads', I couldn't gather much :(
Assistant: The kernel is ignorant to green threads. If a process has a uid and gid, it is used by all green threads running as part of this process. 
At a first glance, what you are seeking to do is equivalent to having a privileged process do a setuid prior to opening/creating a file, than doing a second setuid to open/create a second file etc. all to ensure that each file has the right ownership. I never tried such a scheme, but it sounds very very wrong. It is also extremely bad security wise. You are running at high privileges and may find yourself processing user X's data while having user Y's uid.  
At a second glance, green threads are cooperative, meaning that under the hoods, some of the operations you do will yield. Following such yield, you may change to a different green thread that will change the uid again... 
Bottom line, forget about changing the uid and gid of the green thread  - there is no such thing. Create the file with whatever ID you have and chown to the right id after. Find a way to do that without running as root for security reasons.