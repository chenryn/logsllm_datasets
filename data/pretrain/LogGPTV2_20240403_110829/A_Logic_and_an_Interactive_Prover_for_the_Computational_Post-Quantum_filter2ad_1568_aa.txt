title:A Logic and an Interactive Prover for the Computational Post-Quantum
Security of Protocols
author:Cas Cremers and
Caroline Fontaine and
Charlie Jacomme
2022 IEEE Symposium on Security and Privacy (SP)
A Logic and an Interactive Prover for the
Computational Post-Quantum Security of Protocols
Cas Cremers∗, Caroline Fontaine†, Charlie Jacomme∗
∗CISPA Helmholtz Center for Information Security, Germany
† Université Paris-Saclay, CNRS, ENS Paris-Saclay, Laboratoire Méthodes Formelles, 91190, Gif-sur-Yvette, France
0
0
8
3
3
8
9
.
2
2
0
2
.
4
1
2
6
4
P
S
/
9
0
1
1
.
0
1
:
I
O
D
|
E
E
E
I
2
2
0
2
©
0
0
.
1
3
$
/
2
2
/
9
-
6
1
3
1
-
4
5
6
6
-
1
-
8
7
9
|
)
P
S
(
y
c
a
v
i
r
P
d
n
a
y
t
i
r
u
c
e
S
n
o
m
u
i
s
o
p
m
y
S
E
E
E
I
2
2
0
2
Abstract—We provide the ﬁrst mechanized post-quantum sound
security protocol proofs. We achieve this by developing PQ-BC,
a computational ﬁrst-order logic that is sound with respect to
quantum attackers, and corresponding mechanization support in
the form of the PQ-SQUIRREL prover.
Our work builds on the classical BC logic [7] and its
mechanization in the SQUIRREL [5] prover. Our development
of PQ-BC requires making the BC logic sound for a single
interactive quantum attacker. We implement the PQ-SQUIRREL
prover by modifying SQUIRREL, relying on the soundness results
of PQ-BC and enforcing a set of syntactic conditions; additionally,
we provide new tactics for the logic that extend the tool’s scope.
Using PQ-SQUIRREL, we perform several case studies, thereby
giving the ﬁrst mechanical proofs of their computational post-
quantum security. These include two generic constructions of
KEM based key exchange, two sub-protocols from IKEv1 and
IKEv2, and a proposed post-quantum variant of Signal’s X3DH
protocol. Additionally, we use PQ-SQUIRREL to prove that several
classical SQUIRREL case studies are already post-quantum sound.
Index Terms—Security Protocols, Post Quantum, Formal
Methods, Observational Equivalence, Computational Security,
Interactive Prover.
I. INTRODUCTION
In recent years, multiple highly-successful tools have been
developed to analyze and verify cryptographic protocols and
primitives [9], [15], [16], [48], [57]. They have proven the
usefulness and necessity of computer-aided cryptography, both
uncovering critical attacks against widely deployed protocols
and helping in the design of new standards [3], [10], [13], [22],
[25]–[27], [29], [30], [43], [44], [47].
In anticipation of developments in quantum computing that
would break a lot of widely-used cryptographic primitives,
the security community has started to develop many new
security primitives and protocols, and revisit old protocols.
Additionally, an extensive multi-year NIST standardization
process is ongoing to develop new primitives and protocols.
These efforts aim to establish mechanisms that are provably
secure against quantum attackers. At some level of abstraction,
this implies (i) designing new primitives and prove (or assume)
that they are secure against a quantum attacker, and (ii) proving
that a concrete protocol that uses such primitives is indeed
secure against a quantum attacker. In this work, we focus on
the latter, and in particular how we can mechanize such proofs.
A classical strategy for proving a protocol’s security is a
so-called reduction proof, which yields computational security
guarantees against a polynomial-time attacker. This approach
is used in most pen-and-paper proofs by cryptographers, and
involves constructing a reduction from any attack on the
protocol to an attack on the used cryptographic assumptions,
and then reasoning by contradiction. This is a well studied
approach with respect to classical (non-quantum) attackers:
different ﬂavors of such proofs can be mechanized by tools
such as CRYPTOVERIF [15] and EASYCRYPT [9]. However,
some proof steps commonly used in reductions that are valid
for a classical attacker, such as rewinding, are in general not
valid anymore for quantum attackers. This result is similar to
the no-cloning theorem [61], which implies that one must be
careful when talking about the state of a quantum attacker. As
a consequence, a classical reduction proof of a protocol (even
based on post-quantum sound primitives) may not be valid
for quantum attackers. Unfortunately, there exists no formal
framework nor mechanization dedicated to computational
proofs of a protocol’s security versus a quantum attacker.
In this work, we address this problem by developing
PQ-BC, a post-quantum sound variant of a computationally
sound protocol logic, and a corresponding tool called the
PQ-SQUIRREL prover, by extending the logic’s tool support
for the post-quantum setting, as well as adding tactics. We
use our new tool to provide the ﬁrst mechanized post-quantum
computational security proofs for several protocols.
Concretely, our work builds on the BC logic [7] and its
mechanization in the SQUIRREL prover [5]. The BC logic can
be used to construct security proofs that provide computational
guarantees against a classical (non-quantum) attacker, while
only working inside a logical framework in which many
intricate details have been abstracted. It has notably been used
for manual proofs of real-world protocols, see e.g., proofs of
RFID based protocols [24], AKA [45], e-voting protocols [6],
key-wrapping API [53], and SSH through a composition
framework [23]. Reasoning in BC was recently mechanized
and extended in the SQUIRREL prover [5], dedicated to the
formal proofs of protocols. Notably, reasoning in BC (and
therefore SQUIRREL) is not sound with respect to a quantum
attacker, because the framework allows reduction steps that
cannot be reproduced with a quantum attacker.
To develop PQ-BC, we have to make the BC logic sound for
a single interactive quantum attacker, while it previously relied
on a set of deterministic one-shot attackers. This seemingly
small change triggers a cascade of technical changes. We
design a new term interpretation for the logic and identify
three syntactic conditions for proofs that help ensure their post-
quantum soundness. We provide mechanization for PQ-BC
© 2022, Cas Cremers. Under license to IEEE.
DOI 10.1109/SP46214.2022.00126
125
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 12:34:09 UTC from IEEE Xplore.  Restrictions apply. 
in the form of the PQ-SQUIRREL prover. PQ-SQUIRREL’s
soundness relies on the soundness results of PQ-BC and
implements the syntactic conditions; additionally, we design
and implement new tactics that extend the tool’s scope.
Contributions. We see our main contributions as the following:
• First, we develop PQ-BC, the ﬁrst computational ﬁrst-
order logic to prove guarantees of security protocols whose
results are provably sound with respect to a quantum
attacker.
• Second, we develop the PQ-SQUIRREL prover, a mecha-
nized tool support for establishing such guarantees.
• Third, we use our tool
to provide the ﬁrst mecha-
nized proofs of the post-quantum computational security
of 11 security protocols as case studies. These include
two KEM-based key exchanges [18], [35], a post-quantum
variant of Signal’s X3DH [38], and two protocols from
the IKE standards [20], [41] – conﬁrming claims in [34].
Overview: We provide in Section II the necessary back-
ground on the BC logic and the SQUIRREL prover. Then,
in Section III, we give a high-level overview of the design of
the PQ-BC logic and how it differs from the BC logic. In Sec-
tion IV we formally deﬁne PQ-BC, its syntax and semantics,
and its rules; in Section V we describe PQ-SQUIRREL and
perform case studies. We discuss current limitations and future
work in Section VI, and conclude in Section VII.
Upon ﬁrst reading, the reader may get a high-level under-
standing of the paper by skipping Section IV and directly
continuing with Section V.
We provide all source code, protocol models, and the long
version of this paper with full details, at [1].
Additional related Work: Issues regarding the validity of
classical cryptographic reductions in the post-quantum setting
have mostly started with [60], which identiﬁed the “no-cloning
theorem” [61] as a key issue, followed, e.g., by [4].
Key details and difﬁculties when moving to post-quantum
security are generally discussed [36], [56]. They provide some
guidelines that are suitable for game-based approaches and
gave us many insights, but those guidelines are not suited for
the BC logic approach.
There exists many tools for security proofs, we only discuss
the most widely used. At one extreme of the spectrum are
tools like EASYCRYPT [9] and CRYPTOVERIF [15], which
provide strong computational guarantees for detailed models
of cryptographic primitives, but for whom scaling to larger
constructs is more challenging; at the other end of the spectrum,
we have tools like TAMARIN [48] and PROVERIF [16], which
can analyze much larger protocol mechanisms by using a more
abstract symbolic model, but cannot provide computational
guarantees. SQUIRREL, and thus PQ-SQUIRREL, lies in the
middle ground between those two ends: on one side, it provides
computational guarantees, that are thus stronger than the one
given by PROVERIF and TAMARIN; on the other side, it
operates at a higher level of abstraction than EASYCRYPT and
CRYPTOVERIF. Consequently, SQUIRREL is less expressive and
thus less suited to reason about cryptographic primitives, but
tends to scale better to larger construct. However, SQUIRREL
does not provide any concrete security bounds, and in security
proofs over unbounded protocols, the number of sessions is
arbitrary and not attacker chosen. For a detailed comparison
between SQUIRREL, EASYCRYPT and CRYPTOVERIF, we refer
the reader to [5, Appendix E].
CRYPTOVERIF does not have any support for quantum
attackers yet, it might be possible to make it quantum-sound
by using ideas from our work, such as forbidding some
manipulations over the attacker state, and ensuring that a unique
quantum attacker process can continue without having to alter
or inspect its internal state.