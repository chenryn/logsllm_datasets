数据可视化.以及更多！
直方图隆重登场
本周访谈：
图表详解
HeadFirst:这么说，人们需要一些数据的可视化表示直方图：是的，不过要记住，我比饼图要灵活得多。你可
时，所请的人就是你。是吗？
以根据需要增加更多的直条，而我在显示时不会有任何
直方图：不错，正是我。我对数据可视化的所有方面都很
问题。另一方面，向饼图增加的部分越多，每一片就会越
精通，特别是矩形方面。
小。直到达到某一点，为保证展示整体甚至很难看清各个
部分。对我来说最关键的是，直条都有值，可以按相同的
HeadFirst:那么你的绘制能力主要限于矩形了？
比例显示。
直方图：需要说明，在这种情况下，“受限”这个词是一
HeadFirst:这是什么意思？
个褒义词。有些情况下，越简单越好，而现在就属于这种
情况。看来人们喜欢考虑直条，可能因为他们经常看到用
直方图：嗯，对我来说，如果值差别太大，我就很难进行
这种方式进行度量。应该知道，就像是移动电话上指示信
图示，当然，除非你不在意直条显著不同。我真正擅长的
号强度的小计量表（“你现在能听到我吗？”），我喜欢
是显示相同范围内的值之间的差别。例如，可能你希望使
这样。
用我来显示一年内的油价情况，在这种情况下，所有值都
在一个适当限制的范围内，相互之间有几美元的差别。
HeadFirst:是的。不过我还见过一些很有效的图是圆
的。可以让我有一些熟悉的想法…就像是苹果派，你
HeadFirst:你确信吗？
知道我的意思吗？
直方图：我知道，油价看起来也变化很大，可能不完全在
直方图：我知道你想说什么，而且我完全了解饼图（Pie
我的能力范围内。
Chart）。注意，这是对相同事物的两种不同考虑方式。
HeadFirst:这么说你已经看到困难了，是不是？
饼图看世界的角度是曲线的，而我会更直接一些，仅此而
直方图：你可能不相信。以前有个人构建了一个Web应
已。
用，记录他拉着他的老鼠一个月走了多少英里。他总在吹
HeadFirst:不过，难道人们内心里不是更倾向于饼而不嘘这个应用，而且用我来图示他的“旅程”。很疯狂，不
是一堆直条吗？
过人们确实很喜欢。
直方图：不，不是这样的。至少不太饿的人不会更倾向于HeadFirst：这么说，这就是你在Web领域的地位、为人们
饼。可以看到，饼图对于展示一个整体的各部分确实很不的数据提供可视化视图？
32个队，或者50个州。总共有50个州，对不对？
数据提供一些图示吸引视线，否则人们就会觉得数据有些
HeadFirst是的。嗯，假设你把华盛顿算作是“首府”，枯燥而且很难理解，每当这种时候我就会很快乐。
而把波多黎各和关岛之类的地方算作是“领地”，那么就Head First:很高兴听你这么说。也很高兴你能分享你的
示整体的各个部分，难道你不是一样吗？
直方图：很荣幸。另外不用担心，你随处都会看到我。
你现在的位置635
---
## Page 672
为类别构建一个数组
从一个数组到另一个
原先的Mismatch只提供一个主题列表，对应两个用户之间的互补配对。更确切地
讲，我们实际上有一个主题数组。问题在于，我们想要绘制的直方图并不只是关
于主题本身，而是关于与主题关联的类别。所以离我们真正需要的数据还差一层。
看起来需要另外一个SQL查询。我们不仅需要互补配对主题的数组，还需要一个
与之对应的类似的互补配对类别数组。
指示mismatch_category表的
name列时使用别名来消除
二义性。
$query="sELECT mr.response_id,mr.topic_id,mr.response,
mt.name AS topic_name,mc.name As category_name “
另一个联接将类别表
"FROM mismatch_response AS mr "
连接到响应表，来抽
"INNER JOIN mismatch_topic AS mt USING（topic_id）"
取类别名。
"INNER JOIN mismatch_category AS mc USING (category_id)
"WHERE mr.user_id-"".$_SESSION['user_id'].""";
基于这个查询中新加的联接，可以把对应各个响应主题的类别名追加到结
果数据，最终放人$user_responses数组中。不过，要记住，我们只需
还需要一个新的数组，其中
只包含每组用户的互补配对
要互补配对的类别，而不是所有类别。所以需要建立另外一个数组，其中
响应的类别。
只包含对应响应的互补配对类别。
Appearance
topic_name
category_name
Appearance
Tattoos
Appearance
mismatch结果数据的
Appearance
Gold chains
Appearance
新“列”包含了每个响
Entertainment
Body piercings
Appearance
应的类别名。
Entertainment
Cowboy boots
Appearance
Entertoinment
Longhair
Appearance
Entertainment
Reolity TV
Entertoinment
Food
Professional wresting
Entertainment
Food
Horrormovies
Entertainment
Food
Easy listeningmusic
Entertainment
只是将互补配对响应的
Food
The opera
Entertainment
类别名抽取到一个数
People
Sushi
Food
组中。
People
Spom
Food
Acivifies
Spicy food
Food
Activiies
Peanut buter&
Food
Activifies
在第8章中创建了Suser_
banona sondwiches
Adiviies
tesponses二维数组，并
Martinis
pooy
Activifies
读充了对应当前用户响
Howord Stern
People
应的结果数据。
BillGates
People
不过我们还不能达到目标，真正构建互补配对类
Barbara Streisand
People
别数组。为此，需要再来查看构建互补配对主题
HughHefner
People
数组的代码....
Suser_responses
636
第11章
---
## Page 673
数据可视化以及更多！
运行测试
尝试这个新查询来抽取互补配对主题和类别。
使用一个MySQL工具，执行以下查询，利用SELECT选择对应一个特定用户的互补配对
主题和类别。确保指定一个合法的用户ID，该用户不仅存在于数据库中，而且已经填写
了Mismatch问卷表单：
SELEcT mr.response_id, mr.topic_id, mr.response,
mt.name AS topic_name, mc.name AS category_name
FROM mismatch_response AS mr
INNER JOIN mismatch_topic AS mt USING (topic_id)
INNER JOIN mismatch_category AS mc USING (category_id)
WHERE mr.user_id =_3;
用户30必须对应一个合
法的用户，而且已经回
答了Mismatch问卷。
mt.name As topic_name,mc.name AS category_name
FROM mismatch_response AS mr
INNER JOIN mismatch topic AS mtUSING （topic id)
INNER JOIN mismatch_category AS mc USING (category_id)
response_idItopic_idIresponsetopic_nane
category_name
26
1
27
11
11
1Tattoos
12
！
2
1Gold chains
1Appearance
28
13
1
1Body piercings
Appearance
29
2
1Cowboy boots
Appearance
30
1
5
11
Long hair
Appearance
31
9
12
Reality TV
Appearance
32
Entertainment
33
Horror movies
Entertainment
IEntertainment
注意这个查询的结果与上一页的Suser
T
responses数组一致，这正是我们想要的。
将壹询写入PHP代码中之前，最好
先在一个MySQL工具中测试，这往
往是一个很好的想法。
你现在的位置
637
---
## Page 674
构建主题数组
构建互补配对主题数组
现在我们有了一个查询，可以完成一个多重联接，除了主题外还会抽取各个
响应的类别，之后这会抽取到suser_responses数组中。要记住，对于数
据库中每一个其他用户也会有一个类似的查询来抽取数据，从而可以进行互
补配对比较。所以$user_responses包含了登录Mismatch的用户的响应数
据，而$mismatch_responses包含系统中每一个其他用户的响应数据。这
样一来，我们就可以循环处理所有用户，每次完成互补配对用户比较时会更
新$mismatch_responses。
我们使用这两个数组来计算互补配对的得分，并建立了一个互补配对主题数
组。现在可以增加一行新的代码，构建一个互补配对类别数组，这个数组包含
了两个用户之间各个互补配对主题的类别。
这就是前一个版本Mismatch中的代码，只不过
/现在除了主题数组外，还构建了一个互补配对
类别数组。
$categories = array();
for (Si = 0; $i< count($user_responses); $i++){
if ($user_responses[$i]['response'] + $mismatch_responses[$i]['response'] == 3){
$score +=1;
array_push($topics,$user_responses[$i]['topic_name']);
array_push($categories,$user_responses[$i]I'category_name']);
通过存储与各个互补配对响应
完成后，对于每一个互补配
关联的类别来构建互补配对类
这个代码金得到一个只包含互补
对，Scatesories数组中都金包含相应的
别数组。
配对类别的数组。
一个类别。
thererareno
DumbQuestions
什么区别？
方图吗？
行数据，而由于可以有多个维度，数组可以包含多“行”
住，Mismatch直方图的基本思想是每个直条表示一个互补
数据。通过将一个结果集抽取到一个二维数组，这就允许
配对类别，而直条的高度表示该类别互补配对的次数。所
我们高效地在数据行间转移，而不必不断地返回数据库服
以需要得出每个类别互补配对的统计数。不过可以先退一
务器来获取以及重新获取行。这不适用于超大的数据集，
步做一个一般规划…..··
因为你要为此创建超大的数组。不过对于Mismatch响应来
说，数组大小绝对不会大于系统中的主题总数。
638
第1章
---
## Page 675
数据可视化以及更多！
建立直方图规划
有了互补配对类别数组，而且对于如何用它为MyMismatch页面生成直方图
图像已经有了很多很好的想法，但现在还缺少一个规划。实际上，动态生
成直方图只需要3步，而且我们已经解决了其中的一步。
这一步为我们提供互补
配对类别的一个列表。
1查询Mismatch数据库，得到互补配对类别名。
类别列表需要转编为一个
2计算各个类别的互补配对总数。
类别汇总数列表。
③使用各个类别的互补配对总数绘制直方图。
有了类别汇总数，可以具体使用GD
函数究成直方图的绘制。
要完成计划的第2步，需要以某种方式得到互补配对类别的数组，并把
它转换为一组类别汇总数，也就是统计各个类别在互补配对类别数组
中出现的次数。如果还记得，这正是绘制直方图所需的数据，其中类
别是标题，而各个类别的相应统计数就是每个直条的值。可以使用一
个二维数组将类别和总数结合到一个数据结构中。
从一个不同的角度看这
个新类别数组，可以卷
Appearance
旋转！
出如何用它向直方图提
Entertainment
4
供数据。
Food
4
People
2
Activifies
5
这个数组包含各个类别
名以及相应的互补配对
次数。
新的互补配对类别
数据正是直方图所
需要的。
一旦建立了这个类别汇总数组，下面准备继续完成第3步，具体使用一些GD
函数建立直方图图示。
你现在的位置
639
---
## Page 676
数组中的数学
处理类别
现在要解决的问题是要对类别数组汇总，放在一个包含标题和值的二维数
组中。互补配对类别数组已经存储在$categories数组中。需要建立一个
新的数组，名为$category_totals，其中对应各个类别包含一项，每一
项还包含各个类别的相应互补配对数。
需要从这里..·
一个类别在Scategoties数
Appearance
组中出现的总次数金作为
Appearance
Scategory_totals数组中的一
个总数出现。
Entertainment
Entertainment
Entertainment
Entertainment
Food
Food
Food
..变到这里！
Food
People
People
Appearance
3
Activities
Entertainment
4
Food
Activities
People
2
Acfivities
Activities
Activifies
5
Activifies
$category_totals
$categories
BRAIN
X.POWER
如何汇总$categories数组中的互补配对类别来
建立$category_totals二维数组？
640
第11章
---
## Page 677
数据可视化以及更多！
类别的数学问题
要从一个一维的互补配对类别数组转变为一个二维的类别汇总数组，这比
你最初想象的要难一些。出于这个原因，在具体建立PHP代码之前可以先用
伪代码逐步分析解决方案，这会很有帮助。伪代码可以让你避开语法细节，
而把重点放在特定编码方案中的核心思想上。
循环处理互补配对类别数组。对于数组中的每个类别
类别汇总数组中的最后一个元素与当前互补配对类别是不同的类别吗？
是！那么这是一个新的类别，所以把它增加到类别汇总数组，并将其汇总数初始化为
0。
不是。这是当前类别的另一个实例，所以将类别汇总数组中最后一个元素的汇总数增
1。
这个代码的结果是一个二维的类别汇总数组，其中主数组对应类别，各个
子数组包含类别名和相应的值。
转换伪代码来完成具体的PHP代码，建立Mismatch类别数据的一个二维数组，名为
ExeRciSe
$category_totals
$category_totals = array(array($mismatch_categories[0], 0));
foreach ($mismatch_categories as $category)(
你现在的位置
641