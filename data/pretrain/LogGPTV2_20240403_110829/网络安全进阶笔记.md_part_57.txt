首先可以到htp:/www.snadboy.com/下载Snadboy这个软件，它是一个专门用于解除应用
程序对话框中采用“*”显示的密码的工具软件，它可将这些密码的原始字符查找出来，并显
示到用户的面前。我们要使用它解除某个密码，只需先打开其他应用程序并显示出密码对话框
“*”密码上，Snadboy就会将这些“*”密码解除出来，并将其原始字符显示到“密码”框中。
除此以外，类似的软件也有很多，如ViewPassword等。很多下载站点有专门的密码软件栏目。
.20
---
## Page 279
第5章理解加密与解密
如“搜易口令钥匙”软件，只要将下载的压缩包解压到一个文件夹，再点其中的scekey.exe即
可启动软件。使用方法很简单，只要将窗口右上方的钥匙图标拖动到有保存密码的软件窗口中，
然后再点击“查看密码”按钮，弹出的对话框中会询问是否将这个软件用于合法的用途。点击
“是”按钮就能查看刚刚选定窗口中的密码资源了。
5.8.5巧用JavaScript进行加密保护
1.利用JavaScript进行密码保护
利用JavaSeript进行密码保护可以在一定程度上达到保护密码的作用，代码如下，可供读
者朋友参考：
在网页中使用这段JavaSeript脚本的方法为：
输入密码：
使用这段JavaScript脚本的一个缺点是用户可以检查源代码并发现文件目录的位置。为了
寻求更好的安全措施，应该通过放置一个默认的文件（index.html）到JavaScript脚本里面来保护
你的文件目录，这样当目录被请求的时候，你的服务器总是发送过去。如果你没有包括一个默
认的文件在你的文件目录，网络服务器就发送所有包含在你文件目录的所有文件，这正是不安
全的隐患，这里要指出的是，使用JavaScript来对一个文件进行密码保护也不是一个非常安全
的方法。为了获得较高的安全系数，这里推荐使用CGI或者服务器函数，比如.htaccess函数。
2.加密解密函数演示
很多VBS病毒通过对自身进行加密来防止特征码扫描，下面是一个简单的加密解密函数，
代码如下：
function compile(code)
var c=String.fromCharCode（code.charCodeAt（0)·code.length）:
for（vari=1:i
把这段代码保存为test.htm，然后打开文件，可以看到如图5.52所示的界面。
rosot Internet Explorer
%%9C
图5.52一个JavaScript实现的加密函数
相应的加密后解密的代码如下：
function uncompile（code)
(apoo)adesau-apo
varc=String.fromCharCode(code.charCodeAt（0)-code.length);
for（vari=1:i
将上述代码保存为testhtm后，即可得到“加密演示”的字样。
3.禁止利用IE浏览器查看源文件
将下面这段代码放在网页的HTML代码的标志中，则可以实现禁止利用IE
浏览器查看源文件：
5.8.6Java程序开发中的加密和解密
Java语言是目前网上最流行的编程语言之一，自从1995年5月Sun公司开发出该语言以
来，它已经从一种编程语言演化为一个广泛应用的计算平台，其“编写一次，到处运行”的跨
平台优势更是给整个网络安全带来了巨大的变革。由于它的安全设计起点高，也吸引了不少好
272
---
## Page 281
第5章莲解加密与解密
奇的眼光。谈到Java安全，自然少不了加密方面的问题。下面，我们来看看典型的加密和解
密实例。
Java 加密扩展即Java Cryptography Extension，简称JCE。它是Sun的加密服务软件，包含
了加密和密钥生成功能。JCE是JCA（JavaCryptography Architecture）的一种扩展。JCE没有规
定具体的加密算法，但提供了一个框架，加密算法的具体实现可以作为服务提供者加入。除了
JCE框架之外，JCE软件包还包含了SunJCE服务提供者，其中包括许多有用的加密算法，比
如DES（Data Encryption Standard）和 Blowfish。为简单计，在本文中我们将用DES算法加密和
解密字节码，
首先，我们来看一个完整的代码演示。从http/www.skycn.com/sof/7129.html下载JCreator
这个软件。将下面的代码保存为Crypt.java：
package com.abacus.common;
import javax.crypto.*;
inport java.security.*:
import javax.crypto.spec.*;
/**
加密解密实例
public class Crypt
*/
1
/*.
构造子注解
public Crypt（（
*/
/..
生成密钥
areturn byte[]返回生成的密钥
ethrowsexception出异常.
public static bytel] getkey() throws Exception(
/
//DES算法要求有一个可信任的随机数源
SecureRandon sr=new SecureRandom():
//为我们选择的DEs算法生成一个KeyGenerator对象
//定文加密算法，可用DES、DESede、Blowfish
KeyGenerator kg-KeyGenerator.getInstance(*DES*);
kg.init（sr);
//生成密钥
SecretKey key-kg.generateKey();
byte[]rawKeyDatakey.getEncoded（):
//获取密钥数据
/接下来就可以用密钥进行加密或解密，或者把它保存为文件供以后使用·/
return rawKeyData;
223
---
## Page 282
网络安全进阶笔记
根据提供的密钥，对指定的数据进行加密
/..
paraninput 需要加密的数据
paran key密钥
Breturnbyte[] 加密后的数据
Othrows Exception
*/
public static byte[] encryptData(byte[] secretkey.
byte[]encryptdata）throwsException(分
//DES算法要求有一个可信任的随机数源
SecureRandom sr = new SecureRandom();
·用某种方法获得密切数据·/
byte[] rawKeyData = secretkey;
//从原始密钥数据创建DESKeySpec对象
DESKeySpec dks=new DESKeySpec（rawKeyData);
//创建一个密钥工厂，然后用它把DESKeySpec转换成一个SecretKey对象
//cipher对象实际完成如密操作
Cipher cipher-Cipher.getInatance(*DEs*);
//用密钥初始化Cipher对象
cipher.init(Cipher.ENCRYPT_MODE,key.sr);
//现在，获取数据并加密
byte[]data=encryptdata;/*用某种方法获取数据·/
7/正式执行加密操作
byte[] encryptedData=cipher.doFinal(data);
//进一步处理加密后的数据
return encryptedData:
·通过指定的密钥，将给定的已加密的数据进行解密
/**
paraminput 待解密的数据
param key密钥
·returnbyte[]解密后的数据
throws Exception
public static byte[] decryptData(byte[] secretkey.
byte[] decryptdata)throws Exception（
274
---
## Page 283
第5章趣解加密与解密
//DES算法要求有一个可信任的随机数源
SecureRandom sr-new SecureRandom（);
用某种方法获取原始密钥数据·
byte[] rawkeyData =secretkey:
//从原始密钥数据创建一个DESKeySpec对象
DESKeySpec dksnew DESKeySpec(rawKeyData）;
//创建一个密钥工厂，然后用它把DESKeySpec对象转换成一个SecretKey对象
SecretKey key=keyFactory-generateSecret(dks):
//Cipher对象实际完成解密操作
Cipher cipher-Cipher.getInstance(*Des):
1/用密钥初始化Cipher对象
cipher.init(Cipher.DECRYPT_MODE,key.8r):
//现在，获取数据并解密
bytell encryptedata=decryptdata/·获得经过加密的数据*/
//正式执行解密操作