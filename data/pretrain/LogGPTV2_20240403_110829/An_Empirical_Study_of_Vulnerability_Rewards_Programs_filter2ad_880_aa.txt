# An Empirical Study of Vulnerability Rewards Programs

## Authors
Matthew Finifter, Devdatta Akhawe, and David Wagner  
University of California, Berkeley  
\{finifter, devdatta, daw\}@cs.berkeley.edu

## Abstract
We conducted an empirical study to better understand two well-known vulnerability rewards programs (VRPs) used by software vendors to encourage community participation in finding and responsibly disclosing software vulnerabilities. Over a three-year period, the Google Chrome VRP has cost approximately $580,000 and resulted in 501 bounties paid for identified security vulnerabilities. The Mozilla Firefox VRP, over the same period, has cost approximately $570,000 and yielded 190 bounties. Approximately 28% of Chrome's patched vulnerabilities and 24% of Firefox's, as listed in security advisories, are attributed to VRP contributions. Both programs appear economically efficient, comparing favorably to the cost of hiring full-time security researchers. The Chrome VRP features low expected payouts with high potential payouts, while the Firefox VRP offers fixed payouts. Typically, finding vulnerabilities through VRPs does not provide a salary comparable to a full-time job; most recipients have received only one reward. Firefox reports more critical-severity vulnerabilities than Chrome, which we attribute to architectural differences between the two browsers.

## Introduction
Some software vendors pay security researchers for the responsible disclosure of security vulnerabilities. These programs, known as vulnerability rewards programs (VRPs) or bug bounty programs, have seen increased interest in recent years. Some vendors have expanded their existing programs, others have introduced new ones, and some companies now act as intermediaries between security researchers and vendors offering VRPs.

### Benefits of VRPs
VRPs offer several potential benefits to software vendors:
1. **Increased Attention**: Adequate incentives attract security researchers, increasing the likelihood of finding latent vulnerabilities.
2. **Managed Disclosures**: Coordinating with security researchers allows vendors to manage vulnerability disclosures more effectively, reducing the risk of unexpected and costly zero-day disclosures.
3. **Deterrence**: Monetary rewards discourage security researchers from selling their findings to malicious actors in the underground economy.
4. **Security Enhancements**: Patching vulnerabilities found through VRPs increases the difficulty and cost for malicious actors to find zero-days, thereby diminishing the pool of latent vulnerabilities.
5. **Community Goodwill**: VRPs often engender goodwill among the security research community, fostering a positive relationship.

Despite these benefits, there is an ongoing debate about the value and effectiveness of VRPs. Notable vendors such as Microsoft, Adobe, and Oracle do not maintain VRPs, with Microsoft arguing that VRPs do not provide the best return on investment per bug. Additionally, the bounties awarded by VRPs are often lower than those offered in the underground market, raising questions about their attractiveness to financially motivated researchers.

Given the growing importance of VRPs in the secure development lifecycle and the ongoing debate, we use available data to better understand existing VRPs. We focus on the Google Chrome and Mozilla Firefox web browsers, both of which are widely considered to have mature VRPs, as case studies. Our analysis aims to provide insights into the characteristics, metrics, and trajectory of VRPs.

### Contributions
- **Data Collection and Analysis**: We collected and analyzed data on vulnerability rewards over the last three years for the Google Chrome VRP and the Mozilla Firefox VRP (Section 3).
- **Assessment of VRPs**: We evaluated the state of these VRPs along several dimensions, including costs, benefits, popularity, and efficacy (Section 4), finding that both programs appear effective and cost-effective.
- **Recommendations**: We provide concrete recommendations for software vendors aiming to start or evolve their own VRP (Section 5.2).
- **Future Research Hypotheses**: We generated hypotheses to identify opportunities for future research on VRPs and secure software development.

## Background
A secure software development lifecycle (SDLC) addresses software security throughout the entire development process. A vulnerability remediation strategy is any systematic approach aimed at reducing the number of software vulnerabilities. Potential strategies include code reviews, penetration testing, use of dynamic and static analysis tools, and VRPs.

### Google Chrome VRP
The Google Chrome VRP, introduced in January 2010, initially offered rewards ranging from $500 for high- and critical-severity bugs, with a special $1337 reward for particularly critical or clever bugs. Over time, the typical payout increased to a $1000 minimum, with a maximum payout of $3133.7 for high-impact vulnerabilities. Additionally, the Chrome team has provided rewards of up to $31,336 for exceptional vulnerability reports. Google also sponsors a separate, semi-regular exploit bounty called the "pwnium" competition, which focuses on full exploits and awards higher bounties (as high as $150,000).

### Mozilla Firefox VRP
Mozilla’s VRP, one of the oldest in the industry, was first started in 2004 and based on a similar project at Netscape in 1995. Initially, it awarded researchers $500 for high- or critical-severity security bugs. Starting July 1, 2010, Mozilla expanded its program to award all high/critical vulnerabilities $3000. Mozilla’s security ratings are similar to those of Chrome, with critical vulnerabilities allowing arbitrary code execution and high-severity vulnerabilities allowing attackers to bypass the same-origin policy or access confidential information. Due to the absence of privilege separation in Firefox, all memory corruption vulnerabilities are critical, regardless of the component affected.

## Methodology
For both browsers, we collected all bugs for which rewards were issued through the vendor's VRP and all security bugs affecting stable releases. We gathered details such as severity, reward amount, reporter name, and report date. For bugs affecting stable releases, we also aimed to gather the date a release patching the bug became available for download.

### Data Collection
- **Google Chrome Dataset**: We gathered data from the official Chromium bug tracker, using the "Reward" label to identify VRP-identified bugs and the "Security-Impact: Stable" label for bugs affecting stable releases. This provided us with 501 VRP-identified bugs and 1347 bugs affecting stable releases.
- **Mozilla Firefox Dataset**: We searched Bugzilla for an attachment used to tag a bug bounty, identifying 190 bugs. For bugs affecting stable releases, we scraped Mozilla Foundation Security Advisories (MFSA) for a list of bugs and release dates, gathering 613 unique bugs from MFSA advisories dating back to March 22, 2010.

### Threats to Validity
- **Incomplete Datasets**: There may be patched vulnerabilities that do not appear in our data due to manual labeling processes.
- **Firefox Reward Assumptions**: We treated all Firefox VRP rewards as $3,000, despite knowing that 8% of the rewards were for less. This could introduce up to 8% error in our results.
- **Comparative Analysis**: Our analysis assumes that finding security vulnerabilities in both browsers requires comparable skills and resources, which may not be the case.
- **Severity Assignment**: Assigning bug severity is a manual process, and there may be inconsistencies between the two browsers.

## Results
We studied VRPs from the perspectives of three interested parties: the software vendor, the independent security researcher, and the security researcher employed full-time by the software vendor.

### Software Vendor
- **Number of Vulnerabilities**: The Chrome VRP uncovers about 2.6 times as many vulnerabilities as the Firefox VRP (501 vs. 190), despite Chrome having only 2.2 times the total number of security vulnerabilities. 27.5% of bugs affecting Chrome releases and 24.1% of bugs affecting Firefox releases result from VRP contributions.
- **Discussion**: Both VRPs yield a significant fraction of the total number of security advisories. However, internal researchers still find more bugs during the months of testing preceding a typical browser release.

In conclusion, our study provides valuable insights into the effectiveness and efficiency of VRPs, offering guidance for vendors looking to implement or improve their own programs.