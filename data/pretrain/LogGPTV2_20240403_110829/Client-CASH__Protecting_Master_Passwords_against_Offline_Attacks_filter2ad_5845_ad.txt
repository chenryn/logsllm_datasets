(cid:3)
6.2 Analysis of the Exponential Mechanism
= Pdet,B − Padv,B to denote the gains from adopting Client-CASH (i.e., the reduction
.
We will use GB
in the probability that the adversary cracks the password). Recall that Padv,B (resp. Pdet,B) denotes
the probability that the optimal oﬄine adversary successfully cracks a password protected with Client-
CASH (resp. deterministic key-stretching) with a budget B. Figure 1a and 1b plots GB as a function of B
for various values of the security parameter . Theorem 2 allows us to compute Padv,B and GB eﬃciently.
12
(a) Two round exponential mechanism.
(b) Three round exponential mechanism.
(c) Two round optimal mechanism.
(d) Three round optimal mechanism.
Figure 1: Percent reduction in passwords breached GB = Pdet,B−Padv,B given as a function of the adversary’s
total budget B with a normalizing factor of
Csrv|P| for various values of . (a) and (b) show the
two and three round exponential mechanisms, respectively, while (c) and (d) show the optimal gains for the
two and three round mechanisms when the adversary’s budget is known in advance.
k(cid:48)|P| = CH
1
6.2.1 Two-Round Exponential Mechanism
Note that when n = 2, O = {P0,2, P1,2} so (O1, O2) = (1, 1). Thus for a ﬁxed value of , we can deﬁne the
exponential mechanism as follows:
W = 1 + e− ,
˜p1 =
1
W
,
˜p2 =
e−
W
Pr[E1] + Pr[E2] = ˜p1 + ˜p2 = 1
Pr[E1] + 2 Pr[E2] = ˜p1 + 2˜p2 ≤ Csrv
k · CH
13
Although we have an inequality in the last equation, we emphasize that k is determined to be the maximum
integer such that the inequality holds, as described in §6.1. Since k is large, and thus marginal changes in
Csrv
and round k downwards if it is not an integer.
k·CH
are small, we assume for simplicity that ˜p1 + 2˜p2 = Csrv
k·CH
6.2.2 Three-Round Exponential Mechanism
When n = 3, O = {P0,3, P1,3, P2,3} × {P0,3, P1,3, P2,3} so (O1, O2, O3) = (3, 2, 4). Thus for a ﬁxed , we can
deﬁne the exponential mechanism as follows:
(cid:18) 1
,
W
(˜p1, ˜p2, ˜p3) =
W = 3 + 2e−/2 + 4e−
e−
W
e−/2
W
,
(cid:19)
Pr[E1] + Pr[E2] + Pr[E3] = 3˜p1 + 2˜p2 + 4˜p3 = 1
Pr[E1] + 2 Pr[E2] + 3 Pr[E3] = 3˜p1 + 4˜p2 + 12˜p3 ≤ Csrv
k · CH
Discussion Our analysis shows that exponential mechanism can be used to reduce the percentage of
passwords breached by an optimal oﬄine adversary. When B = k(cid:48)|P| we will always have Pdet,B = 1. Thus,
we expect that the gain GB will decrease monotonically after this point which is indeed what we observe in
the plots. In the two round case we always had positive gain (e.g., for all B ≥ 0 we had GB > 0 for every
value of  that we tried). In the three round case we always had GB > 0 whenever   3. Future work might extend our analysis of Client-CASH to explore this possibility.
Acknowledgments
This work was completed in part while Jeremiah Blocki was visiting the Simons Institute for the Theory of
Computing, supported by the Simons Foundation and by the DIMACS/Simons Collaboration in Cryptogra-
phy through NSF grant #CNS-1523467. Anirudh Sridhar was supported by a grant from the PNC Center
for Financial Services Innovation. Any opinions, ﬁndings, and conclusions or recommendations expressed in
this material are those of the author(s) and do not necessarily reﬂect the views of Microsoft, the PNC Center
for Financial Services Innovation at Carnegie Mellon University or the National Science Foundation.
References
[1] R. Biddle, S. Chiasson, and P. van Oorschot. Graphical passwords: Learning from the ﬁrst twelve years.
ACM Computing Surveys (CSUR), 44(4):19, 2012.
[2] A. Biryukov, D. Dinu, and D. Khovratovich. Fast and tradeoﬀ-resilient memory-hard functions for
cryptocurrencies and password hashing. Cryptology ePrint Archive, Report 2015/430, 2015. http:
//eprint.iacr.org/.
[3] J. Blocki, M. Blum, and A. Datta. Naturally rehearsing passwords. In K. Sako and P. Sarkar, editors,
Advances in Cryptology - ASIACRYPT 2013, volume 8270 of Lecture Notes in Computer Science, pages
361–380. Springer Berlin Heidelberg, 2013.
[4] J. Blocki and A. Datta. Cash: A cost asymmetric secure hash algorithm for optimal password protection.
CoRR, abs/1509.00239, 2015.
[5] J. Blocki, S. Komanduri, L. F. Cranor, and A. Datta. Spaced repetition and mnemonics enable recall
of multiple strong passwords. In 22nd Annual Network and Distributed System Security Symposium,
NDSS 2015, San Diego, California, USA, February 8-11, 2014, 2015.
[6] J. Blocki, S. Komanduri, A. Procaccia, and O. Sheﬀet. Optimizing password composition policies. In
Proceedings of the fourteenth ACM conference on Electronic commerce, pages 105–122. ACM, 2013.
[7] J. Bonneau. The science of guessing: analyzing an anonymized corpus of 70 million passwords.
In
Security and Privacy (SP), 2012 IEEE Symposium on, pages 538–552. IEEE, 2012.
[8] J. Bonneau, C. Herley, P. C. van Oorschot, and F. Stajano. The quest to replace passwords: A framework
for comparative evaluation of web authentication schemes. In IEEE Symposium on Security and Privacy,
pages 553–567. IEEE, 2012.
[9] J. Bonneau and S. Preibusch. The password thicket: technical and market failures in human authenti-
cation on the web. In Proc. of WEIS, volume 2010, 2010.
[10] J. Bonneau and S. Schechter. ”toward reliable storage of 56-bit keys in human memory”. In Proceedings
of the 23rd USENIX Security Symposium, August 2014.
[11] X. Boyen. Halting password puzzles. In Proc. Usenix Security, 2007.
18
[12] S. Boztas. Entropies, guessing, and cryptography. Department of Mathematics, Royal Melbourne Insti-
tute of Technology, Tech. Rep, 6, 1999.
[13] J. G. Brainard, A. Juels, B. Kaliski, and M. Szydlo. A new two-server approach for authentication with
short secrets. In USENIX Security, volume 3, pages 201–214, 2003.
[14] S. Brostoﬀ and M. Sasse. Are Passfaces more usable than passwords: A ﬁeld trial investigation. In
People and Computers XIV-Usability or Else: Proceedings of HCI, pages 405–424, 2000.
[15] J. Camenisch, A. Lysyanskaya, and G. Neven. Practical yet universally composable two-server password-
authenticated secret sharing. In Proceedings of the 2012 ACM conference on Computer and Communi-
cations Security, pages 525–536. ACM, 2012.
[16] M. D¨urmuth and T. Kranz. On password guessing with gpus and fpgas.
[17] C. Dwork, A. Goldberg, and M. Naor. On memory-bound functions for ﬁghting spam. In Advances
in Cryptology - CRYPTO 2003, 23rd Annual International Cryptology Conference, Santa Barbara,
California, USA, August 17-21, 2003, Proceedings, volume 2729 of Lecture Notes in Computer Science,
pages 426–444. Springer, 2003.
[18] C. Dwork, F. McSherry, K. Nissim, and A. Smith. Calibrating noise to sensitivity in private data
analysis. In Theory of cryptography, pages 265–284. Springer, 2006.
[19] C. Dwork and A. Roth. The algorithmic foundations of diﬀerential privacy. Theoretical Computer
Science, 9(3-4):211–407, 2013.
[20] D. Florencio and C. Herley. A large-scale study of web password habits. In Proceedings of the 16th
international conference on World Wide Web, pages 657–666. ACM, 2007.
[21] C. Forler, S. Lucks, and J. Wenzel. Catena: A memory-consuming password scrambler. IACR Cryptology
ePrint Archive, 2013:525, 2013.
[22] I. Jermyn, A. Mayer, F. Monrose, M. K. Reiter, and A. D. Rubin. The design and analysis of graphical
passwords. In Proceedings of the 8th conference on USENIX Security Symposium - Volume 8, pages
1–1, Berkeley, CA, USA, 1999. USENIX Association.
[23] B. Kaliski. Pkcs# 5: Password-based cryptography speciﬁcation version 2.0. 2000.
[24] K. Kim, S. Lee, D. Hong, and J.-C. Ryou. Gpu-accelerated password cracking of pdf ﬁles. KSII
Transactions on Internet and Information Systems (TIIS), 5(11):2235–2253, 2011.
[25] S. Komanduri, R. Shay, P. Kelley, M. Mazurek, L. Bauer, N. Christin, L. Cranor, and S. Egelman.
Of passwords and people: measuring the eﬀect of password-composition policies. In Proceedings of the
2011 annual conference on Human factors in computing systems, pages 2595–2604. ACM, 2011.
[26] U. Manber. A simple scheme to make passwords based on one-way functions much harder to crack.