candidate from msg 
s1 = msg 
s2 = msg. In the context of s1, the analysis is
tied to the constraint msg = ”HelloV1” and generates a message type candidate
⟨R, P1⟩ where:
P1 = (B0B1B2B3B4B5B6 = ”HelloV1”)
In the context of s2 the analysis is tied to the constraint msg = ”HelloV2” and
generates an alphabet symbol ⟨R, P2⟩ where:
P2 = (B0B1B2B3B4B5B6 = ”HelloV2”)
The set ContA(w) = {⟨R, P1⟩, ⟨R, P2⟩} is returned with the answer that w ∈ L.
A.3
Gh0st RAT Inference Results
The full state machine learnt by applying our method on Gh0st RAT C&C is
presented in Figure 5. In the protocol a message type is determined by the ﬁrst
byte of the message and some message types provide additional information in
the second byte. In Table 2 we present the predicate of the type as the preﬁx
common to all the messages in that type.
0
3
[R:7]
4
[R:4]
5
[R:6]
6
[R:3]
8
[R:10]
9
[R:2]
10
[R:9]
11
[R:5]
12
[R:8]
13
[R:1]
14
[R:0]
17
[R:11]
2
19
[R:24]
[S:12]
18
[S:13]
15
[S:14]
16
[S:15]
7
[R:37]
[R:9]
[R:36]
[S:16]
20
[S:17]
[S:18]
22
[S:19]
24
[S:20]
[S:21]
[S:22]
[R:30]
[R:29]
[R:32]
[R:31]
[R:33]
[R:34]
21
[R:24]
26
[S:67]
23
[R:24]
[R:4][S:68]
[R:24]
[S:73]
25
[R:24]
[S:74][R:76]
27
[R:75]
[R:144][R:145][R:140][S:137]
28
[R:138]
[R:76]
[R:75][S:199]
[S:277]
Fig. 5. Full state machine learnt by our method
PISE: Protocol Inference using Symbolic Execution and Automata Learning
19
MSG ID Name
Preﬁx MSG ID Name
Preﬁx
[R:0]
SERVER EXIT
0xcd
[R:1]
CMD BYE
0xcc
[R:2]
CMD TALK
0x34
[R:3]
CMD REGEDIT
0x33
[R:4]
CMD AUDIO
0x22
[R:5]
CMD SHELL
0x28
[R:6]
CMD SERVICES
0x32
[R:7]
CMD SCREEN SPY
0x10
[R:8]
CMD CAM
0x1a
[R:145] CMD SCREEN BLOCK INPUT
0x15
[R:10]
CMD SYSTEM
0x23
[S:277] TOKEN CLIPBOARD TEXT
0x76
[S:12]
TOKEN BITMAPINFO 0x73
[S:13]
TOKEN AUDIO START
0x79
[S:14]
TOKEN SERVERLIST 0x81
[R:140] CMD SCREEN SET CLIPBOARD 0x19
[S:16]
TOKEN WSLIST
0x7e
[S:17]
TOKEN TALK START
0x84
[S:19]
TOKEN SHELL START 0x80
[S:20]
TOKEN CAM BITMAPINFO
0x77
[S:21]
CMD BYE
0xcc
[R:32]
CMD SVCCFG/START
0x83 0x01
[R:24]
CMD NEXT
0x1e
[R:30]
CMD SVCCFG/DEMAND START 0x83 0x04
[R:29]
CMD SERVICELIST
0x82
[R:31]
CMD SVCCFG/AUTO
0x83 0x03
[S:22]
SERVER EXIT
0xcd
[R:33]
CMD SVCCFG/STOP
0x83 0x02
[R:34]
CMD REG FIND
0xc9
[R:36]
CMD WINDOW CLOSE
0x00
[R:37]
CMD PSLIST
0x24
[S:67]
TOKEN FIRSTSCREEN
0x74
[S:68]
TOKEN AUDIO DATA
0x7a
[S:74]
TOKEN CAM DIB
0x78 0x00
[S:73]
TOKEN TALKCMPLT
0x85
[R:75]
CMD CAM ENABLECOMPRESS
0x1b
[S:112] TOKEN PSLIST
0x7d
[R:76]
CMD CAM DISABLECOMPRESS 0x1c
[S:137] TOKEN NEXTSCREEN 0x75
[R:138] CMD SCREEN GET CLIPBOARD 0x18
[S:15]
TOKEN REGEDIT
0xc8
[R:144] CMD SCREEN CONTROL
0x14
[R:9]
CMD WSLIST
0x25
[S:199] TOKEN CAM DIB/COMPRESS
0x78 0x01
[R:11]
CMD LIST DRIVE
0x01
Table 2. Learnt message types
References
1. Alur, R., Cern´y, P., Madhusudan, P., Nam, W.: Synthesis of interface speciﬁcations
for java classes. In: Proceedings of the 32nd ACM SIGPLAN-SIGACT Symposium
on Principles of Programming Languages, POPL 2005, Long Beach, California,
USA, January 12-14, 2005. pp. 98–109 (2005)
2. Angluin, D.: Learning regular sets from queries and counterexamples. Inf. Comput.
75(2), 87–106 (1987)
3. Caballero, J., Song, D.: Automatic protocol reverse-engineering: Message format
extraction and ﬁeld semantics inference. Computer Networks 57(2), 451–474 (2013)
4. Caballero, J., Yin, H., Liang, Z., Song, D.X.: Polyglot: automatic extraction of
protocol message format using dynamic binary analysis. In: Proceedings of the
2007 ACM Conference on Computer and Communications Security, CCS 2007,
Alexandria, Virginia, USA, October 28-31, 2007. pp. 317–329 (2007)
5. Cho, C.Y., Babi´c, D., Poosankam, P., Chen, K.Z., Wu, E.X., Song, D.: MACE:
Model-inference-Assisted Concolic Exploration for Protocol and Vulnerability Dis-
covery. In: Proceedings of the 20th USENIX Security Symposium (8 2011)
6. Cho, C.Y., Babic, D., Shin, E.C.R., Song, D.: Inference and analysis of formal
models of botnet command and control protocols. In: Proceedings of the 17th
ACM Conference on Computer and Communications Security, CCS 2010, Chicago,
Illinois, USA, October 4-8, 2010. pp. 426–439 (2010)
20
Ron Marcovich, Orna Grumberg, and Gabi Nakibly
7. Comparetti, P.M., Wondracek, G., Kr¨ugel, C., Kirda, E.: Prospex: Protocol speciﬁ-
cation extraction. In: 30th IEEE Symposium on Security and Privacy (S&P 2009),
17-20 May 2009, Oakland, California, USA. pp. 110–125 (2009)
8. Cui, W., Kannan, J., Wang, H.J.: Discoverer: Automatic protocol reverse engineer-
ing from network traces. In: Proceedings of the 16th USENIX Security Symposium,
Boston, MA, USA, August 6-10, 2007 (2007)
9. Cui, W., Peinado, M., Chen, K., Wang, H.J., Ir´un-Briz, L.: Tupni: automatic re-
verse engineering of input formats. In: Proceedings of the 2008 ACM Conference on
Computer and Communications Security, CCS 2008, Alexandria, Virginia, USA,
October 27-31, 2008. pp. 391–402 (2008)
10. Emmi, M., Giannakopoulou, D., Pasareanu, C.S.: Assume-guarantee veriﬁcation
for interface automata. In: FM 2008: Formal Methods, 15th International Sym-
posium on Formal Methods, Turku, Finland, May 26-30, 2008, Proceedings. pp.
116–131 (2008)
11. Fujiwara, S., von Bochmann, G., Khendek, F., Amalou, M., Ghedamsi, A.: Test
selection based on ﬁnite state models. IEEE Trans. Software Eng. 17(6), 591–603
(1991)
12. Gheorghiu, M., Giannakopoulou, D., Pasareanu, C.S.: Reﬁning interface alphabets
for compositional veriﬁcation. In: Tools and Algorithms for the Construction and
Analysis of Systems, 13th International Conference, TACAS 2007, Held as Part of
the Joint European Conferences on Theory and Practice of Software, ETAPS 2007
Braga, Portugal, March 24 - April 1, 2007, Proceedings. pp. 292–307 (2007)
13. Isberner, M., Howar, F., Steﬀen, B.: The open-source learnlib. In: Kroening, D.,
P˘as˘areanu, C.S. (eds.) Computer Aided Veriﬁcation. pp. 487–495. Springer Inter-
national Publishing, Cham (2015)
14. Shahbaz, M., Groz, R.: Inferring mealy machines. In: FM 2009: Formal Methods,
Second World Congress, Eindhoven, The Netherlands, November 2-6, 2009. Pro-
ceedings. pp. 207–222 (2009)
15. Shoshitaishvili, Y., Wang, R., Salls, C., Stephens, N., Polino, M., Dutcher, A.,
Grosen, J., Feng, S., Hauser, C., Kr¨ugel, C., Vigna, G.: SOK: (state of) the art
of war: Oﬀensive techniques in binary analysis. In: IEEE Symposium on Security
and Privacy, SP 2016, San Jose, CA, USA, May 22-26, 2016. pp. 138–157. IEEE
Computer Society (2016)
16. Wondracek, G., Comparetti, P.M., Kr¨ugel, C., Kirda, E.: Automatic network pro-
tocol analysis. In: Proceedings of the Network and Distributed System Security
Symposium, NDSS 2008, San Diego, California, USA, 10th February - 13th Febru-
ary 2008 (2008)