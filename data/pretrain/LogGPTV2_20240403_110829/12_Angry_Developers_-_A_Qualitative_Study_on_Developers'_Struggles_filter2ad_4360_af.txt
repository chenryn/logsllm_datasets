### References

1. Sebastian Roth, Michael Backes, and Ben Stock. "Assessing the Impact of Script Gadgets on CSP at Scale." 2020.
2. Sebastian Roth, Timothy Barron, Stefano Calzavara, Nick Nikiforakis, and Ben Stock. "Complex Security Policy? A Longitudinal Analysis of Deployed Content Security Policies." In NDSS, 2020.
3. Prateek Saxena, Steve Hanna, Pongsin Poosankam, and Dawn Song. "FLAX: Systematic Discovery of Client-Side Validation Vulnerabilities in Rich Web Applications." In NDSS, 2010.
4. Dolière Francis Some, Nataliia Bielova, and Tamara Rezk. "On the Content Security Policy Violations Due to the Same-Origin Policy." In Proceedings of the 26th International Conference on World Wide Web, pages 877–886, 2017.
5. Sid Stamm, Brandon Sterne, and Gervase Markham. "Reining in the Web with Content Security Policy." In International Conference on World Wide Web (WWW), 2010.
6. Marius Steffens, Christian Rossow, Martin Johns, and Ben Stock. "Don’t Trust the Locals: Investigating the Prevalence of Persistent Client-Side Cross-Site Scripting in the Wild." 2019.
7. Marius Steffens, Marius Musch, Martin Johns, and Ben Stock. "Who’s Hosting the Block Party? Studying Third-Party Blockage of CSP and SRI." In Network and Distributed Systems Security (NDSS) Symposium 2021, 2021.
8. Ben Stock, Stephan Pfistner, Bernd Kaiser, Sebastian Lekies, and Martin Johns. "From Facepalm to Brain Bender: Exploring Client-Side Cross-Site Scripting." In Proceedings of the 22nd ACM SIGSAC Conference on Computer and Communications Security, pages 1419–1430, 2015.
9. Anselm Strauss and Juliet M Corbin. "Grounded Theory in Practice." Sage, London, 1997.
10. Michael Sutton. "The Dangers of Persistent Web Browser Storage." 2009.
11. European Union. "EU Commission Recommendation (2003/361/EC)." Online at https://eur-lex.europa.eu/legal-content/EN/TXT/PDF/?uri=CELEX:32003H0361, 2003.
12. W3C. "CSP 1.0." Online at https://www.w3.org/TR/CSP1/, 2015.
13. W3C. "CSP Level 2." Online at https://www.w3.org/TR/CSP2/, 2016.
14. W3C. "CSP Level 3." Online at https://www.w3.org/TR/CSP3/, 2016.
15. GitHub W3C webappsec csp. "Issue 7: CSP: connect-src 'self' and WebSockets." https://github.com/w3c/webappsec-csp/issues/7.
16. Lukas Weichselbaum, Michele Spagnuolo, Sebastian Lekies, and Artur Janc. "CSP is Dead, Long Live CSP! On the Insecurity of Whitelists and the Future of Content Security Policy." In CCS, 2016.
17. Michael Weissbacher, Tobias Lauinger, and William Robertson. "Why is CSP Failing? Trends and Challenges in CSP Adoption." In RAID, 2014.

### Screening Questionnaire

**Introduction:**
The screening questionnaire was conducted using a Django-based survey instance hosted by our institution.

**A.1 Specific Questions:**

- For which web application did you take part in the deployment or maintenance of CSP? Please provide a URL, if possible.
- To what extent were you involved in the maintenance or deployment of CSP for the web applications you mentioned above?
- When confronted with security-critical decisions, do you make them mostly alone or mostly in a team? (Likert Scale 1–7, 1=strongly agree, 7=strongly disagree)
- Security is my main focus when writing web apps. (Likert Scale 1–7, 1=strongly agree, 7=strongly disagree)

**B.0.1 General:**

- Are you satisfied with your work? What is your specific task in this team?
- In your company, what is the specific area that you cover?
- Do you consider yourself a web developer? If yes, since when?
- Do you have an IT-Security background? If yes, please specify.
- Was web security and CSP part of your education? If yes, where did you learn about it? If possible, briefly outline the basic content and topics covered.

**B.1 Threat Model Covered by CSP:**

- What was your (or your company’s) motivation to deploy CSP?
- What are the use cases of CSP? (XSS mitigation, framing prevention, etc.)
- What are the potential consequences if these attacks happen?
- What are the attacker capabilities?
- Why is XSS/Framing/Network attack bad? What are the potential impacts?
- How does CSP defend your web application against these attacks?
- Do you use other HTTP headers to prevent those attacks? (XFO / HSTS / etc.)

**B.2 Roadblocks for CSP:**

- Personalized to individual developer group.

**Figure 6: The landing page of our screening questionnaire.**

- Security plays an important role in my everyday work. (Likert Scale 1–7, 1=strongly agree, 7=strongly disagree)
- How many people are working in your team? And how many of those are specifically dealing with security?

**A.2 Attacker Model:**

- Which of the following technologies and services below have you used in the past year? (Check all that apply.)
  - Social Networks (Facebook, Twitter, etc.)
  - Online Audio and Video Conferencing (Skype, FaceTime, Google Hangout, etc.)
  - Office Software (Google Docs, Office Online, etc.)
  - Mobile Messaging (Signal, WhatsApp, etc.)
  - Online Banking / Payment (PayPal, etc.)
  - Online Shopping (Amazon, Zalando, etc.)
- Are you aware of web attacks when using those services? If yes, name some attacks you consider...

**A.3 Demographics:**

- Age / Gender / Home Country / Highest (completed) Education Level / Current Occupation / Recent Professional Status
- How big is the company that you are working for? (Buckets according to the EU Commission Recommendation (2003/361/EC) [53])
- Is the web presence your company’s main business?
- Email address (Mandatory for contact reasons).

### Interview Protocol

**Introduction:**
The interview was an online video conference where we captured screen and audio of us and the participants.

**Questions:**

1. **Creating a Sane CSP:**
   - How did you manage to create a sane CSP?
   - What challenges did you encounter and how did you resolve them?

2. **Insecure Practices:**
   - In your CSP, you used $InsecurePractice, what caused the deployment of this source-expression?
   - Do you see any problems regarding this choice?
   - How could you resolve this issue / fix your CSP?
   - Would it be feasible to do this for your web application?

3. **CSP Experimentation:**
   - Between $startCSP and $endCSP, you experimented with CSP for your web application. What challenges did you encounter?
   - Why did you abort your experiment of deploying a CSP?
     - Technical issues or bad cost-effectiveness consideration?
     - If technical, what exactly, and do you know how to resolve this issue?
   - What changes would be required that you consider retrying CSP deployment?

**Tools and Consulting:**
- Have you used any tools / consulting that helped you to create the policy? If yes, which ones?

**Validation:**
- Think aloud while deploying a CSP that defends against XSS for the following web application.

### OWASP Poster

**OWASP Poster:**
- Poster that was used by the OWASP to advertise our study.

### LinkedIn Advertisement

**LinkedIn Advertisement:**
- Advertisement that was used in our LinkedIn campaign.

### Recruiting Mail

**Recruiting Mail:**

**Subject: Study Invitation to Improve CSP**

Dear $DOMAIN . TLD team,

We are $RESEARCH_ORGANIZATION. We have been analyzing several web applications to evaluate the deployed security mechanisms. Currently, we are investigating the Content Security Policy (CSP), and we noticed that your website is one of the very few exceptional cases that actually deployed a sane CSP. 

In order to understand how you managed to arrive at this success and to help other insecure websites like a plethora of others, we would like to invite you to participate in our study. The study will consist of two parts: first, a short screening questionnaire, and afterward, we might invite you to an online video interview which will last approximately one hour. Of course, we will give you an appropriate compensation of 50 $MONETARY_UNIT (as Amazon gift card) after finishing the interview.

If you or one of your colleagues who is familiar with CSP wants to participate, please fill out our screening questionnaire at $LINK. Note that you should have dealt with CSP at least once. If not, please forward this email to your colleagues that are responsible for CSP in your company.

Should you need further information or have any other questions, please do not hesitate to contact us by answering this email.

Best Regards,
$NAME

**Footer with full name, exact address, phone number, and email address.**

### Invitation Mail

**Subject: Invitation to CSP Interview**

Hi,

Thanks again for participating in our study and helping us to improve CSP. Your insights and first-hand experience with CSP will help us identify roadblocks and improve CSP deployment. We would like to invite you to our 90-minute study. It consists of:

1. A ~30-minute interview about your experiences with CSP.
2. A ~30-minute programming task (+30-minute buffer, e.g., setup) where you modify a small web app in a programming language of your choice (PHP, Python, or JS) that supports CSP.

The interview takes place online and can be conducted with any software that supports audio and screen recording (e.g., Zoom). We want to make the programming task as comfortable as possible, so you have the choice between three programming languages and can freely choose between the following setup options.