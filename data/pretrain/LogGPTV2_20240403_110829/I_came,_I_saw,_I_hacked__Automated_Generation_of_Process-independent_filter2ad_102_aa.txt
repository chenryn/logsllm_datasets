# Title: I Came, I Saw, I Hacked: Automated Generation of Process-Independent Attacks for Industrial Control Systems

## Authors:
- Esha Sarkar, Tandon School of Engineering, New York University
- Hadjer Benkraouda, Center for Cyber Security, New York University Abu Dhabi
- Michail Maniatakos, Center for Cyber Security, New York University Abu Dhabi

### Abstract
Malicious manipulations on Industrial Control Systems (ICSs) pose a significant threat to critical infrastructures, leading to unprecedented losses. Current research in vulnerability discovery and exploitation typically assumes full visibility and control over the industrial process, which is unrealistic in real-world scenarios. This work investigates the possibility of an automated end-to-end attack on an unknown control process, with the constraint of infecting just one industrial computer. We create databases of human-machine interface (HMI) images and Programmable Logic Controller (PLC) binaries using publicly available resources to train machine-learning models for modular and granular fingerprinting of ICS sectors and processes. We then explore control-theoretic attacks on the process, leveraging common control algorithm modules like Proportional Integral Derivative (PID) blocks, using a PLC binary reverse-engineering tool. These attacks cause stable or oscillatory deviations within the operational limits of the plant. We package the automated attack and evaluate it against a benchmark chemical process, demonstrating the feasibility of advanced attacks even in constrained scenarios.

### CCS Concepts
- Security and privacy → Systems security

### Keywords
- Industrial control systems security, Machine learning, Fingerprinting, Process-aware attacks

### ACM Reference Format
Esha Sarkar, Hadjer Benkraouda, and Michail Maniatakos. 2020. I came, I saw, I hacked: Automated Generation of Process-independent Attacks for Industrial Control Systems. In Proceedings of the 15th ACM Asia Conference on Computer and Communications Security (ASIA CCS ’20), October 5–9, 2020, Taipei, Taiwan. ACM, New York, NY, USA, 15 pages. https://doi.org/10.1145/3320269.3384730

## 1. Introduction
Industrial Control Systems (ICS) are used to monitor and manage physical processes in critical infrastructures such as nuclear power plants, chemical plants, wastewater treatment facilities, and transportation systems. These systems serve large populations and are integral to everyday life. Attacks on ICS can lead to severe financial losses, physical damage, and even human fatalities. Notable examples include Stuxnet, which targeted air-gapped nuclear and chemical plants, and the Ukraine blackouts, where adversaries used HMIs in the SCADA system to open circuit breakers and disable remote commands.

In the past, ICS environments were considered secure due to their air-gapped nature. However, with the push for improved efficiency and better economics, these environments have become more connected, exposing them to a variety of cyber-attacks. The use of Commercial Off-The-Shelf (COTS) components has also increased, making it easier for malware to be ported to industrial environments. Regular patching is challenging in industrial settings due to the required downtime and the long lifespan of industrial devices, leaving many ICS environments vulnerable to known vulnerabilities.

While state-of-the-art literature on ICS vulnerability discovery and exploitation often assumes complete observability and controllability, this does not reflect realistic scenarios. A more dangerous class of attacks is process-aware attacks, which are operationally stealthy and result in calculated damages. To design these attacks, a sector-specific analysis is necessary. Our approach leverages the similarities among ICS sectors, processes, and common control algorithms to overcome these limitations and identify boundaries for dynamic attacks. We consider an attack with constrained access to the industrial plant, starting from a single HMI Windows-based computer. Our methodology includes automated reconnaissance and attack development, allowing the adversary to cause stealthy, process-aware attacks. Our major contributions are:

- **ICS Sector Fingerprinting Using HMI Screenshots:** We constructed a database of publicly available HMI images and trained machine-learning models to classify HMI screenshots into specific ICS sectors.
- **ICS Process Fingerprinting Using ICS Binaries:** We use a database of publicly available ICS binaries to train machine-learning models to identify the specific process controlled within that sector.
- **Generic Methodology for Perturbation-Based Attacks:** We leverage control theory to design attacks that can be controlled in behavior, targeting systems that use PID controllers while remaining within operational points.
- **End-to-End Case Study:** We demonstrate the feasibility of our attacks in the Tennessee-Eastman benchmark chemical process.

The rest of the paper is structured as follows:
- **I Came (Section 3):** Describes our threat model and assumptions about the attacker's capabilities and entry points.
- **I Saw (Section 4):** Details our fingerprinting methodology based on HMI images and PLC binaries.
- **I Hacked (Section 5):** Presents a generic, control-theoretic methodology for developing process-aware attacks with limited visibility.
- **Case Study (Section 6):** Demonstrates the end-to-end attack on the Tennessee-Eastman process.
- **Related Defenses (Section 7):** Discusses potential defenses against such attacks.

## 2. Related Work
To the best of our knowledge, automated reconnaissance using HMI images and PLC binaries has not been extensively explored. Previous work on PLC source code and binary analysis has focused on disassembly, decompilation, vulnerability finding, and payload design. While there are many sector-specific attacks, research on generic payload generation is limited. Table 1 summarizes the state-of-the-art process-aware attacks and countermeasures for various ICS sectors. Our work differs from existing approaches by focusing on specific, sustainable manipulations and providing a generic methodology for launching stealthy, PLC-based attacks.

## 3. Threat Model
Most ICS attacks in the literature assume extensive observability and controllability of the process, which is not realistic in real-world scenarios. We consider a threat model where the adversary initially infects a single device, such as an HMI Windows-based computer, and has limited visibility and control over the process. This scenario is more reflective of real-world attacks, where initial access is often limited and requires further reconnaissance and exploitation.