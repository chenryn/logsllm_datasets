title:I came, I saw, I hacked: Automated Generation of Process-independent
Attacks for Industrial Control Systems
author:Esha Sarkar and
Hadjer Benkraouda and
Michail Maniatakos
I came, I saw, I hacked: Automated Generation of
Process-independent Attacks for Industrial Control Systems
Esha Sarkar
Tandon School of Engineering
New York University
PI:EMAIL
Hadjer Benkraouda
Center for Cyber Security
New York University Abu Dhabi
PI:EMAIL
Michail Maniatakos
Center for Cyber Security
New York University Abu Dhabi
PI:EMAIL
ABSTRACT
Malicious manipulations on Industrial Control Systems (ICSs) en-
danger critical infrastructures, causing unprecedented losses. State-
of-the-art research in the discovery and exploitation of vulnerability
typically assumes full visibility and control of the industrial process,
which in real-world scenarios is unrealistic. In this work, we inves-
tigate the possibility of an automated end-to-end attack for an un-
known control process in the constrained scenario of infecting just
one industrial computer. We create databases of human-machine
interface images, and Programmable Logic Controller (PLC) bina-
ries using publicly available resources to train machine-learning
models for modular and granular fingerprinting of the ICS sectors
and the processes, respectively. We then explore control-theoretic
attacks on the process leveraging common/ubiquitous control algo-
rithm modules like Proportional Integral Derivative blocks using a
PLC binary reverse-engineering tool, causing stable or oscillatory
deviations within the operational limits of the plant. We package
the automated attack and evaluate it against a benchmark chemical
process, demonstrating the feasibility of advanced attacks even in
constrained scenarios.
CCS CONCEPTS
• Security and privacy → Systems security.
KEYWORDS
Industrial control systems security, Machine learning, Fingerprint-
ing, process-aware attacks
ACM Reference Format:
Esha Sarkar, Hadjer Benkraouda, and Michail Maniatakos. 2020. I came, I
saw, I hacked: Automated Generation of Process-independent Attacks for
Industrial Control Systems. In Proceedings of the 15th ACM Asia Conference
on Computer and Communications Security (ASIA CCS ’20), October 5–9, 2020,
Taipei, Taiwan. ACM, New York, NY, USA, 15 pages. https://doi.org/10.1145/
3320269.3384730
1 INTRODUCTION
Industrial Control Systems (ICS) are used to monitor and man-
age/control physical processes. ICS are often deployed in Critical
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than ACM
must be honored. Abstracting with credit is permitted. To copy otherwise, or republish,
to post on servers or to redistribute to lists, requires prior specific permission and/or a
fee. Request permissions from permissions@acm.org.
ASIA CCS ’20, October 5–9, 2020, Taipei, Taiwan
© 2020 Association for Computing Machinery.
ACM ISBN 978-1-4503-6750-9/20/10...$15.00
https://doi.org/10.1145/3320269.3384730
Infrastructures (CIs) such as nuclear power plants, chemical plants,
wastewater treatment facilities, critical manufacturing, transporta-
tion systems, etc. These systems serve wide populations and are
closely connected to everyday life. Attacks on ICS have scalable con-
sequences and can lead to severe financial losses caused by down-
time or physical damages, and can also even lead to human fatalities
[43]. The effect of ICS attacks has been heavily researched/proven
by academia and repeatedly seen in real-life attacks. Most promi-
nently, Stuxnet [12], an attack that targeted an air-gapped nu-
clear/chemical plant, caused substantial production issues from
damaged equipment while the alarm thresholds remained unaware
of the infection. Similarly, the energy sector has also been attacked,
the Ukraine blackouts being the prime example [28]. The Wan-
naCry ransomware affected ICS, causing extended downtime and
financial losses [6]. The latest incident was an attack on the Schnei-
der Electric Triconex safety instrumented system affecting a major
facility in the Middle East [11].
In the past, ICS environments were considered “secure” from
attacks originating from cyberspace because the devices in these
environments were air-gapped [7]. With the prospect of improved
efficiency and better economics, ICS environments started to con-
nect to corporate networks and the internet. This exposed ICS
environments to a plethora of cyber-attacks [20]. At the same time,
to reduce development and maintenance costs, vendors are increas-
ingly opting for the use of more Commercial Of The Shelf (COTS)
components for industrial devices [47]. General purpose computers,
for example, host many ICS components such as Human Machine
Interfaces (HMIs) and Engineering workstations that interact di-
rectly with Programmable Logic Controllers (PLCs)[43]. Therefore,
malware affecting commercial microprocessor-based devices can
be seamlessly ported to industrial environments. Regular patching,
however, is extremely challenging in industrial settings due to the
needed downtime, which in many cases could be unacceptable. Fur-
thermore, industrial devices have a lifespan of many decades. This
results in a substantial portion of these industrial processes to be
based on legacy or deprecated devices, keeping ICS environments
exposed to known vulnerabilities even after patches are released.
Although the term “ICS” is used as an umbrella term for systems
spanning many sectors, each has its own customized deployment.
State-of-the-art literature on ICS vulnerability discovery and deploy-
ment have focused on attacks that assume complete or high observ-
ability of the target [22, 25, 46]. Although these attacks provide in-
sight into the consequences of plant-wide malicious manipulations
of control and sensor data, they do not reflect realistic challenges
and scenarios. A more dangerous class of attacks is process-aware
attacks, which are operationally stealthy, customized, and result in
This is the accepted version of the article shared by the authors. The final published version will be available at AsiaCCS 2020 Proceedings.
calculated damages [44]. To design these attacks, a sector-specific
analysis has to be carried out.
In all of these approaches of security assessment of ICS, three
important considerations are missing: 1) Most attacks assume full
visibility of industrial systems or assume complete controllability
of at least one type of device (for example, all the controllers in the
plant), 2) There is minimal discussion on automation for reconnais-
sance, attack launch, and attack sustenance phases and 3) There
is a scarcity of generic attack vectors applicable to a variety of
sectors. The diverse nature of ICS inherently limits the creation of a
generic framework for its security evaluation, but we leverage the
similarities amongst ICS sectors, processes, and common control
algorithms to overcome these limitations and identify boundaries
of dynamic attacks. In our investigated scenarios, we consider an
attack with constrained access to the industrial plant. Our attack
generation begins at a single HMI Windows-based computer, which
can be reached by traditional malware. We propose a methodology
of automated reconnaissance and attack development, where the
adversary can cause stealthy process-aware attacks. We summarize
our major contributions as follows:
• ICS sector fingerprinting using HMI screenshots: We con-
structed a database of publicly available images of HMIs and
trained machine-learning models that can classify an HMI screen-
shot to be part of a certain ICS sector, thus successfully identify-
ing the industrial sector.
• ICS process fingerprinting using ICS binaries: Once the in-
dustrial sector is identified, the specific target process must be
fingerprinted. We use a database of publicly available ICS bina-
ries to train machine-learning models to identify the specific
process they control within that sector.
• Generic methodology of designing perturbation-based at-
tacks: Given a constrained attacker with partial visibility of the
process; we leverage control theory to design attacks that can be
controlled in behavior. These generic attacks target any system
that uses the widely used PID controllers while remaining within
operational points, driving the plants into sub-optimal states.
• End-to-end case study: We develop an end-to-end demonstra-
tion in Tennessee-Eastman, a benchmark chemical process, and
present the feasibility of the presented attacks.
After positioning our work in relation to the state-of-the-art in
Section 2, the rest of the paper is structured as follows:
• I came (Section 3): Describes our threat model and our assump-
tions about the attacker capabilities and entry points.
• I saw (Section 4): Describes our fingerprinting methodology
based on images captured from the HMI, as well as binaries
extracted from the PLCs.
• I hacked (Section 5): Describes a generic, control-theoretic
methodology for developing process-aware attacks assuming
limited visibility in the process.
The end-to-end case study is presented in Section 6, followed by
discussion of related defenses in Section 7.
2 RELATED WORK
To the best of our knowledge, automated reconnaissance using
HMI images, and PLC binaries has not been explored in the litera-
ture. Analysis of PLC source code [48] and binaries has focused on
disassembly, decompilation, finding vulnerabilities, ensuring the
safety of critical code, payload design, and general-purpose recon-
naissance of controllers. PLC infections can be identified from the
analysis of PLC source code, ensuring the security of safety-critical
code [49]. For payload generation, SABOT [33] gathers intelligence
from source code analysis to automatically understand what kind
of code manipulations would lead to attack goals being fulfilled. IC-
SREF [21] is an open-source framework that allows general purpose
PLC binary analysis. In all of these approaches, PLC code analysis
has not been used to fingerprint a particular process.
Table 1 summarizes the state-of-the-art process-aware attacks
and countermeasures for various ICS sectors. While there are many
sector-specific attacks for Energy [19, 23, 29], Water [1, 2, 17, 25,
31, 35], and Chemical [8, 22, 26, 46] sectors, research on generic
payload generation [17, 32, 33] is the closest to our work. We differ
from ladder logic, bombs [17] in the impact of our attack vector:
We cause specific sustainable manipulations whereas it focuses on
random manipulations. [32, 33] are more generic because they try
to dynamically perform reconnaissance while designing payload
but both of them have limitations in scope: [33] only operates on
a specific language for PLC programming, Instruction List, which
has been deprecated since 2012 and [32] gives a very high-level
discussion on how to perform attacks on Boolean type instructions.
From the table, we also see there is a scarcity of research on attacks
which are generic and have a single entry point. Finally, [8, 31,
32, 46] discuss attacks that cause damage while remaining within
the operational limits, but none of these attacks enumerate the
generic steps for launching PLC-based stealthy attack which is not
dependent on any PLC language.
ICS environments have also been exposed to real-world attacks.
Stuxnet targeted the PLCs that controlled the centrifuges of a nu-
clear plant, subsequently alternating their frequency between pre-
configured high and low thresholds to achieve physical destruc-
tion [12]. The attackers also remained stealthy by spoofing the
sensor data that connects to the SCADA to report normal operation.
[28] describes the attack on the Ukrainian power grid, where the
adversaries used HMIs in the SCADA system to open the circuit
breakers and malicious firmware on serial-to-ethernet devices that
ensured that remote commands from operators were disabled. The
attackers in Havex inject the target with malicious code that allows
data collection such as stealing credentials, taking screenshots and
file transfers [37]. This attack can be considered as a reconnaissance
attack. An attack on a German steel-mill is known to have infected
a controller and impacted its furnace [36]. Trisis gains access to a
Schneider Electric’s Triconex safety instrumented system (SIS) PLC
and aims to change its ladder logic [11].
We observe from the real-world attacks that an adversary may at
most infect a single device initially, differing from the academic lit-
erature which assumes extensive knowledge, visibility, and control
over the process. A real-world attack called Havex [37], is the only
known attack that assumes no knowledge of the sector/process
(rows 4,5 in Table 1), but it is only a reconnaissance malware with
no dynamic payload generation (rows 10,11,12 in Table 1).
3 THREAT MODEL
As mentioned earlier, most of the attacks in the ICS research liter-
ature either assume extensive observability and controllability of
This is the accepted version of the article shared by the authors. The final published version will be available at AsiaCCS 2020 Proceedings.
[1]
[2]
A
W
●
●
CN,
SC, S
●
(cid:71)(cid:35)
●
○
●
○
S
●
○
○
○
●
○
●:S ○
Our
work
A
G
○
○
●:P
(cid:71)(cid:35)
P
○
●
○
●
○
○
[26]
A
C
●
[31]
A
●
[33]
A
G
●
[32]
A
G
●
[29]
A
E
●
●
[37]
R
E
○
○
[36]
R
G
●
●
[15]
A
E
●
●
[19]
[17]
A
A
W W E
●
●
●
●
[46]
A
G
(cid:71)(cid:35)
○
(cid:71)(cid:35)
P, A P, A,
S
●
●
●
●
●
●
○
○
●
○
Work
Real/Academic
Sector demonstrated on
Target sector knowledge
Target process knowledge
(cid:71)(cid:35)
Point of infection