worse than the LRT rule. The AND rule has a nearly stable cost in
Figure 3(a). The reason is because it has the lowest false positives
so that a slight change of the cost of F P does not have a signiﬁcant
effect. In many scenarios, the OR rule performs as well as the LRT
rule (as shown in Figure 3(b)), but it does not perform well when
the cost of F P is larger than 4, as indicated in the right part of
Figure 3(a). In some cases, the OR rule outperforms LRT (left part
of Figure 3(a)). Some possible reasons are as follows:
1. The four IDSs are not ideally independent. If we use Eq(5)
and assume independence, we may obtain incorrect joint
conditional density of P ((cid:126)Y |Hi) when this assumption does
not hold.
2. The KDD data set is ﬂawed [36, 35] as we mentioned before.
In addition, the distribution of the testing data is greatly
different from that of the training data. And the base rate
in the testing data set is too high (P1 = 0.8, which is unreal
because we know in practice the fraction of intrusion among
all data is very low [4]). Since the OR rule can greatly
improve the detection rate (reduce false negatives), and since
140
most of the testing data are anomalous, the OR rule can
achieve good performance in KDD data set. However, the
OR rule also increases the false positives, thus, when the cost
of false positive increases, it will cause very high overall cost
as indicated in the right part of Figure 3(a).
Due to these reasons, our experiments with the KDD data set
could be considered as a bad (if not the worst) situation. Yet the
LRT technique still achieved good results. Thus, the experiments
still conﬁrm that LRT is an effective cost-aware fusion rule (even
when the independent assumption may not hold well) and performs
the best in most of the risk scenario cases.
Having noticed the ﬂaws of the KDD data set, we conducted
another experiment by replacing KDD data set with a real network
trafﬁc trace. At the same time, we also used some real IDSs instead
of machine learning based IDSs.
4.2 Experiment Using Real IDSs on Real
Traces
We collected a real trace at a Web server in our campus network.
The trace contains about 30 minutes HTTP trafﬁc, around 5 million
packets. We divided the trace into two halves, one for training (for
anomaly IDSs), and the other for testing. And we injected HTTP
attacks into the testing set, using tools such as libwhisker [42].
Finally we got a testing set with base rate P1 = 0.00082, which
is relatively realistic [4].
We constructed the IDS ensemble using three real IDSs,
namely, Snort [43] version 2.3, NetAD (Network Trafﬁc Anomaly
Detector, [34]), and PAYL (Payload Anomaly Detection, [50]).
Snort is a packet level signature based NIDS. NetAD and PAYL are
two packet level anomaly based IDSs. PAYL uses byte frequencies
in the payload as the normal proﬁle. NetAD calculates a score
based on selected ﬁelds in the ﬁrst 48 bytes (of which 40 bytes are
in IP and TCP header, 8 bytes are in the payload) of each packet.
If this score exceeds a threshold, then an intrusion alert is issued.
Since the original code of NetAD is speciﬁc to the DARPA data set,
we did a few small modiﬁcations and set the rate limiting using 5
second time window instead of 1 minute. Clearly, these three IDSs
are very different in their feature sets and detection algorithms. We
expect these differences would demonstrate a strong evidence of
diversity and independence (but we cannot formally prove it).
Table 2 shows the accuracy of these three IDSs and some fusion
rules (except the LRT rule, which again requires cost factors to
deﬁne the threshold). We can see that these three IDSs have
different performance in terms of their F P and F N. PAYL
detected most of the attacks, and Snort produced the least false
positives. For the fusion rules, similar to the result from the
previous experiment, the AND rule obtains the lowest overall false
positive rate but the worst detection rate (zero in this case). The
OR rule achieves the highest detection rate as well as the highest
false positive rate. The MAJ and VOT rules are still identical in
the experiment (although VOT assigns different weight to different
IDS, it still generates the identical combinational decision result as
MAJ in our data set). Thus, we only show the result of VOT rule.
The overall cost of running different fusion rules on the alerts
02468102.22.42.62.833.23.43.63.8x 104C01CtotalANDOR VOTLRT024681000.511.522.533.5x 105C10CtotalANDOR VOTLRTTable 2: Accuracy of each detector and fusion rule (ensembling three real IDSs)
VOT
0.1198
MAJ
0.1198
Snort
0.016
AND
0
PD
PF

0.0000237
0.00082758
PAYL
0.99896
0.00336
0.0034
NetAD
0.1037
0.004
0.0047
OR
0.999
0.007
0.007
0.0000025
0.00082
0.00035667
0.00035667
0.0011
0.0011
generated by these three real IDSs are shown in Figure 4. We
manipulate the cost factors to demonstrate various risk scenarios.
(a) Fix the cost of F N
(C10 = 1) in all the cases,
change the cost of F P (C01).
(b) Fix the cost of F P
(C01 = 1) in all the cases,
change the cost of F N (C10).
Figure 4: Total cost for different rules in different risk scenar-
ios (ensembling three real IDSs). The LRT rule outperforms
other rules (it obtains low overall cost in most of the scenarios.)
From Figure 4(a), we can see that the AND rule achieves similar
stable performance as the LRT rule when the cost of F P is greater
than the cost of F N. This is because the AND rule can greatly
reduce false positives, and thus reducing the total cost (a similar
reason discussed above). However, the AND rule also reduces the
detection rate; thus, when the cost of false negative increases, it will
still cause high total cost (as shown in Figure 4(b)). The OR rule no
longer performs well in this experiment. It keeps a relatively stable
cost in Figure 4(b) because it has a very low false negative rate;
and thus, the slight change of the cost of F N does not signiﬁcantly
affect the total cost. In this experiment, the LRT rule again obtains
the lowest total cost in most of the risk situations. We conclude that
the LRT rule outperforms other methods in achieving lower cost in
our evaluation.
Note that in this experiment, we have a realistically low base
rate (i.e., P1 = 0.00082), compared to the higher base rate in the
previous experiments using KDD data. Except for the LRT rule,
none of other methods can obtain low cost in both experiments.
This means the LRT rule is adaptive to the base rate.
It is also
adaptive to the setting of cost factors. Whatever the cost factors
are (whatever the risk scenarios are), it always achieves very low
overall cost in our experiments, while other fusion techniques
cannot.
5. FORMAL
INTERPRETATION AND
LRT
THE
REASONING ABOUT
ENSEMBLE
In this section we introduce a formal interpretation to analyze the
LRT ensemble rule. To present also the intuition behind the LRT
ensemble rule, we make use of receiver operating characteristic
(ROC) curves. The ROC curve is a two dimensional graph that
shows the performance of a detector in terms of its false alarm rate
PF (in the x-axis), and its detection rate PD (in the y-axis). We say
141
that an ROC curve deﬁned by the probability of detection f1(x)
(where x is a given probability of false alarm) dominates an ROC
curve deﬁned by f2(x) if for every x, f1(x) ≥ f2(x).
The relationship between the ROC curves and the expected cost
function deﬁned in Eq. (1) has been studied in the context of
intrusion detection in [9]. In particular it is known that the lines
with the same expected cost in the ROC space can be represented
as lines with slope
τ =
C01P0
C10P1
.
(6)
Note that τ as deﬁned in Eq. (6) is also the threshold for the rule in
Eq. (3). This dual nature of τ will help us understand the intuition
behind the LRT ensemble rule.
This relationship between ROC curves and the expected cost
implies that the ensemble rule that minimizes the expected cost for
any ﬁxed costs (C01 and C10) is an ensemble rule that is part of an
optimal ROC curve (i.e., an ROC curve that dominates any other
ROC curve achievable as a function of ensemble rules).
In this
section, we show how to derive this optimal ROC curve using the
LRT ensemble rule.
5.1 Understanding the LRT Rule
First, we consider the simple case when we have two IDSs
available and want
to obtain the optimal ensemble from the
information available from the two. Assume the performance of
IDSi is (PF i, PDi), where i ∈ {1, 2}. In Figure 5 we can see the
ROC curves for two IDSs that we will use in the remaining of this
section.
Figure 5: IDSi is represented as a point (PF i, PDi). Any point
below the dotted lines is suboptimal (i.e., it never minimizes the
expected cost function).
Let
l((cid:126)Y ) =
P ((cid:126)Y |H1)
P ((cid:126)Y |H0)
(7)
So for example,
l(00) =
(1 − PD1)(1 − PD2)
(1 − PF 1)(1 − PF 2)
0510152000.511.522.533.5x 105C01CtotalANDOR VOTLRT0510152000.511.522.533.54x 104C10CtotalANDOR VOTLRT0101PFAPDIDS1IDS2and
l(10) =
PD1(1 − PD2)
PF 1(1 − PF 2)
Assuming PF i < PDi, it is easy to show that the likelihood
function l satisﬁes the following partial order l(00) < l(10) <
l(11) and l(00) < l(01) < l(11). A graphical representation can
be seen in Figure 6(a).
This probability under H0 equals PF = PF 1PF 2, and under
H1 equals PD = PD1PD2. This operating point for the LRT
ensemble can be interpreted as the AND rule, since the LRT
ensemble will only output an alarm if both, IDS1 and IDS2
have output an alarm. An example of this operating region
can be seen in Figure 7(d).
• For l(11) ≤ τ ≤ ∞, the LRT ensemble will never output an
alarm. Therefore, (PF , PD) = (0, 0). An example of this
operating region can be seen in Figure 7(e).
The result of this analysis can be seen in Figure 7(f). Depending
on τ, there are ﬁve different operating points for an LRT ensemble
of two IDS. Output no alarm, Apply the AND rule, Choose IDS1
(in this case), Apply the OR rule, and Always output an alarm. We
can see in this plot that the operating point of IDS2 is suboptimal
and therefore it cannot minimize the expected cost function. Notice
also that for the same false alarm rate as IDS2, a randomization
between the OR rule and IDS1 achieves a better probability of
detection.
Note also that since the LRT ensemble depends on τ, it is not
a ﬁxed rule but a rule that depends on the costs and the base rate.
For example, the AND ensemble rule is only optimal for costs and
base rates such that max{l(01), l(10)} ≤ τ ≤ l(11). Similarly,
the OR ensemble rule is only optimal for costs and base rates such
that l(00) ≤ τ ≤ min{l(01), l(10)}. Therefore, as we change the
costs and the base rate, we expect the optimal operating point of
the LRT ensemble to be shifting among several points to minimize
the overall cost function, while other ensemble rules can only hope
to minimize the cost function for a very small range of operating
conditions.
A similar analysis can be done for the combination of more
than two IDSs. For example for the ensemble of three IDSs, the
AND ensemble rule corresponds to τ < l(111) but greater than
the likelihood containing two alerts, and the OR ensemble rule
corresponds to τ greater than l(000) but smaller than any likelihood
containing at least two alerts. With more than two IDSs we can
also analyze the the majority rule, which can initially be thought
to be the operating point in the LRT ensemble that minimizes
the expected cost function for τ greater than any likelihood
with a minority of alarms and smaller than any likelihood with
a majority of alarms (max{l(001), l(010), l(100)} < τ <
min{l(011), l(101), l(110)}).
However, the partial order shown in Figure 6(b) shows that in
this case the above equation might not always hold. For example,
when l(101) < l(010), we should believe more if there is an alarm
from IDS2 alone, than when the other IDSs output an alarm and
IDS2 does not.
Finally, it is important to point out that even in the case when the
costs C01 and C10 are unknown, the LRT ensemble rule can be used
by trying different threshold values τ. By selecting different values
of τ, the LRT outputs 2n different ensemble rules. We emphasize
that the LRT rule can be used even if we do not know the costs or the
base-rate; furthermore, even in this case, we still obtain theoretical
performance guarantees.
Neyman-Pearson theory [38] states that the LRT for some ﬁxed
τ is a more powerful test for its size; therefore, no other test has
higher probability of detection for the same bound on the false
alarms. The operator of an IDS can then select the appropriate
τ based on the performance of the ensemble rules, while having a
principled guarantee that by tuning τ, the optimal tradeoff between
false alarms and detection rates is achieved.
This 2n optimal rules considered by the LRT test are a signiﬁcant
reduction from the set of all possible ensemble rules. To quantify
(a) Partial order of the like-
lihood function for the com-
biation of two IDSs.
(b) Partial order of the like-
lihood function for the com-
bination of three IDSs.
Figure 6: Partial order of the likelihood function for the
combination of IDSs
Given the above partial order for l, there are ﬁve regions for τ in
[0,∞) with different optimal rules (examples shown in Figure 7):
• For 0 ≤ τ ≤ l(00), it is clear from Eq.
(3) that the
IDS ensemble will always output y0 = 1. Therefore the
performance of the ensemble rule is (PF , PD) = (1, 1).
This operating point can be interpreted as an ensemble that
always outputs an alarm, no matter what the decision of each
individual IDS is. An example of this operating region can
be seen in Figure 7(a).
• For l(00) ≤ τ ≤ min{l(01), l(10)},
(cid:104)