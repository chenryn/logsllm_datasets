sequences  of  events.  Signature  release  times  were  for  the  Snort  network  intrusion
detection  system  and  vulnerability  scanner  rule  times  were  for  the  Nessus  security
scanner.  It  is  expected  that  this  order  of  events  will  continue  and  that  intrusion
detection  signatures  and  rules  to  scan  for  vulnerabilities  will  be  distributed
simultaneous with the public disclosure of new vulnerabilities or only slightly after.
This  makes  it  possible  to  protect  against  exploits  that  use  new  vulnerabilities  by
scanning a site to detect vulnerable hosts and installing software patches whenever a
new  vulnerability  is  announced.  Such  a  strategy  would  minimize  the  “window  of
vulnerability”  where  a  host  is  susceptible  to  exploitation  using  a  new  known
vulnerability.  As  noted  above,  it  would  also  mean  that  there  would  never  be  a
“window of visibility” where a network  intrusion  detection  system  using  signatures
detects successful remote-to-local attacks. One limitation of this analysis is that few
attacks were examined and non-malicious security groups or individuals discovered
all  attacks.  Even  if  vulnerabilities  were  discovered  and  exploited  by  a  malicious
group,  the  analysis  suggests  that  software  developers  would  develop  and  release
patches  soon  after  these  “in-the-wild”  exploits  were  discovered  and  that  intrusion
detection signatures would be provided simultaneously with patches. This work also
only  analyzed  signature  and  rule  development  dates  for  one  network  intrusion
detection  system  and  one  vulnerability  scanner.    Since  highest  priority  is  normally
placed on developing patches, it  is  likely  that  similar  results  would  be  obtained  for
other intrusion detection systems and scanners.
The strategy of installing patches as soon as they are available was demonstrated to
be  practical  for  small  numbers  of  hosts  in  DMZ’s  because  the  discovery  rate  for
major vulnerabilities of Internet server software packages was shown to range from
zero to seven per year. With three or four server software packages in a DMZ, serious
security software patches may be required at most a few times a month. On such well-
protected  sites,  network  intrusion  detection  systems  should  never  detect  successful
remote-to-local  attacks.  They  could,  however,  serve  as  a  backup  and  provide  some
“defense in depth.” They can verify that patches are installed correctly by detecting
failed  remote-to-local  attacks  (probes),  detect  DoS  attacks,  and  provide  situation
awareness by detecting scans.
Intrusion  detection  systems  are  more  useful  on 
large  sites  with  known
vulnerabilities. It is often necessary to use hosts with known vulnerabilities because it
may  be  too  costly  or  time  consuming  to  update  all  the  required  software,  because
324         R. Lippmann, S. Webster, and D. Stetson
using  vulnerable  software  may  be  the  only  solution  to  satisfy  operational  or
compatibility  requirements,  or  because  no  centralized  authority  is  available  to  scan
and enforce a security policy across all vulnerable hosts. On sites containing systems
with known vulnerabilities, network intrusion detection systems can detect successful
system  compromises,  but  this  requires  constant  monitoring  and  labor-intensive
analysis  of  thousands  of  alerts  per  day  caused  by  failed  attacks  and  normal
background  traffic.  An  analysis  of  alerts  from  the  Snort  intrusion  detection
demonstrated  that  knowledge  of  the  operating  system,  software  packages,  and
vulnerabilities of monitored hosts provides information that can be used to prioritize
these  alerts.  Of  roughly  830  remote-to-local  alerts  that  occurred  each  day,  95%
corresponded  to  vulnerabilities  that  did  not  exist  on  a  site  with  roughly  10  web
servers and could be categorized as low priority alerts. This left only 5% or roughly
40  high  priority  alerts  per  day  that  could  have  been  caused  by  successful  system
compromises. Prioritization didn’t require knowing all details such as patch levels of
all software running on monitored  hosts.  It  often  required  only  being  able  to  prove
that  the  host  isn’t  susceptible  to  a  vulnerability  by  knowing  that  is  is  not  using  a
specific operating system (e.g.  it  is  not  UNIX)  or  that  it  is  not  running  a  particular
server  extension  (e.g.  it  is  not  running  FrontPage).  Useful  prioritization  does  not
necessarily  require  maintenance  of  a  large  database  including  detailed  patch  level
information.  It requires lists of the identities of monitored hosts, of their  operating
systems,  and  of  server  software.  Even  knowledge  of  operating  systems  and  major
server types can help prioritize alerts.
In summary, vulnerability scanning and applying software patches should always
be a component of site security. On small sites, such as small DMZ networks, these
tactics can make network intrusion detection systems serve a secondary role because
vulnerabilities can be patched before intrusion detection systems have new signatures
required to detect attacks. On large sites, it is too expensive to patch all systems and
network  intrusion  detection  systems  can  serve  a  useful  function  by  detecting
successful compromises. On such sites, information on vulnerabilities and protected
hosts is required to prioritize alerts and focus on those that might represent successful
exploitation of known vulnerabilities. 
11   Limitations and Future Work
  Further  analyses  can  be  performed  to  explore  the  interrelationships  between
vulnerability  scanning,  software  patching,  gathering  information  on  protected  hosts
and intrusion detection. This paper was limited to known attacks, primarily to remote-
to-local  attacks,  and  to  network  intrusion  detection  systems  that  use  signatures  to
detect  known  attacks.  Conclusions  do  not  apply  to  network  intrusion  detection
systems that detect novel new attacks without signatures. Such systems could provide
an early warning function by guiding forensic analysis of new attacks that could lead
to  new  patches  and  signatures  to  block  and  detect  future  exploitation  of  newly
detected  vulnerabilities.  As  noted  above,  further  remote-to-local  attacks  could  be
The Effect of Identifying Vulnerabilities and Patching Software         325
analyzed  and  timeline  information  could  be  obtained  for  other  intrusion  detection
systems and vulnerability scanners. Such new results are unlikely to change the major
conclusions except when patches are so difficult to develop that they are distributed
after signatures are available.
Some  of  our  current  work  focuses  on  passive  analysis  of  network  traffic  to
determine host information required to filter alerts. Passive analysis can provide a list
of protected hosts and alert analysts to newly installed unauthorized hosts that may be
running  software  with  known  vulnerabilities.  It  might  also  be  able  to  provide
information concerning operating systems and server software by examining software
banners and packet headers.
Acknowledgements. We would like to thank Mike Wilson, Hermann Segmuller, and
Gene  Solloway  for  helping  analyze  Snort  intrusion  detection  alerts  and  both  Marc
Zissman and Peter Heldt for advice and administrative expertise.
References
1. Arbaugh, W.A., W.L. Fithen, and J. McHugh, Windows of Vulnerability: A Case Study
Analysis, IEEE Computer, 2000. 33,(12), 52-59, 
http://www.cs.umd.edu/~waa/pubs/Windows_of_Vulnerability.pdf.
2. CAIDA, Code-Red Worms: A Global Threat, Cooperative Association for Internet Data
Analysis (CAIDA), 28 November 2001, http://www.caida.org/analysis/security/code-red/.
3. Chien,  E.,  W32.Nimda.A@mm  Worm,  Symantec  Corporation,  18  September  2001,
http://www.symantec.com/avcenter/venc/data/w32.nimda.a@mm.html.
4. CVE,  Common  Vulnerabilities  and  Exposures,  The  MITRE  Corporation,  2002,
http://www.cve.mitre.org/.
5. Dayioglu,  B.  and  A.  Ozgit,  Use  of  Passive  Network  Mapping  to  Enhance  Signature
Quality of Misuse Network Intrusion Detection Systems, in Proceedings of the Sixteenth
International Symposium on Computer and Information Sciences, 2001, 
http://www.dayioglu.net/publications/iscis2001.pdf.
6. Dittrich,  D.,  Distributed  Denial  of  Service  (DDoS)  Attacks/tools,  University  of
Washington, Seattle, 2001, http://staff.washington.edu/dittrich/misc/ddos/.
7. Dougherty, C., S. Hernan, J. Havrilla, J. Carpenter, A. Manion, I. Finlay, and J. Shaffer,
CERT  Advisory  CA-2001-11  sadmind/IIS  Worm,  CERT  Coordination  Center,  8  May
2001, http://www.cert.org/advisories/CA-2001-11.html.
Fearnow,  M.  and  W.  Stearns,  Lion  Worm,  SANS  Institute,  29  March  2001,
http://www.incidents.org/react/lion.php.
Forristal, J. and G. Shipley, Vulnerability Assessment Scanners,  Network  Computing,  8
January 2001, http://www.networkcomputing.com/1201/1201f1b1.html.
8.
9.
10. Hassell, R., R. Permeh, and M. Maiffret, UPNP - Multiple Remote Windows XP/ME/98
Vulnerabilities, eEye Digital Security, 20 December 2001,
http://www.eeye.com/html/Research/Advisories/AD20011220.html.
Internet  Software  Consortium,  ISC  Berkeley  Internet  Name  Domain  (BIND)  Domain
Name System (DNS), January 2002,  http://www.isc.org/products/BIND/.
11.
326         R. Lippmann, S. Webster, and D. Stetson
12. Lestat, M., The Ramen Worm and its use of rpc.statd, wu-ftpd and LPRng Vulnerabilities
in Red Hat Linux, SANS Institute, 7 February 2001,
http://rr.sans.org/malicious/ramen.php.
13. 13. Lippmann, R.P., J.W. Haines, D.J. Fried, J. Korba, and K. Das, The 1999 DARPA off-
line intrusion detection evaluation. Computer Networks, 2000. 32: pp. 579-595.
14. Mell, P. and T. Grance, The ICAT Metabase CVE Vulnerability Search Engine, National
Institute of Standards and Technology, January 2002, http://icat.nist.gov.
15. Mueller, P. and G. Shipley, To Catch a Thief, Network Computing, 2001, 
http://www.networkcomputing.com/1217/1217f1.html.
16. Netcraft Web Server Survey, Netcraft Ltd., Bath England, October 2001,
http://www.netcraft.com/survey/index-200110.html.
17. Nessus, The Nessus Security Scanner, 2002, http://www.nessus.org.
18. NSS  Group,  Intrusion  Detection  Systems  Group  Test  (Edition  2),  Oakwood  House,
Wennington, Cambridgeshire, England, December 2001, http://www.nss.co.uk/ids/.
19. Power,  R.,  2001  CSI/FBI  Computer  Crime  and  Security  Survey,  Computer  Security
Institute, Spring 2000, http://www.gocsi.com/forms/fbi/pdf.html.
20. Ptacek,  T.H.  and  T.N.  Newsham,  Insertion,  Evasion,  and  Denial  of  Service:  Eluding
Network Intrusion Detection. Secure Networks, Inc., 1998, 
http://secinf.net/info/ids/idspaper/idspaper.html.
21. Roesch,  M.  Snort  -  Lightweight  Intrusion  Detection  for  Networks,  in  USENIX  13th
Systems Administration Conference - LISA '99. Seattle, Washington, 1999, 
http://www.snort.org.
22. SANS, The Twenty Most Critical Internet Security Vulnerabilities (Updated).  Bethesda,
MD,  System Administration, Networking, and Security (SANS) Institute, 2001, 
http://www.sans.org/top20.htm.
23. SANS,  NIMDA  Worm/Virus  Report  –  Final,  System  Administration,  Networking,  and
Security (SANS) Institute, October 2001, http://www.incidents.org/react/nimda.pdf.
24. Spitzner, L., Know Your Enemy: Passive Fingerprinting, Honeynet Project, January 2002,
http://project.honeynet.org/papers/finger/.
25. Yocom,  B.,  K.  Brown,  and  D.V.  DerVeer,  Review:  Intrusion-Detection  Products  Grow
Up, Network World Fusion, 2001, http://www.nwfusion.com/reviews/2001/1008rev.html.
Author Index
Apap, Frank
36
Lippmann, Richard 307
Balwalli, Niranjan 252
Bidan, Christophe
292
Cabrera, Jo˜ao B.D.
Clough, Larry A.
Coit, Jason 17
Cui, Yun 74
252
158
Danforth, Melissa
Debar, Herv´e
Donoho, David L.
Ducass´e, Mireille
158
115, 177
17
115
Eskin, Eleazar
36
Flesia, Ana Georgina
Fong, Martin W.
95
17
Goldman, Robert P.
Gorodetski, Vladimir
199
219
239
Hall, Mike
Hershkop, Shlomo
Honig, Andrew 36
36
Johnston, Steven R.
158
Just, James E.
138
Killourhy, Kevin S.
Kotenko, Igor
219
Kruegel, Christopher
54
274
Lee, Wenke
Levitt, Karl N.
252
158
Maglich, Ryan 158
Maxion, Roy A.
54
M´e, Ludovic
Morin, Benjamin 115, 177
115, 292
Ning, Peng
74
Paxson, Vern 17
Porras, Phillip A.
95
Reeves, Douglas S.
Reynolds, James C.
Rowe, Jeﬀ 158
74
158
Saluja, Sunmeet
252
Shankar, Umesh 17
Staniford, Stuart
17
Stetson, Douglas
307
Stolfo, Sal
36
Tan, Kymie M.C.
Thomas, Ashley
Toth, Thomas
274
54
252
Valdes, Alfonso
95
Webster, Seth 307
Wiley, Kevin 239
Yung, Kwong H.
1
Zhang, Yi
Zimmermann, Jacob 292
252