，而且更倾向于全备+增备结合的方式。
一个数据库活动，对数据库操作进行
警
第1章MySQL发展和技术选型丨15
是借助于审核工具来
---
## Page 38
16丨MySQL DBA工作笔记：数据库管理、架构优化与运维开发
(innotop-gtid），推荐使用稳定版，使用截图如下图1-12 所示。
务器和 InnoDB 的运行状况，
1.4.4
Redis 数据库，在慢日志的功能设计方面也很有亮点。
库的实时健康和各种性能指标进行全方位的监控,它可以支持 MySQL、Oracle,MongoDB、
集监控和报警于一身，在互联网行业使用比例很高。
性能变化，在此我们需要使用一些性能监控工具来完善。
核心的CPU中每个CPU的统计数据。
集方面使用广泛。
监控不是完全依束
1.4.3
如 XML、YAML、JSON、SQL 等。
移的开源工具，通过日志文件的形式记录数据库的变更，目前日志文件支持多种格式，
这是一款用 Perl 所写的MySQL监控工具，可以通过命令行模式调用展示 MySQL 服
1．诊断工具
Lepus 由国内 DBA 开发，是基于 PHP 开发的开源数据库监控管理系统，可以对数据
（2）Lepus（天兔）
Multiprocessor Statistics 的缩写，
（2）Mpstat
nmon 是由 IBM 提供、免费监控 AIX 系统与Linux 系统资源的工具，在系统数据采
（1）nmon
操作系统监控属于基础监控，在这里主要是基于操作系统层面的监控，和 MySQL的
（1）innotop
一个基于 Web 界面，提供分布式系统监视以及网络监视功能的企业级开源解决方案，
（1）Zabbix
性能监控工具在行业里已然非常成熟，
2.性能监控工具
1.操作系统监
一个收集 MySQL 信息的 Python 守护进程，并通过 StatsD 发送到 Graphite。
诊断和优化工具
监控管理类工具
赖
控
，下载地址为：https://github.com/innotop/innotop。
是实时监控工具，Mpstat 最大的特点是可以查看多
因为有时候会碰到服务或者其他因素导致的
---
## Page 39
1-14所示。
户和正在执行的命令。
也有一些磁盘和CPU的监控。使用截图如下图1-13所示。
ave22
这款工具是Linux下的动态跟踪工具，可以监控、跟踪运行中的程序或Linux 内核操
（5）systemtap
这是一款可以查看 MySQL 数据库实时运行的 SQL状况的工具，如果你习惯于用
（4）orztop
这是一款类似 Linux下的 top 命令风格的 MySQL 监控工具，可以监控当前的连接用
（3）mytop
orzdba是淘宝 DBA 团队开发出来的一个 Perl 监控脚本，可以监控 MySQL 数据库，
（2）orzdba
20.160.1
FLle
Host
etent,sched
Sni
Master UUID
Ueer
DB
图1-14
图1-13
图1-12
Ti
TE
http:A/blog.csdn.net7rba _waterbin
第1章MySQL发展和技术选型|17
7
3957
一
---
## Page 40
18丨MySQLDBA工作笔记：数据库管理、架构优化与运维开发
digest，Anemometer 可以很轻松地分析慢查询日志，找到哪些 SQL需要优化。
工具相比，py-query_digest 工具的分析结果更具体，更完善。
询语句的监控、分析、优化，是MySQL 优化的一个初始版本。相对来说，功能支持比较少。
客户端访问 MySQL 来执行压力测试。
1.4.5
化压测。
层面，产品隶属于Percona。
能经受住考验。测试之后，我们可以得到压测的数据结果，作为后续上线的基准参考。
能问题。
作，它带来的性能损耗很小，在一些特定的场景下可以编写 systemtap 脚本来调试一些性
同
一个人，现在是主打pt 系列工具，
经典的慢日志分析工具,属于pt工具的一个子集。它基于Perl开发,与mysqldumpshow
MySQL自带的基准测试工具，自MySQL5.1.4版开始推出，可以通过模拟多个并发
（1）运维管理工具主要考虑Percona-toolkit，作为默认的初始化软件使用。
（2）pt-query-digest
这是MySQL产品包中的一个原生命令工具，它可以支持慢查询的统计分析，对MySQL查
（4） mysqlslap
（2）数据备份恢复工具目前还是以现有的备份恢复体系为主，采用 xtrabackup 和
（3）mysqlsla
（1） mysqldumpslow
3．慢日志分析工具
该工具由知名数据库专家楼方鑫先生开发，免安装，上手快，可以针对业务做定制
(3）Mydbtest
该工具是Percona 按照 TPC-C 开发的产品，主要用于 MySQL 的压测。
（2）tpcc-mysql
一款主流的性能测试工具，
(1) Sysbench
行业中性能测试工具主要有以下几类：
业务上线，环境初始化需要做拷机测试；目的就是让服务器先吃点“苦头”，看能不
2. 性能测试工具
一个图形化显示 MySQL 慢日志的开源项目，基于 PHP 开发，充分结合了 pt-query-
(4）Anemometer
初步结论
本身是开源的，具备多线程压测能力，覆盖硬件和软件
现在已经不再维护了。
---
## Page 41
1.5.1常见的三种安装方式
下的安装方式有所差别，但是从难度上来说，还是比较容易上手的。
1.5
插件功能全面，优先选用。
Audit，目前定位为 DDL 敏感、root 用户敏感；根据后期的测试，MariaDB 的 Server Audit
做辅助测试，主要目标是通过压测的部分得到一些关键的参考指标（IOPS、TPS、QPS）等。
（IO、CPU、MEM）等，压测 MySQL，历时至少一周。在这个基础上使用 tpcc-mysql,mydbtest
作文档。
否复用，对于日志系统的部分可以考虑使用分布式存储和解析方案。
需要向系统部提需求定制。
自行定制 mysqladmin 来满足需求，orztop 可以作为环境初始化的软件。
移的改进。
备份，保留3天，即可达到基本的数据恢复需求。
mysqldump 结合的方式。
（8）MySQL 审计工具建议选用Percona 的审计插件 Audit Log 和 MariaDB 的 Server
（3）MySQL实时状态分析工具可使用orzdba和orztop，其中orzdba的内容可以通过
了一注：mydumper 和 myloader 的适用场景也比较广，可以作为一些备份恢复方案或者迁
（7）性能测试工具主要使用 sysbench 在业务上线，环境初始化中做拷机测试，压测硬件
（6）客户端工具使用 workbench，推荐开发同学使用workbench，需要内部整理出操
（4）操作系统监控工具使用 nmon 收集历史数据，mpstat 得到实时的系统监控数据.
（1）rpm 安装：可以通过官网下载对应的 rpm 包，直接通过 yum 的方式来安装，这
MySQL 安装的工作相对简单快捷,在Windows下可以完全实现图形化管理。在Linux
（1）常见的三类安装方式
本小节会从以下几个维度来解读安装：
在这个基础上在每个机房再申请一台 binlog 备份机,通过xtrabackup 每日全备,binlog
·mysqldump 备份数据字典库，比如 mysql，每日全备，保留7天备份集。
·xtrabackup 通过物理备份，每日全备，保留7天备份集，版本建议为2.4.8;
（4）搭建MySQL从库
（3）
（2）MySQL安装规范
MySQL 安装
安装部署实践
第1章MySQL发展和技术选型丨19
---
## Page 42
20丨MySQL DBA工作笔记：数据库管理、架构优化与运维开发
以.tar.gz为后缀名的文件，可以自行下载，假设我们解压后放到了 mysql5.7这个目录下，
本中开始，之前安装的时候，虽然最后也能成功，但是这一块就比较乱。二进制包是
1.5.3MySQL5.7安装部署实践与总结
文件和临时文件。
以按照文件的类型做一些目录的拆分，比如上图就把文件分为了三类：数据文件、日志
/data/mysql_4306就是端口为4306的MySQL实例所在的数据目录，在数据目录下，还可
的规划制定一个根目录，比如/data，然后会根据端口的规范放在指定的目录下，比如
分区存放，以提高性能。
数据要分离开，这样能够减少彼此之间的耦合，同时建议把数据目录、日志目录分不同
1.5.2MySQL安装规范
适用。
这种方法对环境的依赖较高，通过批量安装的方式耗时难以控制，作为环境调试比较
绍该方式。
赖的环境软件了。安装会变得更加轻量，软件包解压就可以基本实现，本小节会着重介
种方式实际中使用的比例不高，主要是因为 yum 安装的路径和配置难以定制化。
一环境的配置，方便定位和管理MySQL，我们需要对MySQL 的安装做一下统一的规范。
，（2）二进制安装：官方可以下载编译软件包，有了这个软件包就不需要额外准备依
（3）源码安装：通过对指定的环境配置适用的软件环境，进行源码的编译安装，
首先就是安装路径和数据路径分离，这一点尤其重要。当然，不是从 MySQL 5.7版
通常，我们会把 MySQL 软件目录放在/usr/local/mysql下，对于数据目录是根据公司
MySQL安装规范如下图1-15所示。
简单来说，
MySQL 本身没有明确的安装规范，在工作中会碰到各种奇怪的环境问题，为了能够统
我们的规范会聚焦在软件安装目录和数据目录上，核心思想就是软件和
软件安装目录
数据目录
/data/mysql_[port]
/usr/local/mysql
图1-15
/data/tmp
/data/log
/data/data
---
## Page 43
在这个基础上改进，或者基于现有项目的模板也可以。
令行工具。
这是不规范的，我们应该把它放到/usr/local下，这里才是大本营。
basedir=/usr/local/mysql
# mv /tmp/mysql5.7 /usr/local/mysql
完成之后先不要急着 service mysql start，肯定会有下面的问题;
character-set-server =utf8
·涉及服务器端的字符集配置
loose-default-character-set = utf8
·涉及客户端的字符集配置
这个地方还是需要设置字符集，可以参考如下方式：
cp $basedir/support-files/my.cnf.nor /etc/my.cnf
然后我们来做几件事情，先来设置参数文件，可以从 support-files 里面复制一个模板，
其实看看这些步骤，如果全是手动档，其实也可以，这样就是为了方便，统一管理。
设置 MySQL 自启动。
chown
而下面的设置就是创建一些软连接，是/usr/bin 中可以正常访问 mysql 的几个常用命
cp -rf $basedir/support-files/mysql.server /etc/init.d/mysql
然后从 support-files 里面复制启动脚本，放到自启动设置中。
这个就是老套路了。
/usr/sbin/useradd mysql
chattr -i /etc/shadow /etc/group /etc/gshadow /etc/passwd
初始化系统环境，比如创建用户，组之类的。
datadir=/home/mysql
这里我们指定两个变量 basedir 指向安装目录，datadir 指向数据目录。
#mkdir -p /home/mysql 
[mysqld] 
[client]
然后根据需要创建相应的数据目录。
sbin/chkconfig
-S
 -R mysql:mysql $basedir $datadir
-S
s /usr/local/mysql/bin/mysqld /usr/bin/mysqld
/usr/local/mysql/bin/mysqldump /usr/bin/mysqldump
/usr
/usr/l
/local
-level
mysql
/mysql/bin
-gmysql
-d /home/mysql -s /sbin/nologin
 /usr/bin/mysql
第1章MySQL发展和技术选型
Z
---
## Page 44
22丨MySQLDBA工作笔记：数据库管理、架构优化与运维开发
before executing this statement.
选项来初始化。
全的考虑,要求设置一个默认的密码，如果不需要设置密码，则可以使用--initialize-insecure
/home/mysql
updating PID file
generated
ERROR
mysqld
而在 5.7 中推荐的方式是使用 mysqld 的 initialize 选项：
 mysql_install_db
ERROR 1820
>show databases;
Welcome to the MySQL monitor.
按照提示输入密码，就可以成功登录了。
query.log:ERROR
error
Logging to file
直接登录是会报错的。
而接下来的事情也需要格外注意，那就是MySQL 5.7版本中的密码设置，它基于安
Starting MySQL (Percona Server)...... SUCCESS!
Can'
2016-11-09T14:15:01.952812+08:00 0 [ERROR] Fatal error:
而查看错误日志就会看到很明显的问题，这个时候MySQL 的数据字典还不存在。
# service mysql
不过需要马上修改密码，要不什么命令都运行不了，会一直提示你修改密码。
怎么查看默认密码呢，可以在启动的日志里面，我是在 error.log 里面看到的。
[root@teststd bin]# mysql
[root@teststd bin]# service mysql start
再次尝试就没有问题了。
在5.5，5.6中可以使用如下的方式
我们需要初始化数据字典。
topen and
1og:20
1045
--so-- s-- --
MySQL
 (HYooo) : You must reset your password using ALTER USER statement
for
(/var/lib/mysql/teststd.cyou.com.pid).
start
/home/mysql/query.1og'
--user=mysql
aUpmj1
tables:
Commands end with ; or \g.
NO)
--basedir=/usr/local/mysql
r user 'root'@'localhost' (using
Table
ERROR!
'mysql.user'
The server quit without
doesn't exist
'--datadir=
---
## Page 45
'server_id'
这样的字符，否则启动的时候会有如下报错。
1.5.4
 2016-11-09T06:48:16.918807z 0 [ERROR] Unknown suffix '_' used for variable
# mysqladmin varlgrep server_id
我设置简单一些，按照 IP 末尾来设置 server-id。
2016-11-09T06:48:16.918981Z 0[ERROR] Aborting
这里有个细节说一下，还是 server-id。
这里简单提一下，server-id 的格式比较单一，不能有其他的字符，比如“,”“_”“_”
还有一个重要的设置就是 server-id。
开了binlog，比如下表 1-4所示的几个参数。
Executed_Gtid_Set:
新版本的主库已经启用了GTID。
接下来就是搭建从库了，
update user set authentication_string=PASsWORD('mysql') where User='root';
不少大公司在这方面是有一些规范的。
[root@testdb2 ~]# mysqladmin varlgrep server_id