# 【技术分享】Flash的跨域问题

##### 译文声明
本文是翻译文章，原文来源：安全客。译文仅供参考，具体内容及含义以原文为准。
作者：MerJerson@360CERT

## 0x00 背景
Adobe Flash是一款集动画创作与应用程序开发于一体的软件。截至2013年9月2日，其最新零售版本为Adobe Flash Professional CC（2013年发布）。该工具提供了全面的创作和编辑环境，适用于创建数字动画、交互式网站、桌面应用以及手机应用等。Flash广泛应用于吸引用户的多媒体内容制作，包括丰富的视频、音频、图形和动画。

设计人员和开发者可以使用Adobe Photoshop或Illustrator等其他Adobe产品导入素材，并利用Adobe ActionScript 3.0来开发高级互动项目。然而，类似于其他脚本语言，Flash运行于一个安全沙箱环境中，由于其设计缺陷，存在一定的安全隐患，在特定条件下可能导致信息泄露风险。

## 0x01 Flash安全沙箱机制
客户端可以从多种源获取文件，如外部网站、本地文件系统或已安装的AIR应用程序。Flash Player和AIR运行时根据这些资源加载时的来源将其分配至不同的安全沙箱中。

### 远程沙箱
来自互联网的资源（包括SWF文件）被分类并放置到与其原始域名相对应的独立沙箱内。例如，从example.com下载的内容会被存放在与foo.org不同安全级别的沙箱中。默认情况下，这类文件仅能访问自身所在服务器上的资源。通过显式的Web站点许可（如URL策略文件）或编程手段（如调用`Security.allowDomain()`方法），可允许远程SWF文件访问其他域的数据。但需注意的是，远程沙箱无法直接加载本地资源。

### 本地沙箱
- **仅限本地文件系统的沙箱**：出于安全性考虑，默认所有本地文件都被置于只能与本地文件系统进行交互的安全区域。虽然这里的代码可以读取本地文件，但它不能与网络通信，从而防止了潜在的数据泄露。
- **仅限远程内容的沙箱**：当编译SWF文件时，可以通过设置使其在作为本地文件运行时具有网络访问权限。这些文件将失去对本地文件系统的访问权，但能够访问网络数据。不过，要实现这一点，必须通过URL策略文件或调用`Security.allowDomain("*")`授予相应的权限。
- **受信任的本地沙箱**：经过用户或管理员认证的本地SWF文件将被放置在一个更宽松的受信任区域内。这使得它们能够与其他任何SWF文件自由交流，并且可以从任意位置加载数据。
- **AIR应用程序沙箱**：此区域包含运行AIR应用时安装的所有内容。默认情况下，位于该沙箱内的代码可以跨脚本访问来自任何域的代码；反之则不允许。

#### 安全限制
- 只能与远程内容交互的沙箱中的SWF文件不能加载仅限本地文件系统内容的沙箱中的文件，反之亦然。
- 本地HTML文件与本地SWF文件之间的双向脚本访问需要两者都处于受信任的本地沙箱中。
- 在本地HTML文件与本地SWF文件之间执行脚本操作（如使用`ExternalInterface`类）要求相关文件均位于受信任的本地沙箱内。

## 0x02 攻击实现案例
攻击者可以在SWF文件中嵌入`Security.allowDomain("*")`语句，以便让托管网页上的JavaScript向Flash应用程序发送命令（如播放、暂停等）。这意味着恶意封装程序可以像在同一安全沙箱中一样访问公共属性，但无法触及私有属性。

示例代码展示了如何通过`loaderInfo.sharedEvents`API打破沙箱限制，实现跨域资源共享。这种技术曾被用于攻击YouTube等提供Flash API服务的平台，导致用户信息被盗取。

## 0x03 总结
尽管Adobe宣布将于2020年底停止支持Flash插件，许多网站仍依赖于这项技术，特别是在线游戏、小型视频门户及广告展示等领域。随着HTML5及其他现代前端技术的发展，Flash逐渐被淘汰，但现存的应用场景仍构成潜在威胁。因此，了解并防范Flash相关的安全漏洞至关重要。