### DAG Representation
- **Leaf Nodes:** In the context of Directed Acyclic Graphs (DAGs), leaf nodes are the terminal nodes with no outgoing edges.

### DFT Run3me
- **Generate/Inject Optimized Tracking Code:** Integrate optimized tracking code into the baseline DFT platform.
- **Translate Optimized TFA:** Our prototype extends the libdft library to generate PIN-aware C code.
  - **Function Generation:** A dedicated function for each instrumentation unit.
  - **Example:** Firefox uses approximately 50,000 customized functions.

### Evaluation
- **Optimization Schemes:**
  - **Inner and Outer:**
    - **Code Reduction:** Simple dead code elimination.
    - **Code Generation:** Optimized tracking codes.
    - **TFA Scatter and Aggregation:**

| Category | Optimization Schemes | CFG Consideration | TFA Optimization | Aggregation | Code Reduction | Inner | Code Generation | Outer | Scatter | Aggregation |
|----------|---------------------|-------------------|------------------|-------------|----------------|-------|-----------------|-------|---------|-------------|
|          |                     | No                | Yes              | Yes         | Yes            | No    | No              | Yes   | No      | No          |
|          |                     | Yes               | Yes              | Yes         | No             | Yes   | Yes             | No    | No      | Yes         |

- **SPEC CPU2000:**
  - **Performance Comparison:**
    - **Libdft, Inner, Outer, TFA Scatter, TFA Aggregation:**
      - **Workloads:** CPU-intensive tasks.
      - **Speedup:** TFA outperforms libdft by an average of 1.90x (maximum 2.23x).
      - **Slowdown:** Approximately 3x compared to native execution.
  - **Benchmarks:**
    - **crafty, eon, gap, gcc, mcf, parser, perlbmk, twolf, vortex, vpr, average.**

- **Server Applications:**
  - **MySQL:**
    - **Libdft, Inner, Outer, TFA Scatter, TFA Aggregation:**
      - **Benchmark Suite:** MySQL's own (sql-bench) and PHP micro benchmarks.
      - **Representative Subsets Plotted.**
  - **PHP:**
    - **Libdft, Inner, Outer, TFA Scatter, TFA Aggregation:**
      - **Benchmarks:** ATIS, casing, md5, sha1, create, alter, insert, average.

- **Client Applications:**
  - **Web Site Rendering:**
    - **Libdft, Inner, Outer, TFA Scatter, TFA Aggregation:**
      - **Measurement:** Alexa's Top 500 sites and NDSS 2012 site.
  - **JavaScript:**
    - **Libdft, Inner, Outer, TFA Scatter, TFA Aggregation:**
      - **Benchmarks:** Dromaeo JavaScript benchmark suite.
      - **Browsers:** Firefox and Google Chrome.

### Discussion
- **TFA for Other DFT Solutions:**
  - **Binary DFT Implementations:** Suitable for most binary DFT implementations.
  - **Orthogonal to Existing Schemes:** Compatible with existing optimizations like TaintCheck, Dytan, Minemu, and LIFT.
- **Tools with Memory Shadowing:**
  - **Examples:** Memcheck (Valgrind), Dr. Memory (DynamoRIO).
- **Higher Perspective:**
  - **Offline Analysis:** Improve expensive dynamic monitors through offline analysis.

### Conclusion
- **Current Binary-Only DFT Implementations:**
  - **Suboptimal:** Lack consideration for DFT semantics and global context.
- **Proposed Optimization Scheme:**
  - **Combines Static and Dynamic Analysis:** Segregates execution and tracking logic.
  - **Performance:** Achieves a ~2x speedup for real-world applications.

### Backup Slides

### DFT Operation
- **Memory Copy Statement:**
  - **Original Execution:**
    ```c
    idx = recv();
    arr[idx+1] = arr[idx];
    ```
  - **Shadow Memory:**
    ```c
    t(idx) = TAINT;
    t(arr[idx+1]) = t(arr[idx]);
    ```

- **Instrumentation:**
  - **Each Instrumentation Unit Requires Head/Tail Instructions:**
  - **t():** Represents shadow memory access cost.

- **Optimizing DFT:**
  - **Reduced Instrumentation Units (21):**
  - **Reduced Tracking Instructions (42):**
    ```assembly
    mov [idx], recv()
    mov reg0, [arr+idx]
    mov [arr+idx+1], reg0
    mov reg0, [t(arr+idx)]
    mov [t(reg0)], reg0
    mov reg0, [t(reg0)]
    mov [t(arr+idx+1)], reg0
    ```

This revised version aims to provide a clearer, more coherent, and professional presentation of the content.