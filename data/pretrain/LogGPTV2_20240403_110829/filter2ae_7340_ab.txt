    $_++;//G
    var_dump($_);
然后看我们这里的代码的话，是`eval($code)`，所以我们就可以构造这种的`$_GET[1]($_GET[0])`，这个时候我们就可以`system(ls)`这种命令的执行，所以接下来的话就开始构造
# 关于自增的一些知识点
## 知识点1
在自增中，可以通过特殊字符构造出字符串的有以下几种方式
    [].''  //Array
    (0/0).''   //NAN
    (1/0).''   //INF
这个时候就有一个问题了，如果ban了数字，我们该怎么去构造`NAN`和`INF`呢，这个时候就需要讲到一个知识点，我们这里的话需要说一下这个`NAN`和`INF`
    NaN（Not a Number，非数）是计算机科学中数值数据类型的一类值，表示未定义或不可表示的值。常在浮点数运算中使用。首次引入NaN的是1985年的IEEE 754浮点数标准。
    INF：infinite，表示“无穷大”。 超出浮点数的表示范围（溢出，即阶码部分超过其能表示的最大值）。
这里可以看出`NAN`表示的是未被定义的值，所以我们这里可以通过`a/a`这种方式构造，如果字母也被ban，我们也可以借助其他字符，比如`_/_`，这个时候也可以得到`NAN`，同理，`INF`也可以通过`1/a`的方式获取。
## 知识点2
> 这里需要说明一下，笔者小白，对这个不太了解，然后可能这并不算什么知识点，还请各位大师傅多多担待
我们在构造`$_POST`中的`_`时，正常操作的话是这样，`$a='_'.$b(假设这里$b就是POST)`，然后这个时候如果`'`被ban，看似这里是无法再利用了，但其实，我们直接写`$a=_.$b`也是可以的，这个时候效果同上而且缩短了字符长度。
# CTF赛题实战
## CTFshow吃瓜杯[shellme_Revenge]
题目环境如下  
进入环境后发现`phpinfo()`，找找有没有什么信息  
搜索hint后发现  
提示了`?looklook`，那我们这里可以猜出大概率是给了个访问的参数，我们在URL后加上`?looklook=1`，此时获取到源码
过滤了很多，`^`和`~`被过滤，所以异或和取反不可行，但可用的还有一些字符，`$ _ 1 2 3
C`这几个均未被过滤，所以我们这里可以尝试一下通过自增构造，这里限制了长度，要求长度小于`107`，所以我们这里的话使用构造较短的payload，`$_GET[0]($_GET[1])`这个相对来说较短，所以这里的话就可以尝试去构造这个payload，我一开始的payload总是不够短，参考了其他师傅的payload后最终构造如下
    \"|`~\\\\]/",$ctfshow)){
                eval($ctfshow);
            }else{
                echo("Are you hacking me AGAIN?");
            }
        }else{
            phpinfo();
        }
    }
    ?>
这里的话可以看到`$`、`[]`、`'`以及`_`这几个字符是没有被ban的，所以这里我们可以同之前一样，以自增方式构造命令执行语句，直接利用上面的payload进行尝试