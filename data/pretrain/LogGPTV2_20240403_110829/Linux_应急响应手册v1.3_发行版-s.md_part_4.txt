# 指定服务器的详细级别
# 可选值包括：
# debug（提供大量信息，适用于开发/测试）
# verbose（提供许多较少使用的信息，但不会像debug级别那样杂乱）
# notice（中等详细程度，生产环境推荐使用）
# warning（仅记录非常重要的/关键的消息）
loglevel debug

# 指定日志文件名。也可以设置为空字符串，以强制Redis将日志输出到标准输出。
# 注意：如果使用标准输出进行日志记录但在守护进程模式下运行，日志将会被发送到 /dev/null。
logfile "/var/log/redis-test.log"

# 如果需要，可以进一步调整其他syslog参数以满足需求。

### 关于日志记录的总结
- 只有手动指定logfile参数时，日志才会被保存。默认情况下不设置此参数。
- 默认的日志级别为notice，在这种级别下，不会记录登录、执行命令以及退出等事件。
- 将loglevel设置为verbose或debug，会记录客户端的登录主机信息。但是即使在debug级别，也不会记录具体的命令（如info, set）及其内容，只会记录设置了多少个key。
- 若希望临时记录详细的日志信息，可以使用MONITOR命令。

### 示例：使用MONITOR命令监控Redis活动
```bash
root@helper:~# ./redis-2.8.17/src/redis-cli
127.0.0.1:6379> MONITOR
OK
1618819132.622082 [0 192.168.43.234:41040] "info"
1618819150.404718 [0 192.168.43.234:41040] "set" "hello" "world"
```

### Redis暴力破解检测
- 在默认设置下（loglevel = notice），通过网络连接之外的方式很难观察到暴力破解尝试。尽管如此，某些安全设备如EDR可能会监测此类活动。
- 当前版本的Redis无法通过日志区分认证成功与失败，因此难以识别攻击行为和正常登录行为。
- 截至2021年5月13日，仍然没有有效的方法通过日志来判断是否发生了针对Redis的暴力破解尝试。

### 网络状态示例
```plaintext
Proto Recv-Q Send-Q Local Address           Foreign Address         State
tcp   0      0      127.0.0.1:53            0.0.0.0:*               LISTEN
tcp   0      0      0.0.0.0:22              0.0.0.0:*               LISTEN
...
tcp   0      0      192.168.43.219:6379     192.168.43.51:53361    ESTABLISHED
...
```
从上述网络状态可以看出，存在多个来自同一IP地址对Redis服务端口6379发起的连接请求，这可能是暴力破解攻击的一个迹象。然而，仅凭这些信息还不足以确认是否存在攻击行为。