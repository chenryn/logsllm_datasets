## 🐛 Bug
The following error
    RuntimeError: 
    Could not export Python function call 'type'
is raised only on `save` and in a specific case. See below.
## To Reproduce
    import torch
    def check_input(img: torch.Tensor) -> bool:
        return isinstance(img, torch.Tensor)
    def foo(img: torch.Tensor) -> torch.Tensor:
        if check_input(img):
            return img
        raise TypeError("Unexpected input type. Got {}".format(type(img)))
    def bar(img: torch.Tensor) -> torch.Tensor:
        if isinstance(img, torch.Tensor):
            return img
        raise TypeError("Unexpected input type. Got {}".format(type(img)))
    if __name__ == "__main__":
        t = torch.rand(3, 12, 12)
        s_bar = torch.jit.script(bar)
        assert bar(t).equal(s_bar(t))
        s_bar.save("test_bar.pt")
        t = torch.rand(3, 12, 12)
        s_foo = torch.jit.script(foo)
        assert foo(t).equal(s_foo(t))
        s_foo.save("test_foo.pt")
and output
    Traceback (most recent call last):
      File "test_type.py", line 32, in 
        s_foo.save("test_foo.pt")
    RuntimeError: 
    Could not export Python function call 'type'. Remove calls to Python functions before export. Did you forget to add @script or @script_method annotation? If this is a nn.ModuleList, add it to __constants__:
      File "test_type.py", line 11
        if check_input(img):
            return img
        raise TypeError("Unexpected input type. Got {}".format(type(img)))
                                                               ~~~~ 
    [conda] torchvision               0.8.0a0+6f75883           dev_0    
## Additional context
Torchvision transforms scripting
cc @gmagogsfm