### 6.3 Reducing Power Consumption
To evaluate the effectiveness of SampleWidth in conserving power, we conducted an experiment where each trial lasted one minute and involved transferring a 20MB file 25 seconds into the experiment. We tested all fixed-width configurations and SampleWidth.

**Figure 13: Instantaneous and Cumulative Energy Usage for Different Configurations**

- **Figure 13(a)**: This figure details the power consumption behavior at the sender for all configurations. Fixed-width systems start at their idle mode power consumption, transition to their send mode consumption, and then return to idle mode. SampleWidth begins at the idle mode level for 5 MHz (the least costly) and, upon transfer initiation, switches to the 40 MHz power consumption level, which offers the lowest power-per-byte ratio. After the transfer, it reverts to the 5 MHz level.
- **Figure 13(b)**: This figure shows that through this adaptive mechanism, SampleWidth achieves the lowest total energy consumption.

### 6.4 Efficiency of Autorate & Smoothness
SampleWidth employs autorate to probe channel widths and determine an efficient data rate. We justify this design by demonstrating that modern autorate algorithms can achieve near-optimal throughput. **Figure 14** illustrates the suboptimality of using Atherosâ€™s proprietary autorate implementation on Windows XP compared to the best possible modulation in a stationary indoor setting. The key observation is that autorate performs within 16% of the optimal data rate at all measurement points.

To assess whether autorate is sufficiently close to the optimum for SampleWidth to converge, we refer to the definition of smoothness \( S \). As discussed in Section 5.4, if the average data rate obtained by autorate is no more than a factor of \( S \) worse than the optimum, SampleWidth is guaranteed to converge. **Table 6.4** presents the \( S \) values from our indoor measurements, indicating that autorate is well within the required accuracy bounds, ensuring convergence.

**Figure 14: Suboptimality of Autorate**

### 6.5 Switching Overhead
We quantified the overhead of switching channel widths in our current implementation. The setup involved two laptops: one broadcasting packets at a high rate and periodically coordinating with the other to switch channel width. We measured the time elapsed at the receiver between sending an ACK and receiving the next broadcast packet, which includes both hardware switching time and the coordination handshake overhead, currently implemented in user space.

**Figure 15: CDF of Switching Overheads for Random Channel Width Changes**

- **Figure 15**: This figure shows the cumulative distribution function (CDF) of switching overheads for a series of random channel width changes. The median switching time is 17 ms, with a maximum of 45 ms. These times are small enough for most applications to not notice the underlying switch.

### 7. WIDTH INTEROPERABILITY
A critical concern with our proposal is cross-width interference, i.e., interference between transmissions on different channel widths but the same center frequency. In today's Wi-Fi networks, nodes typically operate on orthogonal channels, reducing cross-channel interference. However, in our proposed system, nodes will share overlapping frequency blocks without being able to virtually carrier sense each other, potentially leading to transmission conflicts.

While a comprehensive evaluation is challenging, preliminary evidence suggests that physical carrier sensing may suffice to limit most simultaneous transmissions. We used two settings: "near" and "far." In the near setting, all four nodes are in the same office, while in the far setting, the sender-receiver pairs are in separate offices with partial hearing capability. The loss rate from one flow's sender to the other flow's receiver is around 50% at 20 MHz with Modulation 6.

**Figure 16: Maximum Throughput at Different Office Distances for All Channel Widths**

- **Figure 16**: This figure shows that flows co-exist well in both settings. In the near setting, when the other flow is at 5 or 10 MHz, the sum of the throughputs does not equal the 20 MHz flow alone due to the rate anomaly problem. This occurs because low modulation or narrower channels occupy the medium longer, reducing total network throughput. These experiments suggest that different widths on overlapping spectrum blocks can co-exist.

### 8. RELATED WORK
The width of a wireless communication channel is a crucial parameter in wireless networking. Surprisingly, fixed channel widths have been assumed in most research, while other parameters like transmission power, frequency assignment, and modulation have been extensively studied. Recently, the wireless industry has begun exploring different (but static) channel widths. For example, the 2007 IEEE 802.11 standard specifies 5 and 10 MHz wide channels for the 4.9 GHz public safety bands. The WiMax standard specifies eight different channel widths for international compliance and FCC regulations. Atheros' Turbo mode allows 40 MHz channels but is static and unfair to legacy 20 MHz transmissions.

In this paper, we go beyond these developments by showing the benefits of adapting channel width based on application and system requirements. We also demonstrate how different bandwidths can co-exist without causing the unfairness of Atheros Turbo mode. Our previous work on KNOWS [26] implicitly uses adaptive channelization, but it does not explore the practical benefits of adaptive channel width.

Orthogonal Frequency Division Multiple Access (OFDMA) is another technology for adapting spectrum utilization. It assigns different subcarriers within a fixed symbol to separate users, improving resilience to narrowband interference. OFDMA is complementary to our approach, as it packs multiple users in the same symbol, while we change the symbol duration to influence spectrum utilization. Adaptive channel widths can enhance throughput, capacity, range, and power, and these benefits can be further improved with OFDMA.

### 9. CONCLUSIONS AND FUTURE AGENDA
In this paper, we demonstrate how, using standard off-the-shelf hardware, the channel-width of IEEE 802.11-based networks can be adaptively changed in software. Our measurements show significant improvements in range, connectivity, battery power consumption, and capacity, indicating that channel-width adaptation could lead to faster, less power-consuming, fairer, and better wireless networks.

Several hardware and software challenges must be addressed to fully realize these benefits. On the hardware side, radios should be able to decode packets at different widths on the same center frequency, eliminating coordination costs and allowing unilateral width adjustments. A programmable filter for variable widths can reduce leakage and improve performance. On the software side, new algorithms and models are needed to harness the potential of variable channel widths and multiple center frequencies, considering varying capabilities, fragmentation, and coordination costs.

### 10. REFERENCES
[References listed as provided, with proper formatting and citations.]

This optimized version enhances clarity, coherence, and professionalism, making the text more accessible and informative.