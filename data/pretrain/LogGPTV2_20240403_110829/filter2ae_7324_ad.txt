TTP 的意义在于可以对一起攻击事件、一个攻击组织高度的总结。可以帮助我们对攻击进行及时的感知和阻断。此外，TTP 另一个用处就是归因判断。
### 0x05-01 实体抽取
不管用作防御的感知和阻断，还是在研究领域的归因判断。落地前需要解决的第一个问题就是人类语言向机器语言的转变，也就是行为实体抽取和可机读。
前文提出了一个观点：攻击是线性的，且不可能隔空进行操作。将操作对象视为原点，操作视为方向，其构成的向量即代表本次的攻击动作，向量的顶点即表示下一个操作对象。这些一个个的攻击动作首尾相连构成攻击行为，最终指向的便是攻击目的。
进行 TTP 提取的前提是，梳理出完整的攻击流程和操作对象。而图中所示的操作对象，便是需要抽取的实体。“操作对象” 具有以下特点：
  * 攻击过程中的支撑点
  * 攻击过程中更改、操作及运行的对象。
  * 操作的载体
  * 攻击中所需要的资源（运算、网络）
还是那个例子：
    攻击者投递含有 cve-2017-11882 的钓鱼邮件，受害者打开了钓鱼文件，漏洞利用成功，文档从远程拉取执行了后门。
outlook，资源管理器，office，公式编辑器，网络和最终的 payload 这些都都是操作对象。他们直接或间接的受控于攻击者。
### 0x05-02 关系描述
“事件链图” 是描述 TTP
的重要方法，它着重强调了攻击的上下文关系，以及操作对象之间的关联关系。在事件链图描述中，每一个方块实际就是操作对象。除此之外另外一个维度就是关联关系，也就是
“操作”，对应事件链图中连接方块的边。
操作可以理解为攻击动作。人类知识转变为机器语言是困难的，将攻击动作进行可机读的表述需要借助一个东西：ATT&CK。
#### ATT&CK 对 TTP 提取的帮助
ATT&CK 的价值在于统一了行为标记和描述的标准。它对攻击性操作进行细分和分类，有了这种完善的参照，极大减少了 “行为抽象” 的成本。
进行 TTP 描述，需要对攻击的动作进行一种标准化描述。我们所要描述的 “关系”，其实是表达
“攻击者借助何种基础设施，采用何种方法对受害者产生影响的过程”，这是一种带有明显方向性的特征。就像标量不能描述矢量一样，狭义的 IOC 是不能描述 TTP
和攻击上下文的。
MITRE 提出了 STIX (Structured Threat Information eXpression), CrowdStrike 提出了 IOA
(Indicator of Attack)，他们都意识到 IOC 是不足以描述丰富多变的网络安全环境，也不能描述复杂的上下文关系。STIX 通过
Observables (可观察对象)、Indicators (上下文关联)、Incidents (上下文实例)、TTP、Exploit Target
(弱点)、Campaign (意图)、ThreatActors (恶意行为特征)、Courses Of Action (反应措施) 描述攻击；而 IOA
主要表达攻击者必须采取的什么行动才能达成目的。
不管是何种方式，IOA、SITX 都是在尝试去描述攻击过程这一 ”矢量“，而 ATT&CK 的出现就像胶水一样，很好的将
”部件“进行粘合。丰富且适用的字典可以帮助描述操作对象的上下文关系，进而帮助对 TTP 进行抽象描述。
ATT&CK
让攻击描述可以聚焦于更加抽象的过程总结，而不必纠结这个攻击的实际步骤。并且采用统一的描述方法，实现了可机读，以及可以更好的进行信息交换，降低数据转入转出成本，提高信息适用性和可拓展性。
#### 使用 ATT&CK 进行关系映射
使用 ATT&CK 关系映射分为两种：人工映射以及自动化匹配。
人工映射无非就是打标签，分析人员在分析过程中，通过自身知识的总结攻击活动，人工到 ATT&CK
矩阵中去匹配。自动化映射是指，机器去理解攻击的上下文关系，通过一些算法，将攻击过程去 ATT&CK 矩阵中去匹配。
人工映射十分准确，既然是人，肯定有自己擅长的领域以及知识盲区，“人”
对非擅长领域的信息是很难进行判断的；同时，人的精力是有限的，面对海量信息显得有些乏力。为了解决人工映射的弊端，业内有自动化映射的研究，不可否认，自动化映射更符合真实环境需求。受限于当前机器学习发展的瓶颈，很难有一个算法可以全自动地进行
ATT&CK 映射。
结合 “事件链图”，使用 ATT&CK 映射关联关系可以从四个角度入手：
  * 环境：动作所处的环境，例如操作系统，执行环境（内存、命令行、SQL 等）
  * 实现：进行了何种操作，例如文件释放，网络请求，数据修改等
  * 操作对象：如释放的文件类型，注册表等
  * 特征：有一些攻击动作，需要特定的条件，比如 T1170，T1156，T1086 等，这种，检测到相关特征，便可进行直接映射。
自动化映射需要结合自身系统的设计和需求，因人制宜，不过多的讨论。
### 0x05-03 完整的描述模型
经过优化， 可以将 “事件链图” 描述为：
方块表示操作对象，边表示操作对象之间的操作，也就是 ATT&CK
所描述的那部分。每两个实体和边看作一个最小分析单位，如图中红框所示。其构成的最小元组表达为：
    (Node1 {Labels:'xxx'})-[:Relationships {Labels:'xxx'}]->(Node2)
每一个操作对象、实体表达为`（Node）`。关联关系表达为`[:Relationships]`。实体和关联关系都具有属性信息。
Node 的属性信息，可以是资源路径，捕获时附带的信息，带有的命令行参数等等。一切和操作对象实体有关的信息都可以放在里面。Relationships
描述攻击过程和实体之间的关系，可以基于 ATT&CK 进行描述，属性信息包含攻击击过程的环境，实现，特征或者其他一切信息。总的说，关注的是4种内容：
  * 实体
  * 实体的属性
  * 关联关系
  * 关联关系的属性
基于此种描述模型，可以延伸出两种 TTP 描述方法：
  * 关注实体的 TTP 描述方法（特征矩阵）
  * 关注关联的 TTP 描述方法（事件链图）
特征矩阵中的信息，大多可以映射到实体属性上。关注实体的 TTP 描述方法更多的是在能力和基础设施方面的特征。关注关联的 TTP
描述方法，着重上下文关系，更能体现体现战术特征。当然也可以将两者进行融合，只不过我将其归为第二类。因为描述上下文时，也需要操作对象（实体）的属性信息。
那么如何设计数据结构呢？可以使用 json 嵌套，也可以使用 STIX ，当然也可以自己设计标准。此处留一点想象空间。??
## 0x06 参考链接
  * 
  * 
  * 
  * 
  * 
  * 
  * 
  * 
  * 
**鸣谢**
主要内容成文于两年前，感谢当时 Redrain、cyg07 对我教导和帮助。
* * *