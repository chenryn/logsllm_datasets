sourcetype=win*security 
| stats earliest(_time) as earliest latest(_time) as latest  by user, dest| inputlookup append=t sample_cache_group.csv | stats min(earliest) as earliest 
max(latest) as latest by  user, dest
| outputlookup sample_cache_group.csv 
| lookup peer_group.csv user OUTPUT peergroup | makemv peergroup delim=","
| multireport [| stats values(*) as * by user  dest ] [| stats 
values(eval(if(earliest>=relative_time(now(),"-1d@d"),dest ,null))) as peertoday values(eval(if(earliest=relative_time(now(),"-1d@d") AND 
isnull(peerpast),1,0)
Get the latest and greatest for this 
   detection with Splunk Security EssentialsTechnique: First Time Seen Detection This is Very Generic
▶ While we’ve been having fun with First Logon to New Server, this same search 	works for any first time seen detection
First Logon to New Server 
sourcetype=win*security 
| stats earliest(_time) as earliest latest(_time) as latest  by user, dest | eval isOutlier=if(earliest >= relative_time(now(), "-1d@d"), 1, 0)Authentication against a New Domain Controller
Familiar Filename on a New Path 
Sourcetype=win*security EventCode=4688 `IncludeMicrosoftFiles` | stats earliest(_time) as earliest latest(_time) as latest  by filename, path | eval isOutlier=if(earliest >= relative_time(now(), "-1d@d"), 1, 0)
New Database Table Accessed
sourcetype=win*security 	sourcetype=database| stats earliest(_time) as earliest latest(_time) as latest  by user, dc | eval isOutlier=if(earliest >= relative_time(now(), "-1d@d"), 1, 0)
First Access to a New Source Code Repository
sourcetype=source_code_access
| stats earliest(_time) as earliest latest(_time) as latest  by user, repo | eval isOutlier=if(earliest >= relative_time(now(), "-1d@d"), 1, 0)
First External Email Claiming to be Internal from Serversourcetype=cisco:esa src_user=*@mycompany.com src!=10.0.0.0/8
| stats earliest(_time) as earliest latest(_time) as latest  by user, src | eval isOutlier=if(earliest >= relative_time(now(), "-1d@d"), 1, 0)
| stats earliest(_time) as earliest latest(_time) as latest  by user, table | eval isOutlier=if(earliest >= relative_time(now(), "-1d@d"), 1, 0)
New Interactive Logon by Service Accountsourcetype=win*security user=srv_* Logon_Type=2 OR .. 11 .. 12
| stats earliest(_time) as earliest latest(_time) as latest  by user, dest | eval isOutlier=if(earliest >= relative_time(now(), "-1d@d"), 1, 0)
New Parent Process for cmd.exe
sourcetype=win*security EventCode=4688 filename=4688
| stats earliest(_time) as earliest latest(_time) as latest  by parent_process | eval isOutlier=if(earliest >= relative_time(now(), "-1d@d"), 1, 0)Technique: Time Series Detection
Background and Challenges
▶ "I want to detect someone who {prints more / logs in more / logs into more 	devices / anything more} than usual"
▶ Time series analytics are very powerful! They are the cornerstone for many simpler UEBA tools, and they’ve been done with Splunk Enterprise / Enterprise Security for ages.▶ Splunk Security Essentials showcases many examples of these detections, but the possibilities are almost literally limitless, and driven primarily by your data and your use cases.
Technique: Time Series Detection Trends among Splunk Core/ES Use Cases
Frequently:
– Simple - medium complexity security logic– Time series oriented
– Often require tuning
Rarely:
– Advanced Machine Learning driven– Advanced Machine Learning driven
– Manages state in a non-time series fashion– Normalizes identities based on DHCP
115 	115
Technique: Time Series Detection Example UBA Splunk Core/ES Use Cases
Anything traditionally rules built, e.g. first logon to new system Unusually high # of connection attempts 
Unusually high # of records accessed / printed / exported / etc Unusually high # of files changedRare SHAs, TLS Certs, etc.
User actions from service account (Proxy, Failed Password Changes) User actions from expired account
116 	116
Technique: Time Series Detection Lateral Movement
We often want to each for attackers who are expanding their systems controlled, and data accessed. 
One technique for this is looking at # of logins per user, or # of destinations per source IPNetwork Data provides source of truth
– I usually talk to 10 hosts
– Then one day I talk to 10,000 hosts
– ALARM!
How would we approach that? By doing a time series analysis.
117
Technique: Time Series Detection Detecting Variations Visually
Consistently large
Inconsistent!
118
Technique: Time Series Detection What is Standard Deviation?
A measure of the variance for a series of numbers| User | Day One | Day Two | Day Three | Day Four  | Avg | Stdev |
|---|---|---|---|---|---|---|
| Jane |100 |123 |79 |145 |111.75 |28.53 |
| Jack |100 |342 |3 |2 |111.75 |160.23 |
| User | Day Five | # StDev Away from Average… aka How Unusual? |
|---|---|---|
| Jane |500 |12.6 |
| Jack |500 |2.42 |
119
Technique: Time Series Detection Make it a Better Correlation Search
… | stats avg( eval(… | stats avg( eval( 
	if(_time = relative_time(now(), "1d"), count, null))) as latest avg(eval(if(_time stdev+average| where latest>stdev+average
121
	Technique: Time Series Detection 
	Other Variations: # of Logins Per Day 
index=windows OR index=login user=* 
| bin span=1d _time | stats count by user _time 
| stats max(eval(if(_time >= relative_time(now(), "1d"), count, null))) as latest avg(eval(if(_time stdev+average
122
	Technique: Time Series Detection 
	Other Variations: # of Servers Logged Into 
index=windows OR index=login user=* 
| bin span=1d _time | stats dc(host) as count by user _time 
| stats max(eval(if(_time >= relative_time(now(), "1d"), count, null))) as latest avg(eval(if(_time stdev+average
123
	Technique: Time Series Detection 
	Other Variations: # of pages printed 
index=windows pages printed 
| bin span=1d _time | stats sum(Num_Pages) as count by user _time | stats max(eval(if(_time >= relative_time(now(), "1d"), count, null))) as latest avg(eval(if(_time stdev+average
124
	Technique: Time Series Detection 
	Other Variations: # of Credit Cards Viewed 
index=crm_logs viewed card 
| bin span=1d _time | stats dc(card_id) as count by user _time 
| stats max(eval(if(_time >= relative_time(now(), "1d"), count, null))) as latest avg(eval(if(_time stdev+average
125
	Technique: Time Series Detection 
	Other Variations: # of Files Written to USB 
index=sep* api="File Write" tag=target_users `sep_write_exclude` 
| bin span=1d _time | stats count by user _time 
| stats max(eval(if(_time >= relative_time(now(), "1d"), count, null))) as latest avg(eval(if(_time stdev+average
126
	Technique: Time Series Detection 
	Other Variations: # of Patient Records Viewed 
index=health_logs sourcetype=record:access 
| bin span=1d _time | stats dc(patient_id) as count by user _time 
| stats max(eval(if(_time >= relative_time(now(), "1d"), count, null))) as latest avg(eval(if(_time stdev+average
127
Technique: Time Series Detection
128
Technique: Time Series Detection 
Wait, isn’t Standard Deviation only Accurate for Normal Distributions?
| 
 |  | ▶ | If you have ever said sentences like the one in the header above, then this slide’s for you! | If you have ever said sentences like the one in the header above, then this slide’s for you! | If you have ever said sentences like the one in the header above, then this slide’s for you! ||---|---|---|---|---|---|
|   | |▶ |If you have ever said sentences like the one in the header above, then this slide’s for you! |If you have ever said sentences like the one in the header above, then this slide’s for you! |If you have ever said sentences like the one in the header above, then this slide’s for you! ||   | |▶ |The traditional use case for Standard Deviation is predicting exactly what percentage of a population fits into a certain fraction. For  |The traditional use case for Standard Deviation is predicting exactly what percentage of a population fits into a certain fraction. For  |The traditional use case for Standard Deviation is predicting exactly what percentage of a population fits into a certain fraction. For  ||   | |▶ |example, you might set a bar at 2 standard deviations and know that means 5% of the population fits. Or 3 standard deviations, for  |example, you might set a bar at 2 standard deviations and know that means 5% of the population fits. Or 3 standard deviations, for  |example, you might set a bar at 2 standard deviations and know that means 5% of the population fits. Or 3 standard deviations, for  ||   | |▶ |0.3% of the population. (Just google 3 standard deviations).  |0.3% of the population. (Just google 3 standard deviations).  |0.3% of the population. (Just google 3 standard deviations).  ||   | |▶ |However, this is entirely dependent on having a normal distribution. A normal distribution is that stereo-typical bell curve graph that  |However, this is entirely dependent on having a normal distribution. A normal distribution is that stereo-typical bell curve graph that  |However, this is entirely dependent on having a normal distribution. A normal distribution is that stereo-typical bell curve graph that  ||   | |▶ |you see on stats textbooks.  |you see on stats textbooks.  |you see on stats textbooks.  |
|   | |▶ |I the security world, we virtually never see a normal distribution. We see all kinds of slanted distributions, and that gives a very  |I the security world, we virtually never see a normal distribution. We see all kinds of slanted distributions, and that gives a very  |I the security world, we virtually never see a normal distribution. We see all kinds of slanted distributions, and that gives a very  ||   | |▶ |justified concern about relying in math that’s not quite sound! |justified concern about relying in math that’s not quite sound! |justified concern about relying in math that’s not quite sound! ||   | |▶ |As a result, if you were to say "I’m going to user 3 standard deviations because I only want to see users who fit into the top 0.3%" you would definitely be misled. However, usually in security we don’t care about such specific designations. We want someone who is "anomalous" or "very unusual." |As a result, if you were to say "I’m going to user 3 standard deviations because I only want to see users who fit into the top 0.3%" you would definitely be misled. However, usually in security we don’t care about such specific designations. We want someone who is "anomalous" or "very unusual." |As a result, if you were to say "I’m going to user 3 standard deviations because I only want to see users who fit into the top 0.3%" you would definitely be misled. However, usually in security we don’t care about such specific designations. We want someone who is "anomalous" or "very unusual." ||   | |▶ |Looking broad strokes across many datasets, my general rule of thumb is that if someone is above 3 stdev, then they’re "anomalous". Above 6 stdev and they’re "suspicious." Anomalous things, don’t send directly to the SOC, just track it. Above 6  stdev, send to the SOC.  |Looking broad strokes across many datasets, my general rule of thumb is that if someone is above 3 stdev, then they’re "anomalous". Above 6 stdev and they’re "suspicious." Anomalous things, don’t send directly to the SOC, just track it. Above 6  stdev, send to the SOC.  |Looking broad strokes across many datasets, my general rule of thumb is that if someone is above 3 stdev, then they’re "anomalous". Above 6 stdev and they’re "suspicious." Anomalous things, don’t send directly to the SOC, just track it. Above 6  stdev, send to the SOC.  ||   | |▶ |That rule of thumb may not fit your dataset, but it’s generally pretty easy to find out - just look at your data to see what kind of events show up at each threshold. If you see 6 stdev and think, "ah, that’s probably not black-and-white enough to send to the SOC" then go to 10 stdev. |That rule of thumb may not fit your dataset, but it’s generally pretty easy to find out - just look at your data to see what kind of events show up at each threshold. If you see 6 stdev and think, "ah, that’s probably not black-and-white enough to send to the SOC" then go to 10 stdev. |That rule of thumb may not fit your dataset, but it’s generally pretty easy to find out - just look at your data to see what kind of events show up at each threshold. If you see 6 stdev and think, "ah, that’s probably not black-and-white enough to send to the SOC" then go to 10 stdev. ||   | |▶ |Of course, you can also take a different approach to time series detection and not use StDev, it’s not the only option… |Of course, you can also take a different approach to time series detection and not use StDev, it’s not the only option… |Of course, you can also take a different approach to time series detection and not use StDev, it’s not the only option… ||   | | |Of course, you can also take a different approach to time series detection and not use StDev, it’s not the only option… |Of course, you can also take a different approach to time series detection and not use StDev, it’s not the only option… |Of course, you can also take a different approach to time series detection and not use StDev, it’s not the only option… |
|   | | | | | ||   | | | | | |