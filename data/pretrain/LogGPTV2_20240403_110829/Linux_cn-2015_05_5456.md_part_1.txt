---
author: Justin Ellingwood
category: 技术
comments_data:
- date: '2015-05-18 16:26:05'
  message: 要顶
  postip: 114.80.124.162
  username: lncwwn
- date: '2015-05-18 17:58:19'
  message: 学习了
  postip: 27.19.93.233
  username: 风铃叮当
count:
  commentnum: 2
  favtimes: 5
  likes: 0
  sharetimes: 0
  viewnum: 12003
date: '2015-05-17 11:12:29'
editorchoice: false
excerpt: 简介 对于您的站点的访问者来说，智能化的内容缓存是提高用户体验最有效的方式之一。缓存，或者对之前的请求的临时存储，是HTTP协议实现中最核心的内容分发策略之一。分发路径中的组件均可以缓存内容来加速后续的请求，这受控于对该内容所声明的缓存策略。
  在这份指南中，我们将讨论一些Web内容缓存的基本概念。这主要包括如何选择缓存策略以保证互联网范围内的缓存能够正确的处理您的内容。我们将谈一谈缓存带来的好处、副作用以及不同的策略能带来的性能和灵活性的最大结合。  什么是缓存（caching）？
  缓存（caching）是一个描述存储可
fromurl: https://www.digitalocean.com/community/tutorials/web-caching-basics-terminology-http-headers-and-caching-strategies
id: 5456
islctt: true
largepic: /data/attachment/album/201505/17/111231k9cdnr96ab6dhbbm.jpg
permalink: /article-5456-1.html
pic: /data/attachment/album/201505/17/111231k9cdnr96ab6dhbbm.jpg.thumb.jpg
related: []
reviewer: ''
selector: ''
summary: 简介 对于您的站点的访问者来说，智能化的内容缓存是提高用户体验最有效的方式之一。缓存，或者对之前的请求的临时存储，是HTTP协议实现中最核心的内容分发策略之一。分发路径中的组件均可以缓存内容来加速后续的请求，这受控于对该内容所声明的缓存策略。
  在这份指南中，我们将讨论一些Web内容缓存的基本概念。这主要包括如何选择缓存策略以保证互联网范围内的缓存能够正确的处理您的内容。我们将谈一谈缓存带来的好处、副作用以及不同的策略能带来的性能和灵活性的最大结合。  什么是缓存（caching）？
  缓存（caching）是一个描述存储可
tags:
- 缓存
thumb: false
title: Web缓存基础：术语、HTTP报头和缓存策略
titlepic: false
translator: wwy-hust
updated: '2015-05-17 11:12:29'
---
### 简介
对于您的站点的访问者来说，智能化的内容缓存是提高用户体验最有效的方式之一。缓存，或者对之前的请求的临时存储，是HTTP协议实现中最核心的内容分发策略之一。分发路径中的组件均可以缓存内容来加速后续的请求，这受控于对该内容所声明的缓存策略。
在这份指南中，我们将讨论一些Web内容缓存的基本概念。这主要包括如何选择缓存策略以保证互联网范围内的缓存能够正确的处理您的内容。我们将谈一谈缓存带来的好处、副作用以及不同的策略能带来的性能和灵活性的最大结合。
![](/data/attachment/album/201505/17/111231k9cdnr96ab6dhbbm.jpg)
### 什么是缓存（caching）？
缓存（caching）是一个描述存储可重用资源以便加快后续请求的行为的术语。有许多不同类型的缓存，每种都有其自身的特点，应用程序缓存和内存缓存由于其对特定回复的加速，都很常用。
这份指南的主要讲述的Web缓存是一种不同类型的缓存。Web缓存是HTTP协议的一个核心特性，它能最小化网络流量，并且提升用户所感知的整个系统响应速度。内容从服务器到浏览器的传输过程中，每个层面都可以找到缓存的身影。
Web缓存根据特定的规则缓存相应HTTP请求的响应。对于缓存内容的后续请求便可以直接由缓存满足而不是重新发送请求到Web服务器。
### 好处
有效的缓存技术不仅可以帮助用户，还可以帮助内容的提供者。缓存对内容分发带来的好处有：
* **减少网络开销**：内容可以在从内容提供者到内容消费者网络路径之间的许多不同的地方被缓存。当内容在距离内容消费者更近的地方被缓存时，由于缓存的存在，请求将不会消耗额外的网络资源。
* **加快响应速度**：由于并不是必须通过整个网络往返，缓存可以使内容的获得变得更快。缓存放在距用户更近的地方，例如浏览器缓存，使得内容的获取几乎是瞬时的。
* **在同样的硬件上提高速度**：对于保存原始内容的服务器来说，更多的性能可以通过允许激进的缓存策略从硬件上压榨出来。内容拥有者们可以利用分发路径上某个强大的服务器来应对特定内容负载的冲击。
* **网络中断时内容依旧可用**：使用某种策略，缓存可以保证在原始服务器变得不可用时，相应的内容对用户依旧可用。
### 术语
在面对缓存时，您可能对一些经常遇到的术语可能不太熟悉。一些常见的术语如下：
* **原始服务器**：原始服务器是内容的原始存放地点。如果您是Web服务器管理员，它就是您所管理的机器。它负责为任何不能从缓存中得到的内容进行回复，并且负责设置所有内容的缓存策略。
* **缓存命中率**：一个缓存的有效性依照缓存的命中率进行度量。它是可以从缓存中得到数据的请求数与所有请求数的比率。缓存命中率高意味着有很高比例的数据可以从缓存中获得。这通常是大多数管理员想要的结果。
* **新鲜度**：新鲜度用来描述一个缓存中的项目是否依旧适合返回给客户端。缓存中的内容只有在由缓存策略指定的新鲜期内才会被返回。
* **过期内容**：缓存中根据缓存策略的新鲜期设置已过期的内容。过期的内容被标记为“陈旧”。通常，过期内容不能用于回复客户端的请求。必须重新从原始服务器请求新的内容或者至少验证缓存的内容是否仍然准确。
* **校验**：缓存中的过期内容可以验证是否有效以便刷新过期时间。验证过程包括联系原始服务器以检查缓存的数据是否依旧代表了最近的版本。
* **失效**：失效是依据过期日期从缓存中移除内容的过程。当内容在原始服务器上已被改变时就必须这样做，缓存中过期的内容会导致客户端发生问题。
还有许多其他的缓存术语，不过上面的这些应该能帮助您开始。
### 什么能被缓存？
某些特定的内容比其他内容更容易被缓存。对大多数站点来说，一些适合缓存的内容如下：
* Logo和商标图像
* 普通的不变化的图像（例如，导航图标）
* CSS样式表
* 普通的Javascript文件
* 可下载的内容
* 媒体文件
这些文件更倾向于不经常改变，所以长时间的对它们进行缓存能获得好处。
一些项目在缓存中必须加以注意：
* HTML页面
* 会替换改变的图像
* 经常修改的Javascript和CSS文件
* 需要有认证后的cookies才能访问的内容
一些内容从来不应该被缓存：
* 与敏感信息相关的资源（银行数据，等）
* 用户相关且经常更改的数据
除上面的通用规则外，通常您需要指定一些规则以便于更好地缓存不同种类的内容。例如，如果登录的用户都看到的是同样的网站视图，就应该在任何地方缓存这个页面。如果登录的用户会在一段时间内看到站点中用户特定的视图，您应该让用户的浏览器缓存该数据而不应让任何中介节点缓存该视图。
### Web内容缓存的位置
Web内容会在整个分发路径中的许多不同的位置被缓存：
* **浏览器缓存**：Web浏览器自身会维护一个小型缓存。典型地，浏览器使用一种策略指示缓存最重要的内容。这可能是用户相关的内容或可能会再次请求且下载代价较高。