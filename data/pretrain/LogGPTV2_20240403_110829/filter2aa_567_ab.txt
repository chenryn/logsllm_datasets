### Interfaces and MAC Addresses
- **Authenticator Interface**: Configured to the MAC address of the authenticator.
- **Supplicant Interface**: Set to the MAC address of the supplicant.

### Improvement: Support for Side Channel Interaction
In Duckwall’s original bypass, outbound ARP and IP traffic is initially blocked while the transparent bridge is initialized [4]:
- **Issue**: This prevents the use of a side channel device, such as an LTE modem.
- **Improvement**: 
  - Added a firewall exception that allows outbound traffic from the side channel interface.
  - Allows the user to specify a desired egress destination port.

### Improvement: Bypassing Sticky MAC
- **Updated Implementation**:
  - Added a firewall exception that allows outbound traffic from the side channel interface.
  - Users can specify a desired egress destination port.

### Demo: Improvements to Bridge-Based Bypass Techniques

### Introduction to MACsec and 802.1x-2010
- **Traditional 802.1x Bypasses** (hub, injection, or bridge-based) exploit the same fundamental security issues in 802.1x-2004 [3][4][6][7]:
  - The protocol does not provide encryption.
  - The protocol does not support packet-by-packet authentication.

- **802.1x-2010 and MACsec**:
  - **Security Enhancements** [7]:
    - Layer 2 encryption performed on a hop-by-hop basis.
    - Packet-by-packet integrity checks.
  - **Importance of Hop-by-Hop Encryption** [7]:
    - Protects against bridge-based attacks.
    - Allows network administrators to inspect data in transit.

- **802.1x-2010 Protocol Stages** [7][8][9]:
  1. Authentication and Master Key Distribution
  2. Session Key Agreement
  3. Session Secure

### Things to Think About…
- **IEEE Std 802.11** specifies media-dependent cryptographic methods to protect data transmitted using the 802.11 MAC over wireless networks. Conceptually, these cryptographic methods play the same role within systems and interface stacks as a MAC Security Entity. – IEEE 802.1x-2010 Standard – Section 6.6 [9]

### Parallels between MACsec and WPA
- **2003 – WPA1 Release**:
  - **Layer 2 Encryption**: Access point to station.
  - **Authentication**: Extensible Authentication Protocol (EAP), Pre-Shared Key (PSK) as a fallback/alternative.
  - **Shift in Focus**: Injection-based attacks are no longer possible due to Layer 2 encryption. Focus shifts to attacking the authentication mechanism (e.g., PSK dictionary attacks, rogue AP attacks).

- **2010 – 802.1x-2010 Release**:
  - **Layer 2 Encryption**: Device to switch/switch to switch.
  - **Authentication**: EAP, PSK as a fallback/alternative.
  - **Shift in Focus**: Bridge and injection-based attacks are no longer possible due to Layer 2 encryption. Focus shifts to attacking the authentication mechanism (e.g., PSK dictionary attacks, attacks against weak EAP methods).

### Defeating MACsec Using Rogue Gateway Attacks
- **Key Takeaway** [7]:
  - 802.1x-2010 still uses EAP for authentication.
  - EAP is only as secure as the EAP method used.
- **Supported EAP Methods** [7]:
  - Must support mutual authentication.
  - Derive keys at least 128 bits in length.
  - Generate an MSK of at least 64 octets.
- **Weak EAP Methods**: EAP-PEAP, EAP-TTLS, etc.

### Lab Environment
- **Options**:
  1. MITM style bypass.
  2. Direct access.
- **Steps to Build a Rogue Device**:
  1. Device Core
  2. Mechanically Assisted Bypass
     - **Manipulating the Push Switch**:
       - **Relays**: Can lead to impedance issues unless you are an electrical engineer.
       - **Solenoids**: A viable alternative.
  3. Establish a Side Channel
  4. Plant the Device
  5. Rogue Gateway Attack
  6. Bait n Switch

### Demo: Defeating MACsec Using Rogue Gateway Attacks

### Dealing with Improvements to Peripheral Device Security
- **Improved 802.1x Support by Peripheral Devices**:
  - Bypassing port security through policy exceptions has become difficult.
  - **Caveat**: Improved adoption of 802.1x does not necessarily imply strong port security for peripheral devices.
  - **Adoption Rates**: Poor for secure EAP methods across all device types, especially for peripheral devices.
  - **Implication**: Peripheral devices remain a viable attack vector for bypassing port security.

### EAP-MD5 Forced Reauthentication Attack
- **EAP-MD5** is widely used to protect peripheral devices such as printers:
  - **Advantages**: Easy to set up and configure.
  - **Disadvantages**: Still better than MAC filtering but vulnerable to attacks.
- **Attack Steps**:
  1. Use a bridge-based approach to place a rogue device between the supplicant and authenticator.
  2. Wait for the supplicant to authenticate and sniff the EAP-MD5-Challenge and EAP-MD5-Response.
  3. Crack credentials and connect to the network using Bait n’ Switch.
- **Drawback**: Requires waiting for the supplicant to reauthenticate, which may not happen unless the supplicant is unplugged.
- **Forced Reauthentication**:
  - Send a spoofed EAPOL-Start frame to the authenticator, causing it to send an EAP-Request-Identity frame to the actual supplicant.
  - Both the authenticator and supplicant believe the other party initiated the reauthentication attempt.
- **Demo**: Forced Reauthentication

### Proposed Mitigation
- **Safety-bit in the EAP-Request-Identity Frame**:
  - Set to 1 if the frame was sent in response to an EAPOL-Start frame.
  - Checked when the supplicant receives an EAP-Request-Identity frame.
  - Aborts the authentication process if the safety bit is set to 1 and the supplicant did not recently issue an EAPOL-Start frame.

### Leveraging Rogue Gateway Attacks Against Peripheral Devices
- **Commonly Used Weak EAP Methods**:
  - EAP-TTLS and EAP-PEAP.
  - **Attacks**: More involved, requiring a MITM to capture the challenge and response.
- **Solution**: Use a Rogue Gateway Attack implemented in software using a transparent bridge.

### Closing Thoughts
- **Contributions**:
  - Rogue Gateway and Bait n Switch: Bypass 802.1x-2011 by attacking its authentication mechanism.
  - Updated and improved existing 802.1x-2004 bypass techniques.
  - EAP-MD5 Forced Reauthentication attack: Improved attack against EAP-MD5 on wired networks.
- **Key Takeaways**:
  - Port security is still beneficial but should be part of a layered security approach.
  - Benefits of 802.1x can be undermined by the continued use of EAP and low adoption rates for strong EAP methods.
- **Resources**:
  - Blog post & whitepaper: https://www.digitalsilence.com/blog/
  - Tool: github.com/s0lst1c3/silentbridge

### References
- [1] http://www.ieee802.org/1/pages/802.1x-2001.html
- [2] http://www.ieee802.org/1/pages/802.1x-2004.html
- [3] https://blogs.technet.microsoft.com/steriley/2005/08/11/august-article-802-1x-on-wired-networks-considered-harmful/
- [4] https://www.defcon.org/images/defcon-19/dc-19-presentations/Duckwall/DEFCON-19-Duckwall-Bridge-Too-Far.pdf
- [5] https://www.gremwell.com/marvin-mitm-tapping-dot1x-links
- [6] https://hackinparis.com/data/slides/2017/2017_Legrand_Valerian_802.1x_Network_Access_Control_and_Bypass_Techniques.pdf
- [7] https://www.cisco.com/c/en/us/products/collateral/ios-nx-os-software/identity-based-networking-services/deploy_guide_c17-663760.html
- [8] https://1.ieee802.org/security/802-1ae/
- [9] https://standards.ieee.org/findstds/standard/802.1X-2010.html
- [10] http://www.ieee802.org/1/files/public/docs2013/ae-seaman-macsec-hops-0213-v02.pdf
- [11] https://www.gremwell.com/linux_kernel_can_forward_802_1x
- [12] https://www.intel.com/content/www/us/en/support/articles/000006999/network-and-i-o/wireless-networking.html
- [13] http://www.willhackforsushi.com/presentations/PEAP_Shmoocon2008_Wright_Antoniewicz.pdf
- [14] https://link.springer.com/content/pdf/10.1007%2F978-3-642-30955-7_6.pdf
- [15] https://support.microsoft.com/en-us/help/922574/the-microsoft-extensible-authentication-protocol-message-digest-5-eap
- [16] https://tools.ietf.org/html/rfc3748
- [17] https://code.google.com/archive/p/8021xbridge/source/default/commits
- [18] https://github.com/mubix/8021xbridge
- [19] https://hal.inria.fr/hal-01534313/document
- [20] https://sensepost.com/blog/2015/improvements-in-rogue-ap-attacks-mana-1%2F2/
- [21] https://tools.ietf.org/html/rfc4017
- [22] http://web.archive.org/web/20160203043946/https:/www.cloudcracker.com/blog/2012/07/29/cracking-ms-chap-v2/
- [23] https://crack.sh/
- [24] https://tools.ietf.org/html/rfc5216
- [25] https://4310b1a9-a-93739578-s-sites.googlegroups.com/a/riosec.com/home/articles/Open-Secure-Wireless/Open-Secure-Wireless.pdf?attachauth=ANoY7cqwzbsU93t3gE88UC_qqtG7cVvms7FRutz0KwK1oiBcEJMlQuUmpGSMMD7oZGyGmt4M2HaBhHFb07j8Gvmb_HWIE8rSfLKDvB0AI80u0cYwSNi5ugTP1JtFXsy1yZn8-85icVc32PpzxLJwRinf2UGzNbEdO97Wsc9xcjnc8A8MaFkPbUV5kwsMYHaxMiWwTcE-A8Dp49vv-tmk86pNMaeUeumBw_5vCZ6C3Pvc07hVbyTOsjqo6C6WpfVhd_M0BNW0RQtI&attredirects=0
- [26] https://txlab.wordpress.com/2012/01/25/call-home-ssh-scripts/
- [27] https://txlab.wordpress.com/2012/03/14/improved-call-home-ssh-scripts/
- [28] https://www.cisco.com/c/en/us/td/docs/switches/lan/catalyst3560/software/release/12-2_37_se/command/reference/cr1/cli3.html#wp1948361
- [29] https://www.juniper.net/documentation/en_US/junos/topics/concept/port-security-persistent-mac-learning.html
- [30] https://tools.ietf.org/html/rfc3579
- [31] https://tools.ietf.org/html/rfc5281