### Figure 7: Cumulative Number of Vulnerabilities Rewarded

Figure 7 illustrates the cumulative number of vulnerabilities rewarded, as reported by:
1. First-time VRP (Vulnerability Reward Program) contributors (blue short-dashed line),
2. Repeat contributors (red long-dashed line), and
3. All contributors (green solid line).

#### Internal Security Researchers

Chrome has seen the majority of its reports come from repeat participants for nearly the entire duration of its VRP. In contrast, Firefox has a different distribution.

### 4.3 Internal Security Researchers

An internal security researcher is a full-time employee of a software vendor who is paid a salary to find as many vulnerabilities as possible. Google has hired at least three researchers who initially gained recognition through the Chrome VRP [21], and Mozilla has also hired at least three researchers [56].

#### Discussion

A software vendor may choose to hire an unusually successful independent security researcher. The researcherâ€™s past performance indicates the number of vulnerabilities the vendor can expect them to find. The vendor may prefer to pay a fixed salary instead of a per-vulnerability reward. This arrangement can be beneficial for the researcher, who trades potentially higher cash rewards for more job security and benefits.

### Table 6: Median and Standard Deviation of Patch Release Time

| Severity | Median, Chrome | Std. dev., Chrome | Median, Firefox | Std. dev., Firefox |
|----------|-----------------|--------------------|------------------|--------------------|
| Low      | 58.5            | 114                | 110.6            | 256.1              |
| Medium   | 45.5            | 106                | 78.9             | 157.6              |
| High     | 28.0            | 62.5               | 35.3             | 85.7               |
| Critical | 20.0            | 26.6               | 76               | 116.5              |

Table 6 provides the median and standard deviation of the number of days between the vulnerability report and the release that patches the vulnerability, for each severity level.

### Hypothesis 6

We hypothesize that successful researchers rise to the top, where a full-time job awaits them.

### 4.4 Other Factors

Our dataset offers an opportunity to better understand the state of the SDLC (Software Development Lifecycle) at Mozilla and Google. We analyze:
1. The elapsed time between a vulnerability report and the release of a patched browser version.
2. The frequency of independently discovered vulnerabilities and the implications of this rediscovery rate.

#### 4.4.1 Time to Patch

We focus on the time to release a patched version rather than the time to commit a patch. Although this means we analyze only a subset of the data (Section 3), we believe it is the more useful metric for end users. Both Mozilla Firefox and Google Chrome follow a rapid-release cycle, with new releases every 6 or 7 weeks [11, 25]. In some cases, vendors release out-of-band (or "chemspill") releases for vulnerabilities with active exploits in the wild. Such releases are among the most expensive incidents for software companies, with costs running into millions of dollars [30]. Our metric evaluates the engineering and management commitment required to release such versions.

**Figure 8:** Box and whisker plots depicting the distributions of time between vulnerability report and the release that patches the vulnerability, for each severity level.

**Discussion:**
- For Chrome, both the median time to patch and the variance are lower for higher-severity vulnerabilities. This is crucial for a VRP because responsible disclosure depends on vendor response time [22, 50]. If a vendor does not patch in a reasonable time frame, security researchers are less likely to exercise responsible disclosure. This may contribute to Firefox's lower degree of community participation, given the longer and highly variable time to patch critical vulnerabilities.
- In Chrome, the time to patch is faster for critical vulnerabilities compared to high-severity vulnerabilities, indicating correct prioritization by Chrome security engineers. However, Firefox shows similar times for high and critical severity vulnerabilities.

**Figure 9:** Scatter plots depicting the time between vulnerability report and the release that patches the vulnerability vs. time, for each severity level.

**Figure 10:** Standard deviation of time to patch over time. For a given release date, the y-value is the standard deviation of all bugs patched in that release or up to five prior releases. The red solid line represents Firefox, and the blue dashed line represents Chrome.

The high variance in Firefox's time to patch critical vulnerabilities may be partly due to the lack of privilege separation in Firefox, as a larger TCB (Trusted Computing Base) for critical vulnerabilities means a larger pool of engineers owning code that might hold a critical vulnerability. However, it is encouraging that Firefox has gradually reduced this variance. Nonetheless, the variance in patch times and typical time to patch for Firefox remain significantly higher than those for Chrome, suggesting the need for further improvements in Firefox's patching process.