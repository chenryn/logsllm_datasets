0
0
0
2
0
5
1
0
0
1
0
5
0
)
e
v
i
t
l
a
u
m
u
c
(
s
e
i
t
i
l
i
l
b
a
r
e
n
u
v
r
e
b
m
u
N
l
)
e
v
i
t
a
u
m
u
c
(
s
e
i
t
i
l
i
l
b
a
r
e
n
u
v
r
e
b
m
u
N
7/10
1/11
7/11
1/12
7/12
1/13
(b) Firefox
Figure 7: Cumulative number of vulnerabilities rewarded, as
reported by (1) ﬁrst-time VRP contributors (blue short-dashed
line), (2) repeat contributors (red long-dashed line), and (3) all
contributors (green solid line).
Internal security researcher
Chrome, on the other hand, has seen the majority of its
reports come from repeat participants for nearly the whole
lifetime of its VRP.
4.3
An internal security researcher is a full-time employee of
a software vendor who is paid a salary to ﬁnd as many
vulnerabilities as possible. Google hired at least three re-
searchers who ﬁrst came to light via the Chrome VRP [21]
and Mozilla hired at least three researchers as well [56].
Discussion A software vendor may choose to hire an
unusually successful independent security researcher. The
researcher’s past performance indicates how many vul-
nerabilities the vendor can expect them to ﬁnd, and the
vendor may prefer to pay a ﬁxed salary instead of a per-
vulnerability reward. The researcher may also prefer this;
the researcher trades a potentially higher amount of cash
for less compensation, but more beneﬁts and job security.
282  22nd USENIX Security Symposium 
USENIX Association
10
Severity
Low
Medium
High
Critical
Median,
Chrome
58.5
45.5
28.0
20.0
Std. dev. Median,
Chrome
Firefox
114
110.6
106
78.9
62.5
35.3
26.6
76
Std. dev.,
Firefox
256.1
157.6
85.7
116.5
Table 6: Median and standard deviation of number of days
between vulnerability report and release that patches the vulner-
ability, for each severity level.
security
independent
Accordingly, we hypothesize that:
Hypothesis 6 Successful
re-
searchers bubble to the top, where a full-time job awaits
them.
4.4 Other factors
Our dataset provides an additional opportunity to better
understand the state of the SDLC (software development
lifecycle) at Mozilla and Google. In particular, we ana-
lyze (1) the elapsed time between a vulnerability report
and the release of a patched browser version that ﬁxes the
vulnerability, and (2) how often vulnerabilities are inde-
pendently discovered, and what the potential implications
are of this rediscovery rate.
4.4.1 Time to patch
As previously discussed, we choose to study time to re-
lease a patched version, not time to commit a patch. Al-
though relying on time to release a patch means we an-
alyze only a subset of the data (Section 3), we believe
the time to release a patched version of the browser is the
more useful metric for end users. Mozilla Firefox and
Google Chrome both follow a rapid-release cycle, with a
new release every 6 or 7 weeks [11, 25]. In some cases,
browser vendors release an out-of-band (or “chemspill”)
release for vulnerabilities with active exploits in the wild.
Such out-of-band releases are one of the most expensive
incidents for software companies, with costs running into
millions of dollars [30]. Our metric awards the engineer-
ing and management commitment required in choosing
to release such versions.
Figure 8 depicts the time between initial report of a
vulnerability and the stable release that patches it. Table 6
gives summary statistics for these distributions.
Figure 9 is a scatter plot of the same data, which al-
lows us to see changes in time to patch over time. Fig-
ure 10 shows the change in standard deviation of time to
patch over time. More speciﬁcally, for a given release
date, the y-value is the standard deviation for all bugs
patched in that release or up to ﬁve prior releases. These
graphs indicate that the standard deviation in time to patch
critical vulnerabilities has slowly dropped for Firefox,
while Chrome’s time to patch critical vulnerabilities has
remained relatively constant over time.
0
0
5
h
c
t
a
p
0
0
4
h
t
i
w
e
s
a
e
e
r
l
l
e
b
a
0
0
3
t
s
d
n
a
t
r
o
p
e
r
l
a
0
0
2
i
t
i
n
i
n
e
e
w
e
b
t
0
0
1
Low
Medium
High
Critical
(a) Chrome
s
y
a
D
0
0
0
0
1
,
h
c
t
a
p
h
t
i
w
e
s
a
e
e
r
l
l
e
b
a
t
s
d
n
a
t
r
o
p
e
r
l
a
i
t
i
n
i
t
n
e
e
w
e
b
s
y
a
D
0
0
5
0
Low
Medium
High
Critical
(b) Firefox
Figure 8: Box and whisker plots depicting the distributions of
time between vulnerability report and release that patches the
vulnerability, for each severity level.
Discussion For Chrome, both the median time to patch
and the variance are lower for higher severity vulnerabili-
ties. This is an important parameter for a VRP because
responsible disclosure depends critically on vendor re-
sponse time [22, 50]. If a vendor does not patch in a rea-
sonable time frame, security researchers are less likely to
exercise responsible disclosure. Accordingly, this may be
a contributing factor in Firefox’s lower degree of commu-
nity participation (as compared to Chrome), given that the
time to patch critical vulnerabilities in Firefox is longer
and has very high variance.
In Chrome, the time to patch is faster for critical vulner-
abilities than it is for high severity vulnerabilities. This
trend continues for medium- and low-severity vulnera-
bilities as well. This indicates correct prioritization of
higher-severity vulnerabilities by Chrome security en-
gineers. The same cannot be said for Firefox; high and
critical severity vulnerabilities tend to take about the same
amount of time to ﬁx.
USENIX Association  
22nd USENIX Security Symposium  283
11
Low
High
Medium
Critical
7-09
7-10
7-11
7-12
7-09
Stable release date
7-10
7-11
7-12
(a) Chrome
Low
Medium
High
Critical
0
0
5
0
0
4
0
0
3
0
0
2
0
0
1
0
0
0
5
0
0
4
0
0
3
)
s
y
a
d
(
h
c
t
a
p
o
t
e
m
T
i
0
0
2
0
0
1
0
)
s
y
a
d
(
h
c
t
a
p
o
t
e
m
T
i
0
0
0
1
0
0
5
0
0
0
0
1
0
0
5
0
1−10
1−11
1−12
1−131−10
1−11
1−12
1−13
7−10
1−11
7−11
1−12
7−12
1−13
(a) Critical-severity vulnerabilities.
0
0
2
0
5
1
0
0
1
0
5
0
0
5
1
0
0
1
0
5
0
h
c
t
a
p
o
t
e
m
i
t
f
o
.
v
e
d
.
t
d
S
h
c
t
a
p
o
t
e
m
i
t
f
o
.
v
e
d
.
d
t
S
Stable release date
(b) Firefox
7−09
1−10
7−10
1−11
7−11
1−12
7−12
1−13
(b) Critical and high severity vulnerabilities.
Figure 9: Scatter plots depicting the time between vulnerability
report and release that patches the vulnerability vs. time, for
each severity level.
Figure 10: Standard deviation of time to patch over time. For
a given release date, the y-value is the standard deviation of all
bugs patched in that release or up to ﬁve prior releases. The red
solid line is for Firefox, and the blue dashed line is for Chrome.
The high variance in Firefox’s time to patch critical
vulnerabilities may be partly attributable to the lack of
privilege separation in Firefox, since a larger TCB for
critical vulnerabilities means that there is a larger pool of
engineers owning code that might hold a critical vulnera-
bility. However, it is an encouraging sign that Firefox has
gradually reduced this variance. Nonetheless, the variance
in patch times and typical time to patch for Firefox both
remain far higher than we see for Chrome, suggesting the