This is not urgent. There is a ton of deprecation warnings across many modules
with pytorch-1.7+ and a few with python-3.8:  
(I hard-wrapped the lines to avoid the need to scroll, but it makes somewhat
harder to see the warnings):
    src/transformers/modeling_deberta.py:18 src/transformers/modeling_deberta.py:18
    src/transformers/modeling_deberta.py:18 src/transformers/modeling_deberta.py:18
    src/transformers/modeling_deberta.py:18
    src/transformers/modeling_deberta.py:18:
    DeprecationWarning: Using or importing the ABCs from 'collections' instead of
    from 'collections.abc' is deprecated since Python 3.3, and in 3.9 it will stop
    working from collections import Sequence
    tests/test_logging.py::HfArgumentParserTest::test_integration
      tests/test_logging.py:40:
      DeprecationWarning: The 'warn' method is deprecated, use 'warning' instead
      logger.warn(msg)
    tests/test_logging.py::HfArgumentParserTest::test_integration
      tests/test_logging.py:48:
      DeprecationWarning: The 'warn' method is deprecated, use 'warning' instead
      logger.warn(msg)
    tests/test_benchmark.py::BenchmarkTest::test_inference_torchscript
    tests/test_modeling_gpt2.py::GPT2ModelTest::test_torchscript
    tests/test_modeling_gpt2.py::GPT2ModelTest::test_torchscript_output_attentions
    tests/test_modeling_gpt2.py::GPT2ModelTest::test_torchscript_output_hidden_state
    src/transformers/modeling_gpt2.py:164:
    TracerWarning: Converting a tensor to a Python float might cause the trace to be
    incorrect. We can't record the data flow of Python values, so this value will be
    treated as a constant in the future. This means that the trace might not
    generalize to other inputs! w = w / (float(v.size(-1)) ** 0.5)
    tests/test_benchmark.py::BenchmarkTest::test_inference_torchscript
    tests/test_modeling_gpt2.py::GPT2ModelTest::test_torchscript
    tests/test_modeling_gpt2.py::GPT2ModelTest::test_torchscript_output_attentions
    tests/test_modeling_gpt2.py::GPT2ModelTest::test_torchscript_output_hidden_state
    src/transformers/modeling_gpt2.py:169:
    TracerWarning: Converting a tensor to a Python index might cause the trace to be
    incorrect. We can't record the data flow of Python values, so this value will be
    treated as a constant in the future. This means that the trace might not
    generalize to other inputs! mask = self.bias[:, :, ns - nd : ns, :ns]
    tests/test_modeling_auto.py::AutoModelTest::test_from_identifier_from_model_type
    tests/test_modeling_auto.py::AutoModelTest::test_from_pretrained_identifier
    src/transformers/modeling_auto.py:821:
    FutureWarning: The class `AutoModelWithLMHead` is deprecated and will be removed
    in a future version. Please use `AutoModelForCausalLM` for causal language
    models, `AutoModelForMaskedLM` for masked language models and
    `AutoModelForSeq2SeqLM` for encoder-decoder models. warnings.warn(
    tests/test_benchmark_tf.py::TFBenchmarkTest::test_train_no_configs
    tests/test_benchmark_tf.py::TFBenchmarkTest::test_train_with_configs
    /home/stas/anaconda3/envs/py38-pt17/lib/python3.8/site-packages/tensorflow/python/framework/indexed_slices.py:432:
    UserWarning: Converting sparse IndexedSlices to a dense Tensor of unknown shape.
    This may consume a large amount of memory. warnings.warn(
    tests/test_modeling_albert.py::AlbertModelTest::test_torchscript
    tests/test_modeling_albert.py::AlbertModelTest::test_torchscript_output_attentions
    tests/test_modeling_albert.py::AlbertModelTest::test_torchscript_output_hidden_state
    src/transformers/modeling_albert.py:229:
    TracerWarning: Converting a tensor to a Python index might cause the trace to be
    incorrect. We can't record the data flow of Python values, so this value will be
    treated as a constant in the future. This means that the trace might not
    generalize to other inputs! position_ids = self.position_ids[:, :seq_length]
    tests/test_modeling_albert.py: 3 warnings tests/test_modeling_bert.py: 3
    warnings tests/test_modeling_bert_generation.py: 3 warnings
    tests/test_modeling_distilbert.py: 2 warnings tests/test_modeling_dpr.py: 3
    warnings tests/test_modeling_flaubert.py: 3 warnings
    tests/test_modeling_electra.py: 3 warnings tests/test_modeling_layoutlm.py: 3
    warnings tests/test_modeling_roberta.py: 3 warnings tests/test_modeling_xlm.py:
    3 warnings tests/test_modeling_xlnet.py: 3 warnings
    src/transformers/modeling_utils.py:1670:
    TracerWarning: Converting a tensor to a Python boolean might cause the trace to
    be incorrect. We can't record the data flow of Python values, so this value will
    be treated as a constant in the future. This means that the trace might not
    generalize to other inputs! input_tensor.shape == tensor_shape for input_tensor
    in input_tensors
    tests/test_modeling_bert_generation.py: 32 warnings
      src/transformers/modeling_bert_generation.py:417:
      DeprecationWarning: The 'warn' method is deprecated, use 'warning' instead
      logger.warn("If you want to use `BertGenerationDecoder` as a standalone, add
      `is_decoder=True.`")
    tests/test_modeling_bert.py::BertModelTest::test_torchscript
    tests/test_modeling_bert.py::BertModelTest::test_torchscript_output_attentions
    tests/test_modeling_bert.py::BertModelTest::test_torchscript_output_hidden_state
    tests/test_modeling_dpr.py::DPRModelTest::test_torchscript
    tests/test_modeling_dpr.py::DPRModelTest::test_torchscript_output_attentions
    tests/test_modeling_dpr.py::DPRModelTest::test_torchscript_output_hidden_state
    src/transformers/modeling_bert.py:191:
    TracerWarning: Converting a tensor to a Python index might cause the trace to be
    incorrect. We can't record the data flow of Python values, so this value will be
    treated as a constant in the future. This means that the trace might not
    generalize to other inputs! position_ids = self.position_ids[:, :seq_length]
    tests/test_modeling_bart.py::BARTModelTest::test_torchscript
    tests/test_modeling_bart.py::BARTModelTest::test_torchscript_output_attentions
    tests/test_modeling_bart.py::BARTModelTest::test_torchscript_output_hidden_state
    src/transformers/modeling_bart.py:175:
    TracerWarning: Converting a tensor to a Python boolean might cause the trace to
    be incorrect. We can't record the data flow of Python values, so this value will
    be treated as a constant in the future. This means that the trace might not
    generalize to other inputs! if decoder_padding_mask is not None and
    decoder_padding_mask.shape[1] > 1:
    tests/test_modeling_bart.py: 3 warnings tests/test_modeling_flaubert.py: 3
    warnings tests/test_modeling_fsmt.py: 3 warnings tests/test_modeling_roberta.py:
    3 warnings tests/test_modeling_xlm.py: 3 warnings
    /home/stas/anaconda3/envs/py38-pt17/lib/python3.8/site-packages/torch/nn/functional.py:1836:
    TracerWarning: Converting a tensor to a Python boolean might cause the trace to
    be incorrect. We can't record the data flow of Python values, so this value will
    be treated as a constant in the future. This means that the trace might not
    generalize to other inputs! assert padding_idx  1:
    tests/test_modeling_common.py::UtilsFunctionsTest::test_top_k_top_p_filtering
      tests/test_modeling_common.py:1196:
      UserWarning: This overload of nonzero is deprecated: nonzero() Consider using
      one of the following signatures instead: nonzero(*, bool as_tuple) (Triggered
      internally at /pytorch/torch/csrc/utils/python_arg_parser.cpp:882.)
      non_inf_idx = (output != -float("inf")).nonzero().to(device=torch_device)
    tests/test_modeling_bert_generation.py::BertGenerationEncoderTest::test_torchscript
    tests/test_modeling_bert_generation.py::BertGenerationEncoderTest::test_torchscript_output_attentions
    tests/test_modeling_bert_generation.py::BertGenerationEncoderTest::test_torchscript_output_hidden_state
    src/transformers/modeling_bert_generation.py:156:
    TracerWarning: Converting a tensor to a Python index might cause the trace to be
    incorrect. We can't record the data flow of Python values, so this value will be
    treated as a constant in the future. This means that the trace might not
    generalize to other inputs! position_ids = self.position_ids[:, :seq_length]
    tests/test_modeling_flaubert.py: 14 warnings tests/test_modeling_xlm.py: 14
    warnings
    src/transformers/modeling_xlm.py:1220:
    FutureWarning: The `lengths` parameter cannot be used with the XLM multiple
    choice models. Please use the attention mask instead. warnings.warn(
    tests/test_modeling_flaubert.py::FlaubertModelTest::test_flaubert_lm_head
    tests/test_modeling_flaubert.py::FlaubertModelTest::test_model_outputs_equivalence
    tests/test_modeling_xlm.py::XLMModelTest::test_model_outputs_equivalence
    tests/test_modeling_xlm.py::XLMModelTest::test_xlm_lm_head
    /home/stas/anaconda3/envs/py38-pt17/lib/python3.8/site-packages/torch/nn/_reduction.py:14:
    UserWarning: reduction='elementwise_mean' is deprecated, please use
    reduction='mean' instead. warnings.warn("reduction='elementwise_mean' is
    deprecated, please use reduction='mean' instead.")
    tests/test_modeling_flaubert.py::FlaubertModelTest::test_torchscript
    tests/test_modeling_flaubert.py::FlaubertModelTest::test_torchscript_output_attentions
    tests/test_modeling_flaubert.py::FlaubertModelTest::test_torchscript_output_hidden_state
    src/transformers/modeling_flaubert.py:188:
    TracerWarning: Converting a tensor to a Python boolean might cause the trace to
    be incorrect. We can't record the data flow of Python values, so this value will
    be treated as a constant in the future. This means that the trace might not
    generalize to other inputs! assert lengths.size(0) == bs
    tests/test_modeling_flaubert.py::FlaubertModelTest::test_torchscript
    tests/test_modeling_flaubert.py::FlaubertModelTest::test_torchscript_output_attentions
    tests/test_modeling_flaubert.py::FlaubertModelTest::test_torchscript_output_hidden_state
    src/transformers/modeling_flaubert.py:189:
    TracerWarning: Converting a tensor to a Python number might cause the trace to
    be incorrect. We can't record the data flow of Python values, so this value will
    be treated as a constant in the future. This means that the trace might not
    generalize to other inputs! assert lengths.max().item() <= slen
    tests/test_modeling_flaubert.py::FlaubertModelTest::test_torchscript
    tests/test_modeling_flaubert.py::FlaubertModelTest::test_torchscript_output_attentions
    tests/test_modeling_flaubert.py::FlaubertModelTest::test_torchscript_output_hidden_state
    src/transformers/modeling_flaubert.py:189:
    TracerWarning: Converting a tensor to a Python boolean might cause the trace to
    be incorrect. We can't record the data flow of Python values, so this value will
    be treated as a constant in the future. This means that the trace might not
    generalize to other inputs! assert lengths.max().item() <= slen
    tests/test_modeling_flaubert.py::FlaubertModelTest::test_torchscript
    tests/test_modeling_flaubert.py::FlaubertModelTest::test_torchscript_output_attentions
    tests/test_modeling_flaubert.py::FlaubertModelTest::test_torchscript_output_hidden_state
    tests/test_modeling_xlm.py::XLMModelTest::test_torchscript
    tests/test_modeling_xlm.py::XLMModelTest::test_torchscript_output_attentions
    tests/test_modeling_xlm.py::XLMModelTest::test_torchscript_output_hidden_state
    src/transformers/modeling_xlm.py:95:
    TracerWarning: Converting a tensor to a Python number might cause the trace to
    be incorrect. We can't record the data flow of Python values, so this value will
    be treated as a constant in the future. This means that the trace might not
    generalize to other inputs! assert lengths.max().item() <= slen