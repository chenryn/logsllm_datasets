To generate symmetric keys (e.g., Kutil|proj) we could 
use the AES algorithm as follows: 
public  static  Key  generateAESKey()  throws 
Exception { 
/* Specify the algorithm provider */ 
  Security.addProvider(new 
org.bouncycastle.jce.provider.BouncyCastleProvi
der()); 
/* Secret Key generation */ 
KeyGenerator 
kg=KeyGenerator.getInstance("AES"); 
Key k ; 
/* Specify the keys length: e.g., 128 bits */ 
kg.init(128) ; 
k = kg.generateKey() ; 
if (k==null) System.out.println("Error") ; 
return k; } 
new 
Proceedings of the 21st Annual Computer Security Applications Conference (ACSAC 2005) 
1063-9527/05 $20.00 © 2005 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 12:13:01 UTC from IEEE Xplore.  Restrictions apply. 
=            
temp 
byte[] 
concat(concat(concat(concat(concat(concat(conc
autority.getBytes()), 
at(version.getBytes(), 
lastName.getBytes()), 
num.getBytes()), 
firstName.getBytes()), 
role.getBytes()), 
expiration.getBytes()), keyPAC.getEncoded()) ; 
return 
RSACrypto.verify(temp,signature,keyPAC) ;  } 
6.5.  Hashing, encryption and decryption 
Hashing 
is 
applied 
and  T2 
transformations, To calculate IDApat|proj and to sign 
(with 
method 
Signature.getInstance("MD5withRSA")).  
the  T1 
the 
in 
the 
the 
encryption 
Encryption requires several steps: 
specify 
“p=Security.getProvider("BC)”; 
set 
Cipher.getInstance("RSA","BC)”; 
specialize 
“cp.init(Cipher.ENCRYPT_MODE,pk)”,  
the  data 
specify 
cp.getBlockSize()”; 
and finally encrypt by using 
encryption 
system 
size 
the 
- 
- 
- 
- 
- 
provider 
“cp 
= 
mode 
“int  blockSize  = 
6.3.  Communicating with the smartcard 
The  class  managing  the  communication  with  the 
card  is  called  APDU  and  is  defined  in  the  package 
"javacard.framework".  The  client’s  application  sends 
the request to the card reader. The latter transmits the 
information  to  the  Java  Card  Runtime  Environment 
(JCRE). Data are then transmitted to the applet, which 
will have to answer. 
Actually,  the  communication  with  the  card  is 
carried  out  in  a  buffer  “APDU  buffer”  and  must  be 
processed  in  a  “public  void  process  (APDU  apdu)” 
method. The applet is running in this method. 
It is possible to get the content of the APDU buffer 
by  using  the  following method:  byte[]  apdu_buffer  = 
apdu.getBuffer().The data (contained in the buffer) can 
be  read  when  the  applet  uses  the  following  method: 
public 
throws 
APDUException. 
setIncomingAndReceive() 
“short 
The mechanism could be summarized as follows: 
public void process(APDU apdu) { 
byte[] apdu_buffer = apdu.getBuffer() ; 
short 
total_bytes 
= 
(short) 
= 
(apdu_buffer[ISO7816.OFFSET_LC] & 0xFF); 
// Read data in the "APDU" buffer 
read_count 
short 
apdu.setIncomingAndReceive() ; 
short  bytes_left  =  (short)  (total_bytes  – 
read_count) ; 
while (true) { 
 if(bytes_left . 
follow-up”, 
Proceedings of the 21st Annual Computer Security Applications Conference (ACSAC 2005) 
1063-9527/05 $20.00 © 2005 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 12:13:01 UTC from IEEE Xplore.  Restrictions apply. 
[5]  Common  Criteria  for  Information  Technology  Security 
Evaluation, Part 1: Introduction and general model, ISO/IEC 
15408-1 (1999). 
[6]  Denning  D.  and  Denning  P.,  “Data  Security”.  ACM 
Computer  Survey,  vol.  11,  n°  3,  September  1979,  ACM 
Press, ISBN : 0360-0300, pp. 227-249. 
[7]  S.  Castano,  M.  G.  Fugini,  G.  Martella,  P.  Samarati, 
“Database Security”, 1995, ACM press, ISBN: 0201593750, 
456 pp. 
[8]  Z.  Chen  “Java  Card  Technology  for  Smart  Cards: 
Architecture  and  Programmer's  Guide”  Addison-Wesley, 
2000 ISBN: 0-201-70329-7, 400 pp. 
[9] Abou El Kalam A., Balbiani P., Benferhat S., Cuppens F., 
Deswarte Y., El-Baida R., Miège A., Saurel C., Trouessin G., 
“Organization-Based  Access  Control”,  4th  International 
Workshop on Policies for Distributed Systems and Networks 
(Policy’03),  Como,  Italy,  4-6  June  2003,  IEEE  Computer 
Society Press, pp. 120-131. 
[10]  Resolution  A/RES/45/95,  General  assembly  of  United 
Nations:  “Guidelines  for  the  Regulation  of  Computerized 
Data Files”, 14 December 1990. 
[11]  Directive  2002/58/EC  of  the  European  Parliament  on: 
“the processing of personal data”, July 12, 2002.  
Proceedings of the 21st Annual Computer Security Applications Conference (ACSAC 2005) 
1063-9527/05 $20.00 © 2005 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 12:13:01 UTC from IEEE Xplore.  Restrictions apply.