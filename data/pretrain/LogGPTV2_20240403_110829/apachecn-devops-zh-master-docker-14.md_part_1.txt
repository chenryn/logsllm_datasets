# 十四、Docker 的后续步骤
你坚持到了这本书的最后一章，并且坚持到了最后！在本章中，我们将了解莫比项目，以及您如何为 Docker 和社区做出贡献。然后，我们将通过对云原生计算基础的快速概述来结束本章。让我们从讨论莫比项目开始。
# 莫比项目
在 2017 年 DockerCon 上发布的公告之一是莫比项目。当这个项目被宣布时，我有几个关于这个项目是什么的问题，来自工作同事，因为从表面上看，Docker 似乎已经发布了另一个容器系统。
那么，我怎么回答呢？经过几天的困惑，我得出了以下答案:
莫比项目是一个开源项目的统称，该项目收集了几个用于构建基于容器的系统的库。该项目有自己的框架，将这些库组合成一个可用的系统，还有一个名为莫比起源的参考系统；把它想象成一个“你好世界”，允许你建立甚至定制你自己的 Docker。
我给出这个答案后发生了两件事之一；通常，回答是*，但这实际上意味着什么？*。我回答说:
莫比项目是 Docker(该公司)和其他任何希望为该项目做出贡献的人的开源游乐场，他们希望开发新的功能，并将现有功能扩展到库和框架，从而在公共论坛上组成基于容器的系统。其中一个输出是名为莫比 Origin 的前沿容器系统，另一个是 Docker(产品)，它作为开源社区版或商业支持的企业版交付。
如果有人想要一个类似项目的例子，该项目结合了前沿版本、稳定的开源版本和企业支持的版本，我将解释红帽如何使用红帽企业 Linux:
把它想象成红帽对红帽企业版 Linux 采取的方法。你有 Fedora，它是 *b* *leeding edge 版本开发游乐场，为 Red Hat 的操作系统开发人员引入新的包、功能，同时也删除旧的、过时的组件。通常，Fedora 比 Red Hat Enterprise Linux 中发现的特性提前一两年，Red Hat Enterprise Linux 是基于 Fedora 项目中所做工作的商业支持的长期版本；除了这个版本，您还有 CentOS 形式的社区支持版本。*
你可能在想，*为什么这本书的最后才提到？*嗯，在写这本书的时候，这个项目还非常处于起步阶段。事实上，将莫比项目所需的所有组件从主要的 Docker 项目中转移出来的工作仍在进行中。
在我写这篇文章的时候，这个项目唯一真正可用的组件是 *LinuxKit* ，它是一个将所有库集合在一起并输出一个能够运行容器的可引导系统的框架。
由于这个项目的速度非常快，我不会给出任何关于如何使用 LinuxKit 的例子，也不会详细介绍莫比项目，因为当你读到这里时，它可能会改变；相反，我建议为以下页面添加书签，以跟上这一令人兴奋的发展:
*   项目主网站，位于:[https://mobyproject.org/](https://mobyproject.org/)
*   Moby Project GitHub pages，at:[https://github . com/Moby/](https://github.com/moby/)
*   莫比项目推特账户，一个好的新闻来源和指南链接，位于:[https://twitter.com/moby/](https://twitter.com/moby/)
*   LinuxKit 的主页，包含如何开始的示例和说明，位于:[https://github.com/linuxkit/](https://github.com/linuxkit/)
# 向 Docker 投稿
所以，你想帮助 Docker 吗？你有一个你想在 Docker 或它的一个组件中看到的好主意吗？让我们为您提供实现这一目标所需的信息和工具。如果你不是程序员类型的人，还有其他方法可以帮助你。Docker 拥有大量受众，您可以帮助贡献的另一种方式是帮助支持其他用户的服务。让我们也学习一下如何做到这一点。
# 为代码做出贡献
您可以为 Docker 做出贡献的最大方式之一是帮助编写 Docker 代码。由于 Docker 都是开源的，您可以将代码下载到您的本地机器上，并开发新的功能，然后将它们作为拉取请求呈现给 Docker。然后，他们将定期接受审查，如果他们觉得您所做的贡献应该在服务中，他们将批准拉取请求。当你知道你写的东西已经被接受时，这可能是非常令人羞愧的。
你首先需要知道你是如何建立贡献的:这几乎是 Docker([https://github.com/docker/](https://github.com/docker/))和莫比项目([https://github.com/moby/](https://github.com/moby/))的全部内容，我们在前面的部分已经谈到了。但是我们如何着手建立帮助贡献呢？最好的开始是遵循在[https://docs.docker.com/project/who-written-for/](https://docs.docker.com/project/who-written-for/)的官方 Docker 文档中可以找到的指南。
正如您可能已经猜到的，您不需要太多就可以启动和运行开发环境，因为许多开发都是在容器中完成的。例如，除了拥有一个 GitHub 帐户，Docker 还列出了以下三个软件作为最低要求:
*   去吧" t0 https://git-SCM . com/
*   制造:[https://www.gnu.org/software/make/](https://www.gnu.org/software/make/)
*   如果你已经走了这么远，你就不需要链接了
关于如何为 Mac 和 Linux 准备自己的 Docker 开发的更多详细信息，请访问:[https://docs . Docker . com/open source/project/software-required/](https://docs.docker.com/opensource/project/software-required/)和 Windows 用户，请访问:[https://docs . Docker . com/open source/project/software-req-win/](https://docs.docker.com/opensource/project/software-req-win/)。
要成为一个成功的开源项目，必须有一些社区指南。我建议阅读位于 https://docs.docker.com/opensource/code/的优秀快速入门指南，以及位于 T2 的更详细的投稿工作流程文档。
Docker 有一套行为准则，涵盖了他们的员工和整个社区应该如何行动。它是开源的，并在知识共享属性 3.0 下获得许可，声明如下:
![](img/9c145a15-4ca2-48f0-a6c4-f4a53e17d612.png)
完整的行为准则可以在 https://github.com/docker/code-of-conduct/找到。
# 提供 Docker 支持
除了贡献 Docker 代码或特性集，您还可以通过其他方式贡献 Docker。你可以通过利用你所获得的知识来帮助他人的支持渠道。社区非常开放，总有人愿意帮忙。当我碰到什么东西时，发现我在挠头，我觉得这很有帮助。得到帮助也很好，但也能回馈他人；这是一个很好的交换。这也是一个收获想法供你使用的好地方。你可以看到其他人根据他们的设置提出了什么问题，这可能会激发你想在你的环境中使用的想法。
您还可以关注关于服务的 GitHub 问题。这些可能是功能请求以及 Docker 如何实现它们，也可能是在使用服务时突然出现的问题。您可以帮助测试其他人遇到的问题，看看您是否可以复制该问题，或者您是否找到了他们问题的可能解决方案。
Docker 有一个非常活跃的社区，可以在:[https://community.docker.com/](https://community.docker.com/)找到；在这里，您不仅可以看到最新的社区新闻和事件，还可以在 Docker 用户和开发人员的 Slack 频道中与他们聊天。在撰写本书时，有超过 80 个渠道涵盖了各种主题，例如 Mac 的 Docker、Windows 的 Docker、Alpine Linux、Swarm、Storage 和 Network 等等，任何时候都有数百名活跃用户。
最后还有 Docker 论坛，可以在:[https://forums.docker.com/](https://forums.docker.com/)找到。如果你想搜索主题/问题或关键词，这些是很好的来源。
# 其他贡献
还有其他方式来为 Docker 做贡献。你可以做一些事情，比如推广这项服务，在你的机构引起兴趣。您可以通过自己组织的沟通方式开始这种沟通，无论是电子邮件分发列表、小组讨论、信息技术圆桌会议还是定期安排的会议。