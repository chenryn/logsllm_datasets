20Mbps bandwidth conﬁguration. It shows that a block takes
about 1-5 minutes to become partially-conﬁrmed, and then
about another 2-4 minutes to become fully-conﬁrmed. As
a reference point, the conﬁrmation latencies in Bitcoin and
Ethereum are presently 60 and 3 minutes, respectively.
For a conservative T = 30, we have done further exper-
iments conﬁrming (not plotted in Figure 5c) that the partial
and full conﬁrmation latencies remain stable under various
bandwidth conﬁgurations from 8Mbps to 20Mbps. Putting it
another way, the latency does not deteriorate as the throughput
of OHIE increases.
VII. RELATED WORK
OHIE uses PoW under the same permissionless model as
Nakamoto consensus. There have been works in alternative
models, such as using Proof-of-Stake [7], [8], [20], [25] or
assuming a permissioned setting [11], [16], [38]. PoW-based
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:19:07 UTC from IEEE Xplore.  Restrictions apply. 
100
permissionless blockchain protocols have largely followed two
paradigms: The ﬁrst based on extensions to Nakamoto con-
sensus, and the second based on utilizing classical byzantine
agreement (BA). We discuss these two categories one by one.
Nakamoto consensus. Existing deployments of Nakamoto
consensus (e.g., Bitcoin) and its variant
the GHOST pro-
tocol [44] (e.g., Ethereum) achieve only about 5KByte/s
throughput. Bitcoin-NG is a variant of Nakamoto consensus,
where many micro-blocks are proposed by the same proposer,
after the proposer is chosen by a key block [13]. This helps to
signiﬁcantly improve throughput without comprising security,
but at the same time, still has limited decentralization: A single
block proposer is responsible for generating all (micro) blocks
for an extended period of time (i.e., 10 minutes), inviting
censorship attacks and DoS attacks. In comparison, OHIE
achieves superior decentralization — in our experiments, in
each second, up to about 60 different proposers propose blocks
concurrently.
Scaling Nakamoto consensus. Phantom [45] and Conﬂux [32]
have attempted to scale Nakamoto consensus, by having blocks
reference more than one previous blocks. Section I has already
discussed these two works.
Chainweb [35], [42] is another attempt to scale Nakamoto
consensus, by maintaining k parallel chains. Unlike OHIE,
Chainweb does not have any mechanism to prevent the adver-
sary from focusing entirely on one of the k chains. Chainweb’s
original analysis [35], [42] only considers a few speciﬁc attack
strategies [40], instead of all possible adversaries. Fitzi et
al. [15] have shown that an adversary focusing on a speciﬁc
chain can cause the conﬁrmation latency in Chainweb to
increase quadratically in k. In contrast, OHIE does not suffer
from such a problem. Furthermore, different from OHIE where
the rank values balance all the chains, Chainweb requires
synchronous growth of all chains, needing to periodically
stall fast-growing chains. Kiffer et al. [26] have provided a
further analysis of Chainweb, which does not support the high-
throughput claim by Chainweb. In their analysis, a natural
form of Chainweb is “bounded by the same throughput as
Nakamoto protocol for the same consistency guarantee” [26].
Concurrent with and independent of this work, there are
two online non-refereed technical reports [5], [15] proposing a
similar approach to composing multiple parallel chains. While
their high-level designs share similarities with ours, in their
designs, one of the k parallel chains is designated as a special
chain, and blocks on the other chains are related to blocks on
that special chain [5], [15]. In OHIE, all k chains are equal
and symmetric. More importantly, these two concurrent and
independent works [5], [15] do not have any implementation
details or experimental evaluation, while we have a prototype
implementation as well as large-scale evaluation on Amazon
EC2. In particular, our large-scale experiments conﬁrm that
propagating many parallel blocks does not negatively impact
block propagation delay, which lays the empirical foundation
for parallel chain designs.
Finally, Spectre [43] conﬁrms blocks without guaranteeing a
total order, while the inclusive protocol [31] includes as many
non-conﬂicting transactions as possible. These works provide
weaker consistency notions than OHIE, which guarantees a
total order. These weaker notions may sufﬁce for cryptocur-
rency payments, but for smart contracts, total ordering is key
in resolving state conﬂicts [29], [30] and in building towards
higher abstractions of consistency [3], [12], [28].
Blockchain protocols relying on byzantine agreement.
Some PoW-based permissionless blockchain protocols [2],
[12], [27], [28], [33], [41], [47] build upon classical byzantine
agreement (BA) protocols. BA protocols require a committee
of pre-agreed identities among which the BA protocol can run.
Such a committee can either be established using Nakamoto
consensus itself or using previous rounds of BA.
Different from OHIE and other Nakamoto-style protocols,
2, BA-based blockchain
which can tolerate any constant f < 1
protocols [2], [20], [27], [33], [41], [47] all require f < 1
3. A
key bottleneck in BA-based designs, as acknowledged in prior
works, is that of establishing (or replenishing) committees
with 200-2000 identities each. This large committee size is
necessary to ensure the requisite resilience f. The latency of
replenishing committees can be between in tens of seconds [2],
[20], minutes [33], [47], or hours [28]. After committees are
established and when there are no attacks, BA protocols tend
to have smaller conﬁrmation latencies [20], [27], [47] than
Nakamoto-style protocols. Finally, we point out that classical
BA protocols, such as PBFT [9], can be considerably more
complex to implement and verify, as compared to Nakamoto
consensus.
Sharding designs. A subset of the BA-based blockchain
protocols employ sharding [28], [33], [47], where many par-
allel shards process blocks in parallel. This helps to improve
decentralization and throughput, at
the cost of additional
complexity. But due to the overheads associated with each
shard, these protocols [28], [33], [47] typically use a small
number of shards (no more than 25). The best decentralization
was achieved in [28], with about 25 blocks proposed every 8
seconds. In comparison, OHIE does not involve pre-assigning
nodes to its k chains, and can easily use as large a k as needed.
The decentralization factor of OHIE in our experiments (i.e.,
about 600 blocks every 10 seconds) is about 20x higher than
the sharding designs.
VIII. CONCLUSION
We
present OHIE,
a
that
protocol
permissionless
composes
proof-of-work
instances
blockchain
of Nakamoto consensus
securely. OHIE has a simple
implementation and a modular safety and liveness proof. It
achieves linear scaling with available bandwidth and at least
about 20x better decentralization over prior works.
parallel
ACKNOWLEDGMENTS
We thank Hung Dang, Seth Gilbert, Aquinas Hobor, Ilya
Sergey, Shruti Tople, and Muoi Tran for their helpful feed-
backs on this work. We thank Sourav Das for help on format-
ting the ﬁgures in this paper. This work is partly supported by
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:19:07 UTC from IEEE Xplore.  Restrictions apply. 
101
the sponsors of the Crystal Center at National University of
Singapore. All opinions and ﬁndings presented in this work
are those of the authors only.
REFERENCES
[1] OHIE - Blockchain scaling.
https://github.com/ivicanikolicsg/OHIE,
2019.
[2] ABRAHAM, I., MALKHI, D., NAYAK, K., REN, L., AND SPIEGELMAN,
A. Solida: A blockchain protocol based on reconﬁgurable byzantine
In International Conference on Principles of Distributed
consensus.
Systems (OPODIS) (2017).
[3] AL-BASSAM, M., SONNINO, A., BANO, S., HRYCYSZYN, D., AND
In
DANEZIS, G. Chainspace: A sharded smart contracts platform.
Network and Distributed System Security Symposium (NDSS) (2018).
[4] APOSTOLAKI, M., ZOHAR, A., AND VANBEVER, L. Hijacking bitcoin:
Routing attacks on cryptocurrencies. In IEEE Symposium on Security
and Privacy (2017).
[5] BAGARIA, V., KANNAN, S., TSE, D., FANTI, G., AND VISWANATH,
P. Deconstructing the blockchain to approach physical limits. arXiv
preprint arXiv:1810.08092v2 (2018).
[6] BAILIS, P., AND GHODSI, A. Eventual consistency today: limitations,
extensions, and beyond. Commun. ACM (2013).
[7] BENTOV, I., PASS, R., AND SHI, E. Snow white: Provably secure proofs
of stake. IACR Cryptology ePrint Archive (2016).
[8] BONNEAU, J., MILLER, A., CLARK, J., NARAYANAN, A., KROLL,
J. A., AND FELTEN, E. W. Sok: Research perspectives and challenges
for bitcoin and cryptocurrencies. In IEEE Symposium on Security and
Privacy (2015).
[9] CASTRO, M., AND LISKOV, B. Practical byzantine fault tolerance. In
Symposium on Operating Systems Design and Implementation (OSDI)
(1999).
[10] CROMAN, K., DECKER, C., EYAL, I., GENCER, A. E., JUELS,
A., KOSBA, A. E., MILLER, A., SAXENA, P., SHI, E., SIRER,
E. G., SONG, D., AND WATTENHOFER, R. On scaling decentralized
blockchains - (A position paper). In Financial Cryptography and Data
Security - FC International Workshops (BITCOIN) (2016).
[11] DANEZIS, G., AND MEIKLEJOHN, S. Centrally banked cryptocurren-
cies. In Network and Distributed System Security Symposium (NDSS)
(2016).
[12] DECKER, C., SEIDEL, J., AND WATTENHOFER, R. Bitcoin meets strong
consistency. In International Conference on Distributed Computing and
Networking (ICDCN) (2016).
[13] EYAL, I., GENCER, A. E., SIRER, E. G., AND VAN RENESSE, R.
Bitcoin-NG: A Scalable Blockchain Protocol. In NSDI (2016).
[14] EYAL, I., AND SIRER, E. G. Majority is not enough: Bitcoin mining is
vulnerable. Communications of the ACM 61, 7 (2018), 95–102.
[15] FITZI, M., GAZI, P., KIAYIAS, A., AND RUSSELL, A. Parallel chains:
Improving throughput and latency of blockchain protocols via parallel
composition. Cryptology ePrint Archive, report 2018/1119, version
20181130:165620, Nov. 2018. https://eprint.iacr.org/2018/1119.
[16] GARAY, J., AND KIAYIAS, A. Sok: A consensus taxonomy in the
blockchain era, 2018. https://eprint.iacr.org/2018/754.pdf.
[17] GARAY, J., KIAYIAS, A., AND LEONARDOS, N. The bitcoin backbone
protocol: Analysis and applications. In EUROCRYPT (2015).
[18] GARAY, J. A., KIAYIAS, A., AND LEONARDOS, N.
The bitcoin
backbone protocol with chains of variable difﬁculty. In CRYPTO (2017).
[19] GENCER, A. E., BASU, S., EYAL, I., VAN RENESSE, R., AND SIRER,
E. G. Decentralization in bitcoin and ethereum networks. In Financial
Cryptography and Data Security (FC) (2018).
[20] GILAD, Y., HEMO, R., MICALI, S., VLACHOS, G., AND ZELDOVICH,
In
N. Algorand: Scaling byzantine agreements for cryptocurrencies.
Symposium on Operating Systems Principles (2017).
[21] GILBERT, S., AND LYNCH, N. Brewer’s conjecture and the feasibility
of consistent, available, partition-tolerant web services. SIGACT News
33, 2 (2002), 51–59.
[22] GILBERT, S., AND LYNCH, N. A. Perspectives on the CAP theorem.
IEEE Computer 45, 2 (2012), 30–36.
[23] HEILMAN, E., KENDLER, A., ZOHAR, A., AND GOLDBERG, S. Eclipse
attacks on bitcoin’s peer-to-peer network. In USENIX Security Sympo-
sium (2015).
[24] KIAYIAS, A., AND PANAGIOTAKOS, G. Speed-security tradeoffs in
IACR Cryptology ePrint Archive 2015 (2015),
blockchain protocols.
1019.
[25] KIAYIAS, A., RUSSELL, A., DAVID, B., AND OLIYNYKOV, R.
In
Ouroboros: A provably secure proof-of-stake blockchain protocol.
CRYPTO (2017).
[26] KIFFER, L., RAJARAMAN, R., AND ABHI SHELAT. A Better Method to
Analyze Blockchain Consistency. In CCS (2018).
[27] KOKORIS-KOGIAS, E., JOVANOVIC, P., GAILLY, N., KHOFFI, I.,
GASSER, L., AND FORD, B. Enhancing bitcoin security and per-
In USENIX
formance with strong consistency via collective signing.
Security Symposium (2016).
[28] KOKORIS-KOGIAS, E., JOVANOVIC, P., GASSER, L., GAILLY, N., AND
FORD, B. OmniLedger: A Secure, Scale-Out, Decentralized Ledger via
Sharding. In IEEE Symposium on Security and Privacy (2018).
[29] KUNG, H. T., AND PAPADIMITRIOU, C. H. An optimality theory of
concurrency control for databases. In SIGMOD (1979).
[30] LAMPORT, L. How to make a multiprocessor computer that correctly
executes multiprocess programs. IEEE Trans. Computers 28, 9 (1979),
690–691.
[31] LEWENBERG, Y., SOMPOLINSKY, Y., AND ZOHAR, A. Inclusive block
chain protocols. In International Conference on Financial Cryptography
and Data Security (2015).
[32] LI, C., LI, P., ZHOU, D., XU, W., LONG, F., AND YAO, A. Scaling
nakamoto consensus to thousands of transactions per second, 2018.
Arxiv preprint, arXiv:1805.03870v4.
[33] LUU, L., NARAYANAN, V., ZHENG, C., BAWEJA, K., GILBERT, S.,
AND SAXENA, P. A secure sharding protocol for open blockchains. In
CCS (2016).
[34] LUU, L., VELNER, Y., TEUTSCH, J., AND SAXENA, P. Smartpool:
Practical decentralized pooled mining. In USENIX Security Symposium
(2017).
[35] MARTINO, W., QUAINTANCE, M., AND POPEJOY, S.
Chainweb:
A Proof-of-Work Parallel-Chain Architecture for Massive Throughput
(DRAFT v15), 2018. https://kadena.io/download/178/.
[36] MCCORRY, P., HICKS, A., AND MEIKLEJOHN, S. Smart contracts for
bribing miners. IACR Cryptology ePrint Archive (2018).
[37] MERKLE, R. C. A digital signature based on a conventional encryption
function. In CRYPTO (1987).
[38] MILLER, A., XIA, Y., CROMAN, K., SHI, E., AND SONG, D. The
honey badger of BFT protocols. In CCS (2016).
[39] NAKAMOTO, S. Bitcoin: A peer-to-peer electronic cash system, 2008.
https://bitcoin.org/bitcoin.pdf.
[40] PASS, R., SEEMAN, L., AND SHELAT, A. Analysis of the blockchain
protocol in asynchronous networks. In EUROCRYPT (2017).
[41] PASS, R., AND SHI, E. Hybrid consensus: Efﬁcient consensus in
the permissionless model. In International Symposium on Distributed
Computing (2017).
[42] QUAINTANCE, M., AND MARTINO, W. Chainweb Protocol Security
https:
Calculations (WORK IN PROGRESS - DRAFT v7), 2018.
//kadena.io/download/187/.
[43] SOMPOLINSKY, Y., LEWENBERG, Y., AND ZOHAR, A. Spectre: A fast
and scalable cryptocurrency protocol. IACR Cryptology ePrint Archive
(2016).
[44] SOMPOLINSKY, Y., AND ZOHAR, A.
Secure high-rate transaction
processing in bitcoin. In International Conference on Financial Cryp-
tography and Data Security (2015).
[45] SOMPOLINSKY, Y., AND ZOHAR, A. Phantom: A scalable blockdag
protocol, 2018. https://eprint.iacr.org/2018/104/20180330:121321.
[46] YU, H., NIKOLIC, I., HOU, R., AND SAXENA, P. OHIE: Blockchain
Scaling Made Simple, 2019. Arxiv preprint, arXiv:1811.12628.
[47] ZAMANI, M., MOVAHEDI, M., AND RAYKOVA, M.