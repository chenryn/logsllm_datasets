# VPNFilter-新型IoT Botnet深度解析
##### 译文声明
本文是翻译文章
译文仅供参考，具体内容表达以及含义原文为准。
报告编号： 2018-05-30
报告来源： 360CERT
报告作者： hjy, redrain
更新日期： 2018-05-30
## 0x00 事件概述
2018年5月23日，Cisco Talos团队披露了一起名为”VPNFilter”的IoT
Botnet事件，360CERT团队进行了详细的事件跟踪，并形成本文分析。
VPNFilter是一个通过IoT设备漏洞组建Botnet，多阶段，多平台，模块化，多功能的恶意网络攻击行动，从目前掌握的情况，总共有三个阶段。
**第一阶段** ，作为dropper获得感染设备的持续化访问权限，为第二阶段打开入口，该阶段采取了很强的C2隐藏行为和安全对抗行为。  
 **第二阶段** ，作为信息收集角色和模块功能平台，能对设备文件系统，设备常规信息收集，并提供命令执行能力和设备管理能力，并且在某些平台中实现了自我销毁。  
 **第三阶段**
，作为第二阶段的恶意功能模块下发，为第二阶段提供了更有目的性的攻击行为能力，截至目前，我们所掌握到的两个插件，一个提供tor通信，另一个用于数据包嗅探。
**关于VPNFilter特点描述**
  * 具有强对抗性和周密计划性
  * 多阶段执行
  * Dropper通过图床进行上下行
  * 采用和BlackEnergy相似的变种RC4算法对信息加密（来自Talos的观点）
  * 利用图片EXIF获取C2
  * C2通过Tor流量进行交互
  * 通过利用Linksys、Mikrotik、Netgear、TP-Link、QNAP的相关漏洞进行传播感染
**基础关联情况**
数据来源于360-netlab
**VPNFilter感染时间轴**
## 0x01 stage1分析
cisco报告中stage1的样本有2个，1个为MIPS架构，1个为x86架构。我们重点分析了x86架构的样本(SHA256:0e0094d9bd396a6594da8e21911a3982cd737b445f591581560d766755097d92)。
样本最初于2017年6月12日被提交到VirusTotal，文件名为C:\Users\chli\Documents\qsync.php。
设置守护进程。
通过写crontab实现持久化，这在IOT病毒中还是第一次出现。crontab格式为{minute}{hour}{day-of-month}{month}{day-of-week}， _/5_ *表示每5分钟执行一次。
样本中的关键字符串都经过了变形的RC4算法加密，这也是将其与BlackEnergy关联起来的重要原因之一。
标准的RC4算法中对S盒的初始化如下：
样本的RC4算法中对S盒的初始化如下：
样本中的算法实际上把swap换成了异或，key是硬编码的%^:d。对12个被加密的字符串解密后的结果如下。
    /var/run/client.crt
    /var/run/client.key
    /var/run/client_ca.crt
    0.3.9qa
    /var/run/msvf.pid
    /var/vpnfilter
    /update/test
样本首先尝试从photobucket.com下载图片，从EXIF的经纬度中提取C2地址。如果失败尝试从toknowall.com/manage/content/update.php下载图片，重复同样的操作。对toknowall.com的历史解析如下。
忽略Cloudflare，看到历史解析记录188.165.218.31，直接访问上面解密后出来的188.165.218.31/manage/content/update.php。现在C2地址失效了，看备份web.archive.org/web/20180509165520/toknowall.com/manage/content/update.php。
可以看出来是个图片。
查看EXIF。
    GPSLatitude     1193143    deg 55' 21.00"
    GPSLongitude    4296160226 deg 47' 54.00"
在样本中通过0x08049160处的函数实现还原出C2地址操作：
    const char lat[] = "97 30 1193143"; // from Exif data
    const char lon[] = "4294967178 140 4294967274"; // from Exif data
    int o1p1, o1p2, o2p1, o3p1, o3p2, o4p1;
    uint8_t octets[4];
    sscanf(lat, "%d %d %d", &o1p2, &o1p1, &o2p1);
    sscanf(lon, "%d %d %d", &o3p2, &o3p1, &o4p1);
    octets[0] = o1p1 + ( o1p2 + 0x5A );
    octets[1] = o2p1 + ( o1p2 + 0x5A );
    octets[2] = o3p1 + ( o3p2 + 0xB4 );
    octets[3] = o4p1 + ( o3p2 + 0xB4 );
    printf("%u.%u.%u.%u\n", octets[0], octets[1], octets[2], octets[3]);
还原出来C2地址217.12.202.40，相关历史如下。
    时间          域名
    2017-05-15    [www.redstargel.ru](www.redstargel.ru)
    2017-05-07    redstargel.ru  
    2016-10-24    redstargel.ru  
    2016-10-22    jojoran.ru  
    2016-08-03    jojoran.ru  
    2016-05-22    bellasweets.ru  
    2016-05-21    bellasweets.ru  
    2016-05-19    bellasweets.ru  
    2016-05-15    bellasweets.ru  
    2016-05-08    bellasweets.ru  
    2016-05-07    bellasweets.ru  
    2016-04-23    bellasweets.ru  
    2016-03-14    bellasweets.ru  
    2016-03-04    bellasweets.ru  
    2016-03-03    bellasweets.ru  
    2016-03-02    bellasweets.ru  
    2015-12-26    bellasweets.ru  
    2015-12-25    bellasweets.ru  
    2015-12-24    bellasweets.ru  
    2015-12-03    bellasweets.ru  
    2015-11-20    bellasweets.ru  
    2015-11-19    bludmaster.ru  
    2015-11-01    bellasweets.ru  
    2015-10-31    bellasweets.ru  
如果两次图片下载都失败了，则监听本地socket，判断IP、magic number等，从数据包中提取C2地址。
确认从C2地址下载的文件大于1000字节。
chmod511使下载的文件具有可执行权限， 然后通过sys_execve系统调用执行。
## 0x02 stage2分析
cisco报告中stage2的样本有8个，2个为MIPS架构，2个为ARM架构，3个为x86架构。在3个x86架构的样本中，有一个(SHA256:9683b04123d7e9fe4c8c26c69b09c2233f7e1440f828837422ce330040782d17)和其它两个差别较大。因为该样本是一个调试样本，包含了一些调试信息。
根据调试信息，可以非常清晰看到stage2的执行流程。
该调试样本首先初始化之后使用和stage1同样的算法和密钥解密出字符串，然后等待stage3的tor模块进行通信。将ip地址、mac地址等信息整理成json格式的数据，发给C2地址217.12.202.40，94.242.222.68和91.121.109.209。