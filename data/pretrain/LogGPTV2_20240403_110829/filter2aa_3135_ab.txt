36.7 
101 
521 
Desktop 
61.4 
151 
571 
Table 1: Average time between adjacent symbols and byte time 
range 
The Reed-Solomon FEC properties were set to: 
• 
Block size = 255 
• 
Data bytes = 235 
• 
Parity bytes = 20 
The transmission structure was comprised of 90 bytes: 
• 
4 Header bytes 
• 
20 Reed-Solomon parity bytes 
• 
1 Packet counter byte 
• 
63 Encoded audio bytes 
• 
2 Checksum bytes 
Audio properties were set to: 
• 
8000 PCM samples per seconds 
• 
G.726 encoding = 2 bits per sample 
On average 2 packets were transmitted every second, each 
packet delivering 252 encoded PCM samples. The last packet 
was set to transfer 47 bytes instead of 63 to yield a total of 
8000 encoded PCM samples per second. 
Radio frequency equipment used: 
• 
A 1.35GHz-9.5GHz 8x10cm Log Periodic 
Antenna with 5-6db gain 
• 
1MHz to 3GHz low noise amplifier with 20dB 
gain and 2dB noise factor. Gain at 1.5GHz: 16dB 
• 
SDRplay RSP1A receiver. 
Test results 
The transmitting computer and the reception equipment 
were placed 50 feet apart and at opposite ends of an 
apartment. The transmitting desktop computer was placed 
with its rear side facing the reception equipment as it was 
found that it emits the most energy from that side. The 
transmitting laptop computer was placed with its front side 
facing the reception equipment, as both the front and rear 
sides emitted significant energy. The desktop computer setup 
is shown in Figure 4. The reception equipment is shown in 
Figure 5. The space between the transmitting computer and 
the reception equipment is show in Figure 6. 
4 
Figure 4: Desktop computer setup 
Figure 5: Reception setup 
Figure 6: Line of sight between the transmitting computer and the 
reception equipment 
The received clock signal from the desktop computer is 
shown in Figure 7. The signal is generated by a “spread 
spectrum clock generator.” The clock signal is frequency 
modulated to “spread” radiated energy across a frequency 
band. The goal of this method is to comply with 
electromagnetic compatibility regulations. A sample of the 
reception process stages is shown in Figure 8.  
Figure 7: Received clock signal 50 feet away from the desktop 
computer. Frequency span between 1562.5 MHz and 1567.5 MHz. 
Figure 8: A sample for received and processed symbols. The upper 
graph shows sample of the absolute value of the received vector. 
The middle graph shows the data after filtering. The lower graph 
shows the symbols recovered from the data. 
Measured average packet bit rate and packets reception 
quality are shown in Table 2. For valid packet percentage 
measurements, two results were documented – one when the 
monitor was on and one when the monitor was off (following 
Windows’ power saving plan). In both cases the recovered 
audio quality was good, considering the sampling rate and 
G.726 codec. 
Computer 
Average bit 
rate [kbit/s] 
Valid packets 
received with 
the monitor 
turned on [%] 
Valid packets 
received with 
the monitor 
turned off [%] 
Laptop 
26 
> 99 
Irrelevant 
Desktop 
23 
89.5 
> 99 
Table 2: Average bit rate and average valid packets received at 50 
feet 
5 
To achieve best audio quality, the following setup changes 
were made: 
• 
MemoryBlockSize transmission time = 8 µsec 
• 
Reed-Solomon data bytes = 251 
• 
Reed-Solomon parity bytes = 4 
• 
G.726 encoding = 2 bits per sample  
On average eight packets were transmitted every second, 
each packet delivering 168 encoded PCM samples. The last 
packet was set to transfer 39 bytes instead of 63, yielding a 
total of 8000 encoded PCM samples per second. 
Measured average packet bit rate and packet reception 
quality are shown in Table 3. In both cases the recovered 
audio quality was good, considering the sampling rate and 
G.726 codec. 
Computer 
Best audio 
quality setup 
average bit 
rate [kbit/s] 
Valid packets 
received with 
the monitor 
turned on [%] 
Valid packets 
received with 
the monitor 
turned off [%] 
Laptop 
33 
> 99 
Irrelevant 
Desktop 
30 
Low 
> 99 
Table 3: Best audio quality average bit rate and average valid 
packets received at 50 feet 
Discussion 
The tests showed good results when the distance between 
the transmitter and the reception equipment was fifty feet and 
within a line of sight. It was not tested at longer distances due 
to the physical limitations of the facility. Tests performed at 
different locations in the facility showed similar results at 
distances smaller than 50 feet. 
Tests also showed that the desktop computer emitted 
signals which were not generated by Scotty. The laptop 
computer did not emit such signals. These signals are most 
likely related to the display activity, as the computer stops 
transmitting these signals once the monitor is turned off by 
the Windows power plan. The laptop uses Windows Intel’s 
integrated, power-saving GPU for most applications. It 
automatically switches to the discrete, high-performance 
GPU when an application requires more performance. The 
desktop computer uses discrete GPU by default. To verify 
this, when the desktop computer was booted with the monitor 
connected to the integrated GPU HDMI output, the 
interferences were not received and the ratio of good packets 
exceeded 99% with the monitor on. 
This work demonstrates transmission of audio data which 
can be done continuously without stop, 24/7. The same 
technique may be used to extract other types of data from a 
target computer 24/7. Thus, an attacker may choose to extract 
the desired data during non-working hours when the monitor 
is turned off, or the GPU is idle and there’s no close 
supervision of computer activities. If the monitor is not turned 
off by the Windows power saving plan, the attacker may turn 
it off at the time of the attack. 
Future directions 
This work focused on reception of electromagnetic waves 
emitted by the base memory clock signal of the discrete GPU 
memory. Other signals should also be explored as well. An 
example can be seen in Figure 9 where the reception 
frequency was set to the GDDR6 clock frequency divided by 
half. In this case the signal was received at close range and 
processed by the Spock software with good results. But, as 
data signals have different properties than the clock signal, the 
software requires adaptation to achieve best results. 
The potential of emitting a signal whose frequency is 
correlated to the data itself should also be explored. Besides 
the benefit of expanding the number of transmitted signals and 
controlling their frequencies, it may enable the use of data 
patterns for frequency-hopping spread spectrum (FHSS) 
transmission. 
Figure 9: Received signal from the laptop computer at 732MHz 
(Transmission clock set to 1465.25). Frequency span between 722 
MHz and 742 MHz. 
Conclusions 
In this paper a new side channel attack is proposed. 
Dedicated software encodes audio on the target computer and 
then uses controlled graphics card memory transfers to 
generate electromagnetic waves. These waves are transmitted 
from the target computer. The attacker’s computer receives 
the electromagnetic waves using an antenna, an LNA and an 
SDR receiver. Dedicated software processes the data and 
recovers the audio. Both data transmission and data recovery 
techniques were explained and the test results were presented. 
Finally, the results were discussed and future directions were 
suggested. 
6 
Acknowledgements 
I would like to thank my wife and our children for 
supporting my endeavor. I would also like to thank you, the 
reader, for your interest in my work. 
References 
[1] Eck W. “Electromagnetic radiation from video display units: an 
eavesdropping risk?” Computers and Security,  4, no. 4: 269-
286, 1985. 
[2] Kuhn, M. G., and Anderson, R. J. Soft. “Soft Tempest: Hidden 
Data Transmission Using Electromagnetic Emanations.” In 
Information Hiding (1998), ed. D. Aucsmith,  vol. 1525 of 
Lecture Notes in Computer Science, (Springer): 124–142. 
[3] Thiele, E., “Tempest for Eliza.” 2001. 
http://www.erikyyy.de/tempest/. 
[4] Kania B., “VGASIG: FM radio transmitter using VGA graphics 
card.” 2009. http://bk.gnarf.org/creativity/vgasig/vgasig.pdf. 
[5] Guri M., Kedma G., Kachlon A., Elovici Y. “AirHopper: 
Bridging the air-gap between isolated networks and mobile 
phones using radio frequencies.” In Malicious and Unwanted 
Software: The Americas (MALWARE), 2014 9th International 
Conference on IEEE, 2014: 58-67.