### Performance Degradation and Isolation

In workload mix 1, a 36% degradation in performance is observed due to resource contention between VMs running on adjacent CPU cores. To evaluate the effectiveness of NINEPIN in performance isolation without the availability of service-level and energy utility functions, we use workload mix 1. In this scenario, NINEPIN aims to mitigate performance interference without optimizing overall system utility.

Table 2 shows that NINEPIN reduces the average completion time of each benchmark application running on co-located VMs compared to both Q-Clouds and the default case (without any performance isolation mechanism) in Table 1. We assume that all four VMs require 50% of the CPU resources in the absence of performance interference. Performance isolation is measured by the normalized performance of the VMs when they are co-located in the same virtualized server, with normalization based on the performance shown by the VMs when they run in isolation.

Figures 5(a) and 5(b) demonstrate that NINEPIN achieves better performance isolation among co-located VMs compared to Q-Clouds and the default case. Figure 5(c) illustrates the CPU resources allocated to mitigate performance interference between various hosted applications. The improved performance isolation by NINEPIN is attributed to the use of a fuzzy MIMO model, which more accurately captures performance interference relationships. Due to space limitations, results for other workload mixes are omitted, and workload mix 1 is used as a representative case.

### Optimal Performance Targeting

We evaluate the benefits of utility-optimized performance targeting by NINEPIN. A performance target set is defined as a group of performance targets for applications co-located in a virtualized server. Each performance target specifies the desired CPU equivalent performance as a percentage of CPU resources required to achieve a certain performance level [21].

For SPEC CPU2006 workload mix 1, which includes benchmark applications 436.cactusADM, 437.leslie3d, 459.GemsFDTD, and 470.lbm, Table 3 provides the performance target sets. Figures 6(a) and 6(b) compare the system utility and energy consumption associated with these performance target sets. We observe that performance target set 5, computed using NINEPIN, maximizes system utility and minimizes energy consumption. Figure 6(c) shows that optimal performance targets vary across the five different SPEC CPU2006 workload mixes, due to variations in performance interference relationships and service-level utility functions. Nevertheless, NINEPIN ensures optimal performance targets.

### System Utility and Energy Efficiency

A utility-based model integrates performance assurance and energy efficiency goals to maximize the profitability of cloud service providers. Table 4 compares the overall system utility and energy efficiency between NINEPIN and Q-Clouds for various SPEC CPU2006 workload mixes. Both approaches can mitigate performance interference between co-located applications, but NINEPIN provides significantly lower energy consumption while improving system utility.

Figures 7(a) and 7(c) show that NINEPIN achieves better system utility than Q-Clouds for all five SPEC CPU2006 workload mixes. System utility is a combination of the service-level utility of co-located applications and the utility of energy consumption. NINEPIN's hierarchical control framework maximizes overall system utility by finding optimal performance targets through utility optimization and regulating the system to achieve these targets using a model predictive controller. Regulatory actions involve CPU resource allocations to co-located VMs in the virtualized server. The system utility and energy consumption vary with workload mixes due to different performance interference relationships, energy consumption patterns, and service-level utility functions. On average, NINEPIN improves system utility by 28%.

Figures 7(b) and 7(c) illustrate the improvement in energy efficiency by NINEPIN for various SPEC CPU2006 workload mixes. NINEPIN reduces energy consumption by controlling each VM's CPU usage limits according to an energy usage model, balancing the utility of meeting performance objectives with energy efficiency. In contrast, Q-Clouds always aims to achieve a fixed performance target without considering energy costs. On average, NINEPIN improves energy efficiency by 32% over Q-Clouds.

### NINEPIN Robustness

We evaluate NINEPIN's robustness against application heterogeneity and dynamic workload variation. As a case study, we run one interactive three-tier application, RUBiS, with a dynamic workload, and one SPEC CPU2006 benchmark application, 470.lbm, in the same virtualized server. Initially, RUBiS faces a workload of 500 concurrent users, which doubles at the fifth control interval. The prediction accuracy of NINEPINâ€™s system models under dynamic workloads significantly impacts its robustness. We measure the accuracy of the fuzzy MIMO models for performance and energy usage prediction using the normalized root mean square error (NRMSE), a standard deviation metric, and compare our results with the modeling technique used in Q-Clouds.

Figures 8(a), (b), and (c) show that NINEPIN outperforms Q-Clouds in predicting the performance of co-located applications and the energy usage of the underlying server under different workload intensities. The average improvement in prediction accuracy for performance and energy usage is 26% and 23%, respectively. The improvement is more significant when the workload changes from 500 to 1000 concurrent users, due to the fuzzy MIMO model's ability to adapt to workload changes and capture the inherent non-linearity of the system.

We measure the system utility and energy usage under dynamic workloads, as shown in Figure 9(a). Figure 9(b) illustrates the instantaneous system behavior of the virtualized server under the influence of Q-Clouds and NINEPIN mechanisms for performance isolation. NINEPIN consistently achieves lower energy consumption and improved system utility compared to Q-Clouds. At the fifth control interval, there is a sharp decline in system utility for both performance isolation mechanisms due to a sudden change in the performance interference relationship caused by workload variation. The increase in workload intensity also leads to higher energy consumption by the underlying server. Note that the performance improvement by NINEPIN is more significant after the fifth control interval, as it re-computes and assures optimal operating conditions in response to changing performance interference relationships.

Figure 9(c) summarizes the energy consumption improvement by NINEPIN. Table 5 shows the improvement in system utility and energy efficiency by NINEPIN for different RUBiS workloads compared to Q-Clouds and the default case. In the two scenarios, NINEPIN outperforms Q-Clouds in average energy efficiency and average system utility by 16% and 72%, respectively.

### Conclusion and Future Work

Performance isolation among heterogeneous customer applications is a critical yet challenging problem in virtualized data centers. NINEPIN provides a non-invasive performance isolation mechanism for data centers hosting third-party applications and using third-party virtualization software. As demonstrated by modeling, analysis, and experimental results, NINEPIN's main contributions are robust performance isolation, energy efficiency, and overall system utility optimization. It increases data center utility by aligning performance isolation goals with economic optimization objectives. The key technical novelty of NINEPIN lies in its hierarchical control framework, which integrates machine learning-based system modeling, utility-based performance targeting, and model predictive control-based target tracking and optimization.

Future work will extend NINEPIN to address performance interference between I/O-bound workloads.

### Acknowledgements

This research was supported in part by NSF CAREER award CNS-0844983.

### References

[References listed here]