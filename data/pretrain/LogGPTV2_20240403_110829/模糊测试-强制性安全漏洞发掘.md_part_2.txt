构造自动化工具。我们有目的地选择了多种编程语言来完成这个任务。语言的选择是根据具体
任务的，这也说明了模糊测试可以用多种方法实现。当然，没有必要一一罗列所用到的所有编
程语言的背景知识，但是介绍一两种语言无疑会帮助读者从这些章节中获益。
本书自始至终都贯穿着对各种安全漏洞的详细描述，并讨论如何通过模糊测试来识别这些
漏洞。然面，定义或剖析安全漏洞本身的性质并不是本书的目标。一些优秀的书籍是专门讨论
这一主题的。如果需要寻找一部关于软件安全漏润的初级读本，可以参阅GregHoglund、Gray
McGraw所著的《Exploiting Software》和JackKoziol、David Litchfiel等的《Shellcoder’s
Handbook》，它们都是极好的参考读物。
学习方法
如何最好地利用本书，这取决于读者的背景和目的，如果你是一位模糊测试的初学者，我
们推荐你按顺序逐章消化理解，因为本书的内容进行了精心编排，前面先介绍一些必要的背景
信息，随后转人高级主题。反之，如果你已经在使用各种模糊测试工具方面花费了一些时间，
那立请不要犹豫，可以直接进人感兴趣的主题，因为本书的不同逻辑章节的划分大致上是相互
独立的。
本书的第一部分主要介绍不同的、具体的模糊测试类型，这些模糊测试类型将在随后的章
节中逐一讨论。如果读者对模糊测试比较陌生，可以考虑把这一部分作为必读章节，模糊测试
可以作为多种目标下的安全性测试方法，不过这些目标下的方法都遵循相同的基本原则。在第
一部分，我们试图将模糊测试定义为一种安全漏洞发握方法并详细介绍相关的知识，不考虑这
种方法运用于何种目的。
第二部分关注模糊测试的各种相关应用目标。每种目标的介绍跨越了两到三章。最前面的
一章介绍每类目标的背景信息，随后的各章集中介绍这些目标下的模糊测试自动化，详细阐述
如何针对这种目标构造模糊器。当认为有必要分别介绍Windows平台和UNIX平台下的模糊器
工具时，这两个主题分别安排在有关自动化的两章。例如，以第1章“文件格式模糊测试”为
例，该章详细描述有关模糊文件分析器的内容，第12章“文件格式模糊测试：UNIX平台上的
自动化测试”则深入介绍基于UNIX的文件模糊器的实用程序设计，第13章“文件格式模糊测
试：Windows平台上的自动化测试”讲解运行在Windows环境中的文件格式模糊器如何构造。
第三部分讨论模糊测试领域的高级主题，对于那些已经牢固掌握模糊测试背景知识的读者，
可以直接跳入第三部分，不过大部分读者很可能需要先了解第一部分和第二部分，然后再学习
第三部分。第三部分关注的是近年来浮现出的新技术，这些技术刚刚得到实施，但是未来将成
为安全漏洞发掘的高级工具可以利用的模糊测试技术。
---
## Page 9
IX
最后，在第四部分，我们将总结学习过本书后的收获，然后深人洞察未来的发展方向。尽
管模糊测试并不是一个新概念，但是这一领域仍然有足够的发展空间，并且我们希望本书将为
未来的研究空间注人一丝灵感。
少许函默
写书是一件严肃认真的工作，尤其是对诸如模糊测试这样的复杂主题。这就是说，我们希
望尽量给随后的读者（实际上这些人可能比写书的人更重要）带来一些乐趣，同时也尽最大的
努力让写作的过程更愉快。出于这样的考虑，我们决定在每一章的开头引用美国第43届总统
GeorgeW.Bush（别名Dubya）的一段话。不论你的政治倾向或信仰是什么，没人能够否定
Bush先生在过去几年中所炮制出的一些引文，这些引文甚至能够写满一年的日历！我们从中挑
选了一些最喜欢的引文与读者分享，希望读者和我们得到同样的快乐。读完本书后，读者会发
现模糊测试可以被应用于各种不同的目标，显然也可以应用到对英语的模糊测试。
关于封面
119
有时，安全漏洞经常被称为“鱼”（例如，可以参见DailyDave安全性邮件列表中关于
“TheLWord&Fish”的提示线索）。这是一个有用的类比，在讨论安全性和安全漏洞时可以被
应用到这个向题的各个方面。可以把这一领域的研究者比嘴为钓鱼者。对应用程序的汇编代码
实施逆向工程，逐行分析查找安全漏洞，这样的人可比喻为“深海钓鱼者”。同许多其他的审
核手段相比，模糊测试充其量只是海面搜索，并且通常只对“容易抓的鱼”更有效。此外，大
灰熊是一个著名的“模糊动物”，当然也是强大的动物。本书的封面中有一个模糊的动物，正
在捕提一条鱼，后者代表一个安全漏洞。
配套站点
站点www.fuzzing.org绝对是本书不可分割的一部分，并不仅仅起到补充资源的作用。除了
包含本书出版后的勘误表外，该站点还是书中所有源代码和工具的一个中央资源仓库。经过一
段时间的努力，我们打算让这个站点从一个以图书为中心的资源站点发展成为模糊测试这一学
科的资源、工具和信息的有价值的社区。我们欢迎读者提出反馈信息，以帮助我们让该站点成
为一个有价值的、开放的知识库。
---
## Page 10
0
目
译者序
译者简介
第3章模糊测试方法和模糊器类型
.......2
序言
3.1模糊测试方法
.21
前言
3.1.1预先生成测试用例
...21
致谢
3.1.2随机方法
第一部分背
景
3.1.3
协议变异人工测试
3.1.4变异或强制性测试
--23
第1章安全漏洞发掘方法学
3.1.5自动协议生成测试
-23
1.1白盒测试
-/
3.2模糊器类型
1.1.1源代码评审
--
3.2.1本地模期器…
1.1.2工具和自动化
..3
3.2.2远程模期器…
1.1.3优点和缺点
3.2.3内存模期器
..27
1.2黑金测试
...5
3.2.4模糊器框架
-28
1.2.1人工测试
3.3小结
..29
1.2.2自动测试或模糊测试
第4章数据表示和分析
·.30
1.2.3优点和缺点
4.1什么是协议
·.30
1.3灰盒测试
...9
4.2协议域
1.3.1二进制审核
-·9
4.3简单文本协议
....32
1.3.2自动化的二进制审核
4.4
二进制协议
..32
1.3.3优点和缺点
4.5网络协议
..35
14小结
4.6文件格式
..36
第2章什么是模糊测试
-.-13
4.7常见的协议元素
8..
2.1模糊测试的定义
4.7.1名字一值对
2.2模糊测试的历史
4.7.2块标识符
2.3模期测试阶段
4.7.3块长度
.39
2.4模糊测试的局限性和期望
4.7.4校验和
2.4.1访问控制缺陷
...18
4.8小结
..39
2.4.2 设计逻辑不良
...19
第5章有效模糊测试的需求
40
2.4.3后门
5.1
可重现性和文档记录
...40
2.4.4内存破坏
5.2可重用性
41
2.4.5多阶段安全漏洞
53过程状态和过程深度
---
## Page 11
XIII
5.4跟踪、代码覆盖和度量
7.7检测问题
65
5.5错误检测
7.8小结
9-.
5.6资源约束
第8章环境变量和参数的模糊测试：
5.7小结
自动化
8.1iFUZ本地化模期的特性..8
第二部分目标和自动化
第6章自动化测试和测试数据生成
8.3iFUZZ的开发语言
73
6.1自动化测试的价值
8.4实例研究
73
6.2有用的工具和库
8.5益处和改进的余地
6.2.1 ETHEREAL/WIRESHARK
8.6小结
...74
6.2.2 LIBDASM和LIBDISASM
第9章
Web应用程序和服务器模棚测试
..75
6.2.3 LIBNET/LIBNETNT
9.1什么是Web应用程序模期测试
*..75
6.2.4 LIBPCAP
9.2目标应用