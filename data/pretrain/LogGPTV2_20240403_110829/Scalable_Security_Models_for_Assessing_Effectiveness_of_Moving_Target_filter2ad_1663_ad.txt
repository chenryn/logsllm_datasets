ACnone = ∑
i∈pathnone
APnone
i
= 20
(5)
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 08:25:31 UTC from IEEE Xplore.  Restrictions apply. 
ACV M1
= ∑
i∈pathV M1
APV M1
i
= 22
(6)
The summary of deploying the OS diversity is shown in
Table VII, where the attack paths are represented by the
sequence of VM ID numbers. We observe that deploying
the OS diversity on V M3 increases the total attack cost the
most. The target node, V M5, has the same attack cost as
V M3, but we focus on securing the attack paths as explained
in Section III-A. Secondly, when we use the IMs, we listed
the order of important VMs as shown in Table V. It showed
that V M3 is the most important, which yields an equivalent
solution to the ES method. Moreover, the order of important
VMs reﬂects the order of VMs with the highest total attack
cost using the ES method. Of course, the order of important
nodes may not be the same with the ES method in different
network settings and attack scenarios. We extend this idea to
apply the MTD techniques and show that (nearly) equivalent
security decision to the ES method can be computed from
the selected list of highly ranked important nodes, which is
described in Section III-C.
TOTAL ATTACK COST OF DEPLOYING OS DIVERSITY
Table VII
Path
1 3 4 5
1 3 5
1 4 3 5
1 4 5
2 3 4 5
2 3 5
2 3 1 4 5
Total Attack Cost
None
3
2.5
3
2.5
3
2.5
3.5
20.0
V M1
3.5
2.5
3.5
3
3
2.5
4
22.0
V M2
3
2.5
3
2.5
3.5
2.5
4
21
V M3
3.5
3
3.5
2.5
3.5
3
4
23.0
V M4
3.5
2.5
3.5
3
3.5
2.5
4
22.5
V M5
3.5
3
3.5
2.5
3.5
3
4
23.0
C. Simulation Result
We compare the effectiveness of using the IMs and the ES
method when deploying the MTD techniques in a large sized
networked system. For the simulation we use an abstracted
CloudBand model [46]. The example networked system can
be regarded as a small sized example of the CloudBand
model, and we create a larger model for our simulation. We
setup two CloudBand nodes and a resource node as shown
in Figure 7. The HARM of this CloudBand model with
each node hosting ﬁve VMs is depicted in Figure 8. The
number of VMs and topologies are changed in simulations.
The attack goal is to compromise the resource node. We
assume that each CloudBand node can host up to 450
VMs, and VMs in each CloudBand node are connected in a
mesh topology. We used a VM live migration as our MTD
technique. We assume that any VMs can migrate between the
CloudBand nodes (one VM is migrated at a given time), as
long as the node has an available space. If a VM migrates to
another node (while satisfying the service requirements), the
reachability (i.e., the logical topology) of VMs changes, and
522
consequently the security of the system may have changed.
We select a VM to migrate that minimizes the system risk.
We conduct simulations to (i) compare the performance of
using the HARM against an AG using the ES method, and
(ii) compare the performance of using the ES method and
security analysis using the IMs.
Internet
Attacker
CloudBand
Node 1
Cluster
Up to 450 
Up to 450 
VMs
VMs
CloudBand
Node 2
Cluster
Resource Node
Figure 7. A CloudBand Model for Simulation
Upper Layer
CloudBand
Node 1
VM
VM
VM
Internet
Attacker
VM
VM
VM
CloudBand
Node 2
VM
VM
VM
VM
VM 
Compromised
OR1
vul1
vul2
VM 
Compromised
OR1
vul1
vul2
CloudeBand Node 2 
Lower Layer
VM 
Compromised
OR1
vul1
vul2
VM 
Compromised
OR1
vul1
vul2
Resource 
Node
VM 
Compromised
OR1
vul1
vul2
Figure 8. HARM of the CloudBand Model with ﬁve VMs on Each Node
We simulate the performance of (i) an AG using the ES
method, (ii) a HARM (upper layer AG and lower layer AT)
using the ES method, and (iii) a HARM using the IMs
(based on the betweenness centrality). We used betweenness
centrality measure among others (e.g., degree and closeness)
based on the result in [39]. The centrality measure is used to
rank the importance of VMs in the CloudBand model. We
randomly and reasonably chose top 10% important VMs for
security analysis. We assume there are two vulnerabilities
for each VM, and the attacker can exploit any of the two
vulnerabilities to compromise a VM. More vulnerabilities
can be modelled (with other privilege types), but due to
the poor scalability of the AG, we limited the number of
vulnerabilities in our simulation.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 08:25:31 UTC from IEEE Xplore.  Restrictions apply. 
First, Figure 9 shows the performance comparison of
three cases mentioned above (cases (i), (ii) and (iii)) in the
evaluation phase (in terms of time). It shows that the AG
has a highly exponential time complexity. The performance
of the HARM using the ES method is also exponential,
but more scalable than the AG. The HARM using the
IMs performed the best while the security decision (e.g.,
performing risk analysis) was the same with the other two
methods.
Figure 9. Comparison between AG, HARM and HARM using the IMs
when deploying A VM live migration
Second, we simulated the performance with respect to the
different number of important VMs selected. We selected
a range of important VM proportions (in percentage) and
compared against
the ES method. Figure 10 shows the
performance comparison. It shows that as the proportion
of important VMs decreases (i.e., the number of selected
important VMs decreases),
the performance of security
analysis (in terms of time) increases. It also shows that
taking into account 100% proportion of important VMs (i.e.,
taking into account all VMs, equivalent to the ES method)
performs worse than the ES method due to the overhead of
computing the IMs. In conclusion, we observed that the AG
performed the worst, followed by the HARM using the ES
method, and the HARM using the IM performed the best.
Our simulation result showed that using the IMs for security
analysis can effectively compute security decisions, which
are nearly equivalent to the ES method if the proportion
of important nodes (e.g., VMs) selected is small. Selecting
the optimal proportionality, and the performance in various
network scenarios will be studied in future work.
IV. DISCUSSION AND LIMITATIONS
Previous work did not use formal security model (e.g., an
ARM) to compare various effects when deploying the MTD
techniques. It becomes difﬁcult to deploy the most effective
MTD techniques in a large sized networked system without a
comparative security analysis of different MTD techniques.
To address this, we proposed to model the MTD techniques
and analyze the security of them via ARMs. We analyzed
Figure 10. Comparison between the ES method and Security Analysis
using the IMs when deploying a VM live migration
Shufﬂe and Diversity using the AG and the HARM, and
we showed that different deployment strategy of the MTD
techniques has different security effects on the networked
system. We also showed the effectiveness of using the IMs
when deploying the MTD techniques by comparing with the
ES method. However, there are limitations of the research
that we aim to resolve in our future work.
Validation using a Real System: We tried to model the
networked system as close as to the real network settings, but
one of the limitations is that our work has no implementation
in a real testbed for validation. There are a limited number
of previous work that used a testbed or a practical network
[6], [10], [15], [18]. We aim to implement our proposed idea
in a real test-bed to validate and extend our research.
Incorporating Various Vulnerabilities We have only
taken into account OS vulnerabilities for simplicity, but
various vulnerabilities can be incorporated and modelled
in the HARM. For example, application vulnerabilities can
be incorporated by creating another lower layer in the
HARM. If vulnerabilities from different layers are related
(e.g., an application layer is a precondition of an OS layer
vulnerability), then their relationship can be captured in the
HARM with post and pre conditions.
Zero day vulnerabilities are not incorporated in this paper
due to the limited space. However, incorporating zero day
attacks is an additional function to ARMs [29], [47]–[49].
Incorporating zero day vulnerabilities in the HARM can be
done by adding functions to analyze zero day vulnerabilities
(i.e., use ARM in the layer capable of analyzing zero day
vulnerabilities).
Evaluation of the MTD Techniques: We have only
focused on Shufﬂe and Diversity. Redundancy technique
focuses on the availability of the system, but this is not dealt
in this paper. Also, we only considered a simple diversity
technique in this paper. More complex diversity scenarios
can be used, such as in [18]. However, all diversity scenarios
are a state of the networked system, so the associated
security can be analyzed. Therefore, various sophisticated
523
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 08:25:31 UTC from IEEE Xplore.  Restrictions apply. 
diversity scenarios can be used, and the effectiveness of such
scenarios can be assessed based on our proposed idea. An-
other point is that we did not consider performance measures
(e.g., quality of service, service disruption). To address this
limitation, we will consider performance constraints in the
model and perform an analysis using a real system in our
future work.
Evaluation of
the MTD Techniques with Various
Security Metrics: A single security metric cannot capture
all effects of the MTD techniques. Moreover, not all MTD
techniques can be analyzed using two-layer HARM pre-
sented in this paper. For in-depth security analysis of the
MTD techniques, various security metrics should be used.
We will use a wide range of security metrics, how security
metrics are affected by different MTD techniques, and take
into account how and which layer the MTD techniques are
deployed.
Optimization of the IMs w.r.t the MTD techniques:
The proportion of important nodes in the HARM have
randomly but reasonably selected. As discussed in [39],
there exists an optimal number of important nodes for an
optimal performance of security analysis. We observed via
simulations that using the ES method is infeasible in practice
for a large sized networked system, whereas using the IMs is
more scalable and practical. However, it is difﬁcult to decide
what proportion of nodes to select, as different networks
have different optimal proportions based on the topology and
settings. We will consider solving the optimization problem
in our future work.
Also, we did not consider various network scenarios (e.g.,
network topologies, the number of hosts and VMs, and the
number of vulnerabilities) and how the effectiveness of the
MTD techniques are affected. For security analysis, a nearly
equivalent security solution is computed for various network
scenarios [38]. We will extend this study in our future work
to experiment various network scenarios using the IMs to
compute the effectiveness of the MTD techniques.
V. RELATED WORK