# ComFASE: A Tool for Evaluating the Effects of V2V Communication Faults and Attacks on Automated Vehicles

**Authors:**
- Mateen Malik
- Mehdi Maleki
- Peter Folkesson
- Behrooz Sangchoolie
- Johan Karlsson

**Conference:**
2022 52nd Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN)

**DOI:**
10.1109/DSN53405.2022.00029

**Abstract:**
This paper introduces ComFASE, a communication fault and attack simulation engine designed to identify and evaluate potentially dangerous behaviors of interconnected automated vehicles in the presence of faults and attacks in wireless vehicular networks. Built on OMNeT++ (a network simulator), ComFASE integrates SUMO (a traffic simulator) and Veins (a vehicular network simulator). The tool is flexible in modeling various types of faults and attacks and can be effectively used to study the interplay between safety and cybersecurity attributes by injecting cybersecurity attacks and evaluating their safety implications. We demonstrate the tool's capabilities through a series of simulation experiments, where we injected delay and denial-of-service (DoS) attacks on wireless messages exchanged between vehicles in a platooning application. The results show how different variants of these attacks influence the platooning system in terms of collision incidents.

**Index Terms:**
- Attack injection
- Fault injection
- Simulation-based system
- V2V communication
- Platooning
- Cybersecurity attack

## I. Introduction

The connectivity of safety-critical cyber-physical systems has increased significantly, leading to more efficient functions and features. One such example is vehicle-to-vehicle (V2V) communication, which alerts drivers to upcoming hazards like slippery roads or obstructions. These systems must comply with comprehensive safety and security requirements and are equipped with fault and intrusion handling mechanisms to protect against hardware and software faults and cybersecurity attacks.

Testing and verifying a system's ability to handle faults and attacks is complex, requiring a broad set of expertise and appropriate tools to discover weaknesses and vulnerabilities. Fault and attack injection is an effective testing technique used to evaluate systems under fault and attack conditions. These injections can occur at various stages of product development, from early design to near production. Early-stage injections facilitate the discovery of system weaknesses, potentially saving time and cost by avoiding late redesigns.

Fault and attack injection testing can be performed in real-world or simulation-based environments. Simulation-based testing is relatively low-cost, reproducible, and offers high test coverage. Regulatory bodies like UNECE and automotive OEMs are increasingly adopting simulation-based testing and verification for automated driving systems (ADS) alongside real-world testing for validation and certification.

In this paper, we present ComFASE, an open-source fault and attack injection tool for evaluating the impact of V2V communication faults and attacks on automated vehicles in a simulation environment. ComFASE incorporates two open-source simulators: SUMO (a traffic simulator) and OMNeT++ (a network simulator), and requires a vehicular network simulator like Veins. ComFASE evaluates the impact of communication faults and attacks on the target vehicle and surrounding traffic, which is crucial as faulty vehicles can significantly influence the behavior of nearby vehicles.

To demonstrate ComFASE, we present results from experiments where we injected delay and DoS attacks into the wireless channel between vehicles modeled in the Veins simulator. The target system in these experiments is a platooning system implemented in Plexe-veins. We classify the results based on deceleration profiles of all vehicles in the platoon and collision incidents, allowing us to measure the safety implications of the attacks through emergency braking and collision reports.

## II. Background

### A. Simulation-based Fault and Attack Injection

Simulation-based fault and attack injection is a test method used to evaluate the safety and cybersecurity attributes of automated vehicles, especially useful for early system design evaluation when only a model or prototype is available. This method allows for extreme test cases that are difficult, costly, or risky to perform in the real world. Tools like SUFI, SAE++, and NETA implement this test method.

### B. IEEE Standards for WAVE Communication

Various wireless vehicular communication standards exist, including IEEE 802.11, IEEE 802.11p, IEEE 802.11p/ITS-5G, 4G, and 5G. These standards provide different communication ranges and applications. ComFASE injects faults and attacks into the wireless channel model of V2V communication, based on realistic models of IEEE 802.11p and IEEE 1609.4 WAVE protocols implemented in Veins. The wireless channel model represents an analog medium where messages are transmitted after encoding and modulation in the physical layer. These standards are necessary because vehicles move at high velocities, leading to short and unstable connections.

IEEE 802.11p is an amendment to IEEE 802.11, supporting WAVE for V2V communications. It covers the physical and lower MAC layers, while IEEE 1609.4 covers the upper MAC layer, including multi-channel communication, quality of service, channel switching, and routing.

### C. Simulation Environment

ComFASE is configured to run with four simulators: OMNeT++ v. 5.6.2 (network simulator), SUMO v. 1.8.0 (traffic simulator), Veins v. 5.1 (vehicular network simulator), and Plexe-veins v. 2.1 (platooning extension for Veins). Veins, built on OMNeT++, implements communication standards for testing and analyzing vehicular networks. The platooning system, including vehicle dynamics and cruise control, is implemented in Plexe-veins, which is based on Veins and SUMO. All these simulators are open-source and combined to provide a complete simulation environment. ComFASE logs detailed traffic and network data, such as vehicle speed, acceleration/deceleration, position, and other data used to describe collision incidents.

### D. Related Work

Previous studies have investigated the impact of network attacks on platooning applications. Heijden et al. [24] studied the impact of jamming attacks on vehicle behavior, focusing on the resilience of different vehicle controllers. Boeira et al. [25] examined sybil attacks, message falsification, and radio jamming in the application and network layers, observing the targeted vehicle's behavior in SUMO. Iorio et al. [26] injected parameter falsification attacks to study cooperative adaptive cruise control systems.