    ``` programlisting
    zfcp --devnum=0.0.4000 --wwpn=0x5005076300C213e9 --fcplun=0x5022000000000000
    ```
[`%include`{.command}（自选）[]{#chap-kickstart-installations.html#idm139805788682752 .indexterm} []{#chap-kickstart-installations.html#idm139805840039200 .indexterm}]{.term}
:   ::: para
    使用 `%include /path/to/file`{.command} 命令将其他文件中的内容包括在
    kickstart 文件中，就好像那些内容原本就在 kickstart 文件的
    `%include`{.command} 命令部分。
    :::
    ::: {.important xmlns:d="http://docbook.org/ns/docbook"}
    ::: admonition_header
    **重要**
    :::
    ::: admonition
    ::: para
    安装 Red Hat Enterprise Linux Atomic Host
    时需要这个命令。采用以下方法将其指向
    `interactive-defaults.ks`{.filename} 文件：
    :::
    ``` programlisting
    %include /usr/share/anaconda/interactive-defaults.ks
    ```
    :::
    :::
:::
:::
::: section
::: titlepage
## [⁠]{#chap-kickstart-installations.html#sect-kickstart-packages}23.3.3. 软件包选择 {.title}
:::
[]{#chap-kickstart-installations.html#idm139805874796432 .indexterm}
::: para
在 Kickstart 文件中使用 `%packages`{.command} 命令列出要安装的软件包。
:::
::: para
可以根据*环境*、*组*或者其软件包名称指定软件包。安装程序定义包含相关软件包的几个环境和组。有关环境和组列表请查看
Red Hat Enterprise Linux 7 安装光盘中的
`repodata/*-comps-variant.architecture.xml`{.filename} 文件。
:::
::: para
`*-comps-variant.architecture.xml`{.filename} 文件包含描述可用环境（使用
``{.literal} 标签标记）和组（``{.literal}
标记）的结构。每个组都有一个
ID、用户可见性数值、名称、描述和软件包列表。如果未安装选择该组，那么就会安装该软件包列表中标记为
`mandatory`{.literal} 的软件包；如果未明确指定，也会安装标记为
`default`{.literal} 的软件包，而标记为 `optional`{.literal}
的软件包必须在明确指定后方可安装。
:::
::: para
您可以使用 ID（``{.literal} 标签）或者名称（``{.literal}
标签）指定软件包组或者环境。
:::
::: {.important xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**重要**
:::
::: admonition
::: para
安装 Red Hat Enterprise Linux Atomic Host 时不能使用这个命令。
:::
:::
:::
::: {.important xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**重要**
:::
::: admonition
::: para
要在 64 位系统中安装 32 位软件包，则需要添加用来构建该软件包的 32
位结构软件包名称，例如：[glibc.i686]{.package}。还必须在 Kickstart
文件中指定 `--multilib`{.option} 选项。可用选项如下。
:::
:::
:::
::: {.important xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**重要**
:::
::: admonition
::: para
使用 Kickstart 文件安装系统后，[**Initial Setup**]{.application}
不会运行，除非在安装中包含桌面环境和 [**X Window
System**]{.application}，并启用了图形登录。就是说默认情况下只生成
`root`{.systemitem} 用户。可以使用 Kickstart 文件中的 `user`{.option}
选项，在安装附加系统前创建用户（详情请查看 [第 23.3.2 节 "Kickstart
命令及选项"](#chap-kickstart-installations.html#sect-kickstart-commands){.xref}）；或者通过虚拟控制台作为
`root`{.systemitem} 登录已安装的系统，并使用 `useradd`{.command}
命令添加用户。
:::
:::
:::
::: para
`%packages`{.command} 部分必须以 `%end`{.command} 命令结尾。
:::
::: variablelist
[指定环境]{.term}
:   ::: para
    除组外，您还要指定要安装的整体环境：
    :::
    ``` programlisting
    %packages
    @^Infrastructure Server
    %end
    ```
    ::: para
    这个命令将安装作为 [**基础设施服务器**]{.guilabel}
    环境一部分的所有软件包。所有可用环境请参考 Red Hat
    Enterprise Linux 7 安装光盘的
    `*-comps-variant.architecture.xml`{.filename} 文件。在 Kickstart
    文件中只能指定一个环境。
    :::
[指定组]{.term}
:   ::: para
    指定组，每个条目一行，以 `@`{.literal}
    符号开始，接着是空格，然后是完整的组名或
    `*-comps-variant.architecture.xml`{.filename} 中指定的组 id。例如：
    :::
    ``` programlisting
    %packages
    @X Window System
    @Desktop
    @Sound and Video
    %end
    ```
    ::: para
    永远都要选择 `Core`{.literal} 和 `Base`{.literal} 组，所以并不需要在
    `%packages`{.command} 部分指定它们。
    :::
    ::: para
    `*-comps-variant.architecture.xml`{.filename} 文件还为 Red Hat
    Enterprise Linux 的每个变体定义名为 `Conflicts (variant)`{.literal}
    的组。这个组包含已知可造成冲突并将要排除的所有软件包。
    :::
[指定独立软件包]{.term}
:   ::: para
    根据名称指定独立软件包，每行一个条目。您可以在软件包名称中使用星号（`*`{.literal}）作为*通配符*。例如：
    :::
    ``` programlisting
    %packages
    sqlite
    curl
    aspell
    docbook*
    %end
    ```
    ::: para
    `docbook*`{.literal} 条目包含
    [docbook-dtds]{.package}、[docbook-simple]{.package}、[docbook-slides]{.package}
    和其他匹配这个通配符模式的软件包。
    :::
[排除环境、组或者软件包]{.term}
:   ::: para
    使用小横线（`-`{.literal}）开头指定安装中不使用的软件包或组。例如：
    :::
    ``` programlisting
    %packages
    -@Graphical Internet
    -autofs
    -ipa*fonts
    %end
    ```
:::
::: {.important xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**重要**
:::
::: admonition
::: para
不支持在 Kickstart 文件中只使用 `*`{.literal}
安装所有可用软件包，即使排除 `@Conflicts (variant)`{.literal} 组也不行。
:::
:::
:::
::: para
您可以使用几个选项更改 `%packages`{.command}
部分的默认行为。有些选项可用于所有软件包选择，其他则只能用于具体的组。
:::
::: variablelist
**常用软件包选择选项**
::: para
以下选项可用于
`%packages`{.command}。要使用这个选项，请将其添加到软件包选择部分的开始。例如：
:::
``` programlisting
%packages --multilib --ignoremissing
```
[`--default`{.option}]{.term}
:   ::: para
    安装默认软件包组。这与在互动安装过程中的 [**软件包选择**]{.guilabel}
    页面中没有其他选择时要安装的软件包组对应。
    :::
[`--excludedocs`{.option}]{.term}
:   ::: para
    不要安装软件包中的任何文档。大多数情况下，这样会排除一般安装在
    `/usr/share/doc*`{.filename}
    目录中的所有文件，但要排除的具体文件取决于各个软件包。
    :::
[`--ignoremissing`{.option}]{.term}
:   ::: para
    忽略所有在这个安装源中缺少的软件包、组及环境，而不是暂停安装询问是应该放弃还是继续安装。
    :::
[`--instLangs=`{.option}]{.term}
:   ::: para
    指定要安装的语言列表。注：这与软件包组等级选择不同。这个选项不会告诉您应该安装哪些软件包组，而是通过设置
    RPM 宏控制应该安装独立软件包中的哪些事务文件。
    :::
[`--multilib`{.option}]{.term}
:   ::: para
    为 multilib 软件包配置已安装的系统（即允许在 64 位系统中安装 32
    位软件包），并安装在这一部分指定的软件包。
    :::
    ::: para
    通常在 AMD64 和 Intel 64 系统中，只安装用于整个架构（标记为
    `x86_64`{.literal}）的软件包以及用于所有架构（标记为
    `noarch`{.literal}）软件包。使用这个选项时，将自动安装用于 32 位 AMD
    系统 Intel（标记为 `i686`{.literal}）的软件包。
    :::
    ::: para
    这只适用于在 `%packages`{.command}
    部分明确指定的软件包。对于那些仅作为相依性安装而没有在 Kickstart
    文件中指定的软件包，将只安装其所需架构版本，即使有更多可用架构也是如此。
    :::
[`--nocore`{.option}]{.term}
:   ::: para
    禁用默认总被安装的 `@Core`{.literal} 软件包组。禁用
    `@Core`{.literal} 软件包组应只用于创建轻量级的容器；用
    `--nocore`{.option} 安装桌面或服务器系统将导致系统不可用。
    ::: {.note xmlns:d="http://docbook.org/ns/docbook"}
    ::: admonition_header
    **注意**
    :::
    ::: admonition
    ::: para
    使用 `-@Core`{.literal} 无法排除 `@Core`{.literal}
    软件包组里的软件包。排除 `@Core`{.literal} 软件包组的唯一途径是使用
    `--nocore`{.option} 选项。
    :::
    :::
    :::
    :::
:::
::: variablelist
**具体软件包组选项**
::: para
这个列表中的选项只用于单一软件包组。不是在 Kickstart 文件的
`%packages`{.command} 命令中使用，而是在组名称中添加条目。例如：
:::
``` programlisting
%packages
@Graphical Internet --optional
%end
```
[`--nodefaults`{.option}]{.term}
:   ::: para
    只安装该组的强制软件包，不是默认选择。
    :::
[`--optional`{.option}]{.term}
:   ::: para
    除安装默认选择外，还要安装在
    `*-comps-variant.architecture.xml`{.filename}
    文件组定义中标记为自选的软件包。
    :::
    ::: para
    注：有些软件包组，比如
    `Scientific Support`{.literal}，没有指定任何强制或默认软件包 -
    只有自选软件包。在这种情况下必须使用 `--optional`{.option}
    选项，否则不会安装这个组中的任何软件包。
    :::
:::
:::
::: section
::: titlepage
## [⁠]{#chap-kickstart-installations.html#sect-kickstart-preinstall}23.3.4. 预安装脚本 {.title}
:::
[]{#chap-kickstart-installations.html#idm139805798017504
.indexterm}[]{#chap-kickstart-installations.html#idm139805798016064
.indexterm}
::: para
您可以在解析 Kickstart
文件后、开始安装前立即添加要在该系运行执行的命令。这个部分必须处于
Kickstart 文件的最后，在 [第 23.3.2 节 "Kickstart
命令及选项"](#chap-kickstart-installations.html#sect-kickstart-commands){.xref}
所述 Kickstart 命令之后，而且必须用 `%pre`{.command} 命令开头，以
`%end`{.command} 结尾。如果您的 Kickstart 文件还包括 `%post`{.command}
部分，`%pre`{.command} 和 `%post`{.command} 的顺序是没有关系的。
:::
::: para
您可以访问位于 `%pre`{.command}
部分的网络；但*命名服务*此时还未配置，所以只能使用 IP 地址。
:::
::: para
Kickstart
文件的预安装脚本部分[*无法*]{.emphasis}管理多个安装树或者源介质。这个信息必须包含在创建的每个
Kickstart 文件中，因为是在安装程序的第二阶段才运行预安装脚本。
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**注意**
:::
::: admonition
::: para
与后安装脚本不同，预安装脚本不会在 `chroot`{.systemitem} 环境中运行。
:::
:::
:::
::: para
可在预安装脚本中使用以下选项更改行为。要使用此选项，请将其添加到该脚本开始的
`%pre`{.command} 行。例如：
:::
``` programlisting
%pre --interpreter=/usr/bin/python
--- Python script omitted --
%end
```
::: variablelist
[`--interpreter=`{.option}]{.term}
:   ::: para
    允许指定不同的脚本语言，如
    Python。可使用该系统中可用的任意脚本语言。在大多数情况下是
    `/usr/bin/sh`{.systemitem}、`/usr/bin/bash`{.systemitem} 和
    `/usr/bin/python`{.systemitem}。