PartnerChurnState,
dot3adAggPortDebug
655
Table 57: Standard MIBs Supported by Junos OS Evolved (Continued)
Standard MIB Exceptions Platforms
ActorChurnCount,
dot3adAggPortDebug
PartnerChurnCount,
dot3adAggPortDebug
ActorSyncTransitio
nCount,
dot3adAggPortDebug
PartnerSyncTransit
ionCount,
dot3adAggPortDebug
ActorChangeCount,
and
dot3adAggPortDebug
PartnerChangeCount
.
Internet Assigned Numbers Authority, IANAiftype Textual No exceptions PTX10003
Convention MIB
Internet draft draft-ietf-idmr-igmp-mib-13.txt, Internet Group No exceptions PTX10003
Management Protocol (IGMP) MIB
Internet draft draft-reeder-snmpv3-usm-3desede-00.txt, No exceptions PTX10003
Extension to the User-Based Security Model (USM) to Support
Triple-DES EDE in ‘Outside’ CBC Mode
Internet draft draft-ietf-isis-wg-mib-07.txt, Management No exceptions PTX10003
Information Base for IS-IS
Internet draft draft-ietf-ospf-ospfv3-mib-11.txt, Management No exceptions PTX10003
Information Base for OSPFv3
Internet draft draft-ietf-idmr-pim-mib-09.txt, Protocol No exceptions PTX10003
Independent Multicast (PIM) MIB
656
Table 57: Standard MIBs Supported by Junos OS Evolved (Continued)
Standard MIB Exceptions Platforms
Internet Draft P2MP MPLS-TE MIB (draft-ietf-mpls-p2mp-te- No exceptions PTX10003
mib-09.txt) (read-only access)
Junos OS SNMP FAQs
SUMMARY IN THIS SECTION
This document presents the most frequently asked Junos OS SNMP Support FAQs | 656
questions about the features and technologies used
Junos OS MIBs FAQs | 657
to implement SNMP services on Juniper Networks
Junos OS SNMP Configuration FAQs | 666
devices using the Junos operating system.
SNMPv3 FAQs | 671
SNMP Interaction with Juniper Networks
Devices FAQs | 673
SNMP Traps and Informs FAQs | 675
Junos OS Dual Routing Engine Configuration
FAQs | 683
SNMP Support for Routing Instances
FAQs | 684
SNMP Counters FAQs | 685
SNMP enables users to monitor network devices from a central location.
Junos OS SNMP Support FAQs
This section provides frequently asked questions and answers related to SNMP support on Junos OS.
Which SNMP versions does Junos OS support?
657
Junos OS supports SNMP version 1 (SNMPv1), version 2 (SNMPv2c), and version 3 (SNMPv3). By
default, SNMP is disabled on a Juniper Networks device.
Which ports (sockets) does SNMP use?
The default port for SNMP queries is port 161. The default port for SNMP traps and informs is port 162.
The port used for SNMP traps and informs is configurable, and you can configure your system to use
ports other than the default port 162. However, the SNMP listening port will remain the same; this is
established on the RFC.
Is SNMP support different among the Junos OS platforms?
No, SNMP support is not different among the Junos OS platforms. SNMP configuration, interaction, and
behavior are the same on any Junos OS device. The only difference that might occur across platforms is
MIB support.
See also SNMP MIB Explorer for a list of MIBs that are supported across the Junos OS platforms.
Does Junos OS support the user-based security model (USM)?
Yes, Junos OS supports USM as part of its support for SNMPv3. SNMPv3 contains more security
measures than previous versions of SNMP, including providing a defined USM. SNMPv3 USM provides
message security through data integrity, data origin authentication, message replay protection, and
protection against disclosure of the message payload.
Does Junos OS support the view-based access control model (VACM)?
Yes, Junos OS supports VACM as part of its support for SNMPv3. SNMPv3 contains more security
measures than previous versions of SNMP, including providing a defined VACM. SNMPv3 VACM
determines whether a specific type of access (read or write) to the management information is allowed.
Does Junos OS support SNMP informs?
Yes, Junos OS supports SNMP informs as part of its support for SNMPv3. SNMP informs are confirmed
notifications sent from SNMP agents to SNMP managers when significant events occur on a network
device. When an SNMP manager receives an inform, it sends a response to the sender to verify receipt
of the inform.
Can I provision or configure a device using SNMP on Junos OS?
No, provisioning or configuring a device using SNMP is not allowed on Junos OS.
Junos OS MIBs FAQs
This section presents frequently asked questions and answers related to Junos OS MIBs.
658
What is a MIB?
A management information base (MIB) is a table of definitions for managed objects in a network device.
MIBs are used by SNMP to maintain standard definitions of all of the components and their operating
conditions within a network device. Each object in the MIB has an identifying code called an object
identifier (OID).
MIBs are either standard or enterprise-specific. Standard MIBs are created by the Internet Engineering
Task Force (IETF) and documented in various RFCs. Enterprise-specific MIBs are developed and
supported by a specific equipment manufacturer.
For a list of supported standard MIBs, see " Standard SNMP MIBs Supported by Junos OS" on page 594.
For a list of Juniper Networks enterprise-specific MIBs, see "Enterprise-Specific SNMP MIBs Supported
by Junos OS" on page 622.
Do MIB files reside on the Junos OS devices?
No, MIB files do not reside on the Junos OS devices. You must download the MIB files from the Juniper
Networks Technical Publications page for the required Junos OS release: SNMP MIB Explorer.
How do I compile and load the Junos OS MIBs onto an SNMP manager or NMS?
For your network management systems (NMSs) to identify and understand the MIB objects used by
Junos OS, you must first load the MIB files to your NMS using a MIB compiler. A MIB compiler is a
utility that parses the MIB information, such as the MIB object names, IDs, and data types for the NMS.
You can download the Junos OS MIB package from the Enterprise-Specific MIBs and Traps section at
SNMP MIB Explorer or https://www.juniper.net/documentation/software/junos/index.html .
The Junos OS MIB package has two folders: StandardMibs, containing standard MIBs supported on Juniper
Networks devices, and JuniperMibs, containing Juniper Networks enterprise-specific MIBs. You must have
the required standard MIBs downloaded and decompressed before downloading any enterprise-specific
MIBs. There might be dependencies that require a particular standard MIB to be present on the compiler
before loading a particular enterprise-specific MIB.
The Junos OS MIB package is available in .zip and .tar formats. Download the format appropriate for
your requirements.
Use the following steps to load MIB files for devices running Junos OS:
1. Navigate to the appropriate Juniper Networks software download page and locate the Enterprise MIBs
link under the Enterprise-Specific MIBs and Traps section.
NOTE: Although the link is titled Enterprise MIBs, both standard MIBs and enterprise-specific
MIBs are available for download from this location.
659
2. Click the TAR or ZIP link to download the Junos OS MIB package.
3. Decompress the file (.tar or .zip) using an appropriate utility.
NOTE: Some commonly used MIB compilers are preloaded with standard MIBs. You can skip
Step 4 and Step 5 and proceed to Step 6 if you already have the standard MIBs loaded on
your system.
4. Load the standard MIB files from the StandardMibs folder.
Load the files in the following order:
a. mib-SNMPv2-SMI.txt
b. mib-SNMPv2-TC.txt
c. mib-IANAifType-MIB.txt
d. mib-IANA-RTPROTO-MIB.txt
e. mib-rfc1907.txt
f. mib-rfc2011a.txt
g. mib-rfc2012a.txt
h. mib-rfc2013a.txt
i. mib-rfc2863a.txt
5. Load any remaining standard MIB files.
NOTE: You must follow the order specified in this procedure, and ensure that all standard
MIBs are loaded before you load the enterprise-specific MIBs. There might be dependencies
that require a particular standard MIB to be present on the compiler before loading a
particular enterprise-specific MIB. Dependencies are listed in the IMPORT section of the MIB
file.
6. After loading the standard MIBs, load the Juniper Networks enterprise-specific SMI MIB, mib-jnx-
smi.txt, and the following optional SMI MIBs based on your requirements:
• mib-jnx-exp.txt—(Recommended) for Juniper Networks experimental MIB objects
• mib-jnx-js-smi.txt—(Optional) for Juniper Security MIB tree objects
660
• mib-jnx-ex-smi.txt—(Optional) for EX Series Ethernet Switches
7. Load any remaining desired enterprise-specific MIBs from the JuniperMibs folder.
TIP: While loading a MIB file, if the compiler returns an error message indicating that any of
the objects are undefined, open the MIB file using a text editor and ensure that all the MIB
files listed in the IMPORT section are loaded on the compiler. If any of the MIB files listed in the
IMPORT section are not loaded on the compiler, load the missing file or files first, then try to load
the MIB file that failed.
The system might return an error if files are not loaded in a particular order.
What is SMI?
Structure of Management Information Version (SMI) is a subset of Abstract Syntax Notation One
(ASN.1), which describes the structure of objects. SMI is the notation syntax, or “grammar”, that is the
standard for writing MIBs.
Which versions of SMI does Junos OS support?
The Junos OS supports SMIv1 for SNMPv1 MIBs, and SMIv2 for SNMPv2c and enterprise MIBs.
Does Junos OS support MIB II?
Yes, Junos OS supports MIB II, the second version of the MIB standard.
The features of MIB II include:
• Additions that reflect new operational requirements.
• Backward compatibility with the original MIBs and SNMP.
• Improved support for multiprotocol entities.
• Improved readability.
Are the same MIBs supported across all Juniper Networks devices?
There are some common MIBs supported by all the Junos OS devices, such as the Interface MIB
(ifTable), System MIB, and Chassis MIB. Some MIBs are supported only by functionalities on specific
platforms. For example, the Bridge MIB is supported on the EX Series Ethernet Switches and the SRX
Series Firewalls for the branch.
What is the system object identifier (SYSOID) of a device? How do I determine the SYSOID of my
device?
The jnx-chas-defines (Chassis Definitions for Router Model) MIB has a jnxProductName branch for every
Junos OS device. The system object ID of a device is identical to the object ID of the jnxProductName for
661
the platform. For example, for an M7i Multiservice Edge Router, the jnxProductNameM7i
is .1.3.6.1.4.1.2636.1.1.1.2.10 in the jnxProductName branch, which is identical to the SYSOID of the
M7i (.1.3.6.1.4.1.2636.1.1.1.2.10).
How can I determine if a MIB is supported on a platform? How can I determine which MIBs are
supported by a device?
MIBs device and platform support is listed on the Junos OS Technical Documentation. See "Standard
SNMP MIBs Supported by Junos OS" on page 594 and" Enterprise-Specific SNMP MIBs Supported by
Junos OS" on page 622 documents to view the list of MIBs and supported Junos OS devices.
What can I do if the MIB OID query is not responding?
There can be various reasons why the MIB OID query stops responding. One reason could be that the
MIB itself is unresponsive. To verify that the MIB responds, use the show snmp mib walk | get MIB name | MIB
OID command:
• If the MIB responds, the communication issue exists between the SNMP primary and SNMP agent.
Possible reasons for this issue include network issues, an incorrect community configuration, an
incorrect SNMP configuration, and so on.
• If the MIB does not respond, enable SNMP traceoptions to log PDUs and errors. All incoming and
outgoing SNMP PDUs are logged. Check the traceoptions output to see if there are any errors.
If you continue to have problems with the MIB OID query, technical product support is available
through the Juniper Networks Technical Assistance Center (JTAC).
What is the enterprise branch number for Junos OS?
The enterprise branch number for Junos OS is 2636. Enterprise branch numbers are used in SNMP MIB
configurations, and they are also known as SMI network management private enterprise codes.
Which MIB displays the hardware and chassis details on a Juniper Networks device?
The Chassis MIB (jnxchassis.mib) displays the hardware and chassis details for each Juniper Networks
device. It provides information about the router and its components. The Chassis MIB objects represent
each component and its status.
Which MIB objects can I query to determine the CPU and memory utilization of the Routing Engine,
Flexible PIC Concentrator (FPC), and PIC components on a device?
Query the Chassis MIB objects jnxOperatingMemory, jnxOperatingtBuffer, and jnxOperatingCPU to find out the
CPU and memory utilization of the hardware components of a device.
Is the interface index (ifIndex) persistent?
The ifIndex is persistent when reboots occur if the Junos OS version remains the same, meaning the
values assigned to the interfaces in the ifIndex do not change.
662
When there is a software upgrade, the device tries to keep the ifIndex persistent on a best effort basis.
For Junos OS Release 10.0 and earlier, the ifIndex is not persistent when there is a software upgrade to
Junos OS Release 10.1 and later.
Is it possible to set the ifAdminStatus?
SNMP is not allowed to set the ifAdminStatus.
Which MIB objects support SNMP set operations?
The Junos OS SNMP set operations are supported in the following MIB tables and variables:
• snmpCommunityTable
• eventTable
• alarmTable
• snmpTargetAddrExtTable
• jnxPingCtlTable
• pingCtlTable
• traceRouteCtlTable
• jnxTraceRouteCtlTable
• sysContact.0
• sysName.0
• sysLocation.0
• pingMaxConcurrentRequests.0
• traceRouteMaxConcurrentRequests.0
• usmUserSpinLock
• usmUserOwnAuthKeyChange
• usmUserPublic
• vacmSecurityToGroupTable (vacmGroupName, vacmSecurityToGroupStorageType, and
vacmSecurityToGroupStatus)
• vacmAccessTable (vacmAccessContextMatch, vacmAccessReadViewName,
vacmAccessWriteViewName, vacmAccessNotifyViewName, vacmAccessStorageType, and
vacmAccessStatus)
663
• vacmViewSpinLock
• vacmViewTreeFamilyTable (vacmViewTreeFamilyMask, vacmViewTreeFamilyType,
vacmViewTreeFamilyStorageType, and vacmViewTreeFamilyStatus)
Does Junos OS support remote monitoring (RMON)?
Yes, Junos OS supports RMON as defined in RFC 2819, Remote Network Monitoring Management
Information Base. However, remote monitoring version 2 (RMON 2) is not supported.
Can I use SNMP to determine the health of the processes running on the Routing Engine?
Yes, you can use SNMP to determine the health of the Routing Engine processes by configuring the
health monitoring feature. On Juniper Networks devices, RMON alarms and events provide much of the
infrastructure needed to reduce the polling overhead from the NMS. However, you must set up the
NMS to configure specific MIB objects into RMON alarms. This often requires device-specific expertise
and customizing the monitoring application. Additionally, some MIB object instances that need
monitoring are set only at initialization, or they change at runtime and cannot be configured in advance.
To address these issues, the health monitor extends the RMON alarm infrastructure to provide
predefined monitoring for a selected set of object instances, such as file system usage, CPU usage, and
memory usage, and includes support for unknown or dynamic object instances, such as Junos OS
software processes.
To display the health monitoring configuration, use the show snmp health-monitor command:
user@host> show snmp health-monitor
interval 300;
rising-threshold 90;
falling-threshold 80;
When you configure the health monitor, monitoring information for certain object instances is available,
as shown in Table 58 on page 663.
Table 58: Monitored Object Instances
Object Description
jnxHrStoragePercentUsed.1 Monitors the following file system on the router or switch: /dev/ad0s1a:
This is the root file system mounted on /.
664
Table 58: Monitored Object Instances (Continued)
Object Description
jnxHrStoragePercentUsed.2 Monitors the following file system on the router or switch: /dev/ad0s1e:
This is the configuration file system mounted on /config.
jnxOperatingCPU (RE0) Monitor CPU usage for Routing Engines RE0 and RE1. The index values assigned
to the Routing Engines depend on whether the Chassis MIB uses a zero-based or a
ones-based indexing scheme. Because the indexing scheme is configurable, the
jnxOperatingCPU (RE1)
correct index is determined whenever the router is initialized and when there is a
configuration change. If the router or switch has only one Routing Engine, the
alarm entry monitoring RE1 is removed after five failed attempts to obtain the CPU
value.
jnxOperatingBuffer (RE0) Monitor the amount of memory available on Routing Engines RE0 and RE1.
Because the indexing of this object is identical to that used for jnxOperatingCPU,
index values are adjusted depending on the indexing scheme used in the Chassis
jnxOperatingBuffer (RE1)
MIB. As with jnxOperatingCPU, the alarm entry monitoring RE1 is removed if the
router or switch has only one Routing Engine.
sysApplElmtRunCPU Monitors the CPU usage for each Junos OS software process. Multiple instances of
the same process are monitored and indexed separately.
sysApplElmtRunMemory Monitors the memory usage for each Junos OS software process. Multiple
instances of the same process are monitored and indexed separately.
The system log entries generated for any health monitor events, such as thresholds crossed and errors,
have a corresponding HEALTHMONITOR tag rather than a generic SNMPD_RMON_EVENTLOG tag. However, the health
monitor sends generic RMON risingThreshold and fallingThreshold traps.
Are the Ping MIBs returned in decimal notation and ASCII?
Yes, both decimal notation and ASCII are supported, which is the standard implementation in SNMP. All
strings are ASCII encoded.
The following example displays the Ping MIB in hexadecimal notation:
pingCtlTargetAddress.2.69.72.9.116.99.112.115.97.109.112.108.101 = 0a fa 01 02
665
This translates to ASCII:
pingCtlTargetAddress."EH"."tcpsample" = 0a fa 01 02
2= length of the string
69=E
72=H
9=length of second string
116=t
99 =c
112=p
115=s
97=a
109=m
112 =p
108 =l
101 =e
As of Junos OS Release 9.6 and later, the Junos OS CLI returns ASCII values using the command show
snmp mib get | get-next | walk ascii.
The following example shows the output with the ASCII option:
user@host> show snmp mib walk pingCtlTargetAddress ascii
pingCtlTargetAddress."EH"."httpgetsample" = http://www.yahoo.com
pingCtlTargetAddress."p1"."t2" = 74 c5 b3 06
pingCtlTargetAddress."p1"."t3" = 74 c5 b2 0c
The following example shows the output without the ASCII option:
user@host> show snmp mib walk pingCtlTargetAddress
pingCtlTargetAddress.2.69.72.13.104.116.116.112.103.101.116.115.97.109.112.108.101 = http://
www.yahoo.com
pingCtlTargetAddress.2.112.49.2.116.50 = 74 c5 b3 06
pingCtlTargetAddress.2.112.49.2.116.51 = 74 c5 b2 0c
You can convert decimal and ASCII values using a decimal ASCII chart like the one at http://
www.asciichart.com .
Is IPv6 supported by the Ping MIB for remote operations?
No, IPv6 is not supported.
666
Is there an SNMP MIB to show Address Resolution Protocol (ARP) table information? Are both IP and
MAC addresses displayed in the same table?
Yes, the Junos OS supports the standard MIB ipNetToMediaTable, which is described in RFC 2011, SNMPv2
Management Information Base for the Internet Protocol using SMIv2. This table is used for mapping IP
addresses to their corresponding MAC addresses.
Junos OS SNMP Configuration FAQs
This section presents frequently asked questions and answers related to Junos OS SNMP configuration.
Can the Junos OS be configured for SNMPv1 and SNMPv3 simultaneously?
Yes, SNMP has backward compatibility, meaning that all three versions can be enabled simultaneously.
Can I filter specific SNMP queries on a device?
Yes, you can filter specific SNMP queries on a device using exclude and include statements.
The following example shows a configuration that blocks read-write operation on all OIDs
under .1.3.6.1.2.1.1 for the community test:
user@host# show snmp
view system-exclude {
oid .1.3.6.1.2.1.1 exclude;
oid .1 include;
}
community test {
view system-exclude;
authorization read-write;
}
Can I change the SNMP agent engine ID?
Yes, the SNMP agent engine ID can be changed to the MAC address of the device, the IP address of the
device, or any other desired value. Several examples are included here.
The following example shows how to use the MAC address of a device as the SNMP agent engine ID:
user@host# show snmp
engine-id {
667
use-mac-address;