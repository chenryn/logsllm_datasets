quences.
4. DISTRIBUTED OPERATIONS
The previous section describes ROMA in a static setup.
The simplicity of the design allows for a robust distributed
implementation that can continuously adapt to changing
network topologies due to channel condition changes and
node churn. This section presents the distributed opera-
tions of the ROMA protocol. In Section 4.1, we describe how
a node updates its routing tables, assuming it has already
found its gateway path and assigned channels correspond-
ingly. In Section 4.2, we show how a node can eﬃciently ex-
plore its neighborhood to ﬁnd a better gateway path when
its current choice of gateway path and channel assignment
has become suboptimal due to topological changes.
4.1 Link measurement and route propagation
Once a node has found its best gateway path, it switches
to the assigned channels, called home channels, according to
the gateway’s sequence. Each node continuously monitors
its neighboring links’ conditions on the home channels and
propagates its current gateway path and path metric to keep
other nodes updated.
Link quality measurement: A node can directly
communicate with a subset of all its potential neighbors
(i.e.actual neighbors) whose home channels overlap with the
node’s own. The previous hop of a node’s gateway path is
one such actual neighbor. Each node snoops the medium
to measure external load and periodically broadcasts probe
packets every Tbcast seconds from all radio interfaces to mea-
sure the delivery ratio of links to its actual neighbors. In-
stead of broadcasting probes one at a time, as suggested in
[14, 7], the delivery ratio is measured more accurately when
nodes send a burst of probe packets in quick succession.
We have noticed that, for some links in our testbed, the loss
rate observed on a long burst of transmissions is much higher
than that of a very short burst and stabilizes when the burst
length exceeds 20 packets. As a result, broadcasting probes
one at a time causes a node to dramatically over-estimate
the actual delivery ratio during data traﬃc forwarding. We
were able to deterministically reproduce this observation on
CMU’s wireless emulation testbed [19], suggesting that de-
livery ratio diﬀerences due to burst size could be a common
problem, at least for Atheros-based WiFi cards. We ﬁnd
that using a burst size of 20 packets results in robust deliv-
ery ratio measurements.
Route propagation: Each node periodically announces
its current channel assignment, gateway path and the cor-
responding gateway sequence on its home channels. The
gateway path consists of a series of forwarding nodes, their
channel assignments as well as the link metrics (in terms
of ETT and external load) between successive forwarders.
A gateway node announces a path of length zero to indi-
cate its gateway status. A node without any gateway path
announces a path length of ∞ on the default 802.11a and
802.11b/g channels.
A node processes received advertisements from all inter-
faces and stores extracted node and link information in a
partial local link table [15, 7]. The link table contains the
list of known nodes with their corresponding home channels
as well as the link metrics between them. In order to dis-
tinguish new information from old ones, each node or link
entry in a route announcement is associated an increasing
sequence number generated by the originating node.
A node continuously updates the path metric of its current
gateway path. Furthermore, if a node ﬁnds a better gateway
path in its link table that does not require it to change home
channels, it immediately switches to the new route.
Algorithm 1 Select the most promising neighbor for inves-
tigation every Tinvs.
for all x of my potential neighbors do
for c ∈ x’s home channels do
if c /∈ my channel assignments then
m ← metric of link between me and x on channel c
if m does not exist then
m ← min //assume the best link metric
else
//if link is measured before, weigh its metric by age
m ← m + (min − m) ∗ 0.1
end if
estimate my path metric via x using x’s gateway path
metric and m
remember (x, c) corresponding to the best path metric
end if
end for
end for
if the best estimated path metric is less than a threshold of
my current gateway metric then
investigate the link to x on channel c.
end if
4.2 Discovering better routing paths
As the underlying network topology changes, a node may
need to use diﬀerent home channels for its best gateway
path. To converge to the best possible channel assign-
ment and gateway path, a node performs temporary channel
switches to explore alternative gateway paths eﬃciently.
The goal of temporary channel switch is to investigate the
quality of a speciﬁc link on a foreign channel with the hope
that it will yield a better gateway path than the current one.
To maximize the chances that a temporary switch ﬁnds a
better path, a node chooses the most “promising” link among
all potential neighbors for investigation. Two types of infor-
mation are needed in order to choose the most promising
link: the current home channels of potential neighbors and
their gateway path metrics. ROMA employs network-wide
gossip to inform each node of its potential neighbors’ chan-
nel assignments as well as their gateway path metrics. Algo-
rithm 1 gives the pseudo-code for ﬁnding the most promising
link for investigation. Every Tinvs seconds, a node estimates
the link delivery ratio to a neighbor (x) on one of x’s home
channels. If the node has never investigated that link before,
it optimistically assumes the best link metric. Otherwise, it
uses the existing link metric discounted by the age of that
information. The node then uses the estimated link metric
and x’s gateway path metric to estimate the metric of the
potential gateway path via x. The most promising link for
investigation is one with the best estimated gateway path
metric. If the estimated path metric is less than a thresh-
old of the node’s current gateway path, the node starts the
actual investigation by switching to the foreign channel.
104Notation
Meaning
Tbcast
Nprobe
Tinvs
Tdur
Periodic probe/route broadcast interval
The burst length of probes
Periodic investigation interval
The amount of time a node dwells on
a foreign channel
Default
value
15 sec
20 pkts
150 sec
0.1 sec
Figure 5: ROMA’s protocol parameters and their de-
fault values.
Upon switching to the foreign channel, a node immedi-
ately sends a burst of Nprobe broadcast probes destined for
the neighbor x under investigation. The neighbor x replies
with Nprobe probes of its own upon receiving the investiga-
tive probes. A node waits for no more than Tdur seconds on
the foreign channel to wait for the neighbor’s replies before
switching back to its home channel. When the investigation
is ﬁnished, a node computes its best gateway path by taking
into account the new link information and changes its home
channels if the new path requires a diﬀerent channel assign-
ment. We use a modiﬁed Dijkstra’s algorithm to search for
the best path in a link table, similar to that in [13].
Figure 5 summarizes the list of protocol parameters in
ROMA and their default values used by our prototype.
These parameters control the tradeoﬀ between how quickly
ROMA can discover the best channel assignment and its
overhead during normal operations. Channel re-assignment
and temporary switches are potentially disruptive for ongo-
ing multi-hop ﬂows. Fortunately, these are infrequent events
in our testbed (Section 6.6).
5.
IMPLEMENTATION
We have implemented ROMA using the Click modular
router toolkit [21] as a Linux kernel module. Our imple-
mentation re-uses part of the software infrastructure origi-
nally developed for the Srcr [7] routing protocol. The kernel
module directly invokes the functions exported by the wire-
less driver to change channels. We use the Madwiﬁ 0.9.3.3
driver [1] with a bug-ﬁx to ensure that channels are changed
upon command. Upon receiving the command to change
channel, the driver waits until its current transmit queue is
drained by the radio hardware before switching to the new
channel. ROMA uses source routing when forwarding data
traﬃc. The sender speciﬁes the sequence of forwarders and
the channels to be used, and intermediate nodes in the path
forward packets based on the speciﬁed source route.
6. EVALUATION
This section demonstrates the following points about the
performance and behavior of ROMA:
1. ROMA eliminates intra-path interference and the
throughput of multi-hop gateway paths is comparable
to that of single hop paths (Section 6.2).
2. ROMA achieves good aggregate throughput in the
presence of many active ﬂows and multiple gateways
by utilizing many non-overlapping channels within the
same physical area. (Section 6.3).
3. Incorporating link variation and external load in the
path metric helps ROMA choose better multi-hop
routing paths (Section 6.4, 6.5).
20
10
16
21
17
7
24
15
19
5
14
18
4
23
11
2
6
8
13
9
12
22
1
3
Figure 6: Node placement in the testbed. The top and
bottom half of the oﬃces are separated by thick concrete
walls that greatly attenuate the signals. An example set
of gateway paths and channel assignment is shown with
node-18 as the gateway. Darker nodes indicate longer
gateway paths.
4. ROMA chooses stable channel assignments and gate-
way paths while remaining adaptive to changes in the
underlying topology. By preserving cross-links among
paths to the same gateway radio, a node can sometimes
change its gateway path without changing channel as-
signment (Section 6.6).
6.1 Experimental Setup
All our experiments are conducted on a 24-node dual-radio
testbed. The testbed spans a single ﬂoor of a tall oﬃce build-
ing in densely populated downtown Manhattan. The place-
ment of nodes in our testbed is shown in Figure 6. There
are many visible 802.11b/g access points and a few 802.11a
access points. Although there is rarely traﬃc of signiﬁcant
volume on 802.11a channels, we have frequently observed
high volumes of background traﬃc on 802.11b/g channels,
often keeping the channel busy for up to 85% of the time.
Each testbed node is a small form-factor device the size
of a typical home wireless router. Each node is powered
by a Geode processor with 128 MB RAM and has two
802.11a/b/g radios with the Atheros 5212 chipset. All nodes
run Linux with Click kernel patch (2.6.19). Since we pur-
chased the nodes in two batches over the course of a year,
half of the 24 nodes are slow with 233 MHz processors while
the other half are fast with 498 MHz processors. The for-
warding capacity of slow nodes is limited by the CPU and
saturates at only slightly over 6 Mbps. To avoid CPU bottle-
necks, we use autorate adaptation [6], but ﬁx the maximum
link level transmission rate to 6 Mbps. Since the slowest
transmission rate of 802.11a is 6 Mbps, this eﬀectively dis-
ables rate adaption for radios operating on 802.11a channels.
We plan to upgrade the slow nodes in the future to lift the
maximum rate restriction.
In all experiments, a gateway uses channel sequences
(40,6,50,11,60,1) and (11,60,1,40,6,50) with its radios oper-
ating on channels 40 and 11, unless speciﬁed otherwise. By
default, we measure the throughput of UDP ﬂows using the
iperf tool. With a maximum link level transmission rate of
6 Mbps, the maximum achievable end-to-end path through-
put is 5.5 Mbps, due to 802.11 protocol overheads. We con-
1051 Common, 1 Assigned
2 Identical Chan
ROMA
 1
 0.8
F
D
C
 0.6
 0.4
 0.2
 0
 0
 1
Gateway Path Throughput (Mbps), UDP
 2
 3
 4
 5
Figure 7: The cumulative distribution of gateway path
UDP throughput in ROMA as compared to the conﬁg-
urations using 2 identical channels or 1 common, 1 as-
signed channels. The experiments use a single gateway
and activate one UDP ﬂow at a time.
ﬁgure the UDP source to send at a ﬁxed rate of 6 Mbps with
1300-byte packets for a duration of 120 seconds and measure
the end-to-end throughput (i.e. goodput) of UDP ﬂows.
We compare ROMA against two alternative channel as-
signment strategies, 2 identical channels and 1 common, 1
assigned channel. In the 2 identical channels conﬁguration,
all nodes use two ﬁxed channels (channel 40 and 6). Due
to its simplicity, the identical channels conﬁguration is fre-
quently used in many multi-radio mesh deployments [16, 13].
We model the 1 common, 1 assigned channel conﬁguration
after the proposal in [20]. Each node operates one of its ra-
dios on the common channel (channel 40). A node assigns
the other radio to the 802.11b/g channel (channel 1, 6 or 11)
with the fewest interfering nodes so long as one of the node’s
immediate neighbors is also on the chosen channel. When
links are lossy, the notion of neighbors is fuzzy; we con-
sider two nodes as immediate neighbors if the link between
them has greater than 50% delivery ratio in both directions.
Like [20], we assume nodes within three hops of a node x
interfere with x. In our testbed, the three hop neighborhood
of a node covers most of the network. We did not implement
the the distributed channel assignment protocol of [20]; in-
stead, we measure the network topology on the common
channel 40 and use it to calculate each node’s channel as-
signment oﬄine before the start of each experiment. In both
identical and common channel conﬁgurations, nodes still
rely on ROMA’s path metric to ﬁnd the best gateway paths.
6.2 Single ﬂow throughput
We ﬁrst examine the performance of individual gateway
paths. In each run of the experiment, we randomly pick one
of the 24 nodes to act as the gateway. We start ROMA on
all nodes at the same time and wait for 5 minutes for the
protocol to converge. Typically, a node ﬁnds its best gate-
way path quickly, within one or two investigative switches.
In each experiment, we initiate a UDP ﬂow from the gate-
way to each of 23 non-gateway nodes, one at a time. There
were ﬁve experiment runs in total.
Figure 7 shows the CDF of the path throughput in ROMA
compared to that in the identical and common channel con-
ﬁgurations. The median path throughput of ROMA is 4.2
Mbps, similar to that of the identical channel conﬁguration
(4.1 Mbps), and better than that of the common channel
P
D
U
,
)
s
p
b
M
(
t
u
p
h
g
u