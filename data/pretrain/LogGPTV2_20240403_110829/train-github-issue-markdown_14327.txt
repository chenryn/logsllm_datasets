 **TypeScript Version:**
1.8.2
**Code**
    interface Foo {
        property: (boolean | { bar: number })
    }
    var foo: Foo = {
        property: { bar: 123 }
    };
    var p = foo.property;
    if (typeof p === 'object') {
        // This works fine!
        console.log(p.bar); // Prints "123"
    }
    if (typeof foo.property === 'object') {
        // This line produces the following compilation error:
        // "Property 'bar' does not exist on type 'boolean | { bar: number; }'"
        console.log(foo.property.bar);
    }
**Expected behavior:**
I expected `if (typeof foo.property === 'object') {` to be a valid type guard.
**Actual behavior:**
It's not.