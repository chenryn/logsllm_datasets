So we treat “download” and “installation” equally.
461(a) Percentage of Downloads
against App Rank
(b) Downloads of an App
(a) Percentage of Unique
Subscribers
against App
Rank
(b) Unique Subscribers of an
App
Figure 2: App Popularity by Downloads
Figure 3: App Popularity by Unique Devices
servers (which live behind a company ﬁrewall). Second, our
data collection logic and analysis pipelines were completely
governed by three Wandoujia employees5 to ensure compli-
ance with the commitments of Wandoujia privacy stated in
the Term-of-Use statements. Finally, the Wandoujia em-
ployees anonymized the user identiﬁers. The dataset in-
cludes only the aggregated statistics for the users covered
by our study period.
3. APP POPULARITY
In this section, we make a macro-level analysis on app
distribution.
In most previous studies [17, 19], apps are
usually ranked by their number of downloads on the mar-
ketplaces. To make a comprehensive analysis, we use four
metrics: (1) the number of downloads of the app;
(2) the number of unique devices that download the
app; (3) the aggregated data traﬃc generated by the
app; (4) the aggregated access time that users inter-
act with the app. The former two metrics can indicate
how many users an app has, and the latter two can indicate
how much an app is really used.
3.1 Popularity by Downloads
First, we investigate the most intuitive metric of app pop-
ularity, i.e., the number of downloads of an app. Most app
stores take the number of downloads (i.e., total, monthly,
or weekly) as an indicator to rank app popularity. We then
investigate the app downloads from the management activ-
ities of the Universal User Set. It is a common observa-
tion that people often update their installed apps. Hence,
we compute total downloads of an app by aggregating its
number of downloads and updates in our dataset.
Various evidence reports that the Pareto principle exists in
networked application domains such as web content, audio,
and video downloads [14], i.e., 20% of the objects account
for 80% downloads. Figure 2(a) shows that the cumulative
distribution function (CDF) of the percentage of app down-
loads against the app ranking by downloads. The results
show that the app downloads follow the Pareto principle.
For example, 10% apps account for 96.2% downloads of all
apps. Such ﬁnding validates a similar distribution of app
downloads reported previously [17].
We also explore the distributions of downloads of each
app. Figure 2(b) indicates that about 80% apps are down-
loaded or updated less than 10 times in our one-month dataset.
5One co-author, Feng Feng, is a co-founder and current CTO
of Wandoujia. He supervised the process of data collection
and de-identiﬁcation.
A substantially large number of apps are downloaded, up-
dated, or uninstalled only once. Such ﬁnding indicates a
“long-tail ” of apps that are rarely active.
3.2 Popularity by Unique Subscribers
Although the number of downloads of an app is a natural
indicator for popularity, it is also possible that some apps
are frequently downloaded or updated due to “fraud” be-
havior. For example, apps can be downloaded and updated
by automated programs to increase their ranks on market-
places. To validate whether the “mostly downloaded apps”
also have more users, we aggregate the unique subscribers
(devices) that ever downloaded, updated, or uninstalled an
app. Compared to the number of downloads of an app, each
device is counted only once as a subscriber. Figure 3(a)
shows that the CDF of the percentage of unique subscribers
against app ranking by downloads. We can ﬁnd that the
distribution of subscribers of an app still complies with the
Pareto principle, i.e., about 10% apps account for 95.1%
users. In this way, we could conclude that the more an
app is downloaded, the more users it usually owns.
Meanwhile, we explore how many users an app owns in
Figure 3(b). It shows that about 80% apps have been in-
stalled, updated, or uninstalled by only less than 10 unique
devices.
However, it is observed that some apps may have high
downloads but rather limited users/devices. We ﬁnd that
one app used by only 4 unique subscribers has 973 down-
loads in one month. We further explore its download logs,
and ﬁnd that its downloading actions were all performed in
a quite short interval (within two days). There are two pos-
sible reasons. One is that all of the 4 devices (subscribers)
are testing devices used by the app developers. The other is
that the app developers may purposely increase the down-
loads. Although such kind of apps is rare, the number
of their downloads may mislead end-users or even
bring threats.
3.3 Popularity by Network Trafﬁc
Either downloads or unique devices of an app can just
indicate that an app is downloaded and installed. However,
we cannot judge whether the app is really used by users.
Not surprisingly, mobile users may never use an app
after ﬁrst launching it, but do not uninstall it either.
From the logs of the Networked User Set, an app cannot
generate network logs if it is never launched by users. Hence,
we employ the network activities to examine whether the
app is really used. Although we may miss some apps that
462(a) Percentage
against App Rank
of Traﬃc
(b) Traﬃc of an App
Figure 4: App Popularity by Data Traﬃc
(a) Percentage
Time against App Rank
of Access
(b) Access Time of an App
Figure 5: App Popularity by Access Time
are usually used oﬄine, e.g., PDF readers or dictionaries,
most of currently popular apps heavily rely on network and
can be covered.
For better illustration, we distinguish Wi-Fi, Cellular, and
All (Wi-Fi + Cellular) of each app. The data traﬃc comes
from both foreground and background. In contrast, we take
into account only the access time from foreground, because
such time indicates how long users really interact with the
app.
Figure 4(a) and Figure 5(a) illustrate the CDF of the per-
centage of aggregated traﬃc/access time of apps against app
ranking by downloads, respectively. We can ﬁnd that the
Pareto principle still holds for the network activities of apps.
We also show the aggregated data traﬃc/access time of
an app in Figure 4(b) and Figure 5(b), respectively. We can
observe that about 97% apps consume less than 100 MB
traﬃc volume in one month, and about 95% apps are used
less than 100 hours.
3.4 Summary
From the preceding macro-level analysis of popularity, we
can conclude that the app popularity generally complies
with the Pareto principle in terms of downloads, unique
users, data traﬃc, and access time. This ﬁnding not only
validates results reported in previous studies [24, 17], but
also helps marketplace operators and network providers iden-
tify the “real” popular apps that are frequently downloaded,
updated, and used. To make the apps fast delivered to end-
users, the marketplace operators can leverage this distribu-
tion to allocate resources for serving these apps, design eﬃ-
cient cache mechanisms, or quickly redirect user requests to
the app providers. Knowing which apps are more adopted
by users, network providers can provide better bandwidth,
cache/prefetch contents to users, or explore value-added ser-
vices such as advertisements to increase revenue.
Figure 6: Distribution of Diurnal App Management
Activities. Each point on the cureve represents the per-
centage of activities performed during the one-hour time in-
terval against the total activities, during the whole day. For
example, activities during 10:00 am-11:00 am account
for about 6% of all activities.
4. APP MANAGEMENT PATTERNS
In this section, we investigate how users manage their
apps, e.g., which apps they often install and when they in-
stall these apps, which apps are more likely to be uninstalled,
and why these apps are uninstalled by users.
4.1 Diurnal Management Patterns
App management activities include downloading, updat-
ing, and uninstalling apps. Exploring app management ac-
tivities is motivated for various reasons. As app manage-
ment activities are usually made manually, they can implic-
itly reﬂect the density and frequency of user interactions
with the devices. For marketplace operators, this informa-
tion can help them understand when a large number of con-
current user requests would arrive, so that the marketplace
operators can optimize their servers for faster and more re-
liable network bandwidth. For app developers, they can
leverage such information to publish the latest versions of
apps at a proper time, to attract more downloads and up-
dates.
We investigate the diurnal downloading, updating, and
uninstallation distribution. We aggregate activities of down-
loading and updating an app, because they both reﬂect the
users’ interest towards this app. As shown in Figure 6, the
app management activities are “periodically” per-
formed during a day. The extent of app downloading and
updating activities keeps growing from 6:00 am and reaches
the ﬁrst peak around 11:00 am. The downloading and up-
dating activities decline slightly between 11:00 am to 12:00
pm. It is not very surprising because users may take lunch
at this time. The same observation could be found between
4:00 pm to 6:00 pm, i.e., the time on the way back home
or at dinner. We can also ﬁnd that about 32% download-
ing and updating activities are performed during 7:00 pm to
11:00 pm, where they reach the maximum around 9:00 pm.
Such distribution is quite consistent with human regularity.
After 9:00 pm, the downloading and updating activities de-
cline quite sharply, and reach the minimum around 5:00 am.
However, at the midnight, downloading and updating activ-
463Figure 7 shows the Jaccard Similarity Coeﬃcient of
the top-N apps, where N varies from 100 to 4,000. With
the increasing the number of N , the CDF of λ indicates that
there are a very small fraction of apps being co-installed
together. The λ of 90% app pairs is lower than 0.1, if both
appm and appn have 2,000 unique devices. Given the λ
value of 0.1, appm and appn share only 200 unique devices.
In contrast, we focus on the app pairs that take a higher
value of λ, and explore why these apps are more likely
to be installed together. We choose the pairs whose λ is
more than 0.1. Rather than exploring the detailed textual
descriptions of the apps, we focus on two properties vendor
and category.
The vendor information of an app can reﬂect the devel-
oper, provider, or owner of the app. Usually, the naming
rules of an Android app can reﬂect its vendor information.
For example, the package com.tencent.mm can be processed
by removing the general term “com” and the usage term “mm”,
and the vendor information “tencent” is extracted. By clus-
tering the vendors, we ﬁnd that a number of co-installed
apps with high λ value come from the same vendor.
For example, the pair of  has the λ value of 0.358,
and these two apps are both provided by Qihoo6. Further-
more, the λ value could be much higher, if two apps
developed by the same vendor belong to the same
category. For example, the pair of  holds the λ value
of 0.604, and the two apps are both provided by XIAOMI7;
the pair of  holds the λ value of 0.7, and the two
apps are provided by Tencent.
There are many possible reasons why apps from the same
vendor are often co-installed. A vendor may focus on a spe-
ciﬁc application domain, e.g., Tencent is the largest mes-
saging service provider in China. Tencent QQ is the most
popular instant messaging app in China; WeChat not only
supports instant messaging, but also provides social com-
munication features such as content sharing. Another rea-
son is that there might be “in-app bundled installation”
in some apps. For example, when users install an app, the
app’s vendor may implicitly or explicitly recommend users
to install other apps. For simple validation, we make ﬁeld
studies by selecting 50 apps from well-known app developers
such as Qihoo, Baidu, and Tencent, and install them manu-
ally. 14 apps out of the 50 apps recommend installing other
apps in their installation process, and 8 apps of these 14
“bundled” installations suggest apps provided by the same
provider.
4.2.2 Correlation of App Categories
The category information of an app indicates the func-
tionality and application domains of the app. We can infer
the user needs and interests according to their selected app’s
category. Furthermore, knowing the correlations of app cat-
egories can suggest marketplace operators to organize apps
6Qihoo is one of the largest anti-virus software vendors in
China.
7XIAOMI is one of the largest mobile phone manufacturers
in China.
Figure 7: Coeﬃciency of installed apps.
ities occupy about 7% in total, implying that there are still
a large number of active users.
Activities of uninstallating apps present a similar distri-
bution to the ones of downloading/updating apps. However,
knowing when users uninstall apps may be less meaningful,
because the uninstallation activities do not have interactions
with the marketplace operators or app providers.
4.2 App Selection Patterns
Knowing user interests and needs towards apps is use-
ful. For marketplace operators, such information can help
improve their recommendation systems. For app develop-
ers, such information can help improve their apps to work
better with other co-installed apps, or explore potential col-
laboration opportunities with other developers. For network
providers, such information can help them provide a more
personalized data plan to bundle correlated apps and down-
load them.
In fact, a lot of previous studies investigated how users
select apps [24, 11, 19, 17], and some interesting ﬁndings
were reported. From these studies, a common metric is to
check the “cluster eﬀect”: which apps are more likely to be
selected together. We adopt the same metric, but investigate
it at two levels: the micro-level of co-installed apps, and
the meso-level of correlated app categories.
From our previous analysis, substantial apps are rarely
downloaded (less than 10 times or 10 devices), so we choose
only the top 4,000 apps by their downloads. Each app is
downloaded by at least 20 devices. To better explore the
underlying reasons why apps are selected, we organize the
apps into categories according to the classiﬁcation system of
Wandoujia. Table 1 summarizes the categories ordered by
the number of apps. We also present the number of users
and network summary of each category, which are used for
analysis in Section 5.
4.2.1 Co-Installed Apps
We ﬁrst study co-installed apps. Given two apps appm and
appn, we employ the classical Jaccard Similarity Coeﬃ-
cient (denoted as λ) to measure the possibility how they
are likely to be installed together. We denote the num-
ber of unique devices that install either appm or appn as D
(appm∪appn), and the number of unique devices that install
both appm and appn as D (appm ∩ appn). We then compute
D(appm∩appn)
D(appm∪appn) .
464App Category
GAME
NEWS AND READING
VIDEO
TOOL
SYSTEM TOOL
SOCIAL
EDUCATION
LIFESTYLE
TRAVEL
PERSONALIZATION
FINANCE
COMMUNICATION
SHOPPING
PRODUCTIVITY
MOTHER AND BABY
MUSIC
SPORTS
IMAGE
TRAFFIC
Table 1: Chosen Top Apps by Category.
Apps
Users
(106 devices)
Downloads
(106 times)
Traﬃc
(GB)
Access-
Time
(107 hours)
C-
C-
W-
Traﬃc
Time
Traﬃc
W-
Time
1,227
274
238