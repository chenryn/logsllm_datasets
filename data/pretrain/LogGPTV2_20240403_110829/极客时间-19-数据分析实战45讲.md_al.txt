# 用 Seaborn 画直方图sns.distplot(s, kde=False)plt.show()sns.distplot(s, kde=True)plt.show()我们创建一个随机的一维数组，然后分别用 Matplotlib 和 Seaborn进行直方图的显示，结果如下，你可以看出，没有任何差别，其中最后一张图就是kde 默认为 Ture 时的显示情况。![](Images/4a5c164808214ac0ffd17916748044ea.png){savepage-src="https://static001.geekbang.org/resource/image/fc/0d/fccd31462e7de6f56b4aca262b46650d.png"}![](Images/ff08e2abfa08babc722a3d1e5601c5d7.png){savepage-src="https://static001.geekbang.org/resource/image/fb/af/fb7a2db332dcd5c7c18a4961794923af.png"}![](Images/2fcfd4a509bd17f0879dd7f63bafaee4.png){savepage-src="https://static001.geekbang.org/resource/image/9c/19/9cded19e1c877f98f55d4c6726ff2f19.png"}**条形图**如果说通过直方图可以看到变量的数值分布，那么条形图可以帮我们查看类别的特征。在条形图中，长条形的长度表示类别的频数，宽度表示类别。在 Matplotlib 中，我们使用 plt.bar(x, height) 函数，其中参数 x 代表 x轴的位置序列，height 是 y 轴的数值序列，也就是柱子的高度。在 Seaborn 中，我们使用 sns.barplot(*x=None, y=None, data=None*)函数。其中参数 data 为 DataFrame 类型，x、y 是 data 中的变量。    import matplotlib.pyplot as pltimport seaborn as sns
# 数据准备x = ['Cat1', 'Cat2', 'Cat3', 'Cat4', 'Cat5']y = [5, 4, 8, 12, 7]
# 用 Matplotlib 画条形图plt.bar(x, y)plt.show()
# 用 Seaborn 画条形图sns.barplot(x, y)plt.show()我们创建了 x、y 两个数组，分别代表类别和类别的频数，然后用 Matplotlib 和Seaborn 进行条形图的显示，结果如下：![](Images/5776cf271bea49b05c179335398fb4eb.png){savepage-src="https://static001.geekbang.org/resource/image/d9/3a/d9a247a6fbee488cc8eb62f96947173a.png"}![](Images/8e2d1671506517015079ea7b8f1c2000.png){savepage-src="https://static001.geekbang.org/resource/image/75/31/7553f2fa08e3962ed9902d4cef796c31.png"}**箱线图**箱线图，又称盒式图，它是在 1977 年提出的，由五个数值点组成：最大值(max)、最小值 (min)、中位数 (median) 和上下四分位数 (Q3,Q1)。它可以帮我们分析出数据的差异性、离散程度和异常值等。在 Matplotlib 中，我们使用 plt.boxplot(x, labels=None) 函数，其中参数 x代表要绘制箱线图的数据，labels 是缺省值，可以为箱线图添加标签。在 Seaborn 中，我们使用 sns.boxplot(*x=None, y=None, data=None*)函数。其中参数 data 为 DataFrame 类型，x、y 是 data 中的变量。    
# 数据准备
# 生成 0-1 之间的 10*4 维度数据data=np.random.normal(size=(10,4)) lables = ['A','B','C','D']
# 用 Matplotlib 画箱线图plt.boxplot(data,labels=lables)plt.show()
# 用 Seaborn 画箱线图df = pd.DataFrame(data, columns=lables)sns.boxplot(data=df)plt.show()这段代码中，我生成 0-1 之间的 10\*4 维度数据，然后分别用 Matplotlib 和Seaborn 进行箱线图的展示，结果如下。Matplotlib 绘制：![](Images/3e3e813d33cb0be80a8f42a50b75b3d5.png){savepage-src="https://static001.geekbang.org/resource/image/60/e0/6083f7fc15028eae5e3f49e60fad90e0.png"}Seaborn 绘制：![](Images/93b7c39ab6af00a9878cda95517582f9.png){savepage-src="https://static001.geekbang.org/resource/image/42/e0/42fe2a9864bbc2bc0034a0973673d1e0.png"}**饼图**饼图是常用的统计学模块，可以显示每个部分大小与总和之间的比例。在 Python数据可视化中，它用的不算多。我们主要采用 Matplotlib 的 pie 函数实现它。在 Matplotlib 中，我们使用 plt.pie(x, labels=None) 函数，其中参数 x代表要绘制饼图的数据，labels 是缺省值，可以为饼图添加标签。这里我设置了 lables数组，分别代表高中、本科、硕士、博士和其他几种学历的分类标签。nums代表这些学历对应的人数。    import matplotlib.pyplot as plt
# 数据准备nums = [25, 37, 33, 37, 6]labels = ['High-school','Bachelor','Master','Ph.d', 'Others']
# 用 Matplotlib 画饼图plt.pie(x = nums, labels=labels)plt.show()通过 Matplotlib 的 pie 函数，我们可以得出下面的饼图：![](Images/3c856d58d546a5a27da3ad1cf9479e93.png){savepage-src="https://static001.geekbang.org/resource/image/45/f7/45c38de6563d528f610bfcef5c8874f7.png"}**热力图**热力图，英文叫 heatmap，是一种矩阵表示方法，其中矩阵中的元素值用颜色来代表，不同的颜色代表不同大小的值。通过颜色就能直观地知道某个位置上数值的大小。另外你也可以将这个位置上的颜色，与数据集中的其他位置颜色进行比较。热力图是一种非常直观的多元变量分析方法。我们一般使用 Seaborn 中的 sns.heatmap(data) 函数，其中 data代表需要绘制的热力图数据。这里我们使用 Seaborn 中自带的数据集 flights，该数据集记录了 1949 年到1960 年期间，每个月的航班乘客的数量。    import matplotlib.pyplot as pltimport seaborn as sns
# 数据准备flights = sns.load_dataset("flights")data=flights.pivot('year','month','passengers')
# 用 Seaborn 画热力图sns.heatmap(data)plt.show()通过 seaborn 的 heatmap函数，我们可以观察到不同年份，不同月份的乘客数量变化情况，其中颜色越浅的代表乘客数量越多，如下图所示：![](Images/702b65898f2ba7145dc8c27bab95ad9e.png){savepage-src="https://static001.geekbang.org/resource/image/57/93/57e1bc17d943620620fb087d6190df93.png"}**蜘蛛图**蜘蛛图是一种显示一对多关系的方法。在蜘蛛图中，一个变量相对于另一个变量的显著性是清晰可见的。假设我们想要给王者荣耀的玩家做一个战力图，指标一共包括推进、KDA、生存、团战、发育和输出。那该如何做呢？这里我们需要使用 Matplotlib 来进行画图，首先设置两个数组：labels 和stats。他们分别保存了这些属性的名称和属性值。因为蜘蛛图是一个圆形，你需要计算每个坐标的角度，然后对这些数值进行设置。当画完最后一个点后，需要与第一个点进行连线。因为需要计算角度，所以我们要准备 angles数组；又因为需要设定统计结果的数值，所以我们要设定 stats数组。并且需要在原有 angles 和 stats数组上增加一位，也就是添加数组的第一个元素。    import numpy as npimport matplotlib.pyplot as pltimport seaborn as snsfrom matplotlib.font_manager import FontProperties  