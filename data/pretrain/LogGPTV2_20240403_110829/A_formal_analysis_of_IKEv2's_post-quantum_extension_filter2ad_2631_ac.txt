only “executing any steps of the protocol”. In that case, Aliveness
can only be achieved for the initiator (Aliveness_I) but not the
responder (Aliveness_R). By this interpretation, the authentication
of the initiator is therefore quite weak.
5 AUTOMATED PROOFS IN A QUANTUM
SETTING
With the basic model of IKEv2 for the Tamarin Prover established
for the classical case in the previous section, we can now extend
96A formal analysis of IKEv2’s post-quantum extension
ACSAC ’21, December 6–10, 2021, Virtual Event, USA
the proof to model deviations from the core protocol and move to
a quantum-setting.
Fig. 2 shows the state machine presented before (see Fig. 1) in
vertical form and with some possible extensions to the core proto-
col: On the right, COOKIE [20] (marked orange), used in the first
phase of the key exchange to re-use parameters from previously es-
tablished SAs, and EAP [14] (marked red), a special authentication
protocol which changes the order in which the peers authenticate
themselves.
On the left (marked blue), the IKE_INTERMEDIATE extension [33]
is illustrated. It is one of the most recently proposed extensions and
was drafted with the need for hybrid (quantum-safe) key exchanges
in mind [ibid.]. Among other uses, it allows the IPsec-key exchange
to support multiple key exchanges (as specified in draft [35]) and
thus enables the use of strong post-quantum cryptography (such
as the McEliece-cryptosystem [28]) in the context of IKEv2.
While we assume that formally proving the security for any
extension would be valuable feedback to the community, most of
them have been established for years without any noteworthy secu-
rity breaches. We therefore focus on the two extensions mentioned
above, which are still in draft status and do not enjoy quite the
same level of confidence yet.
place
exchange
IKE_INTERMEDIATE
5.1 Extending the Tamarin Model
The
after
takes
IKE_SA_INIT but before IKE_AUTH and consists of one or more
round-trips; for simplicity we model an exchange with one round-
trip only. Extending the model established in Section 4 accordingly
requires two new Tamarin rules that implement the respective new
states for the Initiator and Responder. The rules IKE_AUTH_I and
IKE_AUTH_R also change, as their input condition is now the suc-
cessful completion of the new exchange; a session in this model is
therefore only complete when IKE_INTERMEDIATE is used.
The attacker in our basic model is able to reveal classic DH-keys;
it is with respect to her that the security properties in Section 3 were
proven to hold. To account for quantum-resistant key exchanges,
too, we extend the attacker model by the following rule, which
allows the revelation of quantum-resistant DH-keys:
1 rule reveal_dhq :
2 [ ! DHQtoReveal ($I , k) ]
3 -- [ RevDHQ ( $I )]->
4 [ Out (k) ]
The new fact !DHQtoReveal(X,
k) is used in the
IKE_INTERMEDIATE_X-rules to indicate that peer X has created
a quantum-safe DH-key.
5.2 Verifying PQ-IKEv2’s Security Properties
The additional key exchange should protect the peers’ shared key
against even a quantum-computer-based attacker [35], i.e., the en-
hanced IKEv2-version should provide Key secrecy against this at-
tacker. Ideally, it should feature all the security properties that the
original IKEv2 provides against a classical attacker.
To prove this, we use the same methodology as presented in Sec-
tion 4.4. The Tamarin lemmata are adjusted to account for the new
attacker model; this affects all properties which are only achieved
if the DH-values are not revealed, namely: a) Weak Agreement,
b) Agreement, c) Key secrecy and d) Identity Protection. In all of
the corresponding lemmata, it is necessary to assume that the DH-
keys are not revealed to prove that the property holds. A quantum-
computer-based attacker can reveal the classical DH-keys by defini-
tion. For all properties in question, it is instead necessary to assume
that the quantum-resistant DH-keys are not revealed to prove that
they still hold.
In the lemma for Weak Agreement_I, for example, the fact RevDH(X)
needs to be replaced by RevDHQ(X) as follows (see Lines 5 and 6):
1 lemma weak_agreement_i [ use_induction ]:
2
3
" All spi I R keymat #i .
Completed ( spi , I , ' initiator ', R , keymat )
@ #i
4
5
6
7
8
& not ( Ex #k . RevSk (R) @ k)
& not ( Ex #k . RevDHQ (I) @ k) //  ( Ex spi2 role nonce keymat2 #j .
Agreed ( spi2 , R , role , I , nonce ,
keymat2 ) @ #j
& #j 
static key
7
8
9 [ ! PrivKey ($I , ~ sk )
key is ~ sk
//  x = y"
9
10 // IKEv2 Protocol
11
12 // 
13
14 // 
15
16 end
6 -- [ RevSk ( $I )]->
of this rule ,
7
8 [ Out ( sk ) ]
published
9
10 rule reveal_dh :
11 [ ! DHtoReveal ($I , k) ]
ephemeral key k
12
13 -- [ RevDH ( $I )]->
of this rule ,
// < If $I 's private
// was generated
before
// < then upon use
// the action fact "
RevSK ( $I )" is
registered
// < and sk is
// < If $I 's