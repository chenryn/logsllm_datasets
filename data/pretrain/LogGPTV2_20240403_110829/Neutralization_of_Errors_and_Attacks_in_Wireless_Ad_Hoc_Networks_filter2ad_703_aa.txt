# Neutralization of Errors and Attacks in Wireless Ad Hoc Networks

**Authors:**
- Claudio Basile
- Zbigniew Kalbarczyk
- Ravi K. Iyer

**Affiliation:**
Center for Reliable and High-Performance Computing  
University of Illinois at Urbana-Champaign, IL 61801  
Email: {basilecl, kalbar, iyer}@crhc.uiuc.edu

## Abstract
This paper introduces and evaluates strategies for building reliable and secure wireless ad hoc networks. Our approach is based on the concept of inner-circle consistency, where local node interactions are used to neutralize errors and attacks at their source, thereby preventing their propagation and enhancing the fidelity of propagated information. We achieve this by integrating statistical (a proposed fault-tolerant cluster algorithm) and security (threshold cryptography) techniques with application-aware checks, leveraging the partial and natural replication of data and computations in wireless applications. We have implemented an inner-circle framework using the ns-2 network simulator and demonstrated its effectiveness in two significant scenarios: (1) neutralizing black hole attacks in AODV networks and (2) mitigating sensor errors in a target detection/localization application over a wireless sensor network.

## 1. Introduction
Wireless ad hoc networks consist of nodes that can form a network without any pre-existing infrastructure. These networks, ranging from mobile networks of laptops and PDAs to sensor networks, are inherently unstable and susceptible to both accidental errors and security attacks. The root causes include node mobility, deployment in harsh environments, the need for low-cost solutions, and limited communication, computation, and energy resources. This paper aims to propose and evaluate strategies for building robust wireless adhoc networks that can operate correctly even when some nodes are compromised by errors or attacks. Our contributions include:

- **Introduction of Inner-Circle Consistency:** Local node interactions within a one-hop neighborhood are used to neutralize errors and attacks at their source, preventing their propagation and improving the accuracy of the disseminated information. This is achieved through a combination of:
  - A secure topology service for discovering the local network topology.
  - Deterministic voting techniques with application-aware checks.
  - Statistical voting techniques using a fault-tolerant cluster algorithm.
  - Threshold cryptography for ensuring message integrity despite node intrusions.

- **Design and Formal Specification of an Inner-Circle Framework:** A reconfigurable architecture that provides a common substrate for embedding various error/attack-neutralization techniques. The framework can be scaled to the available communication, computation, and energy resources on a wireless node. It includes both software and hardware modules, such as a Crypto-Processor for tamper-resistant key storage and a Fault-Tolerant Cluster Processor for masking faulty or malicious data.

- **Prototype and Evaluation:** Using the ns-2 network simulator, we demonstrate the inner-circle approach in two significant scenarios:
  - Neutralizing black hole attacks in AODV networks, reducing throughput degradation from 3000% to below 22%.
  - Mitigating sensor errors in a target detection/localization application, halving energy consumption while improving target detection latency and localization accuracy by four to six times.

## 2. System Model
The system comprises a set \( N \) of mobile nodes that communicate via wireless channels. Each node can discover its neighbors through periodic beacons. Correct nodes have unique IDs and are aware of their geographic positions. A threshold cryptography scheme is available, and a dependability level \( L \geq 1 \) is specified by a source node when diffusing information. The inner-circle approach allows a recipient node to verify if the information was agreed upon by \( L \) neighbors of the source node. Node failures can be due to crashes or Byzantine behavior, and timely connectivity is assumed in the absence of failures and node movement. The adversary is assumed to have limited jamming capabilities and cannot disrupt the entire network.

## 3. Overview of Inner-Circle Consistency
### Execution Scenario
Consider a hierarchical wireless sensor network deployed in a remote region to detect targets or events of interest, such as a fire in a forest. Sensor nodes gather environmental data, which is aggregated by collector nodes and forwarded to access points. If a collector node \( x \) computes an aggregate value \( v \) and propagates it, \( v \) may suffer from natural accuracy errors or be invalid due to a faulty or malicious node. To neutralize these issues, all neighboring collector nodes form an inner-circle to check and filter values from \( x \). The inner-circle voting protocol ensures that at least \( L \) neighbors agree on the value before it is propagated.

### Inner-Circle Mechanism
- **Application-Aware Checking (Deterministic Voting):** Ensures that the agreed value satisfies application-specific criteria.
- **Statistical Voting:** Improves the accuracy of the proposed value by combining it with values from other inner-circle nodes.
- **Threshold Signatures:** Messages propagated outside the inner-circle are self-checking, allowing recipient nodes to verify the agreement of at least \( L \) inner-circle nodes.

### Discussion
The inner-circle approach executes expensive intrusion- and fault-tolerant algorithms only locally, providing fast detection and suppression of errors and attacks, reducing communication overhead and energy consumption, and enabling more efficient application-aware checking. However, the number of errors and attacks it can tolerate is limited by the size of the inner-circle. Larger inner-circles can balance this trade-off, but this paper focuses on one-hop inner-circles.

## 4. Inner-Circle Consistency Node Architecture
### Components
- **Inner-Circle Interceptor:** Intercepts messages to/from the link layer and performs extra actions for matching message templates.
- **Suspicions Manager:** Maintains a list of suspected nodes based on misbehavior indications.
- **Secure Topology Service:** Enables secure discovery of the local network topology.
- **Inner-Circle Voting Service:** Performs deterministic or statistical voting on messages/values sent by the inner-circle's center node.
- **Inner-Circle Callbacks:** Application-provided functions for customizing the inner-circle voting service.

### Customization
The architecture can be customized based on available resources and application characteristics. Two examples are provided for ad hoc nodes and sensor nodes, including dedicated hardware modules like a Crypto-Processor and a Fault-Tolerant Cluster Processor for high performance and low energy consumption.

---

This optimized version of the text is more structured, coherent, and professional, making it easier to read and understand.