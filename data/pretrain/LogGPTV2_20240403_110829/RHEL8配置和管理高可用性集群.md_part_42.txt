:::
在计划和配置您将使用 `pcs`{.literal}
命令界面管理和监控的灾难恢复网站时，请注意以下注意事项：
::: itemizedlist
-   灾难恢复网站必须是一个集群。这样便可使用和主要站点相同的工具和相似过程配置它。
-   主群集和灾难恢复群集由独立的 `pcs cluster setup`{.literal}
    命令创建。
-   必须配置集群及其资源以便同步数据并可以进行故障切换。
-   恢复站点中的集群节点和主站点中的节点的名称不能相同。
-   对于要运行 pcs 命令的两个群集中的每个节点，必须通过 `pcs`{.literal}
    用户 `hacluster`{.literal} 进行身份验证。
:::
:::
::: section
::: titlepage
# []{#assembly_configuring-disaster-recovery-configuring-and-managing-high-availability-clusters.html#proc_disaster-recovery-display-configuring-disaster-recovery}显示恢复集群的状态 {.title}
:::
要配置主集群和灾难恢复集群，以便可以显示这两个集群的状态，请执行以下步骤。（RHEL
8.2 及更新的版本）
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
设置灾难恢复集群不会自动配置资源或复制数据。这些项目必须由用户手动配置。
:::
在本例中：
::: itemizedlist
-   主群集将命名为 `PrimarySite`{.literal}，由节点
    `z1.example.com.`{.literal} 和 `z2.example.com`{.literal} 组成。
-   灾难恢复站点集群将命名为 `DRsite`{.literal}，由节点
    `z3.example.com 和 z4.`{.literal} example.com``{=html} 组成。
:::
这个示例设置了一个没有配置资源或保护保护的基本集群。
::: orderedlist
**流程**
1.  身份验证将用于这两个集群的所有节点。
    ``` literallayout
    [root@z1 ~]# pcs host auth z1.example.com z2.example.com z3.example.com z4.example.com -u hacluster -p password
    z1.example.com: Authorized
    z2.example.com: Authorized
    z3.example.com: Authorized
    z4.example.com: Authorized
    ```
2.  创建用作集群的主集群并为集群启动集群服务的集群。
    ``` literallayout
    [root@z1 ~]# pcs cluster setup PrimarySite z1.example.com z2.example.com --start
    {...}
    Cluster has been successfully set up.
    Starting cluster on hosts: 'z1.example.com', 'z2.example.com'...
    ```
3.  创建用作灾难恢复集群的集群,，为集群启动集群服务。
    ``` literallayout
    [root@z1 ~]# pcs cluster setup DRSite z3.example.com z4.example.com --start
    {...}
    Cluster has been successfully set up.
    Starting cluster on hosts: 'z3.example.com', 'z4.example.com'...
    ```
4.  从主集群中的一个节点中，将第二个集群设置为恢复站点。该恢复站点由其中一个节点的名称定义。
    ``` literallayout
    [root@z1 ~]# pcs dr set-recovery-site z3.example.com
    Sending 'disaster-recovery config' to 'z3.example.com', 'z4.example.com'
    z3.example.com: successful distribution of the file 'disaster-recovery config'
    z4.example.com: successful distribution of the file 'disaster-recovery config'
    Sending 'disaster-recovery config' to 'z1.example.com', 'z2.example.com'
    z1.example.com: successful distribution of the file 'disaster-recovery config'
    z2.example.com: successful distribution of the file 'disaster-recovery config'
    ```
5.  检查灾难恢复配置。
    ``` literallayout
    [root@z1 ~]# pcs dr config
    Local site:
      Role: Primary
    Remote site:
      Role: Recovery
      Nodes:
        z1.example.com
        z2.example.com
    ```
6.  检查主集群的状态以及主集群中节点的灾难恢复集群。
    ``` literallayout
    [root@z1 ~]# pcs dr status
    --- Local cluster - Primary site ---
    Cluster name: PrimarySite
    WARNINGS:
    No stonith devices and stonith-enabled is not false
    Cluster Summary:
      * Stack: corosync
      * Current DC: z2.example.com (version 2.0.3-2.el8-2c9cea563e) - partition with quorum
      * Last updated: Mon Dec  9 04:10:31 2019
      * Last change:  Mon Dec  9 04:06:10 2019 by hacluster via crmd on z2.example.com
      * 2 nodes configured
      * 0 resource instances configured
    Node List:
      * Online: [ z1.example.com z2.example.com ]
    Full List of Resources:
      * No resources
    Daemon Status:
      corosync: active/disabled
      pacemaker: active/disabled
      pcsd: active/enabled
    --- Remote cluster - Recovery site ---
    Cluster name: DRSite
    WARNINGS:
    No stonith devices and stonith-enabled is not false
    Cluster Summary:
      * Stack: corosync
      * Current DC: z4.example.com (version 2.0.3-2.el8-2c9cea563e) - partition with quorum
      * Last updated: Mon Dec  9 04:10:34 2019
      * Last change:  Mon Dec  9 04:09:55 2019 by hacluster via crmd on z4.example.com
      * 2 nodes configured
      * 0 resource instances configured
    Node List:
      * Online: [ z3.example.com z4.example.com ]
    Full List of Resources:
      * No resources
    Daemon Status:
      corosync: active/disabled
      pacemaker: active/disabled
      pcsd: active/enabled
    ```
:::
有关灾难恢复配置的其他显示选项，请查看 `pcs dr`{.literal}
命令的帮助屏幕。
:::
:::
[]{#ref_interpreting-resource-exit-codes-configuring-and-managing-high-availability-clusters.html}
::: chapter
::: titlepage
# []{#ref_interpreting-resource-exit-codes-configuring-and-managing-high-availability-clusters.html#ref_interpreting-resource-exit-codes-configuring-and-managing-high-availability-clusters}第 32 章 解释资源代理 OCF 返回代码 {.title}
:::
Pacemaker 资源代理符合 Open Cluster Framework(OCF)资源代理
API。下表描述了 OCF 返回代码，以及 Pacemaker 如何解释它们。
当代理返回代码时，集群要做的第一件事是针对预期结果检查返回码。如果结果与预期值不匹配，则操作被视为失败，并启动恢复操作。
对于任何调用，资源代理必须以定义的返回码退出，该返回码告知调用者调用操作的结果。
故障恢复有三种类型，如下表所述。
::: table
[]{#ref_interpreting-resource-exit-codes-configuring-and-managing-high-availability-clusters.html#idm140695989056192}
**表 32.1. 集群执行的恢复类型**
::: table-contents
  类型    描述                                                                         集群采取的操作
  ------- ---------------------------------------------------------------------------- --------------------------------------------------
  soft    发生了短暂错误。                                                             重新启动资源或将其移到新位置。
  hard    发生了一个可能特定于当前节点的非短暂错误。                                   将资源移到其他地方，并阻止其在当前节点上被重试。
  fatal   发生了一个对所有集群节点都常见的非短暂错误（例如，指定了一个错误的配置）。   停止资源，并阻止其在任何集群节点上启动。
:::
:::
下表提供了 OCF
返回代码以及收到故障代码时集群将启动的恢复类型。请注意，如果 0
不是预期返回值，即使返回 0（OCF 别名
`OCF_SUCCESS`{.literal}）的操作也被视为失败。
::: table
[]{#ref_interpreting-resource-exit-codes-configuring-and-managing-high-availability-clusters.html#idm140696021636096}
**表 32.2. OCF 返回码**
::: table-contents
+--------+-----------------------------+-----------------------------+
| 返回码 | OCF 标签                    | 描述                        |
+:=======+:============================+:============================+
| 0      | `OCF_SUCCESS`{.literal}     | \*                          |
|        |                             | 操                          |
|        |                             | 作成功完成。这是任何成功的  |
|        |                             | start、stop、promote 和     |
|        |                             | demote 命令的预期返回码。   |
|        |                             |                             |
|        |                             | \* 如果意外，则类型：软     |
+--------+-----------------------------+-----------------------------+
| 1      | `OCF_ERR_GENERIC`{.literal} | \* 操作返回一个通用错误。   |
|        |                             |                             |
|        |                             | \* 类型： soft              |
|        |                             |                             |
|        |                             | \*                          |
|        |                             | 资源管理器将尝试            |
|        |                             | 恢复资源或将其移到新位置。  |
+--------+-----------------------------+-----------------------------+
| 2      | `OCF_ERR_ARGS`{.literal}    | \*                          |
|        |                             | 资源的配置在                |
|        |                             | 此机器中无效。例如，它指向  |
|        |                             | 了一个节点上未找到的位置。  |
|        |                             |                             |
|        |                             | \* type: hard               |
|        |                             |                             |
|        |                             | \*                          |
|        |                             | 资源                        |
|        |                             | 管理器会将资源移到其他位置  |
|        |                             | ，并阻止其在当前节点上重试  |
+--------+-----------------------------+-----------------------------+
| 3      | `OCF_E                      | \* 请求的操作没有实施。     |
|        | RR_UNIMPLEMENTED`{.literal} |                             |
|        |                             | \* type: hard               |
+--------+-----------------------------+-----------------------------+
| 4      | `OCF_ERR_PERM`{.literal}    | \*                          |
|        |                             | 资源代理没有足够的权限来    |
|        |                             | 完成该任务。例如，这可能是  |
|        |                             | 因为代理无法打开特定文件、  |
|        |                             | 监听特定套接字或写入目录。  |
|        |                             |                             |
|        |                             | \* type: hard               |
|        |                             |                             |
|        |                             | \*                          |
|        |                             | 除非                        |
|        |                             | 另有配置，否则资源管理器将  |
|        |                             | 尝试通过重启不同节点上的资  |
|        |                             | 源（其中权限问题可能不存在  |
|        |                             | ）来恢复带有此错误的资源。  |
+--------+-----------------------------+-----------------------------+
| 5      | `O                          | \*                          |
|        | CF_ERR_INSTALLED`{.literal} | 执行操作的节点中缺          |
|        |                             | 少所需的组件。这可能是因为  |
|        |                             | 所需的二进制文件不可执行，  |
|        |                             | 或者重要的配置文件不可读。  |
|        |                             |                             |
|        |                             | \* type: hard               |
|        |                             |                             |
|        |                             | \*                          |
|        |                             | 除非另有配置，否            |
|        |                             | 则资源管理器将尝试通过重启  |
|        |                             | 不同节点上的资源（其中可能  |
|        |                             | 存在所需的文件或二进制文件  |
|        |                             | ）来恢复带有此错误的资源。  |
+--------+-----------------------------+-----------------------------+
| 6      | `OC                         | \*                          |
|        | F_ERR_CONFIGURED`{.literal} | 本地节点上的资源配置无效。  |
|        |                             |                             |
|        |                             | \* type: fatal              |
|        |                             |                             |
|        |                             | \*                          |
|        |                             | 当返回此代码时，Pacemaker   |
|        |                             | 会阻止资源在集群            |
|        |                             | 中的任何节点上运行，即使该  |
|        |                             | 服务配置在其它节点上有效。  |
+--------+-----------------------------+-----------------------------+
| 7      | `OCF_NOT_RUNNING`{.literal} | \*                          |
|        |                             | 资源                        |
|        |                             | 被安全地停止。这意味着资源  |
|        |                             | 已正常关闭，或者从未启动。  |
|        |                             |                             |
|        |                             | \* 如果意外，则类型：软     |
|        |                             |                             |
|        |                             | \*                          |
|        |                             | 集群不会尝试停止在任        |
|        |                             | 何操作中返回此功能的资源。  |
+--------+-----------------------------+-----------------------------+
| 8      | `OCF_                       | \* 资源在提升的角色中运行。 |
|        | RUNNING_PROMOTED`{.literal} |                             |
|        |                             | \* 如果意外，则类型：软     |
+--------+-----------------------------+-----------------------------+
| 9      | `OCF                        | \*                          |
|        | _FAILED_PROMOTED`{.literal} | 资源是（或可                |
|        |                             | 能）在提升角色中，但失败。  |
|        |                             |                             |
|        |                             | \* 类型： soft              |
|        |                             |                             |
|        |                             | \*                          |
|        |                             | 资源将被降级、停止，然      |
|        |                             | 后再次启动（并可能升级）。  |
+--------+-----------------------------+-----------------------------+
| 190    |                             | \*（RHEL 8.4                |
|        |                             | 及更新的版本）该服务被发    |
|        |                             | 现正确活跃，但在这样的情况  |
|        |                             | 下，未来故障的可能性更大。  |
+--------+-----------------------------+-----------------------------+
| 191    |                             | \*（RHEL 8.4                |
|        |                             | 及更新的版本）资源代理支持  |
|        |                             | 角色，且该服务在提升角色中  |
|        |                             | 被正确激活，但在这种情况下  |
|        |                             | ，以后的故障的可能性更大。  |
+--------+-----------------------------+-----------------------------+
| 其他   | 不适用                      | 自定义错误码.               |
+--------+-----------------------------+-----------------------------+
:::
:::
:::
[]{#ref_ibmz-configuring-and-managing-high-availability-clusters.html}
::: chapter
::: titlepage
# []{#ref_ibmz-configuring-and-managing-high-availability-clusters.html#ref_ibmz-configuring-and-managing-high-availability-clusters}第 33 章 使用 IBM z/VM 实例将红帽高可用性集群配置为集群成员 {.title}
:::
红帽提供了在 z/VM
虚拟机上设计、配置和管理红帽高可用性群集时会有用的多篇文章。
::: itemizedlist
-   [RHEL 高可用性集群设计指南 - IBM z/VM
    实例作为集群成员](https://access.redhat.com/articles/1543363){.link}
-   [RHEL 高可用性集群的管理程序 - 为 RHEL 7 IBM z Systems 集群成员使用
    fence_zvmip 配置 z/VM SMAPI
    隔离](https://access.redhat.com/articles/3331981){.link}
-   [IBM z Systems 上的 RHEL 高可用性集群节点每天午夜会出现
    STONITH-device
    超时的情况](https://access.redhat.com/solutions/3555071){.link}
-   [RHEL 高可用性集群的管理程序 - 准备 dasd 存储设备，供 IBM z
    系统成员集群使用](https://access.redhat.com/articles/3332491){.link}
:::
在设计红帽高可用性集群时，您可能还会发现以下文章很有用：
::: itemizedlist
-   [RHEL
    高可用性集群的支持政策](https://access.redhat.com/articles/2912891){.link}
-   [探索 RHEL 高可用性集群的概念 -
    隔离/STONITH](https://access.redhat.com/articles/3099541){.link}
:::
:::