## Page 211
·196°
要使用221端口，在Port中更改即可，如图11-5所示。
使用了默认的21端口，但某公司规定FTP一定要用221端口，那么在侦测FTP服务的时候就
子网掩码：127.0.0.1/16，对IPv6可以使用“/128"。
规则会对于127.0.0.1到127.0.0.101的每一个IP进行检查。除了这种方式，Zabbix还支持使用
Zabbix监控系统深度实践
（3）Checks：针对每个IP检查的服务，每一个服务还可以调整端口侦测的范围，比如FTP
（2）Delay（in sec）：规则检查的频率。
（1）IP range：IP地址的范围。在表示范围时，使用“-”，比如127.0.0.1-101就表示这个
在DiscoveryRule的配置中，需要解释以下几个参数。
这一节中会对 Discovery Rule的配置和 Discovery Action 的配置进行详细说明。
接下来 Operation 的配置如图 11-4所示。
在Action的配置中，Condition 配置如图11-3所示。
Action operations
Newcondition
Conditions
Add to host groups:FTPServers
Details
Add
Discoveryrule
(A)
Label Name
New
Discovery check=FTPDiscoveryRule:FTPRemove
Event sourceDiscovery
图11-4
图11-3
图11-2
Createaction
Action
Edit Remove
Action
Select
---
## Page 212
的Event source 选择“Discovery”，然后单击“Create action”来创建Action，如图11-7所示。
以后的Action。配置和普通的Action类似，我们到“Configuration”→“Actions”中，右上角
碰到相同的system.uname的设备时会跳过。
备的时候就会跳过。当默认选择为IP时，假设127.0.0.1这个IP已经检查过了，那么在同一次
SNMP 相关或者是Zabbix agent，那么这里就会有不同的选择，如图11-6所示。
么数据。这个配置很有用，比如可以根据返回值的不同去执行不同的操作——如果Hostname
参数需要配置—“Key”。在进行这个检查时，会有一个返回值，“Key”就是配置需要返回什
在前面我们已经配置好了Discovery Rule，那么光有规则没用，还要配置触发了这个规则
它表示的意思是一旦有两个设备有一样的“设备唯一标识”，那么Zabix在检查后一个设
（4）Device uniqueness criteria：设备唯一标识，默认是使用IP。如果在Checks 中选择了
如果在Check type 中选择了“Zabbix agent"，那么除了可以配置端口外，还有一个强制的
Deviceuniquenesscriteria
Checks
EventsourceDiscovery
Zabbix agent"system.uname"Edit Remove
SNMPv1agent"2"
IPaddress
New
AddCancel
Portrange2221
Checktype
图11-7
图11-6
图11-5
FTP
Create action
EditRemove
第11章Discovery
●197°
---
## Page 213
198°
提供了下面这几种Action，如图11-9所示。
触发后的动作也是和Discovery相关。
Zabbix监控系统深度实践
对于Discovery rule类型的Action，我们需要进行的动作和普通的Action稍有不同，Zabbix
61
 Servicetype：服务的类型。
 Service port：针对服务的 rule 是否是某个端口的。
Received value：从Agent收到的值是否满足一定条件。
Proxy：触发的 Host 是不是某个Proxy监控的（比如有时我们的需求是每一个Proxy监控
Host IP：Discovery Rule的 Host 的 IP的范围。
 Discovery rule ：特定的 Discovery Rule。
Discovery object：选择触发Action的DiscoveryRule的对象是设备，还是服务（下略“选
 Discovery check：选择触发 Action 的特定 Discovery Rule中的某一项检查。
触发Action 的条件有下面几种，如图 11-8所示。
Action 的配置和基于 Triger 的 Action 类似，区别是触发 Action 的条件是和 Discovery 相关，
Uptime/Downtime：对于“Host Up”和“Service Up”来说的持续时间是否满足一定条件。
择触发Action的”字样）。
配置要“HostDown”持续一段时间才触发。
比如当网络波动时，可能会突然“HostDown”，
ve
Uptime/Downtime
Service type
Service port
Receivedvalue
Proxy
HostIP
Discovery status
Discoveryrule
Discoveryobject
Discovery check
Discoverycheck
图11-8
，但我们不想Action这么敏感，可能需要
200
---
## Page 214
是我们在这台服务器的 Hosthame。如果在 zabbix_agentd.conf 中设置了Hosthname 属性，那么就
一个参数—ServerActive，就是配置往哪个IP发送数据的。添加到Zabbix监控后的Hostname
CMDB（中央管理数据库）来完成，即在服务器上架时，就自动调用 spider.py加入监控。
个弊端，它不能自动去发现需要添加的服务器，一定要输入IP才行。在后来，这个工作才由
服务），按照规则加入规定的模板进行监控，从而使我们能做到一键添加监控。但这个工具有
时候，是使用了一个叫做 spider.py 的工具，它会根据目标服务器上存在什么服务（比如Redis
配置的Action进行对应的操作，比如添加模板之类。
在工作的这些设备自动加人Zabbix监控，免去了手工添加服务器的操作。
11.4存活Agent自动加入监控
笔者认为这是个非常棒的功能。在PPTV的工作中，我们在添加一台服务器进入Zabbix的
既然需要 Zabbix Agent 发送数据，那么必须要告诉它往哪里发。在 zabbix_agentd.conf 中有
ZabbixAgent 会向 Zabbix Server 发送一些数据，Zabbix Server 接收到这些数据以后，会根据
（2）Zabbix Server收到数据，调用对应的Action进行操作。
（1）Zabbix Agent 向 Zabbix Server 发送数据。
前面提到了Agent 自动加入监控的工作原理，它是由下面几个步骤组成的。
这些选项的意思比较容易理解，从字面意思即可看出，这里就不赘述了。
Operation details
Add Cancel
Default message
Sendonlyto
Send to Users
SendtoUsergroups
Operationtype
Disable host
Addhost
图11-9
endmess
Action
第11章Discovery
·199°
---
## Page 215
·200
是针对服务器上设备的自动发现。在Zabbix2.2中，支持服务器上以下这些部件的自动发现。
不重要而被称为“低层次的”，而是因为相对之前提到的服务器的自动发现，low-level discovery
个数据发送给Zabbix server，并且设置不同的Action，可以进行如下操作。
起发送给Zabbix Server。需要配置的是以下两个参数。
Action中对这些情况分别对待。
能还要不同的 IDC 机房有不同的监控模板。这时需要向 Zabbix server 发送更多的信息才能在
在添加监控时，往往希望能根据 Zabbix Agent上运行的不同程序加人不同的监控，除了这个可
会以此为准。
Zabbix监控系统深度实践
low-level discovery 的意思是“低层次的自动发现”，简称 ld。lld并不是因为功能简单或者
在 zabbix_agentd.conf 中，可以定义一些数据，在Zabbix Agent 发送数据的时候会将这些一
（2）网卡
（1）文件系统
（1）设置HostMetadata，比如“HostMetadata=Dell Shanghai”。
（1）HostMetadata：一段用户自定义的字符串。
ZabbixAgent 向 Zabbix Server发送的信息是它的 Hostname，其实单单这个数据是不够的。
这样就能一次发送多个数据了。
（2）在Action 中进行如图11-10所示的设置。
如果想一次传递多个数据怎么办呢？有个剑走偏锋的方法，比如想将服务器品牌和省份两
这两个参数只会生效一个，HostMetadata优先生效。
（2）HostMetadataltem：使用一个Item的值作为发送给Zabbix server的metadata
E
Label
Hostmetadata like Dell
Hostmetadata likeShanghal
Name
图11-10
Remove
Remov
Action
---
## Page 216
就是执行 lld 的 Item key。单击“Name”按钮进入 lld 的基本设置，如图 11-11 所示。
和Host 原型，因为作为例子的 lld 没有Host 原型，所以笔者会在例子后面单独介绍它。“Key
们想要看的 ld。
discovery.
lld就能很清楚地了解了。我选的是监控Linux的Template OS Linux模板中的Mounted filesystem
databasemonitoritem parameters。
卡的监控就可以是 net.if.out[#IFNAME}]。支持在下面这些地方使用宏：
定在宏上。定义 Triggers 或者 Items的时候使用这些宏来代替变量名就行了。针对侦测到的网
由 lld控制。
它会返回一些键值对，如“{#IFNAME)”－“lo"，和“[#IFNAME)”－“ethO”。这里宏的名称
据,lld的Item返回的是一个 JSON对象,其中包含了侦测到的部件列表。以 net.if.discovery为例，
于 Template或者Host 的。一个low-level discovery由以下两部分组成。
Discovery 的地方找low-level discovery了。大家应该是找不到的，因为 low-level discovery 是基
们被称为 Item 原型、Trigger 原型和 Graph 原型。
在显示的界面中，
单击模板后面的“Discovery”按钮进人 Template OS Linux 的 lld 界面，接下来可以看到我
（1） Item 原型的 name、key、SNMP OIDs、calculated item formulas、SSH and Telnet scripts、
lld会发现很多不同的部件，比如多块网卡，这些变量（网卡的名称，etho，eth1等）会绑
low-level discovery 的Item比较特殊，普通的 Item返回的可能是数字、字符串等的监控数
在前面已经了解了Discovery的运行方式和配置方法，有的同学可能已经去之前定义
（2）基于Item创建的Triggers和Graphs。
（1）探测部件（文件系统或者网卡）的Item，比如 net.if.discovery。
Zabbix 支持针对这三种自动发现来配套自动添加 Items、Triggers 和 Graphs 等，在 lld 中它
下面看看Zabbix自带的一个Template的侦测文件系统的lld。在学习这个例子后，大家对
(3）Graph原型的names。
（3）SNMP OIDs
一行里除了 lld 的名字外，显示了 Item 原型、Trigger 原型、Graph 原型
第11章Discovery
·201
---
## Page 217
·202°
它对#FSTYPE设置了过滤。过滤条件如图11-12所示。
合一些条件。这里所说的条件,在“Administration”→“General”的Regular expressions 中配置的，
fsdiscovery返回的JSON是这样的：
不用的部件禁用。注意，这里设置为0，并不是永远不停止，而是立刻删除。
测到了，那么这个时间会顺延。设置这个参数的目的是当服务器上的部件发生变化时，能够将
设置为10，那么在侦测到一块磁盘后的原型会连续监控10天，如果在10天内这块盘还被侦
Zabbix监控系统深度实践
1>~(btrfs|ext2|ext3|ext4ljfs|reiser|xfs|ffs|ufsljfsljfs2|vxfs|hfs|ntfs|fat32|zfs)$[Result isTRUE]
（4）Filter：lld的 Item 会返回JSON 对象，其中只有一部分是我们需要的。比如，vfs.
而你只想要监控ext3的，那么就需要对#FSTYPE 进行过滤，简单来说，需要#FSTYPE符
（3）Keep lost resources period (in days)：lld 侦测到的新部件的各种原型保留多少天。比如
（2）Key：和配置Item时的Key含义一致。
（1）Type：和配置Item时的Type的含义一致。
其中,
Keep lostresources period(in days)
Update interval (in sec)
Newflexible interval
Flexible intervals
Description
SaveCloneDeleteCancel
Enabled
Fiter Macro{#FSTYPE)Regexp@File systemsfordisc
Type
am
Interval(in sec)50Period1-7,00:00-24:00Add
No flexible intervals defined.
Interval
vfs.fs.discovery
Zabbix agent
3600
图11-12
图11-11
Period
Action
---
## Page 218
Trigger 原型和Graph 原型都是类似的情况。
的地方用了形如(#FSNAME}的宏来替代lId发现的部件的变量。比如(#FSNAME})就是磁盘路径。
件系统创建items。我们接着看这个lld 的 item 原型是怎么建立的。如图 11-13所示。
单击Groups、
前面介绍的例子没有讲 Host原型，可以自己新建一个试试，如图11-14所示。
从图11-12中可以发现，Item原型的配置和普通的 Item是差不多的，唯一不同的就是有
lld的创建已经完成，至此，ld能够返回需要的文件系统了，
这里只会返回符合条件的文件系统。
、Templates、
History storageperiod(indays)
Update interval (in sec)
New flexible interval Interval in sec)50Period1-7,00:00-24:00Add
Use custommultiplier
Type of information
New application
Flexibleintervals
、Host Inventory 会发现和普通的新建 Host 是一样的。
Description
Applications
Storevalue
Datatype
Enabled
Units
Key
Numeric(unsianed）
Zabbix aqent
Asis
Asis
Noflexibleintervalsdefined.
Interval
Decimal
Vfs.fs.Size[{#FSNAME},free]
Freediskspace
365
71
图11-13
Period
Action
show
Lvalue
Select
-下一步应该是根据返回的文
ma
第11章Discovery
·203°
---
## Page 219
·204°
lld的Item，只需要返回值符合规范即可。返回的JSON需要有一些键值对，具体格式如下。
行过滤。将需要的部件信息根据预先定义的原型，新建一些 Items、Triggers 等。
Zabbix监控系统深度实践
"data":[
Zabbix内置了一些 lld的 Item，比如 vfs.fs.discovery 和 net.if.discovery。其实还可以自己写
“{#FSNAME)”:”\/”
综上可知：lld从 Zabbix agent 中获取一些部件的信息，并根据 lld的需要，对这些信息进
“{#FSNAME)”
“(#FSNAME}”
“(#FSNAME)”
“{#FSNAME)"
“{#FSNAME)"
“{#FSNAME}"
“{#FSNAME)”
“{#FSNAME}”
“{#FSNAME)"
“{#FSNAME}"
“{#FSNAME)”:”\/sys"
“{#FSNAME}
Iemplatelist Template:Temrlate OS LinuxDiscoverylistDiscovery:Mountedf
：”
:"\/var"