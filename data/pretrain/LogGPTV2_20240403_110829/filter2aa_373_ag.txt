IIS文件名和目录名等等，极大地方便了渗透测试人员的使用。
第八章如何使用BurpIntruder
87
运行时文件（Runtimefile）——指定文件，作为相对应Payload位置上的Payload列表。
其设置界面如下图：
当我们如上图所示，指定Payloadset的位置1使用的Payload类型为Runtimefile时，下方
的PayloadOptions将自动改变为文件选择按钮和输入框，当我们点击【selectfile】选择
文件时，将弹出图中所示的对话框，选择指定的Payload文件。运行时，BurpIntruder将
读取文件的每一行作为一个Payload。
自定义迭代器（Customiterator）——这是一款功能强大的Payload，它共有8个占位，
每一个占位可以指定简单列表的Payload类型，然后根据占位的多少，与每一个简单列表
的Payload进行笛卡尔积，生成最终的Payload列表。例如，某个参数的值格式是
username@@password，则设置此Payload的步骤是：位置1，选择Usernames
第八章如何使用BurpIntruder
88
接着，指定位
置2，输入值@@
最后指定位置3，选择Passwords
第八章如何使用BurpIntruder
89
当我们开始攻击时，生成的Payload值如图所示
字符串替换（Charactersubstitution）——顾名思义，此种Payload的类型是对预定义的
字符串进行替换后生成新的Payload。比如说，预定义字符串为ABCD，按照下图的替换
规则设置后，将对AB的值进行枚举后生成新的Payload。
第八章如何使用BurpIntruder
90
生
成的Payload如下图所示，分别替换了上图中的a和b的值为4与8
第八章如何使用BurpIntruder
91
大小写替换（Casemodification）——对预定义的字符串，按照大小写规则，进行替
换。比如说，预定义的字符串为PeterWiener，则按照下图的设置后，会生成新的
Payload。
生成的Payload如下
第八章如何使用BurpIntruder
92
生成规则由上而下依次是：Nochange（不改变，使用原始字符串）、Tolower
case（转为小写字母）、Touppercase（转为大写字母）、ToPropername（首字母大
写，其他小写）、ToProperName（首字母大写，其他不改变），在实际使用中，可以
根据自己的使用规则进行勾选设置。
递归grep（Recursivegrep）——此Payload类型主要使用于从服务器端提取有效数据的
场景，需要先从服务器的响应中提取数据作为Payload，然后替换Payload的位置，进行
攻击。它的数据来源了原始的响应消息，基于原始响应，在Payload的可选项设置
（Options）中配置Grep规则，然后根据grep去提取数据才能发生攻击。比如，我在
grepextract中设置取服务器端的EagleId作为新的Payload值。
点击上图的【OK】按钮之后，完成了Payload的设置。
第八章如何使用BurpIntruder
93
当我发起攻击时，Burp会对每一次响应的消息进行分析，如果提取到了EagleId的值，则
作为Payload再发生一次请求。操作图如下：
上图中请求序号为偶数的消息的Payload都是上一次服务器端响应的报文中的EagleId的
值。
第八章如何使用BurpIntruder
94
不合法的Unicode编码（IllegalUnicode）——在payloads里用指定的不合法Unicode编
码替换字符本身，从这些Payload列表里产生出一个或者多个有效负荷。在尝试回避基于
模式匹配的输入验证时，这个有效负荷会有用的，例如，在防御目录遍历攻击时../和..序
列的期望编码的匹配。其配置界面如下：
上图中的配置选项主要用来控制不合法编码的生成，各项的含义如下：maximum
overlongUTF-8lengthUnicode编码允许最多使用6字节表示一个字符。使用一种类型
就可以正确地表示出(0x00-0x7F)BasicASCII字符。然而，使用多字节的Unicode方案
也能表示出它们(如，”overlong”编码)。下拉菜单用来指定是否使用超长编码，以及应该
设定的最大使用长度。IllegalUTF-8continuationbytes当选择的最大超长UTF-8长
度为2字节以上，这个选项是可用的。DoillegalUTF-8当使用多字节编码一个字符
时，第一个字节后面的字节应该用10XXXXXX这样的二进制格式，来指出后续的字节。
然而，第一个字节里最有意义的位会指出后面还有多少后续字节。因此，Unicode编码
例程会安全地忽略掉后续字节的前2位。这就意味着每个后续字节可能有3个非法变
种，格式为00XXXXXX，01XXXXXX和11XXXXXX。如果选中这个选项，则非法
Unicode有效负荷源会为每个后续字节生成3个附加编码。Maximizepermutationsin
multi-byteencodings如果选择的最大超长UTF-8长度为3字节以上，并且选中”
illegalUTF-8”这个选项可用。如果”Maximizepermutationsinmulti-byteencodings”没被
选中，则在生产非法变种时，不合法Unicode有效负荷源会按顺序处理每个后续字节，
为每个后续字节产生3个非法变种，并且其他的后续字节不会改变。如果”Maximize
permutationsinmulti-byteencodings”被选中了，不合法的Unicode有效负荷源会为后续
字节生成所有的非法变种排序。如，多个后续字节会同时被修改。在目标系统上回避高
级模式匹配控制时，这个功能就会很有用。Illegalhex这个选择基本上一直可用。当使
用超长编码和后续字节的非法变种(如果选中)生成非法编码项列表时，通过修改由此产生
的十六进制编码可能会迷惑到某种模式匹配控制。十六进制编码使用字符A—F代表十进
制10—15的值。然而有些十六进制编码会把G解释为16，H为17，等等。因此0x1G
会被解释为32。另外，如果非法的十六进制字符使用在一个2位数的十六进制编码的第
一个位置，则由此产生的编码就会溢出单个字节的大小，并且有些十六进制编码只使用
了结果数字的后8个有效位，因此0x1G会被解码为257，而那时会被解释为1。每个合
第八章如何使用BurpIntruder
95
法的2位数的十六进制编码有4—6种相关的非法十六进制表示，如果使用的是上面的编
码，则这些表示会被解释为同一种十六进制编码。如果”illegalhex”被选中，则非法
Unicode有效负荷源会在非法编码项列表里，生成每个字节的所有可能的非法十六进制
编码。Maximizepermutationsinmulti-byteencodings如果选中的最大超长UTF-8
长度为2字节以上并且“illegalhex”也被选中，则这个选项可用。如果Maximize
permutationsinmulti-byteencodings”没被选中，在生成非法十六进制编码时，非法
Unicode有效负荷源会按顺序处理每个字节。对于每个字节，会生成4—6个非法十六进
制编码，其他的字节不变。如果Maximizepermutationsinmulti-byteencodings”被选
中，则非法Unicode有效负荷源会为所有的字节，生成非法十六进制的所有排序。如，
多个字节会被同时修改。在目标系统上回避高级模式匹配控制时，这个功能会非常有
用。add%prefix如果选中这个选项，在产生的有效负荷里的每个2位数十六进制编码
前面，都会插入一个%符号。Uselowercasealphacharacters这个选项决定了是否在
十六进制编码里使用大小写字母。Totalencodings这个选项为会产生的非法编码数量
放置了一个上界，如果大量使用超长编码或者选中了最大列表，这个选项会很有用，因
为那会生成大量的非法编码。Match/replaceinlistitems这个选项用户控制Payload
列表中的字符串，它是由匹配字符（Matchcharacter）和替换字符编码（Replacewith
encodingsof）来成对的控制Payload的生成。
当攻击执行时，这个有效负荷源会迭代所有预设项列表，在非法编码集合里，每个预设
项替换每个项里的指定字符的所有实例。
字符块（Characterblocks）——这种类型的Payload是指使用一个给出的输入字符串，
根据指定的设置产生指定大小的字符块，表现形式为生成指定长度的字符串。它通常使
用了边界测试或缓冲区溢出。
第八章如何使用BurpIntruder
96
Basestring是指设置原始字符串，Minlength是指Payload的最小长度，Maxlength是指
Payload的最大长度，Step是指生成Payload时的步长。如上图的配置后，生成的Payload
如下图所示：
数字类型（Number）——这种类型的Payload是指根据配置，生成一系列的数字作为
Payload。它的设置界面如下：
Type表示使用序列还是随机数，From表示从什么数字开始，To表示到什么数字截
止，Step表示步长是多少，如果是随机数，则Howmany被激活，表示一共生成多少个
第八章如何使用BurpIntruder
97
随机数。Base表示数字使用十进制还是十六进制形式，Minintegerdigits表示最小的整
数是多少，Maxintegerdigits表示最大的整数是多少，如果是10进制，则Minfraction
digits表示小数点后最少几位数，Maxfractiondigits表示小数点后最多几位数。
日期类型（Dates）——这种类型的Payload是指根据配置，生成一系列的日期。界面如
下
其
设置选项比较简单，没有什么特别复杂的，不再赘述。至于日期格式，可以选择Burp自
己提供的样例格式，也可以自定义，自定义的时候，格式的填写形式如下表所示|格式|
样例||--------|--------||E|Sat||EEEE|Saturday||d|7||dd|07||M|6||MM|06||
MMM|Jun||MMMM|June||yy|16||yyyy|2016|
暴力字典（Bruteforcer）——此类Payload生成包含一个指定的字符集的所有排列特定长
度的有效载荷，通常用于枚举字典的生成，其设置界面如下：
Characterset表示生成字典的数据集，从此数据集中抽取字符进行生成。Minlength表
示生成Payload的最小长度，Maxlength表示生成Payload的最大长度。
空类型（Nullpayloads）——这种负载类型产生的Payload，其值是一个空字符串。在攻
击时，需要同样的请求反复被执行，在没有任何修改原始请求的场景下此Payload是非常
有用的。它可用于各种攻击，例如cookie的序列分析、应用层Dos、或保活会话令牌是在
其它的间歇试验中使用。
第八章如何使用BurpIntruder
98
在配置Payload生成方式时，它有两个选项，我们可以指定生成（Generate）多少
Payload，也可以设置为一直持续攻击（Continueindefinitely）
字符frobber（Characterfrobber）——这种类型的Payload的生成规律是：依次修改指定
字符串在每个字符位置的值，每次都是在原字符上递增一个该字符的ASCII码。它通常使
用于测试系统使用了复杂的会话令牌的部件来跟踪会话状态，当修改会话令牌中的单个
字符的值之后，您的会话还是进行了处理，那么很可能是这个令牌实际上没有被用来追
踪您的会话。其配置界面如图：
执行后生成的Payload如下图所示：
第八章如何使用BurpIntruder
99
Bit翻转（Bitflipper）——这种类型的Payload的生成规律是：对预设的Payload原始值，
按照比特位，依次进行修改。它的设置界面如下图：
其设置选项主要有：Operateon指定是对Payload位置的原始数据进行Bit翻转还是指定
值进行Bit翻转，Formatoforiginaldata是指是否对原始数据的文本意义进行操作，还
是应该把它当作ASCII十六进制，Selectbitstoflip是指选择翻转的Bit位置。您可以配
置基于文本意义进行操作，或基于ASCII十六进制字符串进行翻转。例如，如果原始值
是“ab”，基于文本意义的翻转结果是：
`b
cb
eb
ib
qb
Ab
!b
¡b
ac
a`
af
aj
ar
aB
a"
a¢
如果是基于ASCII十六进制字符串进行翻转，则结果是：
第八章如何使用BurpIntruder
100
aa