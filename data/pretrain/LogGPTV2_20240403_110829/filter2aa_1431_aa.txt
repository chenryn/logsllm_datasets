从开发到漏洞挖掘的角色转换
王纬
2020-06-05
关于我
• ID: Proteas
– Weibo: @Proteas
– Twitter: @ProteasWang
• 3 年 Windows C++ 开发经验。
• 5 年 iOS App 开发经验。
• 5 年 iOS & macOS 漏洞挖掘经验。
• 目前处于技术理想主义与技术现实主义之间。
主要内容
• 背景与约束
• 漏洞挖掘与利用
• 为什么要转漏洞挖掘
• 如何转到漏洞挖掘
• 结语
背景与约束
• 每个人眼里都有一个世界。
• 每个人都有自己的局限性。
• 经验是不可传承的，
• 每个人都有属于自己的路，
• 但仍希望本文能对你有所帮助。
背景与约束
• 二进制方面的漏洞挖掘与利用。
• 领域与目标：默认指 macOS/iOS。
• 面向：开发人员。
漏洞挖掘与利用 – 挖掘
• 漏洞挖掘研究的是什么？
• 研究的是可以用于突破安全边界的编程错误。
– 识别编程错误。
– 触发编程错误的方法。
– 自动、高效发现编程错误的方法。
•
本文中的编程错误指：可以用于突破安全边界的编程错误。
漏洞挖掘与利用 – 挖掘
• 大部分编程错误跟“信任”有关系，
• 从广义的角度说，
• 漏洞挖掘研究的是：信任与欺骗。
漏洞挖掘与利用 – 利用
• 漏洞利用研究的是：控制与转化。
• 下面是我在日报里写的一句话，
• 编写 iOS 内核利用的过程实际是：
– 以初始错误类型为起点，
– 以内核空间任意地址读写为终点，
– 不断提升控制内核数据能力的过程。
漏洞挖掘与利用 – 利用
• 挖掘与利用所依赖的知识有共性，
• 但是差别很大，
– 待处理的问题
– 处理问题时的思维模式
• 个人认为这是两个不同的方向。
• 相对于挖掘，在没有公开套路的情况下，
• 利用更具创造性、艺术性。
漏洞挖掘与利用 – 思维模式
• 下图是 Minizip 库的解压缩接口的截图。
漏洞挖掘与利用 – 思维模式
漏洞挖掘与利用 – 思维模式
• 开发人员关注什么？
• 大部分关注的是：接口如何使用。
• 一部分会关注：
– 库的设计
– 库内部使用的算法。
• 这跟我们所接受的专业训练有关系。
漏洞挖掘与利用 – 思维模式
• 漏洞挖掘人员关注什么？
• 攻击面，即：哪些数据是攻击者可控的。
• 库内部的实现：路径穿越，符号问题，溢出，内存操作等。
• 也会关注接口：
– 主要看接口是否清晰、易用，
– 是否容易让开发者犯错。
漏洞挖掘与利用 – 思维模式
• 开发：直接性。
– 看到的是接口，关注的也是接口。
• 漏洞挖掘与利用：间接性。
– 看到的是接口，
– 关注的是数据对内部实现的影响。
– 例子：内核利用。
漏洞挖掘与利用 – 对抗
• 开发者与厂商的利益是一致的，
• 大家共处一个生态。
• 本质上，漏洞挖掘与厂商处于对抗状态。
– 如果没有漏洞挖掘人员，
– 厂商可以降低数量可观的成本。
• 漏洞挖掘的同行之间：撞洞。
漏洞挖掘与利用 – 不确定性
• 开发人员及软件工程：
– 为了保证确定性，
– 追求的也是确定性。
• 漏洞挖掘与利用领域涉及不确定性，
• 尤其是当前的漏洞利用领域。
• 这会让我们感觉很不舒服、不可靠。
漏洞挖掘与利用 – 支撑技术
• 开发领域的一些调侃：
– 面向 Google 编程。
– 面向 Github 编程。
– 面向 QQ 群编程。
• 这些在漏洞挖掘领域基本不存在，
• 遇到的大部分问题都需要自己解决。
漏洞挖掘与利用 – 工程化程度
• 工程化是为了保证结果，
• 粗暴地讲就是：如果这么做，就可以得到结果。
• 先定义“结果”再来看工程化程度。
• 如果结果是：打下目标，那工程化程度非常低。
• 如果结果是：获得 CVE，那工程化程度中等偏下。
漏洞挖掘与利用 – 工程化程度
• 为什么要谈工程化程度？因为产出。
• 在开发人员的眼中应该不存在 0 产出的情况，
• 但在漏洞挖掘领域，结合具体的目标，
• 是可能存在 0 产出情况的。
• 为了避免这种情况，
• 需要持续不断的思考、总结、学习、对抗。
漏洞挖掘与利用 – 习惯失败
• 在大部分情况下，
• 开发人员在解决好不好的问题，
• 漏洞挖掘与利用人员在解决能不能的问题。
漏洞挖掘与利用 – 习惯失败
• 在实际的项目开发中，
• 每天都可以输出代码，
• 大部分需求都是可以实现的。
• 在针对有实际价值的目标的漏洞挖掘过程中，
• 基本不可能每天都发现漏洞，
• 所发现的漏洞大部分都不可利用。
• 所设计的利用方案，
• 很可能在某个环节上，被某个缓解措施阻止。
漏洞挖掘与利用 – 习惯失败
• 这种情况会对开发人员造成心理冲击，
• 如果内心不强大，很可能会放弃。
• 我们要习惯失败，但仍对目标保有渴望。
• 我们要在多次失败的情况下，
• 继续保持研究的节奏。
漏洞挖掘与利用 – 方法论
• 尖 à 专注
图片来源： http://m.6okok.com/wuqi/lenbingqi/6222.html
漏洞挖掘与利用 – 方法论
• 实战 à 实操
图片来源： https://zhuanlan.zhihu.com/p/34766047
漏洞挖掘与利用 – 价值观
• 开发领域，大家的价值观比较统一。
• 漏洞挖掘领域存在各种价值观：
– 打下目标。
– CVE 致谢的数量。
– 学术价值。
– ……
• 没有对错、好坏，都在推动这个行业向前发展。
为什么要转漏洞挖掘
• 兴趣所在。
• 挑战与快乐。
• 结果更好衡量：
– 数量
– 质量
• 可能，除了父母，
• 没有人真的会为我们的未来买单。
如何转到漏洞挖掘 – 学习方法
• 对于初学者，
• 个人不提倡“书单式”的学习。
• 个人鼓励“功利式”的学习。
• 学习知识是为了解决问题，
• 知识是为目的服务的。
如何转到漏洞挖掘 – Review
• 研究的是：编程错误。
• 最核心的方法论是：专注 + 实操。
如何转到漏洞挖掘 – 强化目的
• 目的是：寻找编程错误。
• 其它的都是为这个目的服务：
– 代码阅读能力。
– 静态分析能力。
– 动态分析能力。
– ……
• 不要本末倒置。
如何转到漏洞挖掘 – 强化目的
• 个人认为：
– 对于职业的漏洞挖掘人员，
– 针对编程错误的思考与训练，
– 应该每天都进行，
– 目的是把其变成一种“肌肉记忆”。
• 大家要记住目的，不要迷失在知识的海洋里。
如何转到漏洞挖掘 – 确定目标
• 由于对抗属性，首先需要确定目标。
• 目标不同，技战术也不同。
• 大家可以结合自己的背景与兴趣选择目标。