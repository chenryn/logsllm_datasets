将单个表扩展到多个表空间上。
能力。
数据库分区可以处于不同的服务器上，这样一来，大型的扫描可以使用多个服务器的处理
件的行才会被访问。
种技术，用于搜索具有特定维值的行的查询把所有其他分区排除在扫描之外，只有符合条
与添加一个新分区类似，您只需以和分区表相同的定义创建一个表，为之装入数据，
这种新的分区功能有很多优点，包括创建表的语法更简单。下面是一个简单的示例，
DB2V9还引入了一种新形式的分区，该特性被称为表分区（tablepartitioning)，它允许
类似地，数据库分区特性可以拆分一组表，使得一部分数据存放在一个数据在分区上。
关于表分区的详细介绍，请参见《DB2数据库性能调整和优化》中“第4章：数据库
表分区的另一个优点是，当您分离（detach）一个分区时，可以得到一个独立的表，这个
表压缩的方法是查看整个表，找到重复的字节字符串，将那些字符串存储在一个字典
3.表压缩
快速添加或删除数据范围
EVERYIMONTH）
ENDING('2006-12-31)
CREATE TABLE fact
(txn id char(7),purchase_date date,
FROM TABLE FACT NEW MONTH
ENDING'01-31-2007
STARTING01-01-2007
ALTER TABLE FACT TABLEATTACH PARTITION
PARTITION BY RANGE(purchase date)
IN tbsp1,tbsp2,tbsp3, tbsp4
第5章创建数据库对象
更多资源请访问www.ckook.c
171
---
## Page 197
172
db2insplenaeouuilename
db2 inspect rowcompestimate table nametable name results keep file_name
数。语法如下：
INSPECT命令有一个选项，通过该选项可以报告您决定压缩一个给定的表时可以节省的页
样很有好处，因为当卷入新的分区时，DB2能够适应数据的变化。
reorgtabletablenamekeepdictionary
将来您想运行一次常规的表重组，但是不想重建这个字典，那么可以运行命令：
入数据到表中或者为表装载数据时，都将遵从这个压缩字典，并压缩所有新的数据。如果
表（或者您想重建压缩字典）时，必须运行命令：
以压缩的重复字符串，并将其放入字典中。为此，可以使用reorg命令。第一次压缩一个
altertabletablenamecompresyes
createtable table_namecompress.yes.
中包含表中出现的重复的字符串。要将表设置成可以被压缩，可以使用：
的字符串（例如城市、州、人的姓名等），那么也可以将其压缩成一个单独的符号。
如果在一个列中有一个重复的子字符串，那么可以对它进行压缩。如果多个列中存在重复
优点是，DB2看到的是表中的所有数据以及完整的数据行一
中，然后用一个表示存储在字典中的实际数据的符号代替出现在表中的那些符号。其主要
循序渐进DB2-—DBA系统管理、运维与应用案例
要使用表压缩，首先必须对表进行设置，使之可以被压缩，然后必须生成字典，字典
然后可以运行命令：
每个表都有它自己的字典，这意味着对于每个分区，分区表都有一个单独的字典。这
如果您只是想看看能节省多少空间，而不想真正对表进行压缩，那么也行。现在，DB2
该命令将扫描表，创建字典，然后执行实际的表重组，从而压缩数据。此后，每当插
创建压缩字典
估计节省的空间
创建压缩字典可以使表能够被压缩。DB2需要扫描表中的数据，以发现表中出现的可
或
—而不只是重复的列值。例如，
更多资源请访问www.ckook.com
---
## Page 198
值。因此，在具有正确谓词的情况下，才可能对搜索分类。也可使用索引来获得已排序的
INDEX语句中指定了ALLOWREVERSESCANS参数，那么可以按升序和降序搜索这些
序检索行而不需要排序。
少了要从数据页读取的行数。
要少，尤其在表增大时更是如此。此外，可能不需要扫描整个索引。应用于索引的谓词减
化器选择索引扫描。索引文件一般较小，因此读取它所需的时间比读取整个表所需的时间
5.3.1
5.3
物理设计和逻辑设计”的内容。
过压缩可以节省的数据页的百分比。
每个索引条目包含一个搜索键值和一个指向包含该值的行的指针。如果在CREATE
如果对输出的排序需求可以与索引列相匹配，那么按列顺序扫描索引将允许按正确顺
将二进制输出文件转换成一个名为output_file_name的文本文件。该文件包含估计通
如果在SELECT语句中引用了索引列，并且优化器估计索引扫描比表扫描快，那么优
·确保一个或多个列中值的唯一性。
索引是表的一个或多个列的键值的有序列表。创建索引的原因有两个：
关于表压缩的详细介绍，请参见《DB2数据库性能调整和优化》中“第4章：数据库
（4）将剩下的数据装载到表中（这次的装载将遵从上述字典，并在装载的同时进行压缩）
（3）用resetdictionary重组表，以创建一个新的字典
（2）将示例数据装载到表中
(1）用compressyes创建表
如果从一个新表开始，那么可能需要：
对一个新表进行表压缩的步骤
提高对表进行的查询的性能。当执行查询想以更快的速度找到所需的列时，或要以
扫描可以更有效地访问表行。
来说，使用表扫描效率可能更高，但是对于只返回部分表行的查询而言，使用索引
长，因为表扫描需要顺序访问每个表行。虽然对于需要表中的大多数行的复杂查询
那么必须对SQL查询中引用的每个表执行表扫描。表越大，表扫描所花的时间越
索引的顺序显示查询结果时，DB2优化器选择使用索引。如果表上不存在索引，
索引优点
索引设计
第5章创建数据库对象
更多资源请访问www.ckook.com
173
---
## Page 199
助维护数据完整性。
维集群(MDC）表生成的块索引。
5.3.2
所以常规索引叫关系索引。
上的索引。在DB2V9之前关系索引就是索引，DB2V9中有XML索引，为了加以区分，
考虑多个索引给磁盘空间和处理时间带来的影响：
的排序。
而不必访问表本身。关于include索引我们下面有详细的讲解。
但是它们的数据包含在索引叶子中。这样的列有可能使优化器仅从索引获取所需要的信息，
行，使数据库管理器在从表中读取这些行之后不必对它们排序。
循序渐进DB2——DBA系统管理、运维与应用案例
尽管索引可显著缩短访问时间，但是它们也可给性能带来负面影响。在创建索引之前，
除搜索键值和行指针外，索引还可包含（include）列，这些列是索引行中的非索引列，
唯一索引是这样一种索引，它通过确保表中没有两个数据行具有完全相同的键值来帮
有5种类型的索引：唯一索引、非唯一索引、集群索引、非集群索引，以及系统为多
唯一索引和非唯一索引
关系索引是相对于XML索引而言的，所以关系索引就是常规索引，也就是通常意义
因此需要谨慎选择索引来满足应用程序的需要。
·每个索引都需要存储器或磁盘空间。准确的容量取决于表的大小以及关系索引中的
注意：
要查询的表上存在索引并不保证结果集已排序。只有ORDERBY子句能确保结果集
注意：
索引类型
这会增加编译时间。
命令上指定indexfreespaceMODIFIEDBY参数，以覆盖创建索引时使用的索引
LOAD实用程序重建任何现有的关系索引或追加至现有的关系索引。可在LOAD
PCTFREE。每个关系索引都有可能对SQL查询添加备用访问路径以供优化器考虑，
外的更新。对于更改索引键值的每个UPDATE操作，也是如此。
对一个表执行的每个INSERT或DELETE操作都需要对该表上的每个索引I进行额
列的大小和数目。
更多资源请访问www.ckook.com
---
## Page 200
入同一页中。如果对表进行了重组，那么会按照索引键的顺序将行插入数据页中。
中的出现顺序来将数据保存在数据页中。因此，数据库管理器将尝试把具有相似键的行插
页中的行。集群索引和非集群索引的区别在于：数据库管理器尝试按照相应的键在索引页
是对应于指向位于其他地方的数据的指针。图5-12是集群索引和非集群索引的示意图。
非集群索引。在某些关系数据库管理系统中，集群索引的叶子节点对应于实际数据，而不
于索引中的行的顺序。这就是为何给定表中只能存在一个集群索引，而表中可以存在多个
护频繁使用的数据值的排序顺序，这仅仅用于提高查询性能。
检索数据的性能。
整性以命名一部分）。除了强制数据值的唯一性以外，唯一索引还可用来提高查询处理期间
每当在索引中添加或更改键时就会强制唯一性（这包括插入、更新、装入、导入和设置完
如果该表包含具有重复键值的行，那么索引创建过程将失败。为表定义了唯一索引之后，
集群索引和非集群索引都只包含索引结构中的键和记录标识。记录标识始终指向数据
另一方面，非唯一索引不用于对与它们关联的表强制执行约束。相反，非唯一索引维
索引体系结构分为集群或非集群。集群索引是这样的索引：数据页中的行的顺序对应
集群索引和非集群索引
尝试为已经包含数据的表创建唯一索引时，将检查组成该索引的列中的值是否唯一
8139
口
20933945
134586
Roat Node
DataPage
图5-12集群索引和非集群索引
7586
口
20p395
RootNode
DataPage
口
口
第5章创建数据库对象
更多资源请访问www.ckook.com
面
175
---
## Page 201
176
深入介绍。
以显著地提高性能。这部分内容本书中不做详细讲解，我们会在《深入解析DB2》一书中
所示。
相反（或反向）顺序。此选项使您：
REVERSESCANS子句同时启用正向和反向索引I扫描，也就是说，按创建索引I时的顺序和
同样，如果唯一索引由多个列组成，那么值和空值的特定组合只能使用一次。
个空值视为与其他空值相同）。
不强制执行主键约束，因为它们允许空值（虽然空值表示未知值，但在建立索引时，会将一
用唯一索引和NOTNULL约束的组合来实现主键约束和唯一键约束。因此，唯一索引I本身
多次，从而极大地减慢扫描速度。
每行有可能是在不同页中的。除非缓冲池中有空间保存整个表，否则这会导致每页被访存
味着任何给定时间内都只需要表的一页位于缓冲池中。相反，如果表未集群，那么访存的
第一行，然后访存同一页上的每一行，在访存了该页的所有行之后，才移至下一页。这意
放顺序）。集群索引改善了以键的顺序扫描整张表的性能。这是因为首先扫描访存第一页的
循序渐进DB2——DBA系统管理、运维与应用案例
从上面的图5-13中我们可以看到，MDC索引相关的索引块是排列到一起的，所以可
因此，如果唯一索引由单个列组成，那么只允许一个空值，多个空值将违反唯一约束。
在我们创建MDC时，数据库会自动生成块（block)索引，它和常规行索引的区别如图5-13
●便于使用MIN和MAX函数
默认情况下，双向索引允许按正反两个方向进行扫描。CREATEINDEX语句的ALLOW
双向索引
了解主键和唯一键约束与唯一索引之间没有很大差别这一点很重要。数据库管理器使
通常，表中只有一个索引可以具有较高的集群度（因为实际的数据只可能有一种物理存
MDC块索引
如果指定了DISALLOWREVERSESCANS，那么不能反向扫描索引。
●消除余反向顺序索引
主键和唯一键约束与唯一索引之间的差别
不需要数据库管理器创建临时表来进行反向扫描
访存先前的键
更多资源请访问www.ckook.com
---
## Page 202
5.3.3
标准表的表和索引管理
索引结构
S
2
逻辑表视图
图5-14
876
4022
4020
图5-13MDC块索引与常规行索引的区别
52
402
D=
物理表视图
Row
标准表的逻辑表、
RID（记录标识）=页号4023，槽号2
记录和索引结构
图注
CRIDO
Block
数据页格式
38013400
页买
索引的逻辑视图
=Extent(block)
Index
KRIDT
用户记录
FSCR
保留为系统记录
KRID
blc
第5章
SRID
更多资源请访问www.
创建数据库对象
.Ck
---
## Page 203
RID的格式如图5-15所示。
确的槽号。一旦对记录指定了RID，在进行表重组之前，该RID便不会更改。数据页和
删除。在使用索引标识了RID之后，便可以使用该RID来到达正确的数据页以及该页上正
ridFlag的附加字段。该字段存储有关索引中密钥状态的信息，例如，此密钥是否标记为己
开始位置的字节位移。值为-1的条目与已删除的记录相对应。
槽目录。槽目录中的每一条目都与该页中的一个记录相对应。该条目本身是数据页中记录
据页，而不需要“扩展数据块映像页”（EMP）来进行映射。
记录标识（RID）使用相对表空间页号，而不是对象相对页号。这使索引扫描能够直接访问数
页上的项数不是固定的，但依赖于键的大小。对于DMS表空间中的表来说，索引页中的
这些记录映射下面每500个数据页（直到下一FSCR为止）上的可供新记录使用的可用空间
扩展数据块的一部分，依此类推。
（extent）大小是4，第0至3页是第一个扩展数据块的一部分；那么第4至7页就是第二个
这些数据页根据表空间的扩展数据块大小在逻辑上分组在一起。例如，如果扩展数据块
循序渐进DB2DBA系统管理、运维与应用案例
当将记录插入表时，将使用这部分可用的可用空间。
管理表。例如，在标准表中，每个第500个数据页上都有一个“空闲空间控制记录”（FSCR）
化。大多数页仅包含用户记录。但是，少数页包括特殊的内部记录，DB2使用这些记录来