NF
m
-
f
m/p
m
-
SF
m
-
f
m/p
m
-
45%*
65%*
-
p
-
p
SK VB HO
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
Table 5: Shaping detection results per ISP in our dataset, for six
popular apps: YouTube (YT), Netﬂix (NF), Spotify (SF), Skype
(SK), Viber (VB), and Google Hangout (HO). When shaping oc-
curs, the table shows the diﬀerence between average through-
put (%) we detected. A dash (-) indicates no diﬀerentiation, (f)
means IP addresses changed for each connection, (p) means a
“translucent” proxy changed connection behavior from the orig-
inal app behavior, and (m) indicates that a middlebox modiﬁed
content in ﬂight between client and server. *For the H2O network,
replays with random payload have better performance than VPN
and exposed replays, indicating a policy that favors non-video
HTTP over VPN and streaming video.
While attempting to detect diﬀerentiation, we identiﬁed
other interesting behavior that prevented us from identifying
shaping. For example, Boost transcodes YouTube video to
a fraction of the original quality, and then caches the result
for future requests. Other networks use proxies to change
TCP behavior. We found such devices to be pervasive in
mobile networks.
7. DISCUSSION
This paper focuses on detecting diﬀerentiation that im-
pacts application performance. While investigating shap-
ing, our technique revealed a number of other issues that
are beyond the scope of this paper.
Assigning blame. When diﬀerentiation is detected, we
generally assign blame to the network from where the test is
launched, i.e., the access network. While in theory it might
be caused by any network along the path between the ac-
cess network and our replay server, we expect that transit
networks will not have incentive to diﬀerentiate and we en-
sure that our replay hosting sites also do not diﬀerentiate
traﬃc. As part of future work, we will investigate how to
combine diﬀerentiation results from multiple vantage points
(e.g., using tomography) to identify cases when diﬀerenti-
ation is not caused by the access network, but rather an
intermediate network.
Diﬀerentiation against VPN traﬃc. A subtle chal-
lenge arises when recording traces of app-generated net-
work traﬃc over a production network: what happens when
recorded traﬃc is subject to diﬀerentiation (e.g., shaping)?
If the recorded and replayed traﬃc are both shaped, a na¨ıve
detector will indicate that the network has no diﬀerentiation.
One simple solution is to allow users to run traces captured
from a network of the same type (e.g., WiFi, 3G, LTE)
where we know the recorded traces were not subject to dif-
ferentiation (our current version of the app ships with traces
from diﬀerent applications recorded over a well-provisioned
network that does not shape traﬃc).
While this solves the problem, it does not tell us when
there is a problem in the ﬁrst place. For this, we need to
detect that the VPN traﬃc itself is subject to diﬀerentia-
249diﬀerent treatment, we can attempt to disguise replay traﬃc,
using diﬀerent servers, ports and control traﬃc techniques
(e.g., diﬀerent payload/port randomization scheme).
Data caps.
Some providers have “unlimited” data plans
with lower data rates after usage exceeds a certain cap. We
do not expect to detect this from a single user, but may be
able to identify it by combining results from multiple users
or by monitoring data usage via Android APIs.
8. CONCLUSION
We presented and evaluated a new tool for accurately de-
tecting diﬀerentiation using a VPN to record and replay
traﬃc generated by apps to improve transparency in mo-
bile networks. We found extensive use of middleboxes that
break end-to-end principles in mobile networks, and identi-
ﬁed their impact on applications.
From a network neutrality perspective, our ﬁndings are
concerning in part due to observed shaping policies and
third-party modiﬁcation of traﬃc, both of which are perva-
sive. There is little research into the impact of such devices,
and currently policymakers have essentially no guidance as
to how to regulate this behavior. As part of our ongoing
work, we are using a Web site to make our results public —
both to improve transparency for users and to guide future
policies. In addition, we are investigating how to ﬁngerprint
middleboxes in mobile networks and developing techniques
to understand their impacts on a wide range of applications.
Acknowledgements
We thank the anonymous reviewers for their helpful com-
ments. This research was partially supported in part by
NSF grants CNS-1054233, CNS-1318396, and CNS-1319019,
CNS-1350720, and a Google Faculty Research Award.
9. REFERENCES
[1] Experimenting with QUIC. http://blog.chromium.
org/2013/06/experimenting-with-quic.html.
[2] Neubot – the network neutrality bot.
http://www.neubot.org.
[3] V. Bashko, N. Melnikov, A. Sehgal, and
J. Schonwalder. Bonaﬁde: A traﬃc shaping detection
tool for mobile networks. In IFIP/IEEE International
Symposium on Integrated Network Management
(IM2013), 2013.
[4] D. Clark. Network neutrality: Words of power and
800-pound gorillas. International Journal of
Communication, 2007.
[5] W. Cui, V. Paxson, N. Weaver, and R. H. Katz.
Protocol-independent adaptive replay of application
dialog. In Proc. of NDSS, 2006.
[6] M. Dischinger, M. Marcon, S. Guha, K. P. Gummadi,
R. Mahajan, and S. Saroiu. Glasnost: Enabling end
users to detect traﬃc diﬀerentiation. In Proc. of
USENIX NSDI, 2010.
[7] FCC announces ”Measuring Mobile America”
program. http://www.fcc.gov/document/fcc-
announces-measuring-mobile-america-program.
[8] FCC. Order 10-201: Preserving the open internet.
Figure 11: Eﬀect of shaping on latency for a TCP stream. Shap-
ing at 1 Mbps exhibits expected queuing delays that identify the
size of the buﬀer (x=75 KB); however, shaping at a lower rate
(512 kbps) leads to bimodal RTTs largely due to TCP never ex-
iting slow start.
tion. If there exists at least one class of traﬃc that is not
shaped in our tests, then it will get higher performance out-
side the VPN tunnel compared to inside the tunnel. In this
case, there will be at least one case where tunneled perfor-
mance will be diﬀerent from non-tunneled. As a result, we
can reliably conclude that there is some kind of diﬀerentia-
tion9; however, we cannot yet directly attribute it to shaping
against a VPN.
One potential way to address this is to exploit the obser-
vation that popular shaping devices use token-bucket queues
to enforce ﬁxed-rate shaping. As shown in Fig. 11 (1 Mbps)
shaping devices exhibit a characteristic queueing delay evi-
dent when plotting bytes in ﬂight vs. RTT. If a traﬃc class
is subject to diﬀerentiation, we will observe increased delays
compared to a case that is not managed via a queue.
If indeed the control traﬃc is shaped, it limits our ability
to test other types of traﬃc for diﬀerentiation—this is true of
any diﬀerentiation detection approach. However, detection
of this behavior itself is important information; for example,
in the US even this behavior should be in violation of FCC
rules eﬀective June 12, 2015 [9].
Shaping conﬁgurations can have unintended conse-
quences for TCP.
In one sample conﬁguration already
used by an ISP (Fig. 11, 512 Kbps), we found that the shap-
ing rate was so low that it prevented TCP from ever exiting
slow start. Importantly, TCP increased its congestion win-
dow exponentially in time while the shaper’s queue drained
linearly in time, leading to substantial queuing and packet
loss.
This is problematic for two reasons. First, this policy
leads to wasted bandwidth at the network edge, which will
cost the ISP running the shaper. Second, it is unclear how
the user is being charged for this lost traﬃc.
If users are
billed based on bytes entering the network before hitting
the shaper, the ISP will over charge the user for packets that
were never delivered. Such policies, and their implications,
merit further investigation as part of a future study.
Evasion.
One of our goals is to improve transparency
for network management practices in cellular data networks.
ISPs wishing to avoid characterization may attempt to do
so by blocking VPN traﬃc or selectively changing policies
for our replay traﬃc.
If ISPs choose to block our traﬃc,
we can easily detect it and report this result to users and
policy makers. For cases where the traﬃc is selectively given
9More generally, we can draw the same conclusion if at least
one class of traﬃc is shaped diﬀerently from VPN traﬃc.
https://apps.fcc.gov/edocs_public/attachmatch/
FCC-10-201A1_Rcd.pdf, December 2010.
 0 0.2 0.4 0.6 0.8 1 1.2 1.4 0 20 40 60 80 100 120 140RTTBytes in flight (KB)1Mbps512Kbps250[9] FCC. Protecting and promoting the open internet.
[26] F. Sarkar. Prevention of bandwidth abuse of a
communications system, Jan. 9 2014. US Patent App.
14/025,213.
[27] Strongswan. www.strongswan.org.
[28] P. Svensson. Comcast blocks some internet traﬃc.
http://www.washingtonpost.com/wp-dyn/content/
article/2007/10/19/AR2007101900842.html,
October 2007.
[29] Switzerland network testing tool.
https://www.eff.org/pages/switzerland-network-
testing-tool.
[30] M. B. Tariq, M. Motiwala, N. Feamster, and
M. Ammar. Detecting network neutrality violations
with causal inference. In CoNEXT, 2009.
[31] N. Vallina-Rodriguez, S. Sundaresan, C. Kreibich,
N. Weaver, and V. Paxson. Beyond the radio:
Illuminating the higher layers of mobile networks. In
Proc. of MobiSys, 2015.
[32] N. Weaver, C. Kreibich, M. Dam, and V. Paxson.
Here Be Web Proxies. In Proc. PAM, 2014.
[33] N. Weaver, R. Sommer, and V. Paxson. Detecting
forged TCP reset packets. In Proc. of NDSS, 2009.
[34] X. Xu, Y. Jiang, T. Flach, E. Katz-Bassett,
D. Choﬀnes, and R. Govindan. Investigating
transparent web proxies in cellular networks. In Proc.
PAM, 2015.
[35] F. Zarinni, A. Chakraborty, V. Sekar, S. Das, and
P. Gill. A ﬁrst look at performance in mobile virtual
network operators. In Proc. of IMC, 2014.
[36] Y. Zhang, Z. M. Mao, and M. Zhang. Detecting
Traﬃc Diﬀerentiation in Backbone ISPs with
NetPolice. In Proc. of IMC, 2009.
[37] Z. Zhang, O. Mara, and K. Argyraki. Network
neutrality inference. In Proc. of ACM SIGCOMM,
2014.
https://www.federalregister.gov/articles/2015/
04/13/2015-07841/protecting-and-promoting-the-
open-internet, April 2015.
[10] G. Hasslinger and O. Hohlfeld. The Gilbert-Elliott
model for packet loss in real time services on the
Internet, 2008.
[11] S. Higginbotham. The Netﬂix–Comcast agreement
isn’t a network neutrality violation, but it is a
problem. http://gigaom.com/2014/02/23/the-
netflix-comcast-agreement-isnt-a-network-
neutrality-violation-but-it-is-a-problem/,
February 2014.
[12] J. Hui, K. Lau, A. Jain, A. Terzis, and J. Smith. How
YouTube performance is improved in T-Mobile
network. http://velocityconf.com/velocity2014/
public/schedule/detail/35350.
[13] P. Kanuparthy and C. Dovrolis. ShaperProbe:
end-to-end detection of ISP traﬃc shaping using
active methods. In Proc. of IMC, 2011.
[14] C. Kreibich, N. Weaver, B. Nechaev, and V. Paxson.
Netalyzr: Illuminating the edge network. In Proc. of
IMC, 2010.
[15] M. Luckie, A. Dhamdhere, D. Clark, B. Huﬀaker, and
k. claﬀy. Challenges in inferring internet interdomain
congestion. In Proc. of IMC, 2014.
[16] R. Mahajan, M. Zhang, L. Poole, and V. Pai.
Uncovering performance diﬀerences among backbone
ISPs with Netdiﬀ. In Proc. of USENIX NSDI, 2008.
[17] J. Mayer. How verizon’s advertising header works.
http://webpolicy.org/2014/10/24/how-verizons-
advertising-header-works/.
[18] Measurement Lab Consortium. Isp interconnection
and its impact on consumer internet performance.
http://www.measurementlab.net/blog/2014_
interconnection_report, October 2014.
[19] A. Nikravesh, H. Yao, S. Xu, D. R. Choﬀnes, and
Z. M. Mao. Mobilyzer: An open platform for
controllable mobile network measurements. In Proc. of
MobiSys, 2015.
[20] A. Norberg. uTorrent transport protocol.
http://www.bittorrent.org/beps/bep_0029.html.
[21] B. Obama. Net neutrality: President Obama’s plan for
a free and open internet.
http://www.whitehouse.gov/net-neutrality#
section-read-the-presidents-statement.
[22] A. Rao, J. Sherry, A. Legout, W. Dabbout,
A. Krishnamurthy, and D. Choﬀnes. Meddle:
Middleboxes for increased transparency and control of
mobile traﬃc. In Proc. of CoNEXT 2012 Student
Workshop, 2012.
[23] D. Rayburn. Cogent now admits they slowed down
netﬂix’s traﬃc, creating a fast lane & slow lane.
http://blog.streamingmedia.com/2014/11/cogent-
now-admits-slowed-netflixs-traffic-creating-
fast-lane-slow-lane.html, November 2014.
[24] C. Reis, S. D. Gribble, T. Kohno, and N. C. Weaver.
Detecting In-Flight Page Changes with Web
Tripwires. In Proc. of USENIX NSDI, 2008.
[25] Sandvine - intelligent broadband networks.
http://www.sandvine.com.
251