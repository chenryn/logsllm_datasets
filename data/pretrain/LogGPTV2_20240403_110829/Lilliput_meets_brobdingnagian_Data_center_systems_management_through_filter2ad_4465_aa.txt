title:Lilliput meets brobdingnagian: Data center systems management through
mobile devices
author:Saurabh Bagchi and
Fahad A. Arshad and
Jan S. Rellermeyer and
Thomas H. Osiecki and
Michael Kistler and
Ahmed Gheith
Lilliput meets Brobdingnagian: Data Center Systems Management through
Mobile Devices
Saurabh Bagchi1,2, Fahad Arshad1
1 Purdue University
Jan Rellermeyer2, Thomas Osiecki2, Michael Kistler2, Ahmed Gheith2
2 IBM Research Austin
Abstract
In this paper, we put forward the notion that systems
management for large masses of virtual machines in data
centers is going to be done differently in the short to
medium term future—through smart phones and through
controlled crowdsourcing to a variety of experts within an
organization, rather than dedicated system administrators
alone. We lay out the research and practitioner challenges
this model raises and give some preliminary solution
directions that are being developed, here at IBM and
elsewhere.
I. Introduction
Systems management of virtual machines and the vir-
tualization infrastructure (hypervisor, virtual LAN, etc.)
is a crucial element of running data centers. Such sys-
tems management has two broad elements within it—
monitoring for detecting any anomalies, be they security
failures, correctness failures, or performance problems;
and, then taking corrective action if any anomalous pat-
tern is detected. The monitoring is done at various levels
of the stack in the virtualized environment, from the
chassis-level (using an advanced management module on
the server), the hypervisor level, the networking level, and
all the way up to the application level. A plethora of such
monitoring tools exist, which together generate a wealth
of data about the target system. Then, the monitored
data is aggregated and visualized (through infrastructure
such as Splunk [1]), and system administrators inspect
this to determine if mitigation action needs to be taken.
There is an urgency in acting on monitored information
if it indicates that a failure is imminent or has already
happened and hence, control mechanisms have been de-
veloped, most rather application-speciﬁc.
In this paper, we hypothesize that a signiﬁcant change
is happening in the way such systems management is done
for virtualized environments and that the pace of change
will accelerate in the immediate future. The change is
in two dimensions — the ﬁrst dimension is the platform
that is being used for the management and the second
dimension, enabled by the ﬁrst, is the number of people
involved in the systems management activity. Regarding
the ﬁrst dimension, we see that it will become increas-
ingly convenient to perform these actions from mobile
devices. This trend is being driven by the continuing
increase in the penetration of smart phones in the market,
the increase in their compute power and visual rendering
capability, the mobility of the workforce (such as, increas-
ing prevalence of telecommuting), and the desire to access
the systems management information from geographically
anywhere. Regarding the second dimension, we believe
that virtualization brings in an unprecedented level of
interaction among the vertical layers of the software stack
as well as among the horizontal
layers. Thus, as an
example, cache usage pattern of one VM can affect the
performance of application running in a different VM
on the same physical machine [2]. With this comes the
need to tap into a diverse knowledge base because one
system administrator cannot be expected to be an expert
in performance tuning of a web server (application level)
to security to guard against resource leaks among VMs
(infrastructure level). Rather, it will become necessary for
multiple people within an IT organization to cooperate
in a loosely structured manner to determine a mitigation
action.
The ﬁrst dimension raises three important research and
practitioner challenges:
1. We need to ingest large amounts of data on small form
factor and resource constrained (relative to a traditional
desktop-class machine) devices. An important constrained
resource is the wireless bandwidth between the servers
and the mobile clients and another is the amount of energy
available to the device.
2. There is a mismatch in terms of the dependability
characteristics of the servers and the mobile clients. The
servers are often very secure while the mobile clients are
not — security vulnerabilities and dependability ﬂaws
in the software architecture of these systems are being
discovered routinely [4],
the clients roam outside the
comforting periphery of the company ﬁrewalls, and the
clients are not always-available, always-on devices.
3. There is a need for sophisticated visualization tech-
niques for displaying the large amounts of data from the
large number of managed servers on the small form factor
mobile clients. The display must be actionable so that
the administrators can initiate timely mitigation actions
in case they are needed.
The second dimension (larger number of people ingest-
ing the systems management information and a subset of
these acting on them) will introduce two signiﬁcant re-
search and practitioner challenges: 1. Current procedures
978-1-4799-0181-4/13/$31.00 ©2013 IEEE
1
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 07:40:09 UTC from IEEE Xplore.  Restrictions apply. 
for handling failures often focus diagnostic efforts on one
layer or system component at a time, with transfers to
other layers/components handled in a serial fashion. This
increases the time to resolve the problem. We believe a
better approach is to enable coordinated, simultaneous in-
vestigation of problems by multiple administrators or even
domain experts within the organization, that are not ofﬁ-
cial sysadmins. Mobile systems management applications
can play a key role in this mode of operations by reducing
communication time among administrators and helping in
exchange of problem context among the involved people,
which is needed for the problem resolution.
2. Can we leverage the overlap between the interests of
multiple mobile end points and their geographical prox-
imity to efﬁciently use the restricted cellular bandwidth
available going out to the mobile devices. So it may be
possible to reduce this contention by using near ﬁeld
communication (Bluetooth, Wi-Fi, etc.) between multiple
close-by mobile devices that share interest or using an
aggregator server that serves multiple mobile clients. This
has to be done in a manner that is cognizant of the
mobility of the clients, and security implications.
We believe that the challenges raised above are not
solvable with a gradual evolution of today’s solutions. To-
day’s solutions for systems management for dependability
rely on the information being consumed by resource rich
platforms, and in tightly controlled settings — privileged
user accessing information from well provisioned, and
perfectly well known, execution environment. What we
anticipate will negate both of these assumptions. Further,
systems management work with mobile devices so far has
looked at the opposite picture to what we are describing
here. Existing work has shown how to manage a large
number of mobile devices from servers, such as, how
to push out a software patch to multiple smart phones,
possibly using peer-to-peer dissemination among close-
by phones.
II. Management from Resource-Constrained
Mobile Devices
A. Optimizing for Communication
Carrol and Heiser have identiﬁed communication to
be one of the dominating factors of power consumption
on smartphones (for applications that require network
connectivity) [5], which is consistent with the experi-
ence from earlier battery-powered embedded systems like
sensor network nodes (e.g., [6]). Mobile systems man-
agement is inherently communication-intensive since the
mobile client requires periodical status updates from the
monitored machines and the ﬁdelity of the systems man-
agement application is a function of the sampling rate.
One of the key challenges is therefore to minimize the
number of messages that need to be received to still reli-
ably detect failures and receive other relevant information
at the mobile device. In this regard, communication pat-
terns like publish-subscribe (using a push paradigm) are
clearly preferable to periodic polling. Unfortunately, most
hardware management modules (Advanced Management
Module (AMM) [7], Baseboard Management Controller
(BMC) [8]) only support protocols that inherently require
polling, a problem that we hope to see addressed by
the hardware vendors when mobile systems management
gains traction. Clearly, more research is needed to develop
alternative systems management protocols which allow
the mobile client to express sophisticated ﬁlters to the
hardware management module. Alternatively, a proxy in
the cloud could act as a middle box, perform the constant
polling of the managed machines, and then serve as a
publish-subscribe server for multiple clients, an option
that we further elaborate on in Section III.
The problem of systems management can in broad
terms be seen as a speciﬁc instance of the rare event
detection problem: it can be expected that non-events
(e.g., system parameters that show no abnormal patterns)
occur with a much higher frequency than events of interest
(e.g., system failures). In akin problem domains, much
effort has been put
into avoiding high sampling rate
while still detecting the rare event with high likelihood
or within predictable time bounds (e.g., [9], [10]). Many
of these approaches, however, require a model of the
distribution of the events or a precise understanding of
their correlations—little of this is known currently in the
managed systems. Finally, given that a certain number
of messages per time period cannot be avoided to keep
the application up to date, system-level optimization like
trafﬁc shaping [11] can help to minimize the power
consumption to transmit and receive these messages.
B. Mismatch in Dependability Characteristics
Platforms for systems management have traditionally
been considered as mission-critical as the managed sys-
tems themselves since ultimately failures on their side
could mask failures of the managed system or could
even compromise their security. However, mobile devices
are much harder to physically control since they can
easily leave access-controlled zones, can be stolen, or lost.
Once a mobile device is in the hands of an adversary,
OS-level protection can usually be easily circumvented
since the majority of the smartphones available today
have known vulnerabilities and tools exist to root these
devices. In times where employees bringing their own
mobile devices and using them for business work is an
increasingly common pattern, it is not even clear how
an enterprise can enforce policies on employee-owned
devices. Therefore, mobile devices need to be considered
unsafe environments and application-level security needs
to compensate for the lack of enforceable physical access
control and operating system protection.
Another problem is the reliability of the mobile de-
vice. Even when not considering the problem of network
2
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 07:40:09 UTC from IEEE Xplore.  Restrictions apply. 
connectivity and battery lifetime, mobile clients are of-
ten perceived (and justiﬁably so) to be more unreliable
than well-managed Linux-based desktop-class machines.
Reasons could be the lower maturity of the platforms or
the high pressure on the manufacturers due to shorter
development time. Little research beyond speciﬁc prob-
lems has been done so far to shed light on the question
how reliable mobile phones actually are in demanding
tasks such as systems management. We have done some
preliminary work in this regard for the Android and the
Symbian OS platforms [4] and more in-depth for inter-
process communication in Android [12]. Our preliminary
results have shown that some simple ﬂaws in software
components reused over and over again (such as, the
web toolkit) contribute to a large fraction of user-visible
failures. Second, the lack of input validation for messages
received from external source (a user) or from other
software components leads to a signiﬁcant source of
vulnerability.
C. Visualizing a Needle in a Haystack
Most systems management suites provide some means
for administrators to request and receive notiﬁcations or
alerts (“the needle”) of outages, failures, or behavior
that may be indicative of an imminent failure. With the
introduction of mobile systems management applications,
there is also the option of delivering alerts through
“push notiﬁcations” presented directly by the applica-
tion. This delivery method has a key advantage over
the traditional “out of band” channels, such as, text or
email messages, in that the mobile application can use
information from the alert to guide the administrator to the
appropriate dialogs within the application for diagnosing
and correcting the problem. However,
the subsequent
processing for root cause analysis is best done on server-
class platforms. Some of the analysis is computationally
heavy, incorporating for example, pattern matching and
machine learning algorithms. Limited screen real estate
makes it challenging to display large amounts of data in
a comprehensible way, which is, however, a key aspect of
traditional systems management. As indicated before, the
majority of the data that can be collected from systems
management modules is informative, not essential, most
of the time, unless there is a condition which requires
action. Another design principle should be that alert data
needs to be shown in a summary view for all machines
in the data center as the central element of the appli-
cation. Starting from this view, the mobile application
can then selectively present more detailed data as well
as actionable items to the user in a drill-down fashion.
While this approach has been proven successful in our
ongoing work with IBM Remote, a fundamental problem
remains: relevance is a highly subjective classiﬁer and
there remains the need to do much work in user-driven
mobile user interface design.
III. Crowdsourcing System Management
In this second dimension, we posit that crowdsourcing of
systems management is a desirable outcome and this is
enabled by systems management through mobile devices.
The term “crowd” should not be overconstrued to mean
just about anybody in the enterprise; rather, this will
refer to someone who is a domain expert in one of the
vertical layers in the system, such as, facilities expert
(HVAC, etc.), networking expert, hypervisor expert, vir-
tualization security expert, application expert, etc. The
diversiﬁcation will help by allowing a parallel workﬂow
whereby multiple experts, each from their mobile device,
can examine the problem symptoms to triangulate the
problem. The different skills, independent thinking, ac-
cess to different resources, skills in multiple layers of
the stack, etc. are all expected to aid in timely systems
management. The mobile application, uniﬁed across all
these experts’ mobile devices, can bring them all together
into this kind of integrated system administration. The
geographic diversity that may result from the mobility of
the involved people can help in some investigations, such
as, troubleshooting network bottlenecks or ﬁrewall rules.
We do not wish to be Pollyannaish in laying out
the above vision. There are many reasons for not hav-
ing crowdsourcing of the systems management
tasks,
such as, possibility of conﬂicting updates and security
breaches. Also, we are aware that a lot of systems
management is automated, but we still have signiﬁcant
human involvement for problem diagnosis, more so than
problem detection. First, we believe that the increasing
need for coordinated administrative actions will drive
systems management applications to appropriate features
of social media sites, such as “friending” of related sys-
tems, applications, and administrators, “feeds” of activi-
ties by systems or administrators, and “circles” to allow
coordination and collaboration in problem solving. By
adopting features and patterns of group communication
similar to social media applications, systems management
applications will enable rapid adoption of these features
without special education or documentation. What comes