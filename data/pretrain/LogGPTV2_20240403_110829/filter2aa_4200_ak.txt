// 4640: using guessed type __int64 __fastcall __cxa_begin_catch(_QWORD);
// 4670: using guessed type __int64 __fastcall __cxa_allocate_exception(_QWORD);
// 46E0: using guessed type __int64 __fastcall __cxa_end_catch(_QWORD);
// 2131C0: using guessed type int xxx_0;
// 2131D0: using guessed type int helper_0;
//----- (000000000000A438) ----------------------------------------------------
void __noreturn opcode_75()
{
  _QWORD *v0; // rax
  struct _Unwind_Exception *v1; // rax
  struct _Unwind_Exception *v2; // rbx
  v0 = (_QWORD *)__cxa_allocate_exception(8LL);
  sub_57F8(v0);
  __cxa_begin_catch(&std::exception::~exception);
  helper_0 = the_constants[BYTE2(xxx_2) + 0x240LL] ^ the_constants[BYTE1(xxx_2) + 0x140LL] ^ the_constants[(unsigned __int8)xxx_2 + 0x40LL] ^ the_constants[((unsigned int)xxx_2 >> 24) + 0x340LL];
  v1 = (struct _Unwind_Exception *)__cxa_allocate_exception(4LL);
  v1->exception_class = 101;
  v2 = v1;
  __cxa_end_catch(v1);
  _Unwind_Resume(v2);
}
// 4640: using guessed type __int64 __fastcall __cxa_begin_catch(_QWORD);
// 4670: using guessed type __int64 __fastcall __cxa_allocate_exception(_QWORD);
// 46E0: using guessed type __int64 __fastcall __cxa_end_catch(_QWORD);
// 2131C8: using guessed type int xxx_2;
// 2131D0: using guessed type int helper_0;
//----- (000000000000A534) ----------------------------------------------------
void __noreturn opcode_94()
{
  _QWORD *v0; // rax
  struct _Unwind_Exception *v1; // rax
  struct _Unwind_Exception *v2; // rbx
  v0 = (_QWORD *)__cxa_allocate_exception(8LL);
  sub_57F8(v0);
  __cxa_begin_catch(&std::exception::~exception);
  helper_1 = the_constants[BYTE1(xxx_1) + 576LL] ^ the_constants[(unsigned __int8)xxx_1 + 320LL] ^ the_constants[((unsigned int)xxx_1 >> 24) + 64LL] ^ the_constants[BYTE2(xxx_1) + 832LL];
  v1 = (struct _Unwind_Exception *)__cxa_allocate_exception(4LL);
  v1->exception_class = 115;
  v2 = v1;
  __cxa_end_catch(v1);
  _Unwind_Resume(v2);
}
// 4640: using guessed type __int64 __fastcall __cxa_begin_catch(_QWORD);
// 4670: using guessed type __int64 __fastcall __cxa_allocate_exception(_QWORD);
// 46E0: using guessed type __int64 __fastcall __cxa_end_catch(_QWORD);
// 2131C4: using guessed type int xxx_1;
// 2131D4: using guessed type int helper_1;
//----- (000000000000A630) ----------------------------------------------------
void __noreturn opcode_111()
{
  _QWORD *v0; // rax
  struct _Unwind_Exception *v1; // rax
  struct _Unwind_Exception *v2; // rbx
  v0 = (_QWORD *)__cxa_allocate_exception(8LL);
  sub_57F8(v0);
  __cxa_begin_catch(&std::exception::~exception);
  helper_0 = the_constants[BYTE2(xxx_0) + 576LL] ^ the_constants[BYTE1(xxx_0) + 320LL] ^ the_constants[(unsigned __int8)xxx_0 + 64LL] ^ the_constants[((unsigned int)xxx_0 >> 24) + 832LL];
  v1 = (struct _Unwind_Exception *)__cxa_allocate_exception(4LL);
  v1->exception_class = 17;
  v2 = v1;
  __cxa_end_catch(v1);
  _Unwind_Resume(v2);
}
// 4640: using guessed type __int64 __fastcall __cxa_begin_catch(_QWORD);
// 4670: using guessed type __int64 __fastcall __cxa_allocate_exception(_QWORD);
// 46E0: using guessed type __int64 __fastcall __cxa_end_catch(_QWORD);
// 2131C0: using guessed type int xxx_0;
// 2131D0: using guessed type int helper_0;
//----- (000000000000A72C) ----------------------------------------------------
void __noreturn opcode_25()
{
  _QWORD *v0; // rax
  struct _Unwind_Exception *v1; // rax
  struct _Unwind_Exception *v2; // rbx
  v0 = (_QWORD *)__cxa_allocate_exception(8LL);
  sub_57F8(v0);
  __cxa_begin_catch(&std::exception::~exception);
  xxx_0 ^= the_constants[26] + helper_1 + helper_0;
  v1 = (struct _Unwind_Exception *)__cxa_allocate_exception(4LL);
  v1->exception_class = 47;
  v2 = v1;
  __cxa_end_catch(v1);
  _Unwind_Resume(v2);
}
// 4640: using guessed type __int64 __fastcall __cxa_begin_catch(_QWORD);
// 4670: using guessed type __int64 __fastcall __cxa_allocate_exception(_QWORD);
// 46E0: using guessed type __int64 __fastcall __cxa_end_catch(_QWORD);
// 2131C0: using guessed type int xxx_0;
// 2131D0: using guessed type int helper_0;
// 2131D4: using guessed type int helper_1;
//----- (000000000000A7CE) ----------------------------------------------------
void __noreturn opcode_81()
{
  _QWORD *v0; // rax
  struct _Unwind_Exception *v1; // rax
  struct _Unwind_Exception *v2; // rbx
  v0 = (_QWORD *)__cxa_allocate_exception(8LL);
  sub_57F8(v0);
  __cxa_begin_catch(&std::exception::~exception);
  xxx_2 ^= the_constants[4];
  v1 = (struct _Unwind_Exception *)__cxa_allocate_exception(4LL);
  v1->exception_class = 23;
  v2 = v1;
  __cxa_end_catch(v1);
  _Unwind_Resume(v2);
}
// 4640: using guessed type __int64 __fastcall __cxa_begin_catch(_QWORD);
// 4670: using guessed type __int64 __fastcall __cxa_allocate_exception(_QWORD);
// 46E0: using guessed type __int64 __fastcall __cxa_end_catch(_QWORD);
// 2131C8: using guessed type int xxx_2;
//----- (000000000000A860) ----------------------------------------------------
void __noreturn opcode_83()
{
  _QWORD *v0; // rax
  struct _Unwind_Exception *v1; // rax
  struct _Unwind_Exception *v2; // rbx
  v0 = (_QWORD *)__cxa_allocate_exception(8LL);
  sub_57F8(v0);
  __cxa_begin_catch(&std::exception::~exception);
  helper_0 = the_constants[BYTE2(xxx_0) + 576LL] ^ the_constants[BYTE1(xxx_0) + 320LL] ^ the_constants[(unsigned __int8)xxx_0 + 64LL] ^ the_constants[((unsigned int)xxx_0 >> 24) + 832LL];
  v1 = (struct _Unwind_Exception *)__cxa_allocate_exception(4LL);
  v1->exception_class = 43;
  v2 = v1;
  __cxa_end_catch(v1);
  _Unwind_Resume(v2);
}
// 4640: using guessed type __int64 __fastcall __cxa_begin_catch(_QWORD);
// 4670: using guessed type __int64 __fastcall __cxa_allocate_exception(_QWORD);
// 46E0: using guessed type __int64 __fastcall __cxa_end_catch(_QWORD);
// 2131C0: using guessed type int xxx_0;
// 2131D0: using guessed type int helper_0;
//----- (000000000000A95C) ----------------------------------------------------
void __noreturn opcode_120()
{
  _QWORD *v0; // rax
  struct _Unwind_Exception *v1; // rax
  struct _Unwind_Exception *v2; // rbx
  v0 = (_QWORD *)__cxa_allocate_exception(8LL);
  sub_57F8(v0);
  __cxa_begin_catch(&std::exception::~exception);
  xxx_1 = __ROL4__(xxx_1, 1);
  v1 = (struct _Unwind_Exception *)__cxa_allocate_exception(4LL);
  v1->exception_class = 69;
  v2 = v1;
  __cxa_end_catch(v1);
  _Unwind_Resume(v2);
}
// 4640: using guessed type __int64 __fastcall __cxa_begin_catch(_QWORD);
// 4670: using guessed type __int64 __fastcall __cxa_allocate_exception(_QWORD);
// 46E0: using guessed type __int64 __fastcall __cxa_end_catch(_QWORD);
// 2131C4: using guessed type int xxx_1;
//----- (000000000000A9E4) ----------------------------------------------------
void __noreturn opcode_13()
{
  _QWORD *v0; // rax
  struct _Unwind_Exception *v1; // rax
  struct _Unwind_Exception *v2; // rbx
  v0 = (_QWORD *)__cxa_allocate_exception(8LL);
  sub_57F8(v0);
  __cxa_begin_catch(&std::exception::~exception);
  xxx_2 = __ROR4__(xxx_2, 1);
  v1 = (struct _Unwind_Exception *)__cxa_allocate_exception(4LL);
  v1->exception_class = 112;
  v2 = v1;
  __cxa_end_catch(v1);
  _Unwind_Resume(v2);
}
// 4640: using guessed type __int64 __fastcall __cxa_begin_catch(_QWORD);
// 4670: using guessed type __int64 __fastcall __cxa_allocate_exception(_QWORD);
// 46E0: using guessed type __int64 __fastcall __cxa_end_catch(_QWORD);
// 2131C8: using guessed type int xxx_2;
//----- (000000000000AA6C) ----------------------------------------------------
void __noreturn opcode_105()
{
  _QWORD *v0; // rax
  struct _Unwind_Exception *v1; // rax
  struct _Unwind_Exception *v2; // rbx
  v0 = (_QWORD *)__cxa_allocate_exception(8LL);
  sub_57F8(v0);
  __cxa_begin_catch(&std::exception::~exception);
  xxx_0 ^= the_constants[6];
  v1 = (struct _Unwind_Exception *)__cxa_allocate_exception(4LL);
  v1->exception_class = 72;
  v2 = v1;
  __cxa_end_catch(v1);
  _Unwind_Resume(v2);
}
// 4640: using guessed type __int64 __fastcall __cxa_begin_catch(_QWORD);
// 4670: using guessed type __int64 __fastcall __cxa_allocate_exception(_QWORD);
// 46E0: using guessed type __int64 __fastcall __cxa_end_catch(_QWORD);
// 2131C0: using guessed type int xxx_0;
//----- (000000000000AAFE) ----------------------------------------------------
void __noreturn opcode_95()
{
  _QWORD *v0; // rax
  struct _Unwind_Exception *v1; // rax
  struct _Unwind_Exception *v2; // rbx
  v0 = (_QWORD *)__cxa_allocate_exception(8LL);
  sub_57F8(v0);
  __cxa_begin_catch(&std::exception::~exception);
  xxx_0 = __ROR4__(xxx_0, 1);
  v1 = (struct _Unwind_Exception *)__cxa_allocate_exception(4LL);
  v1->exception_class = 5;
  v2 = v1;
  __cxa_end_catch(v1);
  _Unwind_Resume(v2);
}
// 4640: using guessed type __int64 __fastcall __cxa_begin_catch(_QWORD);
// 4670: using guessed type __int64 __fastcall __cxa_allocate_exception(_QWORD);
// 46E0: using guessed type __int64 __fastcall __cxa_end_catch(_QWORD);
// 2131C0: using guessed type int xxx_0;
//----- (000000000000AB86) ----------------------------------------------------
void __noreturn opcode_106()
{
  _QWORD *v0; // rax
  struct _Unwind_Exception *v1; // rax
  struct _Unwind_Exception *v2; // rbx
  v0 = (_QWORD *)__cxa_allocate_exception(8LL);
  sub_57F8(v0);
  __cxa_begin_catch(&std::exception::~exception);
  xxx_1 = (((unsigned __int8)pass_16_buf[7] exception_class = 109;
  v2 = v1;
  __cxa_end_catch(v1);
  _Unwind_Resume(v2);
}
// 4640: using guessed type __int64 __fastcall __cxa_begin_catch(_QWORD);
// 4670: using guessed type __int64 __fastcall __cxa_allocate_exception(_QWORD);
// 46E0: using guessed type __int64 __fastcall __cxa_end_catch(_QWORD);
// 2131C4: using guessed type int xxx_1;
//----- (000000000000AC4A) ----------------------------------------------------
void __noreturn opcode_48()
{
  _QWORD *v0; // rax
  struct _Unwind_Exception *v1; // rax
  struct _Unwind_Exception *v2; // rbx
  v0 = (_QWORD *)__cxa_allocate_exception(8LL);
  sub_57F8(v0);
  __cxa_begin_catch(&std::exception::~exception);
  xxx_1 = __ROL4__(xxx_1, 1);
  v1 = (struct _Unwind_Exception *)__cxa_allocate_exception(4LL);
  v1->exception_class = 74;
  v2 = v1;
  __cxa_end_catch(v1);
  _Unwind_Resume(v2);
}
// 4640: using guessed type __int64 __fastcall __cxa_begin_catch(_QWORD);
// 4670: using guessed type __int64 __fastcall __cxa_allocate_exception(_QWORD);
// 46E0: using guessed type __int64 __fastcall __cxa_end_catch(_QWORD);
// 2131C4: using guessed type int xxx_1;
//----- (000000000000ACD2) ----------------------------------------------------
_QWORD *__fastcall alloc_base(_QWORD *a1)
{
  _QWORD *result; // rax
  result = a1;
  *a1 = &vtable_base_off_2110F8;
  return result;
}
// 2110F8: using guessed type __int64 (__fastcall *vtable_base_off_2110F8)();
//----- (000000000000ACEC) ----------------------------------------------------
_QWORD *__fastcall funky_0(_QWORD *a1)
{
  _QWORD *result; // rax
  alloc_base(a1);
  result = a1;
  *a1 = &hunky_off_210E28;
  return result;
}
// 210E28: using guessed type void (__fastcall __noreturn *hunky_off_210E28)();
//----- (000000000000AD16) ----------------------------------------------------
_QWORD *__fastcall funky_1(_QWORD *a1)
{
  _QWORD *result; // rax
  alloc_base(a1);
  result = a1;
  *a1 = &off_210F00;
  return result;
}
// 210F00: using guessed type void (__fastcall __noreturn *off_210F00)();
//----- (000000000000AD40) ----------------------------------------------------
_QWORD *__fastcall sub_AD40(_QWORD *a1)
{
  _QWORD *result; // rax
  alloc_base(a1);
  result = a1;
  *a1 = &off_2105E8;
  return result;
}
// 2105E8: using guessed type void (__fastcall __noreturn *off_2105E8)();
//----- (000000000000AD6A) ----------------------------------------------------
_QWORD *__fastcall sub_AD6A(_QWORD *a1)
{
  _QWORD *result; // rax
  alloc_base(a1);
  result = a1;
  *a1 = &off_210E70;
  return result;
}
// 210E70: using guessed type void (__fastcall __noreturn *off_210E70)();
//----- (000000000000AD94) ----------------------------------------------------
_QWORD *__fastcall sub_AD94(_QWORD *a1)
{
  _QWORD *result; // rax
  alloc_base(a1);
  result = a1;
  *a1 = &off_210BB8;
  return result;
}
// 210BB8: using guessed type void (__fastcall __noreturn *off_210BB8)();
//----- (000000000000ADBE) ----------------------------------------------------
_QWORD *__fastcall sub_ADBE(_QWORD *a1)
{
  _QWORD *result; // rax
  alloc_base(a1);
  result = a1;
  *a1 = &off_210CA8;
  return result;
}
// 210CA8: using guessed type void (__fastcall __noreturn *off_210CA8)();
//----- (000000000000ADE8) ----------------------------------------------------
_QWORD *__fastcall sub_ADE8(_QWORD *a1)