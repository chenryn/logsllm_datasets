### Encryption and Security in Network Protocols

#### 5.4. File Transfer Protocol (FTP)
Encrypting the control channel in FTP is relatively straightforward, but protecting the data channels is more challenging due to their dynamic nature. Additionally, a malicious FTP client can exploit the data channels to cause an innocent FTP server to attack a third host, known as a bounce attack. A detailed security analysis of FTP, including the bounce attack, is provided in [7], while [51] discusses cryptographic protection for FTP.

Recently, a host was temporarily rendered unusable by a massive number of FTP requests for a popular technical report. If this were deliberate, it would be considered a successful denial of service (DoS) attack.

#### 5.5. Simple Network Management Protocol (SNMP)
The Simple Network Management Protocol (SNMP) [17] has been defined to aid in network management. Access to such a resource must be heavily protected. The RFC acknowledges this but also allows for a null authentication service, which is a significant security risk. Even a "read-only" mode can be dangerous, as it may expose the target host to netstat-type attacks if the Management Information Base (MIB) [62] includes sequence numbers. The current standardized version does not, but the MIB is explicitly declared to be extensible.

Originally, SNMP authentication relied on a simple plaintext password known as the community string. This method is vulnerable to eavesdropping and guessability. SNMPv3 [18] introduces a User-based Security Model [92] with cryptographic authentication, significantly improving security. New MIBs are carefully scrutinized for security-sensitive elements; for example, a proposal to include TCP sequence numbers in the MIB was rejected.

#### 5.6. Remote Booting
Two sets of protocols are used today to boot diskless workstations and gateways: Reverse ARP (RARP) [43] with the Trivial File Transfer Protocol (TFTP) [94] and BOOTP [25] with TFTP. A system being booted is a tempting target, as subverting the boot process can allow an attacker to substitute a new kernel with altered protection mechanisms.

RARP-based booting is riskier because it relies on Ethernet-like networks, which have inherent vulnerabilities. Using a random number for the UDP source port can provide a modest security improvement, preventing an attacker from impersonating the server and sending false DATA packets.

BOOTP adds an additional layer of security by including a 4-byte random transaction ID, which prevents an attacker from generating false replies to a workstation known to be rebooting. It is crucial that these numbers are truly random, which can be challenging in a system that is freshly powered up. Care should be taken when booting through gateways, as the more networks traversed, the greater the opportunity for impersonation.

The greatest measure of protection is that an attacker typically has only a single chance, as a system being booted does not stay in that state. However, if communications between the client and the standard server can be interrupted, larger-scale attacks may be mounted.

A newer boot-time protocol, DHCP [34], is even more critical. It provides hosts with IP addresses, DNS servers, default routers, and more. DHCP queries can occur frequently if the lease time of the address is short, giving an attacker many opportunities to cause mischief. Although there is a DHCP authentication option [3], it is rarely used, as anyone who can mount a DHCP attack can also launch a local network attack easily.

#### 6. Trivial Attacks
Some attacks are almost too trivial to mention, but completeness demands they be noted.

##### 6.1. Vulnerability of the Local Network
Local-area networks, particularly Ethernet networks, are highly vulnerable to eavesdropping and host-spoofing. Physical access must be strictly controlled, and it is unwise to trust any hosts on such networks if any machine is accessible to untrusted personnel, unless authentication servers are used.

If the local network uses the Address Resolution Protocol (ARP) [78], more subtle forms of host-spoofing are possible. An attacker can intercept, modify, and forward packets, rather than just taking over the host’s role or spying on all traffic. Denial of service (DoS) attacks can be launched by triggering broadcast storms, which are easy to launch and hard to spot. End-to-end encryption can prevent the worst problems, but ARP remains a potent vehicle for DoS attacks. This issue is being addressed for IPv6 with the SEND enhancements to IPv6 Neighbor Discovery, its version of ARP.

ARP attacks are particularly nasty on wireless networks, especially in public hotspots, and can be used to defeat the presumed security properties of Ethernet switches. Some administrators assume that using a switch prevents classical eavesdropping, but ARP can be used to redirect traffic despite that.

Broadcast storms can be launched maliciously, with the attacker sending an ICMP Echo Request packet to the broadcast address of some local network. All hosts on that network send a reply to the originator of the ICMP message, bombarding the victim with enough Echo Reply messages to clog the link. Smurf attacks (see CERT Advisory CA-1998-01) have become less common since default router configurations were changed to disable directed broadcasts [91].

##### 6.2. The Trivial File Transfer Protocol (TFTP)
TFTP [94] permits file transfers without any attempt at authentication, making any publicly-readable file accessible. It is the responsibility of the implementor and/or system administrator to minimize the accessible files.

##### 6.3. Reserved Ports
Berkeley-derived TCPs and UDPs have the concept of a "privileged port," where port numbers lower than 1024 can only be allocated to privileged processes. This restriction is part of the authentication mechanism, but neither the TCP nor UDP specifications contain such a concept, and it is not meaningful on a single-user computer. Administrators should never rely on Berkeley authentication schemes when talking to such machines.

Privileged ports are a bad idea, but they could have been worse. In FTP bounce attacks, the source port is 21, within the privileged range. This means bounce attacks could have been used to attack rlogin and rsh servers. Fortunately, out of a nagging sense of unease, those servers only accepted connections coming from ports in the range 512–1023.

#### 7. Comprehensive Defenses
We have described defenses against various individual attacks. Several techniques are broad-spectrum defenses that can guard against many other attacks as well.

##### 7.1. Authentication
Many intrusions succeed because the target host uses the IP source address for authentication, assuming it to be genuine. Unfortunately, there are many ways to spoof this address, making such techniques nearly worthless. Cryptographic authentication is needed. One well-known approach is the Needham-Schroeder algorithm [75, 28, 76], which relies on each host sharing a key with an authentication server. A host wishing to establish a connection obtains a session key from the authentication server and passes a sealed version along to the destination. At the conclusion of the dialog, each side is convinced of the identity of the other. Versions of the algorithm exist for both private-key and public-key cryptosystems.

In the context of TCP/IP, preauthenticated connections can be implemented safely with these schemes; without them, they are quite risky. The DNS provides an ideal base for authentication systems, as it already incorporates the necessary name structure, redundancy, etc. Key distribution responses must be authenticated and/or encrypted.

In some environments, the session key must be used to encrypt the entire conversation; otherwise, an attacker can take over a connection via the mechanisms described earlier.

##### 7.2. Encryption
Suitable encryption can defend against most of the attacks outlined above. However, encryption devices are expensive, often slow, hard to administer, and uncommon in the civilian sector. Different encryption methods have their strengths and weaknesses. A comprehensive treatment of encryption is beyond the scope of this paper; interested readers should consult Voydock and Kent [103] or Davies and Price [26].

Link-level encryption—encrypting each packet as it leaves the host computer—is an excellent method of guarding against disclosure of information and physical intrusions. An attacker who tapped into an Ethernet cable, for example, would not be able to inject spurious packets. Similarly, an intruder who cut the line to a name server would not be able to impersonate it. The security of the network depends on the number of entities that share a given key; typically, a key distribution center will allocate keys to each pair of communicating hosts.

However, link-level encryption has some weaknesses. Broadcast packets are difficult to secure, and in the absence of fast public-key cryptosystems, the ability to decode an encrypted broadcast implies the ability to send such a broadcast, impersonating any host on the network. Furthermore, link-level encryption is not end-to-end; security across gateways implies trust in the gateways and assurance that the full concatenated internet is similarly protected. Paranoid gateways can be deployed at the entrance to security domains to block incoming RIP packets or source-routed packets.

Many portions of the DARPA Internet employ forms of link encryption. All Defense Data Network (DDN) IMP-to-IMP trunks use DES encryption, even for non-classified traffic; classified lines use more secure cryptosystems [27]. These are point-to-point lines, which are comparatively easy to protect.

A multi-point link encryption device for TCP/IP is the Blacker Front End (BFE) [40]. The BFE looks to the host like an X.25 DDN interface and sits between the host and the actual DDN line. When it receives a call request packet specifying a new destination, it contacts an Access Control Center (ACC) for permission and a Key Distribution Center (KDC) for cryptographic keys. If the local host is denied permission to talk to the remote host, an appropriate diagnostic code is returned. A special “Emergency Mode” is available for communications to a restricted set of destinations when the link to the KDC or ACC is not working.

Permission-checking can, to some extent, protect against DNS attacks. Even if a host has been misled about the proper IP address for a particular destination, the BFE will ensure that a totally unauthorized host does not receive sensitive data. For example, if a host wishes to send Top Secret data to some host foo, a DNS attack might mislead the host into connecting to a penetrated host 4.0.0.4 instead of 1.0.0.1. If 4.0.0.4 is not cleared for Top Secret material or is not allowed communications with the local host, the connection attempt will fail. While a denial of service attack has occurred, this is less serious than information loss in the military world.

The BFE also translates the original ("Red") IP address to an encrypted ("Black") address using a translation table supplied by the ACC. This is done to foil traffic analysis techniques, a common issue in multi-point link encryption schemes.

I got a lot wrong here (see [54] for details), partly due to my lack of experience with cryptography at the time and partly due to the limited information publicly available on Blacker. With the benefit of hindsight and more experience, I would now call the BFE a network-layer encryptor for non-broadcast multiple access networks, rather than a multi-point link-level encryptor. However, Blacker was already obsolescent when I wrote the original paper; SP3—the next generation—was under development.