title:Investigating Commercial Pay-Per-Install and the Distribution of Unwanted
Software
author:Kurt Thomas and
Juan A. Elices Crespo and
Ryan Rasti and
Jean Michel Picod and
Cait Phillips and
Marc-Andr&apos;e Decoste and
Chris Sharp and
Fabio Tirelo and
Ali Tofigh and
Marc-Antoine Courteau and
Lucas Ballard and
Robert Shield and
Nav Jagpal and
Moheeb Abu Rajab and
Panayiotis Mavrommatis and
Niels Provos and
Elie Bursztein and
Damon McCoy
Investigating Commercial Pay-Per-Install  
and the Distribution of Unwanted Software
Kurt Thomas, Juan A. Elices Crespo, Ryan Rasti, Jean-Michel Picod, Cait Phillips,  
Marc-André Decoste, Chris Sharp, Fabio Tirelo, Ali Tofigh, Marc-Antoine Courteau,  
Lucas Ballard, Robert Shield, Nav Jagpal, Moheeb Abu Rajab, Panayiotis Mavrommatis, 
Niels Provos, and Elie Bursztein, Google; Damon McCoy, New York University and 
International Computer Science Institute
 https://www.usenix.org/conference/usenixsecurity16/technical-sessions/presentation/thomas
This paper is included in the Proceedings of the 25th USENIX Security SymposiumAugust 10–12, 2016 • Austin, TXISBN 978-1-931971-32-4Open access to the Proceedings of the 25th USENIX Security Symposium is sponsored by USENIX Investigating Commercial Pay-Per-Install and the
Distribution of Unwanted Software
Kurt Thomas(cid:31) Juan A. Elices Crespo(cid:31) Ryan Rasti(cid:31) Jean-Michel Picod(cid:31) Cait Phillips(cid:31)
Marc-Andr´e Decoste(cid:31) Chris Sharp(cid:31) Fabio Tirelo(cid:31) Ali Tofigh(cid:31) Marc-Antoine Courteau(cid:31)
Lucas Ballard(cid:31) Robert Shield(cid:31) Nav Jagpal(cid:31) Moheeb Abu Rajab(cid:31) Panayiotis Mavrommatis(cid:31)
Niels Provos(cid:31) Elie Bursztein(cid:31) Damon McCoy†∗
(cid:31)Google †New York University ∗International Computer Science Institute
Abstract
In this work, we explore the ecosystem of commercial
pay-per-install (PPI) and the role it plays in the prolif-
eration of unwanted software. Commercial PPI enables
companies to bundle their applications with more pop-
ular software in return for a fee, effectively commodi-
tizing access to user devices. We develop an analysis
pipeline to track the business relationships underpinning
four of the largest commercial PPI networks and clas-
sify the software families bundled. In turn, we measure
their impact on end users and enumerate the distribution
techniques involved. We find that unwanted ad injectors,
browser settings hijackers, and “cleanup” utilities dom-
inate the software families buying installs. Developers
of these families pay $0.10–$1.50 per install—upfront
costs that they recuperate by monetizing users without
their consent or by charging exorbitant subscription fees.
Based on Google Safe Browsing telemetry, we estimate
that PPI networks drive over 60 million download at-
tempts every week—nearly three times that of malware.
While anti-virus and browsers have rolled out defenses
to protect users from unwanted software, we find evi-
dence that PPI networks actively interfere with or evade
detection. Our results illustrate the deceptive practices of
some commercial PPI operators that persist today.
1
Introduction
In recent years, unwanted software has risen to the
forefront of threats facing users. Prominent strains in-
clude ad injectors that laden a victim’s browser with ad-
vertisements, browser settings hijackers that sell search
traffic, and user trackers that silently monitor a victim’s
browsing behavior. Estimates of the incident rate of
unwanted software installs on desktop systems are just
emerging: prior studies suggest that ad injection affects
as many as 5% of browsers [34] and that deceptive exten-
sions escaping detection in the Chrome Web Store affect
over 50 million users [17].
Despite the proliferation of unwanted software, the
root source of installs remains unclear. One potential ex-
planation is commercial pay-per-install (PPI), a moneti-
zation scheme where software developers bundle several
third-party applications as part of their installation pro-
cess in return for a payout. We differentiate this from
blackmarket pay-per-install [4] as commercial PPI re-
lies on a user consent dialogue to operate aboveboard.
Download portals are a canonical example, where care-
lessly installing any of the top applications may leave a
system bloated with search toolbars, anti-virus free tri-
als, and registry cleaners [16]. Unfortunately, this all too
common user experience is the profit vehicle for a collec-
tion of private and publicly companies that commoditize
software bundling [15]. While earnings in this space are
nebulous, one of the largest commercial PPI outfits re-
ported $460 million in revenue in 2014 [31].
In this work, we explore the ecosystem of commercial
PPI and the role it plays in distributing the most noto-
rious unwanted software families. The businesses profit-
ing from PPI operate afﬁliate networks to streamline buy-
ing and selling installs. We identify a total of 15 PPI af-
filiate networks headquartered in Israel, Russia, and the
United States. We select four of the largest to investigate,
monitoring each over a year long period from January 8,
2015–January 7, 2016 in order to track the software fam-
ilies paying for installs, their impact on end users, and
the deceptive distribution practices involved.
We find that commercial PPI distributes roughly 160
software families each week, 59% of which at least one
anti-virus engine on VirusTotal [36] flags as unwanted.
For our study, we use this labeling to classify unwanted
software. The families with the longest PPI distribu-
tion campaigns include ad injectors, like Crossrider, and
scareware that dupes victims into paying a subscription
fee for resolving “dangerous” registry settings, a hair’s
length shy of ransomware. We find that PPI networks
support unwanted software as first-class partners: down-
USENIX Association  
25th USENIX Security Symposium  721
1
loaders will actively fingerprint a victim’s machine in
order to detect hostile anti-virus or virtualized environ-
ments, in turn dynamically selecting offers that go un-
detected. Software developers pay between $0.10–1.50
per install for these services, where price is dictated by
geographic demand.
Via Safe Browsing telemetry, we measure the impact
of commercial pay-per-install on end users across the
globe. On an average week, Safe Browsing generates
over 60 million warnings related to unwanted software
delivered via PPI—three times that of malware. Despite
these protections, estimates of unwanted software inci-
dent rates provided by the Chrome Cleanup Tool [5] indi-
cate there are tens of millions of installs on user systems.
Of the top 15 families installed, we find 14 distribute via
commercial PPI.
Thousands of PPI affiliates drive these weekly down-
loads through a battery of distribution practices. We find
54% of sites that link to PPI bundles host content related
to freeware, videos, or software cracks. For the long tail
of other sites where users are not expecting an installer,
PPI networks provide affiliates with “promotional tools”
such as butter bars that warn a user their Flash player
is out of date, in turn delivering a PPI bundle.
In or-
der to avoid detection by Safe Browsing, affiliates churn
through domains every 7 hours or actively cloak against
Safe Browsing scans. Our findings illustrate the decep-
tive behaviors present in the commercial PPI ecosystem
and the virulent impact it has on end users.
In summary, we frame our contributions as follows:
• We present the first investigation of commercial
PPI’s internal operations and its relation to un-
wanted software.
million download attempts every week.
• We estimate that commercial PPI drives over 60
• We find that 14 of the top 15 unwanted software
• We show that commercial PPI installers and distrib-
utors knowingly attempt to evade user protections.
families distribute via commercial PPI.
2 Commercial Pay-Per-Install
For the purposes of this study, we define commercial
pay-per-install (PPI) as the practice of software develop-
ers bundling several third-party applications in return for
a fee. We present an example bundle in Figure 1, where
clicking on “accept” results in a user installing eight of-
fers through a single radio dialogue. Some of these offers
may be unwanted software, where at least one anti-virus
engine on VirusTotal marks the application as potentially
unwanted, adware, spyware, or a generic category.
In
contrast to blackmarket pay-per-install which illegally
Figure 1: Sample prompt bundling eight commercial pay-per-
install offers. Each offer is downloaded and automatically
installed upon a user accepting the “Express Install” option.
Users may have no knowledge of the behaviors of the bundled
offers.
sells access to compromised hosts, deceptive commercial
PPI outfits rely on this prompt to nominally satisfy user
consent requirements. To simplify the process of buying
and selling installs, commercial PPI operates as an affili-
ate network. We outline this structure and enumerate the
major networks in operation during our study.
2.1 PPI Affiliate Structure
The pay-per-install affiliate structure consists of adver-
tisers, publishers, and PPI afﬁliate networks. Figure 2
presents the typical business role each plays.
Advertiser: In the pay-per-install lingo, advertisers are
software owners that pay third-parties to distribute their
binaries or extensions. Restrictions on what software ad-
vertisers can distribute falls entirely to the discretion of
PPI affiliate network operators and their ability (and will-
ingness) to police abuse. As highlighted in Figure 2, ad-
vertisers include developers of unwanted software like
Conduit, Wajam, or Shopperz that recuperate PPI in-
stallation fees by monetizing end users via ad injection,
browser settings hijacking, or user tracking. Irrespective
of the application’s behavior, PPI networks set a mini-
mum bid price per install that advertisers only pay out
upon a successful install. Advertisers may also restrict
the geographic regions they bid on.
Publisher: Publishers (e.g., affiliates) are the creators or
distributors of popular software applications (irrespec-
tive of copyright ownership). An example would be a
website hosting VLC player as shown in Figure 2. PPI
networks re-wrap a publisher’s application in a down-
loader that installs the original binary in addition to mul-
tiple advertiser binaries. This separation of monetization
from distribution allows publishers to focus solely on
garnering an audience and driving installs through any
means. Consequently, advertisers may have no knowl-
edge of the deceptive techniques that publishers employ
to obtain installs, nor what their binary is installed along-
side. Upon a successful install, the publisher receives a
fraction of the advertiser’s bid. We differentiate this from
direct distribution licenses such as Java’s agreement to
bundle the Ask Toolbar [18], as there is no ambiguity be-
722  25th USENIX Security Symposium 
USENIX Association
2
PPI Affiliate Network
AirInstaller
Amonetize
InstallCore
InstallMonetizer
InstallMonster
Installaxy
Installerex
NetCashRevenue
OpenCandy
Outbrowse
PerInstallBucks
PerInstallCash
Purebits
Solimba
Somoto
First Seen Reseller
09/2011
01/2012
04/2011
06/2010
06/2013
06/2014
12/2013
01/2014
04/2008
11/2012
06/2013
04/2011
06/2013
08/2013
10/2010






Table 1: List of 15 PPI affiliate networks, an estimate of when
they first started operating, and whether they resell installs.
fic where a victim is not primed to download a bun-
dle. It is worth noting that these resellers do not operate
their own downloader; they rely on sub-affiliate tracking
provided by larger PPI networks that effectively enables
two-tiered affiliate distribution.
Identifying PPI Networks
2.2
In contrast to blackmarket pay-per-install [4], the affili-
ate networks driving commercial PPI are largely private
companies with venture capital backing such as Install-
Monetizer and OpenCandy [8, 9]. Registering as a pub-
lisher with these PPI networks is simple: a prospective
affiliate submits her name, website, and an estimate of
the number of daily installs she can deliver. Given this
porous registration process, underground forums contain
extensive discussions on dubious distribution techniques
and which PPI affiliate networks offer the best conver-
sion rates and payouts. We tracked these conversations
on blackhatworld.com and pay-per-install.com, enumer-
ating over 50 commercial PPI affiliate programs that ex-
clusively deal with Windows installs. While there are
networks that target Mac and mobile installs, we focus
our work on the relationship between commercial PPI
and unwanted software families that disproportionately
impact Windows users as identified by previous stud-
ies [17, 34].
2.3 Acquiring PPI Downloader Samples
As part of our initial investigation of PPI, we successfully
acquired downloaders for fifteen distinct PPI networks.
We list each in Table 1. These networks have been in
operation for an average of 2–3 years, with the oldest
program dating back to 2008 as gleaned from crawl logs
provided by archive.org. Based on a preliminary black-
Figure 2: Pay-Per-Install (PPI) business model. Advertisers
paying for installs supply their binaries to a PPI affiliate net-
work (). The PPI network cultivates a set of publishers—
affiliates with popular software applications seeking additional
monetization (). The PPI network re-wraps the publisher’s
software with a customized downloader that the publisher then
distributes (). When end users launch this downloader, it in-
stalls the publisher’s software alongside multiple advertiser bi-
naries (). The PPI network is paid by the advertisers and the
publisher receives a commission.
tween the advertiser and publisher around what packages
are co-bundled and the source of installs.
PPI Affiliate Network: PPI affiliate networks serve as
a bridge between the specialized roles of advertisers and
publishers. The PPI network manages all business rela-
tionships with advertisers, provides publishers with cus-
tom downloaders, and handles all payments to publish-
ers for successful installs. When a publisher gains ac-
cess to an end user’s system, the PPI network determines
which offers to install. As we show in Section 3, this en-
tails fingerprinting an end user’s system to determine any
risk associated with anti-virus as well as to support geo-
targeted installations. Similarly, the PPI network dictates
the level of user consent when it installs an advertiser’s
binary, where consent forms a spectrum between silent
installs to opt-out dialogues. In some cases, advertisers
can customize the installation dialogue and thus play a
role in user consent.
Reselling: With multiple PPI affiliate networks in op-
eration, various PPI operators will aggregate their pub-
lishers’ install traffic and resell it to larger PPI affiliate
networks. These smaller PPI operators create value for
their affiliates by providing promotional tools in the form
of landing pages, banner ads, butter bars (e.g., “Your
Flash player is out of date”), and generic installers for
media players and games—described later in Section 6.
These tools simplify the process of monetizing web traf-
USENIX Association  
25th USENIX Security Symposium  723
3
Figure 3: PPI monitoring infrastructure. We collect offers and prices from four PPI networks on a regular basis (). We then
execute the offer binaries in a sandbox to observe network requests, file system changes, and running processes (). We annotate
each binary with any known VirusTotal labels () before finally clustering binaries into families ().
box test of each downloader, we found six of the fif-
teen PPI downloaders were merely resellers for other PPI
networks in our list. Of the remaining nine, we elect
four of the largest—Amonetize, InstallMonetizer, Open-
Candy, and Outbrowse—as the basis of our investigation
into the role of PPI in unwanted software distribution.
We based our initial selection criteria on the complex-
ity of the offer protocols and from preliminary statistics
reported by Safe Browsing on which PPI networks deliv-
ered the largest number of downloads. We confirm later
in Section 5 that these four PPI networks are in fact rep-
resentative, large operators. We also explore the impact
of the PPI ecosystem as a whole on end users.
3 Monitoring the PPI Ecosystem
Using the PPI downloader samples we acquire for
InstallMonetizer, OpenCandy, and Out-
Amonetize,
browse, we develop a pipeline to track the offers (e.g.,
advertiser binaries) that each PPI network distributes as
well as the regional price per install. We outline our
pipeline in Figure 3. We begin by simulating each PPI
downloader’s protocol to fetch all possible offers on an
hourly basis. We analyze each binary in a sandboxed en-
vironment, ultimately clustering the offers into software
families based on the behavioral patterns we observe. We
discuss the construction of our pipeline and its limita-
tions.
3.1 PPI Downloader Protocol
All four PPI downloaders we study rely on a three-stage
protocol for dynamically fetching advertiser binaries. To
start, a downloader fingerprints a client’s device to de-
termine the operating system and default browser. The
downloader reports these parameters to the PPI server
as part of a request for all available offers as shown in
Figure 4. In our example, the request embeds the exact
version of the client’s OS and service pack; the Chrome,
Firefox, and Internet Explorer version if any are present;
whether the system is 32-bit or 64-bit; and finally poten-
tially unique identifiers including a MAC address and a
machine identifier such as HKEY_LOCAL_MACHINE\
SOFTWARE\Microsoft\Cryptography.
We provide a typical offer response in Figure 5. Each
offer contains a unique product identifier, download
URL, and additional metadata that dictates how the in-
stall process unfolds. Depending on the PPI network,
the response will include anywhere from 5–50 offers, fil-
tered by regional requirements imposed by the PPI server
based on the client’s IP address.
In the second stage, the downloader verifies that none
of the RegKey or AntivirusesRegKeys are present
in the device’s registry. This approach serves to prevent
multiple installations of the same advertiser’s binary as
well as to avoid anti-virus disrupting the installation of
an offer.
If a client’s machine satisfies the offer crite-
ria, the downloader will display the offer and execute the
binary with the command line options specified by the
PPI server if accepted. These parameters sometimes re-
veal the intent of the advertiser (e.g., replacing the de-
fault search provider) as well as evasive actions such as
remaining dormant for 20 days to prevent unwanted soft-
ware symptoms (e.g., injected ads) from manifesting im-
mediately after an installation. If a client’s system does
not satisfy the criteria, the downloader simply tests an-
other potential offer until all options are exhausted. In
total, the downloader will display offers for anywhere
from 1–10 advertiser binaries (potentially all as one ex-
press install dialogue): the maximum is dictated by the
PPI network.
In the final stage, the downloader reports all success-
fully installed offers along with the publisher’s affiliate
id for compensation.
724  25th USENIX Security Symposium 
USENIX Association
4
http://srv.desk-top-app.info/Installer/
Flow?os=6.1&ospv=-1&iev=9.11&ffv=&
chromev=46.0&macaddress=00:00:00...
&systembit=32&machineguid=b1420e...
Figure 4: Example PPI network request for Outbrowse con-
taining the components that make up a device fingerprint.
{
}
"SleepAfterInstall": 1800000,
"ExeURL": "http://example.com/file7",
"AntivirusesRegKeys": "[
{"RegKey32": "...\\McAfee..."}],
"RegKey": ...,