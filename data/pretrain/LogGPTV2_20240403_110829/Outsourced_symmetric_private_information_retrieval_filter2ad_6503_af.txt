Proof. See full version [20].
Security against adversarial data owner D.
OSPIR-SSE scheme a malicious D learns nothing about clients’
query ¯w = (w1, . . . , wn) except for the vector of attributes
av( ¯w) = (I(w1), . . . , I(wn)).
In our
Theorem 5. Let L be a leakage function deﬁned as L( ¯w) =
av( ¯w). OSPIR-SSE scheme OSPIR-OXT instantiated with
the Hashed Diﬃe-Hellman OPRF is L-semantically-secure
against malicious data owner.
Proof. See full version [20].
and the values as, a1, ..., an. In the Hashed DH OPRF in-
stantiation of this scheme in Figure 3, these values are formed
as aj ← H(wj)rj for random rj ’s in Z ∗
p (additionally, as is
set to a1). Since G is of prime order, every element in G\{1}
is a generator, and thus each aj is uniform in G. Thus D’s
view of the GenToken protocol can be trivially simulated
from L( ¯w) = av( ¯w).
5.3 Extensions: Reducing Leakage to D
In the full version [20] we show how to adapt OSPIR-OXT
to a setting where a third party, called a policy manager, au-
thorizes queries while D can enforce them without learning
the policy, the boolean expression or the queried attributes;
only the number of such attributes is learned by D. This set-
ting is precisely what is needed to implement searches autho-
rized by a warrant while keeping the searched information
hidden from all parties except the authorized searcher.
In addition, OSPIR-OXT can be extended (even without
introducing a policy manager) so that the leakage about
queried attributes to D is further limited to the minimum
needed to make policy decisions (e.g., D may not need to
know the exact attributes in a query but only the attribute
classes they belong to).
Acknowledgment
Supported by the Intelligence Advanced Research Projects
Activity (IARPA) via Department of Interior National Busi-
ness Center (DoI / NBC) contract number D11PC20201.
The U.S. Government is authorized to reproduce and dis-
tribute reprints for Governmental purposes notwithstanding
any copyright annotation thereon. Disclaimer: The views
and conclusions contained herein are those of the authors
and should not be interpreted as necessarily representing the
oﬃcial policies or endorsements, either expressed or implied,
of IARPA, DoI/NBC, or the U.S. Government.
6. REFERENCES
[1] M. Abdalla, M. Bellare, D. Catalano, E. Kiltz,
T. Kohno, T. Lange, J. Malone-Lee, G. Neven,
P. Paillier, and H. Shi. Searchable encryption
revisited: Consistency properties, relation to
anonymous IBE, and extensions. In V. Shoup, editor,
CRYPTO 2005, volume 3621 of LNCS, pages 205–222.
Springer, Aug. 2005.
[2] L. Ballard, S. Kamara, and F. Monrose. Achieving
eﬃcient conjunctive keyword searches over encrypted
data. In S. Qing, W. Mao, J. L´opez, and G. Wang,
editors, ICICS 05, volume 3783 of LNCS, pages
414–426. Springer, Dec. 2005.
[3] M. Bellare, A. Boldyreva, and A. O’Neill.
Deterministic and eﬃciently searchable encryption. In
A. Menezes, editor, CRYPTO 2007, volume 4622 of
LNCS, pages 535–552. Springer, Aug. 2007.
[4] D. J. Bernstein. Faster square roots in annoying ﬁnite
ﬁelds. http://cr.yp.to/papers/sqroot.pdf, 2001.
[5] D. Boneh, G. Di Crescenzo, R. Ostrovsky, and
G. Persiano. Public key encryption with keyword
search. In C. Cachin and J. Camenisch, editors,
EUROCRYPT 2004, volume 3027 of LNCS, pages
506–522. Springer, May 2004.
Note that the D’s view of the GenToken protocol in the
OSPIR-OXT scheme consists of the attribute vector av( ¯w)
[6] D. Boneh and B. Waters. Conjunctive, subset, and
range queries on encrypted data. In S. P. Vadhan,
885editor, TCC 2007, volume 4392 of LNCS, pages
535–554. Springer, Feb. 2007.
[7] J. W. Byun, D. H. Lee, and J. Lim. Eﬃcient
conjunctive keyword search on encrypted data storage
system. In EuroPKI, pages 184–196, 2006.
[8] D. Cash, J. Jaeger, S. Jarecki, C. Jutla, H. Krawczyk,
M.-C. Ro¸su, and M. Steiner. Dynamic Searchable
Encryption in Very Large Databases: Data Structures
and Implementation. Manuscript, 2013.
[9] D. Cash, S. Jarecki, C. Jutla, H. Krawczyk, M. Rosu,
and M. Steiner. Highly-scalable searchable symmetric
encryption with support for boolean queries.
Crypto’2013. Cryptology ePrint Archive, Report
2013/169, Mar. 2013.
http://eprint.iacr.org/2013/169.
[10] Y.-C. Chang and M. Mitzenmacher. Privacy
preserving keyword searches on remote encrypted
data. In J. Ioannidis, A. Keromytis, and M. Yung,
editors, ACNS 05, volume 3531 of LNCS, pages
442–455. Springer, June 2005.
[20] S. Jarecki, C. Jutla, H. Krawczyk, M. C. Rosu, and
M. Steiner. Outsourced symmetric private information
retrieval. http://eprint.iacr.org/2013/.
[21] S. Jarecki and X. Liu. Eﬃcient oblivious
pseudorandom function with applications to adaptive
OT and secure computation of set intersection. In
O. Reingold, editor, TCC 2009, volume 5444 of LNCS,
pages 577–594. Springer, Mar. 2009.
[22] S. Jarecki and X. Liu. Fast secure computation of set
intersection. In SCN 10, LNCS, pages 418–435.
Springer, 2010.
[23] S. Kamara and K. Lauter. Cryptographic cloud
storage. In Financial Cryptography Workshops, pages
136–149, 2010.
[24] S. Kamara, C. Papamanthou, and T. Roeder.
Dynamic searchable symmetric encryption. In Proc. of
CCS’2012, 2012.
[25] K. Kurosawa and Y. Ohtaki. UC-secure searchable
symmetric encryption. In Financial Cryptography,
page 285, 2012.
[11] M. Chase and S. Kamara. Structured encryption and
[26] M. Naor and O. Reingold. Number-theoretic
constructions of eﬃcient pseudo-random functions. In
38th FOCS, pages 458–467. IEEE Computer Society
Press, Oct. 1997.
[27] V. Pappas, B. Vo, F. Krell, S. G. Choi, V. Kolesnikov,
A. Keromytis, and T. Malkin. Blind Seer: A Scalable
Private DBMS. Manuscript, 2013.
[28] E. Shi, J. Bethencourt, H. T.-H. Chan, D. X. Song,
and A. Perrig. Multi-dimensional range query over
encrypted data. In 2007 IEEE Symposium on Security
and Privacy, pages 350–364. IEEE Computer Society
Press, May 2007.
[29] D. X. Song, D. Wagner, and A. Perrig. Practical
techniques for searches on encrypted data. In 2000
IEEE Symposium on Security and Privacy, pages
44–55. IEEE Computer Society Press, May 2000.
[30] P. van Liesdonk, S. Sedhi, J. Doumen, P. H. Hartel,
and W. Jonker. Computationally eﬃcient searchable
symmetric encryption. In Proc. Workshop on Secure
Data Management (SDM), pages 87–100, 2010.
[31] B. R. Waters, D. Balfanz, G. Durfee, and D. K.
Smetters. Building an encrypted and searchable audit
log. In NDSS 2004. The Internet Society, Feb. 2004.
[32] WSJ. U.S. Terrorism Agency to Tap a Vast Database
of Citizens. Wall Street Journal 12/13/12.
http://alturl.com/ot72x.
controlled disclosure. In ASIACRYPT 2010, LNCS,
pages 577–594. Springer, Dec. 2010.
[12] E. D. Cristofaro, Y. Lu, and G. Tsudik. Eﬃcient
techniques for privacy-preserving sharing of sensitive
information. In J. M. McCune, B. Balacheﬀ, A. Perrig,
A.-R. Sadeghi, A. Sasse, and Y. Beres, editors,
TRUST, volume 6740 of Lecture Notes in Computer
Science, pages 239–253. Springer, 2011.
[13] R. Curtmola, J. A. Garay, S. Kamara, and
R. Ostrovsky. Searchable symmetric encryption:
improved deﬁnitions and eﬃcient constructions. In
A. Juels, R. N. Wright, and S. Vimercati, editors,
ACM CCS 06, pages 79–88. ACM Press, Oct. / Nov.
2006.
[14] M. J. Freedman, Y. Ishai, B. Pinkas, and O. Reingold.
Keyword search and oblivious pseudorandom
functions. In J. Kilian, editor, TCC 2005, volume 3378
of LNCS, pages 303–324. Springer, Feb. 2005.
[15] E.-J. Goh. Secure indexes. Cryptology ePrint Archive,
Report 2003/216, 2003. http://eprint.iacr.org/.
[16] P. Golle, J. Staddon, and B. R. Waters. Secure
conjunctive keyword search over encrypted data. In
M. Jakobsson, M. Yung, and J. Zhou, editors, ACNS
04, volume 3089 of LNCS, pages 31–45. Springer, June
2004.
[17] Y. Huang and I. Goldberg. Outsourced private
information retrieval with pricing and access control.
Technical Report 2013-11, Centre for Applied
Cryptographic Research (CACR), University of
Waterloo, Feb. 2013.
[18] IARPA. Security and Privacy Assurance Research
(SPAR) Program - BAA, 2011.
http://www.iarpa.gov/solicitations_spar.html/.
[19] M. Islam, M. Kuzu, and M. Kantarcioglu. Access
pattern disclosure on searchable encryption:
Ramiﬁcation, attack and mitigation. In Proceedings of
the Symposium on Network and Distributed Systems
Security (NDSS 2012), San Diego, CA, Feb. 2012.
Internet Society.
886Group operations. G is a cyclic group of prime order p generated by an element g. H is a hash function with range in G \ {1}.
EDBSetup(DB, RDK)
Key Generation. D picks key KS and two vectors of elements KT = (k1, . . . , km) and KX = (e1, . . . , em) at random in Z ∗
p
(m = number of attributes); key KI for PRF Fp; and key KM for a symmetric authenticated encryption AuthEnc. Fp and Fτ are
PRF’s which outputs strings in respectively Z ∗
p and {0, 1}τ , and τ is a security parameter.
• Initialize XSet to an empty set, and initialize T to an empty array indexed by group elements in G.
• For each w = (i, val) ∈ W, build the tuple list t and add elements to set XSet as follows:
– Initialize t to an empty list.
– Set strap ← (H(w))KS ,
G (KT , w) ],
– Initialize c ← 0; then for all ind in DB(w) in random order:
stag ← (H(w))ki [ = F m
(Kz , Ke) ← (Fτ (strap, 1), Fτ (strap, 2)).
∗ Set rdk ← RDK(ind), e ← Enc(Ke, (ind|rdk)), xind ← Fp(KI , ind).
∗ Set c ← c + 1, zc ← Fp(Kz , c), y ← xind · z−1
∗ Set xtag ← H(w)ei ·xind [ = (F m
. Append (e, y) to t.
G (KX , w))xind ] and add xtag to XSet.
c
– T[stag] ← t.
• Create TSet ← TSetSetup0(T), and output key K = (KS , KX , KT , KI , KM ) and EDB = (TSet, XSet, KM ).
GenToken protocol
Client C on input a conjunctive query ¯w = (w1, ..., wn), where w1 is chosen as s-term, proceeds as follows:
• Pick r1, ..., rn
$
← Z ∗
p and set aj ← (H(wj ))rj for j = 1, . . . , n.
• Send to D the blinded queries a1, . . . , an and the attribute sequence av = (I(w1), . . . , I(wn)).
Data owner D on input policy P and key K proceeds as follows:
• Abort if av 6∈ P . Otherwise set av as a local output. Pick ρ1, . . . , ρn
• Set strap0 ← (a1)s, bstag0 ← (a1)ki1
·ρ1 [ = (a1)KT [i1]·ρ1 ], and bxtrap0
$
← Z ∗
p .
j ← (aj )
eij
·ρj [ = (aj )KX [ij ]·ρj ] for j = 2, . . . , n.
• Reply to C with (strap0, bstag0, bxtrap0
2, . . . , bxtrap0
n) and env = AuthEncKM (ρ1, . . . , ρn).
C sets:
• strap ← (strap0)r−1
1 ; bstag ← (bstag0)r−1
1 ; bxtrapj ← (bxtrap0
(∀j=2,...,n);
j)r−1
j
• token ← (env, strap, bstag, bxtrap2, . . . , bxtrapn).
Search protocol
Client C on input token proceeds as follows:
• Set (Kz , Ke) ← F (τ (strap, 1), F (strap, 2)), and send to E the message (env, bstag, bxtoken[1], bxtoken[2], . . .) deﬁned as follows:
– For c = 1, 2, . . ., until E sends stop:
∗ Set zc ← Fp(Kz , c) and set bxtoken[c, i] ← (bxtrapi)zc for i = 2, . . . , n.
∗ Set bxtoken[c] ← (bxtoken[c, 2], . . . , bxtoken[c, n]).
Server E on input EDB = (TSet, XSet, KM ) responds as follows:
• Upon receiving env, bstag from C, decrypt/verify env; if veriﬁcation fails return “no results” and stop.
• Set stag ← (bstag)1/ρ1 and retrieve t ← TSetRetrieve(TSet, stag) from TSet.
• For c = 1, . . . , |t| do:
– Receive bxtoken[c] from C and retrieve value (e, y) from the c-th tuple in t.
– Check if bxtoken[c, i]y/ρi ∈ XSet for all i = 2, . . . , n. If so, send e to C (else nothing is returned for this tuple).
– When last tuple in t is reached, send stop to C and halt.
For each received e client C computes (ind|rdk) ← Dec(Ke, e) and outputs (ind, rdk).
Figure 3: OSPIR-OXT Instantiated for Conjuntions with the Hashed Diffie-Hellman OPRF
887