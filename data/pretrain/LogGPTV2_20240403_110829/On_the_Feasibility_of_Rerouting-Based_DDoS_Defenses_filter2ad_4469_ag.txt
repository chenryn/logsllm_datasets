### References

1. CCR, 2002.
2. D. Massameno, “Secret CEF Attributes Part 6: The BGP Connection,” 2014. [Online]. Available: https://packetpushers.net/secretcef6-bgp/
3. R. Meier, P. Tsankov, V. Lenders, L. Vanbever, and M. Vechev, “NetHide: Secure and Practical Network Topology Obfuscation,” in Proc. USENIX Security, 2018.
4. J. Mirkovic and P. Reiher, “A Taxonomy of DDoS Attacks and DDoS Defense Mechanisms,” ACM SIGCOMM CCR, 2004.
5. B. Parno, D. Wendlandt, E. Shi, A. Perrig, B. Maggs, and Y.-C. Hu, “Portcullis: Protecting Connection Setup from Denial-of-Capability Attacks,” Proc. ACM SIGCOMM, 2007.
6. I. Pepelnjak, “Limit the Maximum BGP AS-Path Length,” 2009. [Online]. Available: http://wiki.nil.com/Limit_the_maximum_BGP_AS-path_length
7. I. Pepelnjak, “Oversized AS Paths: Cisco IOS Details,” 2009. [Online]. Available: https://blog.ipspace.net/2009/02/oversized-as-paths-cisco-ios-bug.html
8. R. Rasti, M. Murthy, N. Weaver, and V. Paxson, “Temporal Lensing and Its Application in Pulsing Denial-of-Service Attacks,” in Proc. IEEE S&P, 2015.
9. Y. Rekhter, T. Li, and S. Hares, “A Border Gateway Protocol 4 (BGP-4),” in IETF RFC 4271, 2005.
10. F. Sanchez and Z. Duan, “Region-Based BGP Announcement Filtering for Improved BGP Security,” in Proc. ACM Asia CCS, 2010.
11. J. M. Smith and M. Schuchard, “Routing Around Congestion: Defeating DDoS Attacks and Adverse Network Conditions via Reactive BGP Routing,” in Proc. IEEE S&P, 2018.
12. P. Smith, “BGP Best Practices,” in RIPE NCC Regional Meeting, 2006.
13. A. Studer and A. Perrig, “The Coremelt Attack,” in ESORICS, 2009.
14. C. Villamizar, R. Chandra, and R. Govindan, “BGP Route Flap Damping,” Tech. Rep., 1998.
15. E. Vyncke and S. Hogg, “IPv6 Internet Security for Your Network,” 2009. [Online]. Available: http://www.ciscopress.com/articles/article.asp?p=1312796&seqNum=3
16. M. Winther, “Tier 1 ISPs: What They Are and Why They Are Important,” IDC White Paper, 2006.
17. L. Xue, X. Luo, E. W. Chan, and X. Zhan, “Towards Detecting Target Link Flooding Attack,” in Proc. USENIX LISA, 2014.
18. A. Yaar, A. Perrig, and D. Song, “SIFF: A Stateless Internet Flow Filter to Mitigate DDoS Flooding Attacks,” in Proc. IEEE S&P, 2004.
19. M. S. Kang, S. B. Lee, and V. D. Gligor, “The Crossfire Attack,” in Proc. IEEE S&P, 2013.
20. X. Yang, D. Wetherall, and T. Anderson, “A DoS-Limiting Network Architecture,” in Proc. ACM SIGCOMM CCR, 2005.
21. E. Katz-Bassett, C. Scott, D. R. Choffnes, Í. Cunha, V. Valancius, N. Feamster, H. V. Madhyastha, T. Anderson, and A. Krishnamurthy, “LIFEGUARD: Practical Repair of Persistent Route Failures,” in Proc. ACM SIGCOMM, 2012.
22. Y.-M. Ke, C.-W. Chen, H.-C. Hsiao, A. Perrig, and V. Sekar, “CICADAS: Congesting the Internet with Coordinated and Decentralized Pulsating Attacks,” in Proc. ACM Asia CCS, 2016.
23. S. T. Zargar, J. Joshi, and D. Tipper, “A Survey of Defense Mechanisms Against Distributed Denial of Service (DDoS) Flooding Attacks,” IEEE Communications Surveys and Tutorials, 2013.
24. J. Zheng, Q. Li, G. Gu, J. Cao, D. K. Yau, and J. Wu, “Realtime DDoS Defense Using COTS SDN Switches via Adaptive Correlation Analysis,” IEEE Transactions on Information Forensics and Security, 2018.

---

### Appendix A: Tier-1 AS on All Possible Detour Paths

To evaluate the impact of tier-1 ASes on detour paths, we removed the edges between Ain and Aout nodes. This means that only the ASes not on the detour path can be poisoned.

**Figure 18: Number of Detour Paths Including One or More Tier-1 ASes**

We counted the number of tier-1 ASes on the 1,000 detour paths with the least number of neighbors. We also evaluated other possible detour paths between 1,000 C–D pairs.

Figure 18 shows the ratio of detour paths that include at least one tier-1 AS in 1,000 cases. Approximately 25% of the tested C–D pairs show that all their detour paths incur a large number of ASes to be poisoned as they include one or more tier-1 ASes. In nearly the rest of 75% of the cases, at least 95% of all possible routes between C and D include at least one high-degree AS. Therefore, critical traffic will usually be transited through major ASes regardless of which detour path is chosen. To achieve an isolated path for critical flows, the RAC deployer often has to poison hundreds to thousands of ASes.

---

### Appendix B: Modeling Problem [P1] to Problem MinSBCC

We first briefly review the general version of the MinSBCC problem [28] and then present the modeling from problem [P1] to MinSBCC. Interested readers may refer to the original paper of the MinSBCC problem [28] for a full description and proofs of NP-Completeness.

**Generalized MinSBCC Problem:**
Given a graph \( G = (V, E) \) where each edge \( e \in E \) has a capacity \( c_e \) and each node \( v \in V \) is assigned a weight \( w_v \), a source node \( s \), a sink node \( t \), and a capacity bound \( B \). The objective is to find an s–t cut \( (S, S) \), \( s \in S \) within the budget \( B \) such that the total node weight \( \sum_{v \in S} w_v \) is minimal.

We now model problem [P1] following the MinSBCC problem. Specifically, we consider the destination AS \( D \) as the source node \( s \) and the propagation of a BGP message sent from \( D \) to all other ASes forms a directed graph \( G \). While we keep ASes on the detour path \( R = \{C, R_1, R_2, \ldots, R_n, D\} \) as single nodes, we model each AS \( A \) that is not on the detour path with two nodes, \( A_{\text{in}} \) and \( A_{\text{out}} \). All messages received by AS \( A \) are modeled as the edges going into \( A_{\text{in}} \) and all messages sent out by \( A \) are modeled as the edges going out from \( A_{\text{out}} \). \( A_{\text{in}} \) and \( A_{\text{out}} \) have an edge with the capacity of 1 between them. All other edges are assigned an infinite capacity so that the s–t cut will only consider the finite capacity edges.

We assign the weight for \( A_{\text{in}} \) and \( A_{\text{out}} \) nodes as 0 and 1, respectively. This means if AS \( A \) has path leakage, both nodes \( A_{\text{in}} \) and \( A_{\text{out}} \) will be included in set \( S \) and the total node weight \( \sum_{v \in S} w_v \) increases by 1. If AS \( A \) does not have path leakage (e.g., because it is poisoned), only node \( A_{\text{in}} \) or no node is included in set \( S \) and the total node weight remains unchanged. All nodes corresponding to the ASes on the detour path have a weight of 0, so they will be included in \( S \). Since the MinSBCC problem aims to minimize \( \sum_{v \in S} w_v \), it is equivalent to minimizing the number of path leakages in problem [P1].

---

### Appendix C: Greedy Algorithm to Minimize Path Leakage

Our greedy algorithm consists of two phases:

1. **Calculate Isolating Sets of All ASes:**
   - We first enumerate all paths between each AS in the network and the destination AS and then calculate its isolating set by noting all ASes in \( Q \) that appear in the paths. This process is implemented efficiently using recursion with memorization.
   - Assuming there are \( k \) ASes in total that can have path leakage, we now have \( k \) isolating sets: \( S_1, S_2, \ldots, S_k \).

2. **Choose ASes to Be Poisoned:**
   - We present the multi-round process of picking neighboring ASes to poison in Algorithm 1. In each round, the algorithm selects the smallest isolating set, say \( S_i \), and includes it in the final poisoning set \( P \) (see Lines 3-10). By doing so, we have completely prevented the path leakage at AS \( i \).
   - Because the chosen isolating set \( S_i \) may overlap with other isolating sets, we remove the ASes that are already chosen to be poisoned in those sets (see Lines 15-17).
   - The algorithm stops when we have selected a sufficient number of ASes to be poisoned (see Lines 11-13).

**Algorithm 1: Choosing Poisoning ASes**

```plaintext
Require: S = {S1, S2, ..., Sk}: the set of all k isolating sets.
B: the maximum number of ASes that can be poisoned.
Ensure: P: set of ASes we choose to poison.

1: procedure CHOOSEPOISONINGASES
2:   P ← []
3:   while True do
4:     MinSet ← S[0]
5:     for all Si ∈ S do
6:       if |Si| ≤ |MinSet| then
7:         MinSet ← Si
8:       end if
9:     end for
10:    P' ← P ∪ MinSet
11:    if |P'| ≥ B then
12:      break
13:    end if
14:    S ← S \ [MinSet]
15:    for all Si ∈ S do
16:      Si ← Si \ MinSet
17:    end for
18:    P ← P'
19:  end while
20:  return P
21: end procedure
```

---

### Appendix D: Coverage of Public BGP Datasets

When the destination AS \( D \) performs the RAC defense (i.e., establishes a detour path in response to link-flooding attacks), it broadcasts one or more BGP poisoning messages. These poisoning messages are recorded in public BGP datasets (e.g., RIPE [12], RouteView [14]) approximately 10-20 minutes after they are exchanged. Currently, 528 ASes send the received BGP messages to the RIPE and RouteView data collection points. Our analysis shows that more than 99.95% of all possible detour paths for the selected 1,000 C–D pairs are monitored by these 528 ASes.

As a consequence, any poisoning message becomes public knowledge that can be easily accessed from the two BGP datasets. From the BGP poisoning pattern (i.e., the set of ASes the RAC deployer wants to avoid), one can infer the intended detour path. For example, in Figure 10, the BGP UPDATE message poisons ASes E and H, and many other direct neighbor ASes of X, Y, and Z, but does not poison ASes C, X, Y, and Z. This provides a strong indication that the BGP message is designed to establish a detour path: {C, X, Y, Z, D}.

---

### Appendix E: Inferred Filtering Practice at Top ASes

We present the list of top 20 ranked ASes and whether they belong to set \( A_{\geq 255} \) or set \( (A_{[30,255)} \setminus A_{\geq 255}) \) in Table III.

**Table III: Whether the CAIDA Top 20 Rank ASes Filter BGP UPDATE Messages with AS Path ≥ 255**

| ASN  | AS Name                  | ∈ \( A_{\geq 255} \) | ∈ \( (A_{[30,255)} \setminus A_{\geq 255}) \) |
|------|--------------------------|---------------------|----------------------------------------------|
| 3356 | Level 3                  | ✘                   | ✔                                           |
| 1299 | Telia Company AB         | ✘                   | ✔                                           |
| 174  | Cogent Comm.             | ✘                   | ✔                                           |
| 2914 | NTT America, Inc.        | ✘                   | ✔                                           |
| 3257 | GTT Comm.                | ✘                   | ✔                                           |
| 6762 | Telecom Italia           | ✘                   | ✔                                           |
| 6453 | TATA Comm.               | ✘                   | ✔                                           |
| 6939 | Hurricane Electric       | ✘                   | ✔                                           |
| 3491 | PCCW Global              | ✘                   | ✔                                           |
| 3549 | Level 3                  | ✘                   | ✔                                           |
| 1273 | Vodafone Group           | ✘                   | ✔                                           |
| 6461 | Zayo Bandwidth           | ✘                   | ✔                                           |
| 9002 | RETN Limited             | ✘                   | ✔                                           |
| 209  | Qwest Comm.              | ✘                   | ✔                                           |
| 12956| Telefonica Int            | ✘                   | ✔                                           |
| 3320 | Deutsche Tel.            | ✘                   | ✔                                           |
| 7473 | Singapore Tel.           | ✘                   | ✔                                           |
| 12389| PJSC Rostelecom          | ✘                   | ✔                                           |
| 7018 | AT&T                     | ✘                   | ✔                                           |
| 20485| TransTeleCom             | ✘                   | ✔                                           |

---

This document is authorized for limited use and downloaded from IEEE Xplore on March 18, 2021, at 12:53:09 UTC. Restrictions apply.