to find all the logs which are recorded between 2012-7-9 20:50:5 and 2012-7-9 21:29:53
C. Outlier detectionThe outlier detection from HLAer can be done in three different ways. The first way is to do outlier detection during HLAer construction, that is, during clustering of the historical log data. This relies on the clustering algorithms that have the mechanism to figure out the outliers. Outlier detection from historical data gives the idea of how the system normally runs and what typical problems the system may have, and thus gives the intuition on the problems to fix for the future. The second way is to do outlier detection offline in a batch setting after HLAer is constructed. This is done by calculating the fsdis distances of the testing data with respect to the training data (i.e., historical data for the HLAer construction). If the testing log record is far from any other14
Fig. 9: HLAer System querytraining data up to a certain threshold, then the log is considered as an outlier. This method can be used to detect most recent outliers compared to the normal history. The third way is to do outlier detection online, that is, as a new log record comes in, the outlier detection is performed concurrently. For now, HLAer performs online outlier detection by comparing the format of the new coming log record with all the templates in HLAer. Essentially, this is the idea of comparing the new coming log record with the most frequent log formats in history, and this can be done by aligning the new log with pattern profiles. If this log cannot be aligned well with any pattern profiles, then this log is considered as outlier. Meanwhile, the content of the logs should also be considered for outlier detection. This alternative is left for further exploration.VIII. 	EXPERIMENTAL RESULTS
A. Datasets
We use 12,000 log records of 13 different types to evaluate our methods and framework. Table IV summarizes the datasets. Failure and HPC are both downloaded from Los Alamos National Laboratory, High Performance Computing Research Projects: Operational Data to Support and Enable Computer Science Research14, all systems failure/interrupt data 1996-200515, which14
15-2005.csv
15
TABLE IV: The Datasets Used in Evaluation
| dataset | #samples examples | #samples examples | #samples examples |
|---|---|---|---|
| Failure |1,000 2,cluster,49,6152,80,0,0,5-Apr,5-Jun,current,part,80,1,1,0,graphics.fe,9/6/2005 14:50,9/6/2005 15:08,18,,,,,,Other Software,No |1,000 2,cluster,49,6152,80,0,0,5-Apr,5-Jun,current,part,80,1,1,0,graphics.fe,9/6/2005 14:50,9/6/2005 15:08,18,,,,,,Other Software,No |1,000 2,cluster,49,6152,80,0,0,5-Apr,5-Jun,current,part,80,1,1,0,graphics.fe,9/6/2005 14:50,9/6/2005 15:08,18,,,,,,Other Software,No || HPC |1,000 463329,resourcemgmtdaeomon node-31,server,subsys,1145553621,1,failed to configure resourcemgmt subsystem err = 10 |1,000 463329,resourcemgmtdaeomon node-31,server,subsys,1145553621,1,failed to configure resourcemgmt subsystem err = 10 |1,000 463329,resourcemgmtdaeomon node-31,server,subsys,1145553621,1,failed to configure resourcemgmt subsystem err = 10 || IIS |1,000 2012-05-25 05:43:50 192.168.10.180 GET /proxy.txt - 80 - 192.168.10.196 - 200 0 0 229 |1,000 2012-05-25 05:43:50 192.168.10.180 GET /proxy.txt - 80 - 192.168.10.196 - 200 0 0 229 |1,000 2012-05-25 05:43:50 192.168.10.180 GET /proxy.txt - 80 - 192.168.10.196 - 200 0 0 229 || Apache |1,000 Jul 20 04:02:32 www httpd[29655]: 210.143.35.21 - - “GET /images/home/sideleft-bkgd.jpg HTTP/1.1” 200 337 |1,000 Jul 20 04:02:32 www httpd[29655]: 210.143.35.21 - - “GET /images/home/sideleft-bkgd.jpg HTTP/1.1” 200 337 |1,000 Jul 20 04:02:32 www httpd[29655]: 210.143.35.21 - - “GET /images/home/sideleft-bkgd.jpg HTTP/1.1” 200 337 || Hadoopjob |1,000 2012-07-09 20:33:36,806 INFO org.apache.hadoop.mapred.JobTracker: Decommissioning 0 nodes |1,000 2012-07-09 20:33:36,806 INFO org.apache.hadoop.mapred.JobTracker: Decommissioning 0 nodes |1,000 2012-07-09 20:33:36,806 INFO org.apache.hadoop.mapred.JobTracker: Decommissioning 0 nodes || Hadoopname |1,000 2012-07-09 20:32:47,749 INFO org.apache.hadoop.ipc.Server: IPC Server handler 4 on 9000: starting |1,000 2012-07-09 20:32:47,749 INFO org.apache.hadoop.ipc.Server: IPC Server handler 4 on 9000: starting |1,000 2012-07-09 20:32:47,749 INFO org.apache.hadoop.ipc.Server: IPC Server handler 4 on 9000: starting || Hadoopdata |500 2012-07-09 20:32:48,593 INFO org.apache.hadoop.hdfs.server.datanode.DataNode: Opened info server at 41010 |500 2012-07-09 20:32:48,593 INFO org.apache.hadoop.hdfs.server.datanode.DataNode: Opened info server at 41010 |500 2012-07-09 20:32:48,593 INFO org.apache.hadoop.hdfs.server.datanode.DataNode: Opened info server at 41010 || Syslog |500 May 16 07:23:10 ns1 ftpd[12015]: wu-ftpd - TLS settings: control allow, client cert allow, data allow |500 May 16 07:23:10 ns1 ftpd[12015]: wu-ftpd - TLS settings: control allow, client cert allow, data allow |500 May 16 07:23:10 ns1 ftpd[12015]: wu-ftpd - TLS settings: control allow, client cert allow, data allow || BGL |1,000 - 1117839085 2005.06.03 R20-M1-N5-C:J17-U01 2005-06-03-15.51.25.712950 R20-M1-N5-C:J17-U01 RAS KERNEL ... |1,000 - 1117839085 2005.06.03 R20-M1-N5-C:J17-U01 2005-06-03-15.51.25.712950 R20-M1-N5-C:J17-U01 RAS KERNEL ... |1,000 - 1117839085 2005.06.03 R20-M1-N5-C:J17-U01 2005-06-03-15.51.25.712950 R20-M1-N5-C:J17-U01 RAS KERNEL ... || Liberty |1,000 - 1102911148 2004.12.12 ladmin2 Dec 12 20:12:28 src@ladmin2 .... IRQ redirection table: |1,000 - 1102911148 2004.12.12 ladmin2 Dec 12 20:12:28 src@ladmin2 .... IRQ redirection table: |1,000 - 1102911148 2004.12.12 ladmin2 Dec 12 20:12:28 src@ladmin2 .... IRQ redirection table: |
| Redstorm |1,000 - 1151696665 2006.06.30 #22# [05] Jun 30 12:44:25 #22# kernel: |1,000 - 1151696665 2006.06.30 #22# [05] Jun 30 12:44:25 #22# kernel: |alloc pages: 2-order allocation failed (gfp=0x20/0) || Spirit |1,000 - 1104566407 2005.01.01 sadmin1 Jan 1 00:00:07 sadmin1/sadmin1 kernel: hda: drive not ready for command |1,000 - 1104566407 2005.01.01 sadmin1 Jan 1 00:00:07 sadmin1/sadmin1 kernel: hda: drive not ready for command |1,000 - 1104566407 2005.01.01 sadmin1 Jan 1 00:00:07 sadmin1/sadmin1 kernel: hda: drive not ready for command || Thunderbird |Thunderbird |1,000 - 1131530521 2005.11.09 aadmin1 Nov 10 02:02:01 src@aadmin1 in.tftpd[27864]: tftp: client does not accept options |1,000 - 1131530521 2005.11.09 aadmin1 Nov 10 02:02:01 src@aadmin1 in.tftpd[27864]: tftp: client does not accept options |records the system failure/interrupt information of high-performance computing clusters, and system event information16. IIS contains logs from Microsoft Internet Information Services 7.5 from our internal web server. Apache contains logs from our internal Apache web server. Hadoopjob, Hadoopname and Hadoopdata are logs from an internal hadoop system, particularly from job tracker, hadoop name node and hadoop data node. Syslog is a set of system logs from an internal server. BGL, Liberty, Redstorm, Spirit and Thunderbird are downloaded from Sandia National Laboratories, Supercomputer Event Logs for automatically detecting and diagnosing failures in large-scale computer systems17. 1,000 samples from each dataset are randomly drawn (except 500 from Hadoopdata and Syslog due to limited dataset size). Examples of each dataset are presented in Table IV. Since the three Hadoop datasets are from a same system, they have very similar format. The last five datasets are also similar to each other in terms of their unique formats (e.g., logs start with “-” and a big number). The diversity of the different log formats and natures (e.g., Failure is particularly for logging system failures and interrupts whereas Apache is for server events) provides a good testing case for the generality of LCT.B. Similarity/distance measurementsFigure 10 and Figure 11 show the pairwise similarities of the datasets calculated from fssim as defined in Equation 1 and cosine similarity from bag-of-word representation [3] of log records, respectively. Bag-of-word representation is a way to present a document as a vector of words and their frequencies in the document, where there is no ordering among the words. It is widely used in text mining and other problems where an entire entity can be represented as an orderless ensemble of small pieces. For demonstration purposes, all the log records are ordered in a way such that the logs from a same dataset are arranged together. Figure 10 has clear block structures along the diagonal. This demonstrates that fssim has significant power to distinguish logs from different formats. However, as in Figure 11 the conventional cosine similarity on bag-of-word features of the logs cannot capture the structure of log data. This is due to a special characteristics of log data, that is, each log record is much shorter than a document, whereas the cardinality of the word dictionary is relatively larger than the log record length, and thus all the cosine similarity tends to be very close to 0. Figure 12 demonstrates the reordered pairwise distances after clustering as well as the hierarchical structures after clustering. In Figure 12, ✏ = 0.5 and minpts = 10. Accordingly, the reachability distance is presented in Figure 13. Figure 12 clearly shows the blocks with small distances along the diagonal. In specific, there are three big blocks along the diagonal. The first block occupies the region with x-axis [0:2000] and y-axis [0:2000] and includes the majority of the datasets Failure and HPC. The second block occupies the region with x-axis [2000:8500] and y-axis [2000:8500] and includes the majority of the datasets BGL, Liberty, Redstorm, Spirit and Thunderbird. The third block occupies the region with x-axis [8500:12000] and y-axis [8500:12000] and includes the majority of the datasets Hadoopjob, Hadoopname and Hadoopdata. IIS, Apache and Syslog form clusters that fall within the second and third blocks. IIS forms two clusters around x-axis 8500 and [11000:12000]. Apache forms two clusters around x-axis 6000 and [7300:7800]. Syslog forms one cluster around x-axis [4380:4880]. In addition, hierarchical structures have been clearly demonstrated in Figure 12 as well. For example, there are two small clusters along the diagonal in the region of x-axis [1:500] and [500:1000], respectively, both of which belong to a larger cluster occupying x-axis [0:1000] region, and this cluster is part of even higher-level cluster in region x-axis [0:2000]. The visualization of the pairwise distances from fsdis shows that the similarity function fssim and the distance function fsdis can easily capture both the formats and content of heterogeneous logs.16    255 EVENTS.csv 
17
16
Fig. 10: The fssim similarity function on template vector 	Fig. 11: The cos similarity on bag-of-word features
Fig. 12: Reordered pairwise distance for training data
C. Clustering performanceFor the optimal parametrization ✏ = 0.2 and minpts = 10, out of 12000 log records, 975 records (8.1%) have been clustered as outliers, which are either far away from other data points, or only have a small amount. Table VIII shows some examples of the detected outliers. Although no ground truth is available to determine whether these records should be considered as outliers in their specific system environment, these log records can still be interpreted as to represent either the system status change (e.g., the first few logs in Table VIII) or system failures or errors (e.g., the last few logs in Table VIII). Thus, detection of such informative log records is still meaningful. In addition, for the datasets used in experiments, OPTICS only takes 1.379 seconds to generate clusters. Totally 128 clusters have been generated, out of which 118 clusters only contain logs from a same dataset. Clusters are plotted in Figure 13 and Figure 14 (the green lines; -1 as cluster ID corresponds to noise/outliers). In specific, Figure 14 shows the clustering results for the combination of Failure, HPC and BGL, where, even after the reordering, the first 1000 log records are all of Failure and the next 773 log records are from HPC, and last 219 log records are from BGL. 10 clusters are generated in total, 2 for Failure and 7 for HPC, and 1 (cluster 10) for BGL, with 55 outliers in total, 9 for Failure, 38 for HPC and 8 for BGL, respectively. There is a clear cut between the three datasets. The 9 outliers for Failure are listed in Table V, which are the records that have missing information in the first few fields where comma is the delimiter. Examples of outliers for HPC are listed in Table VI where comma is also the delimiter. The outliers correspond to the system errors that17
| reachability distance |  1 |  0 |  2000 | reachability distance (epsilon = 0.2, minpts = 10) | reachability distance (epsilon = 0.2, minpts = 10) | reachability distance (epsilon = 0.2, minpts = 10) |  10000 |  120 | cluster ID |
|---|---|---|---|---|---|---|---|---|---|
| reachability distance | 0.8 | 0 | 2000 |HLAer cluster ID |HLAer cluster ID |HLAer cluster ID | 10000 | 100 |cluster ID || reachability distance | 0.8 | 0 | 2000 |CLUTO cluster ID |CLUTO cluster ID |CLUTO cluster ID | 10000 | 100 |cluster ID |
| reachability distance | 0.6 | 0 | 2000 |CLUTO cluster ID |CLUTO cluster ID |CLUTO cluster ID | 10000 | 80 |cluster ID |
| reachability distance | 0.6 | 0 | 2000 |CLUTO cluster ID |CLUTO cluster ID |CLUTO cluster ID | 10000 | 60 |cluster ID || reachability distance | 0.4 | 0 | 2000 |CLUTO cluster ID |CLUTO cluster ID |CLUTO cluster ID | 10000 | 60 |cluster ID |
| reachability distance | 0.4 | 0 | 2000 |CLUTO cluster ID |CLUTO cluster ID |CLUTO cluster ID | 10000 | 40 |cluster ID |
| reachability distance | 0.4 | 0 | 2000 | 4000 | 6000 | 8000 | 10000 | 40 |cluster ID |
| reachability distance | 0.2 | 0 | 2000 | 4000 | 6000 | 8000 | 10000 | 20 |cluster ID || reachability distance | 0.2 | 0 | 2000 | 4000 | 6000 | 8000 | 10000 | 0 |cluster ID |
| reachability distance | 0 | 0 | 2000 | 4000 | 6000 | 8000 | 10000 | 0 |cluster ID |
| reachability distance | 0 | 0 | 2000 | 4000 | 6000 | 8000 | 10000 | 12000 |cluster ID |
reordered indiced
Fig. 13: Reachability distances and clusters| reachability distance |  0.8 |  0 |  200 | reachability distance (epsilon = 0.2, minpts = 10) | reachability distance (epsilon = 0.2, minpts = 10) | reachability distance (epsilon = 0.2, minpts = 10) | reachability distance (epsilon = 0.2, minpts = 10) | reachability distance (epsilon = 0.2, minpts = 10) | reachability distance (epsilon = 0.2, minpts = 10) |  1600 |  1800 |  9 | cluster ID ||---|---|---|---|---|---|---|---|---|---|---|---|---|---|
| reachability distance | 0.7 | 0 | 200 |reachability distance (epsilon = 0.2, minpts = 10) |reachability distance (epsilon = 0.2, minpts = 10) |reachability distance (epsilon = 0.2, minpts = 10) |reachability distance (epsilon = 0.2, minpts = 10) |reachability distance (epsilon = 0.2, minpts = 10) |reachability distance (epsilon = 0.2, minpts = 10) | 1600 | 1800 | 9 |cluster ID || reachability distance | 0.7 | 0 | 200 |cluster ID |cluster ID |cluster ID |cluster ID |cluster ID |cluster ID | 1600 | 1800 | 9 |cluster ID |
| reachability distance | 0.6 | 0 | 200 |CLUTO cluster ID |CLUTO cluster ID |CLUTO cluster ID |CLUTO cluster ID |CLUTO cluster ID |CLUTO cluster ID | 1600 | 1800 | 6 |cluster ID || reachability distance | 0.5 | 0 | 200 |CLUTO cluster ID |CLUTO cluster ID |CLUTO cluster ID |CLUTO cluster ID |CLUTO cluster ID |CLUTO cluster ID | 1600 | 1800 | 6 |cluster ID |
| reachability distance | 0.4 | 0 | 200 | 400 | 600 | 800 | 1000 | 1200 | 1400 | 1600 | 1800 | 6 |cluster ID |
| reachability distance | 0.4 | 0 | 200 | 400 | 600 | 800 | 1000 | 1200 | 1400 | 1600 | 1800 | 3 |cluster ID || reachability distance | 0.3 | 0 | 200 | 400 | 600 | 800 | 1000 | 1200 | 1400 | 1600 | 1800 | 3 |cluster ID |
| reachability distance | 0.2 | 0 | 200 | 400 | 600 | 800 | 1000 | 1200 | 1400 | 1600 | 1800 | 3 |cluster ID |
| reachability distance | 0.2 | 0 | 200 | 400 | 600 | 800 | 1000 | 1200 | 1400 | 1600 | 1800 | 0 |cluster ID |
| reachability distance | 0.1 | 0 | 200 | 400 | 600 | 800 | 1000 | 1200 | 1400 | 1600 | 1800 | 0 |cluster ID || reachability distance | 0 | 0 | 200 | 400 | 600 | 800 | 1000 | 1200 | 1400 | 1600 | 1800 | 0 |cluster ID |
| reachability distance | 0 | 0 | 200 | 400 | 600 | 800 | 1000 | 1200 | 1400 | 1600 | 1800 | 2000 |cluster ID |
reordered indiced
Fig. 14: Reachability distances and clusters for Failure and HPC