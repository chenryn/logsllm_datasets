目录
前言 1.1
修订记录 1.2
如何贡献 1.3
Docker 简介 1.4
什么是 Docker 1.4.1
为什么要用 Docker 1.4.2
基本概念 1.5
镜像 1.5.1
容器 1.5.2
仓库 1.5.3
安装 Docker 1.6
Ubuntu、Debian 1.6.1
CentOS 1.6.2
macOS 1.6.3
镜像加速器 1.6.4
使用镜像 1.7
获取镜像 1.7.1
列出镜像 1.7.2
利用 commit 理解镜像构成 1.7.3
使用 Dockerfile 定制镜像 1.7.4
Dockerfile 指令详解 1.7.5
COPY 复制文件 1.7.5.1
ADD 更高级的复制文件 1.7.5.2
CMD 容器启动命令 1.7.5.3
ENTRYPOINT 入口点 1.7.5.4
ENV 设置环境变量 1.7.5.5
ARG 构建参数 1.7.5.6
2
VOLUME 定义匿名卷 1.7.5.7
EXPOSE 暴露端口 1.7.5.8
WORKDIR 指定工作目录 1.7.5.9
USER 指定当前用户 1.7.5.10
HEALTHCHECK 健康检查 1.7.5.11
ONBUILD 为他人作嫁衣裳 1.7.5.12
参考文档 1.7.5.13
其它制作镜像的方式 1.7.6
删除本地镜像 1.7.7
实现原理 1.7.8
操作容器 1.8
启动 1.8.1
守护态运行 1.8.2
终止 1.8.3
进入容器 1.8.4
导出和导入 1.8.5
删除 1.8.6
访问仓库 1.9
Docker Hub 1.9.1
私有仓库 1.9.2
配置文件 1.9.3
数据管理 1.10
数据卷 1.10.1
数据卷容器 1.10.2
备份、恢复、迁移数据卷 1.10.3
使用网络 1.11
外部访问容器 1.11.1
容器互联 1.11.2
高级网络配置 1.12
快速配置指南 1.12.1
3
配置 DNS 1.12.2
容器访问控制 1.12.3
端口映射实现 1.12.4
配置 docker0 网桥 1.12.5
自定义网桥 1.12.6
工具和示例 1.12.7
编辑网络配置文件 1.12.8
实例：创建一个点到点连接 1.12.9
实战案例 1.13
使用 Supervisor 来管理进程 1.13.1
创建 tomcat\/weblogic 集群 1.13.2
多台物理主机之间的容器互联 1.13.3
标准化开发测试和生产环境 1.13.4
安全 1.14
内核命名空间 1.14.1
控制组 1.14.2
服务端防护 1.14.3
内核能力机制 1.14.4
其它安全特性 1.14.5
总结 1.14.6
底层实现 1.15
基本架构 1.15.1
命名空间 1.15.2
控制组 1.15.3
联合文件系统 1.15.4
容器格式 1.15.5
网络 1.15.6
Docker Compose 项目 1.16
简介 1.16.1
安装与卸载 1.16.2
4
使用 1.16.3
命令说明 1.16.4
YAML 模板文件 1.16.5
实战 Django 1.16.6
实战 Rails 1.16.7
实战 wordpress 1.16.8
Docker Machine 项目 1.17
简介 1.17.1
安装 1.17.2
使用 1.17.3
Docker Swarm 项目 1.18
简介 1.18.1
安装 1.18.2
使用 1.18.3
调度器 1.18.4
过滤器 1.18.5
Etcd 项目 1.19
简介 1.19.1
安装 1.19.2
使用 etcdctl 1.19.3
CoreOS 项目 1.20
简介 1.20.1
工具 1.20.2
快速搭建CoreOS集群 1.20.3
Kubernetes 项目 1.21
简介 1.21.1
快速上手 1.21.2
基本概念 1.21.3
kubectl 使用 1.21.4
架构设计 1.21.5
5
Mesos 项目 1.22
简介 1.22.1
安装与使用 1.22.2
原理与架构 1.22.3
配置项解析 1.22.4
常见框架 1.22.5
容器与云计算 1.23
简介 1.23.1
亚马逊云 1.23.2
腾讯云 1.23.3
阿里云 1.23.4
小结 1.23.5
附录 1.24
附录一：常见问题总结 1.24.1
附录二：热门镜像介绍 1.24.2
Ubuntu 1.24.2.1
CentOS 1.24.2.2
MySQL 1.24.2.3
MongoDB 1.24.2.4
Redis 1.24.2.5
Nginx 1.24.2.6
WordPress 1.24.2.7
Node.js 1.24.2.8
附录三：Docker 命令查询 1.24.3
附录四：资源链接 1.24.4
6
前言
Docker — 从入门到实践
0.8.1
Docker 是个划时代的开源项目，它彻底释放了计算虚拟化的威力，极大提高了应
用的运行效率，降低了云计算资源供应的成本！ 使用 Docker，可以让应用的部
署、测试和分发都变得前所未有的高效和轻松！
无论是应用开发者、运维人员、还是其他信息技术从业人员，都有必要认识和掌握
Docker，以在有限的时间内做更多有意义的事。
本开源书籍既适用于具备基础 Linux 知识的 Docker 初学者，也希望可供理解原理
和实现的高级用户参考。同时，书中给出的实践案例，可供在进行实际部署时借
鉴。前六章为基础内容，供用户理解 Docker 的基本概念和操作；7 ~ 9 章介绍一些
高级操作；第 10 章给出典型的应用场景和实践案例；11、12 章介绍关于 Docker
安全和实现技术等高级话题。后续章节则分别介绍一些相关的热门开源项目。
在线阅读：GitBook 或 Github。
pdf 版本 下载
epub 版本 下载
Docker 自身仍在快速发展中，生态环境也在蓬勃成长。欢迎参与维护项目：如何
贡献。
修订记录
贡献者名单
技术交流
欢迎关注 DockerPool 社区微博 @dockerpool，或加入 Docker 技术交流 QQ 群或
微信组，分享 Docker 资源，交流 Docker 技术。
QQ 群 I （已满）：341410255
QQ 群 II （已满）：419042067
QQ 群 III （已满）：210028779
QQ 群 IV （已满）：483702734
QQ 群 V （已满）：460598761
7
前言
QQ 群 VI （已满）：581983671
QQ 群 VII （已满）：252403484
QQ 群 VIII（已满）：544818750
QQ 群 IX （已满）：571502246
QQ 群 X （可加）：366203473
进阶学习
图 1.1.1 - Docker 技术入门与实战
《Docker 技术入门与实战》第二版已经正式出版，针对第一版进行内容升级，欢
迎大家阅读使用并反馈建议。
8
前言
京东图书
China-Pub
当当图书
亚马逊图书
鼓励项目
欢迎鼓励项目一杯 coffee~
图 1.1.2 - coffee
9
前言
10
修订记录
主要修订记录
0.8.0: 2017-01-08
修正文字内容
根据最新版本（1.12）修订安装使用
补充附录章节
0.7.0: 2016-06-12
根据最新版本进行命令调整
修正若干文字描述
0.6.0: 2015-12-24
补充 Machine 项目
修正若干 bug
0.5.0: 2015-06-29
添加 Compose 项目
添加 Machine 项目
添加 Swarm 项目
完善 Kubernetes 项目内容
添加 Mesos 项目内容
0.4.0: 2015-05-08
添加 Etcd 项目
添加 Fig 项目
添加 CoreOS 项目
添加 Kubernetes 项目
0.3.0: 2014-11-25
完成仓库章节；
重写安全章节；
修正底层实现章节的架构、命名空间、控制组、文件系统、容器格式等内
容；
添加对常见仓库和镜像的介绍；
添加 Dockerfile 的介绍；
重新校订中英文混排格式。
11
修订记录
修订文字表达。
发布繁体版本分支：zh-Hant。
0.2.0: 2014-09-18
对照官方文档重写介绍、基本概念、安装、镜像、容器、仓库、数据管
理、网络等章节；
添加底层实现章节；
添加命令查询和资源链接章节；
其它修正。
0.1.0: 2014-09-05
添加基本内容;
修正错别字和表达不通顺的地方。
12
如何贡献
如何贡献项目
在 GitHub 上 fork 到自己的仓库，如 docker_user/docker_practice ，
然后 clone 到本地，并设置用户信息。
$ git clone PI:EMAIL:docker_user/docker_practice.git
$ cd docker_practice
$ git config user.name "yourname"
$ git config user.email "your email"
修改代码后提交，并推送到自己的仓库。
$ #do some change on the content
$ git commit -am "Fix issue #1: change helo to hello"
$ git push
在 GitHub 网站上提交 pull request。
定期使用项目仓库内容更新自己仓库内容。
$ git remote add upstream https://github.com/yeasy/docker_pr
actice
$ git fetch upstream
$ git checkout master
$ git rebase upstream/master
$ git push -f origin master
13
Docker 简介
简介