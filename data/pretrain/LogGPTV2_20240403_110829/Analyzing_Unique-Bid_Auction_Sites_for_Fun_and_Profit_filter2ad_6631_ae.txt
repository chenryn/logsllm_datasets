Q(t8)
bid
9.99
φ
φ
Q(t8)
bid
φ
10.00
φ
φ
φ
9.98
φ
id
10
2
1
id
2
10
4
3
1
10
5
Figure 16. “Catch all non disqualiﬁed bids” strategy example. Finding two disqualiﬁed bid groups in
a three bid interval, allows us to catch a yet unbid leading qualiﬁed bid of 9.99.
5.4 Simulations With Winning Strategies
We executed 50 simulation, with the same parameters
as in Table 3. When adding a user utilizing the “catch all
non-disqualiﬁed bids” strategy with n = 3, this user won
every single auction with µexpense = 170.45 and µprof it =
129.55. Changing to the “Bid Block” strategy yields a 93%
wins, with µexpense = 163.51 and µprof it = 118.12. Note
that the “catch all non-disqualiﬁed bids” strategy is more
conservative and works hard to minimize the chances of
other bidders, thus is spends more, but compensates the
extra expense with a perfect win probability. The simpler
“Bid Block” strategy spends slightly less, but shows a lower
proﬁt because it occasionally loses the auction. We did
not simulate the intermediate “Disqualifying First Places”
strategy once we saw that the simpler “Bid Block” strategy
works so well.
6 Live Experiments With a Real Site
6.1 Background
With our set of strategies doing quite impressively in the
simulations, we set to try them out in the ﬁeld. Our targeted
site was one of the largest HUBA in the UK. This site holds
a bid-credit auction in which the winner takes £50 worth
of credits, the maximal bid is £5, bids cost £1 and the bids
quota is 500. Each auction grants 4 free bids and 5 half-
price bids, which as their name suggests, cost only £0.5.
The auction duration is up to 24 hours, and if it is not met,
the site usually removes the quota restriction. The site pub-
lishes the Q and DQ tables, but the inner ordering of the
disqualiﬁed bids groups is not provided.
6.2 Reverse-Engineering the Protocol
The bidding process takes place inside the bidder’s
browser. In order to replace the limited client running in-
side the browser with our own agent, we need to gener-
ate requests conforming to the protocol the server expects.
In order to do so, we have to understand the client-server
communication protocol. As SSL encryption is common
to Internet auction sites, simply running a sniffer is not
enough. Instead, we used the HTTPFox plug-in for the Fire-
fox browser [1]. Using this tool, we could see all the com-
munication going to and from the browser at the application
level. Inspecting the data revealed a fairly straightforward
POST request with the bid value encoded in its ﬁelds. An
HTTP header cookie received in the site login phase is sent
during the session in order to identify the bidder. The re-
sponse of the POST request has the signal encoded within.
We used an HTTP library to implement the protocol and
programmatically handle the bidding process.
During the inspection of the protocol, we revealed a
faulty implementation common to most of the sites we sur-
veyed: while sending a bid uses an encrypted channel, the
sampling of the current auction’s state together with the po-
sitional tables data is transferred over a non encrypted chan-
nel. A possible reason is reducing server load. As stated,
each player sees his own bids exposed, but not those of the
other players. If a player can eavesdrop on outgoing trafﬁc
of the server, he will have all of the bidders bids exposed,
given that each of them is currently viewing the site.
6.3 Results
We participated in 14 bid-credits auctions, where we
used our “Bid Block” strategy (which is parameter-free, and
thus especially robust).
It was implemented as a Python
script following Appendix B.3 with the addition of the pro-
tocol handling code. We were able to win 13 of these, accu-
mulating £650. We risked some money in the ﬁrst auction,
which we recovered as bid credits from our winnings, and
in all further auctions we used the credits we won. With
these winnings we also tried our strategy in two other types
of auction:
1. SanDisk Clip: an MP3 player, worth £32. Max bid is
£5, £0.5 cost per bid, and the bids quota is 300. Each
player gets 4 free bids and 5 half-priced.
2. Amazon Kindle Fire:
the low-end fourth generation
Kindle reader worth £80. Max bid is £12 , £1 cost per
bid, and the bids quota is 700. Each player gets 10
half-priced bids.
We were able to win all 3 SanDisk Clip auctions, and 4 out
of the 5 Kindle devices using the credits we won, adding
£416 to our winnings. (Since our goal was only to test the
practicality of the strategies, we did not claim the goods,
and let all our bid-credits expire.)
6.4 Ethical Considerations
Conducting live experimentation with unique-bid auc-
tions affects both the site owner and auction participants.
Our choice to avoid collecting the prizes ensures that the
auction owner is not harmed ﬁnancially (in fact it increases
the owner’s proﬁts). Moreover, even without abandoning
the winnings, our experiments would not have caused the
auction site an immediate monetary loss, since all our bids
were properly paid for. If there is any harm to the site, it is
indirect: an automated strategy with a high win probability
may undermine the perception of fairness of the auctions.
We do acknowledge that our experiments did harm some of
the auction bidders, by lowering each individual’s chance
of winning; for a heavy bidder this could be quantiﬁed as
monetary loss of a few pounds per auction.
However, at the time we conducted out experiments at
the UK site (during July 2011), the site’s Terms of Ser-
vice (ToS) did not forbid automated bidding. Only after
our work (and perhaps in part because of our work), the site
actually changed the ToS to include language that speciﬁ-
cally forbids automated bidding. Hence, the site owner, and
the other players, that should have read the ToS that was
in force at the time, could have anticipated that automated
players may participate. Therefore one can argue that they
assumed the risk knowingly, or at least by default.
We note that the ethical decisions we made were ap-
proved by the Tel Aviv University ethics committee.
7 Concluding Remarks
Unique-Bid auctions are drawing attention in recent
years, from both practitioners (due to the seemingly attrac-
tive prices) and the research community (due to their un-
usual economic and game-theoretical structure). Our ﬁnd-
ings suggest that popular Unique-Bid auction systems are
vulnerable to automated strategies that perform much better,
and discover much more information, than human players.
Our strongest techniques exploit side signals revealed by
the auction sites, and use strategic bidding to amplify these
signals. While side signals serve various legal and psycho-
logical purposes, our results show that their strategic impli-
cations must be considered more thoroughly.
Appendix
We use Python-like pseudo code in all of the following
algorithms.
A The Back-Propagation Algorithm (BPA)
def BPA(Q,DQ, t ) :
len ( t ) ==1:
i f
return
q_ops= editops (Q( t [ −2] ,Q( t [ −1])
dq_ops= editops (DQ( t [ −2] ,DQ( t [ −1])
for dq_op in dq_ops [ ’ equal ’ ] :
copy_offers (DQ( t [ −2]) ,DQ( t [ −1]) )
for dq_op in dq_ops [ ’ i n s e r t ’ ] :
d q _ i n s e r t s . append ( dq_op )
i f not verify_DQ_correctness (DQ( t [ −2]) )
continue
for q_op in q_ops [ equal ] :
copy_offers (Q( t [ −2]) ,Q( t [ −1]) )
for q_op in q_ops [ i n s e r t ] :
nop #no i n t e r e s t i n g e f f e c t on Q( t [ −2])
for q_op in q_ops [ d e l e t e ] :
for dq_op in d q _ i n s e r t s :
( dq_op [ o f f e r ]
i f dq_op [ b i d d e r _ i d ]== q_op [ b i d d e r _ i d ] :
i f not
Q( t [ −2]) [ dq_op [ i d x ] ] = dq_op [ o f f e r ]
i f not verify_Q_correctness (Q( t [ −2]) )
continue
r e t =BPA(Q,DQ, t [ : − 2 ] )
i f
r e t :
return
p r i n t
’ f a i l e d . exhausted a l l paths ’
in DQ( t [ −2]) [ o f f e r s ] ) :
def verify_DQ_correctness (DQ) :
# asserts we keep the f o l l o w i n g i n v a r i a n t :
#DQ o f f e r s are non−i n c r e a s i n g
def verify_Q_correctness (DQ) :
# asserts we keep the f o l l o w i n g i n v a r i a n t s :
# a l l o f f e r s i n Q are unique
#Q o f f e r s are s t r i c t decreasing
o f r 2 =prev_bids [ i d x +1]
ngaps= dq_group_count_at_interval ( ofr1 , o f r 2 )
i f
return ( o f r 1 + o f r 2 ) /2
( ngaps != 0) :
def dq_group_count_at_interval ( ofr1 , o f r 2 ) :
#merge w i t h our previous bids
DQ. merge_collection ( prev_bids )
DQinterval =DQ[DQ. index ( o f r 1 ) :DQ. index ( o f r 2 ) ]
count=1
# f o r s i m p l i c i t y , we assume
# disq . groups w i t h i n t e r n a l o r d e r i n g
i d x in range ( len ( DQinterval )−1) :
for
id1 = DQinterval [ i d x ]
id2 = DQinterval [ i d x +1]
i f
count+= 1
return count
id1 >= id2 :
B.2 Disqualifying First Places
def d i s q _ f i r s t _ p l a c e s _ s t r a t e g y ( range_min ,
range_max ) :
# f i r s t
while ( True ) :
, manually l o c a t e q u a l i f i e d p o s i t i o n
# i f we obtained f i r s t p o s i t i o n , we w a i t
i f ( caught_top_place ( ) ) :
continue
d i s q _ f i r s t _ p l a c e ( range_min ,
range_max )
range_max ) :
/ 2
def d i s q _ f i r s t _ p l a c e ( range_min ,
middle =( range_min + range_max )
s i g n a l = bid ( middle )
i f ( s i g n a l ==HI
) :
return d i s q _ f i r s t _ p l a c e ( range_min , middle )
return d i s q _ f i r s t _ p l a c e ( middle ,
range_max )
e l i f ( s i g n a l ==LOW ) :
e l i f ( s i g n a l ==EQUAL ) :
return middle
B Automated Strategies Algorithms
B.1 Catch All Non Disqualiﬁed Bids
B.3 Bid Block
def c a t c h _ a l l _ n o n _ d i s q u a l i f i e d _ b i d s ( ) :
while ( True ) :
#we may wish to hold our a c t i o n
# i f we have n leading o f f e r s
i f ( caught_top_places ( ) ) :
continue
a c t i o n = f i n d _ n o n _ d i s q u a l i f i e d _ g a p s ( )
i f ( a c t i o n ) :
bid ( a c t i o n )
f i n d _ n o n _ d i s q u a l i f i e d _ g a p s ( ) :
i d x in range ( len ( prev_bids )−1) :
def
for
o f r 1 =prev_bids [ i d x ]
def bid_block ( range_min ,
range_max )
range_max ) :
f i r s t = d i s q _ f i r s t _ p l a c e ( range_min ,
bid_value= f i r s t −i
while ( True ) :
# avoid w a i t i n g f o r s i g n a l s boosts bid r a t e
#as we u t i l i z e t h i s method near
#end we can te rmina te w i t h the auction , or
# stop manually i f
bid ( bid_value )
bid_value−=1
topmost p o s i t i o n s obtained
the auction ’ s
C The Simulation Parameters
Table 3. Simulation parameters
Auction duration
Number of bidders
Winnings
Max bid price
Cost per bid
Free bids
Bidders ratio
2-bids times
2-bids bid-value
heavy bursts number
2-burst parameters
18000 sec
µ = 132.41, σ = 29.216
300
10.00
6
2
µ = 13.5, σ = 5.8
(An average of 13.5 2-bids bidders per heavy bidder)
uniformly distributed
bimodal truncated normal (see Section 3.4.1)
2 or 4 (uniformly)
start times(sec):
µ1 = 10365 σ1 = 5628
µ2 = 15772 σ2 = 3820
targeted position:
Number of bids:
µ1 = 13 σ1 = 11
µ2 = 3
µ1 = 5
µ2 = 15 σ2 = 15
σ2 = 6
σ1 = 6
4-burst parameters
start times(sec):
(cid:40)
(cid:40)
(cid:40)
σ1 = 5069
µ1 = 8572
µ2 = 12754 σ2 = 4302
µ3 = 14756 σ3 = 2883
µ4 = 16703 σ4 = 1865
µ1 = 18 σ1 = 16
µ2 = 13 σ2 = 13
µ3 = 9
µ4 = 2
µ1 = 4
µ2 = 4
µ3 = 6
µ4 = 16 σ4 = 20
σ3 = 9
σ4 = 9
σ1 = 3
σ2 = 6
σ3 = 7
targeted position:
number of bids:
consecutive bids delay
µ = 11.82, σ = 17.70
References
[1] HTTPFox - An HTTP analyzer addon for Firefox.
http://code.google.com/p/httpfox/.
[2] Numpy - Scientiﬁc Computing Tools For Python.
http://numpy.scipy.org/.
[3] PyModelFit: model-ﬁtting framework. http://
packages.python.org/PyModelFit/.
[4] SciPy - Scientiﬁc tools for Python. http://www.
scipy.org/.
[5] ARIELY, D., OCKENFELS, A., AND ROTH, A. E.
An Experimental Analysis of Ending Rules in Inter-
net Auctions. RAND JOURNAL OF ECONOMICS 36
(2005), 891 – 908.
[6] ARIELY, D., AND SIMONSON, I. Buying, bidding,
playing, or competing? Value assessment and decision
dynamics in online auctions. Journal of Consumer
Psychology 13, 1 (2003), 113–123.
[7] BAJARI, P., AND HORTACSU, A. The winner’s curse,
reserve prices, and endogenous entry: empirical in-
sights from eBay auctions. RAND Journal of Eco-
nomics (2003), 329–355.
[8] BAPNA, R., GOES, P., AND GUPTA, A. Replicating
online Yankee auctions to analyze auctioneers’ and
bidders’ strategies. Information Systems Research 14,
3 (Sept. 2003), 244–268.
[9] BERTSIMAS, D., HAWKINS, J., AND PERAKIS, G.
Optimal bidding in online auctions. Journal of Rev-
enue and Pricing Management 8, 1 (Jan. 2009), 21–
41.
[10] EICHBERGER, J., AND VINOGRADOV, D. Least un-
matched price auctions: A ﬁrst approach. University
of Heidelberg, Discussion Paper 471 (2008).
[11] GALLICE, A. Lowest Unique Bid Auctions with Sig-
nals. Carlo Alberto Notebooks 2009, 112 (2009).
[12] GONUL, F., AND LESZCZYC, P. Snipe bidding be-
International Journal of
haviour in eBay auctions.
Electronic Marketing and Retailing 4, 1 (2011), 16–
29.
[13] HOUBA, H. E. D., VAN DER LAAN, D., AND VELD-
HUIZEN, D. The Unique-Lowest Sealed-Bid Auction.
SSRN Electronic Journal (2008).
[14] JANK, W., AND SHMUELI, G. Modelling concur-
rency of events in on-line auctions via spatiotemporal
semiparametric models. Journal of the Royal Statis-
tical Society: Series C (Applied Statistics) 56, 1 (Jan.
2007), 1–27.
[15] JANK, W., AND ZHANG, S. An Automated and Data-
IN-
Driven Bidding Strategy for Online Auctions.
FORMS Journal on Computing 23, 2 (Aug. 2010),
238–253.
[16] JIANG, A., AND LEYTON-BROWN, K. Estimating
bidders valuation distributions in online auctions. In
Proceedings of IJCAI-05 Workshop on Game Theo-
retic and Decision Theoretic Agents (2005), In Pro-
ceedings of IJCAI-05 Workshop on Game Theoretic
and Decision Theoretic Agents, pp. 98–107.
[17] KLEMPERER, P. Auctions: Theory and Practice.
SSRN Electronic Journal (2004).
[18] KRISHNA, V. Auction Theory. Academic Press, 2002.
[19] LEVENSHTEIN, V. Binary codes capable of correct-
ing deletions, insertions, and reversals. Soviet Physics
Doklady 10, 8 (1966), 707 – 710.
[20] MEHLENBACHER, A. Multiagent System Platform
for Auction Simulations. Department Discussion Pa-
pers, University of Victoria (2007).
[21] MILGROM, P.
Putting Auction Theory to Work
(Churchill Lectures in Economics). Cambridge Uni-
versity Press, 2004.
[22] MIZUTA, H., AND STEIGLITZ, K. Agent-based sim-
ulation of dynamic online auctions. 1772–1777.
[23] OCKENFELS, A., AND ROTH, A. The timing of bids
in internet auctions: Market design, bidder behavior,
and artiﬁcial agents. AI magazine 23, 3 (2002), 79.
[24] PIGOLOTTI, S., BERNHARDSSON, S., JUUL, J.,
GALSTER, G., AND VIVO, P. Equilibrium strategy
and population-size effects in lowest unique bid auc-
tions. Arxiv preprint arXiv:1105.0819 (Apr. 2011).
[25] RAPOPORT, A., OTSUBO, H., KIM, B., AND STEIN,
W. Unique bid auction games. Jena Economic Re-
search Papers 5 (2009).
[26] RAVIV, Y., AND VIRAG, G. Gambling by auctions.
International Journal of Industrial Organization 27, 3
(2009), 369–378.
[27] SCARSINI, M., AND SOLAN, E. Lowest Unique Bid
Auctions. Arxiv preprint arXiv:1007.4264 (2010).
[28] SHMUELI, G., RUSSO, R. P., AND JANK, W. The
BARISTA: A model for bid arrivals in online auctions.
Annals of Applied Statistics 1, 2 (Dec. 2007), 412–
441.
[29] STEINER, I.
Italy Shuts Down Lowest-Bid Auction
Sites. eCommerce Bytes (2010).
[30] WOLF, J. R., ARKES, H. R., AND MUHANNA, W. A.
Is Overbidding in Online Auctions the Result of a
Pseudo-Endowment Effect? SSRN Electronic Journal
(2005).
[31] ZEIGLER, B. P., PRAEHOFER, H., AND KIM, T. G.
Theory of Modeling and Simulation, Second Edition.
Academic Press, 2000.