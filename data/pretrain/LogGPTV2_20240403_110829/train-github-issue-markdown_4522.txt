### Issue Description

I am encountering a `Neo.DatabaseError.General.UnknownError` when attempting to `MERGE` two specific nodes. There doesn't seem to be anything unusual about these nodes, but I will provide as much information as possible. If you need additional details, please feel free to contact me.

This issue has also been mentioned in the Neo4j-users Slack channel.

### Background

Previously, I encountered a problem while creating an index on `:action_attribute(val)` due to a (4096 character?) text length limit. I resolved this by specifying the default index provider and then recreating the index:

```cypher
dbms.index.default_schema_provider=lucene+native-1.0
```

However, this workaround might have left the database in a confused state regarding this index, which is used in the query.

### Environment

- **Neo4j Version:** 3.4.0-rc01
- **Operating System:** Windows Server 2012 R2

### Steps to Reproduce

The error occurs when running the following Cypher query:

```cypher
MATCH (p:part)
WITH p
MATCH (aa:action_attribute {name: "part_number_txt", val: p.id})
WITH aa, p
SKIP 212945 LIMIT 1
MERGE (aa)-[:IS_PART_NUMBER]->(p)
```

Interestingly, the following query (with a `SKIP` value of 212944) works without any issues:

```cypher
MATCH (p:part)
WITH p
MATCH (aa:action_attribute {name: "part_number_txt", val: p.id})
WITH aa, p
SKIP 212944 LIMIT 1
MERGE (aa)-[:IS_PART_NUMBER]->(p)
```

There doesn't appear to be anything special about the `aa` or `p` nodes at position 212945.

Here is the response from the Neo4j browser for the failing query:

```json
[
  {
    "keys": [
      "aa",
      "aa_rel",
      "p",
      "p_rel"
    ],
    "length": 4,
    "_fields": [
      {
        "identity": {
          "low": 244617450,
          "high": 0
        },
        "labels": [
          "action_attribute"
        ],
        "properties": {
          "val": "9329k44",
          "name": "part_number_txt",
          "id": "part_number_txt__9329k44"
        }
      },
      {
        "identity": {
          "low": 1546876839,
          "high": 0
        },
        "start": {
          "low": 244617450,
          "high": 0
        },
        "end": {
          "low": 2914466,
          "high": 0
        },
        "type": "IS_PART_NUMBER",
        "properties": {}
      },
      {
        "identity": {
          "low": 2914466,
          "high": 0
        },
        "labels": [
          "part"
        ],
        "properties": {
          "id": "9329k44"
        }
      },
      {
        "identity": {
          "low": 1546876839,
          "high": 0
        },
        "start": {
          "low": 244617450,
          "high": 0
        },
        "end": {
          "low": 2914466,
          "high": 0
        },
        "type": "IS_PART_NUMBER",
        "properties": {}
      }
    ],
    "_fieldLookup": {
      "aa": 0,
      "aa_rel": 1,
      "p": 2,
      "p_rel": 3
    }
  }
]
```

### Expected Behavior

The `MERGE` operation should complete successfully.

### Actual Behavior

The `MERGE` operation fails with the following error:

```
Neo.DatabaseError.General.UnknownError
```

The stack trace from the `debug.log` file is as follows:

```
2018-05-09 16:29:30.799+0000 ERROR [o.n.b.v.r.ErrorReporter] Client triggered an unexpected error [UnknownError]: null, reference 183ca74f-b273-4f80-8fbf-a216b31ed659.
java.lang.NullPointerException
  at org.neo4j.kernel.api.impl.schema.ValueEncoding$6.encodeQuery(ValueEncoding.java:244)
  at org.neo4j.kernel.api.impl.schema.LuceneDocumentStructure.newSeekQuery(LuceneDocumentStructure.java:110)
  at org.neo4j.kernel.api.impl.schema.reader.SimpleIndexReader.toLuceneQuery(SimpleIndexReader.java:135)
  at org.neo4j.kernel.api.impl.schema.reader.SimpleIndexReader.query(SimpleIndexReader.java:97)
  at org.neo4j.kernel.impl.index.schema.fusion.FusionIndexReader.query(FusionIndexReader.java:91)
  at org.neo4j.kernel.impl.newapi.Read.nodeIndexSeekWithFreshIndexReader(Read.java:207)
  at org.neo4j.kernel.impl.newapi.Read.lockingNodeUniqueIndexSeek(Read.java:181)
  at org.neo4j.cypher.internal.runtime.interpreted.TransactionBoundQueryContext.lockingUniqueIndexSeek(TransactionBoundQueryContext.scala:312)
  at org.neo4j.cypher.internal.compatibility.v3_4.ExceptionTranslatingQueryContext$$anonfun$lockingUniqueIndexSeek$1.apply(ExceptionTranslatingQueryContext.scala:202)
  at org.neo4j.cypher.internal.compatibility.v3_4.ExceptionTranslatingQueryContext$$anonfun$lockingUniqueIndexSeek$1.apply(ExceptionTranslatingQueryContext.scala:202)
  at org.neo4j.cypher.internal.compatibility.v3_4.ExceptionTranslationSupport$class.translateException(ExceptionTranslationSupport.scala:33)
  at org.neo4j.cypher.internal.compatibility.v3_4.ExceptionTranslatingQueryContext.translateException(ExceptionTranslatingQueryContext.scala:41)
  at org.neo4j.cypher.internal.compatibility.v3_4.ExceptionTranslatingQueryContext.lockingUniqueIndexSeek(ExceptionTranslatingQueryContext.scala:202)
  at org.neo4j.cypher.internal.runtime.interpreted.DelegatingQueryContext.lockingUniqueIndexSeek(DelegatingQueryContext.scala:163)
  at org.neo4j.cypher.internal.runtime.interpreted.pipes.NodeIndexSeeker$$anonfun$indexSeek$2.apply(NodeIndexSeeker.scala:61)
  at org.neo4j.cypher.internal.runtime.interpreted.pipes.NodeIndexSeeker$$anonfun$indexSeek$2.apply(NodeIndexSeeker.scala:61)
  at scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:241)
  at scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:241)
  at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
  at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35)
  at scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:241)
  at scala.collection.AbstractTraversable.flatMap(Traversable.scala:104)
  at org.neo4j.cypher.internal.runtime.interpreted.pipes.NodeIndexSeeker$class.indexSeek(NodeIndexSeeker.scala:61)
  at org.neo4j.cypher.internal.runtime.interpreted.pipes.NodeIndexSeekPipe.indexSeek(NodeIndexSeekPipe.scala:30)
  at org.neo4j.cypher.internal.runtime.interpreted.pipes.NodeIndexSeekPipe.internalCreateResults(NodeIndexSeekPipe.scala:53)
  at org.neo4j.cypher.internal.runtime.interpreted.pipes.Pipe$class.createResults(Pipe.scala:45)
  at org.neo4j.cypher.internal.runtime.interpreted.pipes.NodeIndexSeekPipe.createResults(NodeIndexSeekPipe.scala:30)
  at org.neo4j.cypher.internal.runtime.interpreted.pipes.ApplyPipe$$anonfun$internalCreateResults$1.apply(ApplyPipe.scala:32)
  at org.neo4j.cypher.internal.runtime.interpreted.pipes.ApplyPipe$$anonfun$internalCreateResults$1.apply(ApplyPipe.scala:29)
  at scala.collection.Iterator$$anon$12.nextCur(Iterator.scala:435)
  at scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:441)
  at scala.collection.Iterator$class.isEmpty(Iterator.scala:331)
  at scala.collection.AbstractIterator.isEmpty(Iterator.scala:1334)
  at org.neo4j.cypher.internal.runtime.interpreted.pipes.LimitPipe.internalCreateResults(LimitPipe.scala:34)
  at org.neo4j.cypher.internal.runtime.interpreted.pipes.PipeWithSource.createResults(Pipe.scala:76)
  at org.neo4j.cypher.internal.runtime.interpreted.pipes.PipeWithSource.createResults(Pipe.scala:72)
  at org.neo4j.cypher.internal.runtime.interpreted.pipes.PipeWithSource.createResults(Pipe.scala:72)
  at org.neo4j.cypher.internal.runtime.interpreted.pipes.PipeWithSource.createResults(Pipe.scala:72)
  at org.neo4j.cypher.internal.compatibility.v3_4.runtime.executionplan.BaseExecutionResultBuilderFactory$BaseExecutionWorkflowBuilder.createResults(DefaultExecutionResultBuilderFactory.scala:105)
  at org.neo4j.cypher.internal.compatibility.v3_4.runtime.executionplan.BaseExecutionResultBuilderFactory$BaseExecutionWorkflowBuilder.build(DefaultExecutionResultBuilderFactory.scala:77)
  at org.neo4j.cypher.internal.compatibility.v3_4.runtime.BuildInterpretedExecutionPlan$$anonfun$getExecutionPlanFunction$1.apply(BuildInterpretedExecutionPlan.scala:97)
  at org.neo4j.cypher.internal.compatibility.v3_4.runtime.BuildInterpretedExecutionPlan$$anonfun$getExecutionPlanFunction$1.apply(BuildInterpretedExecutionPlan.scala:80)
  at org.neo4j.cypher.internal.compatibility.v3_4.runtime.BuildInterpretedExecutionPlan$InterpretedExecutionPlan.run(BuildInterpretedExecutionPlan.scala:111)
  at org.neo4j.cypher.internal.compatibility.LatestRuntimeVariablePlannerCompatibility$ExecutionPlanWrapper$$anonfun$run$1.apply(LatestRuntimeVariablePlannerCompatibility.scala:128)
  at org.neo4j.cypher.internal.compatibility.LatestRuntimeVariablePlannerCompatibility$ExecutionPlanWrapper$$anonfun$run$1.apply(LatestRuntimeVariablePlannerCompatibility.scala:124)
  at org.neo4j.cypher.exceptionHandler$runSafely$.apply(exceptionHandler.scala:89)
  at org.neo4j.cypher.internal.compatibility.LatestRuntimeVariablePlannerCompatibility$ExecutionPlanWrapper.run(LatestRuntimeVariablePlannerCompatibility.scala:124)
  at org.neo4j.cypher.internal.PreparedPlanExecution.execute(PreparedPlanExecution.scala:29)
  at org.neo4j.cypher.internal.ExecutionEngine.execute(ExecutionEngine.scala:119)
  at org.neo4j.cypher.internal.javacompat.ExecutionEngine.executeQuery(ExecutionEngine.java:61)
  at org.neo4j.bolt.v1.runtime.TransactionStateMachineSPI$1.start(TransactionStateMachineSPI.java:144)
  at org.neo4j.bolt.v1.runtime.TransactionStateMachine$State.startExecution(TransactionStateMachine.java:446)
  at org.neo4j.bolt.v1.runtime.TransactionStateMachine$State$1.execute(TransactionStateMachine.java:259)
  at org.neo4j.bolt.v1.runtime.TransactionStateMachine$State$1.run(TransactionStateMachine.java:240)
  at org.neo4j.bolt.v1.runtime.TransactionStateMachine.run(TransactionStateMachine.java:81)
  at org.neo4j.bolt.v1.runtime.BoltStateMachine$State$2.run(BoltStateMachine.java:456)
  at org.neo4j.bolt.v1.runtime.BoltStateMachine.run(BoltStateMachine.java:222)
  at org.neo4j.bolt.v1.messaging.BoltMessageRouter.lambda$onRun$3(BoltMessageRouter.java:93)
  at org.neo4j.bolt.runtime.DefaultBoltConnection.processNextBatch(DefaultBoltConnection.java:193)
  at org.neo4j.bolt.runtime.DefaultBoltConnection.processNextBatch(DefaultBoltConnection.java:143)
  at org.neo4j.bolt.runtime.ExecutorBoltScheduler.executeBatch(ExecutorBoltScheduler.java:163)
  at org.neo4j.bolt.runtime.ExecutorBoltScheduler.lambda$null$0(ExecutorBoltScheduler.java:145)
  at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
  at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
  at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
  at java.lang.Thread.run(Unknown Source)
```

### Additional Information

- The issue seems to be related to the index on `:action_attribute(val)`.
- The database may be in a confused state due to the previous workaround involving the default index provider.

If you need more information or if there are any additional steps I can take to help diagnose the issue, please let me know.