1
Design of a blocking-resistant 
anonymity system
Roger Dingledine, Nick Mathewson
The Tor Project
2
Outline
● Crash course on Tor
● Goals for blocking resistance
● Assumptions (threat model)
● What Tor offers now
● Current proxy solutions
● What we need to add to Tor
● All the other issues that come up
3
Tor:  Big Picture
● Freely available (Open Source), unencumbered.
● Comes with a spec and full documentation:  
Dresden and Aachen implemented compatible Java 
Tor clients; researchers use it to study anonymity.
● Chosen as anonymity layer for EU PRIME project.
● 200000+ (?) active users.
● PC World magazine named Tor one of the Top 100 
Products of 2005.
4
Anonymity serves different 
interests for different user groups.
Anonymity
Private citizens
Governments
Businesses
“It's privacy!”
5
Anonymity serves different 
interests for different user groups.
Anonymity
Private citizens
Governments
Businesses
“It's network security!”
“It's privacy!”
6
Anonymity serves different 
interests for different user groups.
Anonymity
Private citizens
Governments
Businesses
“It's traffic-analysis
resistance!”
“It's network security!”
“It's privacy!”
7
The simplest designs use a single 
relay to hide connections.
Bob2
Bob1
Bob3
Alice2
Alice1
Alice3
Relay
E(Bob3,“X”)
E(Bob1, “Y”)
E(Bob2, “Z”)
“Y”
“Z”
“X”
(example: some commercial proxy providers)
8
But a single relay is a single point of 
failure.
Bob2
Bob1
Bob3
Alice2
Alice1
Alice3
Evil
Relay
E(Bob3,“X”)
E(Bob1, “Y”)
E(Bob2, “Z”)
“Y”
“Z”
“X”
Eavesdropping on the 
relay works too.
9
So, add multiple relays so that
no single one can betray Alice.
Bob
Alice
R1
R2
R3
R4
R5
10
A corrupt first hop can tell that 
Alice is talking, but not to whom.
Bob
Alice
R1
R2
R3
R4
R5
11
A corrupt final hop can tell that 
somebody is talking to Bob,
but not who.
Bob
Alice
R1
R2
R3
R4
R5
12
Alice makes a session key with R1
...And then tunnels to R2...and to R3
Bob
Alice
R1
R2
R3
R4
R5
Bob2
13
Attackers can block users from 
connecting to the Tor network
● By blocking the directory authorities
● By blocking all the server IP addresses 
in the directory
● By filtering based on Tor's network 
fingerprint
14
Goals
● Attract, and figure out how to use, more 
relay addresses
● Normalize Tor's network fingerprint
● Solve the discovery problem: how to 
find relay addresses safely
● Don't screw up our anonymity 
properties in the process
15
Adversary assumptions
aka Threat model
● Aim to defend against a strong attacker
– so we inherit defense against weaker attackers
● Have a variety of users in mind
– Citizens in China, Thailand, ...
– Whistleblowers in corporate networks
– Future oppressive situations
● Attackers will be in different stages of 
the arms race
16
Attacker's goals (1)
● Restrict the flow of certain kinds of 
information
– Embarrassing (rights violations, 
corruption)
– Opposing (opposition movements, sites 
that organize protests)
● Chill behavior by impression that online 
activities are monitored
17
Attacker's goals (2)
● Complete blocking is not a goal. It's not 
even necessary.
● Similarly, no need to shut down or block 
every circumvention tool. Just ones that are
– popular and effective (the ones that work)
– highly visible (make censors look bad to 
citizens -- and to bosses)
18
Attacker's goals (3)
● Little reprisal against passive consumers of 
information.
– Producers and distributors of information 
in greater danger.
● Censors (actually, govts) have economic, 
political, social incentives not to block the 
whole Internet.
– But they don't mind collateral damage.
19
Main network attacks
● Block by IP address at firewall
● Keyword searching in TCP packets
● Intercept DNS requests and give bogus 
responses or redirects
20
Design assumptions (1)
● Network firewall has limited CPU and 
memory per connection
– full steganography not needed, thankfully
● Time lag between attackers sharing notes
– Most commonly by commercial providers 
of filtering tools
– Insider threat not a worry initially
21
Design assumptions (2)
● Censorship is not uniform even within each 
country, often due to different ISP policies
● Attacker can influence other countries and 
companies to help them censor or track 
users.
22
Design assumptions (3)
● Assume the users aren't attacked by their 
hardware and software
– No spyware installed, no cameras 
watching their screens, etc
● Assume the users can fetch a genuine copy 
of Tor: use GPG signatures, etc.
23
Outline
● Goals
● Assumptions (threat model)
● What Tor offers now
● Current proxy solutions
● What we need to add to Tor
● All the other issues that come up
24
Tor gives three anonymity properties
● #1: A local network attacker can't learn, or 
influence, your destination
– Clearly useful for blocking resistance
● #2: No single router can link you to your 
destination
– The attacker can't sign up relays to trace users
● #3: The destination, or somebody watching it, 
can't learn your location
– So they can't reveal you; or treat you differently.
25
Other Tor design features (1)
● Well-analyzed, well-understood discovery 
mechanism: directory authorities.
● They automatically aggregate, test, and publish 
signed summaries of the available routers.
● Tor clients fetch these summaries to learn 
which routers have what properties.
● Directory information is cached throughout the 
Tor network.
26
Other Tor design features (2)
● The list of dir authorities is not hard-wired.
● There are defaults, but you can easily specify 
your own to start using a different (or even 
overlapping!) Tor network.
● For example, somebody could run a separate 
Tor network in China.
● (But splitting up our users is bad for 
anonymity.)
27
Other Tor design features (3)
● Tor automatically builds paths, and rebuilds 
and rotates them as needed.
● More broadly, Tor is just a tool to build paths 
given a set of routers.
● Harvard's “Blossom” project makes this 
flexibility more concrete:
– It lets users view Internet resources from 
any point in the Blossom network.
28
Other Tor design features (4)
● Tor separates the role of “internal relay” from 
the role of “exit relay”.
● Because we don't force all volunteers to play 
both roles, we end up with more relays.
● This increased diversity is what gives Tor 
users their anonymity.
29
Other Tor design features (5)
● Tor is sustainable. It has a community of 
developers and volunteers.
● Commercial anonymity systems have flopped 
or constantly need more funding for 
bandwidth.
● Our sustainability is rooted in Tor's open 
design: clear documentation, modularity, and 
open source.
30
Other Tor design features (6)
● Tor has an established user base of hundreds 
of thousands of people around the world.
● Ordinary citizens, activists, corporations, law 
enforcement, even govt and military users.
● This diversity contributes to sustainability.
● It also provides many many IP addresses!
31
Anonymity is useful for  
censorship-resistance too!
● If a Chinese worker blogs about a problem at 
her factory, and she routes through her uncle's 
computer in Ohio to do it, ...?
● If any relay can expose dissident bloggers or 
compile profiles of user behavior, attacker 
should attack relays.
● ...Or just spread suspicion that they have, to 
chill users.
32
Outline
● Goals
● Assumptions (threat model)
● What Tor offers now
● Current proxy solutions
● What we need to add to Tor
● All the other issues that come up
33
Relay versus Discovery
● There are two pieces to “proxying” schemes:
● a relay component: building circuits, sending 
traffic over them
● a discovery component: learning what routers 
are available
34
Centrally-controller shared proxies
● Existing commercial anonymizers are based on 
a set of single-hop proxies.
● Typically characterized by two features:
– They control and operate the proxies centrally.
– Many different users get assigned to each proxy.
● Weak security compared to distributed-trust.