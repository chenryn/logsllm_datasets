容器通常是无状态的。但是，对于一些应用，需要有状态的计算资源。当在主机之间移植这些计算资源时，Docker 不提供本地存储卷管理或数据持久性。ClusterHQ 的 Flocker 解决方案解决了这些需求，并通过在将计算资源从一台主机移动到另一台主机时提供卷管理和数据持久性框架，使容器能够用于有状态的应用，如数据库。Flocker 与所有主要的容器管理器(包括 Docker Swarm、Kubernetes 和 Apache Mesos)一起工作。
#### 边缘计算容器
对安全性的担忧以及缺乏可见性和可控性被吹捧为云计算的一个广为人知和公认的缺点。私有云和小云是可行的选择。然而，他们也面临着某些限制。然而，最近的边缘或雾计算现象被认为是克服所有云弱点的最成功的计算范例。
边缘计算就是将数据处理和存储从集中式位置(云)转移到分布式和分散式环境(本地)。这意味着，通过让计算、网络和存储能力更接近用户，服务质量(T0)(**服务质量(T3)】属性/国家森林资源战略就可以轻松且回报丰厚地实现。传统上，所有计算和存储都发生在云环境中(内部和外部)。然而，某些场景，如实时分析和更快的响应，坚持在用户端进行计算。毫不夸张地说，当信息技术变得以人为中心、感知上下文、自适应、实时和多模式时，服务质量和体验会显著提高。现实世界和实时应用和服务总是在边缘参与计算。即使对于边缘计算来说，也有一些体系结构上的复杂性，现在随着应用和卷容器的更快成熟和稳定性，边缘计算天生就获得了急需的推动力。**
##### 设备联网、服务支持和集群
一般来说，边缘设备，如植入式设备、可穿戴设备、便携式设备、网关、手机、手持设备、消费电子产品和机器人可能主要受到资源限制。这些设备大多不是静态的，通常是流动的。为流程、应用和数据集成在它们之间建立无缝连接确实是一件乏味而艰难的事情。因此，边缘设备上的地理分布式计算需要一个轻量级、内在可扩展和智能的平台来处理极其脆弱的服务部署、交付和管理。**开放服务网关接口** ( **OSGi** )是一个有趣的框架，用于优雅地激活和管理资源受限的嵌入式和连接设备及其独特的服务。任何服务或应用都可以被容器化，并且可以装载各种各样的参与设备。然后，OSGi 包的一个实例可以被容器化，并托管在用户环境中一个相当强大的设备中，以便发现和管理所有类型的设备及其内部的服务容器。这种设置支持集中(从云中)以及分散的设备服务监控、测量和管理。Dockerized 平台是安装、配置、管理、升级和终止正在运行的服务的成熟机制。
##### 用于发现的设备服务注册表
特定环境中可能有数千个边缘设备。为了以系统的方式发现、索引和管理异构、动态和分布式设备，坚持需要服务注册和发现功能。管理平台必须具备此功能，以便以自动化方式查找、绑定和利用多个设备。
##### 容错
该平台必须具有容错能力，以保证高可用性和可靠性，从而确保业务连续性。
##### 贮藏
可以在边缘设备上执行缓存，以实现更快的访问并提高整体应用性能。如果 Docker 映像存储并缓存在边缘，则应用供应可以大幅加快。另一个用例是将应用数据存储在缓存中，以显著提高应用性能。
Bukhary Ikhwan Ismail 和团队已经建立了一个测试平台，以检验 Docker 作为边缘或雾计算的候选技术之一。试验台由一个数据中心和三个边缘站点组成，用于模拟环境。在每个边缘站点，都设置了一个 Docker 注册表，用于在边缘本地存储 Docker 映像。边缘站点的 Docker 守护程序将能够从 Docker 注册表中搜索和提取 Docker 映像。每个边缘站点上都配置了 Docker Swarm 来管理多个 Docker 守护程序。Docker Swarm 充当集群和编排工具。基于实验和评估，发现 Docker 提供了快速部署、小占用空间和良好的性能，这使其成为潜在的可行的边缘计算平台。
马塞尔·格罗斯曼和他的团队开发了 **Hypriot 集群实验室** ( **HCL** )。这是一个基于 ARM 的云解决方案，利用了 Docker。嵌入式系统和其他**单板计算机** ( **单板计算机**)获得了巨大的计算能力。随着设备越来越互联，越来越支持网络，产生了大量的机器数据，越来越需要快速收集和处理这些数据，以便挤出实时见解。如前所述，边缘/雾分析的时代正在快速发展。氯化氢可以为虚拟化边缘提供基础，因为它运行在 ARM 架构上，该架构的行为类似于小型数据中心，并通过设计提供节能功能。
## Docker 用例
容器化正在成为软件行业的前进方向，因为它带来了一种更新、更丰富的方式来构建和捆绑任何类型的软件，并在任何地方运输和运行它们。这是容器化快速发展的一个方面，承诺并提供软件可移植性，几十年来，这一直是信息技术开发人员和管理员的麻烦。由于许多有利因素和方面，Docker 的想法在这里蓬勃发展。本节是专门为指定 Docker 思想的关键用例而准备的。
### 将容器集成到工作流中
工作流是一种被广泛接受和使用的抽象，用于明确表示任何复杂和大规模业务和科学应用的正确细节，并在集群、云和网格等分布式计算系统上执行它们。然而，工作流管理系统在传达底层环境的相关信息方面基本上是回避的，工作流中的任务将在底层环境中运行。这意味着工作流任务可以在为其设计的环境中完美运行。真正的挑战是在多个信息技术环境中运行任务，而不需要调整和扭曲所需任务的源代码。随着异构操作系统、中间件、编程语言和框架、数据库等的利用，信息技术环境越来越异构。通常，工作流系统侧重于任务之间的数据交换，并且是特定于环境的。在一个环境中运行良好的工作流，在不同的 it 环境中迁移和部署时开始崩溃。各种已知和未知的依赖性和不兼容性突然出现，诋毁工作流，延迟了 IT 设置、应用安装和配置、部署和交付的整个工作。容器是一劳永逸解决这一纠纷的最佳选择。
在文章中，*将容器集成到工作流中:一个使用 Makeflow、Work Queue 和 Docker 的案例研究，郑超*和 *Douglas Thain* 已经很好地分析了几种方法，以便通过实验证明容器在增强工作流/流程管理系统方面的独特贡献。他们探索了在支持 Docker 的集群上大型生物信息学工作负载的性能，并观察了在多个任务之间共享的容器上本地管理的最佳配置。
### 适用于高性能计算和技术合作应用的 Docker
根据道格拉斯·雅各布森和理查德·谢恩·佳能的说法，目前，容器被广泛用于网络、企业、移动和云应用。然而，对于容器是否是托管技术和科学计算应用的可行运行时，人们提出了一些问题和疑问。尤其是有很多**高性能计算** ( **HPC** )应用都向往一个完美的部署和执行环境。这篇研究论文的作者已经意识到 Docker 容器可能是高性能计算工作负载的完美答案。
在许多情况下，用户希望能够在用于开发或被其社区采用的相同环境中轻松执行他们的科学应用和工作流。一些研究人员已经尝试了云选项，但挑战很多。用户需要解决他们如何处理工作负载管理、文件系统和基本资源调配。容器承诺提供云类型系统的灵活性以及裸机系统的性能。此外，容器有可能更容易地集成到传统的高性能计算环境中，这意味着用户可以获得灵活性的好处，而无需管理系统的其他层(即批处理系统、文件系统等)的额外负担。
Minh Thanh Chung 和团队分析了高性能应用的虚拟机和容器的性能，并对结果进行了基准测试，结果清楚地表明容器是高性能计算应用的下一代运行时。简而言之，Docker 在高性能计算环境中提供了许多有吸引力的优势。为了测试这些，IBM Platform LSF 和 Docker 已经在 LSF 平台的核心之外进行了集成，该集成利用了丰富的 Platform LSF 插件框架。
我们都知道划分的一个方面是资源划分和供应。这意味着物理机器被细分为多个逻辑机器(虚拟机和容器)。现在反过来看，这种由多台物理机器雕刻而成的逻辑系统可以连接在一起，构建一台虚拟超级计算机来解决某些复杂的问题。*于熙贤*和*黄伟城*在研究论文*中描述了他们是如何构建一个虚拟高性能计算集群的。*他们已经将服务发现的自动缩放功能与轻量级虚拟化范例(Docker)相集成，并着手在物理集群硬件上实现虚拟集群。
#### 电信应用容器
*Csaba Rotter 和团队*探索并发表了一篇调查文章，标题为*在电信应用中使用 Linux 容器。*电信应用展现出强大的性能和高可用性需求；因此，在容器中运行它们需要额外的调查**。**电信应用是负责明确定义的任务的单个或多个节点应用。电信应用使用标准化的接口来连接到其他网元并实现标准化的功能。在标准化功能的基础上，电信应用可以具有特定于供应商的功能。有一组服务质量和**体验质量** ( **QoE** )属性，如高可用性、容量和性能/吞吐量。这篇论文清楚地阐述了容器在下一代电信应用中的独特贡献的原因。
*容错地图的高效原型化-借助 Docker-Hadoop***哈维尔·雷和团队*倡导分布式计算是计算和数据密集型工作负载的前进方向。有两大趋势。数据变大了，人们认识到，通过利用开创性的算法、脚本和并行语言，如 Scala、集成平台、新一代数据库和动态信息技术基础设施，大数据可以带来深刻的见解。MapReduce 是目前用于对海量数据进行计算的并行编程范式。Docker-Hadoop1 是一个虚拟化测试平台，旨在实现 Hadoop 集群的快速部署。使用 Docker-Hadoop，可以控制节点的特性，并运行可伸缩性和性能测试，否则将需要大型计算环境。Docker-Hadoop 有助于模拟和再现不同的故障场景，以验证应用。*
 *关于交互式社交媒体应用，阿林·卡里西奇和团队已经发布了一份名为 *OpenStack 和 Docker:为交互式社交媒体应用构建高性能 IaaS 平台*的研究出版物。众所周知，交互式社交媒体应用面临着高效地提供新资源以满足不断增长的应用用户需求的挑战。作者已经给出了 Docker 如何作为虚拟机管理程序运行的必要描述，以及作者如何使用他们开发的`nova-docker`插件来实现开放栈 IaaS 内部计算资源的快速供应。
## 摘要
在这个时间点上，Docker 不亚于一场流行病，全球每一家有进取心的企业都痴迷于容器化狂热，因为它们极度自动化、转型和颠覆。随着混合信息技术的蓬勃发展，Docker 支持的容器化的作用正在稳步增长，以智能地增强信息技术支持的业务。在本章中，我们讨论了 Docker 范式的主要功能和贡献。我们描述了一个典型的软件包如何被容器化。此外，您可以遇到工业和企业规模的用例。*