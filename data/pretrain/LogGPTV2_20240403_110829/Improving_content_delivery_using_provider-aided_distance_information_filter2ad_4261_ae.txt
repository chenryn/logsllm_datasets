Our active measurements also highlight typical network effects.
For example, when downloading small objects, TCP is typically
stuck in slow start. Thus, the round-trip time to the cache is the
dominant factor for the retrieval time.
When downloading medium-size objects, both bandwidth and
delay matter. For large objects the performance is restricted by the
available network bandwidth including the download bandwidth
31s
n
i
e
m
i
t
l
d
a
o
n
w
o
d
4
1
.
0
.
1
6
.
0
2
.
0
66K
recommended
PaDIS
1.00
ISP Link
Other Link
0.50
0.25
i
k
n
L
g
n
s
o
o
h
C
i
0.13
r
o
f
y
t
i
l
i
0.06
00:00
12:00
time
24:00
 0
 3
 6
 18
Time of Day (10 Min. Buckets)
 12
 15
 9
 21
 24
b
a
b
o
r
P
0.03
0.02
direct Peering
via ISP-1
via ISP-2
via ISP-3
Figure 13: CDN1 load balancer performance evaluation: Box-
plot of ﬁle downloads across time for object 03.
of the last-hop to the client (25Mbit/s in this experiment). For
CDN1 the download time improvement for large objects is less than
for small and medium ones, especially during the night, since the
achieved download speeds are close to the nominal speed of the
vantage points.
Since CDN1 also offers a pure DNS load balancing service, we
are interested in examining if PaDIS can be helpful in such a sce-
nario. Thus, we we repeat the experiment of fetching content from
CDN1 recommended server as well as from all caches we associ-
ated with CDN1. As discussed before, the content of the website is
served by all caches from CDN1. Also, CDN1 consistently returns
the original server and never any of its own caches. In Figure 13 we
plot the download time for objects that are retrieved using the above
mentioned DNS load balancing service when following the recom-
mendation by CDN1 and PaDIS. We also use boxplots to summa-
rize the download time for the above mentioned 124 caches. The
performance gain is substantial but has to be taken with caution as
the recommended server is the original one and no CDN optimiza-
tion takes place for this content. Nevertheless, we were able to use
the CDN infrastructure to improve download time for content that
was not distributed by the CDN. We limit the duration of our ex-
periment, as such a behavior may violate the agreement between
CDN1 and the site operator.
With respect to the ISP’s beneﬁts, we point out that PaDIS is
able to localize the content within the ISP and that the average path
length within the AS was reduced from 3.8 to 3 when download-
ing content from CDN1. Due to the small diversity of choices in
CDN2, the internal path-length remained unchanged, even when
the PaDIS decreased the download time.
4.2 One-Click Hosters
One-Click Hosters (OCH) offer users the ability to share ﬁles via
a server based infrastructure, typically located within one or sev-
eral well-provisioned data centers. Recent studies have shown that
OCHs can achieve better download time than, e. g., P2P systems
such as BitTorrent [7]. Therefore, it is believed that such services
may become the leading platform for ﬁle sharing and replace P2P
systems. Using our data sets from the residential ISP, we identify
the most popular OCH, referred to as OCH1, which is responsi-
ble for roughly 15 % of all HTTP trafﬁc. OCH1 is located at a
multi-homed data center in central Europe. To scale the number
of parallel ﬂows, OCH1, like other OCHs, limits the maximum ﬁle
size to 200 MByte.
 200
 100
)
s
d
n
o
c
e
S
n
i
(
e
m
T
d
a
o
n
w
o
D
l
i
 50
 20
Thu
Fri
Sat
Sun
Mon
Time
Tue Wed
Thu
Figure 14: Probability of selecting a link of OCH1 (top) and
download time per OCH1 link (bottom).
Using the traces, uploading a 60 Mbyte test ﬁle, as well as study-
ing the domain name scheme of the servers, we are able to deduce
that OCH1 has twelve uplinks to four different providers. The ISP
we are collaborating with is among these providers. To understand
how OCH1 does uplink selection, we repeatedly asked the OCH1
for a server to download the ﬁle during the one week period start-
ing on the 7th of April 2010. The results, in terms of link selection
probabilities for the twelve uplinks, are shown in Figure 14 (top).
Roughly 60 % of the requests are shown to be directed to a server
that can serve the content via the direct peering with the client’s
ISP. From the other eleven uplinks, ten uplinks are chosen with
equal probability while one is chosen with smaller probability. It
is worth noting that there are no time-of-day or time-of-week ef-
fects at all, while the HTTP volume of OCH1 in our traces exhibits
time-of-day effects. This leads us to believe that the link utilization
can be improved by using PaDIS’ recommendation when assigning
clients to servers.
From the replies of the OCH1, we derive a list of their avail-
able servers on a per uplink and provider basis. We validated that
it is feasible to download the ﬁle from any one of the servers and
thus download the content via any of the providers. To quantify
the potential beneﬁt, in download time, for the end-user, we repeat-
edly download the test ﬁle from one server per uplink once every
two hours for one week. Figure 14 (bottom) shows the resulting
download time for the client. For presentation purposes and since
the performance was very close, we average over all uplinks on a
provider. Our results show that the best download times are pos-
sible via the direct peering link which directly connects the ISP to
the OCH. While the download speed during the off periods is again
32close to the nominal speed of the client and does not vary across
different ISPs, the download time improvements can be up to a fac-
tor of four during peak hours. This together with the observation of
static uplink assignment, even during peak hours, shows that there
is signiﬁcant potential for PaDIS to improve end-user experience
and enable the collaboration between ISPs and OCHs.
4.3 Video Streaming Providers
Video streaming via HTTP is popular and accounts for more than
20 % of the HTTP trafﬁc. The leading video streaming provider
in our trace, VSP1, is responsible for roughly 13 % of the over-
all HTTP trafﬁc. We identify the architecture of VSP1 by ex-
amining our traces to analyze their naming scheme and perform
a series of active measurements. We found that VSP1, in con-
trast to other CDS’s, does not employ a DNS based load balancing
scheme, but uses application layer redirection, namely HTTP 3xx
return codes [16]. Additionally, we found that VSP1 uses a naming
scheme that implies a caching hierarchy that organizes the caches
of different layers into groups. While we have veriﬁed that all
servers reply to any valid request, the reply might just be a redirec-
tion into the upper caching layer when the content is not available
or even in a lower layer if the content is already well distributed.
Another interesting observation we made is that VSP1 throttles the
speed at which a user can download a video. After a short, but fast
burst of data, the bitrate of the connection is throttled to roughly
the video-bitrate. This behavior leads to virtually no performance
difference of the caches as long as they can retain the video’s bi-
trate. In this case, the PaDIS is not able to improve the perceived
performance of an end-user.
Even though we found many unique cache IP addresses in our
active measurements, they all belong to preﬁxes within the VSP1
AS and there seems to be limited path diversity for this provider.
Still, we do believe this might be an interesting setting for PaDIS.
On the one hand, a single path towards VSP1 is actually not as
crucial as the the number of paths from VSP1 to the ISP, since the
bulk of the transfered volume is ﬂowing from VSP1 to the ISP. If
the number of ingress paths exceeds the number of egress paths,
PaDIS can be utilized to recommend caches such that the content
is injected from the most appropriate ingress point in the ISP. On
the other hand, in a collaborative scheme, VSP1 can utilize PaDIS
to redirect clients to its caches taking into consideration network
performance characteristics and replicate content in a more efﬁcient
manner.
4.4 Summary
We ﬁnd that PaDIS has potential to substantially improve the
end-user experience within an ISP by exploring the existing server
and path diversity. We were able to show using active measure-
ments in a big European ISP that PaDIS can signiﬁcantly improve
content delivery of some of the dominant content delivery plat-
forms, including the two major CDNs and the top OCH, that are
responsible for roughly 35 % of the overall HTTP trafﬁc.
5. RELATED WORK
Content delivery networks are used to provide fast and scalable
commercial-grade Web applications [23]. CDNs rely on large-scale
commodity infrastructure to improve application performance. Kr-
ishnamurthy et al. [20] and later Huang et al. [17] characterize their
performance, i. e., by quantifying the end-user performance, an-
alyzing the DNS redirection overhead, unveiling the CDN server
location, and assessing their availability.
Su et al. [34] propose to utilize CDN’s redirection to locate high
performance paths. Choffnes et al. [11] propose to use information
from CDNs to bias neighbor selection in P2P systems without any
path monitoring or probing.
Recently, Triukose et al. [35] show that most popular commercial
CDNs as well as several community CDNs serve any object from
any cache. They then use this insight to show that it is feasible to
use the CDN’s infrastructure to amplify attacks against CDN cos-
tumer web sites. Our work leverages this observation by including
ISP information for cache site selection and thus improves end-user
performance and enables ISP trafﬁc engineering.
The ideas presented in this paper build upon our previous work
on biasing peer selection in P2P systems [4, 3]. Our work also
utilizes the insights from previous work [9] which has shown that
server selection is important for enhancing the end-user experience.
To the best of our knowledge, this is the ﬁrst work that proposes
and deploys a system for ISP and application collaboration. It is
based on the insight that today content is usually accessible from
multiple locations. In the past, game-theoretic studies [18, 14] have
investigated the principle possibilities of cooperation between ISPs
and CDNs as well as the potential of an ISP deploying its own
CDN. However, they have not proposed a system that enables this.
6. CONCLUSION
Our study, based on traces from more than 20,000 residential
users as well as active DNS measurements, shows that there is sig-
niﬁcant server location diversity as well as path diversity for access-
ing HTTP based content. The key insight is that today most content
delivery architectures rely on distributed infrastructures. We there-
fore propose and deploy PaDIS, a novel system that allows ISPs to
discover and utilize path diversity. Using extensive active measure-
ments from vantage points within a residential network, we were
able to show the beneﬁts that PaDIS can offer to the end-user ex-
perience. More speciﬁcally, we can show signiﬁcant improvements
in download times of up to a factor of four for content offered by
the most popular content providers, including CDNs and OCHs, for
users of an ISP. Our results also highlight the beneﬁts for ISPs.
PaDIS may act as a catalyst for ISPs to regain control of their
own trafﬁc. PaDIS is a tool that can assist ISPs in performing traf-
ﬁc engineering or in driving up utilization for monetary gain at the
application layer by biasing server selection for their customers.
Furthermore, it can also serve as a negotiation tool between ISPs
or between ISPs and content providers.
In addition, it might be
used not only as a means of cooperation but also for revenue shar-
ing. Content providers and distributors may also utilize PaDIS to
enhance content replication and delivery strategy due to increased
access to meta-information.
7. ACKNOWLEDGMENTS
This work was supported in part by a grant from Deutsche Telekom
Laboratories and the BMBF project G-Lab. We would also like to
thank our shepherd, Robert Beverly, and the anonymous reviewers
for their constructive comments.
8. REFERENCES
[1] Hrishikesh B. Acharya and Mohamed G. Gouda. The Theory
of Network Tracing. In Proc. of ACM PODC ’09.
[2] Bernhard Ager, Fabian Schneider, Juhoon Kim, and Anja
Feldmann. Revisiting cacheability in times of user generated
content. In Proc. of IEEE Global Internet Symp. ’10.
[3] Vinay Aggarwal, Obi Akonjang, and Anja Feldmann.
Improving User and ISP Experience through ISP-aided P2P
Locality. In Proc. of IEEE Global Internet Symp. ’08.
33[4] Vinay Aggarwal, Anja Feldmann, and Christian Scheideler.
[20] Balachander Krishnamurthy, Craig Wills, and Yin Zhang. On
Can ISPs and P2P Users Cooperate for Improved
Performance? SIGCOMM Comput. Commun. Rev., 37(3),
2007.
the Use and Performance of Content Distribution Networks.
In Proc. of ACM SIGCOMM IMW ’01.
[21] Rupa Krishnan, Harsha V. Madhyastha, Sridhar Srinivasan,
[5] B. Agger, W. Mühlbauer, G. Smaragdakis, and S. Uhlig.
Comparing DNS Resolvers in the Wild. In Proc. of ACM
IMC ’10.
[6] Hussein A. Alzoubi, Michael Rabinovich, and Oliver
Spatscheck. MyXDNS: A Request Routing DNS Server with
Decoupled Server Selection. In Proc. of WWW ’07.
[7] Demetres Antoniades, Evangelos P. Markatos, and
Constantine Dovrolis. One-click Hosting Services: a
File-sharing Hideout. In Proc. of ACM IMC ’09.
Sushant Jain, Arvind Krishnamurthy, Thomas Anderson, and
Jie Gao. Moving Beyond End-to-end Path Information to
Optimize CDN Performance. In Proc. of ACM SIGCOMM
IMC ’09.
[22] Craig Labovitz, Scott lekel Johnson, Danny McPherson, Jon
Oberheide, and Farnam Jahanian. Internet Inter-Domain
Trafﬁc. In Proc. of ACM SIGCOMM ’10.
[23] Tom Leighton. Improving Performance on the Internet.
Commun. ACM, 52(2):44–51, 2009.
[8] Ruchir Bindal, Pei Cao, William Chan, Jan Medved, George
[24] Gregor Maier, Anja Feldmann, Vern Paxson, and Mark
Suwala, Tony Bates, and Amy Zhang. Improving Trafﬁc
Locality in BitTorrent via Biased Neighbor Selection. In
Proc. of IEEE ICDCS ’06.
Allman. On Dominant Characteristics of Residential
Broadband Internet Trafﬁc. In Proc. of ACM SIGCOMM
IMC ’09.
[9] Robert L. Carter and Mark E. Crovella. On the Network
[25] P. Mockapetris. Domain Names - Implementation and
Impact of Dynamic Server Selection. Computer Networks,
31((23-24)):2529–2558, 1999.
[10] Meeyoung Cha, Haewoon Kwak, Pablo Rodriguez,
Yong-Yeol Ahn, and Sue Moon. Analyzing the Video
Popularity Characteristics of Large-scale User Generated
Content Systems. IEEE/ACM Trans. Networking,
17(5):1357–1370, 2009.
[11] David R. Choffnes and Fabián E. Bustamante. Taming the
Torrent: a Practical Approach to Reducing Cross-ISP Trafﬁc
in Peer-to-peer Systems. In Proc. of ACM SIGCOMM ’08.
[12] C. Contavalli, W. van der Gaast, S. Leach, and D. Rodden.
Client IP Information in DNS Requests. IETF draft, work in
progress, draft-vandergaast-edns-client-ip-00.txt, Jan 2010.
Speciﬁcation. RFC 1035, Nov 1987.
[26] Jianping Pan, Y. Thomas Hou, and Bo Li. An Overview of
DNS-based Server Selections in Content Distribution
Networks. Comput. Netw., 43(6):695–711, 2003.
[27] Vern Paxson. Bro: A System for Detecting Network
Intruders in Real-Time. Computer Networks, 31(23–24),
1999.
[28] Sylvia Ratnasamy, Mark Handley, Richard Karp, and Scott
Shenker. Topologically Aware Overlay Construction and
Server Selection. In Proc. of IEEE INFOCOM ’02.
[29] Sandvine Inc. 2009 global broadband phenomena.
http://www.sandvine.com/news/global_
broadband_trends.asp.
[13] Graham Cormode and Marios Hadjieleftheriou. Methods for
[30] Fabian Schneider. Analysis of New Trends in the Web from a
Finding Frequent Items in Data Streams. The VLDB J.,
19(1):3–20, 2010.
[14] Dominic DiPalantino and Ramesh Johari. Trafﬁc
Engineering versus Content Distribution: A Game-theoretic
Perspective. In Proc. of IEEE INFOCOM ’09.
[15] Holger Dreger, Anja Feldmann, Michael Mai, Vern Paxson,
and Robin Sommer. Dynamic Application-Layer Protocol
Analysis for Network Intrusion Detection. In Proc. of
USENIX Security Symp. ’06.
[16] Roy Fielding, Jim Gettys, Jeffrey Mogul, Henrik Frystyk,
Larry Masinter, Paul Leach, and Tim Berners-Lee. Hypertext
Transfer Protocol – HTTP/1.1. RFC 2616, Jun 1999.
[17] Cheng Huang, Angela Wang, Jin Li, and Keith W. Ross.
Measuring and Evaluating Large-scale CDNs. In Proc. of
ACM SIGCOMM IMC ’08, paper withdrawn.
Network Perspective. PhD thesis, Technische Universität
Berlin, Mar 2010.
[31] Hendrik Schulze and Klaus Mochalski. Internet study
2008-9. http://www.ipoque.com/resources/
internet-studies.
[32] Jan Seedorf and Eric W. Burger. Application-Layer Trafﬁc
Optimization (ALTO) Problem Statement. RFC 5693, Oct
2009.
[33] S. S. Siwpersad, Bamba Gueye, and Steve Uhlig. Assessing
the Geographic Resolution of Exhaustive Tabulation for
Geolocating Internet Hosts. In Proc. of PAM ’08.
[34] Ao-Jan Su, David R. Choffnes, Aleksandar Kuzmanovic, and
Fabián E. Bustamante. Drafting behind Akamai: Inferring
Network Conditions based on CDN Redirections.
IEEE/ACM Trans. Netw., 17(6):1752–1765, 2009.
[18] Wenjie Jiang, Rui Zhang-Shen, Jennifer Rexford, and Mung
[35] Sipat Triukose, Zakaria Al-Qudah, and Michael Rabinovich.
Chiang. Cooperative Content Distribution and Trafﬁc
Engineering in an ISP Network. In Proc. of ACM
SIGMETRICS ’09.
[19] Thomas Karagiannis, Pablo Rodriguez, and Konstantina
Papagiannaki. Should ISPs fear Peer-Assisted Content
Distribution? In Proc. of ACM IMC ’05.
Content Delivery Networks: Protection or Threat? In Proc.
of ESORICS ’09.
[36] Haiyong Xie, Y. Richard Yang, Arvind Krishnamurthy,
Yanbin Grace Liu, and Abraham Silberschatz. P4P: Provider
Portal for applications. In Proc. of ACM SIGCOMM ’08.
34