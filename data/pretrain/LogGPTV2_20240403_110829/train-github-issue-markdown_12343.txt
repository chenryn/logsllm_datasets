In UI  
![obraz](https://user-
images.githubusercontent.com/72373858/238871572-c3b3b6ff-56c5-43d3-9161-5ab927761554.png)  
In runner it is OK:  
![obraz](https://user-
images.githubusercontent.com/72373858/238868691-8f0fdd0b-1877-4be6-ba80-7a953e178540.png)
### System info
  * Playwright Version: [v1.33.0]
  * Operating System: [Windows 11]
  * Browser: [Chromium]
  * Other info: 
    * Base on default code after running 'npx init playwright@latest'
    * VSC extension: Playwright Test for VSCode v1.0.11
    * VSC: 1.78.2
### Source code
  * [ x ] I provided exact source code that allows reproducing the issue locally.
File structure (base on defaults provided by running: `npm init
playwright@latest`)  
![obraz](https://user-
images.githubusercontent.com/72373858/238869591-cfd08feb-
fd6b-44b2-85b9-556d52de9e88.png)
**Config file**  
Added to default config: `baseUrl`, and `projects` with session
    // playwright.config.ts
    import { defineConfig, devices } from '@playwright/test';
    import path from "path";
    export const STORAGE_STATE = path.join(__dirname, "session.json");
    export default defineConfig({
      testDir: "./tests",
      globalSetup: "global-setup.ts",
      fullyParallel: true,
      forbidOnly: !!process.env.CI,
      retries: process.env.CI ? 2 : 0,
      workers: process.env.CI ? 1 : undefined,
      reporter: "html",
      use: {
        trace: "on-first-retry",
        baseURL: "https://demo-bank.vercel.app",
      },
      projects: [
        {
          name: "setup-project",
          testMatch: "**/*.setup.ts",
        },
        {
          name: "authenticated tests",
          testMatch: "**/*example.spec.ts",
          dependencies: ["setup-project"],
          use: {
            storageState: STORAGE_STATE,
          },
        },
      ],
    });
IMPORTANT: Global setup for clearing session to avoid false positives
    //global-setup.ts
    import fs from "fs";
    import { STORAGE_STATE } from "./playwright.config";
    async function globalSetup() {
      // Remove session
      if (fs.existsSync(STORAGE_STATE)) {
        fs.unlinkSync(STORAGE_STATE);
      }
    }
    export default globalSetup;
**Test file (self-contained)**
    //login.setup.ts
    import { test as setup, expect } from "@playwright/test";
    import { STORAGE_STATE } from "../playwright.config";
    setup("successful login with correct credentials", async ({ page }) => {
        await page.goto("/");
        console.log("Running setup: successful login with correct credentials...");
        await page.getByTestId("login-input").fill('testerxx');
        await page.getByTestId("password-input").fill('12345678');
        await page.getByTestId("login-button").click();
        await expect(page.getByTestId("user-name")).toHaveText("Jan Demobankowy");
        await page.context().storageState({ path: STORAGE_STATE });
    });
    //example.spec.ts
    import { test, expect } from "@playwright/test";
    test.describe("Logged test", () => {
      test("mock bank panel @logged", async ({ page }) => {
        await page.goto("/pulpit.html");
        await expect(page.getByTestId("user-name")).toHaveText("Jan Demobankowy");
      });
    });
**Steps**
  * npx playwright test --ui
  * try run test what contain dependencies
**Expected**  
Test and it's dependencies run successfully
**Actual**
Test fail, dependencies not run before test