dency relation is named as Dep1 in Table 2 and the
level of dependency is shown in the SLO “lvl ” column).
This is modeled as AC2.1 2−→K AC1.1 with constraint
(AC2.1, AC1.1, =) ∈ C−→K
• AC1.2 is medium dependent on IS1.2 (i.e., named
as Dep2) so that AC1.2 2−→K IS1.2 with constraint
(AC1.2, IS1.2, =) ∈ C−→K
• In the same way, Dep3, Dep4 and Dep5 are speci-
ﬁed as AC2.1 3−→K AC3.1 with (AC2.1, AC3.1, =) ∈
C−→K
, AC2.2 3−→K AC2.3 with (AC2.2, AC2.3, =) ∈
C−→K
and AC2.3 2−→K AC3.2 with (AC2.3, AC3.2, =
) ∈ C−→K
• Dep6 is modeled as AC2.4 2−→K BC2.2 with constraint
(AC2.4, BC2.2,(cid:54)=) ∈ C−→K
• Finally, IS1.1 and IS1.2 are symmetrically dependent
(i.e., Dep8) so that IS1.1 1−→K IS1.2 ∧ IS1.2 1−→K
IS1.1 with constraint (IS1.1, IS1.2, =) ∈ C−→K
respectively.
.
.
v
v
.
v
v
v
v
in the second column named “lvl ” in Table 2). So that
AC 3−→S AC1 ∧ AC 3−→S AC2 ∧ AC 3−→S AC3.
• BC equally depends on BC2, BC11 and AC3. Fur-
thermore, IS strongly depends on IS1. Each is further
depending on the SLOs with diﬀerent dependency im-
portance levels as shown in Table 2.
• AC2 depends on two of AC3 SLOs which are AC3.1
and AC3.2 (shaded in Table 2).
• Since BC depends on AC3, and AC3 depends on SLOs
AC3.1, AC3.2 and AC3.3. Then using transitive clo-
S AC3.2 ∧ BC →+
sure BC →+
AC3.3 (shaded in Table 2).
S AC3.1 ∧ BC →+
S
4.1.1 Cloud Customer Case I Requirements
In this case, both the customer requirements and the CSPs
secSLAs are validated to check conﬂicts between SLOs based
on the deﬁned dependencies as speciﬁed in Section 3.2. Er-
rors in the customer requirements are automatically detected
based on the modeled dependencies, such that:
- Dep1 Validation: AC2.1 security level (level1) is equal
to the AC1.1 security level (level1),v(AC2.1) = v(AC1.1).
Result: Valid. Furthermore, Dep2 Validation: AC1.2
security level (level3) is equal to IS1.2 security level. Re-
sult: Valid. Similarly, Dep3 and Dep5 are valid.
Service dependencies:
• AC equally depends on AC1, AC2 and AC3 (i.e.,
equally depends refers to the level of dependency shown
- Dep4 Validation: AC2.2 security level (level0) is not-
equal to the AC2.3 security level (level1). Result: An
SLO conﬂict occurs, thus the customer modiﬁes AC2.2
(dependent SLO) to yes (level1) to satisfy the dependency
336constraint (as shown in Case I “rev ” column in Table 2).
In the same way, Dep7 is validated.
- Dep6 Validation: Since the (AC2.4, BC2.2,(cid:54)=) ∈ C−→K
and AC2.4 security level (level1) is not-equal to the BC2.2
security level (level0), v(AC2.4) (cid:54)= v(BC2.2) the con-
straint is satisﬁed. Result: Valid.
v
- Dep8 Validation: IS1.1 security level (weekly which is
level2) is not-equal to the IS1.2 security level (level3).
Result: SLO conﬂict occurs. The customer changes IS1.1
to daily (level3).
After the customer has resolved all the SLO conﬂicts and
the CSPs secSLAs are validated, each secSLA is mapped to
a DSM (cf., Section 3.3) to embody the secSLA hierarchi-
cal structure. This structure is used in the ranking of CSPs
according to the customer requirements (cf., Section 3.4).
The ranking computation process for Cloud security SLOs
deﬁned in Table 2 is explained step-by-step, in the rest of
this section.
For the Audit & Compliance control of Cloud secSLA, there
are three security controls (AC1, AC2 and AC3) which are
further divided to SLOs (AC1.1, AC1.2, AC2.1, . . .). For
AC1.2 the providers and the customer can specify their
SLOs values from level1 to level3. Using the data shown
in Table 2, Equation 1 is used to deﬁne the AC1.2 pairwise
relation such that:
CSP1,AC1.2/CSP3,AC1.2 =
CSCAC1.2/CSP2,AC1.2 =
2
3
3
3
/
/
3
3
2
3
Thus, the CM of AC1.2 is calculated using Equation 2 as:
CMAC1.2 =
CSP1
CSP2
CSP3
CSC
CSP1 CSP2 CSP3 CSC
2/3
2/3
2/3
2/3
1
1
1
1
3/2
3/2
3/2
3/2
1
1
1
1
The relative ranking of the CSPs for AC1.2 is given by the
priority vector of CMAC1.2 (P VAC1.2) which is calculated
using Equation 3.
0.3 (cid:1)
P VAC1.2 = (cid:0) CSP1 CSP2 CSP3 CSC
0.3
0.2
0.2
This implies that only CSP3 satisﬁes the customer require-
ment for AC1.2.
In a similar way, we calculate CMAC1.1
and P VAC1.1. The AC1 priority vector is then premeditated
by aggregating P VAC1.1 and P VAC1.2 with the normalized
dependency levels (which are deﬁned as weights wAC1 as
speciﬁed in Section 3.4) where AC1 is medium dependent
on AC1.1 and strongly dependent on AC1.2 then after nor-
malization:
Thus, P VAC1 is calculated using Equation 4 such that:
wAC1 =
(cid:16) AC1.1 AC1.2
2
5
3
5
P VAC1.1 P VAC1.2
0.25
0.25
0.25
0.25
0.2
0.2
0.3
0.3
(cid:17)
.
P VAC1 =
CSP1
CSP2
CSP3
CSC
(cid:19)
(cid:18) wAC1
0.4
0.6
P VAC1 = (cid:0) CSP1 CSP2 CSP3 CSC
0.28 (cid:1)
0.28
0.22
0.22
This means that only CSP3 satisﬁes the customer require-
ments for AC1 as shown in Figure 8. Similarly, the In-
dependent Audits and Regulatory Mapping priority vectors
are calculated. Subsequently, the three Audit & Compliance
services AC1, AC2, AC3 priority vectors are aggregated to
have the overall Audit & Compliance priority vector P VAC
as:
P VAC =
CSP1
CSP2
CSP3
CSC
P VAC1 P VAC2 P VAC3
0.1667
0.2143
0.3095
0.3095
0.1212
0.2727
0.3030
0.3030
0.22
0.22
0.28
0.28
.
 wAC
0.3333
0.3333
0.3333
In a similar way, the Business Continuity and Interface Se-
curity priority vectors are considered, such that the IS1 pri-
ority vector is calculated by aggregating P VIS1.1, P VIS1.2
and P VAC3.1 with the normalized dependency levels (wIS1)
using Equation 4, as:
0.2
0.2
0.3
0.3
P VIS1.1 P VIS1.2 P VAC3.1
.
 wIS1
0.29 (cid:1)
P VIS1 = (cid:0) CSP1 CSP2 CSP3 CSC
0.25
0.25
0.25
0.25
0.5
0.25
0.25
0.2
0.2
0.3
0.3
0.21
0.29
0.21
P VIS1 =
Therefore,
This means only CSP3 satisﬁes IS1 customer requirement
as shown in Figure 8. Finally, the priority vectors of Audit
& Compliance, Business Continuity and Interface Security
are aggregated to obtain the total secSLA priority vector
P VRoot.
P VAC P VBC P VIS
0.21
0.1693 0.2260
0.21
0.2357 0.2267
0.2975 0.2736
0.29
0.29
0.2975 0.2736
.
0.3333
0.2018 0.2241 0.2870 0.2870(cid:1)
0.3333
0.3333
P VRoot = (cid:0) CSP1 CSP2 CSP3
CSP1
CSP2
CSP3
CSC
CSC
P VRoot =
Consequently, CSP3 is the only provider that fulﬁlls the
customer’s requirements. That was expected, as CSP1 is
not oﬀering AC2.2, AC2.3, AC3.2 and is under-provisioning
IS1.1 and IS1.2. CSP2 is not providing BC2.2 and is not
fulﬁlling customer requirements for AC1.2, AC3.3, BC11.2,
IS1.1 and IS1.2. Only CSP3 fulﬁlls all the customer’s re-
quirements. As a result, CSP3 is the best matching provider
according to the customer’s requirements, followed by CSP2
and CSP1.
4.1.2 Cloud Customer Case II Requirements
In this case we consider a novice customer who cannot
specify his/her precise SLO requirements and/or resolve the
SLOs conﬂicts. The structured secSLA presented using DSM
enables the customer to easily specify his/her requirements,
regardless of the size of the secSLA and the number of de-
pendencies. In this case the customer deﬁnes the least de-
pendent SLOs - these are speciﬁed using DSM and are shown
337l
e
v
e
l
y
t
i
r
u
c
e
S
d
e
t
a
g
e
r
g
g
A
0.3
0.2
0.1
AC1
AC2
AC3
BC2
BC11
IS1
CSP1 CSP2 CSP3 CustomerCaseI
Figure 8: CSPs comparison with respect to Customer Case I requirements.
in the column marked as Case II in Table 2. Using the data
shown in Table 2, Equation 1 deﬁnes the AC1.1 pairwise
relation as in Case I. Then the relative ranking of the CSPs
for AC1.1 is given by the priority vector calculated using