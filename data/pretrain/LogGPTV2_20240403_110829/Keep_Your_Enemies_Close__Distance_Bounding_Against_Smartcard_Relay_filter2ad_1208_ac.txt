lation could take around 100 ms so only a 1% increase
would give a 300 km distance advantage. Even if the
calculation time was ﬁxed, and only receiving the re-
sponse from the card could be accelerated, the counter-
feit card could preemptively reply with the predictable
USENIX Association
16th USENIX Security Symposium
93
11 bytes (2 byte response code, 5 byte read more com-
mand, 2 byte header and 2 byte counter) each taking 12
bit-widths (start, 8 data bits, stop and 2 bits guard time).
At 5 MHz + 1% this gives the attacker 98 µs, i.e. 29 km.
One EMV-speciﬁc problem is that the contents of the
payload in the generate AC command are speciﬁed by
the card in the card risk management data object list
(CDOL). Although the terminal nonce should be at the
end of the message in order to achieve maximum resis-
tance to relay attacks, if the CDOL is not signed, the at-
tacker could substitute the CDOL for one requesting the
challenge near the beginning. Upon receiving the chal-
lenge from the terminal, the attacker can then send this
to the genuine card. Other than the nonce, the rest of the
generate AC payload is predictable, so the counterfeit
terminal can restore the challenge to the correct place,
ﬁll in the other ﬁelds and send it to the genuine card.
Thus, the genuine card will send the correct response,
even before the terminal thinks it has ﬁnished sending the
command. A payload will be roughly 30 bytes, which at
5 MHz gives 27 ms and a 8 035 km distance advantage.
Nevertheless, eliminating needless tolerance to re-
sponse latency would decrease the options available to
the attacker. If it were possible to roll out this modiﬁca-
tion to terminals as a software upgrade, it might be ex-
pedient to plan for this alteration to be quickly deployed
in reaction to actual use of the relay attack. While we
have described how this countermeasure could be cir-
cumvented, attackers who build and test their system
with high latency would be forced to re-architect it if the
acceptable latency of deployed terminals were decreased
without warning.
4.2 Procedural improvements
Today, merchants and till operators are accustomed to
looking away while customers enter their PIN and sel-
dom handle the card at all, while customers are often rec-
ommended not to allow anyone but themselves to handle
the card because of card skimming. In the case of relay
attacks, this assists the criminal, not the honest customer
or merchant. If the merchant examined the card, even
superﬁcially, he would detect the relay attack, as we im-
plemented it, by spotting the wires. That said, it is not in-
feasible that an RFID proximity card could be modiﬁed
to relay data wirelessly to a local receiver and therefore
appear to be a genuine one.
A stronger level of protection can be achieved if, af-
ter the transaction is complete, the merchant checks not
only that the card presented is legitimate, but also that the
embossed card number matches the one on the receipt.
In the case of the relay attack, the receipt will show the
victim’s card number, whereas the counterfeit card will
show the original number of the card from before it was
tampered. For these to match, the fraudster must have
appropriate blank cards and an embossing machine, in
addition to knowing the victim’s card number in advance.
Alternatively, a close to real-time attack could still be
executed with a portable embossing machine. Existing
devices take only a few seconds to print a card and it
is feasible that fraudsters can make them portable. The
quality of counterfeit cards and embossing need not be
high, just sufﬁcient to pass a cursory inspection. More
recent smartcards are being issued without embossing,
as the carbon-paper payment method is no longer used,
making counterfeits even easier to produce. If none of
these possibilities are open to the fraudster, repeat cus-
tomers could be targeted and so creating a wide window
of opportunity.
In some scenarios, such as unattended
Chip & PIN terminals, ATMs, or where the terminal is
on the opposite side of a glass barrier, physical card in-
spections would not be possible; but even where it is, the
merchant must be diligent.
Varian [23] argues that if the party who is in the best
position to prevent fraud does not have adequate incen-
tives to do so, security suffers.
If customers must de-
pend on merchants, who they have no relationship with,
for their protection, then there are mismatched incen-
tives. Merchants selling low-marginal-cost products or
services (e.g. software or multimedia content), have little
desire to carefully check for relay attacks. This is be-
cause, in the case of fraud, costs will likely be borne by
the customer. Even if the transaction is subsequently re-
versed when fraud is detected, the merchant has lost only
the low marginal cost and the chargeback overhead, but
has saved the effort of checking cards.
4.3 Hardware alterations
The electronic attorney is a trusted device that is brought
into the transaction by the customer so that the mer-
chant’s terminal does not need to be trusted; this is called
the “man-in-the-middle defence”, as suggested by An-
derson and Bond [2]; trusted devices to protect customers
are also discussed by Asokan et al. [7]. The device is in-
serted into the terminal’s card slot while the customer
inserts their card into the device. The device can display
the transaction value as it is parsed from the data sent
from the terminal, allowing the customer to verify that
she is charged the expected amount. If the customer ap-
proves the transaction, she presses a button on the elec-
tronic attorney itself, which allows the protocol to pro-
ceed. This trusted user interface is necessary, since if a
PIN was used as normal, a fraudster could place a legiti-
mate transaction ﬁrst, which is accepted by the customer,
but with knowledge of the PIN a subsequent fraudulent
one can be placed. Alternatively, one-time-PINs could
be used, but at a cost in usability.
94
16th USENIX Security Symposium
USENIX Association
Because the cardholder controls the electronic attor-
ney, and it protects the cardholder’s interests, the incen-
tives are properly aligned. Market forces in the business
of producing and selling these devices should encourage
security improvements. However, this extra device will
increase costs, increase complexity and may not be ap-
proved of by banking organizations. Additionally, fraud-
sters may attempt to discourage their use, either explic-
itly or by arranging the card slot so the use of a electronic
attorney is difﬁcult. A variant of the trusted user interface
is to integrate a display into the card itself [8].
Another realization of the trusted user interface for
payment applications is to integrate the functionality of
a smartcard into the customer’s mobile phone. This can
allow communication with the merchant’s terminal using
near ﬁeld communications (NFC) [20]. This approach
is already under development and has the advantage of
being a customer-controlled device with a large screen
and convenient keypad, allowing the merchant’s name
and transaction value to be shown and once authorized
by the user, entry of the PIN. Wireless communications
also ease the risk of a malicious merchant arranging the
terminal so that the trusted display device is not visible.
Although mobile phones are affordable and ubiquitous,
they may still not be secure enough for payment applica-
tions as they can be, for example, targeted by malware.
5 Distance bounding
None of the techniques detailed in Section 4.1 are ad-
equate to completely defeat relay attacks. They are ei-
ther impractical (tamper-resistant terminals), expensive
(adding extra hardware) or circumventable (introduc-
ing tighter timing constraints and requiring merchants to
check card numbers). Due to the lack of a customer-
trusted user interface on the card, there is no way to de-
tect a mismatch between the data displayed on the termi-
nal and the data authorized by the card. However, relay
attacks can be foiled if either party can securely establish
the position of the card which is authorizing the transac-
tion, relative to the terminal processing it.
Absolute positioning is infeasible due to the cost and
form factor requirements of smartcards being incompat-
ible with GPS, and also because the civilian version is
not resistant to spooﬁng [22]. However, it is possible
for the terminal to securely establish a maximum dis-
tance bound, by measuring the round-trip-time between
it and the smartcard; if this time is too long, an alarm
would be triggered and the transaction refused. De-
spite the check being performed at the merchant end,
the incentive-compatibility problem is lessened because
the distance veriﬁcation is performed by the terminal and
does not depend on the sales assistant being diligent.
The approach of preventing relay attacks by mea-
suring round-trip-time was ﬁrst proposed by Beth and
Desmedt [9] but Brands and Chaum [11] described the
ﬁrst concrete protocol. The cryptographic exchange in
our proposal is based on the Hancke-Kuhn protocol [17],
because it requires fewer steps, and it is more efﬁcient
if there are transmission bit errors compared to Brands-
Chaum. However, the Hancke-Kuhn protocol is pro-
posed for ultra-wideband radio (UWB), whereas we re-
quire synchronous half-duplex wired transmission.
One characteristic of distance-bounding protocols, un-
like most others, is that the physical transmission layer
is security-critical and tightly bound to the other layers,
so care must be taken when changing the transmission
medium. Wired transmission introduces some differ-
ences, which must be taken into consideration. Firstly,
to avoid circuitry damage or signal corruption, in a wired
half duplex transmission, contention (both sides driving
the I/O at the same time) must be avoided. Secondly,
whereas UWB only permits the transmission of a pulse,
wired allows a signal level to be maintained for an ex-
tended period of time. Hence, we may skip the initial
distance-estimation stage of the Hancke-Kuhn setup and
simplify our implementation.
While in this section we will describe our implemen-
tation in terms of EMV, implemented to be compatible
with ISO 7816, it should be applicable to any wired, half-
duplex synchronous serial communication line.
5.1 Protocol
In EMV, authentication is only card to terminal so we
follow this practise. Following the Hancke-Kuhn termi-
nology, the smartcard is the prover, P , and terminal is the
veriﬁer, V . This is also appropriate because the Hancke-
Kuhn protocol puts more complexity in the veriﬁer than
the prover, and terminals are several orders of magnitude
more expensive and capable than the cards. The protocol
is described as follows:
Initialization :
V → P : NV ∈ {0, 1}a
P → V : NP ∈ {0, 1}a
i ) = HK(NV , NP ) ∈ {0, 1}b
i ||R1
Rapid bit-exchange :
V → P : Ci ∈ {0, 1}
i ∈ {0, 1}
P → V : RCi
At the start of the initialization phase, nonces and pa-
rameters are exchanged over a reliable data channel, with
timing not being critical. NV and NP provide fresh-
ness to the transaction in order to prevent replay attacks,
with the latter preventing a middle-man from running the
complete protocol twice between the two phases using
the same NV and complementary Ci and thus, obtain
P :
(R0
USENIX Association
16th USENIX Security Symposium
95
A
3
8
F
6
D
7
5
Ci : 1010 0011 1000 1111 0110 1101 0111 0101
i : x0x0 11xx x011 xxxx 0xx1 xx1x 1xxx 1x0x
R0
i : 1x0x xx10 1xxx 0001 x10x 01x0 x111 x1x0
R1
: 1000 1110 1011 0001 0101 0110 1111 1100
RCi
i
8
E
B
1
5
6
F
C
Table 1: Example of the rapid bit-exchange phase of the
distance bounding protocol. For clarity, x is shown in-
stead of the response bits not sent by the prover. The left
most bit is sent ﬁrst.
and R1
i
.
and R1
i
both R0
. The prover produces a MAC under its
i
key, K, using a keyed pseudo-random function, the result
of which is split into two shift registers, R0
i
In the timing-critical rapid bit-exchange phase, the
maximum distance between the two participants is deter-
mined. V sends a cryptographically secure pseudoran-
dom single-bit challenge Ci to P , which in turn imme-
, the next single-bit response,
diately responds with RCi
i
from the corresponding shift register. A transaction of a
32 bit exchange is shown in Table 1.
If a symmetric key is used, this will require an on-line
transaction to verify the result because the terminal does
not store K. If the card has a private/public key pair, a
session key can be established and the ﬁnal challenge-
response can also be veriﬁed ofﬂine. The values a and b,
the nonce and shift register bit lengths, respectively, are
security parameters that are set according to the applica-
tion and are further discussed in Section 5.5.
This exchange succeeds in measuring distance be-
cause it necessitates that a response bit arrive at a certain
time after the challenge has been sent. When the proto-
, is
col execution is complete, V ’s response register, RCi
i
veriﬁed by the terminal or bank to determine if the prover
is within the allowed distance for the transaction.
Implementation
5.2
ISO 7816, our target application, dictates that the smart-
card (prover) is a low resource device, and therefore,
should have minimal additions in order to keep costs
down; this was our prime constraint. The terminal (ver-
iﬁer), on the other hand, is a capable, expensive de-
vice that can accommodate moderate changes and addi-
tions without adversely affecting its cost. Of course, the
scheme must be secure to all attacks devised by a highly
capable adversary that can relay signals at the speed of
light, is able to ensure perfect signal integrity, and can
clock the smartcard at higher frequencies than it was de-
signed for. We assume, however, that this attacker does
not have access to the internal operation of the terminal
fV
DRVC
tn
SMPLR
tq
CLKV P
tm
I/OV
Ci
delay
td
td
I/OP
SMPLC
DRVR