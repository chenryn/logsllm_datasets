# 【技术分享】基于信息片段的大众密码分析
|
##### 译文声明
本文是翻译文章，文章来源：安全客
译文仅供参考，具体内容表达以及含义原文为准。
作者：[魂淡p](http://bobao.360.cn/member/contribute?uid=78740327)
预估稿费：300RMB
投稿方式：发送邮件至linwei#360.cn，或登陆网页版在线投稿
**前言**
一直以来，我认为我们所使用的密码由各个不同的信息间断组合而成，而选用哪些信息、如何组合，这些是需要被认真研究的，目前我还未看到对此有相关的较为严谨的文章，本着尽量严谨的学习态度，我对大众密码进行了一次分析，并在此讲述我的分析过程和结论。
另外，由于该数据并非近期数据，以及当时该网站几乎没有密码策略的原因，分析的结果可能并不适用现下情况。
**0x01 理论准备**
****
在这里，我将使用“密码片段”“弱密码片段”“弱密码行为片段”的概念帮助本文的编写，所谓的 **密码片段**
，指的是在一串密码中，我们所使用的不同的信息片段，如hll19980606，该密码可以分为两个密码片段，一是姓名的缩写hll，二是其出生日期，二者代表了不同的含义。
所谓 **弱密码片段** ，指的是大多数人在进行密码生成的过程中经常使用到的一个字符串片段，比如由a12345 a6633 a6666
这三个密码，我们可以得知，在密码组合的过程中，我们经常使用到a这个片段，则a就是我们所指的弱密码片段。
**弱密码行为片段**
，指的是大众常在密码中使用的信息，例如前面提到的具有特殊意义的日期时间、个人的姓名、身份证、手机号码等不同含义的信息，这些信息所展现出来的密码片段就是我们所说的密码行为片段，而弱密码行为片段即人们在密码中常用的信息。
一般而言，密码片段可以从 **字母、数字、字符**
三个类型的字符串来考虑，因为单一的信息往往采用单一的字符串类型来保存，比如姓名使用字母，生日使用数字，因此当不同类型的字符串交替出现时，其极有可能出现了不同的密码片段，我们可以据此来提取密码片段以进行分析。
另一方面，物以类聚，不同的社区和团体的用户可能在密码的使用方面会有不同的倾向，对不同类型的用户的密码进行分析，也是我们应该考虑的事。
对弱密码片段、弱密码行为片段进行统计分析，有助于我们更方便的猜测不同用户可能使用的密码。
**0x02 数据提取**
出于数据量和数据纯净度的考虑，本次所分析的密码库采用的是网上公开流传的某数据库，数据量经过统计达70w条，由于数据本身为sql文件，其中含有转义字符，自写程序处理起来较为麻烦，因此决定将其导入mysql后再格式化导出所需字段。
导出命令类似：
    mysql -uroot -ppass -e "select password from xxx.xxx" >>pass.txt
需要提醒一点的是，使用上述方法导出，第一行是字段名password，另外其中的换行符为CRLF，即”rn”，其实与0x03内的代码不符，因此如需套用下述代码，应先将”rn”处理为”n”。
亦可采用 **select into outfile** 的方式，不再赘述。
**0x03 数据处理**
****
数据量略大，使用图形化编辑器处理容易造成程序假死，这里使用php的cli模式，简单写了几行代码，方便数据的提取。
主要实现的是字符串正则提取和替换，在使用的时候按需求修改正则表达式或选择性注释，代码类似下述，PHP
5.6.27测试通过，可能有少量冗余代码，出现内存用尽的警告时将$leng改小一点即可，或者可以尝试使用类似
**ini_set('memory_limit',128M);** 的代码，将分配给php的内存调大一点。
**用法**
    php.exe xxx.php pass.txt
**代码内容**
    =(filesize($filename)-$offset)?filesize($filename)-$offset:$length;
                $length--;
                if($length===0)
                    exit("length maybe too short");
            }
        }
        $c=file_get_contents($filename,false,null,$offset,$length);
        // // 正则提取，自动分行
        // preg_match_all('/([^da-zA-Z]+)/mi', $c, $test);
        // foreach ($test[1] as $key => $value) {
        //  file_put_contents($filename.$r, $value."n",FILE_APPEND);   
        // }
        // $offset+=$length;
        // if($offset>filesize($filename))
        //  break 1;
        // //正则替换
        $test=preg_replace("/n /mi","  ",$c);
        file_put_contents($filename.$r, $test,FILE_APPEND); 
        $offset+=$length;
        if($offset>=filesize($filename))
            break 1;
        //去除重复空白行
        // $test=preg_replace("/(n){2,}/mi","n",$c);
        // file_put_contents($filename.$r, $test,FILE_APPEND);  
        // $offset+=$length;
        // if($offset>=filesize($filename))
        //  break 1;
    }
    echo $filename.$r;
    ?>
下述代码是我用于计算词频的，
    php.exe count.php pass.txt
**代码内容**
     $value) {
        file_put_contents($r_file, $value.' '.$key,FILE_APPEND);    
    }
    echo $r_file;
    ?>
其他代码大同小异，就不提供了，密码片段的提取过程只是一个正则的修改，不再细述。
**0x04弱密码片段统计分析**
经过处理，我们从字符串类型、片段完整度两方面提取了9个文件，如下：
    multi.txt_字母提取.txt_C_O.txt_20115.txt
    multi.txt_字符提取.txt_C_O.txt_5327.txt
    multi.txt_数字提取.txt_C_O.txt_19182.txt
    字母提取.txt_C_O.txt_373.txt
    字母行.txt_C_O.txt_16123.txt
    字符提取.txt_C_O.txt_26830.txt
    字符行.txt_C_O.txt_3954.txt
    数字提取.txt_C_O.txt_15998.txt
    数字行.txt_C_O.txt_5071.txt
xx行指只用作完整密码的片段，multi.txt指不用作完整密码的片段，xx提取指包含以上二者的片段。
下面直接使用excel生成了可视化统计图。
到这里可以看出，该网站的用户在进行组合密码的时候，最常用的片段是123，123456，1，520，.，a，qq等，他们往往以这些片段与其他信息组合。
在不进行组合时，他们更多使用的是例如123456，……，woaini这些片段，和上述片段稍有不同
统一观察的结果基本是前面二者相加，做一个宽泛的概述。
**0x05 字符串类型组合情况**
这里我使用了数据库，方便数据的筛选。
另外，用a代表大小写字母，0代表数字，~代表特殊字符。
提取top20的组合制成统计图，情况如下。
数据结果显示，该批密码数据中，纯数字类型的密码高达60%（可以说是很可怕了）。
**参考代码如下**
     $value) {
        $t=preg_replace('/[a-zA-Z]+/','a',$value);
        $t=preg_replace('/d+/','0',$t);
        $t=preg_replace('/[^w]+/','~',$t);
        if(!$record[$t]){