User:  How to install and configure the Kubernetes cluster management system?
Assistant: 1. Building a Kubernetes cluster 1. Preparations 1.1 Hardware preparation Master node: 2-core 2G or more CPU, 50G or more hard disk Node node: 1-core 1G or more CPU, 50G or more hard disk 1.2 Environment preparation 1.2.1 Operating system selection The cluster environment is general It is recommended to choose CentOS7.4 or above as the operating system of the physical server, and the required software packages can be obtained from the default source of CentOS. 1.2.2 IP address planning Each node in the Kubernetes cluster must have a unique IP address. ·Master node: 192.168.10.10 ·Node node 1: 192.168.10.11 ·Node node 2: 192.168.10.12 1.2.3 software preparation ·Docker1.13 and above ·Etcd3.1 and above ·Kubernetes1.8.1 and above· kubectl1.8.1 and above 2. Install Docker 2.1 Add software warehouse yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo 2.2 Install Docker yum install docker- ce 2.3 Start Docker service and join the system self-start systemctl start docker systemctl enable docker 3. Install etcd 3.1 Download etcd binary file wget https://github.com/coreos/etcd/releases/download/v3.1.0/etcd-v3. 1.0-linux-amd64.tar.gz 3.2 Unzip and install etcd tar -zxvf etcd-v3.1.0-linux-amd64.tar.gz cp etcd-v3.1.0-linux-amd64/etcd* /usr/local/bin/ 3.3 Create etcd running directory mkdir -p /var/lib/etcd/default.etcd 3.4 Configure etcd ETCD_NAME="etcd0" ETCD_DATA_DIR="/var/lib/etcd/default.etcd" ETCD_LISTEN_PEER_URLS="http://192.168.10.10 :2380" ETCD_LISTEN_CLIENT_URLS="http://192.168.10.10:2379" ETCD_INITIAL_CLUSTER="etcd0=http://192.168.10.10:2380" ETCD_INITIAL_ADVERTISE_PEER_URLS="http://192.168.10.10:238 0" ETCD_INITIAL_CLUSTER_TOKEN="etcd-cluster " ETCD_ADVERTISE_CLIENT_URLS="http://192.168.10.10:2379" 3.5 Enable etcd service and join the system self-start cp etcd.service /etc/systemd/system/ systemctl enable etcd.service systemctl start etcd.service 4. Install Kubernetes 4.1 Download Kubernetes binaries wget https://storage.googleapis.com/kubernetes-release/release/v1.4.6/kubernetes.tar.gz 4.2 Unzip and install Kubernetes tar -zxvf kubernetes.tar.gz cp -r kubernetes/server/bin /* /usr/local/bin/ 4.3 Create Kubernetes running directory mkdir /etc/kubernetes/cert mkdir /etc/kubernetes/master.d 4.4 Configure Kubernetes Deploy Master kubeadm init --config=kubeadm-master.yml Deploy Node kubeadm join --token YOUR_TOKEN 192.168.10.10:6443 --discovery-token-ca-cert-hash YOUR_CA_CERT_HASH 4.5 Enable Kubernetes service and join system self-starting cp kube-apiserver.service /etc/systemd/system/cp kube-controller- manager.service /etc/systemd/system/ cp kube-scheduler.service /etc/systemd/system/ cp kubelet.service /etc/systemd/system/ cp kube-proxy.service /etc/systemd/system/ systemctl enable kube -apiserver kube-controller-manager kube-scheduler kubelet kube-proxy systemctl start kube-apiserver kube-controller-manager kube-scheduler kubelet kube-proxy 5. Install kubectl 5.1 Download kubectl binary wget https://storage.googleapis.com /kubernetes-release/release/v1.8.1/bin/linux/amd64/kubectl 5.2 copy kubectl to /usr/local/bin directory cp kubectl /usr/local/bin/ 5.3 configure kubectl KUBE_APISERVER="https://192.168 .10.10:6443" KUBE_MASTER="https://192.168.10.10:6443" KUBE_CONFIG="/etc/kubernetes/admin.conf" 6. Verify the Kubernetes cluster kubectl get nodes kubectl get pods kubectl get svc kubectl get deployments 2. Kubernetes Cluster management 1. Manage nodes kubectl get nodes View all cluster nodes kubectl get nodes NODE_NAME View specified nodes 2. Manage Pods 2.1 Create pods kubectl create -f POD.yaml 2.2 View pods kubectl get pods kubectl describe pod POD_NAME 2.3 Delete pods kubectl delete pods POD_NAME 3. Manage service 3.1 Create service kubectl apply -f SERVICE.yaml 3.2 View service kubectl get services kubectl describe services SERVICE_NAME 3.3 Delete service kubectl delete services SERVICE_NAME 4. Manage deployment 4.1 Create deployment kubectl create deployment --image=DOCKER_IMAGE DEPLO YMENT_NAME 4.2 view Deploy kubectl get deployments kubectl describe deployment DEPLOYMENT_NAME 4.3 delete deployment kubectl delete deployments DEPLOYMENT_NAME