 GUC参数的hint只在最外层查询生效——子查询内的GUC参数hint不生效。
 视图定义内的GUC参数hint不生效。
 CREATETABLE … AS … 查询最外层的GUC参数hint可以生效。
14.4.9.9 Custom Plan 和 Generic Plan 选择的 Hint
功能描述
对于以PBE方式执行的查询语句和DML语句，优化器会基于规则、代价、参数等因素
选择生成CustomPlan或GenericPlan执行。用户可以通过use_cplan/use_gplan的hint指定
使用哪种计划执行方式。
语法格式
指定使用CustomPlan：
use_cplan
指定使用GenericPlan：
use_gplan
对于非PBE方式执行的SQL语句，设置本hint不会影响执行方式。 - 本Hint的优先
级仅高于基于代价的选择和plan_cache_mode参数，即plan_cache_mode无法强制选择
执行方式的语句本hint也无法生效。
示例
强制使用CustomPlan
createtablet(aint,bint,cint);
preparepasselect/*+use_cplan*/*fromtwherea=$1;
explainexecutep(1);
计划如下。可以看到过滤条件为入参的实际值，即此计划为CustomPlan。
南大通用数据技术股份有限公司
588
GBase 8s V8.8开发者手册
强制使用GenericPlan
deallocatep;
preparepasselect/*+use_gplan*/*fromtwherea=$1;
explainexecutep(1);
计划如下。可以看到过滤条件为待填充的入参，即此计划为GenericPlan。
14.4.9.10 指定子查询不展开的 Hint
功能描述
数据库在对查询进行逻辑优化时通常会将可以提升的子查询提升到上层来避免嵌套执
行，但对于某些本身选择率较低且可以使用索引过滤访问页面的子查询，嵌套执行不会导致
性能下降过多，而提升之后扩大了查询路径的搜索范围，可能导致性能变差。对于此类情况，
可以使用no_expandHint进行调试。大多数情况下不建议使用此hint。
语法格式
no_expand
示例
正常的查询执行
explainselect*fromt1wheret1.ain(selectt2.afromt2);
计划
南大通用数据技术股份有限公司
589
GBase 8s V8.8开发者手册
加入no_expand
explainselect*fromt1wheret1.ain(select/*+no_expand*/t2.afromt2);
计划
14.4.9.11 指定不使用全局计划缓存的 Hint
功能描述
全局计划缓存打开时，可以通过no_gpcHint来强制单个查询语句不在全局共享计划缓
存，只保留会话生命周期的计划缓存。
语法格式
no_gpc
本参数仅在enable_global_plancache=on时对PBE执行的语句生效。
示例
dbe_perf.global_plancache_status视图中无结果即没有计划被全局缓存。
14.4.9.12 同层参数化路径的 Hint
功能描述
通过predpush_same_levelHint来指定同层表或物化视图之间参数化路径生成。
语法格式
predpush_same_level(src,dest)
predpush_same_level(src1src2...,dest)
本参数仅在rewrite_rule中的predpushforce选项打开时生效。
示例
准备参数和表及索引：
南大通用数据技术股份有限公司
590
GBase 8s V8.8开发者手册
gsql=#setrewrite_rule='predpushforce';
SET
gsql=#createtablet1(aint,bint);
CREATETABLE
gsql=#createtablet2(aint,bint);
CREATETABLE
gsql=#createindexidx1ont1(a);
CREATEINDEX
gsql=#createindexidx2ont2(a);
CREATEINDEX
执行语句查看计划：
gsql=#explainselect*fromt1,t2wheret1.a=t2.a;
QUERYPLAN
------------------------------------------------------------------
HashJoin (cost=27.50..56.25rows=1000width=16)
HashCond:(t1.a=t2.a)
-> SeqScanont1 (cost=0.00..15.00rows=1000width=8)
-> Hash (cost=15.00..15.00rows=1000width=8)
-> SeqScanont2 (cost=0.00..15.00rows=1000width=8)
(5rows)
可以看到t1.a=t2.a条件过滤在Join上面，此时可以通过predpush_same_level(t1,t2)将
条件下推至t2的扫描算子上：
gsql=#explainselect/*+predpush_same_level(t1,t2)*/*fromt1,t2wheret1.a=t2.a;
QUERYPLAN
---------------------------------------------------------------------
NestedLoop (cost=0.00..335.00rows=1000width=16)
-> SeqScanont1 (cost=0.00..15.00rows=1000width=8)
-> IndexScanusingidx2ont2 (cost=0.00..0.31rows=1width=8)
IndexCond:(a=t1.a)
(4rows)
predpush_same_level可以指定多个src，但是所有的src必须在同一个条件中。
如果指定的src和dest条件不存在，或该条件不符合参数化路径要求，则本hint不生效。
南大通用数据技术股份有限公司
591
GBase 8s V8.8开发者手册
14.5使用向量化执行引擎进行调优
GBase8s数据库支持行执行引擎和向量化执行引擎，分别对应行存表和列存表。
 一次一个batch，读取更多数据，节省IO。
 batch中记录较多，CPUcache命中率提升。
 Pipeline模式执行，函数调用次数少。
 一次处理一批数据，效率高。
GBase8s数据库所以对于分析类的复杂查询能够获得更好的查询性能。但列存表在数据
插入和数据更新上表现不佳，对于存在数据频繁插入和更新的业务无法使用列存表。
为了提升行存表在分析类的复杂查询上的查询性能，GBase8s数据库提供行存表使用向
量化执行引擎的能力。通过设置GUC参数try_vector_engine_strategy，可以将包含行存表的
查询语句转换为向量化执行计划执行。
行存表转换为向量化执行引擎执行不是对所有的查询场景都适用。参考向量化引擎的优
势，如果查询语句中包含表达式计算、多表join、聚集等操作时，通过转换为向量化执行能
够获得性能提升。从原理上分析，行存表转换为向量化执行，会产生转换的开销，导致性能
下降。而上述操作的表达式计算、join操作、聚集操作转换为向量化执行之后，能够获得获
得性能提升。所以查询转换为向量化执行后，性能是否提升，取决于查询转换为向量化之后
获得的性能提升能否高于转换产生的性能开销。
以TPCHQ1为例，使用行执行引擎时，扫描算子的执行时间为405210ms，聚集操作的
执行时间为2618964ms；而转换为向量化执行引擎后，扫描算子（SeqScan+VectorAdapter）
的执行时间为470840ms，聚集操作的执行时间为212384ms，所以查询能够获得性能提升。
TPCHQ1 行执行引擎执行计划：
​ QUERY
PLAN
-------------------------------------------------------------------------------------------------------------------
------------------------
​ Sort (cost=43539570.49..43539570.50rows=6width=260)(actual
time=3024174.439..3024174.439rows=4loops=1)
​ SortKey:l_returnflag,l_linestatus
​ SortMethod:quicksort Memory:25kB
​ -> HashAggregate (cost=43539570.30..43539570.41rows=6width=260)(actual
time=3024174.396..3024174.403rows=4loops=1)
南大通用数据技术股份有限公司
592
GBase 8s V8.8开发者手册
​ GroupByKey:l_returnflag,l_linestatus
​ -> SeqScanonlineitem (cost=0.00..19904554.46rows=590875396width=28)
(actualtime=0.016..405210.038rows=596140342loops=1)
​ Filter:(l_shipdate VectorSort (cost=43825808.16..43825808.18rows=6width=298)(actual
time=683224.919..683224.919rows=4loops=1)
​ SortKey:l_returnflag,l_linestatus
​ SortMethod:quicksort Memory:3kB
​ -> VectorSonicHashAggregate (cost=43825807.98..43825808.08rows=6
width=298)(actualtime=683224.837..683224.837rows=4loops=1)
​ GroupByKey:l_returnflag,l_linestatus
​ -> VectorAdapter(type:BATCHMODE)
(cost=19966853.54..19966853.54rows=596473861width=66)(actualtime=0.982..470840.274
rows=596140342loops=1)
​ Filter:(l_shipdate SeqScanonlineitem (cost=0.00..19966853.54
rows=596473861width=66)(actualtime=0.364..199301.737rows=600037902loops=1)
​ Totalruntime:683225.564ms
(11rows)
14.6TPCC 性能调优测试指导
14.6.1 概述
本章节主要介绍GBase8s数据库为了达到最佳TPMC性能，所依赖的关键系统级调优。
南大通用数据技术股份有限公司
593
GBase 8s V8.8开发者手册
14.6.2 搭建性能测试环境
14.6.2.1 硬件要求
服务器数量：2台服务器（1台用于数据库服务器，1台用于TPCC客户端）。
服务器硬件规格：
 Memory：大于512GB。
 FreeDisk：4块NVME硬盘，每块容量大于1TB。
 网卡：Hi1822千兆网卡，光纤互连。
14.6.2.2 软件要求
操作系统
操作系统要求：aarch64 架构
软件依赖
表 14-5软件依赖要求
所需软件 建议版本
numactl –
jdk 1.8.0-242
ant 1.10.5
htop –
14.6.2.3 前置软件安装
 安装jdk。
a.下载并安装jdk。
b. 配置环境变量，具体如下：
​ exportJAVA_HOME=your_path/jdk1.8.0_232
​ exportJRE_HOME=${JAVA_HOME}/jre
​ exportCLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/jre
南大通用数据技术股份有限公司
594
GBase 8s V8.8开发者手册
​ exportPATH=${PATH}:${JAVA_HOME}/bin
​ exportJAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8
 安装numactl。
执行如下命令安装numactl。
yuminstall–ynumactl
 安装ant。
a. 执行如下命令安装ant。
​ yuminstall–yant
b. 设置环境变量，修改文件/etc/profile，添加下面两行。
​ exportANT_HOME=/usr/share/ant/
​ exportPATH=${PATH}:${ANT_HOME}/bin
可能对于不同的操作系统ANT_HOME的安装路径不一样，可以通过find命令找打其
对应的安装路径。
 安装htop工具，具体请参见https://hisham.hm/htop/。
14.6.2.4 BIOS 配置
 恢复BIOS出厂设置。
修改相关BIOS设置，如下所示：
a.BIOS>Advanced>MISCConfig，配置SupportSmmu为Disabled，如图1所示。
南大通用数据技术股份有限公司
595
GBase 8s V8.8开发者手册
图 14-4 修改BIOS设置（1）
b.BIOS>Advanced>MISCConfig，配置CPUPrefetchingConfiguration为Disabled，如图
14-4所示。
c.BIOS>Advanced>MemoryConfig，配置DieInterleaving为Disable，如图14-5所示。
南大通用数据技术股份有限公司
596
GBase 8s V8.8开发者手册
图 14-5 修改BIOS设置（2）
重启BIOS系统。
14.6.2.5 操作系统配置
1.安装操作系统。
2.修改操作系统内核PAGESIZE为64KB。
3.关闭CPU中断的服务irqbalance。irqbalance负责均衡CPU中断，避免单CPU处理中
断负载过重。
以root用户登录操作系统，执行如下命令。
serviceirqbalancestop # 关闭Irqbalance。
echo0>/proc/sys/kernel/numa_balancing
echo'never'>/sys/kernel/mm/transparent_hugepage/enabled
echo'never'>/sys/kernel/mm/transparent_hugepage/defrag
echonone>/sys/block/nvme*n*/queue/scheduler # 针对nvme磁盘io队列调度机制设置。
14.6.2.6 文件系统配置
为了提升数据库的IO效率，我们使用NVME盘作为数据盘，需要采用的文件系统类型
为xfs，数据块大小为8KB。具体操作如下：
 查看当前数据盘的文件系统类型。
a. 执行如下命令查看当前挂载的nvme盘。
​ df-h|grepnvme
结果如下。
​ /dev/nvme0n1 3.7T 2.6T 1.2T 69%/data1
​ /dev/nvme1n1 3.7T 1.9T 1.8T 51%/data2
​ /dev/nvme2n1 3.7T 2.2T 1.6T 59%/data3
​ /dev/nvme3n1 3.7T 1.4T 2.3T 39%/data4
b.执行如下命令查看nvme盘的信息。
​ xfs_info
例如执行命令xfs_info/data1，如图14-6所示，block的大小正好为8KB，不需要修改；若
block不满足8kB大小的要求，需要重新格式化，格式化前请将数据进行备份。
南大通用数据技术股份有限公司
597
GBase 8s V8.8开发者手册
图 14-6 查看nvme盘的信息
对于需要修改的磁盘，备份所需的数据至其他磁盘或其他服务器。
格式化磁盘为xfs文件系统。以/dev/nvme0n1盘，加载路径为/data1为例，参考命令如
下。此步骤需根据实际环境情况进行操作。
umount/data1
mkfs.xfs-bsize=8192/dev/nvme0n1-f
mount/dev/nvme0n1/data1
并确认blocksize是否已修改为8KB。
14.6.2.7 网络配置