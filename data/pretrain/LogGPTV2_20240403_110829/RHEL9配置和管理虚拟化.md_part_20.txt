虚拟机(VM)与物理计算机一样，需要存储数据、程序和系统文件。作为虚拟机管理员，您可以为虚拟机分配物理或基于网络的存储，作为虚拟存储。您还可以修改虚拟机显示存储的方式，无论底层硬件是什么。
以下小节提供了有关不同类型的虚拟机存储、它们的工作原理，以及如何使用 CLI
或 Web 控制台管理它们。
::: section
::: titlepage
# []{#managing-storage-for-virtual-machines_configuring-and-managing-virtualization.html#understanding-virtual-machine-storage_managing-storage-for-virtual-machines}了解虚拟机存储 {.title}
:::
如果您对于虚拟机(VM)存储的新存储，或者不确定其工作方式，以下小节提供了有关虚拟机存储的各种组件的一般概述、工作方式、管理基础知识以及红帽提供的受支持解决方案。
您可以找到与以下相关的信息：
::: itemizedlist
-   [存储池](#managing-storage-for-virtual-machines_configuring-and-managing-virtualization.html#understanding-storage-pools_understanding-virtual-machine-storage "存储池简介"){.link}
-   [存储卷](#managing-storage-for-virtual-machines_configuring-and-managing-virtualization.html#storage-volumes_understanding-virtual-machine-storage "存储卷简介"){.link}
-   [使用 libvirt
    管理存储](#managing-storage-for-virtual-machines_configuring-and-managing-virtualization.html#con_storage-management-using-libvirt_understanding-virtual-machine-storage "使用 libvirt 进行存储管理"){.link}
-   [虚拟机存储概述](#managing-storage-for-virtual-machines_configuring-and-managing-virtualization.html#con_overview-of-storage-management_understanding-virtual-machine-storage "存储管理概述"){.link}
-   [支持和不支持的存储池类型](#managing-storage-for-virtual-machines_configuring-and-managing-virtualization.html#ref_supported-and-unsupported-storage-pool-types_understanding-virtual-machine-storage "支持和不支持的存储池类型"){.link}
:::
::: section
::: titlepage
## []{#managing-storage-for-virtual-machines_configuring-and-managing-virtualization.html#understanding-storage-pools_understanding-virtual-machine-storage}存储池简介 {.title}
:::
存储池是由 `libvirt`{.literal}
管理的文件、目录或存储设备，用于为虚拟机(VM)提供存储。您可以将存储池分为多个存储卷，用于存储虚拟机镜像或作为额外存储附加到虚拟机。
此外，多个虚拟机可以共享同一个存储池，从而更好地分配存储资源。
::: itemizedlist
-   存储池可以是持久的或临时的：
    ::: itemizedlist
    -   主机系统重启后，持久性存储池会保留下来。您可以使用
        `virsh pool-define`{.literal} 创建持久性存储池。
    -   临时存储池仅在主机重启前存在。您可以使用
        `virsh pool-create`{.literal} 命令创建临时存储池。
    :::
:::
::: title
**存储池存储类型**
:::
存储池可以是本地的也可以基于网络的（共享）:
::: itemizedlist
-   [**本地存储池**]{.strong}
    本地存储池直接附加到主机服务器。它们包括本地设备中的本地目录、直接附加磁盘、物理分区以及逻辑卷管理（LVM）卷组。
    本地存储池对不需要迁移或具有大量虚拟机的部署非常有用。
-   [**联网的（共享）存储池**]{.strong}
    联网的存储池包括使用标准协议通过网络共享的存储设备。
:::
:::
::: section
::: titlepage
## []{#managing-storage-for-virtual-machines_configuring-and-managing-virtualization.html#storage-volumes_understanding-virtual-machine-storage}存储卷简介 {.title}
:::
存储池被分为多个`存储卷`{.literal}。存储卷是物理分区、LVM
逻辑卷、基于文件的磁盘镜像以及 `libvirt`{.literal}
处理的其他存储类型的抽象。无论底层硬件是什么，存储卷都以本地存储设备（如磁盘）的形式出现在虚拟机中。
在主机机器中，存储卷的名称由其名称和存储池的标识符来引用。在
`virsh`{.literal} 命令行上，格式为
`--pool storage_pool volume_name`{.literal}。
例如：要在 [*guest_images*]{.emphasis} 池中显示名为
[*firstimage*]{.emphasis} 的卷信息。
``` literallayout
# virsh vol-info --pool guest_images firstimage
  Name:             firstimage
  Type:             block
  Capacity:         20.00 GB
  Allocation:       20.00 GB
```
:::
::: section
::: titlepage
## []{#managing-storage-for-virtual-machines_configuring-and-managing-virtualization.html#con_storage-management-using-libvirt_understanding-virtual-machine-storage}使用 libvirt 进行存储管理 {.title}
:::
使用 `libvirt`{.literal}
远程协议，您可以管理虚拟机存储的所有方面。这些操作也可以在远程主机上执行。因此，可以使用
`libvirt`{.literal} （如 RHEL web
控制台）的管理应用程序来执行虚拟机存储所需的所有任务。
您可以使用 `libvirt`{.literal} API
查询存储池中的卷列表，或者获取有关该存储池中容量、分配和可用存储的信息。对于支持它的存储池，您还可以使用
`libvirt`{.literal} API
创建、克隆、调整大小和删除存储卷。另外，您可以使用 `libvirt`{.literal}
API 将数据上传到存储卷，从存储卷下载数据，或者从存储卷中擦除数据。
:::
::: section
::: titlepage
## []{#managing-storage-for-virtual-machines_configuring-and-managing-virtualization.html#con_overview-of-storage-management_understanding-virtual-machine-storage}存储管理概述 {.title}
:::
为了说明可用于管理存储的可用选项，以下示例讨论使用
`mount -t nfs nfs.example.com:/path/to/share /path/to/data`{.literal} 的
NFS 服务器示例。
作为存储管理员：
::: itemizedlist
-   您可以在虚拟化主机上定义 NFS
    存储池来描述导出的服务器路径和客户端目标路径。因此，`libvirt`{.literal}
    可在 `libvirt`{.literal} 启动时或者根据需要在 `libvirt`{.literal}
    运行时自动挂载存储。
-   您只需按名称将存储池和存储卷添加到虚拟机中。您不需要添加目标路径到卷。因此，即使目标客户端路径改变，它不会影响虚拟机。
-   您可以将存储池配置为 autostart。当您这样做时，` libvirt`{.literal}
    ``{=html} 会在启动 libvirt 时自动挂载 NFS
    共享磁盘。`libvirt`{.literal} 在指定目录中挂载共享，类似于
    `挂载 nfs.example.com:/path/to/share /vmdata`{.literal}。
-   您可以使用 `libvirt`{.literal} API
    查询存储卷路径。这些存储卷基本上是 NFS
    共享磁盘中存在的文件。然后，您可以将这些路径复制到虚拟机 XML
    定义的部分，该部分描述了虚拟机块设备的源存储。
-   如果是 NFS，您可以使用使用 `libvirt`{.literal} API
    的应用程序创建和删除存储池中的存储卷（NFS
    共享中的文件）到池大小的限制（共享存储容量）。
    请注意，并非所有存储池类型都支持创建和删除卷。
-   当不再需要时，您可以停止存储池。停止存储池(`pool-destroy`{.literal})会撤消启动操作，在这种情况下，卸载
    NFS
    共享。销毁操作不会修改共享中的数据，即使该命令的名称看似象要删除。如需更多信息，请参阅
    `man virsh`{.literal}。
:::
:::
::: section
::: titlepage
## []{#managing-storage-for-virtual-machines_configuring-and-managing-virtualization.html#ref_supported-and-unsupported-storage-pool-types_understanding-virtual-machine-storage}支持和不支持的存储池类型 {.title}
:::
[**支持的存储池类型**]{.strong}
以下是 RHEL 支持的存储池类型列表：
::: itemizedlist
-   基于目录的存储池
-   基于磁盘的存储池
-   基于分区的存储池
-   基于 iSCSI 的存储池
-   基于 LVM 的存储池
-   基于 NFS 的存储池
-   使用 vHBA 设备基于 SCSI 的存储池
-   基于多路径的存储池
-   基于 RBD 的存储池
:::
[**不支持的存储池类型**]{.strong}
以下是 RHEL 不支持的 `libvirt`{.literal} 存储池类型列表：
::: itemizedlist
-   基于 Sheepdog 的存储池
-   基于 Vstorage 的存储池
-   基于 ZFS 的存储池
-   iscsi-direct 存储池
-   glusterfs 存储池
:::
:::
:::
::: section
::: titlepage
# []{#managing-storage-for-virtual-machines_configuring-and-managing-virtualization.html#assembly_managing-virtual-machine-storage-pools-using-the-cli_managing-storage-for-virtual-machines}使用 CLI 管理虚拟机存储池 {.title}
:::
您可以使用 CLI 管理存储池的以下方面来为虚拟机分配存储：
::: itemizedlist
-   [查看存储池信息](#managing-storage-for-virtual-machines_configuring-and-managing-virtualization.html#viewing-storage-pool-information-using-the-cli_assembly_managing-virtual-machine-storage-pools-using-the-cli "使用 CLI 查看存储池信息"){.link}
-   创建存储池
    ::: itemizedlist
    -   [使用 CLI
        创建基于目录的存储池](#managing-storage-for-virtual-machines_configuring-and-managing-virtualization.html#creating-directory-based-storage-pools-using-the-cli_assembly_managing-virtual-machine-storage-pools-using-the-cli "使用 CLI 创建基于目录的存储池"){.link}
    -   [使用 CLI
        创建基于磁盘的存储池](#managing-storage-for-virtual-machines_configuring-and-managing-virtualization.html#creating-disk-based-storage-pools-using-the-cli_assembly_managing-virtual-machine-storage-pools-using-the-cli "使用 CLI 创建基于磁盘的存储池"){.link}
    -   [使用 CLI
        创建基于文件系统的存储池](#managing-storage-for-virtual-machines_configuring-and-managing-virtualization.html#creating-filesystem-based-storage-pools-using-the-cli_assembly_managing-virtual-machine-storage-pools-using-the-cli "使用 CLI 创建基于文件系统的存储池"){.link}
    -   [使用 CLI 创建基于 iSCSI
        的存储池](#managing-storage-for-virtual-machines_configuring-and-managing-virtualization.html#creating-iscsi-based-storage-pools-using-the-cli_assembly_managing-virtual-machine-storage-pools-using-the-cli "使用 CLI 创建基于 iSCSI 的存储池"){.link}
    -   [使用 CLI 创建基于 LVM
        的存储池](#managing-storage-for-virtual-machines_configuring-and-managing-virtualization.html#creating-lvm-based-storage-pools-using-the-cli_assembly_managing-virtual-machine-storage-pools-using-the-cli "使用 CLI 创建基于 LVM 的存储池"){.link}
    -   [使用 CLI 创建基于 NFS
        的存储池](#managing-storage-for-virtual-machines_configuring-and-managing-virtualization.html#creating-nfs-based-storage-pools-using-the-cli_assembly_managing-virtual-machine-storage-pools-using-the-cli "使用 CLI 创建基于 NFS 的存储池"){.link}
    -   [使用 CLI 创建带有 vHBA 设备的基于 SCSI
        的存储池](#managing-storage-for-virtual-machines_configuring-and-managing-virtualization.html#creating-scsi-based-storage-pools-with-vhba-devices-using-the-cli_assembly_managing-virtual-machine-storage-pools-using-the-cli "通过 CLI，创建带有 vHBA 设备的基于 SCSI 的存储池"){.link}
    :::
-   [删除存储池](#managing-storage-for-virtual-machines_configuring-and-managing-virtualization.html#deleting-storage-pools-using-the-cli_assembly_managing-virtual-machine-storage-pools-using-the-cli "使用 CLI 删除存储池"){.link}
:::
::: section
::: titlepage
## []{#managing-storage-for-virtual-machines_configuring-and-managing-virtualization.html#viewing-storage-pool-information-using-the-cli_assembly_managing-virtual-machine-storage-pools-using-the-cli}使用 CLI 查看存储池信息 {.title}
:::
使用
CLI，您可以查看所有具有有限或关于存储池的详情的存储池列表。您还可以过滤列出的存储池。
::: itemizedlist
**流程**
-   使用 `virsh pool-list`{.literal} 命令查看存储池信息。
    ``` literallayout
    # virsh pool-list --all --details
     Name                State    Autostart  Persistent    Capacity  Allocation   Available
     default             running  yes        yes          48.97 GiB   23.93 GiB   25.03 GiB
     Downloads           running  yes        yes         175.62 GiB   62.02 GiB  113.60 GiB
     RHEL-Storage-Pool   running  yes        yes         214.62 GiB   93.02 GiB  168.60 GiB
    ```
:::
::: itemizedlist
**其它资源**
-   `virsh pool-list --help`{.literal} 命令
:::
:::
::: section
::: titlepage
## []{#managing-storage-for-virtual-machines_configuring-and-managing-virtualization.html#creating-directory-based-storage-pools-using-the-cli_assembly_managing-virtual-machine-storage-pools-using-the-cli}使用 CLI 创建基于目录的存储池 {.title}
:::
基于目录的存储池基于现有挂载的文件系统中的目录。这很有用，例如您要使用文件系统上的剩余空间来满足其他目的。您可以使用
`virsh`{.literal} 实用程序创建基于目录的存储池。
::: itemizedlist
**先决条件**
-   确定您的管理程序支持目录存储池：
    ``` literallayout
    # virsh pool-capabilities | grep "'dir' supported='yes'"
    ```
    如果命令显示任何输出结果，则代表支持目录池。
:::
::: orderedlist
**流程**
1.  [**创建存储池**]{.strong}
    使用 `virsh pool-define-as`{.literal}
    命令定义和创建目录类型存储池。例如，要创建一个名为
    `guest_images_dir`{.literal} 的存储池，它使用
    [**/guest_images**]{.strong} 目录：
    ``` literallayout
    # virsh pool-define-as guest_images_dir dir --target "/guest_images"
    Pool guest_images_dir defined