### Title: Blackhat EU-18 Drill Apple Core: Up and Down - Fuzzing Apple Core Components in Kernel and User Mode for Fun and Profit

Apple's operating systems, including macOS and iOS, have gained significant popularity among both general users and the hacking community. The core modules of these systems, such as the XNU kernel and XPC services, are becoming increasingly attractive targets for attacks due to their shared codebase across different Apple platforms. This shared codebase allows attackers to maximize their efforts with minimal effort.

#### Kernel Mode Fuzzing
In the context of kernel mode, effective fuzzing requires code-coverage support to ensure deep and thorough testing. However, we have not seen any comprehensive XNU fuzzing based on code-coverage, particularly using static analysis. In this presentation, we will demonstrate how to develop kernel sanitizers that provide code-coverage support and detect memory issues. We have also developed approximately 530 detailed patterns based on the grammar of XNU syscall APIs. 

We will showcase a live demonstration of exploiting the latest macOS (10.13.6) using three zero-day vulnerabilities discovered by our fuzzer. Additionally, we will introduce a powerful technique for obtaining code-coverage without access to the source code, which can be invaluable for developing smart fuzzers against closed-source targets.

#### User Mode Fuzzing
For user mode, we will present a new fuzzing method designed using Python scripts. Our fuzzing project targets XPC services, allowing you to quickly identify and reproduce dozens of XPC service daemon crashes in minutes or even seconds.

By combining these techniques, we aim to provide a comprehensive approach to fuzzing Apple's core components, enabling both security researchers and ethical hackers to uncover and mitigate vulnerabilities more effectively.