### Intent注入漏洞概述

**Intent注入的范畴**
- `Action/Component/Data`仅是狭义示例，实际上所有构成Intent的元素均可被注入。

**攻击者控制范围**
- 攻击者可以控制发送Intent的目标或数据，甚至全部组件。
  - **Action**
  - **Component**
  - **Extras**
  - **Data**
  - **Intent**

### 具体案例

#### 安卓拨打电话权限绕过漏洞 (CVE-2013-6272)
- **发现时间**: 2013年
- **影响**: 绕过拨打电话权限
- **其他发现**: 发现了一个相关的0day漏洞

#### WapPushManager中的SQL注入
- **发现时间**: 2014年10月11日报告，11月8日确认
- **受影响组件**: `com.android.smspush.WapPushManager`
- **攻击方式**:
  - 通过模拟端口发送WAP Push SMS
  - 手机收到后触发SQL注入，查询并启动设置中的组件
- **POC示例**:
  ```
  0891683108200105f04408a00156
  08860104216092902512237B0605
  040b8423f00A065603B081EAAF2
  720756e696f6e2073656c65637420
  302c27636f6d2e616e64726f6964
  2e73657474696e6773272c27636f6
  6d2e616e64726f69642e736574746
  96e67732e53657474696e6773272c
  302c302c302d2d200002066A008
  509036D6F62696C6574696E
  67732E636F6D2F0001
  37
  ```

### PendingIntent的风险与限制
- **用途**: 常用于通知
- **特性**:
  - 延时的
  - 包裹着真实的Intent
  - 创建者的上下文
- **风险**:
  - A将将来要发送的Intent打包交给B，即使A已不存在，B也能以A的上下文发出该Intent
  - B篡改这个Intent = Intent注入
- **安卓限制**:
  - 默认情况下，除非开发者设置特殊标记，B无法修改Component
  - 仅当A的原始Intent中action为空，B才可以修改action
  - 如果A的原始Intent中component与action都为空，B可以控制Intent的目标和Extras部分的数据

### 漏洞扫描方法
- **扫描方法**:
  - 扫描每个方法，根据情况调整告警级别
  - 构造PendingIntent的方法（如`getActivity`, `getBroadcast`, `getService`, `createPendingResult`, `getActivities`），若发现则设定告警级别为低
  - 在同一个方法中，检查是否调用Intent的设置Component方法（如特定intent构造函数, `setClass`, `setClassName`, `setComponent`），若没有则调高告警级别为中
  - 在同一个方法中，检查是否调用Intent的设置action方法（如特定intent构造函数, `setAction`），若没有则调高告警级别为高
  - 其他细节调整：例如开发人员主动设置了相关的特殊标记，同一个方法中用`putExtra`将PendingIntent打包到Intent中

- **扫描结果**:
  - 对Android 4.4全系统扫描后发现152例告警，其中高优先级35例
  - 发现一个0day漏洞

### 具体漏洞实例

#### 安卓Settings中的PendingIntent权限泄漏漏洞
- **发现时间**: 2014年9月2日报告，9月10日确认
- **受影响组件**: `com.android.settings.accounts.AddAccountSettings.addAccount(String)`
- **攻击方式**:
  - 安装时提示无需任何权限
  - 启动后自动伪造来自任意手机号的一条短信
  - 另一个严重的Demo中，启动后自动重启用户手机并清除包括短信、通信录等数据

### parseUri注入

- **基于Intent的URI语法**:
  ```
  intent:HOST/URI-path  // Optional host
  #Intent;
  package=[string];
  action=[string];
  category=[string];
  component=[string];
  scheme=[string];
  end;
  ```
- **参考**:
  - [1] http://www.mbsd.jp/Whitepaper/IntentScheme.pdf
  - [2] http://drops.wooyun.org/papers/2893

- **扫描结果**:
  - 对Android 4.4全系统扫描后发现9例告警，并未发现明显的安全问题
  - 发现Chrome的一个0day漏洞

### 结论

- **Intent注入的形式**:
  - Intent转换与复制
  - Action/Component/Data注入
  - PendingIntent误用
  - parseUri注入

- **自动化工具**:
  - 通过批量扫描，可以轻易发现这些漏洞

- **发现的0day漏洞**:
  - 在每种形式中都找到了一个安卓OS或Chrome安卓版的0day，达到本地提权或远程命令执行的效果
  - 分别得到了Android与Chrome的官方致谢

- **官方致谢**:
  - Android: http://source.android.com/devices/tech/security/overview/acknowledgements.html
  - Chrome: http://googlechromereleases.blogspot.com/2014/11/stable-channel-update_18.html

谢谢！