// Library Function - Single Match
// Name: ___FrameUnwindFilter
// Library: Visual Studio 2015 Release
undefined4 ___FrameUnwindFilter(int **param_1)
{
  int *piVar1;
  int iVar2;
  undefined4 uVar3;
  piVar1 = *param_1;
  if ((*piVar1 == -0x1fbcbcae) || (*piVar1 == -0x1fbcb0b3)) {
    iVar2 = ___vcrt_getptd();
    if (0 > 1 & 1) == 0) {
        uVar11 = param_3;
        if (((uint)puVar16 & 3) != 0) {
          uVar11 = (uint)puVar16 & 3;
          param_3 = param_3 - uVar11;
          do {
            *(undefined *)((int)puVar16 - 1) = *(undefined *)((int)puVar14 + -1);
            puVar14 = (undefined4 *)((int)puVar14 + -1);
            puVar16 = (undefined4 *)((int)puVar16 - 1);
            uVar11 = uVar11 - 1;
          } while (uVar11 != 0);
        }
        uVar10 = param_3;
        if (0x1f > 2;
          while( true ) {
            if (uVar10 == 0) break;
            uVar10 = uVar10 - 1;
            puVar16[-1] = puVar14[-1];
            puVar14 = puVar14 + -1;
            puVar16 = puVar16 + -1;
          }
          switch(param_3 & 3) {
          case 0:
            return CONCAT44(param_3,param_1) & 0x3ffffffff;
          case 1:
            *(undefined *)((int)puVar16 - 1) = *(undefined *)((int)puVar14 + -1);
            return CONCAT44(param_3,param_1) & 0x3ffffffff;
          case 2:
            *(undefined *)((int)puVar16 - 1) = *(undefined *)((int)puVar14 + -1);
            *(undefined *)((int)puVar16 - 2) = *(undefined *)((int)puVar14 + -2);
            return CONCAT44(param_3,param_1) & 0x3ffffffff;
          case 3:
            *(undefined *)((int)puVar16 - 1) = *(undefined *)((int)puVar14 + -1);
            *(undefined *)((int)puVar16 - 2) = *(undefined *)((int)puVar14 + -2);
            *(undefined *)((int)puVar16 - 3) = *(undefined *)((int)puVar14 + -3);
            return CONCAT44(param_3,param_1) & 0x3ffffffff;
          }
        }
      }
      else {
        while (puVar15 = puVar14, puVar17 = puVar16, ((uint)puVar16 & 0xf) != 0) {
          puVar14 = (undefined4 *)((int)puVar14 + -1);
          puVar16 = (undefined4 *)((int)puVar16 + -1);
          *(undefined *)puVar16 = *(undefined *)puVar14;
          uVar10 = uVar10 - 1;
        }
        do {
          puVar14 = puVar15;
          puVar16 = puVar17;
          if (uVar10 > 1 & 1) != 0) {
LAB_0040551d:
        if (uVar10 == 0) goto LAB_00405580;
        param_3 = uVar10 >> 5;
        while (param_3 != 0) {
                    // WARNING: Load size is inaccurate
                    // WARNING: Load size is inaccurate
          auVar19 = *(undefined *)(param_2 + 2);
                    // WARNING: Store size is inaccurate
          *(undefined *)puVar18 = *(undefined *)param_2;
                    // WARNING: Store size is inaccurate
          *(undefined *)(puVar18 + 2) = auVar19;
          param_2 = param_2 + 4;
          puVar18 = puVar18 + 4;
          param_3 = param_3 - 1;
        }
        goto LAB_0040554b;
      }
LAB_00405277:
      uVar10 = (uint)param_1 & 3;
      puVar18 = param_1;
      while (uVar10 != 0) {
        *(undefined *)puVar18 = *(undefined *)param_2;
        param_3 = param_3 - 1;
        param_2 = (undefined8 *)((int)param_2 + 1);
        puVar18 = (undefined8 *)((int)puVar18 + 1);
        uVar10 = (uint)puVar18 & 3;
      }
    }
    else {
      uVar10 = param_3;
      puVar18 = param_1;
      if ((DAT_0041ec78 >> 1 & 1) != 0) {
        while (uVar10 != 0) {
          uVar10 = uVar10 - 1;
          *(undefined *)puVar18 = *(undefined *)param_2;
          param_2 = (undefined8 *)((int)param_2 + 1);
          puVar18 = (undefined8 *)((int)puVar18 + 1);
        }
        return CONCAT44(param_3,param_1);
      }
      if (((((uint)param_1 ^ (uint)param_2) & 0xf) == 0) && ((DAT_0041e010 >> 1 & 1) != 0)) {
        puVar18 = param_1;
        if (((uint)param_2 & 0xf) != 0) {
          uVar11 = 0x10 - ((uint)param_2 & 0xf);
          param_3 = param_3 - uVar11;
          uVar10 = uVar11 & 3;
          puVar18 = param_1;
          while (uVar10 != 0) {
            *(undefined *)puVar18 = *(undefined *)param_2;
            param_2 = (undefined8 *)((int)param_2 + 1);
            puVar18 = (undefined8 *)((int)puVar18 + 1);
            uVar10 = uVar10 - 1;
          }
          uVar11 = uVar11 >> 2;
          while (uVar11 != 0) {
            *(uint *)puVar18 = *(uint *)param_2;
            param_2 = (undefined8 *)((int)param_2 + 4);
            puVar18 = (undefined8 *)((int)puVar18 + 4);
            uVar11 = uVar11 - 1;
          }
        }
        uVar10 = param_3 & 0x7f;
        param_3 = param_3 >> 7;
        while (param_3 != 0) {
                    // WARNING: Load size is inaccurate
                    // WARNING: Load size is inaccurate
          auVar19 = *(undefined *)(param_2 + 2);
                    // WARNING: Load size is inaccurate
          auVar2 = *(undefined *)(param_2 + 4);
                    // WARNING: Load size is inaccurate
          auVar3 = *(undefined *)(param_2 + 6);
                    // WARNING: Store size is inaccurate
          *(undefined *)puVar18 = *(undefined *)param_2;
                    // WARNING: Store size is inaccurate
          *(undefined *)(puVar18 + 2) = auVar19;
                    // WARNING: Store size is inaccurate
          *(undefined *)(puVar18 + 4) = auVar2;
                    // WARNING: Store size is inaccurate
          *(undefined *)(puVar18 + 6) = auVar3;
                    // WARNING: Load size is inaccurate
                    // WARNING: Load size is inaccurate
          auVar19 = *(undefined *)(param_2 + 10);
                    // WARNING: Load size is inaccurate
          auVar2 = *(undefined *)(param_2 + 0xc);
                    // WARNING: Load size is inaccurate
          auVar3 = *(undefined *)(param_2 + 0xe);
                    // WARNING: Store size is inaccurate
          *(undefined *)(puVar18 + 8) = *(undefined *)(param_2 + 8);
                    // WARNING: Store size is inaccurate
          *(undefined *)(puVar18 + 10) = auVar19;
                    // WARNING: Store size is inaccurate
          *(undefined *)(puVar18 + 0xc) = auVar2;
                    // WARNING: Store size is inaccurate
          *(undefined *)(puVar18 + 0xe) = auVar3;
          param_2 = param_2 + 0x10;
          puVar18 = puVar18 + 0x10;
          param_3 = param_3 - 1;
        }
        goto LAB_0040551d;
      }
      if (((DAT_0041ec78 & 1) == 0) || (((uint)param_1 & 3) != 0)) goto LAB_00405277;
      puVar18 = param_1;
      if (((uint)param_2 & 3) == 0) {
        if (((uint)param_1 >> 2 & 1) != 0) {
          uVar8 = *(undefined4 *)param_2;
          param_3 = param_3 - 4;
          param_2 = (undefined8 *)((int)param_2 + 4);
          *(undefined4 *)param_1 = uVar8;
          param_1 = (undefined8 *)((int)param_1 + 4);
        }
        if (((uint)param_1 >> 3 & 1) != 0) {
          uVar1 = *param_2;
          param_3 = param_3 - 8;
          param_2 = param_2 + 1;
          *param_1 = uVar1;
          param_1 = param_1 + 1;
        }
        if (((uint)param_2 & 7) == 0) {
                    // WARNING: Load size is inaccurate
          puVar18 = param_2 + -1;
          auVar19 = *(undefined *)(param_2 + -1);
          do {
            puVar13 = puVar18;
                    // WARNING: Load size is inaccurate
            auVar2 = *(undefined *)(puVar13 + 2);
            param_3 = param_3 - 0x30;
                    // WARNING: Load size is inaccurate
            auVar3 = *(undefined *)(puVar13 + 4);
                    // WARNING: Load size is inaccurate
            auVar4 = *(undefined *)(puVar13 + 6);
                    // WARNING: Store size is inaccurate
            *(undefined *)param_1 = SUB3216(ZEXT2032(CONCAT416(0x40,auVar19)) >> 0x40,0);
                    // WARNING: Store size is inaccurate
            *(undefined *)(param_1 + 2) = SUB3216(ZEXT2032(CONCAT416(0x40,auVar2)) >> 0x40,0);
                    // WARNING: Store size is inaccurate
            *(undefined *)(param_1 + 4) = SUB3216(ZEXT2032(CONCAT416(0x40,auVar3)) >> 0x40,0);