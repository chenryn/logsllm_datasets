![](img/f7455e6eb9a4b78055759be1d746dd00.png)
我们还可以使用 mv 命令将目录从一个位置移动到另一个位置。在这种情况下，我们不需要像使用 cp 命令时那样使用'-r '标志。请注意，如果我们使用 mv 命令，原始目录将不存在。
mv 命令的一个重要用途是重命名文件和目录。让我们看看如何使用这个命令进行重命名。
我们首先将我们的位置更改为“test_directory”。然后，我们使用 mv 命令将“_test_runner.py”文件重命名为“test.py”。
![](img/452f5731333a3b5d7f56c6ae109454cb.png)
## 查看文件的命令
有五个常用于查看文件的基本命令:
*   猫
*   头
*   尾巴
*   更多
*   较少的
我们现在将尝试理解每个命令的作用以及如何使用这些命令。您还应该在在线 bash shell 上练习给出的示例。
我们将创建一个名为“numbers.txt”的新文件，并在该文件中插入从 1 到 100 的数字。每个数字将在一个单独的行。
![](img/f5174bef8eeba4f0fc4225936e90f267.png)
现在不要担心上面的命令。这是一个用于生成数字的高级命令。然后，我们使用重定向操作符将这些数字推送到文件中。我们将在后面的章节中讨论 I/O 重定向。
### 猫
cat 命令最简单的用法是在输出屏幕上打印文件的内容。这个命令非常有用，可以用于许多其他目的。稍后我们将学习其他用例。
![](img/1ff3d4aff2cf431d831b2e33896d238b.png)
你可以试着运行上面的命令，你会在屏幕上看到从 1 到 100 的数字。你需要向上滚动才能看到所有的数字。
### 头
默认情况下，head 命令显示文件的前 10 行。我们可以包含额外的参数，从顶部开始显示任意多的行。
在这个例子中，当我们使用 head 命令时，我们只能看到文件的前 10 行。
![](img/7bde4b5ed89edb65df1b03f566cf39d1.png)
默认情况下，head 命令将只显示前 10 行。如果我们想要指定我们想要从开始看到的行数，使用'-n '参数来提供输入。
![](img/94c5031a76565cbce609511c963154e0.png)
### 尾巴
默认情况下，tail 命令显示文件的最后 10 行。我们可以包含额外的参数，从文件末尾开始显示任意多的行。
![](img/08689a635c39a81efb73e293340469c1.png)
默认情况下，tail 命令将只显示最后 10 行。如果我们想指定我们想从末尾看到的行数，使用'-n '参数来提供输入。
![](img/dfd10af84e19ffdbd6a3542f1c41d352.png)
在本例中，当我们使用带有 explicit -n 选项的 tail 命令时，我们只能看到文件的最后 5 行。
### 更多
More command 显示文件或命令输出的内容，如果文件很大(例如:日志文件)，则一次显示一个屏幕。它还允许在文件中向前导航和有限的向后导航。
![](img/d5f47140d342de3ee0f9166b4912b158.png)
More command 尽可能多地显示在当前屏幕上，并等待用户输入前进。向前导航可以通过按 Enter 键来完成，这将使输出前进一行，按 Space 键将输出前进一屏。
### 较少的
Less command 是 more 的改进版本。它显示文件或命令输出的内容，一次显示一页。它允许在文件中向后导航和向前导航，也有搜索选项。我们可以使用箭头键向前或向后移动一行。向前移动一页，按空格键；向后移动一页，按键盘上的 b 键。您可以立即转到文件的开头和结尾。
## Linux 中的 Echo 命令
echo 命令是 shell 中使用的最简单的命令之一。这个命令相当于我们在其他编程语言中拥有的。
echo 命令在屏幕上打印给定的输入字符串。
![](img/dc395697db44f1feb33b5d3b8105054b.png)
## 文本处理命令
在上一节中，我们学习了如何查看文件的内容。在许多情况下，我们会对执行以下操作感兴趣:
*   仅打印包含特定单词的行
*   用文件中的另一个单词替换特定的单词
*   按特定顺序对行进行排序
有三个常用于处理文本的基本命令:
*   可做文件内的字符串查找
*   一项 Linux 指令
*   分类
我们现在将尝试理解每个命令的作用以及如何使用这些命令。您还应该在在线 bash shell 上练习给出的示例。
我们将创建一个名为“numbers.txt”的新文件，并在该文件中插入从 1 到 10 的数字。每个数字将在一个单独的行。
![](img/aa631edfa1629cbb0aaf74cd29d866d0.png)
### 可做文件内的字符串查找
grep 命令最简单的形式可以用来搜索文本文件中的特定单词。它将显示包含特定输入的文件中的所有行。我们要搜索的单词作为 grep 命令的输入提供。
使用 grep 命令的一般语法:
```sh
grep   
```
在这个例子中，我们试图在这个文件中搜索一个字符串“1”。grep 命令输出找到该字符串的行。
![](img/76d984535f9af15d1ecc19ff382e661d.png)
### 一项 Linux 指令
最简单的 sed 命令可以用来替换文件中的文本。
使用 sed 命令进行替换的一般语法:
```sh
sed 's///'  
```
让我们尝试使用 sed 命令将文件中出现的“1”替换为“3”。
![](img/4a282156642a6d33720c42657d3fed92.png)
在上面的例子中，文件的内容不会改变。为此，我们必须使用一个额外的参数'-i '，以便将更改反映到文件中。
### 分类
sort 命令可用于对作为参数提供给它的输入进行排序。默认情况下，它将按升序排序。
在尝试对文件进行排序之前，让我们先看看文件的内容。
![](img/360d10be0de34f5b9160dc735771b5c7.png)
现在，我们将尝试使用 sort 命令对文件进行排序。sort 命令按字典顺序对内容进行排序。
![](img/c9afcaa9d0960a88536f9c3aaca6874f.png)
在上面的例子中，文件的内容不会改变。
## 输入输出重定向
每个打开的文件被分配一个文件描述符。文件描述符是系统中打开文件的唯一标识符。总是有三个默认文件打开，stdin(键盘)、stdout(屏幕)和 stderr(输出到屏幕的错误消息)。这些文件可以被重定向。
Linux-[https://UNIX . stack exchange . com/questions/225537/everything-is-a-file](https://unix.stackexchange.com/questions/225537/everything-is-a-file)
到目前为止，我们已经在屏幕上显示了所有的输出，这是标准输出。我们可以使用一些特殊的操作符将命令的输出重定向到文件，甚至重定向到其他命令的输入。I/O 重定向是一个非常强大的功能。
在下面的例子中，我们使用了'>'操作符将 ls 命令的输出重定向到 output.txt 文件。
![](img/f6322b7fb0b7982a1fb89a0f3e0f2c41.png)
在下面的例子中，我们将 echo 命令的输出重定向到一个文件。
![](img/cef648b8c6c1046cdd1d935003bb2ddb.png)
我们还可以将一个命令的输出重定向为另一个命令的输入。借助管道，这是可能的。
在下面的示例中，我们使用管道(|)操作符将 cat 命令的输出作为输入传递给 grep 命令。
![](img/7f913a17793f38a17a7f848d6bc89cf5.png)
在下面的例子中，我们使用管道(|)操作符将 sort 命令的输出作为输入传递给 uniq 命令。uniq 命令只打印输入中的唯一数字。
![](img/e78e1339c080fc1f00f7f26df3a449ee.png)
输入/输出重定向-[https://tldp.org/LDP/abs/html/io-redirection.html](https://tldp.org/LDP/abs/html/io-redirection.html)