针对 XSS 的防护，除了要对用户输入的特殊符号进行过滤，还要区分是
否是富文本进而进行相应编码操作，在输入时过滤的同时在输出时也进
行过滤操作。
即使做了十足的过滤、编码等安全防护，为了更一步确保缓解 XSS 攻击，
Internet Explorer 6 SP1 为 Cookie 引入了一个新属性，这个属性规定，
不许通过脚本访问 cookie。Web 站点程序对 Cookie 启用 HTTP-Only
第 7页 共 12页
属性后，可确保即使发生 XSS 攻击，也可以阻止通过脚本访问 Cookie
的操作。
2.6
威胁建模
威胁建模是一种分析应用程序威胁的过程和方法。这里的威胁是指恶意用户
可能会试图利用以破坏系统，和我们常说的漏洞并不相同。漏洞是一个特定的可
以被利用的威胁，如缓冲区溢出、sql 注入等。
作为 SDL 设计阶段的一部分安全活动，威胁建模允许安全设计人员尽在的
识别潜在的安全问题并实施相应缓解措施。在设计阶段把潜在的威胁发现有助于
威胁的全面和更有效的解决，同时也有助于降低开发和后期维护的成本。威胁建
模的一般流程如下:
与系统架构师及设计人员沟通，了解设计详情
使用成熟的威胁建模方法分析当前设计潜在的安全问题
提出安全建议及对潜在威胁的缓解措施
对安全设计进行验证并对整个设计方案进行回顾并再次确认
微软使用的威胁建模方法是 STRIDE 威胁建模方法。为了便于安全人员快速
便捷的进行威胁建模，微软开发基于 STRIDE 威胁建模方法的 SDL Threat
Modeling Tool2威胁建模工具，该工具可以帮助安全人员画数据流图、分析威胁、
生成并导出威胁建模报告。
三.
STRIDE 威胁建模方法
3.1
STRIDE 介绍
STRIDE 威胁建模是由微软提出的一种威胁建模方法，该方法将威胁类型分
为 Spoofing（仿冒）、Tampering（篡改）、Repudiation（抵赖）、Information
Disclosure（信息泄漏）、Denial of Service（拒绝服务）和 Elevation of Privilege
2 https://www.microsoft.com/en-us/sdl/adopt/threatmodeling.aspx
第 8页 共 12页
（权限提升）。这六种威胁的首字母缩写即是 STRIDE，STRIDE 威胁模型几乎
可以涵盖目前绝大部分安全问题。此外，STRIDE 威胁建模方法有着详细的流程
和方法。
3.2
威胁建模流程
STRIDE 威胁建模的一般流程如下:
绘制数据流图
识别威胁
提出缓解措施
安全验证
图 2: STRIDE 威胁建模流程
3.2.1 数据流图
数据流图(Data Flow Diagrams)包含外部实体(External Entity)、处理过
程(Process)、数据流(Data Flow)、数据存储(Data Store)，安全人员与系统架
构师及设计人员沟通，了解设计详情并画出数据流图后还需要标注信任边界
（Trust Boundary），针对简单的 Web 应用的数据流图如下:
第 9页 共 12页
图 3: 数据流图示例及元素类型
3.2.2 识别威胁
STRIDE 威胁建模方法已经明确了每个数据流图元素具有不同的威胁，其中
外部实体只有仿冒（S）、抵赖（R）威胁，数据流只有篡改（T）、信息泄露（I）、
拒绝服务（D）威胁，处理过程有所有六种（STRIDE）威胁，存储过程有篡改
（T）、信息泄露（I）、拒绝服务（D）威胁，但如果是日志类型存储则还有抵
赖（R）威胁。具体可以对照如下表格进行威胁识别:
元素
S
T
R
I
D
E
外部实体
√
√
处理过程
√
√
√
√
√
√
数据存储
√
？
√
√
数据流
√
√
√
表 3 数据流图元素对应的不同威胁
3.2.3 缓解措施
根据不同的数据流图元素及威胁，相应的缓解措施也不相同。如本文示例数
据流图中外部实体用户的仿冒威胁，其缓解措施简单来说就是对用户身份进行认
证。对于一个 Web 应用来说，缓解仿冒威胁不仅需要较强的认证机制，还需要
第10页 共12页
防止恶意攻击者用暴力破解、口令猜测等方法绕过认证从而造成仿冒用户的威
胁。如果笔者来提出该用户仿冒威胁的缓解措施的话，详细措施如下:
对用户访问进行帐号密码、证书等身份认证;
用户帐号密码认证过程中，如果出现三次密码错误，则增加验证码机制。
输入验证码且正确再进行身份认证;
当用户认证 5 次后仍然验证失败，则在 30 分钟内禁止该帐号登录;
用户密码必须包含数字、字母及特殊字符，且长度在 8 位以上，如果业
务安全需要则增加密码过期机制，每隔 6 个月提醒用户修改密码;
在提出缓解措施时，有的时候不仅要考虑安全问题，同时也要考虑软件的易
用性，所以不同的威胁，不同的应用场景。其缓解措施也要随之而改变以提高应
用安全的同时也能给用户带来较好的交互体验。
微软对于常用的威胁给出了其常用的标准缓解措施，并在具体实施时已将常
用的缓解方案及措施集成为独立的解决方案或者代码模块。可以方便同类应用直
接使用。
威胁类型
缓解措施
技术方案
仿冒(S)
认证
Kerberos 认证
PKI 系统如 SSL / TLS 证
书
数字签名
篡改(T)
完整性保护
访问控制
完整性校验
抵赖(R)
日志审计
强认证
安全日志、审计
信息泄露(I)
保密性
加密
访问控制列表
拒绝服务(D)
可用性
访问控制列表
过滤
热备份
权限提升(E)
授权认证
输入校验
第11页 共12页
用户组管理
访问控制列表
3.2.4 安全验证
在威胁建模完成后，需要对整个过程进行回顾，不仅要确认缓解措施是否能
够真正缓解潜在威胁，同时验证数据流图是否符合设计，代码实现是否符合预期
设计，所有的威胁是否都有相应的缓解措施。最后将威胁建模报告留存档案，作
为后续迭代开发、增量开发时威胁建模的参考依据。
四.
总结
SDL 的核心理念是将安全考虑集成在软件开发的每一个阶段:需求分析、设
计、编码、测试和维护。从需求、设计到发布产品的每一个阶段每都增加了相应
的安全活动，以减少软件中漏洞的数量并将安全缺陷降低到最小程度。本文重点
介绍了设计阶段的安全活动指导思想及 STRIDE 威胁建模，但 SDL 的其它阶段
的不同安全活动也同样对软件安全有着重要影响。同时本文介绍的安全设计原则
仅为指导思想，安全设计人员还需要掌握一定的安全攻防知识，具备一定的安全
攻防经验才能更好的设计出安全的方案及软件应用。另外根据笔者经验，在实际
的安全设计工作中，对于不同软件及应用场景其面临的安全问题也不同。随着互
联网时代发展，目前已经不在是单纯的软件时代了，类似移动端应用、智能硬件、
云端、大数据平台等新形态的应用都面临的自身特有的安全问题。安全设计人员
要考虑的也要更多，但安全设计的核心原则还是相差无几。由于篇幅及笔者经验
有限，本文所述如有不妥之处可以与笔者联系交流。
第12页 共12页
五.
参考文献
[1] https://www.microsoft.com/en-us/SDL/process/design.aspx
[2] http://www.microsoft.com/en-us/sdl/adopt/threatmodeling.aspx
[3] Introduction_to_Threat_Modeling
[4] Simplified Implementation of the SDL
[5] https://github.com/Cryin/Paper