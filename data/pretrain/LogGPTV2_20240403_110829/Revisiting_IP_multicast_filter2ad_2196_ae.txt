# 数据与性能

### 表4：当组位于FRMHdrCache中时，在Rs处的转发时间（单位：微秒）

| 字节数 | 转发时间 (µs) |
| --- | --- |
| 128 | 0.8 |
| 1024 | 76.2 |
| 154.2 | 308.6 |
| 1.2 | 89.5 |
| 177.5 | 351.4 |

### 表5：当组不在FRMHdrCache中时，在Rs处的转发时间（单位：毫秒），数据包大小为512字节

| 树中的条目数 | 处理时间 (ms) |
| --- | --- |
| 117519 | 303.2 |
| 29296 | 124.8 |
| 7300 | 89.1 |
| 1831 | 74.5 |
| 471 | 68.3 |
| 0 | 65.8 |

当缓存未命中时，我们将RIB填充为2004年10月BGP表的一个快照，其中包含117519个前缀条目，并初始化一部分前缀以指示它们属于目标组。表5列出了随着树中包含的前缀数量增加的转发时间。在最坏的情况下，即每个前缀都有一个组成员时，转发数据包大约需要303.2毫秒。进一步的研究表明，这段时间主要由BGP RIB扫描的成本所主导。尽管这种处理延迟显然很高，但我们并不认为这是由于以下两个原因而值得担忧：

1. 测量到的延迟完全取决于路由器的处理器速度和其他硬件特性，而在我们的实验中使用的是单处理器IBM Thinkpad。实际上，头部构造可以在SMP上并行化和优化。
2. 此延迟仅在首次发送到某个组的数据包时发生，并且可以通过预计算和适当选择缓存大小来避免缓存未命中。

### 表6：对于不同树扇出值和BGPPeerTable的不同大小，在Rt处转发512字节数据包的延迟（单位：微秒）

| 扇出值 | AS度数 |
| --- | --- |
| 1 | 7.6 |
| 32 | 10.9 |
| 128 | 17.0 |
| 256 | 27.7 |
| 512 | 45.6 |
| 1024 | 81.4 |
| 1 | 38.8 |
| 32 | 43.8 |
| 128 | 54.5 |
| 256 | 73.5 |
| 512 | 113.4 |
| 1024 | 127.1 |
| 1 | 137.1 |
| 32 | 159.4 |
| 128 | 204.5 |
| 256 | 220.7 |
| 512 | 248.8 |
| 1024 | 308.0 |
| 1 | 402.2 |
| 32 | 465.2 |
| 128 | 748.7 |

### 组成员变更通告

终端主机的IGMP报告会传递给其指定路由器（DR）。在我们当前的实现中，我们修改了DR以直接将这些报告转发给源FRM路由器Rs，后者会更新其LocalGrpMembers表。我们定义了一个新的可选传递路径属性FRM UPDATE，用于通信增量组成员变更，并定义了FRM GRP BF用于在对等会话开始时初始传输GRP BFs。

为了避免对FRMHdrCache进行全扫描，我们使用了一种辅助数据结构，可以高效地将比特位置解析为一组指向与该比特关联的缓存组的指针。

在评估中，处理单个组激活事件的消息所需时间为18.6微秒，该事件修改了成员Bloom过滤器中的6位，并使单个FRMHdrCache条目无效（缓存中有1024个条目）。更新Bloom过滤器需要0.34微秒，而使缓存条目无效则需要18.33微秒。

### FRM端到端测试

为了端到端测试FRM，我们设置了一个由4个互连的FRM路由器组成的本地测试床，其中有两台运行未经修改的VAT [47]的Windows桌面通过我们修改后的DR连接到FRM网络。我们观察到从VAT源到接收者的包交付情况，这表明FRM能够使用传统的终端主机堆栈和应用程序进行端到端的数据包转发。

### 讨论

#### 使用模型
今天部署的多播服务可能不会采用开放的使用模型。我们推测了一些可能的使用模型，但强调地址分配、访问控制和计费问题需要比我们在这里所能提供的更深入的审查。

ISP可能会在两个层面控制多播的使用——用户级别和组级别。前者决定用户是否允许发送和/或接收多播流量（独立于哪些组）。与单播连接一样，用户与其本地ISP签约多播服务，本地ISP负责用户的访问控制和计费。ISP可能会区分允许用户同时发送和接收流量的服务以及只允许用户接收多播流量的服务。对于发送者，ISP可能会根据组规模按比例收费，或者在服务协议中包括对（AS级别的）组规模的限制。FRM在这方面帮助ISP准确计算和控制传播树的范围。

组级别的访问控制决定了哪些组地址是可路由的。ISP可能会各自分配部分多播地址空间，用户必须显式地从某个ISP获取地址才能创建组。分配ISP的角色仅仅是使组合法化，并不约束组成员身份。ISP只会路由那些可以证明是由可识别的ISP合法分配的组地址。为此，分配ISP用其私钥签署组地址；组成员可以通过相同的通道（例如DNS）发现组地址并检索此签名，并在加入和/或发送到组时向其本地ISP出示该签名。为了验证签名，ISP使用签署ISP的公钥，该公钥可以与ISP的BGP广告一起分发。组地址的分配可以与费用和租期相关联，从而可以根据需求驱动价格。

上述措施旨在限制服务只提供给合法用户和合法组，但并不试图规定哪些用户可以访问哪些组。我们认为，对于ISP来说，这可能是一个可管理的控制级别，而更细粒度的访问控制可以由应用程序根据其不同的需求来处理。同时，上述访问控制方案可以扩展以支持更细粒度的控制；例如，用户的服务合同可以限制其可以加入的组，或者分配ISP的签名可以包含授权发送方IP地址列表。

最后，虽然上述假设ISP控制地址分配，但这不是严格要求的，因为FRM对组地址的分配和使用没有结构性限制。

#### 对FRM协议的攻击
有了上述措施，恶意尝试频繁触发GRP BF的行为将被限制在合法组内，这使得在整个域内引起成员波动变得更加困难。此外，这相当于用户对其本地ISP发起攻击，增加了攻击者的暴露风险。同样的道理也适用于向许多不同（有效）组发送数据的恶意用户，这样做会增加路由器进行更昂贵的树构建操作的负担。

#### 域内FRM
FRM可以不经修改应用于运行链路状态协议的域内。对于运行基于距离矢量的协议的域，FRM需要修改以在缺乏完整路径信息的情况下工作。为此，我们可以编码目的地节点而不是树边在垫片头中。如第5节所述，这需要中间路由器重新分区编码的叶子集以避免重复转发，尽管这些结果可以被缓存。

相对于运行域内链路状态MOSPF，FRM的源编码转发减少了中间路由器的状态和计算负载，但需要垫片头。诚然，这些优势是适度的，因此用FRM取代域内MOSPF更可能是出于希望在域内和域间解决方案之间保持一致性的动机。相对于域内PIM-SM，FRM避免了配置RP的需求。

#### 其他路由服务
由于FRM不使用分层地址分配或聚合，其实现代表了一个相当通用的抽象——订阅和平面标识符的位置，因此可以应用于更一般的路由服务，如IP层任播、数据为中心或基于名称的路由。主要区别在于多播需要匹配所有订阅，而上述服务只需要匹配任何一项。对我们设计的唯一影响是，假阳性是不可取的；一个简单的解决方案是枚举订阅或使用只允许假阴性的压缩。

### 结论
FRM代表了一种不同的多播实现方法。它在广域网中更为简单（无需分布式树构建）、更容易配置（无需放置RP），并且允许提供商在熟悉的BGP框架内处理跨提供商问题。这些功能是以降低效率和对边界路由器提出更高要求为代价的；我们认为鉴于技术趋势，这是一个值得探索的权衡。

FRM解决了纯粹的技术部署障碍，但也存在其他障碍。然而，鉴于互联网广播、大型多人游戏和其他联网应用的日益普及，我们认为现在可能是重新审视IP多播并重新评估其可能性的好时机。

### 致谢
感谢Katerina Argyraki、Kevin Fall、Zhi Li、Timothy Roscoe和匿名审稿人对本文工作的宝贵意见。我们还要感谢Hitesh Ballani在利用路由器资源方面的有益讨论。

### 参考文献
[此处列出参考文献]

---

以上是对原文的优化，使其更加清晰、连贯和专业。如果有更多具体要求或需要进一步修改的地方，请告诉我！