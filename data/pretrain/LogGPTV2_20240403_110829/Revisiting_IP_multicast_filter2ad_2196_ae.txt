128-bytes
1024 bytes
0.8
76.2
154.2
308.6
1.2
89.5
177.5
351.4
Table 4: Forwarding time (in µsecs) at Rs when the group is in
FRMHdrCache.
#entries
in tree
117519
29296
7300
1831
471
0
proc. time
303.2
124.8
89.1
74.5
68.3
65.8
Table 5: Forwarding time (in milliseconds) at Rs when the group
is not in FRMHdrCache. Packets are 512 bytes.
miss, we populate the RIB with an Oct’04 snapshot of a BGP table
with 117519 preﬁx entries and initialize a fraction of preﬁxes to in-
dicate membership in the packet’s destination group. Table 5 lists
the forwading time for an increasing number of preﬁxes included
in the tree. We see that, in the worst case where every preﬁx has
a group member, it takes approximately 303.2 ms to forward the
packet. Further investigation revealed this time is dominated by the
cost of the BGP RIB scan. Although clearly expensive, we do not
view the processing latencies of cache misses as cause for concern
due to two reasons: First, these measured latencies are entirely de-
pendent on the processor speed and other hardware characteristics
of the router which is, in our case, a uniprocessor IBM Thinkpad.
In reality, header construction can be parallelized and optimized on
SMPs. Second, this latency is only incurred on the ﬁrst packet sent
to a group, and can be rendered even more infrequent by avoiding
cache misses through pre-computation and an appropriate choice
of the cache size.
Finally, Table 6 lists the forwarding latency for transit pack-
ets for different tree fanout values and different sizes of the table
BGPPeerTable. We observe that transit forwarding is efﬁcient
and only marginally more expensive than a cache hit at the source
router for the same tree fanout. As with source forwarding, the
processing time scales linearly with the number of outgoing packet
copies. As expected (given our software implementation) the re-
sults are linearly dependent on the domain’s AS degree though
TCAM would avoid this.
In summary, the design of FRM admits a straightforward imple-
mentation of the cache hit and transit forwarding code paths that
achieve efﬁciency comparable to that of the native kernel forward-
ing. For cache misses, we believe a combination of hardware and
software optimizations, along with a sufﬁcient cache memory al-
lotment can make the performance impact of misses negligible but
an exploration and evaluation of performance optimizations merits
further study, particularly in the context of realistic router forward-
ing engines.
Fanout ⇒
AS deg. ⇓
1
32
128
256
512
1024
1
32
128
256
512
1024
7.6
10.9
17.0
27.7
45.6
81.4
38.8
43.8
54.5
73.5
113.4
127.1
137.1
159.4
204.5
220.7
248.8
308.0
402.2
465.2
748.7
Table 6: Forwarding time (in µsecs) at Rt for 512-byte packets.
7.2 Advertising group membership changes
An endhost’s IGMP reports are delivered to its designated router
(DR). In our current implementation, we modify DRs to relay these
reports directly to the source FRM router Rs which updates its
LocalGrpMembers table. We deﬁne a new optional transitive
path attribute FRM UPDATE for communicating incremental group
membership changes and FRM GRP BF for the initial transfer of
GRP BFs at the start of a peering session.
To avoid a full scan of FRMHdrCache, we use an auxiliary data
structure that efﬁciently resolves a bit position into a set of pointers
to cached groups associated with that bit.
In our evaluations, the processing cost of an update message for a
single group activation event that modiﬁes 6 bits in the membership
Bloom ﬁlter and invalidates a single FRMHdrCache entry (with
1024 entires present in the cache) requires total processing time of
18.6 µsec. It takes 0.34 µsec to update the Bloom ﬁlter and 18.33
µsec to perform the invalidation.
Finally, to test FRM end-to-end, we set up a local testbed of
4 interconnected FRM routers, with 2 Windows desktops running
unmodiﬁed VAT [47] that connect to our FRM network via our
modiﬁed DRs. We observed packet delivery from the VAT source
to receivers demonstrating that FRM can forward packets end-to-
end using legacy endhost stacks and applications.
8. DISCUSSION:
Usage model. It is likely that a multicast service deployed to-
day, would not adopt an open usage model. We speculate on possi-
ble usage models but stress that issues of address allocation, access
control and charging merit much greater scrutiny than we can pro-
vide here.
ISPs might control use of multicast at two levels – per-user and
per-group. The ﬁrst determines whether a user is allowed to send
and/or receive multicast trafﬁc (independent of which groups). As
with unicast connectivity, users sign up with their local ISP for mul-
ticast service and the local ISP handles access control and charging
of users. ISPs might distinguish between service offerings that al-
low users to both send and receive trafﬁc from those that only allow
a user to receive multicast trafﬁc. For senders, ISPs might choose
to charge based in proportion to the group size or include limits on
the (AS-level) group size in the service agreement. FRM assists
ISPs in this regard as it allows the access provider to accurately
compute and control the extent of the dissemination tree.
Access control at the group level controls which group addresses
are routable. ISPs might each be allocated a portion of the mul-
ticast address space and, to create a group, a user must explicitly
obtain an address from some ISP. The role of the allocating ISP is
merely to legitimize the group and does not constrain membership
of the group in any way. ISPs only route group addresses that can
be proven to have been legitimately allocated by a recognizable ISP.
For this, an allocating ISP signs the group address with its private
key; group members may retrieve this signature via the same chan-
nel (e.g., DNS) used to discover the group address and can present
the signature to its local ISP when it joins and/or sends to a group.
To verify signatures, ISPs use the signing ISP’s public key which
can be disseminated along with an ISP’s BGP adverts. Allocation
of a group address can be associated with a fee and a lease period
allowing prices to be driven by demand.
The above serves to limit service to legitimate users and legit-
imate groups but does not attempt to regulate which users are al-
lowed access to which groups. We conjecture that this may be a
tractable level of control for ISPs to implement while leaving more
ﬁne-grained access control to be handled by applications as per
their (different) needs. At the same time, the above access con-
trol schemes could accommodate some extensions for more ﬁne-
grained control; e.g., a user’s service contract could limit the groups
it may join or the allocating ISP’s signature could include a list of
authorized sender IP addresses.
Finally, while the above assumes ISPs control address allocation,
this is not strictly required as FRM imposes no structural restric-
tions on the allocation and use of group addresses.
Attacks on the FRM protocol. With the above, malicious at-
tempts to trigger frequent GRP BF would be limited to legit groups
which should make it harder to cause domain-wide ﬂuctuations in
membership. Moreover, this is tantamount to a user attacking its
local ISP which increases attacker exposure. The same is true for
malicious users that send to many different (valid) groups so as
to burden routers with the more expensive tree construction opera-
tions.
Intra-domain FRM. FRM may be applied unmodiﬁed within
domains that run link-state protocols. For domains with distance-
vector-based protocols, FRM requires modiﬁcation to work in the
absence of complete path information. For this, we could encode
destination nodes, as opposed to tree edges, in the shim header. As
mentioned in section 5 this would require that intermediate routers
repartition the set of encoded leaves to avoid duplicate forwarding
though the results of this could be cached.
Relative to running intra-domain link-state MOSPF, FRM’s source-
encoded forwarding reduces the state and computational load at in-
termediate routers but requires a shim header. Admittedly, these
are modest advantages and hence replacing intra-domain MOSPF
by FRM would more likely be motivated by a desire for unifor-
mity in intra and inter-domain solutions. Relative to intra-domain
PIM-SM, FRM avoids the need to conﬁgure RPs.
Other routing services. As FRM makes no use of hierarchical
address allocation or aggregation, its implementation represents a
fairly general abstraction – subscription to, and location of – ﬂat
identiﬁers and could thus be applied to more general routing ser-
vices such as IP layer anycast, data-centric or name-based routing.
The main difference is that multicast requires matching all sub-
scriptions while the above require matching any. The only impli-
cation to our design is that false positives would be undesirable; a
simple solution would be to instead, enumerate subscriptions or use
compression that admits only false negatives.
9. CONCLUSION
FRM represents a different approach to implementing multicast.
It is simpler in the wide area (no distributed tree construction), eas-
ier to conﬁgure (no need to place RPs), and allows providers to
work within the familiar BGP framework to handle inter-provider
issues. These features come at a cost of reduced efﬁciency and
greater demands on border routers; a tradeoff that we believe is
worth exploring given technology trends.
FRM tackles a purely technical barrier to deployment and other
barriers do exist. However, given the growing adoption of Internet
broadcasting, massively multiplayer games, and other networked
applications we conjecture the time may be right to revisit IP mul-
ticast and re-evaluate its chances.
10. ACKNOWLEDGMENTS
We thank Katerina Argyraki, Kevin Fall, Zhi Li, Timothy Roscoe
and the anonymous reviewers for their valuable input that helped
improve this work. We would also like to thank Hitesh Ballani for
helpful discussions on exploiting router resources.
11. REFERENCES
[1] Stephen Deering and David Cheriton. Multicast routing in datagram
internetworks and extended LANs. ACM Transactions on Computer
Systems, 8(2):85–110, May 1990.
[2] Yang hua Chu, Sanjay Rao, and Hui Zhang. A Case for End System
Multicast. In Proceedings of SIGMETRICS 2000, CA, June 2000.
[3] Christophe Diot, Brian Levine, Bryan Lyles, H. Kassem, and
D. Balensiefen. Deployment issues for IP multicast service and
architecture. IEEE Network Magazine. Special Issue on Multicasting,
2000.
[4] Hugh Holbrook and David Cheriton. Ip multicast channels: Express
support for single-source multicast applications. In Proceedings of
SIGCOMM ’99, Cambridge, MA, September 1999.
[5] ISC Domain Survey, January 2005.
[6] Craig Labovitz, Abha Ahuja, Abhijit Abose, and Farnam Jahanian.
An experimental study of delayed Internet routing convergence.
2000.
[7] Matthew Caesar, Donald Caldwell, Nick Feamster, Jennifer Rexford,
Aman Shikh, and Jacobus van der Merwe. Design and
Implementation of a Routing Control Platform. In Proc. of NSDI,
2005.
[8] E. Castronova. Network Technology, Markets and the Growth of
Synthetic Worlds. In Second Workshop on Network and Systems
Support for Games (NetGames). ACM, May 2003.
[9] MMOGCHART. http://www.mmogchart.com ,
http://terranova.blogs.com/terra nova/2003/10/growth rates of.html.
[10] Blizzard Entertainment. WoW Surpasses 5 Million Customers
Worldwide. 2005. http://www.blizzard.com/press/051219.shtml.
[11] N. Sheldon, E. Girard, S. Borg, M. Claypool, and E. Agu. The Effect
of Latency on User Performance in Warcraft III. In Second Workshop
on Network and Systems Support for Games (NetGames). ACM, May
2003.
[12] J. Pellegrino and C. Dovrolis. Bandwidth Requirement and State
Consistency in Three Multiplayer Game Architectures. In Second
Workshop on Network and Systems Support for Games (NetGames).
ACM, May 2003.
[13] Blizzard Entertainment. World of Warcraft. http://www.blizzard.com.
[14] Synthetic Statehood and the Right to Assemble.
http://terranova.blogs.com/2005/02/the right to as.html.
[15] Microsoft IPTV Edition.
[16] Ion Stoica, Dan Adkins, Shelley Zhuang, Scott Shenker, and Sonesh
Surana. Internet Indirection Infrastructure. In Proceedings of
SIGCOMM, August 2002.
[17] Bryan Ford. Unmanaged Internet Protocol: Taming the edge network
management crisis. In HotNets, November 2003.
[18] A. Rowstron, A-M. Kermarrec, M. Castro, and P. Druschel. SCRIBE:
A large-scale and decentralized application-level multicast
infrastructure. In Proceedings of NGC, London, UK, November
2001.
[19] Hui, Chaintreau, Scott, Gass, Crowcroft, and Diot. Pocket switched
networks and the consequences of human mobility in conference
environments. In Workshop on Delay Tolerant Networking, 2005.
[20] Kevin Fall. A Delay Tolerant Networking Architecture for
Challenged Internets. In Proceedings of SIGCOMM, August 2003.
[21] D. Waitzman, C. Partridge, and S. Deering. Distance Vector Multicast
Routing Protocol. ARPANET Working Group Requests for Comment,
DDN Network Information Center, November 1988. RFC-1075.
[22] Tony Ballardie, Paul Francis, and Jon Crowcroft. Core based trees
(CBT) an architecture for scalable inter-domain multicast routing.
Technical report, San Francisco, CA, September 1993.
[23] Bill Fenner, Mark Handley, Hugh Holbrook, and Isidor Kouvelas.
Protocol Independent Multicast – sparse mode (PIM-SM): Protocol
speciﬁcation, October 2003. Internet Draft.
[24] B. Fenner and D. Meyer. Multicast Source Discovery Protocol
(MSDP). ARPANET Working Group Requests for Comment, DDN
Network Information Center, 2003. RFC-3618.
[25] K. Kumar, P. Radolavov, D. Thaler, D. Alaettinoglu, D. Estrin, and
M. Handley. The MASC/BGMP architecture for inter-domain
multicast routing. In Proceedings of SIGCOMM ’98, Vancouver, BC
CANADA, September 1998.
[26] Dina Katabi. The Use of IP Anycast for Building Efﬁcient Multicast
Trees. In Proceedings of Global Internet, 1999.
[27] T. Bates et al. Multiprotocol Extensions for BGP-4. ARPANET
Working Group Requests for Comment, 2000. RFC-2858.
[28] Radoslavov et al. The Multicast Address-Set Claim Protocol.
RFC-2909.
[29] David Thaler and Mark Handley. On the aggregatability of multicast
forwarding state. In Proceedings IEEE Infocom, Israel, March 2000.
[30] Pavlin Radoslavov, Deborah Estrin, and Ramesh Govindan.
Exploiting the bandwidth-memory tradeoff in multicast state
aggregation. Technical Report TR99-697, University of Southern
California, 1999.
[31] Briscoe and Tatham. End-to-end aggregation of multicast protocols,
1997. Internet Draft.
[32] W. Fenner. Internet Group Management Protocol, Version 2. Internet
Engineering Task Force, Inter-Domain Multicast Routing Working
Group, February 1996. Internet Draft.
[33] Pankaj Gupta. Algorithms for routing lookups and packet
classiﬁcation. PhD thesis, Stanford University, December 2000.
[34] M. Waldvogel ad G. Varghese, J. Turner, and B. Plattner. Scalable
high speed IP routing lookups. In Proceedings of SIGCOMM ’97,
Cannes, France, September 1997. ACM.
[35] Cisco Systems. Cisco 1200 Series 3GigE Line Card. (linecard with
512MB buffer and 256MB route memory).
[36] Cisco Systems. Cisco 1200 Series One-Port OC-192 Line Card.
(reports 512MB route memory).
[37] Katerina Argyraki and David R. Cheriton. Active Internet Trafﬁc
Filtering: Real-Time Response to Denial-of-Service Attacks. In Proc.
of USENIX Annual Technical Conference, 2005.
[38] S. Keshav and Rosen Sharma. Issues and Trends in Router Design.
IEEE Communications Magazine, May 1998.
[39] H. Ballani, Y. Chawathe, S. Ratnasamy, T. Roscoe, and S.Shenker.
Off by Default! In Fourth Workshop on Hot Topics in Networks,
November 2005.
[40] Content Addressable Memory Cypress Semiconductor.
http://www.cypress.com.
[41] S. Ratnasamy, A. Ermolinskiy, and S.Shenker. Revisiting IP
Multicast. Intel Research Technical Report.
[42] V. Padmanabhan and L. Qiu. The content and access dynamics of a
busy web site: Findings and implications. In Proceedings of
SIGCOMM, Stockholm, Sweden, August 2000.
[43] L. Subramanian, S. Agarwal, J. Rexford, and R. H. Katz.
Characterizing the Internet Hierarchy from Multiple Vantage Points.
In Proc. of IEEE Infocom, 2002.
[44] Route Views Project Page.
[45] Cisco Systems. Access list conﬁguration in Cisco’s Gigabit Ethernet
Interface. (reports GigE module supports up to 256K TCAM entries).
[46] Handley, Kohler, Ghosh, Hodson, and Radoslavov. Designing
Extensible IP Router Software. In Proceedings of NSDI, 2005.
[47] Van Jacobson and Steven McCanne. Visual Audio Tool. Lawrence
Berkeley Laboratory.