to itself be malicious.
In the remainder of this section we describe each of these
high-level tasks in detail, and discuss how they work together
to suggest a takedown response.
4. Analyze the malware samples identiﬁed in Step 2.
In
addition to straightforward dynamic malware analy-
sis, we trick executing malware samples into believing
that their primary C&C infrastructure is unavailable
using a custom malware analysis system [17] to extract
additional C&C domain names.
Intuitively, domains
used by malware related to the infrastructure we are
studying are likely to be related and malicious. Fur-
thermore, we use the results of the analysis to iden-
tify malware contingency plans that would allow the
botnet to continue to function after its primary C&C
infrastructure has been disabled (e.g., a DGA-based or
P2P C&C).
5. Output either the “Postmortem Report” or “Takedown
Recommendation” depending on the mode of operation
selected at the beginning.
The guiding principle we follow with rza is to push our un-
derstanding of malicious C&C infrastructure towards com-
pleteness. Only once we have fully enumerated the C&C
infrastructure can we successfully disable it. We can begin
to enumerate C&Cs from the network-level by identifying
historic relationships between domain names and hosts us-
ing pDNS evidence, and from the host-level by interrogating
malware samples. Since the pDNS may contain additional
domains not necessarily related to the botnet in question, we
identify subsets of domains so we can focus our investigative
eﬀorts on those that are most likely to be malicious and not
inundate ourselves with information. Each subset serves a
diﬀerent purpose: the low reputation subset holds the do-
main names from the network-level that are most likely to be
malicious. The subset of domains queried by malware repre-
sents a reasonable baseline to expect from prior takedowns,
as much of this information is readily available to the secu-
rity community. The subset gleaned from malware analysis
contains the domains from the host-level that are the most
likely to be malicious. We can use these sets to measure the
eﬀectiveness of past takedowns and recommend domains for
future takedowns.
3.2 Infrastructure Enumeration
Botnets often make use of the DNS to increase the relia-
bility of their C&C infrastructure, for example using domain
name ﬂuxing or simply replacing retired or blacklisted do-
mains with new domains. This cycling of domains, however,
leaves a trail in the pDNS database and can be used to enu-
merate the infrastructure. For example, consider a malware
sample m that on day t1 uses domain d1 as its primary C&C
domain, but on day t2 switches to domain d2 to evade the
blacklisting of d1. Assume d1 and d2 resolve to the same IP
address. Analysis during either t1 or t2 yields only one of
the possible domains, but the relationship between d1 and d2
can be identiﬁed in a pDNS database because both resolved
to the same IP address.
Using the passive DNS database and the seed domain set
DS, we compute the enumerated infrastructure domain set
De using Algorithm 1. First, the related-historic IPs (RHIP)
of DS are retrieved and known sinkhole, parking, and pri-
vate IP addresses are removed. The related-historic domain
names (RHDN) for the remaining IPs are retrieved, and any
benign domain names are removed, yielding the enumerated
infrastructure of DS: De. The relationships retrieved from
the pDNS database are within a range of dates to ignore
historic relationships that are no longer relevant. This con-
stant is customizable but we empirically chose seven days
based on the trend in domain name activations and deacti-
vations to the domain names contained in De as described
in Appendix C.
To understand why we ﬁlter out benign domains consider
an attacker that, in an attempt to mislead our analysis,
temporarily has their malicious domains resolve into benign
IP space (e.g., Google’s) or uses a popular hosting provider
(e.g., Amazon AWS). If either of these occur, the De domain
set may include unrelated, benign domain names. To handle
this, we ﬁlter domains if they are a member, or are a sub-
domain of a member, of the set of the Alexa top 10,000 do-
main names. These domains are unlikely to be persistently
malicious and should not be considered for takedown.
IP
DomainsInfrastructureEnumerationDomainReputationDomain &MD5 AssociationMalwareInterrogationpDNSMalware DBMD5sRZAEnumeratedDomainsLow ReputationDomainsMalware-relatedDomainsInterrogatedDomainsPostmortemReportTakedownRecommendation12345a5bMalware Backup Plan124Input: DS, startdate, enddate: seed domain set, and
bounding dates
Output: De: enumerated domain set
Ib ← set of known sinkhole, private, parking IPs
Wd ← set of Alexa top 10,000 domain names
I ← RHIP (DS, startdate, enddate)
I ← I \ Ib
De ← RHDN (I, startdate, enddate)
De ← De \ Wd
return De
Algorithm 1: Infrastructure enumeration procedure.
addresses that are non-informative (private, sinkhole, etc.)
are also removed, as the domains that resolve to them are
unlikely to be related. For example, malware domains some-
times point to private IP addresses (e.g., 127.0.0.1) when
they are not in use, which if not removed would link oth-
erwise unrelated domain names. We use the Alexa top
10,000 in Section 3.3, and for consistency we use it here as
well. In future work we intend to explore the eﬀect of using
smaller and larger whitelists on the generated sets and their
accuracy.
3.3 Malware Interrogation
We can interrogate a single malware sample under dif-
ferent environmental conditions to learn additional domains
it may use to reach its C&C, as well as any contingency
plans for C&C infrastructure failure. We identify the set
of malware samples M that communicate with domains in
De for interrogation. To accomplish this, we can use our
existing system that studies malware’s behavior under pri-
mary C&C failure [17] to automatically determine malware
backup plans. We run an individual malware sample un-
der ﬁve execution scenarios, extract the network endpoints
the malware sample used to “phoned home”, and based on
the diﬀerences observed during executions, we identify likely
backup plans.
Behaviorally, most malware when presented with unavail-
able centralized infrastructure resort to one of the following
backup plans:
1. The malware simply retries connecting to hardcoded
domains and/or IP addresses.
2. The malware attempts to connect to a ﬁnite set of
additional domains and/or additional IP addresses.
3. The malware attempts to connect to an “inﬁnite” set
of domains and/or IPs. This occurs when a malware
uses a DGA- or P2P-based backup system.
We can isolate and detect these behaviors by running each
sample and applying various packet manipulation scenarios
to simulate infrastructure takedown. As a control, we ma-
nipulate none of the packets during execution. To show that
a domain name has been revoked, we rewrite all DNS re-
sponse packets that resolve non-whitelisted domain names
to say the domain no longer exists (NXDomain). We run
a sample under this scenario twice for durations t and 2t.
To feign IP address takedowns, we interrupt TCP streams
with TCP reset (RST) packets when the destination is to
a non-whitelisted IP address. We also run this scenario for
durations t and 2t. Intuitively, if the number of endpoints
(domains or IPs) remains consistent across all runs, the mal-
ware sample does not include a contingency plan for C&C
failure. If the number of endpoints is greater when the DNS
or TCP rewriting is enabled, but remains similar between
the two runs with diﬀerent durations, we expect the mal-
ware contains a ﬁnite set of additional endpoints as a backup
mechanism. However, if we see many more endpoints in the
2t duration run than in the t run, this suggests the malware
is capable of constantly generating additional candidate do-
mains or IPs to connect to, which indicates DGA or P2P
behavior, respectively.
In the event that the primary C&C
infrastructure is already disabled as we would expect in the
postmortem studies, the interrogation results still hold. If
the botnet employs a backup DGA/P2P mechanism, we will
still detect this as the t and 2t duration runs will still diﬀer.
The system may misclassify a sample as having no backup
plan if its infrastructure is already disabled, but this is un-
likely to eﬀect rza from functioning properly. Consider a
sample m that has a ﬁnite number of backup domains, but
all of the primary domains have already expired and return
NXDomain. The control run and DNS rewriting run will
be identical and the sample will be misclassiﬁed as having
no backup behavior, however, we will still identify all the
backup domains so the results will still hold.
We empirically design heuristics using the above intuition
and by analyzing 595 malware samples from 10 malware
families with known contingency plans and catering our rules
to perform the identiﬁcation. Of the samples analyzed, 433
had no contingency plan, 55 used a DGA, 81 used P2P com-
munications, and 22 employed a ﬁnite set of backup do-
mains. None of the analyzed malware used a ﬁnite number
of additional IP addresses. Our heuristics successfully clas-
siﬁed 97% of the samples’ contingency plans correctly.
3.4 Categorizing the Expanded Infrastructure
Not all domains identiﬁed during the infrastructure enu-
meration process are guaranteed to be malicious, but we can
identify subsets that are more likely to be malicious. For ex-
ample, a domain that resolves to an IP address in a virtual
web hosting provider is likely to have many benign and un-
related domains that resolve to the same infrastructure as
well. To account for this, we focus on domains with known
(often public) malware associations, and domains that have
low domain name reputation.
Using the passive DNS, we expand the initial seed do-
main set, DS, into the expanded set De. Next, we identify
Dm ⊆ De and Dr ⊆ De, the subset of domain names in
De with known malware associations and low domain name
reputation, respectively. Malware associations are retrieved
from our domain name to malware MD5 database and are
commonly available in the security community [20]. To de-
termine if a domain name has low reputation, we use a sys-
tem similar in spirit to [1, 2] which scores domain reputation
between 0.0 and 1.0, where 1.0 denotes a low reputation (i.e.,
likely malicious) domain name. Any domains with > 0.5
reputation are considered malicious and are added to Dr.
Unlike Dr and Dm, the set Di is not necessarily a subset of
De. Any domains that are used by malware during malware
interrogation are added to Di. These domains expand our
coverage as they may unearth domain names that were not
previously included in De. During our postmortem analy-
sis, we compare these sets to the domains that were actually
125involved in the takedown (DS).
Figure 2 shows a Venn diagram representation of a pos-
sible conﬁguration of enumerated infrastructure sets. All
sets, excluding Di, are subsets of De. Di is the most likely
to include domains outside of the scope of De, but suﬀers
the most from the problem of completeness as it relies on
dynamic malware analysis.
ening the negative impact incurred by collateral damage.
Ground truth for C&C infrastructure is diﬃcult to come
by, which makes evaluating true positives and false positives
exceedingly diﬃcult. To roughly estimate this, we present
the precision and recall of each set against the “correct” set
of Dr ∪ Di. If we assume that domains ﬂagged as low rep-
utation or used by malware known to be aﬃliated with a
given botnet are malicious, we can use this union to roughly
correspond to ground truth. In our case, the precision of a
set D is the fraction of the number of domain names d that
are d ∈ D ∧ d ∈ Dr ∪ Di over the size of D or |D| and the
recall is the fraction between the same number of domain
names as in the precision but over the size of the “correct”
set, or |Dr ∪ Di|.
Figure 2: Venn diagram of identiﬁed infrastructure sets.
3.5 Takedown Recommendation Engine
Using the four aforementioned techniques, we can run
our takedown protocol as shown by the decision tree in
Figure 3.
Suppose we are interested in taking down a
hypothetical botnet where the current known infrastruc-
ture is DS = {01.hans.gruber.com}. After enumerating
the infrastructure, we identify the additional domain name
02.hans.gruber.com that resolves to the same IP as the 01
child domain. We identify and retrieve the malware samples
that have queried the 01... and 02... domain names and
interrogate them. We identify an additional domain name,
03.hans.gruber.com, when the ﬁrst two domain names fail
to resolve. Since we identiﬁed a ﬁnite number of new domain
names, we re-run the process with the expanded set of three
domain names and this time the malware analysis yields no
behavioral changes from what we have already identiﬁed. In
the event a DGA or a P2P backup scheme is present, the
DGA must be reverse-engineered or the P2P network must
be subverted as described in [18] after disabling the main
C&C infrastructure, respectively.
The question remains which sets of domains should be re-
voked or sinkholed in order to terminate the botnet’s C&C
infrastructure, which ultimately must be decided by human
operators. In the case where eliminating the botnet is more
important than any possible collateral damage that may be
incurred, the set of domains in De ∪ Di should be targeted,
which we consider to be the “nuclear” option. This contains
any domain name associated with the C&C infrastructure
as well as domains queried by the related malware. In other
scenarios, however, this may incur too much collateral dam-
age. We recommend revoking Dr∪Di instead in these cases,
as these domains are very likely to be malicious. These de-
cisions should be made by threat researchers based on the
potential risks associated with deactivating these domain
names. Another, less extreme option is to simply block
these domains at the network’s egress point. This allows
enterprise-sized networks to protect themselves while less-
Figure 3: Takedown recommendation engine shown as a de-
cision tree. D in this case represents either Dr ∪ Di, which
only targets C&C domains that are very likely to be mali-
cious or De ∪ Di, or the “nuclear” option that should only
be used when the threat of the botnet outweighs potential
collateral damage.
3.6 Use of Other Sources of pDNS Data
Out of both ﬁnancial and analysis convenience, we ran our
experiments using Damballa’s internal passive DNS database.
To show that our results are not tied to private data and can
be replicated by other researchers, we run a subset of our
experiments using the Internet System Consortium/Security
Information Exchange’s (ISC/SIE) passive DNS database [4]1.
While the database is not exactly public, it is generally avail-
able to practicing researchers and professionals in the secu-
rity community (possibly for a fee). As pDNS data becomes
more popular, we expect the number of these databases to
increase and become more easily accessible by researchers.
1Since the additional experiments were run, the ISC/SIE’s
pDNS database has been acquired by a private company,
Farsight Security Inc. The website suggests database ac-
cess will continue to be made available to qualiﬁed security
researchers and practitioners.
DeDsDiDrDmDm: malware-related domainsDe: enumerated domainsDr: low reputation domainsDs: seed domainsDi: malware interrogation domainsEnumerate InfrastructureInterrogateMalwareNo Behavioral ChangesFinite Domains/IPsDGAInput: {Ds}Input: {De U Di}ClassifyMalware BehaviorP2P1.) Revoke D1.) Reverse engineer DGA2.) TLD cooperation3.) Revoke D1.) Counter P2P2.) Revoke D126Using ISC/SIE’s pDNS database and rza’s process out-
lined in this section, we generate the De, Dm, and Dr do-
main sets of one postmortem takedown and ﬁve current
botnets. As before, we compute the respective TIR val-
ues of each set. We chose the ﬁve botnets with the largest
C&C infrastructure that Damballa began tracking in April,
2013. Our results from the SIE dataset are presented in
Appendix B.
m, Dt
If T IR(Dt
rather than the mean, since we are interested in preserving
long-term lookup volume trends, which are not captured by
outliers.
S) > 1, this means the subset of
De of malware-related domain names Dt
m had a stronger
lookup volume and accounts for domain names missed by
S. Conversely, if the T IR ≤ 1, the
the takedown domains Dt
takedown deactivated related malware domains already and
was successful. We also identify malware backup behaviors.
4. POSTMORTEM STUDIES
Estimating Risk.
In this section, we describe how we use rza to evaluate
historical takedowns. We introduce the takedowns we study
and describe the measurements we use to understand the
eﬀectiveness of the takedown. We end the section with our
experimental results on the postmortem studies. We brieﬂy
describe how we identiﬁed the initial seed domain sets (DS)
for prior takedowns in Section ??.
4.1 Postmortem Analysis
For our postmortem analysis, we chose to study the take-
downs of Kelihos [12] (aka Operation b79), a Zeus botnet in-
stance [14] (aka Operation b71), and the 3322.org NS take-
down that targeted the Nitol botnet [13] (aka Operation
b70). We chose these takedowns because they are both re-
cent and high proﬁle. For each takedown, we collect the do-
mains described in the temporary restraining orders (TRO)
and use these as our seed domains (DS).
Measuring Takedown Improvement.
Prior studies of botnet takedowns relied on secondary
measurements, such as global spam volumes, to determine
the success of a takedown. Instead, we directly measure the
successful domain name resolutions to the identiﬁed infras-
tructure to proxy for the victim population. By comparing
the lookup volume to the seed domains (DS) with the lookup
volume to the sets of domains identiﬁed by rza, we can de-
termine if a takedown was successful and what domains it
missed. For example, if all domain sets are equivalent, their
lookup volumes will be identical and the takedown would be
considered successful.
r and Dt
More formally, for each takedown, t, and its collected seed
domains, Dt
S, we generate the enumerated infrastructure
sets Dt
m, Dt
e, Dt
e is generated using
only successful DNS resolutions that were issued during the
seven days before the takedown of t was performed according
to the court documents2. This allows us to compare what
was actually disabled and/or sinkholed during the takedown
with what rza would have recommended.
i using rza. Dt
For a period of 14 days surrounding the takedown, we plot
the successful aggregate daily lookup volume to each of the
previously identiﬁed sets. To quantify the gains in takedown
eﬀectiveness, we calculate the takedown improvement ratio
as deﬁned by Equation 1.