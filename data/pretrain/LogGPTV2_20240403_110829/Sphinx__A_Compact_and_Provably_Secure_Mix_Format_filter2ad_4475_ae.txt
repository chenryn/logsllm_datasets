layers of
DHAES/DSIES encryption. This requires an element
of a cyclic group on which the Decisional Difﬁe-
Hellman problem is hard, and a message authentication
code per hop of mixing. To achieve a similar level
of security to Sphinx this introduces an overhead of
272 bytes (256 bytes for the group element and 16
bytes for the MAC) per hop in addition to any routing
information. The length of a packet header can be
abstracted as (p + s)r. As for Mixmaster the format
length suffers from the fact that a separate public key
element has to be included for each stage of mixing.
Camenisch and Lysyanskaya [5] provided formal
deﬁnitions in the Universal Composability model, and
a concrete, provably secure, packet format for mixing
forward messages, which we call the CL05 format. The
CL05 scheme separates the messages into a header and
a payload. The header is composed of asymmetrically
encrypted ciphertexts containing the address of the
next hop. They rely on a CCA2-secure encryption
scheme with tags, and the bulk of the encryption is
performed using a pseudorandom permutation (that is,
a block cipher). The length of the header in the CL05
scheme is rp + (r + 1)s—unsurprisingly very similar
to M¨oller [15], given the shared design philosophy. It
is worth noting that the CL05 scheme does support
replies, with a very similar cost, but those are distin-
guishable from sender anonymous messages.
Mixminion [8] was the ﬁrst packet format to propose
indistinguishable anonymous replies. Its cryptographic
design is based on two headers which are swapped
midway along the path. The headers are constructed
using layers of asymmetric encryption (2048-bit RSA-
279
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 03:19:04 UTC from IEEE Xplore.  Restrictions apply. 
Scheme
Overhead Length
Mixmaster [16]
M¨oller [15]
Mixminion [8]
CL05 [5]
Minx [9]
SSH08 [21]
Sphinx
(1 + p + 8 + 8s + 31)r + s
(p + s)r
2[p + (2s + 2s)(r − 1)] + s
rp + (r + 1)s
p + (s + 2)(r − 1)
pr
p + (2r + 2)s
Indistin.
Replies
no
no
yes
no
yes
yes
yes
Security
heuristic
provable
heuristic
provable
broken
provable
provable
∗
n
Z
(p=256, s=16, r=5)
2136
1360
1040
1376
328
1280
448
(p=32, s=16, r=5)
ECC
11761
4001
8481
4161
2321
1602
224
Table 1. Comparison between the lengths of different cryptographic packet formats in bytes. RSA schemes
(cid:4) = 2p), while schemes
superscripted with (1) have been converted to use elliptic curve Elgamal (hence p
superscripted with (2) were modiﬁed to use a simple Difﬁe-Hellman over EC. The parameter p denotes the
length of asymmetric elements, s is the length of symmetric elements, while r is the maximum path length.
OAEP) and AES in CBC mode. Instead of appending
the RSA ciphertexts to each other, Mixminion com-
presses the headers by including parts of the next
RSA ciphertext in the plaintext of the previous one.
This means that the 2048 bytes of each sub-header
can encode information for more than 8 hops. Given
that the OAEP overhead is about 2s and that a hash
and a key is contained in each layer of the header
(again 2s) the cost of both headers of Mixminion is
2[p+(2s+2s)(r−1)]+ s bytes. There exist no known
attacks against this format, but at the same time it only
comes with heuristic security arguments.
Minx [9] was the ﬁrst attempt to achieve a very
compact mix packet format. It uses raw RSA, and
AES in IGE and bi-IGE modes, without any additional
overhead for integrity checking. Instead it relies on the
fragility and error propagation characteristics of bi-IGE
to ensure no information is recoverable from tagging
attacks. Like Mixminion, it encapsulates parts of RSA
ciphertexts into previous plaintexts, making the headers
quite small. Its abstract length is p + (s + 1)(r − 1)
bytes (assuming only a single byte of routing data).
The security argument underlying Minx is heuristic,
however, and recent work [21] shows that there is
indeed a polynomial-time attack against
taking
advantage of the naive use of raw RSA encryption.
it,
Shimshock et al. [21] proposed a ﬁx for Minx, which
we denote SSH08. The SSH08 format encodes only
keys in separate RSA headers destined to each mix,
and for technical reasons does not use the compression
technique employed by Mixminion and Minx. This
leads to a cost of pr bytes. It is also worth noting
that the encoding of a message relies on making one
byte of the hash of the RSA plaintext collide with the
one byte destination of the packet. That is, there is no
way of telling hop i which node should be hop i + 1
short of constructing a message whose hash happens
to contain the (8-bit) identiﬁer of the desired hop i+1.
This requires, on average, about 256 RSA encryptions
per hop to construct the message. This design choice
makes the packet format quite compact, and easily
portable to elliptic curves, at the cost of ﬂexibility.
The sender can only communicate a very small amount
of information to each mix, since it would have to
ﬁnd—using brute force—an element that decodes to
the desired information.
Table 1 summarises the overhead lengths and other
properties of each cryptographic packet format and
compares them to Sphinx. Concrete lengths are illus-
trated through the choice of two sets of parameters, in
each case for a message that is capable of travelling
on paths up to length r = 5. First the length of the
header is calculated for cryptosystems based on the
hardness of the discrete logarithm and RSA problems
over number ﬁelds. To achieve 128-bit security we
require p = 256 byte (2048-bit) asymmetric elements,
and s = 16 byte symmetric elements. We can see that
in this context Sphinx outperforms all other secure pro-
posals (note that Minx is not considered secure [21]).
A second comparison is made between Sphinx
and other schemes when they are implemented using
asymmetric primitives based on elliptic curves. In that
context we substitute RSA encryption, used by most
other schemes, with an EC-based version of Elgamal.
This requires two asymmetric elements of total length
(cid:4) = 2p. Sphinx and SSH08 on the other hand do
p
not encrypt anything, and the asymmetric part of the
header is only required to perform key derivation.
As such they only use a single element of length
p = 32 bytes, the size necessary to achieve 128-bit
security. The SSH08 scheme is more compact than
Minx only because it is capable of transmitting very
little information from the sender to the intermediate
mixes (about 8 bits of information, at the cost of
280
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 03:19:04 UTC from IEEE Xplore.  Restrictions apply. 
about 28 public key operations per mix). Sphinx can
carry much more information to intermediate mixes,
supporting more complex mixing strategies, and at a
much lower computational cost to the sender.
Finally, we note that Sphinx messages are com-
putationally cheap to process: they require a single
∗
public key operation (an exponentiation in Z
n or
multiplication in ECC) to derive a key, followed by
fast symmetric-key operations.
6. Conclusions
Sphinx is a compact and provably secure mix packet
format, designed as a drop-in replacement for existing
remailers.
Sphinx is ﬂexible in two important ways: ﬁrst, it al-
lows the system designer to chose their preferred fam-
ily of cryptographic primitives. With Difﬁe-Hellman
over prime ﬁelds, Sphinx is the most compact format,
with an overhead of 448 bytes to route through 5
mixes. The use of ECC makes it even more compact,
with a header length of only 224 bytes. The com-
pactness of the format allows novel applications of
anonymity to ﬂourish: short messages can be cheaply
routed, supporting privacy for services like micro-
blogging with a low cryptographic overhead.
Second, Sphinx can be trivially extended to act as
a general-purpose secure transport between senders
of messages and the intermediate mixes on a path.
This means that system designers are free to choose
any mix strategies, including those that rely on the
sender providing detailed information to mixes about
the processing of messages. Such strategies are cru-
cial for blending high-and-low latency trafﬁc [11], or
preventing ﬂooding attacks [13].
The security guarantees associated with Sphinx are
very strong, and backed by reduction proofs to well-
studied cryptographic primitives. Hence, we can say
with high conﬁdence that
length of the
packets does not lead to any reduction in security.
the short
The line of research up to this state-of-the-art Sphinx
design demonstrates that the cryptographic aspects of
anonymous communications are now well understood
and mature. Off-the-shelf packet formats are now
available to route messages through any system, al-
lowing designers of anonymity systems to concentrate
on preventing trafﬁc analysis and sorting out denial-
of-service problems, as well as implementing robust
business models around anonymous communications.
Sphinx can act as a transport layer for any of these
applications, ensuring that
the cryptography of the
anonymous transport is no longer a security worry.
Acknowledgements
The design of Sphinx has greatly beneﬁtted from
discussions with Anna Lysyanskaya, at the 2005 Dagh-
stul school on anonymous communications. Steven
Murdoch, Greg Zaverucha and Emilia K¨asper provided
very useful early feedback on the ideas as well as a
draft of the paper. We would like to thank the Natural
Sciences and Engineering Research Council of Canada
and the Mathematics of Information Technology and
Complex Systems Network of Centres of Excellence
for supporting this work. We would also like to thank
the anonymous reviewers for making suggestions to
improve this paper.
References
[1] Ross J. Anderson and Eli Biham. Two Practical and
Provably Secure Block Ciphers: BEARS and LION. In
Dieter Gollmann, editor, FSE, volume 1039 of Lecture
Notes in Computer Science, pages 113–120. Springer,
1996.
[2] Elaine Barker, William Barker, William Burr, William
Polk, and Miles Smid. Recommendation for Key
Management—Part 1: General (Revised). National In-
stitute of Standards and Technology Special Publication
800-57, May 2006.
[3] Daniel J. Bernstein. Curve25519: New Difﬁe-Hellman
In Public Key Cryptography 2006,
Speed Records.
pages 207–228, 2006.
[4] Oliver Berthold, Andreas Pﬁtzmann, and Ronny
Standtke. The disadvantages of free MIX routes and
how to overcome them. In H. Federrath, editor, Pro-
ceedings of Designing Privacy Enhancing Technolo-
gies: Workshop on Design Issues in Anonymity and
Unobservability, pages 30–45. Springer-Verlag, LNCS
2009, July 2000.
[5] Jan Camenisch and Anna Lysyanskaya. A formal
treatment of onion routing.
In Victor Shoup, edi-
tor, Proceedings of CRYPTO 2005, pages 169–187.
Springer-Verlag, LNCS 3621, August 2005.
[6] Ran Canetti. Universally composable security: A new
paradigm for cryptographic protocols. In FOCS, pages
136–145, 2001.
[7] David Chaum. Untraceable electronic mail, return
addresses, and digital pseudonyms. Communications
of the ACM, 4(2), February 1981.
[8] George Danezis, Roger Dingledine, and Nick Math-
ewson. Mixminion: Design of a Type III Anonymous
Remailer Protocol. In Proceedings of the 2003 IEEE
Symposium on Security and Privacy, pages 2–15, May
2003.
281
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 03:19:04 UTC from IEEE Xplore.  Restrictions apply. 
[21] Eric Shimshock, Matt Staats, and Nick Hopper. Break-
ing and Provably Fixing Minx. In Nikita Borisov and
Ian Goldberg, editors, Proceedings of the Eighth Inter-
national Symposium on Privacy Enhancing Technolo-
gies (PETS 2008), pages 99–114, Leuven, Belgium,
July 2008. Springer.
[9] George Danezis and Ben Laurie. Minx: A simple and
efﬁcient anonymous packet format.
In Proceedings
of the Workshop on Privacy in the Electronic Society
(WPES 2004), Washington, DC, USA, October 2004.
[10] Whitﬁeld Difﬁe and Martin E. Hellman. New directions
IEEE Transactions on Information
in cryptography.
Theory, IT-22(6):644–654, 1976.
[11] Roger Dingledine, Andrei Serjantov, and Paul Syver-
latency trafﬁc with alpha-
son. Blending different
mixing.
In George Danezis and Philippe Golle, ed-
itors, Proceedings of the Sixth Workshop on Privacy
Enhancing Technologies (PET 2006), pages 245–257,
Cambridge, UK, June 2006. Springer.
[12] Ceki G¨ulc¨u and Gene Tsudik. Mixing E-mail with
Babel. In Proceedings of the Network and Distributed
Security Symposium - NDSS ’96, pages 2–16. IEEE,
1996.
[13] Dogan Kesdogan, Jan Egner, and Roland B¨uschkes.
Stop-and-go MIXes: Providing probabilistic anonymity
in an open system.
In Proceedings of Information
Hiding Workshop (IH 1998). Springer-Verlag, LNCS
1525, 1998.
[14] David Mazi`eres and M. Frans Kaashoek. The Design,
Implementation and Operation of an Email Pseudonym
Server. In Proceedings of the 5th ACM Conference on
Computer and Communications Security (CCS 1998).
ACM Press, 1998.
[15] Bodo M¨oller. Provably secure public-key encryption
for length-preserving chaumian mixes. In Proceedings
of CT-RSA 2003. Springer-Verlag, LNCS 2612, 2003.
[16] Ulf M¨oller, Lance Cottrell, Peter Palfrader, and Len
IETF
Sassaman. Mixmaster Protocol — Version 2.
Internet Draft, 2003.
[17] Mridul Nandi and Douglas R. Stinson. Multicolli-
sion Attacks on Some Generalized Sequential Hash
Functions. IEEE Transactions on Information Theory,
53(2):759–767, February 2007.
[18] Birgit Pﬁtzmann and Andreas Pﬁtzmann. How to
In
break the direct RSA-implementation of MIXes.
Proceedings of EUROCRYPT 1989. Springer-Verlag,
LNCS 434, 1990.
[19] Ronald L. Rivest, Adi Shamir, and Leonard M. Adle-
man. A method for obtaining digital signatures and
public-key cryptosystems. Commun. ACM, 21(2):120–
126, 1978.
[20] Andrei Serjantov, Roger Dingledine, and Paul Syver-
son. From a trickle to a ﬂood: Active attacks on several
mix types.
In Fabien Petitcolas, editor, Proceedings
of Information Hiding Workshop (IH 2002). Springer-
Verlag, LNCS 2578, October 2002.
282
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 03:19:04 UTC from IEEE Xplore.  Restrictions apply.