was shown in [17] that the entropy of the hash function
can be maximized by maximizing the scaled variance of the
projected data. We use the learning algorithm of [17] that
considers similar formulation to ﬁnd w1, . . . wK sequentially,
making them as orthogonal as possible (while preserving the
accuracy and the high entropy of each bit). The learned
embedding produces independent bits, because frontal faces
under mild changes in illumination follow Gaussian distribu-
tion and thus, after whitening, their projections on orthog-
onal wk are mutually independent.
Enrollment: The ﬁrst time a template of a new subject is
presented it is transformed to a string x (as described above).
Then, we generate a template t = 1/2(sgn(W T x) + 1), used
as the input to the secure sketch process (which chooses a
codeword C, computes s = C + t, and sets F = h(C) for
some one-way function h(·)). The user also gets s.
Key Resampling: A new image of the person is obtained,
normalized, and the biometric features are extracted, form-
ing a vector x(cid:48). The binary representation is obtained by
t(cid:48) = 1/2(sgn(W T x(cid:48)) + 1). The user supplies s and along
with t(cid:48) we compute C(cid:48) = EC(s + t(cid:48)), where EC(·) is the
error-correction function. If x(cid:48) and x are close, then C(cid:48) = C.
3. EXPERIMENTAL RESULTS
To assess the performance of our proposed system we used
images of near frontal faces with minor expression and illu-
mination changes. To learn the embedding matrix W , we
created a training set from seven public databases, contain-
ing 740 persons, with 3-4 images per subject. We learned
512 hyperplanes (the number of hyperplanes was chosen to
optimize the FAR, FRR, and the key length).
The test set included 100 subjects from two databases,
with 3 images per subject. The individuals in the test set
did not overlap with those in the training set. Two binary
representations were created for each test subject: the ﬁrst
representation was created from the average of the ﬁrst two
images and was used for enrollment, the second represen-
tation was created from the third image and was used for
authentication. We assessed the recognition performance in
ﬁve rounds cross-validation, in each one of the rounds a dif-
ferent ﬁfth of the data served as impostors, and the number
of true-positives and false-positives was calculated for each
threshold in the range from 0 to 512.
We compared our method to “random projections” and
Eigenfaces [15] using the same data and the same testing
framework. The tests using random projections show the
importance of the learning process used to generate the em-
bedding.8 The Eigenfaces is a well-known face recognition
algorithm that we used for baseline comparison. Fig. 2 com-
pares the ROC curves. Our PoC can achieve FRR of 10% at
FAR of 0%. However, to obtain longer keys, we decided to
choose the threshold corresponding to FRR of 19% at FAR
8To avoid reporting outlier results on random hyperplanes,
we report the average of 5 tests, using a diﬀerent set of 512
orthonormal hyperplanes each time.
1404material from a single facial image in a secure, consistent,
and privacy-preserving manner.
We expect to close the gap between this PoC and a real-
life system by: 1) improving the distance between two rep-
resentations of the same user and 2) using additional images
(such as proﬁle picture) as part of the input. The second di-
rection is expected to double the number of secure key bits,
resulting in a system which can be used in real life.
Acknowledgements
This work was supported in part by the Israeli Ministry of
Science and Technology and by the Israel Science Founda-
tion.
4. REFERENCES
[1] L. Ballard, S. Kamara, and M. K. Reiter. The practical
subtleties of biometric key generation. In USENIX, pages
61–74, 2008.
[2] P. Belhumeur, J. Hespanha, and D. Kriegman. Eigenfaces
vs. Fisherfaces: Recognition using Class Speciﬁc Linear
Projection. In ECCV, pages 45–58, 1996.
[3] C. Chen, R. Veldhuis, T. Kevenaar, and A. Akkermans.
Biometric binary string generation with detection rate
optimized bit allocation. In CVPR Workshop on
Biometrics, pages 1–7, 2008.
[4] J. Daugman. The importance of being random: statistical
principles of iris recognition. Pattern Recogn.,
36(2):279–291, 2003.
[5] Y. Dodis, R. Ostrovsky, L. Reyzin, and A. Smith. Fuzzy
Extractors: How to Generate Strong Keys from Biometrics
and Other Noisy Data. SIAM J. Comput., 38(1):97–139,
2008.
[6] Y. C. Feng, P. C. Yuen, and A. K. Jain. A hybrid approach
for generating secure and discriminating face template.
Trans. Info. For. Sec., 5:103–117, 2010.
[7] N. Frykholm and A. Juels. Error-tolerant password
recovery. In ACM CCS, pages 1–9, 2001.
[8] A. Juels and M. Wattenberg. A Fuzzy Commitment
Scheme. In ACM CCS, pages 28–36, 1999.
[9] T. A. Kevenaar, G. J. Schrijen, M. Veen, A. H. Akkermans,
and F. Zuo. Face recognition with renewable and privacy
preserving binary templates. In IEEE Workshop on
Automatic Identiﬁcation Advanced Technologies, pages
21–26, 2005.
[10] A. Kong, K.-H. Cheung, D. Zhang, M. Kamel, and J. You.
An analysis of biohashing and its variants. Pattern Recogn.,
39(7):1359–1368, 2006.
[11] A. V. Neﬁan. Georgia tech face database, 1999.
[12] C. Rathgeb and A. Uhl. A survey on biometric
cryptosystems and cancelable biometrics. EURASIP J. Inf.
Sec., 2011.
[13] Y. Sutcu, Q. Li, and N. Memon. Protecting biometric
templates with sketch: Theory and practice. Trans. Info.
For. Sec., 2(3):503–512, 2007.
[14] A. B. Teoh, A. Goh, and D. C. Ngo. Random multispace
quantization as an analytic mechanism for biohashing of
biometric and random identity inputs. IEEE Trans.
Pattern Anal. Mach. Intell., 28(12):1892–1901, 2006.
[15] M. Turk and A. Pentland. Eigenfaces for recognition. J.
Cognitive Neuroscience, 3(1):71–86, 1991.
[16] M. J. Wainwright and E. P. Simoncelli. Scale mixtures of
Gaussians and the statistics of natural images. In Adv.
Neural Inf. Proc. Sys., volume 12, pages 855–861, 2000.
[17] J. Wang, S. Kumar, and S.-F. Chang. Sequential Projection
Learning for Hashing with Compact Codes. In ICML, pages
1127–1134, 2010.
[18] X. Wang, T. X. Han, and S. Yan. An hog-lbp human
detector with partial occlusion handling. In ICCV, pages
32–39, 2009.
Figure 2: Comparison of ROC Curves
of 0% (compared to random projections with FRR of 36.6%
and of FAR 0% for the same key length).
For the same person sampled twice, the average distance
between x and x(cid:48) is 169.76 bits (out of 512), with standard
deviation of 20.78 bits. When comparing the samples of two
diﬀerent users x1 and x2, the average distance is 255.56 bits
with standard deviation of 13.06 bits. For the secure sketch,
we need to correct about 187 bits. The sphere bound shows
that in this case, the corrected strings (C) are of slightly
more than 30 bits.
Given that the obtained identiﬁcation rates (FAR vs. FRR)
are very good, and that the system discriminates between
diﬀerent users, we are left with the three security proper-
ties of [1] to consider: Key Randomness (the keys contains
suﬃcient entropy), Weak Biometric Privacy (REQ-WBP, an
adversary cannot learn about the biometrics of a user, from
the information stored in the system and/or by the user),
and Strong Biometric Privacy (REQ-SBP, given F (x, s) in
addition to the information of REQ-WBP, the adversary
learns nothing about the user’s biometrics).
Our system suggests REQ-SBP (which implies REQ-WBP).
Consider an adversary that knows W, s, and F (x, s): the
matrix W used in the conversion of biometric into a binary
string, the “helper data” s, and the result of F (x, s). W
contains no user-speciﬁc information, and due to the used
secure sketch, one cannot extract information concerning x
from F (x, s) and s. As x itself is protected, it is easy to see
that recovering the user’s biometric information is infeasible.
Key Randomness: We now analyze how many bits of en-
tropy we expect from a generated key. The generated repre-
sentation contains 512 bits, which need to be as independent
as possible to assure high min-entropy. As our construction
suggests, this is indeed our optimization. We ﬁrst note that
the average dot product of the planes suggested by W is
0.022 (i.e., close to orthogonal) with a standard deviation of
0.020. In addition, we have computed the degrees of free-
dom in these strings (as suggested in [4]), and obtained 497.8
(which suggests only a small dependence exists).
Considering all bits in the representation as almost inde-
pendent, the min-entropy is 490.4 (the maximal bias in a
given bit is 0.0698, whereas the average bias is 0.0146).
Conclusions and Future Work
Currently, our PoC provides only a small number of secret
key bits in a consistent manner (after the error correction).
While being insuﬃcient for real life systems, we proved that
it is possible to extract a non-negligible amount of secret key
1405