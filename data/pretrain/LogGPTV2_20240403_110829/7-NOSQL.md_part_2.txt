127.0.0.1:6379\> keys \*
1\) \"a\"
sav**e 保存所有变量**(正常默认是5分钟自动保存到硬盘,执行后立即保存)
\[root@client-50 utils\]# ls /var/lib/redis/6379/
dump.rdb #内存数据保存在此文件里面
127.0.0.1:6379\> save
OK
Shutdown 关闭redis 服务 #停止服务时,自动将数据存入dump.rdb文件中
127.0.0.1:6379\> shutdown
not connected\>
not connected\> exit
\[root@client-50 utils\]# /etc/init.d/redis_6379 start
Starting Redis server\...
\[root@client-50 utils\]# redis-cli -a 123456
127.0.0.1:6379\>
# 三 配置文件解析:
## 数据单位
1k=1000 bytes
1kb=1024bytes
1M=1000000bytes(100万)
1MB=1024\*1024bytes
1g=1000000000bytes(10亿)
1gb=1024\*1024\*1024bytes
## nn常用配置选项:
Port 6379 端口
bind 127.0.0.1 IP地址
tcp-backlog 511 tcp连接总数(同时接受tcp连接为511个)
timeout 0 连接超时时间(默认为0:没有超时时间)
tcp-keepalive 300 长连接时间(在这个时间内一次连接可多次请求)
daemonize yes 守护进程方式运行(服务启动后,进程一直在内存运行,等待客户连
databases 16 数据库个数(切换数据库个数0开始)
logfile /var/log/redis_6379.log pid文件,日志文件
maxclient 10000 最大并发连接数量,
dir /var/lib/redis/6379 数据库目录
## 内存管理
### 内存清除策略
搜索lru 在565-572
volatile-lru 删除最近最少使用(针对设置了TTL(变量有效期)的key)
allkeys-lru 删除最少使用的key
volatile-random 在设置了TTL的key里随机移除
allkeys-random 随机移除key
volatile-ttl (minor TTL) 移除最近过期的key
noeviction 不删除,写满时报错(默认方式)
102400 东塘现金充值机
### 内存选项默认设置 
maxmemory \ 最大内存大小,
maxmemory-policy noeviction 定义内存清除策略
maxmemory-samples 5 选取模板数据的个数(针对内存清除策略含lru和ttl的策略)
模板:就是比对筛选条件模板.越接近模板,就是要被删除的内存变量
### 修改配置后登录
修改了端口为:6351
修改了IP为:192.168.4.51
修改了密码为:123456
\[root@sql51 \~\]# redis-cli #此命令默认连接"127.0.0.1:6379"
Could not connect to Redis at 127.0.0.1:6379: Connection refused
\[root@sql51 \~\]# redis-cli -h 192.168.4.51 -p 6351 -a 123456
192.168.4.51:6351\>
### 修改配置后停止服务
修改配置后应立即修改脚本,才能使用脚本停止和启动redis
\[root@sql51 \~\]# vim /etc/init.d/redis_6379
43 \$CLIEXEC -h 192.168.4.51 -p 6351 -a 123456 shutdown
\[root@sql51 \~\]# /etc/init.d/redis_6379 stop
\[root@sql51 \~\]# /etc/init.d/redis_6379 start
方法一:
\[root@sql51 \~\]# /etc/init.d/redis_6379 stop #调用脚本停止
Stopping \...
Could not connect to Redis at 127.0.0.1:6379: Connection refused
Waiting for Redis to shutdown \...
Waiting for Redis to shutdown \...
此命令调用脚本停止的是"127.0.0.1:6379"
,已修改了IP与端口,所以相应脚本也需修改
\[root@sql51 \~\]# vim /etc/init.d/redis_6379
43 \$CLIEXEC -h 192.168.4.51 -p 6351 -a 123456 shutdown
\[root@sql51 \~\]# /etc/init.d/redis_6379 stop
Stopping \...
Redis stopped
方法二:
\[root@sql51 \~\]# /etc/init.d/redis_6379 start
#因为脚本已修改好,可直接启动
\[root@sql51 \~\]# redis-cli -h 192.168.4.51 -p 6351 -a 123456 shutdown
# 四 部署LNMP+Redis
## 1 51搭建Redis服务器
装包
初始化配置
修改配置文件.指定端口 服务ip地址 连接密码
重启服务
查看服务信息
## 2 50上装LNMP
给50准备安装包
\[root@room9pc01 \~\]# scp
\'/root/桌面/20190201/丁明一/丁明一OPERATION/LNMP.tar.gz\'
192.168.4.50:/root
安装
\[root@client-50 LNMP\]# rpm -q pcre-devel zlib-devel openssl-devel
未安装软件包 pcre-devel
未安装软件包 zlib-devel
未安装软件包 openssl-devel
本虚拟环境中可能需要安装这些依赖,实际中不一定需要
\[root@client-50 LNMP\]# yum -y install pcre-devel zlib-devel
openssl-devel
\[root@client-50 LNMP\]# tar -zxvf nginx-1.12.2.tar.gz
\[root@client-50 LNMP\]# cd nginx-1.12.2/
\[root@client-50 LNMP\]# cd nginx-1.12.2/
\[root@client-50 nginx-1.12.2\]#
\[root@client-50 nginx-1.12.2\]# ./configure \--prefix=/usr/local/nginx
\[root@client-50 nginx-1.12.2\]#make
\[root@client-50 nginx-1.12.2\]# make install
\[root@client-50 nginx-1.12.2\]# ls /usr/local/nginx
conf html logs sbin
\[root@client-50 LNMP\]# ls
lnmp_soft.tar.gz nginx-1.10.3.tar.gz nginx-1.12.2 nginx-1.12.2.tar.gz
nginx.sh
\[root@client-50 LNMP\]# tar -xf lnmp_soft.tar.gz
\[root@client-50 LNMP\]# ls
lnmp_soft lnmp_soft.tar.gz nginx-1.10.3.tar.gz nginx-1.12.2
nginx-1.12.2.tar.gz nginx.sh
### 配置nginx
\[root@client-50 conf\]# vim nginx.conf
65 location \~ \\.php\$ {
66 root html;
67 fastcgi_pass 127.0.0.1:9000; #接受php结尾请求给9000端口
68 fastcgi_index index.php;
69 \# fastcgi_param SCRIPT_FILENAME /scripts\$fastcgi_script_name;
70 include fastcgi.conf; #修改成fastcgi.conf
71 }
\[root@client-50 conf\]# /usr/local/nginx/sbin/nginx -t
#检测nginx配置文件
nginx: the configuration file /usr/local/nginx/conf/nginx.conf syntax is
ok
nginx: configuration file /usr/local/nginx/conf/nginx.conf test is
successful
> #此状态证明nginx配置文件无错
\[root@client-50 conf\]# /usr/local/nginx/sbin/nginx #启动nginx
\[root@client-50 conf\]# netstat -unltp \|grep 80
tcp 0 0 0.0.0.0:80 0.0.0.0:\* LISTEN 5665/nginx: master
**安装 php-fpm-5.4.16-42.el7.x86_64.rpm,解释php脚本**
\[root@client-50 \~\]# ls
apache-tomcat-8.0.30.tar.gz php-fpm-5.4.16-42.el7.x86_64.rpm
\[root@client-50 lnmp_soft\]# rpm -ivh php-fpm-5.4.16-42.el7.x86_64.rpm
警告：php-fpm-5.4.16-42.el7.x86_64.rpm: 头V3 RSA/SHA256 Signature, 密钥
ID f4a80eb5: NOKEY
错误：依赖检测失败：
php-common(x86-64) = 5.4.16-42.el7 被 php-fpm-5.4.16-42.el7.x86_64 需要
**rpm -ivh安装失败换yum安装自动解决依赖**
\[root@client-50 \~\]# yum -y install php php-devel
\[root@client-50 \~\]# yum -y install php-fpm-5.4.16-42.el7.x86_64.rpm
\[root@client-50 \~\]# systemctl start php-fpm **#启动php**
\[root@client-50 \~\]# systemctl enable php-fpm
**编写php脚本后可测试**
\[root@client-50 conf\]# vim /usr/local/nginx/html/test.php
\
![](media/image1.png){width="5.766666666666667in"
height="1.7361111111111112in"}
### 安装php
\[root@nginx utils\]# which php
/usr/bin/which: no php in
(/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin)
> #which指令会在环境变量\$PATH设置的目录里查找符合条件的文件。
\[root@nginx utils\]# php -m #查看php命令
bash: php: command not found\... #未发现php命令
\[root@nginx utils\]# yum -y install php-cli #安装php
\[root@nginx utils\]# which php
/usr/bin/php
\[root@nginx utils\]# php -m
\[PHP Modules\]
bz2
Calendar
Core
ctype
curl
\...\.....
\[root@client-50 html\]# ls /etc/php.ini
/etc/php.ini
### 安装mysql
之前实验已经安装,
## 3 配置php支持redis
### 安装提供redis模块的软件包
\[root@client-50 \~\]# php -m \|grep redis #查看php是否支持redis
\[root@client-50 \~\]# cd php/
\[root@client-50 php\]#tar -xf php-redis-2.2.4.tar.gz
#装提供redis模块的软件包
\[root@client-50 php\]# ls
php-devel-5.4.16-42.el7.x86_64.rpm phpredis-2.2.4 php-redis-2.2.4.tar.gz
\[root@client-50 php\]# cd phpredis-2.2.4/
\[root@client-50 phpredis-2.2.4\]# which phpize
/usr/bin/phpize
\[root@client-50 phpredis-2.2.4\]# phpize
Can\'t find PHP headers in /usr/include/php
The php-devel package is required for use of this command.
\[root@client-50 phpredis-2.2.4\]# yum -y install autoconf automake
\[root@client-50 phpredis-2.2.4\]# yum -y install pcre-devel
\[root@client-50 phpredis-2.2.4\]# cd ..
root@client-50 php\]# yum -y install php php-devel
\[root@client-50 php\]# yum -y install
php-devel-5.4.16-42.el7.x86_64.rpm
\[root@client-50 php\]# cd phpredis-2.2.4/
\[root@client-50 phpredis-2.2.4\]# phpize #生成一个php文件
Configuring for:
PHP Api Version: 20100412
Zend Module Api No: 20100525
Zend Extension Api No: 220100525
\[root@client-50 phpredis-2.2.4\]# find / -name \"php-config\"
/usr/bin/php-config
\[root@client-50 phpredis-2.2.4\]# ls /usr/bin/php-config #安装php而来
/usr/bin/php-config
**开始编译安装**
配置php程序运行时,加载redis模块
\[root@client-50 php\]# ls
php-devel-5.4.16-42.el7.x86_64.rpm phpredis-2.2.4 php-redis-2.2.4.tar.gz
\[root@client-50 php\]# cd phpredis-2.2.4/
\[root@client-50 phpredis-2.2.4\]# ./configure
\--with-php-config=/usr/bin/php-config #指定模块编译的路径
\[root@client-50 phpredis-2.2.4\]# make && make install
Installing shared extensions: /usr/lib64/php/modules/
\...
Installing shared extensions: /usr/lib64/php/modules/
#模块文件存放的路径
\[root@client-50 phpredis-2.2.4\]# ls /usr/lib64/php/modules/
#查看模块存在路径
curl.so fileinfo.so json.so phar.so redis.so zip.so
\[root@client-50 phpredis-2.2.4\]#vim /etc/php.ini
\-\-\-\-\-\-\-\-\-\--修改前\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--
728 ; extension_dir = \"./\"
729 ; On windows:
730 ; extension_dir = \"ext\" #红色为修改地方
\-\-\-\-\-\-\-\-\-\--修改后\-\-\-\-\-\-\-\-\-\-\-\-\-\--
728 extension_dir = \"/usr/lib64/php/modules/\" #去掉注释
729 ; On windows:
730 extension = \"redis.so\" #指定模块文件
\[root@client-50 phpredis-2.2.4\]# php -m \|grep redis
redis
编写连接redis服务的php脚本,存储数据 查询数据
\[root@client-50 html\]# vim linkredis.php #创建新的php文件
\connect(\'192.168.4.51\',6351);
\$redis -\>auth(\"123456\");
\$redis-\>set(\"school\",\"tarena\");
echo \$redis-\>get(\"redistest\");
?\>
\[root@client-50 phpredis-2.2.4\]# php
/usr/local/nginx/html/linkredis.php
Tarena
在客户端254(真机) 打开浏览器访问50主机的网站服务
在redis服务器51上查看数据是否存储
NSD NOSQL DAY01
案例1：搭建Redis服务器
案例2：修改Redis服务运行参数
案例3：部署LNMP+Redis
1 案例1：搭建Redis服务器
1.1 问题
具体要求如下：
在主机 192.168.4.51 上安装并启用 redis 服务
设置变量test，值为123
查看变量test的值
1.2 步骤
实现此案例需要按照如下步骤进行。
步骤一：搭建redis服务器
1）安装redis服务器
\[root@redis1 \~\]# cd redis
\[root@redis1 redis\]# ls
lnmp redis-4.0.8.tar.gz
\[root@redis1 redis\]# yum -y install gcc gcc-c++ make
\[root@redis1 redis\]# tar -zxf redis-4.0.8.tar.gz
\[root@redis1 redis\]# cd redis-4.0.8/
\[root@redis1 redis-4.0.8\]# ls
00-RELEASENOTES CONTRIBUTING deps Makefile README.md runtest
runtest-sentinel src utils
BUGS COPYING INSTALL MANIFESTO redis.conf runtest-cluster sentinel.conf
tests
\[root@redis1 redis-4.0.8\]# make
\[root@redis1 redis-4.0.8\]# make install
\[root@redis1 redis-4.0.8\]# cd utils/
\[root@redis1 utils\]# ./install_server.sh
Welcome to the redis service installer
This script will help you easily set up a running redis server
Please select the redis port for this instance: \[6379\]
Selecting default: 6379
Please select the redis config file name \[/etc/redis/6379.conf\]
Selected default - /etc/redis/6379.conf
Please select the redis log file name \[/var/log/redis_6379.log\]
Selected default - /var/log/redis_6379.log
Please select the data directory for this instance
\[/var/lib/redis/6379\]
Selected default - /var/lib/redis/6379
Please select the redis executable path \[/usr/local/bin/redis-server\]