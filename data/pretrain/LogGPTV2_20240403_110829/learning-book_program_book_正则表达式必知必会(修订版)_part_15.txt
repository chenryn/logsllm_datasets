Visual Studio.NET里的正则表达式支持由.NET Framework提供。参
阅前面的A9节。
要想使用正则表达式，请按以下步骤操作。
口 在Edit菜单里选择Find and Replace。
 选择Find、 Replace、Find in Files(在文件里查找）或Replace in Files
（在文件里替换）。
口打开Use（使用）下拉框，从下拉清单里选择Regular expressions
---
## Page 114
01
附录A常见应用软件和编程语言中的正则表达式
请注意以下事项。
使用@代替*？。
口使用#代替+？
口使用^n代替（n}。
口在替换操作里，可以用\（w，n）语法（其中的w是宽度，n是一个
回溯引用编号）来左对齐一个回溯引用，右对齐一个回溯引用的
语法是\（-w，n)。
VisualStudio.NET使用以下特殊元字符和符号来表示常用的字符
集合：
:a
[a-zA-Z0-9]
:C
[a-zA-Z]
: d
\d
:h
[a-fA-Fθ-9]（十六进制数字）
: 1
[a-zA-Z_$][a-zA-Z_0-9s]*（合法的.NET标识符）
:q
一个括在引号里的字符串
:W
[a-zA-Z]+
: 2
\d+
\n是
一个与平台无关的换行符。在替换操作里，它将插入一个新行。
口支持以下几种特殊的字母匹配字符：
: Lu
匹配任意大写字母
: L1
匹配任意小写字母
:Lt
匹配单词的标题形式（首字母是大写的单词）
: Lm
匹配任意标点符号
口支持以下几种特殊的数字匹配字符：
:Nd
[0-9]+（十进制数字）
:N1
罗马数字
口支持以下几种特殊的标点符号匹配字符：
:Ps
配对标点符号的开始符号（左括号、左引号，等等）
:Pe
配对标点符号的结束符号（右括号、右引号，等等）
:P1
双引号
:Pf
单引号
:Pd
短划线（连字符）
---
## Page 115
附录A常见应用软件和编程语言中的正则表达式
105
:PC
下划线
:Po
其他标点符号
口支持以下几种特殊的符号匹配字符：
 : Sm
数学符号
:Sc
货币符号
:Sk
重音和方言符号
: S0
其他符号
口还有一些字符在.NETFramework里也有特殊含义，详细情况参阅
Visual Studio .NET文档。
A.11
MySQL
MySQL是一个流行的开放源代码数据库软件。MySQL率先提供了正
则表达式支持作为一种数据库搜索手段，这一点我们在其他数据库系统
里还没有见过。
MySQL对正则表达式的支持体现在允许在WHERE子句里使用如下格
式的表达式：
REGEXP *expression*
注意
下面是一条使用了正则表达式的MySQL语句的完整语法：
SELECT·FROM table HRE REGEXpattern
MySQL正则表达式支持很有用，功能也很强大，但它还算不上是一
个完备的正则表达式实现。
口只提供了搜索支持，不支持使用正则表达式进行替换操作。
口在默认的情况下，正则表达式搜索不区分字母的大小写。如果需
要区分字母的大小写，必须再增加一个BINARY关键字（放在
REGEXP和模式之间)。
口用[[：：]]来匹配一个单词的
结束。
不支持向前预测。
---
## Page 116
106附录A常见应用软件和编程语言中的正则表达式
口不支持嵌入条件。
口不支持八进制字符搜索。
口不支持\a、\b、\e、\f和\v。
口不支持回溯引用。
A.12Perl
Perl可以说是各种正则表达式实现的“祖宗”，其他各种实现几乎都
与Perl相兼容。
正则表达式支持是Perl的核心组件之一。如果需要在Perl脚本里使用
正则表达式，只要像下面这样给出一个操作和相应的模式即可。
 m/pattern/
匹配给定的模式。
 s/pattern/pattern/
执行一个替换操作。
 qr/pattern/
返回一个Regex对象供今后使用。
 split()
把一个字符串拆分为子字符串。
下面是一些与Perl正则表达式有关的注意事项。
口允许把限定符放在模式的后面。\i用来表明在搜索时不区分字母
的大小写：\g用来表明进行全局搜索（把所有的匹配都找出来）。
口在使用“回溯引用”的时候，$将返回被匹配字符串前面的所有
东西，$将返回被匹配字符串后面的所有东西，$+将返回最后一
个被匹配的子表达式，$将返回整个被匹配字符串。
A.13PHP
PHP通过它的PCRE组件提供了与PerI相兼容的正则表达式支持。
期版本的用户需要自行编译PHPpcre-regecx软件包才能启用正
则表达式支持。
下面是PCRE组件提供的一些正则表达式函数。
---
## Page 117
附录A常见应用软件和编程语言中的正则表达式107
preg_grep（）：进行一次搜索，匹配结果将作为数组返回。
preg_match（）：进行一次正则表达式搜索，返回第一个匹配。
preg_match_all（）：进行一次正则表达式搜索，返回所有的匹配。
preg_quote(）：这个函数的输入参数是一个模式，返回值是该模
式的转义版本。
preg_replace()：进行一次“搜索并替换”操作。
使用一个回调（callback）函数来完成实际替换动作。
preg_split（)：把一个字符串拆分为子字符串。
请注意以下事项。
口在默认的情况下，匹配操作不区分字母的大小写，如果不想区分
字母的大小写，必须使用i限定符。
口在默认的情况下，匹配操作仅限于单行字符串。如果需要匹配多
行字符串，必须使用限定符。
 preg_replace() preg_replace_callback()和preg_split()函数
都支持一个可选的参数，该参数用来给出一个上限值—对字符
串进行替换或拆分的最大次数。
 preg_grep() 和preg_replace_ca11back()是从PHP 4才开始有
的，其他函数都是从PHP3开始就被支持的。
口在PHP4.0.4和更高版本里，回测引用可以用Perl语言的$语法（例
如$1）来引用：在较早的版本里必须用\\来代替$。
不支持\1、u、\L、\U、\Q和\v。
A.14Sun Java
Java对正则表达式的支持是从1.4版本开始的，此前的JRE（Java
Runtime Environment，Java运行环境）版本不支持正则表达式。
警告版本低于1.4的JRE现在仍被广泛地使用着。如果你打算
部署一个使用了正则表达式的Java应用程序，千万不要忘记检
查JRE的版本。
---
## Page 118
108附录A常见应用软件和编程语言中的正则表达式
支持，而不少软件团队在几年前就开发出了各种非官方的正则
表达式实现，因为高幅的限制，本书没能对那些非官方的Java
正则表达式实现进行介绍：以下注意事项只适用于由Sun公司
正式发布的Java正则表达式支持。
Java语言中的正则表达式匹配功能主要是通过java,util.regex，
matcher类和以下这些方法实现的。
find（）：在一个字符申里寻找一个给定模式的匹配。
口lookingAt（）：用一个给定的模式去尝试匹配一个字符串的开头。
口matches（）：用一个给定的模式去尝试匹配一个完整的字符串。
replaceAl1（）：进行替换操作，对所有的匹配都进行替换。
口replaceFirst（）：进行替换操作，只对第一个匹配进行替换。
matcher类还提供了几个能够让程序员对特定操作微出更细致调控
的方法。此外，java.util.regex.pattern类也提供了几个简单易用的
包装器方法，
口compile（）：把一个正则表达式编译成一个模式。
口flags（）：返回某给定模式的匹配标志。
 matches（）：在功能上等价于刚才介绍的matches（）方法
pattern（）：把一个模式还原为一个正则表达式。
split（）：把一个字符串拆分为子字符串。
Sun公司发布的Java正则表达式支持与Perli语言基本兼容，但要注意
以下几点。
要想使用正则表达式，必须先用import java.util.regex.*语句
导入正则表达式组件（这条语句将导入一个完整的软件包。如果
你只需要用到其中的一部分功能，请用相应的软件包名字替换掉
这条语句里的*）。
口不支持嵌入条件。
---
## Page 119
附录A常见应用软件和编程语言中的正则表达式
口不支持使用\E、\1、\L、\u和\U进行字母大小写转换。
口不支持使用\b匹配退格符。
口不支持z。
---
## Page 120
附录B
常见问题的正则表
达式解决方案
本附录收集了一些非常实用的正则表达式并对它们分别做了详细的
解释。这些正则表达式所涉及的间题都是大家在实际工作中经常会遇到
的。我们编写这个附录的目的有两个：一是通过解决这些实际问题对全
书内容做一个总结，二是向大家提供一些现成的模式以帮助大家节省这
方面的时间和精力。
上，正如我们在书中反复提到的那样，与正则表达式有关的问
题很少会有一个终极的答案。更常见的情况是同时存在多种答
案一—它们没有绝对的对错之分，它们之间的区别只体现在你
希望你的匹配操作严格到什么程度或者说你对匹配误差容忍
到什么程度。在构造一个正则表达式模式的时候，我们不仅要
考虑到匹配结来的准确性，还必须考虑到它的执行效平：而这
两个因素往往难以两全，有了这样的认识，相信大家能够根据
你们的具体情况选用这里给出的模式并在必要时对它们做出
进一步改进
---
## Page 121
附录B常见问题的正则表达式解决方案111
B.1
北美电话号码
North American Numbering Plan（北美编号方案）对北美地区的电话
号码格式做出了定义。根据这一方案，北美地区（美国、加拿大、加勒
比海地区大部以及其他几个地区）的电话号码由一个3位数的区号和一个
7位数的号码构成（这7位数字又分成一个3位数的局号和一个4位数的线
路号，局号和线路号之间用连字符分隔）。每位电话号码可以是任意数字，
但区号和局号的第一位数字不能是0或1。在书写电话号码的时候，人们
往往把区号放在括号里，面且还往往会在区号与实际电话号码之间加上
一个连字符来分隔它们。匹配（555）555-5555（右括号的后面有一个空格）
或(555)555-5555或555-555-5555其中之很简单,但要型编写个能够同
时匹配这些电话号码的模式就不那么容易了。
文本
J. Doe: 248-555-1234
A. Lee: (810)555-1234
B.Snith:  (313) 555-1234
正则表达式
\ (7[2-9]d,d\)7[ - 17[2-9]1d]d- 16(4)
结果
J.Doe:248-555-1234
B.Snith:(313) 555-1234
A.Lee:(810)555-1234
分析
这个模式的开头是样子很怪的\（？，它负责匹配用来括住区号的括
号——这对括号是可选的：\（匹配（字符，？表示匹配（的零次或一次出现。
接下来的[2-9]\d\d负责匹配一个3位数的区号（第1位数字只能是2到9）。
①中国固定电话号码
我国的固定电话号码的规律是。最开始的位一定是0，表示长途，接看是两位、三
位或者四位数字组成的区号，然后是7亿或者8位的电话号码，其中首位不为1（1用
于特殊用途)。而国内习贷的电话格式有：0298845 7890,029 88457890,（029） 8845
7890。 (029) 88457890, 029-8845 7890. 029-88457890, 029-8845-7890。 3应的正
则表达式可以写为：\(3e[1-9]v[1,3}[-]?[2-9]d[2,3][-]7(4), —编者注