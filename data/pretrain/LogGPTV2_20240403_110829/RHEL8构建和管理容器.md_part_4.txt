    命令拉取镜像会被阻断，因为指定的前缀会被匹配。
    ``` screen
    [[registry]]
    location = "registry.example.org"
    prefix="registry.example.org/namespace"
    blocked = true
    ```
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    `prefix`{.literal} 是可选的，默认值与 `位置`{.literal} 值相同。
    :::
    您可以通过设置
    `prefix="registry.example.org/namespace/image"`{.literal}
    来阻止特定镜像。
    ``` screen
    [[registry]]
    location = "registry.example.org"
    prefix="registry.example.org/namespace/image"
    blocked = true
    ```
[镜像 registry]{.term}
:   当无法访问原始 registry 时，您可以设置 registry
    镜像。例如，您无法连接到互联网，因为您在高度敏感的环境中工作。您可以指定按照指定顺序联系的多个镜像。例如，当运行
    `podman pull registry.example.com/myimage:latest`{.literal}
    命令时，首先会尝试 `mirror-1.com`{.literal}，然后是
    `mirror-2.com`{.literal}。
    ``` screen
    [[registry]]
    location="registry.example.com"
    [[registry.mirror]]
    location="mirror-1.com"
    [[registry.mirror]]
    location="mirror-2.com"
    ```
:::
::: itemizedlist
**其它资源**
-   [如何管理 Linux 容器
    registry](https://www.redhat.com/sysadmin/manage-container-registries){.link}
:::
:::
::: section
::: titlepage
# []{#assembly_working-with-container-images_building-running-and-managing-containers.html#proc_searching-for-container-images_assembly_working-with-container-images}搜索容器镜像 {.title}
:::
使用 `podman search`{.literal} 命令，您可以搜索所选容器 registry
中的镜像。您也可以在 [Red Hat Container
Registry](https://access.redhat.com/containers:){.link} 中搜索镜像。Red
Hat Container Registry 包含镜像描述、内容、健康索引和其他信息。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
`podman search`{.literal}
命令不是确定镜像是否存在或是否存在的可靠方法。v1 和 v2 Docker 分发 API
的 `podman 搜索`{.literal} 行为特定于每个 registry
的实施。某些注册表可能根本不支持搜索。在没有搜索术语的情况下搜索仅适用于实施
v2 API 的 registry。`docker search`{.literal} 命令也包含同样的内容。
:::
本节介绍如何在 quay.io 注册表中搜索 `postgresql-10`{.literal} 镜像。
::: itemizedlist
**先决条件**
-   配置了 registry。
:::
::: orderedlist
**流程**
1.  向 registry 进行身份验证：
    ``` screen
    # podman login quay.io
    ```
2.  搜索镜像：
    ::: itemizedlist
    -   要搜索特定 registry 中的特定镜像，请输入：
        ``` literallayout
        podman search quay.io/postgresql-10
        INDEX       NAME                                           DESCRIPTION           STARS   OFFICIAL   AUTOMATED
        redhat.io   registry.redhat.io/rhel8/postgresql-10         This container image ...  0
        redhat.io   registry.redhat.io/rhscl/postgresql-10-rhel7   PostgreSQL is an  ...     0
        ```
    -   另外，要显示特定 registry 提供的所有镜像，请输入：
        ``` screen
        # podman search quay.io/
        ```
    -   要在所有 registry 中搜索镜像名称，请输入：
        ``` screen
        # podman search postgresql-10
        ```
        要显示完整的描述，请将 `--no-trunc`{.literal} 选项传递给 命令。
    :::
:::
::: itemizedlist
**其它资源**
-   `podman-search`{.literal} man page
:::
:::
::: section
::: titlepage
# []{#assembly_working-with-container-images_building-running-and-managing-containers.html#proc_pulling-images-from-registries_assembly_working-with-container-images}从 registry 中拉取镜像 {.title}
:::
使用 `podman pull`{.literal} 命令将镜像提取到您的本地系统。
::: orderedlist
**流程**
1.  登录到 registry.redhat.io registry:
    ``` screen
    $ podman login registry.redhat.io
    Username: username
    Password: **********
    Login Succeeded!
    ```
2.  拉取 registry.redhat.io/ubi8/ubi 容器镜像：
    ``` literallayout
    $ podman pull registry.redhat.io/ubi8/ubi
    ```
:::
::: itemizedlist
**验证步骤**
-   列出拉取到本地系统的所有镜像：
    ``` literallayout
    $ podman images
    REPOSITORY                           TAG     IMAGE ID      CREATED      SIZE
    registry.redhat.io/ubi8/ubi          latest  3269c37eae33  7 weeks ago  208 MB
    ```
:::
::: itemizedlist
**其它资源**
-   `podman-pull`{.literal} man page
:::
:::
::: section
::: titlepage
# []{#assembly_working-with-container-images_building-running-and-managing-containers.html#con_configuring-short-name-aliases_assembly_working-with-container-images}配置短名称别名 {.title}
:::
红帽建议始终使用完全限定名称拉取镜像。但是，按短名称拉取镜像是常见的。例如，您可以使用
`ubi8`{.literal} 而不是
`registry.access.redhat.com/ubi8:latest`{.literal}。
`registries.conf`{.literal}
文件允许为短名称指定别名，使管理员能够完全控制从何处拉取镜像。别名在
`[aliases]`{.literal} 表中指定，格式为
`"name" = "value"。`{.literal}您可以在
`/etc/containers/registries.conf.d`{.literal}
目录中查看别名列表。红帽在此目录中提供一组别名。例如，`podman pull ubi8`{.literal}
直接解析到正确的镜像，即
`registry.access.redhat.com/ubi8:latest`{.literal}。
例如：
``` screen
unqualified-search-registries=["registry.fedoraproject.org", “quay.io"]
[aliases]
"fedora"="registry.fedoraproject.org/fedora"
```
简短名称模式为：
::: itemizedlist
-   [**强制**]{.strong} ：如果在镜像拉取过程中未找到匹配的别名，Podman
    会提示用户选择一个非限定搜索注册表。如果所选镜像拉取成功，Podman
    将自动在 `$HOME/.cache/containers/short-name-aliases.conf`{.literal}
    文件（root 用户）或
    `/var/cache/containers/short-name-aliases.conf`{.literal} （root
    用户）中记录一个新的短名称别名。如果无法提示用户（例如，stdin 或
    stdout 而不是 TTY），则 Podman
    会失败。请注意，如果都指定了同一别名，则
    `short-name-aliases .conf`{.literal} 文件优先于
    registry``{=html}.conf 文件。
-   [**Permissive**]{.strong}
    ：与强制模式类似，但如果用户无法提示，Podman 不会失败。相反，Podman
    会按照指定顺序搜索所有非限定 registry。请注意，没有记录别名。
-   [**禁用**]{.strong} ：以给定顺序尝试所有非限定搜索
    registry，不会记录任何别名。
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
红帽建议使用完全限定的镜像名称，包括
registry、命名空间、镜像名称和标签。在使用短名称时，通常会存在欺骗风险。添加受信任的
registry，即不允许未知或匿名用户创建任意名称的帐户的
registry。例如，用户希望从 example.
`registry.com registry 中拉取示例`{.literal} 容器镜像。如果
`example.registry.com`{.literal}
不是搜索列表中的第一个，攻击者可以在搜索列表中更早的注册表中放置不同的示例镜像。用户会意外拉取并运行攻击者镜像，而不是预期的内容。
:::
::: itemizedlist
**其它资源**
-   [Podman
    中的容器镜像短名称](https://www.redhat.com/sysadmin/container-image-short-names){.link}
:::
:::
::: section
::: titlepage
# []{#assembly_working-with-container-images_building-running-and-managing-containers.html#proc_pulling-container-images-using-short-name-aliases_assembly_working-with-container-images}使用短名称别名拉取容器镜像 {.title}
:::
您可以使用安全的短名称将镜像提取到本地系统。以下流程描述了如何拉取
`fedora 或`{.literal} `nginx`{.literal} 容器镜像。
::: itemizedlist
**流程**
-   拉取容器镜像：
    ::: itemizedlist
    -   拉取 `fedora`{.literal} 镜像：
        ``` literallayout
        $ podman pull fedora
        Resolved "fedora" as an alias (/etc/containers/registries.conf.d/000-shortnames.conf)
        Trying to pull registry.fedoraproject.org/fedora:latest…
        ...
        Storing signatures
        ...
        ```
        找到别名，并且安全地拉取
        `registry.fedoraproject.org/fedora`{.literal} 镜像。unqualified
        `-search-registries`{.literal} 列表不用于解析 `fedora`{.literal}
        镜像名称。
    -   拉取 `nginx`{.literal} 镜像：
        ``` literallayout
        $ podman pull nginx
        ? Please select an image:
        registry.access.redhat.com/nginx:latest
        registry.redhat.io/nginx:latest
          ▸ docker.io/library/nginx:latest
        ✔ docker.io/library/nginx:latest
        Trying to pull docker.io/library/nginx:latest…
        ...
        Storing signatures
        ...
        ```
        如果没有找到匹配的别名，系统会提示您选择一个
        `非限定搜索注册列表`{.literal}。如果成功拉取所选镜像，则会在本地记录新的短名称别名，否则会发生错误。
    :::
:::
::: itemizedlist
**验证**
-   列出拉取到本地系统的所有镜像：
    ``` literallayout
    $ podman images
    REPOSITORY                                   TAG     IMAGE ID      CREATED        SIZE
    registry.fedoraproject.org/fedora            latest  28317703decd  12 days ago    184 MB
    docker.io/library/nginx                      latest  08b152afcfae  13 days ago    137 MB
    ```
:::
::: itemizedlist
**其它资源**
-   [Podman
    中的容器镜像短名称](https://www.redhat.com/sysadmin/container-image-short-names){.link}
:::
:::
::: section
::: titlepage
# []{#assembly_working-with-container-images_building-running-and-managing-containers.html#proc_listing-images_assembly_working-with-container-images}列出镜像 {.title}
:::
使用 `podman images`{.literal} 命令列出本地存储中的镜像。
::: itemizedlist
**先决条件**
-   本地系统上提供了拉取的镜像。
:::
::: itemizedlist
**流程**
-   列出本地存储中的所有镜像：
    ``` literallayout
    $ podman images
    REPOSITORY                           TAG     IMAGE ID      CREATED      SIZE
    registry.access.redhat.com/ubi8/ubi  latest  3269c37eae33  6 weeks ago  208 MB
    ```
:::
::: itemizedlist
**其它资源**
-   `podman-images`{.literal} man page
:::
:::
::: section
::: titlepage
# []{#assembly_working-with-container-images_building-running-and-managing-containers.html#proc_inspecting-local-images_assembly_working-with-container-images}检查本地镜像 {.title}
:::
将镜像拉取到本地系统并运行后，您可以使用 `podman inspect`{.literal}
命令来调查镜像。例如，使用它了解镜像的作用，并检查镜像内是什么软件。`podman inspect`{.literal}
命令显示通过名称或 ID 标识的容器和镜像的信息。
::: itemizedlist
**先决条件**
-   本地系统上提供了拉取的镜像。
:::
::: itemizedlist
**流程**
-   检查 `registry.redhat.io/ubi8/ubi`{.literal} 镜像：
    ``` literallayout
    $ podman inspect registry.redhat.io/ubi8/ubi
    …
     "Cmd": [
            "/bin/bash"
        ],
        "Labels": {
            "architecture": "x86_64",
            "build-date": "2020-12-10T01:59:40.343735",
            "com.redhat.build-host": "cpt-1002.osbs.prod.upshift.rdu2.redhat.com",
            "com.redhat.component": "ubi8-container",
            "com.redhat.license_terms": "https://www.redhat.com/...,
        "description": "The Universal Base Image is ...
        }
    ...
    ```
    `"Cmd"`{.literal}
    键指定要在容器内运行的默认命令。您可以通过将命令指定为
    `podman run`{.literal} 命令的参数来覆盖此命令。如果使用
    `podman run`{.literal} 启动它，则此 ubi8/ubi 容器将执行 bash
    shell。如果设置了 `"Entrypoint"`{.literal} 键，则使用其值而不是
    `"Cmd"`{.literal} 值，并将 `"Cmd"`{.literal} 的值用作 Entrypoint