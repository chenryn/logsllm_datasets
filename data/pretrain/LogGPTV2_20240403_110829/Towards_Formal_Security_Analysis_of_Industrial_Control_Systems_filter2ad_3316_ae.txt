l
a
c
i
m
e
h
C
l
e
v
e
l
l
l
ﬁ
k
n
a
T
A
D
A
C
S
/
I
M
H
n
a
i
r
o
t
s
i
H
C
L
P
I
I
I
I
I
I
C I
C
Team 1
Team 2
Team 3
Team 4
Team 5
Team 6
Formal Verif. C,I C,I C,I C,I C,I
I
The I, C, and S stands for Insider, Cybercriminal, and
strong attacker proﬁles used to perform the attack. The
attacker proﬁle S and the HMI/SCADA have not been
I
C
C I
I
–
S C S
I
I
I
considered in the formal assessment
reported in [1] but with a loss of details due to the diﬀerent
abstraction level. The main diﬀerence between that work
and our work is that in [1], the authors report the details of
the real values of their attacks, while we identify the attack
steps.
In [23], the authors analyze the security of the same wa-
ter treatment testbed by creating a formal model in Alloy
formal language and then analyzing the system model with
Alloy analyzer [21]. The authors have not used any for-
mal attacker model or proﬁle and they have considered only
three processes of the testbed. In this work, we applied sev-
eral modiﬁcations of the standard Dolev-Yao attacker model
and we also applied two diﬀerent attacker proﬁles. As result,
we detected a number of attacks that supersede the attacks
reported in [23].
ADVISE. In [19, 24], authors formally deﬁne a framework
for the identiﬁcation of attacks in CPS. In this formaliza-
tion, the authors deﬁne a set of abstract components to de-
scribe an attack execution graphs (AEG) and an attacker
model. The AEG represents potential attack steps against
the system, together with a formal deﬁnition of the attacker
using a set of 6 dimensions. This formalization has been im-
plemented in a framework called ADVISE where users can
deﬁne their own attacker models, e.g., deﬁning the knowl-
edge of the attacker with respect to the AEG. The ADVISE
tool does not provide a list of attacker proﬁles and, in gen-
eral, the attacker has to be deﬁned by the user. With our
approach we provide two diﬀerent attacker proﬁle and we
123provide rules that extend the standard DY attacker model
capabilities.
CyberSAGE. In [41], the authors describe the Cyber Se-
curity Argument Graph Evaluation tool for CPS security
assessment. The tool can automatically security argument
graphs describing: the workﬂow of a CPS (i.e., how the sys-
tem provides its functionalities), the security goals, and an
attacker model. Note here that this graph matches with
our deﬁnition of attack model in Section 2.1. For the de-
scription of the goal and workﬂow information CyberSAGE
supports XMI formats input. The topology of the network
is automatically extracted and the devices of the system are
associated with properties (e.g., availability) according to
heuristics.
7. CONCLUSIONS
In this work we proposed a formal modeling of ICS and ap-
plied our modeling technique to a real-world water treatment
testbed called SWaT. In addition, we proposed a formaliza-
tion of all the dimensions proposed in the APE [28] frame-
work. The attack model that we implemented in ASLan++
is around 1000 lines long and contains more than 50 en-
tities. The ASLan++ speciﬁcation generates 269 ASLan
rules (i.e., transition rules). Using that model, we then per-
formed a formal security assessment of SWaT against two
diﬀerent attacker proﬁles, Cybercriminal and Insider, using
CL-AtSe, a formal security analysis tool. We showed that
with our formal technique we can identify attacks to the se-
curity of SWaT that take into account the logic of the ICS.
To show that our results can be concretely used to reason
on the security of ICS we compare our formal assessment
results with the results of an independent practical assess-
ment performed by six diﬀerent teams (from industry and
academia). The comparison shows that 7 (out of 8) diﬀer-
ent attacks found during the practical assessment were also
discovered by our formal analysis. We did not cover the last
attack type as our abstraction does not cover the related
components in the system model.
Acknowledgments.
We thank the anonymous reviewers for their helpful com-
ments and suggestions. This work was supported by the
National Research Foundation of Singapore under grant
NRF2014NCR-NCR001-40.
8. REFERENCES
[1] S. Adepu and A. Mathur. An investigation into the
response of a water treatment system into cyber
attacks. In IEEE Symposium on High Assurance
Systems Engineering (HASE), 2015.
[2] D. Antonioli, H. R. Ghaeini, S. Adepu, M. Ochoa, and
N. O. Tippenhauer. Gamifying education and research
on ics security: Design, implementation and results of
s3. 2017. Cornell University, ArXiv e-Prints,
http://arxiv.org/abs/1702.03067v1.
[3] A. Armando, W. Arsac, T. Avanesov, M. Barletta,
A. Calvi, A. Cappai, R. Carbone, Y. Chevalier,
L. Compagna, J. Cu´ellar, G. Erzse, S. Frau, M. Minea,
S. M¨odersheim, D. von Oheimb, G. Pellegrino, S. E.
Ponta, M. Rocchetto, M. Rusinowitch, M. T. Dashti,
M. Turuani, and L. Vigan`o. The AVANTSSAR
platform for the automated validation of trust and
security of service-oriented architectures. In Tools and
Algorithms for the Construction and Analysis of
Systems (TACAS), pages 267–282, 2012.
[4] A. Armando, D. A. Basin, Y. Boichut, Y. Chevalier,
L. Compagna, J. Cu´ellar, P. H. Drielsma, P. H´eam,
O. Kouchnarenko, J. Mantovani, S. M¨odersheim,
D. von Oheimb, M. Rusinowitch, J. Santiago,
M. Turuani, L. Vigan`o, and L. Vigneron. The AVISPA
tool for the automated validation of internet security
protocols and applications. In Proceedings of Computer
Aided Veriﬁcation, (CAV), pages 281–285, 2005.
[5] A. Armando and L. Compagna. SATMC: a SAT-based
model checker for security protocols. In JELIA, LNAI
3229. Springer, 2004.
[6] AVANTSSAR. Deliverable 5.3: AVANTSSAR Library
of validated problem cases. www.avantssar.eu, 2010.
[7] AVANTSSAR. Deliverable 2.3 (update): ASLan++
speciﬁcation and tutorial, 2011. Available at
http://www.avantssar.eu.
[8] D. Basin, S. Capkun, P. Schaller, and B. Schmidt.
Let’s get physical: Models and methods for real-world
security protocols. In Proceedings of Theorem Proving
in Higher Order Logics, 2009.
[9] D. Basin, S. Capkun, P. Schaller, and B. Schmidt.
Formal reasoning about physical properties of security
protocols. Transactions on Information and System
Security (TISSEC), 14(2):16, 2011.
[10] D. Basin, S. M¨odersheim, and L. Vigan`o. OFMC: A
symbolic model checker for security protocols. Journal
of Information Security, 4(3):181–208, 2005.
[11] M. Bugliesi, S. Calzavara, S. M¨odersheim, and
P. Modesti. Security protocol speciﬁcation and
veriﬁcation with AnBx. behaviour, 15:16, 2015.
[12] A. A. C´ardenas, S. M. Amin, B. Sinopoli, A. Giani,
A. Perrig, and S. S. Sastry. Challenges for securing
cyber physical systems. In Workshop on Future
Directions in Cyber-physical Systems Security. DHS,
July 2009.
[13] A. A. C´ardenas, T. Roosta, and S. Sastry. Rethinking
security properties, threat models, and the design
space in sensor networks: A case study in SCADA
systems. Ad Hoc Networks, 7(8):1434–1447, 2009.
[14] D. E. Denning. Activism, hacktivism, and
cyberterrorism: The internet as a tool for inﬂuencing
foreign policy. In Networks and Netwars: The Future
of Terror, Crime, and Militancy. RAND Corporation,
2001.
[15] P. Derler, E. A. Lee, and A. S. Vincentelli. Modeling
cyber-physical systems. Proceedings of the IEEE,
100(1):13–28, Jan 2012.
[16] D. Dolev and A. C. Yao. On the security of public key
protocols. IEEE Transactions on Information Theory,
29(2):198–207, 1983.
[17] A. Doup´e, M. Cova, and G. Vigna. Why Johnny Can’t
Pentest: An Analysis of Black-Box Web Vulnerability
Scanners, pages 111–131. Springer Berlin Heidelberg,
2010.
[18] B. Feddersen, K. Keefe, W. H. Sanders, C. Muehrcke,
D. Parks, A. Crapo, A. Gabaldon, and R. Palla. An
ontological model for constructing mobius advise
security models. In Proceedings of Conference on
Dependable Systems and Networks (DSN), 2015.
[19] M. D. Ford, K. Keefe, E. LeMay, W. H. Sanders, and
C. Muehrcke. Implementing the ADVISE security
modeling formalism in m¨obius. In IEEE/IFIP
Conference on Dependable Systems and Networks
(DSN), 2013.
[20] B. Galloway and G. Hancke. Introduction to industrial
control networks. Communications Surveys Tutorials,
IEEE, 15(2):860–880, 2013.
[21] D. Jackson. Software Abstractions: Logic, Language,
and Analysis. The MIT Press, 2006.
[22] K. H. John and M. Tiegelkamp. IEC 61131-3:
Programming Industrial Automation Systems Concepts
124Figure 5: The details of the SWaT components and connections. The tag MaV is for manual valve, MV for
motorized valve, T for tank, AIT for Analyzer Indicator Transmitter, FIT for Flow Indicator Transmitter,
PIT for Pressure Indicator Transmitter
and Programming Languages, Requirements for
Programming Systems, Decision-Making Aids.
Springer, 2nd edition, 2010.
[23] E. Kang, S. Adepu, D. Jackson, and A. P. Mathur.
Model-based security analysis of a water treatment
system. In Proceedings of the Workshop on Software
Engineering for Smart Cyber-Physical Systems, pages
22–28. ACM, 2016.
[24] E. LeMay, M. D. Ford, K. Keefe, W. H. Sanders, and
C. Muehrcke. Model-based security metrics using
adversary view security evaluation (ADVISE). In
Proceedings of Conference on Quantitative Evaluation
of Systems, QEST, 2011.
[25] A. Mathur and N. O. Tippenhauer. A water treatment
testbed for research and training on ics security. In
Proceedings of Workshop on Cyber-Physical Systems
for Smart Water Networks (CySWater), Apr. 2016.
[26] A. Ornaghi and M. Valleri. Ettercap.
https://ettercap.github.io/ettercap/, last visited
August 3 2016.
[27] M. Rocchetto, M. Ochoa, and M. Torabi Dashti.
Model-based detection of CSRF. In ICT Systems
Security and Privacy Protection, volume 428 of IFIP
Advances in Information and Communication
Technology. Springer Berlin Heidelberg, 2014.
[28] M. Rocchetto and N. O. Tippenhauer. APE (Attacker
Proﬁle Examiner), 2016. Available at
http://research.scy-phy.net/ape/.
[29] M. Rocchetto and N. O. Tippenhauer. ASLan++
formal model of SWaT, 2016. Available at
https://research.scy-phy.net/swatmodel.
[30] M. Rocchetto and N. O. Tippenhauer. CPDY:
Extending the dolev-yao attacker with physical-layer
interactions. In Proceedings of the International
Conference on Formal Engineering Methods (ICFEM),
2016.
[31] M. Rocchetto and N. O. Tippenhauer. On attacker
models and proﬁles for cyber-physical systems. In
Proceedings of the European Simposium on Research
in Computer Security (ESORICS), 2016.
[32] P. Schaller, B. Schmidt, D. A. Basin, and S. Capkun.
Modeling and verifying physical properties of security
protocols for wireless networks. In Computer Security
Foundations Symposium (CSF), pages 109–123, 2009.
[33] V. Schiﬀer, D. Vangompel, and R. Voss. The common
industrial protocol (CIP) and the family of CIP
networks. ODVA, 2006.
[34] M. Schmidt and H. Lipson. Distilling free-form natural
laws from experimental data. science,
324(5923):81–85, 2009.
[35] R. Software. Studio 5000 R(cid:13).
http://www.rockwellautomation.com/
rockwellsoftware/products/studio-5000.page, last
visited August 3 2016.
[36] D. Steinmetzer, M. Schulz, and M. Hollick.
Lockpicking physical layer key exchange: Weak
adversary models invite the thief. In Proc. ACM
Conference Wireless Security (WiSeC), 2015.
[37] M. Turuani. The CL-Atse Protocol Analyser. In RTA,
LNCS 4098, 2006.
[38] D. Urbina, J. Giraldo, N. O. Tippenhauer, and
A. Cardenas. Attacking ﬁeldbus communications in
ICS: Applications to the SWaT testbed. In
Proceedings of Singapore Cyber Security R&D
Conference (SG-CRC), Jan. 2016.
[39] R. Vigo. The cyber-physical attacker. In Proceedings
125of Workshop of Conference on Computer Safety,
Reliability, and Security (SAFECOMP), 2012.
[40] D. von Oheimb and S. M¨odersheim. ASLan++ — a
formal security speciﬁcation language for distributed
systems. In FMCO, LNCS 6957. Springer, 2010.
[41] A. H. Vu, N. O. Tippenhauer, B. Chen, D. M. Nicol,
and Z. Kalbarczyk. CyberSAGE: A tool for automatic
security assessment of cyber-physical systems. In
Proceeding of Quantitative Evaluation of Systems
(QEST), pages 384–387, 2014.
[42] S. Weinberger. Computer security: Is this the start of
cyberwarfare? Nature, 174:142–145, June 2011.
APPENDIX
A. SWaT PROCESSES
The details of the overall process of SWaT are depicted
in Figure 5. The picture represents the initial status of the
system model that we have considered in our formal assess-
ment. The level of the water inside the tanks is at an optimal
status (not high nor low), all the manual valves are opened,
all the pumps are closed and only the ﬁrst motorized valve
MV101 is open (i.e., the water in T101 is ﬁlling up).
126