title:APECS: A Distributed Access Control Framework for Pervasive Edge
Computing Services
author:Sean Dougherty and
Reza Tourani and
Gaurav Panwar and
Roopa Vishwanathan and
Satyajayant Misra and
Srikathyayani Srikanteswara
APECS: A Distributed Access Control Framework for Pervasive
Edge Computing Services
Sean Dougherty
Saint Louis University
St. Louis, U.S.
PI:EMAIL
Roopa Vishwanathan
New Mexico State University
Las Cruces, U.S.
PI:EMAIL
Reza Tourani
Saint Louis University
St. Louis, U.S.
PI:EMAIL
Satyajayant Misra
New Mexico State University
Las Cruces, U.S.
PI:EMAIL
Gaurav Panwar
New Mexico State University
Las Cruces, U.S.
PI:EMAIL
Srikathyayani Srikanteswara
Intel Labs
Portland, U.S.
PI:EMAIL
ABSTRACT
Edge Computing is a new computing paradigm where applications
operate at the network edge, providing low-latency services with
augmented user and data privacy. A desirable goal for edge comput-
ing is pervasiveness, that is, enabling any capable and authorized
entity at the edge to provide desired edge services–pervasive edge
computing (PEC). However, efficient access control of users receiv-
ing services and edge servers handling user data, without sacrificing
performance is a challenge. Current solutions, based on “always-on”
authentication servers in the cloud, negate the latency benefits of
services at the edge and also do not preserve user and data pri-
vacy. In this paper, we present APECS, an advanced access control
framework for PEC, which allows legitimate users to utilize any
available edge services without need for communication beyond
the network edge. The APECS framework leverages multi-authority
attribute-based encryption to create a federated authority, which
delegates the authentication and authorization tasks to semi-trusted
edge servers, thus eliminating the need for an “always-on” authen-
tication server in the cloud. Additionally, APECS prevents access
to encrypted content by unauthorized edge servers. We analyze
and prove the security of APECS in the Universal Composability
framework and provide experimental results on the GENI testbed
to demonstrate the scalability and effectiveness of APECS.
CCS CONCEPTS
• Security and privacy→ Access control; Distributed systems
security; • Networks → Security protocols.
KEYWORDS
Distributed access control, authentication, authorization, attribute-
based encryption, edge computing.
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than ACM
must be honored. Abstracting with credit is permitted. To copy otherwise, or republish,
to post on servers or to redistribute to lists, requires prior specific permission and/or a
fee. Request permissions from permissions@acm.org.
CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea
© 2021 Association for Computing Machinery.
ACM ISBN 978-1-4503-8454-4/21/11...$15.00
https://doi.org/10.1145/3460120.3484804
ACM Reference Format:
Sean Dougherty, Reza Tourani, Gaurav Panwar, Roopa Vishwanathan, Satya-
jayant Misra, and Srikathyayani Srikanteswara. 2021. APECS: A Distributed
Access Control Framework for Pervasive Edge Computing Services. In
Proceedings of the 2021 ACM SIGSAC Conference on Computer and Commu-
nications Security (CCS ’21), November 15–19, 2021, Virtual Event, Republic of
Korea. ACM, New York, NY, USA, 16 pages. https://doi.org/10.1145/3460120.
3484804
1 INTRODUCTION
The number of wireless devices and connections are growing rapidly,
the major drivers being the increasing number of smartphones
and machine to machine communications from smart meters, au-
tonomous vehicles, video cameras, and more [5]. As an example,
real-time video analytics data from Internet of Things (IoT) devices
such as surveillance cameras [4], estimated to be over 1 billion by
the end of 20211, supports several practical, useful applications
such as traffic control, autonomous driving, providing cognitive
assistance to users [25, 31], and more. The video feed data generated
by cameras needs to be processed quickly and in proximity to the
user, which precludes transferring the data to the Cloud for pro-
cessing. This need is particularly accentuated for latency-sensitive
applications such as autonomous driving.
To address this challenge, various edge computing ecosystems
have been proposed, including cloudlets, fog computing, and Multi-
Access Edge Computing [21] with the premise of deploying pow-
erful servers and gateways to serve users in regions with high
computation demand. Recently, the notion of Pervasive Edge Com-
puting (PEC) [23] has emerged, aiming to create an ecosystem in
which the computation capability of every peer device at the edge,
e.g., smartphones, tablets, and vehicles, can be brought to bear to
serve users’ computation needs.
Motivation: Current access control enforcement solutions designed
for cloud computing cannot be trivially ported to the distributed,
multi-stakeholder PEC environment. In a PEC ecosystem, relying
on an always-online cloud service for access control is undesirable
for several reasons, such as high latency due to several rounds of di-
rect client-server communication, the Cloud might become a single
point of failure, and cloud server(s) going rogue and undermining
user privacy and/or user data confidentiality. Furthermore, in the
1https://technology.informa.com/607069/video-surveillance-installed-base-report-
2019
Session 5B: PKI and Access Control CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea1405highly dynamic PEC environment with quick nodes turnover, lack
of mutual authentication between the user and edge servers, and de-
layed revocation of rogue servers (particularly with high turnover
rates) is an added challenge. This necessitates re-envisioning access
control mechanisms without involving the Cloud.
Use Cases: We consider two application use cases to motivate the
need for distributed and fine-grained access control for secure ex-
ecution of edge services. The extensive deployment of security,
traffic, and dash cameras motivated crowdsensing applications,
including a vehicle-tracking AMBER Alert system [30, 31] and a
parking spot locating service for dense urban areas [10]. These
applications collect user generated video feed for low latency pro-
cessing by the authorized edge servers, available in the data sources
locale to identify occupied parking spots or vehicles using their li-
cense plates. Such data sharing applications, however, raise privacy
and security concerns over how user generated data is collected,
processed, and utilized. For instance, in the AMBER Alert example,
parents may accept sharing their children’s information with the
authorities but not the larger public community, or a driver in the
region of interest may be willing to share the video feed of her on-
dash camera only with the police department. In another scenario,
the police department might require the location (or the annotated
image) of the alleged kidnapper’s vehicle to only be shared with
active duty officers in order to mitigate the risk of vigilantes.
The second use case is post disaster rescue, in which first re-
sponders and civilian volunteers spontaneously form rescue teams
to collect information such as the video feed from body cameras
and updates from cameras/sensors on disaster victims devices. The
data will be opportunistically shared with the available and au-
thorized edge servers (e.g., vehicles, drones, or base stations) for
processing and critical decision-making–often in this case there
is no centralized cloud available. In this use case, only relevant
information should be shared with each participant. For instance, a
civilian volunteer should not be able to access the private health
information of a victim while a paramedic at the same site should
be able to obtain such information. These use cases elucidate the
demand for distributed and fine-grained access control, enabling
users and the dynamic edge infrastructure to mutually authenti-
cate and authorize each other without relying on an always online
authentication server, which will often be difficult to provision.
Unique Constraints in the PEC Environment: The PEC ecosys-
tem is highly dynamic and is composed of mobile devices, e.g., cars,
smartphones, and PEC servers with high turnover. Providing ser-
vices in such a fast-changing, evolving environment is a challenge.
This will be further compounded by the low-latency and high
bandwidth requirements of the next generation services, e.g., au-
tonomous driving and industrial IoT, where significant amounts of
data need to be transferred to a server quickly, processed rapidly,
and delivered back to a customer, sometimes in mere milliseconds.
This necessitates the need for quick authentication and rapid inter-
changes between the consumer and the servers before the connec-
tion is lost–potentially forever. Further, the personal nature of the
user data, such as images, puts stringent privacy requirements on
it. Providing personal data to an unauthorized or unauthenticated
server for service becomes a high stakes operation and the impact
of data falling in the wrong hands (especially if authentication is
not rigorous) could be significant. The high dynamicity may not
adequately equip the consumers to verify the servers’ access rights
and authenticity in the short time window available for interaction.
These constraints are major motivating challenges.
Overview: We address these motivating challenges by proposing
APECS–a distributed, multi-authority access control framework
for dynamic PEC ecosystems. APECS enables the users and PEC
servers to mutually authenticate and authorize each other via a
federated access control model without relying on a centralized root
of trust. Utilizing multiple trust authorities regulates access to users’
personal data and prevents a malicious authority from breaching
users’ privacy by unilaterally accessing the user’s personal data. To
ensure that users can provide access right proofs and this access can
be verified at the PEC server directly, APECS employs a token-based
authorization scheme (similar to OAuth), which includes a novel
authentication method for verifying token ownership–a feature
not provided in OAuth. In addition, APECS removes the “always-
on” authentication server requirement and allows asynchronous
authentication of PEC servers. Thus, in the highly dynamic and
intermittent edge environment, APECS allows the users to securely
submit their data for processing, without edge server discovery and
with implicit authenticity verification; ensuring that only available
and authorized PEC servers can decipher the data for processing.
Contributions: In summary, the contributions of this paper in-
clude: a) Design of APECS, a distributed mutual access control en-
forcement framework that operates at the edge after bootstrapping
by the Cloud. APECS uses multi-authority attribute based encryp-
tion [3], is agnostic of the underlying network architecture, thus is
portable to future internet architectures. b) Design of APECS PKC
(public key cryptosystem), an alternative APECS implementation
using traditional public key cryptosystems. APECS PKC is suitable
for static networks, in which PEC servers’ availability is known to
the users prior to service requests, allowing the users to establish
secure channels to the desired PEC server. c) APECS has an effi-
cient and quick revocation mechanism for edge entities that does
not need immediate communication with the Cloud, and requires
minimal (not system-wide) re-keying of the remaining entities and
data re-encryption in the system. d) Rigorous security analysis of
APECS using the Universal Composability framework and discus-
sion of enhancements using traditional public key cryptosystems.
e) APECS prototype implementation in the GENI testbed [1] and
performance evaluation with the existing set-up and an IP-based
potential design set-up.
The paper is organized as follows. We discuss the related work in
Section 2. Section 3 includes our models and assumptions. Section 4
presents APECS building blocks and overview with detailed design
in Section 5. Section 6 includes the security analysis of APECS.
We discuss the reference implementation of APECS along with its
evaluation in Section 7 and draw our conclusion in Section 8.
2 RELATED WORK
The majority of access control for services today happens far from
the edge, either on the Cloud or the Content Provider premises.
Recently, a few initiatives have proposed edge computing as a plat-
form for providing security services at the edge [6, 12, 18]. However,
access control enforcement at the network’s edge has received little
attention. Despite some similarities, edge-centric access control
Session 5B: PKI and Access Control CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea1406enforcement requires additional considerations due to its decen-
tralized, dynamic, and multi-stakeholder nature, which limits the
effectiveness of conventional cloud-based solutions. We review the
access control literature in both Cloud and edge ecosystems.
In the literature, attribute-based access control (ABAC), in which
policies are used for granting access rights, has been widely stud-
ied [7, 8, 12, 19, 20, 26, 27, 33]. ABAC schemes can generically be
realized by attribute-based encryption (ABE) [8, 20, 26], which have
proven to be very beneficial in cloud architectures [26] for provid-
ing flexible and fine-grained data sharing frameworks. However,
the use of ABAC for user authentication and authorization can
be costly compared to capability based access control [7, 8, 12–
14, 19, 20, 27, 33]. To alleviate this challenge, approaches have
been proposed for reducing ABE’s computation cost [7, 12, 33].
Xue et al. utilized hash-chains to limit the number of ABE opera-
tions in an information-centric setting [22, 27, 28]. The user’s initial
communication is authenticated using a single ABE operation while
the follow-up requests are authorized by a series of bootstrapped
chained hashes. Xue et al. proposed proof-of-attribute challenges to
prevent Economic Denials of Service (EDoS) [26], in which the re-
ceiver proves the possession of the attributes by solving a challenge
encrypted with those attributes prior to communication.
Capability-based access control (CapBAC) is an alternative ac-
cess control model to ABAC systems. In CapBAC, unforgeable
access tokens are given to subjects to represent subjects’ access
rights–enabling a more distributed and computationally cheap au-
thentication and authorization [11, 24, 33]. In the majority of the
token-based CapBAC implementations, such as OAuth [11] and
Heracles [33], the cloud back-end is assumed to be the sole trusted
authority, responsible for token generation and distribution. In
OAuth, the client in the possession of the access token (referred to
as “bearer token”) can authorize themselves to the resource server
by including the access token in the requests. However, the OAuth’s
bearer token does not include user specific information, allowing
an intercepted token to be used by the attacker. Thus, undermining
its effectiveness. Heracles [33] extended OAuth via a hybrid solu-
tion, in which both bulk operations and single target operations
were accomplished via ID-based tokens and attribute based tokens,
respectively. Despite Heracles’ capability in promoting fine-grained
access control, it remains vulnerable if an unfaithful subject shares
its token. To remedy, FairAccess [19] proposed the utilization of a
shared private blockchain at the edge to provide the accurate ledger
of access tokens, their rights, and their possession.
Despite some initiatives for IoT device access control at the edge,