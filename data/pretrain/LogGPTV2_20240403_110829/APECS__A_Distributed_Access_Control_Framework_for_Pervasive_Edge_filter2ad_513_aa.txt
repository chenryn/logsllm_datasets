# APECS: A Distributed Access Control Framework for Pervasive Edge Computing Services

## Authors
- Sean Dougherty, Saint Louis University, St. Louis, U.S. (PI:EMAIL)
- Reza Tourani, Saint Louis University, St. Louis, U.S. (PI:EMAIL)
- Gaurav Panwar, New Mexico State University, Las Cruces, U.S. (PI:EMAIL)
- Roopa Vishwanathan, New Mexico State University, Las Cruces, U.S. (PI:EMAIL)
- Satyajayant Misra, New Mexico State University, Las Cruces, U.S. (PI:EMAIL)
- Srikathyayani Srikanteswara, Intel Labs, Portland, U.S. (PI:EMAIL)

## Abstract
Edge computing is a new paradigm where applications operate at the network edge, providing low-latency services with enhanced user and data privacy. A desirable goal in edge computing is pervasiveness, enabling any capable and authorized entity to provide desired edge services—pervasive edge computing (PEC). However, efficient access control for users receiving services and edge servers handling user data, without sacrificing performance, remains a challenge. Current solutions, based on "always-on" authentication servers in the cloud, negate the latency benefits of edge services and do not preserve user and data privacy.

In this paper, we present APECS, an advanced access control framework for PEC, which allows legitimate users to utilize any available edge services without needing communication beyond the network edge. The APECS framework leverages multi-authority attribute-based encryption to create a federated authority, delegating authentication and authorization tasks to semi-trusted edge servers. This eliminates the need for an "always-on" authentication server in the cloud. Additionally, APECS prevents unauthorized edge servers from accessing encrypted content. We analyze and prove the security of APECS in the Universal Composability framework and provide experimental results on the GENI testbed to demonstrate the scalability and effectiveness of APECS.

## CCS Concepts
- **Security and Privacy**: Access control, distributed systems security.
- **Networks**: Security protocols.

## Keywords
Distributed access control, authentication, authorization, attribute-based encryption, edge computing.

## Permission Notice
Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for components of this work owned by others than ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. Request permissions from permissions@acm.org.

**CCS '21, November 15–19, 2021, Virtual Event, Republic of Korea**
© 2021 Association for Computing Machinery.
ACM ISBN 978-1-4503-8454-4/21/11...$15.00
https://doi.org/10.1145/3460120.3484804

## ACM Reference Format
Sean Dougherty, Reza Tourani, Gaurav Panwar, Roopa Vishwanathan, Satyajayant Misra, and Srikathyayani Srikanteswara. 2021. APECS: A Distributed Access Control Framework for Pervasive Edge Computing Services. In Proceedings of the 2021 ACM SIGSAC Conference on Computer and Communications Security (CCS '21), November 15–19, 2021, Virtual Event, Republic of Korea. ACM, New York, NY, USA, 16 pages. https://doi.org/10.1145/3460120.3484804

## 1 Introduction
The number of wireless devices and connections is growing rapidly, driven by the increasing number of smartphones and machine-to-machine communications from smart meters, autonomous vehicles, video cameras, and more [5]. For example, real-time video analytics data from Internet of Things (IoT) devices such as surveillance cameras, estimated to exceed 1 billion by the end of 2021 [1], supports various practical applications like traffic control, autonomous driving, and cognitive assistance [25, 31]. The video feed generated by these cameras needs to be processed quickly and in proximity to the user, precluding the transfer of data to the cloud for processing. This is particularly critical for latency-sensitive applications like autonomous driving.

To address this, various edge computing ecosystems have been proposed, including cloudlets, fog computing, and Multi-Access Edge Computing [21], which deploy powerful servers and gateways to serve users in regions with high computation demand. Recently, the concept of Pervasive Edge Computing (PEC) [23] has emerged, aiming to harness the computational capabilities of every peer device at the edge, such as smartphones, tablets, and vehicles, to meet users' computational needs.

### Motivation
Current access control enforcement solutions designed for cloud computing cannot be trivially ported to the distributed, multi-stakeholder PEC environment. Relying on an always-online cloud service for access control in a PEC ecosystem is undesirable due to high latency, the potential for the cloud to become a single point of failure, and the risk of cloud servers compromising user privacy and data confidentiality. Furthermore, in the highly dynamic PEC environment, quick node turnover, lack of mutual authentication between users and edge servers, and delayed revocation of rogue servers add to the challenges. This necessitates re-envisioning access control mechanisms without involving the cloud.

### Use Cases
We consider two application use cases to motivate the need for distributed and fine-grained access control for secure execution of edge services:

1. **Crowdsensing Applications**: Extensive deployment of security, traffic, and dash cameras has motivated crowdsensing applications, such as a vehicle-tracking AMBER Alert system [30, 31] and a parking spot locating service for dense urban areas [10]. These applications collect user-generated video feeds for low-latency processing by authorized edge servers. However, they raise privacy and security concerns over how user-generated data is collected, processed, and utilized. For instance, in the AMBER Alert example, parents may accept sharing their children's information with authorities but not the general public. Similarly, a driver might share her on-dash camera feed only with the police department.

2. **Post-Disaster Rescue**: In this scenario, first responders and civilian volunteers form rescue teams to collect information such as video feeds from body cameras and updates from sensors on disaster victims' devices. The data is opportunistically shared with available and authorized edge servers (e.g., vehicles, drones, or base stations) for processing and critical decision-making. In this case, there is often no centralized cloud available. Only relevant information should be shared with each participant. For example, a civilian volunteer should not access private health information, while a paramedic at the same site should be able to obtain such information.

These use cases highlight the need for distributed and fine-grained access control, enabling users and the dynamic edge infrastructure to mutually authenticate and authorize each other without relying on an always-online authentication server, which is often difficult to provision.

### Unique Constraints in the PEC Environment
The PEC ecosystem is highly dynamic, composed of mobile devices like cars, smartphones, and PEC servers with high turnover. Providing services in such a fast-changing environment is challenging, especially with the low-latency and high-bandwidth requirements of next-generation services like autonomous driving and industrial IoT. Significant amounts of data need to be transferred, processed, and delivered back to the customer in mere milliseconds. This necessitates quick authentication and rapid interchanges between consumers and servers before the connection is lost. The personal nature of user data, such as images, imposes stringent privacy requirements. Providing personal data to an unauthorized or unauthenticated server for service becomes a high-stakes operation, and the impact of data falling into the wrong hands can be significant. The high dynamicity may not adequately equip consumers to verify servers' access rights and authenticity in the short interaction window.

### Overview
We address these challenges by proposing APECS, a distributed, multi-authority access control framework for dynamic PEC ecosystems. APECS enables users and PEC servers to mutually authenticate and authorize each other via a federated access control model without relying on a centralized root of trust. Utilizing multiple trust authorities regulates access to users' personal data and prevents a malicious authority from breaching users' privacy. APECS employs a token-based authorization scheme (similar to OAuth) with a novel authentication method for verifying token ownership. This removes the "always-on" authentication server requirement and allows asynchronous authentication of PEC servers. In the highly dynamic and intermittent edge environment, APECS allows users to securely submit their data for processing, ensuring that only available and authorized PEC servers can decipher the data.

### Contributions
- **Design of APECS**: A distributed mutual access control enforcement framework that operates at the edge after bootstrapping by the cloud. APECS uses multi-authority attribute-based encryption [3] and is agnostic of the underlying network architecture, making it portable to future internet architectures.
- **Design of APECS PKC**: An alternative APECS implementation using traditional public key cryptosystems, suitable for static networks where PEC servers' availability is known to users, allowing secure channels to be established.
- **Efficient Revocation Mechanism**: APECS has an efficient and quick revocation mechanism for edge entities that does not require immediate communication with the cloud and requires minimal re-keying of remaining entities and data re-encryption.
- **Security Analysis**: Rigorous security analysis of APECS using the Universal Composability framework and discussion of enhancements using traditional public key cryptosystems.
- **Prototype Implementation and Evaluation**: APECS prototype implementation in the GENI testbed [1] and performance evaluation with the existing setup and an IP-based potential design setup.

The paper is organized as follows: Section 2 discusses related work. Section 3 includes our models and assumptions. Section 4 presents APECS building blocks and overview, with detailed design in Section 5. Section 6 includes the security analysis of APECS. Section 7 discusses the reference implementation of APECS along with its evaluation, and Section 8 draws our conclusions.

## 2 Related Work
Most access control for services today happens far from the edge, either on the cloud or the content provider's premises. Recently, some initiatives have proposed edge computing as a platform for providing security services at the edge [6, 12, 18]. However, access control enforcement at the network's edge has received little attention. Despite some similarities, edge-centric access control enforcement requires additional considerations due to its decentralized, dynamic, and multi-stakeholder nature, which limits the effectiveness of conventional cloud-based solutions. We review the access control literature in both cloud and edge ecosystems.

In the literature, attribute-based access control (ABAC), where policies are used for granting access rights, has been widely studied [7, 8, 12, 19, 20, 26, 27, 33]. ABAC schemes can be realized by attribute-based encryption (ABE) [8, 20, 26], which has proven beneficial in cloud architectures for providing flexible and fine-grained data sharing frameworks. However, the use of ABAC for user authentication and authorization can be costly compared to capability-based access control [7, 8, 12–14, 19, 20, 27, 33]. To alleviate this, approaches have been proposed to reduce ABE's computation cost [7, 12, 33]. Xue et al. utilized hash-chains to limit the number of ABE operations in an information-centric setting [22, 27, 28]. The user's initial communication is authenticated using a single ABE operation, while follow-up requests are authorized by a series of bootstrapped chained hashes. Xue et al. also proposed proof-of-attribute challenges to prevent Economic Denials of Service (EDoS) [26], where the receiver proves possession of attributes by solving a challenge encrypted with those attributes before communication.

Capability-based access control (CapBAC) is an alternative access control model to ABAC systems. In CapBAC, unforgeable access tokens are given to subjects to represent their access rights, enabling more distributed and computationally cheap authentication and authorization [11, 24, 33]. In most token-based CapBAC implementations, such as OAuth [11] and Heracles [33], the cloud backend is assumed to be the sole trusted authority responsible for token generation and distribution. In OAuth, the client in possession of the access token (referred to as a "bearer token") can authorize themselves to the resource server by including the access token in requests. However, the OAuth bearer token does not include user-specific information, allowing an intercepted token to be used by an attacker, undermining its effectiveness. Heracles [33] extended OAuth via a hybrid solution, using ID-based tokens for bulk operations and attribute-based tokens for single target operations. Despite Heracles' capability in promoting fine-grained access control, it remains vulnerable if an unfaithful subject shares its token. FairAccess [19] proposed the use of a shared private blockchain at the edge to provide an accurate ledger of access tokens, their rights, and their possession.

Despite some initiatives for IoT device access control at the edge, the unique constraints and requirements of PEC environments necessitate a more robust and scalable solution, which APECS aims to provide.