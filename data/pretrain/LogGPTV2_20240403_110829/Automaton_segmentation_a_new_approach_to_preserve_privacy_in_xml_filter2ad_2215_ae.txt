# System Scalability and Performance Analysis

## 7.1 Query Processing and Network Latency

To evaluate the system's performance, we conducted experiments with a set of 200 synthetic access control rules (ACRs) and 1,000 synthetic XPath queries. The ACRs were segmented into the finest granularity, where each XPath step is partitioned as one segment and kept at one coordinator, to maximize privacy preservation.

### Number of Hops
When an accepted or rewritten sub-query \( Q_i \) (where \( i = 1, \ldots, n \)) is processed by the rule \( R_i \), the number of hops it experiences is determined by the number of segments in \( R_i \). In our experiment, the average number of hops (NHOP) was 5.7, with the maximum number of hops for any query being 8.

### Total Forward End-to-End Query Processing Time
The total forward end-to-end query processing time \( T_{\text{forward}} \) can be calculated as:
\[ T_{\text{forward}} \approx 1.9 \times 5.7 + 100 \times (5.7 + 1) \approx 681 \text{ ms} \]

It is evident that network latency \( T_N \times (NHOP + 1) \) dominates the total forward end-to-end query processing time, as the computation time \( T_C \) is negligible compared to \( T_N \). Since \( T_N \) remains relatively constant, NHOP becomes the primary factor affecting the end-to-end query processing time. This holds true for other information brokering systems, as network latency is unavoidable regardless of the routing scheme used. 

In conclusion, the proposed PPIB approach achieves privacy-preserving query brokering and access control with limited computational overhead.

## 7.2 System Scalability

We evaluated the scalability of the PPIB system against the complexity of ACRs, the number of user queries, and data size (number of data objects and data servers).

### Complexity of XML Schema and ACRs
When the segmentation scheme is fixed, the demand for coordinators is linearly proportional to the number of ACR segments. As shown in Figure 7, the increase in the number of required coordinators is linear or even better. This is because similar ACRs with the same prefix may share XPath steps, reducing the number of coordinators. Additionally, different ACR segments (or logical coordinators) may reside at the same physical site, further reducing the actual demand for physical sites.

### Number of Queries
Given \( n \) queries submitted to the system in a unit time, we measure the system load by the total number of query segments being processed. If a query is accepted as multiple sub-queries, all sub-queries contribute to the system load. For a query rejected after \( i \) segments, the processed \( i \) segments are counted.

### Data Size
As the volume of data increases (e.g., adding more data items to an online auction database), the number of indexing rules also increases. This results in more indexing entries at leaf-coordinators. However, in PPIB, query indexing is implemented using hash tables, which are scalable. Thus, the system remains scalable as the data size increases.

## 8. Related Work

Research areas such as information integration, Web search, peer-to-peer file sharing systems, and publish-subscribe systems provide partial solutions to large-scale data sharing.

### Information Integration
Information integration aims to provide an integrated view over large numbers of heterogeneous data sources by exploiting semantic relationships between schemas [7, 16, 9]. While PPIB facilitates this, it is orthogonal to information integration technology.

### Web Search
Web search focuses on locating data sources with high precision and coverage [26, 18]. However, it only supports keyword queries with limited expressiveness.

### Peer-to-Peer Systems
Peer-to-peer systems, designed to share files and datasets, use distributed hash table technology [25, 8] to locate replicas based on keyword queries. Although these technologies have been extended to support range queries [21], they still lack the expressiveness needed for our purposes. Additionally, P2P file-sharing systems may not provide a complete set of answers to a request, whereas we need to locate all relevant data.

### Publish-Subscribe Systems
XML publish-subscribe systems [3, 6] are closely related to our research. While we locate relevant data sources for a given query and route the query to these sources, pub/sub systems locate relevant consumers for a given document and route the document to them. However, due to this duality, we have different concerns: they focus on efficiently delivering the same piece of information to many consumers, while we route large volumes of small-size queries to fewer sites. Therefore, the multicast solution in pub/sub systems does not scale in our environment, and we need to develop new mechanisms.

### XML Overlay Architecture
One approach is to build an XML overlay architecture that supports expressive query processing and security checking on top of normal IP networks. Specialized data structures are maintained on nodes of the overlay networks to route path queries. For example, [24] describes a robust mesh for effectively routing XML packets, and [12] proposes a decentralized architecture for ad hoc XPath query routing across XML databases. [10] studies content-based routing of path queries in peer-to-peer systems. These approaches focus on distributed query routing, while we integrate query routing and security checking to preserve privacy.

### Privacy and Security
Several approaches have been designed to preserve anonymity in communication, such as Crowds [19] and Chaum Mix [27]. However, our PPIB approach integrates security checking en route, addressing more privacy concerns beyond anonymity.

For security checks, many researches have been proposed on distributed access control [28]. Earlier approaches implement access control mechanisms at the nodes of XML trees [4, 17], while view-based access control approaches create and maintain separate views for each user [20, 29]. Our PPIB approach adopts a recently proposed NFA-based query rewriting access control scheme [15, 13] and extends it to a decentralized manner, offering better performance and compatibility with off-the-shelf XML databases.

## 9. Conclusion and Future Work

Existing information brokering systems often overlook the privacy of users, data, and metadata during the design stage, leading to various vulnerabilities. In this paper, we propose PPIB, a new approach to preserve privacy in XML information brokering. Through an innovative automaton segmentation scheme, in-network access control, and query segment encryption, PPIB integrates security enforcement and query forwarding while providing comprehensive privacy protection. Our analysis shows that PPIB is highly resistant to privacy attacks, and it is both efficient and scalable.

### Future Research Directions
1. **Site Distribution and Load Balancing**: Currently, site distribution and load balancing in PPIB are conducted in an ad-hoc manner. We plan to design an automatic scheme that dynamically distributes sites, considering factors such as workload, trust level, and privacy conflicts.
2. **Quantifying Privacy Protection**: We aim to quantify the level of privacy protection achieved by PPIB.
3. **Minimizing Administrator Participation**: We plan to minimize (or eliminate) the participation of the administrator node, making PPIB self-reconfigurable.

## Acknowledgements

The ideas in this paper were refined through discussions with Ting Yu, Wang-Chien Lee, Prasenjit Mitra, and Michael Rabinovich. The anonymous reviewers provided valuable feedback. This research was supported in part by NSF CCR-0233324 and NSF/DHS 0335241.

## 10. References

[1] Internet traffic report. http://www.internettrafficeport.com.
[2] R. Agrawal, A. V. Evfimievski, and R. Srikant. Information sharing across private databases. In SIGMOD, pages 86–97, 2003.
[3] A. Carzaniga, M. J. Rutherford, and A. L. Wolf. A routing scheme for content-based networking. In Proc. of INFOCOM, 2004.
[4] S. Cho, S. Amer-Yahia, L. V. S. Lakshmanan, and D. Srivastava. Optimizing the secure evaluation of twig queries. In VLDB, pages 490–501, China, 2002.
[5] E. Damiani, S. Vimercati, S. Paraboschi, and P. Samarati. A fine-grained access control system for XML documents. ACM Trans. Inf. Syst. Secur., 5(2):169–202, 2002.
[6] Y. Diao, S. Rizvi, and M. J. Franklin. Towards an Internet-scale XML dissemination service. In VLDB, Toronto, 2004.
[7] M. Genesereth, A. Keller, and O. Duschka. Informaster: An information integration system. In SIGMOD, Tucson, 1997.
[8] R. Huebsch, B. Chun, J. Hellerstein, B. Loo, P. Maniatis, T. Roscoe, S. Shenker, I. Stoica, and A. Yumerefendi. The architecture of pier: an internet-scale query processor. In CIDR, pages 28–43, 2005.
[9] J. Kang and J. F. Naughton. On schema matching with opaque column names and data values. In SIGMOD, pages 205–216, 2003.
[10] G. Koloniari and E. Pitoura. Content-based routing of path queries in peer-to-peer systems. In EDBT, 2004.
[11] G. Koloniari and E. Pitoura. Peer-to-peer management of XML data: issues and research challenges. SIGMOD Rec., 34(2):6–17, 2005.
[12] N. Koudas, M. Rabinovich, D. Srivastava, and T. Yu. Routing XML queries. In IEEE ICDE, page 844, 2004.
[13] F. Li, B. Luo, P. Liu, D. Lee, P. Mitra, W. Lee, and C. Chu. In-broker access control: Towards efficient end-to-end performance of information brokerage systems. In Proc. IEEE SUTC, 2006.
[14] H. Lu, J. X. Yu, G. Wang, S. Zheng, H. Jiang, G. Yu, and A. Zhou. What makes the differences: benchmarking XML database implementations. ACM Trans. Inter. Tech., 5(1):154–194, 2005.
[15] B. Luo, D. Lee, W.-C. Lee, and P. Liu. QFilter: Fine-grained run-time XML access control via NFA-based query rewriting. In ACM CIKM, Washington D.C., USA, nov 2004.
[16] I. Manolescu, D. Florescu, and D. Kossmann. Answering XML queries on heterogeneous data sources. In VLDB, pages 241–250, 2001.
[17] M. Murata, A. Tozawa, and M. Kudo. XML access control using static analysis. In ACM CCS, Washington D.C., 2003.
[18] S. Park, A. Khrabrov, D. M. Pennock, S. Lawrence, C. L. Giles, and L. H. Ungar. Static and dynamic analysis of the Internet’s susceptibility to faults and attacks. In IEEE Infocom, 2003.
[19] M. K. Reiter and A. D. Rubin. Crowds: anonymity for Web transactions. ACM Transactions on Information and System Security, 1(1):66–92, 1998.
[20] S. Rizvi, A. Mendelzon, S. Sudarshan, and P. Roy. Extending query rewriting techniques for fine-grained access control. In SIGMOD, pages 551–562, Paris, France, 2004.
[21] O. Sahin, A. Gupta, D. Agrawal, and A. E. Abbadi. A peer-to-peer framework for caching range queries. In Proc. of the 20th Int. Conf. on Data Engineering, 2004.
[22] R. S. Sandhu, E. J. Coyne, H. L. Feinstein, and C. E. Youman. Role-based access control models. IEEE Computer, 29(2):38–47, 1996.
[23] A. R. Schmidt, F. Waas, M. L. Kersten, D. Florescu, I. Manolescu, M. J. Carey, and R. Busse. “The XML Benchmark Project”. Technical Report INS-R0103, CWI, April 2001.
[24] A. C. Snoeren, K. Conley, and D. K. Gifford. Mesh-based content routing using XML. In Symposium on Operating Systems Principles, pages 160–173, 2001.
[25] I. Stoica, R. Morris, D. Liben-Nowell, D. Karger, M. Kaashoek, F. Dabek, and H. Balakrishnan. Chord: A scalable peer-to-peer lookup protocol for internet applications. In IEEE/ACM Trans. Networking, volume 11 of 1, 2003.
[26] A. Sugiura and O. Etzioni. Query Routing for Web Search Engines: Architecture and Experiments. Computer Networks, 33(1), 2000.
[27] P. F. Syverson, D. M. Goldschlag, and M. G. Reed. Anonymous connections and onion routing. In IEEE Symposium on Security and Privacy, pages 44–54, Oakland, California, 4–7 1997.
[28] W. Tolone, G.-J. Ahn, T. Pai, and S.-P. Hong. Access control in collaborative systems. ACM Comput. Surv., 37(1), 2005.
[29] T. Yu, D. Srivastava, L. V. S. Lakshmanan, and H. V. Jagadish. Compressed accessibility map: Efficient access control for XML. In VLDB, pages 478–489, China, 2002.