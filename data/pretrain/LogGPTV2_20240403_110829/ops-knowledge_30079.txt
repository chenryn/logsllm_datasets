User: 如何在Ubuntu服务器上安装Docker并部署一个容器化应用程序？
Assistant: 以下是在Ubuntu服务器上安装Docker并部署一个容器化应用程序的步骤：

1. 更新apt-get

```bash
sudo apt-get update
```

2. 安装依赖项

```bash
sudo apt-get install apt-transport-https ca-certificates curl software-properties-common
```

3. 添加Docker仓库GPG密钥

```bash
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
```

4. 添加Docker仓库

在Ubuntu 18.04上：

```bash
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable"
```

在Ubuntu 20.04上：

```bash
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
```

5. 更新apt-get

```bash
sudo apt-get update
```

6. 安装Docker

```bash
sudo apt-get install docker-ce
```

7. 验证Docker是否正确安装

```bash
sudo docker run hello-world
```

8. 部署容器化应用程序

例如，我们可以使用Docker Compose部署一个简单的Node.js应用程序。首先，我们需要创建一个docker-compose.yaml文件：

```yaml
version: "3"
services:
  web:
    build: .
    ports:
      - "3000:3000"
```

接下来，我们需要创建一个包含我们Node.js应用程序的Docker镜像。我们可以在我们的应用程序根目录中创建一个Dockerfile：

```dockerfile
FROM node:8
WORKDIR /app
COPY package*.json ./
RUN npm install
COPY . .
EXPOSE 3000 
CMD [ "npm", "start" ]
```

在我们的应用程序根目录中运行以下命令来使用Docker构建镜像：

```bash
sudo docker build -t my-node-app .
```

最后，在应用程序的根目录中运行以下命令来使用Docker Compose部署应用程序：

```bash
sudo docker-compose up -d
```

现在，我们的容器化应用程序应该已经在Ubuntu服务器上成功运行了。