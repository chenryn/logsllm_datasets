151	
201	
251	
301	
351	
TPM	
  Pcks	
Measurement	
  number	
46	
© 2012 The MITRE Corporation. All rights reserved. 
TPM	
  Implementa2on	
  –	
  Single	
  Host	
780	
782	
784	
786	
788	
790	
792	
794	
796	
798	
800	
1	
51	
101	
151	
201	
251	
301	
351	
TPM	
  Pcks	
Measurement	
  number	
Why	
  did	
  the	
  median	
  go	
  down	
by	
  1	
  aPer	
  the	
  aGack?	
47	
© 2012 The MITRE Corporation. All rights reserved. 
TPM	
  Implementa2on	
  –	
  32	
  Hosts	
780	
800	
820	
840	
860	
880	
1	
51	
101	
151	
201	
251	
301	
351	
TPM	
  Pcks	
Measurement	
  number	
48	
© 2012 The MITRE Corporation. All rights reserved. 
TOCTOU	
AGacker	
  moves	
  out	
  of	
  the	
  way,	
  just	
  in	
  2me	
49	
© 2012 The MITRE Corporation. All rights reserved. 
Condi2ons	
  for	
  TOCTOU	
•  1)	
  The	
  aGacker	
  must	
  know	
  when	
  the	
measurement	
  is	
  about	
  to	
  start.	
•  2)	
  The	
  aGacker	
  must	
  have	
  some	
  un-­‐measured	
loca2on	
  to	
  hide	
  in	
  for	
  the	
  dura2on	
  of	
  the	
measurement.	
•  3)	
  The	
  aGacker	
  must	
  be	
  able	
  to	
  reinstall	
  as	
soon	
  as	
  possible	
  aPer	
  the	
  measurement	
  has	
ﬁnished.	
50	
© 2012 The MITRE Corporation. All rights reserved. 
Security	
  SoPware	
is	
  OK.	
Security	
  SoPware	
Malicious	
  SoPware	
Checkmate	
I…am…O…K…	
51	
© 2012 The MITRE Corporation. All rights reserved. 
Security	
  SoPware	
Malicious	
  SoPware	
Checkmate	
Oh,	
  you're	
  about	
  to	
do	
  a	
  self-­‐check?	
  Let	
me	
  just…	
*erase*	
*erase*	
*erase*	
52	
*erase*	
*erase*	
*erase*	
© 2012 The MITRE Corporation. All rights reserved. 
Security	
  SoPware	
is	
  OK.	
Security	
  SoPware	
Malicious	
  SoPware	
Checkmate	
*scan*	
*scan*	
*scan*	
I'm	
  OK	
53	
*scan*	
*scan*	
*scan*	
© 2012 The MITRE Corporation. All rights reserved. 
Security	
  SoPware	
Malicious	
  SoPware	
Checkmate	
Done?	
  Good.	
  Let	
  me	
just…	
*scribble*	
*scribble*	
*scribble*	
54	
*scribble*	
*scribble*	
*scribble*	
© 2012 The MITRE Corporation. All rights reserved. 
What	
  regal	
  clothes	
  you	
  have,	
  Emperor	
•  Most	
  soPware's	
  TOCTOU	
  defense	
  is	
  just	
  assuming	
  it	
  away.	
–  Violate	
  our	
  assump2on	
  that	
  the	
  aGacker	
  can	
  get	
  to	
  the	
  same	
  level	
as	
  the	
  security	
  soPware.	
  and	
  then	
  for	
  instance	
  pull	
  the	
measurement	
  agent	
  out	
  to	
  a	
  VMM	
  for	
  instance.	
  Then	
  maybe	
  the	
aGacker	
  can't	
  see	
  a	
  measurement	
  is	
  about	
  to	
  start.	
  If	
  the	
  aGacker	
can	
  get	
  to	
  the	
  VMM,	
  same	
  problem.	
–  In	
  the	
  phone/embedded	
  systems	
  realm	
  (FatSkunk/SWATT)	
  they	
have	
  tried	
  to	
  measure	
  the	
  full	
  contents	
  of	
  RAM	
  to	
  implicitly	
counter	
  TOCTOU	
  condi2on	
  2.	
  But	
  that's	
  not	
  really	
  prac2cal	
  for	
  PCs	
due	
  to	
  the	
  amount	
  of	
  2me	
  necessary,	
  and	
  the	
  "measure	
  all"	
  is	
  of	
dubious	
  u2lity.	
  (How	
  do	
  you	
  validate	
  that	
  a	
  chunk	
  of	
  heap	
containing	
  code	
  of	
  func2on	
  pointers	
  is	
  the	
  "correct"	
  value?)	
•  Control	
  ﬂow	
  integrity	
  viola2on	
  serves	
  as	
  an	
  enabler	
  for	
TOCTOU	
  aGacks	
55	
© 2012 The MITRE Corporation. All rights reserved. 
Ques2ons?	
•  {xkovah,ckallenberg}	
  at	
  mitre.org	
•  hGp://code.google.com/p/2ming-­‐aGesta2on	
•  P.s.	
  hGp://OpenSecurityTraining.info	
–  x86	
  assembly/architecture	
  &	
  rootkits	
  classes	
  (Xeno)	
–  Exploits	
  classes	
  (Corey)	
–  TPM	
  class	
  (Ariel)	
–  VT-­‐x	
  class	
  (David)	
–  Intro	
  RE/Malware	
  Sta2c	
  Analysis	
  classes	
  (MaG	
  &	
  Frank)	
–  And	
  many	
  others	
56	
© 2012 The MITRE Corporation. All rights reserved. 
Backup	
  slides	
57	
© 2012 The MITRE Corporation. All rights reserved. 
Where	
  else	
  has	
  this	
  been	
  used?	
•  Embedded	
  systems	
  (A.	
  Seshadri,	
  A.	
  Perrig,	
  L.	
  van	
  Doorn,	
  and	
  P.	
  Khosla.	
  SWATT:	
  SoPware-­‐
based	
  aGesta2on	
  for	
  embedded	
  devices)	
  &	
  wireless	
  sensors	
  (M.	
  Shaneck,	
  K.	
  Mahadevan,	
V.	
  Kher,	
  and	
  Y.	
  Kim.	
  Remote	
  soPware-­‐based	
  aGesta2on	
  for	
  wireless	
  sensors,	
  Y.	
  Choi,	
  J.	
  Kang,	
  and	
  D.	
  Nyang.	
Proac2ve	
  code	
  veriﬁca2on	
  protocol	
  in	
  wireless	
  sensor	
  network.)	
•  SCADA	
  (A.	
  Shah,	
  A.	
  Perrig,	
  and	
  B.	
  Sinopoli.	
  Mechanisms	
  to	
  provide	
  integrity	
  in	
  SCADA	
  and	
  PCS	
  devices)	
•  Keyboards	
  to	
  counter	
  BlackHat	
  talk!(Y.	
  Li,	
  J.	
  M.	
  McCune,	
  and	
  A.	
Perrig.	
  SBAP:	
  SoPware-­‐Based	
  AGesta2on	
  for	
  Peripherals.)	
•  Android	
  Phones	
  (M.	
  Jakobsson	
  and	
  K.-­‐A.	
  Johansson.	
  Prac2cal	
  and	
  secure	
  soPware-­‐based	
aGesta2on.)	
58	
© 2012 The MITRE Corporation. All rights reserved. 
Future	
  Work	
(Stop	
  trying	
  to	
  hit	
  me,	
  and	
  hit	
  me!)	
•  Use	
  analysis-­‐2ming-­‐constrained	
  control	
  ﬂow,	
  e.g.	
TEAS	
  by	
  Garay	
  &	
  Huelsbergen,	
  to	
  combat	
TOCTOU	
  condi2on	
  1	
•  Use	
  mul2ple	
  processors	
  in	
  parallel	
  to	
  combat	
TOCTOU	
  condi2on	
  3	
Processor	
  1	
Processor	
  2	
…	
Processor	
  n	
Time	
Self-­‐check	
  1	
Self-­‐check	
  2	
Self-­‐check	
  n	
•  Inves2gate	
  2ming-­‐based	
  aGesta2on	
  lower	
  level	
  in	
  the	
system	
  (e.g.	
  BIOS	
  &	
  SMM)	
59	
© 2012 The MITRE Corporation. All rights reserved. 
Who	
  we	
  would	
  like	
  to	
  hear	
  from	
•  All	
  of	
  you	
  –	
  How	
  can	
  we	
  build	
  beGer	
  aGacks	
against	
  our	
  PoC	
  implementa2on?	
  How	
  can	
  we	
combat	
  TOCTOU	
  in	
  a	
  more	
  generic	
  way?	
•  Intel/AMD	
  –	
  How	
  can	
  we	
  further	
  op2mize	
  our	
assembly?	
•  MicrosoP	
  –	
  Is	
  there	
  anything	
  we	
  should	
  be	
doing	
  with	
  our	
  NDIS	
  driver	
  to	
  op2mize	
  it?	
Could	
  you	
  using	
  2ming-­‐based	
  aGesta2on	
  to	
detect	
  PatchGuard	
  being	
  disabled?	
60	
© 2012 The MITRE Corporation. All rights reserved. 
Proxy	
  AGacks	
Server	
Compromised	
Client	
Measurement	
  Type:	
  FOO,	
Nonce	
  =	
  0xf005ba11	
Time	
Δt	
Faster	
  Client	
Measurement	
  Type:	
  FOO,	
Nonce	
  =	
  0xf005ba11	
Self-­‐Check	
(Nonce	
  =	
  0xf005ba11)	
Self-­‐Checksum,	
Nonce	
  =	
  0xf005ba11	
Self-­‐Checksum,	
Nonce	
  =	
  0xf005ba11	
61	
© 2012 The MITRE Corporation. All rights reserved. 
TPM	
  Timing	
  Implementa2on	
  Proxy	
  AGack	
Server	
Slow	
  Client	
TPM	
  Tickstamp	
Nonce	
  =	
  0xf005ba11	
Signed	
  Tickstamp	
  1	
  &	
  2	
Self-­‐Checksum	
Nonce	
  =	
  0xf005ba11	
TPM	
Request	
Tickstamp(0xf005ba11)	
Signed	
  Tickstamp	
  1	
Request	
  Tickstamp(checksum[0])	
Signed	
  Tickstamp	
  2	
Time	
Δt	
Request	
  Self-­‐Check	
  (nonce	
  =	
  signature)	
Fast	
  Client	
Self-­‐Check	
(nonce	
  =	
signature)	
Self-­‐Checksum	
62