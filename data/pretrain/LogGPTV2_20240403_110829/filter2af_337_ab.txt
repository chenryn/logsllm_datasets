memdump -p 2012 -D ./outout  
得到2012.dmp  
TrueCrypt进行加密,采用Elcomsoft Forensic Disk Decryptor软件进行解密。  
暴破出加密的key:
    BEGIN KEYS SEARCH
    Progress: 100% [   89  /    89 MB]
    END SEARCHING
    Search result:
    Algorithm:'TrueCrypt' Volume Master Keys
    Key data (hex): 030000006daa0cef6be318bd75080ec053287f74bcacad0ed9636a058388048263c1799333ab2b30fc0cc872f31bad043be78119ff4fd2960fc6203c70697059544326930000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001e1c11ec5cfcd0921a21fb083ba9b7c5f6ac12518526001fad6bfafa114bbd6c5dddbc41923571d685d95a968bed6693541cc4d95831745aaa49b842612ce32400000000000002000000000000003c0100000000
然后挂载到本地磁盘，得到flag  
# 木马查杀与分析
常见的：webshell与exe
## WebShell查杀
D盾  
在线WebShell查杀:  
## EXE木马
杀软病毒查杀&虚拟机断网分析（监控进程，监控网络，行为分析）
微步：  
QAX：  
VT：  
大圣云沙箱：  
# 应急响应
应急响应包括前面的日志分析等内容,并补充一些常见的场景
## 进程分析
## Linux
### Gscan
    1、主机信息获取
    2、系统初始化alias检查
    3、文件类安全扫描
      3.1、系统重要文件完整行扫描
      3.2、系统可执行文件安全扫描
      3.3、临时目录文件安全扫描
      3.4、用户目录文件扫描
      3.5、可疑隐藏文件扫描
    4、各用户历史操作类
      4.1、境外ip操作类
      4.2、反弹shell类
    5、进程类安全检测
      5.1、CUP和内存使用异常进程排查
      5.2、隐藏进程安全扫描
      5.3、反弹shell类进程扫描
      5.4、恶意进程信息安全扫描
      5.5、进程对应可执行文件安全扫描
    6、网络类安全检测
      6.1、境外IP链接扫描
      6.3、恶意特征链接扫描
      6.4、网卡混杂模式检测
    7、后门类检测
      7.1、LD_PRELOAD后门检测
      7.2、LD_AOUT_PRELOAD后门检测
      7.3、LD_ELF_PRELOAD后门检测
      7.4、LD_LIBRARY_PATH后门检测
      7.5、ld.so.preload后门检测
      7.6、PROMPT_COMMAND后门检测
      7.7、Cron后门检测
      7.8、Alias后门
      7.9、SSH 后门检测
      7.10、SSH wrapper 后门检测
      7.11、inetd.conf 后门检测
      7.12、xinetd.conf 后门检测
      7.13、setUID 后门检测
      7.14、8种系统启动项后门检测
    8、账户类安全排查
      8.1、root权限账户检测
      8.2、空口令账户检测
      8.3、sudoers文件用户权限检测
      8.4、查看各账户下登录公钥
      8.5、账户密码文件权限检测
    9、日志类安全分析
      9.1、secure登陆日志
      9.2、wtmp登陆日志
      9.3、utmp登陆日志
      9.4、lastlog登陆日志
    10、安全配置类分析
      10.1、DNS配置检测
      10.2、Iptables防火墙配置检测
      10.3、hosts配置检测
    11、Rootkit分析
      11.1、检查已知rootkit文件类特征
      11.2、检查已知rootkit LKM类特征
      11.3、检查已知恶意软件类特征检测
    12.WebShell类文件扫描
      12.1、WebShell类文件扫描
### 文件排查
最近使用文件
  * find / -ctime -2
### 登录排查
  * /etc/shadow 密码登陆相关信息
  * uptime 查看用户登陆时间
  * /etc/sudoers sudo用户列表
  * 弱口令排查
### 进程排查
  * w 命令，查看用户及其进程
  * 分析开机自启程序/脚本
    * /etc/init.d
    * ~/.bashrc
  * 查看计划或定时任务  
crontab -l
  * netstat -an / lsof 查看进程端口占用
## Windows
### 文件排查
最近使用的文件：
    C:\Documents and Settings\Administrator\Recent
    C:\Documents and Settings\Default User\Recent
    %UserProfile%\Recent
### 登录排查
  * 弱口令排查
  * lusrmgr.msc 查看账户变化
  * net user 列出当前登录账户
  * wmic UserAccount get 列出当前系统所有账户
### 进程排查
  * netstat -ano 查看是否打开了可疑端口
  * tasklist 查看是否有可疑进程
  * 开机启动项分析
    * (ProfilePath)\Start Menu\Programs\Startup 启动项
    * msconfig 启动选项卡
    * gpedit.msc 组策略编辑器
  * 定时任务分析
    * C:\Windows\System32\Tasks\
    * C:\Windows\SysWOW64\Tasks\
    * C:\Windows\tasks\
    * schtasks
    * taskschd.msc
    * compmgmt.msc
  * 已经启动的服务：services.msc
# 漏洞修复
当然实际环境中，漏洞修复要结合业务，来决定如何修复，因此下面都只是给出单个漏洞场景的修复方式。
## 信息泄露漏洞
### Nginx目录遍历漏洞
修改nginx配置文件，autoindex=off;  
### IIS 目录遍历漏洞
在IIS的网站属性中，勾去“目录浏览”选项，重启IIS。
### Apache 目录遍历漏洞
打开Apache配置文件httpd.conf，查找“Options Indexes FollowSymLinks”，修改为“ Options
-Indexes”(减号表示取消，保存退出，重启Apache。
### 敏感文件泄露
svn\git\zip\rar等
删除
## SSRF
  * 过滤返回信息，验证远程服务器对请求的响应是比较容易的方法。如果web应用是去获取某一种类型的文件。那么在把返回结果展示给用户之前先验证返回的信息是否符合标准。统一错误信息，避免用户可以根据错误信息来判断远端服务器的端口状态。
  * 限制请求的端口为http常用的端口，比如，80,443,8080,8090。
  * 黑名单内网ip。避免应用被用来获取获取内网数据，攻击内网。
  * 禁用不需要的协议。仅仅允许http和https请求。可以防止类似于file:///,gopher://,ftp://，dict://等引起的问题。
## 注入漏洞
SQL注入、命令注入、模版注入等注入漏洞
  * 过滤注入漏洞所需要的关键字，前提是不能影响正常的业务功能。
  * 采用预编译的方式进行SQL操作
  * 设置命令执行白名单
  * 严格编写正则
  * 升级存在漏洞的版本
## XSS
  * 验证所有输入数据，有效检测攻击；
  * 对所有输出数据进行适当的编码，以防止任何已成功注入的脚本在浏览器执行；
  * 限制输入长度
## CSRF
  * 通过referer判断页面来源进行CSRF防护，该方式无法防止站内CSRF攻击及referer字段伪造。
  * 重要功能点使用动态验证码进行CSRF防护。
  * 通过token方式进行CSRF防护：（CSRF-Token）
## 文件上传漏洞
  * 文件名随机重命名、目录随机
  * 上传到静态不解析目录
  * 文件上传白名单
  * 设置单独的文件服务器
## 文件包含漏洞
  * PHP:配置php.ini关闭远程文件包含功能(allow_url_include = Off)
  * 严格检查变量是否已经初始化
  * 严格编写正则（禁止../等特征字符串）
## Shiro、Weblogic、Fastjson等组件漏洞
  * Shiro：升级到最新安全版本，修改默认key
  * Struts2：升级到最新安全版本
  * Tomcat：修改管理后台弱口令，避免被部署WAR包GetShell
  * Weblogic：及时打补丁
  * Fastjson：开启safeMode，升级到安全版本  
A.在代码中配置  
ParserConfig.getGlobalInstance().setSafeMode(true);  
B.加上JVM启动参数  
-D fastjson.parser.safeMode=true  
如果有多个包名前缀，用逗号隔开  
C.通过fastjson.properties文件配置。  
通过类路径的fastjson.properties文件来配置，配置方式如下：  
fastjson.parser.safeMode=true
fastjson在1.2.68及之后的版本中引入了safeMode，配置safeMode后，无论白名单和黑名单，都不支持autoType，可一定程度上缓解反序列化Gadgets类变种攻击（关闭autoType注意评估对业务的影响）
# 安全配置与加固
## 端口安全
  * 对外不开放高危端口，不启用无用的端口，只开放80、443、8080、8090等常规端口。
  * 如有需要ssh，ftp，mysql等数据库端口，需要排查弱口令后再对外外放，并且定期修改密码
  * 检查是否存在未授权访问漏洞的端口
## 系统安全
  * 及时打漏洞补丁
  * 前面应急响应相关内容
## 密码安全
  * 长度不少于8个字符
  * 密码中同时存在大小写字母、数字和特殊符号
  * 不存在于已有字典之中
  * 定期修改密码
## 应用安全
  * FTP 禁止匿名登录、修改Banner信息防止被识别
  * SSH 是否禁用root登录、是否需要禁用密码连接、采用ssh密钥登录
  * VPN 是否为最新安全版本、账户密码定期修改
  * 数据库应用 文件写权限、日志记录是否开启、账户密码弱口令排查
## 参考资料
[CTF-MISC-日志分析](https://www.jianshu.com/p/bb5b4c31f4f5)  
[应急中Web日志分析](https://zhuanlan.zhihu.com/p/90300750)  
[wireshark技巧](https://wh0ale.github.io/2019/03/09/2019-3-9-wireshark%E6%8A%80%E5%B7%A7/)  
[磁盘内存分析 CTF-WIKI](https://ctf-wiki.org/misc/disk-memory/introduction/)  
[Fastjson漏洞修复参考](https://www.cnblogs.com/rab3it/p/14309497.html)