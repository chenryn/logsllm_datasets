# Virtualization: Sufficient Vulnerabilities to Work Vegas
## Defcon 15, Las Vegas, 2007
### D.J. Capelis, University of California, San Diego

## Introduction
- **Known Issues**: The presentation will primarily cover well-documented issues.
- **Design Flaws vs. Bugs**: Most of the discussed issues are design flaws rather than bugs.
- **Documented Behavior**: These behaviors are documented, which means they may have received less rigorous testing.
- **Scope**: The focus is on VMware Server, not ESX or VI3.
- **Criticality**: Despite being known, these issues remain significant and need addressing.

## Overview
- **Review of Isolation**: Discussing the limitations of isolation in virtualized environments.
- **Covert Channels**: Exploring how data can be covertly transmitted between VMs.
- **Networked VMs**: Analyzing the security implications of VMs on a network.
- **Network Changes by VMs**: How VMs can alter the network configuration.
- **Live Migration**: Security concerns associated with moving VMs between hosts.
- **Q&A Session**: Open for questions, comments, and discussions.

## Technologies Overview
| Technology | Example | Speed | Completeness |
|------------|---------|-------|--------------|
| OS-Level Virtualization | Zones/UML/OpenVZ | Fast | Limited |
| Paravirtualization | Xen | Fast | High |
| Full Virtualization with Hardware Support | KVM, Xen | Fast | High |
| Full Virtualization without Hardware Support | VMware, QEMU | Slower | High |
| Full Emulation | QEMU, Bochs | Slowest | Complete |

## Key Features
- **Freeze/Thaw/Snapshotting**: Ability to pause, resume, and save VM states.
- **Decoupled Hardware**: Independence from physical hardware.
- **Additional Protection Layer**: Enhanced security through virtualization.
- **Live Migration**: Seamless transfer of VMs between hosts.
- **Dynamic Deployment/Creation**: On-demand creation and deployment of VMs.

## The Hype
- **Reliability**: Claims of improved reliability due to decoupling from hardware.
- **Consolidation**: Reducing the number of physical machines for better resource utilization.
- **Isolation**: Promises of enhanced security through task isolation.

## Attacking Isolation
- **Shared Hardware Attacks**: Exploiting shared hardware resources, such as SMT (Simultaneous Multithreading).
- **Host Scheduler Attacks**: Manipulating the host scheduler to disrupt VM performance.
- **Hardware Device Access**: Risks associated with passing real hardware devices to VMs, which can lead to system-wide vulnerabilities.

## Covert Channels
- **Resource Utilization**: Using one VM's resources to detect and communicate with another.
- **Time-Based Communication**: Leveraging high-precision timers like RDTSC for covert communication.
- **Layer 2 Data Transmission**: Bypassing common firewall rules using protocols like IPX, AppleTalk, or DECNet.

## Networking Issues
- **Bypassing Host Firewalls**: VMs can bypass host firewalls, especially in bridged mode.
- **Promiscuous Mode**: Allowing VMs to capture all network traffic.
- **MAC Impersonation**: VMs can impersonate other MAC addresses, facilitating spoofing attacks.

## Network Models
- **VMware Model (Default)**: VMs directly connected to the network, bypassing host firewalls.
- **Xen Model (Default)**: Similar to VMware, but with potential differences in implementation.
- **Traditional Firewall vs. VMs**: Traditional firewalls may not effectively protect against VM-based threats.

## Live Migration
- **Products**: Xen, VMware, OpenVZ, IBM's VM solutions.
- **Status**: Current implementations lack encryption, use optional hardware-based SSL, and rely on SSH with root access. Future improvements are expected by the end of 2007.

## Tool
- **vmnet.sh**: A script available at [http://sdcc21.ucsd.edu/~dcapelis/vmnet.sh](http://sdcc21.ucsd.edu/~dcapelis/vmnet.sh) that enhances VMware's networking by integrating a real Linux bridging system, mitigating some of the security issues.

## Summary
- **Virtualization Benefits**: VMs offer many advantages but come with significant security challenges.
- **Developer Mindset**: Developers often overlook the presence of attackers.
- **Real-World Threats**: The world is full of attackers who exploit these vulnerabilities.
- **Trivial Issues**: Minor issues can escalate into major problems.
- **Security Considerations**: Deployers of VM technology must consider the security implications and address them proactively.

## Q&A
- **Questions?**
- **Heckling?**
- **Grandiose Proposals?**
- **Accusations?**

This revised version aims to provide a more structured, clear, and professional presentation of the original content.