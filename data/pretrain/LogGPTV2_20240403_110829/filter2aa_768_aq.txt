### 量的值
- **SetLocalVariable**  
  设置双精度类型局部变量的值。

### 断点（Breakpoint）
- **SetBreakpoint**  
  设置断点。
- **ClearBreakpoint**  
  清除断点。

### 观察字段（WatchedField）
- **SetFieldAccessWatch**  
  当指定类的指定字段被访问时产生 `Field-Access` 事件。
- **ClearFieldAccessWatch**  
  清除字段访问监视。
- **SetFieldModificationWatch**  
  当指定类的指定字段被修改时产生 `Field-Modification` 事件。
- **ClearFieldModificationWatch**  
  清除字段修改监视。

### 类（Class）
- **GetLoadedClasses**  
  读取虚拟机中已经加载的类。
- **GetClassLoaderClasses**  
  读取指定类加载器所加载的类。
- **GetClassSignature**  
  读取类的签名。
- **GetClassStatus**  
  读取类的状态。
- **GetSourceFileName**  
  读取类的源文件名。
- **GetClassModifiers**  
  读取类的访问标志。
- **GetClassMethods**  
  读取类的方法。
- **GetClassFields**  
  读取类的字段。
- **GetImplementedInterfaces**  
  读取类的实现接口。
- **GetClassVersionNumbers**  
  读取类的版本号。
- **GetConstantPool**  
  读取类的常量池原始数据。
- **IsInterface**  
  判断是否为接口。
- **IsArrayClass**  
  判断是否为数组类。
- **IsModifiableClass**  
  判断类是否可以修改。
- **GetClassLoader**  
  读取指定类的类加载器。
- **GetSourceDebugExtension**  
  读取类的调试扩展信息。
- **RetransformClasses**  
  更新已加载类的字节码。
- **RedefineClasses**  
  重新定义类的字节码。

### 对象（Object）
- **GetObjectSize**  
  读取对象的大小。
- **GetObjectHashCode**  
  读取对象的哈希代码。
- **GetObjectMonitorUsage**  
  读取监视对象的使用情况。

### 字段（Field）
- **GetFieldName**  
  读取字段名称。
- **GetFieldDeclaringClass**  
  读取字段的声明类。
- **GetFieldModifiers**  
  读取字段的访问标志。
- **IsFieldSynthetic**  
  判断是否为编译器生成的合成字段。

### 方法（Method）
- **GetMethodName**  
  读取方法名称。
- **GetMethodDeclaringClass**  
  读取方法的声明类。
- **GetMethodModifiers**  
  读取方法的访问标志。
- **GetMaxLocals**  
  获取局部变量槽的数量。
- **GetArgumentsSize**  
  获取参数大小。
- **GetLineNumberTable**  
  获取行号表。
- **GetMethodLocation**  
  读取方法的位置。
- **GetLocalVariableTable**  
  获取局部变量表。
- **GetBytecodes**  
  读取字节码。
- **IsMethodNative**  
  判断是否为本地方法。
- **IsMethodSynthetic**  
  判断是否为编译器生成的合成方法。
- **IsMethodObsolete**  
  判断是否为过时的方法。
- **SetNativeMethodPrefix**  
  设置本地方法的前缀。
- **SetNativeMethodPrefixes**  
  设置本地方法的多个前缀。

### 原始监视器（Raw Monitor）
- **CreateRawMonitor**  
  创建一个原始监视器。
- **DestroyRawMonitor**  
  销毁一个原始监视器。
- **RawMonitorEnter**  
  获取独占所有权。
- **RawMonitorExit**  
  释放独占所有权。
- **RawMonitorWait**  
  等待监视器的通知。
- **RawMonitorNotify**  
  通知等待监视器的单一线程。
- **RawMonitorNotifyAll**  
  通知等待监视器的所有线程。

### JNI 函数介入（JNI Function Interception）
- **SetJNIFunctionTable**  
  设置 JNI 函数表。
- **GetJNIFunctionTable**  
  读取 JNI 函数表。

### 事件管理（Event Management）
- **SetEventCallbacks**  
  设置事件回调函数。
- **SetEventNotificationMode**  
  设置事件通知模式。
- **GenerateEvents**  
  产生事件。

### 扩展机制（Extension Mechanism）
- **GetExtensionFunctions**  
  读取扩展函数。
- **GetExtensionEvents**  
  读取扩展事件。
- **SetExtensionEventCallback**  
  设置扩展事件的回调函数。

### JVM TI 的功能（Capability）
- **GetPotentialCapabilities**  
  读取当前环境支持的潜在可选功能。
- **AddCapabilities**  
  增加功能。
- **RelinquishCapabilities**  
  放弃指定的功能。
- **GetCapabilities**  
  读取当前环境支持的可选功能。

### 计时器（Timers）
- **GetCurrentThreadCPUTimerInformation**  
  读取当前线程所用 CPU 时间的信息。
- **GetCurrentThreadCPUTime**  
  读取当前线程所使用的 CPU 时间。
- **GetThreadCPUTimerInformation**  
  读取指定线程所用 CPU 时间的信息。
- **GetThreadCPUTime**  
  读取指定线程所使用的 CPU 时间。
- **GetTimerInformation**  
  读取计时器信息。
- **GetTime**  
  读取时间。
- **GetAvailableProcessors**  
  读取 JVM 可用的 CPU 数量。

### 类加载器搜索（Class Loader Search）
- **AddToBootstrapClassLoaderSearch**  
  增加 Bootstrap 类加载器的搜索路径。
- **AddToSystemClassLoaderSearch**  
  增加系统类加载器的搜索路径。

### 系统属性（System Properties）
- **GetSystemProperties**  
  读取系统属性。
- **GetSystemProperty**  
  读取单个系统属性。
- **SetSystemProperty**  
  设置系统属性。

### 其他
- **GetPhase**  
  读取 VM 执行的当前阶段。
- **DisposeEnvironment**  
  关闭与 JVM TI 的连接。
- **SetEnvironmentLocalStorage**  
  设置环境信息。
- **GetEnvironmentLocalStorage**  
  读取环境信息。
- **GetVersionNumber**  
  读取 JVM TI 的版本。
- **GetErrorName**  
  读取错误代码的符号名。
- **SetVerboseFlag**  
  控制输出信息的种类。
- **GetJLocationFormat**  
  读取位置的表示方法。

以上我们列出了 JVM TI 在当前版本（JDK6）中定义的所有函数。这些函数反映了实现调试功能所需的底层支持，理解这些函数有助于理解调试功能的工作原理。此外，这些函数也揭示了 Java 语言和 JVM 的许多重要特性。