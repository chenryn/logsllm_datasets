questions of the  survey are  an  adaptation  of  the NASA Task 
Load Index (TLX) to assess the participant perceived effort in 
the  tasks.  This  data  helps  us  to  understand  the  subjective 
participant-perceived  effort  and  relate  that  effort  with  the 
physiological  response  and  with  the  objective  success  in 
understanding  the  programs.  Table  III  summarizes  the  data 
collected from these surveys. Objective evaluation OE captures 
the  average  correctness  of 
the 
understanding  of  the  programs  (0  means  complete  failure  in 
understanding the code and 1 a complete success). Mental effort 
(ME), Time Pressure (TP) and Discomfort (DI) were collected 
with a NASA-TLX enquiry (second survey). All values are from 
0 to 1. Included are the average and standard deviation values. 
The results of pupillography are consistent with the NASA-
TLX  results,  suggesting  that  pupillography  can  be  used  to 
provide a  real time  measurement of  programmers’ effort and 
cognitive  load  during  software  development  activities.  The 
subjective  effort  measured  by  NASA-TLX,  as  well  as  the 
biofeedback pupillography results, show that the mental effort 
does not correlate well with complexity metrics. For example, 
the cyclomatic complexity of program C1 is higher than C2 (and 
C1),  but  both  the  pupillography  and  NASA-TLX    show  that 
participants  see  C2  as  almost  as  complex  as  C3.  This  was 
somewhat expected, as it is well-known that complexity metrics 
cannot  be  used  as  predictor  of  programmers’  effort  in  many 
scenarios. 
VI. UTILIZATION PERSPECTIVES AND FUTURE WORK 
Our  study  shows  that  pupillography  is  a  very  promising 
biofeedback  mechanism,  providing  accurate  indications  of 
programmers’ mental effort and cognitive load. As explained, 
the experiments performed also included also eye tracking data 
643
(among other sensors), which allow us to identify the exact lines 
of code where the participant was looking at at any moment of 
the experiment. Thus, the immediate next step is to analyze the 
pupillography data at a low level of code granularity, combining 
the  variations  in  the  pupil  size  with the code lines where the 
participant  was  looking  at,  which  are  identified  by  the  eye 
tracking.    It  is  worth  noting  that  the  eye  tracking  device  is 
actually the same device that provided the pupil size, so adding 
eye  tracking data  does  not  change  the  highly  relevant  non-
intrusiveness of the method. 
Forthcoming  use  of  pupillography,  combined  with  eye 
tracking,  will  be  a  key  element  in  measuring  programmers’ 
cognitive stress and mental effort in real time, while producing 
code or reading code for software inspections. The meta-data 
about  the  programmers’  cognitive  state  while  dealing  with  a 
given  code  unit  can  be  recorded  and  linked  to  the  related 
program  code  lines,  which  will  allow  new  visionary  features 
such as: 
• Online  advice  to  programmers  and  testers,  ranging 
from  simple  warning of  software code areas that  may 
need a second look at (to remove possible bugs) to more 
sophisticated  programmers’  support  scenarios 
that 
consider the biofeedback metadata in conjunction with 
the complexity of the code handled by the programmer 
and her/his history of previous bugs (we call this alter-
pair  programming,  as  an  analogy  to  the  agile  pair 
programming  approach,  but  without  the  need  of  the 
second programmer of the pair). 
• Biofeedback 
improved  models  of  bug  density 
estimation and software risk analysis through the use 
of code complexity metrics enhanced with programmer’s 
biofeedback  metadata  that  shows  how  complexity  is 
really perceived by each programmer.
• New biofeedback driven testing approaches using the 
meta information about the programmers’ cognitive and 
emotional states while working on the different portions 
of  the  code,  combined  with  traditional  complexity 
metrics,  to  guide  the  testing  effort  to  the  code  units 
representing higher bug risk. 
• Programmers’ 
friendly 
integrated  development 
environments  with automatic  warning/enforcement  of 
programmers’ resting moments, when accumulated signs 
of fatigue and mental strain show that not only the code 
quality is doubtful but, above all, programmers’ mental 
well-being must be protected. 
• Biofeedback  optimized  training  needs through  the 
creation  of  individual  programmer’s  profiles  to  help 
define training plans based on the biofeedback metadata 
associated to individual programmers. 
It is clear that pupillography should be complemented with 
other types  of  low intrusive  sensors,  such as HRV.  A deeper 
knowledge on the error mechanisms at a neuroscience level is 
also quite important to remove noise and increase accuracy. In 
any  case,  the  present  results  on  the  use  of  pupillography  to 
measure programmers’ mental effort and cognitive load suggest 
promising near future utilization of pupillography in software 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 11:12:53 UTC from IEEE Xplore.  Restrictions apply. 
development  and  testing.  Low-cost  eye  tracking  devices 
currently available (used by the videogame industry) opens new 
possibilities for the rapid adoption of pupillography in software 
engineering. 
VII.CONCLUSIONS 
This  practical  experiment  report  presents  new  evidence 
showing that pupillography is an effective approach to measure 
programmers’  mental  effort  and  cognitive  load  in  code 
comprehension tasks  such as in code inspection  scenarios, as 
well as during general code development activities. The fact that 
pupillography is non-intrusive from a physical point of view and 
can  be  easily  adapted  to  current  software  development 
environments suggest that pupillography could be adopted as a 
biofeedback mechanism in the near future.  
The results reported from the observational study including 
30 experienced programmers shows that programmers’ mental 
effort  and  cognitive  load  measured  using  pupillography  is 
consistent with the subjective perception of complexity and load 
recorded  by  the  programmers  using  NASA-TLX  task  load 
index. As somewhat expected, the analysis based on complexity 
metrics deviates from both results obtained from pupillography 
and NASA-TLX. 
The paper ends with the discussion of future perspectives for 
the  utilization  of  pupillography  in  the  broader  context  of 
Biofeedback  Augmented  Software  Engineering 
(BASE) 
approach. 
ACKNOWLEDGMENT 
The  authors  would  like  to  thank  to  the  volunteers  that 
participated in the experiments. This work was partially funded 
by the BASE project, POCI - 01-0145 - FEDER- 031581. 
REFERENCES 
[1] S. Shah, M. Morisio, M. Torchiano “The Impact of Process Maturity on 
Defect  Density”,  ACM-IEEE International  Symposium  on   Empirical 
Software Engineering and Measurement, 2012. 
[2] N.  Honda,  S.  Yamada,  “Empirical  Analysis  for  High  Quality  SW 
Development”, American Journal Op. Research, 2012. 
[3] Steve McConnell, “Code Complete: A Practical Handbook of Software 
Construction”, Microsoft Press, 2004. 
J. Durães and H. Madeira “Emulation of SW Faults: A Field Data Study 
and a Practical Approach”, IEEE Transactions on SW Engineering, vol. 
32, no. 11, pp. 849-867, November 2006. 
J.  Christmansson  and  R.  Chillarege,  "Generation  of  an  Error  Set  that 
Emulates  SW  Faults",  Proc.  of  the  26th  International  Fault  Tolerant 
Computing Symposium, FTCS-26, Sendai, Japan, 1996 
[4]
[5]
[6] A. Fuqun Huang, B. Bin Liu, and C. Bing Huang, “A Taxonomy System 
to  Identify  Human  Error  Causes  for  Software  Defects”,  18th  ISSAT 
International Conference on Reliability and Quality in Design, 2012 
[7] Fuqun Huang, “Human Error Analysis in Software Engineering”, chapter 
of  the  book  “Theory  and  Application  on  Cognitive  Factors  and  Risk 
Management”, F. Felice and A. Petrillo Editors, IntechOpen, 2017. 
James Reason, “Human Error”, Cambridge University Press, 1990. 
[8]
[9] V. Anu, et. Al, “Using A Cognitive Psychology Perspective on Errors to 
Improve Requirements Quality: An Empirical Investigation”, IEEE 27th 
International Symposium on Software Reliability Engineering, 2016. 
[10] N. Peitek, J. Siegmund, et al., “A Look into Programmers' Heads”, IEEE 
Transactions on Software Engineering, August, 2018. 
[11] B. Floyd, T. Santander, and W. Weimer, “Decoding the Representation 
of Code in the Brain: An fMRI Study of Code Review and Expertise”, 
ICSE 2017, pp 175–186, Piscataway, NJ, USA, 2017. 
[12] T.  Nakagawa,  Y.  Kamei,  et  al.,  “Quantifying  Programmers’  Mental 
Workload  During  Program  Comprehension  Based  on  Cerebral  Blood 
Flow Measurement: A Controlled Experiment”, Proc. of ICSE 2014. 
[13] J. Castelhano, I. C. Duarte, C. Ferreira, J. Durães, H. Madeira, and M. 
Castelo-Branco, “The Role of the Insula in Intuitive Expert Bug Detection 
in Computer Code: An fMRI Study”, Brain Imaging and Behavior, 2018. 
[14] R. Couceiro, G. Duarte, J. Durães, J. Castelhano, C. Duarte, C. Teixeira, 
Miguel  C.  Branco,  P.  Carvalho,  H.  Madeira,  “Biofeedback  augmented 
software  engineering:  monitoring  of  programmers'  mental  effort”, 
International  Conference  on  Software  Engineering,  New  Ideas  and 
Emerging Results, ICSE 2019 (accepted) 
[15] S. C. Müller and T. Fritz, “Using (Bio)Metrics to Predict Code Quality 
Online”, Department of Informatics, University of Zurich, Switzerland, 
Proc. of 38th IEEE ICSE, 2016. 
[16] S. Sirois and J. Brisson, "Pupillometry," Wiley Interdisciplinary Reviews: 
Cognitive Science, vol. 5, pp. 679-692, 2014. 
[17] J. Beatty and B. Lucero-Wagoner, "The pupillary system," Handbook of 
psychophysiology, vol. 2, 2000. 
[18] E. H. Hess and J. M. Polt, "Pupil size in relation to mental activity during 
simple problem-solving," Science, vol. 143, pp. 1190-1192, 1964. 
[19] D.  Kahneman  and  J.  Beatty,  "Pupil  diameter  and  load  on  memory," 
Science, vol. 154, pp. 1583-1585, 1966. 
[20] M. L. H. Võ, et al., "The coupling of emotion and cognition in the eye: 
Introducing the pupil old/new effect," Psychophysiology, vol. 45, pp. 130-
140, 2008. 
[21] J.  Beatty,  "Task-evoked  pupillary  responses,  processing  load,  and  the 
structure of processing resources," Psychological bulletin, vol. 91, 1982. 
[22] H.  Lüdtke,  B.  Wilhelm,  M.  Adler,  F.  Schaeffel,  and  H.  Wilhelm, 
"Mathematical procedures in data recording and processing of pupillary 
fatigue waves," Vision research, vol. 38, pp. 2889-2896, 1998. 
[23] M.  Nakayama  and  Y.  Shimizu,  "Frequency  analysis  of  task  evoked 
pupillary  response  and  eye-movement,"  in  Proceedings  of  the  2004 
symposium on Eye tracking research & applications, pp. 71-76, 2004. 
[24] A. Murata and H. Iwase, "Evaluation of mental workload by fluctuation 
analysis of pupil area," in Engineering in Medicine and Biology Society, 
1998.  Proceedings  of  the  20th  Annual  International  Conference  of  the 
IEEE, pp. 3094-3097, 1998. 
[25] V.  Peysakhovich,  M. Causse, S.  Scannella, and F. Dehais,  "Frequency 
analysis  of  a  task-evoked  pupillary  response:  Luminance-independent 
measure  of  mental  effort,"  International  Journal  of  Psychophysiology, 
vol. 97, pp. 30-37, 2015. 
[26] O. Salem, L. Yaning, and A. Mehaoua, "A lightweight anomaly detection 
framework  for  medical  wireless  sensor  networks,"  in  Wireless  Comm. 
and Networking Conference (WCNC), 2013 IEEE pp. 4358-4363, 2013. 
[27] D. Kondrashov and M. Ghil, "Spatio-temporal filling of missing points in 
geophysical data sets," Nonlinear Processes in Geophysics, vol. 13, pp. 
151-159, 2006. 
[28] R. Sassi, V. D. Corino, and L. T. Mainardi, "Analysis of surface atrial 
signals:  time  series  with  missing  data?,"  Annals  of  biomedical 
engineering, vol. 37, pp. 2082-2092, 2009. 
[29] F.  Onorati,  M.  Mauri,  V.  Russo,  and  L.  Mainardi,  "Reconstruction  of 
pupil dilation signal during eye blinking events," in Proceeding of the 7th 
International Workshop on Biosignal Interpretation, pp. 117-120, 2012. 
[30] A. Eleuteri, A. C. Fisher, D. Groves, and C. J. Dewhurst, "An efficient 
time-varying filter for detrending and bandwidth limiting the heart rate 
variability tachogram without resampling: MATLAB  open-source code 
and 
and 
mathematical methods in medicine, vol. 2012, 2012. 
implementation,"  Computational 
internet  web-based 
[31] M.  Malik,  "Heart 
rate  variability:  Standards  of  measurement, 
physiological interpretation, and clinical use," European Heart Journal, 
vol. 17, pp. 354–381, 1996. 
[32] Burg,  J.P.  "Maximum  Entropy  Spectral  Analysis",  Proceedings  of  the 
37th Meeting of the Society of Exploration Geophysicists, 1967. 
[33] F.  M.  Villalobos-Castaldi,  J.  Ruiz-Pinales,  N.  C.  K.  Valverde,  and  M. 
Flores,  "Time-frequency  analysis  of  spontaneous  pupillary  oscillation 
signals  using 
transform",  Biomedical  Signal 
Processing and Control, vol. 30, pp. 106-116,   2016.
the  Hilbert-Huang 
644
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 11:12:53 UTC from IEEE Xplore.  Restrictions apply.