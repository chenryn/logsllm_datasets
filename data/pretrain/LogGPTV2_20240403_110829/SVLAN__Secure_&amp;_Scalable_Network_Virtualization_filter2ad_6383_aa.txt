title:SVLAN: Secure &amp; Scalable Network Virtualization
author:Jonghoon Kwon and
Taeho Lee and
Claude H&quot;ahni and
Adrian Perrig
SVLAN: Secure & Scalable Network Virtualization
Jonghoon Kwon
ETH Zürich
Taeho Lee
ETH Zürich
Claude Hähni
ETH Zürich
Adrian Perrig
ETH Zürich
PI:EMAIL
PI:EMAIL
PI:EMAIL
PI:EMAIL
Abstract—Network isolation is a critical modern Internet
service. To date, network operators have created a logical net-
work of distributed systems to provide communication isolation
between different parties. However, the current network isolation
is limited in scalability and ﬂexibility. It limits the number of
virtual networks and it only supports isolation at host (or virtual-
machine) granularity. In this paper, we introduce Scalable Virtual
Local Area Networking (SVLAN) that scales to a large number of
distributed systems and offers improved ﬂexibility in providing
secure network isolation. With the notion of destination-driven
reachability and packet-carrying forwarding state, SVLAN not
only offers communication isolation but isolation can be speciﬁed
at different granularities, e.g., per-application or per-process.
Our proof-of-concept SVLAN implementation demonstrates its
feasibility and practicality for real-world applications.
I.
INTRODUCTION
Network virtualization has become increasingly prominent
in the modern Internet and is recognized as a core technology
for future networking. Data-center operators often resort to
creating logical networks for VMs, called virtual networks,
to provide communication isolation between core and edge
clouds. In the ﬁfth-generation mobile network (5G), the notion
of network slicing (which allows the partitioning of a network
into virtual slices) is recognized as a key innovation. Essen-
tially, network virtualization creates multiple virtual networks
on top of a shared physical network infrastructure, striving for
security, isolation from malicious activities, and cost-effective
network management.
In particular, virtual extensible LAN (VXLAN) is a net-
work-virtualization technique that enables end-to-end network
isolation and is widely used in many data centers to support
large cloud-computing environments [33]. It connects multiple
VXLAN tunnel endpoints (VTEPs) conﬁgured with a same
VXLAN network identiﬁer (VNI), applying an overlay tech-
nique to encapsulate layer-2 frames within layer-3 packets,
to isolate the communication from unwanted external entities.
Despite its short history, it has become a dominant protocol
since its introduction in 2013. Nonetheless, VXLAN has two
main limitations: scalability and ﬂexibility.
First, each VTEP device needs to be frequently updated
to maintain a mapping between VMs and VNIs. The size of
the mapping information will grow with the number of VMs
and VNIs that servers host. In addition, with the increase in
Network and Distributed Systems Security (NDSS) Symposium 2020
23-26 February 2020, San Diego, CA, USA
ISBN 1-891562-61-4
https://dx.doi.org/10.14722/ndss.2020.24162
www.ndss-symposium.org
the number of VMs and VNIs, the volume of ARP trafﬁc
between VMs will increase. Already in today’s data centers,
ARP trafﬁc requires signiﬁcant bandwidth, and this will only
worsen as more VMs and VNIs are created [17].
Second, VXLAN supports a static isolation of commu-
nication at host or VM granularity. It is difﬁcult to isolate
communication at different granularities, e.g., per-application,
which may be useful when one subset of VMs wishes to allow
communication for a speciﬁc application, while another subset
disallows that application. In VXLAN, two separate VXLAN
segments must be created in such a setting, which leads to
scalability issues when the demand for other isolation granu-
larities increases. In addition, once a virtual network is created,
removing a VM from the network is cumbersome as it requires
coordination between multiple parties (e.g., remove state from
each VTEP where the virtual network is deployed, conﬁguring
each VM in the virtual network). However, such dynamism is
necessary for isolating communication on per-process or per-
application basis, since applications and processes could be
short-lived.
To address these limitations, in this paper, we propose
a secure and scalable virtual LAN (SVLAN) architecture.
Each endhost (or VM) dynamically initiates virtual networks
by expressing its consent for reachability, facilitating the
separation of enforcement and access management/delegation.
On a high level, SVLAN achieves communication isolation
based on explicit consent. That is, the sender (e.g., a VM
or a virtualized application) that wishes to communicate with
the receiver must acquire consent from the receiving VM (or
application). The core network of the data center ensures that
the sender has obtained receiver consent and only forwards
packets that carry the consent; packets without consent are
dropped, providing communication isolation.
SVLAN weds local network slicing with inter-domain
routing. To this end, we integrate two emerging technologies
and introduce new approaches to neutralize their drawbacks.
For capability-based networking, we separate the roles of au-
thentication, authorization, and veriﬁcation by introducing new
entities including authorization delegate (AD) and veriﬁer. This
allows us to push capabilities instead of requiring global pull,
thereby dispersing load, improving deployability, and reducing
propagation delay. For segment routing, we also introduce
a new approach, veriﬁable segment routing, which improves
the integrity and authenticity of routing control. With an
authorization proof, path segments remain unalterable, being
subordinated to the corresponding sender and receiver pair,
preventing potential routing-path hijacking, packet injection,
or replay, and dramatically improving the robustness of routing
control.
SVLAN communication proceeds in 3 steps: (1) the sender
acquires an authorization token from the receiver’s authoriza-
tion delegate; (2) it includes the token in each transmitted
packet; and (3) the network forwards the packets only if the
tokens are valid. We do not ﬁx or impose a speciﬁc entity
to validate the tokens. Instead, we create a conceptual entity
called veriﬁer and design our protocol to be generic such that
any entity in the network, as long as they are on packets’
communication paths, can serve as a veriﬁer (e.g., VTEPs
or routers). Such ﬂexibility enhances the deployability of our
architecture since the veriﬁers can be determined based on
a variety of factors, including market demand or policy reg-
ulation. Nonetheless, different choices of veriﬁers do provide
different technical beneﬁts, and we evaluate the technical merit
for each potential deployment scenario.
We have implemented a prototype framework that includes
a fully-functional tunneling endpoint, authorization delegate,
and veriﬁer, and have extended the data plane to support
SVLAN packet forwarding. Through extensive evaluation
in a real-world environment, we demonstrate that SVLAN
introduces negligible processing overhead (6.7µs for authoriza-
tion and 26ns for veriﬁcation) and tolerable latency inﬂation
(32.0µs on average). In addition, we further discuss an incre-
mental deployability along with various SVLAN deployment
scenarios.
In summary, this paper makes the following contributions:
• We introduce SVLAN, a generic framework that en-
ables scalable, ﬂexible, and viable network virtualiza-
tion at various granularities, e.g., host and application
granularity.
• We enhance security in network isolation by enforcing
the receiver’s consent in communication by design,
that enables network ﬁltering of the edge of the
network.
• We provide an evaluation of tradeoffs between the new
approach and existing approaches.
II. RELATED WORK
VLAN and VXLAN. Data centers are shared infrastructures
that host various services operated by different parties, even
potentially conﬂicting ones. Furthermore, security-sensitive
data are increasingly processed in data centers as well. Hence,
securing data centers to prevent leakage of one party’s data
to another has become an important issue. To this end, data
centers rely on the concept of isolation—isolating computing,
storage, and network resources.
To date, the operators of data centers typically rely on
virtual networks (VNs), which are isolated logical networks of
VMs, to achieve network isolation. The virtual LAN (VLAN)
standard (IEEE 802.1q) describes a way to create virtual
networks between hosts that are not directly connected to
the same network switch, dramatically improving security,
efﬁciency, and trafﬁc management. However, VLAN cannot
scale to a large number of VNs [33], [55]. For example,
the VLAN identiﬁer (VID) in the VLAN header is only a
12-bit value, which imposes a hard limit of 4094 virtual
networks (0x000 and 0x0xFFF are reserved). To provide
better scalability, the network community has proposed virtual
2
Fig. 1: The stateful VTEP hampers ﬂexibility on VN migration.
In addition, adversaries can easily join the other VNs and
manipulate VNIs to forward unwanted trafﬁc.
extensible LAN (VXLAN) [33], which interconnects layer-2
networks over an underlying layer-3 network.
VXLAN achieves better scalability than VLAN in two
ways. First, the VNI is a 24-bit value, which allows for up to
16 million VXLAN segments (or virtual networks) to coexist.
Second, it organizes the core network of data centers as a
layer-3 network (in contrast to layer-2 for VLAN) enabling
IP-based routing, which provides better scalability. It reduces
the amount of state (i.e., per-VM state) at top-of-rack switches
in data centers, and enables equal-cost multipath to utilize
redundant links in the network. Although VXLAN scales better
than VLAN, it is still limited in scalability and ﬂexibility [21],
[49].
Security has never been a major consideration in VXLAN.
VTEPs in different network segments recognize each other
by joining the layer-3 multicast group via the Internet Group
Management Protocol (IGMP). It helps ﬁll up the forwarding
tables on VTEPs by broadcasting ARP requests to the multi-
cast group. Only VTEPs that are listening to the multicast-
group trafﬁc respond to the ARP requests, enabling VMs
to discover the MAC addresses of target VMs and allowing
unicast packets to other VMs in the same VNI. However, as
shown in Figure 1, there is no concrete countermeasure against
adversaries with enough capability to alter packet headers to
impersonate another VNI. Therefore, it might fail to isolate the
VN from unwanted trafﬁc. Lately, some mechanisms have been
suggested to secure the VXLAN environment using VXLAN
membership information [11]. However, the authorization of
membership requires additional state (i.e., per-VM state), and
hence it worsens the ﬂexibility and scalability.
To overcome these limitations, we design a new network
virtualization approach with the notions of “destination-driven
reachability” and “packet-carrying forwarding state”, achieving
a high degree of freedom in network virtualization with a
strong guarantee for isolation. The following are brief intro-
ductions to related areas.
Software-Deﬁned Networking (SDN). As an early pre-cursor
of SDN, the SANE [13] system shares some basic design tenets
with SVLAN: packets carry capabilities for each traversed
switch, for the entire end-to-end path. In contrast, SVLAN
is more light-weight, carrying a single capability for the
destination, more in the spirit of VLAN. Furthermore, SVLAN
comes along with incremental deployability; it does not require
a full deployment across the network nor any modiﬁcation on
the endhost.
The typical SDN-based approach, as proposed by the
Ethane [12] system, embodies state on network switches to
enforce policy and encode forwarding behavior. Fine-grained
forwarding behavior can be deﬁned, at the cost of per-ﬂow state
on all intermediate switches. Mobility and network failures re-
quire state re-conﬁguration on intermediate switches, which we
aim to avoid in SVLAN– as an advantage, ﬂow management
in SVLAN can be handled exclusively by the end application
without requiring alteration of in-network state.
Micro-segmentation. Micro-segmentation [34], [25] can cre-
ate secure zones in cloud environments that enable tenants
to securely isolate their workloads from others. Traditionally,
data centers have employed various security primitives, such as
ﬁrewalls, IDS/IPS, and ACLs, to protect the internal network
and their customers from security breaches. However, once
an adversary bypasses the protection methods,
they have
access to the data center to carry out attacks. With micro-
segmentation, ﬁne-grained security policies are applied to
individual workloads even for the internal network, enhancing
attack resilience.
Since the concept of micro-segmentation has been pro-
posed by VMWare [58], [37], many data centers have in-
troduced micro-segmentation into their network, promoting
the idea of how network virtualization can be improved with
security. Yet, a speciﬁc way to realize the idea has not been
standardized, remaining at an intermediate development stage.
Off-by-Default. Over the past decade, researchers have made
various proposals to allow receivers to enforce their consent
towards incoming trafﬁc, and the proposals can be classiﬁed
into two broad categories [60]: ﬁltering-based and capability-
based approaches. In ﬁltering-based approaches [7], [31], [4],
receivers express their consent as ﬁltering rules and these
rules are installed at network entities (e.g., routers). Then,
for each packet,
the router evaluates the ﬁltering rules of
the respective receiver to determine its consent. However, the
ﬁltering approach can create false positives and false negatives
when routers need to aggregate ﬁltering rules of the users.
Moreover, disseminating and updating the ﬁltering rules on
Internet routers is a non-trivial task.
On the other hand, in capability-based approaches [3], [59],
the receivers—not routers—grant permissions to the senders,
where a permission is often implemented as a (cryptographic)
token that can be validated by the network. Then, the senders
include the tokens in their packets, and the network only
forwards packets with valid tokens. Capability systems have
one major vulnerability: denial-of-capability (DoC) attacks [5],
where an adversary ﬂoods the receivers with capability-request
messages so that legitimate senders cannot receive capabilities
from the receivers. To mitigate DoC attacks, previous work
has focused on limiting the capability-request rate by the
senders [42], [8], [1].
Segment Routing. Segment routing [18] realizes the source-
routing paradigm [56]; a source who wants to communicate
with a destination builds the forwarding path of network
packets by collecting a set of routing pieces, called “path
segments”, and assembling them as an ordered list of seg-
ments. Network infrastructure ensures that the packets are
steered through the intended forwarding path. Hence, it greatly
improves transparency and control over packet forwarding,
resulting in many desirable properties such as multipath com-
munication, path-aware networking and high-performance data
transmission. Furthermore, considering the slow speed of the
current Internet to converge after network failures [28], [15],