I'm trying to implement signup/login form.  
In the signup page, if user succeeded signing up, Navigator.push method called
and login page is pushed.  
But it disables focus on TextFormField of login page. What is problem?  
Below code is authentication code, just ignore korean words.
    import 'package:firebase_auth/firebase_auth.dart';
    import 'package:flutter/material.dart';
    import 'dart:async';
    import 'package:flutter_try/login_page.dart';
    final FirebaseAuth _auth = FirebaseAuth.instance;
    Future _user;
    String email, password;
    void login(BuildContext context) {
    	_auth.signInWithEmailAndPassword(
    		email: email,
    		password: email
    	).then((_){
    		showDialog(
    			context: context,
    			builder: (_) => AlertDialog(
    				title: Text("로그인에 성공했습니다!"),
    				content: Text("환영합니다!"),
    			)
    		);
    	}).catchError((e){
    		showDialog(
    			context: context,
    			builder: (_) => AlertDialog(
    				title: Text("로그인에 실패했습니다ㅠㅠ"),
    				content: Text("이메일이 존재하지 않거나 비밀번호가 틀립니다!"),
    			)
    		);
    	});
    }
    void makeUser(BuildContext context) {
    	_user = _auth.createUserWithEmailAndPassword(
    		email: email,
    		password: password
    	).then((_) async{
    		showDialog(
    			context: context,
    			builder: (_) => AlertDialog(
    				title: Text("회원가입에 성공하셨습니다!"),
    				content: Text("로그인 페이지로 이동합니다..."),
    			)
    		);
    		// 회원가입 성공한 뒤 딜레이
    		await Future.delayed(Duration(milliseconds: 1000));
    		Navigator.push(context, MaterialPageRoute(builder: (context) => LoginPage()));
    	}).catchError((e) {
    		showDialog(
    			context: context,
    			builder: (_) => AlertDialog(
    				title: Text("회원가입에 실패했습니다.!"),
    				content: Text("이메일이 중복이거나 비밀번호가 6자리 미만입니다!"),
    			)
    		);
    	});
    }
And below is login page code
    import 'package:flutter/material.dart';
    import 'package:flutter_try/resources.dart';
    import 'package:flutter_try/signup_page.dart';
    import 'package:flutter_try/firebase_authentication.dart';
    class LoginPage extends StatelessWidget {
    	// TextFormField 값을 받아오기 위한 key 설정
    	GlobalKey _formKey = GlobalKey();
    	// 이메일 폼
    	final _email = TextFormField(
    		initialValue: "",
    		keyboardType: TextInputType.emailAddress,
    		decoration: InputDecoration(
    			contentPadding: const EdgeInsets.symmetric(vertical: login_padding_vertical, horizontal: login_padding_vertical),
    			labelText: "이메일을 입력하세요.",
    			border: OutlineInputBorder(borderRadius: BorderRadius.circular(20.0))
    		),
    		validator: (value) => value.isEmpty ? "이메일을 입력하지 않았습니다!" : null,
    		onSaved: (value) {email = value;},
    	);
    	// 비밀번호 폼
    	final _password = TextFormField(
    		initialValue: "",
    		obscureText: true,
    		decoration: InputDecoration(
    			contentPadding: const EdgeInsets.symmetric(vertical: login_padding_vertical, horizontal: login_padding_vertical),
    			labelText: "비밀번호를 입력하세요.",
    			border: OutlineInputBorder(borderRadius: BorderRadius.circular(20.0))
    		),
    		validator: (value) => value.isEmpty ? "비밀번호를 입력하지 않았습니다!" : null,
    		onSaved: (value) {password = value;},
    	);
    	// 로그인 버튼
    	Widget _login(BuildContext context) {
    		return RaisedButton(
    			color: loginButtonColor,
    			textColor: loginTextColor,
    			child: Text("로그인"),
    			onPressed: (){
    				final FormState form = _formKey.currentState;
    				if(form.validate()){
    					form.save();
    					form.reset();
    					login(context);
    				}
    			}
    		);
    	}
    	// 회원가입 버튼
    	Widget _signUp(BuildContext context) {
    		return RaisedButton(
    			color: signUpButtonColor,
    			textColor: signUpTextColor,
    			child: Text("회원가입"),
    			onPressed: () {
    				Navigator.push(context, MaterialPageRoute(builder: (context) => SignUp()));
    			}
    		);
    	}
    	@override
    	Widget build(BuildContext context) {
    		return Scaffold(
    			backgroundColor: Colors.white,
    			body: Center(
    				child: ListView(
    					padding: const EdgeInsets.symmetric(horizontal: 20.0),
    					shrinkWrap: true,
    					children: [
    						Form(
    						  key: _formKey,
    						  child: Column(
    						    children: [
    						      _email,
    						      SizedBox(height: 20.0),
    						      _password,
    						      SizedBox(height: 20.0),
    						    ],
    						  ),
    						),
    						Row(
    							mainAxisAlignment: MainAxisAlignment.center,
    							children: [
    								_login(context),
    								SizedBox(width: 20.0),
    								_signUp(context)
    							],
    						)
    					],
    				),
    			),
    		);
    	}
    }
And lastly, error gif is this.  
![](https://user-
images.githubusercontent.com/35518072/43187987-02eb25d0-902e-11e8-81f7-bf326b59faf3.gif)