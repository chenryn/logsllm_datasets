```{=html}
```
::: {.top .hr}
------------------------------------------------------------------------
:::
::: {.section .feature3}
[]{#c07.xhtml#c07-fea-0001}
### LAB 7.1:ZENMAP AND WIRESHARK {#c07.xhtml#head-2-53}
::: section
[]{#c07.xhtml#c07-sec-0005}
```{=html}
```
::: {.top .hr}
------------------------------------------------------------------------
:::
::: {.section .feature3}
### NOTE {#c07.xhtml#head-3-4}
You will need to use three tools to make this lab work: a terminal
window, Zenmap, and Wireshark. I am running this lab on a Windows 10
machine where I can open a command shell. You used Zenmap in [Chapter
3](../Text/c03.xhtml). You can download Wireshark from
`www.wireshark.org`.
:::
```{=html}
```
::: {.top .hr}
------------------------------------------------------------------------
:::
1.  [Open a terminal window. Run the following command: `ipconfig /all`.
    Look for the IP address on your Wi‐Fi network interface
    card.]{#c07.xhtml#c07-li-0006}
2.  [Open Zenmap. In the Target field, add the IP address identified in
    the previous step. In the Profile field, leave the default of
    Intense scan.]{#c07.xhtml#c07-li-0007}
3.  [Open Wireshark. On the welcome page as you saw in [Figure
    7.1](#c07.xhtml#c07-fig-0001), identify the Wi‐Fi interface that
    corresponds with step 2. Double‐click the Wi‐Fi connection. It will
    start capturing data.]{#c07.xhtml#c07-li-0008}
4.  [Go back to Zenmap and click the Scan button. On a single asset, the
    Nmap scan may last a to 2 minutes.]{#c07.xhtml#c07-li-0009}
5.  [When the Nmap scan is done, return to Wireshark and click the red
    box under the word Edit. This will stop the capture, and you now
    have data to save and analyze.]{#c07.xhtml#c07-li-0010}
6.  [With the Nmap window next to the Wireshark window, you will see
    traffic in Wireshark you can identify as the Nmap scan. During an
    Intense scan, Nmap will attempt to resolve
    DNS.]{#c07.xhtml#c07-li-0011}
7.  [In Wireshark, look at the Protocol column for any DNS traffic. If
    you cannot find it by scrolling, try clicking the word *protocol* in
    the top pane. Each column can be sorted in ascending and then
    descending order just by clicking the column
    headings.]{#c07.xhtml#c07-li-0012}
8.  [To save the network traffic you just sniffed in Wireshark, go to
    File ➪ Save, name the file **nmap**, and click
    Save.]{#c07.xhtml#c07-li-0013}
:::
::: {.bottom .hr}
------------------------------------------------------------------------
:::
:::
```{=html}
```
[]{#c07.xhtml#Page_90 .pagebreak title="90" role="doc-pagebreak"}In any
Wireshark menu, items will be grayed out if the feature isn\'t
available. You cannot save a file if you haven\'t captured any data.
Most of the Wireshark menu has the standard File, Edit, View, and
Capture options. The Analyze menu allows you to manipulate filters,
enable or disable dissection of protocols, or follow a particular stream
of data. The Telephony menu is my favorite for analysis of voice
traffic. In the Telephony menu, you can build flow diagrams and display
statistics.
Capture filters are set before starting a packet capture. Display
filters are not. In the Welcome To Wireshark window, you can find the
capture filter just above the interfaces list. For instance, if you want
to capture traffic only from a specific IP address, the filter would
look like this: host 192.168.1.0. To capture traffic over a specific
port, the filter would look like this: port 53. Double‐click an
interface to begin the capture.
Now that you have your first capture started, the top pane is the packet
list. The first column shows relationships between packets. [Figure
7.4](#c07.xhtml#c07-fig-0004){#c07.xhtml#R_c07-fig-0004} shows the
relationships between the selected packet and other "conversations" you
captured. In line 3 under the No. column, you see the first packet of a
conversation represented by a right angle, and line 4 continues with a
solid line. Lines 5 and 6 start with a dotted line, which signifies that
these two captured packets are not part of the conversation started in
lines 3 and 4.
![[**[Figure 7.4](#c07.xhtml#R_c07-fig-0004){#c07.xhtml#c07-fig-0004
role="doc-backlink"}:**]{.figureLabel} Showing conversation
relationships](Images/c07f004.jpg){.center width="751" height="161"}
[]{#c07.xhtml#Page_91 .pagebreak title="91" role="doc-pagebreak"}The
next pane under the packet traffic is the packet details pane. This pane
shows the protocols and fields of the packet selected in the pane above.
The protocols and fields can be expanded and collapsed as needed. As you
see in [Figure 7.5](#c07.xhtml#c07-fig-0005){#c07.xhtml#R_c07-fig-0005},
you can also right‐click a packet for options in the packet list pane.
Some fields have special generated fields such as additional information
that isn\'t presented in the captured data, which is shown in square
brackets. There will be links between packets if a relationship is
found. These will be blue and underlined, and you can move from packet
to packet.
![[**[Figure 7.5](#c07.xhtml#R_c07-fig-0005){#c07.xhtml#c07-fig-0005
role="doc-backlink"}:**]{.figureLabel} Right‐clicking a
packet](Images/c07f005.jpg){.center width="751" height="332"}
The packets bytes pane at the bottom of the window contains all the
hexadecimal code of each packet. Each line of text contains 16 bytes.
Each byte (8 bits) of packet capture is represented as a two‐digit
hexadecimal. In [Figure
7.6](#c07.xhtml#c07-fig-0006){#c07.xhtml#R_c07-fig-0006}, you can see
the direct relationship between the IP type and the hexadecimal code.
![[**[Figure 7.6](#c07.xhtml#R_c07-fig-0006){#c07.xhtml#c07-fig-0006
role="doc-backlink"}:**]{.figureLabel} Hexadecimal
representation](Images/c07f006.jpg){.center width="727" height="617"}
For your second capture, repeat the steps in the preceding lab but
instead of doing an Nmap scan, open the browser of your choice and
navigate to `www.example.com`. The Nmap capture was slow compared to
this. The second you open the browser, you see an explosion of packets
as your home page loads. Navigate to another site that you usually log
into, like an email account or a bank. Log in as you usually do, but
watch your Wireshark traffic as you complete that task.
Since I have explained how to take a capture, it is important for me to
discuss where to take a capture. If you are in a large enterprise
environment and there was an issue with network performance, the
placement of the network sniffer is important. Place Wireshark as close
to the employees and/or customers to identify any traffic issues from
their perspectives. If people are complaining about a certain server on
the network, you can move Wireshark in proximity to that server to find
the problem. One best practice is to put Wireshark on a laptop and move
around your location while you\'re tracking down these
problems.[]{#c07.xhtml#Page_92 .pagebreak title="92"
role="doc-pagebreak"}
:::
::: section
[]{#c07.xhtml#c07-sec-0006}
## Filters and Colors {#c07.xhtml#head-2-54}
Wireshark uses display filters to concentrate on interesting packets
while hiding the boring ones. You can select packets based on protocol,
value, or comparison. To filter packets based on protocol, type in the
protocol you want to narrow down to, as shown in [Figure
7.7](#c07.xhtml#c07-fig-0007){#c07.xhtml#R_c07-fig-0007}. Press Enter to
accept the filter selection. When you\'re using a filter, it only
changes the view, not the contents. The capture file remains intact. To
remove a filter, click the clear button, which is the X to the right of
the filter.
![[**[Figure 7.7](#c07.xhtml#R_c07-fig-0007){#c07.xhtml#c07-fig-0007
role="doc-backlink"}:**]{.figureLabel} Sorting packet capture based on
TCP traffic](Images/c07f007.jpg){.center width="751" height="119"}
You can compare the values inside packets as well as combine expressions
into far more specific expressions. Every field inside a packet can be
used as a string, such as `tcp`. A `tcp` string will show all packets
containing the TCP protocol. Once you have chosen the strings you want
to knit together, you choose the appropriate operator. [Table
7.2](#c07.xhtml#c07-tbl-0002){#c07.xhtml#R_c07-tbl-0002} lists commonly
used filters.
```{=html}
```
```{=html}
```
[**[Table 7.2](#c07.xhtml#R_c07-tbl-0002){#c07.xhtml#c07-tbl-0002
role="doc-backlink"}:**]{.figureLabel} Filter operators
```{=html}
```
  ENGLISH    OPERATOR   DESCRIPTION      EXAMPLE
  ---------- ---------- ---------------- ------------------------
  eq         `==`       Equal            `ip.src==192.168.1.0`
  ne         `!=`       Not equal        `Ip.src!=192.168.1.0`
  gt         `>`        Greater than     `frame.len>16`
  lt         `
```
[]{#c07.xhtml#Page_93 .pagebreak title="93"
role="doc-pagebreak"}Colorizing the traffic can be an effective filter
to locate and highlight packets you may be searching for. You can choose
to color packets that indicate errors, anomalies, breaches, or evidence.
Wireshark has predefined coloring rules in the Edit menu under
Preferences. Your coloring rules are placed at the top of the list by
default, so your rules will trump any that come after.
For temporary colors, right‐click a packet, go to Colorize Conversation,
and slide down the list of types of traffic. To colorize the
conversation, choose the protocol and select the color you would like
that conversation to be. For example, you can color all IPv4 traffic
blue and all Ethernet traffic red. This color rule will stay in effect
until you restart Wireshark. You can also mark packets by right‐clicking
them. They will be shown with a black background, regardless of coloring
rules. Marking a packet is helpful while analyzing a large capture,
almost like a bookmark holding your place.
If you right‐click a packet, you also have the ability to create packet
comments. This is an excellent way to leave information that you have
discovered, document a hypothesis, or communicate with other team
members about network traffic you suspect is causing an issue.
:::
::: section
[]{#c07.xhtml#c07-sec-0007}
## Inspection {#c07.xhtml#head-2-55}
When you start inspecting and comparing packets in a packet capture,
you\'ll notice the second column is based on time. Most computer systems
start counting at 0, and Wireshark is no different. The first column is
set to a time value of 0, []{#c07.xhtml#Page_94 .pagebreak title="94"
role="doc-pagebreak"}and all other timestamps base their times on that
first packet capture. To view statistics for a number of packets, select
Statistics on the menu. The statistics vary according to protocols,
address, port, streams, or conversations.
A conversation is a pair of physical or logical entities communicating.
Conversations can include MAC, ARP, ICMP pings, or port numbers. To
compare the conversations in the packet capture, go to the Statistics
tab, and then inside that menu, go to Conversations. The default tabs
across the top of the Conversation dialog box will show you the data
broken down into Ethernet, IPv4, IPv6, TCP, and UDP. Each line shows the
values for exactly one conversation. To add other conversation
statistics, click Conversation Types in the lower‐right corner. When
working with a large file, sorting on the bytes transferred between
hosts enables you to find the most active communication based on packets
or duration of conversation. In [Figure
7.8](#c07.xhtml#c07-fig-0008){#c07.xhtml#R_c07-fig-0008}, notice the
column for IPv4 conversations has been sorted to show the most active
conversation between source and destinations.
![[**[Figure 7.8](#c07.xhtml#R_c07-fig-0008){#c07.xhtml#c07-fig-0008
role="doc-backlink"}:**]{.figureLabel} Wireshark conversations sorted by
IPv4 protocol](Images/c07f008.jpg){.center width="751" height="393"}
There is another tool in Wireshark that logs anomalies found in a
capture file: the Expert Info tool. The idea behind this tool is to
provide a better understanding and display of notable network behavior.
Both novice and expert users can solve issues quickly rather than
combing through every packet manually. Expert info, as you see in
[Figure 7.9](#c07.xhtml#c07-fig-0009){#c07.xhtml#R_c07-fig-0009}, is
considered a hint.
![[**[Figure 7.9](#c07.xhtml#R_c07-fig-0009){#c07.xhtml#c07-fig-0009
role="doc-backlink"}:**]{.figureLabel} Expert Info tool color‐coded
"hints"](Images/c07f009.jpg){.center width="751" height="298"}
[]{#c07.xhtml#Page_95 .pagebreak title="95" role="doc-pagebreak"}Every
Expert Info type has a specific severity level. [Table
7.3](#c07.xhtml#c07-tbl-0003){#c07.xhtml#R_c07-tbl-0003} lists the
different Expert Info severity levels.
```{=html}
```
```{=html}
```
[**[Table 7.3](#c07.xhtml#R_c07-tbl-0003){#c07.xhtml#c07-tbl-0003
role="doc-backlink"}:**]{.figureLabel} Expert Info severity levels
```{=html}
```
  LEVEL     COLOR    EXPLANATION
  --------- -------- -------------------------------
  Chat      Blue     Informational, usual workflow
  Note      Cyan     Normal errors
  Warning   Yellow   Unusual errors
  Error     Red      Serious problem
```{=html}
```
You can configure a graph of the captured network packets. You can
configure the I/O graph to see the overall traffic as well as highs and
lows in your traffic, which is typically based on a per‐second,
per‐packet rate. You can use this to rectify problems, and you can even
use it for monitoring. By default, the y‐axis will set the interval to 1
second, and the y‐axis will be packets like you see in [Figure
7.10](#c07.xhtml#c07-fig-0010){#c07.xhtml#R_c07-fig-0010}. Click any
point on the graph to focus on that packet in the background. There are