such as QUAD 16 × 16 with many equal-cost paths and poorly
on networks with long cycles that trigger its “counting-to-inﬁnity”
behavior. As expected, both dv+p and lv performed similarly: they
routinely did better than ls but could not take advantage of the
multiple equal-cost paths in QUAD networks as well as dv did.
The XL algorithm performed consistently well on all networks.
Like dv, it was able to take advantage of path redundancy in the
QUAD synthetic network. It also did well on “leafy” networks like
FUEL1221, where CVP played a major role in reducing communi-
cation.
We note that XL algorithm performed particularly well in the
ﬂapping model. Why is this? The reason is that the XL algorithm
p0
p1
0.25 0.10
0.25 1.00
λ−1
0
1 d
2 d
Standard
Flapping
σ0
μ1
μ0
λ−1
σ1
1
1 h 1 m 10 s 1 m 10 s
10 s 10 s
1 s
1 s 10 s
Table 3: Parameters used to generate link events according to the generator link
event model described in Section 5.1. Mean time-to-failure is controlled by the λ−1
parameter and the probability of a repeat failure by the p1 parameter. Units: d – days,
h – hours, m – minutes, s – seconds.
0
Standard model
Flapping model
dv
CROWN 64
3.13
H. 16 × 16 0.95
Q. 16 × 16 0.12
ABILENE
0.82
ARPANET
2.33
7.90
FUEL1221
FUEL1239
5.01
F. 1221C
0.79
0.99
F. 1239C
dv+p
1.11
0.69
0.40
0.71
1.02
0.63
0.25
0.45
0.25
lv
1.10
0.65
0.39
0.71
1.02
0.62
0.26
0.46
0.25
xl
0.41
0.18
0.10
0.43
0.40
0.10
0.09
0.22
0.09
0.64
0.31
0.14
0.50
0.47
0.14
0.17
0.34
0.19
dv
0.85
0.28
0.06
0.88
1.80
7.05
1.21
0.39
0.21
dv+p
0.82
0.65
0.38
0.79
1.00
0.61
0.25
0.42
0.24
lv
0.82
0.60
0.37
0.79
0.99
0.60
0.25
0.42
0.24
xl
0.45
0.20
0.07
0.47
0.36
0.12
0.14
0.27
0.14
0.11
0.06
0.04
0.33
0.24
0.05
0.04
0.11
0.04
Table 4: Average number of messages after initialization, relative to ls (average of
10 simulation runs). The xl columns shows values for algorithm parameters  = 0.0
(ﬁrst value) and  = 0.5 (second value).
Standard model
Flapping model
dv
CROWN 64
3.41
H. 16 × 16 1.09
Q. 16 × 16 0.16
ABILENE
0.97
2.28
ARPANET
FUEL1221
7.32
FUEL1239
4.85
0.74
F. 1221C
0.95
F. 1239C
dv+p
1.07
0.73
0.45
0.77
0.91
0.46
0.23
0.38
0.22
lv
1.06
0.68
0.43
0.77
0.89
0.46
0.23
0.38
0.22
xl
0.46
0.23
0.14
0.55
0.45
0.09
0.11
0.26
0.11
0.68
0.35
0.18
0.64
0.51
0.12
0.20
0.37
0.22
dv
1.09
0.42
0.12
0.98
1.86
6.56
1.16
0.34
0.20
dv+p
0.79
0.71
0.44
0.83
0.89
0.44
0.21
0.35
0.22
lv
0.78
0.64
0.42
0.83
0.87
0.43
0.21
0.36
0.21
xl
0.49
0.24
0.10
0.55
0.39
0.10
0.16
0.30
0.17
0.17
0.09
0.07
0.46
0.28
0.05
0.05
0.16
0.05
Table 5: Average (over 10 simulations) of the maximum number of messages gen-
erated by any one node, relative to ls. The xl columns shows values for algorithm
parameters  = 0.0 (ﬁrst value) and  = 0.5 (second value).
CROWN 64
H. 16 × 16
Q. 16 × 16
ABILENE
ARPANET
FUEL1221
FUEL1239
FUEL1221C
FUEL1239C
Standard model
Flapping model
Med Avg Max Med Avg Max
1.39
1.00
1.44
1.00
1.40
1.00
1.18
1.00
1.00
1.41
1.33
1.00
1.41
1.00
1.33
1.00
1.00
1.41
1.02
1.05
1.02
1.01
1.02
1.01
1.04
1.02
1.04
1.00
1.00
1.00
1.00
1.00
1.00
1.00
1.00
1.00
1.01
1.02
1.01
1.01
1.01
1.01
1.02
1.01
1.02
1.43
1.45
1.43
1.22
1.45
1.34
1.41
1.35
1.42
tends to move away from ﬂapping links: The the ﬁrst time a link
fails, an update is sent to all nodes in whose shortest-path tree it
appears, that is, nodes that used the link to reach some destination.
When the same link comes back up, many of the nodes which used
it keep their current path because it is only slightly worse than the
previous path which used the link. As a result, fewer nodes now
have the link in the shortest-path tree, so that when it fails again,
they are not affected. Thus, after the ﬁrst failure, the effects of the
link are generally limited to a small neighborhood around the link
where the link is a signiﬁcant fraction of path costs.
Per-Node Communication. Table 5 shows the maximum number
of messages generated by any single node during the simulation,
relative to ls. In contrast to the total communication, this number
shows the maximum load placed on an individual node rather than
the network as a whole. Although it is does not show short-term
load on a node, it does show whether a routing algorithm spreads
the communication costs evenly across the network or whether it
creates bottleneck routers.
These results do not differ markedly from the total communica-
tion results shown in Table 4, indicating that none of the algorithms
loaded any one node signiﬁcantly more heavily than the link-state
algorithm, in which the number of messages sent by a node is pro-