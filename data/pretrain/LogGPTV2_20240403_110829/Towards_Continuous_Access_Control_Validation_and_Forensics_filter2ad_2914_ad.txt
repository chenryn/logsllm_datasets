### Handling the Entire Wikipedia Dataset

P-DIFF is capable of handling the entire Wikipedia dataset. Our evaluation in §10.7 shows that P-DIFF can train a model from 320 million log entries in just 19 minutes.

### Case Studies

#### Case 1: Single Rule Change (Should Not Split)
- **Access Logs:**
  - T1, GET, /proj/1.htm DENY
  - T2, GET, /proj/1.htm ALLOW
  - T3, GET, /proj/2.htm DENY
  - T4, GET, /proj/2.htm ALLOW

- **Policy Change:**
  - GET, /proj/1.htm DENY → ALLOW
  - GET, /proj/2.htm DENY → ALLOW

- **Purity Metrics:**
  - pallow: 0.5, pdeny: 0.5
  - Gini Impurity: 0.5
  - Entropy: 1
  - ChangeCount: 3

#### Case 2: Multiple Rule Changes (Should Split)
- **Access Logs:**
  - T1, GET, /proj/1.htm DENY
  - T2, GET, /proj/2.htm DENY
  - T3, GET, /proj/1.htm ALLOW
  - T4, GET, /proj/2.htm ALLOW

- **Policy Change:**
  - GET, /proj/1.htm DENY → ALLOW
  - GET, /proj/2.htm DENY → ALLOW

- **Purity Metrics:**
  - pallow: 0.5, pdeny: 0.5
  - Gini Impurity: 0.5
  - Entropy: 1
  - ChangeCount: 1

- **Split Condition:**
  - if prefix2 == "/proj/1.htm"
  - ChangeCount decreases from 3 to 0 after splitting

### Use Cases

P-DIFF supports two primary use cases: change validation and forensic diagnosis, built on its TCDT-based access control policy learning as described in §6–§8.

#### 9.1 Change Validation

P-DIFF continuously monitors incoming access results from access logs. For each access, it calculates the expected result (ALLOW or DENY) based on the policy maintained in the TCDT. If the observed access result deviates from the expected result, P-DIFF treats this deviation as a potential policy change. It then notifies system administrators (sysadmins) with the changed rules and asks for validation. If the sysadmins confirm the change, P-DIFF updates the TCDT. Otherwise, it detects an access control misconfiguration, discards the access result, and continues monitoring new access results until the misconfiguration is fixed.

- **Example:**
  - At timestamp T5, P-DIFF calculates the access result as DENY, but the access log shows ALLOW.
  - This deviation triggers a validation request.

#### 9.2 Forensic Analysis

Given an access of interest (e.g., an illegal access that steals confidential information), P-DIFF can pinpoint the policy change that permitted the access by searching the policy evolution history maintained in the TCDT. This is achieved by finding the path in the TCDT that determines the result of the access and backtracking through the time series to find the root-cause policy change.

- **Example:**
  - For a target access at T4, P-DIFF finds the corresponding leaf node in the TCDT and backtracks to find the root-cause policy change between T2 and T3.

Forensic analysis can be performed in real-time or postmortem by reading historical access logs and building the TCDT.

### Evaluation

We evaluate P-DIFF using controlled experiments based on datasets from five real-world deployments, including the Wikipedia website, a software company's firewall, and three websites hosted by academic organizations. Table 4 describes these datasets.

#### 10.1 Systems and Datasets

- **Wikipedia:**
  - A free online encyclopedia with 33 million registered users.
  - Access logs collected from a public dataset of request traces in September 2007.
  - Access control implemented by the MediaWiki wiki engine.
  - Protected resources include full-protected and semi-protected pages.

- **Center:**
  - A web server hosting home pages, online tools, and personal pages for a research center.
  - Resource protection through Apache HTTPD server configuration.
  - Protected resources include public and internal websites.

- **Course:**
  - A department-wide course website hosting 300+ courses annually.
  - Resources protected by Linux file permissions.
  - Protection policies maintained by instructors and teaching assistants.

- **Company:**
  - An Iptable firewall deployed by a software company serving millions of users.
  - Policies include blocking IPs and IP ranges.

- **Group:**
  - A website hosting group and personal pages for a research group.
  - Resource protection for private web pages.

#### 10.2 Experimental Design

To evaluate P-DIFF, we need:
1. Access logs recording access requests and results.
2. Ground truth access control policy changes.

- **Wikipedia:**
  - Policy changes obtained from Wikipedia's page protection change history.

- **Other Datasets:**
  - Randomly generated policy changes and synthesized access results.
  - Different types of policy changes and access frequencies (rare, normal, frequent).

#### 10.3 Overall Results

##### 10.3.1 Change Validation

We divide the time span of the access logs into two parts: 70% for training and 30% for testing. P-DIFF detects 93 out of 99 rule changes with 12 false positives and 6 false negatives. It works effectively on small education systems, medium commercial systems, and large-scale popular websites like Wikipedia.

##### 10.3.2 Forensic Analysis

For 303 accesses of interest, P-DIFF pinpoints the root-cause policy change for 283 (93%). The inferred TCDT correctly encodes 114 out of 123 changed rules on normal objects and 169 out of 180 changed rules on hierarchical objects.

### Summary

P-DIFF demonstrates high effectiveness in both change validation and forensic analysis across various systems and scales, making it a robust tool for access control policy management.