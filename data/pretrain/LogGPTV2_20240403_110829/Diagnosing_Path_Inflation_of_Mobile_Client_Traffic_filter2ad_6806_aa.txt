# Diagnosing Path Inflation of Mobile Client Traffic

## Authors
- Kyriakos Zarifis<sup>1</sup>
- Tobias Flach<sup>1</sup>
- Srikanth Nori<sup>1</sup>
- David R. Choffnes<sup>2</sup>
- Ramesh Govindan<sup>1</sup>
- Ethan Katz-Bassett<sup>1</sup>
- Zhuoqing Morley Mao<sup>3</sup>
- Matt Welsh<sup>4</sup>

<sup>1</sup> University of Southern California, Los Angeles, CA 90089, USA  
<sup>2</sup> Northeastern University, Boston, MA 02115, USA  
<sup>3</sup> University of Michigan, Ann Arbor, MI 48109, USA  
<sup>4</sup> Google Inc., Mountain View, CA 94043, USA  

Contact: {kyriakos, flach, snori, ramesh, ethan.kb}@usc.edu, PI:EMAIL, PI:EMAIL, PI:EMAIL

## Abstract
As mobile Internet usage increases, carriers and content providers must optimize their network topologies, routing configurations, and server deployments to ensure good performance for mobile users. Understanding the impact of Internet topology and routing on mobile users requires extensive, longitudinal network measurements from mobile devices. This study is the first to use such data to quantify and understand the causes of geographically circuitous routes from mobile clients, based on 1.5 years of measurements from devices on four US carriers. We identify key factors affecting the Internet routes taken by mobile traffic (client location, server locations, carrier topology, carrier/content-provider peering) and develop a methodology to diagnose specific causes of inflated routes. Although some carrier networks have improved performance in certain regions, many clients, even in major metropolitan areas, still experience geographically circuitous routes due to limitations in current topologies.

## 1. Introduction
The increasing popularity of mobile Internet necessitates that carriers and content providers engineer their topologies, routing configurations, and server deployments to maintain good performance for mobile users. A significant challenge is that performance varies over space and time as users move with their devices and providers evolve their topologies. Therefore, understanding the impact of Internet topology and routing on mobile users requires broad, longitudinal network measurements from mobile devices.

In this work, we are the first to identify and quantify the performance impact of several causes of inflated Internet routes taken by mobile clients, using a dataset of 901,000 measurements gathered from mobile devices over 18 months. Specifically, we focus on cases where the distance traveled along a network path is significantly longer than the direct geodesic distance between endpoints. Our analysis centers on performance with respect to Google, a large, popular content provider with extensive peering and server hosting worldwide. This rich connectivity allows us to expose the topology of carrier networks and inefficiencies in current routing. We constrain our analysis to devices located in the US, where our dataset is most dense.

Our key findings are as follows:
1. **Path Inflation is Widespread**: In Q4 2011, we observed substantial path inflation in at least 47% of measurements from devices across three out of four major US carriers. While the average fraction of samples experiencing path inflation decreased over the subsequent year, one-fifth of our samples continued to exhibit inflation.
2. **Classification of Root Causes**: We classify the root causes of path inflation and develop an algorithm to identify them. Specifically, we determine whether the cause is due to the mobile carrier’s topology, peering between the carrier and Google, or the mapping of mobile clients to Google servers.
3. **Impact on Network Latencies**: We characterize the impact of path inflation on network latencies, which are critical for interactive workloads typical in the mobile environment. The impact on end-to-end latency varies significantly depending on the carrier and device location, and changes over time as topologies evolve. We estimate that additional propagation delay can range from 5-50ms, which is significant for service providers. Addressing the source of inflation can reduce download times by hundreds of milliseconds.
4. **Public Dataset and Visualization Tool**: We make our dataset publicly available and provide an online tool for visualizing our network performance data.

## 2. Background and Related Work
### Background
With the proliferation of Internet-connected mobile devices, it is essential to understand the factors affecting Internet service performance from these devices. This paper focuses on two primary factors: the carrier topology and the routing choices and peering arrangements used by mobile carriers and service providers to provide Internet access.

A mobile device's carrier network can have multiple Internet ingress points, where the carrier's access network connects to the Internet. The carrier's network may also connect with a web service provider at a peering point, where these two networks exchange traffic and routes. DNS resolvers from the carrier and the service provider direct the client to a server by resolving the name of the service to a server IP address.

### Idealized Operation
This paper uses Google as the service provider to understand how mobile devices access its services. We make the following assumptions about how Google maps clients to servers to minimize latency:
1. **Globally Distributed Servers**: Google has globally distributed servers, forming a network that peers widely and densely with ISP networks.
2. **DNS for Topologically Nearby Servers**: Google uses DNS to direct clients (in our case, mobile devices) to topologically nearby servers.
3. **Accurate Client Mapping**: Google can accurately map mobile clients to their DNS resolvers.

Since Google's network aims to reduce client latency, it serves as an excellent case study to understand how carrier topology and routing choices align with efforts to improve client performance. Figure 1 illustrates the ideal case of a mobile device connecting to a Google server.

![Optimal Routing for Mobile Clients](fig1.png)

In this paper, we identify significant deviations from this ideal behavior, specifically metro-level path inflation, where traffic from a mobile client to a Google server exits the metropolitan area despite Google having a presence there. This inflation impacts performance by increasing latency.

### Example Inflation
Carrier topology determines where traffic from mobile hosts enters the carrier network. Prior work suggests that mobile carriers have relatively few ingress points. For example, traffic from a client in Los Angeles may enter the Internet in San Francisco if the carrier does not have an ingress point in Los Angeles. If the destination service has a server in Los Angeles, the topology can add significant latency compared to having an ingress in LA. Routing configurations and peering arrangements can also cause path inflation. As providers move services closer to clients, the location where carriers peer with a provider's network can significantly affect performance. For instance, if a carrier has ingress points in Seattle and San Francisco but peers with a provider only in San Francisco, it may route Seattle traffic to San Francisco even if the provider has a presence in Seattle.

### Related Work
Research from a decade ago showed that interdomain routes suffer from path inflation due to infrastructure limitations and routing policies. Recent studies have investigated suboptimal performance of clients of Google's CDN, showing that clients in the same geographical area can experience different latencies to Google's servers. Cellular networks present new challenges and opportunities for studying path inflation. One study demonstrates differences in metro-area mobile performance but does not investigate the root causes. Other work shows that routing over suboptimal paths due to a lack of nearby ingress points can increase RTT latency by 45% due to the additional distance traveled, compared to idealized routing. We show how topologies and path inflation have evolved and that ingress point location is only one of several factors affecting performance.

## 3. Dataset
### Data Collected
Our data consists of network measurements (ping, traceroute, HTTP GET, UDP bursts, and DNS lookups) issued from Speedometer, an internal Android app developed by Google and deployed on thousands of volunteer devices. Speedometer conducts approximately 20-25 measurements every five minutes, as long as the device has sufficient remaining battery life (80%) and is connected to a cellular network. Our analysis focuses on measurements toward Google servers, including 310K traceroutes, 300K pings, and 350K DNS lookups issued in three three-month periods (Q4 2011, Q2 2012, and Q4 2012). We focus on measurements issued by devices in the US, where the majority of users are located, with a particular density of measurements in areas with large Google offices. All users running the app have consented to sharing collected data in an anonymized form. Some fields are stripped (e.g., device IP addresses, IDs), while others are replaced by hash values (e.g., HTTP URLs). Location data is anonymized to the center of a region that contains at least 1000 users and is larger than 1 km².

The above measurements are part of a dataset published to a Google Cloud Storage bucket and released under the Creative Commons Zero license. We also provide Mobile Performance Maps, a visualization tool to navigate parts of the dataset, understand network performance, and supplement the analysis in this paper: [http://mpm.cs.usc.edu](http://mpm.cs.usc.edu).

### Finding Ingress Points
To identify the locations of ingress points, we graphed the topology of routes from mobile devices to Google, as revealed by the traceroutes in our dataset. We observed that traceroutes from clients in the same regions tend to follow similar paths. We used the DNS names of routers in those paths to identify the location of hops where they enter the public Internet. Generally, the traceroutes form well-defined structures, starting with private or unresolvable addresses, where all measurements from a given region reach the Internet in a single, resolvable location, typically a point of presence of the carrier's backbone network. We define this location as the ingress point.

### Finding Peering Points
To infer peering locations between the carriers and Google, we identified the last hop before entering Google’s network and the first hop inside it (identified by an IP address from Google’s blocks) for each path. Using location hints in the hostnames of those hop pairs, we inferred peering locations for each carrier. In cases where the carrier does not peer with Google (i.e., sends traffic through a transit AS), we used the ingress to Google’s network as the inferred peering location.

## 4. A Taxonomy of Inflated Routes
### Types of Path Inflation
Table 1 shows the fraction of routes that incurred a metro-level path inflation for traceroutes in our dataset from the four largest mobile carriers in the US.

| Carrier | Q4 2011 | Q2 2012 | Q4 2012 |
|---------|---------|---------|---------|
| AT&T    | 0.98    | 0.21    | 0.20    |
| Sprint  | 0.98    | 0.21    | 0.47    |
| T-Mobile| 0.00    | 0.65    | 0.15    |
| Verizon | 0.10    | 0.25    | 0.38    |

For three of the four carriers, more than half of all traceroutes to Google experienced a metro-level deviation in Q4 2011. Nearly all measurements from AT&T customers traversed inflated paths to Google. These results are biased toward the locations of users in our dataset and are not intended to be generalized. Nevertheless, at a high level, this table shows that metro-level deviations occur in routes from the four major US carriers.