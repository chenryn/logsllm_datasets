title:IPNL: A NAT-extended internet architecture
author:Paul Francis and
Ramakrishna Gummadi
IPNL: A NAT-Extended Internet Architecture(cid:3)
Paul Francis
Tahoe Networks
Ramakrishna Gummadi
UC Berkeley
ABSTRACT
This paper presents and analyzes IPNL (for IP Next Layer), a NAT-
extended Internet protocol architecture designed to scalably solve
the address depletion problem of IPv4. A NAT-extended architec-
ture is one where only hosts and NAT boxes are modiﬁed. IPv4
routers and support protocols remain untouched. IPNL attempts to
maintain all of the original characteristics of IPv4, most notably ad-
dress preﬁx location independence. IPNL provides true site isola-
tion (no renumbering), and allows sites to be multi-homed without
polluting the default-free routing zone with per-site preﬁxes. We
discuss IPNL’s architectural beneﬁts and drawbacks, and show that
it comes acceptably close to achieving its goals.
1.
INTRODUCTION
The IP architecture has undergone steady change over the last
10 years or so. The most signiﬁcant change has been the introduc-
tion and spread of NAT (Network Address Translator) [9], and the
resulting loss of end-to-end addressability. Despite this loss, the
Internet has seen, and, we believe, will continue to see nearly all of
its tremendous growth in a NAT’ed world. How can this be, if end-
to-end addressability is so fundamentally important to the Internet?
The answer is “obvious”—the dominant applications of the In-
ternet, such as email and web, are client/server applications. Only
the servers need to be globally addressable. As long as the servers
are not behind NATs, they are addressable and everything can be
made to work. The kinds of applications that are disabled by NAT,
including so-called peer-to-peer applications, simply have not been
important economic drivers of the Internet.
But this cannot be all of the answer. It isn’t enough to say that
NAT has spread because it doesn’t break client/server applications.
NAT must also be providing some beneﬁts.
1.1 Pros and Cons of NAT
The main obvious beneﬁt of NAT is that it expands the IPv4 ad-
dress space. The second important beneﬁt of NAT is that it isolates
a site’s address space from the global address space1. This address
(cid:3)Work done while both authors were at ACIRI.
A site is deﬁned loosely as a private IP network that connects to
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
SIGCOMM’01, August 27-31, 2001, San Diego, California, USA.
Copyright 2001 ACM 1-58113-411-8/01/0008 ...$5.00.
isolation beneﬁts both the provider and the subscriber. A site be-
hind a NAT box can change providers without having to renumber
internal hosts. Likewise, providers can freely renumber their net-
works for better address aggregation. We suspect that address iso-
lation is one of the primary reasons that NAT is as popular as it is,
and that the IETF has underestimated the appeal and importance of
this feature.
Because of this address isolation, a NAT’ed site can be attached
to multiple ISPs (Internet Service Providers) without having the
site’s address preﬁx advertised across the default-free routing zone
of the Internet. Because of this, it can be argued that NAT is a key
technology responsible for what limited scalability the Internet has.
The primary negative aspect of NAT is that it inhibits the intro-
duction of certain kinds of peer-to-peer applications. It does this
in two ways. First, a host behind a NAT box is not generally ad-
dressable from the global Internet, at least not in the traditional
pre-NAT way. Second, some peer-to-peer applications fail to work
properly in the face of address translation or port translation. These
applications require application layer gateways in the NAT boxes.
An example of such an application is SIP (Session Initiation Proto-
col) [13].
A second negative aspect of NAT is that it complicates scalable
network operation and new protocol and application design. Every-
thing must now take into consideration the various possible NAT
deployments, of which there are many. So while it is possible to
address hosts behind NAT boxes, doing so is much more compli-
cated than it would be with global IP addresses. For instance, a
given port at the NAT box can redirect packets to a given address
and port. Or, the NAT box can snoop SIP, assign port translations,
and modify SIP messages accordingly.
A signiﬁcant part of the problem with NAT is that there has been
little effort on the part of the Internet community to design and
standardize ways of interoperating with NAT boxes, and making
them easier to deal with. When the ﬁrst commercial NAT products
were being sold, the IAB (Internet Architecture Board) and IETF
took a “just say no” attitude towards NAT, assuming that IPv6 [6]
would take over before NAT spread too far. It is only this year, a
decade after NAT was ﬁrst published, that the IETF has decided to
work to improve interoperating with NAT2.
1.2 An Extension to NAT
Given the popularity of NAT, its success at mitigating the ad-
the Internet via one or more providers. A site may be as large as a
global enterprise network or as small as a single home.
The midcom (middlebox communication) working group is char-
tered with the task of enabling communications between applica-
tions and NATs and ﬁrewalls. This is in contrast with the several
years old NAT working group, which was primarily chartered with
documenting NAT and the problems associated with it.
dress depletion and scaling problems of IPv4, the existence of an
economic driver for its deployment, and the simple fact that the In-
ternet has thrived on a NAT’ed architecture, we were motivated to
ask whether some extension of NAT wouldn’t make for a genuinely
suitable Internet architecture. That is the question addressed by this
paper.
This question leads to two more questions:
1. What constitutes a suitable Internet architecture, and
2. What constitutes an extension of NAT (versus a whole new
Internet protocol)?
We have chosen to deﬁne a suitable Internet architecture as one
that preserves the original characteristics of IPv4 while solving its
scalability and address depletion problems. These characteristics
include:
the ﬁrewall out-of-band4, is the next likely step in the evolution of
the Internet.
1.3 IPNL: IP Next Layer
This paper presents a NAT-extended protocol called IPNL, for
IP Next Layer. The purpose of pursuing a totally new design at
this relatively late stage in the IPng process is not so much to try
to supplant IPv6. Rather, we wish to shed light on a number of
questions that remain relevant a full decade after the ﬁrst wave of
IPNG proposals, including a number of NAT-extended proposals,
documented in RFC1380 [12].
These questions include:
1. Can a NAT-extended protocol achieve the original character-
istics of IPv4, and therefore serve as a long-term architec-
ture?
1. All hosts have long-lived, globally routable addresses (if they
so choose) that serve to also identify the host.
2. Can the router scaling problem be solved while maintaining
the original IPv4 characteristic of addressing independence?
2. Routers are stateless—they do not require per-connection state,
and failure in a router does not result in failure of the connec-
tions3 going through them if an alternate path exists.
3. A network’s address preﬁx is assigned independently of where
the network attaches to the Internet.
4. Packets cannot be easily hijacked by rogue or misconﬁgured
hosts that are not on the physical path of the packets. In IPv4,
this characteristic derives from the fact that addresses are
both locators and identiﬁers, and that routers enforce packet
delivery to the right location through hop-by-hop coordina-
tion and trust.
We emphasize that, in maintaining the characteristics of the orig-
inal IP while improving its scalability and size, we are, in essence,
trying to design a better protocol than IPv4.
Regarding the second question, we deﬁne an extension of NAT
as one that works by modifying only hosts and NAT boxes. In par-
ticular, existing IPv4 routers must not change, and, by extension,
the IPv4 layers of hosts must also not change. We also require no
changes to DNS, and no new global addressing authorities.
By allowing changes to hosts, we break one of the fundamen-
tal properties that has allowed NAT to succeed—that it can be de-
ployed without changes to hosts. This seems to us to be inevitable.
We cannot think of any way to signiﬁcantly improve NAT without
making changes to the host. Having said that, we can make the ob-
servation that not all host changes are equal. In particular, changes
above the transport layer are easier to deploy than changes below
the transport layer. Because we have chosen to maintain the orig-
inal characteristics of IPv4, we have been compelled to make our
changes below transport and above IPv4.
An alternative approach would be to forego trying to maintain
the original characteristics of IPv4, but allow simpler changes to
hosts. For instance, SIP provides end-to-end addressability in the
face of NATs, as long as the NAT boxes are SIP proxies or tightly
coordinated with SIP proxies. This NAT-as-SIP-proxy approach
is stateful, unscalable, has a costly setup, and is a single point of
failure (failure recovery would require additional changes to appli-
cations). Therefore, it loses some of the important characteristics
of the original IPv4 architecture.
Unless IPv6 gets deployed, however, it seems likely that a SIP-
like approach, where the host communicates with the NAT box and
3. Is a NAT-extended approach less expensive than a full re-
placement of IPv4?
We believe the answer to the ﬁrst two questions to be a qualiﬁed
“yes”. The original characteristics of IPv4 include long-lived ad-
dresses, robustness/statelessness, address independence, and packet
hijacking resistance. As will be shown in the remainder of this pa-
per, IPNL is somewhat inelegant in its approach to robustness and
hijack resistance. In both cases, additional complexity in the host’s
IPNL layer is required to bring IPNL close to IPv4 in those areas.
Except for that, we believe that we have succeeded in our goals.
As for the third question, more experience with IPNL would be
required to determine if it is less expensive than IPv6. In particu-
lar, the full set of protocols (routing protocols, mobility protocols,
multicast protocols, etc.) would have to be speciﬁed in order to
compare the two side-by-side. Nevertheless, we make some argu-
ments later on that suggest that a NAT-extended approach may be
less expensive to deploy than IPv6.
The major attributes of IPNL are as follows:
(cid:15) It is a NAT-extended architecture, which means that it maxi-
mizes reuse of the existing IPv4 infrastructure, primarily by
adding a new layer above IPv4 that is routed by NAT boxes.
(cid:15) It utilizes Fully Qualiﬁed Domain Names (FQDNs) as an
end-to-end host identiﬁer in packets.
(cid:15) It extends the IP address space such that the globally unique
IP address space forms the high order part of the IPNL ad-
dress, and the private IP address space forms its low order
part.
(cid:15) It completely isolates site addressing from global addressing.
The rationale for these attributes is as follows:
Infrastructure reuse: We make the assumption that reusing an
existing infrastructure lowers the cost of deploying a new protocol.
This reduction in cost comes not just from continued use of the cur-
rent IPv4 infrastructure (including the human skills needed to run
it), but also from shrinking the number of phases for deployment
of the new protocol from three to two. Speciﬁcally, deployment of
IPv6 requires three (concurrent) phases: 1) IPv4 hosts talking to
IPv6 hosts, 2) IPv6 hosts talking to each other tunneled over IPv4,
The term connection in this paper refers to data ﬂow between
transport layer entities.
Broadly stated, this is the approach being taken by the IETF mid-
com working group.
and 3) pure IPv6. Mechanisms to fully support all three phases and
their interactions must exist.
By architecting IPNL as a layer above IPv4, we avoid the third
phase. We assume that this signiﬁcantly reduces complexity (two
phases instead of three, one combination of phases instead of four).
For example, approximately half of RFC3056 (6to4) [2] is devoted
to interoperability between 6to4 and ”native” IPv6. In other words,
half of the complexity of RFC3056 comes from interactions be-
tween the second and third phases of IPv6 deployment. Having
said this, we are quick to point out that we have not analyzed the
costs of both approaches any deeper, so this is only an assumption
at this point.
FQDN Utilization: The motivation behind using FQDNs also
derives from an assumption of lowered deployment cost. In this
case, the lowered cost comes from 1) not having to deﬁne and ad-
minister a new global address space, and 2) being able to reuse
much of the existing support infrastructure and applications, in-
cluding host conﬁguration infrastructure (for example, DHCP [8]),
AAA infrastructure (for example, RADIUS [20]), and SIP [13], all
of which use FQDNs as the primary form of host identiﬁcation.
The use of the FQDN in this role, however, results in a somewhat
different architecture, and the costs and potential weaknesses of
this change must be considered.
Extended IP address space: This is a natural result of using the
existing topology of private address realms connected to each other
and the global IP Internet by NAT boxes. Again, by using existing
addresses and topological components (realms and NAT boxes), we
attempt to minimize deployment costs.
Isolated site addressing: This is the only major attribute that
doesn’t derive from an attempt to reduce costs. Rather, this attribute
is the cornerstone of our approach to achieving global scalability in
the face of multi-homed sites. The basic idea here is that if we can
completely isolate site operation from issues of global connectivity,
the ISPs are free to manage addresses as they see ﬁt. The impor-
tance of this cannot be understated, and can be understood in light
of the following thought experiment.
Consider the case where an ISP has, to pick a number, 50,000
home subscribers in a given address aggregation. The ISP would
like to modify the preﬁxes of half of these subscribers in order to
improve its aggregation. Now imagine the ISP having to coordinate
with 25,000 home subscribers in order to carry out this change in
preﬁx. Even with automatic renumbering mechanisms, it is highly
likely that many things will go wrong in the home networks, mak-
ing the whole process difﬁcult and expensive. If, on the other hand,
the home network addressing is isolated from global addressing,
the change could be made without having to contact the home sub-
scribers at all, and the whole process would be greatly simpliﬁed.
As part of site isolation, IPNL allows connections to survive
renumbering and address change “events” during their lifetime (Sec-
tion 3).
1.4 Outline
Because of space constraints, this paper does not give a complete
description of IPNL. Rather, it focuses only on the key architectural
aspects of IPNL. As a result, the reader will walk away from this
paper with a basic understanding of IPNL, but also with a host of
unanswered questions, some large, some small. For instance, this
paper does not describe how IPNL does mobility, multicast, host
auto-conﬁguration, anycast, or interworking between legacy IPv4
and IPNL hosts, even though these are obviously critical require-
ments. For these and other details, the interested reader is referred
to [11] for a complete speciﬁcation of IPNL.
Sections 2 through 5 describe how IPNL implements the cor-
responding four major attributes of IPNL listed above. Section 2
describes IPNL’s topology and addressing mechanisms, and lays
down the basic architectural constructs. Subsequently, each section
introduces additional key IPNL mechanisms; a basic understanding
of IPNL is obtained only after reading all four sections. Section 6
describes our prototype implementation. Section 7 compares IPNL
with other approaches, prominently IPv6, and Section 8 discusses
next steps.
2. TOPOLOGY, ADDRESSING, AND ROUT-
ING
The IPNL topology is the same as today’s Internet topology:
privately-addressed realms connected to the globally-addressed In-
ternet, and, sometimes, to each other, by NAT boxes. The NAT
boxes are called nl-routers, and the globally-addressed part of the
Internet is called the middle realm. Privately addressed realms are
called private realms.
An nl-router that connects a private realm with the middle realm
is called a frontdoor nl-router, or simply a frontdoor. An nl-router
that connects two private realms is called an internal nl-router. A
single physical device can be both a frontdoor and an internal nl-