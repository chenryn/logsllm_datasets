In this section, we present our main contribution, the tech-
nique of velocity modeling. This is an attempt to determine
if a given interface uses a counter to derive the value of
the IP ID in outgoing ICMP or TCP packets, and if so, to
model the rate at which the counter increases. This gives us
a model of the IP ID over time, which we can use to infer
aliases. While this technique has many possible uses, which
we discuss later in Section 6, we primarily focus on using
velocity modeling for alias resolution.
We developed a tool, RadarGun, for velocity-based alias
resolution. RadarGun is built on top of Scriptroute [18]. In-
stead of probing an address whenever its IP ID is needed, as
Ally does, RadarGun creates a model of the IP ID over time
and predicts the expected IP ID at various times. To do
this, RadarGun estimates the rate, or velocity, at which the
IP ID increases. Our insight is that probes sent to addresses
that are aliases for the same router will have similar veloc-
ities, while probes sent to two non-aliases will (with high
probability) show diﬀerent velocities. For example, Figure 3
shows two (non-alias) addresses with disparate velocities.
4.1 Collecting Data
To model the velocity of an IP address, RadarGun sends
probe packets (either UDP, eliciting an ICMP error message,
or TCP ACK, garnering a TCP RST) to the address and
records the IP ID of each response and the time it was re-
ceived. The set of responses forms a time series [16]. Radar-
Gun then ﬁts the responses from each address to a line, using
least squares linear regression. Thus each address that re-
turns more than three responses provides us with a slope
(velocity, in units of packets per second) and oﬀset (the y-
intercept at an arbitrary time—we choose the time that the
ﬁrst probe was sent).
D
I
P
I
 70000
 60000
 50000
 40000
 30000
 20000
 10000
 0
 0
205.124.244.154
137.164.25.11
 2000
 4000
 6000
 8000
 10000
Time (s)
Figure 3: Examples of routers with diﬀerent veloci-
ties. Both suggest that they can be modeled linearly.
TCP and UDP
3942 (43.5%)
TCP only
1121 (12.4%)
UDP only
658 (7.3%)
Neither
3335 (36.8%)
Table 1: Number of addresses that responded to
probing with diﬀerent protocols.
The analysis is complicated by the fact that counter-based
IP IDs wrap when they reach their maximum value (216−1).
To account for this, RadarGun keeps a counter of the num-
ber of times the IP ID has wrapped, nW rap, in an attempt
to model the IP ID as a monotonically-increasing counter
over an arbitrarily long time. RadarGun estimates the time
to wrap from the ﬁrst few samples observed from an address.
Wrapping needs to be taken into account in two situations:
when the IP ID of a probe is less than the IP ID of the previ-
ous probe, and when RadarGun has not seen a response from
an address for longer than the expected time to wrap. In
the ﬁrst case, RadarGun assumes the counter has wrapped
and increments nW rap. Because probes are spaced several
seconds apart, the chance that IP IDs arrive out of order
due to delay is minimal. In the second case, RadarGun in-
crements nW rap by the expected number of times that the
counter has wrapped, based on the initial estimate.
Another issue that frustrated data collection was the un-
responsiveness of routers. Tools like RadarGun and Ally
require addresses to respond to direct probes. To evaluate
the rate at which routers will respond to probes, we obtained
a set of 9,056 addresses that DisCarte [14] had discovered by
running traceroute between pairs of PlanetLab [13] nodes.
We probed each address with 200 TCP ACK packets sent
34 seconds apart and 200 UDP packets sent 35 seconds apart
(the probing rate was a function of Scriptroute’s internal
bandwidth limiting). Table 1 shows how many addresses
were responsive to each combination of protocols. Figure 4
shows how many responses were received for each protocol
from each address (note the addresses are sorted by num-
ber of probes returned for each protocol, and that the two
y-values associated with a point on the x-axis do not neces-
sarily correspond to the same address). As more addresses
responded to TCP probes, we used TCP probes to derive all
further results in this paper. However, our technique would
clearly beneﬁt from being able to use both TCP and UDP.
We leave to future work a study of whether routers use the
)
s
e
b
o
r
p
0
0
2
m
o
r
f
(
i
d
e
v
e
c
e
r
s
e
s
n
o
p
s
e
R
 200
 150
 100
 50
 0
0
1.00
0.95
0.90
0.85
TCP
UDP
2
r
0.80
0.75
0.70
0.65
0.60
9K
100
101
102
103
104
Address index, ranked by correlation coefficient
2K
4K
5K
1K
8K
Address index, ranked by responsiveness
7K
6K
3K
Figure 4: Probing 9,056 IP addresses at a constant
rate shows that interfaces are more responsive to
TCP.
 1
 0.8
 0.6
 0.4
 0.2
F
D
C
1140
3000
 0
10-2 10-1 100 101 102 103 104 105 106 107 108
Slope
Figure 5: CDF of interpolated IP ID slopes
same counter for TCP and UDP packets and any eﬀect on
accuracy the use of multi-protocol probes may have.
By reducing the number of probes sent and responses re-
quired for accurate results, RadarGun does not suﬀer as
much from rate limiting and is thus more complete than
Ally. As Ally requires that an address be responsive every
time that it is probed, whereas RadarGun does not, Ally
claims more pairs as unresponsive.
4.2 Modeling Velocities
RadarGun (and Ally) can accurately infer aliases only for
routers whose IP ID is implemented as a counter. Some
operating systems, such as versions of BSD, insert psuedo-
random values in the IP ID ﬁeld [2]. To determine the dis-
tribution of implementations among routers, we examined
the slopes inferred from the “unwrapped” data points both
for accuracy and “sanity.” Figure 5 shows a CDF of cal-
culated slopes. This ﬁgure suggests that addresses can be
partitioned in to two sets: those with a slope below 1140
and those with a slope above 3000 (there are no intermedi-
ate values of slope). Lower slopes suggest a linear model is
appropriate; higher slopes might not be modeled accurately.
When unwrapping samples from routers that use random
Figure 6: The square of correlation coeﬃcient (r2)
for addresses classiﬁed as “linear”
Unresponsive
Linear
Non-linear
ICMP “Destination unreachable”
IP ID always 0
Reﬂects the IP ID of probe
4,240
2,841
968
698
208
101
(46.8%)
(31.4%)
(10.7%)
(7.7%)
(2.3%)
(1.1%)
Table 2: Classiﬁcation of 9,056 intra-PlanetLab ad-
dresses
IP IDs (or who source packets so frequently that the IP ID
wraps often enough to appear as random), every IP ID sam-
ple that is less than the previous sample suggests that the
“counter” has wrapped. This adds 216 to the unwrapped
data and leads to a large inferred slope.
We visually inspected the samples that we obtained and
found that the largest calculated slope that we felt could be
correctly modeled as linear was 881.8 packets per second.
Samples with slopes larger than this appeared random. We
re-probed the addresses of these samples at a higher probe
rate, and inspecting the results still did not suggest that
they could be distinguished from psuedorandom values.
Using this cut-oﬀ, we can classify our set of 9,056 ad-
dresses into various categories, as shown in Table 2. Ad-
dresses were classiﬁed as “unresponsive” if they responded
to fewer than 25% of probes. Figure 6 shows the correlation
coeﬃcients (r2 values) of the unwrapped samples that we
classiﬁed as linear. As the correlation coeﬃcients rapidly
converge to 1, this shows that the series of samples can ac-
curately be modeled by a linear approximation.
4.3 Inferring Aliases
We now describe the test we use to determine if two IP
addresses, A and B, are aliases for the same router. Let
SA be the set of (time, IP ID) samples collected from A,
and SB be the samples collected from B. Assume for ease
of exposition that several samples from SA were collected
before the earliest sample in SB and that several pairs in
SB were collected after the latest point in SA.
We split the samples into three sets: the samples of SA
that were received before any samples from SB (termed the
head ), the samples of SB that were received after any sam-
ples from SA (the tail ), and the remaining samples that
roughly overlap in time (the middle). The middle may be
empty; the head or tail may have just one element; points in
tail
middle
e
c
n
a
i
t
s
d