rollover, identified in the 2016 Rollover Design Team report [2], was
the increase in size of the DNSKEY RRset (see Section 2.2.1). When
RolloverRevocationRemoval101102103104105106Aug '18Sep '18Oct '18Nov '18Dec '18Jan '19Feb '19Mar '19Apr '19Queries per day ( log10 )ASs−AASs−BASs−CASs−D040080012001234567891011121314151617181920#Queriesllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll510150100200300Time since experiment start (seconds)Queries per secondllllll#01  #02  #03  #04  #05  #06  #07  #08  #09  #10  #11  #12  #13  #14  #15  #16  #17  #18  #19  #20  Roll, Roll, Roll your Root
IMC ’19, October 21–23, 2019, Amsterdam, Netherlands
and enables DNSSEC validation by default. We verified that, upon
startup, Unbound loads both trust anchors, marks KSK-2010 as
“missing”, but as the trust anchor is still configured, Unbound signals
its presence in its RFC 8145 telemetry. Any installation of Ubuntu
18.04 LTS with Unbound that was running for at least 30 days6
when KSK-2010 was published as revoked will have cleaned up the
old trust anchor. However, any installation (or re-installation) after
February 20, 2019 could not complete RFC 5011 revocation and
retained KSK-2010 as a trust anchor. We also verified the behavior
of another popular open source DNS resolver implementation on
the same OS. Ubuntu 18.04 LTS ships with BIND version 9.11.3,
which includes both KSK-2010 and KSK-2017 as built-in trust an-
chors. By default, the Ubuntu package for BIND is configured to
perform DNSSEC validation using the built-in trust anchors. Upon
startup, however, if BIND does not find a configured trust anchor
in the DNSKEY RRset returned by the root servers, it will not signal
this trust anchor in its RFC 8145 telemetry. This does not mean,
however that the trust anchor is removed. We verified that BIND
retains KSK-2010 in its trust anchor file on disk, so if the key were
ever to return in the root DNSKEY RRset we expect BIND to accept
it as a valid trust anchor again.
Second, as mentioned previously, Fig. 12 shows an increase in
KSK-2010 beginning in the middle of June 2019 from a single net-
work, AS7342. As it happens, this is the origin AS for Verisign’s
public DNS service.7 The rise in KSK-2010 signalers corresponds to
an upgrade of the software used on the public DNS resolver. The
newly deployed version supports the Root Sentinel (RFC 8509) and
is packaged with a configuration that includes both KSK-2010 and
KSK-2017 as trust anchors.
The two examples above explain most of the return of KSK-
2010 in Fig. 12 and at least some of the return in Fig. 18. They are
illustrative of software still shipping with KSK-2010 as trust anchor.
This does not mean that these are the only examples, though, there
are likely other packages with similar behavior. One question we
have not discussed yet is whether the comeback of KSK-2010 can be
considered problematic. We discuss this in more detail in Section 6.
Key Takeways After the Roll. The biggest problem during the
whole process, arguably, occurred after the roll with the significant
increase in DNSKEY queries. This problem was not foreseen in the
design report [2], underlining the importance of independent stud-
ies of such major events on the Internet and confirming the need
for meaningful telemetry. Additionally, it is clear trust anchor man-
agement is complex and that shipping trust anchors with software
has long-lasting effects. We come back to this in Section 6.
5 RELATED WORK
As we discussed in the introduction, the root DNSSEC KSK rollover
is a first-of-its-kind event. Thus, our discussion of related work will
focus on earlier studies that have looked at the operation of the DNS
root server system and the impact of DNSSEC on the performance
of DNS resolvers. Huston [41] independently confirms our finding
that the Irish ISP EIR suffered outages but does not provide a more
thorough analysis.
6The RFC 5011 Remove Hold-down Time.
7https://www.verisign.com/en_US/security-services/public-dns/index.xhtml
Figure 18: RFC 8145 signals August 2018 to August 2019.
KSK-2010 was revoked, this size reached its maximum value of
1,425 bytes. We analyzed if this increase hindered resolvers fetching
the record set and, as a result, caused validation errors. While there
are other moments during the rollover at which the response size
is significantly higher than usual, we focus on the revocation event
since that is when the maximum size was reached.
The first sign we expected to see if resolvers experience problems
is an increase in fallback to TCP. We studied the RSSAC002 data
concerning traffic types, and found no evidence of such an increase
during revocation. Note, however, this data does not contain infor-
mation on individual query types such as DNSKEY. If resolvers are
also unable to fall back to TCP, then they may become unable to
fetch the DNSKEY RRset altogether. We use the measurements from
RIPE Atlas to detect whether any vantage points were unable to
retrieve the DNSKEY RRset from the root after the increase in size.
Resolvers are marked as unable to retrieve the DNSKEY RRset if they
cannot fetch the RRset within 5 seconds.
Out of 17,925 vantage points, 1,975 (11%) are able to fetch the
DNSKEY RRset before revocation, but fail to fetch it at least once
48 hours after the revocation. Only 67 of these (0.4%) never manage
to fetch the key set after the revocation. Even though the IPv6
minimum MTU is 1,280 bytes, vantage points that contact resolvers
via IPv6 did not fail more often than those using IPv4. We also found
no resolvers that turned bogus after the revocation. This leads us to
conclude that the increased response size during revocation only
caused problems for a few resolvers and did not impact validators.
This was also expected by the KSK rollover design team [2].
4.3.4 The return of KSK-2010. We end this section with a sur-
prising comeback. As mentioned in Section 4.3.1, the number of
resolvers that signal support for KSK-2010 is on the rise again since
its removal from the root zone DNSKEY RRset. This increase is also
visible in the RFC 8145 signals sent to root servers. Fig. 18 shows
that by the end of July 2019 almost 39% of signalers again report
having KSK-2010 in their trust anchor set. This, of course, raises the
question why a retired trust anchor is making this comeback. While
it is impossible to attribute the observed rise to a single source, we
have convincing evidence of the most likely cause: DNS resolver
software shipping with built-in or pre-configured trust anchors.
First, we note that the current long-term supported version of
Ubuntu (18.04 LTS) ships with Unbound version 1.6.7, which sup-
ports RFC 8145. In addition, Ubuntu also includes a pre-configured
trust anchor package that includes both KSK-2010 and KSK-2017,
RolloverRevocationRemoval0.000.250.500.751.00Oct 2018Jan 2019Apr 2019Jul 2019Fraction of signallersKSK−2010KSK−2017IMC ’19, October 21–23, 2019, Amsterdam, Netherlands
The earliest work to study DNS traffic to root servers by Danzig
et al. [42] dates back to 1992, five years after DNS was adopted as the
Internet’s naming system [43]. This study illustrates that software
bugs that cause excessive traffic are a problem of all ages, as they
find multiple bugs in algorithms meant to improve DNS resilience.
In 2001, Brownlee et al. [44] study almost two weeks of traffic to
F Root. Again, they find a surprising amount of problematic traffic
to the root, with 14% of queries consisting of malformed address (A)
queries. In 2003, Wessels et al. [45] studied 24 hours of F Root traffic
and concluded an astonishing 98% of queries were malformed or
unnecessary. Since 2006, DNS-OARC collects so-called Day-in-the-
Life (DITL) datasets [18], which typically includes traffic to most
root servers. In 2008, Castro et al. [19] analyzed three years of DITL
data to characterise root server traffic and also found that 98% of
queries were unnecessary.
Apart from studying traffic at the root, past work also looked at
operational changes to the root system. A particularly impactful
event is the change of the IP address of a root server. Since resolvers
have to be configured a priori with the IP addresses of root servers to
bootstrap DNS resolution, such events have a major impact. Many
root servers have undergone such changes, and Lentz et al. [46]
study one such change for D Root in an academic paper in 2013.
This study concludes that such address changes take a long time to
propagate to the global resolver population, with the old address
still seeing significant amounts of traffic months after the change.
The authors suggest that such IP address changes may actually be
beneficial, as they serve as some form of a “garbage collection” for
old implementations. A similar notion could be said to apply to
rollovers of the root KSK. In 2015, Wessels et al. [47] show how
the aftereffects of an address change linger, finding that the old IP
address for J Root still receives on average 400 queries per second
from some 130,000 sources thirteen years after the address change.
The effects of the root KSK rollover on resolvers studied in this
paper are part of the impact of DNSSEC on resolvers. Earlier work
studies other aspects of the impact of DNSSEC, including the per-
formance impact of DNSSEC validation [48–51] and the risks, in
terms of availability and security, of packet fragmentation of large
DNSSEC responses [11, 52]. Even though [11] conclude that up
to 10% of resolvers could have problems handling larger DNSSEC
responses, we did not observe failures when the DNSKEY response
size increased. Other popular DNSSEC signed zones have served
records larger than 1,425 bytes and validating resolvers probably
took measures to handle large responses already. Finally, the way
DNSSEC is organized as a Public Key Infrastructure is highly rel-
evant for the root KSK rollover studied in this paper. Yang et al.
provide a detailed overview of why the DNSSEC PKI is organized
the way it is today [53].
6 DISCUSSION AND RECOMMENDATIONS
Improving Telemetry. A key challenge faced during the KSK
rollover was sparse and distorted telemetry from resolvers. Ide-
ally, those responsible for the rollover would want to know both
the exact state of resolvers (in terms of DNSSEC validation) and
how important these resolvers are (in terms of the number of clients
relying on them). This provides actionable intelligence that allows
prioritisation of “important” resolvers (serving millions of users).
Signaling
Which TAs are revealed
Supports non-root TAs
Collection method
Vulnerable to manipulation
RFC 8145
Automatic
All configured
Passive
Yes
Yes
Müller et al.
RFC 8509
Requires query
Only those queried
No
Active
Only to on-path attackers
Table 7: Supported features of existing telemetry.
Clearly, during the root KSK rollover discussed in this paper
such comprehensive telemetry was not available. While RFC 8145
saw significant deployment before the rollover, it was difficult to
interpret its signals. This was mostly due to four reasons: first,
RFC 8145 only allows for passive observations by — in this case root
— DNS operators. Thus, in case of problems, it is impossible to query
resolvers for further state information. Second, there is no telemetry
on the query volume a resolver processes, making it hard to judge
how relevant or risky a resolver with problems is. Third, RFC 8145
may propagate through upstream systems (NATs, DNS forwarders,
caches and other middle-boxes), leading to distorted signals and
hiding systems with actual problems. Fourth, although we have
not seen any evidence of tampering, an attacker could artificially
inflate the number of resolvers that have not acquired the new
key by spoofing RFC 8145 telemetry signals. Such an attack could
adversely influence the decision-making process around whether
or not to proceed with a planned rollover. Despite the limitations
of RFC 8145, however, without it ICANN and the DNS community
would have been completely blind and some problems were actually
solved due to RFC 8145 telemetry.
The Root Sentinel (RFC 8509) addresses the first limitation of
RFC 8145. It uses active measurements from the client perspective to
establish the DNSSEC trust anchors configured on a resolver. While
standardized too late to be of use during the current rollover, our
analysis shows RFC 8509 is seeing rapid deployment and provides
useful signals as of September 13th, 2019. Nevertheless, RFC 8509
also suffers from the second and third limitations discussed for
RFC 8145 albeit with different signal distortion (e.g. assuming a
Root Sentinel query is sent to resolvers at a large ISP while it is
actually handled by a local forwarder). Table 7 summarizes the
supported features of the existing telemetry protocols.
Based on our analysis of the current rollover, we recommend ex-
ploring incremental improvements to both RFC 8145 and RFC 8509.
The quality of such signaling would be greatly improved if it were
possible to identify true signal sources, identify cases where signals
are forwarded, and estimate the number of users being serviced. We
recognize that there are serious concerns around such detailed sig-
naling. Weighing the tradeoffs requires further thought and debate
in the community.
Another issue compounding the difficulties of interpreting re-
solver validation problems is the ambiguity of the SERVFAIL error
code validators send upon failure. Effectively only by combining
results from different measurements (cf. Table 2) can we be reason-
ably confident that a resolver has issues with DNSSEC validation.
We therefore strongly support a draft under review in the IETF that
proposes to send extended error codes for DNSSEC failures [54].
Roll, Roll, Roll your Root
IMC ’19, October 21–23, 2019, Amsterdam, Netherlands
Introducing a Standby Key. There is an ongoing debate in the DNS
community about introducing a KSK standby key in the root zone
by default [55]. Effectively, because the rollover was postponed by
a year, this has already been tested for a single standby key, without
leading to issues with, e.g., response sizes. We therefore think it safe
to introduce such a standby key as multiple community members
have suggested. An immediate benefit of this is that resolvers are
much more likely to pick up the new key if it is pre-published for
a longer period. Given the rollover policy of the root [1], such a
standby key could even be published years in advance.
Trust Anchor Distribution. The 2018 KSK rollover was the first
time a large population of DNSSEC validators needed to update
their trust anchor. At the start of the process, the design team
expected RFC 5011 to be the main means through which validators
keep their trust anchors up to date [2]. Our observations suggest
that where RFC 5011 was used, it generally worked as intended.
In the few instances where problems did occur, this was either