信息
http://code.google.com/p/idapython/
IDAPython 提供的Python 构建脚本（build.py）利用简化包装器接口生成器（SWIG）2
 生成连接Python 与IDA 的C++ 库所需的组件，IDA SDK（自版本5.4以来）自带的头文件包含许多为确保其与 SWIG 兼容的宏声明。除 SWIG 外，构建过程还需要 C++ 编译器。Windows 环境下的构建过程配置使用微软 Visual C++3
 ，而Linux和Mac 环境下的构建过程则使用 g++ 。
2. 参见http://www.swig.org/
 。
3. 欲获得Visual C++的免费精简版本，访问http://www.microsoft.com/express/
 。
23.3 collabREate
collabREate 插件（如表23-3 所示）促进分析同一二进制文件的多个用户之间的协作。collabREate 项目的目标是为代表同步客户端的插件组件与 SQL 数据库支持的、具有除简单数据库同步以外的支持功能的强大服务器组件提供自然集成。
表23-3 collabkEate插件
名称
collabREate
作者
Chris Eagle和Tim Vidas
发布
C++源代码和二进制（包括IDA 免费版本）
价格
免费
描述
提供同步远程IDA 会话的协作框架
信息
http://www.idabook.com/collabreate
从宏观角度看，collabREate 与IDA Sync 项目1
 非常相似。collabREate 插件处理数据库更新，并与一台远程服务器组件通信，从而与其他项目成员同步数据库更新。由于 IDA 是一个单线程应用程序，因而需要某种用于处理异步非阻塞网络通信的机制。在 6.0之前的IDA 版本中，异步通信组件派生自 IDA Sync使用的Windows 异步套接字技术，但是随着 IDA 6.0 的推出，现在异步通信使用 Qt 套接字类进行处理，因此我们可以在所有支持 IDA 的平台上使用 collabREate 。
1. 参见http://pedram.redhive.com/code/ida-plugins/ida-sync/
 。
collabREate 采用一种集成的方法，利用 IDA 的进程和 IDB 事件通知机制来捕获用户操作。collabREate 通过“钩住”各种数据库变更通知，将数据库更新无缝传播到 collabREate 服务器。IDA 生成的变更通知的类型和数量随着每个 IDA 版本的发布而不断增长，同时 collabREate 设法为其所构建的 IDA 版本“钩住”尽可能多的有用通知。使用collabREate 的一个有趣的“副作用”在于，它允许使用截然不同的 IDA 版本（如 5.2和6.0）的用户同步他们的活动，即使这些用户无法彼此交换.idb 文件。2
 collabREate 体系结构为参与的用户提供真正的发布和订阅功能。用户可以选择将他的更改发布给 collabREate 服务器，或订阅提交给服务器的更改，或者同时发布和订阅。例如，一名有经验的用户可能希望与一组用户共享（发布）他的更改，但阻止（不订阅）其他用户作出的所有更改。用户可以选择他们希望发布和订阅的操作的类别，如字节值更改、名称更改以及添加或删除注释。例如，一名用户可能仅仅希望发布注释，而另一个用户则只想要订阅名称更改和字节修补通知。
2. 通常，早期IDA 版本无法打开使用较新IDA 版本创建的.idb 文件。
collabREate 插件最重要的特性之一在于它与 IDA SDK的高度集成。IDA 通知与特定的数据库操作（而非特定的用户操作）密切相关。当然，如果用户操作触发了 IDA 通知，这会给协作过程造成重大影响。但是，通知也可以通过其他方法触发。脚本和API 函数调用也可以生成通知消息。因此，修补数据库字节、重命名位置或变量或者插入新注释的一段 IDC 脚本的操作，将发布到collabREate 服务器，并最终与在同一个项目上工作的其他 IDA 用户共享。
当前，collabREate 的服务器组件在 Java 中运行，并使用 JDBC3
 与后端 SQL 数据库通信。该服务器负责用户和项目管理。用户账户通过服务器的一个命令行界面进行管理，而项目则由连接到服务器的用户创建。经过服务器的验证后，用户的 collabREate 插件将向服务器发送用户分析的输入文件的 MD5散列。这个 MD5值用于确保多名用户实际上在处理完全相同的输入文件。连接服务器后，用户将说明他希望订阅的更新的类型，这时，服务器将向用户转交自用户上次会话以来它缓存的所有更新。collabREate 的“项目选择”对话框如图 23-2 所示。
3. JDBC 为Java 数据库互通API。
图23-2 collabREate 的“项目选择”对话框
在这个对话框中，用户将看到一个与当前数据库兼容的项目下拉列表。另外，你还可以创建一个新的项目，需要用户输入一段方便其他用户查看的项目说明。
collabREate 服务器能够对现有的项目创建分支，让用户为一个项目创建备用分支，而不致于影响到其他用户。如果你想要对一个数据库进行大量更改（并追踪这些更改），但不希望迫使其他用户进行这些更改，就可以用到这个特性。由于服务器能够处理与单个二进制输入文件有关的多个项目，collabREate 插件和服务器需要采取额外的步骤，以确保用户连接到数据库中的正确项目。
collabREate 服务器并不提供回滚功能，但提供某种形式的“保存点”。用户可以在任何时候拍摄一张快照，然后返回到这个数据库状态。用户可以重新打开二进制文件（新的.idb 文件），并通过这个快照分支一个新的项目。因此，用户可以返回到逆向过程中的一个特定的时间点。collabREate 的分支和快照功能可以通过最初激活该插件所使用的相同热键组合进行访问，得到的对话框如图 23-3 所示。
图23-3 collabREate 的“选择命令”对话框
collabREate 服务器的最后一个特性，在于它可以限制用户可发布的更新。例如，一名用户仅限于订阅更新，而另一名用户仅仅能够发布注释，第三名用户则可以发布所有类型的更新。
23.4 ida-x86emu
逆向工程二进制文件往往需要手动跟踪代码，以了解函数的行为。因此，你需要全面了解你所分析的指令集，并拥有一份便捷的参考资料，以便在遇到不熟悉的指令时作为参考。这时，指令模拟器是一个有用的工具，可以帮助你跟踪在执行一系列指令的过程中，注册表和CPU状态的变化情况。我们在第21章详细讨论的ida-x86emu 插件（如表 23-4 所示）就是这样一个模拟器。
表23-4 ida-x86emu 插件
名称
ida-x86emu
作者
Chris Eagle
发布
源代码（适用于SDK v6）和二进制（适用于IDA5.0之后的所有版本，包括IDA 免费版本）。源代码格式向后兼容到SDK 4.9
价格
免费
描述
IDA的嵌入式x86 指令模拟器
信息
http://www.idabook.com/ida-x86emu/
这个插件以源代码的方式发布，并且与 IDA SDK 4.6 及更高版本兼容。同时，该插件还自带构建脚本和项目文件，以便于在构建过程中使用 Windows 平台上的 MinGW工具或微软 Visual Studio 和非Windows 平台上的 g++ 。该插件的发行版提供一个供 IDA 免费版使用的预编译二进制版本。ida-x86emu 能够与所有基于 Qt的IDA 版本兼容，但是在 IDA 6.0 之前，该插件仅与 IDA的Windows GUI 版本兼容。
该插件在开发过程中考虑到了自修改代码，它从当前 IDA 数据库中读取指令字节，解码这些指令并执行相关的操作。相关操作包括更新模拟器的内部注册变量，遇到自修改代码时回写（back write）数据库。该插件通过分配新的 IDA 段并进行适当的读取和写入，执行一个模拟的堆和栈。有关使用 ida-x86emu 插件的详细信息，请参阅第 21 章。
23.5 Class Informer
如第8 章所述，C++ 程序可能包括有助于你发现类名称和类层次结构的信息。这些嵌入的信息旨在为 C++ 运行时类型识别（RTTI）提供支持。
Sirmabus 开发的 C++ Class Informer插件主要用于逆向工程使用 Microsoft Visual Studio编译的C++ 代码。Class Informer通过标识虚拟函数表（vtable 或vftable ）及RTTI信息，然后提取出相关类名称与继承信息，从而自动完成Igor Skochinsky 在他的有关逆向工程 Microsoft Visual C++1
 的OpenRCE 文章中描述的大部分工作。
1. 参见http://www.openrce.org/articles/fullview/23
 。
表23-5 Class Informer
名称
Class Informer
作者
Sirmabus
发布
仅二进制格式
价格
免费
描述
MSVC C++ 类识别插件
信息
http://www.macromonkey.com/downloads/I DAPlugIns/Class_ Informer102.zip
激活后，Class Informer 将显示如图 23-4 所示的选项对话框，以便于用户规定 Class Informer应在二进制文件的什么位置扫描 vtable，并允许用户控制 Class Informer 输出的详细程度。
图23-4 Class Informer 选项对话框
用户单击“Continue”（继续）按钮后，Class Informer将开始扫描，扫描过程可能要花费一段时间，具体取决于二进制文件的大小以及 Class Informer遇到的虚拟函数表的数量。扫描完成后，Class Informer 将在IDA 中打开一个新的选项卡式窗口以汇总扫描结果。Class Informer输出的部分代码清单如下所示：
➊ Vftable     ➋ Method count      ➌ Class & structure info  
  0041A298       0003                 ChildClass;  [MI]  
  0041A2A8       0003                 ChildClass: SuperClass1, SuperClass2;  [MI]  
  0041A2B8       0003                 SuperClass1;  [SI]  
  0041A2C8       0003                 SuperClass2;  [SI]  
  0041A2D8       0004                 BaseClass;  [SI]  
  0041A2EC       0005                 SubClass: BaseClass;  [SI]
对于发现的每个虚拟函数表，Class Informer将显示vtable 的地址（➊）、方法计数（➋，等于vtable 中所包含的函数指针的数量），以及有关由嵌入的RTTI信息得到的每个类的摘要信息（➌ ）。发现的类信息包括类名称、任何超级类的名称，以及说明类是继承自单一基类（[SI]
 ），还是继承自多个基类（[MI]
 ）。对于发现的每个vtable，Class Informer 还会对所有与类有关的 RTTI相关数据结构应用结构模板，并根据 Microsoft 的名称改编方案命名每个结构及类的 vtable。不管逆向工程多么复杂的 Visual C++代码，Class Informer 都可以为你节省大量时间。
23.6 MyNav
尽管从严格意义上讲，Joxean Koret开发的名为 MyNav的Python 脚本（参见表 23-6 ）并非一个插件，但确实是一个有用的 IDA 扩展。MyNav非常有用，在 Hex-Rays 2010年的插件编写竞赛中获得了一等奖。1
 加载二进制文件并完成初步自动分析后，你应当启动mynav.py 脚本。启动MyNav后，它会在 IDA 的Edit ▶Plugins 菜单中添加 20 个新的菜单项，以便于你利用各种新功能。
1. 参见http://www.hex-rays.com/contest2010/#mynav
 。
表23-6 MyNav
名称
MyNav
作者
Joxean Koret
发布
Python脚本
价格
免费
描述
调试器跟踪和代码查找工具
信息
http://code.google.com/p/mynav/
MyNav添加的功能包括一个函数级（与基本的块级相反）图形浏览器（受 Zynamics 的BinNavi启发而开发）、其他图形功能（如显示任意两个函数间的代码路径），以及许多旨在增强 IDA 的调试功能的特性。
在调试方面，MyNav会记录有关调试会话的信息，并允许你使用一个调试会话的结果来过滤随后的会话。在任何调试会话结束后，MyNav会显示一个图形，仅在其中突出显示那些在会话过程中执行的函数。使用 MyNav提供的功能，你可以快速缩小负责程序特定操作的函数集的范围。例如，如果你对负责启动网络连接并下载某些内容的函数感兴趣，可以创建一个执行除启动网络连接以外的任何操作的会话，然后再执行另一个会话，并在其中创建一个网络连接。排除在第一个调试会话中执行的所有函数后，MyNav最终生成的图形将包含与那些负责启动网络连接的函数有关的信息。如果你试图了解那些具有庞大二进制代码的函数，这项功能会非常有用。
有关MyNav功能的详细讨论，请参阅 Joxean 的博客2
 ，你将在那里找到大量介绍 MyNav功能的视频。
2. 参见http://www.joxeankoret.com/blog/2010/05/02/mynav-a-python-plugin-for-ida-pro/
 。
23.7 IdaPdf
基于文档的恶意软件正变得越来越常见。恶意 PDF 文件就是一个典型的例子，这些文档文件旨在利用文档查看软件中的漏洞。分析恶意 PDF 文件（或任何相关的文档文件）需要你了解所分析的文件的结构。通常，通过仔细分析这些文件结构，你可以发现任何在文档被成功打开后将执行的嵌入代码，以攻破查看该文档的计算机。现有的一些 PDF 分析工具主要针对的是命令行用户，其目的是提取最终被加载到 IDA 中的信息，以进行深入分析。
IdaPdf （参见表 23-7 ）由一个 IDA 加载器模块和一个 IDA 插件模块组成，这两个模块都设计用于分析 PDF 文件。IdaPdf 的加载器组件将识别 PDF 文件并将其加载到一个新的 IDA 数据库中。加载器负责分割 PDF 文件。在加载过程中，加载器将尽一切努力提取并过滤出所有 PDF 流对象。由于加载器模块会在加载过程完成后退出，这时就需要第二个组件（即 IdaPdf 插件），以提供初始加载以外的 PDF 分析功能。插件模块在确认已加载 PDF 文件后，将继续枚举文件中的所有PDF 对象，并打开一个新的选项卡式窗口，其中列出每一个 PDF 对象。下面的代码清单列出了PDF Objects窗口所包含的信息。
Num  Location  Type         Data Offs  Data size    Filters         Filtered stream  Filtered size  Ascii
17   000e20fe  Stream       000e2107      313       /FlateDecode    000f4080             210        No
35   00000010  Dictionary   00000019       66                                                       Yes
36   000002a3  Dictionary   000002ac      122                                                       Yes
37   0000032e  Stream       00000337      470       [/FlateDecode]  000f4170             1367       Yes
表23-7 Idapdf
名称
IdaPdf
作者
Chris Eagle
发布
C++ 源代码
价格
免费
描述
用于分析并浏览PDF 文件的PDF 加载器和插件
信息
http://www.idabook.com/idapdf/
上面的代码清单中显示了对象编号及位置、对象的数据、任何必须应用于流对象的过滤器，以及一个指向提取出的、未过滤数据的指针。使用上下文菜单项可实现轻松导航，以查看对象数据或任何提取的已过滤数据。通过上下文菜单项还可以选择是提取原始对象数据还是已过滤的对象数据。Ascii列指出，插件已尽最大努力确定对象的原始或已过滤版本中是否仅包含ASCII 数据。
最后，在启动之后，IdaPdf 会在Edit ▶Other下添加两个新的菜单项。你可以使用这些菜单项突出显示数据库中的一个数据块，然后要求插件对这些数据进行 Base64 解码，或 unescape1
 这些数据，并将结果复制到 IDA 中的一个新建部分。这些未编码的数据通常就是 PDF 文件中的恶意负载。由于插件会将这些数据提取到新的 IDA 段中，因此你可以轻易地导航到这些数据，并要求IDA 反汇编部分或全部数据。
1. 实现JavaScript unescape函数的插件。