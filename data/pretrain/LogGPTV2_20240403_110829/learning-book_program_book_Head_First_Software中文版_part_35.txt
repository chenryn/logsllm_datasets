sendIt ,addActionListener (new MySendListener ()) ;
buttonBox, add (sendIt) ;
JButton sendPoke = new JButton("Send Poke"):
sendPoke.addActionListener (new MyPokeListener ()) :
buttonBox.add(sendPoke) ;
userMessage = new JTextField() ;
buttonBox,add (userMessage) ;
// more code in buildGUI()
1
public class MyPokeListener implements ActionListener
public void actionPerformed (ActionEvent a) (
// We'll create an empty state array here
boolean[] checkboxState =new boolearn[255]<
try{
过置是得俱所
out.writeObject(POKE_START_SEQUENCE);
在，我们创建了
out.writeObject(checkboxState):
一个含255库尔
1catch (Exception ex)(
物反别，两不
System,out.println(*Falled to poke!");
256,
// other code in BeatBoxFinal.java
这段代码出了什么错？
送患核取方块降列时，我们采股了差一楼误测试，只伟送了255个布
集币底媒传通2.56个东尔集
为什么我们测试时没有抓到它？我们的测试把合法的陈别传送到接收端，但并温有测试到应用程序的
要如何以不同的方式进行？
我们需是一种翻测试更多代码的方法，我们应该增加能播提到这个错误
的测试（然而最不是经溪撑其他付么事情）
258
第7章
---
## Page 295
测试和连续集成
等等，这些代码是前一段时问编写的。我
们总是可以编写副试程序，但不能覆盖所有
的事情。我们何时可以再各编写新的代码？
剩余的工作量很催人……
不能运行的代码就是不完整的代码！
完整的代码是可运行的代码。没有很多人会为不能工作
的代码而付给你编写代码的报酬，编写测试程序也是完
成工作的一大重点。事实上，软件测试使你知道何时才
算写好原本打算要写的代码，以及何时傲它应该微的事
情。
但你需要做多少测试呢？好的，这变成了一种平衡。
方面是你测试了多少代码，而另一方面在你还没有进行
测试的部分中寻找到错误的可能性有多大。在一个十万
行的程序中，一百个测试都测试同样的五十行的方法不
会给你很多信心，因为留下了整整99.950行未测试的代
码，尽管你已经写了不少测试。
你的代
代替测试次数的方式是考虑代码的覆盖率（Code
coverage）：即你实际测试的代码占你全部代码的比例。
直到通过测试
才算完成
嗯嗯….我猪一定有果个工具可以期定在我们的流
程之中，为我们做检查，对吗！
你应该编写测试程序，以确
认你的程序在做其应该微的工
作。如果你对某个特定的功能
没有做测试，你如何如道你的
工具是你的朋友
代码真能实施该项功能呢？如
测试工具和测试方案不能做你应该做的工作，
果做了测试，但没有通过，你
但它们能使你的工作变得更加容易——并弄清
的代码就不能运行。
楚你应该继续做什么工作，代码覆盖度也是
样。
目前位置
---
## Page 296
开始测试代码
准备练习
下面是从BeatBox项日的应用程序中获得的部分代码。你的任务是想
出代码的覆盖度达到100%的测试方案或者，尽可能地接近。
public class RemoteReader implements Runnable {
boolean[] checkboxState = null;
这置通处理图件、Poke
String nameToShow = null;
序列和一般信息的代码。
Object obj = nul1;
public void run ()  (
try{
while ((obj = in.readObject ()) != null){(
System,out.println (*got an object from server");
System.out.println (obj .getClass ()) ;
String nameToShow = (String) obj;
checkboxState = (boolean[1) in.readObject () ;
if (nameToShow.equals (PICTURE_START_SEQUENCE))
receiveJPEG () ;
}else{
if (nameToShow,equals (POKE_START_SEQUENCE))(
playPoke () ;
otherSeqsMap.put (nameToShow, checkboxState);
1istVector,add (nameToShow) ;
incomingList,setListData (1istVector) :
// now reset the sequence to be this
)// close while
}catch (Exception ex){
ex.printStackTrace () ;
}//close run
/
}// close inner class
国出你的测试设有
覆盖的代码
260
第7章
---
## Page 297
测试和连续集成
1
撰写用于测试这段代码的测试程序（伪代码也可以）、
运叠到试中有一学
可徽超过该短代码
的范国—买下注
释，说明你还做了
哪些其结测试。
撰写用于测试这段代码的测试程序。
③
撰写用于测试这段代码的测试程序。
4
我们获得了100%的代码覆盖率吗？你还会测试其他什么东西？如何测试？
目前位置
261
---
## Page 298
100%的要盖率
备练习
答案
下面是从BeatBox项日的应用程序中获得的部分代码。你的
任务是想出代码的覆盖度达到100%的测试方案或者，
尽可能地接近。
0
public class RemoteReader
boolean[] checkboxState = [
imples
pub1ie void testNornalMessage () throws IOBxoept.ion (
nu1]
boolean[]checkboxState =
String nameToShov = null:
checkboxState[0]true;
new bcolean[256]7
Object obj = nu11;
checkboxState[19]-true
public void run() {
sOutSt.ream,writecbjeet (*rhis is a test message1*);
nOut.St.ream,writeobject (checkboxstate)
try {
while ((obj = in.regdOb
System.out.printl(iot an object from sezver"y)
System,out ,print1≤(obj -getC1
String nameToShox
String)
 checkboxState =
lean[]]
pub1lc void teatPLctureMessage () throws 10Except.ion
Test
if (nameToShow,equa
nOutSt.ream,writeObject(PICTURS_START_SEUENCE);
三项测试都
nOut.St.ream.writeObject (EMPTY_CHSCKBOES))
涵益了述叠代码,
receiveJPEG () 
sendJPEG (TEST_JPEG_FILENAME) 
elee [
f (nameToShow, equaI9 (POKE_StR)
playPoke () ;
“Hey
③
nameToShov =
Aea
atte
publie void testPoke ()thzows ToExoeption ↑
Test
mOutStream,writeObject (EMPTY_CHECKBOXES);
nOutStream,writeObject (POKE_START_SEQUENCE) ;
otherSeqsMap .put (nameTdShow,
1istVector , add (nameToShdw) 
//nov reset the sequence
incomingList,setListData 
NistVector):
to be this
这项测试应用于多报代码。事实上
}// close while
大多数测试都不会被隔离到只涉及少
}catch (Exception ex){
数几行代码，即使它可能是汤盖送几
ex.printStackTrace () ;
行代码的唯一到试
// close run
// close inner class
4
我们获得了100%的代码覆盖率吗？你还会测试其他什么东西？如何测试？
我们没有测试到例外处理的代码，所以我们无需创建例外的情
形。另外，我们也一点儿湿有测试Gu3
即可能电显个人
摄作准界面。
262
第7章
---
## Page 299
测试和连续集成
碰头会议
好的，附以如果
我们谢试每个方港，我们
将达到100%的代码覆盖率
对喝？
Mark：不是，我想不是这样，运行每一个方法并不意味着每个方
法的每一行都将运行。我们必须使用不同类型的测试才能触及所
有不同的错误条件和逻辑分支。
Laura：哦.所以我想每一个方法的变形都应该具有一个单独的
测试？
Bob：但是，我们如何能做到那一切呢？我们将需要编造各种
假的数据以获得每个奇怪的错误条件。那样的话，可能没有休
......
Mark：还不止如此。我们必须测试一些状况，像是在某个时点拔
掉网络线，用以测试如果当网络断线和I/O出现问题时，会出现什
么样的情况。
Bob：你不觉得这样做有点离题太远吗？
Mark：嗯，如果我们应该抓住所有的特殊情况和每个例外的处
理
Laura：但有很多状况并没有真正发生..
Bob：那我为何不厌其烦地去编写所有的例外处理的代码？在我
的方法中，具有各种记录机制和重连接代码。而现在你说我不需
要编写它们吗？
Mark：你还是得撰写，但
Laura：这根本不太可能的！
目前位置
263
---
## Page 300
使用覆盖率报告
测试全部代码意味着测试每个
逻辑分支
一些最容易错过的区域是那些具有很多逻辑分支的方法或
代码。假设你有像下面这样的登陆代码：
public class ComplexCode {
public class UserCredentials {
private String mToken;
四为没有行为，只有数据的访问和
UserCredentials (String token)(
温置，对整个Useteetil代码，你
mToken = token;
可能只常靠一个别试象例。
public String getUserToken() ( return mToken)
对这个方法，你意暑服多的测
K
试，一个合法的用户名和需码。
public UserCredentials login (String userId, String password) (
if (userId == null) {
throw new I1legalArgumentException (*userId 
cannot be nul1*);
if (password == null) {
.用户如为空。
throw new I1legalArgumentException (*password cannot be nul1*) ; 
User user = findUserByIdAndPassvord (userId, password) :
if (user ↓= null) {
虚码为空。
return new UserCredentials (generateToken (userId, password,
Calendar. getInstance () .getTimeInMi1lis() )):
·.用户名为
舍法
研是错误的。
一用户30不为空
但不是合法的.….
private User findUserByIdAndPassvord(String userId, String password) (
// code here only used by class internals
7
private String generateToken (String userId, String password,
// utility method used only by this class
long nonce){
另外，还有几个考用的方法
我们不能至摇存取,
264
第7章
---
## Page 301
测试和连续集成
利用测试覆盖率报告看看测试覆盖情况
大多数覆盖率工具，特别像CruiseControl，它集成了CI和版本控制工
具，能生成报告，告诉你测试覆盖了多少代码。
代础复条性基本上等的我们一个
给定类的代码有多少不用的路程。
以下是在上一页溯试ComplexCode类的报告，并且提供了合法的用
如果存在很多条件（更为足杂的
户名和密码：
代码）。这个数佳金比股大。
x
Tg
Packages
rage Report - headfirst.sd.chapter?
All
beasti
irst.sd.chaster?
Package"
FClasses
IeCe
Classes in this Packoge
Line
5%
1.9 on 9/23/07 11:08 P9A
第外一种衡量方式
adfrst.sd.chapter
多个类设分别列出（保馨件品分）
测试覆盖率的一种衡量方法是
是还样分支的覆盖
x.Cade (72%)
代码行的履盖单——美的代码
行中有多少比例被我们执行的
分支物院例（is语
9 (100%)
别试测试到：
的.elaei等）被执
r (62%)
行的到试测试到。
所以上面的测试完成User类的62%测试，ComplexCode类的71%和
增加是收象例，我们金对ComglenCoie
UserCredentials的75%。如果你增加在264页描述的所有失败的例
雅的振好，另外，对Urer类要做同样的
子，事情会好很多。
Classe
Claeses inShis Package
75%
14%
目前位置
265
---
## Page 302
测试的成本
你在跟我开既笑喝？所有的这些谢试，
我们都仍然达不到100%？你血何能将它应
用到一个真实的项目上？
良好的测试花费很多时间
一般来讲，总是要求达到100%的覆盖率是不实际的。在达到
一定的覆盖率之后，测试带来的回报将逐步减少。对大多数项