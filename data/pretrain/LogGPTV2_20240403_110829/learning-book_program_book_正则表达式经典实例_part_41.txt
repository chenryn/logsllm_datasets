E-mail地址。（个IS+@\S+S）就可以定义一个E-mail地址的基本结构：-个用户名、一
个@符号和一个域名。
在定义了文本模式的基本结构之后，你就可以开始精化每个组成部分，直到正则表达
式不再匹配任何不合法的数据为止。如果你的正则表达式只需要能够用于已有数据，
那么这样就可以了。如果你的正则表达式还要能够用于任意用户输入，就需要继续对
该正则表达式进行编辑，直到把它变得足够精确，这样做会比只是让它匹配合法数据
要难很多。
变体
如果你想要在很多数据中查找E-mail地址，而不是检查-一个输入是否是E-mail地址，
那么就不能再使用定位符和$>。只是把这两个定位符从正则表达式中移走，得到
的也不是正确答案。如果你对最后一个把顶级域名限制为字母的正则式这样做，那么
它会匹配到字符串PI:EMAIL中的PI:EMAIL。因此，我们选择的做法不是把正
则匹配定位到自标学符串的并始和结尾，而是必须指定用户名的并头和顶级域名的结
尾不能属于某个更长单词的一部分。
这可以很容易地使用一对单词分界符来完成。把和$>都替换为b>。例如，
^[A-Z0-9+_--]+@(?:[A-Z0-9-]+\)+[A-Z]{2,6}S>会被改变为
这个正则表达式实际上是组合了“对字符加以限制的简单形式”中的用户名部分，以
及“顶级域名必须包含2～6个字母”中的域名部分。在实际应用中，我们发现这个正
208第4章
www.TopSage.com
---
## Page 225
则表达式是比较理想的。
参见
RFC2822中定义了E-mail消息的结构和语法，其中也就包括了在邮件消息中使用的
E-mail地址。你可以从http://www.ietf.org/rfc/rfc2822.txt下载RFC2822。
4.2北美电话号码的合法性验证和格式化
问题描述
你想要确定用户是否输人了一个常见格式的北美电话号码，其中包括区号。这些格式
可以包括1234567890、123-456-7890、123.456.7890、123 4567890、（123)4567890和
所有类似的组合形式。如果电话号码是合法的，那么你还需要把它转换为一种标准格
式，（123)456-7890，这样可以使它们在电话号码记录中保持一致。
解决方案
码。通过使用捕获分组来记住每组数字，就可以使用同一个正则表达式，把目标文本
替换成你想要的任何格式。
正则表达式
\(?([0-9]{3})\)？[.●}?([0-9]{3})[-.·] ?([0-9]{4}) $
正则选项：无
正则流派：.NET、Java、JavaScript、PCRE、Perl、Python、Ruby
替代文本
($1）$2-$3
替代文本流派：.NET、Java、JavaScript、Perl、PHF
（\1）\2-\3
替代文本流派：Python、Ruby
C#
Regex regexObj=
new Regex(@"\(?（[0-9]{3})\)？[-.]？（[0-9]{3}）[-.]？（[0-9]{4})s");
if (regexObj.IsMatch(subjectString))(
string formattedPhoneNumber =
regexObj.Replace(subjectString,"($1) $2-$3");
}else{
//Invalid phone number
合法性验证和格式化
209
www.TopSage.com
---
## Page 226
JavaScript
var regexObj =/\(？（[0-9](3})\)？[-.]？（[0-9]{3}）[-.]?（[0-9]{4}）$/;
if (regexObj.test(subjectString)){
var formattedPhoneNumber =
subjectString.replace(regexObj,"($1) $2-$3");
}else{
//Invalid phone number
其他编程语言
如果读者希望了解如何在其他编程语言中实现这个正则表达式，请参考实例3.5和3.15
中的讲解。
讨论
这个正则表达式会匹配3组数字。第一组可以选择使用圆括号括起来，而前两组之后
则可以选择使用3种分隔符（连字符、点号或空格）之一。下面对该正则表达式进行
了分解，其中略去了冗余的数字分组：
#判断字符串的起始位置
#匹配一个字面的”（”..
3
#0次或者1次
把括号中的匹配捕获到向后引用#1中..
[6-0]
匹配一个数字...
{∈}
#
正好三次
）
#捕获分组#1结束
#匹配一个字母的"）”..
？
#0次或者1次
[-.】
#匹配"-.”中的一个字符..
？
#0次或者1次
#[匹配其余的数字和分隔符]
$
判断字符串到结束位置
我们仔细看一下上面的每一个组成部分。
位于正则表达式开头和结尾的（和是一种特殊的元字符，被称为定位符（anchor）
或断言（assertion）。断言并不会匹配任何文本，它们匹配的是文本中的位置。具体来
说，（>会匹配文本的开始，而匹配文本的结束。这样就可以保证正则表达式匹配
到的电话号码不会属于某个更长字符串的一部分，比如说123-456-78901。
我们已经反复看到过，圆括号在正则表达式中是一个特殊字符，但是在这个例子中，
我们想要让用户可以输人圆括号，并要求我们的正则表达式可以识别它们。这是一个
需要使用反斜杠来对特殊字符进行转义的范例，从而正则表达式可以把它当做一个字
面输人。因此，包含第一组数字的序列和)会匹配字面的圆括号字符。二者之后
210第4章
www.TopSage.com
---
## Page 227
都跟着一个问号，这样就把它们变为可有可无的。我们会在解释这个正则表达式中的
其他记号类型时讲解关于问号的更多内容。
用不带反斜杠的圆括号括起来的内容是一个捕获分组，可以用来记住在括号之间匹配
到的值，从而可以在以后再用到这些匹配文本。在这个例子中，到匹配文本的向后引
用被用在了替代文本中，从而我们可以很容易地对电话号码按需重新格式化。
在这个正则表达式中的两种其他记号类型是字符类和量词。字符类充许你匹配一个学
符集合中的任意一个。，它也可以用来匹配一个数字，但是在有些流派中，\d
会匹配来自任何语言的字符集或学母表的数字，而这并不是我们在这里想要的。关于
ld的更多信息，请参考实例2.3。
x[-.·]也是一个学符类，它可以匹配3个分隔符中的任意一个。在这里让连字符在字符
类中出现在第一个是很重要的，因为如果出现在其他字符之间的话，它就会创建一个
范围，就像在是一个量词，会让位于它之前的元素
恰好重复3次。因此，正则表达式[0-9]{3}>与[0-9][0-9][0-9]>是等价的，但是却更加
简洁易读。问号（前面已经提到过）是一个特殊的量词，会让位于它之前的元素重复0
次或1次。它也可以写成（{0,1》>。允许只重复0次的任何量词也就会在实际上把这个
元素变成可选的。因为在每个分隔符之后都使用了问号，所以我们也允许电话号码数
字都连续出现在一起。
注意，虽然这个实例号称能够处理北美的电话号码，但它实际上只可用于北美电话编
号方案（NANP）的号码。NANP是使用国家代码“1”的国家共同支持的电话编号方
案。这些国家中包括美国及其托管领土、加拿大、百慕大和16个加勒比国家，其中井
不包括墨西哥和中美洲国家。
变体
排除不合法的电话号码
目前，这个正则表达式可以匹配任何10位数字。如果你想要把匹配限制为符合北美电
话编号方案的合法电话号码，那么需要遵守如下的基本规则：
·区号（areacode）以2～9开头，第二位是0～8，然后第三位可以是任意数字。
·
第二组中的3位数字，也被称为是中心局（centraloffice）或交换机号（exchange
code），以2～9开头，后面两位可以是任意数字。
·
最后4位数字，也被称为是基站号（stationcode），可以不加限制地使用任何数字。
合法性验证和格式化211
www.TopSage.com
---
## Page 228
这些规则可以很容易地使用几个字符类来实现。
\(?([2-9][0-8][0-9])\)?[-.]？([2-9][0-9]{2})[-.]?([0-9]{4}) $
正则选项：无
正则流派：.NET、Java、JavaScript、PCRE、Perl、Python、Ruby
除了上面列出的基本规则之外，还存在各种被保留的、没有分配的和受限制的电话号
码。除非有具体的需要，要求你过滤掉尽可能多的电话号码，一般没有必要费更多的
力气去排除未使用的号码。符合上述规则的新区号也会被定期添加进来，而且即使一
个电话号码是合法的，也并不一定就意味着它被分配了或者是依然在使用中。
寻找文档中的电话号码
如果要在更长的文本中匹配电话号码，就需要在前面的正则表达式上做两个简单的改动：
\(?\b（[0-9]{3})\)?[-.]？（[0-9]{3}）[-.1?（[0-9]{4})\b
正则选项：无
正则流派：.NET、Java、JavaScript、PCRE、Perl、Python、Ruby
这里去掉了用来把正则表达式绑定到文本开头和结尾的和两个断言。在它们的
位置，添加了单词边界标记（\b>），用来保证匹配到的文本是独立存在的，而不会属
于更长的数字或单词的一部分。
与类似，会匹配在-个单词字符和一个非单词字符或者是文本的开始和结束之间的位
置。字母、数字和下划线都被认为是单词字符（参见实例2.6)。
注意第一个单词边界记号会出现在可选的左圆括号之后。这一点很重要，因为在两个
第一个单词边界只有在匹配一个不含括号的数字的时候才有意义，因为单词边界总是
会匹配左圆括号和电话号码的第一个数字之间的位置。
允许前导“1”
你可以允许一个可选的、前导“1”作为国家代码（覆盖了北美电话编号方案地区），
修改之后的正则表达式如下所示：
(？:\+21[-.]？)？\（？（[0-9]{3))\)？[-.]？（[0-9]{3}）[-.]？（[0-9]{4}）S
正则选项：无
正则流派：.NET、Java、JavaScript、PCRE、Perl、Python、Ruby
除了前面给出的电话号码格式之外，这个正则表达式还会匹配像+1（123）456-7890
和1-123-456-7890这样的字符串。其中使用了一个非捕获分组，被记为。在这个模式中的“1”之前还有一
个可选的前导加号，后面还可以选择使用3个分隔符（连字符、点号或空格）之一。
添加的整个非捕获分组也是可选的，但是因为在该分组中“1”是必须的，所以如果不
存在一个前导“1”，那么之前的加号和后面的分隔符都不充许出现。
支持七位电话号码
以及之后的分隔符都添加到一个可选的非捕获分组中：
(?:\(？([0-9]{3})\)？[-.·]？)？([0-9]{3})[-.●]？([0-9]{4})$
正则选项：无
正则流派：.NET、Java、JavaScript、PCRE、Perl、Python、Ruby
因为在匹配中不再需要区号，所以如果还是用（$1）·$2-$3>来替换匹配，那么就可能会
得到像0123-4567这样的结果，其中会包含一对空的圆括号。要想解决这个向题，可
以在正则表达式之外添加代码来检查第一个分组是否匹配到任何文本，从而可以相应
地调整替代文本的形式。
参见
实例4.3中会讲解如何对国际电话号码进行合法性验证。
北美电话编号方案（NANP）是用于美国及其托管领土、加拿大、百慕大和16个加勒
比国家的电话编号方案。更多信息可以参考http://www.nanpa.com。
4.3国际电话号码的合法性验证
问题描述
你想要对国际电话号码进行合法性验证。号码应当以加号开头，然后是国家代码和国
内号码。
解决方案
正则表达式
S16-0]'9）([6-0]:)+\
正则选项：无
正则流派：.NET、Java、JavaScript、PCRE、Perl、Python、Ruby
合法性验证和格式化
213
www.TopSage.com
---