# Improving SSD Reliability with RAID via Elastic Striping and Anywhere Parity

**Authors:**
- Jaeho Kim
- Jongmin Lee
- Jongmoo Choi
- Donghee Lee
- Sam H. Noh

**Affiliations:**
- *University of Seoul, {kjhnet10, jmlee, dhl express}@uos.ac.kr*
- *Dankook University, PI:EMAIL*
- *Hongik University, http://next.hongik.ac.kr*

## Abstract
The transition from Single-Level Cell (SLC) to Multi-Level Cell (MLC) and Triple-Level Cell (TLC) flash memory has increased SSD capacity while reducing costs. However, this comes at the expense of reliability. Traditional RAID architectures can enhance reliability but may also increase the total number of writes due to parity updates, leading to higher Program/Erase (P/E) cycles and bit error rates. We introduce a technique called Elastic Striping and Anywhere Parity (eSAP), which significantly reduces parity writes while providing better reliability than RAID-5. We derive performance and lifetime models for SSDs using both RAID-5 and eSAP-RAID, and validate these models using DiskSim with SSD Extension. Our results show that eSAP-RAID improves reliability and limits wear, potentially extending the expected lifetime of SSDs to match current ECC-based SSDs while maintaining high reliability.

**Keywords:** Flash memory, Reliability, RAID, SSD

## 1. Introduction
Modern Solid State Drives (SSDs) use MLC and TLC flash memory, offering higher density and lower costs compared to SLC devices. However, this comes with a significant reduction in P/E cycles, from 100,000 for SLC to 10,000 for MLC and even fewer for TLC. Additionally, bit error rates (BER) increase exponentially with P/E cycles [11], [19].

Traditional methods to handle these errors include powerful Error Correction Codes (ECCs) stored in the Out-Of-Band (OOB) area of each page. However, as NAND technologies advance, larger ECCs are needed, consuming more OOB space. Moreover, ECCs cannot address bursty errors or errors at the page, block, or chip level [14], [17], [18], [6]. To supplement ECCs, RAID architectures within SSDs have been proposed.

Current SSDs already use RAID-0 by striping data across multiple chips. Transforming this to RAID-5 can enhance error recovery, but it also increases the total number of writes due to parity updates, leading to higher P/E cycles and wear.

Figure 1 illustrates the Uncorrectable Page Error Rate (UPER) and expected P/E cycles for conventional SSDs (using BCH code with 4-bit redundancy per 512B for ECC) and SSDs employing RAID-5. The UPER for RAID-5 remains below HDD levels, but the expected P/E cycles for RAID-5 exceed the MLC limit after approximately 130TB of written data, whereas ECC-based SSDs remain below the limit beyond 200TB.

## 2. Related Work
### A. Flash and SSD Basics
NAND flash memory is the fundamental component of SSDs, consisting of blocks and pages. Operations on flash memory are performed in page units, with writes taking a few hundred microseconds and reads being an order of magnitude faster. Flash memory requires erasing a block before overwriting a page, making it unsuitable for direct HDD replacement. An FTL (Flash Translation Layer) is used to map logical sector numbers to physical locations, and garbage collection reclaims invalid pages.

### B. Flash Reliability
New flash memory technologies, such as MLC and TLC, offer higher density but lower P/E cycle counts. This decrease in P/E cycles leads to higher BERs. Studies by Mielke et al. and Sun et al. have shown that raw bit error rates increase rapidly with smaller cell sizes [19], [24]. ECCs reduce BERs but have limitations, especially with bursty errors and higher-level failures. RAID architectures within SSDs have been proposed to address these issues.

### C. RAID within SSDs
Several studies have applied RAID concepts to SSDs. For example, Lee et al. introduced Flash-aware Redundancy Array (FRA) [18], which retains parity blocks in buffer memory to reduce update costs. Im and Shin proposed Partial Parity Cache (PPC) [14], which generates partial parities for partial stripes but requires NVRAM. Lee et al. suggested dynamically adjusting stripe size based on increasing BER [17].

## 3. eSAP-RAID for SSDs
To understand the analytic models, we first need to understand the operations of RAID-5 and eSAP-RAID in SSDs.

### A. Conventional RAID-5 in SSDs
Conventional RAID-5 in SSDs involves fixed stripe sizes and parity locations. When data is modified, updated data is written to a new location, and parity is updated through read-modify-write or reconstruct-write. This approach has limitations, including fixed data-parity relationships, frequent writes to specific chips, and the inability to write partial stripes.

### B. eSAP-RAID
#### 1. Architecture of eSAP-RAID
eSAP-RAID, or Elastic Striping and Anywhere Parity, allows for variable stripe sizes and flexible parity placement. This enables the construction of partial stripes, reducing parity update overhead. Figure 3 and Figure 4 illustrate how eSAP-RAID handles data modifications and new data writes. 

#### 2. Implementation
In eSAP-RAID, when data pages D1-D4 are modified, the updated data is written to new locations, and partial stripes can be formed as new data arrives. This flexibility reduces the number of parity updates and P/E cycles, improving overall reliability and extending the SSD's lifetime.

## 4. Performance and Lifetime Models
We derive performance and lifetime models for RAID-5 and eSAP-RAID. These models show that eSAP-RAID significantly reduces parity writes and P/E cycles, leading to better reliability and longer lifetimes. We validate these models using DiskSim with SSD Extension and realistic workloads.

## 5. Experimental Results
Our experiments demonstrate that eSAP-RAID provides better reliability than RAID-5 by significantly reducing parity overhead and P/E cycles. The long-term reliability and lifetime of SSDs using eSAP-RAID are projected to be comparable to or better than those of current ECC-based SSDs.

## 6. Conclusion
eSAP-RAID is a promising solution for enhancing SSD reliability while limiting wear. By allowing flexible stripe sizes and parity placement, eSAP-RAID reduces the overhead of parity updates and extends the expected lifetime of SSDs. Future work will focus on further optimizing eSAP-RAID and exploring its applications in different SSD configurations.