### 复杂系统的挽歌
**作者：麦基·迪克森、赖耶 阿莱夫（前美国数字服务员工）**
2018年3月19日，加州帕索罗伯斯农庄汽车旅馆。由于暴雨的影响，我们被迫滞留在南下的路上，失去了整整一天的时间。现在只剩下18个小时来完成剩下的220英里路程。计划在这种情况下显得毫无意义，因为一切都无法按部就班。

六年前，我是谷歌负责SRE（站点可靠性工程）的中层经理，参与了一个庞大的项目，即重新实现自己的MySQL存储技术。三年后，我开发的最后两个应用程序仍未得到关注。在人力资源部门的术语中，我处于“马鞍上松弛”的状态。然而，奥巴马总统对healthcare.gov的紧急救援请求让我重新振作起来。这个所谓的“联邦便捷市场”面临着瘫痪的风险，影响到平价医疗法案的实施。经过几十名SRE工程师昼夜奋战的努力，healthcare.gov最终得以恢复运行。这段经历让所有参与者都深感珍贵，但也希望不再有人需要经历同样的挑战。该项目后来演变为一个新的政府实体——美国数字服务公司。我们的任务是简化和解决美国政府最棘手的IT问题，通常涉及用新的系统替代老旧而复杂的旧系统。

第一个重大挑战是理念上的。如今，谁还在使用“IT”这个词？只有那些庞大且官僚化的“企业”工业综合体。联邦政府每年在IT上的支出超过800亿美元。IT行业始于二战后，旨在通过计算机化取代大型官僚机构的纸质和模拟流程。表格变成了屏幕，文件柜变成了数据库，备忘录变成了电子邮件。尽管效率得到了极大提升，但随着基础设施的老化和新问题的出现，这些改进逐渐被遗忘。IT行业有自己的术语和技术，如“CIO”、“企业架构师”以及大型机和个人电脑，这些已经不再适应互联网的发展趋势。2010年代，我们在谷歌或Facebook等公司工作的人属于另一个国度——技术国家，拥有新的流行语和技术时尚。在这个文化中，职称、等级制度和传统都不再重要，尽管这些因素对于理解技术人员仍然至关重要。

技术国家的人将来自IT时代的事物称为“历史”，而IT人士则将技术行为视为“艺术”。两种文化的冲突凸显了一个核心问题：我们更擅长创建新的复杂性，而不是管理现有复杂性。经过在谷歌、美国国税局、医疗保险、国防部、联邦调查局、电子医疗记录项目等多个项目和公司的经历，我确信所有足够复杂的系统都有许多共同特点。计算机系统和人类系统是密不可分的。

1967年，梅尔康威提出了“康威定律”，断言组织设计的解决方案最终会反映其通信机制。自那时以来，几乎所有机构都在试图超越这一定律，但很少成功。实际上，软件组件最终会按照人工流程一样组织，这是因为除非仔细定义组件之间的接口并缓慢更改，否则大型系统将无法正常运行。无论它们如何称呼，这些接口都是契约，确保每个部分都能依赖于一个抽象接口。

当一个系统陷入慢性功能障碍时，技术问题和人的问题往往是同时发生的。只要有两个无法互操作的软件组件，背后往往就有两个不交流的团队。例如，我曾在一个大型团队中遇到一个基本需求是在大型机上的DB2数据库上执行事务的情况。两年来，没有人能够做到这一点。虽然有些困难，但我们最终找到了维护数据库的承包开发者。他迟到了大约10分钟，解释说是因为他花了很长时间才找到会议室，因为他从未去过大楼的那一侧。如果要诊断一个没有明确问题或找不到“根本原因”的系统，可以绘制两张图表：一张是组织结构图，另一张是系统流程图，看看它们之间的差异有多大。记住，两者都是可变的，解决方案可能来自任一更改。

### 消除一致性和级联失败
任何规模的系统都可能出现简单错误，如保险索赔决定错误或客户账单地址错误。但只有庞大的分布式系统才会与自己产生分歧。这种特殊的故障模式在量子领域被称为退相干。在人类和软件系统中，有许多类似的例子。处理分布式存储的人经常遇到多个副本、数据块服务器或分区服务器不同步的问题。在这种情况下，查询的答案会因服务器而异，违反了设计人员的理想模型。通常，解决方案是某种投票机制，其中一个版本的数据获胜，少数意见被忽略。在论文中，通常认为多数意见是“正确的”。人类的例子更容易找到。例如，在撰写本文时，美国法律体系无法回答“大麻是否合法”的问题。答案取决于你问哪个法庭。根据退伍军人协会及其计算机系统的记录，成千上万的退伍军人被标记为“活死人”。选民登记记录中的错误也无处不在。

退相干还有一个众所周知的近亲——级联失败。当系统紧密耦合时，一个组件的故障往往会引发其他组件的故障。如今，“联系”这个词可能有多种令人惊讶的定义。你可能知道软件组件如何根据体系结构图交换数据，但你知道哪些机器在同一台机器上运行吗？或者共享同一个网络交换机？或者配电单元？或者BIOS版本？如果你负责一个大型系统足够长的时间，你肯定会体会到这一点。

调试复杂系统呈现的错误结果时，请记住寻找“根本原因”通常是不够的。它可能像老鼠一样难以捉摸，吱吱叫着四处逃窜。你可能需要错误校正算法来帮助你，这些算法专门设计用于保护系统免受自身分歧的影响。始终处于部分故障状态

在维护系统时，通过对级联故障进行问题回溯，你会意识到许多部分在灾难发生之前就已经失效。大型系统始终处于部分故障状态。这是平均故障间隔时间（MTBF）和平均修复时间（MTTR）之间相互作用的不可避免的事实。

运营团队通常试图增加MTBF并减少MTTR，尤其是在硬件组件级别，因为这是唯一可以有效测量“任何事物的平均时间”的层次。尽管如此，当你查看整个系统时，“勉强可以接受”的容错提升往往会立即被另一层破坏。

假设你有一个分布式存储系统，该系统设计为容忍阵列中的三块磁盘同时发生故障。硬件团队充满希望，采取巧妙的测量方式来“保证”阵列永远不会有一个以上的磁盘坏掉。一年后，你会发现应用程序已被重新优化，现在只能容忍一块磁盘坏掉。为什么会这样？统计分析显示，无论如何规划，最终都会“恰恰”足够好。右手给五元，左手拿光光。

大量团队（系统组件也是如此）活动将展示许多这样的互有得失的例子。因为人类的责任心总是难以持久，真正有效的往往是进化率。正如生物学中的进化不会产生最佳解决方案，而是产生“恰恰好”的解决方案。这种系统的自然状态是“尽可能远离灾难”，但实际上往往只是一步之遥。

哥伦比亚号和挑战者号航天飞机的事故调查很好地说明了安全边界是如何不断在构建后消耗的，以及如何因为“导致灾难的小过错”被忽略而错失最后的挽回机会。复杂工程因为严格的管理流程，每个组件都留有设计的安全余量，以确保极高的可靠性。迄今为止，航天飞机系统在两次灾难之间的最高安全记录是135次飞行。

在启动新应用程序之前，如果你有幸查看其设计文档，请注意基础结构组件的设计如何达成已发布的服务级别协议（SLA）。这样做会降低基础层的安全余量。至少，尝试为历史记录中测量和记录的性能进行设计。

### 优先级倒置的新尝试
我们已经提到过工程师的晋升两次，这并不是为了吸引眼球。由于人的系统和计算机系统是同构的，个人激励机制是推动计算机系统演化的无形之手。硬件维护人员追求更短的MTTR是很正常的，因为这关系到他们的绩效。存储运营商希望提高安全性并降低成本，这也是正常的，因为这会给他们带来好评。

作为一个曾经负责数十个项目的人，我在招聘时非常注重使命感，因为这些项目关系着成千上万的人生与死。使命感带来了长期专注，当项目预算有限时尤其重要。总有一天，倦怠会袭来，即使是最纯洁的人也难以抵御，生活上的顾虑也会导致情绪低落。

科技领域的价值观是什么？显然，成功的工程师手头的任务不会越来越少。因此，科技人士对“生活质量”的追求如同金钱一样重要。这不是一种被大众广泛接受的理念，但它确实是科技领域特有的价值观。相比之下，金钱和管理层、奖励机制和晋升程序紧密相关。因此，这些因素决定了你的公司和你管理的每个系统的长期行为。什么是优秀的？别听信公司说什么有价值；相反，看看谁被提升了。与这些人相关的行为将得到推崇。剩下那些人的行为则不会受到重视。这种提升压力将超越公司领导者的任何明确意图。