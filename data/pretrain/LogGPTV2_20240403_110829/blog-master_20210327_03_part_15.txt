                                                         ->  Seq Scan on t3 t3_5  
                                             ->  Index Only Scan using t1_pkey on t1 t1_5  
                           ->  Index Only Scan using t2_pkey on t2 t2_3  
                                 Index Cond: (id = $1)  
                     ->  Index Only Scan using t1_pkey on t1 t1_3  
                           Index Cond: (id = $1)  
               ->  Seq Scan on t3 t3_1  
                     Filter: (id = $1)  
         ->  Index Only Scan using t2_pkey on t2 t2_1  
               Index Cond: (id = $1)  
   ->  Index Only Scan using t1_pkey on t1 t1_1  
         Index Cond: (id = $1)  
(51 rows)  
SET from_collapse_limit TO 1;  
EXPLAIN (COSTS false)  
WITH c1_1(id) AS (  
SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id  
)  
SELECT t1_1.id, (  
SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id  
) FROM t1 t1_1, t2 t2_1, t3 t3_1, (  
SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id  
) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (  
SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id   
);  
                             QUERY PLAN                               
--------------------------------------------------------------------  
 Nested Loop  
   InitPlan 1 (returns $0)  
     ->  Aggregate  
           ->  Merge Join  
                 Merge Cond: (t1_2.id = t3_2.id)  
                 ->  Merge Join  
                       Merge Cond: (t1_2.id = t2_2.id)  
                       ->  Index Only Scan using t1_pkey on t1 t1_2  
                       ->  Index Only Scan using t2_pkey on t2 t2_2  
                 ->  Sort  
                       Sort Key: t3_2.id  
                       ->  Seq Scan on t3 t3_2  
   InitPlan 2 (returns $1)  
     ->  Aggregate  
           ->  Merge Join  
                 Merge Cond: (t1_4.id = t3_4.id)  
                 ->  Merge Join  
                       Merge Cond: (t1_4.id = t2_4.id)  
                       ->  Index Only Scan using t1_pkey on t1 t1_4  
                       ->  Index Only Scan using t2_pkey on t2 t2_4  
                 ->  Sort  
                       Sort Key: t3_4.id  
                       ->  Seq Scan on t3 t3_4  
   ->  Nested Loop  
         ->  Nested Loop  
               ->  Nested Loop  
                     ->  Index Only Scan using t1_pkey on t1 t1_1  
                           Index Cond: (id = $1)  
                     ->  Index Only Scan using t2_pkey on t2 t2_1  
                           Index Cond: (id = $1)  
               ->  Seq Scan on t3 t3_1  
                     Filter: (id = $1)  
         ->  Nested Loop  
               ->  Nested Loop  
                     ->  Index Only Scan using t1_pkey on t1 t1_3  
                           Index Cond: (id = $1)  
                     ->  Index Only Scan using t2_pkey on t2 t2_3  
                           Index Cond: (id = $1)  
               ->  Seq Scan on t3 t3_3  
                     Filter: (id = $1)  
   ->  Aggregate  
         Filter: (max(t1_5.id) = $1)  
         ->  Merge Join  
               Merge Cond: (t1_5.id = t3_5.id)  
               ->  Merge Join  
                     Merge Cond: (t1_5.id = t2_5.id)  
                     ->  Index Only Scan using t1_pkey on t1 t1_5  
                     ->  Index Only Scan using t2_pkey on t2 t2_5  
               ->  Sort  
                     Sort Key: t3_5.id  
                     ->  Seq Scan on t3 t3_5  
(51 rows)  
/*+HashJoin(t1_1 t3_1)MergeJoin(t1_3 t3_3)NestLoop(t1_2 t2_2)NestLoop(t1_4 t2_4)NestLoop(t1_5 t2_5)*/  
EXPLAIN (COSTS false)  
WITH c1_1(id) AS (  
SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id  
)  
SELECT t1_1.id, (  
SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id  
) FROM t1 t1_1, t2 t2_1, t3 t3_1, (  
SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id  
) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (  
SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id   
);  
LOG:  pg_hint_plan:  
used hint:  
HashJoin(t1_1 t3_1)  
NestLoop(t1_2 t2_2)  
MergeJoin(t1_3 t3_3)  
NestLoop(t1_4 t2_4)  
NestLoop(t1_5 t2_5)  
not used hint:  
duplication hint:  
error hint:  
                             QUERY PLAN                               
--------------------------------------------------------------------  
 Nested Loop  
   InitPlan 1 (returns $1)  
     ->  Aggregate  
           ->  Merge Join  
                 Merge Cond: (t1_2.id = t3_2.id)  
                 ->  Nested Loop  
                       ->  Index Only Scan using t2_pkey on t2 t2_2  
                       ->  Index Only Scan using t1_pkey on t1 t1_2  
                             Index Cond: (id = t2_2.id)  
                 ->  Sort  
                       Sort Key: t3_2.id  
                       ->  Seq Scan on t3 t3_2  
   InitPlan 2 (returns $3)  
     ->  Aggregate  
           ->  Merge Join  
                 Merge Cond: (t1_4.id = t3_4.id)  
                 ->  Nested Loop  
                       ->  Index Only Scan using t2_pkey on t2 t2_4  
                       ->  Index Only Scan using t1_pkey on t1 t1_4  
                             Index Cond: (id = t2_4.id)  
                 ->  Sort  
                       Sort Key: t3_4.id  
                       ->  Seq Scan on t3 t3_4  
   ->  Nested Loop  
         ->  Nested Loop  
               ->  Nested Loop  
                     ->  Index Only Scan using t1_pkey on t1 t1_1  
                           Index Cond: (id = $3)  
                     ->  Index Only Scan using t2_pkey on t2 t2_1  
                           Index Cond: (id = $3)  
               ->  Seq Scan on t3 t3_1  
                     Filter: (id = $3)  
         ->  Nested Loop  
               ->  Nested Loop  
                     ->  Index Only Scan using t1_pkey on t1 t1_3  
                           Index Cond: (id = $3)  
                     ->  Index Only Scan using t2_pkey on t2 t2_3  
                           Index Cond: (id = $3)  
               ->  Seq Scan on t3 t3_3  
                     Filter: (id = $3)  
   ->  Aggregate  
         Filter: (max(t1_5.id) = $3)  
         ->  Merge Join  
               Merge Cond: (t1_5.id = t3_5.id)  
               ->  Nested Loop  
                     ->  Index Only Scan using t2_pkey on t2 t2_5  
                     ->  Index Only Scan using t1_pkey on t1 t1_5  
                           Index Cond: (id = t2_5.id)  
               ->  Sort  
                     Sort Key: t3_5.id  
                     ->  Seq Scan on t3 t3_5  
(51 rows)  
/*+HashJoin(t1_1 t3_1)MergeJoin(t1_3 t3_3)NestLoop(t1_2 t2_2)NestLoop(t1_4 t2_4)NestLoop(t1_5 t2_5)Leading(a t1_1 t1_2 t1_4 t1_5)*/  
EXPLAIN (COSTS false)  
WITH c1_1(id) AS (  
SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id  
)  
SELECT t1_1.id, (  
SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id  
) FROM t1 t1_1, t2 t2_1, t3 t3_1, (  
SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id  
) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (  
SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id   
);  
LOG:  pg_hint_plan:  
used hint:  
HashJoin(t1_1 t3_1)  
NestLoop(t1_2 t2_2)  
MergeJoin(t1_3 t3_3)  
NestLoop(t1_4 t2_4)  
NestLoop(t1_5 t2_5)  
not used hint:  
Leading(a t1_1 t1_2 t1_4 t1_5)  
duplication hint:  
error hint:  
                             QUERY PLAN                               
--------------------------------------------------------------------  
 Nested Loop  
   InitPlan 1 (returns $1)  
     ->  Aggregate  
           ->  Merge Join  
                 Merge Cond: (t1_2.id = t3_2.id)  
                 ->  Nested Loop  
                       ->  Index Only Scan using t2_pkey on t2 t2_2  
                       ->  Index Only Scan using t1_pkey on t1 t1_2  
                             Index Cond: (id = t2_2.id)  
                 ->  Sort  
                       Sort Key: t3_2.id  
                       ->  Seq Scan on t3 t3_2  
   InitPlan 2 (returns $3)  
     ->  Aggregate  
           ->  Merge Join  
                 Merge Cond: (t1_4.id = t3_4.id)  
                 ->  Nested Loop  
                       ->  Index Only Scan using t2_pkey on t2 t2_4  
                       ->  Index Only Scan using t1_pkey on t1 t1_4  
                             Index Cond: (id = t2_4.id)  
                 ->  Sort  
                       Sort Key: t3_4.id  
                       ->  Seq Scan on t3 t3_4  
   ->  Nested Loop  
         ->  Nested Loop  
               ->  Nested Loop  
                     ->  Index Only Scan using t1_pkey on t1 t1_1  
                           Index Cond: (id = $3)  
                     ->  Index Only Scan using t2_pkey on t2 t2_1  
                           Index Cond: (id = $3)  
               ->  Seq Scan on t3 t3_1  
                     Filter: (id = $3)  
         ->  Nested Loop  
               ->  Nested Loop  
                     ->  Index Only Scan using t1_pkey on t1 t1_3  
                           Index Cond: (id = $3)  
                     ->  Index Only Scan using t2_pkey on t2 t2_3  
                           Index Cond: (id = $3)  
               ->  Seq Scan on t3 t3_3  
                     Filter: (id = $3)  
   ->  Aggregate  
         Filter: (max(t1_5.id) = $3)  
         ->  Merge Join  
               Merge Cond: (t1_5.id = t3_5.id)  
               ->  Nested Loop  
                     ->  Index Only Scan using t2_pkey on t2 t2_5  
                     ->  Index Only Scan using t1_pkey on t1 t1_5  
                           Index Cond: (id = t2_5.id)  
               ->  Sort  
                     Sort Key: t3_5.id  
                     ->  Seq Scan on t3 t3_5  
(51 rows)  
/*+HashJoin(t1_1 t3_1)MergeJoin(t1_3 t3_3)NestLoop(t1_2 t2_2)NestLoop(t1_4 t2_4)NestLoop(t1_5 t2_5)Leading(a t3_2 t3_5 t2_2 c1_1 t3_4 t3_3 t2_3 t2_4 t1_3 t2_5 t1_2 t3_1 t1_4 t2_1 t1_5 t1_1)*/  
EXPLAIN (COSTS false)  
WITH c1_1(id) AS (  
SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id  
)  
SELECT t1_1.id, (  
SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id  
) FROM t1 t1_1, t2 t2_1, t3 t3_1, (  
SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id  
) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (  
SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id   
);  
LOG:  pg_hint_plan:  
used hint:  
HashJoin(t1_1 t3_1)  
NestLoop(t1_2 t2_2)  
MergeJoin(t1_3 t3_3)  
NestLoop(t1_4 t2_4)  
NestLoop(t1_5 t2_5)  
not used hint:  
Leading(a t3_2 t3_5 t2_2 c1_1 t3_4 t3_3 t2_3 t2_4 t1_3 t2_5 t1_2 t3_1 t1_4 t2_1 t1_5 t1_1)  
duplication hint:  
error hint:  
                             QUERY PLAN                               
--------------------------------------------------------------------  
 Nested Loop  
   InitPlan 1 (returns $1)  
     ->  Aggregate  
           ->  Merge Join  
                 Merge Cond: (t1_2.id = t3_2.id)  
                 ->  Nested Loop  
                       ->  Index Only Scan using t2_pkey on t2 t2_2  
                       ->  Index Only Scan using t1_pkey on t1 t1_2  
                             Index Cond: (id = t2_2.id)  
                 ->  Sort  
                       Sort Key: t3_2.id  
                       ->  Seq Scan on t3 t3_2  
   InitPlan 2 (returns $3)  
     ->  Aggregate  
           ->  Merge Join  
                 Merge Cond: (t1_4.id = t3_4.id)  
                 ->  Nested Loop  
                       ->  Index Only Scan using t2_pkey on t2 t2_4  
                       ->  Index Only Scan using t1_pkey on t1 t1_4  
                             Index Cond: (id = t2_4.id)  
                 ->  Sort  
                       Sort Key: t3_4.id  
                       ->  Seq Scan on t3 t3_4  
   ->  Nested Loop  
         ->  Nested Loop  
               ->  Nested Loop  
                     ->  Index Only Scan using t1_pkey on t1 t1_1  
                           Index Cond: (id = $3)  
                     ->  Index Only Scan using t2_pkey on t2 t2_1  
                           Index Cond: (id = $3)  
               ->  Seq Scan on t3 t3_1  
                     Filter: (id = $3)  
         ->  Nested Loop  
               ->  Nested Loop  
                     ->  Index Only Scan using t1_pkey on t1 t1_3  
                           Index Cond: (id = $3)  
                     ->  Index Only Scan using t2_pkey on t2 t2_3  
                           Index Cond: (id = $3)  
               ->  Seq Scan on t3 t3_3  
                     Filter: (id = $3)  
   ->  Aggregate  
         Filter: (max(t1_5.id) = $3)  
         ->  Merge Join  
               Merge Cond: (t1_5.id = t3_5.id)  
               ->  Nested Loop  
                     ->  Index Only Scan using t2_pkey on t2 t2_5  
                     ->  Index Only Scan using t1_pkey on t1 t1_5  
                           Index Cond: (id = t2_5.id)  
               ->  Sort  
                     Sort Key: t3_5.id  
                     ->  Seq Scan on t3 t3_5  
(51 rows)  
/*+HashJoin(t1_1 t3_1)MergeJoin(t1_3 t3_3)NestLoop(t1_2 t2_2)NestLoop(t1_4 t2_4)NestLoop(t1_5 t2_5)Leading(t3_5 t2_5 t1_5)Leading(t3_2 t2_2 t1_2)Leading(t3_4 t2_4 t1_4)Leading(c1_1 t3_3 t2_3 t1_3 t3_1 t2_1 t1_1)*/  
EXPLAIN (COSTS false)  
WITH c1_1(id) AS (  
SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id  
)  
SELECT t1_1.id, (  
SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id  
) FROM t1 t1_1, t2 t2_1, t3 t3_1, (  
SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id  
) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (  
SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id   
);  
LOG:  pg_hint_plan:  
used hint:  
MergeJoin(t1_3 t3_3)  
Leading(t3_5 t2_5 t1_5)  
Leading(t3_2 t2_2 t1_2)  
Leading(t3_4 t2_4 t1_4)  
Leading(c1_1 t3_3 t2_3 t1_3 t3_1 t2_1 t1_1)  
not used hint:  
HashJoin(t1_1 t3_1)  
NestLoop(t1_2 t2_2)  
NestLoop(t1_4 t2_4)  
NestLoop(t1_5 t2_5)  
duplication hint:  
error hint:  
                                     QUERY PLAN                                       
------------------------------------------------------------------------------------  
 Nested Loop  
   InitPlan 1 (returns $0)  
     ->  Aggregate  
           ->  Merge Join  
                 Merge Cond: (t2_2.id = t1_2.id)  
                 ->  Merge Join  
                       Merge Cond: (t2_2.id = t3_2.id)  
                       ->  Index Only Scan using t2_pkey on t2 t2_2  