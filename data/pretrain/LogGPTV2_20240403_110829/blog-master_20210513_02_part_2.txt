  12     "idx" btree (f1)    
  13     
  14 CREATE TABLE cmdata1(f1 TEXT COMPRESSION lz4);    
  15 INSERT INTO cmdata1 VALUES(repeat('1234567890', 1004));    
  16 \d+ cmdata1    
  17                                         Table "public.cmdata1"    
  18  Column | Type | Collation | Nullable | Default | Storage  | Compression | Stats target | Description     
  19 --------+------+-----------+----------+---------+----------+-------------+--------------+-------------    
  20  f1     | text |           |          |         | extended | lz4         |              |     
  21     
```
11、libpq驱动 支持pipeline 模式, SQL请求支持异步化通信, 大幅度提升性能, 降低RT  
- 场景: 时序、IoT类、日志appendonly类业务. 跨网段、跨公网的业务与数据库网络访问延时较高的场景, 同时有较大的写入吞吐需求  
- 价值: 提高网络环境较差的数据写入吞吐, 可以达到接近本地网络的数据写入吞吐性能. 性能提升数量级.     
- DEMO:
```
\set size 10000000
\set r random_zipfian(1, :size, 2)
\set k permute(:r, :size)
\startpipeline
insert into tbl values (:r, :k);
insert into tbl values (:r, :k);
insert into tbl values (:r, :k);
insert into tbl values (:r, :k);
insert into tbl values (:r, :k);
\endpipeline
```
### 详见  
1、This release has significant improvements in transaction throughput for PostgreSQL systems that have large numbers of connections to the database, regardless if they are in an active or idle state.  
- [《PostgreSQL 14 GetSnapshotData 高并发优化, 以及 64位xid避免xid wrap优化》](../202008/20200812_01.md)      
2、PostgreSQL 14 also contains additional gains in reducing B-tree indexing overhead, including :   
reducing the bloat on tables with frequently updated indexes. (频繁更新索引列引起的索引分裂和膨胀问题大幅度缓解 Enhance nbtree index tuple deletion - bottom-up index deletion)  
- [《PostgreSQL 14 preview - 频繁更新索引列引起的索引分裂和膨胀问题大幅度缓解, Enhance nbtree index tuple deletion - bottom-up index deletion》](../202101/20210116_01.md)      
3、GiST indexes can now presort data during their build process, allowing both for faster index creation and smaller indexes.  (gist和sp-gist索引AM支持sort接口, 大幅加速GiST和SP-GiST 索引build速度, 同时降低生成的索引空间大小.)      
- [《PostgreSQL 14 preview - gist和sp-gist索引AM支持sort接口, 大幅加速GiST和SP-GiST 索引build速度》](../202104/20210408_07.md)      
- [《PostgreSQL 14 preview  GiST 索引新增openapi: sortsupport - 加速gist索引创建, 紧凑组织gist index page.》](../202009/20200920_02.md)      
4、SP-GiST indexes now support covering indexes that allow users to add additional nonsearchable columns to the index through the INCLUDE clause. (支持任意维度聚集)  
- [《PostgreSQL 14 preview - SP-GiST 索引新增 index 叶子结点 include column value 功能 支持》](../202104/20210406_04.md)      
5、BRIN 索引支持多区间, 支持布隆过滤器. 性能和适应场景增强   
- [《PostgreSQL 14 preview - BRIN (典型IoT 时序场景) 块级索引支持 bloom filter - 随机,大量distinct value, 等值查询》](../202103/20210326_02.md)      
- [《PostgreSQL 14 preview - BRIN (典型IoT 时序场景) 块级索引支持 multi-range min-max  - 分段范围索引》](../202103/20210326_01.md)      
6、There are many improvements to query parallelism in PostgreSQL 14 :   
In addition to overall performance improvements for parallel sequential scans, (给worker分配任务时, 按chunk来进行分配, 而不是每次分配1个block. 使得prefetch可以更加有效, 而且每个worker的IO是顺序IO, 更加有效.)    
- [《PostgreSQL 14 并行优化 - seqscan io chunk优化, 避免离散IO》](../202007/20200727_03.md)      
7、the RETURN QUERY directive in PL/pgSQL can now execute queries with parallelism.   
8、REFRESH MATERIALIZED VIEW can now use query parallelism as well.  
- [《PostgreSQL 14 preview - Enable parallelism in REFRESH MATERIALIZED VIEW》](../202103/20210318_01.md)        
9、FDW:   
PostgreSQL 14 also introduces the ability to leverage query parallelism when querying remote databases using foreign data wrappers. The PostgreSQL foreign data wrapper, postgres_fdw, added support for this in PostgreSQL 14 when the async_capable flag is set.   
- [《PostgreSQL 14 preview - postgres_fdw 异步append - sharding 性能增强 - 实现真正意义上跨库并行计算》](../202010/20201010_05.md)      
postgres_fdw also supports bulk inserts   
- [《PostgreSQL 14 preview - FDW 支持bulk insert API(GetForeignModifyBatchSize,ExecForeignBatchInsert) - postgres_fdw 外部表实现bulk insert接口》](../202101/20210121_01.md)      
and can import table partitions using IMPORT FOREIGN SCHEMA   
- [《PostgreSQL 14 preview - 支持通过import foreign schema 导入指定远端分区表的子分区 - postgres_fdw , import foreign schema 支持 limit to (子分区)》](../202104/20210407_02.md)      
and can now execute TRUNCATE on foreign tables.  
- [《PostgreSQL 14 preview - FDW 外部表接口支持 truncate only|cascade , postgres_fdw已实现, 基于FDW的sharding 功能更进一步》](../202104/20210409_02.md)      
- [《PostgreSQL 14 preview - postgres_fdw 支持 hold foreign server 长连接, fdw sharding再进一步 - postgres_fdw: Add option to control whether to keep connections open》](../202104/20210403_02.md)        
10、分区表:   
This release also has several improvements to the partitioning system, including :  
- [《PostgreSQL 14 preview - 分区表性能增强, Avoid creating duplicate cached plans for inherited FK constraints. 节约cache》](../202103/20210311_01.md)      
performance gains when updating or deleting rows on tables where only a few partitions are affected.   
- [《PostgreSQL 14 preview - 分区表性能再次增强 - ExecInitModifyTable 分区裁剪精细化》](../202104/20210407_01.md)      
- [《PostgreSQL 14 preview - 优化器增强 Rework planning and execution of UPDATE and DELETE. (减少传导不必要的列value、避免为每个分区生成subplan)》](../202104/20210401_04.md)      
In PostgreSQL 14, partitions can now be detached in a non-blocking manner using the ALTER TABLE ... DETACH PARTITION ... CONCURRENTLY command. (分区表attach, detach分区支持无锁(短暂锁) - 基于2阶段routines管理)   
- [《PostgreSQL 14 preview - 分区表attach, detach分区支持无锁(短暂锁) - 基于2阶段routines管理》](../202103/20210326_04.md)      
- [《PostgreSQL 14 preview - alter table 支持两阶段 routine 管理, 未来将基于此支持 无(短暂)锁 rewrite table(例如vacuum full, alter table rewrite table)》](../202103/20210326_03.md)        
11、Incremental sorting, introduced in the previous release, can now be used by window functions in PostgreSQL 14.   
- [《PostgreSQL 14 preview - 支持window function的incremental sort》](../202009/20200916_01.md)      
12、This new release adds more capabilities to extended statistics, which can now be applied to expressions.  
Extended statistics on expressions 优化器增强: 自定义扩展统计信息支持 指定 表达式 - 按 表达式 收集统计信息组合  
- [《PostgreSQL 14 preview - Extended statistics on expressions 优化器增强: 自定义扩展统计信息支持 指定 表达式 - 按 表达式 收集统计信息组合》](../202103/20210327_02.md)      
13、增强or, and多条件选择性评估 - 使用multiple extended statistics  
- [《PostgreSQL 14 preview - 增强or, and多条件选择性评估 - 使用multiple extended statistics》](../202012/20201209_02.md)      
14、大表search IN ( consts ) - linear search TO hash table probe (consts 个数>= MIN_ARRAY_SIZE_FOR_HASHED_SAOP 9)  
- [《PostgreSQL 14 preview - 大表search IN ( consts ) - linear search TO hash table probe (consts 个数>= MIN_ARRAY_SIZE_FOR_HASHED_SAOP)》](../202105/20210519_02.md)    
15、PostgreSQL has supported compression on its "oversized data" columns (i.e. the TOAST system) for decades, but this release adds the ability to now choose to use LZ4 compression for column compression.   
TOAST 支持 lz4 压缩算法 - --with-lz4 , 新增GUC default_toast_compression  
- [《PostgreSQL 14 preview - TOAST 支持 lz4 压缩算法 - --with-lz4 , 新增GUC default_toast_compression》](../202103/20210320_01.md)      
16、libpq驱动 支持pipeline 模式  
- [《PostgreSQL 14 preview - libpq驱动 支持pipeline 模式, SQL请求支持异步化通信, 大幅度提升性能, 降低RT》](../202103/20210316_03.md)        
## 二、数据类型和SQL  
1、支持multi range类型, 兼容range类型已知的所有操作符, 索引.   
- 场景: 物联网  
- 价值: 存储传感器的指标波动范围, 允许在一个value里面存储多个范围区间. 同时支持范围的包含、相交、左、右、相邻等逻辑查询(支持索引加速)  
- DEMO:
```
SELECT '{}'::int4multirange;
SELECT '{[3,7)}'::int4multirange;
SELECT '{[3,7), [8,9)}'::int4multirange;
```
2、支持 jsonb 下标语法, 大幅度简化JSON类型的使用, 支持set原子操作  
- 场景: 通用场景  
- 价值: 大幅度简化JSON类型的使用.   
- DEMO:
```
+select ('{"a": {"a1": {"a2": "aaa"}}, "b": "bbb", "c": "ccc"}'::jsonb)['a']['a1'];  
+     jsonb       
+---------------  
+ {"a2": "aaa"}  
+(1 row) 
```
3、支持存储过程OUT参数  
- 场景: 通用场景  
- 价值: 支持存储过程返回VALUE  
4、支持group by grouping sets,rollup,cube distinct语法过滤重复group组合  
- 场景: 分析场景  
- 价值: 自动重复组合过滤, 支持更友好的多组聚合  
5、递归(CTE)图式搜索增加广度优先、深度优先语法, 循环语法  
- 场景: 社交、风控、图式数据、图谱、TOP等场景  
- 价值: 简化 广度优先、深度优先语法, 循环检测的SQL写法  
- DEMO:
```
WITH RECURSIVE search_tree(id, link, data) AS (
    SELECT t.id, t.link, t.data
    FROM tree t
  UNION ALL
    SELECT t.id, t.link, t.data
    FROM tree t, search_tree st
    WHERE t.id = st.link
) SEARCH DEPTH FIRST BY id SET ordercol
SELECT * FROM search_tree ORDER BY ordercol;
WITH RECURSIVE search_tree(id, link, data) AS (
    SELECT t.id, t.link, t.data
    FROM tree t
  UNION ALL
    SELECT t.id, t.link, t.data
    FROM tree t, search_tree st
    WHERE t.id = st.link
) SEARCH BREADTH FIRST BY id SET ordercol
SELECT * FROM search_tree ORDER BY ordercol;
WITH RECURSIVE search_graph(id, link, data, depth) AS (
    SELECT g.id, g.link, g.data, 1
    FROM graph g
  UNION ALL
    SELECT g.id, g.link, g.data, sg.depth + 1
    FROM graph g, search_graph sg
    WHERE g.id = sg.link
) CYCLE id SET is_cycle USING path
SELECT * FROM search_graph;
```
6、增加date_bin函数, 支持任意起点, 按任意interval切分bucket, 输入一个时间戳返回这个时间戳所在的bucket timestamp  
- 场景: 时序场景、分析场景  
- 价值: 按时间间隔打点聚合, 简化打点的算法  
- DEMO:
```
date_bin(stride, source, origin)
SELECT date_bin('15 minutes', TIMESTAMP '2020-02-11 15:44:17', TIMESTAMP '2001-01-01');
Result: 2020-02-11 15:30:00
SELECT date_bin('15 minutes', TIMESTAMP '2020-02-11 15:44:17', TIMESTAMP '2001-01-01 00:02:30');
Result: 2020-02-11 15:32:30
```
7、支持tid range scan扫描方法, 允许用户输入需要扫描指定数据块的范围  
- 场景: 通用场景, 高并发场景, 大数据吞吐计算场景  
- 价值: 增加了一种新的搜索算法, 按HEAP表的物理存储数据块ctid地址进行搜索. 支持自定义业务层的并行数据扫描逻辑、随机数据扫描逻辑. 结合rr snapshot export支持一致性单表并行导出. 全表并行无锁冲突的更新. 
- DEMO:
```
select * from tidtest where ctid >= '(10,0)' and ctid   
+  
+EXEC SQL BEGIN DECLARE SECTION;  
+char dbname[128];  