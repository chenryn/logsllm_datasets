# Card Brand Mixup Attack: Bypassing the PIN in Non-Visa Cards by Using Them for Visa Transactions

**Authors:** David A. Basin, Ralf Sasse, and Jorge Toro-Pozo  
**Department of Computer Science, ETH Zurich**  
**Publication:** Proceedings of the 30th USENIX Security Symposium, August 11–13, 2021  
**DOI:** 978-1-939133-24-3  
**Link:** [https://www.usenix.org/conference/usenixsecurity21/presentation/basin](https://www.usenix.org/conference/usenixsecurity21/presentation/basin)

## Abstract
In this paper, we demonstrate a novel attack that exploits a mismatch between the card brand and the payment network, from the perspective of the payment terminal. This "card brand mixup" attack allows criminals to use a victim's Mastercard contactless card to make high-value purchases without knowing the card's PIN. The attacker deceives the terminal into believing the card is a Visa card and then applies a recent PIN bypass attack on Visa cards. We have successfully implemented this attack using an Android application and conducted transactions with both Mastercard debit and credit cards, including a transaction over $400 with a Maestro debit card. We also extend our formal model of the EMV contactless protocol to machine-check fixes for the identified issues.

## 1. Introduction
Visa and Mastercard are two of the largest payment networks, with over 3.3 billion and 2 billion cards in circulation, respectively. These companies, along with Europay, founded the EMV standard for smartcard payments. High-value EMV transactions require online authorization from the card issuer, which involves the payment terminal sending an authorization request containing transaction details and a cryptographic Message Authentication Code (MAC). The card issuer verifies the MAC and checks if the account has sufficient funds.

Figure 1 illustrates the communication flow for online transaction authorization, involving four parties: the payment terminal, the merchant’s acquirer, the payment network, and the card issuer. Routing, the process by which the acquirer chooses the payment network, is typically based on the card brand. For example, a Visa-branded card will be routed to the Visa network.

The payment terminal determines the card brand from data objects such as the Primary Account Number (PAN) and Application Identifiers (AIDs). The PAN, or card number, can indicate the card brand through its leading digits. The AIDs, which specify the supported EMV applications, include a Registered Application Provider Identifier (RIDI), typically a 10-digit value.

In this paper, we show that it is possible to deceive the terminal and acquirer into accepting a contactless transaction where the PAN and AID indicate different card brands. Specifically, we have identified a man-in-the-middle attack that tricks the terminal into completing a Visa transaction with a Mastercard card. This attack, which we call a "card brand mixup," has serious security implications, allowing criminals to use a victim's Mastercard card without entering the PIN.

## 2. Background
### 2.1 Relay Attacks and PIN Bypass for Visa
Contactless payment technology, while convenient, has been exposed to various security issues. Payment terminals communicate wirelessly with cards, making them vulnerable to attacks. Near Field Communication (NFC) allows any NFC-enabled device to communicate with a contactless card, potentially engaging in fraudulent transactions. Relay attacks, which extend the range of NFC signals, can be used to perform transactions with a distant payment terminal.

Relay attacks are generally not lucrative because they are limited to low-value transactions. However, in our previous work, we discovered a man-in-the-middle attack that allows criminals to bypass the PIN for contactless Visa transactions. This attack involves setting the Card Transaction Qualifiers (CTQ) to 0x0280, which instructs the terminal that PIN verification is not required. The flaw in the Visa protocol is the lack of authentication for the CTQ data object.

### 2.2 The EMV Contactless Protocol
The EMV specification for contactless transactions is extensive, covering over 1,200 pages. We summarize the key phases of a contactless transaction and highlight the security shortcomings exploited by our attack.

#### 2.2.1 Application Selection
A contactless transaction starts with the application selection process, where the terminal issues a SELECT command, and the card responds with its supported Application Identifiers (AIDs). Based on the AIDs, the terminal activates one of the following kernels:
- Kernel 2 for Mastercard AIDs
- Kernel 3 for Visa AIDs
- Kernel 4 for American Express AIDs
- Kernel 5 for JCB AIDs
- Kernel 6 for Discover AIDs
- Kernel 7 for UnionPay AIDs

#### 2.2.2 Offline Data Authentication
After kernel activation, the card requests the Processing Data Object List (PDOL), which includes transaction-specific data. The terminal supplies this data using the GET PROCESSING OPTIONS command. The card responds with the Application Interchange Profile (AIP) and the Application File Locator (AFL), which the terminal uses to request the card's static data. This data includes the card number, expiration date, supported CVMs, and other processing and risk data.

## 3. The Card Brand Mixup Attack
We demonstrate that it is possible to deceive the terminal into accepting a contactless transaction with a PAN and AID that indicate different card brands. Our attack, called a "card brand mixup," tricks the terminal into completing a Visa transaction with a Mastercard card. This attack has severe consequences, as it allows criminals to use a victim's Mastercard card without entering the PIN.

We have built a proof-of-concept Android application and successfully used it to bypass PIN verification for transactions with Mastercard credit and debit cards, including a transaction over $400 with a Maestro debit card. We have extended our formal model of the EMV protocol to machine-check fixes for the identified issues.

## 4. Countermeasures and Verification
We analyze and verify countermeasures that secure online-authorized transactions. We extend our previous formal models and provide computer-checked security proofs for these fixes. After disclosing the attack to Mastercard, they confirmed its effectiveness and implemented defense mechanisms. In collaboration with Mastercard, we conducted experiments where our attack failed with their new mechanisms in place.

## 5. Related Work
We discuss previous work that exposes and exploits flaws in the EMV standard and draw conclusions in Section 6.

## 6. Ethics and Disclosure
No merchant, bank, or any other entity was defrauded during our tests. We set up and used our own SumUp terminal and merchant account, which is fully realistic and functional. We did not tamper with the hardware or software. After a successful disclosure process with Mastercard, they confirmed the effectiveness of our attack and have since implemented defense mechanisms.

For more details, see [our previous work] and [the extended formal model].