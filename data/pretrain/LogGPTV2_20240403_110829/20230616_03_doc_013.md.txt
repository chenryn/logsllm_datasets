PostgreSQL
数据库备份
Objectives
• 备份术语
• 备份工具
• 备份模式
• basebackup简介
• 全库备份
• 表空间备份
• 只读数据库备份
术语
• 全库备份
Ø 目标数据库处于打开或者关闭状态
Ø 备份$PGDATA下所有的数据文件
• 部分备份
Ø 备份除了pg_global的其它表空间
• 一致性备份
• 不一致性备份
备份工具
• 使用操作系统命令对数据库文件进行备份和恢复
• 使用pg_basebackup对数据库文件进行备份
• 使用pg_rman对数据库文件进行备份和恢复
备份模式
Closed database Closed or open database
NOARCHIVELOG ARCHIVELOG
mode mode
Physical backup
一致性备份（数据库关闭）
备份$PGDATA目录下所有文件
base/ 其它目录 配置文件 其它文件
Online or offline
storage
一致性全库备份的好处
• 概念简单
• 易于执行
• 需要很少的操作员交互
执行一致性全库备份
2
pg_ctl stop
3
HOST cp –rf $PGDATA /backup/
1
base/ global/ pg_wal/ postgresql.conf Other
pg_ctl start
4
数据库打开模式下备份
Base目录 其它相关目录
在线WAL文件
归档文件
参数文件 其它文件
数据库打开模式下备份好处
• 保持高数据库可用性
• 支持不间断的业务运营
数据库打开模式下备份要求
walwriter
ARCHIVELOG mode
052 051
archiver
054 053
051
051 051
052
050252
054 053
053
053
Online wal Archived redo
log files log files
数据库归档
• 归档日志
连续归档是在WAL段切换时将WAL段文件复制到归档区域的功能，由archiver（后台）
进程执行。其中，占位符%p是复制的WAL段，而%f是存档日志。
ALTER SYSTEM SET archive_command = 'cp %p /home/postgres/archives/%f';
ALTER SYSTEM SET archive_mod = on;
执行数据库打开模式下备份
• pg_basebackup
基本备份的标准过程如下所示：
(1) 执行pg_start_backup 命令
(2) 使用tar/cp命令对$PGDATA目录进
行备份
(3) 执行pg_stop_backup 命令
工作原理
pg_basebackup
• pg_start_backup执行以下四个操作
Ø Force into the full-page wirte mode.
Ø Switch to the current WAL segment file (version 8.4 or later).
Ø Do checkpoint.
Ø Create a backup_label file–此文件创建于base目录的同一层，包含有关基本备份
本身的基本信息，例如此检查点的检查点位置。
工作原理
pg_basebackup
• backup_label文件包含如下内容
Ø CHECKPOINT LOCATION –这是记录此命令创建的检查点的LSN位置。
Ø START WAL LOCATION –这不与PITR一起使用，而是与流式复制一起使用。它被
命名为“START WAL LOCATION”，因为处于复制模式的备用服务器在初始启动
时只读取一次该值。
Ø BACKUP METHOD–这是用于进行此基础备份的方法。（pg_start_backup或
pg_basebackup。）
Ø BACKUP FROM –这显示此备份是从主备份还是从备用备份。
Ø START TIME –这是执行pg_start_backup时的时间戳。
Ø LABEL –这是在pg_start_backup中指定的标签。
Ø START TIMELINE –这是备份开始的时间线。这是为了进行健全性检查，并已在
版本11中引入。
工作原理
pg_basebackup
• pg_stop_backup
Ø 如果pg_start_backup强制更改了非整页写入模式，则将其重置为非整页写入模
式。
Ø 写一个备份结束的XLOG记录。
Ø 切换WAL日志。
Ø 创建备份历史文件–此文件包含备份标签文件的内容和执行pg_stop_backup的时
间戳。
Ø 删除备份标签文件–备份标签文件是从基本备份恢复所必需的，一旦复制，就
不必在原始数据库群集中。
执行 备份
pg_basebackup
• 示例
Ø 产生压缩的tar包，-Ft参数指定：
pg_basebackup -D bk1 -Ft -z -P
此备份花的时间比较长，但是节省空间。支持表空间文件存放在其它目录下。
Ø 产生跟源文件一样的格式，即原样格式，-Fp参数指定：
pg_basebackup -D bk2 -Fp -P
此备份方式很快，但是不节省空间。如果有表空间路径放在其它目录下，则备份失
败。
执行用户管理全库备份
• 示例
Ø 数据库中执行开始备份函数
select pg_start_backup('full');
Ø 使用tar命令进行备份
cd $PGATA
tar -zcf /backup/data.tar.gz .
Ø 数据库中执行结束备份函数
select pg_stop_backup();
执行表空间备份
• 示例
Ø 数据库中执行开始备份函数
select pg_start_backup('tbs');
Ø 使用tar命令进行备份（备份pg_default表空间所在的目录）
cd $PGATA
tar -zcf /backup/base.tar.gz base
cp backup_lable /backup
Ø 数据库中执行结束备份函数
select pg_stop_backup();
执行只读数据库备份
• 示例
Ø 把某个数据库变成只读
ALTER DATABASE new_db1 set default_transaction_read_only=on;
Ø 使用tar/cp命令进行备份（备份new_db1所在的目录）
cd $PGATA/base
tar -zcf /backup/90195.tar.gz 90195
总结
• 备份术语
• 备份工具
• 备份模式
• basebackup简介
• 执行备份
练习
• 1、创建表空间外部目录, 创建表空间, 创建数据库db1, 默认表空间设置为新建的表空间.
• 2、创建存放wal归档文件的外部目录.
• 3、配置postgresql.conf, 设置wal_level, 设置archive_mode, 设置archive_command.
• 4、重启数据库实例
• 5、使用pgbench 连接db1, 压测tpcb一段时间.
• 6、在数据库中创建测试表, 包含自增ID, 时间戳. 在tpcb压测过程中, 开启一个会话, 每隔
10秒写入一条记录, 时间戳为当前时间(now()), 持续100秒, 总共写入10条.
• 7、观察归档文件是否正常备份到外部目录.
• 8、使用pg_basebackup备份数据库全量数据.
• 9、使用checkpoint创建检查点, 使用pg_switch_wal切换wal日志文件产生wal归档.