};
Snort Dynamic Rules
Implementation (2)
The Information Security Experts
Copyright © 2008 SecureWorks, Inc. All rights reserved.
my_dynamic_rule.c (con't):
int myRuleDetectionFunc(void *p) {
SFSnortPacket *sp = (SFSnortPacket *) p;
if ((sp) && (sp->ip4_header.identifier % (u_int16_t)2))
return RULE_MATCH;
return RULE_NOMATCH;
}
•
Question for Audience: What does this do?
Snort Dynamic Rules
Implementation (3)
The Information Security Experts
Copyright © 2008 SecureWorks, Inc. All rights reserved.
•
Another key header file: "sf_dynamic_preprocessor.h"
•
Key struct: "DynamicPreprocessorData"
 Typically defined as extern variable named "_dpd"
•
Contains:
 Functions to add callbacks for Init / Exit / Restart
 Internal logging functions
 Stream API
 Search API
 Alert functions
 Snort Inline (IPS) functions
Snort Dynamic Preprocessors
Background
The Information Security Experts
Copyright © 2008 SecureWorks, Inc. All rights reserved.
void SetupActiveX(void) {
_dpd.registerPreproc("activex", ActiveXInit);
}
static void ActiveXInit(char *args) {
_dpd.addPreproc(ProcessActiveX, 
PRIORITY_TRANSPORT, PP_ACTIVEX);
}
 static void ProcessActiveX(void* pkt, void* contextp) {
[…]
_dpd.alertAdd(GENERATOR_SPP_ACTIVEX, 
ACTIVEX_EVENT_KILLBIT, 1, 0, 3, 
ACTIVEX_EVENT_KILLBIT_STR, 0);
return;
}
Snort Dynamic Preprocessors
spp_activex.c
The Information Security Experts
Copyright © 2008 SecureWorks, Inc. All rights reserved.
•
We can try calling rule option matching functions directly, 
but need internal structures first properly initialized.
•
Use dummy Rule struct and ruleMatch():
 ENGINE_LINKAGE int ruleMatch(void *p, Rule *rule);
•
RegisterOneRule(&rule, DONT_REGISTER_RULE);
•
Confusing, huh?
•
RegisterOneRule will setup Boyer-Moore and internal ptrs
•
But we don't always want to register the rules as an OTN
•
So, pass in DONT_REGISTER_RULE.  See?
Snort Plug-in API
Using Rules Within a Dynamic Preprocessor
The Information Security Experts
Copyright © 2008 SecureWorks, Inc. All rights reserved.
•
Available under:
 http://www.secureworks.com/research/tools/
•
Released under GPLv2 (or later)
•
No Support
•
No Warranty
•
Use at Your Own Risk
•
Feedback is appreciated!
SecureWorks Snort Plug-ins
The Information Security Experts
Copyright © 2008 SecureWorks, Inc. All rights reserved.
•
Inspects web traffic for scripting instantiating "vulnerable" 
ActiveX controls
 As based on public vulnerability disclosures
•
Preprocessor configuration points to local DB of ActiveX 
controls
 Listed by CLSID and optionally method/property
 XML format (I know, I know…)
•
Looks at traffic being returned from HTTP servers
 ActiveX instantiation and Class ID
 Access to ActiveX control's methods / properties
ActiveX Detection Dynamic Preprocessor
The Information Security Experts
Copyright © 2008 SecureWorks, Inc. All rights reserved.
•
Can presently be bypassed
 JavaScript obfuscation
 HTTP encodings
 But many attackers still using plain CLSID!
•
Future Snort Inline support
 Drop or TCP RST the HTTP response
•
Leveraging of normalization done by HTTP Inspect
•
Enhance to use Unified2 extra data to log detected domain 
name
ActiveX Detection Dynamic Preprocessor
Continued
The Information Security Experts
Copyright © 2008 SecureWorks, Inc. All rights reserved.
•
Uses matchRule(Rule*) from Snort Plug-in API
 Very convenient
 Not the most efficient
•
Performs naïve linear search of CLSIDs
 Enhance to reuse HTTP Inspect's high-performance 
data-structures?
•
Uses Snort's flow match
•
Performs content matching and PCRE matching
ActiveX Detection Dynamic Preprocessor
Internals
The Information Security Experts
Copyright © 2008 SecureWorks, Inc. All rights reserved.
Live Demo
ActiveX Detection Dynamic Preprocessor
The Information Security Experts
Copyright © 2008 SecureWorks, Inc. All rights reserved.
•
Inspects DNS traffic for blacklisted domain names
•
To be used with DNS blacklists from upstream sources
•
Leverage normalization done by Snort's DNS preprocessor
•
Enhance to use Snort Inline (IPS) functionality
•
Enhance to inject a configurable spoofed DNS response
 Malware Listening Posts
 Sandnets
•
Enhance to use Unified2 extra data to log detected domain 
name
DNS Blacklist Dynamic Preprocessor
The Information Security Experts
Copyright © 2008 SecureWorks, Inc. All rights reserved.
Live Demo
DNS Blacklist Dynamic Preprocessor
The Information Security Experts
Copyright © 2008 SecureWorks, Inc. All rights reserved.
•
Lack of sufficient entropy in PRNG delivered by Debian's 
OpenSSL package
•
Go see Luciano Bello and Maximiliano Bertacchini's talk!
 Saturday, 13:00 – 13:50, Track 4
•
One of the coolest vulns of 2008!
•
Keys generated since 2006-09-17
•
Keys generated with Debian Etch, Lenny or Sid
 Downstream distros such as Ubuntu also vulnerable
Debian OpenSSL Predictable PRNG Vuln
CVE-2008-0166
The Information Security Experts
Copyright © 2008 SecureWorks, Inc. All rights reserved.
Debian OpenSSL Predictable PRNG Vuln
Dilbert (source: H D Moore, metasploit.com)
The Information Security Experts
Copyright © 2008 SecureWorks, Inc. All rights reserved.
Debian OpenSSL Predictable PRNG Vuln
XKCD (source: H D Moore, metasploit.com)
The Information Security Experts
Copyright © 2008 SecureWorks, Inc. All rights reserved.
•
From the Debian Wiki (http://wiki.debian.org/SSLkeys):
•
"… any DSA key must be considered compromised if it has 
been used on a machine with a ‘bad’ OpenSSL. Simply 
using a ‘strong’ DSA key (i.e., generated with a ‘good’ 
OpenSSL) to make a connection from such a machine may 
have compromised it. This is due to an ‘attack’ on DSA that 
allows the secret key to be found it the nonce used in the 
signature is known or reused.”
•
H D Moore was all over this one with a quickness!
 Metasploit hosting lists of brute-forced 'weak' keys
Debian OpenSSL Predictable PRNG Vuln
It’s Bad!
The Information Security Experts
Copyright © 2008 SecureWorks, Inc. All rights reserved.
•
Achieving just those two goals would be valuable
•
You scanned your assets for SSH / SSL servers using the 
blacklisted keys, right? (Tenable Nessus)
•
You scanned all user home dirs for blacklisted SSH keys?
 Debian ssh-vulnkey tool
•
You scanned all user homedirs, Windows Protected 
Storage, and browser profiles for blacklisted SSL certs, 
right?
•
But what about connections to external servers that use 
the bad certs/keys?
Debian OpenSSL Predictable PRNG Vuln
Detection & Mitigation
The Information Security Experts
Copyright © 2008 SecureWorks, Inc. All rights reserved.
•
Presently under development
•
Goal: Detect SSH and SSL handshakes where one or both 
hosts use blacklisted keys / certificates.
•
Just that detective capability is valuable
 Even w/ great technical controls in place, you're likely 
missing:
• Users connecting to external servers using bad keys
• Connections to/from external hosts that use bad 
keys/certs
•
What else can we do?
Debian OpenSSL “Weak Keys” Preprocessor
The Information Security Experts
Copyright © 2008 SecureWorks, Inc. All rights reserved.
•
Goal: Have preprocessor(s) "normalize" traffic by brute-
forcing the DH key exchange, decoding both sides of 
session on-the-fly.
 Snort rule matching engine and other preprocessors can 
then inspect unencrypted session
 Unencrypted sessions can be logged (Unified or PCAP)
•
Potential issue w/ source code release
 Controls on the export of cryptanalytic software (US)
•
Credit: Alexander Klink 
 http://seclists.org/fulldisclosure/2008/May/0592.html
 http://www.cynops.de/download/check_weak_dh_ssh.pl
.bz2
Debian OpenSSL “Weak Keys” Preprocessor
Continued
The Information Security Experts
Copyright © 2008 SecureWorks, Inc. All rights reserved.
•
Snort v3
 Complete redesign from the ground up
 Extremenly flexible and extensible architecture
 Snort 2.8.x matching engine plugs in as module
 HW optimized packet acquisition can be plugged in
 Lua programming language!
•
Snort 2.8.3 (Beta)
 Enhancements to HTTP Inspect
• Normalized Buffers for Method, URI, Headers, 
Cookies, Body
• Content and PCRE matching against new buffers
 New HTTP normalization exposed in Snort Plug-in API
Snort Futures
The Information Security Experts
Copyright © 2008 SecureWorks, Inc. All rights reserved.
•
Snort is a powerful framework to work with
 APIs for alerting, logging, Streams, matching
 Why reinvent the wheel?
•
Hopefully, you can take away needed info to start writing 
your own plug-ins.
•
Read the source code of other plug-ins, ask questions.
•
Snort v2 is still evolving. If the APIs don't support 
something you (and potentially others?) really need, ask 
and ye may receive.
Wrapping It All Up
The Information Security Experts
Copyright © 2008 SecureWorks, Inc. All rights reserved.
Thanks to DT, the Goons
and everyone who made
DEFCON a reality this year!
The Information Security Experts
Copyright © 2008 SecureWorks, Inc. All rights reserved.
Greetz to DC404, Atlanta's DC Group!
Speakers: dr.kaos, David Maynor, Scott Moulton
& Adam Bregenzer
And our very own Goon, dc0de!
The Information Security Experts
Copyright © 2008 SecureWorks, Inc. All rights reserved.
Questions?
PI:EMAIL