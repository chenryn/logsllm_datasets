# Title: IoT Application-Centric Access Control (ACAC)
# Authors: Mohammed Al-Shaboti, Ian Welch, and Aaron Chen

## POSTER: IoT Application-Centric Access Control (ACAC)

**Authors:**
- Mohammed Al-Shaboti
- Aaron Chen
- Ian Welch

**Affiliations:**
- School of Engineering and Computer Science, Victoria University of Wellington, Wellington, New Zealand

## ABSTRACT

As smart environments become more prevalent, Internet of Things (IoT) applications are automating increasingly complex and dynamic activities. Users can define their activities as abstract workflows, and suitable devices are dynamically selected to execute them based on user quality of experience (QoE) requirements. However, many such applications violate the principle of least privilege in terms of allowed interactions between IoT devices. We propose an Application-Centric Access Control (ACAC) framework to enable least-privilege network access control for dynamic workflows while considering users' QoE. ACAC automatically derives an access control policy for an IoT application and adjusts it dynamically as new devices join or leave the network, ensuring the maintenance of user QoE.

## KEYWORDS

Internet of Things (IoT), Network Access Control, IoT Applications

## ACM Reference Format

Al-Shaboti, M., Welch, I., & Chen, A. (2019). POSTER: IoT Application-Centric Access Control (ACAC). In ACM Asia Conference on Computer and Communications Security (AsiaCCS '19), July 9â€“12, 2019, Auckland, New Zealand, 3 pages. https://doi.org/10.1145/3321705.3331008

## 1. INTRODUCTION

In recent years, there has been a significant increase in the use of Internet of Things (IoT) applications in smart environments. According to Gartner, a typical smart home network will have up to 500 smart devices by 2022 [9]. Various cloud-based frameworks, such as Microsoft Flow [8], have been developed to manage IoT applications effectively. These frameworks allow users to automate their activities as workflows. For example, a workflow can be set up to prepare coffee at a specified time using an alarm and a coffee maker. Many IoT applications rely on local cross-device communications [13].

Existing research has explored how to define user activities as abstract workflows that capture task and structure levels, leaving resource selection to service discovery mechanisms that determine specific resources (i.e., IoT devices) for task execution, known as concrete/execution workflows [10, 11]. This approach provides users with the flexibility to define workflows and manage dynamic workflows more easily. Workflows can change dynamically due to factors such as user mobility and Quality of Experience (QoE) [3, 4, 7]. For instance, a workflow might use different coffee makers based on the user's location to enhance QoE. Driven by this understanding, researchers have investigated dynamic access control for IoT [5, 6]. However, there is a lack of research on dynamic access control that supports dynamic workflows while considering QoE.

In this paper, we study how to support dynamic workflows through dynamic network access control policies that follow the principle of least privilege (PoLP) and satisfy QoE requirements. The Access Control List (ACL) approach is commonly used for access control, especially in IoT networks [5]. While the capability-based model assigns rights to subjects a priori, the ACL model grants access based on attributes or context, which may be static or dynamic. Additionally, the ACL model can be enforced at the network level, eliminating the need for special libraries on clients such as IoT devices [2]. This is particularly important in the context of IoT, where modifying device code may be impossible. Therefore, applying an ACL model is a practical choice for many smart homes.

In our previous work [1], we studied automatic ACL generation for user-defined workflows to maximize user preferences in a static environment. In this paper, we focus on proposing an IoT security architecture that enables dynamic workflow access control without significantly affecting users' QoE. The proposed architecture, called IoT Application-Centric Access Control (ACAC), relies on the dynamic state of the application workflow for access control decisions.

The dynamic nature of workflows significantly increases the difficulty of generating access control policies. To illustrate these challenges, consider the example in Figure 1, where two activities are modeled as workflows: W1 allows a TV to stream audio through a speaker, and W2 enables an alarm clock to trigger a coffee maker. A user is in a smart environment with several devices, including TV (tv1), speakers (s1, s2), an alarm (a1), and a coffee maker (c1).

At time \( t \), the activity workflow W1 is realized by TV (tv1) and speaker (s1), both located in the living room. Accordingly, the ACL policy P1 is generated and enforced to provide connections between tv1 and s1, and block other connections (Dynamic Access Control Policy (DACP) is presented in Section 2.3). At time \( t + \Delta \), the second workflow W2 is introduced to automate coffee preparation. This time, the alarm (a1) in the living room and the coffee maker (c1) in the kitchen are selected for the task. Consequently, the ACL policy P2 is generated and enforced to provide connections between a1 and c1 and block other connections.

However, upon setting up the new workflow W2, the user's mobility leads to a change in preference, and TV (tv1) in workflow W1 needs to stream to the kitchen speaker (s2) instead of s1 in the living room, as shown in Figure 1.

The challenge is to dynamically update the policy P1 for workflow W1 to obey the PoLP while minimizing the impact on QoE. Specifically, P1 should block the connection from tv1 to s1 and allow the connection from tv1 to s2. However, this is not a trivial problem, as there is a trade-off between the PoLP and minimizing interruptions during the streaming handover. For example, if the connection to s2 is allowed before the handover, it violates the PoLP (tv1 has access to both s1 and s2, but only requires one). On the other hand, if the connection to s1 is blocked before the handover, the streaming service will be interrupted (tv1 cannot access s1), as illustrated in Figures 2(a) and 2(b).

Therefore, an access control mechanism supporting dynamic workflows must be aware of changes at the application level. Motivated by existing technologies that enable dynamic workflow service discovery considering user QoE [3] and support dynamic access control enforcing the PoLP [5, 6], we introduce the following research question: What is the proper way to enforce dynamic access control that obeys the PoLP while not affecting user QoE? We investigate this question by designing an application-centric access control (ACAC) framework for dynamic IoT applications that adheres to the PoLP and considers users' QoE. The proposed ACAC framework introduces an interface between the application level and the network access control level, as shown in Figure 3. This interaction channel enables DACP to enforce access controls while minimizing any interruptions to ongoing services at the application level.

## 2. THE ACAC FRAMEWORK

[This section would continue with the detailed description of the ACAC framework, its components, and how it addresses the challenges outlined in the introduction.]