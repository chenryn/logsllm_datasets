# The Executable Image Exploit

## Overview
**Event:** DEFCON XV  
**Location:** Las Vegas, Nevada  
**Presenter:** PI:EMAIL  
**Website:** [www.schrenk.com](http://www.schrenk.com)

## Learning Objectives
- **Origins of the Exploit:** Understand the background and development of this exploit.
- **Executable vs. Static Images:** Learn the key differences between executable and static images.
- **Creating Images with PHP & GD:** Discover how to generate images using PHP and the GD library.
- **Fooling Servers:** Explore techniques to trick servers into executing images instead of serving them to browsers.
- **Web 2.0 Applications:** Learn how to use images in innovative ways on Web 2.0 platforms.

## What You Won't Learn
- This is not the GDI (Graphics Device Interface) exploit.
- The exploit targets images downloaded from servers.
- It is not a client-side exploit.
- However, this statement is not entirely accurate.

## Goals
- **Programming Executable Images:** Gain knowledge on how to program executable images.
- **Application Areas:** Identify where these images can be applied.
- **Getting Started:** Begin developing your own applications.
- **Presentation Style:** Note that this presentation will not be heavily code-focused.

## About the Presenter
- **Schrenk:** A long-time webbot writer.
- **DEFCON Experience:** 8th DEFCON, 3rd time speaker.
- **Locations:** Minneapolis & Madras (Chennai).

## Exploit Origins
- **Initial Goal:** To create an effective MySpace tracker.
- **Desired Functionality:** Add an image to "friends" pages.
- **Frustration Point:** MySpace does not allow such images.
- **General Restriction:** Most Web 2.0 sites do not permit such images.

### MySpace Restrictions
- **Reasons for Rejection:**
  - The image is a program, not a static image.
  - It is an executable image.
- **Potential Actions:**
  - May still send an image to the browser.
  - Can write cookies.
  - Can track environment variables.
  - Can access databases and send instant messages, among other actions.

## What is an Executable Image?
- **Definition:** Executable images are programs.
- **Common Use Cases:**
  - When images are stored in databases.
  - Dynamically delivering altered images, such as:
    - Watermarks with timestamps or IP addresses.
    - CAPTCHAs.

### Example: Pulling an Image from a Database
- **Code Requirements:**
  - No special graphics libraries needed.
  - The image must be stored in the database as a BLOB.
  - Images can be referenced by index or name.
  - Useful when web servers lack file permissions to read/write files.

```php
// Example code to pull an image from a database
$imageData = getImageFromDatabase($imageId);
header('Content-Type: image/jpeg');
echo $imageData;
```

This optimized version aims to provide a clear, concise, and professional structure for the content, making it easier to follow and understand.