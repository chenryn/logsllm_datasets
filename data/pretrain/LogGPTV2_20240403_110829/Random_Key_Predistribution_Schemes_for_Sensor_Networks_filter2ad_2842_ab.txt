f
i
.
o
1
0
e
s
m
o
r
p
m
o
c
o
t
d
e
d
e
e
n
s
e
d
o
n
f
o
m
u
N
48
46
44
42
40
38
36
34
32
30
1
2
3
4
5
6
7
8
9
10
Amount of key overlap
Figure 1. The expected number of nodes an
adversary needs to capture before it is able to
eavesdrop on any link with probability 0.1, for
various amounts of key overlap q. Key ring
size m = 200 keys, probability of connection
p = 0.5.
secure link in the key-setup phase. We propose a modiﬁca-
tion to the basic scheme where q common keys (q > 1) are
needed, instead of just one. By increasing the amount of key
overlap required for key-setup, we increase the resilience of
the network against node capture.
Figure 5 reﬂects the motivation for the q-composite keys
scheme. As the amount of required key overlap increases,
it becomes exponentially harder for an attacker with a given
key set to break a link. However, to preserve the given prob-
ability p of two nodes sharing sufﬁcient keys to establish a
secure link, it is necessary to reduce the size of the key pool
|S|. This allows the attacker to gain a larger sample of S
by breaking fewer nodes. The interplay of these two op-
posing factors results in an optimal amount of key overlap
to pose the greatest obstacle to an attacker for some desired
probability of eavesdropping on a link.
5.1 Description of the q-composite keys scheme
5.1.1 Initialization and key setup
The operation of the q-composite keys scheme is similar to
that of the basic scheme, differing only in the size of the key
pool S and the fact that multiple keys are used to establish
communications instead of just one.
In the initialization phase, we pick a set S of random
keys out of the total key space, where |S| is computed as
described later in Section 5.1.2. For each node, we select m
Proceedings of the 2003 IEEE Symposium on Security and Privacy (SP(cid:146)03) 
1081-6011/03 $17.00 ' 2003 IEEE 
random keys from S (where m is the number of keys each
node can carry in its key ring) and store them into the node’s
key ring.
In the key-setup phase, each node must discover all com-
mon keys it possesses with each of its neighbors. This can
be accomplished with a simple local broadcast of all key
identiﬁers that a node possesses. While broadcast-based key
discovery is straightforward to implement, it has the disad-
vantage that a casual eavesdropper can identify the key sets
of all the nodes in a network and thus pick an optimal set of
nodes to compromise in order to discover a large subset of
the key pool S. A more secure, but slower, method of key
discovery could utilize client puzzles such as a Merkle puz-
zle [16]. Each node could issue m client puzzles (one for
each of the m keys) to each neighboring node. Any node
that responds with the correct answer to the client puzzle is
thus identiﬁed as knowing the associated key.
After key discovery, each node can identify every neigh-
bor node with which it shares at least q keys. Let the number
, where q(cid:1) ≥ q. A new communi-
of actual keys shared be q(cid:1)
cation link key K is generated as the hash of all shared keys,
e.g., K = hash(k1||k2|| . . .||kq(cid:1)). The keys are hashed in
some canonical order, for example, based on the order they
occur in the original key pool S. Key-setup is not performed
between nodes that share fewer than q keys.
5.1.2 Computation of key pool size
We assume that we are required to take the sensor network’s
physical characteristics as a given parameter. Speciﬁcally,
we are provided with a probability of full network connec-
tivity c and the expected number of neighbors of each node
n(cid:1)
. Via Equation 1, we ﬁrst calculate d, the expected de-
gree of any given node. This can be input to Equation 2 to
calculate p, the desired probability that any two nodes can
perform key-setup.
We now need to calculate the critical parameter |S|, the
size of the key pool. If the key pool size is too large, then the
probability of any two nodes sharing at least q keys would
be less than p, and the network may not be connected after
bootstrapping is complete. If the key pool size is too small,
then we are unnecessarily sacriﬁcing security. We would
like to choose a key pool size such that the probability of
any two nodes sharing at least q keys is ≥ p. Let m be
the number of keys that any node can hold in its key ring.
We would like to ﬁnd the largest S such that any two ran-
dom samples of size m from S have at least q elements in
common, with a probability of at least p.
We compute |S| as follows. Let p(i) be the probability
that any two nodes have exactly i keys in common. Any
different ways of picking its m keys
given node has
from the key pool of size |S|. Hence, the total number of
ways for both nodes to pick m keys each is
. Suppose
(cid:4)
(cid:3)|S|
(cid:3)|S|
(cid:4)2
m
m
i
(cid:4)
(cid:3)|S|
the two nodes have i keys in common. There are
ways
to pick the i common keys. After the i common keys have
been picked, there remain 2(m − i) distinct keys in the two
(cid:4)
(cid:3) |S|−i
key rings that have to be picked from the remaining pool
of |S| − i keys. The number of ways to do this is
.
2(m−i)
The 2(m−i) distinct keys must then be partitioned between
(cid:3)
the two nodes equally. The number of such equal partitions
. Hence the total number of ways to choose two
is
key rings with i keys in common is the product of the afore-
. Hence, we
mentioned terms, i.e.,
have
2(m−i)
m−i
2(m−i)
m−i
(cid:4)
(cid:4)
i
2(m−i)
(cid:4)(cid:3) |S|−i
(cid:4)(cid:3)
(cid:3)|S|
(cid:3)|S|
(cid:4)(cid:3)
(cid:4)(cid:3) |S|−i
(cid:3)|S|
(cid:4)2
2(m−i)
i
(cid:4)
2(m−i)
m−i
p(i) =
(3)
m
Let pconnect be the probability of any two nodes sharing
sufﬁcient keys to form a secure connection. pconnect = 1−
(probability that the two nodes share insufﬁcient keys to
form a connection), hence
pconnect = 1 − (p(0) + p(1) + ··· + p(q − 1))
(4)
For a given key ring size m, minimum key overlap q, and
minimum connection probability p, we choose the largest
|S| such that pconnect ≥ p.
5.2 Evaluation of the q-composite random key dis-
tribution scheme
We evaluate the q-composite random key distribution
scheme in terms of resilience against node capture and the
maximum network size supported. We note that this scheme
has no resistance against node replication since node degree
is not constrained and there is no limit on the number of
times each key can be used. The scheme can support node
revocation via a trusted base station similar to the approach
in [10].
5.2.1 Resilience against node capture in q-composite
keys schemes
In this section we evaluate how the q-composite scheme im-
proves a sensor network’s resilience in the face of a node
capture attack by calculating the fraction of links in the net-
work that an attacker is able to eavesdrop on indirectly as a
result of recovering keys from captured nodes. That is, we
attempt to answer the question: For any two nodes A and B
in the network, where neither A nor B have been captured
by the attacker, what is the probability that the attacker can
decrypt their communications using the subset of the key
pool that was recovered from the nodes that were compro-
mised.
We show that the q-composite key scheme strength-
ens the network’s resilience against node capture when the
Proceedings of the 2003 IEEE Symposium on Security and Privacy (SP(cid:146)03) 
1081-6011/03 $17.00 ' 2003 IEEE 
i
d
e
s
m
o
r
p
m
o
c
s
n
o
i
t
i
a
c
n
u
m
m
o
c
f
o
n
o
i
t
c
a
r
F
basic scheme
q=1
q=2
q=3
0.45
0.4
0.35
0.3
0.25
0.2
0.15
0.1
0.05
0
0
50
100
150
Number of nodes compromised
Figure 2. Probability that a speciﬁc random
communication link between two random
nodes A, B can be decrypted by the adversary
when the adversary has captured some set of
x nodes that does not include A or B. Key
ring size m = 200, probability of key-setup
p = 0.33.
number of nodes captured is low. Let the number of cap-
tured nodes be x. Since each node contains m keys, the
probability that a given key has not been compromised is
(1 − m|S| )x. The expected fraction of total keys compro-
mised is thus 1 − (1 − m|S|)x. For any communication link
between two nodes, if its link key was the hash of i shared
keys, then the probability of that link being compromised is
(1−(1− m|S|)x)i. The probability of setting up a secure link
is p = p(q) + p(q + 1) + . . . + p(m). Hence, we have that
the probability that any secure link setup in the key-setup
phase between two uncompromised nodes is compromised
when x nodes have been captured is
(cid:1)
1 −
(cid:1)
1 − m
|S|
m(cid:5)
i=q
(cid:2)x(cid:2)i p(i)
p
This equation also represents the fraction of additional com-
munications (i.e., external communications in the network
independent of the captured nodes) that an adversary can
compromise based on the information retrieved from x
number of captured nodes. Figure 2 shows how it varies
with the number of nodes captured by the attacker.
We note that the scale of the x-axis shows absolute num-
bers of nodes compromised (i.e., independent of the actual
total size of the network) while the y-axis is the fraction
of the total network communications compromised. Hence,
the schemes are not inﬁnitely scalable - a compromise of x
number of nodes will always reveal a ﬁxed fraction of the
total communications in the network regardless of network
size. A method to estimate the largest supportable network
size of the various schemes is discussed in Section 5.2.2.
The q-composite keys scheme offers greater resilience
against node capture when the number of nodes captured is
small. For example, in Figure 2a, for q = 2, the amount
of additional communications compromised when 50 nodes
have been compromised is 4.74%, as opposed to 9.52% for
the basic scheme. However, when large numbers of nodes
have been compromised, the q-composite keys schemes
tend to reveal larger fractions of the network to the adver-
sary. By increasing q, we make it harder for an adversary to
obtain small amounts of initial information from the net-
work via a small number of initial node captures. This
comes at the cost of making the network more vulnerable
once a large number of nodes have been breached. This
may be a desirable trade-off because small scale attacks are
cheaper to mount and much harder to detect than large scale
attacks.
It is easy to mask an attack on a single node as
a communications breakdown due to occlusion or interfer-
ence; it is much harder to disguise an attack on many nodes
as a natural occurrence.
The q-composite scheme removes the incentive for small
scale attacks since the amount of additional information re-
vealed in the rest of the network is greatly reduced. It forces
the attacker to attempt large scale attacks which are expen-
sive and more easily detectable.
5.2.2 Maximum supportable network sizes for the q-
composite keys scheme
In this section we assess the scalability of the random key
schemes we have presented thus far.
Since a ﬁxed number of compromised nodes causes a
fraction of the remaining network to become insecure, these
random-key distribution schemes cannot be used for arbi-
trarily large networks. For example, based on Figure 2a, in
the basic scheme, the capture of 50 nodes compromises ap-
proximately 9.5% of communications in the network. For
a network of 10,000 nodes this translates to an approximate
payoff of 10% of communications compromised for a cost
to the attacker of capturing just 0.5% of total nodes, repre-
senting a relatively modest investment for a high payoff.
We can estimate a network’s maximum supported size
by framing the following requirement:
Limited global payoff requirement: Suppose the
adversary has captured some nodes, but is only
able to break some fraction f ≤ fm of all com-
munications. We require that each subsequent
node that is compromised to the enemy allows
them to break as many links in the rest of the net-
Proceedings of the 2003 IEEE Symposium on Security and Privacy (SP(cid:146)03) 
1081-6011/03 $17.00 ' 2003 IEEE 
work, on expectation, as the average connectivity
degree of a single node.
In other words, given that the network is still mostly se-
cure (f ≤ fm), we would like that, on average, after cap-
turing some node, the adversary does not learn more about
the rest of the network than they learn about the commu-
nications of the node itself. Via this requirement, smaller
scale attacks on a network must be mainly economically
justiﬁed by the value of the individual nodes compromised
rather than the amount of information that the captured keys
can reveal in the rest of the network, thus limiting the in-
centive of an adversary to begin an attack. The maximum
compromise threshold fm intuitively represents the level of
compromise past where the adversary gains an unaccept-
ably high conﬁdence of guessing the sensor readings of the
entire network, and thus the network must be considered ex-
posed and no longer secret. fm will vary depending on the
application and the correlation of different sensor readings.
Using the deﬁnition of limited global payoff, we can es-
timate the maximum allowable sizes for the networks such
that our requirement holds true. For any number x of nodes
compromised, we know that some fraction f(x) of the re-
maining secure links created after key-setup have been com-
promised. Let xm be the number of nodes compromised
such that fm = f(xm) of the other secure links created dur-
ing key-setup has been compromised. fm is a given param-
eter (see the deﬁnition of limited global payoff preceding).
Let the average connectivity degree of a single node be d.
The adversary thus holds an expected xmd connections in
which the compromised nodes are directly involved. We re-
quire that the number of additional links compromised else-
where in the network be less than this number of directly
compromised links. There are nd