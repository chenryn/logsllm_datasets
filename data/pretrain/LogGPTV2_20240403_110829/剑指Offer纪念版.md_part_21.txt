---
## Page 144
130
剑指Offer-
一列。
数组有多行多列、数组只有一行、数组中只有一列、数组中只有一行
测试用例：
本题完整的源代码详见20_PrintMatrix项目。
源代码：
if(start=start+1;--i)
for(int i = endx - 1;i >= start;--i)
for(int i = start + 1;i  
   > 
辅助栈。示例代码如下：
push、pop 和min 的参考代码。在代码中，m_data 是数据栈，而m_min 是
3是最小值。此时位于辅助栈的栈顶数字正好也是3，的确是最小值。这说
明我们的思路是正确的。
接下来继续弹出数据栈和辅助栈的栈顶之后，数据栈还剩下3、4两个数字，
后
小值。比如第四步之后，栈内的最小元素是1。当第五步在数据栈内弹出1
能保证辅助栈的栈顶一直都是最小元素。当最小元素从数据栈内被弹出之
后，我们把辅助栈的栈顶弹出，辅助栈的栈顶元素2就是新的最小元素。
return m_min.top();
m_min.pop();
m_data.pop();
assert (m_data.size() > 0 && m_min.size() > 0);
else
if(m_min.size() == 0 1l value ::push(const T& value)
3,4,0
3,4
3,4,2
3,4,2,
数据栈
就可以写代码了。下面是3个关键函数
3,3
3,3,2
3,3,2.1
辅助栈
3,0
真
解决面试题的思路133
2
最小值
（续表）
---
## Page 148
134
剑指Offer-
序列确定了，也就是在把4压入进栈之前，数字1、2、3都需要先压入到栈
被弹出的数字是4，因此4需要先压入到辅助栈里面。压入栈的顺序由压栈
出数字。
列中的数字依次压入该辅助栈，并按照第二个序列的顺序依次从该栈中弹
序列。
列对应的一个弹出序列，但4、3、5、1、2就不可能是该压栈序列的弹出
序列1、2、3、4、5是某栈的压栈序列，序列4、5、3、2、1是该压栈序
二个序列是否为该栈的弹出顺序。假设压入栈的所有数字均不相等。例如
面试题 22：栈的压入、弹出序列
以弹出序列4、5、3、2、1为例分析压栈和弹出的过程。第一个希望
解决这个问题很直观的想法就是建立一个辅助栈，把输入的第一个序
题目：输入两个整数序列，第一个序列表示栈的压入顺序，请判断第
本题完整的源代码详见21_MinInStack项目。
源代码：
本题考点：
测试用例：
考查应聘者对栈的理解。
容易多了。
以用几个具体的例子来找出规律。找到规律之后再解决问题，就
另外的辅助栈保存。当我们面对一个抽象复杂的问题的时候，
几次入栈、出栈的操作就能看出问题，并想到也要把最小元素用
步于添加一个变量保存最小元素的思路。其实只要举个例子多做
考查分析复杂问题的思维能力。在面试的时候，很多应聘者都止
弹出栈的数字是最小的元素。
弹出栈的数字不是最小的元素。
新压入栈的数字比之前的最小值小。
新压入栈的数字比之前的最小值大。
一名企面试官精讲典型编程题（纪念版）
---
## Page 149
步骤
爆
弹出
压入4
压入3
压入2
压入1
操作
表4.3一个压入顺序为1、2、3、4、5的栈没有一个弹出序列为4、3、5、1、2
表4.2压栈序列为1、2、3、4、5，弹出序列4、5、3、2、1对应的压栈和弹出过程
5 对应的弹出序列。表4.3总结了这个例子中压栈和弹出的过程。
此时压栈序列中所有数字都已经压入栈了。所以该序列不是序列1、2、3、4、
不在栈顶，我们需要从压栈序列中尚未压入栈的数字中去搜索这个数字。但
有两个数字1和2，其中2位于栈顶。由于接下来需要弹出的数字是1，但1
至遇到数字5。把数字5压入栈之后，5就位于栈顶了，可以弹出。此时栈内
是5，由于5不是栈顶数字，到压栈序列里把没有压栈的数字压入辅助栈，直
面一样。把4弹出之后，3位于栈顶，可以直接弹出。接下来希望弹出的数字
弹出
压入4
压入3
压入2
压入
操作
因此直接弹出即可。表4.2总结了本例中入栈和出栈的步骤。
希望被弹出的三个数字依次是3、2和1。由于每次操作前它们都位于栈顶，
中，直到压入了数字5。这个时候5位于栈顶，就可以被弹出来了。接下来
于它不是栈顶数字，因此我们接着在第一个序列中把4以后数字压入辅助栈
弹出栈后，剩下的三个数字是1、2和3。接下来希望被弹出的数字是5，由
里面。此时栈里包含4个数字，分别是1、2、3、4，其中4位于栈顶。把4
接下来再分析弹出序列4、3、5、1、2。第一个弹出的数字4的情况和前
1,2,3
1,2,3,4
1,2,3
1,2
栈
1,2,3
1,2,3,4
1,2,3
1,2
弹出数字
弹出数字
作无法继续
下一个弹出的是1，但1不在栈顶，压栈序列的数字都已入栈。操
步骤
10
6
8
步骤
弹出
压入5
弹出
操作
第4章
弹出
弹出
压入
操作
5