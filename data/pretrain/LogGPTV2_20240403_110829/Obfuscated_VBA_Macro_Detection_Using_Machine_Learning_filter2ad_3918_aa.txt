# Title: Obfuscated VBA Macro Detection Using Machine Learning

**Authors:**
- Sangwoo Kim
- Seokmyung Hong
- Jaesang Oh
- Heejo Lee

**Affiliation:**
- Korea University, Seoul, Republic of Korea
- Email: {swkim, canasta, jaesangoh, heejo}@korea.ac.kr

**Conference:**
- 2018 48th Annual IEEE/IFIP International Conference on Dependable Systems and Networks

## Abstract

Malware using document files as an attack vector has been increasing and now constitutes a significant portion of phishing attacks. To evade antivirus detection, malware authors often use obfuscation techniques in their source code. Despite the importance of obfuscation in detecting malicious code, there is limited research on obfuscation in Visual Basic for Applications (VBA) macros.

In this paper, we summarize the obfuscation techniques and propose a method for detecting obfuscated VBA macro code using five machine learning classifiers. Our approach uses 15 discriminant static features that capture the characteristics of VBA macros. We evaluated our method using a real-world dataset of both obfuscated and non-obfuscated VBA macros extracted from Microsoft Office documents. The experimental results show that our detection approach achieved a 23% improvement in F2 score compared to related studies.

## I. Introduction

Since the appearance of the "Concept" macro virus in 1995, written in VBA, macro-based attacks have posed a constant threat. Although macro malware was a major concern from the late 1990s to the early 2000s, it declined with the enhancement of Microsoft Office security mechanisms in 2000. However, recent reports from antivirus (AV) companies indicate a resurgence of VBA macro attacks since the second half of 2014. Attackers are increasingly using social engineering tactics to trick users into enabling macro execution, which is disabled by default in modern versions of Microsoft Office.

Security reports from AV vendors highlight the rise of script-based attacks, including VBA macro malware. According to Symantec's 2016 report, MS Office document file formats dominate email attachments, even more than executable files. Kaspersky and McAfee also report that VBA macro-based attacks are among the top 10 malware families and include PowerShell commands within VBA macros.

Given the widespread use of MS Office documents, VBA macro malware can have a significant impact. Unlike executable files, VBA macros are often perceived as less suspicious, leading to increased proliferation. Recent studies have classified these attacks as "Downloader" or "Macro malware," but there is a lack of research specifically on obfuscated VBA macros.

Obfuscation is a common strategy used by malware to bypass antivirus detection. While there are studies on detecting obfuscated JavaScript, there is a need for dedicated research on VBA macros due to the differences in language and obfuscation techniques.

In this paper, we propose a method for detecting obfuscated VBA macros in MS Office documents using machine learning classifiers. We first investigate the VBA macros used in malicious code and classify the obfuscation techniques into four categories. We then evaluate our method using a real-world dataset, achieving a 23% improvement in F2 score over related studies.

The contributions of this paper are:
- A comprehensive summary of VBA obfuscation techniques and their prevalence in real-world VBA macros.
- The presentation of 15 discriminant static features and their evaluation using five different classifiers, resulting in a 23% performance improvement.

The rest of the paper is organized as follows: Section II reviews related work, Section III provides an overview of VBA macros and obfuscation techniques, Section IV details our proposed detection method and experimental setup, Section V evaluates the classification performance, and Sections VI and VII discuss the results and conclude the paper.

## II. Related Work

### A. Malicious VBA Macro Detection

Despite the increasing number of attacks using VBA macros, there is a scarcity of studies on detecting obfuscation in VBA macros. Most existing research focuses on vulnerability or shellcode detection. For example, Cohen et al. [16] proposed a method for detecting malicious XML-based documents using the hierarchical nature of Office Open XML (OOXML) files. Nissim et al. [17] added active learning to improve the efficiency of labeling efforts, but their method is limited to .docx files. Gaustad [18] used a Random Forest classifier with over a thousand static features to detect malicious VBA macros, but the consideration of obfuscation techniques is unclear.

### B. Malicious JavaScript Code Detection

JavaScript-based attacks in PDFs share similarities with VBA macros, as both use scripting languages in document formats. Research on detecting malicious JavaScript includes various approaches:

- **Static Analysis**: Choi et al. [19] used lexical characteristics of obfuscated strings, while Xu et al. [20] analyzed the decoding process of obfuscated code.
- **Dynamic Analysis**: Liu et al. [21] proposed document instrumentation, and Kim et al. [22] introduced J-force, a forced execution engine for JavaScript.
- **Machine Learning**: Likarish et al. [24] used SVM and decision trees, Jodavi et al. [25] used one-class SVM classifiers, and Aebersold et al. [26] trained multiple classifiers to detect obfuscated JavaScript.

These studies provide valuable insights, but the differences between JavaScript and VBA necessitate dedicated research on VBA macros.

## III. Overview of VBA Macros and Obfuscation Techniques

### A. VBA Macros

VBA macros are scripts embedded in Microsoft Office documents, allowing automation of tasks. They can be used for benign purposes but are also exploited by malware authors.

### B. Categorization of Obfuscation Techniques

We classify VBA obfuscation techniques into four categories based on related research. These categories help in understanding the methods used to obscure VBA code and evade detection.

## IV. Proposed Detection Method and Experimental Setup

### A. Methodology

Our proposed method for detecting obfuscated VBA macros involves the following steps:
1. **Data Collection**: We collected 773 malicious and 1,764 benign MS Office files, extracting 4,212 VBA macros.
2. **Feature Extraction**: We identified 15 discriminant static features that reflect the characteristics of VBA macros.
3. **Classification**: We applied these features to five different machine learning classifiers and compared the results with related studies.

### B. Experimental Setup

We manually labeled the VBA macros as either obfuscated or normal and conducted experiments to evaluate the performance of our method. The results demonstrate a 23% improvement in F2 score.

## V. Evaluation of Classification Performance

We evaluated the classification performance of our proposed detection method using the collected dataset. The results show a significant improvement in detection accuracy compared to existing methods.

## VI. Discussion

Our study highlights the importance of detecting obfuscated VBA macros and provides a robust method for doing so. The 15 discriminant static features and the use of multiple classifiers contribute to the improved performance.

## VII. Conclusion

In conclusion, we have presented a method for detecting obfuscated VBA macros in MS Office documents using machine learning. Our approach achieves a 23% improvement in F2 score over related studies, making it a valuable tool for enhancing the security of document-based systems. Future work will focus on further refining the feature set and exploring additional machine learning techniques.

---

**Note:** The references [1]â€“[26] should be included in the final version of the paper, following the appropriate citation style.