# Mathgame (PPC, 714p, 9 solved)
This was a very annoying task.
Conceptually it was actually pretty simple, but parsing the input was hard, and then it was randomly failing tests.
The idea was that we have a cube 7x7x7 with numbers on the walls.
There are 7 numbers which doesn't fit somehow.
We need to find them, then connect them via lines, and two of such lines will be perpendicular and cross an internal cube.
The task is to give coordinates of this internal cube.
It was not clear if the cube coordinates are counted from the middle or some other point, and also how to count intersection going through a wall.
There were also test cases which had multiple solutions, or no solutions at all.
Fortunately we had to solve only 5 examples to get the flag, so we simply run this in a loop for a while to get the flag.
The special numbers could be found with rules:
1. even/odd
2. even/odd
3. primes/non-primes
4. primes/non-primes
5. 3 divisors / 2 divisors
The input was in form:
```
=================================================================================
                                Question Five
=================================================================================
                                      A
------------------------------------------------------------------------------
|1328790233|2084499161|0696287693|1660138603|1157298553|2588563183|2357964443|
------------------------------------------------------------------------------
|3726747287|1521033083|3839283769|1661498821|1898692387|3135736403|1658923543|
------------------------------------------------------------------------------
|2326824881|2777671103|3099882481|2279475533|1765911347|2687755193|0339175751|
------------------------------------------------------------------------------
|1490623237|2618039657|1878850373|2081800027|1659998141|0532226311|1513689113|
------------------------------------------------------------------------------
|2003621209|3193816697|2664061769|3118907131|1743603311|1892309323|2909118241|
------------------------------------------------------------------------------
|2090511169|2726139389|2928378703|1563046193|2501788909|3227850023|3516251579|
------------------------------------------------------------------------------
|2331864553|1753491527|2239852117|2874087743|2656404403|2457493267|1891677913|
------------------------------------------------------------------------------
******************************************************************************
                                      B
------------------------------------------------------------------------------
|2357964443|3212428841|0432400201|1580443153|2362281367|2042152669|2248772021|
------------------------------------------------------------------------------
|1658923543|2238017741|2486241403|2087206861|3573698417|1884731227|2660729209|
------------------------------------------------------------------------------
|0339175751|1984116557|3212739667|1630709579|2630303411|1126220239|2723978393|
------------------------------------------------------------------------------
|1513689113|2379249491|2462656099|3278529689|3248454709|2452096897|1989718651|
------------------------------------------------------------------------------
|2909118241|2362922879|2319001897|3664496333|0287807791|2539914877|2944262089|
------------------------------------------------------------------------------
|3516251579|2069603141|2929374769|3001367287|3552535627|1737077239|2920954321|
------------------------------------------------------------------------------
|1891677913|1897008599|1607466241|2258608613|2605621531|2357919709|1621511029|
------------------------------------------------------------------------------
******************************************************************************
                                      C
------------------------------------------------------------------------------
|2248772021|2042152669|2362281367|1580443153|0432400201|3212428841|2357964443|
------------------------------------------------------------------------------
|2556179783|3083582137|2823299807|2982382943|2470982513|3766208269|2588563183|
------------------------------------------------------------------------------
|1279701343|1349891281|1631377337|2223472201|3043595761|3980677397|1157298553|
------------------------------------------------------------------------------
|2519143849|1332811691|3405530693|1462403983|3398349961|1933290613|1660138603|
------------------------------------------------------------------------------
|2881715209|2137626649|3365750909|1639321561|2501250923|1445581847|0696287693|
------------------------------------------------------------------------------
|3143410783|2063116669|3486766021|3058422299|3729039467|2252837863|2084499161|
------------------------------------------------------------------------------
|1338974471|4189292929|1755308323|3608715713|1160079631|3367242341|1328790233|
------------------------------------------------------------------------------
******************************************************************************
                                      D
------------------------------------------------------------------------------
|3235114681|2471203951|2709782587|1933809511|3129277721|2236589099|2331864553|
------------------------------------------------------------------------------
|2084508749|1206882367|1730418379|2182678481|1381552729|3469818697|1753491527|
------------------------------------------------------------------------------
|2832238313|2263125911|0480393457|2030207351|1893967217|2298743639|2239852117|
------------------------------------------------------------------------------
|1605350543|2398724927|2366655829|1861475303|1679976917|1588881649|2874087743|
------------------------------------------------------------------------------
|1949274161|3335731237|1715264021|2556690923|1572620113|1420979311|2656404403|
------------------------------------------------------------------------------
|1904118701|0809915627|1563823619|2756629699|4045257421|1755318067|2457493267|
------------------------------------------------------------------------------
|1621511029|2357919709|2605621531|2258608613|1607466241|1897008599|1891677913|
------------------------------------------------------------------------------
******************************************************************************
                                      E
------------------------------------------------------------------------------
|2248772021|2556179783|1279701343|2519143849|2881715209|3143410783|1338974471|
------------------------------------------------------------------------------
|2660729209|2208808709|2137179923|3467495971|2369408329|1417842847|2856461851|
------------------------------------------------------------------------------
|2723978393|2388231823|2931564319|3317731211|1993509377|2169053221|2057817481|
------------------------------------------------------------------------------
|1989718651|2251635973|1901557607|2165696801|3295570127|2353890053|2191693367|
------------------------------------------------------------------------------
|2944262089|2421919121|2310049853|3799873817|1785808949|2212685389|3431625541|
------------------------------------------------------------------------------
|2920954321|1548928189|1857980479|2371731689|2683816601|2536769041|3050435657|
------------------------------------------------------------------------------
|1621511029|1904118701|1949274161|1605350543|2832238313|2084508749|3235114681|
------------------------------------------------------------------------------
******************************************************************************
                                      F
------------------------------------------------------------------------------
|1338974471|4189292929|1755308323|3608715713|1160079631|3367242341|1328790233|
------------------------------------------------------------------------------
|2856461851|1830343831|2803179479|2540555291|1596370583|2428756193|3726747287|
------------------------------------------------------------------------------
|2057817481|1993397429|2212281713|2762599291|2213126341|2536883941|2326824881|
------------------------------------------------------------------------------
|2191693367|2253085969|2802701081|2338219649|1366065193|2054382947|1490623237|
------------------------------------------------------------------------------
|3431625541|2143610489|3419371091|2646546713|2317498357|2439885193|2003621209|
------------------------------------------------------------------------------
|3050435657|3676301219|3598318393|2810755349|3005050121|2401101617|2090511169|
------------------------------------------------------------------------------
|3235114681|2471203951|2709782587|1933809511|3129277721|2236589099|2331864553|
------------------------------------------------------------------------------
******************************************************************************
Use A to create a coordinate system(z == 0)
6^y
 |
 |
 |         x
 |__________>
0           6
```
The solver code:
```python
import hashlib
import itertools
import re
import string
from gmpy2 import is_prime
import numpy
from crypto_commons.generic import get_primes, factor_p
from crypto_commons.netcat.netcat_commons import nc, receive_until_match, send, interactive
def PoW(challenge):
    data = re.findall('"(.*?)"', challenge)
    prefix = data[0]
    result = data[1]
    for s in itertools.product(string.printable, repeat=4):
        st = "".join(s)
        if hashlib.sha256(prefix + st).hexdigest().startswith(result):
            return st
    return "dupa"
def parse_data(question_data):
    numbers = re.findall('\d+', question_data)
    numbers = map(int, numbers[:-4])
    def chunks(l, n):
        """Yield successive n-sized chunks from l."""
        for i in range(0, len(l), n):
            yield l[i:i + n]
    def find_match(a, b):
        for x1, x2 in enumerate(a):
            for y1, y2 in enumerate(b):
                if x2 == y2:
                    return (x1, y1)
        return None
    DIRECTIONS = {
        0: "UP",
        1: "RIGHT",
        2: "DOWN",
        3: "LEFT"
    }
    sides = chunks(numbers, len(numbers) / 6)
    class Face():
        def __init__(self, cubes):
            print("CONSTRUCTOR")
            self.cubes = list(reversed(list(chunks(cubes, 7))))
            self.hashes = []
            self.position = -1
            self.calculate_hashes()
        def calculate_hashes(self):
            self.hashes = []
            hash_up = 0
            for i in range(7):
                hash_up ^= self.cubes[0][i]
            hash_right = 0
            for i in range(7):
                hash_right ^= self.cubes[i][6]
            hash_down = 0
            for i in range(7):
                hash_down ^= self.cubes[6][i]
            hash_left = 0
            for i in range(7):
                hash_left ^= self.cubes[i][0]
            self.hashes.append(hash_up)
            self.hashes.append(hash_right)
            self.hashes.append(hash_down)
            self.hashes.append(hash_left)
        def turn_clockwise(self):
            print("Turn")
            length = len(self.cubes) - 1
            for i in range(length / 2):
                for j in range(i, length - i):
                    tmp = self.cubes[i][j]
                    self.cubes[i][j] = self.cubes[length - j][i]
                    self.cubes[length - j][i] = self.cubes[length - i][length - j]