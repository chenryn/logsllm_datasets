8.75 
413 
11.87 
1361 
0.5 
Decoding (error free) 
32 
8 
15 
39 
0.8 
0.8 
8.75 
8.75 
675 
286 
5.36 
32.91 
1754 
1014 
0.286 
0.684 
64 
16 
1 
16 
974 
15.58 
2704 
0.814 
Lastly,  we  note  that  a  designer  could  choose  to  use 
GreenFlag only for shift error detection (and not correction) 
by (a) simply discarding the “Error Correction” module in Fig. 
9 and (b) always using re-read attempts to recover from shift 
errors. Although that solution would save some area (~45%) 
and energy (~12%) for the decoding hardware, it would cause 
all  shift  errors  (single  and  double)  to  incur  the  latency  of 
double shift errors. Because single shift errors are far more 
common  [12],  we  do  not  consider  this  option  during  our 
evaluation. 
VII.  EVALUATION 
 In this section we evaluate GreenFlag. Recall that our goal 
is to determine the viability of Racetrack with effective error  
tolerance,  not  to promote  Racetrack  as  necessarily  the  best 
option, and our analysis is thus more of a limit study than a 
cycle-accurate comparison against other schemes. 
We assume  a best-case racetrack that has the  minimum 
possible read, write, and shift latencies, based on results from 
prior work on quantitative analysis for racetrack memory [31]. 
We  chose  the  minimum  latencies  so  that  we  maximize  the 
significance  of  GreenFlag’s  overheads.  We  summarize  the 
characteristics of the best-case  racetrack in Table VIII. We 
combine  racetrack’s  latency  and energy  overheads  with  the 
results  of  Section  VI  to  calculate  the  overall  overheads  of 
GreenFlag. For all the results, we use delimiter-2, the 6-bit 
delimiter that provides DECDED shift error protection. 
A.  Block Read and Write Latencies 
 For 64-byte blocks, Fig. 10 presents the block read and 
write latency of GreenFlag for different rates (i.e., for different 
codeword  lengths). These  latencies  include  shift, read/write 
and 
example, 
GreenFlag(8,4,6)  has  8-bit  codewords  and  6-bit  delimiters, 
and reading an extended codeword requires 8+6 shifts and 8+6 
reads; its rate is 0.286. 
decoding/encoding 
The results of Fig. 10 show that racetrack memory with 
GreenFlag cannot achieve the latency expected of an L1 cache 
and probably not even the latency of a last-level cache (LLC). 
delays. 
For 
TABLE VIII. BEST-CASE RACETRACK 
Operation (per bit) 
Read 
Write 
Shift 
Latency (ns) 
3.7 
10.2 
2.1 
Energy (pJ) 
224 
998 
124 
(cid:1871)(cid:1873)(cid:1865)
In
(cid:1866)+1
(cid:1829)ℎ(cid:1857)(cid:1855)(cid:1863)(cid:1871)(cid:1873)(cid:1865)
Modulo
(cid:2185)′
In1 In2 In3
Error 
Correction
(cid:2185)
Racetrack
  (cid:1855)′(cid:3041)
Enable
Out
Full Adder
In1
In2
Cin
1
Out
Counter
  (cid:1855)′(cid:2869)
  (cid:1855)′(cid:2870)
Buffer
Fig. 9. Hardware implementation of the decoder 
In
Delimiter
Out
In
Weight 
Sum
Out
(cid:2033)
Out
In1
In2
Final Error 
Decision
  (cid:1855)(cid:3041)
Out
Corrected Codeword (cid:2185)
  (cid:1855)(cid:3041)(cid:2879)(cid:2869)
  (cid:1855)(cid:2871)
  (cid:1855)(cid:2873)
  (cid:1855)(cid:2872)
  (cid:1856)(cid:2870)
  (cid:1856)(cid:2869)
  (cid:1856)(cid:3038)
Dataword (cid:2186)
  (cid:1855)(cid:2870)  (cid:1855)(cid:2869)
9
Block Access Latency
Storage
)
s
n
(
y
c
n
e
t
a
L
900
800
700
600
500
400
300
200
100
0
0.814
(n=64)
0.684
(n=32)
Fig. 10. Block access latency  
0.5
0.286
(n=8)
GreenFlag(n,k,6) Rate
(n=16)
Bandwidth per Track
write
HiFi read
read
1.86×
)
s
/
B
M
i
(
h
t
d
w
d
n
a
B
150
140
130
120
110
100
90
80
70
60
GreenFlag(4,1,6) can provide the lowest read latency (67ns) 
but  with  a  huge  overhead  of  0.1  rate.  Even  if  we  use 
GreenFlag(4,1,4)  (that  provides  SECSED  shift  protection) 
read latency will only drop to 56ns and the rate will be 0.125. 
However, the results show that racetrack with GreenFlag 
is  a  viable  option  for  main  memory  and  storage  devices. 
GreenFlag(32,26,6)  and  GreenFlag(16,11,6),  with  rates  of 
0.684 and 0.5, respectively, can provide latencies comparable 
to  modern  DRAM  designs  like  DDR3  (~100ns),  while 
GreenFlag(64,57,6) can be used as an extremely low latency 
storage device with a rate of 0.814. While these rates may still 
seem somewhat low we remind the reader that GreenFlag is, 
to the best of our knowledge, the only shift error solution that 
can  be 
implemented  with  only  one  read/write  port. 
Compatibility  with  a  single port makes GreenFlag the  only 
coding scheme that can be used with 3D racetracks and benefit 
from their density compared to 2D racetracks [5, 11, 15, 16]. 
B.  Bandwidth 
In  Fig.  11  we  present  GreenFlag’s  maximum  data 
bandwidth per track. Bandwidth per track is a more insightful 
metric  than  aggregate  bandwidth,  at  this  early  stage  in  the 
development  of  racetrack  memory,  because  it  eliminates 
orthogonal  issues  like  I/O  bottlenecks  and  open  questions 
about how large-scale racetrack will be organized.  
We  calculate  the  bandwidth  per  track  as  the  average 
number of data bits we can read or write per track per second, 
including  delimiter  and  encoding/decoding  overheads.  For 
comparison, we also include the bandwidth of prior work on 
tolerating shift errors (HiFi) [12]. Note that HiFi’s bandwidth 
is constant (i.e., not a function of n) for reasons explained in 
Section VIII. 
We observe that, as the rate increases, the read and write 
bandwidth per track of GreenFlag increases. This result occurs 
because we are accessing more data bits per codeword, while 
the decoding and encoding overheads remain almost constant. 
GreenFlag  achieves  up  to  1.86×  more  read  bandwidth  per 
track  compared  to  HiFi,  while  providing  similar  write 
bandwidth. The reason is that HiFi must perform a write after 
every  shift  operation,  which  limits  how  many  bits  it  can 
stream per second. 
C.  Energy 
We calculate the average energy per bit for read and write 
operations. For GreenFlag this is calculated by amortizing the 
cost  of  an  extended  codeword,  including  the  decoding  and 
encoding  energy  overheads,  per  bit.  Fig.  12  shows  that  the 
energy  overheads  of  GreenFlag  decrease  as  rate  increases. 
Additionally,  we  observe  that  the  energy  overheads  are 
significantly lower than prior work [12] (up to 6.6×). 
D.  Mean Time to Failure (MTTF)  
GreenFlag’s  ability  to  tolerate  an  error  when  reading  a 
given extended codeword depends on the probability of a shift 
error on any given shift and the specific GreenFlag code used. 
GreenFlag’s overall ability to tolerate errors and avoid silent 
data  corruption  (SDC)  also  depends  on 
the  memory 
bandwidth  demanded.  The  dependence  on  bandwidth 
distinguishes racetrack memory from other technologies; as 
10
read
write
HiFi read
HiFi write
DRAM
LLC 
L1 cache 
0.1
(n=4)
HiFi write
0.286
(n=8)
HiFi write
0.286
(n=8)
0.814
(n=64)
0.684
(n=32)
0.5
(n=16)
GreenFlag(n,k,6) Rate
Fig. 11. Bandwidth per track 
Energy/Bit
write
HiFi read
4
3.5
3
2.5
2
1.5
1
0.5
0
)
J
n
(
y
g
r
e
n
E
read
6.6×
0.814