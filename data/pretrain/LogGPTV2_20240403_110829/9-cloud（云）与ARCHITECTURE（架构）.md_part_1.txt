# \-\--CLOUD01\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--
# VMware
客户端vcenter:windows+sqlserver
虚拟化概念 s
虚拟化程度:完全虚拟化 部分虚拟化 硬件辅助(CPU)
![LINUXNSD_V01CLOUDDAY01_005](media/image1.png){width="5.760416666666667in"
height="4.320833333333334in"}
\[root@room9pc01 \~\]# lsmod
kvm_intel 162153 0
kvm 525259 1 kvm_intel
# 虚拟化组成
![LINUXNSD_V01CLOUDDAY01_007](media/image2.png){width="5.052083333333333in"
height="2.7925021872265967in"}
KVM:内核支持的一个模块
QEMU:虚拟KVM不管的设备,例如:声卡 网卡等,真正的虚拟化指令.
Libvirt:将一些东西翻译成能看懂的内容,反馈给QEMU
![LINUXNSD_V01CLOUDDAY01_008
2](media/image3.png){width="4.419630358705162in"
height="2.7849792213473314in"}
\[root@room9pc01 \~\]# systemctl stop libvirtd #停止守护进程
\[root@room9pc01 \~\]# systemctl start libvirtd
![](media/image4.png){width="3.8333333333333335in" height="2.36875in"}
![LINUXNSD_V01CLOUDDAY01_009](media/image5.png){width="5.136111111111111in"
height="3.0in"}
# KVM组成
![LINUXNSD_V01CLOUDDAY01_010](media/image6.png){width="5.058333333333334in"
height="3.129861111111111in"}
## /etc/libvirt/qemu/\*\*.xml 
## /etc/lib/libvirt/images/\*\*.img
![](media/image7.png){width="6.908333333333333in"
height="1.7222222222222223in"}
# 管理KVM平台
## 1 virsh命令工具介绍
### 1交互式
\[root@room9pc01 qemu\]# virsh
欢迎使用 virsh，虚拟化的交互式终端。
输入：\'help\' 来获得命令的帮助信息
\'quit\' 退出
virsh \#
virsh \# list
Id 名称 状态
\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--
1 client50-192.168.4.50 running
### 2非交互式
\[root@room9pc01 qemu\]# virsh list
Id 名称 状态
\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--
1 client50-192.168.4.50 running
### 3virsh命令工具介绍:
\[root@room9pc01 \~\]# virsh \--help #查看帮助
\[root@room9pc01 \~\]# virsh nodeinfo #查看KVM节点
\[root@room9pc01 \~\]# virsh list #列出虚拟机
\[root@room9pc01 \~\]# virsh net-list #列出虚拟网络
\[root@room9pc01 \~\]# virsh net-start #启动虚拟交换机
\[root@room9pc01 \~\]# virsh dominfo client50-192.168.4.50
#查看虚拟机信息
\[root@room9pc01 \~\]# virsh start\|reboot\|shutdown 虚拟机名
#启动\|重启\|关闭
\[root@room9pc01 \~\]# virsh destroy 虚拟机名称 #强制关闭
\[root@room9pc01 \~\]# virsh autostart 虚拟机名称 #设置开机自动运行
## 2 git基本使用
命令格式:
git clone 地址 下载git文件 #下载
git pull #更新目录
\[root@room9pc01 \~\]# yum install -y git
\[root@room9pc01 \~\]# mkdir /git
\[root@room9pc01 \~\]# cd /git
### git下载
\[root@room9pc01 git\]# git clone git://124.207.192.18/nsd1811.git
正克隆到 \'nsd1811\'\...
remote: Counting objects: 3, done.
remote: Compressing objects: 100% (2/2), done.
remote: Total 3 (delta 0), reused 0 (delta 0)
接收对象中: 100% (3/3), done.
\[root@room9pc01 git\]# ls
nsd1811 #git下载而来
### git下载更新
\[root@room9pc01 networks\]# cd /git/nsd1811/
\[root@room9pc01 nsd1811\]# git pull
remote: Counting objects: 4, done.
remote: Compressing objects: 100% (3/3), done.
remote: Total 3 (delta 0), reused 0 (delta 0)
Unpacking objects: 100% (3/3), done.
来自 git://124.207.192.18/nsd1811
ce6d35f..e9c083a master -\> origin/master
更新 1216445..e9c083a
Fast-forward
node.xml \| 42 ++++++++++++++++++++++++++++++++++++++++++
1 file changed, 42 insertions(+)
create mode 100644 node.xml
\[root@room9pc01 nsd1811\]# ls
node.xml readme.txt vbr.xml
# 常用镜像盘类型(img)
![LINUXNSD_V01CLOUDDAY01_016](media/image8.png){width="5.760416666666667in"
height="2.995138888888889in"}
RAW:读写效率略高
QCOW2:主用
## 1虚拟机磁盘管理命令（qemu-img）
![LINUXNSD_V01CLOUDDAY01_017](media/image9.png){width="5.760416666666667in"
height="3.5909722222222222in"}
![LINUXNSD_V01CLOUDDAY01_018](media/image10.png){width="5.6722222222222225in"
height="3.2083333333333335in"}
稠密文件
创建稀疏文件
\[root@room9pc01 images\]# qemu-img create -f qcow2 abc.img 50G
#创建新的镜像盘文件qcow2格式
\[root@room9pc01 images\]# qemu-img info abc.img #查看镜像盘文件信息
image: abc.img
file format: qcow2 #镜像盘格式
virtual size: 50G (53687091200 bytes)
disk size: 196K
cluster_size: 65536
Format specific information:
compat: 1.1
lazy refcounts: false
\[root@room9pc01 images\]# ll -h abc.img
-rw-r\--r\--. 1 root root 193K 3月 13 14:26 abc.img
\[root@room9pc01 images\]# du -sh abc.img
196K abc.img
\[root@room9pc01 images\]# qemu-img create -f raw efg.img 50G
#创建新的镜像盘文件raw格式
Formatting \'efg.img\', fmt=raw size=53687091200
\[root@room9pc01 images\]# qemu-img info efg.img
image: efg.img
file format: raw #镜像盘格式
virtual size: 50G (53687091200 bytes)
disk size: 0
\[root@room9pc01 images\]# ll -h efg.img
-rw-r\--r\--. 1 root root 50G 3月 13 14:27 efg.img
\[root@room9pc01 images\]# du -sh efg.img
0 efg.img
## 2创建node0镜像盘(node0.img)
qemu-img create -b node.qcow2 -f qcow2 node0.img 50G
qemu-img create --b 模板 --f 类型 新的磁盘名 大小
\[root@room9pc01 \~\]#cd /var/lib/libvirt/images
#进入指定目录/var/lib/libvirt/images内创建
\[root@room9pc01 images\]# qemu-img create -b node.qcow2 -f qcow2
node0.img 50G
Formatting \'node0.img\', fmt=qcow2 size=53687091200
backing_file=\'node.qcow2\' encryption=off cluster_size=65536
lazy_refcounts=off
-d node.qcow2 以后端文件node.qcow2为模板创建 -f qcow2
新创建镜像的镜像文件类型为qcow2
\[root@room9pc01 images\]# ls node
node0.img node.qcow2 #以node.qcow2为模板 创建了node0.img镜像
\[root@room9pc01 images\]# ls node
node0.img node.qcow2
\[root@room9pc01 images\]# ls node0.img
node0.img
![LINUXNSD_V01CLOUDDAY01_019](media/image11.png){width="5.760416666666667in"
height="3.45625in"}
COW技术:针对随时变化的数据进行备份
前端盘：永远显示在制作出前端盘那一瞬间原始盘所有数据内容
快建qcow前端盘：qemu-img通过-b选项复用指定后端盘
qemu-img create -b 后端盘 -f 类型 前端盘
生成前端盘（增量盘），-f 指定磁盘文件类型 -b 指定后端盘(原始盘)
qemu-img convert -O 新类型 旧磁盘 新磁盘
# virsh管理
## 1连接本地
\[root@room9pc01 images\]# virsh -c qemu:///system
欢迎使用 virsh，虚拟化的交互式终端。
输入：\'help\' 来获得命令的帮助信息
\'quit\' 退出
virsh \#
## 2连接远程KVM
### 方法一:
\[root@room9pc01 images\]# virsh -c qemu+ssh://176.52.8.208/system
PI:EMAIL\'s password:
欢迎使用 virsh，虚拟化的交互式终端。
输入：\'help\' 来获得命令的帮助信息
\'quit\' 退出
virsh \#
### 方法二:
\[root@room9pc01 images\]# virsh \--connect
qemu+ssh://176.52.8.208/system
PI:EMAIL\'s password:
欢迎使用 virsh，虚拟化的交互式终端。
输入：\'help\' 来获得命令的帮助信息
\'quit\' 退出
virsh \#
![LINUXNSD_V01CLOUDDAY01_024](media/image12.png){width="5.760416666666667in"
height="4.320833333333334in"}
# 创建虚拟交换机(vbr)
用课堂上给的vbr.xml文件创建
## 1网络管理命令
![LINUXNSD_V01CLOUDDAY01_026](media/image13.png){width="5.760416666666667in"
height="3.0566590113735783in"}
**查看课堂给的模板:**
\[root@room9pc01 images\]# vim /git/nsd1811/vbr.xml
\
\vbr\
\
\
\ #是否支持nat模式,要上网必须这个模式
\
\
\
\
\
\
## 2网络文件放入指定路径
**vbr.xml文件由达内提供内容如上,放入**/etc/libvirt/qemu/networks/**目录**
\[root@room9pc01 \~\]# cp /git/nsd1811/vbr.xml
/etc/libvirt/qemu/networks/
\[root@room9pc01 \~\]# cd /etc/libvirt/qemu/networks/
\[root@room9pc01 networks\]# ls
autostart default.xml private1.xml private2.xml public1.xml public2.xml
rhce.xml **vbr.xml**
## 3命令创建虚拟交换机vbr.xml
\[root@room9pc01 networks\]# virsh net-define
/etc/libvirt/qemu/networks/vbr.xml
从 vbr定义网络/etc/libvirt/qemu/networks/vbr.xml
\[root@room9pc01 networks\]# virsh net-list \--all
名称 状态 自动开始 持久
\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--
default 活动 是 是
private1 活动 是 是
private2 活动 是 是
public1 活动 是 是
public2 活动 是 是
rhce 活动 是 是
vbr 不活跃 否 是
## 4命令启动虚拟交换机
\[root@room9pc01 networks\]# virsh net-start vbr
网络 vbr 已开始
\[root@room9pc01 networks\]# virsh net-list
名称 状态 自动开始 持久
\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--
default 活动 是 是
private1 活动 是 是
private2 活动 是 是
public1 活动 是 是
public2 活动 是 是
rhce 活动 是 是
vbr **活动** 否 是 #变为活动了
## 5设置开机自启
\[root@room9pc01 \~\]# virsh net-autostart vbr
网络vbr标记为自动启动
# xml管理
## 1导出xml配置文件
查看：Virsh dumpxml 虚拟机名
备份：virsh dumpxml 虚拟机名 \> 虚拟机名.Xml
## 2 xml文件详解：
-   定义了一个虚拟机的名称、CUP、内存、虚拟磁盘网卡等各种参数设置
-   默认位于/etc/libvirt/qemu/虚拟机名.xml
\[root@room9pc01 nsd1811\]# vim node.xml #课堂上事先准备好的文件
\
\node\
\1524000\ #内存大小1.5G
\1524000\
\2\
\
\hvm\
\
\
\
\
\
\
\ #给笔记本准备的
\
\ #cpu模式,直接=本机cpu,使用本机CPU
\
\ #时钟,用真机的时钟
\destroy\ #强制关机
\restart\ #重启
\restart\ #重启
\ #硬件仿真层定义开始
\/usr/libexec/qemu-kvm\
\ #定义磁盘
\
\
\
\
\ #定义网卡
\ #网卡与"vbr"虚拟交换机连接
\ #驱动,一般都用virtio
\
\ #总线型设备,键盘鼠标等等
\
\
\\ #串口
\
\
\
\\
\ #硬件仿真层定义结束