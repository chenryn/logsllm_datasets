the three modules, shows the histogram of the log of the size
of the AVP across the 672 time periods. It also shows the
lognormal ﬁt (the thick line) for the AVP size based simply
on the mean and the standard deviation obtained from the
measurements. We observe that the frequencies of occurrence
under the lognormal ﬁt and the experimental data match well.
Therefore, we can model the size of the AVP at any time period
as a random variable originating from a lognormal distribution
whose parameters are derived from the experimental data. We
use such a model for the AVP size in our analysis.
H. Observation 4: Rate of New VRT Cells Steadies
Another important parameter for analyzing the impact of
VRT is the rate at which new (previously undiscovered) cells
become Active-VRT cells. Any scheme for mitigating VRT-
related errors is likely to be inﬂuenced by this rate, given
that these newly-vulnerable cells can appear anywhere in the
memory array and cause VRT-related errors. We call the rate at
which new cells become Active-VRT cells as the Active-VRT
e
c
n
a
r
u
c
c
O
f
o
y
c
n
e
u
q
e
r
F
e
c
n
a
r
u
c
c
O
f
o
y
c
n
e
u
q
e
r
F
e
c
n
a
r
u
c
c
O
f
o
y
c
n
e
u
q
e
r
F
180
160
140
120
100
80
60
40
20
0
180
160
140
120
100
80
60
40
20
0
180
160
140
120
100
80
60
40
20
0
Module A
0
1
2
Module B
0
1
2
Module C
0
1
2
4
3
LogN (Size of Active-VRT Pool)
5
6
7
4
3
LogN (Size of Active-VRT Pool)
5
6
7
4
3
LogN (Size of Active-VRT Pool)
5
6
7
8
9
10
8
9
10
8
9
10
Fig. 8.
The size of the Active-VRT Pool closely follows a lognormal
distribution (the bars represent histogram from experimental data and the line
represents a lognormal ﬁt based on the mean and the standard deviation of
the Active-VRT Pool).
Injection (AVI) Rate. Figure 9 shows the AVI rate (moving
average, measured over a six-hour window) for each time
period in our experiments. After the initial few hours of
observation, the AVI rate tends to become steady and stabilizes
at a small value. The average AVI rate measured in the second
half of the experiments is close to 1 for all modules. For our
studies, we use a default AVI rate of 1 (for 2GB module) and
perform a sensitivity analysis.
d
e
d
d
A
s
l
l
e
C
T
R
V
w
e
N
.
m
u
N
128.00
64.00
32.00
16.00
8.00
4.00
2.00
1.00
0.50
0.25
0
Module A
Module B
Module C
100
Num Time Periods (15 min each, 7 days total)
500
200
300
400
600
700
Fig. 9. The rate of new cells becoming Active-VRT cells.
IV. ARCHITECTURE MODEL FOR ANALYZING VRT
If the system is not provisioned to tolerate VRT-related
errors, then the ﬁrst cell affected by VRT will cause data
431431
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:13:50 UTC from IEEE Xplore.  Restrictions apply. 
loss. However, a system provisioned with some means of
mitigating a VRT-related data error may suffer data loss over
many months or years. Conducting experimental studies over
such a long period of time can be prohibitive. We use the key
observations made in the previous section to develop a simple
and practical analytical model for analyzing long-term impact
of VRT. We ﬁrst present the cell-level model before presenting
the architecture-level model.
A. Cell Model under VRT
We classify each cell as either a strong cell or a weak
cell. A weak cell that causes a failure in the current time
period is deemed an Active-VRT cell. Otherwise, the cell is
deemed as a Dormant-VRT cell. The AVI determines the rate
at which strong cells get converted into weak cells, and the
AVP determines the number of weak cells that are currently in
the Active-VRT state. Figure 10 captures our cell-level model.
AVI
Strong Cell
Weak Cell
Active−VRT
Cell
AVP
Dormant
VRT Cell
Fig. 10.
weak cells and AVP regulates the population of Active-VRT cells.
In our cell model, AVI controls the conversion of strong cells to
B. Architecture Model for VRT
Our architecture-level model is driven by two parameters:
The size of the Active-VRT Pool (AVP size, determined by
the lognormal ﬁt based on experimental parameters of mean,
M u, and standard deviation, Sdev) and the rate of discovering
new cells that become Active-VRT cells (AVI rate, denoted
by K). For each time quantum, the number of cells that are
Active-VRT cells are obtained from a random variable seeded
with the lognormal ﬁt, and these cells are chosen from random
locations in memory. Then, K new VRT cells join the Active-
VRT pool, selected again from random locations in memory,
and an equal number of random cells leave the Active-VRT
pool. In each time period, we compute the probability that
the system encounters an uncorrectable failure and repeat this
process until the desired duration of simulation. As the size
of the pool is determined by statistical methods, we repeat
the model-based simulation a large number of times (100K
times) and report the average system failure probability. Our
analytical model is shown in Figure 11.
Input: Mu,Sdev, for the logn of Active−VRT pool
Input:  K, rate of discovering new VRT cells
While(TimePeriod < MAX_TIME_PERIOD)
PoolSize = Rand (LogNormDist[Mu,Sdev])
Insert K new elements in Pool
Remove K elements from Pool
P[TimePeriod] = System Failure Probability
TimePeriod++
Fig. 11. Architecture model for VRT based on AVP and AVI.
C. Parameter Scaling for Larger Systems
To study larger systems, we scale the values of AVP and
AVI derived from our experiments in proportion to the DIMM
capacity. For example, we will analyze a 32GB memory system
containing four ECC DIMMs, each with data capacity of
8GB. Each 8GB ECC-DIMM has 4.5x more bits (8GB data
+ 1GB ECC) compared to the 2GB non-ECC DIMM we
experimentally analyzed. To accommodate this, we scale our
measured AVP sizes by 4.5x and use the natural logarithm of
these scaled values to determine the mean and the standard
deviation for the lognormal ﬁt for AVP. We also scale the AVI
rate by 4.5x, and use AVI=4.5 for an 8GB ECC-DIMM instead
of a default value of AVI=1 for a 2GB module. This means
that each of the four DIMMs in our 32GB system encounters
4.5 new VRT cells every 15 minutes.
V.
IMPACT OF VRT IN THE PRESENCE OF ECC DIMM
Given the prevalence of VRT, a system employing multirate
refresh can be expected to encounter a data error within a
few minutes after the initial testing. Therefore, even though
multirate refresh is quite effective at reducing the number of
refresh operations, it cannot operate reliably.
A. Agnos: A VRT-Agnostic Approach
We can tolerate the VRT-related errors by using ECC [18].
Conventional DRAM DIMMs are also available in ECC ver-
sions, and such DIMMs support a SECDED code at an eight-
byte granularity. While these ECC DIMMs are typically used
to tolerate soft errors, we can also use ECC to correct the
errors that happen due to VRT.5 We call such an approach,
i.e., treating VRT-related errors similarly to soft errors, as VRT-
Agnostic (Agnos) multirate refresh.
B. Failure Rate Analysis of Agnos
We assume that Agnos performs initial testing to proﬁle the
weak cells and ensures the rows containing weak cells always
use Fast Refresh. Agnos corrects any error that happens after
initial testing using ECC. As long as no eight-byte word has
two-bit errors, Agnos will be able to correct an error. A two-bit
error in a word gets detected but results in data loss.
We use the analytical model for VRT to estimate the time
to failure for a system with Agnos. We ﬁrst perform the failure
analysis for a single DIMM and then use the assumption that
DIMM failures are independent to estimate the system failure
rate. We also assume that the weak cells identiﬁed during initial
testing always use Fast Refresh and have no VRT-related errors
so we ignore such cells in our analysis.
Let there be W words in an ECC DIMM and each word be
protected by SECDED (W excludes the words corresponding
to the rows identiﬁed by initial testing as weak rows). At
steady state, a pool of Active-VRT cells, the size of which
is deemed to follow a lognormal distribution, is formed. Let
the size of the AVP be P = Random(LnN (M u, Sdev)).
We assume that the Active VRT cells are randomly selected
from the memory. Given that P is much smaller than W , we
assume that P words in memory have a one-bit error, each of
5The soft-error rate (SER) is reported to be between 200-5000 FIT per
Mbit [1, 5, 27], which corresponds to one soft error every 3 hours to 75 hours
for an 8GB DIMM. For our study, we assume 4.5 errors every 15 minutes
due to VRT. Thus soft errors happen at a 54x-2700x lower rate than VRT
and have a negligible effect on our reliability calculations. We ignore SER
for the analysis of Agnos and pessimistically assume the highest SER while
analyzing our proposal in the next section. Note that if the rate of SER is
even lower (or zero), it will only enhance the efﬁcacy of our scheme.
432432
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:13:50 UTC from IEEE Xplore.  Restrictions apply. 
which can be corrected with ECC. However, the system will
face an uncorrectable error if there is one more error in any
of these P words. We divide time into equal-length periods.
In each time period, let K unique errors enter the pool and
K errors leave the pool. We assume that the new errors come
from random locations in memory. In each time period, the
module will have no uncorrectable error if all K errors come
from locations other than the ones which are in the Active-
VRT pool (P). The probability of no uncorrectable error at
each time period is given by Equation (1).
D. Conclusion from Agnos
The failure analysis of Agnos shows that simply relying
on SECDED alone is not enough to mitigate VRT-related
errors for a system with multirate refresh. One can potentially
consider using higher levels of ECC to mitigate VRT-related
errors, however this would increase cost signiﬁcantly since
ECC DIMMs of higher strength are not typically available as
commodity parts. The next section shows how a “VRT-Aware”
approach can effectively mitigate VRT-related errors.
P (DIMM has no uncorrectable error) = (1 −
P
W
)K
(1)
After T time periods, there will be K·T new errors entering
the VRT pool. So, the probability that the DIMM does not have
an uncorrectable error is given by Equation (2).
P (DIMM has no uncorrectable error) = (1 −
P
W
)K ·T
(2)
For a system with D DIMMs, the probability that the
system does not have an uncorrectable error after T time
periods is given by Equation (3).
P (System has no uncorrectable error) = (1−
P
W
)K ·T ·D (3)
C. Failure Rate Results for Agnos
We use Equation (3) to assess the failure rate for our
system with 32GB memory consisting of four ECC DIMMs,
each of 8GB. For each DIMM, the AVP size is determined by
the scaled parameters (mean and standard deviation of log of
AVP values) of our modules A, B, and C. The rate of new