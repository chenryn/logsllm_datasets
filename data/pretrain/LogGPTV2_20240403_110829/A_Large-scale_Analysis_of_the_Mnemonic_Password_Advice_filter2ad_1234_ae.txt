12.6
ASCII
H1
6.55
5.09
3.98
3.70
Ppl.
94.0
34.1
15.8
13.0
D. Comparison to Uniform Distribution
The uniform password distribution is the strongest among
all distributions with the same number of elements, but
mnemonic password distributions fall short of it for three
reasons: (1) some characters occur more frequently than others,
(2) characters in a password are not independent of each other,
and (3) the character distributions depend on the position in
the password. Table VIII illustrates exploiting these 3 effects
step by step for the standard mnemonic passwords. In addition
to the Shannon entropy H1, the table also shows the perplexity
Ppl. = log(H1) which gives the number of elements in a
uniform distribution with the same entropy.
According to the results shown in Table VIII, both pass-
word distributions provide in an ofﬂine scenario about the
same level of security as a uniform distribution over 12
to 13 characters. The biggest effect
is in both cases that
the characters are not uniformly distributed. On the other
hand, exploiting the differences in the character distributions
by position (using position-dependent models, Section IV-B)
is especially valuable for ASCII passwords, where it can
nearly reduce their strength to the strength of lowercase letter
passwords. Like discussed in Section V-A, ASCII passwords
are only stronger than lowercase letter passwords for speciﬁc
generation rules.
E. Comparison to Dictionary Passwords
While the discussion in the following paragraphs exem-
pliﬁes how our strength estimates can be used to compare
the strength of different password generation methods, it does
not incorporate other important factors for password usage
like memorability,
typing convenience, or susceptibility to
typing errors. Unfortunately, we are not aware of any such
comparison.
A second prominent suggestion for password generation
is to pick several words uniformly at random from a large
dictionary [29], [33]. We use the 7776 words Diceware dictio-
nary [33] as an example.
A computation of the strength of such dictionary-based
passwords is straight-forward. The min-entropy and Shannon
entropy are both equal to
H∞ = H1 = n · log 7776 ,
whereas the failure probability is calculated by
λβ = 1 − β
7776n .
11
The maximum length of a word in the dictionary is 6 char-
acters. On average, the created passwords have a length of
n · 4.24 + (n − 1), where (n − 1) is then number of space
characters as illustrated on the Diceware homepage.
The comparison with Diceware highlights the relative
weakness of mnemonic passwords against online attacks: al-
ready the 2-word Diceware password distribution achieves a
failure probability λ100 of 0.999998 and is thus considerably
stronger in this scenario than every rule we considered and
requires on average only 9.5 characters.
However, mnemonic passwords provide a better security in
the ofﬂine scenario for the same password length. For example,
3 Diceware words (average password length of 14.7) achieve
38.8 bit of Shannon entropy, which is already reached by
lowercase letter mnemonic passwords of minimum length 9
(Table VII, average length of 10.4).
F. Comparison to Real-world Password Distributions
This section compares the strength estimates for mnemonic
passwords with estimates for real-world password distributions
from the literature.
The currently largest-scale password strength analysis of
real-world passwords is the analysis of 70 million anonymized
Yahoo! passwords by Bonneau [3], which results in the
following estimates: Min-entropy H∞ ≈ 6.5, failure prob-
ability with 10 guesses λ10 ≈ 0.98178, and work fac-
tor µ0.5 ≈ 2,111,739.19 While no estimate for the Shannon
Entropy H1 is provided, we can apply the log-linear rela-
tionship of µ0.5 and H1 that we observed for mnemonic
passwords, which suggests an H1 of ~27 Bit (cf. Figure 5).
Bonneau also compares the Yahoo! estimates to estimates from
the password lists leaked from the RockYou and Battleﬁeld
Heroes websites. He ﬁnds that the corresponding two password
distributions are even weaker against ofﬂine attacks. Also, only
the Battleﬁeld Heroes passwords are stronger against online
attacks (H∞ ≈ 7.7, λ10 ≈ 0.98878).
Comparing these estimates for real-world password distri-
bution with our estimates for mnemonic password, we see that
mnemonic passwords are considerably stronger attacks both
online and ofﬂine attacks. For online attacks, our estimates
for the standard lowercase letters word initial rule are for
H∞ between 11.4 and 12.8, and for λ10 between 0.99912
and 0.99928 (Table VI)—reducing the corresponding success
probability (1 − λ10) compared to the Battleﬁeld Heroes
passwords by 92–94%.20 For ofﬂine attacks, we can extend
Table VII for smaller (cid:96)min, suggesting that a higher H1 as for
real-world passwords is reached by mnemonic passwords from
the standard rule with a minimum length (cid:96)min of 5. While the
length distribution of the Yahoo! passwords is unknown, the
current minimum password length for new Yahoo! accounts
is 8 and thus considerably larger. Therefore, we can conclude
that mnemonic passwords are stronger against both online and
ofﬂine attacks compared to the passwords in use today.
19The paper provides normalized estimates, which all use a common scale.
The estimates we report are un-normalized.
20When known phrases are allowed as mnemonics, related results suggest
a similar strength against online attacks as the Battleﬁeld Heroes passwords
have [42], which highlights the importance of developing password-blacklists
to keep users from choosing such easy-to-guess phrases.
VI. CONCLUSION AND OUTLOOK
This paper analyzes the strength of passwords generated
according to the mnemonic password advice on a huge corpus
of 3 billion human-written sentences. The detailed analysis
of this paper considers sentence complexity and 18 different
password generation rules. To this end, the paper shows that
the necessary similarity of human-chosen mnemonics and web
sentences exists. Furthermore, the paper contributes one of
the currently biggest corpora of human-chosen mnemonics.
Additionally, this paper is the ﬁrst to apply position-dependent
language models to passwords, which improve on regular
language models for modeling mnemonic passwords.
Our analysis addressed several questions regarding the
strength of mnemonic passwords.
Of the 18 tested password generation rules, the strongest
password distribution is generated by using the ASCII charac-
ter set, concatenating the ﬁrst character of every second word,
where common word preﬁx replacements are used to add more
special characters to the passwords. Both using only every
second word and word preﬁx replacements have only an effect
in ofﬂine attack scenarios, where adversaries are not limited
by a number of guesses but by the time they want to invest.
The sentence complexity of the used mnemonics has a
major effect when the adversary can perform only a few
guesses, and a relatively weak effect for ofﬂine attacks.
We showed that an attacker can use knowledge on the
generation process of mnemonic passwords to drastically in-
crease his success chances, reducing the strength of mnemonic
passwords against ofﬂine attacks to that of passwords from a
uniform distribution over only 12 to 13 characters.
We analyzed the effect of password length on the strength
estimates, and found that—as one would expect—the strength
of mnemonic passwords against ofﬂine attacks grows linearly
with the password length. On the other hand, if the adversary
can only perform a few guesses, our results suggest that longer
passwords provide no further advantage.
Using statistical modeling, this paper provides with Ta-
ble VII detailed estimates of the strength of mnemonic pass-
words against ofﬂine attacks for different minimum pass-
word lengths and password generation rules. This table aims
to replace for mnemonic passwords the inaccurate “rule of
thumb” for strength calculation that was used previously. With
this table, we compare mnemonic passwords to a password
generation approach that performs repeated uniform sampling
from a dictionary and found that mnemonic passwords are
weaker against online, but stronger against ofﬂine attacks.
The analysis of the password generation rules is limited to
the strength of the corresponding password distributions and
ignores that the different rules are associated with different
costs for the human. For example, the best generation rule
requires the human to memorize a twice as long sentence.
Furthermore, already having a certain generation rule in mind
will likely have an inﬂuence on mnemonic choice. For in-
stance, if the human wants to use a rule that incorporates word
preﬁx replacements, he may limit the considered mnemonics to
such where he can actually perform a replacement operation.
A more detailed study on memorability and mnemonic choice
would be needed to improve this discussion.
Furthermore, this analysis is restricted to English mnemon-
ics only. The question if our results also apply to mnemonics
of other languages is open for further research.
An interesting avenue for further research could be to use
search algorithms to ﬁnd the best password generation rule for
a given sentence distribution. The 18 rules that we analyzed
cover only a very small part of the parameter space for such
rules. Investigations in this direction would require to lower the
computational cost of evaluating a rule, which is a problem in
its own right. Moreover, an analysis of the costs of generation
rule parameters like suggested above could also be integrated
into the cost function of the search algorithm.
ACKNOWLEDGEMENT
We would like to thank our shepherd Lujo Bauer, our
colleagues Eik List and Martin Potthast, and the anonymous
reviewers for their helpful comments and suggestions. We
would also like to thank Norina Marie Grosch for preparing
the Webis-Mnemonics-17 corpus for publication.
REFERENCES
[1] M. J. Atallah, C. J. McDonough, V. Raskin, and S. Nirenburg, “Natural
Language Processing for Information Assurance and Security: An
Overview and Implementations,” in Proceedings of the 2000 Workshop
on New Security Paradigms, ser. NSPW ’00. New York, NY, USA:
ACM, 2000, pp. 51–65.
[2] C. Bishop, Pattern Recognition and Machine Learning (Information
Secaucus, NJ, USA: Springer-Verlag New
Science and Statistics).
York, Inc., 2006.
J. Bonneau, “The science of guessing: analyzing an anonymized corpus
of 70 million passwords,” in Security and Privacy (SP), 2012 IEEE
Symposium on.
J. Bonneau, C. Herley, P. C. van Oorschot, and F. Stajano, “The Past,
Present, and Future of Password-based Authentication on the Web,”
Communications of the ACM, 2015, to appear.
[3]
[4]
IEEE, 2012, pp. 538–552.
[5] S. Boztas, Entropies, Guessing and Cryptography. Royal Melbourne
Institute of Technology, Dept. of Mathematics Melbourne, 1999.
[6] W. E. Burr, D. F. Dodson, E. M. Newton, R. A. Perlner, W. T.
Polk, S. Gupta, and E. A. Nabbus, NIST Special Publication 800-63-
2: Electronic Authentication Guideline. Gaithersburg, MD: National
Institute of Standards and Technology, 2013.
[7] S. F. Chen and J. Goodman, “An Empirical Study of Smoothing
Techniques for Language Modeling,” Computer Speech & Language,
vol. 13, no. 4, pp. 359–393, 1999.
[8] G. V. Cormack, M. D. Smucker, and C. L. Clarke, “Efﬁcient and
Effective Spam Filtering and Re-ranking for Large Web Datasets,”
Computing Research Repository, vol. abs/1004.5168, 2010.
[9] M. Dell’Amico, P. Michiardi, and Y. Roudier, “Password Strength:
An Empirical Analysis,” in Proceedings of the 29th Conference on
Information Communications, ser. INFOCOM’10.
Piscataway, NJ,
USA: IEEE Press, 2010, pp. 983–991.
[10] D. C. Feldmeier and P. R. Karn, “UNIX Password Security - Ten Years
Later,” in Proceedings on Advances in Cryptology, ser. CRYPTO ’89.
New York, NY, USA: Springer-Verlag New York, Inc., 1989, pp. 44–63.
[11] R. Flesch, “A New Readability Yardstick,” Journal of applied psychol-
ogy, vol. 32, no. 3, p. 221, 1948.
[12] W. A. Gale, “Good-Turing Smoothing Without Tears,” Journal of
Quantitative Linguistics, vol. 2, 1995.
[13] M. Ghazvininejad and K. Knight, “How to Memorize a Random 60-
Bit String,” in Proceedings of
the North
American Chapter of the Association for Computational Linguistics:
Human Language Technologies. Denver, Colorado: Association for
Computational Linguistics, May–June 2015, pp. 1569–1575.
the 2015 Conference of
12
[14] Google Inc., “Secure your passwords,” Last accessed May 2016, www.
google.com/safetycenter/everyone/start/password/.
[15] T. Gottron and N. Lipka, “A Comparison of Language Identiﬁcation
Approaches on Short, Query-Style Texts,” in Advances in Information
Retrieval, ser. Lecture Notes in Computer Science, C. Gurrin, Y. He,
G. Kazai, U. Kruschwitz, S. Little, T. Roelleke, S. Rüger, and K. van
Rijsbergen, Eds.
Springer Berlin Heidelberg, 2010, vol. 5993, pp.
611–614.
[16] E. Grosse and M. Upadhyay, “Authentication at
scale,” IEEE
Security and Privacy, vol. 11, pp. 15–22, 2013. [Online]. Avail-
able: http://www.computer.org/cms/Computer.org/ComputingNow/pdfs/
AuthenticationAtScale.pdf
[17] P. Grzybek, “History and Methodology of Word Length Studies,” in
Contributions to the Science of Text and Language: Word Length Studies
and Related Issues, P. Grzybek, Ed. Dordrecht, NL: Kluwer, 2007.
[18] T. Hornby, “Password Policy Hall of Shame,” Last updated February
2014, www.defuse.ca/password-policy-hall-of-shame.htm.
[19] S. Jeyaraman and U. Topkara, “Have the cake and eat it too - infusing
usability into text-password based authentication systems,” in Proceed-
ings of the 21st Annual Computer Security Applications Conference,
ser. ACSAC ’05. Washington, DC, USA: IEEE Computer Society,
2005, pp. 473–482.
[20] K. A. Juang, S. Ranganayakulu, and J. S. Greenstein, “Using system-
generated mnemonics to improve the usability and security of password
authentication,” in Proceedings of the Human Factors and Ergonomics
Society Annual Meeting, vol. 56, no. 1, 2012, pp. 506–510.
[21] P. G. Kelley, S. Komanduri, M. L. Mazurek, R. Shay, T. Vidas, L. Bauer,
N. Christin, L. F. Cranor, and J. Lopez, “Guess Again (and Again
and Again): Measuring Password Strength by Simulating Password-
Cracking Algorithms,” in IEEE Symposium on Security and Privacy.
IEEE Computer Society, 2012, pp. 523–537.
[22] A. Kerckhoffs, “La Cryptographie Militaire,” JSM, vol. 9, pp. 161–191,
February 1883.
[23] A. Kittur, E. H. Chi, and B. Suh, “Crowdsourcing User Studies with
Mechanical Turk,” in Proceedings of the SIGCHI Conference on Human
Factors in Computing Systems, ser. CHI ’08. New York, NY, USA:
ACM, 2008, pp. 453–456.
[24] C. Kohlschütter, P. Fankhauser, and W. Nejdl, “Boilerplate Detection
Using Shallow Text Features,” in Proceedings of
the Third ACM
International Conference on Web Search and Data Mining, ser. WSDM
’10. New York, NY, USA: ACM, 2010, pp. 441–450.
[25] N. Kumar, “Password in Practice: An Usability Survey,” Journal of
Global Research in Computer Science, vol. 2, no. 5, pp. 107–112, 2011.
[26] C. Kuo, S. Romanosky, and L. F. Cranor, “Human selection of
mnemonic phrase-based passwords,” in SOUPS, ser. ACM International
Conference Proceeding Series, L. F. Cranor, Ed., vol. 149. ACM, 2006,
pp. 67–78.
J. Ma, W. Yang, M. Luo, and N. Li, “A Study of Probabilistic Password
Models,” in Proceedings of the 2014 IEEE Symposium on Security and
Privacy, ser. SP’14. Washington, DC, USA: IEEE Computer Society,
2014, pp. 689–704.
[27]
[28] M. L. Mazurek, S. Komanduri, T. Vidas, L. Bauer, N. Christin, L. F.
Cranor, P. G. Kelley, R. Shay, and B. Ur, “Measuring Password
Guessability for an Entire University,” in Proceedings of the 2013 ACM
SIGSAC Conference on Computer & Communications Security, ser.
CCS ’13. New York, NY, USA: ACM, 2013, pp. 173–186.
[29] R. Munroe, “Password Strength,” August 2011, www.xkcd.com/936/.
[30] A. Narayanan and V. Shmatikov, “Fast Dictionary Attacks on Passwords
Using Time-space Tradeoff,” in Proceedings of the 12th ACM Confer-
ence on Computer and Communications Security, ser. CCS ’05. New
York, NY, USA: ACM, 2005, pp. 364–372.
2012,
[31] N. Perlroth, “How to Devise Passwords that Drive Hackers Away,”
www.nytimes.com/2012/11/08/technology/personaltech/
November
how-to-devise-passwords-that-drive-hackers-away.html.
J. Pliam, “On the Incomparability of Entropy and Marginal Guesswork
in Brute-Force Attacks,” in Progress in Cryptology —INDOCRYPT
2000, ser. Lecture Notes in Computer Science, B. Roy and E. Okamoto,
Eds. Springer Berlin Heidelberg, 2000, vol. 1977, pp. 67–79.
[32]
[33] A. G. Reinhold, “The Diceware Passphrase Home Page,” May 2016,
www.world.std.com/~reinhold/diceware.html.
[34] P. Sparell and M. Simovits, “Linguistic Cracking of Passphrases,” 2016,
(Talk) RSA Conference.
[35] A. Stolcke, D. Yuret, and N. Madnani, “SRILM-FAQ,” Last accessed
May 2016, www.speech.sri.com/projects/srilm/manpages/srilm-faq.7.html.
[36] The Lemur Project, “The ClueWeb12 Dataset,” 2012, www.lemurproject.
org/clueweb12.
[37] U. Topkara, M. J. Atallah, and M. Topkara, “Passwords Decay, Words
Endure: Secure and Re-usable Multiple Password Mnemonics,” in
Proceedings of the 2007 ACM Symposium on Applied Computing, ser.
SAC ’07. New York, NY, USA: ACM, 2007, pp. 292–299.
[38] K.-P. L. Vu, B.-L. B. Tai, A. Bhargav, E. E. Schultz, and R. W. Proctor,
“Promoting Memorability and Security of Passwords Through Sentence
Generation,” in Proceedings of the Human Factors and Ergonomics
Society Annual Meeting, vol. 48, no. 13.
SAGE Publications, 2004,
pp. 1478–1482.
[40]
[39] M. Weir, S. Aggarwal, M. P. Collins, and H. Stern, “Testing metrics
for password creation policies by attacking large sets of revealed
passwords,” in ACM Conference on Computer and Communications
Security, E. Al-Shaer, A. D. Keromytis, and V. Shmatikov, Eds. ACM,
2010, pp. 162–175.
I. H. Witten and T. Bell, “The zero-frequency problem: estimating
the probabilities of novel events in adaptive text compression,” IEEE
Transactions on Information Theory, vol. 37, no. 4, pp. 1085–1094,
July 1991.
J. Yan, A. Blackwell, R. Anderson, and A. Grant, “Password Memo-
rability and Security: Empirical Results,” IEEE Security and Privacy,
vol. 2, no. 5, pp. 25–31, Sep. 2004.
[41]
[42] W. Yang, N. Li, O. Chowdhury, A. Xiong, and R. W. Proctor, “An
Empirical Study of Mnemonic Sentence-based Password Generation
Strategies,” in Proceedings of the 2016 ACM SIGSAC Conference on
Computer and Communications Security, ser. CCS ’16. New York,
NY, USA: ACM, 2016, pp. 1216–1229.
13