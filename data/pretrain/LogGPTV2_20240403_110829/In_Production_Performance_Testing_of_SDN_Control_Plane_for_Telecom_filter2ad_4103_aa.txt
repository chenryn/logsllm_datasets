# In-Production Performance Testing of SDN Control Plane for Telecom Operators

## Authors
- Catello Di Martino
- Ugo Giordano
- Nishok Mohanasamy
- Stefano Russo
- Marina Thottan

### Affiliations
- *Catello Di Martino, Nishok N. Mohanasamy, Marina Thottan*: Nokia Bell Labs
- **Ugo Giordano, Stefano Russo**: University of Naples Federico II

### Email
- {lelio.di_martino, nishok.narashima_mohanasamy, marina.thottan}@nokia-bell-labs.com
- {ugo.giordano, stefano.russo}@unina.it

### Abstract
Telecommunication (telco) operators face the challenge of dynamically creating new services while maintaining optimal network performance and revenue. To address this, operators are transitioning to a leaner, cloud-based Software-Defined Networking (SDN) infrastructure. While cloud services can be provisioned and tested in seconds, SDN service provisioning often takes weeks and requires significant manual effort, largely due to testing and tuning the control plane.

This paper introduces SCP-CLUB (SDN Control Plane CLoUd-based Benchmarking), a platform for in-production performance testing of SDNs in telco clouds. SCP-CLUB automates the testing process, similar to cloud service deployment. It focuses on how design choices in the cloud and SDN control planes affect Service Level Agreement (SLA) metrics such as throughput and latency. We describe the SCP-CLUB architecture and its performance testing capabilities, and present experimental results from an SDN telco cloud under production load conditions.

## 1. Introduction
In the modern telecommunications industry, operators must frequently reconfigure and integrate network functions to meet evolving market demands, changing network conditions, and unpredictable traffic patterns. The adoption of SDN and Network Function Virtualization (NFV) aims to create a programmable network fabric, enabling agile, elastic, and highly personalized services.

While cloud services can be instantiated quickly, the process of scheduling, testing, and allocating physical network resources for SDN is significantly slower, often taking days or weeks. Much of this time is spent manually tuning the control plane and running tests to ensure desired service levels. Additionally, the increasing volume of Machine-to-Machine (M2M) and Internet of Things (IoT) traffic will further strain the control plane, necessitating more efficient testing methods.

To address these challenges, we present SCP-CLUB, a framework for in-production performance testing of SDN networks in telco cloud deployments. SCP-CTUB supports the automated testing of network configurations using idle cycles of the telco cloud infrastructure, providing a level of automation comparable to deploying NFV functions. SCP-CLUB focuses on the design choices in the telco cloud and SDN control plane, particularly their impact on user-level latency and throughput.

## 2. SDN and Intent-Based Networking
SDN separates the network control logic (control plane) from the underlying network devices (data plane). The logical entity hosting SDN services in the control plane is the SDN controller, which interacts with applications through the Northbound Interface (NBI) and manages network devices through the Southbound Interface (SBI).

Two major SDN controllers, OpenDayLight (ODL) and ONOS, provide a logically centralized view of the network using clustering and state sharing. They support high-level abstractions like intents, which simplify the creation and management of end-to-end flows in complex networks. Intents are compiled into sets of OpenFlow rules and installed on the network devices.

## 3. SCP-CLUB Design
SCP-CLUB is a platform that automates the creation, execution, and analysis of performance tests for SDN control planes in telco-cloud environments. Its architecture includes five main modules: Campaign Manager, Experiment Manager, Load Generator, Topology Manager, and Data Collector.

### 3.1 Automated Life Cycle of Testing Resources
The Campaign Manager orchestrates test campaigns based on user-provided experiment profiles. These profiles specify deployment options and workload parameters. The Campaign Manager compiles these specifications into commands for the cloud infrastructure, allocates and deploys VMs, virtual networks, and data stores, and configures the testing environment.

SCP-CLUB experiments can be triggered on-predicate (when specific conditions are met) or on-demand (manually). After setting up the cloud environment, the Experiment Manager configures all entities according to the user's parameters, including controller instances, monitoring, topology management, and workload generation.

### 3.2 Collected Data
The Data Collector gathers data from various sources, including VMs, SDN controllers, workload metrics, and diagnostic logs. This data is stored in a centralized data store for subsequent analysis and visualization. Key data sets include intent events, cluster events, topology events, flow rule events, system logs, and resource usage metrics.

### 3.3 Metrics
SCP-CLUB measures key metrics such as intent installation/withdrawal throughput, latency, and control plane capacity. Throughput is the rate of correctly served intent requests, latency is the time difference between request acceptance and completion, and control plane capacity is the maximum rate of intent installation/withdrawal while maintaining a given success rate.

### 3.4 System Diagnostics and Test Pass/Fail Criteria
SCP-CLUB performs detailed checks to validate the correctness of the experiments. The Data Collector collects error information and exceptions generated by the cloud platform and VMs. The Campaign Manager performs pre- and post-experiment checks to detect potential issues. An experiment is considered successful if it meets criteria such as 100% test completion, 99% request serving, and no defects or outages.

## 4. Experimental Results
We demonstrate SCP-CLUB in the context of testing the Open Network Operating System (ONOS) and intent-based networking. We built a production-ready 3,500-core telco cloud datacenter using Nokia Airframe technology, VMWare ESXi hypervisor, and multi-vendor SDN-enabled switches. We measured the performance of ONOS under various parameters and characterized the overhead of the testing in terms of resources and costs. Finally, we show how SCP-CLUB helped identify and resolve a performance bottleneck.

---

This revised version of the text is more structured, coherent, and professional, making it easier to read and understand.