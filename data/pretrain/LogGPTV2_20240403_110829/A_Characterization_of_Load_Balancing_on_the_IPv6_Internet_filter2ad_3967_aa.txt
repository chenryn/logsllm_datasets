title:A Characterization of Load Balancing on the IPv6 Internet
author:Rafael Almeida and
Osvaldo L. H. M. Fonseca and
Elverton C. Fazzion and
Dorgival O. Guedes and
Wagner Meira Jr. and
&apos;Italo S. Cunha
A Characterization of Load Balancing
on the IPv6 Internet
Rafael Almeida1(B), Osvaldo Fonseca1, Elverton Fazzion1,2, Dorgival Guedes1,
Wagner Meira Jr.1, and ´Italo Cunha1
1 Department of Computer Science,
Universidade Federal de Minas Gerais, Belo Horizonte, Brazil
{rlca,osvaldo.morais,elverton,dorgival,meira,cunha}@dcc.ufmg.br
2 Department of Computer Science,
Universidade Federal de S˜ao Jo˜ao del-Rei, S˜ao Jo˜ao del-Rei, Brazil
Abstract. As IPv6 deployment grows, it is important to develop new
measurement techniques that allow us to study the IPv6 Internet. We
implement an IPv6 version of the Multipath Detection Algorithm and
use it from 12 geographically-distributed vantage points on two diﬀer-
ent platforms to characterize IPv6 routers that perform load balancing.
Overall, we ﬁnd that 74% of IPv6 routes traverse at least one router
that performs load balancing. Similar to previous reports for IPv4, we
ﬁnd per-destination is the most prevalent type of load balancing; sur-
prisingly, we ﬁnd a signiﬁcantly higher prevalence of per-packet load
balancing for IPv6 traﬃc than previously reported for IPv4. We investi-
gate which header ﬁelds are used for load balancing, and ﬁnd that 4% of
IPv6 routers that perform load balancing consider IPv6’s Traﬃc Class
or Flow Label ﬁelds. Finally, we quantify how often routers modify the
Traﬃc Class and Flow Label IPv6 header ﬁelds and their impact on load
balancing.
Keywords: IPv6 · Traceroute · Measurement · Load balancing ·
Topology
1 Introduction
The growing deployment of IPv6 [7] increases its relevance for application perfor-
mance and reliability. As a result, the networking community has developed new
(and adapted existing IPv4) measurement tools to collect datasets and study the
IPv6 Internet (e.g., [4,12]).
Topology measurements collected with traceroute serve a number of pur-
poses in Internet studies [17]. The introduction of Paris traceroute in 2006 [1]
showed that load balancing is widely used in the Internet and causes several
measurement artifacts in traceroute measurements. Since then, most traceroute
implementations—including those used in Ark, iPlane, and RIPE Atlas—were
updated to keep probe ﬂow identiﬁers ﬁxed to prevent load balancing and avoid
c(cid:2) Springer International Publishing AG 2017
M.A. Kaafar et al. (Eds.): PAM 2017, LNCS 10176, pp. 242–254, 2017.
DOI: 10.1007/978-3-319-54328-4 18
A Characterization of Load Balancing on the IPv6 Internet
243
measurement artifacts. This approach is adequate for ongoing measurement cam-
paigns, as it prevents artifacts without increasing measurement cost; unfortu-
nately, it does not identify if routers perform load balancing.
Studying load balancing properties, like the number of simultaneous routes
between two networks, helps us understand the impact of load balancing on per-
formance (e.g., due to out-of-order packet delivery) and robustness (e.g., against
failures and congestion). Studying load balancing also provides insight into traﬃc
engineering practices.
In this paper we implemented an IPv6 version of the Multipath Detection
Algorithm (MDA) [16].1 Our implementation identiﬁes routers that perform load
balancing and classiﬁes load balancing behavior by systematically varying four
diﬀerent ﬁelds in the IPv6 and TCP headers.
We analyze IPv6 route measurements from 12 vantage points distributed
across 7 countries in 3 continents. We characterize the prevalence of load balanc-
ing in the IPv6 Internet, diﬀerent load balancing behaviors, and load balancing
properties such as asymmetry. We also study whether routers overwrite the IPv6
traﬃc class and ﬂow label ﬁelds, which might impact load balancing. Whenever
possible, we compare our results against previous observations for IPv4 load
balancing by Augustin et al. [1]. Our main ﬁndings are:
– IPv6 load balancing is widespread, although less so than previously observed
for IPv4. We ﬁnd 74% of IPv6 routes traverse at least one load balancer.
– Similar to IPv4, IPv6 per-destination is the most common class of load bal-
ancing. However, we ﬁnd that IPv6 per-packet load balancing is signiﬁcantly
more common than previously reported for IPv4.
– A non-negligible fraction (4%) of IPv6 routers performing load balancing con-
sider the traﬃc class and ﬂow label header ﬁelds.
Our results further our understanding of the IPv6 Internet; as far as we are
aware, this is the ﬁrst study of IPv6 load balancing. Although IPv6 and IPv4
load balancing have many similarities, we identify diﬀerences. In particular, the
higher prevalence of per-packet load balancing for IPv6 might negatively impact
TCP performance as a result of higher risk of packet reordering.
2 Load Balancing
Load balancing is traﬃc engineering and can be conﬁgured manually or auto-
matically by mechanisms such as ECMP and EIGRP. Motivations for load bal-
ancing include increasing bandwidth and reducing maximum link utilization.
Figure 1 shows a route traversing four routers that perform load balancing (load
balancers) measured from a vantage point in the Linode cloud hosting service.
Load balancers choose the next hop of a packet based on a ﬂow identiﬁer
computed from the packet’s headers. Augustin et al. [1] deﬁned three classes of
load balancers depending on what header ﬁelds are used as ﬂow identiﬁers. In
decreasing order of load balancing granularity, the three classes are:
1 Code available at https://www.github.com/TopologyMapping/mda6.
244
R. Almeida et al.
Fig. 1. Real route measurement with four load balancers (A, B, C, and D) and two
diamonds (A-D and D-E).
– Per-destination load balancers use a packet’s source and destination IP
addresses as the packet’s ﬂow identiﬁer. This behavior ensures all packets
exchanged between a source and a destination traverse the same sequence of
interfaces and experience similar performance.
– Per-ﬂow load balancers use a 5-tuple—source and destination addresses,
source and destination ports, and protocol number—as the ﬂow identiﬁer.
This guarantees that all packets belonging to the same connection will follow
the same sequence of interfaces and experience similar performance. Diﬀer-
ent connections between the same source and destination pair might traverse
diﬀerent sequences of interfaces and experience diﬀerent performance.
– Per-packet load balancers send packets to a random next hop regardless of
header ﬁeld values. Per-packet load balancing may result in packets from the
same connection traversing diﬀerent sequences of interfaces and experienc-
ing diﬀerent performance. This incurs higher risk of packet reordering, which
might negatively impact traﬃc, e.g., decreasing TCP performance [5].
To detect load balancing, the Multipath Detection Algorithm (MDA) [16]
systematically varies the ﬂow identiﬁer in traceroute probes to detect diﬀerent
next hops after a load balancer. MDA proceeds hop-by-hop. MDA assumes each
load balancer b in hop h has Nb + 1 next hops, where Nb is the number of next
hops of b detected so far. MDA then computes the number of probes necessary
to identify Nb + 1 next hops with a given conﬁdence α, usually set to 0.95.2
This computation assumes load balancer b distributes ﬂow identiﬁers uniformly
among its next hops. If the number of computed probes is larger than the number
of probes already sent to b’s next hops, MDA sends additional probes to cover the
diﬀerence. If the additional probes detect no new next hop, then MDA proceeds
to the next load balancer or hop. If the additional probes detect new next hops,
then MDA updates Nb and repeats the process.
Augustin et al. [1] characterize load balancer diamonds, deﬁned as a sub-
graph containing all hops between a divergence hop (a load balancer) and a
convergence hop, with the condition that all ﬂow identiﬁers traverse both diver-
gence and convergence hops. Figure 1 shows two diamonds. Augustin et al. [1]
2 More precisely, MDA computes the number of probes required to bound the proba-
bility of not detecting a next hop, across all load balancers, to 1 − α.
A Characterization of Load Balancing on the IPv6 Internet
245
deﬁned the length of a diamond as the number of edges in the longest sequence
of interfaces across the diamond; the min-width of a diamond as the number of
edge-disjoint sequences of interfaces across the diamond; the max-width as the
maximum number of reachable interfaces at any given hop; and asymmetry as
the maximum length diﬀerence between any sequence of interfaces across the
diamond (a diamond with asymmetry zero is said to be symmetric). In Fig. 1,
diamond 1 has asymmetry 1, length 4, min-width 2, and max-width 4; while
diamond 2 is symmetric, has length 2, min-width 3, and max-width 3.
3 IPv6 Load Balancing and Measurement Methodology
The IPv6 header, shown in Fig. 2, is simpler than the IPv4 header. To identify
load balancing, we vary the IPv6-speciﬁc traﬃc class and ﬂow label ﬁelds. The
traﬃc class ﬁeld serves a purpose similar to the TOS ﬁeld in IPv4. RFC2460 says
that routers may modify the traﬃc class ﬁeld. Other routers or the destination
should not expect the traﬃc class ﬁeld to have the same value of when the packet
was ﬁrst created. The ﬂow label ﬁeld allows IPv6 routers to eﬃciently identify
ﬂows.3 RFC6437 recommends that source hosts set one ﬂow label value for all
IPv6 packets belonging to the same connection or application. RFC6437 also
speciﬁes that a router may initialize the ﬂow label when it is zero, but should not
modify a nonzero ﬂow label.
IPv6 version traﬃc class
ﬂow label
size
next header
hop limit
source address
destination address
TCP source port
sequence number
...
destination port
(used to store the probe identiﬁer)
...
Fig. 2. IPv6 header and ﬁrst 8 bytes of the TCP header. We systematically vary gray
bits to identify IPv6 load balancing.
3 The usual 5-tuple ﬂow deﬁnition used in IPv4 is unsuitable in IPv6 as routers need
to follow the variable-length chain of IPv6 extension headers (starting at the next
header ﬁeld) until the end to ﬁnd the TCP header.
246
R. Almeida et al.
We also vary the last 8 bits of the destination address to identify per-destination
load balancers. Current IPv6 preﬁxes routed in the Internet are less speciﬁc than
/48s [2]; packets with diﬀerences in the last 8 bits of the destination address will
take the same route up to the destination’s network. Finally, we also vary the
TCP source port to check whether IPv6 routers also consider port numbers for
per-ﬂow load balancing, as in IPv4. We choose source port numbers starting from
33435, as typically done in traceroute implementations. We use TCP packets to
destination port 80 to improve reachability [13] and avoid complaints. We store