# Remote Monitoring and Network Performance Management

## Table of Contents
- [Setting Thresholds](#setting-thresholds)
- [RMON Command-Line Interface](#rmon-command-line-interface)
- [RMON Event Table](#rmon-event-table)
- [RMON Alarm Table](#rmon-alarm-table)
- [Troubleshoot RMON](#troubleshoot-rmon)
- [Understanding Measurement Points, Key Performance Indicators, and Baseline Values](#understanding-measurement-points-key-performance-indicators-and-baseline-values)
  - [Measurement Points](#measurement-points)
  - [Basic Key Performance Indicators](#basic-key-performance-indicators)
  - [Setting Baselines](#setting-baselines)
- [Define and Measure Network Availability](#define-and-measure-network-availability)
  - [Define Network Availability](#define-network-availability)
  - [Measure Availability](#measure-availability)
- [Monitoring the SLA and the Required Bandwidth](#monitoring-the-sla-and-the-required-bandwidth)
- [Real-Time Performance Monitoring](#real-time-performance-monitoring)
  - [Configuring Real-Time Performance Monitoring](#configuring-real-time-performance-monitoring)
  - [Displaying Real-Time Performance Monitoring Information](#displaying-real-time-performance-monitoring-information)
- [Measure Health](#measure-health)

---

## Setting Thresholds
Health and performance monitoring can be enhanced through the remote monitoring of SNMP variables by local SNMP agents running on each router. These agents compare MIB values against predefined thresholds and generate exception alarms without the need for polling by a central SNMP management platform. This proactive management mechanism is effective as long as the thresholds are correctly determined and set. For more information, refer to RFC 2819, "Remote Network Monitoring MIB."

### Configuring Thresholds
To set a rising and falling threshold for a monitored variable, you will be alerted whenever the value falls outside the allowable operational range (see Figure 25 on page 719). Events are generated only when the threshold is first crossed in any direction, rather than after each sample period. For example, if a rising threshold crossing event is raised, no more threshold crossing events will occur until a corresponding falling event. This reduces the number of alarms, making it easier for operations staff to respond.

To configure remote monitoring, specify the following:
- The variable to be monitored (by its SNMP object identifier)
- The inspection interval
- A rising threshold
- A falling threshold
- A rising event
- A falling event

Before configuring, identify the variables to be monitored and their allowable operational ranges. This requires an initial baselining period, typically at least three months, to determine the operational ranges. Baseline monitoring should continue throughout the life span of each monitored variable.

## RMON Command-Line Interface
Junos OS provides two mechanisms to control the Remote Monitoring agent: the command-line interface (CLI) and SNMP. To configure an RMON entry using the CLI, include the following statements at the `[edit snmp]` hierarchy level:

```plaintext
rmon {
    alarm index {
        description;
        falling-event-index;
        falling-threshold;
        intervals;
        rising-event-index;
        rising-threshold;
        sample-type (absolute-value | delta-value);
        startup-alarm (falling | rising | rising-or-falling);
        variable;
    }
    event index {
        community;
        description;
        type (log | trap | log-and-trap | none);
    }
}
```

If you do not have CLI access, you can configure remote monitoring using the SNMP Manager or management application, assuming SNMP access has been granted (see Table 63 on page 721).

## RMON Event Table
Set up an event for each type you want to generate. For example, you could have generic rising and falling events, or specific events for each monitored variable (e.g., temperature rising, firewall hit, interface utilization). Once configured, these events do not need to be updated.

### Table 63: RMON Event Table
| Field | Description |
|-------|-------------|
| `eventDescription` | Text description of this event |
| `eventType` | Type of event (e.g., log, trap, log and trap) |
| `eventCommunity` | Trap group to which to send this event (as defined in the Junos OS configuration) |
| `eventOwner` | Entity (e.g., manager) that created this event |
| `eventStatus` | Status of this row (e.g., valid, invalid, createRequest) |

## RMON Alarm Table
The RMON alarm table stores the SNMP object identifiers (including their instances) of the monitored variables, along with their rising and falling thresholds and corresponding event indexes. To create an RMON request, specify the fields shown in Table 64 on page 721.

### Table 64: RMON Alarm Table
| Field | Description |
|-------|-------------|
| `alarmStatus` | Status of this row (e.g., valid, invalid, createRequest) |
| `alarmInterval` | Sampling period (in seconds) of the monitored variable |
| `alarmVariable` | OID (and instance) of the variable to be monitored |
| `alarmValue` | Actual value of the sampled variable |
| `alarmSampleType` | Sample type (absolute or delta changes) |
| `alarmStartupAlarm` | Initial alarm (rising, falling, or either) |
| `alarmRisingThreshold` | Rising threshold against which to compare the value |
| `alarmFallingThreshold` | Falling threshold against which to compare the value |
| `alarmRisingEventIndex` | Index (row) of the rising event in the event table |
| `alarmFallingEventIndex` | Index (row) of the falling event in the event table |

Both `alarmStatus` and `eventStatus` fields are `entryStatus` primitives, as defined in RFC 2579, "Textual Conventions for SMIv2."

## Troubleshoot RMON
Troubleshoot the RMON agent, `rmopd`, by inspecting the contents of the Juniper Networks enterprise RMON MIB, `jnxRmon`, which provides the extensions listed in Table 65 on page 722 to the RFC 2819 `alarmTable`.

### Table 65: jnxRmon Alarm Extensions
| Field | Description |
|-------|-------------|
| `jnxRmonAlarmGetFailCnt` | Number of times the internal Get request for the variable failed |
| `jnxRmonAlarmGetFailTime` | Value of `sysUpTime` when the last failure occurred |
| `jnxRmonAlarmGetFailReason` | Reason why the Get request failed |
| `jnxRmonAlarmGetOkTime` | Value of `sysUpTime` when the variable moved out of failure state |
| `jnxRmonAlarmState` | Status of this alarm entry |

Monitoring these extensions provides clues as to why remote alarms may not behave as expected.

## Understanding Measurement Points, Key Performance Indicators, and Baseline Values
This section provides guidelines for monitoring the service quality of an IP network, describing how service providers and network administrators can use information provided by Juniper Networks routers to monitor network performance and capacity. A thorough understanding of SNMP and the associated MIB supported by Junos OS is required.

### Measurement Points
Defining measurement points is as important as defining the metrics themselves. This section describes measurement points within the context of a service provider network and helps identify where measurements can be taken. It is crucial to understand exactly where a measurement point is, as it is vital to understanding the implication of the actual measurement.

#### Types of Measurements
- **Network-centric measurements** are taken at points that map to the ingress and egress points for the network itself.
- **Router-centric measurements** are taken directly from the routers, but ensure the correct router subcomponents are identified in advance.

### Basic Key Performance Indicators (KPIs)
Monitor a service provider network for the following KPIs:
- **Reachability**: Measures the "reachability" of one measurement point from another at the network layer (e.g., using ICMP ping).
- **Errors**: Measures the number and type of errors occurring on the provider network, including both router-centric and network-centric measurements (e.g., hardware failures or packet loss).
- **Performance**: Measures how well the network supports IP services (e.g., delay or utilization).

### Setting Baselines
To determine how well the provider network is performing, we recommend an initial three-month period of monitoring to identify normal operational parameters. With this information, you can recognize exceptions and identify abnormal behavior. Continue baseline monitoring for the lifetime of each measured metric to recognize performance trends and growth patterns.

Many metrics do not have an allowable operational range associated with them. In most cases, you cannot identify the allowable operational range until you have determined a baseline for the actual variable on a specific network.

## Define and Measure Network Availability
### Define Network Availability
Availability of a service provider’s IP network can be thought of as the reachability between regional points of presence (POPs), as shown in Figure 27 on page 726. When using a full mesh of measurement points, where every POP measures the availability to every other POP, you can calculate the total availability of the service provider’s network. This KPI can help monitor the service level of the network and can be used by the service provider and its customers to determine if they are operating within the terms of their service-level agreement (SLA).

#### Measurement Points
- **Path availability**: Availability of an egress interface B1 as seen from an ingress interface A1.
- **Router availability**: Percentage of path availability of all measured paths terminating on the router.
- **POP availability**: Percentage of router availability between any two regional POPs, A and B.
- **Network availability**: Percentage of POP availability for all regional POPs in the service provider’s network.

### Measure Availability
There are two methods to measure availability:
- **Proactive**: Availability is automatically measured as often as possible by an operational support system.
- **Reactive**: Availability is recorded by a Help desk when a fault is first reported by a user or a fault monitoring system.

This section discusses real-time performance monitoring as a proactive monitoring solution.

## Monitoring the SLA and the Required Bandwidth
A typical SLA between a service provider and a customer might state that a Point of Presence (POP) is the connection of two back-to-back provider edge routers to separate core provider routers using different links for resilience. The system is considered unavailable when either an entire POP becomes unavailable or for the duration of a Priority 1 fault.

An SLA availability figure of 99.999 percent for a provider’s network would relate to a downtime of approximately 5 minutes per year. To measure this proactively, take availability measurements at a granularity of less than one every five minutes. With a standard size of 64 bytes per ICMP ping request, one ping test per minute would generate 7680 bytes of traffic per hour per destination, including ping responses. A full mesh of ping tests to 276 destinations would generate 2,119,680 bytes per hour, representing the following:
- On an OC3/STM1 link of 155.52 Mbps, a utilization of 1.362 percent
- On an OC12/STM4 link of 622.08 Mbps, a utilization of 0.340 percent

With a size of 1500 bytes per ICMP ping request, one ping test per minute would generate 180,000 bytes per hour per destination, including ping responses. A full mesh of ping tests to 276 destinations would generate 49,680,000 bytes per hour, representing the following:
- On an OC3/STM1 link, 31.94 percent utilization
- On an OC12/STM4 link, 7.986 percent utilization

Each router can record the results for every destination tested. With one test per minute to each destination, a total of 1 x 60 x 24 x 276 = 397,440 tests per day would be performed and recorded by each router. All ping results are stored in the `pingProbeHistoryTable` (see RFC 2925) and can be retrieved by an SNMP performance reporting application for post-processing. This table has a maximum size of 4,294,967,295 rows, which is more than adequate.

## Real-Time Performance Monitoring
Juniper Networks provides a real-time performance monitoring (RPM) service to monitor real-time network performance. Use the J-Web Quick Configuration feature to configure RPM parameters used in RPM tests. (J-Web Quick Configuration is a browser-based GUI that runs on Juniper Networks routers. For more information, see the J-Web Interface User Guide.)

### Configuring Real-Time Performance Monitoring
Some of the most common options you can configure for RPM tests are shown in Table 66 on page 729.

### Table 66: Real-Time Performance Monitoring Configuration Options
| Field | Description |
|-------|-------------|
| **Request Information** |  |
| **Probe Type** | Type of probe to send as part of the test (e.g., http-get, icmp-ping) |
| **Interval** | Wait time (in seconds) between each probe transmission (range: 1 to 255 seconds) |
| **Test Interval** | Wait time (in seconds) between tests (range: 0 to 86400 seconds) |
| **Probe Count** | Total number of probes sent for each test (range: 1 to 15 probes) |
| **Destination Port** | TCP or UDP port to which probes are sent (use number 7 or select a port number from 49152 through 65535) |
| **DSCP Bits** | Differentiated Services code point (DSCP) bits (valid 6-bit pattern, default: 000000) |
| **Data Size** | Size (in bytes) of the data portion of the ICMP probes (range: 0 to 65507 bytes) |
| **Data Fill** | Contents of the data portion of the ICMP probes (hexadecimal value, range: 1 to 800h) |
| **Maximum Probe Thresholds** |  |
| **Successive Lost Probes** | Total number of probes that must be lost successively to trigger a probe failure and generate a system log message (range: 0 to 15 probes) |
| **Lost Probes** | Total number of probes that must be lost to trigger a probe failure and generate a system log message (range: 0 to 15 probes) |
| **Round Trip Time** | Total round-trip time (in microseconds) from the Services Router to the remote server, which, if exceeded, triggers a probe failure and generates a system log message (range: 0 to 60,000,000 microseconds) |
| **Jitter** | Total jitter (in microseconds) for a test, which, if exceeded, triggers a probe failure and generates a system log message (range: 0 to 60,000,000 microseconds) |
| **Standard Deviation** | Maximum allowable standard deviation (in microseconds) for a test, which, if exceeded, triggers a probe failure and generates a system log message (range: 0 to 60,000,000 microseconds) |
| **Egress Time** | Total one-way time (in microseconds) from the router to the remote server, which, if exceeded, triggers a probe failure and generates a system log message (range: 0 to 60,000,000 microseconds) |
| **Ingress Time** | Total one-way time (in microseconds) from the remote server to the router, which, if exceeded, triggers a probe failure and generates a system log message (range: 0 to 60,000,000 microseconds) |
| **Jitter Egress Time** | Total outbound-time jitter (in microseconds) for a test, which, if exceeded, triggers a probe failure and generates a system log message (range: 0 to 60,000,000 microseconds) |
| **Jitter Ingress Time** | Total inbound-time jitter (in microseconds) for a test, which, if exceeded, triggers a probe failure and generates a system log message (range: 0 to 60,000,000 microseconds) |
| **Egress Standard Deviation** | Maximum allowable standard deviation of outbound times (in microseconds) for a test, which, if exceeded, triggers a probe failure and generates a system log message (range: 0 to 60,000,000 microseconds) |
| **Ingress Standard Deviation** | Maximum allowable standard deviation of inbound times (in microseconds) for a test, which, if exceeded, triggers a probe failure and generates a system log message (range: 0 to 60,000,000 microseconds) |

### Displaying Real-Time Performance Monitoring Information
For each RPM test configured on the router, monitoring information includes the round-trip time, jitter, and standard deviation. To view this information, select `Monitor > RPM` in the J-Web interface, or enter the `show services rpm` command-line interface (CLI) command.

To display the results of the most recent RPM probes, enter the `show services rpm probe-results` CLI command:

```plaintext
user@host> show services rpm probe-results
Owner: p1, Test: t1
Target address: 10.8.4.1, Source address: 10.8.4.2, Probe type: icmp-ping
Destination interface name: lt-0/0/0.0
Test size: 10 probes
Probe results:
Response received, Sun Jul 10 19:07:34 2005
Rtt: 50302 usec
Results over current test:
Probes sent: 2, Probes received: 1, Loss percentage: 50
Measurement: Round trip time
Minimum: 50302 usec, Maximum: 50302 usec, Average: 50302 usec,
Jitter: 0 usec, Stddev: 0 usec
Results over all tests:
Probes sent: 2, Probes received: 1, Loss percentage: 50
Measurement: Round trip time
Minimum: 50302 usec, Maximum: 50302 usec, Average: 50302 usec,
Jitter: 0 usec, Stddev: 0 usec
```

## Measure Health
You can monitor health metrics reactively by using fault management software such as SMARTS InCharge, Micromuse Netcool Omnibus, or Concord Live Exceptions. We recommend monitoring the health metrics shown in Table 67 on page 733.

### Table 67: Health Metrics
| Metric | Description | Parameters | Name | Value | MIB name | Variable name | Variable OID | Frequency (mins) | Allowable range | Managed objects |
|--------|-------------|------------|------|-------|----------|--------------|--------------|------------------|-----------------|-----------------|
| **Errors in** | Number of inbound packets that contained errors, preventing them from being delivered | IF-MIB (RFC 2233) | `ifInErrors` | .1.3.6.1.31.2.2.1.14 | 60 | To be baselined | Logical interfaces |
| **Errors out** | Number of outbound packets that contained errors | IF-MIB (RFC 2233) | `ifOutErrors` | .1.3.6.1.31.2.2.1.20 | 60 | To be baselined | Logical interfaces |

---

This document provides a comprehensive guide to setting up and managing remote monitoring and network performance using RMON, real-time performance monitoring, and health metrics.