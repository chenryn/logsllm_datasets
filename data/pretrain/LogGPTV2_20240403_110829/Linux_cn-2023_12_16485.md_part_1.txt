---
author: Deepu Benson
category: 技术
comments_data: []
count:
  commentnum: 0
  favtimes: 1
  likes: 0
  sharetimes: 0
  viewnum: 2225
date: '2023-12-18 13:45:00'
editorchoice: false
excerpt: 在本系列的第四篇文章中，我们将开始学习 TensorFlow，这是一个非常强大的人工智能和机器学习库。
fromurl: https://www.opensourceforu.com/2023/01/ai-an-introduction-to-probability/
id: 16485
islctt: true
largepic: /data/attachment/album/202312/18/134407yjeszs8lflwhtlwu.jpg
permalink: /article-16485-1.html
pic: /data/attachment/album/202312/18/134407yjeszs8lflwhtlwu.jpg.thumb.jpg
related:
- displayorder: 0
  raid: 16436
- displayorder: 0
  raid: 16526
reviewer: wxy
selector: lujun9972
summary: 在本系列的第四篇文章中，我们将开始学习 TensorFlow，这是一个非常强大的人工智能和机器学习库。
tags:
- TensorFlow
- AI
thumb: false
title: 人工智能教程（四）：概率论入门
titlepic: true
translator: toknow-gh
updated: '2023-12-18 13:45:00'
---
![](/data/attachment/album/202312/18/134407yjeszs8lflwhtlwu.jpg)
在本系列的 [上一篇文章](/article-16436-1.html) 中，我们进一步讨论了矩阵和线性代数，并学习了用 JupyterLab 来运行 Python 代码。在本系列的第四篇文章中，我们将开始学习 TensorFlow，这是一个非常强大的人工智能和机器学习库。我们也会简要介绍一些其它有用的库。稍后，我们将讨论概率、理论以及代码。和往常一样，我们先讨论一些能拓宽我们对人工智能的理解的话题。
到目前为止，我们只是从技术方面讨论人工智能。随着越来越多的人工智能产品投入使用，现在是时候分析人工智能的社会影响了。想象一个找工作的场景，如果你的求职申请由人来处理，在申请被拒绝时，你可以从他们那里得到反馈，比如被拒的理由。如果你的求职申请由人工智能程序处理，当你的申请被拒绝时，你不能要求该人工智能软件系统提供反馈。在这种情况下，你甚至不能确定你的申请被拒绝是否确实是仅基于事实的决定。这明确地告诉我们，从长远来看，我们需要的不仅仅是魔法般的结果，还需要人工智能具有  责任   accountability  和  保证   guarantee 。（LCTT 译注：责任主要指确保系统的决策过程是透明的、可解释的，并且对系统的行为负责。保证是指对于系统性能指标和行为的一种承诺或者预期。）目前有很多试图回答这些问题的研究。
人工智能的应用也会引发许多道德和伦理上的问题。我们不必等到强人工智能（也被称为  通用人工智能   artificial general intelligence  —— AGI）出现才研究它的社会影响。我们可以通过思想实验来探究人工智能的影响。想象你在一个雨夜你驾车行驶在有发夹完的道路上，突然你眼前有人横穿马路，你的反应是什么？如果你突然刹车或转向，你自己的生命将处于极大的危险之中。但如果你不这样做，过马路的人恐怕凶多吉少。因为我们人类具有自我牺牲的特质，在决策的瞬间，即使是最自私的人也可能决定救行人。但我们如何教会人工智能系统模仿这种行为呢？毕竟从纯粹的逻辑来看，自我牺牲是一个非常糟糕的选择。
同样的场景下，如果汽车是由人工智能软件在驾驶会发生什么呢？既然你是汽车的主人，那么人工智能软件理应把你的安全放在首位，它甚至全不顾其他乘客的安全。很容易看出，如果世界上所有的汽车都由这样的软件控制的话将导致彻底的混乱。现在，如果进一步假设乘坐自动驾驶汽车的乘客身患绝症。那么对于一个数学机器来说，为了行人牺牲乘客是合乎逻辑的。但对于我们这些有血有肉的人却不见得如此。你可以花点时间思考一下其它场景，注重逻辑的机器和热血的人类都会做出什么样的决策。
有很多书籍和文章在讨论人工智能全面运作后的政治、社会和伦理方面的问题。但对于我们这些普通人和计算机工程师来说，读所有的书都是不必要的。然而，由于人工智能的社会意义如此重要，我们也不能轻易搁置这个问题。为了了解人工智能的社会政治方面，我建议你通过几部电影来理解人工智能（强人工智能）如何影响我们所有人。 斯坦利·库布里克   Stanley Kubrick 的杰作《 2001：太空漫游   2001: A Space Odyssey 》是最早描绘超级智能生物如何俯视我们人类的电影之一。这部电影中人工智能认为人类是世界最大的威胁，并决定毁灭人类。事实上，有相当多的电影都在探索这种情节。由伟大的艺术大师 史蒂文·斯皮尔伯格   Steven Spielberg 亲自执导的《 人工智能   Artificial Intelligence 》，探讨了人工智能机器如何与人类互动。另一部名为《 机械姬   Ex Machina 》的电影详细阐述了这一思路，讲述了具有人工智能的机器。在我看来这些都是了解人工智能的影响必看的电影。
最后思考一下，试想如果马路上的汽车使用来自制造商的不同的自动驾驶规则和人工智能，这将导致彻底的混乱。
### TensorFlow 入门
TensorFlow 是由  谷歌大脑   Google Brain  团队开发的一个自由开源的库，使用 Apache 2.0 许可证。TensorFlow 是开发人工智能和机器学习程序的重量级的库。除了 Python 之外，TensorFlow 还提供 C++、Java、JavaScript 等编程语言的接口。在我们进一步讨论之前，有必要解释一下  张量   tensor  是什么。如果你熟悉物理学，张量这个词对你来说可能并不陌生。但如果你不知道张量是什么也不用担心，现阶段把它看作多维数组就行了。当然，这是一种过度简化的理解。TensorFlow 可以在 NumPy 提供的多维数组之上运行。
首先，我们要在 JupyterLab 中安装 TensorFlow。TensorFlow 有 GPU 版本和 CPU 版本两种安装类型可以选择。这主要取决于你的系统是否有合适的 GPU。GPU 是一种利用并行处理来加快图像处理速度的电路。它被广泛用在游戏和设计领域，在开发人工智能和机器学习程序时也是必不可少的硬件。但一个不太好的消息是 TensorFlow 只兼容英伟达的 GPU。此外，你需要在系统中安装一个称为 CUDA（ 计算统一设备架构   compute unified device architecture ）的并行计算平台。如果你的系统满足这些要求，那么在 JupyterLab 上执行命令 `pip install tensorflow-gpu` 来安装 GPU 版本的 TensorFlow。如果你系统的 GPU 配置无法满足要求，当你尝试使用 TensorFlow 时，会得到如下错误消息：“CUDA\_ERROR\_NO\_DEVICE: no CUDA-capable device is detected”。此时使用 `pip uninstall tensorflow-gpu` 卸载 GPU 版本的 TensorFlow。然后执行命令 `pip install tensorflow` 安装 CPU 版本的 TensorFlow。现在 TensorFlow 就准备就绪了。请注意，目前我们将讨论限制在 CPU 和 TensorFlow 上。
![图 1：第一个使用 TensorFlow 的 Python 脚本](/data/attachment/album/202312/18/134506iktcf6k4lx5oto4j.png)
现在，让我们运行第一个由 TensorFlow 驱动的 Python 代码。图 1 显示了一个简单的 Python 脚本及其在 JupyterLab 上执行时的输出。前两行代码将库 NumPy 和 TensorFlow 导入到 Python 脚本中。顺便一提，如果你想在 Jupyter Notebook 单元中显示行号，单击菜单 “ 查看   View  >  显示行号   Show Line Numbers ”。第 3 行使用 NumPy 创建了一个名为 `arr` 的数组，其中包含三个元素。第 4 行代码将数组 `arr` 的每个元素乘 3，将结果存储在一个名为 `ten` 的变量中。第 5 行和第 6 行分别打印变量 `arr` 和 `ten` 的类型。从代码的输出中可以看到，`arr` 和 `ten` 的类型是不同的。第 7 行打印变量 `ten` 的值。注意，`ten` 的形状与数组 `arr` 的形状是相同的。 数据类型 `int64` 在本例中用于表示整数。这使得本例中 NumPy 和 TensorFlow 数据类型之间的无缝转换成为可能。
TensorFlow 支持很多操作和运算。随着处理的数据量的增加，这些操作会变得越来越复杂。TensorFlow 支持常见的算术运算，比如乘法、减法、除法、幂运算、模运算等。如果参与运算的是列表或元组，TensorFlow 会逐元素执行该操作。
![图 2：TensorFlow 中的逐元素操作](/data/attachment/album/202312/18/134507nmvmnlyl5zyy59vz.png)