---
author: Bestony
category: 技术
comments_data:
- date: '2020-04-06 23:33:06'
  message: 很好奇是什么文件侵犯了版权
  postip: 218.20.4.82
  username: 来自广东广州的 QQ Browser 10.5|Windows 7 用户
- date: '2023-01-18 18:42:26'
  message: '&lt;script&gt;alert(''XSS Inject Test'')&lt;/script&gt;'
  postip: 223.88.96.20
  username: 来自河南郑州的 Firefox 108.0|Windows 10 用户
- date: '2023-02-09 09:13:27'
  message: 都什么年代 还在进行传统XSS注入？
  postip: 118.249.42.191
  username: 来自湖南长沙的 Chrome 109.0|Windows 10 用户
- date: '2024-02-04 07:56:37'
  message: 应该是误用某个有版权的图标之类
  postip: 91.199.84.73
  username: 来自荷兰的 Chrome Mobile 120.0|Android 10 用户
count:
  commentnum: 4
  favtimes: 1
  likes: 0
  sharetimes: 0
  viewnum: 18576
date: '2018-02-23 02:17:00'
editorchoice: false
excerpt: 我们的开源项目放在 GitHub 上的仓库由于收到了 DMCA Takedown 投诉被封禁，仓库处于不可访问状态。在解决了这个惊魂事件之后，我们将此中得到的教训和经验分享给大家。
fromurl: ''
id: 9374
islctt: false
largepic: /data/attachment/album/201802/23/021721tniukydfunnyikai.jpg
permalink: /article-9374-1.html
pic: /data/attachment/album/201802/23/021721tniukydfunnyikai.jpg.thumb.jpg
related: []
reviewer: ''
selector: ''
summary: 我们的开源项目放在 GitHub 上的仓库由于收到了 DMCA Takedown 投诉被封禁，仓库处于不可访问状态。在解决了这个惊魂事件之后，我们将此中得到的教训和经验分享给大家。
tags:
- GitHub
- DMCA
thumb: false
title: 如何应对 GitHub 仓库被 DMCA Takedown 投诉
titlepic: true
translator: ''
updated: '2018-02-23 02:17:00'
---

![](/data/attachment/album/201802/23/021721tniukydfunnyikai.jpg)

### 仓库被封禁

2018 年 2 月 20 日，我们的开源项目在 GitHub 上的仓库因收到 DMCA Takedown 投诉而被封禁。此时，访问该仓库时会显示一条公开消息，说明封禁原因。根据 GitHub 的 DMCA 规则，一旦确认投诉有效，GitHub 会给仓库管理员发送一封邮件，要求在 24 小时内清理被投诉的内容并回复 GitHub。否则，仓库将被封禁，禁止任何访问和数据导出。

我们收到 Takedown 投诉后，本应有 24 小时的时间来响应，但由于正值春节假期，仓库拥有者未能及时看到邮件。因此，在 24 小时后，GitHub 按照 DMCA 规则对仓库进行了封禁。仓库被封禁后，我们发现无法访问，并且从封禁消息得知，仓库中的某个文件侵犯了原作者的版权。原作者向 GitHub 发送了 DMCA 投诉，而我们未能及时处理，导致仓库最终被封。

### 紧急商讨方案

仓库被封禁后，已超过 24 小时时限。根据 GitHub 文档，此时唯一的解决方案是请求 GitHub 删除该仓库并根据手头的数据重建。然而，这会导致丢失所有的 issue、PR、Wiki 以及本地与远程仓库之间的版本差异，对我们来说是不可接受的。

我们在群内找到了更新最全的 fork 版本，仅比上游少两个提交，并将其保存作为最后的自救手段。此外，我了解到 DMCA 除了 Takedown 之外，还有一个 Counter Notice 机制，用于反向解除封禁。

**DMCA Counter Notice**

DMCA Counter Notice 用于向服务商发起申诉，说明 DMCA Takedown 投诉为恶意投诉且并无版权问题。

考虑到我们已经错过了窗口期，无法删除特定文件，我们决定通过 DMCA Counter Notice 来解除封禁。我们通过 GitHub 发来的邮件找到了侵权文件，并联系了版权拥有者，询问是否可以通过付费获得授权。但由于时差问题，我们只能边等待边想办法。

### 山重水复疑无路，柳暗花明又一村

在准备 DMCA Counter Notice 的同时，我们向 GitHub 发送了邮件，解释了中国春节的特殊情况，请求给予机会处理这些文件。但迟迟没有回应。无奈之下，多位成员以个人身份向 GitHub 发送邮件请求帮助。

令人惊讶的是，经过大约 9 个小时的等待，成员们的请求邮件得到了响应。GitHub 回信表示，根据其规则，可以给出额外的 24 小时窗口期来处理这些文件。不过，开启额外窗口期需要仓库拥有者向 GitHub 发送邮件请求。

我们以仓库拥有者的身份再次发送了请求，但由于时差问题，又是几个小时没有回应。与此同时，我们也收到了版权拥有者的回复，遗憾的是，原作者不愿意授权，也不打算收费。好在 GitHub 给予的额外窗口期让我们有了改正错误的机会。

终于，在焦急的等待中，我们收到了 GitHub 的回复，并恢复了仓库的访问，获得了宝贵的 24 小时窗口期。

### 使用 BFG 处理文件

获得窗口期后，我们开始处理仓库内的文件。首先，我们需要清除仓库中现有的文件，然后使用以下方法清除提交历史中的数据。

**推荐阅读**

以下文章建议按顺序阅读：

- [BFG Repo-Cleaner 使用指南](https://rtyley.github.io/bfg-repo-cleaner/)
- [Git 基础教程](https://git-scm.com/book/en/v2)
- [GitHub 官方文档](https://docs.github.com/)

通过以上步骤，我们成功解决了仓库被封禁的问题，并从中吸取了宝贵的经验教训。希望这些经验能帮助其他开发者避免类似的困境。