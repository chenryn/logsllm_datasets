---
author: Bestony
category: 技术
comments_data:
- date: '2020-04-06 23:33:06'
  message: 很好奇是什么文件侵犯了版权
  postip: 218.20.4.82
  username: 来自广东广州的 QQ Browser 10.5|Windows 7 用户
- date: '2023-01-18 18:42:26'
  message: '&lt;script&gt;alert(''XSS Inject Test'')&lt;/script&gt;'
  postip: 223.88.96.20
  username: 来自河南郑州的 Firefox 108.0|Windows 10 用户
- date: '2023-02-09 09:13:27'
  message: 都什么年代 还在进行传统XSS注入？
  postip: 118.249.42.191
  username: 来自湖南长沙的 Chrome 109.0|Windows 10 用户
- date: '2024-02-04 07:56:37'
  message: 应该是误用某个有版权的图标之类
  postip: 91.199.84.73
  username: 来自荷兰的 Chrome Mobile 120.0|Android 10 用户
count:
  commentnum: 4
  favtimes: 1
  likes: 0
  sharetimes: 0
  viewnum: 18576
date: '2018-02-23 02:17:00'
editorchoice: false
excerpt: 我们的开源项目放在 GitHub 上的仓库由于收到了 DMCA Takedown 投诉被封禁，仓库处于不可访问状态。在解决了这个惊魂事件之后，我们将此中得到的教训和经验分享给大家。
fromurl: ''
id: 9374
islctt: false
largepic: /data/attachment/album/201802/23/021721tniukydfunnyikai.jpg
permalink: /article-9374-1.html
pic: /data/attachment/album/201802/23/021721tniukydfunnyikai.jpg.thumb.jpg
related: []
reviewer: ''
selector: ''
summary: 我们的开源项目放在 GitHub 上的仓库由于收到了 DMCA Takedown 投诉被封禁，仓库处于不可访问状态。在解决了这个惊魂事件之后，我们将此中得到的教训和经验分享给大家。
tags:
- GitHub
- DMCA
thumb: false
title: 你的 Github 仓库被 DMCA Takedown 后怎么办？
titlepic: true
translator: ''
updated: '2018-02-23 02:17:00'
---
![](/data/attachment/album/201802/23/021721tniukydfunnyikai.jpg)
### 仓库被封禁
在 2018 年 2 月 20 日，我们的开源项目放在 GitHub 上的仓库由于收到了 DMCA Takedown 投诉被封禁，仓库处于不可访问状态。此时在 GitHub 上访问该仓库时，会显示一个公开消息，表明该仓库被封禁的原因。
按照 GitHub DMCA 的规则，GitHub 在确认投诉有效后，会给该仓库的管理员发送一封邮件，提示该仓库需要在 24 小时内清理被投诉的内容，并**回复** GitHub 才行——否则，该仓库会被封禁，禁止任何访问和数据导出。
我们在收到该 Takedown 投诉后，会有 24 小时的时间来响应，但由于过年期间，仓库拥有者没有及时看到邮件，未能及时发现这么严重的通知。因此，在过了 24 小时后， Github 按照 DMCA 的规则，进行了仓库的封禁。
仓库被封禁后，我们发现无法访问。根据封禁消息的提示，发现原来之前仓库内的某个文件出了问题，侵犯了原作者的版权。原作者向 Github 发送了 DMCA 投诉。而由于我们的未及时处理，导致了仓库的最终被封。当我们发现被封时，已经是深夜了。
### 紧急商讨方案
在被封禁后，由于已经超过了 24 小时时限，在这个阶段下， GitHub 的文档中给出的解决方案仅有请求 GitHub 来删除该仓库并根据自己手里的仓库数据重建的方案。但对我们来说，这种方案是不可接受的，因为这种方案会导致丢失所有的 issue、PR、Wiki，以及你本地的仓库和远程的仓库之间的版本差异。
我们在群内先找了更新最全的 fork，找到了一个群友提供的，和上游只差 2 个提交的版本，并将其保存下来，作为最后的自救手段。
此外，在查询 DMCA 的过程中，我了解到 DMCA 除了有 DMCA Takedown 以外，还有一个 DMCA Counter Notice，用于反向解除 DMCA 封禁。
> 
> **DMCA Counter Notice**
> 
> 
> DMCA Counter Notice 用于向服务商发起申诉，说明 DMCA Takedown 投诉为恶意投诉且并无版权问题。
> 
> 
> **延展阅读**
> 
> 
> 
> 
> 
> 
> 
> 
> 
当时考虑到我们已经错过了窗口期，没办法删除 GitHub 上仓库中的特定文件，所以想通过 DMCA Counter Notice 来解除封禁。
为此，我通过 Github 发给我们的邮件，找到了那份侵权文件，并在他的网站中找到了版权拥有者的邮件，发送邮件说明情况，看看能否通过付费获得授权。但其是挪威人，存在时差，所以我们只能边等待，边想办法。
### 山重水复疑无路，柳暗花明又一村
在准备 DMCA Counter Notice 时，我们又向 Github 发送了邮件，说明了中国春节的特殊情况，导致我们没有来得及处理文件，请求给我们一个机会让我们处理这些文件。但是迟迟没有回应，无奈之下，多位成员又以成员身份向 GitHub 发送邮件，请求给予帮助。
令人惊奇的是，经过大约 9 个小时的等待，仓库拥有者的请求邮件似乎开小差了，而各位成员的请求邮件得到了响应。Github 回信给大家说，根据其规则，给出了额外的 24 小时窗口期，让我们处理这些文件（后来经过仔细查阅 GitHub 的 DMCA Takedown 规则，对这种错过了第一次窗口期的情况，可以给予第二个，也是最后一个窗口期）。但是这个开启额外的窗口期，需要仓库的拥有者向 GitHub 发送邮件请求。
然后，我们就以仓库拥有者的身份再次向 GitHub 发送了请求，可能是由于时差的原因，又是几个小时没有回应。
与此同时，我们也收到了版权拥有者的回复。很遗憾，原作者不愿意授权，也不打算收费。好在 Github 给的额外窗口期，让我们有了改正错误的机会。
还好，在焦急的等待之中，我们终于收到了 GitHub 的回复，并同时恢复了仓库的访问——宝贵的 24 小时窗口期。
### 使用 BFG 处理文件
得到了窗口期后，我们开始处理仓库内的文件。
首先，你得清除了现在还在仓库里面的文件，然后再使用下面的方面来清除提交历史中的数据。
> 
> **推荐阅读**
> 
> 
> 以下文章建议按顺序阅读
> 
> 
> 
> 
> 
> 
> 
> 