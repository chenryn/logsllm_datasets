---
author: Hunter Wittenborn
category: 技术
comments_data: []
count:
  commentnum: 0
  favtimes: 1
  likes: 0
  sharetimes: 0
  viewnum: 10433
date: '2021-12-15 13:36:45'
editorchoice: false
excerpt: GnuPG，俗称 GPG，是一个非常通用的工具，被广泛用作电子邮件、信息、文件或任何你需要安全地发送给别人的东西的加密行业标准。
fromurl: https://itsfoss.com/gpg-encrypt-files-basic/
id: 14082
islctt: true
largepic: /data/attachment/album/202112/15/133531wcs1iy4luihr3beg.jpg
permalink: /article-14082-1.html
pic: /data/attachment/album/202112/15/133531wcs1iy4luihr3beg.jpg.thumb.jpg
related: []
reviewer: wxy
selector: lujun9972
summary: GnuPG，俗称 GPG，是一个非常通用的工具，被广泛用作电子邮件、信息、文件或任何你需要安全地发送给别人的东西的加密行业标准。
tags:
- GPG
- 加密
thumb: false
title: 手把手指导：在 Linux 上使用 GPG 加解密文件
titlepic: true
translator: wxy
updated: '2021-12-15 13:36:45'
---
![](/data/attachment/album/202112/15/133531wcs1iy4luihr3beg.jpg)
[GnuPG](https://gnupg.org/)，俗称 GPG，是一个非常通用的工具，被广泛用作电子邮件、信息、文件或任何你需要安全地发送给别人的东西的加密行业标准。
学习使用 GPG 很容易，你可以在几分钟内就学会使用它。
在本教程中，我将告诉你如何用 GPG 加密和解密文件。这是一个简单的教程，你可以在你的 Linux 系统上尝试所有的练习。这将帮助你练习 GPG 命令，并在你完全陌生的情况下理解它。
请先阅读整个教程，然后开始自己做。
### GPG 是如何进行加密的？
![GPG 加密](/data/attachment/album/202112/15/133645b1i73az322l66l57.png)
要使用 GPG，你首先需要有一个 GPG 密钥。
GPG 密钥是你在后面的教程中用来加密（或解密）文件的东西。它也是用来识别你的身份的，你的名字和电子邮件也会与密钥绑定。
GPG 密钥的工作原理是使用两个文件，一个私钥和一个公钥。这两个密钥是相互联系的，并且 GPG 的所有功能都需要使用它们，特别是对文件加密和解密。
当你用 GPG 加密一个文件时，它使用的是私钥。然后，这个新的加密文件**只能**用配对的公钥进行解密。
私钥，顾名思义，是以私下的、不给任何人看的方式来存储的密钥。
另一方面，公钥是用来给其他人的，或者你希望能够解密你的文件的任何人。
这就是 GPG 的加密方法的主要作用。它允许你对文件进行本地加密，然后允许其他人确保他们收到的文件实际上是由你发送的。因为他们能够解密文件的唯一方法是使用你的公钥，而这只有在文件首先使用你的私钥加密的情况下才有效。
**反之**，其他人可以用你的公钥对文件进行加密，而唯一能够解密的方法是用你的私钥。因此，允许其他人公开发布文件，而不用担心除了你以外的人能够阅读它们。（LCTT 译注：另外一个常见的用例是你用你的私钥对公开发布的文件进行签名，别人使用你的公钥通过验证你的签名而确信文件是你发布的、并没有被篡改。但本文没有涉及这个用例。）
换句话说，如果一个文件是用私钥加密的，它只能用相应的公钥解密。而如果一个文件是用公钥加密的，它只能用相应的私钥解密。
#### 你已经在使用 GPG 而没有意识到
一个最常见的使用 GPG 的例子是在 Linux 软件包管理器中，特别是 [外部仓库](https://itsfoss.com/adding-external-repositories-ubuntu/)。你把开发者的公钥添加到你系统的可信密钥中。开发者用他/她的私钥签署软件包（生成签名）。由于你的 Linux 系统拥有该公钥文件，它就能理解该软件包实际上是来自受信任的开发者。
许多加密服务在你没有意识到的情况下使用了某种 GPG 的实现。但现在最好不要去研究这些细节。
现在你对这个概念有点熟悉了，让我们看看如何使用 GPG 来加密一个文件，然后用它来解密。
### 用 GPG 对文件进行加密和解密
![](/data/attachment/album/202112/15/133646o30ren9lnfnn6jyn.png)
这是一个非常简单的场景。我假定你只有一个系统，你想看看 GPG 是如何工作的。你并没有把文件发送到其他系统。你对文件进行加密，然后在同一个系统上解密。
当然，这不是一个实际的用例，但这也不是本教程的目的。我的目的是让你熟悉 GPG 命令和功能。之后，你可以在现实世界中使用这些知识（如果需要的话）。为此，我将告诉你如何与他人分享你的公钥。
#### 第一步：安装 GPG
GPG 可以在大多数发行版的软件库中找到，开箱即用。
在基于 Debian 和 Ubuntu 的系统中，安装 `gpg` 包：
```
sudo apt install gpg
```
如果你使用 [基于 Arch 的发行版](https://itsfoss.com/arch-based-linux-distros/)，用 [pacman 命令](https://itsfoss.com/pacman-command/) 安装 `gnupg` 软件包：
```
sudo pacman -S gnupg
```
#### 第二步：生成一个 GPG 密钥
在你的系统上生成一个 GPG 密钥只需要一条简单的命令。
只要运行下面的命令，就会生成你的密钥（你可以对大多数问题使用默认值，如下面的下划线部分所示）。
```
gpg --full-generate-key
```
![生成 GPG 密钥](/data/attachment/album/202112/15/133646o4vmvoddrpo4mm4b.png)
**检查 GPG 密钥**
然后你可以通过使用 `--list-secret-keys` 和 `--list-public-keys` 参数，分别看到私钥和公钥都是通过 `pub` 下显示的那个 ID 相互绑定的。
![列出 GPG 密钥](/data/attachment/album/202112/15/133646hkm9czc4wl3l19zk.png)
#### 第三步：用 GPG 加密一个文件
现在你已经设置了 GPG 密钥，你可以开始对我们的文件进行加密了。
使用下面的命令来加密文件：
```
gpg --encrypt --output file.gpg --recipient PI:EMAIL file
```
让我们快速浏览一下该命令的内容：
首先，你指定了 `—encrypt` 选项。这告诉 GPG，我们将对一个文件进行加密。