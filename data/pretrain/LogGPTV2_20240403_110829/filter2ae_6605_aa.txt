本篇文章记录一下关于AD凭据获取和信息收集的方法，学习一下tryhackme的靶场的相关知识。有5种方法获取AD凭据，分别是NTLM 认证服务、LDAP
绑定凭证、认证中继、Microsoft Deployment Toolkit、配置文件。  
**第一种，NTLM认证。**  
NTLM认证服务是AD 中验证用户身份重要方式，NetNTLM网络上使用NTLM协议进行认证，NetNTLM，通常也称为 Windows 身份验证或简称为
NTLM 身份验证，目前很多服务都使用此认证，比如Outlook Web
App，开放RDP服务的远程登录，与VPN集成的端点、一些使用NetNTLM的web服务。它允许应用程序在客户端和 AD
之间扮演中间人的角色。所有身份验证材料都以质询的形式转发给域控制器，如果成功完成，应用程序将对用户进行身份验证。这意味着应用程序代表用户进行身份验证，而不是直接在应用程序本身上对用户进行身份验证。这会阻止应用程序存储
AD 凭据，AD 凭据应该只存储在域控制器上。这个过程如下图所示：  
1.用户请求接入  
2.服务发送challenge给用户  
3.服务发送response返回  
4.服务向DC发送用户给的challenge  
5.DC对比challenge和response看看能不能通过严重，把结果告诉服务  
6.服务返回结果给用户  
下面是tryhackme设计的一个理想环境，要我们对 
的NTLM进行暴力破解获取第一个合法凭据:  
目前有很多工具支持暴力破解，速度也非常可靠。然而大多数 AD
环境都配置了帐户锁定，我们需要执行密码喷洒，这里环境提供了员工的初始密码为Changeme123，利用已经正准备好的字典和脚本来破解。需要注意，认证失败是可以被监测到的，实战尽可能挑选一个合适的时间和频率。如下所示，我们成功获取了合法用户：  
你可能会问，现实生活NTLM认证的情况有多常见？我们用空间搜索引擎看看结果：  
这里我用的是quack的，结果显示在中国，大约1w多个独立的ip，看起来并不常见？实际上一个公司用NTLM认证基本上，看网站图标除了微软自带的，还有很多web应用程序也用了NetNTLM认证，甚至出现了OA的系统（我不清楚quack是怎么获取到401后的图标的，我个人猜测是认证后的web应用程序），师傅们有兴趣可以仔细探索一下。实战中其实我个人而言碰到过不少次这种401未授权带NTLM认证的网站，也许拿到了好的字典后也能成为攻防演练后打点的关键。  
**第二种，LDAP认证**  
应用程序可以使用的另一种 AD 身份验证方法是轻量级目录访问协议 (LDAP) 身份验证。 LDAP 身份验证类似于 NTLM 身份验证。但是，使用
LDAP 身份验证时，应用程序会直接验证用户的凭据。该应用程序自己本身有一对 AD 凭据，它可以首先使用它们来查询 LDAP，然后验证 AD
用户的凭据。LDAP 身份验证是与 AD 集成的第三方（非
Microsoft）应用程序的流行机制，比方说Gitlab、Jenkins、打印机、VPN等等。下面是打印机的认证流程，流程图如下：  
1.用户发送打印请求，请求种携带者用户名和密码  
2.打印机用它自己的AD凭据创建LDAP绑定请求  
3.DC提供绑定好了的回应  
4.打印机用LDAP搜索，查看用户提供是不是存在的用户  
5.DC返回用户搜索的相关信息  
6.打印机发送携带用户密码发送绑定请求  
7.DC判断成功，发送绑定回应  
8.打印机返回信息告诉用户，打印任务已经接受  
如果我们打下了处于和DC认证的服务，比方说打印机和gitlab都存在很多历史能RCE的漏洞，获取明文密码将会非常容易。这里值得提一句，gitlab的ldap的凭据是明文保存在配置文件的，默认路径在/etc/gitlab/gitlab.rb，如果是源安装的则是在/home/git/gitlab/config/gitlab.yml，配置文件如下：  
我们要关注的字段是password和username，我们一般可以通过gitlab登录界面看得出来有没有开启，如果开启web界面会多一个ldap的登录框，当然也有可能开发者禁用了此登录页面，但是ldap认证还是能用的，如果师傅感兴趣可以进一步阅读官方文档学习配置文件的内容，里面可能还有其他非常有用的信息。官方文档链接：
回到靶场，靶场利用的是LDAP密码回传攻击，设想这样一个场景，我们已经拿到了一台服务器的权限，在内网扫描的时候发现一台网络打印机的 Web
界面，如果如果提供弱口令或者其他方法进入打印机的管理页面，我们就可以修改打印机的配置，将此打印机的认证IP修改为我们的控制的IP，认证以明文的方式发送，我们就能直接获取域内的凭据了。以下为实际利用的情况：访问打印机服务：
看上去我们知道了用户名，本次的密码被脱敏了，不过也许其他环境下查看一下HTML的源代码可能有惊喜。  
修改DC的ip，让ip指向我们自己的机器，开启nc监听，看看是否有请求：  
很顺利，我们收到了打印机的请求，不过事情没这么简单，打印机会和DC进行LDAP的协商，所以我们没办法直接用nc就拿到账户密码，我们需要托管一个恶意的ldap服务器，并对其进行不安全的配置，以确保凭据以明文形式发送。
    apt-get update && sudo apt-get -y install slapd ldap-utils && sudo systemctl enable slapd
执行完成后将会有如下选项，要我们设计ldap的管理员密码：  
完成安装，结果如下：  
使用dpkg-reconfigure -p low slapd重新配置ldap服务器：  
1.选中否  
2.域名填我们要攻击的域名，我这里就算是靶场的za.tryhackme.com  
3.对组织填刚刚的域名，也是za.tryhackme.com  
4.选中否，不会删除数据库  
  1. 在创建新数据库文件之前移动旧数据库文件，选中是  
6.设置完成  
7.我们需要新建一个文件，olcSaslSecProps.ldif写入以下内容。需要进一步解释一下，olcSaslSecProps字段指定SASL
安全属性，noanonymous的情况表示禁用匿名登录，minssf是指最小安全保护，如果等于0的，就是不保护。  
  2. 我们启动服务ldapmodify -Y EXTERNAL -H ldapi:// -f ./olcSaslSecProps.ldif && sudo service slapd restart  
9.确保我们的ldap只支持明文，也就是如下supportedSASLMechanisms: PLAIN  
supportedSASLMechanisms: LOGIN，输入如下命令ldapsearch -H ldap:// -x -LLL -s base -b
"" supportedSASLMechanisms  
10.开启tcpdump抓取389的流量，另外关注域名字段附近的数据包，就能看到密码了。  
**第三种，NTLM Relay攻击**  
在使用 Microsoft AD 的网络中，SMB
管理着从网络间文件共享到远程管理的一切事务，有两种不同的利用SMB进行NetNTLM身份验证利用的方法，第一种：由于NTLM
Challenges可以被拦截，我们可以使用离线破解技术来恢复与NTLM Challenge相关的密码。然而，这个破解过程比直接破解 NTLM
哈希要慢得多。第二种：我们可以使用我们的控制的设备进行中间人攻击，在客户端和服务器之间中继 SMB
身份验证，这将为我们提供一个活动的身份验证会话和对目标服务器的访问。  
Responder 允许我们通过在 NetNTLM
身份验证期间使响应中毒来执行中间人攻击，诱使客户端与我们服务器交谈，而不是他们想要连接的实际服务器。在真实的LAN上，Responder
将尝试毒化任何检测到的本地链路多播名称解析 (LLMNR)、NetBIOS 名称服务器 (NBT-NS) 和 Web 代理自动发现 (WPAD)
请求。在大型 Windows 网络上，这些协议允许主机为同一本地网络上的所有主机执行自己的本地 DNS 解析。主机可以首先尝试通过发送 LLMNR
请求并查看是否有任何主机响应来确定他们正在寻找的主机是否在同一本地网络上，而不是使 DNS
服务器等网络资源负担过重。我的Kali机器已经连接到vpn上了,直接执行responder -I breached就可以开始投毒了：  
稍等15分钟，成功拿到NTLM  
拿到NTLMv2-SSP Hash的值去hashcat破解，如下图：  
成破解出密码，如下图所示：  
**第四种方法，利用Microsoft Deployment Toolkit**  
大型企业的管理员不可能拿着USB一个一个为每台电脑装软件，微软提供了Microsoft Deployment
Toolkit(MDT)服务来管理企业资产。大型组织使用Preboot Execution Environment，即PXE
（预引导执行环境）引导来允许连接到网络的新设备直接通过网络连接加载和安装操作系统，MDT 可用于创建、管理和托管 PXE 启动映像，下图是通信流程：  
（1）用户发送DHCP发现（请求ip地址和pxe服务信息）  