# DNSPD: Entrap Botnets Through DNS Cache Poisoning Detection

## Introduction
- **Presenter:** p1t1r
- **Event:** HITCON 2010
- **Background:** 
  - Rootkit
  - Web Security
  - Network Security
  - DNS Spoofing

## DNS Attacks
### DNS Cache Poisoning
- **Threat Level:** Highly dangerous and remains unsolved.
- **Risk:** Any website you visit could be an attacker's site.
- **Defenses:** Multiple mechanisms exist, but the default DNS environment is typically unprotected.

## DNSPD Overview
- **Purpose:** Defends against DNS cache poisoning and identifies botnets.
- **Botnet Trend:** Currently a significant threat.
- **Questions:**
  - Is this defense mechanism reliable?
    - Reliability depends on the attacker's skill.
  - Why use DNSPD when other methods can also detect botnets?
    - DNSPD may offer faster and more accurate detection.
  - There are still many potential issues to address.

## DNS Basics
### Functionality
- **Role:** Maps domain names to IP addresses (e.g., `www.google.com` to `74.125.153.103`).
- **Characteristics:**
  - Typically uses UDP for fast communication.
  - The first response received is considered correct (though this can be exploited).

### Structure
- **Domain Name Space:** Hierarchical naming system.
- **Name Server:** Stores and manages specific domain names.
- **Resolver (Cache Server):** Temporarily stores previously queried domain name and IP information for quick responses. Data is kept until the Time To Live (TTL) expires. This is a primary target for attackers.

## DNS Operation
- **Resolver Threats:**
  - **UDP Packet Forgery:** Attackers can spoof source IPs.
  - **Data Verification:** Resolvers must validate data by ensuring:
    - The answer matches the question.
    - The source IP and port number match.
    - The transaction ID is correct.

## DNS Cache Poisoning Attack
### Target
1. **DNS Resolver (e.g., Google Public DNS - 8.8.8.8)**
2. **Specific Domain (e.g., changing `blog.hitcon.org` to an attacker's IP)**

### Timing
- **Initiation:** When the target domain's data is not in the resolver's cache and the resolver has sent a query to an external name server but hasn't received a response yet.

### Traditional Attack
- **Example:**
  - Attacker claims `www.google.com` is `115.115.115.115`.
  - Actual IPs: `64.233.183.99`, `64.233.183.103`, etc.

### Drawbacks
- **Waiting Time:** Must wait for the TTL to expire, which can be long, making the attack inefficient.

## Dan Kaminsky's Attack
- **Black Hat USA 2008:**
  - No need to wait for TTL expiration.
  - Can be launched at any time.
  - Applicable to all versions of BIND9, though with varying difficulty.
  - Post-BIND9.4.2, random ports were introduced, increasing complexity.

### Kaminsky Effect
- **Increased Adoption of DNSSEC:**
  - From: "Deploying and Monitoring DNS Security (DNSSEC)"

### Kaminsky's Poisoning Attack
- **Process:**
  - Attacker sends multiple queries for non-existent subdomains (e.g., `123.google.com`, `1234.google.com`, etc.).
  - Aims to increase the likelihood of successful poisoning.

### Mathematical Model
- **Success Probability:**
  - Based on RFC 5452, the probability of at least one successful poisoning attempt over multiple rounds.
  - Parameters include: W (window size), T (time interval), A (attacker rate), S (success rate), I (initial success), P (probability), N (number of attempts), R (retries).

### Simulation
- **Graph:**
  - Shows the spoofing probability over time for different rates and numbers of attempts.

## Mitigation Strategies
- **DNSSEC:**
  - Uses asymmetric encryption and digital signatures.
- **Google Method:**
  - If no valid answer, do not return any result.

## DNSPD Components
- **DNS Resolver**
- **Router**
- **Analysis Crawler**

## DNSPD Effects
- **Forcing Attackers:**
  - To evade DNSPD, attackers must keep their frequency below a threshold.
  - Single IP attacks are very difficult.
  - Using botnets with multiple IPs can increase success rates, even below the threshold.

## Conclusion
- **DNSPD:**
  - Effectively detects and mitigates DNS cache poisoning attacks.
  - Forces attackers to use botnets.
  - Indirectly protects other resolvers.

## Q&A
- **Thank You!**