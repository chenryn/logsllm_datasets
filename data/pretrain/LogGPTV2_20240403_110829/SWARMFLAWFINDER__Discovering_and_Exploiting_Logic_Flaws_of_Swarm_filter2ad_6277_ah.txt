2
1
1
1
1
18
261
79
182
0
406
77
309
0
20
683
243
440
175
175
1,525
Fix for C1-1
# Exec. Uniq.
5
0
4
1
5
0
3
1
1
2
1
1
1
1
13
152
0
146
6
324
0
315
5
4
636
224
412
181
181
1,293
Unpatched (Org.)
# Exec.
Uniq.
9
273
4
86
4
176
1
11
8
435
88
3
3
326
1
3
1
18
2
671
1
242
429
1
1
175
1
175
1,554
20
Crash btw. victim drones
C1-1
C1-2
C1-3
Crash into ext. objects
C1-1
C1-2
C1-3
C1-4
Suspended progress
C1-5
C1-6
Slow progress
C1-6
Fix for C1-4
# Exec. Uniq.
9
4
4
1
7
3
3
1
0
2
1
1
1
1
19
Green: Fixes resolve targeted ﬂaws, Yellow: Fixes resolve additional non-targeted ﬂaws, Red: Fixes fail to resolve targted ﬂaws.
from the integrated ﬁx. It resolves the ﬂaws from C1-1 to
C1-4. However, it fails to handle C1-5 and C1-6. Our manual
analysis points out
the ﬁxes for C1-5 and C1-6 are
conﬂicting. Speciﬁcally, the ﬁx for C1-5 makes drones move
together, waiting for slower drones if needed. However, the
ﬁx for C1-6 makes drones sensitive in avoiding obstacles. To
this end, when there is an obstacle, the drones try to avoid it
more actively, often making the swarm easily stuck or stalled.
Tuning the Integrated Fix for A1. To make the integrated
ﬁx work, we tuned the ﬁx. Speciﬁcally, when we combine
the individual ﬁxes, we tune the ﬁx for C1-2 and C1-6.
The original ﬁxes for C1-2 and C1-6 add 0.15 and 200
to influence radius and repulsive coef, respectively.
We reduce the increment in half: 0.075 and 100, resulting
in the ﬁnal value of 0.225 (originally 0.15) and 300 (orig-
inally 200) for influence radius and repulsive coef,
respectively. With the tuned ﬁx, SWARMFLAWFINDER was
not able to ﬁnd logic ﬂaws for 24 hours.
Fixes for Others. For A1∼A4, all individual ﬁxes successfully
resolve targeted logic ﬂaws. The integrated ﬁxes for A2 and
A3 resolved all the logic ﬂaws. For A4, we observe conﬂicting
ﬁxes when we integrate the ﬁxes. Details can be found in [8].
Crash between Victim Drones
C1-1
C1-2
C1-3
Crash into external objects
C1-1
C1-2
C1-3
C1-4
Suspended progress
C1-5
C1-6
Slow progress
C1-6
ID Root Cause
A1
E. Inﬂuence of Moving Obstacles to our Evaluation
In our evaluation (§ V), A1’s mission contains a moving
obstacle. To understand its impact on our experiment results,
we run the experiments again without the moving obstacle.
Table VI shows the result. While there are small differences
in the number of executions, the number of unique mission
failures is mostly identical except for 4 ﬂaws in C1-1 and C1-
2 (marked as yellow and red cells). Those four missing unique
mission failures are either directly caused by the obstacle (i.e.,
crashed into the obstacle; red cells) or indirectly caused (e.g.,
pushed by the dynamic obstacle leading to a crash to other
drones; yellow cells).
F. Root Causes and Potential Fixes
C1-3. Unsupported static movement: A1 and A4 do not
allow a drone’s static movement, meaning that a drone has
to move on every tick, even if it is desirable to maintain the
INFLUENCE OF MOVING (OR DYNAMIC) OBSTACLES
TABLE VI
Fix for C1-5
# Exec. Uniq.
9
4
4
1
8
3
3
1
1
1
0
1
1
1
19
279
81
181
17
432
79
331
7
15
553
0
553
240
240
1,504
Fix for C1-6
# Exec. Uniq.
8
4
4
0
6
3
3
0
0
1
1
0
0
0
15
36
14
22
0
90
44
46
0
0
453
453
0
0
0
579
Integrated Fix
# Exec. Uniq.
0
0
0
0
0
0
0
0
0
2
1
1
1
1
3
0
0
0
0
0
0
0
0
0
101
79
22
3
3
104
With Dyn. Obj.
# of Exec. Uniq.
9
4
4
1
8
3
3
1
1
2
1
1
1
1
273
86
176
11
435
88
326
3
18
671
242
429
175
175
Without Dyn. Obj.
Uniq.
# of Exec.
223
7
3
78
3
132
1
13
6
378
2
53
297
2
1
5
1
23
2
622
1
231
1
391
181
1
1
181
same pose. The design of the algorithms does not consider the
static movement, causing crashes in a crowded area.
Fix (Conﬁrmed): We change the constraints that make
drones always moving (8 SLOC).
C1-6, C3-2, and C4-3. Insensitive object detection: A victim
drone’s sensitivity in detecting objects is too low, making the
entire swarm less reactive and sluggish in reacting to external
objects and attack drones. We observe that a single attack
drone can slow down the entire swarm due to this.
Fix (Conﬁrmed for [4], [6]): We change repulsive coef,
sensing radius, and IR dist conﬁguration variables
with the values of 400, 10, and 4 respectively. The devel-
opers of [4], [6] agreed with our analysis and the ﬁx.
G. Supporting a new Algorithm
Our design is general and applicable to other swarm algorithms
while it requires engineering effort. To support a new swarm
algorithm, we need to instrument the algorithm to integrate
SWARMFLAWFINDER (e.g., changing 218, 271, 198, and
166 SLOC for A1, A2, A3, and A4, respectively). In our
evaluation, it took 8∼15 hours (by a graduate student with
moderate experience in drones) to complete this task for an
algorithm. Details including the additional code are on [8].
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 12:38:51 UTC from IEEE Xplore.  Restrictions apply. 
181825