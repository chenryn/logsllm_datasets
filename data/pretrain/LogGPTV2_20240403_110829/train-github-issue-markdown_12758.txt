sometimes, you can get a large array of flakes due to oome errors.
    +++ [0307 09:08:06] Building go targets for linux/amd64:
        cmd/hyperkube
    +++ [0307 09:08:27] Placing binaries
    SUCCESS
    Verifying ./hack/../hack/verify-flags-underscore.py
    SUCCESS
    + ./hack/test-go.sh
    Running tests for APIVersion: v1,extensions/v1beta1,metrics/v1alpha1 with etcdPrefix: registry
    +++ [0307 09:08:51] Running tests without code coverage
    # testmain
    fatal error: runtime: out of memory
    runtime stack:
    runtime.throw(0x698ac0, 0x16)
        /usr/local/go/src/runtime/panic.go:527 +0x90
    runtime.sysMap(0xc82b8f0000, 0x1100000, 0x42f800, 0x7b0258)
        /usr/local/go/src/runtime/mem_linux.go:203 +0x9b
    runtime.mHeap_SysAlloc(0x791840, 0x1100000, 0x0)
        /usr/local/go/src/runtime/malloc.go:426 +0x160
    runtime.mHeap_Grow(0x791840, 0x880, 0x0)
        /usr/local/go/src/runtime/mheap.go:628 +0x63
    runtime.mHeap_AllocSpanLocked(0x791840, 0x880, 0x100)
        /usr/local/go/src/runtime/mheap.go:532 +0x5f1
    runtime.mHeap_Alloc_m(0x791840, 0x880, 0x100000000, 0xc800000001)
        /usr/local/go/src/runtime/mheap.go:425 +0x1ac
    runtime.mHeap_Alloc.func1()
        /usr/local/go/src/runtime/mheap.go:484 +0x41
    runtime.systemstack(0xc820095ee0)
        /usr/local/go/src/runtime/asm_amd64.s:278 +0xab
    runtime.mHeap_Alloc(0x791840, 0x880, 0x10100000000, 0x41348f)
        /usr/local/go/src/runtime/mheap.go:485 +0x63
    runtime.largeAlloc(0x1100000, 0x0, 0x0)
        /usr/local/go/src/runtime/malloc.go:748 +0xb3
    runtime.mallocgc.func3()
        /usr/local/go/src/runtime/malloc.go:637 +0x33
    runtime.systemstack(0xc8204e2c40)
        /usr/local/go/src/runtime/asm_amd64.s:262 +0x79
    runtime.mstart()
        /usr/local/go/src/runtime/proc1.go:668
and
    ok      k8s.io/kubernetes/pkg/kubelet/qos   1.# testmain
    fatal error: runtime: out of memory
    runtime stack:
    runtime.throw(0x698ac0, 0x16)
        /usr/local/go/src/runtime/panic.go:527 +0x90
    runtime.sysMap(0xc83c4f0000, 0x100000, 0x68b00, 0x7b0258)
        /usr/local/go/src/runtime/mem_linux.go:203 +0x9b
    runtime.mHeap_SysAlloc(0x791840, 0x100000, 0x0)
        /usr/local/go/src/runtime/malloc.go:426 +0x160
    runtime.mHeap_Grow(0x791840, 0x50, 0x0)
        /usr/local/go/src/runtime/mheap.go:628 +0x63
    runtime.mHeap_AllocSpanLocked(0x791840, 0x4b, 0x7fc647a6ad90)
        /usr/local/go/src/runtime/mheap.go:532 +0x5f1
    runtime.mHeap_Alloc_m(0x791840, 0x4b, 0x100000000, 0x7fc647a6ad90)
        /usr/local/go/src/runtime/mheap.go:425 +0x1ac
    runtime.mHeap_Alloc.func1()
        /usr/local/go/src/runtime/mheap.go:484 +0x41
    runtime.systemstack(0xc8204fdee0)
        /usr/local/go/src/runtime/asm_amd64.s:278 +0xab
    runtime.mHeap_Alloc(0x791840, 0x4b, 0x100000000, 0x7fc647a6adf0)
        /usr/local/go/src/runtime/mheap.go:485 +0x63
    runtime.largeAlloc(0x96000, 0x3, 0xc83c462000)
        /usr/local/go/src/runtime/malloc.go:748 +0xb3
    runtime.mallocgc.func3()
        /usr/local/go/src/runtime/malloc.go:637 +0x33
    runtime.systemstack(0xc820028000)
        /usr/local/go/src/runtime/asm_amd64.s:262 +0x79
    runtime.mstart()
        /usr/local/go/src/runtime/proc1.go:668
    goroutine 1 [running]:
and so on