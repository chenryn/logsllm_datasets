# 工具
`这里记录一些平时收集的一些工具或有趣的东西`
---
## 有趣的工具
**2048-cli**
> 终端中的 2048
```bash
dnf install 2048-cli
```
**MapSCII**
> 在终端显示世界地图
- https://www.ostechnix.com/mapscii-world-map-terminal/
```bash
telnet mapscii.me
```
**neofetch**
> 命令行系统信息工具
- https://github.com/dylanaraps/neofetch
```bash
apt-get update
apt-get install -y neofetch
neofetch
```
**star war**
> 一段 22 分钟长的 ASCII 动画
- http://www.asciimation.co.nz/
```bash
telnet towel.blinkenlights.nl
```
**nyancat**
> 终端中的 Nyancat
- https://github.com/klange/nyancat
```bash
git clone https://github.com/klange/nyancat.git
cd nyancat
make && cd src
./nyancat
```
**yes**
> yes命令在命令行中输出指定的字符串，直到yes进程被杀死。不带任何参数输入yes命令默认的字符串就是y。
```
yes hahaa
yes yes | xxx.sh
```
**lolcat**
> 彩色输出
- https://github.com/busyloop/lolcat
```
gem install lolcat
echo "test" | lolcat
```
---
## 各种shell
**fish**
> 一个挺好用的 shell 环境
- https://github.com/fish-shell/fish-shell
```bash
apt-add-repository ppa:fish-shell/release-3
apt-get update
apt-get install -y fish
```
- 更多文章
    - [如何在 Linux 中安装、配置和使用 Fish Shell？ ](https://linux.cn/article-10622-1.html)
**oh-my-zsh**
- https://github.com/robbyrussell/oh-my-zsh
```bash
sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
```
themes
- https://github.com/robbyrussell/oh-my-zsh/wiki/themes
    下载完放置在 ~/.oh-my-zsh/themes 目录目录下，并在配置文件 .zshrc 中进行指定.
    ```bash
    vim ~/.zshrc
    ZSH_THEME=""
    ```
**powerline-shell**
> 增强美化 shell 的工具
- https://github.com/b-ryan/powerline-shell
依赖 python 环境
`pip install powerline-shell`
- **fish**
    ```vim
    vim ~/.config/fish/config.fish
    function fish_prompt
        powerline-shell --shell bare $status
    end
    ```
**starship**
> 轻量级、反应迅速，可定制的高颜值终端！
```bash
curl -fsSL https://starship.rs/install.sh | bash
```
将初始化脚本添加到您的 shell 的配置文件
```bash
# Bash
echo "eval \"\$(starship init bash)\"" >> ~/.bashhrc
# Fish
echo "starship init fish | source" >> ~/.config/fish/config.fish
# Zsh
echo "eval \"\$(starship init zsh)\"" >> ~/.zshrc
```
**mosh**
> 使用 UDP 传输的 Shell
```bash
apt install mosh
mosh --ssh="ssh -p 2222" root@host
```
---
## 系统信息
**duf**
> 显示磁盘使用状态
- https://github.com/muesli/duf
```bash
wget https://github.com/muesli/duf/releases/download/v0.7.0/duf_0.7.0_linux_amd64.deb
dpkg -i duf_0.7.0_linux_amd64.deb
duf
```
**glances**
> top/htop 的替代品
- https://github.com/nicolargo/glances
```
curl -L https://bit.ly/glances | /bin/bash
glances
```
**inxi**
> 显示系统和硬件信息
```bash
apt-get install inxi
inxi -F
# -A          显示音频 声卡相关信息
# -b          输出基本信息
# -c [0-32]   不同的配色
# -C          显示完整的 CPU 信息
# -d          显示光驱和硬盘相关信息
# -D          显示硬盘相关信息
# -F          完整报告
# -G          显卡
# -i          WAN IP
# -I          processes, uptime, memory, shell type etc
# -m          RAM data
# -M          machine data 主板，BIOS etc
# -p          完整分区信息
# -S          系统信息，hostname，kernel，桌面环境，发行版等等
# -u          分区 UUID
```
**btop**
- https://github.com/aristocratos/btop
```
wget https://github.com/aristocratos/btop/releases/download/v1.2.0/btop-x86_64-linux-musl.tbz
tar -xjvf btop-x86_64-linux-musl.tbz
bash install.sh
btop
```
---
## 网络测试调试
**BestTrace**
> 路由跟踪程序
```bash
cd /home && mkdir tmp && cd tmp
wget https://cdn.ipip.net/17mon/besttrace4linux.zip
unzip besttrace4linux.zip
chmod +x besttrace
mv besttrace /usr/local/bin
cd /home && rm -rf /home/tmp
# 安装完成后，就可以用指令 besttrace IP/域名 来追踪路由了
```
**Fast**
Fast 是 Netflix 提供的服务。它的网址是 Fast.com，同时它有一个可通过 npm 安装的命令行工具：
```bash
npm install --global fast-cli
```bash
```bash
fast    # 该命令返回你的网络下载速度
fast -u # 获取上传速度
```
**httpie**
> 命令行下的 HTTP 客户端
- https://github.com/jakubroztocil/httpie
```bash
yum install -y httpie
或
apt-get install -y httpie
```
```bash
http httpie.org
```
**iPerf**
> iPerf 是测试网速的工具
```bash
# debian
apt install -y iperf
# centos
wget http://pkgs.repoforge.org/rpmforge-release/rpmforge-release-0.5.3-1.el7.rf.x86_64.rpm
rpm -Uvh rpmforge-release-1.5.3-1.el7.rf.x86_64.rpm
yum update
yum install -y iperf
```
安装完成后，你需要在同一网络上的两台计算机上使用它（两台都必须安装 iPerf）。指定其中一台作为服务器。
在服务端启动 iperf
```bash
iperf -s
```
它会等待来自客户端的传入连接。将另一台计算机作为为客户端并运行此命令
```
iperf -c 
```
只需几秒钟即可完成测试，然后返回传输大小和计算出的带宽。
**speedtest-cli**
> Speedtest.net 提供一个命令行版本——speedtest-cli，能够在终端中简单快速的测试出 linux 的网速
- https://github.com/sivel/speedtest-cli
```bash
wget https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py
chmod a+rx speedtest.py
mv speedtest.py /usr/local/bin/speedtest-cli
chown root:root /usr/local/bin/speedtest-cli
speedtest-cli
```
或
```bash
pip install speedtest-cli
speedtest-cli
```
**gping**
> 图形化的 ping 工具
```bash
echo "deb http://packages.azlux.fr/debian/ buster main" | sudo tee /etc/apt/sources.list.d/azlux.list
wget -qO - https://azlux.fr/repo.gpg.key | sudo apt-key add -
sudo apt update
sudo apt install gping
```
**nethogs**
> 查看每个进程流量
```bash
apt install nethogs
nethogs
```
**ab**
> ab 是 apache 的压力测试工具
安装
```bash
apt install -y apache2-utils
yum install -y httpd-tools
```
**wrk**
> 压测工具
- https://github.com/wg/wrk
```
git clone --depth 1 https://github.com/wg/wrk.git
cd wrk && make
cp wrk /usr/local/bin/
wrk
wrk -t12 -c1000 -d15s http://127.0.0.1
```
**websocat**
> nc 的 WebSocket 版
- https://github.com/vi/websocat
---
## 模拟器
**mono**
```bash
apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
echo "deb http://download.mono-project.com/repo/debian wheezy main" | tee /etc/apt/sources.list.d/mono-xamarin.list
echo "deb http://download.mono-project.com/repo/debian wheezy-apache24-compat main" | tee -a /etc/apt/sources.list.d/mono-xamarin.list
echo "deb http://download.mono-project.com/repo/debian wheezy-libjpeg62-compat main" | tee -a /etc/apt/sources.list.d/mono-xamarin.list
apt-get update
apt-get install -y mono-devel mono-complete referenceassemblies-pcl ca-certificates-mono
```
---
## 格式处理
**base64**
```bash
base64  # 编码
test    # 输入内容
Ctrl+D  # 结束,输出
base64 -d   # 解码
dGVzdAo=
Ctrl+D  # 结束,输出
```
```
echo "str" | base64 -w 0
echo "c3RyCg==" | base64 -d
```
> 这个傻逼工具会默认每 76 个字符换行，格式化输出,用 -w 0 关闭
**expand**
> 将 TAB 转换为空格
```
expand test.txt
```
**unexpand**
> 将空格转换为 TAB
```
unexpand test.txt
```
**sttr**
> cross-platform, cli app to perform various operations on string
- https://github.com/abhimanyu003/sttr
```
sttr md5 "Hello World"
sttr base64-encode image.jpg
echo "Hello World" | sttr md5
cat file.txt | sttr md5
```
**seq**
seq 命令用于生成某个范围内的整数
`seq [选项]... [首数] [增量] 尾数`
```bash
seq 10                  # 输出1-10的所有整数
seq 3 5                 # 输出3-5的所有整数
seq 1 2 5               # 1-5，增量为2
seq -f "id:%06g" 1 2 5  # 以特定格式输出
seq -w 1 101            # 使所有数据等宽
seq -w -s ' ' 99 101    # 以空格分隔所有的数据
```
**choose**
> cut 命令的替代品, 用来选中指定的栏位。
- https://github.com/theryangeary/choose
```bash
cat test.txt | choose 0
choose 0 -i test.txt
```
**csvtk**
> 命令行下处理 CSV/TSV格式
- https://github.com/shenwei356/csvtk
**dsq**
> 一个命令行工具，可以对 JSON、CSV、Excel 等格式的文件执行 SQL 查询语句。
- https://github.com/multiprocessio/dsq
**yq**
> 像 jq 一样对 yaml,json,xml 使用 yq
- https://github.com/mikefarah/yq
```bash
go install github.com/mikefarah/yq/v4@latest
tee test.yaml  解析 xml 格式
```bash
sudo apt-get install  libxml2-utils
```
```
xmllint --xpath "//book[@id=2]/name/text()" sample.xml
```