(cid:2)
(cid:2)
(cid:2)
(cid:2)
X
b13
X
X
(cid:2)
(cid:2)
(cid:2)
X
b15
X
X
(cid:2)
(cid:2)
(cid:2)
X
b17
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
X
Competition-large
b17L b20
b22
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
X
X
X
b10
2.4
6.5
0
0.1
0.2
0.4
b11
6.4(cid:2)104
2.8
0
0.2
0.6
0.4
Execution time (s)
Competition-small
b12
0.2
3.9
0.1
0.3
0.8
0.4
b13
1.1
0.5
0
0.1
0.3
0.2
b15
5.8
1.7
0.4
3.3
50
0.5
b17
TO
73
1.7
21
0
0.3
Competition-large
b17L b20
b22
TO
TO
TO
9.0
18.2
10.0
0.1
0.2
0.3
0.8
0.8
1.3
3.4
5.4
3.1
8.3
6.8
8.6
Table 5: Execution time (s) of the SPI attack on circuits protected using different CAC techniques. The success rate of the SPI
attack is 100% for all the circuits and thus, not presented.
Technique
TTLock [27]
CAChd [10]
CACﬂex [10]
Circuit
b10
0.4
0.5
0.3
b11
0.5
0.7
0.6
ITC’99
b13
0.8
0.7
0.3
b12
1.2
1.2
0.7
b15
17.1
22.5
23.4
b17
0.6
0.7
0.7
ARM Cortex-M3
CEP
ARMc1 ARMc2 ARMc3 ARMc4 GPS
0.3
0.5
0.2
0.2
0.5
0.2
0.2
0.5
0.4
0.4
0.7
0.2
0.3
0.5
0.3
Comparison with existing attacks. Table 4 also presents
a comparison of the SPI attack with three structural attacks
and two I/O attacks. SAT attack breaks all the circuits locked
with 16-bit keys, as the search space is only 216. However,
it cannot break the b17 circuit and the three hard circuits
in 48 hours. The b15 circuit is an exception since the SAT
attack breaks it within six seconds because 90% of the key
bits for b15 are 0s, the default starting point of the SAT solver.
The AppSAT attack ﬁnishes within a few seconds for all
circuits albeit without recovering the PIP. Only for two 16-bit
circuits and the b15 circuit, AppSAT can extract the correct
key. Thus, none of the existing structural attacks can break
even a single CACrem circuit. The SPS and ATR attacks fail
to identify point-functions in CACrem circuits. The FALL
attack cannot locate the correcting unit. In comparison, the
SPI attack breaks all the circuits within a few seconds.
4.3 Breaking all CAC techniques
Table 5 reports the effectiveness of the SPI attack against
different CAC techniques: TTLock, CAChd, and CACﬂex [10,
27]. The success rate of the attack is 100%. The execution
time only varies slightly across different CAC techniques. The
reason is that the SPI attack does not target the netlist but the
Boolean function to ﬁnd the PIPs, and the CAC techniques
only alter the netlist.
4.4 Evaluation against Different EDA Tools
Table 6 reports the results of the SPI attack on CACrem
circuits synthesized using six logic-synthesis tools. We ex-
periment with ﬁve industrial tools, Cadence Genus, Synop-
sys Design Compiler, Synopsys Synplify, Xilinx Vivado, and
Mentor Graphics Precision RTL, and one academic tool,
ABC [53–58]. The SPI attack breaks all the circuits, irrespec-
tive of the logic-synthesis tool used to generate the corrupted
circuit. Each tool uses a different set of optimization heuris-
tics. A designer may re-synthesize a circuit with multiple
tools to achieve minimum PPA overhead. We replicate this
scenario by cascading the logic-synthesis tools, i.e., passing
the output of one tool to the next for further optimization.
Even this sophisticated synthesis setup fails to impact the
success rate of the SPI attack.
1064    30th USENIX Security Symposium
USENIX Association
Table 6: Execution time (s) of the SPI attack on CACﬂex circuits synthesized using different EDA tools. The success rate of the
SPI attack is 100% for all the circuits and thus, not presented. The industrial tools are anonymized to avoid disclosure conﬂicts.
Circuit
Tool
category
EDA tool
EDA tool ‹
Industrial
EDA tool ›
Industrial
EDA tool ﬁ
Industrial
EDA tool ﬂ (ABC [58]) Academic
EDA tool (cid:176)
Industrial
EDA tool –
Industrial
‹ › › › ﬁ › ﬂ › (cid:176) › –
Mix
b10
0.3
0.4
0.5
0.2
0.3
0.2
0.3
b11
0.6
0.5
0.7
0.5
0.7
0.5
0.8
ITC’99
b13
0.3
0.8
0.7
0.3
0.4
0.4
0.6
b12
0.7
1.2
1.2
0.5
0.4
0.5
0.7
b15
23.4
17.1
22.5
14.3
18.6
10.0
15.1
b17
0.7
0.6
0.7
1.1
0.8
0.7
0.9
ARM Cortex-M3
CEP
ARMc1 ARMc2 ARMc3 ARMc4 GPS
0.2
0.3
0.5
0.2
0.2
0.3
0.3
0.4
0.2
0.5
0.5
0.8
0.4
0.5
0.3
0.3
0.5
0.7
0.4
0.2
0.5
0.2
0.2
0.5
0.6
0.4
0.9
0.5
0.2
0.4
0.7
0.6
0.4
0.8
0.5
5 Dist2: A Security Property
The results in the previous section demonstrate the vulnera-
bility of CAC techniques to structural attacks. The techniques
remain speciﬁcally vulnerable to the SPI attack since they
select PIPs on an arbitrary basis. This hints that PIPs must be
selected more carefully by taking into account the distance
with the PIs of the original circuit. Recall that an addition
(deletion) of a PIP changes the PIT only if the added (deleted)
PIP has a distance less than 2 from any other PI. To ensure
that the PIT does not leak information about the PIP, only
those PIs should be selected that are “sufﬁciently distanced,”
i.e., at least distance two away from PIs of the original circuit.
We refer to this condition for the resilience against structural
attacks as Dist2 property and to such PIPs as D2PIPs, with
D2 denoting a minimum distance of two. Note that this can
be generalized to a distance of at least d. Without satisfying
the Dist property, CAC circuits remain vulnerable to the SPI
attack and similar structural attacks. A D2PIP satisﬁes
if D2PIP 2 FON
orig;
orig ; 8PI0
if D2PIP 2 FOFF
8PIi 2 FON
i 2 FOFF
D(D2PIP;PIi) (cid:21) d
i ) (cid:21) d.
cp D(D2PIP;PI0
cp
(
These conditions guarantee that (i) a D2PIP cannot be
if the corrupted circuit is created
orig, and (ii) a D2PIP cannot be
if the corrupted circuit is created
orig. Thus, the feature of D2PIP is, on
orig or FOFF
orig do
cp will not to
merged with any PI in FON
cp
by removing a PIP from FON
merged with any PI in FOFF
cp
by adding a PIP to FON
choosing a D2PIP as the PIP, the rest PIs in FON
not change, thereby the constructed FON
cp or FOFF
leak the secret by letting the PIP isolated separately.
Dist2 property simply introduces a new constraint on the
PIPs that can be protected. The property can be easily used in
conjunction with CAC techniques to attain resilience against
both I/O and structural attacks. Once a set of D2PIPs has
been found, they can be protected using any of the CAC
techniques. We emphasize that if Dist2 property is not taken
into account, a locked circuit remains vulnerable to SPI attack
and anticipated structural attacks of the same nature.
5.1 Attack Resilience under Dist2
Structural attacks. Locking using only D2PIPs ensures that
the PIP will not alter the structure of the PIT and thus not
reveal any information about the PIP, through neither isolated
PIPs nor split PIs. When locking using arbitrary PIPs, the