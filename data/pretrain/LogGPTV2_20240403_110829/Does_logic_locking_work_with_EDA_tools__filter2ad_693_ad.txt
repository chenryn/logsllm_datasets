### 4.3 Breaking All CAC Techniques

Table 5 reports the effectiveness of the SPI attack against different CAC techniques: TTLock, CAChd, and CACflex [10, 27]. The success rate of the attack is 100%. The execution time varies slightly across different CAC techniques. This is because the SPI attack targets the Boolean function to find the PIPs, rather than the netlist, and the CAC techniques only alter the netlist.

### 4.4 Evaluation Against Different EDA Tools

Table 6 presents the results of the SPI attack on CACrem circuits synthesized using six logic-synthesis tools. We tested five industrial tools—Cadence Genus, Synopsys Design Compiler, Synopsys Synplify, Xilinx Vivado, and Mentor Graphics Precision RTL—and one academic tool, ABC [53–58]. The SPI attack successfully breaks all the circuits, regardless of the logic-synthesis tool used to generate the corrupted circuit. Each tool uses a different set of optimization heuristics. A designer may re-synthesize a circuit with multiple tools to achieve minimum PPA overhead. To replicate this scenario, we cascaded the logic-synthesis tools, passing the output of one tool to the next for further optimization. Even this sophisticated synthesis setup did not impact the success rate of the SPI attack.

#### Table 6: Execution Time (s) of the SPI Attack on CACflex Circuits Synthesized Using Different EDA Tools

| Circuit | Tool Category | EDA Tool 1 | EDA Tool 2 | EDA Tool 3 | EDA Tool 4 (ABC [58]) | EDA Tool 5 |
|---------|---------------|-------------|-------------|-------------|-----------------------|-------------|
| b10     | Industrial    | 0.3         | 0.4         | 0.5         | 0.2                   | 0.3         |
| b11     | Industrial    | 0.6         | 0.5         | 0.7         | 0.5                   | 0.8         |
| ITC’99  | Industrial    | 0.3         | 0.8         | 0.7         | 0.3                   | 0.6         |
| b12     | Industrial    | 0.7         | 1.2         | 1.2         | 0.5                   | 0.7         |
| b15     | Industrial    | 23.4        | 17.1        | 22.5        | 14.3                  | 15.1        |
| b17     | Industrial    | 0.7         | 0.6         | 0.7         | 1.1                   | 0.9         |
| ARM Cortex-M3 | Academic | 0.2         | 0.3         | 0.5         | 0.2                   | 0.3         |
| CEP     | Academic      | 0.2         | 0.3         | 0.5         | 0.2                   | 0.3         |
| ARMc1   | Academic      | 0.4         | 0.2         | 0.5         | 0.5                   | 0.8         |
| ARMc2   | Academic      | 0.3         | 0.5         | 0.7         | 0.4                   | 0.5         |
| ARMc3   | Academic      | 0.3         | 0.5         | 0.7         | 0.4                   | 0.5         |
| ARMc4   | Academic      | 0.2         | 0.5         | 0.2         | 0.2                   | 0.5         |
| GPS     | Academic      | 0.4         | 0.9         | 0.5         | 0.2                   | 0.4         |

The success rate of the SPI attack is 100% for all the circuits, and thus, it is not presented in the table. The industrial tools are anonymized to avoid disclosure conflicts.

### 5. Dist2: A Security Property

The results in the previous section demonstrate the vulnerability of CAC techniques to structural attacks. These techniques remain particularly vulnerable to the SPI attack since they select PIPs on an arbitrary basis. This suggests that PIPs must be selected more carefully by considering their distance from the primary inputs (PIs) of the original circuit. An addition or deletion of a PIP changes the primary input trace (PIT) only if the added or deleted PIP has a distance less than 2 from any other PI. To ensure that the PIT does not leak information about the PIP, only those PIs should be selected that are "sufficiently distanced," i.e., at least distance two away from PIs of the original circuit. We refer to this condition for resilience against structural attacks as the Dist2 property, and such PIPs as D2PIPs, where D2 denotes a minimum distance of two. This can be generalized to a distance of at least d.

Without satisfying the Dist property, CAC circuits remain vulnerable to the SPI attack and similar structural attacks. A D2PIP satisfies the following conditions:
- If \( \text{D2PIP} \in \text{FON}_{\text{orig}} \), then \( \text{D(D2PIP, PI}_i) \geq d \) for all \( \text{PI}_i \in \text{FOFF}_{\text{orig}} \).
- If \( \text{D2PIP} \in \text{FOFF}_{\text{orig}} \), then \( \text{D(D2PIP, PI}_i) \geq d \) for all \( \text{PI}_i \in \text{FON}_{\text{orig}} \).

These conditions ensure that:
- A D2PIP cannot be merged with any PI in \( \text{FON}_{\text{orig}} \) if the corrupted circuit is created by removing a PIP from \( \text{FON}_{\text{orig}} \).
- A D2PIP cannot be merged with any PI in \( \text{FOFF}_{\text{orig}} \) if the corrupted circuit is created by adding a PIP to \( \text{FON}_{\text{orig}} \).

Thus, by choosing a D2PIP as the PIP, the rest of the PIs in \( \text{FON}_{\text{orig}} \) or \( \text{FOFF}_{\text{orig}} \) do not change, thereby preventing the constructed \( \text{FON}_{\text{cp}} \) or \( \text{FOFF}_{\text{cp}} \) from leaking the secret by letting the PIP be isolated separately.

### 5.1 Attack Resilience under Dist2

**Structural Attacks:** Locking using only D2PIPs ensures that the PIP will not alter the structure of the PIT and thus will not reveal any information about the PIP, either through isolated PIs or split PIs. When locking using arbitrary PIPs, the circuit remains vulnerable to the SPI attack and similar structural attacks.