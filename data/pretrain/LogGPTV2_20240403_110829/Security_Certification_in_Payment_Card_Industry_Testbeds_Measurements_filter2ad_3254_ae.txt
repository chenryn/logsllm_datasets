an issue that appears in 3% of the websites. For some websites, the
root cause is not properly configuring HTTPS. For example, one
website accepts payment for donations. Since it does not correctly
set up HTTPS, it uses a default certificate5 for HTTPS (Figure 4 in
Appendix). In some cases, the websites use HTTPS for payment
only while other sensitive content (i.e., items and the cart) are
still sent over HTTP. Because the original domain is not properly
configured to use HTTPS, it presents the default expired certificate
(Figure 5 in Appendix).
Comparison with Existing Tool. Finally, we experimentally com-
pared PciCheckerLite with the state-of-the-art web scanner. Note
that existing scanners typically have aggressive pentesting com-
ponents that are not suitable to test live websites. For this experi-
ment, we choose w3af and have to adapt it to a “non-intrusive low-
interactive" version. More specifically, we modify w3af to 1) block
intrusive tests (e.g., XSS, SQL injections), 2) disable URL fuzzing,
and 3) disable the liveliness testing. For scalability, we also utilized
w3af’s programmable APIs (w3af_console) to discard the graphic
user interface. We call this version as customized w3af. For com-
parison, we ran PciCheckerLite and the customized w3af on 100
websites random from the 1203 sites (in Table 5). For reference, we
also ran both tools on our BuggyCart.
The results are shown in Table 6. First, we observe that our
system outperforms w3af on Buggycart by detecting all the vulner-
abilities. Second, on the 100 real-world websites, our system also
detected more truly vulnerable websites. Even though w3af flagged
more websites (e.g., Test case 7, 29), manually analysis shows that
a large portion of the alerts are false positives. For example, under
5A self-signed certificate comes with the webserver installation.
Table 5: Testing results on 1,203 real-world websites that accept payment card transactions as of May 3, 2019. We reuse the
index numbers of the test cases from Table 3.
Reqs.
Test Cases
Severity
Biz.
(122)
1.2
2.1
2.3
4.1
6.1
6.5
6.6
Medium 3
2. Mysql port (3306) detection
Low
3. OpenSSH available
6
0
High
5. Default Mysql user/passwd
12
High
7. Sensitive info over HTTP
High
0
12. Selfsigned cert presented
High
13. Weak Cipher Supported
0
Medium 0
14. Expired cert presented
Medium 3
15. Wrong hostname in cert
High
16. Insecure Modulus
0
High
0
17. Weak hash in cert
67
Low
18. TLSv1.0 Supported
19. OpenSSH vulnerable
High
6
25. Missing script integrity check Medium 92
Medium 26
29. Server Info available
0
30. Browsable Dir Enabled
High
High
31. HTTP TRACE supported
6
33. Security Headers missing
Medium 18
Shop.
(163)
6
15
0
10
0
0
0
1
0
0
73
14
109
34
0
4
38
Arts
(78)
4
11
0
12
3
0
2
3
0
0
53
11
54
17
0
3
9
Adlt.
(65)
2
4
0
10
0
0
0
0
0
0
42
4
44
17
0
3
12
Category (810)
Recr.
(84)
6
13
0
17
1
0
2
6
0
0
41
13
44
22
0
2
14
Comp.
(57)
2
6
0
10
0
0
0
2
0
0
40
6
32
15
0
5
21
Game.
(42)
3
7
0
8
0
0
0
0
0
0
28
6
27
17
0
2
9
Hlth.
(60)
2
8
0
6
1
0
1
2
0
0
30
8
42
17
0
2
7
Home.
(102)
4
12
0
10
1
0
0
4
0
0
67
11
66
25
0
6
14
Kids.
(37)
0
1
0
5
0
0
0
1
0
0
16
1
21
11
0
0
7
Ranking (393)
Btm.
Top
(288)
(105)
27
0
27
6
0
0
22
47
0
3
0
0
2
0
10
0
1
0
0
0
71
216
26
6
75
154
22
33
0
0
6
4
114
13
Total (1,203)
59 (5%)
116 (10%)
0 (0%)
169 (14%)
9 (1%)
0 (0%)
7 (1%)
32 (3%)
1 (0.1%)
0 (0%)
744 (62%)
112 (9%)
760 (63%)
256 (21%)
0 (0%)
43 (4%)
276 (23%)
Table 6: Comparison between PciCheckerLite and the
customized w3af on 100 randomly chosen websites and the
Buggycart testbed. We report the number of vulnerable web-
sites detected and the false positives (FP) among them.
Vulnerabilities
2. Mysql port (3306) detection
3. OpenSSH available
5. Default Mysql user/pass
7. Sensitive info over HTTP
12. Selfsigned cert presented
13. Weak Cipher Supported
14. Expired cert presented
15. Wrong hostname in cert
16. Insecure Modulus
17. Weak hash in cert
18. TLSv1.0 Supported
19. OpenSSH vulnerable
25. Missing script integrity check
29. Server Info available
30. Browsable Dir Enabled
31. HTTP TRACE supported
33. Security Headers missing
Buggycart
100 Random websites
Ours (FP) w3af (FP) Ours w3af
5 (0)
10 (0)
0 (0)
12 (0)
2 (0)
0 (0)
0 (0)
3 (0)
0 (0)
0 (0)
63 (0)
10 (0)
72 (1)
19 (0)
0 (0)
6 (0)
30 (0)
0 (0)
0 (0)
0 (0)
27 (17)
2 (0)
0 (0)
3 (3)
2 (1)
0 (0)
0 (0)
0 (0)
0 (0)
55 (10)
81 (62)
0 (0)
6 (6)
0 (0)
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✗
✗
✗
✓
✓
✗
✓
✓
✗
✗
✗
✗
✓
✓
✗
✓
✗
Test case 7, w3af flags a website if Port 80 is open, while PciCheck-
erLite reports a website only if the request is not automatically
redirected to Port 443 (HTTPS). This design of w3af produces 17
false positives. Under Test case 15, w3af flags a website that uses
the certificate for its subdomains (which is not a violation). For Test
case 29, w3af flags websites that expose non-critical information
whereas we only flag the exposure of exploitable information (e.g.,
server and framework version numbers). Note that among all vul-
nerabilities, we only have one FP under Test case 25. This website
is flagged by PciCheckerLite for loading Javascript from a third-
party domain without an integrity check. Manually analysis shows
that the third-party domain and the original website are actually
owned by the same organization. Technically, such information is
beyond what PciCheckerLite can collect.
6 Disclosure and Discussion
Responsible Disclosure. We have fully disclosed our findings to
the PCI Security Standard Council. In May 2019, we shared our
paper with the PCI SSC, and successfully got in touch with an ex-
perienced member of the Security Council. Through productive
exchanges with them, we gained useful insights. i) The Security
Council shared a copy of our paper to the dedicated companies
that host the PCI certification testbeds, who are now aware of our
findings; ii) Preventing scanners from gaming the test is one of their
priorities, for example, by constantly updating their testbeds and
changing the tests; iii) Low interaction constraints make it difficult
to test some vulnerabilities externally (which we also experienced
and aimed to address in our work); iv) The Security Council rou-
tinely removes scanners from the ASV list or warns scanners based
on the feedback sent by ASV consumers; v) Their testbeds exclude
vulnerabilities whose CVSS scores are lower than 4; vi) Payment
brands and acquirer banks need efficient (and automatic) solutions
to inspect PCI DSS compliance reports. Insights ii), iii), and vi)
present interesting research opportunities. In addition, we are in
the process of contacting vulnerable websites. Some notifications
have been sent out to those that failed test case 2 (open Mysql port)
or 19 (vulnerable OpenSSH). Incidentally, we found a few websites
have already fixed their problems, for example Netflix upgraded
the vulnerable SSH-2.0-OpenSSH_7.2p2 (current Netflix.com server