### 优化后的文本

#### 不同大小的 `open_sync` 写操作测试
- 1 * 16kB `open_sync` 写操作: n/a*
- 2 * 8kB `open_sync` 写操作: n/a*
- 4 * 4kB `open_sync` 写操作: n/a*
- 8 * 2kB `open_sync` 写操作: n/a*
- 16 * 1kB `open_sync` 写操作: n/a*

#### 测试 `fsync` 在非写入文件描述符上的效果
如果操作时间相近，说明 `fsync()` 可以同步不同描述符上写入的数据。
- 写入, `fsync`, 关闭: 6330.570 操作/秒 (158 微秒/操作)
- 写入, 关闭, `fsync`: 6989.741 操作/秒 (143 微秒/操作)

#### 非同步 8kB 写操作
- 写入: 77800.273 操作/秒 (13 微秒/操作)

需要注意的是，如果 PostgreSQL 关闭了 `synchronous_commit`，那么普通的磁盘 SLOG 就足够使用。后续的写入测试结果很好地证明了这一点。

### 创建 Zpool 的块设备建议
创建 Zpool 的块设备时，最好使用 `by-id` 标识符，因为在 Linux 系统中，设备名可能会发生变化。例如，重启后 `/dev/sda` 可能会变成 `/dev/sdb`。对于 SLOG 设备来说，这种变化是不允许的，会导致数据崩溃。

查看 `by-id` 设备:
```sh
# ll /dev/disk/by-id/*
```

示例输出:
```sh
lrwxrwxrwx 1 root root  9 Jun 19  2014 /dev/disk/by-id/scsi-35000c50064b0a6dc -> ../../sdd
lrwxrwxrwx 1 root root 10 Jun 19  2014 /dev/disk/by-id/scsi-35000c50064b0a6dc-part1 -> ../../sdd1
...
```

如果已经使用了 `/dev/sd*` 设备，可以删除后重新加入:
```sh
# zpool remove zp1 /dev/sdk4
# zpool add zp1 log /dev/disk/by-id/scsi-3600605b0079e70801b0e33ff07ebffa3-part4
```

SLOG 一般不需要太大，几个 GB 就足够了。L2ARC 则越大越好。

### 小结
尽管测试范围较窄，但反映了以下问题:
1. 使用 SLOG 后，ZFS 的写性能超出了预期配置的存储性能，因此适合用作数据库存储。
2. 当前读取测试尚未超出内存大小，因此不能完全反映实际情况。超出内存后，18GB 表的查询需要约 70 秒。如果使用 SSD 作为 L2ARC，读性能将进一步提高。
3. 使用 ZFS 压缩后，虽然存储空间减少了，但也需要考虑压缩和解压带来的延迟和 CPU 开销。
4. SLOG 非常重要，建议进行镜像。如果底层是 RAID，则可以不进行镜像。这里使用内存作为示例，请勿模仿，这只是模拟 SSD。

### 参考
1. [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
   - 您的愿望将传达给 PG kernel hacker、数据库厂商等，帮助提高数据库产品质量和功能。针对非常好的提议，奖励限量版 PG 文化衫、纪念品、贴纸、PG 热门书籍等，奖品丰富，快来许愿吧！[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")。

2. [9.9 元购买 3 个月阿里云 RDS PostgreSQL 实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")

3. [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")

4. [德哥 / digoal's GitHub - 公益是一辈子的事](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")

5. [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")

6. [购买 PolarDB 云服务折扣活动进行中, 55 元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")

7. [关于德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")