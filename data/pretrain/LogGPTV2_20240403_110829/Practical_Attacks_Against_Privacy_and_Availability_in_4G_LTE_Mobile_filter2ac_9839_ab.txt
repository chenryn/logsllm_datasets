through the “Random Access
it acquires a radio channel
Procedure” [13] for requesting a RRC connection from the
eNodeB. “RRC Connection Setup” involves the conﬁguration
of radio resources for exchanging signaling messages. Upon
receiving this setup message, the UE completes a three way
RRC handshake procedure by sending a “RRC Connection
Setup Complete” message along with a “Service Request”
message. At
this point UE leaves IDLE state and enters
into CONNECTED state3. The eNodeB forwards the service
request message to MME, which in turn stops the paging timer.
Further, eNodeB establishes a security context and proceeds to
deliver network services to UE.
In LTE,
the paging procedure is improved to reduce
signaling load and locate the UE faster using a technique
called Smart Paging [14], [15], [16]. It is compliant with
LTE speciﬁcations and consists of directing paging messages
selectively via the eNodeB (cell) where the UE was last seen.
If no response is received, paging is repeated in the entire
TA. In our experiments (Section V-B) to study LTE paging
procedures in a major city, we observed that several network
operators and vendors have implemented smart paging.
III. ADVERSARY MODEL
In this section, we describe the adversary model for our
attacks. The primary goals of the adversary against LTE
subscribers are: a) learn the precise location of a subscriber
in a given geographical area b) deny network services (both
1In LTE, coverage area of an eNodeB is divided into several sectors known
as cells.
2In IDLE state, the UE has no active connections with any eNodeB.
3CONNECTED means the UE has an active connection with an eNodeB.
3
mobile-terminated and mobile-originated) to a subscriber, and
c) force subscribers to use less secure GSM or 3G networks
thereby exposing them to various attacks such as IMSI catch-
ers [17]. We assume that the adversary is in the same geo-
graphical area as the victim. The adversary model is divided
into three attack modes as described below.
Passive
A passive adversary is able to silently sniff LTE over-the-air
(radio) broadcast channels. To achieve this, he/she has access
to a hardware device (for example Universal Software Radio
Peripheral (USRP)) and associated software needed to observe
and decode radio broadcast signaling messages.
Semi-Passive
A semi-passive adversary is, in addition to passive moni-
toring, able to trigger signaling messages to subscribers using
interfaces and actions that are legitimately available in LTE or
in higher layer systems. For example, a semi-passive adversary
can trigger paging messages to subscribers by sending a
message via a social network or initiating a call. The adversary
is assumed to be aware of social identities of subscribers.
For example, these identities can be a Facebook proﬁle or
a mobile phone number of the subscriber. A semi-passive
adversary is analogous to the ‘honest-but-curious’ or ‘semi-
honest’ adversary model used for cryptographic protocols [18].
Active
The active adversary can set up and operate a rogue
eNodeB to establish malicious communication with UEs.
Capabilities required for active attacks include knowledge of
LTE speciﬁcations and hardware (USRP) that can be used
for impersonating subscriber’s serving operator network, and
injecting malicious packets to UEs. An active adversary is
analogous to the ‘malicious’ adversary model in cryptographic
protocols [18].
IV. EXPERIMENTAL SETUP
Software and hardware used in major telecommunication
systems have traditionally been proprietary (closed source) and
expensive. However recently open source telephony software
and low-cost hardware modules have started to emerge. In this
section, we explain our experimental setup built using low
cost off-the-shelf components and requiring only elementary
programming skills with knowledge of LTE speciﬁcations.
Figure 3 depicts the experimental setup.
Hardware
Hardware components for eNodeB, MME, and UE are
needed to build our experimental LTE network. On the network
side, we used a USRP B210 device [19] connected to a host
laptop (Intel i7 processor & Ubuntu 14.04 OS), acting as an
eNodeB. USRP is a software-deﬁned radio peripheral that can
be connected to a host computer, to be used by host-based
software to transmit/receive data over the air. Even though we
utilized USRP B210 which costs around one thousand euros,
passive attacks can also be realized practically with more
cheaply available radio hardware. For example, RTL-SDR [20]
Fig. 3. Experimental setup
dongles which cost around 15 euros can be leveraged to
passively listen over the LTE air-interface. On the UE side, we
selected popular LTE-capable mobile phones available in the
market. These devices incorporate LTE implementations from
four major LTE baseband vendors who collectively account
for the vast majority of deployed LTE-capable UEs.
A. Passive and semi-passive attack setup
The research test-bed used in performing paging attacks
described in [2] was restricted to GSM networks due to the
unavailability of any LTE baseband implementations at that
time. Today, there are some partial LTE baseband implemen-
tations available as open source including OpenLTE [21]
and srsLTE [22], which enabled us to conduct real-time
experiments on LTE networks.
Implementation
In order to sniff LTE broadcast channels, we utilized parts
of srsLTE. It is a free library for software-deﬁned radio
mobile terminals and base stations. Currently, the project is
developing a UE-side LTE baseband implementation. srsLTE
uses Universal Hardware Device library to communicate with
the USRP B210. Since all the passive snifﬁng is done in real-
time, it is recommended to have a high-speed host (laptop) in
order to handle the high (30.72 MHz) sampling rates without
data loss and also to maintain constant sync with eNodeBs.
In particular, we used the pdsch-ue application to scan
a speciﬁed frequency and detect surrounding eNodeBs. It
can listen and decode SIB messages broadcast by eNodeB.
Further, we modiﬁed pdsch-ue to decode paging messages
which are identiﬁed over-the-air with a Paging-Radio Network
Temporary Identiﬁer (P-RNTI). Upon its detection, GUTI(s)
and/or IMSI(s) can be extracted out of paging messages.
In semi-passive attack mode, we use Facebook [23], [3]
and WhatsApp [4] applications over the Internet, in addition to
initiating communication with targets via silent text messages
or phone calls.
B. Active attack setup
We built an eNodeB to mount successful active attacks
against UEs registered with a real LTE network. In particular,
4
our eNodeB impersonates a real network operator and forces
UEs to attach to it. The process of building such rogue
eNodeBs is described below.
Building rogue eNodeB: Generally, UE always scans for
eNodeBs around it and prefers to attach to the eNodeB
with the best signal power. Hence in IMSI catcher type of
attacks [17], rogue eNodeBs are operated with higher power
than surrounding eNodeBs. However, in LTE the functionality
of the UE may be different in some situations. In particular,
when a UE is very close to a serving eNodeB it does not scan
surrounding eNodeBs. This allows UEs to save power. Hence
to overcome this situation in our active attacks, we exploit an-
other feature named ‘absolute priority based cell reselection’,
and introduced in the LTE release 8 speciﬁcation [24].
The principle of priority-based reselection is that UEs, in
the IDLE state, should periodically monitor and try to connect
to eNodeBs operated with high priority frequencies [24].
Hence even if the UE is close to a real eNodeB, operating the
rogue eNodeB on a frequency that has the highest reselection
priority would force UEs to attach to it. These priorities are
deﬁned in SIB Type number 4, 5, 6, and 7 messages broadcast
by the real eNodeB [5]. Using passive attack setup, we sniff
these priorities and conﬁgure our eNodeB accordingly.
Further, the rogue eNodeB broadcasts MCC and MNC
numbers identical to the network operator of targeted sub-
scribers to impersonate the real network operator. Generally,
when UE detects a new TA it initiates a “TAU Request” to
the eNodeB. In order to trigger such request messages, the
rogue eNodeB operates on a TAC that is different from the
real eNodeB.
Implementation
The active attack is launched using the USRP B210 and
a host
laptop which together are running OpenLTE. The
OpenLTE is an open source implementation of LTE spec-
iﬁcations and includes an LTE_Fdd_enodeb application.
Although this application cannot be compared to a full-ﬂedged
commercial eNodeB, it has the capability to execute a com-
plete LTE Attach procedure. In addition, some functionality
of the MME is implemented in LTE_Fdd_enodeb. Upon
successful completion of Attach, LTE_Fdd_enodeb can
also handle UE-originated services. However, currently it lacks
stability. We tested active attacks on UEs with USIMs from
three major national-level operators.
Further, we programmed LTE_Fdd_enodeb to include
LTE RRC and NAS protocol messages to demonstrate active
attacks. In addition, we modiﬁed the telephony protocol dis-
sector [25] available in Wireshark [26] to decode all messages
exchanged between the rogue eNodeB and UE. These modiﬁ-
cations are submitted to the Wireshark project and are being
merged into the mainstream application.
C. Ethical considerations
Our work reveals vulnerabilities in LTE speciﬁcations
which are already in use in every LTE-enabled UE worldwide.
Further we also encountered several implementation issues in
popular smartphones and LTE network conﬁguration issues.
Therefore we made an effort to responsibly disclose our work
5
to the relevant standard bodies and affected parties. Our reports
were acknowledged by all vendors and network operators we
contacted. For those vendors who have a standard responsible
disclosure process in place, we followed the process.
We carried out most of the active attacks in a Faraday
cage [27] to avoid affecting other UEs. For attacks in real
LTE networks, we took care not to interrupt normal service to
other UEs in the testing zone. Initially, we determined GUTIs
of our test UEs via passive attacks and fed them into our rogue
eNodeB. We programmed our rogue eNodeB to accept “TAU
/ Attach / Service Requests” only from these speciﬁed GUTIs
and to reject all requests from unknown UEs with the EMM
reject cause number 12 “Tracking area not allowed” [11].
Upon receipt of this message, all UEs other than our test UEs
disconnect automatically from our rogue eNodeB.
V. LOCATION LEAK ATTACKS OVER AIR INTERFACE
In this section, we show how the approximate location of
an LTE subscriber inside an urban area can be inferred by
applying a set of novel passive, semi-passive, and active at-
tacks. In particular, we track down the location of a subscriber
to a cell level (e.g., 2 km2 area) using passive attacks (L14)
and further determine the precise position using active attacks
(L3). We ﬁrst describe the background for the attacks by
summarizing the features and aspects of LTE that are used by
the attacker. We then characterize preliminary measurements
used for realizing the attacks and new techniques for triggering
subscriber paging. Finally, we explain the attacks in detail.
A. Attack background
We now describe network conﬁguration issues, subscriber
identity mapping technique, and observations about certain
LTE network access protocols. We will later make use of all
of these aspects in developing our attacks.
Network conﬁguration issues
In LTE, network operators deploy various methods to
minimize signaling overhead introduced due to evolution of
networks, devices, and smartphone applications [28]. We iden-
tify two such deployment techniques relevant to our discussion.
Smart Paging: In GSM, paging messages are sent to an entire
location area. Thus it only allows the attacker to locate a
subscriber within a large (e.g., 100 km2) area [2]. However,
LTE paging is directed onto a small cell rather than to a large
TA. Such Smart Paging allows an attacker to locate an LTE
subscriber within a much smaller (e.g., 2 km2) area which is
a typical LTE cell size as observed in our experiments in a
major city.
GUTI persistence: Generally a fresh GUTI is allocated in
the following situations: (a) when MME is changed due to
handover or load balancing, b) during TAU or Attach proce-
dure, and c) when network issues NAS “GUTI reallocation
command”. However, network operators tend to not always
change GUTI during the above procedures [29]5. This allows
a passive attacker to track UEs based on their GUTIs.
4For the sake of simplicity, we refer location leaks attacks as L1, L2, and
L3 whereas DoS attacks as D1, D2, and D3 respectively.
5The reason for not changing GUTIs often is to avoid signaling storms in
LTE network as described in [29].
messages are neither authenticated nor encrypted. Hence any-
one can decode them with appropriate equipment. Since these
broadcast messages are only sent
in speciﬁc geographical
areas, we can use the method described in [2] to reveal the
presence of subscribers in a targeted area by exploiting these
broadcast messages.
Further, the eNodeB periodically broadcasts SIB messages
which carry information for UEs to access the network, per-
form cell selection, and other information as described in [5].
The attacker can utilize this broadcast information to conﬁgure
the rogue eNodeB for malicious purposes.
UE measurement reports: In LTE, UE performs network
measurements and sends them to the eNodeB in RRC protocol
messages when requested. Such UE measurement reports
are necessary for network operators to troubleshoot signal
coverage issues. In particular,
there are two types of UE
measurement reports - one sent in “Measurement Report”
used as part of handover procedure and other one in Radio
Link Failure (RLF) report - which are used to troubleshoot
signaling coverage. However, since these messages are not
protected during the RRC protocol communication, an attacker
can obtain these network measurements by simply decoding
from radio signals.
We now explain the importance of two RRC protocol
messages and measurement
information they carry. First,
“Measurement Report” message is a necessary element during
handover procedure in LTE networks. Generally, eNodeB
sends a RRC message indicating what kind of information
is to be measured in response the UE sends “Measurement
Report” messages. We discovered that the LTE speciﬁcation
allows sending this message to the UE without AS secu-
rity context [5]. Second, RLF report is a feature to detect
connection failures caused by intra-LTE mobility and inter-
system handovers between LTE, GSM, and 3G networks. Upon
detection of such events, RLF reports are created by the UE
and forwarded to eNodeB when requested. These reports are
collected by the Operations, Administration, and Maintenance
(OAM) system for troubleshooting. As per the LTE standard
speciﬁcation [5] appendix A.6, the “UEInformationResponse”
message carrying RLF report should not be sent by the UE
before the activation of AS security context. However, we
discovered that major LTE baseband vendors failed to imple-
ment security protection for messages carrying RLF reports.
This suggests that the speciﬁcation is ambiguous leading to
incorrect interpretation by multiple baseband vendors.
In particular, “Measurement Report” and “UEInformation-
Response” messages contain serving and neighboring LTE cell
identiﬁers with their corresponding power measurements and
also similar information of GSM and 3G cells. Additionally the
message can include the GPS location of the UE (and hence
of the subscriber) if this feature is supported. We exploit the
above vulnerabilities to obtain power measurements, which we
then use to calculate a subscriber’s precise location.
B. Initial measurements
We performed a measurement study on LTE networks of
three major operators to understand GUTI allocations, Smart
Paging, and mapping of tracking area and cell dimensions for
Fig. 4.
‘Other’ folder in Facebook
Social identity to subscriber mapping
In previous work, phone calls (originating from a landline
phone) [2] and silent Short Message Service (SMS) [30] tech-
niques were used to page GSM subscribers thereby mapping
TMSIs to their phone numbers. However these methods are
not as effective anymore due to the availability of tools to
detect such attacks [31], [32]. We now discuss some features
in social network messaging applications that can be used to