# 优化后的文本

## 表5：COS和FLOW数据集中流长度频率的加权平均相对差异及总流数估计误差 (cid:13)M (4)

| 采样周期 N | 数据集 | WMRD M (4) | 估计误差 (%) |
| --- | --- | --- | --- |
| 10 | COS | 54% | - |
|  | FLOW TCP+UDP | 11% | - |
|  | FLOW DNS/UDP | 8% | - |
| 100 | COS | 60% | 4% |
|  | FLOW TCP+UDP | 14% | 11% |
|  | FLOW DNS/UDP | 32% | 3% |

根据第6.3节中的泊松分析，只有当j = 1, 2时，采样频率gj的准确度才能达到约30%，因此在这种数据量下迭代方法不太准确并不令人意外。然而，正如预期的那样，基于TCP的方法使用M (3)对总TCP流数的估计相当准确，在N = 10和N = 100的情况下，误差都在6%以内。

### 7.3.2 一般流长度的估计：(cid:5)f (4)

我们使用COS追踪数据评估了一般流长度估计器(cid:5)f (4)。我们从中提取了两个子追踪：web流量（目标端口为80的TCP流）和DNS流量（目标端口为53的流量）。N = 10和N = 100时的推断频率如图4所示。注意，原始的web流量频率在短长度处不平滑；如第6.3节所述，迭代估计比实际分布更平滑。相比之下，DNS流量长度频率较为平滑：迭代预测与实际值较为接近。对于N = 100的情况，预测值下降得比实际频率更快。在这种情况下，只有最低的三个采样频率可以明显区分于0，因此在较高流量长度上的不准确性是可以预料的。作为对比，采样流量总数与原始流量总数之间没有明显的关联：对于DNS流量，N = 10和N = 100时分别占原始流量的2%和20%；对于web流量，这些数字分别为48%和6%。

表5显示了推断频率与实际频率之间的加权平均相对差异，以及使用M (4)估计总流量数的误差。对于web流量，推断频率的准确度仅在大约两倍的范围内。这是由于平滑的推断分布与非平滑的实际频率匹配不佳所致。类似地，对于缩放基础的估计器，稍微平滑（即聚合）版本的这些分布将有更一致的结果。实际上，除了DNS流量在N = 100的情况外，总流量数的估计误差在大约15%以内。如上所述，在这种情况下，有用的采样数据非常少。

表5还显示了N = 100时使用FLOW数据集的两个组成部分（所有TCP和UDP流量，以及DNS/UDP流量）的结果。这些结果明显比COS更准确。我们认为这是因为FLOW数据集的原始流量长度频率比COS更平滑。由于FLOW不包含包级细节，我们通过生成每个长度为(cid:2)的流量随机数k个包来模拟独立包采样的效果，这些包遵循二项分布B1/N ((cid:2), k)。此过程忽略了流量分割，但使用类似于[9]中定理1的结果，我们可以证明，对于N = 100的采样周期，总采样流量数仅被低估约10%。

### 8. 受感染主机数量的估计

作为一个具体的例子，我们希望估计在网络攻击中被攻陷并发送攻击流量的主机数量。特别是，我们希望估计发送到特定收集器或一组收集器的采样流量统计信息中的此类主机数量。结合路由信息，我们可以识别网络不同区域中的受感染主机数量。

最近的一个攻击实例是2003年1月25日开始活动的MS SQL服务器蠕虫[17]。受感染的主机向随机选择的目标IP地址发送一系列攻击包。源IP地址未被伪造。攻击包具有以下特征：一个404字节的UDP包，目标端口为1434。由于攻击包的目标IP地址从包到包是随机选择的，因此在同一攻击者发起的流中出现相同目标IP地址的两个攻击包的可能性非常小。实际上，[17]报告了直接观察到的最大攻击速率为每秒26,000次扫描。在这种速率下，给定32位地址在30秒内重复出现的概率约为0.02%。因此，可以简单地假设所有攻击包都产生单个包流统计信息。

假设以概率p = 1/N进行包采样。由于原始流由一个包组成，每个攻击流在采样流统计信息中出现的概率为p。因此，计算不同的源IP地址数量会低估受感染主机的数量：某些主机可能没有任何攻击包被采样。

我们可以将检测主机数量的问题映射到之前解决的问题上。对于采样流统计信息中表示的每个攻击主机（即匹配配置文件的源IP地址），我们在采样流统计信息中计算检测到的攻击流数量i。设gi表示源i测量攻击流的绝对频率。然后我们使用估计器(cid:5)f (4)估计实际源i攻击流的主机分布。受感染主机的总数估计为：

我们在COS数据集上测试了该方法。在跟踪数据中，有4,542,157个蠕虫包来自49,200个主机。然而，分布尾部高度偏斜：三个主机分别产生了3,005,083、978,841和38,770个蠕虫包，即至少占总蠕虫包的88%。其他主机各自产生的包数均少于2,250个。我们推测，产生最多包数的主机位于采集跟踪数据的校园内；在这种情况下，大多数随机选择的目标地址将在外部网络上，从而会被路由到跟踪收集器。

我们对N = 10和N = 100进行了攻击主机总数的推断。对于N = 10，取jmax = 50；有M+ = 72个主机产生了超过50个包。推断分布的振荡行为在大约100次迭代后开始。此时，有43,403个推断主机；加上M+，这大约是真实数量的88%。对于N = 100，取jmax = 10；有M+ = 16个主机产生了超过10个采样包。推断分布的振荡行为在大约1000次迭代后开始。此时，有27,178个推断主机；加上M+，这大约是真实数量的55%。相比之下，采样主机数量分别为N = 10时的14,667个，以及N = 100时的3,469个。

对于我们的问题，一阶未经平滑处理的Jackknife估计器Duj1[13]的形式为Duj1(N) = d(N)/(1 - (1 - 1/N)g1/q(N))，其中d(N)是采样跟踪中表示的主机数量，q(N)是采样包的数量。Duj1(10) = 14,912和Duj1(100) = 3,672，与采样主机数量相差不大。[13]中推荐的其他估计器是对Duj1的改进，表现出大致相同的行为。公平地说，这些估计器适用于采样率不太低的情况；它们通过有限数量的矩来表示频率分布，无法捕捉实际频率的高变异性。

### 9. 结论和未来工作

本文旨在通过从采样包流编译的流统计信息来理解互联网流量的详细流统计信息。越来越多的情况下，只有采样流统计信息可用，需要推断来确定原始未采样流量的流特性。

在本文中，我们提出了两种推断方法。缩放方法编码了一个启发式规则，即当采样1/N个包时，由于采样流的大约1/N个包被采样，原始流的长度应该是采样流的N倍。为了固定这一点，我们需要估计未采样流的数量，这需要提取额外的信息，例如采样的SYN包数量。

在缩放方法中，难点在于调整最低阶权重以更好地反映底层分布。显然，可以通过扩展这种方法来更好地调整长流的权重分布。一个开放的问题是，是否可以使用类似的分析来在没有协议信息的情况下估计未采样流的数量。

EM算法是一种迭代的ML估计流长度频率的方法。它不需要协议级信息，尽管它可以利用这些信息。其灵活性是以计算复杂性和对推断流总数的较少控制为代价的。该方法的主要挑战是选择一个好的终止标准。长时间迭代会导致推断分布尾部出现一些振荡行为。我们的经验法则是，在这种振荡变得明显之前终止迭代。在这一点上，分布头部的估计被发现是合理的准确，最坏情况下在两倍以内，有些情况甚至可以达到几个百分点。在未来的工作中，我们计划通过二阶方法增强EM方法以实现更快的收敛。另一个途径是使用先验统计模型来通过惩罚似然[15]使推断分布符合模型分布。

### 致谢

感谢Jia Wang编写了实验中使用的EM推断算法的一个版本，以及Balachander Krishnamurthy和Joerg Michael在某些数据集方面的帮助。

### 参考文献

[略]

---

这样优化后的文本更加清晰、连贯和专业。希望对你有帮助！