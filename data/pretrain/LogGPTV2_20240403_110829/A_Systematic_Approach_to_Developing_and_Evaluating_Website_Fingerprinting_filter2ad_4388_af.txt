For reference, we also give the overhead ratios for Tor. Tamaraw
achieves its best overhead ratio in a high-security/high-overhead
conﬁguration that may not be practical for most users. Therefore,
we also report Tamaraw’s performance in a more feasible conﬁgu-
ration with overhead comparable to the best BuFLO conﬁguration
in our experiments. Even with this restriction, Tamaraw has an
overhead ratio less than a sixtieth of BuFLO.
6.2.3 Open-world Performance
Figure 2 shows the TDR in the open-world for the Alexa top
100 sites when they face the ideal adversary and are defended by
BuFLO, Tamaraw (at 200% and 687% overhead), or no defense,
respectively. To compute these curves, we build an ideal closed-
world classiﬁer on the Alexa top 800 sites. The ideal attacker is
based on the ambiguity sets described above. We then compute the
 0 0.5 1 1.5 2 2.5 3 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8Bandwidth Overhead (x100%)Adversarial Accuracy (ε)Non-Uniform BoundTamarawBuFLOTor 0 0.2 0.4 0.6 0.8 1 10 20 30 40 50 60 70 80 90 100True Discovery RateSite IndexNo DefenseBuFLO vs. Optimal AttackTamaraw (OH: 200%) vs. Optimal AttackTamaraw (OH:687%) vs. Optimal Attack9. ACKNOWLEDGMENTS
We would like to thank Scott E. Coull, Andriy Panchenko, and
Kevin P. Dyer for their correspondence with us, which helped us
improve the paper. We thank NSERC, ORF, and The Tor Project for
funding this project. This work was made possible by the facilities
of the Shared Hierarchical Academic Research Computing Net-
work (SHARCNET: www.sharcnet.ca) and Compute/Calcul
Canada.
10. REFERENCES
[1] Alexa — The Web Information Company. www.alexa.com.
[2] G. D. Bissias, M. Liberatore, D. Jensen, and B. N. Levine.
Privacy Vulnerabilities in Encrypted HTTP Streams. In
Privacy Enhancing Technologies, pages 1–11. Springer,
2006.
[3] X. Cai, X. Zhang, B. Joshi, and R. Johnson. Touching from a
Distance: Website Fingerprinting Attacks and Defenses. In
Proceedings of the 2012 ACM Conference on Computer and
Communications Security, pages 605–616, 2012.
[4] S. Chen, R. Wang, X. Wang, and K. Zhang. Side-Channel
Leaks in Web Applications: A Reality Today, a Challenge
Tomorrow. In Security and Privacy (SP), 2010 IEEE
Symposium on, pages 191–206. IEEE, 2010.
[5] K. Dyer, S. Coull, T. Ristenpart, and T. Shrimpton.
Peek-a-Boo, I Still See You: Why Efﬁcient Trafﬁc Analysis
Countermeasures Fail. In Proceedings of the 2012 IEEE
Symposium on Security and Privacy, pages 332–346, 2012.
[6] D. Herrmann, R. Wendolsky, and H. Federrath. Website
Fingerprinting: Attacking Popular Privacy Enhancing
Technologies with the Multinomial Naïve-Bayes Classiﬁer.
In Proceedings of the 2009 ACM workshop on Cloud
computing security, pages 31–42, 2009.
[7] A. J. Hoffman and J. B. Kruskal. Integral boundary points of
convex polyhedra. In M. JÃijnger, T. M. Liebling, D. Naddef,
G. L. Nemhauser, W. R. Pulleyblank, G. Reinelt, G. Rinaldi,
and L. A. Wolsey, editors, 50 Years of Integer Programming
1958-2008, pages 49–76. Springer Berlin Heidelberg, 2010.
[8] I. Keller and C. Tompkins. An Extension of a Theorem of
Dantzig’s. Linear Inequalities and Related Systems, Annals
of Mathematics Studies, 38:247–254, 1956.
[9] M. Liberatore and B. Levine. Inferring the Source of
Encrypted HTTP Connections. In Proceedings of the 13th
ACM Conference on Computer and Communications
Security, pages 255–263, 2006.
[10] L. Lu, E.-C. Chang, and M. C. Chan. Website Fingerprinting
and Identiﬁcation Using Ordered Feature Sequences. In
Computer Security–ESORICS 2010, pages 199–214.
Springer, 2010.
[11] X. Luo, P. Zhou, E. W. Chan, W. Lee, R. K. Chang, and
R. Perdisci. HTTPOS: Sealing Information Leaks with
Browser-side Obfuscation of Encrypted Flows. In NDSS,
2011.
[12] A. Panchenko, L. Niessen, A. Zinnen, and T. Engel. Website
Fingerprinting in Onion Routing Based Anonymization
Networks. In Proceedings of the 10th ACM Workshop on
Privacy in the Electronic Society, pages 103–114, 2011.
[13] M. Perry. Experimental Defense for Website Trafﬁc
Fingerprinting. https:
//blog.torproject.org/blog/experimental-
defense-website-traffic-fingerprinting,
September 2011. Accessed Feb. 2013.
Figure 3: Packet lengths observed when loading one instance
of each of Alexa’s top 800 sites. Packets sized 1500 bytes are
discarded.
Figure 4: The lower-left boundary of the two-dimensional feasi-
bility region of size and time overhead for Tamaraw when vary-
ing ρout and ρin. Our chosen parameters and the overhead of
BuFLO on the same data set are marked. The overhead in-
cludes the padding mandated by L = 100.
[14] M. Perry. A critique of website ﬁngerprinting attacks.
https:
//blog.torproject.org/blog/critique-
website-traffic-fingerprinting-attacks,
November 2013.
[15] M. Perry, E. Clark, and S. Murdoch. The Design and
Implementation of the Tor Browser [DRAFT].
https://www.torproject.org/projects/
torbrowser/design/. Accessed Oct. 2013.
[16] P. Seymour. Decomposition of regular matroids. Journal of
Combinatorial Theory, Series B, 28:305–359, 1980.
[17] T. Wang and I. Goldberg. Comparing website ﬁngerprinting
attacks and defenses. Technical Report 2013-30, CACR,
2013. http://cacr.uwaterloo.ca/
techreports/2013/cacr2013-30.pdf.
[18] T. Wang and I. Goldberg. Improved Website Fingerprinting
on Tor. In Proceedings of the 12th ACM Workshop on
Privacy in the Electronic Society, 2013.
[19] C. Wright, S. Coull, and F. Monrose. Trafﬁc Morphing: An
Efﬁcient Defense against Statistical Trafﬁc Analysis. In
Proceedings of the 16th Network and Distributed Security
Symposium, pages 237–250, 2009.
APPENDIX
A. LOWER BOUND PROOFS
Suppose websites w1, . . . , wn have sizes s1  j, pij(cid:48) = 0.
3. For all j, pkj ≤ pk+1,j for k ∈ [1, i], where si ≤ j  pk+1,j for some k ∈ [1, i], where si ≤
j  j.
j(cid:48)=sk+1
pk+1,j(cid:48) = 1.
Thus we must have that:(cid:80)j
(cid:80)j
pkj(cid:48) >(cid:80)j
j(cid:48)=sk+1
j(cid:48)=sk
This also implies that pkj (cid:54)= 0. Thus, by Item 2, pkj(cid:48) =
maxi pij(cid:48) for all j(cid:48) ∈ {sk, . . . , j − 1}. This implies that
pk+1,j(cid:48) = 1, a contradicition.
Since pij is non-zero only if j ∈ {s1, . . . , sn}, we can relabel
the pij to be the probability that the defense transmits sj bytes
during a load of website wi.
Lemma 1, Item 3 implies that maxi pij = pii, so the security
constraint can be re-written as(cid:80)n
i=1 pii ≤ n.
Now that the security constraint is a linear function of the pij
variables, we can formulate a linear program for computing the
optimal pij values:
n(cid:88)
n(cid:88)
j=i
subject to the constraints
i=1
minimize
(a) (cid:80)n
(b) (cid:80)n
(c)
i=1 pii ≤ n
j=i pij = 1
0 ≤ pij ≤ 1
pijsj
(the bandwidth cost)
( non-uniform security)
(pij are probabilities)
LEMMA 2. The above linear program has an integral solution.
PROOF. Linear programs with Totally Unimodular (TU) con-
straint matrices and integral objective functions have integral so-
lutions [7]. We prove that the constraint matrix, A (derived by
the constraints (a), (b), and (c) of the above LP), is TU. To prove
TU-ness of A, it is sufﬁcient to prove the following [8]: (i) Every
column contains at-most 2 non-zero entries, (ii) Every entry is 0,
1, or -1, (iii) If two non-zero entries in any column of A have the
same sign, then the row of each belongs in two disjoint partitions
of A.
Since the set of TU matrices is closed under the operation of
adding a row or column with at-most one non-zero entry [16], we
may delete the 2n rows of A corresponding to constraint (c) and
prove that the remaining constraint matrix A(cid:48) satisﬁes the TU con-
ditions (i) - (iii).
Observe the following properties of A(cid:48):
• There are n rows (WLOG, rows 1 to n) induced by the con-
straint (a). These are such that: Ai,(i−1)n, . . . , Ai,in−1 = 1,
∀i ∈ {1, . . . , n} and 0 for all other entries. Therefore, each
column of the partition B composed of these n rows contains
only a single non-zero entry (i.e., +1).
• There is only 1 row (WLOG, row n + 1) induced by the
constraint (b). This row has the form: An+1,j = 1, ∀j ∈
{12, . . . , n2} and 0 for all other entries. Each column of the
partition C composed of this single vector may contain only
a single non-zero entry (i.e., +1).
From the above properties, it is clear that matrix A(cid:48) is TU since:
Each column contains at-most 2 non-zero entries (+1) and it may
be partitioned into matrices B and C such that condition (iii) is
satisﬁed. Therefore, the matrices A(cid:48) and A are TU and the LP
describing A has only integral optima.
In an integral solution of the linear program, all the probabilities
are 0 or 1, so the solution is equivalent to a function f : S → S
satisfying
• |f (S)| ≤ n.
• (cid:80)n
i=1 f (si)/(cid:80)n
i=1 si ≤ BWRatioD(W ).
We now show there is a similar function for any deterministic
uniformly secure defense D. Set f (si) = bi where bi is the num-
ber of bytes transmitted when the defense D loads website wi.
Since D does not compress or truncate websites, we must have
bi ≥ maxs∈f−1(bi) s for all i. Observe that we can assume bi =
maxs∈f−1(bi) s without harming security or efﬁciency, so that f :
S → S. Thus f satisﬁes the security constraint mini |f−1(si)| ≥
1/, and(cid:80)n
i=1 f (si)/(cid:80)n
i=1 si ≤ BWRatioD(W ).
LEMMA 3. The mapping function f corresponding to an opti-
mal non-uniformly -secure defense, or a deterministic uniformly
-secure defense, is monotonic.
PROOF. Consider any partition of {s1, . . . , sn} into sets S1,
. . . , Sk. Let mi = maxs∈Si Si. Without loss of generality, as-
sume m1 ≤ m2 ≤ ··· ≤ mk. Now consider the monotonic
i | = |Si|. Let
allocation of traces into sets S∗
i ≤ mi for all i, i.e. the new
m∗
allocation has lower bandwidth.
s. Observe that m∗
k where |S∗
i = maxs∈S∗
1 , . . . , S∗
Since the number of sets in the partition and the sizes of those
sets are unchanged, this new allocation has the same uniform and
non-uniform security as the original, but lower bandwidth. Hence
the optimal f must be monotonic.
i