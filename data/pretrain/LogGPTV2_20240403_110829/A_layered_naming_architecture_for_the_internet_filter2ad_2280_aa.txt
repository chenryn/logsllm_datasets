# A Layered Naming Architecture for the Internet

## Authors:
- Hari Balakrishnan
- Karthik Lakshminarayanan
- Sylvia Ratnasamy
- Scott Shenker
- Ion Stoica
- Michael Walfish

### Abstract
The current Internet relies on a single level of name resolution, DNS, which translates user-level domain names into IP addresses. This paper argues for a three-level naming and resolution architecture: from user-level descriptors to service identifiers; from service identifiers to endpoint identifiers; and from endpoint identifiers to IP addresses. These additional layers (1) allow services and data to be directly and persistently named, (2) seamlessly accommodate mobility and multi-homing, and (3) integrate middleboxes like NATs and firewalls into the Internet architecture. We further argue that flat names are suitable for service and endpoint identifiers, necessitating scalable resolution, which can be provided by distributed hash tables (DHTs).

### Categories and Subject Descriptors
- C.2.5 [Computer-Communication Networks]: Local and Wide-Area Networks—Internet
- C.2.1 [Computer-Communication Networks]: Network Architecture and Design
- C.2.4 [Computer-Communication Networks]: Distributed Systems—Distributed databases

### General Terms
- Design

### Keywords
- Naming, Internet architecture, name resolution, distributed hash tables, middleboxes, global identifiers

### Affiliations
- MIT Computer Science and Artificial Intelligence Lab
- UC Berkeley, Computer Science Division
- Intel Research, Berkeley
- International Computer Science Institute (ICSI)

### Introduction
Despite its success, the Internet's architecture is far from ideal, and its increasing ubiquity has made its flaws more evident. The case for architectural change is strong, as evidenced by numerous critiques and proposals from the research community. However, the sheer size of the installed router infrastructure makes significant changes to IP nearly impossible, as seen in the decade-long struggle to deploy IPv6.

Instead of modifying routers, we focus on improving the naming architecture. While this approach does not address issues inherently involving routers, it is crucial for many other problems. The current Internet has only two global namespaces, DNS names and IP addresses, both tied to pre-existing structures. This rigidity and paucity cause various architectural issues. For example, the Internet lacks a mechanism for directly and persistently naming services and data, which are instead named relative to their host locations. This makes it inconvenient to move or replicate services and data, treating them as second-class network citizens.

Additionally, users and administrators often resort to architecturally problematic middleboxes like NATs and firewalls because they cannot achieve similar functionality within the architecture. These middleboxes violate IP semantics and make the Internet application-specific.

To address these issues, we propose a four-layer naming framework: user-level descriptors, service identifiers (SIDs), endpoint identifiers (EIDs), and IP addresses. This architecture offers several benefits: (1) services and data become first-class Internet objects, (2) mobility and multi-homing are gracefully accommodated, and (3) middleboxes can be interposed on the data path between endpoints.

Our proposal builds on existing work, including Nimrod, HIP, UIP, i3, and SFR. We also require a scalable name resolution infrastructure, which can be provided by DHTs.

### Design Principles
We present four basic design principles essential for the nature and use of Internet names.

#### Names and Protocols
**Principle #1:** Names should bind protocols only to the relevant aspects of the underlying structure, avoiding unnecessary limitations on flexibility and functionality.

This principle is often violated in today’s architecture. Applications requesting a service or data care only about the identity or content, not the specific end-host. However, DNS-based names force applications to resolve names to IP addresses, binding requests to specific network locations. This violates Principle #1 by tying data and services to particular end-hosts and their network locations.

To rectify this, we introduce two new naming layers:
1. **Service Identifiers (SIDs):** Persistent names for services and data, independent of the hosting endpoint.
2. **Endpoint Identifiers (EIDs):** Topologically independent identifiers for hosts, allowing transport protocols to refer to endpoints without being bound to IP addresses.

These new layers require additional name resolution: from SIDs to EIDs and from EIDs to IP addresses. When an application interacts with a service, it initiates a session using the service's SID, resolves it to one or more EIDs, and then uses those EIDs to establish transport-layer connections.