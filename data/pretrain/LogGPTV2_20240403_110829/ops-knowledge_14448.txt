User: I want to create global scope constant dict, that would be accessed by multiple views. 
For now I see scenario after deploy: 
Fetching big file, creating a dict, holding this dict in memory. This process can be re-executed by administrator.
Assistant: You can define the dict with in a module, then import it where ever you wish to refer to it, or you could load it from the datastore, and set the value in the module.  You would do this during a warmup request.
Defining it in a module, means to alter the contents will require de-deploying the app.
Defining it in the datastore, means instances will reload any new definition on startup.
You could also set up a handler which could trigger a refresh if reading from the datastore.
Defining directly in the datastore means its pickled state needs to be less than 1MB (compressed) if you use a BlobProperty with compressed=True and your using ndb.
Other variations similiar to module definition would be to load it from a yaml file etc..  You could define the dict in the app.yaml as an environment variable.  
There are many options, without knowing the specifics of your use cases it's hard to recommend a particular strategy.