使
时开启Linux的大内存内核支持。
过8GB的物理内存都将被浪费。因此，
大的物理内存，会造成内存资源浪费，例如，在一个32位处理器的Linux操作系统上，超
用程序的性能将明显下降。要保证应用程序的高性能运行，物理内存一定要足够大：但是过
虚拟内存两种方式，虚拟内存虽然可以缓解物理内存的不足，但是占用过多的虚拟内存，应
用也将变得缓慢，甚至失去响应；内存太大，导致资源浪费。Linux系统采用了物理内存和
CPU的配置和性能放在主要位置。
RAID1：也就是磁盘镜像，通过把一个磁盘的数据镜像到另一个磁盘上，最大限度地
RAID0：通过把多块硬盘粘合成一个容量更大的硬盘组，提高了磁盘的性能和吞吐量。
根据磁盘组合方式的不同，RAID可以分为RAID0、RAID1、RAID2、RAID3、RAID4
通过RAID技术组成的磁盘组，就相当于一个大硬盘，用户可以对它进行分区格式化、
RAID的英文全称为：Redundant Array of Independent Disk，即独立磁盘余阵列，简
可能出现内存性能瓶颈的应用有打印服务器、数据库服务器、静态Web服务器等，对于
用2GB的内存，这样一来，即使系统有再大的内存，应用程序也无法“享”用。解决的办
磁盘的I/O性能直接影响应用程序的性能，在一个有频繁读写操作的应用中，如果磁盘
3.磁盘I/O性能
由于处理器寻址范围的限制，在32位Linux操作系统上，应用程序单个进程最大只能
内存的大小也是影响Linux性能的一个重要的因素。内存太小，系统进程将被阻塞，应
2.内存
可能出现CPU瓶颈的应用有邮件服务器、动态Web服务器等。对于这类应用，要把
www.Linuxidc.
，要使用更大的内存，建议安装64位的操作系统，同
第10章基于Linux
服
务
.com
居的性能分析与优化251
鼎
---
## Page 268
Linux公社（www.LinuxIDC.com）是专业的Linux系统门户网站，实时发布最新Linux资讯。
还是有一定作用的。
16GB以上，原则上可以设置SWAP为0，但并不建议这么做，因为设置一定大小的SWAP
存大于4GB小于16GB，可以设置SWAP大小等于或略小于物理内存即可：如果内存大小在
内存较小（物理内存小于4GB），一般设置SWAP交换分区大小为内存的2倍：如果物理内
了所谓虚拟内存是物理内存两倍的要求，但是SWAP的设定还是不能忽略，根据经验，如果
RAID级别，在磁盘底层对系统进行优化操作。
对数据安全性要求也很高的应用，可以选择RAID0+1。这样通过不同的应用需求设置不同的
无特殊要求，并要保证数据安全性的应用，可以选择RAID5；对于对读写要求都很高，并且
对读写没有特别要求的应用，可以把磁盘做成RAID1；对于对读操作要求较高，而对写操作
频繁而对数据安全性要求不高的应用，可以把磁盘做成RAIDO；而对于对数据安全性较高，
分配都直接影响以后系统的运行性能，例如，磁盘分配可以遵循应用的需求：对于读写操作
文件系统等几个方面进行衡量，下面依次进行简单介绍。
10.3.2
网络，带宽问题对应用程序性能造成的影响正在逐步降低。
以保证应用程序在网络上畅通无阻的运行。幸运的是，现在的网络一般都是千兆带宽或光纤
素，低速的、不稳定的网络将导致网络应用程序的访问阻塞，而稳定、高速的网络带宽，可
别，
磁盘故障，而不影响数据可用性，并具有快速读/写能力。
种方式的数据除分布在多个盘上外，每个盘都有其镜像盘，提供全见余能力，同时允许一个
很高，写入效率一般，至少需要3块盘。允许一块磁盘故障，而不影响数据的可用性。
而，成本最高，多用在保存重要数据的场合。
252
随着内存价格的降低和内存容量的日益增大，对虚拟内存SWAP的设定，现在已经没有
2.内核参数优化
系统优化可以从安装操作系统开始，
基于操作系统的性能优化也是多方面的，可以从系统安装、系统内核参数、网络参数、
从而保证应用程序在磁盘方面达到最优性能。
通过了解各个RAID级别的性能，可以根据应用的不同特性，选择适合自身的RAID级
RAID0+1：把RAID0和RAID1技术结合起来就成了RAID0+1，至少需要4块硬盘。此
系统安装完成后，
1.系统安装优化
Linux下的各种应用，
4.网络宽带
RAID5：采用了磁盘分段加奇偶校验技术，从而提高了系统的可靠性。RAID5读出效率
操作系统相关资源
第4篇
WwW.
运维监控与性能优化篇
优化工作并没有结束，接下来还可以对系统内核参数进行优化，不
一般都是基于网络的，因此网络带宽也是影响性能的一个重要因
.Linuxidc.com
当安装Linux系统时，磁盘的划分、SWAP内存的
---
## Page 269
Linux公社（www.LinuxIDC.com）是专业的Linux系统门户网站，实时发布最新Linux资讯。
实是一个经验值，如表10-1所示。
一个严格的定义，针对不同的系统和应用也没有一个统一的说法，因此，这里提供的标准其
统之间的性能融合，使应用高效、稳定地运行。但是，衡量系统资源利用率好坏的标准没有
10.4
优化过程的重中之重，这就对程序架构设计人员和程序开发人员提出了更高的要求。
他方面都达到了最优状态，整个应用系统还是性能低下的。所以，对应用程序的优化是性能
10.3.3
理机制，特有的搜寻方式，海量磁盘存储等优点。
优点是访问性能和安全性大幅提升。ReiserFS具有高效、合理利用磁盘空间，先进的日志管
平衡树结构来管理数据，包括文件数据、文件名及日志支持等。与ext2/ext3相比，其最大的
快速写入性能等优点。
高带宽的访问。因此，XFS极具伸缩性，非常健壮，具有优秀的日志记录功能、可扩展性强、
通过分布处理磁盘请求、定位数据、保持Cache的一致性来提供对文件系统数据的低延迟、
想没有太大变化，都是早期UNIX家族基于超级块和inode的设计理念设计而成的。
Linux上标准的文件系统，ext3是在ext2基础上增加日志形成的。从VFS到ext3，其设计思
ext3、xfs、ReiserFS。可根据不同的应用，选择不同的文件系统。
ip_local_por_range、net.ipv4.tcp_tw_reuse、net.core.somaxconn 等网络内核参数。
署的是Web应用，那么就需要根据Web应用特性进行网络参数的优化，例如修改net.ipv4.
shmall）、系统信号量（kernel.sem）、文件句柄（fs.file-max）等参数进行优化设置；如果部
Oracle数据库应用，那么就需要对系统共享内存段（kermel.shmmax、kernel.shmmni、kermel.
过内核参数的优化要和系统中部署的应用结合起来整体考虑。例如，如果系统部署的是
性能调优的主要目的是使系统能够有效地利用各种资源，最大可能地发挥应用程序和系
ReiserFS是在HansReiser领导下开发出来的一款高性能的日志文件系统，它通过完全
XFS文件系统是SGI开发的一个高级日志文件系统，后来移植到了Linux系统下。XFS
应用程序的优化其实是整个优化工程的核心，如果一个应用程序存在bug，那么即使其
Linux标准文件系统是从VFS开始的，然后是ext，接着就是ext2，应该说，ext2是
文件系统的优化也是系统资源优化的一个重点，在Linux下可选的文件系统有ext2、
3.文件系统优化
系统性能分析标准和优化原则
应用程序软件资源
Www.Linuxidc.
第10章基于Linux服务器的性能分析与优化253
.com
---
## Page 270
Linux公社（www.LinuxIDC.com）是专业的Linux系统门户网站，实时发布最新Linux资讯。
10.5.2以动态内容为主的Web应用
必须考虑的一个因素。
带宽不够，就会阻塞网络，影响访问。因此，在构建基于Web的网络应用时，网络带宽也是
内存的使用会引起磁盘I/O的增大，当磁盘I/O增大时，CPU的开销也随之增加。
可以缓解磁盘随机读的压力；当内存过小或者内存不足时，系统就会使用虚拟内存，而虚拟
务器可以大大提高并发访问性能。常用的Cache软件有Squid、Varinsh等。
作，因为直接从内存读取数据要比从硬盘读数据效率高很多，所以在Web前端搭建Cache服
前端还可以搭建Cache服务器，也就是将静态资源文件缓存到操作系统内存中直接进行读操
户端访问，此时就需要由多台Web服务器组成负载集群系统。为了实现更高效的访问，在最
时，可以直接对外提供服务，但是在有很大并发请求时，单一的Web服务无法支撑大量的客
或Nginx，因为这两个HTTP服务器对静态资源的处理非常迅速和高效。在Web访问量不大
10.5.1
10.5
磁盘
CPU
254
在高并发访问时，还存在另外一个问题，就是网络带宽瓶颈，如果客户端访问量很大且
Cache服务器虽然可以提高访问性能，但要求服务器有很大的内存，当系统内存充足时
这类应用的一个特点是频繁地执行写操作，例如Java、PHP、Perl、CGI等，会导致
这类应用的一个主要特点是小文件居多，并且读操作频繁，Web服务器一般为Apache
口SwapOut即so，表示虚拟内存的页导出，即从RAM交换到SWAPDISK。
口SwapIn即si，表示虚拟内存的页导人，即从SWAPDISK交换到RAM。
口iowait%表示CPU等待输人输出完成时间的百分比。
口sys%表示CPU处在系统模式下的时间百分比。
口user%表示CPU处在用户模式下的时间百分比。
其中：
影响性能因素
几种典型应用对系统资源使用的特点
以静态内容为主的Web应用
第4篇
www.Linuxidc.com
运维监控与性能优化篇
iowait % = 50%
More Swap In & Swap Out
user% + sys% >=90%
精糕
---
## Page 271
高性能和减少服务器部署的角度考虑，推荐采用Lighttpd HTTP服务器，而不是采用传统的
Linux公社（www.LinuxIDC.com）是专业的Linux系统门户网站，实时发布最新Linux资讯。
量极高时，可以采用多台、多点服务器分流的形式分担下载负荷。在HTTP服务器方面，从
10.5.4
访问数据库也可为程序提供数据。现在应用很广泛的Memcached就是基于这个原理。
Server之间增加一层数据缓存层，在系统内存中建立被频繁请求对象的副本，这样一来，不
用缓存可大幅减少数据库的读取操作，改由内存来提供数据。比如可以在WebServer和DB
复制给负责读的服务器，通过读写的协作提高系统整体性能。
力和需求，分别建立两台结构完全相同的数据库服务器，将负责写的服务器上的数据，定时
时对数据库进行读和写的操作，是效率极低的一种访问方式，较好的做法是根据读、写的压
该在程序代码中避免。
新时，数据更新量大或更新频繁，也会造成磁盘写操作激增，出现写操作的瓶颈。这些也应
量的where子句，order by、group by排序语句等，容易使CPU出现瓶颈。最后，当数据更
表会造成磁盘读操作激增，进而出现读操作等待的情况。同时，数据库中查询语句复杂，
过索引进行关联处理，这样可以避免查询大表造成的性能问题，因为表太大时，查询遍历全
取数据库的负载均衡方案，通过软件负载均衡或硬件负载均衡的方式提高数据库访问性能。
也是优化数据库应用的一个常用做法。如果客户端用户对数据库的请求过大，还可以考虑采
据库服务器的磁盘选择RAID5、RAIDO+1等RAID级别。将Web Server与DB Server分高
最基本的做法就是为数据库服务器配置较大的内存和读写较快的磁盘阵列。例如，可以为数
10.5.3
之类的软件加快程序与数据库之间的访问效率。
资源的平衡点，例如配置较大的内存和高性能的CPU，而在软件方面可通过如Memcached
内存的增加会导致磁盘写操作频繁，进而消耗CPU资源。因此要寻求一个硬件资源和软件
的分配。由于过多的进程会消耗大量系统内存，如果内存不足，就会使用虚拟内存，而虚拟
将对系统整体性能的提高有很大帮助。
消耗CPU资源。因此，一个基于动态程序的Web应用，应该选择多个性能较高的CPU，这
CPU资源消耗严重。因为动态程序的执行要进行编译、读取数据库等操作，而这些操作都会
静态资源下载服务器的主要特点是带宽消耗严重，同时对存储性能要求也很高。在下载
通过缓存方式也可以提高数据库的性能，缓存是数据库或对象在内存中的临时容器，使
在日常应用中，还有一种方法可以显著提高数据库服务器的性能，那就是读写分离。同
对于数据库中过大的表，可以考虑进行拆分，也就是将一个大表拆分成多个小表，再通
数据库应用的一个主要特点是消耗内存和磁盘I/O，而对CPU的消耗并不是很大，因此
基于动态内容的Web应用在高并发访问时，系统执行的进程数会很多，因此要注意负载
软件下载应用
数据库应用
www.Linuxidc .
第10章基于Linux服务器的性能分析与优化
.com
255
大
PDG
---
## Page 272
Linux公社（www.LinuxIDC.com）是专业的Linux系统门户网站，实时发布最新Linux资讯。
动等进行监视，不足之处是无法对某个进程进行深人分析。
默认安装了此命令工具。利用vmstat命令可以对操作系统的内存信息、进程状态、CPU活
10.6.1
10.6
结构方面，
结合的方法；在代理服务器方面，可以采用分段缓存、动态缓存等管理策略：在流媒体体系
速率，最大程度地保障用户观看视频的流畅性：在调度方面，可以采用静态调度和动态调度
式进行优化，进而节省空间，优化存储性能：在传输方面，可以采用智能流技术控制发送的
略及流媒体服务器的体系结构设计等几个方面进行考虑。在存储方面，需要对视频的编码格
要问题。
到高清晰的、流畅的画面，如何最大限度地节省网络带宽，这些都是流媒体应用要解决的首
性能瓶颈是网络带宽和存储系统带宽（主要是读操作）。面对海量用户，如何保障用户接收
10.5.5
而Lighttpd使用异步I/O方式，处理资源下载的并发能力远远超过Apache。
Apache服务器，原因是Apache使用阻塞模式的I/O操作，性能相对较差，
256
对于流媒体服务器的优化，可以从存储策略、传输策略、调度策略、代理服务器缓存策
表示每3秒更新一次输出信息，循环输出，按Ctrl+c停止输出。
count,
口delay，表示两次输出之间的间隔时间。
口-n，表示在周期性循环输出时，输出的头部信息仅显示一次。
口-V，表示打印出版本信息，是可选参数。
vmstat [-V][-n][delay [count]]
vmstat命令的语法如下：
vmstat是VirtualMeomory Statistics（虚拟内存统计）的缩写，很多Linux发行版本都
流媒体主要应用在视频会议、视频点播、远程教育、在线直播等方面，这类应用主要的
vmstat35
vmstat 3
例如：
各个选项及参数含义如下：
vmstat命令
Linux下常见的性能分析工具
，可以采用内存池和线程池技术改善内存消耗和线程过多对性能造成的影响。
流媒体服务应用
第4篇运维监控与性能优化篇
Www.Linuxidc.com
，表示按照“delay”指定的时间间隔统计的次数，默认为1。
，并发能力有限，
PDG
---
## Page 273
0有问题，应该考虑提高磁盘的读写性能。
需要增加系统内存。
Linux公社（www.LinuxIDC.com）是专业的Linux系统门户网站，实时发布最新Linux资讯。
上面这两个值越大，由内核消耗的CPU时间越多。
口system显示采集间隔内发生的中断数。
这里设置的bi+bo参考值为1000，如果超过1000，而且wa值较大，则表示系统磁盘1/
口io项显示磁盘读写状况
在一般情况下，si、so的值都为0，如果si、so的值长期不为0，则表示系统内存不足，
swap
memory
procs
上面每项输出的解释如下：
procs-------memory----------
[root@node1-]#vmstat23
下面是vmstat命令在某个系统中的输出结果：
表示每3秒更新一次输出信息，统计5次后停止输出，
Ocs列表示每秒产生的上下文切换次数。
oin列表示在某一时间间隔内观测到的每秒设备中断数。
obo列表示写到块设备的数据总量（即写磁盘）（kb/s)。
obi列表示从块设备读人数据的总量（即读磁盘）（kb/s)。
Oso列表示由内存调人磁盘，也就是由内存交换区进人内存的内存大小。
Osi列表示由磁盘调人内存，也就是由内存进入内存交换区的内存大小。
ocache列表示page cached的内存数量，一般作为文件系统进行缓存，频繁访问的
obuff列表示buffers cache的内存数量，一般对块设备的读写才需要缓冲。
ofree列表示当前空闲的物理内存数量（以KB为单位）。
Oswpd列表示切换到内存交换区的内存大小（以KB为单位）。如果swpd的值不为
ob列表示在等待资源的进程数，比如正在等待I/O或者内存交换等。
数，说明CPU不足，需要增加CPU。
or列表示运行和等待CPU时间片的进程数，：
文件都会被缓存。如果cache值较大，
0，或者比较大，只要si、so的值长期为0，这种情况一般不用担心，不会影响系
一
bi比较小，说明文件系统效率比较好。
统性能。
swpd
www.Linuxidc.com
162240
162240
162240
free
8304
buff
8304
9304
67032
cache
67032
67032
---swap--
si
第10章基于Linux服务器的性能分析与优化
D
，说明缓存的文件数较多，如果此时io中的
-..--io-..---system--
H
B
：这个值如果长期大于系统CPU的个
1
1009
1010
1007
in
us sy
--.--cpu--.---
1
257
PDG
---
## Page 274
Linux公社（www.LinuxIDC.com）是专业的Linux系统门户网站，实时发布最新Linux资讯。
CPU、运行队列、磁盘I/O、分页（交换区）、内存、CPU中断、网络等性能数据。
10.6.2
和id列的值。
258
口options，命令行选项，sar命令的命令行选项很多，下面只列出常用选项。
各个选项及参数的含义如下：
sar [options][-o filename]
sar命令的语法如下：
sar命令很强大，是分析系统性能的重要工具之一。通过sar指令，可以全面获取系统的
综上所述，在对CPU的评估中，需要重点注意procs项中r列的值和CPU项中us、Sy
根据经验，us+sy的参考值为80%，如果us+sy大于80%，说明可能存在CPU资源不足，
口cpu项显示了CPU的使用状态，此列是关注的重点。
o-y，显示终端设备在采样时间内的活动情况。
O-R，显示进程在采样时间内的活动情况。
0-q，显示了运行队列的大小，它与系统当时的平均负载相同。
O-A，显示系统所有资源设备（CPU、内存、磁盘）的运行状况。
oid列显示了CPU处在空闲状态的时间百分比。
CPU资源很多。