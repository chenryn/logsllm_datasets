配置参数。典型配置参数的作用如下。
·LogFile：定义要分析的Web服务器的日志文件，如果没定义，并且命令行参数也没
有指定文件名，则将STDIN（系统标准输入）作为输入数据源。
·LogType：定义日志类型，可以是elf、ftp或squid，默认是clf
OutputDin：报告的输出目录地址，如果没有指定，输出目录就是当前目录。这个目录
也就是可用浏览器浏览的Web服务器日志分析，
·HostName：定义要做日志分析的Web服务器的主机名，用于报告的标题和URL链接
中，点击URL链接可以转向相应的地址。
·HTMLExtension：设置生成报告的文件扩展名，默认是“html”，也可以根据站点改
成需要的名字。
PageType：定义Webalizer中URL页面访间的类型，一般认为HTML或C请求文档
是页面，面嵌入在页面中的图片和声音不算，如果没有指定，页面的扩展名就是htm*
和cgi，对FTP日志，扩展名是“txt”。
可设置成“Yes”或“NO”，默认是“No”。
SearchEngine：设置搜索引肇和URL中的查询字符串，用于统计访客通过哪些关键词
来找到你的站点。第1个参数是搜索引擎，第2个是URL中关键词的参数名。
此外，Webalizer也可以通过命令行配置或文件配置获取指定位置和格式的Web服务器日
志，定时运行，生成日志分析结果。
2.明察秋毫：使用Webalizer了解网站流量
Linux网站服务器中的日志记录了Web服务器接收处理请求以及运行时错误等各种原始信
息。通过对日志进行统计、分析和综合处理，可以有效地掌握服务器的运行状况，发现和排除
错误原因、了解客户访问分布等，从面更好地加强系统的维护和管理。在Linux操作系统中，
很多Internet站点都是通过Webalizer进行Web服务器日志分析的。由于该软件的使用结果都
是通过Web页面来显示的，所以与Web服务器的联系也更加紧密，
（1）启动Web服务器。使用之前，需要启动Web服务器（只有启动该服务器才能通过Web
页面来查看日志统计的详细情况）。可以通过图形界面启动Apache服务器，也可以通过命令行
启动服务器。启动Web服务器的命令为：
service httpd start
(2）启动webalizer。命令为：
/usr/bin/webalizer-c/etc/wobalizer.conf
（3）查看流量分析结果。Webalizer的分析结果以HTML文件格式保存，从而可以很方便
地通过Web服务器进行浏览。启动Apache服务以及该软件后，就可以通过浏览器来查看Squid
代理服务器的流量分析结果了，在IE的地址栏内输入Apache服务器的地址htp:/127.0.0.1/
usage，即可得到如图8.16所示结果。
图中给出了流量分析的示意图以及一些数据说明，更详细的统计分析数据，可以点击图下
方的“Apr2010”超链接，这里能够显示出更详细的信息，通过分析和查看这些统计图表的结
---
## Page 405
网络安全进阶笔记
果，用户可以清楚地知道Web服务器使用的细节情况，并可以根据情况来对服务器做出适当
的调整和优化。如图8.17所示。
Usage Statistics for localhost.localdomain
图8.16查看Webalizer的流量分析结果
图8.17Webalizer的流量分析示意图
除了支持标准的日志格式，Webalizer还支持多种组合日志格式，这样就可以统计客户情
况以及客户操作系统类型。值得一提的是，现在Webalizer还可以支持wu-ftpd xferlog日志格
式以及Squid日志文件格式，使用范围十分广泛。以Squid日志文件格式为例，它最重要的日
信息，还包括使用时间、请求的内容、客户端信息等。通过Webalizer的集成界面，就可以将
上述大量的Squid日志信息综合起来进行统计，形成可视化的显示结果供网络管理员或者用户
了解当前服务器的使用情况。
小知识：Squid日志格式.Squid是Linux系统下一个缓存Intemet数据的代理服务器软件，用
于接收用户的下载申请，并自动处理所下载的数据，在网络环境下，本地网络管理员
经常可以通过其来代理访问互联网的很多资源，因而对其进行日志审核和管理具有重
400
---
## Page 406
第8章掌握实用的Linux安全工具
大意义，Squid日志管理的功能比较强大，通过查看相关的日志文件，用户可以实时、
准确地了解代理服务器的访问记录、cache的存储状况、cache的访问记录等许多有用
的信息，从而高效地对代理服务器进行管理，
如果需要在Windows系统下对IS服务进行监测，首先下载Webalizer文件，将其解压缩
到某个文件夹中。然后，将此文件夹设置为虚拟目录，同时在该文件夹中新建一个aulorunvbs
文件，运行autorun.vbs，将会在OutputDir所设定的目录下生成一些文件，然后在浏览器中访
问hup/ocalhost/weblog/index.html，即可以网页形式展现Web日志分析报告。实际使用过程
中，通常需要建立一个任务计划，如设定每天24:00执行autorun.vbs，则当天的数据会被自动
统计。autorun.vbs参考代码如下：
Din nyShel1
Dim filename
SetmyShell-wscript.Createobject(*Wscript.Shel1*)
1ogpath*c:\winnt\system32\1ogfiles\w3svc1\*
yearl=right(year(date()),2)
monthl=right(*0*6month(date()),2)
datel=right(*0"&day(date()).2)
filenane=*nc*&yearl6monthl&datel&*.1og*
myShell.Run“webalizer*&logpath &filename
总之，Webalizer简单实用，操作方便，通过参数定义，可以满足一般虚拟主机、虚拟目
录的日志分析要求，绝对是网络安全爱好者的得力助手。这样，我们就可以很方便地通过图形
界面来掌握Web服务器的一举一动了。
8.2.4Linux下的后门和日志工具
攻入Limux系统后，很多入侵者往往就开始得意忘形了。这其中还有一个原因，就是技术
性也要求更高了。下面，我们来看看一些常用的经典工具。
1.从这里延伸：后门和连接工具
(1)HTTPTunnel
软件下载地址为 http://www.http-tuninel.com/html/.
Tunnel的意思是隧道，通常HTTPTunnel被称之为HTTP暗道，它的原理就是将数据伪装
成HTTP的数据形式来穿过防火墙，实际上，它是在HTTP请求中创建了一个双向的虚拟数据
连接来穿透防火墙，说得简单点，就是说在防火墙两边都设立一个转换程序，将原来需要发送
或接收的数据包封装成HTTP请求的格式骗过防火墙，所以它不需要别的代理服务器面直接穿
透防火墙。
HTTPTunnel包括两个程序：htc和hts，其中htc是客户端，而hts是服务器端，现在来看
看是如何用它们的-比如开了FTP的机器的IP是192.168.10.231，本地机器IP是192.168.10.226，
因为防火墙的原因，本地机器无法连接到FTP上。怎么办？现在就可以考虑使用HTTPTunnel
了。过程如下。
①在本地机器上启动HTTPTunnel客户端。用Netstat看一下本机现在开放的端口，会发
40.1...
---
## Page 407
网络安全进阶笔记
现8888端口已在侦昕。
②在对方机器上启动HTTPTunnel的服务器端，并执行命令“hts-f localhost:21 80”，
这个命令的意思是说，把本机的21端口发出去的数据全部通过80端口中转一下，并且开放80
端口作为侦听端口，再用Neststat看一下他的机器，就会发现80端口现在也在侦听状态。
③在本地机器上用FTP连接本机的8888端口，会发现已经连上对方的机器了。那么，
为什么人家看到的是127.0.0.1，而不是192.168.10.231呢？因为我们现在是连接本机的8888
端口，防火墙肯定不会有反应，如果没往外发包，局域网的防火墙肯定就不知道了，现在连接
上本机的8888端口以后，FTP的数据包不管是控制信息还是数据信息，都被htc伪装成HTTP
数据包然后发过去，在防火墙看来，这都是正常数据，相当于欺骗了防火墙。
需要说明的是，这一招的使用需要其他机器的配合，就是说要在他的机器上启动一个hts，
把他所提供的服务，如FTP等重定向到防火墙所允许的80端口上，这样才可以成功绕过防火
墙！肯定有人会问，如果对方的机器上本身就有WWW服务，也就是说他的80端口在侦听，
这么做会不会冲突？HTTPTumnel的优点就在于，即使他的机器以前80端口开着，现在也不会
出现什么问题，重定向的隧道服务将畅通无阻！
(2)Tcp_wrapper
z8r9suddedonasqnd/&oaunoodd/d 
Tep_wrapper是Wietse Venema开发的一个免费软件。Tcp_wrapper的诞生有个小小的故事，
大约1990年，作者所在大学的服务器屡展受到一个外来黑客侵入，因为受害主机的硬盘数据
屡次被rm-rf命令整个抹掉，所以找寻线索极为困难，直到有一天晚上作者在工作的过程中无
意中发现这个黑客在不断地finger受害主机、偷窥受害者的工作。于是，一个想法诞生了：设
计一个软件，使它可以截获发起finger请求的IP，用户名等资料。Venema很快投入了工作，
而 Tep_wrapper也由此诞生！此后，Tep_wrapper随着广泛的应用逐渐成为一种标准的安全工
具。通过它，管理员实现了对inetd提供的各种服务进行监控和过滤。
Tcp_wrapper编译安装成功后，会生成一个tcpd 程序，它可以在inetd.conf这个控制文件
中取代in.telinetd的位置，这样，每当有Telnet的连接请求时，tcpd即会截获请求，先读取管
理员所设置的访问控制文件，合乎要求，则会把这次连接原封不动地转给真正的in.telnetd程序，
由in.telnetd完成后续工作。如果这次连接发起的IP不符合访间控制文件中的设置，则会中断
连接请求，拒绝提供Telnet服务，Tep_wrapper访问控制的实现是依靠hosts.allow、hosts.deny
这两个文件来实现的。如果我们编辑/etc/syslog.conf文件时，加入了日志纪录功能，即：
#tcp wrapper log
local3.info/var/1og/tcplog
编辑结束后，保存文件，在/varlog下会生成tcplog文件，注意这个文件的读写属性。应
该只对root 有读写权限。然后ps-ef|grep syslogd，找出syslogd的进程号，kill-HUP重启syslogd
进程使改动生效。在这里，我们可以预先看一看以后生成的teplog文件内容，如下：
Jul 31 22:00:52www.test.org in.telnetd[4365]:connect from 10.68.32.1
Ju1 31 22:02:10 www.test.org in.telnetd[4389]: connect from 10.68.32.5
Jul 31 22:04:58 sww.test.org in.ftpd[4429]:comnect from 10.68.32.3
Aug 2 02:11:07 www.test.org in.rahd[13660]:connect from 10.68.32.5
Aug 2 02:11:07www.test.org in.rlogind[13659]:connect from10.68.32.1
.402
---
## Page 408
第8章掌握实用的Linux安全工具
从上面我们可以看到，在安装了Tep_wrapper的主机上，系统的每一次连接，Tep_wrapper
都做了记录，它的内容包括时间、服务、状态、IP等，对攻击有很大的参考价值，不过，一定
要记得清除日志了。
(3)rootkit I具:LRK
软件下载地h为htp://packetstormsecurity.org/
rootkit出现于20世纪90年代初，它是攻击者用来隐藏自己的踪迹和保留root访间权限的
工具。通常，攻击者通过远程攻击或者密码猜测获得系统的访问权限。接着，攻击者会在侵入
的主机中安装rookit，然后他会通过rootkit的后门检查系统，看是否有其他的用户登录，如果
户和密码之后，攻击者就会利用这些信息侵入其他的系统。
如果攻击者能够正确地安装rookit并合理地清理了日志文件，系统管理员就会很难察觉系
统已经被侵入，直到某一天其他系统的管理员和他联系或者噢探器的日志把磁盘全部填满，他
才会察觉已经大祸临头了。不过，在系统恢复和清理过程中，大多数常用的命令例如p、df
和ls已经不可信了。许多rootkit中有一个叫做FIX的程序，在安装rootkit之前，攻击者可以
首先使用这个程序做一个系统二进制代码的快照，然后再安装替代程序。FIX能够根据原来的
程序伪造替代程序的3个时间数（atime、ctime、mtime）、date、permission、所属用户和所属用
户组。如果攻击者能够准确地使用这些优秀的应用程序，并且在安装rookit时行为谨慎，就会
让系统管理员很难发现。
下面我们介绍一个非常典型的针对Linux系统的LRK版本6。LinuxRootkit6是一个开放
源码的rookit，经过多年的发展，LinuxRootkit的功能越来越完善，具有的特征也越来越多。
下m我们简单地介绍一下LinuxRootkit包含的各种工具。
首先是隐藏入侵者行踪的程序。为了隐藏入侵者的行踪，LinuxRootkitIV的作者可谓煞费
心机，编写了许多系统命令的替代程序，使用这些程序代替原来的系统命令，来隐藏入侵者的
行踪。这些程序包括：
·Is、find、a一程序会阻正显示入侵者的文件以及计算入侵者文件占用的空间。在
编译之前，入侵者可以通过ROOTKIT_FILES_FILE设置自己的文件所处的位置，默
认是/dev/ptyr。注意如果在编译时使用了SHOWFLAG选项，就可以使用Is-命令列
出所有的文件。这些程序还能自动隐藏所有名字为ptyr、hack.dir和W4r3z的文件。
·ps、top、pidof这儿个程序用来隐藏所有和入侵者相关的进程。
netstat—隐藏出/入指定IP地址或者端口的网络数据流量。
·killall-不会杀死被入侵者隐藏的进程。
ifconfig一如果入侵者启动了噢探器，这个程序就阻止PROMISC标记的显示，使系
统管理员难以发现网络接口已经处于混杂模式下。
·crontab—隐藏有关攻击者的crontab条目。
·tcpd—阻止向日志中记录某些连接。
·syslogd—过滤掉日志中的某些连接信息。
其次是后门程序。木马程序可以为本地用户提供后门：木马网络监控程序则可以为远程用
户提供inetd、rsh、ssh等后门服务，具体因版本而异。随着版本的升级，LinuxRootkitIV的功
能也越来越强大，特征也越来越丰富。
403.
---