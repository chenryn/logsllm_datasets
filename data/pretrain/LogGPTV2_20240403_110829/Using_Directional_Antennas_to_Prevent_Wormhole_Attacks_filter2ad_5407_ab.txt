listens to the carrier in omni mode.    When it receives a 
message,  it  determines  the  zone  on  which  the  received 
signal  power  is  maximal.    It  then  uses  that  zone  to 
communicate with the sender.     
The  zones  are  numbered  1  to  N  oriented  clockwise 
starting  with  zone  1  facing  east.    This  orientation  is 
established with respect to the earth’s meridian regardless 
of  a  node’s  physical  orientation.    This  is  achieved  in 
modern  antennas  with  the  aid  of  a  magnetic  needle  that 
remains collinear to the earth’s magnetic field.    It ensures 
that a particular zone always faces the same direction. 
When  sending  messages,  a node  can work in  omni  or 
directional  mode.    In  omni  mode  signals  are  received 
with a gain Go, while in directional mode with a gain of Gd.   
Since  a  node  in  directional  mode  can  transmit  over  a 
longer  distance,  Gd  >  Go.    The  omnidirectional  and 
directional  gains  can  be  estimated  from  [25].    For  ex-
ample,  when  the  number  of  zones  is  6,  and  the  omni 
transmission  range  is  250m,  then  the  directional  trans-
mission range is 450m [5].    For our simulations, we use 
the same ratio between omni and directional transmission 
distances, but scale the ranges to 40m and 72m. 
4 
5 
3 
6 
π/3  r 
1 
2 
Figure 3.    Directional Antenna with 6 zones.   
Each zone is a wedge with radius r spanning 
π/3 radians.    Zone 1 always faces east.    The 
dashed  circle  shows 
the  omnidirectional 
communication radius. 
5. Protocols 
if 
three 
increasingly  effective  protocols 
Our approach to detecting wormhole attacks depends on 
nodes  maintaining  accurate  sets  of  their  neighbors.    An 
attacker  cannot  execute  a  wormhole  attack 
the 
wormhole transmitter is recognized as a false neighbor and 
its  messages  are  ignored.    One  important  property  of 
directional  antennas  is  a  node  can  get  approximate 
direction information based on received signals.    Next we 
document our assumptions about the network.    Then, we 
describe 
for 
preventing wormhole attacks.    As directional information 
is added, attacks become increasingly difficult to execute 
successfully.    The  first  protocol,  directional  neighbor 
discovery, does not rely on any cooperation between nodes, 
and cannot prevent many wormhole attacks.    By sharing 
the  verified 
information  among  neighboring  nodes, 
neighbor discovery protocol can prevent wormhole attacks 
where  the  attacker  controls  only  two  endpoints  and  the 
victim  nodes  are  at  least  two  hops  distant.    Finally,  the 
strict  neighbor  discovery  protocol  prevents  wormhole 
attacks even when the victim nodes are nearby. 
5.1 Assumptions 
We assume all non-wormhole communication channels 
are bidirectional: if A can hear B, then B can hear A.    This 
is not always the case in wireless networks, especially if 
battery power and physical characteristics of antennas vary.   
With  our  protocol,  unidirectional 
established. 
links  cannot  be 
We assume a mechanism is available to establish secure 
links  between  all  pairs  of  nodes  and  that  all  critical 
messages  are  encrypted.    Several  efficient  mechanisms 
have been proposed for establishing secure link keys in ad 
hoc networks [6, 3, 22].   
Since  using  directional  antennas  can  increase  the 
transmission  range  significantly,  we  only  have  a  modest 
requirement  on  network  density.  For  example,  when  the 
density in omni mode is 10, then the density in directional 
mode  will  be  32.4,  which  is  enough  for  our  protocol  to 
work  efficiently.    If  the  network  is  sparse,  our  protocol 
can  still  prevent  wormhole  attacks,  but  there  is  an 
increased likelihood nodes will be disconnected from the 
network (as discussed in Section 6). 
We use the following notation: 
A, B, C...   
X, Y 
R 
EKAB(M)   
zone 
Legitimate nodes   
  Wormhole endpoints 
Nonce 
Message encrypted by key   
shared between nodes A and B   
The directional element,    
which ranges from 1–6 as   
^zone 
zone (A, B) 
shown in Figure 3 
The opposite directional    
element. For example, if    
zone=1 then ^zone=4. 
Zone in which node A hears   
node B 
Nodes within one (directional   
distance)  hop  in  direction  zone 
of node A.   
neighbors (A, zone) 
5.2 Directional neighbor discovery 
The  directional  neighbor  discovery  protocol  does  not 
prevent many wormhole attacks, but it forms the basis for 
our other protocols.     
Immediately  after  deployment,  nodes  will  have  no 
known  neighbors.    Each  node  will  randomly  choose  a 
time and periodically use neighbor discovery protocol to 
update its neighbor set.    We call the node that initiates the 
protocol the announcer.     
From Figure 3, one obvious observation is if node A is 
in  node  B’s  zone  direction,  then  node  B  is  in  node  A’s 
opposite  direction  ^zone  (for  example, 
if  zone=1, 
^zone=4). We summarize this as: 
    A∈neighbors(B, zone)⇒ B∈neighbors(A, ^zone)   
This  relies  on  all  nodes  having  the  same  antenna 
orientation  due  to  their  common  magnetic  orientation.   
Because  of  measurement  imprecision,  it  is  possible  that 
the actual zone will be off by one in either direction.    For 
simplicity of this presentation, we assume this observation 
holds for now.    In Section 7, we consider the impact of 
directional inaccuracies. 
The  simple  directional  neighbor  discovery  protocol 
works in three steps:   
1.  A → Region 
HELLO | IDA 
2.  N → A 
The announcer A broadcasts a HELLO message that 
includes its identity. This is done by transmitting the 
message  in  every  direction,  sequentially  sweeping 
through each antenna in the antenna array. 
IDN | EKNA (IDA | R | zone (N, A)) 
All  nodes  that  hear  the  HELLO  message  send  their 
node ID and an encrypted message to the announcer.   
The message contents are encrypted with a key shared 
between  the  announcer  and  the  sender,  which  the 
sender can determine based on knowing its own node 
ID  and  that  of  the  announcer.    The  encrypted 
message  contains  the  announcer’s  ID,  a  random 
challenge nonce, and the zone in which the message 
was received.     
3.  A → N 
R 
The announcer decrypts the message and verifies that 
it contains its node ID.    It further verifies that it heard 
the  message  in  the  opposite  zone  from  the  zone 
reported  by  the  neighbor.    That  is,  zone  (A,  N)  = 
^zone  (N,  A).    If  it  is  correct,  it  adds  the  sending 
neighbor to its neighbor set for zone (A, N).    If the 
message was not received in the appropriate zone, it is 
ignored.    Otherwise,  the  announcer  transmits  the 
decrypted  challenge  nonce  to  the  sending  neighbor.   
Upon receiving the correct nonce, the neighbor inserts 
the announcer into its neighbor set. 
A  node  only  modifies  its  neighbor  set  through  the 
neighbor discovery protocol, either as a result of responses 
to  its  own  announcements  or  through  announcements  it 
receives  from  its  neighbors.      When  a  message  outside 
the neighbor discovery protocol is received the receiving 
node will check that its sender is in its neighbor set.    The 
node  will  ignore  messages  from  nodes  that  are  not 
members of its neighbor set.    Hence, if the neighbor sets 
are  maintained  correctly,  a  wormhole  attack  cannot  be 
conducted  because  nodes  will  not  accept  messages  that 
arrive from nodes that are not in their neighbor set.    (This 
assumes  all  messages  are  authenticated  using  link  keys.   
If  some  messages  are  not  authenticated,  an  attacker  can 
impersonate  a 
those 
messages.    Presumably,  any  sensitive  control  or  routing 
messages would be authenticated.)   
legitimate  neighbor  and  send 
However,  the  neighbor  discovery  protocol  itself  is 
vulnerable  to  wormhole  attacks.  An  attacker  with  a 
wormhole can establish a false distant neighbor by sending 
challenges and responses through the wormhole.    An ad-
versary with two transceivers, one near the announcer and 
another  in  a  distant  area  of  the  network,  can  tunnel  the 
announcer’s HELLO message to the distant area through 
out-of-band  channel.    The  wormhole  node  rebroadcasts 
the  message,  and  receives  challenges  from  neighboring 
nodes.    It tunnels those challenges through the wormhole, 
and transmits them to the announcer.    To the announcer, 
the  challenges  appear  to  be  perfectly  legitimate,  so  the 
4 
A 
1 
X 
5 
3 
6 
2 
Region I 
C 
4 
5 
3 
B
1 
Y
6 
2 
Region II 
  Directional  Attack. 
Figure  4. 
  The 
adversary establishes a wormhole between X 
and  Y,  and  can  trick  A  and  C  into  accepting 
each  other  as  neighbors  by 
forwarding 
messages  since  they  are  in  opposite  zones 
relative to the respective wormhole endpoints. 
nodes are added and the decrypted nonces are transmitted.   
The adversary tunnels the responses through the wormhole, 
and  transmits  them  to  the  senders.    The  distant  sending 
nodes will appear as neighbors to the announcer, and the 
announcer will be added to each sending node’s neighbor 
set.     
Figure 4 shows an example scenario.    An attacker has 
established  a  wormhole  between  nodes  X  and  Y.    With 
omnidirectional antennas, the attacker can systematically 
forward  all  neighbor  discovery  messages  through  the 
wormhole to convince all nodes in regions I and II they are 
mutual neighbors.    With directional antennas, the attack’s 
effectiveness  is  reduced.    Only  node  pairs  that  are  in 
opposite directions relative to the wormhole in each region 
will accept each other as neighbors.    For example, if the 
attacker forwards messages between A and B through the 
wormhole, the directional protocol would prevent A and B 
from  accepting  each  other  as  neighbors  since  A  hears  B 
(retransmitted by X) in its zone 4, and B hears A in its zone 
4 instead of the expected opposite zone 1.    However, the 
attacker  can  mislead  A  and  C  into  believing  they  are 
neighbors  since  they  are  on  opposite  sides  of  their 
respective wormhole endpoints.    On average, one sixth of 
the links between the two regions will be accepted through 
the wormhole.    This does not, however, greatly diminish 
the  overall  effectiveness  of  the  wormhole  attack.    The 
nodes in opposite regions will advertise the paths they find 
through  the  wormhole  to  their  neighbors,  and  indirectly 
draw  traffic  towards  the  wormhole.    As  illustrated  in 
Figure  2,  an  adversary  who  can  establish  a  single 
wormhole link may be able to disrupt nearly all network 
traffic. 
5.3 Verified neighbor discovery protocol 
Although  the  simple  directional  protocol  does  not 
sufficiently mitigate the effectiveness of wormhole attacks, 
it  suggests  that  if  nodes  cooperate  with  their  neighbors 
they can prevent wormholes since the attacker will only be 
able to convince nodes in particular regions that they are 
neighbors.     
Assume the adversary has one transceiver at each end of 
the  wormhole.    As  described  in  the  previous  section,  it 
can only trick nodes that are in opposite directions from 
the  wormhole  endpoints  into  accepting  each  other  as 
neighbors.    Hence, nodes in other locations can establish 
the announcer’s legitimacy.    We call such nodes verifiers.     
Consider  node  C  in  Figure  4.    Since  C  receives  A’s 
transmissions  through  Y  in  its  zone  1  antenna,  all  of  its 
neighbors in zone 1 should also be neighbors of A.    If any 
of those nodes are in different directions from Y (such as 
node B in Figure 4), then the wormhole will not be able to 
convince  them  they  are  neighbors  of  A.    Note  however, 
that  C  could  be  on  the  other  end  of  the  wormhole,  as 
shown in Figure 5.    Here, B will hear A and C from the 
west through the wormhole (zone (B, A) = zone (B, C) = 4), 
and  C will  hear A directly from  the  east  (zone  (A,  C)  = 
^zone(C, A) = 1) and C will hear B from the west through 
the wormhole (zone (C, B) = ^zone (B, C) = 4).    Hence, 
we  need  a  stricter  requirement  on  verifiers  to  prevent 
verifiers from acting through the wormhole. 
A valid verifier V for the link A ↔ B must satisfy these 
properties: 
1.  zone (B, A) ≠ zone (B, V).    Node B hears V in a 
different zone from node A, hence it knows A and 
V  are  in  different  locations, and  both  cannot  be 
coming through a single wormhole endpoint. 
2.  zone (B, A) ≠ zone (V, A).    Node B and V hear 
node  A  from  different  directions.    A  wormhole 
can deceive nodes in only one direction.    So if 
both B and V are directionally consistent with A 
in different directions (zone (B, A) = ^zone (A, B) 
and zone (V, A) = ^zone (A, V)), then they know 
A is not being retransmitted through a wormhole.     
In Figure 5, C cannot act as a verifier since zone (B, A) = 
zone (C, A), failing the first property.    Node D can act as 
a verifier, since zone (B, A) = 4 ≠ zone (B, D) = 5, and 
zone (D, A) = 3 ≠ zone (B, A) = 4.    Note, however, that 
the  wormhole  cannot  convince  D  and  A  to  accept  each 
other as neighbors since zone (D, A) = 3 ≠ ^zone (A, D) 
= 1.    Hence, B will not be able to verify A as a neighbor 
through D. 
We modify the original protocol to use verifier nodes to 
establish  legitimate  neighbor  relationships.    The  first 
three  steps  are  the  same  as  in  the  simple  neighbor 
discovery protocol: 
1.  A → Region    HELLO | IDA 
2.  N → A 
3.  A → N 
      IDN | EKNA (IDA | R | zone (N, A)) 
      R 
These  steps  authenticate  the  nodes  and  their  apparent 
5 
4 
C 
A 
X 
3 
6 
2 
Region I 
1 
C 
4 
5 
3 
6 
D
Y
2 