title:MitM Attack by Name Collision: Cause Analysis and Vulnerability Assessment
in the New gTLD Era
author:Qi Alfred Chen and
Eric Osterweil and
Matthew Thomas and
Zhuoqing Morley Mao
2016 IEEE Symposium on Security and Privacy
2016 IEEE Symposium on Security and Privacy
MitM Attack by Name Collision: Cause Analysis
and Vulnerability Assessment in the New gTLD Era
†
Qi Alfred Chen, Eric Osterweil
, Matthew Thomas
†
, Z. Morley Mao
PI:EMAIL, {eosterweil, mthomas}@verisign.com, PI:EMAIL
University of Michigan,
Verisign Labs
†
Abstract—Recently, Man in the Middle (MitM) attacks on web
browsing have become easier than they have ever been before
because of a problem called “Name Collision” and a protocol
called the Web Proxy Auto-Discovery (WPAD) protocol. This
name collision attack can cause all web trafﬁc of an Internet user
to be redirected to a MitM proxy automatically right after the
launching of a standard browser. The underlying problem of this
attack is internal namespace WPAD query leakage, which itself
is a known problem for years. However, it remains understudied
since it was not easily exploitable before the recent new gTLD
(generic Top-Level Domains) delegation.
In this paper, we focus on this newly-exposed MitM attack
vector and perform the ﬁrst systematic study of the underlying
problem causes and its vulnerability status in the wild. First, we
show the severity of the problem by characterizing leaked WPAD
query trafﬁc to the DNS root servers, and ﬁnd that a major cause
of the leakage problem is actually a result of settings on the
end user devices. More speciﬁcally, we ﬁnd that under common
settings, devices can mistakenly generate internal queries when
used outside an internal network (e.g., used at home). Second,
we deﬁne and quantify a candidate measure of attack surface
by deﬁning “highly-vulnerable domains”, which are domains
routinely exposing a large number of potential victims, and
use it to perform a systematic assessment of the vulnerability
status. We ﬁnd that almost all leaked queries are for new gTLD
domains we deﬁne to be highly-vulnerable, indirectly validating
our attack surface deﬁnition. We further ﬁnd that 10% of these
highly-vulnerable domains have already been registered, making
the corresponding users immediately vulnerable to the exploit at
any time. Our results provide a strong and urgent message to
deploy proactive protection. We discuss promising directions for
remediation at the new gTLD registry, Autonomous System (AS),
and end user levels, and use empirical data analysis to estimate
and compare their effectiveness and deployment difﬁculties.
I. INTRODUCTION
Recently, Man in the Middle (MitM) attacks on web brows-
ing have become easier than they have ever been before —
the attacker only needs to register one of certain domain
names, and web trafﬁc of Internet users from all over the
world can be automatically redirected to the attacker’s MitM
proxy. The underlying vulnerability comes from a problem
called “Name Collision” [31]. Name collisions occur when
administrators conﬁgure their internal systems to use names
from local/internal namespaces that are also used in other
namespaces (such as the global Domain Name System, DNS),
and a collision happens when a query for a name is resolved
in an unexpected namespace.
The MitM attack focused upon in this paper is a name
collision based attack that arises from leakage of
inter-
nal namespace Web Proxy Auto-Discovery (WPAD) queries.
These WPAD queries are designed to automatically conﬁgure
proxies for end systems only from within an administrative
domain such as a corporate internal DNS namespace, but
only in two of 13 DNS root servers, roughly 20 million
such queries are observed to be leaking to the public DNS
namespace every day. This has been a known problem for
years but remains understudied, mainly because these queries
typically use undelegated TLDs as internal Top-Level Do-
mains (iTLDs) [5], [13], [21], and thus were not exploitable
previously. However,
in the recently-launched New gTLD
(generic Top-Level Domains) Program [12], many of these
popular iTLD strings have begun to be delegated and are
open for public domain name registration, allowing attackers
to exploit these leaked WPAD queries by setting up MitM
proxies from anywhere on the Internet with only a domain
name registration. Note that this is not a limitation or weakness
of new gTLDs per se, but instead a manifestation of a name
conﬁguration problem leading to name collisions which we
argue should be fully mitigated.
To characterize the magnitude of this newly-exposed MitM
threat, we perform the ﬁrst systematic study of the underlying
problem causes and the vulnerability status in the wild. First,
we investigate the fundamental underlying cause of WPAD
query leaks from internal networks. Using a local testbed and
trafﬁc analysis, we ﬁnd that a major cause that accounts for
a signiﬁcant proportion of the leakage trafﬁc is actually a
result of settings on the end user devices. More speciﬁcally,
we ﬁnd that under common settings, devices can mistakenly
generate internal queries when used outside an internal net-
work (e.g., used at home). From this ﬁnding, we identify a
set of highly-vulnerable Autonomous Systems (ASes) with
both high volume of leaked WPAD queries and high diversity
of vulnerable query domain names, which is found to be
dominated by home access network ASes.
Second, for these highly-vulnerable ASes, we perform a
systematic assessment of the vulnerability status in the wild.
Leveraging the insights that most domain names in leaked
WPAD queries are transient and low-volume, we propose that
a more useful characterization of attack surface should focus
on domain names that persistently expose many victims. We
call such domain names highly-vulnerable domains (HVDs),
because an adversary could gain more value from operating
them. From this deﬁnition, we then design an attack surface
quantiﬁcation method which systematically balances the trade-
off between query persistence and high query volume. This
2375-1207/16 $31.00 © 2016 IEEE
© 2016, Qi Alfred Chen. Under license to IEEE.
DOI 10.1109/SP.2016.46
DOI 10.1109/SP.2016.46
675
675
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:18:12 UTC from IEEE Xplore.  Restrictions apply. 
allows us to focus on the most exploitable domain names. For
example, for the delegated new gTLD .network, only 4%
of the domain names in the leaked WPAD queries match the
HVD deﬁnition.
By applying our attack surface quantiﬁcation method to the
victim ASes, we ﬁnd that almost all of the leaked queries are
for new gTLD domain names deﬁned to have high vulnera-
bility, which indirectly validates our attack surface deﬁnition.
If these domain names are registered by an attacker, she
becomes authoritative to answer all the vulnerable queries,
and actual exploits can start at any time. Fortunately, as of
September 2015, the registration of these HVDs just started,
and our registration status analysis (detailed in §VI-B) does
not ﬁnd statistical evidence showing that these domains are
being maliciously targeted for registration. Nevertheless, we
did ﬁnd seemingly na¨ıve attack registration patterns in the
wild, showing potential attack attempts. These results illustrate
real MitM threat for Internet users in the wild, and provide a
strong and urgent message to deploy proactive protection.
the new gTLD registry level
To effectively defend against this attack, remediation strate-
gies can be deployed at
to
scrutinize the registration of HVDs, and also at the AS level
and end user level to prevent the vulnerable queries from being
leaked to the public DNS namespace. Based on the insights
from the problem cause and vulnerability characterization, we
discuss feasible defense methods for each of these three levels,
and use empirical data analysis to estimate and compare their
effectiveness and deployment difﬁculties.
We summarize the key contributions as follows:
• Targeting the new MitM attack vector exposed by name
collisions, we perform a characterization of the problem and
its severity, and an in-depth analysis on the fundamental
internal namespace WPAD query leakage problem. From the
analysis, we are able to uncover the major leak sources and
the underlying device-side causes using both local testbed and
DNS root server trafﬁc analysis.
• We present a candidate deﬁnition and quantiﬁcation
method for the attack surface of this MitM threat, and use it to
systematically study the vulnerability status in the wild. With
this, we are able to ﬁnd a set of highly-vulnerable domains
(HVDs) which persistently expose many victims in the wild.
We ﬁnd that over 97% of the leaked WPAD queries are for
these HVDs, and at this point, the HVDs for 10% of the new
gTLDs have already been fully registered. These results show
a real threat for Internet users in the wild.
• To prevent users from being exploited by this newly-
exposed attack vector, based on the insights in our cause
analysis and vulnerability quantiﬁcation, we discuss a set of
remediation strategies at the new gTLD registry, AS, and end
user levels, and use empirical data analysis to evaluate their
effectiveness and deployment challenges.
II. BACKGROUND
In this section, we cover the necessary background of the
public and internal DNS namespaces, and the focus of this
paper, WPAD proxy discovery protocol.
A. DNS Ecosystem
DNS (Domain Name System) [27] is a distributed system
which translates domain names to network service identiﬁers
(such as IP addresses for computers in the Internet or a private
network). Domain names are a set of labels separated by dots,
for example www.example.com, and are organized in hier-
archical subdomains of the DNS root domain. The ﬁrst level of
domain name labels under the root domain are the TLDs [9],
including gTLDs such as .com, and country code Top-Level
Domains such as .us. Directly below TLDs are Second-Level
Domains (SLD) [7], e.g., example in www.example.com.
In this paper, the term domain is deﬁned to be any DNS name,
and TLDs and SLDs are speciﬁc types of domains.
Domain name management and delegation. In DNS, a
DNS zone is deﬁned as the set of DNS domain names that
are contiguous in the DNS tree hierarchy, and which are
administered by the same authority. The DNS root zone is
the canonical top of the DNS tree. It is the authoritative
zone for all of DNS’ TLDs. The structure and contents
of the DNS root zone are determined by an organizational
role called the Internet Assigned Numbers Authority (IANA),
which is performed by the Internet Corporation for Assigned
Names and Numbers (ICANN). The DNS root zone’s actual
operational and authoritative maintainer is a role called the
Root Zone Maintainer (RZM), which is currently performed by
Verisign. ICANN delegates the management of its subdomains,
the TLDs, to TLD registry operators. Under TLDs, SLDs are
registered in the process of domain name registration.
Domain name registration. A domain name registration
is the delegation of the administration of an SLD and its
subdomains under a TLD, which usually involves 3 parties:
TLD registry operators, registrars, and registrants [32]. At a
high level, registry operators manage TLDs, registrars conduct
the daily business of transacting with clients for SLDs, and
registrants pay to receive administrative authority to run SLDs.
Once a domain is registered by a registrant, the registrar
submits certain information to the corresponding TLD registry
operators, and the WHOIS database [10] then maps the
registered domain name to the registrant details.
Domain name resolution. In the domain name resolution
process, end hosts rely on recursive DNS resolvers, usually
conﬁgured by network providers, e.g., corporate network ad-
ministrators and home network providers. Using the cached
results whenever possible, the resolvers query the name servers
following the DNS domain label hierarchy, getting either the
corresponding IP address, or an NXDomain response (rcode
3 in RFC1035 [28], NXD for short), indicating that no such
domain name exists.
The New gTLD Program. In the history of DNS, the set
of TLDs has remained relatively small and stable, with only
66 new TLDs added in 14 years before 2013 [31]. In 2011,
with the goal of enhancing competition and consumer choice,
ICANN approved the launch of the New gTLD Program [12],
which in less than 2 years has added over 700 new gTLDs as of
2015/08/25. To differentiate these new gTLDs from the legacy
676676
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:18:12 UTC from IEEE Xplore.  Restrictions apply. 
ones such as .com, in this paper they are also referred to as
nTLDs. This enormous wave of new gTLD delegation raised
name collision concern in the domain name industry [31], and
in this paper, we perform the ﬁrst systematic study of one of
the consequences of this problem in the wild.
B. Internal DNS Namespace and iTLD Usage
The DNS ecosystem described above is the public DNS
namespace for domain names visible to the Internet. Similarly,
a local area network, e.g., a corporate network, can also set up
an internal DNS namespace with private domain names. This
helps control the access to internal conﬁdential information,
and can operate despite any external network connectivity
disruption, making it a common practice for companies.
To create an internal DNS namespace, internal name servers
are used to serve the zone ﬁles for a customized internal
domain, and the resolvers are conﬁgured to query these servers
instead of the DNS servers in public namespace. To make
the internal domain name easy to reference and also to
prevent confusion between internal and public namespaces,
some administrators in the past used TLD strings that have
not been delegated (in the public DNS namespace) as iTLDs.
The use of iTLDs implicitly assumes that these TLD strings
will not be delegated in the public namespace; however,
with the launching of the New gTLD Program, many of the
popular iTLD strings have already been delegated today and
are open for public registeration [16]. This breaks the implied
assumption that previously undelegated iTLDs will never be
delegated. As a side effect, the leaked internal queries to these
iTLD strings that were previously benign now expose issuers
to the MitM attacks studied in this paper.
C. WPAD: Automatic Proxy Discovery
WPAD (Web Proxy Auto-Discovery) is a protocol designed
for browsers or operating systems (OSes) to automatically
locate a web proxy conﬁguration ﬁle. It is primarily used in
internal networks where clients are restricted from communi-
cating to the public HTTP network, e.g., in some corporate
networks. The proxy conﬁguration ﬁle is by default named
wpad.dat, which is written in proxy auto-conﬁg (PAC)
format, and speciﬁes the proxy IP and port using code PROXY
(cid:2)IP(cid:3):(cid:2)port(cid:3).
To ﬁnd the proxy conﬁguration ﬁle, WPAD supports two
methods: DHCP WPAD and DNS WPAD. In the implemen-
tation, usually DHCP WPAD is attempted ﬁrst by issuing a
DHCPINFORM message to the local DHCP server. If the local
infrastructure supports this proxy conﬁguration, the PAC ﬁle
location is included in option 252 in the response.
If no such conﬁguration is found in DHCP, DNS WPAD
is performed. Without an explicit conﬁguration like that in
DHCP WPAD, DNS WPAD infers the location of the proxy
ﬁle based on the device domain name. For example,
in
a company’s internal network, a corporate device can be
conﬁgured with internal domain company.ntld in the OS.
In DNS WPAD proxy discovery, the proxy ﬁle location is
inferred from this name and fetched using HTTP request
Supported OSes
and browsers
Veriﬁed versions
for DNS WPAD
Enabled
by default
Browser
Internet Explorer
Chrome
Firefox
Safari
6–11
43
12, 33
8
Windows OS
XP, Vista, 7, 8, 8.1, 10
OS
Ubuntu
Mac OS X
12.04, 14.04
10.10
Yes
No
No
No
Yes
No
No
TABLE I: Popular OSes and browsers that support WPAD.
http://wpad.company.ntld/wpad.dat, involving a
DNS request for wpad.company.ntld. To serve this proxy
discovery, a company can simply set up a web server with
wpad.dat under its root directory, and point a DNS record
for wpad.company.ntld in its local DNS zone ﬁle to this
server. In this process, all the WPAD DNS queries should
be served only by the local DNS resolvers, but as we show
later, millions of such queries are leaked to the public DNS
namespace every day, causing the name collision problem.
Browser and OS support. WPAD service discovery can be
supported in both OS and browser levels. The conﬁguration
is typically named “Automatically detect setting” in the LAN
proxy setting [11]. Table I summarizes the popular browsers
and OSes supporting WPAD, along with their versions which
we have veriﬁed using a local testbed. As shown, DNS WPAD
is supported by all popular browsers and OSes, and some of
them even use it by default, e.g., Windows OSes and Internet
Explorer (IE) browsers. Note that for the browsers and OSes
that do not enable it by default, the local network adminis-
trator, e.g., the IT department in a company, may enable it
during the device setup process so that end devices can use its
convenient proxy discovery feature. For the browsers tested
in our experiments, the discovery process starts right after
the browser is launched. With a valid PAC ﬁle fetched, all
subsequent web trafﬁc is redirected to the conﬁgured proxy.
III. THREAT MODEL AND ATTACK SURFACE
In this section, we describe the threat model and attack
surface deﬁnition of the newly-exposed MitM attack vector,
which we call WPAD name collision attack.
A. Threat Model
As introduced in the previous section, the WPAD protocol
is designed to only conﬁgure proxies for end systems from
within an administrative domain such as a corporate internal
DNS namespace. Ideally, for a device belonging to a corporate
domain, it performs discovery to conﬁgure a WPAD proxy
only inside that domain. While these queries may have always
been vulnerable to DNS spooﬁng attacks,
the adversaries
would need to be on-path or be able to spoof DNS responses in
a narrow attack window. The intended local scope of queries,
the on-path requirement, and the narrow attack window have
kept WPAD deceptively safe.
However, because internal queries leak to the DNS root
servers and internal namespaces now collide with new gTLD
domains, which are both happening in large scale today as
characterized later in §IV-A, the inherent security weaknesses
677677
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:18:12 UTC from IEEE Xplore.  Restrictions apply. 
9XOQHUDEOH $6
H D N H G
P
R
F

/
G
R
1
D
S
Z

9LFWLP GHYLFH KDUGFRGHG
Z YXOQHUDEOH GRPDLQ
FRPSDQ\QWOG
T
X H U \
\
Q
D
S
V X F K
 1
;
G
O
W
H
Q

P
Q D
' 
$IWHU QWOG GHOHJDWLRQ
DQGFRPSDQ\QWOG
UHJLVƚHUHG E\ DWWDFNHU
'16 URRW
VHUYHU
9XOQHUDEOH $6
Z



G
O
W
Q
