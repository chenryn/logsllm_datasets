title:A Framework for a Collaborative DDoS Defense
author:George C. Oikonomou and
Jelena Mirkovic and
Peter L. Reiher and
Max Robinson
A Framework for A Collaborative DDoS Defense
George Oikonomou,
Jelena Mirkovic
University of Delaware
oikonomo, PI:EMAIL
Peter Reiher
UCLA
PI:EMAIL
Max Robinson∗
Aerospace Corporation
PI:EMAIL
Abstract
Increasing use of the Internet for critical services makes
ﬂooding distributed denial-of-service (DDoS) a top security
threat. A distributed nature of DDoS suggests that a dis-
tributed mechanism is necessary for a successful defense.
Three main DDoS defense functionalities — attack detec-
tion, rate limiting and trafﬁc differentiation — are most ef-
fective when performed at the victim-end, core and source-
end respectively. Many existing systems are successful in
one aspect of defense, but none offers a comprehensive
solution and none has seen a wide deployment. We pro-
pose to harvest the strengths of existing defenses by orga-
nizing them into a collaborative overlay, called DefCOM,
and augmenting them with communication and collabora-
tion functionalities. Nodes collaborate during the attack to
spread alerts and protect legitimate trafﬁc, while rate lim-
iting the attack. DefCOM can accommodate existing de-
fenses, provide synergistic response to attacks and naturally
lead to an Internet-wide response to DDoS threat.
1. Introduction
As more critical infrastructure services and time sensi-
tive business transactions move to the Internet, ﬂooding dis-
tributed denial-of-service (DDoS) attacks are becoming an
increasing threat. Since ﬂooding attacks can be launched in
many ways, numerous defenses have been proposed (e.g.,
[6, 10, 18]) that either handle a speciﬁc scenario [10] or
aim to offer a comprehensive defense but at a high cost
[18, 6]. None of these defenses has seen a wide deploy-
ment, yet wide deployment is necessary to combat DDoS
threat. We propose to improve this situation by providing
means for different defense systems to organize themselves
into a collaborative framework and achieve a synergistic de-
fense against a wide variety of DoS attacks.
∗Mr Robinson performed this work during his graduate studies at
UCLA
We ﬁrst observe that there are three critical defense func-
tionalities: (a) accurate attack detection, (b) rate limiting of
trafﬁc to free critical resources, and (c) trafﬁc differentiation
to separate the legitimate from the attack trafﬁc and mini-
mize collateral damage. These functionalities are best per-
formed at different locations in the Internet. A victim-end
defense (e.g., [12]) maximizes detection accuracy since it
can observe all the trafﬁc reaching the victim as well as the
victim’s resource consumption. Some attack trafﬁc can be
distinguished from the legitimate user’s trafﬁc by source-
end defenses (e.g., [7]), through extensive statistics gath-
ering. This is feasible because of a low address diversity
(assuming deployment of ingress ﬁltering [4]) and low traf-
ﬁc rate at the source. Sophisticated (ﬂash-crowd) attacks
can be differentiated from the legitimate trafﬁc at the victim
though cooperation with good trafﬁc sources ([18]). Core
network defenses (e.g., [16]) are necessary to rate limit large
ﬂoods that would overwhelm the victim’s access links. This
discussion illustrates that a complete DDoS defense must
involve nodes at all three locations, that collaborate in the
defense, to leverage strong points of their deployment loca-
tions and minimize their weaknesses.
The advantage of distributed over single-point defense
has been recognized [18, 6, 10]. Some recently proposed
defenses use collaborating source-end and victim-end nodes
[10], while others deploy collaborating nodes at the victim
and core networks [19]. While they perform well against a
variety of attacks, they do not completely handle the ﬂood-
ing DDoS threat. Speciﬁcally, source/victim defenses fail to
handle large attacks launched from legacy networks, while
victim/core defenses inﬂict high collateral damage to legit-
imate trafﬁc. A few defenses combine defense nodes at all
three locations [6, 18]. These defenses achieve higher effec-
tiveness, but focus on a single approach to defense (e.g., a
capability mechanism in [18], victim-hiding in [6]), which
ultimately discourages integration with other defenses and
wide deployment.
We believe that two necessary requirements for a suc-
cessful defense against ﬂooding attacks are: (a) collabora-
tive defense, including nodes at all three deployment loca-
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 12:32:41 UTC from IEEE Xplore.  Restrictions apply. 
Proceedings of the 22nd Annual Computer Security Applications Conference (ACSAC'06)0-7695-2716-7/06 $20.00  © 2006tions, and (b) the ability to accommodate existing and het-
erogeneous defenses (possibly deployed in non-contiguous
manner) to achieve wide deployment. We propose De-
fCOM, a distributed collaborative framework for ﬂood-
ing DDoS defense. DefCOM combines the advantages of
source-end, victim-end and core defenses and allows the ex-
isting heterogeneous defense systems to cooperate through
an overlay. The overlay facilitates communication among
non-contiguously deployed nodes. Nodes collaborate by
exchanging messages, marking packets for high or low pri-
ority handling, and prioritizing marked trafﬁc. We ﬁrst de-
scribed the idea and the design of the DefCOM system in
[9]. In this paper we present more details about the design,
we specify various mechanisms that secure DefCOM’s op-
eration from insider and outsider threats, describe a proto-
type implementation in a Linux router and test this imple-
mentation in live experiments.
DefCOM does not contain a novel attack detection or re-
sponse mechanism. Instead, a lightweight communication
and trafﬁc policing capability of DefCOM is designed to be
coupled with existing defenses, to facilitate their collabora-
tive action. We use several existing defense systems in our
prototype implementation, but a variety of other defenses
could be integrated with DefCOM in real-world deploy-
ment. The novelty of DefCOM is in deﬁning collaborative
mechanisms usable by a variety of existing defense systems
deployed at distributed participants. To our best knowledge,
DefCOM is currently the only collaborative framework that
can accommodate heterogeneous defense nodes.
2. DefCOM Overview
DefCOM provides added functionality to existing de-
fenses so they can collaborate in DDoS detection and re-
sponse though a dynamically-built overlay. There are three
types of DefCOM functionalities that can be added to exist-
ing routers or defense nodes. A single physical node may
host more than one DefCOM functionality: (1) A classi-
ﬁer functionality is added to existing defenses that are ca-
pable of differentiating the legitimate from the attack traf-
ﬁc. A classiﬁer marks packets recognized as legitimate with
a HIGH-priority mark that guarantees priority handling by
downstream DefCOM nodes. (2) A rate limiter functional-
ity is deployed by routers. During an attack, a rate limiter
runs a weighted fair share algorithm (WFSA) to prioritize
trafﬁc it forwards to the victim, and it rate limits this traf-
ﬁc to preserve victim’s resources. (3) An alert generator
functionality is added to defenses that can detect a DoS at-
tack. An alert generator propagates the attack alert to other
DefCOM nodes using the overlay. The alert contains the
IP address of the attack’s victim and speciﬁes a desired rate
limit, e.g., the size of the victim’s bottleneck link.
Classiﬁers and rate limiters need to be deployed inline
since they manipulate the trafﬁc; alert generators could be
deployed inline or as passive monitors. All DefCOM nodes
that forward trafﬁc to the victim are expected to obey the
rate limit advertised in attack alert messages. This means
that all routers or inline defenses that join DefCOM must
deploy a rate limiter.
Nodes that are direct neighbors in the overlay are called
peers. Peering links are built dynamically, using trafﬁc ﬂow
information, as described in Section 2.1. Alert generator
nodes are always active, examining trafﬁc for signs of at-
tack, while classiﬁers and rate limiters are quiescent during
normal operation and become active only during an attack.
Activation is triggered by an alarm message generated by
an alert generator, and ﬂooded to all overlay nodes. Active
nodes start their classiﬁer or rate limiter functionality, and
mark packets they forward to the victim with a stamp pe-
riodically negotiated with their peers. There are two types
of stamps: (1) HIGH priority stamps are initially used by
classiﬁers to mark packets that have passed their legitimacy
tests, and (2) LOW priority stamps are used by classiﬁers
and rate limiters to denote trafﬁc that is below a victim-
speciﬁed rate limit but whose legitimacy cannot be veri-
ﬁed. Packets marked for HIGH priority handling receive
much better service that LOW-marked and unmarked pack-
ets, and are isolated from the attack using WFSA. Since
stamps are only valid between two DefCOM peers, every
DefCOM node restamps the packets that pass the rate limit
with its own stamps.
Fig. 1 illustrates DefCOM operation using a simple net-
work topology. Router A deploys a classiﬁer and a rate
limiter functionality, and hosts some source-end defense.
Routers B and F deploy only a rate limiter functionality.
Router H deploys a rate limiter and an alert generator func-
tionality, and hosts some victim-end defense. Thin lines
represent physical connections between nodes, and routers
C, D, E and G are legacy routers.
2.1. Dynamic Overlay Constuction
We use trafﬁc ﬂows to dynamically build DefCOM peer-
ing relationships between nodes that are deployed inline.
The resulting overlay is used only for DefCOM control
message exchange while data packets ﬂow on the routes de-
ﬁned by Internet routing protocols.
A DefCOM node advertises itself by generating a DE-
FJOIN message with a small probability pJOIN for a packet
sniffed from its forwarding path. The message has its des-
tination IP copied from the packet, and carries the source
IP address of the DefCOM node and a certiﬁcate that binds
the node’s identity with its public key, and grants the node
a permission to join the overlay.
The DEFJOIN messages are generated to a currently
unassigned UDP port. If they hit a DefCOM node en route
2
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 12:32:41 UTC from IEEE Xplore.  Restrictions apply. 
Proceedings of the 22nd Annual Computer Security Applications Conference (ACSAC'06)0-7695-2716-7/06 $20.00  © 2006Figure 1. Illustration of DefCOM operation.
to the destination, they will be intercepted and the receiv-
ing node will verify the certiﬁcate, add the originator’s IP
address to its peer list, and generate a DEFREPLY to the
source IP from the DEFJOIN message. DEFREPLY mes-
sages are processed in the similar manner as DEFJOIN mes-
sages. A DEFJOIN message that does not hit a DefCOM
node will be silently dropped at the destination.
For security, a DEFJOIN message includes a nonce
which should be returned in the DEFREPLY message, to
prevent a denial-of-service attack with non-solicited DE-
FREPLY messages. A session key is also exchanged via
DEFJOIN messages, and used for encryption of future con-
trol messages between two peers.
While trafﬁc ﬂows on a given path, periodic DEFJOIN
messages will refresh the corresponding peer relationships.
If trafﬁc subsides, each node will remove stale peers after
some set timeout (60 seconds in our prototype). In Figure 1
(a) we show a few trafﬁc ﬂows with thicker, solid lines, and
we illustrate DEFJOIN messages with squares and an arrow
line. Dashed lines show resulting peering relationships.
Control messages are exchanged only between peers and
encrypted with the session key. Messages use the UDP pro-
tocol to avoid congestion response but we implement a re-
liable delivery mechanism at the application layer. All the
messages are acknowledged by the receiver; the sender re-
transmits a message some ﬁxed number of times if an ac-
knowledgment has not been received. Table 1 lists all the
control messages, which we describe in the following sec-
tions.
2.2. Packet Marking Mechanism
DefCOM’s packet marking mechanism ensures that
packets veriﬁed as legitimate by a classiﬁer will receive
high priority treatment by downstream nodes. Every Def-
COM node has a HIGH and a LOW stamp, which is a num-