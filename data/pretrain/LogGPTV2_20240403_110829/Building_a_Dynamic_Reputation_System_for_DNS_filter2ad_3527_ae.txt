network-based clustering and again for the zone-based clus-
tering. In both steps we set the minimum and maximum num-
ber of clusters to one and the total number of vectors in our
dataset, respectively. We run these two steps using different
numbers of zone and network vectors. Figure 11 shows that
after the ﬁrst 100,000 vectors are used, the number of network
and zone clusters remains fairly stable. This means that by
computing at least 100,000 network and zone vectors—using
a 15-day old passive DNS database—we can obtain a stable
population of zone and network based clusters for the moni-
tored network. We should note that reaching this network and
cluster equilibrium does not imply that we do not expect to
see any new type of domain names in the ISP’s DNS recur-
sive. This just denotes that based on the RRs present in our
passive DNS database, and the daily trafﬁc at the ISP’s recur-
sive, 100,000 vectors are enough to reﬂect the major network
proﬁle trends in the monitored networks. Figure 11 indicates
that a sample set of 100,000 vectors may represent the major
trends in a DNS sensor. It is hard to safely estimate the exact
minimum number of unique RRs that is sufﬁcient to identify
all major DNS trends. An answer to this should be based upon
the type, size and utilization of the monitored network. With-
out data from smaller corporate networks it is difﬁcult for us
to make a safe assessment about the minimum number of RR
necessary for reliably training Notos.
The evaluation dataset we used consisted of 250,000 unique
domain names and IPs. The cluster overview is shown in Fig-
ure 10 and in the following paragraphs we discuss some in-
 0.9 0.91 0.92 0.93 0.94 0.95 0.96 0.97 0.98 0.99 1 0 0.05 0.1 0.15 0.2True Positive RateFalse Positive RateFalse Positive Rate vs True Positive RateAkamaiCDNsPopularCommonDynamic 0.8 0.82 0.84 0.86 0.88 0.9 0.92 0.94 0.96 0.98 1 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9PrecisionThresholdTP over All Pos. vs Threshold 0.9 0.91 0.92 0.93 0.94 0.95 0.96 0.97 0.98 0.99 1 0 0.02 0.04 0.06 0.08 0.1True Positive RateFalse Positive RateFalse Positive Rate vs True Positive RateROC 0.8 0.82 0.84 0.86 0.88 0.9 0.92 0.94 0.96 0.98 1 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1PrecisionThresholdTP over All Pos. vs ThresholdROCFigure 10. With the 2-step clustering step, Notos
is able to cluster large trends of DNS behavior.
teresting observations that can be made from these network-
based and zone-based cluster assignments. As an example,
network clusters 0 and 1 are predominantly composed of zones
participating in fraudulent activities like spam campaigns (yel-
low) and malware dropping or C&C zones (red). On the other
hand, network clusters 2 to 5 contain Akamai, dynamic DNS,
and popular zones like Google, all labeled as benign (green).
We included the unlabeled vectors (blue) based on which we
evaluated the accuracy of our reputation function. We have a
sample of unlabeled vectors in almost all network and zone
clusters. We will see how already labeled vectors will assist
us to characterize the unlabeled vectors in close proximity.
Before we describe two sample cases of dynamic charac-
terization within zone-based clusters, we need to discuss our
radius R and k value selection (see Section 3.3.5).
In Sec-
tion 3.3.5, we discuss how we build domain name clusters.
At that point we introduced the dynamic characterization pro-
cess that gives Notos the ability to utilize already label vectors
in order to characterize a newly obtained unlabeled vector by
leveraging our prior knowledge. After looking into the distri-
bution of Euclidean distances between unlabeled and labeled
vectors within the same zone clusters, we concluded that in the
majority of these cases the distances were between 0 and 1000.
We tested different values of the radius R and the value of k
for the K-nearest neighbors (KNN) algorithm. We observed
that the experiments with radius values between 50 and 200
provided the most accurate reputation rating results, which we
describe in the following sections. We also observed that if
k > 25 the accuracy of the reputation function is not affected
for all radius values between 50 and 200. Based on the results
Figure 11. By using different number of network
and zone vectors we observe that after the ﬁrst
100,000, there is no signiﬁcant variation in the ab-
solute number of produced clusters during the 1st
and 2nd level clustering steps.
of these pilot experiments, we decided to set k equal to 50 and
the radius distance equal to 100.
Figures 12 and 13 show the effect of this radius selection
on two different types of clustering problems. In Figure 12,
unknown RRs for akamaitech.net are clustered with a
labeled vector akamai.net. As noted in Section 4, CDNs
such as Akamai tended to have new domain names with each
RR, but to also reuse their IPs. By training with only a small
set of labeled akamai.net RRs, our classiﬁer put the new,
unknown RRs for akamaitech.net into the existing Aka-
mai class. IP-speciﬁc features therefore brought the new RRs
close to the existing labeled class. Figure 12 compresses all
of the dimensions into a two-dimensional plot (for easier vi-
sual representation), but it is clear the unknown RRs were all
within a distance of 100 to the labeled set.
This result validates the design used in Section 4, where
just a few weeks’ worth of labeled data was necessary for
training. Thus, one does not have to exhaustively discover all
whitelisted domains. Notos is resilient to changes in the zone
classes we selected. Services like CDNs and major web sites
can add new IPs or adjust domain formats, and these will be
automatically associated with a known labeled class.
The ability of Notos to associate new RRs based on lim-
ited labeled inputs is demonstrated again in Figure 13.
In
this case, labeled Zeus domains (approximately 2,900 RRs
from three different Zeus-related BLs) were used to clas-
sify new RRs. Figure 13 plots the distance between the la-
beled Zeus-related RRs and new (previously unknown) RRs
that are also related Zeus botnets. As we can see from
Section 4, most of the new (unlabeled) Zeus RRs lay very
 0 10 20 30 40 50 60 70 80 90 100 0 50000 100000 150000 200000 250000Number of Clusters ProducedNumber of Vectors Used1st Level (Network Based) Clusters2nd Level (Zone Based) ClustersFigure 12. An example of characterizing the aka-
maitech.net unknown vectors as benign based on
the already labeled vectors (akamai.net) present
in the same cluster.
Figure 13. An example of how the Zeus botnet
clusters during our experiments. All vectors are
in the same network cluster and in two different
zone clusters.
close, and often even overlap, to known Zeus RRs. This
is a good result, because Zeus botnets are notoriously hard
to track, given the botnet’s extreme agility. Tracking sys-
tems such as zeustracker.abuse.ch and malware-
domainlist.com have limited visibility into the botnet,
and often produce disjoint blacklists. Notos addresses this
problem, by leveraging a limited amount of training data to
correctly classify new RRs. During our evaluation set, Notos
correctly detected 685 new (previously unknown) Zeus RRs.
5.3 Accuracy of the Reputation Function
The ﬁrst thing that we address in this section is our deci-
sion to use a Decision Tree using Logit-Boost strategy (LAD)
as the reputation function. Our decision is motivated by the
time complexity, the detection results and the precision (true
positives over all positives) of the classiﬁer. We compared
the LAD classiﬁer to several other statistical classiﬁers using
a typical model selection procedure [6]. LAD was found to
provide the most accurate results in the shortest training time
for building the reputation function. As we can see from the
ROC curve in Figure 9, the LAD classiﬁer exhibits a low false
positive rate (FP%) of 0.38% and true positive rate (TP%) of
96.8%. It is was noting that these results were obtained using
10-fold cross-validation, and the detection threshold was set
to 0.5. The dataset using for the evaluation contained 10,719
RRs related to 9,530 known bad domains. The list of known
good domains consisted of the top 500 most popular domains
according to Alexa.
We also benchmarked the reputation function on other two
datasets containing a larger number of known good domain
names. We experimented with bot the top 10,000 and top
100,000 Alexa domain names. The detection results for these
experiments are as follows. When using the top 10,000 Alexa
domains, we obtained a true positive rate of 93.6% and a false
positive rate of 0.4% (again using 10-fold cross-validation and
a detection threshold equal to 0.5). As we can see, these results
are not very different from the ones we obtained using only
the top 500 Alexa domains. However, when we extended our
list of known good domains to include the top 100,000 Alexa
domain names, we observed a signiﬁcant decrease of the true
positive rate and an increase in the false positives. Speciﬁcally,
we obtained a TP% of 80.6% and a FP% of 0.6%. We believe
this degradation in accuracy may be due to the fact that the
top 100,000 Alexa domains include not only professionally
run domains and network infrastructures, but also include less
good domain names, such as ﬁle-sharing, porn-related web-
sites, etc., most of which are not run in a professional way and
have disputable reputation1.
We also wanted to evaluate how well Notos performs, com-
pared to static blacklists. To this end, we performed a number
of experiments as follows. Given an instance of Notos trained
with data collected up to July 31, 2009, we fed Notos with
250,000 distinct RRs found in DNS trafﬁc we collected on
August 1, 2009. We then computed the reputation score for
each of these RRs. First, we set the detection threshold to 0.5,
and with this threshold we identiﬁed 54,790 RRs that had a
low reputation (lower than the threshold). These RRs where
1A quick analysis of the top 100,000 Alexa domains reported that about
5% of the domains appeared in the SURBL (www.surbl.org) blacklist, at
certain point in time. A more rigorous evaluation of these results is left to
future work.
-400-200 0 200 400-400-200 0 200 400 600 800 1000CMD Scale (1)CMD Scale (2)Clustering akamai.net and akamaitech.net Vectorsakamai.netakamaitech.net-1000-800-600-400-200 0 200-4000-3000-2000-1000 0 1000 2000 3000 4000CMD 2D Scale (1)CMD 2D Scale (2)Clustering The Zeus BotnetLabeled ZeusUnlabeled Zeusdomain names with very little historic (passive DNS) informa-
tion. Sufﬁcient time and a relatively large passive DNS collec-
tion are required to create an accurate passive DNS database.
Therefore, if an attacker always buys new domain names and
new address space, and never reuses either resource for any
other malicious purposes, Notos will not be able to accurately
assign a reputation score to the new domains.
In the IPv4
space, this is very unlikely to happen due to the impending ex-
haustion of the available address space. Once IPv6 becomes
the predominant protocol, however, this may represent a prob-
lem for the statistical features we extract based on IP granular-
ity. However, we believe the features based on BGP preﬁxes
and AS numbers would still be able to capture the agility typ-
ical of malicious DNS hosting behavior.
As long as newly generated domain names share some net-
work properties (e.g., IPs or BGP preﬁxes) with already la-
beled RRs, Notos will be able to assign an accurate reputa-
tion score. In particular, since network resources are ﬁnite and
more expensive to renew or change, even if the domain prop-
erties change, Notos can still identify whether a domain name
may be associated with malicious behavior. In addition, if a
given domain name for which we want to know the reputation
is not present in the passive DNS DB, we can actively probe it,
thus forcing a related passive DNS entry. However, this is pos-
sible only when the domain successfully maps to a non-empty
set of IPs.
Our experimental results using the top 10,000 Alexa do-
main names as known good domains, report a false positive
fate of 0.4%. While low in percentage, the absolute number of
false positives may become signiﬁcant in those cases in which
very large numbers of new domain names are fed to Notos on
a daily bases (e.g., in case of deployment in a large ISP net-
work). However, we envision our Notos reputation system to
be use not as a stand-alone system, but rather in cooperation
with other defense mechanisms. For example, Notos may be
used in collaboration with spam-ﬁltering system. If an email
contains a link to a website whose domain name has a low rep-
utation score according to Notos, the spam ﬁlter can increase
the total spam-score of the email. However, if the rest of the
email appears to be benign, the spam ﬁlter may still decide to
accept the email.
During our manual analysis of (a subset of) the false pos-
itives encountered in our evaluations we were able to draw
some interesting observation. We found that a number of le-
gitimate sites (e.g., goldsgym.com) are being hosted in net-
works that host large volumes of malicious domain names in
them. In this cases Notos will tend to penalize the reputation
of this legitimate domains because they reside in a bad neigh-
borhood. In time, the reputation score assigned to these do-
mains score may change, if the administrators of the network
in which the benign domain name are hosted take actions to
“clean up” their networks and stop hosting bad domain names
within their address space.
Figure 14. Dates in which various blacklists con-
ﬁrmed that the RRs were malicious after Notos
assigned low reputation to them on the 1st of
August.
related to a total of 10,294 distinct domain names (notice that
a domain name may map to more than one IP, and this ex-
plains the higher number of RRs). Of these 10,294 domains,
7,984 (77.6%) appeared in at least one of the public black-
lists we used for comparison (see Section 4) within 60 day
after August 1, and were therefore conﬁrmed to be malicious.
Figure 14(a) reports the number and date in which RRs classi-
ﬁed as having low reputation by Notos appeared in the public
blacklists. The remaining three plots (Figure 14(b), (c) and
(d)), report the same results organized according to the type of
malicious domains. In particular, it is worth noting that Notos
is able to detect never-before-seen domain names related to the
Zeus botnet several days or even weeks before they appeared
in any of the public blacklists.
For the remaining 22.4% of the 10,294 domains we consid-
ered, we were not able to draw a deﬁnitive conclusion. How-
ever, we believe many of those domains are involved in some
kind of more or less malicious activities. We also noticed
that 7,980 or the 7,984 conﬁrmed bad domain names were
assigned a reputation score lower or equal to 0.15, and that
none of the other non-conﬁrmed suspicious domains received
a score lower than this threshold. In practice, this means that
an operator who would like to use Notos as a stand-alone dy-
namic blacklisting system while limiting the false positives to
a negligible (or even zero) amount may ﬁne-tune the detection
threshold and set it around 0.15.
5.4 Discussion
This section discusses the limits of Notos, and the poten-
tial for evasion in real networks. On of the main limitations
is the fact that Notos is unable to assign reputation scores for
 1 10 100 1000 10000 0 20 40 60 80 100Volume Of RRsDays After Training(a) Overall Volume of Malicious RRs 100 1000 10000 0 5 10 15 20 25 30 35Volume Of RRsDays After Training(b) Flux and Spam RRs IdentifiedFluxSpam 1 10 100 1000 0 20 40 60 80 100Days After Training(c)Malware/Trojans, Exploits and  Rogue AV RRs IdentifiedMalwareExploitRogue AV 1 10 100 0 20 40 60 80 100Days After Training(d) Botnet RRs IdentifiedZeusKoobfaceR.F.IVarious BotsDomain Name
google-bot004.cn