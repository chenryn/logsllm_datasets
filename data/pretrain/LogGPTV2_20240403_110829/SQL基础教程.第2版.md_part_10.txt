● 将根据逻辑运算符对真值进行的操作及其结果汇总成的表称为真值表。
● SQL中的逻辑运算是包含对真、假和不确定进行运算的三值逻辑。
运算符
NOT
在2-2节中我们介绍过，想要指定“不是~”这样的否定条件时，需
KEYWORD 要使用<>运算符。除此之外还存在另外一个表示否定，并且使用范围更
●NOT运算符
广的运算符NOT。
NOT不能单独使用，必须和其他查询条件组合起来使用。例如，选取
出销售单价（sale_price）大于等于1000日元的记录的SELECT语句
如下所示（代码清单2-30）。
代码清单2-30 选取出销售单价大于等于1000日元的记录
SELECT product_name, product_type, sale_price
FROM Product
WHERE sale_price >= 1000;
执行结果
product_name | product_type | sale_price
---------------+--------------+------------
T恤衫 | 衣服 | 1000
运动T恤 | 衣服 | 4000
菜刀 | 厨房用具 | 3000
高压锅 | 厨房用具 | 6800
2-3 逻辑运算符 69 ●
向上述SELECT语句的查询条件中添加NOT运算符之后的结果如下
所示（代码清单2-31）。
代码清单2-31 向代码清单2-30的查询条件中添加NOT运算符
SELECT product_name, product_type, sale_price
FROM Product
WHERE NOT sale_price >= 1000;
执行结果
product_name | product_type | sale_price
---------------+--------------+-------------
打孔器 | 办公用品 | 500
叉子 | 厨房用具 | 500
擦菜板 | 厨房用具 | 880
圆珠笔 | 办公用品 | 100
明白了吗？通过否定销售单价大于等于1000日元（sale_price
>= 1000）这个查询条件，就可以选取出销售单价小于1000日元的商品。
也就是说，代码清单2-31中WHERE子句指定的查询条件，与代码清单2-32
注A 中WHERE子句指定的查询条件（sale_price = 1000
（小于1000日元） （大于等于1000日元）
NOT sale_price >= 1000
通过以上的例子大家可以发现，不使用NOT运算符也可以编写出效
● 70 第2章 查询基础
果相同的查询条件。不仅如此，不使用NOT运算符的查询条件更容易让
人理解。使用NOT运算符时，我们不得不每次都在脑海中进行“大于等
于1000日元以上这个条件的否定就是小于1000日元”这样的转换。
虽然如此，但是也不能完全否定NOT运算符的作用。在编写复杂的
SQL语句时，经常会看到NOT的身影。这里只是希望大家了解NOT运算
符的书写方法和工作原理，同时提醒大家不要滥用该运算符。
法则2-10
NOT运算符用来否定某一条件，但是不能滥用。
运算符和 运算符
AND OR
到目前为止，我们看到的每条SQL语句中都只有一个查询条件。但
在实际使用当中，往往都是同时指定多个查询条件对数据进行查询的。例
如，想要查询“商品种类为厨房用具、销售单价大于等于3000日元”或
“进货单价大于等于5000日元或小于1000日元”的商品等情况。
KEYWORD 在WHERE子句中使用AND运算符或者OR运算符，可以对多个查
●AND运算符
询条件进行组合。
●OR运算符
AND运算符在其两侧的查询条件都成立时整个查询条件才成立，其
意思相当于“并且”。
OR运算符在其两侧的查询条件有一个成立时整个查询条件都成立，
注A 其意思相当于“或者”A。
需要注意的是，并不是只有一个
例如，从Product表中选取出“商品种类为厨房用具（product_
条件成立时整个查询条件才成
立，两个条件都成立时整个查询
type = '厨房用具'），并且销售单价大于等于3000日元（sale_
条件也同样成立。这与“到场的
客人可以选择钥匙链或者迷你包 price >= 3000）的商品”的查询条件中就使用了AND运算符（代码
作为礼品(任选其一)”中的“或
者”有所不同。 清单2-33）。
代码清单2-33 在WHERE子句的查询条件中使用AND运算符
SELECT product_name, purchase_price
FROM Product
WHERE product_type = '厨房用具'
AND sale_price >= 3000;
2-3 逻辑运算符 71 ●
执行结果
product_name | purchase_price
---------------+---------------
菜刀 | 2800
高压锅 | 5000
KEYWORD 该查询条件的文氏图如图2-6所示。左侧的圆圈代表符合查询条件“商
●文氏图
品种类为厨房用具”的商品，右侧的圆圈代表符合查询条件“销售单价大
将集合（事物的聚集）的关系通
过更加容易理解的图形进行可视 于等于3000日元”的商品。两个圆重合的部分（同时满足两个查询条件
化展示。
的商品）就是通过AND运算符能够选取出的记录。
图2-6 运算符的工作效果图
AND
打孔器 T恤衫
叉子 菜刀
运动T恤
擦菜板 高压锅
圆珠笔
商品种类为厨房用具 销售单价大于等于3000日元
选取出“商品种类为厨房用具（product_type = '厨房用具'），
或者销售单价大于等于3000日元（sale_price >= 3000）的商品”
的查询条件中使用了OR运算符（代码清单2-34）。
代码清单2-34 在WHERE子句的查询条件中使用OR运算符
SELECT product_name, purchase_price
FROM Product
WHERE product_type = '厨房用具'
OR sale_price >= 3000;
执行结果
product_name | purchase_price
---------------+---------------
运动T恤 | 2800
菜刀 | 2800
高压锅 | 5000
叉子 |
擦菜板 | 790
● 72 第2章 查询基础
还是让我们来看看查询条件的文氏图吧（图2-7）。包含在左侧的圆圈
（商品种类为厨房用具的商品）或者右侧的圆圈（销售单价大于等于3000
日元的商品）中的部分（两个查询条件中满足任何一个的商品）就是通过
OR运算符能够取出的记录。
图2-7 OR运算符的工作效果图
打孔器 T恤衫
叉子 菜刀
运动T恤
擦菜板 高压锅
圆珠笔
商品种类为厨房用具 销售单价大于等于3000日元
通过文氏图可以方便地确认由多个条件组合而成的复杂的SQL语句
的查询条件，大家可以多多加以利用。
法则2-11
多个查询条件进行组合时，需要使用AND运算符或者OR运算符。
法则2-12
文氏图很方便。
通过括号强化处理
接下来我们尝试书写稍微复杂一些的查询条件。例如，使用下面的查
询条件对Product表进行查询的SELECT语句，其WHERE子句的条
件表达式该怎么写呢？
“商品种类为办公用品”
2-3 逻辑运算符 73 ●
并且
“登记日期是2009年9月11日或者2009年9月20日”
满足上述查询条件的商品（product_name）只有“打孔器”。
把上述查询条件原封不动地写入WHERE子句中，得到的SELECT
语句似乎就可以满足需求了（代码清单2-35）。
代码清单2-35 将查询条件原封不动地写入条件表达式
SELECT product_name, product_type, regist_date
FROM Product
WHERE product_type = '办公用品'
AND regist_date = '2009-09-11'
OR regist_date = '2009-09-20';
让我们马上执行上述SELECT语句试试看，会得到下面这样的错误结果。
执行结果
product_name | product_type |r egist_date
---------------+--------------+------------
T恤衫 | 衣服 | 2009-09-20
打孔器 | 办公用品 | 2009-09-11
菜刀 | 厨房用具 | 2009-09-20
叉子 | 厨房用具 | 2009-09-20
不想要的T恤衫、菜刀和叉子也被选出来了，真是头疼呀。到底为什
么会得到这样的结果呢？
这是AND运算符优先于OR运算符所造成的。代码清单2-35中的条
件表达式会被解释成下面这样。
“product_type = '办公用品' AND regist_date = '2009-09-11'”
OR
“regist_date = '2009-09-20'”
也就是，
“商品种类为办公用品，并且登记日期是2009年9月11日”
或者
“登记日期是2009年9月20日”
这和想要指定的查询条件并不相符。想要优先执行OR运算符时，可以像代
● 74 第2章 查询基础
KEYWORD 码清单2-36那样使用半角括号( )将OR运算符及其两侧的查询条件括起来。
●( )
代码清单2-36 通过使用括号让OR运算符先于AND运算符执行
SELECT product_name, product_type, regist_date
FROM Product
WHERE product_type = '办公用品'
AND ( regist_date = '2009-09-11'
OR regist_date = '2009-09-20');
执行结果
product_name | product_type |r egist_date
---------------+--------------+------------
打孔器 | 办公用品 | 2009-09-11
这样就选取出了想要得到的“打孔器”。
法则2-13
AND运算符的优先级高于OR运算符。想要优先执行OR运算符时可以使用括号。
逻辑运算符和真值
KEYWORD 本节介绍的三个运算符NOT、AND和OR称为逻辑运算符。这里所
●逻辑运算符
说的逻辑就是对真值进行操作的意思。真值就是值为真（TRUE）或假
●真值
●真（TRUE） （FALSE）其中之一的值A。
●假（FALSE）
上一节介绍的比较运算符会把运算结果以真值的形式进行返回。比较
注A
但是在SQL中还存在“不确定” 结果成立时返回真（TRUE），比较结果不成立时返回假（FALSE）B。例如，
（UNKNOWN）这样的值。接下来会
进行详细说明。 对于sale_price >= 3000这个查询条件来说，由于product_
注B name列为'运动T恤'的记录的sale_price列的值是2800，因此
算术运算符返回的结果是数字。
会返回假（FALSE），而product_name列为'高压锅'的记录的
除了返回结果的类型不同之外，
和比较运算符一样都会返回运
sale_price列的值是5000，所以返回真（TRUE）。
算结果。
逻辑运算符对比较运算符等返回的真值进行操作。AND运算符两侧
的真值都为真时返回真，除此之外都返回假。OR运算符两侧的真值只要
有一个不为假就返回真，只有当其两侧的真值都为假时才返回假。NOT
KEYWORD
运算符只是单纯的将真转换为假，将假转换为真。真值表（truth table）就
●真值表
是对这类操作及其结果进行的总结（表2-4）。
2-3 逻辑运算符 75 ●
表2-4 真值表
AND OR NOT
P Q P AND Q P Q P OR Q P NOT P
真 真 真 真 真 真 真 假
真 假 假 真 假 真 假 真
假 真 假 假 真 真
假 假 假 假 假 假
请将表2- 4中的P和Q想象为“销售单价为500日元”这样的条件。逻
辑运算的结果只有真和假两种，对其进行排列组合将会得到2 × 2 = 4种结果。
在SELECT语句的WHERE子句中，通过AND运算符将两个查询条
件连接起来时，会查询出这两个查询条件都为真的记录。通过OR运算符
将两个查询条件连接起来时，会查询出某一个查询条件为真或者两个查询
条件都为真的记录。在条件表达式中使用NOT运算符时，会选取出查询
条件为假的记录（反过来为真）。
虽然表2-4中的真值表只是使用一个逻辑运算符时得到的结果，但即
使使用两个以上的逻辑运算符连接三个以上的查询条件，通过反复进行逻
辑运算求出真值，不论多复杂的条件也可以得到相应的结果。
表2-5就是根据之前例子中的查询条件“商品种类为办公用品”，并
且“登记日期是2009年9月11日或者2009年9月20日”（product_
type = '办公用品' AND (regist_date = '2009-09-11' OR regist_
date = '2009-09-20')）做成的真值表。
表2-5 查询条件为P AND（Q OR R）的真值表
P (Q R)
AND OR
P Q R Q OR R P AND (Q OR R)
真 真 真 真 真
真 真 假 真 真
真 假 真 真 真
真 假 假 假 假
P：商品种类为办公用品
Q：登记日期是2009年9月11日
假 真 真 真 假
R：登记日期是2009年9月20日
假 真 假 真 假 Q OR R：登记日期是2009年9月11日或者
2009年9月20日