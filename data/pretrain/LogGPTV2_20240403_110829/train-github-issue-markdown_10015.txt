以下是优化后的文本，使其更加清晰、连贯和专业：

```bash
# 系统信息
$ uname -a
Darwin users-MacBook-Air.local 14.5.0 Darwin Kernel Version 14.5.0: Wed Jul 29 02:26:53 PDT 2015; root:xnu-2782.40.9~1/RELEASE_X86_64 x86_64

# Go语言版本信息
$ go version
go version devel +c468957 Sun Sep 27 01:04:59 2015 +0000 darwin/amd64

# 切换到 hello 目录
$ cd hello

# 编译程序，并移除调试符号以减小文件大小
$ go build -ldflags="-w"

# 检查编译后二进制文件中是否包含用户主目录名称
$ hexdump -C hello | grep -c "$(basename $HOME)"
58
```

### 解释：
1. **系统信息**：使用 `uname -a` 命令获取系统详细信息。
2. **Go语言版本信息**：使用 `go version` 命令获取当前安装的 Go 语言版本。
3. **切换到 hello 目录**：使用 `cd hello` 命令切换到包含源代码的目录。
4. **编译程序**：使用 `go build -ldflags="-w"` 命令编译程序，并通过 `-ldflags="-w"` 参数移除调试符号以减小生成的二进制文件大小。
5. **检查编译后二进制文件**：使用 `hexdump -C hello` 命令将二进制文件转换为十六进制表示形式，并通过 `grep -c "$(basename $HOME)"` 检查文件中是否包含用户主目录名称。结果返回匹配行数 `58`。

这种结构化的方式使得每一步操作的目的和结果都更加明确，便于读者理解和复现。