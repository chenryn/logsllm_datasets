之后，随着 90 年代的到来，Perl 作为一种能适应早期互联网发展潜力的语言出现了，它是一个时代的语言。Larry Wall 和他所创造的 Perl 正好明白了 Web 的本质。
**00:08:40 - Mike Bursell**：
在网上你可以随意搜索，也可以随时创建网页，这是互联网的美丽新世界，你可以随时做这些事情。
**00:08:52 - Saron Yitbarek**：
这位是 Mike Bursell，红帽公司的首席安全架构师。Mike 是 90 年代中期发现和使用 Perl 的黑客之一。
**00:09:00 - Mike Bursell**：
对于 Web 来说，Perl 是许多人的起点。Java™ 语言还处于早期阶段，它在文本输入输出方面并不是很出色。如果你想进行查询和生成页面，Perl 是人们都在使用的工具。
**00:09:22**：
Perl 非常适合，因为它擅长获取文本，并使用文本做其他事情，而这正是 Web 所需要的。
**00:09:31 - Saron Yitbarek**：
顺便需要说一下的是，Larry Wall 有语言学背景，这就解释了为什么 Perl 有强大的文本解析能力。正如 Mike Bursell 提到的，这是一笔巨大的好处，因为在早期，Web 主要是一种基于文本的媒介，因为那时候人们没有足够的带宽来处理图像。
**00:09:51 - Mike Bursell**：
它很容易使用，也很容易复制。人们在分享方面非常开放，而且它的输出速度很快，这些都是好东西。
**00:10:02**：
哦，当然还有一点，就是你可以用管道使用它。所以，这是非常多的人所习惯的，而且非常容易测试，甚至离线测试，这都是非常有用的。
**00:10:13 - Saron Yitbarek**：
尤其对那些在 Web 的世界中重新规划自己生活的系统管理员来说非常有用。
**00:10:21 - Mike Bursell**：
Perl 是给系统管理员们的真正礼物。即使在那个年代，如果你做一些事情，你会得到很多日志。管理这些日志，分解它们，搜索它们，并能够以不同的方式显示它们，或获取任何其他大型文本语料库（主要就是日志），甚至可以对它们进行调试。除非你要在命令行里用管道方式传输 `orc`、`sed` 之类的东西，以及 `ed` 命令，那样的话你很快就会变得非常痛苦，而 Perl 正好适合让你去处理这些事情。
**00:10:55 - Saron Yitbarek**：
到上世纪 90 年代后期，Perl 5 已经聚集了一个强大的用户群体。像 Fortran 和 C 这样的旧语言依赖于庞大而昂贵的硬件，而 Perl 更有生命力，也更容易移植。在那样一个硬件成本急剧下降的世界里，Perl 的设计使得它得到了蓬勃发展，Perl 让所有的新程序员快速、轻松地工作。这是因为 Larry Wall 以牺牲 CPU 和内存的需求为代价，使 Perl 语法更人性化。所有这些元素组合在一起，使 Perl 成为一种很受新开发社区欢迎的语言。
**00:11:36 - Mike Bursell**：
在一个正在壮大的社区里，你可以去和他们聊聊社区里的事情，然后 PerlMonks 论坛出现了，那里是一个讨论的好地方，能在论坛里知道正在发生的事情。
**00:11:50 - Saron Yitbarek**：
这个社区确实拥有 Web 所能提供的最好的东西。他们发现了一个巨大的软件模块库，一个叫做 CPAN 的存储库，这些系统管理员都很喜欢它。它给 Perl 提供了更多的灵活性，许多人都可以部署由少数几个编程大师编写的代码。
**00:12:15 - Mike Bursell**：
它有很多库可以做你想做的任何事情，如果你找不到你想要的库，你可以去问一下，然后就会有好心人写出你想要的库。
**00:12:21 - Saron Yitbarek**：
Mike Bursell 是红帽公司的首席安全架构师。
**00:12:28 - Saron Yitbarek**：
正是由于 Perl 是免费的，它受到不断增长的模块库的支持，它是可移植的，而且它有一个蓬勃发展的社区。一切看起来都很好。Perl 可以在上世纪 90 年代 Web 开发新天地中发挥所有优势，但就在 90 年代即将结束的时候，互联网的发展前景又一次发生了变化，时代来了一个大的转变。
**00:12:57 - Alan Greenspan**：
但我们又能如何知道非理性繁荣何时已过度推高了资产价值，进而导致了意料之外的长期经济收缩?
**00:13:12 - Saron Yitbarek**：
“非理性繁荣”是时任美联储主席 Alan Greenspan 在 1996 年对 美国企业协会   American Enterprise Institute 所说的话。他那句“非理性繁荣”是对 90 年代人人都经历过的网络泡沫的警告。所有早期使用 Perl 的 Web 开发人员都在那个泡沫中乘风破浪，但正如 Greenspan 预测的那样，泡沫在 2000 年破裂了。
**00:14:11 - Conor Myhrvold**:
大家好，我是 Conor Myhrvold 。在过去的五六年里我一直从事编程，现在在技术领域为 Uber 工作。
**00:14:20 - Saron Yitbarek**：
2000 年代初，当 Conor 还在高中的时候，Perl 仍然是一个非常重要的东西。但他越来越意识到一种与之竞争的语言，叫做 Python。
**00:14:31 - Conor Myhrvold**：
Python 所追求的是一种更结构化的语言，做很多不同的事情都有一种更显然的方式，它就是那样设计的。而 Perl 则喜欢做某件事有不止一种方法，但这让很多初学者感到困惑。
**00:14:49 - Saron Yitbarek**：
Perl 有这样一句座右铭“ 实现它的方法不止一种   There is more than one way to do it. ”。而 Python 的理念实际上是相反的，Python 为每个问题都提供了一个明显的解决方案，这意味着查看别人的 Python 代码很容易；而另一方面查看其他人的 Perl 代码可能会令人困惑。Perl 作为一个程序员的第三或第四种语言是有意义的，而正是因为它是一种脚本语言，而脚本是互联网连结的基础。
**00:15:23**：
但是 Python 是一种你可以真正深入研究的语言，即使你是一个新手。Perl 有一套特定的优势，比如在搜索文本和生物信息学上。但是 Python 就是这样一种简单通用的语言。Python 获得了越来越多的信任，成为人们首先想学的语言，这是一件大事。
**00:15:47 - Conor Myhrvold**：
越来越多的人开始上网，越来越多的人开始学习如何编程。尤其是相对于 Perl 而言，Python 受益于它本身相对容易学习，因为它更结构化。而这样结果是，在一个快速增长的世界里，如果你能得到更多增长的份额，那将最终意味着有更多的教程和更多的东西可供你使用。
**00:16:10 - Saron Yitbarek**：
在之前提到过的 CPAN，它是 Perl 用户可以使用的强大的中央存储库。这在 90 年代是一大亮点，但 CPAN 的价值也在变化。
**00:16:24 - Conor Myhrvold**：
这也不能真正帮助你学习一门语言，因为你是在“复制粘贴”，只是用最少的方式替换你需要的东西。从长远来看这是一个劣势，因为如果你让人们通过自己进行原始开发来学习如何使用一种编程语言，即使这需要花费更长的时间，他们也会觉得自己对它投入了更多，而且他们也了解在这中间发生了什么。
**00:16:48 - Saron Yitbarek**：
Python 没有像 CPAN 那样的集中式存储库，但是对于那些在新千年时代来到这里的开发人员来说，在一个互联网搜索功能如此强大的世界里，存储库并没有那么大的价值。
**00:17:05 - Saron Yitbarek**：
最终 Python 有了大量的教程，当然现在也有了像 GitHub 这样的平台。
**00:17:13 - Conor Myhrvold**：
最终发生的事情是 Perl 拥有的许多优势，是来自一个已经过时的时代的网络效应。
**00:17:24 - Saron Yitbarek**：
Conor Myhrvold 是 Uber 的一名工程师。
**00:17:30 - Saron Yitbarek**：
然而语言的兴衰很少是由外部力量单独决定的，而 Perl 的内部问题是，在它的发展过程中它似乎遇到了障碍。Python 正在以一种相当有序的方式发布新的迭代，而正如我们在本季度第一集中所了解到的，Perl 在 2000 年互联网泡沫破裂之时，Python 开始获得更多新开发人员的青睐。
**00:17:59 - Saron Yitbarek**：
每个人都期待着 Perl 6 的发布，人们都很兴奋。他们等啊，等啊，等啊……他们等了 14 年。
**00:18:15 - Elizabeth Mattijsen**：
人们提出了大约 300 多件 Perl 6 应该能够完成的事情，当然其中很多事情基本上都是相互排斥的。
**00:18:26 - Saron Yitbarek**：
这是 Elizabeth Mattijsen，她是 Perl 6 的核心开发人员。2000 年，Elizabeth 参加了在 蒙特雷   Monterey 举办的 Perl 会议。那时开发者认为他们已经停滞不前了，所以 Perl 6 是必要的。Larry Wall 同意了，但是如果说 Perl 5 是他对 Perl 的重写，那么他希望 Perl 6 是由社区来对 Perl 进行重写。由于团队合作可能需要更长时间，甚至用了 14 年，对于那些开发者来说，这是一条漫长而艰难的道路。
**00:19:01 - Elizabeth Mattijsen**：
我们可以说当前实施的 Perl 6 项目实际上是实现它的第三次尝试。