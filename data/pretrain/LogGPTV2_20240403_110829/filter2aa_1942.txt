# Cisco Catalyst Exploitation

## About the Author
**Artem Kondratenko**
- Penetration Tester at Kaspersky Lab
- Hacker
- OSC(P|E)
- Skydiver ;)

## Cisco Advisory
The Cluster Management Protocol (CMP) in Cisco devices uses Telnet for signaling and command transmission between cluster members. The vulnerability arises from two key issues:
1. **Unrestricted CMP-specific Telnet Options**: The protocol fails to restrict the use of CMP-specific Telnet options to internal, local communications, instead accepting and processing these options over any Telnet connection.
2. **Incorrect Processing of Malformed CMP-specific Telnet Options**: This leads to potential exploitation.

## Vault 7: Hacking Tools Revealed
Vault 7 is a collection of documents that detail hacking techniques and potential exploits for multiple vendors, including:
- Microsoft
- Apple
- Cisco

### Cisco Switch Exploit: Codename ROCEM
#### Modes of Interaction
- Set
- Unset
- Interactive Mode

#### Exploitation Process
1. Take two switches.
2. Cluster the switches.
3. Analyze the traffic for "magic" patterns.
4. Exploit the vulnerability.
5. Profit!

### Clustering Cisco Switches
To control slave switches from a master switch:
```sh
$ telnet 192.168.88.10
catalyst1# rcommand 1
catalyst2# show priv
Current privilege level is 15
```

### Clustering Catalyst Switches
Clustering involves using Layer 2 Telnet with a specific magic option.

### Testing Notes
- Replaying the CISCO_KITS option during a generic Telnet session does not work.
- The IPS rule for this vulnerability is called "Cisco IOS CMP Buffer Overflow."

### Peeking at Firmware
The firmware can be accessed from the flash partition:
```sh
catalyst2# dir flash:
Directory of flash:/
2  -rwx
9771282   Mar 1 1993 00:13:28 +00:00  c2960-lanbasek9-mz.122-55.SE1.bin
3  -rwx
2487   Mar 1 1993 00:01:53 +00:00  config.text
4  -rwx
3096   Mar 1 1993 00:09:27 +00:00  multiple-fs
```
Using `binwalk` to analyze the firmware:
```sh
$ binwalk -e c2960-lanbasek9-mz.122-55.SE1.bin 
DECIMAL       HEXADECIMAL     DESCRIPTION
---------------------------------------------------------------
-----------------
1120x70            bzip2 compressed data, block size = 900k
Unpacked binary size is around 30 mb
```

### System Details
- **CPU Architecture**: PowerPC 32-bit big-endian
- **Entry Point**: 0x3000 (visible during device boot via serial)

### Static Analysis
- **Functions Discovered**: ~80k
- **Challenges**:
  - No symbols
  - Single binary OS
  - Indirect function calls via tables filled at runtime

### Debugging Environment
- No public SDK available
- Some firmware versions have a "gdb kernel" command
- Custom GDB server protocol
- Unsupported by modern GDB versions

### Options for Debugging
- Use an older GDB version and patch it
- Use IODIDE (IDA adapter for debugging IOS, built by George Nosenko but not public)

### String XREFS
After recognizing functions and strings with IDAPython, XREFs start to appear. The `CISCO_KITS` string is used as follows:
- Client sends: `\x03CISCO_KITS\x012::1:`
- Second string modifier `%s` is observed empty in the traffic dump

### Exploiting the Vulnerability
- **Buffer Overflow**: Copying until `:` to a stack buffer
- **Crash**: Instruction pointer overwritten by the 116th byte
- **Exploitation Attempt**:
  - R9 points to the buffer
  - No bad characters
  - Overwrite Program Counter with an instruction that jumps to R9
  - **Failure**: Both heap and stack are non-executable; device reboots

### Return-Oriented Programming (ROP)
- **Code Reuse**: Using stack as the data source
- **Epilog Chaining**: For arbitrary memory writes
- **Gadget Search**: Using tools like Ropper

### Successful Exploitation
- **Patch Execution Flow**: Modify the credential check
- **Result**:
  ```sh
  $ python c2960-lanbasek9-m-12.2.55.se11 192.168.88.10 --set
  [+] Connection OK
  [+] Received bytes from telnet service: '\xff\xfb\x01\xff\xfb\x03\xff\xfd\x18\xff\xfd\x1f'
  [+] Sending cluster option
  [+] Setting credless privilege 15 authentication
  [+] All done
  $ telnet 192.168.88.10
  Trying 192.168.88.10...
  Connected to 192.168.88.10.
  Escape character is '^]'.
  catalyst1# show priv
  Current privilege level is 15
  ```

### Real-World Application
- These switch models are common in penetration tests.
- Successfully exploited on real-life engagements:
  - Leak firmware version via SNMP
  - Customize exploit
  - Gain shell access

### Conclusion
- **Exploitation Challenges**:
  - Shellcode reliability across multiple firmware versions
  - Automating ROP gadget search
  - Executing arbitrary PPC instructions instead of memory writes

### Contact
- **Twitter**: @artkond
- **Website**: artkond.com

Thank you!