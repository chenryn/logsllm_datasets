this paper. Instead, this paper considers a representative subset
of such safety requirements, i.e. the requirement to guarantee
PTE safety rules. We start by deﬁning these safety rules.
Let hybrid system H = {Ai| (i = 0, 1, . . ., N )} describes
a wireless CPS. The hybrid automaton Ai describes wireless
CPS member entity ξi. The synchronization labels/functions
describe the communication relationships between these hybrid
automata.
We assume that for each hybrid automaton Ai = (~xi(t),
Vi, invi, Fi, Ei, gi, ri, Li, syni, Φ0,i) (where i = 1 ∼ N ),
Vi is partitioned into two subsets: V safe
. We call
a location v a “safe-location” iff v ∈ V safe
; and a “risky-
location” iff v ∈ V risky
(note we do not differentiate the
safe/risky locations for ξ0).
and V risky
i
i
i
i
There are two types of PTE safety rules, namely:
PTE Safety Rule 1 (Bounded Dwelling): Each entity ξi’s
(i = 1 ∼ N ) continuous dwelling time (i.e. continuous-stay
time-span) in risky-locations is upper bounded by a constant.
To describe the second PTE safety rule, however, we must
ﬁrst introduce the following deﬁnition.
Deﬁnition 1 (Proper-Temporal-Embedding Partial Order):
We say that entity ξi and ξj has a proper-temporal-embedding
partial order ξi ≺ ξj iff their respective hybrid automata Ai
and Aj always satisfy the following properties:
p1.
If ξi dwells in safe-locations at time t (i.e. Ai’s loca-
tion counter ℓi(t) ∈ V safe
), then throughout interval
[t, t + T min
risky:i→j], ξj dwells in safe-locations, where
constant T min
risky:i→j is the ξi to ξj enter-risky safeguard
interval.
i
p2. Whenever ξj dwells in risky-locations, ξi dwells in
risky-locations.
p3.
interval
If ξj dwells in risky-locations at time t, then through-
safe:j→i], ξi dwells in risky-
out
locations, where constant T min
safe:j→i is the ξj to ξi exit-
risky safeguard interval.
[t, t + T min
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 07:54:13 UTC from IEEE Xplore.  Restrictions apply. 
Intuitively, Property p2 implies that whenever entity ξj is
in risky-locations, then entity ξi is already in risky-locations.
Property p1 and p3, in addition, specify the safeguard inter-
val requirements that ξi and ξj enter/exit respective risky-
locations. Speciﬁcally, Property p1 implies that before ξj
enters its risky-locations, ξi should have already been in risky-
locations for at least T min
risky:i→j . Property p3 implies that after
ξj exits its risky-locations (i.e. returns to safe-locations), ξi
must stay in risky-locations for at least T min
safe:j→i.
The above intuition is illustrated by Fig. 1, where in
laser tracheotomy, ventilator ≺ laser-scalpel, if we consider
“pause” and “emission” are risky-locations and “ventilating”
and “shutoff” are safe-locations.
With this notion of PTE partial ordering, the second PTE
safety rule is deﬁned as:
PTE Safety Rule 2 (Proper-Temporal-Embedding): The
proper-temporal-embedding partial ordering between entities
ξ1, ξ2, . . ., ξN forms a full ordering.
In the following, for narrative simplicity and without loss
of generality, we assume that PTE Safety Rule 2 implies a full
ordering of
ξ1 < ξ2 < . . . < ξN .
(1)
We call a safety rule set belongs to the category of PTE
safety rules iff the rule set consists of and only of PTE Safety
Rule 1 and 2. As mentioned before, in this paper, we shall
only focus on wireless CPS whose safety rules belong to the
category of PTE safety rules. For simplicity, we call such
wireless CPS “PTE wireless CPS”.
IV. DEVELOPING DESIGN PATTERN BASED SOLUTIONS
To guarantee PTE safety rules described in the previous
section, we propose a lease based design pattern approach.
This approach is elaborated in the following three subsections.
Subsection IV-A formally describes the proposed lease based
design pattern. Subsection IV-B analyzes the validity of the
proposed design pattern. Subsection IV-C describes how to
transform the lease based design pattern into speciﬁc designs.
A. The Lease Based Design Pattern
For a PTE wireless CPS, we assume that safety is guaran-
teed if all its member entities stay in their safe-locations. The
challenge arises when a remote entity needs to enter its risky-
locations. In the following, we propose a “lease” based design
pattern, and (in the subsequent subsections) show that as long
as the PTE wireless CPS design complies with the proposed
design pattern, the PTE safety rules are guaranteed.
wireless communications are by nature unreliable. Messages
may be lost, and the states of participating entities may become
inconsistent, violating the PTE safety rules.
To deal with the unreliable wireless communications, we
propose a design pattern based on the well-known “leasing”
design philosophy [7]. The “leasing” design philosophy says
that every (distributed) resource must be allocated according
to a “lease”,
i.e. a contract specifying the start/expiration
time of using that resource. If, by the lease’ expiration, the
resource has not yet been released by the user, the resource will
release itself automatically. Therefore, even if the distributed
systems’ communication infrastructure fails, every resource
will be released in the end (by the user or itself) after all. This
can be used to eliminate/heal inconsistent states of distributed
systems.
Lease-based design has been widely adopted in distributed
computer systems, particularly distributed storage and database
systems. We ﬁnd it can also be applied to cyber-physical
systems, where discrete and continuous states intermingle.
Compared to the many existing lease based designs in com-
puter systems, the CPS lease based design faces the following
paradigm shifts.
First, lease based designs in computer (i.e. cyber) systems
are often integrated with distributed check-point and roll-
back [7]–[10]. However, in CPS, computers often have little
control over the physical world states: these states cannot be
check-pointed or rolled-back. For example, we cannot revive
a killed patient; nor can we recover a piece of burnt wood.
Second, instead of carrying out check-point and roll-back,
we need to enforce the PTE temporal ordering and correspond-
ing safeguard intervals to guarantee safety.
Third, not only computers have little control over CPS
physical world states, these states can adversely interfere with
cyber system dynamics.
Considering the above paradigm shifts, our lease based
design pattern shall not use check-point or roll-back. Instead,
its safety is guaranteed by properly conﬁguring temporal logic
parameters and (physical world) continuous state variables.
Speciﬁcally, there are three roles for PTE wireless CPS en-
tities: Supervisor, Initializer, and Participant. The base station
ξ0 serves the role of “Supervisor”. Initially, all entities stay in
their respective safe-locations. We only allow a remote entity
to proactively request switching to its risky-locations. Such a
remote entity is called an “Initializer”.
For the time being,
let us assume there is only one
Initializer; and without loss of generality, assume the Initializer
is remote entity ξN .
According to PTE Safety Rule 2 and Ineq. (1), when ξN re-
quests to enter risky-locations, remote entity ξ1, ξ2, . . . , ξN −1
must enter respective risky-locations before ξN . Remote enti-
ties ξ1, ξ2, . . . , ξN −1 hence play the role of “Participants”.
When a remote entity ξk (k ∈ {1, 2, . . . , N }) of a PTE
wireless CPS requests to enter its risky-locations, PTE Safety
Rule 2 and Ineq. (1) imply that entity ξ0, ξ1, . . . , ξk must
coordinate. this may be achieved through wireless commu-
nications (uplink/downlink) via the base station ξ0. However,
We require that every entity ξi’s (i ∈ {0, 1, 2, . . . , N })
dwelling in risky-locations be based on a lease, i.e. a contract
between the Supervisor and ξi. A lease speciﬁes the expiration
time of dwelling in the risky-locations, and takes effect upon
the entrance to risky-locations. If by the lease expiration, the
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 07:54:13 UTC from IEEE Xplore.  Restrictions apply. 
Supervisor has not yet aborted/cancelled the lease, ξi will exit
to safe-location automatically.
Guided by the above design philosophies, we propose the
design of Supervisor, Initializer, and Participant as following.
Supervisor:
Conceptually, the Supervisor ξ0 shall start from a “Fall-
Back” location. Whenever the Initializer ξN requests leasing
itself to enter risky-locations, the Supervisor shall lease Partic-
ipants ξ1, ξ2, . . ., ξN −1 according to PTE ordering ﬁrst. After
all ξ1 ∼ ξN −1 are leased (i.e. ξ1 ∼ ξN −1 enter respective
risky-locations), the Supervisor approves ξN ’s lease request
to enter risky-location. The Initializer ξN can also request to
cancel the leases; or when an application dependent proposi-
tion ApprovalCondition is violated (e.g. in laser tracheotomy
wireless CPS, ApprovalCondition means blood oxygen level
SpO2 is higher than threshold ΘSpO2 ), Supervisor ξ0 can
abort leases. Lease cancellations/abortions are conducted in
the reverse PTE order.
Fig. 3.
Supervisor.
Sketch of Hybrid Automaton Asupvsr,
the Design Pattern for
The above conceptual design of the Supervisor is speciﬁed
by a hybrid automaton Asupvsr (see Fig. 3 for the sketch of
Asupvsr) as follows.
1. Asupvsr’s location set Vsupvsr include the following
locations: “Fall-Back”, “Lease ξi” (where i = 1 ∼ N ),
“Cancel Lease ξi” (where i = 1 ∼ N ), and “Abort
Lease ξi” (where i = 1 ∼ N ).
2.
Initially,
the Supervisor dwells in location “Fall-
Back”, and all data state variables initial values are
zero.
3. When
if
an
is
in
location
“Fall-Back”,
received (which is
event
evtξN T oξ0Req
sent by
the Initializer requesting for entering risky-locations,
see the descriptions for Ainitzr
in the following),
and the Supervisor has been continuously dwelling
in “Fall-Back” for at least T min
fb,0, and the application
dependent proposition ApprovalCondition holds,
then the Supervisor transits to location “Lease ξ1”.
Along this transition2, the Supervisor sends out event
evtξ0T oξ1LeaseReq, requesting leasing Participant
ξ1.
4. When in location “Lease ξi” (where i = 1 ∼ N − 1),
the behavior of Supervisor can be described by Fig. 4
(a).
5. When in location “Lease ξN ”, the behavior of Super-
visor can be described by Fig. 4 (b).
6. When in location “Cancel Lease ξi” (where i = 1 ∼
N ), the behavior of Supervisor can be described by
Fig. 4 (c).
7. When in location “Abort Lease ξi” (where i = 1 ∼
N ), the behavior of Supervisor can also be described
by Fig. 4 (c), except that every occurrence of “Cancel”
is replaced by “Abort”.
Initializer:
Conceptually, the Initializer ξN shall start from a “Fall-
Back” location. It can randomly request to lease itself to enter
risky-locations. If this request is approved by the Supervisor
ξ0, ξN enters risky-locations. The dwelling in risky-locations
can be cancelled by ξN or aborted by ξ0 at any time; otherwise,
ξN returns to “Fall-Back” when the lease expires.
The above conceptual design of the Initializer is speciﬁed
by a hybrid automaton Ainitzr (see Fig. 5 (a) for the sketch of
Ainitzr) as follows.
1. Ainitzr’s location set Vinitzr include the following loca-
tions: “Fall-Back”, “Requesting”, “Entering”, “Risky
Core”, “Exiting 1”, and “Exiting 2”. V risky
initzr include
location “Risky Core” and “Exiting 1”; all other
locations belong to V safe
initzr.
2.
Initially, the Initializer ξN dwells in location “Fall-
Back”; and all data state variables initial values are
zero.
3. When in location “Fall-Back”, the Initializer ξN can
send event evtξN T oξ0Req and transit to “Requesting”
at any time.
4. When in location “Requesting”,
the Initializer ξN
can send event evtξN T oξ0Cancel and transit back
to “Fall-Back” at any time. Secondly, if ξN dwells
continuously in “Requesting” for T max
req,N , it will au-
tomatically transit back to “Fall-Back”. Thirdly,
if
event evtξ0T oξN Approve is received, ξN transits to
“Entering”.
5. When in location “Entering”, the Initializer ξN can
send event evtξN T oξ0Cancel and transit to “Exiting
if evtξ0T oξN Abort is received, ξN
2”. Secondly,
if ξN dwells
also transits to “Exiting 2”. Thirdly,
continuously in “Entering” for T max
enter,N , it transits to
“Risky Core”.
2In fact, this “transition” includes two consecutive transitions, the ﬁrst
one is on receiving event evtξN T oξ0Req, Supervisor enters an intermediate
location of 0 dwelling time; and then transit from this intermediate location
to “Lease ξ1” and send out evtξ0T oξ1LeaseReq. For narrative simplicity,
in the following, such intermediate locations between two consecutive events
are not elaborated.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 07:54:13 UTC from IEEE Xplore.  Restrictions apply. 
local to the corresponding hybrid automata (so e.g. “Fall-
Back” of Asupvsr and “Fall-Back” of Ainitzr are two distinct
locations).
Participant:
Conceptually, a Participant ξi (i = 1 ∼ N − 1) shall start
from a “Fall-Back” location. Upon receiving lease request from
the Supervisor ξ0, and if the lease is approved, ξi enters risky-
locations. The dwelling in risky-locations can be cancelled by
the Initializer ξN or aborted by the Supervisor ξ0 at any time;