14
15
16
return result;
图10-26r100.bin中sub_4007A8的反编译代码
---
## Page 284
CTF特训营：技术详解、解题方法与
10.3.3加壳284/1144
10.3.3加壳
加壳是指在二进制的程序中植入一段代码，在运行的时候优先取
得程序的控制权，这段代码会在执行的过程中对原始的指令进行解密
还原，之后再将控制权交还给原始代码，执行原来的代码。
经过加壳的程序，其真正的代码是加密存放在二进制文件中的
只有在执行时才从内存中解密还原出来，因此没法对加壳后的程序直
接进行静态分析，所以首先需要进行软件脱壳。
1.基本思路
在CTF中出现的带壳程序通常为已知的壳，因此大多可以通过使
用专用工具或者脚本来进行脱壳。比如UPX壳，可以通过"upx-d
命令进行脱壳。
2.实例分析
本节所列举的实例来自2014ISCC的一个逆向题。首先使用工具
PEiD进行查询，发现是ASProtect壳，如图10-27所示。
---
## Page 285
CTF特训营：技术详解、解题方法与
10.3.3加壳
285/1144
PEiD0.95
文件：C：\Documents and Settingsling桌面\crackme2.exe
浏览
入口点：
00001000
EP段：
>
文件偏移：
00000400
首字节：
38,01,30,BC
>
连接器版本：10.0
子系统：
Win32GUI
>
PESniffer:ASProtectv1.23 RC1（15ms)
>
PEiDDSCAN:ASProtect 1.2x-1.3x [Registered] ->Alexey Solodov
多文件扫描（M）
查看进程（T）
扩展信息
插件
总在最前（S）
选项（0）
关于（）
退出
图10-27
PEiD查壳结果
搜索ASProtect1.2x~1.3x，可以找到对应的脱壳脚本，链接地
址为http://bbs.pediy.com/showthread.php?t=89342。在oD中通过插件
ODbgScript运行该脚本，如图10-28所示
---
## Page 286
CTF特训营：技术详解、解题方法与
10.3.3加壳
286/1144
插件（P）
选项（）
窗口）
帮助H）
[+]
快捷菜单
工具
设置API
1+BP-OLLY
2 01ly Advanced
9OBC3001
3 ApiBreak
0040100B
4API断点设置工具
5清理文件
6 DeJunk
3400FDE
T E Junk Code
8异常计数器
5525
ds:[eax+edi*2]
9 FKVMP
10 FullDisasm
11 IDAFicator
s:[edx+0x20]
XB9F8451E
120DbgScript
运行脚本（S）
打开
13 011yDump
终止
非法使
14 01lyllachine
暂停
15 Heap Vis
继续
16 StrongOD
17 uhooker
脚本运行窗口）.
18中文搜索引擎
脚本日志窗口（L）..
dec eax
关于（）
mou bh,0x50
xchg eax,esi
图10-28
在OD中运行脱壳脚本
脚本运行完成之后，查看0D中的记录，如图10-29所示。
---
## Page 287
CTF特训营：技术详解、解题方法与
10.3.3加壳
287/1144
0A340005
条件暂停：eip
#include“pin.H"
FILEtrace;
ADDRINTminAddr=0x000000000DEAD000
ADDRINTmaxAddr=0x000000000DEAD524;
VOID printip(ADDRINT ip)
if （(ip >= minAddr)&&(ip<= maxAddr))
fprintf (trace,“%p\n", (void *) ip);
VOID Instruction(INS ins,VOID *v)
INS_InsertCall(ins,IPOINT_BEFORE,(AFUNPTR)printip,IARG_INST_PTR
IARG_END);
VOIDFini(INT32code,VOID*v)
fprintf (trace,“#eofin");
fclose(trace);
INT32 Usage ()
PIN_ERROR (This Pintool prints the IPs of every instruction executedin"
+KNOB_BASE:StringKnobSummary()+"n");
return -1;
int main (int argc, char *argv)
trace= fopen("itrace.out”,“w");
if(PIN_Init (argc, argv))
---
## Page 293
CTF特训营：技术详解、解题方法与
10.3.4控制流混淆
293/1144
return Usage ();
INS_AddlnstrumentFunction(Instruction,O);
PIN_AddFiniFunction (Fini, O);
PIN_StartProgram();
returnO;
然后用IDAPython脚本获取对应地址的汇编代码。这里过滤掉了
ROP指令中的jmp指令和ret指令，同时，我们可以发现“addrsi，8"
和“subrsi，8”总是成对出现，所以需要将这两条指令也去掉，代码
如下：
from idc import *
ips =