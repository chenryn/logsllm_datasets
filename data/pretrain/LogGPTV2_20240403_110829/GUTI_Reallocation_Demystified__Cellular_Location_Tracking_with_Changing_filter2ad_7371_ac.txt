C. Identity Allocation Pattern
As proposed in [20], [30], invoking the GUTI reallocation
procedure more frequently appears to be a solution to the
problem arising from the persistence of GUTI for protecting
subscriber confidentiality. However, we observe that the identity
allocation logic of carriers is vulnerable in terms of preserving
subscriber confidentiality even if the temporary identity is
reallocated following each voice call. We verify that most of the
carriers considered (19 of 28) have certain noticeable patterns
for allocating GUTIs. Note that even if a carrier allocates
different GUTIs after every voice call, it can be problematic
if the newly allocated GUTIs are sequential or predictable.
Therefore, an adversary can track a victim’s location by easily
inferring his/her identity. Table II shows the GUTI allocation
patterns of 28 carriers categorized into four cases.
1) Assigning the same GUTI: BE-III, DE-II, FR-II, and JP-I
reassign the same GUTI when reallocating GUTI. They reuse
the previously allocated GUTI, but within different patterns
from one another. First, FR-II has a procedure to reallocate
GUTI to the subscriber; however, it reuses the same value as
the previous one, which is retained for every CSFB voice call.
Second, BE-III and DE-II periodically allocate the same GUTI
values to subscribers. In our experiments, BE-III allocated
the same GUTI value from CSFB calls 3–15 times, and DE-II
allocated the same values from calls 23–104 times. Finally, JP-I
does not reallocate GUTI at all as it adopts Idle-state Signaling
Reduction (ISR) technology for control plane optimization. 3
2) Allocating three bytes as fixed value: We observe that
NL-I, NL-II, CH-II, and DE-III allocates different GUTI values;
however, the values of three of four bytes in M-TMSI are fixed.
We confirm that the positions of the three bytes are fixed in all
four carriers: the first, third, and fourth bytes of the four-byte
M-TMSI. Figure 3 shows the results of tracing M-TMSI at
2The MME Group ID can be changed; however, it is a management code
that is usually wider than the tracking area. Therefore, this value does not
change in a tracking area.
3Note that the attach procedure invokes GUTI reallocation as described.
However, the ISR maintains a connection between the user device and the
network when the CSFB call is terminated, and therefore the UE maintains
the same GUTI.
Fig. 3: M-TMSI value of NL-I by number of voice calls
Fig. 4: M-TMSI value of BE-II by number of voice calls
each voice call in the NL-I dataset 4. In this case, the first,
third, and fourth byte values of the M-TMSI (four bytes) are
fixed at 0xF6, 0xCD, and 0xB4, respectively. We also confirm
that the other carriers follow the same pattern for over 1,500
CSFB calls. In the case of DE-III, we further verified that the
value of the second byte is always smaller than 16. The first
four bits of the second byte in the M-TMSI are fixed at 0000
and the remaining bits are less than or equal to 1111. This
implies that the value of 28 bits (three bytes and four bits) and
their positions in the M-TMSI of DE-III are fixed. We have
not yet found an assignment rule for the second byte. However,
the information from the three fixed bytes and their positions
is sufficient to reveal the subscriber’s identity (Section VI).
3) Two Fixed Bytes: As in the second case above, BE-II,
CH-III, ES-I, FR-I, and NL-III allocate GUTI values, with the
values and positions of two bytes in the M-TMSI byte being
fixed (first and third bytes). As an example, Figure 4 shows the
allocation pattern of the traced M-TMSI values in the BE-II
dataset. Note that the fixed value varied across the test cases
and carriers; however, the fixed positions are the same. We
also make two interesting observations concerning the nonfixed
bytes, namely, the second and fourth bytes in the M-TMSI.
4The figure shows that the range of the x-axis is limited to 30; however,
the same rule holds for numbers larger than 30 as well.
5
0641281920102030Hexadecimal value# of call0641281920102030Hexadecimal value# of call0641281920102030Hexadecimal value# of call048120102030Hexadecimal value# of call(a) 1st byte(b) 2nd byte(c) 3rd byte(d) 4th byteFF4080C0FF4080C0FF4080C0F48C0641281920102030Hexadecimal value# of call4850525456580102030Hexadecimal value# of call0641281920102030Hexadecimal value# of call0641281920102030Hexadecimal value# of call(a) 1st byte(b) 2nd byte(c) 3rd byte(d) 4th byteFF4080C0FF4080C0FF4080C0303234363840D. Unresolved Issue of Identifier Reuse in VoLTE
As our calls include VoLTE calls, we also verify whether
carriers deploy a defense mechanism against the location
leakage attack noted by Shaik et al. [30]. The GUTI allocation
procedure is triggered in three cases: (a) the UE processes
the attach or the update location procedure, (b) the MME of
the UE changes, and (c) the GUTI reallocation command is
issued [3], [4], [30]. Along with the basic conditions, lessons
from previous studies suggest that GUTI (or TMSI) should be
altered and reallocated after each voice call [20], [30]. If not, an
adversary can perform cell-based user location tracking when
combined with paging techniques such as SMS and other data
from messenger applications. To examine whether the same
vulnerabilities exist in VoLTE calls, we run simple but wide-
ranging experiments. For the seven carriers marked with an
asterisk (∗) in Table I, we periodically invoke on average 1,951
VoLTE calls between cellphones and monitor the exposure
of their GUTI values to paging messages. Note that for each
cellphone, we wait for its RRC connection to become idle to
monitor the GUTI.
By examining messages over the control-plane generated by
VoLTE calls from these operators, we confirm that the GUTI
is still not changed in LTE after all voice calls. Note that our
finding is consistent with prior studies that have also shown
the consistency of GUTI values [30]; however, we extend the
test vector to show that many carriers are still using procedures
that are vulnerable.
Remarks. This privacy leakage is mainly caused by a lack
of specifications. The relevant standards only mention the
case of location change but not cases arising after voice
calls. Although VoLTE is being deployed rapidly at present, it
tends to consider performance rather than security. We later
cover detailed experiments and possible attack scenarios in this
context in Section VI.
V. STRESS TESTING
In the basic experiment described in Section IV, we did not
find any noticeable rules for GUTI allocation for nine carriers:
DE-IV, ES-II, KR-I, KR-II, KR-III, US-I, US-II, US-III, and
UK-I. Among these nine carriers, we physically revisited four
carriers and conducted deeper investigations. As a result, we
uncovered several vulnerabilities in these four carriers (KR-
I, KR-II, US-I, and US-II) through stress testing, where we
invoked CSFB calls continuously with a short time gap between
calls 5. We performed two types of stress testing categorized
by the gap between CSFB calls: weak and hard. The results of
each type of testing and the underlying reasons are different for
each carrier. During the stress test, we noticed that the carriers
continually allocate the same GUTI values. Table III shows a
summary of the stress test results.
A. Weak Stress Testing - Waiting for RRC Idle Mode
We first examined the scenario in which a mobile device
receives a paging message as soon as it disconnects from
the base station (RRC idle mode). We make CSFB calls and
disconnect each before the device rings. We then wait until
the UE goes into the RRC idle state, and we generate another
5We did not explore the results of stress testing on the remaining carriers.
Fig. 5: Values of fourth bytes of ES-I, FR-I, and NL-III
First, in the BE-II dataset, the value of the second byte shows
a monotonically increasing pattern with 0 or 1 added; the other
three carriers (CH-III, ES-I, and NL-III) show the same pattern.
Second, the value of the fourth byte shows regularity. As shown
in Figure 4(d), a similar pattern is repeated, and the allocated
values oscillate. The fourth bytes of ES-I, FR-I, and NL-III are
also similar to those of BE-II. Figure 5 shows that the patterns
of these three carriers are almost the same. We also note that
they have an upper bound while increasing monotonically. After
reaching the upper bound value, each provider began assigning
the lower bound value. Finally, in addition to the above five
carriers, CH-I shows a slightly different tendency, where the
first and second bytes are fixed but are changed after being
fixed 10–40 times. These new values are maintained for the
next 10–40 calls.
4) One Fixed Byte: AT-I, AT-II, AT-III, BE-I, and DE-I use
one fixed M-TMSI byte per GUTI reallocation after a voice
call. The position of the fixed byte varied across carriers: AT-I,
BE-I, and DE-I fix the value of the fourth byte, and AT-II
fix that of the first byte. In case of AT-III, we find that the
variation in the values of the other bytes is limited. AT-III uses
the M-TMSI, the value of the third bytes in which is fixed and
the first byte is assigned one of three values.
Summary: Through an analysis of our global dataset, we
reveal the internal GUTI allocation logic of operators (Sec-
tion VI). The overlap of one or two bytes in terms of GUTI
value might not seem a significant threat. However, reducing
the number of possible GUTI values increases the chances of
leaking a subscriber’s identity (Section VI-C). In other words,
as long as the attacker knows if a carrier follows a particular
pattern, by making a number of calls, he/she can identify the
victim’s GUTI. Section VI discusses and analyzes the effects
of our findings on the effectiveness of attacks on user identity.
6
064128192051015202530354045Hexadecimal value# of call064128192051015202530354045Hexadecimal value# of call0641281920102030405060Hexadecimal value# of call(a) ES-I(b) FR-I(c) NL-IIIFF4080C0FF4080C0FF4080C0TABLE III: Stress test results of four selected carriers
(✓indicates that GUTI values are fixed in stress test, and ✗
indicates failure to fix GUTI values)
Carrier Weak Stress Testing Hard Stress Testing
KR-I
KR-II
US-I
US-II
✓
✗
✗
✓
✓
✓
✓
✓
Fig. 6: No GUTI reallocation in weak stress testing in KR-I
CSFB call to trigger a paging message that is exposed to the
broadcast channel. We call this method a “weak stress test.” As
described in Section IV, a mobile device was in the RRC idle
state for a long time because the time interval between each
call was long (∼30 s). However, a weak stress test minimizes
the period for which a device goes into the RRC idle state. This
test makes the base station connect to a device immediately
after disconnecting the device.
The hypothesis underlying this experiment is that the MME
might try to reduce the control-plane processing to handle
overheads to avoid repeating the GUTI reallocation procedure.
To verify this, we examine how the network handles our stress
test by analyzing the dataset obtained from the weak stress
test.
In weak stress testing, US-II and KR-I were found to
omit GUTI reallocation altogether after a few unpredictable
assignments, causing them to reuse old GUTIs. Figure 6 shows
a sample distribution of GUTIs according to the number of
CSFB calls in KR-I. When weak stress testing is performed,
the first nine GUTI values are allocated without any noticeable
pattern. However, from the tenth CSFB call onward, the network
did not reassign GUTI but used the same values. Note that
this does not mean that the same GUTI values are reallocated
by the network but that the GUTI Reallocation Command
is omitted. This can be easily verified by examining whether
the GUTI Reallocation Command is included in the Attach
Accept message from the MME. We confirm this persistent
omission of GUTI reallocation by running the weak stress
test over ten times. Note that each of stress test requires 30
consecutive calls, as shown in Figure 6. The start time of
the omission varies with each trial; however, we observed a
persistent GUTI value from the tenth CSFB call onward in all
7
tests. This implies that even without a GUTI allocation rule,
we can map the temporary identity to a victim through stress
test.
US-II intermittently skips GUTI reallocation; however, it
does not omit it two consecutive times. We also confirm this
omission of GUTI reallocation by running the weak stress test
over ten times, as in KR-I. It omits GUTI reallocation once
on the seventh CSFB call. It also dropped the RRC connection
immediately after omitting the GUTI; this causes the next
paging message to be exposed through the broadcast channel.
B. Hard Stress Testing - Paging without Waiting
We also run a “hard stress test” that invokes paging without
considering the connection between the mobile device and
the base station. As in weak stress testing, we call a mobile
device and end the call before the target phone rings. The only
difference is that the gap between the calls is smaller than
in weak stress testing. On making the CSFB call, we wait
for the network to send a paging message to the target for
3–8 s and hang up. Note that the waiting time varied with
carriers because the time taken to send a paging message to
the target is different for each carrier. As soon as we hung up,
we started another call without waiting. The hard stress test
focuses on dialing quickly without waiting for the RRC idle
mode (disconnection between mobile device and base station),
and examines how the network reacts in this case.
As in weak stress testing, US-II and KR-I do not reallocate
the GUTI in the hard stress test. US-I and KR-II reallocate
the same GUTI to the UE, unlike in weak stress testing where
different GUTIs are allocated for every CSFB call. However,
they have different periods for allocating the same GUTI. Under
hard stress testing, the KR-II device continues to use the same
GUTI. On the other hand, the US-I device could be made to
use the same GUTI two times in succession. These situations
arise in the following two cases: (a) procedure omission and
(b) a signaling race condition.
1) Omission of GUTI Reallocation: The first reason why
UEs have persistent GUTIs is that the carriers omit the GUTI
reallocation procedure. We performed 10 hard stress tests, in
which the network skipped GUTI reallocation in fewer than
10 calls. If the network omits GUTI reallocation, the device
uses the same GUTI value for all services. For example, KR-II
omits GUTI reallocation from 3–15 times when hard stress
calls are made in our experiment.
One reason for this omission might have been the overhead
owing to the processing of signalings on the network side.
As some past studies have noted, the network tries to reduce
the work needed to handle control messages resulting from a
signaling storm [28], [30], [37].
2) Signaling Race Condition: The second reason for allo-
cating the same GUTI value consecutively during the stress
test is a racing condition between control messages during
the TAU procedure; this consists of the Extended Service
Request (ESR) and TAU Accept message. GUTI reallocation
is normally performed with the TAU procedure while handling
the CSFB procedure. Figure 7(a) shows the overall flow of
TAU and GUTI reallocation. Once the network receives the
TAU Request message from the UE, it sends the TAU Accept
0641281921357911131517192123252729Hexadecimal value# of call1st Byte2nd Byte3rd Byte4th ByteNetwork skip GUTI ReallocationEnd weak stress testingFF4080C0Fig. 7: Usage of GUTI in Tracking Area Update and CSFB call
message containing the GUTI Reallocation Command with a
new GUTI to the UE; this notifies the network of the completion
of the procedure by adding GUTI Reallocation Complete
to the TAU Complete message. The UE and the network use
the newly assigned GUTI after GUTI reallocation.
However, anomalies occur in US-I and KR-II when the
order of the TAU complete message and the ESR message is
reversed during hard stress testing. If another user calls the UE
before the network has sent a GUTI Reallocation Command
message to the UE, the network sends a paging request to the
UE using the old GUTI. The UE receives the paging request
and sends an ESR, a message to the network to request a