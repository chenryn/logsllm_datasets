    client_secret = 0ldS3cretKey
    [plugin.grafana-image-renderer]
    rendering_ignore_https_errors = true
    [feature_toggles]
    enable = newNavigation
    ```
    You can override variables on Linux machines with:
    ```bash
    export GF_DEFAULT_INSTANCE_NAME=my-instance
    export GF_SECURITY_ADMIN_USER=owner
    export GF_AUTH_GOOGLE_CLIENT_SECRET=newS3cretKey
    export GF_PLUGIN_GRAFANA_IMAGE_RENDERER_RENDERING_IGNORE_HTTPS_ERRORS=true
    export GF_FEATURE_TOGGLES_ENABLE=newNavigation
    ```
    And in the docker compose you can edit the `.env` file. Mine looks similar to:
    ```bash
    GRAFANA_VERSION=latest
    GF_DEFAULT_INSTANCE_NAME="production"
    GF_SERVER_ROOT_URL="https://your.domain.org"
    GF_DATABASE_TYPE=postgres
    DATABASE_VERSION=15
    GF_DATABASE_HOST=grafana-db:5432
    GF_DATABASE_NAME=grafana
    GF_DATABASE_USER=grafana
    GF_DATABASE_PASSWORD="change-for-a-long-password"
    GF_DATABASE_SSL_MODE=disable
    GF_AUTH_GENERIC_OAUTH_ENABLED="true"
    GF_AUTH_GENERIC_OAUTH_NAME="authentik"
    GF_AUTH_GENERIC_OAUTH_CLIENT_ID=""
    GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET=""
    GF_AUTH_GENERIC_OAUTH_SCOPES="openid profile email"
    GF_AUTH_GENERIC_OAUTH_AUTH_URL="https://authentik.company/application/o/authorize/"
    GF_AUTH_GENERIC_OAUTH_TOKEN_URL="https://authentik.company/application/o/token/"
    GF_AUTH_GENERIC_OAUTH_API_URL="https://authentik.company/application/o/userinfo/"
    GF_AUTH_SIGNOUT_REDIRECT_URL="https://authentik.company/application/o//end-session/"
    GF_AUTH_OAUTH_AUTO_LOGIN="true"
    GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH="contains(groups[*], 'Grafana Admins') && 'Admin' || contains(groups[*], 'Grafana Editors') && 'Editor' || 'Viewer'"
    ```
* New: [Configure datasources.](grafana.md#configure-datasources)
    You can manage data sources in Grafana by adding YAML configuration files in the `provisioning/datasources` directory. Each config file can contain a list of datasources to add or update during startup. If the data source already exists, Grafana reconfigures it to match the provisioned configuration file.
    The configuration file can also list data sources to automatically delete, called `deleteDatasources`. Grafana deletes the data sources listed in `deleteDatasources` before adding or updating those in the datasources list.
    For example to [configure a Prometheus datasource](https://grafana.com/docs/grafana/latest/datasources/prometheus/) use:
    ```yaml
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        # Access mode - proxy (server in the UI) or direct (browser in the UI).
        url: http://prometheus:9090
        jsonData:
          httpMethod: POST
          manageAlerts: true
          prometheusType: Prometheus
          prometheusVersion: 2.44.0
          cacheLevel: 'High'
          disableRecordingRules: false
          incrementalQueryOverlapWindow: 10m
          exemplarTraceIdDestinations: []
    ```
* New: [Configure dashboards.](grafana.md#configure-dashboards)
    You can manage dashboards in Grafana by adding one or more YAML config files in the `provisioning/dashboards` directory. Each config file can contain a list of dashboards providers that load dashboards into Grafana from the local filesystem.
    Create one file called `dashboards.yaml` with the next contents:
    ```yaml
    ---
    apiVersion: 1
    providers:
      - name: default # A uniquely identifiable name for the provider
        type: file
        options:
          path: /etc/grafana/provisioning/dashboards/definitions
    ```
    Then inside the config directory of your docker compose create the directory `provisioning/dashboards/definitions` and add the json of the dashboards themselves. You can download them from the dashboard pages. For example:
    - [Node Exporter](https://grafana.com/grafana/dashboards/1860-node-exporter-full/)
    - [Blackbox Exporter](https://grafana.com/grafana/dashboards/13659-blackbox-exporter-http-prober/)
    - [Alertmanager](https://grafana.com/grafana/dashboards/9578-alertmanager/)
* New: [Configure the plugins.](grafana.md#configure-the-plugins)
    To install plugins in the Docker container, complete the following steps:
    - Pass the plugins you want to be installed to Docker with the `GF_INSTALL_PLUGINS` environment variable as a comma-separated list.
    - This sends each plugin name to `grafana-cli plugins install ${plugin}` and installs them when Grafana starts.
    For example:
    ```bash
    docker run -d -p 3000:3000 --name=grafana \
      -e "GF_INSTALL_PLUGINS=grafana-clock-panel, grafana-simple-json-datasource" \
      grafana/grafana-oss
    ```
    To specify the version of a plugin, add the version number to the `GF_INSTALL_PLUGINS` environment variable. For example: `GF_INSTALL_PLUGINS=grafana-clock-panel 1.0.1`.
    To install a plugin from a custom URL, use the following convention to specify the URL: `;`. For example: `GF_INSTALL_PLUGINS=https://github.com/VolkovLabs/custom-plugin.zip;custom-plugin`.
### [Jellyfin](jellyfin.md)
* New: [Forgot Password. Please try again within your home network to initiate the password reset process.](jellyfin.md#forgot-password.-please-try-again-within-your-home-network-to-initiate-the-password-reset-process.)
    If you're an external jellyfin user you can't reset your password unless you are part of the LAN. This is done because the reset password process is simple and insecure.
    If you don't care about that and still think that the internet is a happy and safe place [here](https://wiki.jfa-go.com/docs/password-resets/) and [here](https://github.com/hrfee/jellyfin-accounts/issues/12) are some instructions on how to bypass the security measure.
    For more information also read [1](https://github.com/jellyfin/jellyfin/issues/2282) and [2](https://github.com/jellyfin/jellyfin/issues/2869).
### [Matrix](matrix.md)
* New: How to install matrix.
    ```bash
    sudo apt install -y wget apt-transport-https
    sudo wget -O /usr/share/keyrings/element-io-archive-keyring.gpg https://packages.element.io/debian/element-io-archive-keyring.gpg
    echo "deb [signed-by=/usr/share/keyrings/element-io-archive-keyring.gpg] https://packages.element.io/debian/ default main" | sudo tee /etc/apt/sources.list.d/element-io.list
    sudo apt update
    sudo apt install element-desktop
    ```
### [Mediatracker](mediatracker.md)
* Correction: [Update ryot comparison with mediatracker.](mediatracker.md#alternatives)
    [Ryot](https://github.com/IgnisDa/ryot) has a better web design, it also has a [jellyfin scrobbler](https://github.com/IgnisDa/ryot/pull/195), although it's not [yet stable](https://github.com/IgnisDa/ryot/issues/187). There are other UI tweaks that is preventing me from migrating to ryot such as [the easier media rating](https://github.com/IgnisDa/ryot/issues/284) and [the percentage over five starts rating system](https://github.com/IgnisDa/ryot/issues/283).
### [retroarch](retroarch.md)
* New: Install retroarch instructions.
    To add the stable branch to your system type:
    ```bash
    sudo add-apt-repository ppa:libretro/stable
    sudo apt-get update
    sudo apt-get install retroarch
    ```
    Go to Main Menu/Online Updater and then update everything you can:
    - Update Core Info Files
    - Update Assets
    - Update controller Profiles
    - Update Databases
    - Update Overlays
    - Update GLSL Shaders
### [Vim](vim.md)
* New: Update treesitter language definitions.
    To do so you need to run:
    ```vim
    :TSInstall 
    ```
    To update the parsers run
    ```vim
    :TSUpdate
    ```
* New: [Telescope changes working directory when opening a file.](vim.md#telescope-changes-working-directory-when-opening-a-file)
    In my case was due to a snippet I have to remember the folds:
    ```
    vim.cmd[[
      augroup remember_folds
        autocmd!
        autocmd BufWinLeave * silent! mkview
        autocmd BufWinEnter * silent! loadview
      augroup END
    ]]
    ```
    It looks that it had saved a view with the other working directory so when a file was loaded the `cwd` changed. To solve it I created a new `mkview` in the correct directory.
# Arts
## Dancing
### [Lindy Hop](lindy.md)
* New: New Charleston, lindy and solo jazz videos.
    Charleston:
    - The DecaVita Sisters:
       - [Freestyle Lindy Hop & Charleston](https://www.youtube.com/watch?v=OV6ZDuczkag)
       - [Moby "Honey"](https://www.youtube.com/watch?v=ciMFQnwfp50)
    Solo Jazz:
    - [Pedro Vieira at Little Big Swing Camp 2022](https://yewtu.be/watch?v=pmxn2uIVuUY)
    Lindy Hop:
    - The DecaVita Sisters:
       - [Compromise - agreement in the moment](https://youtu.be/3DhD2u5Eyv8?si=2WKisSvEB3Z8TVMy)
       - [Lindy hop improv](https://www.youtube.com/watch?v=qkdxcdeicLE)
## Video Gaming
### [Age of Empires](age_of_empires.md)
* New: How to fight Vietnamese with Mongols.
    Gain early map control with scouts, then switch into steppe lancers and front siege, finally castle in the face when you clicked to imperial.
    - [Example Hera vs Mr.Yo in TCI](https://yewtu.be/watch?v=20bktCBldcw)