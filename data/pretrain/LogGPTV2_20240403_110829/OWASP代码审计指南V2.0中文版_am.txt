The employee and temp-employee roles may access any method of the EmployeeService 
bean  
employee 
temp-employee 
EmployeeService 
* 
The employee role may access the findByPrimaryKey, getEmployeeInfo, and the 
updateEmployeeInfo(String) method of the AardvarkPayroll bean  
employee 
AardvarkPayroll 
findByPrimaryKey 
AardvarkPayroll 
getEmployeeInfo 
AardvarkPayroll 
129 
updateEmployeeInfo 
java.lang.String 
The admin role may access any method of the EmployeeServiceAdmin bean  
admin 
EmployeeServiceAdmin 
* 
Any 
authenticated 
user 
may 
access 
any 
method 
of 
the 
EmployeeServiceHelp 
bean 
EmployeeServiceHelp 
* 
No 
fireTheCTO 
methods 
of 
the 
EmployeeFiring 
bean 
may 
be 
used 
in 
this 
deployment 
EmployeeFiring 
fireTheCTO 
130 
如果使用 XML 部署描述符来保护应用程序，代码审计应该包括“web.xml”和
“ejb-jar.xml”文件，以确保访问控制被正确地应用于角色，并且需要验证方法是预期的。 
3.5.3 JEE 注解 
Java 文档[2]中定义了安全性的 JEE 注解。可用的注释有: 
@ DeclareRoles 
@DenyAll -任何角色都不能调用该方法。 
@PermitAll -所有角色都可以调用该方法。 
@RolesAllowe-允许角色调用方法。 
@RunAs -以特定角色动态运行方法。 
例如，下面示例中的代码允许员工和经理将电影添加到持久存储中，任何人都可以列出
电影，但只有经理可以删除电影。 
public class Movies { 
private EntityManager entityManager; 
131 
@RolesAllowed({“Employee”, “Manager”}) 
public void addMovie(Movie movie) throws Exception { 
entityManager.persist(movie); 
} 
@RolesAllowed({“Manager”}) 
public void deleteMovie(Movie movie) throws Exception { 
entityManager.remove(movie); 
} 
@PermitAll 
public List getMovies() throws Exception { 
Query query = entityManager.createQuery(“SELECT m from Movie as m”); 
return query.getResultList(); 
} 
} 
代码审计应该寻找这样的注释。如果存在，请确保它们反映了正确的角色和权限，并且
与“ejb-jar.xml”文件中声明的任何角色权限一致。 
3.5.4 应用服务器特定配置 
3.5.4.1 Apache Tomcat 
应审计 server.xml[3]文件，以确保安全相关参数按预期配置。tomcat server.xml 文件
定义了许多与安全相关的参数。 
参数 
描述 
Server 
这是接受关闭命令的端口。 
132 
Connector
s 
maxPostSize, 
maxParameterCount, 
server, 
SSLEnabled, 
secure, ciphers 
Host 
autoDeploy, deployOnStartup, deployXML 
Context 
crossContext, privileged, allowLinking 
Filter 
Tomcat 提供了许多过滤器，可以对传入的请求进行配置 
Tomcat 过滤器尤其强大，除非有令人信服的理由，否则代码审计应该验证它们是否被
使用。 
3.5.4.2 Jetty 
Jetty 增加了几项安全增强功能: 
⚫ 
限制表单内容 
⚫ 
混淆密码 
在“jetty-web.xml”文件中，可以在服务器和 web 应用程序级别配置最大表单内容大
小和表单键数量。 
… 
200000 
200 
133 
... 
org.eclipse.jetty.server.Request.maxFormContentSize 
100000 
org.eclipse.jetty.server.Request.maxFormKeys 
2000 
Jetty 还支持在通常需要纯文本密码的 jetty XML 文件中使用模糊密码。下面示例显示
了使用模糊处理为 JDBC 数据源设置密码的示例代码。 
jdbc/DSTest 
com.mysql.jdbc.Driver 
jdbc:mysql://localhost:3306/foo 
dbuser 
OBF:1ri71v1r1v2n1ri71shq1ri71shs1ri71v1r1v2n1ri7 
5 
134 
50 
5 
30 
3.5.4.3 JBoss 
JBoss 应用服务器，像 Jetty 一样，在其 XML 配置文件中允许密码混淆(在 JBoss 中称
为密码屏蔽)。使用 JBoss 密码实用程序创建密码掩码后，用以下注释替换 XML 配置文件
中出现的任何掩码密码。 
@org.jboss.security.integration.password.Password 
(securityDomain=MASK_NAME,methodName=setPROPERTY_NAME) 
请 参 见 《 JBoss
安 全 指 南 》 中 的 “ 在
XML
配 置 中 屏 蔽 密 码 ”
（ https://docs.jboss.org/jbosssecurity/docs/6.0/security_guide/html_single/index.
html）。 
3.5.4.4 Oracle WebLogic 
WebLogic 服务器支持“weblogic.xml”文件中的附加部署描述符，如下表所示。 
表:网络逻辑安全参数 
135 
参数 
描述 
externally-defined 
角色到主体的映射是在 WebLogic 管理控制台中外
部定义的。 
run-as-principal-name 
当以角色身份运行时，为该角色分配主体。 
run-as-role-assignment 
包含 run-as-principal-name 描述符。 
security-permission 
包含安全许可规范描述符。 
Filter 