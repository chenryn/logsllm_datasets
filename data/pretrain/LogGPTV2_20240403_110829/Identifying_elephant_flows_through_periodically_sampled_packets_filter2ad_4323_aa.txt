title:Identifying elephant flows through periodically sampled packets
author:Tatsuya Mori and
Masato Uchida and
Ryoichi Kawahara and
Jianping Pan and
Shigeki Goto
Identifying Elephant Flows Through
Periodically Sampled Packets
Tatsuya Mori
NTT Service Integration Labs
Waseda University
PI:EMAIL
Masato Uchida
NTT Service Integration Labs
PI:EMAIL
Ryoichi Kawahara
NTT Service Integration Labs
PI:EMAIL
Jianping Pan
NTT MCL
PI:EMAIL
ABSTRACT
Identifying elephant ﬂows is very important in developing
eﬀective and eﬃcient traﬃc engineering schemes. In addi-
tion, obtaining the statistics of these ﬂows is also very useful
for network operation and management. On the other hand,
with the rapid growth of link speed in recent years, packet
sampling has become a very attractive and scalable means
to measure ﬂow statistics; however, it also makes identi-
fying elephant ﬂows become much more diﬃcult. Based on
Bayes’ theorem, this paper develops techniques and schemes
to identify elephant ﬂows in periodically sampled packets.
We show that our basic framework is very ﬂexible in mak-
ing appropriate trade-oﬀs between false positives (misiden-
tiﬁed ﬂows) and false negatives (missed elephant ﬂows) with
regard to a given sampling frequency. We further validate
and evaluate our approach by using some publicly available
traces. Our schemes are generic and require no per-packet
processing; hence, they allow a very cost-eﬀective imple-
mentation for being deployed in large-scale high-speed net-
works.
Categories and Subject Descriptors: C.2.3 [Computer-
Communication Networks]: Network Operations—Network
monitoring
General Terms: Measurement, Theory, Veriﬁcation
Keywords: measurement, ﬂow statistics, packet sampling,
Bayes’ theorem, the elephant and mice phenomenon
1.
INTRODUCTION
As many measurement-based studies have revealed, ﬂow
statistics exhibit strong heavy-tail behaviors in various net-
works (including the Internet) [5, 8, 12, 15, 16]. This char-
acteristic is often referred to as the elephant and mice phe-
nomenon (a.k.a.
the vital few and trivial many rule); i.e.,
most ﬂows (mice ﬂows) only have a small number of pack-
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
IMC’04, October 25–27, 2004, Taormina, Sicily, Italy.
Copyright 2004 ACM 1-58113-821-0/04/0010 ...$5.00.
Shigeki Goto
Waseda University
PI:EMAIL
ets, while a very few ﬂows (elephant ﬂows) have a large
number of packets. A noticeable attribute of elephant ﬂows
is that they contribute a large portion of the total traﬃc
volume despite being relatively few in the number of ﬂows.
For example, for one trace used in this study, about 0.02%
of all ﬂows contributed more than 59.3% of the total traﬃc
volume.
Thus, the impact of elephant ﬂows on network perfor-
mance is signiﬁcant. This fact makes identifying these ﬂows
very important in developing traﬃc engineering schemes.
In addition, knowing the statistics of such ﬂows is also very
useful for network operation and management. By quickly
identifying elephant ﬂows that are overwhelmingly consum-
ing network resources, network operators can immediately
take appropriate actions against individual hosts or net-
works generating these ﬂows.
To identify elephant ﬂows, traditionally we have to collect
all packets in the concerned network, and then extract their
ﬂow statistics. As many previous studies have indicated,
however, such an approach lacks of scalability [1–4, 7]. For
very high-speed links (say, OC-192+), directly measuring all
ﬂows is beyond the capability of measurement equipments
(i.e., the requirements for CPU power, memory/storage ca-
pacity and access speed are overwhelming). As a solution
to this problem, recently packet sampling techniques have
attracted much attention from both the industry and the re-
search community. For instance, some modern routers have
these functions embedded, e.g., NetFlow [11] and sFlow [14].
The Packet Sampling (psamp) Working Group [13] in IETF
has been standardizing techniques related to packet sam-
pling.
In this paper, we are particularly interested in the follow-
ing problem: “How can we identify elephant ﬂows in sam-
pled packets?” When answering this question, we adopt the
simplest form of packet sampling; i.e., the sampling process
is completely ﬂow-state independent, and per-packet pro-
cessing such as ﬂow lookup and packet hashing is totally
unnecessary. This form of packet sampling can be easily
achieved by using a very simple technique — periodic sam-
pling. The purpose of adopting this approach is to reduce the
implementation cost and the operation overhead. For ISPs
operating large-scale networks with a variety of measure-
ment equipments, a cost-eﬀective implementation is consid-
ered crucial in practice.
The main contribution of our work is developing a frame-
work to ﬁnd the threshold of sampled packets for a single
ﬂow, which can determine whether the ﬂow is an elephant
ﬂow in unsampled packets1. We show that such a thresh-
old can be calculated by using Bayes’ theorem. To do so,
we introduce an a priori distribution of the number of per-
ﬂow packets (i.e., the distribution of the number of per-ﬂow
packets in unsampled packets). This approach is very ﬂexi-
ble in making appropriate trade-oﬀs between false positives
(misidentiﬁed ﬂows) and false negatives (missed elephant
ﬂows) with regard to a given sampling frequency. Based on
our approach, we ﬁnd, somehow to our surprise, that the
thresholds calculated for a variety of a priori distributions
are quite similar. This observation suggests that a calcu-
lated threshold for a network in a certain period can be ap-
plicable to the network and other networks for a long run,
which also reduces the operation overhead of our schemes.
The remainder of the paper is organized as follows. Sec-
tion 2 reviews some related work and compares with our
work. Section 3 gives the deﬁnition of elephant ﬂows.
In
Section 4, we describe how to identify elephant ﬂows in pe-
riodically sampled packets. We also validate and evaluate
our approach by using some public packet traces. Section 5
discusses the way of obtaining such an a priori distribution.
The eﬀectiveness of our approach in other networks is also
discussed. In Section 6, we conclude this paper with a brief
summary.
2. RELATED WORK
The problem addressed in this paper has also been dis-
cussed by Estan and Varghese [4]. The main idea of their
approach is to focus on elephant ﬂows and neglect numer-
ous mice ﬂows, which is quite similar to ours. They pro-
posed two novel techniques, referred to as sample-and-hold
and multistage ﬁlters, respectively. Both techniques improve
the process of extracting statistics of elephant ﬂows in high-
speed networks, while still keeping the memory consumption
reasonably low. The main diﬀerence of their approach from
ours is its requirement for complex per-packet processing,
which may increase its implementation cost and operation
overhead. On the other hand, the advantage of our approach
is due to its simplicity; since it has no requirement for per-
packet processing, the implementation cost of our schemes
will be much lower.
In another related work, Duﬃeld et al. [3] investigated
how to infer unsampled ﬂow statistics (instead of identify-
ing elephant ﬂows) from sampled ﬂow statistics. Their key
idea is to use a scaling approach, which is based on the num-
ber of sampled SYN packets in TCP ﬂows. Kumar et al. [7]
proposed a new technique referred to as space-code Bloom
ﬁlter (SCBF) for extracting per-ﬂow statistics of traﬃc in
high-speed networks. The key points of their approach are
extending the traditional Bloom ﬁlter with multiple sets of
hash functions and using multi-resolution sampling. Their
approach can capture most ﬂow statistics very well, while
only requiring a small amount of memory resources. How-
ever, identifying elephant ﬂows through their approach re-
quires the identities (e.g., source IP addresses) of potential
i.e., it requires a priori knowledge of the
elephant ﬂows;
elephant ﬂows ﬁrst. Papagiannaki et al. [12] proposed a
scheme to classify elephant ﬂows based on both ﬂow volume
and time persistence. Their approach successfully isolates
1In this paper, unsampled and sampled packets refer to the
packet trace before and after the packet sampling process.
100
10-2
]
x
=
j
X
[
r
P
10-4
10-6
100
101
102
x
103
104
105
Figure 1: Probability density of Xj for the IPCL
trace.
elephant ﬂows that exhibit considerable persistence in time
domain. Since their scheme assumes the direct measure-
ment of all ﬂows, some extensions will be required to obtain
per-ﬂow statistics in very high-speed networks. Golab et
al. [6] proposed a deterministic algorithm to identify fre-
quent items (similar to elephant ﬂows in our context) using
a memory-limited sliding window model. Although the algo-
rithm can fulﬁll its objective with limited memory resources,
it still requires per-packet processing, which we want to com-
pletely avoid in our context.
3. DEFINITION OF ELEPHANT FLOWS
A qualitative characterization of elephant ﬂows is that
they represent the majority of total traﬃc volume (in the
number of packets or bytes) while being relatively few in
the number of ﬂows. The quantitative deﬁnition of an ele-
phant ﬂow can be arbitrarily determined by network opera-
tors according to their own criteria. In this paper, we deﬁne
elephant ﬂow as a ﬂow that contributes more than 0.1% of
all unsampled packets.
For illustration purpose, here we use a packet trace of In-
ternet traﬃc measured at an OC-48c backbone link by the
PMA project of NLANR2. In this trace, we considered the
ﬁrst 107 packets, referred to as the unsampled IPCL trace
or simply trace when the context is clear, which correspond
to about 137 seconds of observed traﬃc. The choice of 107
packets is considered reasonable for calculation convenience;
the number of packets still allows us to obtain suﬃcient data
for statistical analysis. Moreover, since the trace lasts about
137 seconds (with an average throughput of about 1 Gbps),
the identiﬁed elephant ﬂows within this time window can
give meaningful information for the purpose of traﬃc engi-
neering and network operation3. Throughout this paper, we
deﬁne a ﬂow by the 5-tuple identity (i.e., source/destination
IP addresses, source/destination port numbers, and proto-
col identiﬁer). Since the session time of some elephant ﬂows
can be very long (say, more than 3 hours), we include all par-
tial ﬂows in the time window (e.g., TCP ﬂows with missing
SYN or FIN packets) for analysis purpose. Our objective
2More precisely, we use the trace IPLS-CLEV-20020814-
090000-0 [9].
3We conﬁrmed that in many cases, elephant ﬂows did exceed
this time window; i.e., an identiﬁed elephant ﬂow within the
ﬁrst time window will be recognized as an elephant ﬂow
again in the following time windows with high probability.
That result is omitted due to space limit.
is to identify elephant ﬂows by using packets sampled from
the unsampled trace as quick and accurate as possible.
Figure 1 shows the probability density Pr [Xj = i] (i =
1, 2, ...) of the IPCL trace, where Xj is the number of pack-
ets of the j-th ﬂow. The probability density of Xj clearly
decays in an approximate power-law fashion. As many pre-
vious measurement-based studies [5, 8, 12, 15, 16] have re-
vealed, this characteristic seems to be intrinsic to Internet
traﬃc. The IPCL trace contains 737, 780 ﬂows in the ob-
served time window. Since an elephant ﬂow by our deﬁni-
tion is the one that contributes more than 0.1% of the total
107 packets, any ﬂow j for which Xj ≥ 104 is considered
as an elephant ﬂow in this paper. Under this deﬁnition, we
have 167 elephant ﬂows in the unsampled IPCL trace; these
ﬂows account for more than 59.3% of the total traﬃc volume
(in the number of bytes).
4.
IDENTIFYING ELEPHANT FLOWS
In this section, we propose an approach to identify ele-
phant ﬂows by counting the number of sampled packets for
individual ﬂows. Our task is to ﬁnd a threshold determining
whether a sampled ﬂow represents an elephant ﬂow in un-
sampled packets. Our approach is based on Bayes’ theorem.
Here, we assume that an a priori distribution Pr [Xj = i] is
known in advance. How to obtain such a Pr [Xj = i] will be
discussed in the next section. We ﬁrst describe a framework
for our approach. Then, we discuss the trade-oﬀ between
false positives and false negatives with regard to a given
sampling frequency. Based on these results, we give a pro-
cedure of identifying elephant ﬂows in sampled packets. Fi-
nally, we present numerical results to validate and evaluate
our approach.
4.1 A framework for our approach
Let n packets be randomly sampled from a population of
N packets4. The sampling frequency f is deﬁned as f =
n/N . Let Yj be the number of sampled packets for a ﬂow
j, which has Xj packets in the population (i.e., unsampled
packets). Given Xj = x, the probability with which Yj
satisﬁes Yj = y is
(cid:2)(cid:3)(cid:1)
(cid:2)
(cid:1)
(cid:2)(cid:1)
x
y
N − x
n − y
N
n
,
(1)
Pr [Yj = y|Xj = x] =
which is a hyper-geometric distribution5.
According to Bayes’ theorem, given Yj ≥ y, the proba-
bility with which Xj satisﬁes Xj ≥ x can be calculated as
follows.
(cid:4)
Pr [Xj ≥ x|Yj ≥ y]
(cid:4)
=
,
(2)
k=x Pr [Yj ≥ y|Xj = k] Pr [Xj = k]
k=1 Pr [Yj ≥ y|Xj = k] Pr [Xj = k]
where Pr [Yj ≥ y|Xj = x] = 1 − (cid:4)y−1
i=0 Pr [Yj = i|Xj = x],
and Pr [Xj = i] is the probability density of Xj shown in
Fig. 1.
4Precisely speaking, periodic sampling, which will be
adopted in our scheme, is diﬀerent from random sampling.
However, since there is a large number of concurrent ﬂows
coexisting in a high-speed link, successive packets of a given
ﬂow will be interleaved by packets of many other ﬂows,
which eﬀectively randomizes the selection of packets of the
given ﬂow [3].
5To calculate (1), we use its binomial approximation.
1
)
’
y
(
R
N
F
,
)
’
y
(
R
P
F
0.8
0.6
0.4
0.2
f=0.001
FPR(y’)
FNR(y’)
1
0.8