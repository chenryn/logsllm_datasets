domains hosted in the direct inetnum of this IP, which were
found from Active DNS dataset [68]. Our evaluation on the
labeled set shows that non-residential IPs have 5.49 as the
average feature value while residential IPs only have 0.016.
• IP Whois features. We also used phone numbers and email
addresses to identify the owners of the inetnum for an IP, and
discovered that residential IPs tend to have much more inetnum
objects (3,536 on average) than non-residential IPs (1,482 on
average). This could happen when the ISP assigns large chunks
of continuous IPs to their organizational users. Additionally,
we designed the features to proﬁle the size and stability of the
direct inetnum of a given IP. Speciﬁcally, we retrieved the IP’s
historical direct inetnums from 24 IP whois snapshots in the
last 2 years, and identiﬁed their sizes, depths on the inetnum
tree, and further calculated the variations of these parameters
to capture their changes in the past 24 months. We observed
that 70% of the residential IPs have a size (of historical direct
inetnums) below 105, while 58% of non-residential IPs have a
size above 105. Also residential IPs are much more stable in
their depths on the inetnum tree, with a variation below 0.16.
Evaluation and results. Over 10K residential IPs and 10K
non-residential IPs, we trained a Random Forest (RF) classiﬁer,
which achieved an excellent performance in a 5-Fold cross
validation (precision of 95.61% and recall of 97.12%). We
further evaluated the model over the four labeled datasets as
well as the unlabeled dataset (6.2M RESIP IPs we collected)
with sampled manual validation. Our study shows that this
model made the predictions in line with the natures of these sets
(more leaning toward residential or non-residential IPs in the
cases of the noisy datasets) and particularly on the unlabeled
set, it achieved a precision of 95.80%. When applying the
model on 6.2M RESIP IPs we collected, it detected 5.9M
(95.22%) residential IPs and 0.3M (4.78%) non-residential IPs.
More details about the evaluation process and results can be
From the above datasets, we built a labeled set with 10K
residential IPs and 10K non-residential IPs randomly sampled
from resi-clean and non-resi-clean, respectively (see Table II).
They were used in feature evaluation and classiﬁer training
while the rest datasets were applied to evaluate our classiﬁer.
(cid:18)(cid:18)(cid:25)(cid:26)
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:44:47 UTC from IEEE Xplore.  Restrictions apply. 
Public  
network
Private  
network
Inﬁltration
Client
request 
raap-xx.site
Gateway
RESIP IP
Web Server
request 
raap-xx.site
RESIP IP
request 
raap-xx.site
if request from 
controlled client
Router/NAT
Gateway
RESIP
(printer)
OutsideFP
RESIP IP
RESIP IP banners
OutsideFP is 
router or NAT
InsideFP
request 
127.0.0.1
request 
127.0.0.1
RESIP IP banners
OutsideFP
InsideFP
(a) InsideFP vs OutsideFP
(b) Host ﬁngerprinter’s analysis pipeline.
Fig. 3: Host ﬁngerprinting.
found in Appendix IX-A.
C. Host Proﬁling
To further understand RESIPs, it is very important to proﬁle
their host devices in addition to their IPs. As mentioned earlier,
residential IPs tend to be assigned in a dynamic manner. Then,
once a RESIP IP is captured, host proﬁling must be conducted
and ﬁnished before the RESIP host has moved to another
IP, otherwise, the result will be invalid. To achieve this, we
designed a real-time proﬁling system that can simultaneously
ﬁngerprint newly captured RESIP hosts, measure their relaying
time (periods when serving as RESIPs), and detect when they
get ofﬂine (stop serving as RESIPs) or their IPs change. As
illustrated in Figure 2, the system consists of three modules: a
host ﬁngerprinter, an IP liveness checker and a relaying time
proﬁler, which work on a given RESIP simultaneously.
In a nutshell, the host ﬁngerprinter will compose and send
various probes to a given RESIP IP on commonly opened
TCP/UDP ports including 80 for HTTP, 22 for SSH, 23 for
Telnet, 443 for HTTPS, 554 for RTSP and 5000 for UPNP.
Once response received and banners grabbed, the Nmap service
detection probe list [16] will be applied to identify device type
and vendor information.
This process turns out to be more complicated than it
appears to be. A challenge comes from the fact that an IP
can be frequently re-assigned to different hosts, often not
the RESIP we are interested in. To address this problem,
our proﬁling system immediately started ﬁngerprinting an IP
address after it was observed by our web server. This was
further conﬁrmed, in the presence of both sticky and half-
sticky gateways, through sending another request right after
the banners were grabbed: if the same IP was seen by our
server again, we were conﬁdent that the banner belonged to
the same RESIP. We call this process “outside ﬁngerprinting”
(outsideFP) as the probing targets at the RESIP IP from the
outside. Another issue is caused by the presence of a private
network the RESIP host often stays in. So a probe to its public
IP only gets to the gateway NATs and may not reach the
actual RESIP host. Our solution is based upon the observation
that many RESIP providers do not inspect the target IP that
the client visits, which allows our client to probe the proxy’s
loopback address 127.0.0.1 through its connection with the
gateway. Our study found that 3 out of the 5 RESIP service
providers (Proxies Online, Geosurf and ProxyRack) let this
“inside ﬁngerprinting” (insideFP) go through. Note that both
inside and outside ﬁngerprinting require the RESIP service
running with the sticky or half-sticky gateway. Figure 3(a)
illustrates these ﬁngerprinting processes, with IoT devices
(printer) being RESIPs in the private network.
To achieve a high performance when proﬁling a large
number of IPs, our system will not conduct insideFP for a
RESIP unless its outsideFP result reveals a router/NAT. This
is because that insideFP has a larger request latency than the
outsideFP, and is constrained by the rate limitation from RESIP
service providers. If the insideFP and outsideFP cannot reach
a consensus, we regard insideFP’s result as the ﬁnal: e.g.,
a RESIP was considered to be a printer when its insideFP
revealed the printer and outsideFP showed a NAT. We outline
host ﬁngerprinter’s analysis pipeline in Figure 3(b).
The IP liveness checker and the relay proﬁler scanned a
given IP every 30 seconds. The former simply “pinged” the IP
through typical TCP and UDP ports to ﬁnd out periods when
the IP was online. And the latter sent “heartbeat” requests via
a connected RESIP gateway to our web servers to measure the
relaying time of a given RESIP IP. This information also helped
us improve the accuracy of RESIP ﬁngerprinting: we consider
the ﬁngerprinting result as valid only when the relaying time
of a given RESIP covers the ﬁngerprinting period.
Evaluation and results. Running on an Amazon EC2 instance
with a bandwidth of 60 Mbps, 1GB memory and one-core CPU
at 2.40GHz, our system was capable of proﬁling 800K IPs/h,
with each IP being ﬁngerprinted in 63.57 seconds. In total, our
proﬁling system acquired banners from 728,528 (11.78% out
of 6.2 million) IPs and identiﬁed the device types and vendor
information for 547,497 of them. Interestingly, 237,029 (43%)
of these IPs turned out to belong to IoTs like web camera,
DVR, and printer. Details of the study are in §IV-B.
D. Datasets
Our study leverages various data sources to characterize
multiple dimensions of the RESIP ecosystem. Recall that by
now, we have produced or used several datasets: our inﬁltration
generated a large RESIP IP dataset (§III-A). To construct and
evaluate our residential IP classiﬁer, we collected several other
datasets containing residential and non-residential IPs (§III-B);
we also leveraged datasets of IP Whois and Active DNS for
the classiﬁer’s feature generation (§III-B). In our host proﬁling
framework, the Nmap service detection probe list is applied to
infer devices’ types (§III-C). We next elaborate other datasets
to be used in our study. These datasets are jointly leveraged
to characterize both individual RESIPs and RESIP services.
PUP trafﬁc. We collaborated with our industry partner (one of
leading IT companies) to utilize the PUP trafﬁc they gathered
from their customers’ devices (under proper consent) from June
2017 to November 2017 for our RESIP analysis. The consent
was given from the users who agreed to the terms of service
when they installed our industry partner’s security software.
The users can revoke this consent in the software settings. Each
record in the dataset logged a suspicious trafﬁc ﬂow (inbound
and outbound) associated with a PUP they detected. For each
suspicious ﬂow, PUP’s MD5, device ID, timestamp, and the
ﬂow’s 5-tuple (src IP, src port, dest IP, dest port, transport-layer
(cid:18)(cid:18)(cid:26)(cid:17)
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:44:47 UTC from IEEE Xplore.  Restrictions apply. 
protocol) are recorded, with additional information added to the
5-tuple for plaintext trafﬁc like HTTP, and FTP. For example,
for HTTP trafﬁc, the host and (truncated) URL ﬁelds were
recorded. This dataset served three purposes in our research:
identifying the usage of PUPs as RESIPs, investigating RESIP
trafﬁc, and revealing the hidden infrastructural components
inside the RESIP services.
Passive DNS. Another dataset we utilized is Passive DNS
from 360 Netlab [17], which enabled us to identify Fast ﬂux
activities on RESIP IPs, and reveal the hidden infrastructural
components inside the RESIP services. Each of the records
includes queried domain names, time periods, their aggregated
lookup volumes in the given time period.
IP geolocation. IP2Location DB8 [14] is a commercial IP
geolocation database provided by IP2Location. Using this
dataset, we retrieved the geolocation information (country, city,
latitude, longitude, ISP) for given IPs.
Public available proxies. We also collected the IPs related to
public network proxies, whose trafﬁc can be easily blocked or
degraded by the server-side protection [62]. Speciﬁcally, we
treated Tor relays (both exit and middle relays) as network
proxies and crawled their lists hourly from both the Tor
ofﬁcial website [19] and a third-party provider dan.me.uk [20].
We used two different ways to collect publicly available
proxies for HTTP/HTTPS/SOCKS4/SOCKS5. We purchased a
service called KuaiDaili, which collects proxies from multiple
popular proxy aggregators [7], and provides APIs for those
still working to its users. In the meantime, we also crawled
other popular proxy aggregators [11] [22] to get the working
proxies KuaiDaili does not include. This dataset was further
complemented using IP2Proxy LITE [15], a service that
runs proprietary algorithms to detect the IPs serving VPN
anonymizers, open proxies, web proxies and Tor exits.
Dark IPs. Also utilized in our research are popular IP blacklists
for identifying RESIP-related malicious activities. Speciﬁcally,
to track the potential relation between RESIPs and two
emerging botnet campaigns Hajime [12] and IoT Reaper [13],
our industry partner ran a detector from Sep 15, 2017 to Nov
07, 2017 to gather bot IPs of these campaigns on a daily
basis. Further, we collected 62 Spamhaus EDROP [18] records
every day for the last two years. Also, APIs of three threat
intelligence platforms were leveraged to retrieve IP indicators of
compromise.: VirusTotal [21], Cymon OTX [10] and AlienValut
OTX [9]. Given the dynamic nature of RESIPs, we only focused
on IP indicators whose timestamps are consistent with those
of RESIP IPs we observed.
E. Discussion
Potential bias. Due to the challenges in comprehensively
identifying RESIP hosts and analyzing their illicit behaviors,
our study was based upon the data we were able to get (RESIP
IPs observed by our system, hosts we could ﬁngerprint and
the PUP data available to us, etc), which could bring in bias
to the study. While we believe that as the ﬁrst large-scale
research on RESIP services, our study offers valuable insights
into this new business, we are nevertheless cautious about the
(a) All RESIPs.
(b) RESIPs responded to our probings.
Fig. 4: Global Distribution of RESIPs
conclusions to be drawn. More speciﬁcally, the vantage points
of our study were limited to ﬁve RESIP service providers. Also,
from them, only about 10% (still more than 500K) of all the
IPs we observed could be ﬁngerprinted and analyzed. Further,
our analysis on relayed trafﬁc of RESIPs was based on the
PUP trafﬁc logs collected by our industry partner. Even though
the PUP trafﬁc logs were linked to 8,886 RESIP IPs (more
than 5 millions trafﬁc traces) in our research, their coverage is
clearly limited. Availability of more comprehensive datasets
will certainly help better understand RESIPs and their security
implications. In the meantime, note that the RESIP providers
we studied are representative and we did ﬁnd PUPs running
behind the RESIP IPs we could not ﬁngerprint. This indicates
that some of our results could be applied more broadly, which
however needs to be determined by the future research.
Ethical issues. To conduct our study, we paid RESIP providers
to access their services. During the study, we followed all their
terms of service, and took great care to make sure that our study
would not harm the owners of RESIP hosts by visiting just our
own domains. Also the users of our industry partner agreed to
share related information in exchange for free services. Lastly,
regarding our host proﬁling operations, we limited probing
rates to avoid overheads incurred on the remote hosts. Also
we only report aggregated statistics to avoid identity leakage.
All the studies were approved by our organization’s IRB.
IV. RESIDENTIAL IP PROXY
We here report a measurement study on the core component
of the RESIP service – the residential IP proxy. We analyzed
why these RESIPs were used, how they were recruited, and
what they served.
A. Proxy Detection Evasion
IP source analysis. In total, we collected 6,183,876 unique
RESIP IPs from the ﬁve RESIP service providers via the
inﬁltration framework (see §III-A). Our study reveals that
RESIP IPs are spread across the world, across 238 countries and
regions, 28,035 /16 network preﬁxes and 52K+ ISPs. Overall,
we found that top 100 ISPs cover 57.4% of the RESIP IPs we
discovered with the ISP involving most RESIP IPs being Turk
Telekom (5.7%). Figure 4(a) illustrates the distribution of the
RESIP IPs over countries, as determined by their geolocations.
The number of RESIP IPs in each country is ranked and
illustrated with various shades of darkness in the ﬁgure. As
we can see here, most of RESIP IPs stay in India (9.42%),
followed by Turkey (8.64%) and Ukraine (6.42%).
As described in §III-B, we trained a classiﬁer to identify
residential IPs. Figure 5(a) illustrates the percentage of non-
residential IPs in each RESIP service provider. Overall, 95.22%
(cid:18)(cid:18)(cid:26)(cid:18)
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:44:47 UTC from IEEE Xplore.  Restrictions apply. 
(a) % of non-residential, blacklisted, pub-
lished proxy IPs in RESIP services
(b) The CDF of the relaying time
per RESIP.
(c) Time lag of RESIPs between
being blacklisted and being captured.
(d) # of IoT devices observed from
each RESIP service provider.
Fig. 5: Characterizing RESIPs. In (a) and (d), PO: Proxies Online; GS: Geosurf; LU: Luminati; PR: ProxyRack.
# RESIPs
%
Top 6-10
# RESIPs %
8,299
7,305
3,325
629
618
36.55% Malicious Sample
32.17%
14.64%
2.77%
2.72%
Zombie
Telnet
Trojan
EDROP
438
277
249
171
164
1.93%
1.22%
1.10%
0.75%
0.72%
Top 1-5