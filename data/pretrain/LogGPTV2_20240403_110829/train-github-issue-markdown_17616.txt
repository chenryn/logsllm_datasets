 **I'm submitting a ...** (check one with "x")
    [ ] bug report
    [x] feature request
    [ ] support request => Please do not submit support request here, instead see https://github.com/angular/angular/blob/master/CONTRIBUTING.md#question
**Current behavior**  
There doesn't seem to be a good way to interact with global and per-route
query parameters.
Let's say you have a search page and would like to apply filters that will be
reflected in the url e.g. /search?fizz=buzz&foo=bar or
/search;fizz=buzz;type=bar. I would like to be able to delete my "fizz" filter
and remove this from the url for a result of /search?foo=bar or
/search;foo=bar.
Currently,
    this._router.navigate(['../', this._route.snapshot.url[0].path , {type: 'bar'}], {relativeTo: this._route});
will get me this behavior for per-route parameters or similarly for their
global counterparts, but I have to retrieve the parameter object and play with
it myself. Specifically with per-route parameters, there isn't a way to only
change the queryParams without using ['../', '', ] followed by the parameters
since in the current version trying something like ['./', ] will throw an
error (though it looks to be explicitly checked and disallowed in `34b3c53`).
**Expected/desired behavior**  
I would like to be able to easily manipulate the local and global query
parameters. It looks like this will be easier to do with global query params
after `23ee29b` though I would also like to be able to do this for local query
params. Additionally, the current need to reach into the route.snapshot object
to get the current path in order to manipulate the query parameters feels
unnecessary and not robust.
**Reproduction of the problem**  
see "Current behavior"
**What is the motivation / use case for changing the behavior?**  
Other frameworks will allow me to easily perform this sort of manipulation and
I would be able to like to do this the proper "Angular" way
**Please tell us about your environment:**
  * **Angular version:** 2.0.0-rc.4
  * **Browser:** [Chrome 51]
  * **Language:** [TypeScript 1.8.10]