and when security is 3rd, ASes prefer (possibly-bogus) short
insecure routes over longer secure routes.
However, it is less clear what happens in security is 2nd,
where route security is prioritized over route length. Un-
fortunately, even when S*BGP is deployed at 50% of ASes,
the beneﬁts obtained in the security 2nd model lag signif-
icantly behind those available when security is 1st. While
some destinations can obtain tangible beneﬁts when security
is 2nd, for others (especially Tier 1s) the security 2nd model
behaves much like the security 3rd model (Section 5.2). We
could only ﬁnd clear-cut evidence of strong overall improve-
ment in security when ASes prioritize security 1st.
Tier 1
Tier 2
Tier 3
CPs
13 ASes with high customer degree & no providers
100 top ASes by customer degree & with providers
Next 100 ASes by customer degree & with providers
17 Content provider ASes listed in Figure 13
Small CPs Top 300 ASes by peering degree
Stubs-x
Stubs
SMDG
(other than Tier 1, 2, 3, and CP)
ASes with peers but no customers
ASes with no customers & no peers
Remaining non-stub ASes
Table 1: Tiers.
2. SECURITY & ROUTING POLICIES
S*BGP allows an AS to validate the correctness of the
AS-level path information it learns from its neighbors [10].
(S-BGP [28] and BGPSEC [33] validate that every AS on a
path sent a routing announcement for that path; soBGP [49]
validates that all the edges in a path announcement physi-
cally exist in the AS-level topology. As we shall see in Sec-
tion 3, our analysis applies to all these protocols.) However,
for S*BGP to prevent routing attacks, validation of paths
alone is not suﬃcient. ASes also need to use information
from path validation to make their routing decisions. We
consider three alternatives for incorporating path validation
into routing decisions, and analyze the security of each.
2.1 Dilemma: Where to place security?
An AS that adopts S*BGP must be able to process and
react to insecure routing information, so that it can still
route to destination ASes that have not yet adopted S*BGP.
The BGPSEC standard is such that a router only learns a
path via BGPSEC if every AS on that path has adopted
BGPSEC; otherwise, the path is learnt via legacy BGP. (The
reasoning for this is in [48] and Appendix A of [19]):
Secure routes. We call an AS that has adopted S*BGP
a secure AS, and a path learned via S*BGP (i.e., a path
where every AS is secure) a secure path or secure route; all
other paths are called insecure.
If a secure AS can learn both secure and insecure routes,
what role should security play in route selection? To blunt
routing attacks, secure routes should be preferred over inse-
cure routes. But how should expensive or long secure routes
be ranked relative to revenue-generating or short insecure
routes?
2.2 S*BGP routing models.
While it is well known that BGP routing policies diﬀer
between ASes and are often kept private, we need a con-
crete model of ASes’ routing policies so as to analyze and
simulate their behaviors during attacks. The following mod-
els of routing with S*BGP are variations of the well-studied
models from [7, 16, 17, 19, 24–26].
AS-level topology. The AS-level topology is represented
by an undirected graph G = (V, E); the set of vertices V
represents ASes and the set of links (edges) E represents
direct BGP links between neighboring ASes. We will some-
times also refer to the “tiers” of ASes [15] in Table 1; the list
of 17 content providers (CPs) in Table 1 (or see Table ??
and Figure 13) was culled from recent empirical work on
interdomain traﬃc volumes [4, 29–31, 47].
ASes’ business relationships. Each edge in E is anno-
tated with a business relationship: either (1) customer-to-
provider, where the customer purchases connectivity from
its provider (our ﬁgures depict this with an arrow from cus-
tomer to provider), or (2) peer-to-peer, where two ASes tran-
sit each other’s customer traﬃc for free (an undirected edge).
Empirical AS topologies. All simulations and exam-
ples described in this paper were run on the UCLA AS-
level topology from 24 September 2012 [12]. We prepro-
cessed the graph by (1) renaming all 4-byte ASNs in more