# Title: Even Black Cats Cannot Stay Hidden in the Dark: Full-band De-anonymization of Bluetooth Classic Devices

**Authors:**
- Marco Cominelli, CNIT/University of Brescia, Italy
- Francesco Gringoli, CNIT/University of Brescia, Italy
- Paul Patras, The University of Edinburgh, Scotland
- Margus Lind, Context Information Security, Scotland
- Guevara Noubir, Northeastern University, Boston, USA

**Conference:**
2020 IEEE Symposium on Security and Privacy

## Abstract
Bluetooth Classic (BT) remains the de facto connectivity technology in car stereo systems, wireless headsets, laptops, and a plethora of wearables, especially for applications requiring high data rates such as audio streaming, voice calling, and tethering. Unlike Bluetooth Low Energy (BLE), where address randomization is a feature available to manufacturers, BT addresses are not randomized because they are largely believed to be immune to tracking attacks. We analyze the design of BT and devise a robust de-anonymization technique that leverages the apparently benign information leaking from frame encoding to infer a piconet’s clock, hopping sequence, and ultimately the Upper Address Part (UAP) of the master device’s physical address, which are never exchanged in clear. When combined with the Lower Address Part (LAP), which is present in all transmitted frames, this enables tracking of the piconet master, thereby debunking the privacy guarantees of BT. We validate this attack by developing the first Software-defined Radio (SDR) based sniffer that allows full BT spectrum analysis (79 MHz) and implements the proposed de-anonymization technique. Our experiments demonstrate that it is possible to track BT devices up to 85 meters from the sniffer, achieving more than 80% device identification accuracy within less than 1 second of sniffing and 100% detection within less than 4 seconds. Lastly, we study the identified privacy attack in the wild, capturing BT traffic at a road junction over 5 days, demonstrating that our system can re-identify hundreds of users and infer their commuting patterns.

## I. Introduction
Wireless communications have profoundly changed how people share information and access services. Unfortunately, due to the intrinsic broadcast nature of wireless channels, these benefits often come at the cost of exposing users to various privacy-invasion attacks. Location information leakage is particularly concerning, as it underpins more sophisticated threats such as user tracking, identity discovery, and pinpointing of home/work premises. Additionally, the discovery of behaviors, preferences, and individuals’ social networks is at risk, potentially leading to effective social engineering.

Location privacy has been extensively studied since the early days of cellular communication systems. For instance, Temporary Mobile Subscriber Identity (TMSI) was introduced with GSM to increase the difficulty of user tracking. This later evolved into a completely anonymized 5G registration procedure, where the Subscription Permanent Identifier (SUPI) is never sent in the clear but is encrypted using an asymmetric Elliptic Curve Integrated Encryption Scheme (ECIES) to generate Subscription Concealed Identifiers (SUCI). However, the privacy attack surface has expanded significantly with the pervasiveness of mobile and sensing devices, open mobile platforms (running untrusted code), diverse wireless connectivity options, and the availability of SDR platforms. For example, faulty implementations of paging messages in LTE networks allow attackers to collect IMSIs through passive sniffing, questioning the effectiveness of SUCI.

Tracking threats have also been identified in Wi-Fi, where the unique Medium Access Control (MAC) address of devices, present in periodic probe packets, has been exploited by marketing and location analytics companies, or to covertly identify individuals’ routes in cities. Such privacy threats led to MAC address randomization features in popular mobile operating systems, making tracking harder and receiving praise from privacy advocates. Consumers are increasingly concerned about the implications of location information disclosure, as confirmed by user surveys and location privacy protection legislation.

Four billion Bluetooth-powered devices are projected to be shipped by the end of 2019, making this technology embedded in virtually every phone, car, laptop, mouse, keyboard, game console, and wearable device. Bluetooth comprises two main specifications: Bluetooth Classic (BT) and Bluetooth Low Energy (BLE). BT remains the dominant standard, supporting the Advanced Audio Distribution Profile (A2DP) required for audio streaming applications, e.g., in cars (Apple CarPlay, Android Auto, etc.) and headsets. Despite its weak cryptographic foundations for protecting device addresses, there is a common belief that BT is immune to tracking attacks demonstrated against BLE. This is partly due to the perceived difficulty of capturing and analyzing 79 channels over 79 MHz of spectrum, the fact that communicating devices hop at a rate of 1,600 hops/second, and that a BT Device Address (BDADDR) is not sent in the clear but obfuscated through whitening mechanisms that depend on the clock of the master.

In this work, we demonstrate through a combination of signal processing and iterative inference that it is possible to overcome BT obfuscation and uncover the entire, meaningful part of a device’s address, enabling reliable user tracking. We show that implementing our approach on inexpensive hardware is practical and can achieve high de-anonymization accuracy in real-time, even at a distance from targets. While this opens new avenues for constructive use, such as profiling vehicular traffic for planning purposes or studying Bluetooth’s co-existence with other wireless technologies, the privacy implications are significant. Importantly, while countermeasures such as address randomizations in BLE and Wi-Fi, correct usage of LTE paging messages, and replacement of IMSI with SUCI may hinder the tracking of users connected to such networks, billions of BT-powered devices are already deployed, which may be impossible to patch with an evolved privacy-preserving BT version. In addition, while IMSI-catching attacks are active and can be easily detected, BT de-anonymization is purely passive, rendering the identification of attackers impossible. Fortunately, affordable and fully functional technical solutions that could break BT privacy within short observation windows have yet to be developed. Our work changes that.

### Existing Solutions
Due to the ever-growing popularity of BT technology, several solutions have been developed for analysis and debugging purposes. Professional high-end products enable full-band BT traffic analysis but are very expensive and built on proprietary software that cannot be modified by users, and their tracking ability is unspecified. Few open-source alternatives, such as Ubertooth One, exist. Although cheap, these are limited to capturing traffic on a single channel at a time, therefore cannot follow multiple connections concurrently. Still, as Ubertooth is advertised as capable of infringing BT privacy, we perform a thorough performance comparison between this solution and our approach. SDR solutions that employ inexpensive radio front-ends, such as HackRF or LimeSDR, have wider bandwidth and are more flexible, yet are either limited to capturing simple BLE control traffic or not fully functional. At best, all these can extract the LAP of a connection’s master, which is insufficient for mounting privacy-breaching attacks.

### Challenges
Multiple BT sessions happen on different channels simultaneously, following hopping sequences that are unknown to an adversary and derived from the unknown master clock. Even if sniffing with multiple receivers tuned simultaneously on all 79 channels used by BT, synchronizing the traces must be precise; otherwise, ambiguities arise in the explanation of a sequence of packets exchanged. Further, figuring out a connection’s hopping sequence is hardly enough for an attacker to guess the master’s clock and UAP, from which this sequence and data scrambling (whitening) are derived, offering a level of confidentiality.

### Contributions
To the best of our knowledge, we present the first full-band BT sniffer, in which all relevant computations related to synchronization, demodulation, dewhitening, and decoding are combined with a multi-frame iterative inference algorithm that we propose to overcome BDADDR obfuscation and de-anonymize all the meaningful parts of addresses. Our techniques and system are flexible, as they can be instantiated with a range of SDR platforms with different bandwidths, can intercept traffic on all 79 BT channels simultaneously, and several of the system’s components are amenable to parallelization on general-purpose workstations. With these, (i) we demonstrate that, contrary to widespread belief, layer 2 communication in BT is completely exposed to re-identification and tracking, as device addresses can be inferred and the obfuscation can be circumvented by attackers in real-time; (ii) we extensively evaluate the potential of privacy attacks enabled by our system with various distances, device densities, and traffic regimes, using controlled testbeds with 26 embedded devices, a connected car, and a wireless headset. We show that it is feasible to track BT devices within an 85 m range, achieving 80% identification within less than 1 s and 100% within less than 4 s; and (iii) we study in the wild the effectiveness of the privacy attack uncovered, targeting moving vehicles, without storing sensitive information, and showing that an adversary may be able to infer users’ daily commuting patterns. Lastly, we discuss the large-scale surveillance risks the privacy-infringing attack identified enables, as well as how to mitigate the vulnerability revealed. We release open-source all the code we used in this paper on GitHub.

## II. Bluetooth Classic Overview
BT is a wireless technology operating in the 2.4 GHz Industrial, Scientific, and Medical (ISM) band, whose specification version 5.2 has been recently released. The standard amounts to over 3,000 pages, making navigation rather involved. Thus, we begin by describing the BT frame format and the procedure adopted by devices to whiten (and hence obfuscate) frames and identity prior to transmission. For completeness, we include an overview of the BT protocol operation in Appendix A.

### Frame Format and Identity Obfuscation
The structure of a BT frame is shown in Figure 1. Similar to other wireless technologies, BT frames are preceded by a Preamble (4 bits). This is followed by a Sync Word (64 bits) and an 18-bit header. Payloads are optional in BT frames, as some are used for discovery/control functions. The Sync Word is obtained from the 24-bit LAP to which 6 bits of a Barker sequence are appended to improve auto-correlation properties. Based on this, an expurgated (64,30) block code with bit-wise XOR of a 64-bit pseudo-random noise (PN) sequence is derived. This preserves the LAP while preceding it with 34 coded bits that guarantee a large Hamming distance between sync words of different addresses. In some cases, a fixed 4-bit Trailer encompassing a zero-one pattern follows, to be used for extended DC compensation. The preamble together with the Sync Word (and Trailer) form the Access Code. The Access Code is not subject to any further encoding, and as such, the LAP will appear in clear.

The frame header consists of two parts: the header data (10 bits) that encompasses a 3-bit Active Member Address (AMA) of a slave, a 4-bit type field, and three 1-bit flags; and the Header Error Check (HEC) (8 bits). The HEC is generated using the Linear Feedback Shift Register (LFSR) shown in Figure 2, whose internal 8-bit state is initialized with the master’s UAP. The whole header is then whitened using another LFSR (shown in Figure 3) whose 7-bit state is initialized with bits c6, ..., c1 of the master’s clock (clk) and by setting the bit in position 6 to 1. We summarize this procedure in Figure 4. The whitened header is then passed through a 1/3 Forward Error Correction (FEC) block.

Note that different UAPs generate different HEC values, while different master clock values produce different whitened sequences. Reversing the UAP and clk for every frame is computationally expensive, as brute-forcing these from intercepted frames would require 2^14 iterations per frame. Thus, the HEC and header whitening procedure is expected to ensure enough identity privacy. In what follows, we debunk this assumption.

## III. Threat Model
Next, we discuss the attacker capabilities envisioned and overview a set of plausible adversarial scenarios that would be enabled by de-anonymizing BT devices.

### A. Attacker Capabilities
We assume attackers control portable computers, to which SDR front-ends that can be tuned on the 2.4 GHz band are attached (e.g., HackRF, LimeSDR, USRP, etc.). These could be battery-powered or attached to fixed or mobile power supplies in covert locations (rooftops, balconies, tunnels, power buses, or cars).

### B. Adversarial Scenarios
1. **Marketing and Public Services:**
   - **Marketing:** Companies could monitor customers and orchestrate targeted marketing campaigns.
   - **Public Services:** City councils could use knowledge of citizen flows to improve the provisioning of public services (including waste management, transportation, lighting), albeit at a privacy cost.

2. **Stalking and Espionage:**
   - As SDR hardware becomes more affordable and open-source tools abound, a crowd-sourced stalking system would be straightforward to design if the identity of a BT device could be reversed from overheard frames. For instance, a malicious user could post the BT identifier of an ex-partner or celebrity to a community-controlled sniffing network to know their whereabouts and cause emotional distress. Similarly, competing businesses or rival states could send victims allegedly free replacements of BT-powered gadgets (earpods, smartwatches, etc.) with known identifiers, which would be subsequently tracked via crowdsourced location-sensing, to infer undisclosed locations of the victims.

3. **Compromising Physical Assets:**
   - De-anonymization of BT devices can underpin Man-in-the-Middle (MITM) attacks that can have severe consequences on victims, without necessarily being immediately obvious. For example, a team of attackers could coordinate to fake the presence of a victim near personal assets located remotely, enabling unlocking smart-locks, vehicles, or access to computing infrastructure.

## IV. Full-band Bluetooth Sniffing
We develop an SDR-based sniffing system that enables fast interception of BT traffic, breaking the communication secrecy and re-identifying devices. We describe the system architecture, data acquisition process, and data processing pipeline implemented.

### A. System Architecture
Figure 5 gives an overview of the full-band BT sniffing system developed. This relies on an SDR front-end for raw wireless signal acquisition in the 2.4 GHz band. The front-end is connected via USB 3.0 to and driven by signal processing software running on the host computer. Our design is sufficiently flexible to allow for SDR platforms operating with different spectral widths, e.g., a single board such as the Ettus N310 capable of capturing the entire 79 MHz bandwidth used by BT, two Ettus B210 boards, each covering 40 MHz of spectrum and their output being synchronized, or any of these tuned to capture an arbitrary spectral width.

The acquired signal samples are then processed. First, they are passed to a channelizer, which can be configured to separate the 79 channels. The channelized signals are then demodulated, dewhitened, and decoded to extract the LAP and UAP. The iterative inference algorithm is applied to correlate the extracted information and infer the master’s clock and hopping sequence, enabling the de-anonymization of the device.