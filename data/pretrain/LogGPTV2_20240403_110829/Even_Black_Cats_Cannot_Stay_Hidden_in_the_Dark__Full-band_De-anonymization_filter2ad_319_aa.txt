title:Even Black Cats Cannot Stay Hidden in the Dark: Full-band De-anonymization
of Bluetooth Classic Devices
author:Marco Cominelli and
Francesco Gringoli and
Paul Patras and
Margus Lind and
Guevara Noubir
2020 IEEE Symposium on Security and Privacy
Even Black Cats Cannot Stay Hidden in the Dark:
Full-band De-anonymization of Bluetooth Classic Devices
Marco Cominelli, Francesco Gringoli
CNIT/University of Brescia, Italy
Paul Patras
The University of Edinburgh, Scotland
Margus Lind
Guevara Noubir
Context Information Security, Scotland
Northeastern University, Boston, USA
Abstract—Bluetooth Classic (BT) remains the de facto
connectivity technology in car stereo systems, wireless
headsets, laptops, and a plethora of wearables, especially
for applications that require high data rates, such as
audio streaming, voice calling, tethering, etc. Unlike in
Bluetooth Low Energy (BLE), where address randomiza-
tion is a feature available to manufactures, BT addresses
are not randomized because they are largely believed to
be immune to tracking attacks. We analyze the design
of BT and devise a robust de-anonymization technique
that hinges on the apparently benign information leaking
from frame encoding, to infer a piconet’s clock, hopping
sequence, and ultimately the Upper Address Part (UAP)
of the master device’s physical address, which are never
exchanged in clear. Used together with the Lower Address
Part (LAP), which is present in all frames transmitted, this
enables tracking of the piconet master, thereby debunking
the privacy guarantees of BT. We validate this attack by
developing the ﬁrst Software-deﬁned Radio (SDR) based
sniffer that allows full BT spectrum analysis (79 MHz)
and implements the proposed de-anonymization technique.
We study the feasibility of privacy attacks with multiple
testbeds, considering different numbers of devices, trafﬁc
regimes, and communication ranges. We demonstrate that
it is possible to track BT devices up to 85 meters from the
sniffer, and achieve more than 80% device identiﬁcation
accuracy within less than 1 second of snifﬁng and 100%
detection within less than 4 seconds. Lastly, we study the
identiﬁed privacy attack in the wild, capturing BT trafﬁc
at a road junction over 5 days, demonstrating that our
system can re-identify hundreds of users and infer their
commuting patterns.
I. INTRODUCTION
Wireless communications have profoundly changed
how people share information and access services. Un-
fortunately, due to the intrinsic broadcast nature of
wireless channels, the immense beneﬁts unlocked often
come at
the cost of exposing users to a variety of
privacy-invasion attacks. Location information leakage
is a particular concern, as this underpins more sophisti-
cated threats, such as user tracking, identity discovery,
and pinpointing of home/work premises. Furthermore,
discovery of behaviors, preferences, and individuals’
social networks are at risk, which can potentially lead
to effective social engineering.
Location privacy has been investigated extensively
since the early days of cellular communication systems,
when Temporary Mobile Subscriber Identity (TMSI)
was introduced with GSM to increase the difﬁculty
of user tracking. This later evolved into a completely
anonymized 5G registration procedure, whereby the Sub-
scription Permanent Identiﬁer (SUPI) is never sent in
the clear, but instead is encrypted using an asymmetric
Elliptic Curve Integrated Encryption Scheme (ECIES) to
generate Subscription Concealed Identiﬁers (SUCI) [1].
In recent years, however, the privacy attack surface has
expanded signiﬁcantly with the pervasiveness of mobile
and sensing devices, open mobile platforms (running un-
trusted code), diverse wireless connectivity options, and
the availability of SDR platforms. For instance, faulty
implementations of paging messages in LTE networks
allow attackers to collect IMSIs through passive sniff-
ing [2]. This questions the effectiveness of SUCI, given
that it is possible to downgrade a terminal’s connectivity
from 5G to 3G via jamming, and subsequently use one
of the many SDR-based IMSI catching tools [3] to reveal
a target’s identity. Tracking threats were also identiﬁed
in Wi-Fi, where the unique Medium Access Control
(MAC) address of devices, which is present in periodic
probe packets, has been exploited by marketing and
location analytics companies [4], or to covertly identify
individuals’ routes in cities [5]. Such privacy threats led
to MAC address randomization features released with
popular mobile operating systems [6], making tracking
© 2020, Marco Cominelli. Under license to IEEE.
DOI 10.1109/SP40000.2020.00091
534
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:42:21 UTC from IEEE Xplore.  Restrictions apply. 
harder and receiving praise from privacy advocates.
Naturally, consumers are increasingly concerned about
the implications of location information disclosure, as
conﬁrmed by user surveys [7] and location privacy
protection legislation [8], [9].
Four billion Bluetooth-powered devices are projected
to be shipped by the end of 2019, making this technology
embedded in virtually every phone, car, laptop, mouse,
keyboard, game console, and wearable device [10].
Bluetooth comprises two main speciﬁcations [11]: Blue-
tooth Classic (BT) and Bluetooth Low Energy (BLE).
BT remains the dominant standard, as it is the only
one supporting the Advanced Audio Distribution Proﬁle
(A2DP) required for audio streaming applications, e.g.,
in cars (Apple CarPlay, Android Auto, etc.) and headsets.
Despite its weak cryptographic foundations for protect-
ing the devices address, there is a common belief that
BT is immune to tracking attacks demonstrated against
BLE [12]. This is in part due to the perceived difﬁculty
of capturing and analyzing 79 channels over 79 MHz of
spectrum, the fact that communicating devices hop at a
rate of 1,600 hops/second (transmitting on each channel
for less than a millisecond), and that a BT Device Ad-
dress (BDADDR) is not sent in the clear but obfuscated
through whitening mechanisms that depend on the clock
of the master. Address randomization was incorporated
in BLE, likely due to its simpler communications design
and hence increased susceptibility to tracking. Instead,
BT obfuscation measures were still believed to be secure
against tracking, therefore addresses continue to be ﬁxed,
as per the initial design.
In this work, we demonstrate through a combination of
signal processing and iterative inference that it is possible
to overcome BT obfuscation and uncover the entire,
meaningful part of a device’s address, thereby enabling
reliable user tracking. We show that implementing our
approach on inexpensive hardware is practical and we
can achieve high de-anonymization accuracy in real-
time, even at a distance from targets. While this opens
new avenues for constructive use, such as proﬁling
vehicular trafﬁc for planning purposes, or studying Blue-
tooth’s co-existence with other wireless technologies, the
privacy implications are signiﬁcant. Importantly, while
countermeasures such as address randomizations in BLE
and Wi-Fi, correct usage of LTE paging messages, and
replacement of IMSI with SUCI, may hinder the tracking
of users connected to such networks, billions of BT-
powered devices are already deployed, which may be
impossible to patch with an evolved privacy-preserving
BT version. In fact, no plans to address the privacy
problems of BT are on the horizon and it is even unclear
whether such evolution would be technically feasible.
In addition, while IMSI-catching attacks are active and
can be easily detected [13], [14], BT de-anonymization
is purely passive, which renders the identiﬁcation of
attackers impossible. Fortunately, affordable and fully
functional technical solutions that could break BT pri-
vacy within short observation windows have yet to be
developed. Our work changes that.
Existing solutions: Due to the ever-growing popular-
ity of BT technology, a number of solutions have been
developed for analysis and debugging purposes. Pro-
fessional high-end products enable full-band BT trafﬁc
analysis [15], [16], yet are very expensive and built on
proprietary software that cannot be modiﬁed by users,
and their tracking ability is unspeciﬁed.
Few open-source alternatives, such as Ubertooth
One [17], exist. Albeit cheap, these are limited to cap-
turing trafﬁc on a single channel at a time, therefore
cannot follow multiple connections concurrently. Still,
as Ubertooth is advertised as capable of infringing BT
privacy, we perform a thorough performance comparison
between this solution and our approach in Sec. VIII. SDR
solutions that employ inexpensive radio front-ends, such
as HackRF or LimeSDR, have wider bandwidth and are
more ﬂexible, yet are either limited to capturing simple
BLE control trafﬁc [18] or not fully functional [19]. At
best, all these can extract the LAP of a connection’s mas-
ter, which is insufﬁcient for mounting privacy breaching
attacks. We review relevant research that makes use of
such platforms in Sec. X.
Challenges: Multiple BT sessions happen on different
channels at the same time, following hopping sequences
that are unknown to an adversary and derived from the
unknown master clock. Even if snifﬁng with multiple re-
ceivers tuned simultaneously on all the 79 channels used
by BT, synchronizing the traces must be precise, other-
wise ambiguities arise in the explanation of a sequence of
packets exchanged. Further, ﬁguring out a connection’s
hopping sequence is hardly enough for an attacker to
guess the master’s clock and UAP, from which this
sequence and data scrambling (whitening) are derived,
which offer in some sense a level of conﬁdentiality.
Contributions: To the best of our knowledge, we
present the ﬁrst full-band BT sniffer, in which all the
relevant computations related to synchronization, demod-
ulation, dewhitening, and decoding are combined with a
multi-frame iterative inference algorithm that we propose
to overcome BDADDR obfuscation and de-anonymize
all the meaningful parts of addresses. Our techniques
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:42:21 UTC from IEEE Xplore.  Restrictions apply. 
535
and system are ﬂexible, as they can be instantiated with
a range of SDR platforms with different bandwidths, can
intercept trafﬁc on all 79 BT channels simultaneously,
while several of the system’s components are amenable
to parallelization on general-purpose workstations. With
these, (i) we demonstrate that, contrary to widespread be-
lief, layer 2 communication in BT is completely exposed
to re-identiﬁcation and tracking, as device addresses can
be inferred and the obfuscation can be circumvented by
attackers in real-time; (ii) we extensively evaluate the
potential of privacy attacks enabled by our system with
various distances, device densities, and trafﬁc regimes,
using controlled testbeds with 26 embedded devices, a
connected car and a wireless headset. We show that it
is feasible to track BT devices within a 85 m range,
achieving 80% identiﬁcation within less than 1 s and
100% within less than 4 s; and (iii) we study in the
wild the effectiveness of the privacy attack uncovered,
targeting moving vehicles, without storing sensitive in-
formation, and showing that an adversary may be able to
infer users’ daily commuting patterns. Lastly, we discuss
the large-scale surveillance risks the privacy-infringing
attack identiﬁed enables, as well as how to mitigate the
vulnerability revealed. We release open-source all the
code we used in this paper on GitHub1.
II. BLUETOOTH CLASSIC OVERVIEW
BT is a wireless technology operating in the 2.4 GHz
Industrial, Scientiﬁc, and Medical (ISM) band, whose
speciﬁcation version 5.2 has been recently released [11].
The standard amounts to over 3,000 pages and navigating
this is rather involved. Thus, we begin by describing the
BT frame format and the procedure adopted by devices
to whiten (and hence obfuscate) frames and identity
prior to transmission. For completeness, we include an
overview of the BT protocol operation in Appendix A.
Frame Format and Identity Obfuscation
The structure of a BT frame is shown in Fig. 1.
Similar to other wireless technologies, BT frames are
preceded by a Preamble (4 bits). This is followed by a
Sync Word (64 bits) and an 18-bit header. Payloads are
optional in BT frames, as some of these are used for
discovery/control functions. The Sync Word is obtained
from the 24-bit LAP to which 6 bits of a Barker
sequence [20] are appended to improve auto-correlation
properties. Based on this, an expurgated (64,30) block
code with bit-wise XOR of a 64-bit pseudo-random
1Interested readers can download and test
https://github.com/bsnet/btsniffer
the code from
Fig. 1: BT frame format. Only the optional payload ﬁeld
can be eventually encrypted.
0
1
2
3
4
5
6
7
Data in
(LSB ﬁrst)
Fig. 2: LFSR used for computing the HEC based on
header data; initialized with UAP and LSB set to 0; ﬁnal
content is the HEC, transmitted from bit 7 to bit 0.
noise (PN) sequence is derived [21]. This preserves
the LAP while preceding it with 34 coded bits that
guarantee a large Hamming distance between sync words
of different addresses. In some cases, a ﬁxed 4-bit Trailer
encompassing a zero-one pattern follows, to be used for
extended DC compensation. The preamble together with
the Sync Word (and Trailer) form the Access Code. The
Access Code is not subject to any further encoding and
as such the LAP will appear in clear.
The frame header consists of two parts: the header
data (10 bits) that encompasses a 3-bit Active Member
Address (AMA) of a slave, a 4-bit type ﬁeld, and three
1-bit ﬂags; and the Header Error Check (HEC) (8 bits).
The HEC is generated using the Linear Feedback Shift
Register (LFSR) shown in Fig. 2, whose internal 8-bit
state is initialized with the master’s UAP. The whole
header is then whitened using another LFSR (shown
in Fig. 3) whose 7-bit state is initialized with bits
c6, . . . , c1 of the master’s clock (clk) and by setting the
bit in position 6 to 1. We summarize this procedure in
Fig. 4. The whitened header is then passed through a 1/3
Forward Error Correction (FEC) block.
Note that different UAPs generate different HEC val-
ues, while different master clock values produce different
whitened sequences. Reversing the UAP and clk for
every frame is arguably computationally expensive, since
0
1
2
3
4
5
6
Data in
(LSB ﬁrst)
Data out
Fig. 3: LFSR used for frame (de-)whitening. Bits 0 to 5
are initialized with bits clk1−6 of the master’s clock; bit
6 is always initialized with 1.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:42:21 UTC from IEEE Xplore.  Restrictions apply. 
536
monitor customers and orchestrate targeted marketing
campaigns. On the other hand, city councils could hinge
on knowledge of citizen ﬂows to improve the provi-
sioning of public services (including waste management,
transportation, lighting), admittedly at a privacy cost.
2) Stalking and espionage: As SDR hardware is
increasingly more affordable and open-source tools
abound, a crowd-sourced stalking systems would be
straightforward to design if the identity of a BT de-
vice could be reversed from overheard frames. For
instance, a malicious user would post the BT identiﬁer
of an ex-partner or celebrity to a community controlled
snifﬁng network, in order to know their whereabouts
and cause emotional distress. Similarly, competing busi-
nesses or rival states could send victims allegedly free-
replacements of BT-powered gadgets (earpods, smart-
watches, etc.) with known identiﬁers, which would be
subsequently tracked via crowdsourced location-sensing,
to infer undisclosed locations of the victims.
3) Compromising physical assets: De-anonymization
of BT devices can also underpin Man-in-the-Middle
(MITM) attacks that can have severe consequences on
victims, without necessarily being immediately obvious.
For example, a team of attackers could coordinate to
fake the presence of a victim near personal assets located
remotely. This would enable unlocking smart-locks, ve-
hicles, or access to computing infrastructure.
IV. FULL-BAND BLUETOOTH SNIFFING
interception of BT trafﬁc,
We develop an SDR-based snifﬁng system that enables
fast
in view of breaking
the communication secrecy and re-identifying devices.
We describe the system architecture, data acquisition
process, and data processing pipeline implemented.
A. System Architecture
Fig. 5 gives an overview of the full-band BT snifﬁng
system developed. This relies on an SDR front-end for
raw wireless signal acquisition in the 2.4 GHz band. The
front-end is connected via USB 3.0 to and driven by
signal processing software running on the host computer.
Our design is sufﬁciently ﬂexible to allow for SDR
platforms operating with different spectral widths, e.g., a
single board such as the Ettus N310 capable of capturing
the entire 79 MHz bandwidth used by BT, two Ettus
B210 boards, each covering 40 MHz of spectrum and
their output being synchronized, or any of these tuned
to capture an arbitrary spectral width.
The acquired signal samples are then processed. First,
they are passed to a channelizer, which can be conﬁgured
Fig. 4: BT HEC generation and header whitening.
brute-forcing these from intercepted frames would re-
quire 214 iterations per frame. Thus the HEC and header
whitening procedure is expected to ensure enough iden-
tity privacy. In what follows, we debunk this assumption.
III. THREAT MODEL
Next we discuss the attacker capabilities envisioned
and overview a set of plausible adversarial scenarios that
would be enabled by de-anonymizing BT devices.
A. Attacker Capabilities
We assume attackers control portable computers, to
which SDR front-ends that can be tuned on the 2.4 GHz
band are attached (e.g. HackRF, LimeSDR, USRP, etc.).
These could be battery powered or attached to ﬁxed
or mobile power supplies in covert locations (rooftops,
balconies, tunnels, power buses, or cars). The attackers