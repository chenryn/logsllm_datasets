secure companions, 376
secure devices, 376–378
SGRA (System Guard Runtime attestation), 
386–390
trustlets creation, 372–375
VBS-based enclaves, 378–386
Index 
869
local procedure call
J
jitted blocks, 115, 117
jitting and execution, 121–122
Job object, 128
K
k command, 485
Kali Linus, 247
KeBugCheckEx system function, 32
KEK (Key Exchange Key), 783
kernel. See also Secure Kernel
dispatcher objects, 179–181
objects, 126
spinlocks, 174
synchronization mechanisms, 179
kernel addresses, mapping, 20
kernel debugger
!handle extension, 125
!locks command, 198
searching for open files with, 151–152
viewing handle table with, 149–150
kernel logger, tracing TCP/IP activity with, 
519–520
Kernel Patch Protection, 24
kernel reports, WER (Windows Error 
Reporting), 551
kernel shims
database, 559–560
device shims, 564
driver shims, 560–563
engine initialization, 557–559
shim database, 559–560
witnessing, 561–563
kernel-based system call dispatching, 97
kernel-mode debugging events, 240
\KernelObjects directory, 161
Key object, 129
keyed events, 194–196
KeyedEvent object, 128
KilsrThunk, 33
KINTERRUPT object, 44, 46
\KnownDlls directory, 161
\KnownDlls32 directory, 161
KPCR (Kernel Processor Control Region), 4
KPRCB fields, timer processing, 72
KPTI (Kernel Page Table Isolation ), 18
KTM (Kernel Transaction Manager), 157, 688
KVA Shadow, 18–21
L
L1TF (Foreshadow) attack, 16
LAPIC (Local Advanced Programmable 
Interrupt Controllers), 32
lazy jitter, 119
lazy segment loading, 6
lazy writing
disabling, 595
and write-back caching, 589–595
LBA (logical block address), 589
LCNs (logical cluster numbers), 656–658
leak detections, ReFS (Resilient File System), 
761–762
leases, 614–615, 617
LFENCE, 23
LFS (log file service), 652, 695–697
line-based versus message signaled-based 
interrupts, 50–66
link tracking, NTFS, 639
link.exe tool, 117, 379
link.exe/dump/loadconfig command, 379
LiveKd, .dump command, 545
load ports, 17
loader issues, troubleshooting, 556–557
Loader Parameter block, 819–821
local namespace, 167
local procedure call
ALPC direct event attribute, 222
ALPC port ownership, 220
asynchronous operation, 214–215
attributes, 216–217
blobs, handles, and resources, 217–218
870 
Index
local procedure call
local procedure call (continued)
connection model, 210–212
debugging and tracing, 222–224
handle passing, 218–219
message model, 212–214
overview, 209–210
performance, 220–221
power management, 221
security, 219–220
views, regions, and sections, 215–216
Lock, 132
!locks command, kernel debugger, 198
log record types, NTFS recovery support,
697–699
$LOGGED_UTILITY_STREAM attribute, 663
logging implementation, NTFS on-disk struc-
ture, 693
Low-IRQL synchronization. See also 
synchronization
address-based waits, 202–203
condition variables, 205–206
critical sections, 203–204
data structures, 184–194
executive resources, 197–202
kernel dispatcher objects, 179–181
keyed events, 194–196
mutexes, 196–197
object-less waiting (thread alerts), 183–184
overview, 177–179
run once initialization, 207–208
signalling objects, 181–183
(SRW) Slim Reader/Writer locks, 206–207
user-mode resources, 205
LRC parity and RAID 6, 773
LSASS (Local Security Authority Subsystem 
Service) process, 453, 465
LSN (logical sequence number), 570
M
mailslots and named pipes, filtering, 625
Make permanent/temporary object service, 136
mapped files, flushing, 595–596
mapping and pinning interfaces, caching 
with, 584
masking interrupts, 39
MBEC (Mode Base Execution Controls), 93
MDL (Memory Descriptor List), 220
MDS (Microarchitectural Data Sampling), 17
Measured Boot, 801–805
media mixer, creating, 165
Meltdown attack, 14, 18
memory, sharing, 171
memory hierarchy, 10
memory manager
modified and mapped page writer, 622
overview, 567
page fault handler, 622–623
memory partitions support, 571–572
metadata
defined, 566, 570
metadata logging, NTFS recovery support, 695
MFT (Master File Table)
NTFS metadata files in, 657
NTFS on-disk structure, 656–660
record for small file, 661
MFT file records, 668–669
MFT records, compressed file, 674
Microsoft Incremental linker ((link.exe)), 117
minifilter driver, Process Monitor, 627–628
Minstore architecture, ReFS (Resilient File 
System), 740–742
Minstore I/O, ReFS (Resilient File System), 
746–748
Minstore write-ahead logging, 758
Modern Application Model, 249, 251, 262
modern boot menu, 832–833. See also boot 
process
MOF (Managed Object Format), WMI 
(Windows Management Instrumentation), 
488–495
MPS (Multiprocessor Specification), 35
Msconfig utility, 837
Index 
871
NTFS recovery support
MSI (message signaled interrupts), 50–66
msinfo32 command, 312, 344
MSRs (model specific registers), 92
Mutex object, 128
mutexes, fast and guarded, 196–197
mutual exclusion, 170
N
named pipes and mailslots, filtering, 625
namespace instancing, viewing, 169
\NLS directory, 161
nonarchitectural system service dispatching, 
96–97
nonsparse data, compressing, 673–674
notepad.exe command, 405
notifications. See WNF (Windows Notification 
Facility)
NT kernel, 18–19, 22
Ntdll version list, 106
Ntevt.dll, 497
NTFS bad-cluster recovery, 703–706
NTFS file system
advanced features, 630
change logging, 637–638
compression and sparse files, 637
data redundancy, 629–630
data streams, 631–632
data structures, 654
defragmentation, 643–646
driver, 652–654
dynamic bad-cluster remapping, 633
dynamic partitioning, 646–647
encryption, 640
fault tolerance, 629–630
hard links, 634
high-end requirements, 628
indexing facility, 633
link tracking, 639
metadata files in MFT, 657
overview, 606–607
per-user volume quotas, 638–639
POSIX deletion, 641–643
recoverability, 629
recoverable file system support, 570
and related components, 653
security, 629
support for tiered volumes, 647–651
symbolic links and junctions, 634–636
Unicode-based names, 633
NTFS files, attributes for, 662–663
NTFS information, viewing, 660
NTFS MFT working set enhancements, 571
NTFS on-disk structure
attributes, 667–670
change journal file, 675–679
clusters, 655–656
consolidated security, 682–683
data compression and sparse files, 670–674
on-disk implementation, 691–693
file names, 664–666
file record numbers, 660
file records, 661–663
indexing, 679–680
isolation, 689–690
logging implementation, 693
master file table, 656–660
object IDs, 681
overview, 654
quota tracking, 681–682
reparse points, 684–685
sparse files, 675
Storage Reserves and reservations, 685–688
transaction support, 688–689
transactional APIs, 690
tunneling, 666–667
volumes, 655
NTFS recovery support
analysis pass, 700
bad clusters, 703–706
check-disk and fast repair, 707–710
design, 694–695
LFS (log file service), 695–697
872 
Index
NTFS recovery support
NTFS recovery support (continued)
log record types, 697–699
metadata logging, 695
recovery, 699–700
redo pass, 701
self-healing, 706–707
undo pass, 701–703
NTFS reservations and Storage Reserves, 
685–688
Ntoskrnl and Winload, 818
NVMe (Non-volatile Memory disk), 565
O
!object command, 137–138, 151, 223
Object Create Info, 132
object handles, 146, 158
object IDs, NTFS on-disk structure, 681
Object Manager
executive objects, 127–130
overview, 125–127
resource accounting, 159
symbolic links, 166–170
Object type index, 132
object-less waiting (thread alerts), 183–184
objects. See also base named objects; private 
objects; reserve objects
directories, 160–165
filtering, 170
flags, 134–135
handles and process handle table, 143–152
headers and bodies, 131–136
methods, 140–143
names, 159–160
reserves, 152–153
retention, 155–158
security, 153–155
services, 136
signalling, 181–183
structure, 131