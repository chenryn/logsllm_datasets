验。在权限控制模块中，需要用到和管理的信息有：系统的所有角色、系统的所有用
户、系统所有的功能、系统所有的资源、用户跟角色之间的关系、角色跟功能之间的
关系、角色跟资源之间的关系或者用户跟资源之间的关系。而对这些数据的缓存手段
也有很多种，比较通用的就是数据库的存储，当然用 LDAP 服务器、XML 文件来存储
权限也很常见。有了对权限信息的存储，用户对权限的获取就变得可行。
针对这些权限下的资源的校验，主要包含功能校验权限和数据校验权限两个方面。
功能校验权限是指用户是否可以执行或者使用该项功能或者服务，而数据校验则是判
定用户是否能访问某块数据区域，这两者在用户使用系统时可以说缺一不可。在进行
权限的校验时也要注意对登录用户的数据缓存，减少在服务使用时频繁地进行权限查
询和用户查询，这会导致服务本身之外的系统开销，影响系统的性能。要能够保证在
权限校验覆盖没有问题的情况下选择更简单有效的校验方式，从而从设计层面解决类
似权限请求占用系统服务开销的问题。
除了 RBAC 模型外，还有一些其他的权限控制方式去控制用户权限。例如，当数
据的访问权限非常复杂时，会使用 ACL 的方式；而在一些系统中，用户的权限是随着
用户的状态和上下文变化的，这时就要使用基于用户属性的权限控制方式，通过逻辑
计算用户的属性来得到最后的权限信息。
（2）数据过滤。因为暴力危险输入造成的漏洞是危害性最大、影响面最广的。健
壮的输入和输出过滤可以大大减少应用受攻击的风险。而 XSS 跨站攻击和 SQL 注入
这两个高危风险都是由于没有完善有效的数据过滤或者数据过滤不当引起的。
数据过滤的原则覆盖了输入过滤与输出过滤，输入过滤的不严谨会导致不被期望
的代码在服务器端被恶意执行从而导致系统的异常甚至是底层数据的爆破删改，而输
出过滤不当则有可能在客户端被植入恶意的 HTML 或者 JavaScript 代码。
对输入的过滤可以分为两种：第一种是黑名单限制，第二种是白名单放行。顾名
思义，第一种是对错误输入格式的约束，不在约束范围内的即为正确输入。第二种则
是对正确输入的囊括，对不在囊括范围内的统一进行拦截和拒绝，从过滤的方式上可
以很明显地看出，在理论上白名单方式要比黑名单方式更加安全，因为前者对输入的
范围进行了控制。
（3）敏感信息加密。对于黑客来说，有价值的数据只有读出来才有价值，而保护
有价值信息最好的技术之一就是加密。加密是将信息的编码进行杂凑，使不知道密码
的人无法获知数据的意义。对于 Web 应用来说，信息的传输和存储都需要加密。在传
第 6章 高级系统运维 197
输层面上，可以使用 HTTPS 加密传输有密码、账户等敏感信息的 HTTP 请求或者回复；
在服务器端，使用 Base64 加密算法对保存在配置文件、数据库的用户密码进行加密存
储，防止密码外泄。
（4）保留审计记录。对用户访问应用中的关键操作应该予以记录，以便日后进行
审计。审计记录的内容至少应包括事件日期、时间、发起者信息、类型、描述和结果
等。审计的关键操作就是日志的记录。一种流行的日志 API 是 log4j 系列，而且它已
经被移植到了 C、C++、C#、Perl、Python、Ruby 和 Eiffel 语言上。
3）安全测试
自动化测试工具可以自动生成输入参数，并根据反馈结果来判断系统是否存在安
全漏洞，自动化测试速度快，测试用例可复用以及持久化，能够针对性地排查一些特
定安全漏洞。例如，代码越界、页面注入、远程执行等。但是自动化测试工具也有其
局限性，它是根据请求参数 request 所得到的返回结果 response 来提取一些特征，从而
发现和识别漏洞。另外也可以尝试从代码扫描的角度出发，通过代码扫描工具去核查
代码中的漏洞问题。例如，Sonar 可以直接在服务器上对代码仓库的代码进行定时扫
描，也可以在开发工具上直接继承 Sonar 插件实时检查开发过程中的代码。
自动测试工具即使对部分漏洞来说也存在误报、漏报的情况，而且其漏洞案例的
实时性更新依赖于人工的添加。但是由于其速度快，再结合人工检查确认的方式，可
以相对客观地评估应用的安全情况。
4）运维加固
虽然通过后期手段和测试很难完全避免所有的安全漏洞，但是通过测试扫描后剩
余的漏洞数量会大比例减少，而且安全漏洞本身也依赖于输入以及调用的触发。在架
构环境中部署防火墙、在前端及后端定义输入规则、对恶意输入及非法输入进行屏蔽
限制，也可以达到对安全漏洞的屏蔽和对恶意输入过滤的目的。
另外，对于整个架构环境中的操作系统、数据库、网络系统等，也要进行定期的
扫描和漏洞库更新，及时更新或者升级相关补丁内容。
2．数据安全
1）存储安全
在 Hadoop 集群中，应用层实现了数据的多客户端存储和备份，每个实例数据都
存在 3 个副本存储，任何一个副本出现问题都不会导致数据的完全丢失。如果不具备
应用层的数据多点备份能力，那么就要考虑硬件层面的 RAID（磁盘阵列）。
RAID 即“独立磁盘构成的具有冗余能力的阵列”之意。磁盘阵列指由多个磁盘
构建成一个巨大容量的磁盘组，利用个别磁盘提供数据所产生的加成效果提升整个磁
盘的系统效能。通过这项技术，将数据切割为多个区段，分别存放在各个硬盘上。磁
盘阵列还能利用同位检查（parity check）的概念，在数组中任意一个硬盘发生故障时，
仍可读出数据，在数据重构时，将数据经计算后重新置入新硬盘中。RAID 技术主要
198 大数据应用部署与调优
包含 RAID 0～RAID 50 等数个规范，它们的侧重点各不相同。
大数据的本身一般并不是数据的生产方，而是通过对数据的收集和分析，获得分
析结果的一种手段。大数据系统的主要功能之一就是对源数据的备份，但是数据的存
储终究是需要成本的，越高的存储速度意味着越高的硬件价格。目前主流大数据框架
Hadoop 的相关技术就使用了相对主流标准的硬件设备，例如 PC 服务器，从而减少了
昂贵的存储硬件支出。然而需要注意的是，即使使用了较为标准和性价比的设备，
存储数据的规模也不能一味扩大。在构建大数据系统的过程中，准确定位数据的规
模并且使用相关方法保证数据存储不会持续扩展也是一项必要指标。例如，通过划
分存储的时限使定义好的历史数据，在分析使用量不大的情况下及时归档迁移到磁
带系统中。
2）传输安全
如果数据的传输经过了不安全的网络，那么使用加密和安全的协议就是必要的措施。
超文本传输协议（HTTP）是目前被用于在 Web 浏览器和网站服务器之间传递信
息的主要手段之一。HTTP 以明文方式发送内容，如果攻击者截取了 Web 浏览器和网
站服务器之间的传输报文，就可以直接读懂获取其中的信息内容，因此 HTTP 不适合
传输一些涉敏信息。为了解决这一缺陷，另一种传输协议应运而生：安全套接字层超
文本传输协议（HTTPS）。
HTTPS 在原有 HTTP 的基础上加入了 SSL 协议，为浏览器和服务器之间的通信内
容进行加密，依靠 SSL 证书对服务器身份进行验证。采用 HTTPS 的服务器必须从证
书授权中心（certificate authority，CA）申请一个用于证明服务器用途类型的证书。客
户端通过信任该证书，从而信任该主机。
在另外一些场景中，会对数据本身进行脱敏处理，对数据中的敏感信息进行数据
屏蔽或者修改，实现对敏感隐私数据的可靠保护。例如，在系统导出客户类似身份证
号、手机号、卡号、客户号等个人信息时都需要进行数据脱敏操作。
3）访问安全
如前文所述，应用系统本身要建立健壮的认证和访问控制机制，从而防范数据的
越权访问。但是近些年来，屡次发生的数据泄露问题，基本都是由内部人员的泄露造
成的。针对这个问题，信息的追溯也变得重要起来。一方面，通过审计手段记录员工
对数据的详细访问操作；另一方面，可以在数据层面加上水印，这样通过泄露的信息
可以很容易确定涉事人员。
数字水印技术即通过在原始数据中嵌入秘密信息水印（watermark）来验证该数据
的所有权。这种被嵌入的水印可以是一段文字、标识、序列号等，通常这种水印是不
可见或不可擦的，它与源数据紧密结合在一起并隐藏其中，且可以在不破坏源数据使
用场景的情况下保存下来，其原理如图 6-2、图 6-3 所示。
第 6章 高级系统运维 199
水印 水印或原始图像
水印提取或存在
原始图像 嵌入算法 水印图像 测试图像 检测算法
与否的二值判定
密码 密码
图6-2 水印信号的嵌入 图6-3 水印信号的验证
通过水印的设置方法，每个员工访问到的数据界面上都有一层肉眼无法看到的信
息，一旦该界面被泄露出去，通过还原算法就可以从泄露书中获取到泄露人员的相关
信息。
6.1.3 安全威胁
1．人为失误
人为失误（human error）是指在人的实际操作过程中，由于人本身的不稳定性所
导致的错误。从人性的角度来说，只要是人的操作，就有可能存在失误。在各行各业
都存在人为差错所造成的严重后果。同样，在系统运维领域，人为失误也可能造成系
统服务停止、业务中断等不良影响。
大事故很少是由一个原因引起的，多是由诸多问题串联在一起同时发生所造成的。
海恩法则表明在一起重大事故下有 29 起事故征候，而且在其下面还有 300 起事故征候
苗头（严重差错）。虽然人为差错主要是由人自身造成的，但是论其起因，可以从人、
环境、工具、流程 4 个方面进行总结，如表 6-2 所示。
表6-2 人为失误的原因
分 类 详 细 内 容
（1）厌倦与疏忽。
操作人员对工作感到无聊，没有成就感，心理存在抵触情绪；操作人员对工作重要
性意识不足。
（2）疲劳或者疾病。
操作人员身体处在不良状态，注意力无法正常集中，身体反应较一般情况变慢。
（3）知识或技能缺乏。
人自身原因 操作人员不知道，不熟悉，忘记正确的操作方法；按照自己的习惯或者设想的操作
方法去操作；无法预见操作后果。
（4）过于自信。
操作人员对自己的知识能力过于自信，可能做违反流程的操作，为了快点干完省略
了一些必要的步骤。例如，驾驶事故高发于有一定驾龄的司机。
（5）心理压力。
过度担心后果造成心理压力过大，精神处于亢奋紧张状态
200 大数据应用部署与调优
续表
分 类 详 细 内 容
（1）非常规事件。
突发事件，操作人员未能及时调整状态，精神处于紧张亢奋状态；对突发事件的处