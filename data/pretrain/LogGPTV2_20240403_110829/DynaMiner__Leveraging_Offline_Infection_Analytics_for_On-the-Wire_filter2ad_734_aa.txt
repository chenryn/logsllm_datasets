title:DynaMiner: Leveraging Offline Infection Analytics for On-the-Wire
Malware Detection
author:Birhanu Eshete and
V. N. Venkatakrishnan
2017 47th Annual IEEE/IFIP International Conference on Dependable Systems and Networks
DYNAMINER: Leveraging Ofﬂine Infection
Analytics for On-the-Wire Malware Detection
Birhanu Eshete and V.N. Venkatakrishnan
University of Illinois at Chicago
{eshete5, venkat}@uic.edu
Abstract—Web-borne malware continues to be a major threat
on the Web. At the core of malware infection are for-crime
toolkits that exploit vulnerabilities in browsers and their exten-
sions. When a victim host gets infected, the infection dynamics is
often buried in benign trafﬁc, which makes the task of inferring
malicious behavior a non-trivial exercise.
In this paper, we leverage web conversation graph analytics to
tap into the rich dynamics of the interaction between a victim and
malicious host(s) without the need for analyzing exploit payload.
Based on insights derived from infection graph analytics, we
formulate the malware detection challenge as a graph-analytics
based learning problem. The key insight of our approach is
the payload-agnostic abstraction and comprehensive analytics of
malware infection dynamics pre-, during-, and post- infection.
Our technique leverages 3 years of infection intelligence spanning
9 popular exploit kit families.
Our approach is implemented in a tool called DYNAMINER and
evaluated on infection and benign HTTP trafﬁc. DYNAMINER
achieves a 97.3% true positive rate with false positive rate of
1.5%. Our forensic and live case studies suggest the effectiveness
of comprehensive graph abstraction malware infection. In some
instances, DYNAMINER detected unknown malware 11 days
earlier than existing AV engines.
Index Terms— malware detection, graph analytics, machine
learning.
I. INTRODUCTION
Malware infection via drive-by-downloads has become a
day-to-day encounter in the current state of the Web. As
cybercriminals step up their evasion tactics on content-based
defense, the research community has responded with behavioral
techniques (e.g., [5, 13, 19]) for malware analysis and detection.
To this end, prior work explored approaches centered around the
malware download phenomenon. In particular, on the analysis
of binary reputation [21], exploit behavior [7, 11], redirection
graphs [14, 25], malware download paths [16, 28], download
graphs [9, 12], and botnet C&C dialogue [8, 15].
While these dimensions of malware defense are effective
when considered in isolation, practice shows that a typical
malware infection often exhibits behavioral dynamics which
encapsulates a set of related interactions among actors in
HTTP conversation. The interactions involve (i) pre-download
dynamics —through a series of redirections, (ii) payload
download dynamics —where malware payload gets downloaded
to a victim system and, (iii) post-download dynamics —which
involves connecting back to a C&C server of a cybercriminal.
At the same time, multiple actors participate in a typical
malware infection. These actors include compromised sites,
trafﬁc distribution services (TDSs), landing page servers, and
exploit servers. Given this nature of malware infection dynamics
and these crucial actors, we argue that a malware infection
detection scheme that
takes advantage of the interaction
relationships between the various actors is desirable to (i)
synthesize a comprehensive understanding of malware infection
behavior, and (ii) develop more robust defense grounded to
the inherent facets of malware infection.
In this paper, we present a novel system called DYNAMINER
that leverages payload-agnostic web conversation graph (WCG)
analytics. DYNAMINER taps into the rich dynamics of the
interaction between a victim and malicious hosts to learn
insights for building an effective malware defense. The key
observation in DYNAMINER is the payload-agnostic1 and
comprehensive2 abstraction and analysis of malware infection
dynamics. Our system reasons over a combination of payload
download dynamics, pre-download redirections, and post-
download dynamics of a web conversation, without the need
to analyze exploit payload content. In a nutshell, DYNAMINER
leverages ofﬂine analysis of real-world malware infection to
perform on-the-wire detection.
Motivated by the reality that the majority of malware use
the Web as an entry point, DYNAMINER focuses on malware
infection over HTTP. To this end, given a stream of HTTP
transactions, DYNAMINER ﬁrst abstracts the transactions into
a WCG that captures who is related to whom (e.g., hosts, IP
addresses), what relates the participants of the conversation
(e.g., download, redirection), and how the conversation plays
out temporally (e.g., delay between redirections). To annotate
the WCG with artifacts of pre-download redirection, payload
download, and post-download dynamics, DYNAMINER em-
ploys a number of heuristics (Section III-B). On the annotated
WCG, DYNAMINER then performs graph analytics to infer
payload-agnostic properties of the graph (Section IV). Finally,
it determines whether the WCG is a malware infection or
benign (Section V). DYNAMINER relies on 37 payload-agnostic
features, of which 27 are novel features. We note that among
the novel features, 15 are in the top-20 highly distinguishing
features for infection detection (Section VI-A).
In leveraging ofﬂine analysis of malware infection for on-
the-wire detection, the major challenge is the inevitable benign
background trafﬁc that can potentially cause noise for statistical
learning. We tackle this challenge via a careful choice of a
learning algorithm that suits the variable nature of HTTP trafﬁc
1Payload agnostic: does not require analysis of exploit payload (e.g., an
executable binary) to perform detection. Hence, our malware detector will be
resilient against morphed malware that evades content-based detection.
2Comprehensive: capturing pre-infection ﬁngerprinting and redirection,
payload download, and post-infection C&C call-back.
2158-3927/17 $31.00 © 2017 IEEE
DOI 10.1109/DSN.2017.54
463
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:20:37 UTC from IEEE Xplore.  Restrictions apply. 
data. To this end, we employ the Ensemble Random Forest
(ERF) [1] that is proved to perform reliably in the presence of
noisy data. The robustness of ERF comes from the fact that sub-
structures learned in a form of trees during training can capture
distinct dynamics pertinent to redirection, download, and post-
download sub-structures in the WCGs. In addition, during
real-time detection, our system also weeds out obvious sources
of noise (e.g., downloads from trusted software vendors).
On a ground truth data which spans 3 years of infection
intelligence, the ERF classiﬁer in DYNAMINER achieves an
overall accuracy of 97.3% with a false positive rate of 1.5%. On
a validation dataset disjoint with the ground truth, our classiﬁer
outperforms VirusTotal detectors by 11.5%. Furthermore, on
a forensic and a live case study, our classiﬁer outperforms
VirusTotal detectors — suggesting the practical viability of
DYNAMINER for ofﬂine and real-time malware detection. We
also conﬁrmed through a forensic case study, DYNAMINER
detected an unknown malware 11 days ahead of VirusTotal.
This paper makes the following contributions:
• an empirical analysis that suggests a set of novel insights
on malware pertinent to payload-agnostic analytics and
detection,
• a payload-agnostic malware infection analysis technique
based on analytics that taps into the rich dynamics of HTTP
conversation graphs.
• a system that can be deployed at the network level for
real-time malware detection.
The remainder of this paper is organized as follows. In
Section II, we present a motivational study of malware infection.
We introduce the formulation of our approach in Section III. In
Section IV, we discuss the payload-agnostic features. Training
and detection are discussed in Section V. We then present the
results of our evaluation in Section VI. We discuss limitations
and related work in Sections VII and VIII respectively. Section
IX concludes the paper.
II. BACKGROUND: INFECTION DYNAMICS STUDY
To motivate our approach, in this section, we report insights
from our analysis of real malware infection episodes captured
on an enterprise network over a period of 3 years.
Analysis context and sanitization. To extract interesting
artifacts from our study, we employ deep packet inspection to
“connect the dots” in HTTP transactions of malware infection.
Given our goal of examining malware infections from HTTP
trafﬁc, the traces we analyze may carry content not relevant to
actual infection (e.g., binaries downloaded as part of system
update). We therefore exclude non-malicious HTTP transactions
and associated payloads using common-sense heuristics (e.g.,
binaries from known software vendors). As a second layer
of sanity check, we pass all malicious payloads through
VirusTotal [4] and verify their maliciousness via a conservative
ensemble of detection systems.
Challenges in connecting the dots. Given an HTTP trafﬁc
capture, it might seem obvious to reconstruct the infection
scenario. Unfortunately, it is more than a just mere stitching of
HTTP transactions. With regards to recovering pre-download
dynamics (e.g., redirections), one has to carefully comb
through the HTTP trafﬁc to pinpoint redirection footprints
via Referrer headers on the client, Location headers on the
malicious host, custom redirections such as JavaScript and
META redirects. The most challenging situation is miscreants
often use obfuscation of client-side code to conceal redirection
chains. We therefore infer redirection and post-infection insights
by deciphering obfuscated infection trafﬁc to recover hidden
redirection dynamics.
II-A. Ground Truth Data and Collection Methodology
Table I shows the ground truth dataset for this paper. Next,
we describe the dataset and its collection context.
Infection Ground Truth. Our experimental insights in this
paper are based on our analysis of 770 distinct PCAP traces
of exploit kit malware infections. The dataset spans 3 years
(06/2013 - 07/2016), covers 9 popular families of exploit
kits, and involves 6 predominant exploit payloads —which,
according to recent estimates [23], account for 2/3 of web-
borne malware infection. Each trace represents a conﬁrmed
infection whereby a victim host interacts with an exploit kit site.
Given the 3 years duration it spans, the presence of the most
prevalent exploit kits, and the abundance of well-known exploit
types, we believe that our dataset is representative of a realistic
snapshot of the recent threat landscape with regards to web-
based malware infections. All the samples we use for ground
truth are obtained from malware-traffic-analysis.net.
Benign Ground Truth. To build a labelled ground truth of
infection-free web surﬁng, we used multiple browsing sessions
to capture 980 unique PCAP traces during 05/2015 - 05/2016.
In all the browsing sessions, we keep multiple tabs open in
the browser. As web search accounts for signiﬁcant percentage
of online activities, we collect traces of typical searching on
the Google and Bing search engines. To simulate dynamics
close to malware infection, we also click on links of a few
of top search results. Visiting social networking sites, such as
Facebook and Twitter, is also included in our data collection
with common user operations such as clicking on links shared
by friends and opening links in tweets. Another scenario we
monitored is the use of web-based email services (e.g., Gmail,
Yahoo! Mail) which includes the dynamics of downloading
attachments of different ﬁle formats (e.g., PDF, executables, and
MS ofﬁce documents). To account for email-based exposure,
we also captured dynamics on clicking links embedded in
email messages. To simulate watching videos and clicking on
advertisement links, we captured various scenarios of visits
to youtube.com. Lastly, we also include traces from visits
to randomly selected sites from Alexa Top 1 million sites.
Given the scenarios we used for trace collection, our dataset
is realistic enough to stress-test the discriminating power of
features we discuss later in Section IV.
Next, we highlight empirical insights on malware infection
focusing on exposure, graph properties, and HTTP header
properties.
II-B. Insights on Exposure
In a typical malware infection, unsuspecting victims are lured
to a seemingly harmless site via a range of exposures. Popular
enticement methods include: links embedded in email messages,
search results pointing to remote URLs, URLs shared by friends
464
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:20:37 UTC from IEEE Xplore.  Restrictions apply. 
Trace
Family
Benign
Angler
RIG
Nuclear
Magnitude
SweetOrange
FlashPack
Neutrino
Goon
Fiesta
Other Kits
No. of
PCAPs
980
253
62
132
43
33
29
40
19
89
70
2
2
2
2
2
2
2
2
2
2
2
34
74
17
213
231
90
15
30
90
182
68
3
6
4
8
20
8
5
6
9
7
4
0
0
0
0
0
0
0
0
0
0
0
2
18
3
18
12
6
8
14
30
3
5
No. of Hosts
No. of Redirects
Min. Max Avg. Min. Max Avg.
Unique Payload Counts
*.jar
*.swf
*.crypt
*.pdf
60
0
0
8
0
0
0
0
0
21
1
*.exe
30
80
35
730
862
310
556
45
78
226
420
3
133
74
146
22
22
35
31
15
72
13
0
1
1
1
2
1
2
2
2
1
1
0
0