from level 0 to level m (cid:0) 1 from top down. The keys
in the (m (cid:0) 1)-level key chains are used for authen-
ticating data packets. Each higher-level key chain is
used to distributed the commitments of the immedi-
ately lower-level key chains. Only the last key of the
top-level (level 0) key chain needs to be selected ran-
domly; all the other keys in the top-level key chain
can be generated from this key, and all the key chains
in level i, 1 < i (cid:20) m (cid:0) 1 are generated from the
keys in level i (cid:0) 1, in the same way that the low-level
key chains are generated from the high-level keys in
the two-level key chain scheme. Each higher-level key
chain is responsible for broadcasting commitment dis-
tribution messages to distribute the commitments for
the immediately lower-level key chains. For security
concern, we need a family of pseudo random func-
tions. The pseudo random function for each level and
between adjacent levels should be di(cid:11)erent from each
other. Such a family of pseudo random functions has
been proposed in [10]. Similar to scheme IV, we also
use multiple bu(cid:11)er random selection mechanism for
the bu(cid:11)ering of CDM packets.
The bene(cid:12)t of having multi-level key chains is that
it requires less number of keys in each key chain, or
equivalently, shorter duration at each key chain level,
compared with the two-level key chain scheme. As a
result, scheme V can scale up to long period of time.
Compared with scheme IV, the multi-level key
chain scheme is not more vulnerable to the DOS at-
tacks. The success of the DOS attacks depends on
percentage of forged CDM messages and the bu(cid:11)er
capacity in sensor node. As long as the base sta-
tion maintains a certain authentic CDM message rate,
scheme V will not have higher percentage of forged
CDM messages than scheme IV. The base station
can further piggy-back the CDM messages for dif-
ferent levels of key chains so as to reduce the com-
munication cost. Nevertheless, having more levels of
key chains does increase the overhead at both the
base station and the sensor nodes. Though devot-
ing more resources for multi-level key chains may not
be a problem for the base station, the resource con-
strained sensor nodes have to maintain more bu(cid:11)ers
for the key chain commitments as well as CDM mes-
sages at di(cid:11)erent levels. In addition, the more levels
we have, the more bandwidth is required to transmit
the CDM messages. Thus, we want as few levels as
possible to cover the life time of a sensor network.
4. Experiments
We have done a proof-of-concept implementation
of the multi-level key chain scheme. (Note that the
two-level key chain scheme is a special case of the
multi-level one.) To save development time, we im-
plemented the scheme in Java on the basis of a broad-
cast channel emulated with IP multicast. The imple-
mentation involves a base station and multiple sen-
sor nodes. The broadcast channel has a (cid:12)xed band-
width shared by all the components. This is im-
plemented by having all the components check the
channel availability before they send a message. The
broadcast channel is lossy with a message loss rate
rl. This is simulated by having each sensor node drop
the received messages with probability rl. Following
[13], we implemented pseudo random functions with
a Message Authentication Code (MAC), which was
implemented using the CBC-MAC [17] with RC5 as
the block cipher [14]. Our experiments use RC5 with
32 bit words, 12 rounds, and 8 byte keys.
In our experiments, we assumed a separate scheme
to ensure the maximum time di(cid:11)erence between the
base station and the sensors as in [13]. Moreover, we
did not attempt to control the network delay, though
network delay is indeed introduced by IP multicast,
which was used to simulate the broadcast media. In
a typical sensor network, we believe the network de-
lay will be larger than what we encountered in our
experiments, and thus will reduce the number of safe
packets.
To further study the performance of the scheme
in presence of attacks, we also implemented an at-
tacker component, which listens to the CDM mes-
sages broadcasted by the base station and inserts
forged CDM messages into the broadcast channel
to disrupt the broadcast authentication. We assume
that the attacker is intelligent in that it uses every
piece of authentic information that a sensor node can
determine in the forged messages. That is, it only
modi(cid:12)es the image H(Ki+2) in a CDMi message,
since any other modi(cid:12)cation can be detected by a
sensor node immediately. There are other attacks
against the scheme. Since they are either defeatable
by the scheme (e.g., reply attacks, modi(cid:12)cation of
data packets), or not speci(cid:12)c to our extension (e.g.,
DOS attacks against the data packets), we do not
consider them in our implementation.
We have performed a series of experiments to eval-
uate the performance of the scheme when there are
packet loss and DOS attacks against CDM messages.
The focus of the evaluation is on the overall e(cid:11)ec-
tiveness of the proposed techniques (e.g., multi-bu(cid:11)er
random selection) in tolerating packet loss and DOS
attacks, and the impact of di(cid:11)erent choices of cer-
tain parameters (e.g., bu(cid:11)er size, percentage of forged
CDM packets).
To concentrate on the design decisions we made in
our schemes, we (cid:12)x the following parameters in all
the experiments. We assume the bandwidth of the
broadcast channel is 10Kbps, according to [13]. We
only performed the experiments with the two-level
key chain scheme, since multi-level key chain scheme
is a direct extension to two-level key chain, and its
only purpose is to scale up to long period of time. We
assume the duration of each low-level time interval is
100 ms, and each low-level key chain consists of 600
keys. Thus, the duration of each time interval for the
high-level key chain is 60 seconds. We put 200 keys in
the high-level key chain, which covers up to 200 min-
utes in time. We let the base station send 20 CDM
messages per high-level time interval whenever possi-
ble1. We also set the data packets rate at base station
to 100 data packets per minute. Our analysis and ex-
periments indicate that the number of high-level keys
does not have an obvious impact on the performance
measures. Nevertheless, the life time of the two-level
key chains can be extended by having more keys in
the high-level key chain or another higher level of key
chain. Since our purpose is to study the performance
of the scheme w.r.t. to packet loss and DOS attacks,
we did not do so in our evaluation.
The performance of scheme is evaluated with the
following metrics: average percentage of authenti-
cated data packets (i.e., #authenticated data packets
av-
eraged over the sensor nodes) and average data packet
authentication delay (i.e., the average time between
the receipt and the authentication of a data packet).
In these experiments, we focused on the impact of
#received data packets
1We can maintain 20 CDM packets per high-level time in-
terval when the percentage of forged CDM messages is less than
or equal to 95%. However, when this percentage reaches 99%,
the base station can only send 5 CDM packets per high-level
time interval on average.
the following parameters on these performance met-
rics: sensor nodeâ€™s bu(cid:11)er size for data and CDM
messages, percentage of forged CDM packets and the
packet loss rate.
Because of the extremely limited memory available
on sensor nodes, the bu(cid:11)er allocation for data packets
and CDM messages becomes a major concern when
we deploy a real sensor network. We evaluate the
performance of di(cid:11)erent memory allocation schemes
with a memory constraint.
In our implementation,
a data packet consists of 65 bytes, which includes a
packet header (1 bytes), an index (8 bytes), data (40
bytes), MAC (8 bytes) and a disclosed key (8 bytes).
A CDMi packet is 41 bytes long, which includes a
packet header (1 byte), a level number and an in-
dex (8 bytes together), next commitment Ki+1;0 (8
bytes), H(Ki+2;0) (8 bytes), a MAC (8 bytes), and a
disclosed key (8 bytes). However, when a sensor node
receives a data packet, it does not need to bu(cid:11)er the
header and the disclosed key for future authentica-
tion; only the other 56 bytes need to be stored. For
CDM packets, all copies of the same CDM message
have the same values for the (cid:12)elds other than the im-
age of commitment (i.e., H(Ki+2;0) in CDMi), since
all forged messages without these values can be (cid:12)l-
tered out by the weak authentication. As a result,
except for the (cid:12)rst copy of CDMi, the only (cid:12)eld that
needs saving is H(Ki+2;0). Therefore, if we already
has one copy of CDMi (in which 40 bytes need to be
saved), we only need to save the 8 bytes of H(Ki+2;0)
for the other copies. Assuming the totally available
memory for data and CDM packets is C bytes, and
the sensor node can store up to x data packets, then
we can have y = 1+b C(cid:0)40(cid:0)56(cid:2)x
c for CDM messages.
Figure 4 shows the performance of di(cid:11)erent alloca-
tion schemes under severe DOS attacks against CDM
messages (95% forged CDM packets).
In these ex-
periments, we have total memory of 512 bytes or 1K
bytes. As in Figure 4, three data bu(cid:11)ers (168 bytes)
are enough to authenticate over 95% of the received
data packets. The (cid:12)gure also shows that if the num-
ber of data bu(cid:11)ers is too many, having more data
bu(cid:11)ers does not increase the performance. Instead,
it may decrease the performance, since less memory
is left for bu(cid:11)ering the CDM messages.
8
To measure the performance under DOS attacks,
we assume that each sensor node has 512 bytes for
both data and CDM packets. According to the previ-
ous result, we allocate 168 bytes for data packets and
344 bytes for CDM packets so that the sensor node
can store up to 3 data packets and 39 CDM packets.
The experimental results are shown in Figures 5(a)
and 5(b). Figure 5(a) shows that our scheme can tol-
%Authenticated Data Packets vs. Buffer Allocation Scheme
512 Bytes
1024 Bytes
a
t
a
D
d
e
t
a
c
i
t
n
e
h
t
u
A
%
s
t
e
k
c
a
P
120
100
80
60
40
20
0
0
2
4
6
8
10
12
14
16
18
#Data Buffers
Figure 4. The performance with di(cid:11)erent bu(cid:11)er allocation scheme for total memory size of 512 and 1024 bytes.
Assume 95% of CDM packets are forged.
erate DOS attacks to a certain degree; however, when
there are extremely severe DOS attacks (over 95% of
forged CDM packets), the performance decreases dra-
matically. This result is reasonable; a sensor node is
certainly not able to get an authentic CDM message if
all of the CDM messages it receives are forged. Nev-
ertheless, an attacker has to make sure he/she sends
much more forged CDM packets than the authentic
ones to increase his/her chance of success.
Figure 5(a) also shows that if the base station re-
broadcast su(cid:14)cient CDM messages so that on aver-
age, at least one copy of such authentic CDM mes-
sage can reach sensor node in the corresponding high-
level time interval (e.g., when loss rate (cid:20) 70%), the
channel loss rate does not a(cid:11)ect our scheme much.
When the loss rate is large (e.g., 90% as in Figure
5(a)), we can observe the drop of data packet au-
thentication rate when the percentage of forged CDM
packets is low. An interesting result is that the data
packet authentication rate begins to increase when
the percentage of forged CDM packets increases. This
is because the sensor nodes can get the disclosed key
from forged CDM packets when they cannot get it
from the authentic ones.
The channel loss rate does a(cid:11)ect the average au-
thentication delay, which can be seen in Figure 5(b).
The reason is that a sensor node needs to wait longer
time to get the disclosed key.
In addition, the (cid:12)g-
ure also shows that the percentage of forged CDM
message does not have an signi(cid:12)cant impact on the
average data packet authentication delay.
5. Related Work
Security issues such as broadcast authentication in
sensor networks have been investigated by many re-
searchers [16, 6, 13]. Due to the limited resources
at sensor nodes, asymmetric cryptography based so-
lutions [8, 15, 18] are usually impractical for sensor
networks. In the following, we only review authenti-
cation schemes based on symmetric cryptography.
Cheung proposed a scheme (OLSV) based on de-
layed disclosure of keys by the sender to authenti-
cate the link-state routing updates between routers
[7]. Anderson et al. used the same technique in their
Guy Fawkes protocol to authenticate the message be-
tween two parties [1]. However, their protocol cannot
tolerate packet loss. Briscoe proposed the FLAMeS
protocol [4], and Bergadano et al. presented an au-
thentication protocol for multicast [3]. Both are sim-
ilar to the OLSV protocol [7]. Canetti et al. proposed
to use k di(cid:11)erent keys to authenticate the multicast
messages with k di(cid:11)erent M ACâ€™s for sender authenti-
cation [5]. But, their scheme has high communication
overhead because of the k M ACâ€™s for each message.
Perrig [9] introduced a veri(cid:12)cation e(cid:14)cient signature
scheme named BiBa based on one-way hash functions
without trapdoors. The drawback of this scheme is
its high signature generation and large communica-
tion overhead for public key distribution.
Perrig et al. proposed two schemes (TESLA and
EMSS) for e(cid:14)cient multicast authentication over
lossy channels [10]. TESLA requires loose time syn-
chronization between sender and receiver, and does
not provide non-repudiation.
In contrast, EMSS
does not require time synchronization, but introduces
more signatures and communication overhead. Sev-
eral extensions to TESLA, such as immediate authen-
tication, multiple concurrent TESLA instances, were
later proposed in [11]. TESLA requires a digital sig-
nature operation to bootstrap itself, which is imprac-
tical in resource constrained sensor networks. Instead
of a digital signature, (cid:22)TESLA [13] simply uses sym-
%Authenticated Data Packets vs. %Forged CDM Packets
Average Data Packet Authentication Delay vs. Channel Loss 
0.1 Loss Rate
0.5 Loss Rate
0.9 Loss Rate
0.3 Loss Rate
0.7 Loss Rate
Rate
20% Forged CDM Packets
50% Forged CDM Packets
99% Forged CDM Packets
a
t
a
D
d
e
t
a
c
i
t
n
e
h
t
u
A
%
s
t
e
k