# 2021年西湖论剑网络安全技能大赛部分WP
|
##### 译文声明
本文是翻译文章
译文仅供参考，具体内容表达以及含义原文为准。
## Misc
###  YUSA的小秘密
查看`RGB`三通道的时候发现在`RG`两个通道是能够看到部分`Flag`的，在之前`Byte CTF`中的`Hardcore Watermark
01`题目有过类似的考点，图片中每个像素可以通过三个值(通道)来表示，常见的是`R(red)G(green)B(blue)`模式，但是本题用到的通道是`YCrCb`，通过`cv2.cvtColor(img,
cv2.COLOR_BGR2YCrCb)`对图片数据进行色彩空间转换，即可得到三个通道的数据
    from cv2 import cv2 as cv
    img = cv.imread('yusa.png')
    imgChange = cv.cvtColor(img, cv.COLOR_BGR2YCrCb)
    Y, Cr, Cb = cv.split(imgChange)
    cv.imwrite('Y.png', (Y % 2) * 255)
    cv.imwrite('Cr.png', (Cr % 2) * 255)
    cv.imwrite('Cb.png', (Cb % 2) * 255)
在`Y`通道拿到含有`Flag`的图片
###  真·签到
扫码进入西湖论剑网络安全大赛微信公众号，发送语音说出`西湖论剑2021，我来了`，即可获得本题`Flag`
###  Yusa的秘密
下载附件得到一内存镜像和AES加密的zip文件。zip文件先放着，先对内存镜像作取证工作。
Volatility基本操作，检查内存系统版本，设置profile.
    > python2 /home/admin/Downloads/volatility-master/vol.py -f '/home/admin/Downloads/Yusa'\''s secret/Yusa-PC.raw' imageinfo
    Volatility Foundation Volatility Framework 2.6
    INFO    : volatility.debug    : Determining profile based on KDBG search...
              Suggested Profile(s) : Win7SP1x64, Win7SP0x64, Win2008R2SP0x64, Win2008R2SP1x64_23418, Win2008R2SP1x64, Win7SP1x64_23418
                         AS Layer1 : WindowsAMD64PagedMemory (Kernel AS)
                         AS Layer2 : FileAddressSpace (/home/admin/Downloads/Yusa's secret/Yusa-PC.raw)
                          PAE type : No PAE
                               DTB : 0x187000L
                              KDBG : 0xf800040400a0L
              Number of Processors : 1
         Image Type (Service Pack) : 1
                    KPCR for CPU 0 : 0xfffff80004041d00L
                 KUSER_SHARED_DATA : 0xfffff78000000000L
               Image date and time : 2021-10-29 05:44:03 UTC+0000
         Image local date and time : 2021-10-29 13:44:03 +0800
可知是Windows 7 SP1的镜像，现在运行Volatility可以加上`--profile=Win7SP1x64`参数。
Volatility自带很多脚本，可以用`--help`参数查看。
接下来导出一下能扫描出的文件。
    python2 /home/admin/Downloads/volatility-master/vol.py -f '/home/admin/Downloads/Yusa'\''s secret/Yusa-PC.raw' --profile=Win7SP1x64 filescan > files.txt
然后就仔细检查所有的输出内容，最终找到这些可疑的文件：
    0x000000003e58ada0      1      0 R--r-- \Device\HarddiskVolume2\Program Files\MSBuild\Microsoft\Windows Workflow Foundation\Sakura-didi
    0x000000003e748f20      1      0 R--r-d \Device\HarddiskVolume2\Users\Yusa\Contacts\Yusa.contact
    0x000000003e78c6a0      1      0 R--r-- \Device\HarddiskVolume2\Users\Yusa\Desktop\Sakura文件\Sakura-公告
    0x000000003f2ae290      1      0 R--r-- \Device\HarddiskVolume2\Users\Yusa\Desktop\Sakura文件\Sakura-egg5
    0x000000003f3356f0      1      0 R--rw- \Device\HarddiskVolume2\PROGRA~1\MSBuild\MICROS~1\WINDOW~1\key.zip
    0x000000003f82fdc0      1      0 R--r-- \Device\HarddiskVolume2\Program Files\Reference Assemblies\Microsoft\Framework\egg2
    0x000000003f959980      1      0 R--r-- \Device\HarddiskVolume2\Users\Yusa\Desktop\Sakura文件\Sakura-备忘录
    0x000000003fa09070      1      0 R--r-d \Device\HarddiskVolume2\Users\Yusa\Contacts\Mystery Man.contact
    0x000000003fabc220      1      0 R--r-- \Device\HarddiskVolume2\Users\Yusa\Desktop\Sakura文件\Sakura-logo
用`dumpfiles`导出文件：
    python2 /home/admin/Downloads/volatility-master/vol.py -f '/home/admin/Downloads/Yusa'\''s secret/Yusa-PC.raw' --profile=Win7SP1x64 dumpfiles --dump-dir . -Q [OFFSET]
`[OFFSET]`替换为上面列表的第一列内容。`filescan`导出的是物理地址的偏移量，所以需要用`-Q`参数。可以用逗号分隔多个地址以导出多个文件。
导出文件后可对文件重命名以方便识别。其中两个contact文件可以用`Windows 联系人`程序打开。
这里可看到egg3:
这里给出提示让我寻找便笺中的内容。
神秘人联系文件里有base字符串，交给CyberChef一把梭：
得到了一个key：`820ac92b9f58142bbbc27ca295f1cf48`。尝试用其解密`Who_am_I.zip`，没有成功。
通过上网查找，得知Windows 便笺的数据存储在`%APPDATA%\Microsoft\Sticky
Notes\StickyNotes.snt`，然后再在文件列表内搜索，直接搜索到：
    0x000000003fb306e0     16      1 RW-r-- \Device\HarddiskVolume2\Users\Yusa\AppData\Roaming\Microsoft\Sticky Notes\StickyNotes.snt
还是跟上面一样的方法提取文件。提取出来后如果直接打开会遇到很多转义字符与编码，不宜查看。所以这里可以采用一个比较直观的方法：直接找一个Windows
7系统，创建一个空便笺，然后把文件替换进去即可。
操作后得到的便笺内容：
又得到了一个密码：`世界没了心跳`。但这还是打不开`Who_am_I.zip`。
继续深挖，把当前用户Yusa的用户密码导出：
使用自带的hashdump可从注册表和SAM文件等地方导出NT
Hash，但是得到hash后仍需要暴力破解密码。实际上有Mimikatz工具可从`lsass.exe`的进程dump中直接提取出密码。
Mimikatz是Windows平台的工具，但在Linux平台上已经有模仿的工具mimipenguin，可在Kali Linux等系统上使用。
使用Volatility官方社区提供的[插件](https://github.com/volatilityfoundation/community)：
    pip2 install distorm3 Pycrypto yara construct dpapick
    git clone https://github.com/volatilityfoundation/community
拉取后可以把文件夹放到`volatility/plugins`下，也可用`--plugin`参数指定该文件夹。
    python2 /home/admin/Downloads/volatility-master/vol.py -f '/home/admin/Downloads/Yusa'\''s secret/Yusa-PC.raw' --profile=Win7SP1x64 mimikatz
运行结果：
    Module   User             Domain           Password                                
    -------- ---------------- ---------------- ----------------------------------------    wdigest  Yusa             YUSA-PC          YusaYusa520                             
    wdigest  YUSA-PC$         WORKGROUP
得到用户账户密码为`YusaYusa520`。用此密码成功解压出`Who_am_I`文件。
上面还得到了一个`key.zip`，也有加密，可以用`世界没了心跳`密码解压得到`exp`文件。
`exp`文件内容：
    from PIL import Image
    import struct
    pic = Image.open('key.bmp')
    fp = open('flag', 'rb')
    fs = open('Who_am_I', 'wb')
    a, b = pic.size
    list1 = []
    for y in range(b):
        for x in range(a):
            pixel = pic.getpixel((x, y))
            list1.extend([pixel[1], pixel[0], pixel[2], pixel[2], pixel[1], pixel[0]])
    data = fp.read()
    for i in range(0, len(data)):
        fs.write(struct.pack('B', data[i] ^ list1[i % a*b*6]))
    fp.close()
    fs.close()
可以看出`Who_am_I`正是用此脚本生成的。要解密`flag`文件就需要找到`key.bmp`。
在文件列表里的`Sakura-didi`文件就包含了需要的`key.bmp`。用密码`820ac92b9f58142bbbc27ca295f1cf48`可以成功解压。
得到后根据生成脚本编写解密脚本：
    from PIL import Image
    import struct
    pic = Image.open('key.bmp')
    f = open('Who_am_I', 'rb').read()
    o = open('flag','wb')
    a, b = pic.size
    list1 = []
    for y in range(b):
        for x in range(a):
            pixel = pic.getpixel((x, y))
            list1.extend([pixel[1], pixel[0], pixel[2], pixel[2], pixel[1], pixel[0]])
    for i in range(0, len(f)):
        o.write(struct.pack('B', f[i] ^ list1[i % a*b*6]))
    o.close()
最后得到的`flag`文件是GIF文件。
用`StegSolve`打开后，经过仔细观察，在第10帧找到了勉强能看清的flag：
    DASCTF{c38376c61-77f1-413e-b2e6-3ccbc96df9f4}
附：
  * egg1  
文件列表内：
    0x000000003e20d900      1      0 R--r-- \Device\HarddiskVolume2\Users\Yusa\Desktop\新建文本文档.txt
    egg1 yusa姐姐很担心比赛时平台卡得崩溃，为此彻夜难眠
  * egg2  
文件列表内：
    0x000000003f82fdc0      1      0 R--r-- \Device\HarddiskVolume2\Program Files\Reference Assemblies\Microsoft\Framework\egg2
    egg2 yusa姐姐是尊贵的SVIP8，不会有人不知道叭
  * egg3  
在Yusa的联系方式里可看到。
    egg3 You still have lots more to work on...
  * egg4  
cmd历史记录（consoles）：
    egg4 eXVzYeWnkOWnkOacieWlveWkmuWlveWkmueahOWwj+Woh+Wmu++8jOa4o+eUtw==
    yusa姐姐有好多好多的小娇妻，渣男
  * egg5  
文件列表内：
    0x000000003f2ae290      1      0 R--r-- \Device\HarddiskVolume2\Users\Yusa\Desktop\Sakura文件\Sakura-egg5
提取出`egg5.zip`需要密码：
    0x000000003e5279a0      1      0 R--r-- \Device\HarddiskVolume2\Users\Public\Documents\th1s_1s_3gg5_k3y
文件内容也是`th1s_1s_3gg5_k3y`，用密码解压egg5:
    yusa姐姐希望西湖论剑的flag格式为yusameinv{.*?}，但我就不^_^
## Crypto
###  密码人集合
> 数独游戏，将`1-9`分别对应`我要拿西湖论剑第一`，利用在线网站解密后按照题目答案要求的格式拼接起来提交即可拿到本题的`Flag`
###  hardrsa
> `[羊城杯 2020]Power`改编的吧，这里照着这道题的`exp`打就能获取本题的`Flag`  
>  先要解决已知明文反求加密指数，采用离散对数来求解，也就是用`sympy`库中的`discrete_log()`来求