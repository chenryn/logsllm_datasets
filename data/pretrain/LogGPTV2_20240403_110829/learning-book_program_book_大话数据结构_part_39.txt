for（v=0;wd",k）;
/打印路径顶点/
k=P[k][w];
/获得下一个路径顶点下标·/
printf（->td\n",w）;
1打印终点/
printf（"\n"）:
再次回过头来看看弗洛伊德（Floyd）算法，它的代码简洁到就是一个二重循环初
始化加一个三重循环权值修正，就完成了所有顶点到所有顶点的最短路径计算。几乎
就如同是我们在学习C语言循环嵌套的样例代码而已。如此简单的实现，真是巧妙之
极，在我看来，这是非常漂亮的算法，不知道你们是否喜欢？很可惜由于它的三重循
环，因此也是0（n3）时间复杂度。如果你面临需要求所有顶点至所有顶点的最短路径
问题时，弗洛伊德（Floyd）算法应该是不错的选择。
另外，我们虽然对求最短路径的两个算法举例都是无向图，但它们对有向图依然
有效，因为二者的差异仅仅是邻接矩阵是否对称面已。14
7.8拓扑排序
说了两个有环的图应用，现在我们来谈谈无环的图应用。无环，即是图中没有回
路的意思。
注”：关于波算法详细讲解，请参考（算法导论）第六部分图算法的252节。
270
---
## Page 295
第7章图
7.8.1拓扑排序介绍
我们会把施工过程、生产流程、软件开发、教学安排等都当成一个项目工程来对
待，所有的工程都可分为若干个“活动”的子工程。例如图7-8-1是我这非专业人士
绘制的一张电影制作流程图，现实中可能并不完全相同，但基本表达了一个工程和若
干个活动的概念。在这些活动之间，通常会受到一定的条件约束，如其中某些活动必
须在另一些活动完成之后才能开始。就像电影制作不可能在人员到位进驻场地时，导
演还没有找到，也不可能在拍摄过程中，场地都没有。这都会导致荒谬的结果。因此
这样的工程图，一定是无环的有向图。
在一个表示工程的有向图中，用顶点表示活动，用弧表示活动之间的优先关系，
这样的有向图为顶点表示活动的网，我们称为AOV网（ActivityOnVertex
Network）。AOV网中的弧表示活动之间存在的某种制约关系。比如演职人员确定
了，场地也联系好了，才可以开始进场拍摄。另外就是AOV网中不能存在回路。刚才
已经举了例子，让某个活动的开始要以自已完成作为先决条件，显然是不可以的。
别本初步完成
（剧本完善）
导演确定
电影制作启动
演职人员确定
人员到位进驻场地
前期准备
V1
场地确定
（场景拍摄1
投资确定
X
场景拍摄2
商业宣传）
后期制作1）
场景拍摄3
（场景拍摄4）
（电影制作完成上映
14
（后期制作2）
图7-8-1
设G=（VE）是一个具有n个顶点的有向图，V中的顶点序列V1，V2，，Vn，
满足若从顶点v到v有一条路径，则在顶点序列中顶点V必在顶点v之前。则我们
称这样的顶点序列为一个拓扑序列。
图7-8-1这样的AOV网的拓扑序列不止一条。序列voV1V2VsV4VsV6V7VgVgV10
V11V12V13V14V1sV16是一条拓扑序列，而voV1V4VV2V7V6VsVgV10VyV12V11V14Vi3V15
V16也是一条拓扑序列。
271
---
## Page 296
大据数据结构
所谓拓扑排序，其实就是对一个有向图构造拓扑序列的过程。构造时会有两个结
果，如果此网的全部顶点都被输出，则说明它是不存在环（回路）的AOV网；如果输
出顶点数少了，哪怕是少了一个，也说明这个网存在环（回路），不是AOV网。
一个不存在回路的AOV网，我们可以将它应用在各种各样的工程或项目的流程图
中，满足各种应用场景的需要，所以实现拓扑排序的算法就很有价值了。
7.8.2拓扑排序算法
对AOV网进行拓扑排序的基本思路是：从AOV网中选择一个入度为0的顶点输
出，然后制去此顶点，并删除以此顶点为尾的弧，继续重复此步骤，直到输出全部顶
点或者AOV网中不存在入度为0的顶点为止。
首先我们需要确定一下这个图需要使用的数据结构。前面求最小生成树和最短路
径时，我们用的都是邻接矩阵，但由于拓扑排序的过程中，需要删除顶点，显然用邻
接表会更加方便。因此我们需要为AOV网建立一个邻接表。考虑到算法过程中始终要
查找入度为0的顶点，我们在原来顶点表结点结构中，增加一个入度域in，结构如表
7-8-1所示，其中in就是入度的数字。
Indatafirstedge
因此对于图7-8-2的第一幅图A0V网，我们可以得到如第二幅图的邻接表数据结
构。