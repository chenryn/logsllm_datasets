### Bug report
**Bug summary**
On macOS with PyQt4, when placing a `FigureCanvasQTAgg` and a `QGraphicsView`
in the same widget, some QWidget recursive repaint and Core Graphics errors
(see below) occur when showing the widget.
**Code for reproduction**
    from PyQt4 import Qt
    import matplotlib
    matplotlib.use('Qt4Agg')
    from matplotlib.backends.backend_qt4agg import FigureCanvasQTAgg
    from matplotlib.figure import Figure
    app = Qt.QApplication([])
    fig = Figure()
    ax = fig.add_subplot(111)
    ax.plot([0, 1])
    canvas = FigureCanvasQTAgg(fig)
    scene = Qt.QGraphicsScene()
    scene.addRect(0, 0, 10, 10)
    view = Qt.QGraphicsView(scene)
    layout = Qt.QHBoxLayout()
    layout.addWidget(canvas)
    layout.addWidget(view)
    widget = Qt.QWidget()
    widget.setLayout(layout)
    widget.show()
    app.exec_()
**Actual outcome**
The widgets show correctly, but the following errors are displayed in the
console:
    QWidget::repaint: Recursive repaint detected
    QWidget::repaint: Recursive repaint detected
    Oct  2 14:23:47  python[52865] : CGContextGetCTM: invalid context 0x0. If you want to see the backtrace, please set CG_CONTEXT_SHOW_BACKTRACE environmental variable.
    Oct  2 14:23:47  python[52865] : CGContextConcatCTM: invalid context 0x0. If you want to see the backtrace, please set CG_CONTEXT_SHOW_BACKTRACE environmental variable.
    [...]
**Expected outcome**
This does not occur with PyQt5 (tested with 5.9).  
This does not occur with matplotlib 2.0.2 and PyQt4.
Also, commenting the call to `processEvents` in `FigureCanvasQTAggBase
.paintEvent` solves the issue:
matplotlib/lib/matplotlib/backends/backend_qt5agg.py
Line 75 in 793635c
|  QtWidgets.QApplication.instance().processEvents()  
---|---  
**Matplotlib version**
  * Operating System: macOS Sierra 10.12.5
  * Matplotlib Version: 2.1.0rc1
  * Python Version: Tested with 2.7 (both system and macPorts) and 3.6 (macPorts)
  * Jupyter Version (if applicable):
  * Other Libraries: PyQt4 4.12.1