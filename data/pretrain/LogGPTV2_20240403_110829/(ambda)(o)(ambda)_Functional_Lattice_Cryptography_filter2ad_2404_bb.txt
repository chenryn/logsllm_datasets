2In brief: the fastest known quantum algorithms for the poly(𝑛)-approx-SVP problems underlying many
cryptographic constructions, in any class of rings covered by the hardness theorems, perform essentially no
better than algorithms for arbitrary lattices of the same dimension 𝑛, and take at least exponential 2Ω(𝑛) time.
Under plausible number-theoretic conjectures, 2𝑂(
𝑛 log 𝑛)-approx-SVP is solvable in quantum polynomial
time in certain rings, such as prime-power cyclotomics and their maximal totally real subrings [Cra+16;
CDW17]; however, the main algorithmic technique used in these works meets a barrier at 2Ω(
𝑛/ log 𝑛)-factor
approximations [Cra+16, Section 6].
√
√
201
of parameterizations and conjectured security levels, ranging from “toy” to “very hard”
(see subsection 7.1.1 for details). We hope that these challenges will provide a focal point
for theoretical and practical cryptanalytic effort on Ring-LWE/LWR, and will help to more
precisely quantify the concrete security of their instantiations.3
A central issue in the creation of challenges for problems like (Ring-)LWE is that a
dishonest challenger can publish instances that are much harder to solve than honestly
generated ones—or even impossible. This is because (properly instantiated) Ring-LWE
is conjectured to be pseudorandom, so it is difﬁcult to distinguish between a correctly
generated challenge and a harder one with much larger errors, or even a uniformly random
one, which has no solution. A dishonest challenger could therefore publish unsolvable
challenges, and point to the absence of breaks as bogus evidence of hardness.4
To deal with this issue, we design and implement a simple, non-interactive, and publicly
veriﬁable “cut-and-choose” protocol that gives reasonably convincing evidence that the
challenge instances are properly distributed, or at least not much harder than claimed. In
short, for each Ring-LWE/LWR instantiation the challenger announces many timestamped
instances. At a later time, the challenger reveals the secrets for all but a random one of the
instances, as determined by a publicly veriﬁable source of randomness. (Concretely, we use
the NIST randomness beacon [11].) Anyone can then verify that all the revealed instances
look “proper,” which makes it likely that the remaining instance is proper as well. Otherwise,
the challenger would have had been caught with rather larger probability—assuming, of
course, that it cannot predict or inﬂuence the randomness source. See section 7.2 for further
details and discussion of some potential alternatives, which turn out not to give the kind
3The challenges and their parameters can be obtained via the Ring-LWE challenges website [16]. The
archive rlwe-challenges-v1.tar.gz contains challenges for 516 different instantiations, and has a SHA-
256 hash value 07cd f744 5c9d 178c 8b13 5a42 47ca a143 5320 c104 8ee8 c634 8914 a915 5757
dcef. All our challenge-related archives are digitally signed under the PGP/GPG public key having ID b8b2
45f5, which has ﬁngerprint 8126 1e02 fc1a 11c9 631a 65be b5b3 1682 b8b2 45f5.
4This appears qualitatively different from problems like integer factorization and discrete logarithms, where
deviating from the prescribed distributions seems like it can only make challenges easier to solve, or at least
no harder.
202
of guarantees we desire. See subsection 7.1.2 for discussion of a recent approach to LWE
challenges that aims for different goals.
Search versus decision. We stress that our challenges are for search versions of Ring-
LWE/LWR, whereas many cryptographic applications rely on the conjectured hardness of
solving decision with noticeable advantage. Unfortunately, it appears impractical to give
meaningful challenges for the latter regime. This is because detecting a tiny advantage
requires a very large number of instances, and a corresponding increase in effort by the
attacker. And even for relatively large advantages, the naïve method of conﬁrming the
solutions would require the challenger to retain the correct answers and honestly compare
them to the attacker’s, because the attacker cannot conﬁrm its own answers (unlike with the
search problem, where it can).5
Nevertheless, we gain conﬁdence in the usefulness of search challenges from the fact that
the known classes of attack against decision either proceed by directly solving search, or can
be adapted to do so with relatively little or no extra overhead. (See [LP11; LN13; Alk+16].)
In addition, there are search-to-decision reductions [LPR13b, Section 5] which provide
evidence that decision cannot be much easier than search (though the known reductions
incur some as-yet unoptimized overhead). Finally, we note that practical constructions of,
e.g., key exchange as in [Bos+16a] can use “hashed” variants, for which hardness of search
can be sufﬁcient for a reductionist security analysis in the random oracle model.
Implementation. Our free and open-source challenge generator and veriﬁer are imple-
mented using Λ∘𝜆. We rely on its support for arbitrary cyclotomics and sampling from the
theory-recommended Ring-LWE distributions that are needed for our instantiations (see
subsection 7.1.1 for details). To encourage participation, we stress that all the challenge
5We considered more sophisticated non-interactive methods for conﬁrming answers, like using a “fuzzy
extractor” [Dod+08] to encrypt a secret that can only be recovered by solving a large enough fraction of
decision challenges. Such methods seem tantalizing, but are complex to implement and bandwidth-intensive
in our setting, so we leave this direction to future work.
203
data is formatted using Google’s platform- and language-neutral protocol buffers (protobuf)
framework [Goo08]. This allows the challenges to be read using most popular program-
ming languages, via parsers that are automatically generated from our protobuf message
speciﬁcations. The Ring-LWE challenges website [16] contains auto-generated parsers, and
simple examples demonstrating their use, in C++, Java, Python, and Haskell. (The protobuf
speciﬁcations can be found in [CP16a], and with the challenges themselves.) In addition,
Λ∘𝜆 includes C++ code for cyclotomic ring operations, which can be used by alternative
implementations written in other languages.
7.1.1 Challenge Instantiations
Our challenge instantiations cover a wide range of parameters for several aspects of the
Ring-LWE/LWR problems, including: size and form of the cyclotomic index and corre-
sponding dimension; width of the error distribution; size and arithmetic form of the modulus;
and number of samples. Each of these parameters has some degree of inﬂuence on the
conjectured hardness of a Ring-LWE instantiation, as we discuss below.
For each challenge instantiation we give a qualitative hardness estimate, ranging from
“toy” and “easy” to “very hard,” along with an approximate block size that should allow the
Block Korkin-Zolotarev (BKZ) basis-reduction algorithm to solve the instantiation. (See
section 7.4.) We intentionally do not estimate concrete “bits of security” (though BKZ block
size is a useful proxy), since any such estimates would necessarily be very imprecise. We
hope that real-world efforts to break the challenges will provide more precision.
The easier categories represent instantiations that should be breakable using standard
lattice algorithms on desktop-class machines in somewhere between a few minutes and
a few months, whereas the hardest category should be out of reach even for nation-state
adversaries—based on the current state of public cryptanalysis, at least. We deduce our
hardness estimates by approximating the Hermite factors and BKZ block sizes needed to
204
solve the instantiations via lattice attacks, which usually represent the most practically
efﬁcient attacks against Ring-LWE/LWR. See section 7.4 for further details.
Cyclotomic Ring
A primary parameter inﬂuencing Ring-LWE’s conjectured hardness is the degree (or di-
mension) of the ring 𝑅, which in the cyclotomic case is the totient 𝑛 = 𝜙(𝑚) of the index
(or conductor) 𝑚. Thus far, most implementations have used two-power cyclotomic rings,
because they have the computationally and analytically simplest form 𝑅 ∼= Z[𝑋]/(𝑋 𝑛 + 1),
where 𝑛 is a power of two. Moreover, sampling from a spherical Gaussian in their “canonical”
geometry is equivalent to sampling independent identically distributed Gaussian coefﬁcients
for the powers of 𝑋.
We believe that Ring-LWE over non-two-power cyclotomics is deserving of more
cryptanalytic effort. First, powers of two are rather sparse, especially in the relevant range
of 𝑛 in the several hundreds or more. In addition, two-power cyclotomics are incompatible
with some advanced features of homomorphic encryption schemes, such as “plaintext
packing” [SV14] and asymptotically efﬁcient “bootstrapping” algorithms [GHS12a; AP13]
for characteristic-two plaintext rings like F2𝑘. Finally, non-two-power cyclotomic rings
lack orthogonal bases (in the canonical geometry), so sampling from recommended error
distributions and error management are more subtle [LPR13a], and it is interesting to
consider what effect (if any) this has on concrete hardness.
Our challenges are weighted toward the popular two-power case, but they also include
indices of a variety of other forms, including powers of other small primes, those that are
divisible by many small primes, and moderately large primes. We are particularly interested
in whether there are any cryptanalytic attacks that can take special advantage of any of these
forms. Our choices of indices 𝑚 correspond to dimensions 𝑛 ranging from 128 to 4,096 for
Ring-LWE, and from 16 to 162 for Ring-LWR.
205
Error Width
The absolute error of a (Ring-)LWE instantiation is, very informally, the “width” of the
coefﬁcients of the error distribution, with respect to an appropriate choice of basis. The main
worst-case hardness theorems for (Ring-)LWE (e.g., [Reg09; Pei09; LPR13b]) apply to
√
Gaussian-like error distributions whose widths exceed certain Ω(
𝑛) bounds. Conversely,
there are algebraic attacks that can exploit signiﬁcantly narrower errors, if enough samples
are available (see, e.g., [AG11; Alb+14; EHL14; CLS15; CLS16; Pei16]). However, there is
still a poorly understood gap between the theoretical bounds and parameters that plausibly
fall to such attacks, especially in the low-sample regime (see Figure 7.1.1 below for further
details).
Following the original deﬁnition and recommended usage of Ring-LWE [LPR13b;
LPR13a], our challenge instantiations use the “dual” form involving the fractional ideal 𝑅∨
of the ring 𝑅, with Gaussian error that is spherical in the canonical embedding. More
speciﬁcally, the products 𝑠· 𝑎𝑖 reside in the quotient group 𝑅∨/𝑞𝑅∨, and we add error whose
canonical embedding is distributed as a continuous Gaussian 𝐷𝑟 of some parameter 𝑟 > 0
(with optional discretization to 𝑅∨). In comparison to plain LWE, we emphasize that 𝑅∨
in the canonical embedding is a much denser lattice than Z𝑛; in particular, errors drawn
√
from 𝐷𝑟 have (not necessarily independent) Gaussian coefﬁcients of width 𝑟
𝑛 with respect
to the so-called “decoding” Z-basis of 𝑅∨ [LPR13a]. (See Figure 7.1 and section 2.2 for
further details.) Therefore, our parameterization is closely analogous to plain LWE with
Gaussian error of parameter 𝑟
𝑛.
√
Our challenge instantiations use four qualitative categories of error parameter 𝑟:
Trenta corresponds to a bound from the main “worst-case hardness of decision-Ring-
LWE” theorem [LPR13b, Theorem 3.6], namely, 𝑟 ≥ (𝑛ℓ/ ln(𝑛ℓ))1/4 ·√︀ln(2𝑛/𝜀)/𝜋,
where ℓ is the number of revealed samples and (say) 𝜀 ≈ 2−80 is a bound on the
206
𝑅∨
𝑑0
𝑑1
Figure 7.1: The canonical embedding of: (in dark blue) the dual ideal 𝑅∨ of the 3rd
cyclotomic ring 𝑅 = Z[𝜁3], (in light blue) its “decoding” Z-basis {𝑑0, 𝑑1}, and (in red) the
continuous spherical Gaussian 𝐷𝑟 of parameter 𝑟 =
√
2.
statistical distance in the reduction.6 We pose this class of challenges to give some
insight into instantiations that conform to the error bounds from known worst-case
hardness theorems (though not necessarily for large enough dimensions 𝑛 to obtain
meaningful hardness guarantees via the reductions alone).
Grande corresponds to some 𝑟 ≥ 𝑐 = Θ(1) (i.e., coefﬁcients of width 𝑐
√
𝑛) that satisﬁes
the lower bound from Regev’s worst-case hardness theorem [Reg09] for plain LWE,
and that also sufﬁces for provable immunity to the class of “ring homomorphism”
attacks deﬁned in [EHL14; Eli+15; CLS15; CLS16], as shown in [Pei16, Section 5].
We note that while the theorems from [Reg09] and [Pei16] are stated for 𝑐 = 2, an
inspection of the proofs and tighter analysis reveal that the constant can be improved
𝜋) ≈ 0.282 in the former case [Reg16], and to 𝑐 =√︀8/(𝜋𝑒) ≈ 0.968
√
to nearly 1/(2
or better in the latter case, depending on the dimension and desired time/advantage
lower bound (see subsection 7.3.1 for details). We pose this class of challenges to give
instantiations which might someday conform to signiﬁcantly improved worst-case
6It is very likely that the bound can be improved by a small constant factor within the same proof framework;
in addition, the (𝑛ℓ/ ln(𝑛ℓ))1/4 factor might be an artifact of the proof. However, we use the bound as stated
for our challenges.
207
hardness theorems for Ring-LWE, and which in any case satisfy the bounds from
known hardness theorems in the absence of ring structure.
√
Tall corresponds to 𝑟 ∈ {6, 9}/
𝑛, i.e., error coefﬁcients of width 6 or 9. Errors of roughly
this size have been used in prior concrete analyses of LWE instantiations (e.g., [MR09;
LP11]) and in practical implementations of (Ring-)LWE cryptography (e.g., [Alk+16;
Bos+16a]).
√
Short corresponds to 𝑟 ∈ {1, 2}/
𝑛, i.e., error coefﬁcients of width 1 or 2. In light
of the above-mentioned small-error and homomorphism attacks, we consider such
parameters to be riskier, at least when a large number of Ring-LWE samples are
available. But at present it is unclear whether the attacks are feasible when only a
small or moderate number of samples are available, as is the case in our challenges
and in many applications (see Figure 7.1.1 below for further discussion).
Finally, for each setting of the error parameter we give challenges for both continuous
error and its corresponding discretized version, where each real coefﬁcient (with respect to
the decoding basis) is rounded off to the nearest integer. Cryptographic applications almost
always use discrete forms of Ring-LWE, but continuous forms are also cryptanalytically
interesting. In particular, rounding yields a tight reduction from any continuous form to its
corresponding discrete form, i.e., the latter is at least as hard as the former.
Modulus
Another main quantity that strongly inﬂuences Ring-LWE’s apparent hardness is the error
rate, which is, informally, the ratio of the (absolute) error width to the modulus 𝑞. There is
much theoretical and practical cryptanalytic evidence that, all else being equal, Ring-LWE
becomes harder as the error rate increases. E.g., there are tight reductions from smaller to
larger rates; worst-case hardness theorems yield stronger conclusions for larger error rates;
and lattice-based attacks perform worse in practice. Therefore, cryptographic applications
208
typically aim to use the smallest possible modulus that can accomodate the accumulated error
terms without mod-𝑞 “wraparound” (so as to avoid, e.g., incorrect decryption). However,
other considerations can introduce additional subtleties in the choice of modulus.
The initial worst-case hardness theorem for search-Ring-LWE [LPR13b, Theorem 4.1]
applies to any sufﬁciently large modulus 𝑞 and absolute error. However, the search-to-
decision reduction [LPR13b, Theorems 5.1 and 5.2] requires 𝑞 to be a prime integer that
“splits well” in 𝑅, i.e., the ideal 𝑞𝑅 factors into distinct prime ideals of small norm.7
Subsequent work [BV14a; Bra+13] used the “modulus switching” technique to obtain a
reduction for essentially any modulus, at the cost of an increase in the error rate. Finally,
recent work [PRS17] gave a worst-case hardness theorem for decision-Ring-LWE for
any modulus, which either matches or improves upon the just-described results in terms
of parameters. On the cryptanalytic side, the above-mentioned homomorphism attacks
of [EHL14; Eli+15; CLS15; CLS16] can take advantage of moduli 𝑞 for which the ideal 𝑞𝑅
has small-norm ideal divisors, but only when the error is insufﬁciently “well spread” relative
to those ideals. (See [Pei16] for further details.)
With these considerations in mind, our challenge instantiations include moduli of a
variety of sizes and arithmetic forms. We include moduli that split completely, others
that split very poorly, and some that “ramify” (e.g., two-power moduli for two-power
cyclotomics). Each instantiation uses a modulus that is large enough, relative to the absolute
error, to yield correct decryption with high probability in public-key encryption and key-
exchange protocols following the template from [LPR13b; Pei14]. See subsection 7.3.2 for
further details.
Number of Samples
Finally, each of our challenge instantiations consist of either a small or moderate number
of samples (speciﬁcally, three or 100) for Ring-LWE, and 500 samples for Ring-LWR.
7Such moduli also enable FFT-like algorithms over Z𝑞, also called Chinese Remainder Transforms, which
yield fast multiplication algorithms for 𝑅/𝑞𝑅 using just Z𝑞 operations.
209