title:Helmet: A resistance drift resilient architecture for multi-level
cell phase change memory system
author:Wangyuan Zhang and
Tao Li
Helmet‡: A Resistance Drift Resilient Architecture for  
Multi-level Cell Phase Change Memory System 
‡ Helmet, with its long roots that bind the sand, is a popular plant used for fighting against drifting sand. 
Wangyuan Zhang and Tao Li 
Intelligent Design of Efficient Architectures Laboratory (IDEAL) 
Department of Electrical and Computer Engineering, University of Florida 
PI:EMAIL, PI:EMAIL 
Abstract—Phase  change  memory  (PCM)  is  emerging  as  a 
promising  solution  for  future  memory  systems  and  disk  caches. 
As  a  type  of  resistive  memory,  PCM  relies  on  the  electrical 
resistance  of  Ge2Sb2Te5  (GST)  to  represent  stored  information. 
With  the  adoption  of  multi-level  programming  PCM  devices, 
unwanted  resistance  drift  is  becoming  an  increasing  reliability 
concern in future high-density, multi-level cell PCM systems. To 
address  this  issue  without  incurring  a  significant  storage  and 
performance  overhead  in  ECC,  conventional  design  employs  a 
conservative  approach,  which  increases  the  resistance  margin 
between  two  adjacent  states  to  combat  resistance  drift.  In  this 
paper, we show that the wider margin adversely impacts the low-
power benefit of PCM by incurring up to 2.3X power overhead 
and  causes  up  to  100X  lifetime  reduction,  thereby  exacerbating 
the  wear-out  issue.  To  tolerate  resistance  drift,  we  proposed 
Helmet, a multi-level cell phase change memory architecture that 
can  cost-effectively  reduce  the  readout  error  rate  due  to  drift. 
Therefore,  we  can  relax  the  requirement  on  margin  size,  while 
preserving  the  readout  reliability  of  the  conservative  approach, 
and  consequently  minimize  the  power  and  endurance  overhead 
due to drift. Simulation results show that our techniques are able 
to decrease the error rate by an average of 87%. Alternatively, 
for satisfying the same reliability target, our schemes can achieve 
28%  power  savings  and  a  15X  endurance  enhancement  due  to 
the  reduced  margin  size  when  compared  to  the  conservative 
approach. 
Keywords-phase  change  memory;  multi-level  cell;  resistance 
drifting; reliability; computer architecture 
I. 
INTRODUCTION 
Phase change memory (PCM) has recently attracted a large 
interest as a new technology for memory system [1, 2, 3, 4, 5] and 
disk cache design. It offers low power consumption, high cycling 
endurance, extended scalability, and high read/write speed. PCM 
relies on the phase change properties of a chalcogenide material, 
typically  Ge2Sb2Te5  (GST),  to  represent  stored  information.  A 
PCM  cell  can  be  reversibly  switched  between  two  structural 
phases  (i.e.  amorphous  and  crystalline  states)  with  significantly 
different  resistances  (i.e.  high  in  the  amorphous  and  low  in  the 
crystalline).  While  the  crystalline  phase  is  fairly  stable  versus 
time  and  temperature,  the  amorphous  phase  is  meta-stable  and 
can experience amorphous state resistance drift [6]. The increase 
in  resistance  for  the  amorphous  state  represents  a  concern  for 
PCM reliability, for which the resistance value is indicative of the 
logic state, and thus must be constant over time. For single-level 
programming  PCM  device,  there  are  2-3  orders  of  magnitude 
resistance  difference  between  set  (i.e.  crystalline)  and  reset  (i.e. 
amorphous)  states.  Therefore,  the  impact  of  resistance  drift  is 
negligible and the drift may even be beneficial for distinguishing 
leading 
one state from the other in single-level cells (detailed in Section 
II.B).  
However,  the  continued  quest  for  high  integration  density 
has recently motivated the PCM R&D community to design and 
fabricate PCM devices with multi-level cells (MLC) [7, 8, 9]. To 
store  more  bits  in  a  single  PCM  cell,  the  MLC-PCM  relies  on 
fine-grained  resistance  partitioning, 
to  a  reduced 
resistance  margin  that  separates  the  states.  Consequently,  drift 
induced  resistance  increase  is  more  likely  to  result  in  unwanted 
mixing  of  intermediate  states  and  more  errors  for  MLC-PCM. 
Although  ECC  is  typically  adopted  in  memory  and  disk  cache 
systems, correcting a larger number of errors not only incurs an 
increased  latency  at  the  decode  stage  but  also  demands  more 
check  bits,  leading  to  an  increased  performance  and  storage 
overhead.  To  address  this  reliability  issue  without  incurring  a 
significant  overhead  in  ECC,  conventional  MLC-PCM  design 
adopts  a  wide  resistance  margin  between  any  adjacent  states  to 
guard against drift and ensure its reliability. This large resistance 
margin causes the resistance window bounded by the lowest and 
highest resistance states to be enlarged. As the lowest resistance 
states  exhibit  a  fixed  resistance  property,  the  resistance  of  the 
highest  resistance  states  needs  to  be  increased.  As  a  result,  an 
increased  programming  current  is  required  to  program  PCM 
devices,  resulting  in  high  power  consumption  and  degraded 
endurance. In this paper, we make the first step in quantifying the 
impact  of  runtime  program  execution  and  chip  temperature  on 
MLC-PCM resistance drift. We then propose a novel architecture, 
Helmet,  which  is  able  to  cost-effectively  reduce  drift-induced 
read  out  error  rate.  Alternatively,  Helmet  can  relax  the  margin 
size requirement while achieving the same reliability target as the 
conservative  approach.  Consequently,  our  design  is  capable  of 
alleviating the deleterious impact of wider margin size on MLC-
PCM power and endurance.  
The contributions of this paper are: 
•  We characterize the drift dynamics of intermediate GST 
resistance states on both an off-chip and a 3D die-stacked MLC-
PCM/DRAM hybrid memory. We observe that, in the worst case, 
memory  references  from  multi-core  oriented  workloads  and 
elevated  chip  temperature  result  in  an  up  to  20%  readout  error 
rate.  In  conventional  MLC-PCM  design,  resistance  drift  is 
handled by providing a large margin in state partition and current 
sensing,  resulting  in  larger  write  currents,  which  negatively 
affects  power  and  endurance.  This  suggests  that  drift  tolerant 
PCM  design 
light  of  high-density  MLC 
technologies.  
is  desirable 
•  We  explore  cross-layer  approaches  to  mitigate  drift 
effects  while  minimizing  PCM  power  and  endurance  overhead. 
Our  microarchitecture  techniques  use  bit-  flip  and  rotation 
in 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:27:46 UTC from IEEE Xplore.  Restrictions apply. 
978-1-4244-9233-6/11/$26.00 ©2011 IEEE197operations to convert drift-sensitive data patterns to drift-tolerant 
ones or highly drift-sensitive patterns to less drift-sensitive ones. 
In  addition,  we  propose  a  hybrid  SLC/MLC-PCM  design  that 
allows  MLC  to  operate  in  the  SLC  mode,  and  allows  a  mode 
switch  from  MLC  to  SLC  for  memory  regions  depending  on 
whether the memory references to the regions are drift-friendly or 
not. To alleviate the impact of temperature on resistance drift, we 
use  temperature-aware  page  allocation,  which  prefers  physical 
pages  that  have  low  temperatures  over  regions  that  exhibit  high 
temperatures  during  allocation.  We  show  that  these  techniques 
can cost-effectively mitigate deleterious drifting effects and yield 
an average of 87% reduction in error rate. 
The  rest  of  this  paper  is  organized  as  follows.  Section  II 
provides  a  brief  background  on  resistance  drift  and  MLC-PCM. 
Section  III  characterizes  the  trend  of  drift-induced  readout 
reliability when the margin is enlarged and quantifies the impact 
of  a  naïve  drift-hardening  design  on  PCM  programming  power 
and  endurance.  Section  IV  proposes  cross-layer  resistance  drift 
tolerate design and optimization techniques. Section V describes 
our experimental methodologies including machine configuration, 
simulation  framework  and  workloads.  Section  VI  presents  our 
evaluation  results.  Section  VII  discusses  related  work  and  we 
summarize our work in Section VIII.  
II. BACKGROUND: MULTI-LEVEL CELL PHASE CHANGE 
MEMORY (MLC-PCM) AND RESISTANCE DRIFT 
Multi-level Cell Phase Change Memory 
A. 
Phase  Change  Memory  is  a  class  of  non-volatile  memory 
that exploits the property of the phase change material (GST) to 
switch  between  amorphous  and  crystalline  states  with  the 
application  of  electrical-pulse  generated  heat.  PCM  devices  are 
typically  programmed  in  the  single  level  cell  (SLC)  mode, 
namely,  the  phase  change  material  is  programmed  either  to  the 
amorphous,  high  resistance  state  to  represent  a  binary  “0” 
(RESET) or the crystalline, low resistance state to represent a “1” 
(SET).  Typically,  there  is  2-3  orders  of  magnitude  resistance 
difference between the SET and RESET state [6], which provides 
the  opportunity  to  represent  more  states  within  a  cell.  This 
advantage  has  recently  been  exploited  by  a  number  of 
semiconductor  manufacturers  [7,  8,  9]  to  design  and  prototype 
MLC-PCM  due  to  its  high  density  and  low  per-bit  fabrication 
cost.  Instead  of  using  two  resistance  levels,  the  MLC-PCM 
devices  can  be  programmed  to  one  of  the  multiple  resistance 
levels (i.e. intermediate states) between the pre-defined minimal 
and  maximum  resistance.  In  the  intermediate  states,  the  active 
region  of  GST  material  is  partially  amorphized  and  its  fraction 
needs to be precisely controlled so that the desired resistance state 
can be obtained with sufficient accuracy. Therefore, MLC-PCM 
requires higher programming precision than its SLC counterpart. 
To  achieve  this,  MLC-PCM  normally  adopts  a  multilevel 
programming  algorithm  [9,  10]  shown  in  Figure  1.  The  cell  is 
first  programmed  to  its  lowest  resistance  state  by  using  a  long 
SET pulse, followed by a single RESET pulse to amorphize the 
entire  active  region  of 
the  phase  change  material.  This 
initialization sequence prepares the cell for the subsequent stair-
case up (SCU) sequence, which switches a fraction of the active 
region  of  the  GST  material  from  amorphous  state  to  crystalline 
state, depending on the target state. During the SCU procedure, a 
sequence  of  pulses  is  applied  on  the  programmed  cell  with  a 
verify step following each pulse. This SCU procedure stops once 
the desired resistance level is detected at the verify step. Note that 
the  resulting  resistance  value  for  a  logic  state  may  vary  across 
memory cells due to variations in fabrication processes. Therefore, 
for a multi-level cell, each logic state is represented by a range of 
resistance  values  rather  than  a  unique  number  and  a  sufficient 
resistance margin between any two adjacent states is required to 
unambiguously  distinguish  one  state 
from  another.  This 
resistance margin depends on the sensing current margin required 
by sensing circuits. 
Initializing Sequence
SCU Sequence
IRESET
Current pulses used to 
partially amorphized GST
ISET
y
f
i
r
e
V
y
f
i
r
e
V
y
f
i
r
e
V
y
f
i
r
e
V
e
d
u
t
i
l
p
m
A
e
s
u
P
l
Figure 1. An illustration of the MLC programming mechanism [10] 
B. 
Resistance Drift and its Impact on MLC 
After  a  PCM  cell  is  programmed,  its  resistance  value  can 
increase  with  time  and  the  increment  saturates  over  time.  This 
phenomenon  is  known  as  resistance  drift.  Resistance  drift  is 
believed  to  be  the  result  of  structural  relaxation  (SR)  physical 
phenomena, which is a thermally-activated, atomic rearrangement 
of the amorphous structure [11]. It has been observed [9, 12] that 
drift is much more significant on high resistance states (e.g. “00”, 
“01”, “10”), in which a volume of the phase change material is 
programmed 
the  fully 
amorphous state (e.g. “00”) or the partially amorphous states (e.g. 
“01”,  “10”)  in  the  MLCs,  whereas  the  low  resistance  state  (e.g. 
“11”) shows a nearly negligible dependence of resistance on time. 
The  increased  rate  of  resistance  exhibits  a  power-law  behavior 
with the time elapsed after programming, which can be described 
as:  
the  amorphous  states,  such  as 
to 
R R t
( /
=
0
t
)v
0
 (Eq-1), 
temperature, 
0R  is  the  resistance  at  time  0t
,  and  v  is  the  drift 
where 
coefficient.  The  drift  coefficient  v  has  a  wide  range  from  0  to 
0.12 [9, 12], depending on the resistance level and temperature. 
At  a  given 
increases 
monotonically  with  the  resistance  value  following  a  logarithmic 
law [12]. On the other hand, for a given programmed resistance 
level,  resistance  drift  is  accelerated  by  temperature  since  v  
increases with the elevated temperature [13]. Note that Eq-1 is a 
saturation  function  since  the  exponent,  v ,  is  smaller  than  1.  It 
suggests  that  resistance  drift  is  very  fast  at  the  beginning  and 
saturates with time, as shown in Figure 2-a.  
the  drift  coefficient 
in 
Resistance  drift  normally  doesn’t  cause  problems 
is  because 
the 
conventional  single-level  PCM  cells.  This 
resistance  of 
increases  while 
the  amorphous  state  slowly 
crystalline  state  remains  at  a  stable  resistance.  Therefore,  the 
resistance  difference  between  the  SET  and  RESET  becomes 
larger,  thereby  increasing  the  noise  margin.  However,  this 
resistance drift represents a reliability concern for MLC because 
of the much tighter margin in MLCs. Figure 2-b illustrates a case 
in  which  there  is  nearly  no  margin  between  adjacent  states  and 
shows  the  resistance  distribution  before  and  after  drift  for  an 
elapse of 1 minute. Note that the resistance distribution is wider 
for the high-resistance state (e.g. “00”) due to the variation in the 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:27:46 UTC from IEEE Xplore.  Restrictions apply. 
198volume size of amorphous regions after programming. As can be 
seen in Figure 2-b, resistance drift can significantly decrease the 
reliability  of  data  retrieval  by  shifting  the  resistance  of  a 
programmed cell out of its resistance range and cause overlap in 
adjacent  states.  As  shown  by  the  shadow  area  in  Figure  2-b,  a 
memory cell that was initially programmed into the intermediate 
state (e.g. “01”) may transit to a higher-resistance state (e.g. “00”) 
after  1  minute  if  there  is  no  margin  between  the  two  states. 
Subsequently,  the  memory  cell  may  be  read  as  being  in  an 
erroneous  state  by  the  sense  amplifier,  resulting  in  a  data 
corruption. In contrast to state “01”, state “10” is less susceptible 
to  drift.  This  is  because  the  resistance  value  of  “10”  is  smaller 
than that of “01” and therefore has a lower drift coefficient. On 
the  contrary,  resistance  drift  will  not  cause  either  state  “11”  or 
state “00” to be corrupted, since the former is a stable state and 
the resistance distribution of the latter will not overlap with other 
resistance partitions after drift. 
One  approach  to  tolerate  drift  in  MLC  is  to  increase  the 
resistance margin between any adjacent states to prevent the post-
drift  resistance  partitions  from  overlapping  with  pre-drift 
resistance partitions, as is illustrated in Figure 2-c. Note that the 
margin  between  any  two  adjacent  states  are  non-uniform  and  it 
increases exponentially (detailed in Table 2). For example, there 
is  approximately  5X  resistance  difference  between  any  adjacent 
states  (i.e.  Rstate00/  Rstate01=  Rstate01/  Rstate10=  Rstate10/  Rstate11=5)  in 
some recent published MLC-MPC prototypes [7, 9]. By using Eq-
1, it is estimated that 5X margin size allows data to be valid for 2 
years at room temperature. To achieve this, the resistance window 
bounded by the lowest resistance state and the highest resistance 
state needs to be enlarged to make room for the increased margin. 
Doing  so  improves  the  resilience  to  drift-induced  readout  error, 
but  at  the  cost  of  consuming  more  programming  power  and 
degraded  cell  endurance  due  to  exposing  all  PCM  cells  to  a 
higher programming current (discussed in Section III.B). On the 
contrary, if a smaller margin size, such as 2X (i.e. Rstate00/ Rstate01= 
Rstate01/  Rstate10=  Rstate10/  Rstate11=2)  is  employed,  the  data  in  MLC 
become invalid after only 1 hour at room temperature. At a high 
temperature environment, the drift-induced resistance increase is 
more significant. 
Log scale
5
4
3
2
t
f
i
r
D
r
e
t
f
a
e
c
n
a
t
s
i
s
e
R
d
e
z
i
l
a
m
r
o
N
1
1
c
e
s
0
1.9
1.5
1.78
r
h
1
1.4
1.2
1.09
i
n
m
1
Resistance Drift after 1 minute
 nearly no margin
Erroneous readout of data
“11”
“10”
“01”
“00”
State"00"
2.5
1.8
1.25
y
a
d
1
Time
(a)
State"01"
4.0
3.3
State"10"
4.8
2.1
1.34
h
t
n
o
m
1
2.4
1.41
r
a
e
y
1
2.6
1.48
r
a
e
y
0
1
s “11”
l
l
“10”
“01”
Increased margin
“00”
Less drift for state “10” compared 
(b)
to “01”, lower error rate
Figure 2. (a) Resistance drift of a PCM device over time (b) Readout reliability issue due to resistance drift (c) Addressing read reliability via increasing margin 
(t=1minute)
(t=0)
Initial resistance 
Resistance after drift 
Large resistance window
(c)
Resistance 