0
Cerber
Locky
1,000
2,000
Inflow amount per
3,000
4,000
0
4
2
6
Inflow amount per
8
likely ransom address (USD)
likely ransom address (BTC)
Fig. 6: Distribution of likely ransom payments.
denominated in either US Dollars (left) or Bitcoin (right). In
particular, 50% of all Cerber’s ransom payments comes from
likely ransom addresses that receive at least $838 worth of
bitcoins. By contrast, 50% of all Locky’s ransom payments
are from likely ransom addresses that receive at least $1,715
worth of bitcoins. Overall, both charts suggest that a potential
Locky victim probably pays a higher ransom than a potential
Cerber victim. Note that the distribution of Locky’s bitcoin
inﬂow amounts is step-like, as Locky’s ransom amounts are
known to be increments of 0.5 bitcoins.
D. Payment Timing
For each likely ransom address, the inﬂow’s timestamp may
reveal when victims likely paid. Most of the likely ransom
addresses are each associated with only one inﬂow, which
suggests that a potential victim paid the ransom in a single
transaction. In fact, 95.4% of Cerber’s ransom payments and
98.3% of Locky’s ransom payments were paid for in this way.
We extract the timestamp from every single inﬂow transaction.
The remaining likely ransom addresses are each associated
with two or more inﬂows, likely because a victim did not fully
pay the ransom as he had not accounted for the transaction
fees; in this case, we extract the timestamp from the earliest
inﬂow per likely ransom address.
These timestamps show when victims potentially paid the
ransom, in terms of days of the week and hours of the day.
We show the distribution in Figure 7. For instance, 22.2% of
Locky’s ransome payments comes from inﬂows on Thursdays.
Also, 9.0% of Cerber’s ransom payments are made around
08:00 hours UTC. Of particular note is that a single peak hour
contributed most to Cerber’s ransom payments, while there
are two such peak hours for Locky. One possible explanation
is that Cerber’s paying victims were more concentrated in
a certain geographic region (hence the same timezone) than
Locky’s paying victims, although we cannot validate this
absent ground-truth. Furthermore, the least amounts of inﬂows
for both Cerber and Locky are observed around 23:00 hours
UTC. It is likely that most of the paying victims were located
in Asia based on the diurnal pattern [34].
E. Characterizing potential Cash Out
In addition to inﬂows, we examine the outﬂows from
ransomware clusters. An outﬂow is a transaction that transfers
bitcoins from a wallet address of a ransomware cluster to
an address of a non-ransomware cluster. Using Figure 1 as
an illustration, Address 4 sends an outﬂow transaction to an
exchange wallet address, while Address 11 sends an outﬂow to
626
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:36:14 UTC from IEEE Xplore.  Restrictions apply. 
10%
8%
6%
4%
2%
0%
0
Sun
Cerber
Locky
20
10
UTC Hour
t
n
u
o
m
a
w
o
l
f
n
i
e
v
i
t
a
e
R
l
25%
20%
15%
10%
5%
0%
Mon
Wed
Fri
Day of Week
Fig. 7: Distribution of inﬂow amounts over a week (left) and
over a day (right) of ransom payments.
an unknown cluster. We observe an outﬂow when, for instance,
a ransomware operator moves bitcoins from her own cluster
to a Bitcoin exchange, presumably to convert her bitcoins
to ﬁat currency (i.e., US Dollars). Also, an outﬂow occurs
when an operator moves bitcoins into a mixer (recall from
Section II). After mixing, the operator will presumably transfer
her bitcoins from the mixer to an exchange for conversion
to ﬁat currency, although we are unable to track bitcoins
that have entered a mixer’s cluster. In general, whether the
operator sends the bitcoins from the ransomware’s cluster to
an exchange, a mixer, or some unknown clusters, we cannot
guarantee if and when the operator cashes out. Nonetheless,
outﬂows mark the beginning of a process that could potentially
lead to exchange for ﬁat currency.
To study outﬂows, we ﬁrst compare the timings of outﬂows
against inﬂows. This comparison allows us to estimate the
duration in which ransomware operators are holding bitcoins
before potentially cashing out. To this end, we trace how
bitcoins ﬂow from likely ransom addresses (i.e. inﬂows that
satisfy Filter 1) to outﬂow transactions. The bitcoins could
ﬂow directly from a likely ransom address to an outﬂow
transaction. Alternatively, bitcoins may go through interme-
diate transactions, ﬂowing from one wallet address of the
ransomware’s cluster to another wallet address of the same
cluster, before the bitcoins reach an outﬂow transaction. In
either case, we extract the timestamp when the likely ransom
address ﬁrst receives bitcoins, and also the earliest timestamp
among the outﬂows (as the bitcoins may be split into multiple
outﬂows). In the median case, the bitcoins remained in Wan-
naCry’s cluster for 79.8 days, while for Cerber and Locky, the
median holding durations for Cerber and Locky are 5.3 and
1.6 days respectively.
Another insight we can gain from outﬂows is how ran-
somware operators potentially cash out the ransom bitcoins.
For each outﬂow transaction of a given ransomware family,
we look at the output wallet address(es), which, by deﬁnition,
should be in non-ransomware clusters. Using Chainalysis’
API, we obtain the real-world identities of these clusters, such
as exchanges, mixers, or “Unknown.” For each ransomware
family, we identify top three real-world entities that receive
the most US Dollars from the ransomware’s cluster. Across the
ﬁve ransomware families, the top entities overlap and include
BTC-e, CoinOne, and LocalBitcoins (all exchanges), along
with BitMixer and Bitcoin Fog (both mixers). We show their
distribution in Figure 8. Real-world entities that are not a part
BTC-e.com
BitMixer.io
Bitcoin Fog
CoinOne.co.kr
.
LocalBitcoins.com
.
.
Misc
Unknown
WannaCry
Locky
CryptoDefense
CryptXXX
Cerber
0%
10%
20%
30%
40%
50%
60%
Fig. 8: Real-world entities that received bitcoins from ran-
somware’s outﬂows.
Percent of bitcoin outflow for a given family
of the top ones are labelled as “Misc.”
Compared with Figure 4, Figure 8 shows a different set
of known exchanges. In particular, BTC-e (whose opera-
tor was arrestes and which is now defunct) is the biggest
known exchange responsible for the outﬂows of Locky and
CryptoDefense; $3,223,015 of Locky’s outﬂows entered BTC-
e’s cluster. If law enforcement agencies were able to obtain
BTC-e’s internal transaction records (which presumably map
Bitcoin wallet addresses to banking information), they could
potentially trace 41.0% of Locky’s outﬂow values to real-world
entities. A further difference is the use of Bitcoin mixers,
which we did not detect in source clusters for the inﬂows.
For example, $541,670 (6.8% of Cerber’s total outﬂows) was
sent from Cerber’s cluster to BitMixer.
VI. IMPACT ON INFECTED VICTIMS
In the previous two sections, we use the blockchain to
characterize the behaviors of victims who likely paid the ran-
som. However, it is difﬁcult to infer the behaviors of victims
who did not pay, as the blockchain only records activities
of payments. We propose and implement a sinkholing-based
method to intercept the communication between an infected
machine and the ransomware’s command-and-control (C2)
server. Using Cerber as a case study, this section discusses how
we use our method to gather statistics on victims infected with
Cerber, along with the insights we draw from this data. We
choose to focus on one ransomware family, Cerber, because of
the manual effort required to reverse engineer how the malware
communicates with the ransomware operators.
We start by reverse engineering Cerber’s telemetry protocol.
Using this knowledge, we then intercept Cerber victims’
telemetry trafﬁc, along with what this trafﬁc reveals about
the impact on victims — for instance, how many victims are
infected and how long it takes for the encryption process to
complete.
A. Reverse Engineering Network Trafﬁc
We start our reverse engineering process by executing two
binaries which our algorithm classiﬁed as Cerber on a bare
metal machine with Windows XP installed. We choose not
to use a VM to reduce the likelihood that the ransomware
samples might behave differently from those in the wild. The
host is not connected to the Internet. We capture all packets
that the machine sends out with TCPDump. Inside the host’s
627
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:36:14 UTC from IEEE Xplore.  Restrictions apply. 
ﬁle system, we place documents that Cerber is known to
encrypt [11]. We also instrument the ﬁle system to log when
ﬁles are changed, so that we can track Cerber’s process of
encryption.
In each of the three executions of the same binary,
it
consistently broadcasts a UDP packets to four different /24
subnets at port 6892. For each of the subnets, the binary sends
three types of packets. Before the binary encrypts any ﬁles, it
sends out the ﬁrst type of UDP packets, which we shall call
Packets A. Each of these packets include a ﬁve-byte identiﬁer
in the payload, which is referred to as the Partner ID by an
analysis report [11]. This ID is the constant when re-executing
the same binary, but it changes with a different binary. Within
ﬁve seconds of broadcasting Packets A to four subnets, the
binary starts encrypting our ﬁles, followed by the broadcast
of the second type of packets, which we call Packets B. The
payload of these packets includes the Partner ID and a 12-byte
identiﬁer that changes across execution of the same binary,
which the report refers to as the Machine ID [11]. Within ﬁve
seconds of the termination of encryption, the binary broadcasts
the third type of packets, which we call Packets C, whose
payload includes the Machine ID. Afterwards, the ransom note
is displayed, from which we extract the ransom wallet address.
Finally, we re-image the host’s hard disk to prepare for the next
execution.
B. Analyzing Cerber’s Packets in the Wild
Broadcasting telemetry packets across different subnets ef-
fectively hides the IP address(es) of Cerber’s infrastructure,
but it has also created an opportunity for us to observe these
packets. By buying an IP address within the subnets, we can
capture the telemetry packets and analyze the behaviors of
Cerber binaries in the wild.
First, we need to determine what IP address to purchase.
In the last two weeks of January 2017, we executed 1,256
binaries that we classify as Cerber in sandboxes. These bi-
naries contacted 158 /24 subnets in total. We compute the
number of packets that each subnet was sent. The top two
subnets, based in Norway and Greece, were sent 111,361 and
110,595 packets respectively. Neither responded to our request
to purchase an IP address. The third subnet was sent 46,336
packets. It belongs to a Russian hosting provider, from which
we purchased a server at an IP address in the subnet and ran
TCPDump on the server between February 2 and 20, 2017.
Overall distribution of infection:
In total, we received
88,240 UDP packets across 1,512 IP addresses. Of these
packets, 92.0% are Packets A, 4.7% are Packets B, and 3.2%
are Packets C. The relative under-representation of Packets B
and C could be due to the loss of UDP packets, as the prior
broadcast of Packets A could have ﬁlled up the queues along
the route, or it could be due to the duplication of Packets
A. Even though the Cerber binary in our own environment
sent out the same number of Packets A, B, and C, the exact
behavior of the ransomware in the wild could be different —
possibly due to a different version.
Republic of Korea
Taiwan
United States
China
Germany
Canada
India
Poland
Malaysia
Spain
Others
0
100
business
college
hosting
residential
others
400
200
300
Fig. 9: Number of infected IP addresses across countries and
ISP types.
Number of distinct IP addresses
The 1,512 IP addresses offer a lower-bound on the number
of infected hosts. There are two reasons why this number
is a lower-bound. First, the packets we captured came from
Cerber binaries that sent telemetry data to our choice of the
subnet. We cannot guarantee that all binaries in the wild would
broadcast to the subnet. Thus, an unknown number of infected
hosts are likely to be missing from our data. Second, multiple
infected hosts could be behind a NAT or may be assigned
the same IP address at different times.7 As such, we could be
underestimating the scale of infection.
infected hosts:
We show the geographic distribution of infected IP ad-
dresses, along with the type of ISP for each IP address, in
Figure 9. We determine the country and ISP type of each IP
address using Maxmind [35]. As shown in the chart, South
Korea has the most number of infected IP addresses that sent
us the telemetry packets; 22.6% of all infected IP addresses are
from the country. IP addresses from residential ISPs contribute
to 74.5% of the infected IP addresses. ISPs that are labelled
as “hosting,” which are hosting service providers, account for
8.5% of the IP addresses.
Distribution of
To distinguish between
different infected hosts with the same IP addresses, we use
the Machine IDs extracted from Packets B and C. Only 583
IP addresses (38.6%) reported Machine IDs.8 Among these IP
addresses, 412 of them (70.7%) were associated with exactly
one Machine ID, and 132 of them (22.6%) are each associated
with 2 to 10 Machine IDs. For the 412 IP addresses, residential
IP addresses account for 80.3% while hosting services account
for 9.0%. For the 132 IP addresses, 59.1% are residential and
23.5% are hosting services. At the tail end, one IP address
reported 1,162 different Machine IDs. This IP address belongs
to a major hosting service in the US (labelled as “hosting”
in Figure 9). On average, we received Packet B from this
hosting IP address with a new Machine ID every 22.6 minutes.
We are not sure if telemetry packets from this IP address are
from real victims or synthetic ones. In general, we do not
remove IP addresses from our analysis even if they appear
to be coming from synthetic victims. Absent ground truth,
we cannot distinguish IP addresses from sandboxes or from,
for instance, a commercial VPN provider that uses hosting
7It is unlikely that the same host is infected multiple times; we tried
executing the same Cerber binary the second time in our VM (Section VI-A),
but the repeated execution did not result in more telemetry packets.
8There are 25 Machine IDs, such that each of them was reported from two
IP addresses. Together, there are 18 such IP addresses. We suspect the infected
hosts were either mobile clients, or they experienced DHCP reassignment.
628
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:36:14 UTC from IEEE Xplore.  Restrictions apply. 
s
e
s
s
e
r
d
d
a
P
I
f
o
r
e
b
m
u
N
250
200
150
100
50
0
D
i
I
e
n
h
c
a
M
e
n
o
h
t
i
f
o
n
o
i
t
c
a
r
f
e
v