connect_timeout = 10000    
                                   # Timeout value in milliseconds before giving up to connect to backend.    
                                   # Default is 10000 ms (10 second). Flaky network user may want to increase    
                                   # the value. 0 means no timeout.    
                                   # Note that this value is not only used for health check,    
                                   # but also for ordinary conection to backend.    
#------------------------------------------------------------------------------    
# FAILOVER AND FAILBACK    
#------------------------------------------------------------------------------    
failover_on_backend_error = off    
                                   # Initiates failover when reading/writing to the    
                                   # backend communication socket fails    
                                   # If set to off, pgpool will report an    
                                   # error and disconnect the session.    
relcache_expire = 0  # 建议结构变更后, 设置为1,然后reload然后再改回来. 当然也可以直接设置为一个时间        
                                   # Life time of relation cache in seconds.    
                                   # 0 means no cache expiration(the default).    
                                   # The relation cache is used for cache the    
                                   # query result against PostgreSQL system    
                                   # catalog to obtain various information    
                                   # including table structures or if it's a    
                                   # temporary table or not. The cache is    
                                   # maintained in a pgpool child local memory    
                                   # and being kept as long as it survives.    
                                   # If someone modify the table by using    
                                   # ALTER TABLE or some such, the relcache is    
                                   # not consistent anymore.    
                                   # For this purpose, cache_expiration    
                                   # controls the life time of the cache.    
relcache_size = 8192    
                                   # Number of relation cache    
                                   # entry. If you see frequently:    
                                   # "pool_search_relcache: cache replacement happend"    
                                   # in the pgpool log, you might want to increate this number.    
```    
2、配置 pool_passwd 密码文件, 这个密码文件是用户通过PGPOOL连接数据库时使用的, 你可以理解为pgpool支持了pg的认证协议.    
```    
cd /etc/pgpool-II-12    
用法    
pg_md5 --md5auth --username=username password    
生成digoa, nobody密码, 会自动写入pool_passwd文件    
pg_md5 --md5auth --username=digoal "xxxxxxx"    
pg_md5 --md5auth --username=nobody "xxxxxxx"    
```    
自动生成pool_passwd文件    
```    
cd /etc/pgpool-II-12    
# cat pool_passwd     
digoal:md54dd55116da69d3d03bf2e3a1470564f9    
nobody:md54240e76623e2511d607f431043a5d1c1    
pool_passwd这个文件的内容也可以直接从数据库的pg_shadow中拿到, 手工生成  
select * from pg_shadow; -- usename, passwd字段  
```    
配置pgpool_hba文件, 因为pgpool代理了认证    
```    
cd /etc/pgpool-II-12    
cp pool_hba.conf.sample pool_hba.conf    
vi pool_hba.conf    
host all all 0.0.0.0/0 md5    
```    
3、配置pcp管理密码文件, 这个是用来管理pgpool的密码和用户, 不是数据库里面的用户和密码.    
```    
cd /etc/pgpool-II-12    
# pg_md5 abc  # 例如密码是abc    
900150983cd24fb0d6963f7d28e17f72    
cp pcp.conf.sample pcp.conf    
vi pcp.conf    
# USERID:MD5PASSWD    
manage:900150983cd24fb0d6963f7d28e17f72    
```    
表示使用manage用户来管理pcp    
例如, 使用pcp_node_info查询后端数据库状态        
```    
[root@iZ2ze97u0ftapnfqlkhtr1Z pgpool-II-12]# pcp_node_info -U manage -h /tmp -p 9898 -n 1 -v    
Password: 输入密码    
Hostname               : 127.0.0.1    
Port                   : 8002    
Status                 : 2    
Weight                 : 0.500000    
Status Name            : up    
Role                   : standby    
Replication Delay      : 0    
Replication State      :     
Replication Sync State :     
Last Status Change     : 2020-02-29 00:20:29    
# pcp_node_info -U manage -h /tmp -p 9898 -v -n 0  
Password:   
Hostname               : 127.0.0.1  
Port                   : 3389  
Status                 : 2  
Weight                 : 0.500000  
Status Name            : up  
Role                   : primary  
Replication Delay      : 0  
Replication State      :   
Replication Sync State :   
Last Status Change     : 2020-02-29 00:20:29  
```    
4、启动pgpool    
```    
cd /etc/pgpool-II-12    
pgpool -f ./pgpool.conf -a ./pool_hba.conf -F ./pcp.conf    
```    
5、查看pgpool日志    
```    
看pool的配置, 这里采用了syslog, 所以在这看日志    
less /var/log/messages     
```    
6、pcp管理pgpool    
```    
# pcp_    
pcp_attach_node    pcp_node_count     pcp_pool_status    pcp_proc_info      pcp_recovery_node  pcp_watchdog_info      
pcp_detach_node    pcp_node_info      pcp_proc_count     pcp_promote_node   pcp_stop_pgpool     
```    
7、如何停止、重新加载pgpool config    
```    
# pgpool --help    
pgpool-II version 4.1.1 (karasukiboshi),    
  A generic connection pool/replication/load balance server for PostgreSQL    
Usage:    
  pgpool [ -c] [ -f CONFIG_FILE ] [ -F PCP_CONFIG_FILE ] [ -a HBA_CONFIG_FILE ]    
         [ -n ] [ -D ] [ -d ]    
  pgpool [ -f CONFIG_FILE ] [ -F PCP_CONFIG_FILE ] [ -a HBA_CONFIG_FILE ]    
         [ -m SHUTDOWN-MODE ] stop    
  pgpool [ -f CONFIG_FILE ] [ -F PCP_CONFIG_FILE ] [ -a HBA_CONFIG_FILE ] reload    
Common options:    
  -a, --hba-file=HBA_CONFIG_FILE    
                      Set the path to the pool_hba.conf configuration file    
                      (default: /etc/pgpool-II-12/pool_hba.conf)    
  -f, --config-file=CONFIG_FILE    
                      Set the path to the pgpool.conf configuration file    
                      (default: /etc/pgpool-II-12/pgpool.conf)    
  -k, --key-file=KEY_FILE    
                      Set the path to the pgpool key file    
                      (default: /root/.pgpoolkey)    
                      can be over ridden by PGPOOLKEYFILE environment variable    
  -F, --pcp-file=PCP_CONFIG_FILE    
                      Set the path to the pcp.conf configuration file    
                      (default: /etc/pgpool-II-12/pcp.conf)    
  -h, --help          Print this help    
Start options:    
  -C, --clear-oidmaps Clear query cache oidmaps when memqcache_method is memcached    
                      (If shmem, discards whenever pgpool starts.)    
  -n, --dont-detach   Don't run in daemon mode, does not detach control tty    
  -x, --debug-assertions   Turns on various assertion checks, This is a debugging aid    
  -D, --discard-status Discard pgpool_status file and do not restore previous status    
  -d, --debug         Debug mode    
Stop options:    
  -m, --mode=SHUTDOWN-MODE    
                      Can be "smart", "fast", or "immediate"    
Shutdown modes are:    
  smart       quit after all clients have disconnected    
  fast        quit directly, with proper shutdown    
  immediate   the same mode as fast    
```    
例如    
```    
pgpool -f ./pgpool.conf -m fast stop     
```    
8、监听如下    
master: 3389    
slave: 8002    
pool: 8001    
pcp管理: 9898    
9、通过 pgpool 连接数据库    
```    
psql -h 127.0.0.1 -p 8001 -U digoal postgres    
psql (12.2)    
Type "help" for help.    
postgres=>     
```    
如何得知是否启用负载均衡:     
连接, 并查询pg_is_in_recovery()的结果, 然后断开, 继续连接, 查询pg_is_in_recovery()的结果.    
你会发现交替返回false, true, 说明是交替将请求发送给了主库, 从库.     
### pgpool的延迟和健康检测说明    
1、pgpool 不会将sql请求发送给wal replay(回放延迟)延迟大于设置值(字节数)的standby.    
当standby catchup后, sql可以继续发给这个standby.    
2、如何判断wal 回放延迟?     
连接主库查询当前数据库wal写入位置lsn1, 连接从库查询当前wal replay位置lsn2, 对比lsn1,lsn2差了多少字节.    
3、pgpool 可以检测后端的健康状态, 如果发现不健康, sql请求不会路由到这个节点.    
### pgpool性能以及增加的延迟  
16c 64g环境:     
直连主节点:     
```  
transaction type:   
scaling factor: 10  
query mode: prepared  
number of clients: 16  
number of threads: 16  
duration: 120 s  
number of transactions actually processed: 37588141  
latency average = 0.051 ms  
latency stddev = 0.008 ms  
tps = 313232.127855 (including connections establishing)  
tps = 313250.620228 (excluding connections establishing)  
statement latencies in milliseconds:  
         0.001  \set aid random(1, 100000 * :scale)  
         0.051  SELECT abalance FROM pgbench_accounts WHERE aid = :aid;  
```  
通过pgpool连主、从, 读写分离. 增加0.12毫秒延迟.       
```  
transaction type:   
scaling factor: 10  
query mode: prepared  
number of clients: 16  
number of threads: 16  
duration: 120 s  
number of transactions actually processed: 11132717  
latency average = 0.172 ms  
latency stddev = 0.107 ms  
tps = 92772.153552 (including connections establishing)  
tps = 92780.110416 (excluding connections establishing)  
statement latencies in milliseconds:  
         0.001  \set aid random(1, 100000 * :scale)  
         0.173  SELECT abalance FROM pgbench_accounts WHERE aid = :aid;  
```  
## 常见问题 FAQ  
如果节点down了, 并且pgpool中的状态被设置为down后, 不会自己变成up, 必须要通过pcp_attach_node手工修改node(从0开始编号)状态或者pgpool重启并使用D参数discard状态.  
否则会一直处于down的状态. 引起问题.    
```  
cat /tmp/pgpool_status  
down  
up  
```  
以上说明0号节点down了.   如果是primary节点, 在日志中可能会看到这种报错:  
```
Apr 16 17:08:35 mlalipg01 pgpool[15105]: [88-1] 2020-04-16 17:08:35: pid 15105: FATAL:  Backend throw an error message
Apr 16 17:08:35 mlalipg01 pgpool[15105]: [88-2] 2020-04-16 17:08:35: pid 15105: DETAIL:  Exiting current session because of an error from backend
Apr 16 17:08:35 mlalipg01 pgpool[15105]: [88-3] 2020-04-16 17:08:35: pid 15105: HINT:  BACKEND Error: "recovery is in progress"
Apr 16 17:08:35 mlalipg01 pgpool[15105]: [88-4] 2020-04-16 17:08:35: pid 15105: CONTEXT:  while checking replication time lag
Apr 16 17:08:35 mlalipg01 pgpool[14824]: [89-1] 2020-04-16 17:08:35: pid 14824: LOG:  worker child process with pid: 15105 exits with status 256
Apr 16 17:08:35 mlalipg01 pgpool[14824]: [90-1] 2020-04-16 17:08:35: pid 14824: LOG:  fork a new worker child process with pid: 15109
```
https://www.pgpool.net/docs/latest/en/html/runtime-config-failover.html  
While a failover could happen when a failure occurs, it is possible to trigger it by hand(pcp_detach_node). This is called a switch over. For instance, switching over a PostgreSQL to take its backup would be possible. Note that switching over just sets the status to down and never bringing PostgreSQL down. A switch over can be triggered by using pcp_detach_node command.  
```  
  -D, --discard-status Discard pgpool_status file and do not restore previous status  
```  
A PostgreSQL node detached by failover or switch over will never return to the previous state (attached state). Restarting Pgpool-II with -D option or running pcp_attach_node makes it to the attached state. It is recommended to confirm the replication_state of SHOW POOL NODES is "streaming" before doing that. The state indicates that the standby server is properly connected to the primary server through streaming replication and both databases are in sync.  
## 参考    
[《PostgreSQL 12 preview - recovery.conf 合并入 postgresql.conf后的HOT STANDBY配置(standby.signal , recovery.signal)》](../201905/20190503_05.md)      
https://www.pgpool.net/docs/latest/en/html/example-aurora.html    
[《fio io测试阿里云ecs 本地ssd, essd性能 - 1》](../201912/20191228_02.md)      
[《PostgreSQL 12 on 阿里云ecs 本地ssd VS essd pl3性能 - 含fio,fsync test,pgbench test，优缺点、云盘PG内核优化建议》](../201912/20191228_04.md)      
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")