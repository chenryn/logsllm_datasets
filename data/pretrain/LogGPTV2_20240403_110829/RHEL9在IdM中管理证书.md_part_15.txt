:::
::: orderedlist
1.  获取管理员凭证：
    ``` literallayout
    # kinit admin
    ```
2.  输入映射规则以及映射规则基于的匹配规则。将提供的整个证书与 IdM 中的
    AD 用户条目的用户 ID 覆盖中所存储的证书进行比较，仅允许
    `AD.EXAMPLE.COM`{.literal} 域的 `AD-ROOT-CA`{.literal}
    签发的证书进行验证：
    ``` literallayout
    # ipa certmaprule-add simpleADrule --matchrule 'CN=AD-ROOT-CA,DC=ad,DC=example,DC=com' --maprule '(userCertificate;binary={cert!bin})' --domain ad.example.com
    -------------------------------------------------------
    Added Certificate Identity Mapping Rule "simpleADrule"
    -------------------------------------------------------
      Rule name: simpleADrule
      Mapping rule: (userCertificate;binary={cert!bin})
      Matching rule: CN=AD-ROOT-CA,DC=ad,DC=example,DC=com
      Domain name: ad.example.com
      Enabled: TRUE
    ```
3.  系统安全服务守护进程(SSSD)定期重新读取证书映射规则。要强制立即载入新创建的规则，重启
    SSSD：
    ``` literallayout
    # systemctl restart sssd
    ```
:::
:::
::: section
::: titlepage
## []{#conf-certmap-idm_managing-certificates-in-idm.html#proc-add-certmapdata-no-cert-no-map-webui_conf-certmap-ad-no-cert-no-map}在 IdM Web UI 中为 AD 用户 ID 覆盖添加证书 {.title}
:::
::: orderedlist
1.  导航到 `Identity`{.literal} → `ID Views`{.literal} →
    `Default Trust View`{.literal}。
2.  点击 `Add`{.literal}。
    ::: figure
    []{#conf-certmap-idm_managing-certificates-in-idm.html#conf-certmap-ad-no-cert-no-map-new-useridoverride-add}
    **图 9.11. 在 IdM Web UI 中添加新用户 ID 覆盖**
    ::: figure-contents
    ::: mediaobject
    ![IdM Web UI 的屏幕截图显示了身份选项卡中的\"ID
    Views\"页面。右侧的添加按钮会被突出显示。](images/new-useridoverride-add.png)
    :::
    :::
    :::
3.  在 `User to override`{.literal} 字段中，输入
    `PI:EMAIL`{.literal}。
4.  将 `ad_user`{.literal} 的证书复制并粘贴到 `Certificate`{.literal}
    字段中。
    ::: figure
    []{#conf-certmap-idm_managing-certificates-in-idm.html#conf-certmap-ad-no-cert-no-map-useridoverride-add-details}
    **图 9.12. 为 AD 用户配置用户 ID 覆盖**
    ::: figure-contents
    ::: mediaobject
    ![使用以下字段显示\"添加用户 ID
    override\"弹出窗口的截屏：用户要覆盖（需要此项）- User login -
    GECOS - UID - GID -
    证书（已使用证书的纯文本版本填充）。](images/useridoverride-add-details.png)
    :::
    :::
    :::
5.  点击 `Add`{.literal}。
:::
::: itemizedlist
**验证步骤**
-   验证用户和证书是否已链接：
    ::: itemizedlist
    -   使用 `sss_cache`{.literal} 工具使 SSSD 缓存中的
        `PI:EMAIL`{.literal} 记录失效，并强制重新载入
        `PI:EMAIL`{.literal} 信息：
        ``` literallayout
        # sss_cache -u PI:EMAIL
        ```
    -   使用包含 AD 用户证书的文件名运行 `ipa certmap-match`{.literal}
        命令：
        ``` literallayout
        # ipa certmap-match ad_user_cert.pem
        --------------
        1 user matched
        --------------
         Domain: AD.EXAMPLE.COM
         User logins: PI:EMAIL
        ----------------------------
        Number of entries returned 1
        ----------------------------
        ```
    :::
:::
输出确认，您具有的证书验证数据被添加到
`PI:EMAIL`{.literal}，并存在在 [Adding a certificate
mapping rule if the AD user entry contains no certificate or mapping
data](#conf-certmap-idm_managing-certificates-in-idm.html#conf-certmap-ad-no-cert-no-map_conf-certmap-for-ad-map "如果 AD 用户条目不包含证书或映射数据，则配置证书映射"){.link}
中定义的相应的映射规则。这意味着您可以使用与定义的证书映射数据匹配的证书以
`PI:EMAIL`{.literal} 进行身份验证。
:::
::: section
::: titlepage
## []{#conf-certmap-idm_managing-certificates-in-idm.html#proc-add-certmapdata-no-cert-no-map-cli_conf-certmap-ad-no-cert-no-map}在 IdM CLI 中为 AD 用户 ID 覆盖添加证书 {.title}
:::
::: orderedlist
**其它资源**
1.  获取管理员凭证：
    ``` literallayout
    # kinit admin
    ```
2.  将证书 blob 保存在名为 `CERT`{.literal} 的新变量中：
    ``` literallayout
    # CERT=`cat ad_user_cert.pem | tail -n +2| head -n -1 | tr -d '\r\n'\`
    ```
3.  使用 `ipa idoverrideuser-add-cert`{.literal} 命令将
    `PI:EMAIL`{.literal} 的证书添加到用户帐户中：
    ``` literallayout
    # ipa idoverrideuser-add-cert PI:EMAIL --certificate $CERT
    ```
:::
::: itemizedlist
**验证步骤**
-   验证用户和证书是否已链接：
    ::: itemizedlist
    -   使用 `sss_cache`{.literal} 工具使 SSSD 缓存中的
        `PI:EMAIL`{.literal} 记录失效，并强制重新载入
        `PI:EMAIL`{.literal} 信息：
        ``` literallayout
        # sss_cache -u PI:EMAIL
        ```
    -   使用包含 AD 用户证书的文件名运行 `ipa certmap-match`{.literal}
        命令：
        ``` literallayout
        # ipa certmap-match ad_user_cert.pem
        --------------
        1 user matched
        --------------
         Domain: AD.EXAMPLE.COM
         User logins: PI:EMAIL
        ----------------------------
        Number of entries returned 1
        ----------------------------
        ```
    :::
:::
输出确认，您具有的证书验证数据被添加到
`PI:EMAIL`{.literal}，并存在在 [Adding a certificate
mapping rule if the AD user entry contains no certificate or mapping
data](#conf-certmap-idm_managing-certificates-in-idm.html#conf-certmap-ad-no-cert-no-map_conf-certmap-for-ad-map "如果 AD 用户条目不包含证书或映射数据，则配置证书映射"){.link}
中定义的相应的映射规则。这意味着您可以使用与定义的证书映射数据匹配的证书以
`PI:EMAIL`{.literal} 进行身份验证。
:::
:::
::: section
::: titlepage
# []{#conf-certmap-idm_managing-certificates-in-idm.html#sc-cert-mapping-rule-examples_conf-certmap-for-ad-map}将多个身份映射规则合并到一个 {.title}
:::
::: title
**其它资源**
:::
要将多个身份映射规则合并成一个组合规则，在单个映射规则前面使用
`|`{.literal} （or）字符，并使用 `()`{.literal} 分隔它们，例如：
::: title
**证书映射过滤器示例 1**
:::
``` literallayout
$ ipa certmaprule-add ad_cert_for_ipa_and_ad_users \ --maprule='(|(ipacertmapdata=X509:{issuer_dn!nss_x500}{subject_dn!nss_x500})(altSecurityIdentities=X509:{issuer_dn!ad_x500}{subject_dn!ad_x500}))' \ --matchrule='CN=AD-ROOT-CA,DC=ad,DC=example,DC=com' \ --domain=ad.example.com
```
在上例中，\-- `maprule`{.literal} 选项中的过滤器定义包括以下条件：
::: itemizedlist
-   `ipacertmapdata=X509:{issuer_dn!nss_x500}{subject_dn!nss_x500}`{.literal}
    是一个过滤器，它将一个智能卡证书中的 subject 和 issuer 连接到一个
    IdM 用户账户中的 `ipacertmapdata`{.literal} 属性的值，如 [Adding a
    certificate mapping rule in
    IdM](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/configuring_and_managing_identity_management/conf-certmap-idm_configuring-and-managing-idm#proc-add-maprule_conf-certmap-for-users-in-idm){.link}
    部分所述
-   `altSecurityIdentities=X509:{issuer_dn!ad_x500}{subject_dn!ad_x500}`{.literal}
    是一个过滤器，它将一个智能卡证书中的 subject 和 issuer 连接到一个 AD
    用户账户中的 `altSecurityIdentities`{.literal} 属性的值，如 [Adding
    a certificate mapping rule if the trusted AD domain is configured to
    map user
    certificates](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/configuring_and_managing_identity_management/conf-certmap-idm_configuring-and-managing-idm#adding_a_certificate_mapping_rule_if_the_trusted_ad_domain_is_configured_to_map_user_certificates){.link}
    所述
-   添加 `--domain=ad.example.com`{.literal}
    选项意味着，映射到指定证书的用户不仅在本地
    `idm.example.com`{.literal} 域中进行搜索，也在
    `ad.example.com`{.literal} 域中搜索
:::
在 `--maprule`{.literal} 选项中的过滤器定义接受逻辑操作符 `|`{.literal}
（or），以便您可以指定多个条件。在这种情况下，该规则会映射至少满足其中一个条件的所有用户帐户。
::: title
**证书映射过滤器示例 2**
:::
``` literallayout
$ ipa certmaprule-add ipa_cert_for_ad_users \
  --maprule='(|(userCertificate;binary={cert!bin})(ipacertmapdata=X509:{issuer_dn!nss_x500}{subject_dn!nss_x500})(altSecurityIdentities=X509:{issuer_dn!ad_x500}{subject_dn!ad_x500}))' \
  --matchrule='CN=Certificate Authority,O=REALM.EXAMPLE.COM' \
  --domain=idm.example.com --domain=ad.example.com
```
在上例中，\-- `maprule`{.literal} 选项中的过滤器定义包括以下条件：
::: itemizedlist
-   `userCertificate;binary={cert!bin}`{.literal}
    是一个返回包括整个证书的用户条目的过滤器。对于 AD 用户，[如果 AD
    用户条目不包含证书或映射数据，请参阅添加证书映射规则](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/configuring_and_managing_identity_management/conf-certmap-idm_configuring-and-managing-idm#adding_a_certificate_mapping_rule_if_the_ad_user_entry_contains_no_certificate_or_mapping_data){.link}。
-   `ipacertmapdata=X509:{issuer_dn!nss_x500}{subject_dn!nss_x500}`{.literal}
    是一个过滤器，它将一个智能卡证书中的 subject 和 issuer 连接到一个
    IdM 用户账户中的 `ipacertmapdata`{.literal} 属性的值，如 [Adding a
    certificate mapping rule in
    IdM](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/configuring_and_managing_identity_management/conf-certmap-idm_configuring-and-managing-idm#proc-add-maprule_conf-certmap-for-users-in-idm){.link}
    部分所述。
-   `altSecurityIdentities=X509:{issuer_dn!ad_x500}{subject_dn!ad_x500}`{.literal}
    是一个过滤器，它将一个智能卡证书中的 subject 和 issuer 连接到一个 AD
    用户账户中的 `altSecurityIdentities`{.literal} 属性的值，如 [Adding
    a certificate mapping rule if the trusted AD domain is configured to
    map user
    certificates](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/configuring_and_managing_identity_management/conf-certmap-idm_configuring-and-managing-idm#adding_a_certificate_mapping_rule_if_the_trusted_ad_domain_is_configured_to_map_user_certificates){.link}
    所述。
:::
在 `--maprule`{.literal} 选项中的过滤器定义接受逻辑操作符 `|`{.literal}
（or），以便您可以指定多个条件。在这种情况下，该规则会映射至少满足其中一个条件的所有用户帐户。
:::
:::
[]{#dc-web-ui-auth_managing-certificates-in-idm.html}
::: chapter
::: titlepage
# []{#dc-web-ui-auth_managing-certificates-in-idm.html#dc-web-ui-auth_managing-certificates-in-idm}第 10 章 使用保存在 IdM 客户端桌面中的证书配置身份验证 {.title}
:::
通过配置身份管理(IdM)，IdM 系统管理员允许使用一个 CA
向用户发布的证书，通过 IdM Web UI 和命令行界面(CLI)进行身份验证。
Web 浏览器可以在不属于 IdM 域的系统上运行。
这个用户故事提供了有关如何使用保存在 IdM
客户端桌面中的证书来有效地配置和测试身份管理 Web UI 和 CLI
的信息。在此用户中，
::: itemizedlist
-   如果要使用
    [证书进行身份验证的用户，您可以跳过请求新用户证书并将其导出到客户端](#dc-web-ui-auth_managing-certificates-in-idm.html#requesting-and-exporting-a-user-certificate_dc-web-ui-auth "请求新用户证书并将其导出到客户端"){.link}
    ；
-   如果 IdM CA
    [发布了用户的证书，您可以跳过确保证书和密钥被链接到一起](#dc-web-ui-auth_managing-certificates-in-idm.html#proc_making-sure-the-certificate-and-user-are-linked-together_dc-web-ui-auth "确保证书和密钥已链接在一起"){.link}。
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
只有身份管理用户可以使用证书登录 Web UI。Active Directory
用户可以通过其用户名和密码登录。
:::
::: section
::: titlepage
# []{#dc-web-ui-auth_managing-certificates-in-idm.html#cert-idm-users-auth-preparing-the-server_dc-web-ui-auth}在 Web UI 中配置身份管理服务器以进行证书身份验证 {.title}
:::
作为 Identity Management(IdM)管理员，用户可以使用证书向 IdM
环境进行身份验证。
::: title
**步骤**
:::
作为身份管理管理员：