to 1 Mbps for Operator-II. This result implies that, operators do
offer certain protection mechanism (e.g., blocking the TCP con-
nection if it is too fast). However, these protection policies are
operator speciﬁc. We ﬁnd that, Operator-I may block the access
to any data service while Operator-II only blocks this speciﬁc data
service. We also observe that, the charging time window is not de-
termined by the TCP connection status. When the UE closes this
TCP connection, it sends TCP-RESET signals upon receiving spam
packets. Figure 11 shows the Wireshark trace at the victim; TCP-
RESET signals indicate that the UE aborts the connection and the
1056byte-packets are spam data units. The trace shows that, op-
erators still allow the delivery of those spam packets and charge
mobile users even when the UE TCP connection is closed.
We also test this attack at low source rate (150 Kbps) for var-
ious durations. Figure 13 plots the data volume increase in both
operators. The low-rate attack can easily bypass the security check
implemented by both operators. The attack can last for two hours;
there is no sign to end during our experiments. The data volume
incurred by this attack has exceeded 100 MB.
201)
B
M
(
e
m
u
o
V
l
 40
 35
 30
 25
 20
 15
 10
 5
 0
Sent
Recv
Charged
 0
 200
 400
 800
Attack Source Rate (Kbps)
 600
)
B
M
(
e
m
u
o
V
l
 40
 35
 30
 25
 20
 15
 10
 5
 0
Sent
Recv
Charged
 0
 200
 1000
 400
 800
Attack Source Rate (Kbps)
 600
(a) Operator-I
(b) Operator-II
)
B
M
(
e
m
u
o
V
l
 75
 60
 45
 30
 15
 0
 1000
Sent
Recv
Charged
 0
 250  500  750  1000 1250 1500 1750 2000
Attack Source Rate (Kbps)
(a) Operator-I
)
B
M
(
e
m
u
o
V
l
 75
 60
 45
 30
 15
 0
Sent
Recv
Charged
 0
 250  500  750  1000 1250 1500 1750 2000
Attack Source Rate (Kbps)
(b) Operator-II
Figure 12: Data volume caused by TCP-based stealth spam at-
tacks under various source rates.
Figure 14: Data volume caused by UDP-based (Skype) stealth
spam attacks under various source rates.
)
B
M
(
e
m
u
o
V
l
 140
 120
 100
 80
 60
 40
 20
 0
Sent
Recv
Charged
 0
 20
 60
 40
Attack Time (Minutes)
 80
 100
)
B
M
(
e
m
u
o
V
l
 140
 120
 100
 80
 60
 40
 20
 0
Sent
Recv
Charged
 0
 20
 120
 60
 40
Attack Time (Minutes)
 80
 100
(a) Operator-I
(b) Operator-II
)
B
M
(
e
m
u
o
V
l
 500
 400
 300
 200
 100
 0
 120
Sent
Recv
Charged
 0
 3
 6
 9
 12
 15
 18
 21
 24
Attack Time (Hours)
(a) Operator-I
)
B
M
(
e
m
u
o
V
l
 200
 160
 120
 80
 40
 0
Sent
Recv
Charged
 0
 1
 2
 5
 6
 4
 3
 7
Attack Time (Hours)
 8
 9  10
(b) Operator-II
Figure 13: Data volume caused by TCP-based stealth spam at-
tacks for various durations.
Figure 15: Data volume caused by UDP-based (Skype) stealth
spam attacks for various durations.
5.3 Spam Attack in UDP-based Services
We now describe stealth spam in UDP-based services. Since
UDP is connectionless, it is even harder to decide when the UDP-
based service ends and when the charging operation ends accord-
ingly. The bad news is that, there is no clear protection mecha-
nism for UDP-based service, while the operators at least use sort of
abnormality-check for TCP-based sessions. The malicious attacker
can launch stealth spam in UDP-based services by trapping the vic-
tim to open a UDP connection with itself. It may not be popular to
use a malicious link to open UDP connection, we introduce to use
two popular applications (e.g. VoIP and video streaming) to trap
the victim and leak the access information.
• Spam attack from your buddies
We demonstrate that the
attacker can use VoIP service, including Skype and Google Talk,
to construct the stealth spam. We use Skype as the example ap-
plication. Skype is a globally used VoIP service and allows users
to communicate with peers via voice, video, and instant messaging
over the Internet [13]. Skype allows the buddies to communicate
directly. A buddy on Skype has the chance to directly connect to
the victim device without extra authentication.
The ﬁrst step to launch this attack is still to obtain the victim’s
conﬁdential access information (i.e., translated IP address and port
number) and its permission for this ﬂow to traverse cellular net-
works (in the trap step). To this end, the attacker starts to make a
call to this victim when he gets online using mobile phones. The
attacker hangs up before the victim accepts the call, or even be-
fore the call rings at the victim side. This way, the victim may not
be even unaware of this attempted call. During this process, the
victim’s Skype client performs two operations. First, it sends its
access information to the attacker, which is proved in the attacker’s
Wireshark trace. In the meantime, it automatically notiﬁes the op-
erator that it accepts this ﬂow, which subsequently grants the trafﬁc
ﬂow from the spammer to traverse cellular networks. In the spam
step, the attacker just sends junk UDP packets. The attacker can
conﬁrm that the victim is indeed a mobile user, based on the vic-
tim’s translated IP address given by NAT. The operator-owned IP
address block is readily known in advance. The spammer can also
pick up the victim and launch operator-speciﬁc attacks.
We run experiments to validate this attack and verify whether
extra checking mechanisms exist. We also vary the attack dura-