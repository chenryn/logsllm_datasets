21 
Copyright © 2011 Juniper Networks, Inc.     www.juniper.net   
IMPORTANCE OF BIDIRECTIONAL INSPECTION 
1.
May not inspect both Client to Server and Server to Client: Poisoned Results 
22 
Copyright © 2011 Juniper Networks, Inc.     www.juniper.net   
REVERSING PROTOCOL TRAFFIC 
1.
Application Firewall may not differentiate the Client and the Server directions, this can be used to 
trick AppFW and other Layer 7 services. 
2.
What happens if you switch the client to server and server to client traffic, do you an improper 
match? 
3.
For this AppFW, no, but perhaps others? 
23 
Copyright © 2011 Juniper Networks, Inc.     www.juniper.net   
PORT BASED DETECTION? 
1.
Perhaps not all detection is actually based on actual application identification, some may only 
inspect on certain ports, or may just deem a certain port an application without an AppID match. 
DNS Traffic 
on Port 53 
Exact same 
traffic on any 
other port 
24 
Copyright © 2011 Juniper Networks, Inc.     www.juniper.net   
APPLICATION CACHE POISONING 1/6 
1.
Example, simple policy, block SMTP on any port, allow anything else 
25 
Copyright © 2011 Juniper Networks, Inc.     www.juniper.net   
APPLICATION CACHE POISONING 2/6 
1.
We try sending SMTP over port 80, it get’s blocked as expected 
(Server-to-Client) 
220 smtp.example.com ESMTP Postfix 
26 
Copyright © 2011 Juniper Networks, Inc.     www.juniper.net   
APPLICATION CACHE POISONING 3/6 
1.
Let’s poison the cache with HTTP first (with several connections for good measure) then try the 
same test. 
2.
Application 109 stands for HTTP, we sent 20 separate HTTP connections to 192.168.2.13 on port 
80 
27 
Copyright © 2011 Juniper Networks, Inc.     www.juniper.net   
APPLICATION CACHE POISONING 4/6 
1.
Now send SMTP traffic in a new connection, same port / protocol / server, it’s permitted! 
28 
Copyright © 2011 Juniper Networks, Inc.     www.juniper.net   
APPLICATION CACHE POISONING 5/6 
1.
Cache Hit! 
29 
Copyright © 2011 Juniper Networks, Inc.     www.juniper.net   
APPLICATION CACHE POISONING 6/6 
1.
All new connections are detected as HTTP, yes I was working on this at 5am. 
30 
Copyright © 2011 Juniper Networks, Inc.     www.juniper.net   
CACHING NESTED APPLICATIONS 
1.
This is a bad idea. 
2.
While we’d like the performance gains, multiple applications can be hosted on the same 
host/protocol/port both maliciously and legitimately. 
3.
Attackers can use this even more easily than port based application cache attacks. 
4.
Doesn’t require client and server collusion to work, . 
Instead, we should perform AppID on all nested applications or just block the access to that server / 
protocol / port altogether. 
31 
Copyright © 2011 Juniper Networks, Inc.     www.juniper.net   
CONFLICT RESOLUTION 
1.
What happens if a traffic stream has characteristics of two or more applications, how to best select 
the application. 
2.
Difficult problem to solve, some applications look very similar especially at first.  (e.g. SMTP + FTP)  
3.
Evasive applications and malicious attackers may try to compromise accurate detection. 
4.
Can try to exploit this to determine effectiveness of application firewalls for example: 
1.
HTTP might look for patterns like “GET|POST|HTTP” 
2.
 SIP might look for patterns like “Request|Register|Status” 
3.
What if custom protocol leveraged both, would the application firewall detect it as HTTP, SIP, or unknown? 
e.g. “GET /Request Register 1.1” 
32 
Copyright © 2011 Juniper Networks, Inc.     www.juniper.net   
APPLICATION LAYER GATEWAYS W/APPLICATION FW 
1.
Application Layer Gateways (ALG) inspect control channels of certain protocols like 
FTP/MSRPC/SUNRPC/RTSP/SIP &c to open additional pinhole sessions for auxillary data 
channels (amongst other tasks). 
2.
Impacts of ALG’s on Application Firewalls will vary based on implementation and protocols.   
3.
Some data channels cannot be accurately inspected with Application Identification because they 
are pure byte streams (e.g. FTP data), encrypted/compressed (RTP), or transient in nature. 
33 
Copyright © 2011 Juniper Networks, Inc.     www.juniper.net   
UNKNOWN APPLICATION PROTOCOLS 1/4 
1.
What happens when Application ID can’t identify an application?   
2.
Some implementations don’t inspect traffic at layer 7 at all when the Application can’t be identified 
(not even stream or packet attacks!) 
        Step 1, open session 
34 
Copyright © 2011 Juniper Networks, Inc.     www.juniper.net   
UNKNOWN APPLICATION PROTOCOLS 2/4 
1.
Initially before the Application ID completes see that Layer 7 processing is enabled for the session 
35 
Copyright © 2011 Juniper Networks, Inc.     www.juniper.net   
UNKNOWN APPLICATION PROTOCOLS 3/4 
1.
We send some traffic 
2.
Once Application ID completes, no 
more Layer 7 processing even with 
Full IPS Enabled!! 
3.
Further analysis showed that the traffic 
was being fast pathed in the ASIC 
NPU at this point, the packets weren’t 
even being sent to the processor 
where FW / IPS is handled! 
4.
By Default! 
36 
Copyright © 2011 Juniper Networks, Inc.     www.juniper.net   
UNKNOWN APPLICATION PROTOCOLS 4/4 
1.
Application Level Exchange 
37 
Copyright © 2011 Juniper Networks, Inc.     www.juniper.net   
OBFUSCATION 
1.
Encryption:  You can’t really use a signature.  A common technique is if a protocol is 
unknown, to measure the randomness of data (entropy) to determine if it is encrypted.  
Typically this can’t tell what the application is, but rather that it is an unknown 
encrypted application. 
2.
Steganography:  Hiding a message in plain sight.  This is a very hard problem to solve, 
an Application Firewall or IPS likely won’t be able to detect this.  Bayesian-like filtering 
would need to be used to improve detection. 
3.
Tunneling:  Applications can be tunneled in other protocols (e.g. GRE, IPinIP, SSL, and 
many other derivatives.  Application Firewall may not be able to detect inner protocols. 
Data: 
474554202F616E6E6F756E63653F696E666F5F68
6173683D... 
Data: 
485454502F312E3020323030204F4B0D
0A436F6E74656E74... 
Encrypted BitTorrent Application, no standard pattern. 
38 
Copyright © 2011 Juniper Networks, Inc.     www.juniper.net   
APPID W/O PATTERN MATCHING 
1.
Some application identification isn’t based upon application signatures at all.  This is especially true 
of encrypted applications where pattern match is not reliable. 
2.
Some detection may be based upon IP Address, for instance classifying known P2P Supernodes or 
TOR exit points based upon IP address and not based on an actual pattern match or other heuristic 
method. 
3.
Some detection is a combination of IP based matching and pattern matching for other aspects of 
the traffic. 
39 
Copyright © 2011 Juniper Networks, Inc.     www.juniper.net   
WHAT DOES APPLICATION FIREWALL CHANGE? 
It is a step better than Stateful Firewall alone, but a 
subset of real IPS. 
It’s a lightweight way to keep honest applications 
honest, compared to IPS (thus likely a lower cost). 
If already using a solid firewall + IPS implementation, 
it can save IPS time by not inspecting unwanted 
“honest” applications. 
Can be used to block unknown encrypted 
communication, but some obfuscation methods like 
steganography are likely to evade. 
40 
Copyright © 2011 Juniper Networks, Inc.     www.juniper.net   
FUTURE TRENDS FOR APPLICATIONS 
1.
More applications running over HTTP, more applications leveraging SSL encryption (even for non-
HTTP protocols.) 
2.
Smarter applications that are more efficient such as SPDY, but also applications that include 
encryption/compression for maximum efficiency. 
3.
Evasive applications will go to great lengths to hide themselves.  Expect to see more custom 
encryption, along with encryption within SSL. 
4.
Expect malicious/evasive applications to try to blend in with regular traffic.  Using methods of 
standard encryption and also advanced mechanisms like steganography. 
41 
Copyright © 2011 Juniper Networks, Inc.     www.juniper.net   
SOLVING LIMITATIONS IN APPFW 
1. Application / Protocol Anomaly Detection   
2. Full IPS for Exploit Protection 
3. Disable Caching 
4. Check default settings 
Stateful Firewall: 
1.  Deploy with full stateful FW 
2.
Leverage L3/L4 IPS 
Protections and Session 
Control 
3.
Always use a tight FW 
rulebase with strict control 
on source/destination IP 
Addresses + L4 
Protocol/Ports  
Network Access Control 
1.
Strict control over access to 
the network. 
2.
Quarantine 
guest/compromised hosts. 
Full IPS: 
1.
Full IPS solution should be 
used with appropriately 
tuned policy on top of 
Stateful FW + Application 
FW. 
2.
Leverage Protocol Anomaly 
Protection to detect evasion 
techniques 
3.
Don’t just use IDS mode! 
Malware Protection 
1.
Network Based Malware 
protection and URL 
Filtering can be helpful, but 
additional protection is 
needed. 
2.
Desktop Malware protection 
is still required to protect 
against advanced threats 
In addition, everything you already know still holds true 
42 
Copyright © 2011 Juniper Networks, Inc.     www.juniper.net   
Questions and Answers? 
- PI:EMAIL –  
Twitter:  @bradmatic517 
Q&A