# []{#mounting-an-smb-share-on-red-hat-enterprise-linux_managing-file-systems.html#con_frequently-used-mount-options_assembly_mounting-an-smb-share-on-red-hat-enterprise-linux}常用的挂载选项 {.title}
:::
当您挂载 SMB 共享时，挂载选项将决定：
::: itemizedlist
-   如何与服务器建立连接。例如：连接到服务器时使用 SMB 协议版本。
-   如何将共享挂载到本地文件系统.例如，如果系统覆盖了远程文件和目录的权限，使多个本地用户能够访问服务器上的内容。
:::
要在 `/etc/fstab`{.literal} 文件的第四个字段或在 mount 命令的
`-o`{.literal} 参数中设置多个选项，请将它们用逗号分开。例如，请参阅
[使用 multiuser
选项挂载共享](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/managing_file_systems/index#proc_mounting-a-share-with-the-multiuser-option_assembly_performing-a-multi-user-smb-mount){.link}。
以下列表给出了常用的挂载选项：
::: informaltable
+----------------------------------+----------------------------------+
| 选项                             | 描述                             |
+:=================================+:=================================+
| cred                             | 设置凭证文件的路径。请参阅       |
| entials=[*file_name*]{.emphasis} | [使用凭据文件认证到 SMB          |
|                                  | 共享](https://access.red         |
|                                  | hat.com/documentation/en-us/red_ |
|                                  | hat_enterprise_linux/8/html-sing |
|                                  | le/managing_file_systems/index#p |
|                                  | roc_authenticating-to-an-smb-sha |
|                                  | re-using-a-credentials-file_asse |
|                                  | mbly_mounting-an-smb-share-on-re |
|                                  | d-hat-enterprise-linux){.link}。 |
+----------------------------------+----------------------------------+
| dir_mode=[*mode*]{.emphasis}     | 如果服务器不支持 CIFS UNIX       |
|                                  | 扩展，则设置目录模式。           |
+----------------------------------+----------------------------------+
| file_mode=[*mode*]{.emphasis}    | 如果服务器不支持 CIFS UNIX       |
|                                  | 扩展，则设置文件模式。           |
+----------------------------------+----------------------------------+
| password=[*password*]{.emphasis} | 设置在 SMB                       |
|                                  | 服                               |
|                                  | 务器中验证的密码。另外，也可使用 |
|                                  | `credentials`{.literal}          |
|                                  | 选项指定凭据文件。               |
+----------------------------------+----------------------------------+
| seal                             | 使用 SMB 3.0                     |
|                                  | 或更高的协议版本                 |
|                                  | 启用对连接的加密支持。因此，使用 |
|                                  | `seal`{.literal} 和              |
|                                  | `vers`{.literal}                 |
|                                  | 挂载选项来设置成 `3.0`{.literal} |
|                                  | 或更高版本。请参阅 [手动挂载 SMB |
|                                  | 共享](https://access.redhat.c    |
|                                  | om/documentation/en-us/red_hat_e |
|                                  | nterprise_linux/8/html-single/ma |
|                                  | naging_file_systems/index#proc_m |
|                                  | anually-mounting-an-smb-share_as |
|                                  | sembly_mounting-an-smb-share-on- |
|                                  | red-hat-enterprise-linux){.link} |
|                                  | 中的示例。                       |
+----------------------------------+----------------------------------+
| sec=[*security_mode*]{.emphasis} | 设置安全模式，如                 |
|                                  | `ntlmsspi`{.literal}，来启用     |
|                                  | NTLMv2                           |
|                                  | 密码哈希和已启用的数据           |
|                                  | 包签名。有关支持值的列表，请查看 |
|                                  | `mount.cifs(8)`{.literal}        |
|                                  | 手册页中的选项描述。             |
|                                  |                                  |
|                                  | 如果服务器不支持                 |
|                                  | `ntlmv2`{.literal}               |
|                                  | 安全模式，则使用                 |
|                                  | `sec=                            |
|                                  | ntlmssp`{.literal}，这是默认值。 |
|                                  |                                  |
|                                  | 出于安全考虑，请不要使用不安全的 |
|                                  | `ntlm`{.literal} 安全模式。      |
+----------------------------------+----------------------------------+
| u                                | 设置在 SMB                       |
| sername=[*user_name*]{.emphasis} | 服务                             |
|                                  | 器中验证的用户名。另外，也可使用 |
|                                  | `credentials`{.literal}          |
|                                  | 选项指定凭据文件。               |
+----------------------------------+----------------------------------+
| vers=[*S                         | 设定用于与服务器通信的 SMB       |
| MB_protocol_version*]{.emphasis} | 协议版本。                       |
+----------------------------------+----------------------------------+
:::
有关完整的列表，请参阅 `mount.cifs(8)`{.literal} 手册页中的
`OPTIONS`{.literal} 部分。
:::
:::
[]{#performing-a-multi-user-smb-mount_managing-file-systems.html}
::: chapter
::: titlepage
# []{#performing-a-multi-user-smb-mount_managing-file-systems.html#performing-a-multi-user-smb-mount_managing-file-systems}第 12 章 执行多用户 SMB 挂载 {.title}
:::
您为挂载共享提供的凭据默认确定对挂载点的访问权限。例如，如果您在挂载共享时使用
`DOMAIN\example`{.literal}
用户，则共享上的所有操作都将以该用户的身份执行，而不管哪个本地用户执行此操作。
然而，在某些情况下，管理员希望在系统启动时自动挂载共享，但用户应使用他们自己的凭据对共享的内容执行操作。`multiuser`{.literal}
挂载选项允许您配置此场景。
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
要使用 `multiuser`{.literal} 挂载选项，还必须将 `sec`{.literal}
挂载选项设置为支持以非交互方式提供凭据的安全类型，如 `krb5`{.literal}
，或带有凭据文件的 `ntlmssp`{.literal} 选项。详情请参阅
[以用户身份访问共享](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/managing_file_systems/index#proc_accessing-a-share-as-a-user_assembly_performing-a-multi-user-smb-mount){.link}。
:::
`root`{.literal} 用户使用 `multiuser`{.literal}
选项以及对共享内容具有最少访问权限的帐户挂载共享。然后，常规用户可以使用
`cifscreds`{.literal}
工具将其用户名和密码提供给当前会话的内核密钥环。如果用户访问挂载的共享的内容，则内核将使用内核密钥环中的凭据，而不是最初用来挂载共享的凭据。
使用此功能包含以下步骤：
::: itemizedlist
-   [使用 `multiuser`{.literal}
    选项挂载共享](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/managing_file_systems/index#proc_mounting-a-share-with-the-multiuser-option_assembly_performing-a-multi-user-smb-mount){.link}。
-   [（可选）验证是否使用 `multiuser`{.literal}
    选项成功挂载了共享](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/managing_file_systems/index#proc_verifying-if-an-smb-share-is-mounted-with-the-multiuser-option_assembly_performing-a-multi-user-smb-mount){.link}。
-   [以用户身份访问共享](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/managing_file_systems/index#proc_accessing-a-share-as-a-user_assembly_performing-a-multi-user-smb-mount){.link}。
:::
::: itemizedlist
**先决条件**
-   `cifs-utils`{.literal} 软件包已安装。
:::
::: section
::: titlepage
# []{#performing-a-multi-user-smb-mount_managing-file-systems.html#proc_mounting-a-share-with-the-multiuser-option_assembly_performing-a-multi-user-smb-mount}使用 multiuser 选项挂载共享 {.title}
:::
在用户可以使用他们自己的凭据访问共享之前，使用权限有限的帐户，以
`root`{.literal} 用户身份挂载共享。
::: title
**流程**
:::
在系统启动时，使用 `multiuser`{.literal} 选项自动挂载共享：
::: orderedlist
1.  在 `/etc/fstab`{.literal} 文件中为共享创建条目。例如：
    ``` literallayout
    //server_name/share_name  /mnt  cifs  multiuser,sec=ntlmssp,credentials=/root/smb.cred  0 0
    ```
2.  挂载共享：
    ``` literallayout
    # mount /mnt/
    ```
:::
如果您不想在系统启动时自动挂载共享，请通过将
`-o multiuser,sec=security_type`{.literal} 传给 `mount`{.literal}
命令来手动挂载它。有关手动挂载 SMB 共享的详情，请参考 [手动挂载 SMB
共享](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/managing_file_systems/index#proc_manually-mounting-an-smb-share_assembly_mounting-an-smb-share-on-red-hat-enterprise-linux){.link}。
:::
::: section
::: titlepage
# []{#performing-a-multi-user-smb-mount_managing-file-systems.html#proc_verifying-if-an-smb-share-is-mounted-with-the-multiuser-option_assembly_performing-a-multi-user-smb-mount}验证是否使用 multiuser 选项挂载 SMB 共享 {.title}
:::
若要验证共享是否是通过 `multiuser`{.literal}
选项挂载的，可显示挂载选项。
::: title
**流程**
:::
``` literallayout
# mount
...
//server_name/share_name on /mnt type cifs (sec=ntlmssp,multiuser,...)
```
如果挂载选项列表中显示了 `multiuser`{.literal} 条目，则启用了该功能。
:::
::: section
::: titlepage
# []{#performing-a-multi-user-smb-mount_managing-file-systems.html#proc_accessing-a-share-as-a-user_assembly_performing-a-multi-user-smb-mount}以用户身份访问共享 {.title}
:::
如果 SMB 共享是使用 `multiuser`{.literal} 选项挂载的
，则用户可以向内核密钥环提供其服务器凭据：
``` literallayout
# cifscreds add -u SMB_user_name server_name
Password: password
```
当用户在包含挂载的 SMB
共享的目录中执行操作时，服务器将为此用户应用文件系统权限，而不是挂载共享时最初使用的权限。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
多个用户可以同时对挂载的共享使用自己的凭据来执行操作。
:::
:::
:::
[]{#assembly_overview-of-persistent-naming-attributes_managing-file-systems.html}
::: chapter
::: titlepage
# []{#assembly_overview-of-persistent-naming-attributes_managing-file-systems.html#assembly_overview-of-persistent-naming-attributes_managing-file-systems}第 13 章 持久性命名属性概述 {.title}
:::
作为系统管理员，您需要引用使用持久性命名属性的存储卷来构建比多个系统引导更可靠存储设置。
::: section
::: titlepage
# []{#assembly_overview-of-persistent-naming-attributes_managing-file-systems.html#con_disadvantages-of-non-persistent-naming-attributes_assembly_overview-of-persistent-naming-attributes}非持久性命名属性的缺陷 {.title}
:::
Red Hat Enterprise Linux
提供识别存储设备的多种方法。在使用时，务必要使用正确的选项来识别每个设备，以避免意外访问错误的设备，特别是在安装到或重新格式化驱动器时。
通常，Linux 中使用非持久性名称来表示存储设备，格式为
`/dev/sd（主号）（次号）`{.literal}。当检测到设备时，会为每个设备分配主号和次号范围，以及相关的
`sd`{.literal}
名称。这意味着，如果设备检测顺序发生了变化，主号和次号范围之间的关联以及相关的
`sd`{.literal} 名称可能会发生变化。
在以下情况下可能会在以下情况下更改排序：
::: itemizedlist
-   系统引导过程的并行化会根据每个系统引导的顺序检测到存储设备。
-   磁盘无法启动或响应 SCSI
    控制器。这会导致通常的设备探测不会检测到它。磁盘不能被系统访问，后续的设备将有其主号和次号范围，包括相关的
    `sd`{.literal} 名称会下移。例如，如果没有检测到通常称为
    `sdb`{.literal} 的磁盘，则通常称为 `sdc`{.literal} 的磁盘将显示为
    `sdb`{.literal}。
-   SCSI 控制器（主机总线适配器或
    HBA）无法初始化，从而导致不能检测到与该 HBA
    连接的所有磁盘。任何连接到随后探测到的 HBA
    的磁盘都会被分配不同的主号和次号范围，以及不同的相关 `sd`{.literal}
    名称。
-   如果系统中存在不同类型的
    HBA，则驱动初始化顺序会改变。这会导致连接到那些 HBA
    的磁盘以不同顺序被检测到。当将 HBA 移动到系统的不同 PCI
    插槽时也会出现这种情况。
-   连接到带有光纤通道、iSCSI 或 FCoE
    适配器的系统的磁盘可能在检测存储设备时无法访问，例如，由于存储阵列或中间交换机断电。如果存储阵列的在线需要比系统启动的时间更长，则系统在电源失败后重启时会出现这种情况。虽然某些光纤通道驱动程序支持一种机制来将持久性
    SCSI 目标 ID 指定到 WWPN
    映射，但这不会保留主号和次号范围，以及相关的 `sd`{.literal}
    名称，它只提供一致的 SCSI 目标 ID 号。
:::
这些原因使得在引用设备(例如在
`/etc/fstab`{.literal}文件中的)时不希望使用主号和次号范围或相关的
`sd`{.literal} 名称。可能挂载了错误的设备，并可能导致数据崩溃。
然而，仍然有必要引用 `sd`{.literal}
名称，即使使用了其它机制，比如当设备报告错误时。这是因为 Linux
内核在有关设备的内核消息中使用 `sd`{.literal} 名称（以及 SCSI
主机/通道/目标/LUN 元组）。
:::
::: section
::: titlepage
# []{#assembly_overview-of-persistent-naming-attributes_managing-file-systems.html#file-system-and-device-identifiers_assembly_overview-of-persistent-naming-attributes}文件系统和设备识别符 {.title}
:::
这部分解释了识别文件系统和块设备的持久性属性之间的区别。
### []{#assembly_overview-of-persistent-naming-attributes_managing-file-systems.html#_file_system_identifiers}文件系统识别符
文件系统标识符与在块设备中创建的特定文件系统绑定。标识符也作为文件系统的一部分保存。如果您将文件系统复制到不同的设备中，它仍采用相同的文件系统识别符。另一方面，如果您重写设备，比如使用
`mkfs`{.literal} 工具进行格式化，设备会丢失属性。
文件系统识别符包括：
::: itemizedlist
-   唯一标识符（UUID）
-   标签
:::
### []{#assembly_overview-of-persistent-naming-attributes_managing-file-systems.html#_device_identifiers}设备识别符
设备标识符与块设备绑定：例如磁盘或者分区。如果您重写设备，比如使用
`mkfs`{.literal}
工具进行格式化，设备会保留属性，因为它没有存储在文件系统中。
设备识别符包括：
::: itemizedlist
-   World Wide Identifier (WWID)
-   分区 UUID
-   序列号
:::
### []{#assembly_overview-of-persistent-naming-attributes_managing-file-systems.html#_recommendations}建议
::: itemizedlist
-   有些文件系统（比如逻辑卷）会跨越多个设备。红帽建议您使用文件系统识别符而不是设备标识符访问这些文件系统。
:::
:::
::: section
::: titlepage
# []{#assembly_overview-of-persistent-naming-attributes_managing-file-systems.html#con_device-names-managed-by-the-udev-mechanism-in-dev-disk-_assembly_overview-of-persistent-naming-attributes}使用 /dev/disk/ 中的 udev 机制管理的设备名称 {.title}
:::
本节列出了 `udev`{.literal} 服务在 `/dev/disk/`{.literal}
目录中提供的不同类型的持久命名属性。
`udev`{.literal} 机制用于 Linux
中的所有设备，而不仅仅是存储设备。对于存储设备，Red Hat Enterprise Linux
包含 在 `/dev/disk/`{.literal} 目录中创建符号链接的 `udev`{.literal}
规则。这可让您使用以下方法指向存储设备：
::: itemizedlist
-   其内容
-   唯一标识符
-   它们的序列号。
:::
虽然 `udev`{.literal}
命名属性是持久的，但它们在系统重启后不会自行更改，但有一部分也是可以配置的。
::: section
::: titlepage
## []{#assembly_overview-of-persistent-naming-attributes_managing-file-systems.html#file-system-identifiers_assembly_overview-of-persistent-naming-attributes}文件系统识别符 {.title}
:::
### []{#assembly_overview-of-persistent-naming-attributes_managing-file-systems.html#_the_uuid_attribute_in_devdiskby_uuid}/dev/disk/by-uuid/ 中的 UUID 属性
此目录中的条目提供一个符号链接名称，通过存储在设备上的内容（即数据）中的
[**唯一标识符**]{.strong} (UUID) 来指向存储设备。例如：