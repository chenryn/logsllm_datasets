title:Lottery trees: motivational deployment of networked systems
author:John R. Douceur and
Thomas Moscibroda
Motivational Deployment of Networked Systems
Lottery Trees:
John R. Douceur
Microsoft Research
Redmond WA 98052
PI:EMAIL
ABSTRACT
We address a critical deployment issue for network systems, namely
motivating people to install and run a distributed service. This work
is aimed primarily at peer-to-peer systems, in which the decision
and effort to install a service falls to individuals rather than to a
central planner. This problem is relevant for bootstrapping systems
that rely on the network effect, wherein the beneﬁts are not felt
until deployment reaches a signiﬁcant scale, and also for deploy-
ing asymmetric systems, wherein the set of contributors is different
than the set of beneﬁciaries. Our solution is the lottery tree (lottree),
a mechanism that probabilistically encourages both participation in
the system and also solicitation of new participants. We deﬁne the
lottree mechanism and formally state seven properties that encour-
age contribution, solicitation, and fair play. We then present the
Pachira lottree scheme, which satisﬁes ﬁve of these seven proper-
ties, and we prove this to be a maximal satisﬁable subset. Using
simulation, we determine optimal parameters for the Pachira lot-
tree scheme, and we determine how to conﬁgure a lottree system
for achieving various deployment scales based on expected instal-
lation effort. We also present extensive sensitivity analyses, which
bolster the generality of our conclusions.
Categories and Subject Descriptors
C.2.3 [Computer-Communication Networks]: Network Opera-
tions—network management; H.5.3 [Information Interfaces and
Presentation]: Group and Organization Interfaces—collaborative
computing; J.4 [Social and Behavioral Sciences]: economics, psy-
chology, sociology; K.5.2 [Legal Aspects of Computing]: Gov-
ernmental Issues—regulation
General Terms
Algorithms, Economics, Human Factors, Legal Aspects, Theory
Keywords
Incentive systems, networked systems, deployment, bootstrapping,
lotteries, prospect theory, desiderata, impossibility results
1.
INTRODUCTION
Network protocols, distributed systems, and communication over-
lays require several critical qualities to achieve deployment: They
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
SIGCOMM’07, August 27–31, 2007, Kyoto, Japan.
Copyright 2007 ACM 978-1-59593-713-1/07/0008 ...$5.00.
Thomas Moscibroda
Microsoft Research
Redmond WA 98052
PI:EMAIL
must be effective at their intended goal, compatible with existing
infrastructure, robust to failures, secure against attack, incremen-
tally deployable, scalable, and so forth. Yet in addition to these
much-studied aspects, networked systems must also be attractive
to the people who are needed to deploy them.
For a central planner, the end goal itself may be sufﬁcient mo-
tivation to deploy; for example, an AS may be motivated to de-
ploy a new intra-domain routing protocol that promises to improve
resource efﬁciency. However, many of the most interesting net-
worked systems proposed in recent years are intended to be de-
ployed on end hosts, which are under the control of individuals.
Some of these systems are asymmetric, in the sense that the partic-
ipants contribute resources or effort to the system but receive noth-
ing directly in return. Other systems, although symmetric insofar
as the contributors are also the benefactors, rely on the network
effect [20] to make the beneﬁt of the system signiﬁcant.
Symmetric network-effect systems, such as recommendation net-
works [13], ﬁle-sharing services [12], social forums [1], open data-
bases [24], or collaborative reference works [3], can become self-
sustaining when the scale becomes large enough for the beneﬁt of
participation to outweigh the cost. However, such systems are noto-
riously difﬁcult to bootstrap, as evidenced by the numerous devel-
oped peer-to-peer systems [5], few of which have become popular.
Asymmetric distributed systems, such as BOINC [4], GPU [25]
and Folding@Home / Genome@Home [21], are even more prob-
lematic. Because potential contributors are asked to provide com-
putation, storage, or bandwidth toward a goal that does not directly
beneﬁt them, they have little or no incentive to join the system.
Evidently, some people do choose to contribute, for various rea-
sons including a selﬂess desire to help [10], a hope that the work
may eventually beneﬁt them [17], the “geek chic” associated with
high contribution levels displayed on public ranking sites [7], and
even the meager value of looking at pretty pictures on a screen-
saver [30]. Once such systems reach a threshold of popularity, they
seem able to sustain substantial ongoing contribution. Following
the principle of “a crowd draws a crowd,” the media attention and
buzz that accompanies a large congregation can inspire others to
join. In most cases, however, potentially useful systems languish in
unpopularity [7], having never managed to inspire a critical mass
of participants.
The key problem that prevents a large number of symmetric and
asymmetric networked systems from ever becoming popular is boot-
strapping, i.e., attracting a sufﬁciently large initial user base. Two
motivational challenges confront bootstrapping such systems. First,
participants might reasonably expect their investment of effort and
resources to return some palpable value, which neither asymmet-
ric systems nor small network-effect systems provide. The simple
expedient of monetarily compensating early adopters may not be a
practical option, particularly for small research groups whose lim-
ited budgets may be vastly insufﬁcient to compensate contributors
at a level that many would ﬁnd satisfactory.
Second, participants have little or no incentive to persuade their
friends and acquaintances to join. Even for network-effect systems,
wherein the value of the system grows as the population grows,
the marginal beneﬁt provided by each new participant is diffusely
spread among the entire pool of participants, rather than accruing
signiﬁcantly to the person who solicited the new member. Thus,
there is no inherent incentive that fosters system propagation.
This paper addresses these two challenges with a general mech-
anism for motivating bootstrap deployment of networked systems.
The mechanism, which we call lottery trees (lottrees), employs the
leverage of lottery psychology [29] to disproportionally motivate
people to contribute to a developing system. In addition, lottrees
employ a mechanism similar to a multilevel marketing scheme [9]
to motivate participants to solicit other people to contribute as well.
Consequently, lottrees can signiﬁcantly increase the rate of network
deployment and/or reduce the ﬁnancial investment required to en-
sure rapid and eventually self-sustaining growth.
Our impetus for developing lottrees is an asymmetric distributed
system we are currently building, which involves participation from
a large number of geographically dispersed home computers. It did
not take us long to realize that the lack of direct beneﬁt to par-
ticipants, the severe limitations of our budget, and the absence of
effective and economical advertising would call for a creative so-
lution to motivate participation, particularly when we observed the
lackluster fate of so many similar projects [7].
Interestingly, there exists little or no literature in the networking
community that addresses incentive mechanisms for motivational
deployment. Previously researched incentive mechanisms [8, 11,
18, 19, 23, 27, 28, 31, 32, 36] operate on the premise that people
participate in a networked system if the utility they receive from
the system is higher than the cost of joining the system. Such
mechanisms are inherently unsuited for bootstrapping asymmetric
or small-sized systems from which the users get little or nothing in
return. Our lottree mechanism thus marks a fundamental departure
from existing incentive mechanisms in that it incentivizes partic-
ipation even in these systems. Consequently, neither our formal
deﬁnitions nor our theoretical proofs rely at all on the notoriously
hard-to-deﬁne notion of utility. Even our simulation studies employ
only a weak notion of comparative value, namely the “time value
of money.” We further note that our theoretical results apply to the
full lottree mechanism, not merely to an abstracted or simpliﬁed
model.
The following section describes the general lottree mechanism,
including deﬁnitions we will use throughout the paper. In Section 3,
we formally state seven desirable properties for a lottree, which col-
lectively encourage participation, propagation, and fair play. Sec-
tion 4 introduces some simple lottree schemes that illustrate the
challenges involved in achieving our desired properties. Section 5
then presents Pachira, which is the strongest lottree scheme we have
developed. Although Pachira satisﬁes only ﬁve of our desired prop-
erties, Section 6 proves that these ﬁve constitute a maximal satisﬁ-
able subset, insofar as any scheme satisfying these ﬁve properties
cannot also satisfy the remaining two. Section 7 uses simulation to
determine optimal parameters for the Pachira lottree scheme, to de-
rive conﬁguration parameters for speciﬁc lottree deployments, and
to evaluate the sensitivity of our results to our various modeling as-
sumptions. Section 8 addresses the relevant legal issues involved
in using lottree schemes for motivational deployment of networked
systems. Finally, Sections 9 and 10 present related work and our
conclusions.
2. LOTTERY TREES
A lottery tree (lottree) is a mechanism that employs a lottery to
probabilistically compensate people who participate in a networked
system and/or who successfully encourage others to join the system
as well and contribute to it. Depending on the speciﬁc networked
system under consideration, contributing to or participating in this
system can mean such different things as performing computation,
storing information, transmitting data, testing a software applica-
tion, providing recommendations, and so forth.
Regardless of the speciﬁc nature of the contributions, lottrees
work as follows. Assume that there is an executive entity (a person,
company, or research group) whose goal it is to deploy a networked
system for which it needs to attract a large number of participants
with sufﬁciently high contribution. We further assume that this ex-
ecutive entity of a network is willing and able to invest a certain
amount of money (or any other item of value)—which we term the
payout—for attracting a sufﬁcient user base of this network. The
function of the lottree is then, after a certain amount of time has
passed, to select one contributor of the network as the recipient of
the payout.1 Ideally, a good lottree performs this selection in such
a way that encourages high participation, contribution, and solici-
tation among participants.
More precisely, consider the network to be initialized with a sin-
gle root node which represents the executive entity. Whenever a
new person joins the network, he does so as a child of some person
that is already a node in the system. For example, people might
sign up their computers to the network by visiting a web site that
records information and installs an application. If someone visits
the site on his own, his computer joins as a child of the root. Once
a member, he is able to send solicitations, perhaps in the form of
coded email links, to friends and associates. Anyone who follows
the coded link to the web site will join as a child of the member
who sent the link, whom we call the solicitor. After the system has
grown to a size that the executive entity judges to be sufﬁcient, she
farms out work units to the nodes and records each node’s contri-
bution. The lottree then selects a winner based on the tree structure
and on nodes’ contributions.
The challenge in designing a lottree scheme is how to deﬁne the
rules of selecting a winner in such a way that encourages both con-
tribution and system growth. Simple schemes that readily provide
some beneﬁts tend to fail to provide others. For example, an ob-
vious scheme is employ a simple lottery that randomly selects a
winner in proportion to its contribution to the network. Although
this encourages contribution, it discourages participants from solic-
iting others, since any new member decreases the current members’
chances of winning. What we require is a scheme that encourages
contribution, solicitation, and fair play.
2.1 Deﬁnitions
Each participant that joins a lottree is represented as a tree node,
and a directed edge from a node u to node v indicates that u was
v’s solicitor. Let Tr denote a tree rooted at node r. Formally, we
represent a tree T as a set containing nodes n and ordered node-
pairs (p, c) that indicate parent-child edges. This representation
allows trees to be partially ordered using subset and superset rela-
tions. Standard tree properties are assumed to hold. We generalize
the notation for a forest FR, constructed as a union of independent
trees, wherein R is the set of roots of the trees.
The following operators on trees are used in the paper: Sub(T, n)
is the subtree of T rooted at node n; P ath(T, n) is the set of nodes
1Alternatively, a lottree may periodically select a winner or may opt for
choosing multiple winners in each period. All these mechanisms fall into
the realm of possible lottery-tree strategies.
on the path from node n to the root of tree T following edges back-
wards, including the root, but excluding n; and P arent(T, n) in-
dicates node n’s parent in T . The set of nodes in tree T is denoted
by N (T ) and the set of edges by E (T ).
A crucial ingredient of lottrees is that every participant has a cer-
tain amount of measurable contribution. Formally, we model this
contribution using a contribution function C(n) that maps each
node n to the non-negative sum of its accumulated contribution;
larger values of C(n) indicate greater contributions of resources to
the system (e.g., more recommendations submitted, more comput-
ing cycles offered, etc.). For a set of nodes N, we use the nota-
tional shortcut C(N ) := n∈N C(n), and for a tree, C(T ) :=
C(N (T )).
Although different lottrees may differ in both functionality and
implementation, they have in common that they select one or more
lottery winners based on the topology of the tree (solicitations) as
well as the contribution by individual participants. Hence, based on
these commonalities, we formalize a lottree as a function L(T, C, n)
that for each node n ∈ N (T ) in a tree T and a contribution func-
tion C, determines node n’s expected value, i.e., the value that it
gains from the lottery in expectation. In the sequel, it is convenient
to normalize these values such that, n∈N (T ) L(T, C, n) = 1.
Finally, throughout the paper, we denote the entire lottree, the so-
called system tree, by TS, and the root of the system tree is called
Sys.
3. DESIDERATA
As alluded to at the end of Section 2, a lottree scheme should
achieve diverse, and sometimes opposing, goals. While a lottree’s
main objective is to provide incentive to contribute and to solicit
new participants, it should also maintain a notion of fairness and be
robust against various forms of strategic behavior by participants.
With these goals in mind, this section formalizes seven properties
that are desirable in a lottery tree. Collectively, these properties en-
courage contribution to the system, encourage solicitation of new
nodes, inhibit certain forms of gaming the system, and address
practical considerations. We begin with a very simple property that
expresses that every participant should have an interest in contribut-
ing more resources to the system.
Continuing contribution incentive (CCI):
A lottree L satisﬁes CCI if it provides nodes with increasing ex-
pected value in response to increased contribution. This encourages
nodes to continue contributing to the system.
If node m is in the system tree: m ∈ N (TS)
and m’s contribution increases: C
and all other nodes maintain the same level of contribution:
(cid:3)(m) > C(m)
∀n (cid:4)= m : C
(cid:3)(n) = C(n)
Then m’s expected value increases:
, m) > L(TS, C, m)
L(TS, C
(cid:3)
Value proportional to contribution (VPC):
Intuitively, we believe that participants are more likely to contribute
to the system if they perceive the payout distribution to be fair rel-
ative to their contributions. We say that a lottree L satisﬁes ϕ-VPC
for some ϕ > 0 if it ensures that each node’s expected value is at
least ϕ times the relative contribution made by that node.
If m is in the system tree: m ∈ N (TS)
and m contributes fraction cm of all contribution:
cm = C(m)/C(TS)
Then: L(TS, C, m) ≥ ϕ cm
Strong solicitation incentive (SSI):
To encourage system growth, participants should have an incentive
to solicit new participants. Formally, we say that a lottree L satis-
ﬁes SSI if a node’s expected value increases when that node gains
a contributing descendent. This encourages nodes to solicit new
nodes to join their subtrees, which is key in ensuring the growth of
the overall system.
If node m is in the system tree: Tm ⊂ TS
and m’s subtree includes some node p: p ∈ N (Tm)
and there is a new node n: n (cid:4)∈ N (TS) with C(n) > 0
and which joins the system as a child of p:
S = TS ∪ {n, (p, n)}