translating to advantages in timing and cancellation. We
detail the advantages next and then develop the Lookahead
Award Noise Cancellation (LANC) algorithm.
3.1 Timing Advantage from Lookahead
Figure 5(a) shows the timeline of operations in today’s ANC
systems and Figure 5(b) shows the same, but with a large
lookahead. Note that time advances in the downward di-
rection with each vertical line corresponding to different
components (namely, reference microphone, DSP processor,
speaker, etc.) The slanting solid arrow denotes the arrival of
the noise signal, while the black dots mark relevant events
on the vertical timelines. We begin by tracing the sequence
of operations step-by-step in Figure 5(a).
The noise signal first arrives at the headphone’s reference
microphone at time t1. This sample is conveyed via wire
and reaches the DSP processor at time t2, where (t2 − t1) is
the ADC (analog-to-digital converter) delay. The DSP pro-
cessor now computes the anti-noise sample and sends it to
the anti-noise speaker at t3, which outputs it after a DAC
(digital-to-analog converter) and playback delay. Ideally, the
speaker should be ready to play the anti-noise at t4 since
the actual sound wave is also passing by the speaker at this
time. However, meeting this deadline is difficult since the
distance between the reference microphone and speaker is
 dr to reach the error micro-
phone at the ear device. Since wireless signals travel at the
speed of light, a million times faster than the speed of sound,
forwarding the noise signal from the IoT relay is almost
instantaneous. Hence, lookahead can be calculated as:
2. Lookahead will help foresee macro changes in sound pro-
files, such as when different people are taking turns in
speaking. While traditional ANC incurs latency to con-
verge to new sound profiles, MUTE can cache appropriate
filters for each profile and “load” them at profile transitions.
With lookahead, profile transitions would be recognizable
in advance.
We begin with the first opportunity.
(1) Adaptive Filtering with Future Samples
(cid:4) Basic Filtering: Observe that a filter is essentially a vec-
tor, the elements of which are used to multiply the arriving
sound samples. Consider an averaging filter that performs
the average of the recent 3 sound samples – this filter can
3]. At any given time
be represented as a vector hF = [ 1
3 , 1
t, the output of the sound passing through this filter would
3x(t − 2) (which is called the
be: y(t) = 1
convolution operation “*”). This filter is called causal since
the output sample only relies on past input samples.
(cid:4) Non-Causality: Now consider the inverse of this filter
−1. This should be another vector which convolved with
hF
3x(t − 1) + 1
3x(t) + 1
3 , 1
(de − dr)
v
− dr
v
=
Tlookahead = de
v
(4)
where v is the speed of sound in air (≈ 340 m/s). Translating
to actual numbers, when (de − dr) is just 1m, lookahead is
≈ 3 ms, which is 100× larger than today’s ANC headphones.
This implies that Alice can place the IoT relay on her office
table and still benefit from wireless forwarding. Placing it
on her office door, or ceiling, only increases this benefit.
3.2 Lookahead Aware ANC Algorithm
The timing benefit discussed above is a natural outcome of
lookahead. However, we now (re)design the noise cancel-
lation algorithm to explicitly exploit lookahead. Two key
opportunities are of interest:
SpeakerwirelessDSPLookahead(a)Today’s ANC processing timeline(b) MUTEprocessing timeline with large lookaheadError Mic.SpeakerReference Mic.Eardrumt1t2t4t3wiredDSPt5t7t8t9t10Lookaheadt11Signal over wireSignal over wirelessAcoustic noise signal Anti-noise signal t1t2t4t3t5t6t7t8t9t10t12t6Reference Mic.Error Mic.Eardrume(t)e(t)SIGCOMM ’18, August 20–25, 2018, Budapest, Hungary
y(t) should give back x(t), i.e., x(t) = hF
−1 ∗ y(t). Filtering
theory says that this inverse needs to be carefully charac-
terized, since they are non-causal, unstable, or both [38, 42].
With a non-causal inverse, determining x(t) would require
y(t + k) for k > 0. Thus estimating x(t) in real time would
be difficult; future knowledge of y(t) is necessary. The phys-
ical intuition is difficult to convey concisely, however, one
way to reason about this is that x(t) originally influenced
y(t + 1) and y(t + 2), and hence, recovering x(t) would re-
quire those future values as well. In typical cases where hF is
the room’s impulse response (known to have non-minimum
phase property [43]), the future samples needed could be far
more [42, 45].
(cid:4) Adaptive Filtering: Now, let us turn to adaptive filtering
(hAF ) needed for noise cancellation. The “adaptive” compo-
nent arises from estimating the filter vector at a given time,
convolving this vector with the input signal, and comparing
the output signal against a target signal. Depending on the
error from this comparison, the filter vector is adapted so
that successive errors converge to a minimum. Since this
adaptive filter is non-causal (due to its dependence on the in-
verse filter), it would need future samples of the input signal
to minimize error. With partial or no future samples (i.e., a
truncated filter), the error will be proportionally higher. With
this background, let us now design the LANC algorithm to
fully exploit future lookahead.
(cid:4) LANC Design: Recall from Section 2 that the adaptive
se (t) ∗
filter needed for noise cancellation is hAF(t) = −h−1
hne(t) ∗ h−1
nr(t). This minimizes the error:
e(t) = hne(t) ∗ n(t) + hse(t) ∗ hAF(t) ∗ x(t)
(5)
where x(t) is the noise captured by the reference microphone,
i.e., x(t) = hnr(t) ∗ n(t). Now, to search for the optimal hAF ,
we use steepest gradient descent on the squared error e2(t).
Specifically, we adapt hAF in a direction opposite to the de-
rivative of the squared error:
(new)
AF
h
= h
(old)
AF − µ
2
∂e2(t)
∂hAF
(6)
h
(old)
AF
(new)
AF
(k) − µe(t)hse(t) ∗ x(t − k)
where µ is a parameter that governs the speed of gradient
descent. Expanding the above equation for each filter coeffi-
cient hAF(k), we have:
(k) = h
(7)
In the above equation, hse(t) is known and estimated a pri-
ori, e(t) is measured from the error microphone, and x(t) is
measured from the reference microphone.
This is where non-causality emerges. Since hAF is actually
composed of h−1
nr , the values of k in Equation 7 can be nega-
tive (k  0, implying
requires future samples of x(t). With
that the updated h
(new)
AF
S. Shen, N. Roy, J. Guan, H. Hassanieh, and R. Roy Choudhury
lookahead, our LANC algorithm is able to “peek” into the
future and utilize those sound samples to update the filter co-
efficients. This naturally results in a more accurate anti-noise
signal α(t), expressed as:
α(t) = hAF(t) ∗ x(t) =
hAF(k)x(t − k)
(8)
L
k =−N
Observe that larger the lookahead, larger is the value of N
in the subscript of the summation, indicating a better filter
inversion. Thus, with a lookahead of several milliseconds in
LANC, N can be large and the anti-noise signal can signifi-
cantly reduce error (see pseudocode in Alg. 1). In contrast,
lookahead is tens of microseconds in today’s headphones,