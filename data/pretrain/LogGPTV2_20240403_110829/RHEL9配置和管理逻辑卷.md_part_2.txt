请注意，虽然 LVM
支持将非分区磁盘用作物理卷，但建议创建一个全磁盘分区，因为在混合操作系统环境中创建不含分区的
PV 可能会有问题。其他操作系统可能会认为这些设备为空，并覆盖驱动器开头的
PV 标签。
:::
::: section
::: titlepage
# []{#managing-lvm-physical-volumes_configuring-and-managing-logical-volumes.html#creating-lvm-physical-volume_managing-lvm-physical-volumes}创建 LVM 物理卷 {.title}
:::
这个步骤描述了如何创建和标记 LVM 物理卷（PV）。
在此过程中，将 [*/dev/vdb1*]{.emphasis}、[*/dev/vdb2*]{.emphasis} 和
[*/dev/vdb3*]{.emphasis} 替换为您系统中的可用存储设备。
::: itemizedlist
**先决条件**
-   已安装 `lvm2`{.literal} 软件包。
:::
::: orderedlist
**步骤**
1.  使用以空格分隔的设备名称作为 `pvcreate`{.literal}
    命令的参数来创建多个物理卷：
    ``` literallayout
    # pvcreate /dev/vdb1 /dev/vdb2 /dev/vdb3
      Physical volume "/dev/vdb1" successfully created.
      Physical volume "/dev/vdb2" successfully created.
      Physical volume "/dev/vdb3" successfully created.
    ```
    这会在 [*/dev/vdb1*]{.emphasis}、[*/dev/vdb2*]{.emphasis} 和
    [*/dev/vdb3*]{.emphasis} 上放置一个标签，将它们标记为属于 LVM
    的物理卷。
2.  根据您的要求，使用以下命令之一查看创建的物理卷：
    ::: orderedlist
    1.  `pvdisplay`{.literal}
        命令，它为每个物理卷提供详细的多行输出。它以固定格式显示物理属性，如大小、扩展、卷组和其他选项：
        ``` literallayout
        # pvdisplay
        --- NEW Physical volume ---
          PV Name               /dev/vdb1
          VG Name
          PV Size               1.00 GiB
        [..]
        --- NEW Physical volume ---
          PV Name               /dev/vdb2
          VG Name
          PV Size               1.00 GiB
        [..]
        --- NEW Physical volume ---
          PV Name               /dev/vdb3
          VG Name
          PV Size               1.00 GiB
        [..]
        ```
    2.  `pvs`{.literal}
        命令提供了可以对其进行格式配置的物理卷信息，每行显示一个物理卷。
        ``` literallayout
        # pvs
          PV         VG  Fmt    Attr    PSize      PFree
        /dev/vdb1        lvm2           1020.00m   0
        /dev/vdb2        lvm2           1020.00m   0
        /dev/vdb3        lvm2           1020.00m   0
        ```
    3.  `pvscan`{.literal} 命令扫描系统中所有支持的物理卷 LVM
        块设备。您可以在 `lvm.conf`{.literal}
        文件中定义过滤器，以便这个命令避免扫描特定物理卷：
        ``` literallayout
        # pvscan
          PV  /dev/vdb1                      lvm2 [1.00 GiB]
          PV  /dev/vdb2                      lvm2 [1.00 GiB]
          PV  /dev/vdb3                      lvm2 [1.00 GiB]
        ```
    :::
:::
::: itemizedlist
**其他资源**
-   `pvcreate(8`{.literal} )、`pvdisplay(8)、`{.literal}
    `pvs(8)、`{.literal} `pvscan(8)`{.literal} 和 `lvm(8)`{.literal} man
    page
:::
:::
::: section
::: titlepage
# []{#managing-lvm-physical-volumes_configuring-and-managing-logical-volumes.html#removing-lvm-physical-volumes_managing-lvm-physical-volumes}删除 LVM 物理卷 {.title}
:::
如果 LVM 不再需要某个设备，您可以使用 `pvremove`{.literal} 命令删除 LVM
标签。执行 `pvremove`{.literal} 命令会将空物理卷上的 LVM 元数据归零。
::: orderedlist
**步骤**
1.  删除物理卷：
    ``` literallayout
    # pvremove /dev/vdb3
    Labels on physical volume "/dev/vdb3" successfully wiped.
    ```
2.  查看现有物理卷并验证是否已删除所需卷：
    ``` literallayout
    # pvs
      PV         VG   Fmt    Attr    PSize      PFree
    /dev/vdb1  	    lvm2           1020.00m   0
    /dev/vdb2  	    lvm2           1020.00m   0
    ```
:::
如果您要删除的物理卷当前是卷组的一部分，则必须使用 `vgreduce`{.literal}
命令将其从卷组中删除。如需更多信息，请参阅[从卷组中删除物理卷](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/configuring_and_managing_logical_volumes/managing-lvm-volume-groups_configuring-and-managing-logical-volumes#removing-physical-volumes-from-a-volume-group_managing-lvm-volume-groups){.link}
::: itemizedlist
**其他资源**
-   `pvremove(8)`{.literal} 手册页
:::
:::
:::
[]{#managing-lvm-volume-groups_configuring-and-managing-logical-volumes.html}
::: chapter
::: titlepage
# []{#managing-lvm-volume-groups_configuring-and-managing-logical-volumes.html#managing-lvm-volume-groups_configuring-and-managing-logical-volumes}第 3 章 管理 LVM 卷组 {.title}
:::
卷组(VG)是物理卷(PV)的集合，它会创建一个磁盘空间池，从中可以分配逻辑卷。
在卷组中，可用于分配的磁盘空间被分成固定大小的单元，我们称之为扩展。一个扩展就是可被分配的最小空间单位。在物理卷中，扩展被称为物理扩展。
逻辑卷被分配成与物理卷扩展大小相同的逻辑扩展。因此卷组中的所有逻辑卷的扩展大小都是一样的。卷组将逻辑扩展与物理扩展匹配。
::: section
::: titlepage
# []{#managing-lvm-volume-groups_configuring-and-managing-logical-volumes.html#creating-lvm-volume-group_managing-lvm-volume-groups}创建 LVM 卷组 {.title}
:::
此流程描述了如何使用 [*/dev/vdb1*]{.emphasis} 和
[*/dev/vdb2*]{.emphasis} 物理卷创建 LVM 卷组(VG) [*myvg*]{.emphasis}。
::: itemizedlist
**先决条件**
-   已安装 `lvm2`{.literal} 软件包。
-   创建一个或多个物理卷。有关创建物理卷的更多信息，请参阅[创建 LVM
    物理卷](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/configuring_and_managing_logical_volumes/managing-lvm-physical-volumes_configuring-and-managing-logical-volumes#creating-lvm-physical-volume_managing-lvm-physical-volumes){.link}。
:::
::: orderedlist
**步骤**
1.  创建卷组：
    ``` literallayout
    # vgcreate myvg /dev/vdb1 /dev/vdb2
     Volume group "myvg" successfully created.
    ```
    这将创建一个名为 [*myvg*]{.emphasis} 的 VG。PV
    [*/dev/vdb1*]{.emphasis} 和 [*/dev/vdb2*]{.emphasis} 是
    [*myvg*]{.emphasis} VG 的基础存储级别。
2.  根据您的要求，使用以下命令之一查看创建的卷组：
    ::: orderedlist
    1.  `vgs`{.literal}
        命令以可配置的形式提供卷组信息，每行显示一个卷组：
        ``` literallayout
        # vgs
          VG   #PV #LV #SN Attr   VSize   VFree
          myvg   4   1   0 wz--n-   3.98g 1008.00m
        ```
    2.  `vgdisplay`{.literal}
        命令以固定格式显示卷组属性，如大小、区块、物理卷数量和其他选项。以下示例显示了卷组
        [*myvg*]{.emphasis} 的 `vgdisplay`{.literal}
        命令的输出。如果没有指定卷组，则会显示所有现有卷组：
        ``` literallayout
        # vgdisplay myvg _ --- Volume group --- VG Name _myvg
          System ID
          Format                lvm2
          Metadata Areas        4
          Metadata Sequence No  6
          VG Access             read/write
        [..]
        ```
    3.  `vgscan`{.literal} 命令为卷组扫描系统中所有受支持的 LVM 块设备：
        ``` literallayout
        # vgscan
          Found volume group "myvg" using metadata type lvm2
        ```
    :::
3.  可选：通过添加一个或多个可用物理卷来提高卷组容量：
    ``` literallayout
    # vgextend myvg /dev/vdb3
    Physical volume "/dev/vdb3" successfully created.
    Volume group "myvg" successfully extended
    ```
:::
::: itemizedlist
**其他资源**
-   `pvcreate(8`{.literal} )、vgdisplay `(8)、`{.literal}
    `vgdisplay(8)、`{.literal} `vgs(8)、`{.literal}
    `vgscan(8)`{.literal} 和 `lvm(8)`{.literal} man page
:::
:::
::: section
::: titlepage
# []{#managing-lvm-volume-groups_configuring-and-managing-logical-volumes.html#combining-lvm-volume-groups_managing-lvm-volume-groups}合并 LVM 卷组 {.title}
:::
要将两个卷组合并为一个卷组，请使用 `vgmerge`{.literal}
命令。如果这两个卷的物理扩展大小相等，且两个卷组的物理卷和逻辑卷的描述符合目的卷组的限制，您可以将一个不活跃的\"源\"卷与一个活跃或者不活跃的\"目标\"卷合并。
::: itemizedlist
**步骤**
-   将不活跃卷组 [*数据库*]{.emphasis} 合并到活跃或者不活跃的卷组
    [*myvg*]{.emphasis} 中，提供详细的运行时信息：
    ``` literallayout
    # vgmerge -v myvg databases
    ```
:::
::: itemizedlist
**其他资源**
-   `vgmerge(8)`{.literal} 手册页
:::
:::
::: section
::: titlepage
# []{#managing-lvm-volume-groups_configuring-and-managing-logical-volumes.html#removing-physical-volumes-from-a-volume-group_managing-lvm-volume-groups}从卷组中删除物理卷 {.title}
:::
要从卷组中删除未使用的物理卷，请使用 `vgreduce`{.literal}
命令。`vgreduce`{.literal}
命令通过删除一个或多个空物理卷来缩小卷组的容量。这样就可以使不同的卷组自由使用那些物理卷，或者将其从系统中删除。
::: orderedlist
**步骤**
1.  如果物理卷仍在使用，则将数据从同一卷组中迁移到另一个物理卷中：
    ``` literallayout
    # pvmove /dev/vdb3
      /dev/vdb3: Moved: 2.0%
     ...
      /dev/vdb3: Moved: 79.2%
     ...
      /dev/vdb3: Moved: 100.0%
    ```
2.  如果现有卷组中的其他物理卷中没有足够的可用扩展：
    ::: orderedlist
    1.  从 [*/dev/vdb4*]{.emphasis} 创建一个新物理卷：
        ``` literallayout
        # pvcreate /dev/vdb4
          Physical volume "/dev/vdb4" successfully created
        ```
    2.  将新创建的物理卷添加到 [*myvg*]{.emphasis} 卷组：
        ``` literallayout
        # vgextend myvg /dev/vdb4
          Volume group "myvg" successfully extended
        ```
    3.  将数据从 [*/dev/vdb3*]{.emphasis} 移到 [*/dev/vdb4*]{.emphasis}
        中 ：
        ``` literallayout