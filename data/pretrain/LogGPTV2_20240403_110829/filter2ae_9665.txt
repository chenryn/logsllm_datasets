原项目地址：[Case Study of JavaScript engine
vulnerabilities](https://github.com/tunz/js-vuln-db)
项目作者：tunz
该项目收集了 JavaScript 引擎的一些经典漏洞，每条记录包括：CVE，漏洞点，漏洞类型，成因，发现者。CVE ID 对应其 PoC 代码。
### V8
  * [CVE-2013-6632](https://github.com/tunz/js-vuln-db/blob/master/v8/CVE-2013-6632.js): TypedArray, Integer Overflow, OOB, _Pinkie Pie_
  * Chrome < 31.0.1650.57 TypedArray 对象的整数溢出，导致越界访问，[参考详情](https://bugs.chromium.org/p/chromium/issues/detail?id=319117)
  * [CVE-2014-1705](https://github.com/tunz/js-vuln-db/blob/master/v8/CVE-2014-1705.js): TypedArray, Invalid Array Length, OOB, _geohot_
  * Chrome < 33.0.1750.152(Linux&Mac)， < 33.0.1750.154(Windows)，可利用`__defineGetter__` 和 `bytesLength`越界读写，[参考详情](https://bugs.chromium.org/p/chromium/issues/detail?id=351787)
  * [CVE-2014-3176](https://github.com/tunz/js-vuln-db/blob/master/v8/CVE-2014-3176.js): Array.concat, Side Effect, OOB, _lokihardt_
  * Chrome < 36.0.1985.143 释放后重用漏洞，利用 Array.concat() 执行任意代码，[参考详情](https://bugs.chromium.org/p/chromium/issues/detail?id=386988)。
  * [CVE-2014-7927](https://github.com/tunz/js-vuln-db/blob/master/v8/CVE-2014-7927.js): asm.js, Compiler, OOB, _Christian Holler_
  * Chrome < 40.0.2214.91，SimplifiedLowering::DoLoadBuffer 函数处理数据类型错误可导致越界读写，[参考详情](https://bugs.chromium.org/p/chromium/issues/detail?id=444695)
  * [CVE-2014-7928](https://github.com/tunz/js-vuln-db/blob/master/v8/CVE-2014-7928.js): Array, Optimization, _Christian Holler_
  * Google Chrome < 40.0.2214.91 未正确处理数组导致内存损坏，[参考详情](https://bugs.chromium.org/p/chromium/issues/detail?id=435073)
  * [CVE-2015-1242](https://github.com/tunz/js-vuln-db/blob/master/v8/CVE-2015-1242.js): Type Confusion, PI:EMAIL_
  * Google Chrome < 42.0.2311.90 利用类型混淆越界读写，[参考详情]()
  * [CVE-2015-6764](https://github.com/tunz/js-vuln-db/blob/master/v8/CVE-2015-6764.js): JSON, Side Effect, OOB, Pwn2Own, _Guang Gong_ , _Qihoo 360_
  * Google Chrome < 47.0.2526.73 BasicJsonStringifier::SerializeJSArray 函数可越界读写， [参考详情](https://bugs.chromium.org/p/chromium/issues/detail?id=554946)
  * [CVE-2015-6771](https://github.com/tunz/js-vuln-db/blob/master/v8/CVE-2015-6771.js): TypedArray, OOB
  * Google Chrome < 47.0.2526.73， 数组的 map 和 filter 错误处理可导致越界内存访问，[参考详情](https://chromium.googlesource.com/v8/v8/+/c227dd5734efa41e4973c834c910bb684a9e1998%5E%21/#F1)
  * [CVE-2015-8584](https://github.com/tunz/js-vuln-db/blob/master/v8/CVE-2015-8548.js): JSON, OOB
  * Google Chrome < 47.0.2526.80，通过序列化 JSON 数组在内存中越界读写，[参考详情](https://chromium.googlesource.com/v8/v8/+/a10202d1aa3cbaa3b550401bebbe34119b2d20b2%5E%21/#F1)
  * [CVE-2016-1646](https://github.com/tunz/js-vuln-db/blob/master/v8/CVE-2016-1646.js): Array.concat, Side Effect, OOB, _Wen Xu_ , _Tencent KeenLab_
  * Google Chrome < 49.0.2623.108 IterateElements 函数存在越界内存读取漏洞，[参考详情](https://bugs.chromium.org/p/chromium/issues/detail?id=594574)
  * [CVE-2016-1653](https://github.com/tunz/js-vuln-db/blob/master/v8/CVE-2016-1653.js): asm.js, TypedArray, Compiler, OOB, _Choongwoo Han_
  * Google Chrome < 50.0.2661.75 （开启 WebAssembly）asm.js 错误处理数据类型，导致越界访问，[参考详情](https://bugs.chromium.org/p/chromium/issues/detail?id=589792)
  * [CVE-2016-1665](https://github.com/tunz/js-vuln-db/blob/master/v8/CVE-2016-1665.js): asm.js, Compiler, _HyungSeok Han_
  * Google Chrome < 50.0.2661.94 在 JSGenericLowering 类中错误处理运算符，可泄漏敏感信息，[参考详情](https://bugs.chromium.org/p/chromium/issues/detail?id=606181)
  * [CVE-2016-1669](https://github.com/tunz/js-vuln-db/blob/master/v8/CVE-2016-1669.js): RegExp, Heap Overflow, Integer Overflow, _Choongwoo Han_
  * Google Chrome < 50.0.2661.102 内存分配错误，造成溢出漏洞，[参考详情](https://bugs.chromium.org/p/chromium/issues/detail?id=606115)
  * [CVE-2016-1677](https://github.com/tunz/js-vuln-db/blob/master/v8/CVE-2016-1677.js): Side Effect, Information Leak, _Guang Gong_ , _Qihoo 360_
  * Google Chrome < 51.0.2704.63 函数 TwoByteSeqStringSetChar 参数类型混淆，可导致信息泄漏[参考详情](https://bugs.chromium.org/p/chromium/issues/detail?id=602970)
  * [CVE-2016-1688](https://github.com/tunz/js-vuln-db/blob/master/v8/CVE-2016-1688.js): RegExp, _Max Korenko_
  * Google Chrome < 51.0.2704.63 正则表达式对字符串的长度处理不当，导致内存破坏，[参考详情](https://bugs.chromium.org/p/chromium/issues/detail?id=604897)
  * [CVE-2016-5129](https://github.com/tunz/js-vuln-db/blob/master/v8/CVE-2016-5129.js): Array, Side Effect, _Jeonghoon Shin_
  * Google Chrome < 52.0.2743.82 shift 函数中处理不当，导致程序崩溃，[参考详情](https://bugs.chromium.org/p/chromium/issues/detail?id=620553)
  * [CVE-2016-5172](https://github.com/tunz/js-vuln-db/blob/master/v8/CVE-2016-5172.js): Scope, _Choongwoo Han_
  * Google Chrome < 53.0.2785.113 覆写参数的作用范围，导致内存信息泄漏，[参考详情](https://bugs.chromium.org/p/chromium/issues/detail?id=616386)
##### 原项目作者尚未总结
  * [CVE-2014-3188](https://bugs.chromium.org/p/chromium/issues/detail?id=416449)
  * [CVE-2014-7931](https://bugs.chromium.org/p/chromium/issues/detail?id=442710)
  * [CVE-2015-1290](https://bugs.chromium.org/p/chromium/issues/detail?id=505374)
  * [CVE-2016-1678 (Christian Holler)](https://bugs.chromium.org/p/chromium/issues/detail?id=595259)
##### 未公开
  * [CVE-2016-5177](https://googlechromereleases.blogspot.kr/2016/09/stable-channel-update-for-desktop_29.html)
  * [CVE-2016-5198](https://crbug.com/659475)
  * [CVE-2016-5200](https://crbug.com/658114)
  * [CVE-2016-9651](https://crbug.com/664411)
  * [CVE-2016-5213](https://crbug.com/652548)
  * [CVE-2016-5219](https://crbug.com/657568)
## JavaScriptCore
  * [CVE-2016-4622](https://github.com/tunz/js-vuln-db/blob/master/jsc/CVE-2016-4622.js): Array.slice, OOB, _Samuel Groß_
##### TODO
  * [CVE-2014-1300](https://bugs.chromium.org/p/project-zero/issues/detail?id=77&can=1&q=webkit&redir=1)
  * [??](http://googleprojectzero.blogspot.kr/2014/07/pwn4fun-spring-2014-safari-part-i_24.html)
## ChakraCore
  * [CVE-2016-3386](https://github.com/tunz/js-vuln-db/blob/master/chakra/CVE-2016-3386.js): Spread Operator, Stack Overflow, _Richard Zhu_
  * [CVE-2016-7189](https://github.com/tunz/js-vuln-db/blob/master/chakra/CVE-2016-7189.js): Array.join, Information Leak, _Natalie Silvanovich_ , _Google Project Zero_
  * [CVE-2016-7190](https://github.com/tunz/js-vuln-db/blob/master/chakra/CVE-2016-7190.js): Array.map, Heap Overflow, _Natalie Silvanovich_ , _Google Project Zero_
  * [CVE-2016-7194](https://github.com/tunz/js-vuln-db/blob/master/chakra/CVE-2016-7194.js): Function.apply, Information Leak, _Natalie Silvanovich_ , _Google Project Zero_
  * [CVE-2016-7200](https://github.com/tunz/js-vuln-db/blob/master/chakra/CVE-2016-7200.js): Array.filter, Heap Corruption, _Natalie Silvanovich_ , _Google Project Zero_
  * [CVE-2016-7202](https://github.com/tunz/js-vuln-db/blob/master/chakra/CVE-2016-7202.js): Array.reverse, Overflow, _Natalie Silvanovich_ , _Google Project Zero_
  * [CVE-2016-7203](https://github.com/tunz/js-vuln-db/blob/master/chakra/CVE-2016-7203.js): Array.splice, Heap Overflow, _Natalie Silvanovich_ , _Google Project Zero_
  * [CVE-2016-7240](https://github.com/tunz/js-vuln-db/blob/master/chakra/CVE-2016-7240.js): eval, Proxy, Type Confusion, _Natalie Silvanovich_ , _Google Project Zero_
  * [CVE-2016-7241](https://github.com/tunz/js-vuln-db/blob/master/chakra/CVE-2016-7241.js): JSON.parse, Information Leak, _Natalie Silvanovich_ , _Google Project Zero_
  * [CVE-2016-7286](https://github.com/tunz/js-vuln-db/blob/master/chakra/CVE-2016-7286.js): SIMD.toLocaleString, Uninitialized Memory, _Natalie Silvanovich_ , _Google Project Zero_
  * [CVE-2016-7287](https://github.com/tunz/js-vuln-db/blob/master/chakra/CVE-2016-7287.js): Intl, Initialization, Type Confusion, _Natalie Silvanovich_ , _Google Project Zero_
* * *