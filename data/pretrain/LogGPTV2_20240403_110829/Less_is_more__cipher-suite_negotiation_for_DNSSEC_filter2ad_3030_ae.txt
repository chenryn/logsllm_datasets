suite negotiation mechanism; the new options are
underlined.
requests.
)
%
(
s
e
i
r
e
u
Q
1
0.8
0.6
0.4
0.2
0
Legend
TLD no cipher-suite
TLD w/cipher-suite
256
512
1024
Transmitted Bytes [log-scale]
Figure 6: Amount of bytes transmitted in DNSKEY
responses from TLDs, with and without support of
cipher-suite negotiation.
We measured the impact of cipher-suite negotiation on
the amount of the transmitted bytes with signed TLDs, us-
ing DNSKEY responses. The graph, plotted in Figure 6,
with cipher-suite negotiation shows three steps. Intuitively,
(cid:22)(cid:24)(cid:22)
one may expect to see an almost straight line, however, the
reason for the steps is that some domains are in a process of
key rollover for ZSK and thus use two ZSK (in addition to a
KSK). The improvement in traﬃc is the diﬀerence between
the two graphs: the upper (with cipher-suite negotiation)
and the lower (without cipher-suite negotiation).
4. OVERVIEW: DNS AND DNSSEC
The domain name system (DNS), [RFC1034, RFC1035],
is a distributed data base of Internet mappings (also called
resource records (RRs)), from domain names to diﬀerent val-
ues. The most popular and widely used mappings, [1], are
for IP addresses, represented by A type RRs, that map a
domain name to its IPv4 address, and name servers, repre-
sented by NS type RRs, that map a name server to domain
name; see [RFC1035] for a list of standard DNS mappings.
The client side of the DNS infrastructure is composed of
resolvers, which lookup records in zones by sending DNS re-
quests to corresponding name servers. The resolvers commu-
nicate to the name servers using a simple request-response
protocol (typically over UDP); for instance, (abstracting
out subtleties) to translate www.foo.bar resolvers locate the
name server ns.foo.bar, authoritative for foo.bar, and ob-
tain the IP address of the machine hosting the web server
of the website www.foo.bar, see Figure 7. Resolvers store
DNS records, returned in responses, in their caches for the
duration indicated in the Time To Live (TTL) ﬁeld of each
record set.
The resource records in DNS correspond to the diﬀerent
services run by the organisations and networks, e.g., hosts,
servers, network blocks.
Figure 7: DNS resolution process for www.foo.bar
and the involved DNS servers.
The zones are structured hierarchically, with the root zone
at the ﬁrst level, Top Level Domains (TLDs) at the sec-
ond level, and millions of Second Level Domains (SLDs) at
the third level. The IP addresses of the 13 root servers are
provided via the hints ﬁle, or compiled into DNS resolvers
software and when a resolver’s cache is empty, every resolu-
tion process starts at the root. According to the query in the
DNS request, the root name server redirects the resolver, via
a referral response type, to a corresponding TLD, under
which the requested resource is located. There are a number
(cid:22)(cid:24)(cid:23)
of TLDs types, most notably: country code TLD (ccTLD),
which domains are (typically) assigned to countries, e.g., us,
il, de, and generic TLD (gTLD), whose domains are used
by organisations, e.g., com, org, and also US government
and military, e.g., gov, mil. Domains in SLDs can also be
used to further delegate subdomains to other entities, or can
be directly managed by the organisations, e.g., as in the case
of ibm.com, google.com.
A DNSdomain is divided into zones, and includes all the
nodes of the subtree rooted at the zone. A DNS zone con-
stitutes a portion of a domain name space. A zone can be
divided into subdomains, with its own DNS name servers.
For instance, when querying the root zone for foo.bar., the
resolver will be redirected to bar. domain, via a referral
to the authoritative servers for bar. zone. When query-
ing the name servers ofbar., the resolver receives another
referral for foo.bar. zone. Notice that bar. zone does
not include subdomains, e.g., like foo.bar., but those are
delegated from bar to their name servers.
Domains and their mappings are also administered hierar-
chically; the mappings of each domain foo.bar are provided
by a name server, managed by the owner of the domain.
5. CONCLUSIONS AND FUTURE RESEARCH
DNSSEC deployment has progressed slowly and although
standardised more than 15 years ago, it is still not widely
adopted. One of the problems is that early adopters do
not obtain a security beneﬁt, worse, they are exposed to
interoperability problems and attacks. Currently, almost all
(99.9% !) of DNSSEC signatures use RSA, with 1024 bit
keys, which is already considered insecure, and the use of
2048-bit keys results in even larger DNS responses.
Signed zones do not deploy stronger ciphers due to con-
cerns for compatibility with clients. Of course, domains
could use both elliptic curve (or some other form of ‘short-
key-signatures’) together with the existing RSA signatures.
However, unfortunately, DNSSEC does not contain a ‘cipher-
suite negotiation’ mechanism in contrast to most other IETF
cryptographic standards, e.g., TLS [RFC2246]. Hence, when
a domain uses multiple algorithms (or keys), it will send all
the keys and all the signatures to the client - increasing,
rather then decreasing, the length of the responses. The
same problem may arise, when domains consider using larger
RSA keys or a more secure algorithm, for improved security,
or to change keys periodically. Hence, zones are likely to
continue using the old keys and cipher, for a long time or
forever, due to the concern of interoperability with resolvers.
All this implies obstacles to deployment of more appro-
priate cryptography, resulting in large DNSSEC responses,
interoperability problems, abuse in reﬂection ampliﬁcation
DoS attack and weak security.
In this work, we reviewed the central security and deploy-
ment problems with the current DNSSEC design. Several
of these stem from the same problem essentially: DNSSEC
requires transmission of non-standard DNS packets, in par-
ticular, signiﬁcantly larger than standard DNS packets (lim-
ited to 512 bytes). We outline the problems and propose a
design for a transport layer cipher-suite negotiation mecha-
nism, to alleviate them. Our cipher-suite negotiation allows
domains to use multiple keys and algorithms while sending
only these needed by the resolvers. We performed a study
showing that our design would signiﬁcantly reduce the over-
head in communication to TLDs and top Alexa domains
by reducing the (unnecessary) DNS traﬃc, and by avoiding
fragmentation and transition to TCP for large responses.
This work focused on negotiation of DNSSEC signature
algorithms. There are several proposals for additional cryp-
tographic defenses to DNS, which will provide conﬁdential-
ity and privacy in addition to authenticity; see criticism and
discussion in [18]. We believe that our approach can be
extended to support also negotiation of the relevant conﬁ-
dentiality algorithms, e.g., encryption.
Acknowledgements
This research was supported by grant 1354/11 from the Is-
raeli Science Foundation (ISF), by the Ministry of Science
and Technology, Israel, by the German Federal Ministry of
Education and Research (BMBF) within EC SPRIDE, by
the Hessian LOEWE excellence initiative within CASED,
and was partially supported by the TENACE PRIN Project
(n. 20103P34XC) funded by the Italian Ministry of Educa-
tion, University and Research.
6. REFERENCES
[1] H. Gao, V. Yegneswaran, Y. Chen, P. Porras,
S. Ghosh, J. Jiang, and H. Duan. An empirical
reexamination of global dns behavior. In Proceedings
of the ACM SIGCOMM 2013 conference on
SIGCOMM, pages 267–278. ACM, 2013.
[2] F. Guo, J. Chen, and T. cker Chiueh. Spoof Detection
for Preventing DoS Attacks against DNS Servers. In
ICDCS, pages 37–37. IEEE Computer Society, 2006.
[3] A. Herzberg and H. Shulman. Security of patched
DNS. In Computer Security - ESORICS 2012 - 17th
European Symposium on Research in Computer
Security, Pisa, Italy, September 10-12, 2012.
Proceedings, pages 271–288, 2012.
[4] A. Herzberg and H. Shulman. Fragmentation
Considered Poisonous: or
one-domain-to-rule-them-all.org. In IEEE CNS 2013.
The Conference on Communications and Network
Security, Washington, D.C., U.S. IEEE, 2013.
[5] A. Herzberg and H. Shulman. Vulnerable delegation of
DNS resolution. In Computer Security - ESORICS
2013 - 18th European Symposium on Research in
Computer Security, Egham, UK, September 9-13,
2013. Proceedings, pages 219–236, 2013.
[6] A. Herzberg and H. Shulman. DNS Authentication as
a Service: Preventing Ampliﬁcation Attacks. In ACM
Annual Computer Security Applications Conference
(ACM ACSAC), December 2014.
[7] A. Herzberg and H. Shulman. Negotiating DNSSEC
Algorithms Over Legacy Proxies. In Cryptology and
Network Security, 13th International Conference,
(CANS) 2014, Heraklion, Crete, Greece, October
22-24, 2014. Proceedings, 2014.
[8] A. Herzberg and H. Shulman. Retroﬁtting Security
into Network Protocols: The Case of DNSSEC.
Internet Computing, IEEE, 18(1):66–71, 2014.
[9] A. Herzberg and H. Shulman. Cipher-Suite
Negotiation for DNSSEC: Hop-by-Hop or End-to-End?
(to appear) Internet Computing, IEEE, 2015.
[10] Internet Assigned Numbers Authority (IANA).
Domain Name System Security (DNSSEC) Algorithm
Numbers.
http://www.iana.org/assignments/
dns-sec-alg-numbers/dns-sec-alg-numbers.xhtml,
March 2014.
[11] T. Jager, K. G. Paterson, and J. Somorovsky. One bad
apple: Backwards compatibility attacks on
state-of-the-art cryptography. In Proceedings of the
Network and Distributed System Security Symposium
(NDSS), 2013.
[12] W. Lian, E. Rescorla, H. Shacham, and S. Savage.
Measuring the Practical Impact of DNSSEC
Deployment. In Proceedings of USENIX Security,
2013.
[13] N. Mavrogiannopoulos, F. Vercauteren, V. Velichkov,
and B. Preneel. A cross-protocol attack on the TLS
protocol. In T. Yu, G. Danezis, and V. D. Gligor,
editors, ACM Conference on Computer and
Communications Security, pages 62–72. ACM, 2012.
[14] D. Migault, C. Girard, and M. Laurent. A
performance view on dnssec migration. In Network
and Service Management (CNSM), 2010 International
Conference on, pages 469–474. IEEE, 2010.
[15] National Institute of Standards and A. N. T. D.
Technology. Estimating Industry IPv6 and DNSSEC
External Service Deployment Status. http://fedv6-
deployment.antd.nist.gov/cgi-bin/generate-com.
[16] E. Rescorla. SSL and TLS: designing and building
secure systems, volume 1. Addison-Wesley Reading,
2001.
[17] C. Rossow. Ampliﬁcation Hell: Revisiting Network
Protocols for DDoS Abuse. In Proceedings of the
Network and Distributed System Security (NDSS)
Symposium, February 2014.
[18] H. Shulman. Pretty Bad Privacy: Pitfalls of DNS
Encryption. In Proceedings of the 13th annual ACM
workshop on Privacy in the electronic society, WPES
’14, 2014.
[19] H. Shulman and M. Waidner. Fragmentation
Considered Leaking: Port Inference for DNS
Poisoning. In Applied Cryptography and Network
Security (ACNS), Lausanne, Switzerland. Springer,
2014.
[20] A. Studer and A. Perrig. The Coremelt Attack. In
M. Backes and P. Ning, editors, ESORICS, volume
5789 of Lecture Notes in Computer Science, pages
37–52. Springer, 2009.
[21] R. Tzakikario, D. Touitou, G. Pazi, et al. Dns
anti-spooﬁng using udp, Nov. 17 2009. US Patent
7,620,733.
(cid:22)(cid:24)(cid:24)