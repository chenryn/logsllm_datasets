资源创建所需的时间。
类型 响应首部
基本语法 Retry-After: (HTTP-date | delta-seconds)
举例 Retry-After: Tue, 3 Oct 1997 02:15:31 GMT
Retry-After: 120
注9：更多有关服务器重定向响应的信息参见表3-8。
HTTP首部参考 ｜ 549
Server
Server首部与User-Agent首部类似。它为服务器提供了一种向客户端标识自己
的方式。它的值就是服务器名字和一个可选的服务器注释。
Server首部是用来识别服务器软件的，而且包含了与软件有关的附加注释，所以
其格式比较随意。如果编写的软件与服务器标识自己的方式有关，就应该测试服务
器软件，看看它会发回什么内容，因为这些标记会随软件及其发布版本的不同而有
所不同。
像User-Agent首部一样，如果较老的代理或网关在Server首部中插入了相当于
Via首部的内容，千万不要感到吃惊。
类型 响应首部
基本语法 Server: 1* (product | comment)
举例 Server: Microsoft-Internet-Information-Server/1.0
Server: Websitepro/1.1f (s/n wpo-07d0)
Server: apache/1.2b6 via proxy gateway CERN-HTTPD/3.0
libwww/2.13
Set-Cookie
525 Set-Cookie首部是Cookie首部的搭档。第11章介绍了这个首部的用法。
类型 扩展响应首部
基本语法 Set-Cookie: command
举例 Set-Cookie: lastorder=00183; path=/orders
Set-Cookie: private_id=519; secure
Set-Cookie2
Set-Cookie2首部是对Set-Cookie首部的扩展。第11章详细了探讨了这个首部
的用法。
类型 扩展响应首部
基本语法 Set-Cookie2: command
举例 Set-Cookie2: ID="29046"; Domain=".joes-hardware.com"
Set-Cookie2: color=blue
TE
TE首部的名字起得不太好（本应该将其命名为Accept-Transfer-Encoding），
550 ｜ 附录C
它的功能与Accept-Encoding首部类似，但它是用于传输编码的。TE首部还可
以用来说明客户端能否处理位于分块编码的响应拖挂中的首部。更多有关TE首部、
分块编码和拖挂的内容参见第15章。
类型 请求首部
注释 如果这个值为空，就只接受分块传输编码。特定标记“trailers”说明分
块响应中可以接受Trailer首部。
基本语法 TE: # (transfer-codings)
transfer-codings= "trailers" | (transfer-extension
[accept-params])
举例 TE:
TE: chunked
Trailer
Trailer首部用于说明报文拖挂中提供了哪些首部。第15章详细说明了分块编码
和拖挂。
类型 通用首部 526
基本语法 Trailer: 1#field-name
举例 Trailer: Content-Length
Title
Title首部不像人们所期望的那样，会给出实体标题的规范化首部。这个首部是早
期HTTP/1.0扩展的一部分，主要用于HTML页面，这些HTML页面有着服务器可
以使用的明确的标题标记。但即使不是大部分，也有很多Web媒体类型没有便捷的
标题解析手段，这个标题的用处有限。因此，尽管网络上一些比较老的服务器仍然
在忠实地发送这个首部，但它从未成为官方规范。
类型 响应首部
注释 RFC 2616中没有定义 Title首部。最早是在HTTP/1.0草案（http://
www.w3.org/Protocols/HTTP/HTTP2.html）中定义的，但之后就从官方
规范中删除了。
基本语法 Title: document-title
举例 Title: CNN Interactive
Transfer-Encoding
如果要通过某些编码来安全地传送HTTP报文主体，报文中就要包含Transfer-
HTTP首部参考 ｜ 551
Encoding首部。它的值是一个对报文主体执行过的编码的列表。如果进行了多种
编码，就将其按序排列。
Transfer-Encoding首部与Content-Encoding首部不同，因为服务器或其他中
间应用程序是通过执行Transfer-Encoding对要传输的报文进行编码的。
第15章介绍过传输编码。
类型 通用首部
基本语法 Transfer-Encoding: 1# transfer-coding
举例 Transfer-Encoding: chunked
UA-(CPU, Disp, OS, Color, Pixels)
这些User-Agent首部是非标准的，现在也不常见了。它们提供了客户端机器的相
527 关信息，以便服务器更好地进行内容选择。比如，如果服务器知道用户机器只有一
个8位彩色显示器，服务器就可以选择适合那类显示器的图片了。
有些首部给出了与客户端相关的信息，不使用这些首部就无法获知这些信息。所有
这样的首部都有一些安全方面的隐患（更多信息参见第14章）。
类型 扩展请求首部
注释 RFC 2616没有定义这些首部，而且不推荐使用这些首部。
基本语法 "UA" "-" ("CPU" | "Disp" | "OS" | "Color" | "Pixels")
":" machine-value
machine-value = (cpu | screensize | os-name |display-
color-depth)
举例 UA-CPU: ×86 客户端机器的CPU
UA-Disp: 640, 480, 8 客户端显示器的尺寸和色彩深度
UA-OS: Windows 95 客户端机器的操作系统
UA-Color: color8 客户端显示器的色彩深度
UA-Pixels: 640×480 客户端显示器的尺寸
Upgrade
Upgrade首部为报文发送者提供了一种手段，使其指定另一种可能完全不同协议并
将此意愿向外广播。比如，HTTP/1.1客户端可以向服务器发送一条HTTP/1.0请求，
其中包含了值为“HTTP/1.1”的Update首部，这样客户端就可以测试一下服务器
是否也使用HTTP/1.1了。
552 ｜ 附录C
如果服务器也可以使用HTTP/1.1，就可以发送一条适当的响应，让客户端知道可以
使用新的协议。这样就提供了一种切换使用其他协议的有效方式。现在大部分服务
器都只兼容HTTP/1.0，通过这种策略，在判定服务器确实能够使用HTTP/1.1之前，
客户端就不会用很多的HTTP/1.1首部骚扰服务器了。
服务器发送101 Switching Protocols响应时，必须包含这个首部。
类型 通用首部
基本语法 Upgrade: 1# protocol
举例 Upgrade: HTTP/2.0
User-Agent
客户端应用程序用User-Agent首部来标识其类型，与服务器的Server首部类似。
它的值就是应用程序的名称，可能还会有一个描述性注释。 528
这个首部的格式比较随意。它的值会随客户端应用程序和发布版本的不同而有所不
同。有时这个首部甚至会包含一些有关客户端机器的信息。
与Server首部一样，如果较老的代理或网关应用程序在User-Agent首部中插入
了与Via首部等效的内容，请不要感到惊奇。
类型 请求首部
基本语法 User-Agent: 1* (product | comment)
举例 User-Agent: Mozilla/4.0 (compatible; MSIE 5.5; Windows
NT 5.0)
Vary
服务器通过Vary首部来通知客户端，在服务器端的协商中会使用哪些来自客户端
请求的首部。10它的值是一个首部列表，服务器会去查看这些首部，以确定将什么
内容作为响应发回给客户端。
根据客户端Web浏览器特性来发送特定HTML页面的服务器就是一例。为某个
URL发送这些特定页面的服务器会包含一个Vary首部，以说明它是查看了请求的
User-Agent首部之后，才决定发送什么内容作为响应的。
代理缓存也会使用Vary首部。更多有关Vary首部与已缓存的HTTP响应关联方式
的信息参见第7章。
注10：更多与内容协商有关的内容参见第17章。
HTTP首部参考 ｜ 553
类型 响应首部
基本语法 Vary: ("*" | 1# field-name)
举例 Vary: User-Agent
Via
Via首部用于在报文经过代理和网关时对其进行跟踪。这是一个信息首部，通过它
可以看出哪些应用程序在对请求和响应进行处理。
报文在向客户端或服务器传输的途中经过某个HTTP应用程序时，这个应用程序可
以通过Via首部对通过它传输的报文进行标记。这是个HTTP/1.1首部，而很多较
老的应用程序会在请求和响应的User-Agent或Server首部插入类似Via的字
符串。
如果报文是通过多个中间应用程序传输的，那么每个应用程序都会向其Via字符串
529 中附加一些内容。必须通过HTTP/1.1代理和网关来插入Via首部。
类型 通用首部
基本语法 Via: 1# (received-protocol received-by [comment])11
举例 Via: 1.1 joes-hardware.com ( Joes-Server/1.0)
上面这个例子说明报文是通过运行在机器joes-hardware.com上的Joes的服务器软
件1.0版传输的。Via首部的格式应该如下所示：
HTTP-Version machine-hostname (Application-Name-Version)
Warning
Warning首部可以给出更多与请求过程中所发生情况有关的信息。它为服务器提供
了一种手段，可以发送除状态码或原因短语之外的其他信息。HTTP/1.1规范中定义
了以下几种警告代码。
• 101响应过时了
当知道一条响应报文已过期时（比如，原始服务器无法进行再验证时），就必须包含
这条警告信息。
• 111再验证失败
如果缓存试图与原始服务器进行响应再验证，但由于缓存无法抵达原始服务器造成
了再验证失败，那就必须在发给客户端的响应中包含这条警告信息。
注11：完整的Via头部语法参见HTTP/1.1规范。
554 ｜ 附录C
• 112断开连接操作
通知性警告信息。如果缓存到网络的连接被删除了就应该使用此警告信息。
• 113试探性过期
如果新鲜性试探过期时间大于24小时，而且返回的响应使用期大于24小时，缓存
中就必须包含这条警告信息。
• 199杂项警告
收到这条警告的系统不能使用任何自动响应。报文中可能，而且很可能应该包含一
个主体，其中携带了为用户提供的额外信息。
• 214使用了转换
如果中间应用程序执行了任何会改变响应内容编码的转换，就必须由任意一个中间
应用程序（比如代理）来添加这条警告。
• 299 持久杂项警告
接收这条警告的系统不能进行任何自动的回应。错误中可能包含一个主体部分，它
为用户提供了更多的信息。
类型 响应首部
基本语法 Warning: 1# warning-value
举例 Warning: 113
530
WWW-Authenticate
WWW-Authenticate首部用于401 Unauthorized响应，向客户端发布一个质询认证
方案。第14章深入讨论了WWW-Authenticate首部及其在HTTP基本质询/响应
认证系统中的使用方法。
类型 响应首部
基本语法 WWW-Authenticate: 1# challenge
举例 WWW-Authenticate: Basic realm="Your Private Travel
Profile"
X-Cache
X开头的都是扩展首部。Squid用X-Cache首部来通知客户端某个资源是否可用。
类型 扩展响应首部
举例 X-Cache: HIT
HTTP首部参考 ｜ 555
X-Forwarded-For
很多代理服务器（比如，Squid）会用这个首部来说明某条请求都被转发给了谁。与
前面提到的Client-ip首部类似，这个请求首部说明了请求是从哪个地址发出的。
类型 扩展请求首部
基本语法 X-Forwarded-For: addr
举例 X-Forwarded-For: 64.95.76.161
X-Pad
这个首部用来解决某些浏览器中与响应首部长度有关的bug。它在响应报文的首部
531 填充了一些字节，以解决这个bug。
类型 扩展通用首部
基本语法 X-Pad: pad-text
举例 X-Pad: bogosity