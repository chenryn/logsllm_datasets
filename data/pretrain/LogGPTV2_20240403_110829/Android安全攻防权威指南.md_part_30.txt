$/:oznBeweTtous
这个例子的结果显示DNS服务器（TCP和UDP端口53）和DHCP服务器（UDP端口67）
被暴露在网络上。部署一个热点显著扩大了Android设备的攻击面，如果一个Wi-Fi热点可以被
不受信任的用户访问到，那么他们可以达到这些端点甚至更多。
注意零售设备经常会包含更多功能，同时暴露更多的网络服务。三星的Kies和摩托罗拉的
DLNA是其申的两个例子，它们对Android系统进行了OEM定制。
前面已经提到过，由于防火墙和NAT技术的使用，网络服务经常是无法达到的。但是如果
攻击者成为了目标Android设备的网络邻居，那么这些障碍就自然消除了。此外，还有一些公开
方法可以使用UPnP和NAT-PMP等协议，绕过NAT所提供的类防火墙保护机制，这些协议可以
让攻击者重新暴露出设备的网络服务及其关联的攻击面。
5.3.4移动技术
到目前为止，我们都在关注普遍存在于连入因特网设备的攻击面。移动设备通过移动通信暴
露了其他的远程攻击面，包括通过短消息服务（SMS）与多媒体消息服务（MMS）所暴露的攻
击面。这些类型的消息以运营商的移动网络作为传输媒介，从一个节点发送至另一个节点。因此
SMS和MMS的攻击面通常不需要网络相邻，也不需要任何的用户交互即可达到。
使用SMS和MMS消息作为攻击向量还可以达到其他几个攻击面。例如，MMS消息中可以
包含一些多媒体内容。面其他一些协议也实现在SMS协议之上，无线应用协议（WAP）就是这
样一个例子。WAP又支持消息推送以及几个其他协议。推送消息在未经请求的情况下发送到设
备上。一种被实现为WAP推送消息的请求类型是服务装载（SL）请求，这个请求允许订阅者的
手机请求URL，有时都无需用户交互。这种途径作为一种有效的攻击向量，能够使客户端攻击
面转变为远程攻击面。
2012年，RaviBorgaonkar在阿根廷的布宜诺斯艾利斯市举行的EkoParty上演示了针对三星
Android设备的远程攻击。具体面言，他使用了SL消息来调用非结构化补充服务数据（USSD）
---
## Page 131
5.3远程攻击面115
业务。USSD业务是用来允许运行商与GSM设备执行充值、查看账户余额、语音邮件通知等操
作的。但当三星设备接收到这样一条SL消息后，它无需用户交互就打开了默认浏览器。当浏览
器加载后，它便处理Ravi准备的包含儿个tel://URL的页面。这些URL随后导致USSD代码自
动输人到电话拨号程序中。在这时，许多设备就在代码完全输人后自动处理这些代码。某些设备
需要用户按下发送键，这是正确的处理方式。三星设备中的几个特别邪恶的USSD代码被用来演
示了这种攻击的严重性。第一个代码可以通过重复地尝试修改个人解锁密钥（PUK）来损坏用户
的SIM卡。在10次失败后，SIM卡会被永久性地禁用，用户只能重新购买新卡。另一个代码可
以导致手机立即进行出厂重置。这两个操作都不需要任何的用户交互。这个演示案例非常有效地
说明了通过SMS及其上层协议进行攻击的威力。
关于运用SMS暴露攻击面的更多内容将在第11章中介绍。
5.3.5客户端攻击面
正如先前提过的，现今网络的一般配置屏蔽了许多传统的远程攻击面。同时，许多客户端应
用对它们通信的服务器是非常信任的。基于这样的事实，攻击者已经很大程度上将关注点转移到
客户端软件攻击面中存在的安全漏洞。信息安全从业者称之为“客户端攻击面”。
到达这些攻击面，通常依赖于潜在目标发起动作，比如访问一个网站。然面，一些攻击技术
可以绕开这一限制。路径上的攻击者可以在大多数场景中非常容易地移除掉这一限制，只需把他
们的攻击注人到正常流量中即可。一个案例是“水坑式”攻击，即先攻陷目标经常访问的网站，
然后等待目标访问。
尽管要达到客户端攻击面并不容易，但是攻击者可以将他们的“瞄准镜”设置得更加精确。
举例来说，使用电子邮件向量的攻击经过特意构造后可以发送给一个目标或是一个目标人群。通
过源地址检查或指纹识别，路径上的攻击者也可以将攻击目标限定到他们的意向群体。这是客户
端攻击面攻击方式的一个强大属性。
Android设备是主要用来消费和展示数据的，因此它们只会暴露极少的直接远程攻击面，绝
大多数的攻击面是通过客户端应用暴露的。事实上，在Android上的许多客户端应用会自动地代
表用户发起一些操作，例如，电子邮件和社交网络类客户端会例行地对服务器进行轮询，查看是
否有新的消息。当找到新的消息条目时，它们会处理这些条目，并通知用户有新消息等待查看。
这是另一种客户端攻击面无需用户交互面直接暴露的方式。本节后续内容将详细讨论Android客
户端应用所暴露的各种不同攻击面。
1.浏览器攻击面
现代Web测览器已经成为功能最为强大的客户端应用代表，它们支持一大堆的Web技术，
同时也作为Android设备支持其他技术的一个访间“网关”。支持的万维网技术从最简单的HTML，
到基于众多JavaScriptAPI创建的功能极其复杂和丰富的Web应用。除了谊染和执行应用逻辑之
外，浏览器进程还支持一些底层协议，如HTTP和FTP。所有这些特性都是由绝对数量惊人的后
台代码实现的，而其中每个组件（经常是以第三方项目的方式集成）都代表着它自己的一个攻击
---
## Page 132
116第5章理解Android的攻击面
面。本小节后续部分将介绍浏览器易受攻击的各种攻击向量与安全漏洞类型，并讨论Android设
备中普遍存在的浏览器引蒙中的攻击面。
针对Web浏览器的成功攻击可以通过几种方式实施，其中最为普遍的方式是诱导用户访问
一个在攻击者控制中的URL。这种方式很可能是最为普遍的，因为它的渠道非常多样化。攻击
者可以非常容易地通过电子邮件、社交媒体、即时消息或其他途径来分发URL。另一种方式是
过”攻击。在特权位置（比如在路径上，或是逻辑网络相邻）的攻击者都可以随意地注入攻击内
容。这些攻击方式经常被称为中间人（MiM）攻击。无论是使用哪个向量来达到浏览器，底层
的安全漏润类型才是更为重要的。
在一个应用中安全地处理来自多个非信任源的内容是非常具有挑战性的。浏览器试图通过域
名将一个站点的内容与另一站点的内容进行隔离访问。这一控制机制带来了几种几乎全新类型的
安全漏洞，如跨站脚本（XSS）和跨站请求伪造（CSRF或XSRF）。此外，浏览器处理并呈现来
自多个不同信任级别的内容，这也催生了跨区域（cross-zone）攻击。例如，一个网站不应该从
目标计算机系统中读取任意的文件然后返回给攻击者，然而，之前发现的区域提升攻击已经让这
种攻击方式变为可能。这里所列的绝不是能够影响浏览器安全漏洞类型的完整列表。对这些安全
漏洞的详尽讨论已经远远超出了本节的范围。许多书籍，包括TheTangledWeb和TheBrowser
Hacker3Handbook，完全关注于Web浏览器攻击，是更深入探索这一领域的推荐阅读书籍。
直到Android4.1版本，设备出厂时都只预装一个浏览器—基于WebKit内核的Android浏
览器。在2012年Nexus7和Nexus4发布时，谷歌开始将基于Chromium内核的Android版Chrome
作为默认浏览器，但同时也预装了Android浏览器。在最近的原生Android版本中，Chrome是呈
现给用户的唯一浏览器。然面传统的Android浏览器内核仍然存在，并被第三方应用所使用，我
（libwebcore.so）切换到基于Chromium内核引擎（libwebviewchromium.so）。
Android版Chrome 与其他两个引擎的主要区别在于，Android版Chrome通过GooglePlay获
取更新，面Webkit引擎和Chromium引擎则通过Android框架层暴露给应用，被集成到固件ROM
中，只能通过固件升级进行更新。这一不利条件使得这两个引擎仍然暴露于一些已公开被露的安
对一个特定浏览器引擎的攻击面进行枚举，可以通过如下几种方式。每个引擎支持的特性集
合有着细微差别，因此暴露的攻击面也会有些许差别。因为几乎所有输人都是不可信的，所以几
乎每个浏览器特性都构成了一个攻击面。一个很好的起点是调查分析标准化文档中指定的功能。
例如，HTML和SVG文档规范中讨论了多个值得深入分析的特性。那些跟踪每个浏览器引擎中
实现了哪些特性的网站，对于这个过程是非常有价值的。此外，Android系统中的默认测览器引
攀是开源的，通过深人分析引擎源码来直鹅浏览器攻击面的“免子洞”也是可行的。
更深人的攻击面存在于浏览器支持的各种特性的实现层面。遗撼的是，枚举这些第二层次的
①其简体中文版（Web之周：现代Web应用安全指南）已由机械工业出版社2013年出版，—编者注
---
## Page 133
5.3选程攻击面117
攻击面非常消耗人力。为了简化工作，研究者倾向于基于某些特性来进一步分类攻击面，比如某
些攻击面可以在JavaScript禁用后进行运用，而有些不能。一些功能（如CSS和其他技术）以非
常复杂的方式进行交互。另一个很能说明问题的例子是通过JavaScript操纵文档对象模型
（DOM）。攻击者提供的脚本可以在加载时或加载后动态地修改网页的结构。总而言之，浏览器
的复杂性为探索其中的攻击面留下了充分的想象空间。
本书后面几章将详细介绍如何对Android系统中的浏览器进行模测试（第6章）、调试（第
7章）和攻击利用（第8章和第9章）。
2.Web驱动的移动应用
移动设备中绝大多数的应用实际上只是基于Web后端技术的客户端。在过去，开发者在TCP
或UDP上层创建自已的协议，让他们的客户端与服务器进行相互通信。面现在，随着标准化协
议、库和中间件的繁荣发展，几乎所有应用都在使用Web服务、XMLRPC等基于Web的技术。
如果你的移动应用可以使用与Web前端相同的现有Web服务AP1，为什么还要自己开发协议呢？
因此，大多数针对流行Web服务的移动应用，如 Zipcar、Yelp、Twitter、Dropbox、Hulu、Groupon
和Kickstarter等，都使用了这种设计。
移动开发者通常信任系统的另一端是正常操作的，也就是说，客户端和服务器都认为对方不
是恶意的。然而遗憾的是，事实并非如此。虽然有一些方法可以用来提升客户端和服务器之间的
信任级别，特别是对抗路径上的攻击者与逻辑相邻的攻击者，但是服务器水远不能假设客户端是
完全可信的。同时，客户端也永远不能假设它所对话的服务器是合法的，而是应该进行完备的认
证机制，以确保服务器确实是合法的。
大多数的此类认证都会使用 SSL或TLS，而诸如证书锁定（certificate pinning）之类的技术
可以进一步帮助防御假冒CA（证书授权）等攻击。然而是否恰当地利用这些技术则完全取决于
移动应用开发者，这使得很多应用并没有得到充分的保护。例如，2008年来自两所德国高校的
组研究人员发表了篇题为“Why Eve and Mallory Love Android:An Analysis of Android SSL
(In)Security（为什么Eve和Mallory喜欢Android：对AndroidSSL（不）安全性的分析）的论文。
这篇论文记录了研究人员对Android应用中SSL验证状态的调查发现。他们的研究发现，Google
Play市场上的所有应用中有8%使用SSL库的方式并不安全，由于对SSL/TLS证书的验证不充分，
这些应用会轻易地被中间人攻击。
当然，每个Web驱动的移动应用所暴露的攻击面不尽相同。一个特别危险的例子是流行的
Twitter客户端。Twitter是一个基于Web的社交媒体平台，但有多款Android应用客户端。这
些应用经常使用WebView（在Android框架层中暴露的一个构件）来谊染富媒体内容，以包含
在推文（tweet）中。例如，大部分Twitter客户端会自动呈现（render）内嵌的图片。这代表着
一个显著的攻击面，在底层图像解析库中的安全漏润可能会导致设备被攻陷。另外，Twitter
用户经常会分享指向其他有趣Web内容的链接，而点开这些链接的好奇用户将会面临传统浏览
器攻击的威胁。此外，许多Twitter客户端订阅了推送消息（服务器通过推送消息提供新数据），
或者经常轮询服务器来获取新数据。这一设计，将客户端应用变成无需任何用户交互即可被远
程攻击的目标。
---
## Page 134
118第5章理解Android的攻击面
3.广告网络
广告网络是Android应用生态圈中非常重要的一环，经常被那些开发免费移动应用的开发者
所使用。在这些应用中，开发者会添加另外的代码库，在必要的时候调用它们来显示广告。在这
些行为的背后，应用开发者有一个广告账户，并基于不同的标准（如广告的显示次数）获取报酬。
对于特别流行的应用（如《愤怒的小乌》）面言，这种模式的收益很不错，因此被应用开发者采
用并不稀奇。
广告网络代表着一个非常有趣但又有巨大潜在风险的领地，有如下几个原因。用来星现广告
的功能通常基于一个嵌人式浏览器引擎（WebView）.因此传统的浏览器攻击对于这些应用都是
存在的，但一般只能通过中间人攻击向量实施。与传统浏览器不同，这些WebView组件经常暴
露出额外的攻击面，这些供给面可以利用Java类型的反射攻击进行远程攻破。广告网络框架尤
为可怕，因为合法广告商也可能利用这些弱点来控制大量设备。本书不会介绍这种类型的攻击，
除了远程代码执行的风险，广告框架还会对隐私构成显著威胁。许多广告框架已经被发现搜集
讨厌的东西。例如，一个广告框架可能会搜集用户通讯录中的电子邮件地址，并将它们卖给垃圾邮
件发送者，之后这些用户就会收到大量不请自来的垃圾邮件。尽管比起对Android设备的完全攻陷
这并不算太严重，但是也不应忽视。有时只需获知用户的位置或通讯录，攻击者就足以达成目标。
4.媒体与文档处理
Android包含了大量非常流行并经过仔细审查的开源程序库，其中许多是用来处理富媒体内
容的。libpng和 libjpeg等程序库十分常用，几乎所有需要星现PNG 和 JPEG图片的地方都会分别
用到它们。Android也不例外。这些程序库代表着一个显著的攻击面，因为它们所处理的非可信数
据数量庞大。正如在5.3.5节第2小节讨论的，Twitter客户端经常会自动呈现图片。在这种情况下，
对于这些组件的攻击可能会导致无需用户交互的远程攻破。虽然这些程序库经过了仔细审查，但
这并不意味着它们没有安全漏洞。在过去两年里，人们在这两个程序库中发现过重大安全漏洞。
另外，一些OEM的Android设备在出厂时会自带文档阅读和编辑工具。例如，在2012年的
MobilePwn2Own竞赛中，三星Galaxy S3中自带的 PolarisOffice应用被人成功利用来对设备进
行远程代码执行。在这个竞赛中使用的攻击向量是近场通信（NFC），这一技术我们将在5.4.1目
第5条中讨论。
5.电子邮件
子邮件也可以用作发起浏览器攻击的攻击向量。事实上，Android的电子邮件客户端往往基于一
个配置受限的浏览器引擎，具体而言，电子邮件客户端不支持JavaScript和其他脚本内容。这也
就是说，现代电子邮件客户端只会呈现一部分富媒体内容，如标记语言和图片等。此外，电子邮
件消息也可以包含附件，面附件在其他平台上一直是个麻烦之源。举例来说，这些附件可以用来
攻击像PolarisOffice这样的应用。实现这些功能的代码是未来的一个有趣的研究领域，面且似乎
破探索得相对较少。
---
## Page 135
5.3选程攻击面119
5.3.6谷歌的基础设施
Android设备尽管强大，但很多功能依赖于云服务。这些云服务后台的基础设施中有相当大
比例是由谷歌托管的。这些服务提供的功能，从简单的联系人同步、Gmail电子邮件，到复杂的
远程管理特性。这样，这些云服务呈现出一个有趣的攻击面，虽然普通攻击者通常难以达到。这
些服务中许多都是通过谷歌的单点登录（SSO）系统进行认证的，面这给滥用创造了可能性，因
为从一个应用盗取的认证凭据可以用来访问另一个应用。本节将讨论几个相关的后台基础设施组
件，以及如何使用它们远程攻破Android设备。
1. Google Play商店
谷歌发布Android应用等内容的官方平台是GooglePlay商店。用户可以在上面购买音乐、
电影、电视节目、图书、杂志、应用，甚至Android设备。绝大部分内容都可以直接下载，立即
在选定设备中使用。2011年年初，谷歌开放了一个用来访问GoolgePlay商店的Web站点。2013
年年底，谷歌又增加了一个称为Android设备管理器的远程设备管理组件。作为一个享有特权和
信任的角色，GooglePlay商店成为攻击者考虑攻击Android设备时最关注的基础设施。事实上，
GooglePlay商店已被多次攻击，接下来详细介绍。
2.恶意应用
GooglePlay商店中的大多数内容来自非信任源，这代表着另一个非常重要的远程攻击面。
也许最好的例子就是Android应用。很显然，Android应用中含有可以直接在Android设备上执行
的代码，因此，安装一款应用就等同于授予应用开发者任意代码执行权限（尽管是在Android用