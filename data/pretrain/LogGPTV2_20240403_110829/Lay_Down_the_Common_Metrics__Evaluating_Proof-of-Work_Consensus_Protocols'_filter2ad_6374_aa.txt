title:Lay Down the Common Metrics: Evaluating Proof-of-Work Consensus Protocols'
Security
author:Ren Zhang and
Bart Preneel
2019 IEEE Symposium on Security and Privacy
Lay Down the Common Metrics: Evaluating
Proof-of-Work Consensus Protocols’ Security
Ren Zhang
Nervos and imec-COSIC, KU Leuven
PI:EMAIL
Bart Preneel
imec-COSIC, KU Leuven
PI:EMAIL
Abstract—Following Bitcoin’s Nakamoto Consensus protocol
(NC), hundreds of cryptocurrencies utilize proofs of work (PoW)
to maintain their ledgers. However, research shows that NC fails
to achieve perfect chain quality, allowing malicious miners to al-
ter the public ledger in order to launch several attacks, i.e., selﬁsh
mining, double-spending and feather-forking. Some later designs,
represented by Ethereum, Bitcoin-NG, DECOR+, Byzcoin and
Publish or Perish, aim to solve the problem by raising the chain
quality; other designs, represented by Fruitchains, DECOR+ and
Subchains, claim to successfully defend against the attacks in the
absence of perfect chain quality. As their effectiveness remains
self-claimed, the community is divided on whether a secure PoW
protocol
is possible. In order to resolve this ambiguity and
to lay down the foundation of a common body of knowledge,
this paper introduces a multi-metric evaluation framework to
quantitatively analyze PoW protocols’ chain quality and attack
resistance. Subsequently we use this framework to evaluate the
security of these improved designs through Markov decision
processes. We conclude that to date, no PoW protocol achieves
ideal chain quality or is resistant against all three attacks. We
attribute existing PoW protocols’ imperfect chain quality to
their unrealistic security assumptions, and their unsatisfactory
attack resistance to a dilemma between “rewarding the bad”
and “punishing the good”. Moreover, our analysis reveals various
new protocol-speciﬁc attack strategies. Based on our analysis, we
propose future directions toward more secure PoW protocols and
indicate several common pitfalls in PoW security analyses.
Index Terms—blockchain, proof-of-work consensus, incentive
compatibility, double-spending, censorship resistance
I. INTRODUCTION
By November 2018, more than six hundred digital curren-
cies leverage proofs of work (PoW), i.e., moderately hard com-
putational tasks, to maintain consensus on a public ledger of
transactions [1]. All PoW consensus protocols originate from
Bitcoin’s Nakamoto Consensus (NC) [2], in which participants,
called miners, compete in generating the latest block—a group
of new transactions bound with a solution to a computational
puzzle. The protocol helps participants reach agreement on a
sequence of blocks named the blockchain. The miner of each
blockchain block is entitled to a block reward of new bitcoins
to incentivize protocol participation. Remarkably, NC is the
ﬁrst scheme that promises an inalterable public ledger without
prior knowledge on participants’ identities. Unfortunately, the
security of NC is challenged by several studies [3]–[7], in
which researchers identify a wide range of strategies that allow
attackers with less than 50% of total computing power to
rewrite part of the blockchain with high success rate.
Given NC’s security weakness, a considerable amount of
non-NC PoW protocols [6]–[23] have emerged in the past few
years, which all claim to achieve stronger security properties.
Nevertheless, in the absence of a systematic evaluation, such
advancements remain self-claimed and not widely acknowl-
edged. Moreover, some protocols introduce new issues like
lowering the chain-growth rate [24], [25] or facilitating an
attacker to create disagreements among the compliant min-
ers [26]. This inconclusive situation also feeds the pessimistic
atmosphere surrounding PoW, leading new digital currencies
to abandon PoW and turn to other consensus mechanisms such
as proofs of stake (PoS), which all rely on stronger security
assumptions, yet open new attack vectors [27]–[29].
In this paper, we address this situation and explore the
(im)possibility of more secure PoW protocols. Our work and
contributions include:
A quantitative security evaluation framework. We identify
that NC’s key weakness lies in its low chain quality, deﬁned
as the fraction of blockchain blocks mined by the compliant
miners. The unsatisfactory chain quality allows attackers to
substitute other miners’ blocks from the blockchain with
the attackers’, which impairs NC’s inalterability promise and
could be utilized by attackers to cause three kinds of damage:
they can (1) gain relative block rewards larger than their fair
share with a selﬁsh mining attack [6]; (2) spend the same coin
more than once with a double-spending attack; and (3) force
rational miners to collectively censor certain target transactions
with a feather-forking attack [30].
Accordingly, to verify the self-claimed improvements of re-
cent non-NC protocols and to detect the security ﬂaws in PoW
designs, we propose a comprehensive evaluation framework
including chain quality and three attack-resistance metrics
of incentive compatibility, subversion gain and censorship
susceptibility, corresponding to the aforementioned attacks.
Generalizing MDP-based methods for analyzing PoW
protocols. While Markov decision processes are commonly
used to explore an actor’s utility-maximizing strategies in a
stochastic environment, previous MDP-based analyses mostly
focus on NC with a rational, i.e., proﬁt-driven, adversary [4],
[31], [32]. We generalize their methods on two dimensions.
First, by redeﬁning the attacker’s utility, we extend the model
to include byzantine adversaries, whose goals are not limited
to their economic gains. This generalization allows our model
© 2019, Ren Zhang. Under license to IEEE.
DOI 10.1109/SP.2019.00086
175
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:44:01 UTC from IEEE Xplore.  Restrictions apply. 
SECURITY ANALYSES BY THE PROTOCOL DESIGNERS AND OUR NEW RESULTS.
TABLE I
Group
Better-chain-quality
Better-chain-quality
Protocol
SHTB [12]
UDTB [18], [21]
Attack-resistant: reward-all
Fruitchains [20]
Attack-resistant: punishment
Attack-resistant: reward-lucky
RS [12], [21]
Subchains [11]
Designers’ analysis
None
Analysis against one attack strategy
Formal analysis against selﬁsh mining
assuming some parameters are large enough
Analysis against one attack strategy
None
Our results
New protocol-speciﬁc attack strategy
New protocol-speciﬁc attack strategy
Vulnerable to selﬁsh mining and double-
spending attacks with reasonable parameters
Vulnerable to censorship attack
Vulnerable to all three attacks
to capture more real-world attack scenarios, such as censorship
or chain quality attacks. Second, by introducing new modeling
and acceleration techniques, our MDPs can model more com-
plicated systems and support longer block races than previous
works, which enables cross-protocol security comparison.
Moreover, our approach opens the possibility of applying
artiﬁcial intelligence techniques in analyzing protocol security.
By properly simplifying the protocol and conﬁning the at-
tackers’ reasonable actions, these techniques enable systematic
exploration of a protocol’s vulnerabilities with a given attacker
goal, which helps improve the protocol design iteratively.
Systematic evaluation of non-NC PoW protocols. Based
on their self-claimed properties, we divide PoW protocols
claiming to improve NC’s security into two groups: better-
chain-quality protocols and attack-resistant protocols, differ-
ing in whether they accept imperfect chain quality as a given
condition. We then use our framework to evaluate the two
groups accordingly. Our ﬁndings are summarized as follow:
• No PoW protocol achieves perfect chain quality facing a
strong attacker. We ﬁrst evaluate the chain quality of two
inﬂuential better-chain-quality protocols that are previously
unveriﬁed: smallest-hash tie-breaking (SHTB) [12] and un-
predictable deterministic tie-breaking (UDTB) [18], [21].
Joining the results of previous studies [4], [13], [31], we
conﬁrm that an attacker with more than a quarter of total
mining power can obtain an unfair fraction of blockchain
blocks in all better-chain-quality protocols. We attribute the
low chain quality to information asymmetry between the
attacker and the compliant miners, which is inherent to the
unrealistic security assumptions in PoW protocols, including
the participants’ unawareness of their own network connec-
tivity and the lack of a globally synchronous clock.
• No attack-resistant protocol is resistant against all three
attacks. Then we evaluate the attack-resistant protocols
based on the metrics of incentive compatibility, subversion
gain, and censorship susceptibility. We further divide these
protocols into three groups based on their technical ap-
proaches: reward-all protocols, punishment protocols and
reward-lucky protocols. We choose a representative and
most inﬂuential protocol from each approach for evaluation:
Fruitchains [20], a variant of DECOR+ [12], [21] named
reward-splitting protocol (RS), and Subchains [11]. Our
analysis shows that all three approaches suffer from cer-
tain drawbacks: reward-all protocols remove the attacker’s
risk of losing block rewards in double-spending attacks;
punishment protocols aid feather-forking attacks; reward-
lucky protocols facilitate all three attacks. We attribute these
empirical results to a dilemma between “rewarding the bad”
and “punishing the good”.
Our ﬁndings show that no better-chain-quality protocol
outperforms NC’s chain quality in all attacker settings, neither
does any attack-resistant protocol outperforms NC in defend-
ing against all three attacks. Starting from our identiﬁed cruxes
hindering substantial improvement in both chain quality and
attack resistance, we point out several directions of future
improvements towards more secure PoW protocols.
Exposing limitations in existing PoW protocols’ security
analyses. The unsatisfactory security of PoW protocols roots
in the designers’ lack of [7], [8], [11], [12], [17]–[19], or
incomplete security analyses. Existing analyses are limited
either to only one attack strategy [6], [9], [21]–[23], turning
its back on the protocol-speciﬁc attack strategies, or to one or
two security properties [10], [13]–[16], [20], [33], leaving the
protocols more vulnerable against other attacker incentives. In
addition, our analysis reveals that, in some designers’ analysis,
certain parameters are artiﬁcially anchored to an unrealistic
range in order to prove the properties of the protocol, leaving
the real-world security unexplored. Of the ﬁve protocols we
model in this paper, a comparison between our results and the
designers’ own analyses is summarized in Table I. Our results
highlight that PoW protocols’ security is not a unidimensional
index, but rather a multi-metric property subjects to the law of
the minimum—security is decided by the weakest point in the
design. Therefore, future protocol analyses need to consider a
broad strategy space covering the all reasonable actions with
a given attacker goal, and incorporate multiple attacks with
real-world parameters.
II. NAKAMOTO CONSENSUS’S SECURITY ISSUES AND
ALTERNATIVE POW PROTOCOLS
A. Nakamoto Consensus
NC helps all network participants agree on and order the
set of conﬁrmed transactions in a decentralized, pseudonymous
way. Each block contains its height—distance from the hard-
coded genesis block, the hash value of the parent block, a
set of transactions, and a nonce. Embedding the parent hash
ensures that a miner chooses which chain to mine on before
starting to mine. To construct a valid block, miners work on
ﬁnding the right nonce so that the block hash is smaller than
176
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:44:01 UTC from IEEE Xplore.  Restrictions apply. 
the block difﬁculty target. This target is adjusted every 2016
blockchain blocks so that on average one block is appended
to the blockchain in ten minutes. Compliant miners publish
blocks to the network the moment they are found. Miners are
incentivized by two kinds of rewards. First, a block reward
is allocated to the miner of every blockchain block. Second,
the value difference between the inputs and the outputs in a
transaction is called the transaction fee, which goes to the
miner who includes the transaction in the blockchain.
When more than one block extends the same preceding
block, a miner adopts and mines on the main chain that
is most computationally challenging to produce, which is
commonly, although inaccurately, referred to as the longest
chain. When several chains are of the same “length”, miners
choose the ﬁrst chain they receive. We refer to this forked
situation where miners work on different parent blocks as a
block race, an equal-length block race as a tie, and blocks of
the same height as competing blocks. Mining on the longest
chain or the ﬁrst-received block during a tie is denoted as the
compliant strategy [5], [26], [34], [35]. Blocks that are not on
the longest chain are orphaned and discarded by all miners. By
convention, Bitcoin users will not consider a transfer of funds
settled until it is conﬁrmed by six blocks, including the block
containing the transaction. We refer to Narayanan et al. [36]
for a complete view of the system.
B. Nakamoto Consensus’s Security Issues
Bitcoin’s designer believes that the protocol achieves perfect
chain quality, i.e., as long as more than half of total mining
power is compliant, any attempt to substitute blocks from
the blockchain fails with large probability [2]. Unfortunately,
this belief is disproved by several later studies [3]–[7], which
discover a family of strategies to replace the compliant miners’
blocks with the attackers’ at the end of the blockchain with
high success rate. The imperfect chain quality can be directly
exploited to manipulate vote results in some blockchains [37].
Moreover, the imperfect chain quality enables a variety of
other attacks, differing in the attackers’ goals:
• Selﬁsh mining. In this attack ﬁrst analyzed by Eyal and
Sirer [6], a selﬁsh miner keeps discovered blocks secret
and mines on top of them, hoping to gain a larger lead on
the public chain of honest blocks mined by the compliant
miners. The selﬁsh miner publishes the secret chain if it
has one block and the public chain catches up, or it has
more than one block and the lead is reduced to one. Though
risking the reward of the ﬁrst secret block, once the selﬁsh
chain is two blocks ahead of its competitor, the selﬁsh miner
can securely invalidate compliant miners’ competing blocks.
This strategy has been generalized by Sapirshtein et al. [4]
and Nayak et al. [5] to a family of strategies.
This attack allows the selﬁsh miner to gain unfair block
rewards. As the attacker’s revenue rises superlinearly with
the mining power share, rational miners are incentivized to
attack collectively for a higher input-output ratio. This situ-
ation not only damages the system’s decentralized structure,
but also raises the success rates of various other attacks.
• Double-spending. A successful double-spending attack re-
verses the payment after the service or goods are delivered.
The transaction to the merchant is replaced by a conﬂict-
ing transaction transferring the fund back to the attacker.
Double-spending were once believed to be difﬁcult with less
than 50% of total mining power [2]. However, a 2016 paper
by Sompolinsky and Zohar [32] indicates that an attacker
with arbitrarily low mining power can proﬁtably implement
the attack by combining it with selﬁsh mining: the attacker
mines in secret to perform double-spending attacks, and
when there is little hope to orphan six blocks in a row,
the attacker publishes the secret blocks to claim the block
rewards, switching to selﬁsh mining instead.
• Feather-forking. In this attack proposed by Miller [30],
the attacker publicly promises to fork the blockchain to
invalidate all blocks conﬁrming the target transactions. The
attacker will keep mining on the forked chain until the main
chain is k blocks ahead. Although the attack is not proﬁtable
and the success rate is low with minority mining power, the
rational choice for other miners is to join the attacker on
the censorship in order to avoid the potential loss.
A successful attacker can approve and decline transactions
at will, becoming the system’s de facto owner, which
violates the motivation of the permissionless design.
Researchers identify several other attacks against NC [35],
[38]–[42]. Nevertheless, these attacks either do not have their
roots, as well as their solutions in the consensus protocol, or
do not bring realistic threats in the coming decades.
C. Alternative PoW Protocols