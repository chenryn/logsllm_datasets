User: In a python/google app engine app, I've got a choice between storing some static data (couple KB in size) in a local json/xml file or putting it into the datastore and querying it from there.  The data is created by me, so there's no issues with badly formed data.  In specific terms such as saving quota, less resource usage and app speed, which is the better method for this case?  
I'd guess using simplyjson to read from a json file would be better since this method doesn't require a datastore query, whilst still being reasonably quick.
Taking this further, the app doesn't require a large data store (currently ~400KB), so would it be worthwhile moving all the data to a json file to get around the quota restrictions?
Assistant: For superior app performance, as Chris and others pointed out, python dict is the best.
But if you are ok with the minimal performance hit caused by datastore queries, I think that is the way to go purely from a design and maintenance perspective.  Simplicity takes precedence over performance if you are not approaching the quota limits.
I assume yours is a simple app as of today. But it can gradually grow in complexity.  As you add more features, having a hard-coded data somewhere will come in the way of design flexibility even in the short term.  And you might end up rewriting those areas in future.