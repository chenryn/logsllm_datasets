title:Opportunities and Challenges in Crowdsourced Wardriving
author:Piotr Sapiezynski and
Radu Gatej and
Alan Mislove and
Sune Lehmann
Opportunities and Challenges in Crowdsourced Wardriving
Piotr Sapiezynski
Technical University
of Denmark
Radu Gatej
of Copenhagen
University
Alan Mislove
Northeastern
University
Sune Lehmann
Technical University
of Denmark
ABSTRACT
Knowing the physical location of a mobile device is crucial
for a number of context-aware applications. This informa-
tion is usually obtained using the Global Positioning System
(GPS), or by calculating the position based on proximity of
WiFi access points with known location (where the posi-
tion of the access points is stored in a database at a central
server). To date, most of the research regarding the cre-
ation of such a database has investigated datasets collected
both artiﬁcially and over short periods of time (e.g., dur-
ing a one-day drive around a city). In contrast, most in-use
databases are collected by mobile devices automatically, and
are maintained by large mobile OS providers.
As a result, the research community has a poor under-
standing of the challenges in creating and using large-scale
WiFi localization databases. We address this situation using
the deployment of over 800 mobile devices to real users over
a 1.5 year period. Each device periodically records WiFi
scans and its GPS coordinates, reporting the collected data
to us. We identify a number of challenges in using such
data to build a WiFi localization database (e.g., mobility of
access points), and introduce techniques to mitigate them.
We also explore the level of coverage needed to accurately
estimate a user’s location, showing that only a small subset
of the database is needed to achieve high accuracy.
Categories and Subject Descriptors
H.4 [Information Systems Applications]: Miscellaneous
Keywords
wiﬁ; wardriving; mobility; location
1.
INTRODUCTION
Localization is an increasingly important trend on mo-
bile devices today. Mobile applications use localization to
provide users with accurate driving directions, recommen-
dations for local points of interest (e.g., restaurants), and
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full citation
on the ﬁrst page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from Permissions@acm.org.
IMC’15, October 28–30, 2015, Tokyo, Japan.
Copyright is held by the owner/author(s). Publication rights licensed to ACM.
ACM 978-1-4503-3848-6/15/10 ...$15.00.
DOI: http://dx.doi.org/10.1145/2815675.2815711.
even as a form of authentication [10]. Determining a mo-
bile device’s location is typically accomplished in one of two
ways: First, mobile devices can use various satellite-based
systems (GPS, Galileo, or GLONASS). While most mobile
devices today ship with dedicated GPS hardware, relying on
GPS alone for determining location has a number of down-
sides: obtaining an initial GPS ﬁx introduces non-negligible
delay, and causes signiﬁcant power consumption.
Second, mobile devices can use WiFi localization. In brief,
WiFi localization works by having the mobile device listen
for advertised WiFi networks (each WiFi access point peri-
odically announces its unique identiﬁer or BSSID, as well as
the name of the network, referred to as SSID), and report
that list to a central server. The server then computes the
most likely location of the mobile device and returns the re-
sult. Thus, for WiFi localization to be e↵ective, the server
must have a pre-computed database of WiFi access points
(APs) and their locations. Unfortunately, building such a
database is time-consuming and expensive:
the database
must be comprehensive (covering many locations) and up-
to-date (as new APs are deployed and existing ones move).
Originally, the aim of such databases was to enable in-
door positioning through ﬁnger-printing [3, 9, 20] and later
through RF-modeling [15, 5]. Most recent work on indoor lo-
calization achieves sub-meter accuracy by rotating the sens-
ing device to simulate directional antennas [14]. As the APs
became more wide spread it became possible to use them for
outdoor localization as well. The databases were then cre-
ated by manually going to di↵erent locations and recording
the observed APs (often termed wardriving) [4, 18, 7, 11].
Today, however, these databases are often built by having
dedicated software on the mobile devices collect and report
data back both in indoor [21, 27] and outdoor [2, 19, 26]
contexts. Therefore, creating such a database at scale is typ-
ically only the domain of mobile OS providers (e.g., Apple,
Google) or dedicated companies (e.g., Skyhook Wireless).
As a result, the research community currently has a rel-
atively poor understanding of large-scale WiFi localization
databases. In this paper, we address this situation by pro-
viding insights into the challenges underlying the creation of
such a database, and the trade-o↵s in using them. We ﬁrst
collect a data set based on a deployment of over 800 mobile
phones to students at a university in Copenhagen, Denmark
for over 1.5 years. These phones run a stock Android OS
with custom collection software instrumented to gather GPS
location and overheard WiFi APs.
Overall, we collect over 1.8M simultaneous measurements
of WiFi APs and GPS location, and observe more than 1.3M
unique WiFi APs. Many of the APs are only seen a small
number of times, so we focus on the 376K APs that we
observe at least ﬁve times. To the best of our knowledge,
this represents the most comprehensive data set of this kind
that has been examined in the research literature. Using this
data set, we build a WiFi localization database for Copen-
hagen. We discuss and identify a number of key challenges
and issues in doing so:
The scale of the dataset. Most existing studies were
performed either in controlled environments or over a short
time. Here, we show that the WiFi landscape is constantly
changing, new access points are added and old ones are
moved to new locations or retired.
Mobility. With increasing trend of mobile WiFi APs, such
as MiFi devices, routers on buses and trains, and mobile
phones which also serve as hotspots, we observe that discov-
ering and ﬁltering mobile APs presents a signiﬁcant chal-
lenge. Failing to properly ﬁlter these can lead to gross errors
when estimating a device’s location.
Noisy data. Unsurprisingly, relying on commodity hard-
ware introduces noise into the measurements of location,
signal strength, and detectability of APs, which must be
handled when inferring the location and mobility of APs.
We also explore using the database we build to estimate
the locations of devices given a set of overheard APs. Specif-
ically, we examine the trade o↵ between the number of APs
in the database and the estimation accuracy. We show that
knowing the location of only a small fraction of all the APs
(3.7%) is actually needed to locate users to within 15 meters
75% of time.
2. METHODS
We now describe the data we use to build our WiFi local-
ization database.
Phone deployment. We use data collected by the Copen-
hagen Networks Study experiment [23]. In this experiment,
students opt-in to receive a smartphone in exchange for
agreeing to let us use to collect data (e.g., Bluetooth and
WiFi scan results, location estimations, call and SMS meta-
data, etc). The students agree to use the device as their
primary phone. The experiment has been reviewed and ap-
proved by the Danish Data Protection Agency, and partic-
ipants are provided with a web interface where they can
access and remove any of their collected data.
The data analyzed in this work covers a period from
September 2013 through March 2015 and involves more than
800 students, with 300–600 participants active on any given
day. Because of software failures and physical destruction
some phones had to be replaced, and thus 1,000 devices were
used in total. The primary focus of the Copenhagen Net-
works Study experiment is the study of human interactions,
hence the setup was not explicitly optimized towards dis-
covering the locations of APs. Nevertheless, we show in this
paper that the WiFi scans and GPS data allow us to do so.
Data collection app. On the phones, we install an app
based on the Funf framework [1].
It starts automatically
when the phones boot, so the users do not need to take
action to begin collecting and uploading data.
The app collects data both actively (it requests location
and WiFi updates every 5 minutes) and opportunistically
(whenever another app requests updates). In order to save
the battery, most of the location data is obtained using the
network and/or fused provider (i.e., an existing WiFi local-
ization database). Since we intend to use the GPS mea-
surements as ground truth, we focus only on the 10.5% of
location readings that are provided by the GPS hardware.
As a consequence, while the median sampling period be-
tween GPS readings is 1 second, only 29% of per-user hourly
bins have at least one GPS sample (i.e., we only know the
GPS location of users in 29% of the hours, on average). This
distribution is a consequence of apps like Google Maps that
either use GPS data constantly or not at all.
Since we are studying WiFi localization databases, in the
remainder of the paper we focus on the 1,794,473 GPS sam-
ples which happened within the same second1 as a WiFi
access point scan. According to our measurements, a single
WiFi scan lasts approximately 500 ms and this time does
not depend on the number of saved networks.
It is important to note that the securing the wireless net-
work does not make it impossible to scan it: regardless of
the encryption, each router broadcasts its unique identiﬁer
and the name of the network in clear text.2
Filtering data. In the 567 days of observations, our partici-
pants observed 7,203,471 unique APs, out of which 1,320,838
(18.3%) were scanned at least once in the same second as
a GPS estimation. However, the majority of these APs
were observed with a GPS estimation a very small number
of times: 944,904 (71.5%) have less than ﬁve observations.
Thus, in the remainder of the paper, we focus only on the
375,934 APs that were observed at least ﬁve times together
with a GPS estimate in the same second to build our WiFi
localization database.
3. BUILDING THE DATABASE
We now examine the collected data, with the goal of build-
ing a WiFi localization database.
3.1 Estimating the locations of APs
The primary challenge we face is estimating the positions
of the APs, given our WiFi scan data. Intuitively, this seems
straightforward, but AP mobility presents a number of chal-
lenges. In general, we expect APs to fall into one of three
categories:
• Static. We expect that many APs are static and have
a ﬁxed location that does not change over the course
of the experiment.
• Moved. Given that our data covers 1.5 years, some
APs may remain static for long periods of time, but
may be moved a small number times. For example,
businesses may redeploy APs, and residents of Copen-
hagen may change apartments, taking their APs with
them.
1Allowing for even a short time di↵erence would introduce noise into
the measurements. For example, a car driving within city speed limits
moves at 14 m/s. Because of uneven and sparse sampling, it is not
feasible to calculate the speed of the measuring device and discard
the scans that were performed by phones in motion.
2We note that is possible to hide a network by disabling the ac-
cess point’s SSID broadcasts (though this provides little actual se-
curity [17]). Routers conﬁgured this way still broadcast their BSSID
and are present in our dataset.
• Mobile. We also expect to see some APs that show
no static behavior; these could include APs located on
buses and trains, as well as MiFi devices and mobile
phone hotspots.
We categorize APs into these three classes by clustering the
observed WiFi scan data. Speciﬁcally, every time a GPS es-
timation happens in the same second as a WiFi scan, we add
the latitude/longitude to the list of observations of each AP
visible in the scan. We then categorize the APs as follows:
Static access points. We ﬁrst compute the geometric me-
dian [16] of all locations associated with each AP; if “most”