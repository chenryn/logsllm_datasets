ps =aLf pid
PIDSPIDTTY
-]$ps·T-p55499
55499
55499pts/1
TIME CMD
55499
55580pts/1
00:00:00 Suricata-Main
00:00:00 RxPcapeth51
55499 55501pts/1
00:00:00 SCPerfwlakeupThr
00:00:02 FlowMana
55499
955502pts/1
gerThre
55499 55503pts/1
00:00:00 SCPerfMgntThrea
其中SPID就是线程ID，而CMD栏则显示了线程名称
HPddo
htop（默认未安装），可以较为全面的展示线程
·pstree-agpu推荐，非常全面展示进程与线程间的关系
。查看全部的线程
ps =eLFa
0x05删除恶意文件
通过进程pid以及/proc/，我们已经发现了定位到了文件的具体位置，接下来就是删除恶意文件
·查看文件占用
1sof eval.sh
如果存在进程占用，那么占用进程也可能是恶意进程，需要按照之前的步骤进行查看
·a和i属性导致文件不可删除
。a属性文件只能增加内容，不能修改之前的文件，不能删除文件
---
## Page 14
。i属性内容不能改变，文件不能删除
可以使用chattr-a和chattr -i
具体可以参考
https:/www.cnblogs.com/kzang/articles/2673790.html
·奇怪文件名导致文件不可删除
在windows向linux传输的文件或者攻击者恶意制造的文件，很多会有文件名乱码，无法直接通过乱码的文件名进行删除，
可以使用inode来确定文件名，之后删除
。使用inode进行删除
·查看inode
1s -1i eval.sh
johnljohn:-/temp$ 1s =1i evi1.sh
12327526 =rw=r=-r=- 1 john john 0 3月
7 10:21 evil.sh
john8 john:-/temp$
■删除文件
find ./* =inum 12327526 =delete
find ./ =inun 12327526 =exec rm () \;
find./-inum 12327526-execrn-i{）\;（会有一步确认是否删除）
find./=inum12327526=execrn=f{）\;（不进行确认直接强制删除）
find ./* =inum 12327526|xargs rm =f
rn ^find ./* =inum 12327526^
参考文章
https:/www.cnblogs.com/storry-skys/p/12970463.html
https://www.cnblogs.com/tssc/p/7574432.html
0x06善后阶段
直接查看善后阶段即可
---
## Page 15
勒索病毒
0x00简介
对于正常的勒索病毒，一般没啥好的办法，要么交钱，要么格式化，即使找中间商也不会便宜很多
勒索病毒的处置没有那么多技术可言，更多的是策略，在数据备份方面多些投入是较为明智保障手段
0x01确定勒索病毒家族
判断勒索病毒家族并不难，可以从以下几个方面获取
·勒索页面主动说明的，直接粘贴到baidu、google里面搜索
·勒索加密文件的后缀名
·联系邮箱
0x02根据勒索病毒类型寻找解决方法
·深信服千里目实验室公众号直接回复病毒关键字
·安全响应及EDR知识赋能平台
●Freebuf
·淘宝、闲鱼
0x03解决勒索
·有解密工具就用解密工具
·无解密工具就交钱
---
## Page 16
暴力破解
0x00简介
暴力破解攻击主要针对
●ssh
jbsAuu●
·ftp
● redlis
qpobuow●
●smtp
OxO1SSH暴力破解
·检查网络连接信息
netstat -pantu
helper@helper:$ sudo netstat -pantu
Active Interr
vers and established)
Foreign Address
0.0.0.0:*
State
LISTEN
0
00.0.0.0:22
0.0.0.0:*
LISTEN
998/sshd
0192.168.197.129:22
192.168.197.1:59710
192.168.197.1:63518
36192.168.197.129:22
0:::22
0.0.0.0:*
::*
LISTEN
761/systend-resolve
998/sshd
0127.0.0.53:53
dr
0 192.168.197.129:68
0.0.0.0:*
744/systend-network
Proto协议类型
oReCV-Q：表示收到的数据已经在本地接收缓冲，但是还有多少没有被进程取走，如果接收队列ReCV-Q一直处于
阻塞状态，可能是遭受了拒绝服务denial-of-service攻击。
oSend-Q：对方没有收到的数据或者说没有Ack的，还是本地缓冲区。如果发送队列Send-Q不能很快的清零，可能
是有应用向外发送数据包过快，或者是对方接收数据包不够快。
oLocalAddress：本机地址，一般有以下几种模式
■:二80监听IPv6和IPv4的任意IP的80端口
■0.0.0.0:80监听任意IPv4地址的80端口
■127.0.0.1:80监听本地的80端口，只能本地访问
■：1:80监听本次IPv6的回环地址，只能本地访问
●192.168.1.1:80 监听IP地址 192.168.1.1 的80端口
oForeign Address：外部地址
规则和 Local Address 规则—样
。State 网络状态
·LISTEN侦听状态，等待对端连接
·SYN_SENT客户端发送建立连接的SYN请求后状态为SYN_SENT
·SYN_RECV服务端发送SYN+ACK后网络状态为SYN_RECV
■ESTABLISHED已经建立起连接
·FIN_WAIT1主动端四次挥手主动发起的第一个包，也就是FIN包之后网络状态为FIN_WAIT1
·CLOSE_WAIT被动端收到四次挥手的FIN包，发送ACK后处于CLOSE_WAIT
·FIN_WAIT2主动关闭端接到ACK后进入FIN_WAIT2，等待对端发下一个FIN
·LAST_ACK被动关闭端发送第二个FIN后进入LAST_ACK状态，等待最后一个ACK的到来
---
## Page 17
·TIME_WAIT主动端发送最后一个ACK，之后进入TIME_WAIT状态，等待一段时间确保对端接收到了
ACK
·CLOSING在TCP四次挥手期间，主动关闭端发送了FIN包后，没有收到对应的ACK包，却收到对方的FIN
包，此时，进入CLOSING状态
·CLOSED被动关闭端在接受到ACK包后，就进入了closed的状态。连接结束
·UNKNOwN未知的Socket状态
o PID/Program name
这个就是进程ID和进程名字了
参考文章: https://blog.csdn.net/m0_37556444/article/details/83000553
ssh遭到暴力破解时网络连接如下：
helpen@helper:~$netstat -pantu
(Not all processes could be identified,non-owned process info
Proto Recv-Q Send-Q Local Address
Foreign Address
State
PID/Program name
tcp
0127.0.0.53:53
0.0.0.0:*
LISTEN
tcp
00.0.0.0:22
0.0.0.0:*
LISTEN
tcp
360 192.168.197.129:22
192.168.197.1:63518
ESTABLISHED
tcp
0192.168.197.129:22
192.168.197.1:50524
ESTABLISHED
0192.168.197.129:22
192.168.197.1:50529
192.168.197.1:50562
ESTABLISHED-
ESTABLISHED
0192.168.197.129:22
0192.168.197.129:22
192.168.197.1:50542
ESTABLISHED-
tcp
9
0192.168.197.129:22
192.168.197.1:50590
tcp
ESTABLISHED-
0192.168.197.129:22
192.168.197.1:50475
192.168.197.1:50516
ESTABLISHED
tcp
0192.168.197.129:22
ESTABLISHED
tcp
0 192.168.197.129:22
192.168.197.1:50505
ESTABLISHED
192.168.197.129:22
192.168.197.1:50521
192.168.197.1:50592
0192.168.197.129:22
ESTABLISHED
ESTABLISHED
0192.168.197.129:22
192.168.197.1:50559
ESTABLISHED-
0192.168.197.129:22
192.168.197.1:50545
192.168.197.1:50554
ESTABLISHED-
tcp
0192.168.197.129:22
ESTABLISHED
存在大量的ESTABLISHED状态的连接
·查找特殊权限账号，默认root
pmssed/0=/ .(tsuTxd(0==$)).12=x
·查找可以登录ssh的账号
s=$( sudo cat /etc/shadow |grep '^[^:]*:[^\*!]' | awk =F: '(print $1)');for i in $s;do cat
/etc/passwd | grep =v*/bin/false\| /nologin"| grep $i;done |sort | unig |awk =F: ‘(print
$1)*
·查看正在连接的ssh sessions
0ho =a
olast =p now
0sudo netstat-tnpa |grep‘ESTABLISHED.*sshd'
opgrep -af sshd
0echo SSSH_CONNECTION
0ss|grep ssh
·查看ssh日志信息
https://blog.csdn.net/supertor/arfticle/details/84334710
o Ubuntu
/var/log/auth.1og
---
## Page 18
o Centos
/var/log/secure
这两个文件关于SSH的内容基本一致，所以此处以Ubuntu的日志/var/log/auth.log为例，如果是Centos直接
替换文件名就行
。查找登录成功的日志
helper@helper:$cat /var/log/auth.loggrep "Accept”
Apr 13 11:13:15 helper sshd[1076]: 
ipr
Rccepi
ted password
for
helper
from
m192.168.197.1 port
Apr 15 01:55:49 helper sshd[4328]:
55320
ssh2
AcCepi
ited password for helper from 192.168.197.1 port 59710 ssh2
helperghelper:$
Apr 15 02:19:13 helper sshd[5725]: Aiccepted password for helper from 192.168.197.1 port 63518 ssh2
。正常退出的日志
pasoto uotssss 1(uotssasipuss)xrun ued, doxb | bot qane/bot/zea/ 4e3
helpenghelper:~$cat /var/log/auth.log|grep“pam_unix（sshd:session):session closed
Apr 13 09:47:53 he1per sshd[45909]:
for user helper
Apr
13 11:29:14helper sshd[1076]:
bm_umfxeshhd:session):sescfonclossd
for user helper
Apr
15 01:55:46 he1per sshd[1289]:
session closed
for user helper
helpen@helper:~$ cat/var/log/auth.log|grep“pam_unix(sshd:session):session closed"
登录密码错误的日志
F cat
nt 192,168,197,1 0
id-e tty-ssh rsser* rhest-192.168.197.1u
192.168.197.1 poet 62764 [greasth]
。连续输入错误密码
---
## Page 19
:Wsers\helper
Assh PI:EMAIL
PI:EMAIL′s password:
Permission denied,
please try again
PI:EMAIL′s password:
C:\Users\helper
ssh helperg192.168.197.129
PI:EMAIL′s password:
Permission denied, please try again.
PI:EMAIL's password:
Permission denied,please try again.
helpeng192.168.197.129:Permission denied (pub1ickey,password)
C:\Users\helper
Assh PI:EMAIL
PI:EMAIL's password:
PI:EMAIL's password:
Permission denied,please try again.
Permission denied,please try again.
PI:EMAIL's password:
PI:EMAIL: Permission denied (publickey,password).
A ssh PI:EMAIL
C:Users\helper
PI:EMAIL‘s password:
helperg192.168.197.129's password:
Permission denied, please try again.
Permission denied,please try again.
PI:EMAIL's password:
PI:EMAIL:Permission denied (publickey,password).
C:\Users\helper
A ssh PI:EMAIL
PI:EMAIL′s password:
Permission denied,please try again.
PI:EMAIL's password:
Permission denied,
please try again.
PI:EMAIL's pas5word:
PI:EMAIL: Permission denied (publickey,password).
:Users\helper
6e ttysh ruserv rtost-192.158.187.1 user
fallure
168.197.1 port 63144 ssh2
.168.197,
168.197.1 port 63221 ssh2
Failure:
。暴力破解
---
## Page 20
168.157.1 u
158.557.1
如果短时间内存在大量的如下失败请求，可能被暴力破解攻击了
pam_unix(sshd:auth): authentication failure; logname=
uid=0 euid=0 tty=ssh
rhost=192.168.197.1 user=root
Apr 16 01:44:20 helper sshd[2167]: Failed password for root from 192.168.197.1 port
58371 ssh2
。查看登录失败的日志
---
## Page 21
ssh2
port
58371
ssh2
port
port
ssh2
192.168.197.1
sh
875
sh
sh
sh
ssh2
port
58371
ssh.
sshz
sh2
167
ssh2
但是，服务器跑了这么久，有一些错误登录很正常，所以需要按照事件时间和用户来进行分辨
。统计登录失败的用户名以及次数
这里直接使用bypass总结的
ud 1/uoxg(&+*)xog/ )(<=s)aTga, a=[ad|bot*qane/6ot/ze/ pxossud poe, dox6
xu=4zos|o=bTun|xos| . (f,u\I5。
可以看到，其中有一项为invailduserwww，这样的提示说明www这个用户不存在，但是有人使用了这个用户
进行了登录
。统计暴力破解的登录者（IP)
根据上面的操作，已经确定sshd，helper，root，www这几个用户可能异常，我们挨个查看一下爆破IP
登录密码错误的用户存在的情况
单个用户以root为例
cat /var/log/auth.log |grep "Failed password for" | grep *root"| grep =Po
(}((p\|p[6=t1|[s=01s|p[=01|{\t)\)([6=1 |p[6t1|[s=01s|p[=01|{t),
|sort|uniq =c |sort =nr
46 192.168.197.1
也可以通过列来进行定位
---
## Page 22
cat /var/log/auth.log | grep "Failed password for" | grep *root" | cut =d " * =f 11
sort -nr|uniq =C
root@helper
558 192.168.197.106
sedpedauoelo/e/
b-+-
46 192.168.197.1
如果你觉得上一部查出来的都是暴力破解或者说异常的，可以使用如下命令批量查询出来
cat /var/log/auth.log | grep "Failed password for" | cut =d " * =f 9 | sort =nr |
uniglgrep =v "invalid"| while read line;do echo [$line];cat /var/log/auth.log | grep
）([6]|[61|[s01sz|[01|{)t).oox|us dax|xo pxonssd p
uopxuzos|=bun|xos|.()((p|p\[6=1|[=0]s|p\[=0]|{}pt)
 1 ere *Fai3ed sasserd for*1 ere9 s]ie  erep o *(1[2]12[0-4]4[25[0-5]][1-9]v][1-9](. (1d[2]]2[4]|25[05]][1-9]
1250 152.158.187.8
 152.10137-10
当然了，如果你觉得某一个用户的错误次数很少，是正常的，可以在命令中使用grep-"user”的方式来进行，
这里假如我们认为root用户的错误登录是正常的，所以不希望在结果中看到root的显示，可以使用如下命令：
cat /var/log/auth.log | grep "Failed password for" | cut -d " * -f 9 |sort =nr |
unig|grep =v "invalid\|root*| while read line;do echo [$line];cat /var/log/auth.log |
grep “Failed password for" | grep $line |grep =Po *(1\d(2) |2[0=4]\d|25[0=5]][1=9]d| [1=
9]) (\.(1\d{2) |2[0=4 ]\d|25[0=5]|[1=9 ]\d |\d) ) (3) *|sort |uniq =c|sort =nr; done
g/th.//h f ((25[0](
-
[sshe]
2619261 0
347 192.18-197.10
这样root的结果就不显示了，如果想不显示多个用户，继续添加user就可以了
h /
adjyiio/
rt://at//lh.1df (2s[]-
[0-5][1-ee
3247 192.168.197.38
登录密码错误的用户不存在的情况
首先查看这些不存在的用户名以及错误登录的次数
cat /var/log/auth.log |grep "Failed password for"| grep *invalid"| cut =d * " =f 11 |
xU=1os |3= bTun |2os
187gr/
查看这些用户的登录尝试IP以及次数
单用户test来举例
og= daxb|s, da16|,rog pxossed patea. daxb|botuane/bot/xea/ eo
{}((p|[6=1|[=01s|[=01|{})）([61 |[6=1|[=01s|\[=01|{}）
|sort|uniq =c|sort =nr
---
## Page 23
cat/rtn
查询全部的不存在用户的登录IP以及次数
TT 3= . P= 4no |PTteauy, daxb |,xog pzonssed potrea, doxb| bot*uane/bot/zea/ 4eo
sort =nr | unig] while read line;do echo [$line];cat /var/log/auth.log | grep "Failed
password for*|grep $1ine |grep =Po *(1\d{2) |2[0=4]\d|25[0=5]|[1=9]\d| [1=9])(\.
uopxuxos|bum|xos|.{}((p|p\[6=1|[=0]s|p\[=0]|{}pt)
190.168.197.1
7 190.18.137.00
.154137.00
18,17.30
当然，还是可以排除一个或者几个用户，这里排除www和test用户
cat /var/log/auth.log | grep "Failed password for" I grep *invalid* | grep =v
“www^|test"| cut -d " * -f 11 |sort =nr |unig| vhile read line;do echo [$line];cat
=01z|{)pt).og= daxbuts doxb|xog pxonssed paea daab|botane/bot/xe/
bu|s|.{}(（p\[61|[=1=0]|{}）([6]|[6]|[=01
|sort -nr;done
1.18.157.30
168.137.500
168.137,300
68.137,300
SSH加固
■升级SSH版本至少为7.7版本以上，7.7及以下版本存在SSH用户名枚举
■加强口令复杂程度
·禁止root用户登录，可以通过其他用户su到root
·安装fail2ban来进行防御
0x02Mysql暴力破解
Mysql 默认安装会保留登录日志，在Ubuntu上默认位置为/var/log/mysq1/error.1og
·查看登录错误的用户名
cat /var/log/mysql/error.log | grep "Access denied for user"| grep *using passvord: YEs" |
awk =F *""*(pzint $2)*|sort|unig =c |sort =nr
rot
·查看登录错误用户名的登录IP以及次数
---
## Page 24
cat /var/log/mysql/error.log | grep "Access denied for user"| grep “using passvord: YEs"|