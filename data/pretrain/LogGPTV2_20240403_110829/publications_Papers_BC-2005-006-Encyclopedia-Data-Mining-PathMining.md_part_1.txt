1
(cid:1)(cid:2)(cid:3)(cid:4)(cid:5)(cid:6)(cid:7)(cid:8)(cid:7)(cid:8)(cid:9)(cid:5)(cid:7)(cid:8)(cid:5)(cid:10)(cid:11)(cid:12)(cid:5)(cid:1)(cid:13)(cid:14)(cid:15)(cid:11)(cid:16)(cid:16)(cid:11)(cid:16)(cid:5)(cid:17)(cid:16)(cid:7)(cid:8)(cid:9)(cid:5)(cid:1)(cid:13)(cid:14)(cid:18)(cid:7)(cid:19)(cid:11)(cid:16)
(cid:1)
Jorge Cardoso
University of Maderia, Portugal
INTRODUCTION process, the QoS may be substantially different. If you
can predict with a certain degree of confidence the path
Business process management systems (BPMSs) (Smith that will be followed at run time, you can significantly
& Fingar, 2003) provide a fundamental infrastructure to increase the precision of QoS estimation algorithms for
define and manage business processes, Web processes, Web processes.
and workflows. When Web processes and workflows Because the large amounts of data stored in process
are installed and executed, the management system gen- logs exceeds understanding, I describe the use of data-
erates data describing the activities being carried out mining techniques to carry out path mining from the data
and is stored in a log. This log of data can be used to stored in log systems. This approach uses classification
discover and extract knowledge about the execution of algorithms to conveniently extract patterns represent-
processes. One piece of important and useful informa- ing knowledge related to paths. My work is novel be-
tion that can be discovered is related to the prediction of cause no previous work has targeted the path mining of
the path that will be followed during the execution of a Web processes and workflow. The literature includes
process. I call this type of discovery path mining. Path only work on process and workflow mining (Agrawal,
mining is vital to algorithms that estimate the quality of Gunopulos, & Leymann, 1998; Herbst & Karagiannis,
service of a process, because they require the predic- 1998; Weijters & van der Aalst, 2001).
tion of paths. In this work, I present and describe how Process mining allows the discovery of workflow
process path mining can be achieved by using data- models from a workflow log containing information
mining techniques. about workflow processes executed. Luo, Sheth, Kochut,
and Arpinar (2003) present an architecture and the
implementation of a sophisticated exception-handling
BACKGROUND mechanism supported by a case-based reasoning (CBR)
engine.
BPMSs, such as workflow management systems (WfMS)
(Cardoso, Bostrom, & Sheth, 2004) are systems ca-
MAIN THRUST
pable of both generating and collecting considerable
amounts of data describing the execution of business
processes, such as Web processes. This data is stored in The material presented in this section emphasizes the
a process log systems, which are vast data archives that use of data-mining techniques for uncovering interest-
are seldom visited. Yet, the data generated from the ing process patterns hidden in large process logs. The
execution of processes are rich with concealed infor- method contained in the next section is more suitable
mation that can be used for making intelligent business for administrative and production processes compared
decisions. to Ad-hoc and collaborative processes, because they are
One important and useful piece of knowledge to more repetitive and predictable.
discover and extract from process logs is the implicit
rules that govern path mining. Web Process Scenario
In Web processes for e-commerce, suppliers and
customers define a contract between the two parties, A major bank has realized that to be competitive and
specifying quality of service (QoS) items, such as prod- efficient it must adopt a new and modern information
ucts or services to be delivered, deadlines, quality of system infrastructure. Therefore, a first step was taken
products, and cost of services. The management of QoS in that direction with the adoption of a workflow man-
metrics directly impacts the success of organizations agement system to support its business processes. All
participating in e-commerce. A Web process, which the services available to customers are stored and ex-
typically can have a graphlike representation, includes a ecuted under the supervision of the workflow system.
number of linearly independent control paths. Depend- One of the services supplied by the bank is the loan
ing on the path followed during the execution of a Web process depicted in Figure 1.
Copyright © 2005, Idea Group Inc., distributing in print or electronic forms without written permission of IGI is prohibited.
Path Mining in Web Processes Using Profiles
A Web process is composed of Web services and ally. The Web service Approve Home Loan Conditionally,
transitions. Web services are represented by circles, as the name suggests, approves a home loan under a set
and transitions are represented by arrows. Transitions of conditions.
express dependencies between Web services. A Web The following formula is used to determine if a loan
service with more than one outgoing transition can be is approved or rejected.
classified as an and-split or xor-split. And-split Web
services enable all their outgoing transitions after com- MP = (L*R*(1+R/12)12*NY)/(-12+12*(1+R
pleting their execution. Xor-split Web services enable 12)12*NY) (1)
only one outgoing transition after completing their
execution. And-split Web services are represented with MP=Monthly payment,L=Loan amount,R=Interest
‘(cid:127)’, and xor-split Web services are represented with ‘ ⊕’. rate,NY=Number of years
A Web service with more than one incoming transition
can be classified as an and-join or xor-join. And-join When the result of a loan application is known, it is
Web services start their execution when all their incom- e-mailed to the client. Three Web services are respon-
ing transitions are enabled. Xor-join Web services are sible for notifying the client: Notify Home Loan Client,
executed as soon as one of the incoming transitions is Notify Education Loan Client, and Notify Car Loan
enabled. As with and-split and xor-split Web services, Client. Finally, the Archive Application Web service
and-join and xor-join Web services are represented with creates a report and stores the loan application data in a
the symbols ‘(cid:127)’ and ‘ ⊕’, respectively. database record.
The Web process of this scenario is composed of 14
Web services. The Fill Loan Request Web service al- Web Process Log
lows clients to request a loan from the bank. In this step,
the client is asked to fill out an electronic form with During the execution of Web processes (such as the one
personal information and data describing the condition presented in Figure 1), events and messages generated
of the loan being requested. by the enactment system are stored in a Web process
The second Web service, Check Loan Type, deter- log. These data stores provide an adequate format on
mines the type of loan a client has requested and, based which path mining can be performed. The data includes
on the type, forwards the request to one of three Web real-time information describing the execution and be-
services: Check Home Loan, Check Educational Loan, havior of Web processes, Web services, instances, tran-
or Check Car Loan. sitions, and other elements such as runtime QoS metrics.
Educational loans are not handled and managed auto- Table 1 illustrates an example of a modern Web process
matically. After an educational loan application is sub- log.
mitted and checked, a notification is immediately sent To perform path mining, current Web process logs
informing the client that he or she has to contact the need to be extended to store information indicating the
bank personally. values and the type of the input parameters passed to
A loan request can be either accepted (Approve Web services and the output parameters received from
Home Loan and Approve Car Loan) or rejected (Reject Web services. Table 2 shows an extended Web process
Home Loan and Reject Car Loan). In the case of a home log that accommodates input/output values of Web ser-
loan, however, the loan can also be approved condition- vices parameters generated at run time. Each Parameter/
value entry has a type, parameter name, and value (e.g.,
string loan-type=”car-loan”).
Figure 1. The loan process Additionally, the Web process log needs to include
path information describing the Web services that have
been executed during the enactment of a Web process.
This information can be easily stored in the log. For
example, an extra field can be added to the log system to
contain the information indicating the path followed.
The path needs only to be associated to the entry corre-
sponding to the last service of a process to be executed.
For example, in the Web process log illustrated in Table
2, the service NotifyUser is the last service of a Web
process. The log has been extended in such a way that the
NotifyUser record contains information about the path
that was followed during the Web process execution.
2
Path Mining in Web Processes Using Profiles
Table 1. Web process log
(cid:1)
Date Web process Process Web service Service Cost Durati …
instance instance on
6:45 03-03-04 LoanApplication LA04 RejectCarLoan RCL03 $1.2 13 min …
6:51 03-03-04 TravelRequest TR08 FillRequestTravel FRT03 $1.1 14 min …
6:59 03-03-04 TravelRequest TR09 NotifyUser NU07 $1.4 24 hrs …
7:01 03-03-04 InsuranceClaim IC02 SubmitClaim SC06 $1.2 05 min …
… … … … … … … …
Table 2. Extended Web process log
… Process Web service Service Parameter/value Path …
instance instance
… LA04 RejectCarLoan RCL03 int LoanNum=14357; … …
string loan-type=”car-loan”
… LA04 NotifyCLoanClient NLC07 string e-mail=”PI:EMAIL” … …
… LA05 CheckLoanReques CLR05 double income=12000; … …
t string Name=”Eibe Frank”;
… TR09 NotifyUser NU07 String e-mail=PI:EMAIL; FillForm->CheckForm-> …
String tel=”35129170023” Approve->Sign->Report
… … … … … …
Web Process Profile sification algorithms classify samples or instances into
target classes.
When beginning work on path mining, it is necessary to After the profiles and a path attribute value for each
elaborate a profile for each Web process. A profile profile have been determined, I can use data-mining
provides the input to machine learning and is character- methods to establish a relationship between the pro-
ized by its values on a fixed, predefined set of attributes. files and the paths followed at run time. One method
The attributes correspond to the Web service input/ appropriate to deal with my problem is the use of
output parameters that have been stored previously in the classification.
Web process log. Path mining will be performed on In classification, a learning schema takes a set of
these attributes. classified profiles, from which it is expected to learn a
A profile contains two types of attributes, numeric way of classifying unseen profiles. Because the path of
and nominal. Numeric attributes measure numbers, ei- each training profile is provided, my methodology uses
ther real or integer-valued. For example, Web services supervised learning.
inputs or outputs parameters that are of type byte, deci-
mal, int, short, or double will be placed in the profile and
classified as numeric. In Table 2, the parameters EXPERIMENTS
LoanNum, income, BudgetCode, income, and tel will be
classified as numeric in the profile. In this section, I present the results of applying my
Nominal attributes take on values within a finite set algorithm to a synthetic loan dataset. To generate a
of possibilities. Nominal quantities have values that are synthetic dataset, I start with the process presented in
distinct symbols. For example, the parameter loan-type the introductory scenario and, using this as a process