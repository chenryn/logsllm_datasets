### Path Mining in Web Processes Using Profiles

**Author:** Jorge Cardoso  
**Affiliation:** University of Madeira, Portugal

#### Introduction
Business Process Management Systems (BPMSs) provide a fundamental infrastructure for defining and managing business processes, web processes, and workflows. When these processes are executed, the management system generates data that is stored in logs. These logs can be used to discover and extract knowledge about the execution of processes. One crucial piece of information that can be extracted is the prediction of the path that will be followed during the execution of a process, which I refer to as "path mining."

Path mining is essential for algorithms that estimate the Quality of Service (QoS) of a process, as they require the prediction of paths. In this work, I present how process path mining can be achieved using data-mining techniques. This approach uses classification algorithms to extract patterns related to paths, which is novel because no previous work has specifically targeted path mining for web processes and workflows.

#### Background
BPMSs, such as Workflow Management Systems (WfMS), generate and collect large amounts of data describing the execution of business processes. This data is stored in process log systems, which are vast but often underutilized data archives. The data generated from the execution of processes contains valuable information that can be used for making intelligent business decisions.

One important piece of knowledge to extract from process logs is the implicit rules that govern path mining. In web processes for e-commerce, suppliers and customers define contracts that specify QoS items such as products or services to be delivered, deadlines, quality of products, and cost of services. The management of QoS metrics directly impacts the success of organizations participating in e-commerce.

#### Main Thrust
The material presented in this section emphasizes the use of data-mining techniques to uncover interesting process patterns hidden in large process logs. The method described is more suitable for administrative and production processes compared to ad-hoc and collaborative processes, as the former are more repetitive and predictable.

#### Web Process Scenario
In a typical e-commerce scenario, a major bank adopts a workflow management system to support its business processes. One of the services provided by the bank is a loan process, depicted in Figure 1. The loan process involves several steps, including filling out a loan request, checking the loan type, and approving or rejecting the loan based on certain conditions.

**Figure 1. The Loan Process**

A web process is composed of web services and transitions. Web services are represented by circles, and transitions are represented by arrows. Transitions express dependencies between web services. A web service with more than one outgoing transition can be classified as an and-split or xor-split. And-split web services enable all their outgoing transitions after completing their execution, while xor-split web services enable only one outgoing transition. Similarly, a web service with more than one incoming transition can be classified as an and-join or xor-join.

#### Web Process Log
During the execution of web processes, events and messages generated by the enactment system are stored in a web process log. These logs provide an adequate format for performing path mining. The data includes real-time information describing the execution and behavior of web processes, web services, instances, transitions, and runtime QoS metrics.

**Table 1. Web Process Log**

| Date       | Web Process Instance | Process Instance | Web Service | Service Cost | Duration |
|------------|----------------------|------------------|-------------|--------------|----------|
| 6:45 03-03-04 | LoanApplication      | LA04             | RejectCarLoan | RCL03        | $1.2     | 13 min   |
| 6:51 03-03-04 | TravelRequest        | TR08             | FillRequestTravel | FRT03    | $1.1     | 14 min   |
| 6:59 03-03-04 | TravelRequest        | TR09             | NotifyUser   | NU07         | $1.4     | 24 hrs   |
| 7:01 03-03-04 | InsuranceClaim       | IC02             | SubmitClaim  | SC06         | $1.2     | 05 min   |

**Table 2. Extended Web Process Log**

| ... | Process Instance | Web Service | Service | Parameter/Value | Path |
|-----|------------------|-------------|---------|-----------------|------|
| ... | LA04             | RejectCarLoan | RCL03   | int LoanNum=14357; string loan-type="car-loan" | ... |
| ... | LA04             | NotifyCLoanClient | NLC07 | string e-mail="PI:EMAIL" | ... |
| ... | LA05             | CheckLoanRequest | CLR05  | double income=12000; string Name="Eibe Frank" | ... |
| ... | TR09             | NotifyUser   | NU07    | String e-mail="PI:EMAIL"; String tel="35129170023" | FillForm->CheckForm->Approve->Sign->Report |

#### Web Process Profiles
To begin path mining, it is necessary to create a profile for each web process. A profile provides the input to machine learning and is characterized by its values on a fixed, predefined set of attributes. These attributes correspond to the web service input/output parameters stored in the web process log.

A profile contains two types of attributes: numeric and nominal. Numeric attributes measure numbers, either real or integer-valued, such as LoanNum, income, BudgetCode, and tel. Nominal attributes take on values within a finite set of possibilities, such as loan-type.

#### Experiments
In this section, I present the results of applying my algorithm to a synthetic loan dataset. To generate a synthetic dataset, I start with the process presented in the introductory scenario and use it to create a dataset. Classification algorithms are then used to establish a relationship between the profiles and the paths followed at runtime. Supervised learning is employed because the path of each training profile is provided.

By using data-mining techniques, we can significantly increase the precision of QoS estimation algorithms for web processes. This approach is novel and provides a robust method for path mining in web processes and workflows.