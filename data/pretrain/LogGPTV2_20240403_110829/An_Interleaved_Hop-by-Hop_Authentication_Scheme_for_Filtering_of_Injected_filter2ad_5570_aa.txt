title:An Interleaved Hop-by-Hop Authentication Scheme for Filtering of Injected
False Data in Sensor Networks
author:Sencun Zhu and
Sanjeev Setia and
Sushil Jajodia and
Peng Ning
An Interleaved Hop-by-Hop Authentication Scheme for Filtering of Injected
False Data in Sensor Networks
Sencun Zhu1
Sanjeev Setia1∗
1Center for Secure Information Systems
Sushil Jajodia1,2
George Mason University
Fairfax, VA 22030
2The MITRE Corporation
7515 Colshire Drive
McLean, VA 22102
{szhu1,setia,jajodia}@gmu.edu
Abstract
Sensor networks are often deployed in unattended envi-
ronments, thus leaving these networks vulnerable to false
data injection attacks in which an adversary injects false
data into the network with the goal of deceiving the base
station or depleting the resources of the relaying nodes.
Standard authentication mechanisms cannot prevent this at-
tack if the adversary has compromised one or a small num-
ber of sensor nodes. In this paper, we present an inter-
leaved hop-by-hop authentication scheme that guarantees
that the base station will detect any injected false data pack-
ets when no more than a certain number t nodes are com-
promised. Further, our scheme provides an upper bound B
for the number of hops that a false data packet could be for-
warded before it is detected and dropped, given that there
are up to t colluding compromised nodes. We show that in
the worst case B is O(t2). Through performance analysis,
we show that our scheme is efﬁcient with respect to the se-
curity it provides, and it also allows a tradeoff between se-
curity and performance.
1. Introduction
Consider a military application of sensor networks for
reconnaissance of the opposing forces, as shown in Fig. 1.
Suppose we want to monitor the activities of the oppos-
ing forces, e.g., tank movements, ship arrivals or departures,
and other relevant events. To achieve this goal, we can de-
ploy a cluster of sensor nodes around each area of inter-
est. We can then deploy a base station in a secure location
∗
also with Computer Science Dept, George Mason University
Proceedings of the 2004 IEEE Symposium on Security and Privacy (S&P’04)  
1081-6011/04 $ 20.00 © 2004 IEEE 
Peng Ning
Computer Science Department
North Carolina State University
Raleigh, NC 27695
PI:EMAIL
to control the sensors and collect data reported by the sen-
sors. To facilitate data collection in such a network, sensor
nodes on a path from an area of interest to the base station
can relay the data to the base station.
The unattended nature of the deployed sensor network
lends itself to several attacks by the adversary, including
physical destruction of sensor nodes, security attacks on the
routing and data link protocols, and resource consumption
attacks launched to deplete the limited energy resources of
the sensor nodes.
Unattended sensor node deployment also makes another
attack easier: an adversary may compromise several sensor
nodes, and then use the compromised nodes to inject false
data into the network. This attack falls in the category of in-
sider attacks. Standard authentication mechanisms are not
sufﬁcient to prevent such insider attacks, since the adver-
sary knows all the keying material possessed by the com-
promised nodes. We note that this attack can be launched
against many sensor network applications, though we have
only given a military scenario.
In this paper, we present a scheme for addressing this
form of attack, which we call a false data injection attack.
Our scheme enables the base station to verify the authentic-
ity of a report that it has received as long as the number of
compromised sensor nodes does not exceed a certain thresh-
old. Further, our scheme attempts to ﬁlter out false data
packets injected into the network by compromised nodes
before they reach the base station, thus saving the energy
for relaying them.
In a recent work, Przydatek, Song, and Perrig proposed
SIA [16], a secure information aggregation scheme for sen-
sor networks that addresses a similar problem to ours. SIA
addresses the issue of false data injection using statistical
techniques and interactive proofs, ensuring that the aggre-
cluster
munition plant
River
Mission
AUTO
SEQUENTIAL SWITCHING UNIT
Base
Station
Sensor Reading
Figure 1. An example sensor network. Suppose we want to monitor three areas of interest, the road,
the river, and the munition plant, by deploying a cluster of sensor nodes (ﬁlled circles) in each area.
The base station sends commands or queries to the sensor nodes, and receives reports from them.
All the communications are relayed by some forwarding nodes (blank circles).
gated result reported by the aggregation node (the base sta-
tion) is a good approximation to the true value, even if a
small number of sensor nodes and the aggregation node may
have been compromised. In contrast, the focus of our work
is on detecting and ﬁltering out false data packets, either at
or en-route to the base station. Our scheme is particularly
useful for large-scale sensor networks where a sensor re-
port needs to be relayed over several hops before it reaches
the base station, and for applications where the information
contained in the sensor reports is not amenable to the statis-
tical techniques used by SIA (e.g., non-numeric data). We
note that our scheme and SIA address complementary prob-
lems, and the techniques of both schemes can be combined
to make the network more robust to false data injection at-
tacks.
To defend against false data injection attacks, we present
an authentication scheme in which at least t + 1 sensor
nodes have to agree upon a report before it is sent to the
base station. Further, all the nodes that are involved in re-
laying the report to the base station authenticate the report
in an interleaved, hop-by-hop fashion. Here t is a security
threshold based on the security requirements of the applica-
tion under consideration and the network node density. Our
scheme guarantees that if no more than t nodes are com-
promised, the base station will detect any false data pack-
ets injected by the compromised sensors. In addition, for
a given t, our scheme provides an upper bound B for the
number of hops that a false data packet can be forwarded
before it is detected and dropped. If every noncompromised
node on the path between a cluster head and the base station
knows the ids of the nodes that are t + 1 hops away from
it on the path, then B = t; otherwise, without this knowl-
edge, B = (t − 1)(t − 2). Through performance analysis,
we show that our scheme is efﬁcient with respect to the se-
curity it provides.
The remainder of this paper is organized as follows. Sec-
tion 2 introduces our scheme in detail. In Section 3 and Sec-
tion 4 we study the security and the performance of our
scheme. We introduce the related work in Section 5, and
conclude our work in Section 6.
2. An Interleaved Hop-by-hop Authentication
Scheme
2.1. Assumptions
We describe the assumptions regarding sensor networks
before we present our scheme in detail.
Network and Node Assumptions Sensor nodes can be de-
ployed via aerial scattering or by physical installation. We
assume that in an area of interest, sensor nodes are or-
ganized into clusters. Each cluster includes at least t + 1
Proceedings of the 2004 IEEE Symposium on Security and Privacy (S&P’04)  
1081-6011/04 $ 20.00 © 2004 IEEE 
nodes, where t is a design parameter. In a cluster, one node
is elected to be the cluster head, and each cluster has a
unique cluster id. The issues of electing a node as the clus-
ter head and how to generate a unique cluster id are out of
the scope of this paper. A cluster head collects sensor read-
ings or votes from t + 1 cluster nodes (including itself), and
then reports the result to the base station. Note that the role
of cluster head may rotate among the cluster nodes, accord-
ing to an appropriate criteria such as remaining energy.
We assume network links are bidirectional; that is, if
node u can hear node v, node v can also hear node u. Sensor
nodes are similar to the current generation of sensor nodes
(e.g. the Berkeley MICA motes [10]) in their computational
and communication capabilities and power resources. We
assume that every node has space to store several hundred
bytes of keying materials.
Security Assumptions We assume that every node shares a
master secret key with the base station. We also assume that
each node knows (at least a subset of) its one-hop neigh-
bors, and has established a pairwise key with each of them.
We argue that this is a reasonable assumption. For exam-
ple, we can use the pairwise key establishment scheme in
LEAP [19] to achieve this goal. Under this assumption, the
impact of a node compromise is localized in the immediate
neighborhood of the compromised node. We further assume
that a node can establish a pairwise key with another node
that is multiple hops away, if needed. For example, if the
network size is small (for example, fewer than 200 nodes),
we can employ either the Blom scheme [3] or the Blundo
scheme [4] directly. For a larger network, we may use the
extensions [6, 15] to these schemes to tolerate a possibly
larger number of node compromises. In all these schemes,
two nodes only need to know each other’s id to establish a
pairwise key, and the computational overhead is shown to be
affordable for current generation sensor nodes [6, 15]. For
simplicity, we refer to these schemes as id-based schemes.
Since we mention the Blundo scheme frequently as an ex-
ample of an id-based scheme during the description of our
scheme, we provide a brief introduction to this scheme in
Appendix A.
We further assume that the base station has a mech-
anism to authenticate broadcast messages (e.g., based on
µTESLA [17]), and every node can verify the broadcast
messages. Because the role of cluster head may rotate
among cluster nodes, we assume that all nodes are equally
trusted. We assume that if a node is compromised, all the in-
formation it holds will also be compromised. However, we
assume that the base station will not be compromised.
2.2. Threat Model and Design Goal
Since wireless communication is broadcast-based, we
assume that an adversary can eavesdrop on all trafﬁc, inject
Proceedings of the 2004 IEEE Symposium on Security and Privacy (S&P’04)  
1081-6011/04 $ 20.00 © 2004 IEEE 
packets, and replay older packets. We assume that an adver-
sary can take full control of compromised nodes. Thus, an
adversary may command compromised nodes to drop or al-
ter messages going through them, aiming at preventing the
base station from receiving authentic sensor readings.
In this paper, we focus on false data injection attacks,
in which an attacker’s goal is to cause false alarms or to de-
plete the already-constrained resources of forwarding nodes
by injecting false data. We assume that the compromised
nodes can collude in their attacks. Our goal is to design
an authentication scheme that can defend against false data
injection attacks launched by up to t compromised nodes,
where t is a system parameter. This scheme should have the
following properties when there are no more than t compro-
mised nodes. First, the base station should be able to detect
any false data packet injected by a compromised node. Sec-
ond, the number of hops before an injected data packet is de-
tected and discarded should be as small as possible. Third,
the scheme should be efﬁcient in computation and commu-
nication with respect to the security it provides. Finally, the
scheme should be robust to node failures.
2.3. Notation and Deﬁnition
Notation The following notations appear in the rest of this
discussion.
cating nodes.
• u, v (in lower case) are principals such as communi-
• Ku is the key of node u shared with the base station.
• Kuv is the pairwise key shared between nodes u and
• G is a family of pseudo-random functions [8].
• K a
u is node u’s authentication key, derived as K a
u =
v.
GKu(0).
• M AC(k, s)
is
the message authentication code
(MAC) of message s generated with a symmet-
ric key k.
We denote the base station as BS and the head of a clus-
ter of sensor nodes as CH. Let n be the number of hops
between BS and CH, and ui (1 ≤ i ≤ n) be an interme-
diate node on the path from CH to BS, where i increases
from CH to BS. Let vi (1 ≤ i ≤ t) denote one of the t clus-
ter nodes other than CH in a cluster.
Deﬁnition 1 For two nodes ui and uj on the path from CH
to BS, if |i − j| = t + 1, we say ui and uj are associated,
and ui is an associated node of uj. More speciﬁcally, if i −
j = t + 1, ui is the upper associated node of node uj, and
uj is the lower associated node of node ui.
From this deﬁnition, we know that a node that is less than
t+1 hops away from BS does not have an upper associated
node. Also note that an intermediate node may have mul-
tiple lower associated nodes if it has multiple child nodes
leading to multiple clusters. We further extend this deﬁni-
tion by including the following two special cases.
• A node ui (1 ≤ i ≤ t) that is less than t + 1 hops away
from CH has one of the cluster nodes vi (1 ≤ i ≤ t)
as a lower associated node.
• The cluster head CH is associated with ut+1.
Fig. 2 shows a node cluster and a path from the cluster
head to the base station, where t = 3. Node u3 has an upper
associated node u7 and a lower association node v3. Node
u5 has a lower associated node u1 but no upper associated
node.
2.4. Scheme Overview
Our scheme involves the following ﬁve phases:
1. In the node initialization and deployment phase, the
key server loads every node with a unique id, as well
as necessary keying materials that allow the node to es-
tablish pairwise keys with other nodes. After deploy-
ment, a node ﬁrst establishes a one-hop pairwise key
with each of its neighbors.
2. In the association discovery phase, a node discovers
the ids of its associated nodes. This process may be ini-
tiated by the base station periodically, or by a node that
detects the failure of a neighbor node.
3. In the report endorsement phase, t + 1 nodes gener-
ate a report collaboratively when they detect the oc-
currence of an event of interest. More speciﬁcally, ev-
ery participating node computes two MACs over the
event, one using its key shared with the BS, and the
other using its pairwise key shared with its upper asso-
ciated node. Then it sends the MACs to its cluster head.
The cluster head collects MACs from all the participat-
ing nodes, wraps them into a report, and then forwards
the report towards BS.
4. In the en-route ﬁltering phase, every forwarding node
veriﬁes the MAC computed by its lower association
node, and then removes that MAC from the received
report. If the veriﬁcation succeeds, it then computes
and attaches a new MAC based on its pairwise key
shared with its upper associated node. Finally, it for-
wards the report to the next node towards the BS.
5. In the base station veriﬁcation phase, the BS veriﬁes
the report after receiving it. If the BS detects that t + 1
nodes have endorsed the report correctly, it accepts the
report; otherwise, it simply discards the report.
2.5. The Basic Scheme
In this section, we illustrate the basic idea in our scheme.
We will discuss it in more detail in Sections 2.6 and 2.7.
2.5.1. Node Initialization and Deployment The key
server loads every node with a unique integer id, rang-
ing from 0 to the maximal number of nodes in the net-
work. Therefore, for example, a node id is of size two bytes
if the number of nodes in the network is between 256 and
65536. The key server also loads every node u with nec-
essary keying materials. Speciﬁcally,
it pre-loads node
u with an individual key Ku shared with the base sta-
tion. From Ku, node u derives its authentication key
K a
u. If the one-hop pairwise key establishment scheme
in LEAP [19] is employed, node u is loaded with an ini-
tial network key. If the Blundo scheme [4] is used for
establishing multi-hop pairwise keys, the key server ran-
domly generates a symmetric bivariate polynomial of de-
gree k, and loads node u with the k + 1 coefﬁcients of
polynomial f(u, y). After node u is deployed, it discov-