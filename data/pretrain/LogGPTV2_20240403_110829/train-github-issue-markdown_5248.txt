# Checklist
  * I have read the relevant section in the  
contribution guide  
on reporting bugs.
  * I have checked the issues list  
for similar or identical bug reports.
  * I have checked the pull requests list  
for existing proposed fixes.
  * I have checked the commit log  
to find out if the bug was already fixed in the master branch.
  * I have included all related issues and possible duplicate issues  
in this issue (If there are none, check this box anyway).
## Mandatory Debugging Information
  * I have included the output of `celery -A proj report` in the issue.  
(if you are not able to do this, then at least specify the Celery  
version affected).
  * I have verified that the issue exists against the `master` branch of Celery.
  * I have included the contents of `pip freeze` in the issue.
  * I have included all the versions of all the external dependencies required  
to reproduce this bug.
## Optional Debugging Information
  * I have tried reproducing the issue on more than one Python version  
and/or implementation.
  * I have tried reproducing the issue on more than one message broker and/or  
result backend.
  * I have tried reproducing the issue on more than one version of the message  
broker and/or result backend.
  * I have tried reproducing the issue on more than one operating system.
  * I have tried reproducing the issue on more than one workers pool.
  * I have tried reproducing the issue with autoscaling, retries,  
ETA/Countdown & rate limits disabled.
  * I have tried reproducing the issue after downgrading  
and/or upgrading Celery and its dependencies.
## Related Issues and Possible Duplicates
#### Related Issues
  * None
#### Possible Duplicates
  * None
## Environment & Settings
**Celery version** :
**`celery report` Output:**
    celery -A celeryacl report
    software -> celery:4.3.0 (rhubarb) kombu:4.5.0 py:3.6.8
    billiard:3.6.0.0 py-amqp:2.4.2
    platform -> system:Linux arch:64bit
    kernel version:4.18.0-1013-azure imp:CPython
    loader -> celery.loaders.app.AppLoader
    settings -> transport:amqp results:db+mysql+pymysql://celery:**@X.X.X.X:XXXX/celeryresults
# Steps to Reproduce
## Required Dependencies
  * **Minimal Python Version** : N/A or Unknown
  * **Minimal Celery Version** : N/A or Unknown
  * **Minimal Kombu Version** : N/A or Unknown
  * **Minimal Broker Version** : N/A or Unknown
  * **Minimal Result Backend Version** : N/A or Unknown
  * **Minimal OS and/or Kernel Version** : N/A or Unknown
  * **Minimal Broker Client Version** : N/A or Unknown
  * **Minimal Result Backend Client Version** : N/A or Unknown
### Python Packages
**`pip freeze` Output:**
    pip freeze
    amqp==2.4.2
    asn1crypto==0.24.0
    bcrypt==3.1.6
    billiard==3.6.0.0
    celery==4.3.0
    cffi==1.12.2
    Click==7.0
    cryptography==2.6.1
    Flask==1.0.2
    Flask-Cors==3.0.7
    itsdangerous==1.1.0
    Jinja2==2.10
    kombu==4.5.0
    MarkupSafe==1.1.1
    mysql-connector-python==8.0.15
    netmiko==2.3.3
    paramiko==2.4.2
    protobuf==3.7.1
    pyasn1==0.4.5
    pycparser==2.19
    PyMySQL==0.9.3
    PyNaCl==1.3.0
    pyserial==3.4
    pytz==2018.9
    PyYAML==5.1
    scp==0.13.2
    six==1.12.0
    SQLAlchemy==1.2.14
    textfsm==0.4.1
    vine==1.3.0
    Werkzeug==0.15.2
### Other Dependencies
N/A
## Minimally Reproducible Test Case
# Expected Behavior
With the following configured "result_extended" to true I expected to see more
meta data in the backend results DB but I don't. I just see the standard
results.
app = Celery('tasks',  
backend='db+mysql+pymysql://XXX:XXX@X.X.X.X:XXXX/celeryresults',  
broker='amqp://xxxx:xxxx@X.X.X.X/celery',  
result_extended=True)
# Actual Behavior