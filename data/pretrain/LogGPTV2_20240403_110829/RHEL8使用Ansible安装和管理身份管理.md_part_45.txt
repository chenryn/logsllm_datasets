:::
::: section
::: titlepage
# []{#using-ansible-to-manage-dns-locations-in-idm_using-ansible-to-install-and-manage-idm.html#deployment-considerations-for-dns-locations_using-ansible-to-manage-dns-locations-in-idm}DNS 位置的部署注意事项 {.title}
:::
使用集成 DNS
时，身份管理(IdM)可以生成特定于位置的服务(SRV)记录。因为每个 IdM DNS
服务器都会生成特定于位置的 SRV 记录，所以您必须在每个 DNS
位置至少安装一个 IdM DNS 服务器。
客户端与 DNS 位置的关联仅由客户端收到的 DNS
记录定义。因此，如果客户端执行 DNS 服务发现，从 IdM DNS
服务器解析特定于位置的记录，您可以将 IdM DNS 服务器与非 IdM DNS
使用者服务器合并，并递归器。
在大多数使用混合 IdM 和非 IdM DNS 服务的部署中，DNS
递归器都通过使用往返时间指标自动选择最接近的 IdM DNS
服务器。通常，这可确保使用非 IdM DNS 服务器的客户端正在获取最接近的 DNS
位置的记录，从而使用最佳 IdM 服务器集。
:::
::: section
::: titlepage
# []{#using-ansible-to-manage-dns-locations-in-idm_using-ansible-to-install-and-manage-idm.html#dns-time-to-live-ttl_using-ansible-to-manage-dns-locations-in-idm}DNS 生存时间(TTL) {.title}
:::
客户端可以在区域配置中设置的一段时间内缓存 DNS
资源记录。由于这种缓存，客户端可能无法接收更改，直到生存时间(TTL)值过期为止。Identity
Management(IdM)中的默认 TTL 值为 `1 天`{.literal}。
如果您的客户端计算机在站点间漫游，您应该调整 IdM DNS 区的 TTL
值。将值设为比客户端在站点之间 roam
需要的时间值低。这样可确保客户端上缓存的 DNS
条目在重新连接到另一个站点之前过期，从而查询 DNS 服务器刷新特定于位置的
SRV 记录。
::: itemizedlist
**其它资源**
-   有关如何修改 DNS 区域的默认 TTL [的详情，请参考主 IdM DNS
    区的配置属性](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_identity_management/index#configuration-attributes-of-primary-idm-dns-zones_using-ansible-playbooks-to-manage-idm-dns-zones){.link}
    。
:::
:::
::: section
::: titlepage
# []{#using-ansible-to-manage-dns-locations-in-idm_using-ansible-to-install-and-manage-idm.html#using-ansible-to-ensure-an-idm-location-is-present_using-ansible-to-manage-dns-locations-in-idm}使用 Ansible 确保存在 IdM 位置 {.title}
:::
作为身份管理系统管理员(IdM)，您可以配置 IdM DNS
位置，以允许客户端在最接近的网络基础架构中查找身份验证服务器。
以下流程描述了如何使用 Ansible playbook 来确保 IdM 中存在 DNS
位置。这个示例描述了如何确保 IdM 中存在 [**germany**]{.strong} DNS
位置。因此，您可以将特定的 IdM 服务器分配给这个位置，以便本地 IdM
客户端可以使用它们来缩短服务器响应时间。
::: itemizedlist
**先决条件**
-   您知道 IdM 管理员密码。
-   您已在 Ansible 控制节点上安装了
    [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包。
-   [示例假定您已创建并配置了](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_identity_management/index#preparing-your-environment-for-managing-idm-using-ansible-playbooks_configuring-and-managing-idm){.link}
    [**\~/[*MyPlaybooks*]{.emphasis}/**]{.strong} 目录，作为存储示例
    playbook 副本的中央位置。
-   您了解 [DNS
    位置的部署注意事项](#using-ansible-to-manage-dns-locations-in-idm_using-ansible-to-install-and-manage-idm.html#deployment-considerations-for-dns-locations_using-ansible-to-manage-dns-locations-in-idm "DNS 位置的部署注意事项"){.link}。
:::
::: orderedlist
**流程**
1.  进入 [**\~/[*MyPlaybooks*]{.emphasis}/**]{.strong} 目录：
    ``` literallayout
    $ cd ~/MyPlaybooks/
    ```
2.  制作位于
    `/usr/share/doc/ansible -freeipa/playbooks/location/ 目录中的 location-`{.literal}
    present.yml``{=html} 文件的副本：
    ``` literallayout
    $ cp /usr/share/doc/ansible-freeipa/playbooks/location/location-present.yml location-present-copy.yml
    ```
3.  打开 `location-present-copy.yml`{.literal} Ansible playbook
    文件以进行编辑。
4.  通过在 `ipalocation`{.literal} task 部分中设置以下变量来调整文件：
    ::: itemizedlist
    -   调整任务 `的名称`{.literal}，使其与您的用例对应。
    -   将 `ipaadmin_password`{.literal} 变量设置为 IdM 管理员的密码。
    -   将 `name`{.literal} 变量设置为位置的名称。
    :::
    这是当前示例修改的 Ansible playbook 文件：
    ``` literallayout
    ---
    - name: location present example
      hosts: ipaserver
      become: true
      tasks:
      - name: Ensure that the "germany" location is present
        ipalocation:
          ipaadmin_password: Secret123
          name: germany
    ```
5.  保存该文件。
6.  运行指定 playbook 文件和清单文件的 Ansible playbook：
    ``` literallayout
    $ ansible-playbook -v -i inventory location-present-copy.yml
    ```
:::
::: itemizedlist
**其它资源**
-   要为 IdM 中已存在的 IdM 位置配置特定的服务器，请参阅使用 [IdM Web UI
    将 IdM 服务器分配给 DNS 位置，或使用 IdM CLI 将 IdM 服务器分配给 DNS
    位置](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_identity_management/index#assigning-an-idm-server-to-a-dns-location-using-the-idm-web-ui_managing-dns-locations-in-idm){.link}。
:::
:::
::: section
::: titlepage
# []{#using-ansible-to-manage-dns-locations-in-idm_using-ansible-to-install-and-manage-idm.html#using-ansible-to-ensure-an-idm-location-is-absent_using-ansible-to-manage-dns-locations-in-idm}使用 Ansible 确保缺少 IdM 位置 {.title}
:::
作为身份管理系统管理员(IdM)，您可以配置 IdM DNS
位置，以允许客户端在最接近的网络基础架构中查找身份验证服务器。
以下流程描述了如何使用 Ansible playbook 来确保 IdM 中没有 DNS
位置。这个示例描述了如何确保 IdM 中没有 [**germany**]{.strong} DNS
位置。因此，您无法将特定的 IdM 服务器分配给这个位置，本地 IdM
客户端无法使用它们。
::: itemizedlist
**先决条件**
-   您知道 IdM 管理员密码。
-   没有 IdM 服务器分配给 [**germany**]{.strong} DNS 位置。
-   您已在 Ansible 控制节点上安装了
    [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包。
-   [示例假定您已创建并配置了](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_identity_management/index#preparing-your-environment-for-managing-idm-using-ansible-playbooks_configuring-and-managing-idm){.link}
    [**\~/[*MyPlaybooks*]{.emphasis}/**]{.strong} 目录，作为存储示例
    playbook 副本的中央位置。
:::
::: orderedlist
**流程**
1.  进入 [**\~/[*MyPlaybooks*]{.emphasis}/**]{.strong} 目录：
    ``` literallayout
    $ cd ~/MyPlaybooks/
    ```
2.  生成位于
    `/usr/share/doc/ansible -freeipa/playbooks/location/ 目录中的 location-`{.literal}
    absent.yml``{=html} 文件的副本：
    ``` literallayout
    $ cp /usr/share/doc/ansible-freeipa/playbooks/location/location-absent.yml location-absent-copy.yml
    ```
3.  打开 `location-absent-copy.yml`{.literal} Ansible playbook
    文件以进行编辑。
4.  通过在 `ipalocation`{.literal} task 部分中设置以下变量来调整文件：
    ::: itemizedlist
    -   调整任务 `的名称`{.literal}，使其与您的用例对应。
    -   将 `ipaadmin_password`{.literal} 变量设置为 IdM 管理员的密码。
    -   将 `name`{.literal} 变量设置为 DNS 位置的名称。
    -   确保 `state`{.literal} 变量设置为 `absent`{.literal}。
    :::
    这是当前示例修改的 Ansible playbook 文件：
    ``` literallayout
    ---
    - name: location absent example
      hosts: ipaserver
      become: true
      tasks:
      - name: Ensure that the "germany" location is absent
        ipalocation:
          ipaadmin_password: Secret123
          name: germany
          state: absent
    ```
5.  保存该文件。
6.  运行指定 playbook 文件和清单文件的 Ansible playbook：
    ``` literallayout
    $ ansible-playbook -v -i inventory location-absent-copy.yml
    ```
:::
:::
::: section
::: titlepage
# []{#using-ansible-to-manage-dns-locations-in-idm_using-ansible-to-install-and-manage-idm.html#_additional_resources_2}其它资源 {.title}
:::
::: itemizedlist
-   您可以在
    `/usr/share/doc/ansible -freeipa/ 目录中的 README-location.md`{.literal}
    文件中看到 ansible``{=html} -freeipa``{=html}
    `ipalocation 模块的`{.literal} 更多 Ansible playbook
    示例。该文件还包含 `ipalocation`{.literal} 变量的定义。
-   您可以在
    `/usr/share/doc/ansible-freeipa/playbooks/location 目录中看到 ipalocation`{.literal}
    模块的``{=html} Ansible playbook 示例。
:::
:::
:::
[]{#managing-dns-forwarding-in-idm_using-ansible-to-install-and-manage-idm.html}
::: chapter
::: titlepage
# []{#managing-dns-forwarding-in-idm_using-ansible-to-install-and-manage-idm.html#managing-dns-forwarding-in-idm_using-ansible-to-install-and-manage-idm}第 27 章 在 IdM 中管理 DNS 转发 {.title}
:::
以下流程描述了如何在 Identity Management(IdM)Web UI、IdM CLI 和使用
Ansible 中配置 DNS 全局转发器和 DNS 转发区：
::: itemizedlist
-   ["IdM DNS
    服务器的两个角色"一节](#managing-dns-forwarding-in-idm_using-ansible-to-install-and-manage-idm.html#the-two-roles-of-an-idm-dns-server_managing-dns-forwarding-in-idm "IdM DNS 服务器的两个角色"){.xref}
-   ["IdM 中的 DNS
    转发策略"一节](#managing-dns-forwarding-in-idm_using-ansible-to-install-and-manage-idm.html#dns-forward-policies-in-idm_managing-dns-forwarding-in-idm "IdM 中的 DNS 转发策略"){.xref}
-   ["在 IdM Web UI
    中添加全局转发器"一节](#managing-dns-forwarding-in-idm_using-ansible-to-install-and-manage-idm.html#adding-a-global-forwarder-in-the-idm-web-ui_managing-dns-forwarding-in-idm "在 IdM Web UI 中添加全局转发器"){.xref}
-   ["在 CLI
    中添加全局转发器"一节](#managing-dns-forwarding-in-idm_using-ansible-to-install-and-manage-idm.html#adding-a-global-forwarder-in-the-cli_managing-dns-forwarding-in-idm "在 CLI 中添加全局转发器"){.xref}
-   ["在 IdM Web UI 中添加 DNS
    转发区"一节](#managing-dns-forwarding-in-idm_using-ansible-to-install-and-manage-idm.html#adding-a-dns-forward-zone-in-the-idm-web-ui_managing-dns-forwarding-in-idm "在 IdM Web UI 中添加 DNS 转发区"){.xref}
-   ["在 CLI 中添加 DNS
    转发区域"一节](#managing-dns-forwarding-in-idm_using-ansible-to-install-and-manage-idm.html#adding-a-dns-forward-zone-in-the-cli_managing-dns-forwarding-in-idm "在 CLI 中添加 DNS 转发区域"){.xref}
-   ["使用 Ansible 在 IdM 中建立 DNS
    全局转发器"一节](#managing-dns-forwarding-in-idm_using-ansible-to-install-and-manage-idm.html#establishing-a-dns-global-forwarder-in-idm-using-ansible_managing-dns-forwarding-in-idm "使用 Ansible 在 IdM 中建立 DNS 全局转发器"){.xref}
-   ["使用 Ansible 在 IdM 中存在 DNS
    全局转发器"一节](#managing-dns-forwarding-in-idm_using-ansible-to-install-and-manage-idm.html#ensuring-the-presence-of-a-dns-global-forwarder-in-idm-using-ansible_managing-dns-forwarding-in-idm "使用 Ansible 在 IdM 中存在 DNS 全局转发器"){.xref}
-   ["使用 Ansible 确保 IdM 中没有 DNS
    全局转发器"一节](#managing-dns-forwarding-in-idm_using-ansible-to-install-and-manage-idm.html#ensuring-the-absence-of-a-dns-global-forwarder-in-idm-using-ansible_managing-dns-forwarding-in-idm "使用 Ansible 确保 IdM 中没有 DNS 全局转发器"){.xref}
-   ["使用 Ansible 在 IdM 中禁用 DNS Global
    Forwarders"一节](#managing-dns-forwarding-in-idm_using-ansible-to-install-and-manage-idm.html#ensuring-dns-global-forwarders-are-disabled-in-idm-using-ansible_managing-dns-forwarding-in-idm "使用 Ansible 在 IdM 中禁用 DNS Global Forwarders"){.xref}
-   ["使用 Ansible 在 IdM 中存在 DNS Forward
    Zone"一节](#managing-dns-forwarding-in-idm_using-ansible-to-install-and-manage-idm.html#ensuring-the-presence-of-a-dns-forward-zone-in-idm-using-ansible_managing-dns-forwarding-in-idm "使用 Ansible 在 IdM 中存在 DNS Forward Zone"){.xref}
-   ["确保 DNS Forward 区域在 IdM 中使用 Ansible
    的多个转发器"一节](#managing-dns-forwarding-in-idm_using-ansible-to-install-and-manage-idm.html#ensuring-a-dns-forward-zone-has-multiple-forwarders-in-idm-using-ansible_managing-dns-forwarding-in-idm "确保 DNS Forward 区域在 IdM 中使用 Ansible 的多个转发器"){.xref}
-   ["使用 Ansible 在 IdM 中禁用 DNS
    转发区"一节](#managing-dns-forwarding-in-idm_using-ansible-to-install-and-manage-idm.html#ensuring-a-dns-forward-zone-is-disabled-in-idm-using-ansible_managing-dns-forwarding-in-idm "使用 Ansible 在 IdM 中禁用 DNS 转发区"){.xref}
-   ["使用 Ansible 在 IdM 中没有 DNS Forward
    Zone"一节](#managing-dns-forwarding-in-idm_using-ansible-to-install-and-manage-idm.html#ensuring-the-absence-of-a-dns-forward-zone-in-idm-using-ansible_managing-dns-forwarding-in-idm "使用 Ansible 在 IdM 中没有 DNS Forward Zone"){.xref}
:::
::: section
::: titlepage
# []{#managing-dns-forwarding-in-idm_using-ansible-to-install-and-manage-idm.html#the-two-roles-of-an-idm-dns-server_managing-dns-forwarding-in-idm}IdM DNS 服务器的两个角色 {.title}
:::
DNS 转发会影响 DNS 服务如何应答 DNS 查询。默认情况下，与 IdM 集成的
Berkeley Internet [*名称域(BIND)服务充当权威和 []{.emphasis}
递归*]{.emphasis} DNS 服务器：
::: variablelist
[权威 DNS 服务器]{.term}
:   当 DNS 客户端查询属于 IdM 服务器具有权威的 DNS 区域的名称时，BIND
    回复包含在配置区域中的数据。权威数据总是优先于任何其他数据。
[递归 DNS 服务器]{.term}
:   当 DNS 客户端查询 IdM 服务器不是权威的名称时，BIND 会尝试使用其他
    DNS 服务器解析查询。如果未定义转发器，BIND 会询问 Internet
    上的根服务器，并使用递归解析算法回答 DNS 查询。
:::
在某些情况下，不需要让 BIND 直接联系其他 DNS 服务器，并根据 Internet
上可用的数据执行递归。您可以将 BIND 配置为使用另一个 DNS
[*服务器（转发器*]{.emphasis} ）来解析查询。
当您将 BIND 配置为使用转发器时，查询和答案将在 IdM
服务器和转发器之间来回转发，IdM 服务器充当非权威数据的 DNS 缓存。
:::
::: section
::: titlepage
# []{#managing-dns-forwarding-in-idm_using-ansible-to-install-and-manage-idm.html#dns-forward-policies-in-idm_managing-dns-forwarding-in-idm}IdM 中的 DNS 转发策略 {.title}