# 四、Docker 安全工作台
在这一章中，我们将会看到的 Docker 工作台。这是一个工具，可用于扫描您的 Docker 环境，启动主机级别并检查该主机的所有方面，检查 Docker 守护程序及其配置，检查 Docker 主机上运行的容器，以及检查 Docker 安全操作，并为您提供全面的威胁或问题建议，您可能希望查看这些威胁或问题以解决这些问题。在本章中，我们将研究以下项目:
*   **Docker 安全**–最佳实践
*   **Docker**–最佳实践
*   **互联网安全中心** ( **CIS** )指南
    *   主机配置
    *   docker daemon configuration(Docker 守护程序配置)
    *   停靠守护程序配置文件
    *   容器映像/运行时
    *   Docker 安全业务
*   Docker Bench 安全应用
    *   运行工具
    *   理解输出
# Docker 安全–最佳实践
在本节中，我们将了解 Docker 的最佳实践以及 CIS 指南，以正确保护 Docker 环境的所有方面。当您实际运行扫描(在本章的下一节)并获得需要或应该修复的内容的结果时，您将参考本指南。该指南分为以下几个部分:
*   主机配置
*   Docker 守护程序配置
*   Docker 守护程序配置文件
*   容器映像/运行时
*   安全操作
# Docker–最佳实践
在我们深入了解《CIS 指南》之前，让我们回顾一下使用 Docker 时的以下一些最佳实践:
*   **每个容器一个应用**:将你的应用分散到每个容器一个。Docker 就是为此而生的，它让一切都变得简单。我们之前谈到的隔离是关键所在。
*   **查看谁有权访问您的 Docker 主机**:请记住，谁有权访问您的 Docker 主机，谁就有权在主机上操作您的所有映像和容器。
*   **使用最新版本**:始终使用最新版本的 Docker。这将确保所有的安全漏洞都已修补，您也拥有最新的功能。
*   **利用资源**:如果需要帮助，就利用可以利用的资源。Docker 内部的社区非常庞大，非常有帮助。利用他们的网站、文档和**互联网中继聊天** ( **IRC** )聊天室，发挥你的优势。
# CIS 指南
CIS 指南是一个文档([https://benchmarks . ciscurity . org/tools 2/docker/CIS _ docker _ 1.6 _ benchmark _ v 1 . 0 . 0 . pdf](https://benchmarks.cisecurity.org/tools2/docker/cis_docker_1.6_benchmark_v1.0.0.pdf))，它涵盖了 Docker 组件的各个方面，帮助您安全地配置您的 Docker 环境的各个组件。我们将在下面的章节中介绍这些内容。
## 主机配置
指南的这一部分是关于您的 Docker 主机的配置。这是 Docker 环境中运行所有容器的部分。因此，保持它的安全是最重要的。这是抵御袭击者的第一道防线。
## Docker 守护程序配置
指南的这一部分建议保护正在运行的 Docker 守护程序。您对 Docker 守护程序配置所做的一切都会影响每个容器。这些是我们之前看到的可以附加到 Docker 守护进程的开关，以及当我们运行该工具时您将在下一节中看到的项目。
## Docker 守护程序配置文件
指南的这一部分处理 Docker 守护程序使用的文件和目录。范围从权限到所有权。有时，这些区域可能包含您不想让其他人知道的信息，这些信息可能是纯文本格式的。
## 容器映像/运行时
指南的这一部分包含用于保护容器映像的信息以及容器运行时间。
第一部分包含映像、封面基本映像和使用的构建文件。您需要确定您使用的映像不仅用于基础映像，还用于 Docker 体验的任何方面。本指南的这一部分涵盖了创建自己的基本映像时应遵循的事项，以确保它们是安全的。
第二部分，容器运行时，涵盖了许多与安全相关的项目。您必须注意您提供的运行时变量。在某些情况下，攻击者可以利用它们为自己谋利，而你却认为你在利用它们为自己谋利。在容器中暴露太多不仅会危及该容器的安全，还会危及 Docker 主机和在该主机上运行的其他容器的安全。
## Docker 安全操作
指南的这一部分涵盖了涉及部署的安全领域。这些项目与要遵循的项目的最佳实践和建议更紧密地联系在一起。
# Docker 工作台安全应用
在本节中，我们将介绍您可以安装和运行的 Docker Benchmark 安全应用。该工具将检查以下部件:
*   主机配置
*   Docker 守护程序配置
*   Docker 守护程序配置文件
*   容器映像和构建文件
*   容器运行时
*   Docker 安全业务
看起来眼熟吗？应该是这样的，因为这些是我们在上一节中回顾过的相同的项目，只构建在一个会为您带来很多负担的应用中。它将向您显示您的配置出现了哪些警告，并提供其他配置项目的信息，甚至是通过测试的项目。
我们将看看如何运行这个工具，一个真实的例子，以及这个过程的输出意味着什么。
## 运行工具
运行工具很简单。它已经为我们包装在一个 Docker 容器中。虽然您可以获取源代码并自定义输出或以某种方式对其进行操作(例如，通过电子邮件发送输出)，但默认设置可能是您所需要的。
代码在这里:[https://github.com/docker/docker-bench-security](https://github.com/docker/docker-bench-security)
要运行该工具，我们只需将以下内容复制并粘贴到我们的 Docker 主机中:
```
$ docker run -it --net host --pid host --cap-add audit_control \
-v /var/lib:/var/lib \
-v /var/run/docker.sock:/var/run/docker.sock \
-v /usr/lib/systemd:/usr/lib/systemd \
-v /etc:/etc --label docker_bench_security \
docker/docker-bench-security
```
如果您还没有映像，它将首先下载映像，然后为您启动该过程。既然我们已经看到了安装和运行它是多么容易，让我们看一下 Docker 主机上的一个示例，看看它实际上是做什么的。然后，我们将查看输出，并深入剖析它。
还有一个选项是克隆 Git 存储库，从`git clone`命令进入目录，运行提供的 shell 脚本。所以，我们有多种选择！
让我们看一个例子，并分解每个部分，如以下命令所示:
```
# ------------------------------------------------------------------------------
# Docker Bench for Security v1.0.0
#
# Docker, Inc. (c) 2015
#
# Checks for dozens of common best-practices around deploying Docker containers in production.
# Inspired by the CIS Docker 1.6 Benchmark:
# https://benchmarks.cisecurity.org/tools2/docker/CIS_Docker_1.6_Benchmark_v1.0.0.pdf
# ------------------------------------------------------------------------------
Initializing Sun Jan 17 19:18:56 UTC 2016
```
### 运行工具-主机配置
让我们来看看主机配置运行时的输出:
```
[INFO] 1 - Host configuration
[WARN] 1.1  - Create a separate partition for containers
[PASS] 1.2  - Use an updated Linux Kernel
[PASS] 1.5  - Remove all non-essential services from the host - Network
[PASS] 1.6  - Keep Docker up to date
[INFO]       * Using 1.9.1 which is current as of 2015-11-09
[INFO]       * Check with your operating system vendor for support and security maintenance for docker
[INFO] 1.7  - Only allow trusted users to control Docker daemon
[INFO]      * docker:x:100:docker
[WARN] 1.8  - Failed to inspect: auditctl command not found.
[INFO] 1.9  - Audit Docker files and directories - /var/lib/docker
[INFO]      * Directory not found
[WARN] 1.10 - Failed to inspect: auditctl command not found.
[INFO] 1.11 - Audit Docker files and directories - docker-registry.service
[INFO]      * File not found
[INFO] 1.12 - Audit Docker files and directories - docker.service
[INFO]      * File not found
[WARN] 1.13 - Failed to inspect: auditctl command not found.
[INFO] 1.14 - Audit Docker files and directories - /etc/sysconfig/docker
[INFO]      * File not found
[INFO] 1.15 - Audit Docker files and directories - /etc/sysconfig/docker-network
[INFO]      * File not found
[INFO] 1.16 - Audit Docker files and directories - /etc/sysconfig/docker-registry
[INFO]      * File not found
[INFO] 1.17 - Audit Docker files and directories - /etc/sysconfig/docker-storage
[INFO]      * File not found
[INFO] 1.18 - Audit Docker files and directories - /etc/default/docker
[INFO]      * File not found
```
### 运行工具–Docker 守护程序配置
让我们看看 Docker 守护程序配置运行时的输出，如以下命令所示:
```
[INFO] 2 - Docker Daemon Configuration
[PASS] 2.1  - Do not use lxc execution driver
[WARN] 2.2  - Restrict network traffic between containers
[PASS] 2.3  - Set the logging level
[PASS] 2.4  - Allow Docker to make changes to iptables
[PASS] 2.5  - Do not use insecure registries
[INFO] 2.6  - Setup a local registry mirror
[INFO]      * No local registry currently configured
[WARN] 2.7  - Do not use the aufs storage driver
[PASS] 2.8  - Do not bind Docker to another IP/Port or a Unix socket
[INFO] 2.9  - Configure TLS authentication for Docker daemon
[INFO]      * Docker daemon not listening on TCP
[INFO] 2.10 - Set default ulimit as appropriate
[INFO]      * Default ulimit doesn't appear to be set
```
### 运行工具–Docker 守护程序配置文件
让我们看看 Docker 守护程序配置文件运行时的输出，如下所示:
```
[INFO] 3 - Docker Daemon Configuration Files
[INFO] 3.1  - Verify that docker.service file ownership is set to root:root
[INFO]      * File not found
[INFO] 3.2  - Verify that docker.service file permissions are set to 644
[INFO]      * File not found
[INFO] 3.3  - Verify that docker-registry.service file ownership is set to root:root
[INFO]      * File not found
[INFO] 3.4  - Verify that docker-registry.service file permissions are set to 644
[INFO]      * File not found
[INFO] 3.5  - Verify that docker.socket file ownership is set to root:root
[INFO]      * File not found
[INFO] 3.6  - Verify that docker.socket file permissions are set to 644
[INFO]      * File not found
[INFO] 3.7  - Verify that Docker environment file ownership is set to root:root
[INFO]      * File not found
[INFO] 3.8  - Verify that Docker environment file permissions are set to 644
[INFO]      * File not found
[INFO] 3.9  - Verify that docker-network environment file ownership is set to root:root
[INFO]      * File not found
[INFO] 3.10 - Verify that docker-network environment file permissions are set to 644
[INFO]      * File not found
[INFO] 3.11 - Verify that docker-registry environment file ownership is set to root:root
[INFO]      * File not found
[INFO] 3.12 - Verify that docker-registry environment file permissions are set to 644
[INFO]      * File not found
[INFO] 3.13 - Verify that docker-storage environment file ownership is set to root:root
[INFO]      * File not found
[INFO] 3.14 - Verify that docker-storage environment file permissions are set to 644
[INFO]      * File not found
[PASS] 3.15 - Verify that /etc/docker directory ownership is set to root:root
[PASS] 3.16 - Verify that /etc/docker directory permissions are set to 755
[INFO] 3.17 - Verify that registry certificate file ownership is set to root:root
[INFO]      * Directory not found
[INFO] 3.18 - Verify that registry certificate file permissions are set to 444
[INFO]      * Directory not found
[INFO] 3.19 - Verify that TLS CA certificate file ownership is set to root:root
[INFO]      * No TLS CA certificate found