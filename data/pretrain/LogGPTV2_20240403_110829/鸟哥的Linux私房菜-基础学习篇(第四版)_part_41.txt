若有一个文件的类型与权限数据为“-rwxr-xr--”，请说明其意义为何？
答：
先将整个类型与权限数据分开查阅，并将十个字符整理成为如下所示：
[-][rwx][r-x][r--]
1 234 567 890
1 为：代表这个文件名为目录或文件，本例中为文件（-）；
234为：拥有者的权限，本例中为可读、可写、可执行（rwx）；
567为：同群组使用者权限，本例中为可读可执行（rx）；
890为：其他使用者权限，本例中为可读（r），就是只读之意
同时注意到，rwx所在的位置是不会改变的，有该权限就会显示字符，没有该权限就变成减号（-）就是了。
另外，目录与文件的权限意义并不相同，这是因为目录与文件所记录的数据内容不相同所致。 由于目录与文件的权限意义非常的重
要，所以鸟哥将他独立到5.2.3节中的目录与文件之权限意义中再来谈。
第第二二栏栏表表示示有有多多少少文文件件名名链链接接到到此此节节点点（（i-node））：：
每个文件都会将他的权限与属性记录到文件系统的i-node中，不过，我们使用的目录树却是使用文件名来记录， 因此每个文件名就
会链接到一个i-node啰！这个属性记录的，就是有多少不同的文件名链接到相同的一个i-node号码去就是了。 关于i-node的相关数据我们
会在第七章谈到文件系统时再加强介绍的。
第第三三栏栏表表示示这这个个文文件件（（或或目目录录））的的“拥拥有有者者帐帐号号”
第第四四栏栏表表示示这这个个文文件件的的所所属属群群组组
在Linux系统下，你的帐号会加入于一个或多个的群组中。举刚刚我们提到的例子，class1, class2, class3均属于projecta这个群组，
假设某个文件所属的群组为projecta，且该文件的权限如图5.2.2所示（-rwxrwx---）， 则class1, class2, class3三人对于该文件都具有可
读、可写、可执行的权限（看群组权限）。 但如果是不属于projecta的其他帐号，对于此文件就不具有任何权限了。
第第五五栏栏为为这这个个文文件件的的容容量量大大小小，，默默认认单单位位为为Bytes；；
第第六六栏栏为为这这个个文文件件的的创创建建日日期期或或者者是是最最近近的的修修改改日日期期：：
这一栏的内容分别为日期（月/日）及时间。如果这个文件被修改的时间距离现在太久了，那么时间部分会仅显示年份而已。 如下
所示：
[root@study ~]# ll /etc/services /root/initial-setup-ks.cfg
-rw-r--r--. 1 root root 670293 Jun 7 2013 /etc/services
-rw-r--r--. 1 root root 1864 May 4 18:01 /root/initial-setup-ks.cfg
# 如上所示，/etc/services 为 2013 年所修改过的文件，离现在太远之故，所以只显示年份；
# 至于 /root/initial-setup-ks.cfg 是今年 （2015） 所创建的，所以就显示完整的时间了。
如果想要显示完整的时间格式，可以利用ls的选项，亦即：“ls -l --full-time”就能够显示出完整的时间格式了！包括年、月、日、时间
喔。 另外，如果你当初是以繁体中文安装你的Linux系统，那么日期字段将会以中文来显示。 可惜的是，中文并没有办法在纯文本的终端
机模式中正确的显示，所以此栏会变成乱码。 那你就得要使用“export LC_ALL=en_US.utf8”来修改语系喔！
如果想要让系统默认的语系变成英文的话，那么你可以修改系统配置文件“/etc/locale.conf”，利用第四章谈到的nano来修改该文件的
内容，使LANG这个变量成为上述的内容即可。
第第七七栏栏为为这这个个文文件件的的文文件件名名
这个字段就是文件名了。比较特殊的是：如果文件名之前多一个“ . ”，则代表这个文件为“隐藏文件”，例如上表中的.config那一行，
该文件就是隐藏文件。 你可以使用“ls”及“ls -a”这两个指令去感受一下什么是隐藏文件啰！
Tips
对于更详细的 ls 用法，还记得怎么查询吗？对啦！使用 ls --help 或 man ls 或 info ls 去看看他的基础用法去！自我进修是很重要
的， 因为“师傅带进门，修行看个人！”，自古只有天才学生，没有明星老师呦！加油吧！^_^
这七个字段的意义是很重要的！务必清楚的知道各个字段代表的意义！尤其是第一个字段的九个权限， 那是整个Linux文件权限的重点
之一。下面我们来做几个简单的练习，你就会比较清楚啰！
例题：
假设test1, test2, test3同属于testgroup这个群组，如果有下面的两个文件，请说明两个文件的拥有者与其相关的权限为何？
-rw-r--r-- 1 root root 238 Jun 18 17:22 test.txt
-rwxr-xr-- 1 test1 testgroup 5238 Jun 19 10:25 ping_tsai
答：
文件test.txt的拥有者为root，所属群组为root。至于权限方面则只有root这个帐号可以存取此文件，其他人则仅能读此文件；
另一个文件ping_tsai的拥有者为test1，而所属群组为testgroup。其中：
test1 可以针对此文件具有可读可写可执行的权力；
而同群组的test2, test3两个人与test1同样是testgroup的群组帐号，则仅可读可执行但不能写（亦即不能修改）；
至于没有加入testgroup这一个群组的其他人则仅可以读，不能写也不能执行！
例题：
承上一题如果我的目录为下面的样式，请问testgroup这个群组的成员与其他人（others）是否可以进入本目录？
drwxr-xr-- 1 test1 testgroup 5238 Jun 19 10:25 groups/
答：
文件拥有者test1[rwx]可以在本目录中进行任何工作；
而testgroup这个群组[r-x]的帐号，例如test2, test3亦可以进入本目录进行工作，但是不能在本目录下进行写入的动作；
至于other的权限中[r--]虽然有r ，但是由于没有x的权限，因此others的使用者，并不能进入此目录！
Linux文文件件权权限限的的重重要要性性：：
与Windows系统不一样的是，在Linux系统当中，每一个文件都多加了很多的属性进来，尤其是群组的概念，这样有什么用途呢？ 其
实，最大的用途是在“数据安全性”上面的。
系统保护的功能：
举个简单的例子，在你的系统中，关于系统服务的文件通常只有root才能读写或者是执行，例如/etc/shadow这一个帐号管理的文件，由
于该文件记录了你系统中所有帐号的数据， 因此是很重要的一个配置文件，当然不能让任何人读取（否则密码会被窃取啊），只有root
才能够来读取啰！所以该文件的权限就会成为[ ---------- ]啰！咦！所有人都不能使用？没关系，root基本上是不受系统的权限所限制的，
所以无论文件权限为何，默认root都可以存取喔！
团队开发软件或数据共享的功能：
此外，如果你有一个软件开发团队，在你的团队中，你希望每个人都可以使用某一些目录下的文件， 而非你的团队的其他人则不予以开
放呢？以上面的例子来说，testgroup的团队共有三个人，分别是test1, test2, test3，那么我就可以将团队所需的文件权限订为[ -rwxrws--- ]
来提供给testgroup的工作团队使用啰！（怎么会有 s 呢？没关系，这个我们在后续章节再讲给你听！）
未将权限设置妥当的危害：
再举个例子来说，如果你的目录权限没有作好的话，可能造成其他人都可以在你的系统上面乱搞啰！ 例如本来只有root才能做的开关
机、ADSL的拨接程序、新增或删除使用者等等的指令，若被你改成任何人都可以执行的话， 那么如果使用者不小心给你重新开机啦！
重新拨接啦！等等的！那么你的系统不就会常常莫名其妙的挂掉啰！ 而且万一你的使用者的密码被其他不明人士取得的话，只要他登陆
你的系统就可以轻而易举的执行一些root的工作！
可怕吧！因此，在你修改你的linux文件与目录的属性之前，一定要先搞清楚， 什么数据是可变的，什么是不可变的！千万注意啰！接下
来我们来处理一下文件属性与权限的变更吧！
我们现在知道文件权限对于一个系统的安全重要性了，也知道文件的权限对于使用者与群组的相关性， 那么如何修改一个文件的属性与
权限呢？又！有多少文件的权限我们可以修改呢？ 其实一个文件的属性与权限有很多！我们先介绍几个常用于群组、拥有者、各种身份的权限
之修改的指令，如下所示：
chgrp ：改变文件所属群组
chown ：改变文件拥有者
chmod ：改变文件的权限, SUID, SGID, SBIT等等的特性
改改变变所所属属群群组组, chgrp
改变一个文件的群组真是很简单的，直接以chgrp来改变即可，咦！这个指令就是change group的缩写嘛！这样就很好记了吧！ ^_^。不
过，请记得，要被改变的群组名称必须要在/etc/group文件内存在才行，否则就会显示错误！
假设你已经是root的身份了，那么在你的主文件夹内有一个名为 initial-setup-ks.cfg 的文件， 如何将该文件的群组改变一下呢？假设你已
经知道在/etc/group里面已经存在一个名为users的群组， 但是testing这个群组名字就不存在/etc/group当中了，此时改变群组成为users与
testing分别会有什么现象发生呢？
[root@study ~]# chgrp [-R] dirname/filename ...
选项与参数：
-R : 进行递回（recursive）的持续变更，亦即连同次目录下的所有文件、目录
都更新成为这个群组之意。常常用在变更某一目录内所有的文件之情况。
范例：
[root@study ~]# chgrp users initial-setup-ks.cfg
[root@study ~]# ls -l
-rw-r--r--. 1 root users 1864 May 4 18:01 initial-setup-ks.cfg
[root@study ~]# chgrp testing initial-setup-ks.cfg
chgrp: invalid group: `testing' <== 发生错误讯息啰～找不到这个群组名～
发现了吗？文件的群组被改成users了，但是要改成testing的时候， 就会发生错误～注意喔！发生错误讯息还是要努力的查一查错误讯
息的内容才好！ 将他英文翻译成为中文，就知道问题出在哪里了。
改改变变文文件件拥拥有有者者, chown
如何改变一个文件的拥有者呢？很简单呀！既然改变群组是change group，那么改变拥有者就是change owner啰！BINGO！那就是
chown这个指令的用途，要注意的是， 使用者必须是已经存在系统中的帐号，也就是在/etc/passwd 这个文件中有纪录的使用者名称才能改
变。
chown的用途还满多的，他还可以顺便直接修改群组的名称呢！此外，如果要连目录下的所有次目录或文件同时更改文件拥有者的话，
直接加上 -R 的选项即可！我们来看看语法与范例：
[root@study ~]# chown [-R] 帐帐号号名名称称 文文件件或或目目录录
[root@study ~]# chown [-R] 帐帐号号名名称称:群群组组名名称称 文文件件或或目目录录
选项与参数：
-R : 进行递回（recursive）的持续变更，亦即连同次目录下的所有文件都变更
范例：将 initial-setup-ks.cfg 的拥有者改为bin这个帐号：
[root@study ~]# chown bin initial-setup-ks.cfg
[root@study ~]# ls -l
-rw-r--r--. 1 bin users 1864 May 4 18:01 initial-setup-ks.cfg
范例：将 initial-setup-ks.cfg 的拥有者与群组改回为root：
[root@study ~]# chown root:root initial-setup-ks.cfg
[root@study ~]# ls -l
-rw-r--r--. 1 root root 1864 May 4 18:01 initial-setup-ks.cfg
Tips
事实上，chown也可以使用“cchhoowwnn uusseerr..ggrroouupp ffiillee”，亦即在拥有者与群组间加上小数点“ . ”也行！ 不过很多朋友设置帐号时，喜欢
在帐号当中加入小数点（例如vbird.tsai这样的帐号格式），这就会造成系统的误判了！ 所以我们比较建议使用冒号“:”来隔开拥有者与群组啦！此
外，chown也能单纯的修改所属群组呢！ 例如“cchhoowwnn ..sssshhdd iinniittiiaall--sseettuupp--kkss..ccffgg”就是修改群组～看到了吗？就是那个小数点的用途！
知道如何改变文件的群组与拥有者了，那么什么时候要使用chown或chgrp呢？或许你会觉得奇怪吧？ 是的，确实有时候需要变更文件
的拥有者的，最常见的例子就是在复制文件给你之外的其他人时， 我们使用最简单的cp指令来说明好了：
[root@study ~]# cp 来来源源文文件件 目目的的文文件件
假设你今天要将.bashrc这个文件拷贝成为.bashrc_test文件名，且是要给bin这个人，你可以这样做：
[root@study ~]# cp .bashrc .bashrc_test
[root@study ~]# ls -al .bashrc*
-rw-r--r--. 1 root root 176 Dec 29 2013 .bashrc