创建一个正则表达式来匹配在“希腊扩展”Unicode区块中的任意字符。
创建一个正则表达式来匹配根据Unicode标准属于希腊字母表一部分的任意字符。
创建一个正则表达式来匹配一个字形（grapheme），它平常也被当作一个字符：一个基
本字符加上它所有的组合标记。
解决方案
Unicode代码点
\u2122
正则选项：无
正则流派：.NET、Java、JavaScript、Python
当这个正则表达式被作为一个Unicode字符串（u"u2122"）引用的时候，它只在python
中可用。
\x{2122}
正则选项：无
正则流派：PCRE、Perl、Ruby 1.9
42第2章
www.TopSage.com
---
## Page 59
PCRE必须使用UTF-8支持进行编译，在PHP中，需要使用模式修饰符来打开UTF-8
支持。Ruby1.8不支持Unicode正则表达式。
Unicode属性或类别
\p(Sc)
正则选项：无
正则流派：.NET、Java、PCRE、Perl、Ruby 1.9
PCRE必须使用UTF-8支持进行编译：在PHP中，需要使用/模式修饰符来打开UTF-8
支持。JavaScript和Python不支持Unicode属性。Ruby1.8不支持Unicode正则表达式。
Unicode区块
\p(IsGreekExtended)
正则选项：无
正则流派：.NET、Per1
\p(InGreekExtended)
正则选项：无
正则流派：Java、Perl
JavaScript、PCRE、Python和Ruby不支持Unicode区块。
Unicode字母表
\p(Greek)
正则选项：无
正则流派：PCRE、Perl、Ruby1.9
Unicode字母表（script）支持要求PCRE6.5或者更新版本，而且PCRE必须使用UTF-8
支持进行编译。在PHP中，需要使用u模式修饰符来打开UTF-8支持。.NET、JavaScript
和Python不支持Unicode属性。Ruby1.8不支持Unicode正则表达式。
Unicode字形
\X
正则选项：无
正则流派：PCRE、Per1
PCRE和Perl都包含一个专门的记号来匹配字形，但是同时也支持如下的使用Unicode
属性的方式来完成相同功能。
\P{M}\p{M} *
正则选项：无
正则流派：.NET、Java、PCRE、Perl、Ruby1.9
PCRE必须使用UTF-8支持进行编译；在PHP中，需要使用/u模式修饰符来打开
UTF-8支持。JavaScript和Python不支持Unicode属性。Ruby1.8不支持Unicode
正则表达式。
正则表达式的基本技巧
43
www.TopSage.com
---
## Page 60
讨论
Unicode代码点
代码点（codepoin）是在Unicode字符数据库中的一项。代码点与字符是不一样的，当
然这还要基于你给“字符”什么样的含义。在Unicode中，在屏幕上作为字符出现的符
号被称作是一个字形（grapheme）。
Unicode代码点U+2122表示的是“商标符号”字符。根据所使用的正则流派的不同，
你可以使用u2122>或x{2122>来匹配这个字符。
\u>的语法要求使用正好四位十六进制数字。这意味着你只能用它来表示Unicode代码
点U+0000到U+FFFF。（x>语法则充许出现任意位数的十六进制数字，可以支持所有
的代码点，也就是从U+000000直到U+10FFFF。你可以采用x{E0}>或u00E0>来匹
配U+00E0。U+100000之后代码点是很少使用的，同时在字体和操作系统中都没有对
它们提供很好的支持。
代码点可以在字符类之内和之外进行使用。
Unicode属性或类别
每个Unicode代码点都正好拥有一个Unicode属性（property），或者也可以属于单个的
）
类别，被组织为7个超类。
任意语言的任意字母
一个拥有大写变体的小写字母
一个拥有小写变体的大写字母
当只有单词的第一个字母被大写时，出现在单词开头的字母
以小写和大写变体出现的字母（囊括了L1、Lu和Lt的情形）
可以像字母一样使用的特殊字符
不拥有小写和大写变体的字母或者象形文字
专门与另外一个字符组合使用的字符（重音符号、变音符号、包围框等）
只能与另外一个字符组合使用，同时不占用额外空间的字符（重音符号、变音符号等）
\p{Mc}>
只能与另外一个字符组合使用，但是会占用额外空间的字符（比如在许多东方语言中
的元音符号）
44
第2章
www.TopSage.com
---
## Page 61
包含另外一个字符的字符（圆圈、方框、键帽等）
p{z}>
任何种类的空白或不可见的分隔符
一个不可见的空白字符，但是却会占用空间
行分隔符U+2028
（\p(Zp}>
段分隔符U+2029
数学符号、货币符号、杂锦字型（dingbats）、制表符（box-drawing），等等
任意数学符号
任意货币符号
(\p{Sk}>
组合符号（标记）自己作为一个完整字符
不属于属性符号、货币符号或者组合符号的各种符号
任意字母表中的任意种类的数字字符
（\p{Nd}>
除了表意字母表之外的任意字母表中的数字0～9
看起来像是字母的数字，例如罗马数字
\p(No}>
上标或者下标数字，或是非0～9的数字（不包括象形字母表中的数字）
任意种类的标点字符
任意种类的连字号或短横线
任意种类的左括号
任意种类的右括号
任意种类的左引号
任意种类的右引号
（\p{Pc}>
像下划线一样用来连接单词的标点符号
（\p{Po}>
不属于短横线、括号、引号或连接符的任意一种标点字符
不可见的控制字符和未使用的代码点
ASCII中的Ox00~0x1F或Latin-1中的0x80~0x9E控制字符
正则表达式的基本技巧
45
www.TopSage.com
---
## Page 62
不可见的格式标志
保留使用的任意代码点
在UTF-16编码中一个替代对的一半
没有赋予任意字符的代码点
p{Ll}>匹配拥有LI属性，也就是“小写字母”属性的单个代码点。可以被用
作p{LI)\p{Lu)\p{Lt)\p{Lm\p{Lo}]>的简写形式，用来匹配在任意“字母”类别中的
单个代码点。
是的否定版本。匹配不拥有LI属性的单个代码点。匹配不拥
有任何“字母”属性的单个代码点。这与P{LI)\P{Lu}\P{Lt)\P{Lm}\P{Lo}]是不一
样的，后者会匹配所有的代码点。P{LI)>匹配拥有Lu属性（以及除了L1之外的所有
其他属性）的代码点，而P{Lu}>会包含LI代码点。把这两个组合到一个代码点类中
就可以把所有可能的代码点都包括进来。
Unicode区块
Unicode字符数据库把所有代码点划分为不同的区块。每个区块由一个连续范围内的代
码点组成。代码点U+0000～U+FFFF被划分为105个区块：
U+0000..U+007F\p{InBasic_Latin}
U+0080..U+00FF\p(InLatin-1_Supplement)
U+0100...U+017F\p(InLatin_Extended-A)
U+0180...U+024F\p(InLatin_Extended-B)
U+0250...U+02AF\p{InIPA_Extensions}
U+02B0...U+02FF
\p(InSpacing_Modifier_Letters}
U+0300...U+036F
\p(InCombining_Diacritical_Marks)
U+0370...U+03FF
\p(InGreek_and_Coptic)
U+0400...U+04FE
\p(InCyrillic)
U+0500...U+052F
\p(InCyrillic_Supplementary)
U+0530...U+058F
\p{InArmenian}
U+0590..U+05FF
\p{InHebrew)
U+0600...U+06FF
\p{InArabic}
U+0700...+074E
\p(InSyriac}
U+0780...U+07BF
\p{InThaana}
U+0900...U+097F
\p{InDevanagari}
U+0980...+09FF
\p(InBengali}
U+OA0O..U+OA7F
\p(InGurmukhi}
U+0A8O...U+OAFF
\p(InGujarati)
U+0BOO...+OB7F
\p(InOriya)
U+0B80...U+0BFF
\p(InTami1}
U+0C0O...U+OC7F
\p(InTelugu}
U+OC8...U+OCFF
\p(InKannada}
U+0D0O...U+OD7F
\p{InMalayalam}
U+0D80...U+0DFF
\p(InSinhala)
46