cmp     ebp, eax 
.text:00541306  
rep movsd 
.text:00541308  
jl      short loc_5412D1 
异步社区会员 dearfuture(15918834820) 专享 尊重版权
760 
逆向工程权威指南（下册） 
.text:0054130A  
mov     edx, [esp+10h+Src] 
.text:0054130E  
push     edx             
; Memory 
.text:0054130F  
call     _free 
.text:00541314  
add      esp, 4 
.text:00541317  
pop     edi 
.text:00541318  
pop     esi 
.text:00541319  
pop     ebp 
.text:0054131A  
pop     ebx 
.text:0054131B  
retn 
.text:0054131B decrypt       
endp 
.text:0054131B 
.text:0054131C  
align 10h 
.text:00541320 
.text:00541320 ; ============= S U B R O U T I N E ============ 
.text:00541320 
.text:00541320 
.text:00541320 ; int __cdecl crypt_file(int Str, char *Filename, int password) 
.text:00541320 crypt_file    
proc near    
; CODE XREF: _main+42 
.text:00541320 
.text:00541320 Str              
= dword ptr  4 
.text:00541320 Filename         = dword ptr  8 
.text:00541320 password         = dword ptr  0Ch 
.text:00541320 
.text:00541320  
mov      eax, [esp+Str] 
.text:00541324  
push     ebp 
.text:00541325  
push     offset Mode    
; "rb" 
.text:0054132A  
push     eax             
; Filename 
.text:0054132B  
call     _fopen         
; open file 
.text:00541330  
mov      ebp, eax 
.text:00541332  
add      esp, 8 
.text:00541335  
test     ebp, ebp 
.text:00541337  
jnz      short loc_541348 
.text:00541339  
push     offset Format  
; "Cannot open input file!\n" 
.text:0054133E  
call     _printf 
.text:00541343  
add      esp, 4 
.text:00541346  
pop      ebp 
.text:00541347  
retn 
.text:00541348 
.text:00541348 loc_541348:  
; CODE XREF: crypt_file+17 
.text:00541348  
push     ebx 
.text:00541349  
push     esi 
.text:0054134A  
push     edi 
.text:0054134B  
push     2           
; Origin 
.text:0054134D  
push     0            
; Offset 
.text:0054134F  
push     ebp            
; File 
.text:00541350  
call     _fseek 
.text:00541355  
push     ebp          
; File 
.text:00541356  
call     _ftell      
; get file size 
.text:0054135B  
push     0            
; Origin 
.text:0054135D  
push     0            
; Offset 
.text:0054135F  
push     ebp          
; File 
.text:00541360  
mov      [esp+2Ch+Str], eax 
.text:00541364  
call     _fseek        
; rewind to start 
.text:00541369  
mov      esi, [esp+2Ch+Str] 
.text:0054136D  
and      esi, 0FFFFFFC0h  ; reset all lowest 6 bits 
.text:00541370  
add      esi, 40h   
; align size to 64-byte border 
.text:00541373  
push     esi             
; Size 
.text:00541374  
call     _malloc 
.text:00541379  
mov      ecx, esi 
.text:0054137B  
mov      ebx, eax       
; allocated buffer pointer -> to EBX 
.text:0054137D  
mov     edx, ecx 
.text:0054137F  
xor    eax, eax 
.text:00541381  
mov    edi, ebx 
.text:00541383  
push    ebp          
; File 
.text:00541384  
shr    ecx, 2 
.text:00541387  
rep stosd 
异步社区会员 dearfuture(15918834820) 专享 尊重版权
第 79 章  “QR9”：魔方态加密模型 
761 
.text:00541389  
mov    ecx, edx 
.text:0054138B  
push    1            
; Count 
.text:0054138D  
and    ecx, 3 
.text:00541390  
rep stosb          
; memset (buffer, 0, aligned_size) 
.text:00541392  
mov    eax, [esp+38h+Str] 
.text:00541396  
push    eax          
; ElementSize 
.text:00541397  
push    ebx          
; DstBuf 
.text:00541398  
call    _fread        
; read file 
.text:0054139D  
push    ebp          
; File 
.text:0054139E  
call    _fclose 
.text:005413A3  
mov    ecx, [esp+44h+password] 
.text:005413A7  
push    ecx          
; password 
.text:005413A8  
push    esi          
; aligned size 
.text:005413A9  
push    ebx          
; buffer 
.text:005413AA  
call    crypt         
; do crypt 
.text:005413AF  
mov    edx, [esp+50h+Filename] 
.text:005413B3  
add     esp, 40h 
.text:005413B6  
push    offset aWb   
; "wb" 
.text:005413BB  
push    edx          
; Filename 
.text:005413BC  
call    _fopen 
.text:005413C1  
mov     edi, eax 
.text:005413C3  
push    edi          
; File 
.text:005413C4  
push    1            
; Count 
.text:005413C6  
push    3            
; Size 
.text:005413C8  
push    offset aQr9  
; "QR9" 
.text:005413CD  
call    _fwrite     
; write file signature 
.text:005413D2  
push    edi            
; File 
.text:005413D3  
push    1            
; Count 
.text:005413D5  
lea    eax, [esp+30h+Str] 
.text:005413D9  
push    4            
; Size 
.text:005413DB  
push    eax          
; Str 
.text:005413DC  
call    _fwrite    
; write original file size 
.text:005413E1  
push    edi          
; File 
.text:005413E2  
push    1            
; Count 
.text:005413E4  
push    esi          
; Size 
.text:005413E5  
push    ebx          
; Str 
.text:005413E6  
call    _fwrite       
; write encrypted file 
.text:005413EB  
push    edi          
; File 
.text:005413EC  
call    _fclose 
.text:005413F1  
push    ebx              
; Memory 
.text:005413F2  
call    _free 
.text:005413F7  
add     esp, 40h 
.text:005413FA  
pop     edi 
.text:005413FB  
pop    esi 
.text:005413FC  
pop    ebx 
.text:005413FD  
pop    ebp 
.text:005413FE  
retn 
.text:005413FE crypt_file      
endp 
.text:005413FE 
.text:005413FF  
align 10h 
.text:00541400 
.text:00541400 ; =========== S U B R O U T I N E ============== 
.text:00541400 
.text:00541400 
.text:00541400 ; int __cdecl decrypt_file(char *Filename, int, void *Src) 
.text:00541400 decrypt_file     proc near   
; CODE XREF: _main+6E 
.text:00541400 
.text:00541400 Filename      
= dword ptr  4 
.text:00541400 arg_4          
= dword ptr  8 
.text:00541400 Src              
= dword ptr  0Ch 
.text:00541400 
.text:00541400  
mov     eax, [esp+Filename] 
.text:00541404  
push    ebx 
.text:00541405  
push    ebp 
.text:00541406  
push    esi 
.text:00541407  
push    edi 
异步社区会员 dearfuture(15918834820) 专享 尊重版权
762 
逆向工程权威指南（下册） 
.text:00541408  
push    offset aRb   
; "rb" 
.text:0054140D  
push    eax          
; Filename 
.text:0054140E  
call    _fopen 
.text:00541413  
mov    esi, eax 
.text:00541415  
add    esp, 8 