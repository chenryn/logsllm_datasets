接下来我会一一展示:
```
import (
    "delay"
    "stm32/hal/gpio"
    "stm32/hal/system"
    "stm32/hal/system/timer/systick"
)
var led1, led2 gpio.Pin
func init() {
    system.SetupPLL(8, 1, 48/8)
    systick.Setup(2e6)
    gpio.A.EnableClock(false)
    led1 = gpio.A.Pin(4)
    led2 = gpio.A.Pin(5)
    cfg := &gpio.Config{Mode: gpio.Out, Driver: gpio.OpenDrain}
    led1.Setup(cfg)
    led2.Setup(cfg)
}
func blinky(led gpio.Pin, period int) {
    for {
        led.Clear()
        delay.Millisec(100)
        led.Set()
        delay.Millisec(period - 100)
    }
}
func main() {
    go blinky(led1, 500)
    blinky(led2, 1000)
}
```
代码改动很小: 添加了第二个 LED，上一个例子中的 `main` 函数被重命名为 `blinky` 并且需要提供两个参数。 `main` 在新的协程中先调用 `blinky`，所以两个 LED 灯在并行使用。值得一提的是，`gpio.Pin` 可以同时访问同一 GPIO 口的不同引脚。
Emgo 还有很多不足。其中之一就是你需要提前规定 `goroutines(tasks)` 的最大执行数量。是时候修改 `script.ld` 了:
```
ISRStack = 1024;
MainStack = 1024;
TaskStack = 1024;
MaxTasks = 2;
INCLUDE stm32/f030x4
INCLUDE stm32/loadflash
INCLUDE noos-cortexm
```
栈的大小需要靠猜，现在还不用关心这一点。
```
$ egc
$ arm-none-eabi-size cortexm0.elf
   text    data     bss     dec     hex filename
  10020     172     172   10364    287c cortexm0.elf
```
另一个 LED 和协程一共占用了 248 字节的 Flash 空间。
![STM32F030F4P6](/data/attachment/album/201909/24/210519jkopyikil0z2al7r.png)
### 通道
通道是 Go 语言中协程之间相互通信的一种[推荐方式](https://blog.golang.org/share-memory-by-communicating)。Emgo 甚至能允许通过*中断处理*来使用缓冲通道。下一个例子就展示了这种情况。
```
package main
import (
    "delay"
    "rtos"
    "stm32/hal/gpio"
    "stm32/hal/irq"
    "stm32/hal/system"
    "stm32/hal/system/timer/systick"
    "stm32/hal/tim"
)
var (
    leds  [3]gpio.Pin
    timer *tim.Periph
    ch    = make(chan int, 1)
)
func init() {
    system.SetupPLL(8, 1, 48/8)
    systick.Setup(2e6)
    gpio.A.EnableClock(false)
    leds[0] = gpio.A.Pin(4)
    leds[1] = gpio.A.Pin(5)
    leds[2] = gpio.A.Pin(9)
    cfg := &gpio.Config{Mode: gpio.Out, Driver: gpio.OpenDrain}
    for _, led := range leds {
        led.Set()
        led.Setup(cfg)
    }
    timer = tim.TIM3
    pclk := timer.Bus().Clock()
    if pclk 
作者：[Michał Derkacz](https://ziutek.github.io/) 译者：[wenwensnow](https://github.com/wenwensnow) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出