# A Low Latency and Consistent Cellular Control Plane

**Authors:**
- Mukhtiar Ahmad
- Syed Usman Jafri
- Muhammed Azam Ikram
- Wasiq Noor Ahmad Qasmi
- Muhammad Ali Nawazish
- Zartash Afzal Uzmi
- Zafar Ayyub Qazi

**Affiliation:**
Department of Computer Science, SBASSE, LUMS, Pakistan

## Abstract
5G networks aim to provide ultra-low latency and high reliability to support emerging and near real-time applications such as augmented and virtual reality, remote surgery, self-driving cars, and multi-player online gaming. This imposes new requirements on the design of cellular core networks. A key component of the cellular core is the control plane, where the time to complete operations (e.g., mobility handoff, service establishment) directly impacts the delay experienced by end-user applications. In this paper, we introduce Neutrino, a cellular control plane that provides users with reliable access to cellular services while ensuring lower latency. Our testbed evaluations, based on real cellular control traffic traces, show that Neutrino improves control procedure completion times by up to 3.1× without failures and up to 5.6× under control plane failures, compared to existing cellular core proposals. We also demonstrate how these improvements translate into better end-user application performance: for AR/VR applications and self-driving cars, Neutrino performs up to 2.5× and 2.8× better, respectively, compared to existing EPC.

**CCS Concepts:**
- Networks → Control path algorithms; Network protocol design; Middle boxes / network appliances; Wireless access points, base stations, and infrastructure; Network reliability

**Keywords:**
- Cellular Core
- Control Plane
- Consistency

**ACM Reference Format:**
Mukhtiar Ahmad, Syed Usman Jafri, Azam Ikram, Wasiq Noor Ahmad Qasmi, Muhammad Ali Nawazish, Zartash Afzal Uzmi, Zafar Ayyub Qazi. 2020. A Low Latency and Consistent Cellular Control Plane. In Annual Conference of the ACM Special Interest Group on Data Communication on the Applications, Technologies, Architectures, and Protocols for Computer Communication (SIGCOMM '20), August 10–14, 2020, Virtual Event, NY, USA. ACM, New York, NY, USA, 14 pages. https://doi.org/10.1145/3387514.3406218

## 1 Introduction
Next-generation cellular networks are envisioned to support emerging and near real-time applications such as augmented and virtual reality, remote surgery, self-driving cars, cognitive assistance apps, and multi-player online gaming. These applications require higher reliability and ultra-low latency, in the order of 10ms [53]. Consequently, 5G networks aim to support Edge Computing [53], with edge applications hosted closer to the users [21–23]. This requires cellular providers to evolve their cellular core, a key part of the cellular network that connects the IP backbone with the base stations and implements cellular-specific processing on user's control and data traffic. In existing cellular deployments, the cellular core functions are typically deployed in remote data centers, which can cause path inflation [60, 62]. In 5G and beyond, cellular providers are expected to move these core functions to the edge (e.g., cell towers and central offices), resulting in a highly distributed core network architecture [24, 38, 48].

We postulate that the main challenge in providing low latency and reliable access with an edge-based core stems from the complexity of the control plane in the cellular core. Unlike the internet control plane, the cellular control plane needs to keep dynamic state for each user device to support mobility. The control plane regularly updates this user state to both establish and retain user's data access. When moving to another base station, the control plane is responsible for retaining data access by migrating the ongoing session states to the user's new location. Upon failures, the control plane needs to recover or recreate the session state.

Prior work [37] has shown that the time taken by the cellular control plane to process control traffic can have a direct impact on the delay experienced by user applications, e.g., control functions can contribute up to 1 s delay in session establishment. Moreover, mobile devices frequently generate control traffic; on average, a mobile device generates a session establishment request every 106.9 s. In addition, failures of control plane functions can exacerbate these delays [14, 37], causing disruptions in data access [46].

To make matters worse, with 5G, the control traffic is expected to increase rapidly [44, 47] due to (i) a shift to smaller cell sizes, which will likely cause more mobility handoffs [13], and (ii) the proliferation of IoT devices with a high control to data traffic ratio [35]. In addition, failures are expected to be commonplace in 5G core networks, similar to large service provider networks [25], as core network deployments will be large and increasingly based on software-based network functions (NFs) running on commodity hardware [24]. As a result, timely completion of control plane procedures in the presence of failures is vital to provide reliable and low latency data access to user applications.

We identify the following key challenges in an edge-based cellular core for providing reliable and low latency data access:

- **UE-Core State Inconsistency:** Prior work [37, 46, 56] has shown that inconsistent user state between the user equipment (UE) and the core network can cause significant disruptions in data access for users in 4G/LTE networks. We find that UE-Core inconsistencies, and thus prolonged disruptions in data access, can also occur in current 5G standardization proposals (§3). Recent proposals for cellular control planes do not provide consistency guarantees [14, 43] and, thus, offer no protection against such disruptions. We argue that the cellular control plane needs to provide state consistency guarantees to ensure reliable data access. A key challenge in this regard is to design a consistency protocol that provides fast failure recovery with minimal failure-free overhead.

- **Slow State Updates:** We show that one key reason for delays in control traffic is the slow processing of state updates between a user device, base station, and cellular control plane. Existing 4G/LTE networks and 5G proposals use ASN.1 [11, 20] for serializing control updates. Our experiments on real control traffic traces show that ASN.1 serialization can become a potential bottleneck for latency-sensitive applications like real-time augmented and virtual reality (§3).

- **Frequent Control Handovers:** Control handovers happen when a user moves from one location domain to another, requiring migration to a different control plane function (§3). A control handover can cause significant delays in data access, up to 1.9 s [37]. In an edge-based cellular core, control handovers will happen more frequently, making it important that these handovers be completed quickly. A key challenge is to migrate user state quickly to the appropriate control plane function.

To address these challenges, we designed Neutrino, a cellular control plane that provides users with an abstraction of reliable access to cellular services while ensuring lower latency. In designing Neutrino, we synthesized several existing techniques in distributed systems. Below, we describe the key ideas in Neutrino:

- **Consistent UE Processing:** We designed a consistency protocol that minimizes service disruption under failures by ensuring that user devices always receive Read-Your-Writes consistency [58]. The consistency protocol provides fast failure recovery and small failure-free overhead. It uses a primary-backup state replication scheme, consisting of (i) per-procedure checkpointing and non-blocking synchronization of state, (ii) fast in-memory message logging, and (iii) a two-level failure recovery protocol (§4.2).

- **Fast Serialization Engine:** We designed a serialization scheme for cellular state updates by optimizing FlatBuffers [28] (§4.4). Our scheme significantly speeds up the processing of state updates, by up to 19.1× compared to ASN.1, while providing a relatively small increase in bandwidth usage.

- **Proactive Geo-Replication:** We reduce the delay incurred in control plane handovers by performing proactive geo-replication of user state (§4.3). Our results show this can lead to a 7× improvement in completing control plane handovers.

We implemented Neutrino, the redesigned cellular control functions, and control traffic aggregator nodes. It requires minimal changes to base stations, which, instead of ASN.1, use Neutrino’s FlatBuffers-based serialization engine. In rolling out 5G deployments, carriers are expected to make major upgrades to base stations [13], so upgrading the serialization engine should not hinder the adoption of Neutrino.

We evaluated Neutrino’s performance by replaying real control traffic traces through a DPDK-based traffic generator in our testbed. Our results show an improvement in control procedure completion times by up to 3.1× without failures and up to 5.6× under control plane failures, compared to existing EPC. Neutrino handles bursty IoT control traffic better than existing EPC, showing up to 2× improvement in median control procedure times (§6.3 and §6.4). We also quantified the impact of Neutrino on application performance: for AR/VR applications and self-driving cars, Neutrino performs 2.5× and 2.8× better, respectively, compared to existing EPC. Neutrino also improves video startup latency by up to 37× and reduces page load times by 3.2× (§6.6). In comparison to recent proposals, Neutrino performs 3.4× and 1.3× better than SkyCore [40] and DPCM [37], respectively (§6.3). To motivate Neutrino’s design choices, we also performed a factor analysis (§6.7).

## 2 Background and Motivation

### 2.1 Cellular Network Architecture
Figure 1 shows a simplified 5G network architecture, consisting of three main types of components: Base Stations (BS), Control Plane Functions (CPF), and User Plane Functions (UPF). This high-level 5G network architecture is similar to that in 4G/LTE, wherein each User Equipment (UE) is provided radio access via a nearby base station. The user plane functions are responsible for delivering data and voice traffic over the core network infrastructure to/from the internet and operator’s multimedia services, respectively. The control plane functions facilitate data delivery by providing support for user mobility, session management, radio resource allocation, and authentication.

The control plane establishes the user’s data access to the internet or other operator services by setting up the connectivity session for each device. This process requires installing states at the user device, the base station, and core network elements. When a user moves closer to a new base station, a handover takes place during which the control plane is responsible for retaining data access by migrating the ongoing session states to the user’s new location. In the event of a failure, the control plane needs to recover or recreate the session state.

To support user mobility over a wider area, cellular deployments are divided into location domains. Each domain has multiple BSs and UPFs, and is managed by a set of CPFs. When a user device moves from one location domain to another, it triggers a control handover to a different set of CPFs and UPFs.

### 2.2 Impact of Cellular Control Processing
The cellular control plane is critical in providing low latency data access to mobile users. Prior studies have shown:

- **Control Plane Latency Directly Impacts Data Latency:** A 19-month study [37] conducted across four major US carriers showed that control functions contribute 72.5–999.6 ms latency in session establishment. The control handover can cause up to 1.9 s delay in data access.
- **Mobile Devices Frequently Generate Control Traffic:** The same study showed that, on average, a mobile device generates a session establishment request every 106.9 s. With high-mobility applications (like autonomous vehicles) and smaller cell sizes in 5G, we expect a rapid increase in the frequency of control traffic.
- **Failures Exacerbate Control Plane Delays:** Failures in the control plane can exacerbate these control plane delays [14, 37, 46], causing up to 11 s delay in data access. These failures happen rather frequently; 4-5% of the control connection requests experience some sort of failure [37].

### 2.3 Cellular Edge Applications
One of the key goals in 5G is to build support for Edge Computing to enable latency-sensitive applications [23]. Cellular providers have already started testing and deploying edge applications:

- **Edge-Based Video Analytics:** Verizon has recently conducted edge computing tests over its 5G network, hosting an AI-powered face recognition application inside its edge network. The test involved transmitting video of a crowd over Verizon’s 5G network to an edge application, which would scan the faces in the crowd for potential matches against a database. The goal was to show that police could use edge computing functions to quickly find someone in a crowd, rather than having to wait for the video to be sent to a distant data center for analysis [38].
- **Accelerating Online Mobile Gaming:** China Mobile, in partnership with Tencent Cloud, is providing an accelerated online mobile gaming experience through its 5G-based edge deployment [57]. Many multi-player online games (e.g., Fortnite) need sub-100 ms latency for smooth player control, which can be hard to provide with traditional network architectures.