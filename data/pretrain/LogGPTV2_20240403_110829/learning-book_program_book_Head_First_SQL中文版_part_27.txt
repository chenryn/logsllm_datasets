### 会议提醒
请记得携带报告。

**发件人：老板**

P.S. 请穿着便于活动的衣服，因为我打算整理一下我家的书柜。

---

## 第6章

### Page 295 - SELECT进阶
#### GirlSprout饼干销售冠军问题
镇上的GirlSprout领队想要找出哪个女孩卖出最多的饼干。她有一份记录了每个女孩每天销售额的表格。
| ID | 姓名 | 销售额（美元） | 销售日期 |
|----|------|---------------|----------|
| 1  | Lindsay | 32.02 | 2007-03-06 |
| 2  | Paris  | 26.53 | 2007-03-06 |
| 3  | Britney | 11.25 | 2007-03-06 |
| 4  | Nicole | 18.96 | 2007-03-06 |
| ... | ... | ... | ... |

为了尽快确定谁是销售冠军，请使用ORDER BY子句设计一个查询帮助Edwina找到正确的人选。

### Page 296 - 查询解答
#### 磨笔上阵解答
销售量最高的GirlSprout成员将获得一套免费马术课程作为奖励。因此，Edwina需要准确地找出得奖者以避免任何争议。

**查询语句:**
```sql
SELECT first_name, SUM(sales) AS total_sales
FROM cookie_sales
GROUP BY first_name
ORDER BY total_sales DESC;
```

**查询结果:**
| 姓名 | 总销售额（美元） |
|------|-----------------|
| Britney | 107.91 |
| Paris   | 98.23  |
| Nicole  | 96.03  |
| Lindsay | 81.08  |

由此可见，Britney是销售额最高的女孩，应被授予奖励。

### Page 297 - 使用SUM进行数据汇总
#### 数据处理
手动计算容易出错，而SQL中的SUM函数可以帮助我们轻松完成这项工作。此函数可以对指定列的所有数值求和。

**示例:**
```sql
SELECT SUM(sales) 
FROM cookie_sales 
WHERE first_name = 'Nicole';
```
结果为：
```
+-------------+
| SUM(sales)  |
+-------------+
| 96.03       |
+-------------+
```

接下来，让我们尝试一次性获取所有女孩的总销售额。

### Page 298 - GROUP BY与SUM、AVG结合使用
#### 分组汇总
通过在SUM函数中加入GROUP BY子句，我们可以按照不同女孩的名字对销售额进行分组并求和。

**查询语句:**
```sql
SELECT first_name, SUM(sales) AS total_sales
FROM cookie_sales
GROUP BY first_name
ORDER BY total_sales DESC;
```

**输出:**
| 姓名 | 总销售额（美元） |
|------|-----------------|
| Britney | 107.91 |
| Paris   | 98.23  |
| Nicole  | 96.03  |
| Lindsay | 81.08  |

### Page 299 - AVG与GROUP BY的应用
#### 平均销售额
为了进一步激励其他成员，Edwina决定给平均每日销售额最高的女孩也颁发一个奖项。这可以通过AVG函数实现。

**查询语句:**
```sql
SELECT first_name, AVG(sales) AS avg_sales
FROM cookie_sales
GROUP BY first_name
ORDER BY avg_sales DESC;
```

**输出:**
| 姓名 | 平均销售额（美元/天） |
|------|---------------------|
| Britney | 15.41 |
| Paris   | 14.03  |
| Nicole  | 13.72  |
| Lindsay | 11.58  |

尽管如此，Britney再次获得了最高平均销售额。

### Page 300 - MIN与MAX函数的应用
#### 最高与最低值
最后，Edwina还希望检查每位女孩单日销售额的最大值和最小值，以确保没有遗漏任何信息。

**查询语句:**
```sql
SELECT first_name, MAX(sales) AS max_sales, MIN(sales) AS min_sales
FROM cookie_sales
GROUP BY first_name;
```

**输出:**
| 姓名 | 单日最高销售额 | 单日最低销售额 |
|------|--------------|--------------|
| Britney | 43.21 | 1.52 |
| Paris   | 31.99 | 0.00 |
| Nicole  | 26.82 | 0.00 |
| Lindsay | 32.02 | 0.00 |

通过以上分析，可以看出Britney不仅在总销售额方面领先，在单日最高销售额方面也同样表现出色。