Python编程快速上手——让繁琐工作自动化
14．哪些整数表示Word文档中可用的标题级别？
13.6 实践项目
作为实践，编程完成下列任务。
13.6.1 PDF偏执狂
利用第9章的os.walk()函数编写一个脚本，遍历文件夹中的所有PDF（包含子
文件夹），用命令行提供的口令对这些 PDF 加密。用原来的文件名加上_encrypted.pdf
后缀，保存每个加密的PDF。在删除原来的文件之前，尝试用一个程序读取并解密
该文件，确保它被正确的加密。
然后编写一个程序，找到文件夹中所有加密的PDF文件（包括它的子文件夹），
利用提供的口令，创建PDF的解密拷贝。如果口令不对，程序应该打印一条消息，
并继续处理下一个PDF文件。
13.6.2 定制邀请函，保存为 Word 文档
假设你有一个客人名单的文本文件。这个guests.txt文件每行有一个名字，像下
面这样：
Prof. Plum
Miss Scarlet
Col. Mustard
Al Sweigart
RoboCop
写一个程序，生成定制邀请函的Word文档，如图13-11所示。
图13-11 定制的邀请函脚本生成的Word文档
第13章 处理PDF和Word文档
因为python-docx只能使用Word文档中已经存在的样式，所以你必须先将这些
样式添加到一个空白Word文件中，然后用python-docx打开该文件。在生成的Word
文档中，每份邀请函应该占据一页，所以在每份邀请函的最后一段调用add_break()，
添加分页符。这样，你只需要打开一份Word文档，就能打印所有的邀请函。
你可以从http://nostarch.com/automatestuff/下载示例guests.txt文件。
13.6.3 暴力PDF口令破解程序
假定有一个加密的PDF文件，你忘记了口令，但记得它是一个英语单词。尝试
猜测遗忘的口令是很无聊的任务。作为替代，你可以写一个程序，尝试用所有可能
的英语单词来解密这个PDF文件，直到找到有效的口令。这称为暴力口令攻击。从
http://nostarch.com/automatestuff/下载文本文件dictionary.txt。这个字典文件包含44000
多个英语单词，每个单词占一行。
利用第8章学过的文件读取技巧来读取这个文件，创建一个单词字符串的列表。
然后循环遍历这个列表中的每个单词，将它传递给decrypt()方法，如果这个方法返
回整数 0，口令就是错的，程序应该继续尝试下一个口令。如果 decrypt()返回 1，
程序就应该终止循环，打印出破解的口令。你应该尝试每个单词的大小写形式（在
我的笔记本上，遍历来自字典文件的所有88000个大小写单词，只要几分钟时间。
这就是不应该使用简单英语单词作为口令的原因）。
Python编程快速上手——让繁琐工作自动化
14
第 章
处理 CSV 文件和 JSON 数据
在第13章中，你学习了如何从PDF和 Word 文档中提取
文本。这些文件是二进制格式，需要特殊的Python模块来访问
它们的数据。CSV和JSON文件则不同，它们是纯文本文件。
可以用文本编辑器察看它们，诸如IDLE的文件编辑器。但Python
也有专门的csv和json模块，每个模块都提供了一些函数，帮
助你处理这些文件格式。
CSV表示“Comma-Separated Values（逗号分隔的值）”，CSV
文件是简化的电子表格，保存为纯文本文件。Python的csv模块让解析CSV文件变得容易。
JSON（发音为“JAY-sawn”或“Jason”，但如何发音并不重要。因为无论如何
发音，都会有人说你发音错误）是一种格式，它以 JavaScript 源代码的形式，将信
息保存在纯文本文件中。
JSON是JavaScript Object Notation的缩写不需要知道JavaScript编程语言，就可以
使用JSON文件，但了解JSON格式是有用的，因为它用于许多Web应用程序中。
14.1 csv 模块
CSV文件中的每行代表电子表格中的一行，逗号分割了该行中的单元格。例如，
来自http://nostarch.com/automatestuff/的电子表格example.xlsx，在一个CSV文件中，
看起来像这样：
4/5/2015 13:34,Apples,73
4/5/2015 3:41,Cherries,85
4/6/2015 12:46,Pears,14
4/8/2015 8:59,Oranges,52
4/10/2015 2:07,Apples,152
4/10/2015 18:10,Bananas,23
4/10/2015 2:40,Strawberries,98
我将使用这个文件作为本章的交互式环境的例子。可以从 http://nostarch.com/
automatestuff/下载example.csv，或在文本编辑器中输入文本，并保存为example.csv。
CSV文件是简单的，缺少Excel电子表格的许多功能。例如，CSV文件中：
• 值没有类型，所有东西都是字符串；
• 没有字体大小或颜色的设置；
• 没有多个工作表；
• 不能指定单元格的宽度和高度；
• 不能合并单元格；
• 不能嵌入图像或图表。
CSV的文件的优势是简单。CSV文件被许多种类的程序广泛地支持，可以在文
本编辑器中查看（包括 IDLE 的文件编辑器），它是表示电子表格数据的直接方式。
CSV格式和它声称的完全一致：它就是一个文本文件，具有逗号分隔的值。
因为 CSV 文件就是文本文件，所以你可能会尝试将它们读入一个字符串，然
后用第 8 章中学到的技术处理这个字符串。例如，因为 CSV 文件中的每个单元格
有逗号分割，也许你可以只是对每行文本调用 split()方法，来取得这些值。但并非
CSV文件中的每个逗号，都表示两个单元格之间的分界。CSV文件也有自己的转义
字符，允许逗号和其他字符作为值的一部分。split()方法不能处理这些转义字符。因
为这些潜在的缺陷，所以总是应该使用csv模块来读写CSV文件。
14.1.1 Reader 对象
要用csv模块从CSV 文件中读取数据，需要创建一个Reader对象。Reader对
象让你迭代遍历 CSV 文件中的每一行。在交互式环境中输入以下代码，同时将
example.csv放在当前工作目录中：
 >>> import csv
 >>> exampleFile = open('example.csv')
 >>> exampleReader = csv.reader(exampleFile)
 >>> exampleData = list(exampleReader)
 >>> exampleData
[['4/5/2015 13:34', 'Apples', '73'], ['4/5/2015 3:41', 'Cherries', '85'],
['4/6/2015 12:46', 'Pears', '14'], ['4/8/2015 8:59', 'Oranges', '52'],
['4/10/2015 2:07', 'Apples', '152'], ['4/10/2015 18:10', 'Bananas', '23'],
['4/10/2015 2:40', 'Strawberries', '98']]
266 Python编程快速上手——让繁琐工作自动化
csv模块是Python自带的，所以不需要安装就可以导入它。
要用csv模块读取CSV文件，首先用open()函数打开它，就像打开任何其他
文本文件一样。但是，不用在open()返回的File对象上调用read()或readlines()方法，
而是将它传递给csv.reader()函数。这将返回一个Reader对象，供你使用。请注意，
不能直接将文件名字符串传递给csv.reader()函数。
要访问Reader对象中的值，最直接的方法，就是将它转换成一个普通Python列
表，即将它传递给 list()。在这个 Reader 对象上应用 list()函数，将返回一个列表
的列表。可以将它保存在变量exampleData中。在交互式环境中输入exampleData，
将显示列表的列表。
既然已经将 CSV 文件表示为列表的列表，就可以用表达式 exampleData
[row][col]来访问特定行和列的值。其中，row 是 exampleData 中一个列表的下标，
col是该列表中你想访问的项的下标。在交互式环境中输入以下代码：
>>> exampleData[0][0]
'4/5/2015 13:34'
>>> exampleData[0][1]
'Apples'
>>> exampleData[0][2]
'73'
>>> exampleData[1][1]
'Cherries'
>>> exampleData[6][1]
'Strawberries'
exampleData[0][0]进入第一个列表，并给出第一个字符串。exampleData[0][2]进入
第一个列表，并给出第三个字符串，以此类推。
14.1.2 在 for 循环中，从Reader 对象读取数据
对于大型的 CSV 文件，你需要在一个 for 循环中使用 Reader 对象。这样避免
将整个文件一次性装入内存。例如，在交互式环境中输入以下代码：
>>> import csv
>>> exampleFile = open('example.csv')
>>> exampleReader = csv.reader(exampleFile)
>>> for row in exampleReader:
print('Row #' + str(exampleReader.line_num) + ' ' + str(row))
Row #1 ['4/5/2015 13:34', 'Apples', '73']
Row #2 ['4/5/2015 3:41', 'Cherries', '85']
Row #3 ['4/6/2015 12:46', 'Pears', '14']
Row #4 ['4/8/2015 8:59', 'Oranges', '52']
Row #5 ['4/10/2015 2:07', 'Apples', '152']
Row #6 ['4/10/2015 18:10', 'Bananas', '23']
Row #7 ['4/10/2015 2:40', 'Strawberries', '98']
在导入csv模块，并从CSV文件得到Reader对象之后，可以循环遍历Reader对
象中的行。每一行是一个值的列表，每个值表示一个单元格。
第14章 处理CSV文件和JSON数据 267
print()函数将打印出当前行的编号以及该行的内容。要取得行号，就使用Reader
对象的line_num变量，它包含了当前行的编号。
Reader 对象只能循环遍历一次。要再次读取 CSV 文件，必须调用 csv.reader，创
建一个对象。
14.1.3 Writer 对象
Writer 对象让你将数据写入 CSV 文件。要创建一个 Writer 对象，就使用
csv.writer()函数。在交互式环境中输入以下代码。
>>> import csv
 >>> outputFile = open('output.csv', 'w', newline='')
 >>> outputWriter = csv.writer(outputFile)
>>> outputWriter.writerow(['spam', 'eggs', 'bacon', 'ham'])
21
>>> outputWriter.writerow(['Hello, world!', 'eggs', 'bacon', 'ham'])
32
>>> outputWriter.writerow([1, 2, 3.141592, 4])
16
>>> outputFile.close()
首先，调用 open()并传入'w'，以写模式打开一个文件。这将创建对象。然后
将它传递给csv.writer()，创建一个Writer对象。
在Windows上，需要为open()函数的newline关键字参数传入一个空字符串。
这样做的技术原因超出了本书的范围。如果忘记设置newline关键字参数，output.csv
中的行距将有两倍，如图14-1所示。
图14-1 如果你在open()中忘记了newline=''关键字参数，CSV文件将有两倍行距
Writer对象的writerow()方法接受一个列表参数。列表中的每个词，放在输出的
CSV 文件中的一个单元格中。writerow()函数的返回值，是写入文件中这一行的字
符数（包括换行字符）。
这段代码生成的文件像下面这样：
spam,eggs,bacon,ham
"Hello, world!",eggs,bacon,ham
1,2,3.141592,4
请注意，Writer对象自动转义了'Hello, world!'中的逗号，在CSV文件中使用了
268 Python编程快速上手——让繁琐工作自动化
双引号。模块csv让你不必自己处理这些特殊情况。
14.1.4 delimiter 和lineterminator 关键字参数
假定你希望用制表符代替逗号来分隔单元格，并希望有两倍行距。可以在交互
式环境中输入下面这样的代码：
>>> import csv
>>> csvFile = open('example.tsv', 'w', newline='')
 >>> csvWriter = csv.writer(csvFile, delimiter='\t', lineterminator='\n\n')
>>> csvWriter.writerow(['apples', 'oranges', 'grapes'])
24
>>> csvWriter.writerow(['eggs', 'bacon', 'ham'])
17
>>> csvWriter.writerow(['spam', 'spam', 'spam', 'spam', 'spam', 'spam'])
32
>>> csvFile.close()
这改变了文件中的分隔符和行终止字符。分隔符是一行中单元格之间出现的字
符。默认情况下，CSV文件的分隔符是逗号。行终止字符是出现在行末的字符。默
认情况下，行终止字符是换行符。你可以利用 csv.writer()的 delimiter 和 lineterminator
关键字参数，将这些字符改成不同的值。
传入delimeter='\t'和lineterminator='\n\n'，这将单元格之间的字符改变为制表符，
将行之间的字符改变为两个换行符。然后我们调用writerow()三次，得到3行。
这产生了文件example.tsv，包含以下内容：
apples oranges grapes
eggs bacon ham
spam spam spam spam spam spam
既然单元格是由制表符分隔的，我们就使用文件扩展名.tsv，表示制表符分隔的值。
14.2 项目：从 CSV 文件中删除表头
假设你有一个枯燥的任务，要删除几百CSV文件的第一行。也许你会将它们送入一
个自动化的过程，只需要数据，不需要每列顶部的表头。可以在Excel中打开每个文件，
删除第一行，并重新保存该文件，但这需要几个小时。让我们写一个程序来做这件事。
该程序需要打开当前工作目录中所有扩展名为.csv的文件，读取CSV文件的内
容，并除掉第一行的内容重新写入同名的文件。这将用新的、无表头的内容替换
CSV文件的旧内容。
警告 与往常一样，当你写程序修改文件时，一定要先备份这些文件，以防万一你的
程序没有按期望的方式工作。你不希望意外地删除原始文件。
第14章 处理CSV文件和JSON数据 269