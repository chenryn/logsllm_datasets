# Specification Mining for Intrusion Detection in Networked Control Systems

**Authors:**
- Marco Caselli, University of Twente
- Emmanuele Zambon, University of Twente and SecurityMatters B.V.
- Johanna Amann, International Computer Science Institute
- Robin Sommer, International Computer Science Institute and Lawrence Berkeley National Laboratory
- Frank Kargl, Ulm University

**Publication:**
- Proceedings of the 25th USENIX Security Symposium, August 10â€“12, 2016, Austin, TX
- ISBN: 978-1-931971-32-4
- Open access sponsored by USENIX

## Abstract

This paper introduces a novel approach to specification-based intrusion detection in networked control systems (NCSs). Our method reduces the significant human effort required to deploy such systems by automating the development of specification rules. We leverage comprehensive documentation often available in NCSs to automatically derive these rules and continuously monitor network traffic. This approach is implemented for BACnet-based building automation systems and tested on real infrastructures at the University of Twente and the Lawrence Berkeley National Laboratory (LBNL). The results show that our system can effectively identify process control mistakes and potentially dangerous misconfigurations, highlighting the need for improved monitoring in NCSs.

## 1. Introduction

Intrusion detection systems (IDSs) have evolved significantly since Denning's seminal work in 1986 [9]. Among various approaches, anomaly-based and specification-based IDSs have gained attention for their ability to detect previously unknown attacks, such as zero-day attacks. Specification-based IDSs use functional specifications to model system properties, ensuring high-quality models and accurate detection. However, these approaches typically require manual analysis, which is labor-intensive and prone to errors.

Our work aims to automate the specification-based intrusion detection process, addressing the key challenges:
1. **Consistency of Features:** Targeted systems may not always have consistent features or constraints.
2. **Semantic Gap:** Bridging the gap between infrastructure properties and low-level observable features is difficult.
3. **Human Effort:** Crafting explicit and unambiguous descriptions of feature behaviors requires substantial human effort.

We propose an approach to automatically mine specification rules from available documentation, assuming that:
- Documentation about the monitored systems is available in electronic form.
- Information from the documentation can be linked to what the IDS can observe.

Networked Control Systems (NCSs) are particularly suitable for this approach due to their stable communication patterns and consistent features. Examples include industrial control systems, building automation systems, and in-vehicle networks. These systems often have detailed documentation, such as configuration files, reference books, and manuals, which can be used to derive specification rules.

## 2. State of the Art

Ko et al. [34] introduced specification-based intrusion detection, proposing a Program Policy Specification Language to formally define program operations. Later works, such as SHIM [33], integrated multiple detection approaches for both network communications and operating system activities. Sekar et al. [52, 54] proposed complementary approaches using custom languages and hybrid methods combining specification-based and anomaly-based techniques.

Specification-based IDSs have been customized for various infrastructures, including mobile ad hoc networks [60, 44, 23, 56, 61, 19] and WLANs [16]. They have also been applied to specific use cases, such as VoIP technologies [59], carrier Ethernet [26], and kernel dynamic data structures [48].

In NCSs, works like [8, 27, 37] present specification-based IDSs for protocols like Modbus, Zigbee, and DNP3. Hadeli et al. [21] applied a semi-automated approach to substation automation systems, while Berthier et al. [4] modeled smart-meter security constraints and policies. Despite these advancements, current research assumes that protocol and system documentation is readily available, with little focus on automated information extraction.

## 3. Case Study: Building Automation

Building automation systems (BASs) control operations and services within buildings, such as HVAC, lighting, energy consumption, and physical security. A typical BAS follows a hierarchical layout, with sensors and actuators connected to controllers, which communicate with servers and distributed control systems (DCSs).

### 3.1 BACnet

The Building Automation and Control Network (BACnet) protocol facilitates communication in BASs. BACnet has a layered architecture similar to the ISO/OSI model, with an application layer containing application data and a network layer for routing. The application layer is based on two core concepts: objects and services. Objects represent functions, and services define how to communicate with the system.

Manufacturers use Protocol Implementation Conformance Statements (PICS) to describe supported objects and services. Operators may also use Engineering Data Exchange (EDE) files to provide detailed information on device implementations and value constraints.

### 3.2 Attacks on BACnet

BACnet provides limited security features, but they are often not implemented in available products, making BACnet infrastructures vulnerable to cyber-threats. Attacks can be categorized into three main groups:
- **Snooping:** Stealing information about the BAS without disrupting processes.
- **Denial of Service (DoS):** Interfering with control processes by making controllers unreachable.
- **Process Control Subverting:** Manipulating the controlled processes.

## 4. Approach

Our approach involves automatically mining specification rules from available documentation. We assume that:
- Documentation is available in electronic form.
- Information from the documentation can be linked to observable features.

We implement this approach for BACnet-based building automation systems and test it on real infrastructures at the University of Twente and LBNL. The results show that our system can effectively identify process control mistakes and potentially dangerous misconfigurations.

## 5. General Applicability

Our work demonstrates the feasibility and effectiveness of automating specification-based intrusion detection. By reducing the human effort required to develop and deploy such systems, we aim to make specification-based IDSs more time-effective and accurate. Future work will explore the general applicability of our approach to other NCSs and further refine the automation process.

---

This optimized version of the text is more structured, coherent, and professional, with clear headings and a logical flow of information.