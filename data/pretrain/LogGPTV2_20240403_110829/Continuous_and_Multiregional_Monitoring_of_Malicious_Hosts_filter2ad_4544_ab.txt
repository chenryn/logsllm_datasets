4.  The stored observation results are investigated. 
In Step 2, Stargazer carries out monitoring, e.g., sends a Ping, de-
termines  whether  or  not  the  host  serves  robots.txt,  performs  an 
HTTP GET, gets an A record for the domain, and takes a screenshot 
of the web page. At this point, it tries to impersonate requests the 
attackers would supposedly receive as much as possible by setting 
a User-Agent, port number, etc. If web crawling is prohibited by the 
robots.txt, Stargazer does not conduct HTTP-related monitoring to 
ensure research ethics are upheld.  
In Step 4, Stargazer conducts two investigations. One is a change 
detection, and the other is a difference detection. In change detec-
tion,  Stargazer  compares  the  current  monitoring  results  with  the 
previous ones. If both are not the same, it is detected as a potential 
early indication of a cyberattack. In difference detection, Stargazer 
compares the monitoring results of each sensor. If a difference exists, 
it is detected as a potential region-targeted cyberattack. 
3.  MEASUREMENTS 
3.1  Experimental Setup 
To test the effectiveness of Stargazer, we carried out preliminary 
monitoring.  First,  we  collected  monitoring  targets.  We  selected 
1,050 malicious hosts from public URL deny lists. Most of the URLs 
were reported as being associated with threat actors.  
To understand  whether or not  different locations affect the re-
sponse from malicious hosts, we deployed our sensors in seven  
Figure 4: Behavior of attack preparation. 
different regions—Japan, US (West), US (East), Singapore, Germany, 
England, and Brazil—as shown in Table 1. All sensors were deployed 
on Amazon Web Service (AWS) instances. 
3.2  Results 
While monitoring the target list and sensors described in Section 3.1, 
we conducted measurements from Dec. 2018 to Mar. 2020, obtaining 
10,929,418 of them. Our subsequent investigation enabled obtaining 
three characteristic cases, described next. 
Case Study 1: revived hosts. A total of 87 hosts, inactive in 2018, 
were revived in 2019. Figure 2 shows the transition in status code of 
one of the revived malicious hosts from Dec. 2018 to Mar. 2020. The 
green block indicates that a response occurred and that its status 
code was 2xx, and the gray block indicates a response did not occur. 
From this figure, we can see this malicious host had been inactive 
in 2018 and reactivated around Dec. 2019. The host was reported as 
malicious before 2018 and then was deactivated once. The results 
suggest long-used hosts should be observed even after deactivation. 
It also suggests the possibility of identifying an attacker's attribution 
using the transition characteristics of the status code. However, re-
vived hosts include sink-holed hosts. They are detected manually 
by the A record (e.g., 127.0.0.1), content (consisting only of messages 
that mean they are sink-holed), etc. Thus, more fine-grained reacti-
vation detection is necessary in the future. 
Case Study 2: hosts that only respond to specific regions. Two 
hosts responded to only accesses from certain regions—Singapore, 
US (West), and Japan. Figure 3 illustrates the transition in status of 
one of the hosts from Feb. 2020 to Mar. 2020. This sample showed a 
certain Emotet C2, known for targeting Japan and other regions; it 
could also be found using the monitoring results. It suggests mul-
tiregional monitoring can reveal attacks that change their behavior 
depending on the origins of access. 
Poster CCS '20, November 9–13, 2020, Virtual Event, USA2102Case Study 3: behavior of attack preparation. First, the three 
hosts were reactivated as web servers with only default pages, and 
then they started providing malicious pages for a short lifetime. Fig-
ure 4 describes the transition of the status code and content of one 
of the malicious hosts. This host was revived once and served a de-
fault page of apache. After a few periods, its content turned into 
potential malicious content, and it was deactivated after a few peri-
ods.  This  implies  they  have  multiple  different  phases:  intervals, 
preparations,  and  attacks.  It  also  implies  that  they  are  used  for 
short-term attacks and that a simple page can be an early indicator 
of an attack launch. 
To summarize, these case studies demonstrate Stargazer’s contin-
uous and multiregional monitoring is useful for achieving our re-
search  goals.  Specifically,  the  case  studies  demonstrate  Stargazer 
can avoid several monitoring evasions, such as reactivation, region-
limited  response,  and  short-term  activation.  In  addition,  we  ob-
tained the state transition of an attacker’s infrastructure, e.g., host 
reactivation and attack phase transition, thereby providing support 
for research goal 1 being achieved. We also extracted potential sig-
nificantly malicious hosts from candidates, e.g., revived hosts and 
hosts  that  respond  to  only  specific  regions.  This  means  research 
goal 2 could be accomplished. Furthermore, we showed the possi-
bility of a host’s reactivation and attack phase transition being used 
as an early indicator. The early indicator is a type of CTI; therefore, 
achieving research goal 3 was possible.  
4.  Discussion 
We herein discuss the limitations of our current work and ethical 
issues. 
Limitations. One of the methods attackers use to evade the analy-
sis of malicious hosts by researchers is cloaking, which displays ma-
licious sites only to the victims and harmless sites to other visitors, 
including the researchers. One of the concrete methods used is to 
return  malicious  content  only  to  an  access  from  a  specific  target 
country. Stargazer can deal effectively with this method because it 
has sensors in several countries, as aforementioned. However, an-
other cloaking method can deny list IP addresses of researchers and 
return harmless content for access from the listed IP addresses [1]. 
If a sensor’s IP address is added to a deny list, monitoring can be 
evaded. In addition, we deployed our sensors to AWS in these meas-
urements. Amazon publishes the IP ranges of their service [2]; thus, 
deny listing of sensors on AWS is also possible. The existence of a 
method of returning malicious content only to the IP address of a 
malware-infected device has also been suggested [3]. Stargazer can 
also be evaded using this method. In our future work, we will extend 
Stargazer to make it more robust against these evasion strategies, 
e.g., by changing the IP address on a regular basis and by deploying 
sensors not only to AWS. 
Ethical Issues. During this monitoring, communication that can 
occur in normal use, such as requests of HTTP GET and sending a 
Ping, was made to hosts open to the Internet, and no malicious com-
munication was carried out. Additionally, robots.txt was checked, 
and if crawling was prohibited, monitoring was not performed. 
5.  RELATED WORK 
As briefly mentioned earlier, many studies have been conducted on 
monitoring suspicious hosts. CyberProbe [4] detects C2 servers and 
Listen  status  bots  using  active  scanning.  Soska  et  al.  proposed  a 
method for predicting whether or not a site will be falsified by using 
monitoring data [5]. Invernizzi et al. proposed a cloaking detection 
method  [6].  Although  these  methods  do  not  involve  continuous 
monitoring,  they  are  highly  effective.  TARDIS  [7]  is  a  detection 
method for CMS-targeting attacks. To detect attacks, TRADIS uti-
lizes snapshot content of web sites just as Stargazer does. Barron et 
al. operated honeypots deployed in multiple regions and analyzed 
the attacks from the view point of honeypot location [8]. Augur [9] 
captures  the  onset  or  termination  of  censorship  with  continuous 
and multiregional monitoring. ICLab [10] is also a censorship meas-
urement platform with multiregional sensors. Although the focus of 
these systems are not the same as Stargazer, they consist of contin-
uous and multiregional sensors just like Stargazer. 
6.  CONCLUSIONS AND FUTURE WORK 
In this paper, we proposed Stargazer, a malicious host monitoring 
platform.  Stargazer  monitors  malicious  sites  continuously  with 
multiregional sensors.  
In this study, we conducted monitoring using Stargazer of 1,050 
URLs in the wild Internet, obtaining 10,929,418 measurements. By in-
vestigating the results of monitoring, we found that Stargazer can 
overcome an attacker’s evasion strategies and can reveal cyberat-
tack  activities.  However,  we  only  carried  out  a  limited  analysis; 
therefore, in our future work, we will extend our analysis and ex-
haustively evaluate Stargazer. In addition, we will increase the num-
ber of sensors and organizations that work together to expand the 
observation  coverage.  We  would  also  like  to  monitor  malicious 
hosts for a longer period of time and to improve the method (e.g., 
simulate  malware  communication)  to  enable  more  sophisticated 
monitoring. Finally, we plan to create datasets from the results and 
to provide them to research communities. 
ACKNOWLEDGMENTS 
This work was supported by the National Institute of Information 
and  Communications  Technology.  We  would  like  to  express  our 
deepest gratitude to all those who have given us useful advice and 
help during this study. 
REFERENCES 
[1]  Kyle Zeeuwen, Matei Ripeanu, and Konstantin Beznosov. 2011. Improving mali-
cious URL re-evaluation scheduling through an empirical study of malware down-
load centers, In Proceedings of the 2011 Joint WICOW/AIRWeb Workshop on Web 
Quality (WebQuality 2011), 42–49. 
[2]  Amazon. 2020. AWS IP Address Ranges. 2020. http://docs.aws.amazon.com/gen-
eral/latest/gr/aws-ip-ranges.html  
[3]  Masood Mansoori, Ian Welch, Kim-Kwang Raymond Choo, Roy A. Maxion and 
Seyed Ebrahim Hashemi. 2017. Real-world IP and network tracking measurement 
study of malicious websites with HAZOP, International Journal of Computers and 
Applications, 39, 106–121. 
[4]  Antonio Nappa, Zhaoyan Xu, M. Zubair Rafique, Juan Caballero, and Guofei Gu. 
2014. CyberProbe: Towards Internet-Scale Active Detection of Malicious Servers, 
In Proceedings of the 2014 Network and Distributed System Security Symposium 
(NDSS 2014), 1–15. 
[5]  Kyle Soska and Nicolas Christin. 2014. Automatically detecting vulnerable web-
sites before they turn malicious, In Proceedings of the 23rd USENIX conference on 
Security Symposium (SEC 2014), 625–640. 
[6]  Luca Invernizzi, Kurt Thomas, Alexandros Kapravelos, Oxana Comanescu, Jean-
Michel Picod, and Elie Bursztein. 2016. Cloak of Visibility: Detecting When Ma-
chines Browse a Different Web, 2016 IEEE Symposium on Security and Privacy 
(S&P 2016), 743–758. 
[7]  Ranjita Pai Kasturi, Yiting Sun, Ruian Duan, Omar Alrawi, Ehsan Asdar, Victor 
Zhu, Yonghwi Kwon, and Brendan Saltaformaggio. 2020. TARDIS: Rolling Back 
The Clock On CMS-Targeting Cyber Attacks. 2020 IEEE Symposium on Security 
and Privacy (S&P 2020), 1156–1171. 
[8]  Timothy Barron and Nick Nikiforakis. 2017. Picky Attackers: Quantifying the Role 
of  System  Properties  on  Intruder  Behavior.  In  Proceedings  of  the  33rd  Annual 
Computer Security Applications Conference (ACSAC 2017), 387–398. 
[9]  Paul Pearce, Roya Ensafi, Frank Li, Nick Feamster, and Vern Paxson. 2017. Augur: 
Internet-Wide Detection of Connectivity Disruptions, 2017 IEEE Symposium on 
Security and Privacy (S&P 2017), 427–443. 
[10]  Arian Akhavan Niaki, Shinyoung Cho, Zachary Weinberg, Nguyen Phong Hoang, 
Abbas  Razaghpanah,  Nicolas  Christin,  and Phillipa  Gill.  2020.  ICLab:  A  Global, 
Longitudinal Internet Censorship Measurement Platform. 2020 IEEE Symposium 
on Security and Privacy (S&P 2020), 135–151. 
Poster CCS '20, November 9–13, 2020, Virtual Event, USA2103