scured by the relatively imprecise methods available to clas-
sic network performance studies.
In particular, we show
that — irrespective of the input data rate — routers in-
troduce burstiness. Thus, downstream routers and receiver
endpoints must be prepared to accept extended chains of
packets with the minimum legal 10GbE packet spacing, or,
equivalently, the highest possible instantaneous data rate.
Commodity receiver endpoints will often drop packets from
ﬂows with such bursts of minimally spaced packets. In fact,
our prior observation of this anomalous behavior served orig-
inally to motivate this study [20].
In analyzing our data set, we probe the self-similarity of
our results and exclude anomalous explanations for the ob-
served probability densities of inter-packet delays. Further,
we validate the stability of our deﬁnition of packet chains
and ﬁnd that chains of increasing length occur with expo-
nentially less frequency. Finally, we comment upon the rel-
ative insensitivity of our distribution of packet delays to the
background traﬃc along our WAN path.
All data collected here are available to the scientiﬁc com-
munity at http://bifocals.cs.cornell.edu/. Similarly,
we freely distribute the software component of BiFocals
under a two-clause BSD license.
6. ACKNOWLEDGEMENTS
We thank Jennifer Rexford for her insightful suggestions,
David Bindel for his informative discourse, Robert Broberg
and his colleagues at Cisco for their technical knowledge, and
our referees for their anonymous, though no less thoughtful,
input. We further recognize the engineers who helped es-
tablish and maintain the network infrastructure on which
we performed these experiments: Eric Cronise, Dan Eck-
strom, and Ed Kiefer (Cornell Information Technologies);
Greg Boles, Brent Sweeny, and Joe Lappa (National Lamb-
daRail); Scott Yoest and Larry Parmelee (Cornell Computer
Science Technical Staﬀ). Funding for this work was provided
by the Air Force Research Laboratory (AFRL) and the Na-
tional Science Foundation (NSF).
7. REFERENCES
[1] Anderson, T., Collins, A., Krishnamurthy, A.,
and Zahorjan, J. PCP: Eﬃcient Endpoint
Congestion Control. In NSDI (2006).
353[2] Baccelli, F., Machiraju, S., Veitch, D., and
Bolot, J. On Optimal Probing for Delay and Loss
Measurement. In IMC (2007).
[3] Blake, S., Black, D., Carlson, M., Davies, E.,
Wang, Z., and Weiss, W. RFC 2475: An
Architecture for Diﬀerentiated Services, 1998.
[4] Brakmo, L. S., and Peterson, L. L. TCP Vegas:
End to End Congestion Avoidance on a Global
Internet. IEEE J. Sel. Area. Comm. 13 (1995),
1465–1480.
[5] Carter, R. L., and Crovella, M. E. Measuring
Bottleneck Link Speed in Packet-Switched Networks.
Perform. Evaluation 27–28 (1996), 297–318.
[6] Choi, B., Moon, S., Zhang, Z., Papagiannaki, K.,
and Diot, C. Analysis of Point-To-Point Packet
Delay In an Operational Network. Comput. Netw. 51
(2007), 3812–3827.
[7] Crovella, M., and Krishnamurthy, B. Internet
Measurement: Infrastructure, Traﬃc and Applications.
Wiley, 2006.
[8] Endace DAG Network Cards. http://www.
endace.com/dag-network-monitoring-cards.html.
[9] Hohn, N., Papagiannaki, K., and Veitch, D.
Capturing Router Congestion and Delay. IEEE ACM
T. Network. 17 (2009), 789–802.
[10] IEEE Standard 802.3ae-2002.
http://grouper.ieee.org/groups/802/3/ae/.
[11] IEEE Standard 802.3-2008. http:
//standards.ieee.org/getieee802/802.3.html.
[12] Iperf. http://iperf.sourceforge.net/.
[13] Ixia Interfaces. http://www.ixiacom.com/.
[14] Jiang, H., and Dovrolis, C. Why is the Internet
Traﬃc Bursty in Short Time Scales? In
SIGMETRICS (2005).
[15] Kaminow, I. P., and Li, T., Eds. Optical Fiber
Telecommunications: IV A & IV B. Academic, 2002.
[16] Kompella, R. R., Levchenko, K., Snoeren,
A. C., and Varghese, G. Every Microsecond
Counts: Tracking Fine-Grain Latencies with a Lossy
Diﬀerence Aggregator. In SIGCOMM (2009).
[17] Kurose, J. On Computing Per-session Performance
Bounds in High-Speed Multi-hop Computer Networks.
In SIGMETRICS (1992).
[18] Leland, W. E., Taqqu, M. S., Willinger, W.,
and Wilson, D. V. On the Self-Similar Nature of
Ethernet Traﬃc (Extended Version). IEEE ACM T.
Network. 2 (1994), 1–15.
[19] Lockwood, J. W., McKeown, N., Watson, G.,
Gibb, G., Hartke, P., Naous, J., Raghuraman,
R., and Luo, J. NetFPGA – An Open Platform for
Gigabit-rate Network Switching and Routing. In MSE
(2007).
[20] Marian, T., Freedman, D. A., Birman, K., and
Weatherspoon, H. Empirical Characterization of
Uncongested Optical Lambda Networks and 10GbE
Commodity Endpoints. In DSN (2010).
[21] Mytkowicz, T., Diwan, A., Hauswirth, M., and
Sweeney, P. F. Producing Wrong Data Without
Doing Anything Obviously Wrong! In ASPLOS
(2009).
[22] National LambdaRail. http://www.nlr.net/.
[23] Prasad, R., Murray, M., Dovrolis, C., and
Claffy, K. Bandwidth Estimation: Metrics,
Measurement Techniques, and Tools. IEEE Network
17 (2003), 27–35.
[24] Wei, D. X., Jin, C., Low, S. H., and Hegde, S.
FAST TCP: Motivation, Architecture, Algorithms,
Performance. IEEE ACM T. Network. 14 (2006),
1246–1259.
APPENDIX
A. HARDWARE FOUNDATION
We reference Figure 3 of Section 2.3 to depict both the
transmission and acquisition hardware. All electrical and
optical components used here are commercially available
and commonly found in optical ﬁber communications labs.
(Kaminow and Li [15] provide a comprehensive review of
ﬁber components and systems.) The optical components
for the transmitter consist of a continuous wave (CW) dis-
tributed feedback (DFB) laser (here: ILX Lightwave 79800E
centered at λ = 1555.75 nm) and an electro-optic modulator
(EOM, here: JDS Uniphase OC-192 Modulator). The CW
laser outputs a constant light intensity, which is switched on
and oﬀ by the EOM based upon a supplied electrical signal.
This electrical impulse to the EOM is provided by the combi-
nation of a precise frequency synthesizer and a pulse pattern
generator (PPG). The frequency synthesizer (here: Marconi
2042 Low Noise Signal Generator) is tuned to 5.15625 GHz,
which is doubled (with a Narda 4453 frequency doubler) to
10.3125 GHz14 to seed the clock of the PPG (here: An-
ritsu MP1800A / MU181020A with Picosecond Pulse Labs
Model 5865 broadband RF ampliﬁer). The PPG can be pro-
grammed with an arbitrary ﬁnite-length (here: 128 Mbit)
bit sequence; it outputs an electrical waveform correspond-
ing to these symbols continuously repeated, at a symbol rate
of 10.3125 GBaud (as determined by the clock seed). The
PPG output drives the EOM, resulting in an optical wave-
form with high light intensity representing “1” bits and no
light intensity representing “0” bits. The amplitude and bias
of the electrical signal can be adjusted to ensure maximal
light intensity for the 1 bits and minimal for the 0 bits (here:
this EOM can achieve 20 dB extinction of “on” to “oﬀ”). The
optical signal from the EOM is output through a single-mode
optical ﬁber, which completes the optical transmitter.
On the receiver side, the BiFocals acquisition hardware
consists of a fast, broadband 12.3 Gbps optical-to-electri-
cal (O/E) converter (here: Discovery Semiconductor DSC-
R402) and a real-time digital oscilloscope (here: LeCroy
SDA 11000-XL) with fast sampling (40 GSa/sec), high de-
tection bandwidth (11 GHz), and deep memory (100 MSa).
The O/E converter, a broadband photodetector with a built-
in high-gain current-to-voltage ampliﬁer, transforms the in-
cident optical waveform into an electrical output signal. We
employ the real-time oscilloscope as an analog-to-digital con-
verter (ADC), sampling the output from the O/E converter
in excess of the Nyquist rate. Leveraging a precisely cali-
brated timebase, this real-time oscilloscope captures wave-
form traces that precisely reﬂect the symbolstream on the
ﬁber. Waveform traces are subsequently transfered for later
oﬀ-line deconstruction by our software stack.
14In accordance with the nominal symbol rate speciﬁed in
Table 52–12 of IEEE 802.3-2008 [11].
354number of subtleties. PCS wraps 64 bits of symbols into
a 66-bit frame, resulting in a 3.125% overhead and requir-
ing a 10.3125 GBaud symbol rate for a 10 Gbps data rate.
The 64 bits are 8 octets of data or control information,
while the two bits that delineate the frame ensure a signal
transition every frame (as only “01” and “10” are allowed),
easing clock recovery and frame synchronization. The con-
tent of these 64b/66b frames are mandated by the control
code and data block formats allowed,16 especially with re-
spect to Start (/S/), Terminate (/T/), and Idle (/I/) con-
trol codes. The resulting sequence of the 64 payload bits
from each frame is sequentially fed through a multiplica-
tive self-synchronizing scrambler, deﬁned by the polynomial
G(x) = 1 + x39 + x58 [11], to ensure that the resulting sig-
nal has desired DC-balance characteristics, irrespective of
transmitted data. Self-synchronization ensures that the de-
scrambler of the receiver does not need knowledge of any
given initial state to implement G(x).
Finally, when inserting discrete packets into the symbol-
stream, our encoder must minimize any boundary eﬀects of
the ﬁnite-length PPG memory depth by: (1) ensuring sym-
bolstreams are integer numbers of 64b/66b frames (for PCS
frame-sync); (2) positioning /I/ codes at the start of the
symbolstream (to mitigate the initial 58 bits necessary for
self-synchronization of the descrambler at the beginning of
the symbolstream); (3) maintaining identical numbers of /I/
codes, as desired, across the periodic boundary of the sym-
bolstream as it wraps around (for complete homogeneity of
packets in time, required in this study); and (4) maximizing
the length of the symbolstream, so as still to be able to ﬁt
it within the given ﬁnite PPG memory depth. To sum, our
64b/66b software encoder must comply with these require-
ments and implement all necessary functionality to generate
a valid 64b/66b PCS symbolstream that can be understood
by any deployed 10GBase-R implementation, such as com-
mercial routers and switches.
In comparison with our software stack for symbolstream
generation, our software for symbolstream deconstruction
requires an additional clock recovery and waveform digiti-
zation step before conducting the inverse of the functions
described above. (Note, on the transmission side, the hard-
ware, rather than the software, handles the clock genera-
tion.) Accurate clock recovery is non-trivial and computa-
tionally expensive, but necessary for subsequent success at
decoding symbolstreams and parsing packet streams. Our
software clock recovery involves mathematical transforma-
tions (Fast Fourier Transforms, convolutions, etc.) of the
acquired sampled waveform and a number of intermediary
modules to iteratively reﬁne our estimate for the symbol pe-
riod associated with the actual symbol rate of the sender.
These numerical calculations consume the bulk of the 5000+
processor-hours required for this data set.
The next two stages of our acquisition software provide
64b/66b PCS decoding and descrambling, as well as higher
layer packet parsing, in exact analogue to the transmission
scenario. Finally, we use the symbol period extracted dur-
ing clock recovery, TS, and convert the measured bit oﬀ-
sets, between successive packet Start-of-Frame (SOF) de-
limiters, into inter-packet delay times. Here, we measure
TS = 96.9710 ± 0.0001 ps, with accuracy determined by Bi-
Focals acquisition components.
Figure 11: Eye diagram of the optical signal transmitted by
BiFocals hardware: shows a large, open eye with negligible
noise or jitter and conformance with 10GBase-R speciﬁca-
tions for optical transmission power, rise time, eye mask,
etc. Horizontal scale is 20 ps/div and vertical is 80 µW/div.
To validate the hardware instrumentation of BiFocals,
we ascertain the quality of the transmitted optical signal (in-
dependent of the hardware receiver) by measuring its eye di-
agram, a standard measurement in digital communications.
We connect the optical output of our transmitter directly
to a wideband sampling oscilloscope (here: Agilent 86100A
with 30 GHz 86109A optical module) and trigger it at the
clock frequency of our transmitter, which overlays the se-
quence of samples in time, synchronized at a ﬁxed point in
the symbol frame, as shown in Figure 11. The degree to
which the eye is “open” (in both time and amplitude) pro-
vides a direct metric of the quality of the signal. Vertical eye
closure (indicative of high noise levels or weak signal) leads
to ambiguity in the digitization of analog signals, while hor-
izontal eye closure (from timing jitter or pulse walkoﬀ) can
result in symbol errors due to mis-sampling on a transition.
The measured eye diagram for the BiFocals transmitter
has lines that are thin and well-deﬁned, indicating low am-
plitude and timing noise. Its central eye-opening is large and
free of measured points, thus ensuring unambiguous “1” and
“0” symbols in the signal. We also conﬁrm via the measured
eye diagram that our transmitter is in compliance with the
time and amplitude standards for 10GBase-R.15
B. SOFTWARE STACK
With the description of the hardware layer of our BiFo-
cals instrumentation complete, we now discuss the oﬀ-line
software stack (shown also in Figure 3) that internalizes the
intelligence and semantics of the Physical Layer and all other
network layers. The transmission software stack involves
two primary stages (analogous to PHY and MAC/IP/UDP
layers): ﬁrst, the creation of a sequence of discrete Eth-
ernet packets; and second, the insertion of these packets
into a continuous 64b/66b Physical Coding Sublayer (PCS)
symbolstream suitable for transmission on the physical ﬁber
media. Generation of a sequence of packets, in compliance
with appropriate protocols, is a straightforward task of soft-
ware engineering: our current implementation incorporates
Ethernet, IP, UDP, and various application payloads.
The integration of these discrete packets into a standards-
compliant 64b/66b PCS symbolstream, however, involves a
15See Table 52–12 in IEEE 802.3-2008 [11].
16See Figure 49–7 of the IEEE 802.3-2008 standard [11].
355