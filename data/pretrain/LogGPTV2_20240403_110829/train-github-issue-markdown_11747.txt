## Bug Report
**Note: This form is for English only. Submissions in other languages will not be accepted.**

Before submitting a bug report, please ensure that you have:
- Searched open and closed GitHub issues.
- Read the documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview/).

Please pay attention to the issues you submit, as we may need more details. If there is no further response and we cannot reproduce the issue with the provided information, we will close it.

Please answer the following questions before submitting your issue. Thank you!

### 1. Which version of ShardingSphere are you using?
```plaintext
org.apache.shardingsphere
sharding-jdbc-spring-boot-starter
4.1.0

org.apache.shardingsphere
sharding-jdbc-spring-namespace
4.1.0
```

### 2. Which project are you using? ShardingSphere-JDBC or ShardingSphere-Proxy?
- **Project:** ShardingSphere-JDBC

### 3. Expected Behavior
- **Expected:** The application should be able to insert and update records in the `transbill_records` table.

### 4. Actual Behavior
- **Actual:** An error occurs during the insertion and update process.
  - **Error Message:**
    ```plaintext
    org.springframework.jdbc.BadSqlGrammarException: 
    ### Error updating database.  Cause: java.sql.SQLException: No value specified for parameter 6
    ### The error may exist in file [D:\myworkers\workspace\ocenter\ocenter-dao\target\classes\mapper\RecordMapper.xml]
    ### The error may involve com.thclouds.ocenter.mapper.RecordMapper.appends-Inline
    ### The error occurred while setting parameters
    ### SQL: INSERT INTO transbill_records (business_no, occurrence_time, gmt_create, gmt_modify, records) VALUES (?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE records=CONCAT_WS(';',records,?)
    ### Cause: java.sql.SQLException: No value specified for parameter 6
    ; bad SQL grammar []; nested exception is java.sql.SQLException: No value specified for parameter 6
    ```

### 5. Reason Analysis (If you can)
- **Analysis:** It appears that the MyBatis proxy is not correctly handling the parameters when using ShardingSphere. Specifically, it seems that a single object is being used to provide multiple parameters, which is not supported in this context.

### 6. Steps to Reproduce the Behavior
- **Steps:**
  1. Use MySQL 8.
  2. Use MyBatis for ORM.
  3. Create the `transbill_records` table with the following schema:
     ```sql
     DROP TABLE IF EXISTS `transbill_records`;
     CREATE TABLE `transbill_records` (
       `business_no` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '对应业务主键',
       `boot_type` int(10) NOT NULL COMMENT '对应的操作关联类型',
       `occurrence_time` datetime(0) NULL DEFAULT NULL COMMENT '发生时间',
       `gmt_create` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '创建时间',
       `gmt_modify` datetime(0) NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP(0) COMMENT '修改时间',
       `records` text CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL,
       PRIMARY KEY (`business_no`) USING BTREE,
       UNIQUE INDEX `uniq_business_no`(`business_no`, `boot_type`) USING BTREE
     ) ENGINE = MyISAM CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci COMMENT = 'spi接口配置表' ROW_FORMAT = Dynamic;
     SET FOREIGN_KEY_CHECKS = 1;
     ```
  4. Insert and update data using the following SQL:
     ```sql
     INSERT INTO transbill_records (business_no, occurrence_time, gmt_create, gmt_modify, records)
     VALUES (#{businessNo}, #{occurrenceTime}, #{gmtCreate}, #{gmtModify}, #{records})
     ON DUPLICATE KEY UPDATE records = CONCAT_WS(';', records, #{records});
     ```
  5. Observe that the operation works without ShardingSphere but fails when ShardingSphere is enabled.

### 7. Example Code for Reproducing the Issue
- **Example Code:**
  - You can find the example code in this [GitHub repository](#).
  - The `business_no` is the primary key, and the SQL statement is designed to insert or update the `records` field based on the `business_no`.

Thank you for your detailed report. We will investigate this issue and get back to you as soon as possible.