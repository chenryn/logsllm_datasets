Figure 1: PRBs inside a sub-
frame can be allocated to
multiple users. Allocation
in two slots are the same
(represented using colors).
Figure 2: When the offered load of the server
exceeds the maximum capacity of the primary
cell, cellular network activates a secondary cell
for the mobile user to support the high data
rate, and deactivates it if the rate drops.
Figure 3: The mobile user buffers all out-
of-sequence transport blocks in a reordering
buffer until the erroneous block is retransmit-
ted and corrected received (multiple retrans-
missions is possible), introducing a 8 ms delay.
and one-way delay, using regression trees to forecast future net-
work performance. PropRate [30] replaces BBR‚Äôs periodic band-
width probing with continuous probing that oscillates the send rate
around the estimated receive rate using packet size, and packet
send/receive times. Sprout [43] leverages packet arrival times to
infer the uncertain dynamics of the network path, forecasting link
capacity based on these measurements. Similarly, ExLL [35] mod-
els the relationship between packet arrival patterns and cellular
bandwidth usage to adjust send rate. Instead of attempting to infer
the cellular network dynamics, Verus [49] tries to learn a delay
profile that captures the relationship between target send window
size and perceived end-to-end delay. Purely relying on end-to-end
statistics, above algorithms inevitably suffers from capacity esti-
mation inaccuracies and are sensitive to network dynamics, as we
have demonstrated (¬ß6.3). PBE-CC delivers superior performance
because of its more fine-grained capacity estimation, achieved by
directly measuring the wireless channel.
Cellular-aware congestion control proposals. ABC [17, 18] and
the Draft IETF Mobile Throughput Guidance (MTG) standard [22]
propose modifications of each mobile base station to explicitly com-
municate the best rate to the sender, but do not explicate specifics
in the design of the capacity monitor that is critical for high perfor-
mance. CQIC [32] embarks on a cross-layer design by extracting 3G
link capacity estimates, but still lacks fine granularity. piStream [45]
and CLAW [46] formulate a model that predicts utilized resource
blocks from signal strength measurements. CLAW uses this model
to speed up web browsing workloads, while piStream uses the
model for video workloads, but the authors‚Äô own measurements
show that signal strength‚Äôs predictive power is quite limited, while
PBE-CC decodes the control channel metadata directly, resulting
in precise bandwidth utilization data that are not estimates.
Cellular PHY-layer monitoring tools. QXDM [36] and MobileIn-
sight [31] extract control messages for a single mobile user, but
cannot provide net information on the cell tower‚Äôs capacity occu-
pancy, as PBE-CC does. BurstTracker [7] locates the bottleneck of
an end-to-end connection. LTEye [28] and OWL [9] decode control
messages, but do not work with carrier aggregation (¬ß3) and later
advanced MIMO standards as PBE-CC does. All the foregoing tools
stop short of a congestion control algorithm design.
3 LTE/5G NEW RADIO PRIMER
In this section, we introduce the relevant design of LTE‚Äôs MAC and
physical layer, with a focus on frequency division duplexing (FDD),
the mode cellular operators use most widely. LTE adopts OFDMA,
dividing the available wireless frequency bandwidth into 180 KHz
chunks and time into 0.5 millisecond slots, as shown in Figure 1.
The smallest time-frequency block (180 KHz and 0.5 ms) is called a
physical resource block (PRB), which is the smallest unit that can
be allocated to a user. LTE groups two slots into a one-millisecond
subframe. The PRB allocation of two slots inside one subframe is the
same. The data transmitted over one subframe is called one transport
block (TB). The size of one TB varies, depending on the number of
allocated PRBs and the wireless physical data rate of the user. The
base station informs the mobile user of its bandwidth allocation
(the amount and position of allocated PRBs) and wireless bit rate,
including the modulation and coding scheme (MCS) and the number
of spatial streams, through a control message transmitted over a
physical control channel [3]. A mobile user decodes the control
message of a subframe before decoding the TB inside it.
Carrier aggregation. By default, the base station delivers data to
a mobile user via a primary component carrier (CC), or primary cell.
When there is a huge amount of data to be delivered to the user, the
base station activates a secondary cell to add capacity. The cellular
network maintains a list of aggregated cells for each user and will
activate them sequentially if necessary. The aggregated cells are
deactivated if and when the user does not utilize the extra capacity.
An example of the carrier activation and deactivation process is
shown in Figure 2. A sender first sends data to a mobile user with a
fixed offered load of 40 Mbits for two seconds, which exceeds the
maximum capacity of the primary cell, so it causes packet buffering
at this cell,1 even when all the bandwidth are allocated for this
user. The cellular network detects such a high-data-rate user and
activates a secondary cell to help deliver the data to this user, at
0.13 seconds. Since 40 Mbit/s is below the aggregated capacity of
the primary and secondary cell, the cellular network drains the
built queue within 0.6 seconds, as shown in Figure 2. The sender
reduces its sending rate to 6 Mbit/s, which is below the capacity of
the primary cell, so the secondary cell is deactivated.
Cellular retransmission and reordering. The cellular network
1 We note that packet buffering at the base station is not a prerequisite for activating
secondary cells. The cellular network activates another cell for a user as long as such
a user is consuming a large fraction of the bandwidth of the serving cell(s).
3
FrequencyTime1ùëöùë†SubframesPRBTransportblock(TB)slots10MHz20MHz5MHzCC1CC2CC3TimeActivationDe-activation00.511.522.53Time (s)020406080100Allocated PRBs050100150Packet delay (ms)PRB of secondary cellPRB of primary cellPacket delaySecondary cell activatedSteady state6 Mbit/sDraining the queueBuildingup queueSecondary cell de-activated 40Mbit/sRetransmission causes 8 ùëöùë†delayScheduled retransmission after 8 subframes (8 ùëöùë†)3498765211235344657687981091210311Reorderingbuffer21312......12345678910UDP/TCPpacketsTransportblock‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶SIGCOMM ‚Äô20, August 10‚Äì14, 2020, Virtual Event, NY, USA
Yaxiong Xie, Fan Yi, Kyle Jamieson
Figure 4: An overview of PBE-CC congestion control. The mobile clients decode the cellular control channel, which contains
detailed information about the base station‚Äôs available wireless capacity. PBE-CC senders control their send rate based on the
estimated bottleneck capacity that the mobile user explicitly sends back, or based on the presence of ACKs from the receiver.
retransmits an erroneous transport block after eight subframes
(milliseconds) of the original transmission, as shown in Figure 3. To
guarantee in order delivery, the mobile user buffers all the transport
blocks received in subframes between the original transmission and
retransmission of the erroneous transport block (supposing they
are received correctly) in a reordering buffer. When the retrans-
mission succeeds, the mobile user report all the buffered transport
blocks together with the retransmitted transport block to upper
layers where the transport layer packets inside the transport blocks
are extracted. As a result, the retransmission introduces a eight
millisecond delay to the transport layer packets inside the erro-
neous transport block and the buffering and reordering operations
at the receiver side introduces a decreasing delay (from seven to
zero milliseconds) to the packets inside the following transport
blocks. If the retransmission fails, the cellular network repeats the
retransmission at most three times, introducing a latency penalty
equal to a multiple (smaller than three) of eight milliseconds.
4 DESIGN
PBE-CC is a rate based, end-to-end congestion control algorithm
for flows traversing cellular networks and terminating at mobile
devices. PBE-CC mobile clients decode the cellular physical con-
trol channel, which contains detailed information about the base
station‚Äôs available wireless capacity. From this, the mobile user is
able to estimate this quantity accurately, at millisecond time granu-
larity. Depending on the location of the bottleneck link, PBE-CC
senders control their send rate based on the estimated bottleneck
capacity that the mobile user explicitly sends back, or based on the
presence of ACKs from the receiver, as shown in Figure 4. Using its
fine-grained capacity estimates, when the bottleneck is the wireless
hop, PBE-CC can immediately increase its send rate to grab new
available capacity without causing any congestion, and decrease
its send rate accordingly, if competition with other mobile users or
the wireless channel reduces wireless capacity.
As traffic patterns are highly dynamic, end-to-end connections
face two possible network states, depending on the relative capaci-
ties of the bottleneck link in the Internet, and the cellular link. Most
of the time, connections are in what we term a wireless-bottleneck
state where the wireless cellular link is the bottleneck of the whole
end-to-end connection. In this state, the PBE-CC mobile user can
estimate and track the bottleneck capacity of the whole connec-
tion at millisecond granularity by decoding the cellular physical
control channel (¬ß4.2.1). The PBE-CC sender matches its send rate
with the bottleneck capacity that the mobile user explicitly feeds
4
back, almost exactly utilizing capacity and at the same time caus-
ing minimal packet buffering in the network. On the other hand,
the connection is in an Internet-bottleneck state if the capacity of
the Internet bottleneck is smaller than the capacity of the wireless
cellular link. PBE-CC then switches to a cellular-tailored BBR-like
congestion control strategy, to compete fairly with other flows that
share the Internet bottleneck for a fair share of the bottleneck ca-
pacity (¬ß4.2.3). PBE-CC tracks possible changes in these two states,
controlling the sender‚Äôs actions accordingly.
Kleinrock has proven that the operating point‚Äîmaximizing de-
livered bandwidth while minimizing delay‚Äîis optimal for both
individual connections and the network as a whole [26, 27]. The
operating point is characterized by the insight that one should keep
the pipe only just full. PBE-CC shares the same goal as BBR, which
is to fill the pipe and minimize the buffering inside the network.
PBE-CC limits the amount of inflight data to the bandwidth-delay
product (BDP) calculated using estimated round-trip propagation
time RTprop and bottleneck capacity with a congestion window,
as shown in Figure 4, so PBE-CC senders often do not send exces-
sive packets even when the feedback from mobile user is delayed,
minimizing queuing in the network, for very low latency, as our
experimental evaluation later demonstrates (¬ß6).
4.1 Connection Start: Linear Rate Increase
On connection start, a PBE-CC sender executes a linear rate increase
in order to approach a fair-share of the bottleneck capacity. By
decoding the control channel, each PBE-CC user knows the number
of other users sharing the cell bandwidth, as shown in Figure 5. PBE-
CC therefore calculates expected fair-share bandwidth (in units of
PRBs) Pexp using the total PRBs available in the cell Pcell and the
number of active users N (including the mobile itself):
(1)
The user then estimates its expected fair-share send rate Cf (in
units of bits per subframe) as:
Pexp = Pcell/N .
Cf = Rw ¬∑ Pexp,
(2)
where Rw is the wireless physical data rate (with units of bits per
PRB) calculated using the number of spatial streams together with
the coding and modulation rate for each stream.
The PBE-CC sender linearly increases its send rate from zero to
the fair-share send rate Cf in three RTTs. The mobile user updates
Cf every millisecond, and sends the calculated rate back to the
server in each acknowledgement. PBE-CC‚Äôs linear increase pre-
vents bursty traffic and leaves time for the cell tower and the other
5RateServerMobileCelltowerDatapacketsACKExtractedsendingrate625143InternetlinkCellularwirelesslinkCongestionwindow4213ACKPhysicalcontrol5TransportlayerPhysicallayermessagesDatapktACKRateDatapktACKRateClientCongestion Control via Endpoint-Centric, Physical-Layer Bandwidth Measurements
SIGCOMM ‚Äô20, August 10‚Äì14, 2020, Virtual Event, NY, USA
users sharing that tower to react to the increased traffic. The cell
tower reacts to the mobile user‚Äôs increasing send rate by propor-
tionally allocating more bandwidth, which results in less bandwidth
allocated to other users. Another PBE-CC user immediately detects
such a decrease in its allocated bandwidth and signals its sender to
lower its send rate accordingly. Eventually, all PBE-CC‚Äôs users tend
to achieve equilibrium with an equally-shared bandwidth. When
two or more component carriers are active during the fair-share
approaching state, we calculate target send rate separately for each
aggregated cell, and sum them up as Cf . When more carriers are
activated during congestion avoidance (¬ß4.2), PBE-CC restarts this
fair-share approaching process.
The user ends linear rate increase and enters congestion avoid-
ance when it achieves its fair-share sending rate Cf . If the bottleneck
of the connection is inside the Internet, rate Cf is not achievable,
so the achieved throughput at the cell tower stays at a rate below
Cf and end-to-end packet delay increases with increasing sender
offered load. When the mobile user detects that the receiving rate
stops increasing for one RTprop, while the oneway packet delay in-
creases monotonically with an increasing offered load, it also ends
the linear rate increase phase and switches to our cellular-tailored
BBR to handle congestion in the Internet (¬ß4.2.3).
4.2 Steady State: Congestion Avoidance
We now present the design of PBE-CC‚Äôs congestion avoidance algo-
rithm. When the connection is in the wireless bottleneck state, PBE-
CC senders match their send rate to estimated wireless capacity
(¬ß4.2.1). Similar to connection startup, PBE-CC identifies a possible
transition from a wireless-bottleneck to Internet-bottleneck state
(¬ß4.2.2), and if this happens, switches to to a cellular-tailored BBR
(¬ß4.2.3) to compete fairly with flows at the bottleneck.
4.2.1 Wireless Bottleneck State. Here a PBE-CC mobile user esti-
mates the available cellular wireless capacity Cp (in units of bits
per subframe) as
Cp =
Rw,i ¬∑
Pa,i +
1
Ni
Pidle,i
(3)
where Ncell is the number of activated cells for this user, Pa,i is
the number of PRBs allocated for this user in the ith cell, Ni is the
number of mobile users in the ith cell, and Pidle,i represents the
number of idle PRBs in the ith cell:
Pidle,i = Pcell,i ‚àí Ni
j =1
j
a,i
P
(4)
(cid:18)
(cid:18)
Ncell
i =1
(cid:19)(cid:19)
j
a,i
where P
represents the allocated PRB for user j of the ith cell.
To smooth the estimation results, we average the calculated Rw,i,
Pidle,i and Pa,i from the most recent RTprop subframes (e.g., we
average the above parameters over the most recent 40 subframes if
the connection RTT is 40 ms).
To interpret estimated capacity Cp, we consider each component
of Eqn. 3. First, the wireless physical layer data rate Rw enables the
mobile user to track capacity variations caused by varying channel
quality. Second, the mobile user reacts to the appearance of new
users by tracking the number of PRBs allocated for itself (Pa). For
example, as shown in Figure 5, Pa for User 1 decreases when a
Figure 5: One mobile user tracks the number of PRBs allo-
cated for itself, for other mobile users and that are idle.
new user, i.e., User 2, starts receiving traffic. On detection of fewer
allocated PRBs, User 1‚Äôs sender lowers its send rate to match the
decreasing capacity estimated using Eqn. 3.
When idle PRBs Pidle appear in a cell for a connection that is
wirelessly bottlenecked, all PBE-CC clients immediately detect them
by checking the decoded control message, and inform their senders
to increase their rates to grab a fair-share portion of the idle PRBs,
i.e., Pidle/N . This may happen in several cases: first, idle PRBs
appear when a sender finishes a flow. As shown in the example
of Figure 5, after User 2‚Äôs flow finishes in subframe six, Users 1
and 3 immediately observe idle PRBs in subframe seven and then