### List Generation and Performance Analysis

Lists are generated using data from a 5-day window prior to the prediction window. For all blacklists, the number of hits decreases over time. The Highly Predictive Blacklist (HPB) maintains an advantage throughout the entire duration of the prediction window. This plot also indicates that blacklists need to be refreshed frequently, as there may be an almost 30% drop in hits when the HPB is more than a week old.

#### Hit-Number Medians for Different Training Windows

The right panel of Figure 13 plots the median hit numbers for four different HPBs. These HPBs are generated using a slightly different method compared to previous experiments. In earlier experiments, we produced the correlation matrix from a set of attack reports and then selected sources into HPBs based on their relevance.

In this experiment, we construct the correlation matrix using reports from training windows of 2, 5, 7, and 10 days. We then select sources that appear in the reports within the 5-day window immediately before the prediction (test) window, based on their relevance. This approach excludes sources that only appear in older reports, as their extended silence is considered a significant loss in relevance. The remainder of the test is conducted as in previous experiments, with hit counts obtained in the following 5-day prediction window.

The results show a slight increase in hit counts when moving from a 2-day training window to a 5-day training window. The hit counts remain roughly the same for the other training-window sizes, indicating that the correlation matrix can be quite stable over time for most contributors.

### Hit Rates of Different Blacklists

Figure 12: Hit Rates of HPB, Global Worst Offender List (GWOL), and Local Worst Offender List (LWOL) with Different Lengths

Although the hit rate for shorter lists is higher, the total number of hits is larger for longer lists. This holds true for all three types of blacklists, suggesting that longer lists include more entries that are not as relevant (wasted entries).

### Example Blacklisting Service

In mid-2007, we deployed an initial prototype implementation of the HPB system, providing a subset of the features described in this paper. This deployment was packaged as a free Internet blacklisting service for DShield log contributors [22,23]. HPB blacklists are constructed daily for all contributors, and each contributor can download her individual HPB through her DShield website account. To date, we have had a relatively small pool of HPB downloaders (approximately 70 users over the last 3 months). We now describe several aspects of fielding a practical and scalable implementation of an HPB system based on our initial deployment experiences. We present an assessment of the algorithm complexity, the DShield service implementation, and discuss some open questions raised from the open release of our service.

#### Algorithm Complexity

Because HPBs are constructed from a high-volume corpus of security logs, our system must process over 100 million log entries per day to cover the current 5-day training window. The bottleneck is the relevance ranking. Our complexity discussion focuses on the ranking algorithm, which has a minimum complexity of O(N(data)), where N(data) is the number of alerts in the data collection.

We denote by N(s) and N(v) the number of sources and the number of contributors to the repository, respectively. In practice, N(v) is in the thousands, while N(s) is in the tens of millions. We obtain W and bs by simple accounting. Constructing the adjacency matrix W requires the most work, resulting in O(N(v)^2) complexity. The most time-consuming step in the relevance estimation process is solving the linear equations in Equation 3. While bs is different for each source, the (I - W)^-1 part of the solution is the same for all sources. Therefore, it needs to be computed only once, requiring O(N(v)^3) time by brute force or O(N(v)^2.376) using more sophisticated methods [5].

Given that bs is sparse, the total time to obtain the ranking scores for all sources and all contributors is O(N(v) * N(data)). Assuming N(v)^2 is much smaller than N(data), the total complexity for relevance ranking is O(N(v) * N(data)). For a dataset with a billion records contributed by a thousand sensors, generating a thousand rankings requires only several trillion operations, which can be handled by modern computers. In our experiments, with N(data) in the high tens of millions and N(v) on the order of one thousand, it takes less than 30 minutes to generate all contributor blacklists on an Intel Xeon 3.6 GHz machine.

#### DShield Implementation

Deploying an HPB service through the DShield website is straightforward. DShield log contributors already have private web accounts to review their reports. However, to ease automatic retrieval of HPBs, users do not need to log in via the standard web account procedure. Instead, contributors can create account-specific hexadecimal tokens and append them to the HPB URL. This token remains unaffected even if the user's password changes, making it ideal for automated HPB retrieval scripts.

To ensure the integrity and confidentiality of an HPB, users can also retrieve the HPB via HTTPS. A detached PGP signature can be retrieved if HTTPS is not available or not considered sufficient proof of authenticity.

HPBs are distributed in a simple tab-delimited format. The first column identifies the network address, the second column provides the netmask, and additional columns provide more information about the respective offender, such as the name of the network and country of origin. Comments in the blocklist start with a # mark. A sample blocklist is shown in Figure 14.

#### Gaming the System

As we have implemented, tested, and advertised early versions of the HPB system, several open questions have been raised regarding the ability of adversaries to game the HPB system. Can an attacker contribute data to DShield to manipulate HPB production negatively? We consider several scenarios:

- **Can an attacker cause a consumer to incorporate an unsuspecting victim address into a third party’s HPB?**
  - An attacker A, who knows that consumer C is a DShield contributor and active HPB user, might try to cause address B to be inserted into C’s HPB. A could spoof attacks as address B, directing these attacks to other contributors highly correlated with A. Alternatively, A could report spoofed logs from his contributor IDs, aligning with C's logs. This is a possible threat, but similar attacks can be launched against GWOL and LWOL.

- **Can an attacker cause his own address to be excluded from a specific third-party HPB?**
  - It is very difficult for an attacker to guarantee that an address will not appear in a specific HPB. While A may cause artificial alignment between his and C’s logs, A cannot control what other addresses may also align with C. If B attacks other contributors aligned with C, B has the potential to enter C’s HPB.

- **Can an attacker fully prevent or poison all HPB production?**
  - Yes, data poisoning is a fundamental threat in volunteer contributor-based data centers. However, DShield incorporates countermeasures for issues like accidental flooding and sensor misconfiguration. A malicious contributor could attempt to artificially inflate the number of attacker or victim addresses, increasing the values of s or v. However, such highly anomalous volumes would likely allow us to identify and filter the contributor.

### Conclusion

In this paper, we introduced a new system to generate blacklists for contributors to a large-scale security-log sharing infrastructure. The system uses a link analysis method similar to Google’s PageRank and integrates substantive log pre-filtering and a severity metric. Experimenting with real DShield data, we demonstrated that our blacklists have higher attacker hit rates, better new attacker prediction quality, and long-term performance stability.

In April 2007, we released a highly predictive blacklist service at DShield.org. This service is a first experimental step toward high-quality blacklist generation and demonstrates the benefits of secure collaborative data sharing. As future work, we will continue to evolve the HPB blacklisting system as our experience grows through managing the blacklist service.

### Acknowledgments

This material is based upon work supported by the U.S. Army Research Office under the Cyber-TA Research Grant No. W911NF-06-1-0316.

### References

[1] ANAGNOSTAKIS, K. G., GREENWALD, M. B., IOANNIDIS, S., KEROMYTIS, A. D., AND LI, D. A cooperative immunization system for an untrusting Internet. In Proceedings of the 11th IEEE International Conference on Networks (ICON’03) (October 2003).

[2] BRIN, S., AND PAGE, L. The anatomy of a large-scale hypertextual Web search engine. Computer Networks and ISDN Systems 30, 1-7 (1998), 107–117.

[3] CAI, M., HWANG, K., KWOK, Y., SONG, S., AND CHEN, Y. Collaborative Internet worm containment. IEEE Security and Privacy Magazine 3, 3 (May/June 2005), 25–33.

[4] CHEN, Z., AND JI, C. Optimal worm-scanning method using vulnerable-host distributions. International Journal of Security and Networks (IJSN) Special Issue on Computer & Network Security 2, 1 (2007).

[5] COPPERSMITH, D., AND WINOGRAD, S. Matrix multiplication via arithmetic progressions. Journal of Symbolic Computation 9 (1990), 251–280.

[6] HUMPHRYS, M. The Internet in the 1980s. http://www.computing.dcu.ie/~humphrys/net.80s.html, 2007.

[7] INCORPORATED, G. List of blacklists. http://directory.google.com/Top/Computers/Internet/Abuse/Spam/Blacklist%s/, 2007.

[8] INCORPORATED, G. Live-feed anti-phishing blacklist. http://sb.google.com/safebrowsing/update?version=goog-black-url:1:1, 2007.

[9] JUNG, J., PAXSON, V., BERGER, A. W., AND BALAKRISHNAN, H. Fast portscan detection using sequential hypothesis testing. In IEEE Symposium on Security and Privacy 2004 (Oakland, CA, May 2004).

[10] KATTI, S., KRISHNAMURTHY, B., AND KATABI, D. Collaborating against common enemies. In Proceedings of the ACM SIGCOMM/USENIX Internet Measurement Conference (October 2005).

[11] KIM, H.-A., AND KARP, B. Autograph: Toward automated, distributed worm signature detection. In USENIX Security Symposium (2004), pp. 271–286.

[12] LOCASTO, M., PAREKH, J., KEROMYTIS, A., AND STOLFO, S. Towards collaborative security and P2P intrusion detection. In Proceedings of the 2005 IEEE Workshop on Information Assurance and Security (June 2005).

[13] M. GORI, AND PUCCI, A. Itemrank: A random-walk based scoring algorithm for recommender engines. In Proceedings of the International Joint Conference on Artificial Intelligence (January 2007).

[14] PORRAS, P., BRIESEMEISTER, L., SKINNER, K., LEVITT, K., ROWE, J., AND TING, Y. A hybrid quarantine defense. In Proceedings of the 2004 ACM Workshop on Rapid Malcode (WORM) (October 2004).

[15] RUOMING, P., YEGNESWARAN, V., BARFORD, P., PAXSON, V., AND PETERSON, L. Characteristics of internet background radiation. In Proceedings of ACM SIGCOMM/USENIX Internet Measurement Conference (October 2004).

[16] THOMAS, R. Bogon dotted decimal list v3.9. http://www.cymru.com/Documents/bogon-dd.hml, October 2007.

[17] ULLRICH, J. DShield global worst offender list. https://feeds.dshield.org/block.txt.

[18] VIXIE, P., AND RAND, D. Mail abuse prevention system (MAPS). http://www.mail-abuse.com, 1997.

[19] WISSNER-GROSS, A. D. Preparation of topical readings lists from the link structure of Wikipedia. In Proceedings of the IEEE International Conference on Advanced Learning Technology (July 2006).

[20] YEGNESWARAN, V., BARFORD, P., AND ULLRICH, J. Internet intrusions: global characteristics and prevalence. In Proceedings of ACM SIGMETRICS (June 2003).

[21] YEGNESWARAN, V., PORRAS, P., SAIDI, H., SHARIF, M., AND NARAYANAN, A. The Cyber-TA compendium honeynet page. http://www.cyber-ta.org/Honeynet.

[22] ZHANG, J. J., PORRAS, P., AND ULLRICH, J. The DSHIELD highly predictive blacklisting service. http://www.dshield.org/hpbinfo.html.

[23] ZHANG, J., PORRAS, P., AND ULLRICH, J. A new service for increasing the effectiveness of network address blacklists. In Proceedings of the 3rd Workshop of Steps to Reduce Unwanted Traffic on the Internet (June 2007).

[24] ZHANG, J., PORRAS, P., AND ULLRICH, J. Gaussian process learning for cyber-attack early warning. to appear in Proceedings of SIAM Conference on Data Mining (2008).