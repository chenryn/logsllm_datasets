第3章 蓝队常用的攻击手段
在实战过程中，蓝队专家根据实战攻防演练的任务特点逐渐总结
出一套成熟的做法：外网纵向突破重点寻找薄弱点，围绕薄弱点，利
用各种攻击手段实现突破；内网横向拓展以突破点为支点，利用各种
攻击手段在内网以点带面实现横向拓展，遍地开花。实战攻防演练
中，各种攻击手段的运用往往不是孤立的，而是相互交叉配合的，某
一渗透拓展步骤很难只通过一种手段实现，通常需要同时运用两种或
两种以上的手段才能成功。外网纵向突破和内网横向拓展使用的攻击
手段大多类似，区别只在于因为目标外网、内网安全防护特点不同而
侧重不同的攻击手段（见图3-1）。
总体来说，蓝队在攻防演练中常用的攻击手段有以下几类。
3.1 漏洞利用
漏洞是网络硬件、软件、协议的具体实现或操作系统安全策略上
存在的缺陷，漏洞利用是对攻击者利用上述安全缺陷实现未授权访
问、非法获取目标系统控制权或破坏系统的一系列恶意操作的统称。
漏洞分为0day漏洞和Nday漏洞。0day漏洞是指在产品开发者或供应商
未知的情况下被攻击者所掌握和利用的安全缺陷，0day漏洞没有可用
的补丁程序，所以具有更强的隐蔽性和杀伤力。Nday漏洞则是指在产
品漏洞信息已经公开的情况下，仍未对存在的漏洞采取安全补救措施
而导致的依旧存在的安全缺陷，Nday漏洞的存在依然会对目标网络具
有严重的安全威胁。在实战攻防演练中，漏洞利用是蓝队攻击最重要
的实现手段之一，通过漏洞利用，蓝队可以在目标外网实现快速突
破，在目标内网快速获取控制权限。攻防实战中蓝队常用的漏洞利用
类型有以下几类。
图3-1 某次实战攻防演练中各种手段的运用
3.1.1 SQL注入漏洞
SQL是操作数据库数据的结构化查询语言，网页的应用数据和后台
数据库中的数据进行交互时会采用SQL。SQL注入就是通过把SQL命令插
入Web表单提交或输入域名或页面请求的查询字符串，最终达到欺骗服
务器执行恶意SQL命令的目的。SQL注入漏洞是发生在应用程序的数据
库层的安全漏洞，是在设计应用程序时忽略了对输入字符串中夹带的
SQL命令的检查，数据库误将恶意SQL命令作为正常SQL命令运行而导致
的（见图3-2）。SQL注入漏洞被广泛用于获取目标Web系统的后台敏感
数据、修改网站数据或获取网站控制权。蓝队主要利用SQL注入漏洞实
现以下目的：
·获取后台数据库中存放的目标的隐私信息，并进一步利用这些
信息渗透拓展；
·对目标网站挂马，进一步有针对性地开展钓鱼攻击；
·获取后台应用系统的控制权限，进一步控制后台服务器。
图3-2 SQL注入检测万能语句
SQL注入漏洞多存在于用户目标官网、Web办公平台及网络应用等
之中。比如：Apache SkyWalking[1]SQL注入漏洞（CVE-2020-9483）
就是蓝队攻击中用到的一个典型的SQL注入漏洞。利用该漏洞可通过默
认未授权的GraphQL接口构造恶意请求，进而获取目标系统敏感数据以
用于进一步渗透。另一个典型的SQL注入漏洞——Django[2]SQL注入漏
洞（CVE-2021-35042）存在于CMS（内容管理系统）上。该漏洞是由于
对某函数中用户所提供的数据过滤不足导致的。攻击者可利用该漏洞
在未获授权的情况下，构造恶意数据执行SQL注入攻击，最终造成服务
器敏感信息泄露。
[1] Apache SkyWalking是一款开源的应用性能监控系统，主要针对微服
务、云原生和面向容器的分布式系统架构进行性能监控。
[2] Django是一个Web应用框架。
3.1.2 跨站漏洞
如果在程序设计时没有对用户提交的数据进行充分的合规性判断
和HTML编码处理，而直接把数据输出到浏览器客户端，用户就可以提
交一些特意构造的脚本代码或HTML标签代码。这些代码会在输出到浏
览器时被执行，从而导致跨站漏洞。利用跨站漏洞可在网站中插入任
意代码以隐蔽地运行网页木马、获取网站管理员的安全认证信息等
（见图3-3）。蓝队主要利用跨站漏洞实现以下目的：
·对目标网站植入恶意代码，有针对性地开展进一步攻击渗透；
·窃取网站管理员或访问用户的安全认证信息，进一步向个人主
机拓展；
·劫持用户会话，进一步获取网站用户隐私，包括账户、浏览历
史、IP地址等。
图3-3 两种典型的跨站攻击方式
跨站漏洞多存在于用户目标官网、外部Web办公平台等之中。比
如：DedeCMS[1]跨站请求伪造漏洞（CVE-2021-32073）存在
于/uploads/dede/search_keywords_main.php文件下，是系统对
GetKeywordList函数过滤不全导致的。攻击者可利用该漏洞将恶意请
求发送至Web管理器，从而导致远程代码执行。Apache Tomcat[2]跨站
脚本漏洞（CVE-2019-0221）是由于Apache Tomcat的某些Web应用程序
中JSP文件对用户转义处理不完全导致的，远程攻击者可以通过包含
“;”字符的特制URI请求执行跨站脚本攻击，向用户浏览器会话注入
并执行任意Web脚本或HTML代码。
[1] DedeCMS是一套基于PHP+MySQL的开源内容管理系统（CMS）。
[2] Apache Tomcat是一个流行的开放源码的JSP应用服务器程序。
3.1.3 文件上传或下载漏洞
一些网站或Web应用由于业务需求，往往需要提供文件上传或下载
功能，但若未对上传或下载的文件类型进行严格的验证和过滤，就容
易造成不受限制的文件类型上传或敏感文件下载，导致发现文件上传
或下载漏洞。利用文件上传或下载漏洞可上传恶意脚本文件并通过执
行脚本实现对目标应用的渗透控制，或获取目标的安全配置、用户口
令等敏感文件（见图3-4）。蓝队主要利用文件上传或下载漏洞实现以
下目的：
·向目标网站或应用上传脚本文件，通过脚本搜集关键信息或获
取目标控制权限；
·向目标网站或应用上传木马文件，开展水坑攻击。
图3-4 常见文件上传漏洞攻击实现
文件上传或下载漏洞多存在于用户目标官网的后台编辑器、网络
业务应用、OA办公系统等之中。比如：某NC系统任意文件上传漏洞的
成因在于上传文件处未作类型限制，未经身份验证的攻击者可通过向
目标系统发送特制数据包来利用此漏洞，在目标系统上传任意文件，
执行命令；KindEditor[1]任意文件上传漏洞形成的原因是后
台/php/upload_json.php文件不会清理用户的输入或者检查用户是否
将任意文件上传到系统，利用该漏洞，攻击者可通过构造一个恶意的
HTML文件来实现跳转、钓鱼等。
[1] KindEditor是一个开源的HTML可视化编辑器，兼容IE、Firefox、
Chrome、Safari、Opera等主流浏览器。
3.1.4 命令执行漏洞
命令执行漏洞是在Web应用、网络设备、业务系统上由于代码过滤
不严格导致用户提交的数据被解析执行而造成的漏洞，其形成的原因
是在目标应用或设备开发时对执行函数没有过滤，对用户输入的命令
安全监测不足。命令执行漏洞可以分为系统命令执行和脚本（PHP、
JSP等）代码执行两类，分别通过传入系统命令和脚本代码实现。利用
命令执行漏洞可通过浏览器或其他辅助程序提交并执行恶意代码，如
GitLab远程命令执行漏洞（见图3-5）。蓝队主要利用命令执行漏洞实
现以下目的：
·通过命令执行，非法获取目标的敏感信息，比如用户口令、安
全配置等；
·执行任意系统命令，比如添加账户操作、非法获取控制权；
·通过执行恶意代码植入木马，实现水坑攻击，以进一步拓展。
图3-5 影响非常广泛的GitLab远程命令执行漏洞（CVE-2021-22205）
命令执行漏洞多存在于各种Web组件、网络应用之中，如Web容
器、Web框架、CMS软件、安全组件、OA系统等。比如：vCenter远程命
令执行漏洞（CVE-2021-21972）是vSphere Client（HTML5）在
vCenter Server插件中存在的一个远程执行代码漏洞，未经授权的攻
击者可以通过开放443端口的服务器向vCenter Server发送精心构造的
请求，从而在服务器上写入Webshell，最终造成远程任意代码执行；
微软RDP远程代码执行漏洞（CVE-2019-0708）是一个RDP服务远程代码
执行漏洞，未经认证的恶意攻击者通过向目标主机RDP服务所在端口发
送精心构造的请求，即可在目标主机上执行任意代码。
3.1.5 敏感信息泄露漏洞
敏感信息泄露漏洞是由于代码开发、程序设计不当或后台配置疏
漏，导致不应该被前端用户看到的数据信息被轻易访问到的安全缺
陷。敏感信息泄露漏洞可能导致泄露的信息包括：后台目录及目录下
文件列表，后台操作系统、应用部署包、中间件、开发语言的版本或
其他信息，后台的登录地址、内网接口信息、数据库文件，甚至账户
口令信息等。这些敏感信息一旦泄露，就有可能会被攻击者用来寻找
更多的攻击途径和方法。蓝队主要利用敏感信息泄露漏洞实现以下目
的：
·对敏感目录文件进行操作，读取后台服务器上的任意文件，从
中搜集有价值的信息，为后续渗透积累条件；
·获取后台应用部署包、中间件或系统平台的敏感信息，进一步
利用它们控制后台服务器；
·直接利用漏洞获取后台服务器认证数据库、账户口令等重要信
息，直接用于仿冒接入。
敏感信息泄露漏洞多存在于各类Web平台、网络代理框架与网络业
务应用。比如：VMware敏感信息泄露漏洞（CVE-2020-3952）是一个与
目录服务相关的信息泄露漏洞，产生原因是VMware Directory
Service（vmdir）组件在LDAP处理时检查失效和存在安全设计缺陷。
攻击者可以利用该漏洞提取到目标系统的高度敏感信息，用于破坏
vCenter Server或其他依赖vmdir进行身份验证的服务，并进一步实现
对整个vSphere部署的远程接管（见图3-6）。又如：Jetty[1]WEB-INF
敏感信息泄露漏洞（CVE-2021-28164）是由于对“.”字符编码规范配
置不当造成在Servlet实现中可以通过%2e绕过安全限制导致的漏洞。
攻击者可以利用该漏洞下载WEB-INF目录下的任意文件，包括一些重要
的安全配置信息。
图3-6 VMware官方公布的CVE-2020-3952漏洞信息
[1] Jetty是一个基于Java的Web容器，为JSP和Servlet提供网络运行环境。