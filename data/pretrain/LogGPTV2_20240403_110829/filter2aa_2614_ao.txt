第2篇 设计篇
第6章 API安全设计基础
前面5章介绍了API安全含义、API安全的常见问题、安全问题的表
现形式以及如何对API进行渗透测试。通过对这些内容的了解，读者掌
握了一些API安全的基本知识，同时也了解到很多API安全问题产生的
根源是缺少更好的API安全设计。从这一章开始，将为读者介绍API安
全设计的相关内容，通过详细的API安全设计及实战案例，讨论安全交
互场景设计，提升API自身的安全性。
6.1 API安全设计原则
接触过安全架构设计或学习过安全架构设计相关知识的读者可能在
不同的书籍或安全会议上听说过许许多多的安全设计原则，比如公开原
则、最小特权、默认不信任等。实际情况是，过多的安全设计原则往往
不利于安全设计人员做出正确的选择，尤其是安全专业知识储备不够的
安全设计人员。这里提到的安全设计原则只包含两条，分别是53A原则
和纵深防御原则。
6.1.1 5A原则
5A原则是由5个首字母为A的单词构成的，分别是
Authentication（身份认证）、Authorization（授权）、Access
Control（访问控制）、Auditable（可审计性）、Asset Protection（资
产保护），其含义是当安全设计人员在做安全设计时，需要从这5个方
面考量安全设计的合理性。如果某一个方面缺失，则在安全设计上是不
全面的。
1.身份认证
身份认证的目的是为了知道谁在与API服务进行通信，是否是API
服务允许的客户端请求。在普通的Web应用程序中，通常会提供注册、
登录的功能，没有注册、登录的用户无法访问某些系统功能。对于API
服务来说，也是一样的道理。很多场景下的API服务，是需要知道谁在
请求，是否允许请求，以保障API接口调用的安全性。
2.授权
授权通常发生在身份认证之后，身份认证是解决“你是谁”的问题，
即对服务来说，谁在请求我。而授权解决的是“你能访问什么”的问题，
即通过了身份认证之后，访问者被授予可以访问哪些API。某些API只
有特定的角色才可以访问，比如只有内网的IP才可以调用某些服务、只
有管理员用户才可以调用删除用户的API。赋予某个客户端调用权限的
过程，通常为授权操作的过程。
3.访问控制
访问控制通常发生在授权之后，很多情况下，对于某个角色的权限
设置正确，但访问控制做的不一定正确，这也是存在很多越权操作的原
因。访问控制是对授权后的客户端访问时的正确性验证。读者可以设想
一下，一个普通的Web应用系统，用户通常关联角色，角色再对应关联
菜单，授权就是用户→角色→菜单这三个实体对象间建立相互关系的过
程。如果这个相互关系设置正确，用户是不具备访问这个功能菜单的权
限的，但如果用户访问这个功能菜单时，因访问控制没有限制，仍可以
访问，这就是访问控制的缺陷。对应于API服务，也是如此，不具备访
问权限的API却可以直接调用，问题就出在访问控制上。
4.可审计性
可审计性是所有应用程序很重要的一个特性，只是很多情况下，系
统管理人员过多的关注于功能实现而忽略了可审计的功能。审计的目的
对于API来说，主要是为了记录接口调用的关键信息，以便通过审计手
段及时发现问题，并在发生问题时通过审计日志进行溯源，找出问题的
发生点。不具备可审计性的API当接口发生问题时将是两眼一抹黑，望
API兴叹。
5.资产保护
API安全中的资产保护主要是指对API接口自身的保护，比如限
速、限流，防止恶意调用，除此之外，API接口传输的数据也是需要保
护的一个重点内容。在现代的API服务中，接口间相互传递的数据存在
很多敏感信息，比如个人信息相关的手机号码、身份证号，业务相关的
银行账号、资金、密码等。这些信息资产，在API安全中是特别需要保
护的内容，这也是安全设计人员在API安全设计中需要考虑的一个方
面。
6.1.2 纵深防御原则
纵深防御这个词来源于军事术语，是指在前方到后方之间，构建多
道防线，达到整体防御的目的。在网络安全领域，纵深防御通常是指不
能只依赖单一安全机制，建立多种安全机制，互相支撑以达到相对安全
的目的。可以通过一个生活中的例子来理解纵深防御原则的基本含义。
比如为了保障住户家中现金的安全，第一道防线是小区的保安，在人员
进入小区时鉴别；如果保安被欺骗了，还有楼道口的防盗门；若楼道口
的防盗门也被破解了，则住房室外的大门是第三道防线。小区保安、楼
道口防盗门、住房室外的大门之间的防护，就构成了纵深防御。
在API安全设计中，可以在不同层面使用不同的安全技术，来达到
纵深防御的目的。比如根据API业务属性的不同，划分为公共型API、
私有型API，再根据粒度粗细、业务需求、服务数量、权限划分，采用
不同的身份认证和授权技术实现。典型的场景如网银的转账接口，登录
网银时需要用户身份认证，但此认证通常会话时间比较长，使用此认证
的信息也可以访问多个不同的功能，但调用安全级别比较高的转账API
时，仍需要再次输入密码。网银登录时的身份认证和转账时的身份认
证，相互之间就构成了纵深防御原则。
5A原则重点强调每一层安全架构设计的合理性，是横向的安全防
护，强调的是宽度；纵深防御是对同一问题从不同的层次、不同的角
度做安全防护，是纵向的安全防护，强调的是深度。这两个原则相结
合，共同将安全设计构成一个有机的防护整体。
6.2 API安全关键技术
在讨论API安全关键技术之前，先来了解一下API安全技术栈，从
整体上对API安全可能涉及的安全机制和安全技术有大概的印象。
6.2.1 API安全技术栈
API技术的发展从最初的类库型API发展到现在的Web API，在信息
系统中，与内外的相互关系也发生了天翻地覆的变化。如今，即使中小
规模的互联网企业，在日常办公和开展业务的过程中，所需要使用的不
同智能化设备、不同服务能力，也可能会涉及桌面客户端形式的API接
入、移动设备的接入、智能设备的接入、云端接入等。从南北向视角横
切出来的端到端API通信关键技术示意图如图6-1所示。
●图6-1 端到端API通信关键技术示意图
从图6-1中可以看到，当用户通过浏览器或移动终端调用API访问后
端服务时，除了通信链路使用HTTPS之外，由前端向后端依次通过速率
控制、身份鉴别、授权访问控制、消息保护、审计监控等安全机制。虽
然与实际应用中各个安全机制杂糅在一起使用的情况不相符，但基本能
表述清楚其中涉及的安全机制，把这些安全机制对应到具体的安全技术
上，统称为API安全技术栈，如图6-2所示。
●图6-2 API安全技术栈
图6-2对常用的API安全技术进行了总结，最上面的WAF、API网关
是API安全的基础套件，为API安全提供综合的安全支撑能力；认证与
授权以OpenID Connect套件、OAuth 2.0套件为代表，提供API的身份认
证和鉴权解决方案；而审计套件、JSON套件、XML套件为API的消息
保护和安全审计提供技术支持。
6.2.2 身份认证技术
身份认证是API安全的基础，在互联网上，网络环境的复杂多样导
致API的存在状态也是多种多样的。要确保API使用的可信可控，使用
身份认证技术是最简单、高效的选择。
第一章从API使用者的角度，将现代API划分为用户参与型API、程
序调用型API和IoT设备型API三种类型。与此类似的，在身份认证技术
的使用中，基于API使用者身份的不同，将API身份认证技术划分为基
于用户身份的认证技术和基于应用程序身份的认证技术。
■ 基于用户身份的认证技术是指API的使用者为某个具体的自然人
用户，其身份认证过程依赖于用户身份的认证过程，通过确定用户身份
来确认API使用者的可靠性。
■ 
基于应用程序身份的认证技术是指API的使用者不是自然人用
户，而是另一个API或应用程序。其身份认证过程依赖于对API或应用
程序身份的认证来确认使用者的可靠性。
这两种认证方式，大体相对应三种API类型，用户参与型API对应
基于用户身份的认证技术，而程序调用型API和IoT设备型API对应于基
于应用程序身份的认证技术。
在基于用户身份的认证技术中，API的安全设计与其他Web应用并
无差别，其认证方式主要有用户名/密码认证、动态口令、数字证书认
证、生物特征认证等。随着互联网的发展，人们对安全性的要求越来越
高，这些认证方式已经很少单独使用，目前使用最多的是双因子认证
（2FA）或多因子认证（MFA），即将两种或多种认证方式组合起来使
用，以提高应用程序和API的安全性。常见的组合有用户名/密码+短信
挑战码、用户名/密码+动态令牌、用户名/密码+人脸识别、人脸识别
+短信挑战码等。这类技术下的业务场景中，认证通常融入单点登录
SSO系统中，作为整个流程的一个环节。开源组件CAS的单点登录实现
机制如图6-3所示。
图6-3中，步骤4中对用户身份的认证涉及的技术即为上文中提及的
各种身份认证技术，比如身份认证服务调用LDAP来进行用户名和密码
的验证或调用数据库来进行用户名和密码的验证、身份认证服务调用
OTP服务下发一次性令牌等。
在基于应用程序身份的认证技术中，是将应用程序客户端身份认证
作为认证的主体，来确认应用程序的身份，常用的认证方式有HTTP
Basic基本认证、Token认证、数字证书认证等。这类技术的解决方案
中，以OpenID 
Connect为代表，将身份认证融入授权码、简易授权
码、客户端凭据等授权流程中，完成不同场景下的API身份认证，如图
6-4所示。
●图6-3 CAS单点登录流程
●图6-4 客户端应用程序认证技术示意图
在OpenID Connect标准规范中，对认证方式的定义既包含基于用户
身份的认证技术也包含基于应用程序身份的认证技术，其对应的开源产
品Connect2id 
server中支持面向用户身份的可插拔式的多种集成认证
方式，比如LDAP认证、OTP令牌认证、X.509证书认证、生物特征认
证等；也支持面向客户端的HTTP 
Basic基本认证、JWT令牌认证、
X.509证书认证以及客户端注册身份的联邦认证。
在API的应用和管理过程中，添加身份认证对于维护整个应用程序
的安全、稳定有着重要的意义。安全的基础是信任，身份认证技术是对
于API被使用过程中使用者身份的第一层安全保障，通过身份确认有利
于建立以身份为中心的对象关系，比如调用的对象、调用的时间、调用
的频率、调用的来源等；通过使用者身份反查审计日志，追溯整个API
调用链等。使用了身份认证技术的API，更有利于对API的统一管理、
运营、维护，提高API日常管理的效率。
6.2.3 授权与访问控制技术
在API安全中，当技术人员在讨论API授权时，其实是将授权与访
问控制两件事情放在一起讨论。身份认证技术是解决API使用者的身份
问题，授权是解决基于当前的API使用者身份下，可以拥有什么样的权
限，访问哪些资源。与传统的Web应用程序不同，API的授权可能发生
在单一的应用程序中，但更多的可能发生在多个相互独立的应用程序之
间。
API的授权与访问控制技术可以归为两大类，一是基于使用者身份