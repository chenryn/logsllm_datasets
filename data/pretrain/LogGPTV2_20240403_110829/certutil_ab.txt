Where:
backupdirectory is the directory to store the backed up database files.
incremental performs an incremental backup only (default is full backup).
keeplog preserves the database log files (default is to truncate log files).
[-f] [-config Machine\CAName]
-backupkey
Backs up the Active Directory Certificate Services certificate and private key.
certutil [options] -backupkey backupdirectory
Where:
[-f] [-config Machine\CAName] [-p password] [-t timeout]
-restore
Restores the Active Directory Certificate Services.
certutil [options] -restore backupdirectory
Where:
[-f] [-config Machine\CAName] [-p password]
-restoredb
Restores the Active Directory Certificate Services database.
certutil [options] -restoredb backupdirectory
Where:
[-f] [-config Machine\CAName]
-restorekey
Restores the Active Directory Certificate Services certificate and private key.
certutil [options] -restorekey backupdirectory | pfxfile
Where:
[-f] [-config Machine\CAName] [-p password]
-importpfx
Import the certificate and private key. For more info, see the -store parameter in this article.
-store
certutil [options] -importpfx [certificatestorename] pfxfile [modifiers]
Where:
certificatestorename is the name of the certificate store.
modifiers are the comma-separated list, which can include one or more of the following:
AT_SIGNATURE - Changes the keyspec to signature
AT_KEYEXCHANGE - Changes the keyspec to key exchange
NoExport - Makes the private key non-exportable
NoCert - Doesn't import the certificate
NoChain - Doesn't import the certificate chain
NoRoot - Doesn't import the root certificate
Protect - Protects keys by using a password
NoProtect - Doesn't password protect keys by using a password
[-f] [-user] [-p password] [-csp provider]
Remarks
-dynamicfilelist
Displays a dynamic file list.
certutil [options] -dynamicfilelist
[-config Machine\CAName]
-databaselocations
Displays database locations.
certutil [options] -databaselocations
[-config Machine\CAName]
-hashfile
Generates and displays a cryptographic hash over a file.
certutil [options] -hashfile infile [hashalgorithm]
-store
Dumps the certificate store.
certutil [options] -store [certificatestorename [certID [outputfile]]]
Where:
certificatestorename is the certificate store name. For example:
My, CA (default), Root,
My, CA (default), Root,
ldap:///CN=Certification Authorities,CN=Public Key Services,CN=Services,CN=Configuration,DC=cpandl,DC=com?cACertificate?one?objectClass=certificationAuthority (View Root Certificates)
ldap:///CN=Certification Authorities,CN=Public Key Services,CN=Services,CN=Configuration,DC=cpandl,DC=com?cACertificate?one?objectClass=certificationAuthority (View Root Certificates)
ldap:///CN=CAName,CN=Certification Authorities,CN=Public Key Services,CN=Services,CN=Configuration,DC=cpandl,DC=com?cACertificate?base?objectClass=certificationAuthority (Modify Root Certificates)
ldap:///CN=CAName,CN=Certification Authorities,CN=Public Key Services,CN=Services,CN=Configuration,DC=cpandl,DC=com?cACertificate?base?objectClass=certificationAuthority (Modify Root Certificates)
ldap:///CN=CAName,CN=MachineName,CN=CDP,CN=Public Key Services,CN=Services,CN=Configuration,DC=cpandl,DC=com?certificateRevocationList?base?objectClass=cRLDistributionPoint (View CRLs)
ldap:///CN=CAName,CN=MachineName,CN=CDP,CN=Public Key Services,CN=Services,CN=Configuration,DC=cpandl,DC=com?certificateRevocationList?base?objectClass=cRLDistributionPoint (View CRLs)
ldap:///CN=NTAuthCertificates,CN=Public Key Services,CN=Services,CN=Configuration,DC=cpandl,DC=com?cACertificate?base?objectClass=certificationAuthority (Enterprise CA Certificates)
ldap:///CN=NTAuthCertificates,CN=Public Key Services,CN=Services,CN=Configuration,DC=cpandl,DC=com?cACertificate?base?objectClass=certificationAuthority (Enterprise CA Certificates)
ldap: (AD computer object certificates)
ldap: (AD computer object certificates)
-user ldap: (AD user object certificates)
-user ldap: (AD user object certificates)
certID is the certificate or CRL match token. This can be a serial number, a SHA-1 certificate, CRL, CTL or public key hash, a numeric cert index (0, 1, and so on), a numeric CRL index (.0, .1, and so on), a numeric CTL index (..0, ..1, and so on), a public key, signature or extension ObjectId, a certificate subject Common Name, an e-mail address, UPN or DNS name, a key container name or CSP name, a template name or ObjectId, an EKU or Application Policies ObjectId, or a CRL issuer Common Name. Many of these may result in multiple matches.
outputfile is the file used to save the matching certificates.
[-f] [-user] [-enterprise] [-service] [-grouppolicy] [-silent] [-split] [-dc DCName]
Options
The -user option accesses a user store instead of a machine store.
-user
The -enterprise option accesses a machine enterprise store.
-enterprise
The -service option accesses a machine service store.
-service
The -grouppolicy option accesses a machine group policy store.
-grouppolicy
For example:
-enterprise NTAuth
-enterprise NTAuth
-enterprise Root 37
-enterprise Root 37
-user My 26e0aaaf000000000004
-user My 26e0aaaf000000000004
CA .11
CA .11
-addstore
Adds a certificate to the store. For more info, see the -store parameter in this article.
-store
certutil [options] -addstore certificatestorename infile
Where:
certificatestorename is the certificate store name.
infile is the certificate or CRL file you want to add to store.
[-f] [-user] [-enterprise] [-grouppolicy] [-dc DCName]
-delstore
Deletes a certificate from the store. For more info, see the -store parameter in this article.
-store
certutil [options] -delstore certificatestorename certID
Where:
certificatestorename is the certificate store name.
certID is the certificate or CRL match token.
[-enterprise] [-user] [-grouppolicy] [-dc DCName]
-verifystore
Verifies a certificate in the store. For more info, see the -store parameter in this article.
-store
certutil [options] -verifystore certificatestorename [certID]
Where:
certificatestorename is the certificate store name.
certID is the certificate or CRL match token.
[-enterprise] [-user] [-grouppolicy] [-silent] [-split] [-dc DCName] [-t timeout]
-repairstore
Repairs a key association or update certificate properties or the key security descriptor. For more info, see the -store parameter in this article.
-store
certutil [options] -repairstore certificatestorename certIDlist [propertyinffile | SDDLsecuritydescriptor]
Where:
certificatestorename is the certificate store name.
certIDlist is the comma-separated list of certificate or CRL match tokens. For more info, see the -store certID description in this article.
-store certID
propertyinffile is the INF file containing external properties, including:
[Properties]
    19 = Empty ; Add archived property, OR:
    19 =       ; Remove archived property
    11 = {text}Friendly Name ; Add friendly name property
    127 = {hex} ; Add custom hexadecimal property
        _continue_ = 00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f
        _continue_ = 10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f
    2 = {text} ; Add Key Provider Information property
      _continue_ = Container=Container Name&
      _continue_ = Provider=Microsoft Strong Cryptographic Provider&
      _continue_ = ProviderType=1&
      _continue_ = Flags=0&
      _continue_ = KeySpec=2
    9 = {text} ; Add Enhanced Key Usage property
      _continue_ = 1.3.6.1.5.5.7.3.2,
      _continue_ = 1.3.6.1.5.5.7.3.1,
[-f] [-enterprise] [-user] [-grouppolicy] [-silent] [-split] [-csp provider]
-viewstore
Dumps the certificates store. For more info, see the -store parameter in this article.
-store
certutil [options] -viewstore [certificatestorename [certID [outputfile]]]
Where:
certificatestorename is the certificate store name.
certID is the certificate or CRL match token.
outputfile is the file used to save the matching certificates.
[-f] [-user] [-enterprise] [-service] [-grouppolicy] [-dc DCName]
Options
The -user option accesses a user store instead of a machine store.
-user
The -enterprise option accesses a machine enterprise store.
-enterprise
The -service option accesses a machine service store.
-service
The -grouppolicy option accesses a machine group policy store.
-grouppolicy
For example:
-enterprise NTAuth
-enterprise NTAuth
-enterprise Root 37
-enterprise Root 37
-user My 26e0aaaf000000000004
-user My 26e0aaaf000000000004
CA .11
CA .11
-viewdelstore
Deletes a certificate from the store.
certutil [options] -viewdelstore [certificatestorename [certID [outputfile]]]
Where:
certificatestorename is the certificate store name.
certID is the certificate or CRL match token.
outputfile is the file used to save the matching certificates.
[-f] [-user] [-enterprise] [-service] [-grouppolicy] [-dc DCName]
Options
The -user option accesses a user store instead of a machine store.
-user
The -enterprise option accesses a machine enterprise store.
-enterprise
The -service option accesses a machine service store.
-service
The -grouppolicy option accesses a machine group policy store.
-grouppolicy
For example:
-enterprise NTAuth
-enterprise NTAuth
-enterprise Root 37
-enterprise Root 37
-user My 26e0aaaf000000000004
-user My 26e0aaaf000000000004
CA .11
CA .11
-dspublish
Publishes a certificate or certificate revocation list (CRL) to Active Directory.
certutil [options] -dspublish certfile [NTAuthCA | RootCA | SubCA | CrossCA | KRA | User | Machine]
certutil [options] -dspublish CRLfile [DSCDPContainer [DSCDPCN]]
Where:
certfile is the name of the certificate file to publish.
NTAuthCA publishes the certificate to the DS Enterprise store.
RootCA publishes the certificate to the DS Trusted Root store.
SubCA publishes the CA certificate to the DS CA object.
CrossCA publishes the cross-certificate to the DS CA object.
KRA publishes the certificate to the DS Key Recovery Agent object.
User publishes the certificate to the User DS object.
Machine publishes the certificate to the Machine DS object.
CRLfile is the name of the CRL file to publish.
DSCDPContainer is the DS CDP container CN, usually the CA machine name.
DSCDPCN is the DS CDP object CN, usually based on the sanitized CA short name and key index.
Use -f to create a new DS object.
-f
[-f] [-user] [-dc DCName]
-adtemplate
Displays Active Directory templates.
certutil [options] -adtemplate [template]
[-f] [-user] [-ut] [-mt] [-dc DCName]
-template
Displays the certificate templates.
certutil [options] -template [template]
[-f] [-user] [-silent] [-policyserver URLorID] [-anonymous] [-kerberos] [-clientcertificate clientcertID] [-username username] [-p password]
-templatecas
Displays the certification authorities (CAs) for a certificate template.
certutil [options] -templatecas template
[-f] [-user] [-dc DCName]
-catemplates
Displays templates for the Certificate Authority.
certutil [options] -catemplates [template]
[-f] [-user] [-ut] [-mt] [-config Machine\CAName] [-dc DCName]
-setcasites
Manages site names, including setting, verifying, and deleting Certificate Authority site names
certutil [options] -setcasites [set] [sitename]
certutil [options] -setcasites verify [sitename]
certutil [options] -setcasites delete
Where:
[-f] [-config Machine\CAName] [-dc DCName]
Remarks
The -config option targets a single Certificate Authority (Default is all CAs).
-config
The -f option can be used to override validation errors for the specified sitename or to delete all CA sitenames.
-f
Note
For more information about configuring CAs for Active Directory Domain Services (AD DS) site awareness, see AD DS Site Awareness for AD CS and PKI clients.
-enrollmentserverURL
Displays, adds, or deletes enrollment server URLs associated with a CA.
certutil [options] -enrollmentServerURL [URL authenticationtype [priority] [modifiers]]
certutil [options] -enrollmentserverURL URL delete
Where:
authenticationtype specifies one of the following client authentication methods, while adding a URL:
kerberos - Use Kerberos SSL credentials.
username - Use a named account for SSL credentials.
clientcertificate: - Use X.509 Certificate SSL credentials.
anonymous - Use anonymous SSL credentials.
delete deletes the specified URL associated with the CA.
priority defaults to 1 if not specified when adding a URL.
1
modifiers is a comma-separated list, which includes one or more of the following:
allowrenewalsonly - Only renewal requests can be submitted to this CA via this URL.
allowkeybasedrenewal - Allows use of a certificate that has no associated account in the AD. This applies only with clientcertificate and allowrenewalsonly Mode
[-config Machine\CAName] [-dc DCName]
-adca
Displays Active Directory Certificate Authorities.
certutil [options] -adca [CAName]
[-f] [-split] [-dc DCName]
-ca
Displays enrollment policy Certificate Authorities.
certutil [options] -CA [CAName | templatename]
[-f] [-user] [-silent] [-split] [-policyserver URLorID] [-anonymous] [-kerberos] [-clientcertificate clientcertID] [-username username] [-p password]
-policy
Displays the enrollment policy.
[-f] [-user] [-silent] [-split] [-policyserver URLorID] [-anonymous] [-kerberos] [-clientcertificate clientcertID] [-username username] [-p password]
-policycache
Displays or deletes enrollment policy cache entries.
certutil [options] -policycache [delete]
Where:
delete deletes the policy server cache entries.
-f deletes all cache entries
[-f] [-user] [-policyserver URLorID]
-credstore
Displays, adds, or deletes Credential Store entries.
certutil [options] -credstore [URL]
certutil [options] -credstore URL add
certutil [options] -credstore URL delete
Where:
URL is the target URL. You can also use * to match all entries or https://machine* to match a URL prefix.
*
https://machine*
add adds a credential store entry. Using this option also requires the use of SSL credentials.
delete deletes credential store entries.
-f overwrites a single entry or deletes multiple entries.
[-f] [-user] [-silent] [-anonymous] [-kerberos] [-clientcertificate clientcertID] [-username username] [-p password]
-installdefaulttemplates
Installs default certificate templates.
certutil [options] -installdefaulttemplates