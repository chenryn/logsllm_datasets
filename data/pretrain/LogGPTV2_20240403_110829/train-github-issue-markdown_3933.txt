 **Describe the bug**
This appears to be the core issue behind google/model-viewer#2915
It seems that something about a recent materials change has caused shader
compilation on my PC to take ~10x(!) longer than it used to. If I were to
guess at why I'd say that it's probably the DirectX shader compiler hitting a
pathological case that wasn't there before and trying to do an insane loop
unroll or something of that nature.
**To Reproduce**
Steps to reproduce the behavior:
  1. git checkout r132
  2. Open examples/webgl_animation_keyframes.html
  3. Observe load time
  4. git checkout r133
  5. Refresh examples/webgl_animation_keyframes.html
  6. Observe (much longer) load time
With r132 I get the following recording from the performance tab in Chrome dev
tools (though it's worth noting the same regression is also observable when
using Firefox):
![Screenshot 2021-10-29 113147](https://user-
images.githubusercontent.com/805273/139484874-de26dba4-16ab-4794-bd41-9c9b328d0201.png)
You can see that the largest block of work on the main thread takes ~500ms. It
bottoms out at a bunch of getProgramInfoLog calls and a couple of texImage2D
calls that all take about 20-50ms.
With r133 the recording looks significantly different. There are multiple
calls to getProgramInfoLog that take ~150ms each and one particularly long one
that takes 3+ seconds! In total, the block of work that represents to model's
upload to the GPU takes nearly 5 seconds to complete, a 10x increase between
versions (and consistent with what was seeing.)
![Screenshot 2021-10-29 113654](https://user-
images.githubusercontent.com/805273/139485848-3c228c54-2038-4cc2-bf63-b5834814e413.png)
**Platform:**
  * Device: Desktop, Intel Core i7-10700K, Nvidia GTX 1660 Super
  * OS: Windows 11
  * Browser: Chrome Canary 97.0.4685.2, Firefox Nightly 95.0a1
  * Three.js version: r133