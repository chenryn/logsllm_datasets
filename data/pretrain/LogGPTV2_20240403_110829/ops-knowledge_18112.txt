User: How to use Ansible automation tool to manage configuration files of multiple Linux servers in batches?
Assistant: To use the Ansible automation tool to manage configuration files of multiple Linux servers in batches, follow the steps below: 1. Install the Ansible automation tool First, you need to install the Ansible automation tool. In the Linux system, it can be installed through the package management tool. For example, in the Ubuntu system, the following command can be used to install: ``` sudo apt-get update sudo apt-get install ansible ``` 2. Create an Ansible configuration file Create an Ansible configuration file, Specify the list of servers to be managed, and information such as the user name and password of each server. You can create the ansible.cfg file in the /etc/ansible directory and write the following content: ``` [defaults] inventory = /etc/ansible/hosts remote_user = username #password ask_pass = True ``` Then create the hosts file, Specify a list of servers to manage, for example: ``` [webservers] server1 ansible_host=192.168.1.101 ansible_user=username ansible_ssh_pass=password server2 ansible_host=192.168.1.102 ansible_user=username ansible_ssh_pass=password ``` 3. Write Ans ible Playbook Write Ansible Playbook , which describes the configuration file for the server to be managed. You can create a playbook.yml file in the /etc/ansible directory and write the following content: ``` - hosts: webservers tasks: - name: configuration file 1 template: src: template1.j2 dest: /etc/config1.conf - name: configuration file 2 template: src: template2.j2 dest: /etc/config2.conf ``` In the above example, the local configuration file templates (template1.j2 and template2.j2) are copied to the target server through the template module In the /etc directory of , generate configuration files named config1.conf and config2.conf. 4. Execute Ansible Playbook Use the ansible-playbook command to execute Ansible Playbook to manage configuration files of multiple Linux servers in batches. For example: ``` ansible-playbook playbook.yml ``` After execution, Ansible will automatically log in to all servers and configure configuration files according to the tasks in the Playbook. If ask_pass is specified as True, Ansible will prompt for a password at execution time. If you do not want to enter a password, you can configure the password as plain text or use other authentication methods, such as SSH keys.