K+
B
These two methods di(cid:11)er in their explicit guesses. Clearly,
the one with the shorter binary length is easier to be guessed.
′
′
′
K+
B
Indeed, (strong) veri(cid:12)ability implies the ability to guess.
Nonetheless, we claim that this notion may fail to fully cap-
ture all possible guesses. Here’s an example to show why.
Example 3. Let T = {NA,{NA · P}
} denotes the at-
tacker’s knowledge. Suppose that the attacker wants to guess
the value of P , say P
. Note that the attacker does not know
K
B . It is not hard to see that for all u, v such that T ∪{x} ⊢
−
{u, v} we have uσ =Edy vσ i(cid:11) u =Edy v. So, u[P
/x] =Edy
′
v[P
=Edy P does not
necessarily need to be true, using the de(cid:12)nition of recogniz-
ability we know T ̸(cid:3)
P . In other words, P is not strongly
veri(cid:12)able by T under Edy.
/x] i(cid:11) u[P/x] =Edy v[P/x]. Since P
Now, we suppose that the attacker (cid:12)rst tries to guess K
−
B .
−
B /x]. Towards a contradiction, suppose that
Let σ0 = [K
σ ≈Edy ;T∪{x} σ0 and σ ̸=Edy σ0. Let u =s fst(dec({NA ·
P}
, x)) and v =s NA. Clearly, T ∪ {x} ⊢ {u, v} and
uσ0 =E vσ0. By the de(cid:12)nition of operational equivalence, we
get uσ =E vσ. That is, fst(dec({NA·P}
, x))σ =Edy NA.
So, σ =Edy σ0, a contradiction. Therefore, σ ≈Edy ;T∪{x} σ0
−
implies σ =Edy σ0 and thus T (cid:3)Edy K
B . Then, with the
correct guess of K
−
B , the attacker can easily get P .
K+
B
K+
B
Edy
We thus close this section by remarking that a complete
characterization of guessing attacks requires a more general
notion than strong veri(cid:12)ability.
4. ACCOUNTING FOR THE ATTACKER’S
GUESSING CAPABILITIES
Before proceeding any further with a more general notion
to characterize guess, we introduce a new knowledge model
to account for the attacker’s guessing capabilities.
4.1 Explicit Guess and Implicit Guess
We have already seen in Example 3 that a guessable term
is not necessarily a term that the attacker actually guesses.
To avoid confusion, we use \explicit guess" to refer to the
actual guess that the attacker makes; and \implicit guess"
to refer to new terms deducible from the attacker’s updated
knowledge (i.e., knowledge plus explicit guess(es)). Besides,
when we say a term is \guessable" or \can be guessed", we
always refer to implicit guess. In this terminology, we say
−
P is guessable by making explicit guess of K
B in Example
3. We tend to omit \implicit" or \explicit" when it is clear
from the context.
As we will see, such a distinction between explicit and im-
plicit guesses is important to understand the innate nature
The above example shows that to launch a guessing at-
tack, there might be several ways for the attacker to make
explicit guess; The following example illustrates the situa-
tion involves multiple explicit guesses.
Example 5. Let T = {NA, K +
denotes the attacker’s knowledge. Suppose that the attacker
aims to obtain P (i.e., implicitly guess P ). One straightfor-
−
ward way is by explicitly guessing K
A and P . Let x and y
signify the two guesses, respectively. At (cid:12)rst, the attacker
can use
B ,{NA·KAB}
,{NA·{P}KAB
K+
A
}
}
K+
B
fst(dec({NA · P}
to obtain the correct guess of K
decrypting {NA · KAB}
}
{NA · {y}KAB
K+
B
σ =Edy
K+
A
K+
B
, x))σ =Edy NA
−
A . Then, it gets KAB by
. Finally, it can use
{NA · {P}KAB
}
K+
B
to obtain the correct guess of P .
Remark. An explicit guess might turn out to be an implicit
one, due to the redundancy in explicit guesses. For example,
} and it makes
suppose the attacker knows {NA,{NA·P}KAS
explicit guesses of KAS and P . Note that
snd(dec({NA · P}KAS , KAS)) =Edy P
It is not hard to see that P can be derived from the explicit
guess of KAS. So, there is no need to make explicit guess of
P . We postpone to Section 6 some further discussion of the
redundancy in explicit guesses.
4.2 A New Knowledge Model
We now de(cid:12)ne a new notion to describe the attacker’s
knowledge that accounts for the attacker’s guessing capabil-
ities.
De(cid:12)nition 4.1 (Markup Term Set). A markup term set,
notated as ⃗T , is a pair ⟨T, σ⟩, where σ is a ground substitu-
tion such that Dom(σ) = f v(T ).
Here, all ground terms and free variables in T correspond
to its explicit knowledge and explicit guesses, respectively.
We use the substitution σ to indicate either the correct guess
value or a possible guess value. In the analysis of type-(cid:13)aw
attack [36, 43], free variables in T correspond to potentially
ambiguous incoming messages.
This de(cid:12)nition accords with the possible worlds seman-
tics for knowledge [30], in which the true state resides in
320
At this point, one may be tempted to conjecture that this
weaker notion of recognizability su(cid:14)ces to describe the de-
sired new notion of veri(cid:12)ability, as the stronger notion (De(cid:12)-
nition 3.3) does. Unfortunately, this is not the case, because
in De(cid:12)nition 5.1 [t/x] is composed with σ0, introducing a
new explicit guess of t, as shown by the following example.
Example 7. Let
⃗T = ⟨{NA,{(NA · NB) · {NA}
}KAS , x}, [KAS/x]⟩
K+
B
denotes the attacker’s knowledge. Suppose that the attacker
wants to obtain K +
B . Note that the attacker only makes one
explicit guess of KAS. It is not hard to see that the attacker
indeed can correctly guess KAS. Then, the attacker’s knowl-
}, ϕ⟩ . Now, it
edge becomes ⃗T
is not hard to see that, without any further guess(es), the
attacker is still not able to obtain K +
B . On the other hand,
however, it can be shown that ⃗T (cid:3)Edy K +
B .
= ⟨{NA, NB, KAS,{NA}
K+
B
′
There is one simple (cid:12)x to avoid adding the new explicit
guess. As explained earlier, an explicit guess may turn out to
be an implicit one by exploiting the redundancy in explicit
guesses. The trick is that we impose condition(s) to ensure
that the newly added explicit guess becomes an explicit one.
De(cid:12)nition 5.2 (Weak Veri(cid:12)ability). Let ⃗T = ⟨T, σ0⟩ be a
markup term set and t be a ground term. We say that t is
weakly veri(cid:12)able by ⃗T under equational theory E and write
⃗T IE t if ⃗T (cid:3)E t and T σ0 ⊢E t.
The condition T σ0 ⊢E t implies that T ⊢ s and sσ0 =E t
for some s. In other words, the explicit guess can be exactly
described by using T , obviating the need to explicitly guess
t. The following lemma states this formally.
Lemma 5.3. Let ⃗T = ⟨T, σ0⟩ be a markup term set and t
be a ground term. If ⃗T IE t, then there exists a term s such
that T ⊢ s and sσ0 =E sσ =E t for all σ ≈E;T σ0.
Proof. By De(cid:12)nition 5.2, we have ⃗T (cid:3)E t and T σ0 (cid:3)E t.
Then, it follows from Lemma 2.1 that there exists a term
s such that T ⊢ s and sσ0 =E t. It remains to show that
sσ =E t for all σ ≈E;T σ0.
and x be a fresh variable. Since σ ≈E;T σ0,
′
we get σ◦ [t
/x] ≈E;T∪{x} σ0 ◦ [t/x]. Moreover, since ⃗T (cid:3)E t,
we thus have xσ ◦ [t
/x] =E t by De(cid:12)nition 5.1. Hence,
′
=E t. This completes the proof.
t
Let sσ =E t
′
′
one of the many possible states. More speci(cid:12)cally, if σ and
′
σ
correspond to the correct guess and a possible guess, re-
spectively, then ⟨T, σ⟩ and ⟨T, σ
′⟩ are the actual state and a
possible one. It is worth pointing out that the \true" state
does not account for the attacker’s true knowledge state, but
rather describes the expected state from the attacker’s point
of view. To avoid confusion, we will informally refer to σ and
′
σ
as the expected substitution and possible substitution, re-
′⟩) is regarded as the
spectively. Similarly, ⟨T, σ⟩ (resp. ⟨T, σ
expected (resp. possible ) markup term set (or state).
As usual, we require the possible worlds to be indistin-
guishable to an agent from the true world/state. This means
that the attacker should not be able to distinguish the ex-
pected state from all possible states.
In our terminology,
they comply with the operational equivalence relation, i.e.,
they (cid:12)t into one equivalence class. Therefore, both the ex-
pected state and possible state su(cid:14)ce to model the knowl-
edge of an attacker with guessing capabilities.
For instance, in Example 4, the attacker’s knowledge can
be modeled by
⟨{NA, K +
B ,{NA · P}
, x}, [P/x]⟩
K+
B
and
⟨{NA, K +
B ,{NA · P}
, y}, [K
B /y]⟩
−
K+
B
corresponding the two explicit ways of guessing.
5. A COMPLETE CHARACTERIZATION OF
GUESSING
In this section, we introduce a weaker notion of veri(cid:12)-
ability to fully characterize the intuitive understanding of
guessing.
5.1 Weak Veriﬁability
The possible-worlds semantics lends more sense to recog-
nizability: a term t (indicated by x) is recognizable if and
only if x indicates t (i.e., xσ =E t) in all possible states.
This suggests a more general de(cid:12)nition of recognizability,
which extends De(cid:12)nition 3.3 to the case of multiple free
variables (indicating potentially ambiguous messages [39] or
unchecked guesses).
De(cid:12)nition 5.1 (Weak Recognizability). Let ⃗T = ⟨T, σ0⟩ be
a markup term set and t be a ground term. We say that t
is weakly recognizable by ⃗T under equational theory E and
write ⃗T (cid:3)E t if xσ =E t for all σ satisfying σ ≈E;T∪{x}
(σ0 ◦ [t/x]) where x is a fresh variable.
Example 6. Consider again Example 5. The attacker’s
knowledge is modeled by
⃗T = ⟨{NA,{NA·KAB}
,{NA·{P}KAB
, x, y}, [K
}
K+
A
K+
B
B /x, P/y]⟩
−
in which x and y correspond to two distinct explicit guess-
es made by the attacker. Then, ⃗T (cid:3)Edy P . However, if
−
the attack only makes a single guess, either K
B or P , then
′ ̸(cid:3)
′
⃗T
P , where ⃗T
⟨{NA,{NA · KAB}
,{NA · {P}KAB
, x}, [K
B /x]⟩
−
is either
Edy
}
K+
A
K+
B