title:On the Anonymity Guarantees of Anonymous Proof-of-Stake Protocols
author:Markulf Kohlweiss and
Varun Madathil and
Kartik Nayak and
Alessandra Scafuro
7
0
1
0
0
.
1
2
0
2
.
1
0
0
0
4
P
S
/
9
0
1
1
.
0
1
:
I
O
D
|
E
E
E
I
1
2
0
2
©
0
0
.
1
3
$
/
1
2
/
5
-
4
3
9
8
-
1
8
2
7
-
1
-
8
7
9
|
)
P
S
(
y
c
a
v
i
r
P
d
n
a
y
t
i
r
u
c
e
S
n
o
m
u
i
s
o
p
m
y
S
E
E
E
I
1
2
0
2
2021 IEEE Symposium on Security and Privacy (SP)
On the Anonymity Guarantees of Anonymous
Proof-of-Stake Protocols
Markulf Kohlweiss∗ , Varun Madathil†, Kartik Nayak‡ Alessandra Scafuro†
∗ University of Edinburgh: PI:EMAIL
† North Carolina State University: {vrmadath, ascafur}@ncsu.edu
‡ Duke University: PI:EMAIL
Abstract—In proof-of-stake (PoS) blockchains, stakeholders
that extend the chain are selected according to the amount of
stake they own. In S&P 2019 the “Ouroboros Crypsinous” system
of Kerber et al. (and concurrently Ganesh et al. in EUROCRYPT
2019) presented a mechanism that hides the identity of the
stakeholder when adding blocks, hence preserving anonymity of
stakeholders both during payment and mining in the Ouroboros
blockchain. They focus on anonymizing the messages of the
blockchain protocol, but suggest that potential
identity leaks
from the network-layer can be removed as well by employing
anonymous broadcast channels.
In this work we show that this intuition is ﬂawed. Even
ideal anonymous broadcast channels do not sufﬁce to protect
the identity of the stakeholder who proposes a block.
We make the following contributions. First, we show a for-
mal network-attack against Ouroboros Crypsinous, where the
adversary can leverage network delays to distinguish who is the
stakeholder that added a block on the blockchain. Second, we
abstract the above attack and show that whenever the adversary
has control over the network delay – within the synchrony
bound – loss of anonymity is inherent for any protocol that
provides liveness guarantees. We do so, by ﬁrst proving that it is
impossible to devise a (deterministic) state-machine replication
protocol that achieves basic liveness guarantees and better than
(1 − 2f ) anonymity at the same time (where f is the fraction of
corrupted parties). We then connect this result to the PoS setting
by presenting the tagging and reverse tagging attack that allows
an adversary, across several executions of the PoS protocol, to
learn the stake of a target node, by simply delaying messages for
the target. We demonstrate that our assumption on the delaying
power of the adversary is realistic by describing how our attack
could be mounted over the Zcash blockchain network (even when
Tor is used). We conclude by suggesting approaches that can
mitigate such attacks.
I. INTRODUCTION
Lamport, Shostak, and Pease introduced the Byzantine
Generals Problem with the goal of achieving consensus among
a group of known parties. In their formulation, consensus is
achieved even when a ﬁxed fraction of the parties, called
Byzantine parties, exhibit arbitrary behavior. Since the parties
are known to each other at all points of time, these protocols
are also referred to as permissioned consensus protocols. With
∗ Markulf Kohlweiss has been supported by the European Union’s Horizon
2020 research and innovation programme under grant agreement No. 780477
(project PRIViLEDGE).
‡ Kartik Nayak is supported in part by an early-career faculty grant from
VMware Research and a gift research grant from Novi.
† Alessandra Scafuro and Varun Madathil are supported by NSF grants
#1012798,#1764025
Bitcoin, for the ﬁrst time, Nakamoto introduced a consensus
protocol, or a blockchain, where parties can participate in the
protocol without having their identity known to other parties.
Such protocols where an identity is not required are called
permissionless protocols. In permissionless consensus, an ad-
versary can introduce a large number of parties called Sybils
and hence the number of adversaries can always be greater
than the ﬁxed fraction allowable by a permissioned consensus
protocol. To address this concern, permissionless protocols
rely on the use of constrained resources. They achieve security
assuming that honest parties hold a majority of the available
resources. Two of the most commonly used resources are
computation and stake in the system. For instance, Bitcoin [1]
uses computation whereas protocols such as Ouroboros [2] [3]
and Algorand [4] use stake. These resources are used to elect
leaders (or proposers) who are allowed to contribute to the
blockchain. The leaders produce a proof of being elected as
leaders (e.g., proof-of-work, or a veriﬁable random function
(VRF) output sufﬁciently close to zero) that can be publicly
veriﬁed.
Privacy in PoS blockchains. The inherent public nature of
permissionless blockchains makes privacy of transactions an
important concern – a party can learn about transactions even
without participating in the blockchain protocol.
Recently, there have been multiple elegant works that have
considered the goal of obtaining privacy in these blockchains.
Some of them include ZCash [5], Monero [6], ZEXE [7],
based on proof-of-work, and Ouroborous Crypsinous [8],
Ganesh et al. [9], and Baldimtsi et al. [10] based on PoS.
In a PoW blockchain, at a high-level, privacy of transactions
is achieved by encrypting the content of the transactions and
providing a zero-knowledge proof that the transaction has been
added correctly. In a PoS blockchain, achieving privacy is
more involved since the stake of a party is used in two ways:
(i) electing leaders/committees who contribute to the extension
of the blockchain, and (ii) as a part of transactions that update
the stakes of parties. Thus, in order to guarantee the privacy of
transactions, it is inherently necessary to ensure that parties’
stakes are not revealed based on the execution of the chain
extension protocol. On the other hand, for Sybil resistance,
the number of times a party is elected is proportional to its
stake. This, along with the fact that a public key associated
with a VRF is used to provide a veriﬁable proof of leadership,
© 2021, Markulf Kohlweiss. Under license to IEEE.
DOI 10.1109/SP40001.2021.00107
1818
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:16:55 UTC from IEEE Xplore.  Restrictions apply. 
directly reveals an approximation of the parties’ stake. Thus,
ensuring privacy of transactions in PoS blockchains while
simultaneously providing Sybil resistance is a challenge.
Independently of whether entire transactions are private,
keeping the stake private is directly related to the security
of the PoS system itself. Otherwise, an adversary can mount a
selective attack on a party with a high stake (e.g., via malware
or a denial-of-service) either to steal the secret key of the party,
or to prevent this party from functioning correctly in the PoS
system. In either case, the security of the entire system is
weakened since a portion of “honest” stake is prevented from
functioning correctly.
Concerns with the approach to privacy. Ouroboros Crypsi-
nous [8] (which we will refer to as Crypsinous) and Ganesh
et al. [9], tackle this challenge in a PoS setting. In order to
hide the public key associated with a VRF, these works replace
VRFs with an anonymous veriﬁable random function (AVRF),
where the veriﬁcation of eligibility is not done using any
speciﬁc public key, but the set of all public keys in the system.
An anonymous VRF guarantees that by seeing the block,
no one is able to learn the identity of the party who added
the block. This, in addition to the fact that transactions are
private, guarantees that by looking at the blockchain protocol
messages, no information about the stake of a particular party
can be leaked. However, Crypsinous recognizes that protocol
messages travel over a public network – modeled as an ideal
functionality F ∆
N−MC (see Fig.1 [11])– and the adversary can
learn information about the identity of an elected party through
the leakage of the network channel, e.g., by associating a
certain block to a certain IP address. They informally claim
that if the underlying communications were carried over an
anonymous broadcast channel
the network-related
meta-data about the sender would be protected, hence the
linking between a block and the IP address of the block
proposer would not be possible. Since this claim is only
informally stated in [8], such work does not
indicate an
anonymous channel functionality that should be used. The
work by Ganesh at al. [9] instead explicitly describes an
ideal anonymous broadcast channel functionality that they
introduce, and this ideal functionality is assumed to be used
that for all the communications. We elaborate further on the
meaning of ideal anonymous broadcast channel next.
Ideal anonymous broadcast channels. An ideal anonymous
broadcast channel can be described via an ideal functionality
that captures the security properties we intuitively can hope to
achieve over a network.
A deﬁnition of a perfect ideal anonymous broadcast (ABC)
functionality, let us called it F perfect
ABC , would be one that takes
as input a message m from a party (or adversary) and adds the
message mto the buffers of all parties without allowing any
inﬂuence from the adversary on the delivery of such message.
Such a functionality is clearly very strong, and would trivially
imply consensus, since all parties receive the same messages
at the same time.
instead,
A more realistic candidate for an ideal anonymous broadcast
functionality, would be one that follows the deﬁnition of the
original broadcast functionality F ∆
NMC [11] (for which there
exist candidate protocols) and slightly modify it so that the
identity of the sender of a message m is not revealed to
the adversary. In such a formalization, the adversary can still
inﬂuence the buffer of honest parties, by introducing targeted
delays (within the synchronous bound ∆) to the messages sent
by both honest and corrupt senders. This is the formulation of
ideal anonymous broadcast channel that we consider in this
work (see Fig. 13) and that we denote by F ∆
Ganesh at al. [9] introduce a different formulation of
anonymous broadcast functionality where an adversary is only
allowed to delay messages sent by malicious parties, which
is captured by the ability of selectively adding messages to
the buffers of some targeted honest parties (cf. [9], page 10).
Looking ahead, this adversarial capability is still sufﬁcient to
mount the attacks we propose in this paper. This is because the
crux of our attack is to ensure that honest parties have different
views, which is allowed by their deﬁnition of ideal anonymous
channels since the adversary can inﬂuence the buffer of honest
parties.
ABC.
Our Contribution
In this work, we show that while the claim of using an
anonymous broadcast channel seems reasonable at ﬁrst, this
does not necessarily sufﬁce to hide the stakes of the parties.
Speciﬁcally, we have the following contributions:
• An anonymity attack in Crypsinous* that leverages
network delay. We show that even in the presence of
ideal anonymous broadcast channels, an adversary is able
to leverage a synchronous network delay to partition
the views of the parties so that, when a block is pub-
lished, it reﬂects the view of the block proposer, hence
directly linking the block to the network identity of its
proposer. Formally, we show that, in contrast with the