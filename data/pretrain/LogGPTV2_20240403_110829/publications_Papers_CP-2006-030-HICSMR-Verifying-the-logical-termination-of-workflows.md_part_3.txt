falset;a = true;a = true;a = true. In both cases the materialized work-
07 08 0
flow instances are true. Nowuconsider the following materialized workflow
instance: a = true;a = true;a = true;a = true;a = false;a =
0 01 02 03 04 05
true;a = ttrue;a = false;a = false;a = false. In this case the ma-
06 07 08 0
terialized workflow instance does not logicaully terminate. Note that in this
situation the materialized workflow instance stops its execution in task t ,
3
because its EA model is negative. Consequently the workflow does not logi-
cally terminate, but partially terminates.
Onceagainitisimportanttostatethatforataskt,inthecorrespondent
EA model f E Ã f C, the outgoing condition is enabled after the incoming
condition is enabled, i.e. f can be true only if f is true. Consequently we
C E
cannot atribute values arbitrarily to the transitions a , where a A. We
0j 0j 0
∈
allways must atribute values to a , according to table 1.
0j
Theorem 5 Logical Workflow Termination. A workflow WG logically
terminates if and only if b is a tautology.
Proof 5 Suppose that the workflow logically terminates. Then, for all
materialized workflow instances WG , a is enabled at some point in time
i
u
after transition a has been enabled. Let b = ∧(f Ei Ã f Ci), t i : f Ei Ã f Ci,
t
t T, for all i Γ, be the logical representation of the workflow. We
i
∈ ∈
assume, by contradiction, that there exists i Γ such that f Ei Ã f Ci is
∈
negative. Then, both f and f are false, or f is true but f is false.
Ei Ci Ei Ci
As a consequence, the workflow stops its execution in task t . Therefore a
i 0
is false and so a is not enabled, which is a contradiction. Consequentlyu,
u
every compound EA model in WG is positive and b is a tautology.
Conversely, if b is a tautology then every compound EA model in WG
is positive. Therefore, for every i Γ, f and f are true. In particular
Ei Ci
∈
a and a are true, which means that both a and a are enabled. As the
0 0
wtorkflowustarts its executionby enabling a , tht ena isu enabled at somepoint
t u
in time after a has been enabled. Then the workflow logically terminates.
t
Example 10 It can be easily seen that the logical representation of the
workflow shown in figure 1 is a tautology. Therefore, the workflow logically
terminates.
11
4 Using the Logical Workflow Termination Theo-
rem
In this section we describe two applications areas for which the use of the
logical workflow termination is indispensable.
4.1 Workflow Complexity Analysis
In a competitive e-commerce and e-business market, workflows can span
both between enterprises and within the enterprise [28]. While organiza-
tions want their workflows to be simple, modular, easy to understand, easy
to maintain and easy to re-engineer, in cross-organizational settings these
processes have an inherent complexity. Nevertheless, in some cases, work-
flows’ design can be highly complex, due, for example, to the vast number
of transactions carried out in global markets. High complexity in a process
has several undesirable drawbacks, it may result in bad understandability,
more errors, defects, and exceptions leading processes to need more time
to develop, test, and maintain. Therefore, excessive complexity should be
avoided.
To achieve an effective process management, one fundamental area of
researchthatneedstobeexploredisthecomplexityanalysisofworkflows[7].
Studiesindicatethat38%ofprocessmanagementsolutionswillbeappliedto
redesign enterprise-wide processes (source Delphi Group 2002). Workflow
complexity can be defined as the degree to which a process is difficult to
analyze, understand or explain. It may be characterized by the number and
intricacy of tasks’ interfaces, transitions, conditional and parallel branches,
theexistenceofloops, roles, activitycategories, thetypesofdatastructures,
and other process characteristics [8].
Workflow complexity metrics can be used during the development of
workflows to improve their quality and maintainability. But, it does not
makesensetocomplexityanalysistoworkflowsthatareincorrectlydesigned
and that do not logically terminate. Therefore, the logical workflow termi-
nation theorem has an important role in complexity analysis.
4.2 Semi-automatic design of workflows
A wide spectrum of workflow system architectures has been developed to
support various types of business processes. Cardoso, Bostrom et al. [10]
report that more than 200 workflow products are available in the market.
Most of the systems provide a set of tools which include a graphical appli-
12
cation to design workflows and an engine or enactment system to manage
the execution of workflow instances.
Although major research has been carried out to enhance workflow sys-
tems [22][12][26][3][19], the work on workflow application development life-
cycles and methodologies is practically inexistent. The development of ad-
equate frameworks is of importance to guarantee that workflows are con-
structed according to initial specifications. Furthermore, it would be ad-
vantageous for workflow analysts to have tools to support — automatically
or semi-automatically — the design of workflows. Unfortunately, it is rec-
ognized that despite the diffusion of workflow systems, methodologies and
frameworks to support the development of workflow applications are still
missing.
Tosurpassthislackoftoolstosupportthedesignofworkflows,thePosei-
don framework [9] has been developed. Poseidon framework helps analysts
during their interviews with administrative staff, managers, and employees
in general to design processes. The framework includes a set of procedures
that guide the workflow analyst during his interviews and supply methods
to semi-automatically design workflows. As a result, workflows can be de-
veloped and implemented more rapidly and accurately. The semi-automatic
design of workflows can generate workflows which are incorrect and that do
not logically terminate. Especially, since a semi-automatic design requires
human involvement which can design inconsistent workflows. Theuse of the
logical workflow termination theorem guarantees that the workflows semi-
automaticallygeneratedterminateandthatthesubsequentalterationsmade
by designers to workflows are consistent.
5 Conclusions
Workflow management systems are capable of hosting e-commerce applica-
tions by integrating business functionalities in a short time and with a low
cost. This is of significant importance for global and competitive markets.
Workflows describing e-commerce applications require a precise modeling,
verification, and analysis to ensure that they perform according to initial
specifications. The development of frameworks and theories to achieve an
accurate modeling is a difficult task and the solutions proposed are still
insufficient and more research is required.
To guarantee that workflows are successfully executed at runtime, it is
necessary to verify their properties at design time. In this paper we present
a formal framework, based on control flow graphs theory, to check workflow
13
specifications for correctness. In our approach we model workflows with tri-
logicacyclicdirectedgraphsanddevelopaformalismtoverifyoneimportant
property: the logical termination of workflows.
The contribution of our work will enable the development of tools that
will support and allow business process analysts to verify the correctness of
their workflows at design time.
References
[1] W. M. P. van der Aalst. The application of petri nets to workflowman-
agement. The Journal of Circuits, Systems and Computers, 8(1):21—66,
1998.
[2] WilM.P.vanderAalst. Workflowverification: Findingcontrol-flower-
rors using petri-net-based techniques. In W.M.P. van der Aalst, J. De-
sel, and A. Oberweis, editors, Business Process Management: Mod-
els, Techniques, and Empirical Studies, volume 1806, pages 161—183.
Springer-Verlag, Berlin, 2000.
[3] G. Alonso, C. Mohan, R. Guenthoer, D. Agrawal, A. El Abbadi, and
M. Kamath. Exotica/fmqm: A persistent message-based architecture
fordistributedworkflowmanagement. InIFIPWG8.1WorkingConfer-
ence on Information Systems for Decentralized Organizations, Trond-
heim, Norway, 1994.
[4] Kemafor Anyanwu, Amit Sheth, Jorge Cardoso, John A. Miller, and
Krys J. Kochut. Healthcare enterprise process development and inte-
gration. Journal of Research and Practice in Information Technology,
Special Issue in Health Knowledge Management, 35(2):83—98, 2003.
[5] P. Attie, M. Singh., A. Sheth., and M. Rusinkiewicz. Specifying and
enforcing intertask dependencies. In Proceedings 19th Intlernational
Conference on Very Large Data Bases, pages 134—145, Dublin, Ireland,
1993. Morgan Kaufman.
[6] CAPA. Course approval process automation (capa). Technical report,
LSDIS Lab, Department of Computer Science, University of Georgia,
July 1, 1996 - June 30, 1997 1997.
[7] Jorge Cardoso. About the complexity of teamwork and collaboration
processes. In Wojciech Cellary Esaki and Hiroshi, editors, IEEE Inter-
national Symposium on Applications and the Internet (SAINT 2005),
14
Workshop - Teamware: supporting scalable virtual teams in multi-
organizational settings, pages 218—221, Trento, Italy, 2005. IEEE Com-
puter Society.
[8] Jorge Cardoso. Evaluating workflows and web process complexity.
In Layna Fischer, editor, Workflow Handbook 2005, page 284. Future
Strategies Inc., Lighthouse Point, FL, USA, 2005.
[9] Jorge Cardoso. Poseidon: A framework to assist web process design
based on business cases. International Journal of Cooperative Informa-
tion Systems (IJCIS), (accepted for publication), 2005.
[10] Jorge Cardoso, Robert P. Bostrom, and Amit Sheth. Workflow man-
agement systems and erp systems: Differences, commonalities, and ap-
plications. Information Technology and Management Journal. Special
issue on Workflow and E-Business (Kluwer Academic Publishers), 5(3-
4):319—338, 2004.
[11] JorgeCardoso, ChristophBussler, andAmitSheth. Tutorial: Semantic
web services and processes: Semantic composition and quality of ser-
vice. In International Federated Conferences: DOA/ODBASE/CooPIS
2002, Irvine, CA, 2002.
[12] S. Ceri, P. Grefen, and G. Sanchez. Wide-a distributed architecture for
workflow management. In Proceedings of the 7th International Work-
shop on Research Issues in Data Engineering, pages 76—79, Birming-
ham, UK, 1997.
[13] Umeshwar Dayal, Meichun Hsu, and Rivka Ladin. Organizing long-
runningactivitieswithtriggersandtransactions. InACM SIGMOD in-
ternational conference on Management of data table of contents, pages
204—214, Atlantic City, New Jersey, 1990. ACM Press, New York, NY,
USA.
[14] J. Eder, H. Groiss, and H. Nekvasil. A workflow system based on ac-
tive databases. In G. Chroust and A. Benczur, editors, Proceedings of
CON ’94, Workflow Management: Challenges, Paradigms and Prod-
ucts, pages 249—265, Linz, Austria, 1994.
[15] D. Fensel and C. Bussler. The web service modeling framework, 2002.
[16] Dimitrios Georgakopoulos, Mark Hornick, and Amit Sheth. An
overview of workflow management: From process modeling to infras-
15
tructure for automation. Distributed and Parallel Databases, An Inter-
national Journal, 3(2):119—153, 1995.
[17] R. David Hall, John A. Miller, Jonathan Arnold, Krys J. Kochut,
Amit P. Sheth, and Michael J. Weise. Using workflow to build an in-
formation management system for a geographically distributed genome
sequenceinitiative. InR.A.PradeandH.J.Bohnert,editors,Genomics
of Plants and Fungi, pages 359—371. Marcel Dekker, Inc., New York,
NY, 2003.
[18] A.H.M. ter Hofstede and E.R. Nieuwland. Task structure semantics
through process algebra. Software Engineering Journal, 8(1):14—20,
1993.
[19] N. R. Jennings, P. Faratin, T. J. Norman, M. P. O’Brien, E. Wiegand,
C. Voudouris, J. L. Alty, T. Miah, and E. H. Mamdani. Adept: Man-
aging business processes using intelligent agents. In Proc. BCS Expert
Systems 96 Conference, pages 5—23, Cambridge, UK, 1996.
[20] M.H.Kang, J.N.Froscher, A.P.Sheth,K.J.Kochut,andJ.A.Miller.
A multilevel secure workflow management system. In Matthias Jarke
and Andreas Oberweis, editors, Proceedings of the 11th Conference on
Advanced Information Systems Engineering, Lecture Notes in Com-
puter Science, pages 271—285, Heidelberg, Germany, 1999. Springer-
Verlag.
[21] J. Klingemann, J. Wäsch, and K. Aberer. Deriving service models
in cross-organizational workflows. In Proceedings of RIDE - Informa-
tionTechnologyforVirtualEnterprises(RIDE-VE’99),pages100—107,
Sydney, Australia, 1999.
[22] KrysJ.Kochut, AmitP.Sheth, andJohnA.Miller. Orbwork: Acorba-
based fully distributed, scalable and dynamic workflow enactment ser-
vice for meteor. Technical report, Large Scale Distributed Information
Systems Lab, Department of Computer Science, University of Georgia,
1999.
[23] F. Leymann, D. Roller, and M.T. Schmidt. Web services and business
process management. IBM Systems Journal, 41(2):198—211, 2002.
[24] Zongwei Luo. Knowledge Sharing, Coordinated Exception Handling,
and Intelligent Problem Solving to Support Cross-Organizational Busi-
ness Processes. Ph.d. dissertation, University of Georgia, 2000.
16
[25] METEOR. Meteor (managing end-to-end operations) project home
page, 2004.
[26] John A. Miller, D. Palaniswami, Amit P. Sheth, Krys J. Kochut,
and H. Singh. Webwork: Meteor2’s web-based workflow management
system. Journal of Intelligence Information Management Systems:
Integrating Artificial Intelligence and Database Technologies (JIIS),
10(2):185—215, 1998.
[27] P. Muth, D. Wodtke, J. Weissenfels, G. Weikum, and A. Kotz Dit-
trich. Enterprise-wide workflow management based on state and activ-
itycharts. InA.Dogac,L.Kalinichenko,T.Ozsu,andA.Sheth,editors,
Proceedings NATO Advanced Study Institute on Workflow Management
Systems and Interoperability. Springer Verlag, 1998.
[28] AmitP.Sheth, WilvanderAalst, andIsmailcemB.Arpinar. Processes
driving the networked economy. IEEE Concurrency, 7(3):18—31, 1999.
[29] M.P. Singh. Semantical considerations on workflows: An algebra for
intertask dependencies. In Paolo Atzeni and Val Tannen, editors, Fifth
International Workshop on Database Programming Languages, Elec-
tronic Workshops in Computing, Umbria, Italy, 1995. Springer.
[30] Staffware. Staffware web site, 2005.
[31] TIBCO. Tibco inconcert, 2005.
17