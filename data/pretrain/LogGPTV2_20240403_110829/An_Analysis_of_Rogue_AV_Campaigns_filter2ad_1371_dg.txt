be uniquely identiﬁed.
In this paper, we continue this line of work and show that an attacker can cross-
correlate information between different social networking sites in an automated way.
The collected information reveals the different online identities of a person, sometimes
uncovering “secret” proﬁles.
7 Conclusion
In this paper, we presented a novel attack that automatically exploits a common weak-
ness that is present in many popular social networking sites. We launched real-world ex-
periments on eight distinct social networks that have user bases that consist of millions
of users. We leverage the fact that an attacker can query the social network providers
for registered e-mail addresses on a very large scale. Starting with a list of about 10.4
million e-mail addresses, we were able to automatically identify more than 1.2 million
user proﬁles associated with these addresses.
We can automatically crawl the user proﬁles that we map to e-mail addresses, and
collect personal information about each user. We then iterate through the extracted
friend lists to generate an additional set of candidate email addresses that can then be
used to discover new proﬁles. Our attack is signiﬁcant because we are able to correlate
information about users across many different social networks. That is, users that are
registered on multiple social networking web sites with the same e-mail address are
vulnerable. Our experiments demonstrate that we are able to automatically extract in-
formation about users that they may actually wish to hide certain online behavior. For
example, we can identify users who are potentially using a different name on a dating
web site, and are pretending to be younger than they really are. The correlation that we
are able to do automatically has a signiﬁcant privacy impact.
After we conducted our experiments and veriﬁed the feasibility of our attack, we con-
tacted the most popular social network providers such as Facebook, MySpace, XING
and Twitter, who all acknowledged the threat, and informed us that they are going to
adopt some of our countermeasures. By now, Facebook and XING have already ﬁxed
the problem by limiting the number of requests that a single source can perform, and
we expect that other social networks will also implement countermeasures.
440
M. Balduzzi et al.
Acknowledgments. This work has been supported by Secure Business Austria, by the
European Commission through project FP7-ICT-216026-WOMBAT, by the POLE de
Competitivite SCS (France) through the MECANOS project and by the French National
Research Agency through the VAMPIRE project.
References
1. Dwyer, C., Hiltz, S.: Trust and Privacy Concern Within Social Networking Sites: A Compar-
ison of Facebook and MySpace. In: Proceedings of the Thirteenth Americas Conference on
Information Systems, AMCIS (2007)
2. Fogel, J., Nehmad, E.: Internet social network communities: Risk taking, trust, and privacy
concerns. Comput. Hum. Behav. 25(1), 153–160 (2009)
3. Gross, R., Acquisti, A., Heinz III, H.J.: Information revelation and privacy in online social
networks. In: ACM Workshop on Privacy in the Electronic Society, WPES (2005)
4. Jagatic, T.N., Johnson, N.A., Jakobsson, M., Menczer, F.: Social phishing. ACM Com-
mun. 50(10), 94–100 (2007)
5. Jakobsson, M., Finn, P., Johnson, N.: Why and How to Perform Fraud Experiments. IEEE
Security & Privacy 6(2), 66–68 (2008)
6. Jakobsson, M., Ratkiewicz, J.: Designing ethical phishing experiments: a study of (ROT13)
rOnl query features. In: 15th International Conference on World Wide Web, WWW (2006)
7. Brown, G., Howe, T., Ihbe, M., Prakash, A., Borders, K.: Social networks and context-aware
spam. In: ACM Conference on Computer Supported Cooperative Work, CSCW (2008)
8. News, H.: Spam-Bots werten soziale Netze aus (September 2009), http://www.
heise.de/security/Spam-Bots-werten-soziale-Netze-aus-/news/
meldung/145344
9. Klensin, J.: Simple Mail Transfer Protocol. RFC 5321 (Draft Standard) (October 2008)
10. Zimmerman, D.: The Finger User Information Protocol. RFC 1288 (Draft Standard) (De-
cember 1991)
11. Bugtraq: OpenSSH-portable Enabled PAM Delay Information Disclosure Vulnerability
(April 2003), http://www.securityfocus.com/bid/7467
12. Bortz, A., Boneh, D.: Exposing private information by timing web applications. In: 16th
International Conference on World Wide Web (2007)
13. Python Software Foundation: Python 2.6 urllib module, http://docs.python.org/
library/urllib.html
14. Irani, D., Webb, S., Li, K., Pu, C.: Large online social footprints–an emerging threat. IEEE
International Conference on Computational Science and Engineering 3, 271–276 (2009)
15. Facebook: Statistics (April 2010),
http://www.facebook.com/press/info.php?statistics
16. Florencio, D., Herley, C.: A large-scale study of web password habits. In: 16th International
Conference on World Wide Web (WWW), New York, NY, USA (2007)
17. von Ahn, L., Blum, M., Hopper, N.J., Langford, J.: CAPTCHA: Using Hard AI Problems
for Security. In: Biham, E. (ed.) EUROCRYPT 2003. LNCS, vol. 2656. Springer, Heidelberg
(2003)
18. Danchev, D.: Inside India’s CAPTCHA solving economy (August 2008),
http://blogs.zdnet.com/security/?p=1835
19. Chellapilla, K., Simard, P.Y.: Using Machine Learning to Break Visual Human Interaction
Proofs (HIPs). In: Neural Information Processing Systems, NIPS (2004)
20. Mori, G., Malik, J.: Recognizing Objects in Adversarial Clutter: Breaking a Visual
CAPTCHA. In: IEEE Conference on Computer Vision & Pattern Recognition, CVPR (2003)
Abusing Social Networks for Automated User Proﬁling
441
21. Yan, J., El Ahmad, A.S.: A low-cost attack on a Microsoft CAPTCHA. In: 15th ACM Con-
ference on Computer and Communications Security, CCS (2008)
22. Bilge, L., Strufe, T., Balzarotti, D., Kirda, E.: All Your Contacts Are Belong to Us: Au-
tomated Identity Theft Attacks on Social Networks. In: 18th International Conference on
World Wide Web, WWW (2009)
23. Bonneau, J., Preibusch, S.: The Privacy Jungle: On the Market for Privacy in Social Net-
works. In: Workshop on the Economics of Information Security, WEIS (2009)
24. Chew, M., Balfanz, D., Laurie, B.: (Under)mining Privacy in Social Networks. In: Proceed-
ings of Web 2.0 Security and Privacy Workshop, W2SP (2008)
25. Jones, S., Millermaier, S., Goya-Martinez, M., Schuler, J.: Whose space is MySpace? A
content analysis of MySpace proﬁles. First Monday 12(9) (August 2008)
26. Krishnamurthy, B., Wills, C.E.: Characterizing Privacy in Online Social Networks. In: Work-
shop on Online Social Networks, WOSN (2008)
27. Bonneau, J., Anderson, J., Danezis, G.: Prying Data out of a Social Network. In: First Inter-
national Conference on Advances in Social Networks Analysis and Mining (2009)
28. Chau, D.H., Pandit, S., Wang, S., Faloutsos, C.: Parallel Crawling for Online Social Net-
works. In: 16th International Conference on World Wide Web, WWW (2007)
29. Mislove, A., Marcon, M., Gummadi, K.P., Druschel, P., Bhattacharjee, B.: Measurement and
Analysis of Online Social Networks. In: ACM SIGCOMM Conference on Internet Measure-
ment, IMC (2007)
30. Wilson, C., Boe, B., Sala, A., Puttaswamy, K.P.N., Zhao, B.Y.: User Interactions in Social
Networks and their Implications. In: 4th ACM European Conference on Computer Systems
(EuroSys). ACM, New York (2009)
31. Grifﬁth, V., Jakobsson, M.: Messin’ with texas, deriving mother’s maiden names using public
records. In: Ioannidis, J., Keromytis, A.D., Yung, M. (eds.) ACNS 2005. LNCS, vol. 3531,
pp. 91–103. Springer, Heidelberg (2005)
32. Raymond Heatherly, M.K., Thuraisingham, B.: Preventing private information inference at-
tacks on social networks. Technical Report UTDCS-03-09, University of Texas at Dallas
(2009)
33. Zheleva, E., Getoor, L.: To Join or Not To Join: The Illusion of Privacy in Social Networks
with Mixed Public and Private User Proﬁles. In: 18th International Conference on World
Wide Web, WWW (2009)
34. Narayanan, A., Shmatikov, V.: Robust De-anonymization of Large Sparse Datasets. In: IEEE
Symposium on Security and Privacy (2008)
35. Narayanan, A., Shmatikov, V.: De-anonymizing social networks. In: IEEE Symposium on
Security and Privacy (2009)
36. Wondracek, G., Holz, T., Kirda, E., Kruegel, C.: A Practical Attack to De-Anonymize Social
Network Users. In: IEEE Symposium on Security and Privacy (2010)
An Analysis of Rogue AV Campaigns(cid:2)
Marco Cova1, Corrado Leita2, Olivier Thonnard3,
Angelos D. Keromytis4, and Marc Dacier2
1 University of California Santa Barbara, Santa Barbara, USA
PI:EMAIL
2 Symantec Research Labs, Sophia Antipolis, France
{corrado leita,marc dacier}@symantec.com
3 Royal Military Academy, Brussels, Belgium
PI:EMAIL
4 Columbia University, New York, USA
PI:EMAIL
Abstract. Rogue antivirus software has recently received extensive at-
tention, justiﬁed by the diﬀusion and eﬃcacy of its propagation. We
present a longitudinal analysis of the rogue antivirus threat ecosystem,
focusing on the structure and dynamics of this threat and its economics.
To that end, we compiled and mined a large dataset of characteristics of
rogue antivirus domains and of the servers that host them.
The contributions of this paper are threefold. Firstly, we oﬀer the ﬁrst,
to our knowledge, broad analysis of the infrastructure underpinning the
distribution of rogue security software by tracking 6,500 malicious do-
mains. Secondly, we show how to apply attack attribution methodologies
to correlate campaigns likely to be associated to the same individuals or
groups. By using these techniques, we identify 127 rogue security software
campaigns comprising 4,549 domains. Finally, we contextualize our ﬁnd-
ings by comparing them to a diﬀerent threat ecosystem, that of browser
exploits. We underline the profound diﬀerence in the structure of the
two threats, and we investigate the root causes of this diﬀerence by ana-
lyzing the economic balance of the rogue antivirus ecosystem. We track
372,096 victims over a period of 2 months and we take advantage of this
information to retrieve monetization insights. While applied to a speciﬁc
threat type, the methodology and the lessons learned from this work are
of general applicability to develop a better understanding of the threat
economies.
(cid:2) This work has been partially supported by the European Commission through
project FP7-ICT-216026-WOMBAT funded by the 7th framework program. The
opinions expressed in this paper are those of the authors and do not necessarily re-
ﬂect the views of the European Commission. This work was also partly supported by
ONR through Grant N00014-07-1-0907 and the NSF through Grant CNS-09-14845.
Any opinions, ﬁndings, and conclusions or recommendations expressed in this ma-
terial are those of the author(s) and do not necessarily reﬂect the views of the ONR
or the NSF. The work of Marco Cova was supported by a fellowship made possible
by Symantec Research Labs.
S. Jha, R. Sommer, and C. Kreibich (Eds.): RAID 2010, LNCS 6307, pp. 442–463, 2010.
c(cid:2) Springer-Verlag Berlin Heidelberg 2010
1 Introduction
An Analysis of Rogue AV Campaigns
443
A rogue security software program is a type of misleading application that pre-
tends to be legitimate security software, such as an anti-virus scanner, but which
actually provides the user with little or no protection. In some cases, rogue se-
curity software (heretofore referred to as “rogue AV”) actually facilitates the
installation of the very malicious code that it purports to protect against.
Rogue AVs typically ﬁnd their way into victim machines in two ways. First,
social engineering techniques can be used to convince inexperienced users that
a rogue tool is legitimate and that its use is necessary to remediate often non-
existent or exaggerated threats found on the victim’s computer. A second, stealth-
ier technique consists of attracting victims to malicious web sites that exploit
vulnerabilities in the client software (typically, the browser or one of its plug-
ins) to download and install the rogue programs without any user intervention
(e.g., through drive-by downloads). After a rogue AV is installed on a victim’s
machine, it uses a number of techniques to convince (or force) a user to pay for
additional tools or services, such as a “full version” of the program or the sub-
scription to an update service. The cost of these additional programs or services
ranges from $30–$100 [8].
In the last few years, rogue AVs have become a major security threat, both in
terms of their pervasiveness and their ﬁnancial impact. For example, over a 1-year
period, Symantec’s sensors detected 43 million installation attempts, covering
over 250 distinct families of rogue AV software [8]. In addition, an investigation
by Krebs revealed that aﬃliate programs alone can generate upward of $300,000
a month for the individuals that distribute rogue AVs [14].
As a consequence, diﬀerent companies in the computer security industry have
recently focused their attention on this threat [1,4,8]. Most of the existing works
have considered individual facets of the rogue AV problem, for example, the
malware code (e.g., the installation techniques it employs), the sites involved
in its distribution (e.g., their number and geolocation), and the victims that it
aﬀects. However, little has been done to understand the rogue AV phenomenon
as a whole, that is, relating how these individual pieces become combined in
rogue AV campaigns.
We seek to ﬁll this gap by providing a better understanding of the organization
and dynamics of rogue AV campaigns. In particular, we focus on characterizing
the infrastructure used in a campaign (e.g., its web servers, DNS servers, and
web sites) and the strategies used to create and manage it. We also investigate
the uniqueness of our ﬁndings to this very speciﬁc threat type, and we investigate
the motivations underneath these diﬀerences by exploring its economics.
The key of our approach is a method that, given a list of individual AV-hosting
sites, allows us to group them into campaigns, each characterized by coherent fea-
tures. More precisely, we use an extensive dataset including network and domain
registration information, as well as network-observable temporal characteristics
of a large number of domains that are associated with rogue AV advertising and
distribution. To that dataset we apply a multi-criteria fusion algorithm to group
together nodes based on a certain number of common elements likely due to the
444
M. Cova et al.
same root cause (e.g., the same rogue AV campaign). This attribution method
uses a combination of unsupervised, graph-based clustering combined with a
data aggregation method inspired by multi-criteria decision analysis (MCDA).
On the one hand, our approach enables the identiﬁcation of rogue AV campaigns
and the analysis of the modus operandi of the individuals controlling them. On
the other hand, this approach enables the execution of comparative analyses and
the assessment of the uniqueness of the ﬁndings to the speciﬁc threat landscape.
The speciﬁc contributions of our work described in this paper include:
– The ﬁrst, to our knowledge, large-scale analysis of the rogue AV threat and
of its distribution infrastructure, conducted by tracking 6,500 malicious do-
mains.
– A demonstration of the usefulness of attack attribution approaches to the
problem of mining large security datasets. We show how, by using MCDA, we
are able to discover speciﬁc campaigns likely to be associated to the action
of a speciﬁc individual or group.
– The ﬁrst characterization of the behavior of rogue AV campaigns and their
economics. We reveal insights on the automated deployment of large amounts
of domains, and we demonstrate their speciﬁcity to the threat landscape by
comparing the results to those associated with other web-born threats. We
collect information on 372,096 users (clients) interacting with some rogue AV
domains to generate information on the average conversion rate of a rogue AV
campaign. We demonstrate the existence of a very speciﬁc economic balance,
that justiﬁes a bigger investment in the deployment and maintenance of such
large-scale campaigns.
The remainder of this paper is organized as follows. Section 2 describes the state
of the art on tracking and mitigating the rogue AV threat. Section 3 describes
the features we used in our analysis, as well as the clustering technique itself.
Section 4 highlights our most interesting insights following the analysis, while
Section 5 assesses the speciﬁcity of our ﬁndings to the rogue AV threat, and
looks into their economic motivations. Finally, Section 6 summarizes some of
the lessons we learned from this study, and Section 7 concludes the document.
2 State of the Art
The presence of rogue security software has been observed (at least) as early
as 2005 [28]. More in-depth reports of rogue security software have ranged from
analyses on the diﬀusion of such threats [1], to studies on their social aspects
and their comparison to traditional malware economies [18]. Recently, security
industry reports [4,8] have presented thorough descriptions of various instances
of rogue software, their look and feel as well as some tactics they use. By focusing
on a large-scale study of the structure of the distribution infrastructure for rogue
AV domains, this work complements previous analyses on rogue security software
by oﬀering new lessons on this threat ecosystem and its peculiarities.
An Analysis of Rogue AV Campaigns
445
We previously provided a preliminary, high-level overview of some of the re-
sults obtained with the method described in this paper [8]. The novel contribu-
tions of this paper with respect to that technical report are threefold. First, we
provide a precise description of the experimental setup and the analysis method.
Second, we give a comparison, thanks to a novel experimental dataset, with
other kinds of web-based threats. Third, we supply an ensemble of insights on
the economic rationales explaining the identiﬁed diﬀerences.
Concurrently to our work, Google published a study on the distribution of
rogue AV software [21], which focuses on the prevalence of rogue AV software and
on its distribution mechanisms. In this paper, we also uncovered the campaigns
underlying rogue AV sites and performed an initial study of their victims.
These economic insights contribute at completing the picture on the under-
ground economy and its dynamics. This complements previous works on the
topic. Similarly to what is presented here, Moore et al. [16] have collected client
volume information for a diﬀerent threat landscape, that of the phishing web-
sites. Holz et al. [11] have instead inﬁltrated some weakly conﬁgured drop-zones
to study the extent and the economic aspects of phishing and attack campaigns.
Finally, previous work [7,9] has monitored the type of transactions carried out
by cyber-criminals through underground channels.
Diﬀerent techniques have been proposed to study the structure and the
diﬀusion of speciﬁc threats. Moshchuk et al. [17] have crawled 18 million URLs
to quantify the nature and the extent of the spyware problem. Provos et al. [19]
have analyzed billions of URLs and used a combination of machine learning tech-
niques and crawlers to analyze the infrastructure underneath drive-by downloads.
McGrath et al. [15] have studied the dynamics associated to the registration of
phishing domains. Stone-Gross et al. [24] have inﬁltrated the Torpig botnet and
gathered information on its size and dynamics. In all these cases, the authors have
used diﬀerent data collection techniques to generate high-level overviews on spe-
ciﬁc threats. While this work complements the state of the art by providing an
analysis of a previously unexplored threat landscape, that of the rogue security
software, our contribution goes beyond that. We show the usefulness of multi-
criteria analysis techniques to mine these large datasets and discover speciﬁc cam-
paigns within the multitude of domains under observation. We also demonstrate
our ability to leverage these techniques to compare diﬀerent threat landscapes,
and identify speciﬁc behaviors that are a characteristic of a given threat.
3 Methodology
In this Section, we begin by describing our methodology for collecting informa-
tion about the rogue AV distribution infrastructure. We then discuss the analysis
techniques that we used on the collected data. The data collection itself was car-
ried out over three separate phases: the collection of rogue AV-related domain
names, the collection of information on each domain and the discovery of spe-
ciﬁc campaigns leveraging attack attribution tools developed in the context of
the WOMBAT project1.
1
http://www.wombat-project.eu
446
M. Cova et al.
3.1 Rogue AV Domains
To build an initial seed of domains associated to the rogue AV distribution, we
aggregated information from a number of diﬀerent sources:
– Norton Safeweb (http://safeweb.norton.com)
– Malware Domain List (http://malwaredomainlist.com)
– Malware URL (http://www.malwareurl.com)
– Hosts File (http://www.hosts-file.net)
All these sources oﬀer at least a rough categorization of the type of each malicious
domain they are listing, and allowed us to systematically collect all the domains
that were believed to be correlated to the rogue AV distribution by means of
simple heuristics.
To complete our picture on the collected domains, we have integrated our do-
main list with the information generated by freely accessible IP-NAME mapping
datasets (http://www.robtex.com). This allowed us to discover all the domain
names hosted on each IP where at least one rogue domain had been found.
3.2 Rogue Server Information
Once the initial list of domains was created, we have collected as much infor-
mation as possible on each of them, on their relation with the associated web
servers, and on their dynamics. To do so, we have taken advantage of HAR-
MUR, a Historical ARchive of Malicious URLs also developed in the WOM-
BAT project.
HARMUR enables us to study the relation between client side threats and
the underlying server infrastructure, and their evolution over time. Instead of de-
veloping new detection technologies (e.g., based on honeyclients, or special web
crawlers), HARMUR integrates multiple information sources and takes advan-
tage of various data feeds that are dedicated to detecting Web threats. By doing
so, HARMUR aims at enabling the creation of a “big picture” of the client-side
threat landscape and its evolution.
In the speciﬁc context of this work, HARMUR generated the necessary con-
textual information on the identiﬁed rogue AV domains, and on all the other
domains that were discovered to be sharing the same server as rogue AV do-
mains thanks to DNS mapping information. In order to generate a dynamic
perspective on the characteristics of the observed domains, HARMUR imple-
ments a set of analysis modules that are re-iterated on each tracked domains on