## Page 268
发布软件
下了3个月的时间。我把这些时间用来继续增强模板功能，这个功能被证明
作流的网站非常有用。所以，我们就再也没有去开发工作流的部分，这就省
是真地那么需要工作流的部分。而且，事实证明模板功能对于那些不涉及工
施以后得到了什么结果？等到我把模板功能做完交给他们以后，他们觉得不
电子邮件代替工作流系统进行信息交换。”
作，我们就立刻着手部署工作流的部分。在最后完工之前，你们一直可以用
来，马上就可以省掉你们手工编辑网页的巨大工作量。一旦新的系统开始工
考虑。让我们先把模板系统做完，我3个月就可以完成，交给你们。这样一
千张页面，但是BBEdit的多文件查找和替换功能很好用….”
是最有用的。
台节目、音乐会信息等。“你们现在的网站是用什么做的？”我问。
各个高校的特约通讯员能够在网页上提交本校俱乐部活动、唱片店销量、电
还要做一个完整的工作流系统（workflow system），使得MTV频道遍布全国
容管理系统。具体的要求包括数据库作为后端，前端用模板动态生成，并且
哪怕只改进了一个地方，你就应该发布一个升级程序。
经常性地发布小幅修改的新版本。只要你在软件中实现了某种有用的改进：
这确保了你的软件是符合顾客需要的。如果你的顾客人数较少，那么你最好
杂的系统,里面的功能却没有人要用。因为你忙于实现顾客提出的最新要求,
他们的新版本中。这样做的优点是，你不会浪费一年时间开发出一个非常复
方式就是给他们看源码，让他们试用，并且把反馈立即体现在第二天你交给
①BBEdit是Mac平台上的一款HTML网页编辑软件，官方网站是http://www.barebones.com/
他们表示同意。我的想法听起来好像是一个很不错的点子。猜猜真正实
我估算全部工作要用6个月完成。“不过，我建议还有另外一个选择可供
“哦，我们就是用BBEdit一张张手工做，”他们告诉我，“当然，要做几
好几年前，有一项任务派到我头上，要我为MTV频道的网站做一个内
某些类型的用户不喜欢像这样当“小白鼠”。一般来说，那些购买现成
较短的发布周期会较快地得到顾客的反馈。有时候，与顾客配合的最好
当你决定软件的发布频率时，下面是一些你需要考虑的因素。
products/bbedit/。
---
## Page 269
个下载软件的列表框而已。几乎没人愿意对它进行重新评估。这6年来，
了6年，如果你随便找一个人问什么是Castanet，他们都会告诉你，那只是-
浓厚的失望，厚到你可以把它们用刀切好，再涂上黄油。结果就是，即使过
（只有4个月的开发时间，你还能期待什么？）太让人震惊了。到处都弥漫着
下载了这个软件，结果发现一—它只是一个用来下载软件的列表框而已，
是Marimba的程序员用来开发它的时间总共只有.…..4个月。我们所有人都
软件的时候，它不费吹灰之力就得到了可能比史上任何产品都多的炒作，但
点。Kim Polese的工作是那样出色，所以，等到Marimba公司发布Castane
我们要深信不疑，与Java语言相比，一神论在人类历史中只是一个很小的亮
让人目瞪口呆的文章，讲解Java将如何彻底地改变人类文明的本质。比如，
做演讲，鼓吹Java语言是人类进化的下一个阶段。George Gilder写了许多篇
Polese，此人非常善于搞好公共关系。她推广Java的时候，就拉来Danny Hillis
的支持，用于引诱Sun公司Java开发团队中主要成员跳槽。他们的CEO是Kim
正逢对Java的吹捧达到登峰造极的时候，于是他们有了无穷的风险投资资金
是不可能的事。你不妨回忆一下可怜的Marimba?。他们创建公司的时候，
用户也依然记得对1.0版的印象，要让他们重新评估、产生新的印象，几乎
的顾客都会想：“不就是那个废物软件吗？凭什么每过4个月，我就该测试它
没问题，这只是软件的1.0版。但是等到4个月后，你发布2.0版的时候，所有
你将会听到顾客这样说：“它的用处不大。”听到这话，你也许心想，OK，
是为了把这个程序扔到世人面前，让你能够“开始倾听顾客的意见”，那么
好不要太频繁地发布新版本。
过了beta测试。如果你已经有了（或者想要有）大量的付费用户，那么你最
心设计在软件中，有着很全面的良好的易用性，并且在公开发售之前已经经
那就是不用你提要求就能立刻得到自己想要的功能,因为那些功能已经被精
就被开发出来，这无疑让人很满意，但是有且只有一种情况会让你更满意，
要的东西。作为一个顾客，你提出要求，想要某个功能，然后这个功能很快
软件的人不会想要成为软件开发实验的一部分，他们只想要能够满足他们需
② George Gilder是美国技术类畅销书作家。
① Marimba是一-款网络管理软件，2004年3月31日被BMC软件公司以2.39亿美元的价格收
假定你发布了一个功能不足、没有特色的商业程序，你这样做的目的只
购。
255
挑选发布日期
---
## Page 270
发布软件
是3年，期间几乎所有的时间都用于枯燥的整合和测试，而不是用于写出新
一个你个人的周末DIY项目一样。Windows的主要版本之间的发布周期通常
听不到它有向后兼容的问题。微软公司做到这一点的唯一方法就是开展数量
万种的软件和硬件保持兼容。当一个Windows的新版本出来的时候，你几乎
另一个要考虑的因素是，你的竟争者也许紧跟在你的脚跟后面，苦苦追赶。
此外，这样长的软件发布间隔会给软件业带来很严重的现金流问题。当然，
了，人们就会停止购买，因为从那时起，他们每天都在期待新版本的推出
得成功。Photoshop看上去好像就很成功。但是只要感到某个应用软件过时
也许吧。有些公司是本领域中的领导者，他们使用这样的时间长度可能会获
你的软件的新版本变得更吸引人。
到15或18个月，你用于开发新代码的时间就会从3个月变成6个月，这将使得
顾客养成这种习惯。如果你把进度表的时间放宽，每个版本之间的周期拉长
都学乖了，不是每个版本都升级，而是每隔一个版本才升级。你不能让你的
推出一个“重大的”新版本，但是很少值得购买。）结果就是，如今许多人
司的Photo-Paint和Intuit公司的QuickBooks堪称典型的反面教材。他们每年都
不包含足够多的新功能，并不让人感到升级是必要的。（在这方面，Corel公
有大约相当于3个月的时间用于开发新代码。那些每年都升级的软件通常并
到9个月的时间。事实上，如果你计划每年推出一个全新的版本，那么你只
合、调试、开展完整的一轮alpha测试和beta测试、制作文档等步骤要花掉6
诺德·汤因比（Arnold Toynbee）不必改写任何他的著作。
讶地发现它是一个非常出色的软件，能够解决很多问题，而且历史学家阿
们将静悄悄地、小规模地进行营销活动，每一个找到这个软件的人都会惊
版才是那个我们想要让地球上每个人留下第一印象的版本。与此同时，我
产品CityDesk的推广策略，就是在2.0版发布之前，避免做大规模的宣传。2.0
老实说，谁会花时间去发现这一点呢？让我告诉你一个小秘密，我们自己的
Marimba一直在改进代码，我肯定它现在已经是世界上最酷的东西了，但是
多得吓死人的测试，整个测试过程的庞大和复杂，使得建造巴拿马运河就像
管理系统)，开发过程中最困难的部分就是怎么才能与现存的几千种或几百
对于大型的平台式软件（比如操作系统、编译器、网络浏览器、数据库
好的，如果15个月是一个合适的时间长度，那么24个月会不会更好呢？
对于大多数的商业软件，在开发流程中，你会发现设计、原型制作、整
---
## Page 271
的时候要小心一点。
看上去有点怪怪的，使得用户凭直觉就知道网站发生了重大变化，他们使用
更好的做法可能是降低发布的频率，把多处修改一次发布，而不是多次发布
没有人会去读它，而且它还让整个页面显得乱糟糟。）从易用性的角度看，
期都变一变，那么你的网站就缺乏可预测性，所以它的易用性也不会很高
程序的行为方法与用户期待的方式一致，那么它就是易用的。如果你每个星
版本，但是这未必是你的最佳选择。你要记住易用性的基本原则：一个应用
eBay或PayPal那样，那么理论上没有什么可以阻止你经常性发布小幅修改的
间长度都是不现实的。
后，才会发现这些问题。而一次完整的beta测试至少需要8周，少于这个时
殊错误以及在大字体设置下软件不工作的问题。只有你做过几次beta测试
忙地投入市场，你就不可能发现所有的兼容性问题、Windows 95系统中的特
带来的帮助。即使你的软件永远不存在任何代码错误，但是如果被迫匆匆忙
紧做出一个新版本，不必等一切工作都准备好了才把软件交付市场。
被送往医院的时候，你还在修理汽车引擎，那就太不妙了。相反，你应该赶
挑战，你有充分的理由快速发布一个临时版本。当你的妻子就要分娩、等着
的版本是在3年后，但是市场上的竞争也可能风云突变，为了应对竞争者的
随时都可以对外发布。这无疑是值得奋斗的目标。即使你计划中下-一个发行
时候很仔细，那么你每天工作结束后编译出来的版本可能已经质量很高了，
泡沫结束的时候发布。真是完美啊。
学习，上一个版本在互联网泡沫出现的初期发布，下一个版本则是在互联网
point）的软件系统，最好偶尔才发布新版本。在这方面，你可以向Apache
反应，就是甩手不干了。对于那些有几百万用户和几百万整合点（integration
的软件和硬件开发者就不得不一次又一次地进行测试，他们最后只会有一个
个操作系统经常发布新版本，而且每个版本都只有很少的改进，那么第三方
功能。短于这个时间长度的发布周期都是不现实的，会把人逼疯的。如果一
而且，在发布的时候，你要努力使得整个网站的视觉效果发生变化，让网站
（别以为在屏幕上加一段文字“注意！用户界面已改变”，你就能避开这一点
但是，也不要高估你每天编译高质量版本的重要性，不要高估它能为你
如果你已经做了大量的验证（validation）和单元测试，而且编写代码的
最后一个想法。如果你的软件的交付形式是互联网上使用的服务，就像
257
挑选发布日期
---
## Page 272
258
发布软件
一第八部分
价这门学问的本质。如果你怕麻烦，不愿意读完本文，那么你就为你的软件
深入的理解。但是，你依然不会知道你的软件应该定在多少价格，这就是定
后我会把这个理论的各种细节都剖示出来，等到我讲完了，你就会对定价有
的涤纶制服。
你也不得不去沃尔玛当一个拉门的，挣最低工资，被迫整天穿着一套脏兮兮
够的顾客，不得不关门歇业。关门歇业不是好事，因为所有员工都会失业，
是比最大的错误还要大的错误)，那就是定价太高，那样你的公司就没有足
它们就没有足够的收入，不得不关门歇业。但是，还有更大的错误（对，就
磨的神秘学问。专家告诉你，软件公司犯下的最大错误就是定价太低，那样
向专家咨询，但是他们看上去也不知道答案。定价是一门很深奥、很难以琢
日报》上为你写了一篇充满溢美之词的评论。
个很受欢迎的网志或者其他网络渠道，也许沃尔特·莫斯伯格?在《华尔街
品。至于具体是哪些途径，作为习题，请本文的读者自行思考。也许你有一
①沃尔特·莫斯伯格（Walt Mossberg）是《华尔街日报》的著名科技专栏作者，各大科
接下来，你面临的最大问题之一就是“怎么来为我的软件定价呢？”你
找到正确的价格很复杂。我想先从一个小小的经济学理论开始讲起，然
所以，如果你喜欢穿全棉的衣服，那么你最好不要定错价格。
你刚刚发布了一个相册软件，通过某些途径，你让人们了解到了这个产
2004年12月15日，星期三
技公司往往会在新产品发布之前就告诉他，请他写评论。
1 co.
软件定价
---
## Page 273
以不再购买了。