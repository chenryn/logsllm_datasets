-- and grep -v the mutable line.  
-- Parse error check  
/*+ Rows() */ SELECT 1;  
INFO:  pg_hint_plan: hint syntax error at or near " "  
DETAIL:  Rows hint needs at least one relation followed by one correction term.  
LOG:  pg_hint_plan:  
used hint:  
not used hint:  
duplication hint:  
error hint:  
Rows()  
 ?column?   
----------  
        1  
(1 row)  
/*+ Rows(x) */ SELECT 1;  
INFO:  pg_hint_plan: hint syntax error at or near " "  
DETAIL:  Rows hint needs at least one relation followed by one correction term.  
LOG:  pg_hint_plan:  
used hint:  
not used hint:  
duplication hint:  
error hint:  
Rows()  
 ?column?   
----------  
        1  
(1 row)  
-- value types  
\o results/pg_hint_plan.tmpout  
EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);  
\o  
\! sql/maskout.sh results/pg_hint_plan.tmpout  
  QUERY PLAN  
----------------  
 Merge Join  (cost=xxx..xxx rows=1000 width=xxx)  
   Merge Cond: (t1.id = t2.id)  
   ->  Index Scan using t1_pkey on t1  (cost=xxx..xxx rows=10000 width=xxx)  
   ->  Index Scan using t2_pkey on t2  (cost=xxx..xxx rows=1000 width=xxx)  
\o results/pg_hint_plan.tmpout  
/*+ Rows(t1 t2 #99) */  
EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);  
LOG:  pg_hint_plan:  
used hint:  
Rows(t1 t2 #99)  
not used hint:  
duplication hint:  
error hint:  
\o  
\! sql/maskout.sh results/pg_hint_plan.tmpout  
  QUERY PLAN  
----------------  
 Merge Join  (cost=xxx..xxx rows=99 width=xxx)  
   Merge Cond: (t1.id = t2.id)  
   ->  Index Scan using t1_pkey on t1  (cost=xxx..xxx rows=10000 width=xxx)  
   ->  Index Scan using t2_pkey on t2  (cost=xxx..xxx rows=1000 width=xxx)  
\o results/pg_hint_plan.tmpout  
/*+ Rows(t1 t2 +99) */  
EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);  
LOG:  pg_hint_plan:  
used hint:  
Rows(t1 t2 +99)  
not used hint:  
duplication hint:  
error hint:  
\o  
\! sql/maskout.sh results/pg_hint_plan.tmpout  
  QUERY PLAN  
----------------  
 Merge Join  (cost=xxx..xxx rows=1099 width=xxx)  
   Merge Cond: (t1.id = t2.id)  
   ->  Index Scan using t1_pkey on t1  (cost=xxx..xxx rows=10000 width=xxx)  
   ->  Index Scan using t2_pkey on t2  (cost=xxx..xxx rows=1000 width=xxx)  
\o results/pg_hint_plan.tmpout  
/*+ Rows(t1 t2 -99) */  
EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);  
LOG:  pg_hint_plan:  
used hint:  
Rows(t1 t2 -99)  
not used hint:  
duplication hint:  
error hint:  
\o  
\! sql/maskout.sh results/pg_hint_plan.tmpout  
  QUERY PLAN  
----------------  
 Merge Join  (cost=xxx..xxx rows=901 width=xxx)  
   Merge Cond: (t1.id = t2.id)  
   ->  Index Scan using t1_pkey on t1  (cost=xxx..xxx rows=10000 width=xxx)  
   ->  Index Scan using t2_pkey on t2  (cost=xxx..xxx rows=1000 width=xxx)  
\o results/pg_hint_plan.tmpout  
/*+ Rows(t1 t2 *99) */  
EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);  
LOG:  pg_hint_plan:  
used hint:  
Rows(t1 t2 *99)  
not used hint:  
duplication hint:  
error hint:  
\o  
\! sql/maskout.sh results/pg_hint_plan.tmpout  
  QUERY PLAN  
----------------  
 Merge Join  (cost=xxx..xxx rows=99000 width=xxx)  
   Merge Cond: (t1.id = t2.id)  
   ->  Index Scan using t1_pkey on t1  (cost=xxx..xxx rows=10000 width=xxx)  
   ->  Index Scan using t2_pkey on t2  (cost=xxx..xxx rows=1000 width=xxx)  
\o results/pg_hint_plan.tmpout  
/*+ Rows(t1 t2 *0.01) */  
EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);  
LOG:  pg_hint_plan:  
used hint:  
Rows(t1 t2 *0.01)  
not used hint:  
duplication hint:  
error hint:  
\o  
\! sql/maskout.sh results/pg_hint_plan.tmpout  
  QUERY PLAN  
----------------  
 Merge Join  (cost=xxx..xxx rows=10 width=xxx)  
   Merge Cond: (t1.id = t2.id)  
   ->  Index Scan using t1_pkey on t1  (cost=xxx..xxx rows=10000 width=xxx)  
   ->  Index Scan using t2_pkey on t2  (cost=xxx..xxx rows=1000 width=xxx)  
\o results/pg_hint_plan.tmpout  
/*+ Rows(t1 t2 #aa) */  
EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id); -- ERROR  
INFO:  pg_hint_plan: hint syntax error at or near "aa"  
DETAIL:  Rows hint requires valid number as rows estimation.  
LOG:  pg_hint_plan:  
used hint:  
not used hint:  
duplication hint:  
error hint:  
Rows(t1 t2 #aa)  
\o  
\! sql/maskout.sh results/pg_hint_plan.tmpout  
  QUERY PLAN  
----------------  
 Merge Join  (cost=xxx..xxx rows=1000 width=xxx)  
   Merge Cond: (t1.id = t2.id)  
   ->  Index Scan using t1_pkey on t1  (cost=xxx..xxx rows=10000 width=xxx)  
   ->  Index Scan using t2_pkey on t2  (cost=xxx..xxx rows=1000 width=xxx)  
\o results/pg_hint_plan.tmpout  
/*+ Rows(t1 t2 /99) */  
EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id); -- ERROR  
INFO:  pg_hint_plan: hint syntax error at or near "/99"  
DETAIL:  Unrecognized rows value type notation.  
LOG:  pg_hint_plan:  
used hint:  
not used hint:  
duplication hint:  
error hint:  
Rows(t1 t2 /99)  
\o  
\! sql/maskout.sh results/pg_hint_plan.tmpout  
  QUERY PLAN  
----------------  
 Merge Join  (cost=xxx..xxx rows=1000 width=xxx)  
   Merge Cond: (t1.id = t2.id)  
   ->  Index Scan using t1_pkey on t1  (cost=xxx..xxx rows=10000 width=xxx)  
   ->  Index Scan using t2_pkey on t2  (cost=xxx..xxx rows=1000 width=xxx)  
-- round up to 1  
\o results/pg_hint_plan.tmpout  
/*+ Rows(t1 t2 -99999) */  
EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);  
WARNING:  Force estimate to be at least one row, to avoid possible divide-by-zero when interpolating costs : Rows(t1 t2 -99999)   
LOG:  pg_hint_plan:  
used hint:  
Rows(t1 t2 -99999)  
not used hint:  
duplication hint:  
error hint:  
\o  
\! sql/maskout.sh results/pg_hint_plan.tmpout  
  QUERY PLAN  
----------------  
 Merge Join  (cost=xxx..xxx rows=1 width=xxx)  
   Merge Cond: (t1.id = t2.id)  
   ->  Index Scan using t1_pkey on t1  (cost=xxx..xxx rows=10000 width=xxx)  
   ->  Index Scan using t2_pkey on t2  (cost=xxx..xxx rows=1000 width=xxx)  
-- complex join tree  
\o results/pg_hint_plan.tmpout  
EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id) JOIN t3 ON (t3.id = t2.id);  
\o  
\! sql/maskout.sh results/pg_hint_plan.tmpout  
  QUERY PLAN  
----------------  
 Merge Join  (cost=xxx..xxx rows=10 width=xxx)  
   Merge Cond: (t1.id = t3.id)  
   ->  Merge Join  (cost=xxx..xxx rows=1000 width=xxx)  
         Merge Cond: (t1.id = t2.id)  
         ->  Index Scan using t1_pkey on t1  (cost=xxx..xxx rows=10000 width=xxx)  
         ->  Index Scan using t2_pkey on t2  (cost=xxx..xxx rows=1000 width=xxx)  
   ->  Sort  (cost=xxx..xxx rows=100 width=xxx)  
         Sort Key: t3.id  
         ->  Seq Scan on t3  (cost=xxx..xxx rows=100 width=xxx)  
\o results/pg_hint_plan.tmpout  
/*+ Rows(t1 t2 #22) */  
EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id) JOIN t3 ON (t3.id = t2.id);  
LOG:  pg_hint_plan:  
used hint:  
Rows(t1 t2 #22)  
not used hint:  
duplication hint:  
error hint:  
\o  
\! sql/maskout.sh results/pg_hint_plan.tmpout  
  QUERY PLAN  
----------------  
 Merge Join  (cost=xxx..xxx rows=1 width=xxx)  
   Merge Cond: (t1.id = t3.id)  
   ->  Merge Join  (cost=xxx..xxx rows=22 width=xxx)  
         Merge Cond: (t1.id = t2.id)  
         ->  Index Scan using t1_pkey on t1  (cost=xxx..xxx rows=10000 width=xxx)  
         ->  Index Scan using t2_pkey on t2  (cost=xxx..xxx rows=1000 width=xxx)  
   ->  Sort  (cost=xxx..xxx rows=100 width=xxx)  
         Sort Key: t3.id  
         ->  Seq Scan on t3  (cost=xxx..xxx rows=100 width=xxx)  
\o results/pg_hint_plan.tmpout  
/*+ Rows(t1 t3 *10) */  
EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id) JOIN t3 ON (t3.id = t2.id);  
LOG:  pg_hint_plan:  
used hint:  
Rows(t1 t3 *10)  
not used hint:  
duplication hint:  
error hint:  
\o  
set max_parallel_workers_per_gather to DEFAULT;  
\! sql/maskout.sh results/pg_hint_plan.tmpout  
  QUERY PLAN  
----------------  
 Merge Join  (cost=xxx..xxx rows=100 width=xxx)  
   Merge Cond: (t1.id = t3.id)  
   ->  Merge Join  (cost=xxx..xxx rows=1000 width=xxx)  
         Merge Cond: (t1.id = t2.id)  
         ->  Index Scan using t1_pkey on t1  (cost=xxx..xxx rows=10000 width=xxx)  
         ->  Index Scan using t2_pkey on t2  (cost=xxx..xxx rows=1000 width=xxx)  
   ->  Sort  (cost=xxx..xxx rows=100 width=xxx)  
         Sort Key: t3.id  
         ->  Seq Scan on t3  (cost=xxx..xxx rows=100 width=xxx)  
\! rm results/pg_hint_plan.tmpout  
-- hint error level  
set client_min_messages to 'DEBUG1';  
set pg_hint_plan.debug_level to 'verbose';  
/*+ SeqScan( */ SELECT 1;  
INFO:  pg_hint_plan: hint syntax error at or near ""  
DETAIL:  Closing parenthesis is necessary.  
 ?column?   
----------  
        1  
(1 row)  
/*+ SeqScan(t1) */ SELECT * FROM t1 LIMIT 0;  
LOG:  pg_hint_plan:  
used hint:  
SeqScan(t1)  
not used hint:  
duplication hint:  
error hint:  
 id | val   
----+-----  
(0 rows)  
set pg_hint_plan.message_level to 'DEBUG1';  
set pg_hint_plan.parse_messages to 'NOTICE';  
/*+ SeqScan( */ SELECT 1;  
NOTICE:  pg_hint_plan: hint syntax error at or near ""  
DETAIL:  Closing parenthesis is necessary.  
 ?column?   
----------  
        1  
(1 row)  
/*+ SeqScan(t1) */ SELECT * FROM t1 LIMIT 0;  
DEBUG:  pg_hint_plan:  
used hint:  
SeqScan(t1)  
not used hint:  
duplication hint:  
error hint:  
 id | val   
----+-----  
(0 rows)  
-- all hint types together  
/*+ SeqScan(t1) MergeJoin(t1 t2) Leading(t1 t2) Rows(t1 t2 +10) Parallel(t1 8 hard) Set(random_page_cost 2.0)*/  
EXPLAIN (costs off) SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id) JOIN t3 ON (t3.id = t2.id);  
DEBUG:  adjusted rows 1000 to 1010  
DEBUG:  pg_hint_plan:  
used hint:  
SeqScan(t1)  
MergeJoin(t1 t2)  
Leading(t1 t2)  
Set(random_page_cost 2.0)  
Rows(t1 t2 +10)  
Parallel(t1 8 hard)  
not used hint:  
duplication hint:  
error hint:  
                   QUERY PLAN                      
-------------------------------------------------  
 Nested Loop  
   ->  Merge Join  
         Merge Cond: (t2.id = t1.id)  
         ->  Index Scan using t2_pkey on t2  
         ->  Sort  
               Sort Key: t1.id  
               ->  Gather  
                     Workers Planned: 8  
                     ->  Parallel Seq Scan on t1  
   ->  Index Scan using t3_pkey on t3  
         Index Cond: (id = t1.id)  
(11 rows)  
```  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")