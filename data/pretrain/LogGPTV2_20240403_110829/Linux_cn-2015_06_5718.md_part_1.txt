---
author: Avishek Kumar
category: 技术
comments_data:
- date: '2015-06-30 09:21:28'
  message: 对于初学者来说，感觉还是蛮好用的。
  postip: 116.231.75.111
  username: 来自 - 上海 的 Firefox/Windows 用户
- date: '2015-06-30 09:51:08'
  message: 看来yum还是默认安装啊-_-！既然选了DNF...不能理解的是用yum装dnf
  postip: 221.226.1.254
  username: 丶Nature
- date: '2015-06-30 23:36:44'
  message: 感觉很不错，收藏了！
  postip: 115.60.13.255
  username: 不简单
count:
  commentnum: 3
  favtimes: 12
  likes: 0
  sharetimes: 0
  viewnum: 31213
date: '2015-06-29 14:34:00'
editorchoice: false
excerpt: DNF即Dandified YUM，是基于RPM的Linux发行版的下一代软件包管理工具。它首先在Fedora 18中出现，并且在最近发行的Fedora
  22中替代了YUM工具集。  DNF致力于改善YUM的瓶颈，即性能、内存占用、依赖解决、速度和许多其他方面。DNF使用RPM、libsolv和hawkey库进行包管理。尽管它并未预装在CentOS和RHEL
  7中，但您可以通过yum安装，并同时使用二者。 您也许想阅读更多关于DNF的信息：  使用DNF取代Yum背后的原因  最新的DNF稳定版本是2015年5月11日发布的1.0（在写这篇文章之前）。它（以及所有DNF之前版本）主要由Python编写，并以GPL
  v2许
fromurl: http://www.tecmint.com/dnf-commands-for-fedora-rpm-package-management/
id: 5718
islctt: true
largepic: /data/attachment/album/201506/28/233921grqz2zxxqqe6fqe6.jpg
permalink: /article-5718-1.html
pic: /data/attachment/album/201506/28/233921grqz2zxxqqe6fqe6.jpg.thumb.jpg
related: []
reviewer: ''
selector: ''
summary: DNF即Dandified YUM，是基于RPM的Linux发行版的下一代软件包管理工具。它首先在Fedora 18中出现，并且在最近发行的Fedora
  22中替代了YUM工具集。  DNF致力于改善YUM的瓶颈，即性能、内存占用、依赖解决、速度和许多其他方面。DNF使用RPM、libsolv和hawkey库进行包管理。尽管它并未预装在CentOS和RHEL
  7中，但您可以通过yum安装，并同时使用二者。 您也许想阅读更多关于DNF的信息：  使用DNF取代Yum背后的原因  最新的DNF稳定版本是2015年5月11日发布的1.0（在写这篇文章之前）。它（以及所有DNF之前版本）主要由Python编写，并以GPL
  v2许
tags:
- DNF
- yum
- 安装
thumb: false
title: 27 个 Linux 下软件包管理工具 DNF 命令例子
titlepic: false
translator: wwy-hust
updated: '2015-06-29 14:34:00'
---
DNF即Dandified YUM，是基于RPM的Linux发行版的下一代软件包管理工具。它首先在Fedora 18中出现，并且在最近发行的Fedora 22中替代了[YUM工具集](http://www.tecmint.com/20-linux-yum-yellowdog-updater-modified-commands-for-package-mangement/)。
![](/data/attachment/album/201506/28/233921grqz2zxxqqe6fqe6.jpg)
DNF致力于改善YUM的瓶颈，即性能、内存占用、依赖解决、速度和许多其他方面。DNF使用RPM、libsolv和hawkey库进行包管理。尽管它并未预装在CentOS和RHEL 7中，但您可以通过yum安装，并同时使用二者。
您也许想阅读更多关于DNF的信息：
* [使用DNF取代Yum背后的原因](http://www.tecmint.com/dnf-next-generation-package-management-utility-for-linux/)
最新的DNF稳定版本是2015年5月11日发布的1.0（在写这篇文章之前）。它（以及所有DNF之前版本）主要由Python编写，并以GPL v2许可证发布。
### 安装DNF
尽管Fedora 22官方已经过渡到了DNF，但DNF并不在RHEL/CentOS 7的默认仓库中。
为了在RHEL/CentOS系统中安装DNF，您需要首先安装和开启epel-release仓库。
```
# yum install epel-release
或
# yum install epel-release -y
```
尽管并不建议在使用yum时添上'-y'选项，因为最好还是看看什么将安装在您的系统中。但如果您对此并不在意，则您可以使用'-y'选项以自动化的安装而无需用户干预。
接下来，使用yum命令从epel-realease仓库安装DNF包。
```
# yum install dnf
```
在您装完dnf后，我会向您展示27个实用的dnf命令和例子，以便帮您更容易和高效的管理基于RPM包的发行版。
### 1. 检查DNF版本
检查您的系统上安装的DNF版本。
```
# dnf --version
```
![检查DNF版本](/data/attachment/album/201506/28/233922bkxgilk7iiygl3t1.gif)
### 2. 列出启用的DNF仓库
dnf命令中的'repolist'选项将显示您系统中所有启用的仓库。
```
# dnf repolist
```
![检查所有开启的仓库](/data/attachment/album/201506/28/233922sx5uyeu1u5xfjc58.gif)
### 3. 列出所有启用和禁用的DNF仓库
'repolist all'选项将显示您系统中所有启用/禁用的仓库。
```
# dnf repolist all
```
![列出所有启用/禁用的仓库](/data/attachment/album/201506/28/233923q847agnzwekn47z9.gif)
### 4. 用DNF列出所有可用的且已安装的软件包
'dnf list'命令将列出所有仓库中所有可用的软件包和您Linux系统中已安装的软件包。
```
# dnf list
```
![用DNF列出所有的软件包](/data/attachment/album/201506/28/233923vnc4hclwwe4c014z.png)
### 5. 用DNF列出所有已安装的软件包
尽管'dnf list'命令将列出所有仓库中所有可用的软件包和已安装的软件包。然而像下面一样使用'list installed'选项将只列出已安装的软件包。
```
# dnf list installed
```
![列出已安装的软件包](/data/attachment/album/201506/28/233924gd6zcwldhlehkldm.png)
### 6. 用DNF列出所有可用的软件包
类似的，可以用'list available'选项列出所有开启的仓库中所有可用的软件包。
```
# dnf list available
```
![用DNF列出可用的软件包](/data/attachment/album/201506/28/233926v9a99xgb15w7gxzx.png)
### 7. 使用DNF查找软件包
如果您不太清楚您想安装的软件包的名字，这种情况下，您可以使用'search'选项来搜索匹配该字符（例如，nano）和字符串的软件包。
```
# dnf search nano
```
![通过关键字搜索软件包](/data/attachment/album/201506/28/233927zho6agohaovf56ss.gif)
### 8. 查看哪个软件包提供了某个文件/子软件包？
dnf的选项'provides'能查找提供了某个文件/子软件包的软件包名。例如，如果您想找找哪个软件包提供了您系统中的'/bin/bash'文件，可以使用下面的命令
```
# dnf provides /bin/bash
```
![查找提供文件的软件包](/data/attachment/album/201506/28/233927n7a952s99lj8v7s7.gif)
### 9. 使用DNF获得一个软件包的详细信息
如果您想在安装一个软件包前知道它的详细信息，您可以使用'info'来获得一个软件包的详细信息，例如：
```
# dnf info nano
```
![用DNF查看软件信息](/data/attachment/album/201506/28/233928rjdo34w2adj7b22j.gif)
### 10. 使用DNF安装软件包
想安装一个叫nano的软件包，只需运行下面的命令，它会为nano自动的解决和安装所有的依赖。
```
# dnf install nano
```
![用DNF安装软件](/data/attachment/album/201506/28/233930t12ja8txf6s6m8a1.gif)
### 11. 使用DNF更新一个软件包
您可能只想更新一个特定的包（例如，systemd）并且保留系统内剩余软件包不变。
```
# dnf update systemd
```
![更新一个软件包](/data/attachment/album/201506/28/233932mmeppqzc8ch3ccly.gif)
### 12. 使用DNF检查系统更新
检查系统中安装的所有软件包的更新可以简单的使用如下命令：
```
# dnf check-update