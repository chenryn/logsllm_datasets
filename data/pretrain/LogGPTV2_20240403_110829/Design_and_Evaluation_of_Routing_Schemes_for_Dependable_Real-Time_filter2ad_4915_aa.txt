title:Design and Evaluation of Routing Schemes for Dependable Real-Time
Connections
author:Songkuk Kim and
Daji Qiao and
Sharath Kodase and
Kang G. Shin
Design and Evaluation of  Routing Schemes for Dependable Real-Time 
Connections* 
Songkuk Kim, Daji Qiao, Sharath Kodase, and  Kang G. Shin 
Department  of  Electrical Engineering  and  Computer Science 
The University of  Michigan, Ann  Arbor, MI  48109-2122 
Real-Time Computing Laboratory 
Phones:  734-763-0391 (voice); 734-763-8094 (fax) 
E-mail: { songkuk, dqiao , skodase , kgshin}@eecs . umich . edu 
Abstract 
Dependability-of-Service  (DOS) has  become  a n   im- 
portant  requirement  for  real-time  applications,  such 
as  remote  medical  services,  business-critical  network 
meetings,  and  command  tY  control  applications.  The 
Dependable  Real-Time  Protocol  ( D R T P )  [5,  6,  7'1  in 
which  each  dependable  real-time  connection is  realized 
with  one primary  and  one  or  more  backup  channels, 
has been shown to be  an effective way of  providing DOS. 
How  to  route  both  primary  and  backup  channels  for 
each  dependable  real-tame  connection  is of  vital impor- 
tance  to the success  of  failure  recovery  and  the  reduc- 
tion of  overhead  in providing  DOS. 
I n  this paper,  we propose  and  evaluate  three  differ- 
ent schemes for routing  the primary  and  backup  chan- 
nels  of  each  dependable  real-time  connection.  Speciji- 
cally,  we present  methods  based  o n  link-state  informa- 
tion  and  bounded  flooding  to  discover  routes  for pri- 
mary and  backup  channels while satisfying  the required 
Quality-of-Service  (QoS).  The  costs  of  link-state  and 
flooding  algorithms  are  reduced  significantly  by  using 
the fact  that the probability  of  success  in failure  recov- 
ery can be  estimated with simple link-state information, 
and  by  bounding  the  flooded  region  within  a n   ellipse 
with the two communication end-points  as loci.  Our in- 
depth simulations have shown that the proposed  routing 
schemes  are  highly  effective,  providing fault-tolerance 
of 87% or higher with the network  capacity  overhead  of 
less  than 25%. 
*The work  reported  in  this  paper  was supported  in  part  by 
the Office of Naval Research  under Grant No. N00014-99-1-0299. 
Any opinions, findings,  and conclusions  or recommendations ex- 
pressed  in this publication  are those  of  the authors and  do not 
necessarily  reflect  the views of  the ONR. 
Keywords: Dependable real-time  (DR-) connection, 
dependable real-time protocol  (DRTP), primary  and 
backup channels, backup multiplexing, link-state 
routing, bounded flooding 
1. Introduction 
Real-time  transport  of  continuous  media has tradi- 
tionally been achieved by circuit switching in telephony 
services or  by  broadcasting over  shared media in tele- 
vision services.  In packet-switched  networks,  however, 
continuous media requires a special care since the end- 
to-end  packet  delay and throughput of  a media stream 
are inherently non-deterministic.  Such end-to-end per- 
formance characteristics which are necessary to achieve 
the required  functionality of  these applications are of- 
ten  called  Quality-of-Service  (QoS) .  Typical  perfor- 
mance  QoS  includes  message  throughput , end-to-end 
delay  and delay jitter. 
In  recent  years,  the rapid  improvement  of  network 
connectivity  and  link  capacity has  expanded  the  ap- 
plication  domain  of  real-time  communication  service 
to  safety-  and  business-  critical applications, such  as 
remote  medical  services,  business  video  conferences, 
and  military  command,  control  &  communication. 
These  applications require  support  for  Dependability- 
of-Service  (DOS) - in  addition  to  support  for  per- 
formance  QoS  - in  order  to deal  wit,h network  fail- 
ures  which  are  more  likely  to  occur  as  the  network 
gets larger  and  more  complex.  For  DOS support, one 
must  consider  both  transient  and  persistent  network 
failures.  A  typical  example  transient  failure  is  tem- 
porary  packet  loss  due  to either  network  congestion 
or  data corruption.  Persistent failures  include  break- 
down of network components (links and switches).  Re- 
0-7695-1101-5/01 $10.00 0 2001 IEEE 
285 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 04:00:49 UTC from IEEE Xplore.  Restrictions apply. 
liable transport  protocols like  TCP can  handle tran- 
sient packet losses by acknowledgment  and retransmis- 
sion. Forward-error-correction (FEC) can also be used 
to deal with transient failures, particularly for real-time 
communication service.  To handle persistent  network 
failures, various dependability schemes have been  pro- 
posed,  which  can  be  broadly  classified  as  reactzve  or 
proactzwe. 
Reactive schemes deal with failures  only  after their 
occurrences [3]. To restore a real-time connection from 
a network component failure, one has to set up a new 
real-time connection which does not include any faulty 
components.  Since no resource  is reserved  a przorz  for 
the  purpose  of  fault-tolerance,  this  method  does  not 
incur  overhead  in  the  absence  of  failures.  However, 
it  cannot  give  any  guarantee  on  failure  recovery  due 
to potential resource shortage and/or  contention in at- 
tempting  recovery  from  failures.  Banerjea  extended 
this  approach further  in  [2]  by  proposing  delayed  re- 
tries  to  spread  simultaneous  recovery  attempts.  He 
suggested a random  delay  before  starting each  recov- 
ery  process  and a retry  along  the  same path  with  an 
exponential back-off in  case the recovery process  fails. 
However, this method may require several trials to suc- 
ceed, thus  delaying service resumption and increasing 
network traffic.  The recovery can take several seconds 
or longer, especially in heavily-loaded  networks. 
Proactive schemes  achieve  dependability  by  means 
of  additional  resources  reserved  a  przori  in  the  net- 
In  the  multi-copy  method  [8,  lo],  multiple 
work. 
copies of  a packet are sent simultaneously via  disjoint 
paths.  This method  attempts  to achieve  both  timely 
and  reliable  delivery  at  the  same  time.  Although  it 
can  handle  network  failures  without  service  disrup- 
tion, this method introduces a large resource overhead 
and  cannot  guarantee  timely  delivery  due  to  its  re- 
liance on best-effort  delivery of  packet copies.  Disper- 
sity routing [l] combines forward-error-correction with 
multiple-copy transmissions, which allows for a tradeoff 
between resource overhead and fault-tolerance capabil- 
ity.  In  the  Single Failure Immune  (SFI) method  [12], 
additional resources are reserved in the vicinity of each 
real-time  channel,  and the failed  components  are  de- 
In  [13], the 
toured  by  using  the  reserved  resources. 
SFI method  was extended to combat special patterns 
of  multiple failures in a hexagonal mesh  network. 
Spare resource allocation [4, 5, 6, 71  is  another  ap- 
proach that employs failure detection and recovery for 
fault-tolerance.  Additional (called spare) resources are 
reserved  a priori  solely for  the purpose of  speedy ser- 
vice  recovery from possible  network failures.  The key 
advantage of  proactive schemes is that the latency and 
success-probability of  service recovery are usually  bet- 
ter than those of  the reactive schemes.  Note, however, 
that the spare resources  cannot be  used  to accommo- 
date other real-time connections, although they might 
be used  for transporting best-effort  traffic.  Therefore, 
given the same amount of network resources, the proac- 
tive schemes usually  result  in a lower network utiliza- 
tion  than  the  reactive  schemes.  Two  main  issues  in 
developing proactive schemes are to reduce and bound 
the service-recovery  latency and to minimize the fault- 
tolerance overhead. 
Han and Shin [5, 6, 71  proposed the dependable real- 
time protocol  (DRTP), a typical spare resource alloca- 
tion scheme, which  consists of  the following four steps: 
(1) establishment of  primary and backup channels, (2) 
detection of  network failures, (3) failure reporting and 
channel  switching,  and  (4)  resource  reconfiguration. 
How  to route the primary  and backup channels for  a 
dependable  real-time  connection  is  a  key  element  of 
DRTP, which, despite its importance, has not yet been 
addressed adequately.  In this paper, we  propose three 
different routing schemes for primary and backup chan- 
nels, and comparatively evaluate their performances in 
terms of  fault-tolerance and resource overhead. 
The rest  of  the  paper  is  organized as follows.  Sec- 
tion  2  highlights the key  features of  DRTP. Section  3 
proposes  two  link-state  routing  schemes,  while  Sec- 
tion  4 presents  a third  routing  scheme using  bounded 
flooding.  Section  5  explains  how  to  multiplex  back- 
ups on spare resources  and when to increase spare re- 
sources.  Section  6 presents the detailed simulation re- 
sults and valuates  the  performance  of  these  schemes. 
The paper concludes  with Section 7. 
2.  Dependable Real-Time Protocol 
Each  dependable  real-time  (DR-)  connection  con- 
sists of  one primary and one or more  backup  channels. 
Upon  detection  of  a  failure on  the  primary  channel, 
one  of  its  backups  is  promoted  to  the  new  primary. 
Since  a backup  is  set  up  before  a failure  of  the  pri- 
mary,  it  can  be  activated  immediately,  without  the 
time-consuming, and sometimes unsuccessful,  channel 
(re)-establishment process. 
A backup channel does not carry any real-time traf- 
fic'  until it is activated, and hence, it does not consume 
resources in the absence of  failures. However, a backup 
channel  is  not  free, since  it  requires reservation of  at 
least2 as much  resources  as its primary  channel.  As  a 
result, equipping each DR-connection even with a sin- 
gle  backup disjoint from its primary  reduces the  net- 
work  capacity by  at least  50%, which  is too expensive 
'It  may carry best-effort  traffic, though. 
*Note that a backup may run through a longer path than the 
corresponding  primary. 
286 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 04:00:49 UTC from IEEE Xplore.  Restrictions apply. 
to be practically  useful.  To deal with  this problem, a 
resource-sharing technique, called  backup multiplexing, 
was  introduced  in  DRTP  [5, 6,  71.  The basic  idea  of 
backup multiplexing is that, on each link, instead of re- 
serving all of  the resources  necessary  for  each  backup, 
only  a small fraction  of  the  necessary  resources  is  re- 
served and then shared by all backups running through 
the  link,  i.e.,  overbooking  link  resources  for  backups. 
The amount of  total necessary spare resources is deter- 
mined  on a hop-by-hop basis  by  considering  the rela- 
tion among all the backups traversing the same link. 
The fault-tolerance of a DR-connection  depends pri- 
marily  on  the  probability  of  backup  activation.  The 
backup activation can fail  due to the lack of  resources 
when  the spare resources  are multiplexed  on  backups 
to reduce the  resource overhead.  Resource  overbook- 
ing and sharing by backups would be acceptable if their 
corresponding primaries are disjoint. 
Backup  channels  are said  to have  conflicts  if  they 
traverse  the  same  link  and  their  corresponding  pri- 
maries overlap, or share link(s). Some of the conflicting 
backups multiplexed over the same spare resources may 
fail to be activated when their corresponding primaries 
fail  (near-)simultaneously.  To  provide  better  fault- 
tolerance, backup  conflicts  should  be  minimized, and 
in the case of  a conflict, backup multiplexing should be 
avoided or minimized. 
Figure 1 illustrates the idea of  backup multiplexing 
using a simple 3 x 3 mesh network. Each connection be- 
tween two nodes has two unidirectional links.  Although 
there are 24  uni-directional  links,  we  only  consider  13 
of  them  in  the  following  examples.  There  are  three 
DR-connections  D1, D2,  and  D3.  The primary  and 
backup  channels  of  these  connections  are shown  with 
solid and dashed arrows, respectively.  In this example, 
we  assume that only a single link can fail between  two 
successive  recovery  actions.  Consider  link  Ls, which 
is  part  of  the  routes  of  the  backup  channels  B1  and 
BP. Because  the  primary  channels  PI  and  P2  do not 
overlap, any single link failure can cause at most one of 
these primaries to be switched to its backup.  Thus, B1 
and B2  will never contend for the reserved resources on 
Lg, and therefore, the backup multiplexing on Ls  suc- 
cessfully reduces the resource overhead without affect- 
ing the  fault-tolerance capability.  Now,  let’s consider 
link  L7,  which  is  used  by  the  backup  routes B1  and 
B3.  Since PI and P3  overlap  at L I S ,  if  L13  fails, both 
DR-connections need  to be switched  to their backups. 
Hence,  the  resource needs  on  L7  exceed  the  reserved 
amount,  and  L7  can  accommodate only  one  connec- 
tion.  As a result, one of the DR-connections  will fail to 
activate its backup.  If 03’s &OS requirement (e.g., end- 
to-end delay) is too tight to use the longer path, then it 
Figure 1. An example of backup multiplexing 
cannot recover  from  the failure of  L I 3 .  Therefore, the 