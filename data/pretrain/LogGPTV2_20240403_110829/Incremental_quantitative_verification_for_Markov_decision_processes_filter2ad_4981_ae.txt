5
6
2, 4
2, 8
2, 12
2, 16
2, 20
3, 1
3, 2
3, 3
3, 4
28,480
96,302
345,000
1,295,218
5,007,548
9,062
16,870
24,678
32,486
40,294
729,337
1,418,545
2,259,817
3,253,153
1.51
3.63
10.1
32.7
118.4
4.33
17.3
38.5
71.7
114.5
119.9
367.8
570.4
934.8
1.62
4.09
14.5
60.8
313.1
5.63
25.3
62.7
127.7
215.8
148.3
552.3
1,163.1
2,361.9
1.63
4.27
14.6
48.6
172.1
72.6
554.2
1,773.9
4,163.7
7,793.4
209.0
1,068.0
2,887.6
6,547.4
0.03
0.15
0.33
1.06
2.31
0.07
0.14
0.20
0.28
0.33
2.24
4.65
5.47
7.50
0.39
1.22
3.00
7.14
16.0
11.1
12.5
14.3
16.8
19.3
356.6
381.9
405.5
429.1
0.11
0.51
1.63
3.68
9.55
0.18
0.35
0.44
0.68
0.79
5.47
8.89
11.5
13.6
0.22
0.57
2.16
5.81
18.8
0.11
0.16
0.21
0.35
0.35
8.71
10.1
11.2
12.6
PERFORMANCE COMPARISON FOR HYBRID TARJAN WITH REWARDS.
Table III
N, K
States
3, 2
3, 4
3, 8
3, 12
3, 16
3, 20
4, 2
4, 4
4, 8
4, 12
4, 16
4, 20
5, 2
5, 4
5, 8
5, 12
5, 16
5, 20
1,806
2,894
5,070
7,246
9,422
11,598
7,478
12,406
22,262
32,118
41,974
51,830
30,166
50,454
91,030
131,606
172,182
212,758
Sparse
Total
time (s)
0.225
0.505
2.15
6.14
14.5
26.4
0.81
2.21
10.9
32.9
76.0
150.1
2.30
8.22
44.0
134.7
311.4
605.8
MTBDD
Total
time (s)
46.4
286.1
2,018.6
6,561.9
16,158.1
-
-
-
-
-
-
-
-
-
-
-
-
-
Hybrid Tarjan
SCC comp.
time (s)
Total
time (s)
0.11
0.17
0.26
0.45
0.48
0.59
0.65
1.25
1.85
2.68
3.99
5.39
3.62
6.72
11.8
15.9
25.6
29.1
12.5
12.5
13.2
13.8
14.7
15.4
55.3
58.7
63.8
69.5
75.6
81.4
235.9
250.6
286.5
314.2
356.4
389.9
In addition to reachability probabilities, we extend the
hybrid Tarjan algorithm and SCC-based LP computation to
compute maximum expected reward properties. As men-
tioned earlier, this is a straightforward adaption. Experimen-
tal results for the Consensus study and the property “the
maximum expected steps for the ﬁrst K rounds” are shown in
Table III. Note that: (1) the model is slightly different from
the one used for reachability probabilities so the number of
states differs; (2) PRISM’s “Hybrid” engine does not support
this class of properties so is not compared to.
We also consider an additional case study to illustrate
computation of expected reward properties: a model of the
IEEE 1394 FireWire Root Contention Protocol [27]. This is a
leader election algorithm for a multimedia bus; the property
we check is “the maximum expected time to elect a leader”.
The model has two parameters, delay and fast. Figure 1
shows the total running time for the hybrid Tarjan algorithm
and PRISM’s sparse engine, with three different values of
fast and varying values of delay.
The experimental results for computation of both maxi-
mum reachability probabilities and maximum expected re-
wards clearly demonstrate the advantage of the new ap-
proach, which outperforms the other PRISM engines in
most cases. In Figure 1, we observe trade-offs between
the contrasting techniques for different model parameter
values. More precisely, the SCC-based approach becomes
more beneﬁcial when value iteration is slow to converge in
the full model.
Crucially, we are also able to handle larger models than
for the explicit-state implementation presented earlier in
the paper. Lastly, we note that the hybrid Tarjan algorithm
performs well irrespective of whether we are applying incre-
mental veriﬁcation: this means it is of independent beneﬁt,
for general quantitative veriﬁcation purposes.
Finally, we note that
the hybrid Tarjan SCC decom-
position outperforms the existing BDD-based algorithms
implemented in PRISM.
VII. CONCLUSION
We have presented techniques for optimising quantita-
tive veriﬁcation of MDPs, based on a decomposition into
strongly connected components. This is shown to reduce
the amount of graph-based computation required and to
provide opportunities for parallelisation. In particular, we
also focused on the applicability of this to incremental
veriﬁcation: re-analysing an MDP after small changes in its
probability values, by re-using existing veriﬁcation results.
In the future, we plan to develop these techniques further,
for example, considering also the case where the structure
of the model changes.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:42:25 UTC from IEEE Xplore.  Restrictions apply. 
369(a) fast=0.1
(b) fast=0.01
(c) fast=0.001
Figure 1. Performance comparison for hybrid Tarjan computing expected reward (FireWire case study)
ACKNOWLEDGEMENTS
The authors are part supported by European Commission
FP 7 project CONNECT (IST 231167), ERC Advanced
Grant VERIWARE, DARPA-funded project PRISMATIC
and EPSRC project PSS (EP/F001096/1).
REFERENCES
[1] H. Hansson and B. Jonsson, “A logic for reasoning about time
and reliability,” Formal Aspects of Computing, vol. 6, no. 5,
pp. 512–535, 1994.
[2] A. Bianco and L. de Alfaro, “Model checking of probabilistic
and nondeterministic systems,” in Proc. FSTTCS’95, ser.
LNCS, vol. 1026. Springer, 1995.
[3] M. Kwiatkowska, G. Norman, and D. Parker, “PRISM 4.0:
Veriﬁcation of probabilistic real-time systems,” in Proc.
CAV’11, ser. LNCS. Springer, 2011.
[4] R. Calinescu and M. Kwiatkowska, “Using quantitative anal-
ysis to implement autonomic IT systems,” in Proc. ICSE’09,
2009, pp. 100–110.
[5] A. Filieri, C. Ghezzi, and G. Tamburrelli, “Run-time efﬁcient
ACM,
probabilistic model checking,” in Proc. ICSE’11.
2011.
[6] F. Ciesinski, C. Baier, M. Gr¨oßer, and J. Klein, “Reduction
techniques for model checking Markov decision processes,”
in Proc. QEST’08.
IEEE CS Press, 2008, pp. 45–54.
[7] R. Tarjan, “Depth-ﬁrst search and linear graph algorithms,”
SIAM Journal on Computing, vol. 1, pp. 146–160, 1972.
[8] R. Bloem, H. N. Gabow, and F. Somenzi, “An algorithm
for strongly connected component analysis in log symbolic
steps,” in Proc. FMCAD’00, ser. LNCS, vol. 1954. Springer,
2000, pp. 37–54.
[9] R. Gentilini, C. Piazza, and A. Policriti, “Computing strongly
connected components in a linear number of symbolic steps,”
in Proc. SODA’03, 2003, pp. 573–582.
[10] E. ´Abrah´am, N. Jansen, R. Wimmer, J. Katoen, and B. Becker,
“DTMC model checking by SCC reduction,” in Proc.
QEST’10.
IEEE CS Press, 2010, pp. 37–46.
[11] O. V. Sokolsky and S. A. Smolka, “Incremental model
checking in the modal mu-calculus,” in CAV 94, ser. LNCS,
vol. 818. Springer, 1994, pp. 351–363.
[12] C. L. Conway, K. S. Namjoshi, D. Dams, and S. A. Ed-
wards, “Incremental algorithms for inter-procedural analysis
of safety properties,” in Proc. CAV’05, ser. LNCS, vol. 3576.
Springer, 2005, pp. 449–461.
[13] K. Heljanko, T. Junttila, and T. Latvala, “Incremental and
complete bounded model checking for full PLTL,” in CAV
05, ser. LNCS, vol. 3576. Springer, 2005, pp. 98–111.
[14] J. Kemeny, J. Snell, and A. Knapp, Denumerable Markov
Chains, 2nd ed. Springer-Verlag, 1976.
FOCS’77.
[15] A. Pnueli, “The temporal
logic of programs,” in Proc.
IEEE Computer Society Press, 1977, pp. 46–57.
[16] C. Courcoubetis and M. Yannakakis, “The complexity of
probabilistic veriﬁcation,” J. of the ACM, vol. 42, no. 4, 1995.
[17] L. de Alfaro, “Formal veriﬁcation of probabilistic systems,”
Ph.D. dissertation, Stanford University, 1997.
[18] M. Puterman, Markov Decision Processes: Discrete Stochas-
tic Dynamic Programming.
John Wiley and Sons, 1994.
[19] E. Nuutila and E. Soisalon-soininen, “On ﬁnding the strongly
connected components in a directed graph,” Information Pro-
cessing Letters, vol. 49, pp. 9–14, 1994.
[20] M. Kwiatkowska, G. Norman, D. Parker, and J. Sproston,
“Performance analysis of probabilistic timed automata using
digital clocks,” FMSD, vol. 29, 2006.
[21] M. Kwiatkowska, G. Norman, and R. Segala, “Automated
veriﬁcation of a randomized distributed consensus protocol
using Cadence SMV and PRISM,” in Proc. CAV’01, ser.
LNCS, vol. 2102. Springer, 2001.
[22] J. Aspnes and M. Herlihy, “Fast randomized consensus using
shared memory,” Journal of Algorithms, vol. 15, no. 1, 1990.
[23] M. Kwiatkowska, G. Norman, and J. Sproston, “Probabilistic
model checking of the IEEE 802.11 wireless local area
network protocol,” in Proc. PAPM/PROBMIV’02, ser. LNCS,
vol. 2399. Springer, 2002, pp. 169–187.
[24] http://www.prismmodelchecker.org/casestudies/.
[25] R. Bryant, “Graph-based algorithms for Boolean function
manipulation,” IEEE Transactions on Computers, vol. C-35,
no. 8, pp. 677–691, 1986.
[26] J. Burch, E. Clarke, K. McMillan, D. Dill, and J. Hwang,
“Symbolic model checking: 1020 states and beyond,” in Proc.
LICS’90.
IEEE Computer Society Press, 1990, pp. 428–439.
[27] M. Kwiatkowska, G. Norman, and J. Sproston, “Probabilistic
model checking of deadline properties in the IEEE 1394
FireWire root contention protocol,” Formal Aspects of Com-
puting, vol. 14, no. 3, pp. 295–318, 2003.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:42:25 UTC from IEEE Xplore.  Restrictions apply. 
 0 30 60 90 120 150 180 210 240 270 300 330 0 3 6 9 12 15 18 21 24 27 30 33Verification timeDelaySparse Hybrid Tarjan  0 30 60 90 120 150 180 210 240 270 300 330 0 3 6 9 12 15 18 21 24 27 30 33Verification timeDelaySparse Hybrid Tarjan  0 150 300 450 600 750 900 1050 1200 1350 1500 0 3 6 9 12 15 18 21 24 27 30 33Verification timeDelaySparse Hybrid Tarjan 370