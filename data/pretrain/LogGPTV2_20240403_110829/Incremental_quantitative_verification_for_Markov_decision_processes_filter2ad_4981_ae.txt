### Performance Comparison for Hybrid Tarjan with Rewards

**Table III: Performance Comparison for Hybrid Tarjan with Rewards**

| N, K | States  | Sparse Total Time (s) | MTBDD Total Time (s) | Hybrid Tarjan SCC Comp. Time (s) | Hybrid Tarjan Total Time (s) |
|------|---------|-----------------------|-----------------------|---------------------------------|------------------------------|
| 3, 2 | 1,806   | 0.225                 | 46.4                  | 0.11                            | 12.5                         |
| 3, 4 | 2,894   | 0.505                 | 286.1                 | 0.17                            | 12.5                         |
| 3, 8 | 5,070   | 2.15                  | 2,018.6               | 0.26                            | 13.2                         |
| 3, 12 | 7,246   | 6.14                  | 6,561.9               | 0.45                            | 13.8                         |
| 3, 16 | 9,422   | 14.5                  | 16,158.1              | 0.48                            | 14.7                         |
| 3, 20 | 11,598  | 26.4                  | -                     | 0.59                            | 15.4                         |
| 4, 2 | 7,478   | 0.81                  | -                     | 0.65                            | 55.3                         |
| 4, 4 | 12,406  | 2.21                  | -                     | 1.25                            | 58.7                         |
| 4, 8 | 22,262  | 10.9                  | -                     | 1.85                            | 63.8                         |
| 4, 12 | 32,118  | 32.9                  | -                     | 2.68                            | 69.5                         |
| 4, 16 | 41,974  | 76.0                  | -                     | 3.99                            | 75.6                         |
| 4, 20 | 51,830  | 150.1                 | -                     | 5.39                            | 81.4                         |
| 5, 2 | 30,166  | 2.30                  | -                     | 3.62                            | 235.9                        |
| 5, 4 | 50,454  | 8.22                  | -                     | 6.72                            | 250.6                        |
| 5, 8 | 91,030  | 44.0                  | -                     | 11.8                            | 286.5                        |
| 5, 12 | 131,606 | 134.7                 | -                     | 15.9                            | 314.2                        |
| 5, 16 | 172,182 | 311.4                 | -                     | 25.6                            | 356.4                        |
| 5, 20 | 212,758 | 605.8                 | -                     | 29.1                            | 389.9                        |

In addition to reachability probabilities, we have extended the hybrid Tarjan algorithm and strongly connected component (SCC)-based linear programming (LP) computation to compute maximum expected reward properties. This extension is a straightforward adaptation. The experimental results for the Consensus study and the property "the maximum expected steps for the first K rounds" are shown in Table III. Note that:

1. The model used for these experiments is slightly different from the one used for reachability probabilities, leading to a different number of states.
2. PRISM's "Hybrid" engine does not support this class of properties and is therefore not included in the comparison.

We also conducted an additional case study to illustrate the computation of expected reward properties: a model of the IEEE 1394 FireWire Root Contention Protocol [27]. This protocol is a leader election algorithm for a multimedia bus, and the property we checked is "the maximum expected time to elect a leader." The model has two parameters, `delay` and `fast`. Figure 1 shows the total running time for the hybrid Tarjan algorithm and PRISM's sparse engine, with three different values of `fast` and varying values of `delay`.

The experimental results for the computation of both maximum reachability probabilities and maximum expected rewards clearly demonstrate the advantage of the new approach, which outperforms the other PRISM engines in most cases. In Figure 1, we observe trade-offs between the contrasting techniques for different model parameter values. More precisely, the SCC-based approach becomes more beneficial when value iteration is slow to converge in the full model.

Crucially, we are also able to handle larger models than those handled by the explicit-state implementation presented earlier in the paper. Additionally, the hybrid Tarjan algorithm performs well irrespective of whether we are applying incremental verification, making it independently beneficial for general quantitative verification purposes.

Finally, we note that the hybrid Tarjan SCC decomposition outperforms the existing BDD-based algorithms implemented in PRISM.

### Conclusion

We have presented techniques for optimizing the quantitative verification of Markov Decision Processes (MDPs) based on a decomposition into strongly connected components. This approach reduces the amount of graph-based computation required and provides opportunities for parallelization. We have also focused on the applicability of this method to incremental verification, where an MDP is re-analyzed after small changes in its probability values, reusing existing verification results. In the future, we plan to further develop these techniques, including considering cases where the structure of the model changes.

### Acknowledgements

The authors are partially supported by the European Commission FP7 project CONNECT (IST 231167), ERC Advanced Grant VERIWARE, DARPA-funded project PRISMATIC, and EPSRC project PSS (EP/F001096/1).

### References

[1] H. Hansson and B. Jonsson, “A logic for reasoning about time and reliability,” Formal Aspects of Computing, vol. 6, no. 5, pp. 512–535, 1994.

[2] A. Bianco and L. de Alfaro, “Model checking of probabilistic and nondeterministic systems,” in Proc. FSTTCS’95, ser. LNCS, vol. 1026. Springer, 1995.

[3] M. Kwiatkowska, G. Norman, and D. Parker, “PRISM 4.0: Verification of probabilistic real-time systems,” in Proc. CAV’11, ser. LNCS. Springer, 2011.

[4] R. Calinescu and M. Kwiatkowska, “Using quantitative analysis to implement autonomic IT systems,” in Proc. ICSE’09, 2009, pp. 100–110.

[5] A. Filieri, C. Ghezzi, and G. Tamburrelli, “Run-time efficient probabilistic model checking,” in Proc. ICSE’11. ACM, 2011.

[6] F. Ciesinski, C. Baier, M. Größer, and J. Klein, “Reduction techniques for model checking Markov decision processes,” in Proc. QEST’08. IEEE CS Press, 2008, pp. 45–54.

[7] R. Tarjan, “Depth-first search and linear graph algorithms,” SIAM Journal on Computing, vol. 1, pp. 146–160, 1972.

[8] R. Bloem, H. N. Gabow, and F. Somenzi, “An algorithm for strongly connected component analysis in log symbolic steps,” in Proc. FMCAD’00, ser. LNCS, vol. 1954. Springer, 2000, pp. 37–54.

[9] R. Gentilini, C. Piazza, and A. Policriti, “Computing strongly connected components in a linear number of symbolic steps,” in Proc. SODA’03, 2003, pp. 573–582.

[10] E. Abrahám, N. Jansen, R. Wimmer, J. Katoen, and B. Becker, “DTMC model checking by SCC reduction,” in Proc. QEST’10. IEEE CS Press, 2010, pp. 37–46.

[11] O. V. Sokolsky and S. A. Smolka, “Incremental model checking in the modal mu-calculus,” in CAV 94, ser. LNCS, vol. 818. Springer, 1994, pp. 351–363.

[12] C. L. Conway, K. S. Namjoshi, D. Dams, and S. A. Edwards, “Incremental algorithms for inter-procedural analysis of safety properties,” in Proc. CAV’05, ser. LNCS, vol. 3576. Springer, 2005, pp. 449–461.

[13] K. Heljanko, T. Junttila, and T. Latvala, “Incremental and complete bounded model checking for full PLTL,” in CAV 05, ser. LNCS, vol. 3576. Springer, 2005, pp. 98–111.

[14] J. Kemeny, J. Snell, and A. Knapp, Denumerable Markov Chains, 2nd ed. Springer-Verlag, 1976.

[15] A. Pnueli, “The temporal logic of programs,” in Proc. FOCS’77. IEEE Computer Society Press, 1977, pp. 46–57.

[16] C. Courcoubetis and M. Yannakakis, “The complexity of probabilistic verification,” J. of the ACM, vol. 42, no. 4, 1995.

[17] L. de Alfaro, “Formal verification of probabilistic systems,” Ph.D. dissertation, Stanford University, 1997.

[18] M. Puterman, Markov Decision Processes: Discrete Stochastic Dynamic Programming. John Wiley and Sons, 1994.

[19] E. Nuutila and E. Soisalon-soininen, “On finding the strongly connected components in a directed graph,” Information Processing Letters, vol. 49, pp. 9–14, 1994.

[20] M. Kwiatkowska, G. Norman, D. Parker, and J. Sproston, “Performance analysis of probabilistic timed automata using digital clocks,” FMSD, vol. 29, 2006.

[21] M. Kwiatkowska, G. Norman, and R. Segala, “Automated verification of a randomized distributed consensus protocol using Cadence SMV and PRISM,” in Proc. CAV’01, ser. LNCS, vol. 2102. Springer, 2001.

[22] J. Aspnes and M. Herlihy, “Fast randomized consensus using shared memory,” Journal of Algorithms, vol. 15, no. 1, 1990.

[23] M. Kwiatkowska, G. Norman, and J. Sproston, “Probabilistic model checking of the IEEE 802.11 wireless local area network protocol,” in Proc. PAPM/PROBMIV’02, ser. LNCS, vol. 2399. Springer, 2002, pp. 169–187.

[24] http://www.prismmodelchecker.org/casestudies/.

[25] R. Bryant, “Graph-based algorithms for Boolean function manipulation,” IEEE Transactions on Computers, vol. C-35, no. 8, pp. 677–691, 1986.

[26] J. Burch, E. Clarke, K. McMillan, D. Dill, and J. Hwang, “Symbolic model checking: 1020 states and beyond,” in Proc. LICS’90. IEEE Computer Society Press, 1990, pp. 428–439.

[27] M. Kwiatkowska, G. Norman, and J. Sproston, “Probabilistic model checking of deadline properties in the IEEE 1394 FireWire root contention protocol,” Formal Aspects of Computing, vol. 14, no. 3, pp. 295–318, 2003.

### Figures

**Figure 1: Performance Comparison for Hybrid Tarjan Computing Expected Reward (FireWire Case Study)**

(a) fast=0.1
(b) fast=0.01
(c) fast=0.001

- **Verification Time vs. Delay**
  - **Sparse Engine**
  - **Hybrid Tarjan**

**Delay (x-axis):** 0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33
**Verification Time (y-axis):** 
- (a) 0 to 330 seconds
- (b) 0 to 330 seconds
- (c) 0 to 1500 seconds

---

This revised version aims to provide a clearer, more structured, and professional presentation of the performance comparison and the research findings.