##### 3.1.6.1 创建一个Slack的Webhook Url
**Slack** 是一个通讯工具——”一个用于传递消息、工具和文件的地方“。这意味着Slack是一个即时通讯系统，其中包含许多其他工作场景工具的附加功能。
Incoming Webhooks 是将消息从应用程序发布到 Slack 的一种简单方法。创建一个Incoming
Webhooks，会给你一个独特的URL，您可以向其发送包含消息文本和一些选项的JSON payload。您可以使用Incoming
Webhooks的所有常用[格式](https://api.slack.com/reference/surfaces/formatting)和[布局块](https://api.slack.com/messaging/composing/layouts)
来使消息更突出。
  * **第一步先创建个账号（slack.com）：**
  * **如果你是新用户，选择第二个选项（”you don’t belong to any workspace“）：**
  * **在邮箱中获取刚刚收到的验证码并创建新的工作区（workspace）：**
  * **试着按照步骤操作直到回到主页，进入应用程序搜索”Incoming Webhook“，点击添加：**
  * **点击”add to Slack“：**
  * **选择一个接收消息的频道（例如test），然后单击”add integration“：**
  * **向下滚动直到看到你的Webhook URL（保存，我们后续会使用到）：**
  * **然后到Kibana - > Alerting -> Destination(目标)，点击”add destination(添加目标)“：**
  * **选择Destination(目标)名字，选择Slack，然后把Webhook Url粘贴过来，点击”create(创建)“：**
##### 3.1.6.2 创建Alerting并将其发送到Slack
  * **点击进入Monitoring，点击创建Monitor：**
  * **配置：可以使用图形化配置或extraction query配置：**
下面是图形化配置的一个举例（Event ID: 4624的意思是”某个账户登录成功“）:
  * **检查Monitor Schedule(监控计划)，然后点击创建：**
现在你需要创建一个trigger(触发器)，例如：
然后转到通知，并选择创建的目标（destination），然后点击创建：
现在，就可以在Kibana的Alerting界面中关注告警，并且每个告警将会发送到你的Slack频道：
转到你的Slack频道（本教程中是`#test`频道），然后等待告警通知：
### 3.2 Security(高级安全性)功能
这个插件为管理用户、角色、映射、角色组和访客提供了一个界面。
#### 3.2.1 安装Security插件
之所以选择这个插件是因为Kibana在基础版本中未提供身份认证的面板。因此，为了确保接口的安全性，我们使用open distro提供的免费的身份认证面板。
Security插件的安装可以参照与安装Alerting插件相同的步骤（3.1.1-3.1.4）进行。只需要更改插件安装的url即可：
> **Kibana:**
    sudo bin/kibana-plugin install — allow-root https://d3g5vo6xdbdb9a.cloudfront.net/downloads/kibana-plugins/opendistro-security/opendistro_security_kibana_plugin-1.6.0.0.zip
> **Elasticsearch** :
    sudo bin/elasticsearch-plugin install https://d3g5vo6xdbdb9a.cloudfront.net/downloads/elasticsearch-plugins/opendistro-security/opendistro_security-1.6.0.0.zip
_安装过程可能有个警告信息：直接输入”y“_ ：
  * 安装完成Security插件后，可以运行如下命令，使用默认证书快速开始（否则，你必须手动配置它并运行`securityadmin.sh`）：
    cd /usr/share/elasticsearch/plugins/opendistro_security/tools/
    # 修改权限
    chmod +x install_demo_configuration.sh
    # 运行
    ./install_demo_configuration.sh
安装过程中，所有的都直接输入”y“，默认用户名密码是（admin/admin）：
在`/etc/elasticsearch/elasticsearch.yml`配置文件中，Open Distro的Security插件会添加另外一个配置：
#### 3.2.2 更改elasticsearch、logstash和kibana配置
在本例中，我们为elasticsearch配置一个用户名密码和SSL证书（要提到的是，本部分和后面对于证书的验证不属于我们本次系列文章的范围）。
> **Elasticsearch：**
**禁用elasticsearch的x-pack安全功能：** 当你重启elastic的时候可能会得到一个报错，因为xpack安全功能在ELK
Stack基础版本中是默认启用的，所以在重启之前，必须在`/etc/elasticsearch/elasticsearch.yml`中禁用它。
> **Kibana** ：
**禁用Kibana的x-pack安全功能：**
同样，对于Kibana，我们必须禁用xpack安全功能，并忽略`/etc/kibana/kibana.yml`中的ssl验证。
**注意：确保协议是https，而不是http：**
> **Logstash：**
由于我们的beats没有直接连接到elasticsearch，而是连接到了Logstash。所以我们不必管理beats或重新配置他们，我们只需要配置logstash的配置文件。
**同样的，要确保协议是https，而不是http。**
    sudo nano /etc/logstash/conf.d/logstash.conf
**注意：如果你正在重新配置beats或者设置另外一个beat的时候，你的elasticsearch已经安装了用户名，密码和SSL证书的security插件，你可以将此配置添加到你的beats中，使其可以访问。确保你的协议是https而不是http。**
#### 3.2.3 重启所有服务
    systemctl restart elasticsearch
    systemctl restart logtash
    systemctl restart kibana
如上文所述，可能需要几分钟才能正确重启，可以使用`top`命令实时检查进程。同时，你的kibana服务会响应” **kibana is not ready
yet** “。
现在，你的ELK stack使用新的安全凭证，已经能正常连接了。
可以使用Elasticsearch URL来检查（http不起作用，必须使用https）：
也可以在Kibana中进行检查：
在这里，你可以创建用户、分配角色和权限：
这将帮助你根据角色、操作和权限来管理和组织SOC团队。
下图是默认情况下定义的角色和内部用户数据：
## 0x04 实现仪表盘和ELK SIEM的可视化
本节内容将包含如下几个部分：
  * **ELK SIEM演示**
  * **默认的仪表盘**
  * **创建你的第一个仪表盘**
### 4.1 ELK SIEM演示
ELK SIEM最近是在2019年6月25日的7.2版本中添加到了elk
Stack中。这是一个由elastic.co创建的SIEM解决方案，旨在让安全分析师的工作变得更加轻松。
在我们的解决方案中，我们决定创建我们自己的SIEM(安全信息和事件管理)并定制我们自己的仪表盘。但是，首先应该先了解了解ELK SIEM。
#### 4.1.1 主机事件部分
首先，我们将介绍主机部分。主机部分能够看到终端本身内部产生的事件。
点击查看主机后，应该会得到图中的类似信息（如上图所示）。很直观能看出，我们有三台主机连接到该机器：
1台Windows10和2台Ubuntu Server 18.04。
上图有几个可视化的图表，每一个显示的都是不同类型的事件。例如，中间的那个正在显示有关三台机器的登录数据。我们图中测试的数据量已经测试了5天，所以包含了很多成功和失败的登陆事件（你在自己实验的时候，可能日志量比较少，这个不用担心）。
#### 4.1.2 网络事件部分
转到网络部分，你应该能得到下图中类似的信息。这部分将使你能洞悉网络中发生的一切，从HTTP/TLS流量到DNS流量，以及其他外部的事件告警。
### 4.2 默认的仪表盘
为了便利，elastic.co的开发人员已为ELK正式支持的每个beat都创建了一个默认仪表板。在这里，以Packetbeat的默认仪表盘为例。
如果你按照0x02文章中的步骤正确操作了，应该有设置好的仪表盘了。那么现在开始吧：
在Kibana左侧tab上选择“dashboard”，从上往下数第三个。在搜索框中输入beat的名称。如果beat有多个模块，将会创建其中每一个单独的仪表盘。每个仪表盘数据显示非空与否取决是否有数据。选择一个带有模块名称的模块。下图是
**PacketBeat** 的仪表盘：
这是网络流量的仪表盘。它将通知我们有关传入和传出数据包的信息、IP来源和目的地、以及对安全运营中心分析人员有用的许多信息。
### 4.3 创建你的第一个仪表盘
#### 4.3.1 几个基本概念
**A-仪表盘类型：**
可以用来可视化数据的各种可视化类型。例如：
条形图、地图、Markdown小部件、饼状图
**B- KQL (Kibana Query Language):**
是一种友好的方式用户在kibana中搜索数据的语言。它可以用来搜索检查数据是否存在，以及许多其他有用的功能。要了解KQL的其他更多信息，可以查看如下链接：
下图是使用Windows 10专业版系统搜索主机的查询示例：
**C- Filters(过滤器/筛选器)：**
通过此功能，可以筛选某些参数，例如主机名，事件的代码或ID等。Filters将在调查阶段的线索搜索上，极大的减少花费的时间和精力。
**D-Visulaization(可视化)：**
我们将为MITRE ATT&CK创建一个可视化。
点击： **Dashboard → Create new dashboard→create new →Pie dashboard**
，将类型设置为索引（index）模式，选择你的beat名字，然后回车。现在，应该能看到一个绿色的圈。
在左侧的Buckets可以看到：
  * Split slices：根据数据差异，会把圈分割成不同部分；
  * Split Chart：会在这个圈的旁边创建另外一个圈。
我们使用split slices。
我们将根据我们选择的term(值)来可视化我们的数据，在本案例中，term(值)将与MITRE ATT&CK有关。
在Winlogbeat中，将为我们提供这些信息的文件被称为：`winlog.event_data.RuleName`。
我们将按顺序设置计数指标，根据事件的出现次数来排序。
启用Group other values in the separate
bucket(就能显示剩余的值到一个单独的bucket里)。如果你选择的terms有很多来自beat的不同值，这将很容易实现。它可以帮助您将其他数据整体可视化，这将使您了解其余事件的百分比。
现在我们完成了data选项的配置，现在到options选项。
应该了解以下几点：
  * 移除圆圈形状以在可视化中形成一个完整的圆形；
  * 选择你喜欢的位置摆放。在本例中，我们在右侧显示；
  * 设置“ show values”，以使值显示在图形旁边，以便于阅读，其余的保持为默认值。
可以Truncate (截断)选择你想从事件中显示多少数据：设置你希望展示的开始时间，然后点击蓝色区域。
你应该得到像下图这样的图形：
还可以在可视化中添加过滤器，以过滤你想检查的某些主机或你认为对您的目标有用的任何参数。可视化将只显示与过滤器内的规则相匹配的数据。在本例中，我们将只显示来自win10主机的MITRE
ATT&CK数据。
#### 4.3.2 创建第一个仪表盘
仪表盘是许多可视化的集合，你的仪表盘应该清晰易懂，并带有有用的确定性数据。这是我们从零开始为winlogbeat创建的仪表盘示例：
如果你需要了解kibana可视化更多的详细内容，建议查看官方文档：
**......未完待续**