User:  Please provide an example of using Terraform to write infrastructure as code.
Assistant: The following is a simple example of writing infrastructure as code using Terraform, which creates an Amazon Web Services (AWS) Virtual Private Cloud (VPC). ``` # Define required provider and region provider "aws" { region = "us-east-1" } # Define VPC resource "aws_vpc" "my_vpc" { cidr_block = "10.0.0.0/16" } # Define Internet gateway resource "aws_internet_gateway" "my_igw" { vpc_id = aws_vpc.my_vpc.id } # define subnet resource "aws_subnet" "my_subnet" { vpc_id = aws_vpc.my_vpc.id cidr_block = "10.0.1.0/24" } # define security group resource "aws_security_group" "my_sg" { name_prefix = "my_sg" ingress { from_port = 0 to_port = 65535 protocol = "tcp" cidr_blocks = ["0.0.0.0/0"] } egress { from_port = 0 to_port = 65535 protocol = " tcp" cidr_blocks = ["0.0.0.0/0"] } } # Bind the security group to the subnet resource "aws_security_group_attachment" "my_sg_attachment" { security_group_id = aws_security_group.my_sg.id subnet_id = aws_subnet.my_subnet.id } `` ` This example creates a new VPC that includes a primary network defined with CIDR block "10.0.0.0/16". At the same time, it also creates an Internet gateway called "my_igw" and connects it to the VPC. Next, the script defines a subnet called "my_subnet" with a CIDR block of "10.0.1.0/24". Additionally, the script creates a security group called "my_sg" that allows all TCP traffic and all IP addresses inbound and outbound, and binds it to the subnet.