title:Defining verifiability in e-auction protocols
author:Jannik Dreier and
Hugo Jonker and
Pascal Lafourcade
Defining Verifiability in e-Auction Protocols
Jannik Dreier, Hugo Jonker, Pascal Lafourcade
To cite this version:
Jannik Dreier, Hugo Jonker, Pascal Lafourcade. Defining Verifiability in e-Auction Protocols. 8th
ACM Symposium on Information, Computer and Communications Security (AsiaCCS ’13), ACM,
May 2013, Hangzhou, China. 10.1145/2484313.2484387. hal-01337416
HAL Id: hal-01337416
https://hal.archives-ouvertes.fr/hal-01337416
Submitted on 25 Jun 2016
HAL is a multi-disciplinary open access
archive for the deposit and dissemination of sci-
entific research documents, whether they are pub-
lished or not. The documents may come from
teaching and research institutions in France or
abroad, or from public or private research centers.
L’archive ouverte pluridisciplinaire HAL, est
destinée au dépôt et à la diffusion de documents
scientifiques de niveau recherche, publiés ou non,
émanant des établissements d’enseignement et de
recherche français ou étrangers, des laboratoires
publics ou privés.
Deﬁning Veriﬁability in e-Auction Protocols∗
Jannik Dreier
Université Grenoble 1, CNRS
PI:EMAIL
Hugo Jonker
University of Luxembourg
PI:EMAIL
Pascal Lafourcade
Université Grenoble 1, CNRS
PI:EMAIL
ABSTRACT
An electronic auction protocol will only be used by those
who trust that it operates correctly. Therefore, e-auction
protocols must be veriﬁable: seller, buyer and losing bidders
must all be able to determine that the result was correct.
We pose that the importance of veriﬁability for e-auctions
necessitates a formal analysis. Consequently, we identify
notions of veriﬁability for each stakeholder. We formalize
these and then use the developed framework to study the
veriﬁability of two examples, the protocols due to Curtis et
al. and Brandt, identifying several issues.
Categories and Subject Descriptors
C.2.2 [Network Protocols]: Protocol veriﬁcation; K.4.4
[Electronic Commerce]: Security
Keywords
Veriﬁability; e-Auction; Formal Methods; Protocol Analysis
1.
INTRODUCTION
Auctions provide sellers and buyers with a way to ex-
change goods for a mutually acceptable price. Unlike a mar-
ketplace, where the sellers compete with each other, auctions
are a seller’s market where buyers bid against each other
over the goods for sale. There are many diﬀerent types of
auctions, varying how to determine winner and price. For
example, in an English auction, buyers bid publicly against
each other and the highest bid wins (e.g. [16]). A Vick-
rey auction is rather similar, except that the winning buyer
pays the price of the second-highest bid (see e.g. [10, 14]).
Conversely, in a Dutch auction, the price starts too high –
the auctioneer keeps lowering the price until a buyer claims
the good for that price (e.g. [17]). Sealed-bid auctions are
∗ c(cid:13)ACM 2013. This is the author’s version of the work.
It is posted here for your personal use. Not for redistri-
bution. The deﬁnitive Version of Record was published in
ASIACCS’13, http://dx.doi.org/10.1145/2484313.2484387.
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
ASIA CCS’13, May 8–10, 2013, Hangzhou, China.
Copyright 2013 ACM 978-1-4503-1767-2/13/05 ...$15.00.
auctions that run in one round: in the bidding phase, each
buyer submits one sealed bid, which are then simultane-
ously opened in the opening phase. Sealed-bid auctions can
be used to implement auctions where the bidder with the
highest bid wins (e.g. [4, 15, 1, 5]), but also Vickrey-style
auctions, where the winner pays the second-highest price
(e.g. [14]). In this paper, we focus on veriﬁability of sealed-
bid auctions (though our results are applicable to English
and, in a limited sense, Dutch auctions).
Auctions involve the following stakeholders:
• Bidders: prospective buyers, who want to pay as little
as possible.
• Seller : a seller, striving to sell for as much as possible.
• Auctioneer : the party organizing the auction.
As is readily apparent, the interests of the various stake-
holders are opposed. Buyers are in competition with each
other for the goods on sale, sellers are in competition with
buyers for the price of the goods, the auctioneer may proﬁt
directly from overvalued sale price (which provides an incen-
tive to collude with the seller), but a reputation for under-
valued sale prices will ensure many repeat customers (which
provides incentive to collude with buyers). Consider e.g. the
case where there are several bids for the same price. In such
a case, an auctioneer might prefer the most “active” bid-
der instead of the normal tie-breaking rules, and so favor
frequent customers over occasional ones.
There are thus no impartial parties to oversee the correct-
ness of the process to determine selling price and winner.
For this reason, an auction system must provide some form
of veriﬁability for each involved party – irrespective of how
the auction process is run and the winner is determined.
Auction veriﬁability is easy to achieve in isolation, as
happens in English “shout-out” auctions. However, main-
taining veriﬁability while ensuring other properties (non-
repudiation, privacy, etc.) is far harder. Too often, newly
proposed auction protocols proudly show how they achieve
these other properties, while only acknowledging the require-
ment for veriﬁability in passing. Typically, veriﬁability is
subsequently claimed without providing any formal proof,
e.g., [3, 6]. To address this, we propose a generic formal
framework applicable independent of the type of auction.
The framework consists of formal tests of veriﬁability.
Contribution. The main contribution of this work is to
identify a set of scheme-independent deﬁnitions, which, taken
together, cover veriﬁability of auctions. To this end, we focus
on the bidders (distinguishing veriﬁability for losing bidders
from the winning bidder) and the seller. We present this
framework as a set of formal veriﬁability tests. Moreover,
we investigate the auction protocols by Curtis et al. [6] and
by Brandt [3]. Both protocols claim veriﬁability, yet we
identify issues with each.
Related work. There are relatively few formal analyses of
auction protocols. Dong et al. [7] study privacy properties of
the protocol by Abe and Suzuki [1] in the applied π-calculus.
More recently, Dreier et al. [8] used the applied π-calculus to
formalize several properties (privacy, non-repudiation, non-
cancellation and fairness, but not veriﬁability) for auction
protocols, and studied (and found problems with) two auc-
tion protocols. Besides these, veriﬁability in auctions has
(to the best of our knowledge) only been studied for partic-
ular schemes. However, in the ﬁeld of voting several more
generic deﬁnitions of veriﬁability have emerged, and we look
there for inspiration.
In voting, the property of individual veriﬁability – a voter
can verify that her vote counts correctly for the result – has
been a well-established notion since the ﬁeld’s inception [9,
2, 18, 11]. Sako and Killian [18] introduced the concept of
universal veriﬁability: the property that any observer may
verify (using only public information) the correctness of the
result. Kremer et al. [12] introduced the notion of eligibility
veriﬁability: the property whereby any observer may verify,
using only public information, that the set of cast votes from
which the result is determined originates only from eligible
voters, and each eligible voter cast at most one vote. Finally,
K¨usters et al. [13] introduced the notion of accountability:
when veriﬁability fails, it is possible to identify the person
responsible for the failure.
While the intuition behind these notions carries (to some
degree) over to auctions, we do note, that unlike voting,
auctions involve competing parties – an illegal bid (e.g., by
the seller) may increase the winning price, while not chang-
ing the winner. Hence, a lack of veriﬁability in auctions
can compromise fairness. In addition, winner/price deter-
mination can be quite complex depending on the type of
auction, e.g. for second-price or multi-good auctions. Thus,
veriﬁcation of voting systems does not translate directly to
veriﬁcation of auction systems.
Outline. In Section 2, we describe our modeling of auc-
tions. In Section 3, we formalize the veriﬁability deﬁnitions,
taking into account the point of view of the seller and the
bidders. In Section 4, we then apply our model to two ex-
amples and exhibit problems in both cases.
2. MODELING AUCTION PROTOCOLS
We consider a set of bidders B and a seller S. We do not
model other parties as only bidders and the seller verify the
execution of the protocol.
Bids are of type Bid (in the simplest case just a price).
When being submitted the bids might be encrypted or ano-
nymized to ensure privacy, hence we use the type EBid for
such bids. We assume that there is a public list L of length
n and type List(EBid ) of all submitted bids, for example a
bulletin board. To deﬁne the soundness of the veriﬁcation
tests we need a mapping between both types, i.e. a function
getPrice : EBid (cid:55)→ Bid that gives the bid for an encrypted
bid. This function does not need to be computable for any
party, as it is only used in the soundness deﬁnition.
Bidders have to register at some point, or are otherwise
authenticated when bidding, in order to be able to obtain
their goods once the auction has ended. This could for exam-
ple be implemented using signatures, authentication tokens,
MACs etc. Therefore we require a function isReg : EBid (cid:55)→
{true, false} that returns true if a bid was submitted by a
registered bidder, and not modiﬁed – this integrity protec-
tion is necessary to prevent manipulation of bids.
In addition, we require a public function that - given a list
of bids - computes the index of the winning bid within the
list of all bids: win : List(Bid ) (cid:55)→ Index . This might simply
be the index of the maximal bid among all bids, but there
may be more complex operations to determine this index
depending on the type of auction or to deal with ties (i.e.
several maximal bids).
Lastly, we assume that the variable winBid of type Index
refers to the index of the announced winning bid at the end
of the auction, and that each bidder has a variable myBid
of type Index that refers to the index of his bid in L.
Note that for a list l we write l[i] to denote the i-th element
of the list starting with 1, and Indices(l) to denote the set
of indices of l, i.e. {1, . . . , n} if l contains n elements.
Definition 1. An auction protocol is a tuple (B, S, L,
getPrice, isReg, win, winBid ) where
• B is the set of bidders,
• S is the seller,
• L is a list of all submitted bids,
• getPrice : EBid (cid:55)→ Bid is a function mapping submit-
ted bids to bids,
• isReg : EBid (cid:55)→ {true, false} is a function that returns
true if a bid was submitted by a registered bidder,
• win : List(Bid ) (cid:55)→ Index is a function that returns the
index of the winning bid,
• winBid is a variable referring to the index of the win-
ning bid at the end of the auction.
3. DEFINING VERIFIABILITY
In this section, we formally deﬁne veriﬁability for auction
protocols. In the ﬁrst part we consider only ﬁrst-price auc-
tions. Thereafter we generalize the deﬁnitions to account
for second-price, multi-price, and other types of auctions.
3.1 First-Price Auctions
To understand which veriﬁcations are needed, we start by
discussing three diﬀerent stakeholder’s perspectives:
• A losing bidder wants to be convinced that he actually
lost, i.e. that:
– the winning bid was actually superior to his bid
(as deﬁned by the win function), and
– that the winning bid was submitted by another
bidder (preventing both seller and auctioneer from
maliciously adding or manipulating bids to inﬂu-
ence the ﬁnal price).
• A winning bidder wants to check that: