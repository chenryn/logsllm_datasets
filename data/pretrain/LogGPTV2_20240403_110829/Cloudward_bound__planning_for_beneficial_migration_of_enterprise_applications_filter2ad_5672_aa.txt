title:Cloudward bound: planning for beneficial migration of enterprise applications
to the cloud
author:Mohammad Y. Hajjat and
Xin Sun and
Yu-Wei Eric Sung and
David A. Maltz and
Sanjay G. Rao and
Kunwadee Sripanidkulchai and
Mohit Tawarmalani
Cloudward Bound: Planning for Beneﬁcial Migration of
Enterprise Applications to the Cloud
Mohammad Hajjat†, Xin Sun†, Yu-Wei Eric Sung†, David Maltz‡, Sanjay Rao†
Kunwadee Sripanidkulchai?, and Mohit Tawarmalani†
†Purdue University, ‡Microsoft Research, ?IBM T.J. Watson Research Center
ABSTRACT
In this paper, we tackle challenges in migrating enterprise services
into hybrid cloud-based deployments, where enterprise operations
are partly hosted on-premise and partly in the cloud. Such hy-
brid architectures enable enterprises to beneﬁt from cloud-based ar-
chitectures, while honoring application performance requirements,
and privacy restrictions on what services may be migrated to the
cloud. We make several contributions. First, we highlight the com-
plexity inherent in enterprise applications today in terms of their
multi-tiered nature, large number of application components, and
interdependencies. Second, we have developed a model to explore
the beneﬁts of a hybrid migration approach. Our model takes into
account enterprise-speciﬁc constraints, cost savings, and increased
transaction delays and wide-area communication costs that may re-
sult from the migration. Evaluations based on real enterprise appli-
cations and Azure-based cloud deployments show the beneﬁts of a
hybrid migration approach, and the importance of planning which
components to migrate. Third, we shed insight on security policies
associated with enterprise applications in data centers. We articu-
late the importance of ensuring assurable reconﬁguration of secu-
rity policies as enterprise applications are migrated to the cloud.
We present algorithms to achieve this goal, and demonstrate their
efﬁcacy on realistic migration scenarios.
Categories and Subject Descriptors: C.4 [Performance of systems]:
Modeling techniques ; C.2.3 [Computer communication networks]: Net-
work operations– Network management
General Terms: Algorithms, Design, Experimentation, Management,
Performance, Security
Keywords: Cloud Computing, Enterprise Applications, Security Policies,
Performance Modeling, Network Conﬁgurations
1
Cloud computing promises to reduce the cost of IT organizations
through lower capital and operational expense stemming from the
cloud’s economies of scale, and by allowing organizations to pur-
chase just as much compute and storage resources as needed, only
when needed. Many cloud early adopters have had great success
Introduction
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
SIGCOMM’10, August 30–September 3, 2010, New Delhi, India.
Copyright 2010 ACM 978-1-4503-0201-2/10/08 ...$10.00.
in leveraging the cloud to deliver new services as an alternative to
implementing their own server infrastructures [4, 17].
The advantages and initial success stories of cloud computing
are prompting many enterprise networks to explore how the cloud
could be leveraged to deliver their existing enterprise applications.
Consider a recent survey of 1,780 data center managers in 26 coun-
tries worldwide conducted by Symantec [25]. Over 36% of respon-
dents indicated that the large number of applications and complex-
ity of managing data centers were huge problems that they faced.
Over 82% of respondents indicated that reducing data center costs
was one of the most important objectives for coming years. Over
72% of respondents indicated they were considering or using pub-
lic cloud computing, although 94% of these respondents were still
in the discussion, planning, trial or implementation stages.
Despite the signiﬁcant interest, migrating enterprise applications
to cloud computing is a major challenge (e.g., [11]). On the one
hand, enterprise applications are often faced with stringent require-
ments in terms of performance, delay, and service uptime. On the
other hand, little is known about the performance of applications
in the cloud, the response time variation induced by network la-
tency, and the scale of applications suited for deployment. Further,
industry-speciﬁc regulations (e.g., in health care industries), and
national privacy laws may restrict what data an enterprise may mi-
grate to the cloud [11].
In response to these concerns, there has been signiﬁcant interest
in the industry in hybrid architectures where enterprise applications
are partly hosted on-premise, and partly in the cloud (e.g., [15,22]).
Enterprise applications are typically composed of multiple compo-
nents, and hybrid architectures allow for individual components to
be migrated, or kept local. Hybrid architectures offer enterprises
ﬂexibility in decision making that can enable them to ﬁnd the right
balance between privacy considerations, performance and cost sav-
ings. For instance, sensitive databases (e.g., related to credit card
processing) may be located local to the enterprise, while relatively
less sensitive components could be migrated to the cloud. Users ex-
ternal to the enterprise could be handled through servers deployed
in the cloud, while internal users could be handled through servers
located on premise.
In this paper, we take a ﬁrst step towards articulating and ad-
dressing two challenges involved in enabling enterprises to move
to such a hybrid cloud model, as we discuss below:
Component placement: While hybrid architectures offer several
advantages, deciding which components must be kept local, and
which components must be migrated is non-trivial. The challenge
stems from the fact that enterprise applications consist of a large
number of components, with complex interactions, as our examina-
tion of applications deployed in a global Fortune 100 company, and
a large university indicate. To address this challenge, we present
243a model that enables application architects to systematically plan
which components of their application must be migrated. Our model
takes into account enterprise policies, cost savings from migration,
and increased transaction delays and wide-area communication that
may result from the migration. Our model also considers the data
ﬂows between application components, and the spread of users
(e.g., if they are located within or outside enterprise premises). We
evaluate our algorithms using (i) a real cloud-based application on
an Azure-based cloud test-bed; and (ii) a model of a real enterprise
application deployed in a large-scale campus network. Our results
show there are situations where hybrid migrations are optimal, and
reveal the importance of a planned approach to determining which
components to migrate.
ACL Migration: While executing an actual migration entails sev-
eral challenges [23,28], security related issues are perhaps the most
vexing. To highlight the importance, consider that over 83% of
data center managers in the survey mentioned above have indicated
security is the most important initiative for their data centers in
coming years [25]. Our examination of an operational data-center
of a large campus network indicates that access to servers corre-
sponding to enterprise applications is highly restricted, and the se-
curity (reachability) policies are often encoded in low-level device
conﬁgurations. A key barrier to realizing hybrid migrations is the
need to ensure that the reachability policies continue to be met. We
present automated approaches to reconﬁgure network devices in an
assurable fashion. Our approach involves extracting the end-to-end
policies from low-level device conﬁgurations, transforming them
(if necessary) to handle changes to address space assignments, and
placing the transformed policies in the migrated setting. We eval-
uate our algorithms using realistic migration scenarios, and router
conﬁgurations of a large campus network. Overall, our results show
the feasibility and importance of our approach.
While our results are promising, our work is but a ﬁrst step to-
wards addressing challenges in migrating enterprise networks to
the cloud. We discuss other challenges not considered in the paper,
and open issues in § 7.
2 Motivation
In this section, we begin by exposing the complexity of real en-
terprise applications today. This leads us to formulate important
challenges in migrating enterprises to cloud-based models.
2.1 Characteristics of enterprise applications
Enterprises run a number of applications to support their day-to-
day business. For instance, a company may run applications to
support payroll, travel and expense reimbursement, customer rela-
tionship management, and supply chain management. Similarly, a
university may run applications corresponding to student registra-
tion, employee payroll, class management, and alumni relations.
Such applications are implemented using multi-tier architectures.
Typically, applications can be decomposed into three functional
tiers: (i) a front-end tier, containing web servers that handle user
requests and application presentation; (ii) a business-logic tier, con-
taining servers that perform specialized application logic such as
sales analysis; and (iii) a back-end tier that comprises of various
database servers. While a 3-tiered design is the conventional archi-
tecture used in most applications, in practice applications are much
more complex. Each of these tiers may have multiple functional
components; each component may have multiple servers perform-
ing the same role and executing the same code while load-balancers
are employed to spread the requests across each server.
Fig. 1 depicts the number of distinct functional components for
Figure 1: Distinct functional components for ﬁve enterprise applications.
ﬁve enterprise-wide applications sampled out of hundreds of such
applications used by a Fortune 100 company, broken down by tier.
Note that we only include distinct functional components – server
replicas that run the same code are not counted. The total number of
distinct components in each application varies from 11 to over 100
components depending on the nature of the application. In some
of these applications, there are up to 19 distinct front-end compo-
nents, 67 business-logic components, and 21 back-end datastores.
Furthermore, the ﬂow of requests between these components is of-
ten complex. Depending on the speciﬁc type of user transaction, the
ﬂows could touch upon different functional components across all
the tiers. To further appreciate the complexity, we refer the reader
to § 5.2 (Fig. 10) for a detailed model of an enterprise application
deployed in a large campus network.
An enterprise application could be accessed by two types of users:
(i) users internal to the enterprise; and (ii) users external to the en-
terprise. For instance, in a university campus setting, current em-
ployees and students correspond to internal users, but alumni, and
prospective students correspond to external users.
2.2 Security policies in enterprise data centers
Many enterprise applications (e.g., employee payroll) are extremely
sensitive, and access to servers corresponding to these applications
is highly restricted. For instance, following the tiered applica-
tion architecture, typical security policies may only allow front-end
servers to access business logic and back-end servers. The security
policies are carefully crafted reﬂecting the complex application in-
terdependencies so only application components that need to talk
to each other are permitted to do so. Servers corresponding to var-
ious enterprise applications are logically partitioned into Virtual
LANs (VLANs). Each VLAN is protected by a ﬁrewall context.
Each ﬁrewall context is associated with one or more access con-
trol lists (ACLs). An ACL is a sequential collection of permit and
deny conditions, called ACL rules, and ﬂows to be permitted/de-
nied are identiﬁed in terms of their source/destination IP addresses
and ports, and protocol, i.e., a 5-tuple (sip,dip,sport,dport,proto).
The reader is referred to §5.3 which presents high-level character-
istics of the security policies of a data center in a large university
campus. The data center has over 40 ﬁrewall contexts, each context
associated with a pair of ACLs, and with each ACL having several
tens and sometimes hundreds of ACL rules.
2.3
In this paper, we focus on hybrid cloud architectures, where in-
dividual application components may be placed locally or in the
cloud. Further, we allow for placement strategies where only a sub-
set of servers in a component are placed remotely. Fig. 2 depicts
an example, where only the back-end, and a subset of front-end
servers have been moved to the cloud.
Issues in migrating enterprise applications
Multiple factors can motivate such hybrid deployments. From
a performance perspective, migrating the entire application to the
cloud is likely to result in higher response times to users inter-
02040608010012012345ApplicationsTotal Number of ComponentsFront-EndBusiness LogicBack-End244must be migrated to the cloud. We present a high-level problem
formulation in §3.1 and provide modeling details in the remaining
subsections.
3.1 Abstraction and problem formulation
Consider an enterprise running K applications, Ai, 1 ≤ i ≤ K,
and m components (across all applications), Ci, 1 ≤ i ≤ m.
Each application involves a subset of components. For instance,
A1 = {C1, C2, C5} indicates that application A1 has components
C1, C2, and C5. We abstract the application structure using a graph
G = (V, E). Let V = {Ci}m
i=1 ∪ {I, O}, where I and O repre-
sent internal and external users respectively. Nodes i and j are
connected by an edge (i, j) if they communicate. The number of
transactions per second and the average size of transactions along
(i, j) are denoted by Ti,j and Si,j respectively. Ti,j and Si,j are
the ijth elements of the transaction matrix, T, and the size matrix,
S, respectively. We assume that T and S are available.
In deciding how a component must be migrated to the cloud,
it is important to consider the speciﬁc nature of that component.
Web front-ends and business-logic tiers typically consist of multi-
ple servers performing the same role, and easily allow for solutions
where a subset of servers may be migrated to the cloud. Back-end
databases on the other hand involve storage, and an associated set
of servers. Partial migration of a subset of servers involves either
(i) replication of storage in the local and cloud data-centers, and the
need for techniques to maintain consistency across replicas; or (ii)
maintenance of the database in a distributed fashion, a hard prob-
lem. In this paper, we assume back-end databases are migrated in
an atomic fashion, i.e., all associated storage and servers are either
maintained local, or entirely migrated. In the future, it might be
interesting to consider partial migration of databases.
More generally, each component Ci is modeled as consisting of
Ni servers. The overall goal of the formulation is to determine the
number of servers ni (ni ≤ Ni) which must be migrated to the
cloud for each component Ci. A database component Cd is easily
captured in this model by setting Nd = 1, and imposing integrality
requirements on nd.
Let P denote a set of policy constraints that govern the migra-
tion process. For instance, the constraints may indicate that certain
application components (e.g., relating to sensitive data storage) are
not to be migrated to the cloud. Formally, the goal is to determine
a migration strategy M =`ni