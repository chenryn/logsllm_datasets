PostgreSQL Internals
Through Pictures
B M ,
RUCE OMJIAN
S R A
OFTWARE ESEARCH SSOCATES
December, 2001
Abstract
P SQL is an open-source, full-featured relational database. This
OSTGRE
presentation gives an overview of how P SQL processes
OSTGRE
queries.
SQL Query
SELECT firstname
FROM friend
WHERE age = 33;
PostgreSQL Internals 1
Query in Psql
test=> SELECT firstname
test−> FROM friend
test−> WHERE age = 33;
firstname
−−−−−−−−−−−−−−−−−
Sandy
(1 row)
PostgreSQL Internals 2
Query Processing
test=> SELECT firstname
test−> FROM friend
test−> WHERE age = 33;
[ query is processed ]
firstname
−−−−−−−−−−−−−−−−−
Sandy
(1 row)
PostgreSQL Internals 3
Query in Libpq
test=> SELECT firstname
test−> FROM friend
test−> WHERE age = 33;
Breakpoint 1, PQexec (conn=0x807a000,
query=0x8081200 "SELECT firstname\nFROM friend\nWHERE age = 33;")
at fe−exec.c:1195
PostgreSQL Internals 4
Libpq
User
Terminal
PostgreSQL
Application Database
Code
Server
LIBPQ
Queries
Results
PostgreSQL Internals 5
TCP/IP Packet
17:05:22.715714 family.home.49165 > candle.navpoint.com.5432: P 354:400(46)
ack 61 win 8760  (DF)
0000: 00 d0 b7 b9 b6 c8 00 02 b3 04 09 dd 08 00 45 00 ________ ______E_
0010: 00 62 45 31 40 00 40 06 b1 fe ac 14 00 02 a2 21 _bE1@_@_ _______!
0020: f5 2e c0 0d 15 38 1c af 94 34 a8 1a 1e 39 80 18 _.___8__ _4___9__
0030: 22 38 19 d5 00 00 01 01 08 0a 00 02 1a 77 00 6f "8______ _____w_o
0040: 06 6a 51 53 45 4c 45 43 54 20 66 69 72 73 74 6e _jQSELEC T firstn
0050: 61 6d 65 0a 46 52 4f 4d 20 66 72 69 65 6e 64 0a ame_FROM friend_
0060: 57 48 45 52 45 20 61 67 65 20 3d 20 33 33 3b 00 WHERE ag e = 33;_
PostgreSQL Internals 6
Query Sent
Result Received
FindExec: found "/var/local/postgres/./bin/postgres" using argv[0]
DEBUG: connection: host=[local] user=postgres database=test
DEBUG: InitPostgres
DEBUG: StartTransactionCommand
DEBUG: query: SELECT firstname
FROM friend
WHERE age = 33;
[ query is processed ]
DEBUG: ProcessQuery
DEBUG: CommitTransactionCommand
DEBUG: proc_exit(0)
DEBUG: shmem_exit(0)
DEBUG: exit(0)
PostgreSQL Internals 7
Query Processing
FindExec: found "/var/local/postgres/./bin/postmaster" using argv[0]
./bin/postmaster: BackendStartup: pid 3320 user postgres db test socket 5
./bin/postmaster child[3320]: starting with (postgres −d99 −F −d99 −v131072 −p test )
FindExec: found "/var/local/postgres/./bin/postgres" using argv[0]
DEBUG: connection: host=[local] user=postgres database=test
DEBUG: InitPostgres
DEBUG: StartTransactionCommand
DEBUG: query: SELECT firstname
FROM friend
WHERE age = 33;
DEBUG: parse tree: { QUERY :command 1 :utility <> :resultRelation 0 :into <> :isPortal false :isBinary false :isTemp false :hasAgg
s false :hasSubLinks false :rtable ({ RTE :relname friend :relid 26912 :subquery <> :alias <> :eref { ATTR :relname friend :attrs (
"firstname" "lastname" "city" "state" "age" )} :inh true :inFromCl true :checkForRead true :checkForWrite false :checkAsUse
r 0}) :jointree { FROMEXPR :fromlist ({ RANGETBLREF 1 }) :quals { EXPR :typeOid 16 :opType op :oper { OPER :opno 96 :opid 0 :opresu
lttype 16 } :args ({ VAR :varno 1 :varattno 5 :vartype 23 :vartypmod −1 :varlevelsup 0 :varnoold 1 :varoattno 5} { CONST :consttype
23 :constlen 4 :constbyval true :constisnull false :constvalue 4 [ 33 0 0 0 ] })}} :rowMarks () :targetList ({ TARGETENTRY :resdom
{ RESDOM :resno 1 :restype 1042 :restypmod 19 :resname firstname :reskey 0 :reskeyop 0 :ressortgroupref 0 :resjunk false } :expr {
VAR :varno 1 :varattno 1 :vartype 1042 :vartypmod 19 :varlevelsup 0 :varnoold 1 :varoattno 1}}) :groupClause <> :havingQual <> :dis
tinctClause <> :sortClause <> :limitOffset <> :limitCount <> :setOperations <> :resultRelations ()}
DEBUG: rewritten parse tree:
DEBUG: { QUERY :command 1 :utility <> :resultRelation 0 :into <> :isPortal false :isBinary false :isTemp false :hasAggs false :has
SubLinks false :rtable ({ RTE :relname friend :relid 26912 :subquery <> :alias <> :eref { ATTR :relname friend :attrs ( "firstname"
"lastname" "city" "state" "age" )} :inh true :inFromCl true :checkForRead true :checkForWrite false :checkAsUser 0}) :joint
ree { FROMEXPR :fromlist ({ RANGETBLREF 1 }) :quals { EXPR :typeOid 16 :opType op :oper { OPER :opno 96 :opid 0 :opresulttype 16 }
:args ({ VAR :varno 1 :varattno 5 :vartype 23 :vartypmod −1 :varlevelsup 0 :varnoold 1 :varoattno 5} { CONST :consttype 23 :constle
n 4 :constbyval true :constisnull false :constvalue 4 [ 33 0 0 0 ] })}} :rowMarks () :targetList ({ TARGETENTRY :resdom { RESDOM :r
esno 1 :restype 1042 :restypmod 19 :resname firstname :reskey 0 :reskeyop 0 :ressortgroupref 0 :resjunk false } :expr { VAR :varno 1
:varattno 1 :vartype 1042 :vartypmod 19 :varlevelsup 0 :varnoold 1 :varoattno 1}}) :groupClause <> :havingQual <> :distinctClause
<> :sortClause <> :limitOffset <> :limitCount <> :setOperations <> :resultRelations ()}
DEBUG: plan: { SEQSCAN :startup_cost 0.00 :total_cost 22.50 :rows 10 :width 12 :qptargetlist ({ TARGETENTRY :resdom { RESDOM :resno
1 :restype 1042 :restypmod 19 :resname firstname :reskey 0 :reskeyop 0 :ressortgroupref 0 :resjunk false } :expr { VAR :varno 1 :va
rattno 1 :vartype 1042 :vartypmod 19 :varlevelsup 0 :varnoold 1 :varoattno 1}}) :qpqual ({ EXPR :typeOid 16 :opType op :oper { OPE
R :opno 96 :opid 65 :opresulttype 16 } :args ({ VAR :varno 1 :varattno 5 :vartype 23 :vartypmod −1 :varlevelsup 0 :varnoold 1 :varo
attno 5} { CONST :consttype 23 :constlen 4 :constbyval true :constisnull false :constvalue 4 [ 33 0 0 0 ] })}) :lefttree <> :rightt
ree <> :extprm () :locprm () :initplan <> :nprm 0 :scanrelid 1 }
DEBUG: ProcessQuery
DEBUG: CommitTransactionCommand
DEBUG: proc_exit(0)
DEBUG: shmem_exit(0)
DEBUG: exit(0)
./bin/postmaster: reaping dead processes...
./bin/postmaster: CleanupProc: pid 3320 exited with status 0
PostgreSQL Internals 8
Query Processing
Pretty Output
FindExec: found "/var/local/postgres/./bin/postgres" using argv[0]
DEBUG: connection: host=[local] user=postgres database=test
DEBUG: InitPostgres
DEBUG: StartTransactionCommand
DEBUG: query: SELECT firstname
FROM friend
WHERE age = 33;
DEBUG: parse tree:
{ QUERY
:command 1
:utility <>
:resultRelation 0
:into <>
:isPortal false
:isBinary false
:isTemp false
:hasAggs false
:hasSubLinks false
:rtable (
{ RTE
:relname friend
:relid 26912
:subquery <>
:alias <>
:eref
{ ATTR
:relname friend
:attrs ( "firstname" "lastname" "city" "state" "age" )
}
:inh true
:inFromCl true
:checkForRead true
:checkForWrite false
:checkAsUser 0
}
)
PostgreSQL Internals 9
Backend Flowchart
Main
Libpq
Postmaster
Postgres Postgres
Parser
utility Utility
Traffic Cop
Commands
complex
Rewrite &
Generate Paths
Choose Path &
Generate Plan
Executor
Utilities Catalog Storage Managers
Access Methods Nodes / Lists
Bootstrap
PostgreSQL Internals 10
Backend Flowchart - Magni(cid:12)ed
Parser
utility Utility
Traffic Cop
Commands
complex
Rewrite &
Generate Paths
Choose Path &
Generate Plan
Executor
PostgreSQL Internals 11
Scanner Identi(cid:12)er Rule
identifier {letter}{letter_or_digit}*
{identifier} {
int i;
ScanKeyword *keyword;
for(i = 0; yytext[i]; i++)
if (isupper((unsigned char) yytext[i]))
yytext[i] = tolower((unsigned char) yytext[i]);
if (i >= NAMEDATALEN)
{
elog(NOTICE, "identifier \"%s\" will be truncated to \"%.*s\"",
yytext, NAMEDATALEN−1, yytext);
yytext[NAMEDATALEN−1] = ’\0’;
}
keyword = ScanKeywordLookup((char*)yytext);
if (keyword != NULL) {
return keyword−>value;
}
else
{
yylval.str = pstrdup((char*)yytext);
return IDENT;
}
}
PostgreSQL Internals 12
Scanner Numeric Rules
digit [0−9]
letter [\200−\377_A−Za−z]
letter_or_digit [\200−\377_A−Za−z0−9]
integer {digit}+
decimal (({digit}*\.{digit}+)|({digit}+\.{digit}*))
real ((({digit}*\.{digit}+)|({digit}+\.{digit}*)|({digit}+))([Ee][−+]?{digit}+))
{integer} {
char* endptr;
errno = 0;
yylval.ival = strtol((char *)yytext, &endptr, 10);
if (*endptr != ’\0’ || errno == ERANGE)
{
yylval.str = pstrdup((char*)yytext);
return FCONST;
}
return ICONST;
}
{decimal} {
yylval.str = pstrdup((char*)yytext);
return FCONST;
}
{real} {
yylval.str = pstrdup((char*)yytext);
return FCONST;
}
PostgreSQL Internals 13
Scanner Output
−−accepting rule at line 476 ("SELECT")
−−accepting rule at line 254 (" ")
−−accepting rule at line 476 ("firstname")
−−accepting rule at line 254 ("\n")
−−accepting rule at line 476 ("FROM")
−−accepting rule at line 254 (" ")
−−accepting rule at line 476 ("friend")
−−accepting rule at line 254 ("\n")
−−accepting rule at line 476 ("WHERE")
−−accepting rule at line 254 (" ")
−−accepting rule at line 476 ("age")
−−accepting rule at line 254 (" ")
−−accepting rule at line 377 ("=")
−−accepting rule at line 254 (" ")
−−accepting rule at line 453 ("33")
−−accepting rule at line 377 (";")
−−(end of buffer or a NUL)
−−EOF (start condition 0)
PostgreSQL Internals 14
SELECT Parser Action
simple_select: SELECT opt_distinct target_list
into_clause from_clause where_clause
group_clause having_clause
{
SelectStmt *n = makeNode(SelectStmt);
n−>distinctClause = $2;
n−>targetList = $3;
n−>istemp = (bool) ((Value *) lfirst($4))−>val.ival;
n−>into = (char *) lnext($4);
n−>fromClause = $5;
n−>whereClause = $6;
n−>groupClause = $7;
n−>havingClause = $8;
$$ = (Node *)n;
}
PostgreSQL Internals 15
SelectStmt Structure
typedef struct SelectStmt
{
NodeTag type;
/*
* These fields are used only in "leaf" SelectStmts.
*/
List *distinctClause; /* NULL, list of DISTINCT ON exprs, or
* lcons(NIL,NIL) for all (SELECT
* DISTINCT) */
char *into; /* name of table (for select into table) */
bool istemp; /* into is a temp table? */
List *targetList; /* the target list (of ResTarget) */
List *fromClause; /* the FROM clause */
Node *whereClause; /* WHERE qualification */
List *groupClause; /* GROUP BY clauses */
Node *havingClause; /* HAVING conditional−expression */
/*
* These fields are used in both "leaf" SelectStmts and upper−level
* SelectStmts. portalname/binary may only be set at the top level.
*/
List *sortClause; /* sort clause (a list of SortGroupBy’s) */
char *portalname; /* the portal (cursor) to create */
bool binary; /* a binary (internal) portal? */
Node *limitOffset; /* # of result tuples to skip */
Node *limitCount; /* # of result tuples to return */
List *forUpdate; /* FOR UPDATE clause */
/*
* These fields are used only in upper−level SelectStmts.
*/
SetOperation op; /* type of set op */
bool all; /* ALL specified? */
struct SelectStmt *larg; /* left child */
struct SelectStmt *rarg; /* right child */
/* Eventually add fields for CORRESPONDING spec here */
} SelectStmt;
PostgreSQL Internals 16
Parsing
Starting parse
Entering state 0
Reading a token: Next token is 377 (SELECT)
Shifting token 377 (SELECT), Entering state 15
Reading a token: Next token is 514 (IDENT)
Reducing via rule 534 (line 3430), −> opt_distinct
state stack now 0 15
Entering state 324
Next token is 514 (IDENT)
Shifting token 514 (IDENT), Entering state 496
Reading a token: Next token is 314 (FROM)
Reducing via rule 871 (line 5391), IDENT −> ColId
state stack now 0 15 324
Entering state 531
Next token is 314 (FROM)
Reducing via rule 789 (line 4951), −> opt_indirection
state stack now 0 15 324 531
Entering state 755
Next token is 314 (FROM)
Reducing via rule 760 (line 4591), ColId opt_indirection −> c_expr
state stack now 0 15 324
Entering state 520
Reducing via rule 693 (line 4272), c_expr −> a_expr
state stack now 0 15 324
Entering state 519
Next token is 314 (FROM)
Reducing via rule 833 (line 5183), a_expr −> target_el
state stack now 0 15 324
Entering state 524
Reducing via rule 831 (line 5171), target_el −> target_list
state stack now 0 15 324
Entering state 523
Next token is 314 (FROM)
Reducing via rule 518 (line 3382), −> into_clause
PostgreSQL Internals 17
Scanning and Parsing
Starting parse
Entering state 0
Reading a token:
−−(end of buffer or a NUL)
−−accepting rule at line 476 ("SELECT")
Next token is 377 (SELECT)
Shifting token 377 (SELECT), Entering state 15
Reading a token:
−−accepting rule at line 254 (" ")
−−accepting rule at line 476 ("firstname")
Next token is 514 (IDENT)
Reducing via rule 534 (line 3430), −> opt_distinct
state stack now 0 15
Entering state 324
Next token is 514 (IDENT)
Shifting token 514 (IDENT), Entering state 496
Reading a token:
−−accepting rule at line 254 ("\n")
−−accepting rule at line 476 ("FROM")
Next token is 314 (FROM)
Reducing via rule 871 (line 5391), IDENT −> ColId
state stack now 0 15 324
Entering state 531
Next token is 314 (FROM)
Reducing via rule 789 (line 4951), −> opt_indirection
state stack now 0 15 324 531
Entering state 755
Next token is 314 (FROM)
PostgreSQL Internals 18
List Structures
typedef struct List
{
NodeTag type;
union
{
void *ptr_value;
int int_value;
} elem;
struct List *next;
} List;
#define NIL ((List *) NULL)
#define lfirst(l) ((l)−>elem.ptr_value)
#define lnext(l) ((l)−>next)
#define lsecond(l) lfirst(lnext(l))
#define lfirsti(l) ((l)−>elem.int_value)
#define foreach(_elt_,_list_) \
for(_elt_=(_list_); _elt_!=NIL; _elt_=lnext(_elt_))
PostgreSQL Internals 19
List Support Functions
Function Description
l(cid:12)rst returns value stored in List
lnext returns pointer to next in List
foreach loops through List
length returns length of List
nth returns nth element from List
makeList1 creates a new list
lcons adds value to front of List
lappend appends value to end of List
nconc concatenates two Lists
There are versions of these functions for storing integers rather than pointers.
PostgreSQL Internals 20
Range Table Entry Structure
typedef struct RangeTblEntry
{
NodeTag type;
/*
* Fields valid for a plain relation RTE (else NULL/zero):
*/
char *relname; /* real name of the relation */
Oid relid; /* OID of the relation */
/*
* Fields valid for a subquery RTE (else NULL):
*/