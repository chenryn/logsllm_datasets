Average time interval between emails (Equation 3).
Similarity to historical value(s) in user_agent field.
Similarity to historical value(s) in path field.
Similarity to historical value(s) in msg_id field.
Similarity to historical value(s) in helo field.
Table 1: Sender profiling features (ES N DR: all emails that have the same sender as the given email e; ES N DR+SU B: all emails
that have the same sender and subject as e; ES N DR+RCV R: all emails that have the same sender and recipient as e)
We take the best similarity (i.e., maximum similarity) out of all
comparisons because an email is highly likely to legitimate if it is
similar to at least one benign email.
Features derived from ES N D R+RCV R. Even for the same sender,
his/her communication pattern may vary for different recipients.
Therefore, we focus on the pairs of senders and recipients, aiming
to derive the communication patterns for each pair. To do this, we
design seven features (Features 12 - 18 in Table 1) derived from
ES N DR+RCV R. Similar to features 1 - 10 derived from ES N DR, these
seven features capture the communication patterns of each sender-
receiver pair. We omit the details of these seven features.
4.2 Enterprise Graph Features
Figure 4: An example of the sender-recipient graph and co-
recipient graph
Given an email e with sender s and recipients R = {r1, . . . , rk}(k >
1), intuitively, e is more likely to be unwanted if it is rare for all
recipients in R to appear together in the recipient lists of past be-
nign emails. We assume that all internal emails are benign, which
is a reasonable assumption as internal emails only involve trusted
senders (i.e., the employees). Based on this assumption, in the en-
terprise setting, how users are included in the same emails is not
random. It is common that there exist implicit working commu-
nities, e.g., departments, working units, or project teams, in the
enterprise setting. Such community structures will guide the email
co-recipient relationship among users. Therefore, we derive a few
features from the internal emails that can reflect such communities,
1
probability that e is benign.
n×max(L(e,ei))n
Feature 9, SENDER_SIM_FIELDS, measures the similarity of the
header field structure between the input email e and the historical
emails from the same sender ES N DR. A binary vector is composed
of the 44 binary Header features from the Table in the Appendix.
Then, the L1 distance is computed between e and each email ei
in ES N DR as L1(e, ei). Assuming n historical emails from a sender,
Feature 9 is computed as the normalized average of the L1 distances,
j=1 L1(ei , e). The higher the score, the higher the
Feature 10, SENDER_EMAIL_SUBNET_FREQUENCY, captures the net-
work infrastructure diversity of the same senders using the /24
subnets. The intuition here is that benign senders have less diverse
subnets compared to unwanted email senders who may utilize dif-
ferent subnets (e.g., using botnets) to deliver their unwanted emails.
Assume the number of unique /24 subnets in ES N DR is u and the
number of emails is n, then, the sender score is computed as u/n.
Feature 10 of email e is computed as the score of its sender. The
lower the score, the higher the probability that e is benign.
Features derived from ES N D R+SU B. From this set of emails,
we design one feature (Feature 11 in Table 1). This feature captures
an important pattern of unwanted emails when E2EE is deployed:
when a sender sends an unwanted email to multiple recipients,
it often sends an individual copy of the email to each recipient
within a short time window, with each copy including the same
subject and the same sender. Thus, Feature 12 is valued as a binary
indicating whether there are more than two emails in ES N DR+SU B
that satisfy the following two conditions: (1) each email has a single
recipient; and (2) the emails are sent within α seconds, where α > 0
is a user-specified threshold. In our experiments, we use α = 3, 600
(i.e., 1 hour) as it delivers the best performance.
From: 𝑣𝑣1To: 𝑣𝑣2,𝑣𝑣3,𝑣𝑣4（b1) Co-recipient GraphAfter Email #1𝑣𝑣1𝑣𝑣4𝑣𝑣3𝑣𝑣2111（d1) Co-recipient GraphAfter Email #2𝑣𝑣1𝑣𝑣4𝑣𝑣3𝑣𝑣211211(a) Internal Email #1（b2) Sender-recipient GraphAfter Email #1𝑣𝑣1𝑣𝑣4𝑣𝑣3𝑣𝑣21From: 𝑣𝑣3To: 𝑣𝑣1,𝑣𝑣2,𝑣𝑣4(c) Internal Email #2𝑣𝑣1𝑣𝑣4𝑣𝑣3𝑣𝑣2（d2) Sender-recipient GraphAfter Email #2111111111210CADUE: Content-Agnostic Detection of Unwanted Emails for Enterprise Security
RAID ’21, October 6–8, 2021, San Sebastian, Spain
Graph
Sender-recipient
Graph GS R
Co-recipient
Graph GCR
Cat.
CB
CB
EI
CB
CB
EI
No.
1
2
3
4
5
6
Feature
SR_RANDOMWALK
SR_TRANSCLOSURE
SR_PAGERANK
CR_RANDOMWALK
CR_TRANSCLOSURE
CR_PAGERANK
Domain
[0, 1]
[0, 1]
[0, 1]
[0, 1]
[0, 1]
[0, 1]
Description
Random walk relation score among recipients in GS R.
Transitive closure relation score among recipients in GS R.
Average page rank score of recipients in GS R.
Random walk relation score among recipients in GCR.
Transitive closure relation score among recipients in GCR.
Average page rank score of recipients in GCR.
Table 2: Enterprise Graph Features (CB: community-based feature; EI: employee importance feature)
and thus capture the likelihood that all users in R can appear as the
recipients in a benign email.
There are two types of email communication relationships among
enterprise employees: sender-recipient relationship, i.e., one sends
emails to another; and co-recipient relationship, i.e., users appear in
the recipient lists of the same emails. Accordingly, we build two
graphs, the sender-recipient graph (GSR) and the co-recipient graph
(GCR) to model these two types of relationships respectively.
From these two graphs, we derive six enterprise graph features
(shown in Table 2). We categorize these features into two types:
• Community-based features: In the enterprise setting, a benign
email tends to be sent to users in the same working com-
munities instead of those who belong to different communi-
ties. Furthermore, it is often the case that this community
relationship is transitive. Based on these observations, we
derive community-based features to reflect the degree that
recipients in the input email belong to the same community
according to either the sender-recipient relationship or the
co-recipient relationship.
• Employee-importance feature: Email communications can
reveal different levels of importance of employees. A benign
email tends to be sent to the users of comparable importance.
An email that addresses recipients of significantly different
importance (e.g., CEO and interns) is unusual and more likely
to be unwanted. Therefore, we derive employee-importance
features from both the sender-recipient graph and the co-
recipient graph.
We design three algorithms, namely random walk (RW) [35],
transitive closure (TC) [32], and page rank (PR) [33], to derive the
features from both graphs. All the three algorithms take the re-
cipient list R of an email e as well as an enterprise graph (either
GSR or GCR) as the input, and output a relation score in the range
[0, 1] to quantify the likelihood that the recipients in R appear
in the recipient list of a benign email, based on their prior com-
munications (either sender-recipient or co-recipient) within the
enterprise. Among these three algorithms, RW and TC extract the
community-based features [36], while PR extracts the employee-
importance based features. Next, we describe how to construct the
sender-recipient graph and the co-recipient graph, and then explain
how to extract features from these two graphs.
Graph construction. First, we construct the sender-recipient
graph GSR = {V , ESR}. In GSR, each vertex v ∈ V represents an
employee in the enterprise. There is a directed edge e(v, v′) ∈ ESR
if user v sends an email to user v′. The weight w of the edge e(v, v′)
is set as the total number of emails that user v sends to v′. Figure 4
(b2) shows an example of the sender-recipient graph constructed
from an internal email illustrated in Figure 4 (a). Figure 4 (d2) further
shows how the graph is updated when a new internal email comes
(illustrated in Figure 4 (c)).
We further construct a co-recipient graph GCR = {V , ECR}, in
which each vertex v ∈ V corresponds to an employee in the enter-
prise. There is an undirected edge e(v, v′) ∈ ECR if v and v′ appear
together in the recipient list of any internal email. The weight on
each edge e(v, v′) is the total number of internal emails that include
both v and v′ in the recipient list. Intuitively, the co-recipient graph
captures the fact that, if two employees are frequently included in
the recipient list of the same email, they are more likely to belong
to the same working community (e.g., the same department or the
same project team). Figure 4 (b1) illustrates the co-recipient graph
constructed from the email in Figure 4 (a), and how the graph is up-
dated (Figure 4 (d1)) when having a new internal email (illustrated
in Figure 4 (c)).
Extraction of Community-based Features. We design two
scoring schemes, namely random walk (RW) and transitive closure
(TC), to measure the degree that all the recipients R in the input
email e belong to the same community, according to either the
sender-recipient relationship or the co-recipient relationship. To do
this, both RW and TC first measure the pairwise relationship score
for each pair of users v, v′ in the recipient list R, which quantifies
the likelihood that v and v′ appear in the same email considering
their past communications with other employees. Then both RW
and TC return a global relationship score of R that is aggregated
from all the pairwise relationship scores. RW and TC differ on how
they measure the pairwise relationship scores, as TC requires and
utilizes the transitive property of the graph but RW does not. Next,
we explain these two algorithms in detail.
Random walk (RW) scoring scheme: We do random walk with
100,000 steps on GSR and GCR respectively, and obtain two features
(Features 1 and 4 in Table 2). Specifically, RW takes a graph G (either
GSR or SCR), and a source node vi ∈ G as the input. Starting from
vi, we traverse randomly to one of its neighbors vj, with probability
proportional to the weight of the edge e(vi , vj). We continue the
traversal and finally terminate after L steps, where L is a large
number specified by the users. A node may be visited multiple
times during the traversal. We use M[i, j] to denote the number of
times vj is reached in a random walk starting from vi. Note that
this relationship is not symmetric, i.e., M[i, j] and M[j, i] may not
be equal.
Given an email e and its recipient list R, we compute the pairwise
co-recipient score si, j as:
si, j =
1
0
M[i, j]
maxvk ∈R M[i,k]
if i = j
if vi is isolated in G and i (cid:44) j
otherwise.
(5)
211RAID ’21, October 6–8, 2021, San Sebastian, Spain
Mohamed Nabeel, Enes Altinisik, Haipei Sun, Issa Khalil, Hui (Wendy) Wang, and Ting Yu
M[i, j]
maxvk ∈R M[i,k] to make si, j fall into the range [0, 1].
We compute
Finally, we compute the co-recipient score of the recipient list R by
random walk srw(R) as
srw(R) = min
vi,vj ∈R
si, j
(6)
We consider the minimum pairwise co-recipient score as the
score for the whole recipient list as it captures the worst likelihood
that the whole recipient list is included in a benign email. Intuitively,
the lower the score is, the smaller the likelihood that the recipients
in R all appear in the same recipient list of a benign email.
Transitive closure (TC) scoring scheme. We compute transitive
closure over GSR and GCR respectively, and derive two features
(Features 2 and 5 in Table 2). Similar to RW, TC also computes the
pairwise co-recipient scores for each pair of recipients in R. It then
derives the co-recipient score of all users in R by aggregating all
pairwise co-recipient scores.
m
Specifically, let A be the adjacency matrix of the input graph
w(i, j)
G (either GSR or GCR). A is normalized with A[i, j] =
t =1 w(i,t),
where m is the total number of nodes in the graph, and w(i, j) is
the weight of edge e(i, j) if the edge exists, or 0 otherwise. The
transitive closure of A is given by A+ =m−1
(cid:124)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:123)(cid:122)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:125)
Ai = A × A . . . A
i =1 Ai, where
i
We then compute the pairwise co-recipient score si, j from A+ by
Equation 5 (replacing M[i, j] by A+[i, j]). Finally, we compute the
score stc(R) based on co-recipient scores between users in the re-
cipient list R. Similar to RW, we consider the minimum pairwise
co-recipient score as the score for the whole recipient list. Formally,
the score stc(R) is measured as: stc(R) = minvi,vj ∈R si, j.
Extraction of Employee-Importance Features. While RW
and TC are driven by underlying user communities, we design an-
other scoring scheme named page rank (PR) to derive two features
(Features 3 and 6 in Table 2). PR does not rely on the assumption of
existence of communities to measure the co-recipient likelihood of
the users.
Page rank (PR) scoring scheme. Our PR algorithm applies the
standard page rank algorithm [33], with the damping parameter of
0.85, on the input graph G (either GSR or GCR) to obtain a score
ISi for each node vi. The score reflects the importance of user i
based on past internal email communications. We then compute
the co-recipient score spr(R) of all the users in the recipient list R as
(7)
ISi ,
spr(R) = min
vi ∈R
We only measure the lowest PR of the recipients based on the
intuition that the lower the PR of a user, the less likely he/she
receives emails together with other users in R. We omit the pseudo
code of PR due to its simplicity. While we rely on well-known graph
algorithms, it is worthwhile noting that linking multiple enterprise
logs to create the GSR and GCR and derive discriminating features
from them are novel.
5 HEADER FEATURES
Besides the enterprise features, from prior work [2, 28], we derive 47
features from the email header. We use these features as the baseline
content-agnostic approach. They are categorized into three groups:
Figure 5: Node degree distribution of enterprise graphs
the email header.
• SUBJECT (SUBJ) features: derived from the subject field in
• NON-SUBJECT (NS) features: derived from all fields in the
• DEPENDENCY (DEP) features: cross-field derived features,
specifically, checking consistency between some of the header
fields.
header except the subject.
All SUBJ and NS features are adapted from the features used by
Apache SpamAssassin [2], one of the most popular open-source
anti-spam platforms. DEP features are adapted from [2] and [28].
We include the details of all the header features in the Appendix.
6 EVALUATION
6.1 Dataset: Statistics and Characteristics
Our experiments are conducted on a real-world dataset that consists
of the email logs collected from a local enterprise in 25 days. The
email logs include more than 550,000 emails, which include both
external emails of 3,963 users outside of the enterprise and internal
emails among 1,546 enterprise employees. The email logs include
the following information: (i) 587,873 internal email communica-
tions from exchange server logs, which are used to build the sender-
recipient graph and the co-recipient graph, and (ii) a ground truth
of emails from external senders, which consists of 15,399 benign
email communications and 911 unwanted email communications.
The ground truth is obtained from the security operation analysts
in the enterprise, who have full access to email contents along with
other information to filter unwanted emails. We treat those emails
filtered by the security analysts as true positives and those passed
as true negatives. Table 3 includes the details of the dataset. Due to
security and privacy reasons, before giving us access to the data, the
enterprise removed all content of emails and anonymized sensitive
header fields with a keyed hash while preserving the uniqueness.
# of Incoming Ext. Emails