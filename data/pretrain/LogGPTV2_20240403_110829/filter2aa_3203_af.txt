Describe the purpose of the core protocols of the IPv6 Internet layer. 
Describe the purpose and characteristics of the TCP and User Datagram Protocol (UDP) protocols. 
Explain how IP uses the information in IP packets to deliver data to the correct application on a 
destination node. 
Describe the purpose and characteristics of the Windows Sockets and Network Basic Input/Output 
System (NetBIOS) APIs. 
Describe the purpose and characteristics of the host name and NetBIOS naming schemes used by 
TCP/IP components in Windows. 
Chapter 2 – Architectural Overview of the TCP/IP Protocol Suite 
TCP/IP Fundamentals for Microsoft Windows  
Page: 25 
The TCP/IP Protocol Suite 
The TCP/IP protocol suite maps to a four-layer conceptual model known as the DARPA model, which 
was named after the U.S. government agency that initially developed TCP/IP. The four layers of the 
DARPA model are: Application, Transport, Internet, and Network Interface. Each layer in the DARPA 
model corresponds to one or more layers of the seven-layer OSI model. 
Figure 2-1 shows the architecture of the TCP/IP protocol suite. 
Figure 2-1  The architecture of the TCP/IP protocol suite 
The TCP/IP protocol suite has two sets of protocols at the Internet layer: 
IPv4, also known as IP, is the Internet layer in common use today on private intranets and the Internet.  
IPv6 is the new Internet layer that will eventually replace the existing IPv4 Internet layer. 
Network Interface Layer 
The Network Interface layer (also called the Network Access layer) sends TCP/IP packets on the 
network medium and receives TCP/IP packets off the network medium. TCP/IP was designed to be 
independent of the network access method, frame format, and medium. Therefore, you can use TCP/IP 
to communicate across differing network types that use LAN technologies—such as Ethernet and 
802.11 wireless LAN—and WAN technologies—such as Frame Relay and Asynchronous Transfer 
Mode (ATM). By being independent of any specific network technology, TCP/IP can be adapted to new 
technologies. 
The Network Interface layer of the DARPA model encompasses the Data Link and Physical layers of 
the OSI model. The Internet layer of the DARPA model does not take advantage of sequencing and 
Chapter 2 – Architectural Overview of the TCP/IP Protocol Suite 
TCP/IP Fundamentals for Microsoft Windows  
Page: 26 
acknowledgment services that might be present in the Data Link layer of the OSI model. The Internet 
layer assumes an unreliable Network Interface layer and that reliable communications through session 
establishment and the sequencing and acknowledgment of packets is the responsibility of either the 
Transport layer or the Application layer. 
Internet Layer 
The Internet layer responsibilities include addressing, packaging, and routing functions. The Internet 
layer is analogous to the Network layer of the OSI model. 
The core protocols for the IPv4 Internet layer consist of the following: 
The Address Resolution Protocol (ARP) resolves the Internet layer address to a Network Interface layer 
address such as a hardware address. 
The Internet Protocol (IP) is a routable protocol that addresses, routes, fragments, and reassembles 
packets. 
The Internet Control Message Protocol (ICMP) reports errors and other information to help you 
diagnose unsuccessful packet delivery. 
The Internet Group Management Protocol (IGMP) manages IP multicast groups. 
For more information about the core protocols for the IPv4 Internet layer, see "IPv4 Internet Layer" later 
in this chapter. 
The core protocols for the IPv6 Internet layer consist of the following: 
IPv6 is a routable protocol that addresses and routes packets. 
The Internet Control Message Protocol for IPv6 (ICMPv6) reports errors and other information to help 
you diagnose unsuccessful packet delivery. 
The Neighbor Discovery (ND) protocol manages the interactions between neighboring IPv6 nodes. 
The Multicast Listener Discovery (MLD) protocol manages IPv6 multicast groups. 
For more information about the core protocols for the IPv6 Internet layer, see "IPv6 Internet Layer" later 
in this chapter. 
Transport Layer 
The Transport layer (also known as the Host-to-Host Transport layer) provides the Application layer 
with session and datagram communication services. The Transport layer encompasses the 
responsibilities of the OSI Transport layer. The core protocols of the Transport layer are TCP and UDP. 
TCP provides a one-to-one, connection-oriented, reliable communications service. TCP establishes 
connections, sequences and acknowledges packets sent, and recovers packets lost during 
transmission. 
In contrast to TCP, UDP provides a one-to-one or one-to-many, connectionless, unreliable 
communications service. UDP is used when the amount of data to be transferred is small (such as the 
data that would fit into a single packet), when an application developer does not want the overhead 
associated with TCP connections, or when the applications or upper-layer protocols provide reliable 
delivery. 
Chapter 2 – Architectural Overview of the TCP/IP Protocol Suite 
TCP/IP Fundamentals for Microsoft Windows  
Page: 27 
TCP and UDP operate over both IPv4 and IPv6 Internet layers. 
The Internet Protocol (TCP/IP) component of Windows Server 2003 and Windows XP contains 
separate versions of the TCP and UDP protocols than the Microsoft TCP/IP Version 6 component does. 
The versions in the Microsoft TCP/IP Version 6 component are functionally equivalent to those provided 
with the Microsoft Windows NT® 4.0 operating systems and contain all the most recent security 
updates. The existence of separate protocol stacks with their own versions of TCP and UDP is known 
as a dual stack architecture.  
The Next Generation TCP/IP stack in Windows Server 2008 and Windows Vista is a single protocol 
stack that supports the dual IP layer architecture, in which both IPv4 and IPv6 share common Transport 
and Network Interface layers (as Figure 2-1 shows). Because there is a single implementation of TCP, 
TCP traffic over IPv6 can take advantage of all the performance features of the Next Generation 
TCP/IP stack. These features include all of the performance enhancements of the IPv4 protocol stack 
of Windows XP and Windows Server 2003 and additional enhancements new to the Next Generation 
TCP/IP stack, such as Receive Window Auto Tuning and Compound TCP. 
Application Layer 
The Application layer allows applications to access the services of the other layers, and it defines the 
protocols that applications use to exchange data. The Application layer contains many protocols, and 
more are always being developed. 
The most widely known Application layer protocols help users exchange information: 
The Hypertext Transfer Protocol (HTTP) transfers files that make up pages on the World Wide Web. 
The File Transfer Protocol (FTP) transfers individual files, typically for an interactive user session. 
The Simple Mail Transfer Protocol (SMTP) transfers mail messages and attachments. 
Additionally, the following Application layer protocols help you use and manage TCP/IP networks: 
The Domain Name System (DNS) protocol resolves a host name, such as www.microsoft.com, to an IP 
address and copies name information between DNS servers. 
The Routing Information Protocol (RIP) is a protocol that routers use to exchange routing information on 
an IP network. 
The Simple Network Management Protocol (SNMP) collects and exchanges network management 
information between a network management console and network devices such as routers, bridges, 
and servers. 
Windows Sockets and NetBIOS are examples of Application layer interfaces for TCP/IP applications. 
For more information, see “Application Programming Interfaces” later in this chapter. 
Chapter 2 – Architectural Overview of the TCP/IP Protocol Suite 
TCP/IP Fundamentals for Microsoft Windows  
Page: 28 
IPv4 Internet Layer 
The IPv4 Internet layer consists of the following protocols: 
ARP 
IP (IPv4) 
ICMP 
IGMP 
The following sections describe each of these protocols in more detail. 
ARP 
When IP sends packets over a shared access, broadcast-based networking technology such as 
Ethernet or 802.11 wireless LAN, the protocol must resolve the media access control (MAC) addresses 
corresponding to the IPv4 addresses of the nodes to which the packets are being forwarded, also 
known as the next-hop IPv4 addresses. As RFC 826 defines, ARP uses MAC-level broadcasts to 
resolve next-hop IPv4 addresses to their corresponding MAC addresses. 
Based on the destination IPv4 address and the route determination process, IPv4 determines the next-
hop IPv4 address and interface for forwarding the packet. IPv4 then hands the IPv4 packet, the next-
hop IPv4 address, and the next-hop interface to ARP. 
If the IPv4 address of the packet’s next hop is the same as the IPv4 address of the packet’s destination, 
ARP performs a direct delivery to the destination. In a direct delivery, ARP must resolve the IPv4 
address of the packet’s destination to its MAC address. 
If the IPv4 address of the packet’s next hop is not the same as the IPv4 address of the packet’s 
destination, ARP performs an indirect delivery to a router. In an indirect delivery, ARP must resolve the 
IPv4 address of the router to its MAC address 
To resolve the IPv4 address of a packet’s next hop to its MAC address, ARP uses the broadcasting 
facility on shared access networking technologies (such as Ethernet or 802.11) to send out a broadcast 
ARP Request frame. In response, the sender receives an ARP Reply frame, which contains the MAC 
address that corresponds to the IPv4 address of the packet’s next hop. 
ARP Cache 
To minimize the number of broadcast ARP Request frames, many TCP/IP protocol implementations 
incorporate an ARP cache, which is a table of recently resolved IPv4 addresses and their 
corresponding MAC addresses. ARP checks this cache before sending an ARP Request frame. Each 
interface has its own ARP cache. 
Depending on the vendor implementation, the ARP cache can have the following qualities: 
ARP cache entries can be dynamic (based on ARP replies) or static. Static ARP cache entries are 
permanent, and you add them manually using a TCP/IP tool, such as the Arp tool provided with 
Windows. Static ARP cache entries prevent nodes from sending ARP requests for commonly used local 
IPv4 addresses, such as those for routers and servers. The problem with static ARP cache entries is 
that you must manually update them when network adapter equipment changes.  
Chapter 2 – Architectural Overview of the TCP/IP Protocol Suite 
TCP/IP Fundamentals for Microsoft Windows  
Page: 29 
Dynamic ARP cache entries have time-out values associated with them so that they are removed from 
the cache after a specified period of time. For example, dynamic ARP cache entries for Windows 
Server 2003 and Windows XP are removed after no more than 10 minutes.  
To view the ARP cache on a Windows–based computer, type arp -a at a command prompt. You can 
also use the Arp tool to add or delete static ARP cache entries. 
ARP Process 
When sending the initial packet as the sending host or forwarding the packet as a router, IPv4 sends 
the IPv4 packet, the next-hop IPv4 address, and the next-hop interface to ARP. Whether performing a 
direct or indirect delivery, ARP performs the following process: 
1. Based on the next-hop IPv4 address and interface, ARP checks the appropriate ARP cache for an 
entry that matches the next-hop IPv4 address. If ARP finds an entry, ARP skips to step 6.  
2. If ARP does not find an entry, ARP builds an ARP Request frame. This frame contains the MAC and 
IPv4 addresses of the interface from which the ARP request is being sent and the IPv4 packet's next-
hop IPv4 address. ARP then broadcasts the ARP Request frame from the appropriate interface.  
3. All nodes on the subnet receive the broadcasted frame and process the ARP request. If the next-hop 
address in the ARP request corresponds to the IPv4 address assigned to an interface on the subnet, 
the receiving node updates its ARP cache with the IPv4 and MAC addresses of the ARP requestor. 
All other nodes silently discard the ARP request. 
4. The receiving node that is assigned the IPv4 packet’s next-hop address formulates an ARP reply that 
contains the requested MAC address and sends the reply directly to the ARP requestor.  
5. When the ARP requestor receives the ARP reply, the requestor updates its ARP cache with the 
address mapping. With the exchange of the ARP request and the ARP reply, both the ARP requestor 
and ARP responder have each other's address mappings in their ARP caches. 
6. The ARP requestor sends the IPv4 packet to the next-hop node by addressing it to the resolved MAC 
address.  
Figure 2-2 shows this process. 
Chapter 2 – Architectural Overview of the TCP/IP Protocol Suite 
TCP/IP Fundamentals for Microsoft Windows  
Page: 30 
Figure 2-2  The ARP address resolution process 
Internet Protocol version 4 (IPv4) 
IPv4 is a datagram protocol primarily responsible for addressing and routing packets between hosts. 
IPv4 is connectionless, which means that it does not establish a connection before exchanging data, 
and unreliable, which means that it does not guarantee packet delivery. IPv4 always makes a “best 
effort” attempt to deliver a packet. An IPv4 packet might be lost, delivered out of sequence, duplicated, 
or delayed. IPv4 does not attempt to recover from these types of errors. A higher-layer protocol, such 
as TCP or an application protocol, must acknowledge delivered packets and recover lost packets if 
needed. IPv4 is defined in RFC 791. 
An IPv4 packet consists of an IPv4 header and an IPv4 payload. An IPv4 payload, in turn, consists of 
an upper layer protocol data unit, such as a TCP segment or a UDP message. Figure 2-3 shows the 
basic structure of an IPv4 packet. 
Figure 2-3  The basic structure of an IPv4 packet 
Table 2-1 lists and describes the key fields in the IPv4 header. 
IP Header Field 
Description 
Source IP Address 
The IPv4 address of the source of the IP packet. 
Destination IP Address 
The IPv4 address of the intermediate or final 
destination of the IPv4 packet. 
Identification 
An identifier for all fragments of a specific IPv4 packet, 
if fragmentation occurs. 
Protocol 
An identifier of the upper-layer protocol to which the 
Chapter 2 – Architectural Overview of the TCP/IP Protocol Suite 
TCP/IP Fundamentals for Microsoft Windows  
Page: 31 
IPv4 payload must be passed. 
Checksum 
A simple mathematical computation used to check for 
bit-level errors in the IPv4 header. 
Time-to-Live (TTL) 
The number of network segments on which the 
datagram is allowed to travel before a router should 
discard it. The sending host sets the TTL, and routers 
decrease the TTL by one when forwarding an IPv4 
packet. This field prevents packets from endlessly 
circulating on an IPv4 network. 
Table 2-1  Key Fields in the IPv4 Header 
Fragmentation and Reassembly 
If a router receives an IPv4 packet that is too large for the network segment on which the packet is 
being forwarded, IPv4 on the router fragments the original packet into smaller packets that fit on the 
forwarding network segment. When the packets arrive at their final destination, IPv4 on the destination 
host reassembles the fragments into the original payload. This process is referred to as fragmentation 
and reassembly. Fragmentation can occur in environments that have a mix of networking technologies, 
such as Ethernet or Token Ring. 
Fragmentation and reassembly work as follows: 
1. Before an IPv4 packet is sent, the source places a unique value in the Identification field. 
2. A router in the path between the sending host and the destination receives the IPv4 packet and notes 
that it is larger than the maximum transmission unit (MTU) of the network onto which the packet is to 
be forwarded. 
3. IPv4 divides the original IPv4 payload into fragments that fit on the next network. Each fragment 
receives its own IPv4 header containing: 
The original Identification field, which identifies all fragments that belong together. 
The More Fragments flag, which indicates that other fragments follow. The More Fragments flag is 
not set on the last fragment, because no other fragments follow it. 
The Fragment Offset field, which indicates the position of the fragment relative to the original IPv4 
payload. 
When the remote host receives the fragments, it uses the Identification field to identify which fragments 
belong together and the Fragment Offset field to reassemble the fragments in their proper order to 
recreate the original IPv4 payload. 
Internet Control Message Protocol (ICMP) 
ICMP, defined in RFC 792, reports and helps troubleshoot errors for packets that are undeliverable. For 
example, if IPv4 cannot deliver a packet to the destination host, ICMP on the router or the destination 
host sends a Destination Unreachable message to the sending host. Table 2-2 lists and describes the 
most common ICMP messages. 
ICMP Message 
Description 
Echo 
The Ping tool sends ICMP Echo messages to 
Chapter 2 – Architectural Overview of the TCP/IP Protocol Suite 
TCP/IP Fundamentals for Microsoft Windows  
Page: 32 
troubleshoot network problems by checking IPv4 
connectivity to a particular node. 
Echo Reply 
Nodes send Echo Reply messages to respond to 
ICMP Echo messages. 
Redirect 
Routers send Redirect messages to inform sending 
hosts of better routes to destination IPv4 addresses. 
Source Quench 
Routers send Source Quench messages to inform 