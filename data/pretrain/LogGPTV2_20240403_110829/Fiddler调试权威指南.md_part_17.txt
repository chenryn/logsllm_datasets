只响应
允许编辑
否
CachingResponseInspector会查看HTTP响应头，以确定选中的响应在HTTP规则下是否
可以缓存，如果可以缓存，则还需明确其缓存时间。它会通过响应头的Cache-Control、Expires、
Pragma、Vary、ETag、Age和Last-Modified信息来检查响应是否有效。
有些浏览器（包括IE）支持在HTML文档中使用METAHTTP-EQUIV标记缓存信息。
CachingInspector会扫描包含HTMLContent-Type的响应，显示标记中的任何HTTP-EQUIV
或PRAGMA指令。
对于没有显式指定是否可缓存以及缓存生命周期的响应，CachingInspector会通过请求头
的Last-Modified标签以及RFC2616中提出的算法，启发式计算缓存的生命周期，如图5-5所示。
AuthCahingCooklesRawJSONxo
bok
based on Lat
use oronceperbrowing sesion,dependng nthebrower confguraton.
ThsrespsectaisethenETAGrLatoded e.ThswiprevntCondonRedtnfs
图5-5
通过以下链接你能了解更多浏览器如何利用缓存的内容：http://fiddler2.com/r/?httpperf。
5.4COOKIES
类型
请求&响应
允许编辑
否
110
---
## Page 111
5.4COOKIES
CookiesInspector会显示任何发送出去的请求头Cookie和Cookie2中的内容，并显示接
收到的响应头中的Set-Cookie、Set-Cookie2和P3P。注意，请求头Cookie2和Set-Cookie2不
经常使用，它们在IE以及一些其他浏览器中不被支持。
Cookie的显示形式是基本的信息（在Headersinspector中可以看到相同的信息）。这个
inspector的值的确定，需要检查P3P响应头：如果该响应头存在，则确定它的Cookie是否已
经缓存。P3P（PlatformforPrivacyPreferences）是标准的服务器和客户端间的通信方式，客
户端可以确定如何使用包含P3P请求头的Cookie。
Set-Cookie: ASPSESSIONIDCCBTDCRD=CIFKIKJDFMJFFODAJPEMFKGN; path=/
P3P:CP="ALL IND DSP COR ADM CONo CUR CUSo IVAo IVDo PSA PSD TAI TELO
OUR SAMo CNT COM INT NAV ONL PHY PRE PUR UNI*
Inspector可以解析P3P头的CP（CompactPolicy）字符串中的标识符，其含义如图5-6
所示。
|
acypytasent
Erorsor wrorgil actior arsingin camecten with fhe privacypokcy nil berenedelly e seni
图 5-6
Inspector会进一步对字符串进行检查，确定IE使用的默认的隐私设置是否认为该Cookie
是“可接受的”。值得一提的是，有些网站（如Facebook、Google等）会发送非法的P3P声
明，以屏蔽浏览器的隐私功能。在P3P规则下，无法识别的标记（比如以上提到的非法声明）
会被忽略。
Cookies Request Inspector显示发出的Cookie头的大小，帮助删除超大Cookie或减少这
些Cookie大小以提升网络性能。
CookiesResponseInspector标志出一些常见的问题。例如，IE会拒绝为所有主机名包含
下划线的服务器设置Cookie，Inspector发现这种情况时会给出提示。
111
---
## Page 112
第5章Inspectors
5.5HEADERS
类型
请求&响应
允许编辑
是
每个HTTP请求都是以纯文本形式的请求头开始，描述客户端需要什么资源和操作。请
求的第一行（“RequestLine”）包含三个值：HTTP方法（如“GET”或“POST"）、请求的
））
或多行，其中包含用于描述请求和客户端的元数据的键值对，如User-Agent和Accept-Language。
类似地，所有的HTTP响应都是以纯文本响应头开始，它描述了请求的结果。响应的第
一行（“StatusLine”）包含HTTP版本号（如“HTTP/1.1"）、响应状态码（如“200"）以及响
应状态文本（如“OK"）。StatusLine下方是一行或多行，其中包含用于描述响应和服务器的
元数据的名称值对，比如响应文件的长度、类型以及响应如何缓存的信息。
Headers Inspector支持查看请求和响应的HTTP头，在Request Line或StatusLine下方以
树形视图的形式显示名称值对。HTTP头的名称值对是基于功能进行分组的，然后根据名称
按字母序排序。分组只是为了阅读方便，不会发送到网络。对于请求头，分组包括[Cache，Client，
Entity，Transport,Cookies/Login，Miscellaneous]。对于响应头，分组包括[Entity，Transport,
Cookies/Login,Security,Miscellaneous]。
默认情况下，HeadersInspector的内容是只读的，无法对其进行编辑。在只读模式下，树
形视图和RawHeaders对话框的背景色是只读颜色（淡蓝色）.当选中在某个断点处暂停的
WebSession，或者选中Edit菜单中的UnlockforEditing选项时，HeadersInspector会以Edit
模式显示。在Edit模式下，背景颜色是默认的窗口颜色（白色），此时，可以对headers的内
容进行编辑。
点击Inspector右上方的Raw超链接，会显示纯文本形式的header，header就是以纯文本
形式发送到网络上的。点击链接HeaderDefinitions，可以查看关于常见HTTPheader及其使
用方式的帮助。
由于Windows树形视图控制存在局限性，因此只能显示header的名称和值的前260个字
符。要查看长度超过260个字符的header，可以选中该header，按下Enter或F2键，或右击
header并选中ViewHeader。HeaderViewer窗口会以只读模式打开，可以查看其全名和值。在
112
---
## Page 113
5.5 HEADERS
窗口的标题栏中会显示值的长度（以字符数表示）。
虽然Inspector处于只读（ReadOnly）模式，但为了便于阅读，所有的Cookie请求头都会
分解成名称-值对。在编辑（Edit）模式下，任何Cookie头都在单独一行中显示，发送给服务
器时也是每行一个Cookie头。
5.5.1
上下文菜单
右击Header列表会显示包含以下选项的菜单，如表5-1所示。
表5-1
Header菜单
Vicw Header
打开选中hcader的Header Viewer窗口。
Edit Header
（只以编辑模式显示）打开选中header的HeaderEditor窗口。
Copy Header
把整个选中的header拷贝到剪贴板。
Copy Value only
把选中的header的值拷贝到剪贴板。
Send to TextWizard
把选中的header的值拷贝到TextWizard，以便对编码过的文本进行解码。
Add Header
在 Edit模式下，创建新的hcader。
Remove Header
在Edit模式下，删除选中的 header
Paste Headers
在Edit模式下，尝试基于剪贴板的信息添加新header。
Lookup Header
打开包含选中 HTTPheader的信息的Web页面。
5.5.2
快捷键
选中WebSession列表中的Session后，按下CTRL+H键可以激活请求和响应的Header
Inspectors。在Inspector中，可以使用表5-2所示的快捷键：
表5-2
快捷键
CTRL+C
把选中的hcader拷贝到剪贴板。
CTRL+SHIFT+C
把选中header的值拷贝到剪贴板。
F2或 Enter
打开选中header的 Header Viewer或Header Editor窗口。
CTRL+V
在Editing模式下，基于剪贴板上的文本，添加一个或多个新hcader。
Insert
在Editing模式下，创建新的空白header。
Delete
在Editing模式下，删除选中的header。
113
---
## Page 114
第5章Inspectors
5.5.3编辑
当Inspector处在Edit（编辑）模式下时，把headers发送到服务器或客户端之前可以对它
进行修改。如果想一次性修改全部headers，可以点击Inspector右上方的Raw链接。此时会
显示RawHeaders窗口，可以保存新的header集。
此外，还可以通过编辑Inspector上方的文本内容，直接修改Request或StatusLine的内
容。要编辑某个名称-值对的header，可以选中它，按F2键或点击Enter，HeaderEditor窗口
就会出现。要添加新的Header，按Insert键；会出现新的header，并自动打开HeaderEditor。
你可以在对话框中更新新header的名称-值对，或者点击窗口下方的HeaderTemplates按
钮，从常用的header中选择名称-值对，如图5-7所示。
AP
Hede Edto S chan]
Nane
falue:
vale
STANDALON;
，
I-Modified-Since
I-None-Metch
Auth
Eopires (distant)
Cache-Centrol (no-cache)
Cache-Centrol (one day)
Last-Moditied
图5-7
5.6
HEXVIEW
类型
请求&响应
允许编辑
是
114
---
## Page 115
5.6HEXVIEW
HexViewInspector支持在十六进制编辑框中查看请求和响应的header和body。当内容是
二进制形式时，该功能很有用。
该Inspector包含HexEdit控制栏，提供三个列。最左侧的列用浅灰色显示，表示相邻列
的字节流的十六进制地址。中间列是各个字节流的十六进制形式。最右侧的列以ASCII文本
形式显示这些字节流。如果HexView被配置成显示header，请求头会是蓝色的，响应头是绿
色的，请求体用黑色显示。
Inspector的最下方是状态栏，包含三个面板。第一个面板显示的是当前光标在字节流中
的位置，其值有十进制和十六进制两种格式。如果Inspector需要显示hcader字节，当光标进
入body部分的字节时，会自动把偏移重置为0。
如果在控制栏中选中了一个或多个字节，中间面板显示的是当前选中字节的长度。
右侧面板显示了当前的模式：Readonly、Overwrite或Insert。除非Session是暂停在断点
处或由于编辑而处于未锁定状态，否则Inspector都会处于Readonly模式。在编辑模式下，
按下Insert键，可以在重写和插入新的字节之间切换。
HexViewInspector的上下文菜单支持表5-3中的选项：
表5-3
HexView菜单
Insert File Here..
在Edit模式下，在当前光标位置插入选中文件的内容。
弹出对话框，要求你输入要选择的字节数，然后从当前光标位置开始按指定数量选
Seleet Bytes...
中相应字节。如果你想指定十六进制形式的字节数，在最前面键入S字符。
提示：如果你想查看HTTP响应的Chunked编码块，该功能就很有用，因为每个块
的长度使用十六进制数来指定。
Save Selected Bytes..
当选中一个或多个字节时，该项可将选中的字节保存到指定文件中。
支持把元标移到选定的位置。
Goto Offset..
输入+或-字符，可以指定从当前光标位置开始的相对偏移，而不是从内容最开始的
偏移。如果你想指定十六进制形式的字节数，在最前面键入S字符。
Find Bytes..
可以指定要搜索的十六进制内容。该搜索从当前光标所在的位置开始。按下F3键，
在每次匹配后可以维续向下搜索。
支持指定要搜索的字符串（字节会被当做UTF-8字符处理）。搜索时从当前光标所
Find String...
在的位置开始。按下F3键，在每次搜索匹配后可以继续向下搜索。
115
---
## Page 116
第5章Inspectors
续表
该复选框用于控制是否显示hcader字节，如果没有选择该复选框，只会显示body
字节。
Show Headers
提示：在当前版本的Fiddler中，当HexView Inspector处于Edit模式时，该选项会
自动取消选中，因为它不支持编辑header。
Set Bytes per Line..
支持指定每行显示多少个字节.0表示让HexView自动基于可用的宽度选择字节数
（每行最少四个字节）。
5.7IMAGEVIEW
类型
响应
允许编辑
否
ImageViewInspector支持以图片形式显示响应的内容。该Inspector既支持常见的Web图
片格式，包括JPEG、PNG、GIF，也支持一些不常见的格式，比如游标、图片、位图、EMF/WMF
和TIFF格式。该Inspector不支持SVG图：如果安装了IE9或更新版本，可通过WebView
Inspector查看SVG格式的响应。
左侧的灰色面板中显示的是当前选中图片的信息，包括其大小（以字节数表示）、像素尺
寸以及文件格式。在灰色面板底部是一个下拉列表，可以控制图像的缩放：
·Noscaling：图片以原始大小显示。