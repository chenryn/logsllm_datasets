title:Direct Anonymous Attestation with Efficient Verifier-Local Revocation
for Subscription System
author:Vireshwar Kumar and
He Li and
Noah Luther and
Pranav Asokan and
Jung-Min "Jerry" Park and
Kaigui Bian and
Martin B. H. Weiss and
Taieb Znati
Direct Anonymous Attestation with Efficient Verifier-Local
Revocation for Subscription System
Vireshwar Kumar
Virginia Tech
PI:EMAIL
Jung-Min (Jerry) Park
Virginia Tech
PI:EMAIL
He Li
Virginia Tech
PI:EMAIL
Kaigui Bian
Peking University
PI:EMAIL
Noah Luther
Virginia Tech
PI:EMAIL
Martin B. H. Weiss
University of Pittsburgh
PI:EMAIL
Pranav Asokan
Virginia Tech
PI:EMAIL
Taieb Znati
University of Pittsburgh
PI:EMAIL
ABSTRACT
For a computing platform that is compliant with the Trusted Plat-
form Module (TPM) standard, direct anonymous attestation (DAA)
is an appropriate cryptographic protocol for realizing an anony-
mous subscription system. This approach takes advantage of a cryp-
tographic key that is securely embedded in the platform’s hardware,
and enables privacy-preserving authentication of the platform. In all
of the existing DAA schemes, the platform suffers from significant
computational and communication costs that increase proportion-
ally to the size of the revocation list. This drawback renders the
existing schemes to be impractical when the size of the revocation
list grows beyond a relatively modest size. In this paper, we propose
a novel scheme called Lightweight Anonymous Subscription with
Efficient Revocation (LASER) that addresses this very problem. In
LASER, the computational and communication costs of the plat-
form’s signature are multiple orders of magnitude lower than the
prior art. LASER achieves this significant performance improve-
ment by shifting most of the computational and communication
costs from the DAA’s online procedure (i.e., signature generation) to
its offline procedure (i.e., acquisition of keys/credentials). We have
conducted a thorough analysis of LASER’s performance-related fea-
tures. We have implemented LASER on a laptop with an on-board
TPM. To the best of our knowledge, this is the first implementa-
tion of a DAA scheme on an actual TPM cryptoprocessor that is
compliant with the most recent TPM specification, viz., TPM 2.0.
KEYWORDS
Direct anonymous attestation; trusted platform module (TPM).
ACM Reference Format:
Vireshwar Kumar, He Li, Noah Luther, Pranav Asokan, Jung-Min (Jerry)
Park, Kaigui Bian, Martin B. H. Weiss, and Taieb Znati. 2018. Direct Anony-
mous Attestation with Efficient Verifier-Local Revocation for Subscription
System. In ASIA CCS ’18: 2018 ACM Asia Conference on Computer and Com-
munications Security, June 4–8, 2018, Incheon, Republic of Korea. ACM, New
York, NY, USA, 8 pages. https://doi.org/10.1145/3196494.3196497
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than ACM
must be honored. Abstracting with credit is permitted. To copy otherwise, or republish,
to post on servers or to redistribute to lists, requires prior specific permission and/or a
fee. Request permissions from permissions@acm.org.
ASIA CCS ’18, June 4–8, 2018, Incheon, Republic of Korea
© 2018 Association for Computing Machinery.
ACM ISBN 978-1-4503-5576-6/18/06...$15.00
https://doi.org/10.1145/3196494.3196497
1 INTRODUCTION
There has been a rapid growth in the online electronic subscription
services where the subscribed users access contents (e.g., video)
and/or resources (e.g., software) made available by the service
providers. In many subscription services, the users have signifi-
cant concerns for remaining anonymous and preserving privacy
so that the providers cannot track their interests, usage patterns,
geographical locations, and other personal details. Hence, there
is a major research thrust to develop an Anonymous Subscription
System (ASS) in which the providers allow access of their ser-
vices to the subscribed and authenticated, but anonymous users
[4, 5, 20, 22, 23]. Direct Anonymous Attestation (DAA) is the most
appropriate cryptographic protocol to realize the ASS as DAA en-
ables privacy-preserving authentication of a user’s platform by
utilizing the cryptographic key which is securely embedded into
the platform’s hardware [7].
A DAA scheme involves three entities—a platform, a verifier and
an issuer. We consider the subscribed user as the platform, and the
service provider as the verifier. The role of the issuer is to generate
and issue keys/credentials to platforms, and revoke compromised
or insecure platforms by updating and publishing revocation lists. A
platform consists of a host and a trusted platform module (TPM). The
TPM is a secure and dedicated cryptoprocessor which is designed
to secure the platform by integrating its cryptographic key into
its hardware [28]. The TPM generates the anonymous signature
on the login request message sent by the platform to the verifier.
The host utilizes the credentials obtained from the issuer to assist
the TPM in the generation of the signature by performing most of
the computationally expensive operations. The verifier verifies the
validity of the signature received from the platform. As part of the
verification process, the verifier also checks the revocation status
of the platform. In this paper, the signature on the login request
message is called a “login signature”.
The Trusted Computing Group (TCG) has standardized the el-
liptic curve cryptography (ECC)-based DAA in the most recent
TPM specification version 2.0 [8, 14, 28]. This specification has also
been published as the international standard ISO/IEC 11889:2015
[21]. Although the computing industry and academia have made
noteworthy strides in improving the security and efficacy of DAA
schemes in recent years, all the existing schemes in the literature
still share a common critical drawback of inefficient revocation
check procedures [7–9, 11, 14, 15]. The existing DAA schemes em-
ploy a signature-based revocation check procedure which enables
the issuer the ability of revoking a platform based on its malicious
Session 13: Privacy 2ASIACCS’18, June 4–8, 2018, Incheon, Republic of Korea567signature [8, 11]. In these schemes, the revocation list contains tu-
ples retrieved from the malicious login signatures. For each revoked
tuple included in the revocation list, a platform needs to generate a
proof of non-revocation of its secret key with respect to the tuple,
and include it as a part of its signature. Hence, two things increase
linearly with the number of revoked platforms indicated in the revo-
cation list [12, 25]: (1) the computational complexity of generating
the login signature; and (2) the communication overhead in terms
of the length of the login signature. These shortcomings of DAA
pose a significant technical challenge in terms of the deployment of
DAA in real-world applications—i.e., the computational complexity
and the communication overhead become unacceptably high for
most applications when the revocation list grows beyond a mod-
est size (e.g., a few hundred). This challenge also implies that the
existing schemes are not appropriate for the subscription systems
that have stringent latency requirements. Note that hundreds of
platforms are revoked per day in a network with a large number
(e.g., a million) of users [24, 27].
In this paper, we propose a novel ECC-based DAA scheme called
Lightweight Anonymous Subscription with Efficient Revocation (LASER)
which addresses the problem of revocation scalability. In LASER,
the computational complexity of the login signature generation pro-
cedure and communication overhead of the login signature are mul-
tiple orders of magnitude lower than the prior art. LASER achieves
this significant performance improvement by enabling controlled
verifier-local revocation [6], and by shifting most of the computa-
tional and communication costs (to enable signature-based revoca-
tion) from the DAA’s online procedure (i.e., login signature genera-
tion) to its offline procedure (i.e., acquisition of keys/credentials).
This strategy significantly improves the practicality of DAA in
real-world subscription systems, because the critical performance
bottlenecks of those applications are determined by the perfor-
mance of the online procedure at the platform. Unlike legacy DAA
schemes, LASER is scalable, and can be deployed in the subscription
system which is expected to have a long revocation list.
In terms of implementation results in the prior art, either the
functionality of the TPM is only simulated in trusted execution en-
vironments, e.g., ARM TrustZone [29], or the results are obtained
from the implementation on TPM version 1.2 [13]. In this paper, we
have validated our analytical results by implementing LASER on a
laptop platform with an on-board TPM. To the best of our knowl-
edge, this is the first implementation and analysis of an anonymous
authentication scheme using an actual TPM cryptoprocessor that
is compliant with the most recent TPM specification version 2.0.
2 PROPOSED SCHEME: LASER
2.1 Definition and Overview of LASER
Definition 2.1. LASER is composed of the following protocols.
(1) (gpk, isk) ← Setup(1λ): This setup algorithm is run by the
issuer. The input to this algorithm is a security parameter 1λ.
This algorithm outputs an issuer’s secret key, represented by
isk, and a corresponding group public key, represented by gpk.
The isk is known only to the issuer, and gpk is published.
(2) (tsk, hdl, tpk, mcl) ← MemCreGen(gpk, isk, ms): To join the
group created by the issuer, the TPM and the host of the platform
run this registration protocol with the issuer. The inputs to the
(3) (ctl′, logCrej) ← LogCreGen(gpk, isk, ctl, tsk, hdl, tpk,
issuer are gpk and isk, the input to the TPM is gpk, and the in-
puts to the host are gpk and ms. Here, ms represents the number
of absolutely unlinkable credentials allotted to each platform,
and its value is set based on the unlinkability requirement of the
platform (see Appendix A). In this protocol, the TPM generates
a TPM’s secret key, represented by tsk, a corresponding TPM’s
public key, represented by tpk, and a key handle, represented by
hdl. The hdl specifies the location of the tsk in the secure mem-
ory of TPM. The tsk is known only to the TPM, and tpk and
hdl are forwarded to the host. Further, the host acquires a mem-
bership credential, represented by memCrej, for each j ∈ [1, ms],
from the issuer. Finally, the host outputs a membership credential
list, represented by mcl = (memCre1, · · · , memCrems).
memCrej): The TPM and the host run this login credential ac-
quisition protocol with the issuer. In this protocol, the inputs to
the issuer are gpk, isk, and a credential token list, represented
by ctl, the inputs to the TPM are gpk and tsk, and the inputs
to the host are gpk, hdl, tpk, and memCrej. The ctl is securely
stored and maintained by the issuer. In this protocol, the is-
suer outputs an updated list ctl′, and the host acquires a login
credential, represented by logCrej, from the issuer.
(4) (logCrej, cul′) ← SelectLogCre(lcl, cul, csr): This creden-
tial selection algorithm is performed by the host. The inputs
to the host are a login credential list, represented by lcl, a
credential-usage list, represented by cul, and a credential-selection
rule, represented by csr. Before running this algorithm, the
TPM and the host run the LogCreGen protocol with the is-
suer for all j ∈ [1, ms] to obtain the login credential list lcl =
(logCre1, · · · , logCrems), where each instance of the LogCreGen
protocol is initiated by the host after a randomly selected time
interval. The host also employs an application-based rule as-
signment for csr which takes one of the two values, i.e., csr ∈
{absUnlink, conUnlink}, corresponding to the application-based
request to generate an absolutely unlinkable signature or a con-
ditionally unlinkable signature, respectively. In this algorithm,
the host selects the value of j ∈ [1, ms] based on the rule csr
and the current usage list cul, and outputs the login credential
logCrej from lcl. It also outputs the updated list cul′.
(5) σs ← Sign(gpk, tsk, hdl, tpk, logCrej, M): This login signa-
ture generation protocol is performed between the TPM and
the host. The inputs to the TPM are gpk and tsk, and the in-
puts to the host are gpk, hdl, tpk, logCrej and a login request
message, represented by M ∈ {0, 1}∗. This protocol outputs a
login signature σs.
(6) valid/invalid ← Verify(gpk, σs , M, tRL): This verification
algorithm takes gpk, a purported login signature σs, a login re-
quest message M, and a token-based revocation list, represented
by tRL, as inputs. The tRL is maintained and published by the
issuer. This algorithm verifies: (1) whether the signature is hon-
estly generated, and (2) whether the login credential used to
generate the signature is not revoked. If both the verification
steps are successful, this algorithm outputs the value valid;
otherwise, it outputs the value invalid.
(7) tRL′ ← Revoke(gpk, ctl, σs , M, tRL): This is the signature-
based revocation algorithm which is utilized by the issuer to
revoke the login credential of the compromised platform. This
Session 13: Privacy 2ASIACCS’18, June 4–8, 2018, Incheon, Republic of Korea568algorithm takes gpk, ctl, a signature σs, a message M, and tRL,
as inputs. It updates the tRL, and outputs the updated list, tRL′.
(8) true/false ← Identify(gpk, σs , M, tsk∗): This signature trac-
ing algorithm is required to characterize the security properties.
It takes gpk, a signature σs, a message M, and a TPM’s secret
key tsk∗ as inputs. It outputs the value true if σs is proved to
be generated using tsk∗; otherwise, it outputs the value false.
Here, we paraphrase the technical details of LASER and high-
light our contributions. In LASER, the platform obtains two types of
credentials—(1) membership credentials through the MemCreGen
protocol, and (2) login credentials through the LogCreGen protocol.
In the MemCreGen protocol, the platform registers with the issuer
using the TPM’s secret key, and obtains ms membership creden-
tials. For each j ∈ [1, ms], the platform performs the LogCreGen
protocol where it utilizes a membership credential, and acquires
a corresponding login credential from the issuer. To support the
signature-based verifier-local revocation, the issuer includes a revo-
cation token, represented by yj, in each login credential. The issuer
also publishes the token-based revocation list tRL which contains
all the revoked tokens. In the Sign protocol, the platform utilizes a
login credential to generate a signature on the login request mes-
sage. In the login signature, the platform includes a parameter called
“token response” which is computed by the exponentiation of the
token yj over a randomly selected “base”. Through the Verify algo-
rithm, the verifier checks the validity of the signature. The verifier
also determines the revocation status of the login credential utilized
to generate the signature by computing the exponentiation of each
of the revoked tokens in tRL over the base, and matching the result
with the token response.
Recall that in the existing DAA schemes, for each revoked tuple
included in the revocation list, the platform needs to generate a
proof of non-revocation of its TPM’s secret key with respect to
the tuple, and include it as a part of its login signature [12]. This
results in a linear increase of the computational complexity and
the communication overhead at the platform with the increase
in the number of revoked credentials. Unlike the existing DAA
schemes, in LASER, the platform does not need to generate any
proof of knowledge of non-revocation of its TPM’s secret key. The
inclusion of the revocation token in the login signature enables the