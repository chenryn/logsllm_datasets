11.3.1 创建列表
11.3.2 只读集合
11.4 队列
11.5 栈
11.6 链表
11.7 有序列表
11.8 字典
11.8.1 字典初始化器
11.8.2 键的类型
11.8.3 字典示例
11.8.4 Lookup类
11.8.5 有序字典
11.9 集
11.10 性能
11.11 小结
第12章 特殊的集合
12.1 概述
12.2 处理位
12.2.1 BitArray类
12.2.2 BitVector32结构
12.3 可观察的集合
12.4 不变的集合
12.4.1 使用构建器和不变的集合
12.4.2 不变集合类型和接口
12.4.3 使用LINQ和不变的数组
12.5 并发集合
12.5.1 创建管道
12.5.2 使用BlockingCollection
12.5.3 使用ConcurrentDictionary
12.5.4 完成管道
12.6 小结
第13章 LINQ
13.1 LINQ概述
13.1.1 列表和实体
13.1.2 LINQ查询
13.1.3 扩展方法
13.1.4 推迟查询的执行
13.2 标准的查询操作符
13.2.1 筛选
13.2.2 用索引筛选
13.2.3 类型筛选
13.2.4 复合的from子句
13.2.5 排序
13.2.6 分组
13.2.7 LINQ查询中的变量
13.2.8 对嵌套的对象分组
13.2.9 内连接
13.2.10 左外连接
13.2.11 组连接
13.2.12 集合操作
13.2.13 合并
13.2.14 分区
13.2.15 聚合操作符
13.2.16 转换操作符
13.2.17 生成操作符
13.3 并行LINQ
13.3.1 并行查询
13.3.2 分区器
13.3.3 取消
13.4 表达式树
13.5 LINQ提供程序
13.6 小结
第14章 错误和异常
14.1 简介
14.2 异常类
14.3 捕获异常
14.3.1 实现多个catch块
14.3.2 在其他代码中捕获异常
14.3.3 System.Exception属性
14.3.4 异常过滤器
14.3.5 重新抛出异常
14.3.6 没有处理异常时发生的情况
14.4 用户定义的异常类
14.4.1 捕获用户定义的异常
14.4.2 抛出用户定义的异常
14.4.3 定义用户定义的异常类
14.5 调用者信息
14.6 小结
第15章 异步编程
15.1 异步编程的重要性
15.2 异步模式
15.2.1 同步调用
15.2.2 异步模式
15.2.3 基于事件的异步模式
15.2.4 基于任务的异步模式
15.3 异步编程的基础
15.3.1 创建任务
15.3.2 调用异步方法
15.3.3 延续任务
15.3.4 同步上下文
15.3.5 使用多个异步方法
15.3.6 转换异步模式
15.4 错误处理
15.4.1 异步方法的异常处理
15.4.2 多个异步方法的异常处理
15.4.3 使用AggregateException信息
15.5 取消
15.5.1 开始取消任务
15.5.2 使用框架特性取消任务
15.5.3 取消自定义任务
15.6 小结
第16章 反射、元数据和动态编程
16.1 在运行期间检查代码和动态编程
16.2 自定义特性
16.2.1 编写自定义特性
16.2.2 自定义特性示例：WhatsNewAttributes
16.3 反射
16.3.1 System.Type类
16.3.2 TypeView示例
16.3.3 Assembly类
16.3.4 完成WhatsNewAttributes示例
16.4 为反射使用动态语言扩展
16.4.1 创建Calculator库
16.4.2 动态实例化类型
16.4.3 用反射API调用成员
16.4.4 使用动态类型调用成员
16.5 dynamic类型
16.6 DLR
16.7 包含DLR ScriptRuntime
16.8 DynamicObject和ExpandoObject
16.8.1 DynamicObject
16.8.2 ExpandoObject
16.9 小结
第Ⅱ部分 .NET Core与Windows Runtime
第17章 Visual Studio 2015
17.1 使用Visual Studio 2015
17.1.1 Visual Studio的版本
17.1.2 Visual Studio设置
17.2 创建项目
17.2.1 面向多个版本的.NET Framework
17.2.2 选择项目类型
17.3 浏览并编写项目
17.3.1 构建环境：CLI和MSBuild
17.3.2 Solution Explorer
17.3.3 使用代码编辑器
17.3.4 学习和理解其他窗口
17.3.5 排列窗口
17.4 构建项目
17.4.1 构建、编译和生成代码
17.4.2 调试版本和发布版本
17.4.3 选择配置
17.4.4 编辑配置
17.5 调试代码
17.5.1 设置断点
17.5.2 使用数据提示和调试器可视化工具
17.5.3 Live Visual Tree
17.5.4 监视和修改变量
17.5.5 异常
17.5.6 多线程
17.6 重构工具
17.7 体系结构工具
17.7.1 代码地图
17.7.2 层关系图
17.8 分析应用程序
17.8.1 诊断工具
17.8.2 Concurrency Visualizer
17.8.3 代码分析器
17.8.4 Code Metrics
17.9 小结
第18章 .NET编译器平台
18.1 简介
18.2 编译器管道
18.3 语法分析
18.3.1 使用查询节点
18.3.2 遍历节点
18.4 语义分析
18.4.1 编译
18.4.2 语义模型
18.5 代码转换
18.5.1 创建新树
18.5.2 使用语法重写器
18.6 Visual Studio Code重构
18.6.1 VSIX包
18.6.2 代码重构提供程序
18.7 小结
第19章 测试
19.1 概述
19.2 使用MSTest进行单元测试
19.2.1 使用MSTest创建单元测试
19.2.2 运行单元测试
19.2.3 使用MSTest预期异常
19.2.4 测试全部代码路径
19.2.5 外部依赖
19.2.6 Fakes Framework
19.2.7 IntelliTest
19.3 使用xUnit进行单元测试
19.3.1 使用xUnit和.NET Core
19.3.2 创建Fact属性
19.3.3 创建Theory属性
19.3.4 用dotnet工具运行单元测试
19.3.5 使用Mocking库
19.4 UI测试
19.5 Web测试
19.5.1 创建Web测试
19.5.2 运行Web测试
19.5.3 Web负载测试
19.6 小结
第20章 诊断和Application Insights
20.1 诊断概述
20.2 使用EventSource跟踪
20.2.1 EventSource的简单用法
20.2.2 跟踪工具
20.2.3 派生自EventSource
20.2.4 使用注释和EventSource
20.2.5 创建事件清单模式
20.2.6 使用活动ID
20.3 创建自定义侦听器
20.4 使用Application Insights
20.4.1 创建通用Windows应用程序
20.4.2 创建Application Insights资源
20.4.3 配置Windows应用程序
20.4.4 使用收集器
20.4.5 编写自定义事件
20.5 小结
第21章 任务和并行编程
21.1 概述
21.2 Parallel类
21.2.1 使用Parallel.For（）方法循环
21.2.2 提前停止Parallel.For
21.2.3 Parallel.For（）的初始化
21.2.4 使用Parallel.ForEach（）方法循环
21.2.5 通过Parallel.Invoke（）方法调用多个方法
21.3 任务
21.3.1 启动任务
21.3.2 Future——任务的结果
21.3.3 连续的任务
21.3.4 任务层次结构
21.3.5 从方法中返回任务
21.3.6 等待任务
21.4 取消架构
21.4.1 Parallel.For（）方法的取消
21.4.2 任务的取消
21.5 数据流
21.5.1 使用动作块
21.5.2 源和目标数据块
21.5.3 连接块
21.6 小结
第22章 任务同步
22.1 概述
22.2 线程问题
22.2.1 争用条件
22.2.2 死锁
22.3 lock语句和线程安全
22.4 Interlocked类
22.5 Monitor类
22.6 SpinLock结构
22.7 WaitHandle基类
22.8 Mutex类
22.9 Semaphore类
22.10 Events类
22.11 Barrier类
22.12 ReaderWriterLockSlim类
22.13 Timer类
22.14 小结
第23章 文件和流
23.1 概述
23.2 管理文件系统
23.2.1 检查驱动器信息
23.2.2 使用Path类
23.2.3 创建文件和文件夹
23.2.4 访问和修改文件的属性
23.2.5 创建简单的编辑器
23.2.6 使用File执行读写操作
23.3 枚举文件
23.4 使用流处理文件
23.4.1 使用文件流
23.4.2 读取流
23.4.3 写入流
23.4.4 复制流
23.4.5 随机访问流
23.4.6 使用缓存的流
23.5 使用读取器和写入器
23.5.1 StreamReader类
23.5.2 StreamWriter类
23.5.3 读写二进制文件
23.6 压缩文件
23.6.1 使用压缩流
23.6.2 压缩文件
23.7 观察文件的更改
23.8 使用内存映射的文件
23.8.1 使用访问器创建内存映射文件
23.8.2 使用流创建内存映射文件
23.9 使用管道通信
23.9.1 创建命名管道服务器
23.9.2 创建命名管道客户端
23.9.3 创建匿名管道
23.10 通过Windows运行库使用文件和流