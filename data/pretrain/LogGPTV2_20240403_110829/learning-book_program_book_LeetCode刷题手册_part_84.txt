make([][][]bool，len(grid)),0,0,0,0
for i := 0; i >16, (state>>8)&0xFF
keys := state & OxFF
if keys == fullkeys {
return res
for i:= 0; i >16,(state>>8)&0xFF
keys := state & OxFF
if keys == fullkeys {
*res = min(*res, step)
return
flag, canThroughLock := keys&(l>1
if !isPossible(piles, mid, H) {
1ow = mid + 1
}else{
high = mid
return 1ow
func isPossible(piles []int, h, H int) bool {
res := 0
for -, p := range piles {
res += int(math.Cei1(float64(p) / float64(h)))
return res <= H
func maxInArr(xs []int) int {
res := 0
for _, x := range xs {
if res < x{
res = x
}
return res
876.MiddleoftheLinkedList
题目
Given a non-empty, singly linked list with head node head, return a middle node of linked list.
If there are two middle nodles, return the second middle node.
Example 1:
---
## Page 837
Input: [1,2, 3,4,5]
Output: Node 3 from this 1ist (Serialization: [3,4,5])
The returned node has value 3.(The judge's serialization of this node is
[3,4, 5]) ,
Note that we returned a ListNode object ans, such that:
ans.val = 3, ans.next.val = 4, ans.next.next.val = 5, and ans.next.next.next =
NULL .
Example 2:
Input: [1,2,3,4,5,6]
Output: Node 4 from this 1ist (Serialization: [4,5,6])
Since the 1ist has two middle nodes with values 3 and 4, we return the second
one.
Note:
● The number of nodes in the given list will be between 1 and 100.
题目大意
输出链表中间结点。这题在前面题目中反复出现了很多次了。
如果链表长度是奇数，输出中间结点是中间结点。如果链表长度是双数，输出中间结点是中位数后面的
那个结点。
解题思路
这道题有一个很简单的做法，用2个指针只遍历一次就可以找到中间节点。一个指针每次移动2步，另
外一个指针每次移动1步，当快的指针走到终点的时候，慢的指针就是中间节点。
代码
package leetcode
/**
* Definition for singly-linked list.
* type ListNode struct {
valint
Next *ListNode
func middleNode(head *ListNode) *ListNode {
---
## Page 838
if head == nil l1 head.Next == ni1 {
return head
pl := head
p2 := head
for p2.Next != nil && p2.Next.Next != nil {
pl = pl.Next
p2 = p2.Next.Next
1ength := 0
cur := head
for cur != nil {
1ength++
cur = cur.Next
if length%2 == 0 {
return pl.Next
return pl
878.NthMagical Number
题目
A positive integer is magicol if it is divisible by either A or B.
Return the N-th magical number. Since the answer may be very large, return it modulo 1o9 +
7.
Example 1:
Input: N = 1, A = 2, B = 3
Output:2
Example 2:
Input: N = 4, A = 2, B = 3
Output:6
Example 3:
Input: N =
2,B =4
output: 10
Example 4:
---
## Page 839