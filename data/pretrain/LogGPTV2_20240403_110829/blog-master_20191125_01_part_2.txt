bgwriter_lru_multiplier = 10.0  
effective_io_concurrency = 0  
max_worker_processes = 128  
max_parallel_maintenance_workers = 4  
max_parallel_workers_per_gather = 0  
max_parallel_workers = 24  
wal_level = replica  
fsync = on  
synchronous_commit = off  
full_page_writes = on  
wal_compression = on  
wal_buffers = 16MB  
wal_writer_delay = 10ms  
checkpoint_timeout = 15min  
max_wal_size = 96GB  
min_wal_size = 16GB  
checkpoint_completion_target = 0.3  
archive_mode = on  
archive_command = '/bin/date'  
max_wal_senders = 32  
max_replication_slots = 16  
max_standby_archive_delay = 300s  
max_standby_streaming_delay = 300s  
wal_receiver_status_interval = 1s  
random_page_cost = 1.1  
effective_cache_size = 512GB  
log_destination = 'csvlog'  
logging_collector = on  
log_filename = 'postgresql-%d.log'  
log_truncate_on_rotation = on  
log_checkpoints = on  
log_error_verbosity = verbose  
log_statement = 'ddl'  
log_timezone = 'PRC'  
autovacuum = on  
log_autovacuum_min_duration = 0  
autovacuum_max_workers = 3  
autovacuum_freeze_max_age = 1200000000  
autovacuum_multixact_freeze_max_age = 1400000000  
autovacuum_vacuum_cost_delay = 0ms  
datestyle = 'iso, mdy'  
timezone = 'PRC'  
lc_messages = 'en_US.UTF-8'  
lc_monetary = 'en_US.UTF-8'  
lc_numeric = 'en_US.UTF-8'  
lc_time = 'en_US.UTF-8'  
default_text_search_config = 'pg_catalog.english'  
vi $PGDATA/pg_hba.conf  
host all all 0.0.0.0/0 md5  
host replication all 0.0.0.0/0 md5  
```  
11、启动数据库，并安装插件。  
```  
pg_ctl start  
psql  
psql (11.2)  
Type "help" for help.  
postgres=# \l  
                               List of databases  
   Name    |  Owner   | Encoding | Collate |   Ctype    |   Access privileges     
-----------+----------+----------+---------+------------+-----------------------  
 postgres  | postgres | UTF8     | C       | en_US.utf8 |   
 template0 | postgres | UTF8     | C       | en_US.utf8 | =c/postgres          +  
           |          |          |         |            | postgres=CTc/postgres  
 template1 | postgres | UTF8     | C       | en_US.utf8 | =c/postgres          +  
           |          |          |         |            | postgres=CTc/postgres  
(3 rows)  
postgres=# create extension rdkit ;  
CREATE EXTENSION  
```  
### 打包的插件太少了，加新的插件  
例如，安装PG自带插件  
https://www.postgresql.org/ftp/source/v11.6/  
```  
(base) [rdkit@pg11-test ~]$ wget https://ftp.postgresql.org/pub/source/v11.6/postgresql-11.6.tar.bz2  
tar -jxvf postgresql-11.6.tar.bz2  
cd   
./configure --prefix=/home/rdkit/anaconda3  
cd contrib  
```  
修改Makefile  
```  
vi Makefile  
删除  
vacuumlo  
oid2name  
pg_standby  
```  
安装  
```  
USE_PGXS=1 make   
USE_PGXS=1 make install  
```  
将安装后的lib和sql文件拷贝到正确目录  
```  
cd /home/rdkit/anaconda3  
mv lib/postgresql/* lib/  
mv share/postgresql/extension/* share/extension/  
```  
## 部署rdkit数据库环境 - 方法 2  源码安装  
https://github.com/rdkit/rdkit/releases  
```  
wget https://github.com/rdkit/rdkit/archive/Release_2019_09_1.tar.gz   
tar -zxvf Release_2019_09_1.tar.gz   
cd rdkit-Release_2019_09_1  
mkdir build  
cd build  
必须使用python3  
export PATH  
export RDBASE  
export LD_LIBRARY_PATH  
cmake .. -DPYTHON_EXECUTABLE=/usr/bin/python3  
make  
make install  
```  
```  
cd rdkit-Release_2019_09_1/Code/PgSQL/rdkit  
USE_PGXS=1 make  
USE_PGXS=1 make install  
```  
## 使用手册  
https://www.rdkit.org/docs/Cartridge.html#reference-guide  
下载测试数据  
http://downloads.emolecules.com/free/  
ftp://ftp.ebi.ac.uk/pub/databases/chembl/ChEMBLdb/latest  
参照文档建表，倒入数据，创建索引，进行查询，分析。  
## 参考  
https://www.anaconda.com/distribution/#linux  
https://rdkit.readthedocs.io/en/latest/Install.html  
https://www.rdkit.org/docs/Cartridge.html  
https://github.com/rdkit/rdkit  
Molecular database cartridge for PostgreSQL supporting substructure and similarity searches as well as many descriptor calculators  
https://github.com/rdkit/rdkit/tree/master/Code/PgSQL/rdkit  
https://github.com/rdkit/rdkit/blob/master/Docs/Book/Install.md  
https://github.com/rdkit/rdkit/blob/master/Docs/Book/Cartridge.md  
https://cactus.nci.nih.gov/presentations/meeting-08-2011/Fri_Aft_Greg_Landrum_RDKit-PostgreSQL.pdf  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")