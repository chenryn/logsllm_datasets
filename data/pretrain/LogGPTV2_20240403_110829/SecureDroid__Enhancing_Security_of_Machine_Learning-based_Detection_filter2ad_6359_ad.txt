### Section 5.2: Validation of the Effectiveness and Significance of SecCLS

In this section, we further validate the effectiveness and significance of our proposed feature selection method, SecCLS, in building a more secure classifier. We compare SecureDroid, which uses SecCLS to select features for each base classifier, with an ensemble of random feature selection (ERFS), which constructs base classifiers using a random feature selection method [5, 19]. The comparison is conducted under both attack and non-attack scenarios.

#### 5.2.1 Experimental Setup

As discussed in Section 5.1.3, well-crafted (WC) attacks are the most effective among the three attack strategies. Therefore, we evaluate SecureDroid and ERFS under WC attacks. The experimental results are presented in Table 3.

#### 5.2.2 Results and Analysis

**Table 3: Comparison of SecureDroid with SecCLS and ERFS with Random Feature Selection Against Well-Crafted Attacks (UnderAtt) and Without Attacks (NonAtt)**

| NonAtt/UnderAtt | δmax (Features Modified) | 4.8 (10) | 9.0 (20) | 13.5 (30) | 19.2 (40) | 25.2 (50) |
|------------------|---------------------------|----------|----------|-----------|-----------|-----------|
| **TPR (ERFS)**   | UnderAtt                  | 0.8563   | 0.5045   | 0.4326    | 0.2934    | 0.1647    |
| **ACC (ERFS)**   | UnderAtt                  | 0.9354   | 0.7888   | 0.7559    | 0.6981    | 0.6509    |
| **F1 (ERFS)**    | UnderAtt                  | 0.9167   | 0.6647   | 0.5953    | 0.4465    | 0.2813    |
| **TPR (SecureDroid)** | UnderAtt               | 0.9177   | 0.8323   | 0.8563    | 0.8308    | 0.8069    |
| **ACC (SecureDroid)** | UnderAtt               | 0.9168   | 0.8665   | 0.8621    | 0.8019    | 0.8106    |
| **F1 (SecureDroid)**  | UnderAtt               | 0.9015   | 0.8380   | 0.8375    | 0.7768    | 0.7795    |

From Table 3, we observe the following:

1. **Under Attacks:**
   - **ERFS:** When the evasion cost is small (δmax = 4.8, modifying 10 features), ERFS can somewhat resist the attack with a True Positive Rate (TPR) of 85.63%. However, as the evasion cost increases, the detection performance of ERFS drops significantly. For example, its TPR drops to 16.47% when the evasion cost (δmax) is 25.2, corresponding to manipulating 50 features.
   - **SecureDroid:** In contrast, SecureDroid, which uses SecCLS for feature selection, maintains a higher level of security. Its TPR never falls below 80.00% even with increasing evasion costs. This is because SecCLS reduces the likelihood of selecting features that attackers tend to manipulate, thereby forcing attackers to modify a larger number of features to achieve the same attack utility.

2. **Without Attacks:**
   - **SecureDroid:** Performs better than ERFS in the absence of attacks, achieving approximately 4-5% higher detection accuracy. This is because SecCLS retains the majority of the features for each individual classifier, ensuring high detection accuracy in the absence of attacks, whereas ERFS randomly assigns equal probability to each feature being selected.

### Section 5.4: Comparisons of SecureDroid with Other Alternative Defense Methods

In this set of experiments, we further examine the effectiveness of SecureDroid against adversarial attacks, specifically well-crafted attacks, by comparing it with other popular defense methods. These methods include:

1. **Feature Evenness (Defense1):** Enables the Original-Classifier to learn more evenly-distributed feature weights [23].
2. **Classifier Retraining (Defense2):** Follows Stackelberg game theories [7, 8, 17, 34] and models the attack as a vector θ to modify the training data set X, where the Original-Classifier is retrained [34, 38].
3. **Classifier Built on Reduced Feature Set (Defense3):** Selects a subset of features based on the generalization capability of the Original-Classifier and its security against data manipulation [46].

The experimental results are reported in Figure 5.

**Figure 5: Comparisons of Different Defense Methods**

- **(a) TPRs under Attacks**
- **(b) F1 Measures under Attacks**

From Figure 5, we can see that SecureDroid significantly outperforms the other defense models (Defense1–3) against well-crafted attacks. Although Defense2 (classifier retraining) performs slightly better than SecureDroid when the evasion costs (δmax) are 4.8 and 9.0 (modifying 10 and 20 features), the difference is not statistically significant. 

In fact, the retrained model modifies the training data distribution to approximate the testing space through the attack model θ. After modifying a large number of features in the malicious apps, the model tends to produce a distribution that is very close to that of benign apps, making it difficult to differentiate between them. As the evasion cost (δmax) increases, the performance of the retrained model drops significantly.

For Defense1 and Defense3, their performances (TPRs and F1 measures) degrade sharply as the evasion cost increases. Defense1 only exploits the information of the classifier’s feature weights without considering the manipulation costs of different features. Defense3, while built on a carefully selected feature subset, may have its robustness compromised when attackers manipulate a certain number of these features.

### Section 5.5: Scalability Evaluation of SecureDroid

In this section, we systematically evaluate the performance of SecureDroid, including its scalability and detection effectiveness, using a second sample set with a larger size. This set consists of 72,891 apps, including 32,443 malicious and 40,448 benign apps.

**Figure 6: Scalability Evaluation of SecureDroid**

- **Training Time:** As the size of the training data set increases, the running time for our detection system is quadratic to the number of training samples. For handling larger datasets, approximation or parallel algorithms could be developed.

**Figure 7: Stability Evaluation of SecureDroid**

- **Detection Stability:** We evaluate the detection stability of SecureDroid against adversarial attacks (well-crafted attacks) and in the absence of attacks, with different sizes of sample sets. The results show that SecureDroid enhances the security of machine learning-based detection and is feasible for practical use in Android malware detection against adversarial attacks.

### Conclusion

In this paper, we explore the security of machine learning in Android malware detection, focusing on how feature selection impacts the security of a learning-based classifier. Our study considers the different importances of features associated with their contributions to the classification problem and manipulation costs to adversarial attacks. We propose a novel feature selection method, SecCLS, which reduces the likelihood of selecting features that attackers tend to manipulate, thus helping to construct a more secure classifier.

To improve system security without compromising detection accuracy, we further propose an ensemble learning approach, SecENS, by aggregating individual classifiers constructed using SecCLS. We develop a system called SecureDroid, which integrates both SecCLS and SecENS to enhance the security of machine learning-based Android malware detection.

Comprehensive experiments on real sample collections from Comodo Cloud Security Center validate the effectiveness of SecureDroid. The results demonstrate that our feature selection method, SecCLS, is more resilient to feature manipulations, and SecureDroid can improve security against adversarial attacks, even when attackers have different skills and capabilities or knowledge about the targeted learning system. Our proposed secure-learning paradigm can also be readily applied to other malware detection tasks.

### Acknowledgments

The authors would like to thank the anti-malware experts at Comodo Security Lab for their data collection and helpful discussions. This work is supported by the U.S. National Science Foundation under grant CNS-1618629 and WVU Senate Grants for Research and Scholarship (R-16-043).

### References

[References listed as provided, with no changes needed.]

---

This optimized version of the text is more structured, clear, and professional, making it easier to read and understand.