    SELinux Enforcing 模式还启用 sVirt RHEL 9
    功能。这是用于虚拟化的一组特殊的 SELinux
    布尔值，可[手动调整](#securing-virtual-machines-in-rhel_configuring-and-managing-virtualization.html#virtualization-booleans-in-rhel_securing-virtual-machines-in-rhel "用于虚拟化的 SELinux 布尔值"){.link}，以便进行细致的虚拟机安全管理。
    :::
-   使用带有 [*SecureBoot*]{.emphasis} 的虚拟机：
    SecureBoot
    是一个功能，可确保您的虚拟机正在运行加密签名的操作系统。这可防止因为恶意软件攻击而更改了操作系统的虚拟机引导。
    SecureBoot 只能在安装使用 OVMF 固件的 Linux
    虚拟机时使用。具体说明请查看 ["创建 SecureBoot
    虚拟机"一节](#securing-virtual-machines-in-rhel_configuring-and-managing-virtualization.html#creating-a-secureboot-virtual-machine_securing-virtual-machines-in-rhel "创建 SecureBoot 虚拟机"){.xref}。
-   不要使用 `qemu-*`{.literal} 命令，如 `qemu-kvm`{.literal}。
    QEMU 是 RHEL 9 中虚拟化架构的基本组件，但难以手动管理，而且不正确的
    QEMU 配置可能会导致安全漏洞。因此，红帽不支持使用 `qemu-*`{.literal}
    命令。相反，强烈建议您使用 [*libvirt*]{.emphasis} 实用程序（如
    `virsh`{.literal}、`virt-install`{.literal} 和 `virt-xml`{.literal}
    ）与 QEMU 交互，因为这些根据最佳实践的编排 QEMU。
:::
::: itemizedlist
**其它资源**
-   [RHEL 中虚拟化的 SELinux
    布尔值](#securing-virtual-machines-in-rhel_configuring-and-managing-virtualization.html#virtualization-booleans-in-rhel_securing-virtual-machines-in-rhel "用于虚拟化的 SELinux 布尔值"){.link}
:::
:::
::: section
::: titlepage
# []{#securing-virtual-machines-in-rhel_configuring-and-managing-virtualization.html#creating-a-secureboot-virtual-machine_securing-virtual-machines-in-rhel}创建 SecureBoot 虚拟机 {.title}
:::
您可以创建一个使用 [*SecureBoot*]{.emphasis} 功能的 Linux
虚拟机(VM)，以确保您的虚拟机正在运行加密签名的操作系统。如果由于恶意软件更改了虚拟机的客户机操作系统，这很有用。在这种情况下，SecureBoot
可防止虚拟机引导，从而停止潜在的恶意软件分散到主机机器。
::: itemizedlist
**先决条件**
-   虚拟机使用 Q35 机器类型。
-   已安装 `edk2-OVMF`{.literal} 软件包：
    ``` literallayout
    # dnf install edk2-ovmf
    ```
-   操作系统（OS）安装源可存在于本地或者网络中。可以是以下格式之一：
    ::: itemizedlist
    -   安装介质的 ISO 镜像
    -   现有虚拟机安装的磁盘镜像
        ::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
        ### 警告 {.title}
        在 RHEL 9 中无法从主机 CD-ROM 或者 DVD-ROM 设备安装。当使用 RHEL
        9 中的任何虚拟机安装方法时，如果选择了 CD-ROM 或者 DVD-ROM
        作为安装源，则安装将失败。如需更多信息，请参阅[红帽知识库](https://access.redhat.com/solutions/1185913){.link}。
        :::
    :::
-   可选：可以提供一个 Kickstart 文件，以便更快地配置安装。
:::
::: orderedlist
**流程**
1.  使用 `virt-install`{.literal} 命令创建
    ["使用命令行界面创建虚拟机"一节](#assembly_creating-virtual-machines_configuring-and-managing-virtualization.html#creating-virtual-machines-using-the-command-line-interface_assembly_creating-virtual-machines "使用命令行界面创建虚拟机"){.xref}
    中详述的虚拟机。对于 `--boot`{.literal} 选项，使用
    `uefi,nvram_template=/usr/share/OVMF/OVMF_VARS.secboot.fd`{.literal}
    值。这使用 `OVMF_VARS.secboot.fd`{.literal} 和
    `OVMF_CODE.secboot.fd`{.literal} 文件作为虚拟机非易失性
    RAM(NVRAM)设置的模板，它启用了 SecureBoot 功能。
    例如：
    ``` literallayout
    # virt-install --name rhel8sb --memory 4096 --vcpus 4 --os-variant rhel9.0 --boot uefi,nvram_template=/usr/share/OVMF/OVMF_VARS.secboot.fd --disk boot_order=2,size=10 --disk boot_order=1,device=cdrom,bus=scsi,path=/images/RHEL-9.0-installation.iso
    ```
2.  根据屏幕中的说明进行操作 OS 安装过程。
:::
::: orderedlist
**验证**
1.  安装客户机操作系统后，[在图形 guest
    控制台中](#assembly_connecting-to-virtual-machines_configuring-and-managing-virtualization.html#proc_opening-a-virtual-machine-graphical-console-using-virt-viewer_assembly_connecting-to-virtual-machines "使用 Virt Viewer 打开虚拟机图形控制台"){.link}
    打开终端 [或使用
    SSH](#assembly_connecting-to-virtual-machines_configuring-and-managing-virtualization.html#proc_connecting-to-a-virtual-machine-using-ssh_assembly_connecting-to-virtual-machines "使用 SSH 连接到虚拟机"){.link}
    连接到客户端操作系统，以访问虚拟机的命令行。
2.  要确认虚拟机上启用了 SecureBoot，请使用
    `mokutil --sb-state`{.literal} 命令：
    ``` literallayout
    # mokutil --sb-state
    SecureBoot enabled
    ```
:::
::: itemizedlist
**其它资源**
-   [安装 RHEL
    9](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html-single/performing_a_standard_rhel_installation/index#installing-rhel-on-adm64-intel-64-and-64-bit-arm){.link}
:::
:::
::: section
::: titlepage
# []{#securing-virtual-machines-in-rhel_configuring-and-managing-virtualization.html#proc_limiting-what-actions-are-available-to-virtual-machine-users_securing-virtual-machines-in-rhel}限制虚拟机用户可以使用什么操作 {.title}
:::
在某些情况下，在 RHEL 9
中托管的虚拟机(VM)用户可以默认执行。如果是这种情况，您可以通过将
`libvirt`{.literal} 守护进程配置为在主机上使用 `polkit`{.literal}
策略工具包来限制虚拟机用户可用的操作。
::: orderedlist
**流程**
1.  [**可选：**]{.strong}请确定根据您的具体情况设置了与
    `libvirt`{.literal} 相关的 `polkit`{.literal} 控制策略。
    ::: orderedlist
    1.  在 `/usr/share/polkit-1/actions/`{.literal} 和
        `/usr/share/polkit-1/rules.d/`{.literal} 目录中查找与 libvirt
        相关的文件。
        ``` literallayout
        # ls /usr/share/polkit-1/actions | grep libvirt
        # ls /usr/share/polkit-1/rules.d | grep libvirt
        ```
    2.  打开文件并查看规则设置。
        有关读取 `polkit`{.literal} 控制策略语法的详情，请使用
        `man polkit`{.literal}。
    3.  修改 `libvirt`{.literal} 控制策略。要做到这一点：
        ::: orderedlist
        1.  在 `/etc/polkit-1/rules.d/`{.literal} 目录中创建一个新的
            `.conf`{.literal} 文件。
        2.  将自定义策略添加到此文件，并保存它。
            有关 `libvirt`{.literal} 控制策略的更多信息和示例，请参阅
            [`libvirt`{.literal}
            上游文档](https://libvirt.org/aclpolkit.html#writing-access-control-policies){.link}。
        :::
    :::
2.  配置虚拟机，以使用由 `polkit`{.literal} 决定的访问策略。
    ::: orderedlist
    1.  查找 `/etc/libvirt/`{.literal}
        目录中的所有虚拟化驱动程序配置文件。
        ``` literallayout
        # ls /etc/libvirt/ | grep virt*d.conf
        ```
    2.  在每个文件中，取消对 `access_drivers = [ "polkit" ]`{.literal}
        行的注释，然后保存文件。
    :::
3.  对于您在上一步中修改的每个文件，请重新启动对应的服务。
    例如，如果您修改了
    `/etc/libvirt/virtqemud.conf`{.literal}，请重新启动
    `virtqemud`{.literal} 服务。
    ``` screen
    # systemctl try-restart virtqemud
    ```
:::
::: itemizedlist
**验证**
-   作为您要限制的虚拟机操作的用户，请执行其中一个受限操作。
    例如，如果非特权用户无法查看在系统会话中创建的虚拟机：
    ``` literallayout
    $ virsh -c qemu:///system list --all
    Id   Name           State
    -------------------------------
    ```
    如果系统中的一个或多个虚拟机没有列出任何虚拟机，则
    `polkit`{.literal} 成功限制非特权用户的操作。
:::
::: itemizedlist
**故障排除**
-   目前，将 `libvirt`{.literal} 配置为使用 `polkit`{.literal}
    便能够使用 [RHEL 9 web
    控制台连接到虚拟机](#managing-virtual-machines-in-the-web-console_configuring-and-managing-virtualization.html "第 8 章 在 web 控制台中管理虚拟机"){.link}，因为与
    `libvirt-dbus`{.literal} 服务不兼容。
    如果您需要在 web
    控制台中对虚拟机进行精细访问控制，红帽建议创建自定义 D-Bus
    策略。具体步骤请查看 [如何在红帽知识库中的 Cockpit
    中配置对虚拟机进行精细的控制](https://access.redhat.com/solutions/6106401){.link}。
:::
::: itemizedlist
**其它资源**
-   `man polkit`{.literal} 命令
-   [polkit
    访问控制策略的](https://libvirt.org/aclpolkit.html#writing-access-control-policies){.link}
    `libvirt`{.literal} man page
:::
:::
::: section
::: titlepage
# []{#securing-virtual-machines-in-rhel_configuring-and-managing-virtualization.html#automatic-features-for-virtual-machine-security_securing-virtual-machines-in-rhel}虚拟机安全性的自动功能 {.title}
:::
除了手动改进
["保护虚拟机的最佳实践"一节](#securing-virtual-machines-in-rhel_configuring-and-managing-virtualization.html#best-practices-for-securing-virtual-machines_securing-virtual-machines-in-rhel "保护虚拟机的最佳实践"){.xref}
中列出的虚拟机安全性外，[**libvirt**]{.strong}
软件套件还提供了一些安全功能，在 RHEL 9
中使用虚拟化时会自动启用。它们是：
::: variablelist
[]{#securing-virtual-machines-in-rhel_configuring-and-managing-virtualization.html#system-and-session-connections_securing-virtual-machines-in-rhel}
[系统和会话连接]{.term}
:   要访问 RHEL 9 中虚拟机管理的所有可用实用程序，您需要使用 libvirt
    [*的网络连接*]{.emphasis}
    (`qemu:///system`{.literal})。要做到这一点，必须在系统中具有 root
    权限，或者作为 [*libvirt*]{.emphasis} 用户组的一部分。
    不位于 [*libvirt*]{.emphasis} 组中的非 root 用户只能访问 libvirt
    的会话 [*连接*]{.emphasis}
    (`qemu:///session`{.literal})，在访问资源时必须遵守本地用户的访问权限。例如，使用会话连接，您无法检测或访问在系统连接或者其他用户中创建的虚拟机。另外，可用的
    VM 网络配置选项也有很大限制。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    RHEL 9 文档假定您有系统连接权限。
    :::
[虚拟机分离]{.term}
:   单个虚拟机作为隔离进程在主机上运行，并依赖于主机内核强制的安全性。因此，虚拟机不能读取或访问同一主机上其他虚拟机的内存或存储。
[QEMU 沙盒]{.term}
:   防止 QEMU 代码执行系统调用的功能，这些调用可能会破坏主机的安全性。
[内核地址空间 Randomization(KASLR)]{.term}
:   启用随机调整内核镜像解压缩的物理和虚拟地址。因此，KASLR
    可防止基于内核对象位置的客户机安全漏洞。
:::
:::
::: section
::: titlepage
# []{#securing-virtual-machines-in-rhel_configuring-and-managing-virtualization.html#virtualization-booleans-in-rhel_securing-virtual-machines-in-rhel}用于虚拟化的 SELinux 布尔值 {.title}
:::
要在 RHEL 9 系统中对虚拟机安全性进行精细配置，您可以在主机上配置 SELinux
布尔值，以确保管理程序以特定方式执行。
要列出所有与虚拟化相关的布尔值及其状态，请使用
`getsebool -a | grep virt`{.literal} 命令：
``` literallayout
$ getsebool -a | grep virt
[...]
virt_sandbox_use_netlink --> off
virt_sandbox_use_sys_admin --> off
virt_transition_userdomain --> off
virt_use_comm --> off
virt_use_execmem --> off
virt_use_fusefs --> off
[...]
```
要启用特定的布尔值，请以 root 用户身份使用命令
`setsebool -P boolean_name `{.literal}。要禁用布尔值，请使用
`setsebool -P 布尔值_name off`{.literal}。
下表列出了 RHEL 9 中可用的与虚拟化相关的布尔值以及启用后的功能：
::: table
[]{#securing-virtual-machines-in-rhel_configuring-and-managing-virtualization.html#idm139624732484464}
**表 18.1. SELinux 虚拟化布尔值**
::: table-contents
  SELinux 布尔值               描述
  ---------------------------- ----------------------------------------------------
  staff_use_svirt              启用非 root 用户创建并转换虚拟机至 sVirt。
  unprivuser_use_svirt         启用非特权用户创建虚拟机并将其转换至 sVirt。
  virt_sandbox_use_audit       启用沙盒容器来发送审核信息。
  virt_sandbox_use_netlink     启用沙盒容器使用 netlink 系统调用。
  virt_sandbox_use_sys_admin   启用沙盒容器使用 sys_admin 系统调用，如 mount。
  virt_transition_userdomain   启用虚拟进程作为用户域运行。
  virt_use_comm                启用 virt 使用串行/并行通信端口。