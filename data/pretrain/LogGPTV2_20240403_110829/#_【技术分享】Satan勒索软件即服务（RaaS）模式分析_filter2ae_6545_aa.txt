# 【技术分享】Satan勒索软件即服务（RaaS）模式分析
|
##### 译文声明
本文是翻译文章，文章来源：blog.cylance.com
原文地址：
译文仅供参考，具体内容表达以及含义原文为准。
****
****
翻译：[兴趣使然的小胃](http://bobao.360.cn/member/contribute?uid=2819002922)
预估稿费：200RMB
投稿方式：发送邮件至[linwei#360.cn](mailto:PI:EMAIL)，或登陆[网页版](http://bobao.360.cn/contribute/index)在线投稿
**前言**
勒索软件可能是当前最流行的网络敲诈形式，这种方式虽然早已存在多年，但最近勒索软件的变体数量呈显著增加的趋势。由于勒索软件的臭名远扬和潜在的高支付率特点，网络犯罪分子纷纷开发新的勒索软件分发方式以获取不菲回报。
在过去的几年里，恶意软件作者将其专有技术封装打包成昂贵的攻击套装并在地下市场上进行销售，网络犯罪分子购买恶意软件，在感染受害者电脑前首先得支付高额的前期成本。
勒索软件正在悄然改变恶意软件作者和网络犯罪分子的交互方式。加密货币的存在使得勒索软件作者无需提前收费，而只需从成功的犯罪赎金中进行抽成即可，这也将大大增加勒索软件势力范围的扩张。我们最近发现了一个名为Satan（撒旦）的RaaS（ransomware-as-a-service，勒索软件即服务）网站，它向我们展示了网络犯罪分子是如何轻而易举就可以构建复杂的勒索软件并进行分发感染。
**  
**
**初识Satan RaaS**
在深入了解RaaS模式之前，我们可以先了解一下Satan勒索软件。
根据攻击者选择的恶意软件分发方式，Satan可以作为钓鱼邮件的附件或通过常用的电子邮件活动附件（如Word, Excel,
JS脚本，VB脚本）自动下载等等。
真正的Satan二进制载荷经过加密，包含许多反调试和反分析技术以加大对它的静态和动态分析难度。恶意软件作者很有可能掌握一个随时可用的技术库，因为这些技术已经在其他恶意软件中被发现过。
**  
**
**反调试技术**
在Satan中可以发现以下反调试技术：
BlockInput()函数的调用：该函数在调试会话期间有效，当函数被调用时，鼠标和键盘将会被禁用，而这在实际执行中不会发生。
IsDebuggerPresent()和CheckRemoteDebuggerPresent()函数的调用。
将无效句柄推送到ntdll.NtClose()或CloseHandle()：非常古老且被人熟知的调试器检测方法。
LoadLibrary()或LdrLoadDll()函数的调用：使调试会话崩溃。
NtQueryInformationProcess()函数的调用：使用ProcessDebugPort类来检查程序是否被调试。
OpenProcess()函数和csrss.exe：搜索正在运行的csrss.exe并将其进程ID传递给OpenProcess()以检测程序是否正在被调试。
以下代码片段显示了上面提到的一些反调试技术的使用情况。
图1. 反调试技术
**  
**
**反分析技巧  
**
除了反调试技术，Satan还采用了以下技巧以增加对它的分析难度：
1）检查avghookx.dll和avghooka.dll文件的存在。这两个文件是AVG反病毒软件的一部分。
2）调用调用FindWindowW()函数来搜索当前打开的包含以下标题的窗口：
    OLLYDBG
    WinDbgFrameClass
    Immunity Debugger
    Zeta Debugger
    Rock Debugger
    ObsidianGui
3）使用GetModuleHandle()函数检查以下动态链接库（DLL）文件是否存在。这些DLL文件与一些最广泛使用的恶意软件分析工具（包括在沙箱或虚拟机环境中使用的工具）有关。
    SbieDll.dll
    dbghelp.dll 
    snxhk.dll
    api_log.dll
    dir_watch.dll
    vmcheck.dll
    wpespy.dll
    pstorec.dll
4）枚举并检查当前运行的所有进程，查找以下任何进程是否存在。这些进程同样与恶意软件分析工具有关。
    ollydbg.exe
    ProcessHacker.exe
    Tcpview.exe
    autoruns.exe
    autorunsc.exe
    filemon.exe
    procmon.exe
    procexp.exe
    idaq.exe
    idaq64.exe
    ImmunityDebugger.exe
    Wireshark.exe
    dumpcap.exe
    HookExplorer.exe
    ImportRec.exe
    PETools.exe
    LordPE.exe
    Sysinspector.exe
    proc_analyzer.exe
    sysanalyzer.exe
    sniff_hit.exe
    windbg.exe
    joeboxcontrol.exe
    joeboxserver.exe
    netmon.exe
下图显示了Satan如何执行上述检查过程。
图2. 枚举当前进程
图3展示了Satan反分析技术中涉及到的字符串，这些字符串经过加密，不容易在二进制文件中查看，我们在内存中对它们进行了还原。
图3. 内存中经解密后的字符串
Satan采用以下方法来检查其是否在沙盒环境中运行。
1）检查wine_get_unix_file_name()函数是否在“Wine”沙盒环境中运行。
2）检查所使用的文件名是否是“sample.exe”，是否在“C:insideTM”文件夹中运行。这两点是Anubis沙箱环境的特点。
3）检查登陆用户是否使用以下用户名，这些用户名是沙盒环境常用的用户名：
    SANDBOX
    MALTEST
    MALWARE
    VIRUS
    TEQUILABOOMBOOM