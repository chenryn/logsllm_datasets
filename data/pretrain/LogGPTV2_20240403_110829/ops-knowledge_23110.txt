User: As a DevOps engineer, you need to use Jenkins in the CI/CD process to automate the building and deployment of applications. Please provide an example configuration of Jenkins Pipeline.
Assistant: The following is a simple Jenkins Pipeline configuration example for building and deploying a Node.js-based application: ``` pipeline { agent any stages { stage('Checkout') { steps { git 'https://github .com/your-repo/app.git' } } stage('Build') { steps { sh 'npm install' sh 'npm run build' } } stage('Test') { steps { sh 'npm test' } } stage('Deploy') { steps { withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'your-credentials-id', usernameVariable: 'SSH_USERNAME', passwordVariable: 'SSH_PASSWORD']]) { sshagent([' your-server']) { sh 'ssh $SSH_USERNAME@$SSH_SERVER "cd /var/www/app && git pull origin master && npm install && pm2 restart app"' } } } } } } ``` The Pipeline includes 4 Three build phases: 1. `Checkout`: Check out the application code from the Git repository. 2. `Build`: Execute `npm install` and `npm run build` commands to install dependencies and build the application. 3. `Test`: Execute the `npm test` command to test and verify that the code has been successfully built in the CI/CD process and has reached the expected quality level. 4. `Deploy`: Use ssh to connect to the specified server, pull the latest code into the remote directory, then reinstall the dependencies and restart the Node.js application. Note that the `withCredentials` parameter is used in Jenkins to safely store and use sensitive information, such as the credentials required to connect to a server using SSH. This example uses the Credentials plugin (credentials plugin) to manage and save credentials, so it needs to be configured in Jenkins first.