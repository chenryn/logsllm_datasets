title:Towards an accurate AS-level traceroute tool
author:Zhuoqing Morley Mao and
Jennifer Rexford and
Jia Wang and
Randy H. Katz
Towards an Accurate AS-Level Traceroute Tool
Zhuoqing Morley Mao Jennifer Rexford
AT&T Labs–Research
PI:EMAIL
PI:EMAIL
UC Berkeley
Jia Wang
AT&T Labs–Research
Randy H. Katz
UC Berkeley
PI:EMAIL PI:EMAIL
ABSTRACT
Traceroute is widely used to detect routing problems, characterize
end-to-end paths, and discover the Internet topology. Providing an
accurate list of the Autonomous Systems (ASes) along the forward-
ing path would make traceroute even more valuable to researchers
and network operators. However, conventional approaches to map-
ping traceroute hops to AS numbers are not accurate enough. Ad-
dress registries are often incomplete and out-of-date. BGP routing
tables provide a better IP-to-AS mapping, though this approach has
signiﬁcant limitations as well. Based on our extensive measure-
ments, about 10% of the traceroute paths have one or more hops
that do not map to a unique AS number, and around 15% of the
traceroute AS paths have an AS loop. In addition, some traceroute
AS paths have extra or missing AS hops due to Internet eXchange
Points, sibling ASes managed by the same institution, and ASes
that do not advertise routes to their infrastructure. Using the BGP
tables as a starting point, we propose techniques for improving the
IP-to-AS mapping as an important step toward an AS-level tracer-
oute tool. Our algorithms draw on analysis of traceroute probes,
reverse DNS lookups, BGP routing tables, and BGP update mes-
sages collected from multiple locations. We also discuss how the
improved IP-to-AS mapping allows us to home in on cases where
the BGP and traceroute AS paths differ for legitimate reasons.
Categories and Subject Descriptors
C.2.3 [Computer-Communication Networks]: Network Opera-
tions—Network monitoring
General Terms
Measurement, Management
Keywords
Network measurements, AS-level path, Internet topology, Border
Gateway Protocol
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
SIGCOMM’03, August 25–29, 2003, Karlsruhe, Germany.
Copyright 2003 ACM 1-58113-735-4/03/0008 ...$5.00.
1.
INTRODUCTION
Network operators and researchers would beneﬁt greatly from
an accurate tool for reporting the sequence of Autonomous Systems
(ASes) along the path to a destination host. Designing a useful “AS-
level traceroute” tool depends on having an accurate way to map
the IP addresses of network equipment to the administering ASes.
This problem is surprisingly difﬁcult and existing approaches have
major limitations, due to the operational realities of today’s Inter-
net. We propose a way to improve the IP-to-AS mapping of the
infrastructure by comparing traceroute and BGP (Border Gateway
Protocol) paths collected from multiple vantage points. This im-
proved IP-to-AS mapping can be used as seed input for a tool that
maps traceroute output to an AS-level path.
1.1 Motivation for AS Traceroute
Traceroute [1] is widely used to detect and diagnose routing
problems, characterize end-to-end paths through the Internet, and
discover the underlying network topology. Traceroute identiﬁes
the interfaces on a forwarding path and reports round-trip time
statistics for each hop along the way. Despite its many well-
documented limitations, traceroute is the only effective way to de-
termine how packets ﬂow through the Internet without real-time
access to proprietary routing data from each domain. The tool is
invaluable for network operators in identifying forwarding loops,
blackholes, routing changes, unexpected paths through the Inter-
net, and, in some cases, the main components of end-to-end latency.
Researchers rely heavily on traceroute to study routing protocol be-
havior [2], network performance [3], and the Internet topology [4,
5, 6, 7].
In addition to the IP forwarding path, operators often need to
know which ASes are traversed en route to the destination. Upon
detecting a routing or performance problem, operators need to iden-
tify (and notify!) the responsible parties—often their compatriots
in other ASes. This is a crucial part of diagnosing and ﬁxing prob-
lems that stem from misconﬁguration of the routing protocols [8]
or serious equipment failures. For example, suppose that customers
complain that they cannot reach a particular Web site. The operator
could launch traceroute probes toward the destination and deter-
mine that a forwarding loop is to blame. However, correcting the
problem requires a way to determine which AS (or set of ASes)
has routers forwarding packets in the loop. Inaccurate information
leads to delays in identifying and correcting the problem.
Researchers use the AS path information to construct AS-level
views of the Internet topology [9] and to study the properties of the
AS paths traversing this graph [10]. These AS-level “outputs” are
used as “inputs” to research in a variety of areas, such as the place-
ment and selection of Web content replicas. The accuracy of these
studies hinges on having a sound way to determine the sequence of
ASes on a forwarding path. However, a recent paper [11] demon-
strated that the various techniques for identifying the AS-level for-
warding path lead to very different results for basic properties of
the Internet topology, including path asymmetry and node degree.
Having a good AS-level traceroute tool in the research community
would make these studies more accurate. In addition, new research
could focus directly on the properties of the AS-level forwarding
path, such as identifying the ASes most responsible for forwarding
anomalies and performance problems.
1.2 Difﬁculty of the Problem
Identifying the ASes along the forwarding path is surprisingly
difﬁcult. Traceroute infers the path by transmitting a sequence of
TTL-limited packets and extracting the interface IP addresses from
ICMP responses sent by the hops along the way. However, some
hops do not return ICMP replies, and successive TTL-limited pack-
ets do not necessarily follow the same forwarding path. Mapping
the IP-level hops to AS numbers is complicated and existing ap-
proaches have major limitations:
BGP AS path: A seemingly natural way to determine the AS path
is to observe the routes learned via BGP, the interdomain routing
protocol for the Internet. However, timely access to BGP data is
not always possible from the vantage point of interest. Perhaps
more importantly, BGP provides the signaling path (the list of ASes
that propagated the BGP update message), which is not necessar-
ily the same as the forwarding path (the list of ASes traversed by
data packets). Although the two AS paths usually match, they may
differ for various reasons such as route aggregation/ﬁltering and
routing anomalies [12]. In fact, the two paths may differ precisely
when operators most need accurate data to diagnose a problem.
Internet route registry: Instead, the ASes in the forwarding path
can be derived directly from the traceroute data by associating each
traceroute hop with an AS number. The popular “NANOG tracer-
oute” [13] and prtraceroute [14] tools perform whois queries to
map each interface to an address block allocated to a particular AS.
However, whois data are often out-of-date or incomplete, since in-
stitutions do not necessarily update the database after acquisitions,
mergers, and break-ups, or after allocating portions of their address
blocks to customers.
Origin AS in BGP routes: A more accurate and complete IP-to-
AS mapping can be constructed from BGP routing tables by in-
specting the last AS (the “origin AS”) in the AS path for each pre-
ﬁx [15]. However, some traceroute hops map to multiple origin
ASes (MOAS) [16] or do not appear in the BGP tables. The notion
of “origin AS” blurs the many reasons why ASes introduce pre-
ﬁxes into BGP. In addition to originating routes for its own infra-
structure, an AS may inject routes on behalf of statically-routed
customers. Some ASes do not advertise their infrastructure ad-
dresses and others may announce the addresses of shared equip-
ment at boundary points between domains. As a result, some tracer-
oute AS paths appear to have AS loops, or extra or missing hops
relative to the corresponding BGP paths.
In this paper, we identify the root causes of the differences be-
tween the traceroute and BGP AS paths, and propose techniques
for identifying the “real” AS-level forwarding path.
1.3 Our Approach to the Problem
In practice, the signaling and forwarding AS paths do not al-
ways agree, due to route aggregation and forwarding anomalies.
However, we believe that most discrepancies between the BGP
and traceroute AS paths stem from inaccuracies in the IP-to-AS
mapping applied to the traceroute data. We propose to improve
this mapping by comparing BGP and traceroute paths from multi-
ple vantage points. Our algorithms analyze measurement data to
identify cases where a single “explanation” would account for the
differences between many pairs of BGP and traceroute AS paths.
These explanations build on an understanding of common opera-
tional practices, such as the presence of Internet eXchange Points
(IXPs), where multiple ASes connect to exchange BGP routes and
data trafﬁc. The results of our algorithms are used to tune an initial
IP-to-AS mapping derived from the BGP routing tables. We envi-
sion this as a continuous process where traceroute and BGP data are
collected from many vantage points and used to compute an accu-
rate IP-to-AS mapping as it changes over time. An AS traceroute
tool running on end hosts would periodically download the latest
IP-to-AS mapping and use it to compute and display the AS path
associated with each traceroute probe the user launches. The paper
makes ﬁve main contributions toward this end:
Measurement methodology: Our techniques depend on collecting
traceroute probes, BGP update messages, BGP routing tables, and
reverse DNS lookups, as discussed in Section 2.
Traceroute analysis: In Section 3, we analyze traceroute and BGP
paths from eight locations, and construct an initial IP-to-AS map-
ping from BGP routing tables. Then, we present an initial compa-
rison of the BGP and traceroute AS paths.
Resolving incomplete paths: Section 4 presents three simple tech-
niques for resolving most traceroute hops that do not map to an AS
number. We also introduce our approach of using internal router
conﬁguration data for checking our results.
Improved IP-to-AS mapping: Many mismatches between BGP
and traceroute paths can be explained by IXPs, sibling ASes man-
aged by the same institution, and ASes that do not advertise routes
to their equipment. Section 5 proposes techniques that identify and
“ﬁx” some of these cases.
Legitimate mismatches: The traceroute and BGP AS paths may
differ for valid reasons such as route aggregation, interface num-
bering at AS boundaries, the choice of source address in ICMP,
and routing anomalies. Section 6 discusses how these factors may
explain some of the remaining differences between the traceroute
and BGP AS paths.
Validating our techniques is difﬁcult without knowing the actual
AS-level forwarding paths. Where possible, we compare results
with publicly-available data, such as whois data and lists of known
IXPs. We conclude in Section 7 with a summary of our contribu-
tions and a discussion of ongoing work.
1.4 Related Work
Recent measurement studies have quantiﬁed the differences be-
tween BGP and traceroute AS paths. The analysis in [11] showed
that these differences have a signiﬁcant impact on the characteriza-
tion of the Internet topology. In parallel with our paper, the work
in [17] used publicly-available data (such as whois, lists of known
IXPs, and other Web sites) to test the hypothesis that many of the
mismatches stem from IXPs and siblings; in contrast, our paper
proposes heuristics for identifying IXPs, siblings, and other causes
of mismatches to improve the IP-to-AS mapping. To improve the
accuracy of AS graphs derived from traceroute, the work in [18]
proposed techniques that identify border routers between ASes to
correct mistaken AS mappings; this is an alternate approach that
handles some of the inaccuracy introduced by IP-to-AS mappings
derived from BGP tables. Traceroute data have been used in other
studies that measure router-level topologies and map routers to
ASes [4, 6]. Except for handling certain traceroute anomalies such
as unmapped IP address, these studies did not focus on improv-
ing the accuracy of the IP-to-AS mapping derived from the BGP
routing tables. Focusing solely on BGP AS paths, the work in [19,
20] presented algorithms for inferring AS-level commercial rela-
tionships, including siblings; however, these studies did not con-
sider the inﬂuence of sibling ASes on the accuracy of traceroute
AS paths.
In contrast to previous work, our paper focuses on automated
techniques for improving the IP-to-AS mapping applied to the
traceroute paths. Although we use publicly-available information
for validation purposes, the techniques we propose do not depend
on the availability of such data. Our work capitalizes on traceroute
paths and BGP updates collected from multiple vantage points to
a large number of destinations throughout the Internet. The tech-
niques we apply to pre-process the measurement data limit possible
inaccuracies from transient routing changes and unmapped hops in
the traceroute paths. Our algorithms for identifying IXPs, siblings,
and unannounced infrastructure addresses allow us to produce a
more accurate estimate of the AS-level forwarding path from the
raw traceroute data. This, in turn, enables us to focus our attention
on the legitimate mismatches between the AS-level signaling and
forwarding paths.
2. MEASUREMENT METHODOLOGY
This section presents our methodology for collecting traceroute
and BGP paths from multiple vantage points, as shown in Figure 1.
We select candidate preﬁxes and ultimately individual IP addresses
to cover the routable address space. For each preﬁx we measure
the forwarding path with traceroute and extract the BGP AS path
from the routing table of the border router. We discard data for
cases where the BGP AS path cannot be meaningfully compared
with the traceroute path. We compute an AS-level traceroute path
by mapping traceroute hops to AS numbers using the origin ASes
extracted from a large set of BGP routing tables.
2.1 Selecting Candidate IP Addresses
Starting with a list of routing table entries, we ﬁrst identify the
preﬁxes that cover the routable address space and then select two
IP addresses within each preﬁx for traceroute probing.
Select preﬁxes: Ideally, we would like to learn the forwarding path
to each live destination address from each vantage point. However,
identifying all live IP addresses is challenging and sending tracer-
oute probes to each destination would be prohibitively expensive.
Instead, we select a set of preﬁxes that cover the routable address
space to sample a wide range of forwarding and signaling paths.
For each vantage point, we extract a list of preﬁxes from the BGP
routing table of the (single) border router that connects this site
to the Internet. However, some preﬁxes are never used to route
trafﬁc because of more speciﬁc subnets in the routing table. For
example, no packet would use the 192.0.2.0/23 route if nested en-
tries for 192.0.2.0/24 and 192.0.3.0/24 were available, due to the
longest-preﬁx match forwarding paradigm. Other preﬁxes may be
partially covered by subnets. For example, a table with routes for
8.0.0.0/8 and 8.128.0.0/10 would only use the 8.0.0.0/8 routing en-
try for destinations in 8.0.0.0/9 or 8.192.0.0/10; all other addresses
in 8.0.0.0/8 would match 8.128.0.0/10. To identify these cases, we
sort the list of preﬁxes based on the numerical values and mask
length; this ensures that each preﬁx is followed immediately by all
of its subnets. For each preﬁx, we identify the portion of the address
space that would match this routing table entry and represent it as
a list of address blocks. The algorithm runs in O(n2) time in the
worst case that all n routing entries are subnets of a single preﬁx.
In that case, the difference between any preﬁx and all its preceding
preﬁxes in the sorted order is calculated. Preﬁxes like 192.0.2.0/23
that are covered by their subnets do not correspond to any portion
of the address space, and are excluded from the candidate preﬁxes.
1
Pick vantage point X
X’s BGP table
Extract prefixes
Extracted prefixes
Select prefixes
Candidate prefixes
Sample IPs per prefix
Sampled IP addresses
Extract AS paths
2
Traceroute from X
to sampled IPs
BGP AS paths
Traceroute paths
3
X’s BGP updates
Discard prefixes with BGP anomaly
Valid traceroute paths
4
Pick multiple vantage points
BGP table dumps
Extract prefix-AS mapping
Prefix-AS mapping
Map IP to AS
Compared BGP AS paths
Compared traceroute AS paths
Figure 1: BGP and traceroute data collection.
Sample IP addresses: Each candidate preﬁx has one or more IP
addresses that match the routing entry using longest preﬁx match-
ing. We select two IP addresses for each preﬁx for the sake of
comparison; this is especially useful for studying the effects of
route aggregation and ﬁltering. Limiting ourselves to two ad-
dresses reduces the time required to collect the data. For each
preﬁx, we arbitrarily select the ﬁrst address block in the represen-
tation computed by our algorithm (e.g., 8.0.0.0/9 for {8.0.0.0/9,
8.192.0.0/10}). We select the two IP addresses from the begin-
ning and the middle of the block. That is, for a block with ad-
dress Q and mask length N, we select IP addresses “Q + 1” and
“Q + 232−N−1 + 1” (e.g., 8.0.0.1 and 8.64.0.1). Note that the ad-
dresses do not necessarily correspond to live hosts; some may be
unused or assigned to parts of the infrastructure.
2.2 Obtaining Traceroute and BGP Paths
After selecting the IP addresses, we obtain both the traceroute
and BGP paths from each vantage point.
Collect traceroute paths: We conﬁgure the traceroute software to
send a single UDP packet for each TTL value and wait two seconds