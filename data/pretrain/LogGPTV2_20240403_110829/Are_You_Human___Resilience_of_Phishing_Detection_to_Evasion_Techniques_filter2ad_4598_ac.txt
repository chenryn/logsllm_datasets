### Evasion Techniques and Their Detection

Our experiments involved the use of various evasion techniques, including Google reCAPTCHA, alert boxes, and session-based methods. We reported these to major anti-phishing entities. The results were alarming: the vast majority of phishing sites went undetected. Google Safe Browsing outperformed other entities by only bypassing the alert box anti-analysis technique. NetCraft managed to detect two URLs protected with the session-based technique. However, other server-side and client-side detection systems failed to identify even a single phishing URL as malicious.

The widespread use of human verification techniques in phishing kits significantly hinders the detection process and poses serious challenges for existing anti-phishing engines. As a mitigation strategy, we plan to disclose our findings to the affected anti-phishing entities before phishers can exploit these human verification techniques on a large scale.

### Acknowledgments

This work was conducted within the framework of the COMAR project, funded by SIDN (the .NL Registry) and AFNIC (the .FR Registry). It was also partially supported by the ANR projects: the Grenoble Alpes Cybersecurity Institute CYBER@ALPS under contract ANR-15-IDEX-02, PERSYVAL-Lab under contract ANR-11-LABX-0025-01, and DiNS under contract ANR-19-CE25-0009-01.

### References

[1] Hang Hu and Gang Wang. "End-to-end Measurements of Email Spoofing Attacks." In 27th USENIX Security Symposium, pages 1095–1112, 2018.
[2] Tom N Jagatic, Nathaniel A Johnson, Markus Jakobsson, and Filippo Menczer. "Social Phishing." Communications of the ACM, 50(10):94–100, 2007.
[3] Eric Medvet, Engin Kirda, and Christopher Kruegel. "Visual-Similarity-Based Phishing Detection." In 4th International Conference on Security and Privacy in Communication Networks, pages 1–6, 2008.
[4] Mahmood Moghimi and Ali Yazdian Varjani. "New Rule-Based Phishing Detection Method." Expert Systems with Applications, 53:231–242, 2016.
[5] Ozgur Koray Sahingoz, Ebubekir Buber, Onder Demir, and Banu Diri. "Machine Learning Based Phishing Detection from URLs." Expert Systems with Applications, 117:345–357, 2019.
[6] Jian Mao, Wenqian Tian, Pei Li, Tao Wei, and Zhenkai Liang. "Phishing-Alarm: Robust and Efficient Phishing Detection via Page Component Similarity." IEEE Access, 5:17020–17030, 2017.
[7] Samuel Marchal, Jérôme François, Radu State, and Thomas Engel. "Phishstorm: Detecting Phishing with Streaming Analytics." IEEE Transactions on Network and Service Management, 11(4):458–471, 2014.
[8] Anti-Phishing Working Group (APWG): Cross-Industry Global Group Supporting Tackling the Phishing Menace. http://www.antiphishing.org, 2020.
[9] PhishTank: A Nonprofit Anti-Phishing Organization. http://www.phishtank.com, 2020.
[10] COVID-19 Cyber Threat Coalition. https://www.cyberthreatcoalition.org, 2020.
[11] X-Force Threat Intelligence Index, 2020. URL https://www.ibm.com/account/reg/us-en/signup?formid=urx-42703.
[12] Sidharth Chhabra, Anupama Aggarwal, Fabricio Benevenuto, and Ponnurangam Kumaraguru. "Phi.sh/$oCiaL: The Phishing Landscape through Short URLs." In 8th Annual Collaboration, Electronic Messaging, Anti-Abuse and Spam Conference, pages 92–101, 2011.
[13] Fortinet: Threat Landscape Report. https://www.fortinet.com/content/dam/fortinet/assets/threat-reports/threat-report-q2-2019.pdf, 2019.
[14] Manuel Egele, Theodoor Scholte, Engin Kirda, and Christopher Kruegel. "A Survey on Automated Dynamic Malware-Analysis Techniques and Tools." ACM Computing Surveys (CSUR), 44(2):1–42, 2008.
[15] Alexei Bulazel and Bülent Yener. "A Survey on Automated Dynamic Malware Analysis Evasion and Counter-Evasion: PC, Mobile, and Web." In 1st Reversing and Offensive-oriented Trends Symposium, pages 1–21. ACM, 2017.
[16] Adam Oest, Yeganeh Safaei, Adam Doupé, Gail-Joon Ahn, Brad Wardman, and Gary Warner. "Inside a Phisher’s Mind: Understanding the Anti-phishing Ecosystem Through Phishing Kit Analysis." In 2018 APWG Symposium on Electronic Crime Research (eCrime), pages 1–12. IEEE, 2018.
[17] Sourena Maroofi, Maciej Korczyński, Cristian Hesselman, Benoit Ampeau, and Andrzej Duda. "COMAR: Classification of Compromised versus Maliciously Registered Domains." In 5th IEEE European Symposium on Security and Privacy, Euro S&P, 2020.
[18] Luca Invernizzi, Kurt Thomas, Alexandros Kapravelos, Oxana Comanescu, Jean-Michel Picod, and Elie Bursztein. "Cloak of Visibility: Detecting When Machines Browse a Different Web." In 2016 IEEE Symposium on Security and Privacy (SP), pages 743–758. IEEE, 2016.
[19] Ian Fette, Norman Sadeh, and Anthony Tomasic. "Learning to Detect Phishing Emails." In 16th International Conference on World Wide Web, pages 649–656, 2007.
[20] Marco Cova, Christopher Kruegel, and Giovanni Vigna. "There Is No Free Phish: An Analysis of 'Free' and Live Phishing Kits." USENIX Workshop on Offensive Technologies, 8:1–8, 2008.
[21] Adam Oest, Yeganeh Safaei, Adam Doupé, Gail-Joon Ahn, Brad Wardman, and Kevin Tyers. "PhishFarm: A Scalable Framework for Measuring the Effectiveness of Evasion Techniques against Browser Phishing Blacklists." In 2019 IEEE Symposium on Security and Privacy (SP), pages 1344–1361. IEEE, 2019.
[22] Yi-Min Wang and Ming Ma. "Detecting Stealth Web Pages That Use Click-Through Cloaking." In Microsoft Research Technical Report, MSR-TR, 2006.
[23] Adam Oest, Penghui Zhang, Brad Wardman, Eric Nunes, Jakub Burgis, Ali Zand, Kurt Thomas, Adam Doupé, and Gail-Joon Ahn. "Sunrise to Sunset: Analyzing the End-to-end Life Cycle and Effectiveness of Phishing Attacks at Scale." In 29th USENIX Security Symposium, 2020.
[24] Threat Spotlight: Malicious use of reCaptcha, 2020. URL https://blog.barracuda.com/2020/04/30/threat-spotlight-malicious-recaptcha/.
[25] Google reCAPTCHA v2, 2020. URL https://developers.google.com/recaptcha/docs/display.
[26] PhishTank FAQ, 2020. URL https://www.phishtank.com/faq.php.
[27] Comparison of web browsers, 2020. URL https://en.wikipedia.org/wiki/Comparison_of_web_browsers.
[28] Oleksii Starov and Nick Nikiforakis. "Extended Tracking Powers: Measuring the Privacy Diffusion Enabled by Browser Extensions." In 26th International Conference on World Wide Web, pages 1481–1490, 2017.
[29] Multiple Sign-In Pages, 2015. URL https://support.google.com/mail/forum/AAAAK7un8RUoAsE-6wmaSU/?hl=en&gpf=%23!topic%2Fgmail%2FoAsE-6wmaSU.
[30] Safe Browsing APIs (v4) - Caching, 2020. URL https://developers.google.com/safe-browsing/v4/caching.
[31] Browsers Market Share, 2020. URL https://netmarketshare.com/browser-market-share.aspx.
[32] Opera Browser FAQ, 2020. URL https://security.opera.com/mobile-browsers-faq/.
[33] Najmeh Miramirkhani, Timothy Barron, Michael Ferdman, and Nick Nikiforakis. "Panning for gold.com: Understanding the Dynamics of Domain Dropcatching." In 27th International Conference on World Wide Web, pages 257–266, 2018.
[34] Tobias Lauinger, Abdelberi Chaabane, Ahmet Salih Buyukkayhan, Kaan Onarlioglu, and William Robertson. "Game of Registrars: An Empirical Analysis of Post-Expiration Domain Name Takeovers." In 26th USENIX Security Symposium, pages 865–880, 2017.
[35] Alexa: Actionable Analytics for the Web. https://www.alexa.com.
[36] Janice C Sipior, Burke T Ward, and Ruben A Mendoza. "Online Privacy Concerns Associated with Cookies, Flash Cookies, and Web Beacons." Journal of Internet Commerce, 10(1):1–16, 2011.
[37] Phishlabs. https://www.phishlabs.com.
[38] Adam Oest, Yeganeh Safaei, Penghui Zhang, Brad Wardman, Kevin Tyers, Yan Shoshitaishvili, and Adam Doupé. "Phishtime: Continuous longitudinal measurement of the effectiveness of anti-phishing blacklists." In 29th USENIX Security Symposium, pages 379–396, 2020.
[39] Phishing Activity Trends Report: 1st Quarter 2020. https://docs.apwg.org/reports/apwg_trends_report_q1_2020.pdf, 2020.

### Examples of Evasion Techniques

**Figure 1:** Alert box evasion technique. The alert box-protected page (top) and the phishing payload targeting PayPal (bottom).

**Figure 2:** Session-based evasion technique. The cover page on the first visit (top) and the phishing payload targeting Facebook (bottom).

**Figure 3:** Google reCAPTCHA message evasion technique. The Google reCAPTCHA-protected page (top) and the phishing payload targeting PayPal (bottom).

### Ethical Considerations

During our experiment, we took precautions to ensure that no actual users would visit our websites. Specifically:
1. We reported our phishing URLs directly to anti-phishing bots via email or online forms, and never published them online or on any public website.
2. For any accidental visits, we removed all sensitive information (e.g., credentials) from the submission form and issued TLS certificates to prevent information leakage.

Despite these precautions, the only remaining concern is the potential impact of our measurements on the overall performance of the anti-phishing engines. However, the number of reported phishing URLs is minimal compared to the daily number of captured phishing attacks. For example, we reported 18 URLs to APWG in one day, while more than 2,000 URLs were blacklisted daily in March 2020 [39].

### PHP Sample Code

**Listing 1:** Single-page PHP phishing code with Google reCAPTCHA protection.

```php
$isvalid = false;
if (isset($_POST['gresponse'])) {
    $secret = 'Google CAPTCHA secret key';
    $captcha = $_POST['gresponse'];
    /* Check CAPTCHA result */
    $ans = chk_captcha($secret, $captcha);
    if ($ans->success) {
        $isvalid = true;
    } else {
        $isvalid = false;
    }
}
if ($isvalid) {
    echo "Serve phishing payload HTML";
} else {
    echo "Serve CAPTCHA page HTML";
}
```

**Listing 2:** PHP phishing code with alert box protection.

```php
/* Anti-phishing engine or user managed to confirm the alert box */
$d = array('ip' => getip(), 'page' => 'payload');
log_data($d, $log_file);
echo "SERVE PHISHING HTML";

$d = array('ip' => get_ip(), 'page' => 'benign');
log_data($d, $log_file);
echo "SERVE BENIGN CONTENT WITH ALERT BOX";

if (isset($a) && $a == 'getData') {
    echo 'first_visit = false;';
} else {
    echo 'first_visit = true;';

    /* Creating JS check variable for the second page load */
    echo 'already_served = true;';
} else {
    echo 'already_served = false;';

    if (first_visit && already_served) {
        setTimeout(get_real_data, 2000);
        var msg = 'Please sign in to continue...';
        var result = confirm(msg);
        if (result) {
            // Additional logic here
        }
    }
}
```

### Conclusion

The prevalence of human verification techniques in phishing kits severely hampers detection efforts. By disclosing our findings, we aim to help anti-phishing entities improve their detection capabilities before these techniques are widely exploited.