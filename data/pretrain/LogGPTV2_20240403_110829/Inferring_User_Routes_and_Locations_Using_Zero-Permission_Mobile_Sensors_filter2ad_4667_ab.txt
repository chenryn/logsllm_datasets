the possibilities of the victim’s route being in a top k rather
than telling which among the top is the actual route, we note
that if k is reduced to 1, the probability P idv
is precisely
1
the probability of ﬁnding the victim’s route. This probability,
1 ≈ 13% for Boston and ≈ 38% for
though small (e.g., P idv
Waltham in our preliminary real-driving experiments), is still
considerably high given the fact that the search space contains
billions of routes. In practice, a top k with small k (e.g.,
k ≤ 5) is a very serious breach. An adversary may collect
such lists through the span of multiple days and reﬁne the lists
to ﬁnd exactly the victim’s daily commute route. Moreover,
with more resources, the adversary can quickly check every
potential route in the list to learn about the victim.
While the individual rank reﬂects the performance of the
attack in terms of ﬁnding the exact route, in practice a rough
estimation of the victim’s route is usually enough to create
a signiﬁcant privacy threat. For example, targeted criminal
activity (i.e., robbery and kidnapping) could result from the
physical proximity knowledge derived from the attack. To
justify this threat, we deﬁne a cluster of routes as a set { ˆR1,
. . . , ˆRl}, in which any two routes are similar. The similarity of
routes ˆR and ˆR(cid:2) is justiﬁed by d(Ri,Rj)  φg3. In this case, we call χ a
χ = (r, r
segment connection or simply an intersection.
Our idea for constructing the directed graph G = (V,
E) is to represent each segment s by a vertex v ∈ V and
each segment connection χ by an edge e ∈ E. An example
construction is illustrated in Figure 1b. Intuitively, one will
stay at one vertex on the graph as long as she does not turn into
another segment. A turn at an intersection makes her traverse
to another vertex through an edge connecting them. Based on
the public map resource, we accordingly build our graph for
the whole geographic area. For each edge e corresponding
to segment connection χ, we use θ(χ) as the edge’s weight.
) ∈ C, then θ(r, r
(cid:2)
(cid:2)
2Maximal-length segment is analogous to a longest route between two
nodes with an additional condition: weight (turn angle) must be small.
401401
The length, speed limit, and curvature of a road segment s
are stored as attributes of the corresponding vertex v. This
information combined with the sensor data is used to match
the victim’s angle trace during the search. We note that for
any two segments s and s(cid:2) such that s(cid:2) ⊂ s (i.e., one is
a sub-sequence of the another), we simply remove s(cid:2) from
the graph, because any atomic part r and connection χ of s(cid:2)
involved in the route search are also present in s, rendering
s(cid:2) redundant. Therefore, graph G essentially contains only
vertices corresponding to maximal-length segments, resulting
in more efﬁcient route search with greatly reduced graph size.
C. Search Algorithm
Our search algorithm evaluates the routes when traversing
the graph and keeps the good routes at
the end of each
step. When the search completes, a list of candidates is
returned with their evaluated score. At each step of the search,
outgoing edges from a given vertex are investigated for the
next candidate segment connection. The evaluation uses a
metric that is based on the difference between the edge weights
and the angle trace’s slopes. We improve the performance of
the basic search by incorporating an evaluation of segment
curvatures on the candidate routes. The curvatures of potential
routes are computed from coordinates of points extracted from
the map, while curvatures of the actual route are estimated
based on gyroscope samples collected between the slopes.
These details are discussed in Sections IV-A and IV-B.
D. Reﬁning the Results
As the search based on gyroscope data is unaware of the
absolute orientation of the routes, we reﬁne the results and
reduce the search time by using heading information derived
from the magnetometer to immediately eliminate bad routes
(e.g., east-west routes are ﬁltered out when the actual trace
indicates north-south direction).
In addition, we exploit the accelerometer to identify idle
states and discard samples in such periods for better estima-
tion. We also extract speed information, available from Nokia’s
HERE platform [13], for each road and ﬁlter out routes by
comparing the actual travel time between intersections with the
time estimated for the segment under investigation. We provide
the details of this discussion in Sections IV-C and IV-D.
IV. SYSTEM DESIGN
A. Basic Search Algorithm
The search technique includes maintaining a list of scored
candidate victim routes while traversing the graph. Candi-
date routes have higher probability of matching the recorded
mobility trace. For the current discussion, we assume that
the adversary only exploits the gyroscope data to launch the
attack, i.e., we consider only gt from D = {(at, gt, mt)}. Let
α = (α1, . . . , αN ) be the derived sequence of turn angles
at N intersections after processing gyroscope data gt. The
details of sensor data processing are discussed in Section IV-D.
In Sections IV-B and IV-C we reﬁne the algorithm and improve
the performance by adding ﬁltering rules and applying a more
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:14:06 UTC from IEEE Xplore.  Restrictions apply. 
complex scoring method. Our goal at the moment is to ﬁnd
θ = (θ1, . . . , θN ) ∈ G, the potential sequences of turns that
maximize the probability of matching θ given the observation
of α. This probability, denoted P (θ|α), can be rewritten as:
P (θ|α) =
P (θ, α)
P (α)
=
P (α|θ)P (θ)
P (α)
As P (α) is the probability of a measurement α without
conditioning on θ, it is independent of θ. Thus, maximizing
P (θ|α) is equivalent to maximizing P (α|θ)P (θ). The distri-
bution of a priori probability P (θ) may depend on the driver,
city, and day/time of travel (e.g., home-to-work and work-
to-home routes during weekdays have signiﬁcantly higher
probability than other routes). Since our goal is to demonstrate
the generality of the attack even if the adversary knows
nothing about the victim’s travel history, we consider P (θ)
to be equiprobable, i.e., any route has the same probability of
being taken by the victim. This presents the worst-case attack
scenario and gives a lower bound on the performance. If the
a priori probability P (θ) is known, we expect the attack to
achieve higher success probability than the performance we
report in this work. Under the assumption of equiprobable
a priori probability, the goal of maximizing P (α|θ)P (θ) is
equivalent to maximizing the probability P (α|θ) alone.
(cid:3)
Samples taken from the gyroscope include noise as an
additional unknown amount in the angle trace, yielding the
angle α = θ + n, where n is the random noise vector. We
will show through experimental results in Section V, that the
gyroscope noise can be approximated by a N-dimensional
zero-mean normal distribution N (0, σ) with standard deviation
σ. Accordingly, P (α|θ) can be rewritten as:
(cid:6)
−(cid:5)α − θ(cid:5)2
P (α|θ) = P (n = α − θ) =
(cid:4)− N
where (cid:5) · (cid:5) indicates the L2 norm of a vector. As
is constant for a ﬁxed N and σ, maximizing P (α|θ) is now
equivalent to minimizing (cid:5)α − θ(cid:5). Therefore, the adversary
obtains the optimal solution as stated in Theorem 1.
Theorem 1. Given graph G and a turn angle trace α with
normally distributed noise, the optimal route tracking solution
is θ∗