• 哈希算法和加密工具
Debian参考手册 178/233
10.1.1 存档和压缩工具
以下是Debian系统上可用的存档和压缩工具的预览。
软件包 流行度 大小 扩展名 命令 描述
tar V:914,I:999 3148 .tar tar(1) 标准的归档工具（默认）
UnixSystemV风格的归档器，与
cpio V:393,I:998 1141 .cpio cpio(1)
find(1)一起使用
binutils V:157,I:633 126 .ar ar(1) 创建静态库的归档工具
fastjar V:1,I:14 183 .jar fastjar(1) Java归档工具（类似zip）
新的POSIX归档工具，介于tar和
pax V:8,I:15 170 .pax pax(1)
cpio之间
gzip(1),
gzip V:879,I:999 252 .gz GNULZ77压缩工具（默认）
zcat(1),…
bzip2(1), Burrows-Wheelerblock-sorting压缩工
bzip2 V:169,I:970 121 .bz2 bzcat(1), 具有着比gzip(1)更高的压缩率(跟
… gzip有着相似的语法但速度比它慢)
LZMA压缩工具有着比gzip(1)更高
lzma V:1,I:17 149 .lzma lzma(1)
的压缩率（不推荐)
xz(1), XZ压缩工具有着比bzip2(1)更高的
xz-utils V:364,I:980 1258 .xz xzdec(1), 压缩率（压缩速度慢于gzip但是比
… bzip2快;LZMA压缩工具的替代品)
zstd(1),
zstd V:153,I:420 2158 .zstd zstdcat(1), Zstandard快速无损压缩工具
…
7zr(1), 有着更高压缩率的7-zip文件归档器
p7zip V:124,I:477 987 .7z
p7zip(1) （LZMA压缩）
7z(1), 有着更高压缩率的7-Zip文件归档器
p7zip-full V:127,I:478 4664 .7z
7za(1) （LZMA压缩和其他）
LZO压缩工具有着比gzip(1)更高的
lzop V:15,I:141 164 .lzo lzop(1) 压缩和解压缩速度(跟gzip有着相
似的语法但压缩率比它低)
zip V:49,I:383 616 .zip zip(1) InfoZip：DOS归档器和压缩工具
unzip V:105,I:772 379 .zip unzip(1) InfoZIP：DOS解档器和解压缩工具
Table10.1: 存档和压缩工具列表
警告
除非你知道将会发生什么，否则不要设置”$TAPE”变量。它会改变tar(1)的行为。
• gzippedtar(1)归档器用于扩展名是”.tgz”或者”.tar.gz”的文件。
• xz-compressedtar(1)归档器用于扩展名是”.txz”或者”.tar.xz”的文件。
• FOSS工具，例如tar(1)，中的主流压缩方法已经按如下所示的迁移: gzip→bzip2→xz
• cp(1),scp(1)和tar(1)工具可能并不适用于一些特殊的文件。cpio(1)工具的适用范围是最广的。
• cpio(1)是被设计为与find(1)和其它命令一起使用，适合于创建备份脚本的场景，因此，脚本的文件选择部分能
够被独立测试。
• Libreoffice数据文件的内部结构是”.jar”文件，它也可以使用unzip工具来打开。
• 事实上跨平台支持最好的存档工具是zip。按照“zip -rX”的方式调用可以获得最大的兼容性。如果最大文件大
小需要纳入考虑范围，请同时配合“-s”选项使用。
Debian参考手册 179/233
10.1.2 复制和同步工具
以下是Debian系统上的可用的简单复制和备份工具的预览。
软件包 流行度 大小 工具 功能
coreutils V:883,I:999 18306 GNUcp 复制本地文件和目录(”-a”参数实现递归）
复制远端文件和目录（客户端，”-r”参数实现递
openssh-client V:868,I:996 5821 scp
归)
openssh-server V:733,I:819 1955 sshd 复制远端文件和目录（远程服务器）
rsync V:238,I:554 776 单向远程同步和备份
unison V:3,I:15 14 双向远程同步和备份
Table10.2: 复制和同步工具列表
在复制文件的时候，rsync(8)比其他工具提供了更多的特性。
• 差分传输算法只会发送源文件与已存在的目标文件之间的差异部分
• 快速检查算法(默认)会查找大小或者最后的修改时间有变化的文件
• ”--exclude”和”--exclude-from”选项类似于tar(1)
• 在源目录中添加反斜杠的语法能够避免在目标文件中创建额外的目录级别。
提示
在表 10.14中的版本控制系统(VCS)可以被认为是多路拷贝和同步工具。
10.1.3 归档语法
以下是用不同的工具压缩和解压缩整个”./source”目录中的内容。
GNUtar(1):
$ tar -cvJf archive.tar.xz ./source
$ tar -xvJf archive.tar.xz
或者，如下所示。
$ find ./source -xdev -print0 | tar -cvJf archive.tar.xz --null -T -
cpio(1):
$ find ./source -xdev -print0 | cpio -ov --null > archive.cpio; xz archive.cpio
$ zcat archive.cpio.xz | cpio -i
10.1.4 复制语法
如下是用不同的工具复制整个”./source”目录中的内容。
• 本地复制: ”./source”目录→”/dest”目录
• 远程复制：本地主机上的”./source” 目录→”PI:EMAIL”主机上的”/dest”目录
rsync(8):
Debian参考手册 180/233
# cd ./source; rsync -aHAXSv . /dest
# cd ./source; rsync -aHAXSv . PI:EMAIL:/dest
你能够选择使用“源目录上的反斜杠”语法。
# rsync -aHAXSv ./source/ /dest
# rsync -aHAXSv ./source/ PI:EMAIL:/dest
或者，如下所示。
# cd ./source; find . -print0 | rsync -aHAXSv0 --files-from=- . /dest
# cd ./source; find . -print0 | rsync -aHAXSv0 --files-from=- . PI:EMAIL:/dest
GNUcp(1)和openSSHscp(1):
# cd ./source; cp -a . /dest
# cd ./source; scp -pr . PI:EMAIL:/dest
GNUtar(1):
# (cd ./source && tar cf - . ) | (cd /dest && tar xvfp - )
# (cd ./source && tar cf - . ) | ssh PI:EMAIL ’(cd /dest && tar xvfp - )’
cpio(1):
# cd ./source; find . -print0 | cpio -pvdm --null --sparse /dest
你能够在所有包含”.”的例子里用”foo”替代”.”，这样就可以从”./source/foo”目录复制文件到”/dest/foo”目
录。
在所有包含”.”的列子里，你能够使用绝对路径”/path/to/source/foo”来代替”.”，这样可以去掉”cd ./source;”.
如下所示，这些文件会根据工具的不同，拷贝到不同的位置。
• ”/dest/foo”: rsync(8),GNUcp(1),和scp(1)
• ”/dest/path/to/source/foo”: GNUtar(1),和cpio(1)
提示
rsync(8)和GNUcp(1)可以用”-u”选项来忽略接受端上更新的文件。
10.1.5 查找文件的语法
find(1)被用作从归档中筛选文件也被用作拷贝命令(参见第 10.1.3 节和第 10.1.4 节)或者用于xargs(1)(参见第
9.4.9 节)。通过find的命令行参数能够使其功能得到加强。
以下是find(1)基本语法的总结。
• find条件参数的运算规则是从左到右。
• 一旦输出是确定的，那么运算就会停止。
•“逻辑OR”（由条件之间的”-o”参数指定的）优先级低于”逻辑AND”（由”-a”参数指定或者条件之间没有任何参
数）。
• ”逻辑NOT”(由条件前面的”!”指定)优先级高于“逻辑AND”。
• ”-prune”总是返回逻辑TRUE并且如果这个目录是存在的，将会搜索除这个目录以外的文件。
Debian参考手册 181/233
• ”-name” 选项匹配带有 shell 通配符 (参见第 1.5.6 节) 的文件名但也匹配带有类似”*” 和”?” 元字符的 .”。(新的
POSIX特性)
• ”-regex”匹配整个文件路径，默认采用emacs风格的BRE(参见第 1.6.2 节)。
• ”-size”根据文件大小来匹配(值前面带有”+”号匹配更大的文件，值前面带有”-”号匹配更小的文件)
• ”-newer”参数匹配比参数名中指定的文件还要新的文件。
• ”-print0”参数总是返回逻辑TRUE并将完整文件名(nullterminated)打印到标准输出设备上。
如下是find(1)语法格式。
# find /path/to \
-xdev -regextype posix-extended \
-type f -regex ”.*\.cpio|.*~” -prune -o \
-type d -regex ”.*/\.git” -prune -o \
-type f -size +99M -prune -o \
-type f -newer /path/to/timestamp -print0
这些命令会执行如下动作。
1. 查找”/path/to”下的所有文件
2. 限定全局查找的文件系统并且使用的是ERE(参见第 1.6.2 节)
3. 通过停止处理的方式来排除匹配”.*\.cpio”或”.*~”正则表达式的文件
4. 通过停止处理的方式来排除匹配”.*/\.git”正则表达式的目录
5. 通过停止处理的方式来排除比99MB(1048576字节单元)更大的文件
6. 显示文件名，满足以上搜索条件并且比”/path/to/timestamp”新的文件
请留心以上例子中的”-prune -o”排除文件的习惯用法。
注意
对于非Debian系的Unix-like系统，有些参数可能不被find(1)命令所支持。在这种情况下，应该考虑调整匹配方
法并用”-print”替代”-print0”。你可能同样需要更改其他相关的命令。
10.1.6 归档媒体
为重要的数据存档寻找存储设备时，你应该注意它们的局限性。对于小型的个人数据备份，我使用品牌公司的CD-R
和DVD-R然后把它放在阴凉、干燥、清洁的地方。(专业的一般使用磁带存档介质)
注意
防火安全是对于纸质文档来说的，大多数的计算机数据存储媒介耐热性比纸差。我经常依赖存储在多个安全地点的
加密拷贝。
网上（主要是来源于供应商信息）可以查看存储介质的最大使用寿命。
• 大于100年：用墨水的无酸纸
• 100年：光盘存储（CD/DVD，CD/DVD-R）
• 30年：磁带存储（磁带，软盘)
Debian参考手册 182/233
• 20年：相变光盘存储（CD-RW）
这不包括由于人为导致的机械故障等等。
网上（主要来源于供应商信息）可以查看存储介质的最大的写次数。
• 大于250,000次：硬盘驱动器
• 大于10,000次：闪存
• 1,000次：CD/DVD-RW
• 1次：CD/DVD-R，纸
小心
这里的存储寿命和写次数的数据不应该被用来决定任何用于关键数据的存储媒介，请翻阅制造商提供的特定
产品的说明。
提示
因为CD/DVD-R和纸只能写一次，它们从根本上阻止了因为重写导致的数据意外丢失。这是优点！
提示
如果你需要更快更频繁的进行大数据备份，那么通过高速网络连接的远端主机上的硬盘来实现备份，可能是唯一可
行的方法。
提示