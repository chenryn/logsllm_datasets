原文链接：
欺骗一直是我感兴趣的。作为军事历史的学生，我一直对它在战争中的实施着迷，并将欺骗视为有效且通常成本低的东西！  
几年前，我参与了几个月的企业欺骗解决方案的开发和广泛测试（从红色团队的角度来看）。在2018年初，在我的一个Active
Directory课程中，一名学生询问并最终聘请我（谢谢！）测试他们正在评估的三种欺骗产品。
通过这些经验，我意识到Active Directory（AD）中欺骗的大部分焦点都集中在honeyuser / honeytokens /
honeycredentials上。像dcept等工具很受欢迎。如果我们想要在攻击的域枚举阶段利用欺骗来检测攻击者，那么AD的自由和开源欺骗解决方案就会缺乏。这是我们即将解决的问题。
此外，为了增加兴趣和社区参与，我在几周前（2018年10月）在BruCON夫妇的一个关于“在Active
Directory中伪造欺骗信任”的演讲。幻灯片和视频都在这篇文章的最后。
# 什么是欺骗？
欺骗是一种心理学游戏。长期以来，红色团队和对手一直用它来对付毫无戒心的用户，以欺骗他们打开恶意附件或点击链接。进入AD环境后，攻击者会尝试使用其他用户的凭据，并通过其他计算机与现有日志和流量混合使用。
蓝队通过提供对手正在寻找的服务，特权或信息来利用欺骗。在心理学和技术控制方面，恕我直言，蓝队在欺骗方面占据上风。
# 攻击者的心理
有一种被称为虚幻优势的心理状态，适用于大多数对手和红队。他们认为自己比蓝队更聪明，更有天赋。与此同时，追求最低悬而未决的果实的倾向，以及迅速获得DA特权的冲动，使它们成为欺骗的富有成效的目标。
所以，防御者向对手展示他们想要看到的东西。例如，密码永不过期的用户或服务器2003计算机。
# 期望的诱饵属性
直接从我的幻灯片中获取诱饵所需的属性：
  1. 应该是足够可取的，以便攻击者枚举对象。
  2. 应该很容易配置。
  3. 端点上不需要更改配置。
  4. 不应该触发正常的管理活动。  
上面的4号是最难实现的。如果我们的目标是枚举，我们必须使攻击者活动或工具脱颖而出，以避免误报。
# 部署欺骗
那么，我们如何才能通过AD中的内置工具实现上述所需的属性？我们可以使用组策略来设置AD Access日志记录，配置“有趣”对象并过滤掉误报！
AD Access所需的组策略设置是Windows设置| 安全设置| 高级审计策略配置| DS Access - 审核目录服务访问  
无论何时访问AD对象，上述设置都会产生安全事件4662。需要在对象级别配置日志记录。对于该配置，我们需要修改对象的SACL并添加相关的ACE。
让我们看一下AddAuditAccessObjectAce函数来理解ACE：  
因此，作为一个例子，我们可以在“每个人”使用'ReadProperty''成功'时完全针对用户设置审计。这有助于检测针对该用户的任何枚举。
# 介绍Deploy-Deception
可以使用GUI完成这些设置。也可以使用PowerShell和ActiveDirectory模块，使它自动化执行。
为了自动设置具有有趣属性和鲜为人知的属性的诱饵对象以避免误报，我编写了Deploy-Deception。它是一个PowerShell模块，它利用ActiveDirectory模块轻松高效地部署诱饵。您可以在这里找到Github上的Deploy-Deception：https：//github.com/samratashok/Deploy-Deception
让我们看一下在攻击的不同阶段设置不同类型的对象诱饵。
# 枚举 - 诱饵用户对象
用户对象是具有攻击者感兴趣的某些用户属性的最有趣的对象：
  * 密码不会过期
  * 值得信赖的代表团
  * 拥有SPN的用户
  * 说明中的密码
  * 属于高权限组的用户
  * 具有ACL权限的用户对其他用户，组或容器的权限
我们可以使用Deplou-UserDeception函数来创建一个诱饵用户。  
让我们创建一个诱饵用户'usermanager'，其密码永不过期，每当每个人都读取其任何属性时都会记录4662：
    PS C:\> Import-Module C:\Deploy-Deception\Deploy-Deception.psd1
    PS C:\> Create-DecoyUser -UserFirstName user -UserLastName manager -Password Pass@123 | Deploy-UserDeception -UserFlag PasswordNeverExpires -Verbose
请注意，在域中创建了实际的用户对象。现在，由于我们在任何人都读取用户usermanager的任何属性时启用了默认日志记录，因此上述内容会被频繁触发。这意味着即使有人只是列出域中的所有用户，也会记录4662。这意味着，这个诱饵将触发所有可能的使用（正常或其他）的记录，如
网络用户/域
Get-WmiObject -Class Win32_UserAccount
Get-ADUser -Filter *（MS ActiveDirectory模块）
Get-NetUser（PowerView）
查找用户，联系人和组GUI
那看起来不太好吧？因此，我们需要找到将攻击者枚举与正常活动区分开来的方法。攻击者枚举工具有一些非常有趣的东西，他们喜欢尽可能多地提取对象的信息（这是有道理的，因为你不想重复连接到域控制器）。现在，这意味着如果我们为一个不常见的属性启用审计，那么很有可能（是的，可能性
- 请与我分享您的误报：P）只有激进的枚举才会触发日志记录。有很多这样的属性，看看所有属性的列表。我曾经喜欢这样的属性 -x500uniqueIdentifier（GUID d07da11f-8a3d-42b6-b0aa-76c962be719a）
因此，我们现在删除我们之前添加的ACE并添加一个新的，仅在读取x500uniqueIdentifier属性时触发日志记录：
    PS C:\> Deploy-UserDeception -DecoySamAccountName usermanager -RemoveAuditing $true -Verbose
    PS C:\> Deploy-UserDeception -DecoySamAccountName usermanager -UserFlag PasswordNeverExpires -GUID d07da11f-8a3d-42b6-b0aa-76c962be719a -Verbose
此审核仅由PowerView（或其他工具，如ADExplorer）等工具触发，这些工具可获取对象的所有属性。虽然不完美，但这是一个巨大的进步。
如果您有足够的信心，您的监控或管理工具都不会读取用户对象的所有属性，则还可以设置对SPN等属性的审计，只有在读取SPN（或所有属性）时才会触发记录
    PS C:\> Create-DecoyUser -UserFirstName user -UserLastName manager-spn -Password Pass@123 | Deploy-UserDeception -SPN 'MSSQLSvc/dc' -GUID f3a64788-5306-11d1-a9c5-0000f80367c1 -Verbose
还有太多的日志？以下命令仅在读取诱饵用户对象的DACL（或所有属性）时记录4662日志：
    PS C:\> Create-DecoyUser -UserFirstName user -UserLastName manager-control -Password Pass@123 | Deploy-UserDeception -UserFlag AllowReversiblePasswordEncryption -Right ReadControl -Verbose
# 枚举 - 诱饵计算机对象
虽然通常建议使用实际的计算机或虚拟机来作为诱饵计算机对象，以避免诱饵的识别。但是，可以在域中创建计算机对象作为诱饵，而不需要映射到该对象的实际计算机。
攻击者感兴趣的一些计算机对象属性：
  * 较旧的操作系统
  * 有趣的SPN
  * 授权设置
  * 特权组的成员资格  
让我们看看使用Deploy-Deception的一些部署，我们可以使用Deploy-DecoyComputer函数。：
        PS C:\> Create-DecoyComputer -ComputerName revert-web -Verbose | Deploy-ComputerDeception -PropertyFlag TrustedForDelegation -GUID d07da11f-8a3d-42b6-b0aa-76c962be719a  -Verbose
上面的命令创建一个启用了无约束委托的诱饵计算机，并且只要读取x500uniqueIdentifier或计算机的所有属性，就会记录4662。
    PS C:\> Deploy-ComputerDeception -DecoyComputerName comp1 -PropertyFlag TrustedForDelegation -Right ReadControl -Verbose
以上命令使用现有计算机对象并设置无约束委派。只要读取DACL或计算机的所有属性，就会触发记录。
我们还可以使用DCShadow来修改看似DC的计算机对象。我在这里简单地谈到这一点，以后会为有关此特定主题讲解更多信息。
# 枚举 - 诱饵组对象
我们还可以部署诱饵组对象。哪些属性对对手有意义？
  * 有趣的名字（包含管理员，管理员等字样）
  * 该组的成员也是高特权组的成员或具有“有趣”的用户属性。 
  * 高权限组的成员资格。