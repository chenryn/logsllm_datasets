```    
```    
db1=> select * from pgaudit.audit_sql_drop ;    
-[ RECORD 1 ]---+--------------------------------    
event           | sql_drop    
tag             | DROP TABLE    
username        | test    
datname         | db1    
client_addr     |     
client_port     |     
crt_time        | 2017-09-25 16:06:08.22198    
classid         | 1259    
objid           | 33212    
objsubid        | 0    
original        | t    
normal          | f    
is_temporary    | f    
object_type     | table    
schema_name     | public    
object_name     | tbl    
object_identity | public.tbl    
address_names   | {public,tbl}    
address_args    | {}    
-[ RECORD 2 ]---+--------------------------------    
event           | sql_drop    
tag             | DROP TABLE    
username        | test    
datname         | db1    
client_addr     |     
client_port     |     
crt_time        | 2017-09-25 16:06:08.22198    
classid         | 2604    
objid           | 33215    
objsubid        | 0    
original        | f    
normal          | f    
is_temporary    | f    
object_type     | default value    
schema_name     |     
object_name     |     
object_identity | for public.tbl.info    
address_names   | {public,tbl,info}    
address_args    | {}    
-[ RECORD 3 ]---+--------------------------------    
event           | sql_drop    
tag             | DROP TABLE    
username        | test    
datname         | db1    
client_addr     |     
client_port     |     
crt_time        | 2017-09-25 16:06:08.22198    
classid         | 1247    
objid           | 33214    
objsubid        | 0    
original        | f    
normal          | f    
is_temporary    | f    
object_type     | type    
schema_name     | public    
object_name     | tbl    
object_identity | public.tbl    
address_names   | {public.tbl}    
address_args    | {}    
-[ RECORD 4 ]---+--------------------------------    
event           | sql_drop    
tag             | DROP TABLE    
username        | test    
datname         | db1    
client_addr     |     
client_port     |     
crt_time        | 2017-09-25 16:06:08.22198    
classid         | 1247    
objid           | 33213    
objsubid        | 0    
original        | f    
normal          | f    
is_temporary    | f    
object_type     | type    
schema_name     | public    
object_name     | _tbl    
object_identity | public.tbl[]    
address_names   | {public.tbl[]}    
address_args    | {}    
-[ RECORD 5 ]---+--------------------------------    
event           | sql_drop    
tag             | DROP TABLE    
username        | test    
datname         | db1    
client_addr     |     
client_port     |     
crt_time        | 2017-09-25 16:06:08.22198    
classid         | 1259    
objid           | 33222    
objsubid        | 0    
original        | f    
normal          | f    
is_temporary    | f    
object_type     | toast table    
schema_name     | pg_toast    
object_name     | pg_toast_33212    
object_identity | pg_toast.pg_toast_33212    
address_names   | {pg_toast,pg_toast_33212}    
address_args    | {}    
-[ RECORD 6 ]---+--------------------------------    
event           | sql_drop    
tag             | DROP TABLE    
username        | test    
datname         | db1    
client_addr     |     
client_port     |     
crt_time        | 2017-09-25 16:06:08.22198    
classid         | 1259    
objid           | 33224    
objsubid        | 0    
original        | f    
normal          | f    
is_temporary    | f    
object_type     | index    
schema_name     | pg_toast    
object_name     | pg_toast_33212_index    
object_identity | pg_toast.pg_toast_33212_index    
address_names   | {pg_toast,pg_toast_33212_index}    
address_args    | {}    
-[ RECORD 7 ]---+--------------------------------    
event           | sql_drop    
tag             | DROP TABLE    
username        | test    
datname         | db1    
client_addr     |     
client_port     |     
crt_time        | 2017-09-25 16:06:08.22198    
classid         | 1247    
objid           | 33223    
objsubid        | 0    
original        | f    
normal          | f    
is_temporary    | f    
object_type     | type    
schema_name     | pg_toast    
object_name     | pg_toast_33212    
object_identity | pg_toast.pg_toast_33212    
address_names   | {pg_toast.pg_toast_33212}    
address_args    | {}    
```    
```    
db1=> select * from pgaudit.audit_table_rewrite ;    
     event     |     tag     | username | datname | client_addr | client_port |          crt_time          | table_rewrite_oid | table_rewrite_reason     
---------------+-------------+----------+---------+-------------+-------------+----------------------------+-------------------+----------------------    
 table_rewrite | ALTER TABLE | test     | db1     |             |             | 2017-09-25 16:05:59.781995 |             33212 |                    2    
(1 row)    
```    
10、 使用listen监听异步消息  
```  
postgres=# listen ddl_event;  
LISTEN  
Asynchronous notification "ddl_event" with payload "CLASS_NSP:pg_catalog, CLASS_NAME:pg_class, OBJ:, CONTENT:{"event":"sql_drop","tag":"DROP TABLE","username":"postgres","datname":"postgres","client_addr":null,"client_port":null,"crt_time":"2018-03-13T15:27:22.792129","classid":"1259","objid":"1596751","objsubid":0,"original":true,"normal":false,"is_temporary":false,"object_type":"table","schema_name":"public","object_name":"a","object_identity":"public.a","address_names":["public","a"],"address_args":[],"xid":372671943}" received from server process with PID 51884.  
Asynchronous notification "ddl_event" with payload "CLASS_NSP:pg_catalog, CLASS_NAME:pg_type, OBJ:, CONTENT:{"event":"sql_drop","tag":"DROP TABLE","username":"postgres","datname":"postgres","client_addr":null,"client_port":null,"crt_time":"2018-03-13T15:27:22.792129","classid":"1247","objid":"1596753","objsubid":0,"original":false,"normal":false,"is_temporary":false,"object_type":"type","schema_name":"public","object_name":"a","object_identity":"public.a","address_names":["public.a"],"address_args":[],"xid":372671943}" received from server process with PID 51884.  
Asynchronous notification "ddl_event" with payload "CLASS_NSP:pg_catalog, CLASS_NAME:pg_type, OBJ:, CONTENT:{"event":"sql_drop","tag":"DROP TABLE","username":"postgres","datname":"postgres","client_addr":null,"client_port":null,"crt_time":"2018-03-13T15:27:22.792129","classid":"1247","objid":"1596752","objsubid":0,"original":false,"normal":false,"is_temporary":false,"object_type":"type","schema_name":"public","object_name":"_a","object_identity":"public.a[]","address_names":["public.a[]"],"address_args":[],"xid":372671943}" received from server process with PID 51884.  
Asynchronous notification "ddl_event" with payload "CLASS_NSP:pg_catalog, CLASS_NAME:pg_class, OBJ:, CONTENT:{"event":"sql_drop","tag":"DROP TABLE","username":"postgres","datname":"postgres","client_addr":null,"client_port":null,"crt_time":"2018-03-13T15:27:22.792129","classid":"1259","objid":"1596754","objsubid":0,"original":false,"normal":false,"is_temporary":false,"object_type":"toast table","schema_name":"pg_toast","object_name":"pg_toast_1596751","object_identity":"pg_toast.pg_toast_1596751","address_names":["pg_toast","pg_toast_1596751"],"address_args":[],"xid":372671943}" received from server process with PID 51884.  
Asynchronous notification "ddl_event" with payload "CLASS_NSP:pg_catalog, CLASS_NAME:pg_class, OBJ:, CONTENT:{"event":"sql_drop","tag":"DROP TABLE","username":"postgres","datname":"postgres","client_addr":null,"client_port":null,"crt_time":"2018-03-13T15:27:22.792129","classid":"1259","objid":"1596756","objsubid":0,"original":false,"normal":false,"is_temporary":false,"object_type":"index","schema_name":"pg_toast","object_name":"pg_toast_1596751_index","object_identity":"pg_toast.pg_toast_1596751_index","address_names":["pg_toast","pg_toast_1596751_index"],"address_args":[],"xid":372671943}" received from server process with PID 51884.  
Asynchronous notification "ddl_event" with payload "CLASS_NSP:pg_catalog, CLASS_NAME:pg_type, OBJ:, CONTENT:{"event":"sql_drop","tag":"DROP TABLE","username":"postgres","datname":"postgres","client_addr":null,"client_port":null,"crt_time":"2018-03-13T15:27:22.792129","classid":"1247","objid":"1596755","objsubid":0,"original":false,"normal":false,"is_temporary":false,"object_type":"type","schema_name":"pg_toast","object_name":"pg_toast_1596751","object_identity":"pg_toast.pg_toast_1596751","address_names":["pg_toast.pg_toast_1596751"],"address_args":[],"xid":372671943}" received from server process with PID 51884.  
```  
## PG 9.4的例子  
```   
create schema pgaudit;  
grant USAGE on schema pgaudit to public;  
create extension hstore SCHEMA pgaudit;    
create table pgaudit.audit_ddl_command_end (   
  event text,    
  tag text,    
  username name default current_user,    
  datname name default current_database(),    
  client_addr inet default inet_client_addr(),    
  client_port int default inet_client_port(),    
  crt_time timestamp default now(),    
  ctx pgaudit.hstore,   
  xid bigint default txid_current()   
);     
create table pgaudit.audit_sql_drop (    
  event text,    
  tag text,    
  username name default current_user,    
  datname name default current_database(),    
  client_addr inet default inet_client_addr(),    
  client_port int default inet_client_port(),    
  crt_time timestamp default now(),    
  classid oid,    
  objid oid,    
  objsubid int,    
  object_type text,    
  schema_name text,    
  object_name text,    
  object_identity text,   
  xid bigint default txid_current()   
);    
grant select,update,delete,insert,truncate on pgaudit.audit_ddl_command_end to public;  
grant select,update,delete,insert,truncate on pgaudit.audit_sql_drop to public;  
create or replace function pgaudit.ef_ddl_command_end() returns event_trigger as $$    
declare    
  rec pgaudit.hstore;    
begin    
  select pgaudit.hstore(pg_stat_activity.*) into rec from pg_stat_activity where pid=pg_backend_pid();    
  insert into pgaudit.audit_ddl_command_end (event, tag, ctx) values (TG_EVENT, TG_TAG, rec);    
end;    
$$ language plpgsql strict;    
create or replace function pgaudit.ef_sql_drop() returns event_trigger as $$    
declare    
begin    
  insert into pgaudit.audit_sql_drop (event, tag, classid, objid, objsubid, object_type, schema_name, object_name, object_identity)    
    select TG_EVENT, TG_TAG, classid, objid, objsubid, object_type, schema_name, object_name, object_identity from     
      pg_event_trigger_dropped_objects();    
   -- exception when others then    
   --   return;    
end;    
$$ language plpgsql strict;    
create event trigger ef_ddl_command_end on ddl_command_end execute procedure pgaudit.ef_ddl_command_end();    
create event trigger ef_sql_drop on sql_drop execute procedure pgaudit.ef_sql_drop();    
```  
## 小结    
1、本文以PG 10为例，介绍了通过事件触发器，审计DDL的功能。（其他版本可能需要略微修改。）    
2、事件触发器的其他应用，例如限制用户执行某些DDL等。    
[《PostgreSQL Oracle 兼容性之 - 事件触发器实现类似Oracle的回收站功能》](../201504/20150429_01.md)      
[《PostgreSQL 事件触发器 - DDL审计 , DDL逻辑复制 , 打造DDL统一管理入》](../201412/20141211_01.md)      
[《PostgreSQL 事件触发器 - PostgreSQL 9.3 Event Trigger》](../201303/20130313_01.md)      
## 参考    
https://www.postgresql.org/docs/9.6/static/functions-event-triggers.html    
https://www.postgresql.org/docs/devel/static/event-triggers.html  
https://www.postgresql.org/docs/devel/static/functions-event-triggers.html  
https://www.postgresql.org/docs/devel/static/plpgsql-trigger.html#PLPGSQL-EVENT-TRIGGER  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")