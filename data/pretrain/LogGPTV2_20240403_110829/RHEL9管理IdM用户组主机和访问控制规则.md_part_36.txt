        ipaprivilege:
          ipaadmin_password: Secret123
          name: Certificate Administrators
          permission:
          - "Request Certificate ignoring CA ACLs"
          action: member
          state: absent
    ```
5.  保存这个文件。
6.  运行指定 playbook 文件和清单文件的 Ansible playbook：
    ``` literallayout
    $ ansible-playbook -v -i inventory privilege-member-absent-copy.yml
    ```
:::
:::
::: section
::: titlepage
# []{#using-ansible-playbooks-to-manage-rbac-privilegesmanaging-users-groups-hosts.html#using-ansible-to-rename-a-custom-idm-rbac-privilege_using-ansible-playbooks-to-manage-rbac-privileges}使用 Ansible 重命名自定义 IdM RBAC 特权 {.title}
:::
作为身份管理系统管理员 (IdM)，您可以自定义 IdM 基于角色的访问控制。
以下流程描述了如何重命名权限，例如，您已从其中删除了一些权限。因此，特权的名称不再准确。在示例中，管理员将
[**full_host_administration**]{.strong} 特权重命名为
[**limited_host_administration**]{.strong}。
::: itemizedlist
**先决条件**
-   您知道 IdM 管理员密码。
-   您已在 Ansible 控制节点上安装了
    [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包。
-   您已创建了一个 [Ansible
    清单文件](#preparing-your-environment-for-managing-idm-using-ansible-playbooks_managing-users-groups-hosts.html "第 22 章 准备您的环境以使用 Ansible playbook 管理 IdM"){.link}，其具有要在其上配置
    IdM 服务器的完全限定域名(FQDN)。
-   您的 Ansible 清单文件位于
    [**\~/[*MyPlaybooks*]{.emphasis}/**]{.strong} 目录中。
-   [**[*full_host_administration*]{.emphasis}**]{.strong}
    特权存在。如需有关如何添加特权的更多信息，请参阅[使用 Ansible
    确保存在自定义 IdM RBAC
    特权](#using-ansible-playbooks-to-manage-rbac-privilegesmanaging-users-groups-hosts.html#using-ansible-to-ensure-a-custom-idm-rbac-privilege-is-present_using-ansible-playbooks-to-manage-rbac-privileges "使用 Ansible 确保存在自定义 IdM RBAC 特权"){.link}。
:::
::: orderedlist
**步骤**
1.  进入 [**\~/[*MyPlaybooks*]{.emphasis}/**]{.strong} 目录：
    ``` literallayout
    $ cd ~/MyPlaybooks/
    ```
2.  生成位于
    `/usr/share/doc/ansible-freeipa/playbooks/privilege/`{.literal}
    目录中的 `privilege-present.yml`{.literal} 文件副本：
    ``` literallayout
    $ cp /usr/share/doc/ansible-freeipa/playbooks/privilege/privilege-present.yml rename-privilege.yml
    ```
3.  打开 `rename-privilege.yml`{.literal} Ansible playbook
    文件以进行编辑。
4.  通过在 `ipaprivilege`{.literal} 任务部分设置以下变量来调整文件：
    ::: itemizedlist
    -   将 `ipaadmin_password`{.literal} 变量设置为 IdM 管理员的密码。
    -   将 `name`{.literal} 变量设置为特权的当前名称。
    -   添加 `rename`{.literal} 变量，并将它设置为特权的新名称。
    -   添加 `state`{.literal} 变量，并将它设置为 `重命名`{.literal}。
    :::
5.  重新命名 playbook 本身，例如：
    ``` literallayout
    ---
    - name: Rename a privilege
      hosts: ipaserver
      become: true
    ```
6.  在 playbook 中重命名任务，例如：
    ``` literallayout
    [...]
    tasks:
    - name: Ensure the full_host_administration privilege is renamed to limited_host_administration
      ipaprivilege:
      [...]
    ```
    这是当前示例修改的 Ansible playbook 文件：
    ``` literallayout
    ---
    - name: Rename a privilege
      hosts: ipaserver
      become: true
      tasks:
      - name: Ensure the full_host_administration privilege is renamed to limited_host_administration
        ipaprivilege:
          ipaadmin_password: Secret123
          name: full_host_administration
          rename: limited_host_administration
          state: renamed
    ```
7.  保存这个文件。
8.  运行指定 playbook 文件和清单文件的 Ansible playbook：
    ``` literallayout
    $ ansible-playbook -v -i inventory rename-privilege.yml
    ```
:::
:::
::: section
::: titlepage
# []{#using-ansible-playbooks-to-manage-rbac-privilegesmanaging-users-groups-hosts.html#using-ansible-to-ensure-an-idm-rbac-privilege-is-absent_using-ansible-playbooks-to-manage-rbac-privileges}使用 Ansible 确保缺少 IdM RBAC 特权 {.title}
:::
作为身份管理系统管理员 (IdM)，您可以自定义 IdM
基于角色的访问控制。以下流程描述了如何使用 Ansible playbook 来确保缺少
RBAC 特权。这个示例描述了如何确保缺少 `CA administrator`{.literal}
特权。因此，`admin`{.literal} 成为在 IdM 中管理证书颁发机构的唯一用户。
::: itemizedlist
**先决条件**
-   您知道 IdM 管理员密码。
-   您已在 Ansible 控制节点上安装了
    [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包。
-   您已创建了一个 [Ansible
    清单文件](#preparing-your-environment-for-managing-idm-using-ansible-playbooks_managing-users-groups-hosts.html "第 22 章 准备您的环境以使用 Ansible playbook 管理 IdM"){.link}，其具有要在其上配置
    IdM 服务器的完全限定域名(FQDN)。
-   您的 Ansible 清单文件位于
    [**\~/[*MyPlaybooks*]{.emphasis}/**]{.strong} 目录中。
:::
::: orderedlist
**步骤**
1.  进入 [**\~/[*MyPlaybooks*]{.emphasis}/**]{.strong} 目录：
    ``` literallayout
    $ cd ~/MyPlaybooks/
    ```
2.  生成位于
    `/usr/share/doc/ansible-freeipa/playbooks/privilege/`{.literal}
    目录中的 `privilege-absent.yml`{.literal} 文件副本：
    ``` literallayout
    $ cp /usr/share/doc/ansible-freeipa/playbooks/privilege/privilege-absent.yml privilege-absent-copy.yml
    ```
3.  打开 `privilege-absent-copy.yml`{.literal} Ansible playbook
    文件以进行编辑。
4.  通过在 `ipaprivilege`{.literal} 任务部分设置以下变量来调整文件：
    ::: itemizedlist
    -   将 `ipaadmin_password`{.literal} 变量设置为 IdM 管理员的密码。
    -   将 `name`{.literal} 变量设置为您要删除的特权的名称。
    -   确保 `state`{.literal} 变量设置为 `absent`{.literal}。
    :::
5.  在 playbook 中重命名任务，例如：
    ``` literallayout
    [...]
    tasks:
    - name: Ensure privilege "CA administrator" is absent
      ipaprivilege:
      [...]
    ```
    这是当前示例修改的 Ansible playbook 文件：
    ``` literallayout
    ---
    - name: Privilege absent example
      hosts: ipaserver
      become: true
      tasks:
      - name: Ensure privilege "CA administrator" is absent
        ipaprivilege:
          ipaadmin_password: Secret123
          name: CA administrator
          state: absent
    ```
6.  保存这个文件。
7.  运行指定 playbook 文件和清单文件的 Ansible playbook：
    ``` literallayout
    $ ansible-playbook -v -i inventory privilege-absent-copy.yml
    ```
:::
:::
::: section
::: titlepage
# []{#using-ansible-playbooks-to-manage-rbac-privilegesmanaging-users-groups-hosts.html#_additional_resources_4}其他资源 {.title}
:::
::: itemizedlist
-   请参阅 [IdM
    中的特权](#using-ansible-playbooks-to-manage-role-based-access-control-in-idm_managing-users-groups-hosts.html#privileges-in-idm_using-ansible-playbooks-to-manage-role-based-access-control-in-idm "IdM 中的特权"){.link}。
-   请参阅 [IdM
    中的权限](#using-ansible-playbooks-to-manage-role-based-access-control-in-idm_managing-users-groups-hosts.html#permissions-in-idm_using-ansible-playbooks-to-manage-role-based-access-control-in-idm "IdM 中的权限"){.link}。
-   请参阅 `/usr/share/doc/ansible-freeipa/`{.literal} 目录中的
    `README-privilege`{.literal} 文件。
-   请参阅
    `/usr/share/doc/ansible-freeipa/playbooks/ipaprivilege`{.literal}
    目录中的 playbook 示例。
:::
:::
:::
[]{#using-ansible-playbooks-to-manage-rbac-permissions-in-idm_managing-users-groups-hosts.html}
::: chapter
::: titlepage
# []{#using-ansible-playbooks-to-manage-rbac-permissions-in-idm_managing-users-groups-hosts.html#using-ansible-playbooks-to-manage-rbac-permissions-in-idm_managing-users-groups-hosts}第 25 章 使用 Ansible playbook 在 IdM 中管理 RBAC 权限 {.title}
:::
基于角色的访问控制 (RBAC)
是一种基于角色、特权和权限定义的策略中立访问控制机制。尤其是在大型公司，使用
RBAC 可以帮助创建具有各个职责领域的管理员分层系统。
本章介绍了使用 Ansible playbook 管理身份管理 (IdM) 中 RBAC
权限时执行的以下操作：
::: itemizedlist
-   [使用 Ansible 确保存在 RBAC
    权限](#using-ansible-playbooks-to-manage-rbac-permissions-in-idm_managing-users-groups-hosts.html#using-ansible-to-ensure-an-rbac-permission-is-present_using-ansible-playbooks-to-manage-rbac-permissions-in-idm "使用 Ansible 确保存在 RBAC 权限"){.link}
-   [使用 Ansible 确保存在带有属性的 RBAC
    权限](#using-ansible-playbooks-to-manage-rbac-permissions-in-idm_managing-users-groups-hosts.html#using-ansible-to-ensure-an-rbac-permission-with-an-attribute-is-present_using-ansible-playbooks-to-manage-rbac-permissions-in-idm "使用 Ansible 确保存在带有属性的 RBAC 权限"){.link}
-   [使用 Ansible 确保缺少 RBAC
    权限](#using-ansible-playbooks-to-manage-rbac-permissions-in-idm_managing-users-groups-hosts.html#using-ansible-to-ensure-an-rbac-permission-is-absent_using-ansible-playbooks-to-manage-rbac-permissions-in-idm "使用 Ansible 确保缺少 RBAC 权限"){.link}
-   [使用 Ansible 确保属性是 IdM RBAC
    权限的成员](#using-ansible-playbooks-to-manage-rbac-permissions-in-idm_managing-users-groups-hosts.html#using-ansible-to-ensure-an-attribute-is-a-member-of-an-idm-rbac-permission_using-ansible-playbooks-to-manage-rbac-permissions-in-idm "使用 Ansible 确保属性是 IdM RBAC 权限的成员"){.link}
-   [使用 Ansible 确保属性不是 IdM RBAC
    权限的成员](#using-ansible-playbooks-to-manage-rbac-permissions-in-idm_managing-users-groups-hosts.html#using-ansible-to-ensure-an-attribute-is-not-a-member-of-an-idm-rbac-permission_using-ansible-playbooks-to-manage-rbac-permissions-in-idm "使用 Ansible 确保属性不是 IdM RBAC 权限的成员"){.link}
-   [使用 Ansible 重命名 IdM RBAC
    权限](#using-ansible-playbooks-to-manage-rbac-permissions-in-idm_managing-users-groups-hosts.html#using-ansible-to-rename-an-idm-rbac-permission_using-ansible-playbooks-to-manage-rbac-permissions-in-idm "使用 Ansible 重命名 IdM RBAC 权限"){.link}
:::
::: itemizedlist
**先决条件**
-   您已了解 [RBAC
    的概念和原则](#using-ansible-playbooks-to-manage-role-based-access-control-in-idm_managing-users-groups-hosts.html "第 23 章 在 IdM 中使用 Ansible playbook 管理基于角色的访问控制"){.link}。
:::
::: section
::: titlepage
# []{#using-ansible-playbooks-to-manage-rbac-permissions-in-idm_managing-users-groups-hosts.html#using-ansible-to-ensure-an-rbac-permission-is-present_using-ansible-playbooks-to-manage-rbac-permissions-in-idm}使用 Ansible 确保存在 RBAC 权限 {.title}
:::
作为身份管理系统管理员 (IdM)，您可以自定义 IdM 基于角色的访问控制
(RBAC)。
以下流程描述了如何使用 Ansible playbook 确保 IdM
中存在权限，以便它可以添加到特权中。这个示例描述了如何确保以下目标状态：
::: itemizedlist
-   `MyPermission`{.literal} 权限存在。
-   `MyPermission`{.literal} 权限只能应用到主机。
-   授予了包含权限的用户可以对条目执行以下所有可能的操作：
    ::: itemizedlist
    -   写
    -   读
    -   搜索
    -   比较
    -   添加
    -   删除
    :::
:::
::: itemizedlist
**先决条件**
-   您知道 IdM 管理员密码。
-   您已在 Ansible 控制节点上安装了
    [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包。
-   示例假定您已
    [创建并配置了](#preparing-your-environment-for-managing-idm-using-ansible-playbooks_managing-users-groups-hosts.html "第 22 章 准备您的环境以使用 Ansible playbook 管理 IdM"){.link}
    [**\~/[*MyPlaybooks*]{.emphasis}/**]{.strong} 目录，来作为存储示例
    playbook 副本的中心位置。
:::
::: orderedlist
**步骤**
1.  进入 [**\~/[*MyPlaybooks*]{.emphasis}/**]{.strong} 目录：
    ``` literallayout
    $ cd ~/MyPlaybooks/
    ```
2.  制作位于
    `/usr/share/doc/ansible-freeipa/playbooks/permission/`{.literal}
    目录中的 `permission-present.yml`{.literal} 文件的副本：
    ``` literallayout
    $ cp /usr/share/doc/ansible-freeipa/playbooks/permission/permission-present.yml permission-present-copy.yml
    ```
3.  打开 `permission-present-copy.yml`{.literal} Ansible playbook
    文件进行编辑。
4.  通过在 `ipapermission`{.literal} 任务部分中设置以下变量来调整文件：
    ::: itemizedlist
    -   调整任务的 `name`{.literal}，使其与您的用例对应。
    -   将 `ipaadmin_password`{.literal} 变量设置为 IdM 管理员的密码。
    -   将 `name`{.literal} 变量设置为权限的名称。
    -   将 `object_type`{.literal} 变量设置为 `host`{.literal}。
    -   将 `right`{.literal} 变量设置为 `all`{.literal}。
    :::
    这是当前示例修改的 Ansible playbook 文件：
    ``` literallayout
    ---