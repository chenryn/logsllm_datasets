### Experiment Findings

As Alice's signal gets even closer, it completely overwhelms Bob’s signal, making it impossible to decode Bob’s packet. This experiment reveals the following insights:

- **At Low SINRs:** ZigZag significantly outperforms 802.11 and is comparable to a Collision-Free Scheduler. It delivers the same throughput as if the colliding packets were scheduled in separate time slots.
- **At High SINRs:** ZigZag can outperform both 802.11 and the Collision-Free Scheduler. This is because neither 802.11 nor the Collision-Free Scheduler can benefit from scenarios where the network capacity exceeds the sum of the rates of the two senders. In contrast, ZigZag can exploit such scenarios to double the throughput of the network by decoding both hidden terminals using a single collision. Additionally, ZigZag does not need explicit information about the network capacity; it naturally transitions to exploit increased capacity as the SNR increases.

### Figures and Results

**Figure 16: Normalized Throughput for the Whole Testbed**
- The figure shows a CDF of the throughputs in our testbed for pairs of competing flows, for both hidden and non-hidden terminal scenarios. ZigZag improves the average throughput in our testbed by 25.2%.

**Figure 18: Scatter Plot of Flow Throughputs**
- The figure shows a scatter plot of ZigZag and 802.11 throughputs for each sampled sender-receiver pair. ZigZag enhances performance when there are hidden terminals and never degrades it.

**Figure 17: Loss Rate for the Whole Testbed**
- The figure shows a CDF of the packet loss rate in our testbed for pairs of competing flows, for both hidden and non-hidden terminal scenarios. ZigZag reduces the average loss rate in our testbed from 15.8% to 0.2%.

**Figure 19: CDF of Loss Rate at Hidden Terminals**
- The figure focuses on scenarios with full or partial hidden terminals. ZigZag reduces the average loss rate for hidden terminals in our testbed from 72.6% to about 0.7%.

### Impact of SNR

The standard performance metric for a receiver is the Bit Error Rate (BER) as a function of the Signal-to-Noise Ratio (SNR). The ultimate test for a design that resolves collisions is whether it can match the uncoded BER of a collision-free reception at every SNR and for every modulation scheme.

To evaluate performance under various SNRs and modulation schemes, we consider a scenario where Alice and Bob cannot sense each other and hence transmit simultaneously to the Access Point (AP). Alice and Bob remain at a fixed and equal distance from the AP, and their transmission powers are controlled to ensure they have the same SNR. We plot the BER as a function of the SNR. Our GNURadio prototype uses BPSK, and we use simulations to check performance with other modulation schemes (e.g., 4-QAM, 16-QAM). The simulations are based on an Additive White Gaussian Noise (AWGN) channel. Other parameters, such as packet size and frequency offset, are set to their values in the testbed.

**Figures 15a and 15b: BER as a Function of SNR**
- For all modulation schemes, ZigZag and the Collision-Free Scheduler achieve the same BER for comparable SNRs, with required SNRs within 1 dB of each other.
- At BPSK and 4-QAM, ZigZag has a slightly better BER than if the two packets were received collision-free. This is because, in ZigZag, every bit is received twice, once in every collision, improving its chances of being correctly decoded. This impact is countered by error propagation, which becomes more significant in denser modulations like 16-QAM.

### Testbed Throughput and Loss Rate

In this section, we use the testbed in Figure 12 to investigate how ZigZag affects various sender-receiver pairs. The testbed includes 14 nodes forming a variety of line-of-sight and non-line-of-sight topologies. We randomly select two senders and an AP reachable by both senders, mimicking CSMA as explained in §10.1. Each sender transmits 100 packets to the AP. We repeat the experiment with different sets of sender pairs and APs. Among the sender pairs, 10% are perfect hidden terminals, 10% can sense each other partially, and 80% can sense each other perfectly.

**Figure 16: CDF of Aggregate Throughput**
- The figure shows that in our testbed, ZigZag increases the average throughput by 25.2%. This improvement comes from ZigZag’s ability to resolve successive collisions and, in some cases, to resolve a single collision whenever possible.

**Figure 17: CDF of Loss Rates**
- The figure plots a CDF of the loss rates of individual sender-receiver pairs. Traditional interference cancellation applies only to cases with throughputs between 1.5 and 2, which are very few.

**Figure 18: Scatter Plot of Throughput**
- The figure shows that ZigZag consistently improves the throughput and does not hurt any sender-receiver pair.

**Figure 19: CDF of Loss Rate at Hidden Terminals**
- The figure focuses on hidden terminal scenarios, showing that ZigZag reduces the average loss rate for hidden terminals in our testbed from 72.6% to 0.7%.

### Many Hidden Terminals

In §8, we generalized ZigZag to handle multiple colliding sources. Here, we evaluate ZigZag's performance with three hidden terminals transmitting concurrently to a random AP.

**Figure 20: CDF of Throughput with Three Hidden Terminals**
- The figure shows that all three senders see a fair throughput, approximately one-third of the medium throughput. Thus, even with more than a pair of colliding senders, ZigZag performs almost as if each of the colliding senders transmitted in a separate time slot.

### Conclusion

This paper introduces ZigZag, a receiver that can decode collisions. Our core contribution is a new form of interference cancellation that iteratively decodes strategically picked chunks, exploiting asynchrony across successive collisions. We demonstrate via a prototype implementation and testbed evaluation that ZigZag addresses the hidden terminal problem in WLANs, improving throughput and loss rate.

We identify two research issues for further exploration:
1. **Forward Error Correction (FEC):** Our prototype works with pre-coded bits. Most wireless systems use FEC, and jointly decoding collisions and FEC could provide better performance.
2. **Automatic Gain Control (AGC):** Collision signals have more power and a wider dynamic range than individual transmissions. It is important to study AGC design in systems that decode collisions.

We believe ZigZag has broader implications for wireless design, motivating a more aggressive MAC that exploits concurrent transmissions to increase spatial reuse and network throughput. ZigZag can also decode Analog Network Coding (ANC) packets, presenting a modulation-independent decoder for ANC. Combining ZigZag with ANC ideas could improve concurrency, address hidden terminals, and collect network coding gains.

### Acknowledgments

We thank Szymon Chachulski, Mythili Vutukuru, Chris Ng, Hari Balakrishnan, Arthur Berger, and Ashish Khisti for their insightful comments. This work is supported by DARPA ITMANET. The opinions and findings in this paper are those of the authors and do not necessarily reflect the views of DARPA.

### References

[References listed as provided in the original text]