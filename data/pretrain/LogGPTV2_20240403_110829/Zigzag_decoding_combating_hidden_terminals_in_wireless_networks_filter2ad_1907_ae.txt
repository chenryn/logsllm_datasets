gets even closer, her signal completely covers Bob’s signal making it
impossible to decode Bob’s packet.
Thus, this experiment reveals the following:
• At low SINRs, ZigZag signiﬁcantly outperforms 802.11 and is
similar to a Collision-Free Scheduler, i.e., it delivers the same
throughput as if the colliding packets were scheduled in separate
time slots.
• At high SINR, ZigZag can outperform both 802.11 and the
Collision-Free Scheduler. This is because neither 802.11 nor the
Collision-Free Scheduler can beneﬁt from scenarios where the
network capacity is higher than the sum of the rates of the two
senders. In contrast, ZigZag can exploit such scenarios to double
the throughput of the network, decoding both hidden terminals
using a single collision. Furthermore, ZigZag does not need to be
explicitly informed of the capacity of the network to exploit it. It
naturally transitions to exploit the increased capacity as the SNR
increases.
ZigZag
802.11
n
o
i
t
c
a
r
F
e
v
i
t
l
a
u
m
u
C
 1
 0.8
 0.6
 0.4
 0.2
 0
 0
 0.5
 1
 1.5
 2
Throughput
g
a
Z
g
Z
i
 1
 0.8
 0.6
 0.4
 0.2
 0
 0
Maximum density
Maximum density
 0.2
 0.4
 0.6
 0.8
 1
802.11
Figure 16: Normalized Throughput for the Whole Testbed. The ﬁgure
shows a CDF of the throughputs in our testbed for pairs of competing
ﬂows, for both hidden and non-hidden terminal scenarios. ZigZag im-
proves the average throughout in our testbed by 25.2%.
Figure 18: Scatter Plot of Flow Throughputs. The ﬁgure shows a
scatter plot of ZigZag and 802.11 throughputs for each sampled sender-
receiver pairs. ZigZag helps when there are hidden terminals and never
hurts.
n
o
i
t
c
a
r
F
e
v
i
t
l
a
u
m
u
C
 1
 0.8
 0.6
 0.4
 0.2
 0
 0
 0.2
 0.4
 0.6
Loss Rate
ZigZag
802.11
 0.8
 1
Figure 17: Loss Rate for the Whole Testbed. The ﬁgure shows a CDF
of the packet loss rate in our testbed for pairs of competing ﬂows, for
both hidden and non-hidden terminal scenarios. ZigZag improves the
average loss rate in our testbed from 15.8% to 0.2%.
10.4 The Impact of the SNR
The standard performance metric for a receiver is the BER as a
function of the SNR [28, 3, 29], and the ultimate test for a design
that resolves collisions is whether it can match the uncoded BER of
a collision-free reception at every SNR, and for every modulation
scheme.
To test performance under various SNRs and modulation schemes,
we consider the scenario where Alice and Bob cannot sense each
other and hence transmit simultaneously to the AP. In contrast
to §10.3 however, Alice and Bob stay at a ﬁxed and equal distance
from the AP. We control their transmission powers to ensure that they
have the same SNR, and plot the BER as a function of the SNR. Our
GNURadio prototype employs BPSK but to check performance with
other modulation schemes (e.g., 4-QAM, 16-QAM), we use simula-
tions. The simulations are based on an additive white Gaussian noise
(AWGN) channel [29]. Other parameters (e.g., the packet size and
frequency offset) are set to their values in the testbed.
Figs. 15a and 15b plot the BER as a function of the SNR, both
in the testbed and in simulations.7 The plots are only for ZigZag
and the Collision-Free Scheduler because, in this scenario, 802.11
performed extremely poorly with BER close to 50%. The ﬁgures
show:
• For all modulation schemes, ZigZag and the Collision-Free Sched-
uler achieve the same BER for comparable SNRs, i.e., the required
SNRs are within 1 dB of each other.
• At BPSK and 4-QAM, ZigZag has a slightly better BER than
if the two packets were received collision-free. This is because,
in ZigZag, every bit is received twice, once in every collision,
improving its chances of being correctly decoded. This impact is
countered by error propagation (see §6). Since errors propagate
7As expected BPSK in the testbed works at slightly higher SNR than in simulations
because of hardware and software imperfections.
n
o
i
t
c
a
r
F
e
v
i
t
l
a
u
m
u
C
 1
 0.8
 0.6
 0.4
 0.2
 0
 0
ZigZag
802.11
 0.2
 0.4
 0.6
 0.8
 1
Loss Rate
Figure 19: CDF of Loss Rate at Hidden Terminals. The ﬁgure zooms
on scenarios with full or partial hidden terminals. ZigZag reduces the
average loss rate for hidden terminals in our testbed from 72.6% to
about 0.7%.
further in denser modulations, ZigZag’s performance is slightly
worse at 16-QAM.
10.5 Testbed Throughput and Loss Rate
In this section, we use the testbed in Fig. 12 as a case study to
investigate how ZigZag affects various sender-receiver pairs. The
testbed has 14 nodes that form a variety of line-of-sight and non-
line-of-sight topologies. While up to now we have focused only
on scenarios with hidden terminals, in this section, we experiment
with various testbed nodes irrespective of whether they are hidden
terminals. Speciﬁcally, we pick two senders randomly. We pick an
AP randomly from the nodes reachable by both senders. We mimic
CSMA as explained in §10.1 and make each sender transmit 100
packets to the AP. We repeat the experiment with random set of
sender pairs and different choice of APs. Among the sender pairs
that we sampled 10% are perfect hidden terminals, 10% can sense
each other partially, and 80% can sense each other perfectly.
First, we compare the throughput and loss rate under current 802.11
and ZigZag, for the whole network. Fig. 16 plots a CDF of the aggre-
gate throughput, i.e., the sum of the throughput of each pair of concur-
rent senders. The ﬁgure shows that in our testbed, ZigZag increases
the average throughput by 25.2%. This improvement arises from two
factors. For all cases where the normalized aggregate throughput is
less than 1, the improvement comes purely from ZigZag’ s ability to
resolve successive collisions. For cases where the aggregate through-
put is higher than 1, the improvement is caused by a combination
of being able to resolve a single collision whenever possible, and
successive collisions otherwise. Note that traditional interference
cancellation applies only to cases whose throughputs are between 1.5
and 2, which are very few. Fig. 17 plots a CDF of the loss rates of
individual sender-receiver pairs, i.e., the ﬂows we experimented with.
n
o
i
t
c
a
r
F
e
v
i
t
l
a
u
m
u
C
 1
 0.8
 0.6
 0.4
 0.2
 0
 0
Alice
Bob
Calvin
 0.05
 0.1
 0.15
 0.2
 0.25
 0.3
 0.35
 0.4
Throughput
Figure 20: ZigZag’s Performance with Three Hidden Terminals. Cu-
mulative distribution of the throughput of three hidden terminals.
The ﬁgure shows that in our testbed, ZigZag reduces the average
packet loss rate from 15.8% to 0.2%.
Next, we check that a ZigZag AP is always a conservative choice
and does not hurt any ﬂow. Fig. 18 shows a scatter plot of the
throughout of every sender-receiver pair in our experiments, both
under 802.11 and ZigZag. The ﬁgure shows that ZigZag consistently
improves the throughput and does not hurt any sender-receiver pair.
Next, we zoom on the hidden terminals in our testbed, which we
deﬁne as sender pairs that fail to sense each other fully or partially.
Fig. 19 shows a CDF of the packet loss rate in transfers that suffered
such hidden terminal scenarios. The ﬁgure shows that ZigZag im-
proves the average loss rate for hidden terminals in our testbed from
72.6% to 0.7%. Furthermore, for some severe cases, the packet loss
rate goes down from 99-100% to about zero.
10.6 Many Hidden Terminals
In §8 we generalized ZigZag to deal with many colliding sources.
Here, we evaluate how ZigZag performs on three collisions. In this
experiment, we have three hidden terminals that transmit concurrently
to a random AP. Fig. 20 shows the CDF of the throughput under
ZigZag. The ﬁgure shows that all three senders see a fair throughput
that is about one third of the medium throughput. Thus, even with
more than a pair of colliding senders, ZigZag performs almost as if
each of the colliding senders transmitted in a separate time slot.
11 Conclusion
This paper presents ZigZag, a receiver that can decode collisions. Our
core contribution is a new form of interference cancellation that iter-
atively decodes strategically picked chunks, exploiting asynchrony
across successive collisions. We show via a prototype implementa-
tion and testbed evaluation that ZigZag addresses the hidden terminal
problem in WLANs, improving the throughput and loss rate.
We identify two research issues worth of further exploration. First,
our prototype works with pre-coded bits. Most wireless systems
however use some form of forward error correction (FEC). We en-
vision that jointly decoding collisions and the FEC in the packets
could provide better performance. Second, collision signals have
more power and a wider dynamic range than individual transmissions.
Wireless hardware typically employs automatic gain control (AGC)
to adjust the dynamic range. It is important to study the AGC design
in systems that decode collisions.
We believe ZigZag has wider implications for wireless design than
explored in this paper. It motivates a more aggressive MAC that ex-
ploits concurrent transmissions in order to increase spatial reuse and
network throughput. Further, ZigZag can decode ANC packets [20],
presenting a modulation-independent decoder for analog network
coding. It seems plausible that one may combine ZigZag with the
ideas in the ANC paper into one system that improves concurrency,
addresses hidden terminals, and collects network coding gains.
Acknowledgments: We thank Szymon Chachulski, Mythili Vu-
tukuru, Chris Ng, Hari Balakrishnan, Arthur Berger, and Ashish
Khisti for their insightful comments. This work is supported by
DARPA ITMANET. The opinions and ﬁndings in this paper are those
of the authors and do not necessarily reﬂect the views of DARPA.
References
[1] Broadcom Wireless LAN Adapter User Guide.
[2] Reference Manual for the NETGEAR ProSafe 802.11g Wireless AP WG102.
[3]
ISL3873: Wireless LAN Integrated Medium Access Controller with Baseband Processor, 2000.
[4] J. Andrews. Interference cancellation for cellular systems: A contemporary overview. IEEE
Wireless Communications, 2005.
[5] V. Bharghavan, A. J. Demers, S. Shenker, and L. Zhang. MACAW: A Media Access Protocol
for Wireless LAN’s. In ACM SIGCOMM 1994.
[6] D. G. Brennan. On the Maximal Signal-to-Noise Ratio Realizable from Several Noisy Signals.
Proc. IRE, 43:1530, October 1955.
[7] P. Castoldi. Multiuser Detection in CDMA Mobile Terminals. Artech house Publishers, 2002.
[8] Y.-C. Cheng, J. Bellardo, P. Benk, A. C. Snoeren, G. M. Voelker, and S. Savage. Jigsaw: solving
the puzzle of enterprise 802.11 analysis. In SIGCOMM, 2006.
[9] G. FSF. GNU Radio - GNU FSF Project.
[10] C. L. Fullmer and J. J. Garcia-Luna-Aceves. Solutions to Hidden Terminal Problems in Wireless
Networks. In SIGCOMM, pages 39–49, 1997.
[11] R. G. Gallager. A Perspective on Multiaccess Channels.
IEEE Transactions on Information
Theory, IT-31(2), march 1985.
[12] S. Gollakota and D. Katabi. Zigzag decoding: Combating hidden terminals in wireless networks.
Technical Report MIT-CSAIL-TR-2008-018, MIT, 2008.
[13] R. Gummadi, D. Wetherall, B. Greenstein, and S. Seshan. Understanding and Mitigating the
Impact of RF Interference on 802.11 Networks. In SIGCOMM, 2007.
[14] D. Halperin, J. Ammer, T. Anderson, and D. Wetherall. Interference Cancellation: Better Re-
ceivers for a New Wireless MAC. In Hotnets, 2007.
[15] D. Halperin, T. Anderson, and D. Wetherall. Practical interference cancellation for wireless lans.
In Proc. of ACM MOBICOM 2008.
[16] J. Hou, J. Smee, H. D. Pﬁster, and S. Tomasin.
Implementing Interference Cancellation to
Increase the EV-DO Rev A Reverse Link Capacity. IEEE Communication Magazine, February
2006.
[17] E. Inc. Universal software radio peripheral. http://ettus.com.
[18] G. Judd and P. Steenkiste. Using Emulation to Understand and Improve Wireless Networks and
Applications. In NSDI, 2005.
[19] P. Karn. MACA–A New Channel Access Method for packet Radio. 9th Computer Networking
Conf., 1990.
[20] S. Katti, S. Gollakota, and D. Katabi. Embracing Wireless Interference: Analog Network Cod-
ing. In ACM SIGCOMM, 2007.
[21] S. Khurana, A. Kahol, and A. P. Jayasumana. Effect of Hidden Terminals on the Performance
of IEEE 802.11 MAC Protocol, 1998.
[22] E. A. Lee and D. G. Messerschmitt. Digital Communications. Boston: Kluwer Academic, 1988.
[23] J. Lee, W. Kim, S.-J. Lee, D. Jo, J. Ryu, T. Kwon, and Y. Choi. An Experimental Study on the
Capture Effect in 802.11a Networks, 2007.
[24] H. Meyr, M. Moeneclaey, and S. A. Fechtel. Digital Communication Receivers: Synchroniza-
tion, Channel Estimation, and Signal Processing. John Wiley & Sons, 1998.
[25] A. Muqattash and M. Krunz. CDMA-Based MAC Protocol for Wireless Ad Hoc Networks. In
ACM MOBIHOC, 2003.
[26] P. C. Ng, S. C. Liew, K. C. Sha, and W. T. To. Experimental Study of Hidden node Problem in
IEEE 802.11 Wireless Networks. In Sigcomm Poster, 2005.
[27] C. Reis, R. Mahajan, M. Rodrig, D. Wetherall, and J. Zahorjan. Measurement-Based Models of
Delivery and Interference. In SIGCOMM, 2006.
[28] J. K. Tan. An Adaptive Orthogonal Frequency Division Multiplexing Baseband Modem for
Wideband Wireless Channels. Master’s thesis, MIT, 2006.
[29] D. Tse and P. Vishwanath. Fundamentals of Wireless Communications. Cambridge University
Press, 2005.
[30] D. Tse, P. Viswanath, and L. Zheng. Diversity-Multiplexing Tradeoff in Multiple Access Chan-
nels. IEEE Transaction on Information Theory, 2004.
[31] S. Verdu. Multiuser Detection. Cambridge University Press, 1998.
[32] A. J. Viterbi. Very Low Rate Convolutional Codes for Maximum Theoretical Performance of
Spread-Spectrum Multiple-Access Channels. IEEE JSAC, May 1990.
[33] C. Ware, J. Judge, J. Chicharo, and E. Dutkiewicz. Unfairness and capture behaviour in 802.11
adhoc networks. volume 1, pages 159–163 vol.1, 2000.
[34]
I. . WG. Wireless lan medium access control (mac) and physical layer (phy) speciﬁcations.
Standard Speciﬁcation,IEEE, 1999.
[35] G. Woo, P. Kheradpour, and D. Katabi. Beyond the Bits: Cooperative Packet Recovery Using
PHY Information. In ACM MobiCom, 2007.
[36] K. Xu, M. Gerla, , and S. Bae. Effectiveness of RTS/CTS Handshake in IEEE 802.11 Based Ad
Hoc Networks. In Ad Hoc Network Journal, 2003.
[37] J. Zhu, X. Guo, S. Roy, and K. Papagiannaki. CSMA Self-Adaptation based on Interference
Differentiation. In IEEE Globecom, 2007.