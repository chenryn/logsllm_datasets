9
Miranda
3
10
Miranda
4
请注意woman_id与
请试着自己画出表，但这一次把woman_id当成外
shoe_name列的重复。
键放入shoes表。
画完表后，还要试着画出两张表之间的连接。
OPaoys
shoe_name
p!uowo
woman_id
woman
1
Manolo Strappies
3
1
Carrie
2
2
Samantha
3
Old Navy Flops
1
3
Charlotte
4
Prada boots
1
4
Miranda
5
Crocs Clogs
3
6
OldNavyFlops
7
Prada boots
3
8
Manolo Strappies
A
9
OldNavyFlops
4
10
Prada boots
4
314
第7章
---
## Page 347
多张表的数据库设计
数据模式：我们需要junctiontable
如刚才所见，不管在哪个表中添加外键，都会造成表中出现重复
的数据。请注意女士们的姓名重复出现的情况。我们应该只会看
到一次姓名才对。
此时，在两个多对多的表之间需要一个中间桥梁来存储所有
woman_id与shoe_id，从而把关系简化为一对多。这个中间桥
梁就是所谓的junction table（连接表），用它来存储两个相关表
的主键。
直接连接这两张表的话，最后都会
因为它们的多对多本质而产生重
复的数据。
woman_ido-
woman
shoe_idOw
shoe_name
1
Carrie
1
ManoloStrappies
2
Samantha
many-to-many
2
Crocs Clogs
3
Charlotte
E
OldNavyFlops
4
Miranda
4
Prada boots
取用这里的主键
个
……及这里的主键·
.然后把两组主键放在
junction table中。
one-to-many
one-to-many
woman_id
shoe_id
1
3
1
4
Junction table 存储两
2
1
个要户生关联性的表
3
1
多对多：用junction
的主键。
3
2
3
3
table存储原始表的主
然后我们需要把两张原
3
4
始表的主键列与junction
1
键。
table 的相应列产生连接。
4
3
4
4
当前位置
315
---
## Page 348
再谈多对多关系
数据模式：多对多
现在你知道了多对多关系的秘密一它通常由两个一对多关系并利用junc-
tiontable在中间连接而构成。在my_contacts表中，每一个人有多项兴
趣，但每一项兴趣可能属于许多人，所以这种关系属于多对多的模式。
使用这种模式（schema），interests列也能转换为多对多关系。因为每
个人有好几项兴趣，而每项兴趣则可能由许多人共享：
my_contacts与interests表彼此间具有多对多关系
my_contacts
contact_interest
interests
contact_ido
contact_id
interest_ido
last_name
interest_id
interest
first_name
phone
email
one-to-many
gender
one-to-many
birthday
profession
city
state
没有盘问题
status
没有问题
seeking
没有蠢问题
问：
有contact_id与interest_name列的
据的完整性。如果必须删除某个存储
遇到多对多关系的时候，
表中。的确，数据有重复，但真的会
在my_contacts表中的联络人时，
定要创建中间表吗？
有什么问题吗？
连接让我们不需分心注惠interests
答：当你使用下一章的联接
表，只需管理contact_interest
表具有多对多关系，结果只会造成重
(join）查询多张表时就会体验到优点
表。若没有分开的表，你极有可能意外
复组，违反了第一范式。（过几页就
了。但是根据使用数据的方式，重复
移除错误的记录。这种方式比较安全。
会再次提到规范化。）
数据也可能有用处，像遇到重点在于
还有，在更新数据时，没有重复的数
违反第一范式真的没什么好处，而且
多对多关系的表，而不是两张表中的
据能让工作更顺利。假设我们不小心
有太多不该违反的正当理由。最重要
数据的时候。
拼错了某个冷门兴趣名，例如拼错
的一个原因就是重复的数据只会造成
问：
了“spelunking”（洞穴探险）。当你
如果我就是不在意数据重
查询困难。
修正它时，只要修改interests表中
复呢？
的一行记录，而不需修改contact
答：
Junction table 有助于保持数
优点？我可以把所有兴趣放在一个只
interest或my_contacts表。
316
第7章
---
## Page 349
给关系命名
多张表的数据库设计
从下列表的简述中，判断圈起来的列是否最适合以一对多或多对多的关系来表示。
（请记住，在一对多或多对多的情况下，这些数据列会被抽离表，另外以ID字段来产
生连接。）
数据列
关系
doughnut_rating
doughnut_type
rating
clown_tracking
clown_id0
activities
date
my_contacts
contact_ido-
stafe
interests
books
bookido
authors
publisher
fish_records
record_ido
fish_species
stafe
当前位置
317
---
## Page 350
给关系命名解答
给关系命名
从下列表的简述中，判断圈起来的列是否最适合以一对多或多对多的关系来表示。
（请记住，在一对多或多对多的情况下，这些数据列会被抽离表，另外以ID字
段来产生连接。）
数据列
关系
doughnut_rating
doughnut_+ype
一对多
rating
clown_tracking
clown_ido
activities
多对多
date
my_contacts
contact_idO
一对多
state
interests
多对多
这一项要想一下.因为一本书的作者可能
books
多于一位，所以是多对多。
bookido
多对多
authors
publisher
对多
fish_records
record_ido
一对多
fish_species
state
一对多
318
---
## Page 351
多张表的数据库设计
数据模式：修正篇
我知递你接下来要做什么。
定是修改gregs_list数据库和my_eon-
tacts表，把它们改成多张表的形式，
对不对？
差不多。在了解何为数据模式后，我们差
不多可以重新设计gregs_list了。
我们现在已经知道兴趣列可以自己独立，并且与主
要表形成一对多的关系。seeking列也需要以相同方
式修改。这些改变都会让表符合第一范式*。
但我们不能只停留在第一范式，还要进一步的规
范化。数据越规范，以查询取得数据也就越容易，
对下一章会谈到的联接（join）也越有帮助。为
gregs_1ist数据库创建新的模式（schema）前，
我们先一起了解规范化的更多级别。
my_contacts
contact_idO
last_name
first_name
phone
email
gender
birthday
各位或许正打算翻回前几章温习第一范式。不常
profession
要，下一页就金再次提到它。
city
state
status
interests
seeking
当前位置》
319
---
## Page 352
让你的表符合1NF
尚非第一范式
我们讨论过第一范式（INF），这里先复习一遍，然后向
前推动更多规范化，进人第二范式甚至第三范式。
回到正题。让我们先回忆一下，一个满足INF的表应该具
备哪些条件。
第一范式，或INF：
规则一：数据列只包含具有原子性的值
规则二：没有重复的数据组
下列表都不满足INF。请注意，右侧的表已添加了额外的
颜色列了，但颜色还是会在表中重复出现：
非1NF
仍非1NF
toy_id
toy
colors
toy_id
toy
colorl
color2
color3
5
whiffleball
white,yellow,blue
5
whiffleball
white
yellow
blue
6
frisbee
green,yellow
6
frisbee
green
yellow
9
kite
red,blue,green
9
kite
red
blue
green
12
yoyo
white,yellow
12
yoyo
white
yellow
想让数据有原子性，colors
列就只能包含其中一个颜
这个表还是不符合INF的要
色，而不是在一列中记录
求，因为各个颜色列都存储
两三个值。
了相同分类中的数据—都
是VARCHAR类型的玩具颜色
描述。
320
第7章
---
## Page 353
多张表的数据库设计
终于符合INF
观察一下我们做的改变。
In 1NF
外键。
主键。
toy_id
toy
toy_id
color
了
5
whiffleball
5
white
6
frisbee
5
yellow
现在，列内不再有重复的
kite
9
5
blue
内容。每一行都是一条额
12
yoyo
6
green
色记录，而每一行都是唯
6
yellow
一的。
6
red
现在我们终于知道这些表会
9
blue
9
通过外键进行连接，我们不用
green
12
white
帮每条记录画出连接线。
12
yellow
二起使用toy_id与color值
就能形成唯一的主键。
如果我们把toy_ia作为外键加人另一张表中，那么
因为另一张表不需要外键列具有唯一性，所以没有问
题。但如果一起考虑颜色值，那么所有行都会具有唯
一性，因为每个颜色值加上toy_ia后就会形成独一无
二的组合。
什么？多个主键列？主键
不是应该只有一列吗？
并非如此。由两列以上组
成的键称为组合键。
接下来会以更多表为例，说明多
个主键列如何运作。
当前位置
321
---
## Page 354
组合键
组合键使用了多个列
到目前为止，我们讨论到表中的数据可以形成对其他表的关系（例
如一对一、一对多）。但我们还未想过，表中的数据列本身对其他
列也有关系。了解这层关系，就是了解第二范式与第三范式的关键。
下一章讨论到联接时.大
可使查询多张表的任务较为轻松简单。
家一定会希望有设计家好
的表。
讲了这么多，组合键（compositekey）到底是什么？
组合键就是由多个数据列
构成的主键，组合各列后
形成具有唯一性的键
请看下面的超级英雄列表。它缺少独一无二的可作为主键的
列，但我们可以利用name与power列创建一个组合主键。虽
然有些超级英雄用了相同的名称，有些英雄具有相同的能力，
但综合考量名称与能力，则形成了具有唯一性的键。
创建如下的表并指定这两列为组合主键。但前
题是没有重夏的name与power组合，这样才能满
足唯一性。
super_heroes
name
power
weakness
Super Trashman
Cleansquickly
bleach
The Broker
Makesmoney from nothing
NULL
火人，大际人
SuperGuy
Flies
birds
千变万化他都能
WonderWaiter
Never forgets an order
insects
Dirtman
Creates dust storms
bleach
我只需要NO.2
Super Guy
Super strength
the other Super Guy
命分火显大能
Furious Woman
Getsreallyreallyangry
NULL
画出你的大染人
Tongue of justice
insects
Librarian
Can find anything
NULL
Goose Girl
Flies
NULL
Stick Man
Stands in for humans
games of Hangman
322
第7章
---