Func. Ind. (MB) Func. Dep. Online
(KB)
#1
6.3
4.8
6.2
3.7
9.7
10.4
10.3
7.5
(MB)
1.0
0.66
1.9
1.5
3.6
2.8
7.2
5.7
Table 5: Comparison of communication cost between our MPC protocol and the best known protocol for secure
AES evaluation. All numbers are the maximum amount of data sent by any one party per execution. The columns
for “#1” and “#1024” denote the communication cost over a single execution and the amortized cost over 1024
executions respectively.
#Parties
Protocol
Func. Ind. (MB) Func. Dep. (MB) Online (MB)
n = 3
n = 5
WRK [WRK17b]
Ours
WRK [WRK17b]
Ours
1352.2
942.2
3056.6
1884.3
311.4
202.6
580.9
472.1
101.5
100.9
169.1
168.0
Table 6: Communication cost of our and prior best protocols for computing Hamming distance.
1.27× improvement for ﬁve-party case in the function-dependent phase. In terms of the communication cost
of function-independent phase, our protocol leads to a 1.3× improvement with a single execution and 1.26×
improvement with 1024 executions. While reducing the communication in both preprocessing phases, we
do not increase the communication cost in the online phase. In terms of the total communication from three
phases, our protocol results in about 1.3× improvement for both a single execution and 1024 executions.
Comparison of communication cost based on other circuits.
In Table 6 and Table 7 shown in the
Appendix, we also compare our protocol with the state-of-the-art protocol [WRK17b] for circuits of other
shapes, including hamming distance and sorting. As described in [WRK17a], these two circuits provide the
following functionalities:
– Hamming distance. In the multi-party setting, every party inputs an XOR-share of two bit-strings of
23
#Parties
Protocol
Func. Ind. (MB) Func. Dep. (MB) Online (MB)
n = 3
n = 5
WRK [WRK17b]
Ours
WRK [WRK17b]
Ours
5319.7
4269.8
10661.5
8539.5
1518.1
987.8
2831.8
2301.5
6.4
6.3
10.6
10.5
Table 7: Communication cost of our and prior best protocols for secure sorting evaluation.
Applications
Bolt [GM17]
DECO [ZMM+20]
25 Mbps
50 Mbps
200 Mbps
1 Gbps
611
49
305
24
75
6
15
1.2
Table 8: Performance of our protocol used in other applications under different network bandwidthes. All
numbers are in seconds (s).
length 1048576 bits. The circuit ﬁrst XORs the shares to recover the underlying two bit-strings, and then
output a 22-bit number containing the hamming distance of the two strings. The circuit includes 2097K
AND gates.
– Sorting. Each party inputs an XOR-share of 4096 32-bit numbers. The circuit ﬁrst XORs them to recover
the numbers, and then sorts the numbers. The sorting circuit has 10223K AND gates.
Here, we only compare the communication cost of a single execution, as the circuits are large enough to take
advantage of amortization within the circuit. In the function-independent phase of secure Hamming distance
evaluation, our optimizations result in 1.44× and 1.62× improvements for three-party and ﬁve-party cases
respectively. For sorting circuit, our protocol gives a 1.25× improvement in the function-independent phase.
In the function-dependent phase, our protocol gets a 1.54× improvement in the communication for three-
party case, and a 1.23× improvement for ﬁve-party case. In particular, compared to WRK, our protocol
reduces the total communication by more than 500 MB when n = 3 (1 GB for n = 5) for secure Hamming
distance evaluation and 1.5 GB when n = 3 (2.5 GB for n = 5) for sorting.
5.3 Evaluation on Real Applications
Here we evaluate the improvement of our protocol in real applications, which includes Bolt [GM17] and
DECO [ZMM+20]. Note that both works need a two-party computation protocol. We use the same hardware
as above and limited network bandwidth to emulate a realistic setting. The circuit needed in Bolt is about
10 million AND gates while the circuit in DECO is about 770 thousand gates. We present the experimental
results in Table 8.
Acknowledgements
Kang Yang and Jiang Zhang are supported by the National Key Research and Development Program of
China (Grant Nos. 2018YFB0804105, 2017YFB0802005), the National Natural Science Foundation of
China (Grant Nos. 61932019, 61802021), and the Opening Project of Guangdong Provincial Key Laboratory
of Data Security and Privacy Protection (No. 2017B030301004). Xiao Wang is also supported by a Gift
from PlatON. We thank the anonymous reviewers for their helpful comments.
24
References
[ALSZ13] Gilad Asharov, Yehuda Lindell, Thomas Schneider, and Michael Zohner. More efﬁcient obliv-
ious transfer and extensions for faster secure computation. In ACM Conf. on Computer and
Communications Security (CCS) 2013, pages 535–548. ACM Press, 2013.
[AOR+19] Abdelrahaman Aly, Emmanuela Orsini, Dragos Rotaru, Nigel P. Smart, and Tim Wood. Za-
phod: Efﬁciently combining lsss and garbled circuits in scale. In Proceedings of the 7th ACM
Workshop on Encrypted Computing & Applied Homomorphic Cryptography, WAHC’19, page
33–44, 2019.
[BCG+19] Elette Boyle, Geoffroy Couteau, Niv Gilboa, Yuval Ishai, Lisa Kohl, Peter Rindal, and Peter
Scholl. Efﬁcient two-round OT extension and silent non-interactive secure computation. In
ACM Conf. on Computer and Communications Security (CCS) 2019, pages 291–308. ACM
Press, 2019.
[BDOZ11] Rikke Bendlin, Ivan Damg˚ard, Claudio Orlandi, and Sarah Zakarias. Semi-homomorphic en-
In Advances in Cryptology—Eurocrypt 2011, LNCS,
cryption and multiparty computation.
pages 169–188. Springer, 2011.
[Bea92]
[Ben18]
Donald Beaver. Efﬁcient multiparty protocols using circuit randomization.
Cryptology—Crypto 1991, LNCS, pages 420–432. Springer, 1992.
In Advances in
Aner Ben-Efraim. On multiparty garbling of arithmetic circuits. In Advances in Cryptology—
Asiacrypt 2018, Part III, LNCS, pages 3–33. Springer, 2018.
[BJPR18] Megha Byali, Arun Joseph, Arpita Patra, and Divya Ravi. Fast secure computation for small
In ACM Conf. on Computer and Communications Security
population over the internet.
(CCS) 2018, pages 677–694. ACM Press, 2018.
[BLO16]
[BLO17]
Aner Ben-Efraim, Yehuda Lindell, and Eran Omri. Optimizing semi-honest secure multi-
party computation for the internet. In ACM Conf. on Computer and Communications Security
(CCS) 2016, pages 578–590. ACM Press, 2016.
Aner Ben-Efraim, Yehuda Lindell, and Eran Omri. Efﬁcient scalable constant-round MPC via
garbled circuits. In Advances in Cryptology—Asiacrypt 2017, Part II, LNCS, pages 471–498.
Springer, 2017.
[BMR90] Donald Beaver, Silvio Micali, and Phillip Rogaway. The round complexity of secure protocols
(extended abstract). In 22nd Annual ACM Symposium on Theory of Computing (STOC), pages
503–513. ACM Press, 1990.
[CDD+16]
Ignacio Cascudo, Ivan Damg˚ard, Bernardo David, Nico D¨ottling, and Jesper Buus Nielsen.
In Advances in
Rate-1,
Cryptology—Crypto 2016, Part III, volume 9816 of LNCS, pages 179–207. Springer, 2016.
linear time and additively homomorphic UC commitments.
[CKMZ14] Seung Geol Choi, Jonathan Katz, Alex J. Malozemoff, and Vassilis Zikas. Efﬁcient three-party
computation from cut-and-choose. In Advances in Cryptology—Crypto 2014, Part II, volume
8617 of LNCS, pages 513–530. Springer, 2014.
[CO15]
Tung Chou and Claudio Orlandi. The simplest protocol for oblivious transfer. In Progress in
Cryptology—Latincrypt 2015, LNCS, pages 40–58. Springer, 2015.
25
[CSW20]
[DEF+19]
Ran Canetti, Pratik Sarkar, and Xiao Wang. Blazing fast OT for three-round UC OT extension.
In Intl. Conference on Theory and Practice of Public Key Cryptography 2020, Part II, LNCS,
pages 299–327. Springer, 2020.
Ivan Damg˚ard, Daniel Escudero, Tore Kasper Frederiksen, Marcel Keller, Peter Scholl, and
Nikolaj Volgushev. New primitives for actively-secure MPC over rings with applications to
private machine learning. In IEEE Symposium on Security and Privacy (S&P) 2019, pages
1102–1120, 2019.
[DI05]
Ivan Damg˚ard and Yuval Ishai. Constant-round multiparty computation using a black-box
pseudorandom generator. In Advances in Cryptology—Crypto 2005, volume 3621 of LNCS,
pages 378–394. Springer, 2005.
[DPSZ12]
Ivan Damg˚ard, Valerio Pastro, Nigel P. Smart, and Sarah Zakarias. Multiparty computation
from somewhat homomorphic encryption. In Advances in Cryptology—Crypto 2012, volume
7417 of LNCS, pages 643–662. Springer, 2012.
[GKWY20] Chun Guo, Jonathan Katz, Xiao Wang, and Yu Yu. Efﬁcient and secure multiparty computation
from ﬁxed-key block ciphers. In IEEE Symposium on Security and Privacy (S&P) 2020, 2020.
[GL05]
[GM17]
Shaﬁ Goldwasser and Yehuda Lindell. Secure multi-party computation without agreement. J.
Cryptology, 18(3):247–287, July 2005.
Matthew Green and Ian Miers. Bolt: Anonymous payment channels for decentralized curren-
cies. In ACM Conf. on Computer and Communications Security (CCS) 2017, pages 473–489.
ACM Press, 2017.
[GMW87] Oded Goldreich, Silvio Micali, and Avi Wigderson. How to play any mental game or A com-
In 19th Annual ACM Symposium on
pleteness theorem for protocols with honest majority.
Theory of Computing (STOC), pages 218–229. ACM Press, 1987.
[Gol04]
[HIV17]
[HSS17]
Oded Goldreich. Foundations of Cryptography: Basic Applications, volume 2. Cambridge
University Press, Cambridge, UK, 2004.
Carmit Hazay, Yuval Ishai, and Muthuramakrishnan Venkitasubramaniam. Actively secure
garbled circuits with constant communication overhead in the plain model. In Theory of Cryp-
tography Conference (TCC) 2017, LNCS, pages 3–39. Springer, 2017.
Carmit Hazay, Peter Scholl, and Eduardo Soria-Vazquez. Low cost constant round MPC com-
bining BMR and oblivious transfer. In Advances in Cryptology—Asiacrypt 2017, Part I, LNCS,
pages 598–628. Springer, 2017.
[HVW20] Carmit Hazay, Muthuramakrishnan Venkitasubramaniam, and Mor Weiss. The price of active
In Advances in Cryptology—Eurocrypt 2020, Part II,
security in cryptographic protocols.
LNCS, pages 184–215. Springer, 2020.
[IKNP03] Yuval Ishai, Joe Kilian, Kobbi Nissim, and Erez Petrank. Extending oblivious transfers ef-
ﬁciently. In Advances in Cryptology—Crypto 2003, volume 2729 of LNCS, pages 145–161.
Springer, 2003.
[KOS15] Marcel Keller, Emmanuela Orsini, and Peter Scholl. Actively secure OT extension with optimal
overhead. In Advances in Cryptology—Crypto 2015, Part I, volume 9215 of LNCS, pages 724–
741. Springer, 2015.
26
[KRRW18] Jonathan Katz, Samuel Ranellucci, Mike Rosulek, and Xiao Wang. Optimizing authenticated
garbling for faster secure two-party computation. In Advances in Cryptology—Crypto 2018,
Part III, volume 10993 of LNCS, pages 365–391. Springer, 2018.
[KS08]
[LOS14]
Vladimir Kolesnikov and Thomas Schneider. Improved garbled circuit: Free XOR gates and
applications. In Intl. Colloquium on Automata, Languages, and Programming (ICALP), LNCS,
pages 486–498. Springer, 2008.
Enrique Larraia, Emmanuela Orsini, and Nigel P. Smart. Dishonest majority multi-party com-
putation for binary circuits. In Advances in Cryptology—Crypto 2014, Part II, volume 8617 of
LNCS, pages 495–512. Springer, 2014.
[LPSY15] Yehuda Lindell, Benny Pinkas, Nigel P. Smart, and Avishay Yanai. Efﬁcient constant
In Advances in Cryptology—
round multi-party computation combining BMR and SPDZ.
Crypto 2015, Part II, volume 9216 of LNCS, pages 319–338. Springer, 2015.
[LSS16]
[Nie07]
Yehuda Lindell, Nigel P. Smart, and Eduardo Soria-Vazquez. More efﬁcient constant-round
In Theory of Cryptography Conference
multi-party computation from BMR and SHE.
(TCC) 2016, LNCS, pages 554–581. Springer, 2016.