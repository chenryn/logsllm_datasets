title:Are we done yet? Our Journey to Fight against Memory-safety Bugs
author:Taesoo Kim
Are we done yet? Our Journey to Fight  
against Memory-safety Bugs 
Taesoo Kim 
Georgia Institute of Technology and Samsung Research 
PI:EMAIL 
BIOGRAPHY  
is  an  Associate 
Taesoo  Kim 
the  School  of 
Professor 
in 
Cybersecurity  and  Privacy  and 
the  School  Computer  Science  at 
Georgia  Tech.  He  also  serves  as 
a  director  of  the  Georgia  Tech 
Systems  Software  and  Security 
Center (GTS3). Starting from his 
sabbatical year, he works as a VP 
at  Samsung  Research,  leading 
the development of a Rust-based 
OS for a secure element. He is a 
recipient  of  various  awards 
including NSF CAREER (2018), Internet Defense Prize (2015), and 
several  best  paper  awards  including  USENIX  Security’18  and 
EuroSys’17. He holds a BS from KAIST (2009), a SM (2011) and a 
Ph.D. (2014) from MIT. 
ACKNOWLEDGEMENTS 
His research has been supported, in part, by the NSF award CNS-
1563848  and  CNS-1749711,  ONR  under  grant  N00014-18-1-2662, 
N00014-15-1-2162, 
AIMEE 
HR00112090034 
SocialCyber  HR00112190087,  ETRI 
IITP/KEIT[2014-3-00035], and gifts from Facebook, Mozilla, Intel, 
VMware and Google. 
N00014-17-1-2895, 
DARPA 
and 
REFERENCES 
[1]   MSRC,  Microsoft,  A  proactive  approach  to  more  secure  code, 
https://msrc-blog.microsoft.com/2019/07/16/a-proactive-approach-to-
more-secure-code/ 
Chromium 
Google,  Memory 
Projects, 
[2]   The 
safety, 
https://www.chromium.org/Home/chromium-security/memory-
safety 
[3]   Rudra:  Finding  Memory  Safety  Bugs  in  Rust  at  the  Ecosystem 
Scale,Yechan Bae, Youngsuk Kim, Ammar Askar, Jungwon Lim and 
Taesoo  Kim.  In  Proceedings  of  the  28th  ACM  Symposium  on 
Operating Systems Principles (SOSP 2021), Virtual, October 2021. 
ABSTRACT 
Memory-safety issues have been a long-standing concern of the 
security practitioners. According to Microsoft [1] and Google [2], 
memory-safety  bugs  still  represent  70%  of  the  exploited 
vulnerabilities  in  complex,  real-world  programs  like  OSes  and 
Web  browsers.  However,  it  doesn’t  mean  that  academics  and 
practitioners  haven’t  tried  hard  to  alleviate  the  problem. 
Advances  in  automatic  techniques  like  fuzzing  and  sanitizers 
revolutionize the way we tame the memory safety bugs, but the 
increasing volume of new software simply outpaces the adoption 
rate  of  these  promising  new  techniques,  setting  the  legacy 
programs aside. 
In this talk, I’d like to share  “our” own journey to fight against 
memory-safety  bugs  –  “our”  is  important  as  all  research  is 
conducted  together  with  the  brightest  hackers  in  SSLab  at 
Georgia  Tech.  First,  I’d  like  to  talk  about  our  group’s  research 
agenda  in  the  memory-safety  world  ranging  from  binary 
exploitation, programming analysis, fuzzing, symbolic execution 
and security education. Second, I will share our group's journey 
to participate in the DARPA CGC, DEFCON CTF and pwn2own 
competitions.  Third,  I  will  also  present  where  our  group  is 
heading  to:  a  promising  new  memory/thread-safe  language, 
called  Rust.  Lastly,  I  will  conclude  the  talk  with  an  important 
projection by using our recent work on finding bugs in the Rust 
packages [3]: like COVID-19, the memory-safety bugs likely stay 
with us for the next decade, if not more. 
CCS Concepts/ACM Classifiers 
• Security and privacy ~ Software and application security ~ 
Software security engineering 
Author Keywords 
Memory-safety bugs; Exploitation; Fuzzing; Rust  
Permission to make digital or hard copies of part or all of this work for personal or 
classroom  use  is  granted  without  fee  provided  that  copies  are  not  made  or 
distributed for profit or commercial advantage and that copies bear this notice and 
the  full  citation  on  the  first  page.  Copyrights  for  third-party  components  of  this 
work must be honored. For all other uses, contact the Owner/Author(s).  
CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea. 
© 2021 Copyright is held by the owner/author(s). 
ACM ISBN 978-1-4503-8454-4/21/11. 
https://doi.org/10.1145/3460120.3482788  
Keynote Talk  CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea4