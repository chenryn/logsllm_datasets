## Summary
Trying to register a custom 404 (or any?) error handler using blueprints and
the declaritive style seems to have no effect:
    # Has no effect
    @blueprint.errorhandler(404)
    def ...
    # Yet this works:
    @app.errorhandler(404)
    def ...
Of course, the blueprint wouldn't work if it wasn't registered, but I have
registered it and yet, the custom error page isn't shown. Here are two
**files** you can use to reproduce the lack of custom error handling:
    # FILE: app.py
    import flask
    import views
    app = flask.Flask(__name__)
    app.register_blueprint(views.blueprint)
    app.run()
    # FILE: views.py
    import flask
    blueprint = flask.Blueprint('views', __name__, template_folder='templates')
    @blueprint.route('/')
    def index():
        return "Hello world, I might have errors!"
    @blueprint.errorhandler(404)
    def errors_404(e):
        return "I am a 404!", 404
### Expected Behavior
We should see the response "I am a 404!" for http://127.0.0.1:5000/abc
### Actual Behavior
We see Flask's standard error page:
    Not Found
    The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.
### Working if changed to app.errorhandler()
It seems like I have the setup correct (I hope I'm not wasting your time!)
because with a slight move from `blueprint.errorhandler()` to
`app.errorhandler()`, the expected behavior is achieved:
#### This one works
    # FILE: app.py
    import flask
    import views
    app = flask.Flask(__name__)
    app.register_blueprint(views.blueprint)
    # I just moved this from views.py and changed blueprint to app
    # Of course, the error report is that this shouldn't be necessary.
    @app.errorhandler(404)
    def errors_404(e):
        return "I am a 404!", 404
    app.run()
    # FILE: views.py
    import flask
    blueprint = flask.Blueprint('views', __name__, template_folder='templates')
    @blueprint.route('/')
    def index():
        return "Hello world, I might have errors!"
### Environment
  * Python version: 3.8
  * Flask version: 1.1.2
  * Werkzeug version: 1.0.1
  * OS: macOS Catalina