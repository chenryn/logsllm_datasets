title:Malware Slums: Measurement and Analysis of Malware on Traffic Exchanges
author:Salman Yousaf and
Umar Iqbal and
Shehroze Farooqi and
Raza Ahmad and
Muhammad Zubair Shafiq and
Fareed Zaffar
2016 46th Annual IEEE/IFIP International Conference on Dependable Systems and Networks
Malware Slums: Measurement and Analysis
Salman Yousaf∗
of Malware on Trafﬁc Exchanges
Zubair Shaﬁq‡
Umar Iqbal∗
∗Lahore University of Management Sciences
‡The University of Iowa
Shehroze Farooqi‡
Raza Ahmad∗
Fareed Zaffar∗
Abstract—Auto-surf and manual-surf trafﬁc exchanges are an
increasingly popular way of artiﬁcially generating website trafﬁc.
Previous research in this area has focused on the makeup, usage,
and monetization of underground trafﬁc exchanges. In this paper,
we analyze the role of trafﬁc exchanges as a vector for malware
propagation. We conduct a measurement study of nine auto-
surf and manual-surf trafﬁc exchanges over several months. We
present a ﬁrst of its kind analysis of the different types of malware
that are propagated through these trafﬁc exchanges. We ﬁnd that
more than 26% of the URLs surfed on trafﬁc exchanges contain
malicious content. We further analyze different categories of
malware encountered on trafﬁc exchanges, including blacklisted
domains, malicious JavaScript, malicious Flash, and malicious
shortened URLs.
I. INTRODUCTION
Online advertising has largely fueled the World Wide
Web since its inception. Since publishers get paid on a
per-impression or per-click basis, increasing website trafﬁc
or “hits” is a key part of any web monetization strategy.
More trafﬁc to a website directly translates to an increase
in impressions and/or clicks, which in turn generates more
revenue through advertisements. Since users typically rely on
search engines to ﬁnd relevant content, a large fraction of any
website’s trafﬁc comes via search engines. Content publishers
heavily invest in search-engine-optimization (SEO) techniques
to improve their rankings on search engines. However, SEO is
a non-trivial undertaking and there is intense competition for
popular search keywords.
Since trafﬁc has become the virtual currency of the web,
there are strong incentives for publishers to artiﬁcially inﬂate
trafﬁc to their websites. There are many legitimate and fraudu-
lent SEO services to increase “organic” website trafﬁc. Trafﬁc
exchange services have emerged as an alternate to SEO for
fraudulently generating website trafﬁc [34]. Trafﬁc exchanges
are designed as a means to artiﬁcially generate trafﬁc for
different websites on a reciprocal basis. They are setup in
a way that members earn credit for viewing other members’
websites. This credit, in turn, can be used to barter trafﬁc
for their own website. Members can also purchase exchange
credits that can be used to generate trafﬁc on their websites.
A major challenge for attackers on the web is to achieve
large attack coverage. Unless attackers can place the malware
on a popular website, it is difﬁcult for malware to target
a large number of users. However, compromising a popular
reputed website is challenging. As an alternative, attackers
have exploited online advertisements to target a large number
of victims in a short amount of time [38], [40], [41]. Trafﬁc
exchanges also provide a convenient and cheap platform for
attackers to infect web users with malware, such as drive-by
downloads and social engineering.
In this paper, we make the case that attackers can exploit
trafﬁc exchanges to reach a large number of users across the
world. We take a look at the role of trafﬁc exchanges as a
means to propagate malware because the users of these ex-
changes most likely do not understand the risks associated with
being a part of such networks. Our study reveals that trafﬁc
exchange services have become a prime target for attackers
with more than 26% of URLs on such exchanges exhibiting
malicious behavior. Our results have important implications
that require a rethinking of trafﬁc exchange networks on part
of their stakeholders.
Key Contributions. In this paper, we study the role of trafﬁc
exchanges in spreading malware. To this end, we crawled nine
popular trafﬁc exchanges for several months and collected a
data set of more than one million URLs. In the URL samples
that we analyzed, a signiﬁcant percentage displayed malicious
behavior. The key contributions of this paper are as follows:
1) We collect a data set of 1,003,087 URLs from nine
trafﬁc exchanges, including both auto-surf and manual-
surf trafﬁc exchanges. We rely on two well known mal-
ware detection tools, VirusTotal and Quttera, to detect
malware on the websites surfed on trafﬁc exchanges. We
ﬁnd that trafﬁc exchanges are infested with malware.
Our analysis reveals that more than 26% of URLs
encountered on trafﬁc exchanges are malicious.
2) We identify the major categories of malware on traf-
ﬁc exchanges, including blacklisted URLs, malicious
JavaScript, malicious Flash, suspicious redirections, and
malicious shortened URLs. We ﬁnd that malware on
trafﬁc exchanges try to deceive users into downloading
malicious executables and clicking on advertisements.
We conduct a drill-down analysis of the interesting
malware and ﬁnd cases of iframe injection, deceptive
downloads, external interface calls, and redirections to
malware hosting websites.
To the best of our knowledge, this paper presents a ﬁrst of its
kind study regarding malware on trafﬁc exchange services.
978-1-4673-8891-7/16 $31.00 © 2016 IEEE
DOI 10.1109/DSN.2016.58
572
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:18:37 UTC from IEEE Xplore.  Restrictions apply. 
Paper Organization. The rest of the paper is organized as fol-
lows. Section II covers background and related work on trafﬁc
exchanges. Section III describes data collection and analysis
methodology. Section IV describes analysis of malware in the
context of categories. Section V presents interesting malware
case studies. We conclude in Section VI and summarize our
results along with our recommendations for countermeasures.
II. BACKGROUND & RELATED WORK
A. Background
Trafﬁc exchange services allow members to generate fraud-
ulent trafﬁc from a diverse pool of users. Trafﬁc exchanges
can be broadly divided into two categories: auto-surf and
manual-surf exchanges. Auto-surf exchanges use automated
procedures to browse target websites without requiring any
input from users. Manual-surf exchanges require frequent
manual user input to browse target websites. Most of the
trafﬁc exchanges operate on the principal of reciprocity. More
speciﬁcally, members of a trafﬁc exchange visit websites of
other members in exchange for visits to their own. Note that
members do not necessarily receive the same number of visits
to their own websites as the number of websites they visit.
Moreover, exchange credit can be purchased to generate trafﬁc.
The cost-per-thousand hits on trafﬁc exchanges range from a
few cents to a few dollars.
Trafﬁc exchanges present an interface to their members
for surﬁng other members’ websites. As shown in Figure
1(a), auto-surf exchanges automatically open new websites
randomly, usually in an iframe. In contrast, as shown in
Figure 1(b), in manual-surf exchanges a user has to manually
click and open websites, often after solving CAPTCHAs or
other puzzles. Trafﬁc exchanges require a minimum surf time
for each visited page. The minimum surf time required to be
considered a valid page visit varies across exchanges. The
minimum surf time usually ranges from 10 seconds to 10
minutes.
The main goal of websites listed on trafﬁc exchanges is to
generate ad impressions from a diverse pool of IP addresses
[34]. Ad impressions result in monetary beneﬁts for the listed
websites that have placeholders for display advertisements
from different ad-exchanges. To generate trafﬁc from a diverse
pool of IP addresses, these exchanges lure a large number of
users by claims such as “make easy money from home”. Since
the monetary returns for users are relatively small, most of
the users on the trafﬁc exchanges are from countries such as
India, Pakistan, Egypt, Russia, Mexico, Brazil, etc. To ensure
a diverse IP pool, trafﬁc exchanges enforce the use of only
one account per IP address. For example, as shown in Figure
1(c), Otohits prohibits multiple sessions from an account and
suspends the account in case of a violation. However, some
trafﬁc exchanges do allow account logins from multiple IP
addresses. Users can use proxies and VPN services to acquire
multiple IP addresses and increase their earnings.
(a) Screenshot of an auto-surf trafﬁc exchange (10KHits). The timer indicates
that the user has to stay on the current page for 51 seconds.
(b) Screenshot of a manual-surf trafﬁc exchange (Cash N Hits). The user is
prompted to solve an image CAPTCHA before visiting a new page.
(c) Otohits detects multiple parallel sessions
Fig. 1. Screenshots of auto-surf and manual-surf trafﬁc exchanges
B. Related Work
Trafﬁc exchanges have not received much attention in prior
literature. Javed et al. [34] recently conducted the ﬁrst large-
scale study of trafﬁc exchange services to analyze auto-surf
and manual-surf exchanges in terms of their composition,
monetization, and usage patterns and strategies. The authors
conducted active measurements for different trafﬁc exchanges
and analyzed them over a period of several months. They
categorized the participating websites on the basis of of-
fered services, methods of monetization, and involvement in
different types of scams. They found that monetization on
trafﬁc exchanges is done by ad impressions from bogus ad
exchanges and referrer spooﬁng on legitimate ad exchanges.
They also found that users on trafﬁc exchanges lack technical
sophistication.
Building on their seminal study, we focus our attention on
malware prevalence on trafﬁc exchanges. For example, we
ﬁnd that users surﬁng on trafﬁc exchanges are much more
exposed to malware. Overall, our study reveals that more than
26% URLs opened on trafﬁc exchanges are malicious. It is
noteworthy that one of the trafﬁc exchanges in our study has
over half of their URLs detected as malicious.
The modern web, fueled by advertising, has witnessed a
mushroom growth in the count and diversity of websites.
Hence for the past few years, detection and mitigation of
malware attacks through infected, malformed, and malicious
websites has been an active area of research. Several ap-
proaches have been devised to combat the diverse types and
intensities of these attacks. These techniques analyze and
combat malicious behavior through various client and server
573
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:18:37 UTC from IEEE Xplore.  Restrictions apply. 
side approaches including program analysis, monitoring, and
blacklisting.
Since JavaScript can be used to achieve malign behavior,
several ways have been suggested to combat dynamic attacks
via program analysis techniques. Zozzle [32] is a solution
that applies machine learning techniques using features from
JavaScript syntax tree to predict malware patterns in a program
via static analysis. Rozzle [35] is a de-cloaking technique
that executes JavaScript code for multiple execution paths
of a program with very low-overhead. It aims to detect
malware exhibiting differential properties on the basis of its
environment. Cujo [36] is a detector embedded in web proxy
to inspect JavaScript and block the delivery of any malware.
It is a learning based system that performs static and dynamic
analysis to detect malicious code patterns. ADSandbox [33]
makes malware detection at client side transparent from the
user. It is a sandboxing technique similar to Java Sandbox
which executes JavaScript code in a controlled environment
to identify malicious behavior using a number of heuristics.
Another popular method to identify malicious websites is
blacklisting. Blacklists are databases of websites that are
known for their involvement in illicit activities and hosting
malicious content. K¨uhrer et al. present a blacklist parser
system to track several blacklists that are publicly available
on the Internet [37].
Online advertisement scams contribute massively towards
malware propagation on the Internet. Li et al. created Mad-
Tracer [38]: an infrastructure-based system to capture malver-
tising networks using machine learning methods. Similarly,
Zarras et al. collected half a million real world advertisements
from the web and demonstrated several ad exchanges to be
more prone to serving malicious advertisements [41]. Xing
et al. showed that the spread of malvertisements is catalyzed
by browser extensions that inject ads on web pages through
iframes by modifying the HTML DOM structure [40].
A. Data Collection
III. DATA
To conduct a quantitative analysis of malware on trafﬁc ex-
change services, we crawled several popular trafﬁc exchanges
and gathered URLs that appeared on them. To select trafﬁc
exchange services, we started with the trafﬁc exchanges used
by Javed et al. [34] and also searched for other popular trafﬁc
exchanges by querying popular search engines. We selected
a total of 9 exchanges, which included 4 “manual-surf”
services (Cash N Hits [5], Easyhits4u [7], Trafﬁc Monsoon
[25], Hit2Hit [11]) and 5 “auto-surf” services (Otohits [17],
ManyHit [13], SendSurf [20], Smiley Trafﬁc [23], 10KHits
[1]). To conduct our crawl on the trafﬁc exchanges, we
registered brand new accounts that were only used for this
purpose. Crawling auto-surf exchanges is relatively simpler
than manual-surf exchanges. For auto-surf exchanges, we login
with our account, start the automatic surf process, and log
URL and other page information directly from the browser
as new pages are loaded. For manual-surf exchanges,
the
574
data collection is manual and slow. Therefore, our crawling
of manual-surf exchanges was limited to much fewer pages
as compared to auto-surf exchanges. It is noteworthy that
we do not have any control over the surfed URLs on auto-
surf exchanges. For manual-surf exchanges, we surf all of
the available URLs sequentially. To capture trafﬁc, including
HTTP and HTTPS, we used the Firebug [8] add-on in Mozilla
Firefox browser. We additionally installed NetExport [16]
extension to collect data in the HTTP Archive (HAR) format.
Overall, we collected 1,003,087 URLs which contain
306,895 distinct URLs from 17,448 domains. Table I provides
the detailed statistics of the collected data. It is pertinent to
note that trafﬁc exchanges often opened their own homepages
in the iframe. We refer to these URLs as self-referrals. We
also noted frequent appearances of popular websites such as
Google, Facebook, and YouTube. Thus, we call these URLs
as popular referrals. We surmise that trafﬁc exchanges may
point to YouTube and other popular websites to garner bogus
content views [34]. We exclude both of these categories from
our further analysis because we want to focus on URLs that
contain malware. After excluding self-referring and popular
URLs, we are left with 802,434 URLs obtained from these
trafﬁc exchanges which we call regular URLs.
During the data collection, we were careful to minimize our
engagement in click fraud. Our actions had no intent to de-
ceptively earn credits, though such crediting did occasionally
occur. We were vigilant while accessing malicious websites
and performed our analysis in a closed virtual environment.
B. Analysis Methodology
To test whether or not a web page contains malware,
we relied on third-party off-the-shelf malware analysis tools
such as Wepawet [30], Virus Total [28], Quttera [18], URL
Query [27], Bright Cloud [4], Site Check [22], Sender Base
(CISCO) [19], and AVG Threat Lab [3]. To vet these tools, we
considered a sample of gold standard malware identiﬁed by
Xing et al. [40]. Wepawet and AVG Threat Lab did not detect
any of the malware in our gold standard data set. URLQuery
successfully detected up to 70% of the malware. Furthermore,
Bright Cloud, Site Check, and Sender Base also had detection
accuracies of 60%, 40% and 10%, respectively. Therefore, we
excluded these malware analysis tools from our initial shortlist.
VirusTotal and Quttera detected 100% of the malware in our
gold standard data set. They have also been used in prior
malware studies [41]. Thus, we settled on these two malware
detection tools for our analysis.
• VirusTotal. VirusTotal [28] takes into account the re-
sults of multiple antivirus products, ﬁle characterization
tools, and website scanning engines. Malware can be
programmed to circumvent speciﬁc malware scanning
engines. Thus, it is imperative that malware must be
scanned via a diverse set of scanning services. VirusTotal
provides us this ability. We submitted our ﬁles and URLs
using the API provided by VirusTotal [29].
• Quttera. Quttera [18] can detect malicious hidden
iframe elements, malicious re-directs, malvertising,
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:18:37 UTC from IEEE Xplore.  Restrictions apply. 
Type
Exchange
Exchange
Name
Auto-surf
10KHits
Auto-surf
ManyHits
Auto-surf
Smiley Trafﬁc
Auto-surf
SendSurf
Auto-surf
Otohits
Manual-surf
Cash N Hits
Manual-surf
Easyhits4u
Manual-surf
Hit2Hit
Trafﬁc Monsoon Manual-surf
STATISTICS OF DATA FROM TRAFFIC EXCHANGES
TABLE I
# URLs
Crawled
218,353
178,939
244,677
246,967
96,316
4,795
4,638
3,355
5,047
# Self
Referrals
13,663
10,860
15,789
17,537
52,167
416
703
651
540
# Popular
Referrals
24,328
20,890
12,847
19,174
9,336
298
694
211
549
# Regular
URLs
180,362
147,189
216,041
210,256
34,813
4,081
3,241
2,493
3,958
# Malicious % Malicious
URLs
33.8%
14.6%
8.7%
51.9%
7.4%
10.2%
10.4%
8.5%
12.2%