11. 保存该文件。
12. 运行 playbook:
    ``` literallayout
    $ ansible-playbook -v -i inventory.file retrieve-data-asymmetric-vault-copy.yml
    ```
:::
::: itemizedlist
**其它资源**
-   有关使用 Ansible 管理 IdM vaults 和服务 secret 以及 playbook
    变量的更多信息，请参阅
    `/usr/share/doc/ansible-freeipa/ 目录中提供的 README-`{.literal}
    vault.md Markdown 文件和
    `/usr/share/doc/ansible-freeipa/playbooks/vault/`{.literal}
    目录中的示例 playbook。
:::
:::
:::
[]{#ensuring-the-presence-and-absence-of-services-in-idm-using-ansible_configuring-and-managing-idm.html}
::: chapter
::: titlepage
# []{#ensuring-the-presence-and-absence-of-services-in-idm-using-ansible_configuring-and-managing-idm.html#ensuring-the-presence-and-absence-of-services-in-idm-using-ansible_configuring-and-managing-idm}第 67 章 使用 Ansible 在 IdM 中确保存在或不存在服务 {.title}
:::
使用 Ansible `service`{.literal} 模块时，管理员可以确保 IdM
中存在或不存在不原生 IdM 的特定服务。例如，您可以使用
`service`{.literal} 模块：
::: itemizedlist
-   检查 IdM
    客户端中是否存在手动安装的服务，并在缺少该服务时自动安装该服务。详情请查看：
    ::: itemizedlist
    -   [确保 IdM 客户端的 IdM 中存在 HTTP
        服务。](#ensuring-the-presence-and-absence-of-services-in-idm-using-ansible_configuring-and-managing-idm.html#ensuring-the-presence-of-an-http-service-in-idm-using-an-ansible-playbook_ensuring-the-presence-and-absence-of-services-in-idm-using-ansible "使用 Ansible playbook 在 IdM 中存在 HTTP 服务"){.link}
    -   [确保非 IdM 客户端的 IdM 中存在 HTTP
        服务。](#ensuring-the-presence-and-absence-of-services-in-idm-using-ansible_configuring-and-managing-idm.html#ensuring-the-presence-of-an-http-service-in-idm-on-a-non-idm-client-using-an-ansible-playbook_ensuring-the-presence-and-absence-of-services-in-idm-using-ansible "使用 Ansible playbook，确保在 IdM 中存在于非IdM 客户端中的 HTTP 服务"){.link}
    -   [确保在没有 DNS 的 IdM 客户端中存在 HTTP
        服务。](#ensuring-the-presence-and-absence-of-services-in-idm-using-ansible_configuring-and-managing-idm.html#ensuring-the-presence-of-an-http-service-on-an-idm-client-without-dns-using-an-ansible-playbook_ensuring-the-presence-and-absence-of-services-in-idm-using-ansible "使用 Ansible playbook 确保在没有 DNS 的 IdM 客户端上存在 HTTP 服务"){.link}
    :::
-   检查在 IdM
    中注册的服务是否已附加证书，并在缺少该证书时自动安装该证书。详情请查看：
    ::: itemizedlist
    -   [确保 IdM
        服务条目中存在外部签名的证书。](#ensuring-the-presence-and-absence-of-services-in-idm-using-ansible_configuring-and-managing-idm.html#ensuring-the-presence-of-an-externally-signed-certificate-in-an-idm-service-entry-using-an-ansible-playbook_ensuring-the-presence-and-absence-of-services-in-idm-using-ansible "使用 Ansible playbook，确保 IdM 服务条目中存在外部签名的证书"){.link}
    :::
-   允许 IdM 用户和主机检索并创建服务 keytab。详情请查看：
    ::: itemizedlist
    -   [允许 IdM 用户、组、主机或主机组创建服务的
        keytab。](#ensuring-the-presence-and-absence-of-services-in-idm-using-ansible_configuring-and-managing-idm.html#using-an-ansible-playbook-to-allow-idm-users-groups-hosts-or-host-groups-to-create-a-keytab-of-a-service_ensuring-the-presence-and-absence-of-services-in-idm-using-ansible "使用 Ansible playbook 来允许 IdM 用户、组、主机或主机组创建服务的 keytab"){.link}
    -   [允许 IdM 用户、组、主机或主机组检索服务的
        keytab。](#ensuring-the-presence-and-absence-of-services-in-idm-using-ansible_configuring-and-managing-idm.html#using-an-ansible-playbook-to-allow-idm-users-groups-hosts-or-host-groups-to-retrieve-a-keytab-of-a-service_ensuring-the-presence-and-absence-of-services-in-idm-using-ansible "使用 Ansible playbook 来允许 IdM 用户、组、主机或主机组检索服务的 keytab"){.link}
    :::
-   允许 IdM 用户和组向服务添加 Kerberos 别名。详情请查看：
    ::: itemizedlist
    -   [确保服务的 Kerberos
        主体别名存在。](#ensuring-the-presence-and-absence-of-services-in-idm-using-ansible_configuring-and-managing-idm.html#ensuring-the-presence-of-a-kerberos-principal-alias-of-a-service-using-an-ansible-playbook_ensuring-the-presence-and-absence-of-services-in-idm-using-ansible "使用 Ansible playbook 确保存在服务的 Kerberos 主体别名"){.link}
    :::
-   检查 IdM
    客户端中是否不存在服务，并在该服务存在时自动删除该服务。详情请查看：
    ::: itemizedlist
    -   [确保 IdM 客户端的 IdM 中缺少 HTTP
        服务。](#ensuring-the-presence-and-absence-of-services-in-idm-using-ansible_configuring-and-managing-idm.html#ensuring-the-absence-of-an-http-service-in-idm-using-an-ansible-playbook_ensuring-the-presence-and-absence-of-services-in-idm-using-ansible "使用 Ansible playbook 确保 IdM 中缺少 HTTP 服务"){.link}
    :::
:::
::: section
::: titlepage
# []{#ensuring-the-presence-and-absence-of-services-in-idm-using-ansible_configuring-and-managing-idm.html#ensuring-the-presence-of-an-http-service-in-idm-using-an-ansible-playbook_ensuring-the-presence-and-absence-of-services-in-idm-using-ansible}使用 Ansible playbook 在 IdM 中存在 HTTP 服务 {.title}
:::
本节论述了如何使用 Ansible playbook 在 IdM 中确保存在 HTTP 服务器。
::: itemizedlist
**先决条件**
-   托管 HTTP 服务的系统是一个 IdM 客户端。
-   您有 IdM 管理员密码。
:::
::: orderedlist
**流程**
1.  创建一个清单文件，如 `inventory.file`{.literal} ：
    ``` literallayout
    $ touch inventory.file
    ```
2.  打开 `inventory.file`{.literal}，并在 `[ipaserver]`{.literal}
    部分中定义您要配置的 IdM 服务器。例如，要指示 Ansible 配置
    [**server.idm.example.com**]{.strong}，请输入：
    ``` literallayout
    [ipaserver]
    server.idm.example.com
    ```
3.  生成
    `/usr/share/doc/ansible-freeipa/playbooks/service/service-is-present.yml`{.literal}
    Ansible playbook 文件的副本。例如：
    ``` literallayout
    $ cp /usr/share/doc/ansible-freeipa/playbooks/service/service-is-present.yml /usr/share/doc/ansible-freeipa/playbooks/service/service-is-present-copy.yml
    ```
4.  打开
    `/usr/share/doc/ansible-freeipa/playbooks/service/service-is-present-copy.yml`{.literal}
    Ansible playbook 文件进行编辑：
    ``` literallayout
    ---
    - name: Playbook to manage IPA service.
      hosts: ipaserver
      become: true
      gather_facts: false
      tasks:
      # Ensure service is present
      - ipaservice:
          ipaadmin_password: Secret123
          name: HTTP/client.idm.example.com
    ```
5.  调整文件：
    ::: itemizedlist
    -   更改 `ipaadmin_password`{.literal} 变量定义的 IdM 管理员密码。
    -   更改运行 HTTP 服务的 IdM 客户端的名称，如 `ipaservice`{.literal}
        任务 `的名称`{.literal} 变量所定义。
    :::
6.  保存并退出文件。
7.  运行指定 playbook 文件和清单文件的 Ansible playbook：
    ``` literallayout
    $ ansible-playbook -v -i path_to_inventory_directory/inventory.file /usr/share/doc/ansible-freeipa/playbooks/service/service-is-present-copy.yml
    ```
:::
::: orderedlist
**验证步骤**
1.  以 IdM 管理员身份登录 IdM Web UI。
2.  导航到 `Identity`{.literal} → `Services`{.literal}。
:::
如果 [**Services**]{.strong} 列表中列出了
[**HTTP/PI:EMAIL**]{.strong}，Ansible
playbook 已成功添加到 IdM。
::: itemizedlist
**其它资源**
-   您可以通过 [向 Apache HTTP 服务器添加 TLS 加密来保护 HTTP
    服务器和](#restricting-an-application-to-trust-only-a-subset-of-certificates_configuring-and-managing-idm.html#proc_adding-tls-encryption-to-an-apache-http-server-configuration_restricting-an-application-to-trust-a-subset-of-certs "在 Apache HTTP 服务器中添加 TLS 加密"){.link}
    浏览器客户端之间的通信。
-   您可以从 IdM 证书颁发机构请求 HTTP
    服务的证书。如需更多信息，[请参阅使用 certmonger 为服务获取 IdM
    证书中所述的步骤。](#using-certmonger_configuring-and-managing-idm.html#obtain-service-cert-with-certmonger_certmonger-for-issuing-renewing-service-certs "使用 certmonger 为服务获取 IdM 证书"){.link}
:::
:::
::: section
::: titlepage
# []{#ensuring-the-presence-and-absence-of-services-in-idm-using-ansible_configuring-and-managing-idm.html#ensuring-the-presence-of-an-http-service-in-idm-on-a-non-idm-client-using-an-ansible-playbook_ensuring-the-presence-and-absence-of-services-in-idm-using-ansible}使用 Ansible playbook，确保在 IdM 中存在于非IdM 客户端中的 HTTP 服务 {.title}
:::
本节论述了如何确保在 IdM 中使用 Ansible playbook 在不属于 IdM
客户端的主机中存在 HTTP 服务器。通过将 HTTP 服务器添加到 IdM
中，您还会将主机添加到 IdM。
::: itemizedlist
**先决条件**
-   您已在主机上 [安装了 HTTP
    服务](#restricting-an-application-to-trust-only-a-subset-of-certificates_configuring-and-managing-idm.html#setting-up-a-single-instance-apache-http-server_restricting-an-application-to-trust-a-subset-of-certs "设置单实例 Apache HTTP 服务器"){.link}。
-   设置 HTTP 的主机不是 IdM 客户端。否则，请按照 [使用 Ansible playbook
    在 IdM 中保证 HTTP
    服务存在中的步骤进行操作。](#ensuring-the-presence-and-absence-of-services-in-idm-using-ansible_configuring-and-managing-idm.html#ensuring-the-presence-of-an-http-service-in-idm-using-an-ansible-playbook_ensuring-the-presence-and-absence-of-services-in-idm-using-ansible "使用 Ansible playbook 在 IdM 中存在 HTTP 服务"){.link}
-   您有 IdM 管理员密码。
-   主机的 DNS A 记录 - 或 AAAA 记录（如果使用 IPv6）
:::
::: orderedlist
**流程**
1.  创建一个清单文件，如 `inventory.file`{.literal} ：
    ``` literallayout
    $ touch inventory.file
    ```
2.  打开 `inventory.file`{.literal}，并在 `[ipaserver]`{.literal}
    部分中定义您要配置的 IdM 服务器。例如，要指示 Ansible 配置
    [**server.idm.example.com**]{.strong}，请输入：
    ``` literallayout
    [ipaserver]
    server.idm.example.com
    ```
3.  生成
    `/usr/share/doc/ansible-freeipa/playbooks/service/service-is-present-without-host-check.yml`{.literal}
    Ansible playbook 文件的副本。例如：
    ``` literallayout
    $ cp /usr/share/doc/ansible-freeipa/playbooks/service/service-is-present-without-host-check.yml /usr/share/doc/ansible-freeipa/playbooks/service/service-is-present-without-host-check-copy.yml
    ```
4.  打开复制的文件
    `/usr/share/doc/ansible-freeipa/playbooks/service/service-is-present-without-host-check-copy.yml`{.literal}
    以进行编辑。在 `ipa service`{.literal} 任务中找到
    ipaadmin_password``{=html} 和 `name`{.literal} 变量：
    ``` literallayout
    ---
    - name: Playbook to manage IPA service.
      hosts: ipaserver
      become: true
      gather_facts: false
      tasks:
      # Ensure service is present
      - ipaservice:
          ipaadmin_password: MyPassword123
          name: HTTP/www2.example.com
          skip_host_check: yes
    ```
5.  调整文件：
    ::: itemizedlist
    -   将 `ipaadmin_password`{.literal} 变量设置为 IdM 管理员密码。
    -   将 `name`{.literal} 变量设置为运行 HTTP 服务的主机的名称。
    :::
6.  保存并退出文件。
7.  运行指定 playbook 文件和清单文件的 Ansible playbook：
    ``` literallayout
    $ ansible-playbook -v -i path_to_inventory_directory/inventory.file /usr/share/doc/ansible-freeipa/playbooks/service/service-is-present-without-host-check-copy.yml
    ```
:::
::: orderedlist
**验证步骤**
1.  以 IdM 管理员身份登录 IdM Web UI。
2.  导航到 `Identity`{.literal} → `Services`{.literal}。
:::
现在，您可以看到 [**Services**]{.strong} 列表中列出的
[**HTTP/PI:EMAIL**]{.strong}。
::: itemizedlist
**其它资源**
-   您可以通过 [向 Apache HTTP 服务器添加 TLS 加密来保护 HTTP
    服务器和](#restricting-an-application-to-trust-only-a-subset-of-certificates_configuring-and-managing-idm.html#proc_adding-tls-encryption-to-an-apache-http-server-configuration_restricting-an-application-to-trust-a-subset-of-certs "在 Apache HTTP 服务器中添加 TLS 加密"){.link}
    浏览器客户端之间的通信。
:::
:::
::: section
::: titlepage
# []{#ensuring-the-presence-and-absence-of-services-in-idm-using-ansible_configuring-and-managing-idm.html#ensuring-the-presence-of-an-http-service-on-an-idm-client-without-dns-using-an-ansible-playbook_ensuring-the-presence-and-absence-of-services-in-idm-using-ansible}使用 Ansible playbook 确保在没有 DNS 的 IdM 客户端上存在 HTTP 服务 {.title}
:::
本节论述了如何使用 Ansible playbook 确保存在在 IdM 客户端中运行的 HTTP
服务器。场景表示，如果使用 IPv6 而不是 IPv4，IdM 主机没有可用的 DNS A
条目 - 或没有 DNS AAAA 条目。
::: itemizedlist
**先决条件**
-   托管 HTTP 服务的系统已在 IdM 中注册。
-   主机的 DNS A 或 DNS AAAA 记录可能不存在。否则，如果主机的 DNS
    记录存在，请按照以下步骤 [确保使用 Ansible playbook 在 IdM 中存在
    HTTP
    服务。](#ensuring-the-presence-and-absence-of-services-in-idm-using-ansible_configuring-and-managing-idm.html#ensuring-the-presence-of-an-http-service-in-idm-using-an-ansible-playbook_ensuring-the-presence-and-absence-of-services-in-idm-using-ansible "使用 Ansible playbook 在 IdM 中存在 HTTP 服务"){.link}
-   您有 IdM 管理员密码。
:::
::: orderedlist
**流程**
1.  创建一个清单文件，如 `inventory.file`{.literal} ：
    ``` literallayout
    $ touch inventory.file
    ```
2.  打开 `inventory.file`{.literal}，并在 `[ipaserver]`{.literal}
    部分中定义您要配置的 IdM 服务器。例如，要指示 Ansible 配置
    [**server.idm.example.com**]{.strong}，请输入：
    ``` literallayout
    [ipaserver]
    server.idm.example.com
    ```
3.  生成
    `/usr/share/doc/ansible-freeipa/playbooks/service/service-is-present-with-host-force.yml`{.literal}
    Ansible playbook 文件的副本。例如：
    ``` literallayout
    $ cp /usr/share/doc/ansible-freeipa/playbooks/service/service-is-present-with-host-force.yml /usr/share/doc/ansible-freeipa/playbooks/service/service-is-present-with-host-force-copy.yml
    ```
4.  打开复制的文件
    `/usr/share/doc/ansible-freeipa/playbooks/service/service-is-present-with-host-force-copy.yml`{.literal}，以进行编辑。在
    `ipa service`{.literal} 任务中找到 ipaadmin_password``{=html}
    和 `name`{.literal} 变量：
    ``` literallayout
    ---
    - name: Playbook to manage IPA service.
      hosts: ipaserver
      become: true
      gather_facts: false
      tasks:
      # Ensure service is present
      - ipaservice:
          ipaadmin_password: MyPassword123
          name: HTTP/ihavenodns.info