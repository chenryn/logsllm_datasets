User: How to configure the Nginx server to support the HTTPS protocol in the Linux system?
Assistant: 1. Generate the SSL certificate and private key First, generate the SSL certificate and private key in the Linux system. You can use the OpenSSL tool to generate a self-signed certificate. The command is as follows: ```bash openssl req -newkey rsa:2048 -nodes -keyout domain.key -x509 -days 365 -out domain.crt ``` Among them, -newkey specifies to generate 2048 RSA key, -keyout specifies the key output file name, -x509 specifies the self-signed certificate, -days specifies the certificate validity period, -out specifies the certificate output file name. After executing the command, enter the necessary information as prompted. 2. Configure Nginx to support HTTPS After generating the certificate and private key, you need to configure the Nginx server to support the HTTPS protocol. Edit the Nginx configuration file (usually /etc/nginx/nginx.conf), add the following configuration: ```nginx server { listen 443 ssl; server_name yourdomain.com; ssl_certificate /path/to/your/cert.crt; ssl_certificate_key / path/to/your/key.key; location / { # your other config goes here } } ``` Among them, listen specifies that Nginx listens to port 443 (HTTPS default port), server_name specifies the domain name (wildcards can be used), ssl_certificate and ssl_certificate_key Specify the paths of the SSL certificate and private key respectively. At the same time, change the original HTTP configuration (usually listening on port 80) to redirect to HTTPS, you can use the following configuration: ```nginx server { listen 80; server_name yourdomain.com; return 301 https://$server_name$ request_uri; } ``` 3. Restart the Nginx server After the configuration is complete, restart the Nginx server to take effect, execute the command: ```bash sudo service nginx restart ``` So far, configure the Nginx server to support the HTTPS protocol in the Linux system Has been completed.