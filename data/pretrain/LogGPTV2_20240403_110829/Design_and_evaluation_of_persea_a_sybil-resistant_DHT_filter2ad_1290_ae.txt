19.27
26.63
25.90
24.36
hop count (1 lookup)
3.09
2.69
2.75
3.80
3.70
3.48
 50 60 70 80 90 100 1 2 3 4 5 6 7 8 9Lookup success rate (%)hamadvfliccatytubastro 75 80 85 90 95 100 2 4 6 8 10Lookup success rate (%)hamadvfliccatytubastro 70 75 80 85 90 95 100 2 4 6 8 10Lookup success rate (%)hamadvfliccatytubastro10010210410610800.20.40.60.81ID Space (Log Scale)Cumulative Probability   Vanilla Balanced83this information into a usable identiﬁer. The bootstrap tree is one
approach to this, and the effectiveness of Persea suggests to us that
this broader idea has signiﬁcant potential and should be further ex-
plored.
8. ACKNOWLEDGMENTS
We thank our shepherd Aziz Mohaisen and the anonymous re-
viewers for their detailed comments and feedback. We also thank
Aziz Mohaisen for providing code and assistance for measuring
mixing times of social networks. This material is based upon work
supported by the National Science Foundation under Grant No.
CNS-1117866 and CAREER award number CNS-0954133.
9. REFERENCES
[1] L. Alvisi, A. Clement, A. Epasto, S. Lattanzi, and
A. Panconesi. SoK: The evolution of Sybil defense via social
networks. In IEEE S&P, 2013.
[2] D. G. Andersen, H. Balakrishnan, N. Feamster, T. Koponen,
D. Moon, and S. Shenker. Accountable Internet Protocol
(AIP). ACM SIGCOMM Computer Communication Review,
38(4):339–350, 2008.
[3] L. Bilge, T. Strufe, D. Balzarotti, and E. Kirda. All your
contacts are belong to us: Automated identity theft attacks on
social networks. In WWW, 2009.
[4] Y. Boshmaf, I. Muslukhov, K. Beznosov, and M. Ripeanu.
The socialbot network: when bots socialize for fame and
money. In ACSAC, 2011.
[5] Y. Boshmaf, I. Muslukhov, K. Beznosov, and M. Ripeanu.
Design and analysis of a social botnet. Computer Networks,
57(2):556–578, 2013.
[6] T. Cholez, I. Chrisment, and O. Festor. Evaluation of Sybil
attacks protection schemes in KAD. In AIMS, 2009.
[7] G. Danezis, C. Lesniewski-Laas, M. F. Kaashoek, and
R. Anderson. Sybil-resistant DHT routing. In ESORICS,
2005.
[8] G. Danezis and P. Mittal. SybilInfer: Detecting Sybil nodes
using social networks. In NDSS, 2009.
[9] J. R. Douceur. The Sybil attack. In IPTPS, 2002.
[10] D. Irani, M. Balduzzi, D. Balzarotti, E. Kirda, and C. Pu.
Reverse social engineering attacks in online social networks.
In DIMVA, 2011.
[11] C. Lesniewski-Laas. A Sybil-proof one-hop DHT. In
Workshop on Social Network Systems, 2008.
[12] C. Lesniewski-Laas and M. F. Kaashoek. Wh¯anau: A
Sybil-proof distributed hash table. In USENIX NSDI, 2010.
[13] B. Levine, C. Shields, and N. Margolin. A survey of
solutions to the Sybil attack. Technical Report 2006-052,
University of Massachusetts Amherst, 2006.
[14] Q. Lian, Z. Zhang, M. Yang, B. Y. Zhao, Y. Dai, and X. Li.
An empirical study of collusion behavior in the Maze P2P
ﬁle-sharing system. In IEEE ICDCS, 2007.
[15] J. Liang, N. Naoumov, and K. W. Ross. The index poisoning
attack in P2P ﬁle sharing systems. In INFOCOM, pages
1–12, 2006.
[16] X. Lou and K. Hwang. Prevention of index-poisoning DDoS
attacks in peer-to-peer ﬁle-sharing networks. Technical
Report TR-2006-5, USC Internet and Grid Computing Lab,
November 2006.
[17] P. Maymounkov and D. Mazieres. Kademlia: A peer-to-peer
information sytem based on the XOR metric. In IPTPS,
2002.
[18] D. Mazieres, M. Kaminsky, M. F. Kaashoek, and E. Witchel.
Separating key management from ﬁle system security. ACM
SIGOPS Operating Systems Review, 33(5):124–139, 1999.
[19] P. Mittal, M. Caesar, and N. Borisov. X-Vine: Secure and
pseudonymous routing in DHTs using social networks. In
NDSS, 2012.
[20] A. Mohaisen, A. Yun, and Y. Kim. Measuring the mixing
time of social graphs. In ACM IMC, 2010.
[21] A. Narayanan and V. Shmatikov. De-anonymizing social
networks. In IEEE S&P, 2009.
[22] S. Ratnasamy, P. Francis, M. Handley, R. M. Karp, and
S. Shenker. A scalable content-addressable network. In ACM
SIGCOMM, 2001.
[23] A. Rowstron and P. Druschel. Pastry: Scalable, decentralized
object location, and routing for large-scale peer-to-peer
systems. In Middleware, 2001.
[24] A. Singh, M. Castro, P. Druschel, and A. Rowstron.
Defending against eclipse attacks on overlay networks. In
ACM SIGOPS European Workshop, page 21. ACM, 2004.
[25] M. Sirivianos, X. Yang, and T. Pregueiro. Aiding the
detection of fake accounts in large scale social online
services. In USENIX NSDI, 2012.
[26] M. Steiner, T. En-Najjary, and E. W. Biersack. Exploiting
kad: possible uses and misuses. ACM SIGCOMM Computer
Communication Review, 37(5):65–70, 2007.
[27] I. Stoica, R. Morris, D. Karger, F. Kaashoek, and
H. Balakrishnan. Chord: A scalable peer-to-peer lookup
service for internet applications. In ACM SIGCOMM, 2001.
[28] N. Tran, J. Li, L. Subramanian, and S. S. Chow. Optimal
Sybil-resilient node admission control. In IEEE INFOCOM,
2011.
[29] B. Viswanath, M. Mondal, A. Clement, P. Druschel, K. P.
Gummadi, A. Mislove, and A. Post. Exploring the design
space of social network-based Sybil defenses. In
COMSNETS, 2012.
[30] B. Viswanath, A. Post, K. P. Gummadi, and A. Mislove. An
analysis of social network-based Sybil defenses. In ACM
SIGCOMM, 2010.
[31] W. Wei, F. Xu, C. C. Tan, and Q. Li. SybilDefender: Defend
against Sybil attacks in large social networks. In IEEE
INFOCOM, 2012.
[32] C. Wilson, B. Boe, A. Sala, K. P. Puttaswamy, and B. Y.
Zhao. User interactions in social networks and their
implications. In Eurosys, 2009.
[33] S. Wolchoky, O. S. Hofmanny, N. Heninger, E. W. Felten,
J. A. Halderman, C. J. Rossbach, B. Waters, and E. Witchel.
Defeating Vanish with low-cost Sybil attacks against large
DHTs. In NDSS, 2010.
[34] M. Yang, Z. Zhang, X. Li, and Y. Dai. An empirical study of
free-riding behavior in the Maze P2P ﬁle-sharing system. In
IPTPS, 2005.
[35] Z. Yang, C. Wilson, X. Wang, T. Gao, B. Y. Zhao, and
Y. Dai. Uncovering social network Sybils in the wild. In
ACM IMC, 2011.
[36] H. Yu, P. B. Gibbons, M. Kaminsky, and F. Xiao. SybilLimit:
A near-optimal social network defense against Sybil attacks.
In IEEE S&P, 2008.
[37] H. Yu, M. Kaminsky, P. B. Gibbons, and A. Flaxman.
SybilGuard: Defending against Sybil attacks via social
networks. In ACM SIGCOMM, 2006.
84Comparison with X-Vine. We compare Persea and X-Vine in
terms of lookup success rate and overhead, where the results for X-
Vine are taken from [19] and then we perform simulation on Persea
for the same dataset (New Orleans Facebook Friendship Graph) and
parameter (R = 5). The number of nodes and edges in this inter-
action graph are 63731 and 1545686, respectively. However, in
X-Vine [19] the number of nodes and edges are reduced to 50150
and 661850, respectively through pre-processing. So, while com-
paring Persea and X-Vine (see Figure 5), for each value of g/n the
number of attack edges are different for the two systems. In our
comparison, for X-Vine we consider two values (10 and 20) as the
number of successors.
The results for lookup success rate are shown in Figure 5 (see
§6.2), where we ﬁnd that Persea performs very similarly to X-Vine
for the given parameters. The mean lookup path length in Persea is
found less than that in X-Vine, where for R = 5 the mean lookup
path lengths for X-Vine are 13.7 (succ=10) and 10.7 (succ=20),
and for Persea the mean lookup path length is 4.4.
Table 6: Overhead for Node Failure
Overhead
Avg. Messages
in R Lookups
Avg. Hop-Count
in each of R Lookups
Failure (%) No Failure
adv (2.3)
ham (3.0)
ytub (3.0)
cat (8.0)
astro (8.0)
ﬂic (11.5)
18.61
15.32
17.43
22.54
23.65
23.2
15% No Failure
20.78
20.83
18.25
24.71
26.55
25.04
2.65
2.19
2.49
3.22
3.37
3.31
15%
2.96
2.98
2.61
3.53
3.79
3.57
Table 7: Overhead for Varying Attackers per Attack Edge
[g/n = 0.10]
Overhead
Avg. Messages
in R Lookups
Avg. Hop-Count
in each of R Lookups
Attackers per
attack edge
adv (2.3)
ham (3.0)
ytub (3.0)
astro (8.0)
ﬂic (11.5)
cat (8.0)
1
10
1
10
18.72
15.41
18.25
23.73
23.3
22.66
19.95
17.04
18.40
26.02
25.29
23.87
2.67
2.20
2.60
3.39
3.32
3.23
2.85
2.43
2.63
3.71
3.61
3.41
Figure 9: Lookup success rate for varying percentage of node
failure [g/n = 0.10]
APPENDIX
A. ADDITIONAL RESULTS
Measuring Mixing time. Mixing time represents the number of
steps required by a random walk to approach the uniform distri-
bution [20]. We measure the mixing time of networks used in our
simulation by using the codes and methodology provided by the
authors of [20], where the walk length at total variation distance
0.1 represents the lower bound of the mixing time of a network.
To measure the mixing time for large networks (e.g., ﬂic and cat),
we adopt the sampling technique described in [20] to get 25, 000
nodes for each network. For other networks, we use the largest
connected component to measure mixing time. Our results (see
Table 2) show that ﬂic, cat, and astro are relatively slow-mixing
compared to ham, adv, and ytub networks.
Results for node failure (g/n = 0.1). We evaluate for varying
percentage of node-failure having g/n = 0.1, where n represents
the number of total benign peers (alive+failed). For this experi-
ment, we consider that only benign peers fail in the system. Fig-
ure 9 illustrates the results. We ﬁnd that 99% lookups still succeed
in Persea, when 10% fail in a network of 149, 700 nodes.
Results for the distribution of g/n. For g/n = 1.0 in the whole
network, Table 3 shows the distribution of this ratio over different
levels of hierarchical ID space. Here, ﬂic has six levels and other
networks have eight levels in their hierarhcial ID space (see §6 for
a detailed explanation).
Additional overhead results. Table 6 compares the amount of
overhead for a Persea system with no failures and one with 15%
node failures, which should be considered high. We show both total
messages and hop count. The number of messages increases in the
high failure rate scenario by an average of 2.8 for R = 7 redundant
lookups across our social networks. The hop count increases by an
average of 0.41.
Table 7 compares the amount of overhead for a Persea system
with one attacker per attack edge and 10 attackers per attack edge.
When averaged across our social networks, the total number of
messages increases by 1.4 for R = 7 redundant lookups and the
hop count increases by 0.2.
 90 92 94 96 98 100 0 2 4 6 8 10 12 14Lookup success rate (%)Node failure (%)hamadvfliccatytubastro85