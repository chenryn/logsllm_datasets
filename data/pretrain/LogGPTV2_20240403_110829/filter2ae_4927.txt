# 利用Flash, PDF 和 Silverlight进行内容劫持的POC项目

## 译文声明
本文是翻译文章，原文来源：360安全播报。  
原文地址：[此处插入链接]  
译文仅供参考，具体内容和含义以原文为准。

## 许可证
本项目采用AGPL许可证发布（欲了解更多信息，请参阅许可证书）。

## 简介
此项目旨在证明以下概念：
1. 利用网站不安全的策略文件（如`crossdomain.xml`或`clientaccesspolicy.xml`），通过分析其内容来识别并利用漏洞。
2. 利用不安全的文件上传功能——即不对上传文件的内容进行检查，或者允许上传SWF或PDF文件但未在下载过程中添加`Content-Disposition`头信息。在此场景下，创建的SWF、XAP或PDF文件在上传时可以使用任何扩展名，例如将`.JPG`文件上传到目标网站。然后，“Object File”的值应设置为上传文件的URL，以便读取目标网站的内容。
3. 利用CVE-2011-2461漏洞（详细信息见参考文献）。
4. 利用网站中不安全的HTML5跨源资源共享(CORS)头部信息。

注意：虽然`.XAP`文件可以重命名成其他扩展名，但它们不能跨域加载。因此，Silverlight会根据提供的URL来查找文件扩展名，忽略是否为`.XAP`。如果一个网站允许用户在实际文件名后使用“;”或“/”添加`.XAP`扩展名，则可以利用这一点进行攻击。

## 使用方法
### 利用不安全的策略文件
1. 控制Web服务器上的内容劫持目录。
2. 在浏览器中浏览`index.html`页面（该页面会重定向到`ContentHijackingLoader.html`）。
3. 更改HTML页面中的“Object File”字段为“Object”目录（`xfa-manual-ContentHijacking.pdf`已不再可用）中的适当对象。

### 利用不安全的文件上传/下载功能
1. 将“Object”目录中的对象文件上传至受害者的服务器上。当上传到另一个域时，这些文件可以重命名为不同的扩展名（由于通常情况下来自另一域的修改扩展名的Silverlight XAP文件不可用，所以首先使用Flash，然后使用PDF）。
2. 将“Object File”字段设置为上传文件的位置。

### 利用CVE-2011-2461漏洞
1. 将“Object File”字段设置为易受攻击的文件。
2. 从下拉列表的“Type”字段中选择“Flash CVE-2011-2461 Only”。

### 利用不安全的CORS策略
1. 将“Object File”字段设置为本地的`ContentHijacking.html`文件。如果可以在目标域中上传HTML文件，则可以利用XSS问题，这比使用CORS更容易。

注意：当Silverlight跨域请求一个`.XAP`文件时，内容类型必须为`application/x-silverlight-app`。

注意：PDF文件只能用于Adobe Reader查看器（不适用于Chrome和Firefox内置的PDF查看器）。

注意：阅读静态内容或公开访问的数据并不是一个问题。重要的是要从报告中移除假阳性结果。此外，在“Access-Control-Allow-Origin”头部单独使用通配符“*”也不是一个问题。

### 示例
- 在带有Adobe Reader的IE中：
  ```
  https://15.rs/ContentHijacking/ContentHijackingLoader.html?objfile=https://15.rs/ContentHijacking/objects/ContentHijacking.pdf&objtype=pdf&target=https://0me.me/&postdata=param1=foobar&logmode=all&regex=owasp.*&isauto=1
  ```
- 在支持SWF的任意浏览器中：
  ```
  http://15.rs/ContentHijacking/ContentHijackingLoader.html?objfile=http://0me.me/ContentHijacking/objects/ContentHijacking.swf&objtype=flash&target=http://0me.me/&postdata=&logmode=result&regex=&isauto=1
  ```

## 安全建议
1. 允许上传的文件类型应仅限于业务功能所需的类型。
2. 应用程序应对上传到服务器的所有文件执行过滤和内容检查，并在提供给其他用户之前进行彻底扫描和验证。如有疑问，应丢弃文件。
3. 对静态文件的响应添加“Content-Disposition: Attachment”和“X-Content-Type-Options: nosniff”头部信息，以保护网站免受基于Flash或PDF的跨站点内容劫持攻击。建议对所有文件实施这一做法，以降低所有模块中的文件下载风险。尽管这种方法并不能完全防止使用Silverlight或其他类似对象的攻击，但它可以减轻使用Adobe Flash和PDF对象的风险，特别是当允许上传PDF文件时。
4. 如果没有使用Flash/PDF (`crossdomain.xml`) 或Silverlight (`clientaccesspolicy.xml`) 的跨域策略文件，或者没有使用Flash和Silverlight应用程序与网站通信的业务需求，则应删除这些跨域策略文件。
5. 应限制跨域访问，仅包含那些受信任且有访问需求的域。使用通配符时，访问策略被认为是脆弱或不安全的，特别是在“uri”属性值中存在通配符。
6. 任何用于Silverlight应用程序的`crossdomain.xml`文件都是脆弱的，因为它只接受域属性中的通配符（“*”字符）。
7. 应禁止`crossdomain.xml`和`clientaccesspolicy.xml`文件访问浏览器缓存。这使得网站能够轻松更新文件或在必要时限制对Web服务的访问。一旦客户端访问策略文件被检查，对于浏览器会话而言它仍然有效，无法访问缓存对终端用户的影响是最小的。根据目标网站的内容和策略文件的安全性和复杂性，这可以作为一个低风险的信息问题提出。
8. 应修复CORS头文件，使其仅支持静态或公开访问数据。此外，“Access-Control-Allow-Origin”头文件应仅包含授权地址。其他CORS头文件，如“Access-Control-Allow-Credentials”，应在需要时才使用。“Access-Control-Allow-Methods”或“Access-Control-Allow-Headers”等条目在不需要时应修复或删除。

注意：使用“Referer”头文件并不是一种解决方案，因为可以通过设置此头文件发送POST请求，从而使用Adobe Reader和PDF（详见“objects”目录中的“xfa-manual-ContentHijacking.pdf”文件）。更新：Adobe已经解决了设置“Referer”头文件的问题，除非找到其他方法。

## 项目主页
项目的最新更新和帮助请参见以下链接：
```
https://github.com/nccgroup/CrossSiteContentHijacking
```

## 作者
Soroush Dalili (@irsdl)，来自NCC组织

## 参考文献
- [上传一个JPG文件可能导致跨域数据劫持(客户端攻击)!](https://soroush.secproject.com/blog/2014/05/even-uploading-a-jpg-file-can-lead-to-cross-domain-data-hijacking-client-side-attack/)
- [多个PDF漏洞——Steroids上的文本和图片](http://insert-script.blogspot.co.at/2014/12/multiple-pdf-vulnerabilites-text-and.html)
- [HTTP通信和Silverlight安全](http://msdn.microsoft.com/en-gb/library/cc838250(v=vs.95).aspx)
- [跨域和Silverlight客户端访问策略文件的解释](http://www.devtoolshed.com/explanation-cross-domain-and-client-access-policy-files-silverlight)
- [跨域策略文件规范](http://www.adobe.com/devnet/articles/crossdomain_policy_file_spec.html)
- [为HTTP流媒体设置一个crossdomain.xml文件](http://www.adobe.com/devnet/adobe-media-server/articles/cross-domain-xml-for-streaming.html)
- [在google.com上利用CVE-2011-2461](http://blog.mindedsecurity.com/2015/03/exploiting-cve-2011-2461-on-googlecom.html)