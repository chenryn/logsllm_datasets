  * I have searched the issues of this repository and believe that this is not a duplicate.
  * I have checked the FAQ of this repository and believe that this is not a duplicate.
### Environment
  * Dubbo version: 2.7.4.1
  * Operating System version: win10
  * Java version: 1.8
### Steps to reproduce this issue
  1. create class implements org.apache.dubbo.rpc.Filter
  2. Write setter method on API fields , Field on @org.apache.dubbo.config.annotation.Reference
  3. run my app  
4.block DubboMetadataServiceProxy#initProxy() in
dubboMetadataServiceCache.computeIfAbsent Infinite loop
Pls. provide [GitHub address] to reproduce this issue.
### Expected Result
What do you expected from the above stepsï¼Ÿ
I want my app to start up properly
### Actual Result
What actually happens?
My application cannot be started, stuck in DubboMetadataServiceProxy#
initProxy here
If there is an exception, please attach the exception trace:
![image](https://user-
images.githubusercontent.com/18204507/75248936-1ef03080-5810-11ea-93f5-51c80e8f8717.png)
![image](https://user-
images.githubusercontent.com/18204507/75248763-bdc85d00-580f-11ea-84e2-0a661311ac21.png)
![image](https://user-
images.githubusercontent.com/18204507/75248641-8063cf80-580f-11ea-899a-76a25a74214b.png)
![image](https://user-
images.githubusercontent.com/18204507/75248568-5dd1b680-580f-11ea-951f-5c409ddb687f.png)
    Just put your stack trace here!
    at java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1673)
    	at com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy.initProxy(DubboMetadataServiceProxy.java:52)
    	at com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository.initDubboMetadataServiceProxy(DubboServiceMetadataRepository.java:647)
    	at com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository.lambda$null$4(DubboServiceMetadataRepository.java:625)
    	at java.util.ArrayList.forEach(ArrayList.java:1257)
    	at com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository.lambda$initSubscribedDubboMetadataService$5(DubboServiceMetadataRepository.java:621)
    	at java.util.Optional.ifPresent(Optional.java:159)
    	at com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository.initSubscribedDubboMetadataService(DubboServiceMetadataRepository.java:620)
    	at com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository.initializeMetadata(DubboServiceMetadataRepository.java:292)
    	at com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository$$FastClassBySpringCGLIB$$4ef4b7bd.invoke()
    	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
    	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
    	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
    	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
    	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
    	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
    	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
    	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
    	at com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository$$EnhancerBySpringCGLIB$$aec22326.initializeMetadata()
    	at com.alibaba.cloud.dubbo.registry.AbstractSpringCloudRegistry.subscribeDubboServiceURL(AbstractSpringCloudRegistry.java:257)
    	at com.alibaba.cloud.dubbo.registry.AbstractSpringCloudRegistry.lambda$doSubscribeDubboServiceURLs$0(AbstractSpringCloudRegistry.java:206)
    	at java.lang.Iterable.forEach(Iterable.java:75)
    	at java.util.Collections$UnmodifiableCollection.forEach(Collections.java:1082)
    	at com.alibaba.cloud.dubbo.registry.AbstractSpringCloudRegistry.doSubscribeDubboServiceURLs(AbstractSpringCloudRegistry.java:206)
    	at com.alibaba.cloud.dubbo.registry.AbstractSpringCloudRegistry.subscribeDubboServiceURLs(AbstractSpringCloudRegistry.java:172)
    	at com.alibaba.cloud.dubbo.registry.AbstractSpringCloudRegistry.doSubscribe(AbstractSpringCloudRegistry.java:166)
    	at org.apache.dubbo.registry.support.FailbackRegistry.subscribe(FailbackRegistry.java:295)
    	at org.apache.dubbo.registry.integration.RegistryDirectory.subscribe(RegistryDirectory.java:172)
    	at org.apache.dubbo.registry.integration.RegistryProtocol.doRefer(RegistryProtocol.java:412)
    	at org.apache.dubbo.registry.integration.RegistryProtocol.refer(RegistryProtocol.java:393)
    	at org.apache.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:69)
    	at org.apache.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:71)
    	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:128)
    	at org.apache.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
    	at org.apache.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:396)
    	at org.apache.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:329)
    	at org.apache.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:250)
    	at org.apache.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:73)
    	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:171)
    	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:101)
    	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1818)
    	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getObjectForBeanInstance(AbstractAutowireCapableBeanFactory.java:1266)
    	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:260)
    	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:227)
    	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1155)
    	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveBean(DefaultListableBeanFactory.java:416)
    	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:349)
    	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:342)
    	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1126)
    	at org.apache.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:94)
    	at org.apache.dubbo.common.extension.factory.AdaptiveExtensionFactory.getExtension(AdaptiveExtensionFactory.java:47)
    	at org.apache.dubbo.common.extension.ExtensionLoader.injectExtension(ExtensionLoader.java:570)
    	at org.apache.dubbo.common.extension.ExtensionLoader.createExtension(ExtensionLoader.java:532)
    	at org.apache.dubbo.common.extension.ExtensionLoader.getExtension(ExtensionLoader.java:346)
    	at org.apache.dubbo.common.extension.ExtensionLoader.getActivateExtension(ExtensionLoader.java:230)
    	at org.apache.dubbo.common.extension.ExtensionLoader.getActivateExtension(ExtensionLoader.java:194)
    	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper.buildInvokerChain(ProtocolFilterWrapper.java:55)
    	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:130)
    	at org.apache.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
    	at org.apache.dubbo.registry.integration.RegistryDirectory.toInvokers(RegistryDirectory.java:423)
    	at org.apache.dubbo.registry.integration.RegistryDirectory.refreshInvoker(RegistryDirectory.java:280)
    	at org.apache.dubbo.registry.integration.RegistryDirectory.refreshOverrideAndInvoker(RegistryDirectory.java:239)
    	at org.apache.dubbo.registry.integration.RegistryDirectory.notify(RegistryDirectory.java:233)
    	at com.alibaba.cloud.dubbo.registry.AbstractSpringCloudRegistry.subscribeDubboMetadataServiceURLs(AbstractSpringCloudRegistry.java:352)
    	at com.alibaba.cloud.dubbo.registry.AbstractSpringCloudRegistry.doSubscribe(AbstractSpringCloudRegistry.java:163)
    	at org.apache.dubbo.registry.support.FailbackRegistry.subscribe(FailbackRegistry.java:295)
    	at org.apache.dubbo.registry.integration.RegistryDirectory.subscribe(RegistryDirectory.java:172)
    	at org.apache.dubbo.registry.integration.RegistryProtocol.doRefer(RegistryProtocol.java:412)
    	at org.apache.dubbo.registry.integration.RegistryProtocol.refer(RegistryProtocol.java:393)
    	at org.apache.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:69)
    	at org.apache.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:71)
    	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:128)
    	at org.apache.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
    	at org.apache.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:396)
    	at org.apache.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:329)
    	at org.apache.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:250)