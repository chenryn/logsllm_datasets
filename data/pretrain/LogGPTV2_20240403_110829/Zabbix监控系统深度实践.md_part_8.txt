## 优化后的文本

### 图表引用
- **图4-15**
- **图4-14**

### 数据点
- 9.75G8
- 7.8G
- 5.44
- (ih)
- 18:5
- a:54
- 08:5
- 08:5
- 109:02
- 1.04
- 9:08

---

## 第52页

在配置自定义监控项时，使用`key`来与后端脚本关联。例如，用于检查本地运行的MySQL是否正常，返回值为0或1。我们可以在前端配置Item以添加自定义监控点。

#### 示例
```sh
UserParameter=test_mysql,sh /tmp/mysql.sh
```
对于自定义监控点，只需提供一个可以输出值的脚本即可。假设有一个名为 `mysql.sh` 的脚本：

```sh
[apps@vlp-developer-201-234 zabbix]$ zabbix_get -s localhost -k test_mysql
```

如果 `mysql.sh` 需要传入参数（如监控远程服务器的MySQL），格式如下：
```sh
UserParameter=mysql[*], sh /tmp/mysql.sh $1
```

除了在Events中，还可以在“Monitoring”→“Triggers”中查看某个Trigger的历史状态。Zabbix会捕获异常，并不仅显示错误报警，还会在问题恢复时进行通知。

---

## 第53页

如果定义了大量 `UserParameter`，配置文件将难以阅读。Zabbix支持将这些配置写入单独的文件中。例如，将 `UserParameter=test_mysql, sh /tmp/mysql.sh` 写入 `zabbix_mysql.conf` 文件，然后在 `zabbix_agentd.conf` 中通过 `Include` 指令指定该文件路径。

#### 参数传递
- `key[1]`：根据“1”运行 `awk '{print $1}'`。
- `*`：方括号中可以有任意多的参数，每个参数由逗号分隔，分别为 `Y1`, `Y2` 等。

---

## 第54页

### 目录
- ★第11章 Discovery
- ★第10章 Zabbix前端界面
- ★第9章 IT服务监控与Web监控
- ★第8章 Users和Macros
- ★第7章 数据可视化
- ★第6章 报警配置
- ★第5章 增加监控
- ★第二部分 配置篇

---

## 第55页

### 第5章 增加监控

**Template** 名称如图5-1所示。一组 Item、Graph 和 Trigger 的集合可以构成一个 Template。

- **Item 和 Host 关联**：一种是 Item 先与 Template 关联，再与 Host 关联；另一种是 Item 直接与 Host 关联。
- **Host**：是最小的物理实体，通常指服务器或网络设备。Host 上会有 Item、Trigger 和 Graph。

当 Item 收到新数据时，如果有 Trigger 与之关联，Zabbix 会根据 Item 的值检查 Trigger，生成 Event。如果有符合要求的 Action，就会执行相应的操作。

#### 主机详细信息
- **Template上的Item**：会在 Item 前显示 Template 名称。
- **Server**：根据 Item 的 Interval 从 Agent 获取数据。

---

## 第56页

### 5.1 Host 配置

- **Host name**：唯一标识符，允许字母、数字、空格和下划线。
- **Visible name**：在列表和地图中显示的名字，支持 UTF-8 编码。
- **Host group**：一些 Host 的分组，例如按机房分组。

#### Host 标签页
- **Monitored by proxy**：选择被哪个 Proxy 监控。
- **Agent Interfaces**：添加接口，包括 IP 地址、DNS 名字、端口等。
- **SNMP Interface**：获取硬件设备信息。
- **JMX Interface**：监控 Java 应用。
- **IPMI Interface**：获取服务器硬件信息和远程管理。

---

## 第57页

### 2. Template 标签页

- **Unlink**：移除 Template 和 Host 的关联关系。
- **Unlink and Clear**：取消关联并清除 Template 上的 Item 与 Host 的关联。

#### 接口类型
- **Agent Interface**：Zabbix Agent 监控接口。
- **SNMP Interface**：SNMP 协议监控。
- **JMX Interface**：Java 应用监控。
- **IPMI Interface**：服务器硬件监控。

---

## 第58页

### 5. Inventory 标签页

Inventory 指的是 Host 的硬件信息或资产信息，如地理位置、CPU 型号和系统版本等。可以通过手动或自动方式输入。

#### 自动更新
- **设置 Item**：设置需要的 Item 并将其值写入 Inventory 字段。
- **取消关联**：如果不想将某个 Item 的值作为 Inventory 的值，可以取消关联。

---

## 第59页

### 5.2 Item 属性

- **Name**：Item 的名称。
- **Key**：唯一的属性标识。
- **Type**：取值类型，如 Numeric (float)、Numeric (unsigned) 等。
- **Update Interval**：每 N 秒获取一次数值。
- **Flexible intervals**：根据不同时间设置不同的 Update Interval。
- **Store value**：数据获取后的操作。
- **Keep trends**：保存每小时的 min、max、avg、count 值。
- **Units**：对返回值进行单位转换处理。

#### 示例
- **Name**: Y1 空余空间
- **Key**: vfs.fs.size[/,free]
- **Type**: Numeric (unsigned)

---

希望以上优化后的文本更加清晰、连贯和专业。如果有任何进一步的修改需求，请告知。