title:A Multi-tab Website Fingerprinting Attack
author:Yixiao Xu and
Tao Wang and
Qi Li and
Qingyuan Gong and
Yang Chen and
Yong Jiang
A Multi-tab Website Fingerprinting Aack
Yixiao Xu1, Tao Wang2, Qi Li1, Qingyuan Gong3, Yang Chen3, Yong Jiang1
1Graduate School at Shenzhen & Department of Computer Science, Tsinghua University, China
2Department of Computer Science and Engineering, Hong Kong University of Science and Technology, Hong Kong
3School of Computer Science, Fudan University, China
{xu-yx16@mails,qi.li@sz,yjiang@sz}.tsinghua.edu.cn, PI:EMAIL, {chenyang,gongqingyuan}@fudan.edu.cn
ABSTRACT
In a Website Fingerprinting (WF) attack, a local, passive eaves-
dropper utilizes network ow information to identify which web
pages a user is browsing. Previous researchers have extensively
demonstrated the feasibility and eectiveness of WF, but only un-
der the strong Single Page Assumption: the network ow extracted
by the adversary always belongs to a single page. In other words,
the WF classier will never be asked to classify a network ow
corresponding to more than one page, or part of a page. The Single
Page Assumption is unrealistic because people often browse with
multiple tabs. When this happens, the network ow induced by
multiple tabs will overlap, and current WF attacks fail to classify
correctly.
Our work demonstrates the feasibility of WF with the relaxed
Single Page Assumption: we can attack a client who visits more
than one pages simultaneously. We propose a multi-tab website n-
gerprinting attack that can accurately classify multi-tab web pages
if they are requested and sequentially loaded over a short period
of time. In particular, we develop a new BalanceCascade-XGBoost
scheme for an attacker to identify the start point of the second
page such that the attacker can accurately classify and identify
these multi-tab pages. By developing a new classier, we only use
a small chunk of packets, i.e., packets between the rst page’s start
time to the second page’s start time, to ngerprint website. Our
experiments demonstrate that in the multi-tab scenario, WF attacks
are still practically eective. We have an average TPR of 92.58% on
SSH, and we can also averagely identify the page with a TPR of
64.94% on Tor. Specially, compared with previous WF classiers,
our attack achieves a signicantly higher true positive rate using a
restricted chunk of packets.
Figure 1: Illustration for the terminology of this paper,
where black circles are the non-overlapped packets of the
rst page, white circles are overlapped packets of the rst
page, and grey circles are the packets of the second page.
ACM Reference Format:
Yixiao Xu, Tao Wang, Qi Li, Qingyuan Gong, Yang Chen, Yong Jiang. 2018. A
Multi-tab Website Fingerprinting Attack. In 2018 Annual Computer Security
Applications Conference (ACSAC’18), December 3-7, 2018, San Juan, Puerto
Rico, USA. ACM, NewYork, NY, USA, 15 pages. https://doi.org/10.1145/32746-
94.3274697
1 INTRODUCTION
When a client is browsing the web, she inevitably reveals her desti-
nation website to all on-path routers. ISPs who are running these
routers may passively observe and collect clients’ information for
prot or due to legal pressure. Privacy enhancing technologies, such
as Tor, can protect the client from such threats by encrypting her
network ow and hiding the true source and destination through
proxies. Even then, an attacker can still compromise a client’s pri-
vacy by observing patterns in the network ow without decrypting
them, using a technique known as Website Fingerprinting (WF). A
site may prove to be uniquely identiable from the order, number,
size, and direction of the transferred network ow.
Recently, several studies have demonstrated the eectiveness of
WF attacks [6, 11, 21]. However, Juarez et al. [14] criticized these
works for overestimating the attacker’s abilities. They highlighted
the following critical assumption in all previous WF works, which
we refer to as the Single Page Assumption: “The attacker knows
when each web page starts loading and when it ends.” Unfortunately,
in practice, the assumption does not always hold [14, 23, 27]. In
particular, users may want to open multiple tabs in their browsers,
e.g., for the purpose of prefetching pages. Juarez et al. showed that
without the assumption, WF attacks are highly inaccurate; yet, the
Single Page Assumption remains unresolved.
In this paper, we propose a new WF attack that relaxes the Single
Page Assumption. What allows the attack to succeed in addressing
the Single Page Assumption is that we can split sequential multi-tab
pages and classify accurately only the small chunk of packets of
the rst pages, e.g., even only using two seconds of data. Figure 1
CCS CONCEPTS
• Security and privacy → Domain-specic security and pri-
vacy architectures; • Networks → Network privacy and anonymity;
KEYWORDS
Website ngerprinting attack, Machine learning
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for prot or commercial advantage and that copies bear this notice and the full citation
on the rst page. Copyrights for components of this work owned by others than ACM
must be honored. Abstracting with credit is permitted. To copy otherwise, or republish,
to post on servers or to redistribute to lists, requires prior specic permission and/or a
fee. Request permissions from permissions@acm.org.
ACSAC ’18, December 3–7, 2018, San Juan, PR, USA
© 2018 Association for Computing Machinery.
ACM ISBN 978-1-4503-6569-7/18/12...$15.00
https://doi.org/10.1145/3274694.3274697
327
ACSAC ’18, December 3–7, 2018, San Juan, PR, USA
Y. Xu, T. Wang, Q. Li, Q. Gong, Y. Chen, and Y. Jiang
illustrates the terminology and scenario of this paper. A client loads
multiple pages simultaneously, with a small time gap between
their start times. The rst page is loaded, and after some time
(corresponding to the split point), the second page is loaded; the
packets of the second page overlap with that of the rst. We discard
the overlapping chunk entirely and classify web pages using the
initial chunk of packets, i.e., packets before the second pages. In
order to achieve this goal, the attacker must correctly identify the
split point by utilizing a split nding algorithm to obtain the chunk
and classify pages with the restricted chunk of packets.
To develop a successful WF attack with relaxing the Single Page
Assumption, we make the following novel contributions:
(1) We propose a multi-tab ngerprinting attack that allows an
attacker to classify web pages with multi-tabs, which is not
well addressed by the literature.
(2) We present a new BalanceCascade-XGBoost algorithm to
accurately identify the split point, given a combination of
two pages.
(3) We develop a new classier based on random forests, which
accurately classies web pages given only the initial chunk
of packets according to the selected features.
(4) Experimentally, we veried the success of our new WF at-
tack in a multitude of scenarios, including datasets collected
with SSH, Tor, and under several recently proposed defenses
against WF. We found that our new WF attack can achieve
93.88% True Positive Rate (TPR) on two seconds of the initial
chunk against SSH-loaded data. It can also achieve 77.08%
TPR on six seconds of the initial chunk against Tor-loaded
data, which beats the previous best attack, i.e., k-FP [11], by
more than 9%.
The rest of the paper is organized as follows. In Section 2, we
present the threat model and introduce related work. We present
the framework of our new WF attack in Section 3. We present our
BalanceCascade-XGBoost algorithm to split pages in Section 4 and
classify pages in Section 5. We evaluate the eectiveness of our
attack in Section 6. Section 7 concludes the paper.
2 PROBLEM STATEMENT AND RELATED
WORK
2.1 Multi-tab Threat Model
In the WF threat model, the adversary records the encrypted net-
work ow between the victim and the proxy. To determine whether
the encrypted network ow is generated by a targeted page, the
adversary constructs his ngerprint database by extracting various
network ow features of the targeted page, such as the directions
and sizes of packets. The adversary eavesdrops on the victim’s
network ow and classies the victim’s network ow using a su-
pervised classier trained on his ngerprint database.
When the victim opens multiple tabs simultaneously, the browser
generates overlapped network ows corresponding to dierent
pages through the same connection. The attacker cannot distinguish
between overlapped network ows [14, 27]. To avoid this issue,
WF attacks are evaluated with the Single Page Assumption: only
one page is visited at a time and no background network ow is
generated. The assumption is unrealistic. Network ows generated
328
by the same client are always overlapped [14, 23, 27]. Juarez et al.
showed that current WF attacks fail against overlapped network
ows [14].
In this work, we address the Single Page Assumption and extend
the threat model. In the extended threat model, the client visits a
page, waits for a short period (referred to as the delay), and opens
another page in a new tab, which is called sequential multi-tabs (for
short, multi-tabs). If the rst page does not nish loading before the
time gap, the two pages will be loaded simultaneously, and their
network ows will overlap. With such sequential multi-tab pages,
only the initial chunk is clear and can be used to launch the nger-
printing attack. Therefore, the goal of our attack is to ngerprint
a website by accurately identifying the rst page obtained from
the website. For easy illustration, this paper focuses on the two-tab
scenario. In Section 6.5, we will illustrate that our attack is still
eective if there are more than two sequential pages.
2.2 Related work
Single Page Website Fingerprinting Attack Single page web-
site ngerprinting attacks use the whole network ow to identify
web pages visited by clients [2, 5, 6, 9, 12, 13, 16, 18, 22, 24]. In
2014, based on more than 3000 features extracted from network
ows, Wang et al. [25] presented a k-Nearest Neighbours (kNN)
classier with weight adjustment, which achieves TPR of 0.85 and
FPR of 0.006 on Tor. In 2016, Panchenko et al. [21] presented a new
approach, CUMUL, which uses SVM with only 104 features; they
showed that CUMUL achieves better results than kNN. Hayes et
al. [11] created a K-FP attack that utilizes random forests to extract
ngerprints for each network ow and then train a kNN classier
by the ngerprints. This attack shows better results under defenses
compared with Wang’s kNN attack and Panchenko’s CUMUL at-
tack. Unfortunately, these attacks cannot eectively identify pages
if there exist multiple tabs.
Multi-tab Website Fingerprinting Attack Juarez et al [14] showed
that known WF attacks fail without the Single Page Assumption:
they cannot identify two pages that are loaded simultaneously.
There are two major works that have attempted to address this
issue. Gu et al. [10] relaxed the assumption about browsing behav-
ior and presented a WF attack on the multi-tab scenario. Using
the same extended threat model as ours, they selected ne-grained
features such as packet order to identify the rst page and utilized
coarse features to identify the second page. With a delay of two
seconds, when accessing the top 50 websites using SSH, according
to Alexa, their attack can classify the rst page with 75.9% TPR,
and the second page with 40.5% TPR in the closed-world setting
where all the pages are monitored. Our attack achieves a higher n-
gerprinting accuracy by nding accurate split points of the second
pages. Even with the same split points, our attack shows a much
higher TPR on the rst page.
The work of Wang and Goldberg [27] is most closely related
to our approach. They attempted to separate network ows using
either a noticeable time gap or their split nding algorithm, i.e.,
time-based KNN (time-kNN). Then, they classied split pages using
the kNN attack from 2014 [25]. The eectiveness of the attack is
limited whenever two pages were loaded simultaneously. We will
show a superior split nding algorithm using BalanceCascade on
A Multi-tab Website Fingerprinting Aack
ACSAC ’18, December 3–7, 2018, San Juan, PR, USA
XGBoost as well as a WF classier better suited for classifying a
small chunk of packets, which ensures that our attack achieves the
accuracy of multi-tab ngerprinting.
3 OVERVIEW OF MULTI-TAB ATTACKS
In this section, we present a new WF attack that eectively nger-
prints web pages opened with multiple tabs. Our attack aims to
relax the Single Page Assumption used in the existing WF attacks.
It aims to accurately identify pages with multiple tabs by classi-
fying the pages only with the initial chunks. In order to achieve
this, we develop two classiers, the rst one is used to identify the
split points of the pages and the second one is to classify the pages
according to the initial chunks after page split.
The key observation behind our attack is that, if clients want to
open pages with multi-tab pages, they normally open the second
page after some delay, i.e., sequential multi-tab pages. For example,
a client may spends reading some contents of the rst page before
selecting a link to a new page [23]. Thus, our attack should be
able to always identify pages visited by clients as long as it can
successfully identify the split points of the pages and obtain the
rst chunks for page classication. However, it is challenging to
achieve the goal. In particular, in order to construct the multi-tab
attack, we should answer the following two questions in this paper.
• Is it possible to accurately identify split points of dierent pages?
In particular, the pages are opened by various clients with arbi-
trarily delay.
• Is it possible to classify the rst chunks after the split such that
an attacker can accurately identify the pages? Specially, the rst
chunks are with a small number of packets.
Note that, in theory, we could identify web pages with any num-
bers of tabs as long as we can successfully obtain the rst chunks of
the pages. For simplicity, in this paper, we only consider the attack
with two-tab pages to demonstrate the feasibility of the attack.
4 DYNAMIC PAGE SPLIT
In this section, we present our page nding algorithm that allows
an attacker to accurately understand when the second page starts
so that the attacker can identify the page with the initial chunk.
4.1 Challenges in Identifying True Split Points
We extract 23 features according to the study of Wang and Gold-
berg [27] to identify split points of the pages. As mentioned above,
the split point we want to nd is the start point of the second page,
which we refer to as the “true split”. It allows us to eliminate the
noise of the second page and obtain all the non-overlapped part
of the rst page. In the web browsing process, a client sends an
outgoing packet to request web page resources from the server,
which means that the start point of the second page can be any
outgoing packet.
However, loading a web page may trigger multiple outgoing
packets, one of which is “true split” of the pages. It is dicult to
nd the “true split”. In particular, the number of outgoing packets is
large. In order to correctly identify the second pages, in the training
phase, we should place the true split in the “true splits” class and
all other outgoing packets in the “false splits” class. Thus, there
are only one “true split” and multiple “false splits” in the analyzed
network ow instance, which incurs an unbalanced classication
issue. According to our study with real datasets, we nd that the
proportion of positive and negative instances can reach 1:461. The
goal of most existing learning algorithms is to reduce the overall
classication error. In these algorithms, all instances are treated
equally and the error of the dierent classes of misclassication is
the same. Considering the ratio of the number of the “true splits”
class to that the “false splits” class in our datasets, even though
all the instances are predicted as the “false splits” class and the
accuracy of our classier can reach 99.78%, we cannot accurately
identify most “true splits”. The unbalanced training set will lead to
the result that the classier classies the “false splits” class with
high classication accuracy and the “true splits” class with low
classication accuracy. Thereby, it is challenging to use a classier
to nd the start point of the second page.
4.2 BalanceCascade-XGBoost Algorithm
To address this issue, we propose our split nding algorithm, i.e.,
BalanceCascade-XGBoost, which is an undersampling method com-
bining the BalanceCascade method [17] and the XGBoost classi-
er [7] to train a binary classier. In the testing phase, the classier
calculates the individual probability of every outgoing packet be-
longing to the “true splits”, and then classier guesses the most
probable outgoing packet that may be the “true splits”. We ran-
domly obtain multiple b “false split” class instances and one “true
splits” class instance from each network ow.
Given our training dataset D, where the ratio of the number of
classes in “false splits” class N to the number of instances in “true
splits” class P is b:1. In our BalanceCascade-XGBoost algorithm,
each time we randomly select Ni from N, where |Ni| = |P| (i is the
round of sampling), and then compose a training subset Di by using
Ni and P. Then we train a kNN classier [8]1 with default parameter
k=1 using training subset Di, and then remove the instances in
N that are correctly classied by kNN classier. We continue to
sample another training subset D j from D. In the end, with the help
of BalanceCascade, we have a collection of Di ,i = 1...n training
subsets, Di = {(x j , j )}(|Di| = 2|P|,x j 2 Rm, j 2 {0,1}), where
x j is a feature vector extracted from candidate split points,  j = 0
is the “false splits” class, 1 for the “true splits” class, and m is the
dimension of the feature vector.
Moreover, we utilize the XGBoost classier [7] in our Balance-
Cascade-XGBoost algorithm to boost trees on a large amount of data.
XGBoost is a massive parallel boosted tree tool, which is a widely
used boosted tree tool and achieves more than ten times faster than
the other popular classiers. We train an XGBoost classier with
each training subset Di. The hypothesis function of XGBoost is
an ensemble of regression trees, where regression tree [4] is a tree
whose leaf node stores a class value that represents the average
value of each leaf node’s instances. When we solve our binary-class
task, the ensemble of regression trees outputs a real number value
and XGBoost uses the Sigmoid function to convert the output to
be a value close to 0 or 1, where 0 is the probability of being “false
splits” class, and 1 is the probability of being “true split” class. In
1Our algorithm uses the kNN classier instead of the AdaBoost classier used in
the original BalanceCascade algorithm since the kNN classier can achieve better
performance according to our study.
329
ACSAC ’18, December 3–7, 2018, San Juan, PR, USA
Y. Xu, T. Wang, Q. Li, Q. Gong, Y. Chen, and Y. Jiang
the construction of XGBoost, regression trees are constructed one
by one incrementally, and thus it is impossible for XGBoost to
construct each tree in parallel. Fortunately, the training data can be
sorted in advance before training so that it can be organized with
a block structure. This block structure makes parallelism possible.
During the splitting of a node, the gain of each feature will be re-
calculated, and the gain calculation of each feature can be performed
by multiple threads.
We use each Di training subset to train a weak XGBoost classi-
er fi, and then combine all the weak classier to compose a nal
classier F (x ) “ensemble of XGBoost”, which actually is an “ensem-
ble of forests of regression trees”. Here we have n training subsets.
The hypothesis function of our nal classier can be computed as
follows.
F (x ) =
fi (x ).
(1)
1
n
nXi=1
To nd the true split, the classier tests every outgoing packet in
the network ow and then outputs the probability of each candidate
split point. Finally, the classier returns the outgoing packet that
has the highest probability of being the true split.
5 CHUNK-BASED PAGE CLASSIFICATION
In this section, we develop a classier to classify the initial chunks