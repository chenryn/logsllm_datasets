# Title: An End-to-End System for Large-Scale P2P MPC-as-a-Service and Low-Bandwidth MPC for Weak Participants

## Authors:
- Assi Barak
- Martin Hirt
- Lior Koskas
- Yehuda Lindell

## Abstract
Secure multiparty computation (MPC) protocols enable a set of parties to compute a joint function of their inputs while preserving privacy, correctness, and other security properties. In theory, MPC has broad applicability and can address many modern concerns related to data utilization and privacy. Significant progress has been made in recent years, with protocols now capable of performing large computations efficiently, particularly in the presence of an honest majority. However, practical deployment, especially in a decentralized manner, remains challenging.

In this paper, we introduce the first end-to-end automated system for deploying large-scale MPC protocols between end users, called MPSaaS (MPC System-as-a-Service). Our system allows parties to pre-enroll in upcoming MPC computations and participate by running software on a virtual machine (VM) instance (e.g., in Amazon), a mobile app, JavaScript in a browser, or even on an Internet of Things (IoT) device. The system includes an automation system for deploying MPC protocols, an administration component for setting up MPC computations and inviting participants, and an end-user component for running the MPC protocol in realistic environments. We demonstrate our system through a specific application of running secure polls and surveys, where the secure computation is executed end-to-end with each party actively participating.

One of the cryptographic challenges in this setting is the low bandwidth connections of end users, which makes it difficult to run high-bandwidth MPC protocols. To address this, we present HyperMPC, a protocol based on Beerliova-Trubiniova and Hirt (TCC 2008) with numerous optimizations. HyperMPC has very low communication requirements, making it suitable for small fields and both arithmetic and Boolean circuits. Our protocol is secure as long as less than a third of the parties are malicious. Performance benchmarks show that 150 parties can compute statistics—mean, standard deviation, and regression—on 4,000,000 inputs (with a circuit of 16,000,000 gates, including 6,000,000 multiplications) in just 45 seconds. Additionally, 150 parties can compute a circuit over GF[2^8] (suitable for Boolean computations) with 1,000,000 multiplication gates and depth-20 in just 2 seconds. Although our end-to-end system can run any MPC protocol, we demonstrate it with HyperMPC, which is optimized for end-users with limited bandwidth.

## 1. Introduction

### 1.1 Background
Secure multiparty computation (MPC) allows a set of parties to securely compute a function on their private inputs, ensuring the secrecy of the inputs and the correctness of the output, even in the presence of malicious parties. The feasibility of MPC was proven in the late 1980s, showing that any functionality can be securely computed with various security guarantees. While significant progress has been made in constructing efficient MPC protocols, practical deployment, especially in peer-to-peer (P2P) settings, remains challenging.

### 1.2 An End-to-End System for P2P MPC
In this paper, we describe MPSaaS, a full-featured end-to-end MPC system designed for large-scale secure computations between end users. Our goal is to create an MPC system that works like modern software, allowing end users to participate in MPC executions on platforms they commonly use, such as mobile apps, web browsers, and IoT devices, without requiring software installation or server allocation. The system operates in a software-as-a-service (SaaS) model, with a cloud service provider offering the MPC service, subscribers initiating MPC executions, and end users participating in these executions. Crucially, end users need not trust anyone but themselves, as they are active participants in the MPC. The system must be elastic, cost-effective, and not require out-of-pocket expenditure.

MPSaaS consists of three main components:
1. **Automation Backend**: This backend automates the deployment of MPC executions, including environment setup in AWS or Azure, execution coordination, and result collection. It supports multiple protocols and is open-source.
2. **Administrator Component**: This component allows providers to invite participation in secure computations, publish proposed computations, track registrations, and obtain results. It focuses on input privacy rather than participant anonymity.
3. **End-User Execution**: This component provides a software layer for running MPC on end-user devices, including mobile phones, browsers, and IoT devices.

We demonstrate the system with an MPC-based private polling solution for conducting surveys while keeping inputs private.

### 1.3 HyperMPC – A Low-Bandwidth Protocol
Deploying MPC protocols for end users with low bandwidth is challenging due to the high communication requirements. To address this, we present HyperMPC, a new protocol based on [5] with significant optimizations. HyperMPC is secure against adaptive, malicious adversaries corrupting up to t < n/3 parties and is highly efficient, especially for small fields and both arithmetic and Boolean circuits. Performance benchmarks show that HyperMPC can handle large-scale computations with minimal bandwidth, making it well-suited for MPSaaS.

## Acknowledgments
This work appeared at ACM CCS 2018. It was supported by the European Research Council under the ERC consolidators grant agreement n. 615172 (HIPS), the BIU Center for Research in Applied Cryptography and Cyber Security in conjunction with the Israel National Cyber Directorate in the Prime Minister’s Office, and the Alter Family Foundation.

- Assi Barak, Yehuda Lindell, Lior Koskas: Department of Computer Science, Bar-Ilan University, Israel.
- Martin Hirt: ETH Zurich, Switzerland.