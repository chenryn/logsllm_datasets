title:A New Approach for Anonymous Password Authentication
author:Yanjiang Yang and
Jianying Zhou and
Jian Weng and
Feng Bao
2009 Annual Computer Security Applications Conference
A New Approach for Anonymous Password Authentication
Yanjiang Yang, Jianying Zhou
Institute for Infocomm Research
Singapore 138632, Singapore
Email: {yyang,jyzhou}@i2r.a-star.edu.sg
Jian Weng
Jinan University, Guangzhou, China
& Singapore Management University
Feng Bao
Institute for Infocomm Research
Singapore 138632, Singapore
Email: PI:EMAIL
Email: PI:EMAIL
Abstract—Anonymous password authentication reinforces
password authentication with the protection of user privacy.
Considering the increasing concern of
individual privacy
nowadays, anonymous password authentication represents a
promising privacy-preserving authentication primitive. How-
ever, anonymous password authentication in the standard
setting has several inherent weaknesses, making its practicality
questionable. In this paper, we propose a new and efﬁcient ap-
proach for anonymous password authentication. Our approach
assumes a different setting where users do not register their
passwords to the server; rather, they use passwords to protect
their authentication credentials. We present a concrete scheme,
and get over a number of challenges in securing password-
protected credentials against off-line guessing attacks. Our
experimental results conﬁrm that conventional anonymous
password authentication does not scale well, while our new
scheme demonstrates very good performance.
Keywords-anonymous password authentication; guessing at-
tack; unlinkability; scalability;
I. INTRODUCTION
Inputting one’s “user ID” and “password” has been the
most common practice for authentication since the advent of
computers, and is still gaining popularity. Every day, there
are probably billions of instances of password usage in cy-
berspace. The reason for the wide employment of password
authentication is straightforward: password authentication
requires no dedicated devices, and a user only needs to
memorize his password and then can authenticate any-
where, anytime. As users are becoming increasingly roaming
nowadays, its independence of the supporting infrastructure
makes password authentication even more essential.
However, password authentication has intrinsic weak-
nesses. In particular, passwords are short (to be memoriz-
able), normally drawn from a relatively small space, thus
they have a low entropy in nature, and are susceptible to
brute-force guessing attacks. Guessing attacks can be on-
line or off-line. In the on-line guessing attack, the attacker
attempts to login to the (authentication) server in the name
of the victim user by trying a different password each time
until ﬁnding the correct one. In the off-line guessing attack,
the attacker does not need to interact with the server; instead,
it gleans the protocol transcript of a login session between a
user and the server, and then checks all possible passwords
against the login transcript to determine the actual one. On-
line guessing attacks can be easily thwarted at the system
level by limiting the number of repetitive unsuccessful login
attempts made by a user. In contrast, off-line guessing
attacks are notoriously harder to deal with, and they must
be addressed at the protocol level.
User’s activities in the digital world can be easily logged
and proﬁled. Abuses of individual information may cause
serious consequences to users, e.g., ﬁnancial/credit losses.
For this reason, users are becoming increasingly privacy-
aware, reluctant to disclose individual information when ac-
cessing online services. However, password authentication in
general does not protect user privacy. In the standard setting
of password authentication, the server maintains a password
ﬁle with each entry being of the form ⟨userID, passw⟩,
where userID is the user’s identiﬁcation, and passw is
either the user’s password or a password-derived value. To
login to the server, a user needs to provide his userID to the
server, who then uses the corresponding passw to engage in
the authentication protocol, where the two authenticate each
other and/or establish a shared session key between them.
To meet the growing need of privacy protection, it is desir-
able to reinforce password authentication with the protection
of user privacy. Recently, a few schemes for anonymous
password authentication [30], [32], [33] have been proposed.
In particular, anonymous password authentication promises
unlinkability, i.e., the server should not be able to link user
accesses, such that the logins from the same user cannot
be recognized as such. However, anonymous password au-
thentication in the standard setting (described above) has
inherent weaknesses. Among others, anonymous password
authentication needs to implement PIR (Private Information
Retrieval), thus the computation cost upon the server is no
better than O(N ), where N is the total number of users
registered to the server. This makes the server a bottleneck
in large systems having a large number of users.
A. Our Contributions
In this paper, we propose a new approach for anonymous
password authentication, solving the weaknesses in the stan-
dard setting1. In particular, our contributions are three-fold.
1To distinguish from our approach, wherever needed we will refer to
anonymous password authentication in the standard setting as conventional
anonymous password authentication.
1063-9527/09 $26.00 © 2009 IEEE
DOI 10.1109/ACSAC.2009.26
199
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 13:07:53 UTC from IEEE Xplore.  Restrictions apply. 
First, we analyze the weaknesses of conventional anony-
mous password authentication. To make our analysis con-
crete, we present a generic construction for conventional
anonymous password authentication that covers all the ex-
isting schemes, and we base our analysis on this generic
construction. The ﬁrst weakness is that server computation
is no better than O(N ). The second is that unlinkability
can be achieved only if the server is passive. We also show
that existing anonymous password authentication schemes
may be subject to undetectable on-line guessing attacks [17],
where the server does not realize that it is experiencing on-
line guessing attacks.
Second, we propose a new approach for anonymous
password authentication, to address the weaknesses in the
standard setting. Notably, server computation in our ap-
proach is independent of the number of users in the system,
thus breaking the bound of O(N ) in the standard setting.
Our approach assumes a different setting where users do
not register their passwords to the server, and the server
thus does not hold any password ﬁle. This attributes to
the success of getting over the barrier of O(N ). Another
advantage resulting from the password-ﬁle-free server is
that there is no concern of immediate exposure of all user
passwords in case the server is compromised.
The main idea of our approach is as follows. The server
issues to each user a credential to be used for authentication,
and the users protect their credentials by passwords. Each
time a user logins to the server, he recovers his credential
using password, and demonstrates to the server his pos-
session of a valid credential. A notable feature is that the
password-protected credentials can be public, and no secure
device (e.g., smartcard) is needed to store the credentials.
This solves a main issue in PKI (Public Key Infrastructure),
i.e., safe management of the long secrets.
Third, we experiment on the generic anonymous password
authentication construction, and the results empirically con-
ﬁrm that conventional anonymous password authentication
has limited scalability. We also implement a prototype
of our proposed scheme, which demonstrates very good
performance.
B. Organization
In Section II, we review the related work, followed by
Section III, an overview of the main cryptographic primitives
to be used. In Section IV, we analyze the weaknesses of
conventional anonymous password authentication. Our new
approach is presented in Section V. We report the imple-
mentation results in Section VI, and Section VII concludes
the paper.
II. RELATED WORK
A. Password Authentication
As mentioned earlier, a major challenge in password
authentication is to counter against off-line guessing attacks.
200
To achieve this objective, it has been proven that public key
operations, e.g., exponentiations in a multiplicative group,
are essential in designing secure password authentication
protocols [20]. But public key operations are not equivalent
to public key primitives such as public key encryption
and digital signature. Depending on whether or not public
key primitives are involved, two distinct password authen-
tication approaches exist: public-key-assisted approach, and
password-only approach.
The public-key-assisted approach enlists a combined use
of password and public key primitives, such that the users
use passwords while the server has a public/private key pair
(for encryption or signature) at its disposal. Examples of
public-key-assisted password authentication schemes include
[5], [19], [20]. The employment of a public key primitive
by the server on the one hand simpliﬁes protocol design,
while on the other hand entails the deployment of PKI for
certiﬁcation. In contrast, the password-only approach does
not involve any public key primitive, thereby eliminating the
reliance on PKI. The password-only approach, or password
authenticated key exchange (PAKE), has been extensively
studied in the literature, e.g., [3], [4], [6], [7], [24], [26].
For either public-key-assisted schemes or password-only
schemes, they assume the standard setting, where the server
holds a password ﬁle that contains all users’ password
information. A security concern is that compromise of the
server immediately reveals all passwords. A natural solution
is to deploy multiple servers to secret-share the passwords
[18], [25]. Multi-server password authentication schemes,
however, not only downgrade operational quality [29], but
also cause inconvenience for users to update passwords. The
smartcard based authentication schemes [22], [8] enforce
two-factor authentication: a user’s authentication credential
is stored in smartcard, and the smartcard is protected by
password. These two-factor authentication schemes do not
require the server to keep a password ﬁle, offering a solution
to the drawbacks of multi-server password authentication.
Our proposed approach does not require any smartcard,
while enjoying the advantage of password-ﬁle-free server.
B. Password-Enabled PKI
A prerequisite for the use of public key primitives is the
safe storage of the private keys. In principle, smartcards can
be used to store private keys. However, the use of smartcards
is not convenient, as they need the supporting infrastructure
(e.g, smartcard reader) to operate. To solve this problem,
password-enabled PKI has been proposed [29]. The idea
of password-enabled PKI is to enable the use of public
key primitives, with the private keys being protected by
passwords. There exist two general approaches to realize
password-enabled PKI. The ﬁrst is to store a user’ private
key on a trusted server, and when needed the owner retrieves
the private key from the server after authenticating to the
server using password [27], [31]. The second is a key split
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 13:07:53 UTC from IEEE Xplore.  Restrictions apply. 
approach: a private key is split into two parts; the owner
holds a part generated from his password, and a trusted
server holds the other; use of the private key requires the
two to cooperate. A concern of both approaches is that the
storage server must be honest, as it learns users’ private keys.
The software smartcard technique [21] can be viewed as
a special case of password-enabled PKI, without requiring
the presence of a trusted server. The idea of software
smartcard is encrypting a private key with password, and
the encrypted private key does not need further protection.
To be secure against off-line guessing attacks, the public
key must not be publicly known. Otherwise, anyone can
recover the password and in turn the private key, based on
the relationship between the public key and the private key.
However, this contradicts the main advantage of PKI that
the public keys are public.
Our approach using password-protected credentials is
quite similar to the software smartcard technique. The reason
why off-line guessing attacks do not ruin the usage of our
password-protected credentials is that credentials are to be
used to the authentication server only, and this allows us to
conceal the structure of the credentials from anyone other
than the server. In contrast, private keys in PKI are assumed
to be used universally, without any restriction. We thus
believe that the software smartcard technique is unlikely to
succeed in the general PKI setting.
C. Anonymous Password Authentication
Anonymous password authentication is a recent primitive,
ﬁrst proposed in [32]. The construction in [32] combines
a password-only protocol with a PIR (Private Information
Retrieval) protocol, where the former generates a shared key
between the user and the server, and the latter achieves user
privacy protection. Subsequently, new anonymous password
authentication schemes were proposed in [30]. These new
schemes also rely on PIR to preserve user privacy, but the
PIR protocol they use is a trivial construction, i.e., the server
passes a whole database to the user. The scheme proposed
in [33] uses the trivial PIR solution as well. [2] considered
three-party (i.e., user-gateway-server) anonymous password
authentication, and the proposed protocol also uses PIR to
attain user privacy. All these anonymous password authenti-
cation schemes assume the standard setting. As a matter of
fact, we will show shortly that the use of PIR is essential in
conventional anonymous password authentication. We ﬁnd
out that these existing anonymous password authentication
schemes [2], [30], [32], [33] do not provide explicit au-
thentication of the user to the server, which may lead to
undetectable on-line guessing attacks in some applications.
D. Other Privacy-Preserving Authentication Primitives
There are a lot of privacy-preserving authentication tech-
niques proposed in the literature, among which anonymous
credential [11], [13] and group signature [1], [14] are two
important primitives, aiming to achieve unlinkability among
the whole user population. The techniques that are used
to construct anonymous credentials and group signatures
have some similarities. Compared to anonymous password
authentication,
they offer a higher level of security, as
they use long secrets (i.e., credentials in anonymous cre-
dential and group signing keys in group signature). They
thus also have the problem of safe management of long
secrets. The credentials to be protected by passwords in
our approach are precisely simpliﬁed anonymous credentials
without anonymity revocation property. However, while our
approach essentially uses long secrets for authentication,
the security it offers actually depends on the strength of
passwords with respect to on-line guessing attacks, thereby
weaker than anonymous credential and group signature.
III. CRYPTOGRAPHIC PRIMITIVES
For ease of understanding, we review the main crypto-
Homomorphic
a public-key encryption scheme, E(.),
graphic primitives to be used in our constructions.
Homomorphic Encryption.
encryption
is
satisfying
E(m1).E(m2) = E(m1 + m2) for any m1, m2. The
Paillier encryption [28] is a typical homomorphic encryption
scheme. The Paillier homomorphic encryption works in a
∗
multiplicative group Z
n2, where n is a RSA-type modulus.
To distinguish from regular public key encryption, we use
Hom_Enc(m) to denote the homeomorphic encryption of
m, and Hom_Dec(c) the decryption of a ciphertext c.
Zero-knowledge Proof of Knowledge. A Zero-knowledge
Proof of Knowledge protocol (we call it zero-knowledge
proof for short) is a two-party three-round protocol, where a
prover proves to a veriﬁer the knowledge of a secret without
disclosing any information on the secret. The three-round
is “commit-challenge-response”. To be speciﬁc, we show a
simple zero-knowledge proof as an example, proving the
knowledge of x with respect to y such that y = gx (mod p),