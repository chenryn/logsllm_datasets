# 优化后的文本

## 图9：WAN中混合工作负载的归一化吞吐量

Baseline  
ByzCast  
36.8 (msgs/sec)  
38.8 (msgs/sec)  
34.6 (msgs/sec)  
38.3 (msgs/sec)  

CA  
EU  
JP  
VA  

---

本文讨论了不完全实现原子多播所有属性的协议（例如[29]、[39]、[40]）。接下来我们将重点关注能够容忍良性故障的原子多播算法，因为目前还没有针对拜占庭故障的原子多播算法。

现有的原子多播算法可以分为三类：基于时间戳的、基于轮次的和基于环的。

- **基于时间戳的算法**（如[8]、[9]、[15]、[36]）是早期原子多播算法[41]的真实变体，设计用于无故障系统。在这些算法中，进程为消息分配时间戳，确保目的地对每个消息的最终时间戳达成一致，并按此时间戳顺序传递消息。[9]中的算法除了真实性外还保证了消息最小性，即算法的消息大小与多播消息的目标组数量成正比，而不是总进程数。虽然ByzCast在全球消息方面不是真实的，但它满足局部消息的这一属性，因此局部消息可以像底层原子广播算法一样快速传递。

- **基于轮次的算法**中，进程执行无限序列的轮次，并在每轮结束时就传递的消息达成一致。[36]中提出了一种可以在4δ时间内传递消息的基于轮次的原子多播算法。不同于ByzCast，该算法可能会使局部消息受到全局消息的影响而变慢。

- **基于环的算法**通过预定义的环覆盖层传播消息，并依赖这种拓扑结构来确保原子多播属性。[10]中提出了一种此类算法，在每个组成员之间运行共识。该算法的时间复杂度与目标组的数量成正比。Multi-Ring Paxos [12]、Spread [11]、[14] 和 Ridge [13] 是非真实性的基于环的原子多播协议。一方面，为了传递消息m，它们需要与m的目标组之外的进程进行通信，局部消息也可能受到车队效应的影响。另一方面，这些协议不要求组间不相交。

### 可扩展的BFT

尽管过去二十年间关于BFT复制的工作很多（例如[17]、[18]、[19]、[20]、[21]、[42]、[43]、[44]、[45]、[46]），但BFT协议的可扩展性仍然是一个相对未被充分探索的话题。通常观察到的是，随着容错能力的增加，BFT协议的性能会显著下降[43]。这种缺乏容错扩展性的主要原因在于这些协议使用的全对全通信模式，这导致消息数量呈二次增长。可以通过使用线性消息模式的协议[42]、[43]、[44]，或者通过使用n和f之间比例较小的协议[45]、[46]，或者通过利用擦除码和大消息批处理[21]来缓解这一限制。无论这些协议探索了哪些权衡，当副本数量增加时，它们都会失去性能，这与ByzCast不同。

少数BFT协议针对广域网进行了优化[19]、[20]。这些协议倾向于使用更多的副本来减少相对法定人数规模或法定人数之间的距离。类似于上述可扩展协议，这些协议的性能也往往随着副本数量的增加而下降。

扩展复制系统的自然方法是将状态分割成多个副本组，并仅在这些组内运行排序协议。据我们所知，只有三项工作考虑了BFT系统的分区复制。Augustus [47] 和 Callinicos [48] 引入了在多个BFT组上实现的键值存储的多个分片上执行事务的协议。Nogueira等人最近的一项工作[49]引入了在BFT-SMaRt中分裂和合并副本组的协议，但没有讨论如何将消息传播到多个具有拜占庭故障的组。ByzCast通过提供一种在多个分区上传播请求的协议，补充了这些工作，从而有效地支持需要跨多个分区操作的服务。

### 结论

原子多播是在设计可扩展且高度可用的强一致性分布式系统中的基本通信抽象。本文提出了ByzCast，这是第一个拜占庭容错的原子多播，旨在建立在现有的BFT抽象之上。ByzCast部分真实，即对于单个组的消息，其扩展性与组的数量成线性关系。除了介绍一种新的原子多播算法外，我们还在两种不同的环境中评估了其性能。结果表明，ByzCast在大多数情况下优于BFT-SMaRt以及非真实性的BFT原子多播协议。

### 致谢

感谢审稿人提出的建设性建议。本研究部分由瑞士政府卓越奖学金、Hasler基金会、CNPq项目（204558/2014-0）、CAPES项目（GDE项目88887.124751/2014-00）、LaSIGE项目（UID/CEC/00408/2013）和IRCoC项目（PTDC/EEI-SCR/6970/2014）资助。

### 参考文献

[此处省略参考文献列表]

---

这样优化后的文本更加清晰、连贯和专业，适合学术和技术交流。