# SANE: A Protection Architecture for Enterprise Networks

**Authors:**  
Martin Casado, Tal Garfinkel, Aditya Akella, Michael J. Freedman, Dan Boneh, Nick McKeown, Scott Shenker  
{casado, talg, mfreed, dabo, nickm}@cs.stanford.edu

## Abstract
In today’s enterprise networks, connectivity is regulated by a combination of complex routing and bridging policies, along with various interdiction mechanisms such as ACLs, packet filters, and other middleboxes that attempt to retrofit access control onto an otherwise permissive network architecture. This results in networks that are inflexible, fragile, and difficult to manage.

To address these limitations, we present SANE, a protection architecture for enterprise networks. SANE defines a single protection layer that governs all connectivity within the enterprise. All routing and access control decisions are made by a logically-centralized server, which grants access to services by issuing capabilities (encrypted source routes) according to declarative access control policies (e.g., "Alice can access HTTP server foo"). Capabilities are enforced at each switch, which are simple and only minimally trusted. SANE offers strong attack resistance and containment in the face of compromise, yet is practical for everyday use. Our prototype implementation shows that SANE could be deployed in current networks with minimal modifications and can easily scale to networks of tens of thousands of nodes.

## 1. Introduction
The Internet architecture was born in a more innocent era, where there was little need to consider how to defend against malicious attacks. Many of the Internet's primary design goals, such as universal connectivity and decentralized control, which were critical to its success, are at odds with making it secure.

Worms, malware, and sophisticated attackers mean that security can no longer be ignored, especially in enterprise networks where data loss, exposure of private information, or loss of system availability are unacceptable. Security measures have been retrofitted to enterprise networks via mechanisms like router ACLs, firewalls, NATs, and other middleboxes, along with complex link-layer technologies such as VLANs.

Despite years of experience and experimentation, these mechanisms are far from ideal. They require significant configuration and oversight, are often limited in the range of policies they can enforce, and produce networks that are complex and brittle. Even with these techniques, security within the enterprise remains poor. Worms routinely cause significant losses in productivity and potential for data loss, and attacks resulting in theft of intellectual property and other sensitive information are common.

The long and largely unsuccessful struggle to protect enterprise networks convinced us to start over with a clean slate, with security as a fundamental design goal. The result is our Secure Architecture for the Networked Enterprise (SANE). The central design goals for our architecture are:

- **Natural Policies:** Allow natural policies that are simple yet powerful. We seek an architecture that supports policies independent of topology and equipment, e.g., "Allow everyone in group sales to connect to the HTTP server hosting documentation." This contrasts with today's policies, which are typically expressed in terms of topology-dependent ACLs in firewalls.
- **Link Layer Enforcement:** Ensure enforcement at the link layer to prevent lower layers from undermining it. In contrast, it is common in today's networks for network-layer access controls (e.g., ACLs in firewalls) to be undermined by more permissive connectivity at the link layer (e.g., Ethernet and VLANs).
- **Topology Hiding:** Hide information about topology and services from those without permission to see them. Once an attacker has compromised an end host, the next step is to map out the network’s topology. Our goal is to hide all such information to embrace the principle of least knowledge.
- **Single Trusted Component:** Rely on a central (yet potentially replicated) trusted entity where all policy is centrally defined and executed. Today’s networks trust multiple components, such as firewalls, switches, routers, DNS, and authentication services (e.g., Kerberos, AD, and Radius). The compromise of any one component can wreak havoc on the entire enterprise.

SANE achieves these goals by providing a single protection layer that resides between the Ethernet and IP layer, similar to the place that VLANs occupy. All connectivity is granted by issuing capabilities, which are encrypted source routes between any two communicating endpoints. Source routes are constructed by a logically-centralized Domain Controller (DC) with a complete view of the network topology. By granting access using a global vantage point, the DC can implement policies in a topology-independent manner.

By default, hosts can only route to the DC. Users must first authenticate themselves with the DC before they can request a capability to access services and end hosts. Access control policies are specified in terms of services and principals, e.g., "users in group martins-friends can access Martin’s streaming-audio server."

Our approach may seem draconian, as all communication requires the permission of a central administrator. However, the administrator is free to implement a wide variety of policies that vary from strict to relaxed and differ among users and services. The key is that SANE allows the easy implementation and enforcement of simply expressed rules.

Our approach might also seem dependent on a single point-of-failure (the DC) and not able to route traffic around failures (because of static source routes). However, we can use standard replication techniques, such as multiple DCs and redundant source routes, to make the network reliable and quick to recover from failures.

The remainder of the paper is organized as follows. In Section 2, we further argue why current security mechanisms for the enterprise are insufficient and why the SANE approach is feasible. Section 3 presents a detailed design of SANE. We show that by delegating access control and routing to a central controller, we can reduce the complexity of the forwarding elements (switches) and the degree to which we must trust them. We also demonstrate how a specific implementation of SANE could be deployed in current networks with only a few modifications. Section 4 covers SANE’s resistance to a strong attack model. In Section 5, we present and evaluate a prototype software implementation of SANE, and Section 6 demonstrates that SANE can easily scale to networks of tens of thousands of nodes without significantly impacting user-perceived latency. We present related work in Section 7 and conclude in Section 8.

## 2. What’s Wrong with Existing Techniques?
### 2.1 Complexity of Mechanism
A typical enterprise network today uses several mechanisms simultaneously to protect its network, such as VLANs, ACLs, firewalls, NATs, and so on. The security policy is distributed among the boxes that implement these mechanisms, making it difficult to correctly implement an enterprise-wide security policy. Configuration is complex, making the security fragile. Furthermore, the configuration is often dependent on network topology and based on addresses and physical ports rather than on authenticated endpoints. When the topology changes or hosts move, the configuration frequently breaks, requiring careful repair and possibly undermining its security policies.

A common response is to put all security policy in one box and at a choke-point in the network, such as a firewall at the network’s entry and exit point. If an attacker makes it through the firewall, they have unfettered access to the whole network.

Another way to address this complexity is to enforce protection on the end host via distributed firewalls. While reasonable, this has the downside of placing all trust in the end hosts. End host firewalls can be disabled or bypassed, leaving the network unprotected, and they offer no containment of malicious infrastructure, e.g., a compromised NIDS.

Our new architecture allows simple high-level policies to be expressed centrally. Policies are enforced by a single fine-grain mechanism within the network.

### 2.2 Proliferation of Trust
Today’s networks provide a fertile environment for skilled attackers. Switches and routers must correctly export link state, calculate routes, and perform filtering; yet over time, these mechanisms have become more complex, with new vulnerabilities discovered at an alarming rate. If compromised, an attacker can often take down the network or redirect traffic to permit eavesdropping, traffic analysis, and man-in-the-middle attacks.

Our new architecture replaces all these mechanisms with simple, minimally-trusted forwarding elements, reducing the number of trusted (and configured) components to just one centrally-managed controller. Our goal is to minimize the trusted computing base.

### 2.3 Proliferation of Information
A further resource for an attacker is the proliferation of information on the network layout of today’s enterprises. This knowledge is valuable for helping to identify sensitive servers, firewalls, and IDS systems, which can be exploited for compromise or denial of service. Topology information is easy to gather: switches and routers keep track of the network topology and broadcast it periodically in plain-text. Likewise, host enumeration, port scanning, traceroutes, and SNMP can easily reveal the existence of, and the route to, hosts. Today, it is common for network operators to filter ICMP and change default SNMP passphrases to limit the amount of information available to an intruder.

Our new architecture hides both the network structure and the location of critical services and hosts from all unauthorized network entities. Minimal information is made available as needed for correct function and fault diagnosis.

### 2.4 Threat Environment
SANE seeks to provide protection robust enough for demanding threat environments—government and military networks, financial institutions, or demanding business settings—yet flexible enough for everyday use. We assume a robust threat environment with both insider (authenticated users or switches) and outsider threats (e.g., an unauthenticated attacker plugging into a network jack). This attacker may be sophisticated, capable of compromising infrastructure components and exploiting protocol weaknesses. Consequently, we assume attacks can originate from any network element, such as end hosts, switches, or firewalls.

SANE prevents outsiders from originating any traffic except to the DC, while preventing malicious end hosts from either sending traffic anywhere that has not been explicitly authorized or, if authorized, subjecting the network to a denial-of-service attack that cannot be subsequently disabled.

SANE makes a best effort attempt to maintain availability in the face of malicious switches; however, we do not attempt to achieve full network-layer Byzantine fault tolerance. In a normal SANE network, little can be done in the face of a malicious DC, but we discuss strategies for dealing with this and other threats in §4.

### 2.5 What’s Special about the Enterprise?
We can exploit several properties of enterprise networks to make them more secure. First, enterprise networks are often carefully engineered and centrally administered, making it practical (and desirable) to implement policies in a central location. Second, most machines in enterprise networks are clients that typically contact a predictable handful of local services (e.g., mail servers, printers, file servers, source repositories, HTTP proxies, or SSH gateways). Therefore, we can grant relatively little privilege to clients using simple declarative access control policies; in our system, we adopt a policy interface similar to that of a distributed file system.

Third, in an enterprise network, we can assume that hosts and principals are authenticated; this is already common today, given widely deployed directory services such as LDAP and Active Directories. This allows us to express policies in terms of meaningful entities, such as hosts and users, instead of weakly bound endpoint identifiers such as IP and MAC addresses.

Finally, enterprise networks—when compared to the Internet at large—can quickly adopt a new protection architecture. "Fork-lift" upgrades of entire networks are not uncommon, and new networks are regularly built from scratch. Further, there is a significant willingness to adopt new security technologies due to the high cost of security failures.

## 3. System Architecture
SANE ensures that network security policies are enforced during all end host communication at the link layer, as shown in Figure 1. This section describes two versions of the SANE architecture. First, we present a clean-slate approach, in which every network component is modified to support SANE. Later, we describe a version of SANE that can inter-operate with unmodified end hosts running standard IP stacks.

### 3.1 Domain Controller
The Domain Controller (DC) is the central component of a SANE network. It is responsible for authenticating principals, managing the network topology, and issuing capabilities. The DC maintains a complete view of the network and enforces access control policies. By default, hosts can only communicate with the DC. To obtain further connectivity, they must follow these steps:

1. **Authentication:** Principals authenticate to the DC and establish a secure channel for future communication.
2. **Service Publication:** Servers publish their services under unique names in the Network Service Directory.
3. **Capability Request:** Clients request a capability for a specific service from the DC.
4. **Access Grant:** The DC issues a capability (an encrypted source route) to the client, allowing it to communicate with the desired service.

This process ensures that all communication is controlled and monitored by the DC, providing a centralized and secure management of network access.