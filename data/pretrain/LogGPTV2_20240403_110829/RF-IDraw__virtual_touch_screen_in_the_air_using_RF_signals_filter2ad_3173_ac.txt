further away from the beam center.
Formally, the direction of antenna pair ’s beam is deﬁned
by Eq. 3 with k = 0. In the more precise formulation, the center of
the beam is deﬁned by Eq. 2 also for k = 0. Hence, antenna pair
’s vote on point P is calculated as:
Vi,j(P) = −k
∆di,j
λ
−
∆φj,i
2π
k2,
(6)
when the two antennas are separated by λ
2 .
Now let us extend this vote to the case of antenna pairs with
large separation. For an antenna pair with large separation, the only
difference is that instead of one beam, it will have multiple grating
lobes. Thus, instead of voting based on how far the point is from
one beam center, a widely spaced antenna pair votes based on how
far the point is from the grating lobe closest to it. Speciﬁcally, the
vote will be:
Vi,j(P) = − min
k
k
∆di,j
λ
−
∆φj,i
2π
− kk2,
(7)
P
1
P
3
P
4
P
2
Figure 8—Interpretation of Vote: Points along the same spatial
direction have the same vote from the antenna pair, e.g., P1 and P2,
P3 and P4 have the same votes. Points closer to the beam center
have higher votes than the ones further away from the center, e.g.,
P1, P2 have higher votes than P3 and P4.
where the minimization over k captures the distance to the closest
grating lobe among all grating lobes.
Now we have the votes from all antenna pairs, we combine them
to identify the intersections of the antenna pairs’ beams or grating
lobes. The higher the total vote V(P) = Pi,j Vi,j(P) is, the more
likely P is the actual position of the RF source.
5.2 Trajectory Tracing Algorithm
For the purpose of trajectory tracing, recall the discussion in §4
which shows that even if we start from a wrong initial position and
track a wrong grating lobe (not too far away from the correct one),
the shape of the reconstructed trajectory will still be quite accurate.
Aside from this insight, from a slightly different perspective, Fig. 7
also reveals another important point: to achieve shape ﬁdelity, we
are better off tracking the continuous rotation of a grating lobe, as
opposed to switching grating lobes in the middle of a trajectory.
Based on this idea, we develop RF-IDraw’s trajectory tracing al-
gorithm exploring the continuity of the RF source’s motion and the
continuous rotation of the grating lobes, as described below:
• RF-IDraw selects a few candidate initial positions with the high-
est total votes as calculated in §5.1 using the initial phase mea-
surements.
• For each candidate initial position, RF-IDraw identiﬁes the grat-
ing lobe of each antenna pair that is closest to this position, and
keeps tracking the continuous rotation of this grating lobe.
• To estimate the next position, RF-IDraw evaluates the votes for
all points within the vicinity of the current position. In comput-
ing each antenna pair’s vote, RF-IDraw also enforces the rule to
rotate with the same grating lobe, which is done by ﬁxing k and
unwrapping ∆φi,j in Eq. 7, i.e., ensuring continuity when angles
wrap around [0, 2π].
• RF-IDraw iteratively estimates the consecutive positions to re-
construct the entire trajectory.
• After having reconstructed one trajectory for each candidate ini-
tial position, RF-IDraw picks the one whose sum of votes across
all points on the trajectory is the highest as its ﬁnal estimate.
The reason for choosing the trajectory with the highest overall
vote is as follows. Recall that we have an over-constrained system,
i.e., there are more antenna pairs than needed to specify a point
in space (using their grating lobes). In this over-constrained sys-
tem, if we start from the correct initial position, the set of grat-
ing lobes (one from each widely spaced antenna pair) we track
will move coherently and hence always intersect, because they all
agree on the actual trajectory of the RF source. This means their
total vote will be high always. In contrast, for a wrong initial posi-
tion, the associated wrong grating lobes will not move coherently,
and hence do not consistently intersect throughout the trajectory.
Therefore, their total vote will drop later on. In other words, with
an over-constrained system, we can detect incohesive rotations of
240Figure 9—Commercial UHF RFID Used in Experiments: Alien
Squiggle General Purpose UHF RFID
these grating lobes. Thus, by choosing the reconstructed trajectory
with the highest overall trajectory vote, RF-IDraw further reﬁnes
the initial position estimate, as demonstrated in §7.
6.
IMPLEMENTATION
We built a prototype of RF-IDraw using commercial off-the-shelf
UHF RFID readers to locate and trace the trajectories of EPC Gen-
2 [15] UHF RFIDs.
Readers and Software Implementation: We use two ThingMagic
M6e 4-port UHF RFID readers [33], each connected with four AN-
900LH 900 MHz omni-directional antennas [1]. We program the
readers to continuously query the RFIDs using a carrier frequency
of 922 MHz and return the signal phase for every RFID reply. We
implemented RF-IDraw’s multi-resolution positioning and trajec-
tory tracing algorithms in MATLAB and ran them in real-time.
RFIDs: We use the Alien Squiggle tag [11] shown in Fig. 9, which
is a commercial off-the-shelf passive UHF RFID widely used in
supply chain and asset tracking applications. Each of them costs 5-
10 cents. We also experimented with the Omni-ID Exo 800 tag [5]
to verify RF-IDraw’s design across different types of RFIDs.
Ground Truth: We use the VICON motion capture system [8] to
measure the ground truth trajectory of the RFID. In a 5×6 m2 room
instrumented with a grid of infrared cameras, the VICON system
can provide sub-centimeter accuracy in tracking an object tagged
with infrared reﬂective markers. For experiments in the VICON
room, we measure the ground truth by putting infrared reﬂective
markers on the user’s hand, around the RFID. For experiments out-
side the VICON room in an ofﬁce lounge, we let the user write
along a speciﬁc set of trajectories for which the ground truth has
been measured manually in advance.
Compared Schemes: We compare RF-IDraw with the state-of-the-
art antenna array AoA-based approach [12] using the same number
of antennas as RF-IDraw. In particular, both RF-IDraw and the an-
tenna array AoA-based systems employ 8 antennas connected to
two RFID readers. RF-IDraw’s 8 antennas are deployed as shown in
Fig. 6(d). Since RFIDs communicate by backscattering the reader
signal [38], the signal phase reading returned by the reader reﬂects
the round trip distance instead of the one-way distance. Hence, each
tightly spaced antenna pair (i.e., , ) has a separation
2 ) to ensure there is only one beam.3 The
of λ
widely spaced antenna pairs (i.e., each edge) have separation of 8λ
(i.e., 2.6 m). The antenna array AoA-based scheme uses two an-
tenna arrays, each with 4 antennas spaced by λ
4 (to account for the
backscattering round trip also). One antenna array is placed along
the left edge of the square in Fig. 6(d), the other is placed along the
bottom edge.
4 (as opposed to λ
Application Evaluation: We interface RF-IDraw with the
MyScript Stylus app [36] on an Android phone using the Mon-
keyRunner Android API [4]. This API allows developers to send
speciﬁed sequences of events to an Android device. We use this
API to convert the reconstructed trajectory of the RFID to touch
screen input sequences on an Android phone. The MyScript Stylus
app, then, interprets the input as text. We let the users write words
3The equations in this paper apply to the general case of an RF
transmitter. To account for the special case of RFID backscattering,
one needs to add a 2 factor to all the ∆dj,i and cos θ in the equations.
randomly sampled from the top 5000 most commonly used words
in the Corpus of Contemporary American English [6]. Some exam-
ples include: "play", "clear", "import", etc. Then, we evaluate the
character and word recognition success rates of the reconstructed
trajectories as recognized by the MyScript Stylus app.
7. MICROBENCHMARK
We start with a microbenchmark experiment to provide insights
into the working of the system. In particular, to better understand
the capabilities and properties of RF-IDraw’s trajectory tracing, we
let a user write the word "clear" using the RFID on his hand, in the
5×6 m2 VICON room. RF-IDraw uses a total of 8 antennas con-
nected to two RFID readers. All reader antennas are deployed on
a wall at one side of the VICON room. The user stands 2 m away.
Fig. 6 presents the side view of the room, facing the wall of an-
tenna deployment. Antenna separations and placement are chosen
based on the application’s needs and room size. Fig. 10(a) shows
the ground truth trajectory of the user’s handwriting measured by
the VICON motion capture system. Now let us see how RF-IDraw’s
tracing works in practice.
7.1 Granularity of Tracing
In this experiment, RF-IDraw’s multi-resolution positioning al-
gorithm (described in §5.1) returned two candidate initial positions.
Fig. 10(b) and Fig. 10(c) show the trajectories reconstructed from
these positions using RF-IDraw’s trajectory tracing algorithm, de-
scribed in §5.2. As we can see, RF-IDraw is able to trace every
minute change in the RFID position during the user’s writing. For
example, the letter ’e’ in the middle is only about 5 cm wide, yet
RF-IDraw is able to reproduce the details in its shape by tracking
the rotation of the high-resolution grating lobes.
7.2 Choosing the Correct Initial Position
In order to decide which trajectory to choose out of the two (as
the ﬁnal output), as §5.2 describes, RF-IDraw looks at the total vote
from all antenna pairs for each position on the trajectory and picks
the trajectory whose overall vote (summing up total votes from all
antenna pairs for all positions along the trajectory) is the highest.
Fig. 10(f) shows the evolution of the total vote from all antenna
pairs as the blue and red reconstructed trajectories progress. As we
can see, initially, both the blue and the red have high total votes
(i.e., close to 0). That is exactly why their starting points have been
identiﬁed by the multi-resolution positioning algorithm as the can-
didate initial positions. However, as the two reconstructed trajec-
tories progress, the red one’s total vote quickly drops, signiﬁcantly
deviating from 0, while the blue one’s vote stays fairly stable and
close to 0, having only occasional deviation. This is because the
grating lobes of the antenna pairs closest to the red initial position
do not consistently agree throughout the trajectory, leading to no
common intersection later in the trace, which results in their poor
total vote later on. The detection of this is made possible by the
over-constrained system where we have more antenna pairs than
needed to specify a single point in space, as explained in §5.2.
Comparing the overall votes throughout the trajectories, RF-
IDraw picks the blue trajectory as its ﬁnal output. Fig. 10(d) shows
the ground truth, RF-IDraw’s ﬁnal output, and the red trajectory on
the same plot. As we can see, the blue trajectory which RF-IDraw
picks indeed better matches the ground truth than the red one, and
the blue initial position is also closer to the ground truth than the
red candidate. This demonstrates RF-IDraw’s power in leveraging
its trajectory tracing to further reﬁne its positioning.
2412
1.5
)
m
(
z
1
0.5
2
1.5
)
m
(
z
1
0.5
2
1.5
)
m
(
z
1
0.5
0
0
0.5
1
1.5
x(m)
2
2.5
3
0
0
0.5
1
1.5
x(m)
2
2.5
3
0
0
0.5
1
1.5
x(m)
2
2.5
3
(a) Ground truth trajectory
(b) RF-IDraw’s Final output trajectory
(c) Other candidate reconstructed trajectory
2
1.5
)
m
(
z
1
0.5
2
1.5
)
m
(
z
1
0.5
0
-1
-2
-3
-4
s
r
i
a
P
a
n
n
e
t
n
A
l
l
A
f
o
e
t
o
V
l
a
t
o
T
Candidate Initial Position 1
Candidate Initial Position 2
0
0
0.5
1
1.5
x(m)
2
2.5
3
0
0
0.5
1
2
2.5
3
-5
0
1.5
x(m)
10
20
30
40
50
60
Position Index on Trajectory
(d) Comparing the three trajectories
(e) RF-IDraw’s Final output trajectory shifted
(f) Evolution of vote throughout trajectory
Figure 10—Tracing a User’s Writing in the Air: (a) shows the actual trajectory of the RFID as the user writes the word "clear" in the air,