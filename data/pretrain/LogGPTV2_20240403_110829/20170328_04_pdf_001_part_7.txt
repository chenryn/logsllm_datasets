Geometry types and functions (gS, b, 2D, N, tN)
Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. lxi
OGC 06-104r4 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved.
Annex B
(informative)
Comparison of Simple feature access/SQL and SQL/MM – Spatial
This informative annex provides a comparison of SFA-SQL and SQL/MM — Spatial.
Table B 1 Comparison of SFA-SQL and SQL/MM: Spatial
ISO/IEC 13249-3:2003
SQL with geometry type Description
(SQL/MM-Spatial)
Geometry Types Point ST_Point The type ST_PolyhedralSurface
Curve ST_Curve
is currently not in SQL/MM but will be
Linestring ST_Linestring
proposed as a result of this document.
ST_Circularstring
ST_CompoundCurve
Surface ST_Surface
ST_CurvePolygon
Polygon ST_Polygon
PolyhedralSurface ST_PolyhedralSurface
GeomCollection ST_Collection
Multipoint ST_Multipoint
Multicurve ST_MultiCurve
Multilinestring ST_Multilinestring
Multisurface ST_Multisurface
Multipolygon ST_Multipolygon
Storage Binary Type, Text Type, Object Type —
Object Type
Operations Equals ST_Equals —
Disjoint ST_Disjoint
Touches ST_Touches
Within ST_Within
Overlaps ST_Overlaps
Crosses ST_Crosses
Intersects ST_Intersects
Contains ST_Contains
Relate ST_Relate
Functions: — — —
Point ST_Point() Return the Point
X() ST_X() Return the X-coordinate of point
Y() ST_Y() Return the Y-coordinate of point
Z() ST_Z() Return the Z-coordinate of point
M() ST_M() Return the M-coordinate of point
— ST_ExplicitPoint() —
Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved.
Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. OGC 06-104r4
ISO/IEC 13249-3:2003
SQL with geometry type Description
(SQL/MM-Spatial)
Curve Length() ST_Length() Return the length of curve
StartPoint() ST_StartPoint() Return the first Point of curve
EndPoint() ST_EndPoint() Return the last Point of curve
IsClosed() ST_IsClosed() Check whether curve is closed
IsRing() ST_ISRing() Check whether curve is closed and simple
— ST_CurveToLine Transform Curve to LineString
LineString — ST_LineString Return the LineString
— ST_Points Return a collection of points
NumPoints() ST_NumPoints Return the number of points
PointN() ST_PointN Return a Point containing Point n of LineString
Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. lxiii
OGC 06-104r4 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved.
Annex C
(informative)
Conformance tests from version 1.1
C.1 Purpose of this annex
This conformance test is for an earlier 2D version of this standard, and has been replaced by an Abstract test
suite that will be used to define a more complete set of conformance tests for the various options in this version of
the standard.
In order to conform to this standard for feature collections, an implementation shall satisfy the requirements of one
of the following three conformance classes:
a) SQL implementation of feature tables based on predefined data types:
a. using numeric SQL types for geometry storage and SQL/CLI access,
b. using binary SQL types for geometry storage and SQL/CLI access;
a. SQL with Geometry Types implementation of feature tables supporting both textual and binary SQL/CLI
access to geometry.
This annex provides a conformance test for this standard. In general, the scope of the tests is to exercise each
functional aspect of the standard at least once. The test questions and answers are defined to test that the
specified functionality exists and is operable. Care has been taken to ensure that the tests are not at the level of
rigor that a product quality-control process or certification test might be. However, some of the answers are further
examined for reasonableness (for example, the area of a polygon is tested for correctness to two or three
significant figures). The following sections further describe each test alternative.
C.2 Test data
C.2.1 Test data semantics
The data for all of the test alternatives are the same. It is a synthetic data set, developed by hand, to exercise the
functionality of the standard. It is a set of features that makes up a map (see Figure B.1) of a fictional location
called Blue Lake. This section describes the test data in detail.
Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved.
Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. OGC 06-104r4
Key: X Easting Y Northing
1 watercourse
2 Route 5
indicates where Route 5 is two lanes wide;
indicates where Route 5 is four lanes wide
3 Route 75
4 Main Street
5 one-lane road
6 bridge
7 buildings
8 fish ponds
Figure C 1: Test Data Concept — Blue Lake vicinity map
Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. lxv
OGC 06-104r4 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved.
The semantics of this data set are as follows.
a) A rectangle of the Earth is shown in UTM coordinates. Horizontal coordinates take meaning from POSC
Horizontal Coordinate System #32214. Note 500,000 m false Easting, and WGS 72 / UTM zone 14N. Units
are metres.
b) Blue Lake (which has an island named Goose Island) is the prominent feature.
c) There is a watercourse flowing from north to south. The portion from the top neatline to the lake is called Cam
Stream. The portion from the lake to the bottom neatline has no name (Name value is ―Null‖).
d) There is an area place named Ashton.
e) There is a State Forest whose administrative area includes the lake and a portion of Ashton. Roads form the
boundary of the State Forest. The ―Green Forest‖ is the State Forest minus the lake.
f) Route 5 extends across the map. It is two lanes wide where shown as a heavy black line. It is four lanes wide
where shown as a heavy grey line.
g) There is a major divided highway, Route 75, shown as a heavy double black line, one line for each part of the
divided highway. These two lines are seen as a multiline.
h) There is a bridge (Cam Bridge) where the road goes over Cam Stream, a point feature.
i) Main Street shares some pavement with Route 5, and is always four lanes wide.
j) There are two buildings along Main Street; each can be seen either as a point or as a rectangle footprint.
k) There is a one-lane road forming part of the boundary of the State Forest, shown as a grey line with black
borders.
l) There are two fish ponds, which are seen as a collective, not as individuals; that is, they are a multi-polygon.
C.2.2 Test data points and coordinates
Figure B.2 depicts the points that are used to represent the map.
Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved.
Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. OGC 06-104r4
Dimensions in metres
Key
X Easting, in metres
Y Northing, in metres
Figure C 2: Points in the Blue Lake data set
Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. lxvii
OGC 06-104r4 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved.
Table B.1 gives these coordinates associated with each point.
Table C 1: Coordinates associated with each point in the Blue Lake data set
Point Easting Northing Point Easting Northing
1 0 48 26 52 31
2 38 48 27 52 29
3 62 48 28 50 29
4 72 48 29 52 30
5 84 48 30 62 34
6 84 42 31 66 34
7 84 30 32 66 32
8 84 0 33 62 32
9 76 0 34 64 33
10 28 0 35 59 13
11 0 0 36 59 18
12 0 18 37 67 18
13 44 41 38 67 13
14 41 36 39 10 48
15 28 26 40 10 21
16 44 31 41 10 0
17 52 18 42 16 48
18 48 6 43 16 23
19 73 9 44 16 0
20 78 4 45 24 44
21 66 23 46 22 42
22 56 30 47 24 40
23 56 34 48 26 44
24 70 38 49 28 42
25 50 31 50 26 40
Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved.
Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. OGC 06-104r4
C.3 Conformance tests
C.3.1 Normalized geometry schema
C.3.1.1 Conformance test overview
The scope of this test is to determine that the test data (once inserted) are accessible via the schema defined in
the standard. Table B.2 shows the queries that accomplish this test.
Table C 2: Queries to determine that test data are accessible via the normalized geometry schema
ID Functionality Tested Query Description Answer
N1 GEOMETRY_COLUMNS For this test, we will check to see lakes, road_segments, divided_routes,
table/view is created/updated that all of the feature tables are buildings, buildings, forests, bridges,
properly represented by entries in the named_places, streams, ponds,
GEOMETRY_COLUMNS map_neatlines
table/view.
N2 GEOMETRY_COLUMNS For this test, we will check to see lake_geom, road_segment_geom,
table/view is created/updated that all of the geometry tables are divided_route_geom, forest_geom,
properly represented by entries in the bridge_geom, stream_geom,
GEOMETRY_COLUMNS building_pt_geom,
table/view. building_area_geom, pond_geom,
named_place_geom,
map_neatline_geom
N3 GEOMETRY_COLUMNS For this test, we will check to see 0
table/view is created/updated that the correct storage type for
properly the streams table is represented
in the GEOMETRY_COLUMNS
table/view.
N4 GEOMETRY_COLUMNS For this test, we will check to see 3 (corresponds to‗LINESTRING‘)
table/view is created/updated that the correct geometry type for
properly the streams table is represented
in the GEOMETRY_COLUMNS
table/view.
N5 GEOMETRY_COLUMNS For this test, we will check to see 2
table/view is created/updated that the correct coordinate
properly dimension for the streams table
is represented in the
GEOMETRY_COLUMNS
table/view.
N6 GEOMETRY_COLUMNS For this test, we will check to see 3
table/view is created/updated that the correct value of max_ppr
properly for the streams table is
represented in the
GEOMETRY_COLUMNS
table/view.
N7 GEOMETRY_COLUMNS For this test, we will check to see 101
table/view is created/updated that the correct value of srid for
properly the streams table is represented
in the GEOMETRY_COLUMNS
table/view.
Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. lxix
OGC 06-104r4 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved.
N8 SPATIAL_REF_SYS table/view For this test, we will check to see 'PROJCS["UTM_ZONE_14N",
is created/updated properly that the correct value of srtext is GEOGCS["World Geodetic System 72",
represented in the DATUM["WGS_72",
SPATIAL_REF_SYS table/view. ELLIPSOID["NWL_10D", 6378135,
298.26]], PRIMEM["Greenwich", 0],
UNIT["Meter", 1.0]],
PROJECTION["Transverse_Mercator"],
PARAMETER["False_Easting",
500000.0],
PARAMETER["False_Northing", 0.0],
PARAMETER["Central_Meridian", -
99.0], PARAMETER["Scale_Factor",
0.9996],
PARAMETER["Latitude_of_origin",
0.0], UNIT["Meter", 1.0]]'
Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved.
Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. OGC 06-104r4
C.3.1.2 Normalized geometry schema construction
-- CREATE SPATIAL_REF_SYS METADATA TABLE
CREATE TABLE spatial_ref_sys (
srid INTEGER NOT NULL PRIMARY KEY,
auth_name CHARACTER VARYING,
auth_srid INTEGER,
srtext CHARACTER VARYING(2048));
-- CREATE GEOMETRY_COLUMNS METADATA TABLE
CREATE TABLE geometry_columns (
f_catalog_name CHARACTER VARYING,
f_table_schema CHARACTER VARYING,
f_table_name CHARACTER VARYING,
f_geometry_column CHARACTER VARYING,
g_catalog_name CHARACTER VARYING,
g_table_schema CHARACTER VARYING,
g_table_name CHARACTER VARYING,
storage_type INTEGER,
geometry_type INTEGER,
coord_dimension INTEGER,
max_ppr INTEGER,
srid INTEGER REFERENCES spatial_ref_sys,
CONSTRAINT gc_pk PRIMARY KEY (f_catalog_name, f_table_schema,
f_table_name, f_geometry_column));
-- Create geometry tables
-- Lake Geometry
CREATE TABLE lake_geom (
gid INTEGER NOT NULL,
eseq INTEGER NOT NULL,
etype INTEGER NOT NULL,
seq INTEGER NOT NULL,
x1 INTEGER,
y1 INTEGER,
x2 INTEGER,
y2 INTEGER,
x3 INTEGER,
y3 INTEGER,
x4 INTEGER,
y4 INTEGER,
x5 INTEGER,
y5 INTEGER,
CONSTRAINT l_gid_pk PRIMARY KEY (gid, eseq, seq));
-- Road Segment Geometry
Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. lxxi
OGC 06-104r4 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved.
CREATE TABLE road_segment_geom (
gid INTEGER NOT NULL,
eseq INTEGER NOT NULL,
etype INTEGER NOT NULL,
seq INTEGER NOT NULL,
x1 INTEGER,
y1 INTEGER,
x2 INTEGER,
y2 INTEGER,
x3 INTEGER,
y3 INTEGER,
CONSTRAINT rs_gid_pk PRIMARY KEY (gid, eseq, seq));
-- Divided Route Geometry
CREATE TABLE divided_route_geom (
gid INTEGER NOT NULL,
eseq INTEGER NOT NULL,
etype INTEGER NOT NULL,
seq INTEGER NOT NULL,
x1 INTEGER,
y1 INTEGER,
x2 INTEGER,
y2 INTEGER,
x3 INTEGER,
y3 INTEGER,
CONSTRAINT dr_gid_pk PRIMARY KEY (gid, eseq, seq));
-- Forest Geometry
CREATE TABLE forest_geom (
gid INTEGER NOT NULL,
eseq INTEGER NOT NULL,
etype INTEGER NOT NULL,
seq INTEGER NOT NULL,
x1 INTEGER,
y1 INTEGER,
x2 INTEGER,
y2 INTEGER,
x3 INTEGER,
y3 INTEGER,
x4 INTEGER,
y4 INTEGER,
x5 INTEGER,
y5 INTEGER,
CONSTRAINT f_gid_pk PRIMARY KEY (gid, eseq, seq));
-- Bridge Geometry
Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved.
Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. OGC 06-104r4
CREATE TABLE bridge_geom (
gid INTEGER NOT NULL,
eseq INTEGER NOT NULL,
etype INTEGER NOT NULL,
seq INTEGER NOT NULL,
x1 INTEGER,
y1 INTEGER,
CONSTRAINT b_gid_pk PRIMARY KEY (gid, eseq, seq));
-- Stream Geometry
CREATE TABLE stream_geom (
gid INTEGER NOT NULL,
eseq INTEGER NOT NULL,
etype INTEGER NOT NULL,
seq INTEGER NOT NULL,
x1 INTEGER,
y1 INTEGER,
x2 INTEGER,
y2 INTEGER,