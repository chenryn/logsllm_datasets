# Polymorphic and Metamorphic Malware Detection Using Static Analysis

## Abstract
This paper discusses the importance of detecting polymorphic and metamorphic malware, which can evade traditional detection methods. We present a static analysis approach that outperforms existing scanners in detecting obfuscated versions of known malware. Our results highlight the deficiencies of current scanning techniques and the potential of our method.

## 1. Introduction
Malware is becoming increasingly sophisticated, with "3rd generation" worms using multiple attack vectors to exploit both known and unknown vulnerabilities. These worms can spread rapidly by attacking pre-scanned targets. Therefore, it is crucial for scanners to detect polymorphic (obfuscated or variant) and metamorphic (mutated or evolved) versions of known malware. However, current scanners are inadequate, often failing to detect even slightly obfuscated versions of known malware.

## 2. Experimental Setup
We conducted experiments to test the effectiveness of various malware scanners in detecting polymorphic and metamorphic malware. The obfuscation techniques used include control flow modification, data segment modification, and insertion of dead code. Our ongoing experiments also investigate metamorphic versions.

### Table 2: Polymorphic Malware Detection Using Different Scanners
| Malware          | Norton | McAfee UNIX Scanner | McAfee | Dr. Web | Panda | Kaspersky | F-Secure | Anti Ghostbusters | SAVE |
|------------------|--------|----------------------|--------|---------|-------|-----------|----------|-------------------|------|
| W32.Mydoom.A     | 0.9656 | 0.6832               | 0.2097 | 0.0204  | 1.0000| 1.0000    | 1.0000   | 1.0000            | 1.0000|
| W32.Mydoom.A V1  | N      | Y                    | Y      | N       | Y     | Y         | Y        | Y                 | Y    |
| W32.Mydoom.A V2  | N      | Y                    | Y      | N       | Y     | Y         | Y        | Y                 | Y    |
| W32.Mydoom.A V3  | N      | Y                    | Y      | N       | Y     | Y         | Y        | Y                 | Y    |
| W32.Mydoom.A V4  | N      | Y                    | Y      | N       | Y     | Y         | Y        | Y                 | Y    |
| W32.Mydoom.A V5  | N      | Y                    | Y      | N       | Y     | Y         | Y        | Y                 | Y    |
| W32.Mydoom.A V6  | N      | Y                    | Y      | N       | Y     | Y         | Y        | Y                 | Y    |
| W32.Mydoom.A V7  | N      | Y                    | Y      | N       | Y     | Y         | Y        | Y                 | Y    |
| W32.Bika         | N      | Y                    | Y      | N       | Y     | Y         | Y        | Y                 | Y    |
| W32.Bika V1      | N      | Y                    | Y      | N       | Y     | Y         | Y        | Y                 | Y    |
| W32.Bika V2      | N      | Y                    | Y      | N       | Y     | Y         | Y        | Y                 | Y    |
| W32.Bika V3      | N      | Y                    | Y      | N       | Y     | Y         | Y        | Y                 | Y    |
| W32.Beagle.B     | N      | Y                    | Y      | N       | Y     | Y         | Y        | Y                 | Y    |
| W32.Beagle.B V1  | N      | Y                    | Y      | N       | Y     | Y         | Y        | Y                 | Y    |
| W32.Beagle.B V2  | N      | Y                    | Y      | N       | Y     | Y         | Y        | Y                 | Y    |
| W32.Blaster.Worm | N      | Y                    | Y      | N       | Y     | Y         | Y        | Y                 | Y    |
| W32.Blaster.Worm V1 | N  | Y                    | Y      | N       | Y     | Y         | Y        | Y                 | Y    |
| W32.Blaster.Worm V2 | N  | Y                    | Y      | N       | Y     | Y         | Y        | Y                 | Y    |
| W32.Blaster.Worm V3 | N  | Y                    | Y      | N       | Y     | Y         | Y        | Y                 | Y    |
| W32.Blaster.Worm V4 | N  | Y                    | Y      | N       | Y     | Y         | Y        | Y                 | Y    |

### Key:
- **N** – Norton
- **M1** – McAfee UNIX Scanner
- **M2** – McAfee
- **D** – Dr. Web
- **P** – Panda
- **K** – Kaspersky
- **F** – F-Secure
- **A** – Anti Ghostbusters
- **SAVE** – NMT developed Static Analyzer for Vicious Executables

## 3. Results
Our results show that NMT's SAVE, a signature-based detection algorithm, performs the most accurate detection. The obfuscation techniques used in the experiments include control flow modification (e.g., Mydoom V2, Beagle V2), data segment modification (e.g., Mydoom V1, Beagle V1), and insertion of dead code (e.g., Bika V1).

## 4. Conclusions and Future Work
Given the potential for malware to become more lethal, it is essential that scanners can detect polymorphic and metamorphic versions of known malware. Current scanners are inadequate in this regard. Our results differ significantly from other groups' recent findings:

1. **Static Scanning**: Our analysis is based on static scanning, making it at least an order of magnitude faster than sandboxing, proxy testing, or code de-obfuscation.
2. **Executable-Based Obfuscation**: Our obfuscation is based on executables, not assembly code or high-level source code.
3. **Current Malware**: Our results are based on the latest malware targeting current OS platforms, not dated malware for legacy systems.

Future work will focus on:

1. **Signature Development**: Investigating more sophisticated signatures to detect polymorphic versions of known malware.
2. **Tool Development**: Creating tools to assist in the static and dynamic analysis of malware code and the development of effective signatures.
3. **Metamorphic Malware**: Investigating static techniques for detecting mutated or evolved versions of malware.

## 5. Acknowledgments
We gratefully acknowledge support from ICASA (Institute for Complex Additive Systems Analysis, a division of New Mexico Tech), a Department of Defense IASP Capacity Building grant, and an NSF SFS Capacity Building grant. We also thank Authonis Suliman, Karthikeyan Ramamoorthy, and Xie Tao for their assistance in conducting the experiments.

## 6. References
[1] N. Weaver, V. Paxson, S. Staniford, and R. Cunningham, “A Taxonomy of Computer Worms”, First Workshop on Rapid Malcode (WORM), 2003, pp. 11-18.

[2] G. Eschelbeck, “Worm and Virus Defense: How Can We Protect the Nation’s Computers From These Threats?”, Before the Subcommittee on Technology, Information Policy, Intergovernmental Relations, and the Census, House Government Reform Committee, September 10, 2003.

[3] F. Cohen, “Computer viruses: Theory and experiments”, Computers and Security, Vol. 6, 1987, pp. 22-35.

[4] D. Chess and S. White, “An Undetectable Computer Virus”, Virus Bulletin Conference, September 2000.

[5] J. Bergeron, M. Debbabi, M. M. Erhioui, and B. Ktari, “Static Analysis of Binary Code to Isolate Malicious Behaviors”, Proceedings of the IEEE 4th International Workshops on Enterprise Security (WETICE'99), Stanford University, California, USA, 1999, IEEE Press.

[6] M. Christodorescu and S. Jha, “Static Analysis of Executables to Detect Malicious Patterns”, Usenix Security Symposium, 2003, pp. 169-186.

[7] Symantec Cooperation, http://securityresponse.symantec.com/avcenter/.

[8] Virus Library, http://www.viruslibrary.com/virusinfo/Win32.Bika.htm.

[9] C. Collberg, C. Thomborson, and D. Low, “Watermarking, Tamper-Proofing, and Obfuscation - Tools for Software Protection”, IEEE Transactions on Software Engineering Vol. 28:8, 2002, pp. 735-746.

[10] S. Krishnaswamy, M. Kwon, D. Ma, Q. Shao, and Y. Zhang, “Experience with software watermarking”, In the Proceedings of the 16th Annual Computer Security Applications Conference (ACSAC'00), 2000, pp. 308-316.

[11] Hackman Hex Editor, http://www.technologismiki.com/en/index-h.html.

[12] W.C. Wilson, “Activity Pattern Analysis by means of Sequence-Alignment Methods”, Journal of Environment and Planning, Vol. 30, 1998, pp. 1017-1038.

[13] A. Strehl and J. Ghosh, “Value-based customer grouping from large retail data-sets”, In the Proceedings of SPIE Conference on Data Mining and Knowledge Discovery, Vol. 4057, 2000, pp. 32-40.

---

This version of the text is more organized, clear, and professional. It includes a structured format with headings, a table, and a list of references.