### How to Inspect a Remote SMTP Server's TLS Certificate

We have an Exchange 2007 server running on Windows Server 2008, and our client uses another vendor's mail server. Their security policies require us to use enforced TLS. This setup was working fine until recently.

### Current Issue

When our Exchange server attempts to deliver email to the client's server, it logs the following error:

```
A secure connection to domain-secured domain 'ourclient.com' on connector 'Default external mail' could not be established because the validation of the Transport Layer Security (TLS) certificate for ourclient.com failed with status 'UntrustedRoot'. Contact the administrator of ourclient.com to resolve the problem, or remove the domain from the domain-secured list.
```

Removing `ourclient.com` from the `TLSSendDomainSecureList` allows messages to be delivered successfully using opportunistic TLS, but this is only a temporary workaround.

### Client Context

The client is a large, security-sensitive international corporation. Our IT contact at the client claims to be unaware of any changes to their TLS certificate. I have repeatedly asked them to identify the authority that generated the certificate so that I can troubleshoot the validation error, but they have been unable to provide this information. It is possible that the client has replaced their valid TLS certificate with one from an in-house certificate authority.

### Solution: Manually Inspecting the Remote SMTP Server's TLS Certificate

To manually inspect the remote SMTP server's TLS certificate, you can use OpenSSL. Here are the steps:

1. **For STARTTLS on port 25:**

   ```sh
   openssl s_client -connect mail.example.com:25 -starttls smtp
   ```

2. **For a standard secure SMTP port (port 465):**

   ```sh
   openssl s_client -connect mail.example.com:465
   ```

### Steps to Follow

1. **Install OpenSSL** (if not already installed):
   - On Windows, you can download OpenSSL from the official website and add it to your system PATH.
   - On Linux, you can install it using your package manager (e.g., `sudo apt-get install openssl` on Ubuntu).

2. **Run the OpenSSL Command**:
   - Replace `mail.example.com` with the actual hostname or IP address of the client's SMTP server.
   - The command will initiate a connection to the server and display the TLS certificate details.

3. **Analyze the Certificate**:
   - Look for the "Issuer" field in the output to determine who issued the certificate.
   - Compare the issuer against the list of trusted root certificates on your Exchange server.

### Example Output

Here is an example of what the output might look like:

```plaintext
CONNECTED(00000003)
depth=2 C = US, O = DigiCert Inc, OU = www.digicert.com, CN = DigiCert Global Root CA
verify return:1
depth=1 C = US, O = DigiCert Inc, CN = DigiCert SHA2 Secure Server CA
verify return:1
depth=0 CN = mail.example.com
verify return:1
---
Certificate chain
 0 s:/CN=mail.example.com
   i:/C=US/O=DigiCert Inc/CN=DigiCert SHA2 Secure Server CA
 1 s:/C=US/O=DigiCert Inc/CN=DigiCert SHA2 Secure Server CA
   i:/C=US/O=DigiCert Inc/OU=www.digicert.com/CN=DigiCert Global Root CA
 2 s:/C=US/O=DigiCert Inc/OU=www.digicert.com/CN=DigiCert Global Root CA
   i:/C=US/O=DigiCert Inc/OU=www.digicert.com/CN=DigiCert Global Root CA
---
Server certificate
-----BEGIN CERTIFICATE-----
...
-----END CERTIFICATE-----
subject=/CN=mail.example.com
issuer=/C=US/O=DigiCert Inc/CN=DigiCert SHA2 Secure Server CA
---
No client certificate CA names sent
Peer signing digest: SHA256
Server Temp Key: ECDH, P-256, 256 bits
---
SSL handshake has read 3295 bytes and written 404 bytes
Verification: OK
---
New, TLSv1/SSLv3, Cipher is ECDHE-RSA-AES256-GCM-SHA384
Server public key is 2048 bit
Secure Renegotiation IS supported
Compression: NONE
Expansion: NONE
No ALPN negotiated
SSL-Session:
    Protocol  : TLSv1.2
    Cipher    : ECDHE-RSA-AES256-GCM-SHA384
    Session-ID: ...
    Session-ID-ctx: 
    Master-Key: ...
    Key-Arg   : None
    PSK identity: None
    PSK identity hint: None
    SRP username: None
    Start Time: 1635687600
    Timeout   : 7200 (sec)
    Verify return code: 0 (ok)
---
```

### Conclusion

By using OpenSSL, you can manually inspect the remote SMTP server's TLS certificate and gather the necessary information to troubleshoot the validation error. This will help you determine if the issue is related to the certificate authority and take appropriate action to resolve the problem.