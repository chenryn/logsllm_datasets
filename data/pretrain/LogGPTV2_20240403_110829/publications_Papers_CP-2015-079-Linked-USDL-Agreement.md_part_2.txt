followed Linked Data principles [4], allowing our model
In this scenario, where different businesses interact us-
to share and interlink data about service agreements on
ing service-oriented architectures to outsource computing
the Web.
needs, the formalisation of the SLAs that govern business
Linked Data promotes reuse of existing models and
relationship is of outmost importance. Most SLAs are
datasets, facilitating the design of our model and com-
described in natural language at providers’ websites. For
patibility with existing tools. Our approach ensures that
example, the following table shows a typical SLA for
the identified competency questions were answered suc-
Amazon EC2 service commitment6. This information was
cessfully, allowing the complete description of our cloud
written to be processed by humans and not by software.
computing use case, as discussed in Sec. V.
Fig. 1 presents our proposed agreement model. Essen-
Monthly Uptime % ServiceCredit%
tially,anagreementconsistsofasetoftermsthatstatethe
Lessthan99.95%butequaltoorgreater 10%
conditions that are guaranteed under the SLA, and which
than 99.0%
compensations are taken if a certain guarantee is violated.
Less than 99.0% 30%
In the following we describe in detail the most important
Focusingonthisparticularusecaseandtypicalcontents concepts of Linked USDL Agreements.
on other SLAs analysed, we can specify a series of com- AgreementTerm represents a single term of an SLA,
petency questions to devise a semantic vocabulary [15] which could possibly have a precondition that re-
useful for the SLA lifecycle: stricts the situation when the term is enforced. All
Q1: Which functionality and quality levels does a service instancesofthisconceptthatarerelatedtoaconcrete
provide? service offering describe the complete SLA provided
Q2: Which service properties are guaranteed to have with that offering. In particular, we differentiate two
certain values? subtypes of terms that can appear in an agreement,
Q3: Which compensation is obtained if the guaranteed namely guarantees and compensations.
value of a property is not provided? Guarantee represents an agreement term of an SLA
Q4: Who is responsible for enforcing the guaranteed that specifically guarantees certain conditions over
service level values? service properties. This concept is commonly called
Q5: Whoisresponsibleformonitoringandcomputingthe Service Level Objective (SLO) in other SLA mod-
guaranteed values? els. An example of a Guarantee could capture that
Q6: What is the assessment period during which a guar- “Amazon guarantees that the monthly uptime of its
antee is provided? EC2 service will be at least 99.95%”.
Q7: How are service property values computed? Compensation is a specialisation of an agreement term
that represents an alternative term that will be
The design of our semantic model is driven by its
guaranteed in case that the original guarantee
ability to effectively answer these competency questions.
term (associated with the compensation via the
In addition, an agreement model for services has to be
hasCompensation property) is not fulfilled, e.g.
designed for its exploitation on the Web, so that the
“a service credit of 10% will be entitled if the
associatedSLAdocumentsshouldbeeasilyaccessibleand
monthly uptime is less than 99.95% but equal to or
3http://aws.amazon.com/ec2 greater than 99.0%”. Note that this example contains
4http://azure.microsoft.com a precondition on the monthly uptime.
5https://cloud.google.com
6http://aws.amazon.com/ec2/sla/ 7https://github.com/linked-usdl/usdl-agreement
Figure1. LinkedUSDLAgreementmodule
AgreementCondition describes a particular constraint or EntityLiability is an extension of the entity involvement
axiom that can be checked within the terms of an conceptinLinkedUSDLCorethatenablescapturing
SLA. These conditions usually refer to a concrete the liability role that an involved business entity has
service property, constraining their possible values in a particular agreement term, i.e. its responsibility
depending on the actual definition of the condition, with respect to that term. For instance, the provider
e.g.“themonthlyuptimewillbeatleast99.95%”part of a service can act as a guarantor of a particular
of the previous guarantee term example. Our vocab- guarantee,beingresponsibleofthefulfillmentofthat
ulary offers some pre-defined facilities for common guarantee, while the consumer can be considered to
axiomtypes,includingconcreteguaranteedvalues(as have a beneficiary role in a compensation since they
in the previous compensation example), maximums, will benefit from it.
minimums, and intervals. However, arbitrary axioms LinkedUSDLAgreementprovidesasimpleSKOS8tax-
using domain-specific languages to describe condi- onomy of liability roles, including the basic Guarantor
tions can be also included using rdf:value. and Beneficiary already discussed, but can be easily
ServiceProperty is a convenience class that allows an extended depending on the use case. Following this phi-
agreement condition to refer to either a qualita- losophy we extended the reference business roles SKOS
tive (e.g., region availability) or a quantitative (e.g., scheme defined in Linked USDL Core module to support
monthly uptime percentage) service property, as de- the identification of the business entities responsible for
fined in GoodRelations vocabulary [9]. evaluating conditions and providing metrics, since these
Metric defines how to measure a particular service prop- roles are usually defined in SLAs.
erty. It is usually defined by a mathematical expres- Apart from the main concepts described previously, we
sion that needs to be computed in order to monitor rely on several external vocabularies following Linked
aconcreteproperty.Forexample,AmazonEC2SLA Data principles. First and foremost, being an extension
describes that “Monthly Uptime Percentage is cal- of Linked USDL, our model builds upon the main
culated by subtracting from 100% the percentage of classes of Linked USDL Core. We show this relation-
minutesduringthemonthinwhichAmazonEC2(...) ship in Fig. 1, where a ServiceOffering is related
was in the state of Region Unavailable.”
8http://www.w3.org/2004/02/skos/core
to its corresponding agreement terms by the property We especially focus on verifying the extent to which
hasAgreementTerm. Each guarantee term is itself Linked USDL Agreement vocabulary can describe the
linked to a particular Service included in the offering terms expressed in the Amazon EC2 SLA, while being
over which the conditions are guaranteed by means of able to answer the listed competency questions.
guaranteedOver property. The Amazon EC2 SLA contains a series of definitions
Indirectly, we also use GoodRelations vocabulary [9] regardingthemonthlyuptimepercentageandtheextentto
through its relationship with Linked USDL Core which it is guaranteed for all the infrastructure provided
module. GoodRelations defines concepts related to byAmazonEC2.IftheSLAisviolated,Amazonhonours
commerce, such as business entities, products and a service credit to the user. First, our vocabulary is able
services. We use the qualitative and quantitative to associate the guarantees of an SLA to the description
service properties from GoodRelations when defining of the service offering which is governing, which in turn
agreement conditions. Thus, an agreement condition is associated with a particular service description that
may refer to a property that is a subproperty of describes its functionality, answering Q1.
gr:quantitativeProductOrServiceProperty The definitions included in the SLA refer to properties
or gr:qualitativeProductOrServiceProper- oftheAmazonEC2servicethatareguaranteed.Therefore,
ty. Correspondingly, the values used in the condition we modelled them using the properties definition from
definition through the hasValue property can GoodRelations, as described in Sec. IV. Q2 can thus be
be instances of gr:QuantitativeValue or answered by querying the model about the properties that
gr:QualitativeValue. are referenced, using for example SPARQL as shown in
TheTimeOntology9isalsointegratedtocovertemporal Listing 1.
properties relevant for the SLA, including the evaluation
andmeasuringintervalsofagreementconditionsandmet- Listing1. Obtainingservicepropertiesrelevanttotheagreement
rics, respectively, as well as the validity period of SLA 1 SELECT ?prop WHERE {
terms [12]. Regarding the metrics support for conditions 2 :amazonEC2ServiceOffering
3 usdl-agreement:hasAgreementTerm ?term .
and service properties, we do not restrict a particular 4 ?term usdl-agreement:guarantees ?conditions .
vocabulary to be used, but we recommend the integration 5 ?conditions usdl-agreement:refersTo ?prop }
with QUDT10 for describing units of measurement, or
SPIN11 for defining the metric expressions, for instance. The main part of the agreement states the guaranteed
value of the monthly uptime percentage. Listing 2 shows
In addition to those vocabularies, we also make use of
Dublin Core12, VANN13 and Friend of a Friend (FOAF)14 how we modelled that service commitment. First, the
guarantee term refers to the concrete service included in
to cover general purpose metadata about the vocabulary
the original service offering over which the guarantee is
itself, such as creators, modification dates, and preferred
applied, as well as the liability of the different entities
namespace prefixes and URIs. Finally, as already dis-
involved in the agreement (Amazon as a provider and an
cussed, we use Simple Knowledge Organization System
abstractcustomerinourexample).Thisinformationabout
(SKOS) vocabulary for creating the classification scheme
the different roles of the entities provides the answers to
for liability roles, similarly as other role schemes defined
both Q4 and Q5.
in Linked USDL Core module.
V. EVALUATION Listing2. Agreementterms
In this section, we evaluate how well Linked USDL 1 :ec2ServiceCommitment a usdl-agreement:Guarantee ;
Agreement fulfills the requirements enumerated in Sec. 2 usdl-agreement:guaranteedOver
3 :ec2M1LargeInstanceType ;
III, validating our model using the introduced cloud 4 usdl-agreement:hasEntityLiability
computing scenario and additional real-world use cases. 5 :liab_customer , :liab_Amazon ;
6 usdl-agreement:guarantees [
Furthermore, we discuss the SLA description coverage 7 a usdl-agreement:MinGuaranteedValue ;
considering the framework proposed in [10]. 8 qudt:unit
9  ;
A. Cloud Computing Service Agreement 10 usdl-agreement:hasEvaluationInterval
11 :monthlyInterval ;
The motivating example described in Sec. III-B served 12 usdl-agreement:hasValue [
13 a gr:QuantitativeValueFloat ;
also a validation purpose in our work. Thus, we tested 14 gr:hasValueFloat "99.95"ˆˆxsd:float ] ;
the suitability of our vocabulary to completely describe 15 usdl-agreement:refersTo
16 :monthlyUptimePercentage ] ;
theSLAofthecloudcomputingproviderAmazonEC215.
17 usdl-agreement:hasCompensation
18 :ec2ServiceCredit30, :ec2ServiceCredit10;
9http://www.w3.org/TR/owl-time 19 usdl-agreement:hasValidityInterval
10http://qudt.org/ 20 :monthlyInterval .
11http://spinrdf.org/spin.html
12http://purl.org/dc/terms/ Second, the guaranteed condition is defined as the min-
13http://purl.org/vocab/vann/ imum value that the :monthlyUptimePercentage
14http://xmlns.com/foaf/0.1/
propertyhastoprovide.Wealsoincludeinourdescription
15The complete description of the use case can be found
thedefinitionofthemetricsusedtocomputethatproperty,
at https://github.com/linked-usdl/usdl-agreement/tree/master/UseCases/
AmazonEC2 relying on external vocabularies and tools to properly
answer Q7. Third, the time intervals where values are Alternatively, the agreement part of a contract needs to
guaranteed or need to be monitored by involved parties besimplifiedandalsoneedstobewrittenusingstructured
are described using intervals modelled with the Time descriptions, as done with the exhibits, to enable an
ontology, covering Q6. automated processing. This approach is being followed
Finally, compensation terms model alternative condi- by major cloud computing providers, such as Amazon,
tions that will take into place in the case that the guar- Google, and Microsoft.
anteed values are not fulfilled (Q3). In the particular case
of Amazon EC2 compensations, the SLA defines two C. Linked USDL Agreement coverage evaluation
compensation levels depending on the final value of the Finally, we evaluate the coverage of Linked USDL
monthly uptime percentage, as shown in Sec. III-B . We Agreementagainstthecomparisonframeworkproposedin
model them adding preconditions to the compensation [10].Thiscomparisonframeworkcomprehends22criteria
terms. grouped by the SLA lifecycle activity in which they are
more relevant. These criteria were used to compare 14
B. Software as a Service Contracts
SLAandServiceContractLanguages.TableIsummarises
To make our evaluation comprehensive, we have also the criteria and shows the evaluation results of Linked
analyzed software as a service agreement contracts that USDLAgreement.Italsodepictshowmanyofthe9SLA
are commonly used in the industry to establish SLAs. languages analysed fulfill each criteria.
Thesepaper-basedcontractsareoftenpreparedbylawyers Linked USDL Agreement fulfills 13 out of the 22 cri-
and require a case-by-case customization. The following teria. The formalism used to define Linked USDL Agree-
illustrative and representative extract of a service agree- mentareontologies.Bothfunctionalandqualitytermscan
ment contract16 describes service level availability. beexpressedinLinkedUSDLAgreementthroughLinked
USDL Core’s ServiceOffering and through the
1) ExhibitA.Definitions
GuaranteeintroducedbyLinkedUSDLAgreement,re-
(a) “Actual Uptime” shall mean the total minutes in the reporting
month that the Services were available to Authorized Users for spectively.ThereusabilityofSLAsisnativetotheLinked
normaluse.
USDL approach. Metric providers and metric schedule
(c)“ScheduledDowntime”shallmean[...]
(d)“ScheduledUptime”shallmeanthetotalminutesinthereporting are modelled including the MetricProvider business
monthlessthetotalminutesrepresentedbytheScheduledDown-
role in an involved entity, and hasMeasuringInter-
time.
2) ServiceLevelStandard.ServiceswillbeavailabletoAuthorizedUsers val of Metric, respectively. The condition evaluator
fornormaluse100%oftheScheduledUptime. can be specified using the corresponding business role
3) Calculation.(ActualUptime/ScheduledUptime)*100=%Uptime[...]