which aggregates DNS trafﬁc received by a large number of
RDNS servers from authoritative name servers across North
America and Europe. In total, the SIE project processes ap-
proximately 200 Mbit/s of DNS messages, several times the
total volume of DNS trafﬁc in a single US ISP.
Another source of information we use is a list of known
malicious domains. For example, we run known malware
samples in a controlled environment and we classify as sus-
picious all the domains contacted by malware samples that do
not match a pre-compiled white list. In addition, we extract
suspicious domain names from spam emails collected using a
large spam-trap. Again, we discard the domains that match
our whitelist and consider the rest as potentially malicious.
Furthermore, we collect a large list of popular, legitimate do-
mains from alexa.com (we discuss our data collection and
analysis in more details in Section 4). The set of known mali-
cious and legitimate domains represents our knowledge base,
and is used to train our reputation engine, as we discuss in
Section 4.
Intuitively, a domain name d can be considered suspicious
when there is evidence that d or its IP addresses are (or were in
previous months) associated with known malicious activities.
The more evidence of “bad associations” we can ﬁnd about
d, the lower the reputation score we will assign to it. On the
other hand, if there is evidence that d is (or was in the past) as-
sociated with legitimate, professionally run Internet services,
we will assign it a higher reputation score.
3.1 System Overview
Before describing the internals of our reputation sys-
tem, we introduce some basic terminology. A domain
name d consists of a set of substrings or labels sepa-
rated by a period;
the rightmost label is called the top-
level domain, or TLD. The second-level domain (2LD)
represents the two rightmost
labels separated by a pe-
riod; the third-level domain (3LD) analogously contains the
three rightmost labels, and so on. As an example, given
the domain name d=“a.b.example.com”, T LD(d)=“com”,
2LD(d)=“example.com”, and 3LD(d)=“b.example.com”.
Let s be a domain name (e.g., s=“example.com”). We de-
ﬁne Zone(s) as the set of domains that include s and all do-
main names that end with a period followed by s (e.g., do-
mains ending in “.example.com”).
Let D = {d1, d2, ..., dm} be a set of domain names. We
Figure 1. System overview.
Figure 2. Computing network-based, zone-based,
evidence-based features.
call A(D) the set of IP addresses ever pointed to by any do-
main name d ∈ D.
(cid:83)
Given an IP address a, we deﬁne BGP (a) to be the set
of all IPs within the BGP preﬁx of a, and AS(a) as the set
of IPs located in the autonomous system in which a resides.
In addition, we can extend these functions to take as input
a set of IPs: given IP set A = a1, a2, ..., aN , BGP (A) =
k=1..N BGP (ak); AS(a) is similarly extended.
To assign a reputation score to a domain name d we proceed
as follows. First, we consider the most current set Ac(d) =
{ai}i=1..m of IP addresses to which d points. Then, we query
our pDNS database to retrieve the following information:
• Related Historic IPs (RHIPs), which consist of the union
of A(d), A(Zone(3LD(d))), and A(Zone(2LD(d))).
In order to simplify the notation we will refer to
A(Zone(3LD(d))) and A(Zone(2LD(d))) as A3LD(d)
and A2LD(d), respectively.
• Related Historic Domains (RHDNs), which comprise the
entire set of domain names that ever resolved to an IP
address a ∈ AS(A(d)). In other words, RHDNs contain
all the domains di for which A(di) ∩ AS(A(d)) 6= ∅.
After extracting the above information from our pDNS
database, we measure a number of statistical features. Specif-
ically, for each domain d we extract three groups of features,
as shown in Figure 2:
• Network-based features: The ﬁrst group of statistical
features is extracted from the set of RHIPs. We measure
quantities such as the total number of IPs historically as-
sociated with d, the diversity of their geographical loca-
tion, the number of distinct autonomous systems (ASs)
in which they reside, etc.
• Zone-based features: The second group of features we
extract are those from the RHDNs set. We measure the
average length of domain names in RHDNs, the number
of distinct TLDs, the occurrence frequency of different
characters, etc.
• Evidence-based features: The last set of features in-
cludes the measurement of quantities such as the number
of distinct malware samples that contacted the domain d,
the number of malware samples that connected to any of
the IPs pointed by d, etc.
Once extracted, these statistical features are fed to the
reputation engine. Notos’ reputation engine operates in two
modes: an off-line “training” mode and an on-line “classiﬁca-
tion” mode. During the off-line mode, Notos trains the repu-
tation engine using the information gathered in our knowledge
base, namely the set of known malicious and legitimate do-
main names and their related IP addresses. Afterwards, during
the on-line mode, for each new domain d, Notos queries the
trained reputation engine to compute a reputation score for d
(see Figure 3). We now explain the details about the statistical
features we measure, and how the reputation engine uses them
during the off-line and on-line modes to compute a domain
names’ reputation score.
3.2 Statistical Features
In this section we identify key statistical features and the
intuition behind their selection.
3.2.1 Network-based Features
Given a domain d we extract a number of statistical features
from the set RHIPs of d, as mentioned in Section 3.1. Our
network-based features describe how the operators who own d
and the IPs that domain d points to, allocate their network re-
sources. Internet miscreants often abuse DNS to operate their
malicious networks with a high level of agility. Namely, the
SubnetSubnetSubnetSubnetSubnetPassive DNSDatabaseReputation EngineDynamicReputation ScoresISP RecursiveDNS Server (Atlanta)ISP RecursiveDNS Server(SJC)S.I.EInternetNotosResource Record (RR)Domain Name - IPpDNS QuerypDNSBlack ListHoneypotDataNetwork Based Feature ExtractionZone Based Feature ExtractionF1F2F3...F18F1F2F3...F17Network Based Features VectorZone Based Features VectorF1F2F3...F6Evidence Based Feature ExtractionEvidence Based Features VectorReputation Engine(a)
(b)
Figure 3. Off-line and on-line modes in Notos.
domain names and IPs that are used for malicious purposes
are often short-lived and are characterized by a high churn
rate. This agility avoids simple blacklisting or removals by
law enforcement. In order to measure the level of agility of
a domain name d, we extract eighteen statistical features that
describe d’s network proﬁle. Our network features fall into the
following three groups:
• BGP features. This subset consists of a total of nine fea-
tures. We measure the number of distinct BGP preﬁxes
related to BGP (A(d)), the number of countries in which
these BGP preﬁxes reside, and the number of organiza-
tions that own these BGP preﬁxes; the number of distinct
IP addresses in the sets A3LD(d) and A2LD(d); the num-
ber of distinct BGP preﬁxes related to BGP (A3LD(d))
and BGP (A2LD(d)), and the number of countries in
which these two sets of preﬁxes reside.
• AS features. This subset consists of three features,
namely the number of distinct autonomous systems re-
lated to AS(A(d)), AS(A3LD(d)), and AS(A2LD(d)).
• Registration features. This subset consists of six features.
We measure the number of distinct registrars associated
with the IPs in the A(d) set; the diversity in the regis-
tration dates related to the IPs in A(d); the number of
distinct registrars associated with the IPs in the A3LD(d)
and A2LD(d) sets; and the diversity in the registration
dates for the IPs in A3LD(d) and A2LD(d).
While most legitimate, professionally run Internet services
have a very stable network proﬁle, which is reﬂected into low
values of the network features described above, the proﬁles of
malicious networks (e.g., fast-ﬂux networks) usually change
relatively frequently, thus causing their network features to be
assigned higher values. We expect a domain name d from a
legitimate zone to exhibit a small values in its AS features,
Figure 4. (a) Network proﬁle modeling in Notos.
(b) Network and zone based clustering in Notos.
mainly because the IPs in the RHIPs should belong to the
same organization or a small number of different organiza-
tions. On the other hand, if a domain name d participates in
malicious activities (i.e., botnet activities, ﬂux networks), then
it could reside in a large number of different networks. The list
of IPs in the RHIPs that correspond to the malicious domain
name will produce AS features with higher values. In the same
sense, we measure that homogeneity of the registration infor-
mation for benign domains. Legitimate domains are typically
linked to address space owned by organizations that acquire
and announce network blocks in some order. This means that
the registration-feature values for a legitimate domain name
d that owned by the same organizations will produce a list of
IPs in the RHIPs that will have small registration feature val-
ues. If this set of IPs exhibits high registration feature values,
it means that they very likely reside in different registrars and
were registered on different dates. Such registration-feature
properties are typically linked with fraudulent domains.
3.2.2 Zone-based Features
The network-based features measure a number of characteris-
tics of IP addresses historically related to a given domain name
d. On the other hand, the zone-based features measure the
characteristics of domain names historically associated with
d. The intuition behind the zone-based features is that while
legitimate Internet services may be associated with many dif-
ferent domain names, these domain names usually have strong
similarities. For example, google.com, googlesyndi-
cation.com, googlewave.com, etc., are all related to
Internet services provided by Google, and contain the string
“google” in their name. On the other hand, malicious domain
names related to the same spam campaign, for example, often
look randomly generated and share few common characteris-
tics. Therefore, our zone-based features aim to measure the
d`Off-Line "Training" ModePassive DNS DBNetwork & Zone ClusteringNetwork Proﬁle ModelingTrain ReputationFunctionNetwork & Zone AssigmentReputation AssignmentNetwork Proﬁle ClassiﬁcationNew RROn-Line ModeCompute VectorsDynamic Reputation RatingEV(d`)DC(d`)NM(d`)EV(d)DC(d)NM(d)f(d')dNetwork Based Vectors2-Class MetaClassiﬁerClassiﬁcationConﬁdencesdNM(d)Network Based VectorsNetwork Based ClusteringdZone Based VectorsZone Based ClusteringDC(d)Radius(R) & KNN(z)Cluster Characterizationlevel of diversity across the domain names in the RHDNs set.
Given a domain name d, we extract seventeen statistical fea-
tures that describe the properties of the set RHDNs of domain
names related to d. We divide these seventeen features into
two groups:
• Blacklist features. We measure three features, namely the
number of IP addresses in A(d) that are listed in public
IP blacklists; the number of IPs in BGP (A(d)) that are
listed in IP blacklists; and the number of IPs in AS(A(d))
that are listed in IP blacklists.
• String features. This group consists of twelve features.
We measure the number of distinct domain names in
RHDNs, and the average and standard deviation of their
length; the mean, median, and standard deviation of the
occurrence frequency of each single character in the do-
main name strings in RHDNs; the mean, median and
standard deviation of the distribution of 2-grams (i.e.,
pairs of characters); the mean, median and standard devi-
ation of the distribution of 3-grams.
• TLD features. This group consists of ﬁve features. For
each domain di in the RHDNs set, we extract its top-level
domain T LD(di) and we count the number of distinct
TLD strings that we obtain; we measure the ratio between
the number of domains di whose T LD(di)=“.com” and
the total number of TLD different from “.com”; also, we
measure the mean, median, and standard deviation of the
occurrence frequency of the TLD strings.
It is worth noting that whenever we measure the mean, me-
dian and standard deviation of a certain property, we do so in
order to summarize the shape of its distribution. For exam-
ple, by measuring the mean, median, and standard deviation
of the occurrence frequency of each character in a set of do-
main name strings, we summarize how the distribution of the
character frequency looks like.
3.2.3 Evidence-based Features
We use the evidence-based features to determine to what ex-
tent a given domain d is associated with other known mali-
cious domain names or IP addresses. As mentioned above,
Notos collects a knowledge base of known suspicious, ma-
licious, and legitimate domain names and IPs from public
sources. For example, we collect malware-related domain
names by executing large numbers of malware samples in a
controlled environment. Also, we check IP addresses against
a number of public IP blacklists. We elaborate on how we
build Notos’ knowledge base in Section 4. Given a domain
name d, we measure six statistical features using the informa-
tion in the knowledge base. We divide these features into two
groups:
• Honeypot features. We measure three features, namely
the number of distinct malware samples that, when ex-
ecuted, try to contact d or any IP address in A(d); the
number of malware samples that contact any IP address
in BGP (A(d)); and the number of samples that contact
any IP address in AS(A(d)).
Notos uses the blacklist features from the evidence vector
so it can identify the re-use of known malicious network re-
sources like IPs, BGP preﬁxes or even ASs. Domain names
are signiﬁcantly cheaper than IPv4 addresses; so malicious
users tend to reuse address space with new domain names. We
should note that the evidence-based features represent only
part of the information we used to compute the reputation
scores. The fact that a domain name was queried by malware
does not automatically mean that the domain will receive a
low reputation score.
3.3 Reputation Engine
Notos’
reputation engine is responsible for deciding
whether a domain name d has characteristics that are simi-
lar to either legitimate or malicious domain names. In order
to achieve this goal, we ﬁrst need to train the engine to rec-
ognize whether d belongs (or is “close”) to a known class of