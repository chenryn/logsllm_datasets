### Configuration of Apache 2, MySQL, and PHP

Apache 2 stores its configuration files in the `/etc/apache2` directory. The primary configuration file, `apache2.conf`, contains general settings. Another important file, `ports.conf`, also located in the same directory, manages TCP/IP connection settings.

You can edit these files using any text editor, such as `nano` from the terminal or `Leafpad` from LXDE.

- **MySQL Configuration**: Settings are stored in `/etc/mysql/my.cnf`.
- **PHP Configuration**: Settings are stored in `/etc/php5/apache2/php.ini`.

### Transferring Content to Your Web Server

The workflow for authoring websites varies among developers. For static sites, a plain text editor is sufficient for creating HTML files. For data-driven applications, such as PHP apps that interact with a MySQL database, more comprehensive web authoring tools may be necessary.

#### Using SFTP to Transfer Content to Your Pi

1. **Open FileZilla** and click `File > Site Manager` to open the Site Manager.
2. **Create a New Site** and give it an appropriate name.
3. **Fill in the Connection Details**:
   - **Host**: IP address of your Pi.
   - **Protocol**: Select `SFTPâ€“SSH File Transfer Protocol`.
   - **Logon Type**: Set to `Normal`.
   - **User**: Specify the user (e.g., `pi`).
   - **Password**: Enter the current password for the chosen account.
4. **Connect** to save and establish the connection.
5. **Navigate to the `/var/www` directory** on your Pi.
6. **Drag and drop** your content into the target directory.
7. **Disconnect** when done.

**Note**: SFTP is recommended over traditional FTP due to its encryption, which ensures secure data transmission.

#### Installing and Testing FTP on Your Raspberry Pi

If you prefer to use FTP, follow these steps:

1. **Install vsftpd**:
   ```sh
   sudo apt-get install vsftpd
   ```
2. **Edit the vsftpd configuration file**:
   ```sh
   sudo nano /etc/vsftpd.conf
   ```
   Uncomment the following lines:
   ```sh
   anonymous_enable=NO
   local_enable=YES
   write_enable=YES
   ascii_upload_enable=YES
   ascii_download_enable=YES
   ```
3. **Save and exit** the file (`Ctrl+O` to save, `Ctrl+X` to exit).
4. **Restart the vsftpd service**:
   ```sh
   sudo /etc/init.d/vsftpd restart
   ```
5. **Test the FTP server** using FileZilla, selecting `FTP - File Transfer Protocol` in the Site Manager.

### Setting Up phpMyAdmin

phpMyAdmin is a web-based tool for managing MySQL databases. It provides a graphical interface and is suitable for running on the Raspberry Pi.

#### Installing phpMyAdmin

1. **Download and install phpMyAdmin**:
   ```sh
   sudo apt-get install phpmyadmin
   ```
2. **Select `apache2`** as the web server during the installation.
3. **Choose to install the `phpmyadmin` database**.
4. **Enter the MySQL root password** and set a new phpMyAdmin administrator password.
5. **Link Apache to phpMyAdmin**:
   ```sh
   sudo nano /etc/apache2/apache2.conf
   ```
   Add the following line at the end of the file:
   ```sh
   Include /etc/phpmyadmin/apache.conf
   ```
6. **Restart Apache**:
   ```sh
   sudo /etc/init.d/apache2 restart
   ```
7. **Test phpMyAdmin** by navigating to `http://localhost/phpmyadmin` in your web browser.

### Setting Up Joomla

Joomla is a popular content management system (CMS) that can be used to build various types of websites, including corporate sites, blogs, and galleries.

#### Installing Joomla

1. **Download the latest version of Joomla** from the official website.
2. **Unpack the Joomla contents** to the default Apache directory:
   ```sh
   cd
   sudo unzip joomla.zip -d /var/www
   ```
   Replace `joomla.zip` with the actual filename.
3. **Tweak the PHP configuration**:
   ```sh
   sudo nano /etc/php5/apache2/php.ini
   ```
   Search for `output_buffering` and set both `Development Value` and `Production Value` to `0`.
4. **Reboot the Pi**:
   ```sh
   sudo reboot
   ```
5. **Create the Joomla configuration file** and make it writable:
   ```sh
   cd /var/www
   sudo touch configuration.php
   sudo chmod 777 configuration.php
   ```
6. **Complete the installation** via a web browser by navigating to `http://localhost`.
7. **Follow the initial configuration wizard** to set up your site.
8. **Delete the installation folder** for security:
   ```sh
   cd /var/www
   sudo rm -rf installation/
   ```

### Putting Your Web Server on the Public Internet

To make your Raspberry Pi web server accessible from the public internet, follow these steps:

1. **Configure a static IP address** for your Pi.
2. **Use a dynamic DNS service** like No-IP or DynDNS.

#### Making Your Raspberry Pi Publicly Accessible with No-IP

1. **Create a subdirectory** for the No-IP client:
   ```sh
   cd
   mkdir noip
   cd noip
   ```
2. **Download the No-IP DUC software**:
   ```sh
   wget http://www.no-ip.com/client/linux/noip-duc-linux.tar.gz
   ```
3. **Unpack and navigate into the new folder**:
   ```sh
   tar vzxf no-ip-duc-linux.tar.gz
   ls no*
   cd noip-2.1.9-1
   ```
4. **Compile and install the software**:
   ```sh
   sudo make
   sudo make install
   ```
   Enter your No-IP credentials and set a refresh interval.
5. **Run the No-IP client**:
   ```sh
   sudo /usr/local/bin/noip2
   ```
6. **Set up port forwarding** on your router to forward traffic on TCP port 80 to your Raspberry Pi's internal IP address.
7. **Test the public IP** by accessing your Joomla site from a remote network.

For detailed instructions on setting up the No-IP client to run at startup, refer to the tutorial at [Stuff About Code](http://is.gd/VVolQr).

### Chapter 16: Raspberry Pi Portable Webcam

In this chapter, you will learn how to take still pictures and record video with your Raspberry Pi. This can be useful for time-lapse photography, baby monitors, security cameras, and more.

#### About the Raspberry Pi Camera Board

The Model A and Model B boards include a Camera Serial Interface 2 (CSI-2) connector, labeled S5, between the USB and HDMI ports. The Raspberry Pi Foundation introduced the $25 Raspberry Pi Camera Board, which connects to this interface.

- **Purchase the Raspberry Pi Camera Board** from:
  - RS Components: [http://is.gd/6ol2Gq](http://is.gd/6ol2Gq)
  - Premier Farnell/Element 14: [http://is.gd/xJSkbQ](http://is.gd/xJSkbQ)

This chapter will cover how to use the Raspberry Pi Camera Board and third-party USB webcams, as well as how to power your setup with batteries for portability.