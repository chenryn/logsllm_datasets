• Identify the goal of the scan before testing and send the minimum number
of packets needed to determine the objective. For example, if you wish to
confirm the presence of a web host, you first need to determine if port 80 ,
the default port for web-based services, is open.
• Avoid scans that may connect with the target system and leak data. Do not
ping the target or use synchronize (SYN) and nonconventional packet scans,
such as acknowledge (ACK), finished (FIN), and reset (RST) packets.
• Randomize or spoof packet settings, such as the source IP and port address,
and the MAC address.
• Adjust the timing to slow the arrival of packets at the target site.
• Change the packet size by fragmenting packets or appending random data to
confuse packet inspection devices.
For example, if you want to conduct a stealthy scan and minimize detection, the
following nmap command could be used:
#nmap --spoof-mac- Cisco --data-length 24 –T paranoid –max-hostgroup
1 – max-parallelism 10 -PN -f –D 10.1.20.5,RND:5,ME --v –n –sS
–sV–oA /desktop/pentest/nmap/out –p T:1-1024
–random-hosts 10.1.1.10 10.1.1.15
The following table explains the previous command in detail:
Command Rationale
--spoof-mac-Cisco Spoofs the MAC address to match a Cisco product.
Replacing Cisco with 0 will create a completely
random MAC address.
--data-length 24 Appends twenty-four random bytes to most packets
that are sent.
-T paranoid Sets the time to the slowest setting—paranoid.
[ 68 ]
Chapter 3
Command Rationale
-- max-hostgroup Limits the hosts that are scanned at a time.
-- max-parallelism Limits the number of outstanding probes that are
sent out. You can also use the --scan-delay
option to set a pause between the probes; however,
this option is not compatible with the --max_
parallelism option.
-PN Does not ping to identify active systems
(this can leak data).
-f Fragments the packets; this will frequently fool
low-end and improperly configured IDs.
-D 10.1.20.5, RND:5,ME Creates decoy scans to run simultaneously with the
attacker's scans; hides the actual attack.
-n No DNS resolution; internal or external DNS
servers are not actively queried by nmap for DNS
information. Such queries are frequently logged, so
the query function should be disabled.
-sS Conducts a stealth TCP SYN scan, which does not
complete the TCP handshake. Other scan types
(for example, Null scans) can also be used; however,
most of these will trigger detection devices.
-sV Enables version detection.
-oA /desktop/pentest/nmap Outputs the results to all formats (normal, greppable,
and XML).
-p T:1-1024 Specifies the TCP ports to be scanned.
-- random-hosts Randomizes the target host order.
Together, these options will create a very slow scan that hides the true identity of
the source. However, if the packets are too unusual, complex modification may
actually attract the attention of the target; therefore, many testers and attackers use
anonymity networks to minimize detection.
Using proxies with anonymity networks
(Tor and Privoxy)
Tor (www.torproject.org) is an open source implementation of the third
generation onion routing that provides free access to an anonymous proxy network.
Onion routing enables online anonymity by encrypting user traffic and then
transmitting it through a series of onion routers. At each router, a layer of encryption
is removed to obtain routing information, and the message is then transmitted to the
next node. It has been likened to the process of gradually peeling an onion, hence
the name. It protects against traffic analysis attacks by guarding the source and
destination of a user's IP traffic.
[ 69 ]
Active Reconnaissance and Vulnerability Scanning
In this example, Tor will be used with Privoxy, a noncaching web proxy that sits in
the middle of an application that communicates with the Internet, and uses advanced
filtering to ensure privacy and remove ads and potentially hostile data being sent to
the tester.
To install Tor, perform the following steps:
1. Issue the apt-get update and apt-get upgrade commands, and then use
the following command:
apt-get install tor
2. Once Tor is installed, edit the Proxychains.conf file located in the
/etc directory.
This file dictates the number and order of proxies that the test system will
use on the way to the Tor network. proxy servers may be down, or they
may be experiencing a heavy load (causing slow or latent connections); if
this occurs, a defined or strict proxychain will fail because an expected link
is missing. Therefore, disable the use of strict_chains and enable
dynamic_chains, which ensures that the connection will be routed, as
shown in the following screenshot:
[ 70 ]
Chapter 3
3. Next, edit the [ProxyList] section to ensure that the socks5 proxy is
present, as shown in the following screenshot:
Open proxies can be easily found online and added to the proxychains
file. Testers can take advantage of this to further obfuscate their identity.
For example, if there are reports that a certain country or block of IP
addresses has been responsible for recent online attacks, look for open
proxies from that location and add them to your list, or a separate
configuration file.
4. To start the Tor service from a terminal window, enter the
following command:
root@kali:~# service tor start
5. Verify that Tor has started by using the following command:
root@kali:~# service tor status
6. It is important to verify that the Tor network is working and providing
anonymous connectivity. Verify your source IP address first. From a
terminal, enter the following command:
root@kali:~# iceweasel www.whatismyip.com
This will start the Iceweasel browser and open it to a site that provides the
source IP address connected with that web page. Note the IP address, and
then invoke Tor routing using the following proxychains command:
root@kali:~# proxychainsiceweasel www.whatismyip.com
[ 71 ]
Active Reconnaissance and Vulnerability Scanning
In this particular instance, the IP address was identified as 96.47.226.60. A whois
lookup of that IP address from a terminal window indicates that the transmission is
now exiting from a Tor exit node, as shown in the following screenshot:
You can also verify that Tor is functioning properly by accessing
https://check.torproject.org.
Although communications are now protected using the Tor network, it is possible for
a DNS leak, which occurs when your system makes a DNS request to provide your
identity to an ISP. You can check for DNS leaks at www.dnsleaktest.com.
When you test for a DNS leak, Kali's configuration of proxychains responds with a
default source IP address of a Level 3 Communications server located in the United
States, as shown in the following screenshot. This provides additional protection for
the tester's identity.
[ 72 ]
Chapter 3
Most command lines can be run from the console using proxychains to access the
Tor network.
When using Tor, some considerations to be kept in mind are as follows:
• Tor provides an anonymizing service, but it does not guarantee privacy.
Owners of the exit nodes are able to sniff traffic, and reportedly may be able
to access user credentials.
• Vulnerabilities in the Tor Browser Bundle have reportedly been used by law
enforcement to exploit systems and gain user information.
• ProxyChains does not handle UDP traffic.
• Some applications and services cannot run over this environment—in
particular, Metasploit and nmap may break. The stealth SYN scan of nmap
breaks out of proxychains and the connect scan is invoked instead; this can
leak information to the target.
• Some browser applications (ActiveX, Adobe's PDF applications, Flash, Java,
RealPlay, and QuickTime) can be used to obtain your IP address.
• Ensure that you clear and block cookies before browsing.
The Tor-Buddy script allows you to control how frequently the Tor IP
address is refreshed, automatically making it more difficult to identify
the user's information (http://sourceforge.net/projects/linuxscripts/
files/Tor-Buddy/).
Identifying the network infrastructure
Once the tester's identity is protected, identifying the devices on the Internet-
accessible portion of the network is the next critical first step in scanning a network.
Attackers and penetration testers use this information to do the following:
• Identify devices that may confuse (load balancers) or eliminate
(firewalls and packet inspection devices) test results
• Identify devices with known vulnerabilities
• Identify the requirement for continuing to implement stealthy scans
• Gain an understanding of the target's focus on secure architecture and
on security in general
[ 73 ]
Active Reconnaissance and Vulnerability Scanning
traceroute provides basic information on packet filtering abilities; some other
applications on Kali include the following:
Application Description
lbd Uses two DNS- and HTTP-based techniques to detect load balancers
(shown in the following screenshot)
miranda.py Identifies universal plug-and-play and UPNP devices
nmap Detects devices and determines the operating systems and their version
SHODAN Web-based search engine that identifies devices connected to
the Internet, including those with default passwords, known
misconfigurations, and vulnerabilities
The following screenshot shows the results obtained on running the lbd script
against Google; as you can see, Google uses both DNS-Loadbalancing as well
as HTTP-Loadbalancing on its site. From a penetration tester's perspective, this
information could be used to explain why spurious results are obtained, as the load
balancer shifts a particular tool's activity from one server to another.
[ 74 ]
Chapter 3
Enumerating hosts
Host enumeration is the process of gaining specific particulars regarding a defined
host. It is not enough to know that a server or wireless access point is present;
instead, we need to expand the attack surface by identifying open ports, the base
operating system, services that are running, and supporting applications.
This is highly intrusive and unless care is taken, the active reconnaissance will be
detected and logged by the target organization.
Live host discovery
The first step is to run network ping sweeps against a target address space and look
for responses that indicate that a particular target is live and capable of responding.
Historically, pinging referred to the use of ICMP; however, TCP, UDP, ICMP, and
ARP traffic can also be used to identify live hosts.
Various scanners can be run from remote locations across the Internet to identify live
hosts. Although the primary scanner is nmap, Kali provides several other applications
that are also useful, as shown in the following table:
Application Description
alive6 and detect-new-ip6 IPv6 host detection. detect-new-ip6 runs on a
scripted basis and identifies new IPv6 devices when
added.
dnmap and nmap nmap is the standard network enumeration tool.
dnmap is a distributed client-server implementation
of the nmap scanner.
PBNJ stores nmap results in a database, and then
conducts historical analyses to identify new hosts.
fping, hping2, hping3, and Packet crafters that respond to targets in various
nping ways to identify live hosts
To the penetration tester or attacker, the data returned from live host discovery will
identify the targets for attack.
[ 75 ]
Active Reconnaissance and Vulnerability Scanning
Run multiple host discovery scans while conducting a penetration test.
Certain devices may be time dependent. During one penetration test,
it was discovered that the system administrator set up a game server
after regular business hours. Because it was not an approved business
system, the administrator did not follow the normal process for securing
the server; multiple vulnerable services were present, and it had not
received necessary security patches. Testers were able to compromise the
game server and gain access to the underlying corporate network using
vulnerabilities in the administrator's game server.
Port, operating system, and service
discovery
Kali provides several different tools useful for identifying open ports, operating
systems, and installed services on remote hosts. The majority of these functions
can be completed using nmap. Although we will focus on examples using nmap,
the underlying principles apply to the other tools as well.
Port scanning
Port scanning is the process of connecting to TCP and UDP ports to determine what
services and applications are running on the target device. There are 65,535 ports
each for both TCP and UDP on each system. Some ports are known to be associated
with particular services (TCP 20 and 21 are the usual ports for the file transfer
protocol service (FTP)). The first 1,024 are the well-known ports, and most defined
services run over ports in this range; accepted services and ports are maintained
by IANA (http://www.iana.org/assignments/service-names-port-numbers/
service-names-port-numbers.xhtml).
Although there are accepted ports for particular services, such as port
80 for web-based traffic, services can be directed to use any port. This
option is frequently used to hide particular services, particularly if
the service is known to be vulnerable to attack. However, if attackers
complete a port scan and do not find an expected service, or find it
using an unusual port, they will be prompted to investigate further.
The universal port mapping tool, nmap, relies on active stack fingerprinting.
Specially crafted packets are sent to the target system, and the response of the OS
to those packets allows nmap to identify the OS. In order for nmap to work, at least
one listening port must be open, and the operating system must be known and
fingerprinted, with a copy of that fingerprint in the local database.
[ 76 ]
Chapter 3
Using nmap for port discovery is very noisy—it will be detected and logged by
network security devices. Some points to remember are as follows:
• Attackers and penetration testers focused on stealth will test only the ports
that impact the kill chain they are following to their specific target. If they
are launching an attack that exploits vulnerabilities in a web server, they will
search for targets with port 80 or port 8080 accessible.
• Most port scanners have default lists of ports that are scanned—ensure that
you know what is on that list and what has been omitted. Consider both TCP
and UDP ports.
• Successful scanning requires a deep knowledge of TCP/IP and related
protocols, networking, and how particular tools work. For example, SCTP
is an increasingly common protocol on networks, but it is rarely tested on
corporate networks.
• Port scanning, even when done slowly, can impact a network. Some older
network equipment and equipment from specific vendors will lock when
receiving or transmitting a port scan, thus turning a scan into a denial of
service attack.
• Tools used to scan a port, particularly nmap, are being extended with regards
to functionalities. They can also be used to detect vulnerabilities and exploit
simple security holes.
Fingerprinting the operating system
Determining the operating system of a remote system is conducted using two types
of scans:
• Active fingerprinting: The attacker sends normal and malformed packets to
the target and records its response pattern, referred to as the fingerprint. By
comparing the fingerprint to a local database, the operating system can be
determined.
• Passive fingerprinting: The attacker sniffs, or records and analyses the packet
stream to determine the characteristics of the packets.
Active fingerprinting is faster and more accurate than passive fingerprinting. In Kali,
the two primary active tools are nmap and xprobe2.
[ 77 ]
Active Reconnaissance and Vulnerability Scanning
The nmap tool injects packets into the target network and analyses the response that
it receives. In the following screenshot, the -O flag commands nmap to determine
the operating system. Because it injects the packet into the target, the accuracy of
the determination of the operating system by nmap is based on the number of open
ports. It is usually effective at differentiating Windows from Unix systems, but it may
not provide very specific information, such as differentiating between various Unix
kernels. The following screenshot shows results from an nmap scan of a Windows
system. Only a few ports on the target system are available for testing, so it cannot
differentiate between Windows 7 enterprise and Windows XP sp3
A related program, xprobe2, uses different TCP, UDP, and ICMP packets to bypass
firewalls and avoid detection by IDS/IPS systems. xprobe2 also uses fuzzy pattern
matching—the operating system is not identified as definitely being one type;
instead, it is assigned the probability of being one of several possible variants.
As you can see in the following screenshot, this allows the tester to test
vulnerabilities that are specific to the operating system variants; this specificity
increases the chances of success and minimizes the risks that can occur when an
exploit is attempted with the wrong tool.
[ 78 ]
Chapter 3
Note that it is simple for the target system to hide the true operating system. Since
fingerprinting software relies on packet setting, such as time-to-live or the initial
windows size, changes to these values or other user-configurable settings can change
the tool results. Some organizations actively change these values to make the final
stages of reconnaissance more difficult.
Determining active services
The final goal of the enumeration portion of reconnaissance is to identify the
services and applications that are operational on the target system. If possible, the
attacker would want to know the service type, vendor, and version to facilitate the
identification of any vulnerability.
The following are some of the several techniques used to determine active services:
• Identify default ports and services: If the remote system is identified as
having a Microsoft operating system with port 80 open (the WWW service),
an attacker may assume that a default installation of Microsoft IIS is installed.
Additional testing will be used to verify this assumption (nmap).
• Banner grabbing: This is done using tools such as amap, netcat, nmap,
and Telnet.
• Review default web pages: Some applications install with default
administration, error, or other pages. If attackers access these, they will
provide guidance on installed applications that may be vulnerable to attack.
In the following screenshot, the attacker can easily identify the version of
Apache Tomcat that has been installed on the target system.
[ 79 ]
Active Reconnaissance and Vulnerability Scanning
• Review source code: Poorly configured web-based applications may
respond to certain HTTP requests such as HEAD or OPTIONS with a
response that includes the web server software version, and possibly, the
base operating system or the scripting environment in use. In the following
screenshot, netcat is launched from the command line and used to send
raw HEAD packets to a particular website. This request generates an error