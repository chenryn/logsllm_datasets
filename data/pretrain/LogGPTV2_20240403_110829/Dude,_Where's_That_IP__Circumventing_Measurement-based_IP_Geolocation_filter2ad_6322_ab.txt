tion [31], Learning-based Geolocation [9] and CBG [12].
These algorithms differ in how they express the distance-
to-delay function and how they triangulate the position of
the target. GeoPing is based on the observation that hosts
that are geographically close to each other will have de-
lay properties similar to the landmark nodes [19]. Sta-
tistical Geolocation develops a joint probability density
function of distance to delay that is input into a force-
directed algorithm used to geolocate the target [31]. In
contrast, Learning-based Geolocation utilizes a Na¨ıve
Bayes framework to geolocate a target IP given a set of
measurements [9]. CBG has the highest reported accu-
racy of the delay-based algorithms, with a mean error of
78-182 km [12]. The remainder of this section therefore
focuses on CBG to model and evaluate how an adversary
can inﬂuence delay-based geolocation techniques.
CBG [12] establishes the distance-delay function, de-
scribed above, by having the landmarks ping each other
to derive a set of points (gij ,dij ) mapping geographic
distance to network delay. To mitigate the effects of
congestion on network delays, multiple measurements
are made, and the 2.5-percentile of network delays are
used by the landmarks to calibrate their distance-to-delay
mapping. Each landmark then computes a linear (“best
line”) function that is closest to, but below, the set of
points. Distance between each landmark and the target
IP is inferred using the “best line” function. This gives
an implied circle around each landmark where the tar-
get IP may be located. The target IP is then predicted to
be in the region of intersection of the circles of all the
landmarks. Since the result of this process is a feasible
region where the target may be located, CBG determines
the centroid of the region and returns this value as the
geolocation result. Gueye et al. observe a mean error
of 182 km in the US and 78 km in Europe. They also
ﬁnd that the feasible region where the target IP may be
located ranges from 104 km2 in Europe to 105 km2 in
North America.
4.1 Attack on delay-based geolocation
Since delay-based geolocation techniques do not take
network topology into account, the ability of a sophis-
ticated adversary to manipulate network paths is of no
additional value. Against a delay-based geolocation al-
gorithm, the simple and sophisticated adversaries have
equal power.
To mislead delay-based geolocation, the adversary can
manipulate distance of the target computed by the land-
marks by altering the delay observed by each landmark.
The adversary knows the identities and locations of each
landmark and can thus identify trafﬁc from the land-
marks and alter the delay as necessary. To make the tar-
get at the true location, t, appear to be at forged location,
τ , the adversary must alter the perceived delay, dit, be-
Figure 1: Landmarks (PlanetLab nodes) used in evalua-
tion.
Figure 2: Forged locations (τ ) used in the evaluation.
tween each landmark, Li and t to become the delay, diτ ,
each landmark should perceive between Li and τ . To do
this, two problems must be solved. The adversary must
ﬁrst ﬁnd the appropriate delay, diτ , for each landmark
and then change the perceived delay to the appropriate
delay.
If the adversary controls a machine at or near τ , she
may directly acquire the appropriate diτ for each land-
mark by pinging each of the landmarks from the forged
location τ . However, pings to all the landmarks from
a machine not related to the geolocation algorithm may
arouse suspicion. Also, it may not be the case that the
adversary controls a machine at or near τ .
Alternatively, with knowledge of the location of the
landmarks, the adversary can compute the geographic
distances git and giτ between each landmark Li and the
true location t as well as the forged location τ . This en-
ables the adversary to determine the additional distance
a probe from Li would travel (γi = giτ − git) had it ac-
tually been directed to the forged location τ . The next
challenge is to map γi into the appropriate amount of de-
lay to add. To do this, the adversary may use 2/3 the
speed of light in a vacuum (c) as a lower-bound approxi-
mation for the speed of trafﬁc on the Internet [14]. Thus,
the required delay to add to each ping from Li is:
δi =
2 × γi
2/3 × c
(1)
The additional distance the ping from Li would travel is
multiplied by 2 because the delay measured by ping is
the round-trip time as opposed to the end-to-end delay.
This approximation is the lower bound on the delay that
would be required for the ping to traverse the distance
2×γi because the speed of light propagation is the fastest
data can travel between the two points.
Armed with this approximation of the appropriate diτ
for each landmark, the adversary can now increase the
delay of each probe from the landmarks. The perceived
delay cannot be decreased since this would require the
]
x
 dit). For all other landmarks, she
does not alter the delays. Thus, even with perfect knowl-
edge of the delays diτ , neither a simple nor sophisticated
adversary will be able to execute an attack perfectly on
delay-based geolocation techniques.
4.2 Evaluation
We evaluate the effectiveness of our proposed attack
against a simulator that runs the CBG algorithm pro-
posed by Gueye et al. [12]. We collected measurement
inputs for the algorithm using 50 PlanetLab nodes. Each
node takes a turn being the target with the remaining
49 PlanetLab nodes being used as landmarks. Figure 1
shows the locations of the PlanetLab nodes. Each tar-
]
x
<
X
P
[
 1
 0.9
 0.8
 0.7
 0.6
 0.5
 0.4
 0.3
 0.2
 0.1
 0
 0  1000 2000 3000 4000 5000 6000 7000 8000 9000 10000
error for attacker (km)
best-line
SOL delay
best-line (outside N. America)
SOL delay (outside N. America)
Figure 4: CDF of error distance for the adversary when
attacking delay-based geolocation using speed of light
(SOL) or best line delay.
get is initially geolocated using observed network delays.
The target is then moved to 50 forged locations using the
delay-adding attack, shown in Figure 2. We select 40 of
the forged locations based on the location of US univer-
sities and 10 based on the location of universities outside
of North America. This results in a total of 2,500 at-
tempted attacks on the CBG algorithm.
In the delay adding attack, the adversary cannot move
a target that is not within the same region as the land-
marks into that region. For example, if the target is lo-
cated in Europe, moving it to a forged location in North
America would require reducing delay to all landmarks,
which is not possible. This implies that if a geolocation
provider wants to prevent the adversary from moving the
target into a speciﬁc region, it should place their land-
marks in this desired region.
Figure 3 shows the CDF of the distances the adversary
attempts to move the target. In North America, the tar-
get is moved less than 4,000 km most of the time moved
moved less than 1,379 km 50% of the time. Outside of
North America, the distance moved consistently exceeds
5,000 km.
We evaluate the delay-adding attack under two cir-
cumstances: (1) when the adversary knows exactly what
delay to add (by giving the adversary access to the “best
line” function used by the landmarks), and (2) when the
adversary uses the speed of light (SOL) approximation
for the additional delay.
4.2.1 Attack effectiveness
Since the adversary is only able to increase, and not de-
crease, perceived delays, there are errors between the
forged location, τ , and the actual location, r, returned
by the geolocation algorithm. To understand why these
errors exist, consider Figure 5. The arcs labeled g1, g2,
g1
W
g2’
g2
H
T
r
t
g3
g3’
Figure 5: Attacking delay-based geolocation.
and g3 are the circles drawn by 3 landmarks when ge-
olocating the target. The region enclosed by the arcs is
the feasible region, and the geolocation result is the cen-
troid of that region. To move t to τ , the adversary should
increase the radii of g2 and g3 and decrease the radius
of g1. However, as described earlier, delay can only be
added, meaning that the adversary can only increase the
radii of g2 and g3 to g′
3, respectively (shown by the
dotted lines). Since the delay of g1 cannot be decreased,
this results in a larger feasible region with a centroid r
that does not quite reach τ . We call the difference be-
tween the geolocation result (r) and forged location (τ )
the error distance (ε) for the adversary. The difference
between the intended and actual direction of the move is
the angle θ.
2 and g′
We begin by evaluating the error distance, ε. Figure 4
shows the CDF of error for the adversary over the set of
attempted attacks in our evaluation. Within North Amer-
ica, an adversary using the speed of light approximation
has a median error of 1,143 km. When the adversary has
access to the best line function,their error decreases to
671 km. As a reference, 671 km is approximately half the
width of Texas. This indicates that when moving within
North America, it is possible for an adversary with ac-
cess to the best line function to be successful in trying
to move the target into a speciﬁc state. We note that
three of the targets used in our evaluation were located
in Canada. Using the speed of light approximation these
Canadian targets are able to appear in the US 65% of the
time. Using the best line function, they are able to move
into the US 89% of the time.
Outside of North America, the delay-adding attack has
poor accuracy with a minimum error for the adversary of
4,947 km. As a reference, the distance from San Fran-
cisco to New York City is 4,135 km. Error of this magni-
tude is not practical for an adversary attempting to place
the target in a speciﬁc country. For the remainder of this
section, we focus on attacks where the adversary tries
)
m
k
(
r
e
k
c
a
t
t
a
r
o
f
r
o
r
r
e
 5000
 4500
 4000
 3500
 3000
 2500
 2000
 1500
 1000
 500
 0
 0
0.70*x
90-percentile
median
10-percentile
 1000
 2000
 3000
 4000
 5000
 6000
)
m
k
(
r
e
k
c
a
t
t
a
r
o
f
r
o
r
r
e
 5000
 4500
 4000
 3500
 3000
 2500
 2000
 1500
 1000
 500
 0
 0
0.40*x
90-percentile
median
10-percentile
 1000
 2000
 3000
 4000
 5000
 6000
distance of attempted move (km)
distance of attempted move (km)
Figure 6: Error observed by the adversary depending on
distance of their attempted move for the delay-adding at-
tack.
Figure 7: Error observed by the adversary depending on
distance of their attempted move for the delay-adding at-
tack when they have access to the best line function.
to move within North America because the error for the